[00:00:09] *** Quits: foobaz21266 (~foobaz212@152.37.103.80) (Ping timeout: 256 seconds)
[00:01:09] *** Quits: hexa- (~hexa-@juno.lossy.network) (Quit: WeeChat 3.3)
[00:01:49] *** Quits: DPA- (~DPA@2a05:41c0:0:8104::a3c:10d) (Ping timeout: 240 seconds)
[00:01:49] *** Joins: weedmic (~weedmic@93-173-109-49.bb.netvision.net.il)
[00:01:51] <jinsun__> BrokenCog: what do you mean by "blocks of weekdays"? like one week at a time?
[00:01:55] *** Joins: foobaz21266 (~foobaz212@152.37.103.80)
[00:01:56] *** Joins: foobaz21248467 (~foobaz212@152.37.103.80)
[00:01:58] <BrokenCog> right.
[00:02:12] <BrokenCog> specifically one five day business day block at a time.
[00:02:28] *** Joins: hexa- (~hexa-@juno.lossy.network)
[00:02:34] *** Quits: learning_2_learn (~uhanif@cpe-70-122-17-187.austin.res.rr.com) (Remote host closed the connection)
[00:02:47] *** Quits: rpkilby (~rpkilby@c-24-20-208-106.hsd1.or.comcast.net) (Remote host closed the connection)
[00:02:56] <BrokenCog> so far I think the only option is using bdate_range() and then manually walking sequential dates per week, skipping breaks in the list.
[00:03:39] *** Joins: rpkilby (~rpkilby@c-24-20-208-106.hsd1.or.comcast.net)
[00:03:52] *** Quits: merrinx (~merrinx@ti0028a400-3686.bb.online.no) (Quit: WeeChat 3.3)
[00:04:02] *** Joins: Iolo (~iolo@user/Iolo)
[00:04:09] *** Joins: rawrrr (uid540880@id-540880.lymington.irccloud.com)
[00:04:38] <BrokenCog> confusingly when I do:
[00:04:39] <BrokenCog> bdays = pd.bdate_range( start=start, end=end, periods=5 )
[00:04:41] <BrokenCog> I get:
[00:04:46] <BrokenCog> ValueError: Of the four parameters: start, end, periods, and freq, exactly three must be specified
[00:05:04] <BrokenCog> like, how many does it think I passed!??
[00:05:47] <jinsun__> bdate_range means date_range with freq="B"
[00:05:52] <causa_sui> is there a /dev/null functional equivalent TextIO object? I know there's `os.devnull` but that only gives me a string representation of the path to the devnull file object (on my system this is "/dev/null")
[00:05:52] <BrokenCog> yes.
[00:06:03] <jinsun__> so freq is already passed
[00:06:33] <jinsun__> and you manually passed the other 3, so total 4
[00:07:04] <BrokenCog> yeah, I understand.  it's just poorly constructed.  The wrapper is not doing any validation and passing back the called error.
[00:08:08] <jinsun__> yeah it could do some checking of it own for better message
[00:08:26] <BrokenCog> okay, thanks for helping ... I have to go.
[00:08:30] *** Quits: rpkilby (~rpkilby@c-24-20-208-106.hsd1.or.comcast.net) (Ping timeout: 252 seconds)
[00:08:38] *** Quits: BrokenCog (~BrokenCog@c-73-92-151-140.hsd1.ca.comcast.net) (Quit: leaving)
[00:08:57] *** Joins: DPA (~DPA@2a05:41c0:0:8104::a3c:10d)
[00:09:33] *** Quits: treefrob (~treefrob@pd9e2dc5a.dip0.t-ipconnect.de) (Remote host closed the connection)
[00:09:49] *** Joins: xkuru (xkuru@user/xkuru)
[00:10:14] *** Quits: foobaz21248467 (~foobaz212@152.37.103.80) (Quit: Client closed)
[00:10:14] *** Quits: foobaz21266 (~foobaz212@152.37.103.80) (Quit: Client closed)
[00:10:25] *** Joins: foobaz21266 (~foobaz212@152.37.103.80)
[00:10:28] *** Joins: foobaz21248467 (~foobaz212@152.37.103.80)
[00:11:24] *** Quits: jpn (~jpn@user/jpn) (Ping timeout: 240 seconds)
[00:11:39] *** Joins: x_kuru (~xkuru@user/xkuru)
[00:13:07] *** Joins: treefrob (~treefrob@pd9e2dc5a.dip0.t-ipconnect.de)
[00:13:24] *** Quits: x_kuru_ (~xkuru@user/xkuru) (Ping timeout: 240 seconds)
[00:14:44] *** Quits: weedmic (~weedmic@93-173-109-49.bb.netvision.net.il) (Quit: Konversation terminated!)
[00:14:53] *** Quits: foobaz21266 (~foobaz212@152.37.103.80) (Ping timeout: 256 seconds)
[00:15:24] *** Quits: xkuru (xkuru@user/xkuru) (Ping timeout: 240 seconds)
[00:16:44] *** Joins: foobaz21266 (~foobaz212@152.37.103.80)
[00:17:09] *** Quits: fartyfoam (~fartyfoam@178-118-118-2.access.telenet.be) (Quit: The Lounge - https://thelounge.chat)
[00:17:10] *** Quits: smoke (~smoke@user/smoke) (Ping timeout: 260 seconds)
[00:18:22] *** Joins: pretty_dumm_guy (trottel@gateway/vpn/protonvpn/prettydummguy/x-88029655)
[00:19:06] *** Joins: rpkilby (~rpkilby@c-24-20-208-106.hsd1.or.comcast.net)
[00:19:34] *** Joins: Kraus (~quassel@075-141-246-250.res.spectrum.com)
[00:20:01] *** Joins: smoke (~smoke@user/smoke)
[00:20:48] *** Quits: yates (~user@fv-nc-f7af8b91e1-234237-1.tingfiber.com) (Remote host closed the connection)
[00:21:19] *** Quits: flower_ (~archie@217-123-218-6.cable.dynamic.v4.ziggo.nl) (Quit: leaving)
[00:21:35] *** Joins: flower_ (~archie@217-123-218-6.cable.dynamic.v4.ziggo.nl)
[00:21:37] *** Quits: Staunch (~Staunch@c-24-7-237-208.hsd1.mn.comcast.net) (Remote host closed the connection)
[00:22:14] *** Joins: Staunch (~Staunch@134.238.184.213)
[00:22:20] *** Joins: fartyfoam (~fartyfoam@178-118-118-2.access.telenet.be)
[00:23:03] *** Joins: audiobirb (~audio@user/audio)
[00:25:05] *** Quits: georgios (~georgios@user/georgios) (Quit: Konversation terminated!)
[00:25:38] *** Joins: CombatVet_ (~c4@user/combatvet)
[00:26:00] <dob1> how can I use an f string as a template to reuse it ?
[00:26:17] <SnoopJ> dob1, you can't, they're literals
[00:26:27] *** Joins: renlo (~Renlo_Ren@pool-108-14-112-182.nycmny.east.verizon.net)
[00:26:28] <SnoopJ> but if you drop the prefix, you can reuse that with str.format()
[00:26:30] <dob1> what are a simple aternative?
[00:26:35] *** Quits: CombatVet (~c4@user/combatvet) (Ping timeout: 240 seconds)
[00:26:36] *** CombatVet_ is now known as CombatVet
[00:26:37] <SnoopJ> see above
[00:27:16] <dob1> template = "{user} something"       my_string = str.format(template)     ?
[00:27:27] <SnoopJ> probably `template.format(...)` but yes
[00:27:54] <dob1> ah I got it, so template.format(user)
[00:28:06] <dob1> thanks
[00:28:26] <SnoopJ> e.g. https://bpa.st/CRVQ
[00:29:25] *** Joins: EvilDMP (~textual@django/moderator/EvilDMP)
[00:29:42] *** Quits: Viewday115 (~Viewday@user/viewday) (Read error: Connection reset by peer)
[00:29:55] *** Quits: GNUmoon (~GNUmoon@gateway/tor-sasl/gnumoon) (Ping timeout: 240 seconds)
[00:30:13] *** Quits: theseb (~theseb@47-220-214-54.cnrocmta03.res.dyn.suddenlink.net) (Quit: Leaving)
[00:31:46] *** Joins: Viewday115 (~Viewday@user/viewday)
[00:31:53] *** Quits: marderIII (~MarderIII@86-88-74-111.fixed.kpn.net) (Ping timeout: 256 seconds)
[00:36:09] *** Joins: [itchyjunk] (~itchyjunk@user/itchyjunk/x-7353470)
[00:36:12] *** Quits: runelind (~runelind@user/runelind) (Ping timeout: 240 seconds)
[00:37:16] *** Joins: runelind (~runelind@user/runelind)
[00:38:12] *** Quits: schumaml (~schumaml@dslb-188-104-183-144.188.104.pools.vodafone-ip.de) (Ping timeout: 250 seconds)
[00:38:25] *** Quits: wakeup (~wakeup@user/wakeup) (Quit: Client closed)
[00:39:09] <rawrrr> Say we have a large data set and a small data set both in csvs, the data sets contain usernames, but some are mismatching and we needed to identify and output the mismatched usernames to another csv with columns "username in data set a, username in data set b". We also have first names and last names. Now in the large data set there are entries with the same first and last names. We don't want to wrongly assume that a username
[00:39:09] <rawrrr> belongs to someone that it doesn't actually belong to. What would be the best way to go about this?
[00:39:28] *** Joins: jero98772 (~jero98772@2800:484:1d80:d8ce:3490:26c5:1782:da8c)
[00:39:51] *** Quits: jamea (~jamea@200.68.164.78) (Ping timeout: 252 seconds)
[00:40:11] *** Joins: schumaml (~schumaml@dslb-092-074-002-168.092.074.pools.vodafone-ip.de)
[00:40:58] <hodapp> if they mismatch, how are you to match them?
[00:41:19] <jinsun__> pi day releases available finally https://github.com/pyenv/pyenv/commit/3a95c969e122b1e0791cb8d6cc13063d3ae10857
[00:41:32] <hodapp> you can do something like Levenshtein distance and pick the lowest, but fuzzy matching can be hard to get right
[00:42:15] *** Joins: jpn (~jpn@user/jpn)
[00:42:37] *** Parts: strk (~strk@user/strk) (WeeChat 3.4)
[00:42:59] <rawrrr> i suppose when there are fname and lname collisions we can just output both to the new data set and then do some manual investigation
[00:43:25] *** Quits: tetravus (~tetravus@c-71-231-69-112.hsd1.wa.comcast.net) (Ping timeout: 240 seconds)
[00:43:39] <grym> rawrrr: is every row unique? in the case where you have same first,last name in the same file, are there other columns that are different
[00:44:39] *** Joins: tetravus (~tetravus@c-71-231-69-112.hsd1.wa.comcast.net)
[00:44:44] <rawrrr> there are other columns in the larger data set, but we don't have the same exact columns in the smaller data set
[00:45:46] *** Joins: Stench (~Staunch@c-24-7-237-208.hsd1.mn.comcast.net)
[00:46:00] *** Quits: causa_sui (~causasui@c-68-60-125-136.hsd1.mi.comcast.net) (Ping timeout: 250 seconds)
[00:46:23] *** Quits: matdev (~matdev@2a01:6e60:10:793:666:feed:dead:beef) (Remote host closed the connection)
[00:46:40] <grym> rawrrr: can you paste some (maybe anonymized) examples from each csv?
[00:46:43] *** Quits: foobaz21266 (~foobaz212@152.37.103.80) (Quit: Client closed)
[00:46:43] *** Quits: foobaz21248467 (~foobaz212@152.37.103.80) (Quit: Client closed)
[00:46:56] *** Joins: foobaz21266 (~foobaz212@109.249.187.65)
[00:46:57] *** Joins: foobaz21248467 (~foobaz212@109.249.187.65)
[00:47:02] *** Quits: Stench (~Staunch@c-24-7-237-208.hsd1.mn.comcast.net) (Remote host closed the connection)
[00:47:05] *** Quits: foobaz21248467 (~foobaz212@109.249.187.65) (Client Quit)
[00:47:06] *** Quits: foobaz21266 (~foobaz212@109.249.187.65) (Client Quit)
[00:47:14] <deniska> also how large is large?
[00:47:25] *** Joins: tr4ck3ur (~tr4ck3ur@user/tr4ck3ur)
[00:47:34] *** Joins: Stench (~Staunch@137.83.202.220)
[00:47:38] *** Joins: foobaz21266 (~foobaz212@109.249.187.65)
[00:47:47] <deniska> (part of my dayjob lately seems to be reminding people that "million" is not a big number for a lot of purposes)
[00:47:47] <grym> ^ i have a hunch what he's about to suggest :D
[00:47:58] *** Quits: foobaz21266 (~foobaz212@109.249.187.65) (Client Quit)
[00:48:39] <deniska> I was going to suggest putting the whole thing in ram and working with dicts or sets :)
[00:48:50] *** Joins: c4017w__ (~c4017@209.52.68.8)
[00:48:59] <deniska> (or sqlite if it actually doesn't fit in ram)
[00:49:24] <rawrrr> deniska: 80k records in one data set, only 250ish in the smaller data set
[00:49:31] <grym> me, too, but i was certainly expecting the sqlite option from you :D
[00:49:39] *** Joins: greedom (~greedom@p200300de67149600d8c54e30ff38ee6e.dip0.t-ipconnect.de)
[00:49:47] *** Quits: Staunch (~Staunch@134.238.184.213) (Ping timeout: 256 seconds)
[00:49:47] *** Quits: x_kuru (~xkuru@user/xkuru) (Ping timeout: 256 seconds)
[00:49:49] <grym> rawrrr: that's well within "do it as sets", i think
[00:51:05] *** Joins: zen_coder (~zen_coder@2a02:8109:a280:2d8d:d0e9:aad1:55a7:81ee)
[00:51:38] <deniska> grym: I recently had a usecase for firehosing data onto disk really quickly, and sqlite with a commit after every row wasn't fast enough, so I went with (horrors) fixed width columns text file :D
[00:52:02] <grym> hah
[00:52:06] <grym> needs must
[00:52:38] *** Quits: c4017w_ (~c4017@209.52.68.8) (Ping timeout: 260 seconds)
[00:53:52] *** Joins: rsx (~dummy@ppp-188-174-152-127.dynamic.mnet-online.de)
[00:54:14] *** Joins: wakeup (~wakeup@user/wakeup)
[00:54:29] <deniska> well, the last column wasn't fixed length, json until the end of the line. CSV, convention separated values
[00:54:42] *** Quits: dsrt^ (~dsrt@65.240.140.18) (Ping timeout: 252 seconds)
[00:55:00] *** Quits: ExpiredKebab (~sgreadly@2407:7000:89aa:b303:5d57:9cfb:8fe1:7e42) (Quit: My MacBook Air has gone to sleep. ZZZzzz…)
[00:55:07] *** Quits: JanC (~janc@user/janc) (Remote host closed the connection)
[00:55:41] <rawrrr> grym: is there a good primer on doing this type of thing
[00:55:45] *** Joins: ExpiredKebab (~sgreadly@2407:7000:89aa:b303:b54b:3836:2073:6d9a)
[00:56:18] <rawrrr> i was mainly just doing simplistic automation but now im on data clean up duty and its harder for me
[00:56:30] *** Quits: smoke (~smoke@user/smoke) (Quit: Leaving)
[00:56:34] *** Joins: Ilyu (~quassel@166.215.82.79.rev.sfr.net)
[00:57:09] <deniska> rawrrr: can first/last names also be written differently between datasets?
[00:57:13] *** Joins: aslicedbanjo (~aslicedba@host86-178-157-224.range86-178.btcentralplus.com)
[00:57:17] *** Joins: causa_sui (~causasui@c-68-60-125-136.hsd1.mi.comcast.net)
[00:57:39] *** Joins: Fozzworth (~Fozzworth@user/fozzworth)
[00:57:41] <rawrrr> that's definitely a possibility
[00:59:03] *** Joins: pretty_d1 (trottel@gateway/vpn/protonvpn/prettydummguy/x-88029655)
[00:59:30] <grym> data wrangling is usually an exercise in care and humility
[00:59:38] <zen_coder> how can I make this code in python run in parallel, with the maximum amount of threads available in the system? https://onlinegdb.com/IrmsaNANa
[00:59:48] *** Joins: ivanf (~ivan@pool-173-56-92-56.nycmny.fios.verizon.net)
[01:00:19] *** Joins: jmiehe (~Thunderbi@user/jmiehe)
[01:01:04] *** Joins: cation21 (cation@user/cation)
[01:01:18] *** Quits: ivanf (~ivan@pool-173-56-92-56.nycmny.fios.verizon.net) (Changing host)
[01:01:18] *** Joins: ivanf (~ivan@user/ivanf)
[01:01:24] *** Quits: pretty_dumm_guy (trottel@gateway/vpn/protonvpn/prettydummguy/x-88029655) (Ping timeout: 240 seconds)
[01:01:48] *** Quits: cation (cation@user/cation) (Ping timeout: 240 seconds)
[01:02:16] *** Quits: _xor (~xor@dsl-50-5-233-169.fuse.net) (Read error: Connection reset by peer)
[01:02:24] *** Quits: jpn (~jpn@user/jpn) (Ping timeout: 252 seconds)
[01:02:57] *** Quits: causa_sui (~causasui@c-68-60-125-136.hsd1.mi.comcast.net) (Ping timeout: 252 seconds)
[01:03:00] *** Quits: lsrtl_ (~lsrtl@user/lsrtl) (Read error: Connection reset by peer)
[01:03:05] *** Quits: qlixed (~qlixed@8.243.49.226) (Remote host closed the connection)
[01:03:41] *** Quits: Pi-sistance (~Pi-sistan@cpc94040-newt37-2-0-cust284.19-3.cable.virginm.net) (Quit: Client closed)
[01:03:49] *** Joins: qlixed (~qlixed@8.243.49.226)
[01:04:26] *** cation21 is now known as cation
[01:04:50] *** Joins: lsrtl_ (~lsrtl@user/lsrtl)
[01:06:53] *** Quits: NoelFlantier3 (~Hubert@195.201.244.189) (Remote host closed the connection)
[01:07:16] *** Joins: NoelFlantier3 (~Hubert@195.201.244.189)
[01:07:43] *** Joins: xkuru (~xkuru@user/xkuru)
[01:07:57] *** Joins: _xor (~xor@dsl-50-5-233-169.fuse.net)
[01:08:09] *** Joins: moog_ (~moog@98.97.86.136)
[01:08:16] *** Quits: ba (~ba@cpc1-hari17-2-0-cust27.20-2.cable.virginm.net) (Remote host closed the connection)
[01:08:27] *** Joins: Gustavo6046 (~Gustavo60@user/gustavo6046)
[01:08:32] *** Quits: jstein (~jstein@gentoo/developer/jstein) (Ping timeout: 240 seconds)
[01:09:11] *** Joins: x_kuru (~xkuru@user/xkuru)
[01:10:06] *** Joins: foobaz21266 (~foobaz212@109.249.187.65)
[01:10:06] *** Joins: foobaz21248467 (~foobaz212@109.249.187.65)
[01:10:15] *** Parts: dminuoso (~dminuoso@user/dminuoso) (WeeChat 3.3)
[01:10:36] *** Joins: stdInOut (~stdInOut@user/stdInOut)
[01:10:39] *** Quits: moog (~moog@107.126.53.19) (Ping timeout: 252 seconds)
[01:11:10] *** Joins: cation21 (cation@user/cation)
[01:11:32] *** Quits: cation (cation@user/cation) (Ping timeout: 240 seconds)
[01:12:01] *** Joins: dsrt^ (~dsrt@65.240.140.18)
[01:12:11] <SnoopJ> drat, this old version of torch doesn't have complete support for itself
[01:12:19] <meejah> zen_coder: I _think_ you're asking how to get more performance? or something else?
[01:12:33] *** Quits: swinnenb (~swinnenb@user/swinnenb) (Remote host closed the connection)
[01:12:41] *** Quits: xkuru (~xkuru@user/xkuru) (Ping timeout: 256 seconds)
[01:12:47] *** Joins: x_kuru_ (~xkuru@user/xkuru)
[01:13:04] <zen_coder> meejah: I want to know how to solve this task in python
[01:13:31] <zen_coder> parallelization
[01:13:32] *** Quits: x_kuru (~xkuru@user/xkuru) (Ping timeout: 240 seconds)
[01:13:46] <zen_coder> the items can be process independently
[01:13:48] *** Joins: mug3n (~mugen@gateway/tor-sasl/mugen)
[01:13:56] <zen_coder> how elegant can you write it in python?
[01:14:00] <meejah> if the processing is cpu-bound, that likely won't have the effect you want
[01:14:13] *** Quits: foobaz21266 (~foobaz212@109.249.187.65) (Client Quit)
[01:14:29] *** cation21 is now known as cation
[01:14:32] *** Quits: enoq (~enoq@2a05:1141:1f5:5600:b9c9:721a:599:bfe7) (Read error: Connection reset by peer)
[01:14:38] <meejah> "in general" you need multiple python _processes_ for CPU-bound performance .. first use PyPy though
[01:14:59] *** Joins: alex_ (~alex11@user/alex11)
[01:15:05] *** Joins: xkuru (~xkuru@user/xkuru)
[01:15:07] *** Joins: swinnenb (~swinnenb@user/swinnenb)
[01:15:40] *** Joins: nullbytes (~nullbytes@ool-2f1206df.dyn.optonline.net)
[01:15:42] <meejah> (for IO-bound proecssing, I would reach for some async-style framework in Python. Like Twisted)
[01:15:47] *** Joins: jamea (~jamea@200.68.164.78)
[01:15:55] *** Quits: alex_ (~alex11@user/alex11) (Client Quit)
[01:15:55] *** Quits: mugen (~mugen@gateway/tor-sasl/mugen) (Ping timeout: 240 seconds)
[01:16:46] *** Quits: alex11 (~alex11@user/alex11) (Ping timeout: 250 seconds)
[01:17:52] *** Quits: wootehfoot (~wootehfoo@user/wootehfoot) (Read error: Connection reset by peer)
[01:18:15] *** Quits: winterflaw (~winterfla@gateway/tor-sasl/winterflaw) (Ping timeout: 240 seconds)
[01:18:37] *** Quits: x_kuru_ (~xkuru@user/xkuru) (Ping timeout: 240 seconds)
[01:19:06] *** Joins: enoq (~enoq@2a05:1141:1f5:5600:b9c9:721a:599:bfe7)
[01:20:14] *** Joins: timkofu (~timkofu@105.160.79.60)
[01:20:14] *** Quits: timkofu (~timkofu@105.160.79.60) (Changing host)
[01:20:14] *** Joins: timkofu (~timkofu@user/timkofu)
[01:20:57] *** Quits: Everything (~Everythin@37.115.210.35) (Quit: leaving)
[01:21:05] *** Joins: henistein (~henistein@2001:8a0:fcba:5601:d851:f87b:1171:33f4)
[01:21:30] <henistein> I have a program that runs some multiprocessing, but for debugging I like to print stuff and then exit() , but since I am using multiprocessing, it will just exit from that process and the program keeps running, there is some way to just exit everything? stopping the whole program?
[01:21:55] *** Quits: timkofu (~timkofu@user/timkofu) (Client Quit)
[01:22:02] *** Joins: JanC (~janc@user/janc)
[01:22:41] *** Quits: shibboleth (~shibbolet@user/shibboleth) (Quit: shibboleth)
[01:22:53] *** Quits: renlo (~Renlo_Ren@pool-108-14-112-182.nycmny.east.verizon.net) (Ping timeout: 256 seconds)
[01:22:54] *** Joins: GNUmoon (~GNUmoon@gateway/tor-sasl/gnumoon)
[01:23:18] *** Joins: winterflaw (~winterfla@gateway/tor-sasl/winterflaw)
[01:24:02] *** Joins: ice9 (~ice9@user/ice9)
[01:25:34] *** Quits: rsx (~dummy@ppp-188-174-152-127.dynamic.mnet-online.de) (Quit: rsx)
[01:25:34] <dob1> having a MIMEMultipart m object what is the difference between  m['foo'] = 'bar'  and m.add_header('foo', 'bar') ?
[01:25:57] *** Joins: jpn (~jpn@user/jpn)
[01:27:32] *** Quits: Barones (~Barones@user/Barones) (Quit: Leaving)
[01:27:56] *** Quits: ice9 (~ice9@user/ice9) (Read error: Connection reset by peer)
[01:28:01] *** Joins: roxfan (~roxfan@2a02:a03f:a2be:4f00:51a:35a2:9d4e:fbfc)
[01:28:37] *** Quits: palasso (~palasso@user/palasso) (Remote host closed the connection)
[01:28:47] *** Quits: Sheilong (uid293653@id-293653.ilkley.irccloud.com) ()
[01:28:58] *** Joins: cos (~cos@user/cos)
[01:29:20] *** Quits: kosh (~kosh@user/kosh) (Ping timeout: 252 seconds)
[01:29:52] *** Joins: gentooclimax (~gentoocli@81-64-65-213.rev.numericable.fr)
[01:30:02] <cos> is anybody in the habit of quickly writing little terminal utilities in Python?
[01:30:17] *** Quits: jpn (~jpn@user/jpn) (Ping timeout: 240 seconds)
[01:30:22] *** Quits: aslicedbanjo (~aslicedba@host86-178-157-224.range86-178.btcentralplus.com) (Quit: Leaving.)
[01:30:25] <cos> (rather than a shell scripting lang for example)
[01:30:27] *** Quits: enoq (~enoq@2a05:1141:1f5:5600:b9c9:721a:599:bfe7) (Ping timeout: 252 seconds)
[01:30:32] *** Quits: gentooclimax (~gentoocli@81-64-65-213.rev.numericable.fr) (Remote host closed the connection)
[01:30:39] *** Quits: darksun (~darksun@user/darksun) (Quit: Lost terminal)
[01:31:02] *** Quits: jeho (~jehoshaph@user/jehoshaphat) (Ping timeout: 240 seconds)
[01:31:34] *** Joins: enoq (~enoq@2a05:1141:1f5:5600:b9c9:721a:599:bfe7)
[01:32:51] *** Quits: Ilyu (~quassel@166.215.82.79.rev.sfr.net) (Quit: https://quassel-irc.org - Chat comfortably. Anywhere.)
[01:33:47] *** Quits: tgamblin (~tgamblin@2607:fea8:c2a0:8640::10d4) (Remote host closed the connection)
[01:34:26] *** Joins: pretty_dumm_guy (trottel@gateway/vpn/protonvpn/prettydummguy/x-88029655)
[01:34:49] *** Joins: tgamblin (~tgamblin@2607:fea8:c2a0:8640::10d4)
[01:35:08] *** Quits: rje (~textual@65.141.156.170) (Quit: My MacBook has gone to sleep. ZZZzzz…)
[01:35:17] *** Quits: enoq (~enoq@2a05:1141:1f5:5600:b9c9:721a:599:bfe7) (Client Quit)
[01:36:00] *** Joins: martums59 (~martums@user/martums)
[01:36:02] *** Quits: pretty_d1 (trottel@gateway/vpn/protonvpn/prettydummguy/x-88029655) (Ping timeout: 240 seconds)
[01:36:27] *** Joins: jpn (~jpn@user/jpn)
[01:36:38] *** Quits: winterflaw (~winterfla@gateway/tor-sasl/winterflaw) (Remote host closed the connection)
[01:36:56] *** Joins: ghost43_ (~ghost43@gateway/tor-sasl/ghost43)
[01:37:21] <zen_coder> is this the best and simplest apporach for my question? https://onlinegdb.com/xtXX-m1Oz
[01:37:45] *** Quits: ghost43 (~ghost43@gateway/tor-sasl/ghost43) (Remote host closed the connection)
[01:38:05] <SnoopJ> cos, I do this pretty often, yep
[01:38:17] *** Quits: cos (~cos@user/cos) (Quit: Client closed)
[01:38:31] *** Joins: adiKt (uid472628@id-472628.tinside.irccloud.com)
[01:38:32] *** Quits: schumaml (~schumaml@dslb-092-074-002-168.092.074.pools.vodafone-ip.de) (Ping timeout: 240 seconds)
[01:39:57] *** Joins: ice9 (~ice9@user/ice9)
[01:40:26] *** Joins: schumaml (~schumaml@dslb-188-104-166-056.188.104.pools.vodafone-ip.de)
[01:40:57] *** Quits: jamea (~jamea@200.68.164.78) (Ping timeout: 240 seconds)
[01:40:58] *** Quits: magla (~gelignite@d5362120.access.ecotel.net) (Quit: Stay safe!)
[01:41:12] *** Quits: foobaz21248467 (~foobaz212@109.249.187.65) (Quit: Client closed)
[01:41:39] *** Joins: foobaz21248467 (~foobaz212@109.249.187.65)
[01:43:36] *** Quits: foobaz21248467 (~foobaz212@109.249.187.65) (Client Quit)
[01:43:39] *** Quits: jpn (~jpn@user/jpn) (Ping timeout: 252 seconds)
[01:44:00] *** Joins: foobaz21248467 (~foobaz212@109.249.187.65)
[01:44:45] *** Quits: naquad (~naquad@79.135.214.17) (Ping timeout: 252 seconds)
[01:45:26] *** Quits: foobaz21248467 (~foobaz212@109.249.187.65) (Client Quit)
[01:45:53] *** Joins: foobaz21248467 (~foobaz212@109.249.187.65)
[01:46:02] *** Quits: foobaz21248467 (~foobaz212@109.249.187.65) (Client Quit)
[01:46:22] *** Joins: tuskkk____ (uid18470@id-18470.tinside.irccloud.com)
[01:47:27] *** Quits: Ergo^ (~ergo@91.238.59.144) (Remote host closed the connection)
[01:48:03] *** Joins: foobaz21248467 (~foobaz212@109.249.187.65)
[01:48:36] *** Quits: foobaz21248467 (~foobaz212@109.249.187.65) (Client Quit)
[01:49:17] *** Joins: c4017w_ (~c4017@209.52.68.8)
[01:49:41] *** Joins: foobaz21248467 (~foobaz212@109.249.187.65)
[01:49:42] *** Joins: aum (~aum@202.47.255.123.static.snap.net.nz)
[01:49:50] *** Quits: foobaz21248467 (~foobaz212@109.249.187.65) (Client Quit)
[01:50:39] <aum> email.message.EmailMessage fails to return the From header (msg['From']) if the FROM header is UTF encoded like '=?UTF-8?B?TWlrZSBTbWl0aA0K?= <no-replyCitZoove@gmail.com>'
[01:50:55] <aum> ValueError: invalid arguments; address parts cannot contain CR or LF
[01:51:12] <parv> cos, I am not; certainly not willingly nor in my free time
[01:51:39] *** Joins: foobaz21248467 (~foobaz212@109.249.187.65)
[01:51:41] *** Quits: foobaz21248467 (~foobaz212@109.249.187.65) (Write error: Broken pipe)
[01:51:52] *** Stench is now known as Staunch
[01:52:25] *** Quits: manti7 (~manti7@176.10.104.94) (Quit: WeeChat 3.4)
[01:52:39] <SnoopJ> Larry Hastings mentions that he does it all the time in one of his talks (and encourages the audience to do the same)
[01:52:44] *** Quits: c4017w__ (~c4017@209.52.68.8) (Ping timeout: 250 seconds)
[01:52:52] *** Quits: nomic (~nomic@185.217.117.111) (Quit: Leaving)
[01:54:28] *** Joins: merijn (~merijn@c-001-001-001.client.esciencecenter.eduvpn.nl)
[01:54:32] *** Joins: lilibyte (~lilibyte@89.187.180.40)
[01:54:54] *** Quits: soju-test-user (~soju-test@lfbn-idf2-1-1140-121.w90-92.abo.wanadoo.fr) (Ping timeout: 250 seconds)
[01:55:45] *** Quits: stdInOut (~stdInOut@user/stdInOut) (Quit: Leaving)
[01:56:51] *** Joins: elwoodpd (~elwoodpd@85.210.161.53)
[01:57:31] *** Joins: naquad (~naquad@79.135.214.17)
[01:58:58] *** Quits: henistein (~henistein@2001:8a0:fcba:5601:d851:f87b:1171:33f4) (Quit: Client closed)
[01:58:59] *** Quits: shailangsa (~shailangs@host165-120-169-51.range165-120.btcentralplus.com) ()
[01:59:46] *** Joins: causa_sui (~causasui@c-68-60-125-136.hsd1.mi.comcast.net)
[02:00:34] *** Quits: ghost43_ (~ghost43@gateway/tor-sasl/ghost43) (Remote host closed the connection)
[02:00:37] *** Quits: ice9 (~ice9@user/ice9) (Ping timeout: 240 seconds)
[02:00:51] *** Joins: ghost43 (~ghost43@gateway/tor-sasl/ghost43)
[02:01:23] *** Quits: zeden (~zeden@user/zeden) (Quit: WeeChat 3.4.1)
[02:02:21] *** Quits: Gustavo6046 (~Gustavo60@user/gustavo6046) (Ping timeout: 252 seconds)
[02:02:34] *** Parts: nullbytes (~nullbytes@ool-2f1206df.dyn.optonline.net) ()
[02:02:53] *** Joins: superboot (~agentgasm@user/superboot)
[02:04:02] *** Joins: nomic (~nomic@185.217.117.111)
[02:04:14] <zen_coder> how can I provide some hard coded object to this "pool.map" function?
[02:04:35] <anddam> SnoopJ: not until xonsh/tako or oil shell will overcome the world
[02:04:48] <anddam> POSIX shell is ubiquitous
[02:04:52] *** Quits: tetravus (~tetravus@c-71-231-69-112.hsd1.wa.comcast.net) (Ping timeout: 250 seconds)
[02:05:08] *** Joins: winterflaw (~winterfla@gateway/tor-sasl/winterflaw)
[02:05:37] <anddam> parv: maybe SnoopJ has a gun to the head to write pyshell scripts…
[02:05:37] *** Quits: schumaml (~schumaml@dslb-188-104-166-056.188.104.pools.vodafone-ip.de) (Ping timeout: 240 seconds)
[02:05:47] <SnoopJ> anddam, does my personal preference bother you?
[02:05:58] <anddam> SnoopJ: no no, and I am just kidding
[02:06:00] *** Joins: tetravus (~tetravus@c-71-231-69-112.hsd1.wa.comcast.net)
[02:06:04] <SnoopJ> I see
[02:06:14] <anddam> I didn't mean any offense
[02:06:18] *** Joins: x_kuru (xkuru@user/xkuru)
[02:06:45] <anddam> you are too invaluable when I need help around to piss you off ;-)
[02:07:04] * anddam proceeds to write 10 python scripts for system automation
[02:07:12] *** Joins: x_kuru_ (xkuru@user/xkuru)
[02:07:42] *** Joins: schumaml (~schumaml@dslb-092-074-013-022.092.074.pools.vodafone-ip.de)
[02:08:02] *** Quits: causa_sui (~causasui@c-68-60-125-136.hsd1.mi.comcast.net) (Ping timeout: 240 seconds)
[02:08:52] *** Joins: Xano_ (~Xano@2a00:23c4:4204:700:c9b8:3d25:86ed:5d18)
[02:08:57] *** Quits: amogorkon (~amogorkon@user/amogorkon) (Ping timeout: 252 seconds)
[02:09:14] *** Quits: Xano (~Xano@2a00:23c4:4204:700:c9b8:3d25:86ed:5d18) (Read error: Connection reset by peer)
[02:10:03] *** Quits: xkuru (~xkuru@user/xkuru) (Ping timeout: 252 seconds)
[02:10:06] *** Quits: Y4knotiS (~YaknotiS@cpc1-cmbg18-2-0-cust87.5-4.cable.virginm.net) (Ping timeout: 260 seconds)
[02:10:15] *** Quits: winterflaw (~winterfla@gateway/tor-sasl/winterflaw) (Ping timeout: 240 seconds)
[02:10:21] *** Parts: agireud (~agireud@user/agireud) ()
[02:10:31] <parv> 🤷‍
[02:10:32] *** Quits: x_kuru (xkuru@user/xkuru) (Ping timeout: 240 seconds)
[02:11:04] *** Joins: agireud (~agireud@user/agireud)
[02:11:07] *** Joins: xkuru (xkuru@user/xkuru)
[02:11:10] *** Joins: jamea (~jamea@200.68.164.78)
[02:11:32] *** Quits: x_kuru_ (xkuru@user/xkuru) (Ping timeout: 240 seconds)
[02:11:43] *** Joins: stdInOut (~stdInOut@user/stdInOut)
[02:12:31] *** Parts: agireud (~agireud@user/agireud) ()
[02:12:57] *** Joins: x_kuru (~xkuru@user/xkuru)
[02:13:14] *** Joins: agireud (~agireud@user/agireud)
[02:14:08] *** Joins: x_kuru_ (~xkuru@user/xkuru)
[02:14:42] <BrenBarn> shell scripts are fragile in lots of ways that Python scripts aren't
[02:15:02] *** Quits: dthpulse (~quassel@podciarou.sk) (Quit: https://quassel-irc.org - Chat comfortably. Anywhere.)
[02:15:29] *** Joins: zzbot (~zzbot@user/zzbot)
[02:16:18] *** Joins: dthpulse (~quassel@podciarou.sk)
[02:16:29] *** Quits: xkuru (xkuru@user/xkuru) (Ping timeout: 256 seconds)
[02:17:02] <jinsun_> I write any non trivial scripts in python too, mainly because I can't write shell scripts
[02:17:05] <jinsun_> easier to switch to python than to figure out how to do stuff in bash or powershell
[02:17:52] *** Quits: x_kuru (~xkuru@user/xkuru) (Ping timeout: 250 seconds)
[02:18:07] <yitz> Just remember to quote variable expansions and all is good
[02:18:12] *** Quits: nuclearg1 (~nucleargr@user/nuclearg1) (Ping timeout: 240 seconds)
[02:18:59] *** Quits: x_kuru_ (~xkuru@user/xkuru) (Ping timeout: 256 seconds)
[02:19:18] <BrenBarn> yeah
[02:19:21] *** Parts: agireud (~agireud@user/agireud) ()
[02:20:10] *** Joins: agireud (~agireud@user/agireud)
[02:22:15] *** Quits: EvilDMP (~textual@django/moderator/EvilDMP) (Quit: My MacBook has gone to sleep. ZZZzzz…)
[02:23:18] *** Joins: hexenbane (~hexenbane@fixed-187-190-159-31.totalplay.net)
[02:26:28] *** Quits: Masterphi (~Masterphi@user/masterphi) (Quit: Masterphi)
[02:27:02] *** Quits: schumaml (~schumaml@dslb-092-074-013-022.092.074.pools.vodafone-ip.de) (Ping timeout: 240 seconds)
[02:28:36] *** Quits: merijn (~merijn@c-001-001-001.client.esciencecenter.eduvpn.nl) (Ping timeout: 240 seconds)
[02:28:43] *** Quits: Forsaken87 (~quassel@ip-037-201-193-116.um10.pools.vodafone-ip.de) (Quit: https://quassel-irc.org - Chat comfortably. Anywhere.)
[02:29:37] *** Joins: schumaml (~schumaml@dslb-094-216-170-156.094.216.pools.vodafone-ip.de)
[02:30:23] <zen_coder> so I want to give this "some_func" some additional argument, which is always the same https://www.onlinegdb.com/QzZ4olRDD
[02:30:56] <zen_coder> how can I do this? So basically bind some "static" argument to it, which gets executed in parallel
[02:31:10] *** Quits: Auron (Auron956@user/auron) (Remote host closed the connection)
[02:31:18] *** Joins: nuclearg1 (~nucleargr@user/nuclearg1)
[02:31:27] <bpalmer> zen_coder: you could simply do lambda item: some_func(item, extra=1)  as an argument to pool.map
[02:31:30] <yitz> functools.partial?
[02:31:50] *** Parts: agireud (~agireud@user/agireud) ()
[02:32:06] *** Quits: TonyStone (~TonyStone@2603-7080-8607-c36a-a0f7-4a6c-9396-dfff.res6.spectrum.com) (Remote host closed the connection)
[02:32:10] *** Quits: Lando-SpacePimp (~Lando-Spa@user/lando-spacepimp) (Ping timeout: 250 seconds)
[02:32:16] <BrenBarn> does that work?  I thought pool will complain about it not being pickleable
[02:32:33] <zen_coder> bpalmer: can you adjust the code how you mean it?
[02:32:35] <bpalmer> oh, sorry, I wasn't paying enough attention to the multiprocessing part
[02:32:47] *** Joins: agireud (~agireud@user/agireud)
[02:33:28] *** Joins: Forsaken87 (~quassel@ip-037-201-193-116.um10.pools.vodafone-ip.de)
[02:33:30] *** Quits: otisolsen70 (~otisolsen@xd4ed80b5.cust.hiper.dk) (Quit: Leaving)
[02:33:42] *** Joins: TonyStone (~TonyStone@cpe-74-76-51-197.nycap.res.rr.com)
[02:33:55] *** Quits: tusko (~yeurt@user/tusko) (Ping timeout: 240 seconds)
[02:34:12] <BrenBarn> when you say "always the same" do you mean always always (like you could just literally write it in the code) or always the same for each call, but computed somehow by the setup code that sets up the pool?
[02:34:35] *** Joins: tusko (~yeurt@user/tusko)
[02:35:31] <zen_coder> always the same
[02:35:44] <zen_coder> think about I would change the code to "self.print(i)"
[02:36:02] *** Quits: nuclearg1 (~nucleargr@user/nuclearg1) (Ping timeout: 240 seconds)
[02:36:11] *** Quits: superboot (~agentgasm@user/superboot) (Quit: leaving)
[02:36:12] *** Joins: ncwbqcfe (~rvgzuuqp@gateway/tor-sasl/rvgzuuqp)
[02:36:35] <BrenBarn> I think functools.partial will work
[02:36:40] <BrenBarn> but if it's always the same why is it an argument at all?
[02:37:05] *** Joins: Barones (~Barones@user/Barones)
[02:37:41] <zen_coder> what else?
[02:38:13] <jinsun__> just hardcode it in the function?
[02:38:19] <BrenBarn> just a value hardcoded in
[02:38:49] <zen_coder> what do you mean? How can I set an instance inside a function?
[02:39:05] *** Joins: Betal (~Betal@user/betal)
[02:39:22] *** Quits: greedom (~greedom@p200300de67149600d8c54e30ff38ee6e.dip0.t-ipconnect.de) (Remote host closed the connection)
[02:39:41] *** Quits: GreenResponse (~tomek@r-45-155-148-237.gpon.bialnet.pl) (Quit: Leaving)
[02:39:54] *** Joins: TheHermann (~TheHerman@gateway/tor-sasl/thehermann)
[02:39:57] <jinsun__> you can change the code of the function (which you were gonna do anyway to make it accept another parameter)
[02:41:25] *** Quits: leighbb (~leighbb@user/leighbb) (Quit: Leaving)
[02:41:27] *** Quits: slav0nic (slav0nic@python.su) (Ping timeout: 250 seconds)
[02:41:30] <jinsun__> instead of taking extra_param, and passing extra_param=constant to the function when calling pool.map, write extra_param=constant after the def line
[02:41:42] *** Quits: Atque (~Atque@user/atque) (Quit: ...)
[02:42:05] *** Quits: plastico (~plastico@neomutt/plastico) (Quit: WeeChat 3.4)
[02:44:35] <jinsun__> works only if you really wanted to map one time with a fixed constant though, extra param is more flexible
[02:45:29] <zen_coder> https://onlinegdb.com/Jolsa6VOS
[02:45:33] *** Quits: ghost43 (~ghost43@gateway/tor-sasl/ghost43) (Quit: Leaving)
[02:45:46] *** Joins: ghost43 (~ghost43@gateway/tor-sasl/ghost43)
[02:45:51] <jinsun__> and nicer than pool.map is to use ProcessPoolExecutor, you can submit function to it with different arguments each time too
[02:45:58] <zen_coder> where can I set my dynamic instance of FooBar ? to the "some_func"?
[02:46:51] *** Joins: blei (~blei@user/blei)
[02:47:36] <blei> we can use this for Python <-> Python IPC https://criu.org/Compel
[02:48:01] *** Quits: tapeworm (~tapeworm@188.168.50.119) (Quit: Leaving)
[02:48:14] <jinsun__> zen_coder: can you explain what that code is supposed to do? I don't see why you have that FooBar class
[02:48:25] *** Quits: wakeup (~wakeup@user/wakeup) (Quit: Client closed)
[02:48:40] *** Quits: tr4ck3ur (~tr4ck3ur@user/tr4ck3ur) (Quit: Leaving)
[02:49:40] *** Joins: c4017w__ (~c4017@209.52.68.8)
[02:50:12] *** Joins: hexenbane9 (~hexenbane@fixed-187-188-14-118.totalplay.net)
[02:50:20] <bpalmer> Perhaps zen_coder wants pool.map(FooBar('extra').my_print, chunks)
[02:51:14] *** Joins: fedenix_ (~fedenix@gateway/tor-sasl/fedenix)
[02:51:46] *** Quits: fedenix (~fedenix@gateway/tor-sasl/fedenix) (Remote host closed the connection)
[02:51:51] *** Quits: hexenbane (~hexenbane@fixed-187-190-159-31.totalplay.net) (Ping timeout: 256 seconds)
[02:51:51] *** hexenbane9 is now known as hexenbane
[02:52:33] <BrenBarn> what do you mean by "dynamic instance of FooBar"?
[02:52:36] *** Quits: audiobirb (~audio@user/audio) (Ping timeout: 240 seconds)
[02:52:57] *** Quits: c4017w_ (~c4017@209.52.68.8) (Ping timeout: 252 seconds)
[02:54:03] *** Quits: mefistofeles (~mefistofe@user/mefistofeles) (Ping timeout: 252 seconds)
[02:54:36] *** Quits: flower_ (~archie@217-123-218-6.cable.dynamic.v4.ziggo.nl) (Ping timeout: 240 seconds)
[02:55:52] *** Joins: johnkeats6 (~johnkeats@2804:14c:32:a0cc:247a:8e13:96e:de76)
[02:56:07] *** Quits: ExpiredKebab (~sgreadly@2407:7000:89aa:b303:b54b:3836:2073:6d9a) (Quit: My MacBook Air has gone to sleep. ZZZzzz…)
[02:56:38] *** Joins: ExpiredKebab (~sgreadly@2407:7000:89aa:b303:b54b:3836:2073:6d9a)
[02:57:16] *** Joins: Masterphi (~Masterphi@user/masterphi)
[02:57:16] *** Quits: Masterphi (~Masterphi@user/masterphi) (Client Quit)
[02:57:31] <zen_coder> bpalmer: interesting, this works https://onlinegdb.com/m2MtFK0E8
[02:58:02] *** Quits: bitkiller (~bitkiller@user/bitkiller) (Ping timeout: 240 seconds)
[02:58:28] <BrenBarn> I don't understand what the problem is or how you think that solves it
[02:58:39] *** Joins: causa_sui (~causasui@c-68-60-125-136.hsd1.mi.comcast.net)
[02:58:40] <BrenBarn> before you weren't using FooBar, now you aren't using some_func
[02:59:43] *** Quits: LucaTM (~LucaTM@user/lucatm) (Quit: Textual IRC Client: www.textualapp.com)
[03:00:58] *** Quits: veegee (~veegee@ipagstaticip-469c2903-2b07-6dc3-3bc2-98748da5ca77.sdsl.bell.ca) (Quit: Textual IRC Client: www.textualapp.com)
[03:01:53] *** Quits: upsala (~zcb@185.209.196.134) (Quit: WeeChat 3.4.1)
[03:02:57] *** Quits: causa_sui (~causasui@c-68-60-125-136.hsd1.mi.comcast.net) (Ping timeout: 240 seconds)
[03:03:25] *** Joins: causa_sui (~causasui@c-68-60-125-136.hsd1.mi.comcast.net)
[03:03:37] <zen_coder> now multiprocess is using my member function
[03:03:44] *** Joins: Zeturic (~Orimendix@50.26.218.162)
[03:03:57] <zen_coder> that what I wanted, not as extra argument, but at least it is invoking my member in parallel
[03:04:09] *** Joins: CodePoint (~jonathan@107-208-128-79.lightspeed.tukrga.sbcglobal.net)
[03:04:18] *** Quits: gitesh (uid423739@id-423739.ilkley.irccloud.com) (Quit: Connection closed for inactivity)
[03:05:11] *** Quits: fedenix_ (~fedenix@gateway/tor-sasl/fedenix) (Remote host closed the connection)
[03:06:12] *** Quits: Klinda (~superleag@user/klinda) (Quit: Konversation terminated!)
[03:07:17] *** Joins: SGautam (uid286066@id-286066.ilkley.irccloud.com)
[03:07:51] *** Quits: causa_sui (~causasui@c-68-60-125-136.hsd1.mi.comcast.net) (Ping timeout: 245 seconds)
[03:09:35] *** Joins: YuGiOhJCJ (~YuGiOhJCJ@gateway/tor-sasl/yugiohjcj)
[03:10:13] *** Joins: causa_sui (~causasui@c-68-60-125-136.hsd1.mi.comcast.net)
[03:10:15] *** Joins: rama_ (~rama@c-24-130-92-222.hsd1.ca.comcast.net)
[03:10:33] *** Quits: zen_coder (~zen_coder@2a02:8109:a280:2d8d:d0e9:aad1:55a7:81ee) (Ping timeout: 252 seconds)
[03:11:07] *** Quits: zzbot (~zzbot@user/zzbot) (Ping timeout: 256 seconds)
[03:11:09] *** Quits: Guest7375 (~vit@chello085216193138.chello.sk) (Quit: Konversation terminated!)
[03:11:18] *** Quits: rama_ (~rama@c-24-130-92-222.hsd1.ca.comcast.net) (Client Quit)
[03:11:27] *** Joins: vit (~vit@chello085216193138.chello.sk)
[03:11:51] *** vit is now known as freeworld
[03:11:52] <anddam> I didn't understand his problem
[03:13:57] *** Quits: rama (~rama@c-24-130-92-222.hsd1.ca.comcast.net) (Ping timeout: 256 seconds)
[03:14:20] <anddam> and wouldn't wrapping his function with another function with his "always the same" call and then execute the wrapper in the pool?
[03:15:22] *** Quits: TheHermann (~TheHerman@gateway/tor-sasl/thehermann) (Quit: Leaving)
[03:15:45] *** Quits: bomb-on (~bomb-on@user/bomb-on) (Quit: aллилѹіа!)
[03:15:48] <jinsun__> yeah that would have worked too, so would functools.partial
[03:16:26] *** Joins: renlo (~Renlo_Ren@pool-108-14-112-182.nycmny.east.verizon.net)
[03:16:47] *** Quits: causa_sui (~causasui@c-68-60-125-136.hsd1.mi.comcast.net) (Ping timeout: 256 seconds)
[03:17:48] *** Joins: jcsteele (~j@user/jcsteele)
[03:17:52] <anddam> I was puzzled by "just hardcode the code in the function" -> "what do you mean?"
[03:18:03] *** Quits: freeworld (~vit@chello085216193138.chello.sk) (Quit: Konversation terminated!)
[03:18:13] <anddam> how was the function getting execute written in first place?
[03:18:15] *** Joins: chenqisu1 (~chenqisu1@183.217.201.47)
[03:18:18] <anddam> x/execute/ a/d/
[03:18:21] *** Joins: freeworld (~vit@chello085216193138.chello.sk)
[03:19:24] <jinsun__> I mean all the ways required rewriting the code anyway, so it rewriting the function to have the hardcoded parameter would have been the simplest
[03:20:05] *** Quits: freeworld (~vit@chello085216193138.chello.sk) (Client Quit)
[03:20:26] *** Joins: freeworld (~vit@chello085216193138.chello.sk)
[03:20:33] <jinsun__> but they didn't like that for some reason and went for the longest solution, probably there was some extra details that was not in that example
[03:21:47] *** Quits: freeworld (~vit@chello085216193138.chello.sk) (Client Quit)
[03:22:01] *** Quits: uxemacs (~timothy@user/uxemacs) (Ping timeout: 245 seconds)
[03:22:06] *** Joins: freeworld (~freeworld@chello085216193138.chello.sk)
[03:22:38] *** leizy is now known as n0cturna1
[03:24:19] *** Joins: jpn (~jpn@user/jpn)
[03:24:49] <anddam> or wrap the function, if it's from third party
[03:25:01] <anddam> anyway
[03:25:46] <anddam> what's a "pythonic" way to handle an argument that can be an object or an iterable of same object type?
[03:26:01] <SnoopJ> is the object itself iterable?
[03:26:06] <anddam> no
[03:26:24] *** Joins: skapata (~Skapata@2804:14c:87b0:9d2e:cdda:3757:8d29:77bf)
[03:26:24] *** Quits: skapata (~Skapata@2804:14c:87b0:9d2e:cdda:3757:8d29:77bf) (Changing host)
[03:26:24] *** Joins: skapata (~Skapata@user/skapata)
[03:26:28] <anddam> I have an argument and I want to consume it, but maybe a single object gets passed
[03:26:44] <SnoopJ> `try: iter(obj); its_an_iterable(obj); except TypeError: its_not(obj)`
[03:26:55] <BrenBarn> if it can be any iterable, you can try to call `iter` on it and if that fails assume it's just one
[03:26:56] <anddam> I am wondering if there's a plain syntax that would avoid the try:except:
[03:26:59] <bpalmer> you could do if not isinstance(o, abc.Iterable): o = [o]
[03:27:19] <anddam> but there isn't a builtin way to flatten a list of list, right?
[03:27:26] <anddam> so no [things].flatten()
[03:27:47] <jinsun__> and what would that give?
[03:27:57] <SnoopJ> anddam, why do you want to avoid it?
[03:28:15] <anddam> either [aThing] or things[:]
[03:28:16] <bpalmer> anddam: writing a flatten thing like that just moves the try:except or if check there instead.
[03:28:35] <anddam> SnoopJ: I figure I have been reading too much javascript and now I hate mankind
[03:28:38] *** Joins: backthen (~Thunderbi@c-76-103-177-91.hsd1.ca.comcast.net)
[03:28:53] <jinsun__> bpalmer's way is nice to avoid try except, I do similar thing to handle str when I need Sequence[str]
[03:29:05] *** Quits: [itchyjunk] (~itchyjunk@user/itchyjunk/x-7353470) (Remote host closed the connection)
[03:29:21] *** Joins: [itchyjunk] (~itchyjunk@user/itchyjunk/x-7353470)
[03:29:45] <anddam> but I see a nested block is actually structured and probably a Good Thing™
[03:29:47] *** Quits: NealRame (~a@89.187.163.193) (Quit: Konversation terminated!)
[03:29:48] *** Quits: jpn (~jpn@user/jpn) (Ping timeout: 240 seconds)
[03:29:50] <bpalmer> the try: except: with iter() is more reliable, since it doesn't require anything to be registered
[03:30:12] <anddam> I usually prefer the if:else: to try:except: in such case
[03:30:17] *** Quits: Seirdy (~Seirdy@sourcehut/user/seirdy) (Quit: exiting 3.4)
[03:30:19] <bpalmer> but, on the other hand, all "good" iterables will register themselves with the abstract class
[03:30:23] <jinsun__> Iterable has a subclasshook, don't have to register
[03:30:27] *** Quits: sobkas (~sobkas@95.175.17.217) (Quit: sobkas)
[03:31:00] * SnoopJ likes iter(obj) because it does what it says on the tin
[03:31:46] *** Quits: jdmark (~jdmark@user/jdmark) (Read error: Connection reset by peer)
[03:31:56] <bpalmer> oh, I didn't realize about the subclasshook
[03:32:00] *** Joins: perrierjouet (~perrier-j@modemcable012.251-130-66.mc.videotron.ca)
[03:32:02] <jinsun__> https://github.com/python/cpython/blob/3.10/Lib/_collections_abc.py#L265
[03:32:36] *** Joins: jamea22 (~jamea@189.231.55.29)
[03:33:02] *** Quits: jamea (~jamea@200.68.164.78) (Ping timeout: 240 seconds)
[03:33:35] *** Joins: alex11 (~alex11@user/alex11)
[03:34:07] *** Quits: renlo (~Renlo_Ren@pool-108-14-112-182.nycmny.east.verizon.net) (Ping timeout: 256 seconds)
[03:34:57] *** Quits: varaindemian (uid73404@id-73404.ilkley.irccloud.com) (Quit: Connection closed for inactivity)
[03:35:29] *** Quits: Wulf (~Wulf@user/wulf) (Ping timeout: 256 seconds)
[03:36:49] *** Joins: Wulf (~Wulf@user/wulf)
[03:37:10] *** Quits: jamea22 (~jamea@189.231.55.29) (Ping timeout: 250 seconds)
[03:37:30] *** Quits: funhouse (~funhouse@user/funhouse) (Quit: Client closed)
[03:37:30] *** Joins: herjazz (~herjazz@p10295192-ipngn22201marunouchi.tokyo.ocn.ne.jp)
[03:37:38] *** Quits: Affliction (affliction@idlerpg/player/affliction) (Quit: Read error: Connection reset by beer)
[03:38:42] <anddam> oh wow I don't even know what a subclasshook is
[03:39:09] *** Quits: qlixed (~qlixed@8.243.49.226) (Ping timeout: 252 seconds)
[03:39:11] *** Joins: padraigd (~Thunderbi@c-73-48-132-102.hsd1.ca.comcast.net)
[03:39:34] *** Joins: Affliction (affliction@idlerpg/player/affliction)
[03:39:44] *** Quits: Reign (~Username@ip98-161-226-10.ph.ph.cox.net) (Quit: Going offline, see ya! (www.adiirc.com))
[03:39:57] *** Joins: causa_sui (~causasui@c-68-60-125-136.hsd1.mi.comcast.net)
[03:40:06] *** Quits: padraigd (~Thunderbi@c-73-48-132-102.hsd1.ca.comcast.net) (Remote host closed the connection)
[03:40:55] *** Quits: jpds (~jpds@gateway/tor-sasl/jpds) (Ping timeout: 240 seconds)
[03:41:08] *** Parts: agireud (~agireud@user/agireud) ()
[03:41:57] *** Joins: agireud (~agireud@user/agireud)
[03:42:07] <jinsun__> it is a method you can add to abstract base classes to treat other classes as subclass at runtime even if they didn't inherit from the abc
[03:42:35] *** Quits: MJ (~mjpieters@zopatista.plus.com) (Quit: ZNC - http://znc.in)
[03:43:00] *** Quits: jpic (~jpic@145.224.77.238) (Ping timeout: 240 seconds)
[03:43:00] *** Joins: jpds (~jpds@gateway/tor-sasl/jpds)
[03:43:19] <jinsun__> https://docs.python.org/3/library/abc.html#abc.ABCMeta.__subclasshook__
[03:43:28] *** Parts: agireud (~agireud@user/agireud) ()
[03:43:46] *** Joins: agireud (~agireud@user/agireud)
[03:44:06] <tpr> a question about metaclasses, protocols (of typing). I would like to enforce some interfaces in classes which inherit from a base class that sets a metaclass. as typing.Protocol sets a metaclass itself, simple inheritance will error out. is the best approach to create a combined type from both metaclasses, or is there another solution?
[03:44:39] *** Quits: causa_sui (~causasui@c-68-60-125-136.hsd1.mi.comcast.net) (Ping timeout: 252 seconds)
[03:44:50] *** Joins: MJ (~mjpieters@zopatista.plus.com)
[03:45:04] *** Parts: agireud (~agireud@user/agireud) ()
[03:45:10] *** Joins: jpic (~jpic@145.224.77.178)
[03:46:11] <jinsun__> sounds like another need of intersection types? which don't exist yet https://github.com/python/typing/issues/213
[03:47:16] *** Quits: rinzewind (~rinzewind@user/rinzewind) (Quit: leaving)
[03:47:20] *** Joins: agireud (~agireud@user/agireud)
[03:47:57] *** Quits: grimvar (~grimvar@i5C75F634.versanet.de) (Ping timeout: 252 seconds)
[03:47:59] <jinsun__> the easiest way I think is to make a Protocol for the base class too, then you can inherit from both the Protocols and get a combined bigger Protocol
[03:48:05] *** Joins: five6433334967 (~five6@8.40.111.87)
[03:48:16] *** Parts: agireud (~agireud@user/agireud) ()
[03:49:05] *** Joins: agireud (~agireud@user/agireud)
[03:49:41] *** Joins: grimvar (~grimvar@i5C75F58F.versanet.de)
[03:50:10] *** Quits: five643333496 (~five6@8.40.26.20) (Ping timeout: 250 seconds)
[03:50:10] *** five6433334967 is now known as five643333496
[03:50:13] *** Joins: c4017w_ (~c4017@209.52.68.8)
[03:51:00] <tpr> jinsun__: thanks, subscribed to the issue!
[03:51:39] *** Quits: TheCat (~TheCat@user/z-cat) (Ping timeout: 250 seconds)
[03:53:27] <tpr> jinsun__: hmm. so instead of enforcing the base class interface directly, make the base class inherit from some Protocol-inheriting class (or maybe even from the Protocol class itself?). sounds like a plan
[03:54:00] *** Quits: c4017w__ (~c4017@209.52.68.8) (Ping timeout: 252 seconds)
[03:54:02] *** Quits: elwoodpd (~elwoodpd@85.210.161.53) (Ping timeout: 240 seconds)
[03:54:26] *** Parts: agireud (~agireud@user/agireud) ()
[03:54:36] *** Quits: PaterTemporalis (~woooopsie@bl21-200-69.dsl.telepac.pt) (Ping timeout: 240 seconds)
[03:55:15] <tpr> err, enforcing the "base interface" from the base class by inheritance to its childs, simply making that base class to also inherit from Protocol-derived class to force it to be a subclass of Protocol
[03:55:41] *** Joins: five6433334968 (~five6@8.40.26.20)
[03:57:02] *** Quits: five643333496 (~five6@8.40.111.87) (Ping timeout: 240 seconds)
[03:57:02] *** five6433334968 is now known as five643333496
[03:57:29] *** Joins: FlipFlop (~FlipFlop@user/fl1pfl0p)
[03:58:12] <jinsun__> not sure about base inheriting from  protocol and your metaclass problem, that could still be an issue, I was thinking of just making the protocol separate and use that for annotations only, and keep the implementation as it is
[03:58:46] *** Joins: zeden (~zeden@user/zeden)
[04:01:04] *** Quits: CodePoint (~jonathan@107-208-128-79.lightspeed.tukrga.sbcglobal.net) (Quit: WeeChat 3.4)
[04:01:46] <tpr> https://bpa.st/XTBA here's a simple test case
[04:03:07] <tpr> so I want to make the child implement the protocol, as only another way I could enforce the interface would be creating tests that check isinstance() after declaring the classes with @runtime_checkable
[04:04:00] <tpr> the problem is that explicit inheritance would make it much cleaner, while also allowing static code analysis tools to help spot mistakes
[04:06:15] *** Quits: gurkenglas (~gurkengla@dslb-178-012-018-212.178.012.pools.vodafone-ip.de) (Ping timeout: 268 seconds)
[04:06:28] <jinsun__> yeah inheritance would be trouble can't avoid that error
[04:07:22] <tpr> https://bpa.st/FDDQ I could do this, but I'm wondering if that's the proper way
[04:07:45] <tpr> or well, importing an internal meta from typing cannot be the proper way, but.. :D
[04:08:15] *** Quits: adiKt (uid472628@id-472628.tinside.irccloud.com) (Quit: Connection closed for inactivity)
[04:08:17] <jinsun__> if you don't inherit and later try to assign the Child to a variable that is annotated as SomeInterface, the static checks will happen there, a: SomeInterface = Child()
[04:08:20] <tpr> I haven't really tried to put this to production, I'm just eyeing on the options here
[04:08:43] <tpr> yes, that's the case with "enforcing the interface using tests"
[04:11:02] *** Joins: rama (~rama@c-24-130-92-222.hsd1.ca.comcast.net)
[04:11:36] *** Quits: leitz (~LeamHall@072-182-158-027.res.spectrum.com) (Quit: nappy time)
[04:12:06] *** Quits: wattux (~wattux@2a02:238:f014:472:907e:3160:8460:cd7a) (Quit: Client closed)
[04:12:08] *** Joins: kaiseisei (~Thunderbi@user/kaiseisei)
[04:13:01] *** Joins: jamea (~jamea@177.239.81.39)
[04:13:17] *** Quits: tetravus (~tetravus@c-71-231-69-112.hsd1.wa.comcast.net) (Ping timeout: 240 seconds)
[04:15:49] *** Quits: freeworld (~freeworld@chello085216193138.chello.sk) (Ping timeout: 240 seconds)
[04:16:10] *** Quits: xrogaan (~xrogaan@user/xrogaan) (Quit: Leaving)
[04:16:12] *** Joins: prodigius (~prodigius@75-163-174-136.clsp.qwest.net)
[04:16:38] *** Quits: FFY00_ (~FFY00@archlinux/trusteduser/ffy00) (Remote host closed the connection)
[04:17:02] *** Joins: FFY00_ (~FFY00@archlinux/trusteduser/ffy00)
[04:18:22] *** Joins: agireud (~agireud@user/agireud)
[04:18:34] *** Joins: CodePoint (~jonathan@107-208-128-79.lightspeed.tukrga.sbcglobal.net)
[04:20:11] *** Parts: agireud (~agireud@user/agireud) ()
[04:21:35] *** Quits: hexenbane (~hexenbane@fixed-187-188-14-118.totalplay.net) (Quit: The Lounge - https://thelounge.chat)
[04:23:18] *** Joins: george91 (~Adium@103.36.16.56)
[04:23:36] *** Joins: agireud (~agireud@user/agireud)
[04:24:02] *** Quits: stdInOut (~stdInOut@user/stdInOut) (Quit: Leaving)
[04:24:18] *** Parts: agireud (~agireud@user/agireud) ()
[04:24:54] *** Joins: adiKt (uid472628@id-472628.tinside.irccloud.com)
[04:25:11] *** Joins: merijn (~merijn@c-001-001-001.client.esciencecenter.eduvpn.nl)
[04:25:19] *** Joins: agireud (~agireud@user/agireud)
[04:25:37] *** Quits: mrkajetanp (~mrkajetan@2a01:4b00:ea36:6c00:7994:941c:3f5d:2b88) (Ping timeout: 240 seconds)
[04:25:50] *** Parts: agireud (~agireud@user/agireud) ()
[04:26:02] *** Quits: CodePoint (~jonathan@107-208-128-79.lightspeed.tukrga.sbcglobal.net) (Ping timeout: 240 seconds)
[04:26:57] *** Joins: Guest48 (~Guest48@vrgn-inetfw-default-nat.adobe.info)
[04:28:18] *** Joins: zzbot (~zzbot@user/zzbot)
[04:30:16] *** Joins: Seirdy (~Seirdy@sourcehut/user/seirdy)
[04:31:10] *** Quits: Gamah (~quassel@gamah.net) (Quit: https://quassel-irc.org - Chat comfortably. Anywhere.)
[04:31:20] *** Quits: mike18_ (~geri@216.200.232.252) (Ping timeout: 250 seconds)
[04:31:24] *** Joins: xavie (~xavie@176-139-252-198.abo.bbox.fr)
[04:31:44] *** Joins: agireud (~agireud@user/agireud)
[04:31:48] *** Joins: Gamah (~quassel@gamah.net)
[04:32:20] <Guest48> i've been developing with python for a few years.  i'm now trying to do some non-trivial stuff with stdout and streams and I realize how tenuous my grasp on the streams actually is.  I've been trying to learn as much as I can but I, still struggling with basic concepts around file descriptors.
[04:32:46] *** Parts: agireud (~agireud@user/agireud) ()
[04:32:53] *** Joins: CodeMouse92 (~CodeMouse@user/codemouse92)
[04:33:02] *** Quits: schumaml (~schumaml@dslb-094-216-170-156.094.216.pools.vodafone-ip.de) (Ping timeout: 240 seconds)
[04:33:03] *** Quits: Wulf (~Wulf@user/wulf) (Ping timeout: 252 seconds)
[04:33:06] <SnoopJ> Guest48, concepts like what?
[04:33:06] *** Quits: pretty_dumm_guy (trottel@gateway/vpn/protonvpn/prettydummguy/x-88029655) (Quit: WeeChat 3.4.1)
[04:33:20] *** Joins: xavie1 (~xavie@176-139-252-198.abo.bbox.fr)
[04:33:38] *** Quits: \mSg (mSg@user/msg/x-0285936) ()
[04:33:51] *** Quits: xcombelle (~xavie@176-139-252-198.abo.bbox.fr) (Ping timeout: 256 seconds)
[04:34:09] *** Joins: agireud (~agireud@user/agireud)
[04:34:10] <Guest48> Here's my actual goal, I've created a decorator that my team can add to main.  I want that to capture all the stdout and stderr of all external programs run subprocess.run, without them having to change any of the call sites
[04:34:30] <Guest48> I'm already capturing all the stdout with contextmanager.redirect_stdout/err.  that was trivial.
[04:34:33] *** Quits: Batzy (~quassel@user/batzy) (Quit: https://quassel-irc.org - Chat comfortably. Anywhere.)
[04:34:49] *** Joins: Wulf (~Wulf@user/wulf)
[04:34:52] *** Joins: lsrtl__ (~lsrtl@user/lsrtl)
[04:35:00] *** Quits: FluffyMask (~masque@user/fluffymask) (Quit: WeeChat 3.4.1)
[04:35:01] <Guest48> And iv'e read dozens of posts and articles and tutorials about capturing stdout from DLL loads and subprocess/POpen.
[04:35:05] *** Joins: jeho (~jehoshaph@user/jehoshaphat)
[04:35:10] *** Joins: schumaml (~schumaml@dslb-188-104-171-138.188.104.pools.vodafone-ip.de)
[04:35:43] <Guest48> None of them really explores the particular strategy/concept I would need, which seems fairly straightforward in my head.
[04:36:06] *** Quits: xavie (~xavie@176-139-252-198.abo.bbox.fr) (Ping timeout: 250 seconds)
[04:36:23] <Guest48> That is, when you do subprocess.run with capture_stdout, =False, the stdout from the process all pours into the stdout/stderr of the terminal... fd0
[04:36:25] <Guest48> brb
[04:37:02] *** Quits: lsrtl_ (~lsrtl@user/lsrtl) (Ping timeout: 240 seconds)
[04:37:05] *** Joins: Batzy (~quassel@user/batzy)
[04:37:15] *** Parts: agireud (~agireud@user/agireud) ()
[04:38:40] <gevreeen> https://peps.python.org/pep-3333/ reads "The server or gateway invokes the application callable once for each request it receives from an HTTP client, that is directed at the application.". "once for each request, then why must WSGI's application callable be a generator?
[04:41:50] *** Joins: agireud (~agireud@user/agireud)
[04:42:18] <Guest48> It seems to me that it should be possible to somehow reconfigure the file descriptor for the terminal so that, subprocess.run keeps doing what it normally does,  but the stdout doesn't come to terminal, but instead goes to a different file like object.
[04:43:16] <Guest48> But nobody talks about this approach.  All the documentation talks about how to create and pass new pipes to POpen and capture the stdout, or just capture the result of subprocess.run and iterate over the results.
[04:43:17] *** Parts: agireud (~agireud@user/agireud) ()
[04:46:12] *** Joins: agireud (~agireud@user/agireud)
[04:46:19] <SnoopJ> gevreeen, it doesn't have to be
[04:47:13] <gevreeen> yeah, this line in the pep "for data in result:"
[04:48:01] <SnoopJ> gevreeen, the very first code sample in the PEP is a straightforward function that implements a WSGI application
[04:48:08] <SnoopJ> (i.e. not a generator)
[04:48:34] <gevreeen> yes, under the section "The Server/Gateway Side", that is. however, I'm not finding where the status code and the headers are sent.
[04:48:58] *** Parts: agireud (~agireud@user/agireud) ()
[04:50:00] *** Joins: agireud (~agireud@user/agireud)
[04:50:20] <gevreeen> ah, nvm.
[04:50:35] *** Joins: c4017w__ (~c4017@209.52.68.8)
[04:51:52] *** Parts: agireud (~agireud@user/agireud) ()
[04:51:59] *** Quits: frost (~frost@user/frost) (Ping timeout: 256 seconds)
[04:52:17] *** Quits: nicoz (nicoz@ubuntu/member/nicoz) (Ping timeout: 240 seconds)
[04:52:30] *** Quits: ghost43 (~ghost43@gateway/tor-sasl/ghost43) (Remote host closed the connection)
[04:52:47] <gevreeen> I think I'm more puzzled at [:]---what's the difference between aa = [bb,cc] and aa[:] = [bb,cc]?
[04:53:42] *** Joins: agireud (~agireud@user/agireud)
[04:53:52] <SnoopJ> gevreeen, the first one declares "the name 'aa' shall now refer to the list ..." and the second one delares "the object named 'aa' should have its contents set from the list..."
[04:53:55] *** Joins: ghost43 (~ghost43@gateway/tor-sasl/ghost43)
[04:53:57] *** Quits: c4017w_ (~c4017@209.52.68.8) (Ping timeout: 252 seconds)
[04:53:57] *** Quits: peterandre (peterandre@2605:6400:c847:1524::4251) (Ping timeout: 252 seconds)
[04:54:07] *** Joins: Hanii (~textual@2a00:23c5:c583:a300:d026:fbc:9f82:6678)
[04:54:16] <SnoopJ> i.e. the first one moves the name, the second one mutates the object the name points at
[04:54:17] *** Quits: kaiseisei (~Thunderbi@user/kaiseisei) (Remote host closed the connection)
[04:54:31] *** Joins: rje (~textual@50.35.241.164)
[04:54:32] <gevreeen> and the second one guarantees a copy, no?
[04:55:34] <nedbat> gevreeen: yes
[04:55:44] <nedbat> and the first guarantees not a copy
[04:55:47] *** Parts: agireud (~agireud@user/agireud) ()
[04:55:58] <gevreeen> neat
[04:56:52] *** Quits: KevinX (~KevinX@user/KevinX) (Quit: Textual IRC Client: www.textualapp.com)
[04:59:04] *** Joins: kaiseisei (~Thunderbi@user/kaiseisei)
[04:59:16] *** Joins: agireud (~agireud@user/agireud)
[04:59:21] *** Joins: dodobrain (~dodobrain@user/dodobrain)
[04:59:27] *** Quits: merijn (~merijn@c-001-001-001.client.esciencecenter.eduvpn.nl) (Ping timeout: 252 seconds)
[05:00:57] *** Quits: jmiehe (~Thunderbi@user/jmiehe) (Quit: jmiehe)
[05:04:06] *** Quits: trace987 (~f200yx10@ip5b42976d.dynamic.kabel-deutschland.de) (Ping timeout: 245 seconds)
[05:05:03] *** Joins: causa_sui (~causasui@c-68-60-125-136.hsd1.mi.comcast.net)
[05:05:41] *** Joins: irc_user (uid423822@id-423822.lymington.irccloud.com)
[05:07:45] *** Joins: nuclearg1 (~nucleargr@user/nuclearg1)
[05:08:21] *** Quits: t2mkn (~t2mkn@user/t2mkn) (Quit: ZNC 1.7.5+deb4 - https://znc.in)
[05:09:17] *** Quits: causa_sui (~causasui@c-68-60-125-136.hsd1.mi.comcast.net) (Ping timeout: 240 seconds)
[05:10:17] *** Parts: agireud (~agireud@user/agireud) ()
[05:11:00] *** Quits: Iolo (~iolo@user/Iolo) (Quit: Leaving)
[05:12:01] *** Joins: rindolf (~shlomif@inkscape/dev/shlomif)
[05:12:06] *** Quits: nuclearg1 (~nucleargr@user/nuclearg1) (Ping timeout: 252 seconds)
[05:12:36] *** Joins: agireud (~agireud@user/agireud)
[05:13:46] *** Parts: agireud (~agireud@user/agireud) ()
[05:17:39] *** Joins: t2mkn (~t2mkn@user/t2mkn)
[05:17:40] *** Joins: causa_sui (~causasui@c-68-60-125-136.hsd1.mi.comcast.net)
[05:18:16] *** Joins: rtkng (~rtkng@024-176-075-241.res.spectrum.com)
[05:18:36] *** Quits: ovnicraft (~ovnicraft@ftth-179-49-44-28.cue.celerity.ec) (Ping timeout: 240 seconds)
[05:18:36] *** Joins: agireud (~agireud@user/agireud)
[05:19:01] *** Quits: akaWolf (~akaWolf@akawolf.org) (Ping timeout: 268 seconds)
[05:20:16] *** Joins: ovnicraft (~ovnicraft@corp-179-49-44-28.uio.puntonet.ec)
[05:20:29] *** Joins: akaWolf (~akaWolf@akawolf.org)
[05:22:02] *** Quits: causa_sui (~causasui@c-68-60-125-136.hsd1.mi.comcast.net) (Ping timeout: 250 seconds)
[05:22:13] *** Parts: agireud (~agireud@user/agireud) ()
[05:22:34] *** Joins: transeIstor (~transeIst@h67-204-160-244.bendor.broadband.dynamic.tds.net)
[05:23:09] *** Quits: jamea (~jamea@177.239.81.39) (Ping timeout: 256 seconds)
[05:23:50] *** Joins: irf21k (~irf21k@2401:4900:336e:1da1:1:0:4fb8:9ff0)
[05:25:04] *** Quits: wac (~wac@user/wac) (Ping timeout: 250 seconds)
[05:26:22] *** Joins: agireud (~agireud@user/agireud)
[05:27:01] <Guest48> nedbat, does what i suggested sound remotely plausible?
[05:27:40] <nedbat> Guest48: sorry, i don't know.
[05:27:45] *** Joins: causa_sui (~causasui@c-68-60-125-136.hsd1.mi.comcast.net)
[05:27:47] *** Quits: rama (~rama@c-24-130-92-222.hsd1.ca.comcast.net) (Read error: Connection reset by peer)
[05:28:20] *** Joins: grep_xtrange (~x@ac255238.ppp.asahi-net.or.jp)
[05:28:36] *** Quits: BUSY (~BUSY@user/busy) (Read error: Connection reset by peer)
[05:30:37] <Guest48> k, thanks anyway
[05:30:47] *** Joins: hanzo (uid532183@user/hanzo)
[05:31:39] *** Quits: z8z (~x@ac255238.ppp.asahi-net.or.jp) (Ping timeout: 256 seconds)
[05:31:58] *** Quits: roxfan (~roxfan@2a02:a03f:a2be:4f00:51a:35a2:9d4e:fbfc) (Ping timeout: 268 seconds)
[05:32:52] *** Quits: causa_sui (~causasui@c-68-60-125-136.hsd1.mi.comcast.net) (Ping timeout: 250 seconds)
[05:33:29] *** Parts: agireud (~agireud@user/agireud) ()
[05:33:47] *** Joins: rama (~rama@c-24-130-92-222.hsd1.ca.comcast.net)
[05:34:03] *** Joins: djapo (~archangel@user/djapo)
[05:34:32] *** Quits: waveclaw_ (~quassel@ip98-162-237-241.ok.ok.cox.net) (Quit: https://quassel-irc.org - Chat comfortably. Anywhere.)
[05:35:02] *** Joins: bindu_ (~bindu@user/bindu)
[05:35:15] *** Quits: bindu (~bindu@user/bindu) (Ping timeout: 240 seconds)
[05:36:04] *** Quits: jcsteele (~j@user/jcsteele) (Quit: jcsteele)
[05:36:23] *** Joins: cowsay-moo (~cowsay-mo@2a0c:f040:0:4356:1015:f228:53d:4f0e)
[05:36:48] *** bindu_ is now known as bindu
[05:37:14] *** Joins: jcsteele (~j@user/jcsteele)
[05:38:30] *** Quits: jero98772 (~jero98772@2800:484:1d80:d8ce:3490:26c5:1782:da8c) (Ping timeout: 252 seconds)
[05:38:40] *** Quits: jcsteele (~j@user/jcsteele) (Client Quit)
[05:39:22] *** Quits: rama (~rama@c-24-130-92-222.hsd1.ca.comcast.net) (Ping timeout: 250 seconds)
[05:40:01] *** Joins: jcsteele (~j@user/jcsteele)
[05:40:42] *** Quits: jcsteele (~j@user/jcsteele) (Client Quit)
[05:41:54] *** Joins: agireud (~agireud@user/agireud)
[05:42:24] *** Joins: jcsteele (~j@user/jcsteele)
[05:43:17] *** Quits: jcsteele (~j@user/jcsteele) (Client Quit)
[05:43:18] *** Joins: BUSY (~BUSY@user/busy)
[05:43:39] *** Quits: ghost43 (~ghost43@gateway/tor-sasl/ghost43) (Remote host closed the connection)
[05:43:48] *** Quits: Siecje (~Siecje@97.111.200.190) (Remote host closed the connection)
[05:43:57] *** Joins: ghost43 (~ghost43@gateway/tor-sasl/ghost43)
[05:44:17] *** Joins: causa_sui (~causasui@c-68-60-125-136.hsd1.mi.comcast.net)
[05:45:01] *** Joins: jcsteele (~j@user/jcsteele)
[05:45:32] *** Quits: Forsaken87 (~quassel@ip-037-201-193-116.um10.pools.vodafone-ip.de) (Ping timeout: 240 seconds)
[05:45:51] *** Quits: jcsteele (~j@user/jcsteele) (Client Quit)
[05:46:17] *** Quits: Guest48 (~Guest48@vrgn-inetfw-default-nat.adobe.info) (Quit: Client closed)
[05:46:24] *** Parts: agireud (~agireud@user/agireud) ()
[05:47:34] *** Joins: jcsteele (~j@user/jcsteele)
[05:48:13] *** Joins: jdmark (~jdmark@user/jdmark)
[05:48:25] *** Quits: jcsteele (~j@user/jcsteele) (Client Quit)
[05:48:32] *** Quits: causa_sui (~causasui@c-68-60-125-136.hsd1.mi.comcast.net) (Ping timeout: 240 seconds)
[05:50:05] *** Joins: jcsteele (~j@user/jcsteele)
[05:50:17] *** Joins: jero98772 (~jero98772@2800:484:1d80:d8ce:1ad4:6dab:6f0a:4cff)
[05:50:42] *** Joins: peterandre (peterandre@2605:6400:c847:1524::4251)
[05:50:51] *** Joins: c4017w_ (~c4017@209.52.68.8)
[05:50:59] *** Quits: jcsteele (~j@user/jcsteele) (Client Quit)
[05:51:21] *** Joins: waveclaw (~quassel@ip98-162-237-241.ok.ok.cox.net)
[05:52:41] *** Joins: jcsteele (~j@user/jcsteele)
[05:53:17] *** Quits: jcsteele (~j@user/jcsteele) (Client Quit)
[05:53:37] *** Quits: Barones (~Barones@user/Barones) (Quit: Leaving)
[05:54:19] *** Quits: c4017w__ (~c4017@209.52.68.8) (Ping timeout: 256 seconds)
[05:54:35] *** Joins: jcsteele (~j@user/jcsteele)
[05:55:23] *** Quits: jcsteele (~j@user/jcsteele) (Client Quit)
[05:55:57] *** Quits: FlipFlop (~FlipFlop@user/fl1pfl0p) (Ping timeout: 240 seconds)
[05:56:24] *** Joins: tetravus (~tetravus@c-71-231-69-112.hsd1.wa.comcast.net)
[05:56:44] <foo> I really doubt it matters... but there are a few situations where we take text from database and show on the frontend. In one scenario, we want to take 2 fields, hyperlink them to a google search. In another situation, we want to take a linkedin URL and make it clickable. This can be done either on the backend or the frontend. Being a backend person myself, I tend to solve it there. One of our devs likes to
[05:56:49] *** Quits: cozmo (~user@65.78.142.57) (Read error: Connection reset by peer)
[05:56:50] <foo> do stuff like that in javascript. Is there any best practice or logic one way or the other? Either way is fine, simply trying to fill my thinking brain.
[05:56:58] *** Quits: SGautam (uid286066@id-286066.ilkley.irccloud.com) (Quit: Connection closed for inactivity)
[05:57:03] *** Joins: jcsteele (~j@user/jcsteele)
[05:57:04] *** Joins: \mSg (mSg@user/msg/x-0285936)
[05:57:45] *** Quits: jero98772 (~jero98772@2800:484:1d80:d8ce:1ad4:6dab:6f0a:4cff) (Ping timeout: 252 seconds)
[05:57:57] *** Quits: jcsteele (~j@user/jcsteele) (Client Quit)
[05:58:02] *** Quits: lsrtl__ (~lsrtl@user/lsrtl) (Ping timeout: 240 seconds)
[05:59:18] *** Joins: mixfix41 (~sdenyninn@user/mixfix41)
[05:59:31] *** Joins: agireud (~agireud@user/agireud)
[05:59:42] *** Joins: jcsteele (~j@user/jcsteele)
[06:00:39] *** Parts: agireud (~agireud@user/agireud) ()
[06:00:47] *** Quits: PJBoy (~PJBoy@user/pjboy) (Ping timeout: 250 seconds)
[06:01:07] *** Joins: agireud (~agireud@user/agireud)
[06:01:34] *** Joins: nicoz (nicoz@nicoz.letz.dev)
[06:02:27] *** Parts: agireud (~agireud@user/agireud) ()
[06:03:30] *** Joins: agireud (~agireud@user/agireud)
[06:04:02] *** Quits: ephemer0l (~ephemer0l@organizedmagnetism.com) (Ping timeout: 240 seconds)
[06:04:20] *** Quits: jcsteele (~j@user/jcsteele) (Ping timeout: 252 seconds)
[06:05:05] <gevreeen> what would the WSGI-application callable look like, if, given server A and client B, B connects to A, and A could POST to B?
[06:05:07] *** Joins: causa_sui (~causasui@c-68-60-125-136.hsd1.mi.comcast.net)
[06:05:08] *** Joins: crashrep (~crashrep@user/crashrep)
[06:05:48] *** Quits: zamba (~marius@185.47.250.222) (Ping timeout: 250 seconds)
[06:05:53] <gevreeen> or is it possible with WSGI?
[06:06:05] *** Quits: CodeMouse92 (~CodeMouse@user/codemouse92) (Quit: Oh freddled gruntbuggly | Thy micturations are to me | As plurdled gabbleblotchits | On a lurgid bee)
[06:06:26] *** Joins: zamba (~marius@185.47.250.222)
[06:07:11] *** Quits: mixfix41 (~sdenyninn@user/mixfix41) (Remote host closed the connection)
[06:09:05] *** Quits: pythonoob (~thelounge@om126194014222.10.openmobile.ne.jp) (Read error: Connection reset by peer)
[06:09:26] *** Joins: jero98772 (~jero98772@2800:484:1d80:d8ce:266:d12c:a1d5:6364)
[06:09:42] *** Quits: schumaml (~schumaml@dslb-188-104-171-138.188.104.pools.vodafone-ip.de) (Ping timeout: 250 seconds)
[06:09:51] *** Quits: causa_sui (~causasui@c-68-60-125-136.hsd1.mi.comcast.net) (Ping timeout: 252 seconds)
[06:10:03] *** Joins: jcsteele (~j@user/jcsteele)
[06:10:07] *** Joins: maryo (~Maryo@user/maryo)
[06:10:42] *** Quits: jcsteele (~j@user/jcsteele) (Client Quit)
[06:12:07] *** Joins: jcsteele (~j@user/jcsteele)
[06:12:31] *** Joins: ub (~Thunderbi@p200300ecdf19b776fd6bfc6fe6a8a410.dip0.t-ipconnect.de)
[06:12:31] *** Quits: jcsteele (~j@user/jcsteele) (Client Quit)
[06:13:08] *** Quits: ubert (~Thunderbi@p200300ecdf19b79d7171724430720c97.dip0.t-ipconnect.de) (Ping timeout: 252 seconds)
[06:13:08] *** ub is now known as ubert
[06:13:27] *** Joins: schumaml (~schumaml@dslb-188-104-160-106.188.104.pools.vodafone-ip.de)
[06:13:37] *** Quits: Xano_ (~Xano@2a00:23c4:4204:700:c9b8:3d25:86ed:5d18) (Ping timeout: 240 seconds)
[06:14:16] *** Joins: jcsteele (~j@user/jcsteele)
[06:14:19] *** Joins: pythonoob (~thelounge@om126194014222.10.openmobile.ne.jp)
[06:15:04] *** Quits: jcsteele (~j@user/jcsteele) (Client Quit)
[06:16:04] *** Quits: Midjak (~Midjak@82.66.147.146) (Quit: This computer has gone to sleep)
[06:16:26] *** Joins: noobaroo (~noobaroo@user/noobaroo)
[06:16:44] *** Joins: jcsteele (~j@user/jcsteele)
[06:17:11] *** Joins: rama (~rama@c-24-130-92-222.hsd1.ca.comcast.net)
[06:17:36] *** Quits: mrgz (~mrgz@201-42-0-191.dsl.telesp.net.br) (Read error: Connection reset by peer)
[06:17:39] *** Quits: jcsteele (~j@user/jcsteele) (Client Quit)
[06:17:48] *** Joins: lsrtl__ (~lsrtl@user/lsrtl)
[06:18:41] *** Quits: junktext (~junktext@gateway/vpn/pia/junktext) (Ping timeout: 256 seconds)
[06:19:19] *** Joins: jcsteele (~j@user/jcsteele)
[06:19:24] *** Quits: blindguard (~blindguar@2a02:908:1864:c200::ef3c) (Quit: Konversation terminated!)
[06:20:13] *** Quits: jcsteele (~j@user/jcsteele) (Client Quit)
[06:21:42] *** Joins: mixfix41 (~sdenyninn@user/mixfix41)
[06:21:53] *** Joins: jcsteele (~j@user/jcsteele)
[06:22:48] *** Quits: jcsteele (~j@user/jcsteele) (Client Quit)
[06:23:13] *** Joins: llanhmod (~personnel@user/domhnall/x-2887755)
[06:23:50] *** Quits: pythonoob (~thelounge@om126194014222.10.openmobile.ne.jp) (Read error: Connection reset by peer)
[06:24:27] *** Joins: jcsteele (~j@user/jcsteele)
[06:24:40] *** Joins: matsaman (~matsaman@user/matsaman)
[06:25:21] *** Quits: jcsteele (~j@user/jcsteele) (Client Quit)
[06:25:22] *** Joins: causa_sui (~causasui@c-68-60-125-136.hsd1.mi.comcast.net)
[06:27:04] *** Joins: jcsteele (~j@user/jcsteele)
[06:27:34] *** Joins: pythonoob (~thelounge@om126194014222.10.openmobile.ne.jp)
[06:27:56] *** Quits: jcsteele (~j@user/jcsteele) (Client Quit)
[06:28:03] *** Joins: cluelessperson (~cluelessp@user/cluelessperson)
[06:29:42] *** Joins: jcsteele (~j@user/jcsteele)
[06:30:02] *** Quits: causa_sui (~causasui@c-68-60-125-136.hsd1.mi.comcast.net) (Ping timeout: 240 seconds)
[06:30:29] *** Quits: jcsteele (~j@user/jcsteele) (Client Quit)
[06:30:30] *** Quits: ghost43 (~ghost43@gateway/tor-sasl/ghost43) (Remote host closed the connection)
[06:30:32] <pythonoob> Hello, anyone using python for ArcgisPro desktop version?
[06:30:36] *** Joins: nuclearg1 (~nucleargr@user/nuclearg1)
[06:30:43] *** Joins: ghost43 (~ghost43@gateway/tor-sasl/ghost43)
[06:30:46] *** Quits: ghost43 (~ghost43@gateway/tor-sasl/ghost43) (Remote host closed the connection)
[06:30:48] <SnoopJ> foo, I would tend towards making that the frontend's problem: "clickable" doesn't even really make sense on not-the-frontend
[06:31:09] <pythonoob> I want to learn python to use with Arcgis and Arcpy.
[06:31:12] <SnoopJ> (there could be good reasons to render snippets of a complete document on the backend, but this doesn't sound like one of them)
[06:31:17] *** Joins: ghost43 (~ghost43@gateway/tor-sasl/ghost43)
[06:31:20] *** Quits: noobaroo (~noobaroo@user/noobaroo) (Quit: Leaving)
[06:31:26] <pythonoob> I found some tutorials but its all aimed at intermediate level
[06:31:31] <pythonoob> Nothing basic level
[06:31:39] <foo> SnoopJ: that's a good point, I'm looking for thinking like that.
[06:31:42] *** Joins: noobaroo (~noobaroo@user/noobaroo)
[06:31:46] <pythonoob> Can someone point me in the right direction?
[06:32:01] *** Quits: dclxvi (~dclxvi@2a02:8084:84:4100:285:c627:ddf:58da) (Quit: dclxvi)
[06:32:11] *** Joins: causa_sui (~causasui@c-68-60-125-136.hsd1.mi.comcast.net)
[06:32:13] *** Joins: jcsteele (~j@user/jcsteele)
[06:33:03] *** Quits: jcsteele (~j@user/jcsteele) (Client Quit)
[06:34:48] *** Joins: jcsteele (~j@user/jcsteele)
[06:34:53] <bpalmer> foo: It depends in part on how data is transmitted, but I would decorate links on the server end, preferentially -- in contrast to snoopj's preference, it seems. The server knows which things are fetched from the database as links; the frontend would likely just be looking for anything that looks like a URL and turning it into a hyperlink
[06:35:00] *** Quits: Roey (~Roey@user/Roey) (Quit: Client exiting)
[06:35:29] <bpalmer> foo: that means it might be easier for untrusted links to be present, and for unusual urls to be missed (most regular expressions for URLs are very inexact given the flexibility of URLs)
[06:35:38] *** Quits: jcsteele (~j@user/jcsteele) (Client Quit)
[06:35:40] <SnoopJ> bpalmer, foo, my preference is mostly because the data may feed into systems where the data is not going to become a link
[06:36:04] <bpalmer> yeah, I'm used to the backend populating HTML, which shapes my approach.
[06:36:32] *** Quits: causa_sui (~causasui@c-68-60-125-136.hsd1.mi.comcast.net) (Ping timeout: 240 seconds)
[06:36:39] *** Quits: jero98772 (~jero98772@2800:484:1d80:d8ce:266:d12c:a1d5:6364) (Remote host closed the connection)
[06:37:22] *** Joins: jcsteele (~j@user/jcsteele)
[06:38:03] <SnoopJ> yea, it's I think a question about where you want to draw the line on division of responsibilities
[06:38:04] *** Quits: dodobrain (~dodobrain@user/dodobrain) (Remote host closed the connection)
[06:38:13] *** Quits: jcsteele (~j@user/jcsteele) (Client Quit)
[06:38:19] <SnoopJ> (or not-division because you just get rid of one of the two)
[06:38:27] *** Joins: dodobrain (~dodobrain@user/dodobrain)
[06:39:25] <foo> hmmm,
[06:39:39] *** Joins: Lerroux (~Lerroux@180.190.12.26)
[06:39:55] *** Joins: jcsteele (~j@user/jcsteele)
[06:39:57] <BrenBarn> I mean you can have multiple "layers" in the backend, one layer that gets the data and one layer that renders it to HTML
[06:40:27] <BrenBarn> so you can have a thing that renders it as a link and that calls another function to get the data, and then if you need the data without the rendering you just call the latter function on its own
[06:40:37] *** Joins: KimK (~KimK@2600:8803:740b:4700:4a5b:39ff:fe0b:57d2)
[06:40:37] *** Quits: jarthur (~jarthur@2603-8080-1540-002d-c00d-0011-9495-6b87.res6.spectrum.com) (Ping timeout: 240 seconds)
[06:40:46] *** Quits: jcsteele (~j@user/jcsteele) (Client Quit)
[06:41:17] *** Quits: djapo (~archangel@user/djapo) (Ping timeout: 240 seconds)
[06:41:33] <SnoopJ> sure, that would be a backend with a bit of View inside of it, in an MVC perspective
[06:41:57] *** Joins: jarthur (~jarthur@2603-8080-1540-002d-95ed-c4ac-7eb1-dc6f.res6.spectrum.com)
[06:42:19] <SnoopJ> probably any templating engine falls into this category
[06:42:24] <BrenBarn> yeah
[06:42:29] *** Joins: jcsteele (~j@user/jcsteele)
[06:42:36] *** Joins: Guest3302 (~arc@2601:586:8100:bc30:f0b5:6a0f:f4ae:e63b)
[06:43:03] *** Quits: rama (~rama@c-24-130-92-222.hsd1.ca.comcast.net) (Remote host closed the connection)
[06:43:18] <BrenBarn> but my point is that if "the data may feed into systems where it's not going to become a link" that can still be handled even if you do the rendering on the backend, as long as you don't *unconditionally* do the rendering on the backend
[06:43:21] *** Quits: jcsteele (~j@user/jcsteele) (Client Quit)
[06:43:32] <BrenBarn> just like various APIs where you can either get a results page as HTML or get a JSON version of it
[06:44:09] *** Joins: jeho1 (~jehoshaph@user/jehoshaphat)
[06:44:17] *** Quits: jeho (~jehoshaph@user/jehoshaphat) (Killed (NickServ (GHOST command used by jeho1)))
[06:44:21] *** jeho1 is now known as jeho
[06:44:48] *** Quits: nuclearg1 (~nucleargr@user/nuclearg1) (Ping timeout: 250 seconds)
[06:45:03] *** Joins: jcsteele (~j@user/jcsteele)
[06:45:56] *** Quits: jcsteele (~j@user/jcsteele) (Client Quit)
[06:46:12] <foo> BrenBarn: thanks
[06:47:38] *** Joins: jcsteele (~j@user/jcsteele)
[06:47:48] *** Quits: schumaml (~schumaml@dslb-188-104-160-106.188.104.pools.vodafone-ip.de) (Ping timeout: 252 seconds)
[06:48:35] *** Quits: nunggu (~q@user/nunggu) (Ping timeout: 240 seconds)
[06:49:53] *** Joins: schumaml (~schumaml@dslb-188-104-175-255.188.104.pools.vodafone-ip.de)
[06:51:08] *** Joins: c4017w__ (~c4017@209.52.68.8)
[06:51:26] *** Quits: millido (~millido@84.210.150.128) (Quit: ZNC 1.8.2 - https://znc.in)
[06:52:07] *** Quits: jcsteele (~j@user/jcsteele) (Ping timeout: 256 seconds)
[06:52:12] *** Joins: nunggu (~q@user/nunggu)
[06:52:17] *** Quits: LiftLeft (~LiftLeft@airstream-nelson-fiber-dhcp-007-17.dsl.airstreamcomm.net) (Ping timeout: 240 seconds)
[06:54:24] *** Quits: c4017w_ (~c4017@209.52.68.8) (Ping timeout: 252 seconds)
[06:55:10] *** Joins: causa_sui (~causasui@c-68-60-125-136.hsd1.mi.comcast.net)
[06:55:43] *** Joins: merijn (~merijn@c-001-001-001.client.esciencecenter.eduvpn.nl)
[06:56:26] *** Joins: fstd_ (~fstd@xdsl-78-35-89-30.nc.de)
[06:58:06] *** Joins: jcsteele (~j@user/jcsteele)
[06:58:26] *** Quits: jcsteele (~j@user/jcsteele) (Client Quit)
[06:58:38] *** Joins: rama (~rama@c-24-130-92-222.hsd1.ca.comcast.net)
[06:59:41] *** Joins: jcsteele (~j@user/jcsteele)
[06:59:54] *** Quits: fstd (~fstd@xdsl-78-35-88-2.nc.de) (Ping timeout: 260 seconds)
[07:00:08] *** Joins: ttree (~ttree0@c-73-97-116-42.hsd1.wa.comcast.net)
[07:00:32] *** Quits: jamiejackson (~jamiejack@131.106.140.145) (Quit: Connection closed)
[07:00:32] *** Quits: jcsteele (~j@user/jcsteele) (Client Quit)
[07:02:05] *** Quits: SallyAhaj_ (~SallyAhaj@user/sallyahaj) (Read error: Connection reset by peer)
[07:02:12] *** Joins: jcsteele (~j@user/jcsteele)
[07:03:07] *** Quits: jcsteele (~j@user/jcsteele) (Client Quit)
[07:03:27] *** Quits: rama (~rama@c-24-130-92-222.hsd1.ca.comcast.net) (Ping timeout: 256 seconds)
[07:04:01] *** Quits: causa_sui (~causasui@c-68-60-125-136.hsd1.mi.comcast.net) (Ping timeout: 256 seconds)
[07:04:47] *** Joins: jcsteele (~j@user/jcsteele)
[07:04:49] *** Joins: purple_cthulhu (~rax@89.37.150.17)
[07:05:41] *** Quits: jcsteele (~j@user/jcsteele) (Client Quit)
[07:07:21] *** Joins: jcsteele (~j@user/jcsteele)
[07:07:23] *** Joins: millido (~millido@84.210.150.128)
[07:08:15] *** Quits: jcsteele (~j@user/jcsteele) (Client Quit)
[07:08:15] *** Quits: adiKt (uid472628@id-472628.tinside.irccloud.com) (Quit: Connection closed for inactivity)
[07:08:34] *** Joins: rama (~rama@c-24-130-92-222.hsd1.ca.comcast.net)
[07:09:44] *** Quits: rpkilby (~rpkilby@c-24-20-208-106.hsd1.or.comcast.net) (Remote host closed the connection)
[07:10:03] *** Joins: jcsteele (~j@user/jcsteele)
[07:10:50] *** Quits: jcsteele (~j@user/jcsteele) (Client Quit)
[07:11:33] *** Joins: adeliktas0 (~adeliktas@i59f527d7.versanet.de)
[07:12:01] *** Quits: SaltHilStroller_ (~SaltHillS@206.223.160.26) (Ping timeout: 245 seconds)
[07:12:34] *** Joins: jcsteele (~j@user/jcsteele)
[07:13:24] *** Quits: jcsteele (~j@user/jcsteele) (Client Quit)
[07:13:24] *** Quits: adeliktas (~adeliktas@i59F52712.versanet.de) (Ping timeout: 250 seconds)
[07:13:24] *** adeliktas0 is now known as adeliktas
[07:15:08] *** Joins: jcsteele (~j@user/jcsteele)
[07:15:58] *** Quits: jcsteele (~j@user/jcsteele) (Client Quit)
[07:16:13] *** Quits: chenqisu1 (~chenqisu1@183.217.201.47) (Ping timeout: 240 seconds)
[07:16:32] <gevreeen> is there some way to get client address:port from WSGI?
[07:17:41] *** Joins: jcsteele (~j@user/jcsteele)
[07:18:31] *** Quits: jcsteele (~j@user/jcsteele) (Client Quit)
[07:18:43] <gevreeen> not in pep3333, but mod_wsgi guarantees remote_port and remote_addr, no?
[07:19:14] *** Quits: Zeturic (~Orimendix@50.26.218.162) (Quit: Leaving)
[07:19:40] *** Quits: crashrep (~crashrep@user/crashrep) (Quit: WeeChat 3.4)
[07:19:53] *** Joins: crashrep (~crashrep@user/crashrep)
[07:20:12] *** Joins: jcsteele (~j@user/jcsteele)
[07:21:06] *** Quits: jcsteele (~j@user/jcsteele) (Client Quit)
[07:21:20] <gevreeen> further, if two requests happen in a single connection, how am I supposed to know from WSGI, that these two requests happen in the same connection?
[07:21:31] *** Joins: mrkajetanp (~mrkajetan@88.98.245.28)
[07:22:46] *** Joins: jcsteele (~j@user/jcsteele)
[07:23:01] <gevreeen> say, the first request could constitute some kinda authentication
[07:23:09] <gevreeen> while the second request is sensitive
[07:23:41] *** Quits: jcsteele (~j@user/jcsteele) (Client Quit)
[07:25:25] *** Joins: jcsteele (~j@user/jcsteele)
[07:26:02] *** Quits: schumaml (~schumaml@dslb-188-104-175-255.188.104.pools.vodafone-ip.de) (Ping timeout: 240 seconds)
[07:26:10] *** Quits: stdout (~stdout@2605:ab80:b000:7202:3e12:af82:936c:2ff6) (Quit: Leaving)
[07:26:17] *** Quits: jcsteele (~j@user/jcsteele) (Client Quit)
[07:26:36] *** Joins: causa_sui (~causasui@c-68-60-125-136.hsd1.mi.comcast.net)
[07:27:12] *** Quits: zeden (~zeden@user/zeden) (Quit: WeeChat 3.4.1)
[07:27:16] *** Quits: crashrep (~crashrep@user/crashrep) (Quit: WeeChat 3.4)
[07:27:59] *** Joins: jcsteele (~j@user/jcsteele)
[07:28:12] *** Joins: roxfan (~roxfan@2a02:a03f:a2be:4f00:51a:35a2:9d4e:fbfc)
[07:28:18] *** Joins: schumaml (~schumaml@dslb-178-007-200-059.178.007.pools.vodafone-ip.de)
[07:28:28] *** Quits: nunggu (~q@user/nunggu) (Quit: nunggu)
[07:28:51] *** Quits: jcsteele (~j@user/jcsteele) (Client Quit)
[07:29:37] *** Quits: merijn (~merijn@c-001-001-001.client.esciencecenter.eduvpn.nl) (Ping timeout: 240 seconds)
[07:30:07] *** Quits: GreenLlama (~quassel@80-219-124-12.dclient.hispeed.ch) (Quit: http://quassel-irc.org - Chat comfortably. Anywhere.)
[07:30:36] *** Joins: jcsteele (~j@user/jcsteele)
[07:30:57] *** Quits: causa_sui (~causasui@c-68-60-125-136.hsd1.mi.comcast.net) (Ping timeout: 240 seconds)
[07:31:26] *** Quits: jcsteele (~j@user/jcsteele) (Client Quit)
[07:31:46] *** Joins: nuclearg1 (~nucleargr@user/nuclearg1)
[07:31:51] *** Joins: jeho1 (~jehoshaph@user/jehoshaphat)
[07:32:27] *** Joins: GreenLlama (~quassel@80-219-124-12.dclient.hispeed.ch)
[07:32:32] *** Quits: transeIstor (~transeIst@h67-204-160-244.bendor.broadband.dynamic.tds.net) (Ping timeout: 240 seconds)
[07:33:06] *** Joins: jcsteele (~j@user/jcsteele)
[07:34:00] *** Quits: jcsteele (~j@user/jcsteele) (Client Quit)
[07:35:39] *** Joins: jcsteele (~j@user/jcsteele)
[07:35:45] *** Quits: jeho (~jehoshaph@user/jehoshaphat) (Ping timeout: 256 seconds)
[07:35:50] *** Joins: space (~space23@142.126.128.74)
[07:35:58] *** Quits: george91 (~Adium@103.36.16.56) (Quit: Leaving.)
[07:36:34] *** Quits: jcsteele (~j@user/jcsteele) (Client Quit)
[07:36:53] *** Quits: nuclearg1 (~nucleargr@user/nuclearg1) (Ping timeout: 256 seconds)
[07:38:19] *** Joins: jcsteele (~j@user/jcsteele)
[07:38:37] *** Joins: causa_sui (~causasui@c-68-60-125-136.hsd1.mi.comcast.net)
[07:39:02] *** Quits: Codaraxis_ (~Codaraxis@user/codaraxis) (Ping timeout: 240 seconds)
[07:39:09] *** Quits: jcsteele (~j@user/jcsteele) (Client Quit)
[07:39:17] *** Joins: stats4647 (~stats4647@ip174-67-220-13.oc.oc.cox.net)
[07:40:51] *** Quits: schumaml (~schumaml@dslb-178-007-200-059.178.007.pools.vodafone-ip.de) (Ping timeout: 256 seconds)
[07:40:53] *** Joins: jcsteele (~j@user/jcsteele)
[07:41:01] *** Quits: mintograde (~mintograd@47.201.5.61) (Read error: Connection reset by peer)
[07:41:32] *** Quits: jcsteele (~j@user/jcsteele) (Client Quit)
[07:42:19] *** Joins: mintograde (~mintograd@47.201.5.61)
[07:42:33] *** Quits: ttree (~ttree0@c-73-97-116-42.hsd1.wa.comcast.net) (Ping timeout: 256 seconds)
[07:42:33] *** Joins: schumaml (~schumaml@dslb-188-104-178-012.188.104.pools.vodafone-ip.de)
[07:42:39] *** Joins: jcsteele (~j@user/jcsteele)
[07:42:52] *** Quits: causa_sui (~causasui@c-68-60-125-136.hsd1.mi.comcast.net) (Ping timeout: 250 seconds)
[07:43:32] *** Quits: jcsteele (~j@user/jcsteele) (Client Quit)
[07:43:41] *** Quits: rama (~rama@c-24-130-92-222.hsd1.ca.comcast.net) (Remote host closed the connection)
[07:45:17] *** Joins: jcsteele (~j@user/jcsteele)
[07:45:41] *** Quits: jcsteele (~j@user/jcsteele) (Client Quit)
[07:47:00] *** Joins: jcsteele (~j@user/jcsteele)
[07:47:20] *** Quits: jcsteele (~j@user/jcsteele) (Client Quit)
[07:47:37] *** Joins: Jong (~Jong@2620:10d:c090:400::5:74b3)
[07:47:58] *** Quits: {HD} (~{HD}@2603-6010-c208-c820-9e9c-6f0a-66ef-f982.res6.spectrum.com) (Ping timeout: 260 seconds)
[07:48:20] *** Joins: white2 (~mahengrui@user/mahengrui1)
[07:48:35] *** Joins: jcsteele (~j@user/jcsteele)
[07:48:59] *** Quits: jcsteele (~j@user/jcsteele) (Client Quit)
[07:50:13] *** Joins: jcsteele (~j@user/jcsteele)
[07:50:38] *** Quits: jcsteele (~j@user/jcsteele) (Client Quit)
[07:50:54] *** Quits: dez (uid92154@user/dez) (Quit: Connection closed for inactivity)
[07:51:21] *** Quits: bloody (~bloody@user/bloody) (Quit: okluvyabubye)
[07:51:49] *** Joins: c4017w_ (~c4017@209.52.68.8)
[07:52:07] *** Quits: agireud (~agireud@user/agireud) (Remote host closed the connection)
[07:52:11] *** Joins: causa_sui (~causasui@c-68-60-125-136.hsd1.mi.comcast.net)
[07:52:14] *** Joins: agireud (~agireud@user/agireud)
[07:52:24] *** Joins: jcsteele (~j@user/jcsteele)
[07:52:28] *** Quits: space (~space23@142.126.128.74) (Read error: Connection reset by peer)
[07:53:07] *** Joins: kts (~kts@103.73.237.110)
[07:53:11] *** Joins: space (~space23@142.126.128.74)
[07:53:55] *** Quits: jcsteele (~j@user/jcsteele) (Client Quit)
[07:54:44] *** Joins: LiftLeft (~LiftLeft@gateway/vpn/pia/liftleft)
[07:55:02] *** Quits: c4017w__ (~c4017@209.52.68.8) (Ping timeout: 240 seconds)
[07:55:09] *** Joins: jcsteele (~j@user/jcsteele)
[07:55:54] *** Quits: jcsteele (~j@user/jcsteele) (Client Quit)
[07:56:29] *** Joins: ATAD_ (~ATAD@user/atad)
[07:57:08] *** Joins: jcsteele (~j@user/jcsteele)
[07:57:34] *** Quits: jcsteele (~j@user/jcsteele) (Client Quit)
[07:58:50] *** Joins: jcsteele (~j@user/jcsteele)
[07:59:12] *** Joins: jeho2 (~jehoshaph@user/jehoshaphat)
[07:59:13] *** Quits: jcsteele (~j@user/jcsteele) (Client Quit)
[07:59:32] *** Quits: causa_sui (~causasui@c-68-60-125-136.hsd1.mi.comcast.net) (Ping timeout: 240 seconds)
[07:59:57] *** Quits: ATAD (~ATAD@user/atad) (Ping timeout: 240 seconds)
[08:00:26] *** Joins: jcsteele (~j@user/jcsteele)
[08:00:53] *** Quits: jcsteele (~j@user/jcsteele) (Client Quit)
[08:01:08] *** Joins: causa_sui (~causasui@c-68-60-125-136.hsd1.mi.comcast.net)
[08:02:05] *** Joins: jcsteele (~j@user/jcsteele)
[08:02:16] *** Joins: rama (~rama@c-24-130-92-222.hsd1.ca.comcast.net)
[08:02:31] *** Quits: jcsteele (~j@user/jcsteele) (Client Quit)
[08:02:37] *** Quits: jeho1 (~jehoshaph@user/jehoshaphat) (Ping timeout: 240 seconds)
[08:03:05] *** Joins: callq (~callq@157.41.137.81)
[08:03:17] *** Quits: cdown (~cdown@188.214.11.14) (Ping timeout: 256 seconds)
[08:03:21] *** Joins: frost (~frost@user/frost)
[08:03:49] *** Joins: jcsteele (~j@user/jcsteele)
[08:04:07] *** Quits: jcsteele (~j@user/jcsteele) (Client Quit)
[08:05:05] *** jeho2 is now known as jeho
[08:05:22] *** Joins: jcsteele (~j@user/jcsteele)
[08:05:24] *** Quits: causa_sui (~causasui@c-68-60-125-136.hsd1.mi.comcast.net) (Ping timeout: 240 seconds)
[08:05:28] *** Joins: tev27 (~tev@user/tev27)
[08:05:36] *** Joins: merist (~merist@87.249.134.29)
[08:05:46] *** Quits: jcsteele (~j@user/jcsteele) (Client Quit)
[08:06:10] *** Joins: nuclearg1 (~nucleargr@user/nuclearg1)
[08:06:34] *** Joins: {HD} (~{HD}@gateway/vpn/pia/hd/x-06969157)
[08:07:04] *** Quits: zuQe85 (~zuQe8@cpc105060-sgyl40-2-0-cust136.18-2.cable.virginm.net) (Read error: Connection reset by peer)
[08:07:19] *** Joins: zuQe85 (~zuQe8@cpc105060-sgyl40-2-0-cust136.18-2.cable.virginm.net)
[08:08:16] *** Joins: tijuco (~tijuco@user/tijuco)
[08:08:53] *** Quits: subopt (~subopt@2603-8081-2302-459a-90d2-5164-ea6a-59bf.res6.spectrum.com) (Quit: My MacBook has gone to sleep. ZZZzzz…)
[08:09:05] *** Joins: jcsteele (~j@user/jcsteele)
[08:09:10] *** Joins: SaltHilStroller_ (~SaltHillS@206.223.160.26)
[08:10:14] *** Quits: ExpiredKebab (~sgreadly@2407:7000:89aa:b303:b54b:3836:2073:6d9a) (Quit: My MacBook Air has gone to sleep. ZZZzzz…)
[08:10:36] *** Quits: nuclearg1 (~nucleargr@user/nuclearg1) (Ping timeout: 240 seconds)
[08:10:48] *** Joins: ExpiredKebab (~sgreadly@2407:7000:89aa:b303:b54b:3836:2073:6d9a)
[08:11:02] *** Quits: ovnicraft (~ovnicraft@corp-179-49-44-28.uio.puntonet.ec) (Ping timeout: 250 seconds)
[08:11:04] *** Quits: orbisvicis_ (~orbisvici@user/orbisvicis) (Ping timeout: 268 seconds)
[08:12:25] *** Joins: causa_sui (~causasui@c-68-60-125-136.hsd1.mi.comcast.net)
[08:12:39] *** Joins: velix (~velix@user/velix)
[08:13:24] *** Quits: jcsteele (~j@user/jcsteele) (Ping timeout: 240 seconds)
[08:13:26] *** Joins: hams (~hams@user/hams)
[08:13:36] <velix> Anyone with an idea, why s.connect_ex(("127.0.0.1", 1234)) returns "0", while this port is in listen state?
[08:14:02] <velix> s = socket.socket(socket.AF_INET, socket.SOCK_STREAM)
[08:14:11] *** Joins: ovnicraft (~ovnicraft@corp-179-49-44-28.uio.puntonet.ec)
[08:14:21] *** Quits: nomic (~nomic@185.217.117.111) (Quit: Leaving)
[08:14:50] *** Joins: jcsteele (~j@user/jcsteele)
[08:15:18] *** Quits: jcsteele (~j@user/jcsteele) (Client Quit)
[08:15:59] *** Joins: ephemer0l (~ephemer0l@organizedmagnetism.com)
[08:16:01] <gevreeen> " The error indicator is 0 if the operation succeeded, otherwise the value of the errno variable. "
[08:16:35] *** Joins: jcsteele (~j@user/jcsteele)
[08:16:37] *** Quits: causa_sui (~causasui@c-68-60-125-136.hsd1.mi.comcast.net) (Ping timeout: 240 seconds)
[08:16:39] <velix> gevreeen: yep, it should be > 0
[08:17:05] <gevreeen> you were connecting to a listening port. connect_ex should succeed
[08:17:21] *** Joins: jamea (~jamea@177.239.81.39)
[08:17:35] <velix> gevreeen: Hmm interesting. So how do I check if this port is "free"? ;)
[08:17:46] <velix> like "nothing listening at it or anything else"
[08:18:26] <gevreeen> you can't. the remote host could send back icmp rejects, or it could just ignore the syn with a silent drop
[08:18:27] <velix> I thought it should return 9 on listen :/
[08:18:33] <velix> gevreeen: it's local host.
[08:18:37] <velix> 127.0.0.1 = localhost
[08:18:48] <velix> okay, then I'll just use subprocess on "lsof".
[08:18:50] *** Quits: jcsteele (~j@user/jcsteele) (Client Quit)
[08:18:59] <gevreeen> ah, loopback. netstat's your friend then
[08:19:31] *** Joins: caveman (~caveman@gateway/tor-sasl/caveman)
[08:20:02] *** Joins: jcsteele (~j@user/jcsteele)
[08:20:29] *** Quits: jcsteele (~j@user/jcsteele) (Client Quit)
[08:20:47] <velix> sad that "socket" doesn't support this.
[08:22:59] *** Joins: jcsteele (~j@user/jcsteele)
[08:23:25] *** Quits: jcsteele (~j@user/jcsteele) (Client Quit)
[08:24:36] *** Joins: jcsteele (~j@user/jcsteele)
[08:25:03] *** Quits: jcsteele (~j@user/jcsteele) (Client Quit)
[08:26:04] <velix> So I really need to subprocess netstat? That's really ugly.
[08:26:33] <gevreeen> that or ss
[08:26:43] *** Joins: jcsteele (~j@user/jcsteele)
[08:26:45] *** Joins: causa_sui (~causasui@c-68-60-125-136.hsd1.mi.comcast.net)
[08:26:48] <gevreeen> which is specific to linux
[08:27:16] *** Quits: ihaveamac (~ihaveamac@ihaveahax.net) (Quit: fail)
[08:27:31] <velix> gevreeen: can't I use sock.listen() and try/catch? ;)
[08:27:34] *** Joins: ejjfunky (~ejjfunky@125.164.23.99)
[08:27:50] <gevreeen> you wanna do it for a number of 65536 times?
[08:27:52] *** Joins: spac3 (~space@142.126.128.74)
[08:28:06] <velix> gevreeen: oh, you didn't read my message :D
[08:28:11] <velix> s.connect_ex(("127.0.0.1", 1234)) <--
[08:28:17] *** Quits: esther (~esther@24-155-112-236.dyn.grandenetworks.net) (Ping timeout: 240 seconds)
[08:28:17] <velix> 1 port only
[08:28:42] *** Joins: uxemacs (~timothy@user/uxemacs)
[08:28:46] *** Quits: jcsteele (~j@user/jcsteele) (Client Quit)
[08:28:48] <gevreeen> well, if it's only loopback and port 1234 you seek, fine
[08:29:06] <gevreeen> apps could bind to a different address on the same port
[08:29:31] *** Joins: ihaveamac (~ihaveamac@ihaveahax.net)
[08:30:06] *** Joins: jcsteele (~j@user/jcsteele)
[08:30:25] *** Quits: jcsteele (~j@user/jcsteele) (Client Quit)
[08:31:03] *** Quits: sreve_ (~quassel@p549d70f6.dip0.t-ipconnect.de) (Ping timeout: 256 seconds)
[08:31:12] *** Quits: causa_sui (~causasui@c-68-60-125-136.hsd1.mi.comcast.net) (Ping timeout: 252 seconds)
[08:31:15] *** Joins: sreve (~quassel@p4ff44633.dip0.t-ipconnect.de)
[08:31:17] *** Quits: purple_cthulhu (~rax@89.37.150.17) (Ping timeout: 256 seconds)
[08:31:24] *** Joins: nerdbasher (~nerdbashe@rrcs-24-43-84-163.west.biz.rr.com)
[08:31:44] *** Joins: jcsteele (~j@user/jcsteele)
[08:31:57] *** Joins: emerent_ (~quassel@p200300cd5743c3ebba27ebfffed28a59.dip0.t-ipconnect.de)
[08:31:57] *** Quits: emerent (~quassel@p200300cd5743c36fba27ebfffed28a59.dip0.t-ipconnect.de) (Killed (zinc.libera.chat (Nickname regained by services)))
[08:31:57] *** emerent_ is now known as emerent
[08:32:04] *** Quits: jcsteele (~j@user/jcsteele) (Client Quit)
[08:33:20] *** Joins: jcsteele (~j@user/jcsteele)
[08:33:43] <velix> gevreeen: thanks
[08:33:43] *** Quits: jcsteele (~j@user/jcsteele) (Client Quit)
[08:33:56] *** Joins: kdc (~kdc@196.211.197.133)
[08:34:11] *** Joins: causa_sui (~causasui@c-68-60-125-136.hsd1.mi.comcast.net)
[08:34:23] *** Quits: kdc (~kdc@196.211.197.133) (Max SendQ exceeded)
[08:34:47] *** Quits: nerdbasher (~nerdbashe@rrcs-24-43-84-163.west.biz.rr.com) (Read error: Connection reset by peer)
[08:34:52] *** Joins: kdc (~kdc@196.211.197.133)
[08:35:34] *** Joins: jcsteele (~j@user/jcsteele)
[08:37:39] *** Quits: dodobrain (~dodobrain@user/dodobrain) (Remote host closed the connection)
[08:38:06] *** Joins: dodobrain (~dodobrain@user/dodobrain)
[08:38:15] *** Joins: freeworld (~freeworld@chello085216193138.chello.sk)
[08:38:17] *** Quits: jcsteele (~j@user/jcsteele) (Client Quit)
[08:38:59] *** Quits: causa_sui (~causasui@c-68-60-125-136.hsd1.mi.comcast.net) (Ping timeout: 256 seconds)
[08:39:02] *** Joins: Tacoder (~Tacoder@2806:264:5482:9e0:1cc9:d73:eb51:2a8d)
[08:39:41] *** Joins: jcsteele (~j@user/jcsteele)
[08:39:57] *** Quits: Guest3302 (~arc@2601:586:8100:bc30:f0b5:6a0f:f4ae:e63b) (Quit: Leaving)
[08:40:05] *** Quits: jcsteele (~j@user/jcsteele) (Client Quit)
[08:40:22] *** Joins: audiobirb (~audio@user/audio)
[08:41:06] *** Quits: stats4647 (~stats4647@ip174-67-220-13.oc.oc.cox.net) (Ping timeout: 252 seconds)
[08:41:18] *** Joins: jcsteele (~j@user/jcsteele)
[08:41:45] *** Quits: jcsteele (~j@user/jcsteele) (Client Quit)
[08:42:40] *** Joins: mIk3_08 (~Thunderbi@user/mik3-08/x-2852566)
[08:42:44] *** Joins: hackers (~self@user/hackers)
[08:43:02] *** Joins: jcsteele (~j@user/jcsteele)
[08:43:25] *** Quits: jcsteele (~j@user/jcsteele) (Client Quit)
[08:43:36] *** Joins: adiKt (uid472628@id-472628.tinside.irccloud.com)
[08:44:40] *** Joins: jcsteele (~j@user/jcsteele)
[08:45:05] *** Quits: jcsteele (~j@user/jcsteele) (Client Quit)
[08:45:45] *** Joins: purple_cthulhu (~rax@185.108.96.11)
[08:46:19] *** Joins: jcsteele (~j@user/jcsteele)
[08:46:42] *** Quits: jcsteele (~j@user/jcsteele) (Client Quit)
[08:47:27] *** Quits: tijuco (~tijuco@user/tijuco) (Quit: Leaving)
[08:47:58] *** Joins: jcsteele (~j@user/jcsteele)
[08:48:33] *** Quits: jcsteele (~j@user/jcsteele) (Client Quit)
[08:49:25] *** Quits: Omega037 (Omega037@047-233-057-109.res.spectrum.com) (Ping timeout: 256 seconds)
[08:49:47] *** Quits: aum (~aum@202.47.255.123.static.snap.net.nz) (Quit: Leaving)
[08:49:48] *** Joins: jcsteele (~j@user/jcsteele)
[08:50:12] *** Quits: jcsteele (~j@user/jcsteele) (Client Quit)
[08:52:31] *** Joins: jcsteele (~j@user/jcsteele)
[08:52:33] *** Joins: c4017w__ (~c4017@209.52.68.8)
[08:52:42] *** Joins: amogorkon (~amogorkon@user/amogorkon)
[08:52:53] *** Quits: jcsteele (~j@user/jcsteele) (Client Quit)
[08:52:57] *** Quits: slowButPresent (~slowButPr@user/slowbutpresent) (Quit: leaving)
[08:53:11] *** Joins: veegee (~veegee@ipagstaticip-469c2903-2b07-6dc3-3bc2-98748da5ca77.sdsl.bell.ca)
[08:53:36] *** Joins: gentooclimax (~gentoocli@81-64-65-213.rev.numericable.fr)
[08:54:12] *** Joins: jcsteele (~j@user/jcsteele)
[08:54:34] *** Quits: jcsteele (~j@user/jcsteele) (Client Quit)
[08:54:50] *** Joins: Omega037 (~Omega037@047-233-057-109.res.spectrum.com)
[08:56:01] *** Joins: jcsteele (~j@user/jcsteele)
[08:56:01] *** Joins: causa_sui (~causasui@c-68-60-125-136.hsd1.mi.comcast.net)
[08:56:06] *** Quits: c4017w_ (~c4017@209.52.68.8) (Ping timeout: 250 seconds)
[08:56:27] *** Quits: jcsteele (~j@user/jcsteele) (Client Quit)
[08:57:52] *** Quits: zebrag (~chris@user/zebrag) (Quit: Konversation terminated!)
[08:57:55] *** Joins: jcsteele (~j@user/jcsteele)
[08:58:18] *** Quits: jcsteele (~j@user/jcsteele) (Client Quit)
[08:59:32] *** Joins: jcsteele (~j@user/jcsteele)
[08:59:57] *** Quits: jcsteele (~j@user/jcsteele) (Client Quit)
[09:00:26] *** Quits: causa_sui (~causasui@c-68-60-125-136.hsd1.mi.comcast.net) (Ping timeout: 250 seconds)
[09:01:16] *** Joins: jcsteele (~j@user/jcsteele)
[09:01:55] *** Joins: causa_sui (~causasui@c-68-60-125-136.hsd1.mi.comcast.net)
[09:02:07] *** Quits: jcsteele (~j@user/jcsteele) (Client Quit)
[09:03:28] *** Joins: jcsteele (~j@user/jcsteele)
[09:03:48] *** Quits: jcsteele (~j@user/jcsteele) (Client Quit)
[09:04:10] *** Joins: jmd (~user@de.cellform.com)
[09:05:03] *** Joins: jcsteele (~j@user/jcsteele)
[09:05:17] *** Quits: SaltHilStroller_ (~SaltHillS@206.223.160.26) (Ping timeout: 256 seconds)
[09:05:26] *** Quits: jcsteele (~j@user/jcsteele) (Client Quit)
[09:06:30] *** Quits: causa_sui (~causasui@c-68-60-125-136.hsd1.mi.comcast.net) (Ping timeout: 250 seconds)
[09:06:43] *** Joins: jcsteele (~j@user/jcsteele)
[09:07:06] *** Quits: jcsteele (~j@user/jcsteele) (Client Quit)
[09:07:50] <velix> I'm starting a daemon using Subprocess.Popen. Let's say the parent script gets killed. Do I need an exernal reaper to get rid of the started subprocess?
[09:08:29] <velix> oh, maybe atexit
[09:08:36] *** Joins: jcsteele (~j@user/jcsteele)
[09:08:52] *** gentooclimax is now known as climax
[09:08:57] *** Quits: YuGiOhJCJ (~YuGiOhJCJ@gateway/tor-sasl/yugiohjcj) (Quit: YuGiOhJCJ)
[09:08:59] *** Quits: jcsteele (~j@user/jcsteele) (Client Quit)
[09:09:03] *** Joins: han-solo (~hanish@user/han-solo)
[09:09:09] *** Quits: Tacoder (~Tacoder@2806:264:5482:9e0:1cc9:d73:eb51:2a8d) (Ping timeout: 252 seconds)
[09:10:12] *** Joins: jcsteele (~j@user/jcsteele)
[09:10:33] *** Joins: rpkilby (~rpkilby@c-24-20-208-106.hsd1.or.comcast.net)
[09:10:40] *** Quits: jcsteele (~j@user/jcsteele) (Client Quit)
[09:11:54] *** Joins: jcsteele (~j@user/jcsteele)
[09:12:19] *** Quits: jcsteele (~j@user/jcsteele) (Client Quit)
[09:13:14] <ronny> <velix> "I'm starting a daemon using..." <- Unless the daemon detaches itself, it's hardly a daemon, just a subprocess
[09:13:14] <ronny> One still gotta kill it
[09:13:37] <velix> ronny: Okay. Then I'll start it from the outside. No problem.
[09:14:01] *** Joins: jcsteele (~j@user/jcsteele)
[09:14:23] *** Quits: jcsteele (~j@user/jcsteele) (Client Quit)
[09:14:56] *** Quits: skapata (~Skapata@user/skapata) (Remote host closed the connection)
[09:15:00] *** Quits: rpkilby (~rpkilby@c-24-20-208-106.hsd1.or.comcast.net) (Ping timeout: 240 seconds)
[09:15:20] <ronny> What are you actually trying to do?
[09:15:37] *** Joins: jcsteele (~j@user/jcsteele)
[09:16:07] *** Quits: jcsteele (~j@user/jcsteele) (Client Quit)
[09:16:15] *** climax is now known as gentooclimax
[09:17:24] *** Joins: jcsteele (~j@user/jcsteele)
[09:17:42] *** Joins: Codaraxis (~Codaraxis@user/codaraxis)
[09:17:45] *** Quits: jcsteele (~j@user/jcsteele) (Client Quit)
[09:18:19] *** Quits: mon_aaraj (~MonAaraj@user/mon-aaraj/x-4416475) (Ping timeout: 256 seconds)
[09:18:38] *** Joins: causa_sui (~causasui@c-68-60-125-136.hsd1.mi.comcast.net)
[09:18:43] <velix> ronny: I'm starting a LibreOffice listener and working a queue on it. When for same crazy reason, the parent process (the queue process) breaks, the listener would still live as a reaped process.
[09:19:06] *** Joins: jcsteele (~j@user/jcsteele)
[09:19:08] <velix> ronny: But I wrapped it in a shell script, so it's fine now ;)
[09:19:39] <velix> libreoffice && queue; cleanup
[09:20:03] *** Quits: rindolf (~shlomif@inkscape/dev/shlomif) (Read error: Connection reset by peer)
[09:20:09] *** Quits: agumonkey (~user@88.163.231.79) (Ping timeout: 252 seconds)
[09:20:09] *** Joins: mon_aaraj (~MonAaraj@user/mon-aaraj/x-4416475)
[09:20:57] *** Quits: jcsteele (~j@user/jcsteele) (Client Quit)
[09:21:03] <velix> ah wait, those are called "zombies", sorry.
[09:21:04] <velix> :D
[09:21:09] <velix> I want to reap the zombies :D
[09:21:47] *** Quits: [itchyjunk] (~itchyjunk@user/itchyjunk/x-7353470) (Remote host closed the connection)
[09:22:13] *** Joins: jcsteele (~j@user/jcsteele)
[09:22:36] *** Quits: jcsteele (~j@user/jcsteele) (Client Quit)
[09:22:49] <ronny> I see, it's a easy hack to let a shell do the hangup handling, i strongly prefer not involving shells tho
[09:23:02] *** Quits: schumaml (~schumaml@dslb-188-104-178-012.188.104.pools.vodafone-ip.de) (Ping timeout: 240 seconds)
[09:23:21] *** Quits: grep_xtrange (~x@ac255238.ppp.asahi-net.or.jp) (Quit: Quitting)
[09:23:25] *** Quits: causa_sui (~causasui@c-68-60-125-136.hsd1.mi.comcast.net) (Ping timeout: 256 seconds)
[09:23:40] *** Joins: z8z (~x@ac255238.ppp.asahi-net.or.jp)
[09:23:48] *** Joins: jcsteele (~j@user/jcsteele)
[09:24:16] *** Quits: jcsteele (~j@user/jcsteele) (Client Quit)
[09:25:09] *** Joins: schumaml (~schumaml@dslb-094-216-172-253.094.216.pools.vodafone-ip.de)
[09:25:34] *** Joins: jcsteele (~j@user/jcsteele)
[09:25:54] *** Quits: jcsteele (~j@user/jcsteele) (Client Quit)
[09:25:59] <velix> ronny: but the shell calls it ;)
[09:26:12] <velix> ronny: or do you suggest supervisord or systemd or ...
[09:26:16] *** gentooclimax is now known as climax
[09:26:26] *** Joins: merijn (~merijn@c-001-001-001.client.esciencecenter.eduvpn.nl)
[09:26:47] <velix> ronny: when sigkill comes from python, I guess I can't do anything inside python to reap the zombies :D
[09:26:53] <velix> nah
[09:27:03] <velix> when sigkill comes from the system*
[09:27:08] *** Joins: jcsteele (~j@user/jcsteele)
[09:27:33] *** Quits: jcsteele (~j@user/jcsteele) (Client Quit)
[09:27:56] *** climax is now known as gentooclimax
[09:29:25] <ronny> That why you register signal handlers and/or use daemon libraries to help you sort it out
[09:30:08] *** Joins: jcsteele (~j@user/jcsteele)
[09:30:24] <ronny> Also the reason why sometimes a shell script is good enough (as long as it stays short and dumb)
[09:30:30] *** Quits: jcsteele (~j@user/jcsteele) (Client Quit)
[09:30:49] <grawity> or you know have your /etc/init.d/foo call start-stop-daemon to handle that stuff for you
[09:31:06] <grawity> or /etc/upstart or whatever
[09:31:32] *** Joins: dvx (~dvx@5.181.92.64)
[09:31:48] *** Joins: jcsteele (~j@user/jcsteele)
[09:32:09] *** Quits: jcsteele (~j@user/jcsteele) (Client Quit)
[09:32:12] <ronny> Systemd ftw in those cases
[09:33:25] *** Joins: envex (~envex@cpe-173-91-189-33.neo.res.rr.com)
[09:33:28] *** Joins: jcsteele (~j@user/jcsteele)
[09:33:50] *** Quits: jcsteele (~j@user/jcsteele) (Client Quit)
[09:33:57] <velix> grawity: yeah, that was the "or ..." ;)
[09:34:25] *** Joins: pvergain (~Thunderbi@2a01:e0a:223:690:b2df:6d78:a1c0:ae92)
[09:34:46] <velix> ronny: Oh, I thought a sigkill from system immeditely stops the interpretor?
[09:35:06] *** Joins: rindolf (~shlomif@inkscape/dev/shlomif)
[09:35:08] *** Joins: jcsteele (~j@user/jcsteele)
[09:35:31] *** Quits: jcsteele (~j@user/jcsteele) (Client Quit)
[09:35:47] *** Joins: chenqisu1 (~chenqisu1@183.217.201.47)
[09:36:22] <velix> I know this for .SIGTERM
[09:36:27] *** Joins: Gustavo6046 (~Gustavo60@user/gustavo6046)
[09:36:32] *** Quits: Dantali0n (~Dantali0n@2a10:3781:15ed::2003) (Quit: Bye)
[09:37:04] *** Joins: marderIII (~MarderIII@86.88.74.111)
[09:37:12] *** Joins: upsala (~zcb@185.209.196.134)
[09:37:42] *** Quits: schumaml (~schumaml@dslb-094-216-172-253.094.216.pools.vodafone-ip.de) (Ping timeout: 250 seconds)
[09:37:56] *** gentooclimax is now known as climax
[09:38:18] <deltab> velix: it does. SIGKILL is uncatchable
[09:38:23] *** Joins: jcsteele (~j@user/jcsteele)
[09:38:42] *** Quits: jcsteele (~j@user/jcsteele) (Client Quit)
[09:38:49] *** Joins: Zxcvbnm (~Zxcvbnm@115.154.57.59)
[09:38:53] <deltab> SIGTERM can be caught and handled by the process
[09:38:59] <ronny> velix: It does, also its the last resort, typically one sees a other signal first
[09:38:59] <velix> sure, I'm doing this already.
[09:39:11] <velix> So, external checking is best ;)
[09:39:26] *** Joins: schumaml (~schumaml@dslb-178-007-196-133.178.007.pools.vodafone-ip.de)
[09:39:38] <ronny> The signal that's usually coming in is a int or term first
[09:39:58] *** Joins: jcsteele (~j@user/jcsteele)
[09:40:05] *** Quits: spac3 (~space@142.126.128.74) (Remote host closed the connection)
[09:40:05] <ronny> If a kill is necessary, stuff is already a total mess
[09:40:20] *** Quits: jcsteele (~j@user/jcsteele) (Client Quit)
[09:41:06] *** Joins: causa_sui (~causasui@c-68-60-125-136.hsd1.mi.comcast.net)
[09:41:37] *** Joins: jcsteele (~j@user/jcsteele)
[09:42:00] *** Quits: jcsteele (~j@user/jcsteele) (Client Quit)
[09:42:10] *** Joins: jstein (~jstein@gentoo/developer/jstein)
[09:42:36] <ronny> Plus a shell will also just go under hard if you send sigkill
[09:43:14] *** Joins: jcsteele (~j@user/jcsteele)
[09:43:38] *** Quits: jcsteele (~j@user/jcsteele) (Client Quit)
[09:44:19] *** Quits: kts (~kts@103.73.237.110) (Quit: Konversation terminated!)
[09:44:56] *** Joins: jcsteele (~j@user/jcsteele)
[09:45:18] *** Quits: jcsteele (~j@user/jcsteele) (Client Quit)
[09:46:02] *** Quits: causa_sui (~causasui@c-68-60-125-136.hsd1.mi.comcast.net) (Ping timeout: 240 seconds)
[09:46:05] *** Quits: raym (~raym@user/raym) (Ping timeout: 256 seconds)
[09:46:32] *** Joins: jcsteele (~j@user/jcsteele)
[09:46:57] *** Quits: jcsteele (~j@user/jcsteele) (Client Quit)
[09:47:00] *** Joins: raym (~raym@user/raym)
[09:47:16] *** Quits: cowsay-moo (~cowsay-mo@2a0c:f040:0:4356:1015:f228:53d:4f0e) (Ping timeout: 268 seconds)
[09:48:11] *** Joins: jcsteele (~j@user/jcsteele)
[09:48:20] *** Quits: agireud (~agireud@user/agireud) (Remote host closed the connection)
[09:48:30] *** Joins: Dantali0n (~Dantali0n@2a10:3781:15ed::2003)
[09:48:30] *** Joins: agireud (~agireud@user/agireud)
[09:48:36] *** Quits: jcsteele (~j@user/jcsteele) (Client Quit)
[09:49:55] *** Joins: jcsteele (~j@user/jcsteele)
[09:50:11] *** Quits: ExpiredKebab (~sgreadly@2407:7000:89aa:b303:b54b:3836:2073:6d9a) (Quit: My MacBook Air has gone to sleep. ZZZzzz…)
[09:50:15] *** Quits: jcsteele (~j@user/jcsteele) (Client Quit)
[09:50:50] <velix> Funny, why does my script suddently output "Eat, sleep, code, repeat."  ;)
[09:51:04] <velix> maybe I should take some rest :D
[09:51:35] *** Joins: jcsteele (~j@user/jcsteele)
[09:51:57] *** Quits: jcsteele (~j@user/jcsteele) (Client Quit)
[09:52:07] *** Quits: rama (~rama@c-24-130-92-222.hsd1.ca.comcast.net) (Remote host closed the connection)
[09:52:08] <ronny> Kill it before it adds world domination, then sleep
[09:52:35] <velix> ronny: uh, it named itself "Zora".
[09:52:37] *** Joins: ExpiredKebab (~sgreadly@2407:7000:89aa:b303:b54b:3836:2073:6d9a)
[09:52:39] *** Joins: rama (~rama@c-24-130-92-222.hsd1.ca.comcast.net)
[09:53:04] *** Joins: causa_sui (~causasui@c-68-60-125-136.hsd1.mi.comcast.net)
[09:53:09] *** Quits: cyphase (~cyphase@user/cyphase) (Ping timeout: 252 seconds)
[09:53:10] *** Quits: rama (~rama@c-24-130-92-222.hsd1.ca.comcast.net) (Remote host closed the connection)
[09:53:11] *** Joins: jcsteele (~j@user/jcsteele)
[09:53:14] *** Joins: c4017w_ (~c4017@209.52.68.8)
[09:53:22] *** Joins: rama (~rama@c-24-130-92-222.hsd1.ca.comcast.net)
[09:53:28] <ronny> Then set the computer on fire
[09:53:38] *** Quits: jcsteele (~j@user/jcsteele) (Client Quit)
[09:53:56] <velix> ronny: Oh, you're not watching StarTrek Discovery :D
[09:54:21] *** Quits: AlanMD (~AlanMD@86.124.30.89) (Remote host closed the connection)
[09:54:26] <velix> ronny: The computre has developed a new lifeform, which has emotions. Very bad scripting.
[09:54:43] <velix> At least: no bad actress, since the CGI model is fine.
[09:54:57] *** Joins: jcsteele (~j@user/jcsteele)
[09:55:16] *** Quits: jcsteele (~j@user/jcsteele) (Client Quit)
[09:55:35] *** Joins: AlanMD (~AlanMD@86.124.30.89)
[09:55:35] *** Quits: ghost43 (~ghost43@gateway/tor-sasl/ghost43) (Remote host closed the connection)
[09:56:32] *** Quits: c4017w__ (~c4017@209.52.68.8) (Ping timeout: 240 seconds)
[09:56:34] *** Joins: jcsteele (~j@user/jcsteele)
[09:56:54] *** Quits: jcsteele (~j@user/jcsteele) (Client Quit)
[09:57:12] *** Quits: Zxcvbnm (~Zxcvbnm@115.154.57.59) (Ping timeout: 250 seconds)
[09:58:05] *** Joins: jcsteele (~j@user/jcsteele)
[09:58:19] *** Joins: ghost43 (~ghost43@gateway/tor-sasl/ghost43)
[09:58:33] *** Quits: jcsteele (~j@user/jcsteele) (Client Quit)
[10:00:26] *** Joins: jcsteele (~j@user/jcsteele)
[10:00:46] *** Quits: jcsteele (~j@user/jcsteele) (Client Quit)
[10:00:51] *** Quits: merijn (~merijn@c-001-001-001.client.esciencecenter.eduvpn.nl) (Ping timeout: 252 seconds)
[10:01:02] *** Quits: causa_sui (~causasui@c-68-60-125-136.hsd1.mi.comcast.net) (Ping timeout: 240 seconds)
[10:02:04] *** Joins: jcsteele (~j@user/jcsteele)
[10:02:25] *** Quits: jcsteele (~j@user/jcsteele) (Client Quit)
[10:03:35] *** Joins: jcsteele (~j@user/jcsteele)
[10:04:01] *** Quits: jcsteele (~j@user/jcsteele) (Client Quit)
[10:05:19] *** Joins: jcsteele (~j@user/jcsteele)
[10:05:34] *** Quits: zuQe85 (~zuQe8@cpc105060-sgyl40-2-0-cust136.18-2.cable.virginm.net) (Quit: Bye)
[10:05:37] *** Quits: jcsteele (~j@user/jcsteele) (Client Quit)
[10:05:52] *** Quits: schumaml (~schumaml@dslb-178-007-196-133.178.007.pools.vodafone-ip.de) (Ping timeout: 250 seconds)
[10:06:48] *** Joins: schumaml (~schumaml@dslb-094-216-171-159.094.216.pools.vodafone-ip.de)
[10:06:53] *** Joins: jcsteele (~j@user/jcsteele)
[10:07:19] *** Quits: jcsteele (~j@user/jcsteele) (Client Quit)
[10:07:24] *** Quits: revolve (~u0_a227@cpc100838-bagu15-2-0-cust672.1-3.cable.virginm.net) (Read error: Connection reset by peer)
[10:08:36] *** Joins: manti7 (~manti7@176.10.104.94)
[10:08:39] *** Joins: jcsteele (~j@user/jcsteele)
[10:08:57] *** Quits: jcsteele (~j@user/jcsteele) (Client Quit)
[10:08:58] *** Joins: zuQe85 (~zuQe8@cpc105060-sgyl40-2-0-cust136.18-2.cable.virginm.net)
[10:09:24] *** Quits: matsaman (~matsaman@user/matsaman) (Quit: leaving)
[10:10:11] *** Joins: jcsteele (~j@user/jcsteele)
[10:10:27] *** Quits: nemexis (~nemexis@193-62-201-31.ftth.glasoperator.nl) (Ping timeout: 256 seconds)
[10:10:36] *** Quits: jcsteele (~j@user/jcsteele) (Client Quit)
[10:11:52] *** Joins: jcsteele (~j@user/jcsteele)
[10:12:24] *** Quits: raym (~raym@user/raym) (Ping timeout: 252 seconds)
[10:12:37] *** Quits: jcsteele (~j@user/jcsteele) (Client Quit)
[10:13:15] *** Joins: raym (~raym@user/raym)
[10:13:56] *** Joins: jcsteele (~j@user/jcsteele)
[10:14:16] *** Quits: jcsteele (~j@user/jcsteele) (Client Quit)
[10:15:31] *** Joins: jcsteele (~j@user/jcsteele)
[10:15:54] *** Quits: jcsteele (~j@user/jcsteele) (Client Quit)
[10:17:12] *** Joins: jcsteele (~j@user/jcsteele)
[10:17:33] *** Quits: jcsteele (~j@user/jcsteele) (Client Quit)
[10:18:46] *** Joins: jcsteele (~j@user/jcsteele)
[10:19:13] *** Quits: jcsteele (~j@user/jcsteele) (Client Quit)
[10:20:26] *** Joins: jcsteele (~j@user/jcsteele)
[10:20:53] *** Quits: jcsteele (~j@user/jcsteele) (Client Quit)
[10:22:05] *** Joins: jcsteele (~j@user/jcsteele)
[10:22:12] *** Joins: szkl (uid110435@id-110435.uxbridge.irccloud.com)
[10:22:31] *** Quits: jcsteele (~j@user/jcsteele) (Client Quit)
[10:24:05] *** Joins: xkuru (~xkuru@user/xkuru)
[10:25:46] *** Joins: slav0nic (slav0nic@python.su)
[10:26:26] *** Joins: jcsteele (~j@user/jcsteele)
[10:26:48] *** Quits: jcsteele (~j@user/jcsteele) (Client Quit)
[10:27:18] *** Quits: agireud (~agireud@user/agireud) (Remote host closed the connection)
[10:27:40] *** Quits: epony (epony@user/epony) (Quit: QUIT)
[10:27:50] *** Joins: agireud (~agireud@user/agireud)
[10:28:03] *** Joins: jcsteele (~j@user/jcsteele)
[10:28:15] *** Quits: space (~space23@142.126.128.74) (Read error: Connection reset by peer)
[10:28:17] *** Quits: lbalhar (~lbalhar@93.185.13.26) (Ping timeout: 240 seconds)
[10:28:26] *** Quits: jcsteele (~j@user/jcsteele) (Client Quit)
[10:29:15] *** Joins: cyphase (~cyphase@user/cyphase)
[10:29:45] *** Joins: jcsteele (~j@user/jcsteele)
[10:30:05] *** Quits: jcsteele (~j@user/jcsteele) (Client Quit)
[10:30:52] *** Quits: Helithumper (~Helithump@c-76-25-170-226.hsd1.co.comcast.net) (Quit: ZNC 1.8.2 - https://znc.in)
[10:31:13] *** Joins: Helithumper (~Helithump@c-76-25-170-226.hsd1.co.comcast.net)
[10:31:16] *** Joins: jcsteele (~j@user/jcsteele)
[10:31:27] *** Quits: Lerroux (~Lerroux@180.190.12.26) (Read error: Connection reset by peer)
[10:31:35] *** Quits: GNUmoon (~GNUmoon@gateway/tor-sasl/gnumoon) (Ping timeout: 240 seconds)
[10:32:08] *** Joins: five6433334962 (~five6@8.40.111.87)
[10:32:39] *** Quits: jcsteele (~j@user/jcsteele) (Client Quit)
[10:33:32] *** Quits: five643333496 (~five6@8.40.26.20) (Ping timeout: 240 seconds)
[10:33:32] *** five6433334962 is now known as five643333496
[10:33:51] *** Joins: jcsteele (~j@user/jcsteele)
[10:34:20] *** Quits: jcsteele (~j@user/jcsteele) (Client Quit)
[10:35:20] *** Quits: jmd (~user@de.cellform.com) (Ping timeout: 250 seconds)
[10:35:35] *** Joins: jcsteele (~j@user/jcsteele)
[10:35:53] *** Quits: agireud (~agireud@user/agireud) (Remote host closed the connection)
[10:36:00] *** Quits: jcsteele (~j@user/jcsteele) (Client Quit)
[10:36:17] *** Quits: Enitin (~Enitin@82.180.145.230) (Ping timeout: 240 seconds)
[10:37:19] *** Joins: jcsteele (~j@user/jcsteele)
[10:37:24] *** Quits: mon_aaraj (~MonAaraj@user/mon-aaraj/x-4416475) (Ping timeout: 240 seconds)
[10:37:41] *** Quits: dodobrain (~dodobrain@user/dodobrain) (Remote host closed the connection)
[10:38:12] *** Joins: dodobrain (~dodobrain@user/dodobrain)
[10:38:17] *** Quits: jcsteele (~j@user/jcsteele) (Client Quit)
[10:38:18] *** Joins: the_lanetly_052 (~the_lanet@194.135.167.153)
[10:39:05] *** Quits: kickingvegas (~cchoi@c-73-170-198-193.hsd1.ca.comcast.net) (Quit: leaving)
[10:39:31] *** Joins: jcsteele (~j@user/jcsteele)
[10:39:45] *** Joins: quhar (~quhar@192.162.148.48)
[10:40:09] *** Joins: p-i- (~Ohmu@2403:6200:8978:9086:e8a3:2cbd:7ed9:8d88)
[10:40:30] *** Quits: jarthur (~jarthur@2603-8080-1540-002d-95ed-c4ac-7eb1-dc6f.res6.spectrum.com) (Quit: jarthur)
[10:40:45] *** Quits: jcsteele (~j@user/jcsteele) (Client Quit)
[10:40:46] <p-i-> Is there any succinct way to drill down to find a file? foo, ../foo, ../../foo, etc ?
[10:40:56] *** Joins: agireud (~agireud@user/agireud)
[10:41:05] <p-i-> I'm thinking to just loop, prepending ../ each time
[10:41:23] *** Quits: CrazyEddy (crazyed@2603:300a:1d10:c000:de4a:3eff:fe88:cc5f) (Ping timeout: 256 seconds)
[10:41:57] *** Joins: jcsteele (~j@user/jcsteele)
[10:42:55] *** Quits: jcsteele (~j@user/jcsteele) (Client Quit)
[10:44:13] *** Joins: jcsteele (~j@user/jcsteele)
[10:44:34] *** Quits: jcsteele (~j@user/jcsteele) (Client Quit)
[10:45:33] *** Joins: Atque (~Atque@user/atque)
[10:45:51] *** Joins: jcsteele (~j@user/jcsteele)
[10:46:14] *** Quits: jcsteele (~j@user/jcsteele) (Client Quit)
[10:47:33] *** Joins: jcsteele (~j@user/jcsteele)
[10:47:53] *** Quits: jcsteele (~j@user/jcsteele) (Client Quit)
[10:47:59] *** Quits: caveman (~caveman@gateway/tor-sasl/caveman) (Quit: the #end of the abyss)
[10:48:26] <BrenBarn> you mean you're not sure how many levels up it is?
[10:49:10] *** Joins: jcsteele (~j@user/jcsteele)
[10:49:32] *** Quits: jcsteele (~j@user/jcsteele) (Client Quit)
[10:50:35] *** Quits: hanzo (uid532183@user/hanzo) (Quit: Connection closed for inactivity)
[10:50:37] *** oliver1 is now known as cromwell
[10:50:45] *** Quits: fartyfoam (~fartyfoam@178-118-118-2.access.telenet.be) (Quit: The Lounge - https://thelounge.chat)
[10:50:50] *** Joins: jcsteele (~j@user/jcsteele)
[10:51:02] *** Quits: schumaml (~schumaml@dslb-094-216-171-159.094.216.pools.vodafone-ip.de) (Ping timeout: 240 seconds)
[10:51:03] *** Joins: nuclearg1 (~nucleargr@user/nuclearg1)
[10:51:13] *** Quits: jcsteele (~j@user/jcsteele) (Client Quit)
[10:51:49] *** Quits: dodobrain (~dodobrain@user/dodobrain) (Quit: meow)
[10:51:54] *** Joins: fartyfoam (~fartyfoam@178-118-118-2.access.telenet.be)
[10:53:14] *** Joins: schumaml (~schumaml@dslb-094-216-170-023.094.216.pools.vodafone-ip.de)
[10:53:50] *** Joins: jcsteele (~j@user/jcsteele)
[10:53:56] *** Joins: c4017w__ (~c4017@209.52.68.8)
[10:54:12] *** Quits: jcsteele (~j@user/jcsteele) (Client Quit)
[10:54:32] *** Quits: the_lanetly_052 (~the_lanet@194.135.167.153) (Ping timeout: 240 seconds)
[10:54:50] *** Quits: ExpiredKebab (~sgreadly@2407:7000:89aa:b303:b54b:3836:2073:6d9a) (Ping timeout: 250 seconds)
[10:55:31] *** Joins: jcsteele (~j@user/jcsteele)
[10:55:51] *** Quits: nuclearg1 (~nucleargr@user/nuclearg1) (Ping timeout: 252 seconds)
[10:55:53] *** Quits: jcsteele (~j@user/jcsteele) (Client Quit)
[10:56:23] *** Joins: cypostres (~cypostres@user/cypostres)
[10:56:34] *** Quits: cthulchu (~Cthulchu@69-172-160-196.cable.teksavvy.com) (Ping timeout: 250 seconds)
[10:56:38] *** Joins: esther (~esther@24-155-112-236.dyn.grandenetworks.net)
[10:57:05] *** Joins: jcsteele (~j@user/jcsteele)
[10:57:30] *** Quits: c4017w_ (~c4017@209.52.68.8) (Ping timeout: 252 seconds)
[10:57:32] *** Quits: purple_cthulhu (~rax@185.108.96.11) (Ping timeout: 240 seconds)
[10:58:51] *** Quits: jcsteele (~j@user/jcsteele) (Client Quit)
[10:58:51] *** Quits: cromwell (~oliver@thunix.net) (Quit: WeeChat 3.4)
[10:59:03] *** Joins: causa_sui (~causasui@c-68-60-125-136.hsd1.mi.comcast.net)
[10:59:05] *** Joins: oliver1 (oliver@thunix.net)
[10:59:17] *** Joins: Rock (~Rock@cpe-66-66-96-218.rochester.res.rr.com)
[10:59:25] *** oliver1 is now known as cromwell
[10:59:29] *** Rock is now known as Guest3574
[11:00:04] *** Joins: jcsteele (~j@user/jcsteele)
[11:00:14] *** Joins: caveman (~caveman@gateway/tor-sasl/caveman)
[11:00:25] *** climax is now known as gentooclimax
[11:00:29] *** Quits: jcsteele (~j@user/jcsteele) (Client Quit)
[11:00:59] *** Joins: andreasbuhr (~quassel@p549db611.dip0.t-ipconnect.de)
[11:01:03] <Guest3574> I'm trying to use html code in a string variable to be stored in warc file. But in the given code it uses requests.get to capture URL HTML. How can I do that? https://bpa.st/X6VQ
[11:01:43] *** Joins: hexenbane9 (~hexenbane@fixed-187-188-14-118.totalplay.net)
[11:02:12] *** Guest3574 is now known as Rock
[11:02:31] *** Rock is now known as Guest628
[11:03:23] *** Joins: jcsteele (~j@user/jcsteele)
[11:03:33] *** Quits: causa_sui (~causasui@c-68-60-125-136.hsd1.mi.comcast.net) (Ping timeout: 252 seconds)
[11:03:49] *** Quits: jcsteele (~j@user/jcsteele) (Client Quit)
[11:04:16] <han-solo> `res = requests.get(url); html = req.text` # ?
[11:04:39] *** Joins: GrayArea (~cpd@cpc115156-dals23-2-0-cust689.20-2.cable.virginm.net)
[11:04:43] *** Joins: causa_sui (~causasui@c-68-60-125-136.hsd1.mi.comcast.net)
[11:05:02] *** Joins: jcsteele (~j@user/jcsteele)
[11:05:29] *** Quits: jcsteele (~j@user/jcsteele) (Client Quit)
[11:06:22] <han-solo> or maybe https://github.com/webrecorder/warcio/blob/master/test/test_capture_http.py#L75
[11:06:24] <gevreeen> given a client A, a gateway B, and a WSGI web server C, a script S running on C, which does uwsgi. the topology is A---B---C. S gets B's address and port via REMOTE_ADDR and REMOTE_PORT. S gets A's address via HTTP_X_FORWARDED_FOR. now here is the question. case 1. A accesses C by issuing two GET requests in the same TCP connection. case 2. A accesses C by first issuing a GET request with Connection: close and then issues the
[11:06:24] <gevreeen> second request. How is S supposed to distinguish between these two cases?
[11:06:43] *** Joins: jcsteele (~j@user/jcsteele)
[11:07:08] *** Quits: jcsteele (~j@user/jcsteele) (Client Quit)
[11:07:09] <gevreeen> in the second case, it's one request per TCP connection while the first case is two requests in ONE TCP connection
[11:07:28] *** Joins: x_kuru (~xkuru@user/xkuru)
[11:07:30] <gevreeen> and I seek a way for S to tell the differences
[11:07:47] *** Joins: the_lanetly_052 (~the_lanet@194.135.169.153)
[11:08:00] <gevreeen> we are assuming A binds to the same address/port combo in both cases
[11:08:11] *** Joins: winterflaw (~winterfla@gateway/tor-sasl/winterflaw)
[11:08:23] *** Quits: Guest628 (~Rock@cpe-66-66-96-218.rochester.res.rr.com) (Quit: Connection closed)
[11:08:25] <p-i-> BrenBarn: yep
[11:08:26] *** Joins: jcsteele (~j@user/jcsteele)
[11:08:47] *** Quits: jcsteele (~j@user/jcsteele) (Client Quit)
[11:09:28] *** Joins: Enitin (~Enitin@82.102.22.86)
[11:09:32] *** Quits: gentooclimax (~gentoocli@81-64-65-213.rev.numericable.fr) (Quit: Konversation terminated!)
[11:09:36] *** Quits: causa_sui (~causasui@c-68-60-125-136.hsd1.mi.comcast.net) (Ping timeout: 252 seconds)
[11:09:51] *** Joins: mon_aaraj (~MonAaraj@user/mon-aaraj/x-4416475)
[11:09:59] <gevreeen> PEP3333 says "The server or gateway invokes the application callable once for each request it receives from an HTTP client, that is directed at the application." so this must be two callable instances
[11:10:02] *** Quits: xkuru (~xkuru@user/xkuru) (Ping timeout: 240 seconds)
[11:10:03] *** Joins: jcsteele (~j@user/jcsteele)
[11:10:27] *** Quits: jcsteele (~j@user/jcsteele) (Client Quit)
[11:10:35] <gevreeen> but how is such an instance of S supposed to know?
[11:11:19] <gevreeen> using some form of concurrency control doesn't eliminate the case in the above case 2 where the gap between connections are short enough
[11:11:59] *** Joins: dvx_ (~dvx@82.113.48.124)
[11:12:18] <gevreeen> and B happens to just map the same port for A
[11:12:20] *** Quits: x_kuru (~xkuru@user/xkuru) (Ping timeout: 252 seconds)
[11:12:53] *** Joins: xkuru (~xkuru@user/xkuru)
[11:13:08] *** Joins: GNUmoon (~GNUmoon@gateway/tor-sasl/gnumoon)
[11:13:23] <gevreeen> on usual sockets, this can be done by ordering accept()'s via a time signature
[11:13:26] *** Joins: revolve (~u0_a227@cpc100838-bagu15-2-0-cust672.1-3.cable.virginm.net)
[11:13:36] <gevreeen> so I could check when the connection is accepted
[11:13:50] *** Joins: purple_cthulhu (~rax@185.108.96.34)
[11:13:51] *** Quits: dvx_ (~dvx@82.113.48.124) (Client Quit)
[11:13:57] *** Joins: x_kuru (~xkuru@user/xkuru)
[11:14:05] <gevreeen> so if two instances have the same accept signature, then S would know they are from the same tcp connection
[11:14:20] *** Quits: dvx (~dvx@5.181.92.64) (Ping timeout: 250 seconds)
[11:15:06] *** Joins: x_kuru_ (~xkuru@user/xkuru)
[11:15:33] *** Joins: palasso (~palasso@user/palasso)
[11:15:36] *** Joins: jcsteele (~j@user/jcsteele)
[11:15:57] *** Quits: foul_owl (~kerry@23.82.193.89) (Ping timeout: 240 seconds)
[11:15:58] *** Quits: jcsteele (~j@user/jcsteele) (Client Quit)
[11:16:55] *** Joins: tobybl (~tobybl@227.192.115.87.dyn.plus.net)
[11:16:58] *** Joins: causa_sui (~causasui@c-68-60-125-136.hsd1.mi.comcast.net)
[11:17:15] *** Joins: jcsteele (~j@user/jcsteele)
[11:17:36] *** Quits: jcsteele (~j@user/jcsteele) (Client Quit)
[11:17:51] *** Quits: xkuru (~xkuru@user/xkuru) (Ping timeout: 252 seconds)
[11:18:26] *** Joins: xkuru (~xkuru@user/xkuru)
[11:18:34] *** Joins: kts (~kts@103.73.237.7)
[11:18:46] *** Joins: dvx (~dvx@5.181.92.64)
[11:18:48] *** Joins: jcsteele (~j@user/jcsteele)
[11:18:57] *** Quits: x_kuru (~xkuru@user/xkuru) (Ping timeout: 252 seconds)
[11:19:14] *** Quits: jcsteele (~j@user/jcsteele) (Client Quit)
[11:19:15] *** Joins: five6433334963 (~five6@8.40.26.20)
[11:19:43] *** Joins: x_kuru (~xkuru@user/xkuru)
[11:19:49] *** Joins: baffodoro (~raffaem@95.74.53.208)
[11:19:56] *** Joins: EvilDMP (~textual@django/moderator/EvilDMP)
[11:20:23] *** Quits: x_kuru_ (~xkuru@user/xkuru) (Ping timeout: 268 seconds)
[11:20:27] *** Joins: jcsteele (~j@user/jcsteele)
[11:20:53] *** Quits: jcsteele (~j@user/jcsteele) (Client Quit)
[11:20:55] *** Joins: x_kuru_ (~xkuru@user/xkuru)
[11:21:02] *** Quits: five643333496 (~five6@8.40.111.87) (Ping timeout: 240 seconds)
[11:21:02] *** five6433334963 is now known as five643333496
[11:21:06] *** Joins: Gustavo6046_ (~Gustavo60@user/gustavo6046)
[11:21:10] *** Quits: Gustavo6046_ (~Gustavo60@user/gustavo6046) (Remote host closed the connection)
[11:21:37] *** Quits: causa_sui (~causasui@c-68-60-125-136.hsd1.mi.comcast.net) (Ping timeout: 268 seconds)
[11:21:54] *** Joins: julius3 (~raffaem@95.74.53.208)
[11:22:09] *** Joins: jcsteele (~j@user/jcsteele)
[11:22:31] *** Quits: Gustavo6046 (~Gustavo60@user/gustavo6046) (Read error: Connection reset by peer)
[11:22:32] *** Quits: jcsteele (~j@user/jcsteele) (Client Quit)
[11:22:48] *** Quits: schumaml (~schumaml@dslb-094-216-170-023.094.216.pools.vodafone-ip.de) (Ping timeout: 252 seconds)
[11:23:26] *** Quits: xkuru (~xkuru@user/xkuru) (Ping timeout: 250 seconds)
[11:23:45] *** Joins: jcsteele (~j@user/jcsteele)
[11:23:52] *** Joins: nuclearg1 (~nucleargr@user/nuclearg1)
[11:24:10] *** Quits: jcsteele (~j@user/jcsteele) (Client Quit)
[11:24:18] *** Quits: x_kuru (~xkuru@user/xkuru) (Ping timeout: 250 seconds)
[11:24:36] *** Joins: schumaml (~schumaml@ipservice-092-211-207-209.092.211.pools.vodafone-ip.de)
[11:24:41] *** Joins: causa_sui (~causasui@c-68-60-125-136.hsd1.mi.comcast.net)
[11:24:46] *** Joins: sawk (~quassel@151.81.118.116)
[11:25:12] *** Quits: Betal (~Betal@user/betal) (Quit: WeeChat 3.4.1)
[11:25:14] *** Joins: csm3105 (~csm3105@143.red-83-48-84.staticip.rima-tde.net)
[11:25:24] *** Joins: jcsteele (~j@user/jcsteele)
[11:25:28] <gevreeen> hmm, could we use id(environ['wsgi.input']) as the unique id then?
[11:25:36] *** Quits: x_kuru_ (~xkuru@user/xkuru) (Ping timeout: 250 seconds)
[11:25:47] *** Quits: jcsteele (~j@user/jcsteele) (Client Quit)
[11:26:11] <gevreeen> or rather, is id(environ['wsgi.input']) supposed to immutable for two requests coming from the same TCP connection?
[11:27:01] *** Joins: jcsteele (~j@user/jcsteele)
[11:27:27] *** Quits: jcsteele (~j@user/jcsteele) (Client Quit)
[11:27:57] <rawrrr> Okay, so I'm using pandas now... I imported my 2 data sets, both are CSVs, each have an EID column... I'm trying get rid of all rows without matching EIDs and merge the ones that do have matching EIDs
[11:28:02] *** Quits: klotzhauer (~klotzhaue@gibtesnochklopapier.de) (Quit: ZNC 1.8.2 - https://znc.in)
[11:28:37] <rawrrr> https://bpa.st/DWHA this is what I have so far
[11:28:42] *** Joins: jcsteele (~j@user/jcsteele)
[11:29:01] *** Quits: nuclearg1 (~nucleargr@user/nuclearg1) (Ping timeout: 268 seconds)
[11:29:02] *** Quits: causa_sui (~causasui@c-68-60-125-136.hsd1.mi.comcast.net) (Ping timeout: 240 seconds)
[11:29:08] <rawrrr> upon execution I'm getting an error tho: "ValueError: You are trying to merge on int64 and object columns. If you wish to proceed you should use pd.concat"
[11:29:56] *** Joins: cerill (~cerill@h-155-4-198-153.A785.priv.bahnhof.se)
[11:30:09] *** Quits: jcsteele (~j@user/jcsteele) (Client Quit)
[11:30:54] *** Joins: foul_owl (~kerry@23.82.193.89)
[11:31:05] *** Joins: causa_sui (~causasui@c-68-60-125-136.hsd1.mi.comcast.net)
[11:31:22] *** Joins: jcsteele (~j@user/jcsteele)
[11:31:47] *** Quits: jcsteele (~j@user/jcsteele) (Client Quit)
[11:31:47] *** Joins: grooverman_ (~grooverma@152.250.149.49)
[11:32:26] *** Joins: jay-m126 (~jay-m@154.126.169.74)
[11:32:31] *** Joins: jay-m126_ (~jay-m@154.126.169.74)
[11:33:09] <rawrrr> how would I change the column types?
[11:33:45] *** Quits: fartyfoam (~fartyfoam@178-118-118-2.access.telenet.be) (Quit: The Lounge - https://thelounge.chat)
[11:33:50] *** Joins: jcsteele (~j@user/jcsteele)
[11:34:08] *** Joins: jpn (~jpn@user/jpn)
[11:34:15] *** Joins: p-i-_ (~Ohmu@2403:6200:8978:9086:d00f:f2c2:bf2c:7c2b)
[11:34:17] <gevreeen> int64? you are running python2?
[11:34:21] *** Quits: grooverman (~grooverma@152.250.149.217) (Ping timeout: 252 seconds)
[11:34:40] *** Quits: jcsteele (~j@user/jcsteele) (Client Quit)
[11:34:42] *** Joins: luigibu (~luigi@93.176.153.88)
[11:35:24] *** Quits: p-i- (~Ohmu@2403:6200:8978:9086:e8a3:2cbd:7ed9:8d88) (Ping timeout: 240 seconds)
[11:35:34] *** Quits: causa_sui (~causasui@c-68-60-125-136.hsd1.mi.comcast.net) (Ping timeout: 250 seconds)
[11:35:58] *** Joins: jcsteele (~j@user/jcsteele)
[11:36:03] *** Joins: kosh (~kosh@user/kosh)
[11:36:22] *** Quits: jcsteele (~j@user/jcsteele) (Client Quit)
[11:36:42] *** Joins: maryo87 (~Maryo@user/maryo)
[11:37:33] *** Joins: jay-m1261 (~jay-m@154.126.169.74)
[11:37:40] *** Joins: p-i- (~Ohmu@2403:6200:8978:9086:f1b7:e70:337:d2ba)
[11:37:57] *** Quits: parv (~quass@user/parv) (Ping timeout: 240 seconds)
[11:38:15] *** Joins: jcsteele (~j@user/jcsteele)
[11:38:32] *** Quits: jpn (~jpn@user/jpn) (Ping timeout: 240 seconds)
[11:38:36] *** Quits: jcsteele (~j@user/jcsteele) (Client Quit)
[11:39:50] *** Joins: jcsteele (~j@user/jcsteele)
[11:39:51] *** Quits: maryo (~Maryo@user/maryo) (Ping timeout: 252 seconds)
[11:40:02] *** Quits: schumaml (~schumaml@ipservice-092-211-207-209.092.211.pools.vodafone-ip.de) (Ping timeout: 240 seconds)
[11:40:10] *** Joins: david1 (~david@103.18.0.18)
[11:40:14] *** Quits: jcsteele (~j@user/jcsteele) (Client Quit)
[11:40:23] <rawrrr> python 3.10 :)
[11:40:25] <gevreeen> maybe it's asking you to do pd.concat instead of pd.merge?
[11:40:32] *** Quits: p-i-_ (~Ohmu@2403:6200:8978:9086:d00f:f2c2:bf2c:7c2b) (Ping timeout: 240 seconds)
[11:40:55] *** Quits: moldorcoder7 (~moldorcod@37.120.143.28) (Read error: Connection reset by peer)
[11:41:17] <rawrrr> merging would be ideal. its just that the column type in one of the csvs is an object and in the other it's just an int
[11:41:26] *** Joins: jcsteele (~j@user/jcsteele)
[11:41:53] *** Quits: jcsteele (~j@user/jcsteele) (Client Quit)
[11:42:17] *** Joins: gentooclimax (~gentoocli@81-64-65-213.rev.numericable.fr)
[11:42:34] *** Joins: schumaml (~schumaml@dslb-178-007-203-181.178.007.pools.vodafone-ip.de)
[11:43:46] *** Joins: jcsteele (~j@user/jcsteele)
[11:43:55] *** Joins: moldorcoder7 (~moldorcod@37.120.143.30)
[11:44:07] *** Quits: jcsteele (~j@user/jcsteele) (Client Quit)
[11:44:34] <gevreeen> never done this before, but maybe you could read one csv, and then try and read the other and add to the first, and then output it?
[11:44:43] *** Joins: epony (epony@user/epony)
[11:44:57] <rawrrr> might be easier to just wrap the entries in the column with quotation marks in my text editor
[11:45:03] <gevreeen> so you have csv A and csv B, you will wanna add entried from B to A
[11:45:18] *** Joins: jcsteele (~j@user/jcsteele)
[11:45:42] *** Joins: lbalhar (~lbalhar@spsei.osanet.cz)
[11:45:45] *** Quits: jcsteele (~j@user/jcsteele) (Client Quit)
[11:47:05] *** Joins: jcsteele (~j@user/jcsteele)
[11:48:06] *** Joins: zen_coder (~zen_coder@2a02:8109:a280:2d8d:6457:bfc9:b18d:cf5)
[11:48:15] *** Quits: adiKt (uid472628@id-472628.tinside.irccloud.com) (Quit: Connection closed for inactivity)
[11:48:27] *** Quits: jcsteele (~j@user/jcsteele) (Client Quit)
[11:49:00] *** Joins: kts_ (~kts@103.73.237.62)
[11:49:02] *** Quits: kts (~kts@103.73.237.7) (Ping timeout: 240 seconds)
[11:49:42] *** Joins: jcsteele (~j@user/jcsteele)
[11:50:06] *** Quits: jcsteele (~j@user/jcsteele) (Client Quit)
[11:50:33] *** Joins: merijn (~merijn@c-001-001-001.client.esciencecenter.eduvpn.nl)
[11:51:18] *** Joins: jcsteele (~j@user/jcsteele)
[11:51:25] *** Quits: luva (~luva@146.70.62.254) (Read error: Connection reset by peer)
[11:51:32] *** Joins: Forsaken87 (~quassel@ip-037-201-193-116.um10.pools.vodafone-ip.de)
[11:51:45] *** Quits: ghost43 (~ghost43@gateway/tor-sasl/ghost43) (Remote host closed the connection)
[11:51:45] *** Quits: jcsteele (~j@user/jcsteele) (Client Quit)
[11:52:00] *** Joins: ghost43 (~ghost43@gateway/tor-sasl/ghost43)
[11:52:57] *** Joins: jcsteele (~j@user/jcsteele)
[11:53:25] *** Quits: jcsteele (~j@user/jcsteele) (Client Quit)
[11:53:30] *** Joins: luva (~luva@146.70.62.237)
[11:54:22] *** Joins: p-i-_ (~Ohmu@2403:6200:8978:9086:d156:14d4:fe1b:90bd)
[11:54:35] *** Joins: c4017w_ (~c4017@209.52.68.8)
[11:54:37] *** Joins: jcsteele (~j@user/jcsteele)
[11:55:18] *** Joins: et_ (~et@user/et)
[11:56:05] *** Joins: cuanim (~cuanim@176.205.100.193)
[11:56:11] *** Quits: et (~et@user/et) (Ping timeout: 256 seconds)
[11:56:32] *** Quits: jcsteele (~j@user/jcsteele) (Client Quit)
[11:57:02] *** Quits: p-i- (~Ohmu@2403:6200:8978:9086:f1b7:e70:337:d2ba) (Ping timeout: 240 seconds)
[11:57:27] *** Quits: GrayArea (~cpd@cpc115156-dals23-2-0-cust689.20-2.cable.virginm.net) (Ping timeout: 252 seconds)
[11:57:39] *** Joins: acresearch (~acresearc@user/acresearch)
[11:57:42] <acresearch> people, i have this code: idx = np.random.choice(len(example), size=self.feature_size, replace=False) ---> but it is giving me this error: ValueError: Cannot take a larger sample than population when 'replace=False' what does this mean? it worked with a small dataset but not with a larger dataset. How can i fix it?
[11:57:59] *** Quits: david1 (~david@103.18.0.18) (Quit: WeeChat 2.8)
[11:58:07] *** Quits: c4017w__ (~c4017@209.52.68.8) (Ping timeout: 256 seconds)
[11:58:12] *** Joins: MajorBiscuit (~MajorBisc@wlan-145-94-218-48.wlan.tudelft.nl)
[11:58:36] *** Quits: ghost43 (~ghost43@gateway/tor-sasl/ghost43) (Remote host closed the connection)
[11:58:51] *** Joins: ghost43 (~ghost43@gateway/tor-sasl/ghost43)
[11:58:54] *** Joins: jcsteele (~j@user/jcsteele)
[11:59:02] *** Quits: chowmeined (~chowmeine@user/chowmeined) (Ping timeout: 272 seconds)
[11:59:19] *** Quits: jcsteele (~j@user/jcsteele) (Client Quit)
[11:59:52] <Repiphany> acresearch: That doesn't make sense when len(example) is smaller than self.feature_size
[11:59:57] *** Quits: et_ (~et@user/et) (Ping timeout: 240 seconds)
[12:00:14] <Repiphany> Like trying to pick 10 elements in the range 0-5 without replacement
[12:00:30] *** Joins: causa_sui (~causasui@c-68-60-125-136.hsd1.mi.comcast.net)
[12:00:34] *** Joins: jcsteele (~j@user/jcsteele)
[12:00:58] *** Quits: jcsteele (~j@user/jcsteele) (Client Quit)
[12:01:07] *** Quits: cuanim (~cuanim@176.205.100.193) (Changing host)
[12:01:07] *** Joins: cuanim (~cuanim@user/cuanim)
[12:01:21] *** Quits: MajorBiscuit (~MajorBisc@wlan-145-94-218-48.wlan.tudelft.nl) (Client Quit)
[12:01:53] *** Quits: kts_ (~kts@103.73.237.62) (Quit: Konversation terminated!)
[12:01:57] *** Joins: jmiehe (~Thunderbi@user/jmiehe)
[12:02:10] *** Joins: jcsteele (~j@user/jcsteele)
[12:02:35] *** Joins: arinov (~arinov@213.194.126.155)
[12:02:37] *** Quits: jcsteele (~j@user/jcsteele) (Client Quit)
[12:02:42] <acresearch> Repiphany: hmmmm
[12:03:29] <rindolf> Repiphany++
[12:03:48] *** Quits: EvilDMP (~textual@django/moderator/EvilDMP) (Quit: My MacBook has gone to sleep. ZZZzzz…)
[12:03:50] *** Joins: jcsteele (~j@user/jcsteele)
[12:04:12] *** Quits: jcsteele (~j@user/jcsteele) (Client Quit)
[12:05:11] *** Parts: rkta (~rkta@2001:4ba0:cafe:eaf::1) ()
[12:05:28] *** Joins: jcsteele (~j@user/jcsteele)
[12:05:29] *** Quits: causa_sui (~causasui@c-68-60-125-136.hsd1.mi.comcast.net) (Ping timeout: 256 seconds)
[12:05:44] *** Joins: MajorBiscuit (~MajorBisc@wlan-145-94-218-48.wlan.tudelft.nl)
[12:05:51] *** Quits: jcsteele (~j@user/jcsteele) (Client Quit)
[12:07:03] *** Joins: jcsteele (~j@user/jcsteele)
[12:07:29] *** Quits: jcsteele (~j@user/jcsteele) (Client Quit)
[12:07:36] *** Joins: GrayArea (~cpd@cpc115156-dals23-2-0-cust689.20-2.cable.virginm.net)
[12:07:53] *** Quits: rama (~rama@c-24-130-92-222.hsd1.ca.comcast.net) (Remote host closed the connection)
[12:08:46] *** Joins: jcsteele (~j@user/jcsteele)
[12:09:08] *** Quits: jcsteele (~j@user/jcsteele) (Client Quit)
[12:09:38] *** Joins: paul424 (~tom@ip-5-172-236-119.multi.internet.cyfrowypolsat.pl)
[12:10:22] *** Joins: jcsteele (~j@user/jcsteele)
[12:10:47] *** Quits: jcsteele (~j@user/jcsteele) (Client Quit)
[12:10:57] *** Joins: ayustae (Thunderbir@gateway/vpn/protonvpn/ayustae)
[12:11:32] *** Quits: p-i-_ (~Ohmu@2403:6200:8978:9086:d156:14d4:fe1b:90bd) (Remote host closed the connection)
[12:12:04] *** Joins: p-i- (~Ohmu@2403:6200:8978:9086:d456:def0:f1eb:7e7c)
[12:12:21] *** Joins: jcsteele (~j@user/jcsteele)
[12:12:42] *** Quits: jcsteele (~j@user/jcsteele) (Client Quit)
[12:12:42] <bookworm> rawrr, pandas can convert the type of series with ser.astype() ... object generally points to string data if you load a csv
[12:12:49] *** Joins: iomari891 (~iomari891@197.210.76.112)
[12:13:58] *** Joins: jcsteele (~j@user/jcsteele)
[12:14:21] *** Quits: jcsteele (~j@user/jcsteele) (Client Quit)
[12:14:38] *** Joins: nuclearg1 (~nucleargr@user/nuclearg1)
[12:14:45] *** Quits: kurfen (~kurfen@213.152.188.7) (Ping timeout: 250 seconds)
[12:14:51] *** Joins: kurfen_ (~kurfen@176.119.195.9)
[12:15:01] *** Joins: EvilDMP (~textual@django/moderator/EvilDMP)
[12:15:34] *** Joins: jcsteele (~j@user/jcsteele)
[12:16:00] *** Quits: jcsteele (~j@user/jcsteele) (Client Quit)
[12:16:17] *** Quits: esther (~esther@24-155-112-236.dyn.grandenetworks.net) (Ping timeout: 240 seconds)
[12:17:12] *** Joins: gurkenglas (~gurkengla@dslb-178-012-018-212.178.012.pools.vodafone-ip.de)
[12:17:14] *** Quits: mon_aaraj (~MonAaraj@user/mon-aaraj/x-4416475) (Ping timeout: 252 seconds)
[12:17:18] *** Joins: jcsteele (~j@user/jcsteele)
[12:17:40] *** Quits: jcsteele (~j@user/jcsteele) (Client Quit)
[12:18:07] *** Joins: klotzhauer (~klotzhaue@gibtesnochklopapier.de)
[12:18:51] *** Joins: jcsteele (~j@user/jcsteele)
[12:18:57] *** Quits: nuclearg1 (~nucleargr@user/nuclearg1) (Ping timeout: 240 seconds)
[12:19:15] *** Joins: mon_aaraj (~MonAaraj@user/mon-aaraj/x-4416475)
[12:20:17] *** Quits: jcsteele (~j@user/jcsteele) (Client Quit)
[12:20:34] *** Quits: klotzhauer (~klotzhaue@gibtesnochklopapier.de) (Client Quit)
[12:21:02] *** Quits: csm3105 (~csm3105@143.red-83-48-84.staticip.rima-tde.net) (Ping timeout: 240 seconds)
[12:21:16] *** Joins: klotzhauer (~klotzhaue@gibtesnochklopapier.de)
[12:21:33] *** Joins: trace987 (~f200yx10@ip5b42976d.dynamic.kabel-deutschland.de)
[12:22:10] *** Joins: jcsteele (~j@user/jcsteele)
[12:22:30] *** Quits: jcsteele (~j@user/jcsteele) (Client Quit)
[12:23:15] *** Joins: Ergo^ (~ergo@91.238.59.144)
[12:23:30] *** Joins: agumonkey (~user@88.163.231.79)
[12:23:47] *** Joins: jcsteele (~j@user/jcsteele)
[12:24:09] *** Quits: jcsteele (~j@user/jcsteele) (Client Quit)
[12:24:55] *** Joins: soju-test-user (~soju-test@lfbn-idf2-1-1140-121.w90-92.abo.wanadoo.fr)
[12:25:02] *** Joins: causa_sui (~causasui@c-68-60-125-136.hsd1.mi.comcast.net)
[12:25:22] *** Joins: anshupatia (uid29854@id-29854.helmsley.irccloud.com)
[12:25:26] *** Joins: jcsteele (~j@user/jcsteele)
[12:25:44] *** Joins: chele (~chele@user/chele)
[12:25:47] *** Quits: jcsteele (~j@user/jcsteele) (Client Quit)
[12:25:50] *** Joins: spetrosi (~spetrosi@2a02:8308:b:ec00:e1ce:d7b:6a8f:f189)
[12:26:30] *** Joins: otisolsen70 (~otisolsen@80.80.4.2)
[12:26:59] *** Quits: Ingvix (~Ingvix@user/ingvix) (Read error: Connection reset by peer)
[12:27:06] *** Joins: csm3105 (~csm3105@143.red-83-48-84.staticip.rima-tde.net)
[12:27:35] *** Quits: freeworld (~freeworld@chello085216193138.chello.sk) (Ping timeout: 256 seconds)
[12:28:31] *** Quits: szkl (uid110435@id-110435.uxbridge.irccloud.com) (Quit: Connection closed for inactivity)
[12:28:44] *** Joins: jcsteele (~j@user/jcsteele)
[12:29:06] *** Quits: jcsteele (~j@user/jcsteele) (Client Quit)
[12:29:09] *** Joins: Ingvix (~Ingvix@user/ingvix)
[12:29:31] *** Quits: causa_sui (~causasui@c-68-60-125-136.hsd1.mi.comcast.net) (Ping timeout: 245 seconds)
[12:30:02] *** Quits: winterflaw (~winterfla@gateway/tor-sasl/winterflaw) (Remote host closed the connection)
[12:30:06] *** Quits: miique (~miiquemat@2001:470:69fc:105::1:6901) (Quit: You have been kicked for being idle)
[12:30:12] *** Quits: langley[m] (~langleyis@2001:470:69fc:105::1:bd3a) (Quit: You have been kicked for being idle)
[12:30:18] *** Joins: jcsteele (~j@user/jcsteele)
[12:30:30] *** Quits: bitdex (~bitdex@gateway/tor-sasl/bitdex) (Quit: = "")
[12:30:43] *** Quits: jcsteele (~j@user/jcsteele) (Client Quit)
[12:30:54] *** Joins: SallyAhaj (~SallyAhaj@user/sallyahaj)
[12:31:24] *** xavie1 is now known as xcombelle
[12:31:55] *** Joins: jcsteele (~j@user/jcsteele)
[12:32:07] *** Quits: mantra (~mantra@216.73.163.81) (Ping timeout: 256 seconds)
[12:32:22] *** Quits: jcsteele (~j@user/jcsteele) (Client Quit)
[12:32:25] *** Joins: causa_sui (~causasui@c-68-60-125-136.hsd1.mi.comcast.net)
[12:32:38] *** Joins: ttorfs (~ttorfs@ip-193-121-152-141.dsl.scarlet.be)
[12:32:52] *** Joins: mrwick (~mrwick@user/mrwick)
[12:33:24] *** Joins: nuclearg1 (~nucleargr@user/nuclearg1)
[12:33:24] *** Joins: Henry_ (~mahengrui@user/mahengrui1)
[12:33:36] *** Joins: jcsteele (~j@user/jcsteele)
[12:33:43] *** Joins: AquaL1te (~AquaL1te@user/aqual1te)
[12:33:57] *** Quits: mrwick (~mrwick@user/mrwick) (Client Quit)
[12:34:02] *** Quits: jcsteele (~j@user/jcsteele) (Client Quit)
[12:34:08] *** ttorfs is now known as vantage
[12:35:04] *** Joins: marcello42 (~mp@p200300dfaf10fe013da0eb2bf7bf6508.dip0.t-ipconnect.de)
[12:35:22] *** Quits: han-solo (~hanish@user/han-solo) (Ping timeout: 250 seconds)
[12:35:31] *** Quits: hams (~hams@user/hams) (Ping timeout: 256 seconds)
[12:35:45] *** Joins: jcsteele (~j@user/jcsteele)
[12:36:09] *** Quits: jcsteele (~j@user/jcsteele) (Client Quit)
[12:36:30] *** Quits: white2 (~mahengrui@user/mahengrui1) (Ping timeout: 252 seconds)
[12:37:02] *** Quits: causa_sui (~causasui@c-68-60-125-136.hsd1.mi.comcast.net) (Ping timeout: 240 seconds)
[12:37:18] *** gentooclimax is now known as climax
[12:37:22] *** Joins: jcsteele (~j@user/jcsteele)
[12:37:42] *** Quits: cypostres (~cypostres@user/cypostres) (Remote host closed the connection)
[12:37:47] *** Quits: jcsteele (~j@user/jcsteele) (Client Quit)
[12:37:56] *** Joins: cypostres (~cypostres@user/cypostres)
[12:38:37] *** Quits: audiobirb (~audio@user/audio) (Ping timeout: 240 seconds)
[12:38:42] *** Joins: mantra (~mantra@216.73.163.136)
[12:38:42] *** Quits: nuclearg1 (~nucleargr@user/nuclearg1) (Ping timeout: 260 seconds)
[12:38:59] *** Joins: jcsteele (~j@user/jcsteele)
[12:39:09] *** Quits: chenqisu1 (~chenqisu1@183.217.201.47) (Quit: Leaving)
[12:39:26] *** Quits: jcsteele (~j@user/jcsteele) (Client Quit)
[12:39:27] *** Joins: jle (~jle@user/jle)
[12:39:53] *** Joins: mav`rik (~unknown@ec2-54-171-126-99.eu-west-1.compute.amazonaws.com)
[12:40:02] *** Quits: ubert (~Thunderbi@p200300ecdf19b776fd6bfc6fe6a8a410.dip0.t-ipconnect.de) (Ping timeout: 240 seconds)
[12:40:11] <mickey> hello everyone. im trying to plot a graph with pandas dataframe's plot() in jupyter, show it and save it to file. df.plot() shows the graph okay, but then Axes can't savefig(), so i ended up with p=df.plot().get_figure(); p.savefig() which works okay, but then i end up with 2 graphs in the notebook, where one is empty and one is good
[12:40:21] *** Quits: mon_aaraj (~MonAaraj@user/mon-aaraj/x-4416475) (Ping timeout: 245 seconds)
[12:40:36] *** Joins: jmd (~user@de.cellform.com)
[12:40:38] *** Joins: jcsteele (~j@user/jcsteele)
[12:41:07] *** Quits: jcsteele (~j@user/jcsteele) (Client Quit)
[12:41:08] <mickey> plt.close() would hide the good graph instead of the empty one, and p.close() doesn't because Figure doesn't have a close()
[12:41:16] *** Joins: ubert (~Thunderbi@p200300ecdf153925fd6bfc6fe6a8a410.dip0.t-ipconnect.de)
[12:42:19] *** Joins: jcsteele (~j@user/jcsteele)
[12:42:35] *** Joins: mon_aaraj (~MonAaraj@user/mon-aaraj/x-4416475)
[12:42:45] *** Quits: jcsteele (~j@user/jcsteele) (Client Quit)
[12:42:53] *** Joins: xrogaan (~xrogaan@user/xrogaan)
[12:43:16] *** Joins: shad (~shad@user/shad)
[12:43:52] *** Quits: bitblit (~bitblit@gateway/tor-sasl/bitblit) (Remote host closed the connection)
[12:44:23] *** Joins: jcsteele (~j@user/jcsteele)
[12:44:54] *** Quits: tev27 (~tev@user/tev27) (Ping timeout: 250 seconds)
[12:45:09] *** Quits: jcsteele (~j@user/jcsteele) (Client Quit)
[12:45:30] *** Joins: winterflaw (~winterfla@gateway/tor-sasl/winterflaw)
[12:45:52] <rawrrr> bookworm: ty. got it working
[12:46:14] *** Joins: bitblit (~bitblit@gateway/tor-sasl/bitblit)
[12:46:41] *** Joins: causa_sui (~causasui@c-68-60-125-136.hsd1.mi.comcast.net)
[12:46:57] *** Quits: schumaml (~schumaml@dslb-178-007-203-181.178.007.pools.vodafone-ip.de) (Ping timeout: 252 seconds)
[12:48:11] *** climax is now known as gentooclimax
[12:48:15] *** Joins: han-solo (~hanish@user/han-solo)
[12:48:27] *** Quits: vantage (~ttorfs@ip-193-121-152-141.dsl.scarlet.be) (Quit: Leaving)
[12:48:42] <mickey> i got it. sorry for the redundant question.
[12:48:43] *** Joins: vantage (~vantage@ip-193-121-152-141.dsl.scarlet.be)
[12:48:50] *** Joins: tapeworm (~tapeworm@188.168.50.119)
[12:48:55] *** Joins: schumaml (~schumaml@dslb-092-074-002-071.092.074.pools.vodafone-ip.de)
[12:48:58] *** Quits: greyblue9 (sid500829@id-500829.ilkley.irccloud.com) (Ping timeout: 260 seconds)
[12:49:01] *** Joins: vimal (~vimal@2a02:a210:9600:1f00:cf25:5fe2:fd13:9e52)
[12:49:29] *** Joins: jcsteele (~j@user/jcsteele)
[12:49:31] *** Quits: bn_work (uid268505@id-268505.uxbridge.irccloud.com) (Ping timeout: 245 seconds)
[12:49:49] *** Quits: jcsteele (~j@user/jcsteele) (Client Quit)
[12:50:13] *** Quits: ubert (~Thunderbi@p200300ecdf153925fd6bfc6fe6a8a410.dip0.t-ipconnect.de) (Ping timeout: 240 seconds)
[12:50:17] *** Quits: sharpertool (sid80151@id-80151.hampstead.irccloud.com) (Ping timeout: 250 seconds)
[12:51:02] *** Quits: causa_sui (~causasui@c-68-60-125-136.hsd1.mi.comcast.net) (Ping timeout: 240 seconds)
[12:51:08] *** Joins: jcsteele (~j@user/jcsteele)
[12:51:24] *** Joins: greyblue9 (sid500829@id-500829.ilkley.irccloud.com)
[12:51:28] *** Quits: jcsteele (~j@user/jcsteele) (Client Quit)
[12:51:34] *** Quits: led_belly (~led_belly@159.48.53.215) (Read error: Connection reset by peer)
[12:51:43] *** Joins: sharpertool (sid80151@id-80151.hampstead.irccloud.com)
[12:51:56] *** Joins: bn_work (uid268505@id-268505.uxbridge.irccloud.com)
[12:52:46] *** Joins: jcsteele (~j@user/jcsteele)
[12:52:54] *** Joins: Y4knotiS (~YaknotiS@cpc1-cmbg18-2-0-cust87.5-4.cable.virginm.net)
[12:53:08] *** Quits: jcsteele (~j@user/jcsteele) (Client Quit)
[12:54:10] *** Joins: ubert (~Thunderbi@p200300ecdf15887dfd6bfc6fe6a8a410.dip0.t-ipconnect.de)
[12:54:22] *** Joins: jcsteele (~j@user/jcsteele)
[12:54:46] *** Quits: jcsteele (~j@user/jcsteele) (Client Quit)
[12:55:07] *** Quits: Techcable (~Techcable@168.235.93.147) (Read error: Connection reset by peer)
[12:55:12] *** Quits: GrayArea (~cpd@cpc115156-dals23-2-0-cust689.20-2.cable.virginm.net) (Ping timeout: 252 seconds)
[12:55:14] *** Joins: Techcable (~Techcable@168.235.93.147)
[12:55:18] *** Quits: tobybl (~tobybl@227.192.115.87.dyn.plus.net) (Remote host closed the connection)
[12:55:20] *** Joins: c4017w__ (~c4017@209.52.68.8)
[12:55:40] *** Joins: tobybl (~tobybl@227.192.115.87.dyn.plus.net)
[12:55:59] *** Joins: jcsteele (~j@user/jcsteele)
[12:56:10] *** Quits: schumaml (~schumaml@dslb-092-074-002-071.092.074.pools.vodafone-ip.de) (Ping timeout: 250 seconds)
[12:56:26] *** Quits: jcsteele (~j@user/jcsteele) (Client Quit)
[12:56:36] *** Quits: EdFletcher (~PKD@user/edfletcher) (Ping timeout: 250 seconds)
[12:57:26] *** Joins: schumaml (~schumaml@dslb-092-074-002-071.092.074.pools.vodafone-ip.de)
[12:57:43] *** Joins: jcsteele (~j@user/jcsteele)
[12:58:05] *** Quits: jcsteele (~j@user/jcsteele) (Client Quit)
[12:58:46] *** Quits: c4017w_ (~c4017@209.52.68.8) (Ping timeout: 250 seconds)
[13:00:32] *** Joins: jcsteele (~j@user/jcsteele)
[13:00:38] *** Quits: acresearch (~acresearc@user/acresearch) (Quit: WeeChat 2.8)
[13:01:00] *** Quits: jcsteele (~j@user/jcsteele) (Client Quit)
[13:01:49] *** Henry_ is now known as white2
[13:02:07] *** Joins: led_belly (~led_belly@159.48.53.216)
[13:02:14] *** Joins: jcsteele (~j@user/jcsteele)
[13:02:15] *** Quits: vantage (~vantage@ip-193-121-152-141.dsl.scarlet.be) (Quit: Leaving)
[13:02:35] *** Joins: vantage (~vantage@ip-193-121-152-141.dsl.scarlet.be)
[13:02:39] *** Quits: jcsteele (~j@user/jcsteele) (Client Quit)
[13:02:43] *** Joins: mrwick (~mrwick@user/mrwick)
[13:03:40] *** Quits: white2 (~mahengrui@user/mahengrui1) (Read error: Connection reset by peer)
[13:04:30] *** Joins: freeworld (~freeworld@chello085216193138.chello.sk)
[13:04:45] *** Joins: white2 (~mahengrui@user/mahengrui1)
[13:05:12] *** Quits: vantage (~vantage@ip-193-121-152-141.dsl.scarlet.be) (Client Quit)
[13:05:38] *** Joins: vantage (~vantage@ip-193-121-152-141.dsl.scarlet.be)
[13:05:43] *** Joins: jcsteele (~j@user/jcsteele)
[13:06:09] *** Quits: jcsteele (~j@user/jcsteele) (Client Quit)
[13:06:12] *** Joins: programmar (~whatever@118.69.128.37)
[13:06:27] <programmar> guys how can i set a cookie to permanent in flask ? i tried this res.set_cookie(f"UserID", cookie, expires=expire_date) and it works, but it is still nto permanent
[13:06:58] <Exa> Hi, is it possible to specify multiple version ranges in a version specifier?  E.g. "foo>=1.0.0, <1.2.0, ~=1.3.1".  It says "no matching distribution found" and then lists some versions that should be compatible.
[13:07:19] <Exa> programmar: permanent cookies do not exist, you have to use a date far in the future
[13:07:29] *** Joins: jcsteele (~j@user/jcsteele)
[13:07:49] *** Quits: jcsteele (~j@user/jcsteele) (Client Quit)
[13:08:06] <programmar> i heard that if i set Expires in the HTTP request to nothing it can
[13:08:13] <programmar> but how to implement it throguh flask, idk
[13:08:55] *** Joins: nuclearg1 (~nucleargr@user/nuclearg1)
[13:09:03] *** Joins: jcsteele (~j@user/jcsteele)
[13:09:27] *** Quits: jcsteele (~j@user/jcsteele) (Client Quit)
[13:10:04] *** Joins: vladoski (~vladoski@2001:b07:add:d406:df6c:d4e5:d817:538e)
[13:10:05] *** Joins: causa_sui (~causasui@c-68-60-125-136.hsd1.mi.comcast.net)
[13:10:38] *** Joins: jcsteele (~j@user/jcsteele)
[13:11:04] *** Quits: jcsteele (~j@user/jcsteele) (Client Quit)
[13:11:30] *** Joins: plastico (~plastico@neomutt/plastico)
[13:12:19] *** Joins: jcsteele (~j@user/jcsteele)
[13:12:43] *** Quits: jcsteele (~j@user/jcsteele) (Client Quit)
[13:14:01] *** Joins: jcsteele (~j@user/jcsteele)
[13:14:21] *** Quits: jcsteele (~j@user/jcsteele) (Client Quit)
[13:14:32] *** Quits: causa_sui (~causasui@c-68-60-125-136.hsd1.mi.comcast.net) (Ping timeout: 240 seconds)
[13:14:44] <mav`rik> Exa: how can you expect to have something which is both less than 1.2.0 AND compatible with 1.3.1?
[13:15:11] <Exa> mav`rik: the example given in PEP 440 is confusing, then
[13:15:21] <Exa> it gives a similar example
[13:15:32] *** Quits: jazzy (~jaziz@user/jaziz) (Ping timeout: 240 seconds)
[13:16:12] *** Joins: Xano_ (~Xano@2a00:23c4:4204:700:ce9a:cd5b:a90f:1812)
[13:16:53] *** Quits: schumaml (~schumaml@dslb-092-074-002-071.092.074.pools.vodafone-ip.de) (Ping timeout: 256 seconds)
[13:16:56] <mav`rik> Exa: do you mean the list as shown immediately beneath `Version specifiers`, or something else? https://peps.python.org/pep-0440/#version-specifiers
[13:17:06] <Exa> with "~= 0.9, >= 1.0, != 1.3.4.*, < 2.0" you can't have both 0.x with x >= 9 AND >= 1.0 < 2.0
[13:17:46] <Exa> or is it a logical OR in this example, somehow, even as it says comma is logical AND?
[13:17:50] <mav`rik> Exa: That's an example of the kinds of operators, and how the string is separated with commas, it's not supposed to be specific or actionable I believe
[13:18:12] *** Joins: jcsteele (~j@user/jcsteele)
[13:18:14] <mav`rik> Exa: What are you trying to achieve?
[13:18:40] *** Joins: schumaml (~schumaml@dslb-178-007-195-002.178.007.pools.vodafone-ip.de)
[13:20:07] *** dcaro_away is now known as dcaro
[13:20:31] <Exa> I'm editing a package that needs to support some ancient dependencies, with a range, and also newer releases in the latest version branch.  The only option I'm seeing right now is removing the dependency maximum range (foo>=1.0.0 and document somewhere that ">= 1.2.0 <1.3.1" must not be installed)
[13:20:51] *** Joins: causa_sui (~causasui@c-68-60-125-136.hsd1.mi.comcast.net)
[13:21:00] *** Quits: nuclearg1 (~nucleargr@user/nuclearg1) (Ping timeout: 240 seconds)
[13:21:49] *** gentooclimax is now known as climax
[13:22:19] *** Quits: EvilDMP (~textual@django/moderator/EvilDMP) (Quit: My MacBook has gone to sleep. ZZZzzz…)
[13:22:28] *** Quits: noobaroo (~noobaroo@user/noobaroo) (Remote host closed the connection)
[13:22:30] *** Joins: Xano (~Xano@2a00:23c4:4204:700:a5a7:beb6:ad5a:ddae)
[13:22:32] *** Quits: jcsteele (~j@user/jcsteele) (Ping timeout: 240 seconds)
[13:22:54] *** Quits: agumonkey (~user@88.163.231.79) (Remote host closed the connection)
[13:22:55] *** Joins: jpn (~jpn@user/jpn)
[13:23:02] *** Quits: schumaml (~schumaml@dslb-178-007-195-002.178.007.pools.vodafone-ip.de) (Ping timeout: 250 seconds)
[13:23:25] <mav`rik> Exa: You might need something like `>=1.0.0, !=1.2.*, !=1.3.0, !=1.3.1` along with some commentary as to why (and further exclusions in the 1.3.x case if there were betas etc. released)
[13:23:45] *** Joins: zer0bitz (~zer0bitz@dsl-hkibng32-54fbf8-224.dhcp.inet.fi)
[13:23:48] *** Quits: Xano_ (~Xano@2a00:23c4:4204:700:ce9a:cd5b:a90f:1812) (Ping timeout: 252 seconds)
[13:23:56] *** Joins: jcsteele (~j@user/jcsteele)
[13:24:19] *** Quits: jcsteele (~j@user/jcsteele) (Client Quit)
[13:24:54] *** Joins: schumaml (~schumaml@dslb-092-074-000-113.092.074.pools.vodafone-ip.de)
[13:25:23] *** Quits: causa_sui (~causasui@c-68-60-125-136.hsd1.mi.comcast.net) (Ping timeout: 256 seconds)
[13:25:32] *** Joins: jcsteele (~j@user/jcsteele)
[13:25:58] *** Quits: jcsteele (~j@user/jcsteele) (Client Quit)
[13:26:18] *** climax is now known as gentooclimax
[13:26:59] *** Joins: causa_sui (~causasui@c-68-60-125-136.hsd1.mi.comcast.net)
[13:27:13] *** Joins: jcsteele (~j@user/jcsteele)
[13:27:40] *** Quits: jcsteele (~j@user/jcsteele) (Client Quit)
[13:28:25] <Exa> mav`rik: thanks I didn't think about that
[13:28:51] *** Joins: jcsteele (~j@user/jcsteele)
[13:29:18] *** Quits: jcsteele (~j@user/jcsteele) (Client Quit)
[13:29:57] *** Quits: elastic_dog (~elastic_d@2a01:118f:822:9c00:f583:aa51:9ad4:d4fb) (Ping timeout: 240 seconds)
[13:30:34] *** Joins: jcsteele (~j@user/jcsteele)
[13:30:49] *** Quits: roxfan (~roxfan@2a02:a03f:a2be:4f00:51a:35a2:9d4e:fbfc) (Ping timeout: 256 seconds)
[13:30:59] *** Quits: jcsteele (~j@user/jcsteele) (Client Quit)
[13:31:37] *** Quits: causa_sui (~causasui@c-68-60-125-136.hsd1.mi.comcast.net) (Ping timeout: 256 seconds)
[13:31:50] <gevreeen> does #python-gssapi has the blessing of this channel?
[13:32:20] *** Joins: jcsteele (~j@user/jcsteele)
[13:32:50] *** Quits: jcsteele (~j@user/jcsteele) (Client Quit)
[13:33:17] <gevreeen> (does this imply a future version of python is going to ship gssapi?)
[13:33:54] <Yhg1s> gevreeen: I'm not sure what you mean by 'the blessing of this channel', but no, it doesn't mean anything what so ever about the future of either Python or gssapi.
[13:34:06] *** Joins: jcsteele (~j@user/jcsteele)
[13:34:28] *** Quits: jcsteele (~j@user/jcsteele) (Client Quit)
[13:34:38] *** Joins: rsx (~dummy@ppp-188-174-142-212.dynamic.mnet-online.de)
[13:34:40] *** Quits: maggotbrain (~maggotbra@c-73-225-163-217.hsd1.wa.comcast.net) (Ping timeout: 272 seconds)
[13:34:43] <gevreeen> so how did get they get a channel under the python namespace, Yhg1s?
[13:35:05] *** Quits: cerill (~cerill@h-155-4-198-153.A785.priv.bahnhof.se) (Quit: Client closed)
[13:35:07] *** Joins: nuclearg1 (~nucleargr@user/nuclearg1)
[13:35:41] *** Joins: jcsteele (~j@user/jcsteele)
[13:35:51] <Yhg1s> gevreeen: that isn't a "blessing of this channel", it's up to the #python namespace Group Contacts. (that's how it works on this IRC server.) It doesn't imply a particularly tight relationship between Python and whatever the channel is about.
[13:36:08] *** Quits: jcsteele (~j@user/jcsteele) (Client Quit)
[13:36:22] *** Joins: PJBoy (~PJBoy@user/pjboy)
[13:36:26] <gevreeen> ah, all right
[13:36:44] *** Joins: darksun (~darksun@user/darksun)
[13:37:23] *** Joins: jcsteele (~j@user/jcsteele)
[13:37:58] *** Quits: mon_aaraj (~MonAaraj@user/mon-aaraj/x-4416475) (Ping timeout: 260 seconds)
[13:38:05] *** Joins: TheCat (~TheCat@user/z-cat)
[13:39:23] *** Quits: src (~src@user/src) (Quit: leaving)
[13:39:37] *** Quits: nuclearg1 (~nucleargr@user/nuclearg1) (Ping timeout: 240 seconds)
[13:39:49] *** Quits: jcsteele (~j@user/jcsteele) (Client Quit)
[13:40:00] *** Joins: mon_aaraj (~MonAaraj@user/mon-aaraj/x-4416475)
[13:40:05] *** Joins: flea (nosoul@gateway/vpn/protonvpn/nosoul)
[13:40:34] *** Quits: diogenese (~diogenese@diogenese.velotech.net) (Quit: Has anybody seen the bridge?)
[13:40:57] *** Joins: diogenese (~diogenese@diogenese.velotech.net)
[13:40:57] *** Quits: tgamblin (~tgamblin@2607:fea8:c2a0:8640::10d4) (Ping timeout: 240 seconds)
[13:41:04] *** Joins: jcsteele (~j@user/jcsteele)
[13:41:29] *** Quits: jcsteele (~j@user/jcsteele) (Client Quit)
[13:41:54] *** Joins: tgamblin (~tgamblin@cpe64777de11593-cm64777de11590.cpe.net.cable.rogers.com)
[13:42:23] *** Quits: jpn (~jpn@user/jpn) (Ping timeout: 256 seconds)
[13:42:37] *** Joins: esther (~esther@24-155-112-236.dyn.grandenetworks.net)
[13:42:44] *** Joins: jcsteele (~j@user/jcsteele)
[13:43:08] *** Quits: jcsteele (~j@user/jcsteele) (Client Quit)
[13:43:08] *** Quits: rindolf (~shlomif@inkscape/dev/shlomif) (Read error: Connection reset by peer)
[13:44:07] *** Joins: neibo (~neibo@2a0c:5a80:1011:800:25a0:7f9b:32ea:b2a6)
[13:44:29] *** Joins: jcsteele (~j@user/jcsteele)
[13:44:31] *** Joins: SGautam (uid286066@id-286066.ilkley.irccloud.com)
[13:44:50] *** Quits: jcsteele (~j@user/jcsteele) (Client Quit)
[13:46:38] *** Joins: jcsteele (~j@user/jcsteele)
[13:47:01] *** Quits: jcsteele (~j@user/jcsteele) (Client Quit)
[13:47:23] <mav`rik> Exa: is there a reason not to specifically require a more recent version (what is it about the ancient versions that is _useful_ for you to continue supporting)?
[13:48:17] *** Joins: jcsteele (~j@user/jcsteele)
[13:48:37] *** Quits: jcsteele (~j@user/jcsteele) (Client Quit)
[13:48:57] <graingert[m]> is there a better citation for https://twitter.com/raymondh/status/1252759650224619521 eg one on docs.python.org ?
[13:49:56] *** Joins: jcsteele (~j@user/jcsteele)
[13:50:16] *** Quits: jcsteele (~j@user/jcsteele) (Client Quit)
[13:50:53] <graingert[m]> I'm using it as justification for https://github.com/tornadoweb/tornado/pull/3125/files#diff-27650647d2e04524f249cb3b4a0deda8b6efee3836cde44d71d4468eca9686f7R112
[13:51:33] *** Joins: jcsteele (~j@user/jcsteele)
[13:51:34] *** Joins: LucaTM (~LucaTM@user/lucatm)
[13:51:41] *** Quits: programmar (~whatever@118.69.128.37) (Quit: Leaving)
[13:51:53] *** Joins: jpn (~jpn@user/jpn)
[13:51:55] *** Quits: jcsteele (~j@user/jcsteele) (Client Quit)
[13:53:11] *** Joins: jcsteele (~j@user/jcsteele)
[13:53:15] *** Joins: causa_sui (~causasui@c-68-60-125-136.hsd1.mi.comcast.net)
[13:53:25] *** Joins: EvilDMP (~textual@django/moderator/EvilDMP)
[13:53:34] *** Quits: jcsteele (~j@user/jcsteele) (Client Quit)
[13:54:29] *** Quits: EvilDMP (~textual@django/moderator/EvilDMP) (Client Quit)
[13:54:52] *** Joins: jcsteele (~j@user/jcsteele)
[13:55:18] *** Quits: jcsteele (~j@user/jcsteele) (Client Quit)
[13:55:50] *** Joins: EvilDMP (~textual@django/moderator/EvilDMP)
[13:56:03] *** Joins: c4017w_ (~c4017@209.52.68.8)
[13:56:15] *** Joins: rindolf (~shlomif@inkscape/dev/shlomif)
[13:57:02] *** Joins: jcsteele (~j@user/jcsteele)
[13:57:06] *** Quits: TonyStone (~TonyStone@cpe-74-76-51-197.nycap.res.rr.com) (Ping timeout: 260 seconds)
[13:57:48] *** Quits: Ranhir (~Ranhir@157.97.53.139) (Ping timeout: 240 seconds)
[13:57:52] *** Quits: jcsteele (~j@user/jcsteele) (Client Quit)
[13:58:41] *** Joins: Xano_ (~Xano@2a00:23c4:4204:700:f0e3:78ba:21a7:141d)
[13:59:16] *** Joins: blurry3 (xbaranov@lounge.fi.muni.cz)
[13:59:26] *** Quits: c4017w__ (~c4017@209.52.68.8) (Ping timeout: 250 seconds)
[14:00:16] *** Joins: jcsteele (~j@user/jcsteele)
[14:01:00] *** Quits: AquaL1te (~AquaL1te@user/aqual1te) (Ping timeout: 240 seconds)
[14:01:05] *** Quits: jpn (~jpn@user/jpn) (Ping timeout: 256 seconds)
[14:01:18] *** Quits: blurry (xbaranov@lounge.fi.muni.cz) (Ping timeout: 260 seconds)
[14:01:18] *** blurry3 is now known as blurry
[14:01:33] *** Quits: jcsteele (~j@user/jcsteele) (Client Quit)
[14:02:47] *** Joins: jcsteele (~j@user/jcsteele)
[14:02:50] *** Quits: Xano (~Xano@2a00:23c4:4204:700:a5a7:beb6:ad5a:ddae) (Ping timeout: 252 seconds)
[14:03:08] *** Quits: jcsteele (~j@user/jcsteele) (Client Quit)
[14:03:20] *** Joins: b10n1k (~iob@dynamic-2a00-1028-8390-9e8a-0000-0000-0000-92cb.ipv6.o2.cz)
[14:04:29] *** Joins: jcsteele (~j@user/jcsteele)
[14:04:51] *** Quits: jcsteele (~j@user/jcsteele) (Client Quit)
[14:05:02] *** Joins: maggotbrain (~maggotbra@c-73-225-163-217.hsd1.wa.comcast.net)
[14:06:08] *** Joins: jcsteele (~j@user/jcsteele)
[14:06:12] *** Quits: iob (~iob@90-182-197-112.rcp.o2.cz) (Ping timeout: 240 seconds)
[14:06:30] *** Quits: jcsteele (~j@user/jcsteele) (Client Quit)
[14:07:06] *** Joins: pulsar12 (~quassel@a79-169-140-39.cpe.netcabo.pt)
[14:07:45] *** Joins: jcsteele (~j@user/jcsteele)
[14:07:56] *** Joins: jpn (~jpn@user/jpn)
[14:08:06] *** Quits: kaiseisei (~Thunderbi@user/kaiseisei) (Ping timeout: 250 seconds)
[14:08:08] *** Quits: jcsteele (~j@user/jcsteele) (Client Quit)
[14:08:32] *** Quits: wyclif (~wyclif@user/wyclif) (Ping timeout: 240 seconds)
[14:08:37] *** Quits: causa_sui (~causasui@c-68-60-125-136.hsd1.mi.comcast.net) (Ping timeout: 240 seconds)
[14:08:43] *** Joins: xensie (~xensie@91-153-204-92.elisa-laajakaista.fi)
[14:09:12] *** Quits: SallyAhaj (~SallyAhaj@user/sallyahaj) (Read error: Connection reset by peer)
[14:09:23] *** Joins: jcsteele (~j@user/jcsteele)
[14:09:48] *** Quits: jcsteele (~j@user/jcsteele) (Client Quit)
[14:10:12] *** Joins: dreamon (~dreamon@ppp-88-217-83-128.dynamic.mnet-online.de)
[14:10:22] *** Joins: TonyStone (~TonyStone@2603-7080-8607-c36a-a161-049d-edaf-1b31.res6.spectrum.com)
[14:11:01] *** Joins: jcsteele (~j@user/jcsteele)
[14:11:01] *** Quits: revolve (~u0_a227@cpc100838-bagu15-2-0-cust672.1-3.cable.virginm.net) (Read error: Connection reset by peer)
[14:11:03] *** Quits: zen_coder (~zen_coder@2a02:8109:a280:2d8d:6457:bfc9:b18d:cf5) (Ping timeout: 256 seconds)
[14:11:33] *** Joins: Blankspace (~Blankspac@user/blankspace)
[14:12:17] *** Quits: jcsteele (~j@user/jcsteele) (Client Quit)
[14:13:35] *** Joins: jcsteele (~j@user/jcsteele)
[14:13:35] *** Joins: Blankspace58 (~Blankspac@user/blankspace)
[14:13:38] *** gentooclimax is now known as climax
[14:14:21] *** Quits: jcsteele (~j@user/jcsteele) (Client Quit)
[14:15:34] *** Joins: jcsteele (~j@user/jcsteele)
[14:15:52] *** Joins: revolve (~u0_a227@cpc100838-bagu15-2-0-cust672.1-3.cable.virginm.net)
[14:16:01] *** Quits: jcsteele (~j@user/jcsteele) (Client Quit)
[14:16:09] *** Quits: tuskkk____ (uid18470@id-18470.tinside.irccloud.com) (Quit: Connection closed for inactivity)
[14:16:25] *** Joins: ano (~ano@user/ano)
[14:16:33] *** Quits: ano (~ano@user/ano) (Client Quit)
[14:16:57] *** Quits: Blankspace (~Blankspac@user/blankspace) (Ping timeout: 256 seconds)
[14:17:20] *** Joins: jcsteele (~j@user/jcsteele)
[14:17:40] *** Quits: jcsteele (~j@user/jcsteele) (Client Quit)
[14:17:52] *** Joins: p-i-_ (~Ohmu@2403:6200:8978:9086:d6f:655c:b421:bc62)
[14:18:13] *** Joins: ano (~ano@user/ano)
[14:18:46] *** Quits: Sylhouette (~johan@87.233.185.201) (Remote host closed the connection)
[14:18:49] *** Joins: dclxvi (~dclxvi@2a02:8084:84:4100:5cca:aa73:a158:2834)
[14:18:59] *** Joins: jcsteele (~j@user/jcsteele)
[14:19:17] *** Quits: p-i- (~Ohmu@2403:6200:8978:9086:d456:def0:f1eb:7e7c) (Ping timeout: 240 seconds)
[14:19:19] *** Quits: jcsteele (~j@user/jcsteele) (Client Quit)
[14:20:33] *** Joins: jcsteele (~j@user/jcsteele)
[14:20:56] *** Quits: jcsteele (~j@user/jcsteele) (Client Quit)
[14:22:10] *** Joins: jcsteele (~j@user/jcsteele)
[14:22:36] *** Quits: jcsteele (~j@user/jcsteele) (Client Quit)
[14:22:44] *** Joins: ice9 (~ice9@user/ice9)
[14:23:59] *** Joins: wyclif (~wyclif@user/wyclif)
[14:24:16] *** Quits: marduk (~marduk@99-122-3-133.lightspeed.nsvltn.sbcglobal.net) (Quit: The Lounge - https://thelounge.chat)
[14:25:13] *** Joins: jcsteele (~j@user/jcsteele)
[14:25:56] *** Quits: jcsteele (~j@user/jcsteele) (Client Quit)
[14:27:10] *** Joins: jcsteele (~j@user/jcsteele)
[14:27:25] *** Joins: Midjak (~Midjak@82.66.147.146)
[14:27:39] *** Quits: jcsteele (~j@user/jcsteele) (Client Quit)
[14:27:55] *** Joins: nuclearg1 (~nucleargr@user/nuclearg1)
[14:28:08] *** Joins: marduk (~marduk@99-122-3-133.lightspeed.nsvltn.sbcglobal.net)
[14:28:51] *** Quits: Enitin (~Enitin@82.102.22.86) (Ping timeout: 256 seconds)
[14:28:56] *** Joins: jcsteele (~j@user/jcsteele)
[14:29:17] *** Quits: jcsteele (~j@user/jcsteele) (Client Quit)
[14:29:18] *** Quits: TheCat (~TheCat@user/z-cat) (Remote host closed the connection)
[14:29:20] *** Quits: Blankspace58 (~Blankspac@user/blankspace) (Quit: Client closed)
[14:29:43] *** Joins: TheCat (~TheCat@user/z-cat)
[14:30:18] *** Joins: pynthon (~pynthon@156.114.160.41)
[14:30:28] *** Joins: jcsteele (~j@user/jcsteele)
[14:30:40] *** Joins: Csm319_ (~csm3105@143.red-83-48-84.staticip.rima-tde.net)
[14:30:55] *** Quits: jcsteele (~j@user/jcsteele) (Client Quit)
[14:31:41] *** Quits: death916 (~death916@c-73-220-87-102.hsd1.ca.comcast.net) (Ping timeout: 256 seconds)
[14:31:48] *** Joins: gitesh (uid423739@id-423739.ilkley.irccloud.com)
[14:32:14] *** Joins: jcsteele (~j@user/jcsteele)
[14:32:22] *** Quits: nuclearg1 (~nucleargr@user/nuclearg1) (Ping timeout: 250 seconds)
[14:32:33] *** Quits: TheCat (~TheCat@user/z-cat) (Read error: Connection reset by peer)
[14:32:35] *** Quits: jcsteele (~j@user/jcsteele) (Client Quit)
[14:33:22] <mav`rik> graingert[m]: I guess you could _prove_ it, by using `dis` to show the list-creation-from-items isn't a single VM instruction (ergo, not atomic)
[14:33:27] *** Joins: TheCat (~TheCat@user/z-cat)
[14:33:39] *** Quits: vantage (~vantage@ip-193-121-152-141.dsl.scarlet.be) (Ping timeout: 252 seconds)
[14:33:43] *** Quits: csm3105 (~csm3105@143.red-83-48-84.staticip.rima-tde.net) (Ping timeout: 256 seconds)
[14:33:50] *** Joins: jcsteele (~j@user/jcsteele)
[14:34:02] *** Quits: wyclif (~wyclif@user/wyclif) (Ping timeout: 240 seconds)
[14:34:14] *** Quits: jcsteele (~j@user/jcsteele) (Client Quit)
[14:35:06] <pynthon> Is there an optimal way to show an example in a sphinx docstring? In numpy docstrings you sometimes see a '"Example
[14:35:12] <gitesh> Any help with pipenv?
[14:35:26] <pynthon> -------" section but IIRC that there was an :example option in sphinx as well?\
[14:35:31] *** Joins: jcsteele (~j@user/jcsteele)
[14:35:32] *** Quits: arooni (~arooni@li1062-244.members.linode.com) (Ping timeout: 240 seconds)
[14:35:53] *** Quits: jcsteele (~j@user/jcsteele) (Client Quit)
[14:36:42] *** Quits: Csm319_ (~csm3105@143.red-83-48-84.staticip.rima-tde.net) (Ping timeout: 250 seconds)
[14:36:54] *** Joins: audiobirb (~audio@user/audio)
[14:37:09] *** Joins: jcsteele (~j@user/jcsteele)
[14:37:30] *** Quits: jcsteele (~j@user/jcsteele) (Client Quit)
[14:37:39] <graingert[m]> mav`rik: but it is one VM instruction:... (full message at https://libera.ems.host/_matrix/media/r0/download/libera.chat/daa7fd0cf60ba8743a05a90bf8dbcec6510fdd2f)
[14:37:54] *** Joins: arooni (~arooni@li1062-244.members.linode.com)
[14:37:57] <graingert[m]> `dis.dis(list)` doesn't dis
[14:37:58] *** Joins: wyclif (~wyclif@user/wyclif)
[14:38:43] <nedbat> pynthon: you don't need to use the ugly :param foo:  syntax any more.
[14:40:54] *** Joins: merrinx (~merrinx@ti0028a400-3686.bb.online.no)
[14:41:03] *** Joins: fartyfoam (~fartyfoam@178-118-118-2.access.telenet.be)
[14:41:07] <pynthon> nedbat: Not? What do you suggest?
[14:41:12] <mav`rik> graingert[m]: Yeah, I tried the same experiment. I don't know what to say. Maybe it's worth asking Mr. Hettinger?
[14:41:28] <nedbat> pynthon: I think "Example\n-----------" looks good
[14:42:43] <pynthon> nedbat: And that is supported by sphinx?
[14:42:45] *** Joins: fef (~thedawn@user/thedawn)
[14:42:58] *** Joins: jcsteele (~j@user/jcsteele)
[14:43:10] <nedbat> pynthon: yes, enable this extension: https://www.sphinx-doc.org/en/master/usage/extensions/napoleon.html
[14:43:17] *** Quits: jcsteele (~j@user/jcsteele) (Client Quit)
[14:44:22] *** Joins: nuclearg1 (~nucleargr@user/nuclearg1)
[14:44:32] *** Joins: jcsteele (~j@user/jcsteele)
[14:44:36] *** Quits: jeho (~jehoshaph@user/jehoshaphat) (Ping timeout: 240 seconds)
[14:44:36] *** Quits: Xano_ (~Xano@2a00:23c4:4204:700:f0e3:78ba:21a7:141d) (Ping timeout: 240 seconds)
[14:44:56] *** Quits: jcsteele (~j@user/jcsteele) (Client Quit)
[14:45:45] *** Joins: blindguard (~blindguar@2a02:908:1864:c200::ef3c)
[14:45:50] *** Quits: blindguard (~blindguar@2a02:908:1864:c200::ef3c) (Client Quit)
[14:46:09] *** Joins: jcsteele (~j@user/jcsteele)
[14:46:14] *** Quits: pynthon (~pynthon@156.114.160.41) (Quit: Client closed)
[14:46:21] <mav`rik> graingert[m]: Could Mr Hettinger have been considering Python versions other than CPython (and thus have some idea of "things which are supposed to be atomic by-design")?
[14:46:37] *** Quits: jcsteele (~j@user/jcsteele) (Client Quit)
[14:46:42] <graingert[m]> I'm pretty use list(d) is not atomic
[14:46:45] *** Quits: revolve (~u0_a227@cpc100838-bagu15-2-0-cust672.1-3.cable.virginm.net) (Ping timeout: 256 seconds)
[14:46:47] <graingert[m]> s/use/sure/
[14:46:59] <graingert[m]>  * I'm pretty sure list(d) is not atomic anywhere
[14:47:09] *** Quits: paul424 (~tom@ip-5-172-236-119.multi.internet.cyfrowypolsat.pl) (Quit: Leaving)
[14:47:20] *** Joins: bitkiller (~bitkiller@user/bitkiller)
[14:47:36] *** Joins: wakeup (~wakeup@user/wakeup)
[14:47:47] <wakeup> Is there an irc channel about web development?
[14:48:08] <mav`rik> graingert[m]: My thoughts around this in general were thatthe gaps between individual VM instructions were the point at which threading could switch, but maybe I'm mistaken?
[14:48:12] *** Joins: Enitin (~Enitin@82.180.145.226)
[14:48:31] *** Joins: revolve (~u0_a227@82-132-239-147.dab.02.net)
[14:48:32] *** Joins: fedenix (~fedenix@gateway/tor-sasl/fedenix)
[14:49:01] *** Joins: jcsteele (~j@user/jcsteele)
[14:49:03] *** Quits: freeworld (~freeworld@chello085216193138.chello.sk) (Ping timeout: 252 seconds)
[14:49:06] *** Joins: TheCat_ (~TheCat@user/z-cat)
[14:49:10] *** Quits: TheCat (~TheCat@user/z-cat) (Read error: Connection reset by peer)
[14:49:22] <mav`rik> graingert[m]: I guess it makes sense though that list(x) would expand to something more involved behind the scenes
[14:49:32] *** Quits: jcsteele (~j@user/jcsteele) (Client Quit)
[14:49:32] *** Quits: nuclearg1 (~nucleargr@user/nuclearg1) (Ping timeout: 240 seconds)
[14:50:02] *** Quits: jpn (~jpn@user/jpn) (Ping timeout: 240 seconds)
[14:50:43] *** Joins: jcsteele (~j@user/jcsteele)
[14:50:50] *** Joins: elastic_dog (~elastic_d@2a01:118f:822:9c00:f583:aa51:9ad4:d4fb)
[14:51:04] *** Joins: ubert1 (~Thunderbi@2a02:8109:9880:303c:8bc2:7df6:5938:d836)
[14:51:10] *** Quits: jcsteele (~j@user/jcsteele) (Client Quit)
[14:51:13] <fakenullie> I think GIL is more granular than individual vm instruction
[14:51:26] *** Quits: lbalhar (~lbalhar@spsei.osanet.cz) (Ping timeout: 250 seconds)
[14:51:26] *** Quits: cliluw (~cliluw@47.147.77.43) (Ping timeout: 250 seconds)
[14:51:55] <gitesh> `/home/username/Desktop/news` <-- this is my working directory, I'm doing `pipenv install django~=3.1.0` in this directory  but nothing is happening, like it's not creating pipfile.lock or pipfile
[14:52:06] *** Joins: cliluw (~cliluw@47.147.77.43)
[14:52:22] *** Joins: jcsteele (~j@user/jcsteele)
[14:52:50] *** Quits: jcsteele (~j@user/jcsteele) (Client Quit)
[14:52:54] *** Quits: lesault (~lesault@user/lesault) (Ping timeout: 252 seconds)
[14:53:02] <mav`rik> graingert[m]: In your PR, would it also be wise to lock around the if/del, or use IOLoop._ioloop_for_asyncio.pop(loop, None) instead of del just in case something else is also running the initialise code in another thread?
[14:53:15] *** Joins: jpn (~jpn@user/jpn)
[14:53:28] *** Joins: lesault (~lesault@user/lesault)
[14:53:36] *** Joins: SallyAhaj (~SallyAhaj@user/sallyahaj)
[14:54:04] *** Joins: jcsteele (~j@user/jcsteele)
[14:54:21] *** Quits: schumaml (~schumaml@dslb-092-074-000-113.092.074.pools.vodafone-ip.de) (Ping timeout: 256 seconds)
[14:54:30] *** Quits: jcsteele (~j@user/jcsteele) (Client Quit)
[14:55:13] *** Joins: shailangsa (~shailangs@host165-120-169-51.range165-120.btcentralplus.com)
[14:55:20] *** Joins: nightw0lf (~nightw0lf@77.125.126.151)
[14:56:09] *** Joins: schumaml (~schumaml@dslb-178-007-194-236.178.007.pools.vodafone-ip.de)
[14:56:41] *** Quits: ghost43 (~ghost43@gateway/tor-sasl/ghost43) (Remote host closed the connection)
[14:56:44] *** Joins: c4017w__ (~c4017@209.52.68.8)
[14:56:56] *** Joins: ghost43 (~ghost43@gateway/tor-sasl/ghost43)
[14:57:20] *** Joins: jcsteele (~j@user/jcsteele)
[14:57:45] *** Quits: jcsteele (~j@user/jcsteele) (Client Quit)
[14:58:06] *** Joins: Xano (~Xano@host86-157-207-90.range86-157.btcentralplus.com)
[14:58:38] *** Joins: nemexis (~nemexis@193-62-201-31.ftth.glasoperator.nl)
[14:58:41] *** Joins: causa_sui (~causasui@c-68-60-125-136.hsd1.mi.comcast.net)
[14:59:03] *** Joins: jcsteele (~j@user/jcsteele)
[14:59:24] *** Quits: nightw0lf (~nightw0lf@77.125.126.151) (Client Quit)
[14:59:32] *** Joins: cK (~cK@77.125.126.151)
[14:59:38] *** Joins: PaterTemporalis (~woooopsie@bl21-200-69.dsl.telepac.pt)
[14:59:49] *** Quits: c4017w_ (~c4017@209.52.68.8) (Ping timeout: 240 seconds)
[15:00:10] *** Quits: jcsteele (~j@user/jcsteele) (Client Quit)
[15:00:20] *** Quits: cK (~cK@77.125.126.151) (Remote host closed the connection)
[15:00:23] *** Quits: TheCat_ (~TheCat@user/z-cat) (Remote host closed the connection)
[15:00:24] *** Quits: raym (~raym@user/raym) (Quit: rebooting...)
[15:00:35] *** Joins: flower_ (~archie@217-123-218-6.cable.dynamic.v4.ziggo.nl)
[15:00:37] *** Joins: TheCat_ (~TheCat@user/z-cat)
[15:01:43] *** Quits: merijn (~merijn@c-001-001-001.client.esciencecenter.eduvpn.nl) (Ping timeout: 256 seconds)
[15:01:54] *** Joins: merijn (~merijn@c-001-001-001.client.esciencecenter.eduvpn.nl)
[15:02:04] *** Joins: jcsteele (~j@user/jcsteele)
[15:02:25] *** Quits: jcsteele (~j@user/jcsteele) (Client Quit)
[15:02:28] *** Joins: osXnut (~osXnut@77.125.126.151)
[15:02:44] *** Quits: Xano (~Xano@host86-157-207-90.range86-157.btcentralplus.com) (Read error: No route to host)
[15:02:47] *** Joins: Xano_ (~Xano@2a00:23c4:4204:700:59ec:3f01:44e2:383a)
[15:03:08] *** Joins: wedwards (~wedwards@46.44.154.209)
[15:03:19] <gitesh> it worked
[15:03:44] *** Joins: jcsteele (~j@user/jcsteele)
[15:03:48] *** Quits: causa_sui (~causasui@c-68-60-125-136.hsd1.mi.comcast.net) (Ping timeout: 240 seconds)
[15:04:04] *** Quits: jcsteele (~j@user/jcsteele) (Client Quit)
[15:04:11] *** Joins: nuclearg1 (~nucleargr@user/nuclearg1)
[15:04:31] *** Quits: osXnut (~osXnut@77.125.126.151) (Remote host closed the connection)
[15:04:48] *** Joins: osXnut (~osXnut@77.125.126.151)
[15:05:24] *** Joins: jcsteele (~j@user/jcsteele)
[15:05:40] *** Quits: jcsteele (~j@user/jcsteele) (Client Quit)
[15:05:53] *** Joins: matsaman (~matsaman@user/matsaman)
[15:06:25] *** Joins: FFY00 (~FFY00@archlinux/trusteduser/ffy00)
[15:06:56] *** Joins: jcsteele (~j@user/jcsteele)
[15:07:25] *** Quits: jcsteele (~j@user/jcsteele) (Client Quit)
[15:07:28] *** Quits: FFY00_ (~FFY00@archlinux/trusteduser/ffy00) (Ping timeout: 250 seconds)
[15:08:05] *** Joins: cb5r[m] (~cb5rmatri@2001:470:69fc:105::1:dd2b)
[15:08:36] *** Quits: nuclearg1 (~nucleargr@user/nuclearg1) (Ping timeout: 240 seconds)
[15:08:40] *** Joins: jcsteele (~j@user/jcsteele)
[15:09:12] *** Quits: flower_ (~archie@217-123-218-6.cable.dynamic.v4.ziggo.nl) (Quit: leaving)
[15:09:13] *** Quits: jcsteele (~j@user/jcsteele) (Client Quit)
[15:09:23] *** Quits: TheCat_ (~TheCat@user/z-cat) (Ping timeout: 250 seconds)
[15:10:44] *** Joins: jcsteele (~j@user/jcsteele)
[15:11:20] *** Quits: jcsteele (~j@user/jcsteele) (Client Quit)
[15:11:45] *** Joins: Charlie_Bravo (~Charlie.B@221.149.170.18)
[15:11:48] *** Quits: merijn (~merijn@c-001-001-001.client.esciencecenter.eduvpn.nl) (Ping timeout: 240 seconds)
[15:12:56] *** Joins: flower_ (~archie@217-123-218-6.cable.dynamic.v4.ziggo.nl)
[15:13:23] <amogorkon> why don't numpy ufuncs have a qualname?
[15:13:39] *** Joins: jcsteele (~j@user/jcsteele)
[15:13:48] *** Joins: merijn (~merijn@c-001-001-001.client.esciencecenter.eduvpn.nl)
[15:14:07] *** Quits: jcsteele (~j@user/jcsteele) (Client Quit)
[15:15:11] *** Joins: et (~et@user/et)
[15:15:12] *** osXnut is now known as osXnuts
[15:15:24] *** Joins: jcsteele (~j@user/jcsteele)
[15:15:27] *** Quits: schumaml (~schumaml@dslb-178-007-194-236.178.007.pools.vodafone-ip.de) (Ping timeout: 252 seconds)
[15:15:48] *** Quits: jcsteele (~j@user/jcsteele) (Client Quit)
[15:15:54] *** Joins: Klinda (~superleag@user/klinda)
[15:16:03] *** osXnuts is now known as osXnut
[15:16:07] <bjs> fakenullie: well it's neither direction, because a single bytecode instruction might take and release the GIL multiple times, as it calls back to Python for example
[15:16:13] *** Joins: goppo (~goppo@user/goppo)
[15:16:15] *** Quits: dreamon (~dreamon@ppp-88-217-83-128.dynamic.mnet-online.de) (Quit: Leaving)
[15:16:27] *** Quits: osXnut (~osXnut@77.125.126.151) (Quit: leaving)
[15:17:10] *** Joins: jcsteele (~j@user/jcsteele)
[15:17:23] *** Joins: schumaml (~schumaml@dslb-188-104-173-069.188.104.pools.vodafone-ip.de)
[15:17:33] *** Quits: jcsteele (~j@user/jcsteele) (Client Quit)
[15:18:30] *** Quits: et (~et@user/et) (Read error: Connection reset by peer)
[15:18:34] *** Joins: et_ (~et@user/et)
[15:18:57] *** Quits: flower_ (~archie@217-123-218-6.cable.dynamic.v4.ziggo.nl) (Quit: Changing server)
[15:20:24] <bjs> graingert[m]: iirc the last time we looked at the docs there was no comment about the safety of copy() even in the FAQs about the GIL
[15:20:43] *** Joins: raym (~raym@user/raym)
[15:21:11] *** Joins: nuclearg1 (~nucleargr@user/nuclearg1)
[15:21:27] *** et_ is now known as et
[15:21:31] *** Quits: mud (~mud@user/kadoban) (Ping timeout: 250 seconds)
[15:21:54] *** Joins: bahamas (~lucian@84.232.140.158)
[15:21:58] <bjs> graingert[m]: Didn't you attempt to get the FAQs updated?  I'm still unclear why it says dict.keys() is atomic  (or what that even means!?)
[15:22:59] *** Joins: AquaL1te (~AquaL1te@user/aqual1te)
[15:23:58] *** cb5r[m] is now known as cb5r
[15:24:17] *** Joins: jcsteele (~j@user/jcsteele)
[15:24:52] *** Joins: causa_sui (~causasui@c-68-60-125-136.hsd1.mi.comcast.net)
[15:24:55] <fakenullie> bjs: yeah, that's what I was thinking
[15:25:08] *** Quits: cb5r (~cb5rmatri@2001:470:69fc:105::1:dd2b) (Quit: Reconnecting)
[15:25:12] *** Joins: Pi-sistance (~Pi-sistan@cpc94040-newt37-2-0-cust284.19-3.cable.virginm.net)
[15:25:22] *** Joins: cb5r (~cb5r@user/cb5r)
[15:25:24] <gitesh> when I am doing <form method="post"></form> where things are going of the form fields?
[15:25:29] *** Quits: jcsteele (~j@user/jcsteele) (Client Quit)
[15:25:32] *** Quits: et (~et@user/et) (Ping timeout: 240 seconds)
[15:25:42] <gitesh> I can understang GET request
[15:25:46] <fakenullie> gitesh: to the request body
[15:25:51] <gitesh> but how to understand POST
[15:26:08] <gitesh> fakenullie: so GET request don't have body?
[15:26:14] <fakenullie> gitesh: usually they don't
[15:26:17] *** Quits: Enitin (~Enitin@82.180.145.226) (Ping timeout: 240 seconds)
[15:26:18] *** Joins: marenz (~marenz@dynamic-078-055-179-150.78.55.pool.telefonica.de)
[15:26:20] <gitesh> fakenullie: and where does things of body go?
[15:26:26] *** Quits: nuclearg1 (~nucleargr@user/nuclearg1) (Ping timeout: 268 seconds)
[15:26:42] <fakenullie> gitesh: depends on framework you use
[15:26:43] <gitesh> fakenullie: I wonder how it is updating model in django
[15:26:48] <gitesh> fakenullie: ok
[15:26:59] <gitesh> it's quite automatic in django
[15:27:04] <bjs> fakenullie: in this case list(some_other_list) is essentially a loop that does iteration and another thread could concurrently mess with the list while it's doing it.  But list.copy() is atomic, it copies the whole list over to a new list without any chance of another thread shoving its way inbetween
[15:27:29] *** Quits: revolve (~u0_a227@82-132-239-147.dab.02.net) (Read error: Connection reset by peer)
[15:27:32] <bjs> fakenullie: iirc at least,  graingert[m] spent quite a while hitting asyncio with a hammer trying to fix some concurrency bug(s) there over this kind of thing
[15:28:40] *** Joins: freeworld (~freeworld@chello085216193138.chello.sk)
[15:28:44] *** Joins: roxfan (~roxfan@2a02:a03f:a2be:4f00:51a:35a2:9d4e:fbfc)
[15:28:51] *** Quits: AquaL1te (~AquaL1te@user/aqual1te) (Remote host closed the connection)
[15:29:11] *** Quits: wakeup (~wakeup@user/wakeup) (Quit: Client closed)
[15:29:14] *** Joins: Ranhir (~Ranhir@157.97.53.139)
[15:30:10] *** Joins: Enitin (~Enitin@82.180.145.228)
[15:30:18] *** Parts: bpalmer (~user@user/bpalmer) (ERC (IRC client for Emacs 27.2))
[15:31:08] *** Joins: mud (~mud@user/kadoban)
[15:31:31] <graingert[m]> it's actually a dict
[15:31:50] <graingert[m]> I think list(list()) is special cased?
[15:31:55] <graingert[m]> * special cased to be a copy?
[15:31:59] *** Joins: bloody (~bloody@user/bloody)
[15:32:29] *** Joins: jcsteele (~j@user/jcsteele)
[15:32:29] <bjs> sorry yeah i got muddled up
[15:33:31] <bjs> graingert[m]: list(some_list) is special-cased yeah (as is some_list.extend(another_list))
[15:33:36] *** Quits: causa_sui (~causasui@c-68-60-125-136.hsd1.mi.comcast.net) (Ping timeout: 252 seconds)
[15:33:51] *** Quits: nicoz (nicoz@nicoz.letz.dev) (Changing host)
[15:33:51] *** Joins: nicoz (nicoz@ubuntu/member/nicoz)
[15:34:01] *** Quits: freeworld (~freeworld@chello085216193138.chello.sk) (Ping timeout: 256 seconds)
[15:34:01] *** Quits: pulsar12 (~quassel@a79-169-140-39.cpe.netcabo.pt) (Quit: https://quassel-irc.org - Chat comfortably. Anywhere.)
[15:34:26] *** Joins: freeworld (~freeworld@chello085216193138.chello.sk)
[15:34:44] *** Quits: jcsteele (~j@user/jcsteele) (Client Quit)
[15:35:12] *** Joins: zeden (~zeden@user/zeden)
[15:35:18] <bjs> graingert[m]: I still think that FAQ section needs to be thrown away and a proper one written somewhere
[15:35:27] *** Joins: vantage (~vantage@ip-193-121-152-141.dsl.scarlet.be)
[15:35:34] <bjs> there's nowhere else in the docs it mentions this stuff afaik
[15:36:57] *** Quits: MajorBiscuit (~MajorBisc@wlan-145-94-218-48.wlan.tudelft.nl) (Ping timeout: 240 seconds)
[15:37:22] <bjs> https://docs.python.org/3/faq/library.html#what-kinds-of-global-value-mutation-are-thread-safe  it's like an aside in an FAQ,  but as we'll soon get things like per-interpreter GILs I'm sure the story is about to become a lot more complicated
[15:39:07] <kosh> I want the GIL to go away and for that work to be merged in once tested enough
[15:39:45] <bjs> kosh: well the GIL won't "go away", you'll just get subinterpreters with their own GILs and presumably either threading.Lock or some other lock that works across interpreters
[15:41:03] <kosh> https://lukasz.langa.pl/5d044f91-49c1-4170-aed1-62b6763e6ad0/   that
[15:41:20] *** Quits: agrosant (~agrosant@46.12.50.59.dsl.dyn.forthnet.gr) (Ping timeout: 272 seconds)
[15:41:57] *** Quits: arinov (~arinov@213.194.126.155) (Ping timeout: 256 seconds)
[15:42:40] *** Joins: stdInOut (~stdInOut@user/stdInOut)
[15:43:36] *** Quits: lesault (~lesault@user/lesault) (Remote host closed the connection)
[15:44:14] <bjs> kosh: oh that,  yeah there have been many "remove the GIL" projects in the past but this one seems very promising.  The subinterpreter work also seems to be progressing and there is now a PEP for the GIL-less variant (lock per subinterpreter).  It's not obvious which if any we'll ever get
[15:45:02] *** Quits: wyclif (~wyclif@user/wyclif) (Ping timeout: 240 seconds)
[15:45:11] <kosh> if I can get parallelization within a single process and shared memory space that would solve a lot of the problems I have
[15:45:18] <kosh> and scaling on many cores
[15:45:44] *** Joins: wyclif (~wyclif@user/wyclif)
[15:45:55] <bjs> kosh: you're a big dreamer
[15:45:56] <bjs> :D
[15:46:02] *** Quits: jcalla (~jcalla@cpe-75-189-211-206.nc.res.rr.com) (Ping timeout: 250 seconds)
[15:46:14] <kosh> if that doesn't happen I will eventually stop using python
[15:46:18] *** Joins: Bronto22 (~mennoh@2a02:a46b:4db0:1:5604:a6ff:fe37:3044)
[15:46:38] <kosh> multiprocess scaling just has too much overhead
[15:46:45] *** Quits: EvilDMP (~textual@django/moderator/EvilDMP) (Quit: My MacBook has gone to sleep. ZZZzzz…)
[15:46:46] *** Quits: cliluw (~cliluw@47.147.77.43) (Ping timeout: 260 seconds)
[15:46:47] <bjs> kosh: i think it's clear that the future of programming languages is going to have to have a lot more support for lightweight parallel workloads
[15:46:58] *** Joins: cdown (~cdown@188.214.11.14)
[15:47:03] <kosh> bjs, exactly, we are getting more and more cores
[15:47:19] *** Joins: cliluw (~cliluw@47.147.77.43)
[15:47:23] <kosh> bjs, one of the epyc chips coming out has 384 cores on it, they are a little slower in single core but there are a LOT of them
[15:47:37] *** Joins: et (~et@user/et)
[15:47:43] <bjs> kosh: Python has generally been pretty good at keeping up and evolving over the last decade(s),  but this step seems a much bigger/harder one to overcome
[15:48:31] <kosh> yeah this is a hard step
[15:48:45] *** Quits: tarel2 (~tarel2@2600:8801:1881:7300::a288) (Ping timeout: 256 seconds)
[15:49:43] *** Joins: Xano (~Xano@2a00:23c4:4204:700:583f:5e29:d957:6f24)
[15:49:48] <Xano> Good afternoon! I'm trying to improve typing for an overloaded function, but cannot seem to get the return type hints correct. Code plus MyPy errors at https://pastebin.com/62i6w5yf
[15:49:50] <Xano> I assume it's got something to do with overloading a context manager, but I haven't found out how else to annotate or decorate these functions
[15:50:05] <Xano> (sorry if that was a repost, my connection's been bad)
[15:50:09] *** Joins: rinzewind (~rinzewind@user/rinzewind)
[15:50:36] *** Quits: wyclif (~wyclif@user/wyclif) (Ping timeout: 240 seconds)
[15:50:39] *** Quits: Xano_ (~Xano@2a00:23c4:4204:700:59ec:3f01:44e2:383a) (Ping timeout: 252 seconds)
[15:50:53] *** Joins: revolve (~u0_a227@cpc100838-bagu15-2-0-cust672.1-3.cable.virginm.net)
[15:50:56] *** Joins: EvilDMP (~textual@django/moderator/EvilDMP)
[15:51:01] *** Quits: shad (~shad@user/shad) (Ping timeout: 240 seconds)
[15:51:11] *** Joins: wyclif (~wyclif@user/wyclif)
[15:52:02] *** Quits: et (~et@user/et) (Ping timeout: 240 seconds)
[15:52:38] *** Joins: jcsteele (~j@user/jcsteele)
[15:53:02] *** Joins: flower_ (~archie@217-123-218-6.cable.dynamic.v4.ziggo.nl)
[15:53:15] *** Joins: et (~et@user/et)
[15:53:28] *** Quits: kevr (~kevr@user/kevr) (Remote host closed the connection)
[15:53:53] *** Joins: kevr (~kevr@user/kevr)
[15:54:33] *** Quits: ghost43 (~ghost43@gateway/tor-sasl/ghost43) (Remote host closed the connection)
[15:54:49] *** Joins: ghost43 (~ghost43@gateway/tor-sasl/ghost43)
[15:54:59] *** Joins: nuclearg1 (~nucleargr@user/nuclearg1)
[15:55:35] <gitesh> fakenullie: in post request the stuff in body , where does it go ? At the server
[15:55:48] *** Quits: wyclif (~wyclif@user/wyclif) (Ping timeout: 240 seconds)
[15:56:07] *** Joins: maryo_87 (~Maryo@user/maryo)
[15:56:41] *** Joins: wyclif (~wyclif@user/wyclif)
[15:57:02] *** Quits: jcsteele (~j@user/jcsteele) (Ping timeout: 240 seconds)
[15:57:26] *** Joins: c4017w_ (~c4017@209.52.68.8)
[15:57:39] *** Joins: agrosant (~agrosant@79.103.7.27.dsl.dyn.forthnet.gr)
[15:58:24] *** Quits: matsaman (~matsaman@user/matsaman) (Quit: leaving)
[15:59:02] *** Quits: maryo87 (~Maryo@user/maryo) (Ping timeout: 250 seconds)
[15:59:03] *** Joins: alexx (~alexx@static-205-105-61-95.ipcom.comunitel.net)
[15:59:11] *** Joins: summersault (~summersau@179.221.251.36)
[15:59:17] *** Quits: nuclearg1 (~nucleargr@user/nuclearg1) (Ping timeout: 240 seconds)
[16:00:32] *** Quits: et (~et@user/et) (Ping timeout: 240 seconds)
[16:01:13] *** Quits: c4017w__ (~c4017@209.52.68.8) (Ping timeout: 256 seconds)
[16:01:16] <gitesh> fakenullie: so post request is nothing but a big get request?
[16:01:20] *** Joins: lxlc (~lxlc@user/lxlc)
[16:02:15] <fakenullie> gitesh: essentially yes
[16:02:24] *** Joins: Barones (~Barones@user/Barones)
[16:02:40] *** Joins: lesault (~lesault@user/lesault)
[16:03:30] *** Quits: agrosant (~agrosant@79.103.7.27.dsl.dyn.forthnet.gr) (Ping timeout: 272 seconds)
[16:03:45] *** Quits: SGautam (uid286066@id-286066.ilkley.irccloud.com) (Quit: Connection closed for inactivity)
[16:05:33] *** Joins: FFY00_ (~FFY00@archlinux/trusteduser/ffy00)
[16:06:58] *** Joins: justm33 (~Username@84.84.41.7)
[16:07:27] <bookworm> GET request don't have a body
[16:07:45] <bookworm> so that's the wrong way to think about it
[16:08:01] *** Quits: FFY00 (~FFY00@archlinux/trusteduser/ffy00) (Ping timeout: 256 seconds)
[16:08:32] *** Quits: flower_ (~archie@217-123-218-6.cable.dynamic.v4.ziggo.nl) (Ping timeout: 240 seconds)
[16:08:46] *** Joins: flower_ (~archie@217-123-218-6.cable.dynamic.v4.ziggo.nl)
[16:08:47] *** lxlc is now known as zyh
[16:09:00] *** Quits: justm3 (~Username@84-84-41-7.fixed.kpn.net) (Ping timeout: 250 seconds)
[16:09:03] *** justm33 is now known as justm3
[16:09:21] *** Quits: jpn (~jpn@user/jpn) (Ping timeout: 252 seconds)
[16:09:24] *** Joins: kelalaka (~fatih@159.146.74.36)
[16:09:40] *** zyh is now known as zhangyuehua
[16:10:02] *** Parts: zhangyuehua (~lxlc@user/lxlc) ()
[16:10:31] *** Quits: kelalaka (~fatih@159.146.74.36) (Client Quit)
[16:10:58] *** Quits: grooverman_ (~grooverma@152.250.149.49) (Remote host closed the connection)
[16:11:45] *** Quits: revolve (~u0_a227@cpc100838-bagu15-2-0-cust672.1-3.cable.virginm.net) (Read error: Connection reset by peer)
[16:11:49] *** Joins: grooverman (~grooverma@152.250.149.49)
[16:12:24] <purple_cthulhu> Hi. Could the exact type matched by a TypeVar representing two types (e.g.: AnyStr which matches "str" or "bytes") be controlled by a function argument or an instance attribute? Here is an illustration of what I would like to implement to provide compatibility for both Unicode and raw-byte strings: https://bpa.st/YBGA
[16:13:13] *** Joins: slowButPresent (~slowButPr@user/slowbutpresent)
[16:13:50] *** Joins: vantage|work (~vantage@ip-193-121-152-141.dsl.scarlet.be)
[16:14:20] *** Quits: phaise (~phaise@gateway/tor-sasl/phaise) (Remote host closed the connection)
[16:14:54] *** Joins: phaise (~phaise@gateway/tor-sasl/phaise)
[16:16:23] *** Joins: lbalhar (~lbalhar@93.185.13.26)
[16:16:24] *** Quits: nemexis (~nemexis@193-62-201-31.ftth.glasoperator.nl) ()
[16:16:32] *** Quits: vantage (~vantage@ip-193-121-152-141.dsl.scarlet.be) (Ping timeout: 240 seconds)
[16:16:51] *** Joins: revolve (~u0_a227@cpc100838-bagu15-2-0-cust672.1-3.cable.virginm.net)
[16:17:42] *** Quits: ghost43 (~ghost43@gateway/tor-sasl/ghost43) (Remote host closed the connection)
[16:17:57] *** Joins: ghost43 (~ghost43@gateway/tor-sasl/ghost43)
[16:18:16] *** Joins: sn1tch3r (~sn1tch3r@user/sn1tch3r)
[16:18:25] *** Quits: sn1tch3r (~sn1tch3r@user/sn1tch3r) (Client Quit)
[16:18:32] *** Quits: schumaml (~schumaml@dslb-188-104-173-069.188.104.pools.vodafone-ip.de) (Ping timeout: 240 seconds)
[16:18:32] *** Quits: bahamas (~lucian@84.232.140.158) (Ping timeout: 250 seconds)
[16:19:25] *** Joins: causa_sui (~causasui@c-68-60-125-136.hsd1.mi.comcast.net)
[16:20:00] *** Joins: agrosant (~agrosant@79.103.143.96.dsl.dyn.forthnet.gr)
[16:20:06] *** Quits: summersault (~summersau@179.221.251.36) (Remote host closed the connection)
[16:20:19] *** Joins: remolej (~kenoba@user/kenoba)
[16:20:38] *** Joins: schumaml (~schumaml@dslb-178-002-189-170.178.002.pools.vodafone-ip.de)
[16:21:08] *** Quits: goppo (~goppo@user/goppo) (Ping timeout: 250 seconds)
[16:21:41] *** Quits: lidless (lidless@user/lidless) (Quit: ZNC 1.8.2+deb1+focal2 - https://znc.in)
[16:21:51] *** Joins: lidless (lidless@2600:3c02::f03c:93ff:fe98:5c43)
[16:23:06] *** Joins: summersault (~summersau@179.221.251.36)
[16:23:23] *** Quits: agrosant (~agrosant@79.103.143.96.dsl.dyn.forthnet.gr) (Max SendQ exceeded)
[16:23:30] *** Joins: exarkun (~exarkun@user/exarkun)
[16:23:37] *** Quits: audiobirb (~audio@user/audio) (Ping timeout: 240 seconds)
[16:24:07] *** Quits: lidless (lidless@2600:3c02::f03c:93ff:fe98:5c43) (Changing host)
[16:24:07] *** Joins: lidless (lidless@user/lidless)
[16:24:12] *** Quits: causa_sui (~causasui@c-68-60-125-136.hsd1.mi.comcast.net) (Ping timeout: 252 seconds)
[16:24:18] <exarkun> are there any high-level tools (ie, not "the gc module") that assist with understanding reference graphs, especially with understanding why specific objects are still alive?
[16:24:30] *** Joins: squirrel (uid529456@user/squirrel)
[16:25:30] <purple_cthulhu> gitesh, I suggest you to use an HTTP proxy (e.g.: BurpSuite or the open-source mitmproxy) or a network traffic analyzer (Wireshark) to capture and analyze HTTP requests/responses. This will help you understand how HTTP works effectively! (for example, what are differences between a GET and a POST request)! HTTP GET requests are prohibited from setting body data according to specifications (e.g.: RFC7230 for HTTP/1.1).
[16:25:32] *** Quits: Xano (~Xano@2a00:23c4:4204:700:583f:5e29:d957:6f24) (Ping timeout: 240 seconds)
[16:25:36] *** Joins: causa_sui (~causasui@c-68-60-125-136.hsd1.mi.comcast.net)
[16:26:02] *** Quits: schumaml (~schumaml@dslb-178-002-189-170.178.002.pools.vodafone-ip.de) (Ping timeout: 240 seconds)
[16:26:04] <The-Compiler> exarkun: https://pythonhosted.org/Pympler/muppy.html#the-refbrowser-module perhaps?
[16:26:05] *** Quits: jpic (~jpic@145.224.77.178) (Remote host closed the connection)
[16:26:53] *** Joins: jcsteele (~j@user/jcsteele)
[16:26:58] *** Joins: lakrass (~lakrass@user/lakrass)
[16:27:45] *** Joins: nuclearg1 (~nucleargr@user/nuclearg1)
[16:27:46] <exarkun> yes, that sort of thing, thanks
[16:27:52] *** Joins: schumaml (~schumaml@dslb-178-002-185-213.178.002.pools.vodafone-ip.de)
[16:28:42] *** Quits: jcsteele (~j@user/jcsteele) (Client Quit)
[16:29:46] *** Joins: nomic (~nomic@185.217.117.111)
[16:30:27] *** Quits: causa_sui (~causasui@c-68-60-125-136.hsd1.mi.comcast.net) (Ping timeout: 256 seconds)
[16:30:34] *** Quits: ghost43 (~ghost43@gateway/tor-sasl/ghost43) (Remote host closed the connection)
[16:30:43] *** Joins: transeIstor (~transeIst@h67-204-160-244.bendor.broadband.dynamic.tds.net)
[16:30:51] *** Joins: ghost43 (~ghost43@gateway/tor-sasl/ghost43)
[16:31:13] *** Joins: [itchyjunk] (~itchyjunk@user/itchyjunk/x-7353470)
[16:31:16] *** Quits: vantage|work (~vantage@ip-193-121-152-141.dsl.scarlet.be) (Quit: Leaving)
[16:31:41] *** Joins: vantage (~vantage@ip-193-121-152-141.dsl.scarlet.be)
[16:31:52] *** Joins: jcsteele (~j@user/jcsteele)
[16:32:32] *** Quits: nuclearg1 (~nucleargr@user/nuclearg1) (Ping timeout: 240 seconds)
[16:32:32] *** Joins: causa_sui (~causasui@c-68-60-125-136.hsd1.mi.comcast.net)
[16:34:44] *** Joins: shad (~shad@user/shad)
[16:34:56] *** Joins: leitz (~LeamHall@072-182-158-027.res.spectrum.com)
[16:36:03] *** Quits: jcsteele (~j@user/jcsteele) (Client Quit)
[16:36:08] * hodapp removes knife from Pytorch's face, and goes back to resume debugging more deadlocks
[16:36:20] *** Quits: herjazz (~herjazz@p10295192-ipngn22201marunouchi.tokyo.ocn.ne.jp) (Quit: leaving)
[16:36:29] *** Joins: jpn (~jpn@user/jpn)
[16:37:15] *** Quits: causa_sui (~causasui@c-68-60-125-136.hsd1.mi.comcast.net) (Ping timeout: 256 seconds)
[16:39:21] *** Joins: jcsteele (~j@user/jcsteele)
[16:39:44] *** Quits: jcsteele (~j@user/jcsteele) (Client Quit)
[16:41:18] *** Joins: jcsteele (~j@user/jcsteele)
[16:42:12] *** Quits: jpn (~jpn@user/jpn) (Ping timeout: 240 seconds)
[16:42:30] *** Joins: carl- (~carl-@185.103.188.130)
[16:44:30] *** Quits: jcsteele (~j@user/jcsteele) (Client Quit)
[16:45:05] *** Joins: Babar (~Babar@171.226.225.22)
[16:46:07] *** Joins: jcsteele (~j@user/jcsteele)
[16:46:33] *** Joins: CodePoint (~jonathan@50-192-38-69-static.hfc.comcastbusiness.net)
[16:47:04] *** Joins: Xano (~Xano@2a00:23c4:4204:700:ab90:7ea8:71e5:719a)
[16:47:07] *** Joins: AquaL1te (~AquaL1te@user/aqual1te)
[16:48:05] *** Quits: quhar (~quhar@192.162.148.48) (Quit: WeeChat 3.3)
[16:49:20] <carl-> inside setuptools there is the easy_install.py . The question I have is that after installing it it has the line "from .._path import ensure_directory"  and if I try to run it "python3.10 /usr/lib/python3.10/site-packages/setuptools/command/easy_install.py" I get "ImportError: attempted relative import with no known parent package"
[16:49:23] *** Quits: jamea (~jamea@177.239.81.39) (Ping timeout: 256 seconds)
[16:49:32] *** Parts: velix (~velix@user/velix) (Leaving)
[16:50:13] *** Quits: jcsteele (~j@user/jcsteele) (Ping timeout: 240 seconds)
[16:50:13] <graingert[m]> <bjs> "graingert: I still think that..." <- Nobody could agree on what is or isn't atomic
[16:51:35] <graingert[m]> carl-: You need to run with `python -m` - but don't easy_install.py it's EOL
[16:52:36] *** Joins: slav0nic_ (slav0nic@python.su)
[16:53:02] <carl-> graingert[m], I am only packaging an rpm for our strange centos7 hosts and easy_install does not work
[16:53:20] <graingert[m]> carl-: ?
[16:53:22] *** Quits: slav0nic (slav0nic@python.su) (Remote host closed the connection)
[16:54:25] *** Joins: zen_coder (~zen_coder@2a02:8109:a280:2d8d:b461:63e9:52c:68dc)
[16:54:51] <AhmedAmerican> within `argparse` am taking an argument within that format `dd-mm-yyyy` which i would like to make sure it's passed correctly and then i want to read it as `yyyy-mm-dd`
[16:55:08] <AhmedAmerican> what could be the best way for that ?
[16:55:20] <carl-> graingert[m], so it is an rpm .. where i have done python setup to install the setuptools and it results in that file looking like that so that it is not usable
[16:55:26] *** Quits: alexyov (~alexyov@79.124.0.2) (Quit: alexyov)
[16:55:46] *** Quits: gurkenglas (~gurkengla@dslb-178-012-018-212.178.012.pools.vodafone-ip.de) (Ping timeout: 245 seconds)
[16:55:52] <AhmedAmerican> i believe that i can pass a function to `type=` using the datetime.
[16:56:05] *** Quits: OPK2 (~OPK@user/opk) (Quit: Textual IRC Client: www.textualapp.com)
[16:56:07] <graingert[m]> carl-: how did you determine that it wasn't usable?
[16:56:14] *** Joins: alexyov (~alexyov@79.124.0.2)
[16:56:27] *** Joins: tarel2 (~tarel2@139.28.216.246)
[16:57:02] *** Quits: purple_cthulhu (~rax@185.108.96.34) (Ping timeout: 240 seconds)
[16:57:37] *** Joins: junktext (~junktext@gateway/vpn/pia/junktext)
[16:57:38] <carl-> graingert[m], well .. what i determined was that all other *.py packages in /usr/lib/python3.10/site-packages/setuptools/command/  could be run .. except easy_install that gave the exception
[16:57:57] <graingert[m]> why are you running them - they're not supposed to be run
[16:58:08] *** Joins: c4017w__ (~c4017@209.52.68.8)
[16:58:36] <carl-> graingert[m], oooh .. i remembered using easy_install as a command
[16:58:44] *** Joins: causa_sui (~causasui@c-68-60-125-136.hsd1.mi.comcast.net)
[16:58:57] <carl-> maybe I do not have a problem then at all graingert[m]
[16:58:59] <graingert[m]> ?
[16:59:20] <han-solo> AhmedAmerican: https://gist.github.com/monkut/e60eea811ef085a6540f # seems Okayish
[17:00:02] *** Quits: Barones (~Barones@user/Barones) (Ping timeout: 240 seconds)
[17:00:28] *** Quits: grooverman (~grooverma@152.250.149.49) (Read error: Connection reset by peer)
[17:00:33] <graingert[m]> it's not a console script anymore carl-
[17:00:39] <graingert[m]> it's only avaiable as a distuitls.command
[17:00:50] <graingert[m]> s/distuitls/distutils/
[17:00:56] <carl-> aah i c
[17:01:17] <gevreeen> I found environ['wsgi.input'].fileno to suit my needs. however, could I expect the same fileno/fd won't be used for a reasonable amount of time?
[17:01:19] <exarkun> hm pympler gui a little disappointing, https://ibb.co/5h0CZrd
[17:01:30] *** Quits: summersault (~summersau@179.221.251.36) (Remote host closed the connection)
[17:01:31] <graingert[m]> and that's deprecated too
[17:01:32] *** Quits: c4017w_ (~c4017@209.52.68.8) (Ping timeout: 240 seconds)
[17:01:33] <exarkun> gevreeen: no
[17:01:38] *** Joins: georgios (~georgios@user/georgios)
[17:02:18] <AhmedAmerican> han-solo: Thank you.
[17:02:39] <gevreeen> exarkun: but how could I make sure, in WSGI, that once a request from that fileno has authenticated itself, the ensuing requests could check this without racing conditions?
[17:02:46] *** Joins: jpn (~jpn@user/jpn)
[17:02:53] <gevreeen> as I cannot control when the fileno's closed
[17:03:00] <exarkun> gevreeen: I don't understand the question.
[17:03:50] *** Joins: grooverman (~grooverma@152.250.149.217)
[17:05:15] *** Quits: causa_sui (~causasui@c-68-60-125-136.hsd1.mi.comcast.net) (Ping timeout: 256 seconds)
[17:05:50] *** ATAD_ is now known as ATAD
[17:05:59] <gevreeen> say, assuming I made a connection to a remote http(s) server, and I made three requests. the first is supposed to authenticate this connection. the second to grab sensitive data, and the third to log off, all in one connection. the environ['wsgi.input'].fileno is going to remain the same, right? however, isn't it entirely possible, that we could accidentally comes across the case where the first request goes into a first
[17:05:59] <gevreeen> connection, the second and third groups into a second with an gap in between, and somehow these two connections share the same fileno?
[17:06:05] *** Joins: mrgz (~mrgz@201-42-0-191.dsl.telesp.net.br)
[17:06:27] *** Quits: zen_coder (~zen_coder@2a02:8109:a280:2d8d:b461:63e9:52c:68dc) (Remote host closed the connection)
[17:06:50] *** Joins: zen_coder (~zen_coder@2a02:8109:a280:2d8d:699f:6e20:195b:1ccd)
[17:08:02] *** Joins: jcsteele (~j@user/jcsteele)
[17:08:27] <gevreeen> as the filenos in the latter case could be identical
[17:08:37] *** Quits: Xano (~Xano@2a00:23c4:4204:700:ab90:7ea8:71e5:719a) (Ping timeout: 240 seconds)
[17:08:57] *** Joins: kostkon_ (~androirc@2.142.66.94.static.otenet.gr)
[17:09:00] *** Joins: Xano (~Xano@2a00:23c4:4204:700:ab90:7ea8:71e5:719a)
[17:09:02] <exarkun> gevreeen: HTTP authentication is request-based, not connection-based.  A first request is not allowed to authenticate or authorize subsequent requests.
[17:09:08] <han-solo> carl-: are you manually writing the spec ?
[17:09:54] <exarkun> gevreeen: The good news is you can get rid of your 1st and 3rd request and just put authentication material in what was the 2nd request and you're done.
[17:10:06] *** Joins: mmdbalkhi (~Thunderbi@188.214.96.28)
[17:10:10] *** Joins: purple_cthulhu (~rax@185.108.96.7)
[17:10:14] <gevreeen> and the bad news?
[17:10:26] <exarkun> Maybe there is no bad news today
[17:10:26] *** Quits: mmdbalkhi (~Thunderbi@188.214.96.28) (Client Quit)
[17:10:35] *** Quits: jcsteele (~j@user/jcsteele) (Client Quit)
[17:10:54] <gevreeen> hmm, so this means I cannot impose a state on the connection, no?
[17:11:09] <gevreeen> impose a state on the connnection, *safely*
[17:11:13] <exarkun> That is essentially true.
[17:11:50] *** Quits: CodePoint (~jonathan@50-192-38-69-static.hfc.comcastbusiness.net) (Ping timeout: 250 seconds)
[17:12:00] <exarkun> But you can establish a "session" with a client, if you want, where you negotiate to operate on a collection of state that exists somewhere on the client and/or server
[17:12:08] *** Joins: et (~et@user/et)
[17:12:16] *** Quits: Bronto22 (~mennoh@2a02:a46b:4db0:1:5604:a6ff:fe37:3044) (Quit: Konversation terminated!)
[17:12:25] <exarkun> But you have to identify every single request that belongs to that "session" with per-request information (like a cookie that has a session key).
[17:13:12] <carl-> han-solo, yes building on a previous one
[17:13:16] <gevreeen> which gives an opportunity to an mitm to guess the id
[17:13:35] <gevreeen> without doing this in the handshake style
[17:13:58] <gevreeen> s/to/for/1
[17:14:26] *** Quits: prodigius (~prodigius@75-163-174-136.clsp.qwest.net) (Quit: Leaving)
[17:14:34] *** Joins: drvanon (~drvanon@81.89.199.26)
[17:15:40] <gevreeen> even if I do something like give every step of the handshake and id, and chain-hash them
[17:15:46] <gevreeen> s/and/an/1
[17:16:30] *** Joins: vulpes_vulpes (~vulpes_vu@62-64-207-88.dynamic.dial.as9105.com)
[17:17:46] *** Quits: mIk3_08 (~Thunderbi@user/mik3-08/x-2852566) (Quit: mIk3_08)
[17:18:04] <gevreeen> that said, an wsgi application could call the returned callable write directly, and maybe somehow wait or sleep until a sequence of requests is completed?
[17:18:44] *** Joins: summersault (~summersau@179.221.251.36)
[17:19:45] *** Quits: et (~et@user/et) (Ping timeout: 252 seconds)
[17:19:47] <gevreeen> for some time, ofc, and then proceeds to yield/return if it times out.
[17:20:42] <gevreeen> yeah, it will look like a semaphore
[17:20:52] *** Quits: otisolsen70 (~otisolsen@80.80.4.2) (Quit: Leaving)
[17:21:01] *** Joins: jcsteele (~j@user/jcsteele)
[17:21:11] <gevreeen> this will keep the fileno valid
[17:21:21] <gevreeen> and hence maintaining the state
[17:22:34] *** Quits: xcombelle (~xavie@176-139-252-198.abo.bbox.fr) (Read error: Connection reset by peer)
[17:25:14] *** Quits: summersault (~summersau@179.221.251.36) (Remote host closed the connection)
[17:25:15] *** Quits: Xano (~Xano@2a00:23c4:4204:700:ab90:7ea8:71e5:719a) (Ping timeout: 252 seconds)
[17:25:16] *** Quits: jcsteele (~j@user/jcsteele) (Ping timeout: 250 seconds)
[17:25:26] *** Joins: summersault (~summersau@179.221.251.36)
[17:26:09] <han-solo> `python setup.py bdist --formats=rpm` # would give you one, or you can give `--spec-only` if you need the spec for some reason
[17:26:21] *** Quits: concerned_goat (~concerned@hari-23-b2-v4wan-164840-cust99.vm1.cable.virginm.net) (Ping timeout: 252 seconds)
[17:27:59] *** Quits: carl- (~carl-@185.103.188.130) (Ping timeout: 252 seconds)
[17:28:30] *** Joins: SaltHilStroller_ (~SaltHillS@206.223.160.26)
[17:28:47] *** Joins: qlixed (~qlixed@181.44.129.13)
[17:29:01] *** Joins: Xano (~Xano@2a00:23c4:4204:700:ab90:7ea8:71e5:719a)
[17:29:23] *** Quits: l4yer (~l4yer@user/l4yer) (Ping timeout: 256 seconds)
[17:29:25] *** Quits: tejr (~tejr@user/tejr) (Remote host closed the connection)
[17:29:31] *** Joins: xcombelle (~xavie@176-139-252-198.abo.bbox.fr)
[17:29:33] <gevreeen> that said. I think chain-hash ids is the way going forward, when a shared secret key could be derived to encrypt the data. after all it's probability of guessing
[17:29:41] *** Joins: szkl (uid110435@id-110435.uxbridge.irccloud.com)
[17:29:44] *** Joins: tejr (~tejr@user/tejr)
[17:30:10] *** Joins: wakeup (~wakeup@user/wakeup)
[17:30:12] *** Quits: revolve (~u0_a227@cpc100838-bagu15-2-0-cust672.1-3.cable.virginm.net) (Ping timeout: 252 seconds)
[17:30:49] *** Joins: ggnoredo (~user@212.98.236.50)
[17:31:02] <SnoopJ> chain-hash sounds like it could introduce a "once it's broken, it's broken for everyone going forward" problem, but it's very difficult to follow your stream of thought so I may be misunderstanding
[17:31:14] *** Joins: revolve (~u0_a227@82-132-236-178.dab.02.net)
[17:31:51] *** Quits: roxfan (~roxfan@2a02:a03f:a2be:4f00:51a:35a2:9d4e:fbfc) (Ping timeout: 252 seconds)
[17:31:58] <exarkun> gevreeen: Web sessions are not novel technology.
[17:32:07] <exarkun> gevreeen: They are basically a solved problem.
[17:32:30] *** Quits: Tempesta (~Tempesta@user/tempesta) (Quit: See ya!)
[17:32:49] *** Quits: stdInOut (~stdInOut@user/stdInOut) (Quit: Leaving)
[17:33:39] <gevreeen> doesn't mean I could do it some other way
[17:33:43] <gevreeen> couldn't
[17:34:04] *** Joins: gurkenglas (~gurkengla@dslb-178-012-018-212.178.012.pools.vodafone-ip.de)
[17:34:04] <gevreeen> I need some time to clear my thoughts. thanks.
[17:34:12] *** Joins: CrazyEddy (crazyed@2603:300a:1d10:c000:de4a:3eff:fe88:cc5f)
[17:35:01] *** Joins: jeho (~jehoshaph@user/jehoshaphat)
[17:36:35] *** Quits: ghost43 (~ghost43@gateway/tor-sasl/ghost43) (Remote host closed the connection)
[17:36:57] *** Quits: summersault (~summersau@179.221.251.36) (Remote host closed the connection)
[17:36:57] *** Joins: ghost43 (~ghost43@gateway/tor-sasl/ghost43)
[17:37:30] *** Quits: cypostres (~cypostres@user/cypostres) (Quit: Leaving)
[17:37:53] *** Quits: ghost43 (~ghost43@gateway/tor-sasl/ghost43) (Remote host closed the connection)
[17:37:59] *** Joins: ghost43_ (~ghost43@gateway/tor-sasl/ghost43)
[17:38:15] *** Quits: ggnoredo (~user@212.98.236.50) (Remote host closed the connection)
[17:39:27] *** Quits: Elzington (~Elzington@static-68-235-44-46.cust.tzulo.com) (Quit: Leaving)
[17:40:02] *** Quits: flower_ (~archie@217-123-218-6.cable.dynamic.v4.ziggo.nl) (Ping timeout: 240 seconds)
[17:40:46] <SnoopJ> auth is usually the wrongest part of an application to go about reinventing wheels
[17:41:00] *** Joins: flower_ (~archie@217-123-218-6.cable.dynamic.v4.ziggo.nl)
[17:41:35] *** Joins: Tempesta (~Tempesta@user/tempesta)
[17:42:42] *** Joins: jamea (~jamea@10.189-202-213.bestelclientes.com.mx)
[17:43:02] *** Quits: codebam (~codebam@user/codebam) (Ping timeout: 250 seconds)
[17:43:30] *** Quits: Charlie_Bravo (~Charlie.B@221.149.170.18) (Quit: Leaving)
[17:44:03] *** Joins: summersault (~summersau@179.221.251.36)
[17:47:58] *** Joins: mfao1999 (~mao@187.1.168.150)
[17:48:45] <mfao1999> Hi, everyone! id like to solve a problem that im having trouble that requires recurrence and time checks.
[17:48:48] *** Quits: gevreeen (~gevreeen@2001:470:67:326:7c6b:19ca:beb4:741f) (Quit: gevreeen)
[17:48:56] *** Joins: tungki (~tungki@subs20-114-142-172-21.three.co.id)
[17:49:07] <mfao1999> Also I have a picture with a chart. Can I send it here? like how?
[17:50:48] <grawity> by means of an imgur link
[17:50:50] *** Joins: nyah (~nyah@05453449.skybroadband.com)
[17:51:20] <grawity> no inline images in IRC, unfortunately, though some clients do automatically upload Ctrl+v'd images somewhere
[17:51:48] *** Joins: nuclearg1 (~nucleargr@user/nuclearg1)
[17:53:19] *** Joins: jcsteele (~j@user/jcsteele)
[17:53:46] *** Quits: xensie (~xensie@91-153-204-92.elisa-laajakaista.fi) (Quit: Textual IRC Client: www.textualapp.com)
[17:54:22] *** Quits: Tempesta (~Tempesta@user/tempesta) (Ping timeout: 265 seconds)
[17:54:24] *** Joins: c_ (~c@92.40.197.84.threembb.co.uk)
[17:55:56] *** Joins: jeho1 (~jehoshaph@user/jehoshaphat)
[17:55:59] *** Joins: death916 (~UserNick@user/death916)
[17:56:30] *** Quits: nuclearg1 (~nucleargr@user/nuclearg1) (Ping timeout: 260 seconds)
[17:56:41] *** Quits: death916 (~UserNick@user/death916) (Client Quit)
[17:56:52] *** Joins: causa_sui (~causasui@c-68-60-125-136.hsd1.mi.comcast.net)
[17:56:52] *** Quits: jcsteele (~j@user/jcsteele) (Client Quit)
[17:57:35] *** Joins: tungki60 (~tungki@subs21-114-142-173-48.three.co.id)
[17:58:39] *** Joins: Tempesta (~Tempesta@user/tempesta)
[17:58:48] *** Joins: c4017w_ (~c4017@209.52.68.8)
[17:59:00] *** Quits: alexx (~alexx@static-205-105-61-95.ipcom.comunitel.net) (Remote host closed the connection)
[17:59:09] *** Quits: julius3 (~raffaem@95.74.53.208) (Quit: Leaving)
[17:59:19] *** Quits: baffodoro (~raffaem@95.74.53.208) (Quit: Leaving)
[17:59:21] *** Quits: jeho (~jehoshaph@user/jehoshaphat) (Ping timeout: 252 seconds)
[17:59:39] *** Quits: tungki (~tungki@subs20-114-142-172-21.three.co.id) (Ping timeout: 256 seconds)
[17:59:54] *** Joins: cdown_ (~cdown@163.114.131.1)
[18:01:39] *** Joins: akk (~akk@75-161-61-130.albq.qwest.net)
[18:01:57] *** Quits: c4017w__ (~c4017@209.52.68.8) (Ping timeout: 240 seconds)
[18:02:12] *** Quits: jbeimler (~quassel@75.183.82.166) (Quit: https://quassel-irc.org - Chat comfortably. Anywhere.)
[18:02:27] <flower_> are *.whl files only for modules? Not for end user applications?
[18:02:32] *** Quits: cdown (~cdown@188.214.11.14) (Ping timeout: 250 seconds)
[18:02:42] *** cdown_ is now known as cdown
[18:02:55] *** Quits: tejr (~tejr@user/tejr) (Remote host closed the connection)
[18:02:58] *** Quits: callq (~callq@157.41.137.81) (Ping timeout: 250 seconds)
[18:03:07] *** Joins: nuclearg1 (~nucleargr@user/nuclearg1)
[18:03:08] *** Joins: tejr (~tejr@user/tejr)
[18:03:12] *** Quits: Xano (~Xano@2a00:23c4:4204:700:ab90:7ea8:71e5:719a) (Ping timeout: 252 seconds)
[18:04:11] *** Quits: rindolf (~shlomif@inkscape/dev/shlomif) (Read error: Connection reset by peer)
[18:04:28] <exarkun> flower_: If you mean "is a .whl file a nice user-facing application package experience?" then the answer is /probably/ no
[18:04:37] *** Joins: jbeimler (~quassel@75.183.82.166)
[18:05:17] *** Joins: carl- (~carl-@c-138ee555.02-180-73746f39.bbcust.telenor.se)
[18:05:20] *** Joins: et (~et@user/et)
[18:05:42] <flower_> exarkun: my question is actually, ok, I can make a *.whl file from my curses python appliction, but how to run it now? :)
[18:05:51] <flower_> on linux
[18:07:16] *** Joins: carl-- (~carl-@185.103.188.130)
[18:07:20] <exarkun> flower_: `python -m ...` would be one way, if you have a compatible entrypoint in your package
[18:07:44] <flower_> entrypoint, hm
[18:08:09] *** Quits: revolve (~u0_a227@82-132-236-178.dab.02.net) (Ping timeout: 252 seconds)
[18:08:09] <exarkun> something like a `__main__` function or module in the right place.  I forget the details.
[18:08:55] *** Joins: baffodoro (~raffaem@95.74.53.208)
[18:09:00] *** Joins: Xano (~Xano@2a00:23c4:4204:700:ab90:7ea8:71e5:719a)
[18:09:31] <mfao1999> can i share like imgur images?
[18:09:37] *** Quits: carl- (~carl-@c-138ee555.02-180-73746f39.bbcust.telenor.se) (Ping timeout: 240 seconds)
[18:09:45] *** Joins: zerotypic (~zerotypic@165.173.19.147)
[18:10:04] *** Joins: revolve (~u0_a227@cpc100838-bagu15-2-0-cust672.1-3.cable.virginm.net)
[18:10:07] *** Joins: jcsteele (~j@user/jcsteele)
[18:10:33] <SnoopJ> mfao1999, links in general can be shared on IRC
[18:11:26] *** Quits: gitesh (uid423739@id-423739.ilkley.irccloud.com) (Quit: Connection closed for inactivity)
[18:11:32] *** Quits: Codaraxis (~Codaraxis@user/codaraxis) (Ping timeout: 240 seconds)
[18:11:34] *** Quits: jcsteele (~j@user/jcsteele) (Client Quit)
[18:11:58] <mfao1999> so i have this chart
[18:11:59] <mfao1999> https://imgur.com/a/HmWucbt
[18:12:07] <mfao1999> and i need to do a logic for the loop
[18:12:11] <mfao1999> but im getting confused
[18:12:33] <mfao1999> on how to store the times and loop conditions checking them
[18:12:59] <flower_> exarkun: thx for the pointer
[18:13:54] *** Quits: zen_coder (~zen_coder@2a02:8109:a280:2d8d:699f:6e20:195b:1ccd) (Quit: Konversation terminated!)
[18:14:17] *** Joins: zen_coder (~zen_coder@2a02:8109:a280:2d8d:699f:6e20:195b:1ccd)
[18:14:20] *** Joins: jcsteele (~j@user/jcsteele)
[18:15:14] *** Quits: jcsteele (~j@user/jcsteele) (Client Quit)
[18:15:31] *** Quits: rvalue (~rvalue@user/rvalue) (Read error: Connection reset by peer)
[18:15:45] *** Joins: rvalue (~rvalue@user/rvalue)
[18:16:14] <zen_coder> when I install some requrirements I get pip errors which are disvoled, however lead later to import errors at runtime https://bpa.st/OWHA
[18:16:20] <zen_coder> can anybody help?
[18:16:28] *** Joins: kts (~kts@103.73.237.62)
[18:16:44] *** Joins: vurr (~seymon@45.86.200.7)
[18:18:04] *** Joins: jcsteele (~j@user/jcsteele)
[18:19:01] *** Quits: drew (~drew@user/drew) (Ping timeout: 240 seconds)
[18:19:02] *** Quits: Enitin (~Enitin@82.180.145.228) (Ping timeout: 240 seconds)
[18:19:18] <han-solo> zen_coder: https://markupsafe.palletsprojects.com/en/2.1.x/changes/#version-2-1-0
[18:20:08] *** Joins: rindolf (~shlomif@inkscape/dev/shlomif)
[18:22:33] <zen_coder> han-solo: I am using python 3.8
[18:22:41] <han-solo> looks like a breaking change they did
[18:22:53] *** Quits: jcsteele (~j@user/jcsteele) (Ping timeout: 256 seconds)
[18:22:57] <han-solo> https://github.com/pallets/markupsafe/issues/286
[18:23:29] <TML> zen_coder: han-solo is trying to tell you that your version of markupsafe no longer has a function named soft_unicode - you need to update your code.
[18:23:32] <han-solo> https://github.com/pallets/jinja/issues/1585
[18:23:58] <TML> wow - github 500ing here
[18:24:14] <TML> don't see that often
[18:24:37] *** Quits: LAVBoy (~LAVBoy@85.249.46.8) (Ping timeout: 240 seconds)
[18:24:38] *** Quits: weibullguy (~weibullgu@156.146.51.139) (Ping timeout: 250 seconds)
[18:24:47] <SnoopJ> looks like they're having some indigestion today: https://www.githubstatus.com/
[18:25:39] *** Joins: marduk1 (~marduk@99-122-3-133.lightspeed.nsvltn.sbcglobal.net)
[18:25:43] *** Quits: marduk (~marduk@99-122-3-133.lightspeed.nsvltn.sbcglobal.net) (Ping timeout: 256 seconds)
[18:25:43] *** marduk1 is now known as marduk
[18:25:43] *** Quits: frost (~frost@user/frost) (Ping timeout: 256 seconds)
[18:26:01] <lericson> betcha it's a state-sponsored attack
[18:26:06] <lericson> but i'll keep that to myself
[18:26:28] *** Joins: GrayArea (~cpd@cpc115156-dals23-2-0-cust689.20-2.cable.virginm.net)
[18:26:28] <lericson> good reminder that github is not decentralized, git is
[18:26:34] * SnoopJ would take that bet
[18:26:51] *** Quits: tungki60 (~tungki@subs21-114-142-173-48.three.co.id) (Ping timeout: 256 seconds)
[18:27:00] <TML> if the bet is on lericson's ability to keep that speculation to themselves, I'd take it too :D
[18:27:52] <zen_coder> han-solo: thank you
[18:28:26] <zen_coder> I am looking how I can pin the version of mark up safe to not go to latest, strange how they introduce breaking change in minor version....
[18:28:46] *** Joins: jcsteele (~j@user/jcsteele)
[18:28:56] <TML> zen_coder: markupsafe doesn't appear to support semvar
[18:29:07] *** Quits: tarel2 (~tarel2@139.28.216.246) (Ping timeout: 256 seconds)
[18:30:04] <TML> s/var/ver/ - I seem to have github brain this morning
[18:30:20] *** Quits: jcsteele (~j@user/jcsteele) (Client Quit)
[18:30:49] *** Joins: rpkilby (~rpkilby@c-24-20-208-106.hsd1.or.comcast.net)
[18:31:32] *** Joins: Sudarshan (~Sudarshan@223.187.112.64)
[18:31:53] *** Joins: mefistofeles (~mefistofe@user/mefistofeles)
[18:32:46] *** Joins: gitesh (uid423739@id-423739.ilkley.irccloud.com)
[18:33:14] *** Quits: Sudarshan (~Sudarshan@223.187.112.64) (Client Quit)
[18:33:43] *** Joins: Sudarshan (~Sudarshan@223.187.112.64)
[18:34:10] *** Quits: five643333496 (~five6@8.40.26.20) (Ping timeout: 250 seconds)
[18:34:56] *** Quits: Sudarshan (~Sudarshan@223.187.112.64) (Client Quit)
[18:35:16] *** Joins: Sudarshan (~Sudarshan@223.187.112.64)
[18:37:32] *** Quits: slavfox (~slavfox@93.158.232.111) (Ping timeout: 240 seconds)
[18:37:55] *** Joins: weibullguy (~weibullgu@024-236-222-047.res.spectrum.com)
[18:38:22] *** Joins: slavfox (~slavfox@93.158.232.111)
[18:38:32] *** Quits: mfao1999 (~mao@187.1.168.150) (Ping timeout: 240 seconds)
[18:38:36] *** Quits: mrwick (~mrwick@user/mrwick) (Ping timeout: 240 seconds)
[18:39:50] <zen_coder> what about this error here during install of `Building wheels for collected packages: antlr4-python3-runtime, jsbeautifier` => error: invalid command 'bdist_wheel'
[18:39:56] <zen_coder> ?
[18:40:01] <zen_coder> can I just ignore this?
[18:40:56] <TML> pip install wheel
[18:41:16] *** Joins: renlo (~Renlo_Ren@pool-108-14-112-182.nycmny.east.verizon.net)
[18:41:18] <zen_coder> I do this in a virtual environment
[18:41:22] *** Joins: Xano_ (~Xano@2a00:23c4:4204:700:e192:67c:8ebd:e7c3)
[18:41:28] *** Joins: ea7-dm3jan (~janek@gauss.sax.de)
[18:41:46] <TML> so do that in the same venv
[18:42:18] <zen_coder> some packages require to have wheel installed in venv?
[18:42:27] <zen_coder> explictely?
[18:42:32] *** Quits: Xano (~Xano@2a00:23c4:4204:700:ab90:7ea8:71e5:719a) (Ping timeout: 240 seconds)
[18:43:16] *** Quits: jamie9898 (~jamie9898@173.199.70.206) (Ping timeout: 245 seconds)
[18:43:25] <ea7-dm3jan> hi, i am having the following list in my python script: https://bpa.st/C2AQ but print(list[2]) give me IndexError: list index out of range back.
[18:43:26] *** Joins: skapata (~Skapata@2804:14c:87b0:9d2e:dce3:39ec:6605:20a)
[18:43:26] *** Quits: skapata (~Skapata@2804:14c:87b0:9d2e:dce3:39ec:6605:20a) (Changing host)
[18:43:26] *** Joins: skapata (~Skapata@user/skapata)
[18:43:34] *** Quits: ghost43_ (~ghost43@gateway/tor-sasl/ghost43) (Remote host closed the connection)
[18:43:59] <SnoopJ> ea7-dm3jan, can you show us the complete error report?
[18:44:16] <ea7-dm3jan> but there are enough items (15), so what stupid mistake am i making
[18:44:23] *** Joins: ghost43 (~ghost43@gateway/tor-sasl/ghost43)
[18:44:32] *** Quits: jamea (~jamea@10.189-202-213.bestelclientes.com.mx) (Ping timeout: 240 seconds)
[18:44:50] <han-solo> though it's weird i just installed jinja2, and it installed `Jinja2==3.0.3` with `MarkupSafe==2.1.1`, but i can't find the line "from markupsafe import Markup, escape, soft_unicode" in `jinja2/utils.py` :/
[18:44:53] <ea7-dm3jan> SnoopJ: https://paste.debian.net/1234721/
[18:45:24] *** Quits: irf21k (~irf21k@2401:4900:336e:1da1:1:0:4fb8:9ff0) (Ping timeout: 240 seconds)
[18:45:26] <SnoopJ> hm, that isn't very illuminating
[18:45:29] <han-solo> zen_coder: debian ?
[18:45:38] <han-solo> if yes, update your `pip`
[18:45:42] *** Joins: GreenResponse (~tomek@r-45-155-148-237.gpon.bialnet.pl)
[18:45:43] *** Joins: jcsteele (~j@user/jcsteele)
[18:45:48] <han-solo> inside the venv
[18:46:17] <SnoopJ> ea7-dm3jan, you can trust that the error is correct: whatever list `li` is in edi2db/test.py, it has at most one item when you're doing this indexing. Perhaps you have an extra layer of list wrapped around your list-of-lists?
[18:46:27] *** Joins: Masterphi (~Masterphi@user/masterphi)
[18:46:36] *** Joins: bomb-on (~bomb-on@user/bomb-on)
[18:46:38] <flower_> hm, was able to build *.whl package, but can't find module: https://paste.debian.net/1234722/
[18:46:39] <SnoopJ> it's hard to say more without seeing the code that reproduces the error
[18:47:06] <ea7-dm3jan> SnoopJ: len(li) gives me back 15
[18:47:12] *** Quits: johnkeats6 (~johnkeats@2804:14c:32:a0cc:247a:8e13:96e:de76) (Ping timeout: 252 seconds)
[18:47:23] <SnoopJ> ea7-dm3jan, if you can share a complete sample of code that reproduces the error, I'll have a look
[18:47:42] <ea7-dm3jan> sure, can i dm you?
[18:47:44] *** ea7-dm3jan is now known as janek
[18:47:47] <SnoopJ> In the channel, please
[18:47:48] *** climax is now known as gentooclimax
[18:48:46] *** Quits: axisys (~axisys@ec2-52-207-123-244.compute-1.amazonaws.com) (Remote host closed the connection)
[18:49:02] <flower_> hm only dist-info: https://paste.debian.net/1234723/
[18:49:46] *** Joins: isomorpheus (~isomorphe@c-73-53-247-25.hsd1.fl.comcast.net)
[18:50:02] *** Quits: jcsteele (~j@user/jcsteele) (Ping timeout: 240 seconds)
[18:50:09] <janek> SnoopJ: https://bpa.st/VAHQ
[18:50:15] *** Joins: FluffyMask (~masque@user/fluffymask)
[18:50:39] *** Joins: slavfox_ (~slavfox@93.158.232.111)
[18:50:53] <isomorpheus> I'm matrix multiplying binary matrices, but I would like to redefine the multiplication part to be binary OR instead of binary AND. (The summing part can remain the regular summing). Is there a clean way to do that?
[18:51:02] <SnoopJ> janek, I don't see the line that produces the error anywhere in this sample (and without the input, it can't be run)
[18:51:03] *** Quits: slavfox (~slavfox@93.158.232.111) (Ping timeout: 252 seconds)
[18:51:25] *** slavfox_ is now known as slavfox
[18:51:26] <exarkun> isomorpheus: Did you share your code yet?
[18:51:35] *** Joins: CodePoint (~jonathan@107-208-128-79.lightspeed.tukrga.sbcglobal.net)
[18:51:53] <graingert[m]> how is it possible that frame.f_lineno can be None - but the line number shows up in the repr(frame) ? https://github.com/dask/distributed/runs/5586906177?check_suite_focus=true#step:11:1894
[18:52:33] *** Quits: ghost43 (~ghost43@gateway/tor-sasl/ghost43) (Remote host closed the connection)
[18:52:39] <graingert[m]> code here: https://github.com/dask/distributed/pull/5952/files#diff-01d874959661d906b3a84fdefcc7b91607a8429a76ec56cce35ffaaaa98034dfR77
[18:52:46] <isomorpheus> exarkun, no. there is no code. just that question. matrix multiplication requires definitions of multiplication and addition. I'm trying to use OR for the former
[18:53:13] *** Quits: summersault (~summersau@179.221.251.36) (Remote host closed the connection)
[18:53:15] *** Quits: schumaml (~schumaml@dslb-178-002-185-213.178.002.pools.vodafone-ip.de) (Ping timeout: 256 seconds)
[18:53:22] *** Joins: ghost43 (~ghost43@gateway/tor-sasl/ghost43)
[18:53:29] <exarkun> isomorpheus: You're asking for a clean way to do something.  How do you define clean, independent of code?
[18:53:34] *** Joins: axisys (~axisys@ec2-52-207-123-244.compute-1.amazonaws.com)
[18:54:12] <graingert[m]> https://github.com/python/cpython/blob/a342a49189c16f01e7b95e0bf22ea2bd539222cd/Objects/frameobject.c#L722-L730 the frame.f_lineno calls the same PyFrame_GetLineNumber as the repr
[18:54:17] <TML> zen_coder: TIAS
[18:54:18] <SnoopJ> isomorpheus, what is a binary matrix?
[18:54:37] <TML> SnoopJ: it's a splinter in your mind
[18:54:52] <SnoopJ> TML, hey, you can't tell me that! I have to see it for myself!
[18:54:59] <TML> :)
[18:55:16] *** Joins: schumaml (~schumaml@dslb-094-216-170-150.094.216.pools.vodafone-ip.de)
[18:55:45] <janek> SnoopJ: sorry, the last line was not copied. https://bpa.st/LQVA input file is here: https://bpa.st/7GPA
[18:56:03] *** Joins: MajorBiscuit (~MajorBisc@wlan-145-94-218-48.wlan.tudelft.nl)
[18:56:16] <isomorpheus> SnoopJ, entries are 0s and 1s
[18:56:25] *** Joins: cowsay-moo (~cowsay-mo@2a0c:f040:0:4356:1016:71c6:8800:300e)
[18:57:01] *** Quits: drvanon (~drvanon@81.89.199.26) (Quit: Client closed)
[18:57:18] *** Joins: carl--- (~carl-@c-138ee555.02-180-73746f39.bbcust.telenor.se)
[18:57:50] *** gentooclimax is now known as climax
[18:59:08] *** Joins: orbisvicis_ (~orbisvici@user/orbisvicis)
[18:59:08] <zen_coder> han-solo: what is the correct command to update my pip?
[18:59:31] *** Joins: c4017w__ (~c4017@209.52.68.8)
[18:59:37] *** Quits: carl-- (~carl-@185.103.188.130) (Ping timeout: 240 seconds)
[18:59:45] <SnoopJ> janek, the result of `"TDate=20210306;20210307".split(';')` is `['TDate=20210306', '20210307']` which is indeed 2 elements long
[19:00:32] <Vornicus> ugh, I do not know what I am doing wrong with scipy.optimize.linprog.  it is giving thoroughly wackadoo answers.
[19:01:35] *** Joins: callq (~callq@2409:4062:4e9a:a9bd:d23:3204:52b:f841)
[19:02:00] <SnoopJ> isomorpheus, the first thought that comes to mind is defining a subclass of numpy.ndarray that requires the bool dtype redefines the __matmul__ operator to do what you want, although I guess subclassing numpy isn't strictly necessary
[19:02:05] *** Joins: lseactuary (~lseactuar@2601:646:202:2f10:4cd1:64ec:46a4:97ed)
[19:02:21] <lseactuary> I have this return type: Tuple[List[Optional[List[str]]], List[List[str]]] but I get a build error as it returns this: Tuple[List[List[str]], List[str]]
[19:02:26] <lseactuary> Not sure what I am doing wrong?
[19:02:35] <zen_coder> `python3 -m pip install --upgrade pip` ?
[19:02:46] *** Quits: ckdCreations (~ckdCreati@c-73-140-151-116.hsd1.wa.comcast.net) (Ping timeout: 250 seconds)
[19:02:55] *** Joins: ckdCreations (~ckdCreati@147.55.133.136)
[19:03:05] <SnoopJ> janek, probably the loop causing the error is meant to only apply to the QSORecords part of your log file, but you're applying it to the entire file and it snags on TDate in the REG1TEST section
[19:03:14] *** Quits: c4017w_ (~c4017@209.52.68.8) (Ping timeout: 260 seconds)
[19:03:21] <isomorpheus> SnoopJ, got it. no clue how it works but `(B[..., np.newaxis] | B[np.newaxis, ...]).sum(axis=1)`
[19:03:25] <lseactuary> If I change it to Tuple[List[Optional[List[str]]], List[str]] then I get this error: Tuple[List[nothing], List[list]]
[19:03:45] <lseactuary> Happy to share the full function
[19:03:52] *** Quits: Sudarshan (~Sudarshan@223.187.112.64) (Quit: Connection closed)
[19:04:09] <janek> SnoopJ: sorry for my bad and illegible code. i am not getting the error if i want to print l wich is split from TDate but while print li wich is in the second for loop
[19:04:10] <Vornicus> ......I have figured it out, missed yet another sign.  Siiiiiigh.
[19:04:14] <han-solo> zen_coder: inside the venv, yes
[19:04:48] <zen_coder> han-solo: but I do not want to always update pip after I setup a venv
[19:05:01] <zen_coder> how can I upgrade it before?
[19:05:16] <SnoopJ> janek, I have no idea what this application does so I can't give you advice about that, but if my explanation of the error does not make sense, please ask a clarifying question.
[19:05:17] *** Quits: slavfox (~slavfox@93.158.232.111) (Ping timeout: 240 seconds)
[19:05:20] <han-solo> well...i'm not sure if debian has fixed their pip..so not sure
[19:05:23] <exarkun> zen_coder: by upgrading your virtualenv
[19:05:26] <han-solo> zen_coder: this is debian, right ?
[19:05:36] *** Joins: mfao1999 (~mao@187.1.168.150)
[19:05:38] <exarkun> virtualenv puts a pip into the virtualenvs it creates
[19:05:48] <exarkun> if you want a newer pip to start with, virtualenv needs to put it there
[19:05:56] <zen_coder> han-solo: I am on ubuntu 20.4
[19:06:15] <wakeup> anyone here has ever used sqlalchemy and knows when one should use it? I'm trying to understand if this is a RDBM or not
[19:06:17] <wakeup> like mysql
[19:06:26] <han-solo> yeah, maybe they have the same problem. i am not too sure
[19:06:30] *** Quits: marcello42 (~mp@p200300dfaf10fe013da0eb2bf7bf6508.dip0.t-ipconnect.de) (Ping timeout: 260 seconds)
[19:06:33] *** Joins: death916 (~death916@c-73-220-87-102.hsd1.ca.comcast.net)
[19:07:13] <exarkun> wakeup: it's a layer on top of an rdbm
[19:07:15] <akk> wakeup: I use it inside flask, but not directly.
[19:07:33] <exarkun> wakeup: it's for when you don't feel like thinking very hard about relations and you just want to think about python objects
[19:07:34] *** Quits: georgios (~georgios@user/georgios) (Quit: Konversation terminated!)
[19:07:37] *** Joins: ge0rgios (~georgios@user/georgios)
[19:08:02] <exarkun> (you still _can_ think about relations with sqlalchemy, you just aren't forced to)
[19:08:04] <han-solo> and don't want to worry about writing different queries for different dbs
[19:08:27] *** Joins: slavfox (~slavfox@93.158.232.111)
[19:08:50] <wakeup> so it's like a way to define databases and adding things to databases with python syntax?
[19:09:13] <wakeup> looking at some examples that looks like the case
[19:10:14] <exarkun> also, querying
[19:10:24] *** Joins: leshaste (~lesshaste@82-69-126-43.dsl.in-addr.zen.co.uk)
[19:10:57] *** Joins: bahamas (~lucian@84.232.140.158)
[19:11:15] <leshaste> in ipython when I start typing it shows me a possible extension in grey which is great. If press right arrow it completes it. But how do I only complete the first part not the whole line?
[19:11:46] <wakeup> is it like a standard when using say flask?
[19:12:03] <exarkun> "like a standard"?
[19:12:16] <SnoopJ> wakeup, it's a possible tool, but not a required one
[19:12:40] *** Quits: kts (~kts@103.73.237.62) (Quit: Konversation terminated!)
[19:13:05] <wakeup> in the past, in Java with SpringBoot, I had used a similar too
[19:13:07] <wakeup> *tool
[19:13:10] <wakeup> doesn't remember the name
[19:13:22] *** Quits: CodePoint (~jonathan@107-208-128-79.lightspeed.tukrga.sbcglobal.net) (Quit: CodePoint struts into the sunset on the beach.)
[19:13:23] <wakeup> but it allowed us to define classes that would map to objects in the database
[19:13:28] <wakeup> so the ORM
[19:13:31] <wakeup> or how is it called
[19:13:39] <wakeup> it seems that sqlalchemy is used for that
[19:13:41] <han-solo> linq ?
[19:13:45] <han-solo> er, nope
[19:13:48] <han-solo> wrong lang
[19:13:48] <graingert[m]> ah ok so it turns out the repr is calculated later when the f.f_lineno is set
[19:13:52] <SnoopJ> wakeup, it does have ORM functionality, yes
[19:13:57] *** Joins: jcsteele (~j@user/jcsteele)
[19:14:15] <ldericher> heya, my SQLAlchemy doesn't create a UNIQUE index. Ideas?
[19:14:46] <ldericher> https://bpa.st/YG6Q `ORMBaseModel` is just `declarative_base()`
[19:15:12] *** Joins: misterG (~Thunderbi@softbank126025216254.bbtec.net)
[19:15:18] <ldericher> and I'm calling `ORMBaseModel.metadata.create_all(..)`
[19:15:48] <wakeup> u guys ever used flask-admin? I am wondering if it's the right tool when you want to return different templates depending on whether the logged user is an admin or not... that seems to be the right tool, but I am not sure... I am not even very familiar with flask
[19:16:13] *** Joins: zebrag (~chris@user/zebrag)
[19:16:26] <wakeup> this example https://github.com/flask-admin/flask-admin/tree/master/examples/auth seems to do this
[19:16:47] <han-solo> if you want to use a lot of batteries, then maybe django would be more appropriate
[19:17:02] *** Quits: revolve (~u0_a227@cpc100838-bagu15-2-0-cust672.1-3.cable.virginm.net) (Ping timeout: 240 seconds)
[19:17:04] *** Joins: drew (~drew@user/drew)
[19:17:09] <ldericher> wakeup, not sure if I'd even use flask for a new project, maybe ASGI instead?
[19:17:36] <wakeup> why?
[19:17:39] <wakeup> u doesn't like it?
[19:17:43] <wakeup> what's the problem with flask?
[19:17:56] *** Quits: zen_coder (~zen_coder@2a02:8109:a280:2d8d:699f:6e20:195b:1ccd) (Ping timeout: 250 seconds)
[19:18:10] <SnoopJ> wakeup, nothing's wrong with it per se, but there are other tools that can do more things (like ASGI)
[19:18:12] <wakeup> also, just looked at asgi, that doesn't seem to be even the same thing as flask
[19:18:13] <han-solo> fastapi could be the new flask
[19:18:22] *** Quits: jcsteele (~j@user/jcsteele) (Ping timeout: 250 seconds)
[19:18:38] <SnoopJ> it's pretty easy to switch from flask to starlette (which can do ASGI) so I wouldn't worry about it
[19:18:43] <leshaste> I can use random.choices(L, weights = probs)[0] to sample one element from the list L.  But what I also want to return the probability of the sampled element?
[19:18:52] *** Joins: zen_coder (~zen_coder@ip5f5bf686.dynamic.kabel-deutschland.de)
[19:19:32] <leshaste> what *if I
[19:20:24] *** Quits: ge0rgios (~georgios@user/georgios) (Read error: Connection reset by peer)
[19:20:37] *** jeho1 is now known as jeho
[19:20:47] *** Joins: ge0rgios (~georgios@user/georgios)
[19:21:29] <SnoopJ> leshaste, that sounds like you want to select an index instead, i.e. `idx = random.choices(range(len(L)), weights=probs)[0]; result = (L[idx], probs[idx])`
[19:21:52] <leshaste> S
[19:21:55] <leshaste> sn
[19:21:57] *** Quits: JC5 (~X@user/jc5) (Quit: Bye)
[19:22:04] <leshaste> SnoopJ,  that looks good, thanks!
[19:22:12] <wakeup> han-solo why u say fastapi could be the enxt flask
[19:22:17] <SnoopJ> or `[idx] = random.choices(...)` if you want to avoid the clumsy [0] (does choice() really not let you specify weights? huh.)
[19:22:23] <zen_coder> han-solo:  the update of pip in venv, seems to fix the issue
[19:22:35] *** Quits: tejr (~tejr@user/tejr) (Remote host closed the connection)
[19:22:35] *** Quits: bindu (~bindu@user/bindu) (Remote host closed the connection)
[19:22:37] <zen_coder> but how can I update pip globally on my system?
[19:22:44] <zen_coder> the same cmd bu not in venv?
[19:22:46] *** Joins: cthulchu (~Cthulchu@69-172-160-196.cable.teksavvy.com)
[19:22:48] <leshaste> SnoopJ,  inspired by you. item, weight = random.choices(zip(items, weights), weights=weights)[0]
[19:22:51] <han-solo> zen_coder: yeah, it's an issue with the patched pip those distros provide
[19:22:55] *** Joins: bindu (~bindu@user/bindu)
[19:22:55] *** Joins: tejr (~tejr@user/tejr)
[19:22:57] *** Quits: darksun (~darksun@user/darksun) (Ping timeout: 240 seconds)
[19:23:05] <janek> SnoopJ: ok. thank you anyway for your warm and friendly support!
[19:23:10] <exarkun> zen_coder: pip does not know how to manage OS-managed packages on your OS.
[19:23:11] <leshaste> I like [idx] =
[19:23:13] <SnoopJ> leshaste, yea, that works too :)
[19:23:45] <han-solo> wakeup: it's very popular, easy to use like flask used to be, i guess ':)
[19:23:54] <leshaste> SnoopJ,  :)
[19:23:56] <leshaste> thanks again
[19:24:01] <SnoopJ> han-solo, did flask stop being easy to use? :P
[19:24:01] *** Quits: AquaL1te (~AquaL1te@user/aqual1te) (Quit: leaving)
[19:24:03] *** Quits: drew (~drew@user/drew) (Ping timeout: 252 seconds)
[19:24:33] <han-solo> SnoopJ: haha, no. apologies for the wrong wording ':)
[19:24:40] *** Joins: johnkeats6 (~johnkeats@2804:14c:32:a0cc:41c3:75a8:a277:69a2)
[19:25:00] <deniska> flask stops being easy as soon as you need something more… thorough than "I want this function to be callable via http"
[19:25:05] <SnoopJ> I do like that Starlette (and therefore FastAPI) "feels" like Flask
[19:25:05] *** Quits: marduk (~marduk@99-122-3-133.lightspeed.nsvltn.sbcglobal.net) (Quit: The Lounge - https://thelounge.chat)
[19:26:04] *** Quits: xa0s (~xa0s@mab.sdf.org) (Quit: Lost terminal)
[19:27:48] *** Joins: marduk (~marduk@99-122-3-133.lightspeed.nsvltn.sbcglobal.net)
[19:27:48] *** Quits: vurr (~seymon@45.86.200.7) (Ping timeout: 240 seconds)
[19:28:13] <leshaste> SnoopJ,  actually my suggestion doesn't work sadly :(
[19:28:50] *** Joins: roxfan (~roxfan@2a02:a03f:a2be:4f00:51a:35a2:9d4e:fbfc)
[19:28:58] *** Joins: pyeveryt_ (~pyeveryth@dot1x-155-41-160-40.bumc.bu.edu)
[19:29:00] <ldericher> Why is SQLAlchemy not creating my index? MWE: https://bpa.st/OQIA
[19:29:15] <SnoopJ> leshaste, I think it needs to be list(zip(...))
[19:29:25] *** Quits: isomorpheus (~isomorphe@c-73-53-247-25.hsd1.fl.comcast.net) (Ping timeout: 240 seconds)
[19:29:41] <leshaste> SnoopJ, right.. or [*zip(..)]
[19:29:41] <TML> ldericher: Where is there an index defined there?
[19:30:01] *** Joins: darksun (~darksun@user/darksun)
[19:30:17] <SnoopJ> leshaste, I find that a little more obscure, but yea, same thing
[19:30:36] <zen_coder> han-solo: there is no way I can update pip OS wide?
[19:30:43] <ldericher> TML, the UniqueConstraint is not created on the DB
[19:30:47] *** Quits: Hanii (~textual@2a00:23c5:c583:a300:d026:fbc:9f82:6678) (Quit: My iMac has gone to sleep. ZZZzzz…)
[19:31:00] <exarkun> Python needs a strict operator now
[19:31:20] <fikran> You know how you can do: l = ['a', 'b'] and then iterate through 'l' as : for value in l: do_something_with[value]? What if the do_something_with is a few layers keep?
[19:31:24] *** Joins: mrwick (~mrwick@user/mrwick)
[19:31:37] <fikran> so, I need to do do_soemthing_with['layer1'][value] ?
[19:31:43] <fikran> is there a wy to reprsent that in code?
[19:31:45] *** Quits: climax (~gentoocli@81-64-65-213.rev.numericable.fr) (Ping timeout: 252 seconds)
[19:32:10] *** Quits: Santzes (~Santzes@2400:8901::f03c:92ff:fe49:47a6) (Quit: WeeChat 3.4)
[19:32:24] *** Joins: JC5 (~X@user/jc5)
[19:32:37] *** Quits: luigibu (~luigi@93.176.153.88) (Quit: WeeChat 3.4.1)
[19:32:54] *** Quits: misterG (~Thunderbi@softbank126025216254.bbtec.net) (Quit: misterG)
[19:33:01] *** Joins: Santzes (~Santzes@2400:8901::f03c:93ff:fe91:a6b1)
[19:33:09] <ens> exarkun: yeah as a python noob i find not declaring a variable as being kinda weird.
[19:33:24] <ens> like if you typo the var name down the line it'll just make a new one.
[19:33:36] <exarkun> ens: Ah.  I didn't mean that kind of strict.
[19:33:38] <ens> but i guess you get used to it or something
[19:33:47] <exarkun> I mean the kind that is the opposite of lazy.
[19:33:57] <ldericher> TML, nevermind, my UNIQUE constraint is there … it just doesn't show up where I expected my DB explorer to show it >.>
[19:34:06] *** Joins: revolve (~u0_a227@cpc100838-bagu15-2-0-cust672.1-3.cable.virginm.net)
[19:34:25] <TML> ldericher: :)
[19:34:37] *** Quits: darksun (~darksun@user/darksun) (Ping timeout: 256 seconds)
[19:34:46] *** Quits: mefistofeles (~mefistofe@user/mefistofeles) (Quit: ar_)
[19:35:00] *** Joins: mefistofeles (~mefistofe@user/mefistofeles)
[19:36:27] *** Quits: rje (~textual@50.35.241.164) (Quit: My MacBook has gone to sleep. ZZZzzz…)
[19:36:35] *** Joins: jamea (~jamea@189.231.55.29)
[19:37:06] *** Joins: drew (~drew@user/drew)
[19:38:57] *** Joins: justsomeguy (~justsomeg@user/justsomeguy)
[19:39:18] *** Joins: Babar_ (~Babar@171.226.225.22)
[19:39:18] *** Babar is now known as Guest9721
[19:39:18] *** Quits: Guest9721 (~Babar@171.226.225.22) (Killed (lead.libera.chat (Nickname regained by services)))
[19:39:18] *** Babar_ is now known as Babar
[19:39:19] *** Quits: szkl (uid110435@id-110435.uxbridge.irccloud.com) (Quit: Connection closed for inactivity)
[19:40:40] *** Quits: RiFo (~RiFo@user/rifo) (Quit: ... and thanks for all the fish.)
[19:42:59] <ldericher> … if there is a Code of Conduct, there should be a "Code of Conduct keynote" presentation video. So whoever misbehaves may politely be told to "look at our CoCk before posting!" :)
[19:44:15] *** Joins: paul424 (~tom@ip-5-172-234-217.multi.internet.cyfrowypolsat.pl)
[19:44:30] *** Quits: ghost43 (~ghost43@gateway/tor-sasl/ghost43) (Remote host closed the connection)
[19:44:35] *** Quits: wakeup (~wakeup@user/wakeup) (Quit: Client closed)
[19:44:46] *** Joins: wakeup (~wakeup@user/wakeup)
[19:44:47] <exarkun> let me go get all of my 11 year old friends, they will love that joke.
[19:45:20] *** Joins: ghost43 (~ghost43@gateway/tor-sasl/ghost43)
[19:45:44] *** Joins: Moosadee (~Moosadee@136.32.155.193)
[19:46:06] *** Quits: bahamas (~lucian@84.232.140.158) (Ping timeout: 250 seconds)
[19:46:11] *** Quits: purple_cthulhu (~rax@185.108.96.7) (Quit: Leaving.)
[19:47:43] *** Quits: vladoski (~vladoski@2001:b07:add:d406:df6c:d4e5:d817:538e) (Remote host closed the connection)
[19:48:41] *** Joins: matdev (~matdev@2a01:6e60:10:793:666:feed:dead:beef)
[19:50:50] *** Quits: upsala (~zcb@185.209.196.134) (Quit: WeeChat 3.4.1)
[19:52:03] <ldericher> exarkun, nah, they won't get that "politely" part [/ot]
[19:53:24] *** Quits: grandrew (~grandrew@104-50-140-129.lightspeed.sntcca.sbcglobal.net) (Ping timeout: 240 seconds)
[19:57:00] *** Quits: lambda (~weechat@cyka.blyat.vodka) (Quit: WeeChat 3.4)
[19:57:19] *** Joins: lambda (~weechat@cyka.blyat.vodka)
[19:57:39] *** Quits: neibo (~neibo@2a0c:5a80:1011:800:25a0:7f9b:32ea:b2a6) (Quit: Leaving)
[19:58:04] *** Joins: dman777 (~dman777@76-253-74-225.lightspeed.austtx.sbcglobal.net)
[19:58:09] *** Quits: dman777 (~dman777@76-253-74-225.lightspeed.austtx.sbcglobal.net) (Quit: leaving)
[19:58:33] *** Quits: ghost43 (~ghost43@gateway/tor-sasl/ghost43) (Remote host closed the connection)
[19:59:22] *** Joins: ghost43 (~ghost43@gateway/tor-sasl/ghost43)
[19:59:57] *** Quits: dsrt^ (~dsrt@65.240.140.18) (Remote host closed the connection)
[20:00:16] *** Joins: c4017w_ (~c4017@209.52.68.8)
[20:00:27] *** Joins: rooiratel (~rooiratel@156-155-163-86.ip.internet.co.za)
[20:00:47] *** Quits: pyeveryt_ (~pyeveryth@dot1x-155-41-160-40.bumc.bu.edu) (Remote host closed the connection)
[20:02:42] *** Quits: veegee (~veegee@ipagstaticip-469c2903-2b07-6dc3-3bc2-98748da5ca77.sdsl.bell.ca) (Quit: Textual IRC Client: www.textualapp.com)
[20:03:25] *** Quits: schumaml (~schumaml@dslb-094-216-170-150.094.216.pools.vodafone-ip.de) (Ping timeout: 240 seconds)
[20:03:37] *** Quits: c4017w__ (~c4017@209.52.68.8) (Ping timeout: 240 seconds)
[20:03:45] *** Quits: ge0rgios (~georgios@user/georgios) (Quit: Konversation terminated!)
[20:05:00] *** Quits: uxemacs (~timothy@user/uxemacs) (Ping timeout: 240 seconds)
[20:05:24] *** Joins: subopt (~subopt@2603-8081-2302-459a-09c0-8edd-7344-ddad.res6.spectrum.com)
[20:05:31] *** Joins: schumaml (~schumaml@dslb-092-074-012-020.092.074.pools.vodafone-ip.de)
[20:06:57] *** Quits: Ergo^ (~ergo@91.238.59.144) (Remote host closed the connection)
[20:07:02] *** Quits: shad (~shad@user/shad) (Ping timeout: 240 seconds)
[20:07:20] <wakeup> anyone here used flask-user with flask-admin?
[20:07:46] <SnoopJ> wakeup, let's assume the answer is yes, what would you next question be?
[20:07:52] <SnoopJ> your*
[20:08:37] <wakeup> the question would be: do you have a simple example of an app that uses both
[20:08:57] <wakeup> I've seen examples that use flask-admin and flask-security
[20:09:03] <wakeup> but not flask-admin and flask-user
[20:09:27] *** Joins: shad (~shad@user/shad)
[20:10:04] *** Joins: grandrew (~grandrew@104-50-140-129.lightspeed.sntcca.sbcglobal.net)
[20:10:19] *** Joins: thiras (~thiras@user/thiras)
[20:10:21] *** Quits: thiras (~thiras@user/thiras) (Remote host closed the connection)
[20:10:22] *** Quits: justsomeguy (~justsomeg@user/justsomeguy) (Quit: WeeChat 3.4)
[20:10:32] *** Quits: GrayArea (~cpd@cpc115156-dals23-2-0-cust689.20-2.cable.virginm.net) (Ping timeout: 240 seconds)
[20:10:36] *** Quits: CrazyEddy (crazyed@2603:300a:1d10:c000:de4a:3eff:fe88:cc5f) (Ping timeout: 240 seconds)
[20:11:00] *** Quits: fflam (~mdt@ip72-220-60-77.sd.sd.cox.net) (Ping timeout: 240 seconds)
[20:11:21] *** Quits: envex (~envex@cpe-173-91-189-33.neo.res.rr.com) (Ping timeout: 252 seconds)
[20:12:56] <wakeup> actually, no
[20:13:01] <wakeup> I mean there's an example, but it's old
[20:13:02] *** Joins: fflam (~mdt@ip72-220-60-77.sd.sd.cox.net)
[20:13:50] *** Quits: sawk (~quassel@151.81.118.116) (Ping timeout: 250 seconds)
[20:14:14] *** Joins: src (~src@user/src)
[20:15:33] *** Joins: darksun (~darksun@user/darksun)
[20:15:38] *** Joins: vlado (~vlado@2800:484:3587:3c90:8bf1:66d4:72a6:4f9c)
[20:15:55] *** Joins: NeoCore (~neocore@89.40.183.136)
[20:15:57] <fikran> I am doing "try: list[sub1][sub2]: except: pass" a bunch of times and want to abstract it out.
[20:16:26] *** Quits: p-i-_ (~Ohmu@2403:6200:8978:9086:d6f:655c:b421:bc62) (Read error: Connection reset by peer)
[20:16:40] <exarkun> fikran: x = list[sub1]; x[sub2]
[20:16:52] <fikran> I was thinking of making a funtin thaty just des the try/except block but how do I pass the value to an argument to check without it failing in the firs ptlace?
[20:16:56] <fikran> exarkun: I don't follow?
[20:17:00] *** Joins: p-i- (~Ohmu@2403:6200:8978:d82d:89c0:e177:c2f7:c9a9)
[20:17:14] <exarkun> What do you want to factor out?
[20:18:24] *** Joins: LAVBoy (~LAVBoy@85.249.46.8)
[20:18:45] <TML> fikran: yourfunc(x, sub1, sub2)
[20:19:30] *** Quits: fedenix (~fedenix@gateway/tor-sasl/fedenix) (Remote host closed the connection)
[20:19:49] *** Joins: fedenix (~fedenix@gateway/tor-sasl/fedenix)
[20:20:13] *** Quits: darksun (~darksun@user/darksun) (Ping timeout: 240 seconds)
[20:21:26] *** Joins: djapo (~archangel@user/djapo)
[20:21:40] *** Quits: runelind (~runelind@user/runelind) (Quit: ZNC 1.8.2 - https://znc.in)
[20:23:19] *** Joins: stdInOut (~stdInOut@user/stdInOut)
[20:23:25] <fikran> TML: interesting...
[20:23:34] *** Quits: djhankb (~djhankb@208.113.164.68) (Remote host closed the connection)
[20:23:46] <TML> def yourfunc(x, y, z): try: return x[y][z] except: pass
[20:24:06] *** Joins: rje (~textual@65.141.156.170)
[20:24:14] *** Joins: djhankb (~djhankb@208.113.164.68)
[20:24:41] *** Quits: wakeup (~wakeup@user/wakeup) (Quit: Client closed)
[20:25:05] *** Joins: hams (~hams@user/hams)
[20:25:06] *** Quits: mon_aaraj (~MonAaraj@user/mon-aaraj/x-4416475) (Ping timeout: 252 seconds)
[20:25:55] *** Quits: ubert1 (~Thunderbi@2a02:8109:9880:303c:8bc2:7df6:5938:d836) (Remote host closed the connection)
[20:26:34] *** Joins: Codaraxis (~Codaraxis@user/codaraxis)
[20:27:09] *** Joins: mon_aaraj (~MonAaraj@user/mon-aaraj/x-4416475)
[20:27:16] *** Quits: zerotypic (~zerotypic@165.173.19.147) (Ping timeout: 250 seconds)
[20:27:56] <mav`rik> fikran: stepping back slightly, what's the intent behind the check? Why are you doing the try/except test in the first place?
[20:28:08] *** Joins: Wh0 (~V@103.240.170.222)
[20:29:43] *** Joins: bahamas (~lucian@84.232.140.158)
[20:29:58] <exarkun> why is the only function that pympler can show the name of "<lambda>"
[20:31:21] <SnoopJ> overly elaborate solution to a nested getter that can ignore errors: https://bpa.st/CFZQ
[20:31:41] *** Quits: the_lanetly_052 (~the_lanet@194.135.169.153) (Ping timeout: 252 seconds)
[20:31:53] *** Joins: darksun (~darksun@user/darksun)
[20:32:58] <SnoopJ> my hunch is that there's a functional spelling with functools.reduce or itertools.accumulate but I couldn't get there
[20:33:14] *** Joins: kickingvegas (~cchoi@c-73-170-198-193.hsd1.ca.comcast.net)
[20:33:24] <exarkun> functional solutions are unpython anyway
[20:33:58] <SnoopJ> I can't say I agree, but if I wanted one I'd be reaching for glom anyway
[20:34:04] *** Joins: Barones (~Barones@user/Barones)
[20:35:11] *** Joins: GrayArea (~cpd@cpc115156-dals23-2-0-cust689.20-2.cable.virginm.net)
[20:35:26] *** Quits: kdc (~kdc@196.211.197.133) (Quit: Leaving)
[20:35:52] *** Joins: Enitin (~Enitin@82.180.145.226)
[20:36:37] *** Quits: darksun (~darksun@user/darksun) (Ping timeout: 256 seconds)
[20:38:04] *** Joins: darksun (~darksun@user/darksun)
[20:38:24] *** Joins: magla (~gelignite@d5364d83.access.ecotel.net)
[20:38:59] *** Quits: Hackerpcs (~user@user/hackerpcs) (Quit: Hackerpcs)
[20:39:02] *** Quits: hams (~hams@user/hams) (Ping timeout: 240 seconds)
[20:39:03] <fikran> mav`rik: so, I have a value like this: event["detail"]["userIdentity"]["sessionContext"]["sessionIssuer"]["userName"]
[20:39:24] *** Quits: Wh0 (~V@103.240.170.222) (Ping timeout: 240 seconds)
[20:39:27] <fikran> mav`rik: if I do x = event["detail"]["userIdentity"]["sessionContext"]["sessionIssuer"]["userName"], there's a possiblity that detail doesnt' exist, userIdentity doesn't exist, sessionContext doesn't exist, etc.
[20:39:39] *** Joins: Hackerpcs (~user@user/hackerpcs)
[20:39:49] *** Quits: Enitin (~Enitin@82.180.145.226) (Ping timeout: 240 seconds)
[20:39:50] <bjs> fikran: that doesn't sound like a list
[20:39:58] *** Quits: Hackerpcs (~user@user/hackerpcs) (Max SendQ exceeded)
[20:40:33] <bjs> if it's a dict, maybe you're looking for .get()?  You can go event.get("detail", {}).get("userIdentity", {}).get("sessionContext", {}).get("sessionIssuer", {}).get("userName")  or something
[20:40:47] *** Joins: powftw (uid448161@id-448161.lymington.irccloud.com)
[20:41:04] *** Joins: Hackerpcs (~user@user/hackerpcs)
[20:41:24] *** Joins: sobkas (~sobkas@95.175.17.217)
[20:41:27] <fikran> I have half a dozen random variables I'm doing this to..the code is going to be super ugly.
[20:41:38] *** Joins: Enitin (~Enitin@82.180.145.230)
[20:42:14] <SnoopJ> fikran, did you see the function my paste that lets you pass a sequence of keys?
[20:42:19] <SnoopJ> in* my paste
[20:42:30] <bjs> fikran: well, the ugliness seems to be coming more from the exists-or-doesnt nature of the structure not the exact-way-the-code-is-written,  perhaps the solution is to first dump the dictionary out to some other easier to work with structure
[20:42:34] *** Quits: ghost43 (~ghost43@gateway/tor-sasl/ghost43) (Remote host closed the connection)
[20:42:35] <fikran> SnoopJ: no? did I miss that? scrolling up.
[20:42:48] <SnoopJ> there are libraries that do this sort of thing with lots of bells and whistles, but the function itself isn't too hard to spell out
[20:42:51] *** Quits: shad (~shad@user/shad) (Quit: WeeChat 3.0)
[20:42:51] *** Joins: ghost43 (~ghost43@gateway/tor-sasl/ghost43)
[20:43:00] <SnoopJ> fikran, https://bpa.st/CFZQ
[20:43:01] *** Quits: MajorBiscuit (~MajorBisc@wlan-145-94-218-48.wlan.tudelft.nl) (Ping timeout: 240 seconds)
[20:43:11] <TML> fikran: Well, if it's a dictionary, you can use .get
[20:43:26] *** Quits: lseactuary (~lseactuar@2601:646:202:2f10:4cd1:64ec:46a4:97ed) (Quit: Client closed)
[20:43:56] <SnoopJ> +1 to using .get() when you're not entirely sure if the key will exist (or there is a meaningful default)
[20:43:57] *** Joins: gutts (~gutts@li131-142.members.linode.com)
[20:44:31] <fikran> .get() doesn't go beyond 1 level
[20:44:37] <fikran> unless it fails earlier.
[20:44:46] <fikran> SnoopJ: interesting code.
[20:44:51] <SnoopJ> no indexing operation does, that's why the loop there is necessary
[20:45:17] <TML> fikran: event.get("detail", {}).get("userIdentity", {}).get("sessionContext", {}).get("sessionIssuer",{}).get("userName", {})
[20:45:20] <SnoopJ> but it's often convenient to do `something.get(k1, {}).get(k2, {})` or some such
[20:45:24] *** Quits: mon_aaraj (~MonAaraj@user/mon-aaraj/x-4416475) (Ping timeout: 240 seconds)
[20:45:33] <mav`rik> SnoopJ: you could do something with reduce, but it's a bit hacky. something akin to functools.reduce((lambda v, k: v.get(k, {})), keys[:-1], d).get(keys[-1])
[20:46:07] <SnoopJ> mav`rik, I may have stumbled because I was trying to do it with operator.itemgetter, but I gave it pretty much immediately when my first notion didn't work :)
[20:46:15] <SnoopJ> gave up*
[20:46:51] <SnoopJ> fikran, this library is also sometimes helpful when you're dealing with deeply nested data, but I warn you that it can be very complicated: https://bpa.st/CFZQ
[20:46:52] <mav`rik> SnoopJ: I'd considered operator.methodcaller('get'), but you need it to be a partial such that it has the default empty-dict
[20:47:18] <TML> SnoopJ: Did you mean to link to glom there?
[20:47:18] <gutts> https://dpaste.com/6VU5H3GT8 would this be ideal to make sure that a floating point value is between 0.0 and 1.0?
[20:47:24] <SnoopJ> TML, oops, I did
[20:47:28] <TML> :)
[20:47:30] <SnoopJ> fikran, correct link: https://glom.readthedocs.io/en/latest/
[20:47:32] <SnoopJ> TML, thanks
[20:47:38] <gutts> and would I have to do anything to account for floating point precision?
[20:47:41] *** Joins: mon_aaraj (~MonAaraj@user/mon-aaraj/x-4416475)
[20:47:43] *** Quits: greknod (~grek@120.88.171.98) (Quit: Ping timeout (120 seconds))
[20:48:13] *** Joins: FFY00 (~FFY00@archlinux/trusteduser/ffy00)
[20:48:17] *** Joins: tijuco (~tijuco@user/tijuco)
[20:48:43] *** Joins: Guest71 (~Guest71@c-76-17-58-176.hsd1.ga.comcast.net)
[20:48:44] <SnoopJ> gutts, the comparison looks fine as long as you're not worried about values like 1.0000000000000002
[20:49:11] *** Joins: greknod (~grek@120.88.171.98)
[20:49:25] <SnoopJ> (I mean, it's fine for that, too, but sometimes you want a comparison that is more like "close enough")
[20:49:27] <gutts> if I have to worry about those values, what can I do to prevent them if it isn't rounding?
[20:49:41] <gutts> eg .round(blah, 2)
[20:49:50] <bjs> gutts: you can't "prevent" them
[20:49:56] <bjs> the point is with floats, you have to remember they exist :)
[20:50:04] <SnoopJ> gutts, usually you compute the distance from your cutoff and compare that distance to a tolerance
[20:50:16] <gutts> SnoopJ: is there reference on that?
[20:50:29] *** Quits: ghost43 (~ghost43@gateway/tor-sasl/ghost43) (Remote host closed the connection)
[20:50:34] *** Quits: FFY00_ (~FFY00@archlinux/trusteduser/ffy00) (Ping timeout: 260 seconds)
[20:50:38] <gutts> abs?
[20:50:46] <gutts> abs(f1-f2) <= allowed?
[20:50:52] <Guest71> Hello everyone I am new to python and need a little help.
[20:50:56] <bjs> Guest71: hi
[20:51:17] <SnoopJ> gutts, it's allowed, of course, but it doesn't mean the same thing as your paste.
[20:51:18] *** Joins: ghost43 (~ghost43@gateway/tor-sasl/ghost43)
[20:51:33] <SnoopJ> I'm not sure what kind of reference you are looking for, though
[20:51:43] <Guest71> Helloo BJ's
[20:51:57] *** Quits: callq (~callq@2409:4062:4e9a:a9bd:d23:3204:52b:f841) (Ping timeout: 240 seconds)
[20:52:29] *** Quits: kostkon_ (~androirc@2.142.66.94.static.otenet.gr) (Ping timeout: 256 seconds)
[20:52:32] *** Quits: flower_ (~archie@217-123-218-6.cable.dynamic.v4.ziggo.nl) (Ping timeout: 240 seconds)
[20:52:35] *** Quits: tetravus (~tetravus@c-71-231-69-112.hsd1.wa.comcast.net) (Ping timeout: 252 seconds)
[20:52:49] <gutts> SnoopJ: what about py3.5's math.isclose?
[20:53:11] <SnoopJ> gutts, that's a handy function, yep
[20:53:23] *** Joins: tetravus (~tetravus@c-71-231-69-112.hsd1.wa.comcast.net)
[20:53:33] <mav`rik> gutts: What's the use-case for the function?
[20:53:34] <bjs> gutts: the question really is, what do you want to happen if you get a number that's "slightly over" 1,  and how far over is too far
[20:53:51] <SnoopJ> agreed
[20:53:54] <bjs> (same with slightly below 0)
[20:54:04] *** Quits: squirrel (uid529456@user/squirrel) (Quit: Connection closed for inactivity)
[20:54:10] <bjs> or exactly either side (since you're using < not <=)
[20:54:12] <SnoopJ> if values above 1.0 should be excluded full stop, you don't need to worry about this
[20:54:19] *** Quits: dclxvi (~dclxvi@2a02:8084:84:4100:5cca:aa73:a158:2834) (Ping timeout: 250 seconds)
[20:54:19] <gutts> this function is a validation function, so the idea would be to not process and throw an exception
[20:54:27] <gutts> until the user corrects the data
[20:54:37] <SnoopJ> gutts, your function looks perfectly meaningful to me if the value absolutely must be in the range (0.0, 1.0)
[20:54:39] <Guest71> I have an intel based computer. but I noticed after I downloaded and installed Python it say AMD | Python 3.10.2 (tags/v3.10.2:a58ebcc, Jan 17 2022, 14:12:15) [MSC v.1929 64 bit (AMD64)] on win32
[20:54:43] <gutts> got it, thank you
[20:54:46] *** Quits: schumaml (~schumaml@dslb-092-074-012-020.092.074.pools.vodafone-ip.de) (Ping timeout: 260 seconds)
[20:54:50] *** Quits: mfao1999 (~mao@187.1.168.150) (Read error: Connection reset by peer)
[20:54:58] <gutts> I think I recognize your username btw, from years and years ago haha on freenode possibly
[20:55:01] <SnoopJ> Guest71, AMD64 is a synonym for x86_64
[20:55:03] <mav`rik> gutts: and exactly 0, or exactly 1 are not permitted at all? Or is it half-open where 0 is permitted but 1 is not, etc.
[20:55:17] <SnoopJ> (it's not a very good synonym, but instruction sets are basically designed to be confusing)
[20:55:31] <gutts> Snoop Do double J, instructing peeps the python way
[20:55:37] *** Joins: Commaster (~Commaster@dslb-002-204-205-169.002.204.pools.vodafone-ip.de)
[20:55:48] <gutts> mav`rik: they would be
[20:56:09] <SnoopJ> Guest71, in other words, there's no problem there, your Python is Intel-friendly :)
[20:56:46] *** Joins: schumaml (~schumaml@dslb-188-104-163-176.188.104.pools.vodafone-ip.de)
[20:57:57] <Guest71> OK thanks SmoopJ Next I am using windows 11 and when I open Python it does not have a navigation bar that normally have (file, save etc). How do I get the navigation bar?
[20:58:35] *** Quits: jpn (~jpn@user/jpn) (Quit: Lost terminal)
[20:59:00] <SnoopJ> Guest71, those wouldn't be meaningful for Python itself. Do you maybe want an editor that can run your code? VS Code and PyCharm are two popular choices for that.
[20:59:26] *** Quits: mav`rik (~unknown@ec2-54-171-126-99.eu-west-1.compute.amazonaws.com) (Quit: leaving)
[21:00:36] *** Joins: c4017w__ (~c4017@209.52.68.8)
[21:00:59] *** Quits: tetravus (~tetravus@c-71-231-69-112.hsd1.wa.comcast.net) (Ping timeout: 256 seconds)
[21:01:02] *** Quits: mixfix41 (~sdenyninn@user/mixfix41) (Ping timeout: 240 seconds)
[21:01:17] *** Joins: georgios (~georgios@user/georgios)
[21:01:59] *** Quits: Klinda (~superleag@user/klinda) (Quit: Konversation terminated!)
[21:02:01] *** Quits: EvilDMP (~textual@django/moderator/EvilDMP) (Quit: My MacBook has gone to sleep. ZZZzzz…)
[21:02:16] *** Joins: Betal (~Betal@user/betal)
[21:02:54] *** bboles_ is now known as bboles
[21:03:09] *** Joins: spac3 (~space@142.126.128.74)
[21:03:11] *** Joins: upsala (~zcb@185.209.196.134)
[21:03:37] *** Quits: c4017w_ (~c4017@209.52.68.8) (Ping timeout: 240 seconds)
[21:04:42] <Commaster> Greetings! So I have several separate .py apps running on one linux box, 1 "host" and several "clients". I have figured out how to exchange info between them using the jsonrpc pypi. But now I need to share (maybe using shared_memory) a large ~120MB "immutable" dict (under types.MappingProxyType is acceptable) between them. All the examples I've
[21:04:42] <Commaster> found so far require allocating a copy in each process, either decoding from shared_memory or mmap-ed file... Is there a way to have proper dict interface to the shared object and save RAM? Thank you!
[21:05:19] *** Quits: jmiehe (~Thunderbi@user/jmiehe) (Quit: jmiehe)
[21:05:33] *** Joins: jamie9898 (~jamie9898@173.199.70.206)
[21:06:03] <ldericher> In sqlalchemy, how can I check if a table has been created?
[21:06:29] *** Quits: rpkilby (~rpkilby@c-24-20-208-106.hsd1.or.comcast.net) (Remote host closed the connection)
[21:06:32] <ldericher> or even better, if all the tables have been created?
[21:06:42] *** Joins: EvilDMP (~textual@django/moderator/EvilDMP)
[21:07:21] *** Joins: rpkilby (~rpkilby@c-24-20-208-106.hsd1.or.comcast.net)
[21:09:20] *** Joins: pretty_dumm_guy (trottel@gateway/vpn/protonvpn/prettydummguy/x-88029655)
[21:09:23] *** dcaro is now known as dcaro_away
[21:09:53] <ldericher> like here: https://bpa.st/OQIA#1L30 how would I check if line 30 needs to run?
[21:10:10] *** Joins: concerned_goat (~concerned@hari-23-b2-v4wan-164840-cust99.vm1.cable.virginm.net)
[21:10:36] *** Quits: bahamas (~lucian@84.232.140.158) (Ping timeout: 240 seconds)
[21:10:38] *** Quits: georgios (~georgios@user/georgios) (Quit: Konversation terminated!)
[21:10:52] *** Joins: Wh0 (~V@103.240.170.222)
[21:11:14] *** Joins: Guest54 (~Guest54@2620:10d:c092:400::4:71b7)
[21:11:32] *** Quits: rpkilby (~rpkilby@c-24-20-208-106.hsd1.or.comcast.net) (Ping timeout: 240 seconds)
[21:11:50] <Guest71> SnoopJ thanks I will check those out. I am a total newbie at all this. Your help is appreciated.
[21:11:54] *** Quits: merijn (~merijn@c-001-001-001.client.esciencecenter.eduvpn.nl) (Ping timeout: 250 seconds)
[21:12:23] <SnoopJ> Commaster, is the actual type constrained by your application? that sounds like a good use-case for redis to me
[21:12:45] <SnoopJ> Guest71, the Mu editor is also worth looking at, it's relatively new: https://codewith.mu/en/
[21:13:21] *** Joins: kostkon_ (~androirc@2a02:587:a10f:c988:a923:3f21:2f27:b1a5)
[21:13:51] <Commaster> SnoopJ, I download a json from the internet and decode into a dict... Should I really go the database route you think?
[21:14:35] *** Quits: GrayArea (~cpd@cpc115156-dals23-2-0-cust689.20-2.cable.virginm.net) (Ping timeout: 252 seconds)
[21:14:44] <SnoopJ> Commaster, it's one (but certainly not the only) potential "off the shelf" solution to the problems that come with IPC of that sort
[21:15:34] <zerosum> hey guys what would be the best way to get some key values from a dictionary "like" structure that I'm getting back as a string? what I'm trying to do now is load it as JSON but for whatever reason some times I get this error when I run it, it's not consistent (see bottom section of paste):  https://bpa.st/3UIA
[21:15:54] <Commaster> SnoopJ, I see... Even though I don't want to modify it ever. Alrighty, thank you!
[21:16:28] <zerosum> and I have no idea how to loop through that nested dicts, to get just the vlan-id and l3-interface values :\
[21:16:49] <moonmoon> zerosum: looks like valid json to me. check for things like a sneaky invisible BOM at the beginning of the file
[21:17:48] <zerosum> moonmoon I triple checked, and is really not coming from a file but rather an output of a device I connect to and it returns JSON formatted data
[21:18:07] <Wooble> zerosum: if it's only sometimes happening, it almost certainly means you got an empty response.
[21:18:18] *** Joins: {HD}_ (~{HD}@2603-6010-c208-c820-0000-0000-0000-18d8.res6.spectrum.com)
[21:18:19] *** Quits: mon_aaraj (~MonAaraj@user/mon-aaraj/x-4416475) (Ping timeout: 256 seconds)
[21:18:50] *** Quits: {HD} (~{HD}@gateway/vpn/pia/hd/x-06969157) (Ping timeout: 250 seconds)
[21:18:54] <zerosum> yeah that's what I'm thinking.. weird
[21:19:02] *** Quits: schumaml (~schumaml@dslb-188-104-163-176.188.104.pools.vodafone-ip.de) (Ping timeout: 240 seconds)
[21:20:08] *** Joins: mon_aaraj (~MonAaraj@user/mon-aaraj/x-4416475)
[21:21:03] *** Joins: schumaml (~schumaml@dslb-188-104-188-078.188.104.pools.vodafone-ip.de)
[21:21:21] <zerosum> I have a lot of devices that return that kind of data, so may be best to append to a file but then I'd have to join them somehow in one single dictionary right?
[21:21:23] *** Quits: ejjfunky (~ejjfunky@125.164.23.99) (Ping timeout: 256 seconds)
[21:21:36] *** Joins: gaken (~gaken@user/galen)
[21:21:48] <zerosum> so I can work off of that file instead
[21:22:21] *** Quits: daoudr (~daoudr@xdsl-31-164-222-159.adslplus.ch) (Quit: Leaving)
[21:22:27] <Wooble> zerosum: joining them in a single file is somewhat annoying if each object isn't on a single line by itself.
[21:24:53] <Wh0> any aware about rclone?
[21:24:54] <zerosum> hmm yeah so I don't know
[21:25:45] *** Quits: zeden (~zeden@user/zeden) (Quit: WeeChat 3.4.1)
[21:26:02] *** Quits: schumaml (~schumaml@dslb-188-104-188-078.188.104.pools.vodafone-ip.de) (Ping timeout: 240 seconds)
[21:26:33] *** Quits: subopt (~subopt@2603-8081-2302-459a-09c0-8edd-7344-ddad.res6.spectrum.com) (Quit: Textual IRC Client: www.textualapp.com)
[21:26:55] *** Joins: BrokenCog (~BrokenCog@c-73-92-151-140.hsd1.ca.comcast.net)
[21:27:12] *** Joins: subopt (~subopt@2603-8081-2302-459a-09c0-8edd-7344-ddad.res6.spectrum.com)
[21:27:32] *** Quits: ovnicraft (~ovnicraft@corp-179-49-44-28.uio.puntonet.ec) (Ping timeout: 240 seconds)
[21:27:35] *** Joins: vurr (~seymon@45.86.200.7)
[21:27:41] *** Joins: bauripalash (~bauripala@2401:4900:3826:2e1d:1:2:8841:9e20)
[21:27:59] *** Quits: bauripalash (~bauripala@2401:4900:3826:2e1d:1:2:8841:9e20) (Client Quit)
[21:28:01] <BrokenCog> I don't know if it's not a thing, or if my net searching is lousy, but, I'm wondering if there is a means to prevent stack trace during errors from showing library/etc calls?  I'm sure it's useful at times, but, more often than not I really only need the line of error in *my* code ... any idea if this can be affected?
[21:28:12] *** Joins: ovnicraft (~ovnicraft@corp-179-49-44-28.uio.puntonet.ec)
[21:28:18] *** Joins: schumaml (~schumaml@dslb-092-074-001-000.092.074.pools.vodafone-ip.de)
[21:29:10] <SnoopJ> BrokenCog, you may want to change sys.excepthook to a handler that formats the report the way you want? https://docs.python.org/3/library/sys.html
[21:29:15] <SnoopJ> err https://docs.python.org/3/library/sys.html#sys.excepthook
[21:29:24] *** Quits: vurr (~seymon@45.86.200.7) (Remote host closed the connection)
[21:30:35] *** Quits: Enissay (~Enissay@user/enissay) (Quit: WeeChat 3.0)
[21:31:30] *** Joins: Enissay (~Enissay@user/enissay)
[21:31:36] <BrokenCog> but, the errors are all caught ... Usually ValueError or such.
[21:31:45] <BrokenCog> not tracking how to use excepthook()
[21:32:12] *** Parts: bancroft_ (~bancroft@user/bancroft) (WeeChat 3.2)
[21:32:21] <zerosum> what would be the best way to loop through those nested dicts though to get the values of keys: vlan-id and l3-interface? I'm trying the following for loop but not getting what I would like: https://bpa.st/SQTA
[21:33:34] *** Quits: grooverman (~grooverma@152.250.149.217) (Quit: No Ping reply in 180 seconds.)
[21:33:51] *** Quits: Payam (~Payam@c83-250-236-236.bredband.tele2.se) (Ping timeout: 256 seconds)
[21:33:59] *** Quits: zerok (~zerok@user/zerok) (Quit: ZNC 1.7.5+deb4 - https://znc.in)
[21:34:00] *** Joins: CodePoint (~jonathan@2607:fb90:c69:64e:11dc:1c88:ffd2:77df)
[21:34:15] *** Joins: stewie925 (~stewie925@2600:1702:44f0:35c0:815a:523a:3858:8e0a)
[21:34:56] *** Joins: tetravus (~tetravus@c-71-231-69-112.hsd1.wa.comcast.net)
[21:35:01] *** Joins: grooverman (~grooverma@152.250.149.217)
[21:36:18] *** JoelJoel is now known as Joel
[21:36:34] *** Quits: ghost43 (~ghost43@gateway/tor-sasl/ghost43) (Remote host closed the connection)
[21:36:54] *** Joins: KevinX (~KevinX@user/KevinX)
[21:37:15] <Wooble> BrokenCog: the default sys.excepthook is a function that prints the entire traceback. You can replace it with a function that instead prints only part of the traceback.
[21:37:35] *** Joins: ghost43 (~ghost43@gateway/tor-sasl/ghost43)
[21:38:32] *** Quits: ghost43 (~ghost43@gateway/tor-sasl/ghost43) (Remote host closed the connection)
[21:38:33] *** Quits: revolve (~u0_a227@cpc100838-bagu15-2-0-cust672.1-3.cable.virginm.net) (Read error: Connection reset by peer)
[21:39:01] <BrokenCog> Wooble: right, I get that, but the exception doesn't invoke my traceback function.  I did:
[21:39:08] <BrokenCog> def minimal_traceback( type, value, traceback ): print(f"{type} of error has occurred, the value: {value}, and you can see traceback: {traceback}")
[21:39:11] <BrokenCog> sys.excepthook = minimal_traceback
[21:39:11] *** Quits: maryo_87 (~Maryo@user/maryo) (Quit: Leaving)
[21:39:16] *** Joins: ghost43 (~ghost43@gateway/tor-sasl/ghost43)
[21:39:17] <BrokenCog> still get the original/default traceback.
[21:39:47] *** Quits: ckdCreations (~ckdCreati@147.55.133.136) (Read error: Connection reset by peer)
[21:40:12] *** Quits: KimK (~KimK@2600:8803:740b:4700:4a5b:39ff:fe0b:57d2) (Ping timeout: 240 seconds)
[21:40:50] *** Quits: Guest54 (~Guest54@2620:10d:c092:400::4:71b7) (Quit: Client closed)
[21:40:57] <cowsay-moo> Hey, how can I iterate through attributes of my class, where the attribute's type is a custom class type?  so the loop would return every attribute like self.myattr = MyCustomClass().  When I check type() on __dict__, they always return strings
[21:41:22] <BrokenCog> which I think, Wooble, is because excepthook() is used for unhandled exceptions?
[21:41:33] *** Quits: CodePoint (~jonathan@2607:fb90:c69:64e:11dc:1c88:ffd2:77df) (Ping timeout: 252 seconds)
[21:41:39] <Wooble> BrokenCog: wait, you're catching the exceptions already, but still getting a traceback?
[21:42:02] <BrokenCog> Wooble: well, I don't have any output matching that print() in my callback, so, no, I don't think so.
[21:42:09] *** Joins: runelind (~runelind@user/runelind)
[21:42:55] *** Joins: revolve (~u0_a227@cpc100838-bagu15-2-0-cust672.1-3.cable.virginm.net)
[21:43:04] *** Joins: ckdCreations (~ckdCreati@147.55.130.34)
[21:43:06] <Wooble> excepthook *is* only used for unhandled exceptions. if you're handling them in a way that prints tracebacks, you have to change that part.
[21:44:10] <BrokenCog> I'm not handling them ... these are system/library modules which I don't need - the initial stack error is in my code and that's adequate so I'd like to suppress the others.  or at least reduce them somehow so I dont' have two+ screenfulls of trackeback to page up.
[21:44:21] <BrokenCog> I'm not handling them ... but they are being handled.
[21:45:00] <BrokenCog> it isn't the error message I want to suppress, it's just the full stack trace.
[21:45:06] *** Quits: dvx (~dvx@5.181.92.64) (Quit: dvx)
[21:45:15] *** Quits: grooverman (~grooverma@152.250.149.217) (Read error: Connection reset by peer)
[21:45:17] *** Joins: rpkilby (~rpkilby@c-24-20-208-106.hsd1.or.comcast.net)
[21:46:15] <jinsun__> what do you mean "they are being handled"? like some library code is doing is doing it instead of your code?
[21:46:25] <jinsun__> then you need to fix the library
[21:46:34] *** Joins: grooverman (~grooverma@152.250.149.49)
[21:46:55] <stewie925> gm
[21:47:32] *** Quits: Enitin (~Enitin@82.180.145.230) (Ping timeout: 240 seconds)
[21:47:48] <BrokenCog> no.  consider:  ttps://termbin.com/fbdw ... I only need the top two stack entries.  How can I suppress the other 3?
[21:48:08] *** Joins: irf21k (~irf21k@2401:4900:32b5:d37d::122d:224a)
[21:48:25] <BrokenCog> it isn't useful for me to see what line of pandas.py error'd.
[21:49:55] *** Quits: caveman (~caveman@gateway/tor-sasl/caveman) (Ping timeout: 240 seconds)
[21:50:17] *** Quits: mon_aaraj (~MonAaraj@user/mon-aaraj/x-4416475) (Ping timeout: 240 seconds)
[21:50:24] <jinsun__> okay so that is normal traceback, somehow your sys.excepthook changes are not applied
[21:50:37] <sumi80m> https://www.youtube.com/watch?v=zogtwLQQEfY
[21:51:04] <Tashtari> Talking of Pandas, is there a library out there that provides a DataFrame class that can stream its contents from SQLAlchemy rather than requiring the whole thing to fit into memory?
[21:51:11] *** Quits: rpkilby (~rpkilby@c-24-20-208-106.hsd1.or.comcast.net) (Ping timeout: 256 seconds)
[21:51:19] <BrokenCog> also, to be clear, that isn't the full traceback ... I did a "python prog.py 2>&1 | grep File" ... just to abbreviate it.  each of those entries has the full code expansion at the error point.
[21:51:31] *** Quits: vantage (~vantage@ip-193-121-152-141.dsl.scarlet.be) (Read error: Connection reset by peer)
[21:51:45] <grym> Tashtari: pandas, i think :)
[21:52:20] <Tashtari> grym: You mean with chunksize?
[21:52:25] <BrokenCog> and, jinsun__ yes, I think something isn't right ... 'sys.tracebacklimit = 0
[21:52:33] <grym> Tashtari: i think so yes
[21:52:36] <BrokenCog> ' should suppress the tracebck, however it doesn't.  I still get the full output
[21:52:38] *** Joins: mon_aaraj (~MonAaraj@user/mon-aaraj/x-4416475)
[21:52:41] <grym> Tashtari: i don't know of better than that though
[21:52:59] <Tashtari> grym: Yeah, using chunksize gives me a generator that yields DataFrames, which isn't useful... I need something that will appear as a DataFrame.
[21:53:04] <Wooble> BrokenCog: are you in ipython?
[21:53:10] <BrokenCog> Wooble: yes
[21:53:12] *** Quits: NeoCore (~neocore@89.40.183.136) (Quit: Leaving)
[21:53:14] *** Quits: c_ (~c@92.40.197.84.threembb.co.uk) (Read error: Connection reset by peer)
[21:53:15] <BrokenCog> ahh...
[21:53:22] <BrokenCog> that's it.
[21:53:34] <Tashtari> I'm using another library that depends on the DataFrame interface.
[21:54:03] *** Quits: tobybl (~tobybl@227.192.115.87.dyn.plus.net) (Remote host closed the connection)
[21:54:35] <BrokenCog> Wooble: thanks.
[21:55:51] *** Quits: drew (~drew@user/drew) (Ping timeout: 252 seconds)
[21:56:02] *** Quits: djapo (~archangel@user/djapo) (Ping timeout: 240 seconds)
[21:56:18] *** Quits: baltazar (~baltazar@178-164-184-5.pool.digikabel.hu) (Ping timeout: 256 seconds)
[21:57:46] *** Joins: baltazar (~baltazar@84-236-97-135.pool.digikabel.hu)
[21:58:19] <gitesh> I want to learn kind of all python, what shall I do?
[21:58:25] *** Quits: stewie925 (~stewie925@2600:1702:44f0:35c0:815a:523a:3858:8e0a) (Quit: Client closed)
[21:58:33] <gitesh> All means all concepts like
[21:58:36] *** Quits: irf21k (~irf21k@2401:4900:32b5:d37d::122d:224a) (Ping timeout: 240 seconds)
[21:58:42] <gitesh> I'm not able to explain accurate
[21:58:55] *** Joins: irf21k (~irf21k@2401:4900:32b5:d3e1::122e:9ae9)
[21:58:59] <exarkun> gitesh: Python is small and simple.  Where do you imagine the obstacles to be?
[21:59:03] <gitesh> But the courses i took didn't cover class variables
[21:59:42] <Wooble> gitesh: probably because they're rarely useful.
[21:59:44] *** Quits: wedwards (~wedwards@46.44.154.209) (Quit: Textual IRC Client: www.textualapp.com)
[21:59:45] <mefistofeles> gitesh: what do you mean by class variables, they didn't cover classes at all?
[21:59:48] <jinsun__> BrokenCog: in ipython you have to from IPython.core.interactiveshell import InteractiveShell and change InteractiveShell.showtraceback it seems, but the signature is not the same as sys.excepthook
[21:59:59] <mefistofeles> oh, like class attributes instead of instance, I see
[22:00:03] <gitesh> mefistofeles: they covered object oriented
[22:00:16] <gitesh> mefistofeles: but that didn't prepare me for django
[22:00:19] <mefistofeles> and yeah, I agree with Wooble , they are not commonly used
[22:00:32] <BrokenCog> jinsun__: thanks.  I'll check that out.   I didn't even think to see if ipython mechanism was different.
[22:00:32] <Wooble> gitesh: django is an outlier.
[22:00:35] <mefistofeles> gitesh: well, django is a huge beast, something you need to learn on its own
[22:00:55] <mefistofeles> that is, you need another course for Django
[22:00:58] <gitesh> I wanted to learn all python required to learn django
[22:01:03] <Wooble> gitesh: (I had the huge misfortune to learn python OOP in a django-inspired ORM and wow did I learn a lot of stuff I had to unlearn :) )
[22:01:06] <mefistofeles> but of coruse it helps if you are already familiar with python
[22:01:11] *** Joins: c4017w_ (~c4017@209.52.68.8)
[22:01:57] <gitesh> That's why
[22:02:09] <gitesh> Is python tutorial enough?
[22:02:16] <gitesh> For django
[22:02:26] <Wooble> also do a django tutorial. :)
[22:02:32] *** Joins: aslicedbanjo (~aslicedba@host86-178-157-158.range86-178.btcentralplus.com)
[22:02:37] <bjs> gitesh: which Python tutorial?  the official one doesn't mention django at all, so probably not
[22:02:38] <BrokenCog> gitesh: have you used w3schools.com/python/ ? It's simple, concise and complete.
[22:02:48] <gitesh> bjs: yes official
[22:03:05] <bjs> gitesh: well it's the official _python_ tutorial, not a django tutorial. It doesn't teach you how to use django
[22:03:11] *** Joins: drew (~drew@user/drew)
[22:03:14] <gitesh> bjs: it shouldn't mention django
[22:03:14] <bjs> gitesh: have you read the tutorial yet?
[22:03:29] <gitesh> bjs: no i took courses on coursera
[22:03:43] *** Quits: grooverman (~grooverma@152.250.149.49) (Read error: Connection reset by peer)
[22:03:44] <bjs> gitesh: exactly, so no it is not enough to learn django because it doesn't mention django so you won't know how to use django after reading it
[22:03:48] <bjs> but you will know (some) python
[22:04:26] <gitesh> Also flask use decorators
[22:04:28] <Wooble> gitesh: the python tutorial does show attributes being set on classes, but the metaclasses behind the django ORM are really funky and not really how you do anything else with class attributes.
[22:04:32] *** Quits: c4017w__ (~c4017@209.52.68.8) (Ping timeout: 240 seconds)
[22:04:37] <gitesh> I the courses i took didn't cover that too
[22:04:45] <gitesh> And*
[22:04:57] *** Joins: grooverman (~grooverma@152.250.149.217)
[22:04:59] <bjs> gitesh: yes, the official tutorial will teach you Python so you can understand the Python that is used. But it won't cover the flask or django libraries, you need something else *as well* to learn those
[22:05:11] *** Joins: jazzy (~jaziz@user/jaziz)
[22:05:14] <bjs> gitesh: I'm sure I've said like 6months ago just to go do the tutorial,  I'm surprised you still haven't
[22:05:38] *** Quits: withered_wolf (~withered_@1437135-v103.1561-static.stchilaa.metronetinc.net) (Ping timeout: 250 seconds)
[22:05:44] <gitesh> Because i was doing courses
[22:05:57] *** Joins: Hanii (~textual@2a00:23c5:c583:a300:b07c:9a96:dc65:7346)
[22:06:17] <bjs> gitesh: you are allowed, and really *should*, seek and use resources other than the ones prescribed to you in a course
[22:06:34] <gitesh> Okay
[22:06:40] <gitesh> Thanks
[22:09:11] *** Quits: Wh0 (~V@103.240.170.222) (Quit: Leaving)
[22:09:12] *** Quits: runelind (~runelind@user/runelind) (Quit: ZNC 1.8.2 - https://znc.in)
[22:10:07] *** Joins: MrMobius (~MrMobius@pool-108-31-243-125.washdc.fios.verizon.net)
[22:10:37] *** Quits: ayustae (Thunderbir@gateway/vpn/protonvpn/ayustae) (Ping timeout: 240 seconds)
[22:12:03] *** Joins: theseb (~theseb@47-220-214-54.cnrocmta03.res.dyn.suddenlink.net)
[22:12:24] *** Quits: Commaster (~Commaster@dslb-002-204-205-169.002.204.pools.vodafone-ip.de) (Quit: Client closed)
[22:12:42] *** Quits: LAVBoy (~LAVBoy@85.249.46.8) (Ping timeout: 260 seconds)
[22:12:48] <spac3> i've heard great things about Automate the Boring Stuff by Al Sweigart too if you're looking for resources
[22:13:09] <MrMobius> if not using name tuples, do you think it looks cleaner to use a named index or a temporary variable with tuples? "NAME=0;print(person_tuple[NAME])" vs "person_name=person_tuple[0];print(person_name)"
[22:13:12] *** Joins: dreamon (~dreamon@p57a4c768.dip0.t-ipconnect.de)
[22:13:33] <gitesh> bjs: why doesn't official python tutorial doesn't cover decorators to prepare me for learning ahead flask?
[22:13:45] <SnoopJ> MrMobius, I find the latter more meaningful personally, the former seems like bending over backwards to not write a more appropriate type
[22:13:57] *** Joins: Enitin (~Enitin@82.180.145.228)
[22:14:09] <bjs> gitesh: it's not designed to help you learn flask, or django. It's designed to give you an introduction to the Python programming language.  Nor is it a comprehensive document that describes *every* part of the language.
[22:14:19] <bjs> There will be plenty of things it doesn't mention
[22:15:15] *** Quits: pvergain (~Thunderbi@2a01:e0a:223:690:b2df:6d78:a1c0:ae92) (Quit: pvergain)
[22:15:15] <SnoopJ> gitesh, in other words, "because nobody wrote that part of the tutorial (yet)"
[22:15:23] *** Quits: EvilDMP (~textual@django/moderator/EvilDMP) (Quit: My MacBook has gone to sleep. ZZZzzz…)
[22:15:27] <barometz> not everything should be in there
[22:15:33] *** Quits: leshaste (~lesshaste@82-69-126-43.dsl.in-addr.zen.co.uk) (Remote host closed the connection)
[22:15:44] *** Joins: leshaste (~lesshaste@82-69-126-43.dsl.in-addr.zen.co.uk)
[22:15:51] <bjs> gitesh: I've been saying this for months to you, that there will not be a single resource that does everything you need and no less and no more. You keep looking for it, but it won't exist. Instead you need to just use lots bits of of different resources to piece together the information you need
[22:16:02] <barometz> actually explaining decorators gets pretty hairy when you're new to the language and possibly newish to programming
[22:16:13] <bjs> bits of the Python docs/tutorial will teach you the parts of Python you need, bits of the django/flask tutorial and online posts will teach you the bits you need there etc
[22:16:44] <SnoopJ> barometz, the not-tutorial part of the docs that explains them does a pretty good job in my opinion. I think it would be appropriate in the tutorial for the reason mentioned above: they're extremely common in library APIs
[22:17:18] *** Quits: justAstache (~justache@user/justache) (Read error: Connection reset by peer)
[22:17:31] <SnoopJ> even if it amounts to "here's a special syntax that lets you feed a callable to another callable to transform it"
[22:17:47] <barometz> 's fair. I just remember my mental model of python execution needing some work when I first ran into them.
[22:18:06] *** Quits: rsx (~dummy@ppp-188-174-142-212.dynamic.mnet-online.de) (Quit: rsx)
[22:18:20] <SnoopJ> They were definitely a roadbump for me, because I was used to languages that _don't_ have first-class functions
[22:18:37] *** Joins: Guest53 (~Guest53@2600:1700:1c71:a3c0:3987:4de1:247b:4178)
[22:18:40] *** Joins: justAstache (~justache@user/justache)
[22:18:43] <Wooble> SnoopJ: honestly I read the language reference and was still lost without http://simeonfranklin.com/blog/2012/jul/1/python-decorators-in-12-steps/
[22:18:53] *** Quits: xMopx (~xMopx-lib@192.95.23.134) (Quit: ZNC - http://znc.in)
[22:19:09] *** Joins: bahamas (~lucian@84.232.140.158)
[22:19:15] <Guest53> Hello
[22:19:25] <Guest53> Trying to parse this file. I have used beautifulsoup and pandas, but can't get all the fields.
[22:21:27] *** Quits: qlixed (~qlixed@181.44.129.13) (Ping timeout: 256 seconds)
[22:21:29] *** Joins: five6433334963 (~five6@8.40.26.66)
[22:21:36] <SnoopJ> Wooble, thanks, I'll add that to my list of handy links
[22:22:09] *** Quits: leitz (~LeamHall@072-182-158-027.res.spectrum.com) (Quit: nappy time)
[22:23:06] <BrokenCog> I can't get all the fields either.  could be because the file doesn't exist.
[22:23:35] *** Quits: bahamas (~lucian@84.232.140.158) (Ping timeout: 250 seconds)
[22:24:10] *** Quits: Hanii (~textual@2a00:23c5:c583:a300:b07c:9a96:dc65:7346) (Quit: Textual IRC Client: www.textualapp.com)
[22:24:11] <deltab> Guest53: which ones?
[22:24:37] *** Quits: mrwick (~mrwick@user/mrwick) (Ping timeout: 256 seconds)
[22:24:51] *** Quits: schumaml (~schumaml@dslb-092-074-001-000.092.074.pools.vodafone-ip.de) (Ping timeout: 256 seconds)
[22:24:51] *** Quits: iomari891 (~iomari891@197.210.76.112) (Ping timeout: 256 seconds)
[22:25:21] <deltab> re decorators, the PEP that introduced them might be useful to read too: https://peps.python.org/pep-0318/
[22:25:26] *** Joins: bolnav[m] (~bolnavm]@2001:470:69fc:105::1683)
[22:26:31] *** Joins: schumaml (~schumaml@dslb-188-104-182-181.188.104.pools.vodafone-ip.de)
[22:26:33] <Guest53> Would be something like this
[22:26:35] <Guest53> https://bpa.st/BRUA
[22:27:02] *** Quits: Ranhir (~Ranhir@157.97.53.139) (Ping timeout: 240 seconds)
[22:27:31] <deltab> Guest53: is that the input?
[22:28:08] *** Joins: flower_ (~archie@217-123-218-6.cable.dynamic.v4.ziggo.nl)
[22:28:10] *** Parts: bolnav[m] (~bolnavm]@2001:470:69fc:105::1683) ()
[22:28:23] *** Joins: osXnut (~osXnut@77.125.126.151)
[22:28:25] <Guest53> deltab yes, it is htm file input
[22:28:26] *** Quits: han-solo (~hanish@user/han-solo) (Quit: leaving)
[22:28:51] <exarkun> I know all strings are legal html5, but I would say that does not look a lot like html.
[22:29:25] <deltab> Guest53: do you get error messages?
[22:30:26] *** Joins: Ranhir (~Ranhir@157.97.53.139)
[22:30:27] *** Quits: chele (~chele@user/chele) (Remote host closed the connection)
[22:30:28] <cowsay-moo> what's the protocol for accessing application data/configuration directories for multiplatform python apps?  For example.. on windows, getting the %APPDATA%, on linux ~/.local or ~/.config
[22:30:55] <exarkun> cowsay-moo: There's an `appdirs` package
[22:31:08] <cowsay-moo> exarkun, excellent thank you.  i'll check into it
[22:31:46] <Guest53> deltab No, error messages, but don't know how I can format the table to get the individual fields
[22:31:50] *** Joins: ianliu (~Ian_Liu_R@2804:431:cfce:10a6:a2f:8cb:8333:6efd)
[22:31:59] *** Joins: smeeagle (~smeeagle@2a00:23c8:9611:e600:1971:b69a:3f2f:7c6d)
[22:32:14] <cowsay-moo> exarkun, I'm surprised this isn't built into python by default actually
[22:32:39] <exarkun> cowsay-moo: be glad it isn't, the stdlib is where libraries go to die
[22:32:44] <ianliu> I'm executing a python script in bash like so: python <<EOF ... EOF. Is it possible to pass command line arguments to this python script, and access them with sys.argv?
[22:32:46] <cowsay-moo> lol
[22:33:05] *** Joins: Zeturic (~Orimendix@50.26.218.162)
[22:33:09] *** Joins: mixfix41 (~sdenyninn@user/mixfix41)
[22:33:10] *** Joins: crashrep (~crashrep@user/crashrep)
[22:35:31] *** Quits: jmd (~user@de.cellform.com) (Remote host closed the connection)
[22:36:29] *** Quits: ghost43 (~ghost43@gateway/tor-sasl/ghost43) (Remote host closed the connection)
[22:36:42] <exarkun> ianliu: It's a shell question, really.  But, put your args _before_ the heredoc.  The heredoc is not an argument, it's a redirection.
[22:36:52] *** Quits: raym (~raym@user/raym) (Ping timeout: 268 seconds)
[22:37:17] *** Joins: ghost43 (~ghost43@gateway/tor-sasl/ghost43)
[22:37:28] *** Quits: ghost43 (~ghost43@gateway/tor-sasl/ghost43) (Remote host closed the connection)
[22:37:30] *** Joins: Gustavo6046 (~Gustavo60@user/gustavo6046)
[22:37:49] <ianliu> exarkun: I tried putting args before the heredoc, like "python arg arg <<EOF ... EOF", but like so python complains that "can't open file arg"
[22:38:14] *** Joins: raym (~raym@user/raym)
[22:38:29] <Guest53> deltab, This might give you more information https://bpa.st/ZVZQ
[22:38:30] *** Quits: rooiratel (~rooiratel@156-155-163-86.ip.internet.co.za) (Quit: Leaving)
[22:39:01] *** Quits: zen_coder (~zen_coder@ip5f5bf686.dynamic.kabel-deutschland.de) (Ping timeout: 256 seconds)
[22:39:32] <ianliu> exarkun: oh, found it, I need to pass a dash before everything, like python - arg1 arg2 <<EOF ...
[22:39:33] <Wooble> ianliu: python - arg1 arg2 << whatever
[22:40:09] <ianliu> Wooble: :D
[22:40:30] *** Joins: EvilDMP (~textual@django/moderator/EvilDMP)
[22:40:33] *** Quits: Pi-sistance (~Pi-sistan@cpc94040-newt37-2-0-cust284.19-3.cable.virginm.net) (Quit: Client closed)
[22:40:36] <Wooble> I shouldn't have taken 30 seconds to confirm it actually works :)
[22:40:39] *** Joins: ghost43 (~ghost43@gateway/tor-sasl/ghost43)
[22:40:53] <graingert[m]> how do I go from an f_lasti and f_code to a line number?
[22:40:59] <CrtxReavr> How would I send an EOF via paramiko. . . I saw this, but I just need to send a control-D, not close the channel: https://stackoverflow.com/questions/2554292/how-to-send-eof-to-stdin-in-paramiko
[22:40:59] <graingert[m]> eg here: https://github.com/dask/distributed/runs/5589920909?check_suite_focus=true#step:11:1853
[22:41:32] <graingert[m]> eg I have an f_lasti of 142 but how do I get the bytecode at that index?
[22:42:34] *** Quits: Masterphi (~Masterphi@user/masterphi) (Quit: Masterphi)
[22:42:35] <Wooble> CrtxReavr: b"\x04", possibly?
[22:42:56] *** Quits: Guest71 (~Guest71@c-76-17-58-176.hsd1.ga.comcast.net) (Quit: Client closed)
[22:43:00] <graingert[m]> oh it's         >>  142 JUMP_ABSOLUTE           40 (to 80)
[22:43:39] *** Joins: elwoodpd (~elwoodpd@85.210.161.53)
[22:43:54] *** Quits: blei (~blei@user/blei) (Quit: Client closed)
[22:44:28] *** Quits: smeeagle (~smeeagle@2a00:23c8:9611:e600:1971:b69a:3f2f:7c6d) (Read error: Connection reset by peer)
[22:44:59] *** Joins: debian_ (~debian@217-123-218-6.cable.dynamic.v4.ziggo.nl)
[22:45:01] *** Quits: raym (~raym@user/raym) (Ping timeout: 240 seconds)
[22:45:08] <graingert[m]> ok so why is the f_lineno -1 and not 648?
[22:46:39] *** Joins: prodigius (~prodigius@75-163-174-136.clsp.qwest.net)
[22:47:01] *** Joins: raym (~raym@user/raym)
[22:48:41] *** Quits: cosimone (~user@93-44-187-176.ip98.fastwebnet.it) (Ping timeout: 245 seconds)
[22:49:09] *** Joins: rpkilby (~rpkilby@c-24-20-208-106.hsd1.or.comcast.net)
[22:49:16] <graingert[m]> and why does it go to 649 by the time the traceback is formatted?
[22:49:29] <exarkun> how do I re-execute a line from input history in pudb?
[22:49:40] *** Quits: ianliu (~Ian_Liu_R@2804:431:cfce:10a6:a2f:8cb:8333:6efd) (Quit: WeeChat 3.4.1)
[22:50:01] <exarkun> ah ctrl-p is bound
[22:50:51] <Wooble> I'd except it to just be using readline, so up arrow should work too but I haven't looked into their implementation
[22:50:57] *** Quits: elwoodpd (~elwoodpd@85.210.161.53) (Ping timeout: 240 seconds)
[22:51:05] <dag> project's github has hundreds of open PRs and issues. is that bad? recent commits in master though.
[22:51:16] <hodapp> "Exception: Exception('<Thread(Dask-Default-Threads-34067-2, started daemon 140055209301760)>')"
[22:51:19] <hodapp> uhh... thanks Dask
[22:51:30] <grym> readlineish commands work in pudb; but i keep hitting uparrow anyway :(
[22:51:32] *** Quits: white2 (~mahengrui@user/mahengrui1) (Ping timeout: 240 seconds)
[22:51:49] <grym> (on the other hand, i know how to delete words and stuff)
[22:52:02] <Wooble> dag: hard to say, although it's not a great sign if they're not at least triaging/commenting
[22:52:05] <graingert[m]> nedbat: sorry for the ping - but I see your name mentioned regarding frame.f_lineno in various BPOs re changes in python 3.10 and I see a <coverage.CTracer object at 0x7f39fd928e70>
[22:52:37] *** Joins: bahamas (~lucian@84.232.140.158)
[22:53:01] <Wooble> dag: but like cpython has 1580 open PRs :)
[22:54:13] <SnoopJ> Wooble, annoyingly, up breaks you out of the little embedded REPL entirely and down does nothing at all
[22:54:32] <dag> it's kinda like an email inbox with hundreds of mostly unread emails. some people manage to have some kind of system around that mess
[22:54:34] * SnoopJ usually hits '!' to drop to a "full" REPL
[22:55:13] *** Joins: alex_a1[m] (~alexa1mat@2001:470:69fc:105::1:dd4b)
[22:55:14] *** Quits: fflam (~mdt@ip72-220-60-77.sd.sd.cox.net) (Quit: WeeChat 3.4)
[22:55:21] <SnoopJ> dag, yes, and for similar reasons: not all PRs are equivalent, just as not all emails are
[22:56:30] *** Parts: MrMobius (~MrMobius@pool-108-31-243-125.washdc.fios.verizon.net) (Leaving)
[22:56:35] *** Joins: fflam (~mdt@ip72-220-60-77.sd.sd.cox.net)
[22:56:57] *** Quits: bahamas (~lucian@84.232.140.158) (Ping timeout: 240 seconds)
[23:01:43] *** Joins: c4017w__ (~c4017@209.52.68.8)
[23:02:31] *** Joins: Narrat (~omnius@p200300df5f13efa406ea56fffe2e7cdc.dip0.t-ipconnect.de)
[23:03:43] *** Joins: cdown_ (~cdown@188.214.11.14)
[23:04:15] *** Joins: cosimone (~user@93-44-187-176.ip98.fastwebnet.it)
[23:04:57] *** Quits: c4017w_ (~c4017@209.52.68.8) (Ping timeout: 240 seconds)
[23:05:05] *** Quits: mon_aaraj (~MonAaraj@user/mon-aaraj/x-4416475) (Ping timeout: 256 seconds)
[23:05:46] *** Parts: orbisvicis_ (~orbisvici@user/orbisvicis) (Leaving)
[23:05:57] *** Quits: cdown (~cdown@163.114.131.1) (Ping timeout: 240 seconds)
[23:06:08] *** cdown_ is now known as cdown
[23:06:43] *** Joins: mon_aaraj (~MonAaraj@user/mon-aaraj/x-4416475)
[23:06:53] *** Quits: cosimone (~user@93-44-187-176.ip98.fastwebnet.it) (Remote host closed the connection)
[23:09:08] *** Quits: {HD}_ (~{HD}@2603-6010-c208-c820-0000-0000-0000-18d8.res6.spectrum.com) (Quit: none)
[23:09:17] *** Quits: debian_ (~debian@217-123-218-6.cable.dynamic.v4.ziggo.nl) (Ping timeout: 240 seconds)
[23:09:32] *** Quits: nuclearg1 (~nucleargr@user/nuclearg1) (Ping timeout: 240 seconds)
[23:09:33] *** Joins: {HD} (~{HD}@2603-6010-c208-c820-9e9c-6f0a-66ef-f982.res6.spectrum.com)
[23:09:46] *** Joins: cosimone (~user@93-44-187-176.ip98.fastwebnet.it)
[23:10:31] *** Quits: powftw (uid448161@id-448161.lymington.irccloud.com) (Quit: Connection closed for inactivity)
[23:11:26] *** Quits: grooverman (~grooverma@152.250.149.217) (Read error: Connection reset by peer)
[23:12:39] *** Joins: grooverman (~grooverma@189.110.77.226)
[23:12:56] *** Quits: ano (~ano@user/ano) (Remote host closed the connection)
[23:15:51] *** Joins: yacatuco (~yacatuco@188.127.182.162)
[23:15:54] *** Quits: rpkilby (~rpkilby@c-24-20-208-106.hsd1.or.comcast.net) (Remote host closed the connection)
[23:16:33] *** Joins: rpkilby (~rpkilby@ec2-34-252-84-235.eu-west-1.compute.amazonaws.com)
[23:17:22] *** Joins: fr_sleepy (~fr_sleepy@209.94.138.128)
[23:18:58] *** Joins: adiKt (uid472628@id-472628.tinside.irccloud.com)
[23:19:08] *** Quits: spac3 (~space@142.126.128.74) (Quit: Leaving)
[23:20:08] <yacatuco> Hi, I am writing a Python app using asyncio. It communicates with another application over an UNIX socket and at one point I need to send some file descriptors over that connection (in C I would be calling sendmsg here).
[23:20:54] *** Quits: vulpes_vulpes (~vulpes_vu@62-64-207-88.dynamic.dial.as9105.com) (Remote host closed the connection)
[23:20:55] <yacatuco> Unfortunatelly, I can not find how to do that using asyncio. I don't see how to send ancillary data.
[23:21:03] <yacatuco> Am I missing something?
[23:22:00] *** Joins: Guest3298 (~root@5.2.79.79)
[23:22:47] <yacatuco> Alternatively, is there any way to get the OS file descriptor associated to a asyncio stream?
[23:23:54] *** Joins: shibboleth (~shibbolet@user/shibboleth)
[23:24:18] *** Quits: marenz (~marenz@dynamic-078-055-179-150.78.55.pool.telefonica.de) (Read error: Connection reset by peer)
[23:27:24] *** Joins: blei (~blei@user/blei)
[23:27:49] *** Quits: argoneus (~argoneus@argoneus.com) (Quit: Ping timeout (120 seconds))
[23:28:03] *** Joins: argoneus (~argoneus@argoneus.com)
[23:28:18] <cowsay-moo> I have a models.py and worker.py module. changing certain properties in models.py triggers methods in worker.py.  therefore, models.py imports worker.py.  However, worker.py occasionally needs to do type() check on one of the model classes.  But I can't do that because that requires worker.py to import models.py, which creates a circular import. How the heck do I get around this?
[23:29:03] *** Joins: EdFletcher (~PKD@user/edfletcher)
[23:29:41] <cowsay-moo> All I need to do, is allow worker.py to check:  if type(Thing) is models.SomeModel: do work .. but I can't, because worker.py can't import models.py
[23:29:51] *** Joins: Masterphi (~Masterphi@user/masterphi)
[23:29:58] <SaltHilStroller_> Am I crazy? What's syntatically wrong with `print(f":{pre}-{shortname}-{key}: {value}")` on https://extendsclass.com/python-tester.html
[23:30:20] *** Joins: pyeveryt_ (~pyeveryth@dot1x-155-41-160-40.bumc.bu.edu)
[23:30:31] *** Joins: bahamas (~lucian@84.232.140.158)
[23:31:21] <SnoopJ> SaltHilStroller_, it's using something from before Python 3.6
[23:31:29] *** Quits: roxfan (~roxfan@2a02:a03f:a2be:4f00:51a:35a2:9d4e:fbfc) (Ping timeout: 256 seconds)
[23:31:49] <SaltHilStroller_> SnoopJ: Oh, duh
[23:32:41] *** Quits: slav0nic_ (slav0nic@python.su) (Remote host closed the connection)
[23:32:43] *** Joins: Lord_of_Life_ (~Lord@user/lord-of-life/x-2819915)
[23:32:59] *** Joins: slav0nic_ (slav0nic@python.su)
[23:33:04] <BSaboia> Is Python 3.10.* "production grade" now?
[23:33:04] *** Joins: Auron (Auron956@user/auron)
[23:33:30] <SnoopJ> BSaboia, that depends on what your definition of "production grade" is and why you think it didn't meet the bar previously
[23:33:45] *** Quits: Lord_of_Life (~Lord@user/lord-of-life/x-2819915) (Ping timeout: 252 seconds)
[23:33:47] *** Joins: Everything (~Everythin@37.115.210.35)
[23:33:59] *** Lord_of_Life_ is now known as Lord_of_Life
[23:34:02] *** Quits: paul424 (~tom@ip-5-172-234-217.multi.internet.cyfrowypolsat.pl) (Remote host closed the connection)
[23:34:09] <SnoopJ> Actively maintained libraries have certainly had a while to get their releases out for it
[23:34:32] *** Quits: rinzewind (~rinzewind@user/rinzewind) (Quit: leaving)
[23:35:24] *** Quits: jay-m1261 (~jay-m@154.126.169.74) (Ping timeout: 252 seconds)
[23:35:24] *** Quits: jay-m126 (~jay-m@154.126.169.74) (Ping timeout: 252 seconds)
[23:35:36] <BSaboia> SnoopJ, anything that the Python committee itself declare as not dev
[23:35:46] *** Quits: jay-m126_ (~jay-m@154.126.169.74) (Ping timeout: 250 seconds)
[23:36:40] <SnoopJ> BSaboia, under that definition, then 3.10.0 is "production grade"
[23:36:49] <BSaboia> SnoopJ, good
[23:37:17] <BSaboia> So annotations are still in __future__
[23:37:49] *** Quits: mtk_ (~mtk@2601:185:200:70:20c:29ff:fe3e:59e4) (Remote host closed the connection)
[23:38:02] *** Quits: mon_aaraj (~MonAaraj@user/mon-aaraj/x-4416475) (Ping timeout: 240 seconds)
[23:40:09] <SnoopJ> BSaboia, no, annotations themselves have been part of the language for a long time. When you `from __future__ import annotations` you are enabling the functionality described in PEP 563: https://peps.python.org/pep-0563/
[23:40:17] <SnoopJ> (it's not named very well)
[23:42:08] *** Quits: fedenix (~fedenix@gateway/tor-sasl/fedenix) (Remote host closed the connection)
[23:42:28] *** Joins: fedenix (~fedenix@gateway/tor-sasl/fedenix)
[23:44:45] *** Quits: dreamon (~dreamon@p57a4c768.dip0.t-ipconnect.de) (Ping timeout: 256 seconds)
[23:46:48] *** Joins: Klinda (~superleag@user/klinda)
[23:47:45] *** Joins: mtk (~mtk@2601:185:200:70:20c:29ff:fe3e:59e4)
[23:48:24] *** Joins: merijn (~merijn@c-001-001-001.client.esciencecenter.eduvpn.nl)
[23:48:31] *** stella is now known as PoshSplice
[23:48:33] *** Quits: ghost43 (~ghost43@gateway/tor-sasl/ghost43) (Remote host closed the connection)
[23:49:15] *** Quits: fef (~thedawn@user/thedawn) (Ping timeout: 240 seconds)
[23:49:19] *** Joins: ghost43 (~ghost43@gateway/tor-sasl/ghost43)
[23:49:30] *** PoshSplice is now known as frau_dr_aoei
[23:50:13] <flower_> I've a setuptools test project here. Seems to build and install fine, but when I want to import the package as module it says module not found. https://codeberg.org/avlap/setuptools_test
[23:51:01] <exarkun> That URL is a 404
[23:51:10] *** Joins: mon_aaraj (~MonAaraj@user/mon-aaraj/x-4416475)
[23:51:54] <flower_> hm
[23:52:32] *** Quits: Seirdy (~Seirdy@sourcehut/user/seirdy) (Ping timeout: 240 seconds)
[23:52:41] *** Joins: rpkilby_ (~rpkilby@c-24-20-208-106.hsd1.or.comcast.net)
[23:52:52] *** Quits: Narrat (~omnius@p200300df5f13efa406ea56fffe2e7cdc.dip0.t-ipconnect.de) (Quit: They say a little knowledge is a dangerous thing, but it's not one half so bad as a lot of ignorance.)
[23:53:09] *** Joins: nuclearg1 (~nucleargr@user/nuclearg1)
[23:54:44] *** Joins: Guest95 (~Guest95@154.72.163.179)
[23:55:15] *** Quits: crashrep (~crashrep@user/crashrep) (Ping timeout: 240 seconds)
[23:55:25] *** Quits: schumaml (~schumaml@dslb-188-104-182-181.188.104.pools.vodafone-ip.de) (Ping timeout: 240 seconds)
[23:56:02] *** Quits: rpkilby (~rpkilby@ec2-34-252-84-235.eu-west-1.compute.amazonaws.com) (Ping timeout: 240 seconds)
[23:56:35] *** Quits: boris_ (m-vwhg2g@152.70.163.76) (Remote host closed the connection)
[23:56:39] *** Quits: BrokenCog (~BrokenCog@c-73-92-151-140.hsd1.ca.comcast.net) (Ping timeout: 256 seconds)
[23:56:42] *** Joins: uxemacs (~timothy@user/uxemacs)
[23:57:25] *** Joins: schumaml (~schumaml@dslb-092-074-001-254.092.074.pools.vodafone-ip.de)
[23:57:47] *** Quits: nuclearg1 (~nucleargr@user/nuclearg1) (Ping timeout: 256 seconds)
[23:57:59] *** Joins: boris_ (m-vwhg2g@152.70.163.76)
[23:58:17] *** Quits: mon_aaraj (~MonAaraj@user/mon-aaraj/x-4416475) (Ping timeout: 240 seconds)
[23:59:49] <BSaboia> SnoopJ, alright thanks for the info and the link as well
