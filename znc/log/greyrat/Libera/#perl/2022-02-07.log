[00:00:54] <ilmari> also, the `$retVal` variable is rather pointless, just `return 0;` if you haven't got any rows
[00:01:48] <ilmari> or `1` or whatever. I don't know what the semantics of the return value of the validator checks are
[00:02:07] <ilmari> the point is, just `return` as soon as you know what the result is
[00:02:17] *** Joins: donofrio (~donofrio@c-68-40-123-74.hsd1.mi.comcast.net)
[00:03:23] *** Quits: krismatrix (~krismatri@38.80.149.51) (Ping timeout: 256 seconds)
[00:08:59] *** Quits: rgrinberg (~textual@2806:101e:7:6bed:d154:b93f:c8:b39) (Quit: My MacBook has gone to sleep. ZZZzzz…)
[00:13:45] <ether> good old Little Bobby Tables
[00:19:43] *** Joins: EvanCarroll (~ecarroll@68-78-105-35.lightspeed.hstntx.sbcglobal.net)
[00:20:57] *** Quits: geowiesnot (~user@5-51-190-244.abo.bbox.fr) (Ping timeout: 240 seconds)
[00:26:28] * GumbyPAN CPAN Upload: Barcode-ZBar-0.07-TRIAL by TIMLEGGE https://metacpan.org/release/TIMLEGGE/Barcode-ZBar-0.07-TRIAL
[00:26:32] *** Quits: mmlj4 (~mmlj4@ip174-69-109-162.no.no.cox.net) (Ping timeout: 240 seconds)
[00:28:40] *** Joins: deadmarshal (~deadmarsh@95.38.112.249)
[00:30:32] *** Quits: kensanata (~user@user/kensanata) (Remote host closed the connection)
[00:33:05] *** Quits: deadmarshal (~deadmarsh@95.38.112.249) (Ping timeout: 256 seconds)
[00:36:57] *** Joins: bs338 (~pi@host159-180-115-59.range159-180.btcentralplus.com)
[00:38:57] *** Joins: zamanf (~dev@213.133.91.246)
[00:39:37] *** Quits: xenial-user10 (~androirc@3EC97C6F.catv.pool.telekom.hu) (Ping timeout: 240 seconds)
[00:46:07] *** Quits: zamanf (~dev@213.133.91.246) (Ping timeout: 256 seconds)
[00:46:47] *** Quits: proller (~p@80.240.216.69) (Ping timeout: 256 seconds)
[00:49:30] *** Quits: magla (~gelignite@55d4c694.access.ecotel.net) (Quit: Stay safe!)
[00:51:33] *** Quits: bs338 (~pi@host159-180-115-59.range159-180.btcentralplus.com) (Ping timeout: 256 seconds)
[00:59:27] *** Joins: proller (~p@80.240.216.69)
[01:01:44] *** Joins: rgrinberg (~textual@2806:101e:7:6bed:d154:b93f:c8:b39)
[01:04:23] *** Joins: krismatrix (~krismatri@38.80.149.51)
[01:04:36] <krismatrix> oh..thank you.
[01:07:09] <krismatrix> I stored it in $hash. But $auth->verify_password($value, $hash) do not match. 
[01:08:12] *** Joins: jmdaemon (~jmdaemon@user/jmdaemon)
[01:11:23] <vague> Maybe you need to show your current code
[01:12:35] *** Quits: zer0bitz (~zer0bitz@2001:2003:f74d:b800:90d6:f3c8:741b:677a) (Ping timeout: 250 seconds)
[01:12:48] <krismatrix> https://l.perl.bot/p/bvgggc
[01:12:49] <Paperbot_> Link title(s): [ Perlbot Pastebin ]
[01:12:51] <krismatrix> There you go.
[01:13:43] *** Joins: jaggz (~jaggz@user/jaggz)
[01:13:50] <krismatrix> Here is the signup system: https://l.perl.bot/p/tapgku
[01:13:51] <Paperbot_> Link title(s): [ Perlbot Pastebin ]
[01:13:59] <krismatrix> if it helps.
[01:14:00] <jaggz> (?:(\d)\D)+
[01:14:56] <jaggz> can you get a bunch of backrefs assigned, like that, where the string "1a2b3d" would yield $1 = '2',  $2 = '2', $3 = '3' ?
[01:15:09] <jaggz> (not the best chars in that example huh)
[01:17:48] <vague> krismatrix, that first paste looks like the old code, where are you saving the value in $hash?
[01:21:41] <krismatrix> shoot...did I copy incorrectly..hold on.
[01:21:54] <vague> jaggz, why do you need backrefs? Just /(\d)\D/g should be enough (to match that example). Maybe I should ask 'what do you mean by backrefs?'
[01:22:35] <krismatrix> https://l.perl.bot/p/plvyw7
[01:22:36] <Paperbot_> Link title(s): [ Perlbot Pastebin ]
[01:25:32] <jaggz> vague, hm.. I mean capture groups
[01:25:34] <vague> krismatrix, can you verify the hash is correct in the database? Are you using the correct values for the encoder?
[01:25:43] <jaggz> all in one pattern without looping 'externally' 
[01:26:08] <krismatrix> how would I verify the hash is correct in the database?
[01:26:31] <vague> How is it saved in the database?
[01:28:31] <krismatrix> https://l.perl.bot/p/aunkpm
[01:28:32] <Paperbot_> Link title(s): [ Perlbot Pastebin ]
[01:28:40] <krismatrix> This is the storeUserData() function..
[01:28:45] <krismatrix> let me see how I can share that.
[01:29:44] <krismatrix> SELECT * From userdata;
[01:29:44] <krismatrix>  user_id | username |             email             |                                   password                                   | paiduser 
[01:29:44] <krismatrix> ---------+----------+-------------------------------+------------------------------------------------------------------------------+----------
[01:29:44] <krismatrix>        1 | kris     | test@gmail.com | $argon2id$v=19$m=16384,t=1,p=4$L7Q14XalNNpf9OEc0eVNYg$zNbqIY6jhCMZX7i5OeF7Qg | f
[01:30:01] *** Quits: CatCow (~wtf_over@c-73-96-109-206.hsd1.or.comcast.net) (Quit: My MacBook Air has gone to sleep. ZZZzzz…)
[01:30:20] <ilmari> krismatrix: don't paste in the channel
[01:30:43] <simcop2387> krismatrix: i'll have my Quadro RTX A5000 cranking on that this weekend
[01:30:52] <vague> ilmari will be more knowledgeable about this :)
[01:30:59] <krismatrix> sorry..i was planning on just sharing a line...it was an accident.
[01:31:09] <krismatrix> What is it about Quadro RTX?
[01:31:23] <ilmari> vague: nah, I know nothing about this beyond what I'm reading in the docs as I go
[01:31:33] <simcop2387> krismatrix: i bought a fancy graphics card and will need tasks to stress test it :)
[01:31:47] <vague> I suspect you still know more than I do :P
[01:31:51] <simcop2387> joking though
[01:32:01] *** Quits: bbrtj (~bbrtj@185.24.91.138) (Ping timeout: 256 seconds)
[01:32:10] <krismatrix> yeah..but what were you wanting to stress test? Brute forcing the hash?
[01:32:19] <simcop2387> yea that's what i was joking about
[01:32:21] <krismatrix> (*trying to get the joke*) 
[01:32:27] <krismatrix> ok.. got it.
[01:34:01] <simcop2387> it'll be a fun weekend with it once the new server is built, main tasks are going to be 1) Resizing cartoons with ESRGAN from DVD Rips 2) Retraining speech syntesis models (tacotron2 likely) from said cartoons also 3) not sure yet, maybe run nvidia's jarvis for a bit of fun?
[01:34:10] <ilmari> krismatrix: and you've verified that the valid_pw callback gets called with the parameters you're expecting? where does the `$username` come from?
[01:34:46] <krismatrix> I am testing this by entering username and password on the form (in localhost:3000/someroute)
[01:35:16] <krismatrix> I have also rested (if you happenned to uncomment some of the lines) that the code prior to arriving at the auth lines see exactly the password and username I am sending.
[01:35:56] <ilmari> the callback returns 1 when the user does not exist or the password is wrong, is that correct?
[01:35:57] <krismatrix> The 'problem' seems to be (i think) than when verify the hash...the salted hash created on signup will be different from the signin salted hash.
[01:36:10] <ilmari> the Mojolicious::Validator docs are rather sparse
[01:36:10] <krismatrix> correct. But the user does exist.
[01:36:23] <krismatrix> and the password matches.
[01:36:40] <krismatrix> I suspect I am doing a logical error where the salt or hash function is not the same between sign up and sign in.
[01:36:41] * ilmari would expect it to return true if it's valid and false if it's not …
[01:37:49] <krismatrix> doesn't return true or false. Right now the $auth->verify_password(..) returns empty.
[01:38:41] *** Quits: k-man (~jason@user/k-man) (Quit: WeeChat 3.4)
[01:38:47] <ilmari> empty (if you mean empty string) is false
[01:39:03] <krismatrix> right...which it shouldn't be.
[01:40:10] <El_Che> lll
[01:40:47] <ilmari> krismatrix: and you are getting a user back from the DB query, and the its password field is what you expect?
[01:42:08] <krismatrix> There is a username called 'kris' and as for password in the database, the password isn't in the database. What IS in the database in the hash that comes from Crypt::Passphrase which includes the salt.
[01:42:35] <ilmari> and you are getting that hash back from the query in the check_pw function?
[01:42:55] <ilmari> yes, that is what I meant. but you called the column password, so that was what I was referring to
[01:43:22] <ilmari> you haven't told us anything about what those debug prints in your code actually output
[01:43:51] <krismatrix> ok..let me grab them.
[01:44:12] <ilmari> or you could answer my questions …
[01:44:54] <ilmari> I didn't ask what was in the database, I asked what the query in the check_pw function was returning
[01:46:12] <krismatrix> it returns what is in the database. Is that your question?
[01:48:52] <jdv> can it return waffles instead?  much more tasty and useful.
[01:49:20] <ilmari> fcan you put `print "'$username', '$value', '$hash'";` just before the ->check_password call and show us the output?
[01:49:29] <ilmari> s/^f//
[01:50:10] <krismatrix> https://l.perl.bot/p/qgokug
[01:50:11] <Paperbot_> Link title(s): [ Perlbot Pastebin ]
[01:50:57] <krismatrix> you mean just before ->verify_password...right?
[01:51:16] <ilmari> yes
[01:51:32] <krismatrix> good. The previous link has them.
[01:51:40] <vague> Maybe use labels for the printed values because that doesn't look anything like what ilmari asked for
[01:52:34] <ilmari> that password does indeed not satisfy that hash
[01:53:00] <krismatrix> The first line is the hash value in the database that was created on sign up. The name:password,value:1234,username:kris is the entries in the form on signin.
[01:53:09] <krismatrix> ilmari...yes...i don't understand why.
[01:53:54] <ilmari> krismatrix: because it's not the same password that was encoded?
[01:54:04] <ilmari> s/encoded/hashed/
[01:54:28] <krismatrix> uh...
[01:54:32] <krismatrix> It should be the same.
[01:56:16] *** Joins: k-man (~jason@user/k-man)
[01:56:55] <x5c30> your hash seems short/invalid (like maybe truncated), what is the password column in the db table (varchar(..), text, ..)?
[01:57:35] <simcop2387> cat question: why do all my cats get upset that i'm brushing my hair?
[01:57:45] <krismatrix> i think you guys might have found the problem. Let me dig a bit further.
[01:57:53] <mason> simcop2387: Because you're bald and they hate the scratching noise?
[01:58:18] <ilmari> x5c30: it looks valid to me ->hash_password with the same parameters returns a string of the same length (76 characters)
[01:58:19] <simcop2387> mason: nope, decent length hair, they all steal my brushes when i'm doing it.
[01:59:00] <mason> Cats can take offense without visible cause. It's part of their thing.
[01:59:01] <simcop2387> current cat will come from accross the apartment to demand that i stop brushing my hair and brush him even if he was napping, but when i brush him he doesn't like it as much
[02:00:21] <simcop2387> but he also does the absolutely adorable thing of setting a paw on you to get your attention too
[02:00:59] <ilmari> krismatrix: I asked for the values of those variables in the check_pw callback
[02:01:06] <ilmari> not what you _think_ they should be
[02:01:14] <krismatrix> I fixed the problem.
[02:01:27] <krismatrix> The problem was in signup...I was not hashing properly.
[02:01:39] <krismatrix> You were right.
[02:01:44] <simcop2387> krismatrix++
[02:01:52] <krismatrix> thank you.
[02:02:43] <ology> tenaciousness
[02:05:03] <ilmari> krismatrix: instead of creating the object every time in both places, define a helper on your app that does it once: `helper auth => sub { state $auth = Crypt::Passphrase->new( … ) };`
[02:05:18] <krismatrix> good idea. I will do that.
[02:05:22] <jdv> what is the perl version of pythonista?
[02:05:27] <jdv> monger?
[02:08:05] <ilmari> krismatrix: also, there's no point in wrappinga single INSERT in a transaction
[02:08:31] <krismatrix> yeah....i realize that now. Just something I did before I understood what it was.
[02:09:53] <simcop2387> mason: https://www.omeowgle.com/web/@buzz/107753447260628119
[02:09:53] <Paperbot_> Link title(s): [ Buzz "Light-year" Aldrin: "" - Omeowgle <https://www.omeowgle.com/@buzz/107753447260628119> ]
[02:11:48] <x5c30> oops, i tested a different output size. thanks ilmari, sorry for the noise.
[02:12:20] <mason> simcop2387: Argh, I really need to get into Mastodon.
[02:12:25] *** Joins: bs338 (~pi@host159-180-115-59.range159-180.btcentralplus.com)
[02:12:58] <simcop2387> mason: if you set one up that only has cats i'll federate it on omeowgle
[02:13:45] <simcop2387> 3
[02:14:25] <simcop2387> and cat
[02:16:42] *** Joins: llh (~llh@user/llh)
[02:20:17] *** Quits: bs338 (~pi@host159-180-115-59.range159-180.btcentralplus.com) (Ping timeout: 256 seconds)
[02:22:28] *** Joins: CatCow (~wtf_over@c-73-96-109-206.hsd1.or.comcast.net)
[02:31:07] *** Quits: rgrinberg (~textual@2806:101e:7:6bed:d154:b93f:c8:b39) (Quit: My MacBook has gone to sleep. ZZZzzz…)
[02:33:33] *** Quits: pizdets (~pizdets@183.182.111.45) (Ping timeout: 256 seconds)
[02:34:16] *** Joins: pizdets (~pizdets@183.182.110.149)
[02:37:17] *** Quits: Pali (~pali@user/pali) (Ping timeout: 256 seconds)
[02:38:26] *** Quits: krismatrix (~krismatri@38.80.149.51) (Quit: Leaving)
[02:44:55] *** Quits: proller (~p@80.240.216.69) (Quit: Leaving)
[02:45:00] *** Joins: Pali (~pali@user/pali)
[02:45:08] *** Joins: proller (~p@80.240.216.69)
[02:47:46] *** Quits: Pali (~pali@user/pali) (Read error: Connection reset by peer)
[02:51:38] *** Quits: jmdaemon (~jmdaemon@user/jmdaemon) (Ping timeout: 250 seconds)
[02:55:11] *** Joins: Pali (~pali@user/pali)
[03:13:18] *** Parts: jaggz (~jaggz@user/jaggz) (Leaving)
[03:20:57] *** Quits: proller (~p@80.240.216.69) (Ping timeout: 240 seconds)
[03:22:21] *** Joins: bs338 (~pi@host159-180-115-59.range159-180.btcentralplus.com)
[03:26:10] *** Quits: rindolf (~shlomif@inkscape/dev/shlomif) (Read error: Connection reset by peer)
[03:31:47] * GumbyPAN CPAN Upload: Math-GMPf-0.46 by SISYPHUS https://metacpan.org/release/SISYPHUS/Math-GMPf-0.46
[03:31:49] *** Joins: mmlj4 (~mmlj4@ip174-69-109-162.no.no.cox.net)
[03:36:17] *** Quits: mmlj4 (~mmlj4@ip174-69-109-162.no.no.cox.net) (Ping timeout: 240 seconds)
[03:43:34] *** Joins: rindolf (~shlomif@inkscape/dev/shlomif)
[03:51:49] * GumbyPAN CPAN Upload: Math-GMPq-0.49 by SISYPHUS https://metacpan.org/release/SISYPHUS/Math-GMPq-0.49
[03:52:06] *** Joins: rgrinberg (~textual@187.223.115.137)
[04:02:21] *** Joins: geowiesnot (~user@5-51-190-244.abo.bbox.fr)
[04:05:05] *** Joins: idiocrash (~textual@216.73.163.42)
[04:06:06] *** Joins: gast0n (~g4570n@user/gast0n)
[04:09:31] *** Quits: Shells (~michelle@2407:8800:bc20:200a:f4fe:67a2:1fcb:42cf) (Ping timeout: 245 seconds)
[04:10:12] *** Joins: Shells (~michelle@2407:8800:bc20:200a:f4fe:67a2:1fcb:42cf)
[04:11:28] *** Joins: jx0 (~jx0@199.229.250.94)
[04:26:53] * GumbyPAN CPAN Upload: Math-GMPz-0.53 by SISYPHUS https://metacpan.org/release/SISYPHUS/Math-GMPz-0.53
[04:33:01] *** Joins: krismatrix (~krismatri@38.80.149.51)
[04:34:18] *** Quits: idiocrash (~textual@216.73.163.42) (Quit: Textual IRC Client: www.textualapp.com)
[04:36:00] <krismatrix> Question on a forgot password system. So for my account system, a user creates a username, email and password. If the user forgets his password he needs to use the  retrieval system. I was thinking a simple system would be simply to ask the user for an email and then email him the username and give him a temporary password. A lot of other sites separate username and password requests. Or might ask for additional information. What do you typically 
[04:36:01] <krismatrix> recommend?
[04:36:11] *** Quits: treefrob (~treefrob@p57a96ba4.dip0.t-ipconnect.de) (Ping timeout: 256 seconds)
[04:36:57] *** Shells is now known as Michelle
[04:37:40] <ether> you can do that, as long as that password can only be used once, and when they log in with it, they're redirected to the "change my password" page and they have to enter a new password immediately
[04:38:14] <krismatrix> yes. that makes sense.
[04:38:32] <krismatrix> I don't know whether I should implement an optional or mandatory 2FA system as well.
[04:38:35] <ether> so there's a few things on the back end to do there - you have to store in the user db that the password is for one time use, and then when it is used, delete that password entry and handle the redirect
[04:39:05] <ether> and also keep the user logged in with a session cookie until they're done (and make sure that cookie is properly invalidated afterwards too)
[04:39:38] <ether> iirc, I did something similar and the temporary password only worked for 10 minutes
[04:39:45] <ether> so if you were late getting the email, too bad, you need to reset again
[04:40:01] <ether> so an expiration timestamp gets stored in the user db too
[04:40:26] <ether> just don't use that timestamp to force the user to rotate their password every 3 months :) that's security theatre and a bad user experience
[04:40:38] <krismatrix> hmm...the expiration idea is good. I guess that means I need to add a new column in my database for user called pw_expire
[04:40:48] *** Quits: tirnanog (~tirnanog@user/tirnanog) (Quit: = "")
[04:40:49] <keir> "security theatre", i like that
[04:41:22] <ether> you could also store the expiration date in an encrypted cookie maybe
[04:41:33] <krismatrix> No. I don't want to require user to change password every 'x' months.
[04:44:23] <krismatrix> If I want to do a 2FA, is it ok to limit it to authenticator (such as google auth) based system, or is it necessary to implement sms based as well?
[04:45:29] *** Joins: XV8 (~XV8@c-73-148-120-152.hsd1.va.comcast.net)
[04:49:00] *** Joins: treefrob (~treefrob@pd9e2dc5a.dip0.t-ipconnect.de)
[04:56:10] *** Joins: jmdaemon (~jmdaemon@user/jmdaemon)
[04:59:16] <ether> I don't know the constraints of your system, so "required" is whatever you want it to be..
[04:59:30] <ether> but SMS auth is pretty bad and best avoided, especially if you're using a real auth system like google's
[04:59:43] <ether> s/required/necessary/
[05:00:11] <ether> SMS can be spoofed and is vulnerable to SIM hijacking
[05:00:18] <krismatrix> I don't know whether 2FA is worth in my system. But if I do implement it, I won't bother with SMS.
[05:02:21] *** Joins: mmlj4 (~mmlj4@ip174-69-109-162.no.no.cox.net)
[05:10:17] *** Quits: mmlj4 (~mmlj4@ip174-69-109-162.no.no.cox.net) (Ping timeout: 240 seconds)
[05:10:52] *** Quits: jx0 (~jx0@199.229.250.94) (Quit: poof!)
[05:11:05] *** Quits: geowiesnot (~user@5-51-190-244.abo.bbox.fr) (Ping timeout: 256 seconds)
[05:12:31] *** Joins: Adura (~Adura@user/adura)
[05:24:43] *** Joins: mmlj4 (~mmlj4@ip174-69-109-162.no.no.cox.net)
[05:33:59] *** Quits: mmlj4 (~mmlj4@ip174-69-109-162.no.no.cox.net) (Ping timeout: 256 seconds)
[05:34:41] *** Quits: dgdg (~dg_dg@gateway/vpn/pia/dgdg/x-00698222) (Remote host closed the connection)
[05:54:39] *** Joins: mmlj4 (~mmlj4@ip174-69-109-162.no.no.cox.net)
[05:56:54] <aquanight> I don't agree with forcing the password to be reset to a "temporary password"
[05:56:55] *** Quits: jmdaemon (~jmdaemon@user/jmdaemon) (Quit: ZNC 1.8.2 - https://znc.in)
[05:57:03] <aquanight> as this can be used maliciously to lock people out of their accounts
[05:57:31] <aquanight> alternative idea: when a password reset is initiated, store a separate "reset" code
[05:57:59] <aquanight> this is then provided to the reset UI flow, along with new password, to complete the reset
[05:58:16] <aquanight> until this is done, the old password remains valid (and in fact you could immediately invalidate the reset code if a normal login occurs)
[05:58:45] <aquanight> as for
[05:59:12] <aquanight> 18:15:14/C2B56 < krismatrix> If I want to do a 2FA, is it ok to limit it to authenticator (such as google auth) based system, or is it necessary to implement sms based as well? ## I agree with ether : do not do SMS 2FA
[05:59:16] <krismatrix> yeah...i am not replacing the original. The temporary password is simply going to allow you to login once and manually change your password
[05:59:17] <aquanight> in fact, I want SMS 2FA to die in a fire
[05:59:44] *** Joins: jmdaemon (~jmdaemon@user/jmdaemon)
[06:00:19] <krismatrix> It is actually a better option for me because then I don't have to pay to send sms messages.
[06:00:32] <aquanight> and that
[06:00:41] <aquanight> but SMS 2FA is vulnerable to SMS swapping attacks
[06:00:44] <aquanight> er
[06:00:47] <aquanight> SIM swapping
[06:01:03] <aquanight> and a lot of cell carriers are bad about not putting a damper on those
[06:01:30] <aquanight> use a proper authenticator, like google auth and I think there's a few others
[06:02:11] <krismatrix> well..i use google auth for client side. But I have to figure out how to implement the server side system. 
[06:02:22] <aquanight> I *think* it's just TOTP
[06:02:47] <aquanight> but the last time I messed with TOTP I either effed it up or it doesn't agree with google auth
[06:03:13] *** Quits: Su-Shee (~Susanne@p4ff49da6.dip0.t-ipconnect.de) (Ping timeout: 256 seconds)
[06:03:20] *** Joins: kitsunenokenja (~kitsunech@68.91.220.96)
[06:03:31] *** Quits: llh (~llh@user/llh) (Quit: :::: ( UPP ) ::::)
[06:04:50] *** Joins: Su-Shee (~Susanne@p4ffc7b6c.dip0.t-ipconnect.de)
[06:04:59] <aquanight> but supposedly
[06:05:02] <aquanight> https://metacpan.org/pod/Authen::TOTP
[06:05:02] <Paperbot_> Link title(s): [ Authen::TOTP - Interface to RFC6238 two factor authentication (2FA) - metacpan.org ]
[06:05:06] <aquanight> this is what you need
[06:05:29] *** Quits: Pali (~pali@user/pali) (Ping timeout: 256 seconds)
[06:06:19] <aquanight> https://metacpan.org/search?q=TOTP if you want some other options
[06:06:20] <Paperbot_> Link title(s): [ Search for "TOTP" - metacpan.org ]
[06:07:57] <krismatrix> I'll look into that. I am still trying to get the forgot password system working.
[06:10:42] <krismatrix> in mojo...there is a myapp/log/development.log. How do I write my own logs here?
[06:10:48] *** Joins: G_SabinoMullane (~G_SabinoM@pool-72-94-251-236.phlapa.fios.verizon.net)
[06:13:55] <aquanight> if you just want to add your own messages to that log
[06:13:58] <aquanight> you use $app->log
[06:14:18] <aquanight> which you can then use ->trace, ->info, ->error, etc
[06:14:50] <aquanight> if you want to make your own separate log you'd create a https://metacpan.org/pod/Mojo::Log object
[06:14:51] <Paperbot_> Link title(s): [ Mojo::Log - Simple logger - metacpan.org ]
[06:15:29] <aquanight> if you don't want to use mojo logging, then you're talking open my $fd, '>>', './log/mylog.log';
[06:17:19] <krismatrix> I am aware of Mojolog and regular open. But what I wanted to know about was the $app->log ->trace ->info...etc. Can you point me to the documentation that covers that?
[06:17:30] <aquanight> I just linked it
[06:17:42] <krismatrix> That is for Mojo::Log.
[06:17:44] <aquanight> the $app->log gives you a Mojo::Log object
[06:17:51] <krismatrix> OH..ok..i follow now.
[06:18:01] <aquanight> and if you don't want to use that one you have to make your own
[06:18:11] <krismatrix> right.
[06:18:41] <aquanight> as for 2FA via google auth two things:
[06:19:16] <aquanight> one: the AUthen::TOTP gives some examples of how to encode the authenticator data into a QR code which can be scanned into the GAuth app
[06:19:20] <aquanight> (and most others, for that matter)
[06:19:45] <aquanight> second: for the love of a christ please be on forced HTTPS
[06:20:17] <krismatrix> yeah. I am on https. or should be on production.
[06:20:19] <aquanight> you're having to provide the unencrypted secret to the client (because how else can the server and client synchronize)
[06:20:38] <aquanight> realistically nobody should be using unencrypted HTTP anymore
[06:21:18] <aquanight> if there's one thing I would've wished for HTTP 3.0, it would be making TLS mandatory (if they for some reason didn't do that)
[06:23:19] *** Joins: Guest20 (~Guest20@2806:108e:12:5c62:4176:9db1:f851:758d)
[06:33:15] *** Quits: Guest20 (~Guest20@2806:108e:12:5c62:4176:9db1:f851:758d) (Ping timeout: 256 seconds)
[06:47:51] *** Quits: gizmomathboy (~gizmomath@206.127.53.107) (Quit: Leaving)
[07:03:17] *** Joins: trillp (~trillp@149.28.241.196)
[07:13:02] *** Quits: rgrinberg (~textual@187.223.115.137) (Quit: My MacBook has gone to sleep. ZZZzzz…)
[07:15:52] *** Joins: finn_elija (~finn_elij@user/finn-elija/x-0085643)
[07:15:52] *** Quits: FinnElija (~finn_elij@user/finn-elija/x-0085643) (Killed (NickServ (Forcing logout FinnElija -> finn_elija)))
[07:15:52] *** finn_elija is now known as FinnElija
[07:17:07] *** Joins: whynot (~whynot@37.73.139.175)
[07:23:07] *** Quits: Peppard (~quassel@dynamic-077-004-164-247.77.4.pool.telefonica.de) (Ping timeout: 256 seconds)
[07:23:37] *** Joins: Peppard (~quassel@2001:470:1f0b:751:bd9e:a131:7568:3aaf)
[07:23:54] *** Quits: krismatrix (~krismatri@38.80.149.51) (Quit: Leaving)
[07:27:12] * GumbyPAN CPAN Upload: Math-MPFR-4.19 by SISYPHUS https://metacpan.org/release/SISYPHUS/Math-MPFR-4.19
[07:31:51] *** Quits: G_SabinoMullane (~G_SabinoM@pool-72-94-251-236.phlapa.fios.verizon.net) (Ping timeout: 256 seconds)
[07:42:13] * GumbyPAN CPAN Upload: qq-0.06 by RAJ https://metacpan.org/release/RAJ/qq-0.06
[07:47:16] <tm604> aquanight: mandatory HTTP encryption prevents caching in most cases - when signatures and other verification and handled out-of-band, plain HTTP is a useful protocol to have available
[07:47:31] <tm604> e.g. a few hundred Debian instances going through their update cycle
[07:51:38] *** Quits: rindolf (~shlomif@inkscape/dev/shlomif) (Read error: Connection reset by peer)
[07:54:48] *** Joins: Martchus (~martchus@2a01:c23:c044:8300:d250:99ff:fe49:3cce)
[07:55:45] *** Quits: Martchus_ (~martchus@dynamic-077-009-179-086.77.9.pool.telefonica.de) (Ping timeout: 256 seconds)
[08:02:29] *** Joins: rgrinberg (~textual@2806:101e:7:6bed:540b:bd79:8d25:836)
[08:03:16] <xenu> encryption is de facto required in http/2 because pretty much all implementations require it
[08:03:44] <xenu> btw, my main problem with tls is that it increases a number of roundtrips
[08:04:01] <xenu> but thankfully QUIC mostly solves that 
[08:09:12] *** Joins: rindolf (~shlomif@inkscape/dev/shlomif)
[08:15:21] *** Joins: deadmarshal (~deadmarsh@95.38.113.203)
[08:17:17] * GumbyPAN CPAN Upload: SPVM-0.9502 by KIMOTO https://metacpan.org/release/KIMOTO/SPVM-0.9502
[08:23:17] *** Quits: kitsunenokenja (~kitsunech@68.91.220.96) (Ping timeout: 240 seconds)
[08:39:16] *** Quits: slowButPresent (~slowButPr@user/slowbutpresent) (Quit: leaving)
[08:41:19] * GumbyPAN CPAN Upload: Math-Complex_C-L-0.08 by SISYPHUS https://metacpan.org/release/SISYPHUS/Math-Complex_C-L-0.08
[08:45:53] *** Joins: vanessa (~vanessa@103.160.128.7)
[08:46:20] * GumbyPAN CPAN Upload: Net-MAC-Vendor-1.268 by ETHER https://metacpan.org/release/ETHER/Net-MAC-Vendor-1.268
[09:11:42] *** Joins: dg_dg (~dg_dg@gateway/vpn/pia/dgdg/x-00698222)
[09:15:57] *** Quits: japh (~scp1@user/japh) (Ping timeout: 240 seconds)
[09:16:14] *** Joins: japh (~scp1@user/japh)
[09:17:35] *** Quits: deadmarshal (~deadmarsh@95.38.113.203) (Ping timeout: 256 seconds)
[09:25:48] *** Quits: trillp (~trillp@149.28.241.196) (Quit: nyaa~)
[09:26:17] *** Joins: deadmarshal (~deadmarsh@95.38.113.203)
[09:28:13] *** Joins: k8yun (~k8yun@198-48-158-40.cpe.pppoe.ca)
[09:29:41] *** Quits: whynot (~whynot@37.73.139.175) (Quit: leaving)
[09:30:51] *** Quits: seoul_man (~meh@097-087-062-229.res.spectrum.com) (Ping timeout: 256 seconds)
[09:40:48] *** Joins: mattil (~mattil@helsinki.portalify.com)
[09:41:29] *** Quits: gast0n (~g4570n@user/gast0n) (Quit: Bye, see you soon! 👋)
[09:42:23] *** Joins: seoul_man (~meh@097-087-062-229.res.spectrum.com)
[09:48:14] *** Quits: koo5_ (~quassel@51.140.155.227) (Quit: http://quassel-irc.org - Chat comfortably. Anywhere.)
[09:49:10] *** Joins: koo5_ (~quassel@51.140.155.227)
[10:06:34] *** Joins: andrzejku (~andrzejku@45-11-60-125.ip4.greenlan.pl)
[10:15:51] *** Quits: KnoP (~KnoP@p57b21514.dip0.t-ipconnect.de) (Quit: ChatZilla 0.10 [SeaMonkey 2.53.10.2/20211221193415])
[10:33:27] *** Quits: ircuser-1 (~Johnny@c-71-193-246-4.hsd1.or.comcast.net) (Quit: because)
[10:33:58] *** fling is now known as swing
[10:40:12] *** Quits: rgrinberg (~textual@2806:101e:7:6bed:540b:bd79:8d25:836) (Quit: My MacBook has gone to sleep. ZZZzzz…)
[10:44:27] *** Quits: andrzejku (~andrzejku@45-11-60-125.ip4.greenlan.pl) (Read error: Connection reset by peer)
[11:00:39] *** Quits: CatCow (~wtf_over@c-73-96-109-206.hsd1.or.comcast.net) (Quit: Textual IRC Client: www.textualapp.com)
[11:07:46] *** Quits: pj (~pj@ghettoforge/pj) (Ping timeout: 260 seconds)
[11:11:35] * GumbyPAN CPAN Upload: Lang-HL-Syntax-0.05 by RAJ https://metacpan.org/release/RAJ/Lang-HL-Syntax-0.05
[11:11:55] *** Quits: randir_ (~randir@2.92.196.208) (Remote host closed the connection)
[11:12:28] *** Joins: randir (~randir@2.92.196.208)
[11:12:47] *** Joins: jplesnik (~jplesnik@83.240.60.87)
[11:13:33] *** Joins: art1 (~romeyke@p200300ccdf069d0007ce6c38a62378c3.dip0.t-ipconnect.de)
[11:16:55] *** Quits: randir (~randir@2.92.196.208) (Ping timeout: 256 seconds)
[11:20:43] *** Joins: pj (~pj@ghettoforge/pj)
[11:25:32] *** Joins: randir (~randir@93.159.239.42)
[11:28:32] *** Joins: tobybl (~tobybl@214.242.200.146.dyn.plus.net)
[11:29:35] *** Joins: otisolsen70 (~otisolsen@xd4ed80b5.cust.hiper.dk)
[11:37:10] <Botje> xenu: doesn't TLS 1.3 already solve that?
[11:37:47] <Botje> ah, inspired by QUIC apparently
[11:38:46] *** Quits: k8yun (~k8yun@198-48-158-40.cpe.pppoe.ca) (Quit: Leaving)
[11:39:15] *** Quits: vanessa (~vanessa@103.160.128.7) (Ping timeout: 256 seconds)
[11:41:17] *** Joins: vanessa (~vanessa@103.160.128.7)
[11:52:17] *** Quits: ovid (~ovid@laubervilliers-659-1-13-124.w80-11.abo.wanadoo.fr) (Ping timeout: 256 seconds)
[11:52:17] *** Quits: Ovid__ (~Ovid@laubervilliers-659-1-13-124.w80-11.abo.wanadoo.fr) (Ping timeout: 256 seconds)
[11:52:39] *** Joins: Ovid (~Ovid@laubervilliers-659-1-13-124.w80-11.abo.wanadoo.fr)
[11:53:36] *** Joins: ovid_ (~ovid@laubervilliers-659-1-13-124.w80-11.abo.wanadoo.fr)
[11:55:21] *** Quits: donofrio (~donofrio@c-68-40-123-74.hsd1.mi.comcast.net) (Ping timeout: 256 seconds)
[11:56:59] *** Joins: Pali (~pali@user/pali)
[11:59:23] *** Joins: andrzejku (~andrzejku@45-11-60-125.ip4.greenlan.pl)
[12:09:03] <xenu> Botje: 0rtt from tls1.3 is vulnerable to replay attacks
[12:09:20] <xenu> while quic supports 0rtt, its main advantage is getting rid of tcp handshake
[12:10:00] <xenu> a quick overview of quic (:P): https://blog.cloudflare.com/the-road-to-quic/
[12:10:00] <Paperbot_> Link title(s): [ The Road to QUIC ]
[12:10:21] <xenu> supports 0rtt too*
[12:16:40] <xenu> to clarify: that vulnerability is by design and it's inherent to 0rtt, it's even described in the tls1.3 rfc
[12:19:31] <Botje> thanks, good to know
[12:19:51] <LeoNerd> xenu: ITYM "A quic overview"
[12:25:26] *** Joins: TweetiePooh (~richard@cpc75386-sotn16-2-0-cust456.15-1.cable.virginm.net)
[12:31:21] <Botje> I really want the successor to be called nesquic.
[12:50:30] *** Quits: edef (~edef@user/edef) (Ping timeout: 268 seconds)
[12:54:58] *** Joins: haj (~haj@ip5f5beb98.dynamic.kabel-deutschland.de)
[13:07:25] *** Quits: Nowaker (~quassel@188.116.38.80) (Ping timeout: 240 seconds)
[13:07:33] *** Joins: Nowaker (~quassel@188.116.38.80)
[13:09:04] <Altreus> Would it be owned by Nestlé? Cos then we'd have to boycott it
[13:09:45] <Altreus> Netquic ...
[13:09:59] <vague> It would Nestle it's way into your life anyway
[13:11:47] * GumbyPAN CPAN Upload: FCGI-Daemon-0.20220206 by AZJADFTRE https://metacpan.org/release/AZJADFTRE/FCGI-Daemon-0.20220206
[13:17:56] <Altreus> That blog post was well written - just enough information that I feel like I know what it is, and not so much information that I have any idea what it is
[13:18:13] <dg_dg> LeoNerd, i'm trying to run Tickit and i think it should have a problem with VBox widget. Can you try the demo-entry.pl exemple ? (on my sdide, as long as i let v_border and h_border options inside VBox widget, it is freezing).
[13:19:06] *** Joins: randir_ (~randir@93.159.239.42)
[13:19:06] *** Quits: randir (~randir@93.159.239.42) (Read error: Connection reset by peer)
[13:20:01] <LeoNerd> dg_dg: Ah; give me a few minutes and I'll take a look
[13:20:29] <dg_dg> sure, no problem. I can see you are the owner of the code (or the maintainer)
[13:21:17] <LeoNerd> I am
[13:21:54] <dg_dg> i'm trying some other demo and all the time i have a VBox widget defined with h_border and/or v_border arguments, there is a problem.
[13:22:35] <dg_dg> i'm using terminal Termite under Awesome Tiling Window Manager...
[13:22:56] <LeoNerd> examples/demo-entry.pl  doesn't have v_border or h_border in it
[13:22:59] <LeoNerd> What file are you looking at/
[13:23:07] <LeoNerd> Ohwait yes it does. heh.
[13:23:14] <dg_dg> actualy, demo-button.pl
[13:23:47] <LeoNerd> The button demo runs fine for me
[13:23:57] <dg_dg> ho sorry... not VBox, but Border widget
[13:24:09] <LeoNerd> Does print a warning about the legacy direct pen attribute which I should fix, but otherwise works OK
[13:24:11] <dg_dg> demo-entry.pl have it with both these args
[13:24:18] <dg_dg> v_border and h_border
[13:24:38] <LeoNerd> Yes but those are handled by Border
[13:25:02] <dg_dg> It is Tickit::Widget::Border, yes, my bad.
[13:25:18] <dg_dg> but still freeze at this arguments step of Border.
[13:25:43] <dg_dg> if i remove both of them (v_border and h_border) it is runing well.
[13:26:17] *** Quits: andrzejku (~andrzejku@45-11-60-125.ip4.greenlan.pl) (Read error: Connection reset by peer)
[13:26:49] * GumbyPAN CPAN Upload: Math-LongDouble-0.23 by SISYPHUS https://metacpan.org/release/SISYPHUS/Math-LongDouble-0.23
[13:26:51] <LeoNerd> Hmm... yes indeed
[13:27:04] <dg_dg> I don't know if this can have a relation with the problem but i'm under Linux Fedora-34 and using Awesome tiling window manager.
[13:27:14] <LeoNerd> none of that matters
[13:27:26] <dg_dg> ok. Do you have this same problem than me ?
[13:27:32] <LeoNerd> Yes. I said
[13:27:35] *** Joins: andrzejku (~andrzejku@45-11-60-125.ip4.greenlan.pl)
[13:27:37] <dg_dg> ok
[13:27:56] <Altreus> Anyone get anything from FOSDEM this year? I've become enamoured with Ada myself
[13:27:59] <dg_dg> i can not see any eror to, just freeze.
[13:28:03] <Altreus> looks good on the surface, anyway
[13:28:17] <Altreus> eh looks like on-topic is happening, mea culpa
[13:30:39] *** Joins: Adoi (~Adoi@user/adoi)
[13:35:24] *** Joins: geowiesnot (~user@5-51-190-244.abo.bbox.fr)
[13:37:59] <LeoNerd> dg_dg: Aheys, tiny bug fix. T:W:Border should call  $self->resized  in its `method children_changed`, not ->reshape
[13:38:33] <LeoNerd> I wonder why that doesn't come out in unit tests. Hrm
[13:39:44] <dg_dg> LeoNerd, i don't know, i'm looking inside your Border.pm file, but also inside the herited class...
[13:40:01] <Altreus> The only thing worse than tests is no tests
[13:40:39] <LeoNerd> Hm? That wasn't a question, it was a statement. It should be doing that. Change it that way and it'll work
[13:46:53] *** Joins: choroba (~E.Choroba@89-101-243-80.cust.centrio.cz)
[13:48:06] *** Joins: edef (~edef@user/edef)
[13:49:08] <Altreus> It occurs to me it's normal to say morning when a day starts, but there's no bigger word to say when the week starts
[13:49:53] <Altreus> Good weekbreak everyone o/
[13:49:57] <Altreus> nah
[13:50:31] <LeoNerd> Good News Everyone.. It's Monday
[13:52:17] *** Quits: edef (~edef@user/edef) (Ping timeout: 240 seconds)
[13:53:20] <dg_dg> LeoNerd, sorry but you resolve something there ?
[13:54:39] <dg_dg> I missunderstand... clearly, did you update something to fix the problem ?
[13:55:00] <dg_dg> i'm still llokking in the code to try to find a solution...
[13:55:04] <dg_dg> looking
[13:59:24] *** Quits: vague (~vague@irssi/staff/vague) (Quit: Memory upgrade)
[14:00:13] <Altreus> dg_dg: look in Tickit::Widget::Border, find children_changed, and change $self->reshape to $self->resized
[14:02:46] <dg_dg> Altreus, Done ! Fine, it's working like that.
[14:03:30] <dg_dg> LeoNerd, thank you for your code and to try it to find any bug, i really appreciate your help and humility. 
[14:03:42] <dg_dg> Altreus, thank you to for your great help to.
[14:04:03] <LeoNerd> dg_dg: I found a workaround for the bug, yes. You need to edit a line of the file
[14:04:06] <dg_dg> and... you are welcome.
[14:04:26] <LeoNerd> I've fixed it in my repo and it'll be in next release but that won't on its own help you yet
[14:04:52] <dg_dg> LeoNerd, it's ok, Altreus comunicate on the solution (if it is the same as yours).
[14:05:02] <LeoNerd> Ah, yes that's it
[14:05:04] <dg_dg> now it is working.
[14:05:25] <LeoNerd> 🙌
[14:05:41] *** Quits: Adoi (~Adoi@user/adoi) (Ping timeout: 256 seconds)
[14:05:42] <dg_dg> i will test deeper (and better  than anynon human tests) and will report if any other.
[14:07:30] *** Joins: Markow (~Markow@176.122.215.103)
[14:08:29] *** Joins: Shells (~michelle@203.206.128.220)
[14:11:05] *** Quits: Michelle (~michelle@2407:8800:bc20:200a:f4fe:67a2:1fcb:42cf) (Ping timeout: 250 seconds)
[14:21:48] *** Quits: andrzejku (~andrzejku@45-11-60-125.ip4.greenlan.pl) (Read error: Connection reset by peer)
[14:25:12] *** Joins: donofrio (~donofrio@c-68-40-123-74.hsd1.mi.comcast.net)
[14:25:49] <japh> can you fix my bugs as well, altreus?
[14:28:19] <Altreus> Sorry, I can only repeat other people's fixes
[14:30:51] *** Quits: dmvrtx (dmvrtx@2a01:7e01::f03c:92ff:fefd:6ed6) (Quit: ZNC 1.7.5+deb4 - https://znc.in)
[14:32:56] *** Joins: dmvrtx (~dmvrtx@znc.dmvrtx.me)
[14:33:20] *** Joins: edef (~edef@user/edef)
[14:38:19] *** Quits: geowiesnot (~user@5-51-190-244.abo.bbox.fr) (Ping timeout: 256 seconds)
[14:51:58] * GumbyPAN CPAN Upload: App-tldr-0.11 by SKAJI https://metacpan.org/release/SKAJI/App-tldr-0.11
[14:58:17] *** Quits: Markow (~Markow@176.122.215.103) (Quit: Linux 5.17.0-rc2-git-9f7fb8d-Pogorze-Karpackie-CUSTOM-KERNEL)
[14:59:11] <huf> why not cultivate bugs instead?
[15:01:04] *** Joins: Darkcoal (~user@user/Darkcoal)
[15:16:56] *** Quits: edef (~edef@user/edef) (Remote host closed the connection)
[15:16:57] *** Quits: seekr (~seekr@130.44.169.77) (Ping timeout: 240 seconds)
[15:25:10] *** Joins: G_SabinoMullane (~G_SabinoM@pool-72-94-251-236.phlapa.fios.verizon.net)
[15:29:29] *** Joins: edef (~edef@user/edef)
[15:30:17] *** Quits: csrf (~csrf@user/csrf) (Quit: ZNC 1.7.2+deb3 - https://znc.in)
[15:30:25] *** Quits: edef (~edef@user/edef) (Remote host closed the connection)
[15:31:02] *** Joins: csrf (~csrf@user/csrf)
[15:32:02] * GumbyPAN CPAN Upload: Sereal-4.019 by YVES https://metacpan.org/release/YVES/Sereal-4.019
[15:32:02] * GumbyPAN CPAN Upload: Sereal-Decoder-4.019 by YVES https://metacpan.org/release/YVES/Sereal-Decoder-4.019
[15:32:04] * GumbyPAN CPAN Upload: Sereal-Encoder-4.019 by YVES https://metacpan.org/release/YVES/Sereal-Encoder-4.019
[15:33:17] *** Quits: deadmarshal (~deadmarsh@95.38.113.203) (Ping timeout: 256 seconds)
[15:35:20] *** Joins: vague (~vague@irssi/staff/vague)
[15:37:03] * GumbyPAN CPAN Upload: Math-MPFI-0.10 by SISYPHUS https://metacpan.org/release/SISYPHUS/Math-MPFI-0.10
[15:37:52] <dg_dg> LeoNerd, with your Tickit, how to call a dialog box ?
[15:38:18] *** Joins: bmeneg (~Bruno@2001:1284:f01c:751a:d873:3e56:dca6:735b)
[15:39:42] *** Quits: bmeneg (~Bruno@2001:1284:f01c:751a:d873:3e56:dca6:735b) (Client Quit)
[15:40:00] *** Joins: bmeneg (~Bruno@2001:1284:f01c:751a:d873:3e56:dca6:735b)
[15:41:33] *** Quits: bmeneg (~Bruno@2001:1284:f01c:751a:d873:3e56:dca6:735b) (Client Quit)
[15:41:49] *** Joins: bmeneg (~Bruno@2001:1284:f01c:751a:d873:3e56:dca6:735b)
[15:41:59] *** Quits: bmeneg (~Bruno@2001:1284:f01c:751a:d873:3e56:dca6:735b) (Client Quit)
[15:42:02] *** Quits: vanessa (~vanessa@103.160.128.7) (Quit: WeeChat 3.4)
[15:42:03] * GumbyPAN CPAN Upload: Lang-HL-Syntax-0.07 by RAJ https://metacpan.org/release/RAJ/Lang-HL-Syntax-0.07
[15:43:33] *** Joins: bmeneg (~bmeneg@2001:1284:f01c:751a:d873:3e56:dca6:735b)
[15:44:06] *** Quits: Linux77 (~LinuMage@186.233.179.225) (Read error: Connection reset by peer)
[15:47:04] * GumbyPAN CPAN Upload: Math-MPC-1.14 by SISYPHUS https://metacpan.org/release/SISYPHUS/Math-MPC-1.14
[15:51:28] *** Joins: Linux77 (~LinuMage@186.233.179.225)
[15:52:57] <LeoNerd> dg_dg: There isn't one as such yet. It's been on my thoughts for a thing to create for a while though
[15:53:48] <dg_dg> and what is Tickit::Widget::FloatBox is using for ?
[15:54:38] <LeoNerd> Yes that's probably what Dialog would use
[15:54:58] <dg_dg> ok, i will going to try to build a dialog from there. Thank you.
[15:58:38] *** swing is now known as fling
[16:12:09] *** Quits: veesh (~veesh@89.237.97.239) (Ping timeout: 256 seconds)
[16:12:17] *** Joins: veesh (~veesh@89.237.97.239)
[16:16:04] *** Quits: BaltecoTroll (~ow@home.tic-tac.ru) (Quit: Leaving)
[16:18:03] *** Joins: edef (~edef@user/edef)
[16:19:07] *** Quits: depesz (~quassel@lana.depesz.com) (Quit: https://quassel-irc.org - Chat comfortably. Anywhere.)
[16:19:23] *** Joins: depesz (~quassel@lana.depesz.com)
[16:28:10] *** Quits: vague (~vague@irssi/staff/vague) (Quit: reboot)
[16:28:27] *** Joins: proller (~p@2a02:6b8:0:408:eef4:bbff:fe62:69c8)
[16:34:43] *** Quits: Woodzy (~quassel@198.204.246.228) (Ping timeout: 256 seconds)
[16:35:03] *** Joins: Woodzy (~quassel@198.204.246.228)
[16:36:49] *** Joins: andrzejku (~andrzejku@45-11-60-125.ip4.greenlan.pl)
[16:38:13] *** Quits: proller (~p@2a02:6b8:0:408:eef4:bbff:fe62:69c8) (Ping timeout: 240 seconds)
[16:43:38] *** Joins: vague (~vague@irssi/staff/vague)
[16:47:10] * GumbyPAN CPAN Upload: Amazon-Credentials-1.0.19 by BIGFOOT https://metacpan.org/release/BIGFOOT/Amazon-Credentials-1.0.19
[16:47:14] *** Joins: slowButPresent (~slowButPr@user/slowbutpresent)
[16:50:51] *** Joins: proller (~p@2a02:6b8:0:40c:5c0b:5f0f:95f3:a200)
[16:54:28] *** Quits: andrzejku (~andrzejku@45-11-60-125.ip4.greenlan.pl) (Read error: Connection reset by peer)
[16:55:00] *** Joins: deadmarshal (~deadmarsh@95.38.113.203)
[16:55:44] *** Joins: BaltecoTroll (~ow@home.tic-tac.ru)
[17:02:12] <ugexe> https://metacpan.org/dist/Test2-Harness - why does this return 404 now?
[17:02:29] *** Quits: G_SabinoMullane (~G_SabinoM@pool-72-94-251-236.phlapa.fios.verizon.net) (Ping timeout: 256 seconds)
[17:03:57] *** Joins: G_SabinoMullane (~G_SabinoM@pool-72-94-251-236.phlapa.fios.verizon.net)
[17:07:52] <alh> Something's weird with metacpan perhaps - I've bugged them in #metacpan on irc.perl.org
[17:14:39] *** Joins: rpath (~rpath@gateway/tor-sasl/rpath)
[17:17:14] * GumbyPAN CPAN Upload: Tickit-Widget-Menu-0.15 by PEVANS https://metacpan.org/release/PEVANS/Tickit-Widget-Menu-0.15
[17:19:45] *** Joins: dextercd (~dexter@2a02-a450-f25d-1-76d4-35ff-fefe-34c.fixed6.kpn.net)
[17:27:15] * GumbyPAN CPAN Upload: Tickit-Widget-Tabbed-0.026 by PEVANS https://metacpan.org/release/PEVANS/Tickit-Widget-Tabbed-0.026
[17:38:12] *** Quits: otisolsen70 (~otisolsen@xd4ed80b5.cust.hiper.dk) (Quit: Leaving)
[17:45:16] *** Quits: rpath (~rpath@gateway/tor-sasl/rpath) (Quit: Leaving)
[17:48:16] *** Joins: andrzejku (~andrzejku@45-11-60-125.ip4.greenlan.pl)
[17:48:49] *** Joins: rpath (~rpath@gateway/tor-sasl/rpath)
[17:49:43] *** Quits: rpath (~rpath@gateway/tor-sasl/rpath) (Client Quit)
[18:04:54] *** Quits: mattil (~mattil@helsinki.portalify.com) (Remote host closed the connection)
[18:04:58] *** Quits: seoul_man (~meh@097-087-062-229.res.spectrum.com) (Changing host)
[18:04:58] *** Joins: seoul_man (~meh@user/seoul-man/x-5066766)
[18:05:32] *** Quits: seoul_man (~meh@user/seoul-man/x-5066766) (Remote host closed the connection)
[18:05:40] *** Joins: mattil (~mattil@helsinki.portalify.com)
[18:05:55] *** Quits: mattil (~mattil@helsinki.portalify.com) (Remote host closed the connection)
[18:06:07] *** Joins: mattil (~mattil@helsinki.portalify.com)
[18:06:12] *** Quits: mattil (~mattil@helsinki.portalify.com) (Remote host closed the connection)
[18:07:03] *** Joins: mattil (~mattil@helsinki.portalify.com)
[18:11:58] *** Joins: krismatrix (~krismatri@38.80.149.51)
[18:12:02] *** Quits: mattil (~mattil@helsinki.portalify.com) (Ping timeout: 250 seconds)
[18:14:18] <krismatrix> I want to test pages that are within a signed in area. I assume that in order to test every page, I probably need to sign in every time? So maybe do something like my $signedIn = $r->get_ok(/signin)->status(200); And then use $signedin->get_ok(/dashboard)->content_like(...). Is that how one tests signed in areas?
[18:14:43] <Altreus> needs more contxt
[18:14:48] <Altreus> what's $r
[18:15:42] <alh> Test::WWW::Mechanize I'd wager 
[18:16:05] *** Joins: mattil (~mattil@d4qxt20bd7pp1tvy3sy-4.rev.dnainternet.fi)
[18:16:13] <alh> krismatrix: Roughly. Usually what I'd do is hide that authentication behind something. my $tester = get_authenticated_tester; $tester->...
[18:16:27] <alh> That way the authentication (which isn't important here) doesn't cloud the tests
[18:18:19] *** Quits: mattil (~mattil@d4qxt20bd7pp1tvy3sy-4.rev.dnainternet.fi) (Remote host closed the connection)
[18:18:19] <krismatrix> Alterus..referring to mojo's testing...let me double check that.
[18:19:03] <krismatrix> sorry..not $r but $t. where $t = Test::Mojo->new('MyApp');
[18:19:38] <krismatrix> alh I am not sure what you mean exactly.. isn't your $tester same as $signedin?
[18:20:02] <alh> It is
[18:20:09] <alh> Imagine your test is "Ensure this page reports these 5 items"
[18:20:15] <alh> And that page needs an authenticated tester
[18:20:25] <alh> If you have 5-6 lines of getting an authenticated tester, that's clutter that hides the true point of your test
[18:20:40] <alh> So what I do there is factor that authentication out (since most of my tests would need an authenticated tester)
[18:21:01] *** Quits: japh (~scp1@user/japh) (Ping timeout: 256 seconds)
[18:21:10] <Altreus> It should be saving sessions, surely?
[18:21:29] <krismatrix> The actual site or the testing?
[18:21:40] <Altreus> the test object $t
[18:21:41] <krismatrix> And by sessions...i assume you mean cookies right?
[18:21:56] <krismatrix> The test object is not yet doing that.
[18:22:05] <Altreus> Ah, well I think you can tell it to
[18:22:22] <Altreus> I've found that storing cookies is the easiest way of keeping things signed in
[18:22:37] <krismatrix> that is a good idea. Authenticate once and get the cookie. And after that use that cookie to check the other pages?
[18:22:49] *** Joins: diskin (~diskin@ec2-3-124-171-230.eu-central-1.compute.amazonaws.com)
[18:22:55] *** Joins: japh (~scp1@user/japh)
[18:22:57] <krismatrix> *not sure how to do that in code yet...but the idea makes sense.*
[18:23:11] <Altreus> Yeah, as long as you use the same $t it should send the cookies, and thus behave just like the browser
[18:23:38] *** Joins: mattil (~mattil@d4qxt20bd7pp1tvy3sy-4.rev.dnainternet.fi)
[18:23:40] <krismatrix> hmm...very interesting.
[18:23:47] <alh> Altreus: Yeah in our case tests are split across many files or subtests within a file where testers are scoped to code blocks
[18:24:18] *** Quits: mattil (~mattil@d4qxt20bd7pp1tvy3sy-4.rev.dnainternet.fi) (Remote host closed the connection)
[18:24:26] <krismatrix> I never thought I would enjoy writing tests.
[18:25:00] <krismatrix> And what is fun, is that it gives me ideas on any holes that might exist in my sytem.
[18:26:20] *** Joins: mattil (~mattil@d4qxt20bd7pp1tvy3sy-4.rev.dnainternet.fi)
[18:27:01] <Altreus> alh: well that's good
[18:27:09] <Altreus> You should log in once per test object!
[18:28:01] <alh> Usually do
[18:31:14] *** Joins: zamanf (~dev@213.133.91.246)
[18:31:14] *** Quits: zamanf (~dev@213.133.91.246) (Changing host)
[18:31:14] *** Joins: zamanf (~dev@user/zamanf)
[18:37:44] *** Joins: Adoi (~Adoi@user/adoi)
[18:39:46] *** Quits: G_SabinoMullane (~G_SabinoM@pool-72-94-251-236.phlapa.fios.verizon.net) (Ping timeout: 250 seconds)
[18:40:35] *** Quits: krismatrix (~krismatri@38.80.149.51) (Quit: Leaving)
[18:40:42] *** Joins: G_SabinoMullane (~G_SabinoM@pool-72-94-251-236.phlapa.fios.verizon.net)
[18:46:25] *** Quits: mattil (~mattil@d4qxt20bd7pp1tvy3sy-4.rev.dnainternet.fi) (Read error: Connection reset by peer)
[19:00:59] *** Quits: pj (~pj@ghettoforge/pj) (Ping timeout: 250 seconds)
[19:05:07] *** Quits: randir_ (~randir@93.159.239.42) (Remote host closed the connection)
[19:05:40] *** Joins: randir (~randir@93.159.239.42)
[19:06:25] * GumbyPAN CPAN Upload: Music-Intervals-0.0804 by GENE https://metacpan.org/release/GENE/Music-Intervals-0.0804
[19:10:19] *** Quits: randir (~randir@93.159.239.42) (Ping timeout: 256 seconds)
[19:12:01] *** Quits: veesh (~veesh@89.237.97.239) (Ping timeout: 256 seconds)
[19:12:24] *** Joins: veesh (~veesh@89.237.101.193)
[19:14:18] *** Joins: pj (~pj@ghettoforge/pj)
[19:16:37] *** Quits: gce108 (~gce@user/gce108) (Remote host closed the connection)
[19:17:25] <alh> ugexe: The metacpan folks reindexed and now Test2-Harness seems fine
[19:19:23] *** Quits: djerius (~quassel@pool-108-20-43-199.bstnma.fios.verizon.net) (Ping timeout: 256 seconds)
[19:20:31] *** Joins: djerius (~quassel@pool-108-20-43-199.bstnma.fios.verizon.net)
[19:22:39] *** Joins: Khosruw (~Khosruw@95.154.221.162)
[19:22:59] <Khosruw> hi everyone, is there any way to write this in a shorten form?
[19:23:02] <Khosruw> $login =~ $email_regex ? 'email' : 0 || $login =~ $mobile_regex ? 'mobile' : 0
[19:23:50] <Khosruw> because i've repeated the "0" return twice, and i think there may be a shorter way to write it.
[19:24:17] <pragma-> Make it more readable, not shorter. Split it into 3 or 4 concise lines.
[19:24:57] <Khosruw> something like this? ($login =~ $email_regex ? 'email' : 0) || ($login =~ $mobile_regex ? 'mobile' : 0)
[19:26:45] <Khosruw> got it!
[19:26:46] <Khosruw> my $login_type = 0;
[19:26:46] <Khosruw>         $login_type = 'email'  if $data->{login} =~ $email_regex;
[19:26:47] <Khosruw>         $login_type = 'mobile' if $data->{login} =~ $mobile_regex;
[19:28:33] *** Joins: seoul_man (~meh@user/seoul-man/x-5066766)
[19:30:36] *** Joins: randir (~randir@2.92.196.208)
[19:30:38] *** Quits: andrzejku (~andrzejku@45-11-60-125.ip4.greenlan.pl) (Read error: Connection reset by peer)
[19:30:42] <pragma-> This way, while slightly more verbose, doesn't invoke an unnecessary regex and it exhaustively checks login types: if ($data->{login} =~ $email_regex) { $login_type = 'email' } elsif ($data->{login} =~ $mobile_regex) { $login_type = 'mobile' } else { die "Unknown login type" } 
[19:33:54] <Khosruw> pragma-: so, to prevent using unnecessary second regex if the first one was "true", I should use the method you already said. right?
[19:35:37] <pragma-> It's up to you. Just offering another perspective. My method will still invoke the first regex if the second one matches, anyway. You still end up going down an if/else chain to find the matching regex. But at least it stops when it finds the right one instead of continuing to blindly try the remaining regexs, as in your snippet.
[19:36:13] *** Joins: monkey_ (~user@190.104.116.153)
[19:36:18] <pragma-> Not really such a big deal when there's only 2 cases, but...
[19:37:04] <alh> https://gist.github.com/wolfsage/8503142c80d926d22403bcc3f7252f12 is another option
[19:37:04] <Paperbot_> Link title(s): [ gist:8503142c80d926d22403bcc3f7252f12 · GitHub ]
[19:37:08] <Khosruw> pragma-: oh, right. thanks man++
[19:37:24] <alh> But if/else is probably clearest 
[19:37:30] *** Joins: rgrinberg (~textual@2806:101e:7:6bed:540b:bd79:8d25:836)
[19:37:47] <LeoNerd> Or Syntax::Keyword::Match
[19:38:07] <Khosruw> alh: i'm a one liner!
[19:38:07] <LeoNerd> If ever you have a bunch of if/elsif/... comparisons on the same value, you probably wanted match/case instead
[19:38:33] <Khosruw> LeoNerd: that's right, but at this situation, i only needed two statements
[19:40:15] *** Joins: gizmomathboy (~gizmomath@206.127.53.107)
[19:40:37] <xq> what does returning zero represent in your original code Khosruw ?
[19:43:32] <Khosruw> xq: 0 is just a concept. my login form has two method to log in (email and mobile number) and if the entered login token wasn't both of these, return an error
[19:45:47] *** Quits: jplesnik (~jplesnik@83.240.60.87) (Quit: Leaving)
[19:46:10] *** Quits: Khosruw (~Khosruw@95.154.221.162) (Quit: Client closed)
[19:46:55] *** Joins: Khosruw (~Khosruw@95.154.221.162)
[19:48:55] <Khosruw> thanks y'all about your worthy time you spent to help me:)  <3
[19:49:48] *** Joins: k8yun (~k8yun@24.244.29.102)
[19:49:57] *** Quits: pj (~pj@ghettoforge/pj) (Ping timeout: 240 seconds)
[19:56:02] *** Quits: haj (~haj@ip5f5beb98.dynamic.kabel-deutschland.de) (Ping timeout: 260 seconds)
[19:57:39] *** Joins: haj (~haj@ip5f5beb98.dynamic.kabel-deutschland.de)
[20:00:38] <genio> So, $company wants to allow some contractors access to our atlassian stuff.  Trying to configure Atlassian to set some sort of regulations on password complexity: "By default, we require all Atlassian account passwords to be a minimum of 8 characters. We do not enforce any other requirements around resets or expiration without an Atlassian Access subscription."
[20:00:40] <genio> ffs
[20:00:51] <genio> I _hate_ Atlassian soooooo much
[20:01:56] <vague> We've configures jira to use AD auth
[20:03:30] *** Joins: pj (~pj@ghettoforge/pj)
[20:03:35] <genio> in order to do that, you have to pay for Atlassian Access. We're using the Gsuite auth which uses AD auth
[20:04:11] <genio> That Atlassian Access is an extra $14,500 USD per year for our setup. 
[20:04:25] <genio> that gets us... nothing
[20:04:43] <genio> So, mighty middle finger
[20:04:59] <Khosruw> "$14,500 USD" JESUS CHRIST
[20:04:59] <vague> No idea how we've configured it. Thankfully I only run the linux server, not the software :P
[20:05:30] <genio> ah, we're on the cloud version.
[20:05:55] <Khosruw> they must rebrand Atlassian as Assholian
[20:06:32] <Altreus> While working for not-corporate companies I'd forgotten how much money corporations will throw at unsuitable software
[20:06:49] <Altreus> Atlassian happen to be the Enterprise Solution I now have to fight against daily
[20:08:36] *** Quits: rgrinberg (~textual@2806:101e:7:6bed:540b:bd79:8d25:836) (Quit: My MacBook has gone to sleep. ZZZzzz…)
[20:11:17] *** Quits: Adoi (~Adoi@user/adoi) (Ping timeout: 252 seconds)
[20:14:41] <bkhl> I'm so happy I could drop my Jira admin privileges after switching department recently. :-)
[20:14:57] *** Quits: pj (~pj@ghettoforge/pj) (Ping timeout: 240 seconds)
[20:15:11] *** Quits: tybalt89 (~rick@2600:8800:8d00:8100:2e0:4cff:fe68:617) (Remote host closed the connection)
[20:16:11] *** Joins: tybalt89 (~rick@2600:8800:8d00:8100:2e0:4cff:fe68:617)
[20:16:32] * GumbyPAN CPAN Upload: RT-Extension-ImportCustomFieldValues-0.01 by ELACOUR https://metacpan.org/release/ELACOUR/RT-Extension-ImportCustomFieldValues-0.01
[20:19:29] *** Quits: Khosruw (~Khosruw@95.154.221.162) (Quit: Client closed)
[20:25:57] *** Quits: bs338 (~pi@host159-180-115-59.range159-180.btcentralplus.com) (Ping timeout: 240 seconds)
[20:26:33] * GumbyPAN CPAN Upload: RT-Extension-ImportCustomFieldValues-0.02 by ELACOUR https://metacpan.org/release/ELACOUR/RT-Extension-ImportCustomFieldValues-0.02
[20:28:23] *** Joins: pj (~pj@ghettoforge/pj)
[20:30:27] <genio> 14.5k per year to have AD authentication is insane
[20:31:13] <Grinnz> wait till you see the government rates
[20:31:56] *** Joins: bs338 (~pi@host159-180-115-59.range159-180.btcentralplus.com)
[20:32:26] *** Joins: rgrinberg (~textual@187.223.115.137)
[20:34:39] *** Joins: zer0bitz (~zer0bitz@2001:2003:f74d:b800:bc81:ba25:7a70:67f2)
[20:37:12] *** Quits: bs338 (~pi@host159-180-115-59.range159-180.btcentralplus.com) (Ping timeout: 250 seconds)
[20:38:58] <simcop2387> i think i have a bad ethernet cable.  or something is misconfigured and i just don't see it
[20:39:48] *** Quits: tobybl (~tobybl@214.242.200.146.dyn.plus.net) (Remote host closed the connection)
[20:42:33] <lopid> there it is
[20:45:12] <pragma-> Yeah, and $14,500 is considered small by the bigger tech companies. A previous job site paid $1,500,000 to integrate a search api.
[20:45:16] *** Joins: hethw (~heth@46.238.32.56)
[20:45:51] *** Quits: hethw (~heth@46.238.32.56) (Client Quit)
[20:46:35] * GumbyPAN CPAN Upload: XML-RSSLite-0.16 by JPIERCE https://metacpan.org/release/JPIERCE/XML-RSSLite-0.16
[20:48:18] *** Quits: haj (~haj@ip5f5beb98.dynamic.kabel-deutschland.de) (Ping timeout: 260 seconds)
[21:03:42] *** Joins: haj (~haj@ip5f5beb98.dynamic.kabel-deutschland.de)
[21:03:54] *** Joins: geowiesnot (~user@5-51-190-244.abo.bbox.fr)
[21:06:52] *** Joins: e1f (~user@141.117.1.162)
[21:08:48] <simcop2387> backups++ i seem to be missing some files on my server and don't see why
[21:09:31] <lopid> O:)
[21:10:59] *** Joins: hethw (~heth@46.238.32.56)
[21:11:11] <simcop2387> positive it's me fucking up a disk clean up
[21:11:25] <hethw> hm. I was able to replace exit with BEGIN { *CORE::GLOBAL::exit = sub(;$) {}; }; but somehow I can't replace 'die' the same way
[21:11:38] * GumbyPAN CPAN Upload: Music-Intervals-0.0900 by GENE https://metacpan.org/release/GENE/Music-Intervals-0.0900
[21:12:59] <simcop2387> hethw: die is slight special iirc, i think you have to use another namespace?
[21:13:30] <hethw> simcop2387, I can only hope to understand what you mean
[21:13:41] <hethw> I stumbled upon: https://www.effectiveperlprogramming.com/2011/05/override-die-with-end-or-coreglobaldie/
[21:13:42] <Paperbot_> Link title(s): [ Override die with END or CORE::GLOBAL::die | The Effective Perler ]
[21:13:48] <hethw> which doesn't work sadly
[21:14:00] <hethw> maybe because it's for an older version
[21:15:35] *** Joins: Adoi (~Adoi@user/adoi)
[21:15:50] <simcop2387> hethw: test it with evalall in here
[21:15:56] <simcop2387> evalall: print "test";
[21:15:58] <perlbot> simcop2387: http://perl.bot/p/ikfxai
[21:16:08] <hethw> test what
[21:16:09] <simcop2387> that'll quickly test it on all major versions
[21:16:18] <simcop2387> trying to override die
[21:18:15] <simcop2387> eval: BEGIN { *CORE::GLOBAL::die = sub { say "In CORE::GLOBAL::die: [@_]" } }; die "one"; die "two";
[21:18:16] <hethw> sadly it works there
[21:18:17] <perlbot> simcop2387: In CORE::GLOBAL::die: [one] In CORE::GLOBAL::die: [two] 
[21:18:30] <hethw> so now I wonder why it doesn't work in my tests
[21:19:35] <Grinnz> you can use $SIG{__DIE__} instead, which is better because it will also fire when die isn't directly used (like in XS code or core exceptions)
[21:19:45] <hethw> also doesn't work
[21:19:46] <Grinnz> but all of this sucks and is way too global, just use try/catch if possible
[21:20:13] <Grinnz> explain "doesn't work"
[21:20:22] <hethw> well it doesn't replace anything
[21:20:29] <hethw> my program is still die ing
[21:20:55] <Grinnz> you're sure something is calling die?
[21:21:09] <Grinnz> there are many other ways a program can end
[21:21:24] <hethw> let me test
[21:22:02] <hethw> hm. so it overrides die localy
[21:22:13] <hethw> but not the die in the module I'm testing
[21:22:43] <simcop2387> is your begin line before the use?
[21:22:56] <hethw> no
[21:22:59] <hethw> it's after
[21:24:02] <simcop2387> that's why, use happens at the same time as begin
[21:24:09] <simcop2387> so the order in the file will matter
[21:24:13] <Grinnz> use parses as another BEGIN block
[21:24:14] *** Joins: dgdg (~dg_dg@gateway/vpn/pia/dgdg/x-00698222)
[21:24:18] <Grinnz> quite literally
[21:24:49] <simcop2387> i get another 128gb of ram and a new server this week :) i'm gonna have fun overloading it
[21:25:03] <hethw> perl will never ceaso to amaze me
[21:25:10] <hethw> cease*
[21:25:41] <hethw> since BEGIN { *CORE::GLOBAL::exit = sub(;$) {}; }; is in the end of test file, and it works
[21:25:45] *** Quits: dg_dg (~dg_dg@gateway/vpn/pia/dgdg/x-00698222) (Ping timeout: 256 seconds)
[21:26:03] <hethw> but for die it should be before use, that part I don't get
[21:27:11] <simcop2387> use Foo qw/ .... /; is basically the same as: BEGIN {require Foo; Foo->import(qw/ .... /); };  there's slightly more to it too but that's the basics.  so if it's before the BEGIN {} you want to override die with, then the override hasn't happened yet.
[21:27:53] <hethw> that's logical
[21:28:05] <hethw> but why it's not the same with exit
[21:29:09] *** Quits: dgdg (~dg_dg@gateway/vpn/pia/dgdg/x-00698222) (Ping timeout: 256 seconds)
[21:29:27] <simcop2387> it will be, the exit likely didn't get called until after the BEGIN phase of running the script
[21:30:42] *** Joins: bluray (~bluray@user/zapdos)
[21:30:58] <hethw> interesting
[21:30:59] <hethw> thanks
[21:31:33] *** Joins: bbrtj (~bbrtj@185.24.91.138)
[21:33:17] *** Quits: Adoi (~Adoi@user/adoi) (Ping timeout: 240 seconds)
[21:33:44] <hethw> is there a way then, to 'restore' this replacement later in the code?
[21:37:07] <LeoNerd> ?
[21:46:43] <rewt> save the original, and assign it back
[21:47:30] <LeoNerd> The original is probably empty
[21:48:01] <simcop2387> eval: my $orig_die = &CORE::die; $orig_die
[21:48:04] <perlbot> simcop2387: ERROR: Died at (IRC) line 1. 
[21:48:05] *** Quits: geowiesnot (~user@5-51-190-244.abo.bbox.fr) (Ping timeout: 256 seconds)
[21:48:11] <simcop2387> eval: my $orig_die = \&CORE::die; $orig_die
[21:48:13] <perlbot> simcop2387: sub { "DUMMY" }
[21:48:24] <simcop2387> eval: my $orig_die = \&CORE::die; $orig_die->("did he died?")
[21:48:25] <perlbot> simcop2387: ERROR: did he died? at (IRC) line 1. 
[21:48:40] <simcop2387> hethw: save that coderef first so you can swap it in again later
[21:51:15] <hethw> nice! thanks
[21:55:07] <mmlj4> can he spelled?
[21:58:17] *** Parts: art1 (~romeyke@p200300ccdf069d0007ce6c38a62378c3.dip0.t-ipconnect.de) ()
[21:59:00] *** Quits: k8yun (~k8yun@24.244.29.102) (Quit: Leaving)
[21:59:43] *** Quits: bbrtj (~bbrtj@185.24.91.138) (Ping timeout: 250 seconds)
[22:01:47] *** Quits: proller (~p@2a02:6b8:0:40c:5c0b:5f0f:95f3:a200) (Ping timeout: 256 seconds)
[22:02:27] *** Joins: k8yun (~k8yun@24.244.29.102)
[22:06:45] <tybalt89> eval: { local *CORE::die = sub { print "ignoring die\n" }; &CORE::die("inside\n") }; die "outside die\n"
[22:06:47] <perlbot> tybalt89: Subroutine CORE::die redefined at (IRC) line 1. ignoring die ERROR: outside die 
[22:10:53] *** choroba is now known as choroba_
[22:11:17] *** Quits: donofrio (~donofrio@c-68-40-123-74.hsd1.mi.comcast.net) (Ping timeout: 240 seconds)
[22:11:19] *** Joins: choroba (~E_Choroba@89-101-243-80.cust.centrio.cz)
[22:11:27] *** Quits: choroba_ (~E.Choroba@89-101-243-80.cust.centrio.cz) (Quit: Leaving)
[22:13:08] <tybalt89> eval: { no warnings 'redefine'; local *CORE::die = sub { print "ignoring die\n" }; &CORE::die("inside\n") }; die "outside die\n"
[22:13:09] <perlbot> tybalt89: ignoring die ERROR: outside die 
[22:15:42] *** Joins: FlorianBad (~FlorianBa@cpe-67-49-107-16.dc.res.rr.com)
[22:17:14] <aindilis> heya, I wrote a program which memoizes function invocations and results using Hook::PrePostCall and a tied hash to MySQL.  I am using this to auto-generate Perl tests.
[22:17:14] <aindilis> Which Perl testing frameworks would be best to target the generation of the tests.
[22:22:03] *** Quits: rgrinberg (~textual@187.223.115.137) (Quit: My MacBook has gone to sleep. ZZZzzz…)
[22:26:49] <aindilis> It's been so long that I've written tests, that I don't know how it's done today
[22:27:22] <LeoNerd> use Test::More;  is still fairly standard
[22:27:26] <aindilis> kk ty!
[22:44:56] *** Quits: pj (~pj@ghettoforge/pj) (Ping timeout: 245 seconds)
[22:47:23] *** Joins: tirnanog (~tirnanog@user/tirnanog)
[22:48:10] *** Joins: bs338 (~pi@host159-180-115-59.range159-180.btcentralplus.com)
[22:54:43] *** Quits: Sauvin (~sauvin@about/linux/staff/sauvin) (Ping timeout: 256 seconds)
[22:58:10] *** Joins: pj (~pj@ghettoforge/pj)
[23:01:31] *** Joins: ThatOtherGuy (~LogicAsid@user/logicaside)
[23:05:37] *** Quits: zamanf (~dev@user/zamanf) (Ping timeout: 240 seconds)
[23:05:47] *** Joins: Adoi (~Adoi@user/adoi)
[23:06:51] *** Quits: LogicAside (~LogicAsid@user/logicaside) (Killed (NickServ (GHOST command used by ThatOtherGuy)))
[23:06:52] *** ThatOtherGuy is now known as LogicAside
[23:06:57] *** Quits: deadmarshal (~deadmarsh@95.38.113.203) (Ping timeout: 256 seconds)
[23:07:52] *** Quits: WinterStar (~IceLight@user/icelight) (*.net *.split)
[23:07:52] *** Quits: keir (~keir@user/keir) (*.net *.split)
[23:07:52] *** Quits: krako[m] (~krakozaur@2001:470:69fc:105::1:c0c) (*.net *.split)
[23:07:52] *** Quits: phr3ak (~noreply@gnet.hu) (*.net *.split)
[23:07:52] *** Quits: Sophira (~sophie@matrix.theblob.org) (*.net *.split)
[23:07:52] *** Quits: jink (mrjink@chat.jink.net) (*.net *.split)
[23:07:52] *** Quits: rjsalts (~rjsalts@green.spectralmud.org) (*.net *.split)
[23:07:52] *** Quits: mexen (uid495612@user/mexen) (*.net *.split)
[23:07:52] *** Quits: madduck (~madduck@user/madduck) (*.net *.split)
[23:07:52] *** Quits: traxex (traxex@user/traxex) (*.net *.split)
[23:07:52] *** Quits: sloth (~sloth@84.16.241.179) (*.net *.split)
[23:07:52] *** Quits: heth (~heth@user/heth) (*.net *.split)
[23:07:52] *** Quits: jelly (jelly@user/jelly) (*.net *.split)
[23:07:52] *** Quits: tabakhase (tabakhase@user/tabakhase) (*.net *.split)
[23:07:52] *** Quits: GnuYawk (~GnuYawk@user/gnuyawk) (*.net *.split)
[23:07:52] *** Quits: Kays (Kays@user/kays) (*.net *.split)
[23:07:52] *** Quits: bleb (~cm@user/bleb) (*.net *.split)
[23:07:52] *** Quits: berndj (~berndj@ns2.linksynergy.co.za) (*.net *.split)
[23:07:52] *** Quits: Russell (russell@bnc4free/staff/russell) (*.net *.split)
[23:07:52] *** Quits: grumble (grumble@user/grumble) (*.net *.split)
[23:07:52] *** Quits: Xe (~cadey@tailscale/xe) (*.net *.split)
[23:07:52] *** Quits: mweckbecker (~matthias@weckbecker.name) (*.net *.split)
[23:07:53] *** Quits: Champi (Champi@damn.e-leet.be) (*.net *.split)
[23:07:53] *** Quits: f3ew (~f3ew@2a01:4f9:4b:3b57::2) (*.net *.split)
[23:07:57] *** Joins: traxex_ (traxex@sdf.org)
[23:08:51] *** Joins: phr3ak (~noreply@gnet.hu)
[23:12:26] *** Joins: WinterStar (~IceLight@user/icelight)
[23:12:26] *** Joins: keir (~keir@user/keir)
[23:12:26] *** Joins: krako[m] (~krakozaur@2001:470:69fc:105::1:c0c)
[23:12:26] *** Joins: Sophira (~sophie@matrix.theblob.org)
[23:12:26] *** Joins: jink (mrjink@chat.jink.net)
[23:12:26] *** Joins: rjsalts (~rjsalts@green.spectralmud.org)
[23:12:26] *** Joins: madduck (~madduck@user/madduck)
[23:12:26] *** Joins: grumble (grumble@user/grumble)
[23:12:26] *** Joins: heth (~heth@user/heth)
[23:12:26] *** Joins: jelly (jelly@user/jelly)
[23:12:26] *** Joins: sloth (~sloth@84.16.241.179)
[23:12:26] *** Joins: tabakhase (tabakhase@user/tabakhase)
[23:12:26] *** Joins: GnuYawk (~GnuYawk@user/gnuyawk)
[23:12:26] *** Joins: Kays (Kays@user/kays)
[23:12:26] *** Joins: bleb (~cm@user/bleb)
[23:12:26] *** Joins: berndj (~berndj@ns2.linksynergy.co.za)
[23:12:26] *** Joins: Russell (russell@bnc4free/staff/russell)
[23:12:26] *** Joins: Xe (~cadey@tailscale/xe)
[23:12:26] *** Joins: mweckbecker (~matthias@weckbecker.name)
[23:12:26] *** Joins: Champi (Champi@damn.e-leet.be)
[23:12:26] *** Joins: f3ew (~f3ew@2a01:4f9:4b:3b57::2)
[23:12:27] *** Quits: Repaster_ (~Repaster@perlbot/bot/grinnz/repaster) (Excess Flood)
[23:12:35] *** Joins: Repaster_ (~Repaster@dsl-50-5-168-166.fuse.net)
[23:12:35] *** Quits: Repaster_ (~Repaster@dsl-50-5-168-166.fuse.net) (Changing host)
[23:12:35] *** Joins: Repaster_ (~Repaster@perlbot/bot/grinnz/repaster)
[23:16:02] *** Quits: MikeGeorge[m] (~onesuitsa@2001:470:69fc:105::1f88) (Ping timeout: 240 seconds)
[23:16:12] *** Quits: gordonfish[m] (~gordonfis@user/gordonfish) (Ping timeout: 245 seconds)
[23:16:13] *** Quits: sergiotarxz[m] (~sergiotar@2001:470:69fc:105::1:15f2) (Ping timeout: 250 seconds)
[23:16:13] *** Quits: Nataraj[m] (~dhyannata@2001:470:69fc:105::1:88f9) (Ping timeout: 240 seconds)
[23:16:13] *** Quits: ehuelsmann[m] (~ehuelsman@2001:470:69fc:105::169a) (Ping timeout: 240 seconds)
[23:16:26] *** Quits: hussam (~hussam@user/hussam) (Ping timeout: 250 seconds)
[23:16:32] *** Quits: ilmari_ (~ilmari@user/ilmari) (Ping timeout: 240 seconds)
[23:16:38] *** Quits: NoGare[m] (~nogaremat@2001:470:69fc:105::35f2) (Ping timeout: 252 seconds)
[23:16:42] *** Quits: krako[m] (~krakozaur@2001:470:69fc:105::1:c0c) (Ping timeout: 260 seconds)
[23:17:03] *** Quits: latk (~latk@2001:470:69fc:105::255) (Ping timeout: 268 seconds)
[23:17:03] *** Quits: graham (~gchristen@user/gchristensen) (Ping timeout: 268 seconds)
[23:18:17] *** Quits: Darkcoal (~user@user/Darkcoal) (Ping timeout: 252 seconds)
[23:18:23] *** Quits: monkey_ (~user@190.104.116.153) (Ping timeout: 250 seconds)
[23:19:12] <LeoNerd> Byebye Matrix
[23:20:24] *** Joins: Darkcoal (~user@user/Darkcoal)
[23:21:10] *** traxex_ is now known as traxex
[23:21:14] *** Quits: traxex (traxex@sdf.org) (Changing host)
[23:21:14] *** Joins: traxex (traxex@user/traxex)
[23:23:29] <e1f> it might be resurrected
[23:23:55] <LeoNerd> I expect so
[23:24:34] <Grinnz> people may have to reload
[23:29:52] *** Joins: magla (~gelignite@d5366c9a.access.ecotel.net)
[23:30:22] *** Quits: Adoi (~Adoi@user/adoi) (Quit: Leaving)
[23:34:45] *** Joins: proller (~p@80.240.216.69)
[23:40:18] *** Joins: MikeGeorge[m] (~onesuitsa@2001:470:69fc:105::1f88)
[23:41:55] *** Joins: ozzzo_work (~ozzzo_wor@h87.s239.verisign.com)
[23:42:26] <ozzzo_work> I replaced all of my sleep statements with Future::IO->sleep: https://perl.bot/p/zrmrb8
[23:42:26] <Paperbot_> Link title(s): [ Perlbot Pastebin ]
[23:42:59] <ozzzo_work> but I am still seeing processes blocked. Here we see stackwatch-trust-7 timing out. stackwatch-trust-8 returns in a few seconds but the process appears to be blocked waiting for 7 so it reports 120 seconds: https://perl.bot/p/hzvbq2
[23:43:00] <Paperbot_> Link title(s): [ Perlbot Pastebin ]
[23:43:57] *** Quits: proller (~p@80.240.216.69) (Ping timeout: 250 seconds)
[23:44:01] <ozzzo_work> So it looks like I'm still failing to correctly implement the nested parallel processes. Do I need to change the foreach at line 662?
[23:45:37] *** Quits: Darkcoal (~user@user/Darkcoal) (Ping timeout: 240 seconds)
[23:45:39] *** Joins: Nataraj[m] (~dhyannata@2001:470:69fc:105::1:88f9)
[23:46:43] *** Joins: bbrtj (~bbrtj@185.24.91.138)
[23:47:44] *** Joins: Darkcoal (~user@user/Darkcoal)
[23:48:38] *** Joins: ehuelsmann[m] (~ehuelsman@2001:470:69fc:105::169a)
[23:48:56] *** Joins: krismatrix (~krismatri@38.80.149.51)
[23:52:04] *** Joins: donofrio (~donofrio@c-68-40-123-74.hsd1.mi.comcast.net)
[23:52:22] <simcop2387> ozzzo_work: https://metacpan.org/pod/Future::IO::Impl::IOAsync you might need to include that to get it to do what you're after, by default i think it just does single blocking stuff
[23:52:23] <Paperbot_> Link title(s): [ Future::IO::Impl::IOAsync - implement Future::IO using IO::Async - metacpan.org ]
[23:54:57] *** Joins: andrzejku (~andrzejku@45-11-60-125.ip4.greenlan.pl)
[23:55:06] <ozzzo_work> ok trying that, ty!
[23:56:04] *** Quits: krismatrix (~krismatri@38.80.149.51) (Quit: Leaving)
[23:56:42] *** Joins: proller (~p@2a02:6b8:b081:a414::1:36)
