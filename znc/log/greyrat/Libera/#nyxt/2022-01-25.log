[00:00:06] <jmercouris> nij-: :-)
[00:00:12] <nij-> Got it. Do you call that structure editing too?
[00:00:15] <jmercouris> Paredit here as well
[00:00:26] <qhong> nij-: it's simulating structural editing
[00:00:27] <jmercouris> Slurping and barfing sexp certainly counts IMO
[00:00:34] <nij-> I'm doomed by vi keybindings and will never change.. so lispy here.
[00:00:57] <nij-> qhong: What can be made better? I'm just curious.
[00:00:59] <qhong> but the thing is the lingua franca (or dominating ontology) of Emacs is unstructured character array (with text properties)
[00:01:07] <nij-> Cuz I thought it's nice enough. Need to expand my brain.
[00:01:17] <qhong> so all those amazing Emacs applications operates on texts, not structured trees
[00:01:58] <nij-> And a structure editor should parse the code, and create a tree, and allow APIs to work on the tree?
[00:02:33] <qhong> nij-: A structure editor will work on trees from the beginning, there's no need for parse
[00:03:03] <nij-> But ultimately the code is written in a file which is parsed as text in the first place..
[00:03:10] <nij-> I am a bit confused..
[00:03:14] <qhong> e.g. org document should be stored as trees natively. The status quo in Emacs is that we got bunch of text editing hacks and an (under-specified) parser added later on
[00:03:39] <qhong> nij-: file storage is secondary, it may be stored in any serialization format, sexp, xml (eww), mmap, etc
[00:03:40] <nij-> ! lemme think
[00:04:00] <qhong> nij-: the thing is what lives in the buffer is structured tree rather than character array
[00:05:12] <nij-> Hmm.. but if an org file is stored as tree, it might be harder to search using traditional tools like grep.
[00:05:29] <nij-> And also git.
[00:06:04] <nij-> That's why plain-text is awesome, right?
[00:08:20] <qhong> There’s lots of things to fix one-by-one. Doesn’t it make more sense to manage lisp (and any structured document) with tree diff rather than text diff? E.g. if you wrap bunch of your code with an (when *toggle* (lots-of-code)), a better diff should only highlights the wrapped layer rather than the whole code block.
[00:09:13] <qhong> UNIX tools are all based on unstructured character array because that’s what UNIX has, but I think we can have something better
[00:09:37] <nij-> I gotcha.
[00:09:52] <nij-> My concern emerged from being trapped with the UNIX tools.
[00:10:11] <nij-> But in the lispy future we will all be happy with strutures and lispy tools :D :D :D
[00:11:46] <qhong> nij-: hope it will happen :D at the beginning we might still be able to reuse UNIX tools using a printer(serializer) and reader(parser)
[00:12:41] <qhong> in fact org also do this! The difference is that it has primarily text, and to make best use of Lisp, it has to parse from buffer to Lisp data structures and print it back!
[00:13:30] <nij-> Gotcha. How will you store a tree as a file then?
[00:13:41] <nij-> With s-exprs? ;)?
[00:15:11] <qhong> nij-: we can implement multiple print/read pair. S-expr is an obvious one, and maybe also XML (so it can also function as an HTML editor)
[00:17:07] <nij-> I thought XML should be replaceable by Sexprs..? Why it has become popular is a mistake..
[00:17:37] <nij-> Another bonus is that if it's stored as S-expr, the lisp structural editor that will exist can operate on it snappily too.
[00:20:35] <qhong> nij-: agree that XML is strictly worse than S-expr. But in any case I think the external storage is secondary. The in-memory representation can easily be printed to different formats
[00:24:25] <nij-> Gotcha :)
[00:35:24] *** Joins: aartaka (aartaka@gateway/vpn/protonvpn/aartaka)
[00:52:54] *** Quits: aartaka (aartaka@gateway/vpn/protonvpn/aartaka) (Ping timeout: 250 seconds)
[01:14:08] *** Quits: waleee (~waleee@2001:9b0:21d:fc00:398f:b003:b90d:acf4) (Ping timeout: 250 seconds)
[01:16:11] *** Joins: waleee (~waleee@2001:9b0:21d:fc00:398f:b003:b90d:acf4)
[02:26:49] * lagash slurps and barfs the fruit of the day.
[02:49:48] <sirmacik> \o
[02:57:39] <nij-> o/
[03:19:54] *** Quits: nm0i (znc@me0w.net) (Quit: -)
[03:25:52] *** Joins: nm0i (znc@me0w.net)
[03:58:40] <nij-> In a selecting menu in a webpage, can nyxt use its prompter to allow fuzzy match + selection?
[04:05:49] <jmercouris> nij-: yes
[04:06:01] <jmercouris> You mean link hints I presume,
[04:06:03] <jmercouris> ?
[04:08:55] <nij-> I may not using the right terms here.. what I mean is
[04:09:32] <nij-> suppose I have a select menu in a webpage, that has contents "January", "February", "March",.. "December".
[04:09:47] <nij-> Usually, I would need to use my cursor to scroll through that menu, and click to select.
[04:10:08] <nij-> But I suppose it would be niftier if one can use the power of prompter to select instead.
[04:12:59] <waleee> nij-: if you select the menu in hint mode you should be able to do a subsequent hint mode for the month
[04:14:10] <waleee> nij-: I assume this is for a login/registation form?
[04:14:31] <nij-> I'm thinking of a general problem and wonder if it's been done in nyxt.
[04:15:26] <nij-> Being an emacs user, I have long doubted that maybe the web isn't suitable for power users, because the dom is a mess and is hard to navigate with a keyboard-centric workflow.
[04:15:37] <nij-> However, that might be too naive..
[04:15:58] <waleee> nij-: do you have an example page? I can't come up with anything besides registration forms
[04:16:00] <nij-> I wonder what's the general strategy for nyxt to provide a keyboard-centric workflow for a general webpage with a messy DOM.
[04:16:18] <waleee> (for selection menues)
[04:16:28] <nij-> waleee: Well, some people might start to write a front-end page that allows adding entries into a db.
[04:17:41] <nij-> https://www.w3schools.com/howto/howto_custom_select.asp
[04:17:49] <nij-> Oh indeed. Nice!! Nyxt is the future <3
[04:18:00] <waleee> nij-: the messy dom isn't the largest issue, you have shadow dom-heavy sites that messes up almost all keyboard centric browsers (extensions)
[04:18:24] <nij-> shadow? what do you mean?
[04:18:37] <waleee> eg https://app.keeweb.info or https://www.powerlanguage.co.uk/wordle/
[04:19:22] <waleee> the wordle site is probably the worst offender since you get zilch hints
[04:19:26] <nij-> What a tragedy.. how do they make a UI in which no elements are able to be selected?
[04:19:48] <nij-> Sigh..
[04:19:58] <waleee> nij-: they use browser supported shadow dom/virtual dom-utilities
[04:20:16] <nij-> Will.. wil.. will this be the future...?
[04:20:20] <waleee> if you check the wordle site it essentially contains about 10 toplevel tags
[04:20:52] <waleee> and all of them contains a <shadowroot>..,
[04:21:09] <nij-> what is a shadow root?
[04:21:13] <nij-> and are there any workarounds?
[04:21:26] <waleee> nij-: https://developer.mozilla.org/en-US/docs/Web/API/ShadowRoot
[04:23:01] <waleee> nij-: normal selections did indeed work nicely thouhg :D
[04:23:22] <nij-> God.. they should stop.. :'(
[04:23:34] <nij-> I used to think DOM was the evilest thing ever invented (just kidding).
[04:24:03] <waleee> and intrestingly that w3schools example did work crap for selecting an option in tridactyl
[04:24:08] <nij-> Anyway.. the shadow root is still delivered to my machine right? There must be a way for me to access the internal of the shadow root?
[04:24:41] *** Quits: amk (~amk@109.255.169.126) (Ping timeout: 268 seconds)
[04:25:32] <waleee> nij-: probably, I read a bit about it when someone complained about that keepass-web client (since it also uses it in some places)
[04:25:35] *** Joins: amk (~amk@109.255.169.126)
[04:26:37] <nij-> kk....
[04:38:25] *** Parts: nij- (~jin@2001:48f8:9021:806::6f8b) (Using Circe, the loveliest of all IRC clients)
[05:23:50] *** Quits: perrierjouet (~perrier-j@modemcable012.251-130-66.mc.videotron.ca) (Quit: WeeChat 3.4)
[05:28:20] *** Joins: perrierjouet (~perrier-j@modemcable012.251-130-66.mc.videotron.ca)
[06:00:21] *** Joins: tekakutli (~user@201.141.28.4)
[06:23:28] *** Joins: Jing (~hedgehog@240e:390:7c53:a7e1:b4c3:bc35:ccb7:fa58)
[06:23:44] *** Parts: pranavats (3fba1d1b34@2a00:c70:1:178:170:40:189:1) (Error from remote client)
[06:24:31] *** Joins: pranavats (3fba1d1b34@2a00:c70:1:178:170:40:189:1)
[06:39:28] *** Joins: geyaeb2 (~geyaeb@gateway/tor-sasl/geyaeb)
[06:41:36] *** Quits: geyaeb (~geyaeb@gateway/tor-sasl/geyaeb) (Ping timeout: 276 seconds)
[07:53:48] *** Quits: Jing (~hedgehog@240e:390:7c53:a7e1:b4c3:bc35:ccb7:fa58) (Quit: My MacBook has gone to sleep. ZZZzzz…)
[07:55:52] *** Joins: aartaka (aartaka@gateway/vpn/protonvpn/aartaka)
[07:57:57] *** Quits: waleee (~waleee@2001:9b0:21d:fc00:398f:b003:b90d:acf4) (Ping timeout: 240 seconds)
[08:31:11] *** Joins: Jing (~hedgehog@240e:390:7c53:a7e1:54a1:8815:7a95:cd26)
[09:16:26] *** Quits: geyaeb2 (~geyaeb@gateway/tor-sasl/geyaeb) (Quit: WeeChat 3.4)
[09:16:58] *** Joins: geyaeb (~geyaeb@gateway/tor-sasl/geyaeb)
[09:41:52] *** Quits: ano (~ano@user/ano) (Remote host closed the connection)
[09:42:15] *** Joins: ano (~ano@user/ano)
[10:10:36] *** Parts: pranavats (3fba1d1b34@2a00:c70:1:178:170:40:189:1) (Error from remote client)
[11:23:03] *** Joins: pranavats (3fba1d1b34@2a00:c70:1:178:170:40:189:1)
[12:41:03] *** Quits: Jing (~hedgehog@240e:390:7c53:a7e1:54a1:8815:7a95:cd26) (Quit: My MacBook has gone to sleep. ZZZzzz…)
[12:48:38] *** Joins: Jing (~hedgehog@240e:390:7c53:a7e1:e5fb:7a43:8199:8861)
[13:53:51] *** Quits: ano (~ano@user/ano) (Ping timeout: 276 seconds)
[13:55:21] *** Joins: ano (~ano@user/ano)
[14:35:26] *** Joins: talvdav (~user@business-24-134-27-105.pool2.vodafone-ip.de)
[18:35:55] *** Quits: ardon (~user@user/ardon) (Ping timeout: 256 seconds)
[18:51:30] *** Quits: pjb (~pjb@user/pjb) (Remote host closed the connection)
[19:03:16] *** Joins: waleee (~waleee@2001:9b0:21d:fc00:398f:b003:b90d:acf4)
[19:12:31] *** Joins: pjb (~pjb@user/pjb)
[19:17:28] *** Quits: pjb (~pjb@user/pjb) (Ping timeout: 250 seconds)
[19:19:52] *** Joins: pjb (~pjb@user/pjb)
[19:25:32] *** Quits: waleee (~waleee@2001:9b0:21d:fc00:398f:b003:b90d:acf4) (Ping timeout: 240 seconds)
[19:27:38] *** Joins: waleee (~waleee@h-98-128-229-110.NA.cust.bahnhof.se)
[19:32:13] *** Quits: waleee (~waleee@h-98-128-229-110.NA.cust.bahnhof.se) (Ping timeout: 256 seconds)
[20:15:58] *** Joins: rb100 (~jeff@d27-96-151-97.nap.wideopenwest.com)
[20:16:55] *** Parts: rb100 (~jeff@d27-96-151-97.nap.wideopenwest.com) ()
[20:44:48] *** Quits: tekakutli (~user@201.141.28.4) (Remote host closed the connection)
[21:23:30] *** Quits: Jing (~hedgehog@240e:390:7c53:a7e1:e5fb:7a43:8199:8861) (Quit: My MacBook has gone to sleep. ZZZzzz…)
[21:30:01] *** Quits: Aurora_v_kosmose (~LispyLigh@user/lispylights) (Remote host closed the connection)
[21:31:12] *** Joins: Aurora_v_kosmose (~LispyLigh@user/lispylights)
[21:45:30] *** Quits: pjb (~pjb@user/pjb) (Remote host closed the connection)
[22:27:47] *** Joins: waleee (~waleee@2001:9b0:21d:fc00:398f:b003:b90d:acf4)
[23:09:30] *** Joins: incidentist (~incidenti@192-184-161-101.static.sonic.net)
