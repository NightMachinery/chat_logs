[00:06:48] <sudoforge> is there a way to prevent moving below the prompt line in terminal buffers?
[00:07:16] <sudoforge> just a shower thought i had earlier today; it would be kind of nice
[00:11:39] *** Quits: towb (~bwot@user/towb) (Quit: WeeChat 3.3)
[00:11:55] *** Parts: Arc (~strom@fedora/strom) ()
[00:18:48] <dundargoc[m]> TIL about `:read`.  Good stuff.
[00:29:50] <aphysically> ahh neoformat seems to upset the git diff and undo history in a way that the native black/isort plugins don't
[00:29:57] <aphysically> (probably because they compute a diff first or something?)
[00:33:04] <aphysically> cause doing an undo past a neoformat format is much slower than with the native psf/black plugin, but I do like avoiding adding plugins for the formatters in every language that I want to use
[00:33:04] *** Quits: vroom (~vroom@user/vroom) (Read error: Connection reset by peer)
[00:33:06] *** Quits: rgrinberg (~textual@190.113.111.74) (Quit: My MacBook has gone to sleep. ZZZzzz‚Ä¶)
[00:35:58] *** Joins: vroom (~vroom@cable-84-43-163-47.mnet.bg)
[00:35:58] *** Quits: vroom (~vroom@cable-84-43-163-47.mnet.bg) (Changing host)
[00:35:58] *** Joins: vroom (~vroom@user/vroom)
[00:41:29] *** Quits: bobdobbs (~user@14.137.23.74) (Remote host closed the connection)
[00:47:28] <det0x[m]> why is nvim-lspconfig unable to use the language servers already present in path? 
[00:48:16] <det0x[m]> i have quite a few ls binaries in path, and i don't really think in the ideal world i should be setting up all language servers manually with the most straightforward and redundant lines
[00:49:48] <det0x[m]> so now to cut down on repetition i've installed https://github.com/williamboman/nvim-lsp-installer and i'm using... (full message at https://libera.ems.host/_matrix/media/r0/download/libera.chat/a8d3a65ee9b246a5a3ced825dc487992d9488a01)
[00:50:26] <det0x[m]> however this came with the introduction of additional redundancy, now i have reinstalled ls binaries i already had in path 
[00:51:46] <det0x[m]> tldr: why can't i do `require'lspconfig'.setup{}` and have all the default configs set up for me?
[00:53:05] <mjlbach[m]> <det0x[m]> "why is nvim-lspconfig unable..." <- it can, otherwise there would be a lot more complaints
[00:53:27] <det0x[m]> mjlbach[m]: can it do -> why can't i do require'lspconfig'.setup{} and have all the default configs set up for me? 
[00:53:35] <mjlbach[m]> Because that doesn't make sense
[00:53:51] <mjlbach[m]> You may have conflicting language servers 
[00:54:15] <mjlbach[m]> e.g. you install efm, diagnosticls, and null-ls, run require('lspconfig').setup{} 3 adapter language servers now attach to each buffer
[00:54:17] <det0x[m]> the problem with manually adding/deleting lines like `require'lspconfig'.pyright.setup{}` is that if i install a new ls binary, i'll have to remember to get that in the config
[00:54:34] <mjlbach[m]> Well, you can just do it in a loop like we have in our examples
[00:54:57] <det0x[m]> that cuts down on the number of lines, but i still have to define the array of language servers?
[00:55:04] <mjlbach[m]> yes
[00:55:10] <mjlbach[m]> feature not bug
[00:55:42] <det0x[m]> what i'm asking for is why not quickstart all the language servers for users?
[00:55:52] <det0x[m]> if there's no binary present, then fail graciously 
[00:56:01] <mjlbach[m]> 1. That would incur a runtime cost
[00:56:06] <elianiva[m]> nah, not a good idea, I don't want that
[00:56:06] <elianiva[m]> I'd like it to be explicit
[00:56:07] <mjlbach[m]> 2. the degeneracy problem I mentioned
[00:56:19] <mjlbach[m]> 3. philosophical differences (declarative vs. pseudo imperative)
[00:56:46] <det0x[m]> it's not much of a cost when it's run through against one filetype 
[00:56:54] <det0x[m]> everyone who's installed lspconfig expects automation
[00:57:05] <mjlbach[m]> I think that's a bold statement
[00:57:17] <det0x[m]> > <@elianiva:matrix.org> nah, not a good idea, I don't want that
[00:57:17] <det0x[m]> > I'd like it to be explicit
[00:57:17] <det0x[m]> explicit about what exactly??
[00:57:28] <mjlbach[m]> you explicit enable which servers you want
[00:57:31] <det0x[m]> you've already installed a preconfigured set of languages servers
[00:57:51] <mjlbach[m]> no, you installed a set of optional configurations for servers you may or may not have installed
[00:58:16] <det0x[m]> you can very much be explicit about it by adding this line
[00:58:21] <det0x[m]> `require'lspconfig'.all.setup{}`
[00:58:53] <elianiva[m]> det0x[m]: I don't want lspconfig setup something I don't want.
[00:58:53] <elianiva[m]> For example, I don't do cpp but then it still enables clangd.
[00:58:53] <elianiva[m]> I just don't like magic happens without my knowledge
[00:59:00] <det0x[m]> then don't add this line to your config
[00:59:27] <Mathias[m]> det0x[m]: s/everyone/a subset of users/
[01:00:15] <mjlbach[m]> people are free to fork/maintain lspconfig
[01:01:53] <mjlbach[m]> really you'd want some intelligent fallback rules, a set of "blessed" servers, a pre-cmd hook that checks if a server is installed and if not installs it
[01:01:58] <mjlbach[m]> lots of way to make an automagical plugin
[01:03:02] <det0x[m]> there's a difference between reasonable automation and and magical automation
[01:03:27] <det0x[m]> the following, for example, is very reasonable:
[01:03:47] <det0x[m]> when I've installed a plugin that claims `This repo handles automatically launching and initializing language servers that are installed on your system` in its readme as a second sentence 
[01:04:02] <mjlbach[m]> Ok, I'll change the readme
[01:04:08] <det0x[m]> and I install an ls binary in my path
[01:04:34] <det0x[m]> and I open a file that falls under the lsp's list of extensions
[01:04:40] <det0x[m]> the language server should start
[01:04:47] <det0x[m]> in what world would i not want this to happen
[01:05:07] <det0x[m]> why did i get the binary installed or a plugin with this description in the first place then?
[01:05:29] <det0x[m]> so now after installing a binary I should routinely remember to add it in the array 
[01:05:30] <Mathias[m]> some people for example complained that they don't want the language server to always start, but that they want to start it manually
[01:05:31] <det0x[m]> * in the config array
[01:05:38] *** Quits: guido (~guido@host-79-40-188-193.business.telecomitalia.it) (Quit: WeeChat 3.3)
[01:05:45] <aphysically> :help python
[01:05:47] <det0x[m]> `require'lspconfig'.all.setup{}`
[01:05:48] <Mathias[m]> don't confuse what you expect with what everyone expects
[01:05:49] <aphysically> :D
[01:06:30] <det0x[m]> who gets an ls binary in their path and doesn't want to use it?
[01:06:35] <det0x[m]> I can see who
[01:06:41] <det0x[m]> but they would be in the minority 
[01:07:00] <Mathias[m]> are they? did you run a survey?
[01:07:08] <det0x[m]> yes the common sense survey
[01:08:03] <det0x[m]> if you're arguing juts for the sake of it  
[01:08:09] <det0x[m]> then I don't have more to add 
[01:08:21] <det0x[m]> I have delineated the logic behind my request 
[01:08:24] <Mathias[m]> you disagree with the choice, we got the memo
[01:08:26] <mjlbach[m]> ok, you're arguing with the people who maintain the software you use 
[01:08:49] <det0x[m]> I'm not arguing, I asked a question
[01:09:26] <Cobra[m]> what are you even saying
[01:09:37] <mjlbach[m]> There you go: https://github.com/neovim/nvim-lspconfig/pull/1350
[01:10:18] <det0x[m]> that's more honest to design now if `require'lspconfig'.all.setup{}` is a no-go
[01:10:52] <mjlbach[m]> automatically launching does not really imply automatically detecting IMO but ü§∑‚Äç‚ôÄÔ∏è
[01:11:15] <mjlbach[m]> it's also a lot harder than you would expect to detect if a server is actually installed
[01:11:19] <det0x[m]> `that are installed on your system.`
[01:11:50] *** Quits: krisk (~krisk@user/krisk) (Read error: Connection reset by peer)
[01:12:22] *** Joins: krisk (~krisk@user/krisk)
[01:12:43] <det0x[m]> i'm not here to wrap my ideas around anyone's head, especially around the authors of the project
[01:13:09] <det0x[m]> but that's what i read out from those sentences 
[01:20:22] *** Quits: trace987 (~trace@ip5b429941.dynamic.kabel-deutschland.de) (Ping timeout: 268 seconds)
[01:20:55] <clason[m]> yes, you made your point, that sentence was misleading
[01:21:05] <clason[m]> it's gone now
[01:24:10] <det0x[m]> cba this passive aggressiveness 
[01:24:19] *** Parts: det0x[m] (~det0xmatr@2001:470:69fc:105::77bd) ()
[01:24:56] <clason[m]> no, it's not
[01:26:29] <clason[m]> you expect something from a project that is explicitly outside its remit
[01:26:38] <clason[m]> this is pointed out to you
[01:27:02] <clason[m]> the actionable part of the complaint is "false advertisement"; this has been corrected
[01:27:20] <mjlbach[m]> within record time I might add :) 
[01:27:28] <clason[m]> indeed!
[01:27:56] <clason[m]> (and by someone who has sworn off user support, not incidentally, I might add)
[01:32:31] *** Quits: mfiano (~user@2603-7081-2d02-95bd-0250-b6ff-fef3-da40.res6.spectrum.com) (Remote host closed the connection)
[01:34:49] *** Joins: mfiano (~user@2603-7081-2d02-95bd-0250-b6ff-fef3-da40.res6.spectrum.com)
[01:52:41] *** Joins: trace987 (~trace@ip5b429941.dynamic.kabel-deutschland.de)
[01:56:13] <teto[m]> "saint mjlbach" if I dare say, the madman even proposes to help upstrema projects https://github.com/haskell/haskell-language-server/issues/2291#issue-1032790747
[01:56:18] *** Quits: baltazar (~baltazar@193-110-63-186.cable-modem.hdsnet.hu) (Remote host closed the connection)
[01:56:35] <mjlbach[m]> Well I do intermittently use HLS :) 
[01:58:02] <ignfed[m]> Hi, how can i import .vim files into lua?
[01:58:51] <clason[m]> `vim.cmd('source foo.vim')`?
[01:59:13] <clason[m]> also, !guide
[01:59:24] <mjlbach[m]> !guide
[01:59:26] <nvim-bot[m]> https://github.com/nanotee/nvim-lua-guide
[01:59:46] <clason[m]> (I was holding my breath to see if that worked)
[02:00:46] <ignfed[m]> clason[m]: Doesn't work
[02:01:40] <clason[m]> well, then you have to be a lot more explicit in what you mean by "import"
[02:02:28] <clason[m]> also, do read that guide
[02:02:37] *** Joins: baltazar (~baltazar@193-110-63-186.cable-modem.hdsnet.hu)
[02:02:45] <clason[m]> it'll answer a lot of questions you have now or will have
[02:03:19] *** Quits: teclator (~quassel@85.155.180.70.dyn.user.ono.com) (Quit: http://quassel-irc.org - Chat comfortably. Anywhere.)
[02:08:02] *** Joins: Firecatmon (~firecatmo@180.149.228.116)
[02:10:23] *** Quits: mfiano (~user@2603-7081-2d02-95bd-0250-b6ff-fef3-da40.res6.spectrum.com) (Remote host closed the connection)
[02:11:36] *** Joins: mfiano (~user@2603-7081-2d02-95bd-0250-b6ff-fef3-da40.res6.spectrum.com)
[02:16:02] *** Quits: vroom (~vroom@user/vroom) (Read error: Connection reset by peer)
[02:18:22] *** Joins: vroom (~vroom@cable-84-43-163-47.mnet.bg)
[02:18:22] *** Quits: vroom (~vroom@cable-84-43-163-47.mnet.bg) (Changing host)
[02:18:22] *** Joins: vroom (~vroom@user/vroom)
[02:25:09] <mjlbach[m]> theHamsta (Stephan Seitz): I'd like to get the semantic tokens PR in
[02:25:17] <mjlbach[m]> I commented, but I'll be available to talk about it whenever tonight/tomorrow
[02:25:47] <mjlbach[m]> I think I read through the code and understand most of it now, the nested metatables in the highlight mapping is kinda meh from a readability perspective, and I left a comment about the changed ticks, but overall I think it looks good
[02:26:55] <neovim[m]> <clason[m]> "(I was holding my breath to..." <- it does, just not inline ;) (although maybe I should add that)
[02:27:47] <clason[m]> Yeah, I know that now ;)
[02:28:11] <clason[m]> makes sense the way it is, though
[02:57:23] *** Quits: X-Scale (~ARM@83.223.251.139) (Ping timeout: 264 seconds)
[02:57:52] *** Joins: X-Scale` (~ARM@50.77.166.178.rev.vodafone.pt)
[02:58:26] *** Joins: rgrinberg (~textual@190.113.111.74)
[02:58:55] *** X-Scale` is now known as X-Scale
[03:20:17] *** Quits: mfiano (~user@2603-7081-2d02-95bd-0250-b6ff-fef3-da40.res6.spectrum.com) (Remote host closed the connection)
[03:21:42] *** Joins: tecywiz121 (~tecywiz12@dhcp-108-168-125-21.cable.user.start.ca)
[03:22:28] *** Joins: mfiano (~user@2603-7081-2d02-95bd-0250-b6ff-fef3-da40.res6.spectrum.com)
[03:27:45] *** Quits: tecywiz121 (~tecywiz12@dhcp-108-168-125-21.cable.user.start.ca) (Quit: tecywiz121)
[03:29:32] *** Quits: M4rty (~M4rtyflex@37.170.194.12) (Quit: leaving)
[03:38:55] *** Quits: oddmunds (~oddmunds@81.0.173.254) (Ping timeout: 260 seconds)
[03:42:38] *** Joins: M4rty (~M4rtyflex@37.170.194.12)
[03:55:22] *** Joins: utraciss (~utraciss@118.100.91.150)
[04:01:58] *** Quits: Echoz (~chris@user/echoz) (Quit: WeeChat 3.3)
[04:02:21] *** Quits: M4rty (~M4rtyflex@37.170.194.12) (Quit: leaving)
[04:09:30] *** Quits: utraciss (~utraciss@118.100.91.150) (Ping timeout: 260 seconds)
[04:17:39] *** Quits: arthurpbs (~arthurpbs@168.121.99.239) (Ping timeout: 260 seconds)
[04:20:18] *** Quits: rgrinberg (~textual@190.113.111.74) (Quit: My MacBook has gone to sleep. ZZZzzz‚Ä¶)
[04:20:44] *** Quits: neightchan (~nate@108-233-125-227.lightspeed.sntcca.sbcglobal.net) (Quit: WeeChat 2.9)
[04:22:21] *** Quits: FluffyMask (~masque@user/fluffymask) (Quit: WeeChat 3.3)
[04:32:07] *** blossomsheher[m] is now known as blossom[m]
[04:33:08] *** Quits: sumner (m-35dsa2@li978-161.members.linode.com) (Remote host closed the connection)
[04:33:41] *** Joins: sumner (m-35dsa2@li978-161.members.linode.com)
[04:48:21] *** Joins: aks[m] (~aksiamatr@2001:470:69fc:105::c8b7)
[04:48:22] *** Parts: aks[m] (~aksiamatr@2001:470:69fc:105::c8b7) ()
[04:49:12] *** Joins: mfiano_ (user@2600:3c03::f03c:91ff:fe7a:6d7f)
[04:52:15] *** Quits: finstern1s (~X@23.226.237.192) (Quit: leaving)
[04:52:17] *** Quits: kajiryoji (~kajiryoji@180.160.56.140) (Quit: ZNC 1.8.2 - https://znc.in)
[04:52:30] *** Quits: mfiano_ (user@2600:3c03::f03c:91ff:fe7a:6d7f) (Remote host closed the connection)
[04:53:36] *** Joins: kajiryoji (~kajiryoji@180.160.56.140)
[04:54:23] *** Joins: finsternis (~X@23.226.237.192)
[04:56:05] *** Joins: gggp (~gggp@li870-78.members.linode.com)
[04:56:32] *** Quits: gggp (~gggp@li870-78.members.linode.com) (Client Quit)
[04:59:56] *** Quits: omni (~user@shellbox.hack.org) (Read error: Connection reset by peer)
[05:00:36] *** Quits: mfiano (~user@2603-7081-2d02-95bd-0250-b6ff-fef3-da40.res6.spectrum.com) (Remote host closed the connection)
[05:02:06] *** Joins: mfiano (user@2600:3c03::f03c:91ff:fe7a:6d7f)
[05:02:06] *** Quits: mfiano (user@2600:3c03::f03c:91ff:fe7a:6d7f) (Read error: Connection reset by peer)
[05:04:39] *** Joins: mfiano (user@2600:3c03::f03c:91ff:fe7a:6d7f)
[05:05:03] *** Joins: omni (~user@shellbox.hack.org)
[05:07:35] *** Quits: trace987 (~trace@ip5b429941.dynamic.kabel-deutschland.de) (Ping timeout: 264 seconds)
[05:08:36] *** Joins: natechan (~nate@108-233-125-227.lightspeed.sntcca.sbcglobal.net)
[05:14:30] *** Quits: natechan (~nate@108-233-125-227.lightspeed.sntcca.sbcglobal.net) (Quit: WeeChat 2.9)
[05:15:02] *** Quits: ec (sid1544@tinside.irccloud.com) (Killed (palladium.libera.chat (Nickname regained by services)))
[05:27:14] *** Joins: rgrinberg (~textual@190.113.111.74)
[05:29:54] *** Quits: keypusher (keypusher@user/keypusher) (Ping timeout: 268 seconds)
[05:35:23] *** Joins: oddmunds (~oddmunds@81.0.173.254)
[05:39:59] *** Quits: oddmunds (~oddmunds@81.0.173.254) (Ping timeout: 264 seconds)
[05:40:35] *** Joins: d34df00d (~d34df00d@2600:1700:8c60:3a10::48)
[05:40:44] <d34df00d> Hi!
[05:41:29] <syntaxman> Whenever I edit my lua configs, I get diagnostic messages that say "Undefined global `vim`"
[05:41:30] <d34df00d> nvim_buf_get_extmarks returns the extmarks contained within a given range. It it possible to do something slightly backwards ‚Äî given a cursor position, get the extmarks that contain this cursor?
[05:43:22] *** Joins: keypusher (keypusher@user/keypusher)
[06:04:01] *** Quits: falk689 (~falk689-q@gateway/tor-sasl/falk689) (Quit: No Ping reply in 180 seconds.)
[06:04:02] *** Joins: trace987 (~trace@ip5b429941.dynamic.kabel-deutschland.de)
[06:04:15] *** Quits: DaNeenjah (~jake@adsl-74-230-8-177.hsv.bellsouth.net) (Quit: WeeChat 3.3)
[06:05:00] *** Quits: cmbengue (~Thunderbi@207.191.249.160) (Remote host closed the connection)
[06:05:26] *** Joins: cmbengue (~Thunderbi@207.191.249.160)
[06:05:39] *** Joins: falk689 (~falk689-q@gateway/tor-sasl/falk689)
[06:15:57] *** Quits: Intelo (~Intelo@88.246.77.74) (Ping timeout: 256 seconds)
[06:21:27] *** Joins: Rue (~rue@2001-b011-1000-131e-573e-dcac-535b-0403.dynamic-ip6.hinet.net)
[06:39:23] *** Quits: trace987 (~trace@ip5b429941.dynamic.kabel-deutschland.de) (Ping timeout: 264 seconds)
[06:45:24] *** Quits: SirJitsu1 (~SirJitsu@162-231-111-175.lightspeed.livnmi.sbcglobal.net) (Remote host closed the connection)
[06:45:47] *** Joins: SirJitsu1 (~SirJitsu@162-231-111-175.lightspeed.livnmi.sbcglobal.net)
[06:50:28] *** Quits: falk689 (~falk689-q@gateway/tor-sasl/falk689) (Remote host closed the connection)
[06:50:43] *** Joins: falk689 (~falk689-q@gateway/tor-sasl/falk689)
[06:57:43] *** Quits: cmbengue (~Thunderbi@207.191.249.160) (Quit: Thanks, see you later.)
[06:57:52] *** Quits: rgrinberg (~textual@190.113.111.74) (Quit: My MacBook has gone to sleep. ZZZzzz‚Ä¶)
[06:59:07] *** Joins: emf (~emf@2620:10d:c090:400::5:9927)
[07:00:19] *** Quits: emf (~emf@2620:10d:c090:400::5:9927) (Client Quit)
[07:05:02] *** Joins: cmbengue (~Thunderbi@207.191.249.160)
[07:42:00] <p00f[m]> <syntaxman> "Whenever I edit my lua configs..." <- ```lua... (full message at https://libera.ems.host/_matrix/media/r0/download/libera.chat/1bfd014d1547ed9761599accb8b3f0d8cffa05e6)
[07:45:54] *** Joins: natechan (~nate@108-233-125-227.lightspeed.sntcca.sbcglobal.net)
[07:54:46] *** Quits: Firecatmon (~firecatmo@180.149.228.116) (Quit: Konversation terminated!)
[07:57:09] *** Quits: arkurious (~arkurious@user/arkurious) (Quit: Leaving)
[08:19:05] *** Joins: rgrinberg (~textual@190.113.111.74)
[08:19:06] *** Quits: rgrinberg (~textual@190.113.111.74) (Client Quit)
[08:34:29] <aphysically> I like vim's tree-sitter syntax highlighting..sometimes I don't always prefer what the authors choose to mark though
[08:34:45] <aphysically> overall improvement
[08:35:56] *** Joins: trace987 (~trace@ip5b429941.dynamic.kabel-deutschland.de)
[08:36:50] <aphysically> I kinda wish the rust-analyzer type inlays could be actually inlayed like in vscodium (instead of off to the right)
[08:37:15] <aphysically> I think that might need something vim doesn't support yet though (like anticonceal or something like that?)
[08:38:16] *** Quits: DixieFlatline (~soryuu@pool-173-61-70-58.cmdnnj.fios.verizon.net) (Remote host closed the connection)
[08:46:26] <mjlbach[m]> <aphysically> "I think that might need somethin..." <- yes
[08:49:44] <hendry> When I run `nvim +"CocInstall coc-tsserver"` it doesn't actually work. Any ideas why?
[08:50:11] *** Quits: Gumshoe (~whoa@cpe-107-184-42-236.socal.res.rr.com) (Read error: Connection reset by peer)
[08:50:29] *** Joins: Gumshoe (~whoa@cpe-107-184-42-236.socal.res.rr.com)
[08:50:35] <mjlbach[m]> Do you just want to install coc headless?
[08:50:47] <mjlbach[m]> They have a gitter you can ask
[08:50:55] <mjlbach[m]> * can ask on where there is more expertise
[08:55:31] *** Joins: engest (~engest@50.39.189.203)
[08:58:27] *** Joins: Bug[m] (~qbugmatri@2001:470:69fc:105::94bf)
[08:58:54] *** Quits: trace987 (~trace@ip5b429941.dynamic.kabel-deutschland.de) (Ping timeout: 260 seconds)
[09:00:19] <aphysically> ahah I found an issue for it; I was having a hard time putting a word to the feature to search for it https://github.com/neovim/neovim/pull/9496
[09:07:05] <aphysically> I need to figure out the theming for my buf hover, it's kinda weird and inconsistent with everything else https://i.imgur.com/M6V9STF.png
[09:07:30] <aphysically> from the native LSP lua vim.lsp.buf.signature_help
[09:07:41] <aphysically> not sure what I need to look at for it
[09:08:31] <aphysically> oops I mean lua vim.lsp.buf.signature_help
[09:08:44] <aphysically> errr, vim.lsp.buf.hover
[09:08:46] <aphysically> clipboards are hard
[09:08:58] <tomtomjhj[m]> `:hi NormalFloat`?
[09:12:16] *** Joins: guido (~guido@host-95-234-249-204.retail.telecomitalia.it)
[09:14:03] <aphysically> let's look
[09:15:39] <aphysically> set winhl=Normal:Normal seems to be more to my liking; I wonder if I can modify it to make the background just slightly lighter
[09:19:44] <tomtomjhj[m]> IIRC `:hi NormalFloat guibg=#rrggbb` should be sufficient (without manually adjusting `winhl`)
[09:23:31] <aphysically> I'll have to read to figure out best way to access color scheme colors
[09:30:53] <aphysically> can those even be accessed?
[09:31:13] * aphysically is trying to figure out what is exposed to the config without using the color directly https://github.com/overcache/NeoSolarized/blob/master/colors/NeoSolarized.vim
[09:36:00] * aphysically is getting exotic in attempts :hi NormalFloat guibg=g:terminal_color_2
[09:37:02] <tomtomjhj[m]> try `:exe 'hi NormalFloat guibg=' . g:terminal_color_2` 
[09:38:39] <aphysically> I wonder if I can just use the ANSI colors somehow.....although that would probably use the terminal color scheme instead of my vim one which probably isn't ultimately what I want (even if it would work here)
[09:40:24] <aphysically> that did work by the way
[09:40:31] *** Quits: engest (~engest@50.39.189.203) (Ping timeout: 245 seconds)
[09:40:59] <aphysically> I'm not sure which of these are standardized names - the s: names are local to the color scheme file I think?
[09:41:58] <tomtomjhj[m]> If you unset `termguicolors` and use `ctermbg=N` where `N = 0, 1, ... 15`, this will use the terminal colors. Not sure if it's possble to use terminal colors when termguicolors is on.
[09:42:23] <tomtomjhj[m]> `s:` things are local to the script file
[09:42:44] <aphysically> I guess I was expecting the color scheme to be exposing some standard set of names somewhere and not only setting specific colors for a bunch of different things but that doesn't really seem to be true :^)
[09:43:00] <tomtomjhj[m]> and they can't be used outside the script, though there are some hacky wasy to do so
[09:44:06] <aphysically> eh I'm fine just setting the background to be the same as normal and not worrying about trying to make it slightly lighter if it's going to be a hassle
[09:44:14] <tomtomjhj[m]> Some colorschemes expose global variables or public function that returns the colors, but it seems that the one you're using doesn't provide one.
[09:45:01] <aphysically> well, I was hoping for a cross-colorscheme solution anyway :P; but to set it to the regular background it's hi NormalFloat guibg=
[09:45:37] <aphysically> well this works :P `:hi NormalFloat guibg=invalid`
[09:47:18] <tomtomjhj[m]> If you want NormalFloat to be exactly the same as Normal, then `:hi! link NormalFloat Normal` would be better
[09:47:41] <aphysically> what's the !?
[09:48:22] <aphysically> I like the color that's the background of the number column
[09:48:51] <tomtomjhj[m]> override the previous `:hi link`. By default `NomalFloat` is linked to `Pmenu`, which is probably why your hover window color was inverted.
[09:50:07] <tomtomjhj[m]> The number coloumn uses `LineNr` highlight group
[09:52:20] <aphysically> ah yes I found it
[09:52:43] <aphysically> thanks for your help I think I'll leave it linked to Normal; it doesn't contrast well, but there's an outline at least for the main thing I'll be using it with anyway
[09:52:55] <aphysically> and it's more readable than the Pmenu :^)
[10:02:39] <mjlbach[m]> I need someone who uses non-english characters and the built-in client to test something, preferably someone who has historically had to disable incremental sync
[10:03:34] <ShougoShougo[m]> I have improved ddc.vim starting overhead.
[10:03:52] <ShougoShougo[m]> It is almost same with deoplete initialization time.
[10:04:01] <mjlbach[m]> woo, that's exciting :) 
[10:04:05] <mjlbach[m]> we'll have to add it to the lspconfig wiki
[10:04:37] <ShougoShougo[m]> deoplete starting time is not fast though.  It has some blocking.  So ddc.vim is better than deoplete.
[10:07:51] <ShougoShougo[m]> ddc.vim supports both Vim and neovim.  Almost same feature works in both environments.
[10:07:57] <ShougoShougo[m]> This is advantage.
[10:08:28] *** Joins: Guest8779 (~Guest87@2a09:bac0:98::830:861d)
[10:08:48] <bard[m]> does anyone have a favorite plugin for showing css colors in neovim? It seems like there are several of them out there
[10:10:59] <bard[m]> nvim-colorizer hasn't had any commits this year unlike vim-css-color and colorizer, but nvim-colorizer is written in lua instead of vimscript which probably makes it a bit better. maybe it just doesn't need to be changed often.
[10:11:22] <mjlbach[m]> ncalli hasn't been active
[10:11:31] <mjlbach[m]> nvim-colorizer could be forked and maintained by someone 
[10:15:10] *** Joins: gambusia (~gambusia@2604:3d09:3e7c:e5a0:f21a:66f3:b73b:4d5e)
[10:19:03] *** Quits: gambusia (~gambusia@2604:3d09:3e7c:e5a0:f21a:66f3:b73b:4d5e) (Client Quit)
[10:23:16] <sudoforge> the first entry in my rtp is ~/.config/nvim, and i'm only using init.lua (not init.vim). why am i getting a "module not found" error when `require("options")`?
[10:23:35] <sudoforge> and yes, the module exists at ~/.config/nvim/lua/options.lua
[10:23:54] <sudoforge> although, to wit, ~/.config/nvim/lua` is a symlink (if that makes any difference whatsoever)
[11:19:47] *** Quits: Gumshoe (~whoa@cpe-107-184-42-236.socal.res.rr.com) (Quit: My MacBook has gone to sleep. ZZZzzz‚Ä¶)
[11:39:15] <sudoforge> nvm, figured it out
[11:39:22] <sudoforge> some silent error with syntax
[11:55:18] *** Joins: trace987 (~trace@ip5b429941.dynamic.kabel-deutschland.de)
[12:00:13] *** Joins: cassepipe (~cassepipe@176-155-131-22.abo.bbox.fr)
[12:00:17] <kylo252[m]> any idea what this is? 
[12:00:17] <kylo252[m]> > Error executing vim.schedule lua callback: Vim:E849: Too many highlight and syntax groups
[12:00:17] <kylo252[m]> https://github.com/LunarVim/LunarVim/issues/1880
[12:03:35] *** Joins: M4rty (~M4rtyflex@37.164.92.2)
[12:03:59] *** Quits: trace987 (~trace@ip5b429941.dynamic.kabel-deutschland.de) (Ping timeout: 264 seconds)
[12:11:45] *** xy is now known as icy
[12:19:24] <sunjonSenghanBri> at a guess, a highlight command inside an autocmd without `!` guard, stacking up and exceeding MAX_HL_ID (20000) ?
[12:20:29] <sunjonSenghanBri> that looks to be the conditions to throw that error in syntax.c
[12:21:11] <sunjonSenghanBri> you could get them to run some debug command to check how many hl_groups they have allocated
[12:21:37] <sunjonSenghanBri> `:lua print( select(2, vim.fn.execute('hi'):gsub("\n", "\n")) )`
[12:22:31] *** Quits: swimmer (~swimmer@user/swimmer) (Remote host closed the connection)
[12:23:02] <sunjonSenghanBri> TIL about lua `select()`
[12:23:03] *** Quits: Pingerfowder (~Pingerfow@bishibosh.stronk.xyz) (Quit: ZNC - https://znc.in)
[12:23:15] *** Joins: Pingerfowder (~Pingerfow@bishibosh.stronk.xyz)
[12:27:35] *** Joins: swimmer (~swimmer@user/swimmer)
[12:30:08] *** Quits: inocrealist[m] (~inocreali@2001:470:69fc:105::df42) (Quit: You have been kicked for being idle)
[12:30:09] *** Quits: axel[m]1 (~axelshade@2001:470:69fc:105::c9cf) (Quit: You have been kicked for being idle)
[12:30:09] *** Quits: jgoett154[m] (~jgoett154@2001:470:69fc:105::1:3b2) (Quit: You have been kicked for being idle)
[12:30:09] *** Quits: Jacob[m]1 (~jacobmatr@2001:470:69fc:105::1:8a3) (Quit: You have been kicked for being idle)
[12:30:09] *** Quits: erwinkn[m] (~erwinkmat@2001:470:69fc:105::d0e0) (Quit: You have been kicked for being idle)
[12:30:09] *** Quits: gxlyozid8[m] (~gxlyozid8@2001:470:69fc:105::1:8ce) (Quit: You have been kicked for being idle)
[12:30:09] *** Quits: linus_minus[m] (~linusminu@2001:470:69fc:105::ff6b) (Quit: You have been kicked for being idle)
[12:30:09] *** Quits: miasma[m] (~miasmamat@2001:470:69fc:105::ed3d) (Quit: You have been kicked for being idle)
[12:32:47] <kylo252[m]> <sunjonSenghanBri> "that looks to be the conditions..." <- thanks for looking into that ‚ù§Ô∏è
[12:34:15] *** Quits: ebray187 (~ebray187@2800:150:129:17c4:224:1dff:fed5:599e) (Quit: Konversation terminated!)
[12:43:01] *** Quits: bookworm (~bookworm@neomutt/bookworm) ()
[12:43:12] <bloony> Why is this not mapping C-, and C-. to buffer next/prev?... (full message at https://libera.ems.host/_matrix/media/r0/download/libera.chat/ba63a25b64a7b809b5fd8184d54e69446f0aad65)
[12:43:59] *** Joins: aitvaras (~aitvarase@2001:470:69fc:105::687)
[12:45:21] *** Joins: bookworm (~bookworm@neomutt/bookworm)
[12:48:08] *** Quits: cassepipe (~cassepipe@176-155-131-22.abo.bbox.fr) (Read error: No route to host)
[12:48:11] *** Joins: bajaba (~cassepipe@176-155-131-22.abo.bbox.fr)
[12:57:41] *** Joins: oddmunds (~oddmunds@81.0.173.254)
[13:08:03] <clason[m]> <mjlbach[m]> "I need someone who uses non-..." <- Depending on what exactly you need, I could try
[13:08:15] <mjlbach[m]> Its ok, I think its correct/validated :) 
[13:09:31] *** Joins: trace987 (~trace@ip5b429941.dynamic.kabel-deutschland.de)
[13:21:15] *** Quits: Guest8779 (~Guest87@2a09:bac0:98::830:861d) (Quit: Client closed)
[13:22:49] *** Joins: zostj (~rue@1-162-45-98.dynamic-ip.hinet.net)
[13:23:27] *** Quits: zostj (~rue@1-162-45-98.dynamic-ip.hinet.net) (Client Quit)
[13:23:45] *** Joins: zostj (~rue@1-162-45-98.dynamic-ip.hinet.net)
[13:36:14] <beerman> I am in a bit of a pickle. I am trying to switch from compe to cmp and it seems to interfere with one of my other plugins, so that a few keybindings start throwing this error `Error executing lua ...site/pack/packer/start/nvim-cmp/lua/cmp/utils/keymap.lua:245: attempt to index local 'definition' (a nil value)`
[13:36:14] <beerman> I have already tried with a minimal config and that solves it, but i can't find what interferes here - can somebody give me a pointer to find the needle in the haystack?
[13:36:52] <mjlbach[m]> binary search
[13:37:38] *** Quits: bookworm (~bookworm@neomutt/bookworm) (Read error: Connection reset by peer)
[13:38:03] *** Joins: bookworm (~bookworm@neomutt/bookworm)
[13:39:22] *** Quits: vroom (~vroom@user/vroom) (Read error: Connection reset by peer)
[13:40:17] *** Quits: sudoforge (~sudoforge@wireguard/tunneler/sudoforge) (Ping timeout: 264 seconds)
[13:41:58] <beerman> damn, no other way around it? this sounds like a time sink with ~60 plugins in use :)
[13:42:20] <clason[m]> that's what binary search is for
[13:42:49] <clason[m]> only need 6 steps :]
[13:43:12] <beerman> binary search as in from a minimal init.lua start adding back stuff until the error occurs? 
[13:43:52] <tomtomjhj[m]> but for this kind of stuff you should do delta debugging, which has much worse complexity
[13:43:56] *** Joins: vroom (~vroom@cable-84-43-163-47.mnet.bg)
[13:43:56] *** Quits: vroom (~vroom@cable-84-43-163-47.mnet.bg) (Changing host)
[13:43:56] *** Joins: vroom (~vroom@user/vroom)
[13:44:33] <clason[m]> as in https://en.wikipedia.org/wiki/Binary_search_algorithm
[13:48:01] <beerman> i am not a cs student, is there any documentation on how i would go about it?
[13:48:40] <clason[m]> you take out half, see if it still happens
[13:49:25] <beerman> heh, ok, i can do that
[13:49:44] <clason[m]> 1. if it does, the problem is in the remaining half
[13:49:44] <clason[m]> 2. if it does not, the problem was in the removed half, so you add that back and remove the other half
[13:50:07] <clason[m]> Then repeat by removing half of whatever half you have; lather, rinse, repeat
[13:50:10] <mjlbach[m]> I feel like they should teach this to non-CS students, it's just generally useful life advice
[13:51:11] <clason[m]> (I was thinking about writing something like this -- about how every kindergarten should teach you to tie your shoelaces and do binary search -- but worried that it sounded condescending...)
[13:51:48] <clason[m]> (also quicksort)
[13:52:39] <dundargoc[m]> beerman: !h bisect
[13:53:02] <dundargoc[m]> !help bisect
[13:53:05] <nvim-bot[m]> Links to referenced help pages:
[13:53:05] <nvim-bot[m]> * [`bisect`](https://neovim.io/doc/user/starting.html#bisect) in *starting.txt*
[13:53:08] <dundargoc[m]> is broekn
[13:53:10] <beerman> thanks everybody :) I'll give it a try
[13:53:27] <clason[m]> nah, just slow :) (had a late night ;))
[13:53:32] <mjlbach[m]> huh TIL
[13:54:17] <dundargoc[m]> Would learn a lot sooner if you'd read the documentation üíÖ
[13:54:28] <dundargoc[m]> üëÄ
[13:54:43] <mjlbach[m]> dundar I will end you
[13:54:57] <dundargoc[m]> üòÖ
[13:58:09] <hendry> mjlbach[m]: would be good to have a "minimal" JS init https://github.com/nvim-lua/kickstart.nvim/blob/master/init.lua <-- bit long
[13:58:25] <mjlbach[m]> It's not meant for JS :) 
[13:58:38] <hendry> mjlbach[m]: what's meant for JS?
[13:58:46] <mjlbach[m]> Nothing
[13:59:23] <mjlbach[m]> That's mostly supposed to be a "here's a relatively idiomatic lua config with integration with all of the fancy built-in things written by someone who somewhat knows what he's doing"
[14:01:20] <hendry> just got my head around some basics in vimscript and now I need to learn lua? haha
[14:01:46] <dundargoc[m]> I know that feel...
[14:02:22] <dundargoc[m]> Unsolicited advice: don't rush it. There's a lot to take in. Don't force it too much in one go.
[14:03:09] <clason[m]> also:
[14:03:11] <clason[m]> !guide
[14:03:12] <nvim-bot[m]> https://github.com/nanotee/nvim-lua-guide
[14:04:05] <hendry> is there some compelling advantage to using nvim over my typical vim+coc-tsserver setup?
[14:04:05] *** Quits: M4rty (~M4rtyflex@37.164.92.2) (Quit: leaving)
[14:04:35] <hendry> trying to work out the pros / cons here https://github.com/kaihendry/dabase.com/commit/7173d4ece54a6cfc76b30cfb8b8db8945d45cbaa#commitcomment-58995449
[14:05:04] <mjlbach[m]> hendry: nope
[14:05:25] <mjlbach[m]> chocolate vs vanilla
[14:05:43] <mjlbach[m]> should have said strawberry to be internally consistent...
[14:05:48] <tomtomjhj[m]> kickstart already has config for tsserver
[14:06:02] <mjlbach[m]> Yeah but I didn't really optimize it for JS users
[14:06:12] <mjlbach[m]> I probably would have put nvim-ts-utils/eslintd/null-ls
[14:06:16] <tomtomjhj[m]> oh ok
[14:06:49] <mjlbach[m]> I don't do any web development and am not particularly in tune with that crowd
[14:06:51] <clason[m]> it's clearly not feasible for kickstart.nvim, but it would be nice to have a family of language-specific configs derived from it
[14:07:01] <mjlbach[m]> that's sort of the idea with try.nvim
[14:07:26] <clason[m]> true; you can just rip out the `init.lua` from it
[14:07:29] <mjlbach[m]> minimal base neovim install + kickstart + language flavor of the month + language tooling (in the container)
[14:07:34] <mjlbach[m]> Yeah that's what we did
[14:07:39] <mjlbach[m]> I didn't prune it down per language though
[14:07:51] <mjlbach[m]> it's mostly the servers table
[14:08:28] <clason[m]> well, ideally you'd have (somewhat opinionated) additional settings and plugins as they make sense for a lang
[14:08:33] <clason[m]> (not just the LSP)
[14:09:17] <mjlbach[m]> Yeah
[14:09:18] <mjlbach[m]> so
[14:09:36] <clason[m]> clason[m]: I meant "rip out the language-specific `init.lua` if you don't need or want the tooling in a container"
[14:09:37] <mjlbach[m]> I haven't figured out what I want to do yet with try
[14:10:02] *** Quits: vroom (~vroom@user/vroom) (Read error: Connection reset by peer)
[14:10:05] <mjlbach[m]> because the selfish part of me wants to not add any plugins per language because that makes me secrete nefarious purpose of eliminating all false positive bug reports more challenging
[14:10:12] <mjlbach[m]> s/secrete/secret/
[14:11:30] <clason[m]> Oh, yeah, for sure, that's what I meant by "infeasible"
[14:11:44] <mjlbach[m]> for reference, the original name of try.nvim back when it was a fancier nix project was `inmiy.nvim` (it's not me its you)
[14:12:57] <clason[m]> If it were me, I'd 
[14:12:57] <clason[m]> 1. set up a skeleton project 
[14:12:57] <clason[m]> 2. derive an example project for a language I use
[14:12:57] <clason[m]> 3. tell people to roll their own (and allow them to live inside the same org)
[14:13:16] <clason[m]> (Who am I kidding? If it were me, I wouldn't do any such thing; I'm much too lazy.)
[14:13:23] <mjlbach[m]> 1-2 is done AFAIK
[14:13:43] <mjlbach[m]> I'm not opposed to having a try.nvim-contrib or something
[14:13:45] *** Joins: vroom (~vroom@cable-84-43-163-47.mnet.bg)
[14:13:45] *** Quits: vroom (~vroom@cable-84-43-163-47.mnet.bg) (Changing host)
[14:13:45] *** Joins: vroom (~vroom@user/vroom)
[14:14:16] <clason[m]> Hmm, yes, that might be a better approach than "one-repo-per-container"
[14:14:39] <mjlbach[m]> Ah yeah, I mean, one could do that but it's kinda nice for the CI/GHA to all be in the same repo
[14:15:01] <mjlbach[m]> it only takes about 30s to add a new try.nvim container/have it built nightly :) 
[14:15:12] <clason[m]> üëçÔ∏è
[14:15:22] <clason[m]> (I would replace lightline by lualine, tho ;))
[14:17:10] <mjlbach[m]> well
[14:17:11] <mjlbach[m]> still mixed
[14:17:15] <mjlbach[m]> I've been using lualine
[14:17:26] <mjlbach[m]> but lightline is still technically faster at drawing
[14:17:35] <clason[m]> oh, interesting
[14:17:40] <clason[m]> I hadn't noticed that
[14:17:46] <mjlbach[m]> windwp did benchmarks
[14:18:21] <clason[m]> is it a significant difference?
[14:18:29] <mjlbach[m]> no
[14:18:47] <clason[m]> (my suggestion wasn't based on any technical superiority; just "it's in LUAAAAAAaaaaaa...")
[14:34:30] *** Joins: gloscombe (~gloscombe@82.25.194.79)
[14:54:21] *** Quits: thing (~thing@user/thing) (Remote host closed the connection)
[14:55:14] *** Joins: thing (~thing@user/thing)
[14:56:12] *** Joins: nostoi (~nostoi@99.red-79-148-200.dynamicip.rima-tde.net)
[14:56:22] *** Joins: M4rty (~M4rtyflex@37.164.92.2)
[15:12:14] *** Quits: M4rty (~M4rtyflex@37.164.92.2) (Ping timeout: 260 seconds)
[15:14:47] *** Joins: M4rty (~M4rtyflex@37.164.92.2)
[15:33:14] *** gloscombe is now known as gregloscombe
[15:41:34] *** Quits: gregloscombe (~gloscombe@82.25.194.79) (Quit: WeeChat 3.2)
[15:44:13] *** Quits: nostoi (~nostoi@99.red-79-148-200.dynamicip.rima-tde.net) (Quit: Leaving...)
[15:48:27] *** Joins: somebody (~ninjin@user/ninjin)
[15:49:36] *** Quits: ninjin (~ninjin@user/ninjin) (Ping timeout: 276 seconds)
[15:51:20] *** Quits: M4rty (~M4rtyflex@37.164.92.2) (Quit: leaving)
[15:54:36] *** Joins: Ilyu (~quassel@166.215.82.79.rev.sfr.net)
[15:57:38] *** Joins: M4rty (~M4rtyflex@91-166-220-92.subs.proxad.net)
[16:01:54] *** gxt_ is now known as gxt
[16:04:27] *** Joins: dumbdemic[m] (~dumbdemic@2001:470:69fc:105::de74)
[16:22:22] *** Joins: utraciss (~utraciss@118.100.91.150)
[16:34:31] *** Joins: cassepipe (~cassepipe@176-155-131-22.abo.bbox.fr)
[16:34:54] *** Quits: bajaba (~cassepipe@176-155-131-22.abo.bbox.fr) (Remote host closed the connection)
[16:45:06] *** Quits: cassepipe (~cassepipe@176-155-131-22.abo.bbox.fr) (Ping timeout: 260 seconds)
[16:46:16] *** Quits: mfiano (user@2600:3c03::f03c:91ff:fe7a:6d7f) (Remote host closed the connection)
[16:47:27] *** Joins: mfiano (~user@2603-7081-2d02-95bd-0250-b6ff-fef3-da40.res6.spectrum.com)
[16:49:23] *** Joins: cassepipe (~cassepipe@176-155-131-22.abo.bbox.fr)
[17:04:22] *** Quits: vroom (~vroom@user/vroom) (Read error: Connection reset by peer)
[17:06:35] *** Joins: engest (~engest@50.39.176.86)
[17:07:12] *** Joins: vroom (~vroom@cable-84-43-163-47.mnet.bg)
[17:07:12] *** Quits: vroom (~vroom@cable-84-43-163-47.mnet.bg) (Changing host)
[17:07:12] *** Joins: vroom (~vroom@user/vroom)
[17:21:59] *** somebody is now known as ninjin
[17:22:20] <hendry> I don't like this "chocolate vs vanilla" comparison, it looks unfocused to me
[17:22:45] <hendry> languages all need the same boring functionality, and for it to work without fuss
[17:23:20] <hendry> autoformatting, linting, autoimports, function validation/filling
[17:23:56] <beerman> okay, this is odd.... (full message at https://libera.ems.host/_matrix/media/r0/download/libera.chat/3e1ac5bb3560612b45265dfa1a47c397a0321543)
[17:23:57] <hendry> why not focus on providing the best UX for each of those typical use cases per major language
[17:24:40] <bfredl> and who should do all this focusing?
[17:27:14] <beerman> i had this in a vim file inside ~/.config/nvim/plugin, is there anything else I can do to archive that (as in when i close it saves the position of the courser, then opens the file with the cursor on the same spot)
[17:27:19] *** Joins: towb (~bwot@user/towb)
[17:27:35] *** Parts: dominiks[m] (~dominiksm@2001:470:69fc:105::1:15b4) ()
[17:31:23] <hendry> bfredl: anyone keen to be productive and not mess about
[17:31:45] <clason[m]> well, go on, do that, then
[17:31:56] <hendry> can't help but think vim/nvim is stupidly chaotic and I can't recommend it to my collegues
[17:32:43] <beerman> hendry: i hope nobody asked you to do that then? ;)
[17:33:13] <Bowuigi[m]> hendry: What isn't then?
[17:33:33] <Bowuigi[m]> I mean, what would you reccomend?
[17:34:08] <hendry> Bowuigi[m]: VS code because the out of the box defaults are pretty sane
[17:34:32] <hendry> i'm sure if there are stats, VS code is head and shoulders about vim
[17:34:39] <hendry> vim is going to be more and more esoteric
[17:34:40] <beerman> lmao...
[17:34:57] <jamessan[m]> No one asks you to evangelize (n)vim.  People will use what they want.  That's fine.
[17:35:12] <dumbdemic[m]> Depends on personal use case.  Some peeps want a batteries included experience.  Some like to tinker.
[17:35:14] *** Quits: dsrt^ (~dsrt@wsip-98-188-242-6.mc.at.cox.net) (Remote host closed the connection)
[17:36:01] <hendry> that's the problem with vim as i see it
[17:36:12] <hendry> either you have a minimal setup (as i mostly do)
[17:36:24] <hendry> or you go full retard, which is just a mess
[17:36:33] <jamessan[m]> I've seen you in the vim circle for more than a decade, hendry, and you've done fine without learning a lot of vimscript, apparently.  No one's requiring you to use lua, just like no one required you to learn vimscript.
[17:36:41] <hendry> because it doesn't do basic stuff right as i mentioned
[17:37:03] <jamessan[m]> People get out of Vim what they put in.
[17:37:27] *** Quits: cmbengue (~Thunderbi@207.191.249.160) (Quit: Thanks, see you later.)
[17:37:48] <jamessan[m]> For you, maybe.  I find the "basic" stuff that things like VSCode provide to be more disruptive than useful
[17:38:00] <dumbdemic[m]> lol there are plenty of examples, public dots and documentation to avoid "full retard" configuration
[17:38:14] <dekeract> jamessan[m]: like what?
[17:38:30] <clason[m]> and (mod hat on here), please avoid needlessly incendiary language like "full retard"
[17:38:49] <hendry> jamessan[m]: the less you put in, the more you get out of it seems to be my experience
[17:39:38] <dekeract> I had to go through 2-3 hours, and multiple days of using nvim to be satisfied with the lsp setup, it should definitely be easier to set up something so basic, especially for somebody who tinkers with configs all the time
[17:39:46] *** Joins: arkurious (~arkurious@user/arkurious)
[17:40:15] <jamessan[m]> I still haven't bothered setting up LSP ü§∑
[17:40:25] <clason[m]> Some people are never satisfied with their setup :)
[17:40:51] <jamessan[m]> dekeract: It's been awhile since I bothered trying VSCode, so I don't remember, but the specifics don't matter.  The point is that different people want different things out of their editor.
[17:40:52] <dekeract> clason[m]: I'll admit I'm one of those people, but this is just setting up LSP to work properly for most languages I use in my education
[17:40:56] <beerman> comparing (n)vim with vs code is a joke, isn't it?
[17:41:45] <clason[m]> well, used to be Emacs; now it's VS Code
[17:41:51] <clason[m]> some things never change...
[17:42:05] <beerman> trolls be trolls i guess
[17:42:12] <dekeract> I usually recommend vs code (I'm a student and other students ask me this quite frequently), i do show them my (n)vim setup just so they know something like this exists
[17:42:33] <beerman> https://github.com/hrsh7th/nvim-cmp/issues/254 i found this issue to my cmp problem with mkview/loadview
[17:42:48] <jamessan[m]> It's not about trolling.  It's about different expectations
[17:42:53] <dekeract> But I can't imagine coding without LSP. jamessan what do you use nvim for?
[17:43:45] <jamessan[m]> dekeract: I've used it for programming many different languages (C, C++, Python, Java, SML, Perl, etc.) and never used auto-completion/LSP type stuff.
[17:43:56] <jamessan[m]> I just don't find that functionality very useful
[17:44:23] <hendry> it's not useful because it's broken more than half the time, that's my experience
[17:44:25] <dekeract> jamessan: Why, and how old are you (roughly)? I'm quite young and grew up with auto-completion, can't code without it now
[17:44:28] <jamessan[m]> `:make` has been more than enough for me
[17:44:48] <hendry> i'm astonished how awful it is to code Javascript. it's much much better in Go with vim-go.
[17:44:57] * hendry whispers a prayer in thanks of vim-go
[17:45:21] <jamessan[m]> I've been working professionally with (n)vim as my editor for 17 years
[17:45:53] <jamessan[m]> aside from a brief period where I used emacs
[17:46:07] <hendry> jamessan[m]: i'm surprised you bother with nvim, i thought the selling point of nvim was the LSP
[17:46:21] <jamessan[m]> LSP is very recent
[17:46:32] <jamessan[m]> I've been using nvim for many years
[17:46:34] <bfredl> haha a colleage of me asked me "so why should _I_ use neovim" and had to think a bit for an answer because I never had the need to evangelize. There's already enough users who demand features from me :P
[17:46:47] <hendry> jamessan[m]: why is nvim > vim for you out of interest?
[17:46:58] <jamessan[m]> The community
[17:46:58] <windwp[m]> the selling point is lua
[17:47:07] <dekeract> I used an IDE for java in class, and honestly, I don't see how code generation/auto-completion can be something that doesn't increase productivity
[17:47:38] <jamessan[m]> I've been contributing to Vim for ~20 years and maintaining it in Debian for nearly as long, but I've enjoyed interacting with/being a part of the nvim community much more
[17:47:43] <dumbdemic[m]> Configuring Neovim with lua was a great design decision imo
[17:47:53] <hendry> jamessan[m]: fresh blood
[17:48:23] <clason[m]> (configuring was a happy side-effect; the main design decision was scripting in Lua...)
[17:48:41] <jamessan[m]> and implementing new functionality in Lua rather than C
[17:49:33] <hendry> functionality i just don't see
[17:49:59] <hendry> i can't see any workflow being better in neovim
[17:50:19] <clason[m]> that's fine; different people have different workflows
[17:50:19] <bfredl> Don't use it then, if you don't see a need for it.
[17:50:21] <beerman> hendry: out of curiosity, what are you trying to archive here? 
[17:50:28] <clason[m]> just use whatever works for you
[17:50:40] <clason[m]> (and don't poop on other people's tools)
[17:51:03] <hendry> beerman: my blog I wrote today https://dabase.com/tips/vim/2021/Editing-Javascript-in-vim-in-Docker/
[17:51:15] <beerman> well you seem to have archived that already
[17:51:29] <hendry> beerman: archived?
[17:51:30] <beerman> that leaves my original question, but thanks for the blog post, i'll read it ;)
[17:51:37] <dekeract> jamessan: can we agree that even though not everyone needs LSP, it shouldn't take more than 5 minutes to install/configure for those that do?
[17:52:04] <clason[m]> not necessarily, if that makes it less configurable/extensible for others
[17:52:05] <beerman> hendry: sorry, i am not a native english speaker, but you wrote that blog post already, so what are you doing here? I can't help it, it feels like trolling deluxe
[17:52:41] <jamessan[m]> dekeract: Given that I haven't tried to set it up, I can't comment on how long it takes.  That seems like longer than it should take, given the work I've seen people put into it.  Maybe there was some documentation that wasn't clear enough.
[17:52:44] <gpanders[m]> dekeract: What exactly is difficult about `require(‚Äúlspconfig‚Äù).clangd.setup{}` ?
[17:52:48] <hendry> beerman: you're the troll for steering the conversaion off course
[17:52:51] <clason[m]> there's a trade-off here, and Neovim made a decision to focus on configurability over ease to set up (where these are in conflict; where not, the goal is of course to make it as easy as possible)
[17:53:03] <beerman> hendry: rofl, yep, ok, whatever. i rest my case
[17:53:07] <bfredl> dekeract: install/configure what? LSP is an abstract conscept, not a single "thing" you either have or not.
[17:53:29] <bfredl> like you can just use a single server and three keybinds, and config that in 30 seconds
[17:53:35] <beerman> hendry:  also: conversaion? *scnr*
[17:53:46] <clason[m]> I'm clearly biased, but I think that was the _right_ decision since
[17:53:46] <clason[m]> 1. it aligns with (Neo)vim's general philosophy
[17:53:46] <clason[m]> 2. there are already other, more "batteries-included" LSP clients out there (CoC, for one)
[17:54:31] <dekeract> gpanders[m]: That I didn't know that it was all that was needed?
[17:54:37] <clason[m]> (and please keep it civil. discussion design decisions is fine; calling each other names is not)
[17:54:50] <clason[m]> dekeract: Why did you not know about that?
[17:54:56] <jamessan[m]> Right, neovim's general principal has been to create the building blocks and work with the community to reduce friction points.
[17:54:59] <clason[m]> (Honest question)
[17:55:01] <dekeract> bfredl: That is the thing, with other code editors, you dont NEED to know these things, you just start them up and start coding
[17:55:12] <gpanders[m]> dekeract: Then use those editors
[17:55:13] <gpanders[m]> Bye
[17:55:30] <bfredl> dekeract: nope, there is no such thing as "other code editors" which all behave the same.
[17:55:39] <bfredl> if you mean just vscode, say just vscode
[17:56:17] <dekeract> bfredl: vscpde
[17:56:21] <dekeract> > <@bfredl:matrix.org> if you mean just vscode, say just vscode
[17:56:21] <dekeract>  * vscode
[17:56:33] <clason[m]> and what would be the point in writing another VS Code?
[17:56:56] <bfredl> tbh coc is what you should use if you want neovim to behave like vscode
[17:57:15] <hendry> clason[m]: be competitive
[17:57:23] <bfredl> no need to turn the builtin LSP into vscode when there already is a vscode-in-neovim plugin
[17:57:34] <dumbdemic[m]> Setting up LSP has become fairly user friendly you can get a reasonable out of the box experience following lspconfig guides mileage may vary depending on how many lsp servers, autocomplete/snippet integration and linting etc.
[17:57:36] <clason[m]> why?
[17:57:43] <clason[m]> what would we gain from that?
[17:57:56] <hendry> clason[m]: fresh blood
[17:58:24] <bfredl> FOSS is not just about competition, it is also about re-use
[17:58:39] <bfredl> coc allows you to reuse the vscode client code, inside neovim.
[17:58:43] <clason[m]> this is hard to put into tactful works, but what do we gain from users who can only use the editor if it's a one-click setup?
[17:58:52] <clason[m]> they're not going to become contributors
[17:58:53] <bfredl> no need for anyone to rewrite all of that from scratch, to just behave the same
[17:59:25] <hendry> FOSS is about being relevant to me, actual solving real problems, real itches
[17:59:44] <bfredl> so use the FOSS code that solves your problems
[17:59:47] <jamessan[m]> FOSS is about you being able to solve your problems
[17:59:48] <bfredl> instead of complaining here
[17:59:54] <hendry> bfredl: competition isn't about being the same as vscode
[17:59:57] <jamessan[m]> Not expecting other people to do it for you
[18:00:02] <clason[m]> s/works/words/
[18:00:10] <windwp[m]> hendry  it is only your problem
[18:00:17] <bfredl> hendry: good! because that's not what nvim-lsp attempts
[18:00:27] <clason[m]> > FOSS is about being relevant to me
[18:00:27] <clason[m]> That's a very telling way of putting things...
[18:00:48] <sunjonSenghanBri> "Get your pitchforks! 5 for a dollar!" :]
[18:01:21] <clason[m]> It's Halloween ;)
[18:02:18] <hendry> clason[m]: do you think people who use VS code won't become contributors, did I understand you right? haha 
[18:02:30] <windwp[m]> hi sunjon
[18:02:30] <sunjonSenghanBri> hey :]
[18:03:08] <dekeract> I guess it depends on why you use vim, I use it because it isn't afraid to force me to use keyboard for everything, if I put the time into learning the keybindings (which I did), everything is super-quick and smooth, I can't get that experience anywhere else.
[18:03:09] <windwp[m]> i am thinking you will talk on vimconf
[18:03:13] <Bowuigi[m]> <hendry> "Bowuigi: VS code because the out..." <- Ah
[18:03:13] <clason[m]> No, I think people who are put off with configuring an editor will not take the time to contribute to it.
[18:03:33] <clason[m]> s/with/by/, s/configuring/_configuring_/, s/contribute/_contribute_/
[18:03:47] <sunjonSenghanBri> windwp:matrix.org: nah, I'm too noob. I have something cool to show in the next day or two tho
[18:04:40] <sunjonSenghanBri> hendry:libera.chat: to be fair, this has all the traits of the results of a frustrating personal experience trying to configure things (that you didn't necessarily have to)
[18:04:43] <hendry> clason[m]: i don't think that's true
[18:05:13] <clason[m]> only way of proving me wrong is to start contributing to Neovim ;)
[18:05:40] <hendry> sunjonSenghanBri: you're right, I shouldn't have bothered with nvim-lsp, haha
[18:06:11] <dekeract> And I do agree that spending time to configure your vim is part of the vim experience, but is the reason why I'll never recommend vim, people who use vim discover it by themselves
[18:06:54] <sunjonSenghanBri> whatever happened to kiwiIRC
[18:07:02] <hendry> clason[m]: well, i make it easy for people to be frustrated, haha alias je='f(){ docker run -it --rm -v $(pwd):/proj hendry/js-nvim:latest; unset -f f; }; f'
[18:07:33] <beerman> when i read no docker for nvim compe i almost fell from my chair laughing btw :)
[18:07:51] <gpanders[m]> sunjonSenghanBri: It‚Äôs still around isn‚Äôt it?
[18:08:56] <windwp[m]> hendry  you can do all thing you want on nvim-lsp similar to coc but you need to learn about it first. it doesn't has a 1 install command then everything is ready
[18:09:22] <sunjonSenghanBri> "kung-fu in a pill"
[18:09:55] <clason[m]> Neovim: "Whoa. I know LSP!"
[18:11:31] *** Joins: logistic-bot (~school@2a01:cb14:9aa:9c00:b69c:768:a9b9:af2a)
[18:11:39] <beerman> https://1.bp.blogspot.com/_7ra2ZfQBpjY/TBKSyIUYzyI/AAAAAAAAAlM/W_QKmT87Y_o/s1600/Don-Quixote-Windmill.jpg i'll just leave this here
[18:14:49] <jan[m]123456> > <@clason:matrix.org> If it were me, I'd... (full message at https://libera.ems.host/_matrix/media/r0/download/libera.chat/a164b5cb6937bbf6dbca78b021412e44a87b0578)
[18:15:21] <clason[m]> yes, that was roughly what I was thinking
[18:15:39] *** Quits: vroom (~vroom@user/vroom) (Read error: Connection reset by peer)
[18:19:06] *** Joins: vroom (~vroom@cable-84-43-163-47.mnet.bg)
[18:19:06] *** Quits: vroom (~vroom@cable-84-43-163-47.mnet.bg) (Changing host)
[18:19:06] *** Joins: vroom (~vroom@user/vroom)
[18:19:54] <beerman> i think it's only deserved to say thanks once again to all nvim contributors and coders! ‚ù§Ô∏è you all rock
[18:20:21] *** Quits: utraciss (~utraciss@118.100.91.150) (Quit: %quit from znc%)
[18:25:21] *** Quits: cassepipe (~cassepipe@176-155-131-22.abo.bbox.fr) (Remote host closed the connection)
[18:25:35] *** Joins: nrl^ (~nrl@wsip-98-188-242-6.mc.at.cox.net)
[18:27:52] *** Quits: logistic-bot (~school@2a01:cb14:9aa:9c00:b69c:768:a9b9:af2a) (Remote host closed the connection)
[18:27:56] *** Quits: mfiano (~user@2603-7081-2d02-95bd-0250-b6ff-fef3-da40.res6.spectrum.com) (Remote host closed the connection)
[18:32:19] *** Joins: ebray187 (~ebray187@2800:150:129:17c4:224:1dff:fed5:599e)
[18:33:55] *** Quits: hendry (~hendry@210.23.22.2) (Ping timeout: 260 seconds)
[18:34:25] *** Joins: hendry (~hendry@210.23.22.2)
[18:40:46] *** Quits: carlavilla (~carlavill@2a0c:5a84:3607:2f00:221:6bff:fe3b:cee4) (Remote host closed the connection)
[18:45:14] *** Joins: szgy (~szgy@2800:810:549:8290::1)
[18:46:41] *** Quits: vroom (~vroom@user/vroom) (Read error: Connection reset by peer)
[18:47:43] *** Joins: vroom (~vroom@cable-84-43-163-47.mnet.bg)
[18:47:43] *** Quits: vroom (~vroom@cable-84-43-163-47.mnet.bg) (Changing host)
[18:47:43] *** Joins: vroom (~vroom@user/vroom)
[18:49:39] *** Joins: j-k[m] (~j-kmatrix@2001:470:69fc:105::4e07)
[18:54:12] *** Joins: sudoforge (~sudoforge@wireguard/tunneler/sudoforge)
[18:57:31] *** Quits: vroom (~vroom@user/vroom) (Read error: Connection reset by peer)
[18:58:59] *** Joins: vroom (~vroom@cable-84-43-163-47.mnet.bg)
[18:58:59] *** Quits: vroom (~vroom@cable-84-43-163-47.mnet.bg) (Changing host)
[18:58:59] *** Joins: vroom (~vroom@user/vroom)
[18:59:03] <j-k[m]> Is there a way I can just feed in a config with `-u` and force it not to look at `$XDG_CONFIG_HOME/nvim/init.vim`?
[18:59:03] <j-k[m]> I've tried `-u NONE` (just ignores everything `-u NORC` and `MYVIMRC=/dev/null`, but only `XDG_CONFIG_HOME=/dev/null` works, but I'm expecting that to pass through to any other program I run from neovim like LSPs etc and not read the config files
[19:00:34] <clason[m]> yes, `--clean`
[19:00:47] <clason[m]> (needs to come _before_ the `-u`)
[19:00:52] *** Quits: M4rty (~M4rtyflex@91-166-220-92.subs.proxad.net) (Quit: leaving)
[19:01:23] *** Joins: tyler_ (~varioust@72-46-56-102.lnk.ne.static.allophone.net)
[19:01:55] <j-k[m]> clason[m]: Thanks, I'll try that now
[19:01:58] <clason[m]> so `nvim --clean -u my_init.lua`
[19:02:41] <clason[m]> (`-u` does load a config file _instead_ of `init.vim`, but still loads your start packages)
[19:02:54] <clason[m]> * start packages; `--clean` skips all user runtime path)
[19:03:21] <j-k[m]> Yeah that did it, thanks üöÄ
[19:03:25] *** Quits: tyler_ (~varioust@72-46-56-102.lnk.ne.static.allophone.net) (Client Quit)
[19:03:42] <clason[m]> üëçÔ∏è
[19:03:43] <j-k[m]> I tried `--clean` but it was at the end before üòÖ
[19:03:47] *** Joins: varioust (~varioust@72-46-56-102.lnk.ne.static.allophone.net)
[19:04:04] *** Joins: DixieFlatline (~soryuu@pool-173-61-70-58.cmdnnj.fios.verizon.net)
[19:06:11] *** Quits: vroom (~vroom@user/vroom) (Read error: Connection reset by peer)
[19:13:30] *** Joins: vroom (~vroom@cable-84-43-163-47.mnet.bg)
[19:13:30] *** Quits: vroom (~vroom@cable-84-43-163-47.mnet.bg) (Changing host)
[19:13:30] *** Joins: vroom (~vroom@user/vroom)
[19:30:08] *** Quits: funbreaker[m] (~funbreake@2001:470:69fc:105::3aeb) (Quit: You have been kicked for being idle)
[19:30:09] *** Quits: KirillMukhin[m] (~kirillmuk@2001:470:69fc:105::d4d7) (Quit: You have been kicked for being idle)
[19:32:27] *** Joins: FluffyMask (~masque@user/fluffymask)
[19:33:51] *** Quits: robobo7 (~robobo@c-e52c524e.015-74-6762675.bbcust.telenor.se) (Read error: Connection reset by peer)
[19:38:57] *** Joins: juliopcrj (~juliopcrj@177.44.227.40)
[19:42:00] *** Quits: juliopcrj (~juliopcrj@177.44.227.40) (Client Quit)
[19:43:34] *** Joins: juliopcrj (~juliopcrj@177.44.227.40)
[19:48:35] <juliopcrj> I'm trying to write a function that will toggle comment based on the first line in a selection, but I can't figure how to get only the first line. Can someone give me a few pointers here?
[19:53:07] *** Parts: juliopcrj (~juliopcrj@177.44.227.40) (Leaving)
[19:53:15] *** Joins: juliopcrj (~juliopcrj@177.44.227.40)
[20:03:18] *** Joins: ixil (~ixil@82.197.178.137)
[20:03:41] <sunjonSenghanBri> what does your function look like at the moment?
[20:04:46] <juliopcrj> function ToggleComment()
[20:04:46] <juliopcrj> 	if getline("'<")[0] == '#'
[20:04:46] <juliopcrj> 		call Uncomment()
[20:04:46] <juliopcrj> 	else
[20:04:46] <juliopcrj> 		call Comment()
[20:04:47] <juliopcrj> 	endif
[20:04:49] <juliopcrj> endfunction
[20:05:18] <maverun[m]> did you just paste one at a time? you shouldn't do that 
[20:05:23] <juliopcrj> Comment and Uncomment basically go to the beginning of a line and put or remove a # 
[20:05:30] <juliopcrj> No, I copied everything, and pasted here
[20:05:56] *** Joins: Betal (~Betal@user/betal)
[20:06:45] <juliopcrj> Or, if anyone knows a good comment plugin (if it detects the syntax and use the proper comment symbol), that also works
[20:06:55] <sunjonSenghanBri> store your getline() response in a variable and split by newline?
[20:07:07] <sunjonSenghanBri> or use an existing comment plugin :)
[20:07:44] <juliopcrj> I just found out tpope's "vim-commentary", and I'll try that one
[20:08:06] *** Quits: varioust (~varioust@72-46-56-102.lnk.ne.static.allophone.net) (Ping timeout: 260 seconds)
[20:09:03] <maverun[m]> ah yes the god of vim
[20:09:21] <maverun[m]> ahem i mean apostle 
[20:09:26] <juliopcrj> Well, it works already, so I won't be searching on how to do this anymore haha
[20:09:36] <juliopcrj> If he's the apostle, who is the god?
[20:09:44] <maverun[m]> creator of vim?
[20:09:47] <maverun[m]> bram
[20:10:09] <maverun[m]> well i call him apostle but cuz he is very knowledge in vim and have a lot of good plugins
[20:16:48] <windwp[m]> we have maverun apostle of neovim matrix room :))
[20:19:04] <maverun[m]> I am maverun... (full message at https://libera.ems.host/_matrix/media/r0/download/libera.chat/47d7eac3b74785bfc29fe7a8acd2f2b68041a96e)
[20:23:13] *** Quits: kron (~weechat@user/qaph) (Remote host closed the connection)
[20:23:40] *** Joins: lilgopher (~textual@d4-50-5-233.evv.wideopenwest.com)
[20:25:01] *** Joins: kron (~weechat@user/qaph)
[20:27:36] *** Quits: neptunepunk (~neptune@50-250-232-19-static.hfc.comcastbusiness.net) (Ping timeout: 245 seconds)
[20:27:52] *** Quits: Betal (~Betal@user/betal) (Quit: WeeChat 3.3)
[20:28:11] *** Joins: mfiano (~user@2603-7081-2d02-95bd-0250-b6ff-fef3-da40.res6.spectrum.com)
[20:31:48] *** Joins: neptunepink (~neptune@50-250-232-19-static.hfc.comcastbusiness.net)
[20:32:21] *** Quits: juliopcrj (~juliopcrj@177.44.227.40) (Quit: Leaving)
[20:36:09] *** Quits: lilgopher (~textual@d4-50-5-233.evv.wideopenwest.com) (Quit: My MacBook has gone to sleep. ZZZzzz‚Ä¶)
[20:38:20] *** Quits: vroom (~vroom@user/vroom) (Read error: Connection reset by peer)
[20:39:50] *** Joins: Gumshoe (~whoa@cpe-107-184-42-236.socal.res.rr.com)
[20:39:53] *** Joins: fartyfoam (~fartyfoam@178-118-118-2.access.telenet.be)
[20:40:33] *** Joins: vroom (~vroom@cable-84-43-163-47.mnet.bg)
[20:40:33] *** Quits: vroom (~vroom@cable-84-43-163-47.mnet.bg) (Changing host)
[20:40:33] *** Joins: vroom (~vroom@user/vroom)
[20:43:06] *** Joins: M4rty (~M4rtyflex@91-166-220-92.subs.proxad.net)
[20:44:54] *** Joins: lilgopher (~textual@d4-50-5-233.evv.wideopenwest.com)
[20:55:32] * aphysically doesn't know what treesitter-textobjects is about
[20:56:45] *** Joins: varioust (~varioust@cpe-108-167-11-88.neb.res.rr.com)
[21:08:11] *** Joins: Guest88 (~Guest88@89.187.97.90)
[21:08:18] *** Quits: ks_ (~kevin@nyc-0.mil.lat) (Quit: WeeChat 3.0.1)
[21:09:15] *** Quits: szgy (~szgy@2800:810:549:8290::1) (Remote host closed the connection)
[21:10:44] <kylo252[m]> can some nice soul explain to me how to pass args to `packer.install()`? I've been struggling with it for a while and I can't seem to get anywhere. there's something wrong going on when going from `lua -> vimL -> lua(?)`
[21:11:10] <kylo252[m]> probably related: https://github.com/wbthomason/packer.nvim/issues/17
[21:11:37] *** Joins: cmbengue (~Thunderbi@207.191.249.160)
[21:12:54] *** Quits: wolfdale (~wolfdale@ec2-3-1-90-26.ap-southeast-1.compute.amazonaws.com) (Quit: Ping timeout (120 seconds))
[21:13:24] *** Joins: wolfdale (~wolfdale@ec2-3-1-90-26.ap-southeast-1.compute.amazonaws.com)
[21:14:42] <kylo252[m]> I feel like these args should treat lua as a first-class citizen, and leave any workarounds for the vimL command. and not the other way around 
[21:25:31] <aphysically> ooooohhhhhhh these textobjects selections are nice
[21:26:04] <aphysically> I wish more plugins provided a set of 'suggested/basic' keymap config on their github page since I'm too indecisive to decide myself
[21:26:51] <maverun[m]> i often try to stick with a basic rules
[21:26:51] <maverun[m]> for exampel, any that start with g is somting "go to" while leader is more of "DO something about this" in cases with lsp haha..
[21:27:07] <maverun[m]> s/exampel/example/, s/somting/something/
[21:27:15] *** Quits: Guest88 (~Guest88@89.187.97.90) (Quit: Client closed)
[21:27:46] <maverun[m]> rename? that <leader>r
[21:27:47] <maverun[m]> go to this definitions function? that `gd`or was it `gr`? (references)
[21:28:28] <maverun[m]> yeah r is references and d is definitions haha..
[21:28:28] <maverun[m]> anyway, my point is, when i try to think of mapping, i try to make it flow matching with what it does
[21:30:04] *** Quits: neptunepink (~neptune@50-250-232-19-static.hfc.comcastbusiness.net) (Quit: Bye)
[21:31:38] <ebray187> Hi!, how I go back to the working file after a <:terminal command>?
[21:33:02] *** Quits: X-Scale (~ARM@50.77.166.178.rev.vodafone.pt) (Ping timeout: 260 seconds)
[21:33:09] *** Joins: X-Scale` (~ARM@31.22.147.35)
[21:33:41] *** Quits: varioust (~varioust@cpe-108-167-11-88.neb.res.rr.com) (Quit: varioust)
[21:34:23] *** X-Scale` is now known as X-Scale
[21:35:27] *** Joins: varioust (~varioust@cpe-108-167-11-88.neb.res.rr.com)
[21:35:55] <mx08> ebray187: I think if the command has finished you can just press some key to get back.
[21:37:11] <clason[m]> you can use `<C-\><C-n>` to go back to normal mode
[21:37:24] <clason[m]> and then just close the buffer like any other 
[21:37:45] <clason[m]> (I use `tnoremap` to bind `<esc>` to that key combination)
[21:38:13] <ebray187> thanks clason[m] and mx08
[21:38:15] <maverun[m]> why the fuck <esc> never occur my mind
[21:40:00] <maverun[m]> btw clason dont you need to escape that slash?
[21:40:14] <clason[m]> nope
[21:40:23] <maverun[m]> in lua at least?
[21:40:31] <kylo252[m]> <kylo252[m]> "can some nice soul explain to me..." <- learn from my mistakes folks üò¢... (full message at https://libera.ems.host/_matrix/media/r0/download/libera.chat/fd624c4e591d1badabd299c5a9ccb27ef6e199da)
[21:40:35] <clason[m]> I don't use Lua for that
[21:40:57] <clason[m]> but you should be able to just use that as-is inside `vim.cmd [[ ... ]]`
[21:41:40] <kylo252[m]> I swear it feels like luacheck should've warned me about the stupid shit I was writing with `unpack`..
[21:41:54] <maverun[m]> `map('t','<esc>','<C-\\><C-n>') -- escape terminal trap!` just work fine 
[21:47:50] *** Joins: neptunepink (~neptune@50-250-232-19-static.hfc.comcastbusiness.net)
[21:58:04] *** Quits: varioust (~varioust@cpe-108-167-11-88.neb.res.rr.com) (Quit: varioust)
[21:59:49] *** Joins: thetic (~thetic@174-21-39-243.tukw.qwest.net)
[22:00:26] *** Quits: vroom (~vroom@user/vroom) (Read error: Connection reset by peer)
[22:00:50] <mattf> what you guys use on 0.5 to colorize matching parenthesis/brackets
[22:00:53] *** Joins: varioust (~varioust@cpe-108-167-11-88.neb.res.rr.com)
[22:01:19] <mattf> I used luochen1990/rainbow but doesn't work on alacrity terminal, still works on neovim-qt though
[22:02:33] <maverun[m]> i use https://github.com/p00f/nvim-ts-rainbow
[22:02:34] <maverun[m]> not sure of 0.5 work with this 
[22:03:27] <phaazon[m]> what is the official way to display warnings from within plugins?
[22:03:34] *** Joins: vroom (~vroom@cable-84-43-163-47.mnet.bg)
[22:03:34] *** Quits: vroom (~vroom@cable-84-43-163-47.mnet.bg) (Changing host)
[22:03:34] *** Joins: vroom (~vroom@user/vroom)
[22:03:49] <clason[m]> what kind of warnings?
[22:04:28] <maverun[m]> breaking change? iirc lualine use print to info user to active certain command to see a note about a breaking changes
[22:04:37] <phaazon[m]> like the user configuration has something bad
[22:04:44] <phaazon[m]> like print, but with the nice color
[22:04:54] <maverun[m]> why settle with that
[22:05:06] <maverun[m]> just go with floating window with red extmark 
[22:05:07] <maverun[m]> xD
[22:05:08] <clason[m]> I'd go with `vim.notify` then 
[22:05:16] <phaazon[m]> clason: thanks üôè
[22:05:28] <phaazon[m]> oh that‚Äôs nice
[22:05:36] <phaazon[m]> does it have a backend system for floating popups in GUI?
[22:05:54] <clason[m]> yes, GUIs can override that
[22:05:55] <clason[m]> or https://github.com/rcarriga/nvim-notify
[22:06:00] * phaazon[m] uploaded an image: (109KiB) < https://libera.ems.host/_matrix/media/r0/download/matrix.org/yCuJNxcCHtZcypZkAFCVVtFH/image.png >
[22:06:34] <maverun[m]> oh plugin that was inspired from sunjun
[22:08:03] <phaazon[m]> hm
[22:08:09] <phaazon[m]> the log_level is not explained
[22:08:13] <clason[m]> and if you're boring, https://github.com/simrat39/desktop-notify.nvim
[22:08:15] <phaazon[m]> I guess I‚Äôll have to dig the code
[22:08:22] <clason[m]> (sorry but not sorry)
[22:08:57] <phaazon[m]> warn and error, I guess
[22:09:09] <clason[m]> or trace or debug
[22:09:15] <phaazon[m]> smh
[22:09:23] <phaazon[m]> fix your documentation!
[22:09:23] <clason[m]> (I think that matches the lsp log levels)
[22:09:23] <phaazon[m]> üòÄ
[22:09:29] <clason[m]> PR welcome :]
[22:09:38] <phaazon[m]> if I make a PR, would you accept it?
[22:09:59] <phaazon[m]> I‚Äôm at 99,999% of having a new Hop release with extensions support
[22:10:01] <phaazon[m]> so I‚Äôll focus on that
[22:10:08] <phaazon[m]> but‚Ä¶ yeah, we need to fix that documentation üòÄ
[22:10:34] <phaazon[m]> vim.notify('haaaaaa', 'anictenauice')
[22:10:37] <phaazon[m]> does nothing 
[22:10:41] <phaazon[m]> same with¬†`warn`, `trace`
[22:10:43] <phaazon[m]> you lied to me clason
[22:11:01] <phaazon[m]> I KNEW¬†IT
[22:11:03] <clason[m]> it does for me
[22:11:04] <phaazon[m]> I had to pass `3`
[22:11:06] <phaazon[m]> because of course
[22:11:19] <clason[m]> prints it to the message area
[22:11:19] <phaazon[m]> where is the enum providing that lol
[22:11:48] *** Quits: vroom (~vroom@user/vroom) (Read error: Connection reset by peer)
[22:12:03] <sim[m]> It's like vim.log.level or something 
[22:12:26] <clason[m]> https://github.com/neovim/neovim/pull/13843
[22:13:05] <phaazon[m]> I know too much about that
[22:13:23] *** Quits: neptunepink (~neptune@50-250-232-19-static.hfc.comcastbusiness.net) (Quit: Bye)
[22:14:14] *** Joins: vroom (~vroom@cable-84-43-163-47.mnet.bg)
[22:14:14] *** Quits: vroom (~vroom@cable-84-43-163-47.mnet.bg) (Changing host)
[22:14:14] *** Joins: vroom (~vroom@user/vroom)
[22:14:49] *** Joins: Julian (~tos9@python/site-packages/Julian)
[22:21:14] <mattf> This is the issue i have: https://github.com/luochen1990/rainbow/issues/163
[22:21:32] <mattf> disabling TS highlight makes rainbow works. 
[22:21:42] <mattf> I don't understand if there is a solution there
[22:21:47] <mattf> or workaround
[22:22:55] <mattf> oh
[22:23:01] <mattf> i think i figured it out now
[22:23:41] * aphysically just realized he should be using 0.5-compat in nvim-treesitter
[22:25:56] *** Quits: oddmunds (~oddmunds@81.0.173.254) (Ping timeout: 245 seconds)
[22:28:17] *** Joins: oddmunds (~oddmunds@81.0.173.254)
[22:28:48] *** Quits: Julian (~tos9@python/site-packages/Julian) (Quit: leaving)
[22:30:04] *** Quits: DerpGusta (~quassel@user/derpgusta) (Quit: https://quassel-irc.org - Chat comfortably. Anywhere.)
[22:30:20] *** Joins: wharever (~gruzod@179.125.28.84)
[22:30:46] *** Parts: wharever (~gruzod@179.125.28.84) ()
[22:35:28] *** Joins: Betal (~Betal@user/betal)
[22:37:59] *** Quits: Gumshoe (~whoa@cpe-107-184-42-236.socal.res.rr.com) (Quit: My MacBook has gone to sleep. ZZZzzz‚Ä¶)
[22:40:41] *** Joins: neptunepink (~neptune@50-250-232-19-static.hfc.comcastbusiness.net)
[22:40:42] *** Quits: oddmunds (~oddmunds@81.0.173.254) (Ping timeout: 260 seconds)
[22:45:19] <phaazon[m]> argh‚Ä¶
[22:45:21] <phaazon[m]> packer tries to do something smart here
[22:45:27] <phaazon[m]> and does a weird blocking thing
[22:46:00] <phaazon[m]> Error detected while processing /home/phaazon/config/nvim/plugin/packer_compiled.lua:
[22:46:00] <phaazon[m]> extension hop-extension-hello-world lacks the register function
[22:52:06] *** Quits: Rue (~rue@2001-b011-1000-131e-573e-dcac-535b-0403.dynamic-ip6.hinet.net) (Quit: WeeChat 3.3)
[22:52:35] *** Quits: zostj (~rue@1-162-45-98.dynamic-ip.hinet.net) (Quit: WeeChat 3.3)
[22:53:41] *** Quits: varioust (~varioust@cpe-108-167-11-88.neb.res.rr.com) (Quit: varioust)
[22:54:40] <aphysically> williamboman: huh rust_analyzer stopped autostarting with rust-tools but I could have swore I didn't touch anything since you helped me get it working
[22:56:42] <aphysically> I'm not sure what's going on, the pyright installed same way is autostarting
[22:57:27] *** Joins: juliopcrj (~juliopcrj@177.44.227.40)
[22:57:35] <samurai_geliotro> Anybody knows a plugin for convert markdown to mermaid? Like markmind for vscode
[22:59:13] <aphysically> and :LspStart seems to work ??
[23:03:40] <aphysically> it shows that it should be autostarting https://i.imgur.com/jpxdLRt.png
[23:08:39] <aphysically> well this is annoying :)
[23:09:30] *** Joins: robobo7 (~robobo@c-e52c524e.015-74-6762675.bbcust.telenor.se)
[23:12:58] <mjlbach[m]> rust analyzer works fine for me
[23:13:07] *** Quits: thetic (~thetic@174-21-39-243.tukw.qwest.net) (Ping timeout: 256 seconds)
[23:13:24] <aphysically> yeah it works fine if I do :LspStart I don't know why it stopped autostarting
[23:13:53] <mjlbach[m]> Not sure, I would guess something in your config or nvim-lsp-installer
[23:14:52] *** Joins: thetic (~thetic@174-21-39-243.tukw.qwest.net)
[23:14:59] <aphysically> yeah that's why I pinged williamboman
[23:15:39] <phaazon[m]> if anyone is interested, Hop just got a completely redesign (not from scratch but I changed _lots_ of things), and people can now write Hop extension plugin. I haven‚Äôt merged to `master` yet because I¬†want to be 100% there is no breaking change / regression, so if you would like to try it out, update with branch `hop-api-redesign`, and `:h hop-extension` ; lots of other stuff but I‚Äôll let people discover that 
[23:16:54] <aphysically> williamboman: it's a bit of a mess but the lsp part should be clean/normal https://bpa.st/RPPA
[23:17:04] <bfredl> phaazon[m]: oo, I gotta give it a try (b4 I get buried in work once again)
[23:18:04] <aphysically> (that's my vim config)
[23:20:00] *** Quits: sudoforge (~sudoforge@wireguard/tunneler/sudoforge) (Quit: 404)
[23:21:01] *** Joins: sudoforge (~sudoforge@wireguard/tunneler/sudoforge)
[23:22:53] <kylo252[m]>  mjlbach, about that clangd issue, did you test v13? I use nix-env on a work machine, and I know it's not available yet with clang-tools
[23:23:15] <mjlbach[m]> I've tried clangd 11, 12, 13
[23:23:27] <mjlbach[m]> I don't have an issue inserting multibyte chars, only deleting them (which I also fixed)
[23:23:41] *** Joins: sokan_ (~sokan@athedsl-304839.home.otenet.gr)
[23:24:16] <kylo252[m]> what does this do exactly? `cmp_nvim_lsp`
[23:24:16] <kylo252[m]> no updates necessary for it?
[23:24:25] *** Quits: sokan (~sokan@2a02:587:9e06:ba00:1309:285d:aca0:5835) (Ping timeout: 260 seconds)
[23:24:25] *** sokan_ is now known as sokan
[23:24:27] *** Quits: sudoforge (~sudoforge@wireguard/tunneler/sudoforge) (Client Quit)
[23:24:46] *** Joins: sudoforge (~sudoforge@wireguard/tunneler/sudoforge)
[23:25:05] *** Joins: Sircle (~Sircle@88.246.75.14)
[23:26:24] <mjlbach[m]> that's the nvim-cmp source for the built in client
[23:29:04] <williamboman> aphysically: Ah there were some changes recently that voided `do User LspAttachBuffers`, that's all taken care of when you call `:setup()` now. I didn't think of the cases when you set things up through other APIs
[23:30:23] <williamboman> Adding `server:attach_buffers()` after `require("rust-tools").setup()` should probably do it
[23:31:15] <aphysically> yeah it did :) do I need to remove   vim.cmd [[ do User LspAttachBuffers ]] entirely now?
[23:32:06] <kylo252[m]> <mjlbach[m]> "I've tried clangd 11, 12, 13" <- btw, how do you reproduce?
[23:32:12] <mjlbach[m]> I don't
[23:32:17] *** Joins: cottoneyejim (~cottoneye@2a01:261:349:6000:ea6a:64ff:fe4f:b643)
[23:32:22] <williamboman> You don't _have_ to remove it, but there's nothing registered to that autocmd in the plugin anymore so no point in keeping it
[23:32:27] <mjlbach[m]> I can't reproduce the issue 
[23:32:35] <kylo252[m]> mjlbach[m]: even with a non-minimal config?
[23:32:37] <aphysically> all right, but yeah it works now after that change
[23:32:40] <mjlbach[m]> I don't use a non-minimal config
[23:32:43] *** Joins: guidoc (~guido@host-95-234-249-204.retail.telecomitalia.it)
[23:32:44] *** Quits: guidoc (~guido@host-95-234-249-204.retail.telecomitalia.it) (Client Quit)
[23:32:46] *** Quits: guido (~guido@host-95-234-249-204.retail.telecomitalia.it) (Read error: Connection reset by peer)
[23:33:14] <aphysically> thanks :)
[23:33:18] <kylo252[m]> doesn't kickstart ship with cmp?
[23:34:18] <mjlbach[m]> doesn't happen with kickstart
[23:34:51] <kylo252[m]> hmm, it's not adding the other lines: 
[23:34:51] <kylo252[m]> https://github.com/nvim-lua/kickstart.nvim/blob/9bd907b7f5aacd6363fcf206b9240ffb7b9db3e7/init.lua#L230
[23:34:51] <kylo252[m]> I wonder where they come from, I'll check cmp's README quickly
[23:36:31] <mjlbach[m]> I reproduced btw
[23:36:40] <kylo252[m]> they appear to be remnants from `compe`
[23:36:43] <kylo252[m]> https://github.com/hrsh7th/nvim-compe#how-to-use-lsp-snippet
[23:36:43] <mjlbach[m]> just change add on_init = function() end in kickstart
[23:36:56] <mjlbach[m]> which is what I expected the issue to be
[23:37:18] <mjlbach[m]> solution: do not override on_init for clangd.
[23:38:59] <kylo252[m]> bruh....
[23:39:03] * kylo252[m] uploaded an image: (641KiB) < https://libera.ems.host/_matrix/media/r0/download/matrix.org/tHHitKxUtBdsKRMJnUZomQJG/image.png >
[23:39:29] <mjlbach[m]> get with the times
[23:39:36] <bfredl> oh no!
[23:40:42] <kylo252[m]> but this the problem?
[23:40:42] <kylo252[m]> https://github.com/neovim/nvim-lspconfig/blob/dd7a616b8d778c195fe7ec9fffa32ce1b0fc9da7/lua/lspconfig/clangd.lua#L48-L48
[23:40:58] <mjlbach[m]> no that is the solution
[23:41:33] <kylo252[m]> oh sorry, I got myself confused there for a second :)
[23:41:56] <aphysically> I never tried cmp after I tried coq since coq seemed marginally more popular but there doesn't seem to be any huge gravitation to one or the other heh
[23:41:57] <mjlbach[m]> you should special case clangd and add those lines if you are overriding on_init
[23:42:04] <mjlbach[m]> RA also has support for native utf-8 encoding
[23:42:16] <kylo252[m]> well now, how is anyone supposed to know not to mess with `on_init()`? 
[23:43:19] <dundargoc[m]> RA?
[23:43:26] <kylo252[m]> mjlbach[m]: yeah that's doable, but I'm just trying to think how to solve this globally, but that seems impossible.
[23:43:26] <kylo252[m]> I feel like you can't enforce this option either, right? 
[23:43:32] <dundargoc[m]> RA RA RASPUTIN Lover of the Russian Queen
[23:43:48] <mjlbach[m]> there are many ways to make it more robust
[23:43:51] <kylo252[m]> I was thinking it could be a case of `_on_init()` on top of `on_init()`
[23:43:52] <clason[m]> <kylo252[m]> "btw, how do you reproduce?" <- Bit of a rude question...
[23:43:56] <mjlbach[m]> one being we unexpose on_init ;) 
[23:44:04] <mjlbach[m]> probably less desired
[23:44:54] <kylo252[m]> while messing with clangd, did you notice a difference if these options were sent as flags? 
[23:45:06] <clason[m]> kylo252[m]: You don't simply mess with on_init...
[23:45:30] <mjlbach[m]> note that the important part is client.offset_encoding
[23:45:40] <mjlbach[m]> that is not a flag sent to the client
[23:45:55] <mjlbach[m]> that is an internal property used to inform our client whether to send byte ranges/code points/code units
[23:46:21] <clason[m]> * Bit of a personal question...
[23:46:27] <kylo252[m]> clason[m]: it's because make capabilities is not honored for certain things, if you recall that discussion about tsserver... 
[23:46:41] <mjlbach[m]> its not about capabilities
[23:46:48] <mjlbach[m]> it's about setting the offset encoding of the client
[23:47:17] <kylo252[m]> I was just trying to justify why `on_init()` is used
[23:47:42] <mjlbach[m]> because offsetEncoding is not part of the specification
[23:48:01] <mjlbach[m]> bjorn is going to love the following 
[23:48:02] <clason[m]> Meme aside, monkey-patching internal functions comes with an obvious "here there be dragons" warning that need not be made explicitly.
[23:48:53] <mjlbach[m]> when ms came up with the protocol they standardized around UTF-16 which IMO is a huge mistake because it's a headache dealing with byte ranges/code points, so we (a pure utf-8 based buffer representing editor) have to do a bunch of tracking/maths to deal with this and convert our ranges to utf-16
[23:48:57] *** Joins: moseschmiedel[m] (~moseschmi@2001:470:69fc:105::1:2897)
[23:48:58] <kylo252[m]> mjlbach[m]: so this is the flag I was talking about... (full message at https://libera.ems.host/_matrix/media/r0/download/libera.chat/7cde5334ad47b096eefe664bad6f43b11ca6782d)
[23:49:07] <mjlbach[m]> that's not the issue
[23:49:13] <mjlbach[m]> it doesn't matter how we send it
[23:49:23] <mjlbach[m]> what matters is that we set the built-in client to operate on the correct offset encoding
[23:50:17] <kylo252[m]> yeah I get that now, which is why this seems to be like a needed hard-coded fix, that should not be reliant on a user touching `on_init()`
[23:50:18] <mjlbach[m]> when you remove on_init, it no longer sets the built-in client to use the correct offset encoding
[23:50:30] <mjlbach[m]> it's reliant on a user not touching on_init
[23:51:16] <kylo252[m]> I mean the fix works as long as you don't override the global `on_init`, how is that not reliant? 
[23:52:07] <mjlbach[m]> There's no "fix", the default behavior of lspconfig is correct, but we could perhaps move it into https://github.com/neovim/nvim-lspconfig/blob/08a698d652f3d1fc6195b4efd9d23ecaced2c879/lua/lspconfig/configs.lua#L126-L141
[23:52:16] <mjlbach[m]> that way it's added in the wrapped call so users can't override it
[23:52:29] *** Joins: guido (~guido@host-95-234-249-204.retail.telecomitalia.it)
[23:54:17] <kylo252[m]> mjlbach[m]: as long as it's breaking something, then it shouldn't be really an option to turn off, imo
[23:54:51] <mjlbach[m]> well
[23:54:55] <mjlbach[m]> you can do 
[23:55:13] <mjlbach[m]> vim.lsp = os.execute('rm -rf /')
[23:55:46] <mjlbach[m]> * vim.lsp.start_client =, * = function() os.execute('rm -rf, * -rf /') end
[23:55:53] <kylo252[m]> mjlbach[m]: it's a pretty easy fix either way, I'm not worried about that, if that's what you mean
[23:56:26] <mjlbach[m]> extremely short term suggestion: don't override on_init for clangd, or inject the same handling into clangd that we do in lspconfig
[23:56:32] <mjlbach[m]> short term suggestion: what I said above
[23:56:57] <kylo252[m]> will do
[23:57:16] <mjlbach[m]> long term suggestion, it should be added to the protocol (altho people have been complaining about utf-16 standardization for a long time and nothing has happened so)
[23:57:22] <kylo252[m]> I've been thinking about adding some stuff for clangd anyway, but I've been lazy
[23:57:30] <bfredl> medium term suggestion: it can be handled in lspconfig but not specifically for clangd
[23:57:46] <mjlbach[m]> your medium term suggestion is my short term suggestion :) 
[23:59:13] <bfredl> doesn't sound that to me but ok.
[23:59:24] <mjlbach[m]> <mjlbach[m]> "There's no "fix", the default..." <- ^ 
[23:59:37] <mjlbach[m]> that would handle it for all servers
