[00:40:42] *** Joins: ur5us (~ur5us@2406:e002:689a:b901:920f:b571:c0ce:1fdb)
[01:37:40] <FromGitter> <00krishna> Hey folks, I was hoping someone might be able to help solve a problem with org-agenda in Spacemacs. My org-agenda suddenly stopped working after I did some updates. I can't figure out what the issue is, but the *Messages* buffer says `145 files scanned, 0 files contain IDs, and 0 :entry-id: IDs found.` The paths to the org-agenda files seems fine, so I can't tell why org-agenda is not finding the `entry-id`s ? 
[01:37:41] <FromGitter> ... Like is there perhaps a file formatting issue. I have not changed any of the files though. The other potential cause could be `org-gcal` where emacs says it fetched the events, but in checking the `gcal.org` file, everything is empty. I tried to delete all of emacs and reinstalled, etc. But still no luck.
[04:42:10] *** Quits: ur5us (~ur5us@2406:e002:689a:b901:920f:b571:c0ce:1fdb) (Remote host closed the connection)
[04:42:29] *** Joins: ur5us (~ur5us@2406:e002:689a:b901:920f:b571:c0ce:1fdb)
[05:49:02] *** Joins: ur5us_ (~ur5us@203.86.198.200)
[05:51:47] *** Quits: ur5us (~ur5us@2406:e002:689a:b901:920f:b571:c0ce:1fdb) (Ping timeout: 256 seconds)
[08:34:36] *** Quits: pagurus (~user@i59F4D1D2.versanet.de) (Ping timeout: 272 seconds)
[08:40:06] *** Joins: pagurus (~user@i59F527F1.versanet.de)
[09:11:21] *** Quits: ur5us_ (~ur5us@203.86.198.200) (Ping timeout: 272 seconds)
[10:07:35] *** Joins: osfe_ (~lemaire@2a01:e0a:16e:7620::8a96:7343)
[10:31:00] *** Quits: osfe_ (~lemaire@2a01:e0a:16e:7620::8a96:7343) (Ping timeout: 240 seconds)
[11:21:37] *** Joins: fahrradToken (~fahrradTo@2a02:810b:149f:f0f4::3928)
[11:54:54] *** Joins: osfe_ (~lemaire@nanpc540.in2p3.fr)
[13:15:02] *** Quits: Unicorn_Princess (~Unicorn_P@93-103-228-248.dynamic.t-2.net) (Remote host closed the connection)
[16:40:37] *** Quits: fahrradToken (~fahrradTo@2a02:810b:149f:f0f4::3928) (Ping timeout: 256 seconds)
[16:48:28] <FromGitter> <dalanicolai> Sorry... just testing
[16:49:34] <FromGitter> <dalanicolai> Mmm... when I log in to gitter using my gitlab account, I am unable to send messages (therefore I am testing here with github account)
[16:50:23] <FromGitter> <dalanicolai> > Mmm... when I log in to gitter using my gitlab account, I am unable to send messages (but only to the Spacemacs room, the other rooms work fine, therefore I am testing here with github account... quite weird)
[16:53:47] <FromGitter> <rappie> hi! i'm having trouble setting up formatting on save using the `format-all` package. i have this in my user config: ‚èé  ‚èé ```code paste, see link``` ‚èé  ‚èé this doesnt work initially. it only works after i first do a manual format using `SPC SPC` and then entering `format-all-buffer` ... [https://gitter.im/syl20bnr/spacemacs?at=6241a8d39bd1c71ecac3f596]
[16:56:36] <FromGitter> <dalanicolai> @rappie If the package is correctly written then it shouldn't be necessary
[16:57:07] <FromGitter> <rappie> https://github.com/lassik/emacs-format-all-the-code/blob/master/format-all.el
[16:57:10] <FromGitter> <dalanicolai> But otherwise you probably should add an autoload youself using the `:command` keyword in a `use-package` form in your user-config
[16:57:12] <FromGitter> <rappie> this is the source :)
[16:57:39] <FromGitter> <rappie> ahh ok what should i add to the `:command` part?
[16:58:16] <FromGitter> <dalanicolai> Ah well... the command has an autoload comment. So I guess it should work 'out of the box' (but I am no expert)
[16:59:15] <FromGitter> <rappie> i'm thinking it might be the `language-id` dependency
[16:59:42] <FromGitter> <dalanicolai> The command you'd like to call (i.e. `format-all-buffer`), but I think it shouldn't be necessary here... so I do not know why it is not working
[17:00:38] <FromGitter> <dalanicolai> Well could be, but then I would think it should also error when you run it manually
[17:00:45] <FromGitter> <rappie> `format-all` uses the `language-id` package to identify the language so it can find the right formatter. the thing is: if i do `describe-symbol` i cannot find the `language-id-buffer` function unless i first do a manual `format-all-buffer`
[17:01:09] <FromGitter> <dalanicolai> B.t.w. I think you would like that 'inner hook' to be local
[17:01:46] <FromGitter> <dalanicolai> (check out the parameters for `'add-hook`)
[17:01:57] <FromGitter> <rappie> thanks, i'll look into it :)
[17:04:21] <FromGitter> <dalanicolai> > `format-all` uses the `language-id` package to identify the language so it can find the right formatter. the thing is: if i do `describe-symbol` i cannot find the `language-id-buffer` function unless i first do a manual `format-all-buffer` ‚èé  ‚èé I think calling the `format-all-buffer` function should first load the format-all package and its dependencies, and only then evaluate. So that command should be 
[17:04:21] <FromGitter> ... available when format-all-buffer requires it
[17:06:14] <FromGitter> <rappie> yea, so there must be a bug somewhere right?
[17:06:42] <FromGitter> <dalanicolai> Also I am not sure what is 'better practice': ‚èé  ‚èé 1) to make a local hook using the mode hook (what you are doing now) ‚èé 2) or just add a global before save hook, and then check for the major mode first [https://gitter.im/syl20bnr/spacemacs?at=6241abda9a09ab24f3c6806e]
[17:06:45] <FromGitter> <rappie> can you think of some kind of dirty hack to get this working?
[17:07:13] <FromGitter> <rappie> my main goal right now is to get spacemacs ready as my daily driver, i can finetune everything later :) so i dont mind dirty hacks for now
[17:07:17] <FromGitter> <dalanicolai> So it works imediately when you call it manually?
[17:07:22] <FromGitter> <rappie> yes
[17:08:07] <FromGitter> <dalanicolai> Then maybe ‚èé  ‚èé > Also I am not sure what is 'better practice': ‚èé > - to make a local hook using the mode hook (what you are doing now) ‚èé > - or just add a global before save hook, and then check for the major mode first ... [https://gitter.im/syl20bnr/spacemacs?at=6241ac2f257a3578254ed966]
[17:09:13] <FromGitter> <rappie> ```(add-hook `before-save-hook 'format-all-buffer)```
[17:09:14] <FromGitter> <dalanicolai> I think it should not really make a difference, but it could be that something does not work correctly because of the add-hook within the hook (I don't see why, but for some reason something is not working)
[17:09:21] <FromGitter> <rappie> like this, right?
[17:09:27] <FromGitter> <rappie> (skipping the mode check for now)
[17:09:39] <FromGitter> <dalanicolai> well yeah... try that first indeed
[17:09:50] <FromGitter> <dalanicolai> that look alright to me yes
[17:10:21] <FromGitter> <dalanicolai> > ```(add-hook `before-save-hook 'format-all-buffer)``` ‚èé >
[17:10:46] <FromGitter> <rappie> same problem :)
[17:11:08] <FromGitter> <dalanicolai> Ah okay (as expected, was just trying something)
[17:11:13] <FromGitter> <rappie> can't i like call format-all-buffer on the *scratch* buffer at startup as a hack? i tried this but couldnt get it to work
[17:12:02] <FromGitter> <dalanicolai> well you can just load/require the package from your `user-config` of course
[17:12:17] <FromGitter> <rappie> yea i tried that too :)
[17:12:24] <FromGitter> <rappie> maybe i did it wrong though, hold on
[17:12:40] <FromGitter> <dalanicolai> Maybe you can even just use `(use-package format-all :defer t)`
[17:13:07] <FromGitter> <rappie> ```  (require 'language-id) ‚èé   (add-hook `before-save-hook 'format-all-buffer)``` [https://gitter.im/syl20bnr/spacemacs?at=6241ad5bd1b64840db8a114d]
[17:13:10] <FromGitter> <dalanicolai> But try the require first
[17:13:31] <FromGitter> <dalanicolai> > ```(require 'format-all) ‚èé >   (require 'language-id) ‚èé >   (add-hook `before-save-hook 'format-all-buffer) ‚èé > ``` ‚èé  ... [https://gitter.im/syl20bnr/spacemacs?at=6241ad729bd1c71ecac3ff68]
[17:13:34] <FromGitter> <rappie> ```code paste, see link``` [https://gitter.im/syl20bnr/spacemacs?at=6241ad76f43b6d783f2225ce]
[17:13:57] <FromGitter> <rappie> retesting now :)
[17:14:27] <FromGitter> <dalanicolai> okay
[17:14:28] <FromGitter> <rappie> nope, it doesnt
[17:14:39] <FromGitter> <rappie> ```code paste, see link``` [https://gitter.im/syl20bnr/spacemacs?at=6241adb79bd1c71ecac3ffd9]
[17:14:48] <FromGitter> <rappie> i also tried this, this doesnt work either
[17:14:51] <FromGitter> <dalanicolai> Ah... strange
[17:15:05] <FromGitter> <rappie> i've been at this for hours already ;)
[17:15:22] <FromGitter> <dalanicolai> > ``` ‚èé >   ;;(use-package format-all ‚èé >   ;;  :defer t ‚èé >   ;;  :init ‚èé >   ;;  (add-hook 'solidity-mode-hook ... [https://gitter.im/syl20bnr/spacemacs?at=6241ade1c4350025001197d4]
[17:15:30] <FromGitter> <rappie> yea it's weird right, especially because it does work after i do it manually
[17:15:59] <FromGitter> <dalanicolai> Yes, I don't understand this either
[17:16:43] <FromGitter> <rappie> let me explain exactly what i'm doing, just to make sure i dont make any stupid mistakes. so first i relaunch emacs with `SPC q r`, then i switch to the file, edit something, do `:w` and nothing happens. then i do `SPC SPC` and execute `format-all-buffer`, it formats. then i edit something again, do `:w` and it also formats
[17:17:23] <FromGitter> <dalanicolai> Looks correct to me
[17:18:11] <FromGitter> <dalanicolai> (although personally I prefer `SPC f s`, but that is a (subjective) unimportant side note)
[17:19:34] <FromGitter> <dalanicolai> I don't use 'auto' format on save
[17:19:55] <FromGitter> <dalanicolai> But checking the web, I looks like lsp comes with this feature too
[17:20:33] <FromGitter> <dalanicolai> So any particular reason for using the format-all package?
[17:20:47] <FromGitter> <rappie> yes i gave that a quick look but i'm using this for solidity and for what i could find it only works in very recent versions of the solidity compiler
[17:21:36] <FromGitter> <dalanicolai> Okay... good reason I guess
[17:22:01] <FromGitter> <dalanicolai> I will try here
[17:22:06] <FromGitter> <rappie> but no specific reason, i think i'd prefer lsp, it just seemed like a lot of work to set up :)
[17:22:19] <FromGitter> <rappie> awesome, thanks
[17:22:36] <FromGitter> <dalanicolai> for some other language... do I need to setup something? Or just install the package and add the hook?
[17:22:44] <FromGitter> <dalanicolai> Well... I will see I guess
[17:22:52] <FromGitter> <rappie> so with solidity you also use older verions of compilers often, theres this `solc-select` tool i use for switching between the "current" compiler
[17:23:05] <FromGitter> <rappie> (command line tool)
[17:23:25] <FromGitter> <dalanicolai> Ah I will not test with solidity, just with some language
[17:23:42] <FromGitter> <dalanicolai> (if that is what you menat)
[17:23:57] <FromGitter> <rappie> hmm not sure if there are languages which dont need external formatters
[17:24:26] <FromGitter> <rappie> you could try javascript with `prettier`, it needs to be in your path
[17:24:34] <FromGitter> <dalanicolai> ah... will have to read a little then
[17:25:00] <FromGitter> <rappie> but you need node.js
[17:25:06] <FromGitter> <dalanicolai> (I am no programmer, just an Emacs user)
[17:25:30] <FromGitter> <rappie> thanks for looking into this :)
[17:26:19] <FromGitter> <dalanicolai> Or maybe it is easiest then to try with solidity, but then please send some 'badly formatted' code
[17:26:28] <FromGitter> <dalanicolai> snippet
[17:27:29] <FromGitter> <rappie> looks like you can also format emacs lisp code
[17:27:47] <FromGitter> <dalanicolai> okay let me see then
[17:29:03] <FromGitter> <rappie> yep, i just formatted my `.spacemacs` :)
[17:29:29] <FromGitter> <dalanicolai> Haha nice...
[17:29:48] <FromGitter> <dalanicolai> But of cours generally Emacs formats elisp 'on the fly'
[17:31:01] <FromGitter> <rappie> yes
[17:31:09] <FromGitter> <rappie> still have to get used to that :)
[17:33:07] <FromGitter> <dalanicolai> Same problem here
[17:33:15] <FromGitter> <dalanicolai> Have to run manually first
[17:33:43] <FromGitter> <rappie> ok at least it's nothing wrong with my emacs :)
[17:34:25] <FromGitter> <dalanicolai> (well I wonder how this functions in vanilla emacs
[17:36:51] *** Joins: fahrradToken (~fahrradTo@2a02:810b:149f:f0f4::3928)
[17:38:46] <FromGitter> <dalanicolai> I see now there is `format-all-mode` (see its docstring)
[17:39:27] <FromGitter> <rappie> yes i tried this briefly but it looked really ugly in the gui and it didnt work either, but i might have used it wrong :)
[17:39:47] <FromGitter> <dalanicolai> Looked ugly?
[17:40:04] <FromGitter> <rappie> it doesnt have one of those nice round minor mode icons in the bar below
[17:40:27] <FromGitter> <rappie> hold on i'll try it again
[17:40:28] <FromGitter> <dalanicolai> The docstring says it just 'toggles format on save)
[17:41:00] <FromGitter> <dalanicolai> Tries already... also does not work
[17:41:59] <FromGitter> <rappie>  (https://files.gitter.im/543c742ddb8155e6700cb292/lGyw/image.png)
[17:42:21] <FromGitter> <rappie> ah the screenshot uploaded in the main channel :)
[17:42:44] <FromGitter> <dalanicolai> That's no problem... I saw it
[17:42:59] <FromGitter> <rappie> yea, same problem, only works after first manually formatting
[17:43:29] <FromGitter> <dalanicolai> But you could change that lighter if it bothers you... however, the mode does not work correctly anyway
[17:45:25] <FromGitter> <dalanicolai> Did you read this (https://github.com/lassik/emacs-format-all-the-code#how-to-customize) customization section?
[17:46:01] <FromGitter> <rappie> yes :)
[17:46:33] <FromGitter> <rappie> the only thing noteworthy to me seemed this part: "To enable format on save for most programming language buffers: (add-hook 'prog-mode-hook 'format-all-mode)."
[17:46:47] <FromGitter> <rappie> the rest is finetuning
[17:47:03] <FromGitter> <rappie> "However, the main thing you probably want to set is format-all-formatters. That variable is buffer-local, and can be made project-local by setting it in a .dir-locals.el file in a project's directory. That file can be committed to version control to share it with the whole project."
[17:47:10] <FromGitter> <dalanicolai> Yes I see
[17:47:16] <FromGitter> <dalanicolai> and agree
[17:47:17] <FromGitter> <rappie> ^ this part i didnt really understand ;)
[17:47:50] <FromGitter> <rappie> maybe this is the problem? it needs to be set globally?
[17:49:18] <FromGitter> <dalanicolai> Which is this part?
[17:49:53] <FromGitter> <rappie> "However, the main thing you probably want to set is format-all-formatters. That variable is buffer-local, and can be made project-local by setting it in a .dir-locals.el file in a project's directory. That file can be committed to version control to share it with the whole project."
[17:50:00] <FromGitter> <rappie> the second paragraph
[17:50:40] <FromGitter> <rappie> maybe it only formats when some kind of variable is set? and running it manually sets this variable (by coincidense)
[17:51:27] <FromGitter> <dalanicolai> Well it is set globally... it just explains how to set formatters per project I think
[17:52:00] <FromGitter> <rappie> ahh ok :)
[17:53:14] <FromGitter> <dalanicolai> I guess you should open an issue for it... as it also does not work correctly in vanilla Emacs
[17:54:06] <FromGitter> <dalanicolai> Maybe we understand something incorrectly, but definitely then it not explained clearly at all how to use it
[17:54:13] <FromGitter> <rappie> actually i think its that variable
[17:54:23] <FromGitter> <rappie> if i restart spacemacs it is nil
[17:54:56] <FromGitter> <rappie> but after i do a manual run it is: ‚èé  ‚èé ```Its value is (("Solidity" prettier)) ‚èé Local in buffer E2E.sol; global value is nil``` [https://gitter.im/syl20bnr/spacemacs?at=6241b728257a3578254eefb1]
[17:55:59] <FromGitter> <dalanicolai> Well that could be the problem, but as far as I understand, the code should get loaded before when/before the function is called
[17:56:05] <FromGitter> <dalanicolai> That is what autoload is for
[17:56:51] <FromGitter> <dalanicolai> So you could edebug the format all function
[18:00:35] <FromGitter> <dalanicolai> Okay... so I think you are right
[18:00:50] <FromGitter> <dalanicolai> But it is terribly explained
[18:01:12] <FromGitter> <rappie> hehe yes
[18:01:15] <FromGitter> <rappie> :D
[18:01:35] <FromGitter> <dalanicolai> (or a weird default at least)
[18:01:58] <FromGitter> <rappie> when you pasted the link to the docs it made me reread it again, else i'd never have guessed it
[18:02:32] <FromGitter> <dalanicolai> Yeah... I get it... I checked out the value of that variable... but not imeediately on startup
[18:02:49] <FromGitter> <dalanicolai> So that was confusing
[18:02:53] <FromGitter> <rappie> hmm i guess it is because different projects can have different formatters, so it makes sense to be able to set it on a project base
[18:03:17] <FromGitter> <rappie> but it should just use the default formatter out of the box
[18:03:29] <FromGitter> <dalanicolai> And it is not clearly explained that it is required to set it (but only when calling as a hook instead of interactively)
[18:03:41] <FromGitter> <dalanicolai> Or something like that
[18:04:02] <FromGitter> <dalanicolai> > but it should just use the default formatter out of the box ‚èé  ‚èé That sounds like a more reasonable default to me yes
[18:04:11] <FromGitter> <dalanicolai> I think it is just a bug
[18:04:16] <FromGitter> <rappie> https://github.com/lassik/emacs-format-all-the-code/issues/173
[18:04:27] <FromGitter> <rappie> i just noticed this problem as well
[18:04:51] <FromGitter> <rappie> this whole thing is kinda making me second guess if i should use `format-all` or even spacemacs at all :)
[18:05:00] <FromGitter> <dalanicolai> I.e. he probablyb does not realize that the default formatter is not used when called from a hook
[18:06:12] <FromGitter> <rappie> i really like the idea of spacemacs, but i've been trying to get this to work for 2 days now, and in vs code it works in seconds by adding the Solidity extension. i'm not badmouthing spacemacs here, but it does make me have doubts :)
[18:06:47] <FromGitter> <dalanicolai> I understand what you mean
[18:07:00] <FromGitter> <dalanicolai> Persoannly I try to grow the Spacemacs community
[18:07:08] <FromGitter> <rappie> anyway, i have a lot more info now, thanks for looking into this, i need a break now. i'll probably give lsp a second try aswell later
[18:07:14] <FromGitter> <dalanicolai> That's why I am helping here
[18:07:45] <FromGitter> <dalanicolai> I am not sure how popular is solidity... but probably there are not many Spacemacsers using it
[18:08:15] <FromGitter> <rappie> yea it is used for smart contract programming (blockchain/crypto stuff), it is still pretty new
[18:08:31] <FromGitter> <dalanicolai> Anway... if you find things like this.. it is great if you could quickly add the info to the layer README
[18:08:47] <FromGitter> <dalanicolai> And make a PR... that is the only way how Spacemacs gets better...
[18:09:21] <FromGitter> <dalanicolai> So for other users it will work 'immediately'
[18:09:29] <FromGitter> <rappie> you mean once i find a solution, right?
[18:09:59] <FromGitter> <dalanicolai> And maybe open an issue quickly @format-all... because the problem of that explanation affect all users I guess
[18:10:21] <FromGitter> <dalanicolai> > you mean once i find a solution, right? ‚èé  ‚èé I am pretty sure that you have found it
[18:10:29] <FromGitter> <dalanicolai> I can quickly check it
[18:11:08] <FromGitter> <rappie> yes i should do those things. it is still a bit daunting to me to be honest. i'm kinda new to the open source world. switched to linux about half a year ago. but i do plan to start contributing more in the future :)
[18:12:15] <FromGitter> <rappie> well the thing i'm not understanding yet about that variable is what to actually put into it, because if it is buffer local it makes sense to have one entry because a buffer is always one language, but if you make it global or project-local it should contain a lot more languages
[18:12:48] <FromGitter> <dalanicolai> Exactly
[18:12:53] <FromGitter> <rappie> https://github.com/lassik/emacs-format-all-the-code/blob/master/format-all.el
[18:12:58] <FromGitter> <rappie> check out line 208
[18:13:46] <FromGitter> <dalanicolai> So I guess you can just set it with a file local variable indeed
[18:14:22] <FromGitter> <rappie> sorry i mean liune 233 :)
[18:15:01] <FromGitter> <dalanicolai> The error line?
[18:15:51] <FromGitter> <rappie> (defvar-local format-all-formatters nil
[18:16:03] <FromGitter> <rappie> below here are the docs for that variable
[18:17:02] <FromGitter> <dalanicolai> It is line 233 here
[18:17:15] <FromGitter> <dalanicolai> (in that link)
[18:17:16] <FromGitter> <rappie> anyway, i really need a break. i will look into this later. i will write an issue about this on the github page. it's the least i can do in return after all your help :)
[18:17:32] <FromGitter> <rappie> yes sorry i meant 233 :)
[18:18:05] <FromGitter> <dalanicolai> To find the correct value, you can just run the formatter manually, and then after check the value of that variable (still with the buffer open)
[18:20:07] <FromGitter> <dalanicolai> > anyway, i really need a break. i will look into this later. i will write an issue about this on the github page. it's the least i can do in return after all your help :) ‚èé  ‚èé Would be great... just do it very quickly, explain that it is not clear that the value is nil at start, and that an configration 'code' example in the README would be nice
[18:21:12] <FromGitter> <rappie> YES!!
[18:21:19] <FromGitter> <rappie> i got it :)
[18:21:38] <FromGitter> <rappie> ```code paste, see link``` [https://gitter.im/syl20bnr/spacemacs?at=6241bd6909092523184733ab]
[18:21:46] <FromGitter> <rappie> this fixes it
[18:21:47] <FromGitter> <dalanicolai> Great... I wanted to test it now
[18:22:00] <FromGitter> <rappie> it's actually in the docs, but it is just written cryptically :)
[18:22:08] <FromGitter> <dalanicolai> Ah okay... so that was explained
[18:22:16] <FromGitter> <rappie> "The command format-all-ensure-formatter will ensure that a default formatter is selected in case you don't have one set; you can customize the default formatter for each language. To ensure a formatter is set whenever you enable format-all-mode, you can use: (add-hook 'format-all-mode-hook 'format-all-ensure-formatter)."
[18:22:32] <FromGitter> <dalanicolai> But its purpose was not clear to me
[18:23:23] <FromGitter> <rappie> yes, it wasnt
[18:23:29] <FromGitter> <rappie> :)
[18:23:55] <FromGitter> <dalanicolai> My got... my computer is really slow... something is taking all cpu
[18:23:55] <FromGitter> <dalanicolai> Takes me 20 second to write a single message
[18:23:55] <FromGitter> <dalanicolai> (it is not emacs, I have already closed it)
[18:24:08] <FromGitter> <rappie> ok so you're suggestiong i write an issue explaining that it took us a couple of hours to understand the readme? :)
[18:24:16] <FromGitter> <dalanicolai> Anyway... good ttat it works now
[18:24:27] <FromGitter> <dalanicolai> Then enjoy your break
[18:24:30] <FromGitter> <dalanicolai> And Spacemacs
[18:24:37] <FromGitter> <rappie> i think it's Gitter
[18:24:44] <FromGitter> <rappie> because the thread is getting too long
[18:24:49] <FromGitter> <rappie> lets continue here :)
[18:26:02] <FromGitter> <dalanicolai> > ok so you're suggestiong i write an issue explaining that it took us a couple of hours to understand the readme? :) ‚èé  ‚èé Well... it will prevent others wasting their time on the same bug....
[18:26:25] <FromGitter> <dalanicolai> (documentation bug)
[18:26:49] <FromGitter> <rappie> the cpu thing is because i gitter i think, i've opened another thread
[18:27:01] <FromGitter> <rappie> i=of*
[18:27:14] <FromGitter> <dalanicolai> If he does not add it to the documentation then at least it is documented in the issue
[18:27:39] <FromGitter> <dalanicolai> Currently it is not... I could not find an issue for this
[18:28:48] <FromGitter> <dalanicolai> It looks like it probably is gitter indeed
[18:29:03] <FromGitter> <dalanicolai> The gitter client is buggy in many ways
[18:29:06] <FromGitter> <rappie> i'll be back after my break :)
[18:29:16] <FromGitter> <dalanicolai> Therefore I have created an Emacs client
[18:30:35] <FromGitter> <dalanicolai> > Mmm... when I log in to gitter using my gitlab account, I am unable to send messages (but only to the Spacemacs room, the other rooms work fine, therefore I am testing here with github account... quite weird) ‚èé >  ‚èé  ‚èé It is working very well... but I am logged in with my gitlab account, and for some reason I can not post to this room from that account [https://gi
[18:30:35] <FromGitter> ... tter.im/syl20bnr/spacemacs?at=6241bf826b912423205642db]
[18:32:07] <FromGitter> <dalanicolai> I have added a link to my gitter layer here (https://github.com/syl20bnr/spacemacs/discussions/14757)
[18:32:16] <FromGitter> <dalanicolai> It is not yet finished but it works already very well
[18:32:42] <FromGitter> <dalanicolai> Anyway... let's go back to work...
[18:32:52] <FromGitter> <dalanicolai> Good luck...
[18:51:43] <FromGitter> <dalanicolai> Sorry, just testing
[19:18:12] <FromGitter> <rappie> @dalanicolai hi. back :)
[19:18:48] <FromGitter> <rappie> quick question: is it common to bypass the formalities in github issues like saying "thanks for creating this" etc? or is this considered rude? :)
[19:21:27] <FromGitter> <dalanicolai> I have no idea... but generally I think most coders are just people like you and me.
[19:22:43] <FromGitter> <dalanicolai> Personally, I think it is nice to hear thanks for this or that... it is a lot of work to create packages... and in Emacs most people provide it for free
[19:26:05] *** Quits: fahrradToken (~fahrradTo@2a02:810b:149f:f0f4::3928) (Ping timeout: 256 seconds)
[19:27:48] <FromGitter> <rappie> https://github.com/lassik/emacs-format-all-the-code/issues/181
[19:28:21] <FromGitter> <rappie> totally not satisfied with writing this, but this is the best i can do without putting in half an hour :)
[19:28:25] <FromGitter> <rappie> what do you think?
[19:31:18] <FromGitter> <dalanicolai> Well to me, because this start with the criticism (which sounds like a complaint, which it is of course) it sounds/looks like you do not very much appreciate the package... in this case it would be really nice to start with a thank you for the package (well that's just my opinion of course)
[19:33:18] <FromGitter> <dalanicolai> You could also mention that 'the guys' on the Spacemacs gitter did also not pick it up immediately (but maybe it looks better to leave that out indeed, anyway I would not mind)
[19:35:51] <FromGitter> <dalanicolai> But generally I think the developers understand that in an issue, you just write what is the issue... so maybe it is already fine. Anyway nice that you take time to create the issue
[19:37:26] <FromGitter> <mirkov> I am trying to debug my dotspacemacs. Is there a way to start spacemacs without loading it (other than renaming it out of the way)?
[19:38:12] <FromGitter> <dalanicolai> you mean `emacs -q`?
[19:38:36] <FromGitter> <dalanicolai> but for debugging it is generally better to use `emacs --debug-init`
[19:38:42] <FromGitter> <mirkov> Not really - emacs -q will land me in emacs. I would like to land in "bare spacemacs"
[19:39:11] <FromGitter> <mirkov> THank you for replying :-). I am trying to debug my integration with the Windows clipboard.
[19:39:34] <FromGitter> <mirkov> emacs -q will yank from windows, but my just updated Spacemacs does not
[19:39:43] <FromGitter> <dalanicolai> I am not aware of a way to do this, except indeed for renaming/backing up your dotspacemacs file
[19:39:57] <FromGitter> <mirkov> Renaming was my plan B.
[19:40:22] <FromGitter> <dalanicolai> Yes I noticed that indeed
[19:40:49] <FromGitter> <dalanicolai> I have not much experience with using Emacs on Windows btw
[19:40:54] <FromGitter> <mirkov> At first I thought that I needed to install the xclipboard layer, but that did not help.
[19:40:57] <FromGitter> <dalanicolai> So I can not help you there
[19:41:01] <FromGitter> <mirkov> Do you suggest I submit an issue?
[19:41:23] <FromGitter> <dalanicolai> Yes that is fine... but maybe you can find one already
[19:41:29] <FromGitter> <dalanicolai> Otherwise create it indeed
[19:41:49] <FromGitter> <mirkov> I looked, but I will look more carefully - I am probably not the first one to hit on this. Thanks,
[19:42:55] <FromGitter> <dalanicolai> Yeah... unfortunately I don't remember how it worked here. But I do not rmemeber issues with the clipboard (I have tried Emacs on WSL)
[19:43:15] <FromGitter> <dalanicolai> which btw I could really recommend... the best way to run Emacs on Windows
[19:44:06] <FromGitter> <dalanicolai> If you are interested (and don't have it already)... this guide (was useful for me)
[19:45:07] <FromGitter> <mirkov> Update and comments: Bare spacemacs does not grap Windows clipboard. I run Emacs on MSYS2. Your (thanks) is broken
[19:45:40] <FromGitter> <dalanicolai> I guess you mean the link... I have corrected it
[19:46:05] <FromGitter> <mirkov> Link works!
[19:48:05] <FromGitter> <dalanicolai> it is easier because on WSL you can just use GNU/linux packages... while on Windows things, like pdf-tools and locate (and possibly grep) are difficult to install
[19:48:56] <FromGitter> <mirkov> I work on a company laptop. I will need their permission to install WSL. I actually plan to do ask them. The guide will prove useful
[19:48:59] <FromGitter> <dalanicolai> But maybe MSYS2 is a good alternative also... however I have no experience with it
[19:49:28] <FromGitter> <dalanicolai> And if you do not need pdf-tools then probably it is fine already
[19:50:37] <FromGitter> <mirkov> I'll ask for permission to install WSL
[19:51:59] <FromGitter> <dalanicolai> Well that might be even better (bit I don't know how good is MSYS2)
[20:03:26] <FromGitter> <mirkov> For the clipboard problem I posted Issue 15434 (https://github.com/syl20bnr/spacemacs/issues/15434)
[20:05:23] <FromGitter> <dalanicolai> thanks... but have you tried these (https://emacs.stackexchange.com/questions/30137/paste-windows-clipboard-with-shift-insert-but-not-by-yanking)
[20:05:49] <FromGitter> <dalanicolai> Maybe that simpleclip could be added to Spacemacs, if it works
[20:08:03] <FromGitter> <mirkov> shift-insert works! I will update the submitted issue and debug a bit more. The interesting thing is that the kill-ring does not show stuff from Windows clipboard
[20:09:49] <FromGitter> <dalanicolai> Yeah... things are already confusing on linux (I always forget the details about the clipborads), and I have no idea how things work on Windows...
[20:10:08] <FromGitter> <dalanicolai> But nice it works! And good luck then...
[20:44:12] *** Joins: Minvera (~Minvera@user/Minvera)
[22:06:39] *** Joins: Unicorn_Princess (~Unicorn_P@93-103-228-248.dynamic.t-2.net)
[22:34:18] <FromGitter> <rappie> @dalanicolai hi. i finally got everything working as i want with Solidity format on save :)
[22:34:58] <FromGitter> <rappie> this is my final config:  ‚èé  ‚èé ```code paste, see link``` [https://gitter.im/syl20bnr/spacemacs?at=6241f8cad1b64840db8ab5f6]
[22:35:23] <FromGitter> <rappie> i've also added and replied to some issues, this is a first for me :)
[22:35:28] <FromGitter> <rappie> https://github.com/lassik/emacs-language-id/issues/14
[22:35:48] <FromGitter> <rappie> https://github.com/lassik/emacs-format-all-the-code/issues/181
[22:35:59] <FromGitter> <rappie> one of them already has a fix
[22:36:06] <FromGitter> <rappie> so thanks again for all the help :)
[22:40:18] <FromGitter> <dalanicolai> A nice...
[22:40:54] <FromGitter> <dalanicolai> But you are adding a global hook (for all buffers/modes)
[22:41:06] <FromGitter> <dalanicolai> While it looks like you'd like a local hook
[22:41:21] <FromGitter> <dalanicolai> > one of them already has a fix ‚èé  ‚èé That's fast... nice job
[22:41:50] <FromGitter> <dalanicolai> Thanks for your contributions also (to format-all)
[22:48:49] <FromGitter> <rappie> > But you are adding a global hook (for all buffers/modes) ‚èé  ‚èé are you sure? it doesnt format my `.spacemacs` when i save it
[22:52:50] <FromGitter> <drpastah:matrix.org> Anyone know how I can search my project via helm and when I go to each entry it shows the file & position in the top window?
[22:53:00] <FromGitter> <drpastah:matrix.org> I tried helm follow mode but it isn't working
[22:55:09] <FromGitter> <drpastah:matrix.org> guess I gotta hit C-c C-f every search...
[23:24:57] *** Quits: Minvera (~Minvera@user/Minvera) (Remote host closed the connection)
[23:36:10] <FromGitter> <gs> Moin folks, I've just installed `spacemacs` and have weird characters showing randomly https://ibb.co/y6vnxn4 (osx and emacs 27.2)
[23:37:09] <FromGitter> <drpastah:matrix.org> which is the weird character?
[23:37:59] <FromGitter> <gs> hehe, right, this on black background 0e0e...*
[23:38:14] <FromGitter> <gs> they show up randomly, with random length
[23:39:48] <FromGitter> <gs> ohhh, I see it might be `iterm3` issue!
[23:40:20] <FromGitter> <gs> right, working with Terminal, its fine
[23:47:50] <FromGitter> <dalanicolai> It looks like that to me yes...
[23:48:11] <FromGitter> <dalanicolai> Maybe add a print statement to that `format-all-buffer--no-bufferjump` function
[23:48:46] <FromGitter> <dalanicolai> And check what happens after you have saved a solidity file first
[23:49:12] <FromGitter> <dalanicolai> Then check what happens on save in some other file (somethig gets printed?)
