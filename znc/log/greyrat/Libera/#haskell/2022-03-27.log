[00:06:01] *** Joins: alp (~alp@user/alp)
[00:07:55] *** Quits: jpds (~jpds@gateway/tor-sasl/jpds) (Ping timeout: 240 seconds)
[00:08:57] *** Quits: califax (~califax@user/califx) (Remote host closed the connection)
[00:09:10] *** Joins: califax (~califax@user/califx)
[00:09:17] *** Quits: bahamas (~lucian@84.232.140.158) (Ping timeout: 240 seconds)
[00:10:56] *** Joins: jpds (~jpds@gateway/tor-sasl/jpds)
[00:11:37] *** Joins: acidjnk (~acidjnk@p200300d0c7049f68c1d0bc0d753b520f.dip0.t-ipconnect.de)
[00:15:39] *** Quits: seydar (~seydar@154-27-113-252.starry-inc.net) (Quit: leaving)
[00:15:49] *** Quits: acidjnk (~acidjnk@p200300d0c7049f68c1d0bc0d753b520f.dip0.t-ipconnect.de) (Ping timeout: 240 seconds)
[00:16:33] *** Joins: merijn (~merijn@c-001-001-001.client.esciencecenter.eduvpn.nl)
[00:17:55] *** Quits: fef (~thedawn@user/thedawn) (Ping timeout: 240 seconds)
[00:18:36] *** Joins: Jeanne-Kamikaze (~Jeanne-Ka@142.147.89.247)
[00:18:36] *** Quits: Jeanne-Kamikaze (~Jeanne-Ka@142.147.89.247) (Client Quit)
[00:23:54] *** Joins: jao (~jao@cpc103048-sgyl39-2-0-cust502.18-2.cable.virginm.net)
[00:28:38] *** Quits: boxscape_ (~boxscape_@p4ff0b60b.dip0.t-ipconnect.de) (Ping timeout: 272 seconds)
[00:41:01] *** Quits: Lord_of_Life (~Lord@user/lord-of-life/x-2819915) (Ping timeout: 256 seconds)
[00:42:03] *** Joins: Lord_of_Life (~Lord@user/lord-of-life/x-2819915)
[00:45:46] *** Joins: simendsjo (~user@84.211.91.241)
[00:51:24] *** Joins: ShalokShalom (~ShalokSha@2a02:1748:dd5e:7f60:b02d:5b89:5217:758a)
[00:51:26] *** Quits: merijn (~merijn@c-001-001-001.client.esciencecenter.eduvpn.nl) (Ping timeout: 272 seconds)
[00:52:48] *** Joins: yauhsien (~yauhsien@61-231-25-68.dynamic-ip.hinet.net)
[00:53:38] *** Joins: bahamas (~lucian@84.232.140.158)
[00:55:29] <sm> would anyone feel like updating base64 for ghc 9.2 ? Possibly a small fix: https://github.com/emilypi/base64/issues/40
[00:56:13] <sm> I suspect it will unlock a bunch of stuff in stackage nightly
[00:57:38] <tomsmeding> maerwald: awesome work! Sorry for nonresponsiveness, will have a look tonight and perhaps tomorrow if I don't make it all
[00:58:19] *** Joins: lavaman (~lavaman@c-174-63-118-52.hsd1.ma.comcast.net)
[00:58:38] <maerwald> sm: that is already fixed in master
[00:59:07] <sm> oh, thanks, I didn't realise
[00:59:40] *** Quits: bahamas (~lucian@84.232.140.158) (Ping timeout: 272 seconds)
[01:00:15] <sm> what's Emily
[01:00:21] *** Quits: yauhsien (~yauhsien@61-231-25-68.dynamic-ip.hinet.net) (Ping timeout: 252 seconds)
[01:00:24] <sm> 's nick, I wonder
[01:01:11] *** Quits: hololeap (~hololeap@user/hololeap) (Remote host closed the connection)
[01:01:11] *** Quits: tiferrei (~tiferrei@user/tiferrei) (Remote host closed the connection)
[01:01:25] *** Joins: tiferrei (~tiferrei@user/tiferrei)
[01:02:37] *** Joins: hololeap (~hololeap@user/hololeap)
[01:03:29] *** Joins: mohy (~mohy@85-207-122-4.static.bluetone.cz)
[01:03:58] *** Quits: mohy (~mohy@85-207-122-4.static.bluetone.cz) (Client Quit)
[01:04:11] *** Joins: mohy (~mohy@85-207-122-4.static.bluetone.cz)
[01:05:57] *** Quits: simendsjo (~user@84.211.91.241) (Ping timeout: 256 seconds)
[01:08:16] *** Quits: alp (~alp@user/alp) (Ping timeout: 245 seconds)
[01:08:52] *** Quits: ShalokShalom (~ShalokSha@2a02:1748:dd5e:7f60:b02d:5b89:5217:758a) (Quit: Client closed)
[01:14:15] <janus> sm: try /whois tapas
[01:14:44] <sm> thanks!
[01:17:04] *** Joins: boxscape_ (~boxscape_@p4ff0b60b.dip0.t-ipconnect.de)
[01:17:50] <tomsmeding> maerwald: was my code acceptable to work in :p
[01:18:22] <tapas> sm: yo will you people chill? I have a life you know
[01:18:33] <tapas> i'll have a release out this weekend
[01:18:43] <hpc> nobody on irc has a life :P
[01:20:34] <sm> uh.. sorry
[01:20:35] <Hecate> agreed
[01:22:02] *** Quits: mohy (~mohy@85-207-122-4.static.bluetone.cz) (Quit: Leaving)
[01:22:26] <boxscape_> % (proc x -> (| \(a, (s, ())) -> x |) "oeu")
[01:22:26] <yahb> boxscape_: ; <interactive>:22:32: error:; * Variable not in scope: x; * Perhaps you meant `x' (line 22)
[01:22:28] <boxscape_> perhaps I did
[01:23:31] *** Quits: dut (~dut@user/dut) (Ping timeout: 260 seconds)
[01:24:04] <hpc> ... how?
[01:24:43] <boxscape_> not sure
[01:26:49] <sm> maerwald: âœ”âœ”  GHC   9.2.2           latest,base-4.16.1.0          hls-powered  <- what's this ?
[01:27:00] <tomsmeding> the hls-powered?
[01:27:04] <sm> yup
[01:27:10] <tomsmeding> means that the ghcup-distributed HLS has support for that GHC
[01:27:29] *** Joins: pavonia (~user@user/siracusa)
[01:27:35] <tomsmeding> s/support/a working compiled binary/
[01:27:58] <tomsmeding> oh, apparently not "the ghcup-distributed" but "the currently ghcup-installed"
[01:28:09] <sm> cool. This is an HLS I just built and installed in place of ghcup's. I guess ideally I'd be seeing hls-powered for all my ghcs
[01:28:27] <tomsmeding> ah, I put my self-compiled HLSs in a different directory :p
[01:28:42] <maerwald> tomsmeding: there's `ghcup compile hls`
[01:28:59] <sm> how do you ensure the right HLS gets invoked per project, tomsmeding 
[01:29:25] <tomsmeding> sm: I name them haskell-language-server-9.2.2, and then haskell-language-server-wrapper does the right thing :p
[01:29:30] <maerwald> sm: there's `ghcup run --hls <ver> -- code .` :D
[01:29:44] <tomsmeding> maerwald: I learned that after I was already doing it this way
[01:29:53] <sm> man, these version dependencies always have been confusing and always will be confusing, even though ghcup is a boon
[01:30:17] <maerwald> tomsmeding: well, but I think the point is that for supporting ghc 8.10.4 for example, you need to downgrade HLS
[01:30:26] <maerwald> the vscode extension takes care of that for example
[01:30:28] <sm> tomsmeding: any haskell-language-server-wrapper ? built with any ghc version ?
[01:30:48] <maerwald> at least with official binaries
[01:30:52] <tomsmeding> maerwald: ah right, then I'm fortunate that I'm only dealing with 8.10.7 and 9 onwards
[01:31:01] <tomsmeding> sm: I _think_ so
[01:31:24] <tomsmeding> the wrapper doesn't do very much, it just detects your project setup and then invokes haskell-language-server-<the inferred ghc version> AFAIK
[01:31:58] <tomsmeding> (well, "just detects your project setup" is quite involved, of course, but then that's not really ghc-version bound)
[01:32:10] <sm> and yet it's a 250M binary :)
[01:32:26] <tomsmeding> haskell (tm)
[01:32:43] <tomsmeding> well it links against most of the ide infrastructure to do the project setup detection thing probably
[01:32:59] <sm> I notice my new haskell-language-server binary is only 400K though, that one must be dynamic
[01:33:05] <maerwald> sm: there's your reason why no one uses Haskell in embedded :D
[01:33:12] <maerwald> yeah
[01:34:15] <tomsmeding> maerwald: O.o that lds-roller
[01:34:29] <maerwald> tomsmeding: yeah, i copy pasted it from somewhere
[01:34:35] <maerwald> real frontend engineering
[01:34:39] <tomsmeding> did that somewhere have a license
[01:34:41] <tomsmeding> :p yes
[01:34:59] <maerwald> CC0
[01:35:03] <tomsmeding> nice
[01:35:05] <sm> I guess maybe haskell-language-server-wrapper-1.6.1.1 detects haskell-language-server-~1.6.1.1, and not haskell-language-server-~1.6.1.0
[01:35:08] <maerwald> https://loading.io/css/
[01:35:21] <maerwald> sm: no, anything with ~ is ghcup internal
[01:35:38] *** Joins: waleee (~waleee@2001:9b0:213:7200:cc36:a556:b1e8:b340)
[01:35:42] <sm> ah
[01:36:39] *** Quits: lavaman (~lavaman@c-174-63-118-52.hsd1.ma.comcast.net) (Ping timeout: 252 seconds)
[01:39:04] <tomsmeding> maerwald: I'll try fixing my own review stuff
[01:39:19] <maerwald> tomsmeding: the code was not too bad :p
[01:39:27] <tomsmeding> no :p
[01:39:41] <tomsmeding> though I don't have a /home/hasufell
[01:39:51] <maerwald> you could create one
[01:39:55] <tomsmeding> I _could_
[01:39:56] *** Quits: abhixec (~abhixec@c-67-169-139-16.hsd1.ca.comcast.net) (Quit: leaving)
[01:39:58] <sm> why not tomsmeding 
[01:40:03] <tomsmeding> good question
[01:40:13] *** Quits: polyphem (~rod@2a02:810d:840:8754:224e:f6ff:fe5e:bc17) (Ping timeout: 250 seconds)
[01:40:16] <tomsmeding> I guess I'd have to learn German first
[01:41:43] *** Quits: _ht (~quassel@231-169-21-31.ftth.glasoperator.nl) (Remote host closed the connection)
[01:42:55] *** Quits: bitdex (~bitdex@gateway/tor-sasl/bitdex) (Ping timeout: 240 seconds)
[01:43:21] *** Joins: michalz (~michalz@185.246.204.107)
[01:45:43] *** Joins: bitdex (~bitdex@gateway/tor-sasl/bitdex)
[01:48:51] *** Joins: yauhsien (~yauhsien@61-231-25-68.dynamic-ip.hinet.net)
[01:50:31] *** Quits: Midjak (~Midjak@82.66.147.146) (Quit: This computer has gone to sleep)
[01:51:37] *** Joins: dut (~dut@user/dut)
[01:52:36] *** Joins: polyphem (~rod@2a02:810d:840:8754:224e:f6ff:fe5e:bc17)
[01:52:57] *** Quits: yauhsien (~yauhsien@61-231-25-68.dynamic-ip.hinet.net) (Ping timeout: 240 seconds)
[01:53:01] *** Joins: gehmehgeh (~user@user/gehmehgeh)
[01:56:01] *** Quits: hololeap (~hololeap@user/hololeap) (Remote host closed the connection)
[01:57:25] *** Joins: hololeap (~hololeap@user/hololeap)
[01:59:44] <tomsmeding> maerwald: where did you get that dpkg-reconfigure command from
[02:00:20] <maerwald> tomsmeding: from the internet, you know
[02:00:32] <tomsmeding> "bash: dpkg-reconfigure: command not found"
[02:00:48] *** Joins: shapr` (~user@pool-173-73-44-186.washdc.fios.verizon.net)
[02:00:58] <geekosaur> what platform?
[02:01:02] <tomsmeding> ubuntu 20.04
[02:01:08] <maerwald> tomsmeding: debconf
[02:01:33] <geekosaur> it's in /usr/sbin on my system
[02:01:34] <tomsmeding> # apt install debconf && dpkg-reconfigure  -> ... command not found
[02:01:42] <tomsmeding> aaaah
[02:01:45] <tomsmeding> geekosaur: thanks
[02:01:55] <geekosaur> (also 20.04)
[02:02:37] *** Quits: shapr (~user@pool-173-73-44-186.washdc.fios.verizon.net) (Ping timeout: 256 seconds)
[02:04:17] *** Quits: takuan (~takuan@178-116-218-225.access.telenet.be) (Remote host closed the connection)
[02:08:02] *** Joins: jgeerds (~jgeerds@55d4548e.access.ecotel.net)
[02:12:51] *** Joins: alp (~alp@user/alp)
[02:13:35] *** Quits: wyrd (~wyrd@gateway/tor-sasl/wyrd) (Ping timeout: 240 seconds)
[02:15:34] *** Joins: wyrd (~wyrd@gateway/tor-sasl/wyrd)
[02:19:59] *** Quits: mikoto-chan (~mikoto-ch@213.177.151.239) (Ping timeout: 260 seconds)
[02:24:13] *** Quits: shapr` (~user@pool-173-73-44-186.washdc.fios.verizon.net) (Remote host closed the connection)
[02:24:26] *** Joins: shapr` (~user@pool-173-73-44-186.washdc.fios.verizon.net)
[02:26:23] *** Joins: lavaman (~lavaman@c-174-63-118-52.hsd1.ma.comcast.net)
[02:26:23] *** Joins: acidjnk (~acidjnk@p200300d0c7049f68c1d0bc0d753b520f.dip0.t-ipconnect.de)
[02:28:07] <tomsmeding> maerwald: again thanks for all the work
[02:35:46] *** shapr` is now known as shapr
[02:46:31] *** Quits: michalz (~michalz@185.246.204.107) (Remote host closed the connection)
[02:46:49] *** Joins: AkechiShiro (~licht@user/akechishiro)
[02:47:07] *** Joins: merijn (~merijn@c-001-001-001.client.esciencecenter.eduvpn.nl)
[02:50:23] <maerwald> tomsmeding: are we seeing a beta release?
[02:50:51] *** Quits: jgeerds (~jgeerds@55d4548e.access.ecotel.net) (Ping timeout: 250 seconds)
[02:54:21] *** Quits: fendor (~fendor@91.141.65.26.wireless.dyn.drei.com) (Remote host closed the connection)
[03:01:18] *** Quits: fluxit (~fluxit@techsmix.net) (Quit: Bye!)
[03:01:47] *** Quits: lumberjack123 (~alMalsamo@gateway/tor-sasl/almalsamo) (Remote host closed the connection)
[03:01:47] *** Quits: hololeap (~hololeap@user/hololeap) (Remote host closed the connection)
[03:02:08] *** Joins: lumberjack123 (~alMalsamo@gateway/tor-sasl/almalsamo)
[03:03:22] *** Joins: hololeap (~hololeap@user/hololeap)
[03:04:36] *** Quits: lavaman (~lavaman@c-174-63-118-52.hsd1.ma.comcast.net) (Ping timeout: 240 seconds)
[03:08:42] *** Joins: vysn (~vysn@user/vysn)
[03:15:55] *** Parts: jakalx (~jakalx@base.jakalx.net) ()
[03:17:23] *** Joins: jakalx (~jakalx@base.jakalx.net)
[03:19:48] *** Quits: vysn (~vysn@user/vysn) (Ping timeout: 240 seconds)
[03:21:23] *** Quits: merijn (~merijn@c-001-001-001.client.esciencecenter.eduvpn.nl) (Ping timeout: 256 seconds)
[03:22:07] *** Quits: gehmehgeh (~user@user/gehmehgeh) (Quit: Leaving)
[03:33:34] *** Quits: machinedgod (~machinedg@24.105.81.50) (Ping timeout: 272 seconds)
[03:34:31] *** Joins: justsomeguy (~justsomeg@user/justsomeguy)
[03:37:17] *** Joins: yauhsien (~yauhsien@61-231-25-68.dynamic-ip.hinet.net)
[03:43:02] *** Joins: deadmarshal_ (~deadmarsh@95.38.230.121)
[03:43:04] *** Quits: yauhsien (~yauhsien@61-231-25-68.dynamic-ip.hinet.net) (Ping timeout: 272 seconds)
[03:47:17] *** Quits: deadmarshal_ (~deadmarsh@95.38.230.121) (Ping timeout: 240 seconds)
[03:48:12] *** Quits: sammelweis (~quassel@2601:401:8200:2d4c:bd9:d04c:7f69:eb10) (Ping timeout: 240 seconds)
[03:59:45] *** Quits: Pickchea (~private@user/pickchea) (Quit: Leaving)
[04:01:14] *** Quits: eggplantade (~Eggplanta@108-201-191-115.lightspeed.sntcca.sbcglobal.net) (Remote host closed the connection)
[04:02:11] *** Quits: Unicorn_Princess (~Unicorn_P@93-103-228-248.dynamic.t-2.net) (Ping timeout: 256 seconds)
[04:02:19] *** Joins: gurkenglas (~gurkengla@dslb-178-012-018-212.178.012.pools.vodafone-ip.de)
[04:03:07] *** Joins: Unicorn_Princess (~Unicorn_P@93-103-228-248.dynamic.t-2.net)
[04:04:37] *** Quits: acidjnk (~acidjnk@p200300d0c7049f68c1d0bc0d753b520f.dip0.t-ipconnect.de) (Ping timeout: 240 seconds)
[04:05:16] *** Joins: sammelweis (~quassel@2601:401:8200:2d4c:bd9:d04c:7f69:eb10)
[04:12:26] *** Quits: alp (~alp@user/alp) (Ping timeout: 245 seconds)
[04:17:36] *** Joins: mvk (~mvk@2607:fea8:5cc3:7e00::7980)
[04:22:56] *** Joins: rawley (~rawley@216-197-141-102.nbfr.hsdb.sasknet.sk.ca)
[04:27:11] *** Quits: gurkenglas (~gurkengla@dslb-178-012-018-212.178.012.pools.vodafone-ip.de) (Read error: Connection reset by peer)
[04:27:23] *** Joins: machinedgod (~machinedg@24.105.81.50)
[04:29:20] *** Joins: DNH (~DNH@8.44.0.63)
[04:31:29] *** Joins: gurkenglas (~gurkengla@dslb-178-012-018-212.178.012.pools.vodafone-ip.de)
[04:35:05] *** Joins: eggplantade (~Eggplanta@108-201-191-115.lightspeed.sntcca.sbcglobal.net)
[04:44:12] *** Quits: harveypwca (~harveypwc@2601:246:c180:a570:3828:d8:e523:3f67) (Ping timeout: 240 seconds)
[04:44:26] *** Joins: azimut_ (~azimut@gateway/tor-sasl/azimut)
[04:44:38] *** Joins: raehik (~raehik@82.21.176.157)
[04:46:15] *** Quits: azimut (~azimut@gateway/tor-sasl/azimut) (Ping timeout: 240 seconds)
[04:47:35] *** Quits: jpds (~jpds@gateway/tor-sasl/jpds) (Ping timeout: 240 seconds)
[04:49:48] *** Joins: jpds (~jpds@gateway/tor-sasl/jpds)
[04:50:45] *** Quits: kaph_ (~kaph@net-109-116-124-149.cust.vodafonedsl.it) (Read error: Connection reset by peer)
[04:54:15] *** Quits: jpds (~jpds@gateway/tor-sasl/jpds) (Ping timeout: 240 seconds)
[04:56:40] *** Joins: harveypwca (~harveypwc@2601:246:c180:a570:3828:d8:e523:3f67)
[04:57:02] *** Joins: jpds (~jpds@gateway/tor-sasl/jpds)
[04:57:46] *** Joins: AlexNoo_ (~AlexNoo@178.34.150.116)
[04:57:57] *** Quits: AlexNoo (~AlexNoo@178.34.150.116) (Read error: Connection reset by peer)
[05:00:28] *** Joins: wroathe (~wroathe@ee4.ips.PaulBunyan.net)
[05:00:28] *** Quits: wroathe (~wroathe@ee4.ips.PaulBunyan.net) (Changing host)
[05:00:28] *** Joins: wroathe (~wroathe@user/wroathe)
[05:01:55] *** Quits: justsomeguy (~justsomeg@user/justsomeguy) (Ping timeout: 260 seconds)
[05:02:15] *** Quits: raehik (~raehik@82.21.176.157) (Ping timeout: 256 seconds)
[05:02:19] *** Joins: lavaman (~lavaman@c-174-63-118-52.hsd1.ma.comcast.net)
[05:03:57] *** Quits: zyklotomic (~ethan@res388d-128-61-91-192.res.gatech.edu) (Ping timeout: 256 seconds)
[05:05:36] *** Joins: zyklotomic (~ethan@r4-128-61-94-5.res.gatech.edu)
[05:05:42] *** Quits: epolanski (uid312403@id-312403.helmsley.irccloud.com) (Quit: Connection closed for inactivity)
[05:07:24] *** Quits: rawley (~rawley@216-197-141-102.nbfr.hsdb.sasknet.sk.ca) (Read error: Connection reset by peer)
[05:07:33] *** Joins: rawley_ (~rawley@216-197-141-102.nbfr.hsdb.sasknet.sk.ca)
[05:08:17] *** Quits: rawley_ (~rawley@216-197-141-102.nbfr.hsdb.sasknet.sk.ca) (Remote host closed the connection)
[05:08:42] *** Joins: rawley_ (~rawley@216-197-141-102.nbfr.hsdb.sasknet.sk.ca)
[05:09:02] *** Joins: raehik (~raehik@cpc95906-rdng25-2-0-cust156.15-3.cable.virginm.net)
[05:10:19] *** Quits: pnotequalnp (~kevin@user/pnotequalnp) (Ping timeout: 260 seconds)
[05:12:56] *** Quits: Tuplanolla (~Tuplanoll@91-159-69-98.elisa-laajakaista.fi) (Quit: Leaving.)
[05:17:44] *** Joins: merijn (~merijn@c-001-001-001.client.esciencecenter.eduvpn.nl)
[05:18:06] *** Joins: chenqisu1 (~chenqisu1@183.217.201.88)
[05:20:13] *** Quits: cyphase (~cyphase@user/cyphase) (Ping timeout: 268 seconds)
[05:24:36] *** Joins: cyphase (~cyphase@user/cyphase)
[05:25:51] *** Quits: DNH (~DNH@8.44.0.63) (Quit: My MacBook has gone to sleep. ZZZzzzâ€¦)
[05:36:32] *** Joins: Jeanne-Kamikaze (~Jeanne-Ka@142.147.89.202)
[05:45:47] *** Quits: aliosablack (~chomwitt@2a02:587:dc18:da00:eb71:868b:3400:4636) (Ping timeout: 260 seconds)
[05:47:25] *** Quits: lavaman (~lavaman@c-174-63-118-52.hsd1.ma.comcast.net) (Ping timeout: 240 seconds)
[05:52:07] *** Quits: merijn (~merijn@c-001-001-001.client.esciencecenter.eduvpn.nl) (Ping timeout: 256 seconds)
[05:56:42] *** Quits: Maxdamantus (~Maxdamant@user/maxdamantus) (Ping timeout: 272 seconds)
[05:57:20] *** Joins: Maxdamantus (~Maxdamant@user/maxdamantus)
[05:58:37] *** Quits: rawley_ (~rawley@216-197-141-102.nbfr.hsdb.sasknet.sk.ca) (Quit: Leaving)
[05:58:56] *** Joins: rawley (~rawley@216-197-141-102.nbfr.hsdb.sasknet.sk.ca)
[05:59:50] *** Quits: rawley (~rawley@216-197-141-102.nbfr.hsdb.sasknet.sk.ca) (Client Quit)
[06:00:03] *** Joins: yauhsien (~yauhsien@61-231-25-68.dynamic-ip.hinet.net)
[06:00:06] *** Joins: rawley (~rawley@216-197-141-102.nbfr.hsdb.sasknet.sk.ca)
[06:01:00] *** Quits: mvk (~mvk@2607:fea8:5cc3:7e00::7980) (Ping timeout: 240 seconds)
[06:03:10] *** Joins: rustacean (~quassel@117.254.34.143)
[06:03:29] *** Quits: rustacean (~quassel@117.254.34.143) (Client Quit)
[06:03:43] *** Joins: razetime (~quassel@117.254.34.143)
[06:04:26] *** Joins: alp (~alp@user/alp)
[06:04:37] *** Quits: yauhsien (~yauhsien@61-231-25-68.dynamic-ip.hinet.net) (Ping timeout: 268 seconds)
[06:07:09] *** Joins: vglfr (~vglfr@37.73.58.115)
[06:08:35] *** Quits: bitdex (~bitdex@gateway/tor-sasl/bitdex) (Ping timeout: 240 seconds)
[06:10:08] *** Joins: bitdex (~bitdex@gateway/tor-sasl/bitdex)
[06:10:14] *** Joins: rekahsoft (~rekahsoft@cpe001b21a2fd89-cm64777ddc63a0.cpe.net.cable.rogers.com)
[06:11:13] *** Quits: rekahsoft (~rekahsoft@cpe001b21a2fd89-cm64777ddc63a0.cpe.net.cable.rogers.com) (Remote host closed the connection)
[06:11:18] *** Quits: xkuru (~xkuru@user/xkuru) (Read error: Connection reset by peer)
[06:11:33] *** Joins: rekahsoft (~rekahsoft@cpe001b21a2fd89-cm64777ddc63a0.cpe.net.cable.rogers.com)
[06:13:10] *** Quits: gurkenglas (~gurkengla@dslb-178-012-018-212.178.012.pools.vodafone-ip.de) (Ping timeout: 272 seconds)
[06:15:10] *** Joins: lavaman (~lavaman@c-174-63-118-52.hsd1.ma.comcast.net)
[06:17:52] *** Quits: rekahsoft (~rekahsoft@cpe001b21a2fd89-cm64777ddc63a0.cpe.net.cable.rogers.com) (Remote host closed the connection)
[06:17:57] *** Quits: xff0x (~xff0x@i121-117-52-147.s41.a013.ap.plala.or.jp) (Ping timeout: 256 seconds)
[06:20:26] *** Quits: zaquest (~notzaques@5.130.79.72) (Remote host closed the connection)
[06:21:05] *** Joins: rekahsoft (~rekahsoft@cpe001b21a2fd89-cm64777ddc63a0.cpe.net.cable.rogers.com)
[06:21:19] *** Quits: rekahsoft (~rekahsoft@cpe001b21a2fd89-cm64777ddc63a0.cpe.net.cable.rogers.com) (Remote host closed the connection)
[06:21:44] *** Joins: rekahsoft (~rekahsoft@cpe001b21a2fd89-cm64777ddc63a0.cpe.net.cable.rogers.com)
[06:22:24] *** Joins: zaquest (~notzaques@5.130.79.72)
[06:25:57] *** Quits: joo-_ (~joo-_@fsf/member/joo--) (Ping timeout: 252 seconds)
[06:27:34] *** Joins: joo-_ (~joo-_@80-62-117-54-mobile.dk.customer.tdc.net)
[06:27:34] *** Quits: joo-_ (~joo-_@80-62-117-54-mobile.dk.customer.tdc.net) (Changing host)
[06:27:34] *** Joins: joo-_ (~joo-_@fsf/member/joo--)
[06:32:13] *** Quits: wroathe (~wroathe@user/wroathe) (Ping timeout: 240 seconds)
[06:34:06] *** Joins: wroathe (~wroathe@ee4.ips.PaulBunyan.net)
[06:34:06] *** Quits: wroathe (~wroathe@ee4.ips.PaulBunyan.net) (Changing host)
[06:34:06] *** Joins: wroathe (~wroathe@user/wroathe)
[06:34:13] *** Quits: vglfr (~vglfr@37.73.58.115) (Ping timeout: 268 seconds)
[06:40:14] *** Joins: vglfr (~vglfr@37.73.58.115)
[06:40:57] <razetime> hi, i'm trying to install a package with cabal but get this weird error:
[06:40:57] <razetime> cabal: Error: some packages failed to install:
[06:40:57] <razetime> ghc-lib-parser-8.10.7.20220219-7xoqX1liclfEDk8lJQn5pT failed during the
[06:40:57] <razetime> configure step. The exception was:
[06:40:57] <razetime> ExitFailure 1
[06:40:57] <razetime> ormolu-0.1.4.1-IQBEtLLThqGE3isZmjbrfL depends on ormolu-0.1.4.1 which failed
[06:40:59] <razetime> to install.
[06:48:01] *** Quits: lavaman (~lavaman@c-174-63-118-52.hsd1.ma.comcast.net) (Read error: Connection reset by peer)
[06:48:07] *** Joins: awschnap (~lavaman@c-174-63-118-52.hsd1.ma.comcast.net)
[06:50:36] *** Quits: jao (~jao@cpc103048-sgyl39-2-0-cust502.18-2.cable.virginm.net) (Remote host closed the connection)
[06:54:49] *** Joins: jao (~jao@cpc103048-sgyl39-2-0-cust502.18-2.cable.virginm.net)
[06:55:06] *** Joins: AlexNoo__ (~AlexNoo@94.233.240.35)
[06:55:13] *** Joins: xff0x (~xff0x@i121-117-52-147.s41.a013.ap.plala.or.jp)
[06:55:17] *** Quits: Katarushisu (~Katarushi@cpc147334-finc20-2-0-cust27.4-2.cable.virginm.net) (Read error: Connection reset by peer)
[06:56:12] *** Quits: razetime (~quassel@117.254.34.143) (Ping timeout: 240 seconds)
[06:56:37] *** Quits: AlexZenon (~alzenon@178.34.150.116) (Ping timeout: 240 seconds)
[06:56:56] *** Joins: razetime (~quassel@117.254.34.170)
[06:57:34] *** Joins: Katarushisu (~Katarushi@cpc147334-finc20-2-0-cust27.4-2.cable.virginm.net)
[06:57:39] *** Quits: Alex_test (~al_test@178.34.150.116) (Ping timeout: 250 seconds)
[06:58:17] *** Quits: vglfr (~vglfr@37.73.58.115) (Ping timeout: 240 seconds)
[06:58:17] *** Quits: AlexNoo_ (~AlexNoo@178.34.150.116) (Ping timeout: 240 seconds)
[07:00:28] *** Joins: AlexZenon (~alzenon@94.233.240.35)
[07:01:34] *** Joins: Alex_test (~al_test@94.233.240.35)
[07:09:14] *** Quits: harveypwca (~harveypwc@2601:246:c180:a570:3828:d8:e523:3f67) (Quit: Leaving)
[07:10:24] *** Joins: yauhsien (~yauhsien@61-231-25-68.dynamic-ip.hinet.net)
[07:11:41] *** Joins: finn_elija (~finn_elij@user/finn-elija/x-0085643)
[07:11:42] *** Quits: FinnElija (~finn_elij@user/finn-elija/x-0085643) (Killed (NickServ (Forcing logout FinnElija -> finn_elija)))
[07:11:42] *** finn_elija is now known as FinnElija
[07:12:36] *** Quits: wyrd (~wyrd@gateway/tor-sasl/wyrd) (Quit: Lost terminal)
[07:14:36] *** Quits: yauhsien (~yauhsien@61-231-25-68.dynamic-ip.hinet.net) (Ping timeout: 240 seconds)
[07:24:47] *** Quits: alp (~alp@user/alp) (Ping timeout: 268 seconds)
[07:25:57] *** Quits: wroathe (~wroathe@user/wroathe) (Ping timeout: 240 seconds)
[07:28:53] *** Joins: wroathe (~wroathe@user/wroathe)
[07:31:17] *** Quits: raehik (~raehik@cpc95906-rdng25-2-0-cust156.15-3.cable.virginm.net) (Ping timeout: 256 seconds)
[07:31:23] *** Joins: deadmarshal_ (~deadmarsh@95.38.230.121)
[07:32:36] *** Joins: kaph (~kaph@net-109-116-124-149.cust.vodafonedsl.it)
[07:36:46] <DigitalKiwi> razetime: is ormolu the package you want to install or something else
[07:37:00] <razetime> it is the package i want to install
[07:38:14] *** Joins: cdman (~dcm@user/dmc/x-4369397)
[07:38:27] <DigitalKiwi> nix-shell -p ormolu
[07:38:28] <DigitalKiwi> [nix-shell:~]$ ormolu --version
[07:38:30] <DigitalKiwi> ormolu 0.1.4.1 UNKNOWN UNKNOWN
[07:38:32] <DigitalKiwi> using ghc-lib-parser 8.10.7.20210828
[07:39:54] *** Joins: _dmc_ (~dcm@27.2.216.148)
[07:43:11] *** Quits: cdman (~dcm@user/dmc/x-4369397) (Ping timeout: 256 seconds)
[07:47:37] *** Quits: Hash (~Hash@hey.howstoned.ru) (Ping timeout: 240 seconds)
[07:48:14] *** Joins: merijn (~merijn@c-001-001-001.client.esciencecenter.eduvpn.nl)
[07:53:01] *** Quits: rekahsoft (~rekahsoft@cpe001b21a2fd89-cm64777ddc63a0.cpe.net.cable.rogers.com) (Ping timeout: 240 seconds)
[07:54:21] *** Joins: wyrd (~wyrd@gateway/tor-sasl/wyrd)
[07:55:05] *** Quits: Jeanne-Kamikaze (~Jeanne-Ka@142.147.89.202) (Quit: Leaving)
[07:56:12] <DigitalKiwi> razetime: when was your last `cabal update`?
[07:56:32] <razetime> about a minute before i ran cabal install ormolu
[07:57:42] <ProfSimm> How does Haskell disambiguate these:  a -b  as in "apply -b to function a" vs "subtract b from a"
[08:06:29] <dsal> `a -b` is "call the function (-) on `a` and `b`"
[08:07:35] <ProfSimm> dsal: what about the other case, where I was trying to pass -b to a
[08:07:47] <dsal> That's not what that does, though.
[08:07:47] <ProfSimm> dsal: for example   print -5
[08:07:56] <dsal> > print (-5)
[08:07:57] <lambdabot>  <IO ()>
[08:08:00] <ProfSimm> Sure but
[08:08:03] <dsal> % print (-5)
[08:08:03] <yahb> dsal: -5
[08:08:04] <ProfSimm> Isn't this error prone
[08:08:06] <DigitalKiwi> lol weird i get ormolu-0.4.0.0 with cabal
[08:08:26] <dsal> It's not error prone in the sense that it'll cause runtime problems.  It's not ambiguous.
[08:08:30] <ProfSimm> %print -5
[08:08:51] <dsal> There's a GHC extension to make it work a little more like you'd expect, but then that'd break some other things.
[08:08:55] <dsal> % print -5
[08:08:55] <yahb> dsal: ; <interactive>:28:1: error:; * No instance for (Num (() -> IO ())) arising from a use of `it'; (maybe you haven't applied a function to enough arguments?); * In the first argument of `print', namely `it'; In a stmt of an interactive GHCi command: print it
[08:09:09] <ProfSimm> Hm
[08:09:31] <ProfSimm> dsal: why have such an extension
[08:09:47] <dsal> Because people keep trying to do the syntactic thing that you're trying to do and it can work in many cases.
[08:10:08] <ProfSimm> dsal: in that case how do they do the other variant
[08:10:12] <ProfSimm> a - b
[08:10:53] <dsal> When do you want to call `(-) a b` ?  That's almost every time I use `(-)`.  I'm having a little trouble relating.
[08:11:14] <ProfSimm> OK
[08:11:16] <ProfSimm> thanks
[08:11:46] <dsal> This is the extension:  https://ghc.gitlab.haskell.org/ghc/doc/users_guide/exts/negative_literals.html
[08:13:07] <boxscape_> ProfSimm: be clear (though maybe it is already), even with the extension, `a - b` is still parsed as `(-) a b`, just `a -b` is parsed as `a (-b)`
[08:13:12] <boxscape_> s/be/to be
[08:13:34] <dsal> It's OK to demand clarity of me.
[08:15:35] *** Joins: yauhsien (~yauhsien@61-231-25-68.dynamic-ip.hinet.net)
[08:16:58] *** Quits: Topsi (~Tobias@dyndsl-095-033-022-251.ewe-ip-backbone.de) (Read error: Connection reset by peer)
[08:18:55] *** Quits: ProfSimm (~ProfSimm@87.227.196.109) (Remote host closed the connection)
[08:19:43] <abastro[m]> Tbh quite ambiguous with `a-b`
[08:20:04] <boxscape_> that's parsed as `(-) a b` also
[08:20:13] <abastro[m]> Oh thats nice
[08:20:20] <abastro[m]> At cost of parsing overhead
[08:20:29] <abastro[m]> Hm actually, haskell is hard to parse right
[08:20:40] <boxscape_> I think so yeah
[08:20:42] <abastro[m]> I think it is one of problems of haskell
[08:22:07] <dsal> > 1+5
[08:22:09] <lambdabot>  6
[08:22:21] *** Quits: [itchyjunk] (~itchyjunk@user/itchyjunk/x-7353470) (Ping timeout: 250 seconds)
[08:22:25] <dsal> > "a"<>"b"
[08:22:27] <lambdabot>  "ab"
[08:23:00] *** Quits: merijn (~merijn@c-001-001-001.client.esciencecenter.eduvpn.nl) (Ping timeout: 272 seconds)
[08:26:34] *** Joins: [itchyjunk] (~itchyjunk@user/itchyjunk/x-7353470)
[08:31:15] *** Quits: mon_aaraj (~MonAaraj@user/mon-aaraj/x-4416475) (Ping timeout: 272 seconds)
[08:31:21] *** Joins: vglfr (~vglfr@46.96.151.207)
[08:32:45] *** Joins: mon_aaraj (~MonAaraj@user/mon-aaraj/x-4416475)
[08:34:35] *** Quits: stiell (~stiell@gateway/tor-sasl/stiell) (Ping timeout: 240 seconds)
[08:36:57] *** Joins: stiell (~stiell@gateway/tor-sasl/stiell)
[08:37:02] <abastro[m]> That parsing error message is rather poor
[08:38:57] <boxscape_> % % (proc a -> (| id (\x -> returnA -< x) |) 4 5 6) "foo" -- update, I asked yesterday whether this is a bug, because the command seems to be getting more arguments than it requires - I now think it isn't, turns out commands just get a stack of arguments, and I suppose more values can be added onto that stack
[08:38:57] <yahb> boxscape_: ; <interactive>:34:1: error: parse error on input `%'
[08:39:00] <boxscape_> whoops
[08:39:04] <boxscape_> % (proc a -> (| id (\x -> returnA -< x) |) 4 5 6) "foo"
[08:39:04] <yahb> boxscape_: 4
[08:42:25] *** Joins: vysn (~vysn@user/vysn)
[08:44:05] *** Joins: nicbk (~nicbk@user/nicbk)
[08:45:27] *** Quits: wroathe (~wroathe@user/wroathe) (Ping timeout: 260 seconds)
[08:45:55] *** Quits: deadmarshal_ (~deadmarsh@95.38.230.121) (Ping timeout: 260 seconds)
[08:46:26] *** Quits: vglfr (~vglfr@46.96.151.207) (Ping timeout: 272 seconds)
[08:49:07] *** Quits: _dmc_ (~dcm@27.2.216.148) (Changing host)
[08:49:07] *** Joins: _dmc_ (~dcm@user/dmc/x-4369397)
[08:49:22] *** Quits: _dmc_ (~dcm@user/dmc/x-4369397) (Quit: Leaving)
[08:49:49] *** Joins: cdman (~dcm@user/dmc/x-4369397)
[08:50:39] *** Quits: lambdap2 (~lambdap@static.167.190.119.168.clients.your-server.de) (Quit: lambdap2)
[08:51:15] *** Joins: lambdap2 (~lambdap@static.167.190.119.168.clients.your-server.de)
[08:52:08] *** Joins: nate1 (~nate@98.45.167.61)
[08:52:31] *** Quits: yauhsien (~yauhsien@61-231-25-68.dynamic-ip.hinet.net) (Remote host closed the connection)
[08:52:35] *** Joins: pnotequalnp (~kevin@user/pnotequalnp)
[08:55:34] *** Joins: yauhsien (~yauhsien@61-231-25-68.dynamic-ip.hinet.net)
[08:58:07] *** Joins: dyeplexer (~dyeplexer@user/dyeplexer)
[08:59:28] *** Joins: _dmc_ (~dcm@27.2.216.148)
[08:59:28] *** Quits: _dmc_ (~dcm@27.2.216.148) (Changing host)
[08:59:28] *** Joins: _dmc_ (~dcm@user/dmc/x-4369397)
[09:00:22] *** Quits: rawley (~rawley@216-197-141-102.nbfr.hsdb.sasknet.sk.ca) (Remote host closed the connection)
[09:00:25] *** Quits: _dmc_ (~dcm@user/dmc/x-4369397) (Remote host closed the connection)
[09:06:35] *** Quits: lumberjack123 (~alMalsamo@gateway/tor-sasl/almalsamo) (Ping timeout: 240 seconds)
[09:09:57] *** Quits: chenqisu1 (~chenqisu1@183.217.201.88) (Ping timeout: 240 seconds)
[09:12:45] *** Quits: HotblackDesiato_ (~HotblackD@gateway/tor-sasl/hotblackdesiato) (Remote host closed the connection)
[09:13:00] *** Joins: HotblackDesiato (~HotblackD@gateway/tor-sasl/hotblackdesiato)
[09:18:01] *** Joins: lumberjack123 (~alMalsamo@gateway/tor-sasl/almalsamo)
[09:21:15] *** Quits: [itchyjunk] (~itchyjunk@user/itchyjunk/x-7353470) (Remote host closed the connection)
[09:24:06] *** Quits: pgib (~textual@173.38.117.75) (Ping timeout: 245 seconds)
[09:29:30] *** Quits: jao (~jao@cpc103048-sgyl39-2-0-cust502.18-2.cable.virginm.net) (Ping timeout: 272 seconds)
[09:30:57] *** Joins: Guest2747 (~Guest27@2601:281:d47f:1590::6b90)
[09:39:15] *** Quits: nicbk (~nicbk@user/nicbk) (Quit: nicbk)
[09:45:58] *** Quits: nate1 (~nate@98.45.167.61) (Ping timeout: 272 seconds)
[09:46:34] *** Joins: sloorush (~sloorush@136.233.9.99)
[09:56:55] *** Quits: sloorush (~sloorush@136.233.9.99) (Ping timeout: 256 seconds)
[09:58:21] *** Quits: Unicorn_Princess (~Unicorn_P@93-103-228-248.dynamic.t-2.net) (Remote host closed the connection)
[09:59:48] *** Quits: vysn (~vysn@user/vysn) (Ping timeout: 240 seconds)
[09:59:59] *** Quits: Guest2747 (~Guest27@2601:281:d47f:1590::6b90) (Quit: Client closed)
[10:02:39] *** Quits: waleee (~waleee@2001:9b0:213:7200:cc36:a556:b1e8:b340) (Ping timeout: 252 seconds)
[10:03:30] *** Joins: waleee (~waleee@2001:9b0:213:7200:cc36:a556:b1e8:b340)
[10:05:28] *** Joins: Everything (~Everythin@37.115.210.35)
[10:11:53] *** Quits: eggplantade (~Eggplanta@108-201-191-115.lightspeed.sntcca.sbcglobal.net) (Remote host closed the connection)
[10:15:02] *** Joins: jdm (jesse@c-68-62-216-212.hsd1.al.comcast.net)
[10:17:23] *** Quits: waleee (~waleee@2001:9b0:213:7200:cc36:a556:b1e8:b340) (Ping timeout: 260 seconds)
[10:18:15] *** Joins: waleee (~waleee@2001:9b0:213:7200:cc36:a556:b1e8:b340)
[10:19:24] *** Joins: merijn (~merijn@c-001-001-001.client.esciencecenter.eduvpn.nl)
[10:20:15] *** Joins: eggplantade (~Eggplanta@108-201-191-115.lightspeed.sntcca.sbcglobal.net)
[10:21:48] *** Quits: awschnap (~lavaman@c-174-63-118-52.hsd1.ma.comcast.net) (Remote host closed the connection)
[10:23:54] *** Quits: yauhsien (~yauhsien@61-231-25-68.dynamic-ip.hinet.net) (Remote host closed the connection)
[10:24:28] *** Joins: yauhsien (~yauhsien@61-231-25-68.dynamic-ip.hinet.net)
[10:27:30] *** Joins: lavaman (~lavaman@c-174-63-118-52.hsd1.ma.comcast.net)
[10:29:13] *** Quits: yauhsien (~yauhsien@61-231-25-68.dynamic-ip.hinet.net) (Ping timeout: 256 seconds)
[10:30:16] *** Joins: yauhsien (~yauhsien@61-231-25-68.dynamic-ip.hinet.net)
[10:35:37] *** Quits: pnotequalnp (~kevin@user/pnotequalnp) (Ping timeout: 240 seconds)
[10:36:19] *** Quits: YoungFrog (~youngfrog@2a02:a03f:c21b:f900:d813:4914:1c90:9409) (Remote host closed the connection)
[10:36:38] *** Joins: YoungFrog (~youngfrog@2a02:a03f:c21b:f900:84e3:4a12:bce1:8082)
[10:39:19] *** Quits: kaph (~kaph@net-109-116-124-149.cust.vodafonedsl.it) (Ping timeout: 260 seconds)
[10:41:15] *** Joins: Pickchea (~private@user/pickchea)
[10:43:48] *** Quits: eggplantade (~Eggplanta@108-201-191-115.lightspeed.sntcca.sbcglobal.net) (Remote host closed the connection)
[10:44:05] *** Quits: lavaman (~lavaman@c-174-63-118-52.hsd1.ma.comcast.net) (Remote host closed the connection)
[10:49:23] *** Joins: vglfr (~vglfr@46.96.151.207)
[10:52:51] *** Quits: merijn (~merijn@c-001-001-001.client.esciencecenter.eduvpn.nl) (Ping timeout: 260 seconds)
[10:53:19] *** Quits: waleee (~waleee@2001:9b0:213:7200:cc36:a556:b1e8:b340) (Ping timeout: 260 seconds)
[10:54:23] *** Joins: waleee (~waleee@2001:9b0:213:7200:cc36:a556:b1e8:b340)
[11:06:07] *** Quits: yauhsien (~yauhsien@61-231-25-68.dynamic-ip.hinet.net) (Remote host closed the connection)
[11:06:54] *** Joins: yauhsien (~yauhsien@61-231-25-68.dynamic-ip.hinet.net)
[11:07:27] *** Joins: lavaman (~lavaman@c-174-63-118-52.hsd1.ma.comcast.net)
[11:10:17] *** Quits: leah2 (~leah@vuxu.org) (Ping timeout: 252 seconds)
[11:11:43] *** Quits: yauhsien (~yauhsien@61-231-25-68.dynamic-ip.hinet.net) (Ping timeout: 256 seconds)
[11:15:00] *** Joins: eggplantade (~Eggplanta@108-201-191-115.lightspeed.sntcca.sbcglobal.net)
[11:15:14] *** Quits: lagash (lagash@lagash.shelltalk.net) (Ping timeout: 252 seconds)
[11:18:03] *** Joins: lagooned (~lagooned@108-208-149-42.lightspeed.hstntx.sbcglobal.net)
[11:19:15] *** Quits: lavaman (~lavaman@c-174-63-118-52.hsd1.ma.comcast.net) (Remote host closed the connection)
[11:22:01] *** Quits: mtjm (~mutantmel@2604:a880:2:d0::208b:d001) (Remote host closed the connection)
[11:23:05] *** Joins: mtjm (~mutantmel@2604:a880:2:d0::208b:d001)
[11:23:40] *** Joins: kaph (~kaph@net-109-116-124-149.cust.vodafonedsl.it)
[11:34:02] *** Quits: Pickchea (~private@user/pickchea) (Quit: Leaving)
[11:34:43] *** Joins: dextaa_ (~dextaa@user/dextaa)
[11:37:50] *** Joins: AlexZenon_2 (~alzenon@94.233.240.35)
[11:39:29] *** Quits: AlexZenon (~alzenon@94.233.240.35) (Ping timeout: 256 seconds)
[11:40:50] *** Quits: waleee (~waleee@2001:9b0:213:7200:cc36:a556:b1e8:b340) (Remote host closed the connection)
[11:40:57] *** Joins: pacc (~dylan@c-98-212-49-222.hsd1.il.comcast.net)
[11:41:15] *** Joins: waleee (~waleee@2001:9b0:213:7200:cc36:a556:b1e8:b340)
[11:41:59] *** Joins: lavaman (~lavaman@c-174-63-118-52.hsd1.ma.comcast.net)
[11:42:13] *** Joins: vysn (~vysn@user/vysn)
[11:45:49] *** Joins: Midjak (~Midjak@82.66.147.146)
[11:47:17] *** Quits: pacc (~dylan@c-98-212-49-222.hsd1.il.comcast.net) (Quit: WeeChat 3.0)
[11:51:48] *** Joins: takuan (~takuan@178-116-218-225.access.telenet.be)
[11:53:31] *** Joins: acidjnk (~acidjnk@pd9e0b763.dip0.t-ipconnect.de)
[11:53:52] *** Joins: yauhsien (~yauhsien@61-231-25-68.dynamic-ip.hinet.net)
[11:55:57] *** Quits: tzh (~tzh@c-24-21-73-154.hsd1.or.comcast.net) (Quit: zzz)
[11:57:15] *** Quits: waleee (~waleee@2001:9b0:213:7200:cc36:a556:b1e8:b340) (Ping timeout: 260 seconds)
[11:57:53] *** Joins: waleee (~waleee@2001:9b0:213:7200:cc36:a556:b1e8:b340)
[11:58:58] *** Quits: yauhsien (~yauhsien@61-231-25-68.dynamic-ip.hinet.net) (Ping timeout: 272 seconds)
[12:10:34] *** Joins: chenqisu1 (~chenqisu1@183.217.201.88)
[12:12:36] *** Quits: waleee (~waleee@2001:9b0:213:7200:cc36:a556:b1e8:b340) (Ping timeout: 240 seconds)
[12:13:47] *** Joins: waleee (~waleee@2001:9b0:213:7200:cc36:a556:b1e8:b340)
[12:17:20] <joel135> do you know some unexpected way of implementing division with remainder in pure lambda calculus?
[12:17:20] *** Quits: Dorkside (~dorkside@208.190.197.222) (Remote host closed the connection)
[12:17:35] *** Joins: Dorkside (~dorkside@208.190.197.222)
[12:17:36] *** Quits: Dorkside (~dorkside@208.190.197.222) (Remote host closed the connection)
[12:17:50] *** Joins: Dorkside (~dorkside@208.190.197.222)
[12:17:51] *** Quits: Dorkside (~dorkside@208.190.197.222) (Read error: Connection reset by peer)
[12:18:05] *** Joins: Dorkside (~dorkside@208.190.197.222)
[12:18:06] *** Quits: Dorkside (~dorkside@208.190.197.222) (Remote host closed the connection)
[12:18:19] *** Joins: Dorkside (~dorkside@208.190.197.222)
[12:18:19] *** Quits: Dorkside (~dorkside@208.190.197.222) (Remote host closed the connection)
[12:18:32] *** Joins: Dorkside (~dorkside@208.190.197.222)
[12:18:33] *** Quits: Dorkside (~dorkside@208.190.197.222) (Remote host closed the connection)
[12:18:46] *** Joins: Dorkside (~dorkside@208.190.197.222)
[12:18:46] *** Quits: Dorkside (~dorkside@208.190.197.222) (Remote host closed the connection)
[12:18:55] *** Quits: lumberjack123 (~alMalsamo@gateway/tor-sasl/almalsamo) (Ping timeout: 240 seconds)
[12:18:59] *** Joins: Dorkside (~dorkside@208.190.197.222)
[12:19:00] *** Quits: Dorkside (~dorkside@208.190.197.222) (Remote host closed the connection)
[12:19:13] *** Joins: Dorkside (~dorkside@208.190.197.222)
[12:19:13] *** Quits: Dorkside (~dorkside@208.190.197.222) (Remote host closed the connection)
[12:19:26] *** Joins: Dorkside (~dorkside@208.190.197.222)
[12:19:26] *** Quits: Dorkside (~dorkside@208.190.197.222) (Remote host closed the connection)
[12:19:39] *** Joins: Dorkside (~dorkside@208.190.197.222)
[12:19:39] *** Quits: Dorkside (~dorkside@208.190.197.222) (Remote host closed the connection)
[12:19:53] *** Joins: Dorkside (~dorkside@208.190.197.222)
[12:19:54] *** Quits: Dorkside (~dorkside@208.190.197.222) (Remote host closed the connection)
[12:20:08] *** Joins: Dorkside (~dorkside@208.190.197.222)
[12:20:09] *** Quits: Dorkside (~dorkside@208.190.197.222) (Remote host closed the connection)
[12:20:23] *** Joins: Dorkside (~dorkside@208.190.197.222)
[12:20:24] *** Quits: Dorkside (~dorkside@208.190.197.222) (Read error: Connection reset by peer)
[12:20:28] <joel135> (mostly interested in the remainder part, but i figure the quotient shouldn't be much harder)
[12:20:36] *** Joins: Dorkside (~dorkside@208.190.197.222)
[12:20:37] *** Quits: Dorkside (~dorkside@208.190.197.222) (Read error: Connection reset by peer)
[12:20:50] *** Joins: Dorkside (~dorkside@208.190.197.222)
[12:20:50] *** Quits: Dorkside (~dorkside@208.190.197.222) (Remote host closed the connection)
[12:21:03] *** Joins: Dorkside (~dorkside@208.190.197.222)
[12:21:03] *** Quits: Dorkside (~dorkside@208.190.197.222) (Remote host closed the connection)
[12:21:04] *** Joins: Tuplanolla (~Tuplanoll@91-159-69-98.elisa-laajakaista.fi)
[12:21:16] *** Joins: Dorkside (~dorkside@208.190.197.222)
[12:21:17] *** Quits: Dorkside (~dorkside@208.190.197.222) (Remote host closed the connection)
[12:21:31] *** Joins: Dorkside (~dorkside@208.190.197.222)
[12:21:32] *** Quits: Dorkside (~dorkside@208.190.197.222) (Remote host closed the connection)
[12:21:45] *** Joins: Dorkside (~dorkside@208.190.197.222)
[12:21:45] *** Quits: Dorkside (~dorkside@208.190.197.222) (Remote host closed the connection)
[12:22:04] *** Joins: Dorkside (~dorkside@208.190.197.222)
[12:22:04] *** Quits: Dorkside (~dorkside@208.190.197.222) (Read error: Connection reset by peer)
[12:22:18] *** Joins: Dorkside (~dorkside@208.190.197.222)
[12:22:19] *** Quits: Dorkside (~dorkside@208.190.197.222) (Remote host closed the connection)
[12:22:32] *** Joins: Dorkside (~dorkside@208.190.197.222)
[12:22:33] *** Quits: Dorkside (~dorkside@208.190.197.222) (Remote host closed the connection)
[12:22:46] *** Joins: Dorkside (~dorkside@208.190.197.222)
[12:22:46] *** Quits: Dorkside (~dorkside@208.190.197.222) (Read error: Connection reset by peer)
[12:22:59] *** Joins: Dorkside (~dorkside@208.190.197.222)
[12:22:59] *** Quits: Dorkside (~dorkside@208.190.197.222) (Read error: Connection reset by peer)
[12:23:13] *** Joins: Dorkside (~dorkside@208.190.197.222)
[12:23:14] *** Quits: Dorkside (~dorkside@208.190.197.222) (Remote host closed the connection)
[12:23:28] *** Joins: Dorkside (~dorkside@208.190.197.222)
[12:23:29] *** Quits: Dorkside (~dorkside@208.190.197.222) (Remote host closed the connection)
[12:23:42] *** Joins: Dorkside (~dorkside@208.190.197.222)
[12:23:42] *** Quits: Dorkside (~dorkside@208.190.197.222) (Read error: Connection reset by peer)
[12:23:55] *** Joins: Dorkside (~dorkside@208.190.197.222)
[12:23:55] *** Quits: Dorkside (~dorkside@208.190.197.222) (Read error: Connection reset by peer)
[12:24:08] *** Joins: Dorkside (~dorkside@208.190.197.222)
[12:24:09] *** Quits: Dorkside (~dorkside@208.190.197.222) (Remote host closed the connection)
[12:24:21] *** Joins: Dorkside (~dorkside@208.190.197.222)
[12:24:21] *** Quits: Dorkside (~dorkside@208.190.197.222) (Read error: Connection reset by peer)
[12:24:34] *** Joins: Dorkside (~dorkside@208.190.197.222)
[12:24:34] *** Quits: Dorkside (~dorkside@208.190.197.222) (Read error: Connection reset by peer)
[12:24:42] <joel135> maybe i should give mendler encoding another go
[12:24:47] *** Joins: Dorkside (~dorkside@208.190.197.222)
[12:24:48] *** Quits: Dorkside (~dorkside@208.190.197.222) (Remote host closed the connection)
[12:24:58] <boxscape_> % :t \f xs ys z -> foldr (uncurry f) z $ zip xs ys
[12:24:58] <yahb> boxscape_: (a -> b1 -> b2 -> b2) -> [a] -> [b1] -> b2 -> b2
[12:25:00] *** Joins: Dorkside (~dorkside@208.190.197.222)
[12:25:01] *** Quits: Dorkside (~dorkside@208.190.197.222) (Remote host closed the connection)
[12:25:02] <boxscape_> is there a function like this in hackage?
[12:25:14] *** Joins: Dorkside (~dorkside@208.190.197.222)
[12:25:14] *** Quits: Dorkside (~dorkside@208.190.197.222) (Remote host closed the connection)
[12:25:19] *** Joins: deadmarshal_ (~deadmarsh@95.38.230.121)
[12:25:32] <boxscape_> I guess it might not cross the Fairbairn threshold
[12:25:33] *** Joins: Dorkside (~dorkside@208.190.197.222)
[12:25:33] *** Quits: Dorkside (~dorkside@208.190.197.222) (Remote host closed the connection)
[12:25:47] *** Joins: Dorkside (~dorkside@208.190.197.222)
[12:25:48] *** Quits: Dorkside (~dorkside@208.190.197.222) (Remote host closed the connection)
[12:26:01] *** Joins: Dorkside (~dorkside@208.190.197.222)
[12:26:02] *** Quits: Dorkside (~dorkside@208.190.197.222) (Remote host closed the connection)
[12:26:16] *** Joins: Dorkside (~dorkside@208.190.197.222)
[12:26:17] *** Quits: Dorkside (~dorkside@208.190.197.222) (Remote host closed the connection)
[12:26:30] *** Joins: Dorkside (~dorkside@208.190.197.222)
[12:26:30] *** Quits: Dorkside (~dorkside@208.190.197.222) (Read error: Connection reset by peer)
[12:26:43] *** Joins: Dorkside (~dorkside@208.190.197.222)
[12:26:43] *** Quits: Dorkside (~dorkside@208.190.197.222) (Read error: Connection reset by peer)
[12:26:56] *** Joins: Dorkside (~dorkside@208.190.197.222)
[12:26:57] *** Quits: Dorkside (~dorkside@208.190.197.222) (Remote host closed the connection)
[12:27:10] *** Joins: Dorkside (~dorkside@208.190.197.222)
[12:27:11] *** Quits: Dorkside (~dorkside@208.190.197.222) (Remote host closed the connection)
[12:27:14] *** Joins: gabriel_sevecek (~gabriel@188-167-229-200.dynamic.chello.sk)
[12:27:25] *** Joins: Dorkside (~dorkside@208.190.197.222)
[12:27:26] *** Quits: Dorkside (~dorkside@208.190.197.222) (Remote host closed the connection)
[12:27:39] *** Joins: Dorkside (~dorkside@208.190.197.222)
[12:27:39] *** Quits: Dorkside (~dorkside@208.190.197.222) (Remote host closed the connection)
[12:27:53] *** Joins: Dorkside (~dorkside@208.190.197.222)
[12:27:54] *** Quits: Dorkside (~dorkside@208.190.197.222) (Remote host closed the connection)
[12:28:07] *** Joins: Dorkside (~dorkside@208.190.197.222)
[12:28:07] *** Quits: Dorkside (~dorkside@208.190.197.222) (Remote host closed the connection)
[12:28:21] *** Joins: Dorkside (~dorkside@208.190.197.222)
[12:28:21] *** Quits: Dorkside (~dorkside@208.190.197.222) (Remote host closed the connection)
[12:28:34] *** Joins: Dorkside (~dorkside@208.190.197.222)
[12:28:34] *** Quits: Dorkside (~dorkside@208.190.197.222) (Read error: Connection reset by peer)
[12:28:47] *** Joins: Dorkside (~dorkside@208.190.197.222)
[12:28:47] *** Quits: Dorkside (~dorkside@208.190.197.222) (Read error: Connection reset by peer)
[12:29:00] *** Joins: Dorkside (~dorkside@208.190.197.222)
[12:29:00] *** Quits: Dorkside (~dorkside@208.190.197.222) (Remote host closed the connection)
[12:29:13] *** Joins: Dorkside (~dorkside@208.190.197.222)
[12:29:13] *** Quits: Dorkside (~dorkside@208.190.197.222) (Read error: Connection reset by peer)
[12:29:27] *** Joins: Dorkside (~dorkside@208.190.197.222)
[12:29:28] *** Quits: Dorkside (~dorkside@208.190.197.222) (Remote host closed the connection)
[12:29:41] *** Joins: Dorkside (~dorkside@208.190.197.222)
[12:29:42] *** Quits: Dorkside (~dorkside@208.190.197.222) (Remote host closed the connection)
[12:29:55] *** Quits: deadmarshal_ (~deadmarsh@95.38.230.121) (Ping timeout: 260 seconds)
[12:29:56] *** Joins: Dorkside (~dorkside@208.190.197.222)
[12:29:57] *** Quits: Dorkside (~dorkside@208.190.197.222) (Read error: Connection reset by peer)
[12:30:11] *** Joins: Dorkside (~dorkside@208.190.197.222)
[12:30:12] *** Quits: Dorkside (~dorkside@208.190.197.222) (Read error: Connection reset by peer)
[12:30:26] *** Joins: Dorkside (~dorkside@208.190.197.222)
[12:30:27] *** Quits: Dorkside (~dorkside@208.190.197.222) (Read error: Connection reset by peer)
[12:30:41] *** Joins: Dorkside (~dorkside@208.190.197.222)
[12:30:41] *** Quits: Dorkside (~dorkside@208.190.197.222) (Read error: Connection reset by peer)
[12:30:54] *** Joins: Dorkside (~dorkside@208.190.197.222)
[12:30:55] *** Quits: Dorkside (~dorkside@208.190.197.222) (Remote host closed the connection)
[12:31:16] *** Joins: Dorkside (~dorkside@208.190.197.222)
[12:31:16] *** Quits: Dorkside (~dorkside@208.190.197.222) (Remote host closed the connection)
[12:31:29] *** Joins: Dorkside (~dorkside@208.190.197.222)
[12:31:29] *** Quits: Dorkside (~dorkside@208.190.197.222) (Remote host closed the connection)
[12:31:42] *** Joins: Dorkside (~dorkside@208.190.197.222)
[12:31:43] *** Quits: Dorkside (~dorkside@208.190.197.222) (Remote host closed the connection)
[12:31:56] *** Quits: eggplantade (~Eggplanta@108-201-191-115.lightspeed.sntcca.sbcglobal.net) (Remote host closed the connection)
[12:31:57] *** Joins: Dorkside (~dorkside@208.190.197.222)
[12:31:58] *** Quits: Dorkside (~dorkside@208.190.197.222) (Read error: Connection reset by peer)
[12:32:12] *** Joins: Dorkside (~dorkside@208.190.197.222)
[12:32:13] *** Quits: Dorkside (~dorkside@208.190.197.222) (Remote host closed the connection)
[12:32:26] *** Joins: Dorkside (~dorkside@208.190.197.222)
[12:32:27] *** Quits: Dorkside (~dorkside@208.190.197.222) (Remote host closed the connection)
[12:32:45] *** Joins: Dorkside (~dorkside@208.190.197.222)
[12:32:45] *** Quits: Dorkside (~dorkside@208.190.197.222) (Remote host closed the connection)
[12:33:00] *** Joins: Dorkside (~dorkside@208.190.197.222)
[12:33:01] *** Quits: Dorkside (~dorkside@208.190.197.222) (Remote host closed the connection)
[12:33:13] *** Joins: Dorkside (~dorkside@208.190.197.222)
[12:33:13] *** Quits: Dorkside (~dorkside@208.190.197.222) (Read error: Connection reset by peer)
[12:33:27] *** Joins: Dorkside (~dorkside@208.190.197.222)
[12:33:27] *** Quits: Dorkside (~dorkside@208.190.197.222) (Remote host closed the connection)
[12:33:39] *** Joins: Dorkside (~dorkside@208.190.197.222)
[12:33:39] *** Quits: Dorkside (~dorkside@208.190.197.222) (Remote host closed the connection)
[12:33:52] *** Joins: Dorkside (~dorkside@208.190.197.222)
[12:33:52] *** Quits: Dorkside (~dorkside@208.190.197.222) (Remote host closed the connection)
[12:34:06] *** Joins: Dorkside (~dorkside@208.190.197.222)
[12:34:06] *** Quits: Dorkside (~dorkside@208.190.197.222) (Read error: Connection reset by peer)
[12:34:19] *** Joins: Dorkside (~dorkside@208.190.197.222)
[12:34:19] *** Quits: Dorkside (~dorkside@208.190.197.222) (Remote host closed the connection)
[12:34:32] *** Joins: Dorkside (~dorkside@208.190.197.222)
[12:35:39] *** Joins: leah2 (~leah@vuxu.org)
[12:37:34] *** Quits: lavaman (~lavaman@c-174-63-118-52.hsd1.ma.comcast.net) (Remote host closed the connection)
[12:40:22] *** Joins: aliosablack (~chomwitt@2a02:587:dc18:da00:e2ec:eb52:4039:9bfe)
[12:42:31] <tomsmeding> periodic reminder that ghcup is great, just updated my haskell installation on a machine I haven't touched in a while, `ghcup tui` and we roll
[12:44:25] *** Quits: waleee (~waleee@2001:9b0:213:7200:cc36:a556:b1e8:b340) (Ping timeout: 256 seconds)
[12:45:15] *** Joins: waleee (~waleee@2001:9b0:213:7200:cc36:a556:b1e8:b340)
[12:49:54] *** Joins: merijn (~merijn@c-001-001-001.client.esciencecenter.eduvpn.nl)
[12:50:00] *** Joins: eggplantade (~Eggplanta@108-201-191-115.lightspeed.sntcca.sbcglobal.net)
[12:51:48] *** Quits: leah2 (~leah@vuxu.org) (Ping timeout: 240 seconds)
[12:54:59] *** Quits: Batzy (~quassel@user/batzy) (Quit: https://quassel-irc.org - Chat comfortably. Anywhere.)
[12:57:23] *** Joins: Batzy (~quassel@user/batzy)
[12:57:27] *** Quits: vglfr (~vglfr@46.96.151.207) (Ping timeout: 260 seconds)
[13:04:08] <energizer> if a,b are types then "either a or b" is another type. sometimes people say that's "addition", i guess because the cardinalities match up or something
[13:05:13] <energizer> but types are kinda like sets too, so isn't it more like "union"; and also types are supposedly like propositions so isn't it more like "or"
[13:05:25] *** Quits: waleee (~waleee@2001:9b0:213:7200:cc36:a556:b1e8:b340) (Ping timeout: 240 seconds)
[13:06:31] *** Joins: waleee (~waleee@2001:9b0:213:7200:cc36:a556:b1e8:b340)
[13:06:46] <energizer> so why is it + instead of âˆª or |
[13:06:48] <abastro[m]> Which is why ppl use the term `Tagged union` as well
[13:07:25] <abastro[m]> Btw iirc in boolean logic, OR was using notation `+`
[13:08:01] *** Joins: leah2 (~leah@vuxu.org)
[13:08:25] <energizer> can i take two types and add them together?
[13:09:29] <tomsmeding> energizer: what's "either Int or In"
[13:09:35] <tomsmeding> *Int
[13:09:41] <tomsmeding> That's Int + Int, not Int, right?
[13:09:41] <energizer> that's just Int
[13:09:50] <tomsmeding> Which is why it is the disjoint union, not the union
[13:10:08] <tomsmeding> Ah, if you say that's Int, then indeed you're talking about union, but then those are not sum types
[13:10:15] <energizer> + is disjoint union and | is regular union?
[13:10:27] <tomsmeding> Sum types do a disjoint union, also (in imperative programming land) a tagged union
[13:10:49] <tomsmeding> + in type theory is disjoint union, | in boolean logic is union :p
[13:11:07] <energizer> is there a plain union in type theory?
[13:11:14] <tomsmeding> Some languages, e.g. python and typescript, have actual union types
[13:11:41] <tomsmeding> Not the basic type theory I know, but I wouldn't be surprised if someone found an encoding for union in TT
[13:12:35] <tomsmeding> If union is \cup, then the cardinalities are weird though; #(a \cup b) is not really expressible in terms of #a and #b
[13:12:51] <tomsmeding> So the "algebraic" data types analogy doesn't hold for them
[13:14:01] <tomsmeding> (c.f. abastro[m]'s remark: in boolean logic, union (OR) is saturating addition: 1+1=1)
[13:14:36] *** Quits: waleee (~waleee@2001:9b0:213:7200:cc36:a556:b1e8:b340) (Ping timeout: 252 seconds)
[13:14:58] <energizer> isnt it just #a + #b - #(aâˆ©b)
[13:15:11] *** Quits: acidjnk (~acidjnk@pd9e0b763.dip0.t-ipconnect.de) (Ping timeout: 260 seconds)
[13:15:17] <abastro[m]> Yes, saturating addition
[13:15:20] *** Joins: waleee (~waleee@2001:9b0:213:7200:cc36:a556:b1e8:b340)
[13:17:02] <abastro[m]> Anyway notation usage of math is quite liberal
[13:17:09] *** Joins: yauhsien (~yauhsien@61-231-25-68.dynamic-ip.hinet.net)
[13:18:28] <tomsmeding> energizer: yes indeed, but #(a \cap b) is not a really simple operation
[13:19:10] <boxscape_> the main problem with union types AFAIK is that type inference is hard
[13:19:20] <boxscape_> ...as with all forms of subtyping
[13:19:25] <boxscape_> (okay maybe not literally all)
[13:19:37] <energizer> does that refer to global type inference?
[13:20:28] <boxscape_> I haven't actually heard the term "global type inference" before but I suspect if global and local type inference exist it's hard for both of them, I don't see a reason why they would be different here
[13:21:22] <energizer> iirc mypy only cares about one function at a time
[13:22:07] <energizer> tomsmeding: is #a + #b - #(aâˆ©b) somehow a representation of saturating addition?
[13:22:57] *** Quits: merijn (~merijn@c-001-001-001.client.esciencecenter.eduvpn.nl) (Ping timeout: 240 seconds)
[13:23:39] <abastro[m]> Apparently many ppl do not care much about type inference
[13:23:41] <tomsmeding> energizer: yes
[13:23:52] <tomsmeding> Thing is that saturating addition of integers is easy
[13:23:58] <abastro[m]> I've heard many ppl saying that it is better to be enforced to specify types
[13:24:02] <tomsmeding> But saturating addition of sets is... kinda weird
[13:24:10] <boxscape_> energizer judging by https://stackoverflow.com/questions/4304003/what-does-no-global-type-inference-mean-regarding-scala it does sound like local inference might be fine with subtyping, though I guess there probably isn't a single definition of "local" inference
[13:24:17] <tomsmeding> You can define it, and it works, but it's not super simple to work with
[13:24:52] <abastro[m]> Local inference is possible with subtyping but hard and also limited iirc
[13:25:02] <abastro[m]> Got bitten a lot by that
[13:25:06] <boxscape_> I see
[13:25:56] <tomsmeding> Also union types are, in some sense, not really compositional: where a * b and a + b are defined in terms of a and b, a \cup b is defined in terms of a, b _and_ a \cap b
[13:26:02] <abastro[m]> `((_.foo) compose (bar))` and type errors go broke
[13:26:26] <tomsmeding> And type theory is otherwise very compositional
[13:27:02] <boxscape_> tomsmeding doesn't that depend on how you define your primitives? As in, you could say union is primitive, and sum types are union + a \cap b
[13:27:41] <tomsmeding> Of course
[13:28:10] <tomsmeding> But disjoint union is very nice, and in fact not even primitive in TT: it's a sigma type over a boolean
[13:28:20] <boxscape_> hm that's fair
[13:28:53] <abastro[m]> But then more complex one is primitive
[13:29:01] <abastro[m]> Namely, sigma and pi
[13:29:04] <boxscape_> what is "complexity"
[13:29:26] <abastro[m]> Idk, more symbols
[13:29:35] <abastro[m]> You need to introduce a binding
[13:29:36] <tomsmeding> abastro[m]: more complex maybe, but also a very small set
[13:29:37] <boxscape_> though in any case that doesn't matter if you need sigma and pi anyway for other reasons
[13:29:48] <abastro[m]> Well yea
[13:30:33] *** Joins: merijn (~merijn@c-001-001-001.client.esciencecenter.eduvpn.nl)
[13:30:35] <boxscape_> your compiler will be less complex overall if you have fewer primitives
[13:31:27] *** Quits: waleee (~waleee@2001:9b0:213:7200:cc36:a556:b1e8:b340) (Ping timeout: 256 seconds)
[13:31:31] <abastro[m]> That was my illusion but type checking and inference of dependent languages told me otherwise
[13:31:47] <tomsmeding> Type theory is, in basis, math
[13:32:13] <tomsmeding> It's math chosen such that it has a nice correspondence with programming, but it's still math
[13:32:22] *** Joins: waleee (~waleee@2001:9b0:213:7200:cc36:a556:b1e8:b340)
[13:32:31] <boxscape_> abastro[m] yeah I was being unclear in that - I didn't mean if you have a smaller set of primitives, I meant if you have a strict subset of primitives
[13:32:43] <tomsmeding> Your compiler will be simpler if it only supports * and +, but then it wouldn't support dependently typed languages
[13:33:21] <tomsmeding> Your compiler will be simpler with fewer prinitives _assuming that you must implement a dependently typed language_
[13:33:39] <tomsmeding> Also what boxscape_ just said lol
[13:34:44] *** Quits: yushyin (NwWjaFh18p@mail.karif.server-speed.net) (Quit: WeeChat 3.4)
[13:34:44] *** Quits: noctuks (pS9vLLhgiV@user/noctux) (Quit: WeeChat 3.4)
[13:34:44] *** Quits: sviermsung (owJr4HCxlX@user/s4msung) (Quit: sviermsung)
[13:35:37] *** Joins: gurkenglas (~gurkengla@dslb-178-012-018-212.178.012.pools.vodafone-ip.de)
[13:37:05] *** Joins: noctuks (9wxBRvrIcP@user/noctux)
[13:37:06] *** Joins: s4msung (iMiZICJOVw@user/s4msung)
[13:37:07] *** Joins: yushyin (klVu03SvEu@mail.karif.server-speed.net)
[13:38:12] <energizer> found a paper that says untagged union is denoted \vee b
[13:38:21] <energizer> s/b//
[13:41:01] *** Joins: lavaman (~lavaman@c-174-63-118-52.hsd1.ma.comcast.net)
[13:41:05] *** Quits: lavaman (~lavaman@c-174-63-118-52.hsd1.ma.comcast.net) (Remote host closed the connection)
[13:41:09] <abastro[m]> Oh, I see
[13:41:32] <abastro[m]> Indeed strict subset is easier to implement
[13:41:35] *** Quits: yauhsien (~yauhsien@61-231-25-68.dynamic-ip.hinet.net) (Remote host closed the connection)
[13:42:26] *** Joins: yauhsien (~yauhsien@61-231-25-68.dynamic-ip.hinet.net)
[13:42:36] *** Quits: waleee (~waleee@2001:9b0:213:7200:cc36:a556:b1e8:b340) (Remote host closed the connection)
[13:43:01] *** Joins: waleee (~waleee@2001:9b0:213:7200:cc36:a556:b1e8:b340)
[13:45:16] <abastro[m]> I wonder how type theory survived in programming where set theory became dominant in math
[13:46:48] <Maxdamantus> Presumably by being computable.
[13:46:53] <Maxdamantus> Which is important for computers.
[13:46:53] <[exa]> +1 ^
[13:47:19] *** Quits: yauhsien (~yauhsien@61-231-25-68.dynamic-ip.hinet.net) (Ping timeout: 256 seconds)
[13:47:39] <Maxdamantus> "became dominant in math", it already was dominant.
[13:47:58] <Maxdamantus> type theory arose as an alternative solution to problems in type theory.
[13:48:19] *** Joins: yauhsien (~yauhsien@61-231-25-68.dynamic-ip.hinet.net)
[13:48:35] <Maxdamantus> the non-alternative solution was ZFC, which is still set theory.
[13:48:57] <tomsmeding> Disjoint union is also much more useful in programming than union I think: think of tree structures. Almost all of programming is dealing with tree structures, and trees are necessarily inductive disjoint unions, not set-theory unions
[13:49:14] <Maxdamantus> (in particular, problems raised by Bertrand Russell in the early 1900s. he was the one that started "type theory")
[13:49:33] <abastro[m]> <del>Type theory to solve problems in type theory</del>
[13:49:46] <Maxdamantus> er, meant to say "problems in set theory"
[13:50:01] <energizer> tomsmeding: ehh hammer/nail
[13:50:03] <abastro[m]> sorry..
[13:50:19] <abastro[m]> Sometimes I be that pedant
[13:51:15] <Maxdamantus> In programming, using "sets" is something extra. Related to what tomsmeding is saying, in programming you would normally go for an array/list as the computationally simple thing.
[13:51:37] <Maxdamantus> It's only in special cases that you actually want set behaviour, where you want your members to be deduplicated.
[13:52:36] <Maxdamantus> (naturally in Haskell, you can have a list of values of any type, but if you want a set, you need to demand a constraint, `Ord a`)
[13:52:51] *** Quits: eggplantade (~Eggplanta@108-201-191-115.lightspeed.sntcca.sbcglobal.net) (Remote host closed the connection)
[13:53:11] <energizer> what does it have to do with ordering?
[13:53:20] <boxscape_> technically Eq a is enough
[13:53:25] <boxscape_> but Ord a allows you to make it more efficient
[13:53:43] *** Joins: ProfSimm (~ProfSimm@87.227.196.109)
[13:54:05] <abastro[m]> So Russel was not great enough in his reputation to turn entire mathematics towards TT
[13:54:10] <boxscape_> (easier to search for duplicate values if you can make a binary search tree)
[13:54:11] <Maxdamantus> Sure, there could be different sorts of constraints, but you're always going to have an extra constraint that is not required for lists.
[13:54:47] <energizer> lists are in an order, which is odd
[13:54:52] <Maxdamantus> abastro[m]: well, I don't think Russell is the only one involved in the push for TT.
[13:55:07] <[exa]> why would entire mathematics need type theory?
[13:55:10] <abastro[m]> (Java has hashCode for every classes - hm)
[13:55:39] <[exa]> that would be just grossly impractical
[13:55:48] <abastro[m]> Precision
[13:55:54] <Maxdamantus> Because it's computable.
[13:56:01] <abastro[m]> That as well
[13:56:09] <tomsmeding> energizer: reminder that programming existed before type theory got any significant influence there :p
[13:56:14] <[exa]> good luck expressing basic calculus with that :D
[13:56:19] <Maxdamantus> You don't have to rely as much on people carefully reviewing proofs.
[13:56:29] <abastro[m]> (I think you could still deal with uncomputable objects in TT but anyway)
[13:56:51] <abastro[m]> Idk, basic calculus does not seem that hard to express
[13:56:56] *** Quits: waleee (~waleee@2001:9b0:213:7200:cc36:a556:b1e8:b340) (Ping timeout: 252 seconds)
[13:57:22] *** Joins: waleee (~waleee@2001:9b0:213:7200:cc36:a556:b1e8:b340)
[13:57:23] <abastro[m]> Possibly you could use concepts from manifolds
[13:57:23] <[exa]> abastro[m]: even the most basic theorems there require reaching to infinity and assuming whatever happens there
[13:57:28] <abastro[m]> Manifold analysis*
[13:57:30] <tomsmeding> I mean, the `union` keyword in C is a bloody disjoint union
[13:57:47] <tomsmeding> It just misses a tag to be a proper sum type
[13:58:13] <abastro[m]> Reaching to infinity? Im quite sure it is doable
[13:58:21] <energizer> forall (e : real), exists (d : real), forall x ... this isnt hard
[13:58:30] <Maxdamantus> tomsmeding: `union` in C would usually be considered a non-disjoint union.
[13:58:33] <abastro[m]> Ye
[13:58:36] <Maxdamantus> tomsmeding: since it doesn't include a tag.
[13:58:41] *** Quits: chenqisu1 (~chenqisu1@183.217.201.88) (Quit: Leaving)
[13:58:46] <abastro[m]> Problem is with topology, rather.
[13:59:00] <Maxdamantus> tomsmeding: `union { int a; int b; }` is not very useful.
[13:59:03] <[exa]> abastro[m]: what's the type of a real that is a product of 2 such limits?
[13:59:18] <[exa]> (-> can you then type reals?)
[13:59:24] <abastro[m]> You have "extended reals"
[13:59:31] <abastro[m]> Which includes infinity
[13:59:37] <tomsmeding> Hm, good point, I messed up there
[13:59:58] <abastro[m]> Instead compromises product and such
[14:00:43] <abastro[m]> IIRC quite huge parts of math is formalized in Coq and Lean
[14:00:45] <[exa]> abastro[m]: I expect you will find many surprising truths about the computability of real numbers
[14:01:32] <abastro[m]> I mean, you can either represent computable real numbers or deal with uncomputables
[14:01:41] <abastro[m]> Which is quite doable actually
[14:01:51] <abastro[m]> Just restrict evaluating the term
[14:02:04] *** Joins: DNH (~DNH@2a09:bac0:48::82b:7a48)
[14:03:29] <[exa]> that sounds much like "let's take rational numbers and pretend they are real"
[14:03:48] <joel135> does someone have a copy of "mendler 1987 recursive types and type constraints in second-order lambda calculus" ?
[14:04:43] <[exa]> joel135: you mean this? https://core.ac.uk/download/pdf/81989173.pdf
[14:04:44] <abastro[m]> Well you do know how real number is defined from quotients right?
[14:05:03] <abastro[m]> You can do that and sacrifice a bit of compitability
[14:05:16] <[exa]> wait what
[14:05:49] <boxscape_> you can define computable real numbers in terms of limits of rational numbers, i.e. Cauchy sequences
[14:05:55] <joel135> it is not the same article but maybe it will do :)
[14:06:01] <abastro[m]> Acrually I found this
[14:06:03] <abastro[m]> https://www.cs.umd.edu/~rrand/vqc/Real.html
[14:06:21] <abastro[m]> They found that cauchy seq is not good enough, so gone for axiomatic formulation
[14:07:02] <boxscape_> fair enough
[14:07:23] *** Joins: zer0bitz_ (~zer0bitz@dsl-hkibng32-54fbf8-224.dhcp.inet.fi)
[14:07:26] <abastro[m]> Yea I mean they could use cauchy seq ofc
[14:07:37] <abastro[m]> But it was slightly cumbersome they say
[14:07:49] <boxscape_> riht
[14:07:57] <boxscape_> s/h/gh/
[14:08:17] *** Quits: zer0bitz (~zer0bitz@dsl-hkibng32-54fbf8-224.dhcp.inet.fi) (Ping timeout: 240 seconds)
[14:08:30] <energizer> in the big theorem provers they use much more abstract math that has undergraduate-level material as a very very very special case
[14:08:33] <abastro[m]> Can I ask what is s/h/gh
[14:08:52] <energizer> it means substitute, in place of h, gh
[14:09:05] <abastro[m]> Oh, interesting
[14:09:07] <energizer> because boxscape_ did a typo
[14:09:19] <abastro[m]> I learned a new chat expression
[14:09:23] <energizer> it's the syntax from sed
[14:09:38] <boxscape_> fun fact discord even supports it
[14:09:45] <boxscape_> i.e. will actually edit your last message
[14:10:02] <joel135> you can try this in your terminal "echo foobar| sed 's/foo/chocolate /'"
[14:10:10] <abastro[m]> Oh wow
[14:10:44] <abastro[m]> I hope it's not regex
[14:11:06] <boxscape_> I haven't seen people use regex in IRC for that
[14:11:10] <boxscape_> but they sure do in sed
[14:11:20] <abastro[m]> Oh nooooooo
[14:11:42] <[exa]> luckily people here interpret regex flawlessly right? :D
[14:11:56] <boxscape_> of course
[14:12:03] <[exa]> abastro[m]: you're invited to try proving the bolzano-weierstrass theorem on that structure
[14:12:54] <abastro[m]> I don't think B-W would be hard even
[14:12:57] <joel135> see also http://www.paultaylor.eu/ASD/analysis
[14:13:20] *** Quits: Sgeo (~Sgeo@user/sgeo) (Read error: Connection reset by peer)
[14:14:12] <ProfSimm> dsal: thanks for the link. It's odd Haskell overlooked this problem when making their syntax
[14:14:36] <abastro[m]> Okay it does take some space in coq stdlib
[14:15:35] *** Joins: zer0bitz (~zer0bitz@dsl-hkibng32-54fbf8-224.dhcp.inet.fi)
[14:15:43] *** Joins: lavaman (~lavaman@c-174-63-118-52.hsd1.ma.comcast.net)
[14:16:43] <Maxdamantus> I usually treat my s/// lines as actual regex.
[14:17:00] <Maxdamantus> eg, I'll often use \< and \> as word delimeters.
[14:17:15] *** Quits: waleee (~waleee@2001:9b0:213:7200:cc36:a556:b1e8:b340) (Ping timeout: 260 seconds)
[14:17:58] <abastro[m]> https://github.com/coq/coq/blob/master/theories/Reals/Rtopology.v
[14:18:09] <Maxdamantus> $ grep 's/.*\(\\<\|\\>\)' ~/irclogs/Libera/#haskell.log 
[14:18:09] <Maxdamantus> 17:19 < Maxdamantus> s/\<their\>/they're/
[14:18:10] *** Joins: zer0bitz__ (~zer0bitz@dsl-hkibng32-54fbf8-224.dhcp.inet.fi)
[14:18:14] <Maxdamantus> Maybe I'm the only one.
[14:19:07] *** Quits: zer0bitz_ (~zer0bitz@dsl-hkibng32-54fbf8-224.dhcp.inet.fi) (Ping timeout: 260 seconds)
[14:19:16] <boxscape_> you even bother to escape the <>s
[14:19:44] <Maxdamantus> Of course, otherwise it would require a literal less than and greater than sign.
[14:20:16] <Maxdamantus> s/\<a //; s/\<sign\>/signs/
[14:20:30] *** Joins: _ht (~quassel@231-169-21-31.ftth.glasoperator.nl)
[14:20:40] <boxscape_> I usually set up my tools to make me escape literals when I want to search for them
[14:20:42] *** Joins: deadmarshal_ (~deadmarsh@95.38.230.121)
[14:20:58] <Maxdamantus> Wait, you mean in my grep command?
[14:21:16] <boxscape_> no
[14:21:33] <boxscape_> but I would just assume other people's brains are set up the way I set up my tools when convenient
[14:21:37] <boxscape_> to save myself some characters
[14:21:55] <Maxdamantus> `s/<a//` and `s/\<a//` mean something quite different in sed.
[14:21:55] *** Quits: zer0bitz (~zer0bitz@dsl-hkibng32-54fbf8-224.dhcp.inet.fi) (Ping timeout: 260 seconds)
[14:22:06] <Maxdamantus> \< is a leading word delimeter.
[14:22:10] <Maxdamantus> < is just a less than sign.
[14:22:28] <boxscape_> right I don't know that you can change it in sed but e.g. in vim I have it the other way around
[14:22:54] <Maxdamantus> Oh, so you've selected ereg or PCRE or something.
[14:23:16] <boxscape_> alas, there's no setting for it, it requires a plugin
[14:23:41] <Maxdamantus> Personally, I find it annoying that some tools (eg, `less`) use different syntaxes.
[14:23:58] <boxscape_> understandable
[14:24:26] <abastro[m]> Price to pay with composability
[14:25:14] <Maxdamantus> imo the breg syntax is more logical anyway.
[14:26:07] <abastro[m]> Hm I guess I am weird for not using these utilities
[14:26:43] <Maxdamantus> I've always suspected that if people prefer the symbols to be treated as special by default (ie, without requiring a backslash), it's just because they initially used regexes that did that, eg, ones in popular programming languages like JS.
[14:27:30] *** Quits: DNH (~DNH@2a09:bac0:48::82b:7a48) (Quit: My MacBook has gone to sleep. ZZZzzzâ€¦)
[14:27:41] <Maxdamantus> I would even like it if breg went further and made it so '.' matches a literal dot while '\.' matches any byte. similarly, '*' should match an asterisk.
[14:28:15] <Maxdamantus> but too late for that, and those are the only exceptions you need to remember afaict.
[14:28:51] <abastro[m]> Well I don't see difference of the characters by rendering
[14:29:10] <boxscape_> does matrix remove backslashes?
[14:29:24] <boxscape_> \. . <- this is two dots without a backslash?
[14:29:24] <Maxdamantus> Oh, there's also ^ $ []
[14:29:39] <Maxdamantus> 22:59:24 < boxscape_> \. . <- this is two dots without a backslash?
[14:29:50] <Maxdamantus> Oh, nvm. I'm not on Matrix.
[14:30:07] <Maxdamantus> (I thought you were wondering if your Matrix connection did something)
[14:30:23] <abastro[m]> Yes, matrix removes backslash
[14:30:28] <boxscape_> interesting
[14:30:46] <abastro[m]> Can't blame matrix, right
[14:33:35] *** Joins: dsrt^ (~dsrt@96-91-136-49-static.hfc.comcastbusiness.net)
[14:35:35] *** Quits: jpds (~jpds@gateway/tor-sasl/jpds) (Ping timeout: 240 seconds)
[14:38:00] *** Joins: jpds (~jpds@gateway/tor-sasl/jpds)
[14:39:42] <[exa]> is there some nice haskell library one could use for syntax highlighting? (i.e., it tells me some meta information about what each piece of a given source code string is, and has support for at least some languages so that I don't need to write the definitions myself)
[14:40:02] *** Joins: DNH (~DNH@8.43.122.72)
[14:42:50] *** bcoppens_ is now known as bcoppens
[14:43:59] <[exa]> whew, there's skylighting
[14:46:39] *** Joins: rustacean (~quassel@117.254.34.170)
[14:46:48] *** Quits: razetime (~quassel@117.254.34.170) (Ping timeout: 272 seconds)
[14:48:25] *** Quits: califax (~califax@user/califx) (Remote host closed the connection)
[14:49:28] *** Joins: califax (~califax@user/califx)
[14:51:06] *** Quits: dsrt^ (~dsrt@96-91-136-49-static.hfc.comcastbusiness.net) (Remote host closed the connection)
[14:51:31] *** Joins: dsrt^ (~dsrt@96-91-136-49-static.hfc.comcastbusiness.net)
[14:51:37] *** Quits: dsrt^ (~dsrt@96-91-136-49-static.hfc.comcastbusiness.net) (Remote host closed the connection)
[14:52:32] <Franciman> [exa]: there are also tree-sitter bindings
[14:53:26] *** Joins: eggplantade (~Eggplanta@108-201-191-115.lightspeed.sntcca.sbcglobal.net)
[14:56:36] *** Quits: merijn (~merijn@c-001-001-001.client.esciencecenter.eduvpn.nl) (Ping timeout: 240 seconds)
[14:57:51] *** Quits: eggplantade (~Eggplanta@108-201-191-115.lightspeed.sntcca.sbcglobal.net) (Ping timeout: 260 seconds)
[14:57:52] <sshine> [exa], I'd go with tree-sitter just because it seems like a great project.
[15:01:18] *** Quits: lavaman (~lavaman@c-174-63-118-52.hsd1.ma.comcast.net) (Ping timeout: 252 seconds)
[15:01:20] <[exa]> hm yeah that looks cool
[15:01:35] <[exa]> is it somehow easily accessible from hackage?
[15:02:35] <sshine> except for the tree-sitter package saying "We strongly recommend against depending on this library at this time", hmm... ;)
[15:02:47] <sshine> and hasn't been updated in two years.
[15:03:12] *** Joins: xkuru (~xkuru@user/xkuru)
[15:03:20] <sshine> it feels like a group of people had a hope two years ago, but abandoned it.
[15:03:45] <sshine> where/how do you plan to display syntax-highlighted code?
[15:04:52] <sshine> my guess is that most syntax-highlighting happens in javascript nowadays.
[15:04:55] <[exa]> I'm not really after syntax highlighting, just trying to get a decent set of code tokenizers for free
[15:05:00] <sshine> ah!
[15:05:16] <[exa]> (related to a problem that I was trying to solve here repeatedly several times already, haha)
[15:05:31] <sshine> ah, didn't catch the general problem.
[15:05:46] <[exa]> technically I'm just trying to cut the code (and possibly other stuff) into separate tokens and whitespace
[15:06:13] <sshine> is it a variable set of syntaxes you want to tokenize?
[15:06:32] <sshine> it's possible that writing your own crude tokenizers is cheap if you don't need the syntax trees.
[15:07:31] *** Joins: gehmehgeh (~user@user/gehmehgeh)
[15:08:26] <sshine> I like the approach of tree-sitter because it tries to solve a problem across languages and provide FFI, so there's one place to put a parser, rather than to write a parser in each language for each language.
[15:08:48] <sshine> I'm surprised the tree-sitter package isn't in use.
[15:09:05] <sshine> it might be, and the warning is just a scare tactic. ;)
[15:09:13] <abastro[m]> Wouldn't writing own tokenizer be quite a burden
[15:09:31] <[exa]> the higher-level goal is that I have a nice diff&patch&diff3 tool here that is able to reasonably merge diffs with messed up whitespace and tokenization (think an effortless git merge of source formatted by hindent into source formatted by ormolu), and I'm struggling to get a generic way of parsing many interesting text formats easily (ranging from .txt to markdown, latex, CSVs all the way to normal 
[15:09:37] <[exa]> programming)
[15:09:54] <sshine> also, eh, the tree-sitter package is littered with 'Ptr' types... seems very shallowly embedded.
[15:11:03] <[exa]> I was trying to come up with some kinda user-specifiable regex tokenizer but it's not as easy as one would expect, notably given the opinions hardcoded in current regex libraries
[15:11:52] <sshine> so... a whitespace remover that doesn't break programs for arbitrary syntaxes?
[15:11:56] <[exa]> then I thought it would be nice to have a runtime lexer library, literally flex that you can load directly into haskell
[15:12:16] <[exa]> and today I woke up remembering about them syntax highlighters
[15:12:56] <[exa]> unfortunately apparently this is okay for syntax highlighters: tokenize ... "int a = 5;"  ==> [[(DataTypeTok,"int"),(NormalTok," a "),(OperatorTok,"="), ...]
[15:13:04] <sshine> so... I played around a lot with syntax highlighting in gedit and vim many years ago, and I remember that most syntax-highlighting libraries do things with regex and simple state machines, not lexing.
[15:13:08] <[exa]> so yeah the search continues!
[15:15:25] <[exa]> I mostly wanted to avoid problems from e.g. not recognizing the spaces in strings as actual content, and recognizing "actually required" spacing like the haskell "function application space"
[15:17:16] <[exa]> like, I guess most people would probably do with a simple C-like tokenizer, but that's a highly simplifying assumption (similar to the assumption of current difftools, "code is just lines")
[15:18:04] <[exa]> actually would it be possible to use vim as a library for this?
[15:21:43] <[exa]> tree-sitter has no distinction for whitespace either I see :(
[15:22:06] <sshine> sounds like it wouldn't be able to construct syntax tree for whitespace-sensitive languages then...
[15:22:36] *** Quits: gurkenglas (~gurkengla@dslb-178-012-018-212.178.012.pools.vodafone-ip.de) (Ping timeout: 240 seconds)
[15:22:54] <[exa]> it does (it can do python) but the whitespace is marked very implicitly
[15:23:23] <[exa]> "1 + 2" seems to parse into: operator expression "1 + 2" that contains left operand "1" and right operand "2"
[15:24:07] <sshine> ah, and you want whitespace tokens.
[15:24:13] <[exa]> the " + " in the middle can be kinda deduced but man, is the whitespace significant?
[15:24:22] <[exa]> (is it even whitespace there?)
[15:24:38] <[exa]> ok nvm as I said, The Search Continues! :]
[15:25:56] <sshine> any interest in adding a reference to #haskell-beginners in #haskell's topic again? it was removed some years ago because the channel's topic was consistently used for advertising for a particular book, I believe. but it isn't any more.
[15:28:40] *** Joins: lavaman (~lavaman@c-174-63-118-52.hsd1.ma.comcast.net)
[15:29:09] <abastro[m]> Used for advertising??
[15:30:32] *** Joins: eotdlt^ (~eotdlt@96-91-136-49-static.hfc.comcastbusiness.net)
[15:30:48] <[exa]> sshine: I thought it is here mainly as a spillover for "ok let's move this to -beginners" for longer conversations here
[15:30:56] <sshine> so on freenode, I think #haskell-beginners was registered by bitemyapp, and he put a link to buy his book in the topic. I remember the day when the reference to the channel was removed because it seemed partisan, or something.
[15:31:33] <sshine> [exa], it is here for whatever :) I see some pretty advanced stuff going on in #haskell-beginners, since it's mostly a self-assessment thing whether you're a beginner.
[15:32:09] <sshine> [exa], but I think the one thing that the channel does is let people ask how to get the nth element of a list, because the name implies all questions are allowed.
[15:32:44] <sshine> [exa], nobody would frown at such questions here, but psychology, meh. :)
[15:32:54] <[exa]> yeah
[15:33:07] <[exa]> like, there's still plenty of space in the topic right?
[15:33:08] <sshine> the reference used to be there
[15:36:22] *** Joins: AlexZenon (~alzenon@94.233.240.35)
[15:38:03] *** Quits: AlexZenon_2 (~alzenon@94.233.240.35) (Ping timeout: 256 seconds)
[15:38:42] *** Joins: acidjnk (~acidjnk@p200300d0c7049f825551b1368b4030e6.dip0.t-ipconnect.de)
[15:43:09] *** Quits: benin (~benin@183.82.24.110) (Quit: The Lounge - https://thelounge.chat)
[15:52:02] *** Quits: econo (uid147250@user/econo) (Quit: Connection closed for inactivity)
[15:54:03] *** Quits: ProfSimm (~ProfSimm@87.227.196.109) (Remote host closed the connection)
[15:55:19] *** Joins: gurkenglas (~gurkengla@dslb-178-012-018-212.178.012.pools.vodafone-ip.de)
[16:00:12] <abastro[m]> Sometimes `!! n` is useful tho
[16:06:27] *** Quits: lavaman (~lavaman@c-174-63-118-52.hsd1.ma.comcast.net) (Ping timeout: 260 seconds)
[16:09:00] <sm> a good article on [Infinite] Category Theory: https://news.ycombinator.com/item?id=30809385
[16:10:50] *** Quits: DNH (~DNH@8.43.122.72) (Quit: My MacBook has gone to sleep. ZZZzzzâ€¦)
[16:12:35] *** Quits: bitdex (~bitdex@gateway/tor-sasl/bitdex) (Ping timeout: 240 seconds)
[16:12:48] *** Quits: gurkenglas (~gurkengla@dslb-178-012-018-212.178.012.pools.vodafone-ip.de) (Ping timeout: 252 seconds)
[16:13:13] <sm> AFAIK #haskell-beginners never managed to separate itself from #haskell - there was no real difference in content - so it just created fragmentation. The concept seems good but I think to succeed it would need a clear scope different from #haskell's and some strong leadership/curation.
[16:13:49] <sm> (I haven't been hanging out there, so if things have changed let us know)
[16:14:30] *** Quits: acidjnk (~acidjnk@p200300d0c7049f825551b1368b4030e6.dip0.t-ipconnect.de) (Ping timeout: 260 seconds)
[16:15:17] *** Joins: ProfSimm (~ProfSimm@87.227.196.109)
[16:15:36] *** Joins: bitdex (~bitdex@gateway/tor-sasl/bitdex)
[16:16:23] <DigitalKiwi> that's the great part about #haskell is you never know if it's a beginner or advanced phd thesis level question you're going to get sniped by
[16:17:06] *** AlexNoo__ is now known as AlexNoo
[16:17:18] <hpc> yeah, i like having everything in one place
[16:17:30] <hpc> you're getting the whole community that way too
[16:17:56] <DigitalKiwi> and then you never have to be like "is this a beginner question or not"
[16:18:10] <DigitalKiwi> and you don't have to move lol
[16:18:23] <hpc> and more people answer questions
[16:18:42] <hpc> sometimes the best answers come from the people who don't normally answer "beginner questions"
[16:19:03] <hpc> because the question might accidentally touch on some really neat more advanced concept
[16:19:35] <sm> I often wished for a channel more... focussed on my needs as a haskell learner/new practitioner. Trouble is there's a wide variety of haskellers and typs of "beginner" 
[16:19:59] <DigitalKiwi> and a lot of times something's out of left field or something like the answerer might have some knowledge about the topic but be beginner in haskell
[16:20:50] <sm> is someone wanting to chat about category theory a beginner ? in a sense, yes
[16:22:02] <DigitalKiwi> sm: you have to make #haskell the channel you want! what i mean is you have to ask questions. learning by osmosis isn't so good here. i've tried lol. i think that's probably partly because of the wide variety of topics that everyone asks. if you try to learn from their questions you will get lost
[16:22:45] <sm> maybe several beginner channels could work 
[16:22:58] <sm> but, that requires organisation
[16:24:02] <sm> and really it would require chasing beginners out of here, which won't happen
[16:24:25] <DigitalKiwi> don't the scary phd questions do that enough ;D
[16:25:17] <sm> apparently not :)
[16:27:18] * sm thinks a better next step would be a clearer overview/roadmap to existing channels
[16:27:51] *** Joins: zer0bitz (~zer0bitz@dsl-hkibng32-54fbf8-224.dhcp.inet.fi)
[16:28:44] <sm> that would help folks wanting a more focussed chat find the right place
[16:30:41] *** Quits: zer0bitz__ (~zer0bitz@dsl-hkibng32-54fbf8-224.dhcp.inet.fi) (Ping timeout: 272 seconds)
[16:32:10] <sm> in matrix, the #haskell-space:matrix.org helps. In IRC I expect there's a wiki page, but out of date
[16:40:38] <sm> some current matrix "members" counts, for what they're worth: #haskell:libera.chat 2487, #haskell:matrix.org 1791, #haskell-space:matrix.org 255
[16:45:02] *** Quits: bitdex (~bitdex@gateway/tor-sasl/bitdex) (Remote host closed the connection)
[16:46:04] *** Joins: bitdex (~bitdex@gateway/tor-sasl/bitdex)
[16:53:37] *** Quits: zer0bitz (~zer0bitz@dsl-hkibng32-54fbf8-224.dhcp.inet.fi) (Ping timeout: 240 seconds)
[16:53:58] *** Joins: merijn (~merijn@c-001-001-001.client.esciencecenter.eduvpn.nl)
[16:54:15] *** rustacean is now known as razetime
[16:55:07] *** Quits: razetime (~quassel@117.254.34.170) (Quit: https://quassel-irc.org - Chat comfortably. Anywhere.)
[16:55:22] *** Joins: razetime (~quassel@117.254.34.170)
[16:56:30] *** Joins: zer0bitz (~zer0bitz@dsl-hkibng32-54fbf8-224.dhcp.inet.fi)
[17:00:08] *** Joins: zer0bitz_ (~zer0bitz@dsl-hkibng32-54fbf8-224.dhcp.inet.fi)
[17:02:55] *** Quits: zer0bitz (~zer0bitz@dsl-hkibng32-54fbf8-224.dhcp.inet.fi) (Ping timeout: 260 seconds)
[17:03:01] *** Joins: zer0bitz__ (~zer0bitz@dsl-hkibng32-54fbf8-224.dhcp.inet.fi)
[17:04:11] *** Quits: Digit (~user@user/digit) (Ping timeout: 256 seconds)
[17:06:46] *** Quits: zer0bitz_ (~zer0bitz@dsl-hkibng32-54fbf8-224.dhcp.inet.fi) (Ping timeout: 272 seconds)
[17:06:48] *** Quits: geekosaur (~geekosaur@xmonad/geekosaur) (Remote host closed the connection)
[17:07:10] *** Quits: yauhsien (~yauhsien@61-231-25-68.dynamic-ip.hinet.net) (Remote host closed the connection)
[17:07:42] *** Joins: yauhsien (~yauhsien@61-231-25-68.dynamic-ip.hinet.net)
[17:08:39] *** Joins: geekosaur (~geekosaur@xmonad/geekosaur)
[17:10:04] *** Quits: cdman (~dcm@user/dmc/x-4369397) (Quit: Leaving)
[17:12:27] *** Quits: yauhsien (~yauhsien@61-231-25-68.dynamic-ip.hinet.net) (Ping timeout: 256 seconds)
[17:19:59] *** Quits: razetime (~quassel@117.254.34.170) (Read error: Connection reset by peer)
[17:20:33] *** Joins: zer0bitz (~zer0bitz@dsl-hkibng32-54fbf8-224.dhcp.inet.fi)
[17:22:16] *** Joins: Digit (~user@user/digit)
[17:22:36] *** Quits: zer0bitz__ (~zer0bitz@dsl-hkibng32-54fbf8-224.dhcp.inet.fi) (Ping timeout: 272 seconds)
[17:22:38] *** Joins: CiaoSen (~Jura@p200300c95735b0002a3a4dfffe84dbd5.dip0.t-ipconnect.de)
[17:22:39] *** Quits: joo-_ (~joo-_@fsf/member/joo--) (Ping timeout: 252 seconds)
[17:23:23] *** Joins: CATS (apic@brezn3.muc.ccc.de)
[17:24:25] *** Joins: joo-_ (~joo-_@87-49-146-72-mobile.dk.customer.tdc.net)
[17:24:25] *** Quits: joo-_ (~joo-_@87-49-146-72-mobile.dk.customer.tdc.net) (Changing host)
[17:24:25] *** Joins: joo-_ (~joo-_@fsf/member/joo--)
[17:28:09] *** Quits: merijn (~merijn@c-001-001-001.client.esciencecenter.eduvpn.nl) (Ping timeout: 252 seconds)
[17:35:55] *** Joins: razetime (~quassel@117.254.34.170)
[17:39:48] *** Joins: jonathanx (~jonathan@h-178-174-176-109.A357.priv.bahnhof.se)
[17:41:26] *** Joins: lavaman (~lavaman@c-174-63-118-52.hsd1.ma.comcast.net)
[17:43:22] *** Joins: bahamas (~lucian@84.232.140.158)
[17:46:10] *** Quits: Everything (~Everythin@37.115.210.35) (Quit: leaving)
[17:49:00] *** Quits: joo-_ (~joo-_@fsf/member/joo--) (Ping timeout: 240 seconds)
[17:50:56] *** Joins: joo-_ (~joo-_@87-49-146-56-mobile.dk.customer.tdc.net)
[17:50:56] *** Quits: joo-_ (~joo-_@87-49-146-56-mobile.dk.customer.tdc.net) (Changing host)
[17:50:56] *** Joins: joo-_ (~joo-_@fsf/member/joo--)
[17:51:46] *** Quits: hololeap (~hololeap@user/hololeap) (Remote host closed the connection)
[17:53:14] *** Joins: hololeap (~hololeap@user/hololeap)
[18:04:22] *** Joins: zer0bitz_ (~zer0bitz@dsl-hkibng32-54fbf8-224.dhcp.inet.fi)
[18:05:55] *** Quits: zer0bitz (~zer0bitz@dsl-hkibng32-54fbf8-224.dhcp.inet.fi) (Ping timeout: 260 seconds)
[18:13:08] *** Joins: cdman (~dcm@user/dmc/x-4369397)
[18:24:47] *** Joins: DNH (~DNH@8.43.122.72)
[18:31:06] *** Joins: mikoto-chan (~mikoto-ch@213.177.151.239)
[18:41:05] *** Quits: bahamas (~lucian@84.232.140.158) (Ping timeout: 256 seconds)
[18:46:03] *** Joins: [itchyjunk] (~itchyjunk@user/itchyjunk/x-7353470)
[18:46:14] *** Quits: CiaoSen (~Jura@p200300c95735b0002a3a4dfffe84dbd5.dip0.t-ipconnect.de) (Ping timeout: 252 seconds)
[18:48:57] *** Joins: justsomeguy (~justsomeg@user/justsomeguy)
[18:53:50] *** Joins: gurkenglas (~gurkengla@dslb-178-012-018-212.178.012.pools.vodafone-ip.de)
[19:08:43] <janus> sm: i think lower volume channels like #haskell-in-depth may be better for beginners, since you'd only get one answer
[19:09:33] <[exa]> b...b...but
[19:09:38] <[exa]> answer polymorphism!
[19:17:49] <abastro[m]> Ad-hoc polymorphic answers?
[19:20:34] *** Joins: bahamas (~lucian@84.232.140.158)
[19:23:25] *** Quits: DNH (~DNH@8.43.122.72) (Ping timeout: 240 seconds)
[19:24:17] *** Joins: merijn (~merijn@c-001-001-001.client.esciencecenter.eduvpn.nl)
[19:27:00] *** Quits: bahamas (~lucian@84.232.140.158) (Ping timeout: 240 seconds)
[19:34:57] *** Joins: AlexZenon_2 (~alzenon@94.233.240.35)
[19:36:37] *** Quits: AlexZenon (~alzenon@94.233.240.35) (Ping timeout: 256 seconds)
[19:40:15] *** Quits: DigitalKiwi (~kiwi@2604:a880:400:d0::12fc:5001) (Quit: quite.)
[19:42:55] <dsal> ProfSimm: it's odd that you think it was overlooked and not a conscious decision.
[19:43:39] *** Quits: cdman (~dcm@user/dmc/x-4369397) (Quit: Leaving)
[19:48:18] *** Quits: img (~img@user/img) (Quit: ZNC 1.8.2 - https://znc.in)
[19:50:28] <ProfSimm> dsal: I'm writing a language which has very similar application chain to haskell's, so I have the same problem with unary minus
[19:50:41] <ProfSimm> dsal: and frankly it's making me rethink my entire life.
[19:50:54] <ProfSimm> dsal: but that's just me being perfectionist.
[19:50:59] <geekosaur> unary minus has always been a problem
[19:51:09] <ProfSimm> dsal: but this is why I wonder about Haskell
[19:51:17] <geekosaur> different languages have different solutions, and they all have weird pain points
[19:51:19] <abastro[m]> Whh
[19:51:33] <dsal> It depends on what you consider perfect.  Special cases are blemishes.
[19:51:48] <ProfSimm> geekosaur: unary minus is not a problem when you have no application chain like Haskell I think.
[19:51:49] <geekosaur> makes me wish everyone had gone with the solutionof just choosing a different operator character (at least one uses ~ instead of -)
[19:51:57] <ProfSimm> geekosaur: for example in most language you need () around params, so
[19:52:02] <ProfSimm> foo (-5) is not an issue
[19:52:14] <ProfSimm> In haskell though foo -5 vs foo - 5 is a problem
[19:52:42] <geekosaur> it makesit more obvious, but there are still weird corner cases, they're just less common in many languages
[19:52:43] <ProfSimm> geekosaur: math notation sucks
[19:52:47] *** Joins: img (~img@user/img)
[19:53:25] <ProfSimm> dsal: I'm thinking of maybe only allowing bare identifiers outside parens in the chain
[19:53:38] <dsal> Adding lots of punctuation all the time just so you don't have to add punctuation that one rare time doesn't seem like a good trade-off.
[19:53:44] <ProfSimm> dsal: so you need to write: foo bar (12) baz ("text") something somethin qux
[19:54:17] <ProfSimm> dsal: well
[19:55:14] <ProfSimm> dsal: I implemented the 'no space' trick from the plugin you linked me to, try this (no quotes): foo - 5, foo -5  here: https://www.coltram.com/proto/
[19:55:21] <ProfSimm> dsal: it seems too subtle doesn't it
[19:56:35] <ProfSimm> dsal: I can also cover the case of foo-5 being binary minus (currently parsed as unary)
[19:56:44] <ProfSimm> But I don't like 'blemishes'
[19:57:05] <dsal> I've never used it because it's never mattered to me.  I don't have enough negative literals in my code to justify such a special case.
[19:57:21] <ProfSimm> dsal curious
[19:57:40] <dsal> I'm a somewhat positive person.
[19:57:42] <ProfSimm> dsal: you don't recall sometimes writing "something -1" and then cursing why it doesn't work like you expected?
[19:57:51] *** Joins: eggplantade (~Eggplanta@108-201-191-115.lightspeed.sntcca.sbcglobal.net)
[19:58:19] <dsal> Sure.  Part of every day I write code the compiler tells me something stupid I did.
[19:58:31] <hpc> i am more of the "i don't care if it works, don't write 'something -1'" kind of person
[19:58:59] <ProfSimm> hpc: I'm curious why. Isn't it a pretty common think to pass a number to a function
[19:59:02] *** Quits: merijn (~merijn@c-001-001-001.client.esciencecenter.eduvpn.nl) (Ping timeout: 272 seconds)
[19:59:04] <ProfSimm> thing*
[19:59:20] <ProfSimm> hpc: how do you write it
[20:00:36] <hpc> with parens, or i try to dodge the use of negative literals
[20:00:56] *** Joins: eddiemundo (~eddiemund@2001:470:69fc:105::a80)
[20:01:05] <hpc> this isn't a problem unique to haskell, haskell is just one of the few languages that doesn't try to guess what you mean
[20:01:10] <ProfSimm> hpc: it makes it sound like it's consciously on your mind to avoid the situation
[20:01:17] *** Quits: justsomeguy (~justsomeg@user/justsomeguy) (Quit: WeeChat 3.4)
[20:01:18] <hpc> C also has this issue with *
[20:01:27] <hpc> C++ has this issue with all sorts of operators
[20:01:32] <hpc> it's a pretty common thing
[20:01:34] <ProfSimm> hpc: oh what's the issue with C
[20:01:48] <hpc> are you multiplying, or are you dereferencing
[20:02:10] <hpc> the ambiguity happens when you're also doing a type cast at the same time
[20:02:15] <hpc> (abc) *def
[20:02:32] <ProfSimm> hpc: I was thinking about introducing the concept of left/right "bias" on the operator, depending on surrounding whitespace:   foo-5 (no bias)  foo - 5 (no bias)   foo- 5 (left bias)  foo -5 (right bias), and using the bias to resolve conflicts. What do you think?
[20:02:35] *** Quits: eggplantade (~Eggplanta@108-201-191-115.lightspeed.sntcca.sbcglobal.net) (Ping timeout: 260 seconds)
[20:03:24] <ProfSimm> hpc: it plays with whitespace which feels dangerous, but it's very intuitive to a human being
[20:03:29] <hpc> it's reasonable, i think
[20:03:42] <hpc> or for extra fun, what if you always needed spaces
[20:03:53] <hpc> foo-5 isn't subtraction, it's a single name
[20:04:12] <ProfSimm> hpc: I've considered it, especially since I wanted dash in names. But I suspect it'll be annoying to people
[20:04:12] <hpc> now you can be like powershell :P
[20:05:20] <ProfSimm> hpc: my decision against it was consistency. I require space around - and +, fine, but what about / and * ? What about exponentiation ^? And finally, what about operators like comma, semicolon, colon and so on
[20:05:41] <abastro[m]> `let n = -1 in f n`
[20:05:43] <ProfSimm> hpc: if there'll be rule I prefer it be one rule for all operators
[20:06:53] <ProfSimm> hpc: interestingly, whitespace "bias" would resolve the C example you gave me:   foo* bar  vs  foo *bar
[20:07:05] <ProfSimm> hpc: thanks for the feedback I might actually do it
[20:07:13] *** Quits: zyklotomic (~ethan@r4-128-61-94-5.res.gatech.edu) (Ping timeout: 256 seconds)
[20:07:43] <abastro[m]> I wonder what happens in C if you do `i---j`
[20:07:44] <geekosaur> whitespace bias is already a thing in ghc9.x
[20:08:03] <ProfSimm> geekosaur: oh is it. Where can I read about it/
[20:08:13] <geekosaur> C uses LTM so it should be i-- - j
[20:08:39] <abastro[m]> Confuusssing
[20:08:58] <ProfSimm> My parser would resolve this to subtract(i, neg(neg(j)))
[20:09:06] *** Joins: zyklotomic (~ethan@res380d-128-61-83-1.res.gatech.edu)
[20:09:15] <geekosaur> GHC is now more sensitive to whitespace between infix operators and their arguments, requiring it in some cases where it was not previously necessary as the result of the whitespace-sensitive operator parsing proposal. It also affects the usage of !,``~`` and @ as BangPatterns, irrefutable patterns and type applications respectively. This means that expressions that were parsed as visible type applications in previous versions when the @ was 
[20:09:15] <geekosaur> surrounded by whitespace will now be parsed as an operator application. For more details see the migration guide on the wiki.
[20:09:22] <geekosaur> per the release notes
[20:09:45] <geekosaur> this subsumes a bunch of ad hoc rules used by various other extensions
[20:10:04] <ProfSimm> geekosaur: niccccee, this kinda supports me going in this direction myself
[20:10:26] *** Joins: bahamas (~lucian@84.232.140.158)
[20:12:01] *** Joins: eggplantade (~Eggplanta@108-201-191-115.lightspeed.sntcca.sbcglobal.net)
[20:12:25] *** Joins: rawley (~rawley@216-197-141-102.nbfr.hsdb.sasknet.sk.ca)
[20:14:42] <ProfSimm> Long live significant whitespace i guess
[20:16:03] *** Quits: eldritch (~eldritch@user/eldritch) (Quit: bye)
[20:16:03] *** Quits: glider (~glider@user/glider) (Quit: ZNC - https://znc.in)
[20:16:03] *** Quits: anderson (~ande@user/anderson) (Quit: bye)
[20:17:25] *** Joins: alp (~alp@user/alp)
[20:19:52] <maerwald> yeah, I love it when a whitespaces changes the meaning of my program :D
[20:20:10] <maerwald> it's the dark matter of programming
[20:20:34] *** Joins: lagash (lagash@lagash.shelltalk.net)
[20:20:57] *** Quits: tromp (~textual@dhcp-077-249-230-040.chello.nl) (Ping timeout: 240 seconds)
[20:21:25] *** Quits: gehmehgeh (~user@user/gehmehgeh) (Quit: Leaving)
[20:25:55] *** Quits: boxscape_ (~boxscape_@p4ff0b60b.dip0.t-ipconnect.de) (Ping timeout: 260 seconds)
[20:26:24] *** Joins: anderson (~ande@user/anderson)
[20:26:46] <ProfSimm> maerwald: butletsfaceiteverylanguagereliesonwhitespaceinsomeway
[20:27:40] <dsal> This is not a perl channel.
[20:28:23] <hpc> hey, even perl has acme::bleach
[20:28:34] <geekosaur> that's an empty program in Whitespace }:>
[20:28:42] <dsal> haha.  all comments
[20:29:06] <dsal> The best thing about programming is that any statement about programming is false.
[20:30:22] <ProfSimm> dsal: why
[20:30:30] <ProfSimm> dsal: all my statements are true :P
[20:31:15] <dsal> My language only supports unary logic.
[20:31:30] *** Joins: eldritch_ (~eldritch@user/eldritch)
[20:31:53] <ProfSimm> dsal: in my language every single value can be true or false independently of its contents
[20:32:10] <ProfSimm> you can have true 0 false 0, true "true", false "true" and so on
[20:32:21] <ProfSimm> lots of fun
[20:32:48] <geekosaur> snobol
[20:33:00] <geekosaur> where it's success/failure instead of true/false
[20:33:07] *** Joins: glider (~glider@user/glider)
[20:33:43] <ProfSimm> geekosaur: oh it does that what i described?
[20:34:20] <dsal> But for the most part, when someone says "programming languages do X", there's a counterexample of a programming language that does not do X.
[20:34:59] <dsal> I like languages that go all-in on boolean blindness by making it so that you can treat everything as a boolean.
[20:35:38] <ProfSimm> dsal: that;s what I did, but maybe not as typically done
[20:35:51] <ProfSimm> dsal: everything is a boolean.
[20:36:13] <ProfSimm> dsal: but it's more of a replacement for returning result or throwing exception.
[20:36:18] <ProfSimm> It calls one of two continuations
[20:36:22] <ProfSimm> then or else
[20:38:05] <dsal> So, Either?
[20:38:13] *** Joins: waleee (~waleee@2001:9b0:213:7200:cc36:a556:b1e8:b340)
[20:38:49] <ProfSimm> dsal: in a way yes, but the integration with the syntax and every value makes it take on a different flavor
[20:38:55] <dsal> Either is much less of a problem for boolean blindness
[20:38:57] <monochrom> Haha that reminds me. Robert Harper critiqued boolean blindness, right? And then in his textbook, he went on to explain parametricity in System F by adding only one type: boolean. >:)
[20:39:23] <ProfSimm> dsal: for example this is if/then/else and ternary, no need for dedicated operators:     if & then | else
[20:39:49] <ProfSimm> dsal: this is also chaining actions and handling errors:      do1 & do2 & do3 & do4 | handleError
[20:40:21] <ProfSimm> dsal: basicaly an entire method is a single expression, like Haskell, but booleans do the flow control
[20:41:02] <ProfSimm> It gets very interesting honestly
[20:41:17] <ProfSimm> I like when things fit together and 5 things end up being 1 thing
[20:41:21] <ProfSimm> simplification
[20:44:00] *** Quits: mon_aaraj (~MonAaraj@user/mon-aaraj/x-4416475) (Ping timeout: 272 seconds)
[20:44:24] <ProfSimm> I think having booleans as distinct values may be an error
[20:44:54] <ProfSimm> in machine code you almost never use such values. Sometimes you "jump if zero" or "not zero"
[20:45:04] <ProfSimm> But way more often you directly jump from a comparison operation etc.
[20:45:07] <ProfSimm> No boolean values
[20:45:26] *** Joins: mon_aaraj (~MonAaraj@user/mon-aaraj/x-4416475)
[20:46:28] *** Joins: `2jt (~jtomas@210.red-88-24-179.staticip.rima-tde.net)
[20:46:32] <ProfSimm> if (x > 0 && x < 10) print("x in range"); else print("x not in range");   ---->    x > 0 & x < 10 & print("x in range") | print ("x not in range")
[20:46:47] <geekosaur> looks like bash scripting
[20:46:54] <ProfSimm> Probably
[20:47:17] <geekosaur> [ x > 0 && x < 10] && echo x in range || echo x not in range
[20:47:36] <ProfSimm> geekosaur: yeah. In Lua they also use && and || as ternary
[20:48:00] <ProfSimm> geekosaur: there's a gotcha though, if "echo x in range" returns falsy value, your "else" will run
[20:48:09] <geekosaur> that's not ternary, it's just how && and || associate
[20:48:14] <ProfSimm> geekosaur: in my case there's no such danger because all values are true by default
[20:48:47] *** Quits: waleee (~waleee@2001:9b0:213:7200:cc36:a556:b1e8:b340) (Ping timeout: 250 seconds)
[20:48:50] <ProfSimm> geekosaur: I knot it's not ternary, but my point is it's used as such
[20:49:03] <ProfSimm> geekosaur: but consider:      1 && 0 || 2
[20:49:14] <ProfSimm> Here you may hope to see 0 as a result, but you'll see 2
[20:49:41] *** Joins: waleee (~waleee@2001:9b0:213:7200:cc36:a556:b1e8:b340)
[20:49:43] <ProfSimm> In my lang, 1 & 0 | 2 will produce 0
[20:49:49] <ProfSimm> Because 0 is not "falsey"
[20:50:09] <ProfSimm> You have to explicitly write  "x != 0" 
[20:51:11] <ProfSimm> You can turn any value at all into false with not:    !"something" ---> becomes a falsey string "something"
[20:51:35] <hpc> so every value has a completely independent truthiness attached to it?
[20:51:48] <ProfSimm> hpc: yes, and it's true for all by default
[20:51:50] <hpc> neat
[20:51:52] <geekosaur> again this sounds like snobol/icon
[20:51:59] *** Quits: infinity0 (~infinity0@occupy.ecodis.net) (Ping timeout: 256 seconds)
[20:52:03] <ProfSimm> geekosaur: where can I see examples of snobo
[20:52:06] <ProfSimm> Sounds curious
[20:52:10] <geekosaur> success/failure is distinct from boolean false/true
[20:52:17] *** Quits: eggplantade (~Eggplanta@108-201-191-115.lightspeed.sntcca.sbcglobal.net) (Remote host closed the connection)
[20:52:41] *** Quits: mon_aaraj (~MonAaraj@user/mon-aaraj/x-4416475) (Ping timeout: 250 seconds)
[20:52:43] *** Joins: eggplantade (~Eggplanta@108-201-191-115.lightspeed.sntcca.sbcglobal.net)
[20:52:43] <geekosaur> you might find icon more approachable as snobol was from the punched card days
[20:53:03] *** Joins: tzh (~tzh@c-24-21-73-154.hsd1.or.comcast.net)
[20:53:04] <geekosaur> https://en.wikipedia.org/wiki/Icon_(programming_language)
[20:54:21] *** Quits: vysn (~vysn@user/vysn) (Remote host closed the connection)
[20:54:37] *** Quits: Teacup (~teacup@user/teacup) (Quit: Teacup)
[20:54:37] *** Quits: Vajb (~Vajb@hag-jnsbng11-58c3a8-176.dhcp.inet.fi) (Read error: Connection reset by peer)
[20:54:49] *** Joins: mon_aaraj (~MonAaraj@user/mon-aaraj/x-4416475)
[20:55:27] *** Joins: yauhsien (~yauhsien@61-231-25-68.dynamic-ip.hinet.net)
[20:55:30] *** Quits: gurkenglas (~gurkengla@dslb-178-012-018-212.178.012.pools.vodafone-ip.de) (Ping timeout: 252 seconds)
[20:55:50] <ProfSimm> hpc: technically !something wraps something in not(something). What not does is swap then -> else and else -> then for the value. Every other interface is proxied transparently through not to something.
[20:56:16] <ProfSimm> But it works as if there's a boolean attached to every value. 
[20:56:26] <ProfSimm> Internally every value is true, unless wrapped in odd number of "nots"
[20:58:11] <ProfSimm> geekosaur: I don't understand icon, says   a < b  will return b, if b is bigger. what does if (a<b) mean then
[21:00:31] <ProfSimm> I think i get it
[21:00:48] <geekosaur> a < b fails if b is not bigger. if looks only at success/failure
[21:00:48] *** Quits: geekosaur (~geekosaur@xmonad/geekosaur) (Remote host closed the connection)
[21:00:48] *** Joins: Vajb (~Vajb@2001:999:62:aa00:7f5a:4f10:c894:3813)
[21:01:13] *** Joins: Teacup (~teacup@user/teacup)
[21:02:19] *** Quits: ChaiTRex (~ChaiTRex@user/chaitrex) (Remote host closed the connection)
[21:02:29] *** Joins: geekosaur (~geekosaur@xmonad/geekosaur)
[21:02:42] *** Joins: ChaiTRex (~ChaiTRex@user/chaitrex)
[21:02:45] <geekosaur> this allows a < b to produce b if it'sbigger, which allows chaining comparisons (e.g. if 3 < x < 10)
[21:03:23] <geekosaur> (sorry, network around here sucks)
[21:05:44] <ProfSimm> geekosaur: got it
[21:06:06] <ProfSimm> geekosaur: seems similar indeed. But FAIL can't carry information it seems
[21:06:13] <geekosaur> no, it can't
[21:06:28] <geekosaur> internally failing is the same as producing &fail
[21:06:35] <ProfSimm> In my case I use "falsey" values to carry error information (or other information for the else case as needed)
[21:06:35] *** Joins: vglfr (~vglfr@88.155.46.233)
[21:07:11] <geekosaur> hm, actually I'm not certain of that, it may be possible toextract information from a fail. I'm not an icon wizard
[21:07:19] <ProfSimm> :)
[21:07:33] <ProfSimm> geekosaur: it's full of languages in the 80s that do things I do
[21:07:49] <ProfSimm> geekosaur: either I'm about to learn why they failed... or we branched onto a dark timeline since
[21:08:17] <geekosaur> I still think if the current version of icon (unicon) had been around earlier, it might have prevented the rise of perl
[21:08:42] <ProfSimm> geekosaur: for a new language to rise now it needs a killer app
[21:08:53] <geekosaur> that said, icon uses snobol-like patterns insteadof regexes so perl might still have won solely because of that
[21:09:36] <geekosaur> the world needed something better than shell scripting. unicon andperl both offered thatâ€¦ but unicon came too late and earlier versions of icon didn't really fill the need
[21:09:56] <maerwald> what's wrong with shell
[21:10:32] <geekosaur> generally once you reach around 10 lines of shell you're either beating your head against a wall or making a major mistake :)
[21:11:05] <geekosaur> everything being a string with (back then) limited manipulation ability didn't help
[21:11:27] <geekosaur> these days bash and zsh both offer advenced programming features, but they didn't back then
[21:12:08] <geekosaur> no arrays (well, zsh had simple ones on a par with (t)csh), limited number handling,etc.
[21:12:25] <geekosaur> you could fake arrays even in bourne shell with some evil eval tricks, but still
[21:12:41] <hpc> the current bash arrays are not much better :P
[21:12:56] <ProfSimm> What did "bash" mean
[21:12:58] <ProfSimm> Batch shell?
[21:13:05] <maerwald> who needs arrays, just pick some delimiter and hope it works
[21:13:05] <geekosaur> "bourne-again shell"
[21:13:10] <ProfSimm> oh
[21:13:22] <geekosaur> reference to unix shell history
[21:14:24] <hpc> you get a similar sort of history with vim
[21:14:31] <hpc> vi improved
[21:14:50] *** Quits: aliosablack (~chomwitt@2a02:587:dc18:da00:e2ec:eb52:4039:9bfe) (Quit: Leaving)
[21:15:04] <hpc> vi is visual editor, because its predecessor was ed
[21:15:20] <hpc> or maybe sed?
[21:15:47] <hpc> you would print out your program on paper, and then use ed/sed to make individual line edits without being able to actually see the file on the computer
[21:16:12] <geekosaur> vi was visual ex, ex was enhanced ed
[21:16:22] <hpc> ah, right
[21:16:50] *** Joins: gurkenglas (~gurkengla@dslb-178-012-018-212.178.012.pools.vodafone-ip.de)
[21:16:51] <hpc> back in those days, just catting out a file was enough to make your network connection chug
[21:17:03] <hpc> and that's assuming your teletype wasn't an actual typewriter
[21:19:03] *** Joins: boxscape_ (~boxscape_@p4ff0b60b.dip0.t-ipconnect.de)
[21:21:36] *** Quits: waleee (~waleee@2001:9b0:213:7200:cc36:a556:b1e8:b340) (Ping timeout: 245 seconds)
[21:22:45] <monochrom> Quite remarkable that coding style guides of those days were obsessed with using magic numbers to express "we mean to say that each function should fit on one page".
[21:22:46] *** Joins: waleee (~waleee@2001:9b0:213:7200:cc36:a556:b1e8:b340)
[21:24:08] *** Joins: DigitalKiwi (~kiwi@159.223.106.6)
[21:27:05] *** Joins: ss- (~ss-@187.83.249.216.dyn.smithville.net)
[21:28:01] <ProfSimm> monochrom: they should gzipped the code and printed it in base64
[21:28:31] <monochrom> Wait, the irony of the person who changed ghcup from written-in-bash to written-in-Haskell asking "what's wrong with shell?" hahaha
[21:28:58] *** Quits: bahamas (~lucian@84.232.140.158) (Ping timeout: 272 seconds)
[21:30:29] <hpc> monochrom: that's the beauty of those old spooled printers, a page was as long as you wanted it to be :P
[21:31:30] <ss-> I've got a stack project where some files have a preprocessor run over them with {-# OPTIONS_GHC -F -pgmF=myPreprocessor #-}. everything works as expected, except that when I get a compile error with stack build, it points to a randomly-numbered temporary file e.g. ghc_42.hspp rather than the original module. I don't mind the line numbers being off
[21:31:30] <ss-> (though the preprocessor does preserve line numbers), but is there an easy way to get the original file name to show up in error messages?
[21:32:19] *** Quits: waleee (~waleee@2001:9b0:213:7200:cc36:a556:b1e8:b340) (Ping timeout: 250 seconds)
[21:33:31] *** Joins: waleee (~waleee@2001:9b0:213:7200:cc36:a556:b1e8:b340)
[21:34:34] *** Quits: yauhsien (~yauhsien@61-231-25-68.dynamic-ip.hinet.net) (Remote host closed the connection)
[21:35:35] *** Joins: yauhsien (~yauhsien@61-231-25-68.dynamic-ip.hinet.net)
[21:37:14] <geekosaur> ss-, the preprocessor would need to add LINE pragmas specifying the original file name and ideally line number
[21:37:21] <geekosaur> otherwise ghc has no idea
[21:37:48] <geekosaur> ProfSimm, you've never had to debug from a memory image printout
[21:38:31] <geekosaur> my first year of college, I did. (only once. after that I got myself a COBOL compiler I could use at home with a more sensible debugging environment)
[21:40:05] <ss-> geekosaur oh, got it! thanks!
[21:40:29] *** Quits: yauhsien (~yauhsien@61-231-25-68.dynamic-ip.hinet.net) (Ping timeout: 256 seconds)
[21:44:06] *** Joins: mc47 (~mc47@xmonad/TheMC47)
[21:45:23] *** Quits: ss- (~ss-@187.83.249.216.dyn.smithville.net) (Quit: Client closed)
[21:46:21] *** Quits: waleee (~waleee@2001:9b0:213:7200:cc36:a556:b1e8:b340) (Quit: WeeChat 3.4.1)
[21:46:32] *** Quits: razetime (~quassel@117.254.34.170) (Quit: https://quassel-irc.org - Chat comfortably. Anywhere.)
[21:47:17] *** Quits: vglfr (~vglfr@88.155.46.233) (Ping timeout: 256 seconds)
[21:48:23] *** Joins: gehmehgeh (~user@user/gehmehgeh)
[21:54:12] *** Quits: dextaa_ (~dextaa@user/dextaa) (Remote host closed the connection)
[21:54:24] *** Joins: jbox (~jbox@user/jbox)
[21:54:33] *** Quits: Teacup (~teacup@user/teacup) (Remote host closed the connection)
[21:54:48] *** Joins: Teacup (~teacup@user/teacup)
[21:55:08] *** Joins: merijn (~merijn@c-001-001-001.client.esciencecenter.eduvpn.nl)
[21:56:05] *** Quits: nautical (~nautical@2601:602:900:1630::7cbb) (Quit: WeeChat 3.4)
[21:56:39] *** Quits: jbox (~jbox@user/jbox) (Read error: Connection reset by peer)
[21:57:12] *** Quits: kosmikus (~kosmikus@nullzig.kosmikus.org) (Quit: Lost terminal)
[21:59:50] *** Joins: yauhsien (~yauhsien@61-231-25-68.dynamic-ip.hinet.net)
[22:00:11] *** Quits: eotdlt^ (~eotdlt@96-91-136-49-static.hfc.comcastbusiness.net) (Remote host closed the connection)
[22:01:09] *** Quits: mrmonday (~robert@what.i.hope.is.not.a.tabernaevagant.es) (Quit: .)
[22:01:15] *** Quits: jpds (~jpds@gateway/tor-sasl/jpds) (Ping timeout: 240 seconds)
[22:03:04] *** Joins: mrmonday (~robert@what.i.hope.is.not.a.tabernaevagant.es)
[22:03:30] *** Joins: jpds (~jpds@gateway/tor-sasl/jpds)
[22:05:52] *** Quits: pavonia (~user@user/siracusa) (Quit: Bye!)
[22:07:16] *** Joins: Unicorn_Princess (~Unicorn_P@93-103-228-248.dynamic.t-2.net)
[22:12:22] *** Joins: nattiestnate (~nate@202.138.250.62)
[22:14:01] *** Joins: infinity0 (~infinity0@occupy.ecodis.net)
[22:17:01] *** Quits: mon_aaraj (~MonAaraj@user/mon-aaraj/x-4416475) (Ping timeout: 240 seconds)
[22:19:06] *** Joins: chomwitt (~chomwitt@2a02:587:dc18:da00:e2ec:eb52:4039:9bfe)
[22:19:22] *** Joins: mon_aaraj (~MonAaraj@user/mon-aaraj/x-4416475)
[22:22:15] *** Quits: Vajb (~Vajb@2001:999:62:aa00:7f5a:4f10:c894:3813) (Read error: Connection reset by peer)
[22:22:49] *** Joins: Vajb (~Vajb@hag-jnsbng11-58c3a8-176.dhcp.inet.fi)
[22:25:44] *** Joins: Guest98 (~Guest98@82.212.116.123)
[22:27:57] *** Joins: vglfr (~vglfr@88.155.46.233)
[22:29:27] *** Quits: merijn (~merijn@c-001-001-001.client.esciencecenter.eduvpn.nl) (Ping timeout: 256 seconds)
[22:29:31] *** Joins: dextaa_ (~dextaa@user/dextaa)
[22:29:48] *** Joins: Sgeo (~Sgeo@user/sgeo)
[22:30:07] *** Quits: ddb (~ddb@2607:5300:203:9993::196) (Quit: WeeChat 3.4)
[22:35:11] *** Quits: deadmarshal_ (~deadmarsh@95.38.230.121) (Ping timeout: 260 seconds)
[22:55:30] *** Quits: Teacup (~teacup@user/teacup) (Remote host closed the connection)
[22:57:21] <maerwald> monochrom: xD
[22:59:51] *** Quits: boxscape_ (~boxscape_@p4ff0b60b.dip0.t-ipconnect.de) (Ping timeout: 250 seconds)
[23:02:46] *** Joins: Teacup (~teacup@user/teacup)
[23:03:04] *** Quits: dyeplexer (~dyeplexer@user/dyeplexer) (Remote host closed the connection)
[23:04:58] *** Joins: simendsjo (~user@84.211.91.241)
[23:06:40] *** Joins: bahamas (~lucian@84.232.140.158)
[23:12:03] *** Quits: kaph (~kaph@net-109-116-124-149.cust.vodafonedsl.it) (Ping timeout: 260 seconds)
[23:14:12] *** Quits: `2jt (~jtomas@210.red-88-24-179.staticip.rima-tde.net) (Remote host closed the connection)
[23:14:35] *** Joins: `2jt (~jtomas@210.red-88-24-179.staticip.rima-tde.net)
[23:18:29] *** Quits: mikoto-chan (~mikoto-ch@213.177.151.239) (Ping timeout: 250 seconds)
[23:20:22] *** Joins: mikoto-chan (~mikoto-ch@213.177.151.239)
[23:20:27] *** Joins: econo (uid147250@user/econo)
[23:23:27] *** Quits: justOkay (~justache@user/justache) (Read error: Connection reset by peer)
[23:24:24] *** Joins: justOkay (~justache@user/justache)
[23:25:20] *** Joins: pera (~pera@user/pera)
[23:26:11] *** Joins: CodeKiwi (~kiwi@137.184.156.191)
[23:27:16] *** Joins: danso (~danso@danso.ca)
[23:28:24] *** Joins: rond_ (~rond_@90.254.208.190)
[23:29:15] *** Quits: simendsjo (~user@84.211.91.241) (Ping timeout: 268 seconds)
[23:29:48] <danso> is there a standard way of running an action only for a Left value, as in  `\ f act -> \case { Left l -> f l >> act ; Right _ -> act }`
[23:29:52] *** Parts: jakalx (~jakalx@base.jakalx.net) (Error from remote client)
[23:30:07] *** Joins: boxscape_ (~boxscape_@p4ff0b60b.dip0.t-ipconnect.de)
[23:30:29] *** Quits: yauhsien (~yauhsien@61-231-25-68.dynamic-ip.hinet.net) (Remote host closed the connection)
[23:31:14] *** Joins: yauhsien (~yauhsien@61-231-25-68.dynamic-ip.hinet.net)
[23:32:11] *** Quits: gehmehgeh (~user@user/gehmehgeh) (Remote host closed the connection)
[23:32:32] <Rembane> danso: There's left from Control.Arrow and first from Data.Bifunctor. 
[23:32:56] *** Joins: gehmehgeh (~user@user/gehmehgeh)
[23:36:02] *** Quits: tzh (~tzh@c-24-21-73-154.hsd1.or.comcast.net) (Ping timeout: 268 seconds)
[23:38:31] *** Quits: dextaa_ (~dextaa@user/dextaa) (Remote host closed the connection)
[23:40:00] <danso> thanks, will investigate.
[23:40:48] *** Joins: pretty_dumm_guy (trottel@gateway/vpn/protonvpn/prettydummguy/x-88029655)
[23:42:55] *** Joins: solrize (~solrize@user/solrize)
[23:43:49] <danso> Rembane, i'm not sure that is what i mean. left/first returns an Either l r 
[23:44:04] <danso> my function does something with the Left value, then discards it
[23:45:04] *** Quits: hololeap (~hololeap@user/hololeap) (Remote host closed the connection)
[23:46:26] *** Joins: hololeap (~hololeap@user/hololeap)
[23:46:46] <geekosaur> either (\l -> f l) (const ()) >> act
[23:46:50] *** Quits: yauhsien (~yauhsien@61-231-25-68.dynamic-ip.hinet.net) (Remote host closed the connection)
[23:47:38] *** Joins: yauhsien (~yauhsien@61-231-25-68.dynamic-ip.hinet.net)
[23:47:39] <Rembane> danso: Oh, then use geekosaur's solution.
[23:47:58] <geekosaur> uh rught, I rearranged that after. either f (const ()) >> act
[23:49:00] *** Quits: lavaman (~lavaman@c-174-63-118-52.hsd1.ma.comcast.net) (Remote host closed the connection)
[23:49:05] <Rembane> I wonder if void . left act would do the same thing. 
[23:49:12] *** Joins: lavaman (~lavaman@c-174-63-118-52.hsd1.ma.comcast.net)
[23:50:35] *** Quits: jpds (~jpds@gateway/tor-sasl/jpds) (Ping timeout: 240 seconds)
[23:50:50] *** Joins: acidjnk (~acidjnk@p200300d0c7049f8284fff18517a389b2.dip0.t-ipconnect.de)
[23:52:53] <danso> there might not be an idiomatic way of doing it. the type i want is  (l -> IO ()) -> IO () -> Either l () -> IO ()
[23:53:39] *** Joins: jpds (~jpds@gateway/tor-sasl/jpds)
[23:54:02] <Rembane> danso: EitherT might help you there. 
[23:55:02] *** Joins: dextaa_ (~dextaa@user/dextaa)
