[00:00:59] *** Quits: ix (~ix@213.205.242.181) (Ping timeout: 256 seconds)
[00:01:36] *** Quits: jao (~jao@static-68-235-44-54.cust.tzulo.com) (Ping timeout: 272 seconds)
[00:02:22] *** Quits: romesrf (~romes@44.190.189.46.rev.vodafone.pt) (Ping timeout: 256 seconds)
[00:03:15] *** Quits: burnsidesLlama (~burnsides@dhcp168-012.wadham.ox.ac.uk) (Ping timeout: 256 seconds)
[00:03:17] *** Joins: cjb (~cjb@user/cjb)
[00:03:51] *** Joins: alp (~alp@user/alp)
[00:05:34] *** Quits: prolic (~prolic@181.122.131.227) (Remote host closed the connection)
[00:05:52] *** Joins: prolic (~prolic@181.122.131.227)
[00:07:32] *** Quits: prolic (~prolic@181.122.131.227) (Remote host closed the connection)
[00:07:50] *** Joins: prolic (~prolic@181.122.131.227)
[00:08:03] *** Joins: michalz (~michalz@185.246.204.93)
[00:12:32] *** Joins: dschrempf (~dominik@070-207.dynamic.dsl.fonira.net)
[00:12:53] *** Joins: cynomys (~cynomys@user/cynomys)
[00:13:08] *** Quits: maxime__ (~maxime@2a01cb08833598002d961177afb4f0f1.ipv6.abo.wanadoo.fr) (Remote host closed the connection)
[00:13:28] *** Joins: Null_A (~null_a@2601:645:8700:2290:a4fb:481a:7fa9:b909)
[00:13:57] *** Joins: max22- (~maxime@2a01cb0883359800adb23edd069ed7e4.ipv6.abo.wanadoo.fr)
[00:15:09] *** Joins: romesrf (~romes@44.190.189.46.rev.vodafone.pt)
[00:15:21] *** Joins: ix (~ix@213.205.242.82)
[00:16:08] *** Joins: alx741 (~alx741@181.199.42.143)
[00:17:57] *** Quits: zincy_ (~zincy@2a00:23c8:970c:4801:39f9:90f7:922:e73b) (Remote host closed the connection)
[00:19:14] *** Joins: acidjnk (~acidjnk@p200300d0c70575217cad9542db460749.dip0.t-ipconnect.de)
[00:21:01] *** Quits: alx741 (~alx741@181.199.42.143) (Read error: Connection reset by peer)
[00:21:37] *** Joins: alx741 (~alx741@181.199.42.143)
[00:21:38] *** Quits: romesrf (~romes@44.190.189.46.rev.vodafone.pt) (Ping timeout: 256 seconds)
[00:22:06] *** Quits: sektor|3 (~kvirc@87.227.175.182) (Read error: Connection reset by peer)
[00:22:39] *** Quits: cosimone (~user@93-34-133-235.ip49.fastwebnet.it) (Read error: Connection reset by peer)
[00:23:17] *** Joins: cosimone (~user@2001:b07:ae5:db26:c24a:d20:4d91:1e20)
[00:26:03] *** Joins: romesrf (~romes@44.190.189.46.rev.vodafone.pt)
[00:27:10] *** Joins: shailangsa_ (~shailangs@host86-186-127-164.range86-186.btcentralplus.com)
[00:30:10] *** Quits: prolic (~prolic@181.122.131.227) (Remote host closed the connection)
[00:30:28] *** Joins: prolic (~prolic@181.122.131.227)
[00:34:23] *** Quits: prolic (~prolic@181.122.131.227) (Remote host closed the connection)
[00:34:42] *** Joins: prolic (~prolic@181.122.131.227)
[00:36:06] *** Joins: jao (~jao@68.235.43.108)
[00:36:11] *** Joins: zincy_ (~zincy@2a00:23c8:970c:4801:39f9:90f7:922:e73b)
[00:38:04] *** Joins: burnsidesLlama (~burnsides@dhcp168-012.wadham.ox.ac.uk)
[00:42:17] *** Quits: burnsidesLlama (~burnsides@dhcp168-012.wadham.ox.ac.uk) (Ping timeout: 240 seconds)
[00:44:02] *** Quits: alx741 (~alx741@181.199.42.143) (Read error: Connection reset by peer)
[00:46:16] *** Joins: bontaq (~user@ool-45779fe5.dyn.optonline.net)
[00:47:01] *** Quits: shailangsa_ (~shailangs@host86-186-127-164.range86-186.btcentralplus.com) (Remote host closed the connection)
[00:47:12] *** Quits: mikoto-chan (~mikoto-ch@213.177.151.239) (Ping timeout: 272 seconds)
[00:47:27] *** Quits: ix (~ix@213.205.242.82) (Ping timeout: 256 seconds)
[00:49:05] *** Quits: _ht (~quassel@231-169-21-31.ftth.glasoperator.nl) (Remote host closed the connection)
[00:49:16] *** Joins: ix (~ix@213.205.192.245)
[00:49:22] <Sqaure> Cant seem to find something i expected existed. Namely :: Int -> [a] -> Maybe a. Is it hiding?
[00:51:57] *** Quits: prolic (~prolic@181.122.131.227) (Remote host closed the connection)
[00:52:15] *** Joins: prolic (~prolic@181.122.131.227)
[00:52:36] <Sqaure> oh, found one in lens
[00:52:44] <geekosaur> @hoogle [a]-> Int -> Maybe a
[00:52:45] <lambdabot> Safe atMay :: [a] -> Int -> Maybe a
[00:52:45] <lambdabot> Protolude atMay :: [a] -> Int -> Maybe a
[00:52:45] <lambdabot> Protolude.Safe atMay :: [a] -> Int -> Maybe a
[00:55:57] *** Quits: ix (~ix@213.205.192.245) (Ping timeout: 256 seconds)
[00:58:12] *** Quits: prolic (~prolic@181.122.131.227) (Remote host closed the connection)
[00:58:29] *** Joins: prolic (~prolic@181.122.131.227)
[01:00:57] *** Joins: alx741 (~alx741@181.199.42.143)
[01:01:52] *** Quits: machinedgod (~machinedg@24.105.81.50) (Ping timeout: 256 seconds)
[01:05:17] *** Quits: alx741 (~alx741@181.199.42.143) (Read error: Connection reset by peer)
[01:09:39] *** Quits: adanwan (~adanwan@gateway/tor-sasl/adanwan) (Ping timeout: 276 seconds)
[01:10:02] <EvanR> atMay oundSay saferSay anThey artialPay unctionsFay
[01:10:10] *** Joins: adanwan (~adanwan@gateway/tor-sasl/adanwan)
[01:10:20] <EvanR> doh, autocorrect
[01:13:30] *** Joins: burnsidesLlama (~burnsides@dhcp168-012.wadham.ox.ac.uk)
[01:14:48] *** Quits: cosimone (~user@2001:b07:ae5:db26:c24a:d20:4d91:1e20) (Read error: Connection reset by peer)
[01:15:34] *** Joins: cosimone (~user@2001:b07:ae5:db26:c24a:d20:4d91:1e20)
[01:18:01] *** Quits: prolic (~prolic@181.122.131.227) (Remote host closed the connection)
[01:18:20] *** Joins: prolic (~prolic@181.122.131.227)
[01:20:07] *** Joins: maxime_ (~maxime@lfbn-ren-1-1026-62.w92-139.abo.wanadoo.fr)
[01:20:19] *** Quits: burnsidesLlama (~burnsides@dhcp168-012.wadham.ox.ac.uk) (Ping timeout: 256 seconds)
[01:22:08] *** Joins: ProfSimm (~ProfSimm@87.227.196.109)
[01:22:21] *** Joins: alx741 (~alx741@181.199.42.143)
[01:22:37] *** Quits: max22- (~maxime@2a01cb0883359800adb23edd069ed7e4.ipv6.abo.wanadoo.fr) (Ping timeout: 240 seconds)
[01:22:54] *** Joins: merijn (~merijn@c-001-001-027.client.esciencecenter.eduvpn.nl)
[01:24:51] *** Quits: dschrempf (~dominik@070-207.dynamic.dsl.fonira.net) (Quit: WeeChat 3.3)
[01:25:28] *** Quits: alx741 (~alx741@181.199.42.143) (Read error: Connection reset by peer)
[01:25:38] *** Joins: maxime__ (~maxime@2a01cb08833598009b8db594e1e70b96.ipv6.abo.wanadoo.fr)
[01:26:32] *** Quits: cosimone (~user@2001:b07:ae5:db26:c24a:d20:4d91:1e20) (Quit: ERC (IRC client for Emacs 27.1))
[01:26:58] *** Joins: shailangsa (~shailangs@host86-186-127-164.range86-186.btcentralplus.com)
[01:27:12] *** Joins: random-jellyfish (~random-je@user/random-jellyfish)
[01:28:15] *** Quits: maxime_ (~maxime@lfbn-ren-1-1026-62.w92-139.abo.wanadoo.fr) (Ping timeout: 256 seconds)
[01:33:03] *** Quits: takuan (~takuan@178-116-218-225.access.telenet.be) (Remote host closed the connection)
[01:40:02] *** Joins: ix (~ix@213.205.242.104)
[01:40:18] *** Quits: wootehfoot (~wootehfoo@user/wootehfoot) (Quit: Leaving)
[01:40:49] *** Joins: [itchyjunk] (~itchyjunk@user/itchyjunk/x-7353470)
[01:42:49] *** Quits: coot (~coot@213.134.190.95) (Quit: coot)
[01:42:50] *** Joins: alx741 (~alx741@157.100.197.240)
[01:49:46] *** Quits: prolic (~prolic@181.122.131.227) (Remote host closed the connection)
[01:50:04] *** Joins: prolic (~prolic@181.122.131.227)
[01:50:29] *** Joins: zebrag (~chris@user/zebrag)
[01:51:10] <jackdk> > [1, 2, 3] ^? ix 5
[01:51:12] <lambdabot>  Nothing
[01:51:23] <jackdk> does require lens, however
[01:52:38] *** Quits: alx741 (~alx741@157.100.197.240) (Read error: Connection reset by peer)
[01:53:38] *** Joins: slack1256 (~slack1256@191.126.227.77)
[01:54:01] *** Quits: lavaman (~lavaman@98.38.249.169) (Remote host closed the connection)
[01:54:16] *** Joins: lavaman (~lavaman@98.38.249.169)
[01:54:23] *** Quits: lavaman (~lavaman@98.38.249.169) (Remote host closed the connection)
[01:54:36] *** Joins: lavaman (~lavaman@98.38.249.169)
[01:54:44] *** Quits: lavaman (~lavaman@98.38.249.169) (Remote host closed the connection)
[01:54:59] *** Joins: lavaman (~lavaman@98.38.249.169)
[01:55:06] *** Quits: lavaman (~lavaman@98.38.249.169) (Remote host closed the connection)
[01:55:20] *** Joins: lavaman (~lavaman@98.38.249.169)
[01:55:27] *** Quits: lavaman (~lavaman@98.38.249.169) (Remote host closed the connection)
[01:55:42] *** Joins: lavaman (~lavaman@98.38.249.169)
[01:55:49] *** Quits: lavaman (~lavaman@98.38.249.169) (Remote host closed the connection)
[01:55:51] <geekosaur> sigh
[01:55:54] *** ChanServ sets mode: +o geekosaur
[01:56:04] *** Joins: lavaman (~lavaman@98.38.249.169)
[01:56:05] *** geekosaur sets mode: +b *!*@98.38.249.169
[01:56:11] *** Quits: lavaman (~lavaman@98.38.249.169) (Remote host closed the connection)
[01:57:09] *** Quits: merijn (~merijn@c-001-001-027.client.esciencecenter.eduvpn.nl) (Ping timeout: 256 seconds)
[01:57:22] *** Joins: harveypwca (~harveypwc@2601:246:c180:a570:3828:d8:e523:3f67)
[01:57:49] <romesrf> say I have `class CSomething a`, and a `data DSomething b`, and I `instance CSomething (DSomething a)`. When writing a function `f :: CSomething a => ...`, how would I access the type variable of `a`
[01:58:17] <romesrf> So, `class CSomething a` where a must have kind * -> *, and then I want to reason over the kind of the instanced class? :P
[01:58:30] <romesrf> hahaha
[01:59:04] <romesrf> over the type variable of the instanced class*
[01:59:45] <geekosaur> you can't. just as you can't do f :: a -> something and get at the type `a`
[02:00:10] *** Quits: Tuplanolla (~Tuplanoll@91-159-69-98.elisa-laajakaista.fi) (Quit: Leaving.)
[02:00:11] <geekosaur> only instance methods get to do that
[02:02:57] *** Joins: justsomeguy (~justsomeg@user/justsomeguy)
[02:03:28] <romesrf> :)
[02:05:27] <phma> I'm writing some code to do arithmetic in a complex base and would like to use QuickCheck for unit tests. I use random tests in C++ and like them.
[02:06:00] *** Quits: zincy_ (~zincy@2a00:23c8:970c:4801:39f9:90f7:922:e73b) (Remote host closed the connection)
[02:06:39] <phma> One function takes a Word32 and expresses it in base 343, returning a list. Another takes such a list and reassembles it into a number. I can test them together with random numbers.
[02:07:39] <phma> But I'd also like to do a few single tests where I choose a number, call the function, and check that the list is correct. Can I do this with QuickCheck?
[02:07:58] <romesrf> geekosaur: this is as close as I could get: https://paste.tomsmeding.com/LgZ2aPtP , which is pretty close to what I wanted but didn't know it yet ;)
[02:08:10] <romesrf> first time using KindSignatures, they're cool :P
[02:08:52] *** Joins: wroathe (~wroathe@206-55-188-8.fttp.usinternet.com)
[02:08:52] *** Quits: wroathe (~wroathe@206-55-188-8.fttp.usinternet.com) (Changing host)
[02:08:52] *** Joins: wroathe (~wroathe@user/wroathe)
[02:09:00] <romesrf> so in the end i can constraint over the type variable of the instancing datatype
[02:09:40] <geekosaur> you still can't write code that can distinguish different `m`s, which is what I understood you as asking for
[02:10:23] *** Joins: alx741 (~alx741@157.100.197.240)
[02:10:27] <geekosaur> you can write what you did but it has to work for all possible `m`s, which in practice means using instance functions
[02:11:03] <romesrf> ic ic :)
[02:11:06] <romesrf> ty
[02:12:34] *** geekosaur sets mode: -o geekosaur
[02:14:14] *** Quits: prolic (~prolic@181.122.131.227) (Remote host closed the connection)
[02:14:32] *** Joins: prolic (~prolic@181.122.131.227)
[02:15:09] *** Joins: dsrt^ (~dsrt@50.235.176.163)
[02:15:15] <geekosaur> phma, QuickCheck is not so much about choosing inputs, rather it chooses the inputs and verifies the correct result. It's good for verifying that a property holds across an entire range of inputs
[02:15:16] *** Quits: alx741 (~alx741@157.100.197.240) (Read error: Connection reset by peer)
[02:15:45] <sshine> is 'include-env' package the preferred way to include environment variables at compile-time?
[02:16:15] <phma> geekosaur: how should I do single tests if I'm doing random tests with QuickCheck?
[02:16:28] *** Quits: gehmehgeh (~user@user/gehmehgeh) (Quit: Leaving)
[02:17:05] <geekosaur> you generally don't
[02:17:36] <sshine> phma, you can combine property tests and unit tests in one test suite
[02:17:37] <geekosaur> QC is just one kind of testing; there are test frameworks which provide other kinds of testing in addition
[02:17:58] <geekosaur> so you may want to look into HSpec or tasty
[02:18:12] <phma> thanks
[02:18:51] <sshine> phma, if you use e.g. HSpec or Tasty, you can define them next to each other; here's an example of Hedgehog property tests + HSpec unit tests, combined with Tasty: https://github.com/sshine/evm-opcodes/blob/main/test/OpcodeTest.hs
[02:19:57] *** Quits: michalz (~michalz@185.246.204.93) (Remote host closed the connection)
[02:20:03] <sshine> phma, most test frameworks have something similar. for example, using only HSpec, you can also embed QuickCheck properties.
[02:20:47] <sshine> phma, https://hspec.github.io/ -- there's a simpler example of an HSpec suite that includes a QuickCheck property. you could get to there with only one or two extra dependencies in your test suite.
[02:21:13] *** ChanServ sets mode: +o litharge
[02:21:14] *** litharge sets mode: -bo *!*@98.38.249.169 litharge
[02:21:18] <geekosaur> Hedgehog is QuickCheck on steroids, if you're wondering
[02:21:57] *** Quits: wombat875 (~wombat875@pool-72-89-24-154.nycmny.fios.verizon.net) (Ping timeout: 240 seconds)
[02:22:36] *** Quits: jpds (~jpds@gateway/tor-sasl/jpds) (Remote host closed the connection)
[02:22:46] <romesrf> I've a question: Is there any type-level fold? that folds a list of types into a mega type with some combinator
[02:22:47] <monochrom> Ugh in these days of dope test controversies... :)
[02:23:13] *** Quits: random-jellyfish (~random-je@user/random-jellyfish) (Ping timeout: 256 seconds)
[02:23:15] <sshine> ...who is testing the testers?
[02:23:15] *** Joins: jpds (~jpds@gateway/tor-sasl/jpds)
[02:23:17] <romesrf> like... foldl (->) [Int, Int, Int] ~ Int -> Int -> Int
[02:23:52] <geekosaur> that looks to me like something that would require serious singletons wizardry
[02:24:10] <sshine> yes
[02:24:29] <monochrom> Does this count? https://aphyr.com/posts/342-typing-the-technical-interview
[02:25:24] <phma> my favorite random test that I've written: make a random upper triangular matrix with all 1 on the diagonal, permute rows and columns randomly, and take the determinant. It should be close to 1.
[02:25:32] *** Quits: dsrt^ (~dsrt@50.235.176.163) (Remote host closed the connection)
[02:26:39] <monochrom> That's a beautiful math insight, phma. :)
[02:27:02] *** Joins: sammelweis (~quassel@2601:401:8200:2d4c:bd9:d04c:7f69:eb10)
[02:27:16] <romesrf> HAHAHAHAAHAH monochrom 
[02:27:27] <romesrf> i'm halfway through that's hilarious
[02:27:53] *** Joins: lavaman (~lavaman@98.38.249.169)
[02:27:59] *** Joins: dsrt^ (~dsrt@50.235.176.163)
[02:28:59] *** Quits: jinsun (~quassel@user/jinsun) ()
[02:28:59] <monochrom> It's a satire on type level programming in those days. But it was also before DataKinds, TypeInType, kind polymorphism, even type families maybe.
[02:29:08] *** Quits: olle (~olle@i5E866D96.versanet.de) (Ping timeout: 256 seconds)
[02:29:19] *** Joins: jinsun (~jinsun@user/jinsun)
[02:29:39] <monochrom> So, it had to make do with undecidable instances and those empty data declarations "data Nil; data Cons ...".
[02:30:17] <monochrom> Today I think type-level foldl can be made a type family.
[02:30:29] <romesrf> It's really funny
[02:32:05] <jackdk> I read it as a satire on type-level programming in general, and that was the state of the art at the time. The turns of phrase make it so much fun - "summon two meaningless constants from the void, and imbue them with meaning"
[02:32:17] *** Quits: lavaman (~lavaman@98.38.249.169) (Ping timeout: 256 seconds)
[02:32:53] *** Joins: alx741 (~alx741@157.100.197.240)
[02:33:28] <monochrom> "it's easier to just define it inline"
[02:34:16] <romesrf> AHAHAH
[02:35:35] <romesrf> still laughing. Thank you, i've forwarded this to my advisor as well ahahah
[02:35:42] <sshine> monochrom, nice blog post, hadn't read it before :)
[02:35:51] <sshine> “We must use this,” you inform him cheerfully, “because Hask is not a category.” -- I should use this reasoning more often.
[02:35:53] *** Joins: machinedgod (~machinedg@24.105.81.50)
[02:36:07] <monochrom> hee hee
[02:36:10] <romesrf> hahahaha
[02:37:40] *** Joins: burnsidesLlama (~burnsides@dhcp168-012.wadham.ox.ac.uk)
[02:38:03] *** Quits: jpds (~jpds@gateway/tor-sasl/jpds) (Ping timeout: 276 seconds)
[02:39:18] *** Quits: wroathe (~wroathe@user/wroathe) (Ping timeout: 272 seconds)
[02:39:41] *** Quits: mc47 (~mc47@xmonad/TheMC47) (Remote host closed the connection)
[02:41:21] *** Quits: prolic (~prolic@181.122.131.227) (Remote host closed the connection)
[02:41:28] *** Joins: wroathe (~wroathe@user/wroathe)
[02:41:40] *** Joins: prolic (~prolic@181.122.131.227)
[02:42:29] *** Quits: alx741 (~alx741@157.100.197.240) (Read error: Connection reset by peer)
[02:42:32] *** Quits: __monty__ (~toonn@user/toonn) (Quit: leaving)
[02:44:18] *** Quits: eggplantade (~Eggplanta@2600:1700:bef1:5e10:7dab:1fa0:9cf6:a5de) (Remote host closed the connection)
[02:45:20] *** Quits: slack1256 (~slack1256@191.126.227.77) (Remote host closed the connection)
[02:46:06] *** Quits: maxime__ (~maxime@2a01cb08833598009b8db594e1e70b96.ipv6.abo.wanadoo.fr) (Quit: Leaving)
[02:47:50] *** Joins: fruitfly (~fruitfly@host-79-121-41-174.kabelnet.hu)
[02:52:15] *** Quits: prolic (~prolic@181.122.131.227) (Remote host closed the connection)
[02:52:33] *** Joins: prolic (~prolic@181.122.131.227)
[02:56:46] *** Quits: harveypwca (~harveypwc@2601:246:c180:a570:3828:d8:e523:3f67) (Quit: Leaving)
[02:57:28] *** Quits: acidjnk (~acidjnk@p200300d0c70575217cad9542db460749.dip0.t-ipconnect.de) (Ping timeout: 250 seconds)
[02:59:02] *** Joins: alx741 (~alx741@181.199.42.143)
[03:01:07] *** Quits: justsomeguy (~justsomeg@user/justsomeguy) (Quit: WeeChat 3.4)
[03:03:21] *** Quits: tromp (~textual@dhcp-077-249-230-040.chello.nl) (Quit: My iMac has gone to sleep. ZZZzzz…)
[03:05:48] *** Joins: jpds (~jpds@gateway/tor-sasl/jpds)
[03:07:02] *** Joins: pavonia_ (~user@user/siracusa)
[03:07:11] *** Quits: alx741 (~alx741@181.199.42.143) (Read error: Connection reset by peer)
[03:07:27] *** Quits: pretty_dumm_guy (trottel@gateway/vpn/protonvpn/prettydummguy/x-88029655) (Quit: WeeChat 3.4)
[03:07:58] *** Quits: Hash (~Hash@hashsecurity.org) (Remote host closed the connection)
[03:08:02] *** Quits: xsperry (~xs@user/xsperry) (Killed (NickServ (GHOST command used by fuukk!~xs@cpe-188-129-71-242.dynamic.amis.hr)))
[03:08:10] *** Joins: xsperry (~xs@user/xsperry)
[03:08:18] *** Joins: Hash (~Hash@hashsecurity.org)
[03:08:24] *** Quits: Null_A (~null_a@2601:645:8700:2290:a4fb:481a:7fa9:b909) (Remote host closed the connection)
[03:08:49] *** Quits: Lord_of_Life (~Lord@user/lord-of-life/x-2819915) (Ping timeout: 256 seconds)
[03:09:07] *** Joins: Null_A (~null_a@2601:645:8700:2290:a4fb:481a:7fa9:b909)
[03:09:15] *** Quits: nunggu (~q@user/nunggu) (Ping timeout: 276 seconds)
[03:09:23] *** Quits: pavonia (~user@user/siracusa) (Ping timeout: 256 seconds)
[03:09:27] *** pavonia_ is now known as pavonia
[03:09:35] *** Quits: cherryblossom[m] (~cherryblo@2001:470:69fc:105::b789) (Ping timeout: 250 seconds)
[03:09:35] *** Quits: Michal[m] (~oomiguelm@2001:470:69fc:105::1:5ab0) (Ping timeout: 250 seconds)
[03:10:01] *** Quits: Yehoshua (~yehoshua@2001:470:69fc:105::1:593f) (Ping timeout: 250 seconds)
[03:10:01] *** Quits: marinelli[m] (~marinelli@2001:470:69fc:105::2d8) (Ping timeout: 250 seconds)
[03:10:01] *** Quits: psydroid (~psydroid@user/psydroid) (Ping timeout: 250 seconds)
[03:10:01] *** Quits: unclechu (~unclechu@2001:470:69fc:105::354) (Ping timeout: 250 seconds)
[03:10:01] *** Quits: hsiktas[m] (~hsiktasm]@2001:470:69fc:105::30d4) (Ping timeout: 250 seconds)
[03:10:01] *** Quits: mahene[m] (~mahenemat@2001:470:69fc:105::1:6a93) (Ping timeout: 250 seconds)
[03:10:27] *** Quits: maerwald[m] (~maerwaldm@2001:470:69fc:105::1ee) (Ping timeout: 250 seconds)
[03:10:46] *** Joins: nunggu (~q@user/nunggu)
[03:10:54] *** Joins: Lord_of_Life (~Lord@user/lord-of-life/x-2819915)
[03:13:54] *** Quits: raehik (~raehik@cpc95906-rdng25-2-0-cust156.15-3.cable.virginm.net) (Ping timeout: 256 seconds)
[03:13:56] *** Quits: Null_A (~null_a@2601:645:8700:2290:a4fb:481a:7fa9:b909) (Ping timeout: 250 seconds)
[03:14:49] *** Joins: eggplantade (~Eggplanta@108-201-191-115.lightspeed.sntcca.sbcglobal.net)
[03:17:14] *** Joins: hsiktas[m] (~hsiktasm]@2001:470:69fc:105::30d4)
[03:17:44] *** Joins: psydroid (~psydroid@user/psydroid)
[03:19:24] *** Quits: prolic (~prolic@181.122.131.227) (Remote host closed the connection)
[03:19:42] *** Joins: prolic (~prolic@181.122.131.227)
[03:23:38] *** Joins: cherryblossom[m] (~cherryblo@2001:470:69fc:105::b789)
[03:24:19] *** Joins: alx741 (~alx741@157.100.197.240)
[03:24:25] *** Joins: Michal[m] (~oomiguelm@2001:470:69fc:105::1:5ab0)
[03:24:28] *** Joins: emf (~emf@2620:10d:c090:400::5:d01b)
[03:24:32] *** Joins: mahene[m] (~mahenemat@2001:470:69fc:105::1:6a93)
[03:24:38] *** Joins: Yehoshua (~yehoshua@2001:470:69fc:105::1:593f)
[03:25:12] <sshine> are there any Stack executables for OpenBSD? it seems like https://get.haskellstack.org/ doesn't support OpenBSD.
[03:26:46] *** Quits: alx741 (~alx741@157.100.197.240) (Read error: Connection reset by peer)
[03:26:48] *** Quits: machinedgod (~machinedg@24.105.81.50) (Ping timeout: 272 seconds)
[03:26:51] *** Joins: unclechu (~unclechu@2001:470:69fc:105::354)
[03:27:26] *** Joins: marinelli[m] (~marinelli@2001:470:69fc:105::2d8)
[03:28:26] *** Joins: maerwald[m] (~maerwaldm@2001:470:69fc:105::1ee)
[03:28:34] *** Joins: deadmarshal (~deadmarsh@95.38.115.206)
[03:31:12] *** Joins: Null_A (~null_a@c-98-210-133-39.hsd1.ca.comcast.net)
[03:33:46] *** Quits: deadmarshal (~deadmarsh@95.38.115.206) (Ping timeout: 272 seconds)
[03:36:00] *** Quits: `2jt (~jtomas@130.red-88-22-46.staticip.rima-tde.net) (Ping timeout: 256 seconds)
[03:36:12] *** Quits: califax (~califax@user/califx) (Remote host closed the connection)
[03:36:28] *** Joins: califax (~califax@user/califx)
[03:37:36] *** Joins: chenqisu1 (~chenqisu1@183.217.200.249)
[03:39:30] *** Quits: fruitfly (~fruitfly@host-79-121-41-174.kabelnet.hu) (Quit: Client closed)
[03:41:58] *** Quits: prolic (~prolic@181.122.131.227) (Remote host closed the connection)
[03:42:15] *** Joins: prolic (~prolic@181.122.131.227)
[03:44:48] *** Joins: alx741 (~alx741@157.100.197.240)
[03:47:22] *** Joins: raehik (~raehik@cpc95906-rdng25-2-0-cust156.15-3.cable.virginm.net)
[03:47:36] <romesrf> I'm getting "type variable not in scope" in the last line here https://paste.tomsmeding.com/rmGDpNER
[03:47:36] *** Quits: tremon (~tremon@83-84-18-241.cable.dynamic.v4.ziggo.nl) (Quit: getting boxed in)
[03:47:55] *** Quits: bontaq (~user@ool-45779fe5.dyn.optonline.net) (Ping timeout: 256 seconds)
[03:47:55] <romesrf> But I have something very similar working, what am I doing wrong? :)
[03:48:18] <geekosaur> you need ScopedTypeVariables *and* to "declare" the type variable with an explicit forall
[03:48:54] *** Quits: bitdex (~bitdex@gateway/tor-sasl/bitdex) (Ping timeout: 276 seconds)
[03:48:54] *** Quits: alx741 (~alx741@157.100.197.240) (Read error: Connection reset by peer)
[03:50:29] *** Quits: Null_A (~null_a@c-98-210-133-39.hsd1.ca.comcast.net) (Remote host closed the connection)
[03:50:50] *** Joins: bitdex (~bitdex@gateway/tor-sasl/bitdex)
[03:51:11] <romesrf> AH! It was the ScopedTypeVariables. Nothing in the error message hints at it. In the other module where I was doing this successfully I must have had it for some other reason
[03:51:17] *** Joins: Null_A (~null_a@2601:645:8700:2290:a4fb:481a:7fa9:b909)
[03:51:22] <romesrf> and coincidentally this worked without effort
[03:51:40] <romesrf> Where could I suggest adding that bit to the error message? :)
[03:52:04] *** Joins: Topsi (~Tobias@dyndsl-095-033-095-012.ewe-ip-backbone.de)
[03:52:08] <geekosaur> ghc issue tracker
[03:52:25] <geekosaur> I'm surprised it didn'talso require the forall, that seems inconsistent
[03:54:34] <jackdk> geekosaur: is it possible that the type application is actually providing no information? The `h` being applied tells you what the `a` must be anyway, no?
[03:54:53] <jackdk> (romesrf: does `serve Proxy h`typecheck?)
[03:55:21] <geekosaur> no, Proxy needs a type
[03:55:41] <geekosaur> data Proxy a = Proxy
[03:56:12] <geekosaur> so either a type application or (Proxy :: Proxy type)
[03:56:59] <jackdk> yeah I know that it's phantom, but because it's used in `serve :: HasServer api '[] => Proxy api -> Server api -> Application`, and you know `h :: Server a` from pattern-matching the `ChatBot`ctor, I would expect GHC to unify the type var on `Proxy` with the one in the function's type signature
[03:58:14] *** Joins: merijn (~merijn@c-001-001-027.client.esciencecenter.eduvpn.nl)
[03:59:06] <geekosaur> if it could do that, then Proxy wouldn't be necessary, would it?
[03:59:06] <romesrf> geekosaur: oh it does require the forall, but i had already tried that without success
[03:59:24] <romesrf> i readded the forall, but the key was ScopedTypedVariables
[03:59:29] <romesrf> Type*
[04:00:20] <romesrf> jackdk: it doesn't :) but looking at it high level i would expect it too
[04:00:35] <romesrf> it just isn't that easy hahaha
[04:04:03] *** Quits: prolic (~prolic@181.122.131.227) (Remote host closed the connection)
[04:04:21] *** Joins: prolic (~prolic@181.122.131.227)
[04:05:14] *** Quits: jgeerds_ (~jgeerds@55d4a547.access.ecotel.net) (Remote host closed the connection)
[04:06:01] <jackdk> right, because ServerT is a noninjective type family
[04:07:19] *** Joins: alx741 (~alx741@157.100.197.240)
[04:08:57] *** Joins: jgeerds (~jgeerds@55d4a547.access.ecotel.net)
[04:09:06] *** Quits: eggplantade (~Eggplanta@108-201-191-115.lightspeed.sntcca.sbcglobal.net) (Remote host closed the connection)
[04:09:36] *** Joins: melonai (~mel@rnrd.eu)
[04:09:58] <jackdk> so `Server api ~ Server a` does not imply `api ~ a`.
[04:10:03] *** Quits: perrierjouet (~perrier-j@modemcable012.251-130-66.mc.videotron.ca) (Quit: WeeChat 3.4)
[04:12:11] *** Quits: DNH (~DNH@2a02:8108:1100:16d8:a8cc:c7ff:6c11:4c2d) (Quit: My MacBook has gone to sleep. ZZZzzz…)
[04:12:11] *** Quits: alx741 (~alx741@157.100.197.240) (Read error: Connection reset by peer)
[04:12:25] <Axman6> "users" :> GET [User] and "API" :> "users" :> GET [User] would have the same Server isntance but not the same Server arguments
[04:16:17] *** Joins: gabiruh_ (~gabiruh@vps19177.publiccloud.com.br)
[04:16:20] *** Quits: gabiruh (~gabiruh@vps19177.publiccloud.com.br) (Ping timeout: 252 seconds)
[04:16:25] <sshine> $ cd stack && cabal install -v
[04:16:34] <sshine> ... Failed to build stack-2.7.4 because it depends on stack-2.7.4 which itself
[04:16:57] <sshine> somehow I'm not sure how this would ever succeed.
[04:17:07] <geekosaur> that sounds wrong
[04:17:44] <sshine> oh, haha
[04:17:49] <sshine> ... which itself failed to build.
[04:18:00] <geekosaur> lib target failed?
[04:18:14] <geekosaur> the way exe vs. lib target is reported can sometimes be odd
[04:18:41] <sshine> oh, shoot. running out of memory on this darn VPS again.
[04:22:15] *** Quits: Unicorn_Princess (~Unicorn_P@46-54-248-191.static.kate-wing.si) (Remote host closed the connection)
[04:23:08] *** Joins: machinedgod (~machinedg@24.105.81.50)
[04:23:14] *** Quits: Nahra (~user@static.161.95.99.88.clients.your-server.de) (Remote host closed the connection)
[04:26:09] *** Quits: prolic (~prolic@181.122.131.227) (Remote host closed the connection)
[04:26:27] *** Joins: prolic (~prolic@181.122.131.227)
[04:26:31] *** Quits: zeenk (~zeenk@2a02:2f04:a30d:1300:51a3:bcfc:6cda:9fc5) (Quit: Konversation terminated!)
[04:26:57] *** Quits: merijn (~merijn@c-001-001-027.client.esciencecenter.eduvpn.nl) (Ping timeout: 240 seconds)
[04:28:29] *** Joins: alx741 (~alx741@181.199.42.143)
[04:32:17] *** Quits: alx741 (~alx741@181.199.42.143) (Read error: Connection reset by peer)
[04:32:58] *** Joins: alx741 (~alx741@157.100.197.240)
[04:34:00] *** Joins: yauhsien (~yauhsien@61-231-32-103.dynamic-ip.hinet.net)
[04:36:20] *** Joins: mvk (~mvk@2607:fea8:5cdc:bf00::99e7)
[04:36:51] *** Quits: alx741 (~alx741@157.100.197.240) (Read error: Connection reset by peer)
[04:37:09] *** Quits: dolio (~dolio@130.44.130.54) (Quit: ZNC 1.8.2 - https://znc.in)
[04:38:02] *** Quits: aplainzetakind (~johndoe@captainludd.powered.by.lunarbnc.net) (Quit: Free ZNC ~ Powered by LunarBNC: https://LunarBNC.net)
[04:38:11] *** Joins: aplainzetakind (~johndoe@captainludd.powered.by.lunarbnc.net)
[04:38:20] *** Quits: yauhsien (~yauhsien@61-231-32-103.dynamic-ip.hinet.net) (Ping timeout: 256 seconds)
[04:38:39] *** Quits: jgeerds (~jgeerds@55d4a547.access.ecotel.net) (Ping timeout: 256 seconds)
[04:39:53] <romesrf> night everyone
[04:40:04] *** Quits: romesrf (~romes@44.190.189.46.rev.vodafone.pt) (Quit: WeeChat 3.4)
[04:41:29] *** Joins: dolio (~dolio@130.44.130.54)
[04:46:38] <sshine> with 'cabal install', is it possible to add a package constraint on-the-fly to what's mentioned in a .cabal file?
[04:47:12] <sshine> for now I just modified the .cabal file and added the package constraint (aeson < 2), but I wonder if I could add it to the command-line as an argument.
[04:48:17] *** Quits: joo-_ (~joo-_@fsf/member/joo--) (Ping timeout: 240 seconds)
[04:49:30] <int-e> sshine: cabal install --constraint="aeson < 2"  should do the trick
[04:50:27] *** Joins: joo-_ (~joo-_@87-49-147-175-mobile.dk.customer.tdc.net)
[04:50:27] *** Quits: joo-_ (~joo-_@87-49-147-175-mobile.dk.customer.tdc.net) (Changing host)
[04:50:27] *** Joins: joo-_ (~joo-_@fsf/member/joo--)
[04:50:37] <sshine> awesome, thx.
[04:50:45] <jackdk> sshine: cabal.project.freeze files can keep constraints around also
[04:51:02] <geekosaur> or cabal.project.local
[04:51:41] *** Quits: foul_owl (~kerry@174-21-76-71.tukw.qwest.net) (Ping timeout: 256 seconds)
[04:51:43] *** Joins: johnson- (~bc8147f2@cerf.good1.com)
[04:53:45] <jackdk> geekosaur: probably best, good point
[04:54:26] *** Joins: alx741 (~alx741@157.100.197.240)
[04:56:28] *** Quits: wroathe (~wroathe@user/wroathe) (Ping timeout: 256 seconds)
[04:57:55] *** Quits: machinedgod (~machinedg@24.105.81.50) (Ping timeout: 256 seconds)
[04:58:27] *** Quits: nunggu (~q@user/nunggu) (Ping timeout: 276 seconds)
[04:58:46] *** Quits: alx741 (~alx741@157.100.197.240) (Read error: Connection reset by peer)
[05:00:07] *** Joins: nunggu (~q@user/nunggu)
[05:00:56] <sshine> ghc: panic! (the 'impossible' happened) (GHC version 8.10.6: heap overflow
[05:01:50] *** Joins: wroathe (~wroathe@206-55-188-8.fttp.usinternet.com)
[05:01:50] *** Quits: wroathe (~wroathe@206-55-188-8.fttp.usinternet.com) (Changing host)
[05:01:50] *** Joins: wroathe (~wroathe@user/wroathe)
[05:01:57] <sshine> I'm thinking... I already added -M800m, so could it be that it heap overflowed because of this memory constraint?
[05:02:02] <Axman6> Panic at the GHC!
[05:04:56] <jackdk> is it possible to use Liquid Haskell to require a function argument be injective? I haven't played in this space before, but a colleague would like to write `reverseMap :: Ord b => (a -> b) -> [a] -> Maybe (Map b a)` without the `Maybe`
[05:05:47] *** Joins: eggplantade (~Eggplanta@2600:1700:bef1:5e10:7dab:1fa0:9cf6:a5de)
[05:07:02] *** Quits: ix (~ix@213.205.242.104) (Ping timeout: 250 seconds)
[05:07:25] *** Joins: foul_owl (~kerry@94.140.8.89)
[05:08:57] *** Quits: wroathe (~wroathe@user/wroathe) (Ping timeout: 240 seconds)
[05:09:38] *** Quits: absentia (~absentia@user/absentia) (Quit: WeeChat 3.4)
[05:11:18] *** Quits: prolic (~prolic@181.122.131.227) (Remote host closed the connection)
[05:11:37] *** Joins: prolic (~prolic@181.122.131.227)
[05:14:52] *** Joins: wroathe (~wroathe@206-55-188-8.fttp.usinternet.com)
[05:14:52] *** Quits: wroathe (~wroathe@206-55-188-8.fttp.usinternet.com) (Changing host)
[05:14:52] *** Joins: wroathe (~wroathe@user/wroathe)
[05:15:34] *** Joins: alx741 (~alx741@157.100.197.240)
[05:17:43] *** Quits: prolic (~prolic@181.122.131.227) (Remote host closed the connection)
[05:18:02] *** Joins: prolic (~prolic@181.122.131.227)
[05:20:10] *** Quits: wroathe (~wroathe@user/wroathe) (Ping timeout: 272 seconds)
[05:20:27] *** Quits: alx741 (~alx741@157.100.197.240) (Read error: Connection reset by peer)
[05:20:53] *** Joins: wombat875 (~wombat875@pool-72-89-24-154.nycmny.fios.verizon.net)
[05:22:22] *** Joins: jleightcap (~jleightca@user/jleightcap)
[05:24:02] *** Quits: prolic (~prolic@181.122.131.227) (Remote host closed the connection)
[05:24:20] *** Joins: prolic (~prolic@181.122.131.227)
[05:30:50] *** Quits: zebrag (~chris@user/zebrag) (Quit: Konversation terminated!)
[05:31:37] *** Quits: jao (~jao@68.235.43.108) (Ping timeout: 240 seconds)
[05:31:42] <sm> sshine: not saying it's 8.10.6 is at fault, but I'd use 8.10.7 to rule it out
[05:33:06] <sm> and yes, you could try without/with a bigger -M. 800m doesn't sound enough to compile much
[05:33:15] *** Joins: wroathe (~wroathe@206-55-188-8.fttp.usinternet.com)
[05:33:15] *** Quits: wroathe (~wroathe@206-55-188-8.fttp.usinternet.com) (Changing host)
[05:33:15] *** Joins: wroathe (~wroathe@user/wroathe)
[05:34:05] *** Joins: jao (~jao@static-68-235-44-10.cust.tzulo.com)
[05:34:06] <geekosaur> if I understood the earlier discussion right, they're trying to fit it into a small vps
[05:34:18] <geekosaur> may not have enough memory+swap for more heap
[05:36:45] *** Quits: johnson- (~bc8147f2@cerf.good1.com) (Quit: CGI:IRC (Ping timeout))
[05:37:25] *** Joins: vysn (~vysn@user/vysn)
[05:38:07] *** Joins: alx741 (~alx741@157.100.197.240)
[05:38:14] *** Quits: xsperry (~xs@user/xsperry) (Remote host closed the connection)
[05:38:35] *** Joins: califax- (~califax@user/califx)
[05:39:00] *** Quits: TonyStone (~TonyStone@2603-7080-8607-c36a-c0be-54b3-db2c-85e9.res6.spectrum.com) (Remote host closed the connection)
[05:39:02] *** Joins: xsperry (~xs@user/xsperry)
[05:40:31] *** Quits: jleightcap (~jleightca@user/jleightcap) (Quit: WeeChat 3.0)
[05:40:47] *** Joins: jleightcap (~jleightca@73.61.8.75)
[05:42:00] *** Quits: califax (~califax@user/califx) (Ping timeout: 276 seconds)
[05:42:00] *** califax- is now known as califax
[05:42:03] <sshine> sm, I might try with 8.10.7! and yes, geekosaur, there's a memory constraint.
[05:43:07] *** Quits: alx741 (~alx741@157.100.197.240) (Read error: Connection reset by peer)
[05:44:08] *** Quits: prolic (~prolic@181.122.131.227) (Remote host closed the connection)
[05:44:10] *** Joins: perrierjouet (~perrier-j@modemcable012.251-130-66.mc.videotron.ca)
[05:52:20] *** Quits: Topsi (~Tobias@dyndsl-095-033-095-012.ewe-ip-backbone.de) (Read error: Connection reset by peer)
[05:53:13] *** Quits: tcard (~tcard@p2878075-ipngn18701hodogaya.kanagawa.ocn.ne.jp) (Quit: Leaving)
[05:56:37] *** Quits: notzmv (~zmv@user/notzmv) (Ping timeout: 256 seconds)
[05:57:26] *** Joins: tcard (~tcard@p2878075-ipngn18701hodogaya.kanagawa.ocn.ne.jp)
[05:58:17] *** Quits: gentauro (~gentauro@user/gentauro) (Read error: Connection reset by peer)
[05:58:57] *** Quits: mvk (~mvk@2607:fea8:5cdc:bf00::99e7) (Ping timeout: 240 seconds)
[06:00:51] *** Joins: ix (~ix@213.205.242.104)
[06:01:48] *** Joins: alx741 (~alx741@157.100.197.240)
[06:04:09] *** Joins: gentauro (~gentauro@user/gentauro)
[06:05:05] *** Quits: Kaipi (~Kaiepi@156.34.47.253) (Remote host closed the connection)
[06:05:05] *** Quits: alx741 (~alx741@157.100.197.240) (Read error: Connection reset by peer)
[06:05:34] *** Joins: Kaipi (~Kaiepi@156.34.47.253)
[06:12:37] *** Quits: alp (~alp@user/alp) (Ping timeout: 240 seconds)
[06:15:20] *** Quits: xkuru (~xkuru@user/xkuru) (Read error: Connection reset by peer)
[06:21:28] *** Quits: wombat875 (~wombat875@pool-72-89-24-154.nycmny.fios.verizon.net) (Ping timeout: 256 seconds)
[06:23:24] *** Joins: alx741 (~alx741@181.199.42.143)
[06:24:48] *** Joins: mbuf (~Shakthi@223.178.90.64)
[06:25:48] *** Quits: jleightcap (~jleightca@73.61.8.75) (Remote host closed the connection)
[06:26:02] *** Joins: jleightcap (~jleightca@73.61.8.75)
[06:26:07] *** Quits: alx741 (~alx741@181.199.42.143) (Read error: Connection reset by peer)
[06:27:12] *** Quits: xff0x (~xff0x@2001:1a81:5288:ea00:43ab:35e6:a5cd:7882) (Ping timeout: 250 seconds)
[06:27:19] *** Joins: TonyStone (~TonyStone@2603-7080-8607-c36a-5c4e-92cc-80de-49d9.res6.spectrum.com)
[06:27:30] *** Quits: jleightcap (~jleightca@73.61.8.75) (Client Quit)
[06:27:42] *** Quits: jespada (~jespada@87.74.36.188) (Ping timeout: 256 seconds)
[06:27:44] *** Joins: jleightcap (~jleightca@73.61.8.75)
[06:28:55] *** Joins: merijn (~merijn@c-001-001-027.client.esciencecenter.eduvpn.nl)
[06:29:01] *** Joins: xff0x (~xff0x@2001:1a81:52c4:8c00:1680:ae3c:6c22:79cc)
[06:32:42] *** Joins: jespada (~jespada@90.254.246.194)
[06:34:01] *** Quits: lemonsni- (~lemonsnic@86.4.248.115) (Quit: ZNC 1.8.2 - https://znc.in)
[06:37:53] *** Quits: rembo10 (~rembo10@remulis.com) (Quit: ZNC 1.8.2 - https://znc.in)
[06:38:57] *** Joins: rembo10 (~rembo10@remulis.com)
[06:40:51] *** Quits: TonyStone (~TonyStone@2603-7080-8607-c36a-5c4e-92cc-80de-49d9.res6.spectrum.com) (Remote host closed the connection)
[06:40:51] *** Joins: zebrag (~chris@user/zebrag)
[06:41:13] *** Joins: notzmv (~zmv@user/notzmv)
[06:42:24] *** Joins: TonyStone (~TonyStone@cpe-74-76-51-197.nycap.res.rr.com)
[06:42:45] *** Joins: alx741 (~alx741@157.100.197.240)
[06:45:14] *** Quits: Null_A (~null_a@2601:645:8700:2290:a4fb:481a:7fa9:b909) (Read error: Connection reset by peer)
[06:46:32] *** Joins: Null_A (~null_a@2601:645:8700:2290:a4fb:481a:7fa9:b909)
[06:47:28] *** Quits: alx741 (~alx741@157.100.197.240) (Read error: Connection reset by peer)
[06:48:18] *** Joins: lemonsnicks (~lemonsnic@cpc159519-perr18-2-0-cust114.19-1.cable.virginm.net)
[06:53:16] *** Quits: ProfSimm (~ProfSimm@87.227.196.109) (Remote host closed the connection)
[06:55:10] *** Quits: Erutuon (~Erutuon@user/erutuon) (Ping timeout: 272 seconds)
[06:55:10] *** Quits: mon_aaraj (~MonAaraj@user/mon-aaraj/x-4416475) (Ping timeout: 272 seconds)
[06:55:16] *** Quits: Null_A (~null_a@2601:645:8700:2290:a4fb:481a:7fa9:b909) (Remote host closed the connection)
[06:56:04] *** Joins: Null_A (~null_a@2601:645:8700:2290:a4fb:481a:7fa9:b909)
[06:56:31] *** Joins: mon_aaraj (~MonAaraj@user/mon-aaraj/x-4416475)
[06:58:20] *** Quits: merijn (~merijn@c-001-001-027.client.esciencecenter.eduvpn.nl) (Ping timeout: 272 seconds)
[06:58:20] *** Quits: wroathe (~wroathe@user/wroathe) (Ping timeout: 272 seconds)
[07:01:42] *** Quits: td_ (~td@94.134.91.109) (Ping timeout: 256 seconds)
[07:02:08] *** Quits: cjb (~cjb@user/cjb) (Ping timeout: 260 seconds)
[07:03:11] *** Joins: td_ (~td@muedsl-82-207-238-184.citykom.de)
[07:03:54] *** Joins: wroathe (~wroathe@206-55-188-8.fttp.usinternet.com)
[07:03:54] *** Joins: alx741 (~alx741@157.100.197.240)
[07:03:54] *** Quits: wroathe (~wroathe@206-55-188-8.fttp.usinternet.com) (Changing host)
[07:03:54] *** Joins: wroathe (~wroathe@user/wroathe)
[07:06:33] *** Quits: jleightcap (~jleightca@73.61.8.75) (Quit: WeeChat 3.0)
[07:06:46] *** Joins: finn_elija (~finn_elij@user/finn-elija/x-0085643)
[07:06:46] *** Quits: FinnElija (~finn_elij@user/finn-elija/x-0085643) (Killed (NickServ (Forcing logout FinnElija -> finn_elija)))
[07:06:46] *** finn_elija is now known as FinnElija
[07:06:48] *** Joins: jleightcap (~jleightca@73.61.8.75)
[07:08:21] *** Quits: wroathe (~wroathe@user/wroathe) (Ping timeout: 250 seconds)
[07:10:20] *** Quits: hololeap (~hololeap@user/hololeap) (Remote host closed the connection)
[07:10:50] *** Joins: hololeap (~hololeap@user/hololeap)
[07:11:15] *** Quits: Null_A (~null_a@2601:645:8700:2290:a4fb:481a:7fa9:b909) (Remote host closed the connection)
[07:11:30] *** Joins: Null_A (~null_a@2601:645:8700:2290:a4fb:481a:7fa9:b909)
[07:11:53] *** Quits: lemonsnicks (~lemonsnic@cpc159519-perr18-2-0-cust114.19-1.cable.virginm.net) (Quit: ZNC 1.8.2 - https://znc.in)
[07:12:36] *** Joins: lemonsnicks (~lemonsnic@cpc159519-perr18-2-0-cust114.19-1.cable.virginm.net)
[07:13:07] *** Quits: alx741 (~alx741@157.100.197.240) (Read error: Connection reset by peer)
[07:22:52] *** Quits: lemonsnicks (~lemonsnic@cpc159519-perr18-2-0-cust114.19-1.cable.virginm.net) (Quit: ZNC 1.8.2 - https://znc.in)
[07:24:15] *** Joins: lemonsnicks (~lemonsnic@cpc159519-perr18-2-0-cust114.19-1.cable.virginm.net)
[07:26:20] *** Quits: Null_A (~null_a@2601:645:8700:2290:a4fb:481a:7fa9:b909) (Remote host closed the connection)
[07:27:04] *** Joins: Null_A (~null_a@c-98-210-133-39.hsd1.ca.comcast.net)
[07:28:05] *** Joins: Erutuon (~Erutuon@user/erutuon)
[07:29:51] *** Joins: alx741 (~alx741@157.100.197.240)
[07:30:00] *** Quits: Taneb (~Taneb@2001:41c8:51:10d:aaaa:0:aaaa:0) (Quit: I seem to have stopped.)
[07:31:10] *** Joins: Taneb (~Taneb@2001:41c8:51:10d:aaaa:0:aaaa:0)
[07:31:17] *** Quits: foul_owl (~kerry@94.140.8.89) (Ping timeout: 240 seconds)
[07:31:45] *** Quits: Null_A (~null_a@c-98-210-133-39.hsd1.ca.comcast.net) (Ping timeout: 250 seconds)
[07:32:36] *** Joins: Null_A (~null_a@2601:645:8700:2290:a4fb:481a:7fa9:b909)
[07:34:21] *** Quits: alx741 (~alx741@157.100.197.240) (Read error: Connection reset by peer)
[07:34:58] *** Joins: ProfSimm (~ProfSimm@87.227.196.109)
[07:36:17] *** Joins: srk_ (~sorki@user/srk)
[07:36:52] *** Joins: srk| (~sorki@user/srk)
[07:39:17] *** Quits: srk (~sorki@user/srk) (Ping timeout: 240 seconds)
[07:39:35] *** srk| is now known as srk
[07:40:25] *** Quits: srk_ (~sorki@user/srk) (Ping timeout: 250 seconds)
[07:43:05] *** Quits: little_mac (~little_ma@2601:410:4300:3ce0:c9f2:b4e0:2bd7:fbaf) (Remote host closed the connection)
[07:44:46] *** Quits: raehik (~raehik@cpc95906-rdng25-2-0-cust156.15-3.cable.virginm.net) (Ping timeout: 256 seconds)
[07:45:47] <ProfSimm> If we use the state monad to pass the entire state in and out of every 'statement', don't we force execution to be strictly linear. What would the state monad look like if each function can declare which parts of a state it wants
[07:47:07] *** Quits: TonyStone (~TonyStone@cpe-74-76-51-197.nycap.res.rr.com) (Quit: Leaving)
[07:48:35] *** Joins: srk_ (~sorki@user/srk)
[07:50:46] *** Joins: foul_owl (~kerry@217.114.38.246)
[07:52:07] *** Quits: srk (~sorki@user/srk) (Ping timeout: 250 seconds)
[07:52:07] *** srk_ is now known as srk
[07:52:15] *** Quits: burnsidesLlama (~burnsides@dhcp168-012.wadham.ox.ac.uk) (Remote host closed the connection)
[07:52:22] *** Joins: alx741 (~alx741@157.100.197.240)
[07:54:35] <mstksg> ProfSimm: there's the lazy state monad which can sort of flout that linearity
[07:54:49] *** mstksg is now known as jle`
[07:55:25] <jle`> but data dependency becomes driven by evaluation + laziness, which makes it a bit magical
[07:55:40] <jle`> instead of explicitly talking about what parts you want, like what you mention
[07:56:15] *** Quits: alx741 (~alx741@157.100.197.240) (Read error: Connection reset by peer)
[07:56:35] <ProfSimm> jle`: apperance of magic is more than fine, if there's solid approach behind it
[07:56:52] <ProfSimm> jle`: how does it figure out what I want. 
[07:57:14] *** Quits: ix (~ix@213.205.242.104) (Ping timeout: 272 seconds)
[07:57:29] <jle`> the same way laziness works in let bindings, essentially
[07:57:33] <ProfSimm> jle`: it can collect what I touched in the input and maybe what I changed in the output, but to do this it needs to run first
[07:57:34] <jle`> since it's all fancy let bindings underneath
[07:58:26] *** Joins: ix (~ix@213.205.242.108)
[07:58:29] <jle`> the typical example is something like sequencing infinite actions, which is ok as long as you don't touch the part of the state that those actions touch afterwards
[08:01:58] <jle`> hm, actually my example isn't quite right, the whole is still synced with the parts in an annoying way
[08:02:15] *** Joins: TonyStone (~TonyStone@2603-7080-8607-c36a-d449-2685-1032-d72e.res6.spectrum.com)
[08:02:40] *** Quits: ec (~ec@gateway/tor-sasl/ec) (Quit: ec)
[08:04:34] <ProfSimm> Would you say it's correct to say in Haskell everything is a function
[08:04:38] <ProfSimm> Like values are also a function
[08:04:40] <ProfSimm> Everything is
[08:04:51] *** Joins: pavonia_ (~user@user/siracusa)
[08:05:14] <dolio> No.
[08:05:17] <ProfSimm> Oh?
[08:06:44] *** Quits: pavonia (~user@user/siracusa) (Ping timeout: 272 seconds)
[08:06:46] *** pavonia_ is now known as pavonia
[08:07:49] <dolio> Lists, integers, .... Lots of things aren't functions.
[08:08:34] <ProfSimm> dolio: well conceptually can't they be? 
[08:08:43] <ProfSimm> dolio: church ancoding and what not
[08:08:47] <ProfSimm> encoding*
[08:08:57] <ski> all functions take exactly one parameter
[08:09:14] <ski> (dunno what Church has to do with it)
[08:09:16] <dolio> They aren't, though.
[08:09:28] *** Quits: waleee (~waleee@h-98-128-229-110.NA.cust.bahnhof.se) (Ping timeout: 250 seconds)
[08:10:30] *** Joins: pavonia_ (~user@user/siracusa)
[08:11:49] *** Joins: pavonia__ (~user@user/siracusa)
[08:12:24] *** Joins: alx741 (~alx741@157.100.197.240)
[08:12:26] *** Quits: pavonia (~user@user/siracusa) (Ping timeout: 272 seconds)
[08:13:02] <ProfSimm> ski: well you probably know how church booleans work
[08:13:08] *** pavonia__ is now known as pavonia
[08:14:11] <ski> yes. but that doesn't mean values of type `Bool' are functions
[08:14:48] <monochrom> If you are looking for an oversimplification slogan, here is mine: In Haskell, everything is interesting.
[08:15:02] <ProfSimm> interesting to me means complex
[08:15:08] <ProfSimm> I want everything to be boring
[08:15:09] <Inst[m]> agleed
[08:15:31] *** Quits: pavonia_ (~user@user/siracusa) (Ping timeout: 250 seconds)
[08:17:08] *** Quits: alx741 (~alx741@157.100.197.240) (Read error: Connection reset by peer)
[08:17:23] <ProfSimm> I use church encoding for things in my toy lang, so 5 > 6 encodes as  (gt 5 6 then else) where then else is something you pass in to be returned for true and false
[08:17:39] <ProfSimm> Boolean values are a mistake
[08:18:11] <monochrom> Soon you're going to extend that to: All values are a mistake.
[08:18:12] <jle`> ProfSimm: everything is like a function but only if you distort the definition of function to the point where it's no longer useful
[08:18:23] <ProfSimm> monochrom: preach the truth
[08:18:25] <jle`> specifically in Haskell, "function" has a specific technical definition
[08:18:35] <jle`> and there are many non-function values in haskell
[08:18:56] <jle`> so if you're asking about haskell in specific, the answer is no if you're talking about haskell functions
[08:19:08] <ski> functions have a type that looks like `... -> ...'. if the type doesn't look like that, it's not a function
[08:19:24] <ProfSimm> Is there an attempt to make a Haskell dialect where evaluating a function causes it to modify itself, as a way to achieve controlled mutability
[08:19:41] <ski> modify, how ?
[08:20:00] <ProfSimm> ski:   f(arg) = (f', result)
[08:20:08] <ProfSimm> ski: where f' becomes the function 
[08:20:09] <monochrom> Lazy evaluation does that.
[08:20:30] <ski> maybe you'd like stream processors ?
[08:20:34] <ProfSimm> ski: so technically every time you call it the result may differ
[08:20:43] <ProfSimm> ski: how do streams work in Haskell
[08:20:52] <ski> sounds a bit impractical, to me
[08:21:01] <ProfSimm> ski: maybe
[08:21:04] <jle`> ProfSimm: how does that work for something like (f x, f y)
[08:21:09] <jle`> where evaluation order is undefined
[08:21:26] <jle`> or f x might never even be evaluated
[08:21:34] <jle`> snd (f x, f y)
[08:21:38] <ProfSimm> jle`: I guess we need the order
[08:21:53] <jle`> you mean, we need a language where evaluation order is defined?
[08:22:46] <ProfSimm> What about partial order that ensures causality order for invoking the same function, but otherwise remains arbitrary
[08:22:46] <ski>   newtype SSP a b = MkSSP (a -> (b,SSP a b))  -- a synchronous stream processor produces a new one, when receiving an input and producing an output
[08:23:12] *** Quits: Null_A (~null_a@2601:645:8700:2290:a4fb:481a:7fa9:b909) (Remote host closed the connection)
[08:23:40] <ProfSimm> ski:  so the primary distinction here is that the processor is just returned, not reassigned back
[08:24:00] <jle`> ProfSimm: how does something like snd (f x, f y) turn out?
[08:24:01] *** Joins: Null_A (~null_a@c-98-210-133-39.hsd1.ca.comcast.net)
[08:24:44] <ProfSimm> jle`: parsing the expression, seeing they have shared dependency, and evaluating them left to right. Otherwise, order remains undefined
[08:25:16] <ski> "seeing they have shared dependency" -- how does that work ?
[08:25:30] <ProfSimm> ski: referring to the same symbol
[08:25:39] <jle`> i think you def ened to have explicit sequencing for this to be usable, and code readable really
[08:25:52] <ski> what if we replace `f x' with `g x', where, in some other module, we have a definition `g = f' ?
[08:26:17] <ProfSimm> ski: we remove references for mutable state
[08:26:24] <ProfSimm> ski: it's in one place only
[08:26:31] <ProfSimm> ski: immutable refs stay
[08:26:38] <ski> (or, say `f' and `g' are run-time parameters, and some callers will pass the same function for them, while some won't)
[08:27:03] *** Joins: phma_ (~phma@host-67-44-209-104.hnremote.net)
[08:27:49] <ProfSimm> ski: same solution
[08:27:50] *** Quits: jleightcap (~jleightca@73.61.8.75) (Quit: WeeChat 3.0)
[08:28:12] <jle`> if we're talking about a separate language where evaluation order is explicit (like ocaml or idris) then this could make sense
[08:28:16] <ProfSimm> ski: basically we can keep all existing semantics and add mutability with move only semantics on top of it
[08:28:35] <ski> i didn't understand your first solution, in the first place
[08:28:38] <jle`> but tacking it on top of a language with non-strict semantics seems like an easy way to break expectations
[08:28:58] *** Quits: mon_aaraj (~MonAaraj@user/mon-aaraj/x-4416475) (Ping timeout: 256 seconds)
[08:28:59] <ProfSimm> ski: you can't have g = f, because f can exist only in one place. It's g or it's f, not both
[08:29:01] <ski> ("we remove references for mutable state","it's in one place only","immutable refs stay" -- no idea what this means)
[08:29:24] <ProfSimm> Linear types
[08:29:28] <ski> are you saying `f' can only be called once ?
[08:29:37] *** Quits: phma (phma@2001:5b0:215a:a4e8:1976:ce9f:8bfa:70aa) (Ping timeout: 256 seconds)
[08:29:49] *** Joins: mon_aaraj (~MonAaraj@user/mon-aaraj/x-4416475)
[08:29:51] *** Quits: chenqisu1 (~chenqisu1@183.217.200.249) (Ping timeout: 256 seconds)
[08:29:57] <ProfSimm> ski: yes, because after that you're calling f'
[08:30:06] *** Quits: foul_owl (~kerry@217.114.38.246) (Ping timeout: 256 seconds)
[08:30:43] <ProfSimm> ski: basically we have mutabiilty where the only thing you can mutate is replace yourself
[08:30:51] <ProfSimm> Might be interesting
[08:30:56] *** Joins: deadmarshal (~deadmarsh@95.38.115.206)
[08:31:06] <ski> so, you're saying one can't write  (f x,f y)  instead onemust write  (f x,f' y)  ?
[08:31:20] <ProfSimm> ski: we reuse the identifier, but technically it's reassigned
[08:31:58] <ski> "mutabiilty where the only thing you can mutate is replace yourself" -- still sounds like stream processors, to me ..
[08:32:13] <ProfSimm> ski: sure
[08:32:21] <ProfSimm> ski: it's how I started this. A stream
[08:32:34] <dolio> It's called lazy evaluation. :þ
[08:32:35] <ProfSimm> ski: but the stream can't overwrite itself
[08:32:42] <ProfSimm> ski: or can it
[08:32:54] <jle`> not implicitly
[08:32:54] * ski has no idea what that means
[08:32:56] <jle`> explicitly
[08:33:35] *** Quits: Kaipi (~Kaiepi@156.34.47.253) (Remote host closed the connection)
[08:33:37] *** Quits: vysn (~vysn@user/vysn) (Ping timeout: 240 seconds)
[08:34:09] *** Joins: Kaipi (~Kaiepi@156.34.47.253)
[08:34:49] <ski> "we reuse the identifier, but technically it's reassigned" -- so why would `g = f' not be allowed, then ? we're just reusing the identifier, no ?
[08:35:12] *** Joins: alx741 (~alx741@157.100.197.240)
[08:35:19] *** Quits: vglfr (~vglfr@coupling.penchant.volia.net) (Read error: Connection reset by peer)
[08:35:32] *** Joins: vglfr (~vglfr@coupling.penchant.volia.net)
[08:35:59] <ProfSimm> ski: when you type "f x", if is moved into the expression, calculated, and it returns two results. f' which is assigned back to f, and the function result, which is replaced in the expression
[08:36:12] <ProfSimm> ski: so it's always move semantics, and consistent
[08:36:31] <ProfSimm> ski: when you type g = f, you are moving either f to f or f to g
[08:36:35] <ProfSimm> Can't be in both you didn't invoke it
[08:36:45] <ProfSimm> Even if you did, it'd still be in one place
[08:38:31] <ski> it still seems to me you're confusing implementation issues with language issues
[08:38:32] <ProfSimm> ski: I don't know why but I keep imagining it as some sort of Feynman diagram
[08:39:09] <ProfSimm> ski: you hit the function with an argument, it splits in two and each part is a replacement. One of the binding, the other for the expression
[08:39:18] <ski> "f' which is assigned back to f" -- do you ever write this  f'  in source code, in the language ?
[08:39:48] <ProfSimm> ski: no
[08:39:57] *** Joins: meinside (uid24933@id-24933.helmsley.irccloud.com)
[08:39:59] *** Quits: alx741 (~alx741@157.100.197.240) (Read error: Connection reset by peer)
[08:40:12] <ProfSimm> ski: I'm just trying to say f reproduced itself as a modified version of itself f'
[08:40:20] <ProfSimm> which becomes f
[08:40:48] <ProfSimm> ski: pure functions (classic Haskell) would reproduce themselves unmodified, so they emulate usual semantics
[08:41:26] *** Quits: mon_aaraj (~MonAaraj@user/mon-aaraj/x-4416475) (Ping timeout: 256 seconds)
[08:41:48] <ProfSimm> ski: we can actually define it like so. No arguments calls the function. If it's a pure function it returns a copy of itself, so g = f works as expected.
[08:42:06] <ProfSimm> ski: if it's not a pure function, it throws. You need to use a move operator. 
[08:43:00] *** Quits: lemonsnicks (~lemonsnic@cpc159519-perr18-2-0-cust114.19-1.cable.virginm.net) (Quit: ZNC 1.8.2 - https://znc.in)
[08:43:10] *** Joins: mon_aaraj (~MonAaraj@user/mon-aaraj/x-4416475)
[08:45:14] *** Joins: foul_owl (~kerry@207.244.125.36)
[08:46:23] *** Joins: lemonsnicks (~lemonsnic@cpc159519-perr18-2-0-cust114.19-1.cable.virginm.net)
[08:47:57] *** Joins: lavaman (~lavaman@98.38.249.169)
[08:50:26] *** Quits: vglfr (~vglfr@coupling.penchant.volia.net) (Read error: Connection reset by peer)
[08:50:43] *** Joins: vglfr (~vglfr@coupling.penchant.volia.net)
[08:51:42] *** Quits: mon_aaraj (~MonAaraj@user/mon-aaraj/x-4416475) (Ping timeout: 272 seconds)
[08:52:58] *** Quits: lavaman (~lavaman@98.38.249.169) (Ping timeout: 272 seconds)
[08:53:18] *** Joins: mon_aaraj (~MonAaraj@user/mon-aaraj/x-4416475)
[08:54:29] *** Joins: merijn (~merijn@c-001-001-027.client.esciencecenter.eduvpn.nl)
[08:55:31] *** Quits: vglfr (~vglfr@coupling.penchant.volia.net) (Read error: Connection reset by peer)
[08:56:07] *** Joins: jleightcap (7bc4014b62@user/jleightcap)
[08:56:20] *** Joins: alx741 (~alx741@157.100.197.240)
[08:56:26] *** Joins: vglfr (~vglfr@coupling.penchant.volia.net)
[08:57:16] *** Quits: modnar (~modnar@shell.sonic.net) (Quit: No Ping reply in 180 seconds.)
[08:59:36] *** Joins: modnar (~modnar@shell.sonic.net)
[08:59:36] *** Quits: vglfr (~vglfr@coupling.penchant.volia.net) (Read error: Connection reset by peer)
[08:59:59] *** Quits: alx741 (~alx741@157.100.197.240) (Read error: Connection reset by peer)
[09:00:42] *** Joins: rusrushal13 (~rusrushal@103.85.18.34)
[09:03:10] *** Joins: vglfr (~vglfr@coupling.penchant.volia.net)
[09:05:24] *** Quits: modnar (~modnar@shell.sonic.net) (Quit: No Ping reply in 180 seconds.)
[09:05:54] *** Joins: jleightcap1 (~jleightca@73.61.8.75)
[09:07:31] *** Joins: modnar (~modnar@shell.sonic.net)
[09:07:37] *** phma_ is now known as phma
[09:10:20] *** Quits: jao (~jao@static-68-235-44-10.cust.tzulo.com) (Ping timeout: 256 seconds)
[09:16:20] *** Joins: alx741 (~alx741@181.199.42.143)
[09:21:46] *** Quits: Boarders_ (sid425905@id-425905.lymington.irccloud.com) (*.net *.split)
[09:21:46] *** Quits: JSharp (sid4580@id-4580.lymington.irccloud.com) (*.net *.split)
[09:21:46] *** Quits: saolsen (sid26430@id-26430.lymington.irccloud.com) (*.net *.split)
[09:21:46] *** Quits: tapas (sid467876@id-467876.ilkley.irccloud.com) (*.net *.split)
[09:21:46] *** Quits: cbarrett (sid192934@id-192934.helmsley.irccloud.com) (*.net *.split)
[09:21:46] *** Quits: enemeth79 (sid309041@id-309041.lymington.irccloud.com) (*.net *.split)
[09:21:46] *** Quits: bjs (sid190364@user/bjs) (*.net *.split)
[09:21:46] *** Quits: sclv (sid39734@haskell/developer/sclv) (*.net *.split)
[09:21:46] *** Quits: mrianbloom (sid350277@id-350277.ilkley.irccloud.com) (*.net *.split)
[09:21:46] *** Quits: dmj` (sid72307@id-72307.hampstead.irccloud.com) (*.net *.split)
[09:21:46] *** Quits: acertain (sid470584@id-470584.hampstead.irccloud.com) (*.net *.split)
[09:21:46] *** Quits: gaze___ (sid387101@id-387101.helmsley.irccloud.com) (*.net *.split)
[09:21:46] *** Quits: chessai (sid225296@id-225296.lymington.irccloud.com) (*.net *.split)
[09:21:46] *** Quits: hongminhee (sid295@id-295.tinside.irccloud.com) (*.net *.split)
[09:21:46] *** Quits: glguy (x@libera/staff/glguy) (*.net *.split)
[09:21:46] *** Quits: tubogram4 (~tubogram@user/tubogram) (*.net *.split)
[09:21:46] *** Quits: Axman6 (~Axman6@user/axman6) (*.net *.split)
[09:21:46] *** Quits: jleightcap1 (~jleightca@73.61.8.75) (*.net *.split)
[09:21:46] *** Quits: mon_aaraj (~MonAaraj@user/mon-aaraj/x-4416475) (*.net *.split)
[09:21:46] *** Quits: Null_A (~null_a@c-98-210-133-39.hsd1.ca.comcast.net) (*.net *.split)
[09:21:46] *** Quits: td_ (~td@muedsl-82-207-238-184.citykom.de) (*.net *.split)
[09:21:46] *** Quits: perrierjouet (~perrier-j@modemcable012.251-130-66.mc.videotron.ca) (*.net *.split)
[09:21:46] *** Quits: dolio (~dolio@130.44.130.54) (*.net *.split)
[09:21:46] *** Quits: gabiruh_ (~gabiruh@vps19177.publiccloud.com.br) (*.net *.split)
[09:21:46] *** Quits: juhp (~juhp@128.106.188.82) (*.net *.split)
[09:21:46] *** Quits: Vajb (~Vajb@hag-jnsbng11-58c3a8-176.dhcp.inet.fi) (*.net *.split)
[09:21:46] *** Quits: tzh (~tzh@c-24-21-73-154.hsd1.wa.comcast.net) (*.net *.split)
[09:21:46] *** Quits: Sgeo (~Sgeo@user/sgeo) (*.net *.split)
[09:21:46] *** Quits: cross (~cross@spitfire.i.gajendra.net) (*.net *.split)
[09:21:46] *** Quits: zaquest (~notzaques@5.130.79.72) (*.net *.split)
[09:21:46] *** Quits: qwedfg (~qwedfg@user/qwedfg) (*.net *.split)
[09:21:46] *** Quits: hueso (~root@user/hueso) (*.net *.split)
[09:21:46] *** Quits: dcoutts (~duncan@host109-149-1-225.range109-149.btcentralplus.com) (*.net *.split)
[09:21:46] *** Quits: anderson (~ande@user/anderson) (*.net *.split)
[09:21:46] *** Quits: ubert (~Thunderbi@p548c8cd6.dip0.t-ipconnect.de) (*.net *.split)
[09:21:46] *** Quits: wolfshappen (~waff@irc.furworks.de) (*.net *.split)
[09:21:46] *** Quits: ezzieyguywuf (~Unknown@user/ezzieyguywuf) (*.net *.split)
[09:21:46] *** Quits: shriekingnoise (~shrieking@201.231.16.156) (*.net *.split)
[09:21:46] *** Quits: marquis_andras (~marquis_a@124.170.163.166) (*.net *.split)
[09:21:46] *** Quits: MasseR4 (~MasseR@51.15.143.128) (*.net *.split)
[09:21:46] *** Quits: stilgart (~Christoph@chezlefab.net) (*.net *.split)
[09:21:46] *** Quits: superbil (~superbil@1-34-176-171.hinet-ip.hinet.net) (*.net *.split)
[09:21:46] *** Quits: aforemny (~aforemny@static.248.158.34.188.clients.your-server.de) (*.net *.split)
[09:21:46] *** Quits: ishutin (~ishutin@193-110-63-21.cable-modem.hdsnet.hu) (*.net *.split)
[09:21:46] *** Quits: Philonous (~Philonous@user/philonous) (*.net *.split)
[09:21:46] *** Quits: shachaf (~shachaf@user/shachaf) (*.net *.split)
[09:21:46] *** Quits: maerwald (~maerwald@user/maerwald) (*.net *.split)
[09:21:46] *** Quits: red-snail (~snail@static.151.210.203.116.clients.your-server.de) (*.net *.split)
[09:21:46] *** Quits: aria (sid380617@lymington.irccloud.com) (*.net *.split)
[09:21:46] *** Quits: ncopa (~ncopa@alpine/developer/ncopa) (*.net *.split)
[09:21:46] *** Quits: russruss (~russruss@my.russellmcc.com) (*.net *.split)
[09:21:46] *** Quits: robertm (~robertm@lattice.rojoma.com) (*.net *.split)
[09:21:46] *** Quits: swistak (~swistak@185.21.216.141) (*.net *.split)
[09:21:46] *** Quits: wz1000 (~zubin@static.11.113.47.78.clients.your-server.de) (*.net *.split)
[09:21:46] *** Quits: stvc (~stvc@192.241.166.39) (*.net *.split)
[09:21:46] *** Quits: cls (~cls@chalk.lubutu.com) (*.net *.split)
[09:21:46] *** Quits: kmein (~weechat@user/kmein) (*.net *.split)
[09:21:46] *** Quits: c_wraith (~c_wraith@adjoint.us) (*.net *.split)
[09:21:46] *** Quits: statusfailed (~statusfai@statusfailed.com) (*.net *.split)
[09:21:46] *** Quits: canta (~canta@user/canta) (*.net *.split)
[09:21:46] *** Quits: dminuoso (~dminuoso@user/dminuoso) (*.net *.split)
[09:21:46] *** Quits: juri_ (~juri@178.63.35.222) (*.net *.split)
[09:21:46] *** Quits: tolt (~weechat-h@li219-154.members.linode.com) (*.net *.split)
[09:21:46] *** Quits: mmaruseacph2 (~mihai@198.199.100.72) (*.net *.split)
[09:21:46] *** Quits: meejah (~meejah@rutas.meejah.ca) (*.net *.split)
[09:21:46] *** Quits: andjjj23_ (~irc@107.170.228.47) (*.net *.split)
[09:21:46] *** Quits: neverwas (jpneverwas@swissbox.unperson.link) (*.net *.split)
[09:21:46] *** Quits: n3t (n3t@user/n3t) (*.net *.split)
[09:21:46] *** Quits: loonycyborg (~loonycybo@wesnoth/developer/loonycyborg) (*.net *.split)
[09:21:46] *** Quits: carter (sid14827@helmsley.irccloud.com) (*.net *.split)
[09:21:46] *** Quits: TMA (~tma@twin.jikos.cz) (*.net *.split)
[09:21:46] *** Quits: hubvu_ (sid495858@tinside.irccloud.com) (*.net *.split)
[09:21:46] *** Quits: jtmar (~james@jtmar.me) (*.net *.split)
[09:21:46] *** Quits: kawpuh (~kawpuh@66.42.81.80) (*.net *.split)
[09:21:59] *** Joins: gaze___ (sid387101@id-387101.helmsley.irccloud.com)
[09:22:02] *** Joins: enemeth79 (sid309041@id-309041.lymington.irccloud.com)
[09:22:06] *** Joins: saolsen (sid26430@id-26430.lymington.irccloud.com)
[09:22:11] *** Joins: Boarders_ (sid425905@id-425905.lymington.irccloud.com)
[09:22:12] *** Joins: cbarrett (sid192934@2a03:5180:f:1::2:f1a6)
[09:22:19] *** Joins: chessai (sid225296@id-225296.lymington.irccloud.com)
[09:22:22] *** Joins: hongminhee (sid295@2a03:5180:f::127)
[09:22:22] *** Joins: bjs (sid190364@user/bjs)
[09:22:24] *** Joins: jleightcap1 (~jleightca@73.61.8.75)
[09:22:24] *** Joins: mon_aaraj (~MonAaraj@user/mon-aaraj/x-4416475)
[09:22:24] *** Joins: Null_A (~null_a@c-98-210-133-39.hsd1.ca.comcast.net)
[09:22:24] *** Joins: td_ (~td@muedsl-82-207-238-184.citykom.de)
[09:22:24] *** Joins: perrierjouet (~perrier-j@modemcable012.251-130-66.mc.videotron.ca)
[09:22:24] *** Joins: dolio (~dolio@130.44.130.54)
[09:22:24] *** Joins: gabiruh_ (~gabiruh@vps19177.publiccloud.com.br)
[09:22:24] *** Joins: juhp (~juhp@128.106.188.82)
[09:22:24] *** Joins: Vajb (~Vajb@hag-jnsbng11-58c3a8-176.dhcp.inet.fi)
[09:22:24] *** Joins: tzh (~tzh@c-24-21-73-154.hsd1.wa.comcast.net)
[09:22:24] *** Joins: Sgeo (~Sgeo@user/sgeo)
[09:22:24] *** Joins: cross (~cross@spitfire.i.gajendra.net)
[09:22:24] *** Joins: zaquest (~notzaques@5.130.79.72)
[09:22:24] *** Joins: qwedfg (~qwedfg@user/qwedfg)
[09:22:24] *** Joins: hueso (~root@user/hueso)
[09:22:24] *** Joins: dcoutts (~duncan@host109-149-1-225.range109-149.btcentralplus.com)
[09:22:24] *** Joins: anderson (~ande@user/anderson)
[09:22:24] *** Joins: ubert (~Thunderbi@p548c8cd6.dip0.t-ipconnect.de)
[09:22:24] *** Joins: wolfshappen (~waff@irc.furworks.de)
[09:22:24] *** Joins: Axman6 (~Axman6@user/axman6)
[09:22:24] *** Joins: tubogram4 (~tubogram@user/tubogram)
[09:22:24] *** Joins: ezzieyguywuf (~Unknown@user/ezzieyguywuf)
[09:22:24] *** Joins: shriekingnoise (~shrieking@201.231.16.156)
[09:22:24] *** Joins: marquis_andras (~marquis_a@124.170.163.166)
[09:22:24] *** Joins: MasseR4 (~MasseR@51.15.143.128)
[09:22:24] *** Joins: stilgart (~Christoph@chezlefab.net)
[09:22:24] *** Joins: superbil (~superbil@1-34-176-171.hinet-ip.hinet.net)
[09:22:24] *** Joins: kawpuh (~kawpuh@66.42.81.80)
[09:22:24] *** Joins: jtmar (~james@jtmar.me)
[09:22:24] *** Joins: hubvu_ (sid495858@tinside.irccloud.com)
[09:22:24] *** Joins: TMA (~tma@twin.jikos.cz)
[09:22:24] *** Joins: carter (sid14827@helmsley.irccloud.com)
[09:22:24] *** Joins: loonycyborg (~loonycybo@wesnoth/developer/loonycyborg)
[09:22:24] *** Joins: n3t (n3t@user/n3t)
[09:22:24] *** Joins: neverwas (jpneverwas@swissbox.unperson.link)
[09:22:24] *** Joins: andjjj23_ (~irc@107.170.228.47)
[09:22:24] *** Joins: meejah (~meejah@rutas.meejah.ca)
[09:22:24] *** Joins: mmaruseacph2 (~mihai@198.199.100.72)
[09:22:24] *** Joins: tolt (~weechat-h@li219-154.members.linode.com)
[09:22:24] *** Joins: juri_ (~juri@178.63.35.222)
[09:22:24] *** Joins: dminuoso (~dminuoso@user/dminuoso)
[09:22:24] *** Joins: canta (~canta@user/canta)
[09:22:24] *** Joins: statusfailed (~statusfai@statusfailed.com)
[09:22:24] *** Joins: c_wraith (~c_wraith@adjoint.us)
[09:22:24] *** Joins: kmein (~weechat@user/kmein)
[09:22:24] *** Joins: cls (~cls@chalk.lubutu.com)
[09:22:24] *** erbium.libera.chat sets mode: +o Axman6
[09:22:24] *** Joins: stvc (~stvc@192.241.166.39)
[09:22:24] *** Joins: wz1000 (~zubin@static.11.113.47.78.clients.your-server.de)
[09:22:24] *** Joins: swistak (~swistak@185.21.216.141)
[09:22:24] *** Joins: robertm (~robertm@lattice.rojoma.com)
[09:22:24] *** Joins: russruss (~russruss@my.russellmcc.com)
[09:22:24] *** Joins: ncopa (~ncopa@alpine/developer/ncopa)
[09:22:24] *** Joins: aria (sid380617@lymington.irccloud.com)
[09:22:24] *** Joins: red-snail (~snail@static.151.210.203.116.clients.your-server.de)
[09:22:24] *** Joins: maerwald (~maerwald@user/maerwald)
[09:22:24] *** Joins: shachaf (~shachaf@user/shachaf)
[09:22:24] *** Joins: Philonous (~Philonous@user/philonous)
[09:22:24] *** Joins: ishutin (~ishutin@193-110-63-21.cable-modem.hdsnet.hu)
[09:22:24] *** Joins: aforemny (~aforemny@static.248.158.34.188.clients.your-server.de)
[09:22:24] *** Joins: glguy (x@libera/staff/glguy)
[09:22:34] *** Joins: dmj` (sid72307@id-72307.hampstead.irccloud.com)
[09:22:39] *** Joins: tapas (sid467876@id-467876.ilkley.irccloud.com)
[09:22:40] *** Joins: sclv (sid39734@haskell/developer/sclv)
[09:22:49] *** Joins: acertain (sid470584@2a03:5180:f:4::7:2e38)
[09:22:52] *** Joins: mrianbloom (sid350277@2a03:5180:f:3::5:5845)
[09:23:06] *** Joins: JSharp (sid4580@2a03:5180:f:2::11e4)
[09:25:03] *** Quits: kaol (~kaol@94-237-42-30.nl-ams1.upcloud.host) (*.net *.split)
[09:25:03] *** Quits: adium (adium@user/adium) (*.net *.split)
[09:25:03] *** Quits: nckx (~nckx@tobias.gr) (*.net *.split)
[09:25:03] *** Quits: edwtjo (~edwtjo@user/edwtjo) (*.net *.split)
[09:25:03] *** Quits: Aleksejs (~Aleksejs@haskell.lv) (*.net *.split)
[09:25:10] *** Joins: kaol (~kaol@94-237-42-30.nl-ams1.upcloud.host)
[09:25:19] *** Joins: edwtjo (~edwtjo@h-109-228-137-133.A213.priv.bahnhof.se)
[09:25:19] *** Quits: edwtjo (~edwtjo@h-109-228-137-133.A213.priv.bahnhof.se) (Changing host)
[09:25:19] *** Joins: edwtjo (~edwtjo@user/edwtjo)
[09:25:38] *** Quits: alx741 (~alx741@181.199.42.143) (Read error: Connection reset by peer)
[09:26:45] *** Joins: nckx (~nckx@tobias.gr)
[09:27:00] *** Quits: jonathanx_ (~jonathan@h-178-174-176-109.A357.priv.bahnhof.se) (Remote host closed the connection)
[09:27:18] *** Joins: jonathanx_ (~jonathan@h-178-174-176-109.A357.priv.bahnhof.se)
[09:27:28] *** Joins: adium (adium@user/adium)
[09:28:19] *** Quits: merijn (~merijn@c-001-001-027.client.esciencecenter.eduvpn.nl) (Ping timeout: 250 seconds)
[09:28:32] <ProfSimm> https://www.youtube.com/watch?v=5mxKEYzBAVk
[09:28:43] <ProfSimm> "Linear Haskell: Practical Linearity in a Higher-Order Polymorphic Language (Haskell eXchange 2018)"
[09:28:51] <ProfSimm> This is a bit like what I'm thinking about
[09:28:58] *** Quits: hololeap (~hololeap@user/hololeap) (*.net *.split)
[09:28:58] *** Quits: FinnElija (~finn_elij@user/finn-elija/x-0085643) (*.net *.split)
[09:28:58] *** Quits: califax (~califax@user/califx) (*.net *.split)
[09:28:58] *** Quits: nunggu (~q@user/nunggu) (*.net *.split)
[09:28:58] *** Quits: bitdex (~bitdex@gateway/tor-sasl/bitdex) (*.net *.split)
[09:28:58] *** Quits: jpds (~jpds@gateway/tor-sasl/jpds) (*.net *.split)
[09:28:58] *** Quits: adanwan (~adanwan@gateway/tor-sasl/adanwan) (*.net *.split)
[09:28:58] *** Quits: stiell (~stiell@gateway/tor-sasl/stiell) (*.net *.split)
[09:28:58] *** Quits: alMalsamo (~alMalsamo@gateway/tor-sasl/almalsamo) (*.net *.split)
[09:28:58] *** Quits: HotblackDesiato (~HotblackD@gateway/tor-sasl/hotblackdesiato) (*.net *.split)
[09:28:58] *** Quits: azimut (~azimut@gateway/tor-sasl/azimut) (*.net *.split)
[09:28:58] *** Quits: wyrd (~wyrd@gateway/tor-sasl/wyrd) (*.net *.split)
[09:28:58] *** Quits: tiferrei2000 (~tiferrei@user/tiferrei) (*.net *.split)
[09:28:58] *** Quits: LiaoTao (~LiaoTao@gateway/tor-sasl/liaotao) (*.net *.split)
[09:28:58] *** Quits: chexum (~quassel@gateway/tor-sasl/chexum) (*.net *.split)
[09:28:58] *** Quits: ChaiTRex (~ChaiTRex@user/chaitrex) (*.net *.split)
[09:28:59] *** Joins: kanin (~kanin@112.41.64.39)
[09:29:41] <ProfSimm> ski: thoughts? ^
[09:30:18] *** Joins: azimut (~azimut@gateway/tor-sasl/azimut)
[09:30:18] *** Joins: adanwan (~adanwan@gateway/tor-sasl/adanwan)
[09:30:19] *** Joins: califax (~califax@user/califx)
[09:30:19] *** Joins: chexum (~quassel@gateway/tor-sasl/chexum)
[09:30:23] *** Joins: LiaoTao (~LiaoTao@gateway/tor-sasl/liaotao)
[09:30:25] *** Joins: hololeap (~hololeap@user/hololeap)
[09:30:25] *** Joins: FinnElija (~finn_elij@user/finn-elija/x-0085643)
[09:30:29] *** Joins: tiferrei (~tiferrei@user/tiferrei)
[09:30:29] *** Joins: stiell (~stiell@gateway/tor-sasl/stiell)
[09:30:32] *** Joins: jpds (~jpds@gateway/tor-sasl/jpds)
[09:30:39] *** Joins: ChaiTRex (~ChaiTRex@user/chaitrex)
[09:30:39] *** Joins: nunggu (~q@user/nunggu)
[09:31:02] *** Joins: bitdex (~bitdex@gateway/tor-sasl/bitdex)
[09:31:16] *** Joins: HotblackDesiato (~HotblackD@gateway/tor-sasl/hotblackdesiato)
[09:33:57] *** Quits: deadmarshal (~deadmarsh@95.38.115.206) (Ping timeout: 250 seconds)
[09:34:15] *** Joins: wyrd (~wyrd@gateway/tor-sasl/wyrd)
[09:34:17] *** Joins: alMalsamo (~alMalsamo@gateway/tor-sasl/almalsamo)
[09:35:15] *** Quits: vglfr (~vglfr@coupling.penchant.volia.net) (Read error: Connection reset by peer)
[09:35:27] *** Joins: vglfr (~vglfr@coupling.penchant.volia.net)
[09:39:14] *** Quits: rusrushal13 (~rusrushal@103.85.18.34) (Quit: Client closed)
[09:42:44] *** Joins: alx741 (~alx741@157.100.197.240)
[09:43:28] *** Quits: zebrag (~chris@user/zebrag) (Quit: Konversation terminated!)
[09:43:28] *** Quits: vglfr (~vglfr@coupling.penchant.volia.net) (Read error: Connection reset by peer)
[09:44:51] *** Joins: vglfr (~vglfr@coupling.penchant.volia.net)
[09:47:22] *** Quits: alx741 (~alx741@157.100.197.240) (Read error: Connection reset by peer)
[09:49:14] *** Quits: jleightcap1 (~jleightca@73.61.8.75) (Quit: WeeChat 3.0)
[09:49:28] *** Joins: jleightcap1 (~jleightca@73.61.8.75)
[09:51:10] *** Quits: jleightcap1 (~jleightca@73.61.8.75) (Client Quit)
[09:51:24] *** Joins: jleightcap1 (~jleightca@73.61.8.75)
[09:52:52] *** Quits: Null_A (~null_a@c-98-210-133-39.hsd1.ca.comcast.net) (Remote host closed the connection)
[09:53:07] *** Joins: Null_A (~null_a@2601:645:8700:2290:a4fb:481a:7fa9:b909)
[09:54:42] *** Quits: jleightcap1 (~jleightca@73.61.8.75) (Client Quit)
[09:54:57] *** Joins: jleightcap1 (~jleightca@73.61.8.75)
[09:55:26] *** Quits: jleightcap1 (~jleightca@73.61.8.75) (Client Quit)
[10:00:08] *** Joins: k8yun (~k8yun@user/k8yun)
[10:02:15] *** Joins: takuan (~takuan@178-116-218-225.access.telenet.be)
[10:02:32] <ProfSimm> https://www.youtube.com/watch?v=WZ_0FSGeq2s
[10:02:41] <ProfSimm> "Haskell 2021 - Why Functional Programming with Linear Types Matters"
[10:02:51] <ProfSimm> "Pizza delivery is not pizza duplication"
[10:03:02] *** Quits: kanin (~kanin@112.41.64.39) (Ping timeout: 256 seconds)
[10:03:40] *** Joins: shapr` (~user@pool-173-73-44-186.washdc.fios.verizon.net)
[10:03:40] *** Joins: alx741 (~alx741@157.100.197.240)
[10:05:17] *** Quits: shapr (~user@pool-173-73-44-186.washdc.fios.verizon.net) (Ping timeout: 240 seconds)
[10:08:13] *** Quits: alx741 (~alx741@157.100.197.240) (Read error: Connection reset by peer)
[10:10:53] *** Quits: vglfr (~vglfr@coupling.penchant.volia.net) (Read error: Connection reset by peer)
[10:11:49] *** Joins: vglfr (~vglfr@coupling.penchant.volia.net)
[10:12:19] *** Joins: deadmarshal (~deadmarsh@95.38.115.206)
[10:14:09] *** Joins: fef (~thedawn@user/thedawn)
[10:24:10] *** Quits: Erutuon (~Erutuon@user/erutuon) (Ping timeout: 272 seconds)
[10:26:26] *** Joins: Erutuon (~Erutuon@user/erutuon)
[10:26:57] *** Quits: mrkajetanp (~mrkajetan@88.98.245.28) (Ping timeout: 240 seconds)
[10:27:08] *** Joins: alx741 (~alx741@181.199.42.143)
[10:27:30] *** Quits: Null_A (~null_a@2601:645:8700:2290:a4fb:481a:7fa9:b909) (Remote host closed the connection)
[10:30:21] *** Quits: alx741 (~alx741@181.199.42.143) (Read error: Connection reset by peer)
[10:33:03] *** Quits: geekosaur (~geekosaur@xmonad/geekosaur) (Remote host closed the connection)
[10:33:27] *** Joins: geekosaur (~geekosaur@xmonad/geekosaur)
[10:34:46] *** Quits: mon_aaraj (~MonAaraj@user/mon-aaraj/x-4416475) (Ping timeout: 256 seconds)
[10:36:40] *** Joins: mon_aaraj (~MonAaraj@user/mon-aaraj/x-4416475)
[10:39:10] *** Quits: shriekingnoise (~shrieking@201.231.16.156) (Quit: Quit)
[10:39:28] *** Quits: vglfr (~vglfr@coupling.penchant.volia.net) (Read error: Connection reset by peer)
[10:39:38] *** Joins: vglfr (~vglfr@coupling.penchant.volia.net)
[10:41:10] *** Quits: cynomys (~cynomys@user/cynomys) (Quit: leaving)
[10:41:29] *** Joins: cynomys (~cynomys@user/cynomys)
[10:43:54] *** Joins: michalz (~michalz@185.246.204.89)
[10:45:02] *** Joins: Null_A (~null_a@2601:645:8700:2290:a4fb:481a:7fa9:b909)
[10:45:14] *** Joins: Nahra (~user@static.161.95.99.88.clients.your-server.de)
[10:47:22] *** Joins: alx741 (~alx741@157.100.197.240)
[10:48:44] *** Quits: Null_A (~null_a@2601:645:8700:2290:a4fb:481a:7fa9:b909) (Remote host closed the connection)
[10:48:59] *** Joins: Null_A (~null_a@2601:645:8700:2290:a4fb:481a:7fa9:b909)
[10:49:36] *** Quits: shapr` (~user@pool-173-73-44-186.washdc.fios.verizon.net) (Ping timeout: 252 seconds)
[10:49:44] *** Parts: jakalx (~jakalx@base.jakalx.net) ()
[10:55:31] *** Quits: slowButPresent (~slowButPr@user/slowbutpresent) (Quit: leaving)
[10:57:14] *** Quits: alx741 (~alx741@157.100.197.240) (Read error: Connection reset by peer)
[10:59:44] *** Quits: vglfr (~vglfr@coupling.penchant.volia.net) (Read error: Connection reset by peer)
[10:59:56] *** Joins: vglfr (~vglfr@coupling.penchant.volia.net)
[11:01:47] *** Joins: kanin (~kanin@112.41.64.39)
[11:01:47] *** Quits: vglfr (~vglfr@coupling.penchant.volia.net) (Read error: Connection reset by peer)
[11:02:39] *** Joins: vglfr (~vglfr@coupling.penchant.volia.net)
[11:02:44] *** Quits: [itchyjunk] (~itchyjunk@user/itchyjunk/x-7353470) (Read error: Connection reset by peer)
[11:04:58] *** Joins: wroathe (~wroathe@206-55-188-8.fttp.usinternet.com)
[11:04:59] *** Quits: wroathe (~wroathe@206-55-188-8.fttp.usinternet.com) (Changing host)
[11:04:59] *** Joins: wroathe (~wroathe@user/wroathe)
[11:08:34] *** Quits: k8yun (~k8yun@user/k8yun) (Quit: Leaving)
[11:09:32] *** Joins: lortabac (~lortabac@2a01:e0a:541:b8f0:9c11:561e:c86d:bf05)
[11:10:24] *** Quits: wroathe (~wroathe@user/wroathe) (Ping timeout: 272 seconds)
[11:12:19] *** Joins: max22- (~maxime@lfbn-ren-1-1026-62.w92-139.abo.wanadoo.fr)
[11:14:55] *** Joins: alx741 (~alx741@157.100.197.240)
[11:16:33] *** Quits: Null_A (~null_a@2601:645:8700:2290:a4fb:481a:7fa9:b909) (Remote host closed the connection)
[11:18:40] *** Joins: jakalx (~jakalx@base.jakalx.net)
[11:19:56] *** Joins: cosimone (~user@2001:b07:ae5:db26:c24a:d20:4d91:1e20)
[11:20:33] *** Quits: alx741 (~alx741@157.100.197.240) (Read error: Connection reset by peer)
[11:21:30] *** Quits: vglfr (~vglfr@coupling.penchant.volia.net) (Read error: Connection reset by peer)
[11:21:46] *** Joins: cfricke (~cfricke@user/cfricke)
[11:22:06] *** Joins: vglfr (~vglfr@coupling.penchant.volia.net)
[11:22:36] *** Quits: Erutuon (~Erutuon@user/erutuon) (Ping timeout: 240 seconds)
[11:23:53] *** Joins: Null_A (~null_a@2601:645:8700:2290:a4fb:481a:7fa9:b909)
[11:26:14] *** Joins: gehmehgeh (~user@user/gehmehgeh)
[11:27:45] *** Quits: cfricke (~cfricke@user/cfricke) (Quit: WeeChat 3.3)
[11:27:59] *** Joins: kuribas (~user@ptr-25vy0i9o6zfp0yko61a.18120a2.ip6.access.telenet.be)
[11:28:50] *** Joins: dhouthoo (~dhouthoo@178-117-36-167.access.telenet.be)
[11:29:01] *** Joins: cfricke (~cfricke@user/cfricke)
[11:29:50] *** Joins: merijn (~merijn@c-001-001-027.client.esciencecenter.eduvpn.nl)
[11:32:12] *** Quits: deadmarshal (~deadmarsh@95.38.115.206) (Ping timeout: 240 seconds)
[11:33:28] *** Quits: Null_A (~null_a@2601:645:8700:2290:a4fb:481a:7fa9:b909) (Remote host closed the connection)
[11:34:45] *** Joins: zeenk (~zeenk@2a02:2f04:a30d:1300:51a3:bcfc:6cda:9fc5)
[11:37:38] *** Joins: coot (~coot@213.134.190.95)
[11:38:21] *** Joins: alx741 (~alx741@157.100.197.240)
[11:39:19] <dminuoso> Is there a formal or well-accepted name for a function with multiple definitions?
[11:39:29] *** Joins: mc47 (~mc47@xmonad/TheMC47)
[11:39:34] <dminuoso> i.e. `f <pat_1> = ...; f <pat_2> = ...`
[11:39:53] <dminuoso> Perhaps even from mathematics?
[11:40:23] <Franciman> «function defined by cases»
[11:40:35] <Franciman> (?)
[11:42:47] *** Quits: alx741 (~alx741@157.100.197.240) (Read error: Connection reset by peer)
[11:43:12] <kuribas> dminuoso: multivalued function?
[11:43:28] <Franciman> one usually defines a multivalued function from X to Y
[11:43:33] <Franciman> as a function from X to the powerset of Y
[11:43:51] <Franciman> for some definition of «usually» lol
[11:43:59] *** Joins: briandaed (~root@109.95.142.92.r.toneticgroup.pl)
[11:44:11] <kuribas> if it's not multivalued it's just a function.
[11:44:32] *** Quits: max22- (~maxime@lfbn-ren-1-1026-62.w92-139.abo.wanadoo.fr) (Remote host closed the connection)
[11:44:49] <kuribas> multiple cases is not multiple definitions.
[11:45:02] <kuribas> it's one definition with multiple cases.
[11:45:17] <Franciman> multiple values is not multiple definitions either
[11:45:20] *** Joins: max22- (~maxime@2a01cb08833598004c8de2e630f51a33.ipv6.abo.wanadoo.fr)
[11:45:31] <Franciman> so not sure
[11:45:45] <kuribas> true
[11:45:50] *** Joins: rusrushal13 (~rusrushal@103.85.18.34)
[11:45:58] *** Joins: tromp (~textual@dhcp-077-249-230-040.chello.nl)
[11:45:59] <Franciman> i tought `f <pat_1> = ...; f <pat_2> = ...` qualified as a single definition with multiple cases
[11:46:12] *** Joins: vysn (~vysn@user/vysn)
[11:46:43] <Franciman> ah another possibility is an overloaded function
[11:46:55] <Franciman> if you have different definitions, for example like for (<>) in Data.Semigroup
[11:47:16] <dminuoso> Mmm
[11:47:51] *** Joins: deadmarshal (~deadmarsh@95.38.115.206)
[11:47:52] *** Quits: vglfr (~vglfr@coupling.penchant.volia.net) (Read error: Connection reset by peer)
[11:48:03] *** Joins: vglfr (~vglfr@coupling.penchant.volia.net)
[11:48:09] <[exa]> dminuoso: in THIH these are called alternatives
[11:48:51] *** Quits: jonathanx_ (~jonathan@h-178-174-176-109.A357.priv.bahnhof.se) (Remote host closed the connection)
[11:51:08] *** Joins: Null_A (~null_a@2601:645:8700:2290:a4fb:481a:7fa9:b909)
[11:51:08] *** Quits: vglfr (~vglfr@coupling.penchant.volia.net) (Read error: Connection reset by peer)
[11:51:36] *** Joins: jonathanx (~jonathan@h-178-174-176-109.A357.priv.bahnhof.se)
[11:52:06] *** Joins: vglfr (~vglfr@coupling.penchant.volia.net)
[11:55:48] *** Quits: Null_A (~null_a@2601:645:8700:2290:a4fb:481a:7fa9:b909) (Ping timeout: 240 seconds)
[11:56:30] *** Quits: cosimone (~user@2001:b07:ae5:db26:c24a:d20:4d91:1e20) (Read error: Connection reset by peer)
[11:57:02] *** Quits: litharge (litharge@libera/bot/litharge) (Quit: upgrade)
[11:58:33] *** Joins: litharge (litharge@libera/bot/litharge)
[11:59:29] *** Joins: chele (~chele@user/chele)
[12:00:10] *** Joins: cosimone (~user@93-44-187-99.ip98.fastwebnet.it)
[12:00:41] *** Joins: alx741 (~alx741@181.199.42.143)
[12:02:39] *** Quits: Sgeo (~Sgeo@user/sgeo) (Read error: Connection reset by peer)
[12:04:23] *** Quits: alx741 (~alx741@181.199.42.143) (Read error: Connection reset by peer)
[12:10:13] *** Joins: alp (~alp@user/alp)
[12:11:37] *** Quits: cosimone (~user@93-44-187-99.ip98.fastwebnet.it) (Remote host closed the connection)
[12:12:26] *** Joins: random-jellyfish (~random-je@user/random-jellyfish)
[12:13:25] *** Joins: acidjnk (~acidjnk@p200300d0c705758148c438f13433725d.dip0.t-ipconnect.de)
[12:14:02] *** Joins: cosimone (~user@2001:b07:ae5:db26:c24a:d20:4d91:1e20)
[12:14:40] *** Quits: cosimone (~user@2001:b07:ae5:db26:c24a:d20:4d91:1e20) (Remote host closed the connection)
[12:15:38] *** Joins: cosimone (~user@2001:b07:ae5:db26:c24a:d20:4d91:1e20)
[12:16:47] *** Joins: fendor (~fendor@91.141.33.218.wireless.dyn.drei.com)
[12:18:29] *** Joins: machinedgod (~machinedg@24.105.81.50)
[12:18:58] *** Quits: pavonia (~user@user/siracusa) (Quit: Bye!)
[12:21:08] *** Joins: alx741 (~alx741@157.100.197.240)
[12:24:58] *** Quits: alx741 (~alx741@157.100.197.240) (Read error: Connection reset by peer)
[12:25:03] *** Joins: mastarija (~mastarija@2a05:4f46:e04:6000:7887:96ce:d1f2:e42d)
[12:26:21] *** Joins: Null_A (~null_a@2601:645:8700:2290:a4fb:481a:7fa9:b909)
[12:26:23] <lortabac> dminuoso: I would call it a function with multiple equations
[12:27:10] <dminuoso> lortabac: Ah I like that.
[12:27:16] <lortabac> but it's just syntactic sugar for (potentially nested) case expressions, so whatever formal definitions you are looking for, maybe you should find it for case expressions
[12:30:06] *** Quits: jchia[m] (~jchiamatr@2001:470:69fc:105::c50b) (Quit: You have been kicked for being idle)
[12:30:08] *** Quits: Nate[m] (~m52957mat@2001:470:69fc:105::1:591a) (Quit: You have been kicked for being idle)
[12:30:08] *** Quits: jesser[m] (~jessermat@2001:470:69fc:105::d5ae) (Quit: You have been kicked for being idle)
[12:31:00] *** Quits: Null_A (~null_a@2601:645:8700:2290:a4fb:481a:7fa9:b909) (Ping timeout: 240 seconds)
[12:36:44] *** Quits: eggplantade (~Eggplanta@2600:1700:bef1:5e10:7dab:1fa0:9cf6:a5de) (Remote host closed the connection)
[12:42:31] *** Joins: alx741 (~alx741@181.199.42.143)
[12:43:27] *** Quits: vysn (~vysn@user/vysn) (Ping timeout: 252 seconds)
[12:43:43] <ProfSimm> Is there a short way to have an expression with a where clause inline for a lamdba
[12:43:54] <ProfSimm> (expr where definitions)
[12:44:13] <lortabac> ProfSimm: a let expression?
[12:45:02] <ProfSimm> lortabac: why let? I want where
[12:45:35] <lortabac> you can't have a where in a lambda, but you can have a let
[12:45:44] <lortabac> (unless I misunderstood your question)
[12:45:54] <ProfSimm> You understood it. thanks
[12:46:01] <ProfSimm> Is there a reason for this limitatin
[12:46:07] <ProfSimm> ion*
[12:46:50] <lortabac> I don't know, maybe the syntax would be too complicated/ambiguous
[12:47:00] *** Quits: alx741 (~alx741@181.199.42.143) (Read error: Connection reset by peer)
[12:48:55] *** Quits: ix (~ix@213.205.242.108) (Read error: Connection reset by peer)
[12:49:14] *** Joins: razetime (~quassel@49.207.198.36)
[12:49:40] *** Joins: lavaman (~lavaman@98.38.249.169)
[12:51:09] *** Quits: mon_aaraj (~MonAaraj@user/mon-aaraj/x-4416475) (Ping timeout: 252 seconds)
[12:52:24] <dminuoso> Well if you insist on a where clause, you can use `case () of _ -> ...; where <declaration-group>`
[12:52:32] <dminuoso> i.e
[12:52:58] <dminuoso> `\x -> case () of _ -> <expr>\n where <declaration-group>`
[12:53:03] *** Joins: mon_aaraj (~MonAaraj@user/mon-aaraj/x-4416475)
[12:53:18] <dminuoso> A bit more idiomatic might using a named helper function (say `go`), then you have your where decl group
[12:53:43] <dminuoso> i.e.`f x y = foldr go x y where go = ...; blah = ...;`
[12:53:54] *** Quits: lavaman (~lavaman@98.38.249.169) (Ping timeout: 252 seconds)
[12:58:36] *** Quits: merijn (~merijn@c-001-001-027.client.esciencecenter.eduvpn.nl) (Ping timeout: 240 seconds)
[12:58:47] *** Joins: merijn (~merijn@c-001-001-027.client.esciencecenter.eduvpn.nl)
[12:59:06] *** Joins: nunggu_ (~q@user/nunggu)
[12:59:39] *** Joins: `2jt (~jtomas@130.red-88-22-46.staticip.rima-tde.net)
[13:00:01] *** Joins: Null_A (~null_a@2601:645:8700:2290:a4fb:481a:7fa9:b909)
[13:00:15] *** Quits: nunggu (~q@user/nunggu) (Ping timeout: 240 seconds)
[13:00:43] *** Quits: random-jellyfish (~random-je@user/random-jellyfish) (Ping timeout: 256 seconds)
[13:01:35] *** Joins: pretty_dumm_guy (trottel@gateway/vpn/protonvpn/prettydummguy/x-88029655)
[13:02:35] *** Quits: pretty_dumm_guy (trottel@gateway/vpn/protonvpn/prettydummguy/x-88029655) (Client Quit)
[13:03:54] *** Joins: alx741 (~alx741@181.199.42.143)
[13:04:18] *** Joins: pretty_dumm_guy (trottel@gateway/vpn/protonvpn/prettydummguy/x-88029655)
[13:04:36] *** Quits: Null_A (~null_a@2601:645:8700:2290:a4fb:481a:7fa9:b909) (Ping timeout: 240 seconds)
[13:04:37] <phma> I'm trying to use tasty. I added a line "import Test.Tasty.HUnit", and similarly for QuickCheck and SmallCheck, as in the example, but got "Could not find module" errors for all of them.
[13:07:03] *** Joins: __monty__ (~toonn@user/toonn)
[13:07:09] *** Joins: eggplantade (~Eggplanta@2600:1700:bef1:5e10:7dab:1fa0:9cf6:a5de)
[13:07:45] *** Joins: mrkajetanp (~mrkajetan@88.98.245.28)
[13:08:14] *** Quits: alx741 (~alx741@181.199.42.143) (Read error: Connection reset by peer)
[13:11:24] *** Quits: eggplantade (~Eggplanta@2600:1700:bef1:5e10:7dab:1fa0:9cf6:a5de) (Ping timeout: 240 seconds)
[13:12:30] <[exa]> phma: what command is generating the "Could not find module" error? I assume you're building with cabal right?
[13:12:54] <phma> stack test
[13:13:16] *** Quits: merijn (~merijn@c-001-001-027.client.esciencecenter.eduvpn.nl) (Ping timeout: 272 seconds)
[13:13:19] <[exa]> do you have tasty listed in dependencies?
[13:13:48] <phma> build-depends:	base, tasty
[13:14:17] <phma> that's under "test-suite test"
[13:15:08] *** Joins: merijn (~merijn@c-001-001-027.client.esciencecenter.eduvpn.nl)
[13:15:27] <[exa]> ah yes, the HUnit compatibility requires `tasty-hunit-compat` package
[13:15:39] <[exa]> you may check eg here: https://hoogle.haskell.org/?hoogle=Test.Tasty.HUnit
[13:16:41] *** Joins: olle (~olle@i5E866D85.versanet.de)
[13:17:06] <[exa]> (or maybe just tasty-hunit, I didnt really use it)
[13:17:07] *** Quits: bliminse (~bliminse@host86-158-241-239.range86-158.btcentralplus.com) (Quit: leaving)
[13:17:43] <phma> do I put that in build-depends or in an import statement?
[13:18:07] <[exa]> in the test build depends
[13:19:54] <phma> I still get the errors on SmallCheck and QuickCheck
[13:21:47] <phma> added tasty-quickcheck to depends, compiling...
[13:22:13] <[exa]> might need additional depends, yes. Using hoogle is likely the simplest way to see the package names you need to enable the required modules
[13:22:25] *** Joins: bliminse (~bliminse@host86-158-241-239.range86-158.btcentralplus.com)
[13:25:17] *** Joins: alx741 (~alx741@181.199.42.143)
[13:26:23] *** Joins: ix (~ix@2a02:8010:674f:0:a71f:d8ff:17eb:65ba)
[13:28:06] <phma> I got an error in test.hs. Now to delete the sample tests and add my own.
[13:28:52] *** Quits: alx741 (~alx741@181.199.42.143) (Read error: Connection reset by peer)
[13:30:49] *** Quits: geekosaur (~geekosaur@xmonad/geekosaur) (Remote host closed the connection)
[13:34:16] *** Joins: geekosaur (~geekosaur@xmonad/geekosaur)
[13:35:42] *** Joins: Null_A (~null_a@2601:645:8700:2290:a4fb:481a:7fa9:b909)
[13:39:14] *** Joins: jgeerds (~jgeerds@55d4a547.access.ecotel.net)
[13:40:12] *** Quits: Null_A (~null_a@2601:645:8700:2290:a4fb:481a:7fa9:b909) (Ping timeout: 240 seconds)
[13:43:02] *** Quits: vglfr (~vglfr@coupling.penchant.volia.net) (Ping timeout: 272 seconds)
[13:43:32] *** Joins: zincy_ (~zincy@2a00:23c8:970c:4801:39f9:90f7:922:e73b)
[13:43:38] *** Joins: vglfr (~vglfr@coupling.penchant.volia.net)
[13:45:32] *** Joins: alx741 (~alx741@157.100.197.240)
[13:45:49] *** Quits: geekosaur (~geekosaur@xmonad/geekosaur) (Remote host closed the connection)
[13:45:50] *** Joins: DNH (~DNH@2a02:8108:1100:16d8:bca1:a272:d62b:37ab)
[13:47:48] *** Quits: zincy_ (~zincy@2a00:23c8:970c:4801:39f9:90f7:922:e73b) (Ping timeout: 252 seconds)
[13:49:39] *** Joins: geekosaur (~geekosaur@xmonad/geekosaur)
[13:49:39] *** Quits: alx741 (~alx741@157.100.197.240) (Read error: Connection reset by peer)
[13:52:12] *** Joins: MajorBiscuit (~MajorBisc@wlan-145-94-218-48.wlan.tudelft.nl)
[13:57:00] *** Joins: little_mac (~little_ma@2601:410:4300:3ce0:4084:84c5:95c2:a194)
[13:57:16] *** Joins: cstml (~cstml@user/cstml)
[13:57:59] *** Quits: tzh (~tzh@c-24-21-73-154.hsd1.wa.comcast.net) (Quit: zzz)
[13:58:43] *** Joins: raehik (~raehik@cpc95906-rdng25-2-0-cust156.15-3.cable.virginm.net)
[13:59:21] *** Quits: mon_aaraj (~MonAaraj@user/mon-aaraj/x-4416475) (Ping timeout: 252 seconds)
[14:01:07] *** Joins: mon_aaraj (~MonAaraj@user/mon-aaraj/x-4416475)
[14:07:51] *** Joins: alx741 (~alx741@157.100.197.240)
[14:10:54] *** Quits: pooryorick (~pooryoric@87-119-174-173.tll.elisa.ee) (Ping timeout: 272 seconds)
[14:11:12] *** Joins: pooryorick (~pooryoric@87-119-174-173.tll.elisa.ee)
[14:11:36] *** Quits: alx741 (~alx741@157.100.197.240) (Read error: Connection reset by peer)
[14:11:40] *** Quits: zeenk (~zeenk@2a02:2f04:a30d:1300:51a3:bcfc:6cda:9fc5) (Quit: Konversation terminated!)
[14:14:00] *** Quits: DNH (~DNH@2a02:8108:1100:16d8:bca1:a272:d62b:37ab) (Quit: My MacBook has gone to sleep. ZZZzzz…)
[14:15:05] *** Joins: mmhat (~mmh@55d4de53.access.ecotel.net)
[14:17:36] *** Quits: razetime (~quassel@49.207.198.36) (Quit: https://quassel-irc.org - Chat comfortably. Anywhere.)
[14:21:52] *** Quits: cstml (~cstml@user/cstml) (Quit: Connection closed)
[14:29:13] *** Joins: alx741 (~alx741@181.199.42.143)
[14:30:24] *** Joins: CiaoSen (~Jura@p200300c95737a2002a3a4dfffe84dbd5.dip0.t-ipconnect.de)
[14:30:36] *** Quits: little_mac (~little_ma@2601:410:4300:3ce0:4084:84c5:95c2:a194) (Ping timeout: 240 seconds)
[14:31:52] *** Quits: azimut (~azimut@gateway/tor-sasl/azimut) (Remote host closed the connection)
[14:31:56] *** Quits: fef (~thedawn@user/thedawn) (Remote host closed the connection)
[14:32:20] *** Joins: azimut (~azimut@gateway/tor-sasl/azimut)
[14:32:23] *** Joins: fef (~thedawn@user/thedawn)
[14:32:41] *** Quits: alx741 (~alx741@181.199.42.143) (Read error: Connection reset by peer)
[14:37:15] *** Joins: Lycurgus (~juan@98.4.112.204)
[14:41:53] *** Quits: mastarija (~mastarija@2a05:4f46:e04:6000:7887:96ce:d1f2:e42d) (Quit: Leaving)
[14:43:32] *** Quits: rusrushal13 (~rusrushal@103.85.18.34) (Quit: Client closed)
[14:49:29] *** Joins: alx741 (~alx741@157.100.197.240)
[14:52:42] *** Quits: CiaoSen (~Jura@p200300c95737a2002a3a4dfffe84dbd5.dip0.t-ipconnect.de) (Ping timeout: 252 seconds)
[14:53:11] *** Quits: alx741 (~alx741@157.100.197.240) (Read error: Connection reset by peer)
[14:53:55] *** Joins: little_mac (~little_ma@2601:410:4300:3ce0:4084:84c5:95c2:a194)
[14:54:57] *** Quits: econo (uid147250@user/econo) (Quit: Connection closed for inactivity)
[15:08:18] *** Quits: forell (~forell@user/forell) (Quit: ZNC - https://znc.in)
[15:09:06] *** Joins: forell (~forell@user/forell)
[15:09:44] *** Joins: alx741 (~alx741@157.100.197.240)
[15:14:13] *** Quits: alx741 (~alx741@157.100.197.240) (Read error: Connection reset by peer)
[15:14:42] *** Quits: ProfSimm (~ProfSimm@87.227.196.109) (Remote host closed the connection)
[15:15:00] *** Joins: ProfSimm (~ProfSimm@87.227.196.109)
[15:18:40] *** Quits: deadmarshal (~deadmarsh@95.38.115.206) (Ping timeout: 272 seconds)
[15:22:27] *** Quits: ProfSimm (~ProfSimm@87.227.196.109) (Remote host closed the connection)
[15:22:28] *** Quits: merijn (~merijn@c-001-001-027.client.esciencecenter.eduvpn.nl) (Ping timeout: 272 seconds)
[15:22:46] *** Joins: ProfSimm (~ProfSimm@87.227.196.109)
[15:23:50] *** Joins: merijn (~merijn@c-001-001-027.client.esciencecenter.eduvpn.nl)
[15:25:50] *** Joins: vysn (~vysn@user/vysn)
[15:28:20] *** Joins: Pickchea (~private@user/pickchea)
[15:29:00] *** Quits: alp (~alp@user/alp) (Ping timeout: 252 seconds)
[15:30:28] *** Joins: bontaq (~user@ool-45779fe5.dyn.optonline.net)
[15:31:38] *** Joins: CiaoSen (~Jura@p200300c95737a2002a3a4dfffe84dbd5.dip0.t-ipconnect.de)
[15:32:02] *** Joins: alx741 (~alx741@157.100.197.240)
[15:32:13] *** Joins: dschrempf (~dominik@070-207.dynamic.dsl.fonira.net)
[15:33:57] *** Quits: merijn (~merijn@c-001-001-027.client.esciencecenter.eduvpn.nl) (Ping timeout: 252 seconds)
[15:34:34] *** Joins: alp (~alp@user/alp)
[15:34:46] *** Joins: DNH (~DNH@2a02:8108:1100:16d8:bca1:a272:d62b:37ab)
[15:34:55] *** Joins: merijn (~merijn@c-001-001-027.client.esciencecenter.eduvpn.nl)
[15:36:13] *** Quits: alx741 (~alx741@157.100.197.240) (Read error: Connection reset by peer)
[15:38:09] *** Joins: kayprish (~kayprish@cable-24-135-254-227.dynamic.sbb.rs)
[15:40:55] *** Joins: gurkenglas (~gurkengla@dslb-188-096-121-068.188.096.pools.vodafone-ip.de)
[15:44:24] *** Quits: merijn (~merijn@c-001-001-027.client.esciencecenter.eduvpn.nl) (Ping timeout: 252 seconds)
[15:46:24] *** Joins: merijn (~merijn@c-001-001-027.client.esciencecenter.eduvpn.nl)
[15:49:42] *** Quits: jgeerds (~jgeerds@55d4a547.access.ecotel.net) (Ping timeout: 272 seconds)
[15:54:34] *** Joins: alx741 (~alx741@181.199.42.143)
[15:54:44] *** Quits: gurkenglas (~gurkengla@dslb-188-096-121-068.188.096.pools.vodafone-ip.de) (Quit: leaving)
[15:55:57] *** Quits: merijn (~merijn@c-001-001-027.client.esciencecenter.eduvpn.nl) (Ping timeout: 252 seconds)
[15:56:24] *** Quits: Lycurgus (~juan@98.4.112.204) (Quit: Exeunt)
[15:56:51] *** Joins: merijn (~merijn@c-001-001-027.client.esciencecenter.eduvpn.nl)
[16:03:00] *** Quits: mon_aaraj (~MonAaraj@user/mon-aaraj/x-4416475) (Ping timeout: 272 seconds)
[16:04:12] *** Quits: alx741 (~alx741@181.199.42.143) (Read error: Connection reset by peer)
[16:04:27] *** Joins: mon_aaraj (~MonAaraj@user/mon-aaraj/x-4416475)
[16:07:35] *** Quits: fef (~thedawn@user/thedawn) (Ping timeout: 240 seconds)
[16:11:18] *** Quits: bitdex (~bitdex@gateway/tor-sasl/bitdex) (Quit: = "")
[16:12:27] *** Quits: cynomys (~cynomys@user/cynomys) (Ping timeout: 252 seconds)
[16:20:36] *** Quits: gehmehgeh (~user@user/gehmehgeh) (Remote host closed the connection)
[16:20:44] *** Joins: alx741 (~alx741@157.100.197.240)
[16:20:48] *** Joins: fef (~thedawn@user/thedawn)
[16:21:17] *** Joins: gehmehgeh (~user@user/gehmehgeh)
[16:23:06] *** Quits: alx741 (~alx741@157.100.197.240) (Read error: Connection reset by peer)
[16:24:06] *** Joins: ardell (~ardell@user/ardell)
[16:31:21] *** Joins: neurocyte0917090 (~neurocyte@IP-213188126186.dynamic.medianet-world.de)
[16:31:21] *** Quits: neurocyte0917090 (~neurocyte@IP-213188126186.dynamic.medianet-world.de) (Changing host)
[16:31:21] *** Joins: neurocyte0917090 (~neurocyte@user/neurocyte)
[16:33:21] *** Quits: kayprish (~kayprish@cable-24-135-254-227.dynamic.sbb.rs) (Ping timeout: 252 seconds)
[16:35:52] *** Quits: shailangsa (~shailangs@host86-186-127-164.range86-186.btcentralplus.com) ()
[16:40:05] *** Joins: alx741 (~alx741@181.199.42.143)
[16:43:39] *** Joins: jao (~jao@68.235.43.172)
[16:43:39] *** Quits: alx741 (~alx741@181.199.42.143) (Read error: Connection reset by peer)
[16:43:50] *** Joins: deadmarshal (~deadmarsh@95.38.115.206)
[16:48:09] *** Quits: acidjnk (~acidjnk@p200300d0c705758148c438f13433725d.dip0.t-ipconnect.de) (Ping timeout: 250 seconds)
[16:53:02] *** Quits: mon_aaraj (~MonAaraj@user/mon-aaraj/x-4416475) (Ping timeout: 272 seconds)
[16:54:48] *** Joins: mon_aaraj (~MonAaraj@user/mon-aaraj/x-4416475)
[17:00:20] *** Joins: alx741 (~alx741@157.100.197.240)
[17:03:11] *** Quits: alx741 (~alx741@157.100.197.240) (Read error: Connection reset by peer)
[17:06:26] *** Joins: jm_jj (~jmjj@mobile-user-c3a5cc-243.dhcp.inet.fi)
[17:08:45] *** Joins: acidjnk (~acidjnk@p200300d0c705758148c438f13433725d.dip0.t-ipconnect.de)
[17:08:58] *** Joins: fendor_ (~fendor@178.165.161.137.wireless.dyn.drei.com)
[17:09:24] *** Quits: jao (~jao@68.235.43.172) (Ping timeout: 240 seconds)
[17:09:41] *** Joins: gaff (~gaff@49.207.221.64)
[17:10:26] <gaff> read "5\f\t\f\f\f" :: Int = 5, but readsPrec 0 "5\f\t\f\f\f" :: [(Int, String)] = [(5,"\f\t\f\f\f")].  how come?
[17:11:18] *** Quits: mon_aaraj (~MonAaraj@user/mon-aaraj/x-4416475) (Ping timeout: 252 seconds)
[17:12:02] *** Quits: fendor (~fendor@91.141.33.218.wireless.dyn.drei.com) (Ping timeout: 272 seconds)
[17:13:07] *** Quits: olle (~olle@i5E866D85.versanet.de) (Remote host closed the connection)
[17:13:09] *** Joins: mon_aaraj (~MonAaraj@user/mon-aaraj/x-4416475)
[17:13:56] <gaff> read requires a perfect parse, so i am wondering how `read` works at all on this one.
[17:16:30] <merijn> gaff: is \f whitespace? pretty sure read ignores trailing whitespace
[17:16:40] <gaff> form feed
[17:16:52] <merijn> > generalCategory '\f'
[17:16:53] <xsperry> > read "  5  " :: Int
[17:16:53] <lambdabot>  Control
[17:16:54] *** Joins: dextaa_ (~dextaa@user/dextaa)
[17:16:54] <lambdabot>  5
[17:16:59] *** Joins: waleee (~waleee@h-98-128-229-110.NA.cust.bahnhof.se)
[17:17:13] <gaff> you can try with '\n', the result is same
[17:17:41] *** Joins: o-90 (~o-90@gateway/tor-sasl/o-90)
[17:18:06] <gaff> ah, i understood.  it is just treating it as white space
[17:18:15] <gaff> thank you much
[17:19:04] <gaff> read also ignores leading white space
[17:19:28] <gaff> so if you have those characters in front of 5, the result is same.
[17:19:40] *** Joins: alx741 (~alx741@157.100.197.240)
[17:20:24] *** Quits: sammelweis (~quassel@2601:401:8200:2d4c:bd9:d04c:7f69:eb10) (Read error: Connection reset by peer)
[17:20:38] *** Joins: Null_A (~null_a@c-98-210-133-39.hsd1.ca.comcast.net)
[17:21:46] *** Quits: gaff (~gaff@49.207.221.64) ()
[17:22:13] *** Joins: shailangsa (~shailangs@host86-186-127-164.range86-186.btcentralplus.com)
[17:22:49] *** Quits: alx741 (~alx741@157.100.197.240) (Read error: Connection reset by peer)
[17:25:00] *** Quits: Null_A (~null_a@c-98-210-133-39.hsd1.ca.comcast.net) (Ping timeout: 240 seconds)
[17:30:15] *** Joins: gurkenglas (~gurkengla@dslb-188-096-121-068.188.096.pools.vodafone-ip.de)
[17:31:03] *** Quits: acidjnk (~acidjnk@p200300d0c705758148c438f13433725d.dip0.t-ipconnect.de) (Ping timeout: 250 seconds)
[17:33:43] *** Joins: jao (~jao@static-68-235-44-10.cust.tzulo.com)
[17:39:20] *** Quits: meinside (uid24933@id-24933.helmsley.irccloud.com) (Quit: Connection closed for inactivity)
[17:41:01] *** Quits: o-90 (~o-90@gateway/tor-sasl/o-90) (Remote host closed the connection)
[17:41:04] *** Joins: alx741 (~alx741@157.100.197.240)
[17:42:34] *** Quits: Pickchea (~private@user/pickchea) (Quit: Leaving)
[17:44:22] *** Quits: alx741 (~alx741@157.100.197.240) (Read error: Connection reset by peer)
[17:51:56] *** Quits: ubert (~Thunderbi@p548c8cd6.dip0.t-ipconnect.de) (Quit: ubert)
[17:52:41] *** Joins: Null_A (~null_a@2601:645:8700:2290:a4fb:481a:7fa9:b909)
[17:53:24] *** Quits: jao (~jao@static-68-235-44-10.cust.tzulo.com) (Ping timeout: 240 seconds)
[17:53:42] *** Joins: wroathe (~wroathe@206-55-188-8.fttp.usinternet.com)
[17:53:43] *** Quits: wroathe (~wroathe@206-55-188-8.fttp.usinternet.com) (Changing host)
[17:53:43] *** Joins: wroathe (~wroathe@user/wroathe)
[17:55:38] *** Joins: jao (~jao@211.68.17.95.dynamic.jazztel.es)
[17:57:00] *** Quits: Null_A (~null_a@2601:645:8700:2290:a4fb:481a:7fa9:b909) (Ping timeout: 240 seconds)
[17:58:47] <gurkenglas> What was lspitzner called again on IRC?
[17:59:15] <geekosaur> hexagonel,iirc
[17:59:15] <dminuoso> hexagoxel I think?
[17:59:30] <gurkenglas> Ah right, thanks.
[17:59:39] <dminuoso> My IRC indicate say Im right
[17:59:43] <dminuoso> 64959:2019-12-14 17:02:10 hexagoxel I have updated the paste at https://gist.github.com/lspitzner/1042594a329c5ea6a3b7a2dc6c57c025 to contain the full build
[18:00:18] *** Joins: Null_A (~null_a@2601:645:8700:2290:a4fb:481a:7fa9:b909)
[18:02:27] *** Joins: alx741 (~alx741@157.100.197.240)
[18:05:10] *** Quits: alx741 (~alx741@157.100.197.240) (Read error: Connection reset by peer)
[18:05:33] *** Joins: shriekingnoise (~shrieking@201.231.16.156)
[18:08:24] *** Quits: img (~img@user/img) (Quit: ZNC 1.8.2 - https://znc.in)
[18:08:40] *** Joins: img (~img@user/img)
[18:09:36] *** Joins: Unicorn_Princess (~Unicorn_P@46-54-248-191.static.kate-wing.si)
[18:09:54] *** Quits: Null_A (~null_a@2601:645:8700:2290:a4fb:481a:7fa9:b909) (Remote host closed the connection)
[18:10:05] *** Joins: slowButPresent (~slowButPr@user/slowbutpresent)
[18:11:33] *** Joins: eggplantade (~Eggplanta@2600:1700:bef1:5e10:7dab:1fa0:9cf6:a5de)
[18:12:32] *** Joins: yauhsien (~Yau-Hsien@61-231-32-103.dynamic-ip.hinet.net)
[18:13:03] *** Joins: xkuru (~xkuru@user/xkuru)
[18:13:17] <ProfSimm> What do you wish Haskell did, or did better, which it doesn't right now?
[18:13:25] <ProfSimm> If you could have a dream version of your language
[18:14:33] <[exa]> I'm pretty much content
[18:15:23] <geekosaur> pretty much every time I run into something I think might be done better, I think further and realize it would just make bigger messes
[18:15:27] <dminuoso> Circular module imports, getting rid of String in many places, getting rid of Read
[18:15:32] <dminuoso> Those are the top three on my wishlist.
[18:15:36] *** Joins: Topsi (~Tobias@dyndsl-091-249-082-220.ewe-ip-backbone.de)
[18:15:41] <geekosaur> no language is perfect, but perfection is unattainable: it's all tradeoffs in the end
[18:15:48] *** Quits: eggplantade (~Eggplanta@2600:1700:bef1:5e10:7dab:1fa0:9cf6:a5de) (Ping timeout: 240 seconds)
[18:16:00] <dminuoso> All three probably would have been possible with a bit of planning and foresight. But we're too deep in to get out of it
[18:16:01] <ProfSimm> Perfection is contingent on how obsessive a language designer is.
[18:16:33] <dminuoso> (Note that in principle the circular module imports are not a restriction of the language but GHC, the only active implementation we have)
[18:16:51] *** Joins: stef204 (~stef204@user/stef204)
[18:16:55] *** Quits: jpds (~jpds@gateway/tor-sasl/jpds) (Ping timeout: 240 seconds)
[18:17:25] <geekosaur> the language report specifically supports circular module imports, while allowing things like ghc's .hs-boot files to enable it
[18:17:54] <geekosaur> I should say it requires them to work
[18:18:37] <geekosaur> it's just really difficult to support them while also allowing separate compilation (instead of, say, whole-program compilation)
[18:18:50] *** Joins: Topsi1 (~Tobias@dyndsl-091-249-082-220.ewe-ip-backbone.de)
[18:19:17] *** Joins: jpds (~jpds@gateway/tor-sasl/jpds)
[18:19:24] <dminuoso> Perhaps, I think its hard to say if nobody has tried building a Haskell compiler to support both
[18:19:24] *** Quits: jao (~jao@211.68.17.95.dynamic.jazztel.es) (Ping timeout: 240 seconds)
[18:19:32] <dminuoso> I dont know whether its difficult
[18:19:50] <dminuoso> Some problems appear hard on initial looks but turn out to be simple
[18:20:02] <geekosaur> the wholehs-boot thing is painful and regularly discussed
[18:20:17] <geekosaur> (in #ghc and in various ghc tickets etc.)
[18:20:26] *** Quits: Topsi (~Tobias@dyndsl-091-249-082-220.ewe-ip-backbone.de) (Ping timeout: 272 seconds)
[18:21:14] *** Joins: [itchyjunk] (~itchyjunk@user/itchyjunk/x-7353470)
[18:22:56] *** Joins: alx741 (~alx741@181.199.42.143)
[18:26:02] *** Quits: alx741 (~alx741@181.199.42.143) (Read error: Connection reset by peer)
[18:26:07] <maerwald> hs-boot files play very well with TH :D
[18:26:45] <dminuoso> Nothing plays well with TH.
[18:26:46] <dminuoso> :p
[18:27:03] <maerwald> this is especially nasty... in some rare cases GHC can make it work, but then HLS falls flat
[18:27:17] <maerwald> in other cases both fail
[18:27:24] *** Joins: Null_A (~null_a@c-98-210-133-39.hsd1.ca.comcast.net)
[18:27:24] *** Quits: gurkenglas (~gurkengla@dslb-188-096-121-068.188.096.pools.vodafone-ip.de) (Ping timeout: 272 seconds)
[18:28:00] <yushyin> a bit of a shame that backpack never really took off. i would have liked to see a haskell with a mix-in module system that wasn't retrofitted. maybe. (not that I really have much of a use case for it except for strings)
[18:28:33] <dminuoso> yushyin: Honestly I think all backpack lacked was documentation..
[18:28:35] *** Quits: alMalsamo (~alMalsamo@gateway/tor-sasl/almalsamo) (Ping timeout: 240 seconds)
[18:28:51] *** Quits: CiaoSen (~Jura@p200300c95737a2002a3a4dfffe84dbd5.dip0.t-ipconnect.de) (Ping timeout: 252 seconds)
[18:28:55] <dminuoso> In its current form there's very poor discoverability that backpack exists or how to use it
[18:28:59] <maerwald> and support from stack
[18:29:51] <dminuoso> It's mostly "look at what edwardk has done in some of his packages" and read the PhD thesis for which its hard to find which that was.
[18:30:00] <dminuoso> maerwald: Oh I didnt know that
[18:30:03] <dminuoso> But I guess not surprising
[18:30:33] <maerwald> https://github.com/commercialhaskell/stack/issues/2540
[18:31:14] <lortabac> ProfSimm: I agree with dminuoso on the top three, I'd probably add: better records, one namespace for types and constructors, special syntax for newtypes, streaming in prelude instead of lazy IO, more support for "simple types" (for ex. monomorphic do blocks), ideally strictness reflected in the types (this might be hard though)
[18:31:29] <yushyin> some mixins-shenanigans is why i switched back to cabal ;)
[18:31:48] <ProfSimm> Thanks folks
[18:31:51] *** Quits: `2jt (~jtomas@130.red-88-22-46.staticip.rima-tde.net) (Remote host closed the connection)
[18:32:04] <geekosaur> the backpack story is not yet over, discoverability and documentation are slated to improve in upcoming ghc versions
[18:32:09] *** Quits: Null_A (~null_a@c-98-210-133-39.hsd1.ca.comcast.net) (Ping timeout: 252 seconds)
[18:32:14] *** Joins: `2jt (~jtomas@130.red-88-22-46.staticip.rima-tde.net)
[18:32:35] <yushyin> geekosaur: that's nice to hear!
[18:32:54] <janus> i thought a big reason of why people don't use backpack is that stack can't build it? dunno if that is still true
[18:33:06] <geekosaur> stack can't use it yet
[18:33:26] <janus> so if stack is dying it may help backpack adoption
[18:34:02] <geekosaur> whether it will ever be able to will depend in part on upcoming additional documentation and in part on someone actually writing the necessary support for stack… which, given they don't seem to be maintaining stack much these days, may be an even bigger hurdle
[18:34:44] <janus> yushyin: do you know of a good practical example of backpacked strings on hackage?
[18:35:03] *** Joins: shapr (~user@pool-173-73-44-186.washdc.fios.verizon.net)
[18:36:10] <edwardk> i really want to see backpack fished out of the dumpster and made usable. the stack story is horrifying
[18:36:39] *** Joins: wombat875 (~wombat875@pool-72-89-24-154.nycmny.fios.verizon.net)
[18:36:44] <edwardk> to be fair, the story on nix or in custom build setups, etc. isn't much better
[18:37:46] *** Joins: jgeerds (~jgeerds@55d4a547.access.ecotel.net)
[18:37:48] <yushyin> janus: nope, sorry.
[18:38:15] <maerwald> edwardk: even if someone provided a PR... I'm not sure if there are people left to review it :o
[18:38:19] *** Quits: vysn (~vysn@user/vysn) (Quit: WeeChat 3.4)
[18:38:32] <geekosaur> stack not supporting backpack kinda holds back hackage packages using it, and certainly prevents stackage from using it
[18:39:02] <merijn> We just get edwardk to move lens to backpack and then half the ecosystem will be forced to support it xD
[18:39:55] <edwardk> merijn: you joke
[18:40:24] <yushyin> could be a valid strategy!
[18:40:37] <maerwald> feels like a MicroSoft strategy
[18:40:41] <edwardk> my best strategies for supporting unboxed values, for supporting simd computation, etc. all need backpack
[18:40:57] *** Quits: max22- (~maxime@2a01cb08833598004c8de2e630f51a33.ipv6.abo.wanadoo.fr) (Ping timeout: 252 seconds)
[18:40:57] <edwardk> or they need metric boatloads of template haskell and sufficiently crossed fingers
[18:41:58] *** Quits: wroathe (~wroathe@user/wroathe) (Ping timeout: 272 seconds)
[18:43:11] *** Joins: alx741 (~alx741@181.199.42.143)
[18:46:57] *** Quits: alx741 (~alx741@181.199.42.143) (Read error: Connection reset by peer)
[18:47:34] *** Joins: wroathe (~wroathe@206-55-188-8.fttp.usinternet.com)
[18:47:34] *** Quits: wroathe (~wroathe@206-55-188-8.fttp.usinternet.com) (Changing host)
[18:47:34] *** Joins: wroathe (~wroathe@user/wroathe)
[18:47:40] *** Joins: alx741 (~alx741@157.100.197.240)
[18:50:30] *** Joins: vysn (~vysn@user/vysn)
[18:51:21] *** Quits: alx741 (~alx741@157.100.197.240) (Read error: Connection reset by peer)
[18:51:54] *** Joins: lavaman (~lavaman@98.38.249.169)
[18:51:57] *** Quits: wroathe (~wroathe@user/wroathe) (Ping timeout: 252 seconds)
[18:56:21] *** Quits: lavaman (~lavaman@98.38.249.169) (Ping timeout: 252 seconds)
[18:57:06] *** Joins: Sgeo (~Sgeo@user/sgeo)
[18:58:26] <merijn> edwardk: Who says I'm joking ;)
[19:02:31] *** Joins: razetime (~quassel@49.207.198.36)
[19:03:30] *** Joins: Null_A (~null_a@2601:645:8700:2290:a4fb:481a:7fa9:b909)
[19:04:21] *** Quits: jgeerds (~jgeerds@55d4a547.access.ecotel.net) (Remote host closed the connection)
[19:04:48] *** Quits: DNH (~DNH@2a02:8108:1100:16d8:bca1:a272:d62b:37ab) (Quit: My MacBook has gone to sleep. ZZZzzz…)
[19:07:21] *** Quits: alp (~alp@user/alp) (Ping timeout: 252 seconds)
[19:08:12] *** Quits: Null_A (~null_a@2601:645:8700:2290:a4fb:481a:7fa9:b909) (Ping timeout: 240 seconds)
[19:09:08] *** Joins: alx741 (~alx741@157.100.197.240)
[19:10:08] *** Quits: prite (~pritam@user/pritambaral) (Quit: Konversation terminated!)
[19:11:07] *** Joins: MoC (~moc@user/moc)
[19:11:35] *** Quits: hueso (~root@user/hueso) (Ping timeout: 256 seconds)
[19:11:57] *** Quits: alx741 (~alx741@157.100.197.240) (Read error: Connection reset by peer)
[19:12:41] *** Joins: hueso (~root@user/hueso)
[19:19:58] *** Joins: gaff (~gaff@49.207.221.64)
[19:21:12] *** Quits: dsrt^ (~dsrt@50.235.176.163) (Remote host closed the connection)
[19:25:37] <gaff> if you have to write for example an expression such as `a && b && c && d` on separate lines, haskell is just if you do not indent the continuing lines further to the right. i thought it should because they are continuing lines. 
[19:26:19] <gaff> i mean haskell is fine if you do not indent to the right
[19:26:57] <geekosaur> if you write `a &&` on one line then haskell knows another expression is needed
[19:27:37] <geekosaur> this goes only so far though, because of layout: you need to indent some things to obey an outer layout constraint (as for example with let or where blocks)
[19:27:54] *** Quits: azimut (~azimut@gateway/tor-sasl/azimut) (Remote host closed the connection)
[19:28:09] <gaff> i see ... it seems to also work if you write `a` on one line and in the next `&& b` at the same indent
[19:28:12] <geekosaur> but aside from layout haskell tries to be pretty flexible
[19:28:31] <gaff> ok
[19:28:31] *** Joins: azimut (~azimut@gateway/tor-sasl/azimut)
[19:28:33] <geekosaur> that will work as long as layout isn't involved
[19:29:42] *** Joins: alx741 (~alx741@157.100.197.240)
[19:29:42] <gaff> when you say layout, you mean stuff for `where`, `let`, top-level, etc?
[19:29:59] *** Quits: lortabac (~lortabac@2a01:e0a:541:b8f0:9c11:561e:c86d:bf05) (Quit: WeeChat 2.8)
[19:30:31] <geekosaur> https://paste.tomsmeding.com/ZyJ6dhuN
[19:31:45] <gaff> ah, thanks -- yeah, that's fine
[19:31:48] <gaff> :)
[19:32:35] <geekosaur> the second one fails because `let` has taken the indentation of the first binding as its basic indentation; indenting not up to that point will end the `let`, indenting *to* that point starts a new binding and will throw a parse error if it's not a valid binding
[19:32:47] <geekosaur> but indenting beyond it will be a continuation
[19:33:21] <gaff> thank you.
[19:33:22] *** Quits: alx741 (~alx741@157.100.197.240) (Read error: Connection reset by peer)
[19:33:49] <gaff> great explanation
[19:33:58] <gaff> appreciate it
[19:34:05] <geekosaur> no problem
[19:35:06] *** Quits: gaff (~gaff@49.207.221.64) ()
[19:39:37] *** Joins: Null_A (~null_a@2601:645:8700:2290:a4fb:481a:7fa9:b909)
[19:43:24] *** Quits: `2jt (~jtomas@130.red-88-22-46.staticip.rima-tde.net) (Ping timeout: 272 seconds)
[19:44:31] *** Quits: Null_A (~null_a@2601:645:8700:2290:a4fb:481a:7fa9:b909) (Ping timeout: 250 seconds)
[19:46:34] *** Quits: waleee (~waleee@h-98-128-229-110.NA.cust.bahnhof.se) (Ping timeout: 272 seconds)
[19:50:05] *** Joins: alx741 (~alx741@157.100.197.240)
[19:52:12] *** Quits: alx741 (~alx741@157.100.197.240) (Read error: Connection reset by peer)
[19:53:43] *** Joins: max22- (~maxime@2a01cb08833598007bad4523cac12017.ipv6.abo.wanadoo.fr)
[19:54:59] *** Quits: shailangsa (~shailangs@host86-186-127-164.range86-186.btcentralplus.com) (Remote host closed the connection)
[19:56:13] *** Joins: gurkenglas (~gurkengla@dslb-188-096-121-068.188.096.pools.vodafone-ip.de)
[20:00:19] <phma> I've written tests of a function split343, which is currently exported, but will not be exported when I finish writing the library. Tests are in test.hs; the library is in FlowsnakeBase.hs. How do I test functions that aren't exported?
[20:01:18] <geekosaur> you have to export them somehow, but not necessarily from your package. for example you can export from an internal library component which your tests can depend on but no outside package can
[20:01:18] *** Joins: DNH (~DNH@2a02:8108:1100:16d8:bca1:a272:d62b:37ab)
[20:02:00] <geekosaur> alternatively you could use an Internals module, which would allow others to import anything in it but with the understanding that anything in the module can change or go away with no warning
[20:03:43] *** Quits: dschrempf (~dominik@070-207.dynamic.dsl.fonira.net) (Quit: WeeChat 3.3)
[20:04:32] <geekosaur> (in a cabal file the unnamed library component is exported, named library components are internal-only)
[20:06:12] *** Quits: merijn (~merijn@c-001-001-027.client.esciencecenter.eduvpn.nl) (Ping timeout: 252 seconds)
[20:09:26] *** Joins: alx741 (~alx741@157.100.197.240)
[20:12:58] *** Quits: alx741 (~alx741@157.100.197.240) (Read error: Connection reset by peer)
[20:13:11] *** Joins: eggplantade (~Eggplanta@108-201-191-115.lightspeed.sntcca.sbcglobal.net)
[20:13:55] *** Joins: Null_A (~null_a@2601:645:8700:2290:a4fb:481a:7fa9:b909)
[20:17:32] *** Joins: kayvank (~user@52-119-115-185.PUBLIC.monkeybrains.net)
[20:20:57] *** Quits: pgib (~textual@173.38.117.82) (Ping timeout: 240 seconds)
[20:21:13] *** Joins: zebrag (~chris@user/zebrag)
[20:22:42] *** Quits: Vajb (~Vajb@hag-jnsbng11-58c3a8-176.dhcp.inet.fi) (Read error: Connection reset by peer)
[20:23:47] *** Joins: `2jt (~jtomas@130.red-88-22-46.staticip.rima-tde.net)
[20:24:33] *** Quits: ProfSimm (~ProfSimm@87.227.196.109) (Remote host closed the connection)
[20:28:46] *** Quits: stef204 (~stef204@user/stef204) (Quit: WeeChat 3.4)
[20:28:55] *** Joins: burnsidesLlama (~burnsides@dhcp168-031.wadham.ox.ac.uk)
[20:29:23] *** Quits: eggplantade (~Eggplanta@108-201-191-115.lightspeed.sntcca.sbcglobal.net) (Remote host closed the connection)
[20:29:41] *** Joins: alx741 (~alx741@157.100.197.240)
[20:32:21] *** Quits: dextaa_ (~dextaa@user/dextaa) (Quit: leaving)
[20:33:10] *** Quits: alx741 (~alx741@157.100.197.240) (Read error: Connection reset by peer)
[20:35:30] *** Joins: wroathe (~wroathe@206-55-188-8.fttp.usinternet.com)
[20:35:30] *** Quits: wroathe (~wroathe@206-55-188-8.fttp.usinternet.com) (Changing host)
[20:35:30] *** Joins: wroathe (~wroathe@user/wroathe)
[20:36:17] *** Joins: merijn (~merijn@c-001-001-027.client.esciencecenter.eduvpn.nl)
[20:36:42] *** Quits: razetime (~quassel@49.207.198.36) (Quit: https://quassel-irc.org - Chat comfortably. Anywhere.)
[20:37:02] *** Quits: ardell (~ardell@user/ardell) (Quit: Konversation terminated!)
[20:40:18] *** Quits: wroathe (~wroathe@user/wroathe) (Ping timeout: 252 seconds)
[20:41:24] *** Quits: merijn (~merijn@c-001-001-027.client.esciencecenter.eduvpn.nl) (Ping timeout: 252 seconds)
[20:41:57] *** Quits: `2jt (~jtomas@130.red-88-22-46.staticip.rima-tde.net) (Ping timeout: 252 seconds)
[20:44:52] *** Joins: eggplantade (~Eggplanta@108-201-191-115.lightspeed.sntcca.sbcglobal.net)
[20:45:33] *** Joins: Akiva (~Akiva@user/Akiva)
[20:48:08] *** Joins: lavaman (~lavaman@98.38.249.169)
[20:48:56] *** Joins: tzh (~tzh@c-24-21-73-154.hsd1.or.comcast.net)
[20:49:06] *** Quits: eggplantade (~Eggplanta@108-201-191-115.lightspeed.sntcca.sbcglobal.net) (Ping timeout: 252 seconds)
[20:51:04] *** Joins: alx741 (~alx741@181.199.42.143)
[20:53:39] *** Joins: lbseale (~ep1ctetus@user/ep1ctetus)
[20:53:41] *** Quits: Unicorn_Princess (~Unicorn_P@46-54-248-191.static.kate-wing.si) (Remote host closed the connection)
[20:54:38] *** Quits: mbuf (~Shakthi@223.178.90.64) (Quit: Leaving)
[20:56:28] *** Quits: HotblackDesiato (~HotblackD@gateway/tor-sasl/hotblackdesiato) (Remote host closed the connection)
[20:56:28] *** Quits: gehmehgeh (~user@user/gehmehgeh) (Remote host closed the connection)
[20:57:12] *** Joins: gehmehgeh (~user@user/gehmehgeh)
[20:58:07] *** Quits: alx741 (~alx741@181.199.42.143) (Read error: Connection reset by peer)
[20:59:07] *** Joins: Vajb (~Vajb@hag-jnsbng11-58c3a8-176.dhcp.inet.fi)
[21:00:15] *** Joins: zeenk (~zeenk@2a02:2f04:a30d:1300:51a3:bcfc:6cda:9fc5)
[21:01:14] *** Joins: alp (~alp@user/alp)
[21:01:38] <sm> or, move the tests closer to the code in question...
[21:03:20] *** Joins: zincy_ (~zincy@2a00:23c8:970c:4801:39f9:90f7:922:e73b)
[21:04:30] *** Quits: MajorBiscuit (~MajorBisc@wlan-145-94-218-48.wlan.tudelft.nl) (Ping timeout: 252 seconds)
[21:04:46] *** Joins: zincy__ (~zincy@host86-160-236-152.range86-160.btcentralplus.com)
[21:04:51] *** Quits: bliminse (~bliminse@host86-158-241-239.range86-158.btcentralplus.com) (Quit: leaving)
[21:04:52] *** Quits: zincy_ (~zincy@2a00:23c8:970c:4801:39f9:90f7:922:e73b) (Read error: Connection reset by peer)
[21:08:27] *** Joins: `2jt (~jtomas@130.red-88-22-46.staticip.rima-tde.net)
[21:08:54] *** Quits: gurkenglas (~gurkengla@dslb-188-096-121-068.188.096.pools.vodafone-ip.de) (Ping timeout: 272 seconds)
[21:10:02] *** Joins: bliminse (~bliminse@host86-158-241-239.range86-158.btcentralplus.com)
[21:10:16] *** Quits: chele (~chele@user/chele) (Remote host closed the connection)
[21:10:54] *** Joins: zer0bitz (~zer0bitz@2001:2003:f74d:b800:dcfd:93ee:4384:4372)
[21:14:11] *** Joins: stef204 (~stef204@user/stef204)
[21:15:25] *** Joins: alx741 (~alx741@157.100.197.240)
[21:16:19] *** Joins: eggplantade (~Eggplanta@2600:1700:bef1:5e10:dd1:4bae:3cdd:e3cb)
[21:18:12] *** Quits: alx741 (~alx741@157.100.197.240) (Read error: Connection reset by peer)
[21:20:31] <[exa]> is there any known problem with `getAddrInfo` that is not run in the "main" thread? (possibly specifically on mac OS)
[21:20:39] <[exa]> (debugging an issue with a student)
[21:21:54] *** Joins: shailangsa (~shailangs@host86-186-127-164.range86-186.btcentralplus.com)
[21:22:21] <geekosaur> dunno about macos but on linux it can be using dbus in the background to talk with a name cache daemon, and there are lots of things that can go wrong
[21:23:12] <[exa]> so it is preferable to keep it as single-threaded as possible?
[21:23:41] *** Quits: cfricke (~cfricke@user/cfricke) (Quit: WeeChat 3.3)
[21:24:05] *** Quits: burnsidesLlama (~burnsides@dhcp168-031.wadham.ox.ac.uk) (Remote host closed the connection)
[21:24:19] <[exa]> hm, let's see
[21:24:51] *** Quits: alp (~alp@user/alp) (Ping timeout: 252 seconds)
[21:25:25] *** Quits: MoC (~moc@user/moc) (Quit: Konversation terminated!)
[21:26:20] *** Quits: zincy__ (~zincy@host86-160-236-152.range86-160.btcentralplus.com) (Remote host closed the connection)
[21:26:45] <geekosaur> doesn'tlook like they document any thread issues
[21:26:54] <geekosaur> and on linux it's supposed to be mt-sate
[21:26:57] <geekosaur> *mt-safe
[21:27:27] <geekosaur> but I've seen weirdness with dbus-backed stuff and the ghc rts; you can test for this by using +RTS -V0
[21:27:42] <geekosaur> to see if anything similar is going on with macos
[21:27:48] *** Quits: vysn (~vysn@user/vysn) (Ping timeout: 240 seconds)
[21:34:35] *** Joins: gurkenglas (~gurkengla@dslb-188-096-121-068.188.096.pools.vodafone-ip.de)
[21:34:47] *** Joins: alx741 (~alx741@157.100.197.240)
[21:37:02] *** Quits: zmt00 (~zmt00@user/zmt00) (Read error: Connection reset by peer)
[21:37:11] *** Quits: xff0x (~xff0x@2001:1a81:52c4:8c00:1680:ae3c:6c22:79cc) (Ping timeout: 250 seconds)
[21:37:16] *** Quits: img (~img@user/img) (Quit: ZNC 1.8.2 - https://znc.in)
[21:38:02] *** Joins: xff0x (~xff0x@2001:1a81:52c4:8c00:a51c:6f1b:e868:ffc)
[21:38:38] *** Joins: img (~img@user/img)
[21:39:17] *** Quits: kuribas (~user@ptr-25vy0i9o6zfp0yko61a.18120a2.ip6.access.telenet.be) (Quit: ERC (IRC client for Emacs 26.3))
[21:40:15] *** Quits: lavaman (~lavaman@98.38.249.169) (Remote host closed the connection)
[21:40:31] *** Joins: lavaman (~lavaman@98.38.249.169)
[21:40:38] *** Quits: lavaman (~lavaman@98.38.249.169) (Remote host closed the connection)
[21:40:53] *** Joins: lavaman (~lavaman@98.38.249.169)
[21:41:00] *** Quits: lavaman (~lavaman@98.38.249.169) (Remote host closed the connection)
[21:41:08] *** Quits: TheCoffeMaker_ (~TheCoffeM@200.126.129.149) (Quit: So long and thanks for all the fish)
[21:41:14] *** Joins: lavaman (~lavaman@98.38.249.169)
[21:41:15] *** Quits: alx741 (~alx741@157.100.197.240) (Read error: Connection reset by peer)
[21:41:21] *** Quits: lavaman (~lavaman@98.38.249.169) (Remote host closed the connection)
[21:41:23] <[exa]> geekosaur: ooh that looks useful, thanks a lot
[21:41:26] <[exa]> will see
[21:41:36] *** Joins: lavaman (~lavaman@98.38.249.169)
[21:41:43] *** Quits: lavaman (~lavaman@98.38.249.169) (Remote host closed the connection)
[21:41:58] *** Joins: lavaman (~lavaman@98.38.249.169)
[21:42:05] *** Quits: lavaman (~lavaman@98.38.249.169) (Remote host closed the connection)
[21:42:05] *** Joins: TheCoffeMaker (~TheCoffeM@user/thecoffemaker)
[21:42:19] *** Joins: lavaman (~lavaman@98.38.249.169)
[21:42:26] *** Quits: lavaman (~lavaman@98.38.249.169) (Remote host closed the connection)
[21:42:40] *** Joins: lavaman (~lavaman@98.38.249.169)
[21:42:48] *** Quits: lavaman (~lavaman@98.38.249.169) (Remote host closed the connection)
[21:43:02] *** Joins: lavaman (~lavaman@98.38.249.169)
[21:43:09] *** Quits: lavaman (~lavaman@98.38.249.169) (Remote host closed the connection)
[21:43:18] <geekosaur> sigh\
[21:43:20] *** ChanServ sets mode: +o geekosaur
[21:43:25] *** Joins: lavaman (~lavaman@98.38.249.169)
[21:43:32] *** Quits: lavaman (~lavaman@98.38.249.169) (Remote host closed the connection)
[21:43:44] *** Joins: tfeb (~tfb@88.98.95.237)
[21:43:47] *** Joins: lavaman (~lavaman@98.38.249.169)
[21:43:48] *** geekosaur sets mode: +b *!*@98.38.249.169
[21:43:54] *** Quits: lavaman (~lavaman@98.38.249.169) (Remote host closed the connection)
[21:45:05] <monochrom> Active volcano :)
[21:45:36] <geekosaur> pyroclastic flow
[21:48:36] *** Joins: romesrf (~romes@bl8-111-202.dsl.telepac.pt)
[21:50:40] *** Joins: CiaoSen (~Jura@p200300c95737a2002a3a4dfffe84dbd5.dip0.t-ipconnect.de)
[21:58:12] *** Joins: alx741 (~alx741@181.199.42.143)
[21:59:08] *** Quits: romesrf (~romes@bl8-111-202.dsl.telepac.pt) (Quit: WeeChat 3.4)
[22:00:10] *** Quits: tfeb (~tfb@88.98.95.237) (Quit: died)
[22:01:19] *** Quits: alx741 (~alx741@181.199.42.143) (Read error: Connection reset by peer)
[22:01:35] *** Joins: econo (uid147250@user/econo)
[22:02:40] *** Joins: burnsidesLlama (~burnsides@dhcp168-031.wadham.ox.ac.uk)
[22:07:20] *** Quits: jm_jj (~jmjj@mobile-user-c3a5cc-243.dhcp.inet.fi) (Quit: Leaving)
[22:08:26] *** Quits: burnsidesLlama (~burnsides@dhcp168-031.wadham.ox.ac.uk) (Ping timeout: 272 seconds)
[22:08:57] *** ChanServ sets mode: +o litharge
[22:08:57] *** litharge sets mode: -bo *!*@98.38.249.169 litharge
[22:09:39] *** Joins: ec (~ec@gateway/tor-sasl/ec)
[22:14:10] *** Quits: Null_A (~null_a@2601:645:8700:2290:a4fb:481a:7fa9:b909) (Remote host closed the connection)
[22:16:25] *** Joins: zincy_ (~zincy@host86-160-236-152.range86-160.btcentralplus.com)
[22:18:27] *** Joins: alx741 (~alx741@181.199.42.143)
[22:18:47] *** Quits: coot (~coot@213.134.190.95) (Quit: coot)
[22:18:50] *** Joins: burnsidesLlama (~burnsides@dhcp168-031.wadham.ox.ac.uk)
[22:20:36] *** Quits: CiaoSen (~Jura@p200300c95737a2002a3a4dfffe84dbd5.dip0.t-ipconnect.de) (Ping timeout: 240 seconds)
[22:21:06] *** Quits: zincy_ (~zincy@host86-160-236-152.range86-160.btcentralplus.com) (Ping timeout: 272 seconds)
[22:21:55] *** Quits: fef (~thedawn@user/thedawn) (Ping timeout: 240 seconds)
[22:23:02] *** Joins: Null_A (~null_a@2601:645:8700:2290:a4fb:481a:7fa9:b909)
[22:30:03] <tomsmeding> the setting where my irc client only shows joins/leaves of people that are actually chatting is quite useful
[22:30:04] *** Quits: alx741 (~alx741@181.199.42.143) (Read error: Connection reset by peer)
[22:32:20] *** Quits: azimut (~azimut@gateway/tor-sasl/azimut) (Remote host closed the connection)
[22:32:47] *** Joins: azimut (~azimut@gateway/tor-sasl/azimut)
[22:32:48] *** Quits: Null_A (~null_a@2601:645:8700:2290:a4fb:481a:7fa9:b909) (Remote host closed the connection)
[22:33:31] *** Joins: Null_A (~null_a@2601:645:8700:2290:a4fb:481a:7fa9:b909)
[22:35:15] *** Quits: max22- (~maxime@2a01cb08833598007bad4523cac12017.ipv6.abo.wanadoo.fr) (Ping timeout: 252 seconds)
[22:36:17] *** Joins: wroathe (~wroathe@206-55-188-8.fttp.usinternet.com)
[22:36:17] *** Quits: wroathe (~wroathe@206-55-188-8.fttp.usinternet.com) (Changing host)
[22:36:17] *** Joins: wroathe (~wroathe@user/wroathe)
[22:36:24] *** Quits: eggplantade (~Eggplanta@2600:1700:bef1:5e10:dd1:4bae:3cdd:e3cb) (Quit: Leaving...)
[22:38:12] *** Quits: Null_A (~null_a@2601:645:8700:2290:a4fb:481a:7fa9:b909) (Ping timeout: 240 seconds)
[22:38:53] *** Joins: eggplantade (~Eggplanta@2600:1700:bef1:5e10:7443:3f57:453b:e0ec)
[22:39:20] *** geekosaur sets mode: -o geekosaur
[22:41:22] *** Quits: wroathe (~wroathe@user/wroathe) (Ping timeout: 272 seconds)
[22:46:55] *** Joins: alx741 (~alx741@157.100.197.240)
[22:47:28] *** Joins: Null_A (~null_a@2601:645:8700:2290:a4fb:481a:7fa9:b909)
[22:48:35] *** Joins: lavaman (~lavaman@98.38.249.169)
[22:49:35] *** Quits: alx741 (~alx741@157.100.197.240) (Read error: Connection reset by peer)
[22:49:48] *** Quits: deadmarshal (~deadmarsh@95.38.115.206) (Ping timeout: 240 seconds)
[22:51:50] *** Quits: DNH (~DNH@2a02:8108:1100:16d8:bca1:a272:d62b:37ab) (Quit: My MacBook has gone to sleep. ZZZzzz…)
[22:52:28] <kronicma1> @unmtl ExceptT String IO a
[22:52:28] <lambdabot> IO (Either String a)
[22:53:04] <janus> tomsmeding: which client are you using?
[22:53:24] *** Quits: lavaman (~lavaman@98.38.249.169) (Ping timeout: 272 seconds)
[22:54:41] *** Quits: kayvank (~user@52-119-115-185.PUBLIC.monkeybrains.net) (Remote host closed the connection)
[22:56:46] <tomsmeding> weechat
[22:57:19] <tomsmeding> janus: with irc.look.smart_filter_join on
[22:57:59] *** Joins: zmt00 (~zmt00@user/zmt00)
[23:05:22] *** Joins: DNH (~DNH@2a02:8108:1100:16d8:bca1:a272:d62b:37ab)
[23:07:23] *** Joins: alx741 (~alx741@157.100.197.240)
[23:09:06] *** Quits: Null_A (~null_a@2601:645:8700:2290:a4fb:481a:7fa9:b909) (Remote host closed the connection)
[23:09:32] *** Joins: mikail (~mikail@2a02:c7f:bd03:2c00:df97:6ebf:5b0b:7304)
[23:10:10] *** Quits: alx741 (~alx741@157.100.197.240) (Read error: Connection reset by peer)
[23:10:31] *** Quits: Lord_of_Life (~Lord@user/lord-of-life/x-2819915) (Ping timeout: 272 seconds)
[23:11:39] *** Joins: Lord_of_Life (~Lord@user/lord-of-life/x-2819915)
[23:12:22] *** Joins: romesrf (~romes@44.190.189.46.rev.vodafone.pt)
[23:14:49] *** Joins: max22- (~maxime@2a01cb08833598000a23eab5ca82bfe2.ipv6.abo.wanadoo.fr)
[23:15:48] *** Quits: raehik (~raehik@cpc95906-rdng25-2-0-cust156.15-3.cable.virginm.net) (Ping timeout: 240 seconds)
[23:16:17] *** Joins: c209e6dc-4d76-47 (~aditya@2601:249:4300:1296:195:dac6:592c:a55a)
[23:19:31] *** Quits: stef204 (~stef204@user/stef204) (Quit: WeeChat 3.4)
[23:26:19] *** Joins: Null_A (~null_a@c-98-210-133-39.hsd1.ca.comcast.net)
[23:26:43] *** Joins: alx741 (~alx741@157.100.197.240)
[23:28:46] *** Joins: dextaa_ (~dextaa@cpc142174-lewi20-2-0-cust34.2-4.cable.virginm.net)
[23:30:36] *** Quits: Null_A (~null_a@c-98-210-133-39.hsd1.ca.comcast.net) (Ping timeout: 240 seconds)
[23:30:57] *** Joins: zincy_ (~zincy@host86-160-236-152.range86-160.btcentralplus.com)
[23:32:04] *** Quits: alx741 (~alx741@157.100.197.240) (Read error: Connection reset by peer)
[23:35:24] *** Quits: romesrf (~romes@44.190.189.46.rev.vodafone.pt) (Ping timeout: 240 seconds)
[23:35:39] *** Quits: juhp (~juhp@128.106.188.82) (Ping timeout: 256 seconds)
[23:35:57] *** Joins: CiaoSen (~Jura@p200300c95737a2002a3a4dfffe84dbd5.dip0.t-ipconnect.de)
[23:36:09] *** Joins: romesrf (~romes@44.190.189.46.rev.vodafone.pt)
[23:37:19] *** Joins: juhp (~juhp@128.106.188.82)
[23:38:42] *** Joins: slack1256 (~slack1256@191.126.227.196)
[23:41:02] *** ChanServ sets mode: +o geekosaur
[23:41:47] *** Joins: merijn (~merijn@c-001-001-027.client.esciencecenter.eduvpn.nl)
[23:42:19] *** Joins: zer0bitz_ (~zer0bitz@2001:2003:f74d:b800:5c57:7f45:b808:8adb)
[23:42:57] *** Quits: fendor_ (~fendor@178.165.161.137.wireless.dyn.drei.com) (Remote host closed the connection)
[23:43:15] *** Quits: kmein (~weechat@user/kmein) (Quit: ciao kakao)
[23:43:36] *** Joins: kmein (~weechat@user/kmein)
[23:43:47] *** Joins: kenran (~kenran@200116b82bfd62002ef1903d7b4c4780.dip.versatel-1u1.de)
[23:44:40] *** Joins: coot (~coot@213.134.190.95)
[23:45:53] *** Quits: zer0bitz (~zer0bitz@2001:2003:f74d:b800:dcfd:93ee:4384:4372) (Ping timeout: 250 seconds)
[23:46:33] *** Quits: kenran (~kenran@200116b82bfd62002ef1903d7b4c4780.dip.versatel-1u1.de) (Client Quit)
[23:46:58] *** Joins: cjb (~cjb@user/cjb)
[23:47:08] *** Quits: perrierjouet (~perrier-j@modemcable012.251-130-66.mc.videotron.ca) (Quit: WeeChat 3.4)
[23:47:40] *** Joins: dschrempf (~dominik@070-207.dynamic.dsl.fonira.net)
[23:49:44] *** Quits: eggplantade (~Eggplanta@2600:1700:bef1:5e10:7443:3f57:453b:e0ec) (Remote host closed the connection)
[23:49:59] *** Joins: eggplantade (~Eggplanta@2600:1700:bef1:5e10:7443:3f57:453b:e0ec)
[23:50:09] *** Joins: alx741 (~alx741@157.100.197.240)
[23:51:13] *** Quits: slack1256 (~slack1256@191.126.227.196) (Remote host closed the connection)
[23:51:30] *** Joins: slack1256 (~slack1256@191.126.227.196)
[23:51:41] *** Joins: lavaman (~lavaman@98.38.249.169)
[23:52:04] <slack1256> I normally user wreq but it doesn't have http/2 support. What do you guys use for that?
[23:52:04] *** Joins: wroathe (~wroathe@user/wroathe)
[23:52:54] *** Quits: alx741 (~alx741@157.100.197.240) (Read error: Connection reset by peer)
[23:52:59] *** Quits: kmein (~weechat@user/kmein) (Quit: ciao kakao)
[23:53:08] <sclv> clients aren't usually required to have http/2 support, no?
[23:53:20] *** Joins: kmein (~weechat@user/kmein)
[23:53:43] *** Joins: Unicorn_Princess (~Unicorn_P@93-103-228-248.dynamic.t-2.net)
[23:53:49] *** Quits: dhouthoo (~dhouthoo@178-117-36-167.access.telenet.be) (Quit: WeeChat 3.4)
[23:53:50] <romesrf> o/
[23:53:59] *** Quits: lavaman (~lavaman@98.38.249.169) (Remote host closed the connection)
[23:54:11] *** Joins: lavaman (~lavaman@98.38.249.169)
[23:55:18] *** geekosaur sets mode: -o geekosaur
[23:56:36] *** Quits: wroathe (~wroathe@user/wroathe) (Ping timeout: 240 seconds)
[23:58:12] *** Quits: merijn (~merijn@c-001-001-027.client.esciencecenter.eduvpn.nl) (Ping timeout: 240 seconds)
