[00:00:17] *** Quits: Guest95 (~Guest95@154.72.163.179) (Quit: Client closed)
[00:00:26] *** Joins: ayustae (Thunderbir@gateway/vpn/protonvpn/ayustae)
[00:01:24] <flower_> exarkun: link should work
[00:01:28] <flower_> now
[00:02:09] *** Joins: c4017w_ (~c4017@209.52.68.8)
[00:02:18] *** Quits: sokan (~sokan@2a02:587:9e19:4700:227:eff:fe16:865d) (Quit: Reality.is.a.lie)
[00:03:14] *** Joins: runelind (~runelind@user/runelind)
[00:03:51] *** Quits: anshupatia (uid29854@id-29854.helmsley.irccloud.com) (Quit: Connection closed for inactivity)
[00:04:07] *** Quits: merrinx (~merrinx@ti0028a400-3686.bb.online.no) (Quit: WeeChat 3.3)
[00:04:31] *** Joins: sokan (~sokan@2a02:587:9e19:4700:227:eff:fe16:865d)
[00:05:32] *** Quits: c4017w__ (~c4017@209.52.68.8) (Ping timeout: 240 seconds)
[00:05:32] *** Quits: p|q (~plq@94.54.154.86) (Ping timeout: 240 seconds)
[00:07:02] *** Quits: schumaml (~schumaml@dslb-092-074-001-254.092.074.pools.vodafone-ip.de) (Ping timeout: 240 seconds)
[00:07:06] *** Quits: boris_ (m-vwhg2g@152.70.163.76) (Remote host closed the connection)
[00:07:40] *** Quits: sokan (~sokan@2a02:587:9e19:4700:227:eff:fe16:865d) (Client Quit)
[00:08:37] *** Joins: boris_ (m-vwhg2g@152.70.163.76)
[00:08:55] *** Joins: Guest54 (~Guest54@2620:10d:c092:400::4:3275)
[00:09:10] *** Joins: schumaml (~schumaml@dslb-188-104-166-014.188.104.pools.vodafone-ip.de)
[00:09:10] *** Quits: Guest53 (~Guest53@2600:1700:1c71:a3c0:3987:4de1:247b:4178) (Quit: Client closed)
[00:09:28] *** Joins: Siecje (~Siecje@97.111.200.190)
[00:09:41] *** Joins: sokan (~sokan@2a02:587:9e19:4700:227:eff:fe16:865d)
[00:10:08] *** Joins: Guest53 (~Guest53@2600:1700:1c71:a3c0:3987:4de1:247b:4178)
[00:10:14] *** Joins: pasko (~pasko@5.43.103.217)
[00:10:43] *** Quits: pasko (~pasko@5.43.103.217) (Client Quit)
[00:10:50] *** Joins: mon_aaraj (~MonAaraj@user/mon-aaraj/x-4416475)
[00:11:14] *** Quits: grandrew (~grandrew@104-50-140-129.lightspeed.sntcca.sbcglobal.net) (Ping timeout: 260 seconds)
[00:11:35] *** Quits: EvilDMP (~textual@django/moderator/EvilDMP) (Quit: My MacBook has gone to sleep. ZZZzzz…)
[00:11:38] *** Joins: KimK (~KimK@ip98-186-40-208.ks.ks.cox.net)
[00:11:50] *** Quits: kostkon_ (~androirc@2a02:587:a10f:c988:a923:3f21:2f27:b1a5) (Quit: AndroIRC - Android IRC Client ( http://www.androirc.com ))
[00:11:57] *** Joins: dakudos (~dakudos@c-73-229-175-50.hsd1.co.comcast.net)
[00:12:03] *** Joins: impermanence (~impermane@c-75-73-193-204.hsd1.mn.comcast.net)
[00:12:03] <ivii> How would I mock.patch this calls? I have list of strings that I want to return from csv.reader but how to enter open() ? https://dpaste.org/aNRZ
[00:12:33] <exarkun> ivii: Why mock csv.reader at all?  It takes a simple value as input and returns a simple value as output.
[00:12:34] *** Joins: Roey (~Roey@user/Roey)
[00:12:51] *** Joins: grandrew (~grandrew@104-50-140-129.lightspeed.sntcca.sbcglobal.net)
[00:13:25] <exarkun> flower_: I think in `__main__.py` you want `from .hello import ...`
[00:13:40] <exarkun> oh wait no
[00:13:43] <exarkun> you have no top-level package at all
[00:13:50] <exarkun> you probably want a top-level package.
[00:14:25] <ivii> https://dpaste.org/G6oG
[00:14:36] *** Quits: bahamas (~lucian@84.232.140.158) (Ping timeout: 240 seconds)
[00:14:43] <ivii> What is csv.reader input value? StringIO?
[00:15:00] <ivii> exarkun:
[00:15:08] <exarkun> ivii: right
[00:15:40] <flower_> exarkun: ok
[00:15:51] <Siecje> nedbat: Thanks for maintaining coverage. Today I finally got a project to 100% coverage.
[00:16:10] *** Joins: de-facto (~de-facto@user/de-facto)
[00:16:37] *** Quits: Guest53 (~Guest53@2600:1700:1c71:a3c0:3987:4de1:247b:4178) (Quit: Client closed)
[00:16:44] <de-facto> Hi how can i define a filter function removing a certain list of unicode characters from a given text?
[00:17:37] *** Quits: merijn (~merijn@c-001-001-001.client.esciencecenter.eduvpn.nl) (Ping timeout: 256 seconds)
[00:17:38] <phy1729> I'd probably ''.join(c if c not in bad_chars else '' for c in string)
[00:17:52] <exarkun> de-facto: https://docs.python.org/3/library/stdtypes.html#str.maketrans
[00:18:15] <Tritium> that doesn't look right, phy1729
[00:18:40] <Tritium> ''.join(c for c in mystr if c not in bad_chars) would work
[00:18:56] *** Joins: kyooo (~kyooo@2a02:a31d:a13c:5600:559d:f748:905d:cda9)
[00:19:12] <Tritium> heck ''.join(c for c in mystr if c in whitelist) is probably a better way to go
[00:19:45] <phy1729> oh yeah that's nicer
[00:19:59] <flower_> exarkun: ok, that step works, gracias. Now up to entry points.
[00:21:29] *** Quits: ghost43 (~ghost43@gateway/tor-sasl/ghost43) (Remote host closed the connection)
[00:21:59] <exarkun> de-facto: or just str.translate directly - eg "Hello world".translate({ord("o"): None})
[00:22:12] *** Joins: ghost43 (~ghost43@gateway/tor-sasl/ghost43)
[00:22:53] <ivii> https://dpaste.org/kCus
[00:23:09] <ivii> It loads empty list like this
[00:23:32] *** Joins: TheCat (~TheCat@user/z-cat)
[00:23:57] *** Quits: pyeveryt_ (~pyeveryth@dot1x-155-41-160-40.bumc.bu.edu) (Remote host closed the connection)
[00:24:10] <ivii> I probably do mock_open wrong
[00:24:41] <ivii> I need mock open to just enter
[00:24:56] <exarkun> ivii: don't mock open.  refactor your code into two units, one that opens a file and another that does stuff with csv.reader
[00:25:05] <exarkun> ivii: then, just call the 2nd unit with a StringIO - no mock required
[00:25:10] *** Quits: HurricaneHarry (~quassel@2a02-a455-9d06-1-64f7-fbdb-e82b-2490.fixed6.kpn.net) (Remote host closed the connection)
[00:25:30] <exarkun> and maybe don't bother with mock for the 1st unit, either.  just make a temp file and ask it to open that for you.
[00:25:38] <nedbat> Siecje: you're welcome :)
[00:25:46] <nedbat> graingert[m]: Can you catch me up on what's going on?
[00:26:26] *** Joins: HurricaneHarry (~quassel@2a02-a455-9d06-1-f46a-e353-7401-8806.fixed6.kpn.net)
[00:26:46] *** Joins: nuclearg1 (~nucleargr@user/nuclearg1)
[00:27:40] *** Quits: sobkas (~sobkas@95.175.17.217) (Quit: sobkas)
[00:28:37] *** Joins: quhar (~quhar@staticline-31-182-241-146.toya.net.pl)
[00:28:38] *** Quits: LuKaRo_ (~LuKaRo@p57b157e5.dip0.t-ipconnect.de) (Ping timeout: 250 seconds)
[00:28:55] <de-facto> exarkun, hmm i am not sure i understand (i am not fluent in python)
[00:31:29] *** Quits: schumaml (~schumaml@dslb-188-104-166-014.188.104.pools.vodafone-ip.de) (Ping timeout: 252 seconds)
[00:31:32] *** Quits: nuclearg1 (~nucleargr@user/nuclearg1) (Ping timeout: 240 seconds)
[00:31:32] *** Quits: marderIII (~MarderIII@86.88.74.111) (Ping timeout: 240 seconds)
[00:31:32] *** Quits: ghost43 (~ghost43@gateway/tor-sasl/ghost43) (Remote host closed the connection)
[00:31:47] *** Joins: ExpiredKebab (~sgreadly@2407:7000:89aa:b303:b8b1:47fa:69dd:e3fc)
[00:32:12] <Tritium> de-facto: exarkun is suggesting you use the translate method of strings to make a new string with the translate method.  the method accepts dicts of unicode characters (or their ordinal numbers) to what they should be replaced with.
[00:32:13] *** Joins: ghost43 (~ghost43@gateway/tor-sasl/ghost43)
[00:32:20] *** MightyMu is now known as MetaMu
[00:32:37] *** Quits: carl--- (~carl-@c-138ee555.02-180-73746f39.bbcust.telenor.se) (Ping timeout: 240 seconds)
[00:32:37] *** Quits: rindolf (~shlomif@inkscape/dev/shlomif) (Read error: Connection reset by peer)
[00:32:50] <de-facto> ah i see
[00:32:53] <Tritium> de-facto: i would recommend against that as its a fairly uncommon method to use and isn't idiomatic
[00:32:56] *** Quits: Siecje (~Siecje@97.111.200.190) (Remote host closed the connection)
[00:33:05] *** MetaMu is now known as MightyMu
[00:33:16] <Tritium> You wont remember why you did it in a year
[00:33:24] *** Joins: schumaml (~schumaml@dslb-092-074-015-234.092.074.pools.vodafone-ip.de)
[00:33:50] <flower_> exarkun: now the first entry test is working too. thx
[00:34:07] <Tritium> de-facto: the ''.join(c for c in mystr if c not in bad_characters) version uses idioms you use every day in python.
[00:34:37] <Tritium> de-facto: exarkun's method is only really useful if stripping characters is the bottleneck of your code
[00:34:38] <exarkun> yea, it's only a method of the builtin type, very unidiomatic
[00:35:11] *** Quits: Guest54 (~Guest54@2620:10d:c092:400::4:3275) (Ping timeout: 256 seconds)
[00:35:15] <Tritium> exarkun: uh, yeah it is.  Its a built in method, but uncommon.
[00:35:20] *** Joins: marderIII (~MarderIII@86-88-74-111.fixed.kpn.net)
[00:35:30] *** Quits: irc_user (uid423822@id-423822.lymington.irccloud.com) (Quit: Connection closed for inactivity)
[00:35:30] *** Quits: ayustae (Thunderbir@gateway/vpn/protonvpn/ayustae) (Quit: ayustae)
[00:36:00] *** Quits: jpodivin (~jpodivin@cgnat44-pool3-68-187.poda.cz) (Ping timeout: 250 seconds)
[00:36:18] <Tritium> join, you will use every day.  listcomps and genexps you will use every day, translate you will use once a year and have to look up the docs for every time
[00:36:49] <exarkun> I'm not going to argue personal preference.
[00:36:51] <AhmedAmerican> https://bpa.st/IG5A why line `#13` is never executed ? for that input `./script.py p 18/03/2022`. it's only given the following `error: argument Start Date: invalid valid_date_type value: '18/03/2022'`
[00:37:00] <SnoopJ> n.b. that doesn't mean it isn't the right tool for the job
[00:37:07] * SnoopJ can't remember the last time he used translate() though
[00:37:13] <Tritium> ^
[00:38:16] <exarkun> I wish pympler were a more actively developed project.
[00:38:30] <exarkun> It's about the first third of a good tool but it falls over quite quickly. :(
[00:38:30] *** Quits: theseb (~theseb@47-220-214-54.cnrocmta03.res.dyn.suddenlink.net) (Quit: Leaving)
[00:39:04] *** Joins: caveman (~caveman@gateway/tor-sasl/caveman)
[00:39:05] *** Joins: Siecje (~Siecje@97.111.200.190)
[00:39:20] *** Joins: sr71919 (~sr71919@2405:201:e025:f094:5c03:d16a:899f:b81)
[00:40:15] *** Quits: GNUmoon (~GNUmoon@gateway/tor-sasl/gnumoon) (Ping timeout: 240 seconds)
[00:40:49] <graingert[m]> I'm getting a frame that has a f_lineno that's None, but it's got a valid f_lasti and code object. The repro is on https://github.com/dask/distributed/pull/5952/files#diff-01d874959661d906b3a84fdefcc7b91607a8429a76ec56cce35ffaaaa98034dfR87
[00:41:45] <nedbat> graingert[m]: i've written a few issues about lineno==None, latest is here: https://bugs.python.org/issue46911
[00:43:55] <graingert[m]> Oof I forgot to store self._frame
[00:44:10] <flower_> exarkun: this doesn't work, when I use hello.py as module instead of __init__.py, dunno why https://codeberg.org/avlap/setuptools_test/src/branch/entry_points
[00:44:14] <graingert[m]> nedbat: Do you have an f_listi when you get a None lineno?
[00:44:24] <graingert[m]> * Do you have an f_lasti when you get a None lineno?
[00:44:26] *** Quits: lakrass (~lakrass@user/lakrass) (Quit: WeeChat 3.4.1)
[00:45:48] <nedbat> graingert[m]: i don't know off-hand
[00:47:36] *** Joins: Stench (~Staunch@c-24-7-237-208.hsd1.mn.comcast.net)
[00:48:07] *** Joins: zen_coder (~zen_coder@2a02:8109:a280:2d8d:11e0:bab1:2383:8658)
[00:48:42] *** Joins: rindolf (~shlomif@inkscape/dev/shlomif)
[00:48:47] *** Quits: _xor (~xor@dsl-50-5-233-169.fuse.net) (Ping timeout: 256 seconds)
[00:50:18] *** Quits: transeIstor (~transeIst@h67-204-160-244.bendor.broadband.dynamic.tds.net) (Quit: WeeChat 2.8)
[00:50:42] <graingert[m]> I'm trying to work out how I can possibly get into a situation where I have an f_lasti but no f_lineno :p
[00:50:44] *** Quits: Staunch (~Staunch@137.83.202.220) (Ping timeout: 250 seconds)
[00:52:24] *** Quits: nyah (~nyah@05453449.skybroadband.com) (Quit: leaving)
[00:52:45] *** Quits: moog_ (~moog@98.97.86.136) (Ping timeout: 256 seconds)
[00:52:53] *** Joins: sobkas (~sobkas@95.175.17.217)
[00:54:07] *** Joins: LuKaRo (~LuKaRo@p4fc3382e.dip0.t-ipconnect.de)
[00:54:28] *** Joins: qlixed (~qlixed@152.170.36.244)
[00:55:42] *** Quits: ghost43 (~ghost43@gateway/tor-sasl/ghost43) (Remote host closed the connection)
[00:56:19] *** Joins: ghost43 (~ghost43@gateway/tor-sasl/ghost43)
[00:56:46] *** Stench is now known as Staunch
[00:57:51] *** Quits: marderIII (~MarderIII@86-88-74-111.fixed.kpn.net) (Ping timeout: 256 seconds)
[00:58:31] *** Joins: nyah (~nyah@05453449.skybroadband.com)
[00:59:24] *** Quits: mixfix41 (~sdenyninn@user/mixfix41) (Ping timeout: 250 seconds)
[01:00:05] *** Joins: nuclearg1 (~nucleargr@user/nuclearg1)
[01:00:48] *** Joins: EvilDMP (~textual@django/moderator/EvilDMP)
[01:01:34] *** Joins: penguino (~mrpenguin@user/mrpenguin)
[01:02:47] *** Joins: c4017w__ (~c4017@209.52.68.8)
[01:03:23] *** Quits: zer0bitz (~zer0bitz@dsl-hkibng32-54fbf8-224.dhcp.inet.fi) (Read error: Connection reset by peer)
[01:04:42] *** Quits: Staunch (~Staunch@c-24-7-237-208.hsd1.mn.comcast.net) (Remote host closed the connection)
[01:04:54] *** Quits: nuclearg1 (~nucleargr@user/nuclearg1) (Ping timeout: 260 seconds)
[01:05:07] *** frau_dr_aoei is now known as doctrix_aoei
[01:05:15] *** Joins: HiccupJul (~HiccupJul@cpc122682-reig6-2-0-cust39.6-3.cable.virginm.net)
[01:05:18] *** Joins: Staunch (~Staunch@137.83.202.220)
[01:05:48] *** Joins: _xor (~xor@dsl-50-5-235-185.fuse.net)
[01:06:08] *** Quits: c4017w_ (~c4017@209.52.68.8) (Ping timeout: 252 seconds)
[01:09:05] *** Joins: __xor (~xor@dsl-50-5-235-185.fuse.net)
[01:09:56] *** Joins: Seirdy (~Seirdy@sourcehut/user/seirdy)
[01:10:56] *** Quits: uxemacs (~timothy@user/uxemacs) (Quit: Konversation terminated!)
[01:11:00] *** Quits: _xor (~xor@dsl-50-5-235-185.fuse.net) (Ping timeout: 240 seconds)
[01:11:01] *** Quits: FinnElija (~finn_elij@user/finn-elija/x-0085643) (Remote host closed the connection)
[01:12:24] *** Quits: foul_owl (~kerry@23.82.193.89) (Ping timeout: 250 seconds)
[01:14:13] *** Joins: uxemacs (~timothy@user/uxemacs)
[01:14:14] *** Joins: mug3n_ (~mugen@gateway/tor-sasl/mugen)
[01:14:20] *** Joins: FinnElija (~finn_elij@user/finn-elija/x-0085643)
[01:16:01] *** Quits: TonyStone (~TonyStone@2603-7080-8607-c36a-a161-049d-edaf-1b31.res6.spectrum.com) (Quit: Leaving)
[01:16:35] *** Quits: mug3n (~mugen@gateway/tor-sasl/mugen) (Ping timeout: 240 seconds)
[01:17:11] *** Quits: rendar (~rendar@user/rendar) (Quit: Leaving)
[01:19:56] *** Quits: nomic (~nomic@185.217.117.111) (Quit: Leaving)
[01:21:32] *** Quits: mdemo (~mdemo@user/mdemo22) (Ping timeout: 240 seconds)
[01:21:39] *** Quits: __xor (~xor@dsl-50-5-235-185.fuse.net) (Ping timeout: 256 seconds)
[01:22:40] *** Quits: magla (~gelignite@d5364d83.access.ecotel.net) (Quit: Stay safe!)
[01:23:13] *** Joins: mdemo (~mdemo@user/mdemo22)
[01:23:32] <HiccupJul> if i do if x() == y, is there some way to get the return value of x within the if statement?
[01:23:39] *** Quits: aslicedbanjo (~aslicedba@host86-178-157-158.range86-178.btcentralplus.com) (Quit: Leaving.)
[01:23:39] <HiccupJul> *of x()
[01:23:40] *** Joins: alfred999 (~alfred999@37.103.140.128)
[01:23:45] <HiccupJul> without doing x = x() first
[01:24:54] *** Quits: Barones (~Barones@user/Barones) (Quit: Leaving)
[01:25:32] *** Quits: kyooo (~kyooo@2a02:a31d:a13c:5600:559d:f748:905d:cda9) (Quit: Leaving)
[01:25:35] *** Quits: alfred999 (~alfred999@37.103.140.128) (Remote host closed the connection)
[01:27:13] *** Joins: gentooclimax (~gentoocli@81-64-65-213.rev.numericable.fr)
[01:27:47] <Repiphany> HiccupJul: walrus operator
[01:27:52] *** Joins: parv (~quass@user/parv)
[01:28:11] <Repiphany> if (res := x()) == y: print(res)
[01:28:31] *** Quits: sobkas (~sobkas@95.175.17.217) (Quit: sobkas)
[01:28:33] *** Joins: GNUmoon (~GNUmoon@gateway/tor-sasl/gnumoon)
[01:28:37] <HiccupJul> interesting, thanks
[01:29:10] *** Joins: roxfan (~roxfan@2a02:a03f:a2be:4f00:49af:1e90:ff60:b7d7)
[01:29:27] *** Joins: __xor (~xor@dsl-50-5-233-169.fuse.net)
[01:29:34] <de-facto> how do i add a private thingy to a class like this? whitelist = [ u"●" ]
[01:29:59] <Repiphany> Python doesn't have private anything
[01:30:37] <grym> de-facto: do you want to add an attribute called whitelist to a class instance?
[01:31:02] <de-facto> something inside that class that is not in global scope
[01:31:12] <grym> well, it's in the class' scope
[01:31:17] <de-facto> yes
[01:31:26] *** Joins: moog (~moog@107.126.53.83)
[01:31:27] <grym> as Repiphany said, there's no such thing as private in python
[01:31:39] <grym> you can always reach in from outside and get it
[01:31:42] <de-facto> so i just indent it?
[01:31:51] *** Quits: gentooclimax (~gentoocli@81-64-65-213.rev.numericable.fr) (Ping timeout: 256 seconds)
[01:31:55] <grym> i'm not sure i understand you
[01:32:00] *** Joins: cdown_ (~cdown@163.114.131.1)
[01:32:18] <de-facto> hmm maybe i just hardcode it then
[01:32:26] <de-facto> i am new to python sorry
[01:32:29] <grym> are you defining a new class and want to know how to give it attributes?
[01:32:39] <de-facto> yes i guess
[01:32:46] <grym> ah.  sec.
[01:33:14] *** Quits: jamea (~jamea@189.231.55.29) (Ping timeout: 268 seconds)
[01:34:18] <grym> de-facto: https://bpa.st/OPWQ
[01:34:45] *** Quits: cdown (~cdown@188.214.11.14) (Ping timeout: 252 seconds)
[01:34:57] *** cdown_ is now known as cdown
[01:35:09] *** __xor is now known as _xor
[01:35:10] <grym> de-facto: a few things to note there: whitelist does not care what type it is.  and you can't assign a default in init for the way you might think (as =["●"]) because of bit.ly/pynames1.  and strings don't need u in front of them
[01:35:13] *** Quits: kickingvegas (~cchoi@c-73-170-198-193.hsd1.ca.comcast.net) (Quit: leaving)
[01:35:44] *** Joins: dodobrain (~dodobrain@user/dodobrain)
[01:35:48] *** Quits: flower_ (~archie@217-123-218-6.cable.dynamic.v4.ziggo.nl) (Ping timeout: 240 seconds)
[01:35:51] *** Joins: pyeverything (~pyeveryth@dot1x-155-41-160-40.bumc.bu.edu)
[01:35:53] *** Quits: manti7 (~manti7@176.10.104.94) (Quit: WeeChat 3.4)
[01:36:22] *** Joins: nuclearg1 (~nucleargr@user/nuclearg1)
[01:36:24] *** Quits: soju-test-user (~soju-test@lfbn-idf2-1-1140-121.w90-92.abo.wanadoo.fr) (Remote host closed the connection)
[01:36:38] *** Joins: julius3 (~raffaem@95.74.74.78)
[01:36:45] *** Joins: flower_ (~archie@217-123-218-6.cable.dynamic.v4.ziggo.nl)
[01:37:38] *** Joins: RougeR (~rougex250@user/rouger)
[01:38:21] *** Quits: Vornicus (~Vornicus@2603-8000-5d07-7ef0-44bf-6e8e-94ff-564e.res6.spectrum.com) (Read error: Connection reset by peer)
[01:39:53] *** Quits: blei (~blei@user/blei) (Quit: Client closed)
[01:40:02] *** Quits: baffodoro (~raffaem@95.74.53.208) (Ping timeout: 240 seconds)
[01:40:20] *** Joins: nomic (~nomic@185.217.117.111)
[01:40:21] *** Quits: pyeverything (~pyeveryth@dot1x-155-41-160-40.bumc.bu.edu) (Ping timeout: 256 seconds)
[01:40:39] *** Joins: foobaz212 (~foobaz212@152.37.103.80)
[01:41:29] *** Quits: nuclearg1 (~nucleargr@user/nuclearg1) (Ping timeout: 256 seconds)
[01:43:57] *** Quits: src (~src@user/src) (Quit: leaving)
[01:44:06] *** Quits: schumaml (~schumaml@dslb-092-074-015-234.092.074.pools.vodafone-ip.de) (Ping timeout: 260 seconds)
[01:44:39] <de-facto> thanks i think that made it more clear
[01:45:07] *** Joins: newdimension (~newdimens@user/newdimension)
[01:45:46] <de-facto> grym, so why cant i just put whitelist in the scope of that class?
[01:45:54] <de-facto> without making it accessible from outside?
[01:45:56] <RougeR> been struggling to get this through PR
[01:46:05] <RougeR> does it seem sensible to others?
[01:46:11] *** Joins: schumaml (~schumaml@ipservice-092-211-203-092.092.211.pools.vodafone-ip.de)
[01:46:12] *** Quits: ice9 (~ice9@user/ice9) (Ping timeout: 250 seconds)
[01:46:26] <RougeR> celery no longer allows class based tasks so i wrote a wrapper for it
[01:46:27] <RougeR> https://bpa.st/QKLA
[01:46:32] *** Quits: caveman (~caveman@gateway/tor-sasl/caveman) (Quit: btc donations: bc1qt3chy4rqtzjny2h7qt47cy7nmu6th9sr66wa02)
[01:46:36] *** Quits: [itchyjunk] (~itchyjunk@user/itchyjunk/x-7353470) (Remote host closed the connection)
[01:46:47] *** Joins: whatsupdoc (uid509081@id-509081.hampstead.irccloud.com)
[01:46:55] *** Joins: [itchyjunk] (~itchyjunk@user/itchyjunk/x-7353470)
[01:47:32] *** Quits: ghost43 (~ghost43@gateway/tor-sasl/ghost43) (Remote host closed the connection)
[01:47:35] <RougeR> its not 100% finished, but was an initial proof of concept before tidying up docs and adding tests
[01:48:19] *** Joins: ghost43 (~ghost43@gateway/tor-sasl/ghost43)
[01:48:30] *** Joins: foul_owl (~kerry@23.82.193.89)
[01:48:45] *** Quits: adiKt (uid472628@id-472628.tinside.irccloud.com) (Quit: Connection closed for inactivity)
[01:49:06] *** Quits: nomic (~nomic@185.217.117.111) (Quit: Leaving)
[01:49:35] *** Quits: palasso (~palasso@user/palasso) (Remote host closed the connection)
[01:49:38] <grym> de-facto: the python language has no syntax to express that semantic
[01:50:48] *** Quits: darksun (~darksun@user/darksun) (Remote host closed the connection)
[01:50:55] <de-facto> hmm what happens if i put an indended whitelist = [ ... ] in that class?
[01:51:40] <parv> de-facto, You  could have a list as class attribute (still can be manipulated from outside) : https://bpa.st/HYCQ
[01:52:16] *** Quits: schumaml (~schumaml@ipservice-092-211-203-092.092.211.pools.vodafone-ip.de) (Ping timeout: 250 seconds)
[01:52:21] <grym> class attributes are i think nearly always not what you want
[01:52:41] <grym> because no static const or private, they have very confusing behavior
[01:52:55] <grym> (i don't use them at all, personally)
[01:53:17] <de-facto> hmm python is weird indeed
[01:54:09] *** Joins: CodePoint (~jonathan@107-208-128-79.lightspeed.tukrga.sbcglobal.net)
[01:54:18] <grym> it is not java, anyway
[01:54:25] *** Joins: schumaml (~schumaml@dslb-092-074-013-032.092.074.pools.vodafone-ip.de)
[01:54:57] *** Joins: Barones (~Barones@user/Barones)
[01:55:04] <de-facto> is a methods scope somewhat private?
[01:55:21] <nedbat> de-facto: what do you mean "accessible from the outside"? it would have to be Class.whitelist
[01:55:21] <grym> the intermediate variables inside a method or function are not accessible outside of it.
[01:56:49] <de-facto> hmm yeah but they are only local to that methods exec instant in time, so also not what i want
[01:57:13] <RougeR> de-facto, do you just want the whitelist to not be able to be altered?
[01:57:14] <grym> de-facto: it might help if you express what you do want and ask how to get it
[01:57:15] <de-facto> why would python not support private attributes to a class?
[01:57:26] <RougeR> de-facto, dynamic language
[01:57:36] <RougeR> ruby technically does but its easy to break
[01:57:44] <grym> java does but it's also easy to break
[01:57:46] <RougeR> it would just be a facade of private
[01:57:53] <grym> so python's style is "why bother"
[01:57:59] <grym> and has been for ever
[01:58:12] <de-facto> id be used to defining a private property and define setters and getters to that
[01:58:24] <RougeR> private attributes are denoted by using a leading underscor i.e def _private_function():
[01:58:34] <grym> RougeR: except that's a lie/convention
[01:58:37] <RougeR> correct
[01:58:47] <grym> de-facto: right; you don't do that in python.  you just set stuff
[01:59:21] <de-facto> so what if i would like to only set something but never leak it as public property?
[01:59:23] <RougeR> yeah you wouldnt use getters and setters unless you were using it as a design pattern i.e token refresh using attribute access
[01:59:32] <grym> de-facto: https://bpa.st/EDKA
[01:59:33] <grym> de-facto: you can't
[01:59:36] <RougeR> de-facto, you dont.
[01:59:49] <de-facto> e.g. encryptor.setKey(secret)
[01:59:57] <de-facto> (just as an arbitrary example)
[02:00:12] <nedbat> de-facto: if you don't mind me asking, who are you trying to hide it from, and why?
[02:00:23] <grym> de-facto: that looks like a method call to me :)
[02:00:38] *** Joins: bitdex (~bitdex@gateway/tor-sasl/bitdex)
[02:00:39] <nedbat> de-facto: but the caller gave you the secret. why try to hide it from them?
[02:00:45] <grym> (so if you don't want the class instance to store `secret`, don't set it..
[02:00:50] <RougeR> yeah, your code shouldnt need to hide from itself
[02:01:23] <de-facto> hmmm
[02:01:50] *** Quits: Telvana (~capo@user/telvana) (Quit: ZNC 1.9.x-git-170-9be0cae1 - https://znc.in)
[02:01:59] <jinsun__> you shouldn't store actual secrets in private variables in other languages either that have that feature
[02:02:16] <de-facto> what if i dont want that someone changes a property to avoid side effects?
[02:02:25] <de-facto> e.g. only allow setters that do it properly?
[02:02:26] <grym> de-facto: pinkie swear not to
[02:02:30] <RougeR> then express that in your code de-facto
[02:02:40] <nedbat> de-facto: there are ways to do that, but let's get extreme: why should you get to dictate what a caller does with your code?
[02:03:05] <Repiphany> People can do whatever they want if they have the source code to run your python program
[02:03:06] <grym> de-facto: as a developer convention, you signal to your callers that this is meant for you not them and if they touch it it's on them by naming some attributes with a single leading underscore
[02:03:07] <nedbat> de-facto: write the docs to explain what to do. Make it easy to do it the right way, and then just let things be.
[02:03:08] <de-facto> i thought thats the whole point in OOP to encapsulate things and define interfaces
[02:03:17] *** Quits: tapeworm (~tapeworm@188.168.50.119) (Quit: Leaving)
[02:03:20] <exarkun> de-facto: with objects
[02:03:23] <nedbat> de-facto: encapsulation is great. But why does it need to be enforced?
[02:03:25] <RougeR> it is, but no one is holding a gun to your head to obey those rules
[02:03:28] *** Joins: c4017w_ (~c4017@209.52.68.8)
[02:03:29] <jinsun__> de-facto: prefixing the attribute name with underscore indicates that it shouldn't be accessed from outside, and liniting tools like pylint and pyright will enforce that too
[02:03:37] <RougeR> ^
[02:03:47] <grym> de-facto: so like foo._not_for_you; i would expect that if i, not-Foo, touched that, then what happens next is on me
[02:04:06] <grym> but nothing will stop me from doing it if i'm hell-bent on doing it
[02:04:10] <de-facto> well if it should not be accessible why having it accessible then?
[02:04:30] <RougeR> because thats the way the language works
[02:04:32] <grym> de-facto: will you accept "because" ?
[02:04:34] <de-facto> e.g. why should i trust that assumption rather than enforcing it
[02:04:36] <grym> that's really the reason
[02:04:36] *** Quits: flower_ (~archie@217-123-218-6.cable.dynamic.v4.ziggo.nl) (Ping timeout: 240 seconds)
[02:04:41] <jinsun__> it is simpler that way
[02:04:47] <jinsun__> and easier to debug too
[02:04:51] <de-facto> ok hmm, to me that is weird but ok
[02:04:55] <RougeR> de-facto, because no matter what you do its easy enough to hack around it
[02:05:03] <grym> it takes some getting used to if you're used to private + setter/getter style, sure
[02:05:09] <grym> but, when in rome
[02:05:10] <RougeR> ruby has private variable but you can just setattr and get around it
[02:05:23] <nedbat> de-facto: you won't miss writing these methods:  def getFoo(self): return self.foo
[02:05:32] *** Quits: cyphase (~cyphase@user/cyphase) (Ping timeout: 240 seconds)
[02:05:43] <RougeR> wait till he discovers cached_property
[02:05:48] *** Joins: flower_ (~archie@217-123-218-6.cable.dynamic.v4.ziggo.nl)
[02:06:01] <grym> de-facto: old talk, but https://www.youtube.com/watch?v=wf-BqAjZb8M  touches on this sort of thing by way of example
[02:06:15] <grym> (in which a java bindings package gets a pythonic coat of paint)
[02:06:18] <RougeR> grym, i love that talk!
[02:06:22] <RougeR> show it to a lot of people
[02:06:25] <RougeR> shown*
[02:06:40] *** Joins: jamea (~jamea@10.189-202-213.bestelclientes.com.mx)
[02:06:41] *** Quits: cosimone (~user@93-44-187-176.ip98.fastwebnet.it) (Read error: Connection reset by peer)
[02:07:00] *** Quits: c4017w__ (~c4017@209.52.68.8) (Ping timeout: 250 seconds)
[02:07:11] *** Joins: moog_ (~moog@98.97.86.136)
[02:07:37] <grym> it's a classic
[02:08:17] *** Joins: blei (~blei@user/blei)
[02:08:25] <RougeR> I like to think he very much encapsulate my philosophy to writing code
[02:08:33] *** Quits: quhar (~quhar@staticline-31-182-241-146.toya.net.pl) (Quit: WeeChat 3.4)
[02:09:02] <RougeR> grym, do you think this metaclass is overly complex? getting kick back at work...
[02:09:08] <RougeR> https://bpa.st/QKLA#2L2
[02:09:10] <grym> RougeR: it has meta in the name; yes
[02:09:12] <grym> :P
[02:09:15] <RougeR> hehe
[02:09:20] <grym> i don't even have to click the link
[02:09:29] <exarkun> my test suite leaks file descriptors to sqlite3 databases.  I spent a good chunk of time today chasing down reference chains based on gc.get_referrers ... which doesn't actually work to find sqlite3.Connection instances because Connection doesn't participate in cycle collection (has no tp_traverse).
[02:09:34] <RougeR> it just means we dont have to define a function for every single class as well and can inherit options grym
[02:09:35] *** Quits: N3X15 (~nexis@mail.nexisonline.net) (Quit: ZNC - http://znc.in)
[02:09:41] <exarkun> are there any other tools that do a better job in such a case?
[02:09:42] <RougeR> its not doing anything too magical.
[02:09:46] * SnoopJ deletes grym's metadata classes
[02:09:53] <grym> good riddance
[02:09:55] <RougeR> its well documented and has clear interfaces
[02:09:57] *** Quits: moog (~moog@107.126.53.83) (Ping timeout: 252 seconds)
[02:10:22] *** Joins: Telvana (~capo@user/telvana)
[02:10:23] *** Quits: concerned_goat (~concerned@hari-23-b2-v4wan-164840-cust99.vm1.cable.virginm.net) (Ping timeout: 256 seconds)
[02:10:49] <jinsun__> de-facto: type checkers like mypy and pyright and linters like flake8 and pylint are good if you want to have that kind of strictness, in python these things are just optional, but you should use them if you feel that the interpreter is not complaining enough
[02:10:56] <nedbat> de-facto: different languages have different approaches to OOP, and different cultures.  People get taught OOP with Java/C++, and mix together the language culture with the OOP basics.
[02:11:32] *** Joins: cosimone (~user@93-44-187-176.ip98.fastwebnet.it)
[02:11:47] *** Joins: adiKt (uid472628@id-472628.tinside.irccloud.com)
[02:12:09] *** Joins: N3X15 (~nexis@mail.nexisonline.net)
[02:12:12] <SnoopJ> RougeR, the metaclass itself looks pretty straightforward, although I would probably be a little more cautious about `cls.decorator` and use getattr()
[02:12:13] <de-facto> i was introduced to it on CPP back in the uni
[02:12:36] <nedbat> de-facto: yeah, c++ has a different style than python, for sure.
[02:12:36] <RougeR> SnoopJ, yeah i had a getattr in there before. why do you recommend that?
[02:12:55] <SnoopJ> RougeR, because the class might not define the attribute at all, and the resulting AttributeError might be a little obtuse
[02:13:17] <SnoopJ> I guess you could enforce that elsewhere, though. It's not a critical thing, though
[02:13:26] <RougeR> SnoopJ, hmmm the abstract class its paired with requires it using @abstractclassproperty
[02:13:44] <RougeR> but i guess there is no guarentee that the metacls will be used with the abstract class
[02:13:57] *** Joins: lerroux (~lerroux@180.190.12.26)
[02:14:01] <RougeR> I also have a check to make sure the class is not abstract before applying the decorator
[02:14:26] <SnoopJ> RougeR, oh, I missed that. Then yea, I don't see anything amiss with the metaclass, aside from being a metaclass at all (which is more than enough for some to pooh-pooh it)
[02:14:48] <RougeR> SnoopJ yeah fair enough. I do get why people get pissy about them
[02:15:01] *** Quits: dthpulse (~quassel@podciarou.sk) (Quit: https://quassel-irc.org - Chat comfortably. Anywhere.)
[02:15:09] <RougeR> i dont think its all that complex to complain about it being magical though
[02:15:15] <SnoopJ> it's a pretty high tier of magic, the gains had better be worth the risk of summoning something eldritch :)
[02:15:23] <RougeR> it allows you to avoid this boilerplate
[02:15:23] *** Joins: obi1 (~obi1@98.159.226.198)
[02:15:37] *** Quits: HiccupJul (~HiccupJul@cpc122682-reig6-2-0-cust39.6-3.cable.virginm.net) (Quit: Leaving)
[02:15:52] <SnoopJ> I would say in this case that the metaclass itself is not particularly magical, but the concept of metaclasses *is*
[02:16:01] <RougeR> https://bpa.st/BHIQ
[02:16:12] *** Joins: cyphase (~cyphase@user/cyphase)
[02:16:19] <SnoopJ> (which is I think where the knee-jerk reaction comes from, because just introducing a metaclass requires all that trivia)
[02:16:20] *** Joins: dthpulse (~quassel@podciarou.sk)
[02:16:29] <RougeR> it allows you to not have to write function boilerplate for each task and means you easily inherit the task options etc
[02:16:58] *** Joins: cyphase_ (~cyphase@172-10-166-228.lightspeed.sntcca.sbcglobal.net)
[02:17:27] *** Joins: nomic (~nomic@185.217.117.111)
[02:18:00] <RougeR> I feel like the potential for bugs and inconsistencies with having to define additional functions is worth it
[02:19:08] <SnoopJ> I confess I have ~zero interest in justifying (or de-justifying) the existence of metaprogramming writ large. It's there, the only discussions that seem worth having are "would we benefit from it?"
[02:19:12] *** Joins: merijn (~merijn@c-001-001-001.client.esciencecenter.eduvpn.nl)
[02:19:17] *** Quits: andreasbuhr (~quassel@p549db611.dip0.t-ipconnect.de) (Quit: https://quassel-irc.org - Chat comfortably. Anywhere.)
[02:19:28] *** Quits: sr71919 (~sr71919@2405:201:e025:f094:5c03:d16a:899f:b81) (Quit: Client closed)
[02:19:32] <RougeR> SnoopJ, yeah i agree.
[02:19:35] <SnoopJ> when your program is juggling classes themselves, the answer might be "yes"
[02:19:38] <RougeR> I think its easy to over do
[02:20:30] <RougeR> SnoopJ, I think my main argument here is that what the metaclass does is simple and well documented. Its also used in a way which can be used as a blackbox my other developers
[02:20:40] <RougeR> they should never have to touch or deal with that metaclass again
[02:21:14] *** Joins: xMopx (~xMopx-lib@192.95.23.134)
[02:21:16] <RougeR> anyway appreciate the input
[02:22:36] *** Quits: cheater (~Username@user/cheater) (Ping timeout: 250 seconds)
[02:23:11] *** Joins: aphysically (~aphysical@user/aphysically)
[02:23:23] *** Quits: TheCat (~TheCat@user/z-cat) (Read error: Connection reset by peer)
[02:23:38] *** Joins: TheCat (~TheCat@user/z-cat)
[02:24:18] <dob1> what does this do user = User(**external_data)  considering external_data a dict ?
[02:24:22] <dob1> the **
[02:24:37] <RougeR> it expands the dict as keyword arguments for the users __init__
[02:25:05] <dob1> ah ok, right
[02:25:14] *** Joins: baffodoro (~raffaem@95.74.74.78)
[02:25:44] <RougeR> i.e external_data = {'id': 1, 'name': 'john'} --> User(**external_data) --> User(id=1, name=john)
[02:25:56] *** Joins: cheater (~Username@user/cheater)
[02:26:02] *** Quits: cyphase_ (~cyphase@172-10-166-228.lightspeed.sntcca.sbcglobal.net) (Quit: cyphase.com)
[02:26:35] <ens> is that related to when i see **kwargs being used in python?
[02:27:34] <SnoopJ> ens, only at the site of a call. In a function signature, it's a separate syntax feature that has the same appearance
[02:27:43] *** Quits: penguino (~mrpenguin@user/mrpenguin) (Remote host closed the connection)
[02:27:49] <RougeR> **kwargs allows any arguments passed which are undefined in the function signature to be assigned to a dict of kwargs
[02:27:52] <SnoopJ> well, not just a call. any expression that isn't a function signature.
[02:29:14] *** Joins: penguino (~mrpenguin@user/mrpenguin)
[02:29:22] *** Quits: fedenix (~fedenix@gateway/tor-sasl/fedenix) (Remote host closed the connection)
[02:29:29] <cyphase> def func(foo, **kwargs): return kwargs     func(foo=1, bar=2, baz=3) == {'bar': 2, 'baz': 3}
[02:29:41] <RougeR> ens, https://bpa.st/BLJA
[02:30:07] <cyphase> also, `kwargs` is not a special name, just the default placeholder people use. you can name it something better if appropriate
[02:30:21] <RougeR> ^
[02:30:39] <cyphase> it stands for keyword arguments
[02:33:34] *** Quits: ghost43 (~ghost43@gateway/tor-sasl/ghost43) (Remote host closed the connection)
[02:33:38] *** Joins: elwoodpd (~elwoodpd@85.210.161.53)
[02:33:55] *** Quits: penguino (~mrpenguin@user/mrpenguin) (Ping timeout: 240 seconds)
[02:33:56] *** Joins: ghost43 (~ghost43@gateway/tor-sasl/ghost43)
[02:34:09] *** Quits: GreenResponse (~tomek@r-45-155-148-237.gpon.bialnet.pl) (Quit: Leaving)
[02:34:56] *** Joins: theprophet (~theprophe@212.58.102.156)
[02:35:10] *** Joins: nuclearg1 (~nucleargr@user/nuclearg1)
[02:35:17] *** Quits: Masterphi (~Masterphi@user/masterphi) (Quit: Masterphi)
[02:36:23] *** Quits: Telvana (~capo@user/telvana) (Quit: ZNC 1.9.x-git-170-9be0cae1 - https://znc.in)
[02:36:33] *** Quits: ncwbqcfe (~rvgzuuqp@gateway/tor-sasl/rvgzuuqp) (Quit: ncwbqcfe)
[02:36:44] *** Joins: theprophet18 (~theprophe@212.58.102.156)
[02:37:47] *** Joins: concerned_goat (~concerned@hari-23-b2-v4wan-164840-cust99.vm1.cable.virginm.net)
[02:38:02] *** Quits: flower_ (~archie@217-123-218-6.cable.dynamic.v4.ziggo.nl) (Ping timeout: 240 seconds)
[02:38:54] *** Joins: flower_ (~archie@217-123-218-6.cable.dynamic.v4.ziggo.nl)
[02:39:03] *** Quits: schumaml (~schumaml@dslb-092-074-013-032.092.074.pools.vodafone-ip.de) (Ping timeout: 256 seconds)
[02:39:30] *** Quits: CodePoint (~jonathan@107-208-128-79.lightspeed.tukrga.sbcglobal.net) (Ping timeout: 250 seconds)
[02:39:51] *** Quits: nuclearg1 (~nucleargr@user/nuclearg1) (Ping timeout: 256 seconds)
[02:40:12] *** Quits: eyepeetee (~aa@user/eyepeetee) (Ping timeout: 252 seconds)
[02:40:23] *** Joins: Telvana (~capo@user/telvana)
[02:40:25] *** Quits: theprophet (~theprophe@212.58.102.156) (Ping timeout: 256 seconds)
[02:40:56] *** Joins: schumaml (~schumaml@dslb-094-216-174-221.094.216.pools.vodafone-ip.de)
[02:40:58] *** Joins: eyepeetee (~aa@024-151-038-076.res.spectrum.com)
[02:41:42] *** Quits: ghost43 (~ghost43@gateway/tor-sasl/ghost43) (Remote host closed the connection)
[02:42:01] *** Joins: ghost43 (~ghost43@gateway/tor-sasl/ghost43)
[02:43:38] *** Quits: shibboleth (~shibbolet@user/shibboleth) (Quit: shibboleth)
[02:46:03] *** Quits: plastico (~plastico@neomutt/plastico) (Quit: WeeChat 3.4)
[02:46:04] <ens> thanks for the explainations of the **kwargs stuff folks.
[02:46:09] <RougeR> no worries :)
[02:46:33] *** Joins: ncwbqcfe (~rvgzuuqp@gateway/tor-sasl/rvgzuuqp)
[02:47:02] *** Quits: baffodoro (~raffaem@95.74.74.78) (Ping timeout: 240 seconds)
[02:47:06] *** Quits: EvilDMP (~textual@django/moderator/EvilDMP) (Quit: My MacBook has gone to sleep. ZZZzzz…)
[02:47:32] *** Joins: EvilDMP (~textual@django/moderator/EvilDMP)
[02:47:47] *** Quits: julius3 (~raffaem@95.74.74.78) (Ping timeout: 256 seconds)
[02:48:02] *** Quits: merijn (~merijn@c-001-001-001.client.esciencecenter.eduvpn.nl) (Ping timeout: 240 seconds)
[02:50:07] *** Quits: tg (~tg@rockylinux/infra/tg) (Quit: tg)
[02:50:30] *** Joins: Esexe_ (~aa@024-151-038-076.res.spectrum.com)
[02:50:48] *** Quits: MercilessDeth (~brad@136.49.59.177) (Quit: Konversation terminated!)
[02:52:13] *** Quits: LucaTM (~LucaTM@user/lucatm) (Quit: Textual IRC Client: www.textualapp.com)
[02:52:19] *** Quits: eyepeetee (~aa@024-151-038-076.res.spectrum.com) (Ping timeout: 256 seconds)
[02:52:52] *** Quits: dubs (~user@user/sbudnik) (Quit: ERC 5.4 (IRC client for GNU Emacs 28.0.91))
[02:53:57] *** Quits: flower_ (~archie@217-123-218-6.cable.dynamic.v4.ziggo.nl) (Ping timeout: 252 seconds)
[02:54:04] *** Joins: jmcb (~jmcb@hacksoc/member/jmcb)
[02:54:13] *** Quits: obi1 (~obi1@98.159.226.198) (Quit: Leaving)
[02:55:06] *** Quits: aphysically (~aphysical@user/aphysically) (Remote host closed the connection)
[02:56:35] *** Joins: u0_a178 (~u0_a178@99-125-205-147.lightspeed.jcvlfl.sbcglobal.net)
[02:56:49] *** Joins: aphysically (~aphysical@user/aphysically)
[02:56:52] *** Joins: BASHitup (~richard@user/yippeekaiyay)
[02:57:04] *** Joins: hiroshi_ (~freedom@151.37.35.191)
[02:57:57] *** Joins: zumba_addict (~zumba_add@c-71-194-58-34.hsd1.il.comcast.net)
[02:59:52] *** Quits: tf (~tf@user/tf) (Quit: tf)
[03:00:04] *** Joins: hams (~hams@73.232.205.0)
[03:00:04] *** Quits: hams (~hams@73.232.205.0) (Changing host)
[03:00:04] *** Joins: hams (~hams@user/hams)
[03:00:12] *** Joins: tf (~tf@user/tf)
[03:00:16] *** Parts: u0_a178 (~u0_a178@99-125-205-147.lightspeed.jcvlfl.sbcglobal.net) ()
[03:00:52] *** Joins: Vile` (~Vile@73.182.253.255)
[03:01:27] *** Joins: jsm (~jmcb@hacksoc/member/jmcb)
[03:01:45] *** Quits: Vile` (~Vile@73.182.253.255) (Changing host)
[03:01:45] *** Joins: Vile` (~Vile@user/Vile/x-1554198)
[03:03:51] *** Quits: nyah (~nyah@05453449.skybroadband.com) (Ping timeout: 252 seconds)
[03:03:54] *** Joins: c4017w__ (~c4017@209.52.68.8)
[03:04:05] *** Quits: kurfen_ (~kurfen@176.119.195.9) (Quit: ZNC 1.8.2 - https://znc.in)
[03:04:50] *** Joins: pyeveryt_ (~pyeveryth@251.sub-174-196-209.myvzw.com)
[03:05:00] *** Quits: jmcb (~jmcb@hacksoc/member/jmcb) (Ping timeout: 240 seconds)
[03:05:02] *** Quits: amogorkon (~amogorkon@user/amogorkon) (Ping timeout: 240 seconds)
[03:05:07] *** Joins: szkl (uid110435@id-110435.uxbridge.irccloud.com)
[03:05:12] *** Quits: RougeR (~rougex250@user/rouger) (Remote host closed the connection)
[03:05:18] *** Quits: hiroshi_ (~freedom@151.37.35.191) (Quit: hiroshi_)
[03:05:30] *** Quits: Codaraxis (~Codaraxis@user/codaraxis) (Ping timeout: 250 seconds)
[03:06:02] *** Quits: kosh (~kosh@user/kosh) (Ping timeout: 240 seconds)
[03:06:07] *** Quits: theprophet18 (~theprophe@212.58.102.156) (Quit: Client closed)
[03:06:19] *** Joins: theprophet (~theprophe@212.58.102.156)
[03:06:41] *** Joins: jamea22 (~jamea@10.189-202-213.bestelclientes.com.mx)
[03:06:58] *** Joins: kurfen (~kurfen@176.119.195.9)
[03:07:02] *** Quits: c4017w_ (~c4017@209.52.68.8) (Ping timeout: 240 seconds)
[03:07:05] *** Quits: akk (~akk@75-161-61-130.albq.qwest.net) (Quit: +++)
[03:07:21] *** Joins: MercilessDeth (~brad@136.49.59.177)
[03:08:13] *** Quits: dodobrain (~dodobrain@user/dodobrain) (Remote host closed the connection)
[03:08:36] *** Quits: jamea (~jamea@10.189-202-213.bestelclientes.com.mx) (Ping timeout: 240 seconds)
[03:08:49] *** Joins: dodobrain (~dodobrain@user/dodobrain)
[03:09:20] *** Joins: nuclearg1 (~nucleargr@user/nuclearg1)
[03:09:32] *** Quits: mon_aaraj (~MonAaraj@user/mon-aaraj/x-4416475) (Ping timeout: 240 seconds)
[03:09:35] *** Joins: jero98772 (~jero98772@2800:484:1d80:d8ce:efcc:cbb3:7f2a:6dff)
[03:10:11] <de-facto> return u''.join(char for char in txt if  ...... ) <-- can i break that into multiple lines?
[03:10:37] <de-facto> its a very long boolean expression
[03:11:10] *** Quits: upsala (~zcb@185.209.196.134) (Quit: WeeChat 3.4.1)
[03:11:17] *** Quits: freeworld (~freeworld@chello085216193138.chello.sk) (Quit: Konversation terminated!)
[03:11:19] *** Quits: efil4cri (~efil4cri@gateway/tor-sasl/wfnintr) (Remote host closed the connection)
[03:11:26] *** Joins: herjazz (~herjazz@p10295192-ipngn22201marunouchi.tokyo.ocn.ne.jp)
[03:11:51] *** Joins: mon_aaraj (~MonAaraj@user/mon-aaraj/x-4416475)
[03:12:18] *** Quits: qlixed (~qlixed@152.170.36.244) (Ping timeout: 260 seconds)
[03:12:22] <Repiphany> Anything in parentheses can span multiple lines
[03:13:03] *** Joins: asa22 (~asa22@31.4.245.88)
[03:13:25] <de-facto> oh so no need for \ or such?
[03:13:32] *** Quits: stdInOut (~stdInOut@user/stdInOut) (Ping timeout: 240 seconds)
[03:13:33] <asa22> how can I list to a function that then is used with map
[03:13:56] <asa22> pass a list*
[03:14:16] <asa22> so like map(fun(num, list1))
[03:14:17] *** Joins: baffodoro (~raffaem@95.74.74.78)
[03:14:25] *** Quits: nuclearg1 (~nucleargr@user/nuclearg1) (Ping timeout: 256 seconds)
[03:14:27] *** Joins: julius3 (~raffaem@95.74.74.78)
[03:14:50] <asa22> wait wtf am I saying
[03:14:50] *** Quits: ExpiredKebab (~sgreadly@2407:7000:89aa:b303:b8b1:47fa:69dd:e3fc) (Quit: My MacBook Air has gone to sleep. ZZZzzz…)
[03:14:53] <asa22> this should work like this
[03:15:27] *** Joins: efil4cri (~efil4cri@gateway/tor-sasl/wfnintr)
[03:15:31] *** Joins: ExpiredKebab (~sgreadly@2407:7000:89aa:b303:b8b1:47fa:69dd:e3fc)
[03:15:31] *** Quits: ExpiredKebab (~sgreadly@2407:7000:89aa:b303:b8b1:47fa:69dd:e3fc) (Client Quit)
[03:15:52] *** Joins: penguino (~mrpenguin@user/mrpenguin)
[03:16:06] *** Joins: ExpiredKebab (~sgreadly@2407:7000:89aa:b303:b8b1:47fa:69dd:e3fc)
[03:16:36] *** Joins: junebug (~junebug@2600:1700:3db0:2540:6105:6f09:e5c5:233c)
[03:16:46] <asa22> wait no it doesnt
[03:16:57] <asa22> can map only be used with functions that only have 1 parameter?
[03:16:58] *** Joins: squirrel (uid529456@user/squirrel)
[03:17:35] *** Quits: bitdex (~bitdex@gateway/tor-sasl/bitdex) (Ping timeout: 240 seconds)
[03:17:45] <Repiphany> Map can take multiple iterables for multiple arguments
[03:18:09] *** Quits: zen_coder (~zen_coder@2a02:8109:a280:2d8d:11e0:bab1:2383:8658) (Ping timeout: 252 seconds)
[03:18:32] <asa22> I want to feed the function a list independent from map
[03:18:39] <asa22> to use internally
[03:18:39] <Repiphany> list(map(math.pow, [1,2,3], [4,5,6]))
[03:18:42] *** Joins: crashrep (~crashrep@user/crashrep)
[03:19:23] <de-facto> how do i put \u25cf in an array?
[03:19:41] <de-facto> include = [ \u25cf ] does not work
[03:19:48] *** Quits: slav0nic_ (slav0nic@python.su) (Ping timeout: 250 seconds)
[03:19:58] <Repiphany> Strings need to be enclosed with "" or ''
[03:20:39] <de-facto> ooh
[03:21:06] *** Joins: CatCow (~wtf_over@c-73-96-109-206.hsd1.or.comcast.net)
[03:21:27] *** Quits: schumaml (~schumaml@dslb-094-216-174-221.094.216.pools.vodafone-ip.de) (Ping timeout: 252 seconds)
[03:21:48] *** Joins: chenqisu1 (~chenqisu1@183.217.201.47)
[03:23:20] *** Joins: schumaml (~schumaml@dslb-092-074-004-216.092.074.pools.vodafone-ip.de)
[03:23:39] *** Quits: renlo (~Renlo_Ren@pool-108-14-112-182.nycmny.east.verizon.net) (Ping timeout: 252 seconds)
[03:24:25] *** Joins: jamea (~jamea@10.189-202-213.bestelclientes.com.mx)
[03:24:25] <squirrel> hello. i'm trying to run pytest. simply running `pytest` fails with `ModuleNotFoundError: No module named 'plugin'`, where `plugin` is a module in the current directory which is a project root. however, `python -m pytest` works. i'm in a poetry virtual environment and the output of `which python` == the first line from ``cat `which pytest```. any idea what's going on?
[03:25:53] *** Quits: ckdCreations (~ckdCreati@147.55.130.34) (Read error: Connection reset by peer)
[03:25:56] *** Joins: FlipFlop (~FlipFlop@user/fl1pfl0p)
[03:26:02] *** Quits: jamea22 (~jamea@10.189-202-213.bestelclientes.com.mx) (Ping timeout: 240 seconds)
[03:27:07] <grym> de-facto: you keep using u'', but you don't need to
[03:27:47] <de-facto>  include = [ u"\u25cf" ] seems to work
[03:28:37] *** Quits: Klinda (~superleag@user/klinda) (Ping timeout: 240 seconds)
[03:28:51] <nedbat> de-facto: or:  include = [ "\u25cf" ]
[03:29:03] *** Joins: bitdex (~bitdex@gateway/tor-sasl/bitdex)
[03:29:43] *** Quits: jamea (~jamea@10.189-202-213.bestelclientes.com.mx) (Ping timeout: 256 seconds)
[03:29:50] <de-facto> when would i need the u prefix?
[03:30:04] <grym> de-facto: you don't
[03:30:15] <de-facto> whats it for?
[03:30:20] <exarkun> python 2
[03:30:27] <grym> it's a python 2 artifact; you can ignore it
[03:30:41] <de-facto> oh ok good to know
[03:30:58] <grym> f, b, and r-prefixes are useful though
[03:31:25] <maxtim> I'm using the gpiozero library to try and get the total amount of time a button has been pressed. https://bpa.st/PS2A
[03:31:45] <grym> `x = 5; print(f'the value of x is {x}')`; `b'i'm bytes!'` and `len(r'\t')==2`
[03:31:55] *** Quits: penguino (~mrpenguin@user/mrpenguin) (Ping timeout: 240 seconds)
[03:31:56] <maxtim> there's not much there right now, but I've tried a few different iterations to no avail
[03:31:59] <grym> versus len('\t')==1
[03:32:27] *** Quits: roxfan (~roxfan@2a02:a03f:a2be:4f00:49af:1e90:ff60:b7d7) (Ping timeout: 252 seconds)
[03:32:33] *** Quits: mon_aaraj (~MonAaraj@user/mon-aaraj/x-4416475) (Ping timeout: 256 seconds)
[03:32:37] *** Quits: bitkiller (~bitkiller@user/bitkiller) (Ping timeout: 240 seconds)
[03:33:40] *** Quits: elwoodpd (~elwoodpd@85.210.161.53) (Ping timeout: 250 seconds)
[03:34:19] *** Joins: mon_aaraj (~MonAaraj@user/mon-aaraj/x-4416475)
[03:34:48] <Tritium> maxpowa: the Button class apparently has a when_pressed and a when_released callback.  have the when pressed callback store the time it was pressed, have when released compare the time stored when pressed to the current time
[03:34:51] <jinsun__> squirrel: that is normal behavior https://docs.pytest.org/en/7.1.x/explanation/pythonpath.html#invoking-pytest-versus-python-m-pytest
[03:34:52] <Tritium> no need to sleep
[03:34:55] *** Joins: penguino (~mrpenguin@user/mrpenguin)
[03:35:01] <Tritium> mistab
[03:35:08] <Tritium> maxtim: that was for you
[03:35:27] <maxtim> clever Tritium I'll try that see what it does
[03:35:29] *** Joins: bitkiller (~bitkiller@user/bitkiller)
[03:35:45] <maxtim> I've tried a few different while loops, but they were trash
[03:35:46] *** Joins: Pi-sistance (~Pi-sistan@cpc94040-newt37-2-0-cust284.19-3.cable.virginm.net)
[03:36:07] *** Joins: ckdCreations (~ckdCreati@c-73-140-151-116.hsd1.wa.comcast.net)
[03:36:26] <de-facto> the error (not unicodedata.name(char) in self.exclude_names)  ValueError: no such name what does that even mean?
[03:36:33] *** Joins: nuclearg1 (~nucleargr@user/nuclearg1)
[03:36:38] <lerroux> I have a script that takes attachments(PDF) from emails(aioimaplib) and sort of processes(cv2) them. My issue is that it takes a lot of memory from my server especially with larger attachments and even when processing is done, Memory still doesn't get cleared as long as the script is still running. Any suggestions How I can clear this?
[03:36:46] <de-facto> that unicodedata.name does not exist or something else?
[03:37:00] *** Quits: jsm (~jmcb@hacksoc/member/jmcb) (Ping timeout: 240 seconds)
[03:37:05] *** Quits: schumaml (~schumaml@dslb-092-074-004-216.092.074.pools.vodafone-ip.de) (Ping timeout: 256 seconds)
[03:37:14] <squirrel> jinsun__: oh. hm. thanks. now i have to figure out why the module is not getting installed
[03:37:21] <grym> de-facto: we'd need to see more of the code to know
[03:37:28] <jinsun__> squirrel: if you want to use pytest instead of python -m pytest then you have to install the module in the venv where you run pytest (better), or structure your folder in such a way that pytest stays in the working directory you expect (a bit hacky)
[03:38:35] <de-facto> grym, https://bpa.st/ONUQ
[03:38:49] *** Joins: schumaml (~schumaml@dslb-188-104-188-200.188.104.pools.vodafone-ip.de)
[03:39:18] <grym> de-facto: self.include doesn't exist there
[03:39:32] *** Quits: ghost43 (~ghost43@gateway/tor-sasl/ghost43) (Remote host closed the connection)
[03:39:45] <de-facto> why would it not exist there?
[03:39:55] *** Joins: ghost43 (~ghost43@gateway/tor-sasl/ghost43)
[03:40:16] *** Quits: Forsaken87 (~quassel@ip-037-201-193-116.um10.pools.vodafone-ip.de) (Quit: https://quassel-irc.org - Chat comfortably. Anywhere.)
[03:40:23] *** Quits: Seirdy (~Seirdy@sourcehut/user/seirdy) (Quit: exiting 3.4)
[03:40:39] *** Joins: jmcb (~jmcb@hacksoc/member/jmcb)
[03:40:52] <grym> er, maybe it does
[03:40:57] <de-facto> "(not unicodedata.name(char) in self.exclude_names)" <-- "ValueError: no such name"
[03:41:02] *** Quits: nuclearg1 (~nucleargr@user/nuclearg1) (Ping timeout: 240 seconds)
[03:41:06] <de-facto> what is a ValueError?
[03:41:10] <asa22> !pastebin
[03:41:14] <grym> an error about a value...
[03:41:14] <asa22> !paste
[03:41:20] <jinsun__> https://bpa.st/+python
[03:41:20] <grym> asa22: there are no bots; see /topic
[03:41:26] *** Quits: MJ (~mjpieters@zopatista.plus.com) (Quit: ZNC - http://znc.in)
[03:41:32] *** Quits: seoul_man (~meh@user/seoul-man/x-5066766) (Ping timeout: 240 seconds)
[03:42:22] <jinsun__> de-facto: https://docs.python.org/3/library/exceptions.html#ValueError
[03:42:24] <nedbat> de-facto: what is char?
[03:42:35] *** Joins: MJ (~mjpieters@zopatista.plus.com)
[03:42:40] <de-facto> a unicode character i guess
[03:42:59] <nedbat> de-facto: i meant, exactly what value is in it? print(repr(char)) to find out
[03:43:09] *** Quits: Dan39 (~dan@user/dan39) (Quit: reboot, brb (i hope))
[03:43:17] <Tritium> de-facto: python doesn't really have a single character type - python has length-1 strings
[03:43:43] *** Joins: seoul_man (~meh@097-087-062-229.res.spectrum.com)
[03:43:54] <de-facto> i dont know the value of char, its inside a nested expression
[03:43:56] <Tritium> things expecting a length 1 string that is instead any other length would raise a value error.
[03:44:13] <Tritium> de-facto: this is code you wrote, right?
[03:44:16] <nedbat> de-facto: can you pastebin the code? we can help add debugging code.
[03:44:22] *** Parts: exarkun (~exarkun@user/exarkun) (WeeChat 3.3)
[03:44:30] <de-facto> https://bpa.st/ONUQ
[03:44:56] <de-facto> (forgive me i am new to python, i know its ugly)
[03:45:00] <Tritium> (theres a blast from the past)
[03:45:26] <jinsun__> de-facto: you can choose python syntax highlighting https://bpa.st/ZAGQ
[03:45:42] <nedbat> de-facto: btw, "x not in y" is more readable than "not x in y", imo
[03:46:25] <nedbat> de-facto: unicodedata.name() takes a second default value to avoid this problem.
[03:46:28] <de-facto> ok sure why not
[03:46:32] *** Quits: grimvar (~grimvar@i5C75F58F.versanet.de) (Ping timeout: 240 seconds)
[03:47:26] <de-facto> oh indeed
[03:47:51] *** Quits: bitkiller (~bitkiller@user/bitkiller) (Ping timeout: 256 seconds)
[03:47:58] *** Quits: schumaml (~schumaml@dslb-188-104-188-200.188.104.pools.vodafone-ip.de) (Ping timeout: 250 seconds)
[03:48:26] *** Quits: rje (~textual@65.141.156.170) (Quit: My MacBook has gone to sleep. ZZZzzz…)
[03:48:38] *** Joins: grimvar (~grimvar@i5C75F732.versanet.de)
[03:49:00] <Tritium> What is the current state of the art for python irc bots?  Its been a while for me...
[03:49:34] *** Joins: zeden (~zeden@user/zeden)
[03:49:45] <grym> Tritium: sopel's ok
[03:50:13] *** Joins: schumaml (~schumaml@dslb-188-104-162-168.188.104.pools.vodafone-ip.de)
[03:50:26] <asa22> https://bpa.st/QIVA how do I make this function so that I can use map() on it feeding it a list of integers, and I get a list of integers out
[03:50:53] <de-facto> hmm what is the difference between a unicode character and a string?
[03:51:20] <grym> de-facto: nothing
[03:51:21] <Tritium> de-facto: length.
[03:51:26] *** Quits: gitesh (uid423739@id-423739.ilkley.irccloud.com) (Quit: Connection closed for inactivity)
[03:51:27] *** Quits: Auron (Auron956@user/auron) (Remote host closed the connection)
[03:51:30] <de-facto> unicodedata.name("\uefb88f") TypeError: name() argument 1 must be a unicode character, not str
[03:51:39] <Tritium> a unicode character in python is JUST a length-1 string
[03:51:48] <jinsun__> Tritium: there is also https://github.com/ProgVal/Limnoria
[03:51:58] <Tritium> de-facto: are you on python2?  Using suppy makes me think you are on python2
[03:52:20] <de-facto> nope
[03:52:24] <nedbat> de-facto: that's a 3-character string:  \uefb8 8 f
[03:52:39] <Tritium> ah, ned caught it
[03:53:19] <asa22> nvm I think I got it
[03:53:26] <de-facto> what does that mean then?
[03:53:40] * de-facto hates unicode more and more
[03:53:50] <grym> and the value error "no such name" means "unicodedata doesn't know a name for the thing it's been passed"
[03:53:56] <nedbat> de-facto: you provided three characters, not one.
[03:54:27] <nedbat> de-facto: where did that string come from?
[03:54:33] <de-facto> i want to provide it the byte sequence ef b8 8f
[03:54:49] <de-facto> from twitter
[03:55:15] <Repiphany> Unicode code points aren't the same as raw bytes
[03:55:19] *** Quits: Siecje (~Siecje@97.111.200.190) (Remote host closed the connection)
[03:55:35] <Tritium> Ok, i think its time for ned's unipain talk...
[03:55:47] <Repiphany> b'\xef\xb8\x8f' is three bytes
[03:55:51] <nedbat> de-facto: then you want:  unicodedata.name(b"\xef\xb8\x8f".decode())
[03:56:17] <nedbat> 'VARIATION SELECTOR-16' btw
[03:56:39] <de-facto> yes thats correct
[03:56:41] *** Quits: blei (~blei@user/blei) (Quit: Client closed)
[03:56:42] <de-facto> that works
[03:56:47] <de-facto> i want to filter that out
[03:57:00] *** Quits: jero98772 (~jero98772@2800:484:1d80:d8ce:efcc:cbb3:7f2a:6dff) (Ping timeout: 240 seconds)
[03:57:07] *** Joins: sturm_ (~bsturmfel@mediagoblin/maintainer/bsturmfels)
[03:57:35] <nedbat> de-facto: if you don't mind me asking, what's the big picture here? What are all the things you are filtering?
[03:57:36] <de-facto> nice that worked
[03:57:56] <de-facto> i create rss feeds from twitter and they put in weird unicode
[03:58:16] <de-facto> i announce from those rss feeds in irc with a bot that is written in python
[03:58:19] *** Joins: jero98772 (~jero98772@2800:484:1d80:d8ce:efcc:cbb3:7f2a:6dff)
[03:58:31] <de-facto> so i am trying to work on an output string normalization filter
[03:58:32] <Tritium> Thats probably an emoji modifier
[03:58:54] <nedbat> de-facto: ok, and what else besides variation selector-16 do you want to filter out?
[03:59:28] <de-facto> thats a very good question
[03:59:39] <Tritium> It might be worthwhile to leave in place for clients that can actually see it if it is...  Yup, that is for emoji.
[04:00:34] <Tritium> Stripping that out might break emoji display in your channel users' clients
[04:00:55] <Tritium> especially if they have color emoji support
[04:01:36] *** Joins: korg815 (~korg815@user/korg815)
[04:02:01] *** Quits: arkanoid (~arkanoid@2-238-151-49.ip244.fastwebnet.it) (Ping timeout: 256 seconds)
[04:02:12] <de-facto> i dont even know exactly what that variation selector does, i filtered out  ⚡ and then there was a weird black circle in irc that could not get copied, turned out to be that variation selector prefix
[04:02:35] <nedbat> de-facto: why filter anything?
[04:02:47] <de-facto> because it annoys people
[04:02:54] <Tritium> It tells the text rendering engine to render the preceding character as an emoji - a color emoji if possible
[04:03:15] <grym> de-facto: a bot that breaks things is more annoying, imo
[04:03:31] <de-facto> but why would it break things?
[04:03:48] <grym> well, because you've told it to
[04:03:49] <nedbat> de-facto: maybe you want to just keep certain categories of characters, only text, etc.
[04:04:00] <de-facto> yes i think so
[04:04:16] <Tritium> de-facto: because you are stripping out the control character, but still sending the emoji which...might render very differently than intended on supported clients
[04:04:29] *** Joins: c4017w_ (~c4017@209.52.68.8)
[04:04:52] <de-facto> but i am removing the emoji hence also have to remove that variation selector i assume
[04:05:07] <SnoopJ> de-facto, a variation selector does what it says on the tin: it selects variations of the preceding codepoint
[04:05:09] <de-facto> isnt the emoji in this case the ⚡?
[04:05:14] <nedbat> de-facto: it's not going to work to make a list of everything you want to remove.
[04:05:36] <Tritium> string.printable is a good starting point
[04:05:49] <Tritium> if you would rather go white-list than black
[04:06:17] *** Quits: EgonX (~EgonX@2601:2c6:47f:879e:600e:3a:7a9b:efea) (Ping timeout: 240 seconds)
[04:06:41] <de-facto> i am not entirely determined yet about the best approach to do this, hence am playing around with unicodedata boolean expressions for filtering
[04:06:47] *** Quits: rpkilby_ (~rpkilby@c-24-20-208-106.hsd1.or.comcast.net) (Remote host closed the connection)
[04:07:26] <nedbat> de-facto: are you familiar with unicode categories?
[04:07:41] <de-facto> not really, i have to learn though
[04:08:02] *** Joins: rpkilby (~rpkilby@c-24-20-208-106.hsd1.or.comcast.net)
[04:08:12] *** Quits: c4017w__ (~c4017@209.52.68.8) (Ping timeout: 252 seconds)
[04:08:21] *** Joins: EgonX (~EgonX@c-73-115-70-244.hsd1.tx.comcast.net)
[04:08:32] *** Quits: jstein (~jstein@gentoo/developer/jstein) (Ping timeout: 240 seconds)
[04:08:36] <Tritium> I mean, learning the broad strokes is important, but unless you are implementing text rendering or are a computational linguist, dont spend too many brain cells on the finer details
[04:08:49] *** Quits: schumaml (~schumaml@dslb-188-104-162-168.188.104.pools.vodafone-ip.de) (Ping timeout: 256 seconds)
[04:10:25] <SnoopJ> if often boils down to "let the client worry about it if Unicode is allowed" or "don't allow stuff you wouldn't find in [simpler encoding]" because the middle ground is...complicated.
[04:10:28] *** Joins: schumaml (~schumaml@ipservice-092-211-206-064.092.211.pools.vodafone-ip.de)
[04:11:11] <SnoopJ> (categories can be very useful if you want to reason some well-defined subset of Unicode, though)
[04:11:20] <de-facto> this somehow seems to work (for the input i have seen so far) https://bpa.st/J5WQ
[04:11:30] <Tritium> The advice i have is pass it through unfiltered OR filter it against a whitelist of string.printable with the understanding that you loose anything that isn't english
[04:12:40] *** Quits: rpkilby (~rpkilby@c-24-20-208-106.hsd1.or.comcast.net) (Ping timeout: 250 seconds)
[04:12:45] *** Joins: nuclearg1 (~nucleargr@user/nuclearg1)
[04:14:05] <SnoopJ> nedbat, I think I might have found another "my packages are weird" interaction with dinghy, is this error familiar to you? https://bpa.st/SD7Q It appears `self.github` is None on Digester when the rubber hits the road, but I don't really know why, except that this is the same (crusty) system that choked before
[04:14:13] <de-facto> well the task is to not annoy the users that complained about those unicode symbols, so i either can strip off all unicode or just allow some (not so annoying) unicode
[04:14:30] <Tritium> Or the unidecode library which will only annoy germans and anyone without a latin alphabet based writing system
[04:14:47] <de-facto> problem with that is that twitter users heavily use unicode to shorten their messages, e.g. use flags for countries etc, and i have to include those because otherwise the semantic may get damaged
[04:14:49] <nedbat> SnoopJ: are you running from main on github? How did you configure it?
[04:15:24] <nedbat> de-facto: how do you decide which are important and which are only annoying?
[04:15:32] <de-facto> good question
[04:15:39] <nedbat> i'm 2 for 2!
[04:15:44] <SnoopJ> nedbat, yes, that's against the latest main and I think I was able to resolve it by rolling back a few commits. The configuration is the same as it was before, the same "all PRs from PyInstaller" file I had before
[04:16:00] <nedbat> SnoopJ: can you pastebin the file?
[04:16:13] <SnoopJ> nedbat, sure, one moment
[04:16:19] *** Quits: zmt01 (~zmt00@user/zmt00) (Ping timeout: 250 seconds)
[04:16:32] <SnoopJ> nedbat, to be clear, this only happens on the "weird packages" machine where I found that jinja2 version issue. It works fine on the other system I've tested it on
[04:16:44] *** Quits: jazzy (~jaziz@user/jaziz) (Quit: Beddie bye-bye)
[04:16:52] <SnoopJ> https://bpa.st/3IHQ
[04:17:26] *** Quits: nuclearg1 (~nucleargr@user/nuclearg1) (Ping timeout: 250 seconds)
[04:17:52] *** Quits: schumaml (~schumaml@ipservice-092-211-206-064.092.211.pools.vodafone-ip.de) (Ping timeout: 250 seconds)
[04:17:57] *** Joins: kaiseisei (~Thunderbi@user/kaiseisei)
[04:18:44] <nedbat> SnoopJ: in this case, it's a real bug because you have no URLs in your configuration
[04:19:15] *** Quits: foobaz212 (~foobaz212@152.37.103.80) (Quit: Client closed)
[04:19:28] *** Joins: foobaz212 (~foobaz212@152.37.103.80)
[04:19:43] <nedbat> SnoopJ: i just pushed a fix.
[04:19:44] *** Joins: schumaml (~schumaml@dslb-188-104-179-095.188.104.pools.vodafone-ip.de)
[04:19:46] <SnoopJ> I wonder what's going on that makes the two systems diverge :thinking_face:
[04:19:58] * SnoopJ should really fix that Unicode CLDR slug expander plugin..
[04:20:10] *** Joins: prodigius_ (~prodigius@75-163-150-33.clsp.qwest.net)
[04:20:21] *** Joins: zmt00 (~zmt00@user/zmt00)
[04:20:35] <SnoopJ> nedbat, yep, that resolves it on the machine that was failing
[04:20:55] <nedbat> SnoopJ: btw, i'm thinking of changing that option, you'd have to change it to an explicit search
[04:21:32] *** Quits: prodigius (~prodigius@75-163-174-136.clsp.qwest.net) (Ping timeout: 240 seconds)
[04:22:28] <SnoopJ> makes sense
[04:22:50] *** Quits: asa22 (~asa22@31.4.245.88) (Quit: Client closed)
[04:27:13] <lerroux> I have a script that takes attachments(PDF) from emails(aioimaplib) and sort of processes(cv2) them. My problem is OOM keeps killing the process because of too much memory being used.
[04:27:13] <lerroux> I should mention that my server only has 2GBs of RAM and 4GB of swap space.
[04:27:29] *** Quits: pyeveryt_ (~pyeveryth@251.sub-174-196-209.myvzw.com) (Remote host closed the connection)
[04:28:13] <lerroux> Any suggestion How to resolve this? I don't think adding more memory would because I think it would only build up usage over time.
[04:28:18] *** Quits: foobaz212 (~foobaz212@152.37.103.80) (Quit: Client closed)
[04:28:32] *** Joins: foobaz212 (~foobaz212@152.37.103.80)
[04:29:02] *** Joins: vakera_pingveno (~dan@2600:1700:21f9:b150::30)
[04:29:59] *** Quits: aphysically (~aphysical@user/aphysically) (Quit: aphysically)
[04:30:12] *** Quits: [itchyjunk] (~itchyjunk@user/itchyjunk/x-7353470) (Ping timeout: 240 seconds)
[04:30:14] *** Joins: aphysically (~aphysical@user/aphysically)
[04:30:29] *** Joins: rje (~textual@50.35.241.164)
[04:30:32] *** Parts: backthen (~Thunderbi@c-76-103-177-91.hsd1.ca.comcast.net) ()
[04:30:51] *** Joins: Codaraxis (~Codaraxis@user/codaraxis)
[04:31:44] *** Quits: Wulf (~Wulf@user/wulf) (Ping timeout: 250 seconds)
[04:33:11] *** Quits: foobaz212 (~foobaz212@152.37.103.80) (Ping timeout: 256 seconds)
[04:33:31] *** Joins: Wulf (~Wulf@user/wulf)
[04:34:25] <nedbat> lerroux: are you possibly holding onto things for too long?
[04:34:32] *** Joins: [itchyjunk] (~itchyjunk@user/itchyjunk/x-7353470)
[04:35:50] *** Quits: crashrep (~crashrep@user/crashrep) (Quit: WeeChat 3.4)
[04:36:43] <lerroux> nedbat: I only hold onto them for as long as the process takes.This usually happens with PDFs 6MB above.
[04:37:34] *** Joins: foobaz212 (~foobaz212@152.37.103.80)
[04:37:37] *** Quits: parv (~quass@user/parv) (Ping timeout: 240 seconds)
[04:39:22] *** Quits: zumba_addict (~zumba_add@c-71-194-58-34.hsd1.il.comcast.net) (Quit: Client closed)
[04:39:46] <lerroux> Specifically, after we process the PDF we delete it. Do I need to clear it from memory somehow? I see memory build up from the process the longer the process runs
[04:40:13] *** Quits: llanhmod_ (~personnel@user/domhnall/x-2887755) (Ping timeout: 240 seconds)
[04:40:17] *** Quits: llanhmod (~personnel@user/domhnall/x-2887755) (Ping timeout: 240 seconds)
[04:41:43] *** Joins: daedw (~daedw@cpe-172-113-121-232.socal.res.rr.com)
[04:41:55] *** Quits: pretty_dumm_guy (trottel@gateway/vpn/protonvpn/prettydummguy/x-88029655) (Quit: WeeChat 3.4.1)
[04:41:57] <nedbat> lerroux: it's hard to know
[04:42:15] *** Quits: foobaz212 (~foobaz212@152.37.103.80) (Ping timeout: 256 seconds)
[04:42:18] *** Joins: llanhmod (~personnel@user/domhnall/x-2887755)
[04:42:28] *** Joins: llanhmod_ (~personnel@user/domhnall/x-2887755)
[04:43:32] *** Quits: KimK (~KimK@ip98-186-40-208.ks.ks.cox.net) (Ping timeout: 240 seconds)
[04:44:40] <foo> lerroux: I believe the "resource" module with `setrlimit(RLIMIT_AS, (some_size, -1))` will cause Python to throw MemoryError when address space tries to grow past a certain size
[04:44:50] *** Joins: merijn (~merijn@c-001-001-001.client.esciencecenter.eduvpn.nl)
[04:44:51] <foo> That may help
[04:45:49] *** llanhmod is now known as Guest4190
[04:45:49] *** Quits: Guest4190 (~personnel@user/domhnall/x-2887755) (Killed (tantalum.libera.chat (Nickname regained by services)))
[04:45:49] *** llanhmod_ is now known as llanhmod
[04:45:49] <lerroux> foo: Thank you. Yes, I think that would help to isolate where the memory issue coming from.
[04:46:57] *** Joins: nuclearg1 (~nucleargr@user/nuclearg1)
[04:47:20] *** Joins: llanhmod_ (~personnel@user/domhnall/x-2887755)
[04:47:53] *** Quits: FluffyMask (~masque@user/fluffymask) (Quit: WeeChat 3.4.1)
[04:48:09] *** Joins: ttree (~ttree0@c-24-17-16-242.hsd1.wa.comcast.net)
[04:48:11] <Tritium> Just throwing the error when it reaches the memory limit isn't enough to identify what code is eating ram, so it might throw on something innocuous
[04:48:31] <foo> lerroux: I wonder if you can use try/except around certain functions ... but to Tritium's point, *when* that gets thrown may not be the root of the issue
[04:48:36] <foo> (if I'm following Tritium)
[04:49:23] *** Quits: user3456 (user3456@user/user3456) (Ping timeout: 256 seconds)
[04:49:24] <Tritium> the idea is the leaky code might not quite make it to the memory limit but a string operation somewhere else in the codebase entirely might push it over the edge
[04:49:52] * foo pushes Tritium over the edge
[04:50:04] <Tritium> `is a gas`
[04:50:26] <Tritium> ...that is a habit from another chat medium i need to break on irc
[04:50:27] <foo> Tritium: 🤯
[04:50:55] *** Quits: penguino (~mrpenguin@user/mrpenguin) (Ping timeout: 240 seconds)
[04:50:57] <foo> Tritium: at least you offset your bad habit with a fun response. Haha.
[04:51:02] *** Quits: nuclearg1 (~nucleargr@user/nuclearg1) (Ping timeout: 240 seconds)
[04:51:42] *** Quits: fartyfoam (~fartyfoam@178-118-118-2.access.telenet.be) (Ping timeout: 260 seconds)
[04:53:08] *** Joins: cdown_ (~cdown@188.214.11.14)
[04:53:27] <lerroux> I think I need to isolate every function then and see memory usage from each to be able to be sure where the leak is coming from then. Is there a less "hassle" way to do this?
[04:53:40] *** Joins: penguino (~mrpenguin@user/mrpenguin)
[04:54:09] *** Joins: MatthewG (~foo@user/foo/x-8763512)
[04:54:26] <Repiphany> lerroux: Have you looked at something like https://pypi.org/project/memory-profiler/
[04:54:28] *** Quits: ghost43 (~ghost43@gateway/tor-sasl/ghost43) (Remote host closed the connection)
[04:54:57] *** Quits: PaterTemporalis (~woooopsie@bl21-200-69.dsl.telepac.pt) (Ping timeout: 252 seconds)
[04:55:15] *** Joins: ghost43 (~ghost43@gateway/tor-sasl/ghost43)
[04:55:34] *** Quits: cdown (~cdown@163.114.131.1) (Ping timeout: 250 seconds)
[04:55:41] <Tritium> lerroux: how fast does your ram use grow?  is it 'read in 6 mb file, remove it, and the 6mb isn't freed' bed?  does it take hours and hundreds of files to grow or does it grow unacceptably with every file?
[04:55:45] *** cdown_ is now known as cdown
[04:56:03] *** Quits: weibullguy (~weibullgu@024-236-222-047.res.spectrum.com) (Ping timeout: 252 seconds)
[04:56:04] *** Joins: Seirdy (~Seirdy@sourcehut/user/seirdy)
[04:56:34] <lerroux> Repiphany : I was actual actually looking into using fil-profiler. But I will look into your suggestion.
[04:56:36] <Tritium> (and my instinct here, which is entirely based on guessing, but its my instinct is that there is third party extension/c libraries that are not behaving correctly)
[04:58:05] <SnoopJ> lerroux, the sampling profiler Scalene can tell you some helpful information about memory usage, it might be useful here.
[04:58:36] <lerroux> Tritium: I tried 20, 10 MB files and memory usage grows to around 700MB from 400MB initially when reading emails, then to around 1GB when CV2 is reading the PDFs.
[04:59:02] <SnoopJ> Tritium, being able to throw a MemoryError does have the advantage here of letting you recover from the "we're full" scenario, possibly backing off and doing less work simultaneously, if applicable. (or just issuing a nice error report!)
[04:59:27] <Tritium> Yeah, that sounds like you're shoving data somewhere and not letting go of it
[04:59:32] *** Quits: Y4knotiS (~YaknotiS@cpc1-cmbg18-2-0-cust87.5-4.cable.virginm.net) (Ping timeout: 240 seconds)
[04:59:44] <lerroux> SnoopJ : Thank you. Will try it.
[04:59:47] <SnoopJ> but indeed, the alloc that causes the error may come from anywhere
[05:01:32] <Tritium> this now feels like something either so simple its being overlooked, or so nested and complex you will never see it without profiling.  at least thats been my experience
[05:01:59] *** Joins: rama (~rama@c-24-130-92-222.hsd1.ca.comcast.net)
[05:02:23] <MatthewG> SnoopJ: Great point on being able to throw a MemoryError having advantage of letting you recover... especially if OOM is coming out to kill the process, it could stop that
[05:02:52] *** Joins: adinf (~ariel@2001:19f0:5:5337:5400:3ff:fe6c:38e9)
[05:03:27] <SnoopJ> MatthewG, that's how I learned about RLIMIT_AS in the first place, because I was seeing an OOM in a service that really should issue an error to the other side of a request
[05:03:29] *** Quits: ghost43 (~ghost43@gateway/tor-sasl/ghost43) (Remote host closed the connection)
[05:03:51] <daedw> I'm running a python web app (developed by someone other than me) that uses dependencies 'fastapi', 'uvicorn', 'router', and some other python libraries. running on a remote server the app runs fine, but the server is disabled, so I'm testing on Windows localhost with cygwin, and the only error output is 'ERROR: [Errno 8] Name or service not known'. Is this error a Windows socket error, or python library
[05:03:57] <daedw> error?
[05:04:13] *** Quits: junebug (~junebug@2600:1700:3db0:2540:6105:6f09:e5c5:233c) (Quit: Leaving)
[05:04:20] <grym> daedw: how are you starting it up?
[05:04:32] <daedw> 'python main.py'
[05:04:32] <Tritium> uvicorn, last i looked, does not support windows
[05:04:38] <SnoopJ> daedw, that looks like a report of an OS error
[05:04:47] <MatthewG> SnoopJ: Love it, thanks for sharing.
[05:04:59] *** Joins: c4017w__ (~c4017@209.52.68.8)
[05:05:13] *** Quits: xrogaan (~xrogaan@user/xrogaan) (Quit: Leaving)
[05:05:26] <daedw> SnoopJ: that's makes sense, I've tried editing the /etc/hosts file, and doing more debugging
[05:05:31] <SnoopJ> Tritium, I don't know about historically but it does support it now (albeit with the serious caveat of no uvloop)
[05:05:35] *** Quits: kclark_ (~kclark@rrcs-24-73-14-193.se.biz.rr.com) (Remote host closed the connection)
[05:06:04] *** Joins: ghost43 (~ghost43@gateway/tor-sasl/ghost43)
[05:06:31] *** Joins: fartyfoam (~fartyfoam@178-118-118-2.access.telenet.be)
[05:06:31] *** Quits: fr_sleepy (~fr_sleepy@209.94.138.128) (Quit: WeeChat 3.4)
[05:07:02] * Tritium snaps
[05:07:09] *** Quits: raym (~raym@user/raym) (Quit: afk for sometime)
[05:07:09] <Tritium> Thats what i was thinking of.
[05:07:37] *** Quits: PJBoy (~PJBoy@user/pjboy) (Ping timeout: 240 seconds)
[05:08:15] *** Quits: dodobrain (~dodobrain@user/dodobrain) (Remote host closed the connection)
[05:08:19] *** Quits: c4017w_ (~c4017@209.52.68.8) (Ping timeout: 256 seconds)
[05:08:58] *** Joins: dodobrain (~dodobrain@user/dodobrain)
[05:09:06] <de-facto> how do i get from b"\xe2\x9a\xa1".decode() to "\u26a1" ?
[05:09:56] *** Joins: weibullguy (weibullguy@gateway/vpn/protonvpn/weibullguy)
[05:10:30] <SnoopJ> de-facto, those are the same string
[05:10:33] *** Joins: kclark (~kclark@rrcs-24-73-14-193.se.biz.rr.com)
[05:10:51] <Tritium> UTF-8?
[05:10:53] *** Joins: nuclearg1 (~nucleargr@user/nuclearg1)
[05:10:53] <de-facto> yes so given  b"\xe2\x9a\xa1" how do i get the \u... representation?
[05:11:28] <Tritium> repr(b"\xe2\x9a\xa1".decode())
[05:11:46] *** Quits: NoelFlantier3 (~Hubert@195.201.244.189) (Remote host closed the connection)
[05:11:50] <Tritium> only really useful for debugging
[05:11:53] <SnoopJ> that gives "'⚡'" for me
[05:12:09] *** Joins: NoelFlantier3 (~Hubert@195.201.244.189)
[05:12:10] <de-facto> id like to get the hexcode for \u...
[05:12:14] <Tritium> uh....i guess it depends on your terminal setup then
[05:12:18] <daedw> grym: main.py is a pretty simple file, I changed the BACKEND_HOST to "Z:\\" and now get error on "uvicorn/config.py" line 541, in bind_socket: sock.bind((self.host, self.port)): TypeError: str, bytes, or bytearray expected, not NoneType
[05:12:24] <Tritium> hex(ord(b"\xe2\x9a\xa1".decode()))
[05:12:38] *** Quits: vakera_pingveno (~dan@2600:1700:21f9:b150::30) (Quit: Konversation terminated!)
[05:12:54] <de-facto> b"\xe2\x9a\xa1".decode("utf-8").encode("unicode_escape")
[05:13:48] *** Quits: nawcom (~nawcom@bulldadachat.com) (Quit: bye)
[05:14:01] <Tritium> de-facto: keep in mind the resulting object is a length 6 bytes, not a string
[05:14:13] *** Joins: bart__ (~Xano@2a00:23c4:4204:700:c744:1b62:433b:6312)
[05:14:37] *** Joins: user3456 (user3456@user/user3456)
[05:15:15] *** Joins: nawcom (~nawcom@bulldadachat.com)
[05:16:43] <SnoopJ> hmm is there really not a more convenient way to ask for that representation
[05:17:14] *** Quits: llanhmod (~personnel@user/domhnall/x-2887755) (Quit: leaving)
[05:17:30] *** Joins: rpkilby (~rpkilby@c-24-20-208-106.hsd1.or.comcast.net)
[05:17:44] <SnoopJ> ah, `ascii("\u26a1")`
[05:17:54] <Tritium> i mean it beats the alternatives of bashing it together with hex and ord, or what i did one time, and scraped fileformat.info...
[05:17:56] <SnoopJ> (how annoying!)
[05:18:36] *** Quits: Xano_ (~Xano@2a00:23c4:4204:700:e192:67c:8ebd:e7c3) (Ping timeout: 252 seconds)
[05:18:56] <Tritium> the unicode escaped representation is ...not very useful
[05:18:57] <SnoopJ> Tritium, I've done something similar for getting out a U+XXXX representation but the question got me wondering if there was a less clumsy way to do it that doesn't need to worry about the width
[05:18:58] *** Quits: merijn (~merijn@c-001-001-001.client.esciencecenter.eduvpn.nl) (Ping timeout: 250 seconds)
[05:19:26] <de-facto> well i needed this because i discovered the byte sequence in IRC and then needed to find the correct codepoint for python
[05:19:27] <adinf> Can someone please explain why the final value of `z` in the following code with imports is `False` in the first case. However, in the last case (x_prime.py), the final value of `z` is `True` as expected, or at least what I expected. https://bpa.st/ZQ7A
[05:19:29] <Tritium> its mostly for ...the source file
[05:19:48] <adinf> I suspect it's something to do with circular imports, but I'm not sure.
[05:19:54] <SnoopJ> truly awful that it's embedded inside of ascii() though
[05:20:14] <SnoopJ> probably because it's less commonly useful as you say
[05:20:26] *** Quits: pythonoob (~thelounge@om126194014222.10.openmobile.ne.jp) (Quit: The Lounge - https://thelounge.chat)
[05:20:48] *** Quits: gurkenglas (~gurkengla@dslb-178-012-018-212.178.012.pools.vodafone-ip.de) (Ping timeout: 252 seconds)
[05:20:52] <nedbat> SnoopJ: ascii() is a terrible name for that function
[05:21:27] *** Joins: llanhmod (~Thunderbi@user/domhnall/x-2887755)
[05:22:02] <SnoopJ> nedbat, why is that, isn't the result a sequence of codepoints that fall into ASCII?
[05:22:20] <nedbat> SnoopJ: it's an ascii version of repr(). but the name doesn't mention repr
[05:22:35] *** Quits: winterflaw (~winterfla@gateway/tor-sasl/winterflaw) (Ping timeout: 240 seconds)
[05:22:37] *** Quits: jero98772 (~jero98772@2800:484:1d80:d8ce:efcc:cbb3:7f2a:6dff) (Remote host closed the connection)
[05:22:41] <Tritium> that is horrible
[05:22:44] <nedbat> adinf: it's because x is __main__ and then x.  you have two different versions of it.  You can't try to import your main program.
[05:23:07] <SnoopJ> hmm, yea, I guess repr_ascii() or maybe a behavioral flag for repr() would be a little more illuminating re: this behavior
[05:23:11] *** Quits: zeden (~zeden@user/zeden) (Quit: WeeChat 3.4.1)
[05:23:14] <nedbat> SnoopJ: definitely.
[05:23:59] <adinf> So there are two different versions of z in the first case?
[05:24:00] <SnoopJ> if I understand the impl right, it does the moral equivalent of .encode("ascii", "backslashreplace").decode() ?
[05:24:08] *** Quits: sturm_ (~bsturmfel@mediagoblin/maintainer/bsturmfels) (Read error: Connection reset by peer)
[05:24:47] *** Joins: sturm_ (~bsturmfel@mediagoblin/maintainer/bsturmfels)
[05:24:54] <nedbat> adinf: yes, there is __main__.z and x.z
[05:26:09] *** Joins: mixfix41 (~sdenynine@user/mixfix41)
[05:26:48] *** Quits: rpkilby (~rpkilby@c-24-20-208-106.hsd1.or.comcast.net) (Remote host closed the connection)
[05:27:11] *** Joins: dsrt^ (~dsrt@65.240.140.18)
[05:28:10] <adinf> nedbat, in that case, can I access them separately, too?
[05:28:28] *** hendry1 is now known as hendry
[05:29:00] <Tritium> SnoopJ: i...think it calls the __ascii__ magic method
[05:29:02] <nedbat> adinf: well, you could, but you shouldn't do this.
[05:29:14] *** Joins: pythonoob (~thelounge@om126194014222.10.openmobile.ne.jp)
[05:29:17] <nedbat> SnoopJ: i'm a little unclear on the details of how it does it.
[05:29:22] <Tritium> now that i'm thinking about it, that sounds familiar
[05:29:24] <SnoopJ> Tritium, is that a thing? I don't see that in the source tree
[05:29:29] *** Joins: roxfan (~roxfan@2a02:a03f:a2be:4f00:49af:1e90:ff60:b7d7)
[05:30:01] *** Joins: foobaz212 (~foobaz212@152.37.103.80)
[05:30:18] <Tritium> Nope, i'm remembering a pep
[05:30:30] *** Quits: ghost43 (~ghost43@gateway/tor-sasl/ghost43) (Remote host closed the connection)
[05:30:51] *** Joins: ghost43 (~ghost43@gateway/tor-sasl/ghost43)
[05:31:00] <Tritium> specifically a rejected idea pep
[05:31:10] <adinf> nedbat, I understand I shouldn't, only curious.
[05:31:19] <SnoopJ> my reading was that you end up in Python/bltinmodule.c:builtin_ascii() and from there to here: https://github.com/python/cpython/blob/main/Objects/object.c#L528
[05:31:30] <nedbat> adinf: yes, try it:  import __main__; print(__main__.z)
[05:31:33] *** Quits: mon_aaraj (~MonAaraj@user/mon-aaraj/x-4416475) (Ping timeout: 256 seconds)
[05:31:49] <SnoopJ> where the "moral equivalent" I was asking about is the _PyUnicode_AsASCIIString() call followed by PyUnicode_DecodeASCII
[05:32:31] <Tritium> good night
[05:33:40] *** Joins: mon_aaraj (~MonAaraj@user/mon-aaraj/x-4416475)
[05:33:52] <SnoopJ> ooh I didn't realize the migration from BPO to GitHub was so near at hand. Next week, it seems like?
[05:34:17] <adinf> nedbat: Ah, one is true, and the other is false. I'm still a tad confused, but it definitely makes more sense than it did at first -- thank you.
[05:34:57] *** Quits: foobaz212 (~foobaz212@152.37.103.80) (Ping timeout: 256 seconds)
[05:36:51] *** Joins: blei (~blei@user/blei)
[05:38:02] *** Quits: jmcb (~jmcb@hacksoc/member/jmcb) (Ping timeout: 240 seconds)
[05:39:58] *** Quits: shokohsc (~shokohsc@lfbn-idf2-1-1472-129.w92-169.abo.wanadoo.fr) (Read error: Connection reset by peer)
[05:41:11] *** Quits: nuclearg1 (~nucleargr@user/nuclearg1) (Ping timeout: 256 seconds)
[05:41:17] *** Joins: jmcb (~jmcb@hacksoc/member/jmcb)
[05:41:38] *** Joins: shokohsc (~shokohsc@lfbn-idf2-1-1472-129.w92-169.abo.wanadoo.fr)
[05:42:42] *** Quits: ghost43 (~ghost43@gateway/tor-sasl/ghost43) (Remote host closed the connection)
[05:42:55] *** Joins: ghost43 (~ghost43@gateway/tor-sasl/ghost43)
[05:45:33] *** Quits: bart__ (~Xano@2a00:23c4:4204:700:c744:1b62:433b:6312) (Ping timeout: 252 seconds)
[05:51:11] *** Quits: rama (~rama@c-24-130-92-222.hsd1.ca.comcast.net) (Remote host closed the connection)
[05:51:28] *** Quits: chenqisu1 (~chenqisu1@183.217.201.47) (Ping timeout: 250 seconds)
[05:51:53] *** Joins: rama (~rama@c-24-130-92-222.hsd1.ca.comcast.net)
[05:55:05] *** Parts: adinf (~ariel@2001:19f0:5:5337:5400:3ff:fe6c:38e9) (WeeChat 3.0)
[05:56:12] *** Quits: rama (~rama@c-24-130-92-222.hsd1.ca.comcast.net) (Ping timeout: 240 seconds)
[05:56:14] *** Joins: newpy (~newpy@206.168.231.90)
[05:59:14] *** Joins: Xano (~Xano@2a00:23c4:4204:700:c744:1b62:433b:6312)
[05:59:28] *** Quits: bomb-on (~bomb-on@user/bomb-on) (Quit: aллилѹіа!)
[06:00:08] *** Quits: mgedmin (~mg@user/mgedmin) (Quit: ZNC - http://znc.sourceforge.net)
[06:00:33] *** Joins: jsm (~jmcb@hacksoc/member/jmcb)
[06:00:38] *** Quits: pythonoob (~thelounge@om126194014222.10.openmobile.ne.jp) (Read error: Connection reset by peer)
[06:01:58] *** Quits: junktext (~junktext@gateway/vpn/pia/junktext) (Remote host closed the connection)
[06:02:21] *** Joins: mgedmin (~mg@user/mgedmin)
[06:03:34] *** Quits: davidlowryduda (~davidlowr@2601:197:600:1210:b19d:d8f1:1756:fb98) (Ping timeout: 260 seconds)
[06:04:25] *** Quits: jmcb (~jmcb@hacksoc/member/jmcb) (Ping timeout: 256 seconds)
[06:04:49] *** Joins: jmcb (~jmcb@hacksoc/member/jmcb)
[06:04:54] *** Quits: jsm (~jmcb@hacksoc/member/jmcb) (Ping timeout: 250 seconds)
[06:05:17] *** Joins: junktext (~junktext@gateway/vpn/pia/junktext)
[06:05:33] *** Joins: davidlowryduda (~davidlowr@73.61.8.157)
[06:05:35] *** Joins: pythonoob (~thelounge@om126194014222.10.openmobile.ne.jp)
[06:05:42] *** Joins: c4017w_ (~c4017@209.52.68.8)
[06:07:39] *** Quits: jmcb (~jmcb@hacksoc/member/jmcb) (Client Quit)
[06:08:52] *** Quits: Xano (~Xano@2a00:23c4:4204:700:c744:1b62:433b:6312) (Remote host closed the connection)
[06:09:00] *** Quits: c4017w__ (~c4017@209.52.68.8) (Ping timeout: 240 seconds)
[06:09:15] *** Joins: abhixec (~abhixec@c-67-169-139-16.hsd1.ca.comcast.net)
[06:10:11] *** Joins: Xano (~Xano@2a00:23c4:4204:700:c744:1b62:433b:6312)
[06:10:13] *** Joins: pyeveryt_ (~pyeveryth@64-18-153-56.starry-inc.net)
[06:11:02] *** Quits: ubert (~Thunderbi@p200300ecdf15887dfd6bfc6fe6a8a410.dip0.t-ipconnect.de) (Ping timeout: 240 seconds)
[06:11:19] *** Joins: ubert (~Thunderbi@p200300ecdf1588f0fd6bfc6fe6a8a410.dip0.t-ipconnect.de)
[06:15:55] *** Joins: leduyquang753 (~leduyquan@user/leduyquang753)
[06:17:38] *** Joins: KimK (~KimK@2600:8803:740b:4700:4a5b:39ff:fe0b:57d2)
[06:23:34] *** Joins: humbertowoody (~humbertow@187.202.220.176)
[06:24:00] *** Quits: SaltHilStroller_ (~SaltHillS@206.223.160.26) (Read error: Connection reset by peer)
[06:24:07] *** Quits: dhill (~dhill@modemcable103.217-80-70.mc.videotron.ca) (Remote host closed the connection)
[06:24:55] *** Joins: SaltHilStroller_ (~SaltHillS@199.249.111.186)
[06:26:02] *** Joins: src (~src@user/src)
[06:26:06] *** Joins: SaltHillStroller (~SaltHillS@thunderhill.nvidia.com)
[06:26:17] *** Quits: humberto1 (~humbertow@187.202.220.176) (Ping timeout: 240 seconds)
[06:26:39] *** Joins: nuclearg1 (~nucleargr@user/nuclearg1)
[06:27:11] *** Quits: TheCat (~TheCat@user/z-cat) (Ping timeout: 250 seconds)
[06:28:27] *** Quits: Belxjander (~Belxjande@p1575007-ipoe.ipoe.ocn.ne.jp) (Ping timeout: 252 seconds)
[06:29:36] *** Quits: SaltHilStroller_ (~SaltHillS@199.249.111.186) (Ping timeout: 250 seconds)
[06:30:26] *** Joins: xcombelle1 (~xavie@176-139-252-198.abo.bbox.fr)
[06:30:32] *** Quits: xcombelle (~xavie@176-139-252-198.abo.bbox.fr) (Ping timeout: 240 seconds)
[06:31:00] *** Quits: nuclearg1 (~nucleargr@user/nuclearg1) (Ping timeout: 240 seconds)
[06:31:53] *** Joins: Belxjander (~Belxjande@p1575007-ipoe.ipoe.ocn.ne.jp)
[06:32:44] <maxtim> I'm ssh'd into my pi, but I have it sitting net to me with a screen attached. How can I send print() to that screen?
[06:33:53] *** Quits: weibullguy (weibullguy@gateway/vpn/protonvpn/weibullguy) (Ping timeout: 256 seconds)
[06:35:09] <SnoopJ> maxtim, tmux or a similar program that lets you log into the same session multiple times might be handy for that?
[06:35:32] <maxtim> I'd be running the script from systemd
[06:36:08] * SnoopJ has lost track of the problem description
[06:37:01] *** Quits: mefistofeles (~mefistofe@user/mefistofeles) (Ping timeout: 245 seconds)
[06:37:05] <maxtim> output to the screen from a python script started in systemd by root
[06:38:13] <maxtim> it doesn't have a gui installed, btw
[06:38:14] *** Joins: Ezuharad (~Avacyn@134.53.122.33)
[06:39:14] <maxtim> Current iteration https://bpa.st/YRFA
[06:39:30] *** Joins: HiccupJul (~HiccupJul@cpc122682-reig6-2-0-cust39.6-3.cable.virginm.net)
[06:39:44] <HiccupJul> how can I set a cookie for a whole python Requests session?
[06:40:10] <HiccupJul> so that every request made in the session will have that cookie
[06:40:29] <SnoopJ> HiccupJul, are you aware of the Session class? https://docs.python-requests.org/en/master/user/advanced/#session-objects
[06:40:54] <HiccupJul> yeah
[06:41:28] <HiccupJul> oh right, you'd do session.cookies.update() I guess
[06:41:33] <SnoopJ> maxtim, I don't know if it's even possible to get systemd to barge in on that terminal, especially if there's some other session writing to it. I don't think that's a Python question though, #linux might have better answers for you.
[06:41:42] *** Quits: Ezuharad (~Avacyn@134.53.122.33) (Client Quit)
[06:41:53] <maxtim> aye
[06:42:25] *** Joins: TonyStone (~TonyStone@2603-7080-8607-c36a-b409-678c-49f6-3fbd.res6.spectrum.com)
[06:42:52] *** Quits: TonyStone (~TonyStone@2603-7080-8607-c36a-b409-678c-49f6-3fbd.res6.spectrum.com) (Remote host closed the connection)
[06:43:31] *** Quits: SaltHillStroller (~SaltHillS@thunderhill.nvidia.com) (Ping timeout: 256 seconds)
[06:44:54] *** Joins: R2Racoon (~R2Racoon@181.62.52.196)
[06:45:38] *** Quits: schumaml (~schumaml@dslb-188-104-179-095.188.104.pools.vodafone-ip.de) (Ping timeout: 250 seconds)
[06:47:38] *** Joins: schumaml (~schumaml@dslb-092-074-011-218.092.074.pools.vodafone-ip.de)
[06:47:49] <HiccupJul> doesnt seem to be working...
[06:48:03] <HiccupJul> no idea why, i'll post my code
[06:48:14] *** Quits: akaWolf (~akaWolf@akawolf.org) (Ping timeout: 250 seconds)
[06:50:56] *** Joins: rama (~rama@c-24-130-92-222.hsd1.ca.comcast.net)
[06:51:29] *** Quits: ghost43 (~ghost43@gateway/tor-sasl/ghost43) (Remote host closed the connection)
[06:51:40] <SnoopJ> maxtim, apparently you can (at least sometimes) just write to the character device, that may be how you get to the functionality you want: https://i.imgur.com/qOYE1LA.png
[06:52:14] *** Joins: ghost43 (~ghost43@gateway/tor-sasl/ghost43)
[06:52:55] <maxtim> gotchya
[06:53:18] <SnoopJ> if the destination is consistently the same device, you can probably tell systemd to hook up its stdout/stderr to it when it starts your program
[06:53:44] <SnoopJ> (although if you have some other program outputting to it, you will clobber any output it's producing!)
[06:54:23] *** Joins: humberto1 (~humbertow@187.202.220.176)
[06:54:41] *** Joins: white2 (~mahengrui@user/mahengrui1)
[06:55:29] *** Quits: ghost43 (~ghost43@gateway/tor-sasl/ghost43) (Remote host closed the connection)
[06:55:31] <Togra> wat. never thought of that. that's awesome
[06:56:15] <maxtim> SnoopJ, I was more interested in just checking that I could run multiples of this without it colliding with itself. Using sys.stdout.flush() sends to /var/log/syslog. from there I can tail -f /var/log/syslog and see the output
[06:56:15] <SnoopJ> Unix's absurdly simple data model occasionally has its perks
[06:56:24] *** Quits: white2 (~mahengrui@user/mahengrui1) (Read error: Connection reset by peer)
[06:56:39] *** Quits: johnkeats6 (~johnkeats@2804:14c:32:a0cc:41c3:75a8:a277:69a2) (Ping timeout: 250 seconds)
[06:56:43] <HiccupJul> https://termbin.com/9j1r
[06:56:51] *** Quits: ExpiredKebab (~sgreadly@2407:7000:89aa:b303:b8b1:47fa:69dd:e3fc) (Quit: Textual IRC Client: www.textualapp.com)
[06:57:00] *** Quits: humbertowoody (~humbertow@187.202.220.176) (Ping timeout: 240 seconds)
[06:57:09] <blei> nice
[06:57:10] <SnoopJ> maxtim, well, you'll still have collision issues if you have multiples writing to that same file, in the sense that your lines will probably be all mixed up, or worse
[06:57:11] <maxtim> in production, these notifications would be sent via email
[06:57:26] *** Joins: ghost43 (~ghost43@gateway/tor-sasl/ghost43)
[06:57:32] *** Joins: white2 (~mahengrui@user/mahengrui1)
[06:57:50] <HiccupJul> I checked the headers of the request, and the cookies aren't there...
[06:57:57] <SnoopJ> maxtim, so if you're needing to do this across multiple processes and want the output to show up in any organized fashion, you may want to consider some explicit coordination. Kinda depends on what you're doing, though.
[06:58:06] <HiccupJul> I must be missing something obvious
[06:58:20] <SnoopJ> ...as I put that sentence together, I realize this is the crux of the headache that we're having with our logging system at work, heh.
[06:58:32] <squirrel> i've got `PermissionError: [Errno 13] Permission denied` when running `subprocess.Popen(['mpv'])`. i don't have mpv installed. any idea what it is trying to do?
[06:58:43] <SnoopJ> (although we have less of an excuse, it's a single process with multiple threads)
[06:58:46] <maxtim> I get what you're saying, but it's not really that important
[06:58:57] <blei> just plugged that code into /dev/pts/lefteyeball
[06:59:19] <SnoopJ> maxtim, I thought I'd mention it since I have *no* idea what may or may not be important, because I know approximately nothing about what you're building.
[06:59:31] <SnoopJ> except that there's a character device you want it to barf output onto :)
[07:00:00] *** Joins: nuclearg1 (~nucleargr@user/nuclearg1)
[07:00:23] <SnoopJ> squirrel, possibly trying to read/execute something it doesn't have access to? You can use strace to find out
[07:00:55] <maxtim> just so long as they all get emailed at some point. I have a pi's gpio connected to a bunch of audio silence sensors. When the relays flip, send me a notification. when they return to open state, send me a notification.
[07:02:12] <maxtim> I was using this pi here for testing, so I don't have to cause dead air or be physically there to yank wires for testing
[07:02:33] *** Quits: Xano (~Xano@2a00:23c4:4204:700:c744:1b62:433b:6312) (Ping timeout: 252 seconds)
[07:02:39] <SnoopJ> squirrel, does the file `mpv` possibly exist somewhere in your PATH, without the execute permission set?
[07:03:17] *** Quits: bloody (~bloody@user/bloody) (Quit: okluvyabubye)
[07:04:16] *** Quits: nuclearg1 (~nucleargr@user/nuclearg1) (Ping timeout: 250 seconds)
[07:06:27] *** Joins: c4017w__ (~c4017@209.52.68.8)
[07:07:30] *** Quits: ovnicraft (~ovnicraft@corp-179-49-44-28.uio.puntonet.ec) (Ping timeout: 252 seconds)
[07:07:31] *** Quits: FlipFlop (~FlipFlop@user/fl1pfl0p) (Read error: Connection reset by peer)
[07:08:16] *** Quits: dodobrain (~dodobrain@user/dodobrain) (Remote host closed the connection)
[07:09:06] *** Joins: dodobrain (~dodobrain@user/dodobrain)
[07:09:20] *** Quits: Guest3298 (~root@5.2.79.79) (Quit: Lost terminal)
[07:09:32] *** Quits: c4017w_ (~c4017@209.52.68.8) (Ping timeout: 240 seconds)
[07:09:43] *** Joins: ovnicraft (~ovnicraft@ftth-179-49-44-28.cue.celerity.ec)
[07:10:13] *** Joins: adeliktas8 (~adeliktas@i59F5FD1E.versanet.de)
[07:10:42] *** Quits: Enissay (~Enissay@user/enissay) (Quit: WeeChat 3.0)
[07:11:25] *** Joins: Enissay (~Enissay@user/enissay)
[07:12:25] *** Quits: adeliktas (~adeliktas@i59f527d7.versanet.de) (Ping timeout: 256 seconds)
[07:12:25] *** adeliktas8 is now known as adeliktas
[07:13:37] *** Joins: abrahamchavez (~abrahamch@cpe-76-89-218-122.socal.res.rr.com)
[07:13:47] *** Quits: abrahamchavez (~abrahamch@cpe-76-89-218-122.socal.res.rr.com) (Client Quit)
[07:14:02] *** Quits: schumaml (~schumaml@dslb-092-074-011-218.092.074.pools.vodafone-ip.de) (Ping timeout: 240 seconds)
[07:14:58] <squirrel> SnoopJ: hah, i looked closely at PATH and apparently WSL adds Windows PATH to Ubuntu it, and i did have a folder `mpv` in there. thanks
[07:15:10] *** Joins: HuitzilSan (~HuitzilSa@cpe-76-89-218-122.socal.res.rr.com)
[07:15:37] *** Joins: merijn (~merijn@c-001-001-001.client.esciencecenter.eduvpn.nl)
[07:15:54] *** Joins: schumaml (~schumaml@dslb-178-002-178-030.178.002.pools.vodafone-ip.de)
[07:15:57] *** Quits: BASHitup (~richard@user/yippeekaiyay) (Ping timeout: 240 seconds)
[07:17:32] *** Quits: FFY00 (~FFY00@archlinux/trusteduser/ffy00) (Ping timeout: 240 seconds)
[07:18:12] *** Joins: BASHitup (~richard@user/yippeekaiyay)
[07:18:18] *** Quits: whatsupdoc (uid509081@id-509081.hampstead.irccloud.com) (Quit: Connection closed for inactivity)
[07:22:25] *** Quits: src (~src@user/src) (Quit: leaving)
[07:24:34] *** Joins: sabine (~sabine@c-24-19-250-137.hsd1.wa.comcast.net)
[07:24:49] *** Quits: sabine (~sabine@c-24-19-250-137.hsd1.wa.comcast.net) (Client Quit)
[07:26:27] *** Quits: cdown (~cdown@188.214.11.14) (Remote host closed the connection)
[07:27:00] *** Quits: schumaml (~schumaml@dslb-178-002-178-030.178.002.pools.vodafone-ip.de) (Ping timeout: 240 seconds)
[07:27:02] *** Quits: tijuco (~tijuco@user/tijuco) (Ping timeout: 240 seconds)
[07:27:13] *** Joins: akaWolf (~akaWolf@akawolf.org)
[07:27:24] *** Joins: tijuco (~tijuco@user/tijuco)
[07:28:02] *** Quits: mon_aaraj (~MonAaraj@user/mon-aaraj/x-4416475) (Ping timeout: 240 seconds)
[07:29:12] *** Joins: mon_aaraj (~MonAaraj@user/mon-aaraj/x-4416475)
[07:29:14] *** Joins: schumaml (~schumaml@dslb-178-002-181-074.178.002.pools.vodafone-ip.de)
[07:30:09] *** Quits: GreenLlama (~quassel@80-219-124-12.dclient.hispeed.ch) (Quit: http://quassel-irc.org - Chat comfortably. Anywhere.)
[07:30:10] *** Quits: CatCow (~wtf_over@c-73-96-109-206.hsd1.or.comcast.net) (Quit: My MacBook Air has gone to sleep. ZZZzzz…)
[07:30:39] *** Joins: foobaz212 (~foobaz212@152.37.103.80)
[07:31:24] *** Quits: roxfan (~roxfan@2a02:a03f:a2be:4f00:49af:1e90:ff60:b7d7) (Ping timeout: 240 seconds)
[07:31:47] *** Joins: cdown (~cdown@188.214.11.14)
[07:32:47] *** Joins: GreenLlama (~quassel@80-219-124-12.dclient.hispeed.ch)
[07:35:20] *** Quits: ncwbqcfe (~rvgzuuqp@gateway/tor-sasl/rvgzuuqp) (Quit: ncwbqcfe)
[07:35:39] *** Quits: foobaz212 (~foobaz212@152.37.103.80) (Ping timeout: 256 seconds)
[07:36:39] *** Quits: [itchyjunk] (~itchyjunk@user/itchyjunk/x-7353470) (Read error: Connection reset by peer)
[07:37:55] *** Quits: admin123 (~harrymore@ool-2f12f5b1.dyn.optonline.net) (Ping timeout: 256 seconds)
[07:40:30] *** Quits: vlado (~vlado@2800:484:3587:3c90:8bf1:66d4:72a6:4f9c) (Quit: WeeChat 3.4)
[07:41:50] *** Quits: slowButPresent (~slowButPr@user/slowbutpresent) (Quit: leaving)
[07:42:08] *** Quits: Phase_ (~phase@user/phase) (Ping timeout: 252 seconds)
[07:44:32] *** Quits: hackers (~self@user/hackers) (Ping timeout: 240 seconds)
[07:44:41] *** Quits: korg815 (~korg815@user/korg815) (Quit: WeeChat 2.8)
[07:46:30] *** Quits: ravan_ (~ravan@user/ravan) (Remote host closed the connection)
[07:46:42] *** Joins: Phase (~phase@user/phase)
[07:47:06] *** Quits: mrgz (~mrgz@201-42-0-191.dsl.telesp.net.br) (Ping timeout: 252 seconds)
[07:47:38] *** Quits: death916 (~death916@c-73-220-87-102.hsd1.ca.comcast.net) (Ping timeout: 252 seconds)
[07:49:32] *** Quits: merijn (~merijn@c-001-001-001.client.esciencecenter.eduvpn.nl) (Ping timeout: 240 seconds)
[07:50:17] *** Quits: tijuco (~tijuco@user/tijuco) (Ping timeout: 240 seconds)
[07:50:21] *** Joins: Tacoder (~Tacoder@2806:264:5482:9e0:1cc9:d73:eb51:2a8d)
[07:50:48] *** Joins: tijuco (~tijuco@user/tijuco)
[07:51:50] *** Quits: HiccupJul (~HiccupJul@cpc122682-reig6-2-0-cust39.6-3.cable.virginm.net) (Quit: Quit)
[07:51:56] *** Quits: ubert (~Thunderbi@p200300ecdf1588f0fd6bfc6fe6a8a410.dip0.t-ipconnect.de) (Quit: ubert)
[07:52:15] *** Joins: ubert (~Thunderbi@p200300ecdf1588f0fd6bfc6fe6a8a410.dip0.t-ipconnect.de)
[07:52:24] *** Joins: nuclearg1 (~nucleargr@user/nuclearg1)
[07:52:49] *** Quits: theprophet (~theprophe@212.58.102.156) (Quit: Client closed)
[07:53:01] *** Joins: jamea (~jamea@177.239.81.39)
[07:54:39] *** Joins: l4yer (~l4yer@user/l4yer)
[07:55:07] *** Joins: parv (~quass@user/parv)
[07:57:11] *** Quits: nuclearg1 (~nucleargr@user/nuclearg1) (Ping timeout: 256 seconds)
[08:00:33] *** Quits: leshaste (~lesshaste@82-69-126-43.dsl.in-addr.zen.co.uk) (Read error: Connection reset by peer)
[08:00:50] *** Joins: leshaste (~lesshaste@82-69-126-43.dsl.in-addr.zen.co.uk)
[08:05:23] *** Quits: uxemacs (~timothy@user/uxemacs) (Ping timeout: 240 seconds)
[08:05:30] *** Joins: admin123 (~harrymore@ool-2f12f5b1.dyn.optonline.net)
[08:05:32] *** Quits: scoobydoo (~scooby@user/scoobydoo) (Ping timeout: 272 seconds)
[08:06:44] *** Joins: c4017w_ (~c4017@209.52.68.8)
[08:07:01] *** Quits: mdemo (~mdemo@user/mdemo22) (Quit: The Lounge - https://thelounge.github.io)
[08:07:23] *** Quits: jamea (~jamea@177.239.81.39) (Ping timeout: 256 seconds)
[08:07:34] *** Quits: p-i- (~Ohmu@2403:6200:8978:d82d:89c0:e177:c2f7:c9a9) (Remote host closed the connection)
[08:07:55] *** Quits: penguino (~mrpenguin@user/mrpenguin) (Ping timeout: 240 seconds)
[08:08:06] *** Joins: p-i- (~Ohmu@2403:6200:8978:d82d:540d:8c68:2946:51e0)
[08:09:08] *** Joins: penguino (~mrpenguin@user/mrpenguin)
[08:10:13] *** Quits: c4017w__ (~c4017@209.52.68.8) (Ping timeout: 256 seconds)
[08:13:15] *** Quits: penguino (~mrpenguin@user/mrpenguin) (Ping timeout: 240 seconds)
[08:14:03] *** Quits: zebrag (~chris@user/zebrag) (Ping timeout: 252 seconds)
[08:16:44] *** Quits: pankid (~quassel@pankid.club) (Quit: https://quassel-irc.org - Chat comfortably. Anywhere.)
[08:17:40] *** Joins: ravan (~ravan@user/ravan)
[08:17:47] *** Joins: pankid (~quassel@pankid.club)
[08:17:57] *** Joins: codebam (~codebam@user/codebam)
[08:20:26] *** Quits: blei (~blei@user/blei) (Quit: Client closed)
[08:24:27] *** Joins: kdc (~kdc@196.211.197.133)
[08:24:37] *** Quits: admin123 (~harrymore@ool-2f12f5b1.dyn.optonline.net) (Ping timeout: 240 seconds)
[08:24:40] <cloudcell> hello everyone, how can I enable the sidebar at the left of the jupyter notebook so it does not look like this:
[08:24:43] <cloudcell> https://usercontent.irccloud-cdn.com/file/J0VzBxZ0/image.png
[08:25:12] <cloudcell> and looks like this instead
[08:25:14] <cloudcell> https://usercontent.irccloud-cdn.com/file/Ww7QJpam/image.png
[08:25:37] *** Quits: kdc (~kdc@196.211.197.133) (Max SendQ exceeded)
[08:26:26] *** Quits: yitz (~yitz@exercism/yitz) (Ping timeout: 272 seconds)
[08:26:32] *** Joins: kdc (~kdc@196.211.197.133)
[08:26:40] *** Joins: nuclearg1 (~nucleargr@user/nuclearg1)
[08:26:45] *** Quits: sturm_ (~bsturmfel@mediagoblin/maintainer/bsturmfels) (Quit: Leaving)
[08:27:47] *** Quits: Barones (~Barones@user/Barones) (Remote host closed the connection)
[08:30:00] *** Quits: sreve (~quassel@p4ff44633.dip0.t-ipconnect.de) (Ping timeout: 252 seconds)
[08:30:17] *** Quits: schumaml (~schumaml@dslb-178-002-181-074.178.002.pools.vodafone-ip.de) (Ping timeout: 240 seconds)
[08:30:19] <jinsun__> run jupyter lab and not jupyter notebook
[08:30:26] *** Joins: sreve (~quassel@p549d71d6.dip0.t-ipconnect.de)
[08:30:42] *** Joins: penguino (~mrpenguin@user/mrpenguin)
[08:31:00] *** Quits: nuclearg1 (~nucleargr@user/nuclearg1) (Ping timeout: 240 seconds)
[08:33:14] <jinsun__> cloudcell: https://github.com/jupyterlab/jupyterlab#installation
[08:33:56] <cloudcell> oh, thanks! jinsun__ !
[08:34:22] *** Joins: schumaml (~schumaml@dslb-178-007-207-043.178.007.pools.vodafone-ip.de)
[08:36:11] *** Quits: rama (~rama@c-24-130-92-222.hsd1.ca.comcast.net) (Remote host closed the connection)
[08:36:55] *** Joins: rama (~rama@c-24-130-92-222.hsd1.ca.comcast.net)
[08:39:17] *** Quits: schumaml (~schumaml@dslb-178-007-207-043.178.007.pools.vodafone-ip.de) (Ping timeout: 240 seconds)
[08:39:24] *** Quits: ivanf (~ivan@user/ivanf) (Quit: Textual IRC Client: www.textualapp.com)
[08:41:00] *** Joins: admin123 (~harrymore@ool-2f12f5b1.dyn.optonline.net)
[08:41:20] *** Quits: rama (~rama@c-24-130-92-222.hsd1.ca.comcast.net) (Ping timeout: 250 seconds)
[08:41:40] *** Joins: schumaml (~schumaml@dslb-178-007-193-018.178.007.pools.vodafone-ip.de)
[08:42:01] *** Quits: subopt (~subopt@2603-8081-2302-459a-09c0-8edd-7344-ddad.res6.spectrum.com) (Quit: My MacBook has gone to sleep. ZZZzzz…)
[08:42:28] *** Quits: ghost43 (~ghost43@gateway/tor-sasl/ghost43) (Remote host closed the connection)
[08:43:22] *** Joins: ghost43 (~ghost43@gateway/tor-sasl/ghost43)
[08:43:44] *** Quits: Spawns_Carpeting (~Spawns_Ca@user/spawns-carpeting/x-6969421) (Quit: WeeChat 3.0)
[08:44:04] *** Joins: ivan_ (~ivan@pool-173-56-92-56.nycmny.fios.verizon.net)
[08:44:11] *** Quits: R2Racoon (~R2Racoon@181.62.52.196) (Quit: Client closed)
[08:44:40] *** ivan_ is now known as ivanf
[08:44:49] *** Joins: weechat1 (~Spawns_Ca@user/spawns-carpeting/x-6969421)
[08:44:56] *** Quits: ivanf (~ivan@pool-173-56-92-56.nycmny.fios.verizon.net) (Changing host)
[08:44:56] *** Joins: ivanf (~ivan@user/ivanf)
[08:45:09] *** Joins: rama (~rama@c-24-130-92-222.hsd1.ca.comcast.net)
[08:45:42] *** Joins: eyepeetee (~aa@024-151-038-076.res.spectrum.com)
[08:46:35] *** Quits: tejr (~tejr@user/tejr) (Ping timeout: 240 seconds)
[08:46:58] *** Joins: tejr (~tejr@user/tejr)
[08:48:11] *** Quits: tijuco (~tijuco@user/tijuco) (Ping timeout: 256 seconds)
[08:49:07] *** Joins: audiobirb (~audio@user/audio)
[08:49:13] *** Quits: Moosadee (~Moosadee@136.32.155.193) (Ping timeout: 268 seconds)
[08:49:15] *** Quits: Esexe_ (~aa@024-151-038-076.res.spectrum.com) (Ping timeout: 252 seconds)
[08:49:15] *** Quits: swinnenb (~swinnenb@user/swinnenb) (Ping timeout: 252 seconds)
[08:50:14] *** Joins: caveman (~caveman@gateway/tor-sasl/caveman)
[08:50:21] *** Quits: schumaml (~schumaml@dslb-178-007-193-018.178.007.pools.vodafone-ip.de) (Ping timeout: 252 seconds)
[08:51:02] *** Quits: nomic (~nomic@185.217.117.111) (Quit: Leaving)
[08:51:31] *** Quits: ghost43 (~ghost43@gateway/tor-sasl/ghost43) (Remote host closed the connection)
[08:51:56] *** Joins: ghost43 (~ghost43@gateway/tor-sasl/ghost43)
[08:51:57] <KnowledgeShark> hey everyone! hope everyone is having a good morning/afternoon/evening :)
[08:51:58] *** Joins: schumaml (~schumaml@dslb-188-104-183-181.188.104.pools.vodafone-ip.de)
[08:54:55] *** Quits: Pi-sistance (~Pi-sistan@cpc94040-newt37-2-0-cust284.19-3.cable.virginm.net) (Quit: Client closed)
[09:00:20] *** Quits: decimuscorvinus (~jimmy@136.37.105.112) (Quit: Will return)
[09:00:55] *** Joins: decimuscorvinus (~jimmy@136.37.105.112)
[09:01:02] *** Quits: penguino (~mrpenguin@user/mrpenguin) (Quit: penguino)
[09:01:30] *** Joins: nuclearg1 (~nucleargr@user/nuclearg1)
[09:06:03] *** Joins: kickingvegas (~cchoi@c-73-170-198-193.hsd1.ca.comcast.net)
[09:06:19] *** Quits: nuclearg1 (~nucleargr@user/nuclearg1) (Ping timeout: 256 seconds)
[09:06:54] *** Quits: mon_aaraj (~MonAaraj@user/mon-aaraj/x-4416475) (Ping timeout: 250 seconds)
[09:07:04] *** Joins: c4017w__ (~c4017@209.52.68.8)
[09:08:20] *** Quits: kickingvegas (~cchoi@c-73-170-198-193.hsd1.ca.comcast.net) (Client Quit)
[09:08:52] *** Quits: Tacoder (~Tacoder@2806:264:5482:9e0:1cc9:d73:eb51:2a8d) (Read error: Connection reset by peer)
[09:09:03] *** Joins: mon_aaraj (~MonAaraj@user/mon-aaraj/x-4416475)
[09:09:07] *** Joins: Tacoder (~Tacoder@2806:264:5482:9e0:a965:104f:9463:284c)
[09:09:09] *** Quits: ttree (~ttree0@c-24-17-16-242.hsd1.wa.comcast.net) (Ping timeout: 256 seconds)
[09:09:22] *** Joins: neo1 (~neo@103.144.161.8)
[09:09:57] *** Quits: esther (~esther@24-155-112-236.dyn.grandenetworks.net) (Ping timeout: 240 seconds)
[09:10:17] *** Quits: c4017w_ (~c4017@209.52.68.8) (Ping timeout: 240 seconds)
[09:12:32] *** Quits: daedw (~daedw@cpe-172-113-121-232.socal.res.rr.com) (Ping timeout: 240 seconds)
[09:12:33] *** Quits: neo1 (~neo@103.144.161.8) (Client Quit)
[09:15:00] *** Quits: rje (~textual@50.35.241.164) (Remote host closed the connection)
[09:15:12] *** Joins: moog__ (~moog@98.97.83.146)
[09:15:35] *** Joins: rje (~textual@50.35.241.164)
[09:15:36] *** Quits: daddy (3645@hashbang/bdfl) (Remote host closed the connection)
[09:15:56] *** Joins: daddy (3645@hashbang/bdfl)
[09:16:42] *** Joins: pvergain (~Thunderbi@2a01:e0a:223:690:7378:306b:7e6b:1a42)
[09:16:43] *** Joins: gentooclimax (~gentoocli@81-64-65-213.rev.numericable.fr)
[09:17:51] *** Quits: moog_ (~moog@98.97.86.136) (Ping timeout: 252 seconds)
[09:18:58] *** Joins: neo1 (~neo@103.144.161.13)
[09:19:04] *** Joins: death916 (~death916@c-73-220-87-102.hsd1.ca.comcast.net)
[09:19:21] *** Joins: nuclearg1 (~nucleargr@user/nuclearg1)
[09:19:53] *** Quits: pyeveryt_ (~pyeveryth@64-18-153-56.starry-inc.net) (Remote host closed the connection)
[09:20:29] *** Quits: ovnicraft (~ovnicraft@ftth-179-49-44-28.cue.celerity.ec) (Ping timeout: 256 seconds)
[09:20:36] *** Quits: Tacoder (~Tacoder@2806:264:5482:9e0:a965:104f:9463:284c) (Ping timeout: 252 seconds)
[09:20:46] *** Quits: moog__ (~moog@98.97.83.146) (Ping timeout: 250 seconds)
[09:22:14] *** Joins: envex (~envex@cpe-173-91-189-33.neo.res.rr.com)
[09:22:14] *** Joins: ovnicraft (~ovnicraft@ftth-179-49-44-28.cue.celerity.ec)
[09:22:32] *** Quits: tejr (~tejr@user/tejr) (Remote host closed the connection)
[09:23:51] <voldial> file_handle: BufferedReader = sys.stdin.buffer, ❯ Incompatible default for argument "file_handle" (default has type "BinaryIO", argument has type "BufferedReader")  [assignment]
[09:23:53] <voldial> type(sys.stdin.buffer) -> _io.BufferedReader
[09:24:02] *** Quits: nuclearg1 (~nucleargr@user/nuclearg1) (Ping timeout: 240 seconds)
[09:24:15] <voldial> where is BinaryIO? am I trping file_handle wrong?
[09:24:27] *** Quits: parv (~quass@user/parv) (Ping timeout: 252 seconds)
[09:26:19] *** Joins: veegee (~veegee@ipagstaticip-469c2903-2b07-6dc3-3bc2-98748da5ca77.sdsl.bell.ca)
[09:28:11] *** Quits: newpy (~newpy@206.168.231.90) (Quit: Leaving)
[09:28:54] *** Joins: roxfan (~roxfan@2a02:a03f:a2be:4f00:49af:1e90:ff60:b7d7)
[09:29:36] *** Joins: tejr (~tejr@user/tejr)
[09:30:28] *** Quits: ghost43 (~ghost43@gateway/tor-sasl/ghost43) (Remote host closed the connection)
[09:31:13] *** Joins: ghost43 (~ghost43@gateway/tor-sasl/ghost43)
[09:31:58] *** Joins: foobaz212 (~foobaz212@152.37.103.80)
[09:34:35] *** Joins: upsala (~zcb@185.209.196.134)
[09:34:54] <jinsun__> voldial: probably https://docs.python.org/3/library/typing.html#typing.BinaryIO
[09:36:10] <voldial> jinsun__: aah. yes, that fixed it. thanks
[09:36:18] *** Joins: nuclearg1 (~nucleargr@user/nuclearg1)
[09:36:21] *** Quits: foobaz212 (~foobaz212@152.37.103.80) (Ping timeout: 256 seconds)
[09:36:47] *** Joins: dvx (~dvx@5.181.92.64)
[09:37:01] *** Joins: marderIII (~MarderIII@86-88-74-111.fixed.kpn.net)
[09:37:24] *** Joins: jazzy (~jaziz@user/jaziz)
[09:38:26] *** Joins: esther (~esther@24-155-112-236.dyn.grandenetworks.net)
[09:38:35] *** Quits: tejr (~tejr@user/tejr) (Ping timeout: 240 seconds)
[09:38:46] *** Quits: squirrel (uid529456@user/squirrel) (Quit: Connection closed for inactivity)
[09:39:00] *** Joins: tejr (~tejr@user/tejr)
[09:40:07] *** Quits: tejr (~tejr@user/tejr) (Client Quit)
[09:40:13] *** Quits: ubert (~Thunderbi@p200300ecdf1588f0fd6bfc6fe6a8a410.dip0.t-ipconnect.de) (Remote host closed the connection)
[09:40:13] *** Joins: ub (~Thunderbi@p548c8d44.dip0.t-ipconnect.de)
[09:40:22] *** Joins: stoneware4 (~stoneware@user/stoneware)
[09:40:53] *** Quits: nuclearg1 (~nucleargr@user/nuclearg1) (Ping timeout: 256 seconds)
[09:41:16] *** Quits: AlanMD (~AlanMD@86.124.30.89) (Quit: ZZZzzz…)
[09:41:30] *** Quits: nullm0dem (~nullm0dem@rs232.0x2f8.io) (Ping timeout: 260 seconds)
[09:41:32] *** Quits: stoneware (~stoneware@user/stoneware) (Read error: Connection reset by peer)
[09:41:32] *** stoneware4 is now known as stoneware
[09:41:38] *** Joins: nullm0dem (~nullm0dem@rs232.0x2f8.io)
[09:41:48] *** Joins: Wh0 (~V@43.241.144.151)
[09:42:26] *** Quits: berong91 (~noob4ever@d75-154-235-153.bchsia.telus.net) (Ping timeout: 260 seconds)
[09:42:31] *** ub is now known as ubert
[09:43:26] *** Joins: berong91 (~noob4ever@d75-154-235-153.bchsia.telus.net)
[09:46:02] *** Joins: AlanMD_ (~AlanMD@86.124.30.89)
[09:51:10] *** Joins: merijn (~merijn@c-001-001-001.client.esciencecenter.eduvpn.nl)
[09:51:27] *** Joins: andreasbuhr (~quassel@p549db74d.dip0.t-ipconnect.de)
[09:52:15] *** Quits: GNUmoon (~GNUmoon@gateway/tor-sasl/gnumoon) (Ping timeout: 240 seconds)
[09:53:01] *** Quits: osxtra (~root@136.49.201.174) (Ping timeout: 250 seconds)
[09:53:05] *** Joins: callq (~callq@2409:4062:4e9a:a9bd:dc94:3973:cfd6:75e7)
[09:54:15] *** Joins: osxtra (~root@2605:a601:aa0a:2200::83a2:6799)
[09:54:38] *** Quits: ghost43 (~ghost43@gateway/tor-sasl/ghost43) (Remote host closed the connection)
[09:54:52] *** Joins: ghost43 (~ghost43@gateway/tor-sasl/ghost43)
[09:55:30] *** Quits: Kraus (~quassel@075-141-246-250.res.spectrum.com) (Read error: Connection reset by peer)
[09:55:51] *** Quits: Togra (~Togra@user/togra) (Read error: Connection reset by peer)
[09:56:43] *** Joins: Kraus (~quassel@075-141-246-250.res.spectrum.com)
[09:56:44] *** gentooclimax is now known as climax
[09:56:44] *** Quits: TML (~tml@user/tml) (Ping timeout: 250 seconds)
[09:56:45] *** Quits: llanhmod (~Thunderbi@user/domhnall/x-2887755) (Ping timeout: 256 seconds)
[09:57:02] *** Quits: llanhmod_ (~personnel@user/domhnall/x-2887755) (Ping timeout: 240 seconds)
[09:57:05] *** Quits: Betal (~Betal@user/betal) (Quit: WeeChat 3.4.1)
[09:57:53] *** Quits: LiftLeft (~LiftLeft@gateway/vpn/pia/liftleft) (Ping timeout: 256 seconds)
[09:58:37] *** climax is now known as gentooclimax
[09:58:53] *** Joins: llanhmod (~Thunderbi@user/domhnall/x-2887755)
[09:58:59] *** Joins: TML (~tml@user/tml)
[09:59:00] *** Joins: llanhmod_ (~personnel@user/domhnall/x-2887755)
[10:00:06] *** Quits: llanhmod (~Thunderbi@user/domhnall/x-2887755) (Client Quit)
[10:01:00] *** Joins: Togra (~Togra@user/togra)
[10:01:12] *** Joins: llanhmod (~Thunderbi@user/domhnall/x-2887755)
[10:02:45] *** Quits: cthulchu (~Cthulchu@69-172-160-196.cable.teksavvy.com) (Ping timeout: 256 seconds)
[10:02:55] *** Joins: swinnenb (~swinnenb@user/swinnenb)
[10:04:24] *** Joins: gurkenglas (~gurkengla@dslb-178-012-018-212.178.012.pools.vodafone-ip.de)
[10:05:32] *** Quits: ovnicraft (~ovnicraft@ftth-179-49-44-28.cue.celerity.ec) (Ping timeout: 240 seconds)
[10:06:12] *** Quits: agireud (~agireud@user/agireud) (Ping timeout: 240 seconds)
[10:06:14] *** Quits: white2 (~mahengrui@user/mahengrui1) (Read error: Connection reset by peer)
[10:06:35] *** Joins: agireud (~agireud@user/agireud)
[10:06:41] *** Joins: white2 (~mahengrui@user/mahengrui1)
[10:06:44] *** Joins: ovnicraft (~ovnicraft@ftth-179-49-44-28.cue.celerity.ec)
[10:06:57] *** Quits: Enitin (~Enitin@82.180.145.228) (Ping timeout: 256 seconds)
[10:07:21] *** Joins: c4017w_ (~c4017@209.52.68.8)
[10:07:46] *** Quits: humberto1 (~humbertow@187.202.220.176) (Quit: WeeChat 3.4)
[10:08:00] <Wh0> hi all, anyone having suggetions for cloud storage or automatic backup of data?
[10:08:47] *** Joins: Enitin (~Enitin@82.180.145.228)
[10:09:02] *** Quits: Togra (~Togra@user/togra) (Ping timeout: 240 seconds)
[10:09:14] *** Quits: haasn (~nand@haasn.dev) (*.net *.split)
[10:09:14] *** Quits: karlpinc (~user@173-161-46-9-Illinois.hfc.comcastbusiness.net) (*.net *.split)
[10:09:14] *** Quits: biotty (~coien@li35-173.members.linode.com) (*.net *.split)
[10:09:14] *** Quits: nucleargrave (~nucleargr@user/nuclearg1) (*.net *.split)
[10:09:14] *** Quits: defn (~n0b0dy@user/defn) (*.net *.split)
[10:09:14] *** Quits: Myst3 (~Myst@user/myst) (*.net *.split)
[10:09:14] *** Quits: mdq (~mdq@freeshell.de) (*.net *.split)
[10:09:14] *** Quits: coc0nut (~coc0nut@user/coc0nut) (*.net *.split)
[10:09:14] *** Quits: Jenna16bit (~j16bit@c-73-228-39-16.hsd1.nm.comcast.net) (*.net *.split)
[10:09:14] *** Quits: Pixi (~Pixi@user/pixi) (*.net *.split)
[10:09:14] *** Quits: n1000_ (~n1000@user/n1000) (*.net *.split)
[10:09:14] *** Quits: pjoter_ (~october@s166.cyber-folks.pl) (*.net *.split)
[10:09:14] *** Quits: waveform (~quassel@waveform.plus.com) (*.net *.split)
[10:09:14] *** Quits: Spitfire (~spitfire@user/Spitfire) (*.net *.split)
[10:09:14] *** Quits: aposm_ (~aposm@relay.posmontier.com) (*.net *.split)
[10:09:14] *** Quits: pacbard (~pacbard@user/pacbard) (*.net *.split)
[10:09:15] *** Quits: ssiyad (~ssiyad@user/ssiyad) (*.net *.split)
[10:09:15] *** Quits: tinystoat (~squeek@user/tinystoat) (*.net *.split)
[10:09:33] *** Joins: nuclearg1 (~nucleargr@user/nuclearg1)
[10:10:39] *** Quits: c4017w__ (~c4017@209.52.68.8) (Ping timeout: 252 seconds)
[10:11:05] *** Quits: Zeturic (~Orimendix@50.26.218.162) (Quit: Leaving)
[10:11:11] *** Joins: the_lanetly_052 (~the_lanet@185.30.90.223)
[10:11:17] <grawity> how's that a #python thing
[10:12:13] *** Joins: LiftLeft (~LiftLeft@airstream-nelson-fiber-dhcp-007-17.dsl.airstreamcomm.net)
[10:12:33] *** Quits: the_lanetly_052 (~the_lanet@185.30.90.223) (Max SendQ exceeded)
[10:13:01] *** Joins: the_lanetly_052 (~the_lanet@185.30.90.223)
[10:13:52] *** Quits: the_lanetly_052 (~the_lanet@185.30.90.223) (Max SendQ exceeded)
[10:13:57] *** Quits: nuclearg1 (~nucleargr@user/nuclearg1) (Ping timeout: 240 seconds)
[10:14:23] *** Joins: the_lanetly_052 (~the_lanet@194.135.154.103)
[10:14:34] *** Joins: haasn (~nand@haasn.dev)
[10:14:34] *** Joins: biotty (~coien@li35-173.members.linode.com)
[10:14:34] *** Joins: karlpinc (~user@173-161-46-9-Illinois.hfc.comcastbusiness.net)
[10:14:34] *** Joins: nucleargrave (~nucleargr@user/nuclearg1)
[10:14:34] *** Joins: defn (~n0b0dy@user/defn)
[10:14:34] *** Joins: Myst3 (~Myst@user/myst)
[10:14:34] *** Joins: mdq (~mdq@freeshell.de)
[10:14:34] *** Joins: coc0nut (~coc0nut@user/coc0nut)
[10:14:34] *** Joins: Jenna16bit (~j16bit@c-73-228-39-16.hsd1.nm.comcast.net)
[10:14:34] *** Joins: Pixi (~Pixi@user/pixi)
[10:14:34] *** Joins: n1000_ (~n1000@user/n1000)
[10:14:34] *** Joins: pjoter_ (~october@s166.cyber-folks.pl)
[10:14:34] *** Joins: waveform (~quassel@waveform.plus.com)
[10:14:34] *** Joins: Spitfire (~spitfire@user/Spitfire)
[10:14:34] *** Joins: aposm_ (~aposm@relay.posmontier.com)
[10:14:34] *** Joins: pacbard (~pacbard@user/pacbard)
[10:14:34] *** Joins: ssiyad (~ssiyad@user/ssiyad)
[10:14:34] *** Joins: tinystoat (~squeek@user/tinystoat)
[10:14:48] *** Joins: powftw (uid448161@id-448161.lymington.irccloud.com)
[10:14:57] *** Joins: cypostres (~cypostres@user/cypostres)
[10:14:58] *** Quits: ssiyad (~ssiyad@user/ssiyad) (Max SendQ exceeded)
[10:14:58] *** Quits: coc0nut (~coc0nut@user/coc0nut) (Max SendQ exceeded)
[10:15:02] *** Quits: the_lanetly_052 (~the_lanet@194.135.154.103) (Max SendQ exceeded)
[10:15:05] *** Joins: ssiyad (~ssiyad@user/ssiyad)
[10:15:17] *** Joins: coc0nut (~coc0nut@user/coc0nut)
[10:15:30] *** Joins: the_lanetly_052 (~the_lanet@185.30.90.223)
[10:17:15] *** Quits: caveman (~caveman@gateway/tor-sasl/caveman) (Ping timeout: 240 seconds)
[10:18:25] *** Joins: xkuru (~xkuru@user/xkuru)
[10:20:31] *** Joins: jpodivin (~jpodivin@cgnat44-pool3-69-60.poda.cz)
[10:20:33] *** Quits: merijn (~merijn@c-001-001-001.client.esciencecenter.eduvpn.nl) (Ping timeout: 256 seconds)
[10:20:39] *** Quits: lerroux (~lerroux@180.190.12.26) (Read error: Connection reset by peer)
[10:21:06] *** Quits: jpodivin (~jpodivin@cgnat44-pool3-69-60.poda.cz) (Client Quit)
[10:23:01] *** Joins: x_kuru (xkuru@user/xkuru)
[10:23:23] *** Quits: mon_aaraj (~MonAaraj@user/mon-aaraj/x-4416475) (Ping timeout: 256 seconds)
[10:24:21] *** Joins: jpodivin (~jpodivin@cgnat44-pool3-69-60.poda.cz)
[10:25:01] *** Joins: anshupatia (uid29854@id-29854.helmsley.irccloud.com)
[10:25:16] *** Joins: mon_aaraj (~MonAaraj@user/mon-aaraj/x-4416475)
[10:25:30] *** Quits: skapata (~Skapata@user/skapata) (Ping timeout: 252 seconds)
[10:26:02] *** Joins: Togra (~Togra@user/togra)
[10:26:47] *** Quits: xkuru (~xkuru@user/xkuru) (Ping timeout: 256 seconds)
[10:26:59] *** Quits: HuitzilSan (~HuitzilSa@cpe-76-89-218-122.socal.res.rr.com) (Remote host closed the connection)
[10:27:05] *** Joins: jpn (~jpn@user/jpn)
[10:28:02] *** Quits: llanhmod_ (~personnel@user/domhnall/x-2887755) (Ping timeout: 240 seconds)
[10:28:22] *** Quits: llanhmod (~Thunderbi@user/domhnall/x-2887755) (Ping timeout: 250 seconds)
[10:28:23] *** Joins: nuclearg1 (~nucleargr@user/nuclearg1)
[10:28:28] *** Joins: caveman (~caveman@gateway/tor-sasl/caveman)
[10:28:42] *** Quits: dodobrain (~dodobrain@user/dodobrain) (Ping timeout: 240 seconds)
[10:28:48] *** Joins: zerotypic (~zerotypic@165.173.19.147)
[10:28:57] *** Quits: Enitin (~Enitin@82.180.145.228) (Ping timeout: 240 seconds)
[10:29:18] *** Joins: Enitin (~Enitin@82.180.145.230)
[10:30:51] *** Quits: neo1 (~neo@103.144.161.13) (Quit: WeeChat 3.4)
[10:31:15] *** Quits: Helithumper (~Helithump@c-76-25-170-226.hsd1.co.comcast.net) (Quit: ZNC 1.8.2 - https://znc.in)
[10:31:36] *** Joins: Helithumper (~Helithump@c-76-25-170-226.hsd1.co.comcast.net)
[10:31:57] *** Joins: manjaroi3 (~manjaro-i@61.2.53.215)
[10:33:00] *** Quits: nuclearg1 (~nucleargr@user/nuclearg1) (Ping timeout: 240 seconds)
[10:33:05] *** Parts: manjaroi3 (~manjaro-i@61.2.53.215) ()
[10:33:59] *** Quits: Atque (~Atque@user/atque) (Quit: ...)
[10:34:15] *** Joins: purple_cthulhu (~rax@2.186.113.13)
[10:38:13] *** Joins: noobaroo (~noobaroo@user/noobaroo)
[10:40:05] *** Joins: mcleuder (~mcleuder@gateway/tor-sasl/mcleuder)
[10:41:06] *** Joins: emerent_ (~quassel@p200300cd5743c3f1ba27ebfffed28a59.dip0.t-ipconnect.de)
[10:41:06] *** Quits: emerent (~quassel@p200300cd5743c3ebba27ebfffed28a59.dip0.t-ipconnect.de) (Killed (erbium.libera.chat (Nickname regained by services)))
[10:41:06] *** emerent_ is now known as emerent
[10:42:21] *** Joins: neo1 (~neo@103.144.161.8)
[10:43:37] *** Joins: chenqisu1 (~chenqisu1@183.217.201.47)
[10:44:50] *** Joins: nuclearg1 (~nucleargr@user/nuclearg1)
[10:45:50] <purple_cthulhu> Hi. Could return type hint of a method implemented by a base class be overridden by its subclasses without reimplementation the method?
[10:47:18] *** Quits: EvilDMP (~textual@django/moderator/EvilDMP) (Ping timeout: 260 seconds)
[10:48:06] *** Joins: slav0nic (slav0nic@python.su)
[10:48:18] *** Joins: iomari891 (~iomari891@102.91.5.94)
[10:48:46] *** Quits: zaquest (~notzaques@5.130.79.72) (Remote host closed the connection)
[10:48:55] *** Quits: abhixec (~abhixec@c-67-169-139-16.hsd1.ca.comcast.net) (Remote host closed the connection)
[10:49:10] *** Quits: nuclearg1 (~nucleargr@user/nuclearg1) (Ping timeout: 250 seconds)
[10:49:54] *** gentooclimax is now known as climax
[10:49:57] *** Joins: zaquest (~notzaques@5.130.79.72)
[10:50:17] *** doctrix_aoei is now known as aoei
[10:50:17] *** Quits: revolve (~u0_a227@cpc100838-bagu15-2-0-cust672.1-3.cable.virginm.net) (Read error: Connection reset by peer)
[10:51:17] *** Quits: KimK (~KimK@2600:8803:740b:4700:4a5b:39ff:fe0b:57d2) (Ping timeout: 240 seconds)
[10:51:35] *** Quits: ghost43 (~ghost43@gateway/tor-sasl/ghost43) (Remote host closed the connection)
[10:51:54] *** Quits: kdc (~kdc@196.211.197.133) (Ping timeout: 252 seconds)
[10:52:18] *** Joins: ghost43 (~ghost43@gateway/tor-sasl/ghost43)
[10:52:36] *** Quits: kurfen (~kurfen@176.119.195.9) (Ping timeout: 240 seconds)
[10:52:51] *** Quits: zerotypic (~zerotypic@165.173.19.147) (Ping timeout: 256 seconds)
[10:54:13] *** Joins: mrwick (~mrwick@user/mrwick)
[10:54:13] *** Joins: p|q (~plq@94.54.154.86)
[10:54:32] *** Quits: the_lanetly_052 (~the_lanet@185.30.90.223) (Ping timeout: 240 seconds)
[10:55:00] *** Joins: EvilDMP (~textual@django/moderator/EvilDMP)
[10:55:00] *** Joins: scoobydoo (~scooby@user/scoobydoo)
[10:55:54] *** Joins: the_lanetly_052 (~the_lanet@185.30.90.223)
[10:57:06] *** Quits: junktext (~junktext@gateway/vpn/pia/junktext) (Read error: Connection reset by peer)
[10:57:24] *** Quits: mon_aaraj (~MonAaraj@user/mon-aaraj/x-4416475) (Ping timeout: 240 seconds)
[10:57:50] *** Quits: foul_owl (~kerry@23.82.193.89) (Ping timeout: 250 seconds)
[10:58:15] *** Joins: junktext (~junktext@gateway/vpn/pia/junktext)
[10:59:13] *** Quits: madduck (~madduck@user/madduck) (Remote host closed the connection)
[11:00:24] *** Joins: otisolsen70 (~otisolsen@xd4ed80b5.cust.hiper.dk)
[11:01:21] *** Quits: otisolsen70 (~otisolsen@xd4ed80b5.cust.hiper.dk) (Remote host closed the connection)
[11:01:45] *** Joins: otisolsen70 (~otisolsen@xd4ed80b5.cust.hiper.dk)
[11:01:55] *** Quits: the_lanetly_052 (~the_lanet@185.30.90.223) (Ping timeout: 256 seconds)
[11:02:01] *** Joins: Guest42 (~b332b756@servidor.wikimedia.es)
[11:02:50] *** Joins: tejr (~tejr@user/tejr)
[11:02:55] *** Joins: nuclearg1 (~nucleargr@user/nuclearg1)
[11:04:50] *** Joins: mon_aaraj (~MonAaraj@user/mon-aaraj/x-4416475)
[11:05:59] *** Quits: Guest42 (~b332b756@servidor.wikimedia.es) (Client Quit)
[11:06:00] *** Joins: Esexe_ (~aa@024-151-038-076.res.spectrum.com)
[11:06:20] *** Joins: madduck (~madduck@user/madduck)
[11:06:42] *** Quits: noobaroo (~noobaroo@user/noobaroo) (Remote host closed the connection)
[11:07:21] *** Quits: nuclearg1 (~nucleargr@user/nuclearg1) (Ping timeout: 256 seconds)
[11:07:27] *** Joins: elwoodpd (~elwoodpd@85.210.161.53)
[11:07:41] *** Joins: c4017w__ (~c4017@209.52.68.8)
[11:08:03] *** climax is now known as gentooclimax
[11:09:32] *** Quits: eyepeetee (~aa@024-151-038-076.res.spectrum.com) (Ping timeout: 240 seconds)
[11:10:36] *** Joins: fedenix (~fedenix@gateway/tor-sasl/fedenix)
[11:10:57] *** Quits: c4017w_ (~c4017@209.52.68.8) (Ping timeout: 240 seconds)
[11:12:07] *** Quits: elwoodpd (~elwoodpd@85.210.161.53) (Ping timeout: 256 seconds)
[11:12:19] *** Joins: stdInOut (~stdInOut@user/stdInOut)
[11:12:39] *** Joins: jay-m126 (~jay-m@154.126.169.74)
[11:12:40] *** Joins: foul_owl (~kerry@23.82.193.87)
[11:12:43] *** Joins: jay-m126_ (~jay-m@154.126.169.74)
[11:12:44] *** Joins: jay-m1261 (~jay-m@154.126.169.74)
[11:12:48] *** Joins: luigibu (~luigi@93.176.153.88)
[11:12:48] *** Quits: Wh0 (~V@43.241.144.151) (Quit: Leaving)
[11:13:02] *** Quits: gentooclimax (~gentoocli@81-64-65-213.rev.numericable.fr) (Quit: Konversation terminated!)
[11:13:41] *** Joins: manti7 (~manti7@176.10.104.94)
[11:14:22] *** Joins: zerotypic (~zerotypic@165.173.19.147)
[11:14:32] *** Quits: jpn (~jpn@user/jpn) (Ping timeout: 240 seconds)
[11:14:34] *** Joins: tev27 (~tev@user/tev27)
[11:16:32] *** Joins: GNUmoon (~GNUmoon@gateway/tor-sasl/gnumoon)
[11:17:39] *** Joins: chele (~chele@user/chele)
[11:19:29] *** Joins: yitz (~yitz@exercism/yitz)
[11:19:33] *** Quits: EvilDMP (~textual@django/moderator/EvilDMP) (Read error: Connection reset by peer)
[11:20:33] *** Joins: LAVBoy (~LAVBoy@85.249.46.8)
[11:22:26] *** Joins: revolve (~u0_a227@cpc100838-bagu15-2-0-cust672.1-3.cable.virginm.net)
[11:23:37] *** Quits: SallyAhaj (~SallyAhaj@user/sallyahaj) (Remote host closed the connection)
[11:23:53] *** Joins: EvilDMP (~textual@django/moderator/EvilDMP)
[11:23:54] *** Joins: palasso (~palasso@user/palasso)
[11:25:09] *** Joins: frost (~frost@user/frost)
[11:26:02] *** Quits: mrwick (~mrwick@user/mrwick) (Ping timeout: 240 seconds)
[11:26:33] *** Quits: EvilDMP (~textual@django/moderator/EvilDMP) (Read error: Connection reset by peer)
[11:27:16] *** Joins: parv (~quass@user/parv)
[11:28:37] *** Joins: velix (~velix@user/velix)
[11:29:07] *** Quits: jazzy (~jaziz@user/jaziz) (Ping timeout: 256 seconds)
[11:29:19] <velix> Anyone in Supervisord? I don't get the sense of process groups. I thought I could restart the whole group when one process dies (since they depend on each other in some matter). THIS actually shows me, that it's way more work: https://stackoverflow.com/questions/38616960/supervisord-restart-group-when-one-process-crashes-is-killed
[11:29:32] *** Quits: purple_cthulhu (~rax@2.186.113.13) (Ping timeout: 240 seconds)
[11:31:29] *** Joins: moog (~moog@98.97.81.132)
[11:31:36] *** Joins: RiFo (~RiFo@user/rifo)
[11:31:47] *** Quits: caveman (~caveman@gateway/tor-sasl/caveman) (Quit: the #end of the abyss)
[11:32:09] *** Joins: zer0bitz (~zer0bitz@dsl-hkibng32-54fbf8-224.dhcp.inet.fi)
[11:32:15] *** Joins: foobaz212 (~foobaz212@152.37.103.80)
[11:32:33] *** Joins: EvilDMP (~textual@django/moderator/EvilDMP)
[11:32:36] *** Quits: frost (~frost@user/frost) (Quit: Client closed)
[11:33:41] *** Joins: grooverman_ (~grooverma@152.250.149.49)
[11:33:43] *** Joins: Forsaken87 (~quassel@ip-037-201-193-116.um10.pools.vodafone-ip.de)
[11:34:33] *** Quits: grooverman (~grooverma@189.110.77.226) (Ping timeout: 256 seconds)
[11:36:11] *** Joins: SallyAhaj (~SallyAhaj@user/sallyahaj)
[11:37:17] *** Quits: esther (~esther@24-155-112-236.dyn.grandenetworks.net) (Ping timeout: 240 seconds)
[11:37:37] *** Quits: foobaz212 (~foobaz212@152.37.103.80) (Ping timeout: 256 seconds)
[11:37:53] *** Joins: caveman (~caveman@gateway/tor-sasl/caveman)
[11:38:55] *** Joins: nuclearg1 (~nucleargr@user/nuclearg1)
[11:39:14] *** Joins: sudorm (~sudorm@lfbn-orl-1-359-116.w90-35.abo.wanadoo.fr)
[11:39:14] *** Quits: rama (~rama@c-24-130-92-222.hsd1.ca.comcast.net) (Read error: Connection reset by peer)
[11:39:29] *** Joins: rama (~rama@c-24-130-92-222.hsd1.ca.comcast.net)
[11:40:02] *** Quits: julius3 (~raffaem@95.74.74.78) (Ping timeout: 240 seconds)
[11:40:10] *** Joins: tobybl (~tobybl@dhcp-199-233.inf.ed.ac.uk)
[11:41:01] *** Quits: baffodoro (~raffaem@95.74.74.78) (Ping timeout: 256 seconds)
[11:41:15] *** Joins: EvilDMP_ (~textual@2001:1c00:30e:1f00:fddf:e7b8:2677:442)
[11:42:21] *** Quits: EvilDMP (~textual@django/moderator/EvilDMP) (Read error: Connection reset by peer)
[11:42:41] *** Quits: SallyAhaj (~SallyAhaj@user/sallyahaj) (Remote host closed the connection)
[11:42:44] *** Quits: sudorm (~sudorm@lfbn-orl-1-359-116.w90-35.abo.wanadoo.fr) (Client Quit)
[11:43:11] *** Joins: shuck (~shuck@user/shuck)
[11:43:32] *** Joins: purple_cthulhu (~rax@2.186.248.47)
[11:43:52] *** Joins: ayustae (Thunderbir@gateway/vpn/protonvpn/ayustae)
[11:44:06] *** Joins: baffodoro (~raffaem@95.74.74.78)
[11:44:14] *** Quits: nuclearg1 (~nucleargr@user/nuclearg1) (Ping timeout: 260 seconds)
[11:44:16] *** Joins: julius3 (~raffaem@95.74.74.78)
[11:44:28] *** Quits: ghost43 (~ghost43@gateway/tor-sasl/ghost43) (Remote host closed the connection)
[11:45:20] *** Joins: ghost43 (~ghost43@gateway/tor-sasl/ghost43)
[11:45:46] *** Joins: vantage (~vantage@ip-193-121-152-141.dsl.scarlet.be)
[11:45:48] *** Joins: kosh (~kosh@user/kosh)
[11:47:02] *** Quits: wyclif (~wyclif@user/wyclif) (Ping timeout: 240 seconds)
[11:48:14] *** Joins: wyclif (~wyclif@user/wyclif)
[11:48:45] *** Quits: adiKt (uid472628@id-472628.tinside.irccloud.com) (Quit: Connection closed for inactivity)
[11:48:58] *** Joins: winterflaw (~winterfla@gateway/tor-sasl/winterflaw)
[11:49:39] *** Quits: cowsay-moo (~cowsay-mo@2a0c:f040:0:4356:1016:71c6:8800:300e) (Ping timeout: 252 seconds)
[11:50:30] <ChrisWarrick> purple_cthulhu: what would the override change? The easiest way would be to just override the method and `return super().whatever(…)` in its one-line body (but perhaps there’s a better way, depending on what you need)
[11:50:32] *** Quits: roxfan (~roxfan@2a02:a03f:a2be:4f00:49af:1e90:ff60:b7d7) (Ping timeout: 240 seconds)
[11:51:01] *** Joins: dimbag (axlrose@shell.xshellz.com)
[11:51:30] *** Joins: shuck_ (~shuck@user/shuck)
[11:51:32] *** Quits: shuck (~shuck@user/shuck) (Read error: Connection reset by peer)
[11:52:52] *** Joins: HaMsTeRs (~Thunderbi@210.3.201.132)
[11:53:18] *** Quits: wyclif (~wyclif@user/wyclif) (Ping timeout: 250 seconds)
[11:53:43] *** Joins: wyclif (~wyclif@user/wyclif)
[11:56:45] *** Joins: Y4knotiS (~YaknotiS@cpc1-cmbg18-2-0-cust87.5-4.cable.virginm.net)
[11:58:11] *** Joins: ano (~ano@user/ano)
[11:58:17] *** Joins: xrogaan (~xrogaan@user/xrogaan)
[11:59:14] *** Joins: rsx (~dummy@ppp-188-174-134-13.dynamic.mnet-online.de)
[11:59:25] *** Quits: EvilDMP_ (~textual@2001:1c00:30e:1f00:fddf:e7b8:2677:442) (Quit: My MacBook has gone to sleep. ZZZzzz…)
[11:59:34] *** Joins: merijn (~merijn@c-001-001-001.client.esciencecenter.eduvpn.nl)
[12:00:29] *** Quits: ghost43 (~ghost43@gateway/tor-sasl/ghost43) (Remote host closed the connection)
[12:01:12] *** Quits: caveman (~caveman@gateway/tor-sasl/caveman) (Remote host closed the connection)
[12:01:16] *** Joins: ghost43 (~ghost43@gateway/tor-sasl/ghost43)
[12:01:40] *** Joins: caveman (~caveman@gateway/tor-sasl/caveman)
[12:02:53] *** Joins: x_kuru_ (~xkuru@user/xkuru)
[12:06:07] *** Joins: arinov (~arinov@213.194.126.155)
[12:06:10] *** Joins: EvilDMP (~textual@django/moderator/EvilDMP)
[12:06:31] *** Quits: x_kuru (xkuru@user/xkuru) (Ping timeout: 256 seconds)
[12:06:44] *** Quits: schumaml (~schumaml@dslb-188-104-183-181.188.104.pools.vodafone-ip.de) (Ping timeout: 250 seconds)
[12:07:24] *** Quits: audiobirb (~audio@user/audio) (Ping timeout: 240 seconds)
[12:08:27] *** Joins: c4017w_ (~c4017@209.52.68.8)
[12:08:29] *** Joins: schumaml (~schumaml@dslb-094-216-173-183.094.216.pools.vodafone-ip.de)
[12:10:28] *** Quits: neo1 (~neo@103.144.161.8) (Quit: WeeChat 3.4)
[12:10:58] *** Quits: sus (zero@user/zeromomentum) (Quit: the lounge - https://webirc.envs.net)
[12:11:31] *** Joins: marcello42 (~mp@p200300dfaf10fe013da0eb2bf7bf6508.dip0.t-ipconnect.de)
[12:11:34] *** Joins: sus (zero@user/zeromomentum)
[12:12:11] *** Quits: c4017w__ (~c4017@209.52.68.8) (Ping timeout: 256 seconds)
[12:15:27] *** Joins: zen_coder (~zen_coder@2a02:8109:a280:2d8d:d91b:267d:4123:397)
[12:16:00] *** Joins: gitesh (uid423739@id-423739.ilkley.irccloud.com)
[12:16:25] <gitesh> Happy Holi guys!
[12:16:56] *** Quits: caveman (~caveman@gateway/tor-sasl/caveman) (Remote host closed the connection)
[12:17:02] *** Quits: dvx (~dvx@5.181.92.64) (Ping timeout: 240 seconds)
[12:17:39] *** Joins: caveman (~caveman@gateway/tor-sasl/caveman)
[12:18:00] *** Quits: Everything (~Everythin@37.115.210.35) (Quit: leaving)
[12:19:16] <parv> Happy Holi-day!
[12:19:25] <HaMsTeRs> python does not installed along on basic OS installation (redhat)
[12:19:49] *** Joins: mrwick (~mrwick@user/mrwick)
[12:20:00] *** Quits: white2 (~mahengrui@user/mahengrui1) (Read error: Connection reset by peer)
[12:20:10] <parv> Readhat (Centos 8) ha[sd] 3.6
[12:20:36] *** Quits: shuck_ (~shuck@user/shuck) (Remote host closed the connection)
[12:20:58] *** Joins: shuck_ (~shuck@user/shuck)
[12:20:59] <HaMsTeRs> i tried which python, nothing return.  I tried yum list installed, nothing returned.  (i'm not a rh guy though)
[12:21:02] *** Joins: white2 (~mahengrui@user/mahengrui1)
[12:21:06] *** Joins: bitkiller (~bitkiller@user/bitkiller)
[12:21:46] *** Joins: sawk (~quassel@151.61.121.68)
[12:22:58] *** Joins: amogorkon (~amogorkon@user/amogorkon)
[12:23:06] *** Quits: novns (~novns@user/novns) (Quit: ZNC - https://znc.in)
[12:23:47] *** Joins: Ergo^ (~ergo@91.238.59.144)
[12:24:33] *** Joins: novns (~novns@user/novns)
[12:25:14] <parv> *ugh* That was a bad typo; a "Reedhat" would have been preferred
[12:25:33] *** Quits: caveman (~caveman@gateway/tor-sasl/caveman) (Remote host closed the connection)
[12:26:02] *** Joins: caveman (~caveman@gateway/tor-sasl/caveman)
[12:26:43] *** Joins: carl--- (~carl-@c-138ee555.02-180-73746f39.bbcust.telenor.se)
[12:27:16] <purple_cthulhu> ChrisWarrick, Thanks for answering. There is a type-agnostic base class that manipulates some str or bytes data and the used type annotation is AnyStr, the base class has two subclasses: The first handles data as str and the other one handles data as bytes. The two subclasses are almost identical except they handle two difference data types (str or bytes). For example, method_foo() -> AnyStr defined in the baseclass and inherited by the
[12:27:16] <purple_cthulhu> subclasses, returns str in StrSubCls and bytes in BytesSubCls. The trick you recommended works (Does it add extra overhead?).
[12:27:17] *** Quits: hams (~hams@user/hams) (Ping timeout: 240 seconds)
[12:27:29] *** Quits: tev27 (~tev@user/tev27) (Ping timeout: 256 seconds)
[12:27:48] *** Quits: caveman (~caveman@gateway/tor-sasl/caveman) (Remote host closed the connection)
[12:28:16] *** Joins: caveman (~caveman@gateway/tor-sasl/caveman)
[12:28:30] *** Joins: EvilDMP_ (~textual@2001:1c00:30e:1f00:f0b8:adf:4487:8e5)
[12:28:35] *** Quits: tusko (~yeurt@user/tusko) (Ping timeout: 240 seconds)
[12:29:26] *** Joins: tusko (~yeurt@user/tusko)
[12:29:32] *** Quits: nickodd (~nickodd@user/nickodd) (Ping timeout: 240 seconds)
[12:30:13] *** Joins: nuclearg1 (~nucleargr@user/nuclearg1)
[12:31:32] *** Quits: EvilDMP (~textual@django/moderator/EvilDMP) (Ping timeout: 240 seconds)
[12:34:02] *** Quits: Enitin (~Enitin@82.180.145.230) (Ping timeout: 240 seconds)
[12:34:42] *** Joins: nishant (~Nishant@49.37.242.151)
[12:34:45] *** Quits: nuclearg1 (~nucleargr@user/nuclearg1) (Ping timeout: 252 seconds)
[12:35:22] *** Quits: baltazar (~baltazar@84-236-97-135.pool.digikabel.hu) (Remote host closed the connection)
[12:35:24] *** dcaro_away is now known as dcaro
[12:36:09] *** Quits: caveman (~caveman@gateway/tor-sasl/caveman) (Quit: btc donations: bc1qt3chy4rqtzjny2h7qt47cy7nmu6th9sr66wa02)
[12:36:24] *** Quits: shuck_ (~shuck@user/shuck) (Ping timeout: 252 seconds)
[12:36:36] *** Quits: schumaml (~schumaml@dslb-094-216-173-183.094.216.pools.vodafone-ip.de) (Ping timeout: 240 seconds)
[12:36:55] *** Joins: Oddity (~Oddity@user/oddity)
[12:38:05] <ChrisWarrick> purple_cthulhu: it adds minimal overhead
[12:38:12] *** Joins: jstein (~jstein@gentoo/developer/jstein)
[12:38:17] <ChrisWarrick> purple_cthulhu: it looks like you want a TypeVar though
[12:38:44] *** Joins: schumaml (~schumaml@dslb-092-074-002-195.092.074.pools.vodafone-ip.de)
[12:39:08] *** Joins: quhar (~quhar@192.162.148.48)
[12:40:18] <ChrisWarrick> purple_cthulhu: https://docs.python.org/3/library/typing.html#generics
[12:40:32] *** Quits: ovnicraft (~ovnicraft@ftth-179-49-44-28.cue.celerity.ec) (Ping timeout: 250 seconds)
[12:40:45] *** Joins: ice9 (~ice9@user/ice9)
[12:41:45] *** Joins: ovnicraft (~ovnicraft@corp-179-49-44-28.uio.puntonet.ec)
[12:42:31] *** Joins: flower_ (~archie@217-123-218-6.cable.dynamic.v4.ziggo.nl)
[12:43:16] *** Quits: diogenese (~diogenese@diogenese.velotech.net) (Quit: Has anybody seen the bridge?)
[12:43:49] *** Joins: diogenese (~diogenese@diogenese.velotech.net)
[12:44:10] *** Quits: schumaml (~schumaml@dslb-092-074-002-195.092.074.pools.vodafone-ip.de) (Ping timeout: 268 seconds)
[12:44:10] *** Joins: Enitin (~Enitin@82.102.22.85)
[12:45:02] *** Quits: dakudos (~dakudos@c-73-229-175-50.hsd1.co.comcast.net) (Ping timeout: 240 seconds)
[12:45:58] *** Joins: schumaml (~schumaml@dslb-092-074-001-041.092.074.pools.vodafone-ip.de)
[12:46:33] *** Joins: kts (~kts@103.73.237.22)
[12:47:52] <mickey> is there an easy way to remove all unused dependencies from pip? something like apt's autoremove
[12:48:12] *** Joins: AquaL1te (~AquaL1te@user/aqual1te)
[12:48:41] *** Joins: dakudos (~dakudos@c-73-229-175-50.hsd1.co.comcast.net)
[12:49:21] *** Joins: nuclearg1 (~nucleargr@user/nuclearg1)
[12:50:03] *** Joins: PJBoy (~PJBoy@user/pjboy)
[12:50:07] *** Joins: shad (~shad@user/shad)
[12:50:41] *** Joins: LucaTM (~LucaTM@user/lucatm)
[12:50:55] <jinsun__> I use pip-sync from pip-tools for that
[12:51:00] *** Joins: ice99 (~ice9@user/ice9)
[12:51:02] *** Quits: revolve (~u0_a227@cpc100838-bagu15-2-0-cust672.1-3.cable.virginm.net) (Read error: Connection reset by peer)
[12:51:04] *** Quits: leduyquang753 (~leduyquan@user/leduyquang753) (Quit: Gotta go, see you guys later.)
[12:51:54] <mickey> jinsun__ i dont see which flags could be helpful for this? fwiw i dont use venvs
[12:52:18] <mickey> just need to clean up some of the packages i havent used in years
[12:52:20] *** Quits: flower_ (~archie@217-123-218-6.cable.dynamic.v4.ziggo.nl) (Ping timeout: 252 seconds)
[12:52:41] *** Joins: baltazar (~baltazar@84-236-97-135.pool.digikabel.hu)
[12:52:50] <mickey> i couldnt probably get away with removing all of them and reinstalling the ones i use
[12:52:55] <mickey> s/couldnt/could
[12:53:04] <jinsun__> just run pip-sync, it removes all the stuff that is not there in requirements.txt, generate requirements.txt using pip-compile
[12:53:49] <jinsun__> but I think both need venv, not sure if they'll work for the "global" python, probably not
[12:53:59] *** Quits: nuclearg1 (~nucleargr@user/nuclearg1) (Ping timeout: 252 seconds)
[12:54:04] <mickey> yeah pip-sync just mass-removes everything. i guess that works.
[12:54:20] *** Joins: Commaster (~Commaster@dslb-002-204-205-169.002.204.pools.vodafone-ip.de)
[12:54:28] *** Quits: ghost43 (~ghost43@gateway/tor-sasl/ghost43) (Remote host closed the connection)
[12:54:29] *** Quits: ice9 (~ice9@user/ice9) (Read error: Connection reset by peer)
[12:55:06] *** Quits: white2 (~mahengrui@user/mahengrui1) (Ping timeout: 252 seconds)
[12:55:08] <jinsun__> oh does it? I thought it needed a requirements.txt to compare your venv with
[12:55:14] *** Joins: ghost43 (~ghost43@gateway/tor-sasl/ghost43)
[12:55:29] *** Joins: ice9 (~ice9@user/ice9)
[12:55:52] <jinsun__> if you wanted to keep some packages and remove the rest then you have to keep a requirements.txt in the current working directory
[12:56:17] *** Quits: ice99 (~ice9@user/ice9) (Ping timeout: 240 seconds)
[12:56:28] *** Quits: ghost43 (~ghost43@gateway/tor-sasl/ghost43) (Remote host closed the connection)
[12:57:16] *** Joins: ghost43 (~ghost43@gateway/tor-sasl/ghost43)
[12:58:32] *** Joins: white2 (~mahengrui@user/mahengrui1)
[12:59:27] *** Quits: kts (~kts@103.73.237.22) (Quit: Konversation terminated!)
[12:59:30] <mickey> btw do you know of any useful tool that would crawl a directory and generate a requirements.txt based on all the python files in that directory? i thought that's what pip-compile does but i was wrong apparently
[13:00:47] *** Joins: driib2 (~driib@185.65.135.252)
[13:01:23] *** Joins: rpkilby (~rpkilby@c-24-20-208-106.hsd1.or.comcast.net)
[13:01:39] <jinsun__> no pip-compile just pins the versions of the stuff in your install_requires and makes a requirements.txt with the pinned versions
[13:01:52] *** Quits: rpkilby (~rpkilby@c-24-20-208-106.hsd1.or.comcast.net) (Remote host closed the connection)
[13:02:51] <jinsun__> it is hard to do the install_requires part automatically, the only way is to grep for imports
[13:02:55] *** Joins: MajorBiscuit (~MajorBisc@wlan-145-94-218-48.wlan.tudelft.nl)
[13:03:58] <jinsun__> then remember which pacakage you installed to get that import for each one of them
[13:04:18] *** Joins: darksun (~darksun@user/darksun)
[13:05:03] <jinsun__> there is pipreqs that tries to do this automatically https://github.com/bndr/pipreqs
[13:05:46] *** Joins: dvx (~dvx@5.181.92.64)
[13:06:37] <jinsun__> the grepping of imports part is easy to do right, but then finding out which package provides the import is hard
[13:06:52] <jinsun__> and the way pipreqs does that is by maintaining a huge mapping of import name -> pypi name https://github.com/bndr/pipreqs/blob/master/pipreqs/mapping
[13:07:09] <purple_cthulhu> ChrisWarrick, Thank you very much! As you recommended, the solution is to use Generic type annotation. BaseCls(Generic[T]), method_foo() -> T, StrSubCls(BaseCls[str]), BytesSubCls(BaseCls[bytes])
[13:07:56] <jinsun__> which may not cover every package and the same import name can map to multiple pypi names, so they have to choose, and it cannot do it right in general for all cases
[13:07:59] <fakenullie> too bad python doesn't have member types
[13:09:08] *** Joins: c4017w__ (~c4017@209.52.68.8)
[13:10:57] *** Quits: chenqisu1 (~chenqisu1@183.217.201.47) (Quit: Leaving)
[13:11:42] *** Joins: kdc (~kdc@196.211.197.130)
[13:12:26] *** Quits: c4017w_ (~c4017@209.52.68.8) (Ping timeout: 245 seconds)
[13:12:42] *** Quits: spenat (~spenat@c-1125235c.012-6-62726f1.bbcust.telenor.se) (Ping timeout: 272 seconds)
[13:13:29] <mickey> jinsun__ pipreqs seems abandoned
[13:13:31] *** Joins: revolve (~u0_a227@cpc100838-bagu15-2-0-cust672.1-3.cable.virginm.net)
[13:13:41] *** Joins: plastico (~plastico@neomutt/plastico)
[13:15:30] <jinsun__> oh okay well I was warning against that anyway, it was a bit "unsafe" to use even if it was not abandoned
[13:16:15] *** Joins: kuter (~kuter@public-gprs523036.centertel.pl)
[13:16:22] <jinsun__> so you have the usual way that everyone does, grep for imports and remember the package name and write down in your install_requires
[13:17:41] *** Joins: blindguard (~blindguar@2a02:908:1864:c200::ef3c)
[13:22:36] *** Quits: Belxjander (~Belxjande@p1575007-ipoe.ipoe.ocn.ne.jp) (Ping timeout: 240 seconds)
[13:23:21] *** Joins: nuclearg1 (~nucleargr@user/nuclearg1)
[13:23:42] *** Joins: Belxjander (~Belxjande@p1575007-ipoe.ipoe.ocn.ne.jp)
[13:25:37] *** Quits: schumaml (~schumaml@dslb-092-074-001-041.092.074.pools.vodafone-ip.de) (Ping timeout: 256 seconds)
[13:29:11] *** Joins: paul424 (~tom@ip-5-172-234-57.multi.internet.cyfrowypolsat.pl)
[13:30:11] *** Quits: zen_coder (~zen_coder@2a02:8109:a280:2d8d:d91b:267d:4123:397) (Quit: Konversation terminated!)
[13:30:16] *** Quits: blindguard (~blindguar@2a02:908:1864:c200::ef3c) (Quit: Konversation terminated!)
[13:30:30] *** Joins: weibullguy (~weibullgu@024-236-222-047.res.spectrum.com)
[13:30:41] <fakenullie> I think the usual way is to create a new venv and add packages until all tests pass
[13:30:48] *** Joins: schumaml (~schumaml@dslb-094-216-172-208.094.216.pools.vodafone-ip.de)
[13:30:56] <fakenullie> or at least imports don't crash anymore
[13:31:49] *** Joins: mav`rik (~unknown@ec2-54-171-126-99.eu-west-1.compute.amazonaws.com)
[13:32:02] *** Quits: mrwick (~mrwick@user/mrwick) (Ping timeout: 240 seconds)
[13:33:26] *** Joins: foobaz212 (~foobaz212@152.37.103.80)
[13:33:47] *** Quits: nuclearg1 (~nucleargr@user/nuclearg1) (Ping timeout: 256 seconds)
[13:34:04] *** Joins: mrwick (~mrwick@user/mrwick)
[13:34:38] *** Joins: jpn (~jpn@user/jpn)
[13:35:04] *** Joins: audiobirb (~audio@user/audio)
[13:35:14] *** Quits: Enitin (~Enitin@82.102.22.85) (Ping timeout: 252 seconds)
[13:35:39] *** Joins: Enitin (~Enitin@82.102.22.86)
[13:36:50] *** Joins: llanhmod (~Thunderbi@user/domhnall/x-2887755)
[13:37:32] *** Quits: HaMsTeRs (~Thunderbi@210.3.201.132) (Quit: HaMsTeRs)
[13:37:33] *** Joins: zAfio (~dev@213.133.91.246)
[13:37:40] *** Quits: llanhmod (~Thunderbi@user/domhnall/x-2887755) (Client Quit)
[13:38:19] *** Quits: foobaz212 (~foobaz212@152.37.103.80) (Ping timeout: 256 seconds)
[13:41:22] *** Joins: llanhmod_ (~personnel@user/domhnall/x-2887755)
[13:42:11] *** Quits: llanhmod_ (~personnel@user/domhnall/x-2887755) (Killed (NickServ (GHOST command used by llanhmod!~Thunderbi@user/domhnall/x-2887755)))
[13:42:22] <graingert[m]> weirdly it always seems to be a JUMP_ABSOLUTE in the f.last_i
[13:42:25] *** Joins: esther (~esther@24-155-112-236.dyn.grandenetworks.net)
[13:42:27] <graingert[m]> s/f/frame/, s/last_i/f_lasti/
[13:42:36] *** Joins: ubert1 (~Thunderbi@2a02:8109:9880:303c:e5eb:8f18:bf2f:b46e)
[13:42:40] <graingert[m]> oh that was supposed to be a reply :/
[13:43:32] *** Quits: drbeco (~beco@user/beco) (Ping timeout: 240 seconds)
[13:44:11] *** Quits: white2 (~mahengrui@user/mahengrui1) (Read error: Connection reset by peer)
[13:44:13] <zAfio> # I have a list with numbers [2, 4, 6, 7, 9, 10, 11, 12, 13, 22, 23, 24, 25, 25, 26, 27, 28] and I would like to group them in such way [6, 7] [9, 10, 11, 12, 13] [22, 23, 24, 25, 26, 27, 28] ]
[13:44:33] *** Quits: Enitin (~Enitin@82.102.22.86) (Ping timeout: 256 seconds)
[13:44:42] *** Joins: white2 (~mahengrui@user/mahengrui1)
[13:44:45] <zAfio> can someone explain me how is this possible>
[13:45:18] *** Joins: ejjfunky (~ejjfunky@125.164.20.185)
[13:45:55] <The-Compiler> zAfio: based on what criteria are they grouped that way?
[13:46:18] <The-Compiler> zAfio: and what happened to 2 and 4?
[13:46:42] *** Quits: kungp (~kungp@h-46-59-2-200.A230.priv.bahnhof.se) (Quit: Leaving)
[13:46:53] *** Joins: roxfan (~roxfan@2a02:a03f:a2be:4f00:49af:1e90:ff60:b7d7)
[13:47:28] *** Quits: ejjfunky (~ejjfunky@125.164.20.185) (Client Quit)
[13:48:10] *** Joins: Enitin (~Enitin@82.102.22.85)
[13:49:04] <zAfio> the are grouped based on the uninterrupted sequence
[13:49:16] <zAfio> 2 and 4 can't group because 3 is missing
[13:51:31] *** Quits: ghost43 (~ghost43@gateway/tor-sasl/ghost43) (Remote host closed the connection)
[13:51:55] *** Joins: ghost43 (~ghost43@gateway/tor-sasl/ghost43)
[13:54:22] *** Joins: Xano (~Xano@host86-157-207-90.range86-157.btcentralplus.com)
[13:54:41] <graingert[m]> nedbat: f->f_lasti seems to be set *before* the instruction is attempted....
[13:56:48] *** Joins: frost (~frost@user/frost)
[13:58:03] *** Quits: kdc (~kdc@196.211.197.130) (Quit: Leaving)
[13:58:11] *** Joins: Pi-sistance (~Pi-sistan@cpc94040-newt37-2-0-cust284.19-3.cable.virginm.net)
[13:58:22] *** Joins: rendar (~rendar@user/rendar)
[13:58:54] <Pi-sistance> still I dont understand what is meant by having 2 ouput arguments in a function?
[13:59:01] *** Joins: foobaz212 (~foobaz212@152.37.103.80)
[13:59:19] <Pi-sistance> I returned a tuple with two thigns, apparently that is not two output arguments
[13:59:29] *** Quits: ghost43 (~ghost43@gateway/tor-sasl/ghost43) (Remote host closed the connection)
[13:59:49] *** Quits: Enitin (~Enitin@82.102.22.85) (Ping timeout: 240 seconds)
[13:59:55] *** Joins: ghost43 (~ghost43@gateway/tor-sasl/ghost43)
[14:00:55] *** Joins: Enitin (~Enitin@82.180.145.223)
[14:01:17] <graingert[m]> Pi-sistance: well they're not arguments!
[14:01:24] <graingert[m]> and it's one tuple
[14:02:20] <graingert[m]> it's commit to have output arguments when dealing with .c or network code - eg socket.socket.recv_into
[14:02:25] <graingert[m]> it takes a buffer to write into
[14:03:28] <Pi-sistance> i dont understand what it eve means. input argument , sure
[14:03:51] <Pi-sistance> wtf is an output argument, I couldnt think of anything other than a tuple with 2 values
[14:03:53] *** Joins: nuclearg1 (~nucleargr@user/nuclearg1)
[14:03:58] *** Joins: jmiehe (~Thunderbi@user/jmiehe)
[14:04:09] <Pi-sistance> am I supposed to return twice on one function?
[14:04:16] <Pi-sistance> becasue I cant?
[14:04:30] *** Joins: ice99 (~ice9@user/ice9)
[14:04:44] <Pi-sistance> googling gives no information on "Output argument"
[14:05:04] <jinsun_> you can't do that, python doesn't really have out arguments
[14:05:14] *** Joins: pulsar12 (~quassel@a79-169-140-39.cpe.netcabo.pt)
[14:05:33] <jinsun_> where did you see that phrase? and was that about python?
[14:05:53] <Pi-sistance> its the only marks i missed on my coursework, teacher asked me to do it
[14:06:05] *** Quits: kaiseisei (~Thunderbi@user/kaiseisei) (Ping timeout: 256 seconds)
[14:06:07] <Pi-sistance> i better email him
[14:06:11] *** Quits: frost (~frost@user/frost) (Quit: Client closed)
[14:06:23] <jinsun_> oh bad terminology by teacher
[14:06:34] <jinsun_> better to ask them on email them yeah
[14:06:37] *** Quits: ice9 (~ice9@user/ice9) (Ping timeout: 240 seconds)
[14:07:32] *** Quits: Enitin (~Enitin@82.180.145.223) (Ping timeout: 240 seconds)
[14:08:47] *** Quits: nuclearg1 (~nucleargr@user/nuclearg1) (Ping timeout: 252 seconds)
[14:08:58] <bjs> zAfio: you can loop over the numbers remembering the previous one in a variable  (or use something like https://docs.python.org/3/library/itertools.html#itertools.pairwise to do it for you) and if the current == previous + 1, then add it to the list and once it's not true anymore, add that list of consecutive numbers to a bigger list
[14:09:02] *** Quits: gurkenglas (~gurkengla@dslb-178-012-018-212.178.012.pools.vodafone-ip.de) (Ping timeout: 240 seconds)
[14:09:49] *** Quits: Oddity (~Oddity@user/oddity) (Ping timeout: 256 seconds)
[14:09:51] *** Joins: c4017w_ (~c4017@209.52.68.8)
[14:10:24] *** Joins: Seto_Kaiba (~hunterkll@2001:470:8b06:100:2958:1194:aedf:1fa3)
[14:10:27] *** Quits: hunterkll (~hunterkll@2001:470:8b06:100:2958:1194:aedf:1fa3) (Killed (NickServ (GHOST command used by Seto_Kaiba)))
[14:10:31] *** Seto_Kaiba is now known as Hunterkll
[14:11:58] *** Joins: leitz (~LeamHall@072-182-158-027.res.spectrum.com)
[14:12:25] <mav`rik> pairwise is glorious
[14:13:02] *** Quits: c4017w__ (~c4017@209.52.68.8) (Ping timeout: 240 seconds)
[14:16:56] *** Quits: revolve (~u0_a227@cpc100838-bagu15-2-0-cust672.1-3.cable.virginm.net) (Read error: Connection reset by peer)
[14:19:11] *** Joins: Henry_ (~mahengrui@user/mahengrui1)
[14:19:16] *** Joins: ice9 (~ice9@user/ice9)
[14:19:25] *** Quits: moose (~moose@user/moose) (Read error: Connection reset by peer)
[14:20:43] *** Quits: Malin (lounge@pirate.pt) (Read error: Connection reset by peer)
[14:21:02] *** Quits: ice99 (~ice9@user/ice9) (Ping timeout: 240 seconds)
[14:21:52] *** Joins: revolve (~u0_a227@cpc100838-bagu15-2-0-cust672.1-3.cable.virginm.net)
[14:22:32] *** Quits: white2 (~mahengrui@user/mahengrui1) (Ping timeout: 240 seconds)
[14:24:33] *** Quits: powftw (uid448161@id-448161.lymington.irccloud.com) (Quit: Connection closed for inactivity)
[14:26:32] *** Joins: blackout69 (~blackout6@37.183.198.248)
[14:27:00] *** Quits: schumaml (~schumaml@dslb-094-216-172-208.094.216.pools.vodafone-ip.de) (Ping timeout: 240 seconds)
[14:27:02] *** Quits: Masklin__Gurder (~joel@bioinf-serv.biol.lu.se) (Ping timeout: 240 seconds)
[14:27:04] *** Joins: j0hn_mc_clane (~j0hn_mc_c@ptr-fqhhm12iua58a0gd4hj.18120a2.ip6.access.telenet.be)
[14:28:55] *** Joins: Malin (lounge@pirate.pt)
[14:29:07] *** xcombelle1 is now known as xcombelle
[14:29:28] *** Joins: schumaml (~schumaml@dslb-188-104-174-185.188.104.pools.vodafone-ip.de)
[14:29:44] *** Quits: Vision (~Vision@023-084-128-214.res.spectrum.com) (Ping timeout: 250 seconds)
[14:29:46] *** Joins: lyr (~lyr@user/lyr)
[14:31:55] *** Quits: stdInOut (~stdInOut@user/stdInOut) (Ping timeout: 256 seconds)
[14:32:25] *** Quits: Strom (strom@fedora/strom) ()
[14:33:58] *** Joins: Strom (strom@fedora/strom)
[14:34:30] *** Quits: thurs (~thurs@ip68-225-209-147.ph.ph.cox.net) (Quit: The Lounge - https://thelounge.chat)
[14:34:32] *** Joins: ncwbqcfe (~rvgzuuqp@gateway/tor-sasl/rvgzuuqp)
[14:38:06] *** Joins: PaterTemporalis (~woooopsie@bl21-200-69.dsl.telepac.pt)
[14:38:09] *** Quits: merijn (~merijn@c-001-001-001.client.esciencecenter.eduvpn.nl) (Ping timeout: 256 seconds)
[14:38:23] *** Quits: mrwick (~mrwick@user/mrwick) (Ping timeout: 256 seconds)
[14:38:45] *** Joins: dante-as (~dante-as@188.25.78.122)
[14:38:58] *** Joins: merijn (~merijn@c-001-001-001.client.esciencecenter.eduvpn.nl)
[14:39:09] <dante-as> Hi guys, how can I check if multiple lines are already present in a configuration file? Which is the best way of doing that?
[14:39:42] *** Quits: pythonoob (~thelounge@om126194014222.10.openmobile.ne.jp) (Ping timeout: 250 seconds)
[14:40:02] *** Joins: stdInOut (~stdInOut@user/stdInOut)
[14:40:13] *** Joins: ghost43_ (~ghost43@gateway/tor-sasl/ghost43)
[14:40:28] *** Quits: paul424 (~tom@ip-5-172-234-57.multi.internet.cyfrowypolsat.pl) (Remote host closed the connection)
[14:40:28] *** Quits: ghost43_ (~ghost43@gateway/tor-sasl/ghost43) (Remote host closed the connection)
[14:40:55] *** Quits: ghost43 (~ghost43@gateway/tor-sasl/ghost43) (Remote host closed the connection)
[14:41:04] *** Joins: ghost43_ (~ghost43@gateway/tor-sasl/ghost43)
[14:41:37] *** Quits: ice9 (~ice9@user/ice9) (Ping timeout: 240 seconds)
[14:41:52] *** Quits: Xano (~Xano@host86-157-207-90.range86-157.btcentralplus.com) (Read error: No route to host)
[14:41:54] *** Joins: mIk3_08 (~Thunderbi@user/mik3-08/x-2852566)
[14:42:08] *** Joins: Xano (~Xano@2a00:23c4:4204:700:b4db:9f9c:efc0:58f5)
[14:42:18] *** Quits: l4yer (~l4yer@user/l4yer) (Ping timeout: 250 seconds)
[14:42:30] <pulsar12> dante-as: you want to just count the number of lines in a file?
[14:42:54] *** Quits: p|q (~plq@94.54.154.86) (Ping timeout: 252 seconds)
[14:43:30] *** Joins: pythonoob (~thelounge@om126253164150.31.openmobile.ne.jp)
[14:43:34] *** Quits: ivii (~ivan@user/ivii) (Remote host closed the connection)
[14:43:43] *** Quits: kuter (~kuter@public-gprs523036.centertel.pl) (Read error: Connection reset by peer)
[14:43:43] *** Quits: revolve (~u0_a227@cpc100838-bagu15-2-0-cust672.1-3.cable.virginm.net) (Read error: Connection reset by peer)
[14:45:03] *** Joins: Payam (~Payam@c83-250-236-236.bredband.tele2.se)
[14:45:46] *** Quits: wyclif (~wyclif@user/wyclif) (Ping timeout: 250 seconds)
[14:46:57] *** Joins: drogas (~drogas@jump2.jet.uk)
[14:47:00] *** Joins: jpn_ (~jpn@user/jpn)
[14:47:16] *** Joins: wyclif (~wyclif@user/wyclif)
[14:47:37] *** Quits: milesrout (ce261f06ff@2604:bf00:561:2000::257) (Remote host closed the connection)
[14:47:47] *** Joins: milesrout (ce261f06ff@2604:bf00:561:2000::257)
[14:47:59] *** Joins: withered_wolf (~withered_@1437135-v103.1561-static.stchilaa.metronetinc.net)
[14:48:24] *** Joins: withered_dragon (~withered_@1437135-v103.1561-static.stchilaa.metronetinc.net)
[14:48:39] *** Joins: borisrunak (~borisruna@29.42.167.195.static.otenet.gr)
[14:48:52] *** Joins: revolve (~u0_a227@cpc100838-bagu15-2-0-cust672.1-3.cable.virginm.net)
[14:49:24] *** Quits: jpn (~jpn@user/jpn) (Ping timeout: 240 seconds)
[14:50:32] *** Joins: mrwick (~mrwick@user/mrwick)
[14:51:10] *** Joins: Masklin__Gurder (~joel@bioinf-serv.biol.lu.se)
[14:52:04] *** Joins: Enitin (~Enitin@82.180.145.228)
[14:52:28] *** Joins: wakeup (~wakeup@user/wakeup)
[14:53:34] *** Quits: merijn (~merijn@c-001-001-001.client.esciencecenter.eduvpn.nl) (Ping timeout: 250 seconds)
[14:53:49] *** Joins: Guts71 (~Guts71@41.109.90.10)
[14:54:00] *** Quits: x_kuru_ (~xkuru@user/xkuru) (Ping timeout: 250 seconds)
[14:54:06] *** Joins: FFY00 (~FFY00@archlinux/trusteduser/ffy00)
[14:54:21] *** Joins: xkuru (~xkuru@user/xkuru)
[14:54:54] *** Joins: Xano_ (~Xano@2a00:23c4:4204:700:c6c:c89a:feb2:1fe2)
[14:55:00] *** Joins: vats (~vats@103.16.30.139)
[14:56:05] *** Joins: merijn (~merijn@c-001-001-001.client.esciencecenter.eduvpn.nl)
[14:58:00] <dante-as> @pulsar12: no. I would like to know if the configuration is complete with all parameters set correctly
[14:58:02] <dante-as> Like a cronjob
[14:58:51] *** Quits: Xano (~Xano@2a00:23c4:4204:700:b4db:9f9c:efc0:58f5) (Ping timeout: 252 seconds)
[14:59:39] <shad> dante-as: might be over kill, but have a look at ansible
[14:59:51] <shad> If the goal is Linux configuration automation, that is the stuff
[15:00:02] *** Quits: arinov (~arinov@213.194.126.155) (Ping timeout: 240 seconds)
[15:00:19] *** Quits: Merinorus (~Merinorus@lfbn-mar-1-707-11.w90-118.abo.wanadoo.fr) (Read error: Connection reset by peer)
[15:00:42] *** Joins: Merinorus (~Merinorus@lfbn-mar-1-707-11.w90-118.abo.wanadoo.fr)
[15:02:34] *** Quits: xkuru (~xkuru@user/xkuru) (Ping timeout: 260 seconds)
[15:02:43] *** Joins: ice9 (~ice9@user/ice9)
[15:02:45] *** Quits: foobaz212 (~foobaz212@152.37.103.80) (Ping timeout: 256 seconds)
[15:02:55] *** Parts: blackout69 (~blackout6@37.183.198.248) ()
[15:03:02] *** Joins: kurfen (~kurfen@176.119.195.8)
[15:04:19] *** Joins: Oddity (~Oddity@user/oddity)
[15:04:26] *** Quits: vats (~vats@103.16.30.139) (Ping timeout: 260 seconds)
[15:05:32] *** Quits: cdown (~cdown@188.214.11.14) (Ping timeout: 240 seconds)
[15:05:48] *** Quits: merijn (~merijn@c-001-001-001.client.esciencecenter.eduvpn.nl) (Ping timeout: 240 seconds)
[15:06:04] <newdimension> I'm compiling a list of keyword that I want to match and then creating a regex expression like so https://dpaste.org/SaWw.  I'm wondering if "|".join(regex_list) would not apply OR only on the second word of a two-word keyword
[15:07:24] *** Joins: merijn (~merijn@c-001-001-001.client.esciencecenter.eduvpn.nl)
[15:07:32] *** Joins: han-solo (~han-solo@user/han-solo)
[15:08:16] <bjs> newdimension: "a b|c d" matches "a b" and "c d" but not "a c" or "b d".  But you can always add some non-capturing groups to group things
[15:08:17] <fakenullie> newdimension: or is applied to everything between |
[15:09:16] *** Joins: flower_ (~archie@217-123-218-6.cable.dynamic.v4.ziggo.nl)
[15:09:48] <Guts71> when you meet a person who has created a website, what is the first question you asked him ?
[15:10:26] <bjs> Guts71: that's an odd question
[15:10:37] *** Joins: c4017w__ (~c4017@209.52.68.8)
[15:10:50] <Guts71> bjs this question is intended for professional web programmers
[15:11:13] <Guts71> =D
[15:11:32] *** Joins: eyepeetee (~aa@024-151-038-076.res.spectrum.com)
[15:11:33] *** Quits: pulsar12 (~quassel@a79-169-140-39.cpe.netcabo.pt) (Quit: https://quassel-irc.org - Chat comfortably. Anywhere.)
[15:11:37] <newdimension> bjs, fakenullie: I see. In that case any idea why this excerpt from the resulting regex does not match "C++ Developer," https://dpaste.org/uVT6
[15:12:30] <Guts71> bjs Have you ever created a website once?
[15:12:40] <marduk> Are you asking a person interviewing for a job or is it just some random person on the street?
[15:12:49] <bjs> Guts71: yes, and this is a really weird question.
[15:13:24] *** Quits: Oddity (~Oddity@user/oddity) (Ping timeout: 240 seconds)
[15:14:03] <Guts71> marduk it's just a random person, but the one who created a website of course
[15:14:05] *** Quits: c4017w_ (~c4017@209.52.68.8) (Ping timeout: 256 seconds)
[15:14:15] *** Quits: Xano_ (~Xano@2a00:23c4:4204:700:c6c:c89a:feb2:1fe2) (Ping timeout: 252 seconds)
[15:14:48] <nedbat> Guts71: I would ask them, "how are you?", like I do for any other person.
[15:14:50] <fakenullie> newdimension: I guess it's because there's now \b between '+' and ' '
[15:14:52] <Guts71> bjs fear not this is a question that will not bite you :')
[15:15:14] <Guts71> nedbat :')
[15:15:15] <fakenullie> newdimension: you should remove '\b' from your regexes
[15:15:18] <Payam> Just having hard time undrestanding this singletone objects in python
[15:15:24] <Payam> I don't know why they are needed
[15:15:29] <nedbat> Payam: which singletons?
[15:15:33] <marduk> Guts71: well if it was a random person I probably say something like "what's a good restaurant around here"... but... I can't think of any question in particular for a person who happened to create a website
[15:15:33] *** Quits: Esexe_ (~aa@024-151-038-076.res.spectrum.com) (Ping timeout: 256 seconds)
[15:15:42] <Payam> nedbat, how to create singletones in Python
[15:15:48] <fakenullie> newdimension: well, you still need them in some places
[15:16:02] <nedbat> Payam: why do you need to create a singleton? Can you tell us more?
[15:16:07] *** Quits: ackyshake (~ackyshake@user/ackyshake) (Ping timeout: 256 seconds)
[15:16:18] <nedbat> Payam: is there an article you are reading about it?
[15:16:22] *** Quits: wakeup (~wakeup@user/wakeup) (Quit: Client closed)
[15:17:01] *** Joins: arinov (~arinov@213.194.126.155)
[15:17:03] <bjs> newdimension: to expand on fakenullie's point, \b is defined as a boundary between \w and \W  which for C++ is between the C and the +
[15:17:12] <bjs> not after the + and before the whitespace
[15:17:14] <Payam> nedbat, For instance I want all classes to use the same client in httpx. and I went thinking about it then I came across this website. https://refactoring.guru/design-patterns/singleton/python/example
[15:17:24] <Guts71> marduk bjs for me my question would be, how long did it take you to create your website? it's quite simple
[15:18:02] <mav`rik> Guts71: Is that helpful though? Different sites have differing levels of complexity, number of pages, functionality in the back-office section, etc.
[15:18:08] <bjs> Guts71: well that's certainly not a simple question, "a website" is a hideously vague term. It would depend on how big the website is, what's on it, how complicated it is, how many visitors it gets etc
[15:18:24] <Guts71> in programming it's always a matter of time thats it evry time
[15:18:36] <nedbat> Payam: in my opinion this is a bad pattern. if you want to have just one of something, just make one, and share it around.
[15:19:05] <Payam> Let's see how I will do.
[15:19:09] <nedbat> Payam: it's bad to write a class that lies to its callers
[15:19:13] <Pi-sistance> I dont understand what I actually added here .. https://bpa.st/BWPQ
[15:19:17] <newdimension> fakenullie, bjs: I see, thing is the \b is appropriate in all the other cases. It's just that in c++ is the exception since it's not really a word
[15:19:20] <bjs> Guts71: and when you consider it "finished",  like "how long did it take them to make google.com" well, maybe a couple of weeks back in the 1990s or maybe after 3 decades it's still not finished?
[15:19:23] *** Joins: pulsar12 (~quassel@a79-169-140-39.cpe.netcabo.pt)
[15:19:25] <marduk> Also "website" is usually a frontend to some larger system ("system" usually being more intersting than "website")
[15:19:26] <mav`rik> Payam: Why not pass the classes the client on instantiation, rather than having them rely on some pseudo-global?
[15:19:46] <graingert[m]> has anyone ever used Tools/gdb/libpython.py ? it looks like this wasn't correctly fixed for 3.10 https://github.com/python/cpython/blame/main/Tools/gdb/libpython.py#L661-L663
[15:19:50] <graingert[m]> and in fact wasn't updated for py3 at all
[15:19:57] *** Joins: Wh0 (~V@43.241.144.151)
[15:20:09] <bjs> newdimension: right, regex things in "C++ Developer" the words are ["C", "++ ", "Developer"]
[15:20:12] <bjs> thinks*
[15:20:26] <graingert[m]> if addr_incr is an int then `ord(addr_incr)` fails
[15:20:28] <spaceone> is there a function which combines PyTuple_Check() and PyList_Check() ? or is the best practice to just PyList_Check() && PyList_AsTuple?
[15:20:39] <Guts71> on my part a website is constantly changing
[15:20:43] *** Joins: Deneb (~johnch@128.82.159.143.dyn.plus.net)
[15:20:43] *** Joins: drbeco (~beco@user/beco)
[15:21:57] <newdimension> bjs: A fix would be to just have it as "\bC\b.*\bDeveloper\b" which would work for my use-case. I'm wondering if there is a better approach
[15:22:25] *** Joins: Seto_Kaiba (~hunterkll@2001:470:8b06:100:2958:1194:aedf:1fa3)
[15:22:35] *** Quits: dante-as (~dante-as@188.25.78.122) (Ping timeout: 256 seconds)
[15:22:37] <bjs> newdimension: do you really want anything in between or just whitespace?
[15:22:45] <bjs> newdimension: you could just write \bC\+\+ Developer\b
[15:23:00] <bjs> or maybe with "\s+" instead of " "
[15:24:11] *** Quits: somlis (~somlis@user/somlis) (Quit: WeeChat 3.4)
[15:24:18] <newdimension> bjs: I'm not writing the regex for each keyword. I have a long list of items e.g. foo = ["Accountant", "C++ Developer", "Sales Director"] that gets compiled to one regex via https://dpaste.org/SaWw The reason I want anything in between so that Sales Director also matches Sales Global Director for instance
[15:24:32] *** Quits: schumaml (~schumaml@dslb-188-104-174-185.188.104.pools.vodafone-ip.de) (Ping timeout: 240 seconds)
[15:25:06] *** Joins: Xano (~Xano@host86-157-207-90.range86-157.btcentralplus.com)
[15:25:45] *** Quits: Hunterkll (~hunterkll@2001:470:8b06:100:2958:1194:aedf:1fa3) (Ping timeout: 256 seconds)
[15:26:34] *** Quits: bitdex (~bitdex@gateway/tor-sasl/bitdex) (Quit: = "")
[15:27:04] *** Joins: schumaml (~schumaml@dslb-178-002-185-254.178.002.pools.vodafone-ip.de)
[15:27:07] *** Joins: kostkon_ (~androirc@2.142.66.94.static.otenet.gr)
[15:27:20] *** Joins: tWqaq (~tWqaq@240e:389:5d41:5900:6a7:f59b:807a:4d84)
[15:27:33] <bjs> newdimension: well you are writing the regex for each keyword, just with code instead of by hand. the \b's weren't in there originally, you put them there
[15:28:01] <bjs> the issue is that \b doesn't mean "end of keyword" as your 'keywords' might have symbols that don't normally appear in words
[15:28:14] *** Quits: merijn (~merijn@c-001-001-001.client.esciencecenter.eduvpn.nl) (Ping timeout: 250 seconds)
[15:28:30] <bjs> and what you *really* mean is there is a whitespace character or end-of-string
[15:28:44] *** Joins: pdc (~raffaem@95.74.74.78)
[15:28:52] *** Joins: tomeaton17 (~tomeaton1@92.234.2.175)
[15:30:16] *** Joins: merijn (~merijn@c-001-001-001.client.esciencecenter.eduvpn.nl)
[15:30:25] *** Joins: zeden (~zeden@user/zeden)
[15:30:45] <newdimension> bjs: whitespace or another word in case it's a longer variation of the same title
[15:31:04] <bjs> newdimension: okay but "another word" means there's a space between them?
[15:31:11] *** Joins: nuclearg1 (~nucleargr@user/nuclearg1)
[15:31:47] *** Quits: davidlowryduda (~davidlowr@73.61.8.157) (Quit: WeeChat 3.0)
[15:32:22] *** Quits: RiFo (~RiFo@user/rifo) (Quit: ... and thanks for all the fish.)
[15:32:31] <Pi-sistance> I dont really understand what is added when I put for in in range in a list index o.O
[15:32:38] <Pi-sistance> for i* ffs
[15:32:38] <newdimension> bjs: I'm not sure what you mean but let's say the keyword is "Sales Director" which is supposed to match "Sales Global Director", there is a space and another word in between
[15:33:00] <bjs> Pi-sistance: well `i in le` is a boolean
[15:34:24] <Pi-sistance> I have no idea why or why it even succeeded to add anything then to the elements
[15:34:36] <bjs> newdimension: okay so make a regex that says that, r"Sales\s+(.+?\s+)?Director" for example
[15:34:47] <bjs> Pi-sistance: well break it down. `x = [1,2,3]; print(x[True])`
[15:34:50] <bjs> will print 2
[15:35:09] <bjs> because True == 1
[15:35:13] <mav`rik> Pi-sistance: booleans in Python (for historical reasons) are a subclass of integers, where False is equivalent to 0 and True to 1
[15:36:13] *** Quits: nuclearg1 (~nucleargr@user/nuclearg1) (Ping timeout: 268 seconds)
[15:36:14] *** Joins: water_27300935_ (~water_273@182.90.160.200)
[15:37:01] *** Joins: cincoswim (~cincoswim@cm-72-241-113-163.buckeyecom.net)
[15:37:33] *** Quits: arinov (~arinov@213.194.126.155) (Remote host closed the connection)
[15:37:54] <flower_> how do you add a logging.conf file to a *.whl package (setuptools), and where should the app find that logging.conf after installing with pip?
[15:37:56] <Pi-sistance> bjs thanks. it doesnt add the 1st(true) element every time though..
[15:38:16] *** Quits: otisolsen70 (~otisolsen@xd4ed80b5.cust.hiper.dk) (Quit: Leaving)
[15:38:17] <bjs> Pi-sistance: well it might also be False, so presumably it's adding either the 0th or 1st element
[15:38:55] <Pi-sistance> yes, thats exactly it, bloody hell so confusuing. why does it even evaluate to true or false though?
[15:39:14] <Pi-sistance> also, I think I will never try to do this again, lol
[15:39:19] *** Joins: wakeup (~wakeup@user/wakeup)
[15:39:29] <bjs> Pi-sistance: because `x in y` returns True if x is in y, and False if it is not
[15:39:50] <bjs> like `if 42 in some_list_of_integers:`
[15:39:59] *** Joins: xkuru (~xkuru@user/xkuru)
[15:40:02] *** Quits: merijn (~merijn@c-001-001-001.client.esciencecenter.eduvpn.nl) (Ping timeout: 240 seconds)
[15:40:15] <Pi-sistance> ah, awesome
[15:40:28] *** Quits: ghost43_ (~ghost43@gateway/tor-sasl/ghost43) (Remote host closed the connection)
[15:40:44] <Pi-sistance> i didnt know python could evaluate it in that context, interesting
[15:40:57] *** Joins: ghost43 (~ghost43@gateway/tor-sasl/ghost43)
[15:41:28] *** Quits: ghost43 (~ghost43@gateway/tor-sasl/ghost43) (Remote host closed the connection)
[15:41:46] *** Quits: mjh4386_ (~mjh4386@165.22.53.231) (Ping timeout: 268 seconds)
[15:41:52] <mav`rik> Pi-sistance: for completeness sake, could you explain what you _thought_ it was evaluating to/as?
[15:42:03] *** Joins: merijn (~merijn@c-001-001-001.client.esciencecenter.eduvpn.nl)
[15:42:22] *** Joins: ghost43 (~ghost43@gateway/tor-sasl/ghost43)
[15:42:24] *** Quits: rustyshackleford (uid236774@id-236774.helmsley.irccloud.com) (Quit: Connection closed for inactivity)
[15:43:04] *** Joins: CatCow (~wtf_over@c-73-96-109-206.hsd1.or.comcast.net)
[15:43:31] <bjs> Pi-sistance: the stuff in the [...] can be any expression and it doesn't evaluate any differently inside the [] than outside
[15:43:33] *** Joins: vulpes_vulpes (~vulpes_vu@62-64-207-88.dynamic.dial.as9105.com)
[15:43:36] *** Joins: mjh4386 (~mjh4386@165.22.53.231)
[15:43:52] <Pi-sistance> mav`rik to be honest I had absolutely no idea this time
[15:44:02] *** Quits: jeho (~jehoshaph@user/jehoshaphat) (Ping timeout: 240 seconds)
[15:44:06] *** Quits: jpn_ (~jpn@user/jpn) (Ping timeout: 260 seconds)
[15:44:06] *** Quits: water_27300935_ (~water_273@182.90.160.200) (Read error: Connection reset by peer)
[15:44:15] <Pi-sistance> I didnt think it would work at all really
[15:45:09] *** Quits: pulsar12 (~quassel@a79-169-140-39.cpe.netcabo.pt) (Quit: https://quassel-irc.org - Chat comfortably. Anywhere.)
[15:45:34] *** Joins: jpn (~jpn@user/jpn)
[15:47:22] <flower_> MANIFEST.in hm
[15:47:37] <hodapp> in some languages, like MATLAB, lots of "should work" things, expression wise, kinda don't
[15:48:39] <flower_> should argcomplete also work in *whl / pip files? I guess so, but does it needs special treatment? Doesn't work here.
[15:49:06] *** Joins: jamea (~jamea@177.239.81.39)
[15:49:10] *** Joins: bomb-on (~bomb-on@user/bomb-on)
[15:49:12] <flower_> while it works for the plain *.py script
[15:49:25] *** Joins: gurkenglas (~gurkengla@dslb-178-012-018-212.178.012.pools.vodafone-ip.de)
[15:49:27] *** Quits: Trashlord (~trash@user/trashlord) (Ping timeout: 252 seconds)
[15:49:30] *** Joins: mncheck (~mncheck@193.224.205.254)
[15:49:32] *** Quits: cincoswim (~cincoswim@cm-72-241-113-163.buckeyecom.net) (Ping timeout: 240 seconds)
[15:49:33] *** Quits: zeden (~zeden@user/zeden) (Quit: WeeChat 3.4.1)
[15:49:48] *** Quits: jpn (~jpn@user/jpn) (Ping timeout: 240 seconds)
[15:50:13] *** Joins: water_27300935_ (~water_273@182.90.160.200)
[15:50:17] *** Joins: bloody (~bloody@user/bloody)
[15:50:47] *** Joins: zeden (~zeden@user/zeden)
[15:51:00] *** Quits: LAVBoy (~LAVBoy@85.249.46.8) (Ping timeout: 240 seconds)
[15:51:02] *** Quits: roxfan (~roxfan@2a02:a03f:a2be:4f00:49af:1e90:ff60:b7d7) (Ping timeout: 240 seconds)
[15:51:17] *** Joins: mcon (~Thunderbi@host-79-46-235-155.retail.telecomitalia.it)
[15:52:41] *** Joins: crashrep (~crashrep@user/crashrep)
[15:52:52] *** Quits: merijn (~merijn@c-001-001-001.client.esciencecenter.eduvpn.nl) (Ping timeout: 268 seconds)
[15:53:13] *** Joins: rinzewind (~rinzewind@user/rinzewind)
[15:53:59] *** Joins: merijn (~merijn@c-001-001-001.client.esciencecenter.eduvpn.nl)
[15:56:09] *** Joins: SallyAhaj (~SallyAhaj@user/sallyahaj)
[15:56:17] <Pi-sistance> if I splice a list I  can longer access the last element with foo[-1] it seems
[15:56:52] <mav`rik> Pi-sistance: do you have a paste to show the issue you're experiencing?
[15:58:38] *** Seto_Kaiba is now known as Hunterkll
[16:00:37] *** Quits: water_27300935_ (~water_273@182.90.160.200) (Quit: WeeChat 3.4.1)
[16:00:59] *** Joins: somlis (~somlis@user/somlis)
[16:02:43] *** Joins: caveman (~caveman@gateway/tor-sasl/caveman)
[16:03:43] *** Quits: merijn (~merijn@c-001-001-001.client.esciencecenter.eduvpn.nl) (Ping timeout: 256 seconds)
[16:04:10] *** Joins: nuclearg1 (~nucleargr@user/nuclearg1)
[16:04:11] *** Quits: tomeaton17 (~tomeaton1@92.234.2.175) (Quit: Client closed)
[16:05:06] *** Quits: wyclif (~wyclif@user/wyclif) (Ping timeout: 260 seconds)
[16:05:06] *** Joins: merijn (~merijn@c-001-001-001.client.esciencecenter.eduvpn.nl)
[16:06:24] *** Joins: wyclif (~wyclif@user/wyclif)
[16:07:11] *** Joins: RiFo (~RiFo@user/rifo)
[16:08:15] *** Quits: caveman (~caveman@gateway/tor-sasl/caveman) (Quit: btc donations: bc1qt3chy4rqtzjny2h7qt47cy7nmu6th9sr66wa02)
[16:08:58] *** Joins: dreamon (~dreamon@ppp-88-217-83-128.dynamic.mnet-online.de)
[16:09:03] *** Quits: nuclearg1 (~nucleargr@user/nuclearg1) (Ping timeout: 256 seconds)
[16:10:57] *** Quits: wyclif (~wyclif@user/wyclif) (Ping timeout: 240 seconds)
[16:11:21] *** Joins: c4017w_ (~c4017@209.52.68.8)
[16:11:51] *** Joins: wyclif (~wyclif@user/wyclif)
[16:13:40] *** Joins: oh-bee (~walt@2601:346:8100:5ec0:dab1:816f:a6d6:9b31)
[16:13:59] *** PublicWifi is now known as PublicWiFi
[16:14:12] *** Quits: mrwick (~mrwick@user/mrwick) (Ping timeout: 252 seconds)
[16:14:36] *** Quits: c4017w__ (~c4017@209.52.68.8) (Ping timeout: 240 seconds)
[16:15:41] *** Quits: gitesh (uid423739@id-423739.ilkley.irccloud.com) (Quit: Connection closed for inactivity)
[16:16:03] *** Joins: Klinda (~superleag@user/klinda)
[16:16:04] *** Joins: mrwick (~mrwick@user/mrwick)
[16:16:32] *** Quits: wyclif (~wyclif@user/wyclif) (Ping timeout: 240 seconds)
[16:16:54] *** Joins: cdown (~cdown@188.214.11.14)
[16:16:58] *** Joins: wyclif (~wyclif@user/wyclif)
[16:17:17] <Pi-sistance> nvm I was interpreting it wrong
[16:17:26] *** Quits: bdeshi (~bdeshi@bdeshi.space) (Quit: bouncer disconnect)
[16:18:23] <Pi-sistance> bjs however if I do the same thing as before but turn it into an array instead of a list when the boolen is true it adds the zeroth element and the first element when false, for some reason
[16:18:27] *** Joins: bdeshi (~bdeshi@bdeshi.space)
[16:18:41] <bjs> Pi-sistance: "turn it into an array"?  I'm not sure what you mean.  can you show me?
[16:19:11] <graingert[m]> woo found a bug... (full message at https://libera.ems.host/_matrix/media/r0/download/libera.chat/33511485017cfbd838bac4fe2b94bf1ea1312a4e)
[16:19:46] <Pi-sistance> yep, sec
[16:20:11] *** Joins: dez (uid92154@user/dez)
[16:20:26] *** Quits: CatCow (~wtf_over@c-73-96-109-206.hsd1.or.comcast.net) (Quit: My MacBook Air has gone to sleep. ZZZzzz…)
[16:20:37] *** Quits: shad (~shad@user/shad) (Ping timeout: 268 seconds)
[16:20:49] *** Joins: dhill (~dhill@modemcable103.217-80-70.mc.videotron.ca)
[16:21:17] *** Quits: merijn (~merijn@c-001-001-001.client.esciencecenter.eduvpn.nl) (Ping timeout: 240 seconds)
[16:21:34] <Pi-sistance> wait a minute I think i can figure it out by myself
[16:21:54] *** Joins: merijn (~merijn@c-001-001-001.client.esciencecenter.eduvpn.nl)
[16:23:00] <Pi-sistance> https://bpa.st/PFTQ
[16:23:32] *** Quits: schumaml (~schumaml@dslb-178-002-185-254.178.002.pools.vodafone-ip.de) (Ping timeout: 240 seconds)
[16:24:00] *** Quits: seoul_man (~meh@097-087-062-229.res.spectrum.com) (Remote host closed the connection)
[16:24:03] <Pi-sistance> it interprets true as the whole array anmd false as
[16:24:20] <Pi-sistance> well it prints an empty array
[16:25:14] <Pi-sistance> i sshould paste output too doh https://bpa.st/FLNQ
[16:25:37] *** Joins: schumaml (~schumaml@dslb-188-104-162-152.188.104.pools.vodafone-ip.de)
[16:25:58] <bjs> Pi-sistance: well `i in le` no longer returns a boolean, if `le` is a numpy array
[16:26:32] <bjs> oh wait I misread here, `le` is still just the range, so it's still a boolean
[16:27:04] <bjs> but foo[boolean] doesn't just return a single element with a numpy array `foo`
[16:27:10] *** Quits: impermanence (~impermane@c-75-73-193-204.hsd1.mn.comcast.net) (Quit: Connection closed)
[16:27:19] *** Joins: Bronto22 (~mennoh@84.86.247.193)
[16:27:24] <bjs> specifically some_np_array[True] != some_np_array[1]
[16:27:45] <callq> Hey hey - who here has used selenium
[16:27:45] *** Quits: mxp (~mxp@185.16.205.131) (Ping timeout: 256 seconds)
[16:28:18] <Pi-sistance> yes , it told me off for making it refer to an emoty array for false
[16:28:38] <Pi-sistance> saying it will do so this time, but not in future, I felt quite chided.
[16:28:40] <callq> am I doing this right? https://bpa.st/SYXQ
[16:28:54] *** Joins: Esexe_ (~aa@024-151-038-076.res.spectrum.com)
[16:29:28] <Pi-sistance> anyway i probbaly dont need to udnerstand it, i sohuld probably actually do my coursework and not waste questions on curiosity etc, sorry..
[16:31:09] *** Quits: eyepeetee (~aa@024-151-038-076.res.spectrum.com) (Ping timeout: 256 seconds)
[16:31:30] *** Joins: otisolsen70 (~otisolsen@xd4ed80b5.cust.hiper.dk)
[16:31:30] *** Quits: swistak (~swistak@185.21.216.141) (Ping timeout: 250 seconds)
[16:32:26] *** Quits: otisolsen70 (~otisolsen@xd4ed80b5.cust.hiper.dk) (Remote host closed the connection)
[16:32:38] *** Quits: _flood (flooded@gateway/vpn/protonvpn/flood/x-43489060) (Ping timeout: 260 seconds)
[16:32:51] *** Joins: otisolsen70 (~otisolsen@xd4ed80b5.cust.hiper.dk)
[16:33:44] *** Joins: flooded (flooded@gateway/vpn/protonvpn/flood/x-43489060)
[16:34:19] *** Quits: Pi-sistance (~Pi-sistan@cpc94040-newt37-2-0-cust284.19-3.cable.virginm.net) (Quit: Client closed)
[16:34:27] *** Joins: mxp (~mxp@185.16.205.131)
[16:35:15] *** Joins: neo1 (~neo@103.144.161.8)
[16:35:42] *** Joins: Pi-sistance (~Pi-sistan@cpc94040-newt37-2-0-cust284.19-3.cable.virginm.net)
[16:36:05] *** Babar is now known as Guest628
[16:36:05] *** Quits: Guest628 (~Babar@171.226.225.22) (Killed (calcium.libera.chat (Nickname regained by services)))
[16:36:05] *** Joins: Babar (~Babar@171.226.225.22)
[16:36:12] *** Quits: Foxyloxy_ (~foxyloxy@cpc151593-shef16-2-0-cust343.17-1.cable.virginm.net) (Ping timeout: 252 seconds)
[16:37:14] <bjs> Pi-sistance: you can also just not write confusing code like `some_nparray[x in y]`
[16:37:30] <bjs> and instead write something more sensible that is more obvious/clear what it is doing
[16:37:41] *** Joins: foobaz212 (~foobaz212@152.37.103.80)
[16:37:58] <jle> is there some way to do this? (but also print the value before "and"): (x.get('data') and ';') or ''
[16:38:05] *** Joins: Foxyloxy (~foxyloxy@cpc151593-shef16-2-0-cust343.17-1.cable.virginm.net)
[16:39:12] <bjs> jle: well you can go `v = x.get('data')` and print(v) out before you do the thing
[16:39:28] *** Quits: ghost43 (~ghost43@gateway/tor-sasl/ghost43) (Remote host closed the connection)
[16:39:32] *** Quits: ravan (~ravan@user/ravan) (Read error: Connection reset by peer)
[16:39:52] *** Joins: ravan (~ravan@user/ravan)
[16:40:22] *** Joins: ghost43 (~ghost43@gateway/tor-sasl/ghost43)
[16:40:24] *** Joins: nuclearg1 (~nucleargr@user/nuclearg1)
[16:40:32] <jle> bjs: but I want to append ';' as well (but only if data isnt empty
[16:40:48] <bjs> jle: you said you wanted to print just the stuff before the and
[16:41:02] <bjs> jle: so `v = x.get('data'); print(v); y = (v and ';') or ''`
[16:41:08] <jle> this is done inside a .format(), so I was hoping I could fix this within there
[16:41:31] <bjs> jle: _append_ ?
[16:41:37] *** Joins: shad (~shad@user/shad)
[16:41:48] <bjs> jle: `and` doesn't sound like "append" to me,  what are you trying to do
[16:41:49] <jle> concentate :)
[16:42:05] *** Quits: Xano (~Xano@host86-157-207-90.range86-157.btcentralplus.com) (Read error: Connection reset by peer)
[16:42:14] *** Joins: Xano (~Xano@host86-157-207-90.range86-157.btcentralplus.com)
[16:42:28] *** Quits: ghost43 (~ghost43@gateway/tor-sasl/ghost43) (Remote host closed the connection)
[16:42:40] <jle> yes, this is the problem.. I was wondering if there is something like "and" that also concentates the string, not only checks it..
[16:43:09] *** Quits: ravan (~ravan@user/ravan) (Read error: Connection reset by peer)
[16:43:15] *** Joins: ghost43 (~ghost43@gateway/tor-sasl/ghost43)
[16:43:21] <jle> I want to print the ';' after x.get('data') ONLY if x.get('data') returns something
[16:43:50] *** Quits: cdown (~cdown@188.214.11.14) (Ping timeout: 260 seconds)
[16:43:54] *** Joins: ravan (~ravan@user/ravan)
[16:44:29] *** Joins: SallyAhaj_ (~SallyAhaj@user/sallyahaj)
[16:44:33] <bjs> jle: okay so you don't want print at all, and you want to include the ; not just the stuff before the and.
[16:44:57] <bjs> jle: maybe you want to use if-else,  like `x['data'] + ';' if 'data' in x else ''` or something
[16:45:02] *** Quits: nuclearg1 (~nucleargr@user/nuclearg1) (Ping timeout: 240 seconds)
[16:45:16] <bjs> but if ';' is some kind of separator, then perhaps you can ';'.join(...) them together instead of doing this
[16:45:20] *** Quits: Wh0 (~V@43.241.144.151) (Remote host closed the connection)
[16:45:44] *** Joins: Wh0 (~V@43.241.144.151)
[16:45:44] *** Joins: Sheilong (uid293653@id-293653.ilkley.irccloud.com)
[16:45:45] *** Joins: tomeaton17 (~tomeaton1@92.234.2.175)
[16:45:47] *** Joins: adiKt (uid472628@id-472628.tinside.irccloud.com)
[16:46:16] *** Quits: Alleria (~textual@user/alleria) (Quit: Textual IRC Client: www.textualapp.com)
[16:46:17] *** Quits: oh-bee (~walt@2601:346:8100:5ec0:dab1:816f:a6d6:9b31) (Quit: Konversation terminated!)
[16:46:34] <jle> bjs: hmm..let me try
[16:47:04] *** Quits: quhar (~quhar@192.162.148.48) (Quit: WeeChat 3.3)
[16:48:05] <parv> '{}{}'.format( (x := fx() ), x and ';' or '' )  # ugly & torturous
[16:48:12] *** Quits: SallyAhaj (~SallyAhaj@user/sallyahaj) (Ping timeout: 240 seconds)
[16:48:29] <jle> := is unfortunately a no-go for me :(
[16:49:57] *** Quits: Masklin__Gurder (~joel@bioinf-serv.biol.lu.se) (Ping timeout: 252 seconds)
[16:50:12] <jle> bjs: thx! the oneliner if else worked.. I replaced 'data' in x with x.get('data') though, as I want to ignore data if it is '' as well
[16:50:45] *** SallyAhaj_ is now known as SallyAhaj
[16:50:59] <han-solo> `['', f'{( x:=d.get("1") )};'][bool(x)]` # perfection!
[16:52:08] <parv> 👍
[16:52:35] *** Joins: Masklin__Gurder (~joel@pool20.nat.lunet.lu.se)
[16:53:30] <han-solo> s/bool(x)/'1' in x/
[16:53:36] *** Joins: bahamas (~lucian@84.232.140.158)
[16:53:37] *** Quits: Wh0 (~V@43.241.144.151) (Ping timeout: 240 seconds)
[16:53:40] *** Joins: seoul_man (~meh@user/seoul-man/x-5066766)
[16:53:49] <han-solo> er. s/x/d/
[16:54:28] *** Joins: johnkeats6 (~johnkeats@2804:14c:32:a0cc:9c15:f927:5f6b:c24)
[16:54:29] *** Joins: Masklin_Gurder (~joel@bioinf-serv.biol.lu.se)
[16:54:35] <han-solo> well, nope
[16:54:37] *** Quits: irf21k (~irf21k@2401:4900:32b5:d3e1::122e:9ae9) (Ping timeout: 240 seconds)
[16:54:55] *** Quits: Masklin_Gurder (~joel@bioinf-serv.biol.lu.se) (Client Quit)
[16:55:46] *** Joins: oh-bee (~walt@2601:346:8100:5ec0:dab1:816f:a6d6:9b31)
[16:56:28] *** Joins: slowButPresent (~slowButPr@user/slowbutpresent)
[16:57:00] *** Quits: oh-bee (~walt@2601:346:8100:5ec0:dab1:816f:a6d6:9b31) (Client Quit)
[17:00:27] *** Joins: artem (~artem@37.252.95.121)
[17:01:08] <parv> han-solo, Original seems to work for a value in [ 0, 1, '' ] ; what was wrong with that (besides 0 should produce "0;")?
[17:01:28] <mav`rik> graingert[m]: impressive! More threading fun?
[17:01:48] <artem> Hi! Suppose I have two dataclasses A and B, and B inherits A. I want to, having `a: A` create `b: B` that has all the same fields as `a`, but also some additional, specific to `B` fields. What's the idiomatic way to do it?
[17:01:54] <graingert[m]> mav`rik: just missing a `ord(` call
[17:02:53] *** Quits: borisrunak (~borisruna@29.42.167.195.static.otenet.gr) (Ping timeout: 256 seconds)
[17:02:55] *** Quits: mIk3_08 (~Thunderbi@user/mik3-08/x-2852566) (Quit: mIk3_08)
[17:03:19] <mav`rik> artem: This (I hope, if I'm understanding your question correctly) is described in https://docs.python.org/3/library/dataclasses.html#inheritance
[17:03:42] <han-solo> parv: it's stupid, needs repetition, which defeats the purpose i mean
[17:04:27] *** Quits: szkl (uid110435@id-110435.uxbridge.irccloud.com) (Quit: Connection closed for inactivity)
[17:04:35] *** Quits: ravan (~ravan@user/ravan) (Ping timeout: 256 seconds)
[17:04:39] *** Quits: wakeup (~wakeup@user/wakeup) (Quit: Client closed)
[17:04:40] *** Joins: vladoski (~vladoski@2001:b07:add:d406:a909:98aa:ab7a:bb99)
[17:05:54] *** Quits: schumaml (~schumaml@dslb-188-104-162-152.188.104.pools.vodafone-ip.de) (Ping timeout: 252 seconds)
[17:06:05] *** Joins: ravan (~ravan@user/ravan)
[17:07:08] <parv> mav`rik, artem,  Thanks
[17:07:10] *** Quits: easter_egg (~jeffry@85.17.16.26) (Remote host closed the connection)
[17:07:24] *** Joins: caveman (~caveman@gateway/tor-sasl/caveman)
[17:08:02] *** Joins: schumaml (~schumaml@dslb-188-104-167-096.188.104.pools.vodafone-ip.de)
[17:09:29] *** Joins: TheCat (~TheCat@user/z-cat)
[17:09:49] *** Quits: Bronto22 (~mennoh@84.86.247.193) (Quit: Konversation terminated!)
[17:10:04] <artem> mav`rik, it does need repetition. So every time, I add a new field to `A`, I have to rewrite all usages of `B` "constructors"
[17:10:23] <artem> I wondered if there's a way to do it without repetittion
[17:11:06] <artem> I tried `B(**dataclasses.asdict(a), other_field=5)`, but it `asdict` turns also all inner dataclasses into dicts
[17:11:24] *** Quits: Enitin (~Enitin@82.180.145.228) (Ping timeout: 252 seconds)
[17:11:26] <artem> Also, it for some reason complains about unhashability of `dict`
[17:11:48] *** Quits: herjazz (~herjazz@p10295192-ipngn22201marunouchi.tokyo.ocn.ne.jp) (Quit: leaving)
[17:12:08] *** Joins: c4017w__ (~c4017@209.52.68.8)
[17:12:25] *** Joins: water_27300935_ (~water_273@182.90.160.200)
[17:12:58] *** Joins: ivii (~ivan@user/ivii)
[17:13:35] *** Joins: nuclearg1 (~nucleargr@user/nuclearg1)
[17:14:13] *** Quits: EgonX (~EgonX@c-73-115-70-244.hsd1.tx.comcast.net) (Ping timeout: 256 seconds)
[17:14:29] *** Quits: crashrep (~crashrep@user/crashrep) (Quit: WeeChat 3.4)
[17:15:14] *** Joins: EgonX (~EgonX@2601:2c6:47f:879e:5166:d080:1bd7:68f4)
[17:15:48] *** Quits: bahamas (~lucian@84.232.140.158) (Ping timeout: 252 seconds)
[17:15:52] <fakenullie> artem: there's update method
[17:15:55] *** Quits: c4017w_ (~c4017@209.52.68.8) (Ping timeout: 256 seconds)
[17:16:23] <fakenullie> artem: dataclasses.replace
[17:17:15] <fakenullie> ah, you need to create a new one
[17:17:17] <fakenullie> sorry
[17:17:51] <fakenullie> artem: generally if you need to do this, consider composition over inheritance
[17:18:16] *** Quits: nuclearg1 (~nucleargr@user/nuclearg1) (Ping timeout: 245 seconds)
[17:21:32] *** Joins: ravan_ (~ravan@user/ravan)
[17:21:36] *** Quits: ravan (~ravan@user/ravan) (Ping timeout: 245 seconds)
[17:22:50] *** Joins: theprophet (~theprophe@212.58.102.156)
[17:23:15] *** Joins: nomic (~nomic@185.217.117.111)
[17:24:56] <velix> Wow. How stupid can a website be? https://python.libhunt.com/supervisor-alternatives
[17:25:35] <velix> it lists "letsencrypt" as an alternative :D
[17:25:50] <velix> Can you tell me a good burger store? Yes, car wash.
[17:26:00] *** Joins: jpn (~jpn@user/jpn)
[17:26:05] *** Joins: wakeup (~wakeup@user/wakeup)
[17:26:25] <velix> hrhr, it also lists  BorgBackup as alternative to supervisor :D
[17:26:58] <artem> fakenullie thanks for your suggestion. Unfortunately, I need to extend an existing interface, and so I need inheritance
[17:27:02] <wakeup> the SQLAlchemy object has a field Model
[17:27:06] <wakeup> what is it?
[17:27:17] <artem> monkey patching is an option, I guess, but it makes me feel dirty :D
[17:27:30] *** withered_wolf is now known as life_alert
[17:27:35] <mav`rik> artem: I don't think there's a catch-all solution here. Remember that the __post_init__ code and other things can result in changing or otherwise interpreting the values submitted to A's constructor such that they could "change" to suit. So doubling down on that by feeding a's dict-value to B's constructor wouldn't work. This is the kind of situation you need a class-specific factory-function for.
[17:27:39] <wakeup> I was trying to move the "model" classes into a separate module models.py
[17:27:48] *** life_alert is now known as withered_wolf
[17:27:55] <wakeup> but I realise that those classes inherit from db.Model
[17:28:07] <wakeup> but the creation of the SQLAlchemy object db is in the other module
[17:28:13] <wakeup> so that's why I am asking this question
[17:28:31] <artem> mav`rik seems like it. At least, that would confine direct calls to `A`'s constructor to one place
[17:28:35] <artem> Thanks for all the help!
[17:30:42] *** Joins: Vornicus (~Vornicus@2603-8000-5d07-7ef0-79e9-834f-e095-34f0.res6.spectrum.com)
[17:32:55] *** Joins: Moosadee (~Moosadee@136.32.155.193)
[17:32:57] *** Joins: crashrep (~crashrep@user/crashrep)
[17:34:28] *** Quits: ghost43 (~ghost43@gateway/tor-sasl/ghost43) (Remote host closed the connection)
[17:35:12] *** Joins: ghost43 (~ghost43@gateway/tor-sasl/ghost43)
[17:36:32] *** Quits: LiftLeft (~LiftLeft@airstream-nelson-fiber-dhcp-007-17.dsl.airstreamcomm.net) (Ping timeout: 240 seconds)
[17:36:38] *** Joins: jeho (~jehoshaph@user/jehoshaphat)
[17:37:08] *** Quits: neo1 (~neo@103.144.161.8) (Quit: WeeChat 3.4)
[17:37:40] *** Joins: Bjander (~Belxjande@p1575007-ipoe.ipoe.ocn.ne.jp)
[17:38:01] *** Quits: Belxjander (~Belxjande@p1575007-ipoe.ipoe.ocn.ne.jp) (Ping timeout: 256 seconds)
[17:38:18] *** Joins: ocramoi (~ocramoi@143.107.231.30)
[17:38:21] *** Joins: CrazyEddy (crazyed@2603:300a:1d10:c000:de4a:3eff:fe88:cc5f)
[17:38:41] *** Joins: WantToHelp (~WantToHel@96.77.40.70)
[17:38:41] <guardian> hello. I'm working on a CLI program and at some point I want to accept a parameter that will be a path to a file, or "-" to denote stdin
[17:38:45] *** Quits: ocramoi (~ocramoi@143.107.231.30) (Client Quit)
[17:38:56] *** Bjander is now known as Belxjander
[17:39:05] *** Quits: WantToHelp (~WantToHel@96.77.40.70) (Client Quit)
[17:39:29] *** Joins: jero98772 (~jero98772@2800:484:1d80:d8ce:efcc:cbb3:7f2a:6dff)
[17:39:31] <guardian> when the value is "-" I want to return sys.stdin, and else return an instance of pathlib.Path() on which I can call open()
[17:40:01] <guardian> from there, is it a good idea to monkeypatch sys.stdin so that I can transparently call open() on it?
[17:40:32] <deniska> guardian: not exactly the answer to your question, but for some small scripts I found this useful: https://docs.python.org/3/library/fileinput.html
[17:42:02] *** Joins: neo1 (~neo@103.144.161.10)
[17:42:15] *** Quits: Amadiro_ (~Amadiro@45.154.138.41) (Remote host closed the connection)
[17:44:48] <mav`rik> guardian: are you using argparse, or something else for argument parsing?
[17:46:13] *** Joins: Amadiro (~Amadiro@45.154.138.91)
[17:46:49] *** Quits: purple_cthulhu (~rax@2.186.248.47) (Quit: Leaving.)
[17:46:58] <han-solo> https://docs.python.org/3/library/argparse.html#argparse.FileType # if argparse
[17:47:16] <mav`rik> han-solo: Indeed, iirc that handles `-` automatically?
[17:47:20] <han-solo> yes
[17:47:23] *** Joins: roxfan (~roxfan@2a02:a03f:a2be:4f00:49af:1e90:ff60:b7d7)
[17:47:44] *** Joins: nuclearg1 (~nucleargr@user/nuclearg1)
[17:48:17] *** Quits: treefrob (~treefrob@pd9e2dc5a.dip0.t-ipconnect.de) (Remote host closed the connection)
[17:48:44] *** Joins: Barones (~Barones@user/Barones)
[17:48:45] *** Joins: treefrob (~treefrob@pd9e2dc5a.dip0.t-ipconnect.de)
[17:49:44] <water_27300935_> # -*- coding: <encoding name> -*-
[17:49:50] <water_27300935_> where to find full list for 'encoding name'?
[17:50:51] *** Quits: cypostres (~cypostres@user/cypostres) (Quit: Leaving)
[17:51:24] *** Joins: Wh0 (~V@43.241.144.151)
[17:52:11] <BinarySavior> in vscode I set python interpreter by browsing and clicking on a venv python.exe outside of my workspace, but when I click the run button it's still executing using the global python interpreter installed by windows
[17:52:12] <deniska> water_27300935_: whatever https://docs.python.org/3/library/codecs.html understands
[17:52:17] *** Quits: nuclearg1 (~nucleargr@user/nuclearg1) (Ping timeout: 250 seconds)
[17:52:40] *** Joins: ApostleInTriumph (~ApostleIn@nat-clients.lix.polytechnique.fr)
[17:53:04] *** Joins: Xano_ (~Xano@2a00:23c4:4204:700:409c:309b:8bcd:fffd)
[17:53:26] <ApostleInTriumph> Hello. I've an unrelated question that I'm unable to find a solution from google. How to not paste clipboard content to search bar when using VSCode?
[17:53:38] *** Joins: gusto (~Augustus@109.255.100.54)
[17:53:45] *** Quits: Xano (~Xano@host86-157-207-90.range86-157.btcentralplus.com) (Read error: Connection reset by peer)
[17:54:06] *** Quits: Pi-sistance (~Pi-sistan@cpc94040-newt37-2-0-cust284.19-3.cable.virginm.net) (Quit: Client closed)
[17:54:32] *** Joins: vats (~vats@103.16.30.139)
[17:54:38] *** Joins: SaltHillStroller (~SaltHillS@thunderhill.nvidia.com)
[17:55:01] *** Quits: flower_ (~archie@217-123-218-6.cable.dynamic.v4.ziggo.nl) (Ping timeout: 256 seconds)
[17:55:09] *** Quits: ert (~ert@2001:4b99:1:1:216:3eff:fee5:446f) (Quit: Ping timeout (120 seconds))
[17:55:25] *** Joins: ert (~ert@2001:4b99:1:1:216:3eff:fee5:446f)
[17:55:33] *** Quits: nem (sid113421@user/nem) (Ping timeout: 250 seconds)
[17:55:33] *** Quits: mobius (sid478273@2a03:5180:f:5::7:4c41) (Ping timeout: 250 seconds)
[17:55:33] *** Quits: st3fan (sid43079@2a03:5180:f:2::a847) (Ping timeout: 250 seconds)
[17:55:33] *** Quits: sunarch (sid526836@user/sunarch) (Ping timeout: 250 seconds)
[17:55:33] *** Quits: cmagina (sid286142@user/cmagina) (Ping timeout: 250 seconds)
[17:55:33] *** Quits: patchie (sid504252@2a03:5180:f:3::7:b1bc) (Ping timeout: 250 seconds)
[17:55:35] *** Joins: flower_ (~archie@217-123-218-6.cable.dynamic.v4.ziggo.nl)
[17:55:57] *** Quits: artem (~artem@37.252.95.121) (Ping timeout: 252 seconds)
[17:55:59] *** Quits: pwillard (sid136981@2a03:5180:f:4::2:1715) (Ping timeout: 250 seconds)
[17:55:59] *** Quits: Knyght (sid365271@2a03:5180:f:1::5:92d7) (Ping timeout: 250 seconds)
[17:55:59] *** Quits: sa (sid1055@2a03:5180:f::41f) (Ping timeout: 250 seconds)
[17:55:59] *** Quits: chromis (sid150893@2a03:5180:f::2:4d6d) (Ping timeout: 250 seconds)
[17:55:59] *** Quits: agronholm (sid403424@id-403424.helmsley.irccloud.com) (Ping timeout: 250 seconds)
[17:55:59] *** Quits: rburton (rburton@user/rburton) (Ping timeout: 250 seconds)
[17:55:59] *** Quits: hogarius (hogarius@2a03:5180:f:5::3:65b4) (Ping timeout: 250 seconds)
[17:56:25] *** Quits: dba (sid533975@id-533975.hampstead.irccloud.com) (Ping timeout: 250 seconds)
[17:56:25] *** Quits: Lvl4Sword (sid483043@user/lvl4sword) (Ping timeout: 250 seconds)
[17:56:31] *** Quits: nikomo (~quassel@nikomo.fi) (Remote host closed the connection)
[17:56:32] *** Joins: st3fan (sid43079@id-43079.lymington.irccloud.com)
[17:56:32] *** Joins: cmagina (sid286142@user/cmagina)
[17:56:32] *** Joins: patchie (sid504252@id-504252.ilkley.irccloud.com)
[17:56:33] *** Joins: hogarius (hogarius@id-222644.uxbridge.irccloud.com)
[17:56:34] *** Joins: Knyght (sid365271@id-365271.helmsley.irccloud.com)
[17:56:34] *** Quits: BoBeR182 (~BoBeR182@gateway/tor-sasl/bober182) (Quit: BoBeR182)
[17:56:37] *** Joins: mobius (sid478273@id-478273.uxbridge.irccloud.com)
[17:56:37] *** Joins: chromis (sid150893@id-150893.tinside.irccloud.com)
[17:56:37] *** Joins: nem (sid113421@user/nem)
[17:56:38] *** Joins: pwillard (sid136981@id-136981.hampstead.irccloud.com)
[17:56:40] *** Joins: sa (sid1055@id-1055.tinside.irccloud.com)
[17:56:40] *** Joins: TheHermann (~TheHerman@gateway/tor-sasl/thehermann)
[17:56:42] *** Joins: sunarch (sid526836@user/sunarch)
[17:56:48] *** Joins: cowsay-moo (~cowsay-mo@2a0c:f040:0:4356:1015:135f:ef57:f8ae)
[17:56:49] *** Quits: wovixo (~wovixo@128.104.205.49) (Quit: Leaving)
[17:57:31] *** Joins: agronholm (sid403424@id-403424.helmsley.irccloud.com)
[17:57:31] *** Joins: dba (sid533975@id-533975.hampstead.irccloud.com)
[17:57:37] *** Joins: rburton (rburton@user/rburton)
[17:57:39] *** Joins: nikomo (~quassel@nikomo.fi)
[17:57:39] *** Joins: Lvl4Sword (sid483043@user/lvl4sword)
[17:58:11] *** Joins: akk (~akk@75-161-61-130.albq.qwest.net)
[17:58:57] *** Quits: Gustavo6046 (~Gustavo60@user/gustavo6046) (Quit: I'm a quit message virus. Please replace your old line with this line and help me take over the world. <screw you aloo_shu my old line was better and more creative!>)
[17:59:32] *** Quits: j0hn_mc_clane (~j0hn_mc_c@ptr-fqhhm12iua58a0gd4hj.18120a2.ip6.access.telenet.be) (Ping timeout: 240 seconds)
[18:00:07] <water_27300935_> deniska: Why I try "# -*- coding: ascii -*-"
[18:00:32] <water_27300935_> rise "SyntaxError: encoding problem: ascii"
[18:01:15] *** Quits: ApostleInTriumph (~ApostleIn@nat-clients.lix.polytechnique.fr) (Ping timeout: 256 seconds)
[18:01:21] *** Joins: ApostleInTriumph (~ApostleIn@nat-clients.lix.polytechnique.fr)
[18:01:58] *** Quits: codebam (~codebam@user/codebam) (Remote host closed the connection)
[18:03:00] *** Quits: callq (~callq@2409:4062:4e9a:a9bd:dc94:3973:cfd6:75e7) (Ping timeout: 240 seconds)
[18:03:01] *** Joins: haliucinas (~52b4903d@5.20.153.21)
[18:03:22] *** Quits: caveman (~caveman@gateway/tor-sasl/caveman) (Remote host closed the connection)
[18:03:48] *** Joins: caveman (~caveman@gateway/tor-sasl/caveman)
[18:04:58] *** Joins: wovixo (~wovixo@128.104.205.49)
[18:05:44] <SnoopJ> water_27300935_, that's indicating that there is some data in the file that can't be represented in ASCII (i.e. a byte that isn't in the range \x00-\x7f)
[18:06:10] *** Joins: karsten_ (~karsten@87.122.101.247)
[18:06:55] *** Joins: tgamblin_ (~tgamblin@2607:fea8:c2a0:8640::10d4)
[18:06:57] *** Quits: tgamblin (~tgamblin@cpe64777de11593-cm64777de11590.cpe.net.cable.rogers.com) (Ping timeout: 240 seconds)
[18:07:18] *** Joins: fef (~thedawn@user/thedawn)
[18:08:05] *** Joins: junebug (~junebug@2600:1700:3db0:2540:eda8:87e5:4b4c:b3ce)
[18:08:32] *** Joins: CodePoint (~jonathan@107-208-128-79.lightspeed.tukrga.sbcglobal.net)
[18:08:46] *** Quits: vats (~vats@103.16.30.139) (Ping timeout: 260 seconds)
[18:09:00] *** Quits: EgonX (~EgonX@2601:2c6:47f:879e:5166:d080:1bd7:68f4) (Ping timeout: 240 seconds)
[18:09:57] <nedbat> it's too bad the encoding problem syntax error just says line 1 regardless of where the bad char is.
[18:10:19] *** Joins: rustyshackleford (uid236774@id-236774.helmsley.irccloud.com)
[18:10:21] *** Quits: ayustae (Thunderbir@gateway/vpn/protonvpn/ayustae) (Quit: ayustae)
[18:10:52] <ApostleInTriumph> sorry my computer crashed
[18:11:17] <TML> ApostleInTriumph: That's ok, I don't think anyone understood what your question was anyway
[18:11:28] <nedbat> water_27300935_: the coding comment at the top only affects how your source code is read, it doesn't change what your program does while it's running
[18:11:48] <ApostleInTriumph> TML try to copy something a variable name for example. Press control + f on your keyboard.
[18:12:01] *** Quits: shad (~shad@user/shad) (Ping timeout: 256 seconds)
[18:12:01] <ApostleInTriumph> the copied content gets pasted in the search bar on VSCode
[18:12:06] *** Joins: EgonX (~EgonX@c-73-115-70-244.hsd1.tx.comcast.net)
[18:12:20] *** ColdKeybo[a]rd is now known as ColdKeyboard
[18:12:21] <ApostleInTriumph> replacing what you were already searching for
[18:12:45] *** Joins: c4017w_ (~c4017@209.52.68.8)
[18:12:59] <grym> ApostleInTriumph: that sounds like you need to readjust your vscode keybindings, which isn't really a python problem
[18:13:04] <TML> ApostleInTriumph: I'll take your word for it, but how is that a python question?
[18:13:44] *** Joins: kelalaka (~fatih@159.146.74.36)
[18:13:48] *** Quits: ice9 (~ice9@user/ice9) (Ping timeout: 240 seconds)
[18:14:06] *** Joins: artem (~artem@37.252.95.121)
[18:14:24] <grym> Wh0: what's up?
[18:14:38] <ApostleInTriumph> yep absolutely. i don't know where to ask this question actually
[18:14:48] *** Joins: swistak (~swistak@185.21.216.141)
[18:14:58] *** Joins: bahamas (~lucian@86.120.77.115)
[18:15:07] <TML> ApostleInTriumph: did you try google?
[18:15:18] <ApostleInTriumph> yes
[18:15:25] <ApostleInTriumph> i think i mentioned in my first question
[18:15:25] <TML> Because https://github.com/microsoft/vscode/issues/87217 came up for me as the first result, which appears to contain the answer
[18:15:36] *** Joins: zen_coder (~zen_coder@2a02:8109:a280:2d8d:d91b:267d:4123:397)
[18:15:41] *** Joins: SaltHilStroller_ (~SaltHillS@thunderhill.nvidia.com)
[18:15:43] <TML> "You can disable this with the setting editor.find.seedSearchStringFromSelection"
[18:16:11] *** Quits: c4017w__ (~c4017@209.52.68.8) (Ping timeout: 245 seconds)
[18:17:11] <TML> first hit on Google for me when I searched the phrase "vscode find disable autopaste"
[18:17:24] *** Quits: cowsay-moo (~cowsay-mo@2a0c:f040:0:4356:1015:135f:ef57:f8ae) (Remote host closed the connection)
[18:17:32] <ApostleInTriumph> weird. it never came up in my search
[18:17:40] <ApostleInTriumph> anyway, that helps. thanks @ TML
[18:18:12] <bjs> nedbat: I think the reason it does it is that "lines" means reading newlines which depends on the encoding, so it can't trust the newlines it saw on the way
[18:18:14] *** Joins: Enitin (~Enitin@82.180.145.226)
[18:18:23] *** Joins: skapata (~Skapata@2804:14c:87b0:9d2e:1192:1a3c:917b:5b02)
[18:18:23] *** Quits: skapata (~Skapata@2804:14c:87b0:9d2e:1192:1a3c:917b:5b02) (Changing host)
[18:18:23] *** Joins: skapata (~Skapata@user/skapata)
[18:18:27] <nedbat> bjs: yeah, i can see why it would be tricky.
[18:18:55] <TML> bjs: I figured it was more like "The encoding is the part that's wrong, so that's where we're going to report the error"
[18:19:17] <bjs> TML: hmm
[18:19:29] <SnoopJ> TML, it seems overly opinionated to assume the error is the wrong encoding and not a malformed document body
[18:19:30] *** Quits: SaltHillStroller (~SaltHillS@thunderhill.nvidia.com) (Ping timeout: 260 seconds)
[18:19:43] *** Joins: frostschutz (~frostschu@2a01:c23:7c7d:a600:9c29:dc23:ff87:43b4)
[18:19:48] <SnoopJ> (but makes sense that if you don't know where the lines actually end, you just report line 1)
[18:19:53] <mav`rik> artem: out of interest, why do you need to create an instance of a subclass from an instance of the parent class? Why can't you create the subclass instance directly?
[18:20:14] *** Joins: blei (~blei@user/blei)
[18:20:26] *** Joins: XV8 (~XV8@2601:5cb:c001:50::4f47)
[18:20:28] *** Quits: kelalaka (~fatih@159.146.74.36) (Quit: kelalaka)
[18:20:55] *** Joins: [itchyjunk] (~itchyjunk@user/itchyjunk/x-7353470)
[18:21:13] *** Joins: LAVBoy (~LAVBoy@85.249.46.8)
[18:23:06] <karsten_> how to get the youngest object of a list of objects with attribute date?
[18:23:33] <grym> karsten_: what's the name of the attribute and the type of it
[18:23:34] *** Joins: VaniaPy (~VaniaPy@kronos.interamerican.gr)
[18:23:36] *** Joins: Vision (~Vision@023-084-128-214.res.spectrum.com)
[18:23:47] *** Parts: VaniaPy (~VaniaPy@kronos.interamerican.gr) ()
[18:23:55] *** Quits: crashrep (~crashrep@user/crashrep) (Quit: WeeChat 3.4)
[18:23:57] <karsten_> grym name = date, type = datetime
[18:24:25] *** Quits: grooverman_ (~grooverma@152.250.149.49) (Remote host closed the connection)
[18:24:26] <grym> sorted(thelist, key=lambda x: x.date)[0]
[18:24:38] <mav`rik> grym: use `max` instead
[18:24:51] <grym> or, uh, min()
[18:24:53] <grym> but yes, good idea
[18:25:03] <grym> derp
[18:25:07] <mav`rik> grym: min would be eldest, not youngest
[18:25:19] <grym> ...a pox on time
[18:25:30] <blei> derp derp
[18:25:53] <grym> karsten_: mav`rik: had it right
[18:26:06] <mav`rik> karsten_: max(thelist, key=operator.attrgetter('date'))
[18:26:08] <karsten_> like this ?  list.filtered(lambda r: min(r.date))
[18:26:11] *** Quits: esther (~esther@24-155-112-236.dyn.grandenetworks.net) (Read error: Connection reset by peer)
[18:26:21] <grym> karsten_: not like that
[18:26:32] *** Joins: esther (~esther@5.189.202.129)
[18:26:34] *** Joins: dntreou (~yakiza@inet-2a02-6900-8808-e010--379.oracle-ocna.com)
[18:26:39] *** Joins: tarel2 (~tarel2@139.28.216.246)
[18:26:40] *** Joins: fr_sleepy (~fr_sleepy@209.94.138.128)
[18:27:35] *** Joins: src (~src@user/src)
[18:27:53] *** Quits: squarecircle (~root@merkur.platinengarten.hg.tu-darmstadt.de) (Ping timeout: 256 seconds)
[18:28:58] *** Joins: grooverman (~grooverma@152.250.149.49)
[18:28:59] *** Joins: subopt (~subopt@2603-8081-2302-459a-09c0-8edd-7344-ddad.res6.spectrum.com)
[18:29:24] *** Quits: mon_aaraj (~MonAaraj@user/mon-aaraj/x-4416475) (Ping timeout: 240 seconds)
[18:29:39] <Payam> Hi, what plugins are you using for python programming in vscode? I have kite installe and it feels redundant to have pylance. but what about formatting and stuff
[18:30:07] <han-solo> black
[18:30:23] *** Joins: Blankspace (~androirc@user/blankspace)
[18:30:36] *** Quits: gusto (~Augustus@109.255.100.54) (Quit: Textual IRC Client: www.textualapp.com)
[18:30:47] *** Quits: tgamblin_ (~tgamblin@2607:fea8:c2a0:8640::10d4) (Remote host closed the connection)
[18:30:48] *** Joins: crashrep (~crashrep@user/crashrep)
[18:31:17] *** Quits: esther (~esther@5.189.202.129) (Ping timeout: 240 seconds)
[18:31:20] <karsten_> grym will that be a single object, also if multiple objects of same date?
[18:31:33] *** Joins: mon_aaraj (~MonAaraj@user/mon-aaraj/x-4416475)
[18:31:37] *** Quits: Enitin (~Enitin@82.180.145.226) (Ping timeout: 240 seconds)
[18:31:40] <grym> karsten_: max() returns at most one thing
[18:31:50] *** Joins: tgamblin_ (~tgamblin@2607:fea8:c2a0:8640::73cb)
[18:31:59] *** Joins: esther (~esther@24-155-112-236.dyn.grandenetworks.net)
[18:32:01] <grym> if there's more than one maximum, you just get the first one
[18:32:14] *** Quits: [itchyjunk] (~itchyjunk@user/itchyjunk/x-7353470) (Remote host closed the connection)
[18:32:50] *** Quits: ApostleInTriumph (~ApostleIn@nat-clients.lix.polytechnique.fr) (Quit: Client closed)
[18:33:01] <karsten_> grym what is operator in max(thelist, key=operator.attrgetter('date')). I get Error that NoneType does not have attrgetter
[18:33:25] *** Quits: Commaster (~Commaster@dslb-002-204-205-169.002.204.pools.vodafone-ip.de) (Quit: Client closed)
[18:33:45] <grym> karsten_: it's the operator library in stdlib
[18:33:50] <karsten_> ok, I have not said, that my list ist not a list, but iterable object of objects
[18:33:55] <grym> that should be fine
[18:34:22] <grym> karsten_: does `oneoftheseobjects.date` work?
[18:34:35] <karsten_> sure
[18:34:50] <karsten_> o I have to import module operator
[18:35:04] *** Joins: stats4647 (~stats4647@ip174-67-220-13.oc.oc.cox.net)
[18:35:27] *** Joins: Masterphi (~Masterphi@user/masterphi)
[18:35:30] *** Joins: nuclearg1 (~nucleargr@user/nuclearg1)
[18:35:30] <grym> yeah
[18:35:32] <Payam> han-solo, yes but python alternative in vscode is one when I uninstalled python plugin from it
[18:35:46] <grym> or you could key=lambda x:x.date, if that's clearer to you
[18:35:52] *** Quits: osxtra (~root@2605:a601:aa0a:2200::83a2:6799) (Ping timeout: 250 seconds)
[18:36:23] *** Quits: caveman (~caveman@gateway/tor-sasl/caveman) (Remote host closed the connection)
[18:36:43] <tarel2> I'm making silly app, You ask someone age , function decides , if that age is good enough , but I want the out come so I can ask other question, I don't know what to do
[18:37:36] *** Joins: tWqaq_ (~tWqaq@101.93.139.177)
[18:37:42] *** Quits: Masterphi (~Masterphi@user/masterphi) (Client Quit)
[18:37:45] *** Quits: Wh0 (~V@43.241.144.151) (Ping timeout: 252 seconds)
[18:38:32] <han-solo> Payam: mayeb autopep or yapf then
[18:38:37] <karsten_> grym my case max(docs.filtered(lambda r: r.journal_id == journal), key=lambda x:x.date). Git it! Thx.
[18:38:39] *** Joins: squarecircle (~root@merkur.platinengarten.hg.tu-darmstadt.de)
[18:38:47] *** Joins: shad (~shad@user/shad)
[18:38:49] <Payam> han-solo, Are you reading what I write?
[18:38:57] *** Joins: foobaz21289 (~foobaz212@152.37.103.80)
[18:39:01] *** Quits: foobaz212 (~foobaz212@152.37.103.80) (Quit: Client closed)
[18:39:10] *** Joins: [itchyjunk] (~itchyjunk@user/itchyjunk/x-7353470)
[18:39:22] *** Quits: EvilDMP_ (~textual@2001:1c00:30e:1f00:f0b8:adf:4487:8e5) (Quit: My MacBook has gone to sleep. ZZZzzz…)
[18:39:23] <grym> karsten_: great!
[18:39:33] <mav`rik> karsten_: what is `docs`?
[18:39:36] *** Joins: caveman (~caveman@gateway/tor-sasl/caveman)
[18:39:44] <han-solo> um...i didn't understand what you wrote, but i kinda figured, you were saying "the one vscode with python extension uses another formatter"
[18:39:47] <han-solo> which is not black
[18:39:53] *** Joins: BoBeR182 (~BoBeR182@gateway/tor-sasl/bober182)
[18:40:02] *** Quits: tWqaq (~tWqaq@240e:389:5d41:5900:6a7:f59b:807a:4d84) (Ping timeout: 240 seconds)
[18:41:01] *** Joins: the_lanetly_052 (~the_lanet@185.30.90.223)
[18:41:11] <Payam> han-solo, how do I add black as formatter: like this: python...formatter:"black". right?
[18:41:24] <Payam> but the "python" does not exist anymore so I can not add a formatter
[18:41:51] <han-solo> i see
[18:43:15] *** Quits: Xano_ (~Xano@2a00:23c4:4204:700:409c:309b:8bcd:fffd) (Ping timeout: 252 seconds)
[18:43:35] *** Quits: tobybl (~tobybl@dhcp-199-233.inf.ed.ac.uk) (Remote host closed the connection)
[18:43:48] *** Quits: FFY00 (~FFY00@archlinux/trusteduser/ffy00) (Ping timeout: 252 seconds)
[18:43:49] *** Joins: Wh0 (~V@43.241.144.151)
[18:44:36] *** Quits: tgamblin_ (~tgamblin@2607:fea8:c2a0:8640::73cb) (Quit: Leaving)
[18:45:29] <han-solo> Payam: i haven't tried it but maybe you could get that using `"editor.formatOnSave": true` and then `"python.formatting.provider": "black"` after install black ?
[18:46:10] <Payam> han-solo, the "python." does not work anymore dear han-solo .
[18:46:26] <guardian> mav`rik:I'm using Click with a callback
[18:46:31] <han-solo> oh, Okay
[18:46:49] <han-solo> lemme see how to autoformat without python extension in vscode
[18:46:55] *** Quits: pyfisch (~pyfisch@user/pyfisch) (Ping timeout: 256 seconds)
[18:47:34] *** Quits: flooded (flooded@gateway/vpn/protonvpn/flood/x-43489060) (Ping timeout: 250 seconds)
[18:47:38] *** Joins: lispy (~lispy@user/lispy)
[18:48:52] *** Joins: osxtra (~root@2605:a601:aa0a:2200::83a2:6799)
[18:48:57] *** Quits: junebug (~junebug@2600:1700:3db0:2540:eda8:87e5:4b4c:b3ce) (Ping timeout: 240 seconds)
[18:49:01] <mav`rik> guardian: @click.argument("infile", type=click.File("rt")) should do the right thing
[18:49:11] *** Quits: luigibu (~luigi@93.176.153.88) (Quit: WeeChat 3.4.1)
[18:49:24] <mav`rik> guardian: or "rb" if you're dealing with binary input, of course
[18:50:18] *** Joins: pyfisch (~pyfisch@user/pyfisch)
[18:50:46] *** Quits: neo1 (~neo@103.144.161.10) (Quit: WeeChat 3.4)
[18:50:57] *** Quits: luva (~luva@146.70.62.237) (Ping timeout: 240 seconds)
[18:51:07] *** Quits: tarel2 (~tarel2@139.28.216.246) (Ping timeout: 256 seconds)
[18:51:09] *** Joins: luva (~luva@45.141.152.54)
[18:51:53] *** Quits: Blankspace (~androirc@user/blankspace) (Quit: AndroIRC - Android IRC Client ( http://www.androirc.com ))
[18:52:16] *** Joins: cdown (~cdown@82.3.55.77)
[18:52:31] *** Joins: sonnie (~sonnie@41.242.77.100)
[18:53:46] *** Joins: soju-test-user (~soju-test@lfbn-idf2-1-1140-121.w90-92.abo.wanadoo.fr)
[18:55:20] *** Joins: theseb (~theseb@47-220-214-54.cnrocmta03.res.dyn.suddenlink.net)
[18:55:29] *** Joins: flooded (flooded@gateway/vpn/protonvpn/flood/x-43489060)
[18:55:40] *** flooded is now known as _flood
[18:55:47] *** Joins: Xano (~Xano@2a00:23c4:4204:700:13b0:568d:bd07:f1a5)
[18:56:49] <theseb> what's the deal with anaconda?  why is it somehow better/easier than pulling plain ol' python3 from python.org?
[18:56:55] <theseb> everyone is always gaga over anaconda
[18:57:00] *** Quits: schumaml (~schumaml@dslb-188-104-167-096.188.104.pools.vodafone-ip.de) (Ping timeout: 240 seconds)
[18:57:01] <theseb> i never used it
[18:57:14] <han-solo> Payam: the search was not very fruitful, so i don't know how to do that without the vscode extension
[18:57:36] *** Joins: Guest23 (~Guest23@2601:18d:67f:8440::ae01)
[18:57:43] *** Quits: Barones (~Barones@user/Barones) (Quit: Leaving)
[18:57:57] <mav`rik> theseb: kinda popular in the data/numpy/scipy crowd because it's got a lot of pre-built goodness for those tasks.
[18:58:01] *** Joins: squirrel (uid529456@user/squirrel)
[18:58:06] *** Joins: cdown_ (~cdown@163.114.131.1)
[18:58:29] *** Quits: mon_aaraj (~MonAaraj@user/mon-aaraj/x-4416475) (Ping timeout: 268 seconds)
[18:58:34] *** Quits: ghost43 (~ghost43@gateway/tor-sasl/ghost43) (Remote host closed the connection)
[18:58:48] <theseb> mav`rik: interesting...so it has more batteries included...ok
[18:58:55] *** Joins: ghost43 (~ghost43@gateway/tor-sasl/ghost43)
[18:58:57] *** Joins: gitesh (uid423739@id-423739.ilkley.irccloud.com)
[18:59:08] *** Joins: EvilDMP (~textual@django/moderator/EvilDMP)
[18:59:09] *** Joins: schumaml (~schumaml@ipservice-092-211-201-195.092.211.pools.vodafone-ip.de)
[18:59:12] <Guest23> Hello, is there a way to specify that the type of a parameter in a function is a datetime.date object? I am aware that if I want to specify a string I would do param:str, but any idea for datetime.datetime types?
[18:59:42] <mav`rik> theseb: much less useful for creating deployable things, package authorship, etc. So I guess it mostly depends on the tasks you're working on
[18:59:42] <sco1> param: datetime.date
[18:59:53] *** Joins: mon_aaraj (~MonAaraj@user/mon-aaraj/x-4416475)
[19:00:10] <vladoski> is it possible to change pydantic's validationerror to something else?
[19:00:15] <ChrisWarrick> theseb: you don’t need anaconda in 2022
[19:00:16] <theseb> mav`rik: wait..why would anaconda be *less* useful for something?
[19:00:29] <theseb> ChrisWarrick: why not? because of pip?
[19:00:32] *** Quits: cdown (~cdown@82.3.55.77) (Ping timeout: 240 seconds)
[19:00:43] *** cdown_ is now known as cdown
[19:00:43] *** Joins: mcleuder_ (~mcleuder@gateway/tor-sasl/mcleuder)
[19:00:44] <theseb> ChrisWarrick: and venv?
[19:00:45] <grym> vladoski: i think validators can raise anything you liek
[19:00:47] <grym> like*
[19:01:03] <vladoski> grym yes but I don't wanna really create validators for stuff that I don't need
[19:01:14] <flower_> argcomplete, does it only work for *.py scripts or also when installing the script via a *whl file / pip?
[19:01:15] <ChrisWarrick> theseb: yes
[19:01:38] <ChrisWarrick> theseb: ~everything fancy you might want to install has .whl files on pypi for windows, macos, and even linux
[19:01:43] *** Quits: unyu (~pyon@user/pyon) (Quit: brb)
[19:02:03] <theseb> ChrisWarrick: good thanks...i can keep ignoring anaconda then yay!
[19:02:10] <SnoopJ> ChrisWarrick, you don't need anaconda *for Python*
[19:02:12] *** Quits: audiobirb (~audio@user/audio) (Ping timeout: 240 seconds)
[19:02:47] <Guest23> sco1 thank you so much wow that took me a second
[19:03:08] *** Joins: mefistofeles (~mefistofe@user/mefistofeles)
[19:03:12] <akk> I've seen instructors use anaconda for workshops because they think it'll be too hard coaching Windows users through a python+pip install
[19:03:18] *** Quits: nosolls (~nosollsma@user/nosolls) (Quit: Reconnecting)
[19:03:33] <akk> but it seemed like the Windows users had just as much trouble with anaconda, so it didn't really make things easier.
[19:03:33] *** Joins: nosolls (~nosollsma@user/nosolls)
[19:03:37] *** Quits: CodePoint (~jonathan@107-208-128-79.lightspeed.tukrga.sbcglobal.net) (Ping timeout: 240 seconds)
[19:03:44] *** Joins: matsaman (~matsaman@user/matsaman)
[19:03:55] *** Quits: mcleuder (~mcleuder@gateway/tor-sasl/mcleuder) (Ping timeout: 240 seconds)
[19:04:04] <BinarySavior> hello, I have a project_root/src/py/project_name/__init__.py but when I try to import project_name I am getting import error no module named 'project_name'
[19:04:06] *** Joins: j0hn_mc_clane (~j0hn_mc_c@ptr-fqhhm12iua58a0gd4hj.18120a2.ip6.access.telenet.be)
[19:04:17] * SnoopJ has never encountered a package manager that makes package management less painful
[19:04:35] <Guts71> what book do you offer me for python programs related to electronics ?
[19:04:36] <BinarySavior> the python file i'm trying to run is located at project_root/src/py/project_name/servies/service.py
[19:04:46] <ChrisWarrick> BinarySavior: how do you run it?
[19:04:58] <ChrisWarrick> BinarySavior: just python whatever.py?
[19:05:25] <BinarySavior> ChrisWarrick right now I'm running it through an activated venv external to the workspace and inside vscode using the run button
[19:05:32] <Guts71> what book do you suggest me for python programs related to electronics ?
[19:05:35] *** Joins: blei85 (~blei@user/blei)
[19:05:42] *** Quits: blei85 (~blei@user/blei) (Write error: Broken pipe)
[19:05:57] <ChrisWarrick> BinarySavior: that Run button is likely running the .py file directly, and you can’t do that when packages are involved
[19:06:04] <blei> can we attach to a running script with a debugger, and then resume the script?
[19:06:08] *** Quits: Guest23 (~Guest23@2601:18d:67f:8440::ae01) (Quit: Client closed)
[19:06:20] <ChrisWarrick> BinarySavior: you need to run `python -m project_name.services.service` — and you need to be in project_root/src/py for that to work
[19:06:32] <ChrisWarrick> BinarySavior: (and you should install your thing, preferably with -e)
[19:06:42] *** Quits: j0hn_mc_clane (~j0hn_mc_c@ptr-fqhhm12iua58a0gd4hj.18120a2.ip6.access.telenet.be) (Client Quit)
[19:06:48] <vladoski> is there a way to intercept validatorerrors in pydantic, globally?
[19:07:02] <SnoopJ> blei, gdb can do that
[19:07:11] <blei> yeah but i don't want to learn cpython
[19:07:12] <mav`rik> vladoski: what's the intended outcome when one occurs?
[19:07:15] *** Quits: pvergain (~Thunderbi@2a01:e0a:223:690:7378:306b:7e6b:1a42) (Quit: pvergain)
[19:07:31] <SnoopJ> blei, you don't need to?
[19:07:44] <vladoski> get what's inside in a ValidationError and raise another custom exception with some of its contents
[19:07:49] <blei> you would need to know it to 'inspect' the program from gdb
[19:08:08] <BinarySavior> ChrisWarrick you mean pip install -e?
[19:08:14] <SnoopJ> blei, not really, no.
[19:08:19] <vladoski> mav`rik, I mean I can do that on fields that have a validator function, but I don't want to create validators even for fields that don't need one
[19:08:33] <blei> i'm not sure what you are referring to. connecting to python with gdb and attempting to inspect the program would require in-depth knowledge of python's guts.
[19:08:36] <blei> ie cpython
[19:08:41] *** Quits: bahamas (~lucian@86.120.77.115) (Ping timeout: 256 seconds)
[19:08:41] <ChrisWarrick> BinarySavior: yes
[19:09:06] <SnoopJ> blei, no, it really does not. CPython ships helper tools for use inside of GDB for exactly this reason.
[19:09:14] <mav`rik> vladoski: you could add another decorator to your various pydantic classes I guess. I think the design idea behind pydantic though is that the thing creating an instance of the object should be handling the failure case itself.
[19:09:18] <blei> link?
[19:09:31] *** Quits: Wh0 (~V@43.241.144.151) (Ping timeout: 245 seconds)
[19:09:59] <SnoopJ> https://devguide.python.org/gdb/ see commands like py-bt, py-up, py-down
[19:10:35] <SnoopJ> the gdb manual also describes these commands: https://sourceware.org/gdb/current/onlinedocs/gdb/Python-Commands.html#Python-Commands
[19:10:51] <SnoopJ> (well, related commands)
[19:10:59] *** Quits: dsrt^ (~dsrt@65.240.140.18) (Remote host closed the connection)
[19:11:17] <grym> vladoski: iirc fastapi does exactly that (so it can raise http 422 and tell the caller why their json sucks); you might look at how they do it?
[19:11:47] <vladoski> grym, ok I'll try to do that thanks
[19:12:05] *** Joins: Guest54 (~Guest54@2620:10d:c092:400::4:d360)
[19:12:16] <vladoski> mav`rik, yes I can understand the rationale but checking everytime means lots of try excepts in the code just for something trivial as changing the exception
[19:12:35] *** Parts: water_27300935_ (~water_273@182.90.160.200) (WeeChat 3.4.1)
[19:13:28] *** Joins: c4017w__ (~c4017@209.52.68.8)
[19:15:02] *** Joins: Enitin (~Enitin@82.180.145.226)
[19:15:37] *** Quits: adiKt (uid472628@id-472628.tinside.irccloud.com) (Quit: Connection closed for inactivity)
[19:16:19] *** Quits: stdInOut (~stdInOut@user/stdInOut) (Quit: Leaving)
[19:16:33] <mav`rik> grym: iirc fastapi (and other similar systems) do this by funnelling a lot of stuff through chokepoints which handle these kinda of thing. I don't think it's a "top level, global" kind of thing?
[19:16:50] <grym> mav`rik: i think so
[19:16:53] *** Joins: mcleuder (~mcleuder@gateway/tor-sasl/mcleuder)
[19:17:11] *** Quits: c4017w_ (~c4017@209.52.68.8) (Ping timeout: 256 seconds)
[19:17:15] *** Quits: foobaz21289 (~foobaz212@152.37.103.80) (Quit: Client closed)
[19:17:29] *** Joins: foobaz21289 (~foobaz212@152.37.103.80)
[19:17:32] *** Quits: bitkiller (~bitkiller@user/bitkiller) (Ping timeout: 240 seconds)
[19:17:36] *** Quits: pdc (~raffaem@95.74.74.78) (Ping timeout: 268 seconds)
[19:17:45] *** Quits: julius3 (~raffaem@95.74.74.78) (Ping timeout: 256 seconds)
[19:17:45] *** Quits: baffodoro (~raffaem@95.74.74.78) (Ping timeout: 256 seconds)
[19:17:51] *** Quits: cdown (~cdown@163.114.131.1) (Ping timeout: 245 seconds)
[19:18:15] <blei> well, thats better than nothing
[19:18:21] *** Quits: mcleuder_ (~mcleuder@gateway/tor-sasl/mcleuder) (Remote host closed the connection)
[19:18:25] <SnoopJ> right, you'll be catching things that happen below [some point in FastAPI's architecture] rather than every issue with every Pydantic class
[19:18:41] *** Quits: Xano (~Xano@2a00:23c4:4204:700:13b0:568d:bd07:f1a5) (Ping timeout: 245 seconds)
[19:19:33] <SnoopJ> although doing it in middleware is probably possible with any framework that lets you define one, if it's 'just' for error reporting
[19:20:02] *** Joins: rpkilby (~rpkilby@c-24-20-208-106.hsd1.or.comcast.net)
[19:20:11] *** Parts: cb5r (~cb5r@user/cb5r) ()
[19:22:53] *** Joins: Wh0 (~V@43.241.144.151)
[19:22:54] *** Joins: mrgz (~mrgz@201-42-0-191.dsl.telesp.net.br)
[19:23:42] *** Quits: Wh0 (~V@43.241.144.151) (Remote host closed the connection)
[19:23:59] *** Quits: sonnie (~sonnie@41.242.77.100) (Ping timeout: 256 seconds)
[19:24:04] <MatthewG> Anyone done PDF manipulation? We're using PyPDF to remove first page in a PDF with this code: https://bpa.st/D7NA -> the issue, on a 200 page file, this eats up a ton of memory. Our issue might be elsewhere... wondering if there are other libraries that are preferred
[19:24:18] *** Joins: sonnie (~sonnie@105.112.181.160)
[19:24:19] *** Quits: AquaL1te (~AquaL1te@user/aqual1te) (Remote host closed the connection)
[19:24:28] *** Joins: daedw (~daedw@cpe-172-113-121-232.socal.res.rr.com)
[19:24:33] *** Quits: mrhands (~hands@user/mrhands) (Quit: Lost terminal)
[19:24:35] *** Joins: Xano (~Xano@2a00:23c4:4204:700:c8a0:f8fe:2b96:848)
[19:25:11] *** Quits: crashrep (~crashrep@user/crashrep) (Quit: WeeChat 3.4)
[19:25:18] *** Joins: FFY00 (~FFY00@archlinux/trusteduser/ffy00)
[19:25:26] <SnoopJ> MatthewG, do you need to do manipulations that are any more complex than removing that page?
[19:25:36] <MatthewG> SnoopJ: negative, that simple.
[19:26:09] *** Quits: kmh (~kmh@2a00:6020:5004:6800:d0dc:8c7:d95c:7c13) (Quit: Leaving)
[19:26:36] *** Quits: flower_ (~archie@217-123-218-6.cable.dynamic.v4.ziggo.nl) (Ping timeout: 240 seconds)
[19:26:51] <MatthewG> Heh, I think we just figured it out... we use https://github.com/bamthomas/aioimaplib/blob/master/example/imap_fetch.py to process PDFs in email with Gmail. We do our processing here: https://github.com/bamthomas/aioimaplib/blob/master/example/imap_fetch.py#L37 -> since this is async code, it's trying to process 40 emails with 6MB files... all at once. Is there a way to add blocking in here?
[19:27:10] *** Quits: blddk (~blddk@user/blddk) (Quit: The Lounge - https://thelounge.chat)
[19:27:22] <MatthewG> That's probably why it's killing our 2GB physical RAM 4GB swap...
[19:27:23] *** Quits: foobaz21289 (~foobaz212@152.37.103.80) (Ping timeout: 256 seconds)
[19:27:26] *** Joins: flower_ (~archie@217-123-218-6.cable.dynamic.v4.ziggo.nl)
[19:27:27] <SnoopJ> MatthewG, you might be able to farm the work out to another tool, then. But what you're saying about "all at once" makes it sound like your problem may be more to do with how your application is parallelized
[19:27:57] *** Quits: sonnie (~sonnie@105.112.181.160) (Client Quit)
[19:28:01] *** Quits: parv (~quass@user/parv) (Quit: parv)
[19:28:32] *** Joins: sonnie (~sonnie@105.112.181.160)
[19:29:14] *** Joins: Artea (~Lufia@artea.com.pt)
[19:29:14] <MatthewG> SnoopJ: you are correct, just realized this... so scratch my PDF question
[19:29:41] *** Joins: blddk (~blddk@user/blddk)
[19:29:47] <SnoopJ> makes sense, I've have good luck with PyPDF2
[19:29:48] <MatthewG> The new question is: how do I make this not parallelized. Either we split this into 2 processes, or we update a part of our code to not be async ... although not sure how to do that
[19:29:53] <MatthewG> SnoopJ: great to hear!
[19:30:08] *** Quits: sembitvea[m] (~sembitvea@2001:470:69fc:105::1:c113) (Quit: You have been kicked for being idle)
[19:30:11] *** Quits: andreasbuhr (~quassel@p549db74d.dip0.t-ipconnect.de) (Quit: https://quassel-irc.org - Chat comfortably. Anywhere.)
[19:30:25] <MatthewG> https://github.com/bamthomas/aioimaplib/blob/master/example/imap_fetch.py#L37 -> if we had 40 emails, I really doubt that would print everything at the same time though
[19:30:41] *** Joins: sembitvea[m] (~sembitvea@2001:470:69fc:105::1:c113)
[19:31:09] <EdFletcher> could you serialize those operations? stick them on a queue that you only service one at a time, await'ing each so as to be sure it finishes before starting the next
[19:31:18] *** Quits: sonnie (~sonnie@105.112.181.160) (Client Quit)
[19:31:30] <SnoopJ> it sounds like you want to cap the number you process all at once, possibly using asyncio.Sempahore ? https://docs.python.org/3/library/asyncio-sync.html#asyncio.Semaphore
[19:31:40] *** Quits: jpodivin (~jpodivin@cgnat44-pool3-69-60.poda.cz) (Remote host closed the connection)
[19:31:42] <SnoopJ> (it really depends on how your coros get started, there isn't just one way to do this)
[19:31:53] *** Joins: sonnie (~sonnie@105.112.181.160)
[19:32:15] <mav`rik> MatthewG: as SnoopJ suggests, low-level things like semaphore can be useful, so can things like https://docs.python.org/3/library/asyncio-queue.html
[19:32:32] *** Quits: mrwick (~mrwick@user/mrwick) (Ping timeout: 240 seconds)
[19:32:51] *** Quits: EvilDMP (~textual@django/moderator/EvilDMP) (Quit: My MacBook has gone to sleep. ZZZzzz…)
[19:32:51] <EdFletcher> oh that's right i forgot asyncio had a queue class built in! batteries included baby
[19:33:08] <SnoopJ> yea, or an async flow that has some bounded number of workers
[19:33:17] *** Joins: EvilDMP (~textual@django/moderator/EvilDMP)
[19:33:28] *** Joins: debian_ (~debian@217-123-218-6.cable.dynamic.v4.ziggo.nl)
[19:33:58] <SnoopJ> if you do end up waiting like this, you should be careful that the blocking part happens *before* the memory-hungry PDF operations begin
[19:34:17] *** Quits: sonnie (~sonnie@105.112.181.160) (Client Quit)
[19:34:45] *** Quits: ckdCreations (~ckdCreati@c-73-140-151-116.hsd1.wa.comcast.net) (Ping timeout: 256 seconds)
[19:34:47] *** Quits: kr0nk (~kr0nk@user/kr0nk) (Quit: leaving)
[19:35:26] *** Joins: cdman (~dcm@user/dmc/x-4369397)
[19:35:38] *** Joins: ckdCreations (~ckdCreati@147.55.133.139)
[19:35:51] *** Joins: HuitzilSan (~HuitzilSa@cpe-76-89-218-122.socal.res.rr.com)
[19:36:18] *** Quits: marcello42 (~mp@p200300dfaf10fe013da0eb2bf7bf6508.dip0.t-ipconnect.de) (Quit: WeeChat 3.4)
[19:36:54] <mav`rik> It's likely _also_ worth strictly limiting the number of concurrent things in general. You don't want (for example) 1M imap messages to be scanned and mid-process which all stall on an attempt to add to the PDF processing queue.
[19:37:26] *** Quits: EvilDMP (~textual@django/moderator/EvilDMP) (Ping timeout: 245 seconds)
[19:37:41] *** Quits: pkapp (~pkapp@c-75-74-40-214.hsd1.fl.comcast.net) (Quit: ZNC 1.7.5+deb4 - https://znc.in)
[19:37:47] <mav`rik> back-pressure is a useful technique to be aware of quite early, otherwise you could end up just pushing the problem elsewhere
[19:38:10] <SnoopJ> yea, I would prefer something less granular in general
[19:38:27] *** Joins: greentree (~greentree@pool-74-101-99-157.nycmny.fios.verizon.net)
[19:38:31] *** Joins: pkapp (~pkapp@c-75-74-40-214.hsd1.fl.comcast.net)
[19:38:55] <greentree> does anyone happen to know if there are any good libs for reading/editing text in pdfs or are they all not that great
[19:39:32] *** Joins: thurs (~thurs@ip68-225-209-147.ph.ph.cox.net)
[19:39:51] <akk> greentree: all not that great, as far as I've found
[19:40:28] *** Joins: tobybl (~tobybl@227.192.115.87.dyn.plus.net)
[19:40:36] <SnoopJ> it depends on what your PDFs look like. I've had excellent results with PyPDF2 when extracting text from well-formed documents that don't contain raster stuff.
[19:40:37] <akk> I usually convert them to html and then parse the html, but maybe that's because I don't really grok pdf
[19:41:27] <SnoopJ> once you start getting into documents that contain e.g. raster images, you'll be veering into OCR territory where things are less reliable, although tesseract does a pretty good job
[19:41:28] *** Joins: mmdbalkhi (~Thunderbi@2.186.4.13)
[19:42:06] *** Quits: shad (~shad@user/shad) (Quit: WeeChat 3.0)
[19:42:21] *** Quits: SaltHilStroller_ (~SaltHillS@thunderhill.nvidia.com) (Read error: Connection reset by peer)
[19:42:27] *** Quits: pkapp (~pkapp@c-75-74-40-214.hsd1.fl.comcast.net) (Client Quit)
[19:42:44] *** Joins: pkapp (~pkapp@2601:58c:c500:6900:3d07:cf9b:601d:74a2)
[19:42:47] <mav`rik> tesseract _is_ very good, but once you hit that kind of area the world becomes a MUCH less pleasant place (we tried, for example, to extract room dimensions from PDF floor plan documents... gah!)
[19:43:06] <akk> That sounds uniquely painful.
[19:43:12] *** Joins: yakiza (~yakiza@cpc91202-cmbg18-2-0-cust102.5-4.cable.virginm.net)
[19:43:13] <SnoopJ> yea, OCR is not a place where you find perfect solutions
[19:43:20] <grym> https://filingdb.com/b/pdf-text-extraction has a good list of some sharp edges
[19:43:28] *** Quits: ghost43 (~ghost43@gateway/tor-sasl/ghost43) (Remote host closed the connection)
[19:43:40] <SnoopJ> my point is more that "PDF" is far from a unique description, there is a stunning variety of documents that describes
[19:43:47] <mav`rik> akk: It's in a class of painful, but I'm sure there's worse (scanned manuals with multiple columns per page is the definition of sufferin g)
[19:43:58] *** Quits: wyclif (~wyclif@user/wyclif) (Ping timeout: 260 seconds)
[19:44:05] <akk> mav`rik: So true ... oh do I ever hate multi-column pdfs
[19:44:09] *** Quits: nuclearg1 (~nucleargr@user/nuclearg1) (Ping timeout: 256 seconds)
[19:44:13] *** Joins: ghost43 (~ghost43@gateway/tor-sasl/ghost43)
[19:44:27] <mcon> I have the following problem: I have a pexpect.spawn('ssh ...') open, I do a pexpect.expect(prompt); pexpect.sendline('cmd') then I need to capture everything printed by `cmd` till next `prompt` How can I do this?
[19:44:48] *** Joins: kickingvegas (~cchoi@c-73-170-198-193.hsd1.ca.comcast.net)
[19:44:54] *** Joins: wyclif (~wyclif@user/wyclif)
[19:45:18] *** Quits: src (~src@user/src) (Quit: leaving)
[19:45:34] *** Joins: kr0nk (~kr0nk@user/kr0nk)
[19:45:38] *** Quits: darksun (~darksun@user/darksun) (Ping timeout: 250 seconds)
[19:46:02] *** Quits: merijn (~merijn@c-001-001-001.client.esciencecenter.eduvpn.nl) (Ping timeout: 240 seconds)
[19:46:59] *** Joins: waynew (~wayne@user/waynew)
[19:46:59] *** Quits: jamea (~jamea@177.239.81.39) (Ping timeout: 256 seconds)
[19:47:04] *** Quits: HuitzilSan (~HuitzilSa@cpe-76-89-218-122.socal.res.rr.com) (Remote host closed the connection)
[19:47:05] *** Joins: nickodd (~nickodd@user/nickodd)
[19:48:21] *** Joins: wib_jonas (~wib_jonas@business-37-191-60-209.business.broadband.hu)
[19:48:39] *** Joins: HuitzilSan (~HuitzilSa@cpe-76-89-218-122.socal.res.rr.com)
[19:48:51] <MatthewG> EdFletcher: yes, we could serialize operations and process in a sync loop. Thank you for that
[19:49:10] <MatthewG> SnoopJ: aha, thank you, yeah, realize there are a few ways. Haven't heard of Sempahore - thank you
[19:49:23] <mav`rik> mcon: pexpect.before should contain the bit before the most recent `expect` I think?
[19:49:25] *** Quits: wyclif (~wyclif@user/wyclif) (Ping timeout: 240 seconds)
[19:49:27] *** Quits: HuitzilSan (~HuitzilSa@cpe-76-89-218-122.socal.res.rr.com) (Remote host closed the connection)
[19:49:37] *** Quits: brabrax (~brabrax@user/brabrax) (Quit: ZNC 1.8.2 - https://znc.in)
[19:49:39] *** Joins: HuitzilSan (~HuitzilSa@cpe-76-89-218-122.socal.res.rr.com)
[19:49:40] *** Quits: matsaman (~matsaman@user/matsaman) (Quit: leaving)
[19:49:57] <MatthewG> SnoopJ: great point on not blocking *before* memory-hungry... thank you!
[19:50:18] *** Joins: wyclif (~wyclif@user/wyclif)
[19:50:27] <MatthewG> SnoopJ: our PDFs are from scanners with different settings, haven't played with text extraction yet but on the list
[19:50:30] <SnoopJ> MatthewG, er, you *do* want to block before the memory-hungry part. If you block somewhere between the bit that loads your PDF and the completion of a task, it'll still hog that memory
[19:50:36] *** Joins: brabrax (~brabrax@user/brabrax)
[19:50:48] <MatthewG> SnoopJ: I see
[19:50:56] *** Joins: Barones (~Barones@user/Barones)
[19:51:01] *** Quits: roxfan (~roxfan@2a02:a03f:a2be:4f00:49af:1e90:ff60:b7d7) (Ping timeout: 250 seconds)
[19:51:21] *** Joins: SaltHillStroller (~SaltHillS@199.249.111.186)
[19:51:23] *** Quits: dhellmann_ (~dhellmann@097-081-099-073.res.spectrum.com) (Read error: Connection reset by peer)
[19:51:34] *** Quits: artem (~artem@37.252.95.121) (Quit: Konversation terminated!)
[19:51:47] *** Joins: dhellmann (~dhellmann@097-081-099-073.res.spectrum.com)
[19:52:06] <MatthewG> Can someone even verify, with https://github.com/bamthomas/aioimaplib/blob/master/example/imap_fetch.py#L37 ... does that get called multiple times because async? Because all of that happens within the ... actually, because of line 70, I think fetch_messages_headers does get called a ton. So this is definitely the issue.
[19:52:18] <MatthewG> If someone can confirm that that'd be great but I think that's what's happening
[19:52:30] *** Quits: rama (~rama@c-24-130-92-222.hsd1.ca.comcast.net) (Read error: Connection reset by peer)
[19:52:53] *** Joins: rama (~rama@c-24-130-92-222.hsd1.ca.comcast.net)
[19:53:07] *** Joins: foobaz21289 (~foobaz212@152.37.103.80)
[19:53:12] *** Joins: ljkimz (~ljkimz@97.119.167.32)
[19:53:39] *** Quits: Ergo^ (~ergo@91.238.59.144) (Remote host closed the connection)
[19:53:58] <MatthewG> What I'm not sure about... because line 37 is *within a for loop*, it's not getting called async ?
[19:54:30] *** Joins: zrsm (~mrrobot@173.171.254.123)
[19:54:37] *** Quits: wib_jonas (~wib_jonas@business-37-191-60-209.business.broadband.hu) (Quit: Client closed)
[19:54:45] <MatthewG> oh wait. Our code line 37 is: await process_mail(response.lines[i + 1].decode(), uid)
[19:54:56] <MatthewG> heh, so yes... that's definitely what's happening here... agree?
[19:55:17] *** Quits: wyclif (~wyclif@user/wyclif) (Ping timeout: 252 seconds)
[19:55:18] <mcon> mav`rik: Thanks, I completely missed that. I'll have to rework a bit my `prompt` pattern, but it should suffice ;)
[19:55:49] *** Joins: wyclif (~wyclif@user/wyclif)
[19:55:50] <EdFletcher> If you’re calling that process_mail function in an inner loop an awaiting each call, you’re already naturally serializing those calls and concurrency isn’t your problem here
[19:56:17] *** Quits: blei (~blei@user/blei) (Ping timeout: 256 seconds)
[19:56:18] <zrsm> Hi all, is there a way to get a value from a class function within my class initialization variables?
[19:56:24] <mav`rik> MatthewG: what triggers `process_mail`?
[19:56:25] *** Quits: tWqaq_ (~tWqaq@101.93.139.177) (Quit: Leaving)
[19:56:31] *** Quits: ghost43 (~ghost43@gateway/tor-sasl/ghost43) (Remote host closed the connection)
[19:56:57] *** Joins: ghost43 (~ghost43@gateway/tor-sasl/ghost43)
[19:57:00] <carlio> MatthewG: having had a quick look I think you have one single async fetch_messages_headers which fans out into a for loop which are all happening serially, but what happens is the object references are not freed until the entire method finishes, and this is where your memory leak is. That'd be my guess.
[19:57:05] *** Parts: ljkimz (~ljkimz@97.119.167.32) ()
[19:57:05] *** Quits: Henry_ (~mahengrui@user/mahengrui1) (Read error: Connection reset by peer)
[19:57:15] *** Joins: CodePoint (~jonathan@107-208-128-79.lightspeed.tukrga.sbcglobal.net)
[19:57:43] <EdFletcher> ^excellent guess
[19:58:04] *** Joins: Henry_ (~mahengrui@user/mahengrui1)
[19:58:10] <zrsm> https://pastebin.com/Sxgf8Qdf
[19:59:07] *** Quits: rama (~rama@c-24-130-92-222.hsd1.ca.comcast.net) (Ping timeout: 256 seconds)
[19:59:08] <zrsm> whenever self.get_refresh_token() gets called it runs an exception, i'm trying to figure out what i am doing wrong here.
[20:00:24] <mav`rik> zrsm: that paste isn't visible for me, consider using the paste site in the topic?
[20:01:09] *** Quits: wyclif (~wyclif@user/wyclif) (Ping timeout: 256 seconds)
[20:01:26] *** Joins: cthulchu (~Cthulchu@69-172-160-196.cable.teksavvy.com)
[20:01:35] *** Joins: wyclif (~wyclif@user/wyclif)
[20:02:14] *** Quits: TheCat (~TheCat@user/z-cat) (Remote host closed the connection)
[20:02:14] *** Joins: kmh (~kmh@2a00:6020:5004:6800:4be6:856d:7108:d738)
[20:02:25] *** Quits: vantage (~vantage@ip-193-121-152-141.dsl.scarlet.be) (Read error: Connection reset by peer)
[20:02:32] *** Joins: TheCat (~TheCat@user/z-cat)
[20:03:00] <zrsm> mav`rik my bad, i pasted the wrong way.
[20:03:20] *** Joins: jamea (~jamea@177.239.82.186)
[20:03:30] <MatthewG> mav`rik: https://github.com/bamthomas/aioimaplib/blob/master/example/imap_fetch.py#L37 - instead of 37 we have await process_mail(response.lines[i + 1].decode(), uid)
[20:03:30] *** Quits: brabrax (~brabrax@user/brabrax) (Quit: ZNC 1.8.2 - https://znc.in)
[20:03:38] <zrsm> mav`rik https://bpa.st/KBTQ
[20:03:52] <MatthewG> carlio / EdFletcher - I think carlio nailed it
[20:04:02] *** Joins: qlixed (~qlixed@181.44.129.13)
[20:04:03] *** Joins: nuclearg1 (~nucleargr@user/nuclearg1)
[20:04:03] <MatthewG> carlio: thank you
[20:04:35] <mav`rik> zrsm: Where is `response` supposed to come from for the `get_refresh_token`?
[20:04:46] *** Quits: drogas (~drogas@jump2.jet.uk) (Quit: Connection closed)
[20:04:51] *** Joins: brabrax (~brabrax@user/brabrax)
[20:05:02] *** Joins: p-i-_ (~Ohmu@2403:6200:8978:d82d:89c0:e177:c2f7:c9a9)
[20:05:30] <TML> MatthewG: I'll just note that I spend a very large portion of my time on a daily basis helping customers with digital assets such as PDFs, and there are definitely a lot of pathological PDFs out there that will send software into a tailspin trying to process them
[20:06:29] *** Quits: Guest54 (~Guest54@2620:10d:c092:400::4:d360) (Ping timeout: 256 seconds)
[20:06:34] <SnoopJ> if your documents are irregular, things become much less pleasant :(
[20:06:36] *** Quits: murdoc_x01 (~nitestryk@98.42.49.72) (Ping timeout: 240 seconds)
[20:06:42] <TML> MatthewG: in one extreme example, a PDF generated by Adobe InDesign causes imagemagick to (try and) consume 160GB of RAM just to generate a PNG of the first page
[20:06:47] <zrsm> mav`rik https://bpa.st/SHAA
[20:07:13] <TML> and the PDF file itself is only ~15MB
[20:07:20] <SnoopJ> TML, complex vector graphics?
[20:08:09] <TML> SnoopJ: No, they're all raster - it's something the InDesign tool writes in the postscript, we've not yet found the actual PS operation to blame
[20:08:17] *** Quits: p-i- (~Ohmu@2403:6200:8978:d82d:540d:8c68:2946:51e0) (Ping timeout: 240 seconds)
[20:08:17] <SnoopJ> huh
[20:08:20] *** Joins: src (~src@user/src)
[20:08:22] <mav`rik> PDF is basically postscript++, which is similar-ish to Forth. On top of this complexity people use it as some godawful extended container format.
[20:08:35] * SnoopJ is a PDF apologist
[20:08:56] <SnoopJ> I do kinda draw the line at embedded 3D graphics though
[20:09:04] <zrsm> mav`rik, basically what is happening when I call self.get_refresh_token() python immediately gives me an error class has no attribute 'logger'
[20:09:08] <TML> SnoopJ: It's some kind of disconnect between ghostscript (which imagemagick uses in the bg) and Adobe on how to interpret some PS operation
[20:09:21] <TML> we're still chasing exactly what it is
[20:09:54] <SnoopJ> TML, interesting (and cursed) problem
[20:09:55] <mav`rik> zrsm: you have a bigger problem. In order to create self.headers you need to call `get_refresh_token`, and `get_refresh_token` is dependent on `self.headers`, which means this is going to end badly for you no matter what you do.
[20:10:03] <TML> I have had to learn far more than I ever wanted to know about the PostScript language :)
[20:10:07] <SnoopJ> hehe
[20:10:08] *** Quits: kosh (~kosh@user/kosh) (Ping timeout: 252 seconds)
[20:10:27] *** Joins: xdrone (xdrone@93.126.252.7)
[20:10:32] *** Quits: ivii (~ivan@user/ivii) (Remote host closed the connection)
[20:10:36] *** Quits: weibullguy (~weibullgu@024-236-222-047.res.spectrum.com) (Ping timeout: 240 seconds)
[20:10:43] <zrsm> mav`rik I see, is there a better approach here?
[20:10:46] <mav`rik> zrsm: however, to fix your _first_ problem, move `self.logger =` in __init__ above `self.headers =`
[20:10:50] <SnoopJ> Those are some of my favorite of the Computerphile videos, because Dave Brailsford has so much direct experience with that history
[20:10:55] <TML> I spend days and days looking at raw postscript code going through operations one by one trying to trigger the pathological edge case
[20:10:56] <SnoopJ> (the ones on PostScript/PDF, I mean)
[20:10:56] <zrsm> ah
[20:10:57] <MatthewG> TML: Wow, thank you for sharing
[20:11:34] <zrsm> mav`rik ohhh I see now.
[20:11:52] *** Quits: wyclif (~wyclif@user/wyclif) (Ping timeout: 268 seconds)
[20:12:03] *** Joins: darksun (~darksun@user/darksun)
[20:12:27] <SnoopJ> TML, you've definitely gotten me curious about what the fault looks like (if it's not graphical I'm imagining some kind of runaway stack problem?), but I can understand how it is hard to pin down, PS being as complete as it is
[20:12:35] *** Joins: wyclif (~wyclif@user/wyclif)
[20:12:37] *** Joins: EvilDMP (~textual@django/moderator/EvilDMP)
[20:12:43] <mav`rik> zrsm: code runs from top-to-bottom, in order for self.logger to be assigned, the __init__ function needs to have completed the assignment to self.headers, but that calls self.get_refresh_token, which by the sounds also depended on self.logger?
[20:12:46] <zrsm> mav`rik thanks man I re-ordered it.
[20:13:15] <TML> SnoopJ: Yes, we suspect it's got some kind of infinite recursion processing a stack operation
[20:13:18] <zrsm> yeah, I see it won't work until those have been initialized properly, I was trying to call them before they were even initialized. It is running now.
[20:13:20] *** Joins: merijn (~merijn@c-001-001-001.client.esciencecenter.eduvpn.nl)
[20:13:43] <SnoopJ> TML, ah, if it's infinite, then that would make even more sense
[20:13:46] <TML> so it just allocates stack frames until it's consumed all possible memory
[20:13:48] <zrsm> thank you sir. :)
[20:13:57] *** Joins: c4017w_ (~c4017@209.52.68.8)
[20:14:03] <mav`rik> zrsm: glad you're making progress :)
[20:14:04] <zrsm> yay it works! AWESOME.
[20:14:18] <TML> SnoopJ: 160GB of RAM was the most we were ever able to try and offer it, and it still crashed OOM
[20:14:24] <newdimension> bjs: Just saw your answer from earlier, thank you. Was pulled away so didn't get a chance to answer
[20:14:25] * SnoopJ nods
[20:14:32] <zrsm> ^_^ yeah, I am writing a tdameritrade wrapper and right now I am just automating the authentication sequence.
[20:14:57] *** Quits: dreamon (~dreamon@ppp-88-217-83-128.dynamic.mnet-online.de) (Ping timeout: 240 seconds)
[20:15:19] <TML> SnoopJ: the weird thing is if we feed the same PDF to gs directly, it appears to go fine - so it's something about the way imagemagick calls libgs; it's very frustrating :)
[20:15:23] <SnoopJ> TML, I originally read you as saying it inflated only up to that size, which is why I thought about complex vector stuff. A bounded fault of this sort would be *really* special
[20:15:24] <mav`rik> zrsm: just in case you weren't aware, consider others might have tried this before and solved a lot of the problems - https://pypi.org/search/?q=ameritrade
[20:15:28] *** Joins: Elzington (~Elzington@87.249.134.10)
[20:16:19] <TML> we've compiled custom gs and libgs to do extra logging to syslog to try and catch it when it happens
[20:16:27] <SnoopJ> very cursed
[20:16:41] *** Quits: darksun (~darksun@user/darksun) (Ping timeout: 256 seconds)
[20:17:08] *** Joins: darksun (~darksun@user/darksun)
[20:17:15] *** Quits: c4017w__ (~c4017@209.52.68.8) (Ping timeout: 256 seconds)
[20:17:23] <zrsm> mav`rik thx man -- yeah I am avoiding using others because this is so I can learn more about writing wrappers/libraries on my own too :)
[20:17:24] *** Quits: wyclif (~wyclif@user/wyclif) (Ping timeout: 240 seconds)
[20:17:25] *** Quits: tobybl (~tobybl@227.192.115.87.dyn.plus.net) (Remote host closed the connection)
[20:17:44] <TML> and this particular customer has ~18TiB of PDF files that need to be batch processed, and they generate about 2-300 new PDFs every day (it's a print-focused organization), and about 2% of them run into this problem
[20:17:48] *** Quits: merijn (~merijn@c-001-001-001.client.esciencecenter.eduvpn.nl) (Ping timeout: 240 seconds)
[20:17:59] *** Joins: sprnk[m] (~sprnkmatr@2001:470:69fc:105::1:cd74)
[20:17:59] *** Joins: SaltHilStroller_ (~SaltHillS@206.223.160.26)
[20:18:05] *** Joins: wyclif (~wyclif@user/wyclif)
[20:18:31] *** Quits: ubert1 (~Thunderbi@2a02:8109:9880:303c:e5eb:8f18:bf2f:b46e) (Remote host closed the connection)
[20:18:33] *** Joins: Commaster (~Commaster@dslb-002-204-205-169.002.204.pools.vodafone-ip.de)
[20:18:57] *** Quits: MajorBiscuit (~MajorBisc@wlan-145-94-218-48.wlan.tudelft.nl) (Ping timeout: 240 seconds)
[20:19:06] <mav`rik> TML: That must mean you have a good data-set for "features that this 2% share"?
[20:19:17] *** Quits: nuclearg1 (~nucleargr@user/nuclearg1) (Ping timeout: 256 seconds)
[20:19:27] <TML> mav`rik: Yeah, we've eliminated a lot of things
[20:19:45] *** Quits: wakeup (~wakeup@user/wakeup) (Quit: Client closed)
[20:20:17] *** Quits: Enitin (~Enitin@82.180.145.226) (Ping timeout: 240 seconds)
[20:20:25] *** Quits: mav`rik (~unknown@ec2-54-171-126-99.eu-west-1.compute.amazonaws.com) (Quit: leaving)
[20:20:28] *** Quits: bindu (~bindu@user/bindu) (Remote host closed the connection)
[20:20:44] *** Joins: bindu (~bindu@user/bindu)
[20:20:56] *** Joins: Enitin (~Enitin@82.102.22.84)
[20:21:08] *** Quits: SaltHillStroller (~SaltHillS@199.249.111.186) (Ping timeout: 252 seconds)
[20:22:23] *** Quits: yakiza (~yakiza@cpc91202-cmbg18-2-0-cust102.5-4.cable.virginm.net) (Quit: WeeChat 3.4)
[20:22:40] *** Joins: yakiza (~yakiza@cpc91202-cmbg18-2-0-cust102.5-4.cable.virginm.net)
[20:23:00] *** Quits: wyclif (~wyclif@user/wyclif) (Ping timeout: 240 seconds)
[20:23:21] *** Quits: qlixed (~qlixed@181.44.129.13) (Quit: That's all folks!!)
[20:23:33] *** Joins: weibullguy (weibullguy@gateway/vpn/protonvpn/weibullguy)
[20:23:36] *** Joins: wyclif (~wyclif@user/wyclif)
[20:24:11] *** Joins: Lando-SpacePimp (~Lando-Spa@user/lando-spacepimp)
[20:24:50] *** Joins: magla (~gelignite@55d49742.access.ecotel.net)
[20:25:12] *** Quits: rje (~textual@50.35.241.164) (Quit: My MacBook has gone to sleep. ZZZzzz…)
[20:25:32] *** Joins: bitkiller (~bitkiller@user/bitkiller)
[20:27:51] *** Quits: pkapp (~pkapp@2601:58c:c500:6900:3d07:cf9b:601d:74a2) (Quit: ZNC 1.7.5+deb4 - https://znc.in)
[20:28:00] *** Joins: duszek (~duszek@apm138.neoplus.adsl.tpnet.pl)
[20:28:06] *** Joins: pkapp (~pkapp@c-75-74-40-214.hsd1.fl.comcast.net)
[20:28:35] *** Quits: wyclif (~wyclif@user/wyclif) (Ping timeout: 256 seconds)
[20:28:45] <duszek> how to detect if the number is integer?
[20:28:56] <duszek> https://bpa.st/VLOA
[20:29:06] *** Joins: wyclif (~wyclif@user/wyclif)
[20:30:11] *** Joins: zebrag (~chris@user/zebrag)
[20:31:20] <duszek> https://bpa.st/5DCA
[20:32:02] <grym> duszek: isinstance won't work, but your modulo test isn't a bad idea
[20:32:16] <duszek> i have done that and it doesn't detect
[20:32:26] *** Joins: kosh (~kosh@user/kosh)
[20:32:32] <duszek> basically I need to cube root and check if the number is still integer
[20:32:34] *** Quits: wovixo (~wovixo@128.104.205.49) (Quit: Leaving)
[20:32:40] *** Joins: nuclearg1 (~nucleargr@user/nuclearg1)
[20:33:12] <duszek> and I think it's (j ** (1/3)) % 1 == 0 but I'm noob at programming and not sure what I'm doing wrong
[20:33:30] <foo> What's the difference between a break and a continue in a for loop? They seem almost exactly the same
[20:33:49] <carlio> foo: break completely exits the iteration, continue moves on to the next item in the iteration
[20:34:41] <grym> duszek: works fine https://bpa.st/W5NQ
[20:35:27] <duszek> so I have to find the problem somewhere else
[20:35:30] <duszek> so I was righ
[20:35:39] *** Quits: SaltHilStroller_ (~SaltHillS@206.223.160.26) (Quit: Leaving)
[20:35:50] *** Joins: SaltHillStroller (~SaltHillS@206.223.160.26)
[20:37:12] *** Quits: nuclearg1 (~nucleargr@user/nuclearg1) (Ping timeout: 250 seconds)
[20:39:00] *** Quits: dntreou (~yakiza@inet-2a02-6900-8808-e010--379.oracle-ocna.com) (Ping timeout: 268 seconds)
[20:39:19] *** Joins: qlixed (~qlixed@152.170.36.244)
[20:39:37] *** Quits: dez (uid92154@user/dez) (Quit: Connection closed for inactivity)
[20:39:38] <foo> carlio: break exits iteration and goes to the next iteration after it exits, right?
[20:40:16] <mcon> What is the right spell to strip the first line from a (supposedly multiline) string? the trivial `s.splitlines()[1]` fails (IndexError: list index out of range) if `s` is something like 'bla bla bla\r\n'; in that case I need `s=''`. I know I can catch the exception, but is there a "more pythonic" way?
[20:40:18] <carlio> foo: no it just stops the for-loop completely. "continue" is "skip this item in the list" while "break" means "abandon this loop, ignore the rest of the list"
[20:40:27] *** Quits: foobaz21289 (~foobaz212@152.37.103.80) (Quit: Client closed)
[20:40:35] <foo> carlio: ohhhhh
[20:40:38] <TML> foo: break stops it from looping any further
[20:40:40] <sprnk[m]> So python tells me 256**3=16777216
[20:40:40] <sprnk[m]> if I do (16777216)**(1/3) it returns 255.99999999999991
[20:40:40] *** Joins: foobaz21289 (~foobaz212@152.37.103.80)
[20:40:49] <foo> ok, ok, that makes sense.
[20:40:52] <grym> sprnk[m]: welcome to floating point math
[20:40:54] <foo> TML / carlio - thank you
[20:42:04] <sprnk[m]> grym: That code will always miss something then, no?
[20:42:08] <TML> sprnk[m]: https://docs.oracle.com/cd/E19957-01/806-3568/ncg_goldberg.html#:~:text=Almost%20every%20language%20has%20a,point%20exceptions%20such%20as%20overflow.
[20:42:13] <grym> sprnk[m]: there's some unavoidable loss of precision when you do math with floats
[20:42:20] <grym> in any language
[20:42:56] *** Quits: brabrax (~brabrax@user/brabrax) (Quit: ZNC 1.8.2 - https://znc.in)
[20:43:40] <carlio> mcon: s.splitlines()[1:]  will get you every line that isn't the first one, but as a list of lines so you'd have to join them again
[20:43:49] *** Joins: brabrax (~brabrax@user/brabrax)
[20:44:06] <carlio> but if there's only one line you'll get nothing, if that's what you want
[20:44:12] *** Quits: cdman (~dcm@user/dmc/x-4369397) (Quit: Leaving)
[20:44:27] <graingert[m]> nedbat: seems related to this https://github.com/python/cpython/commit/f5e97b72fecff9b9ced35704ec5e6cad29e2825d#diff-ebc983d9f91e5bcf73500e377ac65e85863c4f77fd5b6b6caf4fcdf7c0f0b057R2777
[20:44:30] *** Joins: cdman (~dcm@user/dmc/x-4369397)
[20:44:54] *** Quits: foobaz21289 (~foobaz212@152.37.103.80) (Client Quit)
[20:45:08] *** Joins: foobaz212 (~foobaz212@152.37.103.80)
[20:45:35] *** Quits: mcleuder (~mcleuder@gateway/tor-sasl/mcleuder) (Ping timeout: 240 seconds)
[20:45:56] *** Joins: zfnmxt (~zfnmxtzfn@user/zfnmxt)
[20:46:11] <mcon> sprnk[m]: problem is direct operations (like cube()) can remain in the same domain as the argument (i.e.: an in remains an int) inverse operations push you out of argument domain, so from int you automatically fall into real (float) even if, as in this case, it *could* have an int value.
[20:46:18] <theseb> What is the #1 value add that python Jupyter notebooks deliver?  There is something weird about notebooks I can't quite put my finger on it.  One weird thing is a notebook lets you run PIECES of your program.  I'm not sure any Python editor makes it easy to run just a few highlighted sections of code.  At least I've never seen that.  So that IS one odd thing notebooks do
[20:46:44] <theseb> is that the main reason people like them?
[20:47:29] <theseb> Well plus you can bundle the output together with the source?
[20:48:04] <EdFletcher> yeah they're a form of "literate programming", which is indeed a unique paradigm https://en.wikipedia.org/wiki/Literate_programming
[20:48:04] <han-solo> mcon: `with open(...) as f:..next(f); line = next(f, '')`
[20:48:34] *** Joins: rje (~textual@65.141.156.170)
[20:48:37] *** Joins: hams (~hams@73.232.205.0)
[20:48:37] *** Quits: hams (~hams@73.232.205.0) (Changing host)
[20:48:37] *** Joins: hams (~hams@user/hams)
[20:49:36] *** Joins: blei (~blei@user/blei)
[20:49:44] *** Joins: RedAero (~RedAero@563BBC4C.dsl.pool.telekom.hu)
[20:50:00] *** Quits: stats4647 (~stats4647@ip174-67-220-13.oc.oc.cox.net) (Remote host closed the connection)
[20:50:14] *** Joins: nuclearg1 (~nucleargr@user/nuclearg1)
[20:50:25] <RedAero> I'm trying to connect to an oracle DB using SQLAlchemy, does anyone know how I can pass cx_Oracle.init_oracle_client to the create_engine function?
[20:50:31] *** Joins: Trashlord (~trash@user/trashlord)
[20:50:38] <RedAero> I'd rather not import cx_Oracle just for that
[20:50:52] <theseb> EdFletcher: isn't it odd that programming editors don't let you run pieces of your program?
[20:50:54] *** Quits: SirScott (~SirScott@c-67-176-100-163.hsd1.co.comcast.net) (Quit: The Lounge - https://thelounge.chat)
[20:50:56] <RedAero> by default it's finding the x86 client
[20:51:23] *** Joins: SirScott (~SirScott@c-67-176-100-163.hsd1.co.comcast.net)
[20:53:00] *** Joins: pyeveryt_ (~pyeveryth@64-18-153-56.starry-inc.net)
[20:53:13] *** Quits: pyeveryt_ (~pyeveryth@64-18-153-56.starry-inc.net) (Remote host closed the connection)
[20:53:14] *** Joins: stdInOut (~stdInOut@user/stdInOut)
[20:53:29] *** Joins: pyeveryt_ (~pyeveryth@64-18-153-56.starry-inc.net)
[20:54:10] *** Joins: maryo (~Maryo@user/maryo)
[20:54:32] *** Quits: nuclearg1 (~nucleargr@user/nuclearg1) (Ping timeout: 240 seconds)
[20:54:38] *** Quits: EvilDMP (~textual@django/moderator/EvilDMP) (Quit: My MacBook has gone to sleep. ZZZzzz…)
[20:55:24] <jinsun__> theseb: well they allow you to copy parts of your program, and paste in a repl
[20:55:48] <SaltHillStroller> Is there a way to parse a serialized binary struct into JSON, given the C header file?
[20:56:07] *** Quits: Henry_ (~mahengrui@user/mahengrui1) (Ping timeout: 256 seconds)
[20:56:15] <SaltHillStroller> And/or generate a Python class based on a C header file?
[20:56:50] <SnoopJ> SaltHillStroller, is this data you're stuck with, or do you have the option of changing it? This sounds like a natural fit for BSON
[20:57:10] <SaltHillStroller> I can change it!
[20:57:10] *** Joins: mcleuder (~mcleuder@gateway/tor-sasl/mcleuder)
[20:57:25] <EdFletcher> theseb: well... i mean depends on your perspective, if you're used to traditional workflows then you might say its odd that an editor lets you just run little bits at a time 😃
[20:58:47] <SnoopJ> SaltHillStroller, I would suggest maybe seeing if BSON or another format that serializes to a compact binary representation (protobuf comes to mind but there are others) can do what you want
[20:58:54] <SaltHillStroller> I have a C userspace application receiving serialized structs, and I'm currently hand-writing the JSON conversion of the structs. I figured there might be a way to have Python auto-generate that for me :)
[20:59:31] <SnoopJ> SaltHillStroller, you *can* use the `struct` module to unpack binary data if you know what the types are, but I'm not sure if there's any tool that will eat a C struct declaration and spit out deserialization logic for it
[20:59:57] <carlio> Perhaps protocol buffers would help?
[21:00:02] <SaltHillStroller> I could alternatively read the serialized struct in Python. That would only be convient if there was a way to runtime generate classes based off of header-files
[21:00:08] <EdFletcher> would require redefining the struct in their DSL but kaitai might be a good middle ground: https://kaitai.io/
[21:00:17] <EdFletcher> but yes protobufs would also be a good solution here
[21:01:02] <EdFletcher> well, except protobufs follow their own wire format by default, so if you're parsing a pre-existing wire format their not appropriate
[21:01:07] <EdFletcher> *they're
[21:01:14] <SnoopJ> SaltHillStroller, there's a CFFI example that is a bit like this, but I haven't used it enough to know where the pain points are with your approach: https://cffi.readthedocs.io/en/latest/overview.html#struct-array-example-minimal-in-line
[21:01:14] *** Quits: nishant (~Nishant@49.37.242.151) (Quit: Leaving)
[21:01:25] *** Quits: schumaml (~schumaml@ipservice-092-211-201-195.092.211.pools.vodafone-ip.de) (Ping timeout: 240 seconds)
[21:01:54] *** Joins: p|q (~plq@94.54.154.86)
[21:02:00] <SaltHillStroller> Ooh, interesting
[21:02:01] <SnoopJ> it's a little less fuss if you can pick an interchange format (like BSON, protobuf) on either side of the language boundary and use the relevant (de)serialization machinery from each language
[21:02:18] *** Quits: hexenbane9 (~hexenbane@fixed-187-188-14-118.totalplay.net) (Quit: The Lounge - https://thelounge.chat)
[21:02:18] <SnoopJ> (I mention BSON only because it's a very natural extension of JSON in the direction I think you want?)
[21:02:19] *** Joins: merijn (~merijn@c-001-001-001.client.esciencecenter.eduvpn.nl)
[21:02:45] <SnoopJ> or I guess not extension, it's kind of a slant rhyme. It's the thing that always comes to mind when I think "I want JSON, but binary"
[21:03:21] *** Quits: mcleuder (~mcleuder@gateway/tor-sasl/mcleuder) (Remote host closed the connection)
[21:03:21] *** Quits: kevr (~kevr@user/kevr) (Remote host closed the connection)
[21:03:29] *** Joins: schumaml (~schumaml@dslb-178-007-206-216.178.007.pools.vodafone-ip.de)
[21:03:39] *** Joins: kevr (~kevr@user/kevr)
[21:03:53] *** Joins: mcleuder (~mcleuder@gateway/tor-sasl/mcleuder)
[21:05:09] <SaltHillStroller> Looking at the documentation, I'm unclear as to what BSON does. It converts a binary stream into JSON?
[21:06:11] *** Joins: markb1 (~markb1@2600:1700:eb40:7ecf:1a76:2017:77ff:dd44)
[21:06:54] <SnoopJ> SaltHillStroller, it's a separate interchange format that is "like" JSON, but the format is more compact.
[21:07:24] *** Joins: nuclearg1 (~nucleargr@user/nuclearg1)
[21:07:36] <SnoopJ> related to MongoDB, but used in other contexts (my original exposure was a game that used it as a basis for savegames)
[21:07:48] *** Joins: FluffyMask (~masque@user/fluffymask)
[21:08:32] *** Quits: maryo (~Maryo@user/maryo) (Ping timeout: 240 seconds)
[21:08:56] <SaltHillStroller> SnoopJ: Okay gotcha. Perhaps not what I'm looking for. TLDR I want to write C structs into a database. The easiest way I can think of is to convert the struct to JSON and write it to a text file. The problem being, I have lots of structs, and hand writing C JSON converters is tediuos. My goal would be to, given C header files with struct definitions, create Python classes that I can populate with the binary data and then serialize it to file
[21:08:56] <SaltHillStroller> using the JSON module
[21:09:18] <SnoopJ> SaltHillStroller, are you not able to add a serialization library to your C dependencies?
[21:09:24] *** Quits: weibullguy (weibullguy@gateway/vpn/protonvpn/weibullguy) (Ping timeout: 240 seconds)
[21:09:28] <SnoopJ> (that was basically what my original question was aimed at)
[21:09:34] <sprnk[m]> <mcon> "sprnk: problem is direct..." <-  I like that explanation. There are also complex roots (in taylor expansion) I forgot to consider. Just to add a data point to the mis-matching of domains.
[21:09:41] *** Joins: wovixo (~wovixo@128.104.205.49)
[21:10:35] <SaltHillStroller> SnoopJ: Is there such a thing? I haven't come across one for C
[21:10:39] *** Quits: tomeaton17 (~tomeaton1@92.234.2.175) (Quit: Client closed)
[21:11:10] <SaltHillStroller> I guess I'm ignoring Protobuf
[21:11:36] <Commaster> SnoopJ, so I tried Redis. I seems to be limited to a key-value store, no nesting allowed. I then tried Mongo which should've allowed nested dicts, but it's limited to 16MB per entry, much lower than the needed 120MB. Since my (json) dict has multiple nesting layers with more lists/dicts it seems there isn't a ready to go database solution, short of
[21:11:36] <Commaster> requesting the whole dict from the database and still wasting RAM in each instance.
[21:11:48] *** Quits: schumaml (~schumaml@dslb-178-007-206-216.178.007.pools.vodafone-ip.de) (Ping timeout: 240 seconds)
[21:12:45] <SnoopJ> SaltHillStroller, I think so? I don't know about for C specifically but I know there's plenty of choices for C++ and a lot of them don't use fancy language features, so I would expect similar availability for C
[21:13:00] *** Joins: Elzington_ (~Elzington@87.249.134.26)
[21:13:08] <EdFletcher> Commaster: Redis is very foundational, you build data structures from its primitives. You can surely implement that in Redis either with proper key partitioning or just by jamming your whole JSON into a single key (though maybe not that because then you lose a lot of the potential value)
[21:13:16] <SnoopJ> looks like MongoDB maintains a libbson component as part of their *waves hands*
[21:13:44] *** Joins: schumaml (~schumaml@dslb-178-007-193-156.178.007.pools.vodafone-ip.de)
[21:13:55] <EdFletcher> Mongo is … not great. Best avoided.
[21:14:25] *** Joins: c4017w__ (~c4017@209.52.68.8)
[21:14:55] *** Joins: FreeBDSM (~FreeBDSM@user/freebdsm)
[21:15:08] <Commaster> Cause I'm using several `in` against nested dicts and generating keys for one subdict based on values of other subdicts.
[21:15:16] *** Quits: nomic (~nomic@185.217.117.111) (Quit: Leaving)
[21:15:22] <RedAero> I'm querying a DB with SQLAlchemy through pandas - do I need to do anything to "close" the connection?
[21:15:28] <jinsun__> nice utf8 mode by default proposed, https://peps.python.org/pep-0686/ hopefully it will get accepted, writing encoding="utf8" all the time to avoid windows stupid defaults is annoying
[21:15:29] <FreeBDSM> hi. A function expects a list. How to merge 2 lists on the go so that I could avoid calling the function twice?
[21:15:36] *** Quits: Elzington (~Elzington@87.249.134.10) (Ping timeout: 252 seconds)
[21:15:38] *** Joins: nomic (~nomic@185.217.117.111)
[21:15:57] *** Joins: greedom (~greedom@p200300de671607008591ff28a3781825.dip0.t-ipconnect.de)
[21:16:08] <SnoopJ> FreeBDSM, `joined_list = lst1 + lst2` or you could do it at the call site as: `func([*lst1, *lst2])`
[21:16:14] <FreeBDSM> can't I just call it like myfunc(list1+list2)?
[21:16:19] <SnoopJ> oh yea, or that
[21:16:31] *** Quits: brabrax (~brabrax@user/brabrax) (Quit: ZNC 1.8.2 - https://znc.in)
[21:16:45] *** Joins: widp (~user@124.123.106.87)
[21:16:56] <FreeBDSM> SnoopJ, is [*list1, *list2] variant better?
[21:17:23] *** Joins: brabrax (~brabrax@user/brabrax)
[21:17:28] <SnoopJ> FreeBDSM, I would say they're about the same
[21:17:48] *** Quits: c4017w_ (~c4017@209.52.68.8) (Ping timeout: 252 seconds)
[21:18:15] <BtbN> Anyone migrated a JupyterHub to 2.0? My admin user seems to have lost its power to do much of anything, despite being marked admin in the DB.
[21:20:14] *** Quits: diogenese (~diogenese@diogenese.velotech.net) (Quit: Has anybody seen the bridge?)
[21:20:32] *** Joins: diogenese (~diogenese@diogenese.velotech.net)
[21:21:17] *** Joins: Trashlord__ (~trash@user/trashlord)
[21:21:20] <FreeBDSM> SnoopJ, if my lists are inside of an obj, like myobj['lists'][0]['ids'] and myobj['lists'][1]['ids'], is there a way to write it shorter than myobj['lists'][0]['ids']+myobj['lists'][1]['ids']?
[21:21:38] <FreeBDSM> maybe [0:1]
[21:21:41] <FreeBDSM> or something
[21:21:48] *** Quits: bleb (~cm@user/bleb) (Ping timeout: 240 seconds)
[21:22:41] *** Quits: CodePoint (~jonathan@107-208-128-79.lightspeed.tukrga.sbcglobal.net) (Quit: CodePoint struts into the sunset on the beach.)
[21:24:12] *** Joins: oriba (~oriba@dynamic-078-054-218-125.78.54.pool.telefonica.de)
[21:25:02] <Commaster> EdFletcher, the goal is to share an immutable ~120MB dict (with nested stuffs) between multiple py apps to save RAM in each app instance. And sadly the shared_memory module only offers raw memory, no ready-to-use objects.
[21:25:16] *** Joins: sobkas (~sobkas@95.175.17.217)
[21:25:19] *** Quits: foobaz212 (~foobaz212@152.37.103.80) (Quit: Client closed)
[21:25:30] *** Joins: foobaz212 (~foobaz212@152.37.103.80)
[21:26:12] <tusko> Anyone familiar with sympy? I need to generate a square wave that repeats with period T
[21:26:20] <tusko> Not finding that in the docs
[21:26:22] <EdFletcher> Commaster: ah yeah, redis is a great choice for that use case then. try to find a way to partition your dict across a set of keys (using the keys for those nested dicts as subkey names for example) and you'll be golden.
[21:26:36] *** Quits: revolve (~u0_a227@cpc100838-bagu15-2-0-cust672.1-3.cable.virginm.net) (Ping timeout: 252 seconds)
[21:27:02] *** Joins: ackyshake (~ackyshake@user/ackyshake)
[21:27:52] <carlio> EdFletcher: would it require de-serializing from the Redis data structure into a python object for each app though? I've not used Redis for this kind of things so I don't know.
[21:27:52] *** Quits: duszek (~duszek@apm138.neoplus.adsl.tpnet.pl) (Quit: Leaving)
[21:28:08] <jinsun__> FreeBDSM: [item for list_ in (myobj['lists'][x]['ids'] for x in [0, 1]) for item in list_]
[21:28:34] *** Joins: revolve (~u0_a227@82-132-238-62.dab.02.net)
[21:28:50] <jinsun__> doesn't look much better if you have only 2, but it scales better
[21:28:52] <FreeBDSM> jinsun__, looks unreadable, got it, thanks
[21:28:59] <EdFletcher> carlio: yup it would but you can pickle into and out of redis directly (its "strings" are just binary and can accordingly store any data) so the overhead should be minimal
[21:29:36] <SnoopJ> tusko, you could define that function as: `def f(t): 0 if t//(T/2) % 2 else 1` (you might want to modify that a bit for sympy, but the same idea holds)
[21:29:40] <EdFletcher> but even if you need to go back and forth between JSON stored in redis, as long as the key partitioning is done well such that no key stores a massive value, the overhead will remain manageable
[21:29:40] *** Quits: zeden (~zeden@user/zeden) (Quit: WeeChat 3.4.1)
[21:29:47] *** Quits: zen_coder (~zen_coder@2a02:8109:a280:2d8d:d91b:267d:4123:397) (Quit: Konversation terminated!)
[21:29:55] *** Quits: Trashlord (~trash@user/trashlord) (Quit: "True ignorance is not the absence of knowledge, but the refusal to acquire it.")
[21:30:12] *** Joins: moog_ (~moog@107.126.53.19)
[21:30:16] <Commaster> My leaf data types are just strings, ints and nulls, so hopefully no pickling will be necessary *fingers crossed*
[21:30:19] *** Trashlord__ is now known as Trashlord
[21:30:21] *** Quits: foobaz212 (~foobaz212@152.37.103.80) (Ping timeout: 256 seconds)
[21:30:41] <EdFletcher> redis itself is extraordinarily fast (on the order of microseconds) so the actual access times will be in the noise floor of overall execution cost
[21:30:46] *** Quits: rindolf (~shlomif@inkscape/dev/shlomif) (Read error: Connection reset by peer)
[21:30:47] <carlio> so it would still be using up 120Mb *per app* rather than sharing a reference to the same memory? which I think is what Commaster wanted?
[21:31:10] *** Joins: rindolf (~shlomif@inkscape/dev/shlomif)
[21:31:20] <EdFletcher> oh no, if all the data is stored solely in redis then there is only one instance of it on the system
[21:31:33] *** Quits: merijn (~merijn@c-001-001-001.client.esciencecenter.eduvpn.nl) (Ping timeout: 252 seconds)
[21:31:38] <EdFletcher> no duplication, which i believe is one of the main goals here
[21:31:49] *** Quits: ackyshake (~ackyshake@user/ackyshake) (Ping timeout: 256 seconds)
[21:32:15] <Commaster> does redis allow len(subdict) maybe using a wildcard key?
[21:32:27] <EdFletcher> yes each app will periodically query subsets of that data to do its work of course, but the point is that each process doesn't have the entire data set resident
[21:32:39] *** Quits: frostschutz (~frostschu@2a01:c23:7c7d:a600:9c29:dc23:ff87:43b4) (Ping timeout: 268 seconds)
[21:32:40] *** Quits: moog (~moog@98.97.81.132) (Ping timeout: 250 seconds)
[21:32:48] <akk> tusko: I've generated square waves with scipy.signal.square(), sorry, haven't tried sympy
[21:33:02] <EdFletcher> Commaster: yeah the `keys` command accepts patterns, then you can count the resulting list values to get the number of
[21:33:08] <tusko> thanks akk
[21:33:08] <carlio> oh now I get it, I was foolishly thinking it would require deserializing the entire 120mb of data for each access, derp :)
[21:33:49] <EdFletcher> carlio: haha well admittedly i did initially suggest (with a big caveat) that one way to accomplish this was just jam the entire dict as JSON into redis, but that's obviously a terrible idea for _exactly_ the reason you note here 😆
[21:34:04] *** Joins: vlado (~vlado@2800:484:3587:3c90:8bf1:66d4:72a6:4f9c)
[21:34:13] *** Joins: moog__ (~moog@98.97.81.132)
[21:34:25] <EdFletcher> so yeah, the TL;DR is that key partitioning is critical to _efficient_ use of redis in this case
[21:34:49] *** Quits: rpkilby (~rpkilby@c-24-20-208-106.hsd1.or.comcast.net) (Remote host closed the connection)
[21:35:38] *** Joins: rpkilby (~rpkilby@c-24-20-208-106.hsd1.or.comcast.net)
[21:35:48] *** Joins: mogad0n (~mogad0n@user/mogad0n)
[21:35:48] <Commaster> I bet there isn't a nice dict-API wrapper over redis so I will have to rewrite all my ... 300+ dict references. Oh well, RAM requires sacrifices
[21:36:32] *** Quits: envex (~envex@cpe-173-91-189-33.neo.res.rr.com) (Ping timeout: 240 seconds)
[21:36:34] *** Quits: moog_ (~moog@107.126.53.19) (Ping timeout: 250 seconds)
[21:37:14] <EdFletcher> there are tons of caching libraries that use redis as a backing store, one of those may fit your use case pretty well
[21:37:37] *** Quits: flea (nosoul@gateway/vpn/protonvpn/nosoul) (Quit: Leaving)
[21:37:49] <Commaster> ooh, caching! Thank you
[21:38:17] <EdFletcher> but yeah, generally speaking as i mentioned before redis is very fundamental so most of the time you're looking for specific implementations built _on top of_ redis
[21:38:17] *** Joins: pretty_dumm_guy (trottel@gateway/vpn/protonvpn/prettydummguy/x-88029655)
[21:38:23] *** Quits: brabrax (~brabrax@user/brabrax) (Quit: ZNC 1.8.2 - https://znc.in)
[21:38:32] *** Quits: ghost43 (~ghost43@gateway/tor-sasl/ghost43) (Remote host closed the connection)
[21:38:32] <EdFletcher> Commaster: sure thing, best of luck! and of course have fun! redis is _awesome_, i hope you enjoy learning it
[21:38:53] *** Joins: ghost43 (~ghost43@gateway/tor-sasl/ghost43)
[21:39:09] *** Quits: FinnElija (~finn_elij@user/finn-elija/x-0085643) (Quit: FinnElija)
[21:39:21] *** Joins: brabrax (~brabrax@user/brabrax)
[21:39:26] *** Parts: velix (~velix@user/velix) (Leaving)
[21:39:49] *** Joins: jazzy (~jaziz@user/jaziz)
[21:39:59] *** Joins: williampiv (~williampi@ip24-254-86-223.sb.sd.cox.net)
[21:39:59] *** Quits: widp (~user@124.123.106.87) (Read error: Connection reset by peer)
[21:40:14] *** Quits: Techcable (~Techcable@168.235.93.147) (Remote host closed the connection)
[21:40:22] *** Joins: Techcable (~Techcable@168.235.93.147)
[21:40:23] *** Joins: jmd (~user@de.cellform.com)
[21:40:26] *** Quits: yakiza (~yakiza@cpc91202-cmbg18-2-0-cust102.5-4.cable.virginm.net) (Quit: WeeChat 3.4)
[21:40:28] *** Quits: rpkilby (~rpkilby@c-24-20-208-106.hsd1.or.comcast.net) (Ping timeout: 250 seconds)
[21:40:46] *** Quits: williampiv (~williampi@ip24-254-86-223.sb.sd.cox.net) (Client Quit)
[21:41:24] *** Quits: zAfio (~dev@213.133.91.246) (Ping timeout: 240 seconds)
[21:41:45] *** Joins: yakiza (~yakiza@cpc91202-cmbg18-2-0-cust102.5-4.cable.virginm.net)
[21:42:12] *** Quits: jpn (~jpn@user/jpn) (Ping timeout: 250 seconds)
[21:42:50] *** Joins: weibullguy (~weibullgu@024-236-222-047.res.spectrum.com)
[21:44:05] <Commaster> pypi `redis-dict` is so close, but doesn't allow nesting. The quest continues
[21:44:19] *** Joins: FinnElija (~finn_elij@user/finn-elija/x-0085643)
[21:44:26] *** Joins: jpn (~jpn@user/jpn)
[21:44:49] <fakenullie> does redis even allow nested dicts?
[21:45:14] *** Joins: rpkilby (~rpkilby@c-24-20-208-106.hsd1.or.comcast.net)
[21:45:20] *** Joins: frostschutz (~frostschu@2a01:c23:8492:9e00:3bc7:2fc8:391e:584d)
[21:45:22] <fakenullie> I guess you have to serialize dicts if they are nested
[21:45:25] *** Joins: Zeturic (~Orimendix@50.26.218.162)
[21:45:40] <Commaster> the plan is to have complicated keys instead
[21:45:54] <Commaster> serialization would ruin the goal of saving RAM
[21:46:04] <fakenullie> why?
[21:46:09] <fakenullie> I'd say opposite
[21:46:31] <fakenullie> with long keys you'd use more memory
[21:46:34] *** Quits: squirrel (uid529456@user/squirrel) (Quit: Connection closed for inactivity)
[21:46:41] <EdFletcher> fakenullie: as i mentioned earlier you'd use key partitioning instead to store nested data structures\
[21:47:10] *** Quits: stdInOut (~stdInOut@user/stdInOut) (Quit: Leaving)
[21:47:35] *** Quits: han-solo (~han-solo@user/han-solo) (Quit: leaving)
[21:47:42] *** Quits: ano (~ano@user/ano) (Quit: ano)
[21:47:57] *** Joins: roxfan (~roxfan@2a02:a03f:a2be:4f00:e5ca:75c5:cd2a:1a81)
[21:48:18] <Commaster> deserialization allocates RAM in the current process for the dict (even if temporary). And hammering syscalls for allocations/deallocations is even more evil than just holding the whole 120MB dict in the first place
[21:48:27] *** Joins: muniv[m] (~uztojemat@2001:470:69fc:105::20fb)
[21:48:50] <fakenullie> indeed
[21:49:33] *** Quits: rpkilby (~rpkilby@c-24-20-208-106.hsd1.or.comcast.net) (Ping timeout: 250 seconds)
[21:50:06] <Commaster> My initial hopes were high because of my immutability limitation, but they were shattered
[21:50:11] *** Quits: schumaml (~schumaml@dslb-178-007-193-156.178.007.pools.vodafone-ip.de) (Quit: WeeChat 3.4)
[21:50:56] *** Joins: fling (~fling@user/fling)
[21:51:28] *** Quits: ghost43 (~ghost43@gateway/tor-sasl/ghost43) (Remote host closed the connection)
[21:51:42] *** Parts: muniv[m] (~uztojemat@2001:470:69fc:105::20fb) ()
[21:52:01] *** Joins: KombuchaKip (~kip@192.252.230.5)
[21:52:10] *** Quits: cliluw (~cliluw@47.147.77.43) (Ping timeout: 250 seconds)
[21:52:17] *** Joins: ghost43 (~ghost43@gateway/tor-sasl/ghost43)
[21:52:19] *** Joins: HiccupJul (~HiccupJul@cpc122682-reig6-2-0-cust39.6-3.cable.virginm.net)
[21:52:27] *** Quits: jpn (~jpn@user/jpn) (Ping timeout: 252 seconds)
[21:52:51] *** Joins: cliluw (~cliluw@47.147.77.43)
[21:52:56] *** Joins: jpn (~jpn@user/jpn)
[21:53:10] *** Joins: g1eb_ (~g1eb@user/g1eb)
[21:53:11] *** Quits: XV8 (~XV8@2601:5cb:c001:50::4f47) (Quit: My MacBook has gone to sleep. ZZZzzz…)
[21:53:14] *** Quits: yakiza (~yakiza@cpc91202-cmbg18-2-0-cust102.5-4.cable.virginm.net) (Remote host closed the connection)
[21:53:31] *** Joins: yakiza (~yakiza@cpc91202-cmbg18-2-0-cust102.5-4.cable.virginm.net)
[21:53:32] <g1eb_> hi team! Quick question about the csv DictReader module
[21:54:04] <g1eb_> it's reading in a tweet and interprets ^M characters as a newline then reads the rest of the tweet as if it was a separate tweet :/
[21:54:26] <bjs> g1eb_: what is a ^M character
[21:54:41] <phy1729> Commaster: Have you checked with strace you're hammering syscalls? Should just have to make syscalls for the initial allocations if your new objects roughly match garbage collection
[21:55:17] <g1eb_> bjs: i have no idea haha
[21:55:29] <g1eb_> microsoft version of a new line char?
[21:55:32] <phy1729> Probably a \r or carrage return
[21:56:29] *** g1eb_ is now known as g1eb
[21:56:56] *** Quits: slavfox (~slavfox@93.158.232.111) (Ping timeout: 250 seconds)
[21:57:16] *** Joins: slavfox (~slavfox@93.158.232.111)
[21:58:26] <ldericher> is `Type | None` now generally preferred over `Optional[Type]`?
[21:58:51] <grym> ldericher: depends on what your minimum supported python version is
[21:58:53] <SnoopJ> ldericher, if you're targeting only runtimes that support the new syntax, I believe so
[21:58:57] *** Joins: zen_coder (~zen_coder@2a02:8109:a280:2d8d:d91b:267d:4123:397)
[21:59:06] *** Quits: yakiza (~yakiza@cpc91202-cmbg18-2-0-cust102.5-4.cable.virginm.net) (Remote host closed the connection)
[21:59:28] *** Joins: marcello42 (~mp@p200300dfaf10fe010e3892c3ca815872.dip0.t-ipconnect.de)
[22:00:07] <ldericher> SnoopJ, grym, yeah, my new package only supports 3.10+ (it's supposed to run in a container anyway)
[22:00:38] <dob1> I don't understand how do you read this:   def request(flow: http.HTTPFlow) -> None:
[22:00:38] <SnoopJ> I guess you can use it on older versions if you `from __future__ import annotations` to defer them
[22:01:01] *** Quits: kostkon_ (~androirc@2.142.66.94.static.otenet.gr) (Ping timeout: 268 seconds)
[22:01:02] <SnoopJ> dob1, that line defines a function named request() that takes a single argument `flow` whose type is http.HTTPFlow, and which returns None
[22:01:20] <SnoopJ> (or at least, that's what the annotations say)
[22:01:22] <dob1> SnoopJ, I never seen this syntax
[22:01:26] *** Joins: pvergain (~Thunderbi@2a01:e0a:223:690:12cd:1121:2d45:1792)
[22:01:33] <ldericher> I'm also astonished I still need to import future annotations for bound methods returning the own class type
[22:02:05] *** Joins: kostkon_ (~androirc@2a02:1388:97:596:169f:bf9f:fa8f:4be8)
[22:02:08] *** Quits: jmiehe (~Thunderbi@user/jmiehe) (Quit: jmiehe)
[22:02:26] <SnoopJ> dob1, they are called "annotations" or sometimes "type hints" https://peps.python.org/pep-0484/
[22:02:27] <HiccupJul> i'm using session.cookies.update = {'cookie': cookie}, but when checking the request headers, the cookie isn't being sent
[22:02:38] <HiccupJul> (this is with the requests library)
[22:02:39] *** Quits: slavfox (~slavfox@93.158.232.111) (Ping timeout: 256 seconds)
[22:02:39] <SnoopJ> HiccupJul, update is a function
[22:02:40] <notevil> g1eb: try the Sniffer, it pre-reads some of the csv file to get the lineterminator correct.  I've found it handy.
[22:02:44] <HiccupJul> ohh
[22:02:57] <g1eb> ooh Sniffer, let me check
[22:02:57] *** Joins: XV8 (~XV8@c-73-148-120-152.hsd1.va.comcast.net)
[22:02:58] <HiccupJul> i wonder why it didn't give an error
[22:03:04] <HiccupJul> well i'll try and use it as a function
[22:03:09] <SnoopJ> HiccupJul, because what you did isn't an error, it replaces the function with a dictionary
[22:03:13] *** Joins: vats (~vats@103.16.30.139)
[22:03:14] <SnoopJ> (that's just nonsense)
[22:03:19] <HiccupJul> ah i see
[22:03:26] <SnoopJ> but it's nonsense the interpreter is happy to do for you
[22:03:30] <HiccupJul> yeah, makes sense
[22:03:40] *** Joins: aslicedbanjo (~aslicedba@host31-48-145-142.range31-48.btcentralplus.com)
[22:03:42] <notevil> g1eb: https://docs.python.org/3/library/csv.html#csv.Sniffer example usage
[22:03:45] <HiccupJul> so to speak :P
[22:04:08] <g1eb> notevil: thank you!
[22:04:19] <ldericher> btw, is there some consensus and/or PEP about avoiding module-level variables (i.e. using the `global` keyword)?
[22:04:19] *** Quits: brabrax (~brabrax@user/brabrax) (Quit: ZNC 1.8.2 - https://znc.in)
[22:04:30] *** Joins: slavfox (~slavfox@93.158.232.111)
[22:05:10] *** Quits: theprophet (~theprophe@212.58.102.156) (Quit: Client closed)
[22:05:16] *** Joins: brabrax (~brabrax@user/brabrax)
[22:05:17] <dob1> SnoopJ, it's the same that pydantic library use to define types, right?
[22:05:26] <theseb> am i being anal for HATING the fact Jupyter notebooks have the ipython suffix?..ipynb...i want to start a revolution to force the world to use jnb instead..whose with me?
[22:05:39] <SnoopJ> dob1, Pydantic builds a lot of its functionality on top of this language feature, if that's what you're asking
[22:06:08] <HiccupJul> great, script is working now
[22:06:39] *** Quits: raczka3 (~raczka@dedicated-aid6.rev.nazwa.pl) (Ping timeout: 250 seconds)
[22:07:00] *** Joins: foobaz212 (~foobaz212@152.37.103.80)
[22:07:15] <SnoopJ> dob1, the interpreter stores the annotations, so other tools can look at them and do interesting stuff like what Pydantic does: https://bpa.st/OWTA
[22:07:29] *** Joins: marcello1 (~mp@p5084bed4.dip0.t-ipconnect.de)
[22:08:20] *** Quits: mcleuder (~mcleuder@gateway/tor-sasl/mcleuder) (Quit: mcleuder)
[22:08:40] *** Joins: raczka3 (~raczka@dedicated-aid6.rev.nazwa.pl)
[22:09:20] *** Quits: Korra (~textual@216.15.105.161) (Quit: My MacBook has gone to sleep. ZZZzzz…)
[22:10:08] *** Joins: yakiza (~yakiza@cpc91202-cmbg18-2-0-cust102.5-4.cable.virginm.net)
[22:10:51] *** Joins: shibboleth (~shibbolet@user/shibboleth)
[22:11:43] *** Quits: foobaz212 (~foobaz212@152.37.103.80) (Ping timeout: 256 seconds)
[22:11:57] *** Quits: slavfox (~slavfox@93.158.232.111) (Ping timeout: 240 seconds)
[22:12:52] <BinarySavior> my f'' string is too long and triggers PEP checkers. How can I escape a new line or break an f string into two lines
[22:13:06] <BinarySavior> normally I would just use a \ and enter but that doesn't work in the fstring
[22:13:25] <grym> BinarySavior: adjacent strings autoconcat
[22:14:49] *** Joins: slavfox (~slavfox@93.158.232.111)
[22:14:52] <phy1729> What ^ means is you can f'foo {bar} '   f'baz {quux}'   with a newline in the middle (assuming they're inside parens like in a function call)
[22:14:55] *** Quits: revolve (~u0_a227@82-132-238-62.dab.02.net) (Read error: Connection reset by peer)
[22:14:57] *** Quits: kostkon_ (~androirc@2a02:1388:97:596:169f:bf9f:fa8f:4be8) (Ping timeout: 240 seconds)
[22:15:03] *** Joins: c4017w_ (~c4017@209.52.68.8)
[22:15:14] <BinarySavior> thanks grym phy1729
[22:15:32] *** Joins: vurr (~seymon@185.82.72.129)
[22:16:33] *** Joins: revolve (~u0_a227@cpc100838-bagu15-2-0-cust672.1-3.cable.virginm.net)
[22:17:40] *** Quits: BoBeR182 (~BoBeR182@gateway/tor-sasl/bober182) (Remote host closed the connection)
[22:18:02] *** Joins: BoBeR182 (~BoBeR182@gateway/tor-sasl/bober182)
[22:18:30] *** Quits: casastorta (~casastort@neo2.krivokuca.net) (Quit: ZNC 1.8.2 - https://znc.in)
[22:18:31] *** Quits: c4017w__ (~c4017@209.52.68.8) (Ping timeout: 256 seconds)
[22:18:56] *** Quits: whatsupboy (~whatsupbo@user/scobydoo) (Quit: brb)
[22:19:07] *** Joins: esro (~esro@nat1.krakowskiinternet.pl)
[22:19:19] *** Joins: kostkon_ (~androirc@2a02:587:a10f:c988:a923:3f21:2f27:b1a5)
[22:20:13] *** Quits: slavfox (~slavfox@93.158.232.111) (Ping timeout: 256 seconds)
[22:20:21] *** Joins: casastorta (~casastort@neo3.krivokuca.net)
[22:20:25] *** Joins: slavfox_ (~slavfox@93.158.232.111)
[22:20:43] *** Quits: jpn (~jpn@user/jpn) (Quit: Lost terminal)
[22:20:48] *** Quits: fef (~thedawn@user/thedawn) (Quit: Leaving)
[22:20:58] *** Joins: lsd|2 (~kvirc@cpc140240-melt3-2-0-cust92.12-1.cable.virginm.net)
[22:21:03] *** Quits: casastorta (~casastort@neo3.krivokuca.net) (Remote host closed the connection)
[22:21:19] <RedAero> what's the most efficient way of using regex to find strings which have any characters outside a desirable set?
[22:21:40] <RedAero> i.e. I want to find all strings in a Series (pandas) that have non-ascii chars.
[22:21:43] *** Joins: paul424 (~tom@ip-5-172-239-82.multi.internet.cyfrowypolsat.pl)
[22:21:47] <RedAero> Emphasis on efficient
[22:24:19] *** Quits: caveman (~caveman@gateway/tor-sasl/caveman) (Remote host closed the connection)
[22:24:45] *** Joins: caveman (~caveman@gateway/tor-sasl/caveman)
[22:25:13] *** Joins: ano (~ano@user/ano)
[22:25:47] <grym> r'[^\x00\x7F] ?
[22:25:53] *** Quits: slavfox_ (~slavfox@93.158.232.111) (Ping timeout: 256 seconds)
[22:26:01] *** Joins: whatsupboy (~whatsupbo@user/scobydoo)
[22:26:12] <RedAero> I'm aware of character ranges, I would like to know which way I should apply them for efficiency
[22:26:28] <grym> well, that's all of ascii
[22:26:42] <phy1729> take a subset of the data and time them is the only way to be sure
[22:27:20] <grym> hmm, but it shouldn't be a r-string, should it :D
[22:27:26] *** Quits: iomari891 (~iomari891@102.91.5.94) (Read error: Connection reset by peer)
[22:27:36] *** whatsupboy is now known as skipper
[22:27:38] <SnoopJ> why the heck does Series.str.isascii() not exist :|
[22:27:39] *** Joins: Jamieson (~Jamieson@pool-100-38-250-170.nycmny.fios.verizon.net)
[22:27:52] *** Quits: lsd|2 (~kvirc@cpc140240-melt3-2-0-cust92.12-1.cable.virginm.net) (Quit: KVIrc 5.0.1 Aria http://www.kvirc.net/)
[22:28:18] <phy1729> If you're just checking for is ascii, is there a way to test for the most significant bit?
[22:28:31] *** Joins: casastorta (~casastort@neo1.krivokuca.net)
[22:29:00] <RedAero> I'd prefer to stick to regex, because it might be necessary to expand the list of acceptable chars beyond the first 128
[22:29:06] *** Joins: lsd|2 (~kvirc@cpc140240-melt3-2-0-cust92.12-1.cable.virginm.net)
[22:29:07] <SnoopJ> RedAero, this should be relatively efficient in terms of each computation, but won't be vectorized: https://bpa.st/RG6A
[22:29:20] <RedAero> The question is whether I should use .contains, or .match, or something else entirely.
[22:29:42] <SnoopJ> (at least I *think* it's not vectorized...)
[22:30:20] *** Quits: lsd|2 (~kvirc@cpc140240-melt3-2-0-cust92.12-1.cable.virginm.net) (Client Quit)
[22:30:30] *** Joins: lsd|2 (~kvirc@cpc140240-melt3-2-0-cust92.12-1.cable.virginm.net)
[22:30:42] *** Quits: HiccupJul (~HiccupJul@cpc122682-reig6-2-0-cust39.6-3.cable.virginm.net) (Quit: Leaving)
[22:30:44] *** Quits: cdman (~dcm@user/dmc/x-4369397) (Quit: Leaving)
[22:31:06] *** Joins: slavfox (~slavfox@93.158.232.111)
[22:31:21] *** Quits: lsd|2 (~kvirc@cpc140240-melt3-2-0-cust92.12-1.cable.virginm.net) (Client Quit)
[22:31:30] *** Joins: lsd|2 (~kvirc@cpc140240-melt3-2-0-cust92.12-1.cable.virginm.net)
[22:31:57] *** Joins: sharksauce (~sharksauc@user/sharksauce)
[22:32:07] *** Quits: mug3n_ (~mugen@gateway/tor-sasl/mugen) (Remote host closed the connection)
[22:32:27] *** Joins: rpkilby (~rpkilby@c-24-20-208-106.hsd1.or.comcast.net)
[22:32:31] *** Joins: mug3n_ (~mugen@gateway/tor-sasl/mugen)
[22:33:08] <Techcable> What's the status of the Syntactic macros PEP?
[22:33:19] <Yhg1s> Techcable: it's not moved in quite a while.
[22:33:20] <RedAero> e.g. fullmatch requires the full string to match the pattern, which is not a requirement in my case, I'm ok it if just throws false on the first non-ascii char
[22:33:22] <Yhg1s> (and frankly, it's unlikely to.)
[22:33:24] <Techcable> I'm writing a compiler where it would be super useful
[22:33:28] <Techcable> Dang
[22:33:30] *** Joins: Auron (Auron956@user/auron)
[22:33:54] <Techcable> Is there a fork or something with it present?
[22:33:58] *** Joins: Seto_Kaiba (~hunterkll@2001:470:8b06:100:2958:1194:aedf:1fa3)
[22:34:33] <Techcable> Then again I don't really want to introduce another dependency
[22:34:37] * Techcable sighs
[22:34:46] <Techcable> Oh well, thanks for the info
[22:34:53] *** Quits: bzyx (~quassel@89-69-20-238.dynamic.chello.pl) (Quit: https://quassel-irc.org - Chat comfortably. Anywhere.)
[22:34:55] *** Quits: fling (~fling@user/fling) (Ping timeout: 240 seconds)
[22:35:10] *** Quits: rpkilby (~rpkilby@c-24-20-208-106.hsd1.or.comcast.net) (Remote host closed the connection)
[22:35:13] *** Joins: bzyx (~quassel@89-69-20-238.dynamic.chello.pl)
[22:35:25] *** Joins: rpkilby (~rpkilby@c-24-20-208-106.hsd1.or.comcast.net)
[22:35:27] <SnoopJ> RedAero, I would expect regex to do *substantially* worse than the solution I shared with you, since the C-API knows how to do this with less of a bazooka
[22:35:43] *** Joins: fling (~fling@user/fling)
[22:36:14] <RedAero> SnoopJ: I'm sure it's worse, but if I want to accept characters beyond ASCII then I have to use regex... I think, anyway.
[22:36:21] *** Quits: moog__ (~moog@98.97.81.132) (Ping timeout: 250 seconds)
[22:36:28] *** Quits: bzyx (~quassel@89-69-20-238.dynamic.chello.pl) (Client Quit)
[22:36:29] *** Quits: Elzington_ (~Elzington@87.249.134.26) (Quit: Leaving)
[22:36:45] <RedAero> but I think the best solution is a use of both: first pass on just ascii, then 2nd pass on the reduced set using regex
[22:36:46] <SnoopJ> I didn't realize the problem had changed since stated above
[22:36:48] *** Joins: bzyx (~quassel@89-69-20-238.dynamic.chello.pl)
[22:36:59] *** Quits: Hunterkll (~hunterkll@2001:470:8b06:100:2958:1194:aedf:1fa3) (Ping timeout: 250 seconds)
[22:37:18] *** Joins: zAfio (~dev@213.133.91.246)
[22:40:58] *** Joins: foobaz212 (~foobaz212@152.37.103.80)
[22:41:34] *** Joins: tag (sid271787@id-271787.lymington.irccloud.com)
[22:41:45] *** Quits: LAVBoy (~LAVBoy@85.249.46.8) (Ping timeout: 256 seconds)
[22:41:59] *** Quits: zAfio (~dev@213.133.91.246) (Ping timeout: 250 seconds)
[22:42:36] <tag> Are there any interfaces to/similar to libcap in python for managing (and more specifically, dropping) capabilities?
[22:43:06] *** Quits: vurr (~seymon@185.82.72.129) (Quit: Leaving)
[22:43:26] *** Quits: mcon (~Thunderbi@host-79-46-235-155.retail.telecomitalia.it) (Quit: mcon)
[22:43:54] *** Quits: caveman (~caveman@gateway/tor-sasl/caveman) (Quit: btc donations: bc1qt3chy4rqtzjny2h7qt47cy7nmu6th9sr66wa02)
[22:45:15] *** Quits: slav0nic (slav0nic@python.su) (Ping timeout: 252 seconds)
[22:45:30] *** Quits: withered_wolf (~withered_@1437135-v103.1561-static.stchilaa.metronetinc.net) (Ping timeout: 260 seconds)
[22:45:43] *** Quits: foobaz212 (~foobaz212@152.37.103.80) (Ping timeout: 256 seconds)
[22:46:56] *** Joins: summersault (~summersau@179.221.251.36)
[22:47:40] *** Joins: LAVBoy (~LAVBoy@85.249.46.8)
[22:48:28] *** Quits: ghost43 (~ghost43@gateway/tor-sasl/ghost43) (Remote host closed the connection)
[22:48:54] *** Joins: ghost43 (~ghost43@gateway/tor-sasl/ghost43)
[22:50:11] *** Quits: rsx (~dummy@ppp-188-174-134-13.dynamic.mnet-online.de) (Quit: rsx)
[22:50:18] *** Quits: very_sneaky (~very_snea@user/very-sneaky/x-7432109) (Ping timeout: 272 seconds)
[22:50:23] *** Joins: kyooo (~kyooo@2a02:a31d:a13c:5600:559d:f748:905d:cda9)
[22:54:33] *** Joins: _wovixo_ (~wovixo@128.104.205.49)
[22:54:48] *** Joins: Oddity (~Oddity@user/oddity)
[22:55:24] *** Quits: vats (~vats@103.16.30.139) (Ping timeout: 240 seconds)
[22:55:27] *** Quits: ghost43 (~ghost43@gateway/tor-sasl/ghost43) (Remote host closed the connection)
[22:55:48] *** Quits: marcello1 (~mp@p5084bed4.dip0.t-ipconnect.de) (Quit: WeeChat 3.4)
[22:55:57] *** Quits: marcello42 (~mp@p200300dfaf10fe010e3892c3ca815872.dip0.t-ipconnect.de) (Quit: WeeChat 3.4)
[22:56:12] *** Quits: jay-m1261 (~jay-m@154.126.169.74) (Ping timeout: 240 seconds)
[22:56:12] *** Quits: jay-m126 (~jay-m@154.126.169.74) (Ping timeout: 240 seconds)
[22:56:12] *** Quits: jay-m126_ (~jay-m@154.126.169.74) (Ping timeout: 240 seconds)
[22:56:21] *** Joins: slav0nic (slav0nic@python.su)
[22:58:07] *** Joins: ghost43 (~ghost43@gateway/tor-sasl/ghost43)
[22:58:57] *** Quits: paul424 (~tom@ip-5-172-239-82.multi.internet.cyfrowypolsat.pl) (Quit: Leaving)
[22:59:30] *** Joins: widp (~widp@2406:7400:73:7de3:ec9a:140d:44dc:4024)
[22:59:32] *** Quits: osXnut (~osXnut@77.125.126.151) (Remote host closed the connection)
[23:00:11] *** Quits: vlado (~vlado@2800:484:3587:3c90:8bf1:66d4:72a6:4f9c) (Ping timeout: 250 seconds)
[23:00:18] *** Quits: ColdKeyboard (~ColdKeybo@user/coldkeyboard) (Quit: ZNC - https://znc.in)
[23:00:49] *** Joins: ColdKeyboard (~ColdKeybo@user/coldkeyboard)
[23:01:27] *** Joins: badsektor (~badsektor@user/badsektor)
[23:02:19] *** Quits: pvergain (~Thunderbi@2a01:e0a:223:690:12cd:1121:2d45:1792) (Quit: pvergain)
[23:02:27] *** Joins: vlado (~vlado@181.50.79.237)
[23:03:07] *** Joins: foobaz212 (~foobaz212@152.37.103.80)
[23:05:10] *** Joins: teut (~teut@122.161.89.92)
[23:05:27] <teut> https://www.youtube.com/watch?v=_jh4Wc3CE38  12:50
[23:06:11] <FreeBDSM> I have an object with 5 keys: {host, port, dbname, user, password}; I have a function (psycopg2()) that has 5 matching args; How to call that function without having to do stuff like psycopg2(host=myobj['host'], port=myobj['port'], ...)?
[23:06:35] <teut> is fastAPI parsing the functions?  How is the    :int = Query ()   thing working?
[23:06:55] <Repiphany> FreeBDSM: psycopg2(**myobj)
[23:07:06] <salparadise> Any flag with my testing https://bpa.st/FZXQ second version is 1/2 as fast, yeah?
[23:07:19] <FreeBDSM> Repiphany, does the order of keys matter?
[23:07:38] <Repiphany> Not for regulat kwargs
[23:07:40] <Repiphany> regular
[23:07:54] *** Joins: CodePoint (~CodePoint@107-208-128-79.lightspeed.tukrga.sbcglobal.net)
[23:08:07] <SnoopJ> teut, the @app.get decorator is inspecting the signature of the function it acts on
[23:08:49] <FreeBDSM> Repiphany, what if I had extra keys in my object?
[23:08:49] *** Quits: summersault (~summersau@179.221.251.36) (Remote host closed the connection)
[23:08:56] <zerosum> hey all, what would be the best way of converting a CSV file that looks like this to something like this JSON output? https://bpa.st/K7WQ
[23:09:04] <salparadise> *flaw
[23:09:18] <FreeBDSM> Repiphany, would python try to pass them as well instead of just ignoring them?
[23:09:22] <teut> that is fine SnoopJ  but   int=Query()   , how is python parsing it?
[23:09:32] <SnoopJ> I don't understand the question.
[23:09:47] <teut> is Query()  the return type?
[23:10:06] <Repiphany> You'll get an error unless psycopg2 is defined to take arbitrary kwargs
[23:10:24] <FreeBDSM> Repiphany, got it, thanks
[23:10:32] <teut> def greeting(name: str) -> str:        no, return type is written after ->
[23:10:42] <salparadise> teut:Query() returns an int.
[23:11:02] *** Quits: mon_aaraj (~MonAaraj@user/mon-aaraj/x-4416475) (Ping timeout: 240 seconds)
[23:11:07] *** Quits: bomb-on (~bomb-on@user/bomb-on) (Read error: Connection reset by peer)
[23:11:12] *** Joins: filename (~kilitary@188.242.105.134)
[23:11:14] <SnoopJ> teut, Query is a FastAPI type that indicates "this function parameter is related to a query parameter in the request"
[23:12:13] *** Joins: mon_aaraj (~MonAaraj@user/mon-aaraj/x-4416475)
[23:12:16] <SnoopJ> in that sample, the decorator looks at that function, sees a parameter named `recipe_id` whose type is int and whose default value is a Query instance. It knows this means that it should get an int out of the request's query parameters.
[23:12:16] <zerosum> all the examples i've found use a primary key, I don't want to use a primary key in the JSON output
[23:12:17] <teut> def function_name( param:type)     is the syntax of writing a function
[23:12:36] <SnoopJ> teut, you can also do `param:type = default` to set a default value
[23:12:37] <teut> oh so = denotes default value
[23:13:01] *** Quits: Y4knotiS (~YaknotiS@cpc1-cmbg18-2-0-cust87.5-4.cable.virginm.net) (Ping timeout: 240 seconds)
[23:13:04] <salparadise> 601 // 100 == 5 is 50% faster than 500 <= 601 < 600, is my read right here https://bpa.st/FZXQ ?
[23:13:46] <teut> and shouldnt default be of type "type"?
[23:13:58] <SnoopJ> I don't understand the question.
[23:14:00] *** Joins: jarthur (~jarthur@cpe-70-114-198-37.austin.res.rr.com)
[23:14:24] <salparadise> teut:no, what default returns (if I understand it)
[23:14:28] <teut> `param:type = default`    should the type of default be `type`?
[23:14:34] <SnoopJ> teut, it can be any value
[23:14:50] *** Quits: _wovixo_ (~wovixo@128.104.205.49) (Quit: Leaving)
[23:15:05] <SnoopJ> `def func(x: int = "hello"): pass` is a valid function
[23:15:07] <teut> default return type?
[23:15:12] <Yhg1s> salparadise: it is faster, but only because of constant folding. You can't use constant values if you want sensible benchmarks.
[23:15:18] <SnoopJ> even though the default value and the type don't really agree with each other
[23:15:30] *** Joins: c4017w__ (~c4017@209.52.68.8)
[23:15:40] <teut> `def func(x: int = "hello"): pass` is a valid function     oh, I didn't know it
[23:16:00] <SnoopJ> teut, the interpreter does not care about your annotations at all. It does not validate them, it does nothing at all with them except store them.
[23:16:12] <salparadise> Yhg1s:better to pass a function?
[23:16:27] <SnoopJ> teut, and then a library like FastAPI can read the annotations back and do something with them.
[23:16:31] <Yhg1s> salparadise: I'm not sure what you mean by 'pass a function'.
[23:16:57] *** Quits: mon_aaraj (~MonAaraj@user/mon-aaraj/x-4416475) (Ping timeout: 240 seconds)
[23:16:58] <salparadise>  %timeit lambda: 601 // 100 == 5
[23:17:00] <teut> ya that is fine SnoopJ  , I just wasn't aware of this  syntax in python
[23:17:03] <Yhg1s> salparadise: it's better not to worry about microbenchmarks like that. It's hard to do the correctly, and it's very hard not to misinterpret the results, and it's almost impossible to use the results, if they are correct, in a good way.
[23:17:13] <salparadise> Yhg1s:noted.
[23:17:15] <Yhg1s> salparadise: that's still using constants.
[23:17:18] <SnoopJ> teut, https://www.python.org/dev/peps/pep-0484/
[23:17:30] *** Quits: xdrone (xdrone@93.126.252.7) (Read error: Connection reset by peer)
[23:18:05] *** Joins: xdrone (xdrone@93.126.252.7)
[23:18:31] *** Joins: mon_aaraj (~MonAaraj@user/mon-aaraj/x-4416475)
[23:19:09] *** Quits: c4017w_ (~c4017@209.52.68.8) (Ping timeout: 256 seconds)
[23:20:05] <teut> hmm, looks like python and js run in sync
[23:20:26] *** Quits: lispy (~lispy@user/lispy) (Quit: Leaving)
[23:20:50] <teut> both single threaded and now these typescript like syntax sugar
[23:21:00] *** Quits: CodePoint (~CodePoint@107-208-128-79.lightspeed.tukrga.sbcglobal.net) (Ping timeout: 240 seconds)
[23:21:25] *** Joins: CodePoint (~CodePoint@107-208-128-79.lightspeed.tukrga.sbcglobal.net)
[23:21:48] *** Quits: causa_sui (~causasui@c-68-60-125-136.hsd1.mi.comcast.net) (Ping timeout: 268 seconds)
[23:21:59] *** Quits: vladoski (~vladoski@2001:b07:add:d406:a909:98aa:ab7a:bb99) (Remote host closed the connection)
[23:22:45] <SnoopJ> teut, the syntax for annotation has been part of the Python language since 3.0 (i.e. for 14 years), there isn't much "now" about it
[23:23:02] <Yhg1s> And Python hasn't been single-threaded since 1.4 or so.
[23:23:15] <teut> hmm, so js is the robber
[23:23:28] <Yhg1s> Did Python lose anything? No. Nothing is stolen.
[23:23:47] <SnoopJ> certainly neither of these languages originated these ideas
[23:24:07] <teut> are these taken from lisp ?
[23:24:26] *** Quits: vulpes_vulpes (~vulpes_vu@62-64-207-88.dynamic.dial.as9105.com) (Remote host closed the connection)
[23:24:27] <SnoopJ> (although I think Python's laissez-faire treatment of annotations might be somewhat unique?)
[23:24:31] <Yhg1s> They were not taken from lisp. They were inspired by many different languages.
[23:25:01] <Yhg1s> SnoopJ: it already had a name before PEP 484, so no, it's not unique.
[23:25:13] *** Joins: causa_sui (~causasui@c-68-60-125-136.hsd1.mi.comcast.net)
[23:25:33] <Yhg1s> https://en.wikipedia.org/wiki/Gradual_typing
[23:25:58] <SnoopJ> Yhg1s, I'm thinking of the "I don't really care about this value, it's not even necessarily type information" property
[23:26:15] <zen_coder> Hi, I have several "subprocess.run" calles, which is calling "docker exec". These calls I want to parallelize. What is the easies way to do this?
[23:26:25] *** Joins: marcello42 (~mp@p5084bed4.dip0.t-ipconnect.de)
[23:26:31] <SnoopJ> but it seems probable someone else had the idea of "let's attach some arbitrary metadata to a variable" before Python did it :)
[23:26:47] <blei> you don't have to wait for run to complete
[23:26:53] *** Joins: Guest42 (~b332b756@servidor.wikimedia.es)
[23:26:54] <blei> so just put one call after the other
[23:27:21] <Yhg1s> blei: you do have to wait, that's what subprocess.run does.
[23:27:28] *** Joins: bomb-on (~bomb-on@user/bomb-on)
[23:27:28] <Yhg1s> zen_coder: use subprocess.Popen instead of subprocess.run.
[23:27:55] <teut> subprocess.run waits for process to finish?
[23:27:57] *** Joins: merijn (~merijn@c-001-001-001.client.esciencecenter.eduvpn.nl)
[23:28:51] <Yhg1s> yes.
[23:29:32] *** Quits: causa_sui (~causasui@c-68-60-125-136.hsd1.mi.comcast.net) (Ping timeout: 240 seconds)
[23:30:25] <zen_coder> so I call one function called A, which is invoking 2x subprocess, I need to wait for the result of the first one
[23:30:38] <zen_coder> in total I have 30 calls to function A
[23:30:44] <teut> The timeout argument is passed to Popen.communicate(). If the timeout expires, the child process will be killed and waited for.
[23:30:50] <teut> https://docs.python.org/3/library/subprocess.html
[23:31:03] <teut> if killed  then waited for what?
[23:31:06] *** weechat1 is now known as Spawns_Carpeting
[23:31:09] <SnoopJ> zen_coder, so call wait() on the one you need to wait on
[23:31:13] <Yhg1s> teut: for the exit code of the process.
[23:31:26] <blei> sorry about that
[23:31:41] <blei> the idea is about the same in the end; you're in luck
[23:31:51] *** Quits: Guest42 (~b332b756@servidor.wikimedia.es) (Quit: Client closed)
[23:32:12] *** Joins: causa_sui (~causasui@c-68-60-125-136.hsd1.mi.comcast.net)
[23:32:14] <bjs> Does anyone know of anywhere that writes down Python's attribute lookup process start-to-finish?
[23:32:32] <Yhg1s> bjs: the source.
[23:32:39] <bjs> Yhg1s: hmm.
[23:32:48] <Yhg1s> bjs: everything else pretty much elides some parts of it, for one reason or another.
[23:33:00] *** Quits: Commaster (~Commaster@dslb-002-204-205-169.002.204.pools.vodafone-ip.de) (Quit: Client closed)
[23:33:00] <bjs> I've been trying to read the source, but attribute lookup is very complicated and it's jumping around a lot and hard to understand sometimes
[23:33:02] *** Quits: davidd (~hay_sup@user/memorious) (Quit: WeeChat 3.4)
[23:33:07] <zen_coder> SnoopJ: I want to paralleize it and therefore I should call "wait"?
[23:33:13] <Yhg1s> bjs: yes, that would be one of those reasons :)
[23:33:28] <Yhg1s> zen_coder: you should call wait when you _do_ want to wait for one.
[23:33:28] <zen_coder> I was finding something called asyncio
[23:33:29] <SnoopJ> zen_coder, if you want to wait on a process, you should call wait(). You described that you need to wait on the first of several processes. wait() is a function that waits.
[23:33:39] *** Joins: pgib (~textual@173.38.117.89)
[23:34:02] <zen_coder> I call it like this: subprocess.run(cmd, check=True, encoding="utf-8")
[23:34:09] <zen_coder> and it waits for me automaticallay
[23:34:12] *** Quits: Enitin (~Enitin@82.102.22.84) (Ping timeout: 240 seconds)
[23:34:15] <SnoopJ> yes, you don't get a choice if you use run()
[23:34:20] <SnoopJ> if you want a choice, use Popen
[23:34:21] <Yhg1s> zen_coder: asyncio also has subprocess integration, yes. You can start multiple processes and wait for some or all of them fairly easily with asyncio. It does, however, require that your code is async.
[23:34:26] *** Quits: Lord_of_Life (~Lord@user/lord-of-life/x-2819915) (Ping timeout: 250 seconds)
[23:34:39] *** Joins: Lord_of_Life (~Lord@user/lord-of-life/x-2819915)
[23:34:40] <zen_coder> my code is not async at all
[23:34:48] *** Joins: Jacques (~Jacques@cpe-173-174-25-173.stx.res.rr.com)
[23:35:20] <bjs> Yhg1s: the more I learn about Python the more I think attribute access is like, all of the complexity
[23:35:21] <bjs> it's madness
[23:35:22] *** Quits: jamea (~jamea@177.239.82.186) (Ping timeout: 268 seconds)
[23:35:30] *** Quits: Jamieson (~Jamieson@pool-100-38-250-170.nycmny.fios.verizon.net) (Quit: Leaving)
[23:35:31] <zen_coder> so I am asking to find an easy solution for this problem, which not require a total refactor
[23:35:47] <SnoopJ> zen_coder, is there something wrong with the suggestion to use Popen?
[23:35:49] <blei> just wait in a loop
[23:36:05] <Yhg1s> zen_coder: okay, well, we gave you one: use subprocess.Popen instead of subprocess.run. You will have to decide when to wait on processes, or when to check whether they're done, yourself.
[23:36:39] <Yhg1s> bjs: don't worry, there's more complex things (although admittedly related ones), like the implementation of types.
[23:36:54] *** Quits: esro (~esro@nat1.krakowskiinternet.pl) (Quit: Leaving)
[23:37:08] *** Quits: kyooo (~kyooo@2a02:a31d:a13c:5600:559d:f748:905d:cda9) (Remote host closed the connection)
[23:37:10] <teut> what does attribute access means/
[23:37:11] <teut> ?
[23:37:16] *** Quits: marcello42 (~mp@p5084bed4.dip0.t-ipconnect.de) (Quit: WeeChat 3.4)
[23:37:17] <bjs> teut: x.y
[23:37:30] <SnoopJ> teut, when you do `foo.bar`, the runtime has to figure out how to get something called 'bar' from the object called 'foo'
[23:37:39] <bjs> teut: that is accessing the attribute "y" on the object x
[23:37:40] <SnoopJ> (this turns out to be pretty complicated)
[23:37:48] <teut> an attribute is PyObject and then attribute access should be a pointer to PyObject?
[23:38:00] <teut> in c
[23:38:02] <Yhg1s> teut: ... no.
[23:38:06] <bjs> teut: no attributes are very complicated
[23:38:22] <teut> first it looks up local scope
[23:38:25] *** Joins: fling_ (~fling@user/fling)
[23:38:26] <Yhg1s> teut: don't try to understand Python by talking about CPython implementation details.
[23:38:28] <SnoopJ> and they can be dynamic
[23:38:29] *** Quits: fling (~fling@user/fling) (Remote host closed the connection)
[23:38:37] <bjs> teut: no attributes aren't about scopes
[23:38:42] <SnoopJ> i.e. pandas lets you access dataframes by doing `df.column_name`
[23:38:45] <Yhg1s> teut: 'x.y' means "ask the object 'x' for its attribute 'y'".
[23:38:59] <zen_coder> Yhg1s: okay, but how do I get the result of the first call and continue my 30 items loop at the same time?
[23:39:15] <bjs> SnoopJ: i was trying to find a nedbat like "names" talk/description but for attributes,  maybe I should learn attributes and try write my own :(
[23:39:23] <Yhg1s> zen_coder: do you want to wait for the result, or just check whether it's available yet?
[23:39:28] <SnoopJ> bjs, I would read it :)
[23:39:31] *** Joins: matsaman (~matsaman@user/matsaman)
[23:39:38] * SnoopJ doesn't really understand the fancy stuff
[23:39:38] <bjs> SnoopJ: I'm sure I know like 80% of the process but the order/nuances I constantly trip up on
[23:39:44] * Yhg1s same.
[23:39:50] <bjs> Yhg1s: oh dear
[23:39:57] <Yhg1s> Don't worry, neither does Guido :)
[23:39:57] <SnoopJ> 🙃
[23:39:58] <zen_coder> so I have these two subprocess calls, I need the wait for the result, before I can trigger the 2nd call
[23:40:02] *** Quits: Doffi (~doffi@91.132.197.188) (Quit: Lost terminal)
[23:40:11] <SnoopJ> zen_coder, the wait() function will wait for the process you call it on to complete
[23:40:27] *** Quits: causa_sui (~causasui@c-68-60-125-136.hsd1.mi.comcast.net) (Ping timeout: 256 seconds)
[23:40:32] <teut> Yhg1s : don't try to understand Python by talking about CPython implementation details.  , what?
[23:40:42] <Yhg1s> teut: I'm not sure what part of that is unclear.
[23:40:46] <blei> i'm looking at a new python compiler and looking for ways to remove things such as type hints to pare back the code to only whats supported
[23:40:51] <SnoopJ> teut, CPython is not the only implementation of Python. PyObject doesn't even mean anything in interpreters that aren't CPython.
[23:41:16] <SnoopJ> (even though those interpreters do all the same things when it comes to attribute access)
[23:41:17] <Yhg1s> blei: so, not actually a Python compiler, but a subset of Python?
[23:41:24] <teut> ya but CPython is the one that I have used
[23:41:32] <blei> i can't speak to ambition but only a subset is supported so far
[23:41:46] <bjs> teut: attributes are a very complicated part of Python and you won't be able to understand how they *really* work just by talking about PyObjects (pointers or not)
[23:41:59] <Yhg1s> teut: thinking about how it is implemented in CPython doesn't help with understanding Python. The concepts are a lot simpler than the implementation.
[23:42:10] <SnoopJ> blei, MicroPython and snek are both worth looking at, I believe both of them are subsets in this sense (not sure about annotations specifically though)
[23:42:17] <bjs> teut: I mean on the surface they are pretty simple, but the actual mechanisms Python has inside to make it all work are very complicated
[23:42:21] <teut> ok
[23:42:31] <SnoopJ> well, snek is probably not very "subset"-y since it's so much tinier
[23:42:37] <zen_coder> Yhg1s: I need to wait before I can trigger the 2nd call
[23:42:40] <SnoopJ> but MicroPython's syntax is quite close
[23:42:41] <teut> ya, it must be tough
[23:42:42] *** Quits: ghost43 (~ghost43@gateway/tor-sasl/ghost43) (Remote host closed the connection)
[23:42:45] <Yhg1s> zen_coder: okay, so what's the problem?
[23:42:49] <zen_coder> because I need the result of it before continue
[23:42:49] <blei> i'm looking to take existing python code and remove constructs without changing the meaning
[23:43:12] <teut> I assume cpython  must be using c++ like vtables
[23:43:12] <SnoopJ> blei, that sentence appears to be contradicting itself
[23:43:15] *** Joins: ghost43 (~ghost43@gateway/tor-sasl/ghost43)
[23:43:18] <blei> not necessarily.
[23:43:19] <Yhg1s> teut: you assume very, very incorrectly.
[23:43:20] *** Joins: wootehfoot (~wootehfoo@user/wootehfoot)
[23:43:31] <SnoopJ> teut, the C in CPython is for the C programming language, because that's what it's written in.
[23:43:33] <teut> '=D
[23:43:54] <Yhg1s> Even if it were written in C++, it would not turn Python classes into C++ classes, and things like vtables are right out.
[23:43:58] <teut> you can steal constructs and design patterns from anywhere
[23:44:15] <Yhg1s> teut: you're not talking about constructs or design patterns. you're talking about imlementation details.
[23:44:25] <SnoopJ> CPython does have ways to do indirection, if that's what you mean. None of them are particularly like vtables
[23:44:26] *** Joins: yates (~user@fv-nc-f7af8b91e1-234237-1.tingfiber.com)
[23:44:31] <SnoopJ> (to my knowledge, anyway)
[23:44:46] <blei> perhaps the right way to do it is to go right into the new left recursive parser and stub-out unsupported features such as type hints
[23:44:48] <teut> design patterns are a way to implement a thing
[23:45:03] *** Quits: xdrone (xdrone@93.126.252.7) (Remote host closed the connection)
[23:45:14] *** fling_ is now known as fling
[23:45:18] <Yhg1s> teut: not really, and certainly not in the case of language implementation.
[23:45:27] *** Quits: Deneb (~johnch@128.82.159.143.dyn.plus.net) (Remote host closed the connection)
[23:45:34] <yates> i'm trying to pop open a file/save dialog PyQt5 with a specified default extension, but it's not working:
[23:45:45] <yates> outFilename = QtWidgets.QFileDialog.getSaveFileName(self.parent, 'Save translations to file', '', 'Translations(*.tln)')
[23:45:48] <teut> does design pattern mean only the gof design patterns to developers?
[23:46:19] <Yhg1s> teut: to me, it usually means the person using the term doesn't know what they're talking about.
[23:46:22] <yates> the "Translations" shows up in the dialog, but the (*.tln) does not
[23:46:25] <blei> its a documented mental schema
[23:47:16] <teut> Yhg1s , that can be true
[23:47:35] <yates> ..and if i enter a filename without an extension, it is not given a .tls extension
[23:47:47] *** Joins: jamea (~jamea@200.68.140.3)
[23:47:56] *** Quits: Merinorus (~Merinorus@lfbn-mar-1-707-11.w90-118.abo.wanadoo.fr) (Quit: Someone cut my Wi-Fi cable.)
[23:48:09] <teut> design pattern is an implementation only, I can't see where am I going wrong
[23:48:24] <SnoopJ> teut, a design pattern usually means exactly the opposite of an implementation
[23:48:37] <teut> that is weird now
[23:48:51] *** Joins: Enitin (~Enitin@82.180.145.228)
[23:49:05] <SnoopJ> I can't see where you're going either, so we're in good company at least
[23:49:13] *** Joins: junebug (~junebug@2600:1700:3db0:2540:432c:5636:ff8a:3e6)
[23:50:43] <teut> to most whom I know design patterns are just those 23 gof patterns
[23:51:15] *** Quits: roxfan (~roxfan@2a02:a03f:a2be:4f00:e5ca:75c5:cd2a:1a81) (Ping timeout: 252 seconds)
[23:51:32] *** Quits: carl--- (~carl-@c-138ee555.02-180-73746f39.bbcust.telenor.se) (Ping timeout: 240 seconds)
[23:52:10] <blei> i prefer a more functional approach
[23:52:56] *** Quits: rendar (~rendar@user/rendar) (Quit: Leaving)
[23:53:18] <FreeBDSM> I have a nested objects that contain an int underneath: etalon['en']['dashboards'][0]['id'], etalon['en']['dashboards'][1]['id'], ... Is there a way to get a list of all those ids?
[23:53:32] *** Joins: moog__ (~moog@mobile-166-173-186-209.mycingular.net)
[23:54:01] <Yhg1s> FreeBDSM: [ item['id] for item in etalon['en']['dashboards'] ]
[23:54:12] <Yhg1s> FreeBDSM: eh, I mean [ item['id'] for item in etalon['en']['dashboards'] ]
[23:57:28] <yates> if you see a tr("<string>") in Qt-land (e.g., as a C++ function parameter), does that require something different than just a standard '<string>' in python (3.6.9)?
[23:57:34] <zen_coder> Yhg1s: this is what I have at the moment: https://bpa.st/ZGYA simply spoken
[23:57:50] *** Quits: junebug (~junebug@2600:1700:3db0:2540:432c:5636:ff8a:3e6) (Ping timeout: 250 seconds)
[23:59:27] <zen_coder> so when I have just one call, I can just fire all subprocess.open calls store in another list the Popen return object and poll all these
[23:59:31] <blei> what i need is a python to python compiler
[23:59:49] <zerosum> hey all, I have the following code to convert a csv to json but I'm getting a keyerror.. not sure why, my code looks like this https://bpa.st/J6CQ
[23:59:57] *** Quits: LAVBoy (~LAVBoy@85.249.46.8) (Ping timeout: 256 seconds)
[23:59:57] *** Quits: Jacques (~Jacques@cpe-173-174-25-173.stx.res.rr.com) (Ping timeout: 256 seconds)
