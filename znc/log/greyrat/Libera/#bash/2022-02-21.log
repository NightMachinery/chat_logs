[00:04:32] *** Quits: causa_sui (~causasui@c-68-60-125-136.hsd1.mi.comcast.net) (Ping timeout: 256 seconds)
[00:04:46] *** Quits: ztrawhcse (3d1f427b6a@archlinux/bugwrangler/eschwartz) (Ping timeout: 250 seconds)
[00:05:27] *** Joins: ztrawhcse (3d1f427b6a@archlinux/bugwrangler/eschwartz)
[00:05:52] *** Joins: rawgreaze (~rawgreaze@c-24-91-94-184.hsd1.nh.comcast.net)
[00:05:52] *** Quits: rawgreaze (~rawgreaze@c-24-91-94-184.hsd1.nh.comcast.net) (Changing host)
[00:05:52] *** Joins: rawgreaze (~rawgreaze@user/rawgreaze)
[00:05:53] <wiscii> i got a heredoc with one variable which is expanded within the heredoc. is there any reason to quote the $var in the heredoc ?
[00:06:25] <wiscii> doesn't seem to make any difference
[00:06:37] *** Joins: mowcat (~mowcat@host86-129-162-211.range86-129.btcentralplus.com)
[00:06:54] <emanuele6> actually, doesn't wyre's code cause an infinite recursion if [[ -d ./dotfiles ]] is not true?
[00:07:06] *** Joins: causa_sui (~causasui@c-68-60-125-136.hsd1.mi.comcast.net)
[00:07:20] *** Quits: guifipedro (~quassel@207.188.174.249) (Read error: Connection reset by peer)
[00:07:35] *** Joins: guifipedro (~quassel@207.188.174.249)
[00:07:44] <emanuele6> wiscii: what do you mean "i doesn't seem to make any difference"
[00:07:55] <emanuele6> s/i //
[00:08:03] <emanuele6> it adds quotes around the variables
[00:08:04] <larryv> wiscii: it does make a difference. did you try it?
[00:08:08] <larryv> sh# var=hi; code=$(printf '%s\n' 'cat <<EOF' '$var' 'EOF'); eval "$code"
[00:08:10] <shbot> larryv: hi
[00:08:12] <larryv> sh# var=hi; code=$(printf '%s\n' 'cat <<EOF' '"$var"' 'EOF'); eval "$code"
[00:08:14] <shbot> larryv: "hi"
[00:08:14] <wyre> emanuele6, if it's not true it should print the usage message
[00:08:55] *** Quits: ano (~ano@user/ano) (Ping timeout: 240 seconds)
[00:09:14] *** Joins: ano (~ano@user/ano)
[00:09:20] <emanuele6> wyre: which then will call get_available_distros, which then will call usage because [[ -d ./dotfiles ]] is not true which then will call usage, which then will callget_available_distros, which then will call usage because [[ -d ./dotfiles ]] is not true, ...
[00:10:35] <emanuele6> i think i messed up that a bit, lol
[00:10:52] <emanuele6> either way, get_available_distros calls usage if [[ -d ./dotfiles ]] is not successful
[00:11:18] <emanuele6> and then usage always calls get_available_distros which will call usage again which will call get_available_distros again etc
[00:11:20] *** Quits: Tach (~Tach@user/tach) (Ping timeout: 256 seconds)
[00:11:22] <wyre> hmm, I see your point, yes
[00:11:24] *** Joins: senoraraton (~senorarat@192-195-83-130.static.monkeybrains.net)
[00:11:29] <emanuele6> it's not really a point
[00:11:32] <emanuele6> just try it and see
[00:12:22] <emanuele6> you probably didn't actually test the case in which there is no ./dotfiles directory
[00:12:58] <wyre> sure
[00:13:28] *** Joins: YuGiOhJCJ (~YuGiOhJCJ@gateway/tor-sasl/yugiohjcj)
[00:13:32] <wyre> but it's not a good idea to call the functions in that crossed way
[00:13:53] *** Quits: causa_sui (~causasui@c-68-60-125-136.hsd1.mi.comcast.net) (Ping timeout: 256 seconds)
[00:13:59] <wyre> this function should be just to set the value of distros
[00:14:09] *** Joins: jmdaemon (~jmdaemon@user/jmdaemon)
[00:14:12] <wyre> I will have to check its contents usually
[00:14:28] <wyre> maybe I could do a function to this
[00:14:47] <wiscii> i meant this: https://bpa.st/SOBQ
[00:15:06] <emanuele6> wiscii: what about it?
[00:15:19] <emanuele6> the result is different.
[00:15:43] <emanuele6> the fact that you wrote "stuff" suggests that you didn't actually try it
[00:15:49] <wiscii> i must be doing something else wrong then
[00:16:16] <emanuele6> no. you must not be actually testing your code and you must just be saying things
[00:16:21] <wiscii> the stuff it does is simply to match i to a predefined string
[00:16:24] <emanuele6> x is not set anywhere in that code
[00:16:28] <emanuele6> and stuff is nothing
[00:16:57] <wiscii> it was just a gist to indicate the quotes that i am querying the use of
[00:17:36] <larryv> https://paste.wooledge.org/11760
[00:17:47] *** Joins: Tangent-Man (~Tang3nt-M@cpc145602-basl14-2-0-cust33.20-1.cable.virginm.net)
[00:19:20] *** Quits: rgrinberg (~textual@2806:101e:7:70b6:b40c:806a:27ba:87ae) (Quit: My MacBook has gone to sleep. ZZZzzzâ€¦)
[00:24:08] *** Joins: szkl (uid110435@id-110435.uxbridge.irccloud.com)
[00:24:14] *** Joins: n4dir (~user@i577BC92A.versanet.de)
[00:25:21] <wiscii> larryv: this gets to the point: https://bpa.st/4VTA
[00:25:48] <wiscii> hold on, forgot to paste output
[00:26:36] <wyre> emanuele6, what about this? https://bpa.st/VJMQ (I'm not sure if I've used properly the nullglob you suggested)
[00:26:37] <checkbot> wyre: I think the problem is on line 27. Double quote array expansions to avoid re-splitting elements. See https://github.com/koalaman/shellcheck/wiki/SC2068 for more info.
[00:27:14] <larryv> wiscii: still different https://paste.wooledge.org/11761
[00:27:40] <emanuele6> https://0x0.st/oKrl.txt
[00:27:54] <emanuele6> oh, too slow
[00:28:03] *** Joins: powerman2206 (~powerman2@141-136-140-79.dsl.iskon.hr)
[00:28:16] <larryv> just more evidence >:)
[00:28:28] <emanuele6> !faq 5 > wyre
[00:28:28] <greybot> wyre: https://mywiki.wooledge.org/BashFAQ/005 -- How can I use array variables?
[00:29:08] <wyre> sure, I missed the quotes ðŸ˜Š
[00:29:14] <emanuele6> for i in ${folders[@]} doesn't iterate the array
[00:29:18] *** Joins: sinaowolabi_ (~SinaOwola@160.152.109.220)
[00:29:40] <emanuele6> it applies wordsplitting and pathname expansions to all elements of the array and then it iterates over the resulting words
[00:30:05] <emanuele6> also that is just weird
[00:30:19] <emanuele6> you are getting files one level deep and two levels deep
[00:30:25] *** Joins: causa_sui (~causasui@c-68-60-125-136.hsd1.mi.comcast.net)
[00:30:37] <emanuele6> oh, nevermind.  you have two arrays now?
[00:30:44] <emanuele6> why?
[00:30:59] <emanuele6> folders is not used anywhere
[00:31:31] <emanuele6> you just moved the glob of the for loop into an array for no apparent reason other than then expand it wrong
[00:33:40] <emanuele6> you should know that `for i in ./dotfiles/*' is valid (you were using it before); i am not sure why you decided to move it to an array that you don't even use to be honest
[00:33:41] *** Quits: vysn (~vysn@user/vysn) (Ping timeout: 245 seconds)
[00:34:12] *** Quits: seninha (~chatzilla@user/seninha) (Quit: ChatZilla 0.9.93 [SeaMonkey 2.53.10.2/20220211225827])
[00:34:17] *** Quits: ___nick___ (~quassel@cpc68286-cdif17-2-0-cust533.5-1.cable.virginm.net) (Ping timeout: 256 seconds)
[00:34:35] <wiscii> i realise why my code did not spot the difference, the first and last line of the heredoc never match the search criteria, with or without the leading or traing "
[00:34:41] <wyre> well, it helped me debug the code, but sure, I can remove this
[00:34:53] <wiscii> trailing*
[00:35:18] *** Quits: causa_sui (~causasui@c-68-60-125-136.hsd1.mi.comcast.net) (Ping timeout: 272 seconds)
[00:35:46] <wiscii> thanks for pointing that out
[00:36:18] <emanuele6> hence you didn't actually test your code
[00:36:22] <powerman2206> Is there something like $@ but where I can exclude certain some params?
[00:36:40] <emanuele6> !xy
[00:36:40] <greybot> http://mywiki.wooledge.org/XyProblem -- "I want to do X, but I'm asking how to do Y..."
[00:36:51] <powerman2206> Right
[00:36:52] <wyre> emanuele6, could I use $PWD/dotfiles/* instead ./dotfiles/* if I would want to install the script into ~/.local/bin? ðŸ¤”
[00:37:01] <wiscii> i did test my code, *THAT* is why this error has come to light, because my code should have errored but did not
[00:37:04] <emanuele6> powerman2206: like what? only $2-$6?
[00:37:08] <emanuele6> something like that?
[00:37:53] <powerman2206> More like $2-$#, but yeah
[00:37:54] <emanuele6>   "${@:2:5}"  (five arguments starting from $2, i.e. same as: "$2" "$3" "$4" "$5" "$6" )
[00:38:02] <emanuele6> powerman2206: then "${@:2}"
[00:38:26] <emanuele6> all the arguments starting from "$2"
[00:38:31] <emanuele6> ( bash only obviously )
[00:38:34] <powerman2206> Nice, thanks
[00:39:07] <emanuele6> also note that (five arguments starting from $2, i.e. same as: "$2" "$3" "$4" "$5" "$6" ) is a little inaccurate
[00:39:15] <emanuele6> it only prints arguments that actually exist
[00:39:24] *** Quits: arinov (~arinov@77.67.139.142) (Ping timeout: 240 seconds)
[00:40:05] <emanuele6> if $# is 1, it expands to nothing; if $# is 2, it expands to just "$2"; if $# is 4, it expands to "$2" "$3" "$4" even though you used "${@:2:5}"
[00:41:12] <emanuele6> wiscii: *your code* was referring to the code that you showed us. and that we had to test for you.
[00:42:23] *** Quits: Tangent-Man (~Tang3nt-M@cpc145602-basl14-2-0-cust33.20-1.cable.virginm.net) (Remote host closed the connection)
[00:42:29] <wiscii> emanuele6: i simply wanted to understand the what difference quoting the variable inside the heredoc would do
[00:42:48] <wiscii> that is why the examples and subsequent testing
[00:44:44] *** Joins: TheHermann (~TheHerman@gateway/tor-sasl/thehermann)
[00:45:41] <emanuele6> even before you sent that code, we already told you there was a difference
[00:45:53] <emanuele6> and larryv also showed it to you
[00:46:00] <emanuele6> even before you sent the example
[00:46:21] <emanuele6> ( that if you actually had tested you would have showed you the difference)
[00:46:41] <wiscii> and then i went on to figure out why my code did not behave as expected
[00:47:09] <emanuele6> no, wiscii
[00:47:20] *** Quits: Fausto (~dante@gateway/tor-sasl/filohuhum) (Remote host closed the connection)
[00:47:26] <wiscii> no what
[00:47:32] <wiscii> what is your problem ?
[00:47:35] *** Joins: Tangent-Man (~Tang3nt-M@cpc145602-basl14-2-0-cust33.20-1.cable.virginm.net)
[00:47:57] <emanuele6> 21:38:08 <larryv > sh# var=hi; code=$(printf '%s\n' 'cat <<EOF' '$var' 'EOF'); eval "$code"
[00:48:00] *** Joins: Fausto (~dante@gateway/tor-sasl/filohuhum)
[00:48:05] <emanuele6> 21:38:12 <larryv > sh# var=hi; code=$(printf '%s\n' 'cat <<EOF' '"$var"' 'EOF'); eval "$code"
[00:48:21] *** Joins: lavaball (felix@31.204.155.215)
[00:48:38] <emanuele6> that was before you even sent an example
[00:48:55] *** Quits: Fausto (~dante@gateway/tor-sasl/filohuhum) (Remote host closed the connection)
[00:49:11] <emanuele6> 21:44:48 <wiscii > i meant this: https://bpa.st/SOBQ
[00:49:17] *** Joins: Fausto (~dante@gateway/tor-sasl/filohuhum)
[00:49:18] <emanuele6> 21:45:06 <emanuele6 > wiscii: what about it?
[00:49:46] <emanuele6> if you had run that example you would have seen the difference (which was already shown to you), but you didn't
[00:49:59] <wiscii> yes i did
[00:50:08] <wiscii> that is why i tested it on my code
[00:51:27] <wiscii> i also went on to expand the example with a new line, whicjh i also tested
[00:51:40] <wiscii> are you satisfied now ?
[00:52:20] *** Joins: mra90 (~mra@192.55.55.52)
[00:53:00] *** Quits: Tangent-Man (~Tang3nt-M@cpc145602-basl14-2-0-cust33.20-1.cable.virginm.net) (Ping timeout: 240 seconds)
[00:55:35] *** Joins: tuskkk____ (uid18470@id-18470.tinside.irccloud.com)
[00:55:49] *** Joins: causa_sui (~causasui@c-68-60-125-136.hsd1.mi.comcast.net)
[00:57:48] *** Joins: Tach (~Tach@user/tach)
[01:00:38] *** Quits: causa_sui (~causasui@c-68-60-125-136.hsd1.mi.comcast.net) (Ping timeout: 256 seconds)
[01:01:34] <wiscii> emanuele6: my code is open source and on github. I don't spam this channel with it because, you know. I come here to learn.
[01:04:35] *** Quits: anaveragehuman (~anaverage@user/anaveragehuman) (Ping timeout: 240 seconds)
[01:04:36] *** Quits: masoudd (~masoudd@user/masoudd) (Ping timeout: 240 seconds)
[01:05:33] *** Joins: easyriders (~easyrider@xb9b5df82.cust.hiper.dk)
[01:05:59] <wiscii> emanuele6: i have never "expected" anything from anyone
[01:06:45] *** Joins: anaveragehuman (~anaverage@user/anaveragehuman)
[01:07:04] *** Joins: causa_sui (~causasui@c-68-60-125-136.hsd1.mi.comcast.net)
[01:08:04] *** Joins: qub411 (~user@118.209.248.55)
[01:09:45] * wiscii is now on emanuele6 ignore list .. for the wrong reason
[01:10:09] *** Quits: easyriders (~easyrider@xb9b5df82.cust.hiper.dk) (Ping timeout: 272 seconds)
[01:10:23] *** Quits: powerman2206 (~powerman2@141-136-140-79.dsl.iskon.hr) (Quit: WeeChat 3.4)
[01:15:24] *** Quits: causa_sui (~causasui@c-68-60-125-136.hsd1.mi.comcast.net) (Ping timeout: 240 seconds)
[01:15:56] *** Joins: causa_sui (~causasui@c-68-60-125-136.hsd1.mi.comcast.net)
[01:17:20] *** Quits: qub411 (~user@118.209.248.55) (Quit: WeeChat 3.4)
[01:17:24] *** Joins: analognoise (~analognoi@ip98-176-154-48.sd.sd.cox.net)
[01:20:28] *** Quits: causa_sui (~causasui@c-68-60-125-136.hsd1.mi.comcast.net) (Ping timeout: 256 seconds)
[01:20:42] *** Quits: magla (~gelignite@55d46ecf.access.ecotel.net) (Quit: Stay safe!)
[01:20:53] *** Joins: causa_sui (~causasui@c-68-60-125-136.hsd1.mi.comcast.net)
[01:24:15] *** Joins: roarde (~roarde@user/roarde)
[01:24:20] *** Parts: roarde (~roarde@user/roarde) ()
[01:25:02] *** Joins: unixman_home (~unixman2@229-194-137-216.mtaonline.net)
[01:25:06] *** Quits: becks` (~becks`@bbcs-125-80.pub.wingo.ch) (Quit: Client closed)
[01:26:07] *** Joins: qub411 (~user@118.209.248.55)
[01:30:06] *** Quits: causa_sui (~causasui@c-68-60-125-136.hsd1.mi.comcast.net) (Ping timeout: 256 seconds)
[01:31:25] *** Joins: rgrinberg (~textual@2806:101e:7:7728:3011:c885:e5d4:9fdd)
[01:31:26] *** Quits: drd (~drd@2001:b07:a70:9f1f:1562:34de:f50f:77d4) (Ping timeout: 250 seconds)
[01:32:31] *** Guest8016 is now known as GiverOfDomani
[01:35:42] *** Joins: drd (~drd@2001:b07:a70:9f1f:1562:34de:f50f:77d4)
[01:37:53] <wyre> emanuele6, I'm not sure why when I run the command in the cli it works as expected ... but when I run the script it doesn't https://bpa.st/RLBA this is the script currently https://bpa.st/KVOQ ðŸ¤”
[01:38:52] *** Quits: lavaball (felix@31.204.155.215) (Remote host closed the connection)
[01:39:01] <wyre> it's apparently passing it also . to stow
[01:39:43] <emanuele6> i am not sure what i am supposed to look at, but there is an unquoted $HOME expansion.
[01:40:18] <emanuele6> also you have   [[ "$#" -eq 1 || "$#" -eq 2 ]]
[01:40:26] <emanuele6> and then: stow -v -t $HOME -d ./dotfiles/ "$1" "$2"
[01:40:28] <emanuele6> why is that?
[01:40:42] <emanuele6> you really want to pass an empty string there if you have only one argument?
[01:41:28] <wyre> emanuele6, I guess that could be the problem
[01:41:39] <wyre> but I'm not sure how to avoid this
[01:41:43] <emanuele6> why not just "$@"? why "$1" "$2"? (which will cause "$2" to pass "" if $2 does not exist)
[01:42:13] <wyre> oh, I see
[01:42:27] <emanuele6> why do you have functions at all? you are making your script more complicated that it needs to be by adding unnecessary functions
[01:42:56] <emanuele6> run_stow is only called once, check_wd is never called
[01:44:34] *** Joins: zuplex (~zuplex@202.51.76.205)
[01:45:45] <wyre> probably, I forgot to call check_wd ðŸ˜† I guess I was thinking more on this https://bpa.st/K3EQ
[01:45:46] <checkbot> wyre: I think the problem is on line 40. check_wd references arguments, but none are ever passed. See 2 issues on https://shellcheck.net/?id=cb95346
[01:46:13] <emanuele6> see, you are overcomplicating your code again, and getting it wrong
[01:46:32] <wyre> I forgot to pass "$@" to check_wd also ðŸ¤”
[01:46:34] <emanuele6> as for the unnecessary array with the INCORRECT expansion you had before
[01:46:42] <emanuele6> check_wd is literally only called once
[01:47:27] <wyre> https://bpa.st/AGVQ ok, so better now?
[01:47:46] *** Quits: XV8 (~XV8@2601:5cb:c001:50::5524) (Quit: My MacBook has gone to sleep. ZZZzzzâ€¦)
[01:48:08] <emanuele6> you could even get rid of elif
[01:48:12] *** Joins: XV8 (~XV8@2601:5cb:c001:50::5524)
[01:48:51] <emanuele6> if [[ $# -lt 1 || $# -gt 2 || $PWD != "$HOME"?(/*) || $1 == -h ]]; then usage; fi
[01:48:53] <emanuele6> rest of the code
[01:49:00] <emanuele6> and put an exit inside usage
[01:51:00] <emanuele6> ( i am talking regardless of what the script is actually doing, i don't know what it is doing actually because i have not cared enough to read it )
[01:51:35] <wiscii> so why do i get the third degree ?
[01:53:21] <emanuele6> wiscii: ?
[01:53:58] *** Quits: CaCode (~CaCode@user/cacode) (Quit: Leaving)
[01:54:35] <wyre> emanuele6, what about this? https://bpa.st/EDWQ
[01:55:21] <emanuele6> that is not the same as before is it?
[01:55:50] <wyre> nope, I've applied your suggestions (I think ðŸ¤”)
[01:55:52] *** Quits: barjac (~quassel@92.40.0.136.threembb.co.uk) (Quit: barjac)
[01:56:34] <emanuele6> but you didn't
[01:56:51] <emanuele6> now you don't print the usage if [[ "$EUID" -eq 0  && "$1" == ?*_root || "$EUID" -ne 0 && "$1" !=  ?*_root ]] fails
[01:57:07] <emanuele6> it is not equivalent?
[01:59:26] *** Joins: barjac (~quassel@92.40.0.136.threembb.co.uk)
[01:59:53] <wyre> then it's when I want to continue
[02:00:10] <wyre> because if you are root you can perform operations over *_root folders
[02:00:33] <wyre> but if you are not ... you should provide folders without _root suffix
[02:00:51] *** Quits: unop (~unop@195.91.110.250) (Remote host closed the connection)
[02:00:52] *** Quits: zer0bitz (~zer0bitz@2001:2003:f74d:b800:7d50:ed7b:88e6:c382) (Read error: Connection reset by peer)
[02:01:01] <wyre> s/over/with/
[02:01:01] *** Quits: jtmusky (~jtmusky@104-1-122-97.lightspeed.okcbok.sbcglobal.net) (Quit: Bye)
[02:01:09] *** Joins: unop (~unop@195.91.110.250)
[02:01:38] <emanuele6> you removed removed check_wd and put it inline
[02:02:03] <emanuele6> and you also made the else part of   if ...; then ... else usage; exit 2; fi   disappear
[02:02:09] <wiscii> emanuele6: ?
[02:02:30] <wyre> yes, emanuele6
[02:02:53] <wyre> this is my last version https://bpa.st/EDWQ
[02:03:24] <emanuele6> i saw that
[02:03:42] <emanuele6> but why did you remove the else usage part from the [[ "$EUID" -eq 0  && "$1" == ?*_root || "$EUID" -ne 0 && "$1" !=  ?*_root ]] check
[02:03:52] <emanuele6> do you want your script to do nothing when that happens?
[02:04:14] * Earnestly dislikes proxy conditionals like "am I root?"
[02:04:21] *** Joins: causa_sui (~causasui@c-68-60-125-136.hsd1.mi.comcast.net)
[02:04:29] * Earnestly laughs at stupid tools which do this when fakeroot works /perfectly/
[02:04:50] *** Quits: mowcat (~mowcat@host86-129-162-211.range86-129.btcentralplus.com) (Remote host closed the connection)
[02:04:58] <wyre> oh, I see
[02:05:40] *** Quits: m0viefreak (~asdf@user/m0viefreak) (Remote host closed the connection)
[02:06:12] <wyre> Earnestly, the idea is to clone my dotfiles git repo into /root and make symlinks with stow from there
[02:06:20] <wyre> I'm not sure if I could do this with fakeroot
[02:07:17] <wyre> of course I don't want to have the same dotfiles for my user than for the root user, but I'd like to have some customization for zsh
[02:07:19] *** Quits: unop (~unop@195.91.110.250) (Remote host closed the connection)
[02:07:24] *** Quits: trekkie1701c (~trekkie17@user/trekkie1701c) (Quit: :P)
[02:07:28] <Earnestly> wyre: fakeroot will not work if actual root permission is necessary
[02:07:43] <wyre> Earnestly, then I need to do this check ðŸ˜ž
[02:07:54] *** Joins: unop (~unop@195.91.110.250)
[02:07:56] <Earnestly> But proxy conditionals are a smell to me, they don't test for actual requirements (sometimes they can't), they use proximity conditions to make assumptions
[02:08:45] <emanuele6> also i am a little confused by the `exit 2' in get_available_distros
[02:08:49] <Earnestly> "Does one need to be root, or perhaps simply need write permission?  Then test for write permission."
[02:08:59] <emanuele6> shouldn't that be return?
[02:09:02] *** Quits: causa_sui (~causasui@c-68-60-125-136.hsd1.mi.comcast.net) (Ping timeout: 272 seconds)
[02:09:32] <emanuele6> yeah, i also don't get these is the user root checks
[02:09:34] <wyre> emanuele6, probably
[02:09:42] <emanuele6> these are just to prevent you from running the script
[02:09:47] <emanuele6> what is the point?
[02:10:34] <wyre> also ... what about the point of using $PWD in as "$PWD"/dotfiles to be able to install it in ~/.local/bin?
[02:10:36] <emanuele6> maybe i am just not understanding the script
[02:10:41] <Earnestly> The point I'm making isn't even to do with this specific case, specifically root, that's just the most common example I find.  But proxy conditionals are everywhere, in programming, in science (medicine), etc.
[02:11:23] <Earnestly> They're sometimes unavoidable but in all cases they should be understood
[02:11:48] *** Quits: drd (~drd@2001:b07:a70:9f1f:1562:34de:f50f:77d4) (Ping timeout: 240 seconds)
[02:11:51] <wyre> I guess the problem is you have not ever used stow ðŸ˜ž
[02:11:56] <Earnestly> If you have the ability to do real tests, prefer them over proxies
[02:12:15] *** Quits: tejr (~tejr@user/tejr) (Ping timeout: 240 seconds)
[02:13:42] <wiscii> need some monkeys for testing!
[02:14:39] *** Joins: tejr (~tejr@user/tejr)
[02:14:56] <emanuele6> wiscii: also like, the distros array
[02:14:59] *** Quits: troyt (troyt@2601:681:4100:d591:44dd:acff:fe85:9c8e) (Quit: AAAGH!  IT BURNS!)
[02:14:59] <emanuele6> whay is it for?
[02:15:27] *** Joins: troyt (troyt@2601:681:4100:d591:44dd:acff:fe85:9c8e)
[02:15:44] <larryv> wyre: that was for you
[02:15:48] <emanuele6> if you don't need the array, the whole for loop is unnecessary
[02:15:54] <emanuele6> oh, oops
[02:16:01] <emanuele6> yeah, wyre. sorry, wiscii
[02:16:05] *** Joins: drd (~drd@93-42-66-75.ip85.fastwebnet.it)
[02:16:11] <wiscii> no matter your test suite, you cannot test for The Monkey
[02:16:30] *** Quits: YuGiOhJCJ (~YuGiOhJCJ@gateway/tor-sasl/yugiohjcj) (Quit: YuGiOhJCJ)
[02:16:31] <wiscii> emanuele6: sure, np
[02:16:55] <emanuele6> you can just use a single printf instead of all those lines with the loop
[02:17:41] <wyre> but could you do this dynamically without a for loop?
[02:18:06] <wyre> maybe by using the array features ðŸ¤”
[02:18:12] <emanuele6> # printf '\t* %s\n' .*
[02:18:18] <shbot> emanuele6:         * .
[02:18:18] <shbot> emanuele6:         * ..
[02:18:18] <shbot> emanuele6: etc... ( http://ix.io/3Qev )
[02:18:54] <emanuele6> if you need to use basename, sure, you need the loop
[02:19:05] <emanuele6> but you still don't need all those extra lines for the array
[02:20:01] <wyre> I guess the lines about the array are because in a future maybe I could call that function several times
[02:20:20] <emanuele6> several times?
[02:20:21] <wyre> actually it's called only one time also
[02:20:35] <emanuele6> it is setting an array? why would it matter if you call it several times
[02:21:21] *** Quits: thyriaen (~thyriaen@dynamic-077-191-029-223.77.191.pool.telefonica.de) (Remote host closed the connection)
[02:21:33] <wyre> well, if you don't empty the array and you call twice the function ... it would duplicate values, wouldn't it?
[02:23:49] <wiscii> get over-write
[02:25:24] *** Joins: causa_sui (~causasui@c-68-60-125-136.hsd1.mi.comcast.net)
[02:25:42] <emanuele6> wyre: doesn't this make more sense to you? https://0x0.st/oKsb.sh
[02:26:12] <emanuele6> or even this http://0x0.st/oKsc.sh
[02:27:05] <emanuele6> i would even replace the literal tabs you have put in the string formats with \t
[02:27:06] *** Joins: easyriders (~easyrider@xb9b5df82.cust.hiper.dk)
[02:27:25] <emanuele6> and "$0" in the usage string doesn't make much sense to me, but keep it if you want, i guess.
[02:27:38] <emanuele6> ( i typoed distros )
[02:28:36] <emanuele6> there are also mistakes in the usage
[02:28:42] <wiscii> you typ0d typ0
[02:28:58] <emanuele6> like the [-D] optional option is mentioned, but it is not real
[02:29:06] <emanuele6> and the -h option is not mentioned
[02:29:38] <wyre> stow accepts [-D|-S|-R], that's what its manpage says at least
[02:29:51] <wyre> and it should be real
[02:29:52] <emanuele6> https://bpa.st/RLBA
[02:29:56] <emanuele6> >  Usage: ./stow-home [-D] <distro>
[02:30:37] *** Quits: Gooberpatrol66 (~Gooberpat@user/gooberpatrol66) (Ping timeout: 240 seconds)
[02:33:09] *** Joins: rcernin (~rcernin@124.190.132.36)
[02:34:04] *** Joins: volga629 (~volga629@72.139.93.26)
[02:34:17] *** Quits: causa_sui (~causasui@c-68-60-125-136.hsd1.mi.comcast.net) (Ping timeout: 240 seconds)
[02:35:02] <emanuele6> oh, that is what that "$1" "$2" thing was for?
[02:35:12] <wyre> emanuele6, sure ðŸ˜†
[02:35:31] <emanuele6> what is the point of checking that you only pass two arguments if you don't even validate them?
[02:35:39] *** Quits: eroux (~eroux@102-65-85-242.ftth.web.africa) (Quit: My MacBook has gone to sleep. ZZZzzzâ€¦)
[02:35:40] <emanuele6> you just forward them, whatever they are
[02:35:46] <emanuele6> UNLESS the first one is -h
[02:35:50] <wyre> also ... shellcheck gives me the SC2241 for L30 `exit -- "$1"`
[02:35:52] <emanuele6> in which case you print the usage
[02:35:53] <emanuele6> it is weird
[02:36:35] <wyre> I guess I should use getopt
[02:36:52] <emanuele6> wyre: have you read SC2241?
[02:36:57] <emanuele6> https://github.com/koalaman/shellcheck/wiki/SC2241
[02:37:06] <emanuele6> do you think that applies here?
[02:38:03] <wyre> well, shellcheck says that https://bpa.st/T47Q
[02:38:13] *** Joins: evanextreme (~evan@2604:4080:1000:8150:1cc2:43f9:3edb:f1c0)
[02:38:18] <emanuele6> yes, i know
[02:38:26] <emanuele6> have read the wiki page though?
[02:38:57] <wyre> yes, and you are using the first argument you passed to the function and are always integers
[02:39:06] <wyre> but I guess shellcheck doesn't know it ðŸ˜ž
[02:39:27] <emanuele6> # a=2; (exit -- "$a"); echo "$?"; (exit "$a"); echo "$?"
[02:39:28] <shbot> emanuele6: 2
[02:39:28] <shbot> emanuele6: 2
[02:39:30] <larryv> wyre: do not use getopt
[02:39:32] <emanuele6> # a=--; (exit -- "$a"); echo "$?"; (exit "$a"); echo "$?"
[02:39:33] <shbot> emanuele6: bash: exit: --: numeric argument required
[02:39:33] <shbot> emanuele6: 2
[02:39:33] <shbot> emanuele6: 0
[02:40:07] <wyre> could I prevent/ignore this shellcheck error with a comment?
[02:40:31] *** Joins: Gooberpatrol66 (~Gooberpat@user/gooberpatrol66)
[02:40:59] <emanuele6> that was to prevent `exit -- "$1"' from returning 0, but sure, if you care that much about shellcheck and don't want to bother configuring an exception, just use `exit "$1"', it doesn't matter.
[02:41:14] <emanuele6> "$1" can only be 0, 1 or 2 anyway.
[02:41:26] <emanuele6> and yes, why getopts?
[02:41:41] <wyre> to validate args(?)
[02:41:44] <emanuele6> getopts, yes
[02:41:48] <emanuele6> why getopt?
[02:42:04] <larryv> wyre: getopt and getopts are different things
[02:42:04] <emanuele6> but also why getopts, you only want to allow 2 arguments
[02:42:15] <wyre> well, you talked about validating the arguments ðŸ˜†
[02:42:34] <emanuele6> wyre: but you are validating arguments partially
[02:42:36] <wyre> oh, I see larryv I've just noticed :-)
[02:42:45] *** Joins: _mikey (~mikey@user/mikey/x-4335048)
[02:43:23] <emanuele6> you are not allowing more than 2 arguments, but you only want the user to be able to pass either only one <distro> or -D and one <distro>
[02:43:33] <emanuele6> and you are not checking for that
[02:43:45] <emanuele6> i would just not check at all, and just forward arguments
[02:44:03] <emanuele6> this whole script really doesn't do anything
[02:44:05] <emanuele6> i don't get it
[02:44:17] <emanuele6> it basically just calls `stow'
[02:44:37] <emanuele6> and very losely prevents you from running it in certain cases
[02:45:39] <emanuele6> s/o/&&/
[02:47:49] <wyre> emanuele6, I'm not sure ... but are those spawning dotfiles in the output https://bpa.st/LV5Q because I'm not using basename?
[02:48:22] <emanuele6> what is that?
[02:48:39] <wyre> the output of the script
[02:48:48] <wyre> L6 and L12
[02:49:35] <emanuele6> oh, put  `&>/dev/null'  after pushd and popd
[02:50:35] <emanuele6> but do you realise that this script is kind of pointless?
[02:50:56] *** Joins: causa_sui (~causasui@c-68-60-125-136.hsd1.mi.comcast.net)
[02:50:59] <emanuele6> the only thing it really does is run `stow -v -t "$HOME" -d ./dotfiles/ "$@"'
[02:51:00] *** Quits: mra90 (~mra@192.55.55.52) (Ping timeout: 240 seconds)
[02:51:01] <wyre> emanuele6, it makes some sense to me ... I guess I could explain how I plan to use it after
[02:51:14] <emanuele6> and it loosely prevents you from running it in certain cases
[02:52:49] *** Quits: evanextreme (~evan@2604:4080:1000:8150:1cc2:43f9:3edb:f1c0) (Read error: Connection timed out)
[02:52:57] <emanuele6> i feel like your EUID tests are backwards
[02:53:02] <emanuele6> like the logic is inverted
[02:53:07] *** Quits: cim (~cim@205.185.117.110) (Quit: The Lounge - https://thelounge.chat)
[02:53:16] <wyre> emanuele6, and I'm still not sure about the point of using $PWD to be able to install it in ~/.local/bin
[02:53:19] <emanuele6> or did i mess that up?
[02:53:30] <emanuele6> what?
[02:53:39] *** Quits: rgrinberg (~textual@2806:101e:7:7728:3011:c885:e5d4:9fdd) (Quit: My MacBook has gone to sleep. ZZZzzzâ€¦)
[02:53:43] <emanuele6> wyre: i have no idea what that is about, sorry
[02:53:44] *** Quits: Atque (~Atque@user/atque) (Quit: ...)
[02:53:54] <emanuele6> did i miss some messages?
[02:54:22] <wyre> I mean to use "$PWD"/dotfiles instead ./dotfiles
[02:54:24] *** Joins: N4buc0- (~N4buc0@189.26.49.16.dynamic.adsl.gvt.net.br)
[02:54:30] <emanuele6> but that is the same?
[02:54:45] <emanuele6> apart from "$PWD"/dotfiles being an absolute path
[02:54:49] *** Quits: N4buc0 (~N4buc0@2804:7f4:348b:7576:b860:c17f:3363:8fd9) (Remote host closed the connection)
[02:54:54] <emanuele6> why? what?
[02:55:00] <emanuele6> i don't understand
[02:55:02] *** Joins: suedoe (~suedoe@2600:8807:28d:2d00:881e:12b:5a8d:6eb2)
[02:55:07] <wyre> no, but I guess if I put the script into ~/.local/bin (which is in my PATH) I should be able to run from anywere
[02:55:12] <emanuele6> wyre: also ... what about the point of using $PWD in as "$PWD"/dotfiles to be able to install it in ~/.local/bin?
[02:55:15] <emanuele6> huh?
[02:55:23] <emanuele6> ( that was a quote )
[02:55:25] <wyre> and it should use the current pwd
[02:55:28] <wyre> instead .
[02:55:28] *** Quits: lonewulf` (~lonewulf@user/lonewulf) (Quit: leaving)
[02:55:45] <emanuele6> what are you talking about?
[02:55:57] <emanuele6> # bash -c 'ls -a .'
[02:55:59] <shbot> emanuele6: .  ..  .bashrc  .mkshrc
[02:56:09] <wyre> when you do pushd dotfiles, for example
[02:56:19] <emanuele6> bash is in /bin, bash -c 'ls -a .' printed /root though
[02:56:26] <emanuele6> # ls -a .
[02:56:28] <shbot> emanuele6: .  ..  .bashrc  .mkshrc
[02:56:46] <emanuele6> ls is in /bin, but ls -a . printed the content of /root
[02:56:48] <emanuele6> # pwd
[02:56:49] <shbot> emanuele6: /root
[02:56:52] <emanuele6> # ls -a .
[02:56:54] <shbot> emanuele6: .  ..  .bashrc  .mkshrc
[02:56:56] <emanuele6> # ls -a "$PWD"
[02:56:57] <shbot> emanuele6: .  ..  .bashrc  .mkshrc
[02:57:00] <emanuele6> # type ls
[02:57:01] <shbot> emanuele6: ls is /usr/bin/ls
[02:57:06] <emanuele6> ??
[02:57:32] <emanuele6> PWD is the current directory, why does the location of the binary matter?
[02:58:06] <wyre> well, I'm not sure if the binary is called from another path will expand . properly
[02:58:17] <larryv> wyre: if you think either $PWD or . has to do with the "location" of the script (another can of worms, but i digress), you're mistaken
[02:58:17] <emanuele6> it does not get expanded it is .
[02:58:45] <emanuele6> wyre: when i run `rm -r ../tmp', the file named temp in the parent directory gets deleted right
[02:59:04] <emanuele6> even though rm is in /usr/bin, it is not /usr/tmp that gets delete
[02:59:19] <wyre> sure, but i'm not passing ./dotfiles to the script, it's hardcoded
[02:59:26] <emanuele6> it is   /home/emanuele6/tmp/ if i am in /home/emanuele6/videos
[02:59:38] <emanuele6> wyre: and?
[02:59:52] <emanuele6> in the     bash -c 'ls -a .'   example
[02:59:58] <emanuele6> . is also hardcoded
[03:00:02] <emanuele6> # type bash
[03:00:04] <shbot> emanuele6: bash is /bin/bash
[03:00:07] <emanuele6> bash is in /bin
[03:00:18] <emanuele6> yet /root (the pwd) was printed, not /bin
[03:00:45] <emanuele6> . refers to the current working directory, not the location of the script
[03:00:46] *** Quits: drd (~drd@93-42-66-75.ip85.fastwebnet.it) (Ping timeout: 256 seconds)
[03:00:57] <emanuele6> the location of the binary doesn't matter at all really
[03:01:36] *** Quits: causa_sui (~causasui@c-68-60-125-136.hsd1.mi.comcast.net) (Ping timeout: 272 seconds)
[03:03:34] <emanuele6> there is no implicit chdir to the location of the binary when you call a process
[03:03:44] <wyre> I see
[03:03:49] <emanuele6> a process is hardly even aware of the location of its binary when you run it
[03:04:49] *** Quits: tuskkk____ (uid18470@id-18470.tinside.irccloud.com) (Quit: Connection closed for inactivity)
[03:04:49] *** Joins: andril (~andril@2601:586:8400:1d9:b17:6e6e:57cb:e42d)
[03:05:24] *** Quits: yustin (~yustin@user/yustin) (Ping timeout: 272 seconds)
[03:07:26] *** Joins: rgrinberg (~textual@2806:101e:7:70b6:d0ec:d248:3a49:15e0)
[03:08:49] <emanuele6> # echo ./.bashrc
[03:08:50] <shbot> emanuele6: ./.bashrc
[03:09:05] <emanuele6> <wyre > sure, but i'm not passing ./dotfiles to the script, it's hardcoded
[03:09:16] <emanuele6> it sounds like you think . is an expansion like ~, it is not
[03:09:44] <emanuele6> . means "the current directory", at the kernel path resolution level
[03:09:55] *** Joins: cim (~cim@205.185.117.110)
[03:10:29] <emanuele6> there is a tilde expansion for "$PWD", but it is not .
[03:10:33] <emanuele6> # echo ~+/.bashrc
[03:10:35] <shbot> emanuele6: /root/.bashrc
[03:11:03] <emanuele6> ~+ is the tilde expansion equivalent of "$PWD", like ~ is the tilde expansion equivalent of "$HOME"
[03:11:49] *** Joins: trekkie1701c (~trekkie17@user/trekkie1701c)
[03:12:21] *** Quits: troyt (troyt@2601:681:4100:d591:44dd:acff:fe85:9c8e) (Quit: AAAGH!  IT BURNS!)
[03:12:45] *** Joins: troyt (troyt@2601:681:4100:d591:44dd:acff:fe85:9c8e)
[03:15:01] *** Quits: pasteban (~pasteban@157.146.251.23.bc.googleusercontent.com) (Remote host closed the connection)
[03:15:39] *** Joins: pasteban (~pasteban@157.146.251.23.bc.googleusercontent.com)
[03:16:49] *** Quits: igemnace (~ian@user/igemnace) (Remote host closed the connection)
[03:18:37] *** Quits: sinaowolabi_ (~SinaOwola@160.152.109.220) (Ping timeout: 256 seconds)
[03:19:35] *** Joins: causa_sui (~causasui@c-68-60-125-136.hsd1.mi.comcast.net)
[03:20:01] *** Quits: checkbot (~checkbot@157.146.251.23.bc.googleusercontent.com) (Remote host closed the connection)
[03:21:20] *** Joins: herjazz (~herjazz@p10513117-ipngn24101marunouchi.tokyo.ocn.ne.jp)
[03:21:39] *** Joins: checkbot (~checkbot@157.146.251.23.bc.googleusercontent.com)
[03:22:13] *** Quits: Kyuzo68 (~Kyuzo@host-87-5-239-188.retail.telecomitalia.it) (Quit: Konversation terminated!)
[03:22:28] *** Quits: Earnestly (~earnest@user/earnestly) (Read error: Connection reset by peer)
[03:26:47] *** Joins: Earnestly (~earnest@user/earnestly)
[03:26:47] *** Quits: analognoise (~analognoi@ip98-176-154-48.sd.sd.cox.net) (Read error: Connection reset by peer)
[03:28:11] *** Quits: andril (~andril@2601:586:8400:1d9:b17:6e6e:57cb:e42d) (Ping timeout: 250 seconds)
[03:28:36] *** Quits: dreamon (~dreamon@pd95035d1.dip0.t-ipconnect.de) (Ping timeout: 240 seconds)
[03:29:06] *** Quits: causa_sui (~causasui@c-68-60-125-136.hsd1.mi.comcast.net) (Ping timeout: 256 seconds)
[03:29:45] *** Joins: causa_sui (~causasui@c-68-60-125-136.hsd1.mi.comcast.net)
[03:30:19] *** Quits: tk (~tk@ircpuzzles/staff/tk) (Quit: Well, this is unexpected.)
[03:30:43] *** Joins: tk (~tk@ircpuzzles/staff/tk)
[03:31:57] *** Quits: freep (~freepppp@193.92.35.32.dsl.dyn.forthnet.gr) (Read error: Connection reset by peer)
[03:32:01] *** Quits: easyriders (~easyrider@xb9b5df82.cust.hiper.dk) (Ping timeout: 272 seconds)
[03:32:18] <Tach> I try to get some config settings from an ini file using a function where I source the file from, but then we have the "cannot return an array" What is the best way here ?
[03:33:13] <phogg> show your code? Sure sounds like you are literally sourcing an ini file... that's not going to work.
[03:33:18] *** Quits: TheHermann (~TheHerman@gateway/tor-sasl/thehermann) (Quit: Leaving)
[03:34:32] *** Quits: causa_sui (~causasui@c-68-60-125-136.hsd1.mi.comcast.net) (Ping timeout: 272 seconds)
[03:35:20] *** Joins: causa_sui (~causasui@c-68-60-125-136.hsd1.mi.comcast.net)
[03:35:48] <Tach> phogg no I'm not, sec... https://pastebin.com/76ZmMWEE
[03:35:48] <pasteban> Paste is available without ads on https://pastebin.com/raw/76ZmMWEE
[03:36:47] <emanuele6> !varcaps
[03:36:47] <greybot> By convention, environment variables (PATH, EDITOR, SHELL, ...) and internal shell variables (BASH_VERSION, RANDOM, ...) are fully capitalized. All other variable names should be lowercase. Since variable names are case-sensitive, this convention avoids accidentally overriding environmental and internal variables. https://pubs.opengroup.org/onlinepubs/9699919799/basedefs/V1_chap08.html
[03:37:12] <Tach> emanuele6 yeah bad habbit :)
[03:37:15] <phogg> Tach: if you want to have the array you build within the function to still exist after it exits you can just make it global. If you're worried about re-using a single, global variable name each time you call it you can specify a variable name at call time.
[03:37:21] * phogg cannot certify that these things are wise
[03:37:44] <emanuele6> you defined a local array with that code, yes
[03:37:58] *** Joins: canoodle (~canoodle@185.66.194.32)
[03:38:15] <emanuele6> # help declare | grep -A1 '^[[:blank:]]*When'
[03:38:16] <phogg> Tach: another solution is to to e.g. emit a newline delimited list and then use mapfile on the function output, but that doesn't work with associative arrays
[03:38:18] <shbot> emanuele6:     When used in a function, `declare' makes NAMEs local, as with the `local'
[03:38:18] *** Quits: volga629 (~volga629@72.139.93.26) (Quit: My MacBook has gone to sleep. ZZZzzzâ€¦)
[03:38:18] <shbot> emanuele6:     command.  The `-g' option suppresses this behavior.
[03:38:22] <Tach> oh damn, I need to to it outside the function ?
[03:38:27] <phogg> Tach: declare -g
[03:38:31] <emanuele6> or declare -g
[03:38:39] <emanuele6> but why are you using a function?
[03:38:43] <Tach> ah indeed, good one :) whay is preferable
[03:39:03] <Tach> emanuele6 thought it was easier because of the args
[03:39:11] *** Quits: karabaja4 (~karabaja4@dh207-94-120.xnet.hr) (Remote host closed the connection)
[03:39:14] <Tach> brb toilet
[03:39:42] *** Joins: w1r3d (~w1r3d@user/w1r3d)
[03:40:00] *** Quits: sa0 (~sa0sin@88.120.82.205) (Remote host closed the connection)
[03:40:14] *** Quits: causa_sui (~causasui@c-68-60-125-136.hsd1.mi.comcast.net) (Ping timeout: 272 seconds)
[03:40:36] *** Joins: masoudd (~masoudd@user/masoudd)
[03:42:29] <Tach> back
[03:42:39] *** Joins: sa0 (~sa0sin@2a01:e0a:414:b360:8cfb:b3b6:10d0:2e4b)
[03:42:45] *** Joins: causa_sui (~causasui@c-68-60-125-136.hsd1.mi.comcast.net)
[03:46:33] *** Joins: lonewulf` (~lonewulf@user/lonewulf)
[03:47:00] *** Quits: causa_sui (~causasui@c-68-60-125-136.hsd1.mi.comcast.net) (Ping timeout: 240 seconds)
[03:47:14] *** Quits: sa0 (~sa0sin@2a01:e0a:414:b360:8cfb:b3b6:10d0:2e4b) (Ping timeout: 260 seconds)
[03:48:30] <phogg> it's time for another "good idea? / bad idea?"
[03:48:44] *** Quits: NoelFlantier3 (~Hubert@195.201.244.189) (Remote host closed the connection)
[03:48:50] <phogg> # f () { local -A ini; ini[x]=y; local c=$(declare -p ini); printf %s\\n "${c/ini/$1}"; }; eval "$(f stuff)"; declare -p stuff
[03:48:52] <shbot> phogg: declare -A stuff=([x]="y" )
[03:49:05] *** Joins: tatarqa (~kli@ip-89-177-122-45.net.upcbroadband.cz)
[03:49:08] *** Joins: NoelFlantier3 (~Hubert@195.201.244.189)
[03:49:19] *** Quits: w1r3d (~w1r3d@user/w1r3d) (Quit: Leaving)
[03:50:37] *** Joins: w1r3d (~w1r3d@user/w1r3d)
[03:51:16] *** Quits: w1r3d (~w1r3d@user/w1r3d) (Remote host closed the connection)
[03:51:37] *** Joins: w1r3d (~w1r3d@user/w1r3d)
[03:55:09] <emanuele6> Tach: http://0x0.st/oKsx.txt -- this is the typical way to "return" arrays from functions
[03:55:16] <emanuele6> !quote also you seem to need this
[03:55:19] <emanuele6> !quote > also you seem to need this
[03:55:19] <greybot> also you seem to need this: https://mywiki.wooledge.org/Quotes
[03:55:28] <emanuele6> !qefs > Tach
[03:55:28] <greybot> Tach: "$Quote" "$Every" "$Fucking" "$Substitution"
[03:55:36] <emanuele6> !quotewhen
[03:55:36] <greybot> "Double quote" every literal that contains spaces/metacharacters and _every_ expansion: "$var", "$(command "$var")", "${array[@]}", "a & b". Use 'single quotes' for code or literal dollar signs: 'Costs $5 US', ssh host 'echo "$HOSTNAME"'. See http://mywiki.wooledge.org/Quotes , http://mywiki.wooledge.org/Arguments and http://wiki.bash-hackers.org/syntax/words .
[03:55:58] *** Joins: causa_sui (~causasui@c-68-60-125-136.hsd1.mi.comcast.net)
[03:56:03] <emanuele6> !quoteoptional
[03:56:04] <greybot> "Double quotes" are optional for the word following 'case', the RHS of simple assignments (e.g. foo=$bar), or inside [[ except for the RHS of =~ or = (e.g. [[ -f $file ]])
[03:56:18] <Tach> emanuele6 yeah I normally do but I was messing around
[03:56:40] <emanuele6> !forget quoteoptional
[03:56:40] <greybot> OK, emanuele6
[03:57:21] *** Quits: thiras (~thiras@user/thiras) (Ping timeout: 272 seconds)
[03:59:08] <Tach> emanuele6 you like the word F*CK don't you ? :P
[03:59:24] <Tach> actually the one that makes progress :D
[04:00:05] <cim> B A $ H
[04:01:30] *** Joins: lsrtl__ (~lsrtl@user/lsrtl)
[04:01:42] *** Quits: troyt (troyt@2601:681:4100:d591:44dd:acff:fe85:9c8e) (Quit: AAAGH!  IT BURNS!)
[04:01:42] *** Joins: karabaja4 (~karabaja4@dh207-94-120.xnet.hr)
[04:01:46] *** Quits: causa_sui (~causasui@c-68-60-125-136.hsd1.mi.comcast.net) (Ping timeout: 272 seconds)
[04:02:00] *** Joins: troyt (troyt@2601:681:4100:d591:44dd:acff:fe85:9c8e)
[04:02:00] <Tach> emanuele6 but thanks :D
[04:02:05] * Tach hugs emanuele6
[04:02:22] *** Quits: timm (~timm@user/timm) (Remote host closed the connection)
[04:03:03] *** Joins: timm (~timm@user/timm)
[04:03:57] *** Quits: lsrtl_ (~lsrtl@user/lsrtl) (Ping timeout: 256 seconds)
[04:04:27] <emanuele6> !learn quoteoptional "Double quotes" are optional for the word following 'case', the RHS of simple assignments (e.g. foo=$bar), or inside [[ except for the RHS of =~ or = (e.g. [[ -f $file ]]); "Double quotes" are also optional for substitution in associative (not indexed) array subscripts ( e.g. declare -A foo; ...; foo[$k]=abc )
[04:04:27] <greybot> OK, emanuele6
[04:04:33] <emanuele6> !quoteoptional
[04:04:33] <greybot> "Double quotes" are optional for the word following 'case', the RHS of simple assignments (e.g. foo=$bar), or inside [[ except for the RHS of =~ or = (e.g. [[ -f $file ]]); "Double quotes" are also optional for substitution in associative (not indexed) array subscripts ( e.g. declare -A foo; ...; foo[$k]=abc )
[04:04:55] <emanuele6> !forget quoteoptional
[04:04:55] <greybot> OK, emanuele6
[04:05:26] *** Joins: causa_sui (~causasui@c-68-60-125-136.hsd1.mi.comcast.net)
[04:05:32] <emanuele6> !learn quoteoptional "Double quotes" are optional for the word following 'case', the RHS of simple assignments (e.g. foo=$bar), or inside [[ except for the RHS of =~ or = (e.g. [[ -f $file ]]); "Double quotes" are also optional for substitutions in associative array subscripts ( e.g. declare -A foo; ...; foo[$k]=abc )
[04:05:32] <greybot> OK, emanuele6
[04:05:35] <emanuele6> !quoteoptional
[04:05:35] <greybot> "Double quotes" are optional for the word following 'case', the RHS of simple assignments (e.g. foo=$bar), or inside [[ except for the RHS of =~ or = (e.g. [[ -f $file ]]); "Double quotes" are also optional for substitutions in associative array subscripts ( e.g. declare -A foo; ...; foo[$k]=abc )
[04:06:10] *** Joins: jensen (~jensen@65.78.100.184)
[04:06:14] <timm> !RHS
[04:06:14] <timm> whats RHS?
[04:06:14] <greybot> # var="[a-z]"; [[ $var = $var ]] || echo "this is false, and why you should quote the RHS of = in [[ ]]"
[04:06:17] <shbot> greybot: this is false, and why you should quote the RHS of = in [[ ]]
[04:06:38] <phogg> timm: right hand side, aka the rvalue
[04:07:19] *** Joins: lsrtl_ (~lsrtl@user/lsrtl)
[04:07:31] *** Quits: rgrinberg (~textual@2806:101e:7:70b6:d0ec:d248:3a49:15e0) (Quit: My MacBook has gone to sleep. ZZZzzzâ€¦)
[04:07:34] *** Quits: canoodle (~canoodle@185.66.194.32) (Quit: Leaving)
[04:07:42] <emanuele6> !forget quoteoptional
[04:07:42] <greybot> OK, emanuele6
[04:07:52] <timm> phogg, ty
[04:07:52] *** Quits: timm (~timm@user/timm) (Remote host closed the connection)
[04:07:53] <emanuele6> !learn quoteoptional "Double quotes" are optional for the word following 'case', the RHS of simple assignments (e.g. foo=$bar), or inside [[ except for the RHS of =~, =, == or != (e.g. [[ -f $file ]]); "Double quotes" are also optional for substitutions in associative array subscripts ( e.g. declare -A foo; ...; foo[$k]=abc )
[04:07:54] <greybot> OK, emanuele6
[04:08:20] <emanuele6> it was only mentioning =~ and =, but they are also required for == and !=
[04:08:46] <phogg> if that's not self evident the reader has a problem
[04:09:08] <jensen> anyone know why this doesn't work as a script (with the function definition removed, i want to use in a wrapper script instead), only as a shell function? Ignore if not bash-related: https://github.com/jarun/nnn/blob/master/misc/quitcd/quitcd.bash_zsh
[04:10:00] *** Quits: lsrtl__ (~lsrtl@user/lsrtl) (Ping timeout: 272 seconds)
[04:10:05] <phogg> jensen: I know nothing about zsh. What is $NNNLVL? Sure looks like it's checking the nesting level, which will be different outside a function.
[04:10:38] *** Quits: causa_sui (~causasui@c-68-60-125-136.hsd1.mi.comcast.net) (Ping timeout: 272 seconds)
[04:10:41] <phogg> or is it just a variable you invented that is supposed to be exported before you run nnn?
[04:11:53] <Tach> emanuele6 can it be that I can't use the function when I source it ? it seems I don't get any $REPLY that I can echo in the function when I test
[04:12:03] <larryv> phogg: it's not a zsh thing. the whole thing looks like valid POSIX to me
[04:12:40] <larryv> jensen: what is this supposed to do? how does it not work when you remove the function?
[04:13:56] *** Joins: timm (~timm@user/timm)
[04:13:58] <emanuele6> Tach: what does that mean? you have already misused the word "source" once. show us CODE!
[04:15:00] <jensen> that part (if-statement with $NNNLVL) can be ignored, it's not really relevant to the behavior of the function and when removed i'm experiencing the same issue. basically, after nnn (file manager application) quits, it should cd into the directory nnn was closed on
[04:15:42] <jensen> as a shell function, this works, but if i put it in a script instead (removing the function definition, the body is the script) then it doesn't cd to that directory
[04:15:50] <larryv> how is that supposed to happen? there's no cd-ing here
[04:16:06] <larryv> if you make this a script, it cannot affect the environment of its parent
[04:16:41] *** Joins: igemnace (~ian@user/igemnace)
[04:17:21] <phogg> jensen: a script runs in a child process, a shell function runs in the shell process. Therefore, only the function version can alter the shell's current directory
[04:17:33] <larryv> # echo cd / >foo.sh; . foo.sh; pwd
[04:17:36] <shbot> larryv: /
[04:17:38] <larryv> # echo cd / >foo.sh; bash foo.sh; pwd
[04:17:39] <shbot> larryv: /root
[04:17:55] *** Quits: lsrtl_ (~lsrtl@user/lsrtl) (Read error: Connection reset by peer)
[04:18:11] *** Joins: lsrtl (~lsrtl@user/lsrtl)
[04:18:18] <phogg> you can make the function version not work, too, by defining the body as a subshell:
[04:18:20] <phogg> # foo () ( cd /; ); pwd; foo; pwd;
[04:18:21] <shbot> phogg: /root
[04:18:22] <shbot> phogg: /root
[04:19:24] <Tach> emanuele6 just . /path/to/script.sh arg1 arg2
[04:19:34] <emanuele6> that makes no sense
[04:19:37] <Tach> why not /
[04:19:39] <Tach> ?
[04:19:46] <emanuele6> # help source
[04:19:47] <shbot> emanuele6: source: source filename [arguments] -- http://ix.io/aQj
[04:20:06] <Tach> is . not valid (anymore) ?
[04:20:08] <emanuele6> how does it make sense?
[04:20:14] <emanuele6> # help .
[04:20:15] <shbot> emanuele6: .: . filename [arguments] -- http://ix.io/aPy
[04:20:20] <Tach> Oh indeed!
[04:20:23] <emanuele6> source and . are the exact same thing
[04:20:24] <Tach> thanks
[04:20:29] <Tach> mhh
[04:20:35] <emanuele6> but how    . /path/to/script.sh arg1 arg2   make sense?
[04:20:39] <Tach> yeah so why didn't it make sense then ?
[04:20:40] <emanuele6> what are the args for?
[04:20:56] <Tach> oh sorry, no, I source the file and then function arg1 arg2
[04:20:58] <Tach> sorry
[04:21:13] <emanuele6> are you going to show code or what?
[04:21:14] *** Joins: roarde (~roarde@user/roarde)
[04:21:32] <jensen> phogg: i see, there's no "export" variant or way for the script to affect the parent process? could exec be relevant here?
[04:21:35] <Tach> that is the only code there
[04:21:48] <emanuele6> `. /path/to/script.sh arg1 arg2' is the only code?
[04:21:52] <emanuele6> then it is nonsense
[04:21:56] *** Quits: XV8 (~XV8@2601:5cb:c001:50::5524) (Quit: My MacBook has gone to sleep. ZZZzzzâ€¦)
[04:22:09] <emanuele6> read what `.' or `source' does and realise that passing the arguments is nonsense
[04:22:12] <roarde> Does anyone know of a channel dedicated to portable use of command-line utilites, or portable utilities? (##posix is more about the standard, per se)
[04:22:58] *** Quits: herjazz (~herjazz@p10513117-ipngn24101marunouchi.tokyo.ocn.ne.jp) (Quit: leaving)
[04:23:22] <jensen> actually nvmd on the exec part, sourcing the file must be done after nnn exits. oh well
[04:24:33] *** Joins: XV8 (~XV8@2601:5cb:c001:50::5524)
[04:25:01] *** Quits: zouhair (~zouhair@lnsm3-montreal02-142-118-91-200.internet.virginmobile.ca) (Quit: KVIrc 5.0.1 Aria http://www.kvirc.net/)
[04:25:10] *** Quits: topoi (~topoi@user/topoi) (Read error: Connection reset by peer)
[04:25:24] *** Joins: topoi (~topoi@user/topoi)
[04:26:19] <Tach> emanuele6 when I source it and then call the function it never gets into elif [[ $REPLY == *=?* && $section == "$ini_section" ]]; then
[04:26:31] <Tach> when I run the file manually it does
[04:26:41] <Tach> so file arg1 arg1
[04:26:42] <emanuele6> when you run what manually?
[04:26:46] <emanuele6> you call the function how?
[04:26:49] *** Quits: TomyLobo (~TomyLobo@p200300e80f00670088f74dbf21741073.dip0.t-ipconnect.de) (Read error: Connection reset by peer)
[04:26:49] <emanuele6> SHOW THE CODE
[04:26:54] *** Quits: n4dir (~user@i577BC92A.versanet.de) (Ping timeout: 256 seconds)
[04:26:59] <Tach> emanuele6 exactly how you described it
[04:27:24] *** Joins: zouhair (~zouhair@lnsm3-montreal02-142-118-91-200.internet.virginmobile.ca)
[04:28:00] <emanuele6> again, if it is  `. /path/to/script.sh arg1 arg2', that makes no sense, source does not implicitly call functions
[04:28:09] <emanuele6> read `help .' and learn what . does.
[04:30:06] <Tach> emanuele6 no I source the file and then run getIni arg1 arg2
[04:30:11] *** Quits: sobkas (~sobkas@95.175.17.217) (Quit: sobkas)
[04:30:16] <emanuele6> then show some code.
[04:30:28] <Tach> OK you get a dirty example
[04:31:13] <phogg> http://mywiki.wooledge.org/BashFAQ/060 is relevant. There's also the one about scripts which you can both source and execute. Might be relevant, but I can't find it
[04:31:51] *** Quits: mat001 (~mat001@c-71-202-208-88.hsd1.ca.comcast.net) (Read error: Connection reset by peer)
[04:31:56] <emanuele6> you keep wasting my time, you DID say you were using `. /path/to/script.sh arg1 arg2' at the start and you keep refusing to show me actual code and want me to figure out what you mean from your confused messages
[04:32:05] <phogg> ah there it is, FAQ109
[04:32:22] <emanuele6> i have asked at least 3 times
[04:32:59] *** Quits: rcernin (~rcernin@124.190.132.36) (Quit: WeeChat 3.4)
[04:33:01] <Tach> emanuele6 https://pastebin.com/0n3NNJFN
[04:33:01] <pasteban> Paste is available without ads on https://pastebin.com/raw/0n3NNJFN
[04:33:24] *** Joins: rcernin (~rcernin@124.190.132.36)
[04:33:53] <Tach> that should work but when I run it like that it doesn't go into the elif
[04:33:58] <emanuele6> wow, THAT is totally exactly ALL THE CODE you showed
[04:34:25] <emanuele6> !set-e
[04:34:25] <greybot> "set -e" is an inheritance of the old bourne shell, and doesn't really work well with modern shell features. You'll really have less buggy scripts if you do the error handling manually instead of relying on the unreliable "set -e"; see http://mywiki.wooledge.org/BashFAQ/105
[04:34:25] <Tach> I just use your code in the file I source so why paste that ?
[04:34:42] <emanuele6> <Tach > that is the only code there
[04:34:45] <Tach> emanuele6 that is why it's commented (for now)
[04:34:46] *** Joins: rgrinberg (~textual@2806:101e:7:70b6:d0ec:d248:3a49:15e0)
[04:34:46] <emanuele6> that is what you  said
[04:35:12] <emanuele6> Tach: set-e will break the (( ${#ret_getIni[@]} )) thing
[04:35:14] <Tach> simple, I just source your example there
[04:35:21] <Tach> commented ?
[04:35:39] <jensen> very helpful thank you
[04:36:08] <emanuele6> why did you say "that is the only code there"?
[04:36:17] <emanuele6> can even trust what you say?
[04:36:36] *** Quits: goldfish (~goldfish@user/goldfish) (Ping timeout: 240 seconds)
[04:36:37] <Tach> emanuele6 is that the discussion ? I said multiple times I source your example, c/p
[04:36:50] *** Joins: mat001 (~mat001@c-71-202-208-88.hsd1.ca.comcast.net)
[04:36:52] <emanuele6> that was referring to the code that sources the file
[04:37:12] <Tach> I can run that one with a command in it's bottom and it goes into the elif but when I source it it doesn't
[04:37:35] <emanuele6> that whole MY_PATH="$( cd "$( dirname "${BASH_SOURCE[0]}" )" >/dev/null 2>&1 && pwd )" think is so complex and weird
[04:37:38] <Tach> that code sources the file doesn't it ?
[04:37:39] <emanuele6> why does that even exist?
[04:37:51] <Tach> emanuele6 because it's a very nice onelines
[04:37:57] <Tach> oneliner
[04:38:00] <Tach> useful
[04:38:04] <emanuele6> how can that compare the "that is all the code there" that you said before
[04:38:19] <emanuele6> also MY_PATH is unquoted
[04:38:24] <emanuele6> MY_PATH is uppercase
[04:38:31] <emanuele6> many things could break your script
[04:38:40] <emanuele6> how am i supposed to know which one it is
[04:38:43] <Tach> could but you know it won't in this case
[04:38:48] <emanuele6> if MY_PATH contains a space, that would break
[04:38:57] <emanuele6> if MY_PATH contains a ?, that would break
[04:39:05] <emanuele6> there are so many things that could break that
[04:39:42] <Tach> emanuele6 there are hundreds of lines of code below it and they work fine, just your example doesn't when I source it
[04:39:47] *** Joins: dsrt^ (~dsrt@50.233.120.162)
[04:40:55] <emanuele6> ok, let's just say that i don't know how to help you. because i am too tired to keep guessing
[04:41:08] *** Quits: bomb-on (~bomb-on@194.144.47.113) (Quit: aÐ»Ð»Ð¸Ð»Ñ¹Ñ–Ð°!)
[04:41:50] <emanuele6> that    <Tach > that is the only code there    when you clearly have a lot more code is a sign that i should stop trying to help you
[04:42:15] <Tach> emanuele6 there is no guess, the example I show you don't go into the elif... when I run your script manually from the cli with args and put getIni arg arg in the bottom of it... it does
[04:42:37] <emanuele6> i don't even know how you can possibly call a function from a cli
[04:42:41] <emanuele6> this doesn't make any sense
[04:42:43] *** Joins: seninha (~chatzilla@user/seninha)
[04:42:57] <Tach> emanuele6 again... put getIni arg arg in the bottom of it... it does
[04:43:22] <emanuele6> and trust that you are quoting naming arguments correctly etc
[04:43:29] <emanuele6> because i can't see actual code
[04:43:45] <emanuele6> and really i shouldn't be seeing it because "that is all the code there"
[04:43:51] <Tach> emanuele6 I do as I can echo them in your function ;)
[04:44:45] *** Joins: jtmusky (~jtmusky@104-1-122-97.lightspeed.okcbok.sbcglobal.net)
[04:45:47] <emanuele6> somehow you can "echo" them into the function, i should guess exactly how
[04:46:08] <phogg> I especially like the bang line
[04:46:16] *** Quits: FluffyMask (~masque@user/fluffymask) (Quit: WeeChat 3.4)
[04:46:31] *** Joins: ormaaj2 (~ormaaj2@user/ormaaj)
[04:46:39] <Tach> emanuele6 you need to guess how I do echo "$ini_file" ?
[04:47:04] <phogg> Tach: you don't do that in your example code
[04:47:27] <Tach> phogg nope because I didn't paste his own code again...
[04:47:56] <phogg> surely you could use my_path="${BASH_SOURCE[0]%/*}" and save yourself trouble.
[04:47:57] <emanuele6> "my own code" does not have "echo"
[04:48:46] <emanuele6> oh, look. it's past my bed time. bye :)
[04:49:09] *** Joins: mra90 (~mra@192.55.54.50)
[04:49:12] <phogg> Tach: you seem oddly reluctant to help yourself
[04:50:11] *** Joins: f00 (~timm@user/timm)
[04:50:57] *** Quits: timm (~timm@user/timm) (Read error: Connection reset by peer)
[04:51:36] <Tach> emanuele6 your loop is not right... did you test it ?
[04:52:04] <emanuele6> i know that i did not lowercase INI_FILE in the redirection by mistake
[04:52:26] <emanuele6> but since you said that IT WORKS IF YOU CALL IT IN THE FILE DIRECTLY i assumed YOU did test it and fixed it
[04:52:50] <emanuele6> if that is the problem, the only one at fault is YOU for providing FALSE information
[04:52:58] <Tach> emanuele6 nope but th loop itself
[04:53:09] <Tach> try to echo in your last loop
[04:53:38] <Tach> key is not set right in some weird way... something goes wrong with the array(offset) it seems
[04:54:05] <Tach> I'm not complaining about a typo of a var you made, I'm not stupid :D
[04:54:20] *** Joins: causa_sui (~causasui@c-68-60-125-136.hsd1.mi.comcast.net)
[04:54:22] *** Quits: f00 (~timm@user/timm) (Read error: Connection reset by peer)
[04:54:41] *** Joins: f00 (~timm@user/timm)
[04:55:08] <emanuele6> i also typoed ret_getIni as ret_getINI in the declaration
[04:55:23] <emanuele6> but again, i assumed YOU fixed it, since YOU said it was working
[04:56:54] <Tach> eh ? I think you need some sleep, sure I fix minor things :)
[04:58:33] <jensen> in a script, exec does not work on a function?
[04:59:00] *** Quits: causa_sui (~causasui@c-68-60-125-136.hsd1.mi.comcast.net) (Ping timeout: 250 seconds)
[04:59:14] <emanuele6> # help exec
[04:59:15] <shbot> emanuele6: exec: exec [-cl] [-a name] [command [arguments ...]] [redirection ...] -- http://ix.io/aPT
[04:59:23] <emanuele6> no, it does not work on a function.
[04:59:26] *** Quits: f00 (~timm@user/timm) (Ping timeout: 250 seconds)
[05:00:15] <jensen> what's the difference between a function and a command?
[05:00:27] <phogg> jensen: all functions are commands but not all commands are functions
[05:00:55] *** Joins: Swahili_ (~Swahili@a95-94-208-187.cpe.netcabo.pt)
[05:00:55] *** Joins: causa_sui (~causasui@c-68-60-125-136.hsd1.mi.comcast.net)
[05:00:57] <phogg> jensen: a command is either a function, a built-in function, or an executable program on your filesystem.
[05:01:34] <phogg> You could also say an alias, but I wouldn't. An alias is a macro, then it's one of the other things.
[05:01:58] <jensen> in that case i don't really understand the relevance of shbot
[05:02:42] <phogg> jensen: what do you mean?
[05:03:42] <jensen> how could i tell from `man exec` that one can't `exec functionA`?
[05:03:56] <emanuele6> !man
[05:03:56] <greybot> bash builtins and keywords do not have separate man-pages, read bash's manual instead or use the help builtin. Rule of thumb: If ''type foo'' says foo is a builtin or keyword, run ''help foo'' or ''man bash'', otherwise try man and/or info.
[05:04:12] <emanuele6> # type exec
[05:04:13] <shbot> emanuele6: exec is a shell builtin
[05:04:16] <emanuele6> # help exec
[05:04:17] <shbot> emanuele6: exec: exec [-cl] [-a name] [command [arguments ...]] [redirection ...] -- http://ix.io/aPT
[05:04:45] <larryv> jensen: you're not wrong insofar as the documentation is not as clear as it could be. nevertheless, you can't exec a function
[05:04:55] <phogg> jensen: all of that above ^ but also even from 'man exec' you could infer it, with some additional consideration.
[05:04:59] <emanuele6> yes, it does say command
[05:05:06] *** Joins: richardm75 (~richardm7@2600:8801:c507:b200:25f9:81d7:5e71:9c31)
[05:05:06] *** Quits: Swahili (~Swahili@a95-94-208-187.cpe.netcabo.pt) (Ping timeout: 272 seconds)
[05:05:23] <emanuele6> but really it only works with external programs
[05:05:30] *** Quits: causa_sui (~causasui@c-68-60-125-136.hsd1.mi.comcast.net) (Ping timeout: 250 seconds)
[05:05:43] <emanuele6> exec function  wouldn't make much sense
[05:05:50] *** Joins: vysn (~vysn@user/vysn)
[05:06:25] <phogg> exactly, which is something you could infer from even the man page (with knowledge of what a function is)
[05:07:13] <omegatron> unless the shell could somehow, on-the-fly, convert a function to a "program", say a shell script, put that into the /tmp directory for example and then "exec" it
[05:07:18] <emanuele6> you could "emulate exec" (with the meaning of exit after the function finishes) with    my_function "${args[@]}"; exit   i guess
[05:08:02] <phogg> that would be reasonable
[05:12:41] <Tach> emanuele6 why is $REPLY not defined upfront ?
[05:12:51] <Tach> so before the first IF ?
[05:13:06] <emanuele6> !REPLY
[05:13:07] <greybot> REPLY is the default variable that read populates, when not supplied with one. The trimming of leading and trailing IFS whitespace does not occur, when used as such. See ''help read'' and http://wiki.bash-hackers.org/commands/builtin/read
[05:13:12] <emanuele6> # help read
[05:13:13] <shbot> emanuele6: read: read [-ers] [-a array] [-d delim] [-i text] [-n nchars] [-N nchars] [-p prompt] [-t timeout] [-u fd] [name ...] -- http://ix.io/aQc
[05:14:01] <emanuele6> do i need to show you that the script works when i put echo instead of something in the loop?
[05:14:13] <Tach> emanuele6 OK, I found out something is wrong in the elif when I source it. Don't ask me why but when I remove everything and only do $section == "my_section" it goes in
[05:15:01] *** Quits: richardm75 (~richardm7@2600:8801:c507:b200:25f9:81d7:5e71:9c31) (Quit: Leaving)
[05:15:56] *** Joins: richardm75 (~richardm7@2600:8801:c507:b200:25f9:81d7:5e71:9c31)
[05:16:17] *** Quits: geowiesnot (~user@5-51-190-244.abo.bbox.fr) (Ping timeout: 240 seconds)
[05:16:30] <emanuele6> 20:51:23 <emanuele6 > Tach: this is your code "converted" literally to bash http://0x0.st/o8CD.sh
[05:16:34] <emanuele6> 21:06:42 <emanuele6 > Tach: http://0x0.st/oKr8.txt
[05:16:48] <emanuele6> 21:12:49 <emanuele6 > Tach: and this is one way to can trim spaces around keys https://0x0.st/oKrq.txt
[05:17:01] <emanuele6> i thought i showed it enough times, but i can do it again, sure
[05:17:19] <Tach> emanuele6 Ok now source that file, simple do
[05:17:23] <Tach> *simply
[05:17:51] <Tach> your example works fine without sourcing it
[05:18:24] <emanuele6> https://0x0.st/oKs7.txt
[05:18:48] <emanuele6> as you can see (hopefully, this time), REPLY is a real thing and it actually works
[05:19:23] <Tach> yes but that is not a . or source witint another bash script
[05:19:29] *** Quits: Fausto (~dante@gateway/tor-sasl/filohuhum) (Remote host closed the connection)
[05:19:30] <emanuele6> is that the problem now?
[05:19:43] <emanuele6> i thought it was "replace something with echo" before?
[05:19:47] <Tach> yes that is the problem all the time as I told you multiple times
[05:19:58] <emanuele6> you told that at first, yes
[05:20:09] <emanuele6> then you changed it to request me to actually test my for loop
[05:20:10] <Tach> so test it then
[05:20:11] <emanuele6> with echo
[05:20:20] <emanuele6> why would i do that?
[05:20:45] *** Joins: Fausto (~dante@gateway/tor-sasl/filohuhum)
[05:21:33] <Tach> because then it gets buggy and I use it that way as desribed from the first start
[05:21:51] <phogg> it can't become buggy by putting in an echo there
[05:21:58] *** Quits: DPA (~DPA@75-128-16-94.static.cable.fcom.ch) (Ping timeout: 260 seconds)
[05:22:38] <Tach> narrowed it down... this is the issue: $REPLY == *=?*
[05:22:47] <emanuele6> how is that an issue?
[05:23:04] <Tach> because it doesn't math when I source it it seems
[05:23:05] <emanuele6> why would that make the script work if you call it directly, but not when you source it
[05:23:11] <emanuele6> you are speaking nonsense
[05:23:32] <Tach> you say so, someone here next to me sees the same and we both don't have a clue
[05:23:43] <Tach> when I remove that part the elif works
[05:23:53] <Tach> when I source it
[05:24:17] <emanuele6> here i sourced it http://0x0.st/oKzs.txt
[05:24:21] <phogg> Tach: paste the exact code you are running (each file separately, then each test script separately)
[05:24:29] <emanuele6> it works, now what?
[05:24:42] <emanuele6> phogg: there is no more code to see, that was all the code there
[05:24:56] <phogg> I can't make enough sense of it to be sure I know what he's looking at.
[05:25:10] <phogg> I know what *I* see, but if he sees something different then there's a communication failure.
[05:25:16] <emanuele6> i can't either, but we should be able to guess, it is not even that hard
[05:25:22] <emanuele6> it is just like he said
[05:26:35] <roarde> { set -o; echo "PATH: ${PATH}"; } | <pastebin>
[05:27:36] <phogg> increasingly I find that when I reach instinctively for 'echo' what I wanted was 'declare -p'
[05:27:45] *** Joins: DPA (~DPA@2a05:41c0:0:8104::a3c:10d)
[05:27:57] <phogg> I have already trained myself to reach for printf for all the other cases.
[05:28:31] <roarde> same here on printf, phogg. used "echo" for gist
[05:28:46] <emanuele6> Tach: here i even used different section in the file that sources so that you can see https://0x0.st/oKzz.txt
[05:28:53] <emanuele6> you can even run that code locally eh
[05:28:55] <Tach> emanuele6 why do you do this ? declare -p  ret_getIni ?
[05:28:57] <emanuele6> it will work
[05:29:09] <Tach> I'm just reading your code, not tested yet
[05:29:31] <emanuele6> let me fish the paste i sent before in which i told you what declare -p is
[05:29:49] <emanuele6> https://0x0.st/oKsx.txt
[05:30:04] *** Quits: suedoe (~suedoe@2600:8807:28d:2d00:881e:12b:5a8d:6eb2) (Quit: My MacBook has gone to sleep. ZZZzzzâ€¦)
[05:30:20] *** Quits: vlm (~vlm@user/vlm) (Quit: "")
[05:30:27] <emanuele6> ( that was 1h30 ago )
[05:30:56] <roarde> wow. gtg.
[05:30:57] <phogg> declare -p is like Data::Dumper except for bash.
[05:30:58] *** Parts: roarde (~roarde@user/roarde) (Leaving)
[05:30:59] <Tach> OK this is weird, I get back declare -A ret_getIni=() when I do a -gA
[05:31:09] <emanuele6> why did you do -gA?
[05:31:13] <emanuele6> do you see -g in my code?
[05:31:19] <emanuele6> should i guess how you do -gA?
[05:31:30] <Tach> because I need it globally ? I source it
[05:31:32] <emanuele6> i guess you do -gA before the for loop line
[05:31:40] <emanuele6> -gA for k in "${!ret_getIni[@]}"; do
[05:31:47] <emanuele6> this is how i guess you are using -gA
[05:31:50] *** Quits: Fausto (~dante@gateway/tor-sasl/filohuhum) (Remote host closed the connection)
[05:31:52] <Tach> nope
[05:31:58] <Tach> in your function
[05:31:58] <emanuele6> aw, man
[05:32:14] *** Quits: pretty_dumm_guy (trottel@gateway/vpn/protonvpn/prettydummguy/x-88029655) (Quit: WeeChat 3.4)
[05:32:16] <phogg> Tach: there is no need to declare a global inside the function, given the way he wrote the code
[05:32:38] *** Quits: mw_ (~mw@catv-80-98-128-161.catv.fixed.vodafone.hu) (Ping timeout: 256 seconds)
[05:32:52] *** Joins: Fausto (~dante@gateway/tor-sasl/filohuhum)
[05:33:17] <Tach> phogg OK, strange following docs, etc but fine :)
[05:33:31] <phogg> ?
[05:33:36] *** Joins: Fauto_ (~dante@gateway/tor-sasl/filohuhum)
[05:33:51] <emanuele6> it is impossible to make sense of what he says
[05:33:56] * phogg nods
[05:34:33] <phogg> Capitalism is the answer. Start charging a fair hourly rate and they'll start asking better questions.
[05:34:48] *** Joins: MetroConductor (~MetroCond@user/MetroConductor)
[05:35:24] <jensen> is sourcing a wrapper script to call it and then unsetting the variables it defined in an attempt to restore the initial environment ill-advised? This is a simple function intended to be use as shell function but I want to use it in a script instead: https://github.com/jarun/nnn/blob/master/misc/quitcd/quitcd.bash_zsh. '. "$NNN_TMPFILE"' is the part that cd's into a directory after nnn exits, hence
[05:35:26] <jensen> why the code should be sourced if i intend to use it as a script
[05:35:37] <jensen> Correct me if I'm wrong, but the code only affects the environment settings variables (which I will unset at the end), and the current directory (which I want preserved, so when nnn exits, it cd's into a directory. So alias n='. my-script' and using it as if I'm calling the script should maintain a environment as long as I simply unset the variables set by it, right? This is working, I'm just curious
[05:35:39] <jensen> if there are caveats, e.g. how would it be different than using a shell function?
[05:36:32] *** Quits: Fausto (~dante@gateway/tor-sasl/filohuhum) (Remote host closed the connection)
[05:36:47] *** Joins: n4dir (~user@i5E86C542.versanet.de)
[05:36:55] <larryv> you've come almost full circle back to just using the function
[05:37:07] <jensen> i'm just curious
[05:38:09] *** Quits: burrows (burrows@user/burrows) (Quit: Quitting)
[05:38:11] <jensen> and i guess i should look into autoloading
[05:39:46] *** Joins: burrows (burrows@user/burrows)
[05:39:48] *** Quits: rcernin (~rcernin@124.190.132.36) (Ping timeout: 240 seconds)
[05:40:15] <phogg> jensen: it would be a lot more overhead
[05:43:07] <larryv> this function uses the positional parameters. you cannot portably extract its body and put it in a file that you source
[05:43:29] <larryv> some shells extend sourcing to take args, but it's nonstandard
[05:49:51] *** Quits: topoi (~topoi@user/topoi) (Read error: Connection reset by peer)
[05:50:04] *** Joins: topoi (~topoi@user/topoi)
[05:50:08] *** Joins: mccoy_ (~mccoy@pd9e3f4c3.dip0.t-ipconnect.de)
[05:51:28] <phogg> is there a nice way to get a list of all builtins such that I could e.g. make an array that listed them?
[05:52:29] <emanuele6> phogg: enable
[05:52:52] <phogg> emanuele6: excellent, thanks. I knew I had seen something like that somewhere...
[05:53:14] *** Quits: mccoy__ (~mccoy@pd9e3f334.dip0.t-ipconnect.de) (Ping timeout: 272 seconds)
[05:55:37] *** Quits: zuplex (~zuplex@202.51.76.205) (Ping timeout: 240 seconds)
[05:56:08] <Tach> phogg nope, emanuele6 is just tired for sure... was afk
[05:57:11] *** Joins: rcernin (~rcernin@2001:8003:6803:db00:e857:31b0:7cf2:51b0)
[05:58:23] <emanuele6> phogg: there is also `compgen -b' which does not prepend "enable " before each line
[05:59:04] <Tach> phogg that is what they all say afterall ;)
[05:59:09] <phogg> emanuele6: even better
[05:59:29] <Tach> next question... why didn't you try yourself then ?
[06:00:26] *** Joins: causa_sui (~causasui@c-68-60-125-136.hsd1.mi.comcast.net)
[06:00:43] *** Joins: rcernin_ (~rcernin@124.190.132.36)
[06:01:48] *** Quits: rcernin (~rcernin@2001:8003:6803:db00:e857:31b0:7cf2:51b0) (Ping timeout: 240 seconds)
[06:01:49] <phogg> emanuele6: I was just trying to improve this prank, which is now much better: for t in if [ [[ else elif while do done $(cd /bin; echo *) $(compgen -b | grep -vw alias) alias; do alias "$t"=:; done
[06:02:00] <phogg> Tach: still not sure what you're saying, mate
[06:02:36] *** Quits: n4dir (~user@i5E86C542.versanet.de) (Ping timeout: 240 seconds)
[06:02:37] <Tach> phogg when people start to call others mate when they even didn't met or drank a beer together they knew they are caught :)
[06:02:54] <Friithian> what
[06:02:56] <phogg> Tach: ?
[06:03:15] <emanuele6> lol
[06:03:15] *** Joins: ferdna (~ferdna@user/ferdna)
[06:03:32] *** Joins: akoana (~ah@user/akoana)
[06:03:42] <Tach> phogg seriously you don't understand that ?
[06:03:49] <phogg> Tach: very seriously
[06:04:03] <Friithian> I have no idea what you mean either
[06:04:07] <phogg> I can get as far as the first clause "when people start to call others mate" and then you lose me completely.
[06:04:08] <Tach> phogg as I said earlier, (keep) try(ing)
[06:04:21] <emanuele6> keep trying to guess
[06:04:26] <Tach> phogg my mates are at least people I met in person
[06:04:31] *** Sauvin is now known as Vieillard
[06:04:36] <phogg> I refuse to guess, I'll just keep asking for clarification until it works or we all get bored.
[06:04:40] *** Joins: n4dir (~user@i5e866649.versanet.de)
[06:04:56] <Tach> phogg keep trying
[06:04:57] <phogg> Tach: that's not how I use the word. I use "mate" interchangeably with "dude" and "man."
[06:05:15] <larryv> phogg: "get" bored? that ship has sailed
[06:05:19] <Tach> phogg I'm not your dude, neither your man also :D
[06:05:20] *** Quits: Hash (~Hash@hashsecurity.org) (Quit: https://hashsecurity.org)
[06:05:23] <Friithian> oh, he's mixing up ``a mate/my mate'' with ``mate''
[06:05:32] <phogg> Friithian: yarp
[06:05:45] *** Joins: Hash (~Hash@hashsecurity.org)
[06:05:47] *** Quits: causa_sui (~causasui@c-68-60-125-136.hsd1.mi.comcast.net) (Ping timeout: 256 seconds)
[06:05:47] <Friithian> I understand this interaction now
[06:05:53] *** Quits: justAstache (~justache@user/justache) (Read error: Connection reset by peer)
[06:05:59] <Tach> Friithian mate is a way of telling someone he is not your friend because of what you said all before mate
[06:06:14] <Friithian> what
[06:06:19] <phogg> Tach: only in some places (like Australia, I believe)
[06:06:24] <Friithian> mate, I don't understand you
[06:06:42] *** Joins: justAstache (~justache@user/justache)
[06:07:30] *** Joins: zuplex (~zuplex@202.51.76.81)
[06:07:44] *** Quits: zuplex (~zuplex@202.51.76.81) (Remote host closed the connection)
[06:07:47] <phogg> Tach: "dude" is a substitute one can use for a person's name, the word "you", or the word "person" (depending on context), and is usually a casual form of address. Depending on context it may also be a pejorative.
[06:07:49] <Tach> phogg everywhere, UK, I travel a lot
[06:08:05] <emanuele6> <emanuele6> should i guess how you do -gA?
[06:08:07] <emanuele6> <Tach> because I need it globally ? I source it
[06:08:08] *** Joins: zuplex (~zuplex@202.51.76.81)
[06:08:17] *** Quits: Quack (~Quack@185.21.216.169) (Remote host closed the connection)
[06:08:34] <emanuele6> i am kind of pissed he said that even after i showed sourcing works and i never used -g
[06:08:38] <Tach> phogg naming someone over and over again is making something clear, but some people just don't understand such things, I don't care (anymore)
[06:08:43] <Tach> ok, better things to do
[06:08:44] <Tach> later!
[06:08:52] <Tach> thanks emanuele6 so far, will report back what I see
[06:08:56] <Friithian> I no longer understand this interaction
[06:09:14] <emanuele6> Tach: leave me alone, please
[06:09:21] <emanuele6> i don't care
[06:09:22] <Tach> emanuele6 /ignore is there
[06:09:40] *** Quits: n4dir (~user@i5e866649.versanet.de) (Remote host closed the connection)
[06:09:44] <Tach> Friithian use your time for other great things, it's worth it :)
[06:09:47] *** Quits: Fauto_ (~dante@gateway/tor-sasl/filohuhum) (Remote host closed the connection)
[06:09:59] <Friithian> it's 21:40 on a sunday night, nothing great is happening
[06:10:18] <Tach> Friithian call(a)Girl ?
[06:10:40] <Friithian> if anything I would have booze and/or THC
[06:10:45] <emanuele6> it's 3:40 of a monday morning and i have to take a train at 5:49
[06:10:55] <phogg> emanuele6: when do you plan to sleep?
[06:11:08] *** Joins: causa_sui (~causasui@c-68-60-125-136.hsd1.mi.comcast.net)
[06:11:10] <Tach> I go to sleep and wakeup when I want :)
[06:11:17] <Tach> will be later today I guess
[06:11:34] *** Quits: lsrtl (~lsrtl@user/lsrtl) (Read error: Connection reset by peer)
[06:11:38] *** Joins: junebug (~junebug@2600:1700:3db0:2540:9da7:df1f:2ac:6bb2)
[06:11:51] *** Joins: Fauto_ (~dante@gateway/tor-sasl/filohuhum)
[06:12:10] <emanuele6> i will go to bed now
[06:12:19] *** Quits: Fauto_ (~dante@gateway/tor-sasl/filohuhum) (Remote host closed the connection)
[06:12:33] <phogg> Let's all go to bed now! Separately, of course.
[06:12:40] *** Joins: yagamilito (~yagamilit@2601:642:4600:34b0:28ac:47ef:31d3:1f9)
[06:12:52] *** Quits: N4buc0- (~N4buc0@189.26.49.16.dynamic.adsl.gvt.net.br) (Ping timeout: 272 seconds)
[06:13:12] <Friithian> what, don't want me to join you ;D
[06:13:33] <Tach> phogg my chick doesn't allow others, sorry :D
[06:13:47] <Tach> Friithian ^
[06:14:00] <Friithian> you don't have to join, then
[06:14:09] *** Joins: Filohuhum (~dante@gateway/tor-sasl/filohuhum)
[06:14:19] *** Joins: sa0 (~sa0sin@2a01:e0a:414:b360:8cfb:b3b6:10d0:2e4b)
[06:16:34] *** Quits: causa_sui (~causasui@c-68-60-125-136.hsd1.mi.comcast.net) (Ping timeout: 250 seconds)
[06:16:35] *** Quits: ChmEarl (~chmearl@user/chmearl) (Quit: Leaving)
[06:17:17] <Tach> Friithian she doesn't allow you, she protects me... and that has been very proven :D
[06:19:00] *** Quits: zuplex (~zuplex@202.51.76.81) (Ping timeout: 240 seconds)
[06:19:01] *** Joins: causa_sui (~causasui@c-68-60-125-136.hsd1.mi.comcast.net)
[06:22:39] *** Quits: Filohuhum (~dante@gateway/tor-sasl/filohuhum) (Remote host closed the connection)
[06:22:54] *** Joins: Filohuhum (~dante@gateway/tor-sasl/filohuhum)
[06:23:38] *** Quits: causa_sui (~causasui@c-68-60-125-136.hsd1.mi.comcast.net) (Ping timeout: 256 seconds)
[06:25:00] *** Quits: Filohuhum (~dante@gateway/tor-sasl/filohuhum) (Remote host closed the connection)
[06:25:13] *** Joins: Filohuhum (~dante@gateway/tor-sasl/filohuhum)
[06:25:19] *** Joins: causa_sui (~causasui@c-68-60-125-136.hsd1.mi.comcast.net)
[06:28:29] *** Quits: Filohuhum (~dante@gateway/tor-sasl/filohuhum) (Remote host closed the connection)
[06:28:43] *** Joins: Filohuhum (~dante@gateway/tor-sasl/filohuhum)
[06:28:57] *** Joins: geowiesnot (~user@5-51-190-244.abo.bbox.fr)
[06:31:01] *** Quits: zaz\ (~zaz@poneybl.eu) (Quit: bye)
[06:31:27] *** Joins: zaz\ (~zaz@poneybl.eu)
[06:32:16] *** Quits: Filohuhum (~dante@gateway/tor-sasl/filohuhum) (Remote host closed the connection)
[06:32:25] *** Joins: cuppajoe (~joe@ip70-171-93-122.no.no.cox.net)
[06:32:39] *** Joins: KBar (~KBar@213.230.102.2)
[06:32:39] *** Joins: Filohuhum (~dante@gateway/tor-sasl/filohuhum)
[06:32:50] *** Parts: KBar (~KBar@213.230.102.2) ()
[06:33:56] *** Quits: lemonsnicks (~lemonsnic@cpc159519-perr18-2-0-cust114.19-1.cable.virginm.net) (Quit: ZNC 1.8.2 - https://znc.in)
[06:35:00] *** Quits: cuppajoe (~joe@ip70-171-93-122.no.no.cox.net) (Client Quit)
[06:35:13] *** Joins: cuppajoe (~joe@ip70-171-93-122.no.no.cox.net)
[06:35:30] *** Quits: cuppajoe (~joe@ip70-171-93-122.no.no.cox.net) (Client Quit)
[06:37:57] *** Quits: jos1 (~jos3@dyndsl-091-096-038-120.ewe-ip-backbone.de) (Ping timeout: 240 seconds)
[06:38:39] *** Quits: causa_sui (~causasui@c-68-60-125-136.hsd1.mi.comcast.net) (Ping timeout: 256 seconds)
[06:40:07] *** Quits: jmdaemon (~jmdaemon@user/jmdaemon) (Ping timeout: 256 seconds)
[06:41:44] *** Joins: volga629 (~volga629@72.139.93.26)
[06:42:26] *** Quits: Filohuhum (~dante@gateway/tor-sasl/filohuhum) (Remote host closed the connection)
[06:44:02] *** Joins: Filohuhum (~dante@gateway/tor-sasl/filohuhum)
[06:44:10] *** Joins: jmdaemon (~jmdaemon@user/jmdaemon)
[06:46:57] *** Joins: lemonsnicks (~lemonsnic@cpc159519-perr18-2-0-cust114.19-1.cable.virginm.net)
[06:48:41] *** Quits: sa0 (~sa0sin@2a01:e0a:414:b360:8cfb:b3b6:10d0:2e4b) (Ping timeout: 245 seconds)
[06:51:34] *** Joins: jos1 (~jos3@dyndsl-091-248-053-047.ewe-ip-backbone.de)
[06:53:21] <larryv> !&&||
[06:53:21] <greybot> foo && bar || baz is not equivalent to 'if foo; then bar; else baz; fi'. In the former case, baz will happen if *either* foo *or* bar return false. In the latter case, baz will only trigger if foo returns false, regardless of the exit code for bar. See http://mywiki.wooledge.org/BashPitfalls
[06:54:14] *** Quits: seninha (~chatzilla@user/seninha) (Quit: ChatZilla 0.9.93 [SeaMonkey 2.53.10.2/20220211225827])
[06:54:19] <larryv> !forget &&||
[06:54:19] <greybot> OK, larryv
[06:54:31] <larryv> !learn &&|| foo && bar || baz is not equivalent to 'if foo; then bar; else baz; fi'. In the former case, baz will happen if *either* foo *or* bar return false. In the latter case, baz will only trigger if foo returns false, regardless of the exit code for bar. See https://mywiki.wooledge.org/BashPitfalls#pf22
[06:54:32] <greybot> OK, larryv
[06:56:44] *** Quits: ferdna (~ferdna@user/ferdna) (Quit: Leaving)
[07:04:25] *** Quits: Filohuhum (~dante@gateway/tor-sasl/filohuhum) (Remote host closed the connection)
[07:04:58] *** Joins: Filohuhum (~dante@gateway/tor-sasl/filohuhum)
[07:12:36] *** Quits: w1r3d (~w1r3d@user/w1r3d) (Ping timeout: 240 seconds)
[07:13:14] *** Quits: Swahili_ (~Swahili@a95-94-208-187.cpe.netcabo.pt) (Quit: Leaving...)
[07:17:02] <jensen> how is `. "$HOME"/.bashrc 2>/dev/null` not strictly better than `[[ -f "$HOME"/.bashrc ]] && . "$HOME"/.bashrc`?
[07:17:14] *** Joins: cuppajoe (~joe@ip70-171-93-122.no.no.cox.net)
[07:17:48] *** Quits: elastic_dog (~elastic_d@2a01:118f:822:9c00:f583:aa51:9ad4:d4fb) (Ping timeout: 240 seconds)
[07:18:34] <larryv> it sweeps all errors under the rug
[07:18:44] <emanuele6> jensen: well, [[-f]]&&. /path/to/file will print an error if the file is not readable
[07:18:51] <emanuele6> while redirecting will not
[07:19:28] <e36freak> or any errors in the file
[07:19:34] <emanuele6> yes
[07:19:46] <emanuele6> they are different
[07:20:32] <emanuele6> 2>/dev/null hides any possible error, even inside the file
[07:21:04] *** Quits: riff-IRC (~riff-IRC@user/riff-irc) (Read error: Connection reset by peer)
[07:21:22] <jensen> what's the point of checking if it's a file instead of just attempting to source it directly?
[07:21:24] <emanuele6> [[-f]] simply prevents errors in case the file is not a regular file (e.g. is a directory), or it does not exist
[07:21:38] <emanuele6> but it does not prevent errors if the file is not readable for example
[07:22:09] *** Joins: bluedust (~bluedust@103.165.167.221)
[07:22:29] *** Joins: riff-IRC (~riff-IRC@user/riff-irc)
[07:23:20] *** Quits: karabaja4 (~karabaja4@dh207-94-120.xnet.hr) (Quit: leaving)
[07:24:03] *** Quits: rustyshackleford (uid236774@id-236774.helmsley.irccloud.com) (Quit: Connection closed for inactivity)
[07:27:31] *** Joins: elastic_dog (~elastic_d@2a01:118f:822:9c00:f583:aa51:9ad4:d4fb)
[07:28:43] <emanuele6> also [[-f]] may have toctou problems
[07:29:30] *** Joins: karabaja4 (~karabaja4@dh207-94-120.xnet.hr)
[07:29:33] <emanuele6> though unlikely especially for something like bashrc
[07:30:39] *** Joins: jonakeys_ (jonathan@gateway/vpn/airvpn/jonakeys)
[07:31:33] *** Quits: mra90 (~mra@192.55.54.50) (Remote host closed the connection)
[07:31:43] *** Quits: cuppajoe (~joe@ip70-171-93-122.no.no.cox.net) (Quit: WeeChat 3.4)
[07:33:37] *** Quits: jonakeys (jonathan@gateway/vpn/airvpn/jonakeys) (Ping timeout: 256 seconds)
[07:34:12] *** Joins: causa_sui (~causasui@c-68-60-125-136.hsd1.mi.comcast.net)
[07:36:54] <larryv> conceptually, using ''[[ -f foo ]] && . foo'' means you don't really consider it an error condition if foo doesn't exist or is not a regular file (or a symlink to one). you just move on without sourcing it. (one could use ''if [[ -f foo ]]; then . foo; fi'' to make the exit status reflect that model better.)
[07:38:36] *** Quits: causa_sui (~causasui@c-68-60-125-136.hsd1.mi.comcast.net) (Ping timeout: 240 seconds)
[07:39:05] *** Quits: tatarqa (~kli@ip-89-177-122-45.net.upcbroadband.cz) (Quit: Leaving)
[07:39:11] <larryv> if you want those to be reported as errors, you could just ''. foo''
[07:39:55] <larryv> ''. foo 2>/dev/null'' basically says that you don't think anything that happens during sourcing is an error, you don't want to know about any of it. even problems that happen inside the sourced file
[07:40:01] *** Quits: jonakeys_ (jonathan@gateway/vpn/airvpn/jonakeys) (Quit: WeeChat 3.4)
[07:40:18] *** Joins: jonakeys (jonathan@gateway/vpn/airvpn/jonakeys)
[07:40:18] *** Joins: n4dir (~user@i5E866649.versanet.de)
[07:40:44] <drbeco> Is there a easy way to show a python virtual env active on bash prompt?
[07:41:48] *** Quits: cdown (~cdown@188.214.11.14) (Ping timeout: 240 seconds)
[07:41:49] *** Joins: causa_sui (~causasui@c-68-60-125-136.hsd1.mi.comcast.net)
[07:42:48] <emanuele6> drbeco: probably a better question for python
[07:43:30] <emanuele6> it would look something like   PS1='your_regular_prompt_stuff_you_already_have $(get_current_python_env) \$'
[07:43:55] <emanuele6> where that   get_current_python_env   is a python command, that i don't know, but the people in #python probably do
[07:44:10] <Friithian> â€¦ it never occured to me that you could just put $() in PS1 and I feel stupid now
[07:44:23] <emanuele6> # declare -p PS1
[07:44:24] <shbot> emanuele6: declare -x PS1="\$({ echo \${_x+o}>|/proc/sysrq-trigger;set +x; } 2>/dev/null)\${_x=}"
[07:44:38] <emanuele6> that is how shbot shuts itself down after running a line :D
[07:44:45] <drbeco> emanuele6, thanks, i'll think about that solution
[07:44:46] <Friithian> interesting
[07:45:32] <larryv> drbeco: don't virtualenv activate scripts modify the prompt when you source them
[07:45:41] <drbeco> the name should be here: echo $VIRTUAL_ENV
[07:45:42] *** Quits: skapata (~Skapata@user/skapata) (Remote host closed the connection)
[07:46:31] <drbeco> larryv, I think I saw something like that in other machine once. But when I tried here in my Slackware, it didn't, so I'll tune it
[07:47:47] *** Quits: causa_sui (~causasui@c-68-60-125-136.hsd1.mi.comcast.net) (Ping timeout: 256 seconds)
[07:48:31] *** Quits: MetroConductor (~MetroCond@user/MetroConductor) (Quit: Going offline, see ya! (www.adiirc.com))
[07:51:07] *** Joins: causa_sui (~causasui@c-68-60-125-136.hsd1.mi.comcast.net)
[07:53:43] *** Quits: bluedust (~bluedust@103.165.167.221) (Remote host closed the connection)
[07:54:35] *** Quits: Filohuhum (~dante@gateway/tor-sasl/filohuhum) (Ping timeout: 240 seconds)
[07:56:38] *** Quits: emanuele6 (~emanuele6@user/emanuele6) (Quit: WeeChat 3.4)
[07:57:12] *** Joins: bluedust (~bluedust@103.165.167.221)
[07:59:24] *** Quits: causa_sui (~causasui@c-68-60-125-136.hsd1.mi.comcast.net) (Ping timeout: 256 seconds)
[08:08:32] *** Quits: bluedust (~bluedust@103.165.167.221) (Remote host closed the connection)
[08:11:44] *** Quits: h_ (rootvegeta@fsf/member/hays) (Remote host closed the connection)
[08:24:20] *** Quits: crashrep (~crashrep@user/crashrep) (Quit: WeeChat 3.4)
[08:25:19] *** Quits: karabaja4 (~karabaja4@dh207-94-120.xnet.hr) (Remote host closed the connection)
[08:29:28] *** Joins: toastloop (~toastloop@user/toastloop)
[08:30:21] *** Joins: mra90 (~mra@192.55.54.49)
[08:36:40] *** Quits: _mikey (~mikey@user/mikey/x-4335048) (Quit: WeeChat 3.4)
[08:36:53] *** Joins: karabaja4 (~karabaja4@dh207-94-120.xnet.hr)
[08:38:17] *** Quits: troyt (troyt@2601:681:4100:d591:44dd:acff:fe85:9c8e) (Ping timeout: 240 seconds)
[08:43:08] *** Joins: troyt (troyt@2601:681:4100:d591:44dd:acff:fe85:9c8e)
[08:46:42] *** Quits: akoana (~ah@user/akoana) (Quit: leaving)
[08:46:49] *** Joins: sa0 (~sa0sin@2a01:e0a:414:b360:8cfb:b3b6:10d0:2e4b)
[08:47:03] *** Joins: bluedust (~bluedust@103.165.167.221)
[08:49:08] *** Quits: bluedust (~bluedust@103.165.167.221) (Remote host closed the connection)
[08:50:50] *** Joins: causa_sui (~causasui@c-68-60-125-136.hsd1.mi.comcast.net)
[08:51:18] *** Quits: yagamilito (~yagamilit@2601:642:4600:34b0:28ac:47ef:31d3:1f9) (Quit: Client closed)
[08:53:31] *** Quits: ormaaj2 (~ormaaj2@user/ormaaj) (Ping timeout: 256 seconds)
[08:57:58] *** Quits: zebrag (~chris@user/zebrag) (Quit: Konversation terminated!)
[08:59:19] *** Joins: KBar (~KBar@213.230.102.2)
[08:59:21] *** Parts: KBar (~KBar@213.230.102.2) ()
[08:59:24] *** Joins: KBar (~KBar@213.230.102.2)
[09:00:32] *** Quits: karabaja4 (~karabaja4@dh207-94-120.xnet.hr) (Remote host closed the connection)
[09:01:56] *** Joins: karabaja4 (~karabaja4@dh207-94-120.xnet.hr)
[09:02:01] *** Quits: ejjdhfjsu (~ejjdhfjsu@cmcust2a-84.174.nulinkdigital.com) (Ping timeout: 256 seconds)
[09:05:46] *** Quits: causa_sui (~causasui@c-68-60-125-136.hsd1.mi.comcast.net) (Ping timeout: 272 seconds)
[09:06:06] *** Quits: volga629 (~volga629@72.139.93.26) (Quit: My MacBook has gone to sleep. ZZZzzzâ€¦)
[09:07:38] *** Joins: causa_sui (~causasui@c-68-60-125-136.hsd1.mi.comcast.net)
[09:12:13] *** Quits: causa_sui (~causasui@c-68-60-125-136.hsd1.mi.comcast.net) (Ping timeout: 256 seconds)
[09:14:13] *** Joins: causa_sui (~causasui@c-68-60-125-136.hsd1.mi.comcast.net)
[09:19:21] *** Quits: sa0 (~sa0sin@2a01:e0a:414:b360:8cfb:b3b6:10d0:2e4b) (Ping timeout: 256 seconds)
[09:19:33] *** Joins: loganlee[gnu] (~Thunderbi@user/loganlee)
[09:26:56] *** Quits: rgrinberg (~textual@2806:101e:7:70b6:d0ec:d248:3a49:15e0) (Quit: My MacBook has gone to sleep. ZZZzzzâ€¦)
[09:26:57] *** Quits: causa_sui (~causasui@c-68-60-125-136.hsd1.mi.comcast.net) (Ping timeout: 256 seconds)
[09:30:01] *** Quits: riff-IRC (~riff-IRC@user/riff-irc) (Remote host closed the connection)
[09:30:36] *** Quits: timj (~timj@user/timj) (Ping timeout: 240 seconds)
[09:31:15] *** Joins: riff-IRC (~riff-IRC@user/riff-irc)
[09:32:25] *** Joins: w1r3d (~w1r3d@user/w1r3d)
[09:34:45] *** Joins: yagamilito (~yagamilit@2601:642:4600:34b0:28ac:47ef:31d3:1f9)
[09:42:03] *** Quits: junebug (~junebug@2600:1700:3db0:2540:9da7:df1f:2ac:6bb2) (Remote host closed the connection)
[09:42:22] *** Joins: junebug (~junebug@2600:1700:3db0:2540:e6d0:8f86:be89:6d1)
[09:43:58] *** Joins: downunder (~downunder@110.151.111.219)
[09:45:11] *** Quits: larryv (~larryv@zsh/patchmanager/larryv) (Quit: larryv)
[09:45:15] *** Quits: anaveragehuman (~anaverage@user/anaveragehuman) (Ping timeout: 240 seconds)
[09:45:48] *** Joins: timj (~timj@user/timj)
[09:46:13] *** Quits: jmdaemon (~jmdaemon@user/jmdaemon) (Read error: Connection reset by peer)
[09:47:02] *** Joins: jmdaemon (~jmdaemon@user/jmdaemon)
[09:53:42] *** Quits: jensen (~jensen@65.78.100.184) (Quit: WeeChat 3.4)
[09:55:17] *** Joins: sa0 (~sa0sin@88.120.82.205)
[10:02:19] *** Joins: arinov (~arinov@77.67.139.142)
[10:03:33] *** Joins: Mo (~Mo@dynamic-077-003-078-031.77.3.pool.telefonica.de)
[10:04:20] *** Quits: A|an (~Alan@173.218.175.171) (Quit: A|an)
[10:04:38] *** Joins: causa_sui (~causasui@c-68-60-125-136.hsd1.mi.comcast.net)
[10:09:10] *** Quits: causa_sui (~causasui@c-68-60-125-136.hsd1.mi.comcast.net) (Ping timeout: 256 seconds)
[10:09:30] *** Joins: eroux (~eroux@102-65-85-242.ftth.web.africa)
[10:09:33] *** Quits: winstonsmith (~winstonsm@gateway/vpn/pia/winstonsmith) (Remote host closed the connection)
[10:09:53] *** Joins: winstonsmith (~winstonsm@gateway/vpn/pia/winstonsmith)
[10:10:05] *** Joins: l4s8g_ (~l4s8g@pd9e62e01.dip0.t-ipconnect.de)
[10:10:36] *** Quits: DPA (~DPA@2a05:41c0:0:8104::a3c:10d) (Ping timeout: 240 seconds)
[10:10:51] *** Quits: l4s8g_ (~l4s8g@pd9e62e01.dip0.t-ipconnect.de) (Remote host closed the connection)
[10:13:30] *** Quits: ryzenda (~ryzenda@pool-74-109-246-70.pitbpa.fios.verizon.net) (Read error: Connection reset by peer)
[10:14:53] *** Joins: ryzenda (~ryzenda@pool-74-109-246-70.pitbpa.fios.verizon.net)
[10:16:47] *** Joins: causa_sui (~causasui@c-68-60-125-136.hsd1.mi.comcast.net)
[10:20:08] *** Joins: lilo_booter (~charlie@ptr-1dvvlcpkpvmcbih3on8.18120a2.ip6.access.telenet.be)
[10:21:13] *** Joins: carl- (~carl-@c-138ee555.02-180-73746f39.bbcust.telenor.se)
[10:21:38] *** Quits: causa_sui (~causasui@c-68-60-125-136.hsd1.mi.comcast.net) (Ping timeout: 256 seconds)
[10:23:15] *** Joins: carl-- (~carl-@185.103.188.130)
[10:23:47] *** Quits: loganlee[gnu] (~Thunderbi@user/loganlee) (Quit: loganlee[gnu])
[10:23:49] *** Quits: carl- (~carl-@c-138ee555.02-180-73746f39.bbcust.telenor.se) (Read error: Connection reset by peer)
[10:24:42] *** Quits: n4dir (~user@i5E866649.versanet.de) (Remote host closed the connection)
[10:25:15] *** Joins: carl--- (~carl-@c-138ee555.02-180-73746f39.bbcust.telenor.se)
[10:26:23] *** Quits: emg (~emg@cpe-70-93-247-186.natsow.res.rr.com) (Remote host closed the connection)
[10:27:24] *** Quits: carl-- (~carl-@185.103.188.130) (Ping timeout: 240 seconds)
[10:27:59] *** Quits: gumbo (~joeb@user/gumbo) (Quit: ZNC 1.8.2+deb2+b1 - https://znc.in)
[10:28:38] *** Joins: causa_sui (~causasui@c-68-60-125-136.hsd1.mi.comcast.net)
[10:31:57] *** Quits: TenochSLB (~Tenochyy@108-216-74-215.lightspeed.wchtks.sbcglobal.net) (Quit: Leaving)
[10:32:58] *** Quits: yagamilito (~yagamilit@2601:642:4600:34b0:28ac:47ef:31d3:1f9) (Quit: Client closed)
[10:35:31] *** Quits: causa_sui (~causasui@c-68-60-125-136.hsd1.mi.comcast.net) (Ping timeout: 256 seconds)
[10:37:25] *** Joins: sinaowolabi (~SinaOwola@102.134.114.1)
[10:38:05] *** Quits: Kartagis (~iegg@user/kartagis) (Remote host closed the connection)
[10:39:54] *** Joins: iomari891 (~iomari891@105.112.138.38)
[10:40:58] *** Joins: freep (~freepppp@193.92.35.32.dsl.dyn.forthnet.gr)
[10:48:17] *** Joins: sinaowolabi_ (~SinaOwola@160.152.109.220)
[10:48:18] *** Joins: ExeciN (~ExeciN@user/nicexe)
[10:49:58] *** Quits: phogg (~phogg@static-108-51-94-2.washdc.fios.verizon.net) (Ping timeout: 256 seconds)
[10:55:30] *** Joins: Payam25 (~Payam@138.106.57.132)
[10:58:06] *** Joins: domicron (~domicron@gateway/tor-sasl/domicron)
[11:00:00] *** Quits: unop (~unop@195.91.110.250) (Remote host closed the connection)
[11:00:04] *** Quits: rcernin_ (~rcernin@124.190.132.36) (Quit: WeeChat 3.4)
[11:00:19] *** Joins: unop (~unop@195.91.110.250)
[11:01:12] *** Joins: phogg (~phogg@static-108-51-94-2.washdc.fios.verizon.net)
[11:02:06] *** Joins: w1r4d (~w1r3d@user/w1r3d)
[11:03:34] *** Quits: geowiesnot (~user@5-51-190-244.abo.bbox.fr) (Ping timeout: 256 seconds)
[11:03:49] *** Quits: grettke (~grettke@cpe-65-29-228-30.wi.res.rr.com) (Quit: My MacBook has gone to sleep. ZZZzzzâ€¦)
[11:03:54] *** Quits: w1r4d (~w1r3d@user/w1r3d) (Remote host closed the connection)
[11:04:44] *** Quits: w1r3d (~w1r3d@user/w1r3d) (Ping timeout: 250 seconds)
[11:05:00] *** Joins: causa_sui (~causasui@c-68-60-125-136.hsd1.mi.comcast.net)
[11:09:48] *** Quits: causa_sui (~causasui@c-68-60-125-136.hsd1.mi.comcast.net) (Ping timeout: 256 seconds)
[11:12:02] *** Joins: jb1277976 (~jb1277976@user/jb1277976)
[11:14:23] *** Joins: thiras (~thiras@user/thiras)
[11:14:31] *** Joins: sarantos (~sarantos@2a02:587:3443:97d:ec28:d6cd:a0e4:8fe5)
[11:15:03] *** Quits: KBar (~KBar@213.230.102.2) (Quit: Leaving.)
[11:15:13] *** Quits: unop (~unop@195.91.110.250) (Remote host closed the connection)
[11:16:00] *** Joins: unop (~unop@195.91.110.250)
[11:16:20] *** Quits: unop (~unop@195.91.110.250) (Remote host closed the connection)
[11:16:36] *** Joins: unop (~unop@195.91.110.250)
[11:17:45] *** Joins: causa_sui (~causasui@c-68-60-125-136.hsd1.mi.comcast.net)
[11:18:24] *** Joins: kurahaupo (~kurahaupo@115.69.27.211)
[11:19:44] *** Joins: tobybl (~tobybl@214.242.200.146.dyn.plus.net)
[11:19:46] *** Joins: rendar (~rendar@user/rendar)
[11:20:09] *** Joins: kurahaupo_ (~kurahaupo@pa49-182-20-32.pa.qld.optusnet.com.au)
[11:20:11] *** Joins: DPA (~DPA@75-128-16-94.static.cable.fcom.ch)
[11:20:51] *** Joins: tobybl_ (~tobybl@214.242.200.146.dyn.plus.net)
[11:22:33] *** Quits: causa_sui (~causasui@c-68-60-125-136.hsd1.mi.comcast.net) (Ping timeout: 256 seconds)
[11:23:07] *** Quits: kurahaupo (~kurahaupo@115.69.27.211) (Ping timeout: 256 seconds)
[11:24:02] *** Quits: jab416171 (~jab416171@c-174-52-58-23.hsd1.ut.comcast.net) (Ping timeout: 240 seconds)
[11:24:15] *** Quits: tobybl (~tobybl@214.242.200.146.dyn.plus.net) (Ping timeout: 256 seconds)
[11:24:52] *** Joins: dreamon (~dreamon@ppp-88-217-74-38.dynamic.mnet-online.de)
[11:26:05] *** Joins: herjazz (~herjazz@p10513117-ipngn24101marunouchi.tokyo.ocn.ne.jp)
[11:26:24] *** Quits: junebug (~junebug@2600:1700:3db0:2540:e6d0:8f86:be89:6d1) (Quit: Leaving)
[11:29:40] *** Joins: jab416171 (~jab416171@c-174-52-58-23.hsd1.ut.comcast.net)
[11:30:52] *** Joins: causa_sui (~causasui@c-68-60-125-136.hsd1.mi.comcast.net)
[11:34:30] *** Joins: mw_ (~mw@catv-80-98-128-161.catv.fixed.vodafone.hu)
[11:34:44] *** Quits: arinov (~arinov@77.67.139.142) (Ping timeout: 256 seconds)
[11:37:48] *** Quits: fatal (~0x00@user/fatal) (Remote host closed the connection)
[11:38:01] *** Joins: fatal (~0x00@user/fatal)
[11:38:26] *** Joins: arinov (~arinov@78.162.46.214)
[11:39:33] *** Quits: jab416171 (~jab416171@c-174-52-58-23.hsd1.ut.comcast.net) (Ping timeout: 256 seconds)
[11:39:50] *** Quits: causa_sui (~causasui@c-68-60-125-136.hsd1.mi.comcast.net) (Ping timeout: 256 seconds)
[11:40:08] *** Quits: Payam25 (~Payam@138.106.57.132) (Quit: Client closed)
[11:42:28] *** Joins: arinov_ (~arinov@77.67.139.142)
[11:44:56] *** Quits: arinov (~arinov@78.162.46.214) (Ping timeout: 256 seconds)
[11:47:01] *** Quits: ryzenda (~ryzenda@pool-74-109-246-70.pitbpa.fios.verizon.net) (Read error: Connection reset by peer)
[11:47:10] *** Joins: lus3Rz (~lus3Rz@gateway/tor-sasl/lus3rz)
[11:47:17] *** Joins: ryzenda (~ryzenda@pool-74-109-246-70.pitbpa.fios.verizon.net)
[11:50:58] *** Joins: tuskkk____ (uid18470@id-18470.tinside.irccloud.com)
[11:54:00] *** Quits: chunky (~chunky@i.dont.know.how.com.puters.work) (Quit: bye)
[11:54:10] *** Quits: rj1 (~rj1@i.dont.know.how.com.puters.work) (Quit: bye)
[11:54:14] *** Quits: ano (~ano@user/ano) (Quit: ano)
[11:54:27] *** Joins: yustin (~yustin@user/yustin)
[11:54:42] *** Joins: KevinX (~KevinX@user/KevinX)
[11:55:11] *** Quits: chasmo77 (~chas77@c-71-193-246-4.hsd1.or.comcast.net) (Quit: It's just that easy)
[11:55:26] *** Joins: ano (~ano@user/ano)
[11:56:21] *** Joins: chunky (~chunky@i.dont.know.how.com.puters.work)
[11:56:42] *** Joins: rj1 (~rj1@i.dont.know.how.com.puters.work)
[11:58:20] *** Joins: k8yun (~k8yun@user/k8yun)
[11:58:43] *** Quits: k8yun (~k8yun@user/k8yun) (Remote host closed the connection)
[11:59:24] *** Quits: sinaowolabi (~SinaOwola@102.134.114.1) (Read error: Connection reset by peer)
[12:03:50] *** Joins: sinaowolabi (~SinaOwola@102.134.114.1)
[12:15:46] *** Quits: cthulchu (~Cthulchu@69-172-160-196.cable.teksavvy.com) (Ping timeout: 272 seconds)
[12:16:28] *** Joins: geowiesnot (~user@5-51-190-244.abo.bbox.fr)
[12:18:14] *** Quits: whaa (~whaa@c-75-67-72-65.hsd1.ma.comcast.net) (Quit: Konversation terminated!)
[12:18:34] *** Joins: whaa (~whaa@c-75-67-72-65.hsd1.ma.comcast.net)
[12:18:57] *** Quits: toastloop (~toastloop@user/toastloop) (Quit: Leaving)
[12:19:19] *** Joins: toastloop (~toastloop@user/toastloop)
[12:19:33] *** Quits: ryzenda (~ryzenda@pool-74-109-246-70.pitbpa.fios.verizon.net) (Read error: Connection reset by peer)
[12:21:45] *** Joins: ryzenda (~ryzenda@pool-74-109-246-70.pitbpa.fios.verizon.net)
[12:25:52] *** Joins: lavaball (felix@31.204.155.215)
[12:25:59] *** Joins: causa_sui (~causasui@c-68-60-125-136.hsd1.mi.comcast.net)
[12:28:27] *** Quits: wolfshappen (~waff@irc.furworks.de) (Ping timeout: 272 seconds)
[12:28:34] *** Quits: mra90 (~mra@192.55.54.49) (Ping timeout: 256 seconds)
[12:28:38] *** Joins: enoq (~enoq@2a05:1141:1f5:5600:b9c9:721a:599:bfe7)
[12:28:43] *** Joins: wolfshappen (~waff@irc.furworks.de)
[12:30:06] *** Quits: tamz[m] (~tamzmatri@2001:470:69fc:105::9d6d) (Quit: You have been kicked for being idle)
[12:30:18] *** Joins: f00 (~timm@user/timm)
[12:30:58] *** Quits: causa_sui (~causasui@c-68-60-125-136.hsd1.mi.comcast.net) (Ping timeout: 272 seconds)
[12:31:16] *** Quits: Betal (~Betal@user/betal) (Quit: WeeChat 3.4)
[12:33:24] *** Joins: evanextreme (~evan@2604:4080:1000:8150:1cc2:43f9:3edb:f1c0)
[12:33:38] *** Joins: causa_sui (~causasui@c-68-60-125-136.hsd1.mi.comcast.net)
[12:34:32] *** Joins: soham (~soham@115.187.42.208)
[12:35:03] *** Quits: laris (undead@37.221.209.36) (Ping timeout: 252 seconds)
[12:36:21] *** Joins: rcernin (~rcernin@124.190.132.36)
[12:37:02] *** Joins: shad (~shad@user/shad)
[12:38:12] *** Quits: causa_sui (~causasui@c-68-60-125-136.hsd1.mi.comcast.net) (Ping timeout: 240 seconds)
[12:38:16] *** Vieillard is now known as Sauvin
[12:38:49] *** Quits: evanextreme (~evan@2604:4080:1000:8150:1cc2:43f9:3edb:f1c0) (Ping timeout: 256 seconds)
[12:41:33] *** Quits: carl--- (~carl-@c-138ee555.02-180-73746f39.bbcust.telenor.se) (Quit: Leaving)
[12:44:35] *** Quits: lus3Rz (~lus3Rz@gateway/tor-sasl/lus3rz) (Ping timeout: 240 seconds)
[12:47:11] *** Quits: ztrawhcse (3d1f427b6a@archlinux/bugwrangler/eschwartz) (Ping timeout: 250 seconds)
[12:47:51] *** Quits: akelly (24aca7a63b@2604:bf00:561:2000::152) (Ping timeout: 245 seconds)
[12:48:02] *** Quits: Ankhers (e99e97ef8e@2604:bf00:561:2000::2a2) (Ping timeout: 240 seconds)
[12:48:16] *** Quits: hwrd (aa272caead@2604:bf00:561:2000::137) (Ping timeout: 245 seconds)
[12:48:23] *** Joins: ztrawhcse (3d1f427b6a@archlinux/bugwrangler/eschwartz)
[12:48:32] *** Quits: sebboh (63d5b59a6a@fsf/member/sebboh) (Ping timeout: 240 seconds)
[12:48:41] *** Quits: b0o (0e4a0bf4c9@2604:bf00:561:2000::1bf) (Ping timeout: 245 seconds)
[12:48:47] *** Joins: sebboh (63d5b59a6a@fsf/member/sebboh)
[12:49:10] *** Joins: Ankhers (e99e97ef8e@2604:bf00:561:2000::2a2)
[12:49:41] *** Joins: akelly (24aca7a63b@2604:bf00:561:2000::152)
[12:49:43] *** Joins: hwrd (aa272caead@2604:bf00:561:2000::137)
[12:49:50] *** Joins: b0o (0e4a0bf4c9@2604:bf00:561:2000::1bf)
[12:51:39] *** Joins: causa_sui (~causasui@c-68-60-125-136.hsd1.mi.comcast.net)
[12:51:51] *** Quits: x10an14 (~x10an14@84.214.109.48) (Ping timeout: 256 seconds)
[12:54:36] *** Quits: rcernin (~rcernin@124.190.132.36) (Quit: WeeChat 3.4)
[12:54:47] *** Joins: diverdude (~user@176-21-102-230-cable.dk.customer.tdc.net)
[12:56:40] <diverdude> Hello, I am doing this in my script: rsync -az --delete -e 'ssh -p ${PORT}' --info=progress2 /tmp/deploy/zjupyterhub/ $TARGET:$FOLDER     but I get an error saying: Bad port '${PORT}'. I tried just doing $PORT but i get same error. What am I doing wrong ?
[12:57:03] *** Parts: [twisti] (~twisti@toadwater.com) ()
[12:58:41] *** Quits: causa_sui (~causasui@c-68-60-125-136.hsd1.mi.comcast.net) (Ping timeout: 245 seconds)
[12:58:50] *** Quits: Mo (~Mo@dynamic-077-003-078-031.77.3.pool.telefonica.de) (Ping timeout: 272 seconds)
[12:59:12] *** Joins: x10an14 (~x10an14@84.214.109.48)
[13:00:07] *** Quits: led_belly (~led_belly@37.120.197.45) (Ping timeout: 272 seconds)
[13:00:08] *** Joins: causa_sui (~causasui@c-68-60-125-136.hsd1.mi.comcast.net)
[13:01:19] <Soliton> !'
[13:01:19] <greybot> EVERYTHING inside single quotes (') is taken literally by bash. If you want to embed a ' inside '...', write it as the four characters '\'' or use $'...' quoting instead.
[13:01:35] <Soliton> use double quotes.
[13:03:12] <geirha> and already answered that in #linux
[13:03:53] <geirha> 10:17:47 <diverdude> Hello, I am doing this in my script: rsync -az --delete -e 'ssh -p ${PORT}' --info=progress2 /tmp/deploy/zjupyterhub/ $TARGET:$FOLDER     but I get an error saying: Bad port '${PORT}'. I tried just doing $PORT but i get same error. What am I doing wrong?
[13:03:55] <geirha> 10:18:33 <geirha> switch to double quotes instead of single
[13:04:50] *** Quits: causa_sui (~causasui@c-68-60-125-136.hsd1.mi.comcast.net) (Ping timeout: 256 seconds)
[13:05:16] *** Joins: causa_sui (~causasui@c-68-60-125-136.hsd1.mi.comcast.net)
[13:05:24] *** Quits: dreamon (~dreamon@ppp-88-217-74-38.dynamic.mnet-online.de) (Ping timeout: 256 seconds)
[13:06:50] *** Parts: toastloop (~toastloop@user/toastloop) (Leaving)
[13:07:23] <jelly> diverdude, test test, can you see this
[13:07:59] <jelly> geirha: maybe they don't see answers if you don't address them geirha (geirha)
[13:08:02] * jelly hides
[13:08:06] *** Joins: led_belly (~led_belly@37.120.197.44)
[13:09:01] <rendar> what is the best way to check if the remote machine has that command through ssh? e.g. to check if the remote machine has rsync
[13:09:13] <geirha> or maybe they were too busy joining arbitrary channels to ask in to notice the answers
[13:10:11] <geirha> ssh remote type rsync >/dev/null
[13:11:41] *** Quits: sinaowolabi (~SinaOwola@102.134.114.1) (Ping timeout: 256 seconds)
[13:11:53] <rendar> geirha, thanks
[13:12:56] <rendar> is 'type' a bash built-in?
[13:13:47] <Soliton> # type type
[13:13:49] <shbot> Soliton: type is a shell builtin
[13:14:16] <rendar> lol, ok
[13:14:40] *** Quits: causa_sui (~causasui@c-68-60-125-136.hsd1.mi.comcast.net) (Ping timeout: 272 seconds)
[13:14:49] <rendar> another thing, if i have e.g. `local result=$( zfs get -H keystatus "${dataset}" | awk '{ print $3 }' )`  what is the best way in this case to check if `zfs` or `awk` commands failed?
[13:14:56] <rendar> checking `$?` ?
[13:16:36] *** Joins: sinaowolabi (~SinaOwola@102.134.114.1)
[13:17:10] <geirha> !pf local
[13:17:10] <greybot> https://mywiki.wooledge.org/BashPitfalls#pf27 -- Don't do this! -- local var=$(cmd)
[13:17:12] *** Joins: vlm (~vlm@user/vlm)
[13:17:54] <jelly> would ${PIPESTATUS[0]} and ${PIPESTATUS[1]} catch those
[13:17:59] <geirha> local result ; if result=$(zfs get ... > >(awk '{print $3}')) ; then
[13:18:00] <Soliton> split the local to a sepaate command and set pipefail.
[13:18:30] <rendar> i see
[13:18:46] *** Joins: bluedust (~bluedust@103.165.167.221)
[13:19:07] *** Quits: geowiesnot (~user@5-51-190-244.abo.bbox.fr) (Ping timeout: 272 seconds)
[13:20:28] *** Quits: bluedust (~bluedust@103.165.167.221) (Remote host closed the connection)
[13:25:12] *** Quits: ryzenda (~ryzenda@pool-74-109-246-70.pitbpa.fios.verizon.net) (Read error: Connection reset by peer)
[13:25:59] *** Joins: MajorBiscuit (~MajorBisc@c-001-030-015.client.tudelft.eduvpn.nl)
[13:27:14] *** Joins: ryzenda (~ryzenda@pool-74-109-246-70.pitbpa.fios.verizon.net)
[13:32:17] *** Joins: flower_ (~debian@46.244.61.4)
[13:32:39] *** Quits: AquaL1te (~AquaL1te@user/aqual1te) (Quit: leaving)
[13:33:40] *** Quits: ryzenda (~ryzenda@pool-74-109-246-70.pitbpa.fios.verizon.net) (Read error: Connection reset by peer)
[13:41:14] <rendar> can i do: `declare -A hello; hello['2']=( --flag1 --flag2 --flag3=yes )`   ?
[13:41:31] <rendar> i mean, using -A with arrays ( ), instead of simple strings?
[13:41:32] <geirha> no
[13:41:39] <Soliton> # declare -A hello; hello['2']=( --flag1 --flag2 --flag3=yes )
[13:41:40] <shbot> Soliton: bash: hello['2']: cannot assign list to array member
[13:41:45] <rendar> ok
[13:41:54] <Soliton> !weakness
[13:41:54] <greybot> http://mywiki.wooledge.org/BashWeaknesses
[13:42:18] <rendar> let's say i have `hello['2']="--flag --flag2=3"` how can i get that string and pass that strings as a command args?
[13:42:45] <Soliton> you have to split it some way first.
[13:42:49] <geirha> split it on whitespace and pray no one added any quotes
[13:43:20] <Soliton> maybe you should rather reclare functions.
[13:43:22] <rendar> gosh -_- ...what is the best way to split it, then?
[13:43:24] <Soliton> declare*
[13:43:32] <rendar> Soliton, nope
[13:43:39] <geirha> redesign the script
[13:43:45] <rendar> i want to associate some #id to command's args
[13:43:53] <rendar> redesign what?
[13:44:10] *** Joins: mowcat (~mowcat@2a00:23c5:d190:1901:f22f:74ff:fe77:1e1c)
[13:44:12] *** Joins: m4n (~emacs@ip5f5bd1ff.dynamic.kabel-deutschland.de)
[13:44:17] <Soliton> cmd1() { cmd --flag --flag2=3 "$@"; }; hello[2]=cmd1
[13:44:23] <rendar> if i'm starting something #1, i need those args, if i'm starting something #2 i need those other args
[13:45:07] <rendar> Soliton, that would be very unreadable
[13:45:23] <rendar> because that 'cmd' is not a simple cmd, but has a lot of stuff
[13:45:52] <Soliton> so much more readable to give that complex command an expressive function name.
[13:46:08] *** Joins: seninha (~chatzilla@user/seninha)
[13:46:35] <rendar> ok maybe a switch case would be better
[13:47:23] *** Quits: senoraraton (~senorarat@192-195-83-130.static.monkeybrains.net) (Ping timeout: 256 seconds)
[13:47:37] *** Quits: sinaowolabi (~SinaOwola@102.134.114.1) (Ping timeout: 256 seconds)
[13:50:54] *** Joins: senoraraton (~senorarat@192-195-83-130.static.monkeybrains.net)
[13:53:26] *** Joins: drd (~drd@93-42-66-75.ip85.fastwebnet.it)
[13:53:37] *** Joins: TheHermann (~TheHerman@gateway/tor-sasl/thehermann)
[13:53:44] *** Quits: igemnace (~ian@user/igemnace) (Quit: WeeChat 3.4)
[13:56:41] *** Quits: jmdaemon (~jmdaemon@user/jmdaemon) (Ping timeout: 256 seconds)
[13:59:45] *** Joins: causa_sui (~causasui@c-68-60-125-136.hsd1.mi.comcast.net)
[14:03:36] *** Joins: OlCe (~user@amontpellier-655-1-45-169.w109-210.abo.wanadoo.fr)
[14:05:15] *** Quits: senoraraton (~senorarat@192-195-83-130.static.monkeybrains.net) (Remote host closed the connection)
[14:05:20] *** Quits: causa_sui (~causasui@c-68-60-125-136.hsd1.mi.comcast.net) (Ping timeout: 272 seconds)
[14:06:29] *** Joins: senoraraton (~senorarat@192-195-83-130.static.monkeybrains.net)
[14:13:06] *** Joins: dreamon (~dreamon@153.100.191.113)
[14:17:57] *** Quits: richardm75 (~richardm7@2600:8801:c507:b200:25f9:81d7:5e71:9c31) (Ping timeout: 240 seconds)
[14:22:15] <Earnestly> Reminder that printf ... "'a" / '"a' notation is POSIX
[14:24:10] *** Joins: Intelo (~Intelo@88.244.94.226)
[14:24:56] *** Joins: causa_sui (~causasui@c-68-60-125-136.hsd1.mi.comcast.net)
[14:26:52] *** Quits: dreamon (~dreamon@153.100.191.113) (Ping timeout: 272 seconds)
[14:28:03] *** Quits: downunder (~downunder@110.151.111.219) (Quit: WeeChat 3.4)
[14:31:26] *** Quits: causa_sui (~causasui@c-68-60-125-136.hsd1.mi.comcast.net) (Ping timeout: 250 seconds)
[14:32:08] *** Joins: rustyshackleford (uid236774@id-236774.helmsley.irccloud.com)
[14:32:31] *** Joins: causa_sui (~causasui@c-68-60-125-136.hsd1.mi.comcast.net)
[14:33:44] <nf> what's the closest i can get to performing just tilde expansion on a word?
[14:34:08] <nf> this is in the context of a completion script that needs to suggest completions for ~/foo#bar, where #bar is interpreted by the program
[14:34:22] <nf> so the program needs to receive /home/me/foo#bar
[14:34:36] <nf> using eval feels ugly
[14:36:09] *** Joins: laris (~laris@37.221.209.36)
[14:36:21] <nf> there really should be a parameter transformation for each possible expansion
[14:36:25] <kurahaupo_> nf: echo "${var/#\~\//"$HOME/"}
[14:36:35] *** Quits: ano (~ano@user/ano) (Ping timeout: 240 seconds)
[14:36:52] <kurahaupo_> nf: Yeah, that would be better, but it's not what the shell does
[14:37:01] <nf> kurahaupo_: the point is really to get the shell to do the expansion. otherwise i can implement the standard POSIX logic in the program itself
[14:37:38] *** Quits: causa_sui (~causasui@c-68-60-125-136.hsd1.mi.comcast.net) (Ping timeout: 272 seconds)
[14:38:44] <kurahaupo_> nf: Presumably you want the full ~ expansion mechanism, not just $HOME ?
[14:38:48] *** Joins: ano (~ano@user/ano)
[14:39:19] <nf> yes
[14:39:32] *** Joins: causa_sui (~causasui@c-68-60-125-136.hsd1.mi.comcast.net)
[14:39:57] *** Quits: tobybl_ (~tobybl@214.242.200.146.dyn.plus.net) (Remote host closed the connection)
[14:40:53] <nf> maybe eval is the solution...
[14:41:09] <kurahaupo_> And allowing for home directories that contain spaces
[14:41:13] <nf> eval GET_COMPLETIONS=$COMP_CWORD "${COMP_WORDS[@]}"
[14:41:59] <nf> kurahaupo_: wait how would that be a problem
[14:42:04] *** Joins: _sa0sin_ (~sa0sin@2a01:e0a:414:b360:8cfb:b3b6:10d0:2e4b)
[14:42:32] <nf> if the shell gets a completion with a space it will insert backslash-space on the command line, right?
[14:43:41] *** Quits: eroux (~eroux@102-65-85-242.ftth.web.africa) (Quit: My MacBook has gone to sleep. ZZZzzzâ€¦)
[14:43:57] <ormaaj> getent passwd user | cut -d : -f 6
[14:43:58] <ormaaj> if you have getent
[14:44:17] *** Quits: causa_sui (~causasui@c-68-60-125-136.hsd1.mi.comcast.net) (Ping timeout: 256 seconds)
[14:44:36] *** Quits: sa0 (~sa0sin@88.120.82.205) (Ping timeout: 272 seconds)
[14:45:19] *** Joins: causa_sui (~causasui@c-68-60-125-136.hsd1.mi.comcast.net)
[14:45:24] <nf> <nf> kurahaupo_: the point is really to get the shell to do the expansion. otherwise i can implement the standard POSIX logic in the program itself
[14:46:41] *** Quits: shailangsa (~shailangs@host86-186-127-164.range86-186.btcentralplus.com) (Remote host closed the connection)
[14:47:44] *** Joins: zuplex (~zuplex@202.51.76.222)
[14:49:52] *** Joins: dea (~dea@91.228.198.62)
[14:50:18] *** Quits: causa_sui (~causasui@c-68-60-125-136.hsd1.mi.comcast.net) (Ping timeout: 272 seconds)
[14:50:49] *** Joins: causa_sui (~causasui@c-68-60-125-136.hsd1.mi.comcast.net)
[14:51:20] <Earnestly> nf: Do the latter
[14:51:37] <Earnestly> (or eval, that's it)
[14:52:03] <dea> I have a bash script in .bashrc that start an script and touch a file so it knows not to overstart the script, but, how to inform it to remove the file when the process terminates?
[14:53:04] *** Quits: arinov_ (~arinov@77.67.139.142) (Ping timeout: 256 seconds)
[14:53:26] <Earnestly> !exclusive
[14:53:29] <Earnestly> hmm
[14:53:32] <Earnestly> !faq exclusive
[14:53:32] <greybot> Earnestly: No matches found at https://mywiki.wooledge.org/BashFAQ
[14:54:12] *** Quits: senoraraton (~senorarat@192-195-83-130.static.monkeybrains.net) (Ping timeout: 240 seconds)
[14:54:20] <Earnestly> dea: https://mywiki.wooledge.org/BashFAQ/045
[14:55:00] <dea> !fac
[14:55:13] <dea> Earnestly: Thanks
[14:56:01] *** Joins: [twisti] (~twisti@toadwater.com)
[14:56:50] <[twisti]> i have a script where i want to run a command that may or may not fail. i want to store the return code in a variable, and then proceed with the script, no matter whether the command failed or not. how can i accomplish that ?
[14:57:34] <phy1729> Just don't use set -e
[14:58:02] <Earnestly> !-e
[14:58:02] <greybot> "set -e" is an inheritance of the old bourne shell, and doesn't really work well with modern shell features. You'll really have less buggy scripts if you do the error handling manually instead of relying on the unreliable "set -e"; see http://mywiki.wooledge.org/BashFAQ/105
[14:58:34] <ormaaj> cmd; status=$?; ...
[14:58:45] <[twisti]> ah, duh
[14:58:57] *** Joins: tobybl (~tobybl@214.242.200.146.dyn.plus.net)
[14:59:18] *** Quits: fstd (~fstd@xdsl-81-173-174-103.nc.de) (Read error: Connection reset by peer)
[14:59:21] *** Joins: sn1tch3r (~sn1tch3r@user/sn1tch3r)
[14:59:26] *** Joins: zuplex_ (~zuplex@202-51-76-38.vianet.com.np)
[14:59:35] *** Joins: fstd (~fstd@xdsl-81-173-174-103.nc.de)
[14:59:36] *** Quits: sn1tch3r (~sn1tch3r@user/sn1tch3r) (Remote host closed the connection)
[15:00:38] *** Joins: taupiqueur (~taupiqueu@lmontsouris-659-1-2-186.w193-248.abo.wanadoo.fr)
[15:00:45] *** Quits: heiner (~Thunderbi@2a00:6020:b006:a900:d250:99ff:fe34:8fd2) (Quit: heiner)
[15:00:57] *** Joins: tercaL (~tercaL@user/tercal)
[15:02:12] *** Quits: causa_sui (~causasui@c-68-60-125-136.hsd1.mi.comcast.net) (Ping timeout: 240 seconds)
[15:02:21] *** Quits: zuplex (~zuplex@202.51.76.222) (Ping timeout: 272 seconds)
[15:04:55] *** Joins: causa_sui (~causasui@c-68-60-125-136.hsd1.mi.comcast.net)
[15:05:58] *** Joins: AquaL1te (~AquaL1te@user/aqual1te)
[15:06:12] *** Quits: zuplex_ (~zuplex@202-51-76-38.vianet.com.np) (Ping timeout: 240 seconds)
[15:09:56] *** Quits: causa_sui (~causasui@c-68-60-125-136.hsd1.mi.comcast.net) (Ping timeout: 272 seconds)
[15:10:14] <[twisti]> can the [[ foo -eq 1 ]] syntax not be used with string comparisons ?
[15:10:57] *** Joins: pretty_dumm_guy (trottel@gateway/vpn/protonvpn/prettydummguy/x-88029655)
[15:10:58] <Soliton> it's arithmetic comparison.
[15:11:11] <Soliton> fo string comparsion you use =
[15:11:48] <[twisti]> doh++
[15:14:43] *** Joins: mithrin (~mithrin@188-167-233-152.dynamic.chello.sk)
[15:20:32] *** Joins: bluedust (~bluedust@103.165.167.221)
[15:20:46] *** Quits: tuskkk____ (uid18470@id-18470.tinside.irccloud.com) (Quit: Connection closed for inactivity)
[15:23:48] *** Quits: libsys (~libsys@186.105.132.6) (Ping timeout: 240 seconds)
[15:24:50] *** Joins: libsys (~libsys@186.105.130.50)
[15:24:54] *** Joins: causa_sui (~causasui@c-68-60-125-136.hsd1.mi.comcast.net)
[15:26:39] *** Joins: arinov_ (~arinov@77.67.139.142)
[15:31:11] *** Quits: yustin (~yustin@user/yustin) (Ping timeout: 245 seconds)
[15:31:36] *** Joins: Atque (~Atque@user/atque)
[15:32:57] <ormaaj> # touch stupid_bash; chmod u+x stupid_bash; PATH=\~:$PATH type -p stupid_bash
[15:32:59] <shbot> ormaaj: /root/stupid_bash
[15:33:27] <ormaaj> still a thing :/
[15:33:35] *** Quits: causa_sui (~causasui@c-68-60-125-136.hsd1.mi.comcast.net) (Ping timeout: 256 seconds)
[15:34:29] <colo> ?
[15:34:38] <geirha> Let's request shopt -s nopathtilde
[15:35:47] *** Joins: zuplex (~zuplex@202-51-76-35.vianet.com.np)
[15:36:18] *** Joins: skapata (~Skapata@2804:14c:87b0:9d2e:51cf:76e6:128:2246)
[15:36:18] *** Quits: skapata (~Skapata@2804:14c:87b0:9d2e:51cf:76e6:128:2246) (Changing host)
[15:36:18] *** Joins: skapata (~Skapata@user/skapata)
[15:36:31] <ormaaj> chet pretty much said no. "because it's never been a problem"
[15:38:46] <geirha> To be fair, it's only a problem for people who haven't learned how shell quoting works, so only about most bash users
[15:38:50] <ormaaj> but then if someone else asks once every 6 months he seems to have a 10% chance of randomly saying "oh good idea"
[15:39:18] *** Joins: cdown (~cdown@188.214.11.14)
[15:40:44] <ormaaj> IIRC my gripe was execvpe behaves doesn't do that. I don't know where that would matter it's just inconsistent.
[15:40:58] <ormaaj> *behaves differently
[15:41:28] <geirha> it effectively unintentionally adds a relative directory to PATH for all other processes but bash
[15:41:49] <geirha> so  cp malicious-ls /tmp/
[15:41:57] *** Joins: Kartagis- (~iegg@user/kartagis)
[15:42:00] <geirha> so  cp malicious-ls '/tmp/~/bin/ls'  and wait for the right moment
[15:42:36] <Soliton> as much as it's never been a problem the same is true for the fix presumably.
[15:42:37] <geirha> cd /tmp && find . -type f -exec ls {} +
[15:42:39] *** Quits: dea (~dea@91.228.198.62) (Ping timeout: 256 seconds)
[15:43:34] *** Joins: UnnamedBeer (~UnnamedBe@6.red-79-158-63.dynamicip.rima-tde.net)
[15:43:39] *** Joins: zer0bitz (~zer0bitz@2001:2003:f74d:b800:3027:99e6:c0d6:7e32)
[15:45:13] <geirha> # PATH="~/bin:$PATH"; mkdir -p /tmp/\~/bin && printf '#!/usr/bin/env bash\necho oops\n' > '/tmp/~/bin/ls' && chmod +x '/tmp/~/bin/ls' && cd /tmp && find . -type f -exec ls {} +
[15:45:14] <shbot> geirha: oops
[15:45:40] <ormaaj> :))
[15:45:57] *** Joins: Giovanni (~Giovanni@176.67.166.45)
[15:46:36] *** Quits: bluedust (~bluedust@103.165.167.221) (Ping timeout: 240 seconds)
[15:46:47] *** Quits: Gooberpatrol66 (~Gooberpat@user/gooberpatrol66) (Remote host closed the connection)
[15:47:42] *** Joins: Gooberpatrol66 (~Gooberpat@user/gooberpatrol66)
[15:49:20] *** Quits: arinov_ (~arinov@77.67.139.142) (Quit: Konversation terminated!)
[15:49:34] *** Joins: arinov_ (~arinov@77.67.139.142)
[15:50:14] *** Joins: cdown_ (~cdown@163.114.131.1)
[15:50:47] *** Quits: Gooberpatrol66 (~Gooberpat@user/gooberpatrol66) (Remote host closed the connection)
[15:51:08] *** Joins: MetroConductor (~MetroCond@user/MetroConductor)
[15:51:22] *** Joins: dea (~dea@5.121.210.143)
[15:52:09] *** Joins: Gooberpatrol66 (~Gooberpat@user/gooberpatrol66)
[15:52:51] *** Quits: cdown (~cdown@188.214.11.14) (Ping timeout: 256 seconds)
[15:52:58] *** cdown_ is now known as cdown
[15:53:22] *** Quits: Gooberpatrol66 (~Gooberpat@user/gooberpatrol66) (Remote host closed the connection)
[15:54:24] *** Joins: Gooberpatrol66 (~Gooberpat@user/gooberpatrol66)
[15:54:47] *** Quits: Gooberpatrol66 (~Gooberpat@user/gooberpatrol66) (Remote host closed the connection)
[15:55:24] *** Quits: arinov_ (~arinov@77.67.139.142) (Ping timeout: 256 seconds)
[15:55:41] *** Joins: Gooberpatrol66 (~Gooberpat@user/gooberpatrol66)
[15:56:26] *** Joins: RealKiller (~RealKille@104.210.65.79)
[15:57:14] <RealKiller> hey,, I am trying to assign a string to a variable but I am getting an error that "No such file or Directory", what is wrong in this
[15:57:21] <RealKiller> Â  Â  Â sas=`https://mystrorage.blob.core.windows.net/dir?"se=2022-02-18T12%3A19Z&sp=dasdasdap&sv=2022-01-28&ss=bf&srt=co&sig=mc3DDm0J04ocoqLy5GLMf1cOebM%3D"`
[15:58:14] <geirha> remove the ` `
[15:58:56] <geirha> and I'd probably move the starting " quote to the start, though it won't make a difference.
[15:59:00] <RealKiller> what if i have a variable name in the string, $variable in the string above
[15:59:04] <ormaaj> and look out for the &'s
[15:59:04] <geirha> sas="https://...%3D"
[15:59:40] <Soliton> $variable will expand to the contents of that variable.
[15:59:51] *** Joins: ryzenda (~ryzenda@pool-74-109-246-70.pitbpa.fios.verizon.net)
[16:00:03] <RealKiller> ${variable} provides a solution I guess?
[16:00:09] <geirha> no
[16:00:14] <Soliton> a solution to what?
[16:00:15] <ormaaj> # printf %q\\n 'https://mystrorage.blob.core.windows.net/dir?"se=2022-02-18T12%3A19Z&sp=dasdasdap&sv=2022-01-28&ss=bf&srt=co&sig=mc3DDm0J04ocoqLy5GLMf1cOebM%3D"'
[16:00:17] <shbot> ormaaj: https://mystrorage.blob.core.windows.net/dir\?\"se=2022-02-18T12%3A19Z\&sp=dasdasdap\&sv=2022-01-28\&ss=bf\&srt=co\&sig=mc3DDm0J04ocoqLy5GLMf1cOebM%3D\"
[16:00:23] <ormaaj> there you go
[16:00:33] <Soliton> if you don't want the variable expanded then consider single quotes.
[16:00:35] <ormaaj> oh it has "'s. nevermind then
[16:01:26] <geirha> In full:   sas="https://mystrorage.blob.core.windows.net/dir?se=2022-02-18T12%3A19Z&sp=dasdasdap&sv=2022-01-28&ss=bf&srt=co&sig=mc3DDm0J04ocoqLy5GLMf1cOebM%3D"
[16:02:11] <geirha> and if you have a variable to inject, that'll work just fine, though make sure you properly percent escape if it's user input.
[16:02:17] <ormaaj> I hate partially quoted words
[16:02:21] <geirha> sas="https://mystrorage.blob.core.windows.net/dir?se=2022-02-18T12%3A19Z&sp=dasdasdap&sv=2022-01-28&ss=bf&srt=co&sig=mc3DDm0J04ocoqLy5GLMf1cOebM%3D&dryrun=$dryrun"
[16:02:48] <ormaaj> If you need something quoted and don't need part of the word unquoted then quote the ENTIRE word!
[16:03:17] <ormaaj> it's faster slightly too
[16:03:21] *** Joins: john_johnk (~Thunderbi@232.58.140.77.rev.sfr.net)
[16:03:33] *** Joins: sinaowolabi (~SinaOwola@102.134.114.1)
[16:03:39] <ormaaj> so micro-optimization points.
[16:03:50] <geirha> yeah, those extra milliseconds matter when talking to microsoft apis
[16:04:24] <RealKiller> so lets say all the letters after ? starting from "se" is a variable and I want to join it to previous word
[16:04:47] <RealKiller> Â https://mystrorage.blob.core.windows.net/dir?${SAS}, does it not work
[16:04:56] <Soliton> sure it does.
[16:05:11] <geirha> it will work without the {} too
[16:05:18] <Soliton> your variable was sas though.
[16:05:53] <RealKiller> so i am storing that big string after ? in a variable then joining it
[16:07:00] <Soliton> # var=se=foobar sas="https://mystrorage.blob.core.windows.net/dir?$var"; declare -p sas
[16:07:02] <shbot> Soliton: declare -- sas="https://mystrorage.blob.core.windows.net/dir?se=foobar"
[16:07:54] <RealKiller> so this is my entire usecase https://pastebin.com/gaM9hdQJ
[16:07:54] <pasteban> Paste is available without ads on https://pastebin.com/raw/gaM9hdQJ
[16:08:13] <Soliton> you need to quote properly.
[16:08:15] <geirha> you forgot to quote the &s
[16:08:17] <RealKiller> i removed ` `
[16:08:22] <Soliton> & terminates a word.
[16:08:29] <geirha> se="2022-...&..."
[16:08:42] <Soliton> !&
[16:08:42] <greybot> If you put the control operator & at the end of a command, e.g. ''command args &'', the shell executes the command in the background in a subshell. The shell does not wait for the command to finish, and the return status is 0. Pid of the last backgrounded command is available via the special variable $!
[16:09:16] <geirha> also, you probably want se="se=2022-...&..."
[16:09:32] <RealKiller> hmm, but what if the value 2022-02-18T12%3A19Z&sp=dasdasdap&sv=2022-01-28&ss=bf&srt=co&sig=mc3DDm0J04ocoqLy5GLMf1cOebM%3D is returned by a command say myCommand
[16:09:37] *** Quits: vicecea (~vicecea@gateway/vpn/pia/vicecea) (Remote host closed the connection)
[16:09:47] <geirha> then se=$(that command)
[16:09:53] <RealKiller> se=`myCommand` works
[16:09:57] <geirha> !`
[16:09:57] <greybot> The backquote (`) is used in the old-style command substitution, e.g. foo=`command`. The foo=$(command) syntax is recommended instead. Backslash handling inside $() is less surprising, and $() is easier to nest. See http://mywiki.wooledge.org/BashFAQ/082
[16:09:57] <Soliton> !`
[16:09:58] <greybot> The backquote (`) is used in the old-style command substitution, e.g. foo=`command`. The foo=$(command) syntax is recommended instead. Backslash handling inside $() is less surprising, and $() is easier to nest. See http://mywiki.wooledge.org/BashFAQ/082
[16:10:02] <RealKiller> okay so dollar and brackets
[16:10:07] <Soliton> it works but there is no reason to use it.
[16:10:16] *** Joins: vicecea (~vicecea@gateway/vpn/pia/vicecea)
[16:10:26] <RealKiller> hmmmm, it was very knowledgable session
[16:10:27] <RealKiller> Thanks
[16:12:28] *** Joins: cvemys (~cvemys@user/cvemys)
[16:14:09] *** Joins: ayustae (Thunderbir@gateway/vpn/protonvpn/ayustae)
[16:14:23] *** Joins: igemnace (~ian@user/igemnace)
[16:15:21] *** Quits: ryzenda (~ryzenda@pool-74-109-246-70.pitbpa.fios.verizon.net) (Read error: Connection reset by peer)
[16:15:48] *** Quits: sinaowolabi_ (~SinaOwola@160.152.109.220) (Ping timeout: 272 seconds)
[16:15:49] <[twisti]> are there any cases where `command` is still required ? or can i flag any instance of that i see as bad ?
[16:16:09] *** Parts: Intelo (~Intelo@88.244.94.226) ()
[16:16:10] <geirha> not outside of a museum, no
[16:16:32] <ormaaj> the command command or the ``'s?
[16:16:58] *** Joins: ryzenda (~ryzenda@pool-74-109-246-70.pitbpa.fios.verizon.net)
[16:18:20] *** Quits: sinaowolabi (~SinaOwola@102.134.114.1) (Ping timeout: 272 seconds)
[16:18:45] *** Joins: bluedust (~bluedust@103.165.167.221)
[16:19:10] *** Quits: ryzenda (~ryzenda@pool-74-109-246-70.pitbpa.fios.verizon.net) (Read error: Connection reset by peer)
[16:19:13] <ormaaj> j# echo "`echo nope still relevant`"
[16:19:14] <xx> the ``s are required if you're working with some ancient stuff
[16:19:15] <shbot> ormaaj: nope still relevant
[16:19:15] *** Quits: john_johnk (~Thunderbi@232.58.140.77.rev.sfr.net) (Ping timeout: 256 seconds)
[16:19:46] *** Joins: mort (~mort@188.166.114.29)
[16:19:58] <mort> hey, how does \[ and \] work in bash?
[16:20:02] <ormaaj> no sorry j# you're irrelevant.
[16:20:12] *** Joins: ryzenda (~ryzenda@pool-74-109-246-70.pitbpa.fios.verizon.net)
[16:20:14] <mort> in the PS1 specifically
[16:20:27] <Soliton> man bash explains.
[16:20:28] <geirha> bourne style shells implement `` to try to be somewhat compatible with the bourne shell, which only had the `...` syntax for command substitution. POSIX recommends not using it for new scripts; it's only there in an attempt to be able to run ancient bourne shell scripts
[16:20:49] <mort> I'm trying to make a PS1 printer, and my understanding was that escape sequences (and other sequences which don't change the cursor position) should be put in \[ ... \]
[16:20:59] <Soliton> !faq fancy
[16:20:59] <greybot> https://mywiki.wooledge.org/BashFAQ/053 -- I have a fancy prompt with colors, and now bash doesn't seem to know how wide my terminal is.  Lines wrap around incorrectly.
[16:21:00] <mort> but it seems bash just prints the \[ and \] literally
[16:21:17] <Soliton> perhaps you're doing something wrong.
[16:21:50] *** Joins: shailangsa (~shailangs@host86-186-127-164.range86-186.btcentralplus.com)
[16:21:50] <geirha> mort: they only "work" if they're part of PS1. If they are the result of $var or $(cmd) inside PS1, then they won't have their special meaning
[16:22:15] <mort> geirha: hmm, how do you achieve the same effect when the colors are printed by $(cmd) then?
[16:22:23] <mort> is it even necessary?
[16:22:44] <geirha> bash translates \[ and \] to literal bytes 1 (\0x01) and 2 \(0x02) which is what readline uses
[16:22:57] <geirha> so you can instead bytes 1 and 2
[16:22:59] <mort> ah
[16:23:01] <mort> thanks
[16:23:05] <Soliton> is cmd written by you?
[16:23:10] <mort> yes
[16:23:14] *** Quits: zuplex (~zuplex@202-51-76-35.vianet.com.np) (Ping timeout: 250 seconds)
[16:23:25] <Soliton> then perhaps don't output the colors in it.
[16:23:31] <mort> why not
[16:23:33] <Soliton> or you need to use \1 and \2.
[16:23:48] <geirha> I generally just avoid having any $() in PS1. Instead I run such functions in PROMPT_COMMAND and have them set variables instead, which I then use in PS1
[16:23:48] *** Joins: zuplex (~zuplex@202.51.76.195)
[16:24:38] <geirha> pipes and forks are expensive, and if you add enough of them, the prompt will be noticably slow
[16:25:41] *** Quits: RealKiller (~RealKille@104.210.65.79) (Quit: Client closed)
[16:25:45] <mort> I'm writing a prompt printer, a la starship
[16:26:09] <geirha> no clue what starship is
[16:26:43] *** Joins: malina (~malina@user/malina)
[16:26:44] *** Joins: causa_sui (~causasui@c-68-60-125-136.hsd1.mi.comcast.net)
[16:27:17] *** Joins: eroux (~eroux@102-65-85-242.ftth.web.africa)
[16:27:26] <ormaaj> # printf -v x '\[%s\]\\u@\h\[%s\] (%s) \w \$\[%s\] ' "$(tput -S <<<"setaf $((${EUID:-$(id -u)} ? 2 : 1))"$'\nbold')" "$(tput setaf 4)" "$$" "$(tput sgr0)"; echo "${x@P}"
[16:27:28] <shbot> ormaaj: root@bunnies (44) ~ #
[16:30:04] <mort> geirha: https://starship.rs/
[16:30:14] *** Joins: sinaowolabi_ (~SinaOwola@102.134.114.1)
[16:30:15] *** Quits: drd (~drd@93-42-66-75.ip85.fastwebnet.it) (Ping timeout: 256 seconds)
[16:31:46] *** Joins: sinaowolabi (~SinaOwola@41.58.204.82)
[16:32:17] *** Quits: causa_sui (~causasui@c-68-60-125-136.hsd1.mi.comcast.net) (Ping timeout: 256 seconds)
[16:32:42] *** Joins: yustin (~yustin@user/yustin)
[16:37:03] *** Quits: sinaowolabi (~SinaOwola@41.58.204.82) (Ping timeout: 256 seconds)
[16:39:00] *** Quits: shad (~shad@user/shad) (Ping timeout: 240 seconds)
[16:40:28] *** Quits: sarantos (~sarantos@2a02:587:3443:97d:ec28:d6cd:a0e4:8fe5) (Quit: Client closed)
[16:41:34] *** Quits: lavaball (felix@31.204.155.215) (Remote host closed the connection)
[16:42:21] *** Quits: vlm (~vlm@user/vlm) (Quit: "")
[16:42:34] *** Joins: vlm (~vlm@user/vlm)
[16:43:22] *** Joins: volga629 (~volga629@72.139.93.26)
[16:44:39] *** Quits: ayustae (Thunderbir@gateway/vpn/protonvpn/ayustae) (Quit: ayustae)
[16:45:33] *** Quits: taupiqueur (~taupiqueu@lmontsouris-659-1-2-186.w193-248.abo.wanadoo.fr) (Ping timeout: 256 seconds)
[16:45:57] *** Joins: causa_sui (~causasui@c-68-60-125-136.hsd1.mi.comcast.net)
[16:48:42] *** Joins: sinaowolabi (~SinaOwola@102.134.114.1)
[16:48:47] *** Joins: lavaball (~Melissa@static.24.10.9.176.clients.your-server.de)
[16:49:31] *** Quits: ExeciN (~ExeciN@user/nicexe) (Remote host closed the connection)
[16:49:51] *** Joins: ExeciN (~ExeciN@user/nicexe)
[16:50:04] *** Joins: taupiqueur (~taupiqueu@lmontsouris-659-1-2-186.w193-248.abo.wanadoo.fr)
[16:50:10] *** Quits: lavaball (~Melissa@static.24.10.9.176.clients.your-server.de) (Remote host closed the connection)
[16:50:51] *** Joins: fdan (~fdan@2001:1900:2100:2807:640a::ffb)
[16:51:56] <fdan> exec ${NODE_ENTRYPOINT} $(echo "$NODE_ARGS" | xargs)
[16:52:04] <fdan> what does this snippet do?
[16:52:28] <phy1729> Summon Cthulhu mostly
[16:52:52] <isabella> that's a new idiom
[16:53:00] <Earnestly> Just needs eval to trifecta
[16:53:16] <Soliton> add the most commands you can so that it possibly still works.
[16:53:16] *** Quits: herjazz (~herjazz@p10513117-ipngn24101marunouchi.tokyo.ocn.ne.jp) (Quit: leaving)
[16:53:21] <Soliton> i think that was the task.
[16:53:38] *** Joins: shad (~shad@user/shad)
[16:53:57] <Soliton> there probably is room for improvement until ARG_MAX.
[16:54:00] *** Joins: john_johnk (~Thunderbi@232.58.140.77.rev.sfr.net)
[16:55:04] *** Joins: lavaball (felix@31.204.155.215)
[16:55:10] <Soliton> fdan: unless there is actual xargs syntax in NODE_ARGS it probably does the same as: exec ${NODE_ENTRYPOINT} $NODE_ARGS
[16:55:27] <phy1729> exec "$MODE_ENTRYPOINT" $NODE_ARGS  should be basically the same
[16:55:39] <Soliton> well, if set -f is on.
[16:57:40] <fdan> ok i see that the $NODE_ARGS is commented
[16:57:54] *** Quits: zuplex (~zuplex@202.51.76.195) (Ping timeout: 250 seconds)
[16:58:34] <Soliton> it's bad form either way.
[16:58:41] *** Quits: iliv (~iliv@user/iliv) (Ping timeout: 245 seconds)
[16:58:49] <fdan> what should have been the right way
[16:59:02] <Soliton> depends what the goal is.
[16:59:10] <Soliton> is NODE_ARGS an env variable?
[16:59:22] <fdan> yes
[16:59:38] <Soliton> so broken design. not really fixable.
[16:59:50] *** Joins: Filohuhum (~dante@gateway/tor-sasl/filohuhum)
[16:59:59] <fdan> ok
[17:00:00] *** Quits: causa_sui (~causasui@c-68-60-125-136.hsd1.mi.comcast.net) (Ping timeout: 256 seconds)
[17:00:10] <Soliton> an env variable is a string not a list of strings as arguments are.
[17:00:14] <phy1729> you need an array see
[17:00:19] <phy1729> !complex
[17:00:19] <greybot> http://mywiki.wooledge.org/BashFAQ/050
[17:00:47] *** Joins: causa_sui (~causasui@c-68-60-125-136.hsd1.mi.comcast.net)
[17:01:46] *** Joins: anaveragehuman (~anaverage@user/anaveragehuman)
[17:02:50] *** Quits: john_johnk (~Thunderbi@232.58.140.77.rev.sfr.net) (Ping timeout: 256 seconds)
[17:03:28] <Soliton> even if they do use xargs syntax the following wordsplitting makes it moot.
[17:03:44] <Soliton> # NODE_ENTRYPOINT='printf <%s>' NODE_ARGS='"foo bar"'; $NODE_ENTRYPOINT $(echo "$NODE_ARGS" | xargs)
[17:03:46] <shbot> Soliton: <foo><bar>
[17:03:58] *** Quits: revolve (~u0_a227@cpc100838-bagu15-2-0-cust672.1-3.cable.virginm.net) (Ping timeout: 256 seconds)
[17:04:21] <fdan> thanks
[17:05:16] <Soliton> and of course echo is a bad choice especially if you want it to print arguments that might be options.
[17:05:50] *** Quits: causa_sui (~causasui@c-68-60-125-136.hsd1.mi.comcast.net) (Ping timeout: 272 seconds)
[17:06:24] *** Joins: bomb-on (~bomb-on@194.144.47.113)
[17:06:53] *** Joins: hesse (~TheHerman@gateway/tor-sasl/thehermann)
[17:08:03] *** Quits: TheHermann (~TheHerman@gateway/tor-sasl/thehermann) (Remote host closed the connection)
[17:08:38] <Fernando-Basso> Does mywiki.wooledge.org has an entry about using uppercase VARIABLE=foo mentioning it could conflict/shadow/override environment variables?
[17:08:54] <osse> !varcap
[17:08:55] <greybot> By convention, environment variables (PATH, EDITOR, SHELL, ...) and internal shell variables (BASH_VERSION, RANDOM, ...) are fully capitalized. All other variable names should be lowercase. Since variable names are case-sensitive, this convention avoids accidentally overriding environmental and internal variables. https://pubs.opengroup.org/onlinepubs/9699919799/basedefs/V1_chap08.html
[17:09:02] <osse> hmm, no link to wooledge there
[17:09:05] <Soliton> probably only on the bot.
[17:10:12] *** Quits: fdan (~fdan@2001:1900:2100:2807:640a::ffb) (Quit: Client closed)
[17:10:18] *** Quits: sinaowolabi (~SinaOwola@102.134.114.1) (Read error: No route to host)
[17:10:46] <geirha> probably worth a pitfall entry
[17:11:09] *** Joins: ramblebamble (ramblebamb@gateway/vpn/protonvpn/ramblebamble)
[17:11:28] <geirha> "Don't do this! -- PATH=$DIR/$FILE" something like that
[17:12:25] <Soliton> for a rationale the posix link should be pretty clear anyway.
[17:12:55] <Fernando-Basso> "Uppercase and lowercase letters shall retain their unique identities and shall not be folded together. The name space of environment variable names containing lowercase letters is reserved for applications. Applications can define any environment variables with names from this name space without modifying the behavior of the standard utilities."
[17:13:41] <Soliton> i rather meant: "It is unwise to conflict with certain variables that are frequently exported by widely used command interpreters and applications"
[17:13:47] <geirha> I wouldn't call POSIX' language clear, exactly
[17:13:56] <ramblebamble> geirha, just outta curiosity, why shouldn't I do that?
[17:14:12] <geirha> # PATH=/some/file ; ls
[17:14:13] <shbot> geirha: bash: ls: command not found
[17:14:55] <geirha> because the shell uses PATH to look up commands. In the above commands, it could no longer find /bin/ls
[17:15:05] <geirha> *the above example
[17:15:07] <ramblebamble> Ahhhh yean wasn't thinking clearly, PATH is the search-path got it
[17:15:17] <ramblebamble> was thinking there was something wrong with the construct $DIR/FILE
[17:15:17] *** Quits: tobybl (~tobybl@214.242.200.146.dyn.plus.net) (Remote host closed the connection)
[17:15:31] *** Joins: sarantos (~sarantos@2a02:587:3443:97d:ec28:d6cd:a0e4:8fe5)
[17:16:21] <osse> there can be, without you knowing. that's  the problem
[17:16:48] *** Joins: causa_sui (~causasui@c-68-60-125-136.hsd1.mi.comcast.net)
[17:18:02] *** Joins: revolve (~u0_a227@cpc100838-bagu15-2-0-cust672.1-3.cable.virginm.net)
[17:18:47] <suss> how does bsd-POSIX differ from linux-POSIX, viewed on openbsd wiki page.
[17:19:27] <ramblebamble> osse you mean by $DIR and $FILE having a prefix or suffice of '/' already in them yes, also I am weary that $DIR and $FILE might be reserved
[17:19:37] *** Quits: Masklin_Gurder (~joel@h-5-150-226-94.A230.priv.bahnhof.se) (Read error: Connection reset by peer)
[17:19:39] <Soliton> ask whoever told you about "bsd-POISX" and "linux-POSIX".
[17:19:43] *** Joins: sinaowolabi (~SinaOwola@102.134.114.1)
[17:20:08] <phy1729> suss: what? POSIX is a standard independent of any particular OS
[17:20:15] <osse> ramblebamble: it was only the reserved-thing I had in mind. There is no problem with any of them having '/'
[17:20:30] <suss> Soliton i dont know, just ask anyone who knew it well
[17:20:34] <NRK> wtf is bsd-posix
[17:20:57] <ramblebamble> possix for bsd?
[17:21:01] <seninha> bsd-posix
[17:21:03] * ramblebamble ducks and runs away laughing
[17:21:08] <suss> NRK i saw it on some of openbsd pages occasionally.
[17:21:13] *** Parts: [twisti] (~twisti@toadwater.com) ()
[17:21:30] <phy1729> not on the openbsd.org site
[17:21:46] <suss> i forgot where it come from
[17:22:06] <ramblebamble> osse yeah got it thank you, I think that ties in nicely with application variables in the environment having lower cases instead of upper cases a bit eariler in the channel
[17:23:10] <osse> ramblebamble: isn't that what we've been discussing all along?
[17:23:21] *** Quits: kj (~kj@kj.aerisnetwork.net) (Quit: My MacBook has gone to sleep. ZZZzzzâ€¦)
[17:23:23] <Soliton> that's not very common at all though. the env variable namespace is by design shared so programs will have to find a way to not use the same variable names.
[17:24:03] <ramblebamble> osse been late to the discussion, sorry for making a rocus
[17:24:39] *** Quits: sinaowolabi_ (~SinaOwola@102.134.114.1) (Ping timeout: 256 seconds)
[17:25:34] <dea> how do I disect a bash export into 2 lines (I have a long PS1 env)
[17:25:38] <osse> ramblebamble: np
[17:25:41] *** Quits: dsrt^ (~dsrt@50.233.120.162) (Remote host closed the connection)
[17:25:50] <geirha> PS1='....'
[17:25:53] <geirha> PS1+='....'
[17:26:05] <geirha> and don't export it
[17:26:17] <osse> geirha.mutable_smartness_counter()++;
[17:26:22] <phy1729> Why are you exporting PS1?
[17:26:22] *** Joins: john_johnk (~Thunderbi@232.58.140.77.rev.sfr.net)
[17:26:23] <dea> got it, why not export it?
[17:26:32] <Soliton> what for?
[17:26:36] <dea> I googled and saw everywhere
[17:26:36] <geirha> because it's unnecessary
[17:26:47] <phy1729> It's a shell variable not used by other programs
[17:27:04] <geirha> and it will only cause issues if you run another shell that reads PS1 and breaks on all the bash-specific stuff you put in it
[17:27:12] *** Quits: sinaowolabi (~SinaOwola@102.134.114.1) (Ping timeout: 256 seconds)
[17:27:26] <dea> interesting!
[17:27:32] <dea> tyvm
[17:28:09] <suss> geirha does it mean that its a local-shell variable read by current one?
[17:28:09] *** Quits: cvemys (~cvemys@user/cvemys) (Quit: Leaving)
[17:28:29] <geirha> It means that bash reads PS1 whether it is exported or not
[17:28:34] <Soliton> of course, what do you think produces the prompt?
[17:28:37] *** Quits: causa_sui (~causasui@c-68-60-125-136.hsd1.mi.comcast.net) (Ping timeout: 256 seconds)
[17:28:59] <geirha> antother approach is to split it into logical parts in an array, and then join the array into PS1 at the end
[17:29:03] *** Joins: Masklin_Gurder (~joel@h-5-150-226-94.A230.priv.bahnhof.se)
[17:29:43] *** Joins: iliv (~iliv@93-77-147-152.lvv.volia.net)
[17:30:01] <Soliton> you set PS1 in your current shell so that your current shell shows you the prompt you want.
[17:30:23] <geirha> [[ $SSH_CONNECTION ]] && prompt+=( '\u@\h:' ) ; prompt+=( '\w\$ ') ; printf -v PS1 %s "${prompt[@]}"
[17:33:00] *** Joins: mihaiadrian (~Thunderbi@82.76.223.244)
[17:35:24] *** Quits: enoq (~enoq@2a05:1141:1f5:5600:b9c9:721a:599:bfe7) (Ping timeout: 240 seconds)
[17:37:08] *** Quits: JohnML (~JohnML@ip-037-201-129-030.um10.pools.vodafone-ip.de) (Remote host closed the connection)
[17:39:57] *** Joins: Mo (~Mo@dynamic-077-003-078-031.77.3.pool.telefonica.de)
[17:41:06] *** Joins: Quack (~Quack@185.21.216.169)
[17:42:47] *** Joins: nyex (~Thunderbi@177.84.107.26)
[17:45:55] *** Joins: fuzzybear3965 (~fuzzybear@194.44.104.1)
[17:47:13] <fuzzybear3965> I'm trying to determine how much disk space is needed to build a package, but the builder does clean-up at the end that obscures how much temporary space was deeded. Does anyone have a nice one-liner that can poll a directory's size (like du -sh) and track its maximum size?
[17:47:22] *** Joins: sinaowolabi_ (~SinaOwola@160.152.109.220)
[17:47:40] <fuzzybear3965> s/was deeded/was needed (I'm a little congested - getting over a cold)
[17:47:40] *** Quits: dea (~dea@5.121.210.143) (Remote host closed the connection)
[17:50:30] <Soliton> !du
[17:50:30] <greybot> du reports the count of blocks (optionally scaled to K, M, G or T) required to store all the files that are (or are within directories) given as paths. Each inode is counted only once, which affects hard links, and "du -s a/b a" will first report the space for a/b, and then the space for a excluding a/b.
[17:50:44] <Soliton> polling does not sound particularly appropriate.
[17:50:50] <suss> !df
[17:50:50] <greybot> http://mywiki.wooledge.org/BashFAQ/094 (parsing df output)
[17:51:24] <mute> i'd prefer removing the cleanup from build for best results. is it not something you can edit?
[17:51:32] <fuzzybear3965> Soliton How would you accomplish my goal of determining the maximum amount of temporary build space that was needed for a command to run?
[17:52:05] <fuzzybear3965> mute Not really. It's a `nix build` command. Like `apt-get` if `apt-get` had a `make` step.
[17:52:41] <phy1729> Ask the nix people then
[17:53:10] <phy1729> Looks like they're in #nixos
[17:53:52] <fuzzybear3965> phy1729 It's not a `nix` question. It's a "tracking maximum size of some directory" question.
[17:54:02] *** Joins: drd (~drd@93-42-66-75.ip85.fastwebnet.it)
[17:54:17] <phy1729> Getting nix to not delete things is and anything else is racey
[17:54:26] <fuzzybear3965> I'm not trying to control `nix`.
[17:54:28] <selckin> there isn't a standard way to that
[17:54:32] <fuzzybear3965> I'm trying to track the maximum size of some directory over time.
[17:54:36] <selckin> only hacky things
[17:54:43] <Soliton> there are no standard tools for this so it's most definitely a question for your os.
[17:54:48] <fuzzybear3965> selckin Maybe there's some chain of commands that I can use.
[17:54:51] <phy1729> Maybe there's a FUSE thing that does it, maybe, but also not bash
[17:54:55] <Soliton> or maybe your fs.
[17:55:10] <selckin> fuzzybear3965: none that perform well or will be accurate
[17:55:12] <fuzzybear3965> No? No clever use of `watch` and some bash math?
[17:55:29] *** Joins: lsrtl (~lsrtl@user/lsrtl)
[17:55:31] <Soliton> s/clever/hacky/
[17:55:33] <phy1729> watch will be racey, what if a big file is created and deleted in the meantime?
[17:55:34] <fuzzybear3965> selckin exactness isn't needed. Approximations are fine.
[17:55:46] <Soliton> yes, polling would be a hacky way to do it.
[17:55:48] <fuzzybear3965> phy1729 I'm not too worried about that case.
[17:56:08] <fuzzybear3965> Right now I'm using `ncdu /tmp` and pressing `r` every 15m and seeing it steadily grow.
[17:56:27] <fuzzybear3965> I'm interested in doing the same thing every 30s, but without me needing to press and look at anything.
[17:56:38] <fuzzybear3965> Just, have it recorded in a shell variable for when I SSH in later.
[17:56:52] *** Joins: roadie (~user@2a02:8108:5a40:1d87:c892:1c2c:9f16:7346)
[17:56:57] <phy1729> sure you can while sleep 1; do size=...; [[ size > max ]] && max=size; done   but you might as well just assume the answer is 42GiB
[17:57:17] <Soliton> a variable that will exist in some interactive shell later???
[17:57:35] <Soliton> that's some crazy requirement.
[17:57:52] <fuzzybear3965> Soliton tmux.
[17:58:02] <fuzzybear3965> phy1729 Honestly, that looks good enough.
[17:58:05] <fuzzybear3965> Thanks.
[17:58:53] *** Quits: ramblebamble (ramblebamb@gateway/vpn/protonvpn/ramblebamble) (Quit: WeeChat 3.4)
[17:58:56] *** Joins: cuppajoe (~joe@ip70-171-93-122.no.no.cox.net)
[18:04:12] *** Quits: john_johnk (~Thunderbi@232.58.140.77.rev.sfr.net) (Ping timeout: 240 seconds)
[18:04:58] <fuzzybear3965> Works great: IZE=0; while sleep 5; do CUR=$([ -d /tmp/nix-build-linux-5.16.10.drv-0/ ] && du -s /tmp 2>/dev/null | awk '{print $1}' ); [[ $CUR > $SIZE ]] && SIZE=$CUR; echo $SIZE; done
[18:05:06] <fuzzybear3965> SIZE=0; while sleep 5; do CUR=$([ -d /tmp/nix-build-linux-5.16.10.drv-0/ ] && du -s /tmp 2>/dev/null | awk '{print $1}' ); [[ $CUR > $SIZE ]] && SIZE=$CUR; echo $SIZE; done
[18:05:22] <phy1729> !varcaps
[18:05:23] <greybot> By convention, environment variables (PATH, EDITOR, SHELL, ...) and internal shell variables (BASH_VERSION, RANDOM, ...) are fully capitalized. All other variable names should be lowercase. Since variable names are case-sensitive, this convention avoids accidentally overriding environmental and internal variables. https://pubs.opengroup.org/onlinepubs/9699919799/basedefs/V1_chap08.html
[18:05:26] <geirha> looks broken
[18:05:39] <fuzzybear3965> geirha:( Â . Why?
[18:05:46] <fuzzybear3965> phy1729 good tip. Will edit.
[18:06:02] <Soliton> [[ > is string comparison.
[18:06:20] <fuzzybear3965> Oh, I stole it from phy1729 . Should I use (( )) ?
[18:06:23] <phy1729> that was my bad should have use ((
[18:06:28] <geirha> It will consider 2M greater than 100G
[18:06:28] <fuzzybear3965> No worries!
[18:06:42] <fuzzybear3965> I had to use du -s for that reason (no -h)
[18:07:05] <selckin> sort -h (human) understand 2M & 100G values
[18:07:28] *** Joins: JohnML (~JohnML@ip-037-201-129-030.um10.pools.vodafone-ip.de)
[18:07:42] <fuzzybear3965> I can sort -h $cur $size ?
[18:07:49] <selckin> while true; du -csh /tmp >> sizes; sort -h sizes | head; done
[18:07:59] <fuzzybear3965> Mmmmm
[18:08:00] <fuzzybear3965> -c ?
[18:08:03] <makara1> does anyone use the Amazon Linux 2 AMI and have problems with pressing home key, arrow keys? After that I can't backspace to the beginning of the line
[18:08:09] <selckin> dunno thats my finger memory options
[18:08:20] <fuzzybear3965> "produce a grand total"....
[18:08:49] *** Joins: luckiswithme (~luckiswit@149.167.138.139)
[18:09:01] <phy1729> makara1: best guess is there's non-printables in your prompt without \[ \]
[18:09:43] <makara1> PS1='\u@ \033[0;33m\w\033[0m $ '
[18:09:57] *** Quits: iomari891 (~iomari891@105.112.138.38) (Ping timeout: 240 seconds)
[18:10:00] *** Quits: cuppajoe (~joe@ip70-171-93-122.no.no.cox.net) (Quit: WeeChat 3.4)
[18:10:12] <Soliton> PS1='\u@ \[\033[0;33m\]\w\[\033[0m\] $ '
[18:10:25] <phy1729> !faq prompt
[18:10:26] <greybot> https://mywiki.wooledge.org/BashFAQ/053 -- I have a fancy prompt with colors, and now bash doesn't seem to know how wide my terminal is.  Lines wrap around incorrectly.
[18:11:55] *** Quits: volga629 (~volga629@72.139.93.26) (Quit: My MacBook has gone to sleep. ZZZzzzâ€¦)
[18:12:11] <makara1> thx
[18:12:49] *** Joins: kj (~kj@beta.aerisnetwork.net)
[18:14:23] *** Joins: causa_sui (~causasui@c-68-60-125-136.hsd1.mi.comcast.net)
[18:14:31] *** Quits: OnkelTem (~OnkelTem@user/onkeltem) (Ping timeout: 256 seconds)
[18:15:16] *** Quits: hesse (~TheHerman@gateway/tor-sasl/thehermann) (Quit: Leaving)
[18:16:58] *** Joins: OnkelTem (~OnkelTem@user/onkeltem)
[18:18:56] *** Joins: VoidSync (~sync@user/voidsync)
[18:19:03] *** Quits: causa_sui (~causasui@c-68-60-125-136.hsd1.mi.comcast.net) (Ping timeout: 256 seconds)
[18:21:14] *** Joins: iomari891 (~iomari891@105.112.138.38)
[18:22:13] *** Quits: Gooberpatrol66 (~Gooberpat@user/gooberpatrol66) (Quit: Leaving)
[18:22:32] *** Joins: Gooberpatrol66 (~Gooberpat@user/gooberpatrol66)
[18:23:15] *** Quits: anaveragehuman (~anaverage@user/anaveragehuman) (Ping timeout: 240 seconds)
[18:23:48] *** Quits: taupiqueur (~taupiqueu@lmontsouris-659-1-2-186.w193-248.abo.wanadoo.fr) (Ping timeout: 240 seconds)
[18:24:30] *** Quits: VoidSync (~sync@user/voidsync) (Quit: VoidSync)
[18:24:56] *** Joins: N4buc0- (~N4buc0@2804:7f4:348b:7576:82c8:2f17:d2c6:9d7a)
[18:27:48] *** Quits: idontneedanick (~idontneed@h-85-24-184-105.A189.priv.bahnhof.se) (Ping timeout: 240 seconds)
[18:29:21] *** Quits: unop (~unop@195.91.110.250) (Remote host closed the connection)
[18:29:36] *** Joins: idontneedanick (~idontneed@h-85-24-184-105.A189.priv.bahnhof.se)
[18:29:57] *** Joins: unop (~unop@195.91.110.250)
[18:30:03] *** Joins: taupiqueur (~taupiqueu@lmontsouris-659-1-2-186.w193-248.abo.wanadoo.fr)
[18:30:57] *** Quits: flower_ (~debian@46.244.61.4) (Ping timeout: 256 seconds)
[18:32:12] *** Quits: jp11 (~jp@87-198-216-242.ptr.magnet.ie) (Ping timeout: 240 seconds)
[18:34:01] *** Joins: TheHermann (~TheHerman@gateway/tor-sasl/thehermann)
[18:36:22] *** Joins: volga629 (~volga629@72.139.93.26)
[18:36:29] <fuzzybear3965> Finished: 20531036 bytes :)
[18:37:04] *** Joins: jp11 (~jp@87-198-216-242.ptr.magnet.ie)
[18:37:52] <fuzzybear3965> Er 20531036*1024 bytes, I guess ....
[18:37:59] *** Joins: ejjdhfjsu (~ejjdhfjsu@cmcust2a-84.174.nulinkdigital.com)
[18:39:05] *** Joins: causa_sui (~causasui@c-68-60-125-136.hsd1.mi.comcast.net)
[18:39:51] *** Quits: tsujp (~tsujp@sourcehut/user/tsujp) (Quit: Client closed)
[18:43:17] *** Quits: causa_sui (~causasui@c-68-60-125-136.hsd1.mi.comcast.net) (Ping timeout: 240 seconds)
[18:43:22] *** Quits: OnkelTem (~OnkelTem@user/onkeltem) (Ping timeout: 272 seconds)
[18:44:03] *** Joins: sinaowolabi (~SinaOwola@160.152.109.220)
[18:44:27] *** Quits: lavaball (felix@31.204.155.215) (Remote host closed the connection)
[18:45:24] *** Joins: OnkelTem (~OnkelTem@user/onkeltem)
[18:46:15] *** Joins: lavaball (felix@31.204.155.215)
[18:50:36] *** Joins: causa_sui (~causasui@c-68-60-125-136.hsd1.mi.comcast.net)
[18:54:49] *** Quits: chiselfuse (~chiselfus@user/chiselfuse) (Write error: Connection reset by peer)
[18:54:49] *** Quits: milkt (~debian@gateway/tor-sasl/milkt) (Read error: Connection reset by peer)
[18:54:49] *** Quits: gxt (~gxt@gateway/tor-sasl/gxt) (Remote host closed the connection)
[18:54:49] *** Quits: crabbedhaloablut (~crabbedha@user/crabbedhaloablut) (Write error: Connection reset by peer)
[18:55:03] *** Joins: chiselfuse (~chiselfus@user/chiselfuse)
[18:55:08] *** Joins: gxt (~gxt@gateway/tor-sasl/gxt)
[18:55:11] *** Quits: tangyQED (tangy@user/tangy) (Read error: Connection reset by peer)
[18:55:11] *** Joins: crabbedhaloablut (~crabbedha@user/crabbedhaloablut)
[18:55:14] *** Joins: milkt (~debian@gateway/tor-sasl/milkt)
[18:55:48] *** Joins: tangyQED (tangy@user/tangy)
[18:56:11] *** Quits: Atque (~Atque@user/atque) (Quit: ...)
[18:56:31] *** Quits: ryzenda (~ryzenda@pool-74-109-246-70.pitbpa.fios.verizon.net) (Read error: Connection reset by peer)
[18:56:40] *** Quits: kurahaupo_ (~kurahaupo@pa49-182-20-32.pa.qld.optusnet.com.au) (Ping timeout: 272 seconds)
[18:57:26] *** Joins: ryzenda (~ryzenda@pool-74-109-246-70.pitbpa.fios.verizon.net)
[18:58:48] *** Joins: junebug (~junebug@2600:1700:3db0:2540:240a:eb7a:6461:3400)
[18:59:37] *** Quits: causa_sui (~causasui@c-68-60-125-136.hsd1.mi.comcast.net) (Ping timeout: 256 seconds)
[18:59:43] *** Joins: nehsou^ (~nehsou@50.233.120.162)
[19:04:10] *** Joins: Kyuzo68 (~Kyuzo@host-79-30-236-159.retail.telecomitalia.it)
[19:04:17] *** Joins: causa_sui (~causasui@c-68-60-125-136.hsd1.mi.comcast.net)
[19:04:47] *** Quits: Kyuzo68 (~Kyuzo@host-79-30-236-159.retail.telecomitalia.it) (Client Quit)
[19:05:15] *** Joins: enoq (~enoq@2a05:1141:1f5:5600:b9c9:721a:599:bfe7)
[19:06:21] *** Joins: gabriele (~gabriele@user/gabriele)
[19:07:57] *** Quits: dfg (~dfg@user/dfg) (Quit: I hate quit messages.)
[19:08:36] *** Quits: causa_sui (~causasui@c-68-60-125-136.hsd1.mi.comcast.net) (Ping timeout: 240 seconds)
[19:13:44] *** Quits: revolve (~u0_a227@cpc100838-bagu15-2-0-cust672.1-3.cable.virginm.net) (Ping timeout: 256 seconds)
[19:13:47] *** Quits: sinaowolabi_ (~SinaOwola@160.152.109.220) (Ping timeout: 256 seconds)
[19:14:45] *** Quits: fuzzybear3965 (~fuzzybear@194.44.104.1) (Quit: Client closed)
[19:14:57] *** Joins: yagamilito (~yagamilit@2601:642:4600:34b0:4898:3909:62b2:25c8)
[19:15:03] *** Joins: greycat (~greg@209.142.155.49)
[19:15:23] *** Joins: askall (~askall@197.210.84.179)
[19:18:39] *** Joins: sinaowolabi_ (~SinaOwola@102.134.114.1)
[19:19:41] *** Quits: seninha (~chatzilla@user/seninha) (Ping timeout: 256 seconds)
[19:19:50] *** Quits: roadie (~user@2a02:8108:5a40:1d87:c892:1c2c:9f16:7346) (Ping timeout: 252 seconds)
[19:20:06] *** Joins: causa_sui (~causasui@c-68-60-125-136.hsd1.mi.comcast.net)
[19:20:14] *** Quits: XV8 (~XV8@2601:5cb:c001:50::5524) (Quit: My MacBook has gone to sleep. ZZZzzzâ€¦)
[19:21:08] *** Quits: sarantos (~sarantos@2a02:587:3443:97d:ec28:d6cd:a0e4:8fe5) (Quit: Client closed)
[19:23:05] *** Quits: yustin (~yustin@user/yustin) (Ping timeout: 256 seconds)
[19:24:24] *** Joins: anaveragehuman (~anaverage@user/anaveragehuman)
[19:24:47] *** Quits: causa_sui (~causasui@c-68-60-125-136.hsd1.mi.comcast.net) (Ping timeout: 256 seconds)
[19:25:06] *** Joins: XV8 (~XV8@2601:5cb:c001:50::5524)
[19:25:28] *** Quits: lavaball (felix@31.204.155.215) (Remote host closed the connection)
[19:25:37] *** Quits: luckiswithme (~luckiswit@149.167.138.139) (Remote host closed the connection)
[19:25:48] *** Quits: askall (~askall@197.210.84.179) (Ping timeout: 240 seconds)
[19:26:06] *** Quits: x10an14 (~x10an14@84.214.109.48) (Quit: Ping timeout (120 seconds))
[19:26:37] *** Joins: causa_sui (~causasui@c-68-60-125-136.hsd1.mi.comcast.net)
[19:27:04] *** Joins: lavaball (felix@31.204.155.215)
[19:27:46] *** Joins: askall (~askall@197.210.227.15)
[19:28:02] *** Joins: x10an14 (~x10an14@84.214.109.48)
[19:28:07] *** Joins: luckiswithme (~luckiswit@149.167.138.139)
[19:29:31] *** Quits: enoq (~enoq@2a05:1141:1f5:5600:b9c9:721a:599:bfe7) (Quit: enoq)
[19:30:47] *** Quits: tangyQED (tangy@user/tangy) (Remote host closed the connection)
[19:30:52] *** Joins: revolve (~u0_a227@82-132-238-198.dab.02.net)
[19:31:17] *** Joins: richardm75 (~richardm7@2600:8801:c507:b200:50e:9798:7ff2:b8d4)
[19:31:55] *** Quits: unop (~unop@195.91.110.250) (Remote host closed the connection)
[19:32:13] *** Joins: unop (~unop@195.91.110.250)
[19:32:22] <askall> "
[19:35:16] *** Quits: causa_sui (~causasui@c-68-60-125-136.hsd1.mi.comcast.net) (Ping timeout: 256 seconds)
[19:35:52] *** Quits: skapata (~Skapata@user/skapata) (Remote host closed the connection)
[19:36:39] *** Quits: iliv (~iliv@93-77-147-152.lvv.volia.net) (Changing host)
[19:36:39] *** Joins: iliv (~iliv@user/iliv)
[19:39:27] *** Joins: knstn (~knstn@ppp-94-66-57-125.home.otenet.gr)
[19:39:48] *** Quits: Mo (~Mo@dynamic-077-003-078-031.77.3.pool.telefonica.de) (Ping timeout: 240 seconds)
[19:41:06] *** Joins: souldessin (~souldessi@mail.thepanthersbranch.com)
[19:41:09] *** Joins: et_ (~et@user/et)
[19:41:09] *** Quits: luckiswithme (~luckiswit@149.167.138.139) (Remote host closed the connection)
[19:41:11] *** Quits: ExeciN (~ExeciN@user/nicexe) (Remote host closed the connection)
[19:41:48] *** Quits: et (~et@user/et) (Ping timeout: 240 seconds)
[19:41:48] *** et_ is now known as et
[19:41:50] *** Quits: hwrd (aa272caead@2604:bf00:561:2000::137) (Remote host closed the connection)
[19:41:50] *** Quits: akelly (24aca7a63b@2604:bf00:561:2000::152) (Remote host closed the connection)
[19:41:50] *** Quits: sebboh (63d5b59a6a@fsf/member/sebboh) (Remote host closed the connection)
[19:41:50] *** Quits: Ankhers (e99e97ef8e@2604:bf00:561:2000::2a2) (Remote host closed the connection)
[19:41:50] *** Quits: b0o (0e4a0bf4c9@2604:bf00:561:2000::1bf) (Remote host closed the connection)
[19:41:55] *** Quits: ztrawhcse (3d1f427b6a@archlinux/bugwrangler/eschwartz) (Remote host closed the connection)
[19:42:38] *** Joins: akelly (24aca7a63b@2604:bf00:561:2000::152)
[19:42:44] *** Joins: b0o (0e4a0bf4c9@2604:bf00:561:2000::1bf)
[19:42:50] *** Joins: sebboh (63d5b59a6a@fsf/member/sebboh)
[19:42:52] *** Joins: hwrd (aa272caead@2604:bf00:561:2000::137)
[19:42:54] *** Joins: Ankhers (e99e97ef8e@2604:bf00:561:2000::2a2)
[19:42:54] *** Joins: ztrawhcse (3d1f427b6a@archlinux/bugwrangler/eschwartz)
[19:43:34] *** Joins: roadie (~user@2a02:8108:5a40:1d87:c892:1c2c:9f16:7346)
[19:44:01] *** Joins: rgrinberg (~textual@2806:101e:7:70b6:d0ec:d248:3a49:15e0)
[19:45:28] *** Quits: askall (~askall@197.210.227.15) (Ping timeout: 256 seconds)
[19:47:00] *** Quits: illuminated (~quassel@107-133-152-77.lightspeed.okcbok.sbcglobal.net) (Ping timeout: 240 seconds)
[19:51:46] *** Quits: unop (~unop@195.91.110.250) (Remote host closed the connection)
[19:52:22] *** Joins: unop (~unop@195.91.110.250)
[20:00:12] *** Joins: seninha (~chatzilla@user/seninha)
[20:00:31] *** Joins: magla (~gelignite@d5361f17.access.ecotel.net)
[20:02:52] *** Joins: bluedust_ (~bluedust@static-198-54-133-121.cust.tzulo.com)
[20:03:19] *** Quits: mw_ (~mw@catv-80-98-128-161.catv.fixed.vodafone.hu) (Ping timeout: 256 seconds)
[20:03:20] *** Joins: dreamon (~dreamon@ppp-88-217-74-38.dynamic.mnet-online.de)
[20:03:54] *** Joins: zebrag (~chris@user/zebrag)
[20:06:24] *** Quits: bluedust (~bluedust@103.165.167.221) (Ping timeout: 250 seconds)
[20:08:52] *** Joins: Mo (~Mo@dynamic-077-003-078-031.77.3.pool.telefonica.de)
[20:09:11] *** Joins: LuksNuke (~LuksNuke@gateway/tor-sasl/luksnuke)
[20:09:49] *** Joins: ChmEarl (~chmearl@user/chmearl)
[20:10:59] *** Joins: FluffyMask (~masque@user/fluffymask)
[20:11:53] *** Joins: zeden (~zeden@user/zeden)
[20:12:59] *** Joins: causa_sui (~causasui@c-68-60-125-136.hsd1.mi.comcast.net)
[20:14:22] *** Joins: bluedust (~bluedust@103.165.167.221)
[20:17:22] *** Joins: flower_ (~debian@46.244.61.4)
[20:17:30] *** Quits: causa_sui (~causasui@c-68-60-125-136.hsd1.mi.comcast.net) (Ping timeout: 260 seconds)
[20:17:30] *** Quits: bluedust_ (~bluedust@static-198-54-133-121.cust.tzulo.com) (Ping timeout: 260 seconds)
[20:20:55] *** Joins: rawktucc (~rawktucc@user/rawktucc)
[20:21:17] <rawktucc> Hi... Last night I ran this command: sudo shred -zvu .hidden/.*/*
[20:21:33] *** Quits: x10an14 (~x10an14@84.214.109.48) (Quit: Ping timeout (120 seconds))
[20:21:35] <rawktucc> The intention was to shred and delete files within a hidden folder, and within further hidden folders inside that hidden folder
[20:21:50] *** Joins: x10an14 (~x10an14@84.214.109.48)
[20:22:00] *** Quits: vysn (~vysn@user/vysn) (Ping timeout: 250 seconds)
[20:22:24] <rawktucc> while that did happen, shred afterwards came back to the current working directory and started overwriting files there. While I understand this may be a shred specific case, I justwanted to ask if the globs used were at fault, and more specifically why and how they caused shred to go to current working directory.
[20:22:33] <rawktucc> thanks.
[20:23:06] <Soliton> what makes you think that they did?
[20:23:13] *** Joins: The_Loko (~The_Loko@86.127.255.193)
[20:23:20] <phy1729> # mkdir foo; touch foo/bar; ls foo/.*/*
[20:23:23] <shbot> phy1729: foo/./bar
[20:23:23] <shbot> phy1729:
[20:23:23] <shbot> phy1729: etc... ( http://ix.io/3QiK )
[20:23:29] <Soliton> note that the globs are expanded by the current shell. sudo is not involved there.
[20:23:58] <phy1729> . and .. suck
[20:24:16] <rawktucc> i see
[20:24:21] <rawktucc> so using . after .hidden is what caused it
[20:24:37] <rawktucc> or did i misunderstand here
[20:24:44] <phy1729> .* is what caused it
[20:24:50] <Soliton> .* expands to . and .. as well.
[20:25:13] <rawktucc> darn. facepalm for me. thanks... i had a feeling but it was late and I didn't think it through
[20:25:16] <rawktucc> this is why backups are important
[20:25:43] <Soliton> why did you involve sudo anyway?
[20:26:22] <rawktucc> wasn't thinking properly and didn't consider changing permissions BEFORE running shred
[20:26:24] *** Joins: mra90 (~mra@192.55.55.58)
[20:26:26] <rawktucc> so i just sudo'd it foolishly
[20:27:13] *** Quits: N4buc0- (~N4buc0@2804:7f4:348b:7576:82c8:2f17:d2c6:9d7a) (Remote host closed the connection)
[20:27:26] *** Joins: N4buc0- (~N4buc0@2804:7f4:348b:7576:82c8:2f17:d2c6:9d7a)
[20:28:11] *** Quits: ztrawhcse (3d1f427b6a@archlinux/bugwrangler/eschwartz) (Remote host closed the connection)
[20:28:11] *** Quits: sebboh (63d5b59a6a@fsf/member/sebboh) (Remote host closed the connection)
[20:28:11] *** Quits: akelly (24aca7a63b@2604:bf00:561:2000::152) (Remote host closed the connection)
[20:28:12] *** Quits: hwrd (aa272caead@2604:bf00:561:2000::137) (Remote host closed the connection)
[20:28:12] *** Quits: b0o (0e4a0bf4c9@2604:bf00:561:2000::1bf) (Remote host closed the connection)
[20:28:12] *** Quits: Ankhers (e99e97ef8e@2604:bf00:561:2000::2a2) (Remote host closed the connection)
[20:29:24] *** Joins: taupiqueur_ (~taupiqueu@lmontsouris-659-1-2-186.w193-248.abo.wanadoo.fr)
[20:31:02] *** Quits: taupiqueur (~taupiqueu@lmontsouris-659-1-2-186.w193-248.abo.wanadoo.fr) (Ping timeout: 272 seconds)
[20:32:51] *** Joins: taupiqueur (~taupiqueu@102.197.204.77.rev.sfr.net)
[20:33:42] *** Quits: taupiqueur_ (~taupiqueu@lmontsouris-659-1-2-186.w193-248.abo.wanadoo.fr) (Ping timeout: 250 seconds)
[20:34:24] *** Joins: Ankhers (e99e97ef8e@2604:bf00:561:2000::2a2)
[20:34:31] *** Joins: akelly (24aca7a63b@2604:bf00:561:2000::152)
[20:34:31] *** Joins: sebboh (63d5b59a6a@fsf/member/sebboh)
[20:34:35] *** Joins: hwrd (aa272caead@2604:bf00:561:2000::137)
[20:34:37] *** Joins: ztrawhcse (3d1f427b6a@archlinux/bugwrangler/eschwartz)
[20:34:37] *** Joins: b0o (0e4a0bf4c9@2604:bf00:561:2000::1bf)
[20:34:49] *** Joins: causa_sui (~causasui@c-68-60-125-136.hsd1.mi.comcast.net)
[20:37:44] *** Quits: iam8up (~jluthman@bmu.imaginenetworksllc.com) (Quit: Leaving)
[20:39:06] *** Quits: m4n (~emacs@ip5f5bd1ff.dynamic.kabel-deutschland.de) (Remote host closed the connection)
[20:39:15] *** Joins: sobkas (~sobkas@95.175.17.217)
[20:40:16] *** Joins: ApostleInTriumph (~ApostleIn@nat-clients.lix.polytechnique.fr)
[20:41:30] *** Quits: taupiqueur (~taupiqueu@102.197.204.77.rev.sfr.net) (Ping timeout: 250 seconds)
[20:41:49] *** Quits: ryzenda (~ryzenda@pool-74-109-246-70.pitbpa.fios.verizon.net) (Read error: Connection reset by peer)
[20:42:55] *** Joins: ryzenda (~ryzenda@pool-74-109-246-70.pitbpa.fios.verizon.net)
[20:44:02] *** Quits: OnkelTem (~OnkelTem@user/onkeltem) (Quit: WeeChat 2.8)
[20:44:58] *** Quits: causa_sui (~causasui@c-68-60-125-136.hsd1.mi.comcast.net) (Ping timeout: 272 seconds)
[20:46:17] *** Quits: MetaNova (zero-one@znc/supporter/metanova) (Ping timeout: 240 seconds)
[20:46:19] *** Joins: zer0bitz_ (~zer0bitz@2001:2003:f74d:b800:8a6:a8d3:62c4:7875)
[20:46:47] *** Quits: ryzenda (~ryzenda@pool-74-109-246-70.pitbpa.fios.verizon.net) (Remote host closed the connection)
[20:46:51] *** Joins: causa_sui (~causasui@c-68-60-125-136.hsd1.mi.comcast.net)
[20:47:17] *** Quits: dreamon (~dreamon@ppp-88-217-74-38.dynamic.mnet-online.de) (Ping timeout: 240 seconds)
[20:48:58] *** Quits: domicron (~domicron@gateway/tor-sasl/domicron) (Remote host closed the connection)
[20:49:31] *** Joins: domicron (~domicron@gateway/tor-sasl/domicron)
[20:50:41] *** Quits: zer0bitz (~zer0bitz@2001:2003:f74d:b800:3027:99e6:c0d6:7e32) (Ping timeout: 256 seconds)
[20:51:24] *** Joins: ryzenda (~ryzenda@pool-74-109-246-70.pitbpa.fios.verizon.net)
[20:51:25] *** Joins: cthulchu (~Cthulchu@69-172-160-196.cable.teksavvy.com)
[20:53:39] *** Joins: MetaNova (~zero-one@znc/supporter/metanova)
[20:55:06] *** Quits: causa_sui (~causasui@c-68-60-125-136.hsd1.mi.comcast.net) (Ping timeout: 272 seconds)
[20:56:20] *** Joins: edge (~edge@111.92.81.133)
[20:59:00] *** Quits: gabriele (~gabriele@user/gabriele) (Quit: Leaving)
[20:59:58] *** Quits: edge (~edge@111.92.81.133) (Client Quit)
[21:04:22] *** Joins: kill (~killown@user/killown)
[21:05:18] *** Joins: spacenautx (~spacenaut@111.92.81.133)
[21:07:33] *** Quits: spacenautx (~spacenaut@111.92.81.133) (Changing host)
[21:07:33] *** Joins: spacenautx (~spacenaut@user/spacenautx)
[21:07:52] *** Quits: lavaball (felix@31.204.155.215) (Remote host closed the connection)
[21:08:09] *** Quits: spacenautx (~spacenaut@user/spacenautx) (Client Quit)
[21:08:11] *** Quits: shad (~shad@user/shad) (Ping timeout: 252 seconds)
[21:08:27] *** Joins: edge (~spacenaut@111.92.81.133)
[21:08:42] *** Joins: mw_ (~mw@catv-80-98-128-161.catv.fixed.vodafone.hu)
[21:10:20] *** Joins: causa_sui (~causasui@c-68-60-125-136.hsd1.mi.comcast.net)
[21:10:38] *** Quits: edge (~spacenaut@111.92.81.133) (Client Quit)
[21:11:13] *** Joins: edge (~spacenaut@111.92.81.133)
[21:11:31] *** Quits: edge (~spacenaut@111.92.81.133) (Client Quit)
[21:12:53] *** Joins: m0viefreak (~asdf@user/m0viefreak)
[21:14:36] *** Quits: causa_sui (~causasui@c-68-60-125-136.hsd1.mi.comcast.net) (Ping timeout: 240 seconds)
[21:16:16] *** Joins: tobybl (~tobybl@214.242.200.146.dyn.plus.net)
[21:16:37] *** Joins: causa_sui (~causasui@c-68-60-125-136.hsd1.mi.comcast.net)
[21:18:14] *** Joins: lavaball (felix@31.204.155.215)
[21:18:49] *** Joins: grettke (~grettke@cpe-65-29-228-30.wi.res.rr.com)
[21:21:00] *** Quits: causa_sui (~causasui@c-68-60-125-136.hsd1.mi.comcast.net) (Ping timeout: 240 seconds)
[21:21:48] *** Joins: john_johnk (~Thunderbi@232.58.140.77.rev.sfr.net)
[21:23:24] *** Quits: revolve (~u0_a227@82-132-238-198.dab.02.net) (Ping timeout: 240 seconds)
[21:24:45] *** Joins: Kyuzo68 (~Kyuzo@host-79-30-236-159.retail.telecomitalia.it)
[21:24:56] *** Joins: revolve (~u0_a227@cpc100838-bagu15-2-0-cust672.1-3.cable.virginm.net)
[21:25:16] *** Quits: N4buc0- (~N4buc0@2804:7f4:348b:7576:82c8:2f17:d2c6:9d7a) (Remote host closed the connection)
[21:25:24] *** Joins: N4buc0- (~N4buc0@189.26.49.16.dynamic.adsl.gvt.net.br)
[21:26:29] *** Joins: evanextreme (~evan@2604:4080:1000:8150:1cc2:43f9:3edb:f1c0)
[21:27:57] *** Joins: causa_sui (~causasui@c-68-60-125-136.hsd1.mi.comcast.net)
[21:28:20] *** Joins: shad (~shad@user/shad)
[21:28:35] *** Quits: chiselfuse (~chiselfus@user/chiselfuse) (Ping timeout: 240 seconds)
[21:29:29] *** Joins: chiselfuse (~chiselfus@user/chiselfuse)
[21:30:07] *** Joins: anddam (~anddam@user/anddam)
[21:30:13] *** Quits: XV8 (~XV8@2601:5cb:c001:50::5524) (Quit: My MacBook has gone to sleep. ZZZzzzâ€¦)
[21:30:27] *** Joins: crashrep (~crashrep@user/crashrep)
[21:30:54] *** Quits: ApostleInTriumph (~ApostleIn@nat-clients.lix.polytechnique.fr) (Quit: Client closed)
[21:31:29] *** Quits: chemsmith (~chemsmith@user/chemsmith) (Ping timeout: 256 seconds)
[21:31:41] *** Joins: XV8 (~XV8@2601:5cb:c001:50::5524)
[21:32:12] *** Quits: causa_sui (~causasui@c-68-60-125-136.hsd1.mi.comcast.net) (Ping timeout: 240 seconds)
[21:32:50] *** Joins: chemsmith (~chemsmith@user/chemsmith)
[21:35:27] *** Joins: causa_sui (~causasui@c-68-60-125-136.hsd1.mi.comcast.net)
[21:37:46] *** Quits: tobybl (~tobybl@214.242.200.146.dyn.plus.net) (Remote host closed the connection)
[21:39:26] *** Joins: Betal (~Betal@user/betal)
[21:41:04] *** Quits: causa_sui (~causasui@c-68-60-125-136.hsd1.mi.comcast.net) (Ping timeout: 256 seconds)
[21:42:38] *** Quits: malina (~malina@user/malina) (Remote host closed the connection)
[21:46:09] *** Quits: Kyuzo68 (~Kyuzo@host-79-30-236-159.retail.telecomitalia.it) (Quit: Konversation terminated!)
[21:49:34] *** Quits: yac (~user@user/yac) (Ping timeout: 272 seconds)
[21:50:20] *** Joins: yac (~user@user/yac)
[21:53:00] *** Quits: ryzenda (~ryzenda@pool-74-109-246-70.pitbpa.fios.verizon.net) (Ping timeout: 240 seconds)
[21:54:38] *** Joins: causa_sui (~causasui@c-68-60-125-136.hsd1.mi.comcast.net)
[21:54:57] *** Quits: sinaowolabi (~SinaOwola@160.152.109.220) (Ping timeout: 240 seconds)
[21:55:02] *** Joins: larryv (~larryv@zsh/patchmanager/larryv)
[21:55:31] *** Quits: sinaowolabi_ (~SinaOwola@102.134.114.1) (Ping timeout: 256 seconds)
[21:55:47] *** Quits: volga629 (~volga629@72.139.93.26) (Quit: My MacBook has gone to sleep. ZZZzzzâ€¦)
[21:56:39] *** Quits: shad (~shad@user/shad) (Quit: WeeChat 3.0)
[21:59:12] *** Quits: causa_sui (~causasui@c-68-60-125-136.hsd1.mi.comcast.net) (Ping timeout: 256 seconds)
[22:00:03] *** Joins: causa_sui (~causasui@c-68-60-125-136.hsd1.mi.comcast.net)
[22:01:15] *** Joins: edge (~spacenaut@111.92.81.133)
[22:01:41] *** Quits: mtk (~mtk@2601:185:200:70:20c:29ff:fe3e:59e4) (Remote host closed the connection)
[22:01:47] *** Quits: unop (~unop@195.91.110.250) (Remote host closed the connection)
[22:02:14] *** Joins: unop (~unop@195.91.110.250)
[22:03:49] *** Joins: karx (karx@user/karx)
[22:03:59] *** Joins: dreamon (~dreamon@pd95035d1.dip0.t-ipconnect.de)
[22:04:07] *** Quits: karx (karx@user/karx) (Client Quit)
[22:04:14] *** Quits: edge (~spacenaut@111.92.81.133) (Client Quit)
[22:04:50] *** Quits: causa_sui (~causasui@c-68-60-125-136.hsd1.mi.comcast.net) (Ping timeout: 260 seconds)
[22:04:51] *** Joins: taupiqueur (~taupiqueu@lmontsouris-659-1-2-186.w193-248.abo.wanadoo.fr)
[22:04:56] *** Joins: spacenautx (~spacenaut@111.92.81.133)
[22:05:50] *** Joins: mtk (~mtk@2601:185:200:70:20c:29ff:fe3e:59e4)
[22:06:24] *** Quits: spacenautx (~spacenaut@111.92.81.133) (Client Quit)
[22:07:25] *** Joins: CaCode (~CaCode@user/cacode)
[22:07:28] *** Joins: sinaowolabi_ (~SinaOwola@160.152.109.220)
[22:07:59] *** Quits: UnnamedBeer (~UnnamedBe@6.red-79-158-63.dynamicip.rima-tde.net) (Ping timeout: 256 seconds)
[22:08:05] *** Joins: emanuele6 (~emanuele6@user/emanuele6)
[22:08:57] *** Quits: Nahra (~user@static.161.95.99.88.clients.your-server.de) (Remote host closed the connection)
[22:09:36] *** Joins: Guest4357 (~Guest43@47-215-137-149.flagcmtk01.res.dyn.suddenlink.net)
[22:09:48] *** Joins: ___nick___ (~quassel@cpc68286-cdif17-2-0-cust533.5-1.cable.virginm.net)
[22:09:50] <Guest4357> Question- I just joined hitchwiki.org. I didnâ€™t know my username would be displayed publicly, so I used my real name as my username. I need to change this immediately. How do I do this?
[22:09:59] *** Joins: ryzenda (~ryzenda@pool-74-109-246-70.pitbpa.fios.verizon.net)
[22:10:12] *** Quits: libsys (~libsys@186.105.130.50) (Ping timeout: 240 seconds)
[22:11:30] <Guest4357> Hello?
[22:11:44] *** Quits: Guest4357 (~Guest43@47-215-137-149.flagcmtk01.res.dyn.suddenlink.net) (Quit: Client closed)
[22:12:21] *** Joins: libsys (~libsys@186.105.130.50)
[22:13:16] *** Joins: ormaaj2 (~ormaaj2@user/ormaaj)
[22:13:39] <ormaaj> Guest4357: wrong channel
[22:13:48] <phy1729> They're already gone
[22:14:11] <ormaaj> sure enough
[22:14:16] <phy1729> We didn't meet our 2 minute SLA. Gonna have to dock the channel ulimit
[22:14:28] <anddam> is there an "escaping guide" of sort? I am only quoting strings when they are coming from outside and I know they do not contain IFS
[22:14:54] <anddam> e.g. "$HOME"/some/path/  but if I have   foo=some/badass/path   I will then use $foo without escaping
[22:15:01] <phy1729> !qefs
[22:15:01] <greybot> "$Quote" "$Every" "$Fucking" "$Substitution"
[22:15:07] <greycat> You don't quote data.  You quote pieces of your code, in order to prevent the shell from changing the data.
[22:15:08] <ormaaj> there is. a factoid even
[22:15:12] <anddam> !echo $Fucking
[22:15:42] *** Joins: volga629 (~volga629@72.139.93.26)
[22:15:48] *** Quits: ___nick___ (~quassel@cpc68286-cdif17-2-0-cust533.5-1.cable.virginm.net) (Quit: https://quassel-irc.org - Chat comfortably. Anywhere.)
[22:15:55] <ormaaj> !quotes
[22:15:55] <greybot> https://mywiki.wooledge.org/Quotes
[22:15:58] <anddam> greycat: ok, so the /some/path back there is not quoted, right?
[22:16:08] <greycat> if foo contains a pathname, then when you expand it, you use "$foo" (quoted, except in places where the quotes are optional) so the shell won't split it apart or anything else
[22:16:12] <ormaaj> yes that one.
[22:16:41] <greycat> you can include /constant/suffixes inside the quotes, or not, as you prefer
[22:16:43] <nightstrike> any handy bashisms to convert hex to decimal?
[22:16:59] <greycat> nightstrike: what does your input look like?
[22:17:08] <nightstrike> 0x8af
[22:17:19] <greycat> # number=0x8af; echo $((number))
[22:17:21] <shbot> greycat: 2223
[22:17:22] <anddam> thanks as usual
[22:17:33] <nightstrike> score!
[22:17:33] *** Joins: ___nick___ (~quassel@cpc68286-cdif17-2-0-cust533.5-1.cable.virginm.net)
[22:17:52] <greycat> the 0x prefix already makes bash treat it as hexadecimal when it's used in a math context
[22:18:06] *** Quits: ___nick___ (~quassel@cpc68286-cdif17-2-0-cust533.5-1.cable.virginm.net) (Client Quit)
[22:18:37] *** Quits: furrymcgee (~devuan@cgn-89-1-211-93.nc.de) (Ping timeout: 240 seconds)
[22:19:01] *** Joins: furrymcgee (~devuan@cgn-213-196-210-217.nc.de)
[22:19:37] *** Parts: pragma- (~chaos@user/pragmatic-chaos) (Bye!)
[22:19:48] *** Joins: ___nick___ (~quassel@cpc68286-cdif17-2-0-cust533.5-1.cable.virginm.net)
[22:23:37] *** Quits: furrymcgee (~devuan@cgn-213-196-210-217.nc.de) (Ping timeout: 240 seconds)
[22:24:35] *** Joins: furrymcgee (~devuan@cgn-213-196-210-179.nc.de)
[22:24:49] *** Joins: causa_sui (~causasui@c-68-60-125-136.hsd1.mi.comcast.net)
[22:26:06] *** Quits: evanextreme (~evan@2604:4080:1000:8150:1cc2:43f9:3edb:f1c0) (Quit: Heading out, seeya!)
[22:27:26] *** Quits: roadie (~user@2a02:8108:5a40:1d87:c892:1c2c:9f16:7346) (Ping timeout: 245 seconds)
[22:32:38] *** Quits: causa_sui (~causasui@c-68-60-125-136.hsd1.mi.comcast.net) (Ping timeout: 256 seconds)
[22:33:47] <ormaaj> # echo $((16#decafbad))
[22:33:48] <shbot> ormaaj: 3737844653
[22:34:12] <ormaaj> (alternate, nonportable)
[22:41:58] *** Joins: m4n (~emacs@ip5f5bd1ff.dynamic.kabel-deutschland.de)
[22:42:13] *** Quits: taupiqueur (~taupiqueu@lmontsouris-659-1-2-186.w193-248.abo.wanadoo.fr) (Read error: Connection reset by peer)
[22:42:22] *** Joins: taupiqueur (~taupiqueu@lmontsouris-659-1-2-186.w193-248.abo.wanadoo.fr)
[22:43:19] *** Quits: taupiqueur (~taupiqueu@lmontsouris-659-1-2-186.w193-248.abo.wanadoo.fr) (Read error: Connection reset by peer)
[22:45:23] *** Joins: taupiqueur (~taupiqueu@lmontsouris-659-1-2-186.w193-248.abo.wanadoo.fr)
[22:46:31] <jelly> ooh.  I need random 16 bit hexadecimals often
[22:46:56] <jelly> # echo $((16#$RANDOM))
[22:46:58] <shbot> jelly: 164486
[22:47:20] <jelly> okay that's a bit more
[22:47:54] *** Quits: volga629 (~volga629@72.139.93.26) (Quit: My MacBook has gone to sleep. ZZZzzzâ€¦)
[22:48:30] <greycat> that's the wrong way around
[22:48:34] <jelly> # printf '%04x\n' $RANDOM
[22:48:35] <shbot> jelly: 7998
[22:48:42] <greycat> ... # printf %04x .... yeah, that.
[22:49:00] *** Joins: causa_sui (~causasui@c-68-60-125-136.hsd1.mi.comcast.net)
[22:49:07] <greycat> you probably want to use $((RANDOM & 0xFFFF)) though
[22:50:15] <jelly> my bash(1) says it's 15 bits, which is good enough
[22:50:37] <greycat> Urk.  Yeah, forgot how narrow it was.
[22:51:08] <phy1729> Is SRANDOM wider?
[22:51:16] <jelly> # echo $((SRANDOM & 0xFFFF))
[22:51:18] <shbot> jelly: 2779
[22:51:23] <greycat> SRANDOM is 32 bits
[22:51:35] <taupiqueur> hello
[22:52:11] *** Quits: Sauvin (~sauvin@about/linux/staff/sauvin) (Ping timeout: 256 seconds)
[22:53:08] *** Joins: rs (~rs@user/rs)
[22:53:11] <taupiqueur> how to setup a script for testing a program (kakoune), using 2 files, the output and expected output?
[22:53:28] *** Quits: Psi-Jack (~psi-jack@user/psi-jack) (Quit: Do you type on  your PS1 or play on your PS1?)
[22:53:36] *** Quits: causa_sui (~causasui@c-68-60-125-136.hsd1.mi.comcast.net) (Ping timeout: 256 seconds)
[22:53:48] <greycat> redirect the output of the program being tested to the second file, then cmp(1) it against the first file
[22:53:57] <greycat> or diff(1) if you prefer
[22:54:07] <taupiqueur> currently I have something like `kak -n -ui dummy -e "source init.kak $tmp/a $tmp/b"`
[22:54:12] <emanuele6> i think kakoune is a TUI text editor
[22:54:34] *** Joins: causa_sui (~causasui@c-68-60-125-136.hsd1.mi.comcast.net)
[22:54:42] *** Joins: Psi-Jack (psi-jack@user/psi-jack)
[22:55:19] <taupiqueur> the kakoune program sources the init.kak and have access to a "a" and "b" file, where it will write data, the output and expected output
[22:55:28] <taupiqueur> so from the shell script I can loop for reading
[22:56:02] <taupiqueur> my issue is the setup for doing the loop/read dance
[22:56:04] *** Quits: ash_worksi (~ash_m@user/ash-m/x-3292451) (Ping timeout: 272 seconds)
[22:56:27] <taupiqueur> the kak program is blocking and can write to these files until quitting
[22:56:59] <taupiqueur> from the shell script, say "test.sh" I want while the kak program runs wait and read the "a" and "b" files
[22:57:05] <taupiqueur> and stop when kakoune quits
[22:57:10] <greycat> ... whast.
[22:57:35] <greycat> First there were two files.  Now there's a loop...?  I do not understand.
[22:58:26] <taupiqueur> yep, the two files are for the kakoune program for writing its result to one file and what was expected to another
[22:59:17] <taupiqueur> in the shell script I want to read the files in a loop, maybe I have to use a fifo for that
[22:59:52] *** Quits: causa_sui (~causasui@c-68-60-125-136.hsd1.mi.comcast.net) (Ping timeout: 272 seconds)
[22:59:55] *** Quits: crashrep (~crashrep@user/crashrep) (Ping timeout: 240 seconds)
[23:00:41] *** Quits: rustyshackleford (uid236774@id-236774.helmsley.irccloud.com) (Quit: Connection closed for inactivity)
[23:00:41] *** Joins: roadie (~user@2a02:8108:5a40:1d87:c892:1c2c:9f16:7346)
[23:01:12] *** Joins: causa_sui (~causasui@c-68-60-125-136.hsd1.mi.comcast.net)
[23:01:25] <taupiqueur> greycat maybe you have a better idea, I struggle to find a nice way to test a tui plugin :/
[23:02:49] <greycat> I don't even understand what you are *saying*.
[23:03:39] <taupiqueur> :/
[23:03:40] <greycat> Is my initial answer not correct?  Run the kaka-thing, and redirect its output to file2.  Compare that against file1 which contains the expected output.
[23:04:03] *** Joins: Tangent-Man (~Tang3nt-M@31.132.2.72)
[23:04:59] <greycat> Is the problem that you can't simply *run* the kaka-thing?  It's some sort of never-terminating daemon, and you beseech it to perform an act, and then you have no idea when it has done so?
[23:06:02] <taupiqueur> the program I'm testing does not write to stdout, I cannot simply do `kak -e some_things > some_file`
[23:06:04] *** Quits: causa_sui (~causasui@c-68-60-125-136.hsd1.mi.comcast.net) (Ping timeout: 256 seconds)
[23:06:25] <taupiqueur> if you don't know kak, it's like vim, running a tui
[23:06:42] *** Joins: A|an (~Alan@173.218.175.171)
[23:06:47] *** Joins: crashrep (~crashrep@user/crashrep)
[23:07:09] <taupiqueur> I cannot make it write to stdout, which would have been nice.
[23:08:51] *** Quits: magla (~gelignite@d5361f17.access.ecotel.net) (Quit: Stay safe!)
[23:09:34] *** Joins: Nintendo (~smb3@user/great)
[23:10:42] *** Quits: thiras (~thiras@user/thiras) (Remote host closed the connection)
[23:10:57] *** Joins: kurahaupo (~kurahaupo@pa49-197-28-217.pa.qld.optusnet.com.au)
[23:10:58] <fling> How do you extract what is after a substring in a variable?
[23:11:06] *** Joins: causa_sui (~causasui@c-68-60-125-136.hsd1.mi.comcast.net)
[23:11:07] *** Joins: thiras (~thiras@user/thiras)
[23:11:14] <fling> like 'abc' you need to get what is after 'b' and you get 'c'
[23:11:15] *** Quits: crashrep (~crashrep@user/crashrep) (Ping timeout: 240 seconds)
[23:11:33] <fling> there is something with parameter expansion I forgot about
[23:12:03] <emanuele6> # var=abcd x=${var#*b}; declare -p x
[23:12:04] <larryv> # foo=abcdef; printf '%s' "${foo#*c}"
[23:12:06] <shbot> emanuele6: declare -- x="cd"
[23:12:06] <shbot> larryv: def
[23:12:27] <emanuele6> it only works if var actually contains b
[23:12:32] <emanuele6> # var=axcd x=${var#*b}; declare -p x
[23:12:34] <shbot> emanuele6: declare -- x="axcd"
[23:12:37] *** Quits: reset (~reset@user/reset) (Quit: reset)
[23:13:10] <greycat> you can add a separate check for [[ $input = *b* ]]
[23:14:25] <larryv> 'the kak program is blocking and can write to these files until quitting / from the shell script, say "test.sh" I want while the kak program runs wait and read the "a" and "b" files / and stop when kakoune quits'
[23:14:40] <larryv> kind of sounds like taupiqueur wants to run the comparison *concurrently* with kak?
[23:15:25] *** Quits: causa_sui (~causasui@c-68-60-125-136.hsd1.mi.comcast.net) (Ping timeout: 256 seconds)
[23:15:30] <greycat> Good luck.  I still can't figure out the intent.
[23:15:43] *** Joins: Lord_of_Life_ (~Lord@user/lord-of-life/x-2819915)
[23:15:45] *** Quits: Lord_of_Life (~Lord@user/lord-of-life/x-2819915) (Ping timeout: 256 seconds)
[23:16:50] *** Quits: thiras (~thiras@user/thiras) (Ping timeout: 256 seconds)
[23:17:54] *** Joins: crashrep (~crashrep@user/crashrep)
[23:18:22] *** Lord_of_Life_ is now known as Lord_of_Life
[23:18:42] *** Joins: reset (~reset@user/reset)
[23:20:17] <Nintendo> Sounds like a pgrep+mapfile+sleep loop.
[23:21:09] *** Parts: rawktucc (~rawktucc@user/rawktucc) ()
[23:21:10] <greycat> ... why pgrep and sleep?  Is kak-thing not a child of the script?
[23:21:29] *** Quits: MajorBiscuit (~MajorBisc@c-001-030-015.client.tudelft.eduvpn.nl) (Quit: WeeChat 3.4)
[23:21:33] <Nintendo> It is?  Sorry, I'm just tuning in.
[23:21:52] <greycat> I don't know.  Nobody can figure out what the problem is.
[23:22:02] <Nintendo> Sounds like a typical day in #bash.
[23:22:15] *** Quits: crashrep (~crashrep@user/crashrep) (Ping timeout: 240 seconds)
[23:23:13] *** Joins: Tang3nt-Man (~Tang3nt-M@cpc145602-basl14-2-0-cust33.20-1.cable.virginm.net)
[23:23:41] *** Quits: SpikeHeron (~DutchIngr@user/dutch) (Quit: WeeChat 3.4)
[23:24:15] <fling> emanuele6: thanks
[23:25:37] *** Quits: Tangent-Man (~Tang3nt-M@31.132.2.72) (Ping timeout: 240 seconds)
[23:25:41] *** Joins: volga629 (~volga629@72.139.93.26)
[23:25:47] *** Joins: wyfnt (~wyfnt1232@103.214.137.74)
[23:26:31] *** Joins: ramblebamble (ramblebamb@gateway/vpn/protonvpn/ramblebamble)
[23:27:48] *** Quits: soham (~soham@115.187.42.208) (Ping timeout: 240 seconds)
[23:28:35] *** Quits: wyfnt (~wyfnt1232@103.214.137.74) (Client Quit)
[23:28:58] *** Joins: crashrep (~crashrep@user/crashrep)
[23:31:53] *** Quits: rgrinberg (~textual@2806:101e:7:70b6:d0ec:d248:3a49:15e0) (Quit: My MacBook has gone to sleep. ZZZzzzâ€¦)
[23:33:32] *** Joins: jmdaemon (~jmdaemon@user/jmdaemon)
[23:33:33] *** Joins: causa_sui (~causasui@c-68-60-125-136.hsd1.mi.comcast.net)
[23:36:55] *** Quits: crashrep (~crashrep@user/crashrep) (Ping timeout: 240 seconds)
[23:37:56] *** Quits: ramblebamble (ramblebamb@gateway/vpn/protonvpn/ramblebamble) (Quit: WeeChat 3.4)
[23:39:00] *** Joins: magla (~gelignite@d5361f17.access.ecotel.net)
[23:39:08] *** Quits: causa_sui (~causasui@c-68-60-125-136.hsd1.mi.comcast.net) (Ping timeout: 272 seconds)
[23:39:38] *** Joins: causa_sui (~causasui@c-68-60-125-136.hsd1.mi.comcast.net)
[23:40:46] *** Quits: roadie (~user@2a02:8108:5a40:1d87:c892:1c2c:9f16:7346) (Quit: ERC (IRC client for Emacs 25.3.50.1))
[23:41:12] *** Quits: iomari891 (~iomari891@105.112.138.38) (Ping timeout: 256 seconds)
[23:41:15] *** Joins: crashrep (~crashrep@user/crashrep)
[23:43:04] *** Joins: KBar (~KBar@84.54.90.245)
[23:43:15] *** Parts: KBar (~KBar@84.54.90.245) ()
[23:44:19] *** Quits: causa_sui (~causasui@c-68-60-125-136.hsd1.mi.comcast.net) (Ping timeout: 256 seconds)
[23:45:01] *** Joins: heiner (~Thunderbi@2a00:6020:b006:a900:d250:99ff:fe34:8fd2)
[23:45:20] *** Joins: SpikeHeron (~DutchIngr@user/dutch)
[23:45:35] *** Quits: crashrep (~crashrep@user/crashrep) (Ping timeout: 240 seconds)
[23:46:40] *** Quits: brw (~bas@haring.bas.sh) (Remote host closed the connection)
[23:47:07] *** Joins: brw (~bas@haring.bas.sh)
[23:47:18] *** Quits: heiner (~Thunderbi@2a00:6020:b006:a900:d250:99ff:fe34:8fd2) (Client Quit)
[23:49:48] *** Joins: CaCode_ (~CaCode@user/cacode)
[23:51:35] *** Joins: ash_worksi (~ash_m@user/ash-m/x-3292451)
[23:52:16] *** Quits: yagamilito (~yagamilit@2601:642:4600:34b0:4898:3909:62b2:25c8) (Quit: Client closed)
[23:53:04] *** Quits: CaCode (~CaCode@user/cacode) (Ping timeout: 272 seconds)
[23:54:32] *** Joins: causa_sui (~causasui@c-68-60-125-136.hsd1.mi.comcast.net)
[23:54:35] *** Quits: LuksNuke (~LuksNuke@gateway/tor-sasl/luksnuke) (Ping timeout: 240 seconds)
[23:55:41] *** Joins: senoraraton (~senorarat@192-195-83-130.static.monkeybrains.net)
[23:59:00] *** Quits: causa_sui (~causasui@c-68-60-125-136.hsd1.mi.comcast.net) (Ping timeout: 240 seconds)
[23:59:52] *** Quits: Error (~err@user/error) (Quit: When we hang the capitalists they will sell us the rope we use - Joseph Stalin)
