[00:00:07] <noonien> i found quite a few packages for sending, but none for receiving
[00:00:13] <noonien> and the protocol is proprietary
[00:02:23] *** Joins: souvik (~souvik@103.199.182.47)
[00:07:13] *** Quits: souvik (~souvik@103.199.182.47) (Ping timeout: 258 seconds)
[00:11:39] *** Joins: DHowett (~dustin@kaus.howett.net)
[00:13:43] *** Joins: saml (~saml@cpe-74-73-80-162.nyc.res.rr.com)
[00:23:00] *** Quits: llorllale (~llorllale@2607:9880:3a18:69:f1eb:8b18:ec10:ac53) (Ping timeout: 272 seconds)
[00:24:01] *** Joins: souvik (~souvik@103.199.182.47)
[00:24:24] *** Joins: NCS_One (~NCS_One@bl11-90-133.dsl.telepac.pt)
[00:31:52] *** Quits: andlabs (~andlabs@71.190.119.164) (Quit: My MacBook has gone to sleep. ZZZzzz…)
[00:33:38] *** Joins: andlabs (~andlabs@71.190.119.164)
[00:33:54] *** Quits: Kane (~Kane@2a01:e34:ee89:5d90:c922:2db8:2549:71e4) (Quit: Leaving)
[00:36:53] *** Quits: mikoto-chan (~mikoto-ch@ip-213-49-189-31.dsl.scarlet.be) (Ping timeout: 268 seconds)
[00:40:23] *** Quits: hv99 (~hv99@wireguard/tunneler/hv99) (Quit: The Lounge - https://thelounge.chat)
[00:43:10] *** Joins: arcatech (~arcatech@user/arcatech)
[00:44:18] *** Joins: hv99 (~hv99@wireguard/tunneler/hv99)
[00:45:00] *** Quits: shka (~herr@109.231.62.239) (Ping timeout: 244 seconds)
[00:54:10] *** Quits: cultpony (~cultpony@user/cultpony) (Quit: ZNC 1.8.2 - https://znc.in)
[00:54:28] *** Joins: cultpony (~cultpony@user/cultpony)
[00:55:51] *** Quits: souvik (~souvik@103.199.182.47) (Ping timeout: 244 seconds)
[00:57:27] *** Joins: Crassus (~Crassus@user/crassus)
[00:58:03] *** Joins: souvik (~souvik@103.199.182.47)
[00:58:17] *** Quits: avemestr (~avemestr@2a01:4f8:212:2719::2) (Quit: WeeChat 1.9.1)
[00:58:35] *** Joins: avemestr (~avemestr@2a01:4f8:212:2719::2)
[01:00:30] *** Quits: ac5tin (~ac5tin@user/ac5tin) (Ping timeout: 258 seconds)
[01:01:16] *** Joins: ac5tin (~ac5tin@user/ac5tin)
[01:12:22] *** Joins: frk (~textual@193.27.14.10)
[01:19:05] *** Joins: rhoshy (~rhoshy@p200300d84f2ee83718876b553e8569fb.dip0.t-ipconnect.de)
[01:23:06] *** Quits: SoF (~skius@user/skius) (Quit: Ping timeout (120 seconds))
[01:23:23] *** Joins: SoF (~skius@user/skius)
[01:24:16] *** Quits: rcernin (~rcernin@188.146.148.122.sta.wbroadband.net.au) (Ping timeout: 258 seconds)
[01:25:08] *** Quits: darkapex (uid360049@user/darkapex) (Quit: Connection closed for inactivity)
[01:30:59] *** Quits: frk (~textual@193.27.14.10) (Quit: Textual IRC Client: www.textualapp.com)
[01:33:00] *** Joins: pepee (~user@user/pepee)
[01:34:39] *** Quits: rgl (~rgl@bl12-47-147.dsl.telepac.pt) (Remote host closed the connection)
[01:37:35] *** Joins: amigan (dramoray@dtvax.dynatron.me)
[01:38:04] *** Quits: amigan (dramoray@dtvax.dynatron.me) (Client Quit)
[01:38:14] *** Joins: amigan (dramoray@dtvax.dynatron.me)
[01:41:57] *** Joins: frickenate (~frickenat@user/frickenate)
[01:42:31] <dr0n> Hello, quick theoretical question on methods.
[01:42:45] <dr0n> i have a peace of code, which is: https://play.golang.org/p/GnPB4Q5aiSs
[01:43:05] <dr0n> if a New() is being called under the main func, how does the STring methods gets involved in the process
[01:43:43] <dr0n> when the New func returns, clock back - tried to follow the process under the debug and I don't understand how the method gets triggered
[01:43:49] <dr0n> Thank you in advance
[01:45:21] *** Quits: souvik (~souvik@103.199.182.47) (Ping timeout: 258 seconds)
[01:45:44] *** Joins: souvik (~souvik@103.199.182.47)
[01:46:17] <amigan> dr0n: fmt.Println() calls the String() method to stringfy the Clock object for printing
[01:47:53] <amigan> https://github.com/golang/go/blob/ed01ceaf4838cd67fd802df481769fa9ae9d0440/src/fmt/print.go#L62
[01:48:14] *** Joins: rcernin (~rcernin@188.146.148.122.sta.wbroadband.net.au)
[01:49:01] *** Quits: bongobrown (~bongobrow@cpe-76-185-215-2.satx.res.rr.com) (Ping timeout: 265 seconds)
[01:49:48] <dr0n> ahh
[01:50:02] <dr0n> amigan:  Thank you!
[01:50:31] <amigan> Sure thing
[01:52:39] *** Parts: sedi (~lol@user/sedi) ()
[02:03:22] *** Quits: dany74q (~dany74q@IGLD-84-229-190-86.inter.net.il) (Ping timeout: 258 seconds)
[02:13:47] <Torr> Is it possible to pass configuration parameters into a CSV reader?
[02:14:29] <Torr> In the constructor I mean.
[02:14:53] *** Quits: rhoshy (~rhoshy@p200300d84f2ee83718876b553e8569fb.dip0.t-ipconnect.de) (Remote host closed the connection)
[02:17:22] <KirkMcDonald> Torr: That's what **fmtparams is all about.
[02:17:29] <KirkMcDonald> err
[02:17:38] <KirkMcDonald> Sorry, thought this was #python for a moment.
[02:18:36] <KirkMcDonald> Torr: No, you'll need to do it in two steps: Call NewReader(), then configure it.
[02:18:55] *** Quits: printf (~printf@user/printf) (Quit: The Lounge - https://thelounge.chat)
[02:19:12] <KirkMcDonald> Though you could certainly define a function that does whatever.
[02:19:15] *** Joins: printf (~printf@user/printf)
[02:19:33] *** Quits: souvik (~souvik@103.199.182.47) (Ping timeout: 244 seconds)
[02:19:52] <Torr> I see
[02:19:55] *** Joins: souvik (~souvik@103.199.182.47)
[02:20:09] <Torr> As a side doubt, is the term "constructor" correct for structs?
[02:20:26] *** Joins: paulgrmn (~paulgrmn@user/paulgrmn)
[02:21:08] <Torr> I know it's used for objects but Go isn't OO (thankfully).
[02:21:46] *** Joins: jolof (~jolof@user/jolof)
[02:22:08] <Tv_> Torr: it's not wrong, but there's no special constructors, it's just a function returning a value
[02:23:09] <KirkMcDonald> If you call these sorts of factory functions "constructors," people will know what you mean.
[02:24:19] <Torr> Gotcha, thanks guys
[02:27:41] *** Joins: gilesc (~textual@cpe-172-112-18-165.socal.res.rr.com)
[02:29:22] *** Joins: dany74q (~dany74q@IGLD-84-229-190-86.inter.net.il)
[02:32:59] <b0nn> FTR I think "constructor" is a valid term to apply to functions that you employ to create instances of a given type /but/ be aware that they're not automagically run by Go, users (devs) have to explicitly call them
[02:34:56] *** Quits: dany74q (~dany74q@IGLD-84-229-190-86.inter.net.il) (Ping timeout: 265 seconds)
[02:35:24] *** Quits: souvik (~souvik@103.199.182.47) (Ping timeout: 250 seconds)
[02:35:31] *** Quits: andlabs (~andlabs@71.190.119.164) (Quit: My MacBook has gone to sleep. ZZZzzz…)
[02:35:39] *** Joins: souvik (~souvik@103.199.182.47)
[02:36:02] *** Quits: dmgk (~dmgk@user/dmgk) (Quit: ZNC - https://znc.in)
[02:36:26] *** Joins: dmgk (~dmgk@user/dmgk)
[02:37:51] *** Joins: Eddward_ (~Eddward@207.138.204.132)
[02:37:53] *** Quits: Eddward (~Eddward@207.138.204.132) (Read error: Connection reset by peer)
[02:39:18] *** Joins: andlabs (~andlabs@71.190.119.164)
[02:40:30] *** Quits: souvik (~souvik@103.199.182.47) (Ping timeout: 252 seconds)
[02:42:55] *** Joins: jjonah (~jjonah@p200300d5d723c400dea632fffeb3342f.dip0.t-ipconnect.de)
[02:43:57] *** Quits: saml (~saml@cpe-74-73-80-162.nyc.res.rr.com) (Remote host closed the connection)
[02:44:32] *** Quits: SoF (~skius@user/skius) (Quit: Ping timeout (120 seconds))
[02:44:49] *** Joins: SoF (~skius@user/skius)
[02:47:44] *** Quits: kayprish (~kayprish@46.240.143.86) (Remote host closed the connection)
[02:50:40] *** Joins: schmillin_ (~schmillin@user/schmillin)
[02:52:21] *** Joins: souvik (~souvik@103.199.182.47)
[02:54:22] *** Quits: schmillin (~schmillin@user/schmillin) (Ping timeout: 272 seconds)
[02:57:39] *** Quits: Crassus (~Crassus@user/crassus) (Quit: My MacBook has gone to sleep. ZZZzzz…)
[02:59:15] *** Quits: gilesc (~textual@cpe-172-112-18-165.socal.res.rr.com) (Quit: My MacBook has gone to sleep. ZZZzzz…)
[03:05:00] *** Quits: andlabs (~andlabs@71.190.119.164) (Quit: My MacBook has gone to sleep. ZZZzzz…)
[03:10:50] *** Quits: souvik (~souvik@103.199.182.47) (Ping timeout: 272 seconds)
[03:11:14] *** Joins: souvik (~souvik@103.199.182.47)
[03:13:29] *** Quits: longsleep (~quassel@2a02:c207:3001:216:1000::1) (Ping timeout: 244 seconds)
[03:13:42] *** Joins: longsleep (~quassel@2a02:c207:3001:216:1000::1)
[03:22:44] *** Quits: jolof (~jolof@user/jolof) (Quit: leaving)
[03:25:12] *** Quits: souvik (~souvik@103.199.182.47) (Ping timeout: 265 seconds)
[03:27:13] *** Joins: andlabs (~andlabs@71.190.119.164)
[03:31:53] *** Quits: mrig (~mrig@user/mrig) (Quit: WeeChat 3.2)
[03:36:03] *** Joins: souvik (~souvik@103.199.182.47)
[03:37:47] *** Quits: jjonah (~jjonah@p200300d5d723c400dea632fffeb3342f.dip0.t-ipconnect.de) (Remote host closed the connection)
[03:40:24] *** Joins: SmokeInWater7 (~SmokeInWa@user/smokeinwater7)
[03:47:46] *** Quits: rcernin (~rcernin@188.146.148.122.sta.wbroadband.net.au) (Ping timeout: 250 seconds)
[03:48:29] *** LSD is now known as acidsys
[03:51:53] *** Joins: dany74q (~dany74q@igld-84-229-190-86.inter.net.il)
[03:55:10] <Rudde> In reflect is there any way to detect if a type is exporable aside from actually analyzing its name?
[03:57:08] *** Quits: dany74q (~dany74q@igld-84-229-190-86.inter.net.il) (Ping timeout: 252 seconds)
[04:02:37] *** Joins: daveed (~ride@user/daveed)
[04:04:05] *** Quits: souvik (~souvik@103.199.182.47) (Ping timeout: 268 seconds)
[04:04:52] <daveed> Hello. I am parsing a csv and I would like to use https://github.com/jszwec/csvutil. One issue is that some of the fields in the csv need to be manipulated to be the data type I want them to be. For example, one column of the sheet lists percentages, which I would like to represent as integers, but there are '%' signs in the column.
[04:06:16] <daveed> My current idea is to have a struct just for umarshalling the data and then a separate struct where I have parsed each element to the correct type. Any ideas as to how I could avoid two types of structs?
[04:08:16] <b0nn> daveed: I'm not as strong in unmarshalling as I should be, so there may be a (custom?) unmarshal way to do what you want
[04:08:51] <b0nn> But, having a DAO and modifying it to a DTO is a common pattern (Data Access Object, Data Transfer Object)
[04:09:36] *** Joins: Crassus (~Crassus@user/crassus)
[04:11:18] <daveed> b0nn: I bet I can just copy some of the source from the package I linked and make it work for my specific use case.
[04:11:32] *** Joins: burningserenity (~burningse@142-196-178-216.res.spectrum.com)
[04:11:34] <b0nn> WRT the custom Unmarshal, someone on stack overflow generously provided this play link https://play.golang.org/p/kwc32A5mJf that you can use to detect the field you want to change before it's given to the struct
[04:11:53] <daveed> DAO and DTO are new phrases to me so I will have to read to understand yours statement :)
[04:12:35] <daveed> b0nn: Thanks! Do you have a link to the stack overflow question?
[04:16:24] <b0nn> https://stackoverflow.com/questions/20768511/unmarshal-csv-record-into-struct-in-go
[04:22:48] <daveed> Thank you. I will work on it that way.
[04:25:50] *** Joins: souvik (~souvik@103.199.182.47)
[04:26:35] *** Quits: burningserenity (~burningse@142-196-178-216.res.spectrum.com) (Ping timeout: 265 seconds)
[04:30:13] *** Joins: Maxattax97 (~max@2603:900a:1501:a7ca::100)
[04:30:15] *** Joins: yoonkn (~user@175.197.208.79)
[04:33:06] *** Joins: trusch (~trusch@87.123.134.8)
[04:36:44] *** Quits: trusch_ (~trusch@i577B0A3A.versanet.de) (Ping timeout: 265 seconds)
[04:37:48] *** Quits: Sam (b8f15a4bbd@golang/sam) (Quit: Gateway shutdown)
[04:38:29] *** Quits: laymanX (~laymanX@166.70.232.152) (Ping timeout: 272 seconds)
[04:38:41] *** Joins: bongobrown (~bongobrow@cpe-76-185-215-2.satx.res.rr.com)
[04:43:18] *** Quits: kmerfeld (~kmerfeld@99-184-106-79.lightspeed.sbndin.sbcglobal.net) (Ping timeout: 272 seconds)
[04:44:12] *** Joins: kmerfeld (~kmerfeld@2600:1700:8c31:a00:dea6:32ff:fe93:748)
[04:46:02] *** Quits: predmijat (~predmijat@mail.strogopro.com) (Quit: bye)
[04:46:04] *** Quits: SmokeInWater7 (~SmokeInWa@user/smokeinwater7) (Read error: Connection reset by peer)
[04:47:25] *** Quits: Snyp (~rksht@49.207.198.3) (Quit: WeeChat 3.2)
[04:47:37] *** Joins: predmijat (~predmijat@mail.strogopro.com)
[04:51:00] *** Quits: andlabs (~andlabs@71.190.119.164) (Quit: My MacBook has gone to sleep. ZZZzzz…)
[04:55:30] *** Quits: lauraaah (uid156848@id-156848.charlton.irccloud.com) (Quit: Connection closed for inactivity)
[04:58:02] *** Joins: andlabs (~andlabs@71.190.119.164)
[05:02:56] *** Joins: saml (~saml@cpe-74-73-80-162.nyc.res.rr.com)
[05:08:50] *** Quits: Torr (~Torr@user/torr) (Ping timeout: 268 seconds)
[05:11:21] *** Joins: betelgeuse (~john2gb@94-225-47-8.access.telenet.be)
[05:11:57] *** Quits: betelgeuse (~john2gb@94-225-47-8.access.telenet.be) (Read error: Connection reset by peer)
[05:14:15] *** Joins: betelgeuse (~john2gb@94-225-47-8.access.telenet.be)
[05:14:27] *** Quits: iluxa (~iliaf@user/iluxa) (Quit: ZNC 1.8.2 - https://znc.in)
[05:17:03] <lack> Is it possible to do a type assertion and get a pointer to the struct on one line?
[05:18:21] <rewt> it's usually best to validate the assertion before doing anything with the result
[05:18:34] *** Joins: MrFantastik (~Thunderbi@98.1.62.240)
[05:18:53] <dg> the usual way is to combine it with an if statement like: if thing, ok := foo.(type); ok { ...
[05:19:25] <Tv_> lack: sounds like you're putting structs, and not pointers to structs, in an interface? you probably want to use a pointer.
[05:19:45] *** Quits: betelgeuse (~john2gb@94-225-47-8.access.telenet.be) (Read error: Connection reset by peer)
[05:21:16] *** Joins: betelgeuse (~john2gb@94-225-47-8.access.telenet.be)
[05:23:40] *** Quits: betelgeuse (~john2gb@94-225-47-8.access.telenet.be) (Client Quit)
[05:26:14] *** Joins: noxim (~noxim@user/noxim)
[05:29:24] <theckman> lack: a type assertion only allows you to get the value out of the interface{}, as it was when it was put inside of the interface{}. So if the struct type wasn't a pointer, you can't use a type assertion to get a pointer.
[05:34:46] *** Quits: NCS_One (~NCS_One@bl11-90-133.dsl.telepac.pt) (Quit: Lost terminal)
[05:35:28] <lack> a := &(b.(RealType))
[05:35:58] <lack> Would be what I'd want
[05:36:53] *** Quits: dr0n (~nabromov@94.11.23.235) (Ping timeout: 258 seconds)
[05:44:41] <lack> I can do 't := b.(RealType); a := &t'
[05:45:40] *** Quits: saml (~saml@cpe-74-73-80-162.nyc.res.rr.com) (Remote host closed the connection)
[05:48:10] <b0nn> youhttps://play.golang.org/p/2UZ6_1MI18a
[05:48:51] <b0nn> I think what you want is the original pointer address, and you're only going to get that if you assert to the pointer type
[05:48:58] *** Quits: KekSi (~KekSi@x4dbd0512.dyn.telefonica.de) (Ping timeout: 252 seconds)
[05:49:31] *** Quits: omegatron (~some@p5b056bc7.dip0.t-ipconnect.de) (Quit: What happened? You quit!)
[05:50:11] <b0nn> even then I'd be checking a bit more to ensure you are getting the right address
[05:50:41] *** Quits: LiftLeft2 (~LiftLeft@154.21.28.156) (Ping timeout: 265 seconds)
[05:51:11] *** Joins: burningserenity (~burningse@2603:9001:f01:ad99::1000)
[05:51:18] *** Quits: jsrnop (~mark@user/jsrnop) (Quit: The Lounge - https://thelounge.chat)
[05:51:28] <b0nn> https://play.golang.org/p/nQYbcQme3dL
[05:53:05] *** Joins: KekSi (~KekSi@x4dbe418f.dyn.telefonica.de)
[05:56:11] <theckman> lack: ah yeah, because of the need for the value to be `addressable` to get a pointer to it, you need to do the assertion first and assign it to the variable.
[05:57:23] <b0nn> lack this hopefully makes things clear https://play.golang.org/p/Tmvir8MohQs
[05:58:54] *** Quits: jespada (~jespada@90.254.247.46) (Ping timeout: 265 seconds)
[05:59:37] *** Joins: jespada (~jespada@90.254.247.46)
[06:00:41] *** Joins: jsrnop (~mark@user/jsrnop)
[06:07:50] *** Quits: eck0 (~eck0@047-007-119-133.res.spectrum.com) (Ping timeout: 252 seconds)
[06:07:52] *** Joins: LiftLeft2 (~LiftLeft@154.21.23.10)
[06:09:04] *** Joins: eck0 (~eck0@047-007-119-133.res.spectrum.com)
[06:16:51] *** schmillin_ is now known as schmillin
[06:17:45] *** Quits: eck0 (~eck0@047-007-119-133.res.spectrum.com) (Ping timeout: 265 seconds)
[06:22:23] *** Quits: souvik (~souvik@103.199.182.47) (Ping timeout: 244 seconds)
[06:23:55] *** Quits: yoonkn (~user@175.197.208.79) (Read error: Connection reset by peer)
[06:24:24] *** Joins: eck0 (~eck0@047-007-119-133.res.spectrum.com)
[06:25:57] *** Joins: yoonkn (~user@175.197.208.79)
[06:29:16] *** Joins: souvik (~souvik@103.199.182.47)
[06:51:50] *** Quits: Garb0 (~Garb0@user/garb0) (Quit: Garb0)
[06:52:40] *** Joins: s-video (~s-video@cpe-72-224-152-117.mass.res.rr.com)
[06:54:29] *** Quits: souvik (~souvik@103.199.182.47) (Ping timeout: 265 seconds)
[07:00:59] *** Joins: souvik (~souvik@103.199.182.47)
[07:05:01] *** Quits: burningserenity (~burningse@2603:9001:f01:ad99::1000) (Read error: Connection reset by peer)
[07:05:40] *** Joins: burningserenity (~burningse@142-196-178-216.res.spectrum.com)
[07:06:08] *** Quits: Maxattax97 (~max@2603:900a:1501:a7ca::100) (Quit: WeeChat 3.2)
[07:12:56] *** Quits: s-video (~s-video@cpe-72-224-152-117.mass.res.rr.com) (Ping timeout: 252 seconds)
[07:14:52] *** Joins: jackneillll (~jackneill@20014C4E18267200E7FE6464A0287621.dsl.pool.telekom.hu)
[07:15:39] *** Joins: Sam (b8f15a4bbd@golang/sam)
[07:15:39] *** ChanServ sets mode: +o Sam
[07:17:09] *** Quits: jackneilll (~jackneill@20014C4E181A4F00EC5F29AA093F6549.dsl.pool.telekom.hu) (Ping timeout: 244 seconds)
[07:17:29] *** Joins: rcernin (~rcernin@188.146.148.122.sta.wbroadband.net.au)
[07:21:04] *** Quits: bitshift (~jesse@107-179-164-219.cpe.teksavvy.com) (Ping timeout: 265 seconds)
[07:21:11] *** Quits: frickenate (~frickenat@user/frickenate) (Quit: frickenate)
[07:21:39] *** Joins: s-video (~s-video@cpe-72-224-152-117.mass.res.rr.com)
[07:23:16] *** Joins: bitshift (~jesse@107-179-164-219.cpe.teksavvy.com)
[07:33:40] *** Quits: daveed (~ride@user/daveed) (Ping timeout: 272 seconds)
[07:36:24] *** Quits: burningserenity (~burningse@142-196-178-216.res.spectrum.com) (Ping timeout: 252 seconds)
[07:37:01] *** Quits: rcernin (~rcernin@188.146.148.122.sta.wbroadband.net.au) (Ping timeout: 265 seconds)
[07:44:04] *** Joins: rcernin (~rcernin@188.146.148.122.sta.wbroadband.net.au)
[07:45:49] *** Quits: zoey (~zoey@2a02:8084:a080:9e00:3fae:994c:3fdc:274d) (Quit: Leaving)
[07:46:12] *** Joins: gilesc (~textual@cpe-172-112-18-165.socal.res.rr.com)
[07:46:54] *** Quits: gilesc (~textual@cpe-172-112-18-165.socal.res.rr.com) (Client Quit)
[07:50:24] *** Quits: paulgrmn (~paulgrmn@user/paulgrmn) (Ping timeout: 268 seconds)
[07:52:16] *** Joins: daveed (~ride@user/daveed)
[07:57:06] *** Quits: daveed (~ride@user/daveed) (Ping timeout: 272 seconds)
[08:01:59] *** Joins: daveed (~ride@user/daveed)
[08:03:58] *** Quits: rcernin (~rcernin@188.146.148.122.sta.wbroadband.net.au) (Ping timeout: 268 seconds)
[08:05:07] *** Joins: cskr (~cskr@49.207.204.20)
[08:19:52] *** Quits: cskr (~cskr@49.207.204.20) (Quit: Leaving)
[08:25:12] *** Quits: DePingus (~depingus@2001:bc8:1828:213f::1) (Quit: WeeChat 3.1)
[08:25:57] *** Joins: depingus (~depingus@2001:bc8:1828:213f::1)
[08:26:24] *** depingus is now known as DePingus
[08:30:50] *** Joins: dany74q (~dany74q@IGLD-84-229-190-86.inter.net.il)
[08:36:17] *** Quits: dany74q (~dany74q@IGLD-84-229-190-86.inter.net.il) (Ping timeout: 258 seconds)
[08:37:26] *** Joins: gilesc (~textual@cpe-172-112-18-165.socal.res.rr.com)
[08:42:37] *** Quits: s-video (~s-video@cpe-72-224-152-117.mass.res.rr.com) (Read error: Connection reset by peer)
[08:42:45] *** Joins: rcernin (~rcernin@188.146.148.122.sta.wbroadband.net.au)
[08:43:47] *** Joins: s-video (~s-video@cpe-72-224-152-117.mass.res.rr.com)
[08:46:08] *** Quits: LiftLeft2 (~LiftLeft@154.21.23.10) (Ping timeout: 265 seconds)
[08:46:28] *** Joins: Ke1vin (~Ke1vin@101.85.204.107)
[08:47:32] *** Quits: rcernin (~rcernin@188.146.148.122.sta.wbroadband.net.au) (Ping timeout: 252 seconds)
[08:48:25] *** Joins: rcernin (~rcernin@188.146.148.122.sta.wbroadband.net.au)
[08:51:51] *** Quits: andlabs (~andlabs@71.190.119.164) (Quit: My MacBook has gone to sleep. ZZZzzz…)
[08:52:09] *** Parts: Ke1vin (~Ke1vin@101.85.204.107) ()
[08:53:16] *** Quits: rcernin (~rcernin@188.146.148.122.sta.wbroadband.net.au) (Ping timeout: 250 seconds)
[09:07:39] *** Quits: somebody (~ninjin@momey.cs.ucl.ac.uk) (Changing host)
[09:07:39] *** Joins: somebody (~ninjin@user/ninjin)
[09:07:40] *** Joins: rcernin (~rcernin@188.146.148.122.sta.wbroadband.net.au)
[09:08:36] *** Joins: LiftLeft2 (~LiftLeft@154.21.23.50)
[09:10:16] *** Quits: Eddward_ (~Eddward@207.138.204.132) (Ping timeout: 252 seconds)
[09:10:36] *** Quits: s-video (~s-video@cpe-72-224-152-117.mass.res.rr.com) (Ping timeout: 250 seconds)
[09:16:45] *** Joins: andlabs (~andlabs@71.190.119.164)
[09:16:57] *** Quits: kulak (~kulak@user/kulak) (Read error: Connection reset by peer)
[09:17:31] *** Joins: kulak (~kulak@user/kulak)
[09:19:00] *** Quits: art_vandelay (~art_vande@bras-base-toroon63x9w-grc-21-174-89-102-174.dsl.bell.ca) (Ping timeout: 265 seconds)
[09:20:14] *** Joins: art_vandelay (~art_vande@bras-base-toroon63x9w-grc-21-174-89-102-174.dsl.bell.ca)
[09:21:55] *** somebody is now known as ninjin
[09:30:00] *** Quits: gilesc (~textual@cpe-172-112-18-165.socal.res.rr.com) (Quit: My MacBook has gone to sleep. ZZZzzz…)
[09:30:13] *** Joins: fef (~thedawn@user/thedawn)
[09:32:46] *** Quits: MrFantastik (~Thunderbi@98.1.62.240) (Ping timeout: 268 seconds)
[09:38:03] *** Quits: kmerfeld (~kmerfeld@2600:1700:8c31:a00:dea6:32ff:fe93:748) (Ping timeout: 272 seconds)
[09:38:44] *** Joins: kmerfeld (~kmerfeld@2600:1700:8c31:a00:dea6:32ff:fe93:748)
[09:40:27] *** Joins: MrFantastik (~Thunderbi@98.1.62.240)
[09:44:05] *** Quits: printf (~printf@user/printf) (Quit: The Lounge - https://thelounge.chat)
[09:44:26] *** Joins: printf (~printf@user/printf)
[09:47:02] *** Quits: LiftLeft2 (~LiftLeft@154.21.23.50) (Ping timeout: 265 seconds)
[09:49:27] *** Quits: daveed (~ride@user/daveed) (Ping timeout: 272 seconds)
[09:53:46] *** Quits: icy (~icy@user/icy) (Quit: ZNC 1.8.2 - https://znc.in)
[10:05:36] *** Joins: icy (~icy@user/icy)
[10:07:42] *** Joins: LiftLeft (~LiftLeft@154.21.114.200)
[10:11:37] *** Quits: rcernin (~rcernin@188.146.148.122.sta.wbroadband.net.au) (Ping timeout: 268 seconds)
[10:25:05] *** Quits: lilgopher (~textual@c-73-51-174-246.hsd1.il.comcast.net) (Quit: My MacBook has gone to sleep. ZZZzzz…)
[10:25:41] *** Joins: rcernin (~rcernin@188.146.148.122.sta.wbroadband.net.au)
[10:38:11] *** Quits: rcernin (~rcernin@188.146.148.122.sta.wbroadband.net.au) (Ping timeout: 258 seconds)
[10:45:35] *** Joins: lilgopher (~textual@c-73-51-174-246.hsd1.il.comcast.net)
[10:50:44] *** Joins: user30571 (~user@154.21.22.88)
[10:50:57] *** Parts: user30571 (~user@154.21.22.88) ()
[10:51:08] *** Quits: arcatech (~arcatech@user/arcatech) (Ping timeout: 250 seconds)
[10:52:12] *** Quits: lilgopher (~textual@c-73-51-174-246.hsd1.il.comcast.net) (Ping timeout: 252 seconds)
[10:53:45] *** Joins: rcernin (~rcernin@188.146.148.122.sta.wbroadband.net.au)
[10:55:17] *** Joins: lilgopher (~textual@c-73-51-174-246.hsd1.il.comcast.net)
[11:00:14] *** Quits: lilgopher (~textual@c-73-51-174-246.hsd1.il.comcast.net) (Ping timeout: 250 seconds)
[11:03:37] *** Quits: fef (~thedawn@user/thedawn) (Ping timeout: 244 seconds)
[11:04:51] *** Quits: souvik (~souvik@103.199.182.47) (Ping timeout: 265 seconds)
[11:09:15] *** Joins: lilgopher (~textual@c-73-51-174-246.hsd1.il.comcast.net)
[11:11:33] *** Quits: kulak (~kulak@user/kulak) (Read error: Connection reset by peer)
[11:11:55] *** Joins: kulak (~kulak@user/kulak)
[11:13:26] *** Quits: lilgopher (~textual@c-73-51-174-246.hsd1.il.comcast.net) (Client Quit)
[11:14:35] *** Quits: MrFantastik (~Thunderbi@98.1.62.240) (Quit: MrFantastik)
[11:22:28] *** Joins: darkapex (uid360049@user/darkapex)
[11:24:48] *** Joins: dany74q (~dany74q@igld-84-229-190-86.inter.net.il)
[11:27:06] *** Quits: rcernin (~rcernin@188.146.148.122.sta.wbroadband.net.au) (Ping timeout: 250 seconds)
[11:29:21] *** Quits: sudoforge (~sudoforge@wireguard/tunneler/sudoforge) (Read error: Connection reset by peer)
[11:33:41] *** Joins: rcernin (~rcernin@188.146.148.122.sta.wbroadband.net.au)
[11:40:45] *** Joins: mrig (~mrig@user/mrig)
[11:49:54] *** Joins: shka (~herr@109.231.62.239)
[11:51:18] *** Joins: Kane (~Kane@2a01:e34:ee89:5d90:28cd:1f19:2a74:178b)
[12:04:44] *** Quits: mrig (~mrig@user/mrig) (Ping timeout: 272 seconds)
[12:07:21] *** Joins: mrig (~mrig@user/mrig)
[12:09:24] *** Joins: menace (~someone@2001:a61:3456:4d01:dd44:321f:651a:ab7e)
[12:09:24] *** Quits: menace (~someone@2001:a61:3456:4d01:dd44:321f:651a:ab7e) (Changing host)
[12:09:24] *** Joins: menace (~someone@user/menace)
[12:11:07] *** menace is now known as Deknos
[12:14:05] *** Joins: MrFantastik (~Thunderbi@98.1.62.240)
[12:17:23] *** Joins: fef (~thedawn@user/thedawn)
[12:18:23] *** Joins: bpalmer (~user@user/bpalmer)
[12:39:55] *** Joins: souvik (~souvik@103.199.182.47)
[12:48:21] *** Joins: mikoto-chan (~mikoto-ch@ip-213-49-189-31.dsl.scarlet.be)
[12:51:39] *** Quits: andlabs (~andlabs@71.190.119.164) (Quit: My MacBook has gone to sleep. ZZZzzz…)
[12:53:48] *** Quits: bongobrown (~bongobrow@cpe-76-185-215-2.satx.res.rr.com) (Quit: Leaving)
[12:56:59] *** Quits: rcernin (~rcernin@188.146.148.122.sta.wbroadband.net.au) (Ping timeout: 265 seconds)
[13:00:33] *** Joins: andlabs (~andlabs@71.190.119.164)
[13:07:27] *** Quits: theoceaniscool (~theoceani@188.127.173.202) (Ping timeout: 244 seconds)
[13:13:42] *** Quits: souvik (~souvik@103.199.182.47) (Ping timeout: 250 seconds)
[13:18:53] *** Quits: jolan (~jolan@ec2.jolan.org) (*.net *.split)
[13:18:53] *** Quits: brb (~brb@user/brb) (*.net *.split)
[13:18:53] *** Quits: tdmackey (~tdmackey@booleanhaiku.com) (*.net *.split)
[13:18:53] *** Quits: jkovac1 (~jkovac1@user/jkovac1) (*.net *.split)
[13:18:53] *** Quits: haliucinas (~haliucina@5.20.153.21) (*.net *.split)
[13:18:53] *** Quits: Wessie (~Wessie@static.226.41.47.78.clients.your-server.de) (*.net *.split)
[13:18:53] *** Quits: jlindgren (~jlindgren@user/jlindgren) (*.net *.split)
[13:18:53] *** Quits: Archwyrm (~archwyrm@archwyrm.net) (*.net *.split)
[13:18:53] *** Quits: rk4 (~r@user/rk4) (*.net *.split)
[13:18:58] *** Joins: Erzwurm (~archwyrm@archwyrm.net)
[13:18:59] *** Joins: tdmackey_ (~tdmackey@booleanhaiku.com)
[13:19:02] *** Joins: jlindgren_ (~jlindgren@155.138.201.99)
[13:19:06] *** Joins: Wessie (~Wessie@static.226.41.47.78.clients.your-server.de)
[13:19:08] *** Joins: haliucinas (~haliucina@5.20.153.21)
[13:19:10] *** Joins: rk4 (~r@user/rk4)
[13:19:10] *** Joins: jolan (~jolan@ec2.jolan.org)
[13:19:30] *** Joins: jkovac1 (~jkovac1@user/jkovac1)
[13:20:02] *** Joins: brb (~brb@user/brb)
[13:32:08] *** Quits: mstruebing (~maex@2001:41d0:8:93c7::1) (*.net *.split)
[13:32:08] *** Quits: Patater (~patater@patater.com) (*.net *.split)
[13:32:09] *** Quits: ds (~dshoreman@user/ds) (*.net *.split)
[13:32:09] *** Quits: dupondje (~dupondje@artemis.dupie.be) (*.net *.split)
[13:32:09] *** Quits: batdog (~batdog@lnsq.elkins.co) (*.net *.split)
[13:32:13] *** Joins: batdog_ (batdog@lnsq.elkins.co)
[13:32:14] *** Joins: maex (~maex@2001:41d0:8:93c7::1)
[13:32:19] *** Joins: dshoreman (~dshoreman@user/ds)
[13:32:25] *** Joins: dupondje (~dupondje@artemis.dupie.be)
[13:34:04] *** Joins: fooflare (~fooflare@213.94.25.253)
[13:34:42] *** Joins: souvik (~souvik@47.11.59.58)
[13:34:49] *** Quits: andlabs (~andlabs@71.190.119.164) (Quit: My MacBook has gone to sleep. ZZZzzz…)
[13:35:49] *** Joins: Patater (~patater@patater.com)
[13:41:45] *** Joins: jjonah (~jjonah@p200300d5d723c400dea632fffeb3342f.dip0.t-ipconnect.de)
[13:42:28] <b0nn> https://queue.acm.org/detail.cfm?id=1871406
[13:42:54] *** Quits: mrig (~mrig@user/mrig) (Ping timeout: 265 seconds)
[13:43:23] *** Joins: mrig (~mrig@user/mrig)
[13:43:28] *** Quits: souvik (~souvik@47.11.59.58) (Read error: Connection reset by peer)
[13:43:37] <b0nn> Makes the case for programming languages to use more than the ASCII character set - but doesn't go so far as to propose examples where other characters could be used (although it does imply)
[13:43:39] *** Joins: souvik (~souvik@47.11.59.58)
[13:46:45] <bookworm> if you can't easily type a symbol with the standard keyboard it shouldn't be used as a programming syntax
[13:46:56] *** Quits: noxim (~noxim@user/noxim) (Quit: Client closed)
[13:47:44] <b0nn> ⏆
[13:49:10] <bpalmer> bookworm: the existence of a "standard" keyboard is a big assumption.
[13:49:35] <bpalmer> Different countries have had different keyboard layouts for a long while.
[13:50:02] <bpalmer> most operating systems nowadays have different input methods integrated, as well, to make it easier to input characters that are not directly on the keyboard.
[13:50:13] <bookworm> yes, but as far as special symbols go, there are some pretty standard ones every language has
[13:50:47] <b0nn> +=  editors can be made to use a key combo that produces a proscribed symbol
[13:50:54] <bookworm> sure
[13:51:03] <bpalmer> bookworm: for example, norwegian keyboard layouts traditionally make it hard to use brackets like []{}
[13:51:09] <bookworm> still easier if it's a symbol on the keyboard
[13:51:29] <bpalmer> bookworm: which is one reason that C and C++ added digraphs and trigraphs to the language (now widely considered a mistake?)
[13:51:45] <bookworm> I know, my native layout is Swiss German, which has the same problem
[13:53:31] <bookworm> but using fancy unicode Symbols is worse, can't easily differentiate them as they change shape based on the font and has very similar looking ones
[13:53:55] <bpalmer> I am mostly content with go's current built-ins/operators/conventions/etc which are mostly ascii , but it's mostly because it's familiar and I've already figured out how everything works
[13:54:58] <b0nn> yeah, chicken and egg, are keebs ascii oriented because that's what people use, or do we use ascii because that's what US layout provides
[13:56:58] <b0nn> When I was at university I had this discussion with my HCI lecturer, pointing out that the qwerty layout is alleged to be used because it /slowed/ typists down, and we've kept it for familiarity reasons
[13:57:09] <bpalmer> arguably using a few basic unicode symbols to represent channel send/receive arrows might allow for a simpler lexer and parser.
[13:58:48] *** Quits: souvik (~souvik@47.11.59.58) (Read error: Connection reset by peer)
[13:59:35] <b0nn> ☜☞
[13:59:53] <ikke> https://en.wikipedia.org/wiki/QWERTY#Properties
[14:02:25] <b0nn> lol, the citation is a bit hard to read (It's in one of the japanese character sets)
[14:02:36] *** Quits: fooflare (~fooflare@213.94.25.253) (Quit: Leaving)
[14:04:37] *** Joins: Ohlov31306 (~Ohlov3@dyndsl-091-248-236-140.ewe-ip-backbone.de)
[14:06:17] <mrig> I've discovered a bit of an irk recently with the use of the ascii capitals as a part of the language grammar, which is a bit of a shame.
[14:06:39] <mrig> I;d thought that I could use go for a project but this might be a bit of a block.
[14:06:51] <LambdaComplex> mrig: are you talking about for private vs public?
[14:07:10] <mrig> what were you discussing b0nn, I came when you'd just mentioned the use of ASCII?
[14:07:11] *** Quits: Ohlov3130 (~Ohlov3@dyndsl-085-016-110-004.ewe-ip-backbone.de) (Ping timeout: 268 seconds)
[14:07:20] <mrig> LambdaComplex: yes that's right.
[14:07:26] <LambdaComplex> mrig: what about it?
[14:07:33] *** Joins: souvik (~souvik@103.199.182.18)
[14:07:40] <mrig> there would be work arounds but it would not be the most elegant.
[14:08:06] <LambdaComplex> workaround for what, exactly?
[14:08:21] <mrig> LambdaComplex: well I'd like to be coding using Sanskrit eventually, for its context free grammar when naming things.
[14:08:45] <mrig> This forces me to map characters to ASCII and or use latin char.
[14:08:52] * LambdaComplex blinks
[14:09:07] <LambdaComplex> i don't know what i expected but it definitely was not this
[14:09:16] <mrig> the language would otherwise be superb for parsing the AST and using go:generate.
[14:09:57] <mrig> An unusual use case for sure.
[14:10:01] <mrig> but a valid one.
[14:13:37] *** Quits: schmillin (~schmillin@user/schmillin) (Quit: Leaving)
[14:14:08] <b0nn> I'm not sure if *any* programming language handles graphemes properly, least of all in the bare words
[14:15:35] <b0nn> By coincidence I am finishing off the "Write an interpreter in Go" book, and I /think/ that creating an AST that does handle graphes is doable, you just have to parse the strings properly before breaking them up into tokens
[14:16:25] <mrig> It is curious because the grammar of these older languages, define the origins of content grammatically, with their extra tenses. Perfect for memory ownership and that sort of thing.
[14:16:57] <mrig> Not of any use if you are slack with grammar but instantly usable is say C.
[14:18:01] <mrig> There is a tense in sanskrit for if data is of your making or that you got it from someone else, for example.
[14:19:46] <mrig> I hate myself for bring up the point as I love the capitals are exported system in english, it is a layer of extra grammar of the same sort, which is awesome.
[14:20:22] <LambdaComplex> honestly i kinda wish Go had a public keyword or something
[14:21:00] <LambdaComplex> seems there's a few places where they decided that "fewer keywords = inherently good" even if it results in things being non-obvious
[14:21:33] <LambdaComplex> oh, yay, you managed to avoid having `while` as a keyword. good job. now we just need to remember that `for` can have like 3 different syntaxes.
[14:22:11] *** Joins: noxim (~noxim@user/noxim)
[14:24:43] *** Joins: DeltaNova (~DeltaNova@user/deltanova)
[14:25:23] *** Joins: blyat-73 (~hjgkjhgkj@79.101.60.163)
[14:25:23] <mrig> A place holder in which you set the expression that defines the scope might be one way of doing the same.
[14:25:34] *** Joins: gggp (~textual@60.10.194.47)
[14:25:34] <mrig> export = caps
[14:25:42] <mrig> would remain as is.
[14:26:12] <mrig> export = regexp
[14:26:20] <mrig> another setting
[14:26:51] <mrig> the possibilities of go:generate are pretty awesome, seems to me to be of a similar vein.
[14:28:44] *** Quits: fef (~thedawn@user/thedawn) (Ping timeout: 244 seconds)
[14:29:02] <mikoto-chan> weird, I have defined a method against 3 functions but only 3 of them seem to work properly, did anything change in Go when it comes to methods in the past 2 years?
[14:29:27] <b0nn> lay.golang.org
[14:29:35] <b0nn> er
[14:29:39] <b0nn> play.golang.org
[14:30:23] <mikoto-chan> b0nn: was just doing that, the error message is `cmd/web/main.go:29:33: app.showSnippet undefined (type *application has no field or method showSnippet)`
[14:31:30] <mikoto-chan> https://bpa.st/JBMA
[14:31:36] <mikoto-chan> here you go.
[14:31:40] *** Quits: gggp (~textual@60.10.194.47) (Ping timeout: 272 seconds)
[14:32:18] <b0nn> exported functions can be accessed from other packages
[14:32:22] <mikoto-chan> in case you're wondering, the home function got the same signature but does work
[14:32:28] <b0nn> non-exported functions/methods cannot
[14:32:43] <mikoto-chan> so I missed the capital letters? I found these examples in a book
[14:32:52] <mikoto-chan> I was already skeptical of that
[14:33:08] <LambdaComplex> mikoto-chan: what package is handlers.go in?
[14:33:14] <LambdaComplex> is it in the main package (along with main.go)?
[14:33:57] <mikoto-chan> LambdaComplex: what do you mean by the main package? both files start with package main so I'm assuming yes?
[14:34:35] *** Joins: rcernin (~rcernin@188.146.148.122.sta.wbroadband.net.au)
[14:35:00] <LambdaComplex> mikoto-chan: and they're both in the same directory?
[14:35:22] <mikoto-chan> LambdaComplex: sure.
[14:35:28] <LambdaComplex> oh, yeah, main.go just has "applicaiton{" rather than "somepackage.application"
[14:37:01] <mikoto-chan> LambdaComplex: is that the error? I don't see any spelling mistake
[14:37:11] <LambdaComplex> no, i just can't spell
[14:38:12] <mikoto-chan> note that I accessed a struct element in the home function `app.ErrorLog.Println(err.Error())` but not in the other two functions
[14:39:15] <mikoto-chan> I think I found the error
[14:47:55] <mikoto-chan> I missed an import, weird
[14:49:38] *** Joins: gggp (~textual@60.10.194.47)
[14:51:38] *** Quits: dany74q (~dany74q@igld-84-229-190-86.inter.net.il) (Ping timeout: 252 seconds)
[14:52:06] *** Joins: dany74q (~dany74q@IGLD-84-229-190-86.inter.net.il)
[14:56:20] *** Joins: dr0n (~nabromov@94.11.23.235)
[15:16:14] *** Quits: gggp (~textual@60.10.194.47) (Ping timeout: 272 seconds)
[15:16:39] *** Joins: gggp (~textual@60.10.194.47)
[15:18:08] *** Quits: rcernin (~rcernin@188.146.148.122.sta.wbroadband.net.au) (Ping timeout: 272 seconds)
[15:29:42] *** Joins: rcernin (~rcernin@188.146.148.122.sta.wbroadband.net.au)
[15:39:41] *** Quits: pepee (~user@user/pepee) (Ping timeout: 268 seconds)
[15:42:50] *** Quits: cync (~blah@192.180.187.81.in-addr.arpa) (Quit: No Ping reply in 180 seconds.)
[15:43:02] *** Joins: cync (~blah@192.180.187.81.in-addr.arpa)
[15:52:47] <Rudde> Having a pointer to an slice of structs, when running Elem() on it, the resulting kind is struct insted of slice, why is this?
[15:55:46] *** Joins: milosz (~milosz@user/milosz)
[15:56:10] *** Joins: whaley (~whaley@2603-6080-a312-c426-0402-c38d-e6bc-7223.res6.spectrum.com)
[15:57:53] *** Joins: Garb0 (~Garb0@user/garb0)
[16:02:18] *** Quits: blyat-73 (~hjgkjhgkj@79.101.60.163) (Quit: Leaving)
[16:02:58] *** Quits: whaley (~whaley@2603-6080-a312-c426-0402-c38d-e6bc-7223.res6.spectrum.com) (Read error: Connection reset by peer)
[16:03:56] *** Joins: whaley (~whaley@2603-6080-a312-c426-0402-c38d-e6bc-7223.res6.spectrum.com)
[16:07:57] *** Quits: whaley (~whaley@2603-6080-a312-c426-0402-c38d-e6bc-7223.res6.spectrum.com) (Read error: Connection reset by peer)
[16:08:35] *** Joins: whaley (~whaley@2603-6080-a312-c426-0402-c38d-e6bc-7223.res6.spectrum.com)
[16:14:18] *** Joins: oxum (~oxum@136.185.148.86)
[16:17:34] *** Quits: whaley (~whaley@2603-6080-a312-c426-0402-c38d-e6bc-7223.res6.spectrum.com) (Quit: My MacBook has gone to sleep. ZZZzzz…)
[16:18:18] *** Quits: rcernin (~rcernin@188.146.148.122.sta.wbroadband.net.au) (Ping timeout: 272 seconds)
[16:19:57] *** dshoreman is now known as ds
[16:20:52] *** Quits: oxum (~oxum@136.185.148.86) (Remote host closed the connection)
[16:21:27] *** Joins: foobaz212 (~foobaz212@cpc84737-aztw28-2-0-cust8.18-1.cable.virginm.net)
[16:24:09] *** Joins: saml (~saml@cpe-74-73-80-162.nyc.res.rr.com)
[16:24:14] *** Joins: oxum (~oxum@136.185.148.86)
[16:33:42] <j416> Rudde: show code
[16:33:49] <Rudde> I figured it out
[16:34:00] <Rudde> I took the type insted of kind
[16:34:20] <Rudde> and apparently ther eis no array or slice type, only kind, which is why I got the underlying kind of the type
[16:38:02] *** Quits: oxum (~oxum@136.185.148.86) (Remote host closed the connection)
[16:39:30] *** Joins: oxum (~oxum@136.185.148.86)
[16:41:28] *** Quits: oxum (~oxum@136.185.148.86) (Remote host closed the connection)
[16:49:50] *** Quits: cross (~cross@spitfire.i.gajendra.net) (Quit: leaving)
[16:50:36] *** Quits: gggp (~textual@60.10.194.47) (Quit: My MacBook has gone to sleep. ZZZzzz…)
[16:53:32] *** Joins: cross (~cross@spitfire.i.gajendra.net)
[17:01:50] *** Quits: foobaz212 (~foobaz212@cpc84737-aztw28-2-0-cust8.18-1.cable.virginm.net) (Quit: Client closed)
[17:02:25] *** Joins: andlabs (~andlabs@71.190.119.164)
[17:06:08] *** Quits: cross (~cross@spitfire.i.gajendra.net) (Quit: leaving)
[17:07:15] *** Joins: cross (~cross@spitfire.i.gajendra.net)
[17:07:32] *** Joins: gilesc (~textual@cpe-172-112-18-165.socal.res.rr.com)
[17:08:38] *** Quits: cross (~cross@spitfire.i.gajendra.net) (Client Quit)
[17:08:57] *** Joins: amahl (~amahl@dsl-jklbng12-54fbca-64.dhcp.inet.fi)
[17:09:38] *** Joins: cross (~cross@spitfire.i.gajendra.net)
[17:18:45] *** Quits: gilesc (~textual@cpe-172-112-18-165.socal.res.rr.com) (Quit: My MacBook has gone to sleep. ZZZzzz…)
[17:22:06] *** Joins: oxum (~oxum@136.185.148.86)
[17:22:33] *** Joins: dmathieu (~textual@78.203.212.55)
[17:30:16] *** Joins: siika (~siika@139.226.40.153)
[17:30:46] *** Quits: siika_ (~siika@139.226.50.205) (Ping timeout: 252 seconds)
[17:36:28] *** Quits: oxum (~oxum@136.185.148.86) (Remote host closed the connection)
[17:36:40] *** Joins: oxum (~oxum@136.185.148.86)
[17:37:19] *** Joins: hexfive (~eric@50.35.83.177)
[17:42:28] *** Quits: hexfive (~eric@50.35.83.177) (Quit: WeeChat 3.0)
[17:45:41] *** Joins: josta (~josta@23.226.133.75)
[17:46:02] *** Joins: shiroyasha (~shiroyash@ec2-3-124-70-31.eu-central-1.compute.amazonaws.com)
[17:46:05] <mikoto-chan> why is /usr/lib/go/bin/gopls; not in my $PATH?
[17:46:27] <mikoto-chan> I installed go-tools through my distribution's package manager.
[17:47:57] *** Quits: dr0n (~nabromov@94.11.23.235) (Ping timeout: 265 seconds)
[17:50:34] <micah> mikoto-chan: /usr/lib/go/bin is typically not in a user's $PATH, unless you add it yourself
[17:54:38] *** Quits: dmathieu (~textual@78.203.212.55) (Quit: My MacBook has gone to sleep. ZZZzzz…)
[17:56:14] <mikoto-chan> micah: should I? vim-go doesn't seem to work out of the box and complained about gopls not working, I linked it to my path but I probably need the other tools as well.
[17:57:14] *** Quits: Rayke (rayke@user/rayke) (Quit: WeeChat 3.2)
[17:57:42] *** Joins: Rayke (rayke@user/rayke)
[17:58:58] *** Quits: Rayke (rayke@user/rayke) (Client Quit)
[17:59:34] *** Joins: Rayke (rayke@user/rayke)
[18:00:01] *** Joins: gggp (~textual@60.10.194.47)
[18:00:12] <micah> mikoto-chan: sorry, i'm not a vim user, so I do not know
[18:00:37] <mikoto-chan> doesn't matter. I'll figure this out.
[18:06:56] *** Joins: burningserenity (~burningse@2603-9001-0f01-ad99-0000-0000-0000-1000.inf6.spectrum.com)
[18:16:13] *** Joins: w0x12ef (~w0x12ef@60.10.194.47)
[18:20:12] *** Quits: saml (~saml@cpe-74-73-80-162.nyc.res.rr.com) (Remote host closed the connection)
[18:22:03] <mikoto-chan> alright, I have youcompleteme installed which is reliant on gopls as its LSP but since I work with multiple files that all start with `package main` gopls doesn't look for variable names in other files, any clue how to fix this?
[18:22:12] *** Quits: josta (~josta@23.226.133.75) (Quit: My MacBook has gone to sleep. ZZZzzz…)
[18:22:19] *** Joins: bbear (~znc@21212.s.t4vps.eu)
[18:22:41] <bbear> hello, do you know a state-of-the-art framework to write an API in go ?
[18:22:56] <bbear> I know for example python has fastapi, do you have something as good in golang ?
[18:34:28] *** Quits: mrig (~mrig@user/mrig) (Ping timeout: 272 seconds)
[18:34:31] <bpalmer> I don't know if it's what you are looking for, but grpc is one way to get a service up and running quickly.
[18:34:54] *** Joins: josta (~josta@68.235.36.108)
[18:34:56] *** Joins: mrig (~mrig@user/mrig)
[18:35:17] <bpalmer> although grpc is not go-specific (and some parts of it are very frustrating for go)
[18:36:08] <bbear> i'm looking for a rest-like api
[18:36:12] <bbear> so HTTP basically
[18:36:25] <bbear> and automatic swagger generation
[18:36:47] <bpalmer> swagger?
[18:37:29] <bpalmer> ah. Well, outside of my ken.
[18:39:01] *** Quits: josta (~josta@68.235.36.108) (Client Quit)
[18:39:33] *** Joins: gilesc (~textual@cpe-172-112-18-165.socal.res.rr.com)
[18:41:46] *** Joins: josta (~josta@23.226.133.69)
[18:44:04] *** Quits: josta (~josta@23.226.133.69) (Client Quit)
[18:45:05] *** Joins: josta (~josta@68.235.36.108)
[18:46:31] <j416> bbear: stdlib
[18:47:04] *** Quits: andlabs (~andlabs@71.190.119.164) (Quit: My MacBook has gone to sleep. ZZZzzz…)
[18:47:32] *** Joins: daveed (~ride@user/daveed)
[18:47:54] *** Quits: josta (~josta@68.235.36.108) (Client Quit)
[18:50:13] *** Joins: josta (~josta@23.226.133.81)
[18:55:39] *** Quits: gilesc (~textual@cpe-172-112-18-165.socal.res.rr.com) (Quit: My MacBook has gone to sleep. ZZZzzz…)
[18:58:23] *** Quits: josta (~josta@23.226.133.81) (Quit: My MacBook has gone to sleep. ZZZzzz…)
[18:58:59] *** Joins: andlabs (~andlabs@2600:1017:b40e:8622:b1e5:54ef:5afe:e59)
[19:01:29] *** Quits: farmstatejake (~farmstate@user/farmstatejake) (Read error: Connection reset by peer)
[19:03:27] *** Joins: w0x12ef_ (~w0x12ef@60.10.194.47)
[19:04:14] *** Quits: gggp (~textual@60.10.194.47) (Ping timeout: 272 seconds)
[19:06:00] *** Joins: gggp (~textual@60.10.194.47)
[19:06:46] *** Quits: w0x12ef (~w0x12ef@60.10.194.47) (Ping timeout: 272 seconds)
[19:09:51] *** Quits: Crassus (~Crassus@user/crassus) (Quit: Textual IRC Client: www.textualapp.com)
[19:11:15] *** Joins: dmathieu (~textual@78.203.212.55)
[19:13:59] *** Joins: josta (~josta@68.235.36.102)
[19:20:50] *** Quits: josta (~josta@68.235.36.102) (Quit: My MacBook has gone to sleep. ZZZzzz…)
[19:24:30] *** Joins: josta (~josta@68.235.36.107)
[19:24:30] *** Quits: dmathieu (~textual@78.203.212.55) (Ping timeout: 258 seconds)
[19:26:04] *** Quits: josta (~josta@68.235.36.107) (Client Quit)
[19:26:12] <pinky> https://stackoverflow.com/questions/11066946/partly-json-unmarshal-into-a-map-in-go#11067084
[19:26:29] *** Joins: dmathieu (~textual@78.203.212.55)
[19:26:37] <pinky> is there a way to do the reverse? marshal a struct into a map[string][]byte or some such?
[19:27:47] <pinky> what i really want to do is "marshal" my struct into a kube secret (v1.Secret.Data)
[19:28:29] <pinky> where things that are already a []byte are still []byte (not base64 encoded), but things like time.Time are converted into a json friendly representation (that fits into a []byte)
[19:29:04] <pinky> I guess absent a better idea I'll use a map[string][]byte literal and handle the dates myself
[19:29:10] <pinky> just seens not elegant
[19:29:12] *** Quits: mikoto-chan (~mikoto-ch@ip-213-49-189-31.dsl.scarlet.be) (Ping timeout: 252 seconds)
[19:29:52] *** Quits: andlabs (~andlabs@2600:1017:b40e:8622:b1e5:54ef:5afe:e59) (Quit: My MacBook has gone to sleep. ZZZzzz…)
[19:33:55] <tharkun> Good $DAY I downloaded and extracted https://golang.org/dl/go1.16.5.linux-amd64.tar.gz to my usual GOPATH which is $HOME/.go if I $go version I get -> go version go1.16.5 linux/amd64 I I do go env GOROOT I get -> missing $GOPATH but echo $GOPATH does give me the output $HOME/go which is correct for my setup. What am I missing?
[19:35:25] <tharkun> (edited) Good $DAY I downloaded and extracted https://golang.org/dl/go1.16.5.linux-amd64.tar.gz to my usual $PATH which is $HOME/.go if I $go version I get -> go version go1.16.5 linux/amd64 I I do go env GOROOT I get -> missing $GOPATH but echo $GOPATH does give me the output $HOME/go which is correct for my setup. What am I missing?
[19:36:02] *** Joins: josta (~josta@23.226.133.89)
[19:36:26] *** Joins: mikoto-chan (~mikoto-ch@ip-213-49-189-31.dsl.scarlet.be)
[19:37:34] *** Quits: josta (~josta@23.226.133.89) (Client Quit)
[19:37:48] *** Quits: gggp (~textual@60.10.194.47) (Ping timeout: 272 seconds)
[19:37:52] *** Joins: w0x12ef (~w0x12ef@60.10.194.47)
[19:39:42] *** Quits: w0x12ef_ (~w0x12ef@60.10.194.47) (Ping timeout: 272 seconds)
[19:40:46] *** Joins: gggp (~textual@60.10.194.47)
[19:42:49] *** Joins: josta (~josta@68.235.36.108)
[19:42:55] *** Quits: smitop (~smitop@user/smitop) (Quit: Ping timeout (120 seconds))
[19:43:24] *** Joins: smitop (~smitop@user/smitop)
[19:43:54] *** Quits: foobaz (~oofabz@199.58.97.156) (Quit: ZNC 1.8.2 - https://znc.in)
[19:44:07] *** Joins: foobaz (~oofabz@phoenix.frammish.org)
[19:46:13] *** Joins: fef (~thedawn@user/thedawn)
[19:49:01] *** Joins: gilesc (~textual@cpe-172-112-18-165.socal.res.rr.com)
[19:49:11] *** Joins: andlabs (~andlabs@ool-ad034a4d.dyn.optonline.net)
[19:50:24] *** Quits: gggp (~textual@60.10.194.47) (Quit: My MacBook has gone to sleep. ZZZzzz…)
[19:51:46] *** Quits: mikoto-chan (~mikoto-ch@ip-213-49-189-31.dsl.scarlet.be) (Read error: No route to host)
[19:52:41] *** Joins: mikoto-chan (~mikoto-ch@ip-213-49-189-31.dsl.scarlet.be)
[19:53:11] *** Joins: ente (~ente@p54a445ae.dip0.t-ipconnect.de)
[19:54:02] *** Quits: josta (~josta@68.235.36.108) (Quit: My MacBook has gone to sleep. ZZZzzz…)
[19:54:59] *** Quits: kulak (~kulak@user/kulak) (Read error: Connection reset by peer)
[19:55:18] *** Joins: josta (~josta@23.226.133.87)
[19:55:49] *** Joins: kulak (~kulak@user/kulak)
[19:56:21] *** Quits: siika (~siika@139.226.40.153) (Remote host closed the connection)
[19:56:45] *** Joins: siika (~siika@139.226.50.41)
[19:57:19] *** Joins: zoey (~zoey@2a02:8084:a080:9e00:3fae:994c:3fdc:274d)
[19:59:46] *** Quits: w0x12ef (~w0x12ef@60.10.194.47) (Ping timeout: 258 seconds)
[20:05:32] *** Quits: acidsys (~LSD@2.lsd.systems) (Excess Flood)
[20:05:54] *** Quits: souvik (~souvik@103.199.182.18) (Quit: Lost terminal)
[20:06:44] *** Joins: LSD (~LSD@2.lsd.systems)
[20:07:10] *** Quits: dmathieu (~textual@78.203.212.55) (Quit: My MacBook has gone to sleep. ZZZzzz…)
[20:12:14] *** Quits: josta (~josta@23.226.133.87) (Quit: My MacBook has gone to sleep. ZZZzzz…)
[20:14:09] *** Joins: arcatech (~arcatech@user/arcatech)
[20:16:49] *** Joins: dmathieu (~textual@78.203.212.55)
[20:18:07] *** Quits: gilesc (~textual@cpe-172-112-18-165.socal.res.rr.com) (Quit: My MacBook has gone to sleep. ZZZzzz…)
[20:18:10] *** Joins: josta (~josta@68.235.36.110)
[20:19:37] *** Quits: meinside (uid24933@id-24933.brockwell.irccloud.com) (Quit: Connection closed for inactivity)
[20:20:46] *** Joins: gilesc (~textual@cpe-172-112-18-165.socal.res.rr.com)
[20:23:40] *** Quits: yoonkn (~user@175.197.208.79) (Read error: Connection reset by peer)
[20:25:04] *** Quits: josta (~josta@68.235.36.110) (Quit: My MacBook has gone to sleep. ZZZzzz…)
[20:26:50] *** Quits: ente (~ente@p54a445ae.dip0.t-ipconnect.de) (Quit: WeeChat 3.2)
[20:27:41] *** Quits: dmathieu (~textual@78.203.212.55) (Quit: My MacBook has gone to sleep. ZZZzzz…)
[20:32:21] *** Quits: dany74q (~dany74q@IGLD-84-229-190-86.inter.net.il) (Ping timeout: 258 seconds)
[20:33:55] *** Joins: josta (~josta@23.226.133.85)
[20:35:50] *** Quits: josta (~josta@23.226.133.85) (Client Quit)
[20:37:37] <crowbar> tharkun: I don't think `env GOROOT` is doing what you think.  it's trying to run a program named GOPATH.  do you want env | grep GOPATH ?
[20:37:55] *** Quits: mikoto-chan (~mikoto-ch@ip-213-49-189-31.dsl.scarlet.be) (Read error: No route to host)
[20:40:37] *** LSD is now known as acidsys
[20:40:38] *** Quits: gilesc (~textual@cpe-172-112-18-165.socal.res.rr.com) (Quit: My MacBook has gone to sleep. ZZZzzz…)
[20:42:28] *** Joins: josta (~josta@68.235.36.99)
[20:42:35] *** Joins: CoolerX (~CoolerX@user/coolerx)
[20:44:24] *** Quits: josta (~josta@68.235.36.99) (Client Quit)
[20:51:05] *** Joins: gilesc (~textual@cpe-172-112-18-165.socal.res.rr.com)
[20:51:18] *** Quits: burningserenity (~burningse@2603-9001-0f01-ad99-0000-0000-0000-1000.inf6.spectrum.com) (Quit: ZNC 1.8.2 - https://znc.in)
[20:53:13] *** Joins: NCS_One (~NCS_One@bl11-90-133.dsl.telepac.pt)
[20:54:19] *** Joins: burningserenity (~burningse@142-196-178-216.res.spectrum.com)
[20:54:52] *** Quits: thing (~thing@user/thing) (Remote host closed the connection)
[20:55:12] *** Joins: thing (~thing@user/thing)
[20:57:20] *** Quits: CoolerX (~CoolerX@user/coolerx) (Quit: Leaving)
[20:59:40] *** Joins: Eddward_ (~Eddward@207.138.204.132)
[20:59:56] *** Joins: dany74q (~dany74q@IGLD-84-229-190-86.inter.net.il)
[21:01:07] <fizzie> crowbar: `go env GOROOT`, not `env GOROOT`. The former is just fine.
[21:01:29] <crowbar> thanks. my bad.
[21:04:32] *** Quits: fef (~thedawn@user/thedawn) (Quit: Leaving)
[21:06:22] *** Quits: noxim (~noxim@user/noxim) (Quit: Client closed)
[21:06:48] *** Quits: be3uykpy (~be3uykpy@141.226.9.247) (Quit: Leaving)
[21:08:43] *** Quits: gilesc (~textual@cpe-172-112-18-165.socal.res.rr.com) (Quit: My MacBook has gone to sleep. ZZZzzz…)
[21:19:02] *** Joins: dmathieu (~textual@78.203.212.55)
[21:19:07] *** Joins: Torr (~Torr@user/torr)
[21:19:11] *** Quits: amahl (~amahl@dsl-jklbng12-54fbca-64.dhcp.inet.fi) (Remote host closed the connection)
[21:20:26] *** Joins: amahl (~amahl@dsl-jklbng12-54fbca-64.dhcp.inet.fi)
[21:20:39] *** Quits: dany74q (~dany74q@IGLD-84-229-190-86.inter.net.il) (Ping timeout: 258 seconds)
[21:25:09] *** Quits: amahl (~amahl@dsl-jklbng12-54fbca-64.dhcp.inet.fi) (Remote host closed the connection)
[21:25:47] *** Joins: amahl (~amahl@dsl-jklbng12-54fbca-64.dhcp.inet.fi)
[21:26:08] *** Joins: dr0n (~nabromov@94.11.23.235)
[21:29:26] *** Quits: kmerfeld (~kmerfeld@2600:1700:8c31:a00:dea6:32ff:fe93:748) (Ping timeout: 250 seconds)
[21:32:45] *** Quits: amahl (~amahl@dsl-jklbng12-54fbca-64.dhcp.inet.fi) (Remote host closed the connection)
[21:34:11] *** Joins: amahl (~amahl@dsl-jklbng12-54fbca-64.dhcp.inet.fi)
[21:34:17] *** Quits: dmathieu (~textual@78.203.212.55) (Quit: My MacBook has gone to sleep. ZZZzzz…)
[21:39:00] *** Joins: mikoto-chan (~mikoto-ch@ip-213-49-189-31.dsl.scarlet.be)
[21:40:29] *** Quits: amahl (~amahl@dsl-jklbng12-54fbca-64.dhcp.inet.fi) (Remote host closed the connection)
[21:41:08] *** Joins: amahl (~amahl@dsl-jklbng12-54fbca-64.dhcp.inet.fi)
[21:44:22] *** Quits: eivindr_ (~eivindr@99.109-247-211.customer.lyse.net) (Quit: ZNC 1.8.2 - https://znc.in)
[21:49:12] *** Joins: foobaz212 (~foobaz212@cpc84737-aztw28-2-0-cust8.18-1.cable.virginm.net)
[21:50:35] *** Joins: hellla (~hellla@49.49.242.166)
[21:50:53] *** Quits: keiser009107 (~keiser@83.25.191.2.ipv4.supernova.orange.pl) (Quit: The Lounge - https://thelounge.chat)
[21:51:57] *** Joins: keiser009107 (~keiser@83.25.191.2.ipv4.supernova.orange.pl)
[21:52:43] *** Parts: hellla (~hellla@49.49.242.166) ()
[21:58:52] *** Quits: cync (~blah@192.180.187.81.in-addr.arpa) (Quit: No Ping reply in 180 seconds.)
[22:00:15] *** Joins: cync (~blah@192.180.187.81.in-addr.arpa)
[22:08:49] *** Joins: tebruno99 (~quassel-c@c-67-175-180-140.hsd1.il.comcast.net)
[22:12:05] *** Quits: oxum (~oxum@136.185.148.86) (Remote host closed the connection)
[22:19:45] *** Quits: kulak (~kulak@user/kulak) (Read error: Connection reset by peer)
[22:20:40] *** Joins: kulak (~kulak@user/kulak)
[22:20:50] *** Joins: pepee (~user@user/pepee)
[22:23:08] *** Quits: kulak (~kulak@user/kulak) (Read error: Connection reset by peer)
[22:23:45] *** Joins: kulak (~kulak@user/kulak)
[22:25:17] *** Quits: kulak (~kulak@user/kulak) (Read error: Connection reset by peer)
[22:25:17] *** Quits: MrFantastik (~Thunderbi@98.1.62.240) (Remote host closed the connection)
[22:26:00] *** Joins: kulak (~kulak@user/kulak)
[22:27:36] *** Quits: predmijat (~predmijat@mail.strogopro.com) (Quit: bye)
[22:27:47] *** Joins: MrFantastik (~Thunderbi@98.1.62.240)
[22:29:12] *** Joins: predmijat (~predmijat@mail.strogopro.com)
[22:33:03] *** Quits: kulak (~kulak@user/kulak) (Read error: Connection reset by peer)
[22:33:37] *** Joins: kulak (~kulak@user/kulak)
[22:36:04] *** Joins: kaleido (~adam@user/kaleido)
[22:36:30] *** Quits: Garb0 (~Garb0@user/garb0) (Ping timeout: 265 seconds)
[22:37:28] *** Joins: Garb0 (~Garb0@user/garb0)
[22:49:08] *** Joins: Guest53 (~textual@170.250.221.149)
[22:49:56] *** Quits: amahl (~amahl@dsl-jklbng12-54fbca-64.dhcp.inet.fi) (Remote host closed the connection)
[22:51:21] *** Quits: Guest53 (~textual@170.250.221.149) (Client Quit)
[22:51:56] *** Joins: ajmag (~ajmag@117.200.114.217)
[22:52:09] <dr0n> Hello, trying to get the bit-shift (<<) working within a function, but I am not able; I have the following example, https://play.golang.org/p/4NbuPuX0m0G
[22:52:27] *** Joins: amahl (~amahl@dsl-jklbng12-54fbca-64.dhcp.inet.fi)
[22:52:42] <dr0n> i think finalValue2 is not able to keep such a large number
[22:52:59] <dr0n> but the << requires int/int64/uint's to be used
[22:53:06] <dr0n> is there a way this to be done
[22:53:14] *** Joins: Guest53 (~textual@170.250.221.149)
[22:53:36] <dr0n> the goal is to remove the math.Pow usage
[22:59:11] *** Quits: Guest53 (~textual@170.250.221.149) (Quit: My MacBook has gone to sleep. ZZZzzz…)
[23:01:38] *** Quits: MrFantastik (~Thunderbi@98.1.62.240) (Ping timeout: 265 seconds)
[23:07:06] <foobaz> dr0n: how do you like this solution https://play.golang.org/p/rE0bhae-IfU
[23:08:41] *** Joins: bodhi (~bodhi@c-73-93-87-220.hsd1.ca.comcast.net)
[23:09:06] <fizzie> Calling 2^(n-1) "Square" is an odd choice.
[23:10:29] <dr0n> foobaz:  it's ok, but sorry - I was trying to find out, why I am getting zero response towards number << [large number]
[23:10:57] <dr0n> fizzie:  the solution is alright, but I was trying to see how does << compare to math.Pow
[23:11:15] <dr0n> just cannot get the type conversion working :<
[23:11:16] <foobaz> you already know the answer, it's because uint64 is not large enough to store the number
[23:11:21] <dr0n> there is an example, of what I would expect to happen
[23:11:38] <foobaz> the Lsh() function i use is the same operation as <<
[23:12:05] <foobaz> my code does the same thing as yours, but with all integer math, no floats and no Pow()
[23:13:00] <dr0n> https://play.golang.org/p/rnSh2L62--n
[23:13:41] <dr0n> foobaz:  yes, but I was just trying to do a quick speed compartion between both math vs << usage
[23:14:15] <dr0n> foobaz:  otherwise, your solution is valid, and looks good!
[23:14:27] <seebs> 2^(n-1) is square for odd n, so it's right half the time
[23:15:49] <dr0n> seebs:  you are ferring to (value.Lsh(&one, digit-1)) from foobaz code?
[23:16:55] *** Quits: foobaz212 (~foobaz212@cpc84737-aztw28-2-0-cust8.18-1.cable.virginm.net) (Quit: Client closed)
[23:18:07] <dr0n> it's alright guys, I will figure it out
[23:18:09] <dr0n> thanks!
[23:20:57] <seebs> i was talking about the "calling 2^(n-1) Square is an odd choice" comment
[23:23:59] *** Quits: tebruno99 (~quassel-c@c-67-175-180-140.hsd1.il.comcast.net) (Read error: Connection reset by peer)
[23:27:12] *** Quits: qwedfg (~qwedfg@user/qwedfg) (Quit: ZNC - https://znc.in)
[23:27:33] *** Joins: qwedfg (~qwedfg@user/qwedfg)
[23:27:44] *** Quits: dr0n (~nabromov@94.11.23.235) (Ping timeout: 265 seconds)
[23:28:39] *** Joins: dr0n (~nabromov@94.11.23.235)
[23:29:35] <dr0n> Thank you seebs
[23:33:09] *** Joins: lupine (~gulag@user/communistwolf)
[23:33:25] *** Quits: CommunistWolf (~gulag@user/communistwolf) (Ping timeout: 256 seconds)
[23:33:40] *** Quits: ajmag (~ajmag@117.200.114.217) (Ping timeout: 246 seconds)
[23:34:36] *** lupine is now known as CommunistWolf
[23:44:50] *** Joins: be3uykpy (~be3uykpy@141.226.9.247)
[23:47:24] *** Joins: Garb00 (~Garb0@user/garb0)
[23:48:11] *** Joins: kayprish (~kayprish@46.240.143.86)
[23:49:42] *** Joins: theoceaniscool (~theoceani@188.127.173.202)
[23:50:30] *** Quits: Garb0 (~Garb0@user/garb0) (Ping timeout: 272 seconds)
[23:51:41] *** Joins: MrFantastik (~Thunderbi@cpe-69-204-101-67.buffalo.res.rr.com)
[23:55:33] <dr0n> resolved it; it was a mistake trying to convert the types to get the final result, where I can just use [return 1 << (digit -1 ), nil]
[23:58:55] *** Quits: MrFantastik (~Thunderbi@cpe-69-204-101-67.buffalo.res.rr.com) (Ping timeout: 268 seconds)
