[00:01:05] *** Quits: wyclif (~wyclif@user/wyclif) (Ping timeout: 265 seconds)
[00:01:35] *** Joins: wyclif (~wyclif@user/wyclif)
[00:02:07] *** Joins: otisolsen70 (~otisolsen@xd4ed80b5.cust.hiper.dk)
[00:02:14] *** Quits: pro_z (~pro_z@37.214.34.140) (Ping timeout: 260 seconds)
[00:02:18] *** Quits: srhm (~srhm@user/srhm) (Read error: Connection reset by peer)
[00:02:46] *** Joins: srhm (~srhm@user/srhm)
[00:03:48] *** Quits: thiras (~thiras@user/thiras) (Ping timeout: 268 seconds)
[00:05:23] *** Quits: nomic (~nomic@185.217.117.73) (Quit: Leaving)
[00:05:41] *** Joins: nomic (~nomic@185.217.117.73)
[00:06:51] *** Joins: leitz (~LeamHall@cpe-173-172-58-72.tx.res.rr.com)
[00:06:53] *** Quits: wyclif (~wyclif@user/wyclif) (Ping timeout: 265 seconds)
[00:06:56] *** Quits: Mattiaslndstrm (~Mattiasln@c188-148-207-108.bredband.tele2.se) (Quit: My MacBook has gone to sleep. ZZZzzz…)
[00:07:09] *** Joins: wyclif (~wyclif@user/wyclif)
[00:07:42] *** Joins: DaNeenjah (~jake@adsl-74-230-6-204.hsv.bellsouth.net)
[00:08:14] *** Joins: Pickchea (~private@user/pickchea)
[00:08:26] *** Quits: oriba (~oriba@dynamic-078-055-079-043.78.55.pool.telefonica.de) (Quit: https://quassel-irc.org - Chat comfortably. Anywhere.)
[00:09:31] *** Joins: EvilDMP (~textual@django/moderator/EvilDMP)
[00:09:44] *** Quits: comet23 (uid517725@user/comet23) (Quit: Connection closed for inactivity)
[00:09:49] *** Joins: LuksNuke (~LuksNuke@ip-146-0-191-111.dyn.luxfibre.pt.lu)
[00:10:42] *** Quits: greedom (~greedom@2001:16b8:2eb0:7d00:4d9f:6127:44e2:50f3) (Remote host closed the connection)
[00:12:10] *** Quits: wyclif (~wyclif@user/wyclif) (Ping timeout: 260 seconds)
[00:12:40] *** Joins: wyclif (~wyclif@user/wyclif)
[00:15:11] *** Quits: fdan (~fdan@103.215.168.1) (Quit: Client closed)
[00:17:17] *** Joins: pycode (~pycode@2001:b07:5d28:551:e718:27c7:7a58:f938)
[00:17:46] *** Quits: wyclif (~wyclif@user/wyclif) (Ping timeout: 268 seconds)
[00:17:53] *** Joins: int3l (~int3l@78-83-124-208.spectrumnet.bg)
[00:18:28] *** Joins: wyclif (~wyclif@user/wyclif)
[00:18:32] *** Quits: int3l (~int3l@78-83-124-208.spectrumnet.bg) (Client Quit)
[00:18:46] *** Quits: xaltsc (~xaltsc@user/xaltsc) (Quit: WeeChat 2.8)
[00:19:37] *** Quits: trace987 (~trace@dynamic-002-247-249-191.2.247.pool.telefonica.de) (Ping timeout: 252 seconds)
[00:20:09] *** Joins: int3l (~int3l@78-83-124-208.spectrumnet.bg)
[00:22:20] <seds> does python provide a library to its shell interpreter? IPython has ipython_start() to starting an interpreter on runtime, I wonder if python's builtin has something similar
[00:22:24] *** Quits: EgonX (~EgonX@2601:2c6:47f:9c18:96e:fc0e:e7fc:19d1) (Quit: Textual IRC Client: www.textualapp.com)
[00:22:37] <Yhg1s> seds: Python *is* 'its shell interpreter'.
[00:22:59] <Yhg1s> seds: there is, however, the 'code' module, which emulates the regular interpreter.
[00:23:19] *** Quits: wyclif (~wyclif@user/wyclif) (Ping timeout: 268 seconds)
[00:23:26] *** Joins: trace987 (~trace@dynamic-002-247-249-191.2.247.pool.telefonica.de)
[00:23:37] *** Quits: georgios (~georgios@user/georgios) (Ping timeout: 252 seconds)
[00:23:39] *** Joins: xrogaan (~xrogaan@user/xrogaan)
[00:23:40] *** Joins: wyclif (~wyclif@user/wyclif)
[00:23:54] <seds> Yhg1s: code module is what I am looking for
[00:26:47] *** Quits: magla (~gelignite@55d408e5.access.ecotel.net) (Quit: Stay safe!)
[00:28:50] *** Quits: wyclif (~wyclif@user/wyclif) (Ping timeout: 260 seconds)
[00:29:13] *** Joins: wyclif (~wyclif@user/wyclif)
[00:30:29] *** Joins: fanis30 (~fanis30@adsl-213.37.6.3.tellas.gr)
[00:32:22] *** Quits: ircuser-1 (~Johnny@71.63.241.168) (Quit: because)
[00:33:00] *** Quits: FinnElija (~finn_elij@user/finn-elija/x-0085643) (Quit: FinnElija)
[00:33:20] *** Joins: Babak (~babak@user/babak-1/x-7502322)
[00:34:26] *** Quits: wyclif (~wyclif@user/wyclif) (Ping timeout: 265 seconds)
[00:34:42] *** Joins: wyclif (~wyclif@user/wyclif)
[00:34:51] *** Quits: pluri (~pluri@user/pluri) (Quit: My MacBook has gone to sleep. ZZZzzz…)
[00:38:49] *** Parts: Babak (~babak@user/babak-1/x-7502322) ()
[00:39:08] *** Joins: FinnElija (~finn_elij@user/finn-elija/x-0085643)
[00:39:25] *** Quits: wyclif (~wyclif@user/wyclif) (Ping timeout: 252 seconds)
[00:40:13] *** Joins: wyclif (~wyclif@user/wyclif)
[00:41:03] *** Joins: thiras (~thiras@user/thiras)
[00:44:30] *** Joins: elkalamar (elkalamar@gateway/vpn/airvpn/elkalamar)
[00:45:04] *** Quits: wyclif (~wyclif@user/wyclif) (Ping timeout: 252 seconds)
[00:45:05] *** Quits: Haxxa (~Haxxa@116-255-6-75.ip4.superloop.com) (Quit: Haxxa flies away.)
[00:45:28] *** Joins: EgonX (~EgonX@2601:2c6:47f:9c18:e0bd:d0d1:5345:9a23)
[00:45:45] *** Joins: wyclif (~wyclif@user/wyclif)
[00:48:00] *** Joins: Haxxa (~Haxxa@116-255-6-75.ip4.superloop.com)
[00:49:52] *** Quits: guntbert (~yesitsme@user/guntbert) (Quit: leaving)
[00:52:32] *** Joins: ttree (~ttree0@c-73-239-62-159.hsd1.wa.comcast.net)
[00:53:16] *** Quits: oddish (~oddish@2a01:4f8:1c1c:a9da::1) (Remote host closed the connection)
[00:53:22] *** Quits: EvilDMP (~textual@django/moderator/EvilDMP) (Quit: My MacBook has gone to sleep. ZZZzzz…)
[00:54:04] *** Joins: salparadise (~salparadi@129.146.17.140)
[00:54:09] *** Quits: wyclif (~wyclif@user/wyclif) (Ping timeout: 268 seconds)
[00:54:12] *** Joins: guntbert (~yesitsme@user/guntbert)
[00:54:34] *** Quits: LordKalma (~LordKalma@2a01:4f9:c011:203b::1) (Quit: ZNC 1.7.5+deb4 - https://znc.in)
[00:55:43] *** Quits: nergar (~Nergar@177.225.152.202) (Read error: Connection reset by peer)
[00:56:04] *** Quits: fanis30 (~fanis30@adsl-213.37.6.3.tellas.gr) (Quit: WeeChat 3.2.1)
[00:56:23] *** Quits: Fiji- (~Fiji@user/fiji) (Quit: Leaving)
[00:56:47] *** Joins: LordKalma (~LordKalma@server.ruilvo.com)
[00:57:18] *** Quits: fikran (~fikran@user/fikran) (Ping timeout: 260 seconds)
[00:57:27] *** Quits: hexa- (~hexa-@juno.lossy.network) (Ping timeout: 268 seconds)
[00:59:06] *** Joins: fikran (~fikran@user/fikran)
[01:00:17] *** user3456 is now known as rip-libera-offto
[01:00:28] *** rip-libera-offto is now known as user3456
[01:00:44] *** Joins: wyclif (~wyclif@user/wyclif)
[01:02:25] *** Quits: zer0bitz (~zer0bitz@dsl-hkibng31-54fafc-123.dhcp.inet.fi) (Read error: Connection reset by peer)
[01:04:43] *** Joins: Macuser (~Macuser@216.30.159.201)
[01:05:16] *** Quits: trace987 (~trace@dynamic-002-247-249-191.2.247.pool.telefonica.de) (Ping timeout: 252 seconds)
[01:05:22] *** Quits: Y37I (~yeti@d75-156-114-156.bchsia.telus.net) (Ping timeout: 265 seconds)
[01:07:17] *** Quits: x28girl (~x28girl@user/x28girl) (Remote host closed the connection)
[01:07:50] *** Joins: trace987 (~trace@dynamic-002-247-249-191.2.247.pool.telefonica.de)
[01:07:53] *** Joins: x28girl (~x28girl@user/x28girl)
[01:10:34] *** Quits: rsx (~dummy@ppp-188-174-142-215.dynamic.mnet-online.de) (Remote host closed the connection)
[01:11:01] *** Quits: wyclif (~wyclif@user/wyclif) (Ping timeout: 268 seconds)
[01:11:46] *** Joins: wyclif (~wyclif@user/wyclif)
[01:13:16] *** Quits: guntbert (~yesitsme@user/guntbert) (Quit: leaving)
[01:13:30] *** Quits: Akuli (~Akuli@213.216.211.210) (Quit: Leaving)
[01:13:36] *** Joins: guntbert (~yesitsme@user/guntbert)
[01:15:09] *** Quits: Samnzdat (~ambassado@075-141-230-217.res.spectrum.com) (Read error: Connection reset by peer)
[01:16:52] *** Quits: wyclif (~wyclif@user/wyclif) (Ping timeout: 252 seconds)
[01:17:03] *** Quits: devcpu (~rusty@d50-92-229-34.bchsia.telus.net) (Quit: leaving)
[01:17:17] *** Joins: wyclif (~wyclif@user/wyclif)
[01:18:02] <gordonjcp> if I've got a python package, which in its setup.py pulls in a dependency from git
[01:18:09] <gordonjcp> but I've already packaged that dependency and installed it
[01:18:43] <gordonjcp> how do I get the installer for the first package to just believe that whatever version of the second is installed, is fine, and it doesn't need to pull anything from git?
[01:21:26] *** Quits: c10l (~c10l@user/c10l) (Quit: The Lounge - https://thelounge.chat)
[01:22:10] *** Quits: justm3 (~Username@82-171-42-20.fixed.kpn.net) (Ping timeout: 240 seconds)
[01:22:11] *** Quits: nomic (~nomic@185.217.117.73) (Quit: Leaving)
[01:22:18] *** Joins: justm3 (~Username@82-171-42-20.fixed.kpn.net)
[01:22:19] *** Quits: wyclif (~wyclif@user/wyclif) (Ping timeout: 252 seconds)
[01:22:35] *** Joins: c10l (~c10l@user/c10l)
[01:22:48] *** Joins: wyclif (~wyclif@user/wyclif)
[01:23:23] *** Quits: jstein (~jstein@gentoo/developer/jstein) (Quit: quit)
[01:24:00] *** Quits: rslopes (~rslopes@2804:18:1016:9dba:a709:c864:96e3:854) (Quit: Quit)
[01:29:55] *** Quits: gitesh (uid423739@id-423739.ilkley.irccloud.com) (Quit: Connection closed for inactivity)
[01:30:06] *** Quits: blindguard (~blindguar@2a02:908:1864:c200::4433) (Quit: Konversation terminated!)
[01:31:01] *** Joins: whoever (~trevor@cpe-70-112-235-224.austin.res.rr.com)
[01:31:04] <whoever> hi all
[01:31:29] <whoever> is it possible to create a template in spyder IDE or is it just too basic
[01:31:49] <gordonjcp> a template for what?
[01:32:47] *** Joins: devcpu (~rusty@d50-92-229-34.bchsia.telus.net)
[01:32:55] *** Quits: wyclif (~wyclif@user/wyclif) (Ping timeout: 265 seconds)
[01:33:39] *** Quits: roxfan (roxfan@11.121-64-87.adsl-dyn.isp.belgacom.be) (Remote host closed the connection)
[01:33:42] *** Quits: trace987 (~trace@dynamic-002-247-249-191.2.247.pool.telefonica.de) (Ping timeout: 260 seconds)
[01:33:51] *** Joins: wyclif (~wyclif@user/wyclif)
[01:34:06] <whoever> just a basic templic with commements for class  submission , soI don't need to copy andy paste group info on every project
[01:34:15] *** Joins: roxfan (roxfan@11.121-64-87.adsl-dyn.isp.belgacom.be)
[01:35:52] <gordonjcp> whoever: why not just write that in a file, and copy it into your project as needed
[01:36:18] *** Quits: Lord_of_Life (~Lord@user/lord-of-life/x-2819915) (Ping timeout: 265 seconds)
[01:36:46] <whoever> because its for a blind guy and it would save 3 minutes
[01:36:48] *** Joins: Lord_of_Life (~Lord@user/lord-of-life/x-2819915)
[01:36:57] *** Joins: jazzy (~jaziz@2600:380:8478:544b:74e4:ee0e:c5d7:8598)
[01:38:43] *** Quits: wyclif (~wyclif@user/wyclif) (Ping timeout: 265 seconds)
[01:39:19] *** Joins: wyclif (~wyclif@user/wyclif)
[01:40:24] *** Joins: hexa- (~hexa-@juno.lossy.network)
[01:40:54] *** Joins: nomic (~nomic@185.217.117.73)
[01:41:21] *** Joins: Atque (~Atque@user/atque)
[01:42:57] *** Quits: nomic (~nomic@185.217.117.73) (Client Quit)
[01:43:02] <SnoopJ> whoever, I don't use the IDE but it appears from this 2019 note that it supports "snippets" through Kite or LSP: https://www.spyder-ide.org/blog/spyder-kite-funding/
[01:44:07] <SnoopJ> the `cookiecutter` tool is also nice for doing this across multiple files (i.e. it's good for entire-project templating)
[01:44:08] *** Quits: darksun (~darksun@user/darksun) (Quit: leaving)
[01:44:19] *** Quits: wyclif (~wyclif@user/wyclif) (Ping timeout: 252 seconds)
[01:44:26] *** Quits: eblip (~eb0t@90.199.241.57) (Ping timeout: 260 seconds)
[01:44:34] *** Joins: hqdruxn08 (~hqdruxn08@cpe-66-68-166-214.austin.res.rr.com)
[01:44:49] *** Joins: wyclif (~wyclif@user/wyclif)
[01:45:22] *** Joins: nomic (~nomic@185.217.117.73)
[01:46:25] *** Joins: luna-is-here (~quassel@2a02:908:f761:2a3c::a)
[01:47:01] *** Quits: fedenix (~fedenix@gateway/tor-sasl/fedenix) (Remote host closed the connection)
[01:47:46] *** Quits: UselessCourage__ (~UselessCo@gateway/tor-sasl/uselesscourage) (Remote host closed the connection)
[01:48:38] <gordonjcp> actually the problem is worse than I thought
[01:48:56] <gordonjcp> pip tries to install all the dependencies, even if they've already been provided
[01:49:04] <gordonjcp> how do I stop it trying to do that
[01:49:15] *** Quits: hqdruxn08_ (~hqdruxn08@cpe-66-68-166-214.austin.res.rr.com) (Ping timeout: 268 seconds)
[01:50:01] *** Joins: lightbulbjim (~lightbulb@user/lightbulbjim)
[01:50:01] *** Quits: lightbulbjim (~lightbulb@user/lightbulbjim) (Client Quit)
[01:50:20] *** Quits: manti7 (~manti7@176.10.104.94) (Quit: WeeChat 3.1)
[01:50:41] *** Quits: LuksNuke (~LuksNuke@ip-146-0-191-111.dyn.luxfibre.pt.lu) (Quit: Leaving)
[01:51:35] *** Joins: Somelauw (~weechat@user/somelauw)
[01:52:10] *** Quits: kosh (~kosh@user/kosh) (Ping timeout: 252 seconds)
[01:52:16] <anddam> energizer: yep, I thought of pdb as well but it does not seem to have the "live" features of CL REPL
[01:52:27] <energizer> gordonjcp: "Note that pip install prefers to leave the installed version as-is unless --upgrade is specified" https://pip.pypa.io/en/stable/cli/pip_install/
[01:52:40] <gordonjcp> energizer: okay, but --upgrade isn't specified
[01:52:52] <gordonjcp> is it possibly something wrong in the packaging?
[01:53:14] *** Quits: nomic (~nomic@185.217.117.73) (Quit: Leaving)
[01:54:08] <gordonjcp> energizer: I don't really understand what pip is trying to do, tbh
[01:54:21] <energizer> gordonjcp: #pypa might know better
[01:54:26] <anddam> Yhg1s: I am interested in what energizer asked as well, if you a traceback cannot you replace the last, failing call before continuing rather tha unwind the whole traceback and exit?
[01:54:28] <gordonjcp> energizer: like, does it always do this, does it always attempt to install every dependency listed?
[01:54:32] <gordonjcp> energizer: okay
[01:54:35] *** Quits: wyclif (~wyclif@user/wyclif) (Ping timeout: 268 seconds)
[01:54:44] *** Quits: otisolsen70 (~otisolsen@xd4ed80b5.cust.hiper.dk) (Quit: Leaving)
[01:55:27] *** Quits: whoever (~trevor@cpe-70-112-235-224.austin.res.rr.com) (Read error: No route to host)
[01:55:51] *** Joins: wyclif (~wyclif@user/wyclif)
[01:56:07] <TML> gordonjcp: pip attempts to install and sees the package is already installed, and moves on, if that's what you're asking about
[01:56:45] *** Quits: Atque (~Atque@user/atque) (Quit: ...)
[01:57:09] <gordonjcp> TML: right but it doesn't
[01:57:20] <TML> gordonjcp: Doesn't what, exactly?
[01:57:20] <gordonjcp> TML: pip attempts to install and barfs and dies
[01:57:37] <gordonjcp> it cannot build the package, because it hasn't got gcc
[01:57:50] <gordonjcp> the package has already been built and installed
[01:57:54] *** Joins: jwodder (~jwodder@2601:89:c600:f150:3c20:6e56:ac66:514a)
[01:58:21] <TML> if it's trying to compile it, pip doesn't actually think it's installed
[01:58:35] <TML> what's the package in question?
[01:58:35] <tumbleweed> or the version range requested doesn't match the installed verion
[01:59:12] <gordonjcp> TML: in this case, greenlet
[01:59:39] <TML> let me see whether I can reproduce what you're seeing
[01:59:42] <jwodder> Is this an appropriate place to ask for help with uWSGI + Flask?  I have a setup that worked fine under Ubuntu 18.04, but now that I've upgraded to Ubuntu 20.04, uwsgi is failing to start up with "no app loaded".
[01:59:56] <gordonjcp> tumbleweed: greenlet 1.1.1 is installed, and pip install attempts to install greenlet 1.1.1
[02:00:00] <TML> gordonjcp: installing greenlet didn't even requiret GCC here
[02:00:01] *** Joins: semeion (~semeion@user/semeion)
[02:00:03] <gordonjcp> but can't, because it doesn't have gcc
[02:00:08] <TML> s/requiret/require/
[02:00:22] <gordonjcp> TML: okay, it does here
[02:00:34] <TML> gordonjcp: Are you on some unusual OS/distro?
[02:00:37] <gordonjcp> alpine
[02:00:40] *** Quits: wyclif (~wyclif@user/wyclif) (Ping timeout: 240 seconds)
[02:00:40] <gordonjcp> not terribly unusual
[02:01:06] *** Quits: ZedHedTed (~ZedHedTed@user/zedhedted) (Remote host closed the connection)
[02:01:09] <TML> greenlet provides wheels
[02:01:21] *** Joins: wyclif (~wyclif@user/wyclif)
[02:01:27] *** Joins: ZedHedTed (~ZedHedTed@user/zedhedted)
[02:01:27] *** Quits: luna-is-here (~quassel@2a02:908:f761:2a3c::a) (Quit: luna-is-here)
[02:01:54] <TML> gordonjcp: What OS/distro are you on?
[02:02:12] <TML> Oh, you said alpine above
[02:02:18] <gordonjcp> yup
[02:02:19] <TML> sorry, I missed that :)
[02:02:29] <gordonjcp> it's actually in a docker container, but it does the same in an alpine VM
[02:02:30] <TML> gordonjcp: it installs on alpine just fine from pypa here
[02:03:02] *** Quits: ZedHedTed (~ZedHedTed@user/zedhedted) (Client Quit)
[02:03:02] *** Quits: freeworld (~vit@chello085216193138.chello.sk) (Quit: Konversation terminated!)
[02:03:16] <TML> can you share your project?
[02:03:21] *** Joins: luna-is-here (~quassel@2a02:908:f761:2a3c::a)
[02:03:33] *** Quits: luna-is-here (~quassel@2a02:908:f761:2a3c::a) (Client Quit)
[02:03:47] <TML> normally it should just find the binary wheel and install that
[02:04:09] <TML> I'm a bit baffled why it's even looking for a compiler
[02:05:09] <TML> you're not explicitly passing --no-binary or something, I assume?
[02:05:21] <gordonjcp> I'm baffled as to why it's even looking for greenlet, it's not listed as a dependency
[02:05:34] *** Joins: RangerBobVA (~bmaddox@user/rangerbobva)
[02:06:10] *** Quits: wyclif (~wyclif@user/wyclif) (Ping timeout: 240 seconds)
[02:06:34] <TML> sounds like something really off in your code, any chance you can share a git repo?
[02:06:39] <gordonjcp> sure
[02:06:52] *** Joins: wyclif (~wyclif@user/wyclif)
[02:07:05] <gordonjcp> https://github.com/flaskbb/flaskbb
[02:07:31] *** Joins: nomic (~nomic@185.217.117.73)
[02:07:48] <Repiphany> greenlet is in the setup.py install_requires
[02:07:51] *** Joins: Powerhouse6666 (~Powerhous@24.109.185.150)
[02:08:37] <gordonjcp> oh, there it is
[02:08:39] <gordonjcp> huh
[02:08:41] <TML> Yeah, that's definitely a require
[02:09:02] <gordonjcp> when the fuck did he add that?
[02:09:14] <Soni> can python emulate foo <(bar) kinda stuff?
[02:09:29] <Soni> (usually implemented through /dev/fd)
[02:09:43] <Soni> can python pass fd's to subprocess?
[02:09:56] *** Joins: mrgz (~mrgz@201-42-0-191.dsl.telesp.net.br)
[02:09:59] *** Joins: trace987 (~trace@ip5f5a6a70.dynamic.kabel-deutschland.de)
[02:10:18] <gordonjcp> TML: it does the same trick for Pillow too though
[02:10:55] *** Quits: Pickchea (~private@user/pickchea) (Quit: Leaving)
[02:10:57] *** Parts: Somelauw (~weechat@user/somelauw) (WeeChat 3.0)
[02:12:04] *** Quits: wyclif (~wyclif@user/wyclif) (Ping timeout: 268 seconds)
[02:12:23] *** Joins: wyclif (~wyclif@user/wyclif)
[02:12:36] *** Quits: buttermelted (~buttermel@213-47-29-213.cable.dynamic.surfer.at) (Remote host closed the connection)
[02:12:37] <TML> gordonjcp: I can't reproduce that locally using `pip install .` from your source repo
[02:12:44] *** Joins: amrooting (amrooting@gateway/vpn/protonvpn/amrooting)
[02:12:59] *** Joins: buttermelted (~buttermel@213-47-29-213.cable.dynamic.surfer.at)
[02:13:39] *** Quits: anddam (~anddam@user/anddam) (Quit: WeeChat 3.2)
[02:13:47] <TML> oh, wait - it installed the wheel of Pillow, and then still tried to compile it from source as well
[02:13:54] *** Joins: c10l0 (~c10l@user/c10l)
[02:14:00] <TML> what kind of craziness are they doing here?
[02:14:15] *** Joins: Fiji (~Fiji@user/fiji)
[02:14:22] <gordonjcp> TML: I have no idea
[02:14:32] <gordonjcp> I don't know which part is faulty there
[02:14:47] *** Quits: nomic (~nomic@185.217.117.73) (Quit: Leaving)
[02:15:10] <gordonjcp> TML: someone in #pypa suggested just installing to a virtualenv and copying that around in the docker container, but that sounds like a collossal pain in the tits
[02:15:20] *** Joins: cjb (~cjbayliss@user/cjb)
[02:16:39] <amrooting> Gosh, i have looked at this code 100 times https://dpaste.org/hdSz don't know why asyncio is blocking on line 27, it never joins... this is a modification of https://docs.python.org/3/library/asyncio-queue.html#examples but i always knew my turn it will never go smoothly at first ...
[02:16:46] *** Quits: c10l (~c10l@user/c10l) (Ping timeout: 252 seconds)
[02:16:46] *** c10l0 is now known as c10l
[02:16:55] <amrooting> please someone point out what i might be missing
[02:17:23] *** Quits: wyclif (~wyclif@user/wyclif) (Ping timeout: 265 seconds)
[02:17:37] *** Quits: flokuehn (~flokuehn@i577BC60D.versanet.de) (Ping timeout: 268 seconds)
[02:17:53] *** Joins: wyclif (~wyclif@user/wyclif)
[02:18:11] *** Joins: anddam (~anddam@user/anddam)
[02:18:14] *** Quits: INeedAHandle (~INeedAHan@39.124.72.106) (Ping timeout: 268 seconds)
[02:19:17] <TML> gordonjcp: I assume you're defining the Dockerfile on a machine that is able to compile?
[02:20:38] <gordonjcp> TML: yes, but that's a separate issue
[02:20:50] <Yhg1s> amrooting: because when the queue is empty, q.get() will never awaken.
[02:21:10] *** Quits: Powerhouse6666 (~Powerhous@24.109.185.150) (Ping timeout: 240 seconds)
[02:21:12] <gordonjcp> TML: it's a multistage build, the first stage installs a compiler and builds Pillow, the second stage starts with a clean alpine image and copies the .whl files over
[02:21:46] <Yhg1s> amrooting: you need some mechanism to tell the produce coroutines that the queue is done and they should stop trying to consume items.
[02:22:32] <Yhg1s> amrooting: or, do what the example you linked to does, which is to cancel the tasks once everything's been processed.
[02:22:47] <gordonjcp> TML: if I comment out the line looking for Pillow, the app works properly but that feels a bit evil
[02:22:49] *** Quits: wyclif (~wyclif@user/wyclif) (Ping timeout: 252 seconds)
[02:23:21] <amrooting> Yhg1s, online 28, i cancelled it
[02:23:24] *** Joins: wyclif (~wyclif@user/wyclif)
[02:23:32] <Yhg1s> amrooting: yes. And do you remember which line you said was blocking?
[02:24:00] <Yhg1s> amrooting: line 27 is waiting for all produce coroutines to finish. They will never finish.
[02:25:12] *** Quits: jwodder (~jwodder@2601:89:c600:f150:3c20:6e56:ac66:514a) (Quit: My work here is done.)
[02:25:50] *** Joins: dba (uid502594@id-502594.hampstead.irccloud.com)
[02:26:08] <TML> gordonjcp: Did you "pip install wheel" in the later stage?
[02:27:08] *** Quits: LucaTM (~LucaTM@user/lucatm) (Quit: Textual IRC Client: www.textualapp.com)
[02:28:02] *** Quits: palasso (~palasso@user/palasso) (Remote host closed the connection)
[02:28:50] *** Quits: ano (~ano@user/ano) (Remote host closed the connection)
[02:29:09] <dba> Hi, I have a list of dictionaries and I am currently looping through the list to insert them to a postresql database one by one, https://bpa.st/S7SA ... I assume that a lot of connection to be made to the server an might exhaust the CPU somehow and might be time consuming. is there any better approach to insert the entire list at once?
[02:30:33] *** Joins: EvilDMP (~textual@django/moderator/EvilDMP)
[02:30:34] <amrooting> Yhg1s, i have moved await q.join() from line 25 to line 28 below the await and it still didn't work and move it to line 22, it is still blocking
[02:30:36] *** Joins: ano (~ano@user/ano)
[02:30:37] *** Joins: Mattiaslndstrm (~Mattiasln@c188-148-207-108.bredband.tele2.se)
[02:30:40] <energizer> dba: you want execute_values
[02:31:04] *** Quits: Mattiaslndstrm (~Mattiasln@c188-148-207-108.bredband.tele2.se) (Client Quit)
[02:31:09] *** Quits: winterflaw (~winterfla@gateway/tor-sasl/winterflaw) (Remote host closed the connection)
[02:32:08] <bjs> amrooting: the problem is that y our gather() is waiting for the producers to finish before moving on
[02:32:31] <TML> gordonjcp: OK, I think I see what's going on
[02:32:45] <TML> gordonjcp: This repo has a requirements.txt which ends in `-e .`
[02:33:09] <TML> gordonjcp: That means by pip will NOT actually install things into your site-packages
[02:33:31] <bjs> amrooting: it's fairly common to do something like q.put(None) then if the .get() receives a None it knows it's done/can stop
[02:33:33] *** Joins: stewie925 (~stewie925@2600:1702:44f0:35c0:3991:44db:d68f:b71a)
[02:33:46] <TML> gordonjcp: https://python-packaging-tutorial.readthedocs.io/en/latest/setup_py.html#develop-mode
[02:34:16] *** Quits: pycode (~pycode@2001:b07:5d28:551:e718:27c7:7a58:f938) (Ping timeout: 268 seconds)
[02:34:22] <TML> gordonjcp: so rather than "copying the package to site-packages" it "Adds a .pth file to site-packages, pointed at package source root"
[02:35:20] <gordonjcp> TML: ah, okay
[02:35:22] <stewie925> hey guys, quick question - something looks wrong with the python set.  When I do `set([-1,-2,-3])` I get `set([-2, -1, -3])` - I expected `set([-3, -2, -1])`
[02:35:34] <TML> gordonjcp: my guess is that your multi-stage build ends up discarding or altering the path where that .pth file is pointed, and so later it cannot find them and tries to rebuild them
[02:35:38] <gordonjcp> TML: also, even with greenlet commented out, some dependency pulls in greenlet
[02:35:43] <bjs> stewie925: why do you expect an order at all?  sets are unordered
[02:36:06] <stewie925> bjs: because for positive integers, they are ordered ... just an observation is all
[02:36:24] <TML> gordonjcp: so you could try commenting out or removing that `-e .` line and I think you might find things work
[02:36:41] <stewie925> bjs - let me try positive integer again, I could be wrong
[02:36:43] *** Quits: bomb-on (~bomb-on@194.144.47.113) (Quit: aллилѹіа!)
[02:36:51] <gordonjcp> TML: on it
[02:37:06] <bjs> stewie925: you shouldn't rely on the ordering.  it's an accident that a small set of consecutive positive integers is sorted
[02:37:28] <TML> you'd have to go back to the maintainer of the upstream thing to ask why they do that, it seems really odd to me (while I've used editable pip installs, I didn't even know you could do that in the requirements.txt file until now, and so I'm unclear why an upstream provider would choose to do that)
[02:37:30] <stewie925> oh I see.. so I still need to do list sort after converting to set then, thank you
[02:37:32] <bjs> stewie925: (this turns out to be true for the main implementation of Python,  but is totally an accident)
[02:37:38] <gordonjcp> TML: I kind of don't understand why it needs lists of packages in both requirements.txt *and* setup.py
[02:37:54] <stewie925> bjs: thank you!
[02:37:57] <TML> gordonjcp: they are read by different tool chains
[02:38:09] *** Joins: winterflaw (~winterfla@gateway/tor-sasl/winterflaw)
[02:38:11] <gordonjcp> TML: I suspect the original author thought it seemed like a good idea, and none of the rest of us entirely understood the implications of -e .
[02:40:18] <gordonjcp> TML: okay, it fails differently now
[02:40:35] <TML> Well, that's a…good thing? ;)
[02:40:41] <TML> what's it doing now?
[02:40:47] <gordonjcp>   Attempting uninstall: six
[02:40:48] <gordonjcp>     Found existing installation: six 1.15.0
[02:40:48] <gordonjcp> ERROR: Cannot uninstall 'six'. It is a distutils installed project and thus we cannot accurately determine which files belong to it which would lead to only a partial uninstall.
[02:41:06] *** Quits: xb0o2 (~xb0o2@user/xb0o2) (Quit: Lost terminal)
[02:41:26] <TML> so you have an older version of six already installed
[02:41:36] <gordonjcp> probably pulled in by a dependency
[02:41:56] <gordonjcp> I don't think anything in this thing actually uses six
[02:42:07] <TML> I would find out whether you actually need to depend on 1.16.0 or whether you could make that requirement a bit softer
[02:42:41] *** Quits: Gurkenglas (~Gurkengla@dslb-002-207-014-195.002.207.pools.vodafone-ip.de) (Ping timeout: 268 seconds)
[02:42:42] *** Quits: EvilDMP (~textual@django/moderator/EvilDMP) (Quit: My MacBook has gone to sleep. ZZZzzz…)
[02:42:54] <gordonjcp> TML: I doubt it's needed at all
[02:43:25] *** Quits: tr4ck3ur (~tr4ck3ur@user/tr4ck3ur) (Quit: Leaving)
[02:43:38] <gordonjcp> TML: can't see it imported anywhere
[02:43:49] <TML> gordonjcp: Well, you'd be a better judge of that for this codebase than I would :)
[02:44:55] *** Joins: EvilDMP (~textual@django/moderator/EvilDMP)
[02:47:31] *** Quits: Fiji (~Fiji@user/fiji) (Read error: Connection reset by peer)
[02:48:34] *** Quits: Vornicus (~Vornicus@2603-8000-5d07-7ef0-80d8-d4ba-58c2-1b2b.res6.spectrum.com) (Read error: Connection reset by peer)
[02:48:41] *** Quits: srhm (~srhm@user/srhm) (Read error: Connection reset by peer)
[02:49:09] *** Joins: srhm (~srhm@user/srhm)
[02:49:30] <TML> gordonjcp: But I would concur with your statement, I don't see it being imported at all in the project itself
[02:50:36] *** Joins: Fiji (~Fiji@user/fiji)
[02:51:04] *** Quits: GreenResponse (~tomek@r-45-155-148-237.gpon.bialnet.pl) (Quit: Leaving)
[02:51:39] *** Quits: EvilDMP (~textual@django/moderator/EvilDMP) (Quit: My MacBook has gone to sleep. ZZZzzz…)
[02:51:39] *** Joins: ASTO (~yigit@212.253.112.28)
[02:52:40] *** Quits: RangerBobVA (~bmaddox@user/rangerbobva) (Quit: Leaving)
[02:52:42] *** Quits: Macuser (~Macuser@216.30.159.201) (Quit: My MacBook has gone to sleep. ZZZzzz…)
[02:52:53] *** Joins: hqdruxn08_ (~hqdruxn08@cpe-66-68-166-214.austin.res.rr.com)
[02:53:01] *** Joins: tusko (~yeurt@copyfree/advocate/tusko)
[02:53:10] *** Quits: elkalamar (elkalamar@gateway/vpn/airvpn/elkalamar) (Ping timeout: 268 seconds)
[02:53:30] <ASTO> def great(language):
[02:53:30] <ASTO>     if language =="chinese":
[02:53:30] <ASTO>         print("ni hao")
[02:53:30] <ASTO>     if language =="English":
[02:53:30] <ASTO>         print("Hello")
[02:53:31] <ASTO>     if language =="Spanish":
[02:53:31] <ASTO>         print("Hola")
[02:53:31] *** litharge sets mode: +q $a:ASTO
[02:53:33] <amrooting> bjs, i have fixed the blocking issue and somehow added None to queue, but it now raises CancelledError exception https://dpaste.org/YMb8
[02:54:03] *** litharge sets mode: -q $a:ASTO
[02:54:10] <mefistofeles> wow
[02:54:14] <ASTO> =-Oops sorry
[02:54:51] *** Quits: winterflaw (~winterfla@gateway/tor-sasl/winterflaw) (Ping timeout: 276 seconds)
[02:54:53] <ASTO> https://dpaste.org/KVxd
[02:54:58] <gordonjcp> TML: it needs a pretty thorough going-over I think
[02:55:16] *** Quits: hqdruxn08 (~hqdruxn08@cpe-66-68-166-214.austin.res.rr.com) (Ping timeout: 252 seconds)
[02:55:31] <TML> gordonjcp: Yeah, that happens in projects - someone needs to be doing the housekeeping of requirements
[02:55:50] *** Quits: jazzy (~jaziz@2600:380:8478:544b:74e4:ee0e:c5d7:8598) (Ping timeout: 260 seconds)
[02:56:11] <ASTO> what is wrong with my code *
[02:56:14] *** Quits: leitz (~LeamHall@cpe-173-172-58-72.tx.res.rr.com) (Quit: nappy time)
[02:57:21] <nedbat> ASTO: shouldn't line 9 look more like line 2?
[02:57:28] *** Quits: waveclaw (~quassel@ip98-162-237-241.ok.ok.cox.net) (Ping timeout: 252 seconds)
[02:58:34] *** Quits: MercilessDeth (~brad@136.49.61.2) (Quit: Konversation terminated!)
[02:58:56] <gordonjcp> TML: it builds, it runs, the docker container kind of does its thing
[02:59:07] *** Quits: hqdruxn08_ (~hqdruxn08@cpe-66-68-166-214.austin.res.rr.com) (Ping timeout: 252 seconds)
[03:00:21] *** Quits: upsala (~zcb@185.213.155.160) (Quit: WeeChat 3.2.1)
[03:00:36] <Yhg1s> amrooting: ... yes, still for the same reason. You're waiting for the produce coroutines to finish on line 27, but they won't finish. They'll never finish. You have to cancel them to make them stop.
[03:01:10] <Yhg1s> amrooting: sorry, I was stuck in backlog there.
[03:01:21] *** Joins: defjam (~eb0t@90.196.142.47)
[03:01:30] *** Quits: plastico (~plastico@neomutt/plastico) (Quit: WeeChat 3.2)
[03:01:55] *** Quits: TheHermann (~TheHerman@gateway/tor-sasl/thehermann) (Quit: Leaving)
[03:01:58] <amrooting> ok
[03:02:51] *** Quits: DaNeenjah (~jake@adsl-74-230-6-204.hsv.bellsouth.net) (Quit: WeeChat 3.2.1)
[03:03:34] <Yhg1s> amrooting: I'm not sure why you're catching Exception just to print the exception. What are you saying is raising CancelledError?
[03:05:13] *** Quits: justm3 (~Username@82-171-42-20.fixed.kpn.net) (Ping timeout: 252 seconds)
[03:05:19] *** Joins: justm3 (~Username@82-171-42-20.fixed.kpn.net)
[03:06:15] *** Joins: Betal (~Betal@user/betal)
[03:06:32] <amrooting> Yhg1s, https://dpaste.org/txZR i took out the exception block the full stacktrace is appended below https://dpaste.org/txZR i was thinking it works like StopIteration so wanted to catch it
[03:06:34] *** Quits: fikran (~fikran@user/fikran) (Ping timeout: 260 seconds)
[03:07:37] <Yhg1s> amrooting: you're calling asyncio.gather() with return_exceptions=False, but all the producer coroutines have been cancelled, which means CancelledError was raised in them.
[03:07:54] <zln> what's the best way to build a "select * from table where colname = searchstring" with a function and safeguard against sql injection?
[03:08:13] <Yhg1s> amrooting: return_exception means the exception is raised by asyncio.gather() instead.
[03:08:28] *** Joins: fikran (~fikran@user/fikran)
[03:08:33] <Yhg1s> zln: generally speaking, SQL parameterization, or a SQL builder, or an ORM.
[03:08:37] <nedbat> zln: you use the dbapi to access your database:  cur.execute("select * from table where colname = ?", (searchstring,))
[03:08:44] *** Quits: EgonX (~EgonX@2601:2c6:47f:9c18:e0bd:d0d1:5345:9a23) (Quit: Textual IRC Client: www.textualapp.com)
[03:08:45] <zln> like 'where firstname = name', 'where lastname = somelastname'
[03:08:52] <nedbat> zln: (which is sql parameterization)
[03:09:18] <nedbat> zln: ok, if the column name is a variable, then use an ORM or some other sql builder
[03:09:37] <zln> nedbat can I substitute 'colname' also with a function argument? should I use dict?
[03:09:53] <zln> hmm orm, I have to check it out
[03:10:11] <Yhg1s> zln: you can't use SQL parameterization for column names or other SQL metadata, and the way to properly escape them varies by the SQL flavour and DB-API module you're using.
[03:10:27] <Yhg1s> zln: a SQL builder or an ORM, like SQLAlchemy (which can be both), does it for you.
[03:11:15] <zln> Yhg1s: thanks. I'll check it up. I think I saw an example ORM example on docs.python.org
[03:11:21] <zln> thanks nedbat!
[03:11:34] <Yhg1s> the stdlib doesn't contain an ORM, as far as I know, so that's somewhat unlikely.
[03:11:34] *** Joins: MercilessDeth (~brad@136.49.61.2)
[03:11:46] *** Quits: pretty_dumm_guy (trottel@gateway/vpn/protonvpn/prettydummguy/x-88029655) (Quit: WeeChat 3.2.1)
[03:11:52] <zln> Yhg1s: it was an example of building and ORM like code
[03:12:22] <Yhg1s> ah, in the descriptors section. That's more of an example of how to use descriptors, not how to use an ORM. Definitely don't build your own ORM.
[03:12:25] <bjs> amrooting: I'd personally drop the q.join(),  make the produce() function just `return` if it got None,  then just gather() all the produce()s together (without create_task at all)
[03:12:40] <zln> ah, there is an "ORM example" on descriptors page on docs.python.org
[03:12:46] <zln> https://docs.python.org/3/howto/descriptor.html#orm-example
[03:12:54] <Yhg1s> zln: yes, that's what I meant.
[03:12:59] <zln> aha
[03:13:05] *** Joins: EgonX (~EgonX@2601:2c6:47f:9c18:c404:5115:cbc7:522e)
[03:13:06] <Yhg1s> zln: it's not an example of an ORM.
[03:13:14] <zln> then I have to use an extern module
[03:13:14] <bjs> amrooting: (also, you need to `await` the asyncio.sleep for it to work)
[03:13:21] <Yhg1s> zln: indeed you do.
[03:13:39] *** Joins: Powerhouse6666 (~Powerhous@24.109.185.150)
[03:13:47] <zln> Yhg1s: you mentioned alchemy something. Is that good?
[03:14:18] <Yhg1s> zln: SQLAlchemy. It's the usual recommendation for the things you're asking about, because it's good for that kind of thing, yes.
[03:14:27] <zln> Thanks
[03:16:38] <amrooting> bjs, well, the None was added as a patch initially, since I created two task and file content is just two lines, i expect it to return successfully without exceptions since I only cancelled two tasks too
[03:17:33] <amrooting> https://dpaste.org/7MAw i'm just going to play with it, till i get to understand it
[03:23:12] *** Joins: grys (~quassel@botters/gry)
[03:23:20] *** Quits: madduck (~madduck@user/madduck) (Remote host closed the connection)
[03:23:52] *** Quits: gitly (~gitly@85.255.233.67) (Ping timeout: 252 seconds)
[03:24:25] *** Quits: Powerhouse6666 (~Powerhous@24.109.185.150) (Ping timeout: 252 seconds)
[03:25:17] *** Quits: Seiryuu (~Seiryuu@ip174-103-176-143.adsl2.static.versatel.nl) (Quit: Leaving)
[03:25:37] *** Joins: gitly (~gitly@185.69.145.92)
[03:26:13] *** Quits: thiras (~thiras@user/thiras) (Ping timeout: 252 seconds)
[03:26:18] *** Joins: gr33n7007h (~gr33n7007@user/gr33n7007h)
[03:26:34] *** Quits: cdown (~cdown@194.207.141.245) (Quit: Lost terminal)
[03:26:34] <bjs> amrooting: cancellation *is* an exception
[03:26:46] <tusko> I'm using urllib.quote('/') but it only outputs '/'
[03:26:48] *** Quits: scoobydoo (~scooby@user/scoobydoo) (Read error: Connection reset by peer)
[03:26:49] <bjs> that's what cancelling is, to raise a (specific) exception
[03:27:09] *** Joins: scoobydoo (~scooby@user/scoobydoo)
[03:27:10] <greatgatsby> tusko, what are you expecting?
[03:27:23] <bjs> amrooting: but I think the passing None is the correct/best thing to actually do, it lets the producers quit nicely once there's no more input being fed to them
[03:27:26] <tusko> something like %hex
[03:27:28] *** Joins: nomic (~nomic@185.217.117.73)
[03:28:14] <bjs> amrooting: read through https://docs.python.org/3/library/asyncio-task.html#asyncio.gather it specifically says that gather()'d cancelled tasks raise CancelledError
[03:29:23] <bjs> amrooting: here's e.g. one way to do it that's a little more robust https://bpa.st/AQ6Q
[03:29:47] *** LabMonkey is now known as Mechanismus
[03:30:09] <greatgatsby> tusko, is / not a valid url delimiter, and doesn't need quoting?  help(urllib.parse.quote) might provide more insight
[03:32:06] *** Quits: TranquilEcho (~grom@user/tranquilecho) (Quit: WeeChat 2.8)
[03:34:23] *** Quits: Narrat (~omnius@p200300df5f4530f906ea56fffe2e7cdc.dip0.t-ipconnect.de) (Quit: They say a little knowledge is a dangerous thing, but it's not one half so bad as a lot of ignorance.)
[03:37:34] *** Quits: somlis (~somlis@user/somlis) (Read error: Connection reset by peer)
[03:37:46] *** Quits: PJBoy (~PJBoy@user/pjboy) (Ping timeout: 252 seconds)
[03:37:54] *** Joins: Plyht (uid433484@id-433484.hampstead.irccloud.com)
[03:37:54] <greatgatsby> tusko, is urllib.parse.quote("/", safe=[]) what you're after?
[03:38:25] *** Quits: dhill (~dhill@modemcable103.217-80-70.mc.videotron.ca) (Quit: robotnik~~)
[03:38:39] *** Joins: Somelauw (~weechat@user/somelauw)
[03:39:32] <greatgatsby> actually, it's probably urllib.parse.quote("/", safe="") ?
[03:39:32] *** Joins: Powerhouse6666 (~Powerhous@24.109.185.150)
[03:40:31] *** Quits: c10l (~c10l@user/c10l) (Ping timeout: 265 seconds)
[03:41:38] <Somelauw> Why do people some python programmers hate jupyter notebooks and what good alternative is there?
[03:43:05] <dre> no reason, and nothing
[03:44:31] <greatgatsby> Somelauw, lots of reasons https://www.youtube.com/watch?v=7jiPeIFXb6U
[03:44:52] <greatgatsby> it's also a hilarious presentation
[03:46:14] *** Joins: madduck (~madduck@user/madduck)
[03:47:26] *** Quits: hnOsmium0001 (uid453710@id-453710.hampstead.irccloud.com) (Quit: Connection closed for inactivity)
[03:47:33] *** Joins: mindraj (~mindraj@user/mindraj)
[03:47:41] *** Joins: hqdruxn08 (~hqdruxn08@cpe-66-68-166-214.austin.res.rr.com)
[03:48:40] *** Quits: gr33n7007h (~gr33n7007@user/gr33n7007h) (Ping timeout: 240 seconds)
[03:48:41] *** Quits: rannnn8888 (~rannnn888@bzq-79-183-158-130.red.bezeqint.net) (Ping timeout: 256 seconds)
[03:49:08] <Somelauw> greatgatsby: i want to watch it, but it's over an hour, maybe i'll get back to it another time
[03:49:13] *** Quits: ttree (~ttree0@c-73-239-62-159.hsd1.wa.comcast.net) (Ping timeout: 265 seconds)
[03:50:35] <greatgatsby> for sure. If you do start watching, you'll likely find that you've watched most of it without realizing, it's really well done
[03:52:22] *** Quits: Powerhouse6666 (~Powerhous@24.109.185.150) (Ping timeout: 268 seconds)
[03:53:06] *** Joins: Powerhouse6666 (~Powerhous@24.109.185.150)
[03:53:58] *** Quits: EgonX (~EgonX@2601:2c6:47f:9c18:c404:5115:cbc7:522e) (Quit: Textual IRC Client: www.textualapp.com)
[03:54:03] *** Quits: Wulf (~Wulf@user/wulf) (Ping timeout: 265 seconds)
[03:54:33] <mawk> how to do an exact cube root in python? instead of using **(1/3)
[03:54:38] *** Quits: ferz (~ferz@93-39-142-224.ip76.fastwebnet.it) (Ping timeout: 260 seconds)
[03:54:47] <mawk> I expect that the cube root of a negative number give me a real negative value, but it's not the case
[03:55:34] *** Joins: Wulf (~Wulf@user/wulf)
[03:56:29] <mawk> I guess I could so sign(x)*abs(x)**(1/3)
[03:56:52] *** Joins: EgonX (~EgonX@c-98-194-169-75.hsd1.tx.comcast.net)
[03:57:54] *** Joins: blackout69 (~blackout6@net-93-70-196-199.cust.vodafonedsl.it)
[03:57:55] *** Quits: amahl (~amahl@dsl-jklbng12-54fbca-64.dhcp.inet.fi) (Ping timeout: 260 seconds)
[03:59:12] *** Joins: rama (~rama@c-24-130-92-222.hsd1.ca.comcast.net)
[03:59:22] *** Quits: Powerhouse6666 (~Powerhous@24.109.185.150) (Ping timeout: 268 seconds)
[03:59:32] *** Lando-SpacePimp is now known as CRUNK-b0t
[04:00:33] *** Joins: somlis (~somlis@user/somlis)
[04:00:35] <gcbirzan> mawk: What number doesn't give you that?
[04:00:59] <nedbat> Somelauw: one prime reason: notebooks sometimes feel like one program divided into blocks, but the blocks can be executed in a strange confusing order.
[04:02:38] <mawk> gcbirzan: (-123.456789)**(1/3)
[04:02:51] <mawk> I don't hate jupyter notebooks
[04:03:18] <mawk> the result python gives is actually j * the real result
[04:03:28] *** Quits: rama (~rama@c-24-130-92-222.hsd1.ca.comcast.net) (Ping timeout: 252 seconds)
[04:03:31] <mawk> with j = -1/2 + i·sqrt(3)/2
[04:03:39] <mawk> which is one of the two complex roots
[04:03:52] <mawk> the other being j**2 * the real result
[04:04:21] *** Joins: hnOsmium0001 (uid453710@id-453710.hampstead.irccloud.com)
[04:04:23] *** Quits: somlis (~somlis@user/somlis) (Read error: Connection reset by peer)
[04:04:27] <mawk> I suppose python cannot recognize that 1/3 is exactly 1/3, and the slightest deviation from actual 1/3 the result will have to be complex
[04:04:39] <mawk> it would likely work better with 1/2 or anything else exactly representable in base 2
[04:04:45] *** Joins: Macuser (~Macuser@216.30.159.201)
[04:05:02] <Yhg1s> mawk: not so much Python as your computer.
[04:05:22] <mawk> there are complex number instructions in the cpu?
[04:05:26] <mawk> I thought there weren't
[04:05:33] <Yhg1s> nope, it uses floats.
[04:05:35] <Yhg1s> (well, doubles)
[04:06:15] <mawk> but at some point python makes a decision to start using complex arithmetic
[04:06:21] <mawk> in C the double type isn't complex by itself right?
[04:06:27] <Yhg1s> it's two doubles.
[04:06:31] <Yhg1s> (the Python complex type)
[04:06:33] <mawk> you need to use double complex
[04:06:40] <mawk> yeah
[04:06:56] <mawk> so at some point python sees my operation and decides to use complex , right?
[04:07:15] *** Quits: newdimension (~newdimnes@user/newdimension) (Quit: Bye)
[04:07:30] <Yhg1s> mawk: for what operation? Neither your question nor the reason for the behaviour you described has to do with complex numbers, just the float part.
[04:07:42] <mawk> the operation returns a complex number
[04:07:50] *** Joins: somlis (~somlis@user/somlis)
[04:08:18] <mawk> and in general (negative float)**float will be complex
[04:08:36] <mawk> the operation I gave returns (2.4896692960908724+4.312233714873633j)
[04:08:38] *** Joins: newdimension (~newdimnes@user/newdimension)
[04:09:02] <Yhg1s> I meant the inexactness of 1/3, but sure.
[04:09:49] *** Quits: kyooo (~kyooo@2a02:a31d:a13c:5600:559d:f748:905d:cda9) (Quit: Leaving)
[04:10:41] *** Quits: k162 (~k162@user/k162) (Remote host closed the connection)
[04:10:57] *** Joins: ferz (~ferz@93-39-142-224.ip76.fastwebnet.it)
[04:11:02] *** Quits: fluiD (~fluiD@161.97.231.145) (Read error: Connection reset by peer)
[04:11:05] *** Joins: k162 (~k162@user/k162)
[04:11:28] <mawk> if you cut the expansion of 1/3 at any point, i.e. it's not exact, the result of (-stuff)**(0.333333...) will be complex
[04:11:31] <mawk> that's what I meant
[04:12:20] *** Quits: blackout69 (~blackout6@net-93-70-196-199.cust.vodafonedsl.it) (Quit: Leaving.)
[04:13:03] <mawk> for 2.0 which is exact, (-5)**2.0 is not complex; but (-5)**1.9999 is
[04:13:08] <Yhg1s> mawk: it's not about being exact, but about being fractional. https://github.com/python/cpython/blob/main/Objects/floatobject.c#L777
[04:13:48] *** Joins: sed (~sed@pool-100-7-38-116.rcmdva.fios.verizon.net)
[04:14:11] <mawk> yes
[04:14:25] <mawk> that's the design choice
[04:16:00] <mawk> stemming from the fact that fractions do not represent exactly in floating point; if python could recognize that 1/3 is the fraction 1 / 3 there would be no reason not to return the real root
[04:16:11] <mawk> most fractions*
[04:17:03] <Yhg1s> I doubt that is the reason for this particular design choice. For example, 1/5 *is* exactly representable.
[04:18:20] <mawk> yes but since most others aren't, it's probably more valuable to have a consistent return type than to have special cases for a select few exponents
[04:18:51] *** Joins: sn1tch3r (~sn1tch3r@user/sn1tch3r)
[04:18:55] <mawk> since most negative numbers raised to a fraction will be complex, they don't make a difference
[04:19:13] *** Quits: nrg (~NRG@user/nrg) (Quit: ZNC - https://znc.in)
[04:20:12] *** Parts: Somelauw (~weechat@user/somelauw) (WeeChat 3.0)
[04:22:21] *** Joins: nrg (~NRG@user/nrg)
[04:22:46] <mawk> why isn't fractions.Fraction(1/2) just Fraction(1, 2) ?
[04:23:08] <mawk> it gives Fraction(3602879701896397, 18014398509481984)
[04:24:08] <mawk> 1/5 is Fraction(1, 5) I mean
[04:24:30] <mawk> Fraction(1, 5) gives something which is 1/5 + 1/18014398509481984
[04:26:40] *** Quits: gitly (~gitly@185.69.145.92) (Ping timeout: 240 seconds)
[04:28:28] <nedbat> mawk: hmm Yhg1s said 1/5 is exactly representable, but is it?
[04:28:45] *** Quits: int3l (~int3l@78-83-124-208.spectrumnet.bg) (Quit: WeeChat 3.3)
[04:28:56] *** Joins: gitly (~gitly@148.252.128.180)
[04:30:12] *** Quits: tk (~tk@ircpuzzles/staff/tk) (Quit: Well, this is unexpected.)
[04:30:43] *** Joins: tk (~tk@ircpuzzles/staff/tk)
[04:32:51] <nedbat> mawk: 1/5 is not an exact float
[04:34:10] *** Quits: sed (~sed@pool-100-7-38-116.rcmdva.fios.verizon.net) (Ping timeout: 240 seconds)
[04:35:29] *** Joins: tracey (~trace@ip5f5a6a70.dynamic.kabel-deutschland.de)
[04:35:46] *** Quits: PantelicGR (~PantelicG@user/pantelicgr) (Quit: Leaving)
[04:36:46] *** Quits: kurtthemaker (~kurt@S010644a56e3e0ee9.cn.shawcable.net) (Ping timeout: 268 seconds)
[04:38:07] *** Quits: trace987 (~trace@ip5f5a6a70.dynamic.kabel-deutschland.de) (Ping timeout: 252 seconds)
[04:39:08] *** Joins: sed (~sed@pool-100-7-38-116.rcmdva.fios.verizon.net)
[04:40:20] <ASTO> https://paste.ofcode.org/SrgNgjb9xZzpw6xRQfpRDv
[04:40:51] <ASTO> what I am mising ?
[04:41:37] <nedbat> ASTO: you are missing a close-paren on the previous line
[04:43:23] <ASTO> NameError: name '_total_gross_pay' is not defined
[04:43:51] <ASTO> why it say it is not defined ? no clue
[04:44:25] <nedbat> ASTO: first, on line 3, it's "_total_gross_pay", and on line 5 it's "total_gross_pay".
[04:44:38] <nedbat> But: both are local variables, not visible outside the function.
[04:45:12] <ASTO> nedbat it was meant to be difrent
[04:45:34] <ASTO> But: both are local variables, not visible outside the function. how can I make them visable *
[04:45:41] <nedbat> ASTO: why use two names that are almost the same?
[04:47:38] <ASTO> ASTO: why use two names that are almost the same?  # well because they are not the same thing one is for less than 40 one is more than 40
[04:48:00] <ASTO> maybe I should change p with total_Gross pay
[04:48:02] <nedbat> ASTO: ok, but they are both the pay that you want to compute, right?
[04:48:35] <nedbat> ASTO: to make the value visible, you should return it from the function.
[04:50:00] *** Joins: c10l (~c10l@user/c10l)
[04:50:58] <ASTO> Enter Hours :45
[04:50:59] <ASTO> Enter Rates:11
[04:50:59] <ASTO> Pay -157.5
[04:50:59] <ASTO> :-D the worker owe me 157 bucks
[04:51:34] <user3456> stonks
[04:52:17] *** Joins: Atque (~Atque@user/atque)
[04:53:53] <ASTO>      _total_gross_pay = computepay(hours,rates)
[04:54:31] <ASTO> just changed the location of hours and rates and my program worked flawlesly thank you for all of your efforts
[04:55:14] <ASTO> ;-)
[04:55:50] *** Parts: ASTO (~yigit@212.253.112.28) ()
[04:56:03] *** Joins: ASTO (~yigit@212.253.112.28)
[04:57:03] *** Parts: ASTO (~yigit@212.253.112.28) ()
[04:58:40] *** Quits: ssbr` (~ssbr@python/site-packages/ssbr) (Ping timeout: 240 seconds)
[05:04:24] *** Quits: markb1 (~markb1@2600:1700:eb40:7ecf:14de:bbb5:b3c1:e78b) (Quit: Client closed)
[05:05:42] *** mindraj is now known as drpgd
[05:06:05] *** Joins: knipster5 (~knipster@user/knipster)
[05:07:34] *** Joins: scoobydoo_ (~scooby@user/scoobydoo)
[05:07:35] *** Quits: scoobydoo_ (~scooby@user/scoobydoo) (Excess Flood)
[05:07:36] *** Quits: mefistofeles (~mefistofe@user/mefistofeles) (Ping timeout: 268 seconds)
[05:08:58] *** Joins: scoobydoo_ (~scooby@user/scoobydoo)
[05:09:30] *** drpgd is now known as mindraj
[05:09:31] *** Quits: jeho (~jehoshaph@user/jehoshaphat) (Quit: Leaving)
[05:09:33] *** Quits: dre (~dre@2001:8003:c932:c301:ecf5:7fa2:569b:3a9) (Quit: Leaving)
[05:10:08] *** Joins: drew (~drew@user/drew)
[05:10:25] *** Quits: scoobydoo (~scooby@user/scoobydoo) (Ping timeout: 265 seconds)
[05:10:29] *** scoobydoo_ is now known as scoobydoo
[05:14:16] *** Joins: amrooting1 (amrooting@gateway/vpn/protonvpn/amrooting)
[05:16:07] *** Quits: fikran (~fikran@user/fikran) (Ping timeout: 252 seconds)
[05:17:11] *** Quits: amrooting (amrooting@gateway/vpn/protonvpn/amrooting) (Ping timeout: 265 seconds)
[05:17:41] *** Joins: c10l0 (~c10l@user/c10l)
[05:17:42] *** Quits: tgamblin (~tgamblin@2607:fea8:c29d:d7c0::81de) (Ping timeout: 260 seconds)
[05:17:50] *** Joins: fikran (~fikran@user/fikran)
[05:19:06] *** Joins: jeho (~jehoshaph@user/jehoshaphat)
[05:21:03] *** Quits: c10l (~c10l@user/c10l) (Ping timeout: 265 seconds)
[05:21:03] *** c10l0 is now known as c10l
[05:21:47] *** Joins: vvdaiwrw (~rvgzuuqp@gateway/tor-sasl/rvgzuuqp)
[05:23:52] *** Joins: tgamblin (~tgamblin@2607:fea8:c29d:d7c0::81de)
[05:27:13] *** Joins: llh (~llh@user/llh)
[05:30:25] *** Quits: vlm (~vlm@user/vlm) (Quit: "")
[05:30:38] *** Quits: sn1tch3r (~sn1tch3r@user/sn1tch3r) (Quit: Leaving)
[05:30:39] *** Joins: gggp (~textual@114.245.104.159)
[05:33:14] *** Joins: ttree (~ttree0@c-73-239-62-159.hsd1.wa.comcast.net)
[05:34:24] *** Quits: tgamblin (~tgamblin@2607:fea8:c29d:d7c0::81de) (Read error: Connection reset by peer)
[05:35:39] *** Joins: tgamblin (~tgamblin@2607:fea8:c29d:d7c0::81de)
[05:35:48] *** Quits: Auron (Auron956@user/auron) (Remote host closed the connection)
[05:42:25] *** Quits: Seirdy (~Seirdy@sourcehut/user/seirdy) (Quit: exiting 3.2)
[05:43:24] *** Joins: Seirdy (~Seirdy@sourcehut/user/seirdy)
[05:47:03] *** Joins: fulljab (~textual@2620:8d:8000:1070:edc3:1640:aee7:d5e1)
[05:49:23] *** Joins: rpkilby (~rpkilby@c-24-20-208-106.hsd1.or.comcast.net)
[05:53:18] *** Quits: c10l (~c10l@user/c10l) (Quit: The Lounge - https://thelounge.chat)
[05:53:52] *** Joins: DrBrownBear (~DrBrownbe@2600:1700:9aa1:6bc0:406d:8b13:ffee:965a)
[05:54:24] *** Joins: c10l (~c10l@user/c10l)
[05:57:49] *** Joins: pluri (~pluri@user/pluri)
[05:58:01] *** Quits: cthulchu_ (~Cthulchu@193.194.107.250) (Ping timeout: 252 seconds)
[05:59:10] <pluri> if i'm using a ratelimiter decorator in a flask app, will it restrict the number of times the function is invoked across all client sessions (i.e will it hold across request contexts)? or within each individual session only? what about when using the decorator for just one instruction inside a function? this is the package I use: https://pypi.org/project/ratelimiter/
[05:59:15] *** Quits: JerryXiao (~JerryXiao@user/jerryxiao) (Ping timeout: 260 seconds)
[05:59:41] *** Joins: sleepingforest (~sleepingf@user/sleepingforest)
[06:00:31] *** Joins: JerryXiao (~JerryXiao@user/jerryxiao)
[06:02:18] *** Quits: FluffyMask (~masque@user/fluffymask) (Quit: WeeChat 3.2)
[06:03:37] *** Joins: Samian (~Sami@user/samian)
[06:07:44] *** Joins: califax- (~califax@user/califx)
[06:07:44] *** Quits: stewie925 (~stewie925@2600:1702:44f0:35c0:3991:44db:d68f:b71a) (Quit: Ping timeout (120 seconds))
[06:07:45] *** Joins: markb1 (~markb1@2600:1700:eb40:7ecf:4419:52f4:ae41:c3ef)
[06:08:12] *** Quits: voirnox (~voirnox@0x80.me) (Quit: ZNC 1.8.2+deb2+b1 - https://znc.in)
[06:09:40] *** Quits: brabrax (~brabrax@user/brabrax) (Ping timeout: 240 seconds)
[06:09:51] *** Quits: califax (~califax@user/califx) (Ping timeout: 276 seconds)
[06:09:52] *** califax- is now known as califax
[06:10:08] *** Quits: rpkilby (~rpkilby@c-24-20-208-106.hsd1.or.comcast.net) (Remote host closed the connection)
[06:10:13] *** Joins: brabrax (~brabrax@user/brabrax)
[06:10:17] *** Joins: voirnox (~voirnox@voidbyte.xyz)
[06:12:02] *** Joins: mefistofeles (~mefistofe@user/mefistofeles)
[06:12:11] *** Joins: vlm (~vlm@user/vlm)
[06:13:15] *** Quits: JerryXiao (~JerryXiao@user/jerryxiao) (Ping timeout: 265 seconds)
[06:16:53] *** Quits: c10l (~c10l@user/c10l) (Quit: The Lounge - https://thelounge.chat)
[06:17:56] *** Joins: c10l (~c10l@user/c10l)
[06:20:48] *** Quits: fulljab (~textual@2620:8d:8000:1070:edc3:1640:aee7:d5e1) (Quit: Textual IRC Client: www.textualapp.com)
[06:21:36] *** Joins: fulljab (~fulljab@2620:8d:8000:1070:edc3:1640:aee7:d5e1)
[06:22:33] *** Joins: shangxiao (~davids@124.187.230.212)
[06:24:51] *** Quits: grys (~quassel@botters/gry) (Ping timeout: 265 seconds)
[06:26:41] *** Joins: rpkilby (~rpkilby@c-24-20-208-106.hsd1.or.comcast.net)
[06:26:43] *** Quits: rpkilby (~rpkilby@c-24-20-208-106.hsd1.or.comcast.net) (Remote host closed the connection)
[06:29:49] *** Quits: naterlater (~Nathan22@199.249.111.186) (Ping timeout: 252 seconds)
[06:30:28] *** Quits: Macuser (~Macuser@216.30.159.201) (Quit: Textual IRC Client: www.textualapp.com)
[06:30:41] <mattf> I made this simple flask_login demo: https://github.com/matheusfillipe/flask_login it works fine on linux, windows firefox and chrome and on my android's firefox and chrome
[06:31:01] *** Quits: zaz\ (~zaz@poneybl.eu) (Quit: bye)
[06:31:15] <mattf> but on my ios it is not working (i am not able to login) on neither chrome, firefox (both fresh installed) and neither safari
[06:31:28] *** Joins: zaz\ (~zaz@poneybl.eu)
[06:31:28] *** Quits: buttermelted (~buttermel@213-47-29-213.cable.dynamic.surfer.at) (Ping timeout: 252 seconds)
[06:32:02] <mattf> It reaches the login (the login_user call is sucessfull) but seems it is not storing the cookie and the login_required route redirects back to the login without flashed message
[06:34:35] *** Quits: Samian (~Sami@user/samian) (Quit: Textual IRC Client: www.textualapp.com)
[06:34:48] *** Quits: lemonsnicks (~lemonsnic@cpc159519-perr18-2-0-cust114.19-1.cable.virginm.net) (Quit: ZNC 1.8.2 - https://znc.in)
[06:35:02] *** Quits: EgonX (~EgonX@c-98-194-169-75.hsd1.tx.comcast.net) (Quit: Textual IRC Client: www.textualapp.com)
[06:35:16] *** Quits: dba (uid502594@id-502594.hampstead.irccloud.com) (Quit: Connection closed for inactivity)
[06:35:47] *** Joins: Polyinsecure (~Polyinsec@180.244.135.13)
[06:36:41] *** Quits: Polyinsecure (~Polyinsec@180.244.135.13) (Client Quit)
[06:43:04] *** Joins: rpkilby (~rpkilby@c-24-20-208-106.hsd1.or.comcast.net)
[06:44:36] *** Joins: lemonsnicks (~lemonsnic@cpc159519-perr18-2-0-cust114.19-1.cable.virginm.net)
[06:45:09] *** Joins: naterlater (~Nathan22@199.249.111.186)
[06:45:11] *** Joins: herjazz (~herjazz@p6758124-ipngn30801marunouchi.tokyo.ocn.ne.jp)
[06:47:24] *** Quits: jpds (~jpds@gateway/tor-sasl/jpds) (Remote host closed the connection)
[06:48:06] *** Joins: jpds (~jpds@gateway/tor-sasl/jpds)
[06:49:33] *** Joins: rannnn8888 (~rannnn888@bzq-79-181-153-142.red.bezeqint.net)
[06:50:37] *** Joins: EgonX (~EgonX@2601:2c6:47f:9c18:e51d:8dc7:9bd6:a324)
[06:51:06] <rannnn8888> what worng here its stop my script https://bpa.st/MNFQ
[06:51:07] *** Quits: renrelkha (~renrelkha@user/renrelkha) (Quit: bye)
[06:51:15] *** Joins: eniac (~eniac@gateway/tor-sasl/eniac)
[06:51:23] <rannnn8888> dont want use try: for this
[06:52:00] *** Quits: naterlater (~Nathan22@199.249.111.186) (Read error: Connection reset by peer)
[06:52:14] *** Joins: naterlater (~Nathan22@199.249.111.186)
[06:52:57] *** Joins: renrelkha (~renrelkha@user/renrelkha)
[06:53:03] <rannnn8888> if 'pps' in j: ah i think i need cheack the taget
[06:53:04] <rannnn8888> thxx
[06:53:18] *** Quits: rpkilby (~rpkilby@c-24-20-208-106.hsd1.or.comcast.net) (Remote host closed the connection)
[06:54:17] *** Quits: CRUNK-b0t (~Lando@user/lando-spacepimp) (Read error: Connection reset by peer)
[06:54:32] *** Joins: Lando-SpacePimp (~Lando@user/lando-spacepimp)
[06:58:30] *** Quits: naterlater (~Nathan22@199.249.111.186) (Read error: Connection reset by peer)
[06:58:44] *** Joins: naterlater (~Nathan22@199.249.111.186)
[06:59:35] *** Joins: jazzy (~jaziz@2600:380:8478:544b:74e4:ee0e:c5d7:8598)
[07:05:10] *** Joins: gutt (~gutt@76-208-47-155.lightspeed.knvltn.sbcglobal.net)
[07:07:51] *** Quits: ska (~ska@user/ska) (Ping timeout: 268 seconds)
[07:07:51] *** Quits: Strom (strom@fedora/strom) ()
[07:09:56] *** Joins: Strom (strom@fedora/strom)
[07:11:57] *** Quits: pwnd_sfw (~pwnd_sfw@ool-18b88100.dyn.optonline.net) (Read error: Connection reset by peer)
[07:13:07] *** Joins: pwnd_sfw (~pwnd_sfw@ool-18b88100.dyn.optonline.net)
[07:18:43] *** Quits: madduck (~madduck@user/madduck) (Remote host closed the connection)
[07:20:36] *** Joins: white_magic (~white_mag@2600:1700:6ae2:a20:e01a:4687:22b6:73be)
[07:21:03] *** Joins: ska (~ska@user/ska)
[07:21:08] <white_magic> anyone know if there's some online tool that takes json as input and generates SQL Alchemy classes? I would modify the output, of course
[07:21:51] *** Joins: grys (~quassel@botters/gry)
[07:22:38] *** Joins: madduck (~madduck@user/madduck)
[07:25:16] *** Quits: FinnElija (~finn_elij@user/finn-elija/x-0085643) (Ping timeout: 265 seconds)
[07:25:22] *** Quits: fikran (~fikran@user/fikran) (Ping timeout: 252 seconds)
[07:25:56] <eniac> why am i getting error when i import music?
[07:27:02] *** Joins: FinnElija (~finn_elij@user/finn-elija/x-0085643)
[07:27:12] *** Joins: fikran (~fikran@user/fikran)
[07:28:46] *** Quits: Seirdy (~Seirdy@sourcehut/user/seirdy) (Ping timeout: 252 seconds)
[07:30:01] <jinsun_> eniac: did you install any package that provides music?
[07:30:13] *** Parts: fuxaches (~terry@S01060cb6d29d89df.ed.shawcable.net) ()
[07:30:29] *** Joins: Compass (~net@user/compass)
[07:32:40] <eniac> jinsun_~ music
[07:34:34] <eniac> jinsun_~ import music as M
[07:34:35] <eniac>   Message='float' object cannot be interpreted as an integer
[07:34:41] <eniac> got this float error
[07:34:53] *** Joins: Lando-HoloNet (~Lando@user/lando-spacepimp)
[07:35:36] *** Joins: Seirdy (~Seirdy@sourcehut/user/seirdy)
[07:36:35] *** Quits: mindraj (~mindraj@user/mindraj) (Quit: Goodbye, have a great day/evening!)
[07:36:44] *** Quits: white_magic (~white_mag@2600:1700:6ae2:a20:e01a:4687:22b6:73be) (Quit: Client closed)
[07:38:19] *** Quits: Lando-SpacePimp (~Lando@user/lando-spacepimp) (Ping timeout: 265 seconds)
[07:38:35] *** Quits: roxfan (roxfan@11.121-64-87.adsl-dyn.isp.belgacom.be) (Remote host closed the connection)
[07:38:49] <jinsun_> hmm, just from that import? weird, can you paste the full error here https://bpa.st/
[07:39:12] *** Joins: roxfan (roxfan@11.121-64-87.adsl-dyn.isp.belgacom.be)
[07:39:53] <eniac> jinsun_~ yes... just the import... wait
[07:41:26] <eniac> jinsun_~ https://bpa.st/HWNQ
[07:43:14] *** Joins: mohabaks (~mohabaks@gateway/tor-sasl/mohabaks)
[07:43:17] <daex> eniac: I can reproduce that error after just installing music in a fresh venv.
[07:43:31] <eniac> daex~ appreciate it
[07:43:45] <Compass> Hi. Is there a specific channel for python beginners or here is ok to stay/ask?
[07:43:51] *** Joins: JerryXiao (~JerryXiao@user/jerryxiao)
[07:44:51] <eniac> jinsun_~ this happens on windows and linux
[07:46:58] *** Quits: mohabaks (~mohabaks@gateway/tor-sasl/mohabaks) (Remote host closed the connection)
[07:47:22] <daex> Seems like they should be using integer division in `functions.py:275`...
[07:47:43] *** Quits: eniac (~eniac@gateway/tor-sasl/eniac) (Remote host closed the connection)
[07:47:56] *** Joins: eniac (~eniac@gateway/tor-sasl/eniac)
[07:48:10] <eniac> someidea?
[07:52:02] <daex> eniac: what do you mean?
[07:52:04] <jinsun> eniac: okay seems like a problem with the package, someone made a pull request few months back https://github.com/ttm/music/pull/9, but the project seems to be abandoned since 2019
[07:52:41] *** Quits: gggp (~textual@114.245.104.159) (Quit: My MacBook has gone to sleep. ZZZzzz…)
[07:53:48] <eniac> jinsun~ some idea to fix?
[07:54:35] *** Quits: gutt (~gutt@76-208-47-155.lightspeed.knvltn.sbcglobal.net) (Quit: Leaving)
[07:56:48] *** Quits: mrgz (~mrgz@201-42-0-191.dsl.telesp.net.br) (Quit: leaving)
[07:57:29] <daex> The fix in that PR doesn't actually fix the issue for me, there are other places it's called with a float.
[07:57:30] <jinsun> eniac: well see if the changes made in the pull request work, https://github.com/ttm/music/pull/9/files
[07:57:48] <fulljab> !FlipMoran Head First Design Patterns (2008) - E Freeman et al.pdf
[07:58:10] <eniac> jinsun~ how? dont know.
[07:58:53] <fulljab> ooof my bad - new to IRC
[07:59:42] <jinsun> eniac: the easier solution may be to just not use that package and find some alternative, otherwise you will be fixing bugs in that package for a long time
[08:02:18] <eniac> jinsun~ where is located/directory the pip/packages in windows?
[08:02:18] *** Quits: zebrag (~chris@user/zebrag) (Quit: Konversation terminated!)
[08:04:02] *** Joins: ExpiredKebab (~sgreadly@32.58.252.27.dyn.cust.vf.net.nz)
[08:07:28] <jinsun> eniac: the site-packages? try running `import os, sys; print(os.path.join(sys.prefix, 'Lib', 'site-packages'))`, that should give the location
[08:10:00] *** Quits: KombuchaKip (~kip@192.252.230.5) (Quit: Leaving.)
[08:10:58] *** Quits: sed (~sed@pool-100-7-38-116.rcmdva.fios.verizon.net) (Ping timeout: 268 seconds)
[08:11:00] *** Quits: tg (~tg@rockylinux/infra/tg) (Quit: tg)
[08:11:28] *** Quits: Cleverness (~clevernes@pool-108-54-152-186.nycmny.fios.verizon.net) (Remote host closed the connection)
[08:11:29] *** Quits: srhm (~srhm@user/srhm) (Quit: Konversation terminated!)
[08:13:24] *** Parts: Compass (~net@user/compass) ()
[08:20:44] <eniac> jinsun~ perfect! tks!
[08:27:34] *** Quits: fulljab (~fulljab@2620:8d:8000:1070:edc3:1640:aee7:d5e1) (Quit: Textual IRC Client: www.textualapp.com)
[08:31:28] *** Quits: dez (uid92154@user/dez) (Quit: Connection closed for inactivity)
[08:32:35] *** Joins: Powerhouse6666 (~Powerhous@24.109.185.150)
[08:36:02] *** Quits: supakeen (~user@python/site-packages/supakeen) (Quit: WeeChat 3.2.1)
[08:36:32] *** Joins: supakeen (~user@python/site-packages/supakeen)
[08:37:58] *** Quits: grnman_ (~gandalf@c-73-49-209-161.hsd1.fl.comcast.net) (Ping timeout: 252 seconds)
[08:39:42] *** Quits: Powerhouse6666 (~Powerhous@24.109.185.150) (Ping timeout: 265 seconds)
[08:40:23] *** Quits: eniac (~eniac@gateway/tor-sasl/eniac) (Remote host closed the connection)
[08:43:04] *** Quits: reset (~reset@user/reset) (Quit: reset)
[08:46:20] *** Joins: dba (uid502594@id-502594.hampstead.irccloud.com)
[08:47:41] <dba> is it possible to replace the r.raw in bucket.upload_fileobj(r.raw, key) with with open("fullfilename.jpg", "wb") as f:  f.write(r.content) without acually downloading the image?
[08:50:42] <dba> What I am trying to achieve is upload file to S3 bucket without downloading the file then uploading it
[08:51:00] *** Quits: Fiji (~Fiji@user/fiji) (Quit: Leaving)
[08:51:26] *** Quits: Vonter (~Vonter@user/vonter) (Ping timeout: 260 seconds)
[08:52:12] <dba> with the upload_fileobj() seems to take only request raw data and upload it to the S3 but for some images without an estention such as .jpg or pdf they dont get uploaded properly
[08:54:16] *** Quits: vvdaiwrw (~rvgzuuqp@gateway/tor-sasl/rvgzuuqp) (Quit: vvdaiwrw)
[08:54:42] *** Joins: Vonter (~Vonter@user/vonter)
[08:55:07] *** Joins: \\ (~\0x5c@miaow/nonantedeux)
[08:56:34] *** Quits: gitly (~gitly@148.252.128.180) (Ping timeout: 260 seconds)
[08:57:00] *** Quits: pluri (~pluri@user/pluri) (Quit: My MacBook has gone to sleep. ZZZzzz…)
[08:58:15] *** Joins: Powerhouse6666 (~Powerhous@24.109.185.150)
[08:58:15] *** Joins: gitly (~gitly@148.252.132.147)
[08:58:54] *** Joins: eniac (~eniac@gateway/tor-sasl/eniac)
[08:59:58] *** Quits: Dev0n (~Dev0n@user/dev0n) (*.net *.split)
[08:59:58] *** Quits: bluss (~bluss@user/bluss) (*.net *.split)
[08:59:58] *** Quits: randall (~randall@user/randall) (*.net *.split)
[08:59:58] *** Quits: godlike (~godlike@user/godlike) (*.net *.split)
[08:59:58] *** Quits: sunyour (~sunyour@129.226.182.99) (*.net *.split)
[08:59:58] *** Quits: dfch (~dfch@user/dfch) (*.net *.split)
[08:59:58] *** Quits: BtbN (btbn@ffmpeg/developer/btbn) (*.net *.split)
[08:59:58] *** Quits: bidouille (~user_name@trois.potager.org) (*.net *.split)
[08:59:58] *** Quits: psydroid (~psydroid@user/psydroid) (*.net *.split)
[08:59:58] *** Quits: mkbloke (~mkbloke@vps.cammo.me.uk) (*.net *.split)
[08:59:58] *** Quits: mastardet (~mastardet@user/mastardet) (*.net *.split)
[08:59:58] *** Quits: salimfadhley (sid31217@wikipedia/salimfadhley) (*.net *.split)
[08:59:58] *** Quits: fury (uid193779@id-193779.helmsley.irccloud.com) (*.net *.split)
[08:59:58] *** Quits: BlueShark (sid10311@user/blueshark) (*.net *.split)
[08:59:58] *** Quits: Freso (sid7914@libera/staff/metabrainz.user.Freso) (*.net *.split)
[08:59:58] *** Quits: liam (sid7517@id-7517.helmsley.irccloud.com) (*.net *.split)
[08:59:58] *** Quits: bjs (sid190364@user/bjs) (*.net *.split)
[08:59:58] *** Quits: NiKaN (sid385034@id-385034.helmsley.irccloud.com) (*.net *.split)
[08:59:58] *** Quits: srji (~srji@static.43.141.203.116.clients.your-server.de) (*.net *.split)
[08:59:58] *** Quits: w1kl4s (~w1kl4s@user/w1kl4s) (*.net *.split)
[08:59:58] *** Quits: saltrocklamp[m] (~elementio@user/hexology) (*.net *.split)
[08:59:58] *** Quits: morguldir (~morguldir@2001:470:69fc:105::21bd) (*.net *.split)
[08:59:58] *** Quits: space-ghost (~gryster@user/jean-luc) (*.net *.split)
[08:59:58] *** Quits: Alexer (~alexer@alexer.net) (*.net *.split)
[08:59:58] *** Quits: DarthGandalf (user@znc/developer/DarthGandalf) (*.net *.split)
[08:59:58] *** Quits: phryk (~totallyno@user/phryk) (*.net *.split)
[08:59:58] *** Quits: maxking (~maxking@user/maxking) (*.net *.split)
[08:59:58] *** Quits: d3x (michal@bielaw.ski) (*.net *.split)
[08:59:58] *** Quits: SallyAhaj (sallyahaj@user/sallyahaj) (*.net *.split)
[08:59:58] *** Quits: MrAureliusR (~MrAureliu@user/mraureliusr) (*.net *.split)
[08:59:58] *** Quits: dynos01 (~dynos01@2600:3c01:e000:36a::8400) (*.net *.split)
[08:59:58] *** Quits: tonitch (~tonitch@user/tonitch) (*.net *.split)
[08:59:58] *** Quits: fructose (~fructose@user/fructose) (*.net *.split)
[09:00:05] *** Joins: srji (~srji@static.43.141.203.116.clients.your-server.de)
[09:00:09] *** Joins: Alexer (~alexer@alexer.net)
[09:00:16] *** Joins: d3x (michal@bielaw.ski)
[09:00:18] *** Joins: bjs (sid190364@user/bjs)
[09:00:18] *** Joins: BlueShark (sid10311@user/blueshark)
[09:00:18] *** Joins: liam (sid7517@id-7517.helmsley.irccloud.com)
[09:00:20] *** Joins: bluss (~bluss@user/bluss)
[09:00:22] *** Joins: fury (uid193779@id-193779.helmsley.irccloud.com)
[09:00:28] *** Joins: Freso (sid7914@libera/staff/metabrainz.user.Freso)
[09:00:32] *** Joins: NiKaN (sid385034@id-385034.helmsley.irccloud.com)
[09:00:32] *** Joins: godlike (~godlike@user/godlike)
[09:00:32] *** Joins: BtbN (btbn@ffmpeg/developer/btbn)
[09:00:42] *** Joins: dynos01 (~dynos01@li820-149.members.linode.com)
[09:00:43] *** Joins: MrAureliusR (~MrAureliu@user/mraureliusr)
[09:00:48] *** Joins: phryk (~totallyno@user/phryk)
[09:00:51] *** Joins: DarthGandalf (user@znc/developer/DarthGandalf)
[09:00:54] *** Joins: mastardet (~mastardet@user/mastardet)
[09:00:55] *** Joins: salimfadhley (sid31217@wikipedia/salimfadhley)
[09:01:02] *** Joins: dfch (~dfch@user/dfch)
[09:01:10] *** Joins: maxking (~maxking@user/maxking)
[09:01:12] *** Joins: tonitch (~tonitch@user/tonitch)
[09:01:15] *** Joins: w1kl4s (~w1kl4s@user/w1kl4s)
[09:01:48] *** Quits: adder (~adder@user/adder) (Quit: Leaving)
[09:02:46] *** Joins: SallyAhaj (sallyahaj@user/sallyahaj)
[09:03:22] *** Quits: Amadiro (~Amadiro@84.209.11.12) (Ping timeout: 252 seconds)
[09:04:13] *** Joins: Dev0n (~Dev0n@user/dev0n)
[09:04:15] *** Joins: Amadiro (~Amadiro@84.209.11.12)
[09:04:50] *** Quits: Powerhouse6666 (~Powerhous@24.109.185.150) (Ping timeout: 265 seconds)
[09:05:23] <tusko> Is there a certain way you have to pass strings as input to python programs?
[09:05:41] <user3456> no?
[09:05:46] <tusko> e.g python -i program.py "this is input"
[09:06:03] <tusko> Python just hangs when I do this.
[09:06:22] <user3456> what python version are you using?
[09:07:12] <user3456> and what shell are you using to run python
[09:07:12] <shangxiao> are we talking about arguments or input?
[09:07:29] <tusko> Python3PyPy 7.3.5 w/ Python 3.7.10
[09:07:43] <user3456> that might be a pypy issue
[09:07:43] *** Joins: psydroid (~psydroid@user/psydroid)
[09:07:54] <tusko> I tried it with Python 3 alone as well
[09:08:00] *** Quits: mefistofeles (~mefistofe@user/mefistofeles) (Quit: Hay te huacho!)
[09:08:41] <user3456> running `python program.py "this is input"` should make "this is input" (string) available to program.py through sys.argv (sys needs to be imported)
[09:09:17] *** Joins: morguldir (~morguldir@2001:470:69fc:105::21bd)
[09:10:29] <user3456> tusko: how are you trying to access program input?
[09:10:49] <shangxiao> eg: python -c "import sys; print(sys.argv)" "this is input"
[09:11:07] <shangxiao> "this is input" will be a single argument
[09:11:28] <shangxiao> ['-c', 'this is input']
[09:11:38] *** Quits: koltrast (~koltrast@h77-53-57-114.cust.a3fiber.se) (*.net *.split)
[09:11:38] *** Quits: mort (~mort@188.166.114.29) (*.net *.split)
[09:11:38] *** Quits: Santzes (~Santzes@2400:8901::f03c:92ff:fe49:47a6) (*.net *.split)
[09:11:38] *** Quits: josh_h (sid301834@id-301834.helmsley.irccloud.com) (*.net *.split)
[09:11:38] *** Quits: jtanner (sid194399@id-194399.helmsley.irccloud.com) (*.net *.split)
[09:11:38] *** Quits: graingert (sid128301@id-128301.tinside.irccloud.com) (*.net *.split)
[09:11:38] *** Quits: alexises (~lameire@51.15.136.90) (*.net *.split)
[09:11:38] *** Quits: kindablue (znc@2001:19f0:6001:175a:5400:3ff:fe51:d77f) (*.net *.split)
[09:11:38] *** Quits: greyblue9 (sid500829@id-500829.ilkley.irccloud.com) (*.net *.split)
[09:11:38] *** Quits: diegov (~diegov@2001:470:69fc:105::103f) (*.net *.split)
[09:11:38] *** Quits: _moep_ (~moep@user/moep/x-3358975) (*.net *.split)
[09:11:39] *** Quits: hsiktas (sid224847@id-224847.lymington.irccloud.com) (*.net *.split)
[09:11:39] *** Quits: hwrd (sid64402@id-64402.lymington.irccloud.com) (*.net *.split)
[09:11:39] *** Quits: muscularduckling (~musculard@2001:470:69fc:105::e896) (*.net *.split)
[09:11:39] *** Quits: cotsuka (~cotsuka@user/cotsuka) (*.net *.split)
[09:11:39] *** Quits: chilversc (~chilversc@user/chilversc) (*.net *.split)
[09:11:39] *** Quits: krjst (~krjst@2604:a880:800:c1::16b:8001) (*.net *.split)
[09:11:39] *** Quits: graphitemaster (~graphitem@user/graphitemaster) (*.net *.split)
[09:11:39] *** Quits: acnebs (~acnebs@2604:a880:400:d0::1a64:c001) (*.net *.split)
[09:11:39] *** Quits: nanonyme (nanonyme@kapsi.fi) (*.net *.split)
[09:11:39] *** Quits: kstolen (~kStolen@2a00:fa40:2aaa:1::539:82de) (*.net *.split)
[09:11:39] *** Quits: enyc (~enyc@user/enyc) (*.net *.split)
[09:11:39] *** Quits: luckydonald (~luckydona@user/luckydonald) (*.net *.split)
[09:11:39] *** Quits: ringo_ (~ringo@157.230.117.128) (*.net *.split)
[09:11:39] *** Quits: rgp (~rgp@user/rgp) (*.net *.split)
[09:11:39] *** Quits: shrysr (~shrysr@user/shrysr) (*.net *.split)
[09:11:39] *** Quits: strudl (~strudl@user/strudl) (*.net *.split)
[09:11:39] *** Quits: Lartza (lartza@user/lartza) (*.net *.split)
[09:11:39] *** Quits: Chex (~Chex@user/chex) (*.net *.split)
[09:11:39] *** Quits: baloona (~baloona@mail.baloona.de) (*.net *.split)
[09:11:39] *** Quits: susam (~susam@user/susam) (*.net *.split)
[09:11:39] *** Quits: gin (~gin@user/gin) (*.net *.split)
[09:11:39] *** Quits: fpc (~fpc@user/fpc) (*.net *.split)
[09:11:39] *** Quits: dale (dale@user/dale) (*.net *.split)
[09:11:39] *** Quits: starz (starz@ns378512.ip-37-59-36.eu) (*.net *.split)
[09:11:39] *** Quits: zeus (~user@user/kamyl) (*.net *.split)
[09:11:39] *** Quits: kafka (~kafka@user/kafka) (*.net *.split)
[09:11:48] *** Joins: zeus (~user@user/kamyl)
[09:11:49] *** Joins: susam (~susam@user/susam)
[09:11:53] *** Joins: dale (dale@user/dale)
[09:12:03] *** Joins: chilversc (~chilversc@user/chilversc)
[09:12:10] *** Joins: Lartza (lartza@user/lartza)
[09:12:10] *** Joins: graphitemaster (~graphitem@user/graphitemaster)
[09:12:17] <user3456> it *should* be a single argument, but if they're using a nonstandard shell then we don't know for sure
[09:12:22] *** Joins: kindablue (znc@2001:19f0:6001:175a:5400:3ff:fe51:d77f)
[09:12:22] *** Joins: acnebs (~acnebs@2604:a880:400:d0::1a64:c001)
[09:12:23] *** Joins: graingert (sid128301@2a03:5180:f::1:f52d)
[09:12:29] *** Joins: mort (~mort@188.166.114.29)
[09:12:30] *** Joins: nanonyme (nanonyme@kapsi.fi)
[09:12:33] *** Joins: rgp (~rgp@user/rgp)
[09:12:33] *** Joins: shrysr (~shrysr@user/shrysr)
[09:12:36] *** Joins: kstolen (~kStolen@2a00:fa40:2aaa:1::539:82de)
[09:12:37] *** Joins: greyblue9 (sid500829@id-500829.ilkley.irccloud.com)
[09:12:39] *** Joins: jtanner (sid194399@id-194399.helmsley.irccloud.com)
[09:12:40] *** Joins: hsiktas (sid224847@2a03:5180:f:2::3:6e4f)
[09:12:43] *** Joins: hwrd (sid64402@2a03:5180:f:2::fb92)
[09:12:43] *** Joins: ringo_ (~ringo@157.230.117.128)
[09:12:45] *** Joins: baloona (~baloona@mail.baloona.de)
[09:12:45] *** Joins: koltrast (~koltrast@h77-53-57-114.cust.a3fiber.se)
[09:12:50] *** Joins: fpc (~fpc@user/fpc)
[09:13:49] *** Quits: eruditass (uid248673@id-248673.uxbridge.irccloud.com) (Quit: Connection closed for inactivity)
[09:14:01] <shangxiao> are you correcting yourself or the example I gave to support what you said?
[09:14:08] *** Joins: krjst (~krjst@2604:a880:800:c1::16b:8001)
[09:15:56] *** Joins: strudl (~strudl@user/strudl)
[09:17:20] *** Joins: cotsuka (~cotsuka@user/cotsuka)
[09:17:23] *** Quits: slowButPresent (~slowButPr@user/slowbutpresent) (Quit: leaving)
[09:17:48] *** Joins: diegov (~diegov@2001:470:69fc:105::103f)
[09:17:48] *** Joins: Powerhouse6666 (~Powerhous@24.109.185.150)
[09:18:04] *** Quits: wyclif (~wyclif@user/wyclif) (Ping timeout: 252 seconds)
[09:18:13] *** Quits: ttree (~ttree0@c-73-239-62-159.hsd1.wa.comcast.net) (Ping timeout: 252 seconds)
[09:19:00] *** Joins: wyclif (~wyclif@user/wyclif)
[09:22:47] *** Quits: Powerhouse6666 (~Powerhous@24.109.185.150) (Ping timeout: 246 seconds)
[09:23:00] *** Joins: ttree (~ttree0@c-73-239-62-159.hsd1.wa.comcast.net)
[09:23:50] *** Quits: wyclif (~wyclif@user/wyclif) (Ping timeout: 246 seconds)
[09:24:08] *** Quits: LiftLeft (~LiftLeft@216-26-118-34.dynamic.nelson.airstreamcomm.net) (Ping timeout: 268 seconds)
[09:24:09] *** Joins: wyclif (~wyclif@user/wyclif)
[09:25:56] <tusko> user3456, I know that if a string is given to this python file it should perform, but I guess the way I am presenting the string is not quite right
[09:26:37] <grawity> does it still hang if you do not use the -i option
[09:27:08] <tusko> yep
[09:27:33] <jinsun> does it also hang if you don't give the string argument?
[09:28:07] <grawity> does shangxiao's python -c example work?
[09:28:13] <grawity> and if you add an 'import sys; print(sys.argv)' as the very first thing to *your* script, what does it print out (hopefully before hanging)?
[09:28:33] *** Quits: launchd (examknow@bitbot/launchd) (Excess Flood)
[09:28:36] <tusko> jinsun, it does
[09:28:43] *** Joins: launchd (examknow@bitbot/launchd)
[09:29:40] <jinsun> so the argument doesn't cause the hang?
[09:29:43] <tusko> it prints a list ['program.py', the string]
[09:30:21] <shangxiao> the fact that the argument doesn't cause the hang says to me that it's waiting at a breakpoint?
[09:30:22] *** Joins: talismanick (~user@76.78.246.233)
[09:30:22] <grawity> good, sounds like it's being started just fine, and it's receiving the string from your command line fine too
[09:30:38] <shangxiao> ^
[09:30:45] <tusko> It seems that it is reading the string in from stdin actually
[09:31:05] <tusko> sys.stdin.read().replace("\n", "").replace(" ", "").upper()
[09:31:18] <shangxiao> tusko: do you know what -i does?
[09:31:19] <grawity> that would explain the "hang", yes
[09:31:34] <grawity> (stdin and argv are very much not the same thing)
[09:31:36] <talismanick> I can't tell - is the offlineimap in PyPI offlineimap (Python 2) or offlineimap3?
[09:31:55] <talismanick> I didn't think PyPI had Python 2 packages anymore
[09:33:01] <shangxiao> from the --help: "-i     : inspect interactively after running script;..."
[09:33:20] <shangxiao> i suspect you're getting -i mixed up with something to read stdin?
[09:33:34] *** Joins: stranac (~stranac@195.29.239.126)
[09:33:49] <grawity> hmm -i wouldn't really interfere with stdin reads though, at least not when the script is being run interactively
[09:34:04] *** Joins: dvx (~dvx@185.63.97.64)
[09:34:50] *** Quits: fikran (~fikran@user/fikran) (Ping timeout: 268 seconds)
[09:35:49] <grawity> it sounds like your program.py should be run without any arguments – instead, when it's "hung", input your string then press Enter and Ctrl+D (or, press Ctrl+D twice) to finish the read() call
[09:36:34] *** Joins: fikran (~fikran@user/fikran)
[09:36:46] *** Quits: Lando-HoloNet (~Lando@user/lando-spacepimp) (Ping timeout: 252 seconds)
[09:38:28] *** Joins: Memory (sid459764@user/memory)
[09:38:46] *** Joins: Powerhouse6666 (~Powerhous@24.109.185.150)
[09:39:23] *** Joins: eruditass (uid248673@id-248673.uxbridge.irccloud.com)
[09:39:42] *** Quits: nomic (~nomic@185.217.117.73) (Quit: Leaving)
[09:39:46] <jinsun> tusko: or pipe the output of another program to python, something like `echo "this is input" | python program.py`
[09:45:24] <shangxiao> grawity: yep that's what i'm confused about, just hoping to get tusko to confirm what they actually are trying to do *shrugs* :)
[09:45:37] *** Joins: YoungPrince (~DrBrownbe@2600:1700:9aa1:6bc0:2ce4:485:4cd8:e38d)
[09:46:16] <shangxiao> but to me "hanging" sounds like it could be a symptom of python waiting at a breakpoint, but for some reason the prompt isn't showing? who knows
[09:46:22] *** Quits: eruditass (uid248673@id-248673.uxbridge.irccloud.com) ()
[09:48:05] *** Joins: eruditass (uid248673@id-248673.uxbridge.irccloud.com)
[09:48:41] *** Quits: r3m (~launch@user/r3m) (Quit: WeeChat 3.3-rc1)
[09:49:11] *** Joins: r3m (~launch@user/r3m)
[09:49:24] <jinsun> well nowit is kinda obvious it just "hangs" at the point where it is trying to read from sys.stdin, and tusko just has to provide input through stdin instead of command line args
[09:49:38] *** Quits: DrBrownBear (~DrBrownbe@2600:1700:9aa1:6bc0:406d:8b13:ffee:965a) (Ping timeout: 268 seconds)
[09:50:52] *** Joins: grnman_ (~gandalf@c-73-49-209-161.hsd1.fl.comcast.net)
[09:50:55] *** Joins: carl- (~carl-@c-138ee555.02-180-73746f39.bbcust.telenor.se)
[09:51:05] *** Quits: Powerhouse6666 (~Powerhous@24.109.185.150) (Ping timeout: 264 seconds)
[09:51:10] *** Quits: ttree (~ttree0@c-73-239-62-159.hsd1.wa.comcast.net) (Ping timeout: 240 seconds)
[09:51:50] <shangxiao> jinsun: ah yep my mistake.  but still my point about -i remains xD
[09:52:53] <jinsun> yeah that -i might be a random attempt at making it work, it is not actually needed
[09:54:33] <shangxiao> anyhoo i reckon they've fixed it since they went quiet
[09:54:45] *** Quits: penguino (~mrpenguin@user/mrpenguin) (Ping timeout: 276 seconds)
[09:55:11] *** Quits: cjb (~cjbayliss@user/cjb) ()
[10:00:53] *** Joins: mindraj (~mindraj@user/mindraj)
[10:02:20] *** Quits: YoungPrince (~DrBrownbe@2600:1700:9aa1:6bc0:2ce4:485:4cd8:e38d) (Ping timeout: 246 seconds)
[10:10:38] *** Joins: upsala (~zcb@185.213.155.160)
[10:12:22] *** Joins: montxero (~user@149.167.149.74)
[10:13:02] *** Quits: mindraj (~mindraj@user/mindraj) (Read error: Connection reset by peer)
[10:14:19] *** Joins: Powerhouse6666 (~Powerhous@24.109.185.150)
[10:18:15] *** Joins: ravindUwU (~ravindUwU@n110-22-100-22.sun3.vic.optusnet.com.au)
[10:18:24] <ravindUwU> Hello!
[10:18:34] *** death916 is now known as undefined
[10:18:44] *** undefined is now known as death916
[10:19:08] <ravindUwU> Is there any way to type-hint variable as a tuple whose first element is a string, and subsequent elements are anything?
[10:19:23] <ravindUwU> Essentially, `tuple[str, Any, ...]`, but `...` isn't allowed :(
[10:19:34] *** Joins: jpodivin (~jpodivin@118.108.broadband14.iol.cz)
[10:24:37] *** Joins: togusa (~togusa@user/togusa)
[10:25:53] *** Quits: Powerhouse6666 (~Powerhous@24.109.185.150) (Ping timeout: 264 seconds)
[10:28:46] *** Joins: Powerhouse6666 (~Powerhous@24.109.185.150)
[10:29:18] *** Joins: flokuehn (~flokuehn@i577BC64C.versanet.de)
[10:29:27] *** Joins: civillian (~nick@ppp121-45-196-44.cbr-trn-nor-bras38.tpg.internode.on.net)
[10:30:12] <jinsun> ravindUwU: nope, tuples of arbitrary size must have elements of same type, you can have different types only if your tuple is fixed size
[10:30:36] <ravindUwU> jinsun, thanks just confirming.
[10:31:06] *** Quits: MrBungle (~MrBungle@2604:3d08:1788:dc00:c1e4:fb70:ed23:60db) (Read error: Connection reset by peer)
[10:31:43] *** Quits: Plyht (uid433484@id-433484.hampstead.irccloud.com) (Quit: Connection closed for inactivity)
[10:33:35] *** Joins: Naan (~Naan@user/naan)
[10:39:34] *** Joins: tmart (~tmart@74-194-163-71.bcstcmtk01.res.dyn.suddenlink.net)
[10:40:11] *** Quits: sandb0y (~pirate@user/sandb0y) (Quit: WeeChat 3.2.1)
[10:41:59] *** Quits: ST47 (~ST47@wikimedia/st47) (Ping timeout: 265 seconds)
[10:43:28] *** Quits: tim__ (~tmart@74-194-163-71.bcstcmtk01.res.dyn.suddenlink.net) (Ping timeout: 252 seconds)
[10:44:04] *** Quits: jeho (~jehoshaph@user/jehoshaphat) (Remote host closed the connection)
[10:44:25] *** Quits: Powerhouse6666 (~Powerhous@24.109.185.150) (Ping timeout: 252 seconds)
[10:44:28] *** Joins: jeho (~jehoshaph@user/jehoshaphat)
[10:44:36] *** Joins: mindraj (~mindraj@user/mindraj)
[10:45:07] *** Joins: ExeciN (~ExeciN@user/nicexe)
[10:45:33] *** Quits: PocketKiller (PacKetIV@user/packetiv) (Quit: *evaporates*)
[10:45:48] *** Joins: dynos01_ (~dynos01@2600:3c01:e000:36a::8400)
[10:45:51] *** Quits: dynos01 (~dynos01@li820-149.members.linode.com) (Quit: ZNC 1.7.4 - https://znc.in)
[10:46:30] *** Quits: seednode (~seednode@user/seednode) (Quit: Nihil supernum.)
[10:47:03] *** Joins: seednode (~seednode@user/seednode)
[10:47:15] *** Quits: noyb (~noyb@user/noyb) (Remote host closed the connection)
[10:47:24] *** Joins: noyb (~noyb@user/noyb)
[10:47:51] *** Joins: PocketKiller (PacKetIV@user/packetiv)
[10:48:09] *** Quits: ExeciN (~ExeciN@user/nicexe) (Remote host closed the connection)
[10:48:16] *** Quits: n1000 (~n1000@user/n1000) (Ping timeout: 265 seconds)
[10:48:46] *** Joins: kosh (~kosh@user/kosh)
[10:50:38] *** Joins: Gurkenglas (~Gurkengla@dslb-002-207-014-195.002.207.pools.vodafone-ip.de)
[10:50:41] *** Quits: u4t (~chat@78.ip-139-99-236.net) (Ping timeout: 265 seconds)
[10:50:59] *** Joins: u4t (~chat@78.ip-139-99-236.net)
[10:52:23] *** Joins: AlanMD_ (~AlanMD@193.105.140.131)
[10:53:04] *** Joins: Naan` (~Naan@user/naan)
[10:54:36] *** Joins: ayustae (Thunderbir@gateway/vpn/protonvpn/ayustae)
[10:54:51] *** Joins: winterflaw (~winterfla@gateway/tor-sasl/winterflaw)
[10:55:26] *** Joins: ST47 (~ST47@wikimedia/st47)
[10:55:31] *** Quits: AlanMD (~AlanMD@86.121.179.183) (Ping timeout: 265 seconds)
[10:55:51] *** Quits: eniac (~eniac@gateway/tor-sasl/eniac) (Remote host closed the connection)
[10:56:00] *** Joins: otisolsen70 (~otisolsen@xd4ed80b5.cust.hiper.dk)
[10:56:01] *** Joins: gusto (~Augustus@109.255.100.54)
[10:56:12] *** Joins: oldguy (~oldguy@user/oldguy)
[10:56:14] *** Quits: Naan (~Naan@user/naan) (Ping timeout: 246 seconds)
[10:59:14] *** Joins: Hokedli (~lasliedv@gateway/tor-sasl/hokedli)
[11:00:22] *** Joins: eniac (~eniac@gateway/tor-sasl/eniac)
[11:00:39] *** Joins: sgreadly (~sgreadly@32.58.252.27.dyn.cust.vf.net.nz)
[11:00:46] *** Joins: neopolitan (~neopolita@45.76.61.24)
[11:03:25] *** Quits: ExpiredKebab (~sgreadly@32.58.252.27.dyn.cust.vf.net.nz) (Ping timeout: 268 seconds)
[11:04:47] <tusko> students these days are trash
[11:05:04] *** Joins: palasso (~palasso@user/palasso)
[11:05:09] *** Joins: Powerhouse6666 (~Powerhous@24.109.185.150)
[11:05:17] <tusko> you give an assignment and within a semester or two all solutions are the same, lifted code
[11:05:44] *** Quits: kushal (~hopless@dgplug/kushal) (Quit: ZNC 1.8.2 - https://znc.in)
[11:07:12] *** Joins: Polyinsecure (~Polyinsec@180.244.135.13)
[11:07:58] *** Joins: kushal (~hopless@dgplug/kushal)
[11:09:00] *** Quits: Polyinsecure (~Polyinsec@180.244.135.13) (Client Quit)
[11:09:32] <whatsupboy> tusko:  if you are their teacher you are trash
[11:09:35] *** Joins: n00b101 (uid448161@id-448161.lymington.irccloud.com)
[11:09:43] <whatsupboy> because it is teacher duty and offtopic here
[11:10:01] *** Quits: Powerhouse6666 (~Powerhous@24.109.185.150) (Ping timeout: 265 seconds)
[11:12:31] <tusko> no u
[11:13:05] *** Quits: Hokedli (~lasliedv@gateway/tor-sasl/hokedli) (Quit: Konversation terminated!)
[11:13:52] *** Joins: rendar (~rendar@user/rendar)
[11:14:03] *** Joins: Hokedli (~lasliedv@gateway/tor-sasl/hokedli)
[11:14:07] <neopolitan> im not really sure what more you can do for students when they all hand in the exact same code
[11:14:19] <neopolitan> like, at that point it's clear it's more about passing the class than the learning to them
[11:14:30] <neopolitan> it isn't easy to teach those that don't want to be taught
[11:14:54] *** Joins: gitesh (uid423739@id-423739.ilkley.irccloud.com)
[11:15:19] *** Joins: manti7 (~manti7@176.10.104.94)
[11:15:52] *** Joins: ihristov (~ihristov@217.145.94.71)
[11:16:34] *** Joins: pycode (~pycode@2001:b07:5d28:551:e7b1:cf2:eda4:550c)
[11:17:15] <whatsupboy> motivating students also teachers duty..anyone can learn to code alone without needing teacher
[11:18:13] *** Joins: EvilDMP (~textual@django/moderator/EvilDMP)
[11:18:13] *** Joins: netrunner (~netrunner@user/netrunner)
[11:19:34] *** Joins: chele (~chele@user/chele)
[11:19:58] *** Quits: Betal (~Betal@user/betal) (Quit: WeeChat 3.2.1)
[11:22:15] *** Joins: brelod (~me@90.244.150.142)
[11:23:00] *** Joins: Powerhouse6666 (~Powerhous@24.109.185.150)
[11:23:27] *** Quits: mindraj (~mindraj@user/mindraj) (Quit: Goodbye, have a great day/evening!)
[11:23:39] *** Quits: treefrob (~treefrob@p2e54235e.dip0.t-ipconnect.de) (Remote host closed the connection)
[11:23:41] *** Joins: rakoon (~rakoon@2001:985:f4c6:1:165f:af7c:aaba:9399)
[11:23:59] *** Joins: elkalamar (elkalamar@gateway/vpn/airvpn/elkalamar)
[11:24:02] *** Joins: n1000 (~n1000@user/n1000)
[11:27:00] *** Joins: Seiryuu (~Seiryuu@ip174-103-176-143.adsl2.static.versatel.nl)
[11:27:29] <rakoon> I get the event loop in my main thread and start it in a function in other thread, then I call in main thread (passing the loop): future = asyncio.run_coroutine_threadsafe(main(), loop) to run my main coroutine. If I do task.add_done_callback(lambda: loop.stop()) is it threadsafe? I will paste the code
[11:27:39] *** Quits: Seiryuu (~Seiryuu@ip174-103-176-143.adsl2.static.versatel.nl) (Client Quit)
[11:30:23] *** Joins: kib (~kib@user/kib)
[11:30:30] <rakoon> https://paste.ee/p/sX0mH#WHWx0feT2WB8hKxsyreOUXuS1CixD9S2
[11:30:42] *** Quits: djhankb (~djhankb@208.113.164.68) (Remote host closed the connection)
[11:31:13] *** Joins: djhankb (~djhankb@208.113.164.68)
[11:32:15] *** Joins: rememberYou (~someone@user/rememberyou)
[11:32:16] *** Quits: Axy (~Axy@user/axy) (Ping timeout: 252 seconds)
[11:32:23] *** Quits: n00b101 (uid448161@id-448161.lymington.irccloud.com) (Quit: Updating details, brb)
[11:32:28] <rakoon> correction future.add_done_callback since I saved it in variable future, not task
[11:32:32] *** Joins: n00b101 (uid448161@id-448161.lymington.irccloud.com)
[11:33:29] *** Joins: Axy (~Axy@user/axy)
[11:34:58] *** Quits: talismanick (~user@76.78.246.233) (Quit: Connection Lost)
[11:35:01] *** Quits: Powerhouse6666 (~Powerhous@24.109.185.150) (Ping timeout: 252 seconds)
[11:35:20] *** Joins: talismanick (~user@76.78.246.233)
[11:35:52] *** Joins: Mattiaslndstrm (~Mattiasln@c188-148-207-108.bredband.tele2.se)
[11:38:41] *** Quits: sgreadly (~sgreadly@32.58.252.27.dyn.cust.vf.net.nz) (Quit: Textual IRC Client: www.textualapp.com)
[11:42:28] *** Joins: Yion (~Yion@pd95caa88.dip0.t-ipconnect.de)
[11:42:30] *** Joins: Plyht (uid433484@id-433484.hampstead.irccloud.com)
[11:43:40] *** Quits: fikran (~fikran@user/fikran) (Ping timeout: 240 seconds)
[11:43:42] *** Quits: EvilDMP (~textual@django/moderator/EvilDMP) (Quit: My MacBook has gone to sleep. ZZZzzz…)
[11:44:44] *** Quits: gitly (~gitly@148.252.132.147) (Ping timeout: 268 seconds)
[11:45:24] *** Joins: mexen (uid495612@user/mexen)
[11:45:56] *** Joins: fikran (~fikran@user/fikran)
[11:46:03] *** Joins: antaresgades (~antaresga@ieocadiz.cd.ieo.es)
[11:46:34] *** Joins: gitly (~gitly@148.252.128.176)
[11:48:14] *** Joins: PaddyF (~PaddyF@user/paddyf)
[11:48:20] *** Joins: ExeciN (~ExeciN@user/nicexe)
[11:49:28] *** Quits: tracey (~trace@ip5f5a6a70.dynamic.kabel-deutschland.de) (Read error: Connection reset by peer)
[11:51:06] <graingert[m]> <rakoon> "I get the event loop in my..." <-  asyncio.get_event_loop is deprecated don't call it
[11:51:20] <graingert[m]> it will also get you a loop bound to the current thread
[11:51:33] <graingert[m]> > result.add_done_callback(lambda f: loop.stop())  # FIXME is it threadsafe?
[11:51:33] <graingert[m]> no this is not threadsafe
[11:51:39] <graingert[m]>  * >
[11:51:39] <graingert[m]> result.add_done_callback(lambda f: loop.stop())  # FIXME is it threadsafe?
[11:51:40] <graingert[m]> no this is not threadsafe
[11:52:04] *** Joins: McEndu (~McEndu@114.249.192.57)
[11:52:28] <graingert[m]> I'd recommend `with anyio.start_blocking_portal() as portal:` instead rakoon
[11:53:25] *** Joins: McEndu_ (~McEndu@85.203.23.11)
[11:53:38] *** Quits: togusa (~togusa@user/togusa) (Ping timeout: 246 seconds)
[11:55:56] *** Quits: ferz (~ferz@93-39-142-224.ip76.fastwebnet.it) (Ping timeout: 265 seconds)
[11:57:17] *** Quits: McEndu (~McEndu@114.249.192.57) (Ping timeout: 268 seconds)
[11:57:41] *** Joins: shad (~shad@user/shad)
[11:58:02] *** Joins: trace987 (~trace@dynamic-002-247-249-072.2.247.pool.telefonica.de)
[11:58:17] *** Quits: kib (~kib@user/kib) (Ping timeout: 264 seconds)
[11:58:53] *** Quits: Mattiaslndstrm (~Mattiasln@c188-148-207-108.bredband.tele2.se) (Ping timeout: 246 seconds)
[12:00:13] *** Joins: tracey (~trace@ip5f5a6a70.dynamic.kabel-deutschland.de)
[12:00:17] *** Joins: PJBoy (~PJBoy@user/pjboy)
[12:00:35] <antaresgades> Hello all. I'd like to know why I get an strange (under my point of view) behavior when using the is operator. I've left a complete description of the issue here https://bpa.st/U4MA
[12:00:41] <graingert[m]> rakoon: but really you should use `asyncio.run` in your main thread
[12:01:06] *** Joins: kib (~kib@user/kib)
[12:01:46] <graingert[m]> antaresgades: > Note that comparisons, membership tests, and identity tests, all have the same precedence and have a left-to-right chaining feature as described in the Comparisons section.
[12:01:47] *** Quits: McEndu_ (~McEndu@85.203.23.11) (Remote host closed the connection)
[12:01:53] *** Joins: ubert (~Thunderbi@91.141.77.1.wireless.dyn.drei.com)
[12:02:09] <graingert[m]> antaresgades: see https://docs.python.org/3/reference/expressions.html#comparisons
[12:02:13] *** Joins: McEndu_ (~McEndu@85.203.23.11)
[12:02:44] *** Quits: trace987 (~trace@dynamic-002-247-249-072.2.247.pool.telefonica.de) (Ping timeout: 246 seconds)
[12:06:19] *** Quits: mat001 (~mat001@c-73-223-64-126.hsd1.ca.comcast.net) (Remote host closed the connection)
[12:07:17] *** Quits: McEndu_ (~McEndu@85.203.23.11) (Ping timeout: 264 seconds)
[12:08:00] *** Quits: eniac (~eniac@gateway/tor-sasl/eniac) (Ping timeout: 276 seconds)
[12:10:14] *** Joins: McEndu (~McEndu@114.249.192.57)
[12:10:26] *** Joins: ferz (~ferz@93-39-142-224.ip76.fastwebnet.it)
[12:11:23] *** Quits: Hokedli (~lasliedv@gateway/tor-sasl/hokedli) (Quit: Konversation terminated!)
[12:11:36] <shangxiao> antaresgades: it's because of the "operator chaining"
[12:12:23] <shangxiao> the docs you linked to have a disclaimer which graingert pointed to ;)
[12:12:27] <antaresgades> graingert[m] Ok, I have understood that the left to right  chainage meant that a in b is True the in was first evaluated, but the chainage means in my case 'Mary' in names and names is True, that's why it doesn't work. Thanks a lot graingert[m] shagxiao
[12:13:07] <Repiphany> You shouldn't compare things to True or False like that anyway
[12:13:24] <shangxiao> 'Mary' in names is True -> 'Mary' in names and names is True
[12:13:49] *** Quits: McEndu (~McEndu@114.249.192.57) (Quit: Leaving)
[12:17:42] *** Quits: Tempesta (Tempesta@user/tempesta) (Remote host closed the connection)
[12:18:26] *** Quits: gitly (~gitly@148.252.128.176) (Quit: WeeChat 3.2)
[12:19:00] *** Quits: Madda (~Madda@150.249.9.51.dyn.plus.net) (Ping timeout: 260 seconds)
[12:19:51] *** Joins: gitly (~gitly@148.252.128.176)
[12:20:11] *** Joins: Tempesta (~Tempesta@user/tempesta)
[12:20:16] *** Quits: tracey (~trace@ip5f5a6a70.dynamic.kabel-deutschland.de) (Remote host closed the connection)
[12:22:39] *** Quits: Axy (~Axy@user/axy) (Read error: Connection reset by peer)
[12:22:40] *** Parts: talismanick (~user@76.78.246.233) (ERC (IRC client for Emacs 27.2))
[12:22:51] *** Quits: kickingvegas (~cchoi@c-24-5-40-20.hsd1.ca.comcast.net) (Quit: leaving)
[12:22:59] *** Joins: trace987 (~trace@ip5f5a6a70.dynamic.kabel-deutschland.de)
[12:25:34] <The-Compiler> antaresgades: to give a simpler example, consider "5 < x < 10" which is often used in Python instead of "5 < x and x < 10"
[12:26:03] *** Joins: Axy (~Axy@user/axy)
[12:26:19] <The-Compiler> antaresgades: but like Repiphany said, usually you'd just do   if 'Mary' in names:
[12:27:00] *** Quits: semeion (~semeion@user/semeion) (Quit: WeeChat 3.2.1)
[12:27:03] <The-Compiler> antaresgades: also if this code works without the parantheses for print, you're using Python 2, which is end of life since January 2020. You might want to use Python 3 instead. :)
[12:27:18] *** Quits: Axy (~Axy@user/axy) (Read error: Connection reset by peer)
[12:27:54] *** Joins: xa0s (~xa0s@mab.sdf.org)
[12:30:15] *** Quits: ravindUwU (~ravindUwU@n110-22-100-22.sun3.vic.optusnet.com.au) (Quit: KTHXBAI)
[12:30:26] *** Quits: kai3 (~kai@x50d24799.cust.hiper.dk) (Quit: Ping timeout (120 seconds))
[12:30:53] *** Joins: kai3 (~kai@x50d24799.cust.hiper.dk)
[12:32:07] <antaresgades> The-Compiler: Yes, I know. It was an answer to a Python Course fellow. I answered in the same sense (just mary in names) but I wanted to explain why it worked that way.
[12:33:06] *** Joins: Powerhouse6666 (~Powerhous@24.109.185.150)
[12:33:39] <antaresgades> Because I wasn't aware of the chainage rule, I thought that was just matter of operator precedence, but I recalled that both were comparision operators and thus they have the same precedence so I began to go downhill :)
[12:34:09] <antaresgades> About the print parentheses, sorry I do use python3 but in the code snippet I forgot them
[12:34:12] <antaresgades> Thank you all
[12:34:28] *** Joins: Naan (~Naan@user/naan)
[12:35:29] *** Quits: Naan` (~Naan@user/naan) (Ping timeout: 264 seconds)
[12:35:51] *** Joins: hendursa1 (~weechat@user/hendursaga)
[12:36:10] *** Joins: mat001 (~mat001@c-73-223-64-126.hsd1.ca.comcast.net)
[12:39:04] *** Quits: DarthGandalf (user@znc/developer/DarthGandalf) (Quit: Bye)
[12:39:05] *** Quits: Powerhouse6666 (~Powerhous@24.109.185.150) (Ping timeout: 264 seconds)
[12:39:12] *** Quits: hendursaga (~weechat@user/hendursaga) (Ping timeout: 276 seconds)
[12:39:46] *** Joins: togusa (~togusa@user/togusa)
[12:40:40] *** Quits: mat001 (~mat001@c-73-223-64-126.hsd1.ca.comcast.net) (Ping timeout: 240 seconds)
[12:40:41] <jinsun> oh TIL chaining works for `is` and `in` also, doesn't look like it will ever be actually useful and not confusing though
[12:40:43] *** Quits: xa0s (~xa0s@mab.sdf.org) (Quit: leaving)
[12:41:40] *** Joins: rsx (~dummy@ppp-188-174-156-22.dynamic.mnet-online.de)
[12:42:16] *** Quits: Jefren (~Jefren@208.104.190.6) (Ping timeout: 252 seconds)
[12:43:18] *** Joins: LucaTM (~LucaTM@user/lucatm)
[12:44:04] *** Joins: Jefren (~Jefren@70.35.66.51)
[12:45:42] <graingert[m]> jinsun: It's better than having it work for some things but not others
[12:51:01] <jinsun> yeah better not to special-case only few of them I guess, those are comparison operators too (although I also didn't think `in` counts as comparison operator)
[12:51:26] *** Joins: doko (~doko@2a02:8106:1a:7600:b113:9fd1:6b7:3a2)
[12:51:47] *** Joins: DarthGandalf (user@znc/developer/DarthGandalf)
[12:52:21] *** Joins: Powerhouse6666 (~Powerhous@24.109.185.150)
[12:53:02] *** Quits: jpds (~jpds@gateway/tor-sasl/jpds) (Remote host closed the connection)
[12:53:28] *** Joins: jpds (~jpds@gateway/tor-sasl/jpds)
[12:54:50] *** Quits: Powerhouse6666 (~Powerhous@24.109.185.150) (Max SendQ exceeded)
[12:55:17] *** Joins: Powerhouse6666 (~Powerhous@24.109.185.150)
[12:56:06] *** Quits: metaace (~metaace@user/metaace) (Remote host closed the connection)
[12:56:22] *** Joins: metaace (~metaace@user/metaace)
[12:57:26] *** Quits: hnOsmium0001 (uid453710@id-453710.hampstead.irccloud.com) (Quit: Connection closed for inactivity)
[12:58:18] *** Joins: lxwulf (~lxwulf@user/lxwulf)
[12:59:30] *** Quits: dba (uid502594@id-502594.hampstead.irccloud.com) (Quit: Connection closed for inactivity)
[13:00:52] *** Joins: Pickchea (~private@user/pickchea)
[13:01:49] *** Quits: elkclone (~elkclone@user/elkclone) (Ping timeout: 268 seconds)
[13:04:53] *** Quits: togusa (~togusa@user/togusa) (Ping timeout: 264 seconds)
[13:07:20] *** Joins: elkalamar_ (elkalamar@gateway/vpn/airvpn/elkalamar)
[13:08:11] *** Joins: plastico (~plastico@neomutt/plastico)
[13:08:53] *** Quits: Powerhouse6666 (~Powerhous@24.109.185.150) (Ping timeout: 246 seconds)
[13:08:59] *** Joins: amahl (~amahl@dsl-jklbng12-54fbca-64.dhcp.inet.fi)
[13:10:07] <kosh> what gui toolkit are we currently suggesting people to use? I have someone that wants to use tkinter and I want to avoid that
[13:10:17] *** Quits: elkalamar (elkalamar@gateway/vpn/airvpn/elkalamar) (Ping timeout: 264 seconds)
[13:13:01] <supakeen> Qt is popular, isn't it?
[13:13:31] *** Joins: nips (~nips@abv84.internetdsl.tpnet.pl)
[13:15:08] <kosh> yeah just wondered if people had other ideas
[13:15:24] *** Joins: mat001 (~mat001@c-73-223-64-126.hsd1.ca.comcast.net)
[13:16:17] *** Quits: LucaTM (~LucaTM@user/lucatm) (Ping timeout: 245 seconds)
[13:16:21] *** Joins: EvilDMP (~textual@django/moderator/EvilDMP)
[13:17:26] *** Joins: blindguard (~blindguar@2a02:908:1864:c200::4433)
[13:20:04] *** Quits: mat001 (~mat001@c-73-223-64-126.hsd1.ca.comcast.net) (Ping timeout: 252 seconds)
[13:20:35] *** Quits: ExeciN (~ExeciN@user/nicexe) (Remote host closed the connection)
[13:21:29] *** Quits: kib (~kib@user/kib) (Ping timeout: 246 seconds)
[13:22:59] <rakoon> graingert[m]: thanks for your suggestion. I want to stick to asyncio for now. I ended up using asyncio.run anyway.
[13:23:38] *** Joins: Axy (~Axy@user/axy)
[13:24:20] *** Joins: ExeciN (~ExeciN@user/nicexe)
[13:24:22] <rakoon> graingert[m]: btw the add_done_callback will it block the rest of coroutines and the loop?
[13:24:27] <rakoon> (i guess yes?)
[13:24:54] *** Quits: Axy (~Axy@user/axy) (Read error: Connection reset by peer)
[13:25:05] <graingert[m]> rakoon: Best to avoid add_done_callback
[13:25:10] *** Joins: Samian (~Sami@user/samian)
[13:25:22] <graingert[m]> rakoon: anyio wraps asyncio - eg the start_blocking_portal call will work with asyncuo
[13:25:30] <graingert[m]> * anyio wraps asyncio - eg the start_blocking_portal call will work with asyncio
[13:26:19] <Samian> I'm surprised that when I google "why are member variables called instance attributes in python", no answer appears in the search results, first page at least.
[13:27:48] <Repiphany> I have no idea what "member variable" is
[13:27:49] <Samian> Anyone have a good answer for the change in terminology from that used in c++ ?
[13:27:59] <Samian> https://en.wikipedia.org/wiki/Member_variable
[13:28:33] *** Joins: AquaL1te (~AquaL1te@user/aqual1te)
[13:30:07] *** Quits: amrooting1 (amrooting@gateway/vpn/protonvpn/amrooting) (Quit: Leaving)
[13:30:43] <graingert[m]> Samian: https://docs.python.org/3/glossary.html#term-method-resolution-order refers to members
[13:31:15] *** Joins: legola (~legola@46.235.100.27)
[13:33:10] *** Quits: jazzy (~jaziz@2600:380:8478:544b:74e4:ee0e:c5d7:8598) (Ping timeout: 240 seconds)
[13:34:11] *** Quits: somlis (~somlis@user/somlis) (Quit: WeeChat 3.2.1)
[13:34:55] <Samian> compare: https://www.google.com/search?q=site%3Adocs.python.org%2F+%22instance+attribute%22
[13:35:06] <Samian> https://www.google.com/search?q=site%3Adocs.python.org%2F+%22memeber+variable%22
[13:35:13] <Samian> 308 results to 4 results
[13:35:14] <bjs> Samian: it's not "change in terminology",  it's not like Python started with C++
[13:35:16] *** Joins: Mattiaslndstrm (~Mattiasln@c188-148-207-108.bredband.tele2.se)
[13:35:33] <bjs> it has its own terminology for things
[13:35:54] <Samian> bjs  actually... in a way it did. Python is implemented using c/cpp. All python calls run c/cpp code
[13:36:01] <bjs> Samian: there is no C++
[13:36:10] *** Joins: somlis (~somlis@user/somlis)
[13:36:12] <Samian> you're right.
[13:36:16] <bjs> and Python is almost as old as C++ is
[13:36:28] <Samian> just because it uses c, doesn't mean it started with c. It didn't extend c, obviously
[13:36:39] <bjs> Samian: Python did start with C
[13:36:52] *** Quits: dmr (~rdumitru@user/dmr) (Quit: WeeChat 3.2.1)
[13:36:53] <bjs> I'm not sure when C++ introduced the term "member variable", it's possible that Python had "instance attributes" before C++ got "member variables"
[13:38:18] *** Joins: dmr (~rdumitru@user/dmr)
[13:38:37] <Samian> bjs  but to the language of computer science that was in use when Python was made didn't come from nothing.
[13:38:38] <The-Compiler> kosh: tkinter is okay for really trivial stuff (I use it to show a dialog when Qt isn't found :D)
[13:38:52] <bjs> Samian: "member variables" isn't really part of the lexicon of compsci
[13:38:59] <lericson> the names "member" and "field" are intended to liken structs, you store something in some meta-storage, in python that is simply not what happens
[13:39:11] <bjs> Samian: and for better or worse, programming languages have to make up terms to precisely state which language feature they're talking about
[13:39:24] <Samian> bjs  what about "member function".  Don't you admit that's a common term?
[13:39:31] <The-Compiler> kosh: for anything else, yeah, I'd say Qt is quite popular.
[13:39:31] <bjs> Samian: outside of C++ no
[13:39:50] <bjs> Samian: "method" is the more generic term
[13:41:06] <Samian> I'm just curious where the term "instance attribute" came from. You won't find that term in K & R or any cpp book
[13:42:11] <bjs> Samian: yes, I think it's actually C++ that has the weird terminology here using the word "member"
[13:42:32] <The-Compiler> I wonder if C++ has that terminology because of how classes evolved from C structs or something
[13:43:28] <bjs> Samian: In the end, Python's values are all objects (instances of a class).  Those instances have a dictionary of their attributes,  hence "instance attributes".
[13:44:25] *** Quits: somlis (~somlis@user/somlis) (Read error: Connection reset by peer)
[13:46:11] *** Quits: xrogaan (~xrogaan@user/xrogaan) (Quit: Leaving)
[13:48:13] <PJBoy> attribute, method and field are all overloaded terms in object oriented programming languages
[13:48:53] *** Parts: ferz (~ferz@93-39-142-224.ip76.fastwebnet.it) ()
[13:49:58] <PJBoy> C++ uses "member variable" because it's just plain English, so there's no confusion
[13:50:30] <bjs> are there outsider variables too
[13:50:31] <bjs> :D
[13:50:52] <bjs> ... interloper variables!
[13:51:23] <bjs> I have to invent my own language so I can invent interloper variables and become famous
[13:51:26] <PJBoy> strictly speaking member variables are called "data members" by the standard and many other more formally written docs
[13:51:32] <Samian> c89 also uses member variable to refer to variables in a struct
[13:52:34] <bjs> Samian: yeah,  structs are very very similar to classes but aren't quite the same thing. and a lot of C++ terminology is "inherited" from C.  Although as PJBoy points out, these may be more "colloquial" terms than official terminology
[13:53:23] *** Quits: fikran (~fikran@user/fikran) (Ping timeout: 265 seconds)
[13:53:36] <PJBoy> yeah C++ is supposed to be a multi paradigm language or whatever, the result of this seems to be that none of the usual paradigm-esque terms are used because they could be confusing >_>
[13:53:39] *** Quits: EvilDMP (~textual@django/moderator/EvilDMP) (Quit: My MacBook has gone to sleep. ZZZzzz…)
[13:53:52] <Samian> Also, not all "attributes" of an object in Python will be an attribute in the common English sense of the word. You see this in bad programming where people stick a bunch of unrelated stuff under the same class lol
[13:54:29] <bjs> I think the terms typically have a rough correspondence to their standard English meanings (as you'd find in the OED or whatever) but then applied to a specific feature. e.g. "instance attributes" in Python which means a specific feature which kind-of corresponds to the definition of those words you'd find in a dictionary
[13:55:08] *** Joins: ravan (~ravan@user/ravan)
[13:55:11] *** Joins: Madda (~Madda@83.253.6.51.dyn.plus.net)
[13:55:15] *** Quits: pycode (~pycode@2001:b07:5d28:551:e7b1:cf2:eda4:550c) (Remote host closed the connection)
[13:55:19] *** Joins: fikran (~fikran@user/fikran)
[13:55:23] <bjs> Samian: well, you could argue they *are* attributes of the object,  but they're just part of the wrong object
[13:55:26] <PJBoy> "rough" is right
[13:55:33] *** Joins: pycode (~pycode@2001:b07:5d28:551:e7b1:cf2:eda4:550c)
[13:55:48] <PJBoy> but at least we're not calling things after people's names like lots of other scientific fields
[13:56:12] <Samian> PJBoy  thanks goodness. You have a point there. It could be worse
[13:57:01] *** Joins: EvilDMP (~textual@django/moderator/EvilDMP)
[13:57:39] <PJBoy> "class contain Eigenfunctions and Eigenvariables, Jacobian classes contain Eigenfunctions that can be overridden by a derived class..."
[13:57:48] <The-Compiler> :D
[13:58:04] <The-Compiler> to be fair, "Eigen" means something like "self" in German, so it's not too far off
[13:58:09] *** Quits: lxwulf (~lxwulf@user/lxwulf) (Remote host closed the connection)
[13:58:39] *** Joins: lxwulf (~lxwulf@user/lxwulf)
[13:59:06] <PJBoy> so what you're saying is I should s/self/eigen/ in all of my python scripts
[14:00:17] <PJBoy> I actually never realised "eigen" was a german prefix rather than a name
[14:02:01] *** Quits: stkrdknmibalz (~test@rrcs-75-87-43-226.sw.biz.rr.com) (Quit: WeeChat 3.0.1)
[14:02:57] <The-Compiler> I told a coworker that 'self' can actually be any name, and they proceeded to use 'this' instead. I wish I never told them.
[14:04:46] *** Quits: antaresgades (~antaresga@ieocadiz.cd.ieo.es) (Quit: Client closed)
[14:05:12] *** Joins: Axy (~Axy@user/axy)
[14:07:20] *** Joins: Falc (~Falc@193.191.206.243)
[14:07:32] *** Quits: Affliction (affliction@user/affliction) (Quit: Read error: Connection reset by beer)
[14:07:42] *** Quits: EvilDMP (~textual@django/moderator/EvilDMP) (Quit: My MacBook has gone to sleep. ZZZzzz…)
[14:08:28] *** Joins: somlis (~somlis@user/somlis)
[14:08:29] *** Joins: Affliction (affliction@user/affliction)
[14:08:31] <PJBoy> yeah that's rather unfortunate :(
[14:08:54] <PJBoy> but then I always did think it was weird that `self` isn't the required name
[14:09:06] *** Quits: jpds (~jpds@gateway/tor-sasl/jpds) (Remote host closed the connection)
[14:09:31] *** Joins: jpds (~jpds@gateway/tor-sasl/jpds)
[14:09:36] <Falc> So I have a (CSV) file which for "Lotus Notes" reasons starts with a duplicate BOM. Opening it with "encoding=utf-8-sig" only removes one of the BOMs. Does anyone have an idea on how to handle this the best, while maintaining as much compatibility with the CSV module as possible?
[14:10:39] *** Parts: PaddyF (~PaddyF@user/paddyf) (bye)
[14:10:59] <kosh> PJBoy, pretty much no language in major usage is pure, they are hybrids that mix procedural, OO, functional etc
[14:11:03] *** Joins: slurmz (~slurmz@71-212-119-5.tukw.qwest.net)
[14:11:28] <kosh> I remember early in python some people use me instead of self
[14:13:56] *** Joins: trace (~trace@ip5f5a6a70.dynamic.kabel-deutschland.de)
[14:14:34] *** Quits: gitesh (uid423739@id-423739.ilkley.irccloud.com) (Quit: Connection closed for inactivity)
[14:15:20] *** Quits: pycode (~pycode@2001:b07:5d28:551:e7b1:cf2:eda4:550c) (Remote host closed the connection)
[14:15:36] *** Joins: pycode (~pycode@2001:b07:5d28:551:e7b1:cf2:eda4:550c)
[14:17:37] *** Joins: pluri (~pluri@user/pluri)
[14:17:44] <slurmz> me.super()
[14:17:54] *** Joins: luna-is-here (~quassel@2a02:908:f761:2a3c::a)
[14:18:05] *** Quits: trace987 (~trace@ip5f5a6a70.dynamic.kabel-deutschland.de) (Ping timeout: 264 seconds)
[14:18:17] <pluri> if i'm using a ratelimiter decorator in a flask app, will it restrict the number of times the function is invoked across all client sessions (i.e will it hold across request contexts)? or within each individual session only? what about when using the decorator for just one instruction inside of a function?
[14:18:33] *** Quits: Mattiaslndstrm (~Mattiasln@c188-148-207-108.bredband.tele2.se) (Quit: My MacBook has gone to sleep. ZZZzzz…)
[14:18:49] *** Joins: VaniaPy (~VaniaPy@adsl-100.176.58.192.tellas.gr)
[14:20:02] *** Quits: w0rp (w0rp@2a01:7e00::f03c:91ff:fedb:589) (Quit: GONE)
[14:20:13] *** Quits: x28girl (~x28girl@user/x28girl) (Quit: Leaving)
[14:20:42] *** Joins: Bronto22 (~mennoh@84-86-247-193.fixed.kpn.net)
[14:21:36] <jbe> isn't it limiting on requests from a (remote) ip addr?
[14:21:50] *** Joins: w0rp (~w0rp@w0rp.com)
[14:22:35] <pluri> the requests to the app are made by whoever the client is
[14:23:06] <pluri> i guess in a production env they would actually by pass on by nginx
[14:23:15] <pluri> since it's not recommended to connect the flask server directly to the outside world
[14:24:05] *** Quits: wyclif (~wyclif@user/wyclif) (Ping timeout: 264 seconds)
[14:24:35] *** Joins: wyclif (~wyclif@user/wyclif)
[14:25:07] <bjs> kosh: `def __eq__(me, you): ...`
[14:25:16] <jbe> pluri: yeah, if it's flask-limiter you're using they have an example for configuration of a proxy setup https://flask-limiter.readthedocs.io/en/stable/#deploy-behind-proxy
[14:25:20] *** Quits: pycode (~pycode@2001:b07:5d28:551:e7b1:cf2:eda4:550c) (Remote host closed the connection)
[14:25:22] *** Quits: avu (~jan@user/avu) (Remote host closed the connection)
[14:25:30] *** Quits: somlis (~somlis@user/somlis) (Read error: Connection reset by peer)
[14:25:32] *** Joins: pycode (~pycode@2001:b07:5d28:551:e7b1:cf2:eda4:550c)
[14:25:39] *** Quits: lxwulf (~lxwulf@user/lxwulf) (Remote host closed the connection)
[14:25:39] *** Joins: avu (~jan@user/avu)
[14:25:58] *** Joins: lxwulf (~lxwulf@user/lxwulf)
[14:26:44] <mawk> I didn't see if someone answered yesterday when I asked why Fraction(1/5) isn't Fraction(1, 5)
[14:26:47] <mawk> I should set up logging
[14:26:53] <pluri> jbe: ah no, I'm not trying to limit requests made by to the server by clients. I'm trying to limit a particular instruction or function which is sometimes triggered during a request context. and I'm trying to limit it globally, not per client.
[14:26:58] <bjs> mawk: 1/5 is a float
[14:27:34] <pluri> so I'm using this package instead: https://pypi.org/project/ratelimiter/
[14:27:36] <mawk> yes bjs but an exact one
[14:27:38] <mawk> in base 2
[14:27:52] <bjs> mawk: it can't be,  its denominator is 5
[14:27:58] *** Joins: fdan (~fdan@103.215.168.1)
[14:28:07] <mawk> ah yes I'm stupid
[14:28:27] <mawk> 5, 2, 10, too many bases and denominators to be exact in merged in my brain
[14:30:46] *** Joins: Linkandzelda (~Linkandze@cloudirc.laz.li)
[14:32:32] <mawk> the resulting fraction is 1/(5 - 1/big number)
[14:33:01] <mawk> so I suppose it searches the right fraction using continued fraction method
[14:33:43] <Samian> isn't it ironic that a subclass has a superset of functionality?
[14:33:55] <mawk> liskov something something
[14:34:41] *** Joins: LucaTM (~LucaTM@user/lucatm)
[14:35:32] *** Joins: thiras (~thiras@user/thiras)
[14:35:53] <jbe> pluri: iirc flask is thread local, so different requests run independently of each other (there is a global application object though). not sure how you'd globally rate limit a method/instruction from within flask
[14:36:15] <pluri> wow ok
[14:36:16] <pluri> hmm
[14:37:00] <Samian> aha I get it. sub is short for substitute. It's not the same sub that's used as a prefix in subpar, submarine, or subset
[14:37:16] <mawk> I don't think that's the case Samian
[14:37:31] <mawk> it's just a topological thing, subclass is below superclass
[14:37:40] <mawk> or subclass is included in superclass
[14:37:46] <mawk> but that doesn't say much about functionality
[14:37:56] <mawk> that just says about which class can pass as which other class
[14:38:12] <shangxiao> whoever said that the northern hemisphere is on the top of the world?
[14:38:20] *** Quits: Pickchea (~private@user/pickchea) (Ping timeout: 265 seconds)
[14:38:27] <mawk> but you're right that usually it goes the other way like in maths, the superset has more "features" and "stuff" that the subset
[14:38:42] <mawk> but not always the case, you can have subsets more interesting than the whole
[14:38:43] <Samian> I bet many people think of the idea of subset when they first hear the word subclass.  I think that can cause confusion
[14:39:29] <mawk> prime numbers are more interesting than integers, but they're a subset of them
[14:40:17] *** Joins: pretty_dumm_guy (trottel@gateway/vpn/protonvpn/prettydummguy/x-88029655)
[14:40:30] <Samian> that's impressive that you recalled Liscov off the top
[14:40:42] <Samian> *Liskov
[14:40:50] <PJBoy> 3602879701896397 / 2**54 == 1/5 :)
[14:43:20] <bjs> Samian: that particular principle is brought up a lot
[14:43:59] <supakeen> All those -v endings in computer principles.
[14:44:15] *** Joins: computeiro (~Wender@189.37.66.83)
[14:44:21] *** Joins: togusa (~togusa@user/togusa)
[14:44:36] *** Joins: buttermelted (~buttermel@213-47-29-213.cable.dynamic.surfer.at)
[14:44:36] *** Quits: computeiro (~Wender@189.37.66.83) (Client Quit)
[14:44:43] <PJBoy> liskov substitution principle is that inheritance be an "is a" relationship, right?
[14:45:03] <bjs> supakeen: in this case,  it's because the name comes from Barbara Liskov who came up with the principle and also gave us the term "abstract datatype" and lots of other things in that area
[14:45:17] <supakeen> bjs: Yes, lots of -v names :)
[14:45:39] *** Joins: trace987 (~trace@ip5f5a6a70.dynamic.kabel-deutschland.de)
[14:45:40] <bjs> supakeen: yeah: Dijkstrav,  von Neumannv,   Turingv
[14:45:40] <bjs> :D
[14:45:42] <supakeen> Andrey Markov, Barbara Liskov, etc.
[14:45:48] *** Joins: sarab (~sarab@183.87.60.236)
[14:45:51] <supakeen> :>
[14:46:02] *** Joins: Powerhouse6666 (~Powerhous@24.109.185.150)
[14:47:56] *** Quits: trace (~trace@ip5f5a6a70.dynamic.kabel-deutschland.de) (Ping timeout: 246 seconds)
[14:48:51] *** Quits: txtsd1 (~txtsd@user/txtsd) (Quit: WeeChat 3.2.1)
[14:49:19] *** Quits: n00b101 (uid448161@id-448161.lymington.irccloud.com) (Quit: Connection closed for inactivity)
[14:49:57] *** Quits: togusa (~togusa@user/togusa) (Ping timeout: 268 seconds)
[14:49:58] <Samian> anyone here know a real "10X" programmer?
[14:50:21] <PJBoy> what does 10x mean, actually?
[14:50:35] <PJBoy> I've only ever seen the term used in /r/programmingcirclejerk
[14:50:50] <Yhg1s> Samian: yeah, I've met a few, and had to clean up after some.
[14:50:55] <Samian> A 10x developer is generally defined as an individual who is naturally capable of being 10x times more productive than an average developer.
[14:50:59] *** Quits: slurmz (~slurmz@71-212-119-5.tukw.qwest.net) (Quit: Leaving)
[14:51:05] <PJBoy> ahh
[14:51:10] <Yhg1s> It's a load of poppycock.
[14:51:24] <Samian> Yhg1s  steve jobs said they exist
[14:51:33] <Yhg1s> Oh, then it _must_ be true.
[14:51:48] <Samian> it actually is true.  I've seen it.
[14:51:49] *** Quits: VaniaPy (~VaniaPy@adsl-100.176.58.192.tellas.gr) (Quit: Connection closed)
[14:51:59] <Yhg1s> The so-called "10x" programmers are "10x" because they write unmaintainable, undocumented, untested, buggy code.
[14:52:13] <Samian> It's not about being a 10x developer. It's about being a developer that picks 10x tools.
[14:52:18] <Samian> That's basically the trick
[14:52:35] <Samian> I was 10x some of my former coworkers because they didn't want to learn tools that increased producitivity
[14:52:40] <Yhg1s> It's about getting 10 other people to do the real work.
[14:53:07] <jbe> it's never 10x across the board now is it...
[14:54:17] <PJBoy> maybe they work for 1/10th the usual pay
[14:54:37] <PJBoy> and the result follows after equating time with money
[14:54:54] *** Quits: sarab (~sarab@183.87.60.236) (Quit: Leaving)
[14:55:23] <bjs> Yhg1s: it's because they require 10x the effort to clean up after them :)
[14:55:29] <Samian> Also if only 1 out of every 10 things you do actually gets used, then being a 10x developer is about being smart in what you do to make sure that 10 out of 10 things you do gets used.
[14:55:41] <Yhg1s> bjs: that's pretty much what I said, yes.
[14:56:02] <Samian> Who here has seen a team spend a month on a project just to trash it and switch to something else?
[14:56:13] <bjs> Samian: tbh if people start attaching these terms to thesmelves ("10x", "hero programmer", whatever else) I'd be wary
[14:56:25] <PJBoy> Samian, raises hand
[14:56:28] <bjs> these big projects are almost always large investments of many people and not just one
[14:56:28] <Yhg1s> I'd stop working with them.
[14:56:55] <bjs> Samian: heh,  companies like Google regularly just drop large projects that they were working on that are no longer fiscally viable
[14:58:16] *** Joins: bidouille (~user_name@trois.potager.org)
[14:58:48] <Samian> Also, the Pareto principle suggests that if you can figure out a way to hack it, you can be a 5x programmer.  1x programmer == 20% of work results in value created. 5x programmer == 100% of work results in 5x value created
[14:58:54] *** Quits: bidouille (~user_name@trois.potager.org) (Client Quit)
[15:00:26] <Samian> If you spend 4 weeks on something that gets scrapped and on the 5th week do something that gets used, then if you're smart enough to skip the 4 wasteful weeks and go straight to the week the produces value, then you're producing value at 1/5th the time.
[15:00:28] *** dcaro is now known as dcaro_away
[15:00:54] *** Joins: bidouille (~user_name@trois.potager.org)
[15:00:55] <Samian> if you're producing value at 1/5th the time, you're a 5x coder.
[15:01:59] <Samian> Being a 10x dev is about working 10x as fast. It's that 10x of their work is meaningful and actually used
[15:02:00] *** Quits: Plyht (uid433484@id-433484.hampstead.irccloud.com) (Quit: Connection closed for inactivity)
[15:02:07] <Samian> *isn't about working 10x as fast
[15:02:34] <Repiphany> Productivity metrics for creative fields automatically lose effectiveness just from being created
[15:02:50] <bjs> Samian: projects being scrapped isn't really about the programmer,  again look at something like Google
[15:02:56] *** Joins: sarab (~sarab@183.87.60.236)
[15:03:16] <bjs> a single programmer even if they're 100x more productive cannot really change the course of the money or stop their project being scrapped if Google decides
[15:04:14] <Samian> bjs  at fb, E7 engineers and up pick their own work.  If 1 of the 4 things you tried worked and made or saved the company money, and you spent an equal amount of time on each, then you're moving 1/4 the speed as the other guy who was successful 4 out of 4
[15:04:46] *** Quits: metaace (~metaace@user/metaace) (Remote host closed the connection)
[15:04:56] *** Joins: kib (~kib@user/kib)
[15:05:00] *** Joins: metaace (~metaace@user/metaace)
[15:05:05] <bjs> Samian: but success of a big project is not down to the individual almost ever,  and the individual cannot fund the project no matter how "productive" they are
[15:05:32] *** Joins: mindraj (~mindraj@user/mindraj)
[15:05:41] <Samian> being the 10x programmer isn't much different than being the 10x business man. Why some business men make 10x as much as others? It's success rate and deciding how to spend their time
[15:05:45] *** Joins: arinov (~arinov@213.194.126.155)
[15:05:53] <Yhg1s> More likely it's crime.
[15:06:05] *** Quits: otisolsen70 (~otisolsen@xd4ed80b5.cust.hiper.dk) (Ping timeout: 264 seconds)
[15:06:28] <bjs> Samian: is someone who makes 10x as much money programming really 10x a better programmer?  Is someone who has 10x the number of successful projects really 10x better?  Is someone who is 10x faster 10x better?
[15:06:46] <bjs> I've certainly seen counter-examples to all of the above...  (in both directions)
[15:06:47] *** Quits: sarab (~sarab@183.87.60.236) (Client Quit)
[15:07:04] *** Joins: sarab (~sarab@183.87.60.236)
[15:07:05] <Samian> bjs  I see your points. You're right. If you're junior IC, you don't pick your tools. You don't pick what to work on.
[15:07:24] *** Quits: oldguy (~oldguy@user/oldguy) (Remote host closed the connection)
[15:07:30] *** Quits: sarab (~sarab@183.87.60.236) (Remote host closed the connection)
[15:07:39] <bjs> Samian: if you're very senior you will get to oversee large projects with many people -- infact, too large to do yourself and certainly too large to fund yourself
[15:08:05] <bjs> Unless you've got millions hidden under your bed :)
[15:08:21] <Samian> 10x coder really refers to 10x value creator
[15:08:28] *** Joins: ramblebamble (ramblebamb@gateway/vpn/protonvpn/ramblebamble)
[15:08:30] *** Joins: vvdaiwrw (~rvgzuuqp@gateway/tor-sasl/rvgzuuqp)
[15:08:42] *** Quits: fdan (~fdan@103.215.168.1) (Ping timeout: 256 seconds)
[15:09:16] *** Quits: Powerhouse6666 (~Powerhous@24.109.185.150) (Ping timeout: 265 seconds)
[15:09:46] <bjs> Samian: I think "10x coder" is a meaningless statement and is basically impossible to measure.  Maybe if you're making 10 little websites or mobile apps a week or something you can measure it. But if you're part of a big team working on many things whose entire existence is dependent on a large corporate machine or some public funding it's a very different story
[15:10:43] *** Quits: Bronto22 (~mennoh@84-86-247-193.fixed.kpn.net) (Quit: Konversation terminated!)
[15:11:37] *** Joins: Powerhouse6666 (~Powerhous@24.109.185.150)
[15:11:53] *** Joins: dez (uid92154@user/dez)
[15:13:28] *** Joins: somlis (~somlis@user/somlis)
[15:13:51] *** Joins: sarab (~sarab@183.87.60.236)
[15:14:38] <Samian> bjs  check this out http://antirez.com/news/112
[15:15:04] *** Joins: besnn (~besnn@user/besnn)
[15:16:31] *** Quits: buttermelted (~buttermel@213-47-29-213.cable.dynamic.surfer.at) (Ping timeout: 265 seconds)
[15:16:51] *** Joins: TheHermann (~TheHerman@gateway/tor-sasl/thehermann)
[15:18:44] *** Quits: Powerhouse6666 (~Powerhous@24.109.185.150) (Ping timeout: 246 seconds)
[15:19:04] *** Quits: iflema (~ian@user/iflema) (Quit: iflema)
[15:20:34] *** Joins: iflema (~ian@user/iflema)
[15:21:11] *** Quits: besnn (~besnn@user/besnn) (Ping timeout: 246 seconds)
[15:22:22] *** Joins: xb0o2 (~xb0o2@user/xb0o2)
[15:25:31] *** Joins: Shevek91 (~Guest31@athedsl-4417762.home.otenet.gr)
[15:26:25] *** Joins: shimbles (~shimbles@209.201.38.106)
[15:26:26] *** Quits: mindraj (~mindraj@user/mindraj) (Quit: Goodbye, have a great day/evening!)
[15:26:31] *** Quits: Samian (~Sami@user/samian) (Quit: Textual IRC Client: www.textualapp.com)
[15:27:11] *** Joins: VaniaPy (~VaniaPy@adsl-100.176.58.192.tellas.gr)
[15:29:50] *** Joins: computeiro (~Wender@189.37.66.83)
[15:29:57] *** Joins: mousey (~sky@gateway/tor-sasl/mousey)
[15:30:11] *** Parts: mousey (~sky@gateway/tor-sasl/mousey) ()
[15:31:49] *** Joins: Mattiaslndstrm (~Mattiasln@c188-148-207-108.bredband.tele2.se)
[15:37:38] *** Quits: Mattiaslndstrm (~Mattiasln@c188-148-207-108.bredband.tele2.se) (Ping timeout: 246 seconds)
[15:37:59] *** Quits: shad (~shad@user/shad) (Ping timeout: 246 seconds)
[15:39:46] *** Quits: dld (~davidlowr@2601:197:600:1210:d1f0:b8f0:860c:6bfb) (Ping timeout: 260 seconds)
[15:43:04] *** Joins: Polyinsecure (~Polyinsec@180.244.135.13)
[15:44:17] *** Quits: sarab (~sarab@183.87.60.236) (Quit: Leaving)
[15:45:07] *** Joins: mIk3_08 (~Thunderbi@user/mik3-08/x-2852566)
[15:45:41] *** Quits: pycode (~pycode@2001:b07:5d28:551:e7b1:cf2:eda4:550c) (Ping timeout: 264 seconds)
[15:46:45] *** Joins: sarab (~sarab@183.87.60.236)
[15:47:17] *** Quits: ramblebamble (ramblebamb@gateway/vpn/protonvpn/ramblebamble) (Quit: WeeChat 3.2)
[15:50:10] *** Quits: lethu (~lethu@user/lethu) (Ping timeout: 268 seconds)
[15:50:54] *** Joins: lethu (~lethu@user/lethu)
[15:54:19] *** Joins: Bronto22 (~mennoh@84-86-247-193.fixed.kpn.net)
[15:57:57] *** Quits: Naan (~Naan@user/naan) (Quit: Leaving)
[15:59:12] *** Joins: georgios (~georgios@user/georgios)
[16:00:29] *** Joins: mat001 (~mat001@c-73-223-64-126.hsd1.ca.comcast.net)
[16:02:55] *** Quits: fikran (~fikran@user/fikran) (Ping timeout: 265 seconds)
[16:04:40] *** Quits: mat001 (~mat001@c-73-223-64-126.hsd1.ca.comcast.net) (Ping timeout: 240 seconds)
[16:04:41] *** Joins: fikran (~fikran@user/fikran)
[16:04:46] *** Quits: computeiro (~Wender@189.37.66.83) (Quit: Leaving)
[16:07:14] *** Quits: shimbles (~shimbles@209.201.38.106) (Quit: Client closed)
[16:07:44] *** Quits: kstolen (~kStolen@2a00:fa40:2aaa:1::539:82de) (Ping timeout: 246 seconds)
[16:11:41] *** Joins: buttermelted (~buttermel@213-47-29-213.cable.dynamic.surfer.at)
[16:12:54] *** Joins: blackout69 (~blackout6@net-93-70-196-199.cust.vodafonedsl.it)
[16:14:43] *** Joins: cthulchu_ (~Cthulchu@193.194.107.250)
[16:15:34] *** Joins: paul424 (~tom@ip-31-0-121-241.multi.internet.cyfrowypolsat.pl)
[16:17:16] *** Joins: pathos (~pathos@169-1-247-122.ip.afrihost.co.za)
[16:17:27] *** Quits: lyr (~lyr@user/lyr) (Quit: Ping timeout (120 seconds))
[16:17:44] *** Joins: lyr (~lyr@user/lyr)
[16:17:47] *** Joins: Powerhouse6666 (~Powerhous@24.109.185.150)
[16:17:51] <paul424> class zip(object)
[16:17:52] <paul424>  |  zip(*iterables) --> A zip object yielding tuples until an input is exhausted
[16:17:52] <paul424> . I know what iterables are, what the star means ?
[16:18:05] *** Parts: VaniaPy (~VaniaPy@adsl-100.176.58.192.tellas.gr) ()
[16:18:17] <Yhg1s> paul424: it means 'unpack into positional arguments'. See section 4.7 of the tutorial at docs.python.org/tutorial
[16:19:42] *** Joins: varaindemian (uid73404@id-73404.ilkley.irccloud.com)
[16:20:02] *** Joins: kstolen (~kStolen@2a00:fa40:2aaa:1::539:82de)
[16:20:58] *** Joins: mrgz (~mrgz@201-42-0-191.dsl.telesp.net.br)
[16:21:39] *** Joins: ssbr` (~ssbr@python/site-packages/ssbr)
[16:21:49] <mawk> yes PJBoy that was the big number
[16:21:51] <mawk> 1/(5 - 1/3602879701896397)
[16:21:53] *** Joins: dld (~davidlowr@73.61.8.248)
[16:22:59] *** Quits: lxwulf (~lxwulf@user/lxwulf) (Quit: Leaving)
[16:25:20] <nedbat> mawk: are we talking about 1/5 ?
[16:26:15] <mawk> yes nedbat
[16:26:18] <mawk> fractions.Fraction(1/5)
[16:26:26] *** Joins: tg (~tg@rockylinux/infra/tg)
[16:26:34] <mawk> == 1/(5 - 1/3602879701896397)
[16:27:11] <PJBoy> wolframalpha confirms
[16:27:20] *** Quits: Powerhouse6666 (~Powerhous@24.109.185.150) (Ping timeout: 246 seconds)
[16:27:43] *** Parts: blackout69 (~blackout6@net-93-70-196-199.cust.vodafonedsl.it) ()
[16:28:25] <PJBoy> oh wow it's the same number as the numerator of what I wrote
[16:28:30] <mawk> yes it's why I told you
[16:28:33] <mawk> the fraction it gives is Fraction(3602879701896397, 18014398509481984)
[16:28:33] <PJBoy> I wasn't expecting that
[16:28:42] <mawk> and 18014398509481984 is 5*3602879701896397 - 1
[16:28:42] *** Joins: Powerhouse6666 (~Powerhous@24.109.185.150)
[16:29:23] <nedbat> mawk: yesterday you thought that was the wrong answer, i think?
[16:29:47] <mawk> yes nedbat but then someone made me realize that 1/5 isn't exact in binary
[16:29:58] <mawk> someone with a three-letter nickname
[16:30:00] <nedbat> mawk: i said that, maybe someone else did too
[16:30:04] <bjs> someone
[16:30:06] <mawk> ah, I missed it yesterday then
[16:30:24] *** Joins: Plyht (uid433484@id-433484.hampstead.irccloud.com)
[16:31:12] <mawk> 18014398509481984 is exactly 2^54 actually
[16:31:32] *** Quits: dld (~davidlowr@73.61.8.248) (Ping timeout: 246 seconds)
[16:31:34] <PJBoy> that's not surprising
[16:31:44] <mawk> yes otherwise maths would be broken
[16:31:49] <mawk> and the universe would collapse
[16:32:49] *** Joins: Mattiaslndstrm (~Mattiasln@c188-148-207-108.bredband.tele2.se)
[16:33:06] <mawk> yes PJBoy that will be the denominator for each fraction of the form 1/(2k+1) I think
[16:33:24] <mawk> anything that has no common factor with 2^54
[16:34:06] <KirkMcDonald> Any fraction whose denominator has a prime factor that is not 2, really.
[16:34:33] <mawk> yeah
[16:34:42] <mawk> it's equivalent
[16:35:21] <PJBoy> not quite
[16:35:27] <PJBoy> 1/6 has a prime factor that is 2
[16:35:47] <KirkMcDonald> True, if there's a 2 in there, it'll be able to divide that out.
[16:36:01] *** Quits: supakeen (~user@python/site-packages/supakeen) (Quit: WeeChat 3.3)
[16:36:05] *** Quits: Powerhouse6666 (~Powerhous@24.109.185.150) (Ping timeout: 264 seconds)
[16:36:31] *** Joins: supakeen (~user@python/site-packages/supakeen)
[16:36:55] <mawk> yes PJBoy 6 has 2 as a prime factor, and gcd(6, 2^54) != 1
[16:36:59] <mawk> both things are equivalent
[16:37:13] *** Joins: Powerhouse6666 (~Powerhous@24.109.185.150)
[16:37:40] <mawk> ah right I misread what you said KirkMcDonald , yeah there needs to be no 2 at all
[16:38:19] <PJBoy> I missed a "not" in my last statement
[16:39:30] *** Joins: shad (~shad@user/shad)
[16:41:51] *** Joins: sed (~sed@pool-100-7-38-116.rcmdva.fios.verizon.net)
[16:44:12] *** Joins: dld (~davidlowr@73.61.8.118)
[16:44:31] *** Joins: pycode (~pycode@2001:b07:5d28:551:e0b8:1a7b:ee1a:e4a5)
[16:45:36] *** Quits: rannnn8888 (~rannnn888@bzq-79-181-153-142.red.bezeqint.net) (Ping timeout: 256 seconds)
[16:48:49] *** Joins: mat001 (~mat001@c-73-223-64-126.hsd1.ca.comcast.net)
[16:49:18] *** Quits: dld (~davidlowr@73.61.8.118) (Ping timeout: 260 seconds)
[16:49:44] *** Quits: Powerhouse6666 (~Powerhous@24.109.185.150) (Ping timeout: 246 seconds)
[16:51:59] *** Quits: rany (~rany@user/rany) (Quit: ZNC 1.8.2+deb2+b1 - https://znc.in)
[16:53:11] *** Quits: MikZyth (~MikZyth@188.65.242.140) (Ping timeout: 265 seconds)
[16:53:28] *** Quits: mat001 (~mat001@c-73-223-64-126.hsd1.ca.comcast.net) (Ping timeout: 252 seconds)
[16:53:30] *** Joins: gitesh (uid423739@id-423739.ilkley.irccloud.com)
[16:54:48] *** Joins: dhill (dhill@modemcable103.217-80-70.mc.videotron.ca)
[16:55:08] *** Joins: phonemic (~phonemic@104-60-219-66.lightspeed.nsvltn.sbcglobal.net)
[16:55:09] *** Joins: mohabaks (~mohabaks@gateway/tor-sasl/mohabaks)
[16:55:51] *** Quits: el_kevino (~mote@2604:a880:400:d1::901:5001) (Quit: WeeChat 3.2.1)
[16:56:06] *** dcaro_away is now known as dcaro
[16:56:09] *** Joins: herme5 (~mote@2604:a880:400:d1::901:5001)
[16:56:29] *** herme5 is now known as el_kevino
[16:57:16] *** Quits: dskull (~dskull@user/dskull) (Quit: quit)
[16:58:39] *** Joins: dskull (~dskull@user/dskull)
[16:58:53] *** Quits: kib (~kib@user/kib) (Ping timeout: 264 seconds)
[16:59:13] *** Joins: Everything (~Everythin@37.115.210.35)
[17:01:24] *** Quits: phonemic (~phonemic@104-60-219-66.lightspeed.nsvltn.sbcglobal.net) (Quit: WeeChat 3.2.1)
[17:01:39] *** Quits: dskull (~dskull@user/dskull) (Client Quit)
[17:02:53] *** Joins: ravindUwU (~ravindUwU@n110-22-100-22.sun3.vic.optusnet.com.au)
[17:03:45] <ravindUwU> How should one document a variable? A ''' docstring on the next line, or as https://stackoverflow.com/a/8820636/2466716 suggests, using typing.Annotated?
[17:04:01] <ravindUwU> The docstring gets rendered in VSCode, but typing.Annotated isn't :/
[17:04:26] *** Joins: bandit_za (~bandit_za@2c0f:ed28:b016:29a0::1ed)
[17:05:08] *** Quits: wyclif (~wyclif@user/wyclif) (Ping timeout: 246 seconds)
[17:05:13] *** Quits: Bronto22 (~mennoh@84-86-247-193.fixed.kpn.net) (Quit: Konversation terminated!)
[17:05:54] <ssbr`> ravindUwU: for class members? Sphinx understands `#:` comments, otherwise document them in the class docstring.
[17:06:18] <ssbr`> ravindUwU: if you aren't using Sphinx, use whatever convention your documentation tool understands. If you aren't using a documentation tool, then it doesn't matter, so I'd just use normal comments.
[17:06:23] *** Joins: wyclif (~wyclif@user/wyclif)
[17:06:41] *** Joins: MikZyth (~MikZyth@188.65.242.140)
[17:07:14] <ravindUwU> ssbr`, thanks! I think I'll stick to simple comments then; More readable IMO, and I'm not using a documentation tool.
[17:07:54] *** Joins: EvilDMP (~textual@django/moderator/EvilDMP)
[17:09:40] <zln> sql question: could I somehow sanitize user input before executing sql query? I would like to use python stdlib for queries and such. This is for 'home work' :)
[17:10:03] <Yhg1s> zln: just like yesterday, the answer is SQL parameterization.
[17:10:08] <zln> I want to query db to search for firstname, lastname
[17:10:13] <zln> ah Yhg1s yes
[17:10:17] <zln> you are here :)
[17:10:21] <Yhg1s> zln: and what database? The stdlib only has one DB-API module.
[17:10:41] <Yhg1s> (also, stop being afraid of third-party modules. They are _so much better_ than the standard library.)
[17:10:59] *** Quits: upsala (~zcb@185.213.155.160) (Read error: Connection reset by peer)
[17:11:08] <zln> Yhg1s: sqlite3, my 'problem' is to build query string with variable colnames depending on function clal
[17:11:10] *** Quits: wyclif (~wyclif@user/wyclif) (Ping timeout: 240 seconds)
[17:11:10] <zln> call
[17:11:26] *** Joins: wyclif (~wyclif@user/wyclif)
[17:11:55] <zln> Yhg1s: I agree with you. Would use the codes out there created buy good programmers. Buy want to keep it simple for this case
[17:12:18] <Yhg1s> zln: then just like yesterday, the easy answer is to use a query builder. If you absolutely want to reinvent one yourself, you will have to escape column names yourself.
[17:12:19] <zln> the ORM example on descriptors doc wouldn't suffice for this?
[17:12:28] *** Joins: minip (~minip@user/minip)
[17:12:39] <Yhg1s> zln: exactly like I said yesterday, that example is an example of *descriptors*. It's not an example of an ORM.
[17:13:00] <zln> Yhg1s: sorry for breaking your DRY :p
[17:13:29] <zln> Yhg1s: what do you mean with escaping column names?
[17:13:31] *** Quits: stranac (~stranac@195.29.239.126) (Read error: Connection reset by peer)
[17:14:21] <Yhg1s> zln: I mean reading up on how SQLite expects you to escape or sanitize column names, and writing the logic for that yourself. (As far as I know neither the sqlite3 module nor the sqlite C library offer functionality for this.)
[17:14:46] *** Quits: legola (~legola@46.235.100.27) (Remote host closed the connection)
[17:15:07] <Yhg1s> zln: and if you want to keep it simple, which you absolutely should, use SQLAlchemy.
[17:15:22] *** Quits: ravindUwU (~ravindUwU@n110-22-100-22.sun3.vic.optusnet.com.au) (Quit: KTHXBAI)
[17:15:27] <zln> alright. Maybe I can use a allowed list for column names to check against
[17:15:33] <Soni> how do you pass open file to subprocess?
[17:15:49] <zln> Yhg1s: thanks, I'm suppose to do this with std
[17:15:56] <zln> d
[17:16:13] *** Joins: slowButPresent (~slowButPr@user/slowbutpresent)
[17:18:07] <bjs> Soni: pass to what exactly?
[17:18:29] <zln> soni you can use pipes?
[17:18:31] <Soni> bjs: try echo <(echo foo) in a bash near you
[17:18:36] *** Joins: mrwick (~mrwick@user/mrwick)
[17:18:41] <bjs> Soni: Python's `subprocess` module happily accepts open files as stdin/stdout arguments
[17:18:56] <grawity> if you mean subprocess.Popen, it has pass_fds= for additional stuff
[17:20:15] *** Joins: sn1tch3r (~sn1tch3r@user/sn1tch3r)
[17:20:49] *** Quits: carl- (~carl-@c-138ee555.02-180-73746f39.bbcust.telenor.se) (Remote host closed the connection)
[17:21:07] *** Joins: mindraj (~mindraj@user/mindraj)
[17:22:05] <Soni> and that works with subprocess.run too?
[17:23:23] <bjs> Soni: I mean what's the difficulty here? subprocess.run() has stdin= and stdout= arguments
[17:23:25] *** Joins: dld (~davidlowr@2620:6e:6000:2900:9df:744b:194c:a7af)
[17:23:29] *** Quits: rememberYou (~someone@user/rememberyou) (Remote host closed the connection)
[17:23:39] *** Joins: kib (~kib@user/kib)
[17:23:55] <Soni> bjs: passing an open-for-reading file to stdin doesn't work for this
[17:24:41] *** Quits: yano (~yano@ircpuzzles/staff/yano) (Quit: WeeChat, the better IRC client, https://weechat.org/)
[17:25:01] *** Joins: yano (~yano@ircpuzzles/staff/yano)
[17:25:06] <daex> Soni: run() has the same signature as Popen. So yes, pass_fds will work.
[17:25:30] <daex> *correction: largely the same.
[17:25:41] *** Quits: paul424 (~tom@ip-31-0-121-241.multi.internet.cyfrowypolsat.pl) (Remote host closed the connection)
[17:26:45] <Repiphany> `with open(random_file, 'r') as f: subprocess.run(['wc', '-l'], stdin = f)`
[17:27:02] <Soni> so why can't you shove whole file objects into pass_fds? (and how do you get the fd of a file object?)
[17:27:14] <bjs> Soni: because it accepts fds? WHy can't you pass an open-for-reading file here?
[17:27:35] <bjs> Soni: maybe I misunderstand what the bash syntax you showed is doing,  but subprocess should just accept open files for the handles fine
[17:28:23] *** Quits: Mattiaslndstrm (~Mattiasln@c188-148-207-108.bredband.tele2.se) (Quit: My MacBook has gone to sleep. ZZZzzz…)
[17:28:26] <grawity> Soni: .fileno() if it's necessary
[17:28:27] <Soni> bjs: you can pass path-like objects as arguments to subprocess, and passing whole files would allow it to work on windows too
[17:28:44] <grawity> bjs: the bash syntax doesn't pass the file as stdin
[17:28:56] <Soni> not that we support windows anyway
[17:29:08] <Soni> (windows lacks proper symlinks anyway)
[17:29:17] <mawk> did it though?
[17:29:18] <grawity> (it has multiple types of symlinks)
[17:29:24] <mawk> since windows 7 or 8 or 10 or whatever, there are symlinjs
[17:29:27] <mawk> which work perfectly well
[17:29:33] <bjs> grawity: what is that bash syntax doing then
[17:29:45] <grawity> bjs: <() is more like Popen(["foo", "/dev/fd/%d" % thefile.fileno()], pass_fds=[thefile])
[17:30:10] <grawity> except it takes a command, so it's always the fd of a pipe, not of a normal file
[17:30:12] <mawk> the file being a pipe
[17:30:13] <grawity> but that's still the general idea
[17:30:28] <mawk> works with > too
[17:30:39] *** Joins: rany (~rany@user/rany)
[17:31:00] <grawity> the outer command inherits the pipe as like fd #3 or something higher (not stdin), and learns about it through argv
[17:31:28] *** Joins: legola (~legola@46.235.100.27)
[17:31:40] <bjs> grawity: ah
[17:31:49] *** Quits: EvilDMP (~textual@django/moderator/EvilDMP) (Quit: My MacBook has gone to sleep. ZZZzzz…)
[17:33:40] *** Joins: Mattiaslndstrm (~Mattiasln@c188-148-207-108.bredband.tele2.se)
[17:34:05] <mawk> it's a pretty useful trick sometimes
[17:34:12] <mawk> there's also coproc for something a bit similar but not quite
[17:34:19] <Soni> uh how do you pass env correctly?
[17:34:34] <grawity> a more direct comparison might be `exec {fd}</etc/passwd; frob /dev/fd/$fd` in Bash would be like `with open("/etc/passwd", "r") as fh: Popen(["cat", "/dev/fd/%d" % fh.fileno()], pass_fds=[fh])` in Python
[17:34:37] <mawk> what is correctly Soni ?
[17:34:47] <mawk> I'm pretty sure the environment is just inherited
[17:34:49] *** Joins: EvilDMP (~textual@django/moderator/EvilDMP)
[17:34:57] <grawity> the whole env from os.environ is inherited by default, unless you explicitly pass a cstom one
[17:35:04] <grawity> my fingers are frozne and I can't type properly
[17:35:14] *** Quits: berong91 (~noob4ever@d75-154-235-153.bchsia.telus.net) (Remote host closed the connection)
[17:35:17] <Soni> mawk: if you want/need to modify it
[17:35:26] <Soni> (specifically, adding to it)
[17:35:29] <mawk> then pass a custom environment
[17:36:00] <Mogget> I have a try except statement, where it can occur, in the except section that another exception is raised. Is it ok to add that last exception to the try except statement it is allready in?
[17:36:04] *** Joins: shibboleth (~shibbolet@user/shibboleth)
[17:36:44] *** Joins: GreenResponse (~tomek@r-45-155-148-237.gpon.bialnet.pl)
[17:36:52] <grawity> I'd probably do env={**os.environ, "FOO": "bar"}
[17:37:05] <Yhg1s> Mogget: the 'except' clauses will only catch exceptions that happen in the 'try' block, not in the 'except' blocks.
[17:37:16] *** Quits: pycode (~pycode@2001:b07:5d28:551:e0b8:1a7b:ee1a:e4a5) (Remote host closed the connection)
[17:38:13] <Mogget> Yhg1s: ah, ok, thank you for the quick answer.
[17:38:50] *** Joins: JustJ (~TheLetter@c-75-71-193-189.hsd1.co.comcast.net)
[17:40:36] *** Quits: ElPresidente (~ElPreside@2600:1700:3d10:4870:9166:dd03:64af:7d9d) (Read error: Connection reset by peer)
[17:40:43] *** Joins: upsala (~zcb@185.213.155.160)
[17:42:20] *** Joins: complexnumber (~complexnu@115-64-7-110.static.tpgi.com.au)
[17:42:52] *** Joins: Sheilong (uid293653@id-293653.ilkley.irccloud.com)
[17:42:57] *** Quits: mIk3_08 (~Thunderbi@user/mik3-08/x-2852566) (Quit: mIk3_08)
[17:43:03] <braxas> If anyone has time on their hands, an extra review here would be appreciated: https://github.com/RDFLib/rdflib/pull/1407
[17:43:15] *** Quits: complexnumber (~complexnu@115-64-7-110.static.tpgi.com.au) (Remote host closed the connection)
[17:43:48] *** Joins: Meteorhead (~Meteorhea@165.225.77.66)
[17:43:54] <Yion> Anyone familiar with IIS? I'm trying to run a python script, if a specific url is called. Tried it by using fastcgi. Not sure whats wrong. I guess IIS thinks I want to access a folder. In the handler setup I have no *.py, but 'document'. The requested url is mywebapp.com/document?12345
[17:44:42] <Yion> Maybe the path mapping is wrong there, and IIS thinks the requester wants to access a folder?
[17:45:23] *** mindraj is now known as d_zol
[17:46:06] *** Quits: EvilDMP (~textual@django/moderator/EvilDMP) (Quit: My MacBook has gone to sleep. ZZZzzz…)
[17:46:40] *** Quits: MikZyth (~MikZyth@188.65.242.140) (Ping timeout: 240 seconds)
[17:46:48] *** Joins: argento (~argent0@168-227-96-53.ptr.westnet.com.ar)
[17:46:56] *** Quits: georgios (~georgios@user/georgios) (Ping timeout: 268 seconds)
[17:46:58] *** Quits: Polyinsecure (~Polyinsec@180.244.135.13) (Quit: Leaving)
[17:48:38] *** Quits: Mattiaslndstrm (~Mattiasln@c188-148-207-108.bredband.tele2.se) (Quit: My MacBook has gone to sleep. ZZZzzz…)
[17:49:21] *** Quits: d_zol (~mindraj@user/mindraj) (Quit: Goodbye, have a great day/evening!)
[17:49:44] *** Joins: gggp (~textual@60.10.194.42)
[17:50:47] *** Joins: Mattiaslndstrm (~Mattiasln@c188-148-207-108.bredband.tele2.se)
[17:56:02] <Soni> has python always had support for [1, 2, 3,] (trailing ,) syntax?
[17:57:12] *** Joins: _moep_ (~moep@user/moep/x-3358975)
[17:57:43] <Mogget> Soni: I am not a hundred percent sure, but at some point I think it was even a best practice thing to add the , at the end if you only had 1 index to make sure people knew it was a list.
[17:57:54] <grawity> https://docs.python.org/release/1.6/ref/exprlists.html
[17:58:12] <Repiphany> Trailing comma is necessary even, for single element tuples (1,)
[17:58:35] *** Quits: wereii (~wereii@2a03:3b40:fe:4f::1) (Ping timeout: 250 seconds)
[17:58:36] *** Joins: pro (~pro@user/pro)
[17:58:38] <Wooble> grawity: sure but 1.6 is practically *modern*.
[17:59:14] <pro> hello, what is the best way to terminate my process, and all the threads that I've spawned ?
[17:59:15] <Soni> some languages require you to omit the trailing comma (they're wrong ofc)
[17:59:24] <Yhg1s> grawity: it's much older than 1.6.
[17:59:32] <grawity> good enough
[18:00:41] <Wooble> "always" may get a bit murky. presumably there was some point where there weren't even lists...
[18:01:02] <Wooble> (whether you can call that "python" is also more pf a philosophical question I guess)
[18:01:35] <grawity> for values of "always" defined as "any version that you're likely to encounter on a system that still runs"
[18:01:47] *** Quits: herjazz (~herjazz@p6758124-ipngn30801marunouchi.tokyo.ocn.ne.jp) (Quit: leaving)
[18:01:54] <grawity> hmm wonder what version of python did Paint Shop Pro have, that's where I first saw it
[18:02:29] *** Quits: argento (~argent0@168-227-96-53.ptr.westnet.com.ar) (Ping timeout: 264 seconds)
[18:03:26] *** Quits: Atque (~Atque@user/atque) (Quit: ...)
[18:05:05] *** Joins: fabs (~fabs@wrls-249-137-11.wrls-client.fas.harvard.edu)
[18:05:12] *** Joins: theseb (~theseb@47-220-214-54.cnrocmta03.res.dyn.suddenlink.net)
[18:05:36] *** Joins: otisolsen70 (~otisolsen@xd4ed80b5.cust.hiper.dk)
[18:06:33] *** Joins: Network2501 (~beard@122-199-54-62.ip4.superloop.com)
[18:08:35] *** Joins: Jackevansevo (~Guest44@host86-164-32-143.range86-164.btcentralplus.com)
[18:09:41] *** Quits: arinov (~arinov@213.194.126.155) (Ping timeout: 264 seconds)
[18:10:16] <theseb> help! why this list comprehension didn't work? servs = [a.service for a in appts if (a.service in allowed)]
[18:10:17] <fluter> hi
[18:10:27] <fluter> is there any changes i round function from py2 to py3?
[18:10:30] <theseb> It gives  allowed not defined error
[18:10:43] <theseb> When I rewrite as a for loop all is rosy
[18:11:01] <fluter> my code stops working when i move to python3
[18:11:14] <fluter> floating point number is different after round
[18:12:05] *** Quits: fikran (~fikran@user/fikran) (Ping timeout: 264 seconds)
[18:12:41] *** Quits: JustJ (~TheLetter@c-75-71-193-189.hsd1.co.comcast.net) (Ping timeout: 264 seconds)
[18:12:44] <Yhg1s> fluter: yes, there are some differences. For example, 2.5 rounds differently.
[18:14:04] *** Joins: fikran (~fikran@user/fikran)
[18:14:47] *** Quits: gggp (~textual@60.10.194.42) (Ping timeout: 246 seconds)
[18:15:01] *** Joins: paravida (~myChateau@user/paravida)
[18:15:06] *** Quits: fabs (~fabs@wrls-249-137-11.wrls-client.fas.harvard.edu) (Remote host closed the connection)
[18:15:16] <theseb> Yhg1s: can't i ask if any idea about my question?
[18:15:38] <theseb> Yhg1s: for a in appts: ...etc. is fine...it is just list comp that gives error
[18:15:56] <Yhg1s> theseb: you will have to provide actual information. Show the code, in a pastebin, in a form that we can actually run, and show the actual output.
[18:16:14] <theseb> Yhg1s: ok
[18:16:30] *** Joins: wereii (~wereii@2a03:3b40:fe:4f::1)
[18:17:37] *** Joins: bn_work (uid268505@id-268505.uxbridge.irccloud.com)
[18:18:10] *** Joins: blue_rog (~blue_rog@2400:6180:0:d0::89:1)
[18:19:58] *** Joins: fabs (~fabs@2607:fb60:2501:2805:dea6:32ff:fed8:2af3)
[18:20:12] *** Quits: shibboleth (~shibbolet@user/shibboleth) (Quit: shibboleth)
[18:20:27] *** Joins: gggp (~textual@123.115.162.53)
[18:21:22] *** Quits: bandit_za (~bandit_za@2c0f:ed28:b016:29a0::1ed) (Ping timeout: 256 seconds)
[18:22:18] *** Joins: Julian (~tos9@python/site-packages/Julian)
[18:24:54] *** Quits: pro (~pro@user/pro) (Quit: WeeChat 3.2.1)
[18:28:38] <fluter> Yhg1s: so in old code: input: 0.6327*1000 => 632, 2.042*10000 => 20420 , but in new code it becomes: 0.6327*1000 => 632, 2.042*10000 => 20419
[18:28:45] <fluter> basically it needs an integer
[18:28:55] <fluter> but 20419.999999999996 should be 20420
[18:29:10] *** Joins: schemanic (~schemanic@204.13.45.2)
[18:29:13] <fluter> how can i round it so that it keeps the same output as old python2 code
[18:29:25] *** Joins: RangerBobVA (~bmaddox@user/rangerbobva)
[18:29:45] <Yhg1s> fluter: you would have to show the code. round() will turn 20419.999999999996 into 20420.
[18:29:51] <Yhg1s> fluter: so you must be rounding something else.
[18:30:43] <Soni> how do you inherit stdout/stderr?
[18:30:45] <theseb> Yhg1s: Can you please see this then?...https://pastebin.com/ijxZhPcy   i worked hard to make it clear for you as you asked
[18:30:56] <schemanic> Hello, I'm looking for libraries that can help me simulate a fictional solar system's orbital rotation and generate imagery of it. Can anyone give me suggestions for tools I could use in Python?
[18:31:40] <Soni> or is that the default?
[18:32:07] <Yhg1s> theseb: you didn't define the name 'allowed', and the code is being executed in a way that doesn't make it available to nested functions (which means it's not a global variable).
[18:32:28] *** Quits: sarab (~sarab@183.87.60.236) (Ping timeout: 252 seconds)
[18:32:45] *** Quits: rany (~rany@user/rany) (Quit: ZNC 1.8.2+deb2+b1 - https://znc.in)
[18:32:49] <Soni> ah nvm we see
[18:33:21] *** Joins: atomic (~atomicwri@user/atomicwrites)
[18:36:03] *** Quits: jpds (~jpds@gateway/tor-sasl/jpds) (Ping timeout: 276 seconds)
[18:36:39] *** Joins: mefistofeles (~mefistofe@user/mefistofeles)
[18:36:52] *** Quits: Falc (~Falc@193.191.206.243) (Quit: Leaving)
[18:38:09] *** Joins: ChkDigit (~u388mw@207-195-34-73.prna.static.sasknet.sk.ca)
[18:38:32] *** Joins: rany (~rany@user/rany)
[18:39:10] <theseb> Yhg1s: i didn't include the part where allowed is defined...it is just a list of strs
[18:40:06] *** Quits: Plyht (uid433484@id-433484.hampstead.irccloud.com) (Quit: Connection closed for inactivity)
[18:40:27] <Yhg1s> theseb: and yet you left out all the important things, like how this code is executed.
[18:40:42] <Yhg1s> theseb: in any case, the problem is because of the unusual way the code is executed.
[18:40:49] *** Joins: jpds (~jpds@gateway/tor-sasl/jpds)
[18:41:36] *** Quits: Mikaela (~sid12355@Feneas/Mikaela) (Remote host closed the connection)
[18:41:47] *** Joins: georgios (~georgios@user/georgios)
[18:42:35] *** Joins: Mikaela (~sid12355@Feneas/Mikaela)
[18:43:27] *** Joins: lxwulf (~lxwulf@user/lxwulf)
[18:43:58] *** Joins: Vornicus (~Vornicus@2603-8000-5d07-7ef0-d97c-a3d4-860b-7292.res6.spectrum.com)
[18:44:08] *** Joins: odoood (~odoood@2601:c8:c003:a550::1)
[18:46:16] *** Joins: KevinX_ (~KevinX@c-71-200-222-150.hsd1.fl.comcast.net)
[18:46:17] *** Quits: KevinX (~KevinX@c-71-200-222-150.hsd1.fl.comcast.net) (Ping timeout: 265 seconds)
[18:46:17] <OutreEE> hey dumb question - who here uses MyPy? is there a reason *not* to use it?
[18:46:57] *** Quits: KevinX_ (~KevinX@c-71-200-222-150.hsd1.fl.comcast.net) (Read error: Connection reset by peer)
[18:47:22] *** Joins: hnOsmium0001 (uid453710@id-453710.hampstead.irccloud.com)
[18:47:43] *** Joins: KevinX (~KevinX@c-71-200-222-150.hsd1.fl.comcast.net)
[18:48:01] *** Joins: todda7 (~torstein@78.30.0.178)
[18:50:49] *** Joins: pro_z (~pro_z@37.214.34.140)
[18:51:10] *** Joins: Elzington (~Elzington@94.198.42.167)
[18:51:10] *** Quits: wyclif (~wyclif@user/wyclif) (Ping timeout: 240 seconds)
[18:52:01] *** Joins: zebrag (~chris@user/zebrag)
[18:52:01] <theseb> Yhg1s: you are very perceptive....yes i was trying to avoid this complexity but since you pointed it out......Django has this special python shell...I pipe my code into this Django python shell like this...../manage.py shell < ./test_code
[18:52:26] <theseb> Yhg1s: do you think the problem is this special/weird python shell environment?
[18:52:27] <Wooble> probably write an actual management command.
[18:52:34] *** Quits: NeoCore (~neocore@195.200.221.85) (Ping timeout: 265 seconds)
[18:52:51] <Yhg1s> theseb: I literally said it was. Yes, it is.
[18:53:26] <theseb> Yhg1s: but what is different about this strange Django python shell specifically that makes normal list comprehensions bomb?
[18:54:07] <theseb> Yhg1s: also i'm impressed and confused how you figured that out...it is like you can see things i can't
[18:54:17] *** Quits: Mattiaslndstrm (~Mattiasln@c188-148-207-108.bredband.tele2.se) (Quit: My MacBook has gone to sleep. ZZZzzz…)
[18:54:30] <Yhg1s> theseb: I just looked at the traceback and saw 'exec', and I know what kind of differences that creates in the code being exectued.
[18:55:01] <avu> theseb: don't let them fool you, the truth is that Yhg1s is a wizard.
[18:55:04] *** Joins: wyclif (~wyclif@user/wyclif)
[18:55:25] <Wooble> that's true but also the entire traceback being django's code was a pretty dead giveaway :P
[18:55:58] *** Joins: Xaldafax (~xaldafax@cpe-198-72-160-101.socal.res.rr.com)
[18:57:13] *** Joins: Mattiaslndstrm (~Mattiasln@c188-148-207-108.bredband.tele2.se)
[19:01:07] *** Joins: be3uykpy (~be3uykpy@2a00:a040:19a:b060:543:c36:111d:461d)
[19:01:31] *** Joins: ramblebamble (ramblebamb@gateway/vpn/protonvpn/ramblebamble)
[19:01:58] *** Joins: EvilDMP (~textual@django/moderator/EvilDMP)
[19:02:06] *** Joins: cuz (~user@38.140.58.234)
[19:02:39] <Shevek91> OutreEE if you try to pass `mypy --strict` it can be a bit painful
[19:04:34] <phy1729> mypy strict isn't that bad unless you use *args or **kwargs a lot. Those don't type well yet.
[19:06:31] *** Quits: ihristov (~ihristov@217.145.94.71) (Quit: Connection closed)
[19:06:51] *** Quits: lxwulf (~lxwulf@user/lxwulf) (Quit: Leaving)
[19:07:03] *** Quits: finsternis (~X@23.226.237.192) (Ping timeout: 250 seconds)
[19:07:40] *** Quits: buttermelted (~buttermel@213-47-29-213.cable.dynamic.surfer.at) (Ping timeout: 240 seconds)
[19:07:53] *** Quits: EvilDMP (~textual@django/moderator/EvilDMP) (Ping timeout: 264 seconds)
[19:08:50] *** Quits: CrazyEddy (crazyed@2603:300a:1d10:c000:de4a:3eff:fe88:cc5f) (Ping timeout: 260 seconds)
[19:09:32] *** Quits: ExeciN (~ExeciN@user/nicexe) (Ping timeout: 256 seconds)
[19:10:02] <OutreEE> Shevek91: what does the --strict do, if you dont mind me asking?
[19:10:30] *** Joins: akk (~akk@75.161.146.115)
[19:11:10] *** Quits: Mechanismus (~LabMonkey@2602:306:cf62:e270:d168:2fc:f772:3f66) (Quit: Leaving)
[19:11:14] <phy1729> Enables a number of flags to make type checking more strict (full list in mypy --help )
[19:11:24] <blue_rog> Is it alright if an asyncio task schedules itself indefinitely? To explain a bit more in detail: Task is basically a timer, sleeps for sometime and runs a function and schedules itself again. If another condition is met, Task is cancelled and rescheduled. Although i saw a few examples about the same idea, none really worked towards the thing i'm doing.
[19:11:54] *** Joins: Samian (~Sami@user/samian)
[19:13:34] <Samian> anyway I can get a list of a member given a list of objects? like this: self.fbgemm_emb_l[:].weight ,, but that doesn't work it seems
[19:13:42] <Samian> I don't want to use list comprehension
[19:14:07] <Samian> [e.weight for e in self.fbgemm_emb_l] would be it though
[19:14:54] <phy1729> you can use a generator comprehension instead
[19:15:29] <Yhg1s> Samian: if that's what you want, why wouldn't you want to use it?
[19:15:51] *** Joins: berong91 (~noob4ever@d75-154-235-153.bchsia.telus.net)
[19:16:03] <Samian> I wanted to use list(map( like this: ntables_l = list(map(len, self.fbgemm_emb_l[:].fbgemm_gpu_emb_bag.embedding_specs))
[19:16:05] *** Quits: berong91 (~noob4ever@d75-154-235-153.bchsia.telus.net) (Remote host closed the connection)
[19:16:12] <Samian> instead of: ntables_l = [len(e.fbgemm_gpu_emb_bag.embedding_specs) for e in self.fbgemm_emb_l[:]]
[19:16:15] <Yhg1s> Samian: okay, well, don't use list() and don't use map(). Use a list comprehension.
[19:16:17] *** Quits: wyclif (~wyclif@user/wyclif) (Ping timeout: 264 seconds)
[19:17:11] *** Joins: wyclif (~wyclif@user/wyclif)
[19:17:14] <Samian> list(map looks cleaner than list comprehension because there's less added bloat.
[19:17:25] *** Quits: theseb (~theseb@47-220-214-54.cnrocmta03.res.dyn.suddenlink.net) (Quit: Leaving)
[19:17:47] *** Joins: jmiehe (~Thunderbi@user/jmiehe)
[19:17:50] *** Joins: theseb (~theseb@47-220-214-54.cnrocmta03.res.dyn.suddenlink.net)
[19:18:10] *** Quits: cyphase (~cyphase@user/cyphase) (Ping timeout: 252 seconds)
[19:18:12] <phy1729> In general it's best to use the language's own idioms and conventions rather than try to apply the idioms and conventions of another language even if you're more familiar with it.
[19:18:15] <Samian> list(map(len, emb_l))   is must cleaner than   [len(e) for e in emb_l]    the e temp variable is bloat
[19:18:15] <Repiphany> Idiomatic python is cleaner because people are used to reading it
[19:18:16] <Yhg1s> Samian: well, you can't write it like that. You would need another layer of map(), for no good reason. It would be muchn more bloated. I recommend getting used to list comprehensions, because they are decidedly *less* bloat than map for anything but toy examples.
[19:18:39] <Yhg1s> Samian: no, the temp variable is *visible*. It's still there with map(), it's just not explicit.
[19:19:00] <Samian> phy1729  map is a python thing. I'm not trying to use another language's idioms
[19:19:17] <theseb> Yhg1s: if i can beat a old point we discussed....Any ideas *WHY* the django guys would make their shell work weirdly?  obviously it isn't in their best interest to have 1000s of people all over the world being confused and having discussions about their shell like we're having now!?
[19:19:18] <OutreEE> phy1729: thanks man
[19:19:21] <kosh> map is mostly good when you are using things like mutliprocessing and pool.map and you want something to be compatible when doing testing
[19:19:23] <Yhg1s> Samian: map() is not really a Python thing. That's why list comprehensions exist :)
[19:19:38] <theseb> Yhg1s: makes not sense
[19:19:42] <kosh> so when I drop from parallel to sequential I just use map instead of pool.map
[19:19:49] <Yhg1s> theseb: probably because you're not using their tool in a way they didn't expect.
[19:20:31] <kosh> in almost all cases a list comp is better than map
[19:20:39] *** Quits: Mattiaslndstrm (~Mattiasln@c188-148-207-108.bredband.tele2.se) (Quit: My MacBook has gone to sleep. ZZZzzz…)
[19:20:45] <Samian> Yhg1s  I like that map contain temporary variables in the command.    map is succinct language. It says "apply this function to every element in the last".  list(map(len, some_list))..  It's clear with no useless variables
[19:20:55] *** Joins: bloodninja (~bloodninj@user/bloodninja)
[19:20:55] <Samian> map *doesn't contain
[19:21:06] *** Joins: Mechanismus (~LabMonkey@2602:306:cf62:e270:fd21:abca:92fe:9c8c)
[19:21:11] <phy1729> except the lambda you'll apply has useless variables
[19:21:19] <theseb> Yhg1s: ah...yes that's a possiblity....thanks
[19:21:28] <Yhg1s> Samian: and yet it's still there, and sometimes you *do* need to access it, and the map() just becomes annoying. map() only looks better in toy examples.
[19:21:51] <Samian> okay. list comprehenion it is
[19:22:22] *** Quits: wyclif (~wyclif@user/wyclif) (Ping timeout: 260 seconds)
[19:22:39] *** Joins: wyclif (~wyclif@user/wyclif)
[19:23:18] *** Quits: cheater (~Username@user/cheater) (Ping timeout: 260 seconds)
[19:23:54] *** Joins: Powerhouse6666 (~Powerhous@24.109.185.150)
[19:25:52] *** Joins: berong91 (~noob4ever@d75-154-235-153.bchsia.telus.net)
[19:26:43] *** Joins: cheater (~Username@user/cheater)
[19:27:41] *** Quits: wyclif (~wyclif@user/wyclif) (Ping timeout: 264 seconds)
[19:28:10] *** Joins: wyclif (~wyclif@user/wyclif)
[19:28:26] *** Quits: berong91 (~noob4ever@d75-154-235-153.bchsia.telus.net) (Remote host closed the connection)
[19:29:29] *** Quits: Powerhouse6666 (~Powerhous@24.109.185.150) (Ping timeout: 264 seconds)
[19:31:44] *** Joins: magla (~gelignite@55d4b2c3.access.ecotel.net)
[19:32:17] *** Quits: todda7 (~torstein@78.30.0.178) (Quit: Konversation terminated!)
[19:33:05] *** Quits: wyclif (~wyclif@user/wyclif) (Ping timeout: 264 seconds)
[19:33:42] *** Joins: wyclif (~wyclif@user/wyclif)
[19:34:15] *** Joins: Powerhouse6666 (~Powerhous@24.109.185.150)
[19:36:22] *** Quits: gggp (~textual@123.115.162.53) (Ping timeout: 260 seconds)
[19:36:46] *** Joins: gggp (~textual@60.10.194.42)
[19:37:44] *** Quits: RangerBobVA (~bmaddox@user/rangerbobva) (Quit: Leaving)
[19:43:13] *** Joins: visl_ (visl@user/visl)
[19:43:39] *** Quits: ano (~ano@user/ano) (Ping timeout: 276 seconds)
[19:43:48] *** Quits: wyclif (~wyclif@user/wyclif) (Ping timeout: 265 seconds)
[19:44:42] *** Joins: wyclif (~wyclif@user/wyclif)
[19:45:15] *** Quits: visl (visl@user/visl) (Ping timeout: 265 seconds)
[19:45:47] *** Quits: Powerhouse6666 (~Powerhous@24.109.185.150) (Ping timeout: 246 seconds)
[19:46:08] *** Joins: ano (~ano@user/ano)
[19:48:29] *** Joins: JustJ (~TheLetter@c-75-71-193-189.hsd1.co.comcast.net)
[19:48:50] *** Quits: hendursa1 (~weechat@user/hendursaga) (Quit: hendursa1)
[19:49:14] *** Joins: LiftLeft (~LiftLeft@216-26-118-34.dynamic.nelson.airstreamcomm.net)
[19:49:16] *** Joins: hendursaga (~weechat@user/hendursaga)
[19:49:17] *** Quits: wyclif (~wyclif@user/wyclif) (Ping timeout: 246 seconds)
[19:49:51] *** Joins: EvilDMP (~textual@django/moderator/EvilDMP)
[19:50:13] *** Joins: wyclif (~wyclif@user/wyclif)
[19:54:10] *** Quits: montxero (~user@149.167.149.74) (Ping timeout: 240 seconds)
[19:54:50] *** Joins: daoudr (~daoudr@178.197.212.191)
[19:54:53] *** Quits: wyclif (~wyclif@user/wyclif) (Ping timeout: 246 seconds)
[19:54:55] *** Quits: ramblebamble (ramblebamb@gateway/vpn/protonvpn/ramblebamble) (Ping timeout: 265 seconds)
[19:55:12] *** Quits: EvilDMP (~textual@django/moderator/EvilDMP) (Quit: My MacBook has gone to sleep. ZZZzzz…)
[19:55:44] *** Joins: wyclif (~wyclif@user/wyclif)
[19:55:54] <grym> map's very lispy, or haskelley
[19:58:46] *** Joins: CrazyEddy (crazyed@2603:300a:1d10:c000:de4a:3eff:fe88:cc5f)
[19:59:20] *** Joins: qlixed (~qlixed@181.44.129.13)
[20:00:29] *** Quits: wyclif (~wyclif@user/wyclif) (Ping timeout: 246 seconds)
[20:00:56] *** Joins: blackout69 (~blackout6@net-93-70-196-199.cust.vodafonedsl.it)
[20:01:15] *** Joins: wyclif (~wyclif@user/wyclif)
[20:01:21] *** Joins: sunny935 (~sunny93@wireguard/tunneler/sunny93)
[20:02:10] *** Quits: pretty_dumm_guy (trottel@gateway/vpn/protonvpn/prettydummguy/x-88029655) (Ping timeout: 265 seconds)
[20:02:24] *** Quits: Yion (~Yion@pd95caa88.dip0.t-ipconnect.de) (Quit: Client closed)
[20:02:37] *** Quits: theseb (~theseb@47-220-214-54.cnrocmta03.res.dyn.suddenlink.net) (Quit: Leaving)
[20:02:49] *** Quits: Meteorhead (~Meteorhea@165.225.77.66) (Quit: Client closed)
[20:02:57] *** Quits: sunny93 (~sunny93@wireguard/tunneler/sunny93) (Ping timeout: 250 seconds)
[20:02:57] *** sunny935 is now known as sunny93
[20:03:20] *** Joins: pretty_dumm_guy (trottel@gateway/vpn/protonvpn/prettydummguy/x-88029655)
[20:03:51] *** Joins: rpkilby (~rpkilby@c-24-20-208-106.hsd1.or.comcast.net)
[20:06:05] *** Quits: wyclif (~wyclif@user/wyclif) (Ping timeout: 246 seconds)
[20:06:45] *** Joins: wyclif (~wyclif@user/wyclif)
[20:16:53] *** Quits: wyclif (~wyclif@user/wyclif) (Ping timeout: 264 seconds)
[20:17:47] *** Joins: wyclif (~wyclif@user/wyclif)
[20:19:17] *** Quits: odoood (~odoood@2601:c8:c003:a550::1) (Ping timeout: 264 seconds)
[20:21:05] *** Quits: GenTooMan (~cyberman@2601:547:437f:e5c6:21f:5bff:fefe:a883) (Read error: No route to host)
[20:21:22] *** Quits: fikran (~fikran@user/fikran) (Ping timeout: 252 seconds)
[20:22:10] *** Quits: minip (~minip@user/minip) (Remote host closed the connection)
[20:22:34] *** Quits: wyclif (~wyclif@user/wyclif) (Ping timeout: 260 seconds)
[20:22:57] <aphysically> https://docs.python.org/3/library/typing.html mentions typing.IO is deprecated (I found it by reveal_type in mypy), but it doesn't mention what I'm meant to use instead
[20:23:07] <shangxiao> comprehensions are also haskelley
[20:23:18] *** Joins: wyclif (~wyclif@user/wyclif)
[20:23:26] *** Joins: fikran (~fikran@user/fikran)
[20:23:55] <aphysically> or does it mean just the typing.io namespace is deprecated?
[20:24:15] *** Joins: GenTooMan (~cyberman@2601:547:437f:e5c6:21f:5bff:fefe:a883)
[20:24:37] <jinsun> yes it is confusing typing.IO is not deprecated
[20:24:57] <bjs> aphysically: it means the typing.io namespace is deprecated
[20:25:06] <aphysically> ah okay
[20:25:10] <jinsun> https://github.com/python/typing/issues/834
[20:25:24] <bjs> aphysically: it's a common phrasing in the docs "<Thing> Deprecated since 3.X.Y: <Something else>"  it is the <Something else> that's deprecated
[20:25:46] <bjs> e.g. "Deprecated since 3.8: the "loop" parameter"  would mean only that parameter is deprecated, not the entire function
[20:27:25] <aphysically> thanks :)
[20:28:08] *** Quits: wyclif (~wyclif@user/wyclif) (Ping timeout: 246 seconds)
[20:28:48] *** Joins: wyclif (~wyclif@user/wyclif)
[20:29:16] <newdimension> I'm having an import issue, would someone be able to have a look? https://dpaste.org/X2g4
[20:30:20] <jinsun> aphysically: it is "Fixed" only in 3.10+, slightly different wording (still a bit confusing maybe) https://docs.python.org/3.10/library/typing.html#typing.IO
[20:31:11] *** Joins: mat001 (~mat001@c-73-223-64-126.hsd1.ca.comcast.net)
[20:31:26] *** Joins: paul424 (~tom@ip-31-0-120-56.multi.internet.cyfrowypolsat.pl)
[20:31:38] *** Quits: shad (~shad@user/shad) (Ping timeout: 246 seconds)
[20:31:45] *** Joins: wallace_mu200 (~wallace_m@pool-108-18-159-186.washdc.fios.verizon.net)
[20:31:47] *** Joins: Barones (~Barones@2804:48dc:8500:0:5635:5e6d:7349:856)
[20:32:01] *** Quits: zaquest (~notzaques@5.128.210.178) (Remote host closed the connection)
[20:32:28] *** Quits: Shevek91 (~Guest31@athedsl-4417762.home.otenet.gr) (Quit: Client closed)
[20:32:46] *** Quits: pluri (~pluri@user/pluri) (Quit: My MacBook has gone to sleep. ZZZzzz…)
[20:33:23] *** Quits: wyclif (~wyclif@user/wyclif) (Ping timeout: 246 seconds)
[20:33:29] *** Quits: mat001 (~mat001@c-73-223-64-126.hsd1.ca.comcast.net) (Remote host closed the connection)
[20:33:44] *** Joins: mat001 (~mat001@c-73-223-64-126.hsd1.ca.comcast.net)
[20:34:05] *** Joins: LuksNuke (~LuksNuke@ip-146-0-191-111.dyn.luxfibre.pt.lu)
[20:34:19] *** Joins: wyclif (~wyclif@user/wyclif)
[20:34:39] *** Joins: Powerhouse6666 (~Powerhous@24.109.185.150)
[20:35:02] *** Quits: naterlater (~Nathan22@199.249.111.186) (Ping timeout: 265 seconds)
[20:35:42] *** Quits: pyeverything (~pyeveryth@goku.bu.edu) (Remote host closed the connection)
[20:37:10] *** Joins: ianliu (~Ian_Liu_R@2804:431:cfcf:c747:2ef1:b511:8789:c7c4)
[20:37:46] *** Quits: CatCow (~wtf_over@c-73-96-109-206.hsd1.or.comcast.net) (Quit: My MacBook Air has gone to sleep. ZZZzzz…)
[20:38:05] <ianliu> I accidentally created my poetry project with an environment activated, now poetry is using that env for my project. How do I make poetry to create a new environment?
[20:38:53] *** Quits: Barones (~Barones@2804:48dc:8500:0:5635:5e6d:7349:856) (Remote host closed the connection)
[20:38:59] *** Quits: wyclif (~wyclif@user/wyclif) (Ping timeout: 246 seconds)
[20:39:02] <The-Compiler> When I use dis.dis on a function doing print(23 + 42), I see "LOAD_CONST 3 (65)". What's going on there? What is it outside of the bytecode that's already simplifying the expression?
[20:39:29] <bjs> The-Compiler: the compiler :)
[20:39:33] <bjs> I've always wanted to say that!
[20:39:36] <The-Compiler> hehe :D
[20:39:49] *** Joins: wyclif (~wyclif@user/wyclif)
[20:40:17] *** Quits: Powerhouse6666 (~Powerhous@24.109.185.150) (Ping timeout: 264 seconds)
[20:40:28] <bjs> The-Compiler: this is called constant folding,  the compiler sees two constants being added so just folds them into one constant and does the arithmetic when it compiles the bytecode
[20:40:42] *** Joins: Seiryuu (~Seiryuu@ip174-103-176-143.adsl2.static.versatel.nl)
[20:41:06] <The-Compiler> yeah, I didn't expect Python to do that, but if they are literals I guess that makes sense
[20:42:34] *** dcaro is now known as dcaro_away
[20:43:06] *** Quits: kib (~kib@user/kib) (Quit: WeeChat 3.2.1)
[20:43:16] *** Quits: mexen (uid495612@user/mexen) (Quit: Connection closed for inactivity)
[20:44:32] <The-Compiler> hm, I might have to read https://realpython.com/courses/cpython-internals-book/
[20:44:53] *** Quits: mrwick (~mrwick@user/mrwick) (Quit: leaving)
[20:45:05] *** Quits: wyclif (~wyclif@user/wyclif) (Ping timeout: 264 seconds)
[20:45:07] *** Parts: Everything (~Everythin@37.115.210.35) ()
[20:45:20] *** Joins: wyclif (~wyclif@user/wyclif)
[20:45:30] <The-Compiler> any idea why there's a difference here, with STORE/LOAD_FAST vs. STORE/LOAD_NAME? https://paste.the-compiler.org/view/31f7627f Is that because they are globals in the second case?
[20:48:18] *** Joins: kaleido (~adam@user/kaleido)
[20:48:21] <bjs> The-Compiler: because one is inside a function
[20:48:30] <bjs> and writing to a variable inside a function is fast :)
[20:48:36] *** Joins: kib (~kib@user/kib)
[20:49:55] <ali1234> this is slightly off-topic but has anyone ever seen a tool that is like a documentation generator... but it generates from git commits?
[20:50:06] <The-Compiler> ali1234: generates what from git commits?
[20:50:16] <ali1234> kind of... a tutorial, i guess?
[20:50:24] *** Quits: kib (~kib@user/kib) (Client Quit)
[20:50:27] *** Quits: grym (~grym@user/grym) (Ping timeout: 245 seconds)
[20:50:29] *** Quits: wyclif (~wyclif@user/wyclif) (Ping timeout: 264 seconds)
[20:50:34] *** Joins: alexises (~lameire@51.15.136.90)
[20:50:51] *** Joins: wyclif (~wyclif@user/wyclif)
[20:51:12] <ali1234> like say i'm writing a programming tutorial and i have a series of steps i want someone to follow. that breaks down as like "chapters" in the documentation and "commits" in the git repo
[20:51:32] <ali1234> commits also have messages which could contain each "chapter" of the tutorial (i can make them really long)
[20:51:47] <The-Compiler> why not just have files, though?
[20:51:49] <ali1234> then, instead of having inline code snippets in the tutorial, i could reference the lines of the actual commit
[20:52:03] <ali1234> the reason for doing this is that if i change the code, the tutorial will automatically update
[20:52:41] *** Joins: RangerBobVA (~bmaddox@user/rangerbobva)
[20:53:20] <ali1234> like say i find a bug in chapter 5 of 12. i go and fix that bug in the chapter 5 commit. due to how git works, it will automatically fix every chapter after that, if they have snippets containing the bugged line of code
[20:53:33] <ali1234> if the tutorial was a separate file i'd have to go through it and fix every place that line is referenced
[20:54:13] *** Joins: tga (~tga@user/tga)
[20:54:21] <ali1234> it also enables automated tests of the tutorial at each step
[20:54:26] <ali1234> not just at the end
[20:54:38] *** Joins: argento (~argent0@168-227-96-53.ptr.westnet.com.ar)
[20:54:52] *** Quits: jmiehe (~Thunderbi@user/jmiehe) (Read error: Connection reset by peer)
[20:54:53] <ali1234> maybe git isn't the answer. is there any tool at all that can do stuff like this?
[20:54:58] *** Joins: ExeciN (~ExeciN@user/nicexe)
[20:55:04] <tga> greetings. any idea whether pycharm can run pycharm and debug an _existing running_ docker container (with the environment already setup by docker-compose)?
[20:55:15] <tga> *pytest
[20:55:53] *** Quits: wyclif (~wyclif@user/wyclif) (Ping timeout: 264 seconds)
[20:56:00] <akk> ali1234: If the git commit message was the text of the tutorial, you'd have to go through and edit it just like you would if it was a separate file.
[20:56:12] <ali1234> akk: the text yes, but not the code samples
[20:56:20] <ali1234> because those are in the actual commit
[20:56:21] *** Joins: wyclif (~wyclif@user/wyclif)
[20:56:21] *** Quits: ExeciN (~ExeciN@user/nicexe) (Remote host closed the connection)
[20:56:32] *** Joins: ExeciN (~ExeciN@user/nicexe)
[20:56:34] *** Quits: legola (~legola@46.235.100.27) (Remote host closed the connection)
[20:56:41] <akk> Oh, so you're looking for something that can insert the latest version of code samples into a tutorial document?
[20:56:44] <ali1234> the downside of this idea is git would no longer be able to track history of the tutorial... if a bug is fixed, you can't tell
[20:56:49] <ali1234> basically yeah
[20:57:21] *** Joins: int3l (~int3l@78-83-124-208.spectrumnet.bg)
[20:58:02] <ali1234> akk: the thing is though, that the code samples are not just "the latest versioN" because the tutorial steps you through a process of writing the code. at each step you add new stuff and rewrite old code to be better
[20:58:07] <ali1234> so you can just link it to a single commit
[20:58:20] <ali1234> can't *
[20:58:24] *** Joins: vimart (~vimart@239.218-30-62.static.virginmediabusiness.co.uk)
[20:58:40] <tga> it looks like pycharm has many options for _starting_ a docker image or docker-compose project, but I can't seem to get it to simply attach to a running one
[20:58:41] <akk> I think you can do that with markdown. I found some examples googling for markdown insert file code sample
[20:58:58] *** Joins: zaquest (~notzaques@5.128.210.178)
[20:59:52] *** Joins: belphegor666 (~satan@HSI-KBW-46-223-2-98.hsi.kabel-badenwuerttemberg.de)
[20:59:55] *** Quits: gggp (~textual@60.10.194.42) (Quit: My MacBook has gone to sleep. ZZZzzz…)
[21:00:55] <ali1234> there's plenty of hits for inserting inline samples... but the point is i want to pull them out of specific git commits
[21:01:02] *** Quits: wyclif (~wyclif@user/wyclif) (Ping timeout: 246 seconds)
[21:01:41] <ali1234> oh there's a github action for it... interesting
[21:01:50] *** Quits: belphegor666 (~satan@HSI-KBW-46-223-2-98.hsi.kabel-badenwuerttemberg.de) (Quit: WeeChat 3.2.1)
[21:01:53] *** Joins: wyclif (~wyclif@user/wyclif)
[21:02:00] <ali1234> https://github.com/marketplace/actions/markdown-embed-code-from-file
[21:03:20] <akk> Yeah, I thought that looked similar to what you were asking for.
[21:04:25] *** Joins: odoood (~odoood@2601:c8:c003:a550::1)
[21:04:43] <ali1234> it doesn't seem to be able to look at specific commits though. i'd have to make copies of the code for each chapter, and keep them synced. so this is only half the solution...
[21:05:55] <ali1234> the tutorial takes an approach of "show the problem before showing the solution", so it first codes things the wrong way, and then fixes them
[21:06:54] *** Quits: wyclif (~wyclif@user/wyclif) (Ping timeout: 260 seconds)
[21:06:57] <oprypin> ali1234, you described a lot about the desired storage method.  but how do you want the result to actually look?
[21:07:24] *** Joins: wyclif (~wyclif@user/wyclif)
[21:08:44] <oprypin> and.. seems like you plan to rewrite git history a lot, right?
[21:09:20] *** Joins: Lando-SpacePimp (~Lando@user/lando-spacepimp)
[21:10:43] <oprypin> ali1234, github action seems like a dead end. surely you wouldn't want your tutorial to only be possible to preview by pushing it to github?
[21:12:06] <oprypin> ali1234, i would recommend just using MkDocs and writing your own plugin for Python-Markdown.   if this plugin can paste snippets from files, https://facelessuser.github.io/pymdown-extensions/extensions/snippets/, you can just modify it to paste snippets from git
[21:12:29] *** Joins: Moosadee (~Moosadee@136.32.155.193)
[21:14:03] *** Quits: dvx (~dvx@185.63.97.64) (Read error: Connection reset by peer)
[21:14:27] *** Joins: INeedAHandle (~INeedAHan@39.124.72.106)
[21:15:09] *** Quits: thiras (~thiras@user/thiras) (Ping timeout: 265 seconds)
[21:15:09] *** Joins: belphegor666 (~satan@HSI-KBW-46-223-2-98.hsi.kabel-badenwuerttemberg.de)
[21:16:26] *** Joins: nyah (~nyah@bcdcb6e3.skybroadband.com)
[21:17:18] <oprypin> fork off from https://github.com/facelessuser/pymdown-extensions/blob/main/pymdownx/snippets.py   and change it to instead use:  commit_title = 'Search commit by title'; commit_hash = check_output('git', 'rev-parse', ':/' + commit_title);  content = check_output('git', 'show', commit_hash + ':' + file_name)
[21:17:34] *** Quits: wyclif (~wyclif@user/wyclif) (Ping timeout: 265 seconds)
[21:18:24] *** Joins: wyclif (~wyclif@user/wyclif)
[21:20:17] *** Quits: hsiktas (sid224847@2a03:5180:f:2::3:6e4f) (Quit: Connection closed for inactivity)
[21:23:21] *** Quits: Proxysna__ (~Proxysna@62.119.254.142) (Quit: Leaving)
[21:23:28] *** Joins: grym (~grym@user/grym)
[21:23:29] *** Quits: wyclif (~wyclif@user/wyclif) (Ping timeout: 264 seconds)
[21:23:51] *** Quits: argento (~argent0@168-227-96-53.ptr.westnet.com.ar) (Quit: leaving)
[21:23:54] *** Joins: wyclif (~wyclif@user/wyclif)
[21:24:49] *** belphegor666 is now known as lucifero
[21:27:18] *** lucifero is now known as belphegor666
[21:28:41] *** Quits: wyclif (~wyclif@user/wyclif) (Ping timeout: 246 seconds)
[21:29:25] *** Joins: wyclif (~wyclif@user/wyclif)
[21:29:57] <baltazar> is it possible to tell pyright to ignore a line?
[21:31:04] <baltazar> it's being an idiot when using socketio.AsyncServer.on as a decorator
[21:31:12] *** Quits: wolfgang (~wolfgang@101.174.6.197) (Remote host closed the connection)
[21:31:34] *** Quits: Jackevansevo (~Guest44@host86-164-32-143.range86-164.btcentralplus.com) (Quit: Client closed)
[21:32:13] *** Quits: belphegor666 (~satan@HSI-KBW-46-223-2-98.hsi.kabel-badenwuerttemberg.de) (Quit: WeeChat 3.2.1)
[21:32:53] <baltazar> e.g. if I do `sio = socketio.AsyncServer(); @sio.on('connect') async def handler(...): ...`, it takes a branch inside sio.on() which returns None, which is not callable
[21:32:54] <ali1234> oprypin: i want the result to look like a book with code samples
[21:33:10] <oprypin> ok anyway i've fully stated my suggestion
[21:33:27] *** Quits: chele (~chele@user/chele) (Remote host closed the connection)
[21:33:29] *** Joins: Akuli (~Akuli@213.216.210.147)
[21:33:56] <ali1234> i've kind of come to the conclusion that git isn't the right storage format for the problem. i don't know what is though
[21:33:59] *** Joins: raxor2k (~raxor2k@78.158.228.175)
[21:34:31] *** Quits: wyclif (~wyclif@user/wyclif) (Ping timeout: 252 seconds)
[21:34:44] *** Joins: Powerhouse6666 (~Powerhous@24.109.185.150)
[21:34:56] *** Joins: wyclif (~wyclif@user/wyclif)
[21:35:20] *** Quits: odoood (~odoood@2601:c8:c003:a550::1) (Ping timeout: 246 seconds)
[21:35:55] <Julian> ali1234: I only skimmed your question
[21:36:05] <Julian> ali1234: But "Sphinx" :)
[21:36:33] <Julian> (There are of course many other similar things you can use to write a book) -- but the problem you mentioned about crosslinking is precisely what hypertext was invented for
[21:36:41] <ali1234> not really relevant to the problem
[21:36:43] <Julian> And tools like sphinx and other to-HTML-generators specifically support that functionality
[21:37:35] <Julian> Can you clarify your question then? Using commits as units of storage isn't really a great idea, but other than that and "I want to link to a thing and have the link autoupdate" (for which the answer is "a hyperlink"), what else are you asking?
[21:37:39] <baltazar> ah, found it: # type: ignore
[21:37:57] <ali1234> during the course of the book, you are instructed to make changes to the source code of a program
[21:38:01] *** Quits: Lando-SpacePimp (~Lando@user/lando-spacepimp) (Quit: They told me they fixed it. I trusted them to fix it. It's not my fault!)
[21:38:28] <ali1234> so in chapter 1, main.py looks completely different than it does in chapter 10
[21:38:39] <ali1234> so how do i include snippets of main.py in chapter one?
[21:38:48] <ali1234> without having two copies of main.py
[21:39:16] <Julian> What's wrong with having multiple copies of it?
[21:39:17] <newdimension> Anyone know how I can make the class and attribute variables in SQLAlchemy? ids_in_db_query = session.query(foo.bar)
[21:39:19] *** Joins: voirnox_ (~voirnox@voidbyte.xyz)
[21:39:32] *** Quits: wyclif (~wyclif@user/wyclif) (Ping timeout: 246 seconds)
[21:39:45] <oprypin> ali1234, just bite the bullet and maintain it manually. if u wanna fix a bug, how hard could it be to search for the code snippet globally
[21:39:48] <newdimension> I'm writing a function that would take foo and bar as arguments and would get the query
[21:39:49] <ali1234> if i modify the instructions in chapter 1, i have to go and update the copy of main.py for chapter 1, 2, 3, 4, 5, 6, 7, 8, 9, and 10
[21:40:10] *** Quits: voirnox (~voirnox@voidbyte.xyz) (Ping timeout: 252 seconds)
[21:40:15] <oprypin> you'll spend way more time thinking of this automation than you'll spend updating those copies
[21:40:20] <Julian> ali1234: you could store successive chapters as diffs, but I'd not do that personally
[21:40:27] *** Joins: wyclif (~wyclif@user/wyclif)
[21:40:33] *** Joins: berong91 (~noob4ever@d75-154-235-153.bchsia.telus.net)
[21:40:41] <Julian> ali1234: if you change chapter 1 you do indeed likely want to check the flow is correct pedagogically with later chapters, so I'd be spot checking that personally
[21:40:49] <Julian> but yeah if you insist, you could store diffs
[21:40:59] <ali1234> i want to automate that test
[21:41:16] <Julian> it cannot be automated
[21:41:46] <ali1234> of course it can. i'll get a merge conflict
[21:41:52] <newdimension> getattr() worked for my use-case FYI ^
[21:41:52] <Julian> if in chapter 5 you have a comment saying "the function we added last week will be modified", and you change that to happen in chapter 3 instead of 4, no test will find that
[21:42:14] <ali1234> sure it will, see above :)
[21:42:44] <Julian> ali1234: I'd store separate copies. If you insist, go for diffs or commits, sure.
[21:42:52] *** Joins: bancroft (~bancroft@bras-base-mtrlpq02hsy-grc-09-76-68-189-147.dsl.bell.ca)
[21:43:15] <Julian> (You will not get merge conflicts for all cases you care about, but if you think you will it's your party :)
[21:44:10] <bancroft> i'm looking at a datetime string that looks like `2022-09-17T04:00:00.000Z` I got "%Y-%m-%dT%H:%M:%S" but I don't know how to interpret the miliseconds+Z timezone. It looks like strptime only has microseconds ?
[21:45:13] *** Quits: shangxiao (~davids@124.187.230.212) (Quit: WeeChat 3.3)
[21:45:17] *** Joins: cedric (~cedric@2a01:cb11:821:7c00:dc54:3fb1:7bf1:79f3)
[21:45:36] *** Quits: wyclif (~wyclif@user/wyclif) (Ping timeout: 265 seconds)
[21:45:49] *** Quits: ianliu (~Ian_Liu_R@2804:431:cfcf:c747:2ef1:b511:8789:c7c4) (Quit: WeeChat 3.2)
[21:45:50] *** Quits: Powerhouse6666 (~Powerhous@24.109.185.150) (Ping timeout: 246 seconds)
[21:45:56] *** Joins: wyclif (~wyclif@user/wyclif)
[21:46:32] <grawity> .fromisoformat()? https://stackoverflow.com/a/59913385/49849
[21:46:44] <Julian> it's not quite iso I think
[21:46:57] *** Joins: FluffyMask (~masque@user/fluffymask)
[21:47:02] *** Joins: Powerhouse6666 (~Powerhous@24.109.185.150)
[21:47:06] <The-Compiler> hmmm wait this rings a bell
[21:47:14] *** Joins: xrogaan (~xrogaan@user/xrogaan)
[21:47:20] <Julian> yes, here too
[21:47:26] <Julian> I should know this, but anyways "%Y-%m-%dT%H:%M:%S.%fZ" I believe works
[21:47:55] <The-Compiler> hm, I actually used dateutil.parser.isoparse for parsing in the project I had to deal with this
[21:48:05] <Julian> right giving up and using one of the higher level libraries is probably a decent idea
[21:48:28] <The-Compiler> https://github.com/The-Compiler/cloclify/blob/f1a4c69d5fad7a55a37c14573d8aeb2bff5c1995/src/cloclify/utils.py#L20-L26 ¯\_(ツ)_/¯
[21:48:41] <Julian> nice
[21:48:53] *** Quits: martums (~martums@user/martums) (Read error: Connection reset by peer)
[21:49:18] *** Joins: jmiehe (~Thunderbi@user/jmiehe)
[21:49:21] *** Parts: tusko (~yeurt@copyfree/advocate/tusko) (Byeee)
[21:49:35] <grawity> why does fromisoformat() not accept "Z" as a timezone...
[21:50:56] *** Joins: jazzy (~jaziz@2600:380:457b:dc40:6db7:481b:9945:77d8)
[21:51:05] *** Quits: wyclif (~wyclif@user/wyclif) (Ping timeout: 264 seconds)
[21:51:18] *** Joins: belphegor666 (~satan@HSI-KBW-46-223-2-98.hsi.kabel-badenwuerttemberg.de)
[21:51:28] *** Joins: wyclif (~wyclif@user/wyclif)
[21:51:50] <Julian> https://bugs.python.org/issue35829
[21:52:40] <Julian> I say "I should know this" because we spent a few weeks discussing this on the JSON Schema spec (and ultimately I found fun bugs like https://bugs.python.org/issue44994 ) but now thankfully I've blocked all this out of my brain
[21:53:30] *** Quits: rsx (~dummy@ppp-188-174-156-22.dynamic.mnet-online.de) (Quit: rsx)
[21:54:00] *** Joins: semeion (~semeion@user/semeion)
[21:54:07] <grawity> I'll have to make a note about dateutil.parser
[21:54:39] *** Quits: belphegor666 (~satan@HSI-KBW-46-223-2-98.hsi.kabel-badenwuerttemberg.de) (Changing host)
[21:54:39] *** Joins: belphegor666 (~satan@user/belphegor666)
[21:54:50] *** Joins: martums (~martums@user/martums)
[21:55:30] *** Joins: PaddyF (~PaddyF@user/paddyf)
[21:55:40] <bancroft> Julian: thank you!
[21:55:45] *** Quits: belphegor666 (~satan@user/belphegor666) (Client Quit)
[21:56:12] *** Joins: belphegor666 (~satan@user/belphegor666)
[21:56:29] *** Quits: wyclif (~wyclif@user/wyclif) (Ping timeout: 264 seconds)
[21:56:59] *** Joins: wyclif (~wyclif@user/wyclif)
[21:57:02] *** Joins: Hokedli (~lasliedv@gateway/tor-sasl/hokedli)
[21:57:07] <Julian> np, see The-Compiler's link too
[21:57:38] *** Joins: stealth_ (~stealth_@216-197-160-97.regn.static.sasknet.sk.ca)
[21:57:57] <rendar> `try: await a(); await b() except: asyncio.CancelledError: break` -- if i have this code and my coroutine is waiting a(), if it gets CancelledError exception, it won't never call b() right?
[21:58:39] <grawity> "Supports the full ISO 8601 datetime spec" I mean ISO 8601 even has conformance levels so that you'd only need to support the basic features and not the full spec, and still claim compliance...
[21:58:47] *** Quits: Powerhouse6666 (~Powerhous@24.109.185.150) (Ping timeout: 246 seconds)
[21:59:04] <grawity> well, .replace("Z", "+0000") is cheap
[21:59:54] <ssbr`> ISTR the spec was both large and expensive.
[22:01:33] *** Joins: Kharon (uid511277@user/cypris)
[22:02:04] *** Quits: wyclif (~wyclif@user/wyclif) (Ping timeout: 252 seconds)
[22:02:26] *** Joins: Midjak (~Midjak@82-65-111-221.subs.proxad.net)
[22:02:29] *** Joins: wyclif (~wyclif@user/wyclif)
[22:04:31] *** Joins: CatCow (~wtf_over@c-73-96-109-206.hsd1.or.comcast.net)
[22:04:49] *** Joins: codificat (~pep@187.red-83-46-128.dynamicip.rima-tde.net)
[22:05:36] *** Joins: djapo (~archangel@user/djapo)
[22:07:04] *** Quits: jamwil (~jamwil@user/jamwil) (Quit: leaving)
[22:07:23] *** Quits: rendar (~rendar@user/rendar) (Quit: Leaving)
[22:07:34] *** Quits: Vonter (~Vonter@user/vonter) (Ping timeout: 268 seconds)
[22:10:24] *** Joins: arinov (~arinov@77.67.147.245)
[22:10:39] *** Quits: RangerBobVA (~bmaddox@user/rangerbobva) (Quit: Leaving)
[22:11:02] *** Quits: semeion (~semeion@user/semeion) (Ping timeout: 246 seconds)
[22:11:15] *** Joins: MaximB (~MaximB@87.68.165.87)
[22:11:54] *** Joins: patchie (~sdf@136.228.219.36)
[22:12:01] *** Joins: kib (~kib@user/kib)
[22:12:17] *** Joins: Vonter (~Vonter@user/vonter)
[22:12:41] *** Quits: wyclif (~wyclif@user/wyclif) (Ping timeout: 264 seconds)
[22:13:30] *** Joins: wyclif (~wyclif@user/wyclif)
[22:14:56] *** Joins: ckdCreations (~ckdCreati@c-24-17-50-149.hsd1.wa.comcast.net)
[22:15:35] *** Joins: jamwil (~jamwil@user/jamwil)
[22:17:56] *** Joins: fandre1986 (~fandre198@178-36-241-155.adsl.inetia.pl)
[22:18:02] *** Quits: wyclif (~wyclif@user/wyclif) (Ping timeout: 246 seconds)
[22:18:19] *** Joins: acresearch (~acresearc@user/acresearch)
[22:18:37] *** Quits: Elzington (~Elzington@94.198.42.167) (Remote host closed the connection)
[22:19:01] *** Joins: wyclif (~wyclif@user/wyclif)
[22:19:12] <acresearch> people i have a function with a loop, i am trying to setup tqdm with multiprocessing so that i run the function 4 times (4 cores) and see 4 progress bars (for each core) is this possible?
[22:19:33] *** Joins: Payam (~Payam@c83-250-236-236.bredband.tele2.se)
[22:21:34] *** Quits: ckdCreations (~ckdCreati@c-24-17-50-149.hsd1.wa.comcast.net) (Ping timeout: 260 seconds)
[22:21:59] <Wooble> acresearch: tqdm.contrib.concurrent?
[22:22:02] *** Quits: audio (~audio@2603-8081-1800-6a6f-60cd-6954-be1d-d6dd.res6.spectrum.com) (Ping timeout: 260 seconds)
[22:22:17] *** Joins: ckdCreations (~ckdCreati@147.55.133.133)
[22:22:39] <acresearch> Wooble: ok let me try
[22:23:50] <acresearch> Wooble: this is my code: https://paste.debian.net/1212554/   is this correct?
[22:23:54] *** Quits: wyclif (~wyclif@user/wyclif) (Ping timeout: 260 seconds)
[22:24:26] *** Quits: ali1234 (~al@user/ali1234) (Ping timeout: 268 seconds)
[22:24:27] *** Joins: semeion (~semeion@user/semeion)
[22:24:34] *** Joins: wyclif (~wyclif@user/wyclif)
[22:25:55] *** Joins: ali1234 (~al@user/ali1234)
[22:27:30] <Wooble> acresearch: no, concurrent is a module. it comes with a process_map function that makes the bars for you, no need to do that inside the function itself.
[22:28:46] *** Joins: tg_ (~tg@rockylinux/infra/tg)
[22:29:35] *** Quits: wyclif (~wyclif@user/wyclif) (Ping timeout: 265 seconds)
[22:30:02] *** Joins: wyclif (~wyclif@user/wyclif)
[22:30:04] *** Quits: tg (~tg@rockylinux/infra/tg) (Ping timeout: 252 seconds)
[22:30:11] *** Joins: infobob (~infobob@python/bot/infobob)
[22:30:38] *** Quits: fikran (~fikran@user/fikran) (Ping timeout: 246 seconds)
[22:31:14] *** Joins: thiras (~thiras@user/thiras)
[22:31:35] <acresearch> Wooble: ok let me try
[22:32:49] *** Joins: fikran (~fikran@user/fikran)
[22:34:14] <acresearch> Wooble: https://paste.debian.net/1212556/     ok this works, but i get only 1 progress bar with number of core rather than the number of loops in each core
[22:34:50] *** Quits: wyclif (~wyclif@user/wyclif) (Ping timeout: 246 seconds)
[22:34:51] *** Joins: hqdruxn08_ (~hqdruxn08@cpe-66-68-166-214.austin.res.rr.com)
[22:35:29] *** Joins: kyooo (~kyooo@2a02:a31d:a13c:5600:559d:f748:905d:cda9)
[22:35:32] *** Joins: wyclif (~wyclif@user/wyclif)
[22:35:44] <Roey> Wooble: wooble looble doob doob?
[22:35:54] <Roey> your nickname sounds so Rick and Morty to me, heh
[22:36:00] *** Quits: raxor2k (~raxor2k@78.158.228.175) ()
[22:38:19] *** Quits: hqdruxn08 (~hqdruxn08@cpe-66-68-166-214.austin.res.rr.com) (Ping timeout: 252 seconds)
[22:39:02] *** Quits: elkalamar_ (elkalamar@gateway/vpn/airvpn/elkalamar) (Ping timeout: 246 seconds)
[22:39:30] *** Joins: besnn (~besnn@user/besnn)
[22:39:59] *** Quits: belphegor666 (~satan@user/belphegor666) (Quit: WeeChat 3.2.1)
[22:40:05] *** Quits: wyclif (~wyclif@user/wyclif) (Ping timeout: 246 seconds)
[22:40:13] *** Quits: clarjon1 (~clarjon1@user/clarjon1) (Read error: Connection reset by peer)
[22:40:17] *** Quits: JustJ (~TheLetter@c-75-71-193-189.hsd1.co.comcast.net) (Ping timeout: 264 seconds)
[22:40:26] *** Joins: belphegor666 (~satan@user/belphegor666)
[22:41:04] *** Joins: wyclif (~wyclif@user/wyclif)
[22:41:09] *** Joins: clarjon1 (~clarjon1@user/clarjon1)
[22:41:45] *** Joins: Auron (~Auron956@user/auron)
[22:42:26] *** Joins: Macuser (~Macuser@216.30.159.201)
[22:42:38] *** Quits: kai3 (~kai@x50d24799.cust.hiper.dk) (Ping timeout: 265 seconds)
[22:44:47] *** Joins: dskull (~dskull@user/dskull)
[22:45:11] <acresearch> i do not get it   tqdm's process_map   does the exact same thing as tqdm.tqdm()   what is the difference?
[22:46:17] *** Quits: wyclif (~wyclif@user/wyclif) (Ping timeout: 264 seconds)
[22:46:34] *** Joins: wyclif (~wyclif@user/wyclif)
[22:47:05] *** Quits: pretty_dumm_guy (trottel@gateway/vpn/protonvpn/prettydummguy/x-88029655) (Ping timeout: 246 seconds)
[22:47:33] *** Joins: kai3 (~kai@x50d24799.cust.hiper.dk)
[22:47:48] <Wooble> acresearch: ok, that doesn't seem to be what you want. maybe this library: https://pypi.org/project/parallelbar/ ?
[22:48:13] *** Joins: pretty_dumm_guy (trottel@gateway/vpn/protonvpn/prettydummguy/x-88029655)
[22:48:31] <acresearch> ok let me try it
[22:48:58] <Wooble> although it seems to do multiple bars based on cores, not necessarily workers.
[22:49:06] *** Quits: lastshell (~lastshell@user/lastshell) (Ping timeout: 268 seconds)
[22:49:19] *** Quits: varaindemian (uid73404@id-73404.ilkley.irccloud.com) (Quit: Connection closed for inactivity)
[22:50:57] *** Quits: bookworm (~bookworm@neomutt/bookworm) ()
[22:51:41] *** Quits: wyclif (~wyclif@user/wyclif) (Ping timeout: 264 seconds)
[22:52:05] *** Joins: wyclif (~wyclif@user/wyclif)
[22:52:38] *** Joins: lastshell (~lastshell@user/lastshell)
[22:52:55] *** Joins: bookworm (~bookworm@neomutt/bookworm)
[22:53:18] *** Quits: dskull (~dskull@user/dskull) (Ping timeout: 260 seconds)
[22:54:19] *** Joins: dskull (~dskull@user/dskull)
[22:56:21] <acresearch> Wooble: ok i am following the example, but it does not seems to work as i thought it would? https://paste.debian.net/1212561/
[22:56:33] <acresearch> i just get the result without progress
[22:56:53] *** Quits: wyclif (~wyclif@user/wyclif) (Ping timeout: 246 seconds)
[22:57:36] *** Joins: wyclif (~wyclif@user/wyclif)
[22:58:20] <jmcantrell> How can I get an absolute path to where a package is installed, from within the package itself?
[23:00:46] *** Joins: wolfgang (~wolfgang@101.174.6.197)
[23:00:46] *** Quits: wilk (~wilk@user/wilk) (Ping timeout: 260 seconds)
[23:01:44] <Henry151> jmcantrell: this may be helpful https://docs.python.org/3/library/inspect.html
[23:02:07] <akk> Would __file__ work?
[23:02:29] *** Quits: wyclif (~wyclif@user/wyclif) (Ping timeout: 264 seconds)
[23:02:56] <Wooble> acresearch: I get a progress bar, although I tried in on a 1-core VM so not very useful. :)
[23:03:06] *** Joins: wyclif (~wyclif@user/wyclif)
[23:03:15] *** Quits: Hokedli (~lasliedv@gateway/tor-sasl/hokedli) (Quit: Konversation terminated!)
[23:04:00] <stealth_> jmcantrell, if its actually a package then `__package__` or `None`
[23:05:04] <jmcantrell> Yeah, looks like `importlib.resources.path(__package__, "__init__.py")` is what I needed.
[23:06:02] *** Joins: JustJ (~TheLetter@c-75-71-193-189.hsd1.co.comcast.net)
[23:07:44] *** Quits: wyclif (~wyclif@user/wyclif) (Ping timeout: 246 seconds)
[23:07:52] *** Quits: daoudr (~daoudr@178.197.212.191) (Remote host closed the connection)
[23:08:20] <acresearch> Wooble: haha
[23:08:36] *** Joins: wyclif (~wyclif@user/wyclif)
[23:08:44] <acresearch> Wooble: well, i do get 4 bars, but they do not update,, they just freeze and then i get 100% on all of them
[23:09:52] <Wooble> acresearch: I think the problem is that you have a very small iterable and then a function that does a lot of work, instead of mapping a quick function over a large iterable.
[23:10:06] *** Quits: Julian (~tos9@python/site-packages/Julian) (Ping timeout: 260 seconds)
[23:10:43] <vimart> Has anybody expierience with both GUI frameworks: PyQT5 and Kivy?  I've learn a bit Tkinter but would like go further and have ambivalent feelings what to go with.
[23:10:43] <Wooble> acresearch: probably to get a good progress bar your way you do need to update the bar inside the loop in the function, which is tricky without everything overwriting stuff
[23:11:01] <acresearch> hmmmm
[23:11:46] <Wooble> vimart: kivy seems nice if you want to run python on a phone, although... I don't and haven't used it much.
[23:13:09] *** Quits: gitesh (uid423739@id-423739.ilkley.irccloud.com) (Quit: Connection closed for inactivity)
[23:13:20] *** Quits: wyclif (~wyclif@user/wyclif) (Ping timeout: 246 seconds)
[23:13:22] <Wooble> (I can also usually avoid needing a GUI at all, so my qt experience is also pretty limited. it was largely positive when I needed it. tkinter is awful.)
[23:14:07] *** Joins: wyclif (~wyclif@user/wyclif)
[23:16:01] *** Joins: Julian (~tos9@python/site-packages/Julian)
[23:16:43] <akk> vimart: PyQT5 is more mature than kivy, and probably easier to find docs and examples for.
[23:18:15] <akk> I tried kivy a few years ago but it was pretty raw then, very few widgets available. They have some docs now, but when I google for help on specific things, I find a lot of unanswered questions.
[23:18:56] *** Quits: wyclif (~wyclif@user/wyclif) (Ping timeout: 246 seconds)
[23:19:38] *** Joins: wyclif (~wyclif@user/wyclif)
[23:20:24] *** Joins: gitesh (uid423739@id-423739.ilkley.irccloud.com)
[23:20:34] *** Quits: ExeciN (~ExeciN@user/nicexe) (Remote host closed the connection)
[23:22:48] <patchie> What am i doing wrong?
[23:22:49] <patchie> https://pastebin.com/fDsrtrm5
[23:24:41] *** Quits: wyclif (~wyclif@user/wyclif) (Ping timeout: 265 seconds)
[23:24:52] *** Joins: buttermelted (~buttermel@213-47-29-213.cable.dynamic.surfer.at)
[23:25:09] *** Joins: wyclif (~wyclif@user/wyclif)
[23:26:08] *** Joins: ramblebamble (ramblebamb@gateway/vpn/protonvpn/ramblebamble)
[23:26:36] <Wooble> besides using a paste service with 50 ads on the page?
[23:27:59] *** Joins: finsternis (~X@23.226.237.192)
[23:28:28] *** Quits: blackout69 (~blackout6@net-93-70-196-199.cust.vodafonedsl.it) (Quit: Leaving.)
[23:28:31] *** Joins: monchi (~monchi@ec2-52-221-186-77.ap-southeast-1.compute.amazonaws.com)
[23:28:57] *** Joins: josh_h (sid301834@2a03:5180:f:1::4:9b0a)
[23:30:02] *** Quits: Julian (~tos9@python/site-packages/Julian) (Quit: leaving)
[23:30:10] *** Quits: Payam (~Payam@c83-250-236-236.bredband.tele2.se) (Ping timeout: 260 seconds)
[23:32:17] <vimart> Wooble , akk IMHO PyQT5 seems better as well and YES Pyqt5 is much better documented and easier to find some answer for throubleshooting if needed. Kivy was popularised I think only because of easy porting to mobile phones but... Pyqt5 is supported for mobile platforms as well.
[23:32:56] *** Quits: wyclif (~wyclif@user/wyclif) (Ping timeout: 246 seconds)
[23:33:57] <stealth_> QT has a larger community and better funded.
[23:34:52] <vimart> only licence matters I do see :-)
[23:34:52] <akk> vimart: um, maybe. When I google on pyqt5 android, I see a lot of people asking things like "This is supposed to work, how come it doesn't?"
[23:35:13] <akk> kivy's probably a better bet if you're targeting phones and only have a fairly simple UI.
[23:36:26] <CrtxReavr> In a world of unicode, is there any reason to use STR.lower() over STR.casefold()?
[23:36:41] *** Quits: JustJ (~TheLetter@c-75-71-193-189.hsd1.co.comcast.net) (Ping timeout: 264 seconds)
[23:36:52] <vimart> akk: I'll be honest I've no experience with PyQT5 but....... I wouldn't be surprised if people just tried to build a simply app that might be working on desktop and they expect it working on mobile without checking what must be done to make it working on Android for example.
[23:36:54] <stealth_> casefold is good if you are matching stuff
[23:37:33] <acresearch> Wooble:  i am close to a solution using tqdm,    but it is not perfect   look at this: https://paste.debian.net/1212565/      i get multiple bars,   but they behave a bit strange,,, you see what i mean?
[23:38:29] <stealth_> vimart, https://beeware.org/ might be another option if you are making apps for android
[23:39:34] <akk> vimart: Sure, but I'm not seeing much in the way of guides to targeting PyQt5 Android, what is and isn't available.
[23:40:10] *** Joins: wyclif (~wyclif@user/wyclif)
[23:40:59] <stealth_> vimart, and yes you can publish to android, their documentation is all over the place.
[23:41:54] *** Joins: xD- (~|_|@194.5.249.141)
[23:42:07] <ezzieyguywuf> line_profiler is pretty sweet
[23:42:38] <trace987> is it possible when importing a module to give them a variable the same time you importing it
[23:43:11] <stealth_> trace987, `import module as something_else` ?
[23:43:40] *** Quits: jmiehe (~Thunderbi@user/jmiehe) (Read error: Connection reset by peer)
[23:43:46] <trace987> okay
[23:43:51] <trace987> and how does that work
[23:43:54] <CrtxReavr> YOu can pass a variable or value when instantiating a class with that module.
[23:44:23] <xD-> any ideas whats wrong here? https://bpa.st/GNPA
[23:44:43] <stealth_> trace987, its more of a alias
[23:45:05] *** Quits: wyclif (~wyclif@user/wyclif) (Ping timeout: 264 seconds)
[23:45:12] <stealth_> trace987, not really sure what you meant by "give them a variable"
[23:45:41] *** Joins: wyclif (~wyclif@user/wyclif)
[23:46:50] <KirkMcDonald> xD-: str.lstrip() isn't going to strip decimal points from the middle of the string.
[23:47:01] *** Joins: micah (~micah@debian/micah)
[23:47:06] <KirkMcDonald> xD-: You may want to use an exception handler.
[23:47:15] *** Quits: schemanic (~schemanic@204.13.45.2) (Quit: Client closed)
[23:47:20] <micah> what does the [] do when passing arguments to a function, like this: conn.sendmail(msgfrom, [msgto], msg.as_string())
[23:47:23] <xD-> KirkMcDonald: why does it work @ Print?
[23:47:43] <stealth_> xD-, why not check if something is `str` then `float(value)` the rest?
[23:47:44] <xD-> KirkMcDonald: ah so the if is false i see
[23:48:00] <xD-> stealth_: okay
[23:48:58] <KirkMcDonald> xD-: I guess I'm unclear on what you think is not working.
[23:49:39] <xD-> stealth_: but whole list is always string
[23:50:07] <xD-> i still want to keep one liner :)
[23:50:10] <patchie> anyone?
[23:50:10] <xD-> no exception
[23:50:46] *** Quits: wyclif (~wyclif@user/wyclif) (Ping timeout: 268 seconds)
[23:50:51] <patchie> Wooble: so, you're telling me you're not using adblocker? and that should be my problem? hehe ..nope
[23:50:59] <KirkMcDonald> xD-: "-54.1".lstrip("+-.") will give you "54.1", and "54.1".isdigit() will give you False. The decimal point is not a digit.
[23:51:11] *** Joins: wyclif (~wyclif@user/wyclif)
[23:51:13] <patchie> why do i get this error message? https://pastebin.com/fDsrtrm5
[23:51:30] <KirkMcDonald> micah: That's a list.
[23:51:42] <patchie> mssql = create_engine("mssql+pyodbc://user:{}@server/database?driver=ODBC+Driver+17+for+SQL+Server".format("******"))
[23:52:12] <micah> KirkMcDonald: thanks!
[23:52:56] <xD-> KirkMcDonald: maybe regex can remove "."
[23:54:05] *** Quits: pro_z (~pro_z@37.214.34.140) (Ping timeout: 264 seconds)
[23:54:22] <Celelibi> Are import * transitive?
[23:54:28] <KirkMcDonald> xD-: Or just... use an exception handler?
[23:54:38] *** Quits: dld (~davidlowr@2620:6e:6000:2900:9df:744b:194c:a7af) (Ping timeout: 246 seconds)
[23:54:40] <KirkMcDonald> Celelibi: Names are names.
[23:54:42] <stealth_> xD-, https://bpa.st/LWYQ
[23:55:45] <hexnewbie> patchie: It's not the cause of the error, but I think the password needs to go through urllib.parse.quote(), if it contains anything that can mangle the URL there is a non-zero chance that it *is* the cause of the error too (though I would have expected something more dramatic in that instance)
[23:56:24] <xD-> stealth_: nice :)
[23:56:30] *** Joins: nergar (~Nergar@177.225.152.202)
[23:56:38] <stealth_> xD-, silly but you want to seperate int, float, str you can do https://bpa.st/3TEQ
[23:57:12] <stealth_> xD-, i forgot to chenage the output w/e
[23:57:27] <Celelibi> KirkMcDonald, I don't see your point.
[23:57:57] <vimart> stealth_: thanks, I wasn't aware of beeware :-)
[23:58:18] <Celelibi> A name that was *-imported doesn't seem to be transitively *-imported again.
[23:58:22] *** Quits: PaddyF (~PaddyF@user/paddyf) (Quit: bye)
[23:58:41] <xD-> stealth_: wondering why there is no built in function for this
[23:58:43] <vimart> The only pain for for me with PyQT5 is... you ducking neet to be comfrotable with classes to work with it and I don't have a grasp on it yet that I went first for a Tkinter.
[23:59:25] *** Joins: raxor2k (~raxor2k@78.158.228.175)
[23:59:42] <Wooble> Celelibi: does the module you're importing from define __all__? why are you using * imports at all?
