[00:00:13] <ramblebamble> lara99 another would be defining the variable with var inside an if-block, it will be reference-able outside the if/loop-whatever, BUT using let that is not possible
[00:00:37] <ramblebamble> the only reason var is still around, so popular is because browsers didn't support let in the beginning
[00:01:24] <ljharb> that's not a good reason.
[00:01:29] <ramblebamble> and it is generally easier to for beginners to just chuck a variable into the environment using var without them having to consider a scary concept like scope
[00:01:36] <ljharb> if you can, use const. if you must, use let. only use var if you have no other choice.
[00:01:44] <ljharb> using "var" still requires you to understand scoping.
[00:01:53] <lara99> :O
[00:02:14] <ramblebamble> @ljharb, tell that to my boss wanting to support old a** browsers
[00:02:54] <ramblebamble> but you are right var requires you to understand scoping, but as a beginner you will not run into this issue as var is very broadly scoped so running into its boundaries is less likely
[00:02:57] <ljharb> ramblebamble: i'd be happy to. i maintain the airbnb javascript styleguide and am on TC39, the JS spec committee
[00:03:07] <ljharb> ramblebamble: and if you want to support old browsers - which you *absolutely should* - then use babel
[00:03:33] <ljharb> babel and bundlers and modules are how modern web dev has been done for more than half a decade. there's no excuse to still be authoring an application with `var` in 2022
[00:03:44] <ljharb> packages, that's different. applications? no.
[00:04:28] <ramblebamble> you are right.
[00:04:47] <ljharb> i know.
[00:04:51] *** Joins: dpuerto (~dpuerto@136-27-83-52.cab.webpass.net)
[00:05:04] <ljharb> but i'm dead serious, if your boss really disagrees with that stance i'll be happy to educate them.
[00:05:13] *** Joins: \mSg (mSg@user/msg/x-0285936)
[00:05:21] <ramblebamble> But it is good to once in a while be told isn't it
[00:05:49] <buu> ew, var
[00:09:17] *** Quits: dpuerto (~dpuerto@136-27-83-52.cab.webpass.net) (Ping timeout: 240 seconds)
[00:11:04] *** Quits: qeqeqw (~qeqeqw3@2001:861:3a04:e320:31ea:a59b:1c06:51f4) (Ping timeout: 250 seconds)
[00:14:10] *** Quits: panella32 (~panella32@164.215.205.64) (Quit: Textual IRC Client: www.textualapp.com)
[00:14:45] *** Joins: panella32 (~panella32@216.131.105.192)
[00:14:50] *** Parts: panella32 (~panella32@216.131.105.192) ()
[00:15:04] *** Quits: enoq (~enoq@2a05:1141:1f5:5600:b9c9:721a:599:bfe7) (Quit: enoq)
[00:22:09] *** Quits: RLa (~RLa@82.131.127.168.cable.starman.ee) (Quit: Client closed)
[00:22:14] <devslash> ljharb, did you get a chance to look at my package.json ?
[00:22:18] <ThePendulum> const can't override a referee
[00:23:25] <ljharb> devslash: your react adapter should be a dev dep, not a runtime dep. otherwise it should be fine
[00:23:39] *** Joins: oscurochu (~oscurochu@37.120.215.100)
[00:23:41] <ljharb> devslash: but i do see you're using CRA. CRA is barely good for a prototype; it's not actually good for a real application
[00:23:43] *** Quits: EdFletcher (~PKD@user/edfletcher) (Quit: Quit.)
[00:24:31] <devslash> why is that ?
[00:25:29] <ljharb> because it locks you into tons of config
[00:25:42] <ljharb> you have to eject to do anything useful, like use a good eslint config, or server render, or have a proper webpack build
[00:26:13] <devslash> so whats the better way to starts a new react app
[00:26:19] *** Joins: EdFletcher (~PKD@user/edfletcher)
[00:26:52] <devslash> I removed "enzyme-adapter-react-16": "^1.15.6", from dependencies and now it works. Thanks for that
[00:27:59] *** Joins: sickdyd (~sickd@120.51.82.69.ap.gmobb-fix.jp)
[00:28:29] *** Joins: gehn (~gehn@user/gehn)
[00:31:31] *** Quits: lara99 (~lara99@93-36-163-139.ip61.fastwebnet.it) (Quit: Client closed)
[00:31:39] <ljharb> fresh, from scratch
[00:32:35] <celphi> any recommendations for a calendar for front-end that works for all browsers? i need date and time
[00:32:39] *** Quits: sickdyd (~sickd@120.51.82.69.ap.gmobb-fix.jp) (Ping timeout: 256 seconds)
[00:32:45] <celphi> no jquery
[00:33:10] *** Quits: vysn (~vysn@user/vysn) (Ping timeout: 250 seconds)
[00:33:14] *** Joins: pavonia (~user@user/siracusa)
[00:33:38] <ThePendulum> <input type="date"><input type="time"> lol
[00:34:08] *** Quits: N4buc0 (~N4buc0@2804:7f4:348a:c4ae:f390:aec4:1ede:f0ea) (Remote host closed the connection)
[00:34:33] *** Quits: stenno (~stenno@user/stenno) (Ping timeout: 268 seconds)
[00:34:33] *** Joins: N4buc0 (~N4buc0@2804:7f4:348a:c4ae:f390:aec4:1ede:f0ea)
[00:34:46] <ljharb> celphi: npmjs.com/react-dates ?
[00:35:16] <celphi> that has time ljharb ?
[00:35:29] <ljharb> oh, no, nvm
[00:35:33] <celphi> need date and time @ThePendulum
[00:35:56] <ThePendulum> well I gave you both, just not particularly pretty
[00:36:23] <celphi> oh i just noticed- actuaolly that might work
[00:36:48] <ThePendulum> not sure if you also need to support IE
[00:39:08] <celphi> nah
[00:39:33] <celphi> but i may just use this- any already done css to make this look better?
[00:39:52] <ThePendulum> you can probably make the input box itself look better but not the calendar popup
[00:42:05] *** Quits: gde33 (~gde33@84-106-154-98.cable.dynamic.v4.ziggo.nl) (Quit: KVIrc 5.0.0 Aria http://www.kvirc.net/)
[00:46:32] *** Joins: dpuerto (~dpuerto@136-27-83-52.cab.webpass.net)
[00:47:13] *** Quits: paule32 (~paul@user/paule32) (Ping timeout: 256 seconds)
[00:51:12] *** Quits: renlo (~Renlo_Ren@pool-108-14-112-182.nycmny.east.verizon.net) (Ping timeout: 268 seconds)
[00:52:26] *** Quits: dpuerto (~dpuerto@136-27-83-52.cab.webpass.net) (Ping timeout: 268 seconds)
[00:52:37] *** Joins: stenno (~stenno@user/stenno)
[00:54:42] <celphi> https://jsfiddle.net/q7gejbmp/3/
[00:54:46] <celphi> best i could come up with
[00:54:58] <celphi> since the AM/PM wasnt very intuitive to me
[00:56:53] <celphi> or maybe https://jsfiddle.net/sh9z2jk0/
[00:57:29] *** Joins: funhouse (~funhouse@user/funhouse)
[00:59:18] <funhouse> I am receiving this string from the server, when I try to use JSON.parse() on it I get this error: VM7116:1 Uncaught SyntaxError: Unexpected token x in JSON at position 2
[00:59:36] <funhouse> [{x:50, y:-10}, {x:85, y:-52}]
[01:00:01] <Alexendoo> funhouse: JSON keys must be quoted, [{"x": 50 ...
[01:00:06] <funhouse> oh I guess no quotes is the issue
[01:00:15] <funhouse> Alexendoo thank you
[01:00:59] *** Quits: GreenResponse (~tomek@r-45-155-148-237.gpon.bialnet.pl) (Quit: Leaving)
[01:02:28] *** Quits: EdFletcher (~PKD@user/edfletcher) (Quit: Quit.)
[01:03:11] <ljharb> funhouse: never ever hand-write JSON
[01:03:24] <ljharb> funhouse: something on the server must be doing that.
[01:03:34] *** Quits: Hanii (~textual@2a00:23c5:c583:a300:c99f:61f1:4f83:5b59) (Quit: Textual IRC Client: www.textualapp.com)
[01:03:41] *** Joins: GreenResponse (~tomek@r-45-155-148-237.gpon.bialnet.pl)
[01:05:13] *** Joins: EdFletcher (~PKD@user/edfletcher)
[01:05:35] *** Joins: renlo (~Renlo_Ren@pool-108-14-112-182.nycmny.east.verizon.net)
[01:06:31] *** Quits: nomic (~nomic@185.192.69.41) (Quit: Leaving)
[01:08:32] *** Quits: pmercado (~pmercado@186.107.48.199) (Ping timeout: 240 seconds)
[01:14:01] *** Quits: kakashiA1 (~kakashi@37.85.18.55) (Ping timeout: 268 seconds)
[01:14:32] <ljharb> BinarySavior_: it wasn't. that was probably just a redirect from the wrong channel name. also, you need to auth with nickserv for non-ops to see what you say; see the last link in the topic.
[01:14:49] *** Quits: GreenResponse (~tomek@r-45-155-148-237.gpon.bialnet.pl) (Quit: Leaving)
[01:15:15] *** Joins: vdamewood (~vdamewood@fedora/vdamewood)
[01:15:28] *** Parts: BinarySavior_ (~BinarySav@josh.vet) ()
[01:17:37] *** Quits: funhouse (~funhouse@user/funhouse) (Quit: Client closed)
[01:20:40] *** Joins: summersault (~summersau@179.221.251.36)
[01:20:54] *** Quits: rewrit3 (~rewrit3@user/rewrit3) (Read error: Connection reset by peer)
[01:22:21] *** Joins: dpuerto (~dpuerto@136-27-83-52.cab.webpass.net)
[01:22:24] *** Quits: trafficjam (~qubes@2001:8004:5190:2c63:cb7b:4ecc:3aaa:58b5) (Read error: Connection reset by peer)
[01:22:33] *** Quits: summersault (~summersau@179.221.251.36) (Remote host closed the connection)
[01:22:45] *** Joins: BinarySavior (~BinarySav@idlerpg/player/BinarySavior)
[01:22:46] *** Joins: summersault (~summersau@179.221.251.36)
[01:22:47] <buu> ljharb: Can you add a check to the airbnb style guide that prevents people from disabling pasting on goddamn form fields
[01:24:44] *** Quits: summersault (~summersau@179.221.251.36) (Remote host closed the connection)
[01:25:20] <Slade> https://www.reddit.com/r/ProgrammerHumor/comments/s73mhz/i_was_asked_to_look_into_a_possible_data_breach/
[01:25:31] <ljharb> buu: no, but if "every single accessibility and UX guide on the internet" isn't enough, i don't see why the airbnb guide would help
[01:25:44] <buu> lol
[01:26:16] <buu> Slade: ahh php
[01:26:26] <buu> magic_quotes=true
[01:27:02] *** Quits: dpuerto (~dpuerto@136-27-83-52.cab.webpass.net) (Ping timeout: 240 seconds)
[01:29:01] *** Joins: Stinger (~Stinger@14-203-0-22.tpgi.com.au)
[01:29:42] *** Quits: ZeroWalker (~ZeroWalke@2001:9b1:28f8:8300:7164:4c68:eefc:f59d) (Quit: Leaving)
[01:30:03] *** Quits: renlo (~Renlo_Ren@pool-108-14-112-182.nycmny.east.verizon.net) (Ping timeout: 268 seconds)
[01:31:53] *** Joins: dpuerto (~dpuerto@136-27-83-52.cab.webpass.net)
[01:35:39] *** Quits: harpia (~harpia@2804:2aec:205:1400:be2a:c8d5:4566:5dc8) (Quit: harpia)
[01:36:41] <devslash> damn this course is having so many issues with things not working with the enzyme tests
[01:41:39] *** Quits: vdamewood (~vdamewood@fedora/vdamewood) (Quit: Life beckons)
[01:41:46] *** Quits: dpuerto (~dpuerto@136-27-83-52.cab.webpass.net) (Ping timeout: 268 seconds)
[01:43:06] <devslash> ljharb, I completed the section on snapshot testing. When I run yarn test, it shows all tests passed. When I do yarn test -- --coverage, I am getting multiple errors https://pastebin.com/tBJVCaze
[01:43:20] <ljharb> eesh, snapshot testing is terrible
[01:43:25] <devslash> why
[01:43:45] <ljharb> because it just encourages people to rubber-stamp snapshot diffs in code reviews, which doesn't actually catch anything
[01:44:06] <ljharb> tests should be explicit about what they're testing. a snapshot test is "i want to make sure that the output matches this PAGEOFTEXTTHATHASNOMEANING"
[01:44:27] <ljharb> it's only valuable when you're doing a pure refactor that's not supposed to change the output, and never any other time
[01:44:55] <devslash> in any case, my unit tests are passing but not code coverage
[01:45:44] <ljharb> you have jsx in a .js file, maybe that's the problem
[01:46:07] <ljharb> not sure tho, since i never use snapshots.
[01:46:11] <devslash> i dunno.. It works for the instructor but not for me
[01:52:03] *** Quits: neocron (~NeoCron@p200300c4cf1b4400f695d81d4d068b5c.dip0.t-ipconnect.de) (Quit: Leaving)
[01:54:39] *** Quits: gproto23 (~gproto23@user/gproto23) (Ping timeout: 256 seconds)
[01:55:19] <oscurochu> i started writing a "frontend" for my backend, and realized i was simultaneously doing integration testing in a language besides the program im testing.
[01:55:47] *** Quits: OnkelTem (~OnkelTem@user/onkeltem) (Quit: WeeChat 2.8)
[01:57:20] <oscurochu> im trying to figure out which information to send from the client to communicate with passportjs and its sessions
[01:58:32] *** Quits: `2jt (~jtomas@10.red-83-58-228.dynamicip.rima-tde.net) (Ping timeout: 240 seconds)
[02:02:34] *** Joins: renlo (~Renlo_Ren@pool-108-14-112-182.nycmny.east.verizon.net)
[02:03:02] <oscurochu> passport.serializeUser gets called but passport.deserializeUser never gets called. im not sure where to use these functions
[02:03:11] *** Quits: Danishman (~Danishman@2-104-144-110-cable.dk.customer.tdc.net) (Quit: Leaving)
[02:03:21] *** Quits: Camilo (~hugh@host-92-1-126-125.as13285.net) (Ping timeout: 268 seconds)
[02:04:49] *** Quits: mintograde (~mintograd@47.201.5.61) (Read error: Connection reset by peer)
[02:05:14] *** Joins: mintograde (~mintograd@47.201.5.61)
[02:07:40] *** Quits: renlo (~Renlo_Ren@pool-108-14-112-182.nycmny.east.verizon.net) (Ping timeout: 268 seconds)
[02:10:44] *** Quits: dmaislin (~dmaislin@047-233-046-055.res.spectrum.com) (Quit: My MacBook has gone to sleep. ZZZzzz…)
[02:11:22] *** Quits: CiaoSen (~Jura@p200300c95737a2002a3a4dfffe84dbd5.dip0.t-ipconnect.de) (Ping timeout: 268 seconds)
[02:12:31] *** Quits: Swahili (~Swahili@a95-94-208-187.cpe.netcabo.pt) (Quit: Leaving...)
[02:12:46] *** Joins: Swahili (~Swahili@a95-94-208-187.cpe.netcabo.pt)
[02:13:01] *** Joins: paule32 (~paul@nat-91-137-26-13.net.encoline.de)
[02:13:01] *** Quits: paule32 (~paul@nat-91-137-26-13.net.encoline.de) (Changing host)
[02:13:01] *** Joins: paule32 (~paul@user/paule32)
[02:14:05] *** Quits: perrierjouet (~perrier-j@modemcable012.251-130-66.mc.videotron.ca) (Quit: WeeChat 3.4)
[02:14:45] *** Joins: pluri (~pluri@user/pluri)
[02:14:56] *** Joins: perrierjouet (~perrier-j@modemcable012.251-130-66.mc.videotron.ca)
[02:18:08] *** Joins: trafficjam (~qubes@2001:8004:5190:2c63:64f1:80a6:2066:123a)
[02:18:27] *** Quits: paule32 (~paul@user/paule32) (Ping timeout: 256 seconds)
[02:19:08] *** Quits: N4buc0 (~N4buc0@2804:7f4:348a:c4ae:f390:aec4:1ede:f0ea) (Remote host closed the connection)
[02:19:32] *** Joins: N4buc0 (~N4buc0@2804:7f4:348a:c4ae:f390:aec4:1ede:f0ea)
[02:20:47] *** Quits: laslmtdbm^ (~laslmtdbm@wsip-98-188-242-61.mc.at.cox.net) (Remote host closed the connection)
[02:21:54] <celphi> is there a channel for vue?
[02:23:05] *** Joins: kakashiA1 (~kakashi@ip-037-201-198-009.um10.pools.vodafone-ip.de)
[02:24:41] <ThePendulum> #vuejs but it's pretty small
[02:26:03] <ThePendulum> their dishcord is probably more active unfortunately https://discord.gg/vue
[02:26:14] <ThePendulum> or a discord, not sure if it's official, but it's busy
[02:26:36] *** Joins: dodobrain (~dodobrain@user/dodobrain)
[02:28:37] *** Joins: wroathe (~wroathe@206-55-188-8.fttp.usinternet.com)
[02:28:37] *** Quits: wroathe (~wroathe@206-55-188-8.fttp.usinternet.com) (Changing host)
[02:28:37] *** Joins: wroathe (~wroathe@user/wroathe)
[02:33:02] *** Quits: pizdets_ (~pizdets@183.182.114.123) (Ping timeout: 240 seconds)
[02:33:43] *** Joins: pizdets (~pizdets@183.182.114.168)
[02:34:19] *** Quits: wroathe (~wroathe@user/wroathe) (Ping timeout: 256 seconds)
[02:34:57] *** Joins: harpia (~harpia@2804:2aec:205:1400:be2a:c8d5:4566:5dc8)
[02:35:00] *** Quits: AtomicLong (~primamate@p200300ee170add00343a959d46be5803.dip0.t-ipconnect.de) (Quit: WeeChat 3.3)
[02:37:16] *** Joins: ferdna (~ferdna@user/ferdna)
[02:39:16] *** Quits: Cyp (~cyp@213.237.88.120) (Ping timeout: 250 seconds)
[02:46:44] *** Joins: mikrosis (~mikrosis@dynamic-046-114-175-008.46.114.pool.telefonica.de)
[02:48:20] *** Quits: ramblebamble (ramblebamb@gateway/vpn/protonvpn/ramblebamble) (Quit: see you all next time)
[02:48:35] *** Joins: dpuerto (~dpuerto@136-27-83-52.cab.webpass.net)
[02:51:21] *** Quits: Axy (~Axy@user/axy) (Read error: Connection reset by peer)
[02:55:27] *** Joins: Axy (~Axy@user/axy)
[02:56:30] *** Joins: montybanksnyc (~montybank@108.50.135.21)
[02:56:55] *** Quits: maret (~maret@nat-88-212-37-89.antik.sk) (Quit: maret)
[02:56:56] *** Joins: Cyp (~cyp@213.237.88.120)
[02:57:02] *** Quits: dpuerto (~dpuerto@136-27-83-52.cab.webpass.net) (Ping timeout: 240 seconds)
[02:57:24] *** Joins: sickdyd (~sickd@120.51.82.69.ap.gmobb-fix.jp)
[02:58:17] *** Quits: Y4knotiS (~YaknotiS@cpc1-cmbg18-2-0-cust87.5-4.cable.virginm.net) (Ping timeout: 256 seconds)
[03:03:13] *** Quits: sickdyd (~sickd@120.51.82.69.ap.gmobb-fix.jp) (Ping timeout: 256 seconds)
[03:08:01] *** Joins: junebug (~junebug@2600:1700:3db0:2540:75dc:ce69:9171:fc8a)
[03:10:08] *** Quits: perrierjouet (~perrier-j@modemcable012.251-130-66.mc.videotron.ca) (Quit: WeeChat 3.4)
[03:13:45] *** Joins: ruzu (~ruzu@107-179-252-71.cpe.teksavvy.com)
[03:20:51] *** Quits: dodobrain (~dodobrain@user/dodobrain) (Remote host closed the connection)
[03:21:12] *** Joins: dodobrain (~dodobrain@user/dodobrain)
[03:21:51] *** Joins: kristijonas (~kristijon@78-56-32-39.static.zebra.lt)
[03:24:21] *** Quits: kakashiA1 (~kakashi@ip-037-201-198-009.um10.pools.vodafone-ip.de) (Ping timeout: 256 seconds)
[03:24:38] *** Quits: trevors (~trevors@user/trevors) (Quit: trevors)
[03:25:20] *** Joins: trevors (~trevors@user/trevors)
[03:26:02] *** Quits: Axy (~Axy@user/axy) (Ping timeout: 240 seconds)
[03:26:51] *** Joins: Axy (~Axy@user/axy)
[03:27:19] *** Joins: perrierjouet (~perrier-j@modemcable012.251-130-66.mc.videotron.ca)
[03:32:46] *** Quits: cotko (~cotko@188-230-251-153.dynamic.t-2.net) (Ping timeout: 268 seconds)
[03:32:47] *** Joins: Sven_vB (~sven@user/sven-vb/x-2094958)
[03:33:53] *** Joins: dpuerto (~dpuerto@136-27-83-52.cab.webpass.net)
[03:35:17] *** Quits: cisme_ (~cisme_@2600:1700:d980:1a40:f602:5394:36bb:e5f9) (Ping timeout: 240 seconds)
[03:35:21] *** Quits: harpia (~harpia@2804:2aec:205:1400:be2a:c8d5:4566:5dc8) (Quit: harpia)
[03:36:49] *** Joins: quazimodo (~quazimodo@n110-21-88-214.bla2.nsw.optusnet.com.au)
[03:36:49] *** Joins: cisme_ (~cisme_@108-218-190-101.lightspeed.frsnca.sbcglobal.net)
[03:37:12] *** Quits: perrierjouet (~perrier-j@modemcable012.251-130-66.mc.videotron.ca) (Quit: WeeChat 3.4)
[03:37:37] *** Quits: dpuerto (~dpuerto@136-27-83-52.cab.webpass.net) (Read error: Connection reset by peer)
[03:38:06] *** Quits: trafficjam (~qubes@2001:8004:5190:2c63:64f1:80a6:2066:123a) (Read error: Connection reset by peer)
[03:39:17] *** Joins: summersault (~summersau@179.221.251.36)
[03:39:47] *** Quits: Tobbi (~Tobbi@2a02:8108:1240:48ec:7907:7dad:41ed:706e) (Quit: My MacBook has gone to sleep. ZZZzzz…)
[03:40:56] *** Quits: qwedfg (~qwedfg@user/qwedfg) (Quit: ZNC - https://znc.in)
[03:41:02] *** Quits: cisme_ (~cisme_@108-218-190-101.lightspeed.frsnca.sbcglobal.net) (Ping timeout: 240 seconds)
[03:41:19] *** Joins: cisme_ (~cisme_@108-218-190-101.lightspeed.frsnca.sbcglobal.net)
[03:42:48] *** Joins: qwedfg (~qwedfg@user/qwedfg)
[03:43:13] *** Joins: chenqisu1 (~bhca7d@183.217.201.21)
[03:43:28] *** Joins: trafficjam (~qubes@2001:8004:5190:2c63:64f1:80a6:2066:123a)
[03:45:37] *** Quits: summersault (~summersau@179.221.251.36) (Remote host closed the connection)
[03:47:54] *** Joins: audiobirb (~audio@user/audio)
[03:47:55] *** Quits: kristijonas (~kristijon@78-56-32-39.static.zebra.lt) (Quit: Client closed)
[03:49:25] *** Joins: kristijonas (~kristijon@78-56-32-39.static.zebra.lt)
[03:50:25] *** Joins: vdamewood (~vdamewood@fedora/vdamewood)
[03:50:57] *** Quits: matsaman (~matsaman@user/matsaman) (Quit: leaving)
[03:51:06] *** Joins: sickdyd (~sickd@120.51.82.69.ap.gmobb-fix.jp)
[03:57:04] *** Quits: trafficjam (~qubes@2001:8004:5190:2c63:64f1:80a6:2066:123a) (Read error: Connection reset by peer)
[03:57:47] *** Quits: Gurkenglas (~Gurkengla@dslb-002-203-144-204.002.203.pools.vodafone-ip.de) (Ping timeout: 256 seconds)
[03:58:13] *** Joins: wroathe (~wroathe@206-55-188-8.fttp.usinternet.com)
[03:58:13] *** Quits: wroathe (~wroathe@206-55-188-8.fttp.usinternet.com) (Changing host)
[03:58:13] *** Joins: wroathe (~wroathe@user/wroathe)
[04:00:01] *** Joins: vinleod (~vdamewood@fedora/vdamewood)
[04:00:32] *** Quits: vdamewood (~vdamewood@fedora/vdamewood) (Ping timeout: 240 seconds)
[04:00:37] *** vinleod is now known as vdamewood
[04:02:48] *** Quits: montybanksnyc (~montybank@108.50.135.21) (Read error: Connection reset by peer)
[04:02:48] *** Joins: trafficjam (~qubes@2001:8004:5190:2c63:64f1:80a6:2066:123a)
[04:04:14] *** Joins: perrierjouet (~perrier-j@modemcable012.251-130-66.mc.videotron.ca)
[04:07:22] *** Joins: harpia (~harpia@2804:2aec:205:1400:be2a:c8d5:4566:5dc8)
[04:07:41] *** Quits: MonoL (~MonoL@user/MonoL) (Quit: Leaving)
[04:09:09] *** Quits: N4buc0 (~N4buc0@2804:7f4:348a:c4ae:f390:aec4:1ede:f0ea) (Ping timeout: 268 seconds)
[04:10:54] <oscurochu> so req.cookies is set, but passport is still not recognizing there is a session. im just so lost. im studying a working example i downloaded from github. i dont see any obvious discrepancies between my project and the working one. =/
[04:11:19] *** Quits: voltage_ (voltage@user/voltage) (Quit: Leaving)
[04:12:26] *** Joins: jazzy (~jaziz@user/jaziz)
[04:14:14] *** Joins: montybanksnyc (~montybank@108.50.135.21)
[04:14:55] *** Quits: harpia (~harpia@2804:2aec:205:1400:be2a:c8d5:4566:5dc8) (Quit: harpia)
[04:16:17] *** Quits: corgi (~corgi@user/corgi) (Ping timeout: 240 seconds)
[04:18:35] *** Quits: Axy (~Axy@user/axy) (Ping timeout: 256 seconds)
[04:19:25] *** Joins: Axy (~Axy@user/axy)
[04:34:04] *** Joins: harpia (~harpia@2804:2aec:205:1400:be2a:c8d5:4566:5dc8)
[04:34:11] *** Quits: harpia (~harpia@2804:2aec:205:1400:be2a:c8d5:4566:5dc8) (Read error: Connection reset by peer)
[04:34:48] *** Joins: harpia (~harpia@2804:2aec:205:1400:be2a:c8d5:4566:5dc8)
[04:36:05] *** Quits: trevors (~trevors@user/trevors) (Quit: trevors)
[04:36:18] *** Quits: trafficjam (~qubes@2001:8004:5190:2c63:64f1:80a6:2066:123a) (Read error: Connection reset by peer)
[04:42:10] *** Joins: trafficjam (~qubes@2001:8004:5190:2c63:64f1:80a6:2066:123a)
[04:42:40] *** Quits: whatsupdoc (uid509081@id-509081.hampstead.irccloud.com) (Quit: Connection closed for inactivity)
[04:54:18] *** Quits: DrowningElysium (uid190788@user/drowningelysium) (Quit: Connection closed for inactivity)
[04:58:39] *** Quits: Flannel (~flannel@cpe-76-175-193-181.socal.res.rr.com) (Changing host)
[04:58:39] *** Joins: Flannel (~flannel@user/flannel)
[04:59:08] *** Quits: LtHummus (~lthummus@97-126-121-3.tukw.qwest.net) (Quit: ZNC 1.8.2 - https://znc.in)
[05:02:11] *** Quits: pulse (~pulse@user/pulse) (Ping timeout: 268 seconds)
[05:05:37] *** Quits: ruzu (~ruzu@107-179-252-71.cpe.teksavvy.com) (Ping timeout: 256 seconds)
[05:06:50] *** Joins: LtHummus (~lthummus@97-126-121-3.tukw.qwest.net)
[05:07:04] *** Joins: nomic (~nomic@185.192.69.41)
[05:14:57] *** Quits: harpia (~harpia@2804:2aec:205:1400:be2a:c8d5:4566:5dc8) (Quit: harpia)
[05:20:49] *** Quits: dodobrain (~dodobrain@user/dodobrain) (Remote host closed the connection)
[05:21:18] *** Joins: dodobrain (~dodobrain@user/dodobrain)
[05:28:48] *** Quits: Harlin (~DonQixote@75-163-149-234.clsp.qwest.net) (Remote host closed the connection)
[05:29:09] *** Quits: ryzenda (~ryzenda@pool-74-109-246-70.pitbpa.fios.verizon.net) (Read error: Connection reset by peer)
[05:37:05] *** Quits: EdFletcher (~PKD@user/edfletcher) (Quit: Quit.)
[05:37:20] *** Quits: chenqisu1 (~bhca7d@183.217.201.21) (Ping timeout: 268 seconds)
[05:37:42] *** Joins: hrob (~hrob@31-209-221-88.dsl.dynamic.simnet.is)
[05:38:15] *** Joins: EdFletcher (~PKD@user/edfletcher)
[05:39:45] *** Joins: ryzenda (~ryzenda@pool-74-109-246-70.pitbpa.fios.verizon.net)
[05:45:39] *** Joins: vysn (~vysn@user/vysn)
[05:50:19] *** Joins: bkool (~bkool@c-73-8-91-229.hsd1.il.comcast.net)
[05:50:49] *** Quits: junebug (~junebug@2600:1700:3db0:2540:75dc:ce69:9171:fc8a) (Quit: Leaving)
[05:51:41] *** Joins: TonyStone (~TonyStone@2603-7080-8607-c36a-9841-fdb7-086b-ec04.res6.spectrum.com)
[05:53:49] *** Quits: kmh (~kmh@2a00:6020:5004:6800:2087:70fd:6ded:c415) (Quit: Leaving)
[05:56:46] *** Joins: leduyquang753 (~leduyquan@user/leduyquang753)
[05:56:52] *** Quits: stenno (~stenno@user/stenno) (Ping timeout: 250 seconds)
[05:57:37] *** Joins: matsaman (~matsaman@user/matsaman)
[06:03:10] *** Quits: trafficjam (~qubes@2001:8004:5190:2c63:64f1:80a6:2066:123a) (Read error: Connection reset by peer)
[06:04:55] *** Quits: z8z (~x@ac255238.ppp.asahi-net.or.jp) (Remote host closed the connection)
[06:07:17] *** Joins: trevors (~trevors@user/trevors)
[06:08:30] *** Joins: trafficjam (~qubes@2001:8004:5190:2c63:64f1:80a6:2066:123a)
[06:12:02] *** Quits: Stinger (~Stinger@14-203-0-22.tpgi.com.au) (Ping timeout: 240 seconds)
[06:12:28] *** Joins: stenno (~stenno@user/stenno)
[06:15:11] *** Joins: yagamilito (~yagamilit@2601:642:4600:34b0:21ac:ef2d:dcaf:666c)
[06:19:47] *** Joins: Stinger (~Stinger@14-203-0-22.tpgi.com.au)
[06:20:04] *** Joins: Rockwood (~Rocky@user/rocky)
[06:20:08] *** Quits: gehn (~gehn@user/gehn) (Quit: Leaving)
[06:20:23] *** Joins: jackson99 (~bc8147f2@cerf.good1.com)
[06:24:16] *** Joins: akurilin_ (uid322841@id-322841.ilkley.irccloud.com)
[06:24:22] *** Quits: Swahili (~Swahili@a95-94-208-187.cpe.netcabo.pt) (Remote host closed the connection)
[06:24:54] *** Joins: Swahili (~Swahili@a95-94-208-187.cpe.netcabo.pt)
[06:27:54] *** Quits: stagas (~stagas@2a02:587:c43a:e9ef:6cad:fa01:8c69:44f) (Ping timeout: 268 seconds)
[06:53:26] *** Joins: gde33 (~gde33@84-106-154-98.cable.dynamic.v4.ziggo.nl)
[06:53:55] <gde33> I thought I'd use some() like a pro but then this happened?? https://jsfiddle.net/gaby_de_wilde/m17fwz6r/
[06:55:26] <gde33> safe to say, I don't get it
[06:57:52] *** Quits: trafficjam (~qubes@2001:8004:5190:2c63:64f1:80a6:2066:123a) (Read error: Connection reset by peer)
[06:59:34] *** Quits: michigan (uid507982@id-507982.ilkley.irccloud.com) (Quit: Connection closed for inactivity)
[06:59:40] <gde33> https://jsfiddle.net/gaby_de_wilde/m17fwz6r/1/
[06:59:41] <systemfault> You don't get what?
[06:59:58] <gde33> that group.items is undefined
[07:00:20] <systemfault> .some wants you to return a boolean
[07:00:29] <systemfault> (in the callback)
[07:00:38] <systemfault> You're not returning at line 29...
[07:00:51] <systemfault> Then at line 31, you're using item.naam instead of item.name
[07:01:04] <gde33> omg
[07:01:06] <systemfault> Do you understand what .some does?
[07:02:24] <gde33> systemfault: it presents one with the array elements to run thy test against
[07:02:26] <gde33> https://jsfiddle.net/gaby_de_wilde/m17fwz6r/2/
[07:02:41] <gde33> here, the test case without the [embarresing] typoes
[07:03:01] <oscurochu> i've been stuck on this passport stuff for a 2 days now.... it just refuses to work in my project but works just fine elsewhere.
[07:03:27] <gde33> oscurochu: eh :/
[07:03:29] <oscurochu> i dont even know where to begin anymore
[07:03:45] <gde33> oscurochu: "this" is undefined
[07:03:51] *** Joins: trafficjam (~qubes@2001:8004:5190:2c63:64f1:80a6:2066:123a)
[07:04:59] *** Joins: cismee (~cisme_@2600:1700:d980:1a40:182a:4ef3:47e9:95ff)
[07:05:45] <gde33> systemfault: https://jsfiddle.net/gaby_de_wilde/m17fwz6r/3/
[07:06:15] <gde33> oscurochu: what passport stuff?
[07:06:30] <oscurochu> passportjs
[07:07:31] <gde33> Passport can be unobtrusively dropped in to any Express-based web application
[07:07:32] *** Quits: cisme_ (~cisme_@108-218-190-101.lightspeed.frsnca.sbcglobal.net) (Ping timeout: 240 seconds)
[07:07:33] *** Joins: z8z (~x@ac255238.ppp.asahi-net.or.jp)
[07:07:56] <gde33> oscurochu: they want you to drop it?
[07:08:57] <oscurochu> i've never had so much trouble getting sessions stuff to work, until i met passport, the solution that is suppose to make our lives "easier"
[07:08:59] <gde33> they say it is encapsulatored therefore extreamly easy to integrate
[07:09:35] <systemfault> gde33: https://jsfiddle.net/gvks054a/ ?
[07:09:39] <gde33> oscurochu: did you get any of it to work?
[07:10:03] *** Quits: yagamilito (~yagamilit@2601:642:4600:34b0:21ac:ef2d:dcaf:666c) (Quit: Client closed)
[07:10:05] *** Parts: zzz (~z@user/zero) ()
[07:10:07] <oscurochu> i downloaded a git project, installed it. it works fine. i tweaked the examle. it works fine.
[07:10:32] <oscurochu> version numbers are similar between packages.
[07:10:53] <gde33> systemfault: god what an idiot
[07:11:12] <gde33> pffft
[07:11:51] <gde33> oscurochu: but in your project it does nothing?
[07:12:27] *** Quits: z8z (~x@ac255238.ppp.asahi-net.or.jp) (Quit: Quitting)
[07:12:41] <oscurochu> it does all the stuff its suppose to for the login, but then passport acts like the session isnt there even though there is a cookie
[07:13:30] <oscurochu> im just so freaking lost... this shouldnt be hard.
[07:13:58] *** Quits: Slade (~user@user/slade) (Quit: Bye)
[07:14:01] <oscurochu> req.user never gets set, req.session has a different cookie than req.cookies.
[07:14:26] <oscurochu> the session gets stored in the database just fine
[07:14:30] *** Quits: bkool (~bkool@c-73-8-91-229.hsd1.il.comcast.net) (Quit: Leaving)
[07:14:54] <oscurochu> i had 300 rows in my session table because its just not reading the sessions, only storing them
[07:15:45] *** Joins: Slade (~user@user/slade)
[07:16:04] <systemfault> Took you 5 days to get Jest running... why don't you take a week to learn JS properly and then try again?
[07:16:48] *** Quits: hrob (~hrob@31-209-221-88.dsl.dynamic.simnet.is) (Quit: Client closed)
[07:17:47] <gde33> strategies
[07:18:20] <systemfault> IIRC, you need to pick the the "local" strategy for normal username/password schemes
[07:18:30] <systemfault> But it's been a while since I've used it
[07:19:14] <systemfault> What makes passport powerful is that it supports a lot of different auth strategies
[07:19:38] <gde33> the full shit storm
[07:20:45] *** Quits: dodobrain (~dodobrain@user/dodobrain) (Remote host closed the connection)
[07:21:23] *** Joins: dodobrain (~dodobrain@user/dodobrain)
[07:25:02] *** Quits: macswagger (~cee@cpe-104-34-48-156.socal.res.rr.com) (Ping timeout: 240 seconds)
[07:26:00] *** Joins: macswagger (~cee@cpe-104-34-48-156.socal.res.rr.com)
[07:31:39] *** Joins: dave0 (~davezero@069.d.003.ncl.iprimus.net.au)
[07:32:35] *** Joins: dpuerto (~dpuerto@136-27-83-52.cab.webpass.net)
[07:35:55] <Rockwood> bye cya
[07:36:02] *** Quits: Rockwood (~Rocky@user/rocky) (Quit: The Time is Over)
[07:37:35] *** Quits: dpuerto (~dpuerto@136-27-83-52.cab.webpass.net) (Ping timeout: 268 seconds)
[07:41:19] *** Joins: stagas (~stagas@2a02:587:c43a:e9ef:35df:207:dfd:a579)
[07:41:44] *** Quits: audiobirb (~audio@user/audio) (Ping timeout: 250 seconds)
[07:41:53] *** Joins: Tobbi (~Tobbi@2a02:8108:1240:48ec:c931:b07d:80ed:31cb)
[07:46:50] *** Quits: Tobbi (~Tobbi@2a02:8108:1240:48ec:c931:b07d:80ed:31cb) (Ping timeout: 268 seconds)
[07:48:48] *** Joins: z8z (~x@ac255238.ppp.asahi-net.or.jp)
[08:03:46] *** Quits: zebrag (~chris@user/zebrag) (Quit: Konversation terminated!)
[08:05:20] *** Quits: ezzieyguywuf (~Unknown@user/ezzieyguywuf) (Ping timeout: 268 seconds)
[08:06:54] *** Joins: ezzieyguywuf (~Unknown@user/ezzieyguywuf)
[08:14:44] *** Joins: qeqeqw (~qeqeqw3@2001:861:3a04:e320:31ea:a59b:1c06:51f4)
[08:15:17] *** Joins: queue (~nerd@rektnet.com)
[08:21:32] *** Quits: pavonia (~user@user/siracusa) (Ping timeout: 240 seconds)
[08:24:47] *** Quits: trafficjam (~qubes@2001:8004:5190:2c63:64f1:80a6:2066:123a) (Read error: Connection reset by peer)
[08:29:30] *** Joins: pavonia (~user@user/siracusa)
[08:30:13] *** Joins: trafficjam (~qubes@2001:8004:5190:2c63:64f1:80a6:2066:123a)
[08:30:19] *** Quits: montybanksnyc (~montybank@108.50.135.21) (Read error: Connection reset by peer)
[08:32:14] *** Quits: ferdna (~ferdna@user/ferdna) (Quit: Leaving)
[08:33:07] <oscurochu> systemfault i'd rather take 5 days to learn jest than to not learn it at all.
[08:33:08] *** Joins: dpuerto (~dpuerto@136-27-83-52.cab.webpass.net)
[08:33:32] <systemfault> But if you had known JS, it would have taken you 1-2 days max...
[08:33:34] <oscurochu> i haven't narrowed down what i did wrong yet, but i did get passport working
[08:33:37] <systemfault> And a few hours for passport.
[08:33:50] <systemfault> Great, congratulations
[08:34:26] <oscurochu> i know js plenty, it doesnt mean im not still a human that makes mistakes.
[08:35:50] <systemfault> What are you going to do when you will actually have something complicated to do?
[08:35:51] <oscurochu> i didnt consume an entire 2 days learning passport, or 5 days learning jest... thats a bit of an exaggeration, considering the things i also got done that go unseen
[08:36:01] <systemfault> Ah, wonderful then :)
[08:36:03] <systemfault> Keep it up!
[08:37:11] *** Quits: src (~src@user/src) (Quit: Leaving)
[08:38:56] *** Quits: dpuerto (~dpuerto@136-27-83-52.cab.webpass.net) (Ping timeout: 250 seconds)
[08:39:52] *** Quits: macswagger (~cee@cpe-104-34-48-156.socal.res.rr.com) (Ping timeout: 268 seconds)
[08:40:19] <oscurochu> my code was just refactored in a different way than the examples, so tracking down minor differences required me comparing like 5 different files. and there is more than one way to use passport.authenticate(), and more than one way to implement strategies. you can pass redirects, and there is also a callback option. the callback option is the method i was trying to employ, and i finally tried it with redirects and it works
[08:43:13] *** Joins: macswagger (~cee@cpe-104-34-48-156.socal.res.rr.com)
[08:45:16] *** Joins: thojanssens (~thojansse@49.230.96.140)
[08:46:10] *** Quits: trafficjam (~qubes@2001:8004:5190:2c63:64f1:80a6:2066:123a) (Read error: Connection reset by peer)
[08:48:02] *** Quits: macswagger (~cee@cpe-104-34-48-156.socal.res.rr.com) (Ping timeout: 240 seconds)
[08:51:32] *** Joins: trafficjam (~qubes@2001:8004:5190:2c63:64f1:80a6:2066:123a)
[08:51:49] *** Joins: mexen (uid495612@user/mexen)
[08:53:01] *** Quits: jackson99 (~bc8147f2@cerf.good1.com) (Quit: quit)
[08:53:25] *** Quits: xsperry (~xs@user/xsperry) ()
[08:58:36] <oscurochu> you guys are really gonna think im an idiot. req.logout() doesn't work either.
[09:02:32] *** Quits: trafficjam (~qubes@2001:8004:5190:2c63:64f1:80a6:2066:123a) (Read error: Connection reset by peer)
[09:06:42] *** Joins: xsperry (~xs@user/xsperry)
[09:08:51] *** Joins: trafficjam (~qubes@2001:8004:5190:2c63:64f1:80a6:2066:123a)
[09:09:36] *** Quits: nomic (~nomic@185.192.69.41) (Quit: Leaving)
[09:11:12] *** Joins: macswagger (~cee@cpe-104-34-48-156.socal.res.rr.com)
[09:15:20] *** Joins: han-solo (~hanish@user/han-solo)
[09:16:39] *** Quits: trafficjam (~qubes@2001:8004:5190:2c63:64f1:80a6:2066:123a) (Read error: Connection reset by peer)
[09:17:54] *** Joins: maret (~maret@nat-88-212-37-89.antik.sk)
[09:17:57] *** Quits: macswagger (~cee@cpe-104-34-48-156.socal.res.rr.com) (Ping timeout: 256 seconds)
[09:18:44] *** Joins: macswagger (~cee@cpe-104-34-48-156.socal.res.rr.com)
[09:20:56] *** Quits: dodobrain (~dodobrain@user/dodobrain) (Remote host closed the connection)
[09:21:30] *** Joins: dodobrain (~dodobrain@user/dodobrain)
[09:22:18] *** Joins: trafficjam (~qubes@2001:8004:5190:2c63:64f1:80a6:2066:123a)
[09:23:08] *** Quits: thojanssens (~thojansse@49.230.96.140) (Ping timeout: 250 seconds)
[09:24:57] *** Joins: thojanssens (~thojansse@49.230.96.140)
[09:25:18] *** Quits: qeqeqw (~qeqeqw3@2001:861:3a04:e320:31ea:a59b:1c06:51f4) (Ping timeout: 250 seconds)
[09:25:30] *** Quits: macswagger (~cee@cpe-104-34-48-156.socal.res.rr.com) (Ping timeout: 268 seconds)
[09:30:59] *** Quits: The_Blode (~Blode@user/the-blode/x-7164444) (Ping timeout: 256 seconds)
[09:33:28] *** Quits: EdFletcher (~PKD@user/edfletcher) (Quit: Quit.)
[09:35:42] *** Joins: EdFletcher (~PKD@user/edfletcher)
[09:35:53] *** Joins: mintoyatsu (~mint@ip24-255-4-17.tc.ph.cox.net)
[09:40:32] *** Joins: The_Blode (~Blode@user/the-blode/x-7164444)
[09:44:37] *** Quits: wroathe (~wroathe@user/wroathe) (Ping timeout: 268 seconds)
[09:46:33] *** Joins: nomad1 (~nomad@user/spacenomad)
[09:47:16] *** Quits: trafficjam (~qubes@2001:8004:5190:2c63:64f1:80a6:2066:123a) (Read error: Connection reset by peer)
[09:50:26] *** Quits: brentaarnold (~brentaarn@24.112.58.14) (Ping timeout: 250 seconds)
[09:50:32] *** Quits: nomad1 (~nomad@user/spacenomad) (Ping timeout: 240 seconds)
[09:51:48] *** Quits: dodobrain (~dodobrain@user/dodobrain) (Ping timeout: 260 seconds)
[09:52:03] *** Joins: wroathe (~wroathe@206-55-188-8.fttp.usinternet.com)
[09:52:03] *** Quits: wroathe (~wroathe@206-55-188-8.fttp.usinternet.com) (Changing host)
[09:52:03] *** Joins: wroathe (~wroathe@user/wroathe)
[09:52:41] *** Joins: trafficjam (~qubes@2001:8004:5190:2c63:64f1:80a6:2066:123a)
[09:54:42] *** Joins: macswagger (~cee@cpe-104-34-48-156.socal.res.rr.com)
[09:56:32] *** Quits: wroathe (~wroathe@user/wroathe) (Ping timeout: 240 seconds)
[10:00:02] *** Quits: macswagger (~cee@cpe-104-34-48-156.socal.res.rr.com) (Ping timeout: 268 seconds)
[10:00:19] *** Joins: brentaarnold (~brentaarn@24.112.58.14)
[10:00:41] *** Quits: EdFletcher (~PKD@user/edfletcher) (Quit: Quit.)
[10:04:15] *** Quits: pluri (~pluri@user/pluri) (Quit: My MacBook has gone to sleep. ZZZzzz…)
[10:05:16] *** Joins: EdFletcher (~PKD@user/edfletcher)
[10:06:17] *** Joins: dodobrain (~dodobrain@user/dodobrain)
[10:11:23] *** Quits: trevors (~trevors@user/trevors) (Quit: trevors)
[10:15:36] *** Joins: macswagger (~cee@cpe-104-34-48-156.socal.res.rr.com)
[10:15:36] *** Joins: rev1nchn (~rev1nchn@gateway/vpn/pia/rev1nchn)
[10:21:00] *** Quits: macswagger (~cee@cpe-104-34-48-156.socal.res.rr.com) (Ping timeout: 268 seconds)
[10:24:28] *** Quits: dodobrain (~dodobrain@user/dodobrain) (Ping timeout: 260 seconds)
[10:25:43] <bobdobbs> I've got a question about this block of code. It's from the React tutorial... http://pastie.org/p/5ULSMqS9JCX54hhfTRkiUl
[10:25:50] <bobdobbs> What is happening on line 4?
[10:26:06] <bobdobbs> what is 'super(props)' doing?
[10:29:02] *** Quits: Stinger (~Stinger@14-203-0-22.tpgi.com.au) (Ping timeout: 240 seconds)
[10:29:57] <matsaman> https://overreacted.io/why-do-we-write-super-props/
[10:30:14] <bobdobbs> heh. I'm reading that now :)
[10:36:43] <oscurochu> so the only thing i can find about passport/express not letting me log out is to try calling req.logout(); req.session.destroy(); delete req.user; and none of these work. req.isAuthenticated() returns false immediately after calling req.logout(), but on the next request, req.isAuthenticated() returns true again.
[10:38:12] <oscurochu> in my "minimally working example" i've gotten from github, req.logout() works fine, although  there were times i had to login twice or logout twice before it would work (this is in the example project). so i really hate passport right now.
[10:39:08] <oscurochu> my sessions arent being removed from the db either.
[10:40:47] *** Joins: dodobrain (~dodobrain@user/dodobrain)
[10:41:47] <oscurochu> omg nvm, this should have been trivial, and had nothing to do with passport or express. i was calling the logout request on localhost, and all the other requests were from the domain. stupid me
[10:48:01] *** Joins: undefined_bob (~undefined@user/undefined-bob/x-5411918)
[10:49:40] *** Quits: dodobrain (~dodobrain@user/dodobrain) (Ping timeout: 260 seconds)
[10:50:02] *** Joins: chenqisu1 (~bhca7d@183.217.201.21)
[10:50:32] *** Joins: macswagger (~cee@cpe-104-34-48-156.socal.res.rr.com)
[10:53:10] <oscurochu> this is probably the most embarrasing thing i've done yet. rofl
[10:55:49] *** Quits: macswagger (~cee@cpe-104-34-48-156.socal.res.rr.com) (Ping timeout: 256 seconds)
[10:58:37] *** Quits: sudomannn (~sudomann@2601:543:100:4fc8:896f:9146:a340:c12d) (Ping timeout: 240 seconds)
[10:58:47] *** Joins: sudomannn (~sudomann@2601:543:100:4fc8:4013:3b0f:7a2e:ec43)
[11:07:21] *** Joins: falafel (~falafel@2603-8000-d800-688c-7d7e-a81e-32e3-0736.res6.spectrum.com)
[11:14:30] *** Quits: matsaman (~matsaman@user/matsaman) (Quit: leaving)
[11:19:11] *** Joins: fef (~thedawn@user/thedawn)
[11:19:36] *** Joins: jazzy2 (~jaziz@user/jaziz)
[11:22:03] <gde33> oscurochu: you will get to make more stupid mistakes as you age :P
[11:23:34] <gde33> oscurochu: I tried coding after drinking 2 bottles of vodka one time as an experiment. It was very interesting. I had reduced my bug to a single character but still couldn't see what was wrong. Turned out ending a line with ":" in stead of ";" makes things not work.
[11:23:36] *** Quits: jazzy (~jaziz@user/jaziz) (Ping timeout: 250 seconds)
[11:24:02] *** Joins: macswagger (~cee@cpe-104-34-48-156.socal.res.rr.com)
[11:24:50] <gde33> systemfault: remove the last element from an array of strings if it is 1 2 3 4 or 5?
[11:25:04] *** Parts: pagios- (~pagios@life.is-a.beauty) ()
[11:25:17] *** Joins: jazzy (~jaziz@user/jaziz)
[11:25:29] <gde33> should one really switch(arr[arr.length-1]) etc :P
[11:25:48] <gde33> it seems so herretical
[11:26:23] <systemfault> On newer JS interpreters, you can use Array#at  + if + (pop or slice)
[11:27:22] <gde33> ah yes, slice(-1) seems the right solution
[11:27:30] *** Quits: jazzy2 (~jaziz@user/jaziz) (Ping timeout: 250 seconds)
[11:27:34] <systemfault> n> let a = [1,2,3,4,5]; if (a.at(-1) === 5) { a = a.slice(0, -1)  } a
[11:27:38] <jellobot> (okay) [ 1, 2, 3, 4 ]
[11:27:56] *** Quits: vysn (~vysn@user/vysn) (Ping timeout: 250 seconds)
[11:28:00] <systemfault> A mutable version would use .pop() instead
[11:28:20] <gde33> it shouldn't be removed if not one of those numbers
[11:28:40] <Cork> to not limit to new interpreters one could just do a[a.length - 1]
[11:28:52] <Cork> so at isn't really needed either
[11:29:10] <gde33> I would normally do that, even failthough switch seems reasonable :P
[11:29:40] <gde33> I'm not really keeping up with the joneses but do feel i should check their lawn periodically :P
[11:30:03] *** Quits: csmiga (~Thunderbi@ec2-52-207-160-196.compute-1.amazonaws.com) (Remote host closed the connection)
[11:30:04] *** Quits: macswagger (~cee@cpe-104-34-48-156.socal.res.rr.com) (Ping timeout: 268 seconds)
[11:34:37] *** Quits: falafel (~falafel@2603-8000-d800-688c-7d7e-a81e-32e3-0736.res6.spectrum.com) (Ping timeout: 240 seconds)
[11:35:03] *** Joins: interop_madness (~interop_m@user/interop-madness/x-0950004)
[11:35:08] <rick123> Ahoy
[11:35:37] *** Quits: stenno (~stenno@user/stenno) (Ping timeout: 268 seconds)
[11:38:42] <gde33> arr.splice(-1,arr.slice(-1)<6?1:0)
[11:39:05] <gde33> splice can also remove and add 0 elements
[11:39:12] <gde33> :P
[11:40:25] <gde33> everything looks ugly today
[11:40:57] <gde33> at() is nicer than it seemed at first
[11:41:25] <rick123> at++
[11:41:43] <gde33> rick123: howdy sailor
[11:42:26] <rick123> Gotta learn some Redux today, not feeling it :P
[11:42:44] <gde33> I never got around to that, good luck
[11:44:33] <gde33> ill just wait until it happens again :P
[12:00:00] *** Joins: falafel (~falafel@2603-8000-d800-688c-7d7e-a81e-32e3-0736.res6.spectrum.com)
[12:00:44] *** Joins: macswagger (~cee@cpe-104-34-48-156.socal.res.rr.com)
[12:00:45] *** Quits: hassoon (hassoon@user/hassoon) (Quit: Lost terminal)
[12:02:46] <systemfault> Redux at its core is simply: allActionsThatHaveOccured.reduce(function myReducer(state, action) { return state }, initialState)
[12:03:00] <systemfault> If course, it ends up being more complicated... but...
[12:03:39] *** Joins: iomari891 (~iomari891@197.210.70.166)
[12:04:20] *** Quits: falafel (~falafel@2603-8000-d800-688c-7d7e-a81e-32e3-0736.res6.spectrum.com) (Ping timeout: 250 seconds)
[12:04:50] *** Joins: Camilo (~hugh@host-92-1-126-125.as13285.net)
[12:05:38] *** Quits: macswagger (~cee@cpe-104-34-48-156.socal.res.rr.com) (Ping timeout: 250 seconds)
[12:06:27] *** Quits: thojanssens (~thojansse@49.230.96.140) (Ping timeout: 268 seconds)
[12:07:58] *** Joins: stenno (~stenno@user/stenno)
[12:09:13] *** Joins: thojanssens (~thojansse@49.230.96.140)
[12:12:32] *** Quits: stenno (~stenno@user/stenno) (Ping timeout: 240 seconds)
[12:15:00] *** Joins: kmh (~kmh@2a00:6020:5004:6800:1743:f411:8593:8ada)
[12:20:46] *** Joins: stenno (~stenno@user/stenno)
[12:25:27] *** Joins: DnzAtWrk (~DnzAtWrk@mobile-access-56734f-193.dhcp.inet.fi)
[12:32:21] *** Quits: stenno (~stenno@user/stenno) (Ping timeout: 268 seconds)
[12:32:26] *** Joins: N4buc0 (~N4buc0@2804:7f4:348a:c4ae:fc6b:8b6c:d6d3:ec85)
[12:35:37] *** Joins: Akimb (~Akimb@82-135-197-171.static.zebra.lt)
[12:39:04] *** Joins: DevAntoine (~DevAntoin@2a01:e34:ec18:50c0:5c5b:f4e6:6fc3:e08e)
[12:44:58] *** Joins: Codaraxis (~Codaraxis@user/codaraxis)
[12:48:57] *** Joins: macswagger (~cee@cpe-104-34-48-156.socal.res.rr.com)
[12:49:10] *** Joins: sam_1 (~sam_1@c-xd520f2a9.cust.hiper.dk)
[12:50:54] *** Joins: fweht (uid404746@id-404746.lymington.irccloud.com)
[12:54:15] *** Quits: macswagger (~cee@cpe-104-34-48-156.socal.res.rr.com) (Ping timeout: 256 seconds)
[12:58:45] *** Joins: Lope (~lope@user/lope)
[12:59:01] <Lope> is there some way to rename a key in a javascript object?
[12:59:13] <Lope> All the solutions I've seen involve adding a new key and deleting the old one.
[12:59:44] <Lope> Which is a brute force method. I'm wondering if there's a way to rename a key?
[13:02:18] <oscurochu> you could copy all the keys except the one you want into a new object, then add the new key.
[13:02:34] *** Quits: Akiva (~Akiva@user/Akiva) (Ping timeout: 268 seconds)
[13:03:09] <oscurochu> which is probably worse than the other solution you proposed
[13:04:04] *** Joins: stenno (~stenno@user/stenno)
[13:04:04] <leduyquang753> "Rename a key" is not how JS works.
[13:04:51] <leduyquang753> Given everything is either primitive or pointer, assigning a new key then deleting the old one isn't an expensive operation.
[13:05:18] *** Joins: Gurkenglas (~Gurkengla@dslb-002-203-144-204.002.203.pools.vodafone-ip.de)
[13:06:11] <oscurochu> how do you 'delete' a key? the only way i know of is { badKey, ...goodKeys } = keys
[13:06:27] <leduyquang753> `delete obj.prop;`.
[13:07:06] <oscurochu> that mutates the original, correct?
[13:07:28] <oscurochu> is there an immutable way?
[13:07:32] *** Quits: shokohsc (~shokohsc@lfbn-idf2-1-1472-129.w92-169.abo.wanadoo.fr) (Ping timeout: 240 seconds)
[13:08:18] *** Joins: shokohsc (~shokohsc@lfbn-idf2-1-1472-129.w92-169.abo.wanadoo.fr)
[13:09:21] *** Quits: stenno (~stenno@user/stenno) (Ping timeout: 268 seconds)
[13:10:28] <sheetjs> delete mutates the object
[13:10:30] <EdFletcher> “Deleting immutability” doesn’t make sense. Deletion is a form of mutation.
[13:10:58] <sheetjs> you can make it an immutable operation by copying and deleting from the copy
[13:11:26] <sheetjs> but the destructuring approach is definitely the modern way to do it
[13:12:24] <Decker> does map=new Map(); map.delete( "prop" ); mutate?
[13:13:32] *** Quits: sickdyd (~sickd@120.51.82.69.ap.gmobb-fix.jp) (Ping timeout: 240 seconds)
[13:13:39] <sheetjs> depends on what you mean by mutate
[13:14:48] *** Joins: `2jt (~jtomas@10.red-83-58-228.dynamicip.rima-tde.net)
[13:14:49] <EdFletcher> I’d consider it mutation (from the consumer’s perspective) even if the actual implementation does not (by using COW or something internally)
[13:15:18] <Decker> new Map() ~~ {}
[13:15:24] <sheetjs> for example
[13:15:36] <sheetjs> n> var x = { a:3, b:4 }; delete x.c; x
[13:15:37] <jellobot> (okay) { a: 3, b: 4 }
[13:15:46] <sheetjs> technically that delete operation did not change the object
[13:15:50] *** Joins: monoxane6 (~monoxane@user/monoxane)
[13:16:04] <Decker> well; it would be assumed said key would be there.
[13:16:52] <sheetjs> EdFletcher: i disagree, especially in JS
[13:17:07] <sheetjs> n> var x = {a: 1, b:2}; var y = x; delete y.a; x
[13:17:08] <jellobot> (okay) { b: 2 }
[13:17:29] *** Quits: monoxane (~monoxane@user/monoxane) (Ping timeout: 256 seconds)
[13:17:30] *** monoxane6 is now known as monoxane
[13:17:42] <sheetjs> from the consumer perspective, i'd say its a mutation if the change affects other references to the original object
[13:17:58] <sheetjs> n> var x = {a: 1, b:2}; var y = {...x}; delete y.a; x
[13:17:59] <jellobot> (okay) { a: 1, b: 2 }
[13:18:06] *** Joins: pluri (~pluri@user/pluri)
[13:18:53] *** Joins: macswagger (~cee@cpe-104-34-48-156.socal.res.rr.com)
[13:19:42] *** Joins: Y4knotiS (~YaknotiS@cpc1-cmbg18-2-0-cust87.5-4.cable.virginm.net)
[13:24:30] *** Quits: macswagger (~cee@cpe-104-34-48-156.socal.res.rr.com) (Ping timeout: 250 seconds)
[13:27:59] *** Joins: RLa (~RLa@82.131.127.168.cable.starman.ee)
[13:29:00] *** Joins: pluri_ (~pluri@user/pluri)
[13:29:42] *** Quits: mikrosis (~mikrosis@dynamic-046-114-175-008.46.114.pool.telefonica.de) (Ping timeout: 268 seconds)
[13:30:08] *** Quits: pluri (~pluri@user/pluri) (Ping timeout: 256 seconds)
[13:34:46] *** Quits: DnzAtWrk (~DnzAtWrk@mobile-access-56734f-193.dhcp.inet.fi) (Read error: Connection reset by peer)
[13:36:02] *** Quits: mat001 (~mat001@c-69-181-155-247.hsd1.ca.comcast.net) ()
[13:38:02] *** Quits: quazimodo (~quazimodo@n110-21-88-214.bla2.nsw.optusnet.com.au) (Ping timeout: 240 seconds)
[13:40:32] *** Joins: TomyWork (~TomyLobo@p200300e80f006700f55970884699e0c8.dip0.t-ipconnect.de)
[13:40:39] <TomyWork> hi
[13:42:10] <TomyWork> is it possible to modify request responses arbitrarily with just the chrome devtools, without knowledge or modification of the website's javascript?
[13:42:46] *** Joins: nomic (~nomic@185.192.69.41)
[13:42:48] *** Quits: mintoyatsu (~mint@ip24-255-4-17.tc.ph.cox.net) (Remote host closed the connection)
[13:42:57] <TomyWork> website doesn't use any web workers, so I should be able to install one to do that, right?
[13:44:07] <TomyWork> sorry, not web workers, service workers
[13:45:08] <TomyWork> I'm not a web developer, I'm just trying to tell one that a certain issue is serious
[13:48:49] *** Joins: Codaraxis_ (~Codaraxis@user/codaraxis)
[13:50:03] <deniska> TomyWork: sure, I think it even has "modify and resend" feature?
[13:50:40] <deniska> ah, I don't think you can modify responses
[13:51:08] *** Joins: mintoyatsu (~mint@ip24-255-4-17.tc.ph.cox.net)
[13:51:29] *** Quits: Codaraxis (~Codaraxis@user/codaraxis) (Ping timeout: 256 seconds)
[13:53:09] <TomyWork> but there's a fetch event, says wikipedia, which allows me to "provide the data in other ways" (translated from german)
[13:53:21] *** Quits: mintoyatsu (~mint@ip24-255-4-17.tc.ph.cox.net) (Read error: Connection reset by peer)
[13:53:26] <TomyWork> oh you mean the network tab
[13:53:37] <TomyWork> yeah i dont think it's *that* easy :)
[13:54:00] *** Joins: macswagger (~cee@cpe-104-34-48-156.socal.res.rr.com)
[13:54:46] *** Joins: mintoyatsu (~mint@ip24-255-4-17.tc.ph.cox.net)
[13:55:23] <silly> https://github.com/microsoft/vscode/issues/140007
[13:58:09] *** Joins: DnzAtWrk (~DnzAtWrk@mobile-access-56734f-193.dhcp.inet.fi)
[13:58:11] *** Joins: stenno (~stenno@user/stenno)
[13:58:17] *** Joins: sickdyd (~sickd@120.51.82.69.ap.gmobb-fix.jp)
[13:58:24] *** Quits: DnzAtWrk (~DnzAtWrk@mobile-access-56734f-193.dhcp.inet.fi) (Read error: Connection reset by peer)
[13:58:44] *** Quits: macswagger (~cee@cpe-104-34-48-156.socal.res.rr.com) (Ping timeout: 250 seconds)
[14:02:38] *** Quits: sickdyd (~sickd@120.51.82.69.ap.gmobb-fix.jp) (Ping timeout: 250 seconds)
[14:02:41] *** Joins: cotko (~cotko@188-230-251-153.dynamic.t-2.net)
[14:03:04] *** Quits: stenno (~stenno@user/stenno) (Ping timeout: 250 seconds)
[14:05:31] <gde33> what happend here xactly? https://www.w3.org/MarkUp/html3/tabs.html
[14:07:52] <gde33> <oscurochu> is there an immutable way?  <> you could leave the old key inthere
[14:09:18] <gde33> I suppose you could craft something with getters and setters that preserves the original as-is but returns what you want :P
[14:11:50] *** Joins: qeqeqw (~qeqeqw3@2001:861:3a04:e320:31ea:a59b:1c06:51f4)
[14:16:49] <Cork> gde33: proxy is prob a better choice
[14:17:21] <Cork> depending on the page one could prob wrap window.fetch/XMLHTTPRequest and proxy the response
[14:17:46] <Cork> gde33: about the link what are you refering to?
[14:17:55] *** Quits: Swahili (~Swahili@a95-94-208-187.cpe.netcabo.pt) (Remote host closed the connection)
[14:18:12] <gde33> Cork: what happend to <tab>?
[14:18:26] <Cork> its html3, there was a LOT of weird things going on back then
[14:18:29] <gde33> or does it actually work?
[14:18:32] *** Quits: qeqeqw (~qeqeqw3@2001:861:3a04:e320:31ea:a59b:1c06:51f4) (Ping timeout: 240 seconds)
[14:18:32] <Cork> no
[14:18:57] <gde33> well, tab isn't weird imho. Having to use <pre> to use tabs, THAT is weird
[14:19:14] *** Joins: Swahili (~Swahili@a95-94-208-187.cpe.netcabo.pt)
[14:19:33] <gde33> or wrapping nicely formatted text in inline block elements
[14:19:35] <Cork> well spacing isn't meant ot have a meaning in html markup (except for single ones to separate text)
[14:19:38] <TomyWork> deniska, thanks btw. I finished my report and that factoid, while not changing the CVSS score at all, does help get it through the hoops. don't ask :)
[14:19:48] <gde33> Cork: oh but it does!
[14:19:54] *** Joins: macswagger (~cee@cpe-104-34-48-156.socal.res.rr.com)
[14:19:57] <gde33> Cork: that was the whole point of it!
[14:20:04] <gde33> Cork: the point of spacing I mean
[14:20:17] <Cork> ya, and that is why it wasn't included in html4+
[14:20:27] <Cork> cause again spacing isn't meant to have a meaning except for in <pre>
[14:20:49] <deniska> TomyWork: I'm afraid to ask what's the broader context of your question :)
[14:20:57] <gde33> for complex stuff I  can get behind tabels or even display:table
[14:21:01] <gde33> but say:
[14:21:07] <gde33> 1:00 lunch
[14:21:08] *** Quits: thojanssens (~thojansse@49.230.96.140) (Ping timeout: 256 seconds)
[14:21:08] <TomyWork> it's nothing publicly accessible, don't worry
[14:21:21] <gde33> 10:00 dancing
[14:21:27] <Cork> gde33: <p><span>hello    </span>     world</p> is meant to be identical to <p><span>hello</span> world</p>
[14:21:30] *** Quits: stagas (~stagas@2a02:587:c43a:e9ef:35df:207:dfd:a579) (Ping timeout: 268 seconds)
[14:21:33] <deniska> TomyWork: that's how you make people worry :P
[14:21:35] <TomyWork> and fingers crossed, it never will
[14:21:37] <Cork> to make generated markup easier to make
[14:22:01] <Cork> and space, tab and so on is normalized to the same separator in parsing
[14:22:05] <gde33> Cork: I imagine span is not suppose to have a width set?
[14:22:08] *** Joins: stagas (~stagas@2a02:587:c43a:e9ef:a88a:dd57:3b29:1b57)
[14:22:17] <Cork> gde33: doesn't really matter
[14:22:32] <gde33> foo  100 euro
[14:22:34] <gde33> foobar 200 euro
[14:22:42] <Cork> to express it as regex /\s+/ /g in parsing
[14:22:50] *** Joins: c4017 (~c4017@S0106c0943583f893.vf.shawcable.net)
[14:23:00] <TomyWork> does \s match nbsp?
[14:23:04] <Cork> no
[14:23:17] <Cork> &nbsp; is special
[14:23:21] *** Quits: han-solo (~hanish@user/han-solo) (Ping timeout: 268 seconds)
[14:23:26] *** Quits: c4017__ (~c4017@S0106c0943583f893.vf.shawcable.net) (Ping timeout: 250 seconds)
[14:23:30] <Cork> it has a special rule to not collapse it
[14:23:41] <TomyWork> i know it is, but I'm just asking if your regex is wrong :)
[14:24:00] <Cork> TomyWork: regex has no way to repecent &nbsp; as far as i know so ya... :D
[14:24:02] *** Quits: macswagger (~cee@cpe-104-34-48-156.socal.res.rr.com) (Ping timeout: 240 seconds)
[14:24:04] <TomyWork> if there's a special rule beyond that regex, the regex is indeed wrong
[14:24:13] <gde33> Cork: a contradiction right there
[14:24:39] <Cork> gde33: as with all standards that grow over time and have to keep backwards compatibility
[14:24:40] <gde33> Cork: I'm suppose not to laugh when &emsp; also collapses?
[14:24:51] <TomyWork> s/[^\S<insert nbsp here>]+/ /g
[14:25:00] <TomyWork> could work :D
[14:25:02] <kalen> no way to replace it? it's just another character
[14:25:09] <kalen> its hex code is \xa0
[14:25:12] <Cork> TomyWork: well it depends on if you run the regex before or after substitution
[14:25:19] <kalen> so just put that in your regex if you want
[14:25:20] <Cork> if you run it before it actually behaves exactly correct
[14:25:37] <Cork> "   &nbsp;   " => "   "
[14:26:38] *** Joins: Codaraxis (~Codaraxis@user/codaraxis)
[14:27:02] *** Quits: Codaraxis_ (~Codaraxis@user/codaraxis) (Ping timeout: 240 seconds)
[14:29:04] *** Quits: nomic (~nomic@185.192.69.41) (Quit: Leaving)
[14:29:19] <TomyWork> sed -r 's/[^[:graph:]\xa0]+/ /g' <<< $'foo \xa0 bar' | hd
[14:29:21] <TomyWork> 00000000  66 6f 6f 20 a0 20 62 61  72 0a                    |foo . bar.|
[14:29:36] <TomyWork> had to modify it a bit, since sed doesn't know \S
[14:30:13] <TomyWork> [:graph:] isn't exactly \S, since it also lacks the control characters
[14:31:05] <Cork> TomyWork: ya, and again if the compactation runs before the substitution you don't have to do that at all
[14:31:22] <Cork> (though that said it isn't how the parser works but anyway)
[14:31:36] <TomyWork> but then you'd have to worry about other whitespace entities
[14:32:09] <Cork> TomyWork: no, what situation are you thinking about?
[14:32:36] <gde33> Cork: ahh, someone in #css remembered how to do it! white-space: pre will stop it from ignoring tabs :)
[14:32:58] <Cork> gde33: in some cases, but there are som magic in <pre> that css can't do
[14:33:04] <TomyWork> Cork, &#x20
[14:33:08] <Cork> that has bitten me HARD
[14:33:27] <Cork> TomyWork: hmm true, didn't think of that one
[14:35:32] <gde33> &#x20 reminds me of doing an rss feed for sub forums then when I had it down to the specs no rss reader could parse it :P
[14:36:05] <Cork> And ya, html pre the living standard is lovely as it points back to the propriatery sgml
[14:36:16] *** Quits: kristijonas (~kristijon@78-56-32-39.static.zebra.lt) (Ping timeout: 256 seconds)
[14:36:47] *** Joins: spiceman (~spiceman@user/SpiceMan)
[14:37:46] <gde33> We should really start computers from scratch only no one remembers how. Pretend I didn't say anything. :P
[14:38:09] *** Quits: bodiccea (~bodiccea@user/bodiccea) (Remote host closed the connection)
[14:39:04] *** Joins: Codaraxis_ (~Codaraxis@user/codaraxis)
[14:39:04] <gde33> I rememeber in the early days of the web we still had lots of typesetters who complaint about everything being wrong
[14:39:23] <TomyWork> deniska, oh btw, if you were worried that the result of this report might be that they just block devtools - there is (hopefully) enough of an organizational boundary to prevent that. It'd be quite an uphill battle and I'm banking on their laziness here :)
[14:39:29] <gde33> it renders different on each computer? are you mad?
[14:39:31] *** Quits: Swahili (~Swahili@a95-94-208-187.cpe.netcabo.pt) (Quit: Leaving...)
[14:39:44] *** Joins: Swahili (~Swahili@a95-94-208-187.cpe.netcabo.pt)
[14:40:22] <deniska> TomyWork: I'm more worried that eventually a system which is vulnerable to HTTP requests may go online :)
[14:40:27] <TomyWork> gde33, forsooth! zooks!
[14:40:49] <TomyWork> deniska, yeah that is my bigger worry. I hope they throw it away and redo it before that happens
[14:42:28] *** Quits: Codaraxis (~Codaraxis@user/codaraxis) (Ping timeout: 268 seconds)
[14:43:17] *** Joins: bodiccea (~bodiccea@user/bodiccea)
[14:48:01] *** Quits: rev1nchn (~rev1nchn@gateway/vpn/pia/rev1nchn) (Ping timeout: 268 seconds)
[14:48:16] *** Quits: pluri_ (~pluri@user/pluri) (Quit: My MacBook has gone to sleep. ZZZzzz…)
[14:49:41] *** Joins: rev1nchn (~rev1nchn@111.60.247.15)
[14:52:20] *** Joins: stenno (~stenno@user/stenno)
[14:55:10] <theskillwithin> =]
[14:55:21] *** Joins: hassoon (hassoon@user/hassoon)
[14:55:31] <hassoon> 'moring
[14:55:41] <hassoon> *'mornin
[14:56:35] *** Quits: sheetjs (~sheetjs@user/sheetjs) (Remote host closed the connection)
[14:57:02] *** Quits: stenno (~stenno@user/stenno) (Ping timeout: 240 seconds)
[14:57:54] *** Quits: rev1nchn (~rev1nchn@111.60.247.15) (Read error: Connection reset by peer)
[15:00:13] *** Joins: vysn (~vysn@user/vysn)
[15:00:25] *** Joins: sickdyd (~sickd@120.51.82.69.ap.gmobb-fix.jp)
[15:02:16] *** Quits: gxt (~gxt@gateway/tor-sasl/gxt) (Remote host closed the connection)
[15:02:16] *** Quits: de-facto (~de-facto@user/de-facto) (Remote host closed the connection)
[15:02:30] *** Joins: de-facto (~de-facto@user/de-facto)
[15:03:54] *** Quits: oscurochu (~oscurochu@37.120.215.100) (Remote host closed the connection)
[15:04:54] <Maxdamantus> 23:59:19 < TomyWork> sed -r 's/[^[:graph:]\xa0]+/ /g' <<< $'foo \xa0 bar' | hd
[15:04:58] <Maxdamantus> That's invalid UTF-8.
[15:05:09] *** Quits: hendry (~hendry@210.23.22.2) (Ping timeout: 256 seconds)
[15:05:20] *** Quits: sickdyd (~sickd@120.51.82.69.ap.gmobb-fix.jp) (Ping timeout: 256 seconds)
[15:05:59] <Maxdamantus> The way to write U+A0 is $'\xc2\xa0', or just $'\u00a0'
[15:06:23] *** Joins: hendry (~hendry@210.23.22.2)
[15:06:27] *** Joins: D4mned (~D1mned@212.101.251.83)
[15:06:32] *** Joins: gxt (~gxt@gateway/tor-sasl/gxt)
[15:08:17] *** Joins: macswagger (~cee@cpe-104-34-48-156.socal.res.rr.com)
[15:11:48] *** Quits: RLa (~RLa@82.131.127.168.cable.starman.ee) (Quit: Client closed)
[15:12:32] *** Quits: D4mned (~D1mned@212.101.251.83) (Ping timeout: 240 seconds)
[15:12:56] *** Quits: perrierjouet (~perrier-j@modemcable012.251-130-66.mc.videotron.ca) (Quit: WeeChat 3.4)
[15:13:18] *** Quits: macswagger (~cee@cpe-104-34-48-156.socal.res.rr.com) (Ping timeout: 268 seconds)
[15:16:44] *** Joins: D4mned (~D1mned@212.101.251.83)
[15:17:17] *** Joins: perrierjouet (~perrier-j@modemcable012.251-130-66.mc.videotron.ca)
[15:18:09] *** Quits: perrierjouet (~perrier-j@modemcable012.251-130-66.mc.videotron.ca) (Client Quit)
[15:22:08] *** Quits: rustyshackleford (uid236774@id-236774.helmsley.irccloud.com) (Quit: Connection closed for inactivity)
[15:27:26] *** Joins: macswagger (~cee@cpe-104-34-48-156.socal.res.rr.com)
[15:28:45] *** Joins: stenno (~stenno@user/stenno)
[15:29:32] *** Joins: voltage_ (voltage@user/voltage)
[15:29:41] *** Joins: perrierjouet (~perrier-j@modemcable012.251-130-66.mc.videotron.ca)
[15:30:52] *** Joins: sickdyd (~sickd@120.51.82.69.ap.gmobb-fix.jp)
[15:31:58] *** Quits: macswagger (~cee@cpe-104-34-48-156.socal.res.rr.com) (Ping timeout: 256 seconds)
[15:35:37] <TomyWork> doesn't matter for the result, though :)
[15:37:01] <TomyWork> sed should in theory operate on characters, not bytes, so if I use \u00a0 there, it should work just as well
[15:37:34] <TomyWork> have fun testing that :)
[15:39:41] *** Quits: spiceman (~spiceman@user/SpiceMan) (Quit: WeeChat 2.8)
[15:40:04] *** Joins: pmercado (~pmercado@186.107.48.199)
[15:45:31] *** Joins: SpiceMan (~Don_Spice@zaq31fa4c95.rev.zaq.ne.jp)
[15:45:43] *** Joins: thojanssens (~thojansse@49.230.96.140)
[15:45:47] *** Quits: SpiceMan (~Don_Spice@zaq31fa4c95.rev.zaq.ne.jp) (Changing host)
[15:45:47] *** Joins: SpiceMan (~Don_Spice@user/SpiceMan)
[15:46:35] *** Quits: SpiceMan (~Don_Spice@user/SpiceMan) (Client Quit)
[15:46:38] *** Joins: otisolsen70 (~otisolsen@xd4ed80b5.cust.hiper.dk)
[15:47:50] *** Joins: qeqeqw (~qeqeqw3@2001:861:3a04:e320:31ea:a59b:1c06:51f4)
[15:48:21] *** Joins: pulse (~pulse@user/pulse)
[15:50:21] <austincheney> is there a more convenient way to express something like:   myObject.agentRequest.modalAddress = filePathDecode(null, myObject.agentRequest.modalAddress)
[15:50:48] *** Joins: dmaislin (~dmaislin@047-233-046-055.res.spectrum.com)
[15:54:06] <Cork> austincheney: you could attach the function on agentRequest and call it as myObject.agentRequest.decodeModalAddress();
[15:54:16] <Cork> otherwize no
[15:55:33] <austincheney> thanks Cork
[15:56:18] *** Joins: chao (~stenno@user/stenno)
[15:56:40] *** stenno is now known as Guest9472
[15:56:40] *** Quits: Guest9472 (~stenno@user/stenno) (Killed (erbium.libera.chat (Nickname regained by services)))
[15:56:40] *** chao is now known as stenno
[15:57:01] <Cork> austincheney: actually you could replace modalAddress with a getter and decode it on request (and cache the decoding to only do it once)
[15:57:13] <Cork> then you don't need to explicitly call filePathDecode at all
[16:01:58] <Cork> https://jsfiddle.net/kf0dL5w1/
[16:02:00] *** Joins: han-solo (~hanish@user/han-solo)
[16:02:46] *** Joins: rev1nchn (~rev1nchn@gateway/vpn/pia/rev1nchn)
[16:03:51] *** Joins: mknod (~mknod@user/mknod)
[16:04:59] *** Joins: CiaoSen (~Jura@p200300c95737a2002a3a4dfffe84dbd5.dip0.t-ipconnect.de)
[16:05:02] <mknod> Hello. Is there any way to get the parent of an object based on the object itself?
[16:05:59] <mknod> Or maybe I should say "class", not sure about this.
[16:06:44] *** Joins: dpuerto (~dpuerto@136-27-83-52.cab.webpass.net)
[16:07:53] <mknod> Basically, if I provide a Sheet object (https://developers.google.com/apps-script/reference/spreadsheet/sheet) to a function , which I got using mySheet = someSpreadsheet.getSheetByName('Foo');
[16:08:08] <mknod> I want to be able to retrieve someSpreadsheet.
[16:08:18] <Cork> mknod: not without a back reference in that object
[16:09:10] *** Quits: rev1nchn (~rev1nchn@gateway/vpn/pia/rev1nchn) (Ping timeout: 250 seconds)
[16:09:23] <mknod> Cork, so, either it's a feature of the API or it's not? Not sure what's involved here.
[16:12:41] *** Quits: greyrat (~greyrat@ip202.ip-51-178-215.eu) (Bye)
[16:13:02] *** Joins: greyrat_ (~greyrat@ip202.ip-51-178-215.eu)
[16:13:03] *** Joins: moldorcoder7 (~moldorcod@37.120.143.28)
[16:13:12] *** Joins: terrorjack0 (~terrorjac@2a01:4f8:1c1e:509a::1)
[16:13:12] *** Joins: [The_Tablet] (~tablet@user/the-tablet)
[16:13:16] <mknod> <mknod>	Basically, if I provide a Sheet object (https://developers.google.com/apps-script/reference/spreadsheet/sheet) to a function , which I got using mySheet = someSpreadsheet.getSheetByName('Foo');
[16:13:17] *** Joins: nullroute_ (~nullroute@209.141.45.45)
[16:13:29] *** Joins: redrambles__ (sid319583@id-319583.tinside.irccloud.com)
[16:13:31] *** Joins: phryk_ (~totallyno@user/phryk)
[16:13:33] <Cork> ya, that is a sheet
[16:13:38] *** Joins: Trieste_ (T@user/pilgrim)
[16:13:39] *** Joins: cisme__ (~cisme_@2600:1700:d980:1a40:182a:4ef3:47e9:95ff)
[16:13:47] *** Joins: jw_dungeon (~jw@2601:44:4380:4a10:706b:e515:702b:f9c)
[16:13:52] <Cork> you mean you want to get the sheet name from the instance?
[16:13:53] <mknod> A spreadsheet is made of one or more sheets.
[16:13:54] *** Joins: relipse_ (sid16131@id-16131.tinside.irccloud.com)
[16:14:09] <mknod> I want the spreadsheet, from one of its sheet.
[16:14:15] <Cork> you have the sheet...
[16:14:16] *** Joins: yosafbridge` (~yosafbrid@static.38.6.217.95.clients.your-server.de)
[16:14:21] *** Joins: szkl_ (uid110435@uxbridge.irccloud.com)
[16:14:23] <mknod> And I want the spreadsheet.
[16:14:52] <mknod> That would allow me not to explicitly provide it to the function I'm writing, since I already pass the sheet as an argument.
[16:15:06] *** Joins: dostoyev1ky2 (~sck@user/dostoyevsky2)
[16:15:06] *** Joins: Colourful (~cake@2a01:4f9:c010:6fe9::2)
[16:15:08] *** Joins: Bombo_ (atom@p2e58ef25.dip0.t-ipconnect.de)
[16:15:12] *** Joins: deltab_ (~deltab@95.154.230.49)
[16:15:18] *** Joins: evulish_ (~evulish@cpe-72-231-26-248.nyc.res.rr.com)
[16:15:20] *** Joins: Scarecr0- (scarecr0w@user/scarecr0w)
[16:15:21] *** Joins: kzootick (~contact@kzoo.tech)
[16:15:23] *** Joins: rick123_ (~rick123@157.245.192.96)
[16:15:23] <Cork> ok so you want the sheets prototype
[16:15:24] *** Joins: eqw_ (~eqw@31.134.178.99)
[16:15:25] *** Quits: dmaislin (~dmaislin@047-233-046-055.res.spectrum.com) (Ping timeout: 256 seconds)
[16:15:25] <mknod> I didn't plan to need the spreadsheet object in that function, but I do.
[16:15:26] *** Joins: farn_ (~farn@2a03:4000:7:3cd:d4ab:85ff:feeb:f505)
[16:15:26] *** Joins: FlannelKing (~flannel@cpe-76-175-193-181.socal.res.rr.com)
[16:15:33] *** Joins: TheStormsOfFury (~StormsOfF@wsip-207-162-134-107.tu.ok.cox.net)
[16:15:34] *** Joins: wez_ (~wyoung@about/web/wez)
[16:15:38] *** Joins: Bish_ (~arne@ip-037-024-001-041.um08.pools.vodafone-ip.de)
[16:15:40] *** Joins: chovy_ (chovy@tilde.club)
[16:15:43] *** Joins: PowaBanga_ (~PowaBanga@91.86.102.154)
[16:15:43] *** Joins: AciD (~fu@user/acid/x-5205451)
[16:15:43] *** Joins: Vladimir_ (~vlad@23.111.121.4)
[16:15:43] <Cork> just take the obj you have and add it to the obj.prototype
[16:15:45] *** Joins: twiclo1 (~twiclo@2604:7b80:2000:1069:52fc:cedd:fbeb:10c)
[16:15:50] *** Server sets mode: +Ccntz 
[16:15:51] *** Joins: ericP_ (~eric@jay.w3.org)
[16:15:53] <Tabmow> mknod: why not just pass in the spreadsheet? Then you can access it and its children in your function.
[16:15:57] <Cork> then you provide a function to the sheets prototype
[16:16:04] *** Quits: fef (~thedawn@user/thedawn) (Remote host closed the connection)
[16:16:05] *** Quits: \mSg (mSg@user/msg/x-0285936) (Ping timeout: 240 seconds)
[16:16:05] *** Quits: naeluh__ (sid95128@id-95128.lymington.irccloud.com) (Ping timeout: 240 seconds)
[16:16:05] *** Quits: Trieste (T@user/pilgrim) (Ping timeout: 240 seconds)
[16:16:05] *** Quits: The_Tablet (~tablet@user/the-tablet) (Ping timeout: 240 seconds)
[16:16:06] *** Quits: AciD` (~fu@user/acid/x-5205451) (Ping timeout: 240 seconds)
[16:16:06] *** Quits: Scarecr0w (scarecr0w@user/scarecr0w) (Ping timeout: 240 seconds)
[16:16:06] *** Quits: greyrat (~greyrat@ip202.ip-51-178-215.eu) (Ping timeout: 240 seconds)
[16:16:06] *** Quits: ericP (~eric@jay.w3.org) (Ping timeout: 240 seconds)
[16:16:06] *** Quits: Kirjava (~cake@user/kirjava) (Ping timeout: 240 seconds)
[16:16:06] *** \mSg_mini is now known as \mSg
[16:16:06] *** [The_Tablet] is now known as The_Tablet
[16:16:06] *** Quits: bailon (~gizzard@saturn.whatbox.ca) (Ping timeout: 240 seconds)
[16:16:06] *** Quits: koolazer (~koo@user/koolazer) (Ping timeout: 240 seconds)
[16:16:06] *** Quits: dostoyevsky2 (~sck@user/dostoyevsky2) (Ping timeout: 240 seconds)
[16:16:06] *** Quits: michaelis (~michaelis@193.183.209.17) (Ping timeout: 240 seconds)
[16:16:06] *** Quits: pupskuchen (~pupskuche@user/pupskuchen) (Ping timeout: 240 seconds)
[16:16:06] *** Quits: akurilin_ (uid322841@id-322841.ilkley.irccloud.com) (Ping timeout: 240 seconds)
[16:16:06] *** Quits: Guest8575 (~twiclo@2604:7b80:2000:1069:52fc:cedd:fbeb:10c) (Ping timeout: 240 seconds)
[16:16:06] *** Quits: KnownSyntax (sid233169@user/knownsyntax) (Ping timeout: 240 seconds)
[16:16:06] *** Quits: relipse (sid16131@id-16131.tinside.irccloud.com) (Ping timeout: 240 seconds)
[16:16:06] *** Quits: wez (~wyoung@about/web/wez) (Ping timeout: 240 seconds)
[16:16:06] *** Quits: evulish (~evulish@cpe-72-231-26-248.nyc.res.rr.com) (Ping timeout: 240 seconds)
[16:16:06] *** Quits: rick123 (~rick123@157.245.192.96) (Ping timeout: 240 seconds)
[16:16:06] *** Quits: Flannel (~flannel@user/flannel) (Ping timeout: 240 seconds)
[16:16:06] *** Quits: deltab (~deltab@user/deltab) (Ping timeout: 240 seconds)
[16:16:06] *** Quits: moldorcoder7_ (~moldorcod@37.120.143.28) (Ping timeout: 240 seconds)
[16:16:06] *** Quits: nuclearg1 (~nucleargr@user/nuclearg1) (Ping timeout: 240 seconds)
[16:16:06] *** Quits: eqw (~eqw@31.134.178.99) (Ping timeout: 240 seconds)
[16:16:07] *** Quits: otisolsen70 (~otisolsen@xd4ed80b5.cust.hiper.dk) (Ping timeout: 240 seconds)
[16:16:07] *** Quits: Lope (~lope@user/lope) (Ping timeout: 240 seconds)
[16:16:07] *** Quits: szkl (uid110435@id-110435.uxbridge.irccloud.com) (Ping timeout: 240 seconds)
[16:16:07] *** Quits: terrorjack (~terrorjac@2a01:4f8:1c1e:509a::1) (Ping timeout: 240 seconds)
[16:16:07] *** Quits: Fossil (~Fossil@2a03:b0c0:0:1010::398:b001) (Ping timeout: 240 seconds)
[16:16:07] *** Quits: mven (~mven@ip68-104-39-54.lv.lv.cox.net) (Ping timeout: 240 seconds)
[16:16:07] *** Quits: mdel0 (~mdel@user/mdel) (Ping timeout: 240 seconds)
[16:16:07] *** Quits: PowaBanga (~PowaBanga@user/powabanga) (Ping timeout: 240 seconds)
[16:16:07] *** Quits: biberu (~biberu@user/biberu) (Ping timeout: 240 seconds)
[16:16:07] *** Quits: phryk (~totallyno@user/phryk) (Ping timeout: 240 seconds)
[16:16:07] *** Quits: StormsOfFury (~StormsOfF@wsip-207-162-134-107.tu.ok.cox.net) (Ping timeout: 240 seconds)
[16:16:07] *** Quits: Bish (~arne@b2b-37-24-1-41.unitymedia.biz) (Ping timeout: 240 seconds)
[16:16:07] *** Quits: davlefou (~davlefou@5.183.212.217) (Ping timeout: 240 seconds)
[16:16:07] *** Quits: Pilum (~JKM@user/pilum) (Ping timeout: 240 seconds)
[16:16:07] *** Quits: nullroute (~nullroute@user/nullroute) (Ping timeout: 240 seconds)
[16:16:07] *** Quits: Ducki (~ducki@user/ducki) (Ping timeout: 240 seconds)
[16:16:07] *** Quits: Bombo (atom@user/bombo) (Ping timeout: 240 seconds)
[16:16:07] *** Quits: hexology (~hexology@user/hexology) (Ping timeout: 240 seconds)
[16:16:07] *** Quits: beencubed (~beencubed@209.131.238.248) (Ping timeout: 240 seconds)
[16:16:07] *** Quits: farn (~farn@2a03:4000:7:3cd:d4ab:85ff:feeb:f505) (Ping timeout: 240 seconds)
[16:16:07] *** Quits: chovy (chovy@tilde.club) (Ping timeout: 240 seconds)
[16:16:07] *** Quits: ninjabanjo (~ninjabanj@107.150.45.163) (Ping timeout: 240 seconds)
[16:16:07] *** Quits: cismee (~cisme_@2600:1700:d980:1a40:182a:4ef3:47e9:95ff) (Ping timeout: 240 seconds)
[16:16:07] *** Quits: znf (ibm86@2001:19f0:5001:3600:5400:3ff:fecd:9ee5) (Ping timeout: 240 seconds)
[16:16:07] *** Quits: CrazyEddy (crazyed@2603:300a:1d10:c000:de4a:3eff:fe88:cc5f) (Ping timeout: 240 seconds)
[16:16:08] *** Quits: relms (~relms@user/relms) (Ping timeout: 240 seconds)
[16:16:08] *** Quits: nullheroes1 (~nullheroe@168.235.66.22) (Ping timeout: 240 seconds)
[16:16:08] *** Quits: Alexendoo (~Alexendoo@macleod.io) (Ping timeout: 240 seconds)
[16:16:08] *** Quits: Covrus (~Covrus@user/covrus) (Ping timeout: 240 seconds)
[16:16:08] *** Quits: yosafbridge (~yosafbrid@static.38.6.217.95.clients.your-server.de) (Ping timeout: 240 seconds)
[16:16:08] *** Quits: redrambles (sid319583@id-319583.tinside.irccloud.com) (Ping timeout: 240 seconds)
[16:16:08] *** Quits: kzootech (~contact@kzoo.tech) (Ping timeout: 240 seconds)
[16:16:08] *** Quits: Vladimir (~vlad@23.111.121.4) (Ping timeout: 240 seconds)
[16:16:08] *** mven1 is now known as mven
[16:16:11] *** KnownSyntax_ is now known as KnownSyntax
[16:16:11] *** Scarecr0- is now known as Scarecr0w
[16:16:11] *** pupskucheen is now known as pupskuchen
[16:16:12] *** Joins: Covrus_ (~Covrus@user/covrus)
[16:16:13] *** akurilin__ is now known as akurilin_
[16:16:13] *** terrorjack0 is now known as terrorjack
[16:16:13] *** Fossil_ is now known as Fossil
[16:16:13] *** relipse_ is now known as relipse
[16:16:13] *** relms2 is now known as relms
[16:16:13] *** redrambles__ is now known as redrambles
[16:16:17] <Cork> though extending standard prototypes is usually a bad idea
[16:16:25] *** Joins: macswagger (~cee@cpe-104-34-48-156.socal.res.rr.com)
[16:16:25] *** Joins: CrazyEddy (crazyed@2603:300a:1d10:c000:de4a:3eff:fe88:cc5f)
[16:16:27] *** Joins: Alexendoo (~Alexendoo@macleod.io)
[16:16:32] *** Joins: nuclearg1 (~nucleargr@user/nuclearg1)
[16:16:38] *** Joins: biberu (~biberu@user/biberu)
[16:16:38] *** Joins: koolazer (~koo@user/koolazer)
[16:16:38] *** Joins: fef (~thedawn@user/thedawn)
[16:16:40] *** Joins: Pilum (~JKM@user/pilum)
[16:16:41] <mknod> Tabmow, I could, but want to avoid this because the function already has optional parameters and that would mess its syntax.
[16:16:49] *** Joins: onizu (uid373383@id-373383.uxbridge.irccloud.com)
[16:16:55] <mknod> But I will if there is no other way.
[16:17:14] *** Joins: beencubed (~beencubed@209.131.238.248)
[16:17:27] <Cork> mknod: the alternative is to extend a standard syntax and possibly get code that breaks in a future addition to the language
[16:17:33] <mknod> Perhaps I could pass { spreadsheet: foo, sheet: bar } instead of just bar.
[16:17:51] *** Joins: znf_ (ibm86@blender.linge-ma.ro)
[16:17:52] <Tabmow> mknod: isn't this what you want? https://developers.google.com/apps-script/reference/spreadsheet/sheet#getparent
[16:18:20] *** Joins: dmaislin (~dmaislin@047-233-046-055.res.spectrum.com)
[16:18:30] <mknod> Tabmow, holy sheet, yes!
[16:18:54] <mknod> Sorry, should have looked twice.
[16:19:11] *** Joins: davlefou (~davlefou@5.183.212.217)
[16:19:26] <Tabmow> After all the help I get in here it's good to return some especially with my limited skills :P
[16:19:32] *** Quits: rev1nchn (~rev1nchn@gateway/vpn/pia/rev1nchn) (Ping timeout: 240 seconds)
[16:19:53] *** Joins: FlorianBad (~FlorianBa@cpe-67-49-107-16.dc.res.rr.com)
[16:19:57] *** Quits: evulish_ (~evulish@cpe-72-231-26-248.nyc.res.rr.com) (Ping timeout: 256 seconds)
[16:19:57] *** Quits: szkl_ (uid110435@uxbridge.irccloud.com) (Ping timeout: 256 seconds)
[16:20:09] *** Joins: michaelis (~michaelis@193.183.209.17)
[16:20:17] <mknod> That's appreciated thanks.
[16:20:31] *** Quits: eqw_ (~eqw@31.134.178.99) (Ping timeout: 256 seconds)
[16:20:31] *** Quits: rick123_ (~rick123@157.245.192.96) (Ping timeout: 256 seconds)
[16:20:31] *** Quits: Trieste_ (T@user/pilgrim) (Ping timeout: 256 seconds)
[16:20:31] *** Quits: biberu\ (~biberu@user/biberu) (Ping timeout: 256 seconds)
[16:20:33] *** Joins: rev1nchn (~rev1nchn@gateway/vpn/pia/rev1nchn)
[16:20:46] <mknod> Cork, out of curiosity, what would it look like?
[16:21:02] *** Joins: Trieste (T@user/pilgrim)
[16:21:11] <Cork> you can extend the prototype of any object
[16:21:26] *** Joins: rick123 (~rick123@157.245.192.96)
[16:21:26] *** Joins: eqw (~eqw@31.134.178.99)
[16:21:29] <Cork> those function are then accessable directly on the same object
[16:21:38] *** Joins: szkl_ (uid110435@id-110435.uxbridge.irccloud.com)
[16:21:39] *** Joins: evulish (~evulish@cpe-72-231-26-248.nyc.res.rr.com)
[16:21:50] <mknod> But how do I know where to find what I'm looking for, i.e. what getParent() returns?
[16:22:19] <Cork> n>function Example() {}; Example.prototype.myFunction = function() { return "works }; var a = new Example(); a.myFunction()
[16:22:20] <jellobot> (fail) SyntaxError: Invalid or unexpected token
[16:22:29] *** Quits: PowaBanga_ (~PowaBanga@91.86.102.154) (Quit: Ciao)
[16:22:32] <Cork> n>function Example() {}; Example.prototype.myFunction = function() { return "works" }; var a = new Example(); a.myFunction()
[16:22:33] <jellobot> (okay) 'works'
[16:22:41] *** Joins: nullheroes2 (~nullheroe@168.235.66.22)
[16:23:36] *** Quits: macswagger (~cee@cpe-104-34-48-156.socal.res.rr.com) (Ping timeout: 268 seconds)
[16:24:38] *** Joins: PowaBanga (~PowaBanga@user/powabanga)
[16:27:32] <FlorianBad> The Date object is very flexible with absurd dates:   https://jsfiddle.net/mkx8z9of/    But can we count on it? Meaning, can I use that to trace tics on a graph by finding the previous/next beginning of a month for example?
[16:27:37] <mknod> Cork, yes, but you are returning a literal string here. Not some object buried somewhere I don't know.
[16:28:02] <Cork> mknod: ya, that was for your own function not to traverse objects
[16:29:01] <Cork> FlorianBad: if you need to manipulate dates regularly i wouldn't use it, use a third party date manipulation lib instead
[16:29:14] <Cork> moment.js is the old one, don't remeber the name of the replacement
[16:29:32] <FlorianBad> Cork: I don't want any library. I'm building my own graph library, it cannot depend on anything else.
[16:29:56] <Cork> FlorianBad: then you will have to implement date traversion your self
[16:30:20] *** Quits: sickdyd (~sickd@120.51.82.69.ap.gmobb-fix.jp) (Ping timeout: 256 seconds)
[16:30:33] <Cork> some of it works ok with the date object, some break horribly
[16:32:28] *** Joins: otisolsen70 (~otisolsen@xd4ed80b5.cust.hiper.dk)
[16:32:29] *** Quits: Colourful (~cake@2a01:4f9:c010:6fe9::2) (Changing host)
[16:32:29] *** Joins: Colourful (~cake@user/kirjava)
[16:32:36] <FlorianBad> Cork: can you give me an example of something that breaks?
[16:32:57] <FlorianBad> because if that works: https://jsfiddle.net/mkx8z9of/1/   I wonder what could break...
[16:33:28] <Cork> the biggest problem with it is parsing none us date formats
[16:34:12] <Cork> but date offsets isn't always calculated correctly, missing leap year (if i remeber correctly)
[16:34:29] <Cork> but it depends on how much you need to fiddle with the dates
[16:34:57] <Cork> shifting between timezones is another things that works really badly
[16:35:05] <Decker> :) just use some sort of gui date/time selection and keep formatting out of user hands
[16:35:44] <FlorianBad> I will only use it to get to the previous/next tic of time in the X axis of a graph, so previous/next month, day, hour, and Monday
[16:37:43] *** Joins: kakashiAL (~kakashi@ip-037-201-198-009.um10.pools.vodafone-ip.de)
[16:41:06] *** Quits: chenqisu1 (~bhca7d@183.217.201.21) (Ping timeout: 256 seconds)
[16:41:41] *** Joins: lenarhoyt (~lenarhoyt@p200300eec717e000809108ea6415b05b.dip0.t-ipconnect.de)
[16:42:33] *** Quits: lain6141 (~lain6141@119.224.72.222) (Quit: leaving)
[16:43:19] *** Joins: DrowningElysium (uid190788@user/drowningelysium)
[16:46:03] *** Joins: Booster2ooo (~Booster2o@user/booster2ooo)
[16:46:42] *** Joins: summersault (~summersau@179.221.251.36)
[16:47:32] <FlorianBad> Cork: I can't seem to manage to break it:  https://jsfiddle.net/mkx8z9of/2/
[16:48:54] <Cork> FlorianBad: if you want to use it, go for it; don't let me get in your way
[16:49:18] <FlorianBad> well, I'm just trying to get to the truth lol   I want to first make sure it's actually reliable
[16:50:57] *** Quits: summersault (~summersau@179.221.251.36) (Ping timeout: 240 seconds)
[16:55:49] *** Joins: sickdyd (~sickd@120.51.82.69.ap.gmobb-fix.jp)
[16:55:54] <FlorianBad> last one is pretty hard core: https://jsfiddle.net/mkx8z9of/3/   :)
[16:56:06] *** Joins: macswagger (~cee@cpe-104-34-48-156.socal.res.rr.com)
[16:57:34] *** Quits: henry40408 (~henry4040@175.181.155.165) (Quit: The Lounge - https://thelounge.chat)
[16:58:29] *** Quits: pmercado (~pmercado@186.107.48.199) (Ping timeout: 256 seconds)
[16:58:29] *** Joins: pmercado_ (~pmercado@186.107.48.199)
[16:58:58] *** Quits: fef (~thedawn@user/thedawn) (Remote host closed the connection)
[16:59:58] *** Joins: N4buc0- (~N4buc0@177.40.2.111)
[17:00:11] *** Quits: pulse (~pulse@user/pulse) (Ping timeout: 256 seconds)
[17:00:22] *** Quits: sickdyd (~sickd@120.51.82.69.ap.gmobb-fix.jp) (Ping timeout: 256 seconds)
[17:00:37] *** Quits: fweht (uid404746@id-404746.lymington.irccloud.com) (Quit: Connection closed for inactivity)
[17:01:19] *** Quits: macswagger (~cee@cpe-104-34-48-156.socal.res.rr.com) (Ping timeout: 256 seconds)
[17:01:26] *** Quits: N4buc0 (~N4buc0@2804:7f4:348a:c4ae:fc6b:8b6c:d6d3:ec85) (Remote host closed the connection)
[17:02:17] *** pmercado_ is now known as pmercado
[17:03:02] *** Quits: kalen (~kalen@gateway/vpn/pia/kalen) (Ping timeout: 240 seconds)
[17:04:55] *** Quits: `2jt (~jtomas@10.red-83-58-228.dynamicip.rima-tde.net) (Ping timeout: 268 seconds)
[17:07:23] *** Joins: epolanski (uid312403@id-312403.helmsley.irccloud.com)
[17:08:47] <epolanski> is there a way to check why a dependency is in node modules?
[17:11:05] *** Joins: kalen (~kalen@gateway/vpn/pia/kalen)
[17:11:48] <biberu> epolanski: you can look in the lockfile
[17:12:12] <epolanski> that's the problem, I have something that there isn't in the package-lock
[17:12:27] <epolanski> on a ci pipeline without any cache
[17:13:49] <Tabmow> epolanski: does your ci run npm ci or npm install?
[17:13:50] <biberu> i guess you checked that the folder is empty before it runs? are you calling npm ci or npm install?
[17:14:58] <Tabmow> The only way for it to get there is either it was there to begin with as biberu said or something else in your package.json is depending on it
[17:15:18] *** Joins: `2jt (~jtomas@10.red-83-58-228.dynamicip.rima-tde.net)
[17:17:33] *** Quits: Akimb (~Akimb@82-135-197-171.static.zebra.lt) (Read error: Connection reset by peer)
[17:18:03] *** Joins: macswagger (~cee@cpe-104-34-48-156.socal.res.rr.com)
[17:18:43] *** Joins: csmiga (~Thunderbi@ec2-52-207-160-196.compute-1.amazonaws.com)
[17:20:40] *** Quits: mdemo (~mdemo@user/mdemo22) (Ping timeout: 250 seconds)
[17:21:51] *** Joins: trevors (~trevors@user/trevors)
[17:23:14] *** Joins: oscurochu (~oscurochu@37.120.215.102)
[17:23:36] *** Quits: macswagger (~cee@cpe-104-34-48-156.socal.res.rr.com) (Ping timeout: 256 seconds)
[17:24:20] *** Joins: DnzAtWrk (~DnzAtWrk@mobile-access-56734f-193.dhcp.inet.fi)
[17:30:16] *** Quits: Lope2 (~lope@155.93.247.21) (Quit: Leaving)
[17:33:02] <silly> i have one more... https://github.com/microsoft/vscode/issues/140971
[17:33:03] *** Quits: jazzy (~jaziz@user/jaziz) (Ping timeout: 256 seconds)
[17:33:35] <silly> for those who use workspace folders with vscode
[17:35:23] *** Joins: mdemo (~mdemo@user/mdemo22)
[17:38:56] *** Joins: Goreng (~Goreng@202.138.250.57)
[17:42:41] *** Quits: `2jt (~jtomas@10.red-83-58-228.dynamicip.rima-tde.net) (Ping timeout: 256 seconds)
[17:45:33] <FlorianBad> Cork: thanks again for the dating tips ;)  lol
[17:45:42] *** Quits: Goreng (~Goreng@202.138.250.57) (Quit: Leaving)
[17:45:57] *** Joins: Goreng (~Goreng@202.138.250.57)
[17:49:06] *** Quits: iomari891 (~iomari891@197.210.70.166) (Ping timeout: 256 seconds)
[17:49:22] *** Joins: vats (~vats@180.149.226.41)
[17:52:09] *** Quits: wovixo (~wovixo@128.104.205.49) (Read error: Connection reset by peer)
[18:00:06] *** Quits: kakashiAL (~kakashi@ip-037-201-198-009.um10.pools.vodafone-ip.de) (Ping timeout: 250 seconds)
[18:00:29] *** znf_ is now known as znf
[18:00:56] <FlorianBad> Modulo (%) has priority over + and -, right?  What about over * and /  ?
[18:01:46] <stenno> tias
[18:01:57] *** Joins: `2jt (~jtomas@10.red-83-58-228.dynamicip.rima-tde.net)
[18:02:02] <stenno> n> 2 * 3 % 2
[18:02:03] <jellobot> (okay) 0
[18:02:16] <stenno> n> 3 % 2 * 2
[18:02:17] <jellobot> (okay) 2
[18:02:47] <stenno> n> 1 + 2 % 3
[18:02:48] <jellobot> (okay) 3
[18:03:14] <stenno> n> 3 % 1 + 2
[18:03:14] <jellobot> (okay) 2
[18:03:36] <FlorianBad> hmmm, so no then :)
[18:04:05] *** Joins: henry40408 (~henry4040@175.181.155.165)
[18:04:14] <FlorianBad> ah, well it's the other then in that case
[18:04:23] <FlorianBad> interesting, I didn't know that :)
[18:05:49] *** Quits: henry40408 (~henry4040@175.181.155.165) (Client Quit)
[18:06:19] *** Joins: henry40408 (~henry4040@175.181.155.165)
[18:06:57] *** Joins: macswagger (~cee@cpe-104-34-48-156.socal.res.rr.com)
[18:07:04] *** Quits: EgonX (~EgonX@2601:2c6:47f:879e:64cc:fa11:8fcb:d98e) (Quit: Textual IRC Client: www.textualapp.com)
[18:07:05] <stenno> FlorianBad: https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Operators/Operator_Precedence
[18:07:56] <stenno> see the table, position 13 is *, / and %
[18:09:00] *** Joins: wroathe (~wroathe@206-55-188-8.fttp.usinternet.com)
[18:09:00] *** Quits: wroathe (~wroathe@206-55-188-8.fttp.usinternet.com) (Changing host)
[18:09:00] *** Joins: wroathe (~wroathe@user/wroathe)
[18:09:07] <stenno> one above + and -
[18:09:45] <stenno> so %, * and / are considered of equal value regarding precedence
[18:09:58] *** Joins: benni (~benni@p5084a116.dip0.t-ipconnect.de)
[18:10:18] *** Joins: eron (~eron@2804:431:c7c2:3848:2c26:bc50:f8a2:a008)
[18:10:37] *** Quits: kalen (~kalen@gateway/vpn/pia/kalen) (Ping timeout: 240 seconds)
[18:11:37] *** Quits: macswagger (~cee@cpe-104-34-48-156.socal.res.rr.com) (Ping timeout: 240 seconds)
[18:12:13] *** Quits: Booster2ooo (~Booster2o@user/booster2ooo) (Ping timeout: 240 seconds)
[18:12:32] *** Quits: vysn (~vysn@user/vysn) (Ping timeout: 240 seconds)
[18:13:03] *** Joins: kalen (~kalen@37.19.197.236)
[18:17:35] *** Joins: joelmo (uid17355@2a03:5180:f::43cb)
[18:18:32] *** Joins: admin123 (~harrymore@47.18.246.203)
[18:20:03] <joelmo> is there any real difference in instances when classes are defined: `class X { constructor() { this.a = 0; } }` vs `class X { a = 0; }`
[18:20:09] *** Quits: stagas (~stagas@2a02:587:c43a:e9ef:a88a:dd57:3b29:1b57) (Ping timeout: 268 seconds)
[18:20:43] *** phryk_ is now known as phryk
[18:22:14] <stenno> n> class X { a = 0; } class Y extends X { constructor() { a = 23; super(); }} const y = new Y(); y
[18:22:15] <jellobot> (fail) ReferenceError: a is not defined
[18:22:24] <stenno> n> class X { a = 0; } class Y extends X { constructor() { this.a = 23; super(); }} const y = new Y(); y
[18:22:25] <jellobot> (fail) ReferenceError: Must call super constructor in derived class before accessing 'this' or returning from derived constructor
[18:22:45] <stenno> n> class X { a = 23; } class Y extends X { constructor() { super(); }} const y = new Y(); y
[18:22:46] <jellobot> (okay) Y { a: 23 }
[18:22:55] *** Quits: `2jt (~jtomas@10.red-83-58-228.dynamicip.rima-tde.net) (Ping timeout: 256 seconds)
[18:22:58] *** Quits: leduyquang753 (~leduyquan@user/leduyquang753) (Quit: Gotta go, see you guys later.)
[18:23:20] <stenno> seems like its constructor promotion or w/e its called
[18:23:36] <FlorianBad> stenno: ah, that's why it ends up being the order! Interesting
[18:23:49] *** Joins: shibumi (~shibumi@archlinux/trusteduser/shibumi)
[18:23:50] <joelmo> n> class X { a = 0; } class Y extends X { constructor() { this.a = 23; super(); }} const y = new Y(); y
[18:23:50] <jellobot> (fail) ReferenceError: Must call super constructor in derived class before accessing 'this' or returning from derived constructor
[18:23:58] *** Parts: shibumi (~shibumi@archlinux/trusteduser/shibumi) (WeeChat 3.4)
[18:24:00] *** Joins: stagas (~stagas@2a02:587:c43a:e9ef:66da:6e9e:cde7:7c35)
[18:24:13] <joelmo> n> class X { a = 0; } class Y extends X { constructor() { super(); a = 23; }} const y = new Y(); y
[18:24:14] <jellobot> (fail) ReferenceError: a is not defined
[18:24:27] *** Quits: FlorianBad (~FlorianBa@cpe-67-49-107-16.dc.res.rr.com) (Quit: Client closed)
[18:24:58] <stenno> this.
[18:25:25] <joelmo> class X { a = 0; } class Y extends X { constructor() { super(); this.a = 23; }} const y = new Y(); y
[18:25:33] <stenno> if i had to guess, class Y { a = 23; } implies promotion
[18:25:36] <joelmo> n> class X { a = 0; } class Y extends X { constructor() { super(); this.a = 23; }} const y = new Y(); y
[18:25:36] <jellobot> (okay) Y { a: 23 }
[18:26:09] <stenno> so there shouldn't be a difference
[18:27:43] *** Joins: nomic (~nomic@185.192.69.41)
[18:32:23] *** Quits: ryzenda (~ryzenda@pool-74-109-246-70.pitbpa.fios.verizon.net) (Read error: Connection reset by peer)
[18:33:56] *** Quits: Goreng (~Goreng@202.138.250.57) (Quit: Leaving)
[18:34:39] *** Joins: macswagger (~cee@cpe-104-34-48-156.socal.res.rr.com)
[18:34:44] *** Joins: Goreng (~Goreng@202.138.250.1)
[18:35:57] *** Quits: lenarhoyt (~lenarhoyt@p200300eec717e000809108ea6415b05b.dip0.t-ipconnect.de) (Ping timeout: 256 seconds)
[18:37:09] *** Joins: cmbengue (~Thunderbi@207.191.249.160)
[18:38:58] *** Quits: macswagger (~cee@cpe-104-34-48-156.socal.res.rr.com) (Ping timeout: 256 seconds)
[18:41:02] *** Joins: rustyshackleford (uid236774@id-236774.helmsley.irccloud.com)
[18:42:32] <ljharb> wtf is promotion
[18:42:47] <hassoon> promotion is getting promoted
[18:42:53] <ljharb> class fields are installed either right before the constructor in a base class, or right after super in a derived class
[18:42:58] <hassoon> :p
[18:43:23] <ljharb> iow, right before you have the opportunity to reference the receiver
[18:43:42] *** Quits: benni (~benni@p5084a116.dip0.t-ipconnect.de) (Quit: Client closed)
[18:46:00] *** Joins: benni (~benni@p5084a116.dip0.t-ipconnect.de)
[18:46:09] *** Quits: vats (~vats@180.149.226.41) (Ping timeout: 256 seconds)
[18:46:54] *** Quits: wroathe (~wroathe@user/wroathe) (Ping timeout: 256 seconds)
[18:48:28] *** Quits: w0ng (~w0ng@103.212.224.213) (Ping timeout: 260 seconds)
[18:50:38] *** Joins: macswagger (~cee@cpe-104-34-48-156.socal.res.rr.com)
[18:52:24] *** Colourful is now known as Kirjava
[18:55:00] *** Joins: kakashiAL (~kakashi@37.85.18.55)
[18:55:10] *** Joins: wroathe (~wroathe@206-55-188-8.fttp.usinternet.com)
[18:55:10] *** Quits: wroathe (~wroathe@206-55-188-8.fttp.usinternet.com) (Changing host)
[18:55:10] *** Joins: wroathe (~wroathe@user/wroathe)
[18:57:30] *** Quits: dave0 (~davezero@069.d.003.ncl.iprimus.net.au) (Quit: dave's not here)
[18:57:44] *** Quits: macswagger (~cee@cpe-104-34-48-156.socal.res.rr.com) (Ping timeout: 250 seconds)
[18:58:44] *** Joins: pulse (~pulse@user/pulse)
[18:59:08] *** Joins: iomari891 (~iomari891@197.210.70.132)
[18:59:10] *** Quits: mintoyatsu (~mint@ip24-255-4-17.tc.ph.cox.net) (Remote host closed the connection)
[18:59:22] *** Quits: kalen (~kalen@37.19.197.236) (Ping timeout: 256 seconds)
[18:59:45] *** Quits: wroathe (~wroathe@user/wroathe) (Ping timeout: 256 seconds)
[18:59:45] *** Joins: renlo (~Renlo_Ren@pool-108-14-112-182.nycmny.east.verizon.net)
[18:59:56] *** Quits: kakashiAL (~kakashi@37.85.18.55) (Ping timeout: 256 seconds)
[19:00:53] *** Joins: taupiqueur (~taupiqueu@142.244.204.77.rev.sfr.net)
[19:02:35] *** Quits: Cheaterm1n (~Cheaterma@user/cheaterman) (Ping timeout: 256 seconds)
[19:04:23] *** Joins: Booster2ooo (~Booster2o@user/booster2ooo)
[19:04:34] *** Joins: Cheaterman (~Cheaterma@user/cheaterman)
[19:06:20] <stenno> ljharb: https://stitcher.io/blog/constructor-promotion-in-php-8
[19:06:51] *** Joins: sickdyd (~sickd@120.51.82.69.ap.gmobb-fix.jp)
[19:11:39] *** Quits: sickdyd (~sickd@120.51.82.69.ap.gmobb-fix.jp) (Ping timeout: 256 seconds)
[19:12:03] *** Joins: kakashiAL (~kakashi@37.85.18.55)
[19:12:09] <ThePendulum> hm eslint in my vim seems to have randomly broken D:
[19:12:16] *** Joins: kalen (~kalen@gateway/vpn/pia/kalen)
[19:17:28] <ThePendulum> like it's suddenly struggling with the combined html.vue.javascript.css filetype
[19:18:06] *** Quits: DnzAtWrk (~DnzAtWrk@mobile-access-56734f-193.dhcp.inet.fi) (Read error: Connection reset by peer)
[19:19:33] <ljharb> stenno: def never heard that term before, but that looks slightly different than what JS has, because it's syntax to combine constructor args into class fields
[19:20:13] <stenno> yeah its different
[19:20:41] <stenno> but also kinda similar
[19:20:54] <stenno> literal notation implies 'promotion'
[19:21:49] *** Quits: rev1nchn (~rev1nchn@gateway/vpn/pia/rev1nchn) (Ping timeout: 268 seconds)
[19:24:05] <ljharb> it's not clear to me that it does
[19:24:05] *** Quits: han-solo (~hanish@user/han-solo) (Quit: leaving)
[19:24:13] *** Joins: rev1nchn (~rev1nchn@gateway/vpn/pia/rev1nchn)
[19:24:30] <ljharb> "promotion" reads to me like "hoisting", so it doesn't seem like the right name for the php feature
[19:24:37] *** Joins: zebrag (~chris@user/zebrag)
[19:24:38] <ljharb> but also, why is anybody still using php :-p
[19:25:39] <stenno> i don't know why anyone would use php unless their job dictates it (for example, in my case)
[19:26:06] <rev1nchn> i'm about to learn php, is that a bad idea?
[19:26:26] *** Joins: DnzAtWrk (~DnzAtWrk@mobile-access-56734f-193.dhcp.inet.fi)
[19:26:48] *** Joins: macswagger (~cee@cpe-104-34-48-156.socal.res.rr.com)
[19:28:23] <stenno> i don't think its a good idea to do it just as a hobby
[19:28:24] <ThePendulum> nah you'll be fiiiiiiiiiiine
[19:28:33] <stenno> there is nothing really exciting about php
[19:28:37] *** Quits: packet_lozenge (~packet_lo@user/packet-lozenge/x-7125090) (Read error: Connection reset by peer)
[19:28:45] <stenno> and lots of terrible stuff
[19:28:50] <ThePendulum> I think if I'd learn something for the sake of acquiring a new skill I'd go with rust atm
[19:29:01] <ThePendulum> other than javascript
[19:29:04] <stenno> its 'just fine' but then again why settle for the average
[19:29:36] *** Joins: `2jt (~jtomas@10.red-83-58-228.dynamicip.rima-tde.net)
[19:30:13] <ThePendulum> I probably should freshing up my PHP a bit in case I find myself looking for a new job, last time I used it was with php 5.5, codeigniter and laravel I think
[19:30:15] <stenno> i don't think its particularly well suited as a backend language, it just is a standard
[19:30:23] <epolanski> I mean, if your team has experience with php it's fine. Also latest php with symfony is very good for developing backends
[19:30:32] <epolanski> I agree it's a terrible language, but it does have plenty of good software
[19:30:41] <stenno> symfony is great, yeah
[19:30:55] <ThePendulum> is symfony still a humongous beast with an impossible learning curve?
[19:30:59] <stenno> no
[19:30:59] <epolanski> haskell is great but I can hardly think of killer software
[19:31:06] *** Joins: packet_lozenge (~packet_lo@user/packet-lozenge/x-7125090)
[19:31:32] <stenno> i found symfony quite easy to learn, espeecially with previous knowledge with frameworks like rails
[19:31:52] <ThePendulum> at the time it was far too elaborate for what I needed to do and laravel and that cake framework were better balanced, but it might have changed a bit
[19:31:54] <stenno> before symfony 4, it was just another batteries included MVC framework like rails
[19:31:57] <hassoon> wow
[19:32:13] <stenno> nowadays you can program express-like with symfony kernels
[19:32:16] <hassoon> i crashed jsfiddle with 170 MB of html text
[19:32:17] <stenno> if you like
[19:32:28] <ThePendulum> I feel like it wasn't literally called CakePHP but apparently it is, unless there are more than one
[19:32:39] <ThePendulum> hassoon: I can see that
[19:33:06] <stenno> or i should say sinatra-like, as express was inspired by sinatra
[19:33:17] <hassoon> see that ? where
[19:35:23] <corwin> I'm thinking of writing a browswer plugin to replace "inflation" with "price gouging".  Is there already something out there for this?
[19:35:30] *** Quits: pavonia (~user@user/siracusa) (Quit: Bye!)
[19:35:37] *** Quits: macswagger (~cee@cpe-104-34-48-156.socal.res.rr.com) (Ping timeout: 240 seconds)
[19:35:38] <corwin> s/plugin/extention
[19:35:58] <hassoon> corwin: by manipulatind the DO M?
[19:36:07] <hassoon> i mean inflation where ?
[19:36:09] <hassoon> in the DOM ?
[19:36:49] <epolanski> how would such an extension make sense lol
[19:36:53] <stenno> just use a spidermonkey script
[19:37:20] <stenno> err
[19:37:23] <stenno> whats it called
[19:37:33] <stenno> not spidermonkey
[19:37:51] <stenno> greasemonkey
[19:38:28] *** Quits: Cheaterman (~Cheaterma@user/cheaterman) (Ping timeout: 256 seconds)
[19:39:07] *** Quits: taupiqueur (~taupiqueu@142.244.204.77.rev.sfr.net) (Quit: taupiqueur)
[19:47:06] *** Joins: salad (~cucumber@82.76.150.118)
[19:52:08] *** Quits: dmaislin (~dmaislin@047-233-046-055.res.spectrum.com) (Quit: Textual IRC Client: www.textualapp.com)
[19:52:30] *** Joins: dmaislin (~dmaislin@047-233-046-055.res.spectrum.com)
[19:52:30] *** Quits: rev1nchn (~rev1nchn@gateway/vpn/pia/rev1nchn) (Quit: WeeChat 3.4)
[19:55:28] *** Joins: wroathe (~wroathe@206-55-188-8.fttp.usinternet.com)
[19:55:28] *** Quits: wroathe (~wroathe@206-55-188-8.fttp.usinternet.com) (Changing host)
[19:55:28] *** Joins: wroathe (~wroathe@user/wroathe)
[19:59:02] *** Quits: stenno (~stenno@user/stenno) (Ping timeout: 240 seconds)
[19:59:04] <theskillwithin> theres also one called tampermonkey
[19:59:15] *** Quits: thojanssens (~thojansse@49.230.96.140) (Ping timeout: 256 seconds)
[20:00:00] *** Quits: wroathe (~wroathe@user/wroathe) (Ping timeout: 256 seconds)
[20:02:05] *** Quits: D4mned (~D1mned@212.101.251.83) (Ping timeout: 256 seconds)
[20:03:08] <corwin> hassoon: yes, probably.  thanks for the tips stenno
[20:05:10] *** Joins: macswagger (~cee@cpe-104-34-48-156.socal.res.rr.com)
[20:06:05] *** Joins: random-jellyfish (~random-je@user/random-jellyfish)
[20:06:34] *** Joins: lenarhoyt (~lenarhoyt@p200300eec717e000809108ea6415b05b.dip0.t-ipconnect.de)
[20:06:48] *** Quits: eron (~eron@2804:431:c7c2:3848:2c26:bc50:f8a2:a008) (Quit: Client closed)
[20:09:14] *** Joins: D4mned (~D1mned@212.101.251.83)
[20:09:26] *** Joins: lara99 (~lara99@93-36-163-139.ip61.fastwebnet.it)
[20:10:12] *** Quits: macswagger (~cee@cpe-104-34-48-156.socal.res.rr.com) (Ping timeout: 256 seconds)
[20:10:56] *** Joins: Betal (~Betal@user/betal)
[20:16:06] *** Joins: EgonX (~EgonX@2601:2c6:47f:879e:699d:242:fb03:618d)
[20:20:50] <silly> scriptish was the evil one
[20:24:07] <silly> ah no that was stylish
[20:24:25] <silly> https://en.wikipedia.org/wiki/Stylish#Privacy_issues
[20:25:32] *** Quits: qeqeqw (~qeqeqw3@2001:861:3a04:e320:31ea:a59b:1c06:51f4) (Ping timeout: 240 seconds)
[20:25:48] *** Joins: teut (~teut@2401:4900:1c68:6b85:14d9:4273:1b4:ada6)
[20:26:00] <silly> scriptish is dead https://github.com/scriptish/scriptish/issues/287#issuecomment-867268566
[20:26:37] *** Joins: laslmtdwbcs^ (~laslmtdwb@wsip-98-188-242-61.mc.at.cox.net)
[20:27:17] <teut> a = {"a":90 , "b":67},  b = { "b":90, "a":90,}
[20:27:27] <teut> how to check equality?
[20:27:34] <teut> I want true for above case?
[20:28:33] <teut> a = {"a":90 , "b":67},  b = { "b":67, "a":90,}
[20:28:40] <teut> correction
[20:29:37] <systemfault> compare the fields one by one
[20:30:02] <teut> Object.is
[20:30:10] <teut> why doesnt that works?
[20:30:24] *** Joins: neverfindme (~hayden@158.123.160.43)
[20:30:30] <teut> or == or ===?
[20:30:41] *** Quits: neverfindme (~hayden@158.123.160.43) (Max SendQ exceeded)
[20:31:01] *** Joins: neverfindme (~hayden@158.123.160.43)
[20:31:01] *** Quits: croraf (croraf@croraf.ircforever.org) (Remote host closed the connection)
[20:31:18] <systemfault> Object.is is more or less === with small differences...
[20:31:59] *** Quits: interop_madness (~interop_m@user/interop-madness/x-0950004) (Quit: Leaving)
[20:33:14] *** Quits: neverfindme (~hayden@158.123.160.43) (Remote host closed the connection)
[20:33:15] *** Quits: renlo (~Renlo_Ren@pool-108-14-112-182.nycmny.east.verizon.net) (Ping timeout: 256 seconds)
[20:33:19] <systemfault> So, for Object.is(x, y) to return true, x and y must point to the same object
[20:33:31] *** Joins: neverfindme (~hayden@158.123.160.43)
[20:33:59] *** Quits: neverfindme (~hayden@158.123.160.43) (Remote host closed the connection)
[20:33:59] <systemfault> So, you either check manually... or use some library that does it for you
[20:34:23] <silly> !npm deep-equal
[20:34:25] <jellobot> silly, npm.im/deep-equal|2.0.5|2020-12-01|node's assert.deepEqual algorithm
[20:35:01] <silly> this link isn't clickable, who broke it?
[20:35:18] *** Joins: renlo (~Renlo_Ren@pool-108-14-112-182.nycmny.east.verizon.net)
[20:36:05] *** Quits: random-jellyfish (~random-je@user/random-jellyfish) (Ping timeout: 256 seconds)
[20:36:13] <teut> object is js is made up of "shapes" and "objects"
[20:36:19] <teut> in js*
[20:36:26] <teut> I saw a video on it
[20:36:30] <teut> but forgot now
[20:37:13] *** Joins: macswagger (~cee@cpe-104-34-48-156.socal.res.rr.com)
[20:38:13] *** Quits: benni (~benni@p5084a116.dip0.t-ipconnect.de) (Quit: Client closed)
[20:38:21] <teut> https://www.youtube.com/watch?v=5nmpokoRaZI
[20:38:22] <skillbot> YouTube Title: JavaScript Engines: The Good Parts™ - Mathias Bynens & Benedikt Meurer - JSConf EU 2018
[20:38:25] *** Joins: gproto23 (~gproto23@user/gproto23)
[20:45:30] *** Joins: dalek-caan (~Thunderbi@109.252.124.86)
[20:45:43] *** Quits: macswagger (~cee@cpe-104-34-48-156.socal.res.rr.com) (Ping timeout: 256 seconds)
[20:46:01] *** Joins: macswagger (~cee@cpe-104-34-48-156.socal.res.rr.com)
[20:49:07] *** Quits: lenarhoyt (~lenarhoyt@p200300eec717e000809108ea6415b05b.dip0.t-ipconnect.de) (Ping timeout: 256 seconds)
[20:49:47] *** Quits: trevors (~trevors@user/trevors) (Quit: trevors)
[20:50:37] *** Quits: macswagger (~cee@cpe-104-34-48-156.socal.res.rr.com) (Ping timeout: 240 seconds)
[20:50:50] <ljharb> teut: that's not in JS, that's in v8
[20:50:52] *** dostoyev1ky2 is now known as dostoyevsky2
[20:51:02] *** Quits: sam_1 (~sam_1@c-xd520f2a9.cust.hiper.dk) (Ping timeout: 240 seconds)
[20:51:03] <teut> whats the difference?
[20:51:04] <ljharb> or possibly even most engines. but engine implementation details aren't part of the language.
[20:51:15] *** Joins: stenno (~stenno@user/stenno)
[20:51:17] <ljharb> teut: the difference is that language devs rarely need to know about how the engine is implemented
[20:51:22] <ljharb> silly: it's clickable in my client
[20:52:28] <teut> if you dont know the implementation then how can you know what is happening in the code?
[20:52:57] <teut> merely reading an api spec doesnt tell you about the behaviour
[20:53:03] <ljharb> teut: yes it does?
[20:53:11] <ljharb> teut: the spec's entire purpose is to describe the behavior
[20:53:19] <ljharb> teut: the implementation is just "how it does that""
[20:53:34] <ljharb> obv you need to know when the implementation violates the spec. but that's not the same as needing to know how memory is organized, or something.
[20:53:38] <teut> writing good docs is hard
[20:53:43] <teut> very hard
[20:53:53] <ljharb> sure. it's also hard for the implementation. that statement doesn't change anything.
[20:54:28] *** Joins: wroathe (~wroathe@206-55-188-8.fttp.usinternet.com)
[20:54:28] *** Quits: wroathe (~wroathe@206-55-188-8.fttp.usinternet.com) (Changing host)
[20:54:28] *** Joins: wroathe (~wroathe@user/wroathe)
[20:54:48] <silly> ljharb, i get https://www.npmjs.com/deep-equal%7C2.0.5%7C2020-12-01%7Cnode's
[20:54:59] <silly> this wasn't the case a while ago
[20:55:40] <stenno> deep equal is code smell
[20:55:54] <ljharb> not in tests.
[20:56:07] <stenno> ok
[20:56:17] <ljharb> silly: the formatting changed a month ago or so, sure. but the `|` can't be part of a URL, so it seems like your client's URL detection is broken. what client is it?
[20:56:31] <teut> I need to check if two states are equal in react
[20:56:41] <teut> initial state vs the final state
[20:56:48] <silly> looks like 3 months
[20:56:52] <stenno> luckily records and tuples will address that
[20:56:56] <silly> hexchat
[20:57:01] <teut> based on that I need to show the  Update button
[20:58:02] *** Quits: CiaoSen (~Jura@p200300c95737a2002a3a4dfffe84dbd5.dip0.t-ipconnect.de) (Ping timeout: 240 seconds)
[20:58:28] <silly> should i rather fix it in hexchat?
[20:59:45] <stenno> so can it handle https://test.com?bla=23 ?
[21:00:03] <stenno> so can it handle https://test.com/foo?bar
[21:00:32] <ljharb> silly: i mean, if possible that's ideal. otherwise we have to change it to a space or something
[21:00:45] <ljharb> stenno: the issue is that it's not treating `|` as a boundary character
[21:01:00] <ljharb> that can happen with `.`, but a dot's part of a real URL, a pipe really isn't
[21:01:07] <stenno> right
[21:01:14] <silly> imo, space delimited would be more readable
[21:01:50] *** Joins: sudomann (~sudomann@2601:543:100:4fc8:f023:de31:af4a:c8a4)
[21:01:58] <teut> https://bpa.st/LNCQ
[21:02:03] <teut> why doesnt this work?
[21:03:02] *** Quits: sudomannn (~sudomann@2601:543:100:4fc8:4013:3b0f:7a2e:ec43) (Ping timeout: 240 seconds)
[21:03:10] *** Joins: Akiva (~Akiva@user/Akiva)
[21:03:16] <ljharb> silly: `npm.im/deep-equal 2.0.5 2020-12-01 node's assert.deepEqual algorithm` doesn't seem more readable to me tbh
[21:03:33] <ljharb> silly: `npm.im/deep-equal 2.0.5 2020-12-01|node's assert.deepEqual algorithm` isn't bad tho. want to make a PR?
[21:03:38] <silly> oh yes, you're right
[21:04:02] <silly> i already made the one with spaces
[21:04:26] <silly> i'll change it to 1st space and the rest with |
[21:04:44] <silly> npm.im/deep-equal 2.0.5|2020-12-01|node's assert.d...
[21:05:20] *** Joins: corgi (~corgi@c-71-202-47-75.hsd1.ca.comcast.net)
[21:05:20] *** Quits: corgi (~corgi@c-71-202-47-75.hsd1.ca.comcast.net) (Changing host)
[21:05:20] *** Joins: corgi (~corgi@user/corgi)
[21:05:49] *** Quits: vbgunz_ (~vbgunz@35.141.71.47) (Remote host closed the connection)
[21:05:52] *** Joins: FlorianBad (~FlorianBa@cpe-67-49-107-16.dc.res.rr.com)
[21:06:18] *** Joins: vbgunz (~vbgunz@35.141.71.47)
[21:06:28] <FlorianBad> I suppose there is no way to get the mouse location in a 'wheel' event? We have to put a separate 'mousemove' event and store that?
[21:07:26] *** Quits: Goreng (~Goreng@202.138.250.1) (Quit: Leaving)
[21:10:27] <silly> npm.im/deep-equal | 2.0.5 | 2020-12-01 | node's assert.d...
[21:10:33] <silly> how about this ^
[21:10:41] <silly> would be a little easier
[21:10:46] <silly> to fix :P
[21:11:24] <ljharb> silly: makes things too long
[21:11:32] <ljharb> silly: the point is to maximize available space
[21:11:38] <silly> i was afraid you'd say that
[21:12:17] *** Quits: Akiva (~Akiva@user/Akiva) (Ping timeout: 240 seconds)
[21:12:42] *** Joins: qeqeqw (~qeqeqw3@2001:861:3a04:e320:31ea:a59b:1c06:51f4)
[21:12:48] <silly> n> [1,2,3].join('|').replace('|', ' ') @wfm
[21:12:49] <jellobot> wfm, '1 2|3'
[21:18:13] *** Joins: macswagger (~cee@cpe-104-34-48-156.socal.res.rr.com)
[21:20:54] *** Joins: mat001 (~mat001@c-69-181-155-247.hsd1.ca.comcast.net)
[21:20:55] *** Joins: Alexendoo_ (~Alex@144.21.50.247)
[21:22:17] *** Quits: macswagger (~cee@cpe-104-34-48-156.socal.res.rr.com) (Ping timeout: 240 seconds)
[21:22:25] *** Joins: junebug (~junebug@2600:1700:3db0:2540:4e3:df57:7d31:56b1)
[21:22:32] *** Quits: Alexendoo (~Alexendoo@macleod.io) (Quit: ␄)
[21:22:32] *** Alexendoo_ is now known as Alexendoo
[21:23:06] *** Joins: CiaoSen (~Jura@p200300c95737a2002a3a4dfffe84dbd5.dip0.t-ipconnect.de)
[21:23:44] *** Quits: corgi (~corgi@user/corgi) (Quit: o_O)
[21:24:43] *** Joins: trevors (~trevors@user/trevors)
[21:26:14] *** Quits: DnzAtWrk (~DnzAtWrk@mobile-access-56734f-193.dhcp.inet.fi) (Quit: Leaving)
[21:28:13] *** Quits: ezzieyguywuf (~Unknown@user/ezzieyguywuf) (Ping timeout: 256 seconds)
[21:28:27] *** Joins: sheetjs (~sheetjs@user/sheetjs)
[21:30:11] *** Joins: pileatedx (~textual@cpe-67-241-68-204.twcny.res.rr.com)
[21:30:23] *** Quits: D4mned (~D1mned@212.101.251.83) (Remote host closed the connection)
[21:30:44] *** Quits: henry40408 (~henry4040@175.181.155.165) (Remote host closed the connection)
[21:31:18] *** Joins: henry40408 (~henry4040@175.181.155.165)
[21:31:57] *** lf94- is now known as lf94
[21:32:48] <mknod> https://jsfiddle.net/e0y6u78w/
[21:33:05] <mknod> I don't get the same result on Google Apps Script. Why is so?
[21:33:45] <mknod> Expected output is: 1 needed cleanup. / 2 needed cleanup.
[21:34:04] *** Quits: dalek-caan (~Thunderbi@109.252.124.86) (Quit: dalek-caan)
[21:34:24] <mknod> Google gives me an extra "undefined needed cleanup."
[21:35:58] *** Joins: D4mned (~D1mned@212.101.251.83)
[21:36:16] <mknod> I'm trying to keep track of which spreadsheet ranges have already been trimWhitespaces()'d. Not completely sure about using such a range (object) as a key for the map.
[21:37:33] <stenno> keep in mind that comparison of Maps with .has and the like only work if the reference of the object is the same
[21:37:57] <stenno> so like, it works in your fiddle simply because you are using the same reference to the object that you added
[21:38:04] <stenno> for lookup
[21:38:20] <mknod> That's the point... I guess.
[21:38:30] *** Quits: wroathe (~wroathe@user/wroathe) (Ping timeout: 250 seconds)
[21:38:49] <mknod> I may call someFunction multiple times on the same range, but only want it to be cleaned up once.
[21:39:31] <mknod> Now, Google's JS interpreter doesn't behave as expected.
[21:41:16] *** Joins: silverdust (~silverdus@user/silverdust)
[21:41:36] <hassoon> corwin: sure you can do it
[21:42:10] <hassoon> corwin: just anipualte your DOM carefully, dunno what that thingy stenno said is anyway, maybe it's better, up to you to try it and see
[21:42:16] <hassoon> just manipulate *
[21:42:34] <mknod> Oh, I'm dumb once again. someFunction() is run once without arguments because Google Apps Script always want to call a function when running a script.
[21:42:49] <mknod> Hence the undefined.
[21:44:46] <mknod> That was a small experiment because in the actual script I get "TypeError: Cannot read property 'has' of undefined", which makes no sense since isClean is declared the exact same way as in the snippet above.
[21:44:55] *** Joins: moti86 (~moti86@223.190.91.71)
[21:45:44] *** Quits: moti86 (~moti86@223.190.91.71) (Client Quit)
[21:45:52] *** Quits: Codaraxis_ (~Codaraxis@user/codaraxis) (Ping timeout: 250 seconds)
[21:46:39] *** Joins: wroathe (~wroathe@206-55-188-8.fttp.usinternet.com)
[21:46:39] *** Quits: wroathe (~wroathe@206-55-188-8.fttp.usinternet.com) (Changing host)
[21:46:39] *** Joins: wroathe (~wroathe@user/wroathe)
[21:50:57] *** Quits: wroathe (~wroathe@user/wroathe) (Ping timeout: 240 seconds)
[21:51:26] *** Quits: pileatedx (~textual@cpe-67-241-68-204.twcny.res.rr.com) (Quit: pileatedx)
[21:51:28] *** Joins: croraf (croraf@croraf.ircforever.org)
[21:52:35] *** Joins: random-jellyfish (~random-je@user/random-jellyfish)
[21:54:14] *** Joins: Akiva (~Akiva@user/Akiva)
[21:54:58] *** Joins: Tobbi (~Tobbi@2a02:8108:1240:48ec:bc04:150b:5ca9:e842)
[21:59:17] *** Quits: Akiva (~Akiva@user/Akiva) (Ping timeout: 240 seconds)
[22:02:22] <mknod> stenno, so yeah, it didn't work because the reference would change every time. I solved it by generating a unique sheet/range key as a string for the map. Thanks for your input.
[22:02:41] <stenno> nice, gj
[22:03:17] <stenno> mknod: in that regard, check out the records and tuples proposal
[22:04:11] <stenno> it works great with Maps and Sets
[22:05:14] <stenno> for some reason i thought it was in stage-3 of the process, but its stage-2?
[22:05:18] <stenno> did it get set back?
[22:05:54] <stenno> maybe i am just misremembering
[22:06:11] <ljharb> it was never stage 3
[22:06:17] <stenno> ok
[22:06:18] <ljharb> definitely too early to be used.
[22:07:46] *** Quits: junebug (~junebug@2600:1700:3db0:2540:4e3:df57:7d31:56b1) (Quit: Leaving)
[22:07:58] <stenno> pity
[22:10:05] *** Joins: fef (~thedawn@user/thedawn)
[22:16:13] *** Quits: iomari891 (~iomari891@197.210.70.132) (Quit: WeeChat 3.3)
[22:17:07] *** Quits: epolanski (uid312403@id-312403.helmsley.irccloud.com) (Quit: Connection closed for inactivity)
[22:19:50] *** Joins: ezzieyguywuf (~Unknown@user/ezzieyguywuf)
[22:20:23] <silly> oh, jellobot test don't pass b/c me \o/
[22:22:58] <systemfault> Commit sudoku!
[22:23:24] <systemfault> I didn't know Jellobot had tests...
[22:23:27] <silly> oh i can do that
[22:23:50] <silly> but wait, gotta figure this out first
[22:24:20] <systemfault> Ah, you're not talking about Jellobot tests (I could not see any test file in the Jellobot repo) but something else
[22:24:21] <silly> where's qswz when you need him?
[22:24:37] <silly> https://github.com/ljharb/jellobot/runs/4872460888?check_suite_focus=true
[22:24:50] <systemfault> Oopsie
[22:25:09] <systemfault> Just saw that plugins do have tests
[22:27:09] *** Joins: audiobirb (~audio@user/audio)
[22:28:27] <silly> oh, success sucks less \o/
[22:29:17] <silly> how do you clone from github so that git push works ootb?
[22:29:45] <silly> right now i do `git push ssh://git@github.com/sillyslux/jellobot`
[22:29:54] <KevinX> silly you want to create a branch on your own fork then use that branch to make a PR
[22:30:08] <KevinX> Then when you push to it, the PR will update
[22:30:33] <KevinX> Also, why not put some more effort into your title, description, commit messages, etc
[22:30:33] <silly> yea, when i git clone my repo, git push will try to push to https://github...
[22:30:48] <silly> but that doesn't work anymore
[22:31:23] <KevinX> it says you made a force push 3 minutes ago
[22:31:28] <silly> yes
[22:31:54] <silly> is that bad?
[22:32:15] <KevinX> not necessarily, but you're saying you can't push anything
[22:32:22] <stenno> where _is_ qswz?
[22:32:28] <silly> stenno, !
[22:32:31] <silly> :(
[22:32:41] <silly> i don't wanna stalk him :/
[22:32:46] <stenno> well me neither lol
[22:32:53] <silly> but i'll do if you want me to
[22:32:59] <silly> so i could blame you then
[22:33:03] <stenno> just haven't seen him around in the last few weeks
[22:33:05] <stenno> lol
[22:33:43] <systemfault> Ask the owner of the repo then
[22:34:35] <silly> git clone ssh://git@github.com/sillyslux/jellobot
[22:34:45] <silly> now git push seems ok
[22:34:48] *** Joins: lantech19446 (~lantech19@144.202.10.138)
[22:35:00] *** Parts: lantech19446 (~lantech19@144.202.10.138) (WeeChat 3.2)
[22:35:12] <silly> otherwise you'd have to fix git remote for every clone from github, right?
[22:35:39] <silly> jeez, go back to 0, start all over (╯°□°)╯︵ ┻━┻
[22:36:57] *** Joins: yassernasc (~yassernas@ec2-54-87-145-249.compute-1.amazonaws.com)
[22:37:18] *** Quits: undefined_bob (~undefined@user/undefined-bob/x-5411918) (Ping timeout: 276 seconds)
[22:38:07] <D4mned> who are we stalking
[22:38:38] <sheetjs> there's a github issue from a #javascript denizen that needs upvotes
[22:40:01] <silly> if you're talking about me lol, no it's not that urgent
[22:40:20] <silly> just klick the thumbs up here https://github.com/microsoft/vscode/issues/140971
[22:40:25] <sheetjs> the system is unnecessarily brigade-driven
[22:40:28] <silly> and ask mom to do that too
[22:40:30] <sheetjs> concentrate on one issue
[22:40:55] <sheetjs> https://github.com/microsoft/vscode/issues/140007 so the system seems to be
[22:41:09] <sheetjs> "The community has 60 days to upvote the issue. If it receives 20 upvotes we will move it to our backlog. If not, we will close it. "
[22:41:16] <silly> you want me to change 140007 into something else?
[22:41:19] *** Quits: `2jt (~jtomas@10.red-83-58-228.dynamicip.rima-tde.net) (Ping timeout: 256 seconds)
[22:41:19] *** Quits: random-jellyfish (~random-je@user/random-jellyfish) (Ping timeout: 256 seconds)
[22:41:40] <silly> i thought i shouldn't do that
[22:41:41] <sheetjs> one issue has 8 upvotes -> 12 left, the other has 1 upvote -> 19 left
[22:41:56] <silly> issue highjacking ol
[22:42:04] <sheetjs> prima facie, it would be easier to drum up 12 votes than 19
[22:44:00] <silly> damn... i'm stuck in "do, don't, do, don't" loop, might be best to go to sleep now :(
[22:45:05] *** Quits: Haxxa (~Haxxa@202-144-174-197.ip4.superloop.com) (Quit: Haxxa flies away.)
[22:45:35] *** Joins: dpuerto (~dpuerto@136-27-83-52.cab.webpass.net)
[22:46:31] <silly> oh i missed the best parts of the russian spacewalk
[22:47:19] *** Joins: Haxxa (~Haxxa@202-144-174-197.ip4.superloop.com)
[22:48:14] *** Joins: `2jt (~jtomas@10.red-83-58-228.dynamicip.rima-tde.net)
[22:48:19] *** Joins: undefined_bob (~undefined@user/undefined-bob/x-5411918)
[22:48:21] *** Quits: fef (~thedawn@user/thedawn) (Ping timeout: 276 seconds)
[22:48:39] *** Quits: TomyWork (~TomyLobo@p200300e80f006700f55970884699e0c8.dip0.t-ipconnect.de) (Quit: Leaving)
[22:50:00] *** Quits: dpuerto (~dpuerto@136-27-83-52.cab.webpass.net) (Ping timeout: 250 seconds)
[22:50:29] *** Joins: Akiva (~Akiva@user/Akiva)
[22:52:39] <ljharb> yassernasc: you need to auth with nickserv for non-ops to see what you say. see the last link in the topic.
[22:52:54] <ljharb> silly: make a PR and i'll take a look
[22:53:37] *** Quits: `2jt (~jtomas@10.red-83-58-228.dynamicip.rima-tde.net) (Ping timeout: 240 seconds)
[22:54:01] *** Joins: dpuerto (~dpuerto@136-27-83-52.cab.webpass.net)
[22:54:04] *** Joins: yagamilito (~yagamilit@2601:642:4600:34b0:6856:6213:cbb4:b196)
[22:54:11] <silly> https://github.com/ljharb/jellobot/pull/10
[22:56:11] <silly> but really, did i miss something? after `git clone https://github.com/something` you have to fix git remote nowadays?
[22:56:30] <silly> for ssh
[22:58:14] <KevinX> no. did you clone your fork?
[22:58:52] <KevinX> fork -> clone -> branch -> pr
[22:59:06] <KevinX> then when you commit to your branch the PR will update
[22:59:06] <silly> yes, after cloning from https://github.com/... i can just run git push
[22:59:19] <silly> i have to fix git remote first
[22:59:28] <KevinX> push* not just commit
[22:59:42] <KevinX> What was the remote previously?
[22:59:48] <silly> you don't have to fix remote for commit
[23:00:10] <silly> when you clone from https... the remote is https...
[23:00:43] <sheetjs> `git remote set-url`
[23:00:47] <KevinX> oh, i don't know about that specifically as.I just use gh now, but I doubt it?
[23:00:53] <silly> when i clone from ssh://git@github.com.... git remote is ok
[23:00:59] *** Quits: yagamilito (~yagamilit@2601:642:4600:34b0:6856:6213:cbb4:b196) (Quit: Client closed)
[23:01:17] <silly> gh is their cli tool?
[23:01:30] <sheetjs> recently had issues pushing to github -- turns out they invalidated a bunch of auth tokens
[23:01:52] <KevinX> gh is their cli tool, yes
[23:02:27] <KevinX> Yeah it's likely an auth issue I'd guess
[23:03:48] <silly> KevinX, what output do you get from `git remote -v` in one of your gh clones?
[23:04:12] <KevinX> one sec. I'll fork the bot and clone it
[23:04:12] <silly> http or ssh urls?
[23:05:36] <KevinX> git@github.com:...
[23:05:47] <silly> last time i've used github was 3 weeks ago and i remember the same pita vaguely
[23:06:06] <silly> yea and you have to use username git, so stupid
[23:06:36] <silly> git@github.com is the short form for ssh iirc
[23:06:38] <KevinX> do you get an error?
[23:06:46] <silly> no longer
[23:07:01] <silly> we'll see in 3 weeks when i forgot again ::/
[23:09:34] <KevinX> using https it only sets origin for me, not upstream
[23:09:41] <silly> git protocol always confused me
[23:09:45] <KevinX> but I can still push a new branch to origin
[23:09:55] <silly> via https?
[23:10:05] <silly> weird, i get an error for that
[23:10:12] <KevinX> yes
[23:10:22] *** Quits: qeqeqw (~qeqeqw3@2001:861:3a04:e320:31ea:a59b:1c06:51f4) (Ping timeout: 250 seconds)
[23:10:39] *** Joins: summersault (~summersau@179.221.251.36)
[23:12:06] *** Joins: Codaraxis (~Codaraxis@user/codaraxis)
[23:12:31] *** Joins: Codaraxis_ (~Codaraxis@user/codaraxis)
[23:12:42] <silly> so i have https: git: and these two are the same: ssh://git@github.com and git@github.com: and local paths of course
[23:13:02] <KevinX> what error do you get?
[23:13:30] <silly> nothing now
[23:14:09] *** Quits: summersault (~summersau@179.221.251.36) (Remote host closed the connection)
[23:14:20] <KevinX> it just prints nothing but doesnt push changes?
[23:14:42] *** Joins: Codaraxis__ (~Codaraxis@user/codaraxis)
[23:14:55] <silly> first it was this with https: remote: Support for password authentication was removed on August 13, 2021. Please use ...
[23:15:17] <KevinX> ah right, i think everyone got that
[23:15:19] <silly> then i got silly@github.com: Permission denied (publickey)
[23:15:33] <silly> wrong username
[23:16:00] *** Quits: dpuerto (~dpuerto@136-27-83-52.cab.webpass.net) (Ping timeout: 250 seconds)
[23:16:38] *** Quits: Codaraxis (~Codaraxis@user/codaraxis) (Ping timeout: 256 seconds)
[23:16:41] <silly> this is soo offtopic, i'd ban me myself now if i could
[23:17:46] *** Quits: Codaraxis_ (~Codaraxis@user/codaraxis) (Ping timeout: 256 seconds)
[23:18:33] *** Joins: summersault (~summersau@179.221.251.36)
[23:20:52] *** Quits: summersault (~summersau@179.221.251.36) (Remote host closed the connection)
[23:24:00] *** Joins: ryzenda (~ryzenda@pool-74-109-246-70.pitbpa.fios.verizon.net)
[23:29:43] *** Joins: summersault (~summersau@179.221.251.36)
[23:36:00] *** Quits: DevAntoine (~DevAntoin@2a01:e34:ec18:50c0:5c5b:f4e6:6fc3:e08e) (Remote host closed the connection)
[23:37:20] *** Joins: Guest19 (~Guest19@2601:647:5280:2a50:5006:f150:c832:5e73)
[23:39:29] *** Quits: Booster2ooo (~Booster2o@user/booster2ooo) (Read error: Connection reset by peer)
[23:40:50] *** kzootick is now known as kzootock
[23:40:53] *** kzootock is now known as kzootech
[23:41:12] *** Joins: qeqeqw (~qeqeqw3@2001:861:3a04:e320:31ea:a59b:1c06:51f4)
[23:41:38] *** Quits: ryzenda (~ryzenda@pool-74-109-246-70.pitbpa.fios.verizon.net) (Remote host closed the connection)
[23:42:40] *** wez_ is now known as wez
[23:43:39] *** Quits: summersault (~summersau@179.221.251.36) (Remote host closed the connection)
[23:47:58] *** Joins: nomad1 (~nomad@user/spacenomad)
[23:49:53] *** Quits: renlo (~Renlo_Ren@pool-108-14-112-182.nycmny.east.verizon.net) (Ping timeout: 256 seconds)
[23:55:26] *** Quits: nomad1 (~nomad@user/spacenomad) (Ping timeout: 250 seconds)
[23:59:07] *** Joins: nomad1 (~nomad@user/spacenomad)
[23:59:12] *** Joins: summersault (~summersau@179.221.251.36)
[23:59:15] *** Quits: yassernasc (~yassernas@ec2-54-87-145-249.compute-1.amazonaws.com) (Remote host closed the connection)
[23:59:34] *** Joins: dpuerto (~dpuerto@136-27-83-52.cab.webpass.net)
