[00:02:53] *** Joins: cwebber (~user@user/cwebber)
[00:10:50] *** Quits: gproto23 (~gproto23@user/gproto23) (Remote host closed the connection)
[00:11:10] *** Joins: gproto23 (~gproto23@user/gproto23)
[00:11:41] *** Quits: igemnace (~ian@user/igemnace) (Ping timeout: 268 seconds)
[00:22:15] *** Joins: machinedgod (~machinedg@24.105.81.50)
[00:25:33] *** Joins: sec^nd (~sec^nd@gateway/tor-sasl/secnd/x-45171752)
[00:34:09] *** Quits: ___nick___ (~quassel@cpc68286-cdif17-2-0-cust533.5-1.cable.virginm.net) (Ping timeout: 256 seconds)
[00:44:07] <Disconsented> Am I crazy or does there some to be a trend towards ChaCha and derivatives?
[00:45:01] *** Joins: gabriel1__ (~gabriel1@mail.virebent.art)
[00:45:15] *** Quits: gabriel1_ (~gabriel1@mail.virebent.art) (Remote host closed the connection)
[00:46:47] <maroon> Disconsented, apparently it's much faster on wimpy cpu's like phones have
[00:47:29] <Disconsented> Yeah its snappy but AES accellerators are pretty common
[00:48:13] <maroon> AES instructions are in some desktop chips, but i dont think they put them into phones
[00:48:58] *** Quits: holgersson (~quassel@user/holgersson) (Quit: “Format C:........[Done]“)
[00:49:17] <Disconsented> Qualcomm has had it since 2014 with the 805
[00:50:08] <maroon> now that *chacha is out there, it's an excuse for nobody else to add AES stuff onto their chips
[00:50:28] <dostoyevsky2> maroon: ARM has a crypto module, which can be part of the chip... apple has used it for a while e.g
[00:56:48] <dostoyevsky2> Not sure if something like the pine phone has it though
[01:00:10] <dostoyevsky2> or even a rpi
[01:05:37] <Alipha> Disconsented: chacha20 is just about as fast as hardware AES. So you can either be fast all the time with chacha20. Or only be fast some of the time with AES. And software AES is vulnerable to side channel attacks
[01:05:59] <Disconsented> Yeah I'm aware
[01:06:18] *** Joins: menace (~someone@ppp-93-104-186-58.dynamic.mnet-online.de)
[01:06:26] <Alipha> xchacha20 (and xsalsa20) also have large nonces, which is safer/simpler
[01:06:37] *** Quits: menace (~someone@ppp-93-104-186-58.dynamic.mnet-online.de) (Changing host)
[01:06:37] *** Joins: menace (~someone@user/menace)
[01:06:39] *** menace is now known as Deknos
[01:08:02] *** Joins: _mikey (~mikey@user/mikey/x-4335048)
[01:11:35] *** Joins: xenoterracide_ (~xenoterra@2600:1700:71d4:810:101f:cf82:e73c:f52b)
[01:18:00] *** Joins: holgersson (~quassel@user/holgersson)
[01:28:17] *** Quits: FlorianBad (~FlorianBa@cpe-67-49-107-16.dc.res.rr.com) (Quit: Client closed)
[01:31:03] *** Quits: cvmn (~caveman@gateway/tor-sasl/caveman) (Ping timeout: 276 seconds)
[01:33:20] *** Quits: xenoterracide_ (~xenoterra@2600:1700:71d4:810:101f:cf82:e73c:f52b) (Remote host closed the connection)
[01:34:39] *** Joins: xenoterracide_ (~xenoterra@2600:1700:71d4:810:101f:cf82:e73c:f52b)
[01:35:49] *** Quits: andreasbuhr (~quassel@p549db3ef.dip0.t-ipconnect.de) (Quit: https://quassel-irc.org - Chat comfortably. Anywhere.)
[01:37:09] *** Quits: xzr (xzar@shell.troopers.fi) (Ping timeout: 265 seconds)
[01:37:55] <maroon> Assuming that a someone has made a logjam attack against the 1024-bit group-2 DH safe prime in RFC 2412 has solved it, does the Pollard-Rho attack make it easier for an attack against a nearby number, than another safe prime significantly different?
[01:38:15] <maroon> i.e. if the group-2 safe prime is changed so that the 0x65381 near the ending is changed to be 0x7edd3, that's also another safe prime. So, would the 1st computation solving safe prime#1 help against the safe prime#2, or it's no help because the 'order' is different?
[01:38:57] *** Quits: xenoterracide_ (~xenoterra@2600:1700:71d4:810:101f:cf82:e73c:f52b) (Ping timeout: 240 seconds)
[01:41:31] <halosghost> maroon: they're in many armv8 chips at least
[01:41:37] <halosghost> maroon: so, newer phones often have AES accel
[01:41:45] *** Joins: dude12312414 (~test@gateway/tor-sasl/dude12312414)
[01:41:47] <halosghost> (my pinebook pro has AES accel, for example)
[01:44:07] *** Quits: citizen_stig (~citizen_s@2001:982:9f64:1:5cea:3a87:f03f:9696) (Quit: My MacBook has gone to sleep. ZZZzzz…)
[01:46:42] <maroon> how does the accelerated AES's power drain compare to that of xsalsa though?
[01:48:23] *** Quits: dez (uid92154@user/dez) (Quit: Connection closed for inactivity)
[01:48:33] <halosghost> that I don't know (the more accurate representation of the above is that my pinebook pro would have AES accel if it booted properly, but I've not gotten around to fixing that yet 😛)
[01:48:57] <TimMc> lol
[01:50:18] <halosghost> TimMc: what? I have a long to-do list ☺
[01:50:49] *** Quits: gabriel1__ (~gabriel1@mail.virebent.art) (Remote host closed the connection)
[01:50:49] <TimMc> Oh, big mood for sure.
[01:50:52] <halosghost> though, I really do need to get around to doing that… the machine the pbp is intended to replace is… struggling
[01:51:26] <halosghost> I am, in-parallel, slowly working on getting an old x201 setup to my liking
[01:51:29] <halosghost> so, I'll have a backup machine
[01:54:37] *** Quits: ic3blx_ (~ic3blx___@user/ic3blx/x-0942740) (Ping timeout: 240 seconds)
[02:01:13] *** Joins: gabriel1 (~gabriel1@user/gabriel1)
[02:04:17] *** Joins: ic3blx_ (~ic3blx___@87.116.166.221)
[02:04:17] *** Quits: ic3blx_ (~ic3blx___@87.116.166.221) (Changing host)
[02:04:17] *** Joins: ic3blx_ (~ic3blx___@user/ic3blx/x-0942740)
[02:06:48] *** Quits: Sofia (~sofia@gateway/tor-sasl/sofia) (Ping timeout: 276 seconds)
[02:07:39] *** Quits: gproto23 (~gproto23@user/gproto23) (Ping timeout: 256 seconds)
[02:07:44] *** Quits: byteskeptical (~amnesia@user/byteskeptical) (Quit: leaving)
[02:08:25] *** Quits: Guyver2 (~Guyver@guyver2.xs4all.nl) (Quit: Going offline, see ya! (www.adiirc.com))
[02:09:56] *** Joins: hlauk (~hlauk@176.33.108.116)
[02:12:47] *** Quits: mouseghost (~draco@user/mouseghost) (Quit: mew wew)
[02:13:20] *** Quits: Tangent-Man (~Tang3nt-M@cpc145602-basl14-2-0-cust33.20-1.cable.virginm.net) (Quit: Leaving)
[02:13:38] *** Joins: citizen_stig (~citizen_s@2001:982:9f64:1:698f:e7ca:cd51:5f39)
[02:14:10] *** Quits: citizen_stig (~citizen_s@2001:982:9f64:1:698f:e7ca:cd51:5f39) (Client Quit)
[02:15:02] *** Joins: Sofia (~sofia@gateway/tor-sasl/sofia)
[02:23:01] *** Quits: Neoon (~Neoon@2607:5300:60:23a5::1111) (Ping timeout: 240 seconds)
[02:24:18] *** Joins: teal (~teal@2600:1700:80:22d0::f)
[02:26:55] *** Quits: hlauk (~hlauk@176.33.108.116) (Quit: Leaving)
[02:29:39] *** Joins: teal_ (~teal@2600:1700:80:22d0::f)
[02:30:37] *** Quits: teal (~teal@2600:1700:80:22d0::f) (Ping timeout: 240 seconds)
[02:34:07] *** Quits: zro (~zro@user/zro) (Quit: WeeChat 3.4)
[02:41:24] *** Joins: Major_Biscuit (~MajorBisc@86-88-79-148.fixed.kpn.net)
[02:43:49] *** Joins: TheCoffeMaker (~TheCoffeM@user/thecoffemaker)
[02:43:54] *** Joins: Maxattax97 (~max@2603:300f:b9f:2000::b278)
[02:47:43] *** Joins: Neoon (~Neoon@2607:5300:60:23a5::1111)
[02:53:02] *** Quits: HifiKuno (~HifiKuno@167-179-170-202.a7b3aa.bne.nbn.aussiebb.net) (Ping timeout: 240 seconds)
[02:53:40] *** Quits: Malvolio (~Malvolio@user/malvolio) ()
[02:54:10] *** Quits: TheCoffeMaker (~TheCoffeM@user/thecoffemaker) (Ping timeout: 250 seconds)
[02:54:34] *** Quits: smach (~savio@177.12.44.211) (Read error: Connection reset by peer)
[02:54:41] *** Quits: Major_Biscuit (~MajorBisc@86-88-79-148.fixed.kpn.net) (Ping timeout: 256 seconds)
[02:56:42] *** Joins: TheCoffeMaker (~TheCoffeM@user/thecoffemaker)
[02:58:27] *** Joins: Malvolio (~Malvolio@user/malvolio)
[02:59:37] *** Quits: Maxattax97 (~max@2603:300f:b9f:2000::b278) (Remote host closed the connection)
[03:02:37] *** Quits: machinedgod (~machinedg@24.105.81.50) (Ping timeout: 240 seconds)
[03:07:31] *** Joins: igemnace (~ian@user/igemnace)
[03:11:16] *** Quits: weyhmueller (~weyhmuell@blofeld.nc.w9r.de) (Quit: ZNC 1.8.2 - https://znc.in)
[03:21:46] *** Joins: weyhmueller (~weyhmuell@blofeld.nc.w9r.de)
[03:24:48] *** Quits: kish` (~aqua@user/aqua) (Ping timeout: 276 seconds)
[03:26:33] *** Joins: kish` (~aqua@user/aqua)
[03:26:52] *** Quits: kish` (~aqua@user/aqua) (Remote host closed the connection)
[03:27:13] *** Joins: kish` (~aqua@user/aqua)
[03:38:02] *** Quits: ic3blx_ (~ic3blx___@user/ic3blx/x-0942740) (Remote host closed the connection)
[03:48:37] *** Quits: gabriel1 (~gabriel1@user/gabriel1) (Remote host closed the connection)
[03:48:38] *** Joins: ic3blx_ (~ic3blx___@87.116.166.221)
[03:48:38] *** Quits: ic3blx_ (~ic3blx___@87.116.166.221) (Changing host)
[03:48:38] *** Joins: ic3blx_ (~ic3blx___@user/ic3blx/x-0942740)
[03:48:57] <halosghost> maroon: though, actually, I can say that I was using the pbp with FDE (LUKS) using AES, and it idled at ~4W and peaked at 8W
[03:49:12] *** Joins: gabriel1 (~gabriel1@user/gabriel1)
[03:49:29] <halosghost> and that peak usage was my doing crazy things like trying to compile linux while watching a 4K video (things that the pbp was absolutely not designed to do)
[03:49:32] <halosghost> so, quite reasonable
[03:50:22] <halosghost> (it resulted in roughly equivalent battery-life to what other people who were not booting with LUKS typically reported: ~9ish hours)
[03:55:39] *** Quits: ic3blx_ (~ic3blx___@user/ic3blx/x-0942740) (Remote host closed the connection)
[03:56:04] *** Quits: gabriel1 (~gabriel1@user/gabriel1) (Remote host closed the connection)
[03:57:37] *** Quits: bgs (~bgs@cpe-212-85-160-171.cable.telemach.net) (Ping timeout: 240 seconds)
[04:00:17] *** Joins: bgs (~bgs@cpe-212-85-160-171.cable.telemach.net)
[04:05:23] *** Joins: ic3blx_ (~ic3blx___@87.116.179.30)
[04:05:24] *** Quits: ic3blx_ (~ic3blx___@87.116.179.30) (Changing host)
[04:05:24] *** Joins: ic3blx_ (~ic3blx___@user/ic3blx/x-0942740)
[04:13:57] *** Quits: Wulf (~Wulf@user/wulf) (Ping timeout: 240 seconds)
[04:15:52] *** Joins: Wulf (~Wulf@user/wulf)
[04:21:07] *** Joins: eneeigriega (~eneeigrie@189.163.73.132)
[04:22:28] *** Quits: eneeigriega (~eneeigrie@189.163.73.132) (Client Quit)
[04:22:48] *** Joins: eneeigriega (~eneeigrie@189.163.73.132)
[04:23:01] *** Joins: machinedgod (~machinedg@24.105.81.50)
[04:25:00] *** Joins: FlorianBad (~FlorianBa@cpe-67-49-107-16.dc.res.rr.com)
[04:26:14] *** Quits: TonyStone (~TonyStone@2603-7080-8607-c36a-65df-a0f5-02cd-1378.res6.spectrum.com) (Remote host closed the connection)
[04:28:34] *** Joins: TonyStone (~TonyStone@cpe-74-76-51-197.nycap.res.rr.com)
[04:36:41] *** Quits: Seirdy (~Seirdy@sourcehut/user/seirdy) (Quit: exiting 3.3)
[04:37:39] *** Joins: Seirdy (~Seirdy@sourcehut/user/seirdy)
[04:39:54] *** Quits: ic3blx_ (~ic3blx___@user/ic3blx/x-0942740) (Remote host closed the connection)
[04:42:55] *** Quits: Seirdy (~Seirdy@sourcehut/user/seirdy) (Ping timeout: 256 seconds)
[04:46:17] *** Quits: bgs (~bgs@cpe-212-85-160-171.cable.telemach.net) (Read error: Connection reset by peer)
[04:46:59] *** Quits: FlorianBad (~FlorianBa@cpe-67-49-107-16.dc.res.rr.com) (Quit: Client closed)
[04:48:58] *** Joins: bgs (~bgs@cpe-212-85-160-171.cable.telemach.net)
[04:49:00] *** Joins: Seirdy (~Seirdy@sourcehut/user/seirdy)
[04:51:20] *** Joins: System_Error (~SystemErr@user/systemerror)
[04:51:35] *** Joins: FlorianBad (~FlorianBa@cpe-67-49-107-16.dc.res.rr.com)
[04:52:39] <FlorianBad> So I played with argon2 to start understanding how it works, and I don't get the same result based on the implementation I use, but the versions, memory and time cost are the same...
[04:53:36] <TimMc> FlorianBad: It generates a new salt every time.
[04:53:41] *** Quits: Seirdy (~Seirdy@sourcehut/user/seirdy) (Ping timeout: 256 seconds)
[04:53:49] <FlorianBad> no, that's my own salt, hold on
[04:54:10] <TimMc> The question is whether the key generated by one can be verified by the other.
[04:54:30] <FlorianBad> I tried :  argonid, length=32, salt=thesalt1234567890 ,  timecost=24, memorycost=512M, password=hello
[04:55:06] <FlorianBad> WIth https://metacpan.org/pod/Crypt::Argon2 I get:     $argon2id$v=19$m=524288,t=24,p=8$dGhlc2FsdDEyMzQ1Njc4OTA$oaB/xdo2XT44Jg6gN8pbWtZ4Z3K7NQpciH59gVzsVQQ
[04:55:39] <FlorianBad> With the argon2 command that is in my Slackware Linux I get:     $argon2id$v=19$m=524288,t=24,p=8$dGhlc2FsdDEyMzQ1Njc4OTA$KDTWRudayPP4vUfvS9tMBpg13+iK4JyP0e2vWNUuOwY
[04:55:51] <FlorianBad> so everything is the same, except p=
[04:56:19] <FlorianBad> but the first half is the same
[04:56:40] <sarnold> -d ? -id ? -v 10 ? -v 13 ?
[04:57:06] <FlorianBad> echo hello | argon2 thesalt1234567890 -id -p 8 -l 32 -m 19 -t 24
[04:57:36] <FlorianBad> it defaults to -v 13 which means v=19 in the output as you can see
[04:59:47] *** neildaemond1 is now known as neildaemond
[05:00:18] *** Joins: Seirdy (~Seirdy@sourcehut/user/seirdy)
[05:01:37] <FlorianBad> Is there a third tool so we can compare?
[05:01:44] <FlorianBad> (triangulate)
[05:05:13] <FlorianBad> Well, so the digest part of p= is what's different
[05:05:32] *** Quits: sdfgsdfg (~dfghsfgs@user/sdfgsdfg) (Quit: your partner prefers dildos)
[05:05:35] *** Quits: Seirdy (~Seirdy@sourcehut/user/seirdy) (Ping timeout: 256 seconds)
[05:07:47] <FlorianBad> first $ is the salt in base64, that why it's the same, but the digest is different
[05:10:02] *** Quits: dude12312414 (~test@gateway/tor-sasl/dude12312414) (Quit: THE RAM IS TOO DAMN HIGH)
[05:11:37] *** Joins: Seirdy (~Seirdy@sourcehut/user/seirdy)
[05:15:17] <Alipha> FlorianBad: try: echo -n hello | argon2 thesalt1234567890 -id -p 8 -l 32 -m 19 -t 24
[05:15:31] <FlorianBad> ahhhh..... hmmmm  \n ?
[05:15:38] <Alipha> Probably
[05:16:08] <sarnold> hah
[05:16:30] <sarnold> you might as well take away my unix users badge
[05:17:20] <FlorianBad> AHHH yes indeed, damn! lol
[05:19:02] *** Quits: Seirdy (~Seirdy@sourcehut/user/seirdy) (Ping timeout: 240 seconds)
[05:20:18] <FlorianBad> Ok so now that we got this sorted out, it seems different versions provide different hashes? That's not very future-proof...  And that perl module doesn't even allow to pick the version
[05:20:45] <sarnold> I think that's hampered argon2 adoption
[05:21:59] <sarnold> everyone who gives it a look is immediately overwhelmed with a bunch of options and thinks that pbkdf looks pretty simple in comparison..
[05:25:11] <FlorianBad> yeah, the only reason I persisted is that I assumed that those who recommended it here probably know better ;)
[05:25:51] <FlorianBad> I absolutely love the idea of being able to tune time and mem! That's totally awesome, not just because it can depend on the machine, but it can depend on use case too
[05:26:10] *** Joins: Seirdy (~Seirdy@sourcehut/user/seirdy)
[05:26:10] <sarnold> it's mostly that pbkdf2 takes low enough memory that you can run loads of em on a GPU and do some cracking on stolen databases that way..
[05:26:35] <sarnold> but argon2 takes so much memory that it's hard to offload to asic or fpga or gpu and run through vastly more of them than a cpu
[05:31:15] <FlorianBad> I'm going to make it use 1GB :)
[05:31:39] *** Quits: Seirdy (~Seirdy@sourcehut/user/seirdy) (Ping timeout: 256 seconds)
[05:34:30] *** Quits: PJBoy (~PJBoy@user/pjboy) (Ping timeout: 250 seconds)
[05:35:27] <FlorianBad> wait, is memory PER THREAD (-p) or total?
[05:36:18] <sarnold> I think total, but I've not checked myself..
[05:37:19] *** Quits: eneeigriega (~eneeigrie@189.163.73.132) (Quit: leaving)
[05:38:00] <FlorianBad> yes it's total, I just checked with top
[05:38:28] *** Joins: Seirdy (~Seirdy@sourcehut/user/seirdy)
[05:38:43] <FlorianBad> it shown 800% cpu (-p 8 ) and 6.5% of memory on a 16GB machine which corresponds to 1G
[05:39:32] <sarnold> nice
[05:40:29] <FlorianBad> in fact I'm going to make my script just read the size of ram in addition to cpu, and it's going to use half of the available :)
[05:41:00] *** Quits: machinedgod (~machinedg@24.105.81.50) (Ping timeout: 250 seconds)
[05:41:19] <sarnold> there's probably not a ton of value in going beyond one or two gigs.. video cards afterall don't have more than a dozen gigs, right?
[05:41:27] *** Joins: ic3blx_ (~ic3blx___@87.116.166.221)
[05:41:27] *** Quits: ic3blx_ (~ic3blx___@87.116.166.221) (Changing host)
[05:41:27] *** Joins: ic3blx_ (~ic3blx___@user/ic3blx/x-0942740)
[05:41:28] <FlorianBad> actually no because if something happens and I don't have a large enough computer to decrypt it's a problem
[05:41:43] <sarnold> or if you can't disrupt a running postgres or something..
[05:41:54] <sarnold> "close chrome before you run this script"
[05:42:43] <FlorianBad> lol  I have an Intel NUC with a decent i5 that I will use only for preparing backups, so it will do nothing else, not even X will be running on it. There's 16GB with 2TB of NVMe
[05:43:04] <FlorianBad> I built that specifically for it, with a Blu-Ray burner for 100GB M-DISC backups
[05:43:08] <sarnold> ah okay so this *is* the application on the machine, hehe
[05:43:19] <FlorianBad> and it will also upload some of these backups to some remote storage
[05:44:25] <FlorianBad> yeah, I figured for less than $1000 I can take my backup-discipline to the next level, as long as I write the write scripts, so it's worth it if you consider that losing data can be completely devastating, like the end of your businesses in some cases
[05:44:32] <FlorianBad> better take backup ultra seriously
[05:45:11] *** Quits: AlienTrooper (~Alien@user/alientrooper) (Quit: Bye)
[05:46:12] *** Quits: Seirdy (~Seirdy@sourcehut/user/seirdy) (Ping timeout: 250 seconds)
[05:46:20] *** Joins: AlienTrooper (~Alien@211.34.44.61)
[05:47:42] <FlorianBad> So let's say I get this:   $argon2id$v=19$m=1048576,t=50,p=8$U29tZUdvb2RTZWFTYWx0$lAYnFUxPC8Bpby9LKRoCl6sJZ0bJDFrCW+T/sehME0A
[05:47:58] <FlorianBad> What I should store with the backup is that, right:    $argon2id$v=19$m=1048576,t=50,p=8$U29tZUdvb2RTZWFTYWx0
[05:48:16] <FlorianBad> so everything except the part that has the hash, which I use as password to encrypt
[05:48:40] <FlorianBad> (well, the base64-decoded version of it)
[05:49:55] <sarnold> if i've followed along correctly, yeah
[05:50:15] <FlorianBad> There's no secret in any of that? The salt, processing threads, memory, time, version, all of these can and should be stored in the encrypted file so we know how to generate the real password from the human password, right?
[05:59:21] *** Quits: ivii (~ivan@2001:a62:4c3:8e01:777e:e76b:1130:2573) (Quit: Konversation terminated!)
[06:16:37] *** Quits: FlorianBad (~FlorianBa@cpe-67-49-107-16.dc.res.rr.com) (Quit: Client closed)
[06:16:45] *** Quits: llorllale (~llorllale@198.98.119.85) (Quit: WeeChat 3.4)
[06:24:28] *** Joins: llorllale (~llorllale@198.98.119.85)
[06:25:38] *** Joins: FlorianBad (~FlorianBa@cpe-67-49-107-16.dc.res.rr.com)
[06:28:06] <FlorianBad> Ok so now I need to figure out a way to implement xchacha20-poly1305 correctly from my perl script
[06:46:14] <FlorianBad> Alipha: you said "using a static IV/nonce such as 0 is okay IF you use a random salt"   > Could I just use the salt as the IV?
[06:47:46] <Alipha> FlorianBad: sure, but the salt still needs to be random and unique each time you encrypt
[06:48:06] <FlorianBad> that's fine, I made up my mind I'll just save it as header ;)
[06:49:00] *** Joins: instantp10neer (~instantp1@user/instantp10neer)
[06:52:41] <Alipha> FlorianBad: note that if you re-encrypt a file after changing it, you need to generate a new salt
[06:53:45] <FlorianBad> that's fine, that will never happen, if I do that my script will just consider that as a new backup. The salt will ALWAYS be random
[06:57:32] *** Quits: int-e (~noone@int-e.eu) (Remote host closed the connection)
[06:58:34] *** Joins: int-e (~noone@int-e.eu)
[07:08:55] <maroon> FlorianBad, if you have a random salt, you have birthday-collision chance of it repeating, so that's not the same as a nonce. you can simulate a random nonce by creating a constant secret 'nonce key', then your public nonce will be aes_ecb(data=counter++ key=fixed.nonce.key), and your salt/nonce will not repeat for another 2^128 messages
[07:10:09] <maroon> instead of using a literal IV included with the message, it's better to have a salted number as your iv. like temp=hash(masterkey||salt), session_key=128-bits-of-temp, session_iv=a-different-128-bits-from-temp
[07:14:12] <maroon> and im pretty sure it's a bad idea to have iv==key
[07:25:01] *** Joins: frost (~frost@user/frost)
[07:29:40] *** Joins: sdfgsdfg (~dfghsfgs@user/sdfgsdfg)
[07:37:33] <Alipha> hm. the salt is a little small. is that only 120 bits, it looks like? i wonder if you can provide more, like 256 bits. then you wouldn't have to worry about birthday collision. i suppose to be on the safe side, you'd just randomly generate a nonce too (and store that in the header)
[07:39:54] <maroon> Alipha, but it's ok to use ECB mode to create a pseudo-random notice from a counter?
[07:40:02] <maroon> notice->nonce
[07:41:01] <Alipha> maroon: yes, though i don't think it's applicable for FlorianBad's application. i'm assuming FlorianBad cannot reasonably carry state between encryptions.
[07:47:54] <FlorianBad> yeah I don't plan to remember anything from a backup to another
[07:49:21] *** Quits: darthtilde (~dsd@user/ironsoba) (Ping timeout: 256 seconds)
[07:50:31] *** Quits: Sofia (~sofia@gateway/tor-sasl/sofia) (Remote host closed the connection)
[07:51:03] *** Joins: Sofia (~sofia@gateway/tor-sasl/sofia)
[07:55:34] *** Quits: igemnace (~ian@user/igemnace) (Remote host closed the connection)
[07:57:54] *** Quits: instantp10neer (~instantp1@user/instantp10neer) (Quit: Leaving)
[08:00:41] *** Quits: frost (~frost@user/frost) (Ping timeout: 256 seconds)
[08:16:57] *** Joins: Seirdy (~Seirdy@sourcehut/user/seirdy)
[08:18:24] *** Quits: jarthur (~jarthur@2603-8080-1540-002d-6889-d743-d7bf-132c.res6.spectrum.com) (Quit: jarthur)
[08:35:51] *** Joins: frost (~frost@user/frost)
[08:41:06] *** Joins: Nothing^ (~algorithm@047-033-009-207.res.spectrum.com)
[08:43:44] *** Joins: darthtilde (~dsd@user/ironsoba)
[08:50:01] *** Joins: BOKALDO (~BOKALDO@user/bokaldo)
[08:50:49] *** Joins: euouae (~euouae@user/euouae)
[08:50:51] <euouae> Hello
[08:52:10] *** Joins: igemnace (~ian@user/igemnace)
[08:52:30] <euouae> I'm reading about hashes, specifically the Merkle-Damgard construction and the Davies-Meyer construction.
[08:52:42] <euouae> As I understand it, the D-M construction is a specific instance of an M-D construction. Right?
[08:53:24] <euouae> My definitions are: M-D construction is H_i+1 = Compress(M_i, H_i), whereas Davis-Meyer is H_i+1 = E(M_i, H_i) (+) H_i
[08:57:36] *** Quits: System_Error (~SystemErr@user/systemerror) (Ping timeout: 276 seconds)
[09:10:16] <snappy> this is where the handbook of applied cryptography is probably useful
[09:11:35] <maroon> MD is H[0] + compress[block1] + compress[block2] ....
[09:11:54] <maroon> which is why MD is vulnerable to the length extension attack
[09:12:26] <euouae> so MD fits under Davis-Meyer
[09:12:31] <maroon> you can see pseudo code for SHA1 and SHA256 on wikipedia that shows the M-D construct
[09:12:31] <euouae> er, you mean MD5?
[09:12:44] <maroon> yes, SHA1 is based heavily on MD5
[09:13:02] <euouae> yeah so D-M constructs, are they M-D constructrs?
[09:13:04] <euouae> that's what I'm asking
[09:13:22] <euouae> It seems to me that D-M is M-D with a compress function of the form E(M, H) (+) H
[09:13:53] <snappy> i think davies meyers is a transformation of a block cipher into a compression function for use in a merkle-damgard construction
[09:14:17] <euouae> alright, thank you
[09:14:31] <maroon> merkle is using a 1-way compress function, and davies meyer turns the block cipher into a hashing a key of arbitrary length down
[09:14:37] <snappy> https://cacr.uwaterloo.ca/hac/about/chap9.pdf - see page 340/341
[09:14:51] <euouae> another question I had is, if I have a block cipher E(K,M) with a decryption function D(,) what is the difference between using E(K,M) and E(M,K)?
[09:14:58] <euouae> I.e. can I decrypt the reversed arguments as well?
[09:15:42] <euouae> because in the Davis-Meyer construction of using H_i+1 = E(M_i, H_i) (+) H_i, the author makes a point that the final XOR is important, otherwise you can invert the hash
[09:15:56] <euouae> I don't really follow what that means. It seems the message block is used as key, so how can I invert the hash?
[09:16:06] <euouae> with what key?
[09:17:31] <maroon> it's been a while since i messed with davies meyer, but i remember it was using a 64-bit block cipher to create a 128-bit encryption key from a password that could be any length longer or shorter than 128 bits
[09:17:55] <maroon> so i think it was using the input as both key *and* plaintext
[09:19:07] <euouae> as I wrote it above, it looks like it's only using it for key
[09:19:23] <euouae> the plaintext is the sequence of "hashes" H_i
[09:19:35] <euouae> the chaining values
[09:20:01] <maroon> but the key length generated is always double that of the block cipher's block size?
[09:20:17] <euouae> I don't know if key lengths are what I'm confused about
[09:20:21] <euouae> why you do ask?
[09:21:52] <maroon> unless you can just toss the extra key length, then davies meyer couldnt use something like AES-128 where the key/block are the same lengths
[09:22:22] <maroon> but the DM construct does result in each bit of the input string affecting each bit of the output key
[09:22:26] <euouae> the first chain value is an IV
[09:23:39] <euouae> ok let's say my hash of the message (M_1, M_2, M_3) is H = E(M_3, E(M_2, E(M_1, IV)))
[09:23:54] <euouae> How can this be reversed? that is the claim. Here the message blocks take the position of the key in the encryption function E
[09:24:07] <euouae> let's say IV = 0
[09:25:14] *** Quits: frost (~frost@user/frost) (Quit: Connection closed)
[09:25:54] <euouae> well, I don't even know what the author means by "reversing" the hash to be honest.
[09:26:26] <euouae> I thought he meant a second preimage
[09:26:26] <maroon> who's saying davies can be reversed?
[09:26:46] <euouae> The author says davies is good, but he's explaining the role of XOR
[09:26:52] <euouae> he's saying that without XOR, it would be reversible
[09:27:35] <euouae> the book is serious cryptography by Aumasson, I like it but I get confused every now and then
[09:27:46] <maroon> https://en.wikipedia.org/wiki/One-way_compression_function describes daviesmeyer as a 1 way compression function, so that means no reversal
[09:28:19] <maroon> he's the guy that says our encryption has too many rounds in it
[09:28:46] <euouae> Putting the criticism of the author aside for now, since I think it's unrelated, do you see what I'm saying?
[09:28:54] <euouae> I think you're glossing over the point I'm trying to make
[09:29:45] <euouae> Davies & Meyer must have had a reason to use XOR there, otherwise, why not optimize it out?
[09:29:47] <maroon> and my link says 1 way
[09:29:56] <euouae> lol
[09:30:47] *** Joins: HifiKuno (~HifiKuno@167-179-170-202.a7b3aa.bne.nbn.aussiebb.net)
[09:30:48] <euouae> Why is XOR used in "H_i = E(M_i, H_i-1) (+) H_i-1" is my question 
[09:32:32] <euouae> OK no worries, I think this answers it, https://crypto.stackexchange.com/questions/86007/dan-bonehs-explanation-of-why-davies-meyer-requires-the-final-step-of-xor-with
[09:42:20] <euouae> I guess there's a simple argument in that page, but it doesn't tell the whole truth. There's more delicate analyses in various situations, in SHA-1 it's about increasing bit security from 80 to 160
[09:43:04] <euouae> but then again, SHA-1 is unsafe, so idk what I'm talking about
[09:44:00] <maroon> i've never been clear about what's wrong with SHA1, other than being a shorter length than sha256
[09:45:17] <euouae> It says someone managed a collision attack against it
[09:45:35] <euouae> two different pdf files with same hash
[09:47:08] <euouae> and it looks like there's a dedicated website explaining the attack https://shattered.io/ 
[09:48:13] <maroon> yes, but someone could try to create a collision between 2 documents where the hash is sha256 truncated to 160 bits, but that would be much more difficult than doing it against pure sha1
[09:49:35] <maroon> and they used the merkle structural vulnerability to the length extension attack - all they need to do is create 2 blocks having identical sha1 hashes, and it would not matter at all what string is appended to both, because it would 100% result in the resulting hashes always matching
[09:49:54] <euouae> yeah to answer that I would need knowledge of sha-1, sha256 and the SHAttered attack, plus insight...
[09:50:02] <maroon> same thing would happen in sha512, it's just a lot harder to find that collision
[09:51:03] <maroon> even among md5 collisions, i've never seen one involving 2 strings which were both valid utf8 text
[09:51:50] <euouae> It says that the practical attack was based on a theoretical paper "Marc Stevens, New Collision Attacks on SHA-1 Based on Optimal Joint Local-Collision Analysis, EUROCRYPT"
[09:53:02] <euouae> so if somehow this paper takes into account the length pre-truncation, then that's what the issue is?
[09:53:10] <euouae> with SHA-1
[09:53:54] <maroon> it means the difficulty of creating a collision was not 2^160 effort, but was somewhat easier - not easy, just easi-ER
[09:56:42] *** Quits: ic3blx_ (~ic3blx___@user/ic3blx/x-0942740) (Quit: Leaving)
[09:57:47] <euouae> the rho method gives you 2^80 for 160 bit output
[09:58:11] <euouae> and the attack team said they used around 2^63 hash computations
[09:59:21] <euouae> also comparing theoretical and practical bounds is tricky I guess because of hidden constants and other practical issues
[09:59:44] <maroon> whatever in the paper must've made a difference to make it easier than attacking sha256 truncated to 160, as 80 bits at their rate would've still taken decades/centuries
[10:00:28] <euouae> from the theoretical paper: "Collision attacks on SHA-1 are constructed in roughly two parts: a non-linear
[10:00:29] <euouae> part (over approximately the first 20 steps) and a linear part (over approximately the last 60 steps)"
[10:01:06] <euouae> I know I can't get any deeper than this, and I'm already lost
[10:01:31] <euouae> how are you so sure that truncated sha256 is better?
[10:02:08] <maroon> because i doubt that the shortcut in that paper applies to the SHA2 family
[10:02:50] <maroon> if the work decreases from 2^80 down to 2^63, that's an easier task by over 100,000-fold
[10:03:32] <euouae> yeah and also note that the rho method is not even practical by itself
[10:03:53] <euouae> it just finds a collision, whereas they created two messages with only a special portion altered
[10:04:18] <maroon> also known as 'a collision'
[10:04:37] <euouae> yes but the difference is that the second can be used maliciously very easily
[10:04:38] <maroon> and in many cases, that coincidence is all that's needed
[10:04:56] <euouae> yeah
[10:05:14] <maroon> i think someone has even created an example of creating a collision for someone's pgp-or-gpg key's fingerprint
[10:05:28] <maroon> because there's some non-key bytes they can play around with
[10:06:22] <euouae> are you talking about short ids or full fingerprints?
[10:06:33] <maroon> the full monty
[10:07:41] <maroon> there was worry because there were some famous people in the industry who had sha1 fingerprints out there for years, and now people could impersonate them
[10:08:12] <maroon> or, when 2 identical fingerprints aren't allowed on the key ring at the same time, they could block someone from adding the real mccoy
[10:09:52] <euouae> OK I think you are right. I found some details here, https://arstechnica.com/information-technology/2020/01/pgp-keys-software-security-and-much-more-threatened-by-new-sha1-exploit/ "GnuPG. The developers responded by implementing a countermeasure in November that invalidates SHA1-based identity signatures that were created after January 2019."
[10:18:00] *** Quits: AlienTrooper (~Alien@211.34.44.61) (Changing host)
[10:18:00] *** Joins: AlienTrooper (~Alien@user/alientrooper)
[10:18:18] <euouae> Interesting stuff maroon, thanks
[10:18:52] <maroon> ")
[10:25:06] <euouae> maroon, openpgp v4 requires sha1 for fingerprints
[10:25:17] <euouae> this is the current draft to fix this issue, https://datatracker.ietf.org/doc/draft-ietf-openpgp-crypto-refresh/
[10:25:24] <euouae> if you care
[10:25:34] <euouae> well, this and /other/ issues...
[10:25:42] <maroon> im curious to see how long this draft has been stalled...
[10:26:17] <euouae> I think software is ahead of drafts
[10:26:19] <maroon> it's like nobody wants to fix something until after something bad happens
[10:26:37] <euouae> at least I see my gpg.conf using SHA512 everywhere
[10:28:04] <maroon> so we only need to stall this another 3 months until it expires (rubs hands together maniacally)
[10:29:47] <euouae> hehe
[10:45:04] *** Quits: sdfgsdfg (~dfghsfgs@user/sdfgsdfg) (Quit: your partner prefers dildos)
[10:47:18] *** Quits: ericonr (~ericonr@voidlinux/docs/ericonr) (Ping timeout: 256 seconds)
[10:50:35] *** Quits: igemnace (~ian@user/igemnace) (Remote host closed the connection)
[10:51:39] *** Joins: igemnace (~ian@user/igemnace)
[10:52:09] *** Joins: ericonr (~ericonr@voidlinux/docs/ericonr)
[10:54:15] *** Quits: igemnace (~ian@user/igemnace) (Remote host closed the connection)
[10:55:04] *** Joins: igemnace (~ian@user/igemnace)
[10:55:40] *** Quits: igemnace (~ian@user/igemnace) (Remote host closed the connection)
[11:02:45] *** Quits: euouae (~euouae@user/euouae) (Quit:  )
[11:14:43] *** Joins: sdfgsdfg (~dfghsfgs@user/sdfgsdfg)
[11:14:56] *** Joins: igemnace (~ian@user/igemnace)
[11:26:03] *** Quits: igemnace (~ian@user/igemnace) (Remote host closed the connection)
[11:26:39] *** Joins: igemnace (~ian@user/igemnace)
[11:33:36] *** Quits: drathir_tor (~drathir@wireguard/tunneler/drathir) (Ping timeout: 276 seconds)
[11:45:59] *** Quits: wasamasa (~wasamasa@chicken/contributor/wasamasa) (Quit: ZNC - https://znc.in)
[11:47:09] *** Joins: wasamasa (~wasamasa@chicken/contributor/wasamasa)
[11:49:52] *** Joins: drathir_tor (~drathir@wireguard/tunneler/drathir)
[12:08:25] *** Joins: Guyver2 (~Guyver@guyver2.xs4all.nl)
[12:13:21] *** Quits: lord| (~lordpipe@user/lordpipe) (Read error: Connection reset by peer)
[12:14:33] *** Joins: citizen_stig (~citizen_s@2001:982:9f64:1:fca6:baba:2003:c10)
[12:15:34] *** Joins: lord| (~lordpipe@user/lordpipe)
[12:19:42] *** Joins: machinedgod (~machinedg@24.105.81.50)
[12:26:12] *** Quits: _mikey (~mikey@user/mikey/x-4335048) (Quit: WeeChat 3.4)
[12:32:05] *** Joins: chomwitt (~chomwitt@2a02:587:dc16:6e00:12c3:7bff:fe6d:d374)
[12:32:06] *** Quits: Sofia (~sofia@gateway/tor-sasl/sofia) (Ping timeout: 276 seconds)
[12:38:13] *** Joins: gabriel1 (~gabriel1@user/gabriel1)
[12:43:54] *** Joins: Sofia (~sofia@gateway/tor-sasl/sofia)
[12:46:51] *** Quits: Nothing^ (~algorithm@047-033-009-207.res.spectrum.com) (Ping timeout: 256 seconds)
[12:52:49] *** Joins: Haohmaru (~Haohmaru@195.24.53.110)
[12:59:17] *** Joins: Major_Biscuit (~MajorBisc@wlan-145-94-218-48.wlan.tudelft.nl)
[13:09:55] *** Joins: PJBoy (~PJBoy@user/pjboy)
[13:21:55] *** Joins: tuskkk____ (uid18470@id-18470.tinside.irccloud.com)
[13:34:45] *** Joins: xzr (xzar@shell.troopers.fi)
[13:35:09] *** xzr is now known as Guest9046
[13:38:04] *** Joins: ivii (~ivan@2001:a62:4c3:8e01:fcf:cfae:b40d:7881)
[13:39:59] *** Joins: gproto23 (~gproto23@user/gproto23)
[13:40:19] *** Quits: ivii (~ivan@2001:a62:4c3:8e01:fcf:cfae:b40d:7881) (Changing host)
[13:40:19] *** Joins: ivii (~ivan@user/ivii)
[13:48:11] *** Quits: igemnace (~ian@user/igemnace) (Remote host closed the connection)
[13:51:37] *** Joins: igemnace (~ian@user/igemnace)
[13:52:07] *** Quits: igemnace (~ian@user/igemnace) (Remote host closed the connection)
[14:04:46] *** Joins: igemnace (~ian@user/igemnace)
[14:05:24] *** Quits: defjam (~eb0t@90.209.247.249) (Quit: WeeChat 3.0)
[14:08:15] *** Quits: Bostik (~bostik@static.78.20.217.95.clients.your-server.de) (Ping timeout: 256 seconds)
[14:08:21] *** Joins: Bostik (~bostik@static.78.20.217.95.clients.your-server.de)
[14:16:44] *** Quits: Amadiro (~Amadiro@31.11.55.179) (Remote host closed the connection)
[14:17:58] *** Quits: Lord_of_Life (~Lord@user/lord-of-life/x-2819915) (Ping timeout: 250 seconds)
[14:22:39] *** Joins: Lord_of_Life (~Lord@user/lord-of-life/x-2819915)
[14:37:14] *** Joins: zer0bitz (~zer0bitz@2001:2003:f444:a000:a9ef:8cb1:3f34:9694)
[14:41:02] *** Quits: igemnace (~ian@user/igemnace) (Quit: WeeChat 3.4)
[14:46:03] *** Quits: sec^nd (~sec^nd@gateway/tor-sasl/secnd/x-45171752) (Remote host closed the connection)
[14:46:27] *** Joins: sec^nd (~sec^nd@gateway/tor-sasl/secnd/x-45171752)
[15:09:53] *** Joins: ic3blx_ (~ic3blx___@user/ic3blx/x-0942740)
[15:26:14] *** Joins: Klotz (~Klotzoman@gateway/tor-sasl/klotz)
[15:29:10] *** Joins: d1cor (~diego@179.63.242.120)
[15:33:31] *** Joins: gareppa (~gareppa@user/gareppa)
[15:34:29] *** Quits: gareppa (~gareppa@user/gareppa) (Remote host closed the connection)
[15:34:32] *** Quits: FlorianBad (~FlorianBa@cpe-67-49-107-16.dc.res.rr.com) (Quit: Client closed)
[16:31:06] *** Joins: Nothing^ (~algorithm@047-033-009-207.res.spectrum.com)
[16:38:22] *** Quits: Nothing^ (~algorithm@047-033-009-207.res.spectrum.com) (Ping timeout: 250 seconds)
[16:40:55] *** Joins: pergaminho (~pergaminh@user/pergaminho)
[16:41:52] *** Quits: gproto23 (~gproto23@user/gproto23) (Quit: Leaving)
[16:45:42] *** Quits: br1ck (~br1ck@150.140.193.82) (Remote host closed the connection)
[16:46:26] *** Joins: br1ck (~br1ck@150.140.193.82)
[17:19:36] *** Malvolio is now known as Guest3456
[17:19:36] *** Quits: Guest3456 (~Malvolio@user/malvolio) (Killed (strontium.libera.chat (Nickname regained by services)))
[17:20:33] *** Joins: Malvolio (~Malvolio@user/malvolio)
[17:23:41] *** Quits: sdfgsdfg (~dfghsfgs@user/sdfgsdfg) (Quit: ayo yoyo ayo yoyo hololo, hololo.)
[17:26:19] *** Joins: tradar (~tradar@user/tradar)
[17:26:36] *** Joins: Tangent-Man (~Tang3nt-M@cpc145602-basl14-2-0-cust33.20-1.cable.virginm.net)
[17:27:59] *** Joins: betelgeuse9 (~betelgeus@94-225-47-8.access.telenet.be)
[17:31:37] *** Quits: betelgeuse9 (~betelgeus@94-225-47-8.access.telenet.be) (Read error: Connection reset by peer)
[17:32:44] *** Joins: betelgeuse9 (~betelgeus@94-225-47-8.access.telenet.be)
[17:33:46] *** Quits: betelgeuse9 (~betelgeus@94-225-47-8.access.telenet.be) (Read error: Connection reset by peer)
[17:34:53] *** Joins: betelgeuse9 (~betelgeus@94-225-47-8.access.telenet.be)
[17:36:06] *** Quits: betelgeuse9 (~betelgeus@94-225-47-8.access.telenet.be) (Read error: Connection reset by peer)
[17:37:13] *** Joins: betelgeuse9 (~betelgeus@94-225-47-8.access.telenet.be)
[17:38:29] *** Quits: betelgeuse9 (~betelgeus@94-225-47-8.access.telenet.be) (Read error: Connection reset by peer)
[17:39:36] *** Joins: betelgeuse9 (~betelgeus@94-225-47-8.access.telenet.be)
[17:41:02] *** Quits: betelgeuse9 (~betelgeus@94-225-47-8.access.telenet.be) (Read error: Connection reset by peer)
[17:42:10] *** Joins: betelgeuse9 (~betelgeus@94-225-47-8.access.telenet.be)
[17:43:23] *** Quits: betelgeuse9 (~betelgeus@94-225-47-8.access.telenet.be) (Read error: Connection reset by peer)
[17:44:03] *** Quits: Tangent-Man (~Tang3nt-M@cpc145602-basl14-2-0-cust33.20-1.cable.virginm.net) (Quit: Leaving)
[17:44:30] *** Joins: betelgeuse9 (~betelgeus@94-225-47-8.access.telenet.be)
[17:45:44] *** Quits: betelgeuse9 (~betelgeus@94-225-47-8.access.telenet.be) (Read error: Connection reset by peer)
[17:46:52] *** Joins: betelgeuse9 (~betelgeus@94-225-47-8.access.telenet.be)
[17:48:20] *** Quits: betelgeuse9 (~betelgeus@94-225-47-8.access.telenet.be) (Read error: Connection reset by peer)
[17:49:27] *** Joins: betelgeuse9 (~betelgeus@94-225-47-8.access.telenet.be)
[17:49:46] *** Guest9046 is now known as xzr
[17:50:59] *** Quits: betelgeuse9 (~betelgeus@94-225-47-8.access.telenet.be) (Read error: Connection reset by peer)
[17:52:05] *** Joins: betelgeuse9 (~betelgeus@94-225-47-8.access.telenet.be)
[17:52:18] *** Quits: Major_Biscuit (~MajorBisc@wlan-145-94-218-48.wlan.tudelft.nl) (Ping timeout: 260 seconds)
[17:53:34] *** Quits: betelgeuse9 (~betelgeus@94-225-47-8.access.telenet.be) (Read error: Connection reset by peer)
[17:54:43] *** Joins: betelgeuse9 (~betelgeus@94-225-47-8.access.telenet.be)
[17:56:13] *** Quits: betelgeuse9 (~betelgeus@94-225-47-8.access.telenet.be) (Read error: Connection reset by peer)
[17:57:20] *** Joins: betelgeuse9 (~betelgeus@94-225-47-8.access.telenet.be)
[17:57:54] *** Quits: tradar (~tradar@user/tradar) (Quit: tradar)
[17:58:50] *** Quits: betelgeuse9 (~betelgeus@94-225-47-8.access.telenet.be) (Read error: Connection reset by peer)
[17:59:57] *** Joins: betelgeuse9 (~betelgeus@94-225-47-8.access.telenet.be)
[18:01:25] *** Quits: betelgeuse9 (~betelgeus@94-225-47-8.access.telenet.be) (Read error: Connection reset by peer)
[18:02:32] *** Joins: betelgeuse9 (~betelgeus@94-225-47-8.access.telenet.be)
[18:04:12] *** Quits: betelgeuse9 (~betelgeus@94-225-47-8.access.telenet.be) (Read error: Connection reset by peer)
[18:05:19] *** Joins: betelgeuse9 (~betelgeus@94-225-47-8.access.telenet.be)
[18:06:43] *** Quits: betelgeuse9 (~betelgeus@94-225-47-8.access.telenet.be) (Read error: Connection reset by peer)
[18:07:50] *** Joins: betelgeuse9 (~betelgeus@94-225-47-8.access.telenet.be)
[18:09:13] *** Quits: betelgeuse9 (~betelgeus@94-225-47-8.access.telenet.be) (Read error: Connection reset by peer)
[18:10:20] *** Joins: betelgeuse9 (~betelgeus@94-225-47-8.access.telenet.be)
[18:11:46] *** Quits: betelgeuse9 (~betelgeus@94-225-47-8.access.telenet.be) (Read error: Connection reset by peer)
[18:12:53] *** Joins: betelgeuse9 (~betelgeus@94-225-47-8.access.telenet.be)
[18:13:35] *** Joins: dude12312414 (~test@gateway/tor-sasl/dude12312414)
[18:14:28] *** Quits: betelgeuse9 (~betelgeus@94-225-47-8.access.telenet.be) (Read error: Connection reset by peer)
[18:15:37] *** Joins: betelgeuse9 (~betelgeus@94-225-47-8.access.telenet.be)
[18:17:13] *** Quits: betelgeuse9 (~betelgeus@94-225-47-8.access.telenet.be) (Read error: Connection reset by peer)
[18:18:20] *** Joins: betelgeuse9 (~betelgeus@94-225-47-8.access.telenet.be)
[18:20:05] *** Quits: betelgeuse9 (~betelgeus@94-225-47-8.access.telenet.be) (Read error: Connection reset by peer)
[18:20:32] *** Quits: d1cor (~diego@179.63.242.120) (Ping timeout: 240 seconds)
[18:21:13] *** Joins: betelgeuse9 (~betelgeus@94-225-47-8.access.telenet.be)
[18:22:55] *** Quits: betelgeuse9 (~betelgeus@94-225-47-8.access.telenet.be) (Read error: Connection reset by peer)
[18:24:02] *** Joins: betelgeuse9 (~betelgeus@94-225-47-8.access.telenet.be)
[18:25:32] *** Quits: betelgeuse9 (~betelgeus@94-225-47-8.access.telenet.be) (Read error: Connection reset by peer)
[18:26:40] *** Joins: betelgeuse9 (~betelgeus@94-225-47-8.access.telenet.be)
[18:28:03] *** Quits: betelgeuse9 (~betelgeus@94-225-47-8.access.telenet.be) (Read error: Connection reset by peer)
[18:29:11] *** Joins: betelgeuse9 (~betelgeus@94-225-47-8.access.telenet.be)
[18:30:39] *** Quits: betelgeuse9 (~betelgeus@94-225-47-8.access.telenet.be) (Read error: Connection reset by peer)
[18:31:48] *** Joins: betelgeuse9 (~betelgeus@94-225-47-8.access.telenet.be)
[18:33:13] *** Quits: betelgeuse9 (~betelgeus@94-225-47-8.access.telenet.be) (Read error: Connection reset by peer)
[18:34:20] *** Joins: betelgeuse9 (~betelgeus@94-225-47-8.access.telenet.be)
[18:35:13] *** Joins: jarthur (~jarthur@2603-8080-1540-002d-6889-d743-d7bf-132c.res6.spectrum.com)
[18:35:51] *** Quits: betelgeuse9 (~betelgeus@94-225-47-8.access.telenet.be) (Read error: Connection reset by peer)
[18:36:58] *** Joins: betelgeuse9 (~betelgeus@94-225-47-8.access.telenet.be)
[18:38:27] *** Quits: betelgeuse9 (~betelgeus@94-225-47-8.access.telenet.be) (Read error: Connection reset by peer)
[18:39:37] *** Joins: betelgeuse9 (~betelgeus@94-225-47-8.access.telenet.be)
[18:41:01] *** Quits: Deknos (~someone@user/menace) (Quit: Deknos)
[18:41:07] *** Quits: betelgeuse9 (~betelgeus@94-225-47-8.access.telenet.be) (Read error: Connection reset by peer)
[18:42:14] *** Joins: betelgeuse9 (~betelgeus@94-225-47-8.access.telenet.be)
[18:43:42] *** Quits: betelgeuse9 (~betelgeus@94-225-47-8.access.telenet.be) (Read error: Connection reset by peer)
[18:43:52] *** Quits: BigTuna (~BigTuna@user/BigTuna) (Ping timeout: 256 seconds)
[18:44:50] *** Joins: betelgeuse9 (~betelgeus@94-225-47-8.access.telenet.be)
[18:46:14] *** Quits: betelgeuse9 (~betelgeus@94-225-47-8.access.telenet.be) (Read error: Connection reset by peer)
[18:47:24] *** Joins: betelgeuse9 (~betelgeus@94-225-47-8.access.telenet.be)
[18:48:55] *** Quits: betelgeuse9 (~betelgeus@94-225-47-8.access.telenet.be) (Read error: Connection reset by peer)
[18:49:30] *** Joins: Major_Biscuit (~MajorBisc@wlan-145-94-218-48.wlan.tudelft.nl)
[18:50:03] *** Joins: betelgeuse9 (~betelgeus@94-225-47-8.access.telenet.be)
[18:51:32] *** Quits: betelgeuse9 (~betelgeus@94-225-47-8.access.telenet.be) (Read error: Connection reset by peer)
[18:52:30] *** Quits: jarthur (~jarthur@2603-8080-1540-002d-6889-d743-d7bf-132c.res6.spectrum.com) (Quit: jarthur)
[18:52:38] *** Joins: betelgeuse9 (~betelgeus@94-225-47-8.access.telenet.be)
[18:54:17] *** Quits: betelgeuse9 (~betelgeus@94-225-47-8.access.telenet.be) (Read error: Connection reset by peer)
[18:54:31] *** Joins: Guest22 (~Guest22@2a03:94e0:ffff:194:32:107:0:51)
[18:55:18] *** Quits: citizen_stig (~citizen_s@2001:982:9f64:1:fca6:baba:2003:c10) (Ping timeout: 250 seconds)
[18:55:25] *** Joins: betelgeuse9 (~betelgeus@94-225-47-8.access.telenet.be)
[18:56:46] *** Quits: betelgeuse9 (~betelgeus@94-225-47-8.access.telenet.be) (Read error: Connection reset by peer)
[18:56:48] <TimMc> I suppose an attacker can backdate their SHA-1 signature in some cases, but not others.
[18:56:50] *** Joins: byteskeptical (~amnesia@user/byteskeptical)
[18:57:24] <TimMc> and it will break workflows that are currently using SHA-1 legitimately, and force them to upgrade...
[18:57:53] *** Joins: betelgeuse9 (~betelgeus@94-225-47-8.access.telenet.be)
[18:57:53] *** Quits: Guest22 (~Guest22@2a03:94e0:ffff:194:32:107:0:51) (Client Quit)
[18:57:58] *** Joins: frost (~frost@user/frost)
[18:59:23] *** ChanServ sets mode: +o Peng
[18:59:25] *** Quits: betelgeuse9 (~betelgeus@94-225-47-8.access.telenet.be) (Read error: Connection reset by peer)
[18:59:34] *** Peng sets mode: +b-o $a:betelgeuse Peng
[19:00:37] *** ChanServ sets mode: +o MacGyver
[19:00:51] <Peng> betelgeuse9 avoided causing trouble for 19 days
[19:01:02] <MacGyver> Just wanna try out this form.
[19:01:10] *** MacGyver sets mode: -b $a:betelgeuse
[19:01:15] *** MacGyver sets mode: +b $a:betelgeuse$##fix_your_connection
[19:02:05] <halosghost> lol
[19:02:07] *** ChanServ sets mode: -o MacGyver
[19:02:24] <MacGyver> Not that I expect they ever read it.
[19:02:40] <Peng> Ah, right, I forgot. But I think at least one other channel is forwarding them. :D
[19:10:56] *** Joins: seb3 (~seb@128-78-110-17.abo.bbox.fr)
[19:10:57] *** Quits: drathir_tor (~drathir@wireguard/tunneler/drathir) (Remote host closed the connection)
[19:11:19] *** Joins: drathir_tor (~drathir@wireguard/tunneler/drathir)
[19:18:48] *** Parts: seb3 (~seb@128-78-110-17.abo.bbox.fr) (WeeChat 3.0)
[19:19:38] *** Quits: gabriel1 (~gabriel1@user/gabriel1) (Remote host closed the connection)
[19:19:53] *** Joins: gabriel1 (~gabriel1@user/gabriel1)
[19:20:52] *** Quits: danieldg (~me@user/danieldg) (Ping timeout: 250 seconds)
[19:24:47] *** Joins: danieldg (~me@user/danieldg)
[19:26:19] *** Quits: dude12312414 (~test@gateway/tor-sasl/dude12312414) (Quit: THE RAM IS TOO DAMN HIGH)
[19:29:58] *** Quits: AsenMx (~asen@user/asenmx) (Ping timeout: 250 seconds)
[19:30:07] *** Quits: MarkWatson[m] (~markwatso@2001:470:69fc:105::1:5be8) (Quit: You have been kicked for being idle)
[19:30:22] *** Quits: frost (~frost@user/frost) (Quit: Connection closed)
[19:31:24] *** Quits: tuskkk____ (uid18470@id-18470.tinside.irccloud.com) (Quit: Connection closed for inactivity)
[19:36:33] *** Joins: rustycl0ck (~ircuser@gateway/tor-sasl/rustycl0ck)
[19:40:16] *** Joins: seb1 (~seb@128-78-110-17.abo.bbox.fr)
[19:40:44] *** Quits: seb1 (~seb@128-78-110-17.abo.bbox.fr) (Client Quit)
[19:44:20] <halosghost> my brain is trapped in a weird rabbit hole trying to consider if there's a way to create a secure timestamp-adjacent system (vaguely similar to carbon dating) that would track the number of cosmic-ray bitflips that have happened
[19:44:34] <halosghost> cryptography is a helluva drug
[19:47:24] *** Joins: AsenMx (~asen@user/asenmx)
[19:49:20] <TimMc> Relatedly, someone I know online is working with a research group on something involving verifiable random numbers from astronomic phenomena.
[19:49:37] <halosghost> that sounds cool!
[19:50:01] <halosghost> “verifiable random” ≡ true-random (as opposed to pseudo-random)?
[19:51:31] <TimMc> yeah
[19:51:49] *** Quits: sec^nd (~sec^nd@gateway/tor-sasl/secnd/x-45171752) (Remote host closed the connection)
[19:51:55] <TimMc> Something about mututally distrusting parties needing non-predictable, verifiable random.
[19:52:28] <TimMc> I don't remember all the constraints, though. It was some weird and special situation.
[19:54:53] <TimMc> If it was just those, I'd suggest this: Both parties privately generate a random string, then share a commitment of it (a salted hash, let's say) so they can't change their minds. Then they reveal the private randoms, which are hashed to generate the output random.
[19:54:58] <TimMc> But apparently that wasn't enough.
[19:55:14] <halosghost> tangentially-related: I'm doing a bit of a performance-art piece: I'm painting my finger-nails based on the day of the week the paint from the last painting came off; as a result, my fingernails are kind of a ~28bit random number whose entropy comes from how I use my hands
[19:55:24] <halosghost> ☺
[19:56:05] <halosghost> TimMc: mm, that's an interesting protocol to consider, I'll need to mull on that for a bit
[19:57:27] <TimMc> Hah! Tell me more, do you paint a pattern based on the day?
[19:57:32] <TimMc> and why ~28 bit?
[19:58:43] <TimMc> So like... do you repaint individually when that one fingernail's paint chips, and you paint it solid based on a mapping of day-of-week to color?
[20:00:29] *** Joins: Nevyl (~seb@128-78-110-17.abo.bbox.fr)
[20:00:39] <Nevyl> msg hostserv request vhost.goes.here
[20:00:57] <Nevyl> / msg hostserv request vhost.goes.here
[20:01:05] *** Quits: Nevyl (~seb@128-78-110-17.abo.bbox.fr) (Quit: WeeChat 3.0)
[20:01:39] *** Joins: seb1 (~seb@dau94-h01-128-78-110-17.dsl.sta.abo.bbox.fr)
[20:02:12] *** seb1 is now known as Nevyl
[20:02:52] *** Quits: Nevyl (~seb@dau94-h01-128-78-110-17.dsl.sta.abo.bbox.fr) (Client Quit)
[20:03:28] *** Joins: FlorianBad (~FlorianBa@cpe-67-49-107-16.dc.res.rr.com)
[20:04:32] <halosghost> TimMc: so, I paint the color of the nail (a simple solid color, for the moment, domain can be increased significantly by introducing patterns) based on the day-of-week the paint (on that nail) fell off
[20:05:15] <halosghost> TimMc: there are 7 days (in the gregorian calendar, which I'm begrudgingly following for simplicity), and therefore 10 “digits” (sorry for the pun, I couldn't help myself)
[20:06:48] <halosghost> TimMc: but, as they are orderable (e.g., left-to-right) such that each assignment of color to each nail is unique so, the total number of unique combinations is 7^10
[20:07:22] <halosghost> TimMc: log₂(7¹⁰) ≈ 28
[20:07:39] <halosghost> calculating the amount of entropy in it is beyond me
[20:09:54] <yawkat> i guess itd tend to 28 bits in the long run?
[20:10:23] <yawkat> unless there is a bias in the day-of-week the color falls off, which is possible.
[20:11:09] <halosghost> well, definitely the way I use each finger differs (e.g., I nail-open things with my pointer fingers more often than other fingers, and my dominant hand more than my non-dominant hand)
[20:11:17] <halosghost> that's almost certainly some amount of bias
[20:11:57] <yawkat> that should only increase the frequency of replacement for that finger, i dont think itd affect the entropy?
[20:13:34] *** Joins: Nevyl (~seb@user/Nevyl)
[20:13:54] <Nevyl> #2
[20:13:55] *** Quits: rg (~r-g@51.159.55.86) (Quit: rg)
[20:14:26] <Alipha> #3
[20:17:29] *** Quits: Nevyl (~seb@user/Nevyl) (Quit: WeeChat 3.0)
[20:17:30] *** Quits: rustycl0ck (~ircuser@gateway/tor-sasl/rustycl0ck) (Ping timeout: 276 seconds)
[20:21:31] <halosghost> yawkat: I'm unsure
[20:22:03] <halosghost> it's also worth mentioning (of course) that this TRNG is very slow. It only produces a new random number every day or two ☺
[20:33:05] *** Joins: dude12312414 (~test@gateway/tor-sasl/dude12312414)
[20:38:46] <TimMc> T stands for?
[20:40:39] <Alipha> True
[20:46:03] <halosghost> ^
[20:46:08] <halosghost> (as opposed to a PRNG)
[20:47:28] <TimMc> ah, "physical randomness"
[20:47:38] <TimMc> but physical starts with P, got it
[20:48:26] <wsb> halosghost: a new random number of which size?
[20:48:50] *** Quits: Major_Biscuit (~MajorBisc@wlan-145-94-218-48.wlan.tudelft.nl) (Ping timeout: 250 seconds)
[20:50:31] <halosghost> TimMc: (no, as opposed to pseudo-random number generator)
[20:51:00] <halosghost> wsb: depends on what you mean. Each day or two a nail or two will fall off resulting in a new number
[20:51:14] <halosghost> wsb: however, that's not the same thing as all the digits having been randomized
[20:51:34] <halosghost> it's kind of a rolling-random-number ☺
[20:52:11] <TimMc> I'm curious if it will ever repeat.
[20:52:36] <halosghost> TimMc: no reason it couldn't, and no reason it will
[20:53:03] <halosghost> wsb: if you wanted a “completely new number” from the last one, you're gonna be waiting a while
[20:53:20] <halosghost> :)
[20:59:34] *** Joins: programmar (~whatever@118.69.128.37)
[20:59:41] *** Parts: programmar (~whatever@118.69.128.37) (Leaving)
[20:59:48] *** Joins: eson123 (~whatever@118.69.128.37)
[21:00:44] <eson123> has anyone here ever requested a cert through Let's Encrypt by using certbot ? i currently trying to request one but it keeps popping error but i think i know why, since my website operates on port 8080 it just keep going for 80 and resulting in "404", how can i specifically tell certbot to go for 8080 ? 
[21:04:13] <dostoyevsky2> eson123: Running a public https site on port 8080, not sure if that's possible...
[21:04:24] <dostoyevsky2> I didn't realize that "
[21:04:24] <dostoyevsky2> Filippo Valsorda
[21:04:57] <eson123> dostoyevsky2: well i am not sure if it's possible as well but port 80 is alreayd taken :(
[21:05:02] <eson123> so is 443
[21:05:17] <dostoyevsky2> is actually the lead of the Go crypto team
[21:06:28] <dostoyevsky2> eson123: yeah, if you are not in control of these ports, then letsencrypt won't certify that you are...  Otherwise you could just create a cert pretending to be anyone...
[21:08:05] <Peng> eson123: Why can't port 80 be usable?
[21:08:22] <Peng> eson123: Even if it's a different machine you could reverse proxy
[21:08:23] <eson123> it is used for an security camera already
[21:08:39] <Peng> DNS validation it is, then!
[21:09:30] <dostoyevsky2> Peng: so one could run a https site on port 8080?
[21:09:58] <Peng> dostoyevsky2: By and large you can run anything on any port
[21:10:05] <Peng> dostoyevsky2: Whether it's a good idea...
[21:10:22] <dostoyevsky2> Peng: true, I just wasn't sure about whether TLS would allow for that
[21:10:45] *** Joins: tuskkk____ (uid18470@id-18470.tinside.irccloud.com)
[21:11:59] <dostoyevsky2> Peng: I only use it for my own certificates all the time, though, but not with letsencrypt
[21:21:32] <TimMc> dostoyevsky2: Yes, although 8443 would be the more traditional "alt https" port.
[21:22:15] *** Quits: Haohmaru (~Haohmaru@195.24.53.110) ()
[21:30:50] *** Quits: Gallomimia (~Gallomimi@node-1w7jra2a2gqpzeza34afif1to.ipv6.telus.net) (Remote host closed the connection)
[21:31:51] *** Joins: Gallomimia (~Gallomimi@node-1w7jra2a2gqpxefhw17qc2f21.ipv6.telus.net)
[21:37:57] *** Quits: eson123 (~whatever@118.69.128.37) (Ping timeout: 240 seconds)
[22:09:50] *** Joins: aleck (~aleck@user/aleck)
[22:10:57] *** Quits: aleck1 (~aleck@user/aleck) (Ping timeout: 240 seconds)
[22:12:22] *** Joins: gproto23 (~gproto23@user/gproto23)
[22:21:46] *** Joins: ___nick___ (~quassel@cpc68286-cdif17-2-0-cust533.5-1.cable.virginm.net)
[22:23:38] *** Joins: d1cor (~diego@179.63.242.120)
[22:29:09] *** Joins: _mikey (~mikey@user/mikey/x-4335048)
[22:29:29] *** Quits: FlorianBad (~FlorianBa@cpe-67-49-107-16.dc.res.rr.com) (Quit: Client closed)
[22:31:27] *** Quits: ___nick___ (~quassel@cpc68286-cdif17-2-0-cust533.5-1.cable.virginm.net) (Quit: https://quassel-irc.org - Chat comfortably. Anywhere.)
[22:32:50] *** Joins: Narrat (~omnius@p2e511ab8.dip0.t-ipconnect.de)
[22:33:01] *** Joins: ___nick___ (~quassel@cpc68286-cdif17-2-0-cust533.5-1.cable.virginm.net)
[22:33:16] *** Quits: ___nick___ (~quassel@cpc68286-cdif17-2-0-cust533.5-1.cable.virginm.net) (Client Quit)
[22:34:51] *** Joins: ___nick___ (~quassel@cpc68286-cdif17-2-0-cust533.5-1.cable.virginm.net)
[22:50:09] <wsb> halosghost: maybe I should have asked about the information entropy it produces each day?
[22:50:25] <wsb> Since this is more clearly define.
[22:50:33] <wsb> * defined
[23:02:19] *** Quits: ivii (~ivan@user/ivii) (Quit: Konversation terminated!)
[23:04:02] *** Joins: ivii (~ivan@user/ivii)
[23:04:10] <Alipha> It would be nice to be able to get a certificate for a specific domain:port
[23:11:26] <halosghost> wsb: genuinely not sure since I don't even know how to determine the entropy of the whole system
[23:12:12] <halosghost> wsb: I've been mulling over starting to record the “number” each day and then evaluating the bias after some amount of time
[23:22:05] *** Quits: BOKALDO (~BOKALDO@user/bokaldo) (Quit: Leaving)
[23:22:27] *** Joins: andreasbuhr (~quassel@p549db532.dip0.t-ipconnect.de)
[23:28:50] *** Joins: xenoterracide_ (~xenoterra@2600:1700:71d4:810:101f:cf82:e73c:f52b)
[23:40:48] *** Quits: ___nick___ (~quassel@cpc68286-cdif17-2-0-cust533.5-1.cable.virginm.net) (Ping timeout: 256 seconds)
[23:48:29] *** Quits: andreasbuhr (~quassel@p549db532.dip0.t-ipconnect.de) (Quit: https://quassel-irc.org - Chat comfortably. Anywhere.)
[23:52:13] *** Quits: xenoterracide_ (~xenoterra@2600:1700:71d4:810:101f:cf82:e73c:f52b) (Remote host closed the connection)
[23:52:29] *** Joins: xenoterracide_ (~xenoterra@2600:1700:71d4:810:101f:cf82:e73c:f52b)
[23:55:06] *** Quits: Seirdy (~Seirdy@sourcehut/user/seirdy) (Quit: exiting 3.3)
[23:56:37] *** Quits: xenoterracide_ (~xenoterra@2600:1700:71d4:810:101f:cf82:e73c:f52b) (Ping timeout: 240 seconds)
