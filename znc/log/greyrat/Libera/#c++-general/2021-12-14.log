[00:02:17] *** Quits: CoderCharmander (~CoderChar@20014C4C12563000BCCDBFC417CDB7F0.catv.pool.telekom.hu) (Quit: Leaving)
[00:06:39] *** Joins: CoderCharmander (~CoderChar@20014C4C12563000BCCDBFC417CDB7F0.catv.pool.telekom.hu)
[00:11:21] <LordKalma> I have to licence by repo with the website I'm building
[00:11:33] <LordKalma> wondering what license to use
[00:14:11] *** Quits: CoderCharmander (~CoderChar@20014C4C12563000BCCDBFC417CDB7F0.catv.pool.telekom.hu) (Quit: going to sleep (too late))
[00:15:21] <rpav> the problem as i see it is there are tons of good licenses to choose from, but nothing definitively horrific
[00:15:45] <LordKalma> for a website you have code and you have data to some extent
[00:16:06] <LordKalma> ideally it would be a mixed CC-type license for the data and another one for software
[00:17:47] *** Quits: ashafq (~ashafq@pool-96-237-238-252.bstnma.fios.verizon.net) (Remote host closed the connection)
[00:20:18] *** Quits: proller (~p@80.240.216.69) (Ping timeout: 256 seconds)
[00:26:11] <robod34> RandomReader, that hresult error is described as:  	No such interface supported.
[00:26:41] <robod34> so, i gather that WIC cannot be initialized with CoGetClassObject()
[00:26:59] <robod34> is that a fair assumption?
[00:27:15] <robod34> it would mean I am going about it in the wrong way
[00:33:57] *** Joins: proller (~p@2a02:6b8:b081:16::1:37)
[00:38:37] *** paule32__ is now known as paule32
[00:38:42] <paule32> hello
[00:39:48] <cbreak> mort: iterating over a string and slitting shouldn't be too hard. You can either use pre-baked algorithms, such as those in boost, or the c++ regex part of the stdlib
[00:39:51] <paule32> i work under windows 32 bit, i can get the hwnd of a external application, but how do i get the hwnd + text from this window hwnd ?
[00:40:01] <cbreak> or do something low-level with a find on the delimiter, and working via indices
[00:40:46] <cbreak> paule32: ... I have no idea about windows... but are you asking how to get a hwnd from a hwnd?
[00:40:51] <cbreak> isn't that an identity transform?
[00:40:56] <mort> cbreak: it should be easy to do with the standard library, and it shouldn't require <regex> (or any regex implementation, even a good one, because we don't need an FSA to find a colon)
[00:41:37] <cbreak> mort: std::string has find, if you want to find colons, that should work.
[00:41:59] <mort> yeah, that's the code that's more difficult than it should be and more difficult than the strtok/strstr equivalent
[00:42:03] <mort> you know
[00:42:11] <paule32> hello cbreak, i get the application hwnd already with the title bar caption, now i would like traverse the list of child windows, to check for a spec. child window
[00:42:30] <mort> in _good_ languages, you can do something along the lines of `for (part in str.split(":"))` to iterate over a string split by colons
[00:42:38] <cbreak> I never got strtok to work. It always crashes because it tries to modify the string
[00:43:12] <cbreak> well... I only tried once... so...
[00:44:05] *** Quits: pulse (~pulse@user/pulse) (Quit: My hovercraft is full of eels)
[00:47:25] <maxxe> https://www.youtube.com/watch?v=wDArpOdys8k # I'm gonna pray for Korea
[00:48:31] *** Joins: ashafq (~ashafq@pool-96-237-238-252.bstnma.fios.verizon.net)
[00:50:38] *** Quits: paul424 (~tom@ip-31-0-123-68.multi.internet.cyfrowypolsat.pl) (Remote host closed the connection)
[00:50:53] *** Joins: paul424 (~tom@ip-31-0-123-68.multi.internet.cyfrowypolsat.pl)
[00:54:50] <RandomReader> robod34 - I don't know if this is going to solve whatever problem you were trying to deal with, I think CoCreateInstance is basically just a wrapper over CoGetClassObject
[00:55:28] <robod34> RandomReader, can I show you the main function  from the dll?
[00:55:36] <RandomReader> but like I said earlier, I think the specific error in this case is probably because CoGetClassObject is only going to provide IClassFactory or similar, and you'd have to use that interface to create the WIC interface (the one you use for CoCreateInstance)
[00:56:06] <RandomReader> what's the original problem that led to this code?
[00:56:16] <RandomReader> e.g. why modus
[00:57:09] <robod34> modus is just a param to choose the mode of initialization
[00:57:22] <robod34> when i call this dll exported function
[00:57:37] <RandomReader> I mean why did you add the mode choice, why is CoCreateInstance a problem
[00:57:41] <robod34> i call it only once, in every thread
[00:57:50] <robod34> ah
[00:57:53] <robod34> good question
[00:58:12] <robod34> i initialize the dll with loadlibrary in every thread i have
[00:58:15] <robod34> and then...
[00:58:30] <robod34> i invoke this function in each thread; everything works fine
[00:58:35] <robod34> however ....
[00:58:45] <robod34> when i call this function: https://paste.gg/p/anonymous/b7b6ade07fb943249c3fde05b47615ff
[00:59:00] *** Joins: pulse (~pulse@user/pulse)
[00:59:19] <robod34> that uses wic and gdi+ [flat apis], it causes crashes
[00:59:36] <RandomReader> paule32 - FindWindowEx should be able to walk the hierarchy, if that's the question
[00:59:49] <robod34> when multiple threads call it simultaneously
[01:00:05] <paule32> thx
[01:00:10] <robod34> this is the problem
[01:00:27] <robod34> if i call the function only from one thread, everything works fine
[01:01:21] <robod34> so, my hunch is... wic is not properly initialized, in a safe thread manner
[01:01:51] <robod34> gdi+ is always single threaded; one instance per process
[01:01:54] <RandomReader> are you initializing COM on every thread?
[01:02:02] <robod34> RandomReader, yes
[01:02:10] <robod34> should I do it only once?
[01:02:13] *** Quits: badone (~badone@209.132.189.136) (Quit: ZNC 1.7.5 - https://znc.in)
[01:02:26] <RandomReader> no, it should be on every thread
[01:02:37] <RandomReader> but yeah, it may be that WIC doesn't support multiple threads this way
[01:03:01] <robod34> god damn it, as far as I know , it should
[01:03:13] <RandomReader> what part crashes?
[01:03:49] <robod34> that i have yet to identify
[01:03:53] *** Quits: sord937 (~sord937@gateway/tor-sasl/sord937) (Quit: sord937)
[01:04:10] <robod34> i use debug view, but each thread spews stuff constantly
[01:04:47] <RandomReader> ah
[01:05:09] <robod34> and I must somewhere concoct a way to identify each thread
[01:05:16] <robod34> and see where they stop
[01:05:51] <RandomReader> debugger :)
[01:05:58] <robod34> yeah
[01:06:02] <robod34> I know ^_^
[01:06:06] <RandomReader> ...wait what do you mean by "gdi+ is always single threaded"?
[01:06:29] <robod34> it can only be initialized once, per process
[01:06:49] <RandomReader> ok, that isn't what we'd use the term "single threaded" for
[01:06:58] <robod34> and even if you force it multiple threads, each gdi+ call gets queued
[01:07:09] <robod34> and is basically, single threaded
[01:07:10] <RandomReader> oh, hm
[01:07:48] <robod34> as far as I know , wic can work multi-threaded
[01:08:19] <RandomReader> ...er, are you sure that's true for GDI+?
[01:08:23] <robod34> but I suppose I am doing something wrong
[01:08:24] <RandomReader> that sounds odd, but I've never used it
[01:08:27] *** Quits: Cyp (~cyp@213.237.85.9) (Remote host closed the connection)
[01:08:33] <robod34> yes
[01:08:34] <RandomReader> and there's this, which sounds more typical: https://docs.microsoft.com/en-us/windows/win32/gdiplus/sec-gdiplus#thread-synchronization
[01:08:54] *** Joins: Cyp (~cyp@213.237.85.9)
[01:09:30] <RandomReader> like it wouldn't surprise me if it forces the final output to go via a single thread, but I wouldn't take that to mean every GDI+ call is threadsafe
[01:09:42] <RandomReader> unless it explicitly says that somewhere
[01:10:18] *** Joins: Juliu (~Juliu@2a02:810b:c640:3ec0:9180:b80f:58c7:8de8)
[01:10:24] <RandomReader> anyway, whatever this is, narrowing down the crash is needed anyway
[01:10:30] <RandomReader> so I guess we'll find out :)
[01:10:47] <robod34> yes, that is true, if you work on the same gdi+ objects
[01:11:03] <robod34> what msdn says is correct
[01:11:24] <robod34> but when you work with, lets say, two distinct images and attempt to resize them
[01:11:52] <RandomReader> ah, and you have isolated work, ok that makes sense
[01:12:00] <robod34> the resizing happens, one by one, after each other, even if they are started by two distinct threads
[01:12:20] <robod34> yes
[01:12:25] *** Quits: Itaru (~DaSH@ro2.flokinet.is) (Ping timeout: 252 seconds)
[01:12:52] <robod34> and this is the case with wic, I am using it on isolated work, as you called it, distinct objects
[01:13:08] <robod34> but it crashes
[01:16:50] *** Quits: AmR (~AmREiSa@156.207.199.106) (Quit: Konversation terminated!)
[01:18:07] <RandomReader> ..what are your CoInitializeEx calls?
[01:18:08] *** Quits: paul424 (~tom@ip-31-0-123-68.multi.internet.cyfrowypolsat.pl) (Quit: Leaving)
[01:18:24] <RandomReader> e.g. are you passing in a particular COINIT flag
[01:18:41] <robod34> none
[01:19:09] <robod34> i do not call that
[01:19:11] <robod34> should I?
[01:19:15] <RandomReader> what do you call to init COM?
[01:19:35] <robod34> nothing, in the dll...
[01:20:14] <RandomReader> you said you were initializing COM on every thread
[01:20:42] <robod34> this com object, referring to wic
[01:20:48] <RandomReader> oh, no, I mean COM itself
[01:21:01] <RandomReader> so here's WIC's multithreaded comment: https://docs.microsoft.com/en-us/windows/win32/wic/-wic-howwicworks#multi-threaded-apartment-support-in-wic
[01:21:14] <RandomReader> but that's determined by COM itself, which does need to be initialized in every thread
[01:21:28] <RandomReader> so this covers what the models are: https://docs.microsoft.com/en-us/previous-versions/ms809971(v=msdn.10)
[01:22:15] <RandomReader> but it boils down to calling CoInitializeEx(NULL, COINIT_MULTITHREADED) in each new thread: https://docs.microsoft.com/en-us/windows/win32/api/combaseapi/nf-combaseapi-coinitializeex
[01:23:10] <RandomReader> note if the app hosting this DLL is already doing this, there may be conflicts
[01:23:57] <robod34> that is what I am afraid
[01:24:53] <robod34> it is very late here
[01:25:32] <robod34> thank you very much for the help; i hope to solve this tomorrow based on the links you provided
[01:25:41] <RandomReader> ok! let me know how it goes
[01:26:39] <robod34> i will; have a good day , byyyyeeeeee
[01:29:12] *** Joins: hackinghorn (~hackingho@user/hackinghorn)
[01:30:15] *** Quits: magla (~gelignite@55d43df6.access.ecotel.net) (Quit: Stay safe!)
[01:31:15] *** Quits: robod34 (Username@79.113.195.239) (Quit: Goe offline! ( http://marius.sucan.ro/ ))
[01:35:17] *** Quits: Serpent7776 (~Serpent77@90-156-31-193.internetia.net.pl) (Quit: leaving)
[01:38:41] <LordKalma> https://www.reddit.com/r/programming/comments/rf0on5/chrome_users_beware_manifest_v3_is_deceitful_and/?utm_medium=android_app&utm_source=share
[01:38:43] <LordKalma> Interesting stuff
[01:39:25] *** Quits: Guest4008 (phoenix@sdf.org) (Changing host)
[01:39:25] *** Joins: Guest4008 (phoenix@user/phoenix)
[01:39:28] *** Quits: npaperbot (~npaperbot@dodecahedron.m-ou.se) (Remote host closed the connection)
[01:39:35] *** Joins: npaperbot (~npaperbot@dodecahedron.m-ou.se)
[01:39:35] *** ChanServ sets mode: +v npaperbot
[01:39:37] *** Guest4008 is now known as phoenix
[01:40:22] *** Quits: kenanmarasli (~kenanmara@user/kenanmarasli) (Quit: Leaving)
[01:52:14] *** Quits: skapata (~Skapata@user/skapata) (Read error: Connection reset by peer)
[01:52:15] *** Quits: vdamewood (~vdamewood@fedora/vdamewood) (Quit: My MacBook Pro has gone to sleep. ZZZzzz…)
[02:01:26] <ville> of course it's garbage and harmful to users
[02:01:46] *** Quits: Leone (~Leo@69-165-148-197.dsl.teksavvy.com) (Read error: Connection reset by peer)
[02:08:02] *** Quits: johnny (~johnny@user/johnny) (Remote host closed the connection)
[02:09:18] *** Joins: blyat-73 (~hjgkjhgkj@46.235.96.249)
[02:11:17] *** Joins: johnny (~johnny@user/johnny)
[02:15:07] *** Quits: jkaye (~jkaye@2601:281:8300:7530:770c:7340:e88b:8722) (Ping timeout: 252 seconds)
[02:17:37] *** Quits: whupdup (~whupdup@pool-173-76-128-81.bstnma.fios.verizon.net) (Quit: Going offline, see ya! (www.adiirc.com))
[02:20:37] *** Quits: Ivii (~Ivyy@2001:a62:4c3:8e01:3b12:6706:4ee5:604d) (Quit: Leaving)
[02:24:05] <NyB> what I really miss from the old times is the ability to just have a transparent proxy for myself
[02:24:27] <NyB> sure, https:// is a net gain overall
[02:24:59] <NyB> but now we are dependent on the browser doing ~everything
[02:28:19] *** Quits: Juliu (~Juliu@2a02:810b:c640:3ec0:9180:b80f:58c7:8de8) (Quit: Quit)
[02:29:07] <RandomReader> that sounds similar to Safari's API changes
[02:31:58] <NyB> it's probably the usual double-edged sword. It might stop malicious extensions from stealing data, but it could also stop Greasemonkey (or whachamacallit) from fixing broken sites, or adblockers from making ad-flooded sites usable
[02:32:50] <RandomReader> right, it's basically the browser<->extension equivalent of having a program be sandboxed vs having root-level access to your filesystem
[02:33:10] <RandomReader> the declarative API does work, it's just not as flexible
[02:33:23] *** Quits: spaceangel (~spaceange@ip-78-102-216-202.net.upcbroadband.cz) (Remote host closed the connection)
[02:33:47] <RandomReader> if the thing you want to do requires total access, then it's an issue
[02:35:52] <RandomReader> also why do none of these articles link to Google's rationale
[02:35:56] *** Quits: Burgundy (~yomon@79.115.213.171) (Ping timeout: 268 seconds)
[02:36:11] <RandomReader> I can't take the EFF seriously when they're this stupid about bias
[02:37:18] <RandomReader> they come across like self-absorbed zealots with no critical thinking skills who are afraid of truth, which is not helpful to the good they actually do
[02:39:42] <RandomReader> ...although Google goes and uses the term Webbiness to describe part of what they're doing, so maybe this issue is contagious
[02:41:28] <RandomReader> anyway, we'll see what happens with the adblocking and privacy extensions I guess
[02:43:07] <RandomReader> https://developer.chrome.com/docs/extensions/mv3/intro/mv3-overview/ summarizes some of the changes, the "vision" link is where Webbiness lives
[02:47:02] *** Quits: dextercd (~dexter@2a02-a450-f25d-1-76d4-35ff-fefe-34c.fixed6.kpn.net) (Quit: WeeChat 3.3)
[02:47:55] *** Joins: whupdup (~whupdup@pool-173-76-128-81.bstnma.fios.verizon.net)
[02:56:00] *** Quits: slavfox (~slavfox@ipv4-93-158-232-111.net.internetunion.pl) (Quit: ZNC 1.8.2 - https://znc.in)
[02:59:51] *** Joins: slavfox (~slavfox@93.158.232.111)
[03:01:14] *** Quits: plastico (~plastico@neomutt/plastico) (Quit: WeeChat 3.3)
[03:04:06] *** Quits: blyat-73 (~hjgkjhgkj@46.235.96.249) (Ping timeout: 265 seconds)
[03:06:17] *** Joins: Itaru (~DaSH@ro2.flokinet.is)
[03:06:55] *** Quits: Itaru (~DaSH@ro2.flokinet.is) (Remote host closed the connection)
[03:07:08] *** Joins: Itaru (~DaSH@ro2.flokinet.is)
[03:08:51] *** Joins: Juliu (~Juliu@2a02:810b:c640:3ec0:9180:b80f:58c7:8de8)
[03:10:56] *** Joins: blyat-73 (~hjgkjhgkj@46.235.96.249)
[03:11:14] *** Quits: Itaru (~DaSH@ro2.flokinet.is) (Client Quit)
[03:11:32] *** Joins: Itaru (~DaSH@ro2.flokinet.is)
[03:14:56] <Alipha> std::stringstream ss(str); std::string part; while(std::getline(ss, part, ':')) { ... } // mort
[03:19:41] <Plazma> how come that prime menstration boris yeltson in the UK always looks like he just got out of hte pub at 3am
[03:20:00] <Plazma> err
[03:20:01] <Plazma> sorry
[03:20:14] <Plazma> wrong chan
[03:22:17] *** Quits: adeliktas (~adeliktas@2001:16b8:22c1:c800:fc6c:f5c3:4e96:ccc3) (Quit: Client closed)
[03:23:49] <Plazma> oh hi mort imore!
[03:24:03] *** Quits: Itaru (~DaSH@ro2.flokinet.is) (Ping timeout: 252 seconds)
[03:24:13] <mort> imore?
[03:24:39] *** Joins: adeliktas (~adeliktas@2001:16b8:22c1:c800:2c75:424f:b294:4ea4)
[03:27:47] <Plazma> mort is short for mortimor i think
[03:28:46] <mort> TIL
[03:29:02] <Plazma> huh
[03:29:19] <Plazma> oh i guess it's short for mortimer
[03:29:21] <Plazma> so is morty
[03:29:30] *** Quits: Tobbi (~Tobbi@2a02:8108:1240:48ec:5c9b:338b:bb4b:5779) (Quit: My MacBook has gone to sleep. ZZZzzz…)
[03:34:22] *** Quits: andreasbuhr_ (~quassel@p549db835.dip0.t-ipconnect.de) (Quit: https://quassel-irc.org - Chat comfortably. Anywhere.)
[03:35:38] <mort> nah, this nick has very obscure roots you won't ever guess
[03:36:13] <Plazma> oh probably related to your father or something
[03:36:20] <Plazma> but good to see you here
[03:37:14] *** Joins: chippy (~chippy@61.136.91.249)
[03:38:17] <mort> Not sure how to interpret that; if you think you recognize me from somewhere you probably don't? But if not: good to see you here too, random Internet person
[03:39:02] <Plazma> oh no i don't,
[03:39:13] <Plazma> just macdev or some other dev channel on here and possibly the olden freenoden
[03:39:30] <mort> aha
[03:39:31] <Plazma> ahh macdev yes
[03:41:17] <mort> yeah I'm there a bit
[03:42:33] <mort> I don't feel it's a great match for me because it seems to mostly be about making Mac apps with swift and Xcode and objective-c and cocoa and whatever while I just do.. cross platform development of non-GUI stuff.. but using a Mac as my unix of choice to do that on
[03:45:19] *** Quits: Alipha (~AliphaX@user/alipha) (Ping timeout: 252 seconds)
[03:53:01] *** Joins: jwillikers (~jwilliker@2604:2800:2:a403:fe91:ac3e:5153:1290)
[03:54:42] *** Quits: Juliu (~Juliu@2a02:810b:c640:3ec0:9180:b80f:58c7:8de8) (Quit: Quit)
[03:55:36] *** Quits: jwillikers (~jwilliker@2604:2800:2:a403:fe91:ac3e:5153:1290) (Remote host closed the connection)
[03:56:39] *** Quits: whupdup (~whupdup@pool-173-76-128-81.bstnma.fios.verizon.net) (Quit: Going offline, see ya! (www.adiirc.com))
[03:57:11] *** Joins: jwillikers (~jwilliker@2604:2800:2:a403:fe91:ac3e:5153:1290)
[03:59:18] *** Joins: lh_mouse (~lh_mouse@mingw-w64/developer/lhmouse)
[04:05:49] *** Quits: CodeMouse92 (~CodeMouse@user/codemouse92) (Quit: Oh freddled gruntbuggly | Thy micturations are to me | As plurdled gabbleblotchits | On a lurgid bee)
[04:11:18] *** Quits: jwillikers (~jwilliker@2604:2800:2:a403:fe91:ac3e:5153:1290) (Remote host closed the connection)
[04:18:13] *** Joins: jwillikers (~jwilliker@2604:2800:2:a403:fe91:ac3e:5153:1290)
[04:25:26] *** Quits: Jupp_S (~quassel@ip-88-153-154-129.hsi04.unitymediagroup.de) (Remote host closed the connection)
[04:30:48] *** Quits: jwillikers (~jwilliker@2604:2800:2:a403:fe91:ac3e:5153:1290) (Remote host closed the connection)
[04:32:26] *** Joins: jwillikers (~jwilliker@2604:2800:2:a403:fe91:ac3e:5153:1290)
[04:35:10] *** Quits: pulse (~pulse@user/pulse) (Quit: Join our gamedev community https://indiedevs.net/)
[04:37:11] *** Joins: lh_ideapad (~lh_mouse@mingw-w64/developer/lhmouse)
[04:37:43] *** Quits: jwillikers (~jwilliker@2604:2800:2:a403:fe91:ac3e:5153:1290) (Read error: Connection reset by peer)
[04:38:22] *** Joins: jwillikers (~jwilliker@2604:2800:2:a403:fe91:ac3e:5153:1290)
[04:47:07] *** Quits: PJBoy (~PJBoy@user/pjboy) (Killed (lithium.libera.chat (Nickname regained by services)))
[04:47:11] *** Joins: PJBoy (~PJBoy@user/pjboy)
[04:48:04] *** PJBoy is now known as Guest7081
[04:48:07] *** Joins: PJBoy (~PJBoy@user/pjboy)
[04:52:14] *** Quits: Guest7081 (~PJBoy@user/pjboy) (Ping timeout: 268 seconds)
[05:00:38] *** Quits: proller (~p@2a02:6b8:b081:16::1:37) (Ping timeout: 260 seconds)
[05:03:51] *** Joins: Alipha (~AliphaX@75-168-47-62.mpls.qwest.net)
[05:03:51] *** Quits: Alipha (~AliphaX@75-168-47-62.mpls.qwest.net) (Changing host)
[05:03:51] *** Joins: Alipha (~AliphaX@user/alipha)
[05:07:02] *** Quits: PJBoy (~PJBoy@user/pjboy) (Ping timeout: 268 seconds)
[05:14:05] *** Joins: proller (~p@80.240.216.69)
[05:21:54] <rpav> kmscube totally works, though .. unclear how to communicate between processes/contexts
[05:22:43] *** Quits: ashafq (~ashafq@pool-96-237-238-252.bstnma.fios.verizon.net) (Remote host closed the connection)
[05:23:40] *** Joins: ashafq (~ashafq@pool-96-237-238-252.bstnma.fios.verizon.net)
[05:27:53] *** Quits: jwillikers (~jwilliker@2604:2800:2:a403:fe91:ac3e:5153:1290) (Remote host closed the connection)
[05:37:02] <rpav> this could totally work, the way wayland does the low-level bits, but without the giant sucking sound of the rest of it
[05:37:32] *** Quits: cbreak (~cbreak@77-58-201-132.dclient.hispeed.ch) (Read error: Connection reset by peer)
[05:39:28] *** Quits: npaperbot (~npaperbot@dodecahedron.m-ou.se) (Remote host closed the connection)
[05:39:38] *** Joins: npaperbot (~npaperbot@dodecahedron.m-ou.se)
[05:39:39] *** ChanServ sets mode: +v npaperbot
[05:39:47] *** Joins: pulse (~pulse@user/pulse)
[05:39:56] *** Parts: rpav (~rpav@user/rpav) (ERC (IRC client for Emacs 28.0.50))
[05:40:23] *** Joins: cbreak (~cbreak@77-58-201-132.dclient.hispeed.ch)
[05:41:33] *** Joins: rpav (~rpav@user/rpav)
[05:41:51] *** Joins: paule32_ (~paule32@user/paule32)
[05:41:56] *** Quits: seninha (~seninha@user/seninha) (Quit: Leaving)
[05:44:34] *** Quits: paule32 (~paule32@user/paule32) (Ping timeout: 265 seconds)
[05:59:10] *** Quits: DSpider (~DSpider@82.79.237.104) (Quit: Leaving)
[06:14:43] *** Quits: Tokamak (~Tokamak@172.58.191.87) (Read error: Connection reset by peer)
[06:15:09] *** Quits: johnny (~johnny@user/johnny) (Remote host closed the connection)
[06:15:43] *** Joins: freakazoid333 (~matt@2603:9000:cf0f:80e3:24da:6c99:9324:ec4d)
[06:18:23] *** Joins: johnny (~johnny@user/johnny)
[06:22:18] *** Quits: lh_ideapad (~lh_mouse@mingw-w64/developer/lhmouse) (Ping timeout: 260 seconds)
[06:24:23] *** Joins: Tokamak (~Tokamak@172.58.191.87)
[06:38:31] *** Joins: Guest48 (~Guest48@120.17.160.80)
[06:39:13] *** Joins: paule32 (~paule32@user/paule32)
[06:41:41] *** Quits: paule32_ (~paule32@user/paule32) (Ping timeout: 252 seconds)
[06:42:06] *** Quits: chippy (~chippy@61.136.91.249) (Remote host closed the connection)
[06:42:52] *** Joins: lh_ideapad (~lh_mouse@mingw-w64/developer/lhmouse)
[06:44:51] *** Joins: adeliktas5 (~adeliktas@2001:16b8:22fb:2900:ff0b:f7a9:2da3:70c4)
[06:45:10] *** Quits: ghenry (~ghenry@ghenry.plus.com) (Ping timeout: 260 seconds)
[06:47:11] *** Joins: grep_xtrange (~x@ac255238.ppp.asahi-net.or.jp)
[06:47:50] *** Quits: adeliktas (~adeliktas@2001:16b8:22c1:c800:2c75:424f:b294:4ea4) (Ping timeout: 256 seconds)
[06:48:04] *** Quits: pulse (~pulse@user/pulse) (Quit: Join our gamedev community https://indiedevs.net/)
[06:49:36] *** Quits: z8z (~x@ac255238.ppp.asahi-net.or.jp) (Ping timeout: 256 seconds)
[06:53:25] *** Quits: proller (~p@80.240.216.69) (Ping timeout: 240 seconds)
[06:57:36] *** Quits: Roughy (~mdaw45ns@user/roughy) (Quit: Meadow Fresh milk)
[06:58:01] *** Joins: ghenry (~ghenry@ghenry.plus.com)
[06:59:59] *** Joins: ferdna (~ferdna@user/ferdna)
[07:03:18] *** Quits: Guest48 (~Guest48@120.17.160.80) (Quit: Client closed)
[07:13:57] *** Joins: Itaru (~Itaru@ro2.flokinet.is)
[07:37:07] *** Quits: blyat-73 (~hjgkjhgkj@46.235.96.249) (Quit: Leaving)
[07:44:24] *** adeliktas5 is now known as adeliktas
[07:47:03] *** Joins: Jupp_S (~quassel@ip-88-153-154-129.hsi04.unitymediagroup.de)
[07:55:04] *** Quits: smeso (~smeso@user/smeso) (Quit: smeso)
[07:56:55] *** Quits: grep_xtrange (~x@ac255238.ppp.asahi-net.or.jp) (Quit: Quitting)
[07:57:13] *** Joins: z8z (~x@ac255238.ppp.asahi-net.or.jp)
[08:01:23] *** Joins: smeso (~smeso@user/smeso)
[08:02:21] *** Quits: ferdna (~ferdna@user/ferdna) (Quit: Leaving)
[08:07:16] *** Joins: smallville7123 (~smallvill@cpe-172-193-72-46.qld.foxtel.net.au)
[08:14:39] *** Joins: Burgundy (~yomon@79.115.213.171)
[08:55:06] *** Quits: xkuru (~xkuru@user/xkuru) (Read error: Connection reset by peer)
[08:55:51] *** Quits: great_taste (~great_tas@user/great-taste/x-5798414) (Quit: Client closed)
[08:56:12] *** Quits: malloy (~jimery@116.30.222.36) (Ping timeout: 250 seconds)
[08:58:04] *** Joins: malloy (~jimery@116.30.222.36)
[09:14:13] *** Joins: skapata (~Skapata@2804:14c:87b0:a6f9:35dd:94ed:cb4d:1568)
[09:14:13] *** Quits: skapata (~Skapata@2804:14c:87b0:a6f9:35dd:94ed:cb4d:1568) (Changing host)
[09:14:13] *** Joins: skapata (~Skapata@user/skapata)
[09:35:16] *** Joins: sord937 (~sord937@gateway/tor-sasl/sord937)
[09:39:29] *** Quits: npaperbot (~npaperbot@dodecahedron.m-ou.se) (Remote host closed the connection)
[09:39:36] *** Joins: npaperbot (~npaperbot@dodecahedron.m-ou.se)
[09:39:36] *** ChanServ sets mode: +v npaperbot
[09:58:46] *** Quits: smallville7123 (~smallvill@cpe-172-193-72-46.qld.foxtel.net.au) (Remote host closed the connection)
[10:04:04] *** Quits: letto (~letto@188.26.158.104) (Quit: Konversation terminated!)
[10:04:53] *** Joins: letto (~letto@188.26.158.104)
[10:29:29] *** Joins: JohnMS_WORK (~kvirc@89-64-84-95.dynamic.chello.pl)
[10:35:21] *** Joins: smallville7123 (~smallvill@cpe-172-193-72-46.qld.foxtel.net.au)
[10:38:07] *** Quits: EdFletcher (~PKD@user/edfletcher) (Quit: Quit.)
[10:39:50] *** Quits: smallville7123 (~smallvill@cpe-172-193-72-46.qld.foxtel.net.au) (Read error: Connection reset by peer)
[10:39:59] *** Joins: EdFletcher (~PKD@user/edfletcher)
[10:42:29] *** Joins: smallville7123 (~smallvill@cpe-172-193-72-46.qld.foxtel.net.au)
[10:46:13] *** Quits: EdFletcher (~PKD@user/edfletcher) (Quit: Quit.)
[10:47:24] *** Joins: EdFletcher (~PKD@user/edfletcher)
[10:55:19] *** Joins: Tobbi (~Tobbi@2a02:8108:1240:48ec:9067:6b49:7f00:dbc9)
[11:05:04] *** Joins: evocatus (~evocatus@91.211.251.87)
[11:10:07] *** Quits: EdFletcher (~PKD@user/edfletcher) (Quit: Quit.)
[11:11:40] *** Joins: EdFletcher (~PKD@user/edfletcher)
[11:24:02] *** Joins: Serpent7776 (~Serpent77@90-156-31-193.internetia.net.pl)
[11:41:50] *** hackinghorn is now known as dave0smommy
[11:43:00] *** dave0smommy is now known as hackinghorn
[11:49:11] *** Joins: lh_cat (~lh_mouse@mingw-w64/developer/lhmouse)
[11:51:53] *** Quits: lh_mouse (~lh_mouse@mingw-w64/developer/lhmouse) (Ping timeout: 252 seconds)
[12:05:14] *** Quits: LiaoTao (~LiaoTao@gateway/tor-sasl/liaotao) (Remote host closed the connection)
[12:05:36] *** Joins: LiaoTao (~LiaoTao@gateway/tor-sasl/liaotao)
[12:08:53] *** Quits: Spirit532 (~Spirit532@mm-44-47-84-93.mgts.dynamic.pppoe.byfly.by) (Killed (NickServ (GHOST command used by Spirit5327!~Spirit532@178.127.95.42)))
[12:08:54] *** Joins: evocatus_ (~evocatus@213.193.2.105)
[12:08:55] *** Joins: Spirit532 (~Spirit532@178.127.95.42)
[12:09:30] *** Quits: evocatus_ (~evocatus@213.193.2.105) (Remote host closed the connection)
[12:11:54] *** Quits: evocatus (~evocatus@91.211.251.87) (Ping timeout: 268 seconds)
[12:14:43] <LordKalma> !rq
[12:14:43] <nolyc> LordKalma: <hnOsmium0001> I should've quotegrabbed that but anyways...
[12:18:29] *** Joins: lh_mouse_ (~lh_mouse@mingw-w64/developer/lhmouse)
[12:21:47] *** Quits: lh_cat (~lh_mouse@mingw-w64/developer/lhmouse) (Ping timeout: 268 seconds)
[12:22:52] *** Joins: robod34 (Username@79.113.195.239)
[12:23:23] *** Joins: interop_madness (~interop_m@user/interop-madness/x-0950004)
[12:29:33] *** Quits: skapata (~Skapata@user/skapata) (Remote host closed the connection)
[12:33:19] *** Joins: andreasbuhr (~quassel@p549db084.dip0.t-ipconnect.de)
[12:41:26] *** Joins: vdamewood (~vdamewood@fedora/vdamewood)
[12:42:13] <LordKalma> ES6's import system is better than python's
[12:42:22] <LordKalma> why the fuck do I have to write "from ....edfa import EDFAImpl"
[12:42:28] <LordKalma> ........... my ass
[12:45:52] <LordKalma> In more interesting thing, who wants an algorithmic challenge?
[12:47:11] <very_sneaky> you don't though?
[12:47:27] <very_sneaky> `import edfa` and then `edfa.EDFAImpl` would do
[12:47:38] <LordKalma> that assumes the package is installed ;)
[12:48:02] <very_sneaky> does it? in what way
[12:48:30] <very_sneaky> oh, your own package. sure.
[12:48:41] <LordKalma> import edga requires you to have the package in dist_utils. or at least the directory it's in in the search path
[12:48:41] <very_sneaky> which you should probably do anyway
[12:48:47] <LordKalma> https://i.gyazo.com/37c80fd2be179623b2bd5f7b7c917f0c.png
[12:48:57] *** Joins: Haohmaru (~Haohmaru@195.24.53.110)
[12:49:24] <very_sneaky> that structure hurts my eyes
[12:49:26] <LordKalma> with `python setup.py develop` I guess I could do package.instruments but whatever
[12:49:43] <LordKalma> anyway
[12:49:47] <LordKalma> more interesting problem:
[12:53:41] <LordKalma> So I have this problem: there are 4^7=16384 "slots" where I want to distribute 255 things on. I have an heuristic that tells me the "distance" between any two elements. No there isn't the possibility to calculate the absolute distance from the root, it's not a 7D-space. The challenge is distribute them in such a way they are further apart as possible.
[12:53:55] <very_sneaky> i'm so confused. whenever i install a package i use absolute imports, works a treat
[12:54:15] <LordKalma> Someone suggested A* for that problem. I understand Djikstra and A* for between two points, but not to distribute a "graph"
[12:54:50] <LordKalma> very_sneaky, this is all the same package, importing stuff relative to one another in said package. the package isnt' yet installed, or consumed.
[12:55:08] <LordKalma> funnily enoyugh, if I install the package now, I can absolute import what's already installed, and I think that's what you mean
[12:55:14] <LordKalma> but I'm still writing and changing crap all the time
[13:03:36] <LordKalma> anyway, if someone has tips on my distribution problem, let me know
[13:08:35] *** Quits: greyrat_ (~greyrat@ip202.ip-51-178-215.eu) (Bye)
[13:08:55] *** Joins: greyrat (~greyrat@ip202.ip-51-178-215.eu)
[13:09:18] *** Joins: rwb (~augh@theguntretort.com)
[13:09:22] *** Joins: cbreak_ (~cbreak@77-58-201-132.dclient.hispeed.ch)
[13:09:23] *** Joins: amosbird- (~amosbird@13.75.119.182)
[13:09:30] *** Joins: notevil_ (~notevil@user/notevil)
[13:09:58] *** Joins: jzsinatr2 (~jzsinatra@88-114-238-31.elisa-laajakaista.fi)
[13:09:58] *** Joins: plastico (~plastico@neomutt/plastico)
[13:10:10] *** Server sets mode: +Fcnt 
[13:10:23] *** Joins: mattgirv_ (quassel@apps.fossgalaxy.com)
[13:11:09] *** Joins: Tokamak_ (~Tokamak@172.58.191.87)
[13:11:13] *** Joins: barix (~barix@user/barix)
[13:11:28] *** Joins: Adrinael_ (adrinael@dsl-hkibng21-54f8c5-237.dhcp.inet.fi)
[13:15:03] *** Joins: tabakhase__ (tabakhase@user/tabakhase)
[13:15:29] *** Joins: smeso_ (~smeso@user/smeso)
[13:15:29] *** Quits: smeso (~smeso@user/smeso) (Killed (zirconium.libera.chat (Nickname regained by services)))
[13:15:29] *** smeso_ is now known as smeso
[13:16:37] *** Quits: xShad0w (~shad0w@user/xshadow) (Ping timeout: 240 seconds)
[13:16:43] *** Quits: robod34 (Username@79.113.195.239) (*.net *.split)
[13:16:44] *** Quits: EdFletcher (~PKD@user/edfletcher) (*.net *.split)
[13:16:44] *** Quits: z8z (~x@ac255238.ppp.asahi-net.or.jp) (*.net *.split)
[13:16:44] *** Quits: lh_ideapad (~lh_mouse@mingw-w64/developer/lhmouse) (*.net *.split)
[13:16:44] *** Quits: Tokamak (~Tokamak@172.58.191.87) (*.net *.split)
[13:16:44] *** Quits: cbreak (~cbreak@77-58-201-132.dclient.hispeed.ch) (*.net *.split)
[13:16:44] *** Quits: slavfox (~slavfox@93.158.232.111) (*.net *.split)
[13:16:44] *** Quits: stkrdknmibalz (~test@rrcs-75-87-43-226.sw.biz.rr.com) (*.net *.split)
[13:16:44] *** Quits: useful_idiot (~useful_id@gateway/vpn/pia/usefulidiot/x-43226899) (*.net *.split)
[13:16:44] *** Quits: cursey (~cursey@user/cursey) (*.net *.split)
[13:16:44] *** Quits: shad0w (~shad0w@user/xshadow) (*.net *.split)
[13:16:44] *** Quits: Khoyo (~khoyo@user/khoyo) (*.net *.split)
[13:16:44] *** Quits: darkstardevx (~darkstard@50.39.115.145) (*.net *.split)
[13:16:44] *** Quits: nexgen (~nexgen@li614-178.members.linode.com) (*.net *.split)
[13:16:44] *** Quits: c4017w_ (~c4017@209.52.68.8) (*.net *.split)
[13:16:44] *** Quits: Flonk (~Flonk@vps-zap441517-1.zap-srv.com) (*.net *.split)
[13:16:44] *** Quits: kapil (~kapil@o-k.website) (*.net *.split)
[13:16:44] *** Quits: pa (~pah@user/pah) (*.net *.split)
[13:16:44] *** Quits: ezzieyguywuf (~Unknown@user/ezzieyguywuf) (*.net *.split)
[13:16:44] *** Quits: tct (~tct@8.200.173.83.static.wline.lns.sme.cust.swisscom.ch) (*.net *.split)
[13:16:45] *** Quits: Artea (~Lufia@artea.com.pt) (*.net *.split)
[13:16:45] *** Quits: Ameisen (~ameisen@digitalcarbide.com) (*.net *.split)
[13:16:45] *** Quits: Oxyd (~oxyd@user/oxyd) (*.net *.split)
[13:16:45] *** Quits: Trollmann (~Trollmann@user/trollmann) (*.net *.split)
[13:16:45] *** Quits: hfsoulz (~hfsoulz@user/hfsoulz) (*.net *.split)
[13:16:45] *** Quits: mattgirv (quassel@apps.fossgalaxy.com) (*.net *.split)
[13:16:45] *** Quits: xisop (~xisop@bnull.net) (*.net *.split)
[13:16:45] *** Quits: kaichiuchu (~kaichiuch@user/kaichiuchu) (*.net *.split)
[13:16:45] *** Quits: tabakhase (~tabakhase@user/tabakhase) (*.net *.split)
[13:16:45] *** Quits: Adrinael (adrinael@dsl-hkibng21-54f8c5-237.dhcp.inet.fi) (*.net *.split)
[13:16:45] *** Quits: barix_ (~barix@user/barix) (*.net *.split)
[13:16:45] *** Quits: greyrat_ (~greyrat@ip202.ip-51-178-215.eu) (*.net *.split)
[13:16:45] *** Quits: amosbird (~amosbird@13.75.119.182) (*.net *.split)
[13:16:45] *** Quits: jzsinatra (~jzsinatra@88-114-238-31.elisa-laajakaista.fi) (*.net *.split)
[13:16:45] *** Quits: notevil (~notevil@user/notevil) (*.net *.split)
[13:16:45] *** Quits: jns (~x@user/jns) (*.net *.split)
[13:16:45] *** Quits: mIGu (~mig21@user/naur) (*.net *.split)
[13:16:45] *** Quits: rb (~augh@theguntretort.com) (*.net *.split)
[13:16:45] *** Quits: zoraj (~zoraj@209.126.81.159) (*.net *.split)
[13:16:45] *** Quits: FLHerne (~flh@flherne.uk) (*.net *.split)
[13:16:46] *** slavfox_ is now known as slavfox
[13:16:46] *** mIGu_ is now known as mIGu
[13:16:46] *** FLHerne_ is now known as FLHerne
[13:18:47] *** tabakhase__ is now known as tabakhase
[13:19:19] <very_sneaky> LordKalma: well, it's just a search problem so dijkstra or A* should work if you can define the solution space properly
[13:19:56] <LordKalma> that's what I'm not sure about
[13:20:27] <LordKalma> A*/djk is easy for path search on a graph. for this "variation", idk
[13:21:05] *** Joins: lh_ideapad (~lh_mouse@mingw-w64/developer/lhmouse)
[13:21:08] *** Quits: AbleBacon (~AbleBacon@user/AbleBacon) (Read error: Connection reset by peer)
[13:21:51] *** Joins: robod34 (Username@79.113.195.239)
[13:21:51] *** Joins: z8z (~x@ac255238.ppp.asahi-net.or.jp)
[13:21:51] *** Joins: useful_idiot (~useful_id@gateway/vpn/pia/usefulidiot/x-43226899)
[13:21:51] *** Joins: Flonk (~Flonk@vps-zap441517-1.zap-srv.com)
[13:21:51] *** Joins: kapil (~kapil@o-k.website)
[13:21:51] *** Joins: pa (~pah@user/pah)
[13:21:51] *** Joins: tct (~tct@8.200.173.83.static.wline.lns.sme.cust.swisscom.ch)
[13:21:51] *** Joins: Ameisen (~ameisen@digitalcarbide.com)
[13:21:51] *** Joins: Oxyd (~oxyd@user/oxyd)
[13:21:51] *** Joins: Trollmann (~Trollmann@user/trollmann)
[13:21:51] *** Joins: hfsoulz (~hfsoulz@user/hfsoulz)
[13:21:51] *** Joins: xisop (~xisop@bnull.net)
[13:21:51] *** Joins: kaichiuchu (~kaichiuch@user/kaichiuchu)
[13:22:30] *** Quits: Colt (~Colt@user/colt) (Remote host closed the connection)
[13:22:57] *** Joins: Colt (~Colt@user/colt)
[13:26:32] <fiesh> LordKalma: what are the "elements" -- the "slots" or the "things"
[13:26:38] *** Joins: nexgen (~nexgen@li614-178.members.linode.com)
[13:26:39] <fiesh> it would help if you phrased your problem less unclearly
[13:27:07] <fiesh> neither is it clear what the "root" is
[13:27:12] *** Adrinael_ is now known as Adrinael
[13:27:24] <LordKalma> the slots are all combinations of possible symbols with 7 subcarriers of QPSK constellations :p
[13:28:11] <LordKalma> the "things" is what I want to decide. Basically decide which symbol will be each number fro 0-255 (8 bits)
[13:30:25] <LordKalma> in fact, I didn't phrase the problem correctly. because there aren't 4^7 places. because an 8-bit symbol occupied 4 points (each QPSK constellation point is 2 bits)
[13:30:43] *** Quits: adeliktas (~adeliktas@2001:16b8:22fb:2900:ff0b:f7a9:2da3:70c4) (Ping timeout: 256 seconds)
[13:30:46] <very_sneaky> could you formulate the overall objective function as maximum sum of distances between nodes
[13:31:24] <very_sneaky> how do you measure the maximum distance for all nodes
[13:31:54] <LordKalma> well, the distance between two nodes would be the sum of the distances between points in the constellations they happen to share
[13:32:21] <RandomReader> aren't these things fixed already?
[13:32:38] <RandomReader> e.g. it seems like you can just divide evenly and get spacing
[13:33:17] <RandomReader> (also seems like there would be existing implementations that have already chosen and documented values)
[13:33:34] *** Joins: whupdup (~whupdup@pool-173-76-128-81.bstnma.fios.verizon.net)
[13:34:15] *** Quits: JohnMS_WORK (~kvirc@89-64-84-95.dynamic.chello.pl) (Quit: KVIrc 5.0.1 Aria http://www.kvirc.net/)
[13:34:30] *** Joins: adeliktas (~adeliktas@2001:16b8:22fb:2900:ff0b:f7a9:2da3:70c4)
[13:36:22] *** Joins: JohnMS_WORK (~kvirc@89-64-84-95.dynamic.chello.pl)
[13:36:33] <LordKalma> there are papers on tangential things, but not this in particular
[13:36:51] <LordKalma> it's not even my problem, but a colleague is facing that challenge, and I'm really curious how it could be done
[13:36:56] <RandomReader> what's unique about this? QPSK is common
[13:37:00] <LordKalma> I mean the search space is definitely finite
[13:37:03] <LordKalma> but huge
[13:37:37] *** Joins: PJBoy (~PJBoy@user/pjboy)
[13:37:41] <LordKalma> RandomReader, but it's usually "combined" in things like OFDM where this problem doesn't matter
[13:39:29] *** Quits: npaperbot (~npaperbot@dodecahedron.m-ou.se) (Remote host closed the connection)
[13:39:37] *** Joins: npaperbot (~npaperbot@dodecahedron.m-ou.se)
[13:39:37] *** ChanServ sets mode: +v npaperbot
[13:40:15] <RandomReader> I'm missing the problem
[13:51:12] *** Joins: paul424 (~tom@ip-37-248-153-164.multi.internet.cyfrowypolsat.pl)
[13:58:55] <smallville7123> https://gist.github.com/mgood7123/4217d10423f9f7576841fc11a7f6ae88 would this be correctish for parsing a macro function definition?
[14:00:22] <LordKalma> wtf did I just see?
[14:00:54] *** Joins: voltron (~voltrin_@ip4d16bdc6.dynamic.kabel-deutschland.de)
[14:01:17] <PJBoy> looks like a compile time grammar
[14:01:26] *** Quits: lh_ideapad (~lh_mouse@mingw-w64/developer/lhmouse) (Ping timeout: 265 seconds)
[14:01:51] *** Joins: lh_ideapad (~lh_mouse@mingw-w64/developer/lhmouse)
[14:02:02] <PJBoy> kinda neat actually
[14:02:24] <LordKalma> shouldn't L22 have a , in the ed?
[14:02:25] *** Quits: voltron (~voltrin_@ip4d16bdc6.dynamic.kabel-deutschland.de) (Read error: Connection reset by peer)
[14:02:26] <LordKalma> end*
[14:02:48] *** Joins: voltron (~voltrin_@ip4d16bdc6.dynamic.kabel-deutschland.de)
[14:04:43] *** Joins: seninha (~seninha@user/seninha)
[14:05:02] <PJBoy> macros aren't actually allowed whitespace between the macro name and the opening parenthesis
[14:06:24] <PJBoy> I assume you're not trying to match variadic macros
[14:07:18] <PJBoy> or the result of the macro replacement
[14:08:06] <PJBoy> I would try to simplify that whole thing in general
[14:08:48] <PJBoy> the seq on line 9 can be factored out as "identifier list"
[14:10:03] <PJBoy> which I'd be tempted to split into "identifier0" and "extra_identifiers"
[14:13:48] *** Joins: proller (~p@80.240.216.69)
[14:22:01] *** Quits: zoraj_ (~zoraj@209.126.81.159) (Read error: Connection reset by peer)
[14:25:07] *** Joins: zoraj (~zoraj@209.126.81.159)
[14:33:36] *** Joins: shad0w (~shad0w@user/xshadow)
[14:36:33] <tonitch> Hey, I did this [
[14:37:01] <tonitch> Hey, I did this [1] and the last line prints two time... can you tell me why please ? :D
[14:37:06] <tonitch> [1](https://gist.github.com/tonitch/5dd70dc1ffef3fe257450d1de57be418)
[14:39:04] *** Quits: Hello71 (~Hello71@wireguard/contributor/hello71) (Remote host closed the connection)
[14:41:12] <PJBoy> probably getline fails and you didn't even ask how it was doing
[14:41:37] *** Joins: Hello71 (~Hello71@wireguard/contributor/hello71)
[14:41:38] <PJBoy> it got offended and decided that config_file >> value would be a no-op, because it's in fail mode
[14:42:00] <tonitch> so I should just check if getline == -1 ?
[14:42:15] <PJBoy> why would getline return -1?
[14:42:39] <RandomReader> https://isocpp.org/wiki/faq/input-output#stream-input-failure
[14:42:47] <PJBoy> but yeah, should check for failures
[14:42:59] <PJBoy> `config_file >> value` can fail too
[14:43:39] <tonitch> I was reading man getline and the return value say that function return -1 on failure GETLINE(3)
[14:43:53] <PJBoy> sounds like the wrong getline
[14:44:00] <PJBoy> https://en.cppreference.com/w/cpp/string/basic_string/getline here's the docs
[14:44:03] <tonitch> yhea I guess
[14:44:55] <PJBoy> yeah that man page must be for posix getline https://man7.org/linux/man-pages/man3/getline.3.html
[14:45:09] <PJBoy> I would never use man pages for C/C++ stdlib
[14:45:23] <tonitch> does it just return my file back ? what is the point ?
[14:45:37] <PJBoy> it turns the stream back
[14:45:58] <PJBoy> which allows you to use that return value instead of naming the stream again
[14:46:21] <PJBoy> generally you'll see that used for stuff like `while (getline(in, str, delim))`
[14:46:37] <PJBoy> so while can check the stream object returned by getline for failure
[14:47:08] <PJBoy> equivalent to `for (;;) { getline(in, str, delim); if (!in) break; ... }`
[14:47:14] <PJBoy> which would be a bit more tedious to use
[14:50:02] <tonitch> ho, yhea I understand...
[14:52:43] <very_sneaky> yeesh, a first glance at jenkins looks a bit rough in comparison to gitlab
[14:53:23] <tonitch> just to be sure, just doing if(!config_file){break;} is okay ?
[14:53:31] <tonitch> (at the end of the loop)
[14:55:45] <PJBoy> it's ok to do that, but would be redundant
[14:56:41] <smallville7123> im back
[14:56:59] <smallville7123> PJBoy: yea i forgot :)
[14:59:03] <smallville7123> PJBoy: "20:38:07 PJBoy: I would try to simplify that whole thing in general" true, tho i am not sure how to detect my macro function in terms of ensuring it is passed the correct number of arguments
[15:00:24] <PJBoy> I wonder if it would be easier for you to leverage clang-query
[15:00:32] *** Quits: proller (~p@80.240.216.69) (Ping timeout: 240 seconds)
[15:01:36] <PJBoy> hm, perhaps not
[15:01:57] <PJBoy> idk
[15:02:29] <smallville7123> PJBoy: i am intending for this to be a portable extendable implementation of the C pre-processor and well attempting to bundle in clang and all its stuff may just result in increased complexity and bloat
[15:02:56] <PJBoy> so you're rewriting TeX
[15:03:15] * smallville7123 looks at https://firefox-source-docs.mozilla.org/code-quality/static-analysis/writing-new/clang-query.html
[15:03:26] <smallville7123> PJBoy: TeX ?
[15:03:42] <PJBoy> document markup language
[15:03:50] <PJBoy> it uses text replacement macros like C
[15:04:15] <PJBoy> but it takes them to such a phenomenally crazy level that you can even draw graphics with them
[15:05:46] <smallville7123> doesnt seem like LaTeX has a built-in preprocessor and looking at https://tex.stackexchange.com/a/45964 is not something i want
[15:06:06] <PJBoy> it's entirely pre-processor
[15:06:13] <PJBoy> if anything there's no processor
[15:06:38] *** Joins: xkuru (~xkuru@user/xkuru)
[15:07:04] <smallville7123> alright
[15:07:46] <PJBoy> I'd show you some package source code, but it seems I haven't installed TeX on this laptop yet
[15:08:17] *** Joins: magla (~gelignite@55d41c14.access.ecotel.net)
[15:08:24] <smallville7123> i dont want to use TeX
[15:08:53] <PJBoy> well that's the road you're going down trying to base anything off the C preprocessor ;)
[15:09:41] *** Quits: JohnMS_WORK (~kvirc@89-64-84-95.dynamic.chello.pl) (Ping timeout: 250 seconds)
[15:10:03] <smallville7123> and im not sure if clang-query would help
[15:10:34] <smallville7123> PJBoy: how so?
[15:10:52] <PJBoy> TeX is the logical conclusion of text replacement macros
[15:11:18] <smallville7123> :)
[15:11:20] <PJBoy> anything you write based on text replacement works on a scale of 0 to 10, 0 being C preprocessor and 10 being TeX
[15:11:30] <smallville7123> then 0
[15:11:41] <smallville7123> :)
[15:11:43] <PJBoy> then your work is already done
[15:11:45] <PJBoy> just use C
[15:11:57] <smallville7123> im trying to parse C
[15:12:09] <smallville7123> no
[15:12:11] <PJBoy> with the aim of extending it, right?
[15:13:23] <smallville7123> im trying to parse GLSL which is a C-like language, which also uses a version of the C pre-processor in the shader compilation where-ever it gets compiled
[15:13:28] <smallville7123> yes
[15:13:55] <PJBoy> so you're aiming towards 1 on that scale :)
[15:14:04] <smallville7123> yea
[15:14:18] <PJBoy> but yeah, ok, parsing GLSL is a bit more respectable than parsing C
[15:14:35] <smallville7123> :)
[15:16:11] *** Quits: voltron (~voltrin_@ip4d16bdc6.dynamic.kabel-deutschland.de) (Ping timeout: 250 seconds)
[15:17:11] <smallville7123> anyway, i am not sure how to detect my macro function in terms of ensuring it is passed the correct number of arguments
[15:17:45] <smallville7123> anyway, i am not sure how to make sure my macro function is passed the correct number of arguments *
[15:19:34] <smallville7123> would i break https://gist.github.com/mgood7123/4217d10423f9f7576841fc11a7f6ae88 into sub-rules that i can incrementally apply actions to like i do for the #define directive ?
[15:21:31] <smallville7123> maybe something like this?        macro_function_begin, opt<plus<macro_function_argument>>, macro_function_end
[15:22:35] <smallville7123> and then just build the function data as the rules get matched depending on the order of the rules
[15:23:00] <smallville7123> PJBoy: or would i need something else?
[15:25:13] *** Quits: maxxe (~maxxe@user/maxxe) (Quit: off. bbl.)
[15:25:30] *** Joins: JohnMS_WORK (~kvirc@89-64-84-95.dynamic.chello.pl)
[15:25:49] <PJBoy> idk this is outside the scope of what I'm willing to think about
[15:26:09] <PJBoy> only parsing I ever did was with lex/yacc
[15:27:01] <PJBoy> and I just built up an AST and did the usual AST thing
[15:29:22] <smallville7123> alright
[15:40:29] *** Joins: blyat-73 (~hjgkjhgkj@46.235.96.249)
[15:42:09] *** Joins: pulse (~pulse@user/pulse)
[15:46:19] *** Quits: JohnMS_WORK (~kvirc@89-64-84-95.dynamic.chello.pl) (Ping timeout: 265 seconds)
[15:49:02] *** Joins: Roughy (~mdaw45ns@user/roughy)
[15:52:21] *** Quits: RPNX (RPNX@gateway/vpn/protonvpn/rpnx) (Ping timeout: 250 seconds)
[15:59:28] *** Joins: RPNX (RPNX@gateway/vpn/protonvpn/rpnx)
[16:05:17] *** Joins: skapata (~Skapata@2804:14c:87b0:a6f9:e138:977f:7375:1046)
[16:05:17] *** Quits: skapata (~Skapata@2804:14c:87b0:a6f9:e138:977f:7375:1046) (Changing host)
[16:05:17] *** Joins: skapata (~Skapata@user/skapata)
[16:09:19] *** Joins: Leone (~Leo@69-165-148-197.dsl.teksavvy.com)
[16:10:13] <robod34> RandomReader, i have identified the line that causes the crash
[16:10:32] <robod34> it is this one: hr = pToRenderBitmapSource->CopyPixels(&rc, cbStride, cbBufferSize, m_pbBuffer);
[16:10:51] <PJBoy> ok I've made my first clang-tidy draft
[16:10:56] <PJBoy> @ LordKalma
[16:11:02] <LordKalma> what?
[16:11:04] <LordKalma> cool
[16:11:09] <LordKalma> what does it look like?
[16:11:18] <Haohmaru> <censored.txt>
[16:11:40] <PJBoy> looks like https://pastebin.com/ZCVJi2U5
[16:11:46] <robod34> it copies the wic image pixels to a BYTE m_pbBuffer, RandomReader
[16:11:55] <Haohmaru> it looks like a film negative of his typical source code
[16:12:35] <PJBoy> wish I could put those comments inline with the checks
[16:13:19] * PJBoy does a clean build
[16:13:56] <PJBoy> 686 warnings
[16:13:58] <PJBoy> not bad
[16:15:08] <Haohmaru> what are you building?
[16:15:22] <Haohmaru> (hopefully not a nuclear power plant)
[16:15:33] <PJBoy> small component of our $work software stack
[16:15:54] <Haohmaru> did someone rage-write them? ;P~
[16:16:31] <PJBoy> it's hard not to be in rage with this source code
[16:16:55] <LordKalma> hahah you disabled half of it
[16:17:15] <PJBoy> well I disabled all the project based checks of course
[16:19:09] <PJBoy> but I still get all of bugprone-*, cppcoreguidelines, misc-*, modernize-*, performance-*, readability-*, and most of cern-*
[16:19:16] <robod34> RandomReader, https://docs.microsoft.com/en-us/windows/win32/api/wincodec/nf-wincodec-iwicbitmapsource-copypixels
[16:19:19] <PJBoy> cart*
[16:19:23] <PJBoy> cert*
[16:19:45] <PJBoy> I should probably get rid of clang-analyzer
[16:20:29] <PJBoy> but idk, the valist stuff is sensible
[16:20:40] <Haohmaru> just redirect the compiler output to C:\RECYCLED\
[16:22:02] <PJBoy> oh I just realised clang-tidy doesn't run when you build
[16:22:13] <PJBoy> only when you open a file
[16:22:16] <PJBoy> (in VS Code)
[16:25:26] <Haohmaru> !fact
[16:25:27] <nolyc> Haohmaru: A deleter's state need never be copied, only moved or swapped as ownership is transferred.
[16:32:05] *** Joins: markong (~kvirc@213.146.188.203)
[16:35:08] <LordKalma> PJBoy, if you want to run analysers on build, either add a custom cmake target for that
[16:35:12] <LordKalma> or use an IDE with that support
[16:35:34] <PJBoy> but this is linux code ;_;
[16:35:46] <PJBoy> VS Code is the best IDE
[16:36:10] <PJBoy> short of what I've heard rumoured about CLion
[16:36:25] *** Quits: paul424 (~tom@ip-37-248-153-164.multi.internet.cyfrowypolsat.pl) (Remote host closed the connection)
[16:36:43] <PJBoy> cmake target would be cool though
[16:37:58] <PJBoy> I hate how it says "726 warnings generated", lists all 6 warnings, and then says "720 warnings in non-user code"
[16:38:10] <PJBoy> I just wanna know how many warnings are in user code
[16:39:12] <mort> just be glad it's not showing all those 720 warnings in library code
[16:39:37] <LordKalma> PJBoy, lemme see if I can find the cmake target for clang-tidy
[16:39:48] <mort> I wish compilers had an option to only show code in code not included with <> at least
[16:40:03] <TinoDidriksen> IDEs do have such an option.
[16:40:12] <mort> not interested
[16:40:36] <PJBoy> compilers don't show code in code at all
[16:40:49] *** Joins: proller (~p@2a02:6b8:0:51e:ad84:733b:9ab1:fc14)
[16:41:30] <PJBoy> so if you didn't mean IDEs, I'm not sure what you meant
[16:42:24] <mort> me? I meant not interested in IDEs
[16:42:34] <PJBoy> omg clang-tidy comes bundled with run-clang-tidy.py
[16:42:41] <PJBoy> which does run clang-tidy on all source files
[16:43:26] <robod34> RandomReader; i fixed the problem
[16:44:58] <LordKalma> PJBoy, https://github.com/friendlyanon/cmake-init/blob/master/cmake-init/templates/common/cmake/lint.cmake https://github.com/friendlyanon/cmake-init/blob/master/cmake-init/templates/common/cmake/lint-targets.cmake
[16:45:01] <LordKalma> whaaat? it does?
[16:45:02] <LordKalma> cool
[16:45:32] <LordKalma> I don't like friendly-anon's cmake-init. it's just too boilerplaty. but it does have a lot of goodies I sometimes steal from
[16:46:50] <PJBoy> weird that it's targetting clang-format
[16:47:02] <PJBoy> when it's called lint.cmake
[16:50:00] <PJBoy> wow, takes 15 minutes to run clang-tidy on this code
[16:50:02] <PJBoy> on a single core
[16:50:25] <Haohmaru> 15 minutes?! dafuq is it doing?
[16:50:30] <LordKalma> it is slow, yeah
[16:50:38] <mort> clang-tidy is sooo slow
[16:50:44] <LordKalma> telling qt-creator to analise a project takes a while
[16:50:45] <PJBoy> only 1 minute on this machine fortunately
[16:50:48] <Haohmaru> what language is it written in?
[16:50:58] <mort> C++ I think?
[16:51:08] <PJBoy> I would expect so
[16:51:11] <Haohmaru> huh, what is it possibly doing? digging coinz?
[16:51:25] <PJBoy> plus a slither of python overhead because I'm running the script
[16:51:26] <mort> probably iterating through the entire AST a trillion times
[16:51:43] <PJBoy> it's goig through all the system headers too
[16:51:55] <Haohmaru> oh boy
[16:51:57] <mort> I assume each check is implemented as a separate AST pass
[16:52:02] <PJBoy> just so it can tell me how many warnings it's ignoring
[16:52:13] <mort> well, no
[16:52:23] <mort> or, well
[16:52:39] <mort> it could probably somehow avoid iterating through the AST for the system headers for each check if it wanted to
[16:52:46] <mort> it needs to parse all the system headers obviously but yea
[16:52:48] <Haohmaru> but it's not actually compiling, is it?
[16:52:52] <Haohmaru> what's its purpose?
[16:53:01] <mort> telling you where your code is bad
[16:53:06] <PJBoy> it almost compiles I guess
[16:53:08] <Haohmaru> huh
[16:53:15] <mort> it's a linter
[16:53:17] <PJBoy> like it doesn't generate code, but it has to interpret C++
[16:53:32] <PJBoy> I assume it goes as far as generating the LLVM IR
[16:53:49] <Haohmaru> right, so it has nearly all the language-knowlage a compiler has to have, except it doesn't generate objects and sh*t
[16:53:50] <mort> why does it have to interpret C++? In case some things depend on constexpr things?
[16:54:09] <mort> or does it fancily analyze runtime behavior
[16:54:19] <PJBoy> I just meant parse
[16:54:28] <mort> oh
[16:54:33] <PJBoy> I'm sure it doesn't run any C++ in any way
[16:54:46] <mort> I would expect the parsing to be *relatively* fast?
[16:54:49] <Haohmaru> how much sure are you? ;P~
[16:54:51] <mort> I mean I know it's C++ and all
[16:54:52] <mort> but still
[16:54:59] <mort> hmm, I wonder
[16:55:06] <PJBoy> well it has to do the templates and uh
[16:55:11] <mort> it builds a tree, what if we replaced the allocator with a bump allocator
[16:55:14] <PJBoy> idk whatever else C++ has
[16:55:21] <Haohmaru> PJBoy try to write a compile-time virus and see if it'll work? ;P~
[16:55:56] <mort> I wonder if LLVM is slow because it parses slowly or because it allocates so many tiny objects
[16:56:00] <mort> clang* not llvm
[16:56:08] <PJBoy> #include jdk_logv4.h
[16:57:47] <PJBoy> alright I think I've counted warnings correctly
[16:57:52] <Haohmaru> PJBoy i meant to test your assumption whether it doesn't run code
[16:57:54] <PJBoy> over 14k now
[16:57:59] <PJBoy> oh right
[16:59:04] <PJBoy> oh damn it I missed one of the aliases
[16:59:09] <Haohmaru> <constexpr_template_russian_roulette.hpp>
[17:00:25] *** Quits: lh_ideapad (~lh_mouse@mingw-w64/developer/lhmouse) (Remote host closed the connection)
[17:10:57] <PJBoy> oh boy
[17:11:03] <PJBoy> clang-tidy has a check that isn't documented
[17:12:06] <Haohmaru> breaking news: clang has undocumented things
[17:15:46] *** Joins: ezzieyguywuf (~Unknown@user/ezzieyguywuf)
[17:39:30] *** Quits: npaperbot (~npaperbot@dodecahedron.m-ou.se) (Remote host closed the connection)
[17:39:37] *** Joins: npaperbot (~npaperbot@dodecahedron.m-ou.se)
[17:39:38] *** ChanServ sets mode: +v npaperbot
[17:39:38] *** Joins: DSpider (DSpider@2a02:2f00:1ff:ffff::646c:637a)
[17:39:43] *** Quits: DSpider (DSpider@2a02:2f00:1ff:ffff::646c:637a) (Client Quit)
[17:45:21] *** Joins: CodeMouse92 (~CodeMouse@user/codemouse92)
[17:53:20] *** Quits: Hello71 (~Hello71@wireguard/contributor/hello71) (Remote host closed the connection)
[17:53:48] *** Joins: Hello71 (~Hello71@wireguard/contributor/hello71)
[17:56:12] *** lh_mouse_ is now known as lh_mouse
[18:10:32] *** Quits: johnny (~johnny@user/johnny) (Ping timeout: 240 seconds)
[18:10:45] *** Quits: blyat-73 (~hjgkjhgkj@46.235.96.249) (Ping timeout: 256 seconds)
[18:13:46] <mort> apparently libc++ doesn't print the exception's message when terminating due to an exception?
[18:13:56] <mort> just says "libc++abi: terminating with uncaught exception of type std::runtime_error"
[18:14:19] <mort> using lldb I figured out that the exception is thrown with this line: `throw std::runtime_error("Failed to link elements");`
[18:14:26] <mort> so there's certainly a message there, it's just not printed
[18:15:53] *** Quits: lh_mouse (~lh_mouse@mingw-w64/developer/lhmouse) (Read error: Connection reset by peer)
[18:19:49] *** Quits: RPNX (RPNX@gateway/vpn/protonvpn/rpnx) (Ping timeout: 256 seconds)
[18:23:47] *** Quits: markong (~kvirc@213.146.188.203) (Ping timeout: 256 seconds)
[18:23:51] *** Joins: RPNX (RPNX@gateway/vpn/protonvpn/rpnx)
[18:26:59] *** Joins: meator (~meator@user/meator)
[18:29:50] *** Quits: frost (~frost@user/frost) (Ping timeout: 260 seconds)
[18:35:52] *** Joins: aniketgm (~Aniket@49.36.107.79)
[18:37:22] *** Joins: Tokamak (~Tokamak@172.58.191.87)
[18:38:33] *** Quits: Tokamak_ (~Tokamak@172.58.191.87) (Ping timeout: 268 seconds)
[18:39:26] <xkoncek> is there a standardized procedure to cast a signed int of range [-max, +max] to an unsigned range [0, +max], where {signed -max -> 0} and {signed +max ->unsigned +max}?
[18:39:58] <xkoncek> i have already been doing similar when dealing with .wav 8-bit vs 16-bit depth
[18:40:06] <xkoncek> but the code is not nice
[18:40:26] <sprout> https://github.com/egel-lang/aoc-2021/blob/main/day14/task2.eg <- Advent of Code, day 14,  task 2,  solution in Egel.  though dicts are overkill on this problem
[18:41:50] <sprout> https://pasteboard.co/6fErCUImZtkF.png <- pretty colors
[18:42:46] <Alipha> xkoncek: https://en.cppreference.com/w/cpp/algorithm/clamp
[18:49:33] *** Quits: meator (~meator@user/meator) (Quit: Leaving)
[18:53:20] <LordKalma> add -max, divide by 2? :p
[18:55:27] <LordKalma> https://i.gyazo.com/9a41193768e0515b84ad5a0f5ed68065.png
[18:56:19] <xkoncek> LordKalma yes
[19:04:00] *** Joins: EdFletcher (~PKD@user/edfletcher)
[19:07:15] *** Joins: meator (~meator@user/meator)
[19:19:30] <smallville7123> imma go to sleep
[19:21:09] <rpav> https://godbolt.org/z/jeG5qGPsh <- _why_ is this an issue?
[19:21:45] <rpav> here i thought making a default ctor would preclude a default copy ctor but i'm always fuzzy on that
[19:22:59] <rpav> this seems like copy elision interfering with destruction rules or something but i'm really not sure
[19:23:55] <rpav> clang does _not_ exhibit this behavior
[19:23:59] *** Quits: smallville7123 (~smallvill@cpe-172-193-72-46.qld.foxtel.net.au) (Ping timeout: 252 seconds)
[19:24:12] *** Quits: aniketgm (~Aniket@49.36.107.79) (Quit: leaving)
[19:25:40] <urdh> declaring a default ctor does not preclude implicitly declared special members, no
[19:25:41] <urdh> https://i.stack.imgur.com/b2VBV.png
[19:26:10] <rpav> yeah, i mean clearly it must not, i should keep that diagram on hand though ;)
[19:26:34] <urdh> i have to google for it every damn time :<
[19:27:03] <rpav> but .. which compiler is correct here? i hesitate to say "compiler bug" over "some tricky UB gcc just optimizes for harder" or "standard interpretation that gcc does differently"
[19:29:09] *** Joins: cart_man (~rynot@host-78-144-121-71.as13285.net)
[19:29:12] <urdh> no idea
[19:29:21] <urdh> it happens at -O0 as well though
[19:29:26] <PJBoy> default ctors don't affect copy ctors
[19:30:05] *** Quits: meator (~meator@user/meator) (Ping timeout: 256 seconds)
[19:30:06] <PJBoy> but copy ctors do inhibit default ctor generation
[19:30:08] *** Joins: cq-work (~Z_Lund@user/cq-work)
[19:30:10] <cart_man> Is there a difference between the std::memcpy and the for loop to copy a stringinto a piece of memory -> https://pastebin.com/sJvtyJ3F
[19:30:22] <rpav> PJBoy: ah that was the way
[19:31:18] <rpav> no idea on the behavior though?
[19:31:30] <PJBoy> haven't read that far
[19:31:33] <PJBoy> what's the behaviour?
[19:31:51] <urdh> ignore my -O0 comment, i just can't read hexadecimal today
[19:31:57] <rpav> object gets destroyed immediately and then double-destroyed
[19:32:11] <PJBoy> copy of A gets made
[19:32:17] <PJBoy> by the const ref parameter of B::B
[19:32:42] <cq-work> Wasnt't here a pastebin bot?
[19:32:45] <cq-work> there*
[19:32:48] <PJBoy> https://godbolt.org/z/rEha4do8h
[19:33:04] <cart_man> Or this even better -> std::memmove(temp_ptr, frame.c_str(), frame.length());
[19:33:22] <rpav> PJBoy: right and there you have two different objects
[19:33:29] <cart_man> Wait who is replying ot my question?  im confused
[19:33:38] <PJBoy> yeah so the first A dies after its copy was made
[19:33:45] <PJBoy> and then B dies and takes the second A with it
[19:33:50] <urdh> rpav: I think GCC is tricking you by constructing the new B at the same address as the old A as an optimization
[19:33:52] *** Joins: freakazoid343 (~matt@2603-9000-cf0f-80e3-d19a-0c6c-5894-d106.inf6.spectrum.com)
[19:34:12] <rpav> PJBoy: that must mean you're constructing a copy from a destroyed object, if it occupies the same space
[19:34:21] <PJBoy> nah check my link
[19:34:24] <PJBoy> the copy is made first
[19:34:29] <rpav> check _my_ link
[19:34:38] <rpav> `b` shares the same space with gcc as the original value
[19:34:46] <rpav> this is the problem
[19:34:55] <PJBoy> ah ok
[19:34:56] <urdh> and if you print the address in the constructor of B, suddenly you're observing it and GCC stops doing that optimization
[19:35:01] <PJBoy> then yeah what urdh said
[19:35:26] <PJBoy> trivial copy ctors don't need to do anything
[19:35:30] <rpav> urdh: yeah, but it's creating it _from a copy_ that occupied the address it's constructing _into_ .. but then detroying the original
[19:35:38] *** Quits: freakazoid333 (~matt@2603:9000:cf0f:80e3:24da:6c99:9324:ec4d) (Ping timeout: 260 seconds)
[19:35:49] <rpav> PJBoy: but the dtor is then called on the original address!
[19:36:09] <PJBoy> which is fine
[19:36:12] <cart_man> https://wandbox.org/permlink/Ommig8TESTh4EWQE
[19:36:15] <cart_man> Same as the pastebin
[19:36:17] <rpav> not if the new object is already occupying it
[19:36:38] <urdh> it's fine if it falls under the as-if rule
[19:36:49] <PJBoy> the A gets no-op "copied" into B
[19:36:55] <Alipha> rpav: add a member variable: https://godbolt.org/z/asG8fx1TM
[19:37:03] <rpav> yeah working on that
[19:37:26] <rpav> in the case in practice, there are member variables ;/
[19:42:02] *** Quits: freakazoid343 (~matt@2603-9000-cf0f-80e3-d19a-0c6c-5894-d106.inf6.spectrum.com) (Ping timeout: 240 seconds)
[19:42:14] *** Joins: freakazoid333 (~matt@2603:9000:cf0f:80e3:5c2a:9eff:5b06:f93d)
[19:43:18] <PJBoy> sweet, my clang tidy is making reasonably useful diagnostics now
[19:43:50] <PJBoy> 7k warnings up from 700
[19:44:37] *** Joins: freakazoid343 (~matt@2603:9000:cf0f:80e3:19fb:f913:df4e:b961)
[19:45:32] <PJBoy> cart_man, my first instinct would be std::copy
[19:45:49] <PJBoy> but memcpy/memmove/for loop are all likely as good as each other
[19:45:54] *** notevil_ is now known as notEVIL
[19:46:01] <PJBoy> memmove possibly be slightly more overhead for its direction check
[19:48:05] *** Quits: freakazoid333 (~matt@2603:9000:cf0f:80e3:5c2a:9eff:5b06:f93d) (Ping timeout: 250 seconds)
[19:48:10] <Alipha> cart_man: std::copy or std::copy_n
[19:48:37] *** Quits: magla (~gelignite@55d41c14.access.ecotel.net) (Read error: Connection reset by peer)
[19:48:44] *** Joins: magla (~gelignite@55d41c14.access.ecotel.net)
[19:50:01] *** magla is now known as gelignite
[19:50:55] <comrad> PJBoy: std::copy would probably result in a memcpy
[19:51:02] *** Quits: freakazoid343 (~matt@2603:9000:cf0f:80e3:19fb:f913:df4e:b961) (Ping timeout: 260 seconds)
[19:52:05] *** Joins: aniketgm (~Aniket@49.36.107.79)
[19:52:42] <PJBoy> exactly
[19:53:19] *** Quits: baltazar (~baltazar@188-143-71-34.pool.digikabel.hu) (Ping timeout: 252 seconds)
[19:53:47] *** Quits: mitch0 (~mitch@188-143-71-34.pool.digikabel.hu) (Ping timeout: 265 seconds)
[19:55:09] *** Joins: baltazar (~baltazar@84-236-20-119.pool.digikabel.hu)
[19:55:37] *** Joins: mitch0 (~mitch@84-236-20-119.pool.digikabel.hu)
[19:58:00] *** Quits: mackal (~mackal@pool-96-237-249-63.bstnma.fios.verizon.net) (Quit: BE VIGILANT.)
[19:59:38] <cart_man> PJBoy:  Alipha Why not memmove
[19:59:57] <cart_man> I mean std::memmove()`
[19:59:59] <mort> memmove is only legal with PODs, no?
[20:00:26] <cart_man> PJBoy:  So move has move overhead that a copy?
[20:00:29] *** Joins: mackal (~mackal@pool-96-237-249-63.bstnma.fios.verizon.net)
[20:00:31] <cart_man> PODs?
[20:00:59] <mort> plain old data
[20:01:08] <mort> I think it's a somewhat outdated term but I don't know what the modern equivalent is
[20:01:09] <PJBoy> memmove needs to do a check to see what direction to copy
[20:01:21] <PJBoy> so it's one check slower than memcpy
[20:01:30] <PJBoy> memcpy just breaks if your ranges are overlapping
[20:01:30] <rpav> more than that
[20:01:43] <PJBoy> as does std::copy
[20:02:02] <rpav> memcpy can copy arbitrary ranges with arbitrary chunks, memmove may move over an unaligned boundary etc
[20:02:09] <rpav> i think there was something else too but
[20:02:39] <PJBoy> that doesn't sound like standard specified behaviour :/
[20:02:45] <rpav> but you have to like, "copy one side, copy the overlap, copy the other side"
[20:03:10] <rpav> what doesn't?
[20:03:24] <PJBoy> stuff about arbitrary chunks and unaligned boundaries
[20:03:52] <rpav> that has nothing to do with the standard, but it's why memmove might be slower
[20:04:18] *** Quits: interop_madness (~interop_m@user/interop-madness/x-0950004) (Quit: Leaving)
[20:04:21] <rpav> or do you think memcpy copies byte by byte in a for loop
[20:04:34] <PJBoy> something like that, yeah
[20:04:38] *** Quits: Spirit532 (~Spirit532@178.127.95.42) (Changing host)
[20:04:38] *** Joins: Spirit532 (~Spirit532@user/Spirit532)
[20:05:03] <PJBoy> possibly optimised by loading words instead of bytes
[20:05:05] <rpav> you get to pretend that's the effect, but if it did that would be incredibly slow
[20:05:15] *** Joins: meator (~meator@user/meator)
[20:05:24] <PJBoy> or possibly using DMA if the hardware exists
[20:05:53] <rpav> right, so either memmove does the same, or it's much slower because it does the naive thing (unlikely), or now you have a problem .. you might want to memmove by a fraction of a word
[20:06:19] <PJBoy> memcpy also has to deal with the problem of copying a fraction of a word
[20:06:23] <PJBoy> which is barely a problem
[20:06:58] <rpav> right but assume all else is equal .. you might have to copy the ends differently .. but now you have to split it in the middle too
[20:07:10] <PJBoy> why would you need to split in the middle?
[20:07:33] <rpav> i'll let you think about that
[20:08:15] <PJBoy> you just do a backwards DMA or whatever
[20:08:21] <PJBoy> backwards for-loop
[20:08:26] <PJBoy> whatever you do, do it backwards
[20:10:30] <LordKalma> !grab PJBoy
[20:10:31] <nolyc> LordKalma: The operation succeeded.
[20:10:55] *** Quits: meator (~meator@user/meator) (Ping timeout: 252 seconds)
[20:11:16] <rpav> actually i'm not sure unaligned copy can be optimal thinking about it
[20:11:46] <rpav> like you _can't_ just "copy the ends", you have to deal with shifting everything .. not sure what dma gets you though
[20:12:57] <Alipha> cart_man: this is c++. We're type safe here. memcpy and memmove are not.
[20:13:33] <cart_man> Alipha: Ok but how would I copy a string to a piece of memory with C++ though?
[20:14:10] <rpav> "Copy whole pages from SRCP to DSTP by virtual address manipulation" 🤣
[20:14:38] <Alipha> cart_man: std::copy(frame.begin(), frame.end(), tmp_ptr);
[20:15:12] <cart_man> Alipha: Ah ok ok I see
[20:16:10] <cart_man> Alipha: Could std::move also work?
[20:16:10] *** Quits: andreasbuhr (~quassel@p549db084.dip0.t-ipconnect.de) (Quit: https://quassel-irc.org - Chat comfortably. Anywhere.)
[20:16:19] <cart_man> I only know std::move to work for references
[20:17:10] <Alipha> cart_man: sure, but moving chars isn't any faster than copying them.
[20:17:20] <cart_man> Alipha: Ok thans
[20:17:27] <rpav> looks like memmove must actually-copy if it's a move; still not sure how memcpy handles non-aligned memory, but i haven't seen how the page remapping fully works
[20:18:46] <PJBoy> so just to clarify
[20:19:01] <Alipha> cart_man: std::copy calls the copy assignment operator. std::move calls the move assignment operator. For primitives, they do the same thing
[20:19:03] <PJBoy> the issue you're thinking of is when desp - srcp != multiple-of-alignment
[20:19:20] <PJBoy> word alignment
[20:21:51] <rpav> that would really only apply if it were doing something simple like even copying words
[20:23:16] <PJBoy> yeah
[20:24:09] <PJBoy> stupid virtual memory
[20:24:17] <PJBoy> making everything so ungodly complex
[20:25:00] <PJBoy> oh god I have to write a clang format now
[20:25:11] <LordKalma> you'll like mine I think
[20:25:15] <rpav> just start with a default and tweak the annoying things
[20:25:28] <rpav> there's not that much you can change to begin with
[20:25:30] <LordKalma> PJBoy,  likes { in single lines, iirc
[20:25:39] <PJBoy> well
[20:25:40] <LordKalma> so you'll want BasedOn: Microsoft
[20:25:49] <PJBoy> I need my own personal one, but also need to make one for $work
[20:26:28] <PJBoy> but yeah it's gonna be fun
[20:26:31] <LordKalma> btw
[20:26:39] <LordKalma> cmake-format is also a thing :p
[20:26:40] <LordKalma> https://github.com/ruilvo/aether_dsp/blob/master/.cmake-format.json
[20:26:48] <PJBoy> ah yeah
[20:26:56] <LordKalma> but anyway, this is my clang format:
[20:26:57] <LordKalma> https://github.com/ruilvo/aether_dsp/blob/master/.clang-format
[20:26:58] * imMute throws PJBoy back in the days of segmented memory and near/far/reallyfar pointers.
[20:27:06] <LordKalma> BasedOnStyle: Microsoft for the { on single lines
[20:27:26] <PJBoy> bro my main disassembly project uses banked memory
[20:27:29] <PJBoy> I live for that world
[20:28:00] <PJBoy> thanks for the reference
[20:28:08] <lru> we still have segmented memory, we just don't call it that anymore, and it's not under direct programmer control...today we call it L1, L2, etc :-)
[20:28:47] <PJBoy> fair
[20:28:48] *** Quits: aniketgm (~Aniket@49.36.107.79) (Read error: Connection reset by peer)
[20:29:54] *** Joins: aniketgm (~Aniket@49.36.107.79)
[20:31:44] <imMute> lru: what?  segmentation is not caching AIUI
[20:32:02] *** Joins: gareppa (~gareppa@user/gareppa)
[20:32:49] *** Joins: kenanmarasli (~kenanmara@user/kenanmarasli)
[20:33:24] <rpav> sadly same-line `{` for functions can mess up some other things .. ctor intialization lists? or something weird
[20:34:27] *** Quits: gareppa (~gareppa@user/gareppa) (Remote host closed the connection)
[20:40:09] <lru> imMute: note the smiley :-)
[20:41:41] <rpav> memory _is_ significantly non-flat though for modern apps: VRAM
[20:41:54] <rpav> unless you have special apus with total flat memory (e.g. ps4)
[20:42:42] *** Quits: Tokamak (~Tokamak@172.58.191.87) (Quit: My MacBook has gone to sleep. ZZZzzz…)
[20:42:43] <rpav> but otherwise it's common to map segments and manage that manually even
[20:44:59] <imMute> rpav: the memory is still flat, just NUMA.  (compare that to "banked" flash common on 16-bit micros)
[20:45:33] <rpav> banked isn't the only non-flat
[20:45:58] <rpav> it's not flat unless it's a single address space; NUMA and flat addressing are orthogonal
[20:46:36] <rpav> e.g. amd opteron MP were numa, but all the memory was still in one space
[20:46:56] <imMute> rpav: my understanding is that most GPU RAM is either mappable on the processor (via PCIe) or it's completely inaccessible other than DMA-like commands to the GPU
[20:47:21] <imMute> and I meant it's NUMA-like in that you can access PCIe device memory as if it were RAM (ie, simple memory accesses) but the latency is completely different.
[20:47:27] <rpav> but unless you map some buffer (or have a special architecture variant), no pointer value you pick addresses VRAM
[20:47:56] <rpav> imMute: right .. you can map it, but that's more or less like mapping any other "segment"
[20:48:07] <rpav> you can unmap that, then map a new "segment" to that address
[20:48:23] <imMute> rpav: when you mmap PCIe memory locations, you get a pointer value that accesses that VRAM directly.
[20:48:34] <imMute> (at least for the PCIe devices I've worked on, GPUs may be slightly different)
[20:48:41] <rpav> yes, and mmap is mapping =P
[20:49:02] <rpav> like, "i can mmap a file" doesn't make your entire filesystem + ram a flat address space
[20:49:31] <imMute> "unless you do the thing to get a pointer to address VRAM, you can't have a pointer that addresses VRAM"   I don't see how this statement is useful.
[20:49:39] <rpav> this is handwaving a lot of mmu stuff and virtual addressing etc but
[20:49:43] *** Quits: cart_man (~rynot@host-78-144-121-71.as13285.net) (Quit: Konversation terminated!)
[20:50:09] <rpav> imMute: you're _not_ doing a thing to get an "address to VRAM," such an address does not exist
[20:50:27] <rpav> it'd be like banked memory, well "if i map a bank, i've got a pointer, so banked memory is flat"
[20:50:48] <imMute> whatever.  i don't really care to argue any more since we seem to be talking about different things anyway.
[20:51:27] <mort> the filesystem point is a very good one
[20:52:13] <mort> mapping a segment of GPU memory ≅ mapping a file
[20:52:25] *** Joins: Juliu (~Juliu@2a02:810b:c640:3ec0:9180:b80f:58c7:8de8)
[20:52:55] <mort> so if mappable GPU memory means there's a flat address space of RAM + VRAM, mappable files means there's a flat address space of RAM + filesystem
[20:53:16] <kalven> when I hear "segmented memory", I think of old x86 with things like "near" and "far" pointers..
[20:53:26] *** Quits: Haohmaru (~Haohmaru@195.24.53.110) ()
[20:53:46] *** Quits: xkuru (~xkuru@user/xkuru) (Read error: Connection reset by peer)
[20:53:59] <rpav> imMute: actually i'm probably confusing terms; if you want to call flat addressing anything without like a separate segment pointer, sure
[20:54:19] *** Joins: spaceangel (~spaceange@ip-78-102-216-202.net.upcbroadband.cz)
[20:54:19] <imMute> mort: mapping VRAM sets up the hardware so CPU memory accesses turn into PCIe transactions that the GPU handles by accessing it's RAM.  no kernel involvement after the mapping is setup.  mapping files requires on-going kernel involvement (to read in new pages from the filesystem).  so while I see your point, it's still a bit off  IMO
[20:54:36] *** Joins: aniketgm_ (~Aniket@49.36.107.79)
[20:54:39] <rpav> there's still significant difference from unified memory space a la the PS4, where there _isn't_ a separate bank of ram, but
[20:55:08] <imMute> rpav: the only difference is where the RAM actually resides and how transactions get to/from it.  other than that it's the same
[20:55:15] *** Quits: aniketgm_ (~Aniket@49.36.107.79) (Client Quit)
[20:55:18] <kalven> and code actually looked different depending on what kind of pointer you dealt with.. with modern memory mapping, it doesn't matter to the code that accesses the memory where that address happens to be mapped
[20:55:33] <imMute> kalven: yeah, that's basically what I was thinking too
[20:55:51] <rpav> yeah
[20:56:19] *** Joins: xkuru (~xkuru@user/xkuru)
[20:56:39] *** Joins: great_taste (~great_tas@user/great-taste/x-5798414)
[20:56:54] <rpav> there are a lot of variations though, and lumping them together isn't terribly useful
[20:58:18] *** Joins: Simplar (~Simplar@188.163.93.76)
[21:01:32] *** Joins: kraa (~kraa@107-190-7-216.cpe.teksavvy.com)
[21:22:15] *** Joins: freakazoid333 (~matt@2603:9000:cf0f:80e3:74e9:183f:a719:d99e)
[21:22:19] *** Joins: JeffH (~JeffH@233.sub-174-198-143.myvzw.com)
[21:26:42] *** Quits: RPNX (RPNX@gateway/vpn/protonvpn/rpnx) (Ping timeout: 260 seconds)
[21:26:53] *** Quits: JeffH (~JeffH@233.sub-174-198-143.myvzw.com) (Remote host closed the connection)
[21:27:58] *** Quits: great_taste (~great_tas@user/great-taste/x-5798414) (Quit: Client closed)
[21:28:00] *** Joins: meator (~meator@user/meator)
[21:28:04] *** Joins: RPNX (RPNX@gateway/vpn/protonvpn/rpnx)
[21:29:55] *** Quits: aniketgm (~Aniket@49.36.107.79) (Write error: Connection reset by peer)
[21:30:08] *** Joins: aniketgm (~Aniket@49.36.107.79)
[21:31:17] *** Joins: jwillikers (~jwilliker@2604:2800:2:a403:fe91:ac3e:5153:1290)
[21:33:48] *** Quits: jwillikers (~jwilliker@2604:2800:2:a403:fe91:ac3e:5153:1290) (Remote host closed the connection)
[21:34:08] <aniketgm> .c
[21:35:53] *** Quits: meator (~meator@user/meator) (Ping timeout: 256 seconds)
[21:36:11] *** Joins: markong (~kvirc@213.146.188.203)
[21:39:30] *** Quits: npaperbot (~npaperbot@dodecahedron.m-ou.se) (Remote host closed the connection)
[21:39:39] *** Joins: npaperbot (~npaperbot@dodecahedron.m-ou.se)
[21:39:39] *** ChanServ sets mode: +v npaperbot
[21:42:16] *** Joins: CoderCharmander (~CoderChar@20014C4C12563000BCCDBFC417CDB7F0.catv.pool.telekom.hu)
[21:43:18] <Alipha> .C
[21:43:33] *** Quits: hackkitten (~hackkitte@94.31.103.136) (Read error: Connection reset by peer)
[21:44:06] <Alipha> I use .C extension so that windows people can't run my code.
[21:45:37] *** Joins: Tokamak (~Tokamak@172.58.191.87)
[21:46:18] *** Quits: RPNX (RPNX@gateway/vpn/protonvpn/rpnx) (Ping timeout: 260 seconds)
[21:46:58] <xkoncek> warning: array subscript has type ‘char’... ok and?
[21:48:38] *** Quits: Tokamak (~Tokamak@172.58.191.87) (Client Quit)
[21:49:02] *** Joins: hackkitten (~hackkitte@94.31.103.136)
[21:49:56] *** Joins: RPNX (RPNX@gateway/vpn/protonvpn/rpnx)
[21:51:45] *** Joins: Tokamak (~Tokamak@172.58.191.87)
[21:52:51] *** Joins: JeffH (~JeffH@233.sub-174-198-143.myvzw.com)
[21:53:04] *** Quits: JeffH (~JeffH@233.sub-174-198-143.myvzw.com) (Remote host closed the connection)
[21:56:40] <mort> I had a professor who would make some files named foo.s and some named foo.S
[22:00:11] *** Quits: proller (~p@2a02:6b8:0:51e:ad84:733b:9ab1:fc14) (Ping timeout: 252 seconds)
[22:01:06] *** Quits: Tokamak (~Tokamak@172.58.191.87) (Quit: My MacBook has gone to sleep. ZZZzzz…)
[22:01:26] <ville> xkoncek: could be unsigned on some platforms and that then converts to high unsigned value
[22:01:31] <ville> err signed
[22:02:05] <xkoncek> for (char i = 0; i < 3; ++i)
[22:02:06] *** Joins: ___nick___ (~quassel@cpc68286-cdif17-2-0-cust533.5-1.cable.virginm.net)
[22:02:20] <xkoncek> had to go with short
[22:02:28] <ville> yes you can reason about it, doesnt mean the compiler will
[22:02:35] <CoderCharmander> mort: assembly files with .S extension are ran through the C preprocessor
[22:02:44] <ville> if you can reason about it then cast away
[22:02:45] <CoderCharmander> So you can #include, #define and others
[22:02:56] *** Quits: ___nick___ (~quassel@cpc68286-cdif17-2-0-cust533.5-1.cable.virginm.net) (Client Quit)
[22:03:08] <kalven> xkoncek: does the type used there (char, short, int etc) actually make a difference in codegen?
[22:03:33] <xkoncek> ...probably not
[22:04:22] *** Joins: ___nick___ (~quassel@cpc68286-cdif17-2-0-cust533.5-1.cable.virginm.net)
[22:04:48] *** Quits: ___nick___ (~quassel@cpc68286-cdif17-2-0-cust533.5-1.cable.virginm.net) (Client Quit)
[22:06:14] *** Joins: ___nick___ (~quassel@cpc68286-cdif17-2-0-cust533.5-1.cable.virginm.net)
[22:08:00] *** Joins: blyat-73 (~hjgkjhgkj@46.235.96.249)
[22:19:07] <ville> http://coliru.stacked-crooked.com/a/f89b9c44ff704a19 g++'s -Wconversion doing perfectly well here
[22:22:38] <aniketgm> Alipha: with mingw they now can.
[22:23:24] <aniketgm> and hi
[22:27:32] <Alipha> xkoncek: just go with int
[22:28:10] <Alipha> And I try so hard to get grabbed, but people don't seem to want to
[22:31:11] <kalven> be more grabable
[22:31:32] *** Quits: markong (~kvirc@213.146.188.203) (Ping timeout: 240 seconds)
[22:34:34] *** Joins: great_taste (~great_tas@user/great-taste/x-5798414)
[22:39:00] *** eck is now known as cryptonull
[22:42:37] *** Joins: meator (~meator@user/meator)
[22:51:57] <xkoncek> !rq
[22:51:57] <nolyc> xkoncek: <ville> don't believe the cmake propaganda. make is fine
[22:53:00] <xkoncek> last like half a year i was aways doing thesis on... JAVA, i submitted yesterday, now my life feels empty
[22:55:30] <Alipha> xkoncek: what specifically was the topic?
[22:59:05] <xkoncek> basically 2 topics: 1) inspecting state of the art approaches to runime class replacement (where you can reload modified bytecode of a class at runtime); 2) attempting to wrap java compiler api to use a dynamic classpath (.class files provided on fly in-memory) whenever the compiler requests them for compiling source files (also in-memory string)
[23:02:34] <rpav> xkoncek: 3) seeing it applied in real time to take over millions of vulnerable machines .. how is this not total, popcorn-fueled fulfillment?!
[23:02:36] <rpav> ;)
[23:03:31] <xkoncek> our use case is debugging, the solution provided by default in JVM is quite limited and even has to be explicitly enabled
[23:03:32] * rpav mostly just assumes a lot of log4shell involves dynamic loading of .class stuff but not really a java person
[23:03:59] <rpav> so you're like dynamically tooling java?
[23:04:21] <xkoncek> our == my supervisor's
[23:04:41] <xkoncek> he is on QE of java components
[23:04:42] *** Quits: RPNX (RPNX@gateway/vpn/protonvpn/rpnx) (Ping timeout: 265 seconds)
[23:05:21] <xkoncek> but believe it or not, i was inspecting the code of HotSpot which is in simple C++
[23:05:30] *** Joins: RPNX (RPNX@gateway/vpn/protonvpn/rpnx)
[23:05:38] <xkoncek> or rather "limited subset of C++"
[23:06:11] <xkoncek> of course every serious project reinvents all components themselves and depend only on C libs
[23:06:58] <rpav> VK_EXT_external_memory_dma_buf .. does this actually exist or not, i'm not sure how vulkan extensions work
[23:06:58] *** Quits: kraa (~kraa@107-190-7-216.cpe.teksavvy.com) (Quit: Leaving)
[23:07:01] <xkoncek> i managed to add a print statement into hotspot, build it and use it as my JVM and it worked :)
[23:07:44] <xkoncek> rpav Vulkan Tutorial #63: Helo Triangle!
[23:07:53] <xkoncek> joke tuined
[23:07:56] <xkoncek> ruined
[23:15:09] <rpav> xkoncek: the joke wasn't ruined, i definitely got it :)
[23:15:20] *** Quits: aniketgm (~Aniket@49.36.107.79) (Read error: No route to host)
[23:15:35] <xkoncek> i still make the same amount of typos
[23:16:29] *** Joins: aniketgm (~Aniket@49.36.107.79)
[23:16:56] <rpav> lean into it ... `Vulkan Tutorial #63: HELO triangle! The Sendmail preconfiguration step in building a working render pipeline"
[23:17:49] *** Quits: Juliu (~Juliu@2a02:810b:c640:3ec0:9180:b80f:58c7:8de8) (Ping timeout: 250 seconds)
[23:18:13] <xkoncek> the "modern" opengl 4.5 is quite old at this point as well
[23:18:21] <rpav> i have this really dumb idea for a simple "render context" library coupled with a standalone windowing system .. i think i see the parts you need for sharing buffers between processes, which is sortof the main missing piece at this point, but getting GL and vulkan on board would rock
[23:19:02] <RandomReader> robod34 - what was the fix?
[23:19:08] <xkoncek> still unfortunate that the bindless textures are still similarly complex to use
[23:19:15] *** Quits: aniketgm (~Aniket@49.36.107.79) (Read error: Connection reset by peer)
[23:19:17] <rpav> i want something that can basically replace the video/input bits of SDL, be reasonably simple, but a slim and more app-focused library
[23:19:40] <rpav> xkoncek: are they? i haven't really toyed with bindless stuff but the API didn't look that bad
[23:20:36] *** Joins: proller (~p@80.240.216.69)
[23:20:57] <xkoncek> you have to handle texture residency, so it is like 2-step process to use them, then supposedly it is very fragile and can crash your whole windowing system, i haven't tried to use it tho
[23:21:09] <xkoncek> + not implemented in mesa on intel iGPUs
[23:21:19] <xkoncek> which is my devving machine
[23:21:32] <rpav> weird
[23:22:13] *** Joins: aniketgm (~Aniket@49.36.107.79)
[23:22:24] <robod34> RandomReader, it was my limited understanding of how c++ works; i had in my .h file the vars defined, and it seems they are ... super-global, across threads; i have to initialize all of them locally [in the function]
[23:22:49] *** Quits: jns_ (~x@comlink.adminking.com) (Changing host)
[23:22:49] *** Joins: jns_ (~x@user/jns)
[23:22:51] <rpav> https://www.khronos.org/opengl/wiki/Bindless_Texture#Safety "Bindless textures are not safe" 🤣
[23:22:52] <robod34> RandomReader, i do not even have to initialize wic for each thread, only once, in the main one
[23:22:53] *** jns_ is now known as jns
[23:23:40] <robod34> RandomReader, i kept in the .h only the variable of the wic obj
[23:23:45] <rpav> i'm not even sure how much need there is for this stuff anymore
[23:24:13] <RandomReader> robod34 - ah, ok, that makes sense
[23:24:43] <robod34> thank you again for the help provided
[23:24:48] <RandomReader> welcome!
[23:29:47] *** Quits: RPNX (RPNX@gateway/vpn/protonvpn/rpnx) (Ping timeout: 256 seconds)
[23:30:02] *** Quits: aniketgm (~Aniket@49.36.107.79) (Quit: leaving)
[23:31:55] *** Joins: RPNX (RPNX@gateway/vpn/protonvpn/rpnx)
[23:38:11] *** Quits: RPNX (RPNX@gateway/vpn/protonvpn/rpnx) (Ping timeout: 250 seconds)
[23:39:12] *** Joins: RPNX (RPNX@gateway/vpn/protonvpn/rpnx)
