[00:00:18] *** Quits: odoood (~odoood@2601:c8:c003:a550::3) (Remote host closed the connection)
[00:00:39] *** Joins: mat001 (~mat001@c-73-223-64-126.hsd1.ca.comcast.net)
[00:00:43] <theprophet> ok nvm
[00:01:34] *** Joins: phonemic (~phonemic@104-60-219-66.lightspeed.nsvltn.sbcglobal.net)
[00:01:46] *** Joins: computeiro (~Wender@189.37.67.193)
[00:02:46] *** Quits: phonemic (~phonemic@104-60-219-66.lightspeed.nsvltn.sbcglobal.net) (Client Quit)
[00:02:48] *** Quits: gentlinux (~gentlinux@2a02:8108:1880:294:3787:9d9d:a422:6d07) (Quit: WeeChat 2.3)
[00:03:45] *** Joins: RangerBobVA (~bmaddox@user/rangerbobva)
[00:04:06] *** Quits: mat001_ (~mat001@c-73-223-64-126.hsd1.ca.comcast.net) (Ping timeout: 260 seconds)
[00:04:33] *** Joins: odoood (~odoood@2601:c8:c003:a550::3)
[00:04:49] *** Joins: Lando-SpacePimp (~Lando@user/lando-spacepimp)
[00:05:25] *** Joins: linux_dream (~isaac@2a01:e0a:7:60e0:bcc4:b32c:9221:831d)
[00:07:33] *** Joins: Pickchea (~private@user/pickchea)
[00:07:49] *** Quits: bancroft (~bancroft@bras-base-mtrlpq02hsy-grc-09-76-68-189-147.dsl.bell.ca) (Ping timeout: 252 seconds)
[00:08:22] *** Quits: walterwhip (~walterwhi@user/walterwhip) (Ping timeout: 252 seconds)
[00:09:02] *** Quits: zer0bitz (~zer0bitz@dsl-hkibng31-54fafc-123.dhcp.inet.fi) (Read error: Connection reset by peer)
[00:13:35] *** Quits: NeoCore (~neocore@195.200.221.188) (Quit: Leaving)
[00:13:56] *** Quits: Pickchea (~private@user/pickchea) (Quit: Leaving)
[00:14:22] *** Joins: Bronto22 (~mennoh@2a02:a46b:4db0:1:5604:a6ff:fe37:3044)
[00:17:12] *** Quits: dstein64 (~dstein64@dannyadam.com) (Quit: ZNC 1.7.5+deb4 - https://znc.in)
[00:17:36] *** Joins: dstein64 (~dstein64@dannyadam.com)
[00:19:42] *** Quits: homarlone (~homarlone@user/homarlone) (Quit: Client closed)
[00:19:52] *** Joins: HiccupJul (~HiccupJul@cpc122682-reig6-2-0-cust39.6-3.cable.virginm.net)
[00:20:07] <HiccupJul> Is there a way to quickly display the python docs for a particular function
[00:20:28] <HiccupJul> e.g. i wanted to lookup the read() function from io
[00:21:30] *** Quits: Cheaterman (~cheaterma@user/cheaterman) (Ping timeout: 260 seconds)
[00:21:30] <HiccupJul> or actually, i'm not 100% sure its in io
[00:21:59] <HiccupJul> but anyway, the read() function you use to read binary files
[00:22:12] <HiccupJul> help('read()') doesn't bring anything up in the python console
[00:22:23] <jinsun> from the repl no, you have to visist the website and know how to navigate, help will show docstrings
[00:23:07] *** Joins: Jordy (~jordy@user/jordy)
[00:23:07] *** Joins: walterwhip (~walterwhi@user/walterwhip)
[00:23:13] <jinsun> usually you can go to https://docs.python.org/3/library/{your_module} to see docs for your_module
[00:23:22] *** Joins: Cheaterman (~cheaterma@user/cheaterman)
[00:23:40] *** Quits: n00b101 (uid448161@id-448161.lymington.irccloud.com) (Quit: Connection closed for inactivity)
[00:24:47] <HiccupJul> yeah for most things its reasonably easy
[00:24:53] <HiccupJul> its just for some functions its not
[00:24:59] <jinsun> https://docs.python.org/3/library/io.html#io.BufferedIOBase.read probably?
[00:25:11] *** Joins: sed (~sed@pool-100-7-38-116.rcmdva.fios.verizon.net)
[00:26:41] *** Quits: R0b0t1 (~R0b0t1@d-74-214-63-13.md.cpe.atlanticbb.net) (Remote host closed the connection)
[00:27:02] *** Joins: comet23 (uid517725@user/comet23)
[00:27:06] *** Joins: R0b0t1 (~R0b0t1@d-74-214-63-13.md.cpe.atlanticbb.net)
[00:27:11] <comet23> is this the official python channel?
[00:27:17] *** Quits: ubert (~Thunderbi@178.165.198.127.wireless.dyn.drei.com) (Ping timeout: 265 seconds)
[00:27:41] *** Joins: vvdaiwrw (~rvgzuuqp@gateway/tor-sasl/rvgzuuqp)
[00:28:15] <jinsun> comet23: yup, https://www.python.org/community/irc/
[00:28:15] *** Quits: walterwhip (~walterwhi@user/walterwhip) (Ping timeout: 265 seconds)
[00:28:43] <comet23> is freenode totally dead?
[00:28:53] *** Quits: molt (~molt@178-222-245-206.static.isp.telekom.rs) (Remote host closed the connection)
[00:28:58] *** Joins: molt (~molt@178-222-245-206.static.isp.telekom.rs)
[00:28:59] *** Joins: walterwhip (~walterwhi@user/walterwhip)
[00:29:01] <comet23> there was this really helpful fella i forgot his name but he has lots of experience and is really nice too
[00:29:12] <jinsun> it died long time back 3+ months
[00:29:12] <comet23> i think his nick started with a p or something
[00:29:30] <comet23> is that why we can't connect to freenode anymore
[00:29:30] <comet23> ?
[00:29:35] *** Joins: nips_ (~nips@abv84.internetdsl.tpnet.pl)
[00:29:44] *** Quits: nips (~nips@abv84.internetdsl.tpnet.pl) (Ping timeout: 252 seconds)
[00:30:30] <HiccupJul> freenode's old database was deleted by their new owners
[00:30:51] *** Quits: djhankb (~djhankb@208.113.164.68) (Remote host closed the connection)
[00:30:56] *** Quits: Evolver (sid32215@user/evolver) (Ping timeout: 252 seconds)
[00:31:06] <HiccupJul> and lots of projects moved away from freenode due to their new policies/owner
[00:33:04] *** Quits: odoood (~odoood@2601:c8:c003:a550::3) (Ping timeout: 260 seconds)
[00:33:04] <comet23> ouch
[00:33:04] <Inge> basically the old OPs revolted
[00:33:04] *** Joins: djhankb (~djhankb@208.113.164.68)
[00:33:04] <Inge> and then the new owner went Full Retard
[00:33:07] <Inge> and here we are
[00:33:07] <comet23> what did the new owner do?
[00:33:07] *** Joins: Evolver (sid32215@user/evolver)
[00:33:07] <comet23> i thought freenode was decentralized
[00:33:07] *** Quits: p-i- (~Ohmu@mx-ll-223.206.145-156.dynamic.3bb.co.th) (Remote host closed the connection)
[00:33:07] <Inge> deleted the database with all registered channels and stuff
[00:33:07] *** Joins: p-i- (~Ohmu@223.206.145.156)
[00:33:07] <Compu-Celebi> Wikipedia's article "Freenode" contains details about the "hostile takeover."
[00:33:53] *** Quits: penguino (~mrpenguin@user/mrpenguin) (Ping timeout: 276 seconds)
[00:33:55] <HiccupJul> i dunno if there's any such thing as a decentralised IRC
[00:34:04] <grym> HiccupJul: other way around
[00:34:05] <grym> thus all the netsplits :)
[00:34:05] <comet23> wow i just read it... it's like the new owner wanted to destroy freenode
[00:34:05] <grym> comet23: succeeded, too!
[00:34:05] *** Quits: walterwhip (~walterwhi@user/walterwhip) (Ping timeout: 252 seconds)
[00:34:08] <HiccupJul> well, i guess its how you look at it :P
[00:34:26] <comet23> i don't understand why anyone would buy something to destroy it
[00:39:00] *** Quits: supakeen (~user@python/site-packages/supakeen) (Remote host closed the connection)
[00:39:00] *** Joins: Abrax- (~Abrax@user/abrax)
[00:39:00] <HiccupJul> the server is central to all the users who want to communicate with each other. but anyone can make their own server, so in that way it is decentralised.
[00:39:00] <grym> comet23: people do dumb shit every day, man, i dunno :)
[00:39:00] *** Joins: supakeen (~user@python/site-packages/supakeen)
[00:39:00] *** Quits: computeiro (~Wender@189.37.67.193) (Quit: Leaving)
[00:39:00] *** Joins: penguino (~mrpenguin@user/mrpenguin)
[00:39:00] <comet23> this channel changed
[00:39:00] *** Joins: walterwhip (~walterwhi@user/walterwhip)
[00:39:00] <comet23> there used to be zero tolerance for expletives
[00:39:00] *** Quits: linux_dream (~isaac@2a01:e0a:7:60e0:bcc4:b32c:9221:831d) (Quit: WeeChat 3.2)
[00:39:00] *** Quits: sa (sid1055@id-1055.tinside.irccloud.com) (Ping timeout: 256 seconds)
[00:39:00] *** Quits: p-i- (~Ohmu@223.206.145.156) (Ping timeout: 252 seconds)
[00:39:00] <grym> alternatively, its sunday and the mods are relaxing :)
[00:39:00] *** Joins: justsomeguy (~justsomeg@user/justsomeguy)
[00:39:00] <Compu-Celebi> In some time zones, it is Monday.
[00:39:01] <comet23> grym i mean back when it was on freenode lol
[00:39:01] *** Quits: Abrax (~Abrax@user/abrax) (Ping timeout: 256 seconds)
[00:39:01] *** Joins: sa (sid1055@id-1055.tinside.irccloud.com)
[00:39:01] <grym> brb reconfiguring my VPS to display AOE time
[00:39:01] *** Joins: blackout69 (~blackout6@net-31-156-75-64.cust.vodafonedsl.it)
[00:39:01] <comet23> i was thinking of nedbad that guy is super nice and very helpful and super knowledgeable too
[00:39:01] <grym> comet23: he's here
[00:39:01] <comet23> yeah i just scrolled through the list of nicks
[00:39:01] <grym> pnedbat :D
[00:39:04] *** Quits: mixfix41 (~homefame@user/mixfix41) (Ping timeout: 252 seconds)
[00:39:27] <sveinse> there's less traffic here now after freenode tripped over its own feet
[00:40:20] <grym> slightly, yeah.  mostly i figure we just found out who has a VPS but doesn't check it much
[00:40:20] <comet23> it'll pick up
[00:40:35] <sveinse> jep, hope so
[00:41:26] *** Quits: walterwhip (~walterwhi@user/walterwhip) (Ping timeout: 260 seconds)
[00:43:14] <sveinse> I have wondered many times what the demographics of this channel here is though. Does the kids today think IRC is a valid tool, or it only us, uhm, not young ppl that traverse here. There are lots of other channels to get py support (thankfully).
[00:44:08] <comet23> i've always had this burning question about programming
[00:44:10] *** Quits: cheater (~Username@user/cheater) (Ping timeout: 265 seconds)
[00:44:21] <comet23> are else statements in a function necessary?
[00:44:21] <Compu-Celebi> What, exactly, qualifies as not being young?
[00:44:40] <comet23> @Compu-Celebi if your age is >22 you're not young
[00:44:52] <grym> Compu-Celebi: i'll know it when i see it >:)
[00:44:59] <Compu-Celebi> I have used `else` statements in functions, especially if they do not return an explicit value.
[00:45:00] <sveinse> Compu-Celebi: hehe, well, I was about to label myself as old, but that might be interpreted in the other end of the scale :D
[00:45:06] *** Quits: Haxxa (~Haxxa@122.199.45.213) (Quit: Haxxa flies away.)
[00:45:55] <sveinse> I've been using python since approx 2002
[00:46:02] <Compu-Celebi> comet23, that seems to be a quite excessively low threshold.
[00:46:05] *** Joins: codeswhite (~codeswhit@user/codeswhite)
[00:46:13] <grym> Compu-Celebi: oh look, subjective things!
[00:46:18] *** Quits: RangerBobVA (~bmaddox@user/rangerbobva) (Quit: Leaving)
[00:46:46] <grym> comet23: if you need an else, use one.  for ... else is not a pattern i use very much, if/elif/else i use often
[00:46:53] <comet23> where do we paste code?
[00:47:10] <sveinse> bpaste is good, comet23
[00:47:10] <grym> comet23: bpa.st/+python
[00:47:18] <jinsun> https://bpa.st/+python it is there in the topic
[00:47:19] <grym> you can stack +names, too
[00:47:26] <Compu-Celebi> My age is thirty-seven years and four weeks.
[00:47:37] <grym> so bpa.st/+python+pytb+text works
[00:48:09] <comet23> thanks!
[00:48:10] <comet23> https://bpa.st/RTPQ
[00:48:16] <comet23> is that okay to do or should an else be in there?
[00:48:20] <sveinse> Yeah, I'm 45, Compu-Celebi
[00:48:20] <grym> (this assumes you have memorized or can guess the lexer names that pygments uses, but hey)
[00:48:31] <Compu-Celebi> I have recently wondered whether I am still young, but because I am not middle-aged, I am probably young.
[00:48:41] <grym> comet23: `return num1>num2` works just as well as the body of that function
[00:48:43] *** Joins: Haxxa (~Haxxa@122.199.45.213)
[00:49:00] <grym> comet23: so in this case you shouldn't even have the if
[00:49:03] <Compu-Celebi> Spaces should surround that inequality operator.
[00:49:08] <comet23> yeah but i can't come up with a better example...
[00:49:28] <comet23> the idea is for the else not for how succinct you can make that function
[00:49:32] <grym> comet23: more subtly, it's ok not to have the else because the body of the if exits the function and the not-body of the if also exits the function
[00:50:09] <comet23> thank you
[00:50:15] <grym> what you don't want to do is have a function that sometimes returns None
[00:50:28] <grym> just because you forgot a clause and there's a way for the function to return you didn't see
[00:50:33] *** Joins: cheater (~Username@user/cheater)
[00:50:35] <grym> that's annoying to deal with
[00:50:59] <jinsun> pylint actually complains with no-else-return if you do put an else there, a bit too aggresive, but it is pylint
[00:51:12] <grym> i don't use pylint very much
[00:52:17] <sveinse> yeah, pylint must be tamed before being using in a real project, otherwise you'd end up coding for pylint
[00:53:19] *** Quits: sed (~sed@pool-100-7-38-116.rcmdva.fios.verizon.net) (Ping timeout: 252 seconds)
[00:53:34] *** Joins: zln (~zln@c80-217-230-193.bredband.tele2.se)
[00:54:25] *** Quits: pyeveryt_ (~pyeveryth@c-66-31-107-137.hsd1.ma.comcast.net) (Remote host closed the connection)
[00:55:01] *** Joins: pyeveryt_ (~pyeveryth@c-66-31-107-137.hsd1.ma.comcast.net)
[01:00:06] *** Quits: pyeveryt_ (~pyeveryth@c-66-31-107-137.hsd1.ma.comcast.net) (Ping timeout: 260 seconds)
[01:01:11] *** Quits: blackout69 (~blackout6@net-31-156-75-64.cust.vodafonedsl.it) (Quit: Leaving.)
[01:01:53] *** Quits: Seiryuu (~Seiryuu@ip174-103-176-143.adsl2.static.versatel.nl) (Quit: Leaving)
[01:04:06] <ross> in pytest, I'd like to run a fixture only once and use its single return value for all tests that request it, rather than re-executing and regenerating it every time. is this possible?
[01:04:23] <nedbat> ross: @pytest.fixture(scope="session")
[01:04:48] *** Joins: blackout69 (~blackout6@net-31-156-75-64.cust.vodafonedsl.it)
[01:04:48] *** Quits: blackout69 (~blackout6@net-31-156-75-64.cust.vodafonedsl.it) (Client Quit)
[01:05:00] <ross> nedbat: that doesn't appear to make a difference - I'm still seeing it run multiple times
[01:05:13] *** Joins: blackout69 (~blackout6@net-31-156-75-64.cust.vodafonedsl.it)
[01:05:19] <nedbat> ross: can you link us to the code?
[01:05:31] *** Joins: trampel (~trampel@2601:602:9c00:921:3a60:6471:7025:68df)
[01:05:40] *** Quits: HiccupJul (~HiccupJul@cpc122682-reig6-2-0-cust39.6-3.cable.virginm.net) (Quit: Leaving)
[01:06:14] <nedbat> ross: https://docs.pytest.org/en/6.2.x/fixture.html#fixture-scopes
[01:07:10] <ross> sure, but fair warning it's not easily executable https://github.com/croque-scp/notifier/blob/483a26282cb015ecf12fb58d6dbbea4e2e6bb8b7/tests/test_database.py#L23
[01:07:23] <nedbat> ross: we very very rarely try to execute the code people share
[01:07:42] <ross> nedbat: that's interesting - I was using scope module before, and changing to session shouldn't make a difference in this case. but I'm seeing it run multiple times either way
[01:07:42] <nedbat> ross: this says scope="module"?
[01:08:00] *** Quits: puff (~user@S0106d4ca6d80a83c.vs.shawcable.net) (Read error: Connection reset by peer)
[01:08:14] *** Joins: puff (~user@S0106d4ca6d80a83c.vs.shawcable.net)
[01:08:25] <ross> apologies, I pushed the temp branch but didn't commit. https://github.com/croque-scp/notifier/blob/753b924f6a60c2516b9340f4757ed00fa5d5411e/tests/test_database.py#L23
[01:08:44] *** Quits: ramblebamble (ramblebamb@gateway/vpn/protonvpn/ramblebamble) (Quit: WeeChat 3.2)
[01:08:58] *** Joins: walterwhip (~walterwhi@user/walterwhip)
[01:09:04] *** Quits: gitesh (uid423739@id-423739.ilkley.irccloud.com) (Quit: Connection closed for inactivity)
[01:09:14] <nedbat> ross: how are you seeing that the fixture runs more than once?
[01:10:23] <nedbat> ross: the arguments to this fixture are probably forcing it to run more than once
[01:10:55] <nedbat> ross: i don't know how pytest_generate_tests interacts with the fixture
[01:11:08] <X4> hi
[01:11:22] <ross> nedbat: I'm seeing duplicated logs emitted from `db.scrub_database(db_name)` (which is only called in that test function) with different timestamps, once per test
[01:11:24] <X4> How can I improve this code? https://github.com/python-telegram-bot/python-telegram-bot/blob/master/examples/paymentbot.py
[01:11:27] <nedbat> ross: though I think you have parameterized them each with only one value?
[01:12:00] <X4> There seem to be cycles and repetitive code, but I don't know what pattern makes sense to decouple and make it more concise
[01:12:13] *** Joins: mat001_ (~mat001@c-73-223-64-126.hsd1.ca.comcast.net)
[01:12:38] <ross> nedbat: that's something to start with, thank you. I'll look further into what pytest is doing there
[01:13:15] <X4> not sure, if there are other code smells, but the worst part is in L:139 https://github.com/python-telegram-bot/python-telegram-bot/blob/master/examples/paymentbot.py#L139
[01:13:42] <manuels> Conda is a package manager like pip
[01:14:06] *** Quits: walterwhip (~walterwhi@user/walterwhip) (Ping timeout: 260 seconds)
[01:14:46] *** Quits: mat001 (~mat001@c-73-223-64-126.hsd1.ca.comcast.net) (Ping timeout: 252 seconds)
[01:15:15] <manuels> Anaconda a company, condo-forge a community, miniconda and miniforge are installers for conda with the respective channels
[01:15:19] <manuels> Am I right?
[01:16:00] <X4> Yes, that's right. Anaconda also participates in conda-forge though
[01:16:15] *** Joins: bomb-on (~bomb-on@194.144.47.113)
[01:17:53] <Xavierdarkness>  
[01:18:10] <manuels> the installer here: https://developer.apple.com/metal/tensorflow-plugin/
[01:18:22] *** Joins: pyeverything (~pyeveryth@c-66-31-107-137.hsd1.ma.comcast.net)
[01:18:27] <manuels> Miniforge3-MacOSX-arm64.sh
[01:18:39] <manuels> why cant I just use homebrew to install miniforge?
[01:18:54] <manuels> aint it the same ?+
[01:20:26] *** Joins: System123 (~System123@203-134-35-213.sta.estpak.ee)
[01:22:02] *** Quits: clarkk (~clarkk@host86-164-233-103.range86-164.btcentralplus.com) (Quit: Leaving)
[01:22:37] *** Joins: odoood (~odoood@2601:c8:c003:a550::3)
[01:22:42] *** Quits: _ELFrederich (~ELFrederi@134.244.29.70) (Remote host closed the connection)
[01:24:22] *** Quits: System12_ (~System123@ec2-52-61-197-79.us-gov-west-1.compute.amazonaws.com) (Ping timeout: 260 seconds)
[01:25:54] *** Joins: NeilRG (~NeilRG@192.222.196.111)
[01:26:45] *** Quits: Bronto22 (~mennoh@2a02:a46b:4db0:1:5604:a6ff:fe37:3044) (Quit: Konversation terminated!)
[01:27:18] *** Joins: Gustavo6046_ (~Gustavo60@user/gustavo6046)
[01:28:10] *** Quits: Gustavo6046 (~Gustavo60@user/gustavo6046) (Ping timeout: 265 seconds)
[01:29:29] *** Joins: Lord_of_Life_ (~Lord@user/lord-of-life/x-2819915)
[01:30:00] *** Gustavo6046_ is now known as Gustavo6046
[01:30:13] *** Quits: odoood (~odoood@2601:c8:c003:a550::3) (Ping timeout: 252 seconds)
[01:30:26] *** Quits: NeilRG (~NeilRG@192.222.196.111) (Ping timeout: 260 seconds)
[01:30:43] *** Quits: Lord_of_Life (~Lord@user/lord-of-life/x-2819915) (Ping timeout: 252 seconds)
[01:30:44] *** Lord_of_Life_ is now known as Lord_of_Life
[01:32:22] *** Quits: Vornicus (~Vornicus@2603-8000-5d07-7ef0-99d6-bdeb-8186-b199.res6.spectrum.com) (Read error: Connection reset by peer)
[01:35:11] *** Quits: upsala (~zcb@194.36.25.10) (Quit: WeeChat 3.2)
[01:36:11] <aphysically> I haven't gotten quite to unit tests but I guess now is as good a time as any to make the final tweaks to my project and open source it on github
[01:36:38] <aphysically> I have a config file now so there's not any hardcoded odd defaults anymore :P
[01:36:46] *** Quits: System123 (~System123@203-134-35-213.sta.estpak.ee) (Remote host closed the connection)
[01:37:27] *** Joins: System123 (~System123@203-134-35-213.sta.estpak.ee)
[01:37:37] *** Quits: blindguard (~blindguar@2a02:908:1864:c200::4433) (Quit: Konversation terminated!)
[01:38:03] *** Quits: gitly (~gitly@85.255.232.119) (Quit: WeeChat 3.2)
[01:38:35] <theprophet> does any1 have experience with kivy here?
[01:39:16] <aphysically> plus it will make it easier to ask questions here if I can just link it on githubr
[01:40:22] *** Quits: pycurious (~Adium@user/pycurious) (Quit: Leaving.)
[01:40:50] *** Quits: acresearch (~acresearc@user/acresearch) (Ping timeout: 260 seconds)
[01:40:58] *** Quits: trampel (~trampel@2601:602:9c00:921:3a60:6471:7025:68df) (Quit: Leaving)
[01:41:28] *** Joins: Auron (Auron956@user/auron)
[01:42:17] *** Joins: gitly (~gitly@85.255.232.119)
[01:42:25] *** Quits: System123 (~System123@203-134-35-213.sta.estpak.ee) (Ping timeout: 252 seconds)
[01:42:40] *** Joins: walterwhip (~walterwhi@user/walterwhip)
[01:43:13] *** Joins: johnny (~johnny@user/johnny)
[01:43:35] *** Joins: mh3f (~mhowle@cpe-98-25-217-234.sc.res.rr.com)
[01:43:45] *** Joins: zebrag (~chris@user/zebrag)
[01:43:55] <johnny> so what do folks tend to use for cli arg parsing these days? i remember a lot of folks starting to use click, but is that still the case? or did the built in python stuff improve enough?
[01:44:01] *** Joins: lsrtl__ (~lsrtl@user/lsrtl)
[01:44:11] <grym> johnny: click, typer
[01:44:21] <grym> argparse when someone's keeping you in stdlib
[01:44:35] <johnny> hmm typer, that one is new to me for sure
[01:45:04] *** Quits: mh3f__ (~mhowle@cpe-98-25-217-234.sc.res.rr.com) (Ping timeout: 252 seconds)
[01:45:04] <Compu-Celebi> I discovered `argparse` only a few years ago.
[01:45:05] <johnny> any particular reason to choose typer over click?
[01:45:17] <grym> johnny: it's click, but with annotations instead of decorators
[01:45:33] <Compu-Celebi> Approximately one and a half years ago, I discovered the module `cmd`.
[01:45:34] <johnny> ah.. i guess i should find out what's going on with annotations then
[01:45:47] <grym> stylistically, i prefer this approach; it also has some prevalidation nicities
[01:45:57] <johnny> i haven't touched python since 3.6/3.7
[01:46:05] <grym>  johnny: https://tildegit.org/grym/oxo/src/branch/master/oxo/__main__.py  here is a silly example
[01:46:15] <X4> how do you pack a function call and a variable into a data-structure that you can loop through?
[01:46:17] <johnny> and of course i tried to limit deps to what could work on debian stable at the time
[01:46:23] *** Quits: djfhn (~djfhn@178.49.152.151) (Quit: Client closed)
[01:46:31] <X4> and how do you call the function from the structure?
[01:46:35] <johnny> ah tildegit is new to me too
[01:46:57] <grym> johnny: it's just another git forge. each @app.command defines a subcommand, whose signature argument annotations define what's permissible to pass
[01:47:10] <grym> so you'd run `oxo files at-least one-file that-exists
[01:47:13] *** Quits: lsrtl_ (~lsrtl@user/lsrtl) (Ping timeout: 252 seconds)
[01:47:20] <grym> and if you don't, you get yelled at :)
[01:47:33] <johnny> thanks for the example! i really appreciate this particular style of helping :)
[01:47:42] *** Quits: walterwhip (~walterwhi@user/walterwhip) (Ping timeout: 260 seconds)
[01:47:42] <Compu-Celebi> X4, are you referring to a sequence whose items are function invocation-variable pairs?
[01:48:14] <grym> np
[01:48:25] <johnny> yeah i could tell it was a forge. i kinda like how it seems code focused on this particular view atm
[01:48:52] <X4> I would say yes, but I'm unsure. Here's an example: dispatcher.add_handler(CommandHandler("shipping", start_with_shipping_callback))
[01:49:05] <The-Compiler> personally I prefer click, seems weird to abuse default values to add argument metainfo
[01:49:05] <grym> it's gitea? gitosis? one of those
[01:49:09] <grym> you can self-host
[01:49:10] <johnny> ah
[01:49:21] <The-Compiler> grym: gitea according to the footer
[01:49:24] <johnny> yeah i've heard of those, but i've never been to a site that uses them
[01:49:31] <Compu-Celebi> What is the variable in question in the example?
[01:49:36] <johnny> a friend of mine is into tilde
[01:49:41] <grym> The-Compiler: at least it does provide a good test harness .  (typer)
[01:49:57] <grym> so argument abuse aside, at least you can drive it sensibly :)
[01:50:15] <X4> Compu-Celebi the structure is like this: basically myobject.add_handler(foo("shipping", callback_one))
[01:50:49] <grym> The-Compiler: in fairness, the single reason i started playing with typer is that click dragged their feet for like, multiple years on letting me get pathlib.Paths easily
[01:51:02] <grym> and i got fed up
[01:51:10] <grym> i think that's provided now, though
[01:51:48] <Compu-Celebi> Is `"shipping"` intended to denote a variable by its name?
[01:51:51] *** Quits: Akuli (~Akuli@82-203-160-226.bb.dnainternet.fi) (Remote host closed the connection)
[01:52:19] *** Quits: Gurkenglas (~Gurkengla@dslb-002-207-014-195.002.207.pools.vodafone-ip.de) (Ping timeout: 252 seconds)
[01:52:34] <johnny> oh typer RELIES on click
[01:52:46] <grym> johnny: yep, it's click in a trenchcoat
[01:53:03] <grym> it's by the fastAPI guy, which makes a lot of sense
[01:53:09] <johnny> that sounds good to me.. means they don't have to do most of the fiddly bits
[01:53:14] *** Quits: justsomeguy (~justsomeg@user/justsomeguy) (Quit: WeeChat 3.2)
[01:53:23] <grym> he's good at this space
[01:53:41] <grym> "take good tools, use them well"
[01:53:47] *** Quits: vats (~vats@103.70.83.191) (Ping timeout: 245 seconds)
[01:54:07] <johnny> what's going on here is that somebody i know was doing a mod for a game, but it only has a tkinter gui (being that the intended audience is windows), but now he can't really script it :)
[01:54:08] <X4> Compu-Celebi no, that's just a string
[01:54:22] <johnny> and i run linux, and don't wanna see tkinter :)
[01:54:53] <johnny> i hadn't touched python in awhile, but figured this would be a good way to at least keep up with what's going on in the space
[01:55:31] *** Quits: alexyov (~alexyov@79.124.0.2) (Quit: Ping timeout (120 seconds))
[01:55:44] *** Joins: alexyov (~alexyov@79.124.0.2)
[01:55:51] <Compu-Celebi> Is the callback the function in the example that is to be packed?
[01:56:08] <Compu-Celebi> It is possible that, when you said "function call," you actually merely meant "function."
[01:58:47] *** grym is now known as zero-cool
[01:58:53] *** zero-cool is now known as grym
[01:59:00] <X4> Compu-Celebi it's a bit complicated, because one has to think about async state. Let's assume we have shipping, which cannot be done before "payment" for example. So a payment callback would need to update it's state in a common data structure ideally, is that correct?
[01:59:36] <Compu-Celebi> I do not know what the purpose of any callbacks in this context is.
[02:00:25] <X4> Compu-Celebi So you mea it's possible to call myobject.add_handler() in a loop and pass >> foo("shipping", shipping_callback) << into add_handler()?
[02:00:33] <Compu-Celebi> If you desire to iterate through a list of pairs of data of any kind, why do you not simply store the pairs in a list and iterate through the list's items?
[02:00:58] *** Quits: yamchah2 (~yamchah2@user/yamchah2) (Ping timeout: 252 seconds)
[02:01:17] *** Quits: kosh_ (~kosh@user/kosh) (Ping timeout: 245 seconds)
[02:01:24] <X4> Compu-Celebi that would work, but what if there are for example two or more orders with different states of progression within the order process?
[02:01:33] *** Joins: walterwhip (~walterwhi@user/walterwhip)
[02:01:48] <X4> Parallelism is what makes it a bit complicated for me to understand
[02:02:21] <Compu-Celebi> Elucidate "two or more orders with different states of progression."
[02:02:40] <X4> How can a data structure handle parallelism and also allow functions to ask for each order's state.. idk
[02:02:57] *** Quits: Gustavo6046 (~Gustavo60@user/gustavo6046) (Ping timeout: 265 seconds)
[02:03:28] <Compu-Celebi> Are you referring to a set of orders in which at least some of the orders are not in the same state as at least some of the other orders?
[02:03:34] *** Quits: codeswhite (~codeswhit@user/codeswhite) (Ping timeout: 260 seconds)
[02:04:00] *** Joins: yamchah2 (~yamchah2@user/yamchah2)
[02:04:00] *** Joins: codeswhite (~codeswhit@user/codeswhite)
[02:04:35] *** Joins: jan1 (~jan@user/jan1)
[02:05:03] <X4> In an order process for example. There can be a sign_in, add_to_cart, process_payment, payment_successfull, payment_failed and of course many more states in the give example. These are usually each individual functions which have each a different state.
[02:05:19] <X4> Compu-Celebi Exactly.
[02:05:34] <Compu-Celebi> What is each item in the sequence intended to represent: an order? a stage of an order process?
[02:06:13] <X4> a stage and also an encapsulation in that step's function.
[02:06:23] *** Joins: mat001 (~mat001@c-73-223-64-126.hsd1.ca.comcast.net)
[02:06:24] <manuels> ty X4
[02:06:44] *** Joins: cedric (~cedric@2a01:cb11:821:7c00:8e52:4e7d:e34b:bfbb)
[02:07:02] <Compu-Celebi> Is a separate function used for each stage?
[02:07:26] *** Joins: Gustavo6046 (~Gustavo60@user/gustavo6046)
[02:07:34] *** Quits: fikran (~fikran@user/fikran) (Ping timeout: 252 seconds)
[02:07:42] <X4> Compu-Celebi Yes, indeed. Reason for this is the following CommandHandler() function. https://github.com/python-telegram-bot/python-telegram-bot/blob/master/telegram/ext/commandhandler.py#L39
[02:07:58] *** Joins: y1n (~y1n@84-115-64-194.wifi.dynamic.surfer.at)
[02:08:05] <Compu-Celebi> It seemed that `CommandHandler` was a class, not a function, due to its name's capitalization.
[02:08:06] <X4> Compu-Celebi Of course there are many ways to handle state. Monads are one that are popular in Haskell, but I've never used Monads in Python.
[02:08:33] <Compu-Celebi> Oh, it is a class.  You were referring to a function within `CommandHandler`, which is a method.
[02:09:00] <X4> Yes, my bad, sorry for the confusion :)
[02:09:04] <Compu-Celebi> I have no experience with monads, although I have read about them, or Haskell.
[02:09:12] <X4> same here
[02:09:18] *** Joins: fikran (~fikran@user/fikran)
[02:09:21] <Compu-Celebi> I have little experience with parallelism in programming or, for that matter, multithreading.
[02:09:38] *** Quits: mat001_ (~mat001@c-73-223-64-126.hsd1.ca.comcast.net) (Ping timeout: 260 seconds)
[02:10:04] *** Joins: medium_cool (~medium_co@2605:a601:a9ed:4300:95dc:aab1:5834:8e42)
[02:10:50] *** Quits: medium_cool (~medium_co@2605:a601:a9ed:4300:95dc:aab1:5834:8e42) (Client Quit)
[02:10:52] <Compu-Celebi> I have no experience with Telegram.
[02:11:49] <X4> Parallelism occurs naturally due to orders coming in per api_call for example. Multi-threading isn't needed here and would be work on the part of the application_server. Telegram was only an example. The problem is what pattern or in what way is it possible to solve the repetitive call_backs
[02:12:06] <X4> so no knowledge of telegram required
[02:12:19] <Compu-Celebi> What is `api_call`?
[02:12:32] <Compu-Celebi> What is `application_server`?
[02:12:48] <mefistofeles> X4: parallelism there is MIMD right? not SIMD?
[02:13:16] <Compu-Celebi> I recognize neither of these initialisms.
[02:14:48] <X4> mefistofeles Correct, it's not SIMD. That would only make sense for high-performance computing or massively parallel tasks. To be honest making a shopping system's core use SIMD instead of MIMD would even make sense.
[02:15:35] <mefistofeles> X4: yeah, just checking
[02:15:58] <mefistofeles> some say MIMD is not "true parallelism", but I guess it's kind of a "silly" formality
[02:16:15] <X4> But I was indeed trying something simpler. Just passing functions with parameters into another function in a loop conditionally
[02:17:25] <Compu-Celebi> What is the loop's purpose?
[02:17:55] <X4> mefistofeles the difference is only the computing path and registers utilized. For SIMD you don't have benefit without AVAX512 ie.
[02:17:55] *** Quits: otisolsen70 (~otisolsen@xd4ed80b5.cust.hiper.dk) (Quit: Leaving)
[02:18:34] *** Quits: walterwhip (~walterwhi@user/walterwhip) (Ping timeout: 252 seconds)
[02:18:35] <X4> Compu-Celebi that was my original question :)  If it makes sense to instead of repetitively call blah.add_handler(run("str",callBack_one)) but with different functions within add_handler()
[02:19:01] <X4> to just iterate all functions in a loop
[02:19:22] <Compu-Celebi> Why do you even use handlers, instead of, for example, tuples?
[02:21:01] <X4> I think it's the same. And a handler returns List[:obj:`str`]
[02:21:04] *** Quits: cedric (~cedric@2a01:cb11:821:7c00:8e52:4e7d:e34b:bfbb) (Quit: Konversation terminated!)
[02:22:06] <Compu-Celebi> What is `List`?
[02:22:30] <X4> the command() that is passed
[02:22:47] <Compu-Celebi> Why is it called "`List`"?
[02:23:42] <X4> containing the function with it's parameters. It's all in the commandhandler.py code, but to not be code specific, I was trying to make the example generic. Because I'm genuinely interested in understanding it
[02:24:37] <X4> Because a command is made of the data type List[str]
[02:25:02] <X4> and :obj:`list`: Is the list of args for the handler.
[02:25:21] <Compu-Celebi> Does `List[str]` denote a list of strings?
[02:26:16] *** Quits: clarjon1 (~clarjon1@user/clarjon1) (Ping timeout: 252 seconds)
[02:26:20] *** Quits: slav0nic (slav0nic@python.su) (Ping timeout: 260 seconds)
[02:26:38] <X4> To be honest I don't fully understand the implementation of the commandhandler.py. But I've seen this pattern mostly in commerical or old code and I'm curious if this is THE way of handling "extensibility" or if there is a more modern way.
[02:27:24] *** Quits: magla (~gelignite@55d48887.access.ecotel.net) (Quit: Stay safe!)
[02:27:34] *** Joins: NeilRG (~NeilRG@192.222.196.111)
[02:27:43] <X4> The main purpose and advantage of the CommandHandler class is that it allows you to pass function and therefore extend the original function with additional functionality while making the process "uniform"
[02:28:23] <Compu-Celebi> What is difference between `List[str]` and `List[:obj:`str`]`?
[02:29:27] *** Joins: besnn (~besnn@user/besnn)
[02:29:54] <theprophet> does anyone know why kv file does not work for me in pycharm?
[02:30:08] <theprophet> display does not show up the widget buttons , its just all black screen
[02:30:49] *** Joins: Mattiaslndstrm (~Mattiasln@c188-148-207-108.bredband.tele2.se)
[02:31:19] *** Quits: Mattiaslndstrm (~Mattiasln@c188-148-207-108.bredband.tele2.se) (Client Quit)
[02:31:53] <X4> Compu-Celebi I am trying to understand the CommandHandler Class in here to give you an answer, but I'm afraid I don't fully grasp it. https://github.com/python-telegram-bot/python-telegram-bot/blob/master/telegram/ext/commandhandler.py#L68
[02:32:19] *** Quits: NeilRG (~NeilRG@192.222.196.111) (Ping timeout: 252 seconds)
[02:33:37] <Compu-Celebi> I did not know that the code that you were using to express data types was actually in Python.
[02:34:23] <X4> Yes it's importing the following: from typing import TYPE_CHECKING, Callable, Dict, List, Optional, Tuple, TypeVar, Union
[02:34:51] <X4> personally I have never worked with typing in python
[02:35:02] *** Quits: sshrubber (crazyed@2603:300a:1d10:c000:de4a:3eff:fe88:cc5f) (Ping timeout: 245 seconds)
[02:36:10] <Compu-Celebi> You were using a Python feature with which I have no experience.
[02:37:15] *** Quits: Donitz (~Donitz@85-156-203-108.elisa-laajakaista.fi) (Read error: Connection reset by peer)
[02:38:21] <Compu-Celebi> I do not recollect what it is called, but it is possibly "function annotation" or "type annotation."
[02:39:02] *** Quits: Elon_Satoshi (~elon@user/elon-satoshi/x-4242282) (Ping timeout: 260 seconds)
[02:39:04] *** Joins: Donitz (~Donitz@85-156-203-108.elisa-laajakaista.fi)
[02:39:31] *** Quits: LucaTM (~LucaTM@user/lucatm) (Quit: Textual IRC Client: www.textualapp.com)
[02:39:34] *** Quits: GreenResponse (~tomek@r-45-155-148-237.gpon.bialnet.pl) (Quit: Leaving)
[02:40:08] <Compu-Celebi> I do not recollect in what version it was introduced, but its version number is probably greater than that of the version that I currently use, which is version 3.6.9.
[02:40:42] *** Joins: Elon_Satoshi (~elon@user/elon-satoshi/x-4242282)
[02:40:55] *** Joins: bancroft (~bancroft@bras-base-mtrlpq02hsy-grc-09-76-68-189-147.dsl.bell.ca)
[02:44:58] *** Quits: bomb-on (~bomb-on@194.144.47.113) (Quit: aллилѹіа!)
[02:46:53] *** Quits: TranquilEcho (~grom@user/tranquilecho) (Quit: WeeChat 2.8)
[02:47:46] *** Quits: nomic (~nomic@185.192.69.176) (Quit: Leaving)
[02:48:04] *** Joins: nomic (~nomic@185.192.69.176)
[02:48:07] *** Quits: nomic (~nomic@185.192.69.176) (Read error: Connection reset by peer)
[02:48:09] *** Joins: grey_ham (~graham@88-111-245-14.dynamic.dsl.as9105.com)
[02:48:16] *** Quits: Elon_Satoshi (~elon@user/elon-satoshi/x-4242282) (Ping timeout: 252 seconds)
[02:48:21] *** Joins: nomic (~nomic@185.192.69.176)
[02:49:26] *** Quits: niku (~nick@2603-8000-7f03-1ab6-82ee-73ff-fea2-5bcd.res6.spectrum.com) (Ping timeout: 252 seconds)
[02:50:02] *** Joins: Elon_Satoshi (~elon@user/elon-satoshi/x-4242282)
[02:51:18] *** Quits: Gustavo6046 (~Gustavo60@user/gustavo6046) (Ping timeout: 265 seconds)
[02:51:31] *** Joins: Gustavo6046_ (~Gustavo60@user/gustavo6046)
[02:51:44] *** Quits: plastico (~plastico@neomutt/plastico) (Quit: WeeChat 3.2)
[02:52:53] *** Joins: System123 (~System123@203-134-35-213.sta.estpak.ee)
[02:53:49] *** Gustavo6046_ is now known as Gustavo6046
[02:54:14] *** Joins: cjb (~cjbayliss@user/cjb)
[02:54:52] *** Quits: freeworld (~vit@chello085216193138.chello.sk) (Ping timeout: 252 seconds)
[02:55:10] *** Quits: y1n (~y1n@84-115-64-194.wifi.dynamic.surfer.at) (Ping timeout: 265 seconds)
[02:55:12] *** Joins: mabi (~m42e@pb42.de)
[02:55:22] *** Quits: GenTooMan (~cyberman@2601:547:437f:e5c6:21f:5bff:fefe:a883) (Ping timeout: 260 seconds)
[02:57:16] *** Quits: zln (~zln@c80-217-230-193.bredband.tele2.se) (Ping timeout: 260 seconds)
[02:57:27] *** Quits: Mikro (leo@libera.ninja) (Ping timeout: 240 seconds)
[02:57:32] *** Joins: jewels (~jewels@host-92-5-107-43.as13285.net)
[02:57:34] *** Quits: System123 (~System123@203-134-35-213.sta.estpak.ee) (Ping timeout: 265 seconds)
[02:57:40] *** Quits: Seirdy (~Seirdy@sourcehut/user/seirdy) (Ping timeout: 252 seconds)
[02:57:54] *** Joins: GenTooMan (~cyberman@2601:547:437f:e5c6:21f:5bff:fefe:a883)
[02:58:43] <jewels> Hi there, I'm looking for a way to recursively iterate over ~100k files in a directory that match a specific pattern. So far os.walk, glob and iglob turned out to be extremely slow!
[02:58:43] *** Quits: puff (~user@S0106d4ca6d80a83c.vs.shawcable.net) (Read error: Connection reset by peer)
[02:58:45] <jewels> Any ideas?
[02:58:56] *** Joins: puff (~user@s0106d4ca6d80a83c.vs.shawcable.net)
[02:59:28] <mefistofeles> jewels: is python a hard requirement for this? Because maybe some shell thing can do better
[02:59:53] <jewels> Yeah is part of an entire script that uses Python functions/classes
[03:00:34] <mefistofeles> jewels: I don't think it gets better than glob, but maybe if you show the code and the file structure?
[03:01:32] <jewels> the file structure is very simple. I have one main directory "main" and K sub-directories. In each sub-directory, I'm interested in files with a specific extension.
[03:02:03] <jewels> I'm after a generator that would yield files matching my criteria
[03:02:12] *** Quits: ZedHedTed (~ZedHedTed@user/zedhedted) (Remote host closed the connection)
[03:03:27] *** Quits: odinsbane (~mbs@pat-pool-138.crick.ac.uk) (Ping timeout: 240 seconds)
[03:03:41] *** Joins: Seirdy (~Seirdy@sourcehut/user/seirdy)
[03:04:06] *** Quits: mwichmann (~mats@209-188-119-117.taosnet.com) (Quit: Leaving)
[03:04:24] *** Quits: fedenix (~fedenix@gateway/tor-sasl/fedenix) (Remote host closed the connection)
[03:04:54] *** Quits: jewels (~jewels@host-92-5-107-43.as13285.net) (Quit: Client closed)
[03:05:09] *** Quits: X4 (~X4@ip-95-223-73-17.hsi16.unitymediagroup.de) (Quit: Client closed)
[03:07:18] *** Joins: jesse-s (sid98646@id-98646.stonehaven.irccloud.com)
[03:08:05] *** Joins: y1n (~y1n@84-115-64-194.wifi.dynamic.surfer.at)
[03:09:29] *** Joins: walterwhip (~walterwhi@user/walterwhip)
[03:11:45] *** Quits: Midjak (~Midjak@82-65-111-221.subs.proxad.net) (Quit: This computer has gone to sleep)
[03:12:32] <sveinse> jewels: I've made a package called `dirscan` which I use a lot to scan and compare directories in my own systems
[03:12:42] *** Joins: odoood (~odoood@2601:c8:c003:a550::3)
[03:13:31] <sveinse> I'm in the middle of dev of it, but it should be fairly stable.
[03:14:08] <sveinse> https://github.com/sveinse/dirscan/tree/feature-py3only Use the `feature-py3only` branch
[03:14:43] *** Quits: walterwhip (~walterwhi@user/walterwhip) (Ping timeout: 252 seconds)
[03:15:03] <sveinse> But I suspect it might be slow for your needs. So I'm keen on hearing your use case and learning from this
[03:15:44] *** Joins: BlessJah_ (~BlessJah@user/blessjah)
[03:18:40] *** Quits: BlessJah (~BlessJah@user/blessjah) (Ping timeout: 240 seconds)
[03:18:48] *** Joins: jewels (~jewels@host-92-5-107-43.as13285.net)
[03:19:01] <jewels> mefistofeles sorry I got disconnected!
[03:19:32] <sveinse> jewels: did you see my posts?
[03:19:56] <jewels> Sorry unfortunately no
[03:20:01] <sveinse> jewels: I've made a package called `dirscan` which I use a lot to scan and compare directories in my own systems
[03:20:05] <sveinse> I'm in the middle of dev of it, but it should be fairly stable.
[03:20:12] <sveinse> https://github.com/sveinse/dirscan/tree/feature-py3only Use the `feature-py3only` branch
[03:20:14] <sveinse> But I suspect it might be slow for your needs. So I'm keen on hearing your use case and learning from this
[03:20:41] *** Joins: DrBrownBear (~DrBrownbe@2600:1700:9aa1:6bc0:d0db:ea4a:d86c:dc4e)
[03:21:01] <jewels> Ok I can give it a go
[03:21:08] <jewels> give me one sec
[03:21:09] <sveinse> Admittedly it does not exclude/search for patterns very elegantly
[03:21:16] *** Quits: georgios (~georgios@user/georgios) (Quit: Konversation terminated!)
[03:21:19] *** Quits: waxfire82 (~waxfire@65.119.2.240) (Quit: The Lounge - https://thelounge.chat)
[03:21:27] <jewels> The only pattern I need is "has extension X"
[03:21:39] *** Joins: waxfire82 (~waxfire@65.119.2.240)
[03:21:58] <sveinse> So something like exclude=["*.jpg"] ?
[03:22:05] <jewels> yeah exactly!
[03:22:24] <jewels> In my case it would be include=["*.dgl"]
[03:22:42] *** Quits: waxfire82 (~waxfire@65.119.2.240) (Client Quit)
[03:23:02] *** Joins: waxfire82 (~waxfire@65.119.2.240)
[03:23:22] *** Quits: GenTooMan (~cyberman@2601:547:437f:e5c6:21f:5bff:fefe:a883) (Ping timeout: 245 seconds)
[03:23:32] <jewels> Oh I see that the only parameter you got is basically an "excludes"
[03:23:40] <sveinse> I'm curious how my tool performs
[03:23:49] *** Quits: waxfire82 (~waxfire@65.119.2.240) (Client Quit)
[03:24:03] *** Joins: waxfire82 (~waxfire@65.119.2.240)
[03:24:12] *** Quits: Compu-Celebi (~Compu-Cel@96-18-74-43.cpe.sparklight.net) (Quit: I am disconnecting from this network.)
[03:24:23] *** Quits: waxfire82 (~waxfire@65.119.2.240) (Client Quit)
[03:24:29] <sveinse> Jep, I'm thinking how I might change that. But if you are willing, I can walk you through it. Stand by
[03:24:41] *** Joins: waxfire82 (~waxfire@65.119.2.240)
[03:25:39] <jewels> Sure
[03:25:49] *** Quits: waxfire82 (~waxfire@65.119.2.240) (Client Quit)
[03:25:52] *** Joins: mat001_ (~mat001@c-73-223-64-126.hsd1.ca.comcast.net)
[03:27:28] <sveinse> jewels: Try this https://bpa.st/7M3A
[03:28:58] *** Quits: jan1 (~jan@user/jan1) (Ping timeout: 260 seconds)
[03:29:01] *** Quits: mat001 (~mat001@c-73-223-64-126.hsd1.ca.comcast.net) (Ping timeout: 252 seconds)
[03:29:27] *** Joins: dez (uid92154@user/dez)
[03:29:55] <sveinse> Note to self, I need better exclude and include logic :D -- That said, I've never had the ambition to duplicate the find command-line tools functions
[03:30:47] <jewels> having something that uses `filter` would be great I think :)
[03:31:19] *** Joins: GenTooMan (~cyberman@2601:547:437f:e5c6:21f:5bff:fefe:a883)
[03:34:12] *** Quits: pizdets (~pizdets@183.182.111.150) (Ping timeout: 245 seconds)
[03:34:19] *** Joins: pizdets_ (~pizdets@183.182.115.39)
[03:36:39] <sveinse> You can do it with filter if you'd like: matches = filter(lambda s: s[0].endswith('.py'), dirscan.walkdirs(('.',)))
[03:37:04] <sveinse> jewels: But this is perhaps easier to read: matches = [p for p, o in dirscan.walkdirs(('.',)) if p.endswith('.dgl')]
[03:37:39] <jewels> yeah that's good too :)  as long as it doesn't materialise the list
[03:37:41] <sveinse> It all depends on how you want to consume the iterator from dirscan.walkdirs() really
[03:39:25] <sveinse> When scanning HUGE directories, I prefer the for loop approach over the list generators, because it allows me to work on the matches inline while scanning. Otherwise you have to wait until the scanner is done before being able to do anything.
[03:40:35] <aphysically> I guess if I'm releasing on github I should claim a pypi namespace at the same time
[03:40:41] *** Joins: walterwhip (~walterwhi@user/walterwhip)
[03:41:21] <sveinse> aphysically: I'm not sure about the claiming rules on pypi, but I'd think that that's tactical, yes
[03:41:46] *** Quits: llanhmod (~developer@user/domhnall/x-2887755) (Ping timeout: 252 seconds)
[03:42:55] <aphysically> hmmmmmm
[03:43:03] <sveinse> jewels: anyways, if you experiences os.walk and glob to be slow, I suspect that you'll find my package slow too. I'm doing a lot of object handling in it. It's strength is when you're scanning two directories and comparing them
[03:43:17] <aphysically> this would be a good time to switch from flit to poetry if I want to I guess
[03:44:50] *** Quits: GenTooMan (~cyberman@2601:547:437f:e5c6:21f:5bff:fefe:a883) (Ping timeout: 260 seconds)
[03:45:29] <jewels> No offence, but it's terribly slow as well LD
[03:45:31] <jewels> :D
[03:45:33] *** Joins: fluiD (~fluiD@161.97.231.145)
[03:45:51] <sveinse> jewels: jep, as suspected. Thanks for trying
[03:46:00] <birkoff> can I save ipython history (some part of code, or current session) to file easily someway?
[03:46:52] *** Quits: walterwhip (~walterwhi@user/walterwhip) (Ping timeout: 265 seconds)
[03:47:16] <sveinse> jewels: I would guess that it's the os fs traversal which is the main consumer of time. That is normally the case.
[03:47:56] *** Quits: nomic (~nomic@185.192.69.176) (Quit: Leaving)
[03:48:36] *** Quits: winterflaw (~winterfla@gateway/tor-sasl/winterflaw) (Ping timeout: 276 seconds)
[03:49:24] *** Quits: jewels (~jewels@host-92-5-107-43.as13285.net) (Quit: Client closed)
[03:49:25] *** Quits: jpds (~jpds@gateway/tor-sasl/jpds) (Remote host closed the connection)
[03:49:56] *** Quits: Macuser (~Macuser@216.30.159.201) (Quit: My MacBook has gone to sleep. ZZZzzz…)
[03:49:57] *** Joins: jpds (~jpds@gateway/tor-sasl/jpds)
[03:50:31] *** nova is now known as nokto_nov
[03:50:34] *** nokto_nov is now known as nokto_nova
[03:51:04] *** Joins: jewels (~jewels@host-92-5-107-43.as13285.net)
[03:51:31] <jewels> sveinse no worries. Can you think to another way of speeding it up?
[03:52:14] <mefistofeles> jewels: maybe https://github.com/alexdelorenzo/aiopath
[03:53:19] *** Quits: semeion (~semeion@user/semeion) (Ping timeout: 252 seconds)
[03:54:03] <jewels> mefistofeles this one looks good: https://github.com/alexdelorenzo/aiopath#globbing
[03:54:17] <mefistofeles> jewels: yes, exactly
[03:54:31] *** Quits: r3m (~launch@user/r3m) (Quit: WeeChat 3.3-dev)
[03:54:36] <mefistofeles> jewels: you might try the [!dgl]* or something like that
[03:54:41] <mefistofeles> but not sure if it would take it
[03:54:52] *** Quits: y1n (~y1n@84-115-64-194.wifi.dynamic.surfer.at) (Ping timeout: 252 seconds)
[03:54:52] <jewels> So in theory this one should return a generator that doesn't wait until all the files have been read right?
[03:55:13] <mefistofeles> jewels: I guess, not sure
[03:55:32] <jewels> I'll give it a go then
[03:56:47] *** Joins: thurs806 (~thurs@ip68-225-209-147.ph.ph.cox.net)
[03:57:18] *** Quits: dgw (dgw@sopel/admin/dgw) (Remote host closed the connection)
[03:57:37] *** Quits: jewels (~jewels@host-92-5-107-43.as13285.net) (Quit: Client closed)
[03:59:36] *** Quits: Logograph (~logograph@user/logograph) (Quit: Leaving)
[03:59:55] *** Quits: Wulf (~Wulf@user/wulf) (Ping timeout: 252 seconds)
[04:00:20] *** Joins: dgw (dgw@sopel/admin/dgw)
[04:00:24] *** Quits: trace987 (~trace@ip5f5a6a70.dynamic.kabel-deutschland.de) (Ping timeout: 265 seconds)
[04:01:16] <dba> Hi, I am trying to start a test with selenium webdriver.Remote but I am getting this error in the client side code https://bpa.st/XSCA traceback https://bpa.st/RRQQ . any help is much appreciated. Thanks
[04:01:37] *** Joins: Wulf (~Wulf@user/wulf)
[04:02:05] <mefistofeles> oh they left, we'll never know if that worked
[04:02:05] <mefistofeles> :P
[04:02:47] *** Joins: diamondbond (~diamondbo@175.157.238.149)
[04:03:10] *** Quits: spithash (~spithash@user/spithash) (Remote host closed the connection)
[04:03:18] *** Quits: Moosadee (~Moosadee@136.32.155.193) (Ping timeout: 265 seconds)
[04:03:25] *** Joins: spithash (~spithash@user/spithash)
[04:03:41] *** Joins: sshrubber (crazyed@2603:300a:1d10:c000:de4a:3eff:fe88:cc5f)
[04:06:11] *** Joins: semeion (~semeion@user/semeion)
[04:07:37] *** Quits: Elon_Satoshi (~elon@user/elon-satoshi/x-4242282) (Ping timeout: 252 seconds)
[04:08:29] *** Joins: y1n (~y1n@84-115-64-194.wifi.dynamic.surfer.at)
[04:09:25] *** Joins: Elon_Satoshi (~elon@user/elon-satoshi/x-4242282)
[04:10:20] *** Joins: mat001 (~mat001@c-73-223-64-126.hsd1.ca.comcast.net)
[04:12:15] *** Quits: diamondbond (~diamondbo@175.157.238.149) (Quit: Leaving)
[04:13:02] <evidlo> is there a control code I print to clear the current line and move the cursor to the start?
[04:13:31] *** Quits: besnn (~besnn@user/besnn) (Ping timeout: 252 seconds)
[04:13:34] *** Quits: mat001_ (~mat001@c-73-223-64-126.hsd1.ca.comcast.net) (Ping timeout: 252 seconds)
[04:14:06] *** Quits: zaquest (~notzaques@5.128.210.178) (Quit: Leaving)
[04:14:42] *** Joins: mat001_ (~mat001@c-73-223-64-126.hsd1.ca.comcast.net)
[04:14:43] *** Joins: herjazz (~herjazz@p6758124-ipngn30801marunouchi.tokyo.ocn.ne.jp)
[04:15:14] *** Joins: walterwhip (~walterwhi@user/walterwhip)
[04:15:18] *** Joins: zaquest (~notzaques@5.128.210.178)
[04:15:34] *** Quits: Auron (Auron956@user/auron) (Remote host closed the connection)
[04:16:14] <evidlo> ok \033[K works well enough
[04:16:51] *** Quits: fikran (~fikran@user/fikran) (Ping timeout: 265 seconds)
[04:17:58] *** Quits: mat001 (~mat001@c-73-223-64-126.hsd1.ca.comcast.net) (Ping timeout: 260 seconds)
[04:18:26] *** Parts: blackout69 (~blackout6@net-31-156-75-64.cust.vodafonedsl.it) ()
[04:18:40] *** Joins: fikran (~fikran@user/fikran)
[04:20:18] *** Quits: walterwhip (~walterwhi@user/walterwhip) (Ping timeout: 260 seconds)
[04:20:43] *** Quits: y1n (~y1n@84-115-64-194.wifi.dynamic.surfer.at) (Ping timeout: 252 seconds)
[04:20:48] *** Joins: rannnn8888 (~rannnn888@45.87.212.71)
[04:21:56] <rannnn8888> Hey maybe you know how i can remove my last message i send ? after this example "await client.send_message" in telehon ?
[04:26:14] *** Quits: sh4rk (~lemonade@sharkdrip.com) (Changing host)
[04:26:14] *** Joins: sh4rk (~lemonade@user/sh4rk)
[04:26:43] *** Joins: johfst (~jeremy@pool-151-203-195-72.bstnma.fios.verizon.net)
[04:26:50] *** Quits: Samian (~Sami@2620:10d:c091:480::1:c411) (Changing host)
[04:26:50] *** Joins: Samian (~Sami@user/samian)
[04:28:06] *** Joins: matsaman (~matsaman@user/matsaman)
[04:28:49] *** sshrubber is now known as CrazyEddy
[04:30:17] *** Quits: tk (~tk@ircpuzzles/staff/tk) (Quit: Well, this is unexpected.)
[04:30:43] *** Joins: tk (~tk@ircpuzzles/staff/tk)
[04:30:52] *** Quits: PJBoy (~PJBoy@user/pjboy) (Ping timeout: 245 seconds)
[04:32:23] *** Quits: Samian (~Sami@user/samian) (Quit: Textual IRC Client: www.textualapp.com)
[04:33:37] *** Quits: PantelicGR (~PantelicG@user/pantelicgr) (Quit: Leaving)
[04:34:03] *** Joins: bryce (~bryce@ool-457dd6ac.dyn.optonline.net)
[04:34:18] *** Quits: bancroft (~bancroft@bras-base-mtrlpq02hsy-grc-09-76-68-189-147.dsl.bell.ca) (Ping timeout: 260 seconds)
[04:35:31] *** Quits: pyeverything (~pyeveryth@c-66-31-107-137.hsd1.ma.comcast.net) (Remote host closed the connection)
[04:35:49] *** Joins: Macuser (~Macuser@216.30.159.201)
[04:36:51] *** Quits: FluffyMask (~masque@user/fluffymask) (Quit: WeeChat 3.2)
[04:37:25] <eb0t> hey can you advise a low resources, ide for python on debian
[04:37:58] <eb0t> currently usign vim and tmux
[04:40:35] *** Quits: Linux77 (~Linux7_7@186.233.182.237) (Read error: Connection reset by peer)
[04:40:49] <nedbat> eb0t: what are you missing in those?
[04:41:08] <johfst> hello, i'm trying to pull an mjpeg stream from my ip cam. the code i wrote works, but its rapidly filling up memory and i don
[04:41:28] <eb0t> thing i would like , is i watched a video and the guy basically puts in an operator and a list of everything you can do with the object flashes up
[04:41:35] <nedbat> johfst: you don't know what?
[04:41:52] <johfst> *don't know why. would someone be able to take a look at this threading class i'm using? https://bpa.st/ANWQ
[04:42:16] <johfst> nedbat: sorry, i accidentally hit enter :X
[04:42:36] <eb0t> not only that but i would also like better tool for say listing a class or object as i type
[04:42:47] <eb0t> so i dont have to look back in the code for what it was called
[04:43:04] *** Quits: ttys000 (~ttys000@user/ttys000) (Read error: Connection reset by peer)
[04:43:09] *** Joins: y1n (~y1n@046125250084.public.t-mobile.at)
[04:43:15] <eb0t> currently use pdb but i hear some ides have better debugging
[04:43:44] <johfst> like i must be using iter_content wrong or something but i can't figure out what i should be doing
[04:44:05] *** Quits: luke-jr (~luke-jr@user/luke-jr) (Quit: ZNC - http://znc.sourceforge.net)
[04:44:27] *** Quits: portalrat (~portalrat@user/portalrat) (Quit: Leaving)
[04:44:33] *** Joins: cloudbender (~cloudbend@user/cloudbender)
[04:44:47] <nedbat> johfst: how are you managing the threads?
[04:45:13] *** Joins: luke-jr (~luke-jr@user/luke-jr)
[04:45:22] <johfst> nedbat: this is the only thread, i just start it while building a frame object for wxpython
[04:45:35] <johfst> *er, only other thread off the main one
[04:45:39] <eb0t> in fact nedbat, just found a plugin for vim python-mode
[04:45:55] <johfst> i could be talking nonsense though tbh, very new to threaded programming
[04:46:00] <nedbat> eb0t: there are plugins for vim, though it can be difficult to get it all working well
[04:46:25] <eb0t> ill try python-mode and look around for anything else that may be useful
[04:47:18] <eb0t> that pycharm looks good but i have old hardware, which struggles even now
[04:49:26] *** Quits: puff (~user@s0106d4ca6d80a83c.vs.shawcable.net) (Remote host closed the connection)
[04:49:33] *** Joins: walterwhip (~walterwhi@user/walterwhip)
[04:49:41] *** Joins: puff (~user@S0106d4ca6d80a83c.vs.shawcable.net)
[04:50:08] <nedbat> johfst: nothing's jumping out at me about this, but this thread will only make one request, right?
[04:50:25] *** Quits: cthulchu (~Cthulchu@193.194.107.250) (Ping timeout: 252 seconds)
[04:51:10] *** Quits: amahl (~amahl@dsl-jklbng12-54fbca-64.dhcp.inet.fi) (Ping timeout: 265 seconds)
[04:51:25] <johfst> nedbat: yeah, i think so. the way mjpeg seems to work is that that request will just keep dumping out chunks of data ad infinitum once you request it
[04:52:19] <johfst> which i would think is fine, that's what iter_content is for, but idk
[04:52:30] *** Quits: odoood (~odoood@2601:c8:c003:a550::3) (Ping timeout: 260 seconds)
[04:53:09] *** Quits: Jordy (~jordy@user/jordy) (Read error: Connection reset by peer)
[04:53:40] *** Joins: portalrat (~portalrat@user/portalrat)
[04:54:39] <eb0t> im sticking to vim and tmux...why fix that which isnt broke
[04:54:46] *** Quits: walterwhip (~walterwhi@user/walterwhip) (Ping timeout: 252 seconds)
[04:55:16] *** Joins: medium_cool (~medium_co@2605:a601:a9ed:4300:dd75:75f0:e7c9:39af)
[04:56:04] *** Joins: pycurious (~Adium@user/pycurious)
[04:56:39] *** Joins: trace987 (~trace@ip5f5a6a70.dynamic.kabel-deutschland.de)
[04:56:58] *** Quits: y1n (~y1n@046125250084.public.t-mobile.at) (Ping timeout: 252 seconds)
[04:59:57] *** Joins: greyblue9 (sid500829@id-500829.ilkley.irccloud.com)
[05:01:06] *** Joins: ZedHedTed (~ZedHedTed@user/zedhedted)
[05:01:17] <johfst> dammit, i think the leak is actually wxpython... just telling it to write to a file seems fine
[05:01:29] *** Quits: medium_cool (~medium_co@2605:a601:a9ed:4300:dd75:75f0:e7c9:39af) (Quit: My Mac Mini has gone to sleep. ZZZzzz…)
[05:01:36] *** Joins: sp0fp12 (~sp0f.p12@114.79.18.122)
[05:01:49] <sp0fp12> s
[05:01:50] *** Quits: ackyshake (~ackyshake@user/ackyshake) (Ping timeout: 260 seconds)
[05:06:59] *** Joins: GenTooMan (~cyberman@c-73-214-106-63.hsd1.pa.comcast.net)
[05:07:25] *** Quits: trace987 (~trace@ip5f5a6a70.dynamic.kabel-deutschland.de) (Ping timeout: 252 seconds)
[05:08:47] *** Joins: jamer05 (~jamer05@user/jamer05)
[05:15:44] *** Quits: sp0fp12 (~sp0f.p12@114.79.18.122) (Quit: WeeChat 3.2.1)
[05:18:02] *** Quits: matsaman (~matsaman@user/matsaman) (Quit: leaving)
[05:18:08] *** Joins: nomic (~nomic@185.192.69.176)
[05:21:21] *** Quits: FFY00 (~FFY00@archlinux/trusteduser/ffy00) (Remote host closed the connection)
[05:22:05] *** Quits: mefistofeles (~mefistofe@user/mefistofeles) (Ping timeout: 265 seconds)
[05:22:10] *** Quits: cloudbender (~cloudbend@user/cloudbender) (Quit: Connection closed)
[05:22:11] *** Quits: johfst (~jeremy@pool-151-203-195-72.bstnma.fios.verizon.net) (Quit: WeeChat 3.2.1)
[05:22:21] *** Joins: FFY00 (~FFY00@archlinux/trusteduser/ffy00)
[05:22:26] *** Joins: bancroft (~bancroft@bras-base-mtrlpq02hsy-grc-09-76-68-189-147.dsl.bell.ca)
[05:23:04] *** Quits: flokuehn (~flokuehn@muedsl-82-207-236-228.citykom.de) (Ping timeout: 265 seconds)
[05:23:05] *** Quits: herjazz (~herjazz@p6758124-ipngn30801marunouchi.tokyo.ocn.ne.jp) (Quit: leaving)
[05:23:47] *** Joins: walterwhip (~walterwhi@user/walterwhip)
[05:23:47] *** Joins: sed (~sed@pool-100-7-38-116.rcmdva.fios.verizon.net)
[05:24:24] *** Quits: Naan (~naan@user/naan) (Read error: Connection reset by peer)
[05:24:45] *** Joins: flokuehn (~flokuehn@muedsl-82-207-236-215.citykom.de)
[05:28:52] *** Quits: walterwhip (~walterwhi@user/walterwhip) (Ping timeout: 252 seconds)
[05:30:00] *** Quits: pretty_dumm_guy (trottel@gateway/vpn/protonvpn/prettydummguy/x-88029655) (Quit: WeeChat 3.2.1)
[05:32:49] *** Quits: odrling (~odrling@korone.aidoru.agency) (Quit: see you space cowboy)
[05:35:32] *** Joins: odrling (~odrling@korone.aidoru.agency)
[05:38:14] *** Joins: llanhmod (~developer@user/domhnall/x-2887755)
[05:39:34] *** Quits: theprophet (~theprophe@85.114.228.184) (Quit: Client closed)
[05:44:34] *** Joins: mefistofeles (~mefistofe@user/mefistofeles)
[05:44:44] *** Joins: jmiehe (~Thunderbi@user/jmiehe)
[05:47:09] *** Joins: llanhmod_ (~developer@user/domhnall/x-2887755)
[05:47:19] *** Quits: llanhmod (~developer@user/domhnall/x-2887755) (Read error: Connection reset by peer)
[05:51:31] *** Joins: chenxuezhao (~chenxuezh@106.39.157.10)
[05:51:37] *** Joins: jazzy (~jaziz@2600:380:865d:911b:e5e1:b429:e129:6354)
[05:52:07] *** llanhmod_ is now known as domhnall
[05:52:15] *** domhnall is now known as llanhmod
[05:54:53] *** Quits: atrigent (~atrigent@c-73-69-68-26.hsd1.ma.comcast.net) (Quit: My MacBook has gone to sleep. ZZZzzz…)
[05:55:49] *** Joins: walterwhip (~walterwhi@user/walterwhip)
[05:55:51] *** Joins: minip (~minip@user/minip)
[05:58:38] *** Quits: chenxuezhao (~chenxuezh@106.39.157.10) (Quit: Leaving...)
[06:00:46] *** Quits: walterwhip (~walterwhi@user/walterwhip) (Ping timeout: 252 seconds)
[06:02:43] *** Joins: frost (~frost@59.71.242.61)
[06:03:13] *** Joins: chwba (chwba@chwba.ircforever.org)
[06:03:17] <chwba> erm
[06:03:23] <chwba> print(isinstance(True, (int, float)))
[06:03:33] <chwba> this is True
[06:03:35] <chwba> how? XD
[06:04:00] *** Joins: leduyquang753 (~leduyquan@user/leduyquang753)
[06:04:24] *** Joins: walterwhip (~walterwhi@user/walterwhip)
[06:04:38] *** Joins: audiocat (~audio@2603-8081-1800-6a6f-261d-bdeb-725c-5ef5.res6.spectrum.com)
[06:05:11] *** Joins: Wuniu (~Thunderbi@user/wuniu)
[06:05:31] <grym> chwba: bools are ints
[06:05:36] <chwba> brah
[06:05:42] <chwba> just looked for a bug
[06:05:43] <chwba> like
[06:05:46] <chwba> 3 hours
[06:05:53] <chwba> then found out
[06:05:54] <chwba> that
[06:05:57] <chwba> loooool
[06:06:13] <grym> they're a subclass.  __str__ is different, and they're singleton aliases for 0 and 1
[06:06:22] <chwba> yeah huge rip
[06:06:27] <grym> yep
[06:06:47] <grym> i learned that once when i sum(some_list_of_bools) and got the answer i wanted
[06:06:51] <grym> and was very, very confused
[06:06:53] <mefistofeles> that's why you should read the official docs :P https://docs.python.org/3/library/stdtypes.html
[06:07:14] *** Joins: loworderbit (~dave@S0106e81cba1736ea.ss.shawcable.net)
[06:07:19] *** Quits: loworderbit (~dave@S0106e81cba1736ea.ss.shawcable.net) (Client Quit)
[06:08:23] <mefistofeles> but yeah, it's probably a bit of a "gotcha"
[06:08:29] *** Joins: loworderbit (~dave@s0106e81cba1736ea.ss.shawcable.net)
[06:08:31] <chwba> i got so gotchad
[06:08:44] <chwba> i went through whole app
[06:08:47] <chwba> just to find out
[06:08:48] *** Joins: loworderbit14 (~loworderb@S0106e81cba1736ea.ss.shawcable.net)
[06:08:49] <chwba> that... xD
[06:09:03] *** Quits: loworderbit (~dave@s0106e81cba1736ea.ss.shawcable.net) (Client Quit)
[06:09:06] <chwba> that page just got bookmarked xD
[06:10:40] *** Quits: loworderbit14 (~loworderb@S0106e81cba1736ea.ss.shawcable.net) (Client Quit)
[06:10:40] *** Joins: brabrax_ (~brabrax@user/brabrax)
[06:12:05] *** Quits: brabrax (~brabrax@user/brabrax) (Ping timeout: 260 seconds)
[06:12:05] *** brabrax_ is now known as brabrax
[06:12:50] *** Quits: walterwhip (~walterwhi@user/walterwhip) (Ping timeout: 265 seconds)
[06:13:52] <chwba> https://switowski.com/blog/type-vs-isinstance
[06:13:56] <chwba> should have so read this earlier lol
[06:14:45] *** Joins: vlm (~vlm@user/vlm)
[06:19:22] <grym> oh!  yeah, that's the other gotcha
[06:19:34] *** Quits: jamer05 (~jamer05@user/jamer05) (Quit: WeeChat 2.8)
[06:19:46] <grym> isinstance won't lie by omission
[06:19:46] *** Quits: hqdruxn08 (~hqdruxn08@cpe-66-68-166-214.austin.res.rr.com) (Ping timeout: 260 seconds)
[06:20:15] <grym> type totally will
[06:20:36] <chwba> ^^
[06:21:00] <chwba> my main gotcha was, that i didnt know isinstance includes subclasses and type doesnt
[06:21:27] <chwba> and i also didnt know we should use type(bool) is some_var instead of type(bool) == some_var °_O
[06:22:59] <grym> use `is` with None, True, and False
[06:23:03] <grym> and, imo, nothing else
[06:23:16] *** Joins: hqdruxn08 (~hqdruxn08@cpe-66-68-166-214.austin.res.rr.com)
[06:23:27] <grym> it's a warning in 3.9?+
[06:23:41] *** Joins: Celeo (~Celeo@user/celeo)
[06:23:53] <chwba> hmm not a warning for type(result) is dict or alike
[06:23:59] *** Joins: gggp (~textual@221.219.70.207)
[06:24:33] <chwba> now i feel like always using type for default types because im scared isinstance trolls me again
[06:25:00] <nedbat> chwba: luckily, type and isinstance aren't needed that much in real programs
[06:25:18] *** Joins: cthulchu (~Cthulchu@193.194.107.250)
[06:25:56] *** Joins: walterwhip (~walterwhi@user/walterwhip)
[06:26:07] *** Quits: fikran (~fikran@user/fikran) (Ping timeout: 252 seconds)
[06:28:03] *** Joins: fikran (~fikran@user/fikran)
[06:28:39] *** Quits: Smedles (~quassel@2403-5800-5100-f00-aaa1-59ff-fe53-1a69.ip6.aussiebb.net) (Quit: http://quassel-irc.org - Chat comfortably. Anywhere.)
[06:28:42] *** byzandula is now known as byzafk
[06:28:48] *** Quits: gggp (~textual@221.219.70.207) (Ping timeout: 265 seconds)
[06:29:01] *** Joins: Smedles (~quassel@2403-5800-5100-f00-aaa1-59ff-fe53-1a69.ip6.aussiebb.net)
[06:31:02] *** Quits: zaz\ (~zaz@poneybl.eu) (Quit: bye)
[06:31:12] *** Quits: walterwhip (~walterwhi@user/walterwhip) (Ping timeout: 265 seconds)
[06:31:19] *** Joins: System123 (~System123@203-134-35-213.sta.estpak.ee)
[06:31:31] *** Joins: zaz\ (~zaz@poneybl.eu)
[06:31:50] <aphysically> okay, we did it \o/ https://github.com/GBeauregard/pyffstream and on pypi too
[06:32:00] <aphysically> now to get serious about documentation and unit tests
[06:32:53] *** Joins: dave (~dave@S0106e81cba1736ea.ss.shawcable.net)
[06:34:47] *** Quits: lemonsnicks (~lemonsnic@cpc159519-perr18-2-0-cust114.19-1.cable.virginm.net) (Quit: ZNC 1.8.2 - https://znc.in)
[06:35:58] *** Quits: Lando-SpacePimp (~Lando@user/lando-spacepimp) (Ping timeout: 252 seconds)
[06:36:35] *** Quits: System123 (~System123@203-134-35-213.sta.estpak.ee) (Ping timeout: 260 seconds)
[06:38:51] *** Quits: minip (~minip@user/minip) (Remote host closed the connection)
[06:39:29] *** Joins: dave_ (~dave@S0106e81cba1736ea.ss.shawcable.net)
[06:39:32] *** Quits: puff (~user@S0106d4ca6d80a83c.vs.shawcable.net) (Read error: Connection reset by peer)
[06:39:45] *** Joins: puff (~user@S0106d4ca6d80a83c.vs.shawcable.net)
[06:40:11] *** Quits: dave_ (~dave@S0106e81cba1736ea.ss.shawcable.net) (Client Quit)
[06:40:50] *** Quits: jmiehe (~Thunderbi@user/jmiehe) (Quit: jmiehe)
[06:40:51] *** Joins: loworderbit (~dave@S0106e81cba1736ea.ss.shawcable.net)
[06:41:21] *** Quits: cthulchu (~Cthulchu@193.194.107.250) (Ping timeout: 265 seconds)
[06:41:34] *** Joins: p-i- (~Ohmu@mx-ll-223.206.145-156.dynamic.3bb.co.th)
[06:41:38] *** Quits: p-i- (~Ohmu@mx-ll-223.206.145-156.dynamic.3bb.co.th) (Remote host closed the connection)
[06:41:39] *** Joins: gamah (~quassel@gamah.net)
[06:41:55] *** Quits: loworderbit (~dave@S0106e81cba1736ea.ss.shawcable.net) (Client Quit)
[06:42:00] <gamah> is it a bad pattern to import another file into my config file to instantiate a few objects from a class that'll get reused?
[06:42:05] *** Joins: loworderbit (~dave@S0106e81cba1736ea.ss.shawcable.net)
[06:42:13] *** Joins: p-i- (~Ohmu@223.206.145.156)
[06:45:22] *** Quits: Cheaterman (~cheaterma@user/cheaterman) (Ping timeout: 252 seconds)
[06:46:08] *** Joins: lemonsnicks (~lemonsnic@cpc159519-perr18-2-0-cust114.19-1.cable.virginm.net)
[06:47:05] *** Quits: p-i- (~Ohmu@223.206.145.156) (Ping timeout: 260 seconds)
[06:47:45] *** Quits: rannnn8888 (~rannnn888@45.87.212.71) (Quit: Client closed)
[06:48:34] *** Quits: loworderbit (~dave@S0106e81cba1736ea.ss.shawcable.net) (Quit: leaving)
[06:48:43] *** Joins: loworderbit (~dave@S0106e81cba1736ea.ss.shawcable.net)
[06:49:16] *** Quits: loworderbit (~dave@S0106e81cba1736ea.ss.shawcable.net) (Client Quit)
[06:49:21] *** Quits: dave (~dave@S0106e81cba1736ea.ss.shawcable.net) (Quit: leaving)
[06:49:25] *** Quits: llanhmod (~developer@user/domhnall/x-2887755) (Ping timeout: 260 seconds)
[06:49:41] *** Joins: loworderbit (~dave@S0106e81cba1736ea.ss.shawcable.net)
[06:50:26] *** Joins: NeilRG (~NeilRG@192.222.196.111)
[06:50:34] *** Quits: Wuniu (~Thunderbi@user/wuniu) (Quit: I'm tired, have a good time!)
[06:50:44] *** Joins: ackyshake (~ackyshake@user/ackyshake)
[06:50:47] *** Quits: bilb_ono_ (~alexmarsh@ip68-6-90-72.sb.sd.cox.net) (Quit: bilb_ono_)
[06:54:31] *** Joins: p-i- (~Ohmu@223.206.145.156)
[06:57:42] *** Joins: shlomif (~shlomif@87.68.240.100.adsl.012.net.il)
[07:00:07] *** Joins: walterwhip (~walterwhi@user/walterwhip)
[07:02:08] *** Quits: twobitsprite (~twobitspr@66.115.175.51) (Ping timeout: 265 seconds)
[07:03:06] *** Quits: bancroft (~bancroft@bras-base-mtrlpq02hsy-grc-09-76-68-189-147.dsl.bell.ca) (Ping timeout: 265 seconds)
[07:03:23] *** Joins: justsomeguy (~justsomeg@user/justsomeguy)
[07:03:39] *** Joins: trace987 (~trace@ip5f5a6a70.dynamic.kabel-deutschland.de)
[07:03:40] *** Joins: twobitsprite (~twobitspr@66.115.154.150)
[07:05:16] *** Quits: walterwhip (~walterwhi@user/walterwhip) (Ping timeout: 252 seconds)
[07:05:44] *** Quits: Celeo (~Celeo@user/celeo) (Quit: Leaving)
[07:07:22] *** Quits: ska (~ska@user/ska) (Ping timeout: 260 seconds)
[07:10:40] *** Quits: Macuser (~Macuser@216.30.159.201) (Quit: Textual IRC Client: www.textualapp.com)
[07:13:39] *** Quits: ghost43 (~ghost43@gateway/tor-sasl/ghost43) (Remote host closed the connection)
[07:14:20] *** Joins: ghost43 (~ghost43@gateway/tor-sasl/ghost43)
[07:14:56] *** Joins: cloudbender (~cloudbend@user/cloudbender)
[07:16:03] <aphysically> hmmmmm
[07:16:44] <aphysically> is there a good way to get the package version metadata in a release script? I guess I could install it in a new venv and pip freeze and read it off but it seems like a bit much just to read the version
[07:18:33] <jinsun> from you python code? you can use importlib.metadata.version https://docs.python.org/3/library/importlib.metadata.html#distribution-versions
[07:18:35] *** Quits: abhixec (~abhixec@c-67-169-139-16.hsd1.ca.comcast.net) (Ping timeout: 260 seconds)
[07:19:37] *** Quits: oprypin (~irc@pryp.in) (Ping timeout: 245 seconds)
[07:20:13] *** Joins: ska (~ska@user/ska)
[07:27:02] *** Joins: Wuniu (~Thunderbi@user/wuniu)
[07:27:05] *** Quits: roxfan (roxfan@11.121-64-87.adsl-dyn.isp.belgacom.be) (Remote host closed the connection)
[07:27:07] *** Quits: sed (~sed@pool-100-7-38-116.rcmdva.fios.verizon.net) (Ping timeout: 252 seconds)
[07:27:38] *** Quits: eb0t (~eb0t@90.209.54.144) (Quit: WeeChat 2.3)
[07:27:41] *** Joins: roxfan (roxfan@11.121-64-87.adsl-dyn.isp.belgacom.be)
[07:30:00] *** Quits: Luke (~ldm@hacksoc/member) (Quit: o/ 4w 6d 23h 59m 14s)
[07:30:10] *** Quits: FinnElija (~finn_elij@user/finn-elija/x-0085643) (Ping timeout: 265 seconds)
[07:31:59] *** Joins: FinnElija (~finn_elij@user/finn-elija/x-0085643)
[07:32:06] *** Quits: Elon_Satoshi (~elon@user/elon-satoshi/x-4242282) (Ping timeout: 260 seconds)
[07:32:30] *** Abrax- is now known as Abrax
[07:32:52] *** Joins: Luke (~ldm@hacksoc/member)
[07:33:54] *** Joins: Elon_Satoshi (~elon@user/elon-satoshi/x-4242282)
[07:34:21] *** Joins: walterwhip (~walterwhi@user/walterwhip)
[07:35:14] *** Joins: r3m (~launch@user/r3m)
[07:37:42] *** Quits: codeswhite (~codeswhit@user/codeswhite) (Ping timeout: 260 seconds)
[07:38:41] *** Joins: defjam (~eb0t@90.209.54.144)
[07:38:48] *** Quits: dez (uid92154@user/dez) (Quit: Connection closed for inactivity)
[07:39:07] *** defjam is now known as eblip
[07:39:22] *** Quits: walterwhip (~walterwhi@user/walterwhip) (Ping timeout: 265 seconds)
[07:39:50] *** Quits: vvdaiwrw (~rvgzuuqp@gateway/tor-sasl/rvgzuuqp) (Quit: vvdaiwrw)
[07:41:04] *** Joins: oprypin (~irc@pryp.in)
[07:42:44] *** Quits: cheater (~Username@user/cheater) (Ping timeout: 265 seconds)
[07:47:04] *** Quits: emerent (~quassel@p200300cd5701a1dfba27ebfffed28a59.dip0.t-ipconnect.de) (Ping timeout: 252 seconds)
[07:47:26] <aphysically> ah that'll work - it's not from within the project code, but a release script for making github tag and such
[07:47:49] *** Joins: emerent (~quassel@p200300cd5701a184ba27ebfffed28a59.dip0.t-ipconnect.de)
[07:48:32] <xberry> hello, does someone happen to have a simple way to check if variables from load_dotenv() have been set? I can only think of loading dotenv and then try/except for each of the variables, but I assume there should be a way to do this for all my variables in one or two lines?
[07:52:25] *** Quits: GenTooMan (~cyberman@c-73-214-106-63.hsd1.pa.comcast.net) (Ping timeout: 265 seconds)
[07:52:26] *** Joins: walterwhip (~walterwhi@user/walterwhip)
[07:54:30] *** Quits: trace987 (~trace@ip5f5a6a70.dynamic.kabel-deutschland.de) (Ping timeout: 260 seconds)
[07:55:45] *** Quits: Elon_Satoshi (~elon@user/elon-satoshi/x-4242282) (Quit: WeeChat 3.2)
[07:55:52] *** Quits: Seirdy (~Seirdy@sourcehut/user/seirdy) (Ping timeout: 252 seconds)
[07:55:53] <xberry> ohh thank you I solved it. it was as easy as if none(foo, bar).
[07:56:04] *** Joins: GenTooMan (~cyberman@2601:547:437f:e5c6:21f:5bff:fefe:a883)
[07:57:01] *** Quits: loworderbit (~dave@S0106e81cba1736ea.ss.shawcable.net) (Quit: leaving)
[07:57:25] *** Quits: walterwhip (~walterwhi@user/walterwhip) (Ping timeout: 252 seconds)
[07:58:54] *** Joins: cheater (~Username@user/cheater)
[07:59:55] *** Joins: loworderbit (~dave@S0106e81cba1736ea.ss.shawcable.net)
[08:01:04] *** Quits: loworderbit (~dave@S0106e81cba1736ea.ss.shawcable.net) (Client Quit)
[08:01:46] *** Quits: zebrag (~chris@user/zebrag) (Quit: Konversation terminated!)
[08:02:04] *** Joins: Seirdy (~Seirdy@sourcehut/user/seirdy)
[08:02:41] *** Quits: justsomeguy (~justsomeg@user/justsomeguy) (Quit: WeeChat 3.2)
[08:03:22] *** Quits: jess (~jess@libera/staff/jess) (Quit: i'm going to start going to bed)
[08:04:49] *** Joins: loworderbit (~dave@s0106e81cba1736ea.ss.shawcable.net)
[08:07:07] *** Joins: FH_thecat (~FH_thecat@75.11.25.212.ftth.as8758.net)
[08:10:45] *** Quits: loworderbit (~dave@s0106e81cba1736ea.ss.shawcable.net) (Quit: leaving)
[08:11:15] *** Joins: fdan (~fdan@192.146.154.3)
[08:11:18] *** Joins: odoood (~odoood@2601:c8:c003:a550:fbdc:f2fe:53fa:f37f)
[08:11:55] <fdan> i want to loop through a-z alphabets and assign a value from 0 to 26 in a dictionary
[08:11:57] <fdan> how can i do
[08:12:59] <fdan> nvm, got it d = {order[i]:i for i in range(len(order))}
[08:13:13] *** Joins: acresearch (~acresearc@user/acresearch)
[08:13:26] *** Joins: loworderbit (~dave@S0106e81cba1736ea.ss.shawcable.net)
[08:13:28] *** Quits: zmt01 (~zmt00@user/zmt00) (Quit: Gone.)
[08:13:38] <Repiphany> {i:chr(i + 97) for i in range(26)}
[08:14:11] *** Joins: loworder1it (~dave@S0106e81cba1736ea.ss.shawcable.net)
[08:14:12] *** Quits: loworder1it (~dave@S0106e81cba1736ea.ss.shawcable.net) (Client Quit)
[08:14:17] *** Quits: loworderbit (~dave@S0106e81cba1736ea.ss.shawcable.net) (Client Quit)
[08:15:08] *** Joins: zmt00 (~zmt00@user/zmt00)
[08:16:26] *** Quits: odoood (~odoood@2601:c8:c003:a550:fbdc:f2fe:53fa:f37f) (Ping timeout: 260 seconds)
[08:17:28] *** Joins: loworderbit (~dave@S0106e81cba1736ea.ss.shawcable.net)
[08:17:51] *** Joins: gggp (~textual@60.10.23.172)
[08:18:39] *** Quits: DrBrownBear (~DrBrownbe@2600:1700:9aa1:6bc0:d0db:ea4a:d86c:dc4e) (Quit: Leaving)
[08:19:05] *** Quits: heco (~redrum@user/redrum88) (Quit: Going offline, see ya! (www.adiirc.com))
[08:20:34] *** Joins: walterwhip (~walterwhi@user/walterwhip)
[08:22:07] *** Quits: gggp (~textual@60.10.23.172) (Ping timeout: 252 seconds)
[08:25:34] *** Quits: walterwhip (~walterwhi@user/walterwhip) (Ping timeout: 252 seconds)
[08:28:51] *** Joins: flyingchef (~flyingche@user/flyingchef)
[08:30:03] *** Quits: puff (~user@S0106d4ca6d80a83c.vs.shawcable.net) (Read error: Connection reset by peer)
[08:30:17] *** Joins: puff (~user@s0106d4ca6d80a83c.vs.shawcable.net)
[08:30:26] <flyingchef> I just realized that 'singapore' in ['republic of singapore', 'east timor'] will return True. how do i check if there is an exact match in a list of strings?
[08:31:21] <Repiphany> That doesn't return True
[08:32:09] <flyingchef> hmm ok thanks
[08:32:34] <flyingchef> ah, the single-element tuple
[08:32:43] *** Quits: fdan (~fdan@192.146.154.3) (Ping timeout: 256 seconds)
[08:33:11] *** Joins: freeworld (~vit@chello085216193138.chello.sk)
[08:33:46] <Repiphany> ?
[08:34:10] <Repiphany> `s in list_of_strings` does check for exact string
[08:35:25] *** Quits: fikran (~fikran@user/fikran) (Ping timeout: 265 seconds)
[08:35:37] *** Quits: cloudbender (~cloudbend@user/cloudbender) (Quit: Connection closed)
[08:35:48] *** Joins: matsaman (~matsaman@user/matsaman)
[08:36:03] *** Quits: greyrat (~greyrat@ip202.ip-51-178-215.eu) (Bye)
[08:37:30] *** Joins: greyrat (~greyrat@ip202.ip-51-178-215.eu)
[08:37:32] *** Joins: dodo (~dodo@user/dodo)
[08:37:32] *** Joins: decimuscorvinus (~jimmy@136.37.105.112)
[08:37:32] *** Joins: fikran (~fikran@user/fikran)
[08:37:32] *** Joins: bkhl (~bkhl@user/bkhl)
[08:37:43] *** Joins: Quack (~Quack@185.21.216.169)
[08:37:45] *** Joins: supakeen (~user@python/site-packages/supakeen)
[08:38:00] *** Joins: vlt (~dm@157.230.21.14)
[08:38:01] *** Joins: ammar2 (admin@i.diddled.with.the.opers.so.they.klined.me)
[08:38:11] *** Joins: d33tah (~d33tah@2a03:b0c0:3:d0::14d2:c001)
[08:38:13] *** Joins: rookie101 (~rookie@207.154.204.166)
[08:38:14] *** Joins: leosilva (~leosilva@canonical/leosilva)
[08:38:42] *** Joins: anddam (~anddam@user/anddam)
[08:38:58] *** Joins: novasharper (~novasharp@2001:470:69fc:105::b4a)
[08:39:11] *** Server sets mode: +Ccnrtf #python-unregistered
[08:39:23] *** Joins: Liexei (Liexei@user/liexei)
[08:39:45] *** Joins: binarymutt[m] (~binarymut@user/binarymutt)
[08:39:47] *** Joins: ronny (~ronny@2001:470:69fc:105::b57)
[08:40:19] *** Joins: mirai (~mirai@2001:bc8:630:161::1)
[08:40:43] *** Joins: meatballs (~meatballs@2001:470:69fc:105::633)
[08:40:46] *** Joins: lastmikoi (~lastmikoi@vm-01.lastmikoi.net)
[08:41:05] *** Quits: acresearch (~acresearc@user/acresearch) (Quit: WeeChat 2.8)
[08:41:19] *** Joins: push-f (~martin@push-f.com)
[08:41:20] *** Joins: thib (~thib@wikimedia/Thibaut120094)
[08:41:24] *** Joins: Ekho (~Ekho@user/ekho)
[08:44:04] *** Joins: walterwhip (~walterwhi@user/walterwhip)
[08:49:16] *** Quits: shailangsa (~shailangs@host86-186-132-44.range86-186.btcentralplus.com) (*.net *.split)
[08:49:16] *** Quits: kenoba (~kenoba@user/kenoba) (*.net *.split)
[08:49:16] *** Quits: dnns01 (~quassel@2a02:c207:3003:651::1) (*.net *.split)
[08:49:16] *** Quits: fluter (~fluter@user/fluter) (*.net *.split)
[08:49:16] *** Quits: aeva[m] (~aeva@2001:470:69fc:105::e2d9) (*.net *.split)
[08:49:16] *** Quits: BrenBarn (~brenbarn@2001:470:69fc:105::2da2) (*.net *.split)
[08:49:16] *** Quits: jwon (~jwon@user/jwon) (*.net *.split)
[08:49:17] *** Quits: graingert[m] (~graingert@2001:470:69fc:105::653) (*.net *.split)
[08:49:17] *** Quits: mgocobachi (~m@ancrae.com) (*.net *.split)
[08:49:17] *** Quits: peterandre (peterandre@2605:6400:c847:1524::4251) (*.net *.split)
[08:49:17] *** Quits: Sadale (~Sadale@user/sadale) (*.net *.split)
[08:49:17] *** Quits: taeaad (~taeaad@user/taeaad) (*.net *.split)
[08:49:17] *** Quits: mrkajetanp (~mrkajetan@2a01:4b00:ea36:6c00:7994:941c:3f5d:2b88) (*.net *.split)
[08:49:17] *** Quits: Papa (~papa@user/papa) (*.net *.split)
[08:49:17] *** Quits: masterkorp (~masterkor@user/masterkorp) (*.net *.split)
[08:49:17] *** Quits: ouemt (~quassel@user/ouemt) (*.net *.split)
[08:49:17] *** Quits: elmcrest (~elmcrest@static.48.211.217.95.clients.your-server.de) (*.net *.split)
[08:49:17] *** Quits: daniel2 (daniel@user/daniel2) (*.net *.split)
[08:49:17] *** Quits: CygniX (~CygniX@2605:6400:30:fdc6:68:f4:4e:78) (*.net *.split)
[08:49:17] *** Quits: enrh (~enrh@user/enrh) (*.net *.split)
[08:49:17] *** Quits: ThiefMaster (thief@indico/developer/thiefmaster) (*.net *.split)
[08:49:17] *** Quits: wintrmute (~wintrmute@bit.pappanaka.com) (*.net *.split)
[08:49:17] *** Quits: bambams (~bambams@user/bambams) (*.net *.split)
[08:49:17] *** Quits: HenryTheLongshot (~Henry@46.101.4.181) (*.net *.split)
[08:49:17] *** Quits: erhandsome (~erhandsom@user/erhandsome) (*.net *.split)
[08:49:17] *** Quits: kgz (~kragniz@nyaa.kragniz.eu) (*.net *.split)
[08:49:17] *** Quits: jfb4 (~jfb4@178.62.2.68) (*.net *.split)
[08:49:17] *** Quits: Karyon (~Karyon@user/karyon) (*.net *.split)
[08:49:17] *** Quits: jootoi (~jootoi@130.61.158.197) (*.net *.split)
[08:49:17] *** Quits: umimaso (~umimaso@188.166.147.131) (*.net *.split)
[08:49:17] *** Quits: gcbirzan (~gcbirzan@user/gcbirzan) (*.net *.split)
[08:49:17] *** Quits: lyr (~lyr@user/lyr) (*.net *.split)
[08:49:17] *** Quits: WanderingGlitch (~Wandering@aha/hacker/wanderingglitch) (*.net *.split)
[08:49:17] *** Quits: jiffy (elijah@has.a.fluffy.sh33p.org) (*.net *.split)
[08:49:17] *** Quits: tharkun (tharkun@kvm6.telegraphics.com.au) (*.net *.split)
[08:49:17] *** Quits: habnabit_ (habnabit@python/site-packages/habnabit) (*.net *.split)
[08:49:17] *** Quits: Cienisty (Cienisty@user/cienisty) (*.net *.split)
[08:49:17] *** Quits: hjmcnew (sid86092@tinside.irccloud.com) (*.net *.split)
[08:49:17] *** Quits: chandankumar (~chandanku@51.159.58.174) (*.net *.split)
[08:49:17] *** Quits: pie_ (~pie_bnc@user/pie/x-2818909) (*.net *.split)
[08:49:17] *** Quits: leonardo (~leonardo@user/leonardo) (*.net *.split)
[08:49:17] *** Quits: abyss (~robbins@user/robbins) (*.net *.split)
[08:49:17] *** Quits: nullheroes (~nullheroe@168.235.66.22) (*.net *.split)
[08:49:17] *** Quits: ops (~ops@user/echelon) (*.net *.split)
[08:49:17] *** Quits: micronn (~micronn@user/micronn) (*.net *.split)
[08:49:17] *** Quits: programmerq (~programme@user/programmerq) (*.net *.split)
[08:49:17] *** Quits: anthraxx (~anthraxx@archlinux/developer/anthraxx) (*.net *.split)
[08:49:17] *** Quits: poxifide (deathspawn@user/poxifide) (*.net *.split)
[08:49:17] *** Quits: towel (~towel@user/towel) (*.net *.split)
[08:49:17] *** Quits: ixjlyons (~kenny@li1177-148.members.linode.com) (*.net *.split)
[08:49:17] *** Quits: arkanoid (~arkanoid@2-238-151-49.ip244.fastwebnet.it) (*.net *.split)
[08:49:17] *** Quits: kpcyrd (~kpcyrd@archlinux/trusteduser/kpcyrd) (*.net *.split)
[08:49:17] *** Quits: mdw (~root@159.65.86.163) (*.net *.split)
[08:49:17] *** Quits: Daemoen (~Daemoen@2604:a880:2:d0::2164:d001) (*.net *.split)
[08:49:17] *** Quits: reda (~reda@user/reda) (*.net *.split)
[08:49:17] *** Quits: vinnix (~vinnix@user/vinnix) (*.net *.split)
[08:49:17] *** Quits: sale (~sale@ypocit.initech.link) (*.net *.split)
[08:49:17] *** Quits: phantomcircuit (~phantomci@192.241.205.97) (*.net *.split)
[08:49:17] *** Quits: Bluefoxicy (~Bluefoxic@c-73-132-244-30.hsd1.md.comcast.net) (*.net *.split)
[08:49:17] *** Quits: orkim (~orkim@user/orkim) (*.net *.split)
[08:49:17] *** Quits: awygle (~quassel@2604:a880:2:d0::5380:3001) (*.net *.split)
[08:49:25] *** Quits: Xaldafax (~xaldafax@cpe-198-72-160-101.socal.res.rr.com) (Quit: Bye...)
[08:49:26] *** Joins: dnns01_ (~quassel@2a02:c207:3003:651::1)
[08:49:26] *** Joins: reda_ (~reda@user/reda)
[08:49:29] *** Joins: elmcrest (~elmcrest@static.48.211.217.95.clients.your-server.de)
[08:49:30] *** Joins: anthraxx_ (~anthraxx@archlinux/developer/anthraxx)
[08:49:30] *** Joins: hjmcnew_ (sid86092@id-86092.tinside.irccloud.com)
[08:49:33] *** Joins: awygle (~quassel@2604:a880:2:d0::5380:3001)
[08:49:34] *** Quits: walterwhip (~walterwhi@user/walterwhip) (Ping timeout: 268 seconds)
[08:49:36] *** Joins: ThiefMasterrr (thief@indico/developer/thiefmaster)
[08:49:36] *** Joins: Cienisty (Cienisty@user/cienisty)
[08:49:37] *** Quits: Wuniu (~Thunderbi@user/wuniu) (Ping timeout: 252 seconds)
[08:49:37] *** Joins: lyr (~lyr@user/lyr)
[08:49:38] *** Joins: daniel2 (daniel@user/daniel2)
[08:49:39] *** Joins: bambams (~bambams@user/bambams)
[08:49:40] *** Joins: vinnix (~vinnix@user/vinnix)
[08:49:41] *** Joins: wintrmute (~wintrmute@bit.pappanaka.com)
[08:49:47] *** Joins: micronn (~micronn@user/micronn)
[08:49:48] *** Joins: Karyon_ (~Karyon@user/karyon)
[08:49:49] *** Joins: habnabit_ (habnabit@python/site-packages/habnabit)
[08:49:51] *** Joins: orkim` (~orkim@user/orkim)
[08:49:52] *** Joins: gcbirzan (~gcbirzan@user/gcbirzan)
[08:49:52] *** Joins: masterkorp (~masterkor@user/masterkorp)
[08:49:53] *** Joins: phantomcircuit_ (~phantomci@192.241.205.97)
[08:49:55] *** Joins: ouemt (~quassel@user/ouemt)
[08:49:57] *** Joins: pie_ (~pie_bnc@user/pie/x-2818909)
[08:50:03] *** Joins: HenryTheLongshot (~Henry@46.101.4.181)
[08:50:04] *** Joins: Sadale (~Sadale@user/sadale)
[08:50:04] *** Joins: CygniX (~CygniX@2605:6400:30:fdc6:68:f4:4e:78)
[08:50:10] *** Joins: kenoba (~kenoba@user/kenoba)
[08:50:11] *** Joins: jootoi (~jootoi@130.61.158.197)
[08:50:12] *** Joins: mrkajetanp (~mrkajetan@2a01:4b00:ea36:6c00:7994:941c:3f5d:2b88)
[08:50:14] *** Joins: taeaad (~taeaad@user/taeaad)
[08:50:17] *** ThiefMasterrr is now known as ThiefMaster
[08:50:24] *** Joins: towel (~towel@user/towel)
[08:50:25] *** Joins: sale (~sale@ypocit.initech.link)
[08:50:29] *** Joins: programmerq (~programme@user/programmerq)
[08:50:30] *** Joins: enrh (~enrh@user/enrh)
[08:50:30] *** Quits: programmerq (~programme@user/programmerq) (Client Quit)
[08:50:31] *** orkim` is now known as orkim
[08:50:31] *** Joins: mdw (~root@159.65.86.163)
[08:50:33] *** Joins: mgocobachi (~m@ancrae.com)
[08:50:33] *** Joins: Daemoen (~Daemoen@daemoen.ct-unlimited.com)
[08:50:34] *** Joins: umimaso (~umimaso@188.166.147.131)
[08:50:34] *** Joins: Bluefoxicy (~Bluefoxic@c-73-132-244-30.hsd1.md.comcast.net)
[08:50:49] *** Joins: kpcyrd (~kpcyrd@archlinux/trusteduser/kpcyrd)
[08:50:50] *** Joins: Papa (~papa@user/papa)
[08:50:56] *** Joins: kgz (~kragniz@nyaa.kragniz.eu)
[08:51:02] *** Joins: jfb4 (~jfb4@178.62.2.68)
[08:51:08] *** Joins: kdc (~kdc@196.211.197.139)
[08:51:25] *** Joins: programmerq (~programme@user/programmerq)
[08:51:48] *** Joins: Sky_Net (~Sky_Net@176.14.213.149)
[08:53:28] *** Joins: poxifide (deathspawn@user/poxifide)
[08:54:01] *** Joins: arkanoid (~arkanoid@2-238-151-49.ip244.fastwebnet.it)
[08:54:12] *** Quits: mogad0n (~mogad0n@user/mogad0n) (Ping timeout: 245 seconds)
[08:55:14] *** Joins: graingert[m] (~graingert@2001:470:69fc:105::653)
[08:55:40] *** Joins: fdan (~fdan@192.146.154.3)
[08:55:57] *** Joins: mogad0n (~mogad0n@user/mogad0n)
[08:56:09] *** Joins: bilb_ono (~alexmarsh@ip68-6-90-72.sb.sd.cox.net)
[08:56:27] *** Joins: jwon (~jwon@user/jwon)
[09:00:04] *** Joins: BrenBarn (~brenbarn@2001:470:69fc:105::2da2)
[09:01:09] *** Joins: aeva[m] (~aeva@2001:470:69fc:105::e2d9)
[09:09:53] *** Joins: odoood (~odoood@2601:c8:c003:a550::3)
[09:11:25] *** Joins: walterwhip (~walterwhi@user/walterwhip)
[09:11:37] *** Joins: System123 (~System123@203-134-35-213.sta.estpak.ee)
[09:11:39] *** Quits: penguino (~mrpenguin@user/mrpenguin) (Ping timeout: 276 seconds)
[09:15:31] *** Quits: audiocat (~audio@2603-8081-1800-6a6f-261d-bdeb-725c-5ef5.res6.spectrum.com) (Ping timeout: 252 seconds)
[09:16:01] *** Quits: System123 (~System123@203-134-35-213.sta.estpak.ee) (Ping timeout: 252 seconds)
[09:16:42] *** Quits: walterwhip (~walterwhi@user/walterwhip) (Ping timeout: 268 seconds)
[09:17:23] *** Joins: grawity (grawity@star.nullroute.eu.org)
[09:18:02] *** Quits: hogarius (hogarius@id-222644.highgate.irccloud.com) ()
[09:18:17] *** Joins: hogarius (hogarius@id-222644.highgate.irccloud.com)
[09:20:24] *** Quits: odoood (~odoood@2601:c8:c003:a550::3) (Ping timeout: 268 seconds)
[09:20:50] *** Quits: Trieste (T@user/pilgrim) (Ping timeout: 260 seconds)
[09:23:22] *** Quits: Sky_Net (~Sky_Net@176.14.213.149) (Read error: Connection reset by peer)
[09:25:13] *** Joins: Linux77 (~Linux7_7@186.233.182.237)
[09:30:17] *** Quits: roxfan (roxfan@11.121-64-87.adsl-dyn.isp.belgacom.be) (Remote host closed the connection)
[09:30:53] *** Joins: roxfan (roxfan@11.121-64-87.adsl-dyn.isp.belgacom.be)
[09:31:11] *** Quits: matsaman (~matsaman@user/matsaman) (Quit: leaving)
[09:31:12] *** Joins: carl- (~carl-@c-138ee555.02-180-73746f39.bbcust.telenor.se)
[09:31:34] *** Joins: dvx (~dvx@185.63.97.64)
[09:33:19] *** Joins: stranac (~stranac@195.29.239.126)
[09:33:35] <bilb_ono> would it be bad practice to save a function name in a json string? I have a program that syncs data from various api urls. It accepts a json file as an argument listing the urls that should be synced for that run. Each one uses a function in the python script. So I want each json file to have a string referencing the function its gonna use. Is this bad design?
[09:34:50] *** Quits: r3m (~launch@user/r3m) (Quit: WeeChat 3.3-dev)
[09:34:59] <phy1729> I'd have a dictionary of string to callables so it's just a few whitelisted functions that can be called
[09:37:35] <bilb_ono> ok maybe ill do that
[09:38:28] *** Quits: pycurious (~Adium@user/pycurious) (Quit: Leaving.)
[09:42:02] *** Quits: Gustavo6046 (~Gustavo60@user/gustavo6046) (Ping timeout: 252 seconds)
[09:43:12] *** Joins: walterwhip (~walterwhi@user/walterwhip)
[09:46:58] *** Quits: ttree (~ttree0@c-73-239-62-159.hsd1.wa.comcast.net) (Ping timeout: 252 seconds)
[09:47:40] *** Quits: ouzel8_ (~ouzel8_@shams.boastblast.com) (Remote host closed the connection)
[09:48:22] *** Quits: walterwhip (~walterwhi@user/walterwhip) (Ping timeout: 268 seconds)
[09:48:48] *** Joins: ouzel8_ (~ouzel8_@shams.boastblast.com)
[09:50:15] *** Quits: pyre (~pyre@crimeboss.nillas-power.com) (Quit: ZNC 1.7.2+deb3 - https://znc.in)
[09:50:59] *** Joins: chandankumar (~chandanku@51.159.58.174)
[09:51:03] *** Joins: walterwhip (~walterwhi@user/walterwhip)
[09:53:58] *** Quits: mefistofeles (~mefistofe@user/mefistofeles) (Ping timeout: 260 seconds)
[09:57:44] *** Quits: bitdex (~bitdex@gateway/tor-sasl/bitdex) (Remote host closed the connection)
[09:57:59] *** Joins: control (~v1@user/control)
[09:58:31] *** Joins: bitdex (~bitdex@gateway/tor-sasl/bitdex)
[09:58:57] *** Quits: Cleverness (~clevernes@pool-108-54-152-186.nycmny.fios.verizon.net) (Remote host closed the connection)
[09:59:30] *** Quits: slowButPresent (~slowButPr@user/slowbutpresent) (Quit: leaving)
[10:02:11] *** Joins: Kharon (uid511277@user/cypris)
[10:04:56] *** Joins: pyre (~pyre@crimeboss.nillas-power.com)
[10:05:24] *** Quits: nomic (~nomic@185.192.69.176) (Quit: Leaving)
[10:06:15] *** Quits: walterwhip (~walterwhi@user/walterwhip) (Ping timeout: 268 seconds)
[10:09:05] *** Joins: Gurkenglas (~Gurkengla@dslb-002-207-014-195.002.207.pools.vodafone-ip.de)
[10:11:07] *** Quits: pyre (~pyre@crimeboss.nillas-power.com) (Remote host closed the connection)
[10:20:22] *** Joins: Wuniu (~Thunderbi@user/wuniu)
[10:20:35] *** Quits: puff (~user@s0106d4ca6d80a83c.vs.shawcable.net) (Read error: Connection reset by peer)
[10:20:48] *** Joins: puff (~user@S0106d4ca6d80a83c.vs.shawcable.net)
[10:25:52] *** Quits: LiftLeft (~LiftLeft@172.98.92.55) (Ping timeout: 252 seconds)
[10:26:51] *** Joins: gggp (~textual@111.63.44.11)
[10:27:06] *** Joins: y1n (~y1n@84-115-65-48.wifi.dynamic.surfer.at)
[10:28:59] *** Joins: ayustae (Thunderbir@gateway/vpn/protonvpn/ayustae)
[10:31:29] *** Joins: drew` (~drew@user/drew)
[10:31:56] *** Quits: gggp (~textual@111.63.44.11) (Ping timeout: 268 seconds)
[10:32:12] *** Quits: bilb_ono (~alexmarsh@ip68-6-90-72.sb.sd.cox.net) (Quit: bilb_ono)
[10:33:37] *** Joins: walterwhip (~walterwhi@user/walterwhip)
[10:34:45] *** Joins: bn_work (uid268505@id-268505.highgate.irccloud.com)
[10:35:41] *** Joins: Pickchea (~private@user/pickchea)
[10:35:47] *** Joins: ole_ (~ole_@84.46.68.3)
[10:38:43] *** Quits: walterwhip (~walterwhi@user/walterwhip) (Ping timeout: 268 seconds)
[10:40:07] *** Joins: brelod (~me@90.244.150.142)
[10:40:54] *** Quits: cjb (~cjbayliss@user/cjb) ()
[10:41:43] *** Joins: minip (~minip@user/minip)
[10:43:40] *** Joins: node1 (~node1@user/node1)
[10:43:42] *** Joins: thiras (~thiras@user/thiras)
[10:44:16] *** Quits: y1n (~y1n@84-115-65-48.wifi.dynamic.surfer.at) (Ping timeout: 268 seconds)
[10:44:26] *** Quits: jpds (~jpds@gateway/tor-sasl/jpds) (Remote host closed the connection)
[10:44:55] *** Quits: FH_thecat (~FH_thecat@75.11.25.212.ftth.as8758.net) (Quit: Leaving)
[10:44:58] *** Quits: fikran (~fikran@user/fikran) (Ping timeout: 265 seconds)
[10:45:01] *** Joins: jpds (~jpds@gateway/tor-sasl/jpds)
[10:45:55] *** Joins: jpodivin (~jpodivin@118.108.broadband14.iol.cz)
[10:46:21] *** Quits: seednode (~seednode@user/seednode) (Quit: Nihil supernum.)
[10:46:54] *** Joins: fikran (~fikran@user/fikran)
[10:46:56] *** Joins: seednode (~seednode@user/seednode)
[10:47:21] *** Quits: NeilRG (~NeilRG@192.222.196.111) (Remote host closed the connection)
[10:47:55] *** Joins: NeilRG (~NeilRG@192.222.196.111)
[10:48:42] *** Joins: upsala (~zcb@194.36.25.10)
[10:48:54] *** Joins: fluter (~fluter@user/fluter)
[10:49:55] *** Quits: upsala (~zcb@194.36.25.10) (Client Quit)
[10:50:27] *** Quits: n1ceaf (~Mark_Pine@gateway/tor-sasl/markpinecone/x-88286818) (Ping timeout: 276 seconds)
[10:50:32] *** Joins: trace987 (~trace@ip5f5a6a70.dynamic.kabel-deutschland.de)
[10:51:01] *** Joins: winterflaw (~winterfla@gateway/tor-sasl/winterflaw)
[10:52:08] *** Joins: ExeciN (~ExeciN@user/nicexe)
[10:52:10] *** Quits: NeilRG (~NeilRG@192.222.196.111) (Ping timeout: 240 seconds)
[10:53:14] *** Joins: r3m (~launch@user/r3m)
[10:53:51] *** Quits: r3m (~launch@user/r3m) (Client Quit)
[10:54:10] *** Joins: kosh_ (~kosh@user/kosh)
[10:54:21] *** Quits: gr33n7007h (~gr33n7007@user/gr33n7007h) (Quit: WeeChat 3.2)
[10:54:33] *** Joins: r3m (~launch@user/r3m)
[10:56:07] *** Joins: y1n (~y1n@84-115-64-83.wifi.dynamic.surfer.at)
[10:56:38] *** Joins: LiftLeft (~LiftLeft@172.98.80.65)
[10:57:51] *** Joins: Wubull (~Thunderbi@user/wuniu)
[10:57:56] *** Joins: NeilRG (~NeilRG@192.222.196.111)
[10:59:18] *** Quits: xrogaan (~xrogaan@user/xrogaan) (Quit: Leaving)
[10:59:37] *** Joins: manti7 (~manti7@176.10.104.94)
[10:59:46] *** Quits: Wubull (~Thunderbi@user/wuniu) (Client Quit)
[10:59:54] *** Quits: trace987 (~trace@ip5f5a6a70.dynamic.kabel-deutschland.de) (Ping timeout: 268 seconds)
[11:01:45] *** Quits: Wuniu (~Thunderbi@user/wuniu) (Ping timeout: 268 seconds)
[11:03:44] *** Joins: gusto (~Augustus@109.255.100.54)
[11:04:13] *** Quits: y1n (~y1n@84-115-64-83.wifi.dynamic.surfer.at) (Ping timeout: 268 seconds)
[11:05:13] *** Quits: kickingvegas (~cchoi@c-24-5-40-20.hsd1.ca.comcast.net) (Quit: leaving)
[11:05:28] *** Joins: X4 (~X4@ip-95-223-73-17.hsi16.unitymediagroup.de)
[11:07:08] *** Joins: palasso (~palasso@user/palasso)
[11:07:27] *** Joins: walterwhip (~walterwhi@user/walterwhip)
[11:07:46] *** Joins: mexen (uid495612@user/mexen)
[11:08:43] <aphysically> well now that I'm on github and pypi I guess I need to get serious about unit tests and then maybe learning CI
[11:08:56] *** Joins: gggp (~textual@60.10.194.48)
[11:09:24] *** Joins: Samian (~Sami@user/samian)
[11:09:55] *** Quits: gggp (~textual@60.10.194.48) (Client Quit)
[11:10:32] <cluelessperson> how are you supposed to handle combining two complex classes into a common object that presents them both?
[11:10:50] *** AndrewIRC is now known as AndrewYu
[11:11:15] *** Quits: spithash (~spithash@user/spithash) (Ping timeout: 276 seconds)
[11:12:25] <mattf> Can i not use ssl with non blocking sockets on the easy way?
[11:12:34] <shlomif> cluelessperson: hi, do you have tests?
[11:12:42] *** Joins: spithash (~spithash@user/spithash)
[11:12:51] *** Quits: walterwhip (~walterwhi@user/walterwhip) (Ping timeout: 268 seconds)
[11:13:29] *** Joins: walterwhip (~walterwhi@user/walterwhip)
[11:14:03] *** Quits: txtsd (~txtsd@user/txtsd) (Quit: WeeChat 3.2)
[11:14:09] <mattf> because i get this: ssl.SSLWantReadError: The operation did not complete (read) (_ssl.c:2635)
[11:14:21] <shlomif> aphysically: sounds good
[11:14:47] <mattf> make i could make it timeout at least?
[11:15:35] <jinsun> cluelessperson: easy would be to have instances of both classes as attribute maybe
[11:15:53] *** Joins: pycode (~pycode@2001:b07:5d28:551:94cd:90fd:2fee:a781)
[11:16:11] <aphysically> there's nothing much there yet, but I figured the longer I delay packaging my project the more I'm putting off getting more practice https://github.com/GBeauregard/pyffstream
[11:16:31] *** Quits: fdan (~fdan@192.146.154.3) (Quit: Client closed)
[11:17:10] <aphysically> I need to split it into more modules too...nice simple small project though (~3-4k lines of code)
[11:17:19] *** Joins: fdan (~fdan@192.146.154.3)
[11:17:23] <aphysically> juuuust complicated to make writing unit tests interesting, but not complicated enough to be very difficult
[11:19:01] *** Quits: walterwhip (~walterwhi@user/walterwhip) (Ping timeout: 268 seconds)
[11:19:31] *** Joins: txtsd (~txtsd@user/txtsd)
[11:19:35] *** Quits: Samian (~Sami@user/samian) (Quit: Textual IRC Client: www.textualapp.com)
[11:19:40] <mattf> oh nvm, settimeout seems to work fine
[11:25:23] <comet23> do we have jobs for python?
[11:25:34] <comet23> like working for the project itself i mean
[11:26:38] *** Joins: gggp (~textual@60.10.194.48)
[11:28:10] *** Quits: CatCow (~wtf_over@c-73-96-109-206.hsd1.or.comcast.net) (Quit: My MacBook Air has gone to sleep. ZZZzzz…)
[11:28:36] *** Quits: semeion (~semeion@user/semeion) (Quit: WeeChat 3.2)
[11:28:44] *** Quits: gitly (~gitly@85.255.232.119) (Ping timeout: 252 seconds)
[11:29:33] *** Quits: gggp (~textual@60.10.194.48) (Client Quit)
[11:29:41] *** Joins: ferz (~ferz@93-39-143-181.ip76.fastwebnet.it)
[11:29:53] <The-Compiler> comet23: jobs as in "things to do" or as in "someone working for pay"?
[11:30:09] *** Joins: gggp (~textual@111.63.44.11)
[11:30:22] <The-Compiler> comet23: for the former, https://devguide.python.org/#contributing
[11:30:40] <The-Compiler> comet23: for the latter, https://lukasz.langa.pl/a072a74b-19d7-41ff-a294-e6b1319fdb6e/
[11:30:45] *** Joins: gitly (~gitly@185.69.145.125)
[11:31:57] *** Joins: zln (~zln@c80-217-230-193.bredband.tele2.se)
[11:32:48] *** Joins: CatCow (~wtf_over@c-73-96-109-206.hsd1.or.comcast.net)
[11:34:00] *** Joins: Mattiaslndstrm (~Mattiasln@c188-148-207-108.bredband.tele2.se)
[11:35:02] *** Quits: gggp (~textual@111.63.44.11) (Client Quit)
[11:35:38] *** Joins: gggp (~textual@221.219.70.207)
[11:35:40] *** Quits: gitly (~gitly@185.69.145.125) (Ping timeout: 268 seconds)
[11:36:45] <Widdershins> pretty sure dropbox still has a team working on pylang
[11:37:04] *** Joins: gitly (~gitly@185.69.144.107)
[11:39:41] *** Quits: KombuchaKip (~kip@192.252.230.5) (Quit: Leaving.)
[11:42:13] *** Joins: raxor2k (~raxor2k@78.158.248.203)
[11:43:49] *** Joins: nepeat (~nepeat@79.110.170.62)
[11:44:51] *** Joins: gitesh (uid423739@id-423739.ilkley.irccloud.com)
[11:46:23] *** Joins: walterwhip (~walterwhi@user/walterwhip)
[11:46:41] *** Joins: brumla (~brumla@cst-prg-3-121.cust.vodafone.cz)
[11:49:24] *** Joins: roppert (~roppert@inb4.se)
[11:49:34] *** Quits: node1 (~node1@user/node1) (Quit: Leaving)
[11:56:04] *** Quits: walterwhip (~walterwhi@user/walterwhip) (Ping timeout: 252 seconds)
[11:58:29] *** Joins: audiocat (~audio@2603-8081-1800-6a6f-a343-2789-b46e-be67.res6.spectrum.com)
[12:01:40] *** Joins: schumaml (~schumaml@dslb-178-002-179-143.178.002.pools.vodafone-ip.de)
[12:02:46] *** Joins: goldfish (~goldfish@user/goldfish)
[12:05:11] *** Quits: fdan (~fdan@192.146.154.3) (Quit: Client closed)
[12:06:21] *** Joins: rsx (~dummy@ppp-188-174-146-217.dynamic.mnet-online.de)
[12:06:52] *** Quits: milkt (~debian@gateway/tor-sasl/milkt) (Remote host closed the connection)
[12:06:52] *** Quits: jpodivin (~jpodivin@118.108.broadband14.iol.cz) (Read error: Connection reset by peer)
[12:07:02] *** Joins: milkt (~debian@gateway/tor-sasl/milkt)
[12:07:06] *** Joins: jpodivin (~jpodivin@118.108.broadband14.iol.cz)
[12:08:35] *** Quits: goldfish (~goldfish@user/goldfish) (Ping timeout: 265 seconds)
[12:11:10] *** Quits: puff (~user@S0106d4ca6d80a83c.vs.shawcable.net) (Read error: Connection reset by peer)
[12:11:23] *** Joins: puff (~user@S0106d4ca6d80a83c.vs.shawcable.net)
[12:15:54] *** Joins: System123 (~System123@203-134-35-213.sta.estpak.ee)
[12:16:32] *** Joins: walterwhip (~walterwhi@user/walterwhip)
[12:16:58] *** Joins: Wuniu (~Thunderbi@user/wuniu)
[12:17:57] *** Parts: control (~v1@user/control) ()
[12:18:14] *** Quits: milkt (~debian@gateway/tor-sasl/milkt) (Remote host closed the connection)
[12:18:17] *** Joins: milkt_ (~debian@gateway/tor-sasl/milkt)
[12:19:10] *** Quits: milkt_ (~debian@gateway/tor-sasl/milkt) (Client Quit)
[12:19:28] *** Joins: milkt (~debian@gateway/tor-sasl/milkt)
[12:21:08] *** Joins: LucaTM (~LucaTM@user/lucatm)
[12:21:36] *** Quits: hifi (hifi@m.vi.fi) (Remote host closed the connection)
[12:21:49] *** Joins: hifi (hifi@m.vi.fi)
[12:22:12] *** Joins: rendar (~rendar@user/rendar)
[12:22:36] *** Quits: Pickchea (~private@user/pickchea) (Quit: Leaving)
[12:23:46] *** Quits: walterwhip (~walterwhi@user/walterwhip) (Ping timeout: 268 seconds)
[12:24:26] *** Joins: node1 (~node1@user/node1)
[12:26:51] *** Quits: Wuniu (~Thunderbi@user/wuniu) (Ping timeout: 268 seconds)
[12:27:28] *** Quits: Mattiaslndstrm (~Mattiasln@c188-148-207-108.bredband.tele2.se) (Ping timeout: 268 seconds)
[12:31:33] *** Joins: AlanMD (~AlanMD@86.121.179.183)
[12:32:58] *** Joins: shad (~shad@user/shad)
[12:33:58] *** Quits: brumla (~brumla@cst-prg-3-121.cust.vodafone.cz) (Quit: Client closed)
[12:36:05] *** Joins: AlanMD_ (~AlanMD@193.105.140.131)
[12:36:13] *** Quits: AlanMD (~AlanMD@86.121.179.183) (Ping timeout: 252 seconds)
[12:36:18] *** Joins: hendursa1 (~weechat@user/hendursaga)
[12:36:19] *** Joins: bloody (~bloody@user/bloody)
[12:37:03] <zln> how do I print a b'string' without decoding?
[12:37:05] *** Joins: PaddyF (~PaddyF@user/paddyf)
[12:37:26] <zln> to print it as it would be represented in encoded form
[12:38:07] <grawity> you mean print to stdout, when stdout is opened in text mode? you'll have to wite it through sys.stdout.buffer instead
[12:38:25] <zln> ah nice
[12:39:00] *** Quits: hendursaga (~weechat@user/hendursaga) (Ping timeout: 276 seconds)
[12:39:05] *** Quits: Milos (~Milos@user/milos) (Ping timeout: 252 seconds)
[12:40:11] <grawity> though if you do this, you'll probably want to sys.stdout.flush() the previously-printed text first
[12:40:28] <grawity> since you're dealing with two layers of buffering
[12:41:10] <zln> can I also change default stdout behaviour_
[12:42:16] *** Quits: shad (~shad@user/shad) (Ping timeout: 252 seconds)
[12:42:36] <grawity> if your script works exclusively with binary output, I think the usual boilerplate is something like "if hasattr(sys.stdout, "encoding"): sys.stdout = sys.stdout.detach()"
[12:42:45] *** Joins: kostkon_ (~kostkon@2a02:587:a107:1506:914f:cfda:fee9:ced5)
[12:42:49] <grawity> that'll turn stdout into the underlying binary stream
[12:43:00] *** Joins: Ergo^ (~ergo@91.238.59.144)
[12:43:12] <grawity> (AFAIK don't do this with stderr, it would break printing exceptions)
[12:43:20] *** Joins: Milos (~Milos@user/milos)
[12:43:28] *** Quits: gitly (~gitly@185.69.144.107) (Read error: Connection reset by peer)
[12:43:30] *** Quits: kostkon (~kostkon@2a02:587:a112:9979:da27:3013:be4d:a4f1) (Ping timeout: 260 seconds)
[12:43:37] *** Joins: walterwhip (~walterwhi@user/walterwhip)
[12:43:38] <zln> ah, otherwise I could just change __std = sys.stdout, sys.stdout = sys.stdout.detach() and print stuffs and assign back to go to normal?
[12:43:47] <zln> should that work as I imagine?
[12:43:57] <zln> would*
[12:44:04] *** Joins: gitly (~gitly@185.69.144.107)
[12:44:47] <zln> well, I can as well test my self instead of stealing your time :) thanks for your aswers
[12:47:18] *** Parts: bloody (~bloody@user/bloody) ()
[12:47:25] <grawity> ah tbh
[12:47:40] *** Quits: kurtthemaker (~kurt@S010644a56e3e0ee9.cn.shawcable.net) (Ping timeout: 240 seconds)
[12:47:44] <grawity> if you just want it for a short amount of time, I'd specify it for each print call
[12:48:05] <grawity> doesn't feel nice to change global stdout unless it's in fact done globally for the whole script
[12:48:25] <zln> ah, could you please give me a short statement exampel on how it should look like
[12:48:31] <grawity> ...oh right, print() always deals with strings
[12:48:39] <zln> :D
[12:49:39] *** Joins: kurtthemaker (~kurt@S010644a56e3e0ee9.cn.shawcable.net)
[12:51:15] *** Joins: GiLgAmEzH (~gilgamezh@a210077.upc-a.chello.nl)
[12:51:25] *** Quits: p-i- (~Ohmu@223.206.145.156) (Read error: Connection reset by peer)
[12:51:45] *** Joins: Wuniu (~Thunderbi@user/wuniu)
[12:52:00] *** Joins: p-i- (~Ohmu@mx-ll-223.206.145-156.dynamic.3bb.co.th)
[12:52:12] <grawity> (I'd have said print(foo, file=bar), but I guess you'll have to keep using bar.write(foo) in that case)
[12:54:23] *** Quits: fikran (~fikran@user/fikran) (Ping timeout: 268 seconds)
[12:56:18] *** Joins: fikran (~fikran@user/fikran)
[12:57:40] *** Joins: shad (~shad@user/shad)
[12:58:51] *** Quits: Wuniu (~Thunderbi@user/wuniu) (Ping timeout: 265 seconds)
[12:59:54] <aphysically> oof something I did since uploading to git broke nuitka
[13:00:21] *** Quits: jpodivin (~jpodivin@118.108.broadband14.iol.cz) (Quit: Leaving)
[13:00:37] *** Joins: jpodivin (~jpodivin@118.108.broadband14.iol.cz)
[13:01:07] *** Quits: milkt (~debian@gateway/tor-sasl/milkt) (Remote host closed the connection)
[13:03:24] *** Quits: jpds (~jpds@gateway/tor-sasl/jpds) (Remote host closed the connection)
[13:03:52] *** Joins: jpds (~jpds@gateway/tor-sasl/jpds)
[13:04:10] *** Quits: shad (~shad@user/shad) (Quit: WeeChat 3.0)
[13:04:16] *** Joins: herjazz (~herjazz@p6758124-ipngn30801marunouchi.tokyo.ocn.ne.jp)
[13:05:31] *** Joins: DnzAtWrk (~DnzAtWrk@mobile-access-6df0f7-64.dhcp.inet.fi)
[13:07:22] *** Joins: milkt (~debian@gateway/tor-sasl/milkt)
[13:07:52] *** Joins: plastico (~plastico@neomutt/plastico)
[13:09:35] *** Joins: blindguard (~blindguar@2a02:908:1864:c200::4433)
[13:09:59] *** Quits: hnOsmium0001 (uid453710@id-453710.stonehaven.irccloud.com) (Quit: Connection closed for inactivity)
[13:10:45] *** Joins: slav0nic (slav0nic@python.su)
[13:11:32] *** Joins: Wuniu (~Thunderbi@user/wuniu)
[13:13:43] *** Joins: legola (~legola@46.235.100.27)
[13:14:43] *** Joins: pretty_dumm_guy (trottel@gateway/vpn/protonvpn/prettydummguy/x-88029655)
[13:15:25] *** Joins: daoudr (~daoudr@178.197.216.245)
[13:19:09] *** Joins: shad (~shad@user/shad)
[13:19:53] *** Quits: System123 (~System123@203-134-35-213.sta.estpak.ee) (Ping timeout: 268 seconds)
[13:20:46] *** Joins: PJBoy (~PJBoy@user/pjboy)
[13:21:58] *** Joins: diverdude (~user@176-21-102-230-cable.dk.customer.tdc.net)
[13:22:35] <diverdude> hello, I am trying to do subprocess.Popen(args=['./runit.sh',r.strip()], shell=True) but then i just get: Permission denied. What am I doing wrong here?
[13:22:40] *** Joins: upsala (~zcb@185.213.155.160)
[13:23:09] <supakeen> diverdude: shell=True always takes a single string as the 'args'.
[13:23:30] <grawity> what's the rest of the "Permission denied" that you're getting?
[13:23:39] <grawity> also do you actually need shell=True in this case?
[13:23:53] <supakeen> e.g. either: `subprocess.Popen(f"./runit.sh {r.strip()}", shell=True)` *or* `subprocess.Popen(["./runit.sh", r.strip()])`.
[13:24:09] *** Joins: mozgalom (~mozgalom@IPnet-gw.157.157.97.111.simnet.is)
[13:24:18] <diverdude> supakeen: ah like this? subprocess.Popen(args=f'./runit.sh {r.strip()}', shell=True)
[13:24:29] <supakeen> Yes, as above.
[13:24:42] <supakeen> But the permission denied is likely that ./runit.sh is non-executable.
[13:24:49] *** Quits: gitly (~gitly@185.69.144.107) (Ping timeout: 268 seconds)
[13:25:07] <diverdude> supakeen: now i get: /bin/sh: ./runit.sh: Permission denied
[13:25:15] *** anthraxx_ is now known as anthraxx
[13:25:23] <supakeen> And is `runit.sh` +x?
[13:25:31] *** Joins: amahl (~amahl@dsl-jklbng12-54fbca-64.dhcp.inet.fi)
[13:25:40] <diverdude> ah, chmod +x fixed it
[13:25:49] <diverdude> thanks :)
[13:26:22] *** Joins: gitly (~gitly@148.252.133.74)
[13:26:30] <supakeen> diverdude: here are some details as to how it works and safety: https://supakeen.com/weblog/executing-commands-safely-from-python.html
[13:26:35] <supakeen> if you care to know :)
[13:26:50] <diverdude> yeah- thakns
[13:27:29] *** Quits: NeilRG (~NeilRG@192.222.196.111) (Remote host closed the connection)
[13:31:43] *** Quits: jpic (~jpic@bernadette.objectif-libre.com) (Ping timeout: 265 seconds)
[13:34:32] *** Joins: Wubull (~Thunderbi@user/wuniu)
[13:35:20] *** Quits: shad (~shad@user/shad) (Quit: WeeChat 3.0)
[13:36:08] *** Joins: bancroft (~bancroft@bras-base-mtrlpq02hsy-grc-09-76-68-189-147.dsl.bell.ca)
[13:36:19] *** Quits: Wuniu (~Thunderbi@user/wuniu) (Ping timeout: 268 seconds)
[13:36:19] *** Wubull is now known as Wuniu
[13:37:25] *** Joins: shad (~shad@user/shad)
[13:38:20] *** Joins: paul424 (~tom@ip-37-248-155-77.multi.internet.cyfrowypolsat.pl)
[13:38:26] *** Joins: jpic (~jpic@82.142.2.146)
[13:38:37] *** Joins: wob_jonas (~wob_jonas@business-37-191-60-209.business.broadband.hu)
[13:39:20] *** Quits: gggp (~textual@221.219.70.207) (Quit: My MacBook has gone to sleep. ZZZzzz…)
[13:39:40] *** Joins: Mattiaslndstrm (~Mattiasln@c188-148-207-108.bredband.tele2.se)
[13:41:14] <paul424> I 'm going to teach teenagers python ; should I require them to install linux plus should we use some software which offers code autocompletition ?
[13:41:47] <Widdershins> paul424: python works fine on windows and osx too
[13:42:09] *** Joins: shailangsa (~shailangs@host86-186-132-44.range86-186.btcentralplus.com)
[13:42:18] <paul424> oki, how about autocompletition , is it a pros or cons for a begginer ?
[13:42:36] <Widdershins> recommending some kind of python supporting IDE like, idk, vscode or whatever
[13:42:58] *** Quits: AlanMD_ (~AlanMD@193.105.140.131) (Read error: Connection reset by peer)
[13:43:11] <kosh_> I would just do anaconda with vscode
[13:43:15] *** kosh_ is now known as kosh
[13:43:19] <Widdershins> you want something that's helpful but it doesn't need to be too complex
[13:43:28] <paul424> yeap
[13:43:31] <Widdershins> autocompletion shouldn't be the goal
[13:43:36] <kosh> there is no reason to require linux
[13:43:40] *** Joins: AlanMD (~AlanMD@86.121.179.183)
[13:43:48] <kosh> also they could just activate wsl if you really wanted that for some reason
[13:43:55] <Widdershins> requiring linux is a big barrier preventing people from getting started on it
[13:44:02] <Widdershins> wsl is good too
[13:44:08] <Widdershins> but native windows also works
[13:45:59] *** Joins: YaknotiS (~YaknotiS@user/yaknotis)
[13:46:03] *** Quits: marduk (~marduk@99-122-3-133.lightspeed.nsvltn.sbcglobal.net) (Quit: The Lounge - https://thelounge.chat)
[13:46:38] *** Joins: ihristov (~ihristov@217.145.94.71)
[13:47:28] <kosh> native windows works just fine, I am only saying if you need something linux specific then wsl/wsl2 has a much lower barrier than installing linux
[13:47:40] <manuels> hi
[13:47:50] <manuels> how is miniforge4 different to 3 ?
[13:47:57] <kosh> I run python multiprocess software on windows every day along with things like tensorflow and I see no performance difference on windows vs linux
[13:47:59] *** Joins: saorge (~saorge@ns378138.ip-5-196-67.eu)
[13:48:02] <kosh> or stability etc
[13:48:05] <manuels> i want to use it with tensorflow-macos for m1 chips
[13:48:05] <paul424> oki kosh++, Widdershins++
[13:48:10] <manuels> will it work out?
[13:48:15] *** Quits: AlanMD (~AlanMD@86.121.179.183) (Ping timeout: 268 seconds)
[13:49:07] <jinsun> manuels: is there a miniforge4? I only see miniforge3 on their github
[13:49:16] *** Quits: Wuniu (~Thunderbi@user/wuniu) (Ping timeout: 268 seconds)
[13:50:14] *** Joins: marduk (~marduk@99-122-3-133.lightspeed.nsvltn.sbcglobal.net)
[13:50:30] *** Quits: pycode (~pycode@2001:b07:5d28:551:94cd:90fd:2fee:a781) (Ping timeout: 268 seconds)
[13:50:53] <raxor2k> if i set a list to be global inside main.py, will i be able to access that inside a class somewhere else in the code ?
[13:51:44] <jinsun> yes
[13:51:56] *** Quits: minip (~minip@user/minip) (Remote host closed the connection)
[13:52:10] *** Joins: AlanMD (~AlanMD@193.105.140.131)
[13:52:46] *** Quits: DnzAtWrk (~DnzAtWrk@mobile-access-6df0f7-64.dhcp.inet.fi) (Read error: Connection reset by peer)
[13:52:57] <kosh> please just take the global keyword and burn it
[13:54:02] <andi_> can somebody please help me understand why the for loop is generating a list as expected but the two list comprehensions return []? https://paste.xinu.at/QMY/
[13:55:23] <grawity> zip() returns an iterable which you can only go through once
[13:55:30] <Repiphany> andi_: zip is consumed when you iterate over it once
[13:55:39] <grawity> try `diff = list(diff)` or `diff = [*diff]` to turn it into a static list
[13:56:59] <andi_> let's see. i don't need the for loop anyway. that was just boilerplate code to get the list comprehensions
[13:57:21] *** Joins: Wuniu (~Thunderbi@user/wuniu)
[13:57:46] *** Joins: DnzAtWrk (~DnzAtWrk@mobile-access-6df0f7-64.dhcp.inet.fi)
[13:58:00] <grawity> also, sets being unordered, the zip() usage looks a bit weird to me
[13:58:19] *** Joins: trace987 (~trace@ip5f5a6a70.dynamic.kabel-deutschland.de)
[13:58:30] <andi_> yeah, the input is sorted beforehand
[13:58:44] *** Joins: zmt01 (~zmt00@user/zmt00)
[13:59:13] <grawity> but there's no guarantee that set() will retain that order, is there?
[13:59:49] *** Quits: ihristov (~ihristov@217.145.94.71) (Ping timeout: 252 seconds)
[13:59:52] <andi_> grawity: not that i know of, but i don't mind the correct order as long as the zip will keep the values of the sets togeter
[14:00:09] <andi_> togehter, so far it's working but it's a problem i need to investigate too
[14:00:11] *** Joins: Gustavo6046 (~Gustavo60@user/gustavo6046)
[14:00:50] *** Quits: zmt00 (~zmt00@user/zmt00) (Ping timeout: 260 seconds)
[14:01:41] *** Quits: puff (~user@S0106d4ca6d80a83c.vs.shawcable.net) (Read error: Connection reset by peer)
[14:01:55] *** Joins: puff (~user@S0106d4ca6d80a83c.vs.shawcable.net)
[14:02:10] <jinsun> set can definitely reorder stuff, `set([2,3,1]) gives {1,2,3}`  (although looks like the current implementation just gives numbers in ascending order, but there is no gurantee about that)
[14:03:33] *** Quits: trace987 (~trace@ip5f5a6a70.dynamic.kabel-deutschland.de) (Remote host closed the connection)
[14:05:01] <raxor2k> jinsun: thanks n*gga <3
[14:05:16] *** Joins: trace987 (~trace@ip5f5a6a70.dynamic.kabel-deutschland.de)
[14:08:52] *** Joins: chenxuezhao (~chenxuezh@106.39.157.10)
[14:09:07] *** Joins: mIk3_08 (~Thunderbi@user/mik3-08/x-2852566)
[14:09:14] *** Quits: bpalmer (~user@user/bpalmer) (Remote host closed the connection)
[14:09:24] <thm> andi_: aren't you looking for the ^ operator, anyway?
[14:09:46] <andi_> thm: you mean xor?
[14:09:54] <thm> set symmetric difference
[14:10:15] <thm> {1,2,3} ^ {3,4,5} -> {1, 2, 4, 5}
[14:10:37] <andi_> what i have is two files of C defines, e.g. #define HELLO 1 and every define in the first file need to be in the second file aswell
[14:11:28] <andi_> so right now i put everything in a dict in key/value pairs and then use the set to get the differences
[14:11:37] <thm> yes, so the symmetric difference of both lists should be empty
[14:11:47] <thm> I mean, you are construction a-b, b-a
[14:11:58] <thm> *ing
[14:12:11] <andi_> so you mean i can just do dict_a ^ dict_b/
[14:12:23] <paul424> I donno my heapsort takes longer than 80 lines , is something wrong with me or with that algorithm ?
[14:12:56] <thm> andi_: well, no, not on the dicts, but maybe on the keys?
[14:14:12] <andi_> thm: hmm let's tinker a bit
[14:15:19] *** Joins: sp0fp12 (~sp0f.p12@user/sp0fp12)
[14:15:36] <sp0fp12> :p
[14:18:50] *** Joins: Falc (~Falc@193.191.206.243)
[14:19:50] *** Quits: shad (~shad@user/shad) (Quit: WeeChat 3.0)
[14:20:05] *** Joins: shad (~shad@user/shad)
[14:21:07] *** Joins: pycode (~pycode@2001:b07:5d28:551:88b3:33c:c482:17f6)
[14:22:47] *** Joins: Bronto22 (~mennoh@2a02:a46b:4db0:1:5604:a6ff:fe37:3044)
[14:24:21] *** Joins: Yion (~Yion@pd95caa88.dip0.t-ipconnect.de)
[14:24:53] <nedbat> paul424: sounds like the code could be tightened up
[14:28:52] <rendar> i'm creating a little class that waits the completion of asyncio tasks i add into a list, here's the code https://bpa.st/FNLA -- it works, but i'd need a method to add tasks *after* that class is waiting to the set of tasks..
[14:29:01] <rendar> in this example, the .add() method doesn't work
[14:29:28] *** Joins: y1n (~y1n@84-115-64-107.wifi.dynamic.surfer.at)
[14:29:32] <rendar> any ideas how can i achieve this?
[14:29:34] *** Quits: Wuniu (~Thunderbi@user/wuniu) (Ping timeout: 268 seconds)
[14:29:41] <Widdershins> after what?
[14:29:46] *** Quits: paul424 (~tom@ip-37-248-155-77.multi.internet.cyfrowypolsat.pl) (Remote host closed the connection)
[14:30:06] <rendar> Widdershins, after `await asyncio.wait(...)`
[14:30:31] <rendar> Widdershins, when it starts asyncio.wait() it will wait for *current* added tasks into the set, not new ones i'll add
[14:30:42] *** Quits: djhankb (~djhankb@208.113.164.68) (Remote host closed the connection)
[14:31:13] *** Joins: djhankb (~djhankb@208.113.164.68)
[14:33:40] <gitesh> I love instances
[14:33:55] *** Joins: EvilDMP (~textual@django/moderator/EvilDMP)
[14:34:03] <Widdershins> looks like you have it breaking out of the wait when any single one of the tasks is completed, but it doesn't look like your loop ever exits
[14:34:28] <rendar> Widdershins, the loop exists, if it gets cancelled
[14:34:31] <rendar> that's not the problem
[14:34:38] <rendar> exits*
[14:34:47] <Widdershins> what happens if all the items are completed without being canceled
[14:36:45] *** Quits: audiocat (~audio@2603-8081-1800-6a6f-a343-2789-b46e-be67.res6.spectrum.com) (Ping timeout: 268 seconds)
[14:37:05] *** Joins: akinode (~akinode@2a02:908:1394:cce0:a961:9313:f5e0:52ab)
[14:37:05] <Widdershins> i think it would make more sense to take _to_wait, replace it with an empty set that can be added to later, and asyncio.wait(...ALL_COMPLETED), and keep doing that until _to_wait starts out empty (because no more tasks have been added since you started waiting)
[14:37:20] <Widdershins> i'm not sure what the purpose of _active is here
[14:37:36] *** Quits: Mattiaslndstrm (~Mattiasln@c188-148-207-108.bredband.tele2.se) (Quit: My MacBook has gone to sleep. ZZZzzz…)
[14:38:08] <rendar> i can't use ALL_COMPLETED
[14:38:19] <rendar> i have to wait tasks and do some operations when one of them finishes
[14:39:20] *** Joins: Samian (~Sami@user/samian)
[14:39:26] <akinode> hello, can anyone tell me the difference between spack (https://spack.readthedocs.io/en/latest/) and venv(https://docs.python.org/3/library/venv.html) when used for software that is primarily python based? Are there any advantages to spack?
[14:39:33] <rendar> Widdershins, plus, i can't do "keeping doing that" since i don't want to repeat operations i can avoid sleeping
[14:40:55] *** Joins: fdan (~fdan@192.146.154.3)
[14:41:05] <Widdershins> rendar: well you described something you wanted and then when i provided a solution you said there were a lot of specific reasons it had to be different in a particular way. sounds like you probably already know what you want it to do, you just need to tell it to do that. i have to go to bed
[14:41:18] <fdan> Hi there. I have this as the input I/P - AABBBCCCCDDDEEA
[14:41:20] <fdan> i want to get the output as A2B3C4D3E2
[14:41:21] <fdan> how can i get this
[14:41:30] <rendar> Widdershins, you didn't give any solution to the problem
[14:41:37] *** Joins: Naan (~Naan@user/naan)
[14:41:40] *** Quits: txtsd (~txtsd@user/txtsd) (Ping timeout: 240 seconds)
[14:42:06] <Widdershins> i gave a solution to the problem that was described
[14:42:08] <rendar> Widdershins, i have to wait N tasks, and wake up the waiting when the first task finishes, do some operations, then wait the N-1 tasks again.. and so on
[14:42:14] <rendar> supporting the adding of new tasks
[14:42:22] <Widdershins> ok cool sounds doable
[14:42:31] <Widdershins> i still need to go to bed
[14:43:15] *** Quits: node1 (~node1@user/node1) (Quit: Leaving)
[14:43:29] <jinsun> fdan: where did the last A go? I expected either A3 or A2 and A in the end, but you have A2 and no A in the end
[14:45:24] <The-Compiler> fdan: that's typically called run length encoding (RLE)
[14:45:38] *** Joins: Mattiaslndstrm (~Mattiasln@c188-148-207-108.bredband.tele2.se)
[14:45:40] <The-Compiler> fdan: at least if the A1 at the end was a typo
[14:45:46] *** Joins: ihristov (~ihristov@217.145.94.71)
[14:46:34] *** Quits: shad (~shad@user/shad) (Quit: WeeChat 3.0)
[14:46:49] *** Joins: shad (~shad@user/shad)
[14:46:58] <The-Compiler> fdan: ''.join(f'{len(list(group))}{char}' for char, group in itertools.groupby(s))
[14:47:16] <fdan> The-Compiler without itertools how can i do
[14:47:44] <The-Compiler> fdan: well, a for loop and count the characters yourself
[14:48:04] <fdan> The-Compiler 2A 3B 4C 3D 2E 1A
[14:48:13] <fdan> i would not want 1A
[14:48:22] <The-Compiler> but there's an A at the end of your input?
[14:49:07] <fdan> yes the problem is to count the number of characters for continuously occuring only
[14:49:53] <The-Compiler> well then add a   if len(group) > 1   I suppose
[14:50:05] *** Joins: Ivii (~Ivyy@2001:a61:1329:3e01:e614:ee6e:fbf3:b23f)
[14:50:13] <The-Compiler> hm, no, that won't work
[14:50:28] <jinsun> that A counts as a continuosly sequence of 1 A's though
[14:51:02] <rendar> any help?
[14:51:16] <jinsun> so that reason doesn't sound right for removing the 1A
[14:51:29] <The-Compiler> ''.join(f'{char}{length}' for char, group in itertools.groupby(s) if (length := len(list(group))) > 1)
[14:51:34] <The-Compiler> not sure if I like it though :D
[14:51:39] *** Quits: EvilDMP (~textual@django/moderator/EvilDMP) (Quit: My MacBook has gone to sleep. ZZZzzz…)
[14:53:53] *** Quits: r0bby (r0bby@user/r0bby) ()
[14:54:27] *** Joins: r0bby (r0bby@user/r0bby)
[14:56:30] *** Quits: dba (uid502594@id-502594.stonehaven.irccloud.com) (Quit: Connection closed for inactivity)
[14:56:32] *** Quits: Kharon (uid511277@user/cypris) (Quit: Connection closed for inactivity)
[14:56:58] <jinsun> rendar: maybe add a sleep to the end of the while loop so that other code has a chance to add more tasks?
[14:57:13] *** Quits: Mattiaslndstrm (~Mattiasln@c188-148-207-108.bredband.tele2.se) (Quit: My MacBook has gone to sleep. ZZZzzz…)
[14:58:47] *** Quits: legola (~legola@46.235.100.27) (Remote host closed the connection)
[14:59:58] <rendar> jinsun, nope that's not a clean solution
[15:01:57] <fdan> The-Compiler https://dpaste.org/vRg9
[15:03:35] *** Quits: Mikaela (~sid12355@Feneas/Mikaela) (Remote host closed the connection)
[15:03:48] <Samian> how do you do an arrange where the output is 1,1,1,2,2,2,3,3,3,4,4,4 etc
[15:03:56] *** Joins: Mikaela (~sid12355@Feneas/Mikaela)
[15:04:02] *** Quits: fikran (~fikran@user/fikran) (Ping timeout: 265 seconds)
[15:04:03] <grawity> aka sort?
[15:04:16] <Samian> huh?
[15:05:24] <Samian> interesting. pytorch has repeat_interleave
[15:05:40] *** Joins: fikran (~fikran@user/fikran)
[15:06:24] *** Quits: Naan (~Naan@user/naan) (Quit: Leaving)
[15:06:37] <Repiphany> You could do `(i//k for i in range(k*N))` if you really wanted
[15:09:16] *** Quits: oprypin (~irc@pryp.in) (Ping timeout: 252 seconds)
[15:09:36] *** BlessJah_ is now known as BlessJah
[15:09:57] *** Quits: adder (~adder@user/adder) (Quit: Leaving)
[15:10:09] <jinsun> `itertools.chain.from_iterable(zip(*(itertools.count(1) for _ in range(3))))` for an infinite one
[15:10:36] *** Quits: Bronto22 (~mennoh@2a02:a46b:4db0:1:5604:a6ff:fe37:3044) (Quit: Konversation terminated!)
[15:13:25] <raxor2k> jinsun: what am i doing wrong here? https://bpa.st/V7DQ
[15:13:48] <raxor2k> https://bpa.st/UF6A
[15:13:59] *** Joins: peterandre (peterandre@2605:6400:c847:1524::4251)
[15:14:59] <Samian> I was looking for the most performant. I know I could that Repiphany. But I thought it'd be slow if it's not vectorized
[15:15:07] *** Joins: Cheaterman (~cheaterma@user/cheaterman)
[15:15:12] *** Quits: walterwhip (~walterwhi@user/walterwhip) (Ping timeout: 268 seconds)
[15:15:21] <Samian> everything in python is slow if it's not vectorized
[15:16:13] <jinsun> raxor2k: looks fine I think, what is going wrong there?
[15:16:39] *** Joins: andyewen (~andyewen@31.124.173.192)
[15:17:07] *** Joins: cthulchu (~Cthulchu@193.194.107.250)
[15:17:11] *** Joins: walterwhip (~walterwhi@user/walterwhip)
[15:18:02] <jinsun> raxor2k: ah maybe I see the problem, you want change to `students_from_db_list` to be reflected in the other file where you import it
[15:18:18] *** Quits: y1n (~y1n@84-115-64-107.wifi.dynamic.surfer.at) (Ping timeout: 260 seconds)
[15:18:31] <raxor2k> jisnun: what do you mean by reflected ?
[15:19:16] <jinsun> raxor2k: if you do `from main import students_from_db_list` then you get a copy of the `students_from_db_list` variable in that file
[15:20:01] *** Quits: sp0fp12 (~sp0f.p12@user/sp0fp12) (Quit: WeeChat 3.2.1)
[15:20:14] <jinsun> you have to do `import main` and then access the variable as `main.students_from_db_list` then if it changes in main you will see the changes in the other file that imports main too
[15:21:20] <raxor2k> jinsun: the class is inside a file while "main.py" is at parent folder
[15:21:59] *** Quits: walterwhip (~walterwhi@user/walterwhip) (Ping timeout: 268 seconds)
[15:23:13] <jinsun> okay, does that cause any problem?
[15:24:27] *** Quits: GiLgAmEzH (~gilgamezh@a210077.upc-a.chello.nl) (Ping timeout: 268 seconds)
[15:25:22] *** Joins: NeilRG (~NeilRG@192.222.196.111)
[15:25:42] *** Joins: ubert (~Thunderbi@178.115.54.21.wireless.dyn.drei.com)
[15:26:11] *** Joins: pretty_d1 (trottel@gateway/vpn/protonvpn/prettydummguy/x-88029655)
[15:27:05] *** Quits: pretty_dumm_guy (trottel@gateway/vpn/protonvpn/prettydummguy/x-88029655) (Remote host closed the connection)
[15:27:32] <wyre> hi guys, I'm following the datasheet of this serial EERAM https://www.microchip.com/en-us/product/48L640 and apparently when I send the WREN command the STATUS register should have a `1` in the bit 1, but when I run my code https://bpa.st/HHHQ I always have a 0
[15:27:52] <wyre> what am I doing wrong? maybe I cannot do read and write in separate operations?
[15:29:37] *** Quits: gitly (~gitly@148.252.133.74) (Quit: WeeChat 3.2)
[15:29:58] *** Quits: NeilRG (~NeilRG@192.222.196.111) (Ping timeout: 260 seconds)
[15:31:30] *** Quits: dld (~davidlowr@2601:197:600:1210:28c1:cdd6:e3ed:bb3d) (Ping timeout: 260 seconds)
[15:31:55] *** Joins: Sheilong (uid293653@id-293653.ilkley.irccloud.com)
[15:32:12] *** Joins: pro (~pro@user/pro)
[15:32:16] *** Joins: legola (~legola@46.235.100.27)
[15:32:35] <pro> whath's the best way to check if a string contains only a single lowercase letter 'v'
[15:33:02] <The-Compiler> pro: 'valve'.count('v') == 1
[15:33:06] <grawity> if you mean "contains exactly one character, which is v", then just x == "v"
[15:33:22] <grawity> if you mean "contains exactly one occurence of the letter v", then .count I guess? TIL there's .count
[15:33:30] <pro> .count for the win
[15:33:34] <pro> thank you The-Compiler
[15:34:17] *** Joins: paul424 (~tom@apn-31-0-25-75.dynamic.gprs.plus.pl)
[15:34:43] <paul424> I know how to "cycle up" a linked list in C/C++ but how do I do that in python ?
[15:34:51] *** Quits: pro (~pro@user/pro) (Client Quit)
[15:35:05] <raxor2k> jinsun: well. im getting the "unresolved reference" error..
[15:35:35] *** mozgalom is now known as bomb-on
[15:35:56] <The-Compiler> wyre: what's the status value you get? Chip select is handled correctly?
[15:36:29] <jinsun> raxor2k: hmm, paste the traceback? and the new code also if you changed it
[15:36:44] <wyre> The-Compiler, apparently it is
[15:36:55] <grawity> probably depends on how you created that linked list, or why you're even using a linked list in python to begin with?, but I'd guess it's something along the lines of "x = the_list; while x: [do stuff...]; x = x.next"
[15:37:02] <wyre> The-Compiler, I have a 0
[15:37:08] *** Quits: bomb-on (~mozgalom@IPnet-gw.157.157.97.111.simnet.is) (Quit: Textual IRC Client: www.textualapp.com)
[15:37:09] *** Quits: fdan (~fdan@192.146.154.3) (Ping timeout: 256 seconds)
[15:37:31] *** Joins: mozgalom (~mozgalom@IPnet-gw.157.157.97.111.simnet.is)
[15:38:01] <paul424> grawity, no no , what I mean was : how do I create a linked list containing a cycle
[15:38:07] <wyre> but according the datasheet I should have a 2 (00000010) because WREN was executed
[15:38:09] <paul424> my Englishhzzzzzzz
[15:38:36] *** Joins: y1n (~y1n@046125249093.public.t-mobile.at)
[15:38:41] <grawity> last_item.next = first_item
[15:38:42] <wyre> The-Compiler, was executed first, I meant
[15:38:48] <The-Compiler> wyre: agreed
[15:38:56] *** Quits: roxfan (roxfan@11.121-64-87.adsl-dyn.isp.belgacom.be) (Remote host closed the connection)
[15:39:06] *** Joins: gitly (~gitly@148.252.133.74)
[15:39:31] *** Joins: roxfan (roxfan@11.121-64-87.adsl-dyn.isp.belgacom.be)
[15:39:55] *** Joins: codeswhite (~codeswhit@user/codeswhite)
[15:40:16] <Cheaterman> paul424: So wait, you're trying to expose a C/++ linked list to Python?
[15:40:25] <paul424> no no :)
[15:40:43] <Cheaterman> What are you trying to do? And is there a reason you're not using iterators?
[15:41:09] <grawity> I mean there's really nothing special in creating a reference loop in python, I'm assuming it's even the same in C
[15:41:32] <Cheaterman> grawity: your solution is 200% correct, but it "feels" wrong in a Python context IMO
[15:41:43] <Cheaterman> or at least it feels wrong if it's raw ; one could add iterators on top
[15:41:44] <grawity> using a linked list also feels wrong in a Python context IMO
[15:41:50] <supakeen> wyre: are you actually managing CS yourself?
[15:41:52] *** Quits: jposer (sid132110@highgate.irccloud.com) ()
[15:42:05] <wyre> supakeen, nope!, it's doing it spidev
[15:42:06] <Repiphany> collections.deque
[15:42:10] <paul424> I do collect questions about list programming , and there was a quest ; Check whether a linked list contains a cycle, and then I knew I don't know how to create a list with a  cycle in the first place
[15:42:11] *** Joins: jposer (sid132110@id-132110.uxbridge.irccloud.com)
[15:42:12] <Cheaterman> grawity: (also yes - the loop makes a circular ref that's not deallocatable I think)
[15:42:21] <supakeen> wyre: and does SPI dev transition CS from low to high after your message?
[15:42:29] <pycode> hello
[15:42:36] <wyre> supakeen, the scope shows it does
[15:42:42] <pycode> is there a way to add the 0 without doing the check of the length? https://bpa.st/L2HQ
[15:42:43] <supakeen> ok, good
[15:42:49] <Cheaterman> paul424: Aaaaaaaaaaaaaah.
[15:42:57] <grawity> pycode: then I'm guessing you're looking for https://paste.rs/eZ7 or something similar
[15:43:01] <Cheaterman> You're porting C/++ challenges to Python basically?
[15:43:02] <supakeen> (it's also a common mistake when it comes to these types of storage that use CS as their end-of-write)
[15:43:03] <grawity> er, paul424: ^
[15:43:35] *** Joins: theprophet (~theprophe@85.114.228.184)
[15:43:51] *** Quits: MrNaz (sid133418@highgate.irccloud.com) ()
[15:43:52] *** Joins: roarwe (~roarwe@95.67.117.102)
[15:43:55] <grawity> pycode: a) return max(m or [0]); b) return max(m) if m else 0; I think the latter is easier to understand
[15:44:07] *** Joins: MrNaz (sid133418@id-133418.uxbridge.irccloud.com)
[15:44:07] <pycode> ok
[15:44:10] <pycode> thanks grawity
[15:44:47] <grawity> maybe even "if self.indicators: return max([...]) else: return 0"
[15:44:54] *** Quits: cheater (~Username@user/cheater) (Ping timeout: 260 seconds)
[15:44:54] <Repiphany> `return len(m) and max(m)`
[15:44:56] <Cheaterman> What grawity just posted is excellent for the mere "porting" part, however my point earlier about iterator is (very) basically to replace the "while" loop with a "for" (and not manually do item = item.next)
[15:45:06] <Repiphany> except don't really do this and stick to something readable
[15:45:20] *** Joins: cheater (~Username@user/cheater)
[15:45:26] <supakeen> wyre: it could be that it doesn't allowe a read while the WEL is set, can you reset it before the RDSR; I also think RDSR requires an argument that you aren't sending?
[15:45:28] <pycode> grawity, return max([i.min_bars() for k, i in self.indicators.items()]) if self.indicators else 0
[15:45:29] <pycode>  ?
[15:45:34] <Cheaterman> Now that doesn't solve your challenge of course :-) it merely gives you an idea of how to implement the starting conditions, haha
[15:45:41] <supakeen> (or just not send WREN and just send `RDSR` + argument)
[15:45:50] *** Quits: ferz (~ferz@93-39-143-181.ip76.fastwebnet.it) (Ping timeout: 260 seconds)
[15:45:51] <grawity> don't oneliner it :(
[15:46:04] <pycode> grawity, ah pardon ok
[15:46:06] <wyre> supakeen, apparently RDSR is just for reading the STATUS register
[15:46:22] <wyre> so ... does it admit some argument?
[15:46:23] <Repiphany> Change line 3 to `m = [...] + [0]`
[15:46:46] <Repiphany> (only works if you don't have anything negative I guess)
[15:46:52] <pycode> Repiphany, yeah good one
[15:46:57] <pycode> no negative
[15:47:04] *** Parts: bancroft (~bancroft@bras-base-mtrlpq02hsy-grc-09-76-68-189-147.dsl.bell.ca) (WeeChat 3.2)
[15:47:09] *** Quits: jug (~jug@user/jug) (Quit: WeeChat 3.2)
[15:47:28] <supakeen> wyre: i might've misread the specsheet (i'm familiar with other spi devices) :)
[15:47:53] <pycode> Repiphany, return max([i.min_bars() for k, i in self.indicators.items()]+[0])
[15:47:55] <paul424> Cheaterman, I was mistaken , because I thought the buildin lists can be made to have cycles
[15:48:23] <Cheaterman> paul424: Aaah! They cannot, nor can the stdlib queues or deques
[15:48:35] <paul424> yeap :)
[15:48:36] <Cheaterman> Which is why I refrained from suggesting those in the first place
[15:48:37] *** Parts: roarwe (~roarwe@95.67.117.102) (WeeChat 3.2)
[15:48:38] *** Joins: walterwhip (~walterwhi@user/walterwhip)
[15:48:46] <Cheaterman> (those are what you'd use for "real" linked list use-cases - minus the cyclic part)
[15:48:57] *** Quits: walterwhip (~walterwhi@user/walterwhip) (Client Quit)
[15:49:16] *** Quits: ihristov (~ihristov@217.145.94.71) (Quit: Ping timeout (120 seconds))
[15:49:20] <The-Compiler> hmm, they can't?
[15:49:44] <The-Compiler> this seems to work on first sight?   a = [1, 2, 3]; a[1] = a
[15:49:45] <Cheaterman> You can push and append individual items, you don't directly control where prev/next point
[15:49:59] <Cheaterman> The-Compiler: that's not cyclic, that's self-referencing
[15:50:21] <The-Compiler> ah
[15:50:43] *** Quits: kdc (~kdc@196.211.197.139) (Quit: kdc)
[15:51:30] <Cheaterman> we're more thinking of something along the lines of "while True: yield from a"
[15:52:15] *** Quits: puff (~user@S0106d4ca6d80a83c.vs.shawcable.net) (Read error: Connection reset by peer)
[15:52:29] *** Joins: puff (~user@S0106d4ca6d80a83c.vs.shawcable.net)
[15:53:05] *** Joins: jug (~jug@user/jug)
[15:53:05] *** Joins: vvdaiwrw (~rvgzuuqp@gateway/tor-sasl/rvgzuuqp)
[15:53:13] *** Quits: pycode (~pycode@2001:b07:5d28:551:88b3:33c:c482:17f6) (Ping timeout: 268 seconds)
[15:54:24] <Cheaterman> paul424: another neat point that might help you later - I did some C++ recently and noticed some fairly obvious parallels between their fancy (but implicit) RAII and our fancy (but explicit) context managers
[15:54:40] <Samian> whats the term for doing a = [range_start:range_end]. where you use the : sign and extract parts of arrays
[15:54:41] *** Joins: doko (~doko@2a02:8106:1a:7600:b900:1d9e:39d9:efd1)
[15:54:46] <Cheaterman> Samian: slicing
[15:54:54] <Samian> aha yes thanks
[15:55:04] *** Quits: Falc (~Falc@193.191.206.243) (Ping timeout: 268 seconds)
[15:56:35] *** Joins: otisolsen70 (~otisolsen@xd4ed80b5.cust.hiper.dk)
[15:56:57] *** Quits: chenxuezhao (~chenxuezh@106.39.157.10) (Remote host closed the connection)
[15:58:01] <Cheaterman> (reminds me of the fun times when flake8 would annoy me with type hints "a: float" thinking the : is the slice operator (asking me to add spaces around it))
[15:58:28] <paul424> Cheaterman, hmmmm what I need now is sometihng like a ladder of question with increasing difficulties so I can classify people ;)
[15:59:03] <Cheaterman> paul424: I think you should make them
[15:59:22] <Cheaterman> Make the questions, and have a test audience try them out so that you can assert their relative difficulty?
[16:00:40] <paul424> https://bulldogjob.pl/news/743-20-zadan-z-zakresu-list-ktore-mozesz-dostac-podczas-rekrutacji yeah and those were generall questions , involving linked list and no python  is mentioned ....:D , ( finally I have found that www site again )
[16:00:54] *** Joins: ferz (~ferz@93-39-143-181.ip76.fastwebnet.it)
[16:02:20] <paul424> yeah those are pretty easy tasks , however for begginers they might be a nightmare
[16:04:50] *** Quits: mexen (uid495612@user/mexen) (Quit: Connection closed for inactivity)
[16:05:05] *** Joins: cashew (~cashugh@user/cashew)
[16:06:45] *** Joins: NeilRG (~NeilRG@192.222.196.111)
[16:06:57] *** Quits: NeilRG (~NeilRG@192.222.196.111) (Remote host closed the connection)
[16:08:38] *** Quits: cthulchu (~Cthulchu@193.194.107.250) (Ping timeout: 268 seconds)
[16:08:45] *** Joins: mat001 (~mat001@c-73-223-64-126.hsd1.ca.comcast.net)
[16:10:48] *** Quits: digilink (~digilink@user/digilink) (Quit: WeeChat 3.2)
[16:10:51] *** Quits: ericoc (sid179921@id-179921.highgate.irccloud.com) ()
[16:11:07] *** Joins: ericoc (sid179921@id-179921.uxbridge.irccloud.com)
[16:11:45] *** Joins: Pickchea (~private@user/pickchea)
[16:11:54] *** Joins: tgamblin (~tgamblin@2607:fea8:c29d:d7c0::81de)
[16:12:22] *** Quits: mat001_ (~mat001@c-73-223-64-126.hsd1.ca.comcast.net) (Ping timeout: 252 seconds)
[16:13:38] *** Quits: codeswhite (~codeswhit@user/codeswhite) (Ping timeout: 265 seconds)
[16:15:05] *** Quits: ideopathic (~ideopathi@99-6-12-70.lightspeed.irvnca.sbcglobal.net) (Ping timeout: 265 seconds)
[16:15:05] *** Quits: Leonarbro (~Leonet@user/leonarbro) (Read error: Connection reset by peer)
[16:15:56] *** Joins: ideopathic (~ideopathi@99-6-12-70.lightspeed.irvnca.sbcglobal.net)
[16:17:01] *** Joins: digilink (~digilink@user/digilink)
[16:17:15] *** Joins: Leonarbro (~Leonet@user/leonarbro)
[16:17:55] *** Quits: khrbt (~znc@user/khrbt) (Ping timeout: 252 seconds)
[16:18:09] *** Joins: khrbt (~znc@user/khrbt)
[16:19:52] *** Quits: shad (~shad@user/shad) (Quit: WeeChat 3.0)
[16:19:54] *** Quits: Dantali0n (~Dantali0n@251-228-138-45.connected.by.freedominter.net) (Ping timeout: 260 seconds)
[16:20:08] *** Joins: shad (~shad@user/shad)
[16:21:35] *** Quits: doko (~doko@2a02:8106:1a:7600:b900:1d9e:39d9:efd1) (Ping timeout: 268 seconds)
[16:21:52] *** Joins: tecnico (~tecnico@136.53.93.11)
[16:22:39] *** Joins: Falc (~Falc@193.191.206.243)
[16:25:20] *** Quits: iflema (~ian@user/iflema) (Quit: iflema)
[16:29:35] *** Joins: dangrenier83 (~pi@user/dangrenier83)
[16:29:36] *** Quits: bitdex (~bitdex@gateway/tor-sasl/bitdex) (Quit: = "")
[16:30:10] *** Joins: oprypin (~irc@pryp.in)
[16:31:27] *** Quits: raxor2k (~raxor2k@78.158.248.203) (Ping timeout: 268 seconds)
[16:32:42] *** Joins: dez (uid92154@user/dez)
[16:33:14] *** Quits: hogarius (hogarius@id-222644.highgate.irccloud.com) ()
[16:33:31] *** Joins: hogarius (hogarius@id-222644.uxbridge.irccloud.com)
[16:36:01] *** Quits: supakeen (~user@python/site-packages/supakeen) (Quit: WeeChat 3.2.1)
[16:36:30] *** Joins: supakeen (~user@python/site-packages/supakeen)
[16:36:48] *** Joins: Wuniu (~Thunderbi@user/wuniu)
[16:37:29] *** Joins: NeilRG (~NeilRG@192.222.196.111)
[16:37:32] *** Quits: kenoba (~kenoba@user/kenoba) (Quit: The Lounge - https://thelounge.chat)
[16:37:43] *** Quits: bn_work (uid268505@id-268505.highgate.irccloud.com) ()
[16:38:10] *** Joins: bn_work (uid268505@id-268505.uxbridge.irccloud.com)
[16:38:16] *** Joins: kenoba (~kenoba@user/kenoba)
[16:38:30] *** Joins: Mattiaslndstrm (~Mattiasln@c188-148-207-108.bredband.tele2.se)
[16:38:31] *** Joins: cthulchu (~Cthulchu@193.194.107.250)
[16:38:33] *** Joins: PCatinean (~pcatinean@5-12-192-32.residential.rdsnet.ro)
[16:38:56] *** Joins: Bronto22 (~mennoh@2a02:a46b:4db0:1:5604:a6ff:fe37:3044)
[16:39:21] *** Quits: thiras (~thiras@user/thiras) (Remote host closed the connection)
[16:40:01] *** Quits: cashew (~cashugh@user/cashew) (Ping timeout: 252 seconds)
[16:40:06] *** Joins: Elzington (~Elzington@68.235.43.173)
[16:41:19] *** Joins: Gerula_ (~Gerula@user/gerula)
[16:41:19] *** Quits: Gerula (~Gerula@user/gerula) (Killed (mercury.libera.chat (Nickname regained by services)))
[16:41:19] *** Gerula_ is now known as Gerula
[16:41:40] *** Quits: NeilRG (~NeilRG@192.222.196.111) (Ping timeout: 240 seconds)
[16:41:54] *** Quits: X4 (~X4@ip-95-223-73-17.hsi16.unitymediagroup.de) (Quit: Client closed)
[16:42:49] *** Quits: driib (~driib@185.195.233.170) (Quit: Ping timeout (120 seconds))
[16:42:53] *** Quits: cmagina (sid286142@user/cmagina) ()
[16:43:02] *** Quits: dhch (~dhch@185.213.154.168) (Quit: Ping timeout (120 seconds))
[16:43:08] *** Joins: driib (~driib@185.195.233.170)
[16:43:08] *** Joins: cmagina (sid286142@user/cmagina)
[16:43:13] *** Joins: dhch (~dhch@185.213.154.168)
[16:44:50] *** Quits: Wuniu (~Thunderbi@user/wuniu) (Quit: I'm tired, have a good time!)
[16:45:22] <wyre> supakeen, The-Compiler, this https://i.imgur.com/0XJfigi.png is what I get when I run once this script https://bpa.st/PZ3Q
[16:45:55] <wyre> I can't see anything in the SO line 😥
[16:46:07] <wyre> I guess I should have also a bit stream, right?
[16:46:11] *** Joins: sp0fp12 (~sp0f.p12@user/sp0fp12)
[16:46:16] *** Joins: Dantali0n (~Dantali0n@251-228-138-45.connected.by.freedominter.net)
[16:46:22] <wyre> maybe I don't have anything because all are 0s 🤔
[16:46:32] <wyre> so the scope is not drawing it
[16:47:18] <kosh> if you have enough Os you can put them in a bowl with milk and eat them ;)
[16:48:23] *** Joins: sed (~sed@pool-100-7-38-116.rcmdva.fios.verizon.net)
[16:49:03] *** Joins: Auron (Auron956@user/auron)
[16:50:16] <wyre> lol
[16:50:23] <supakeen> 1 = CS, 2 = MOSI, 3 = MISO, 4 = CLK?
[16:50:35] *** Quits: ExeciN (~ExeciN@user/nicexe) (Remote host closed the connection)
[16:50:53] *** Joins: ExeciN (~ExeciN@user/nicexe)
[16:50:56] <wyre> supakeen, 3 = MOSI and 2 = MISO
[16:51:06] <wyre> sorry
[16:51:09] <wyre> 3 = CS
[16:51:14] <wyre> 1 is MOSE
[16:51:23] <wyre> s/MOSE/MOSI/
[16:51:37] *** Joins: vince (~vince@75.127.14.76)
[16:51:41] <wyre> 1 = MOSI, 2 = MISO, 3 = CS, 4 = CLK
[16:51:50] <supakeen> can you zoom in a bit?
[16:52:18] <supakeen> (and put CLK above MOSI/MISO)
[16:53:00] *** Quits: digilink (~digilink@user/digilink) (Quit: WeeChat 3.2)
[16:53:04] <supakeen> most of it seems normal but those traces for MOSI don't correspond to the paste
[16:53:30] *** Quits: CatCow (~wtf_over@c-73-96-109-206.hsd1.or.comcast.net) (Quit: Textual IRC Client: www.textualapp.com)
[16:53:31] *** Joins: digilink (~digilink@user/digilink)
[16:54:03] <supakeen> (also double check bit order)
[16:54:17] *** Quits: yates_work (~user@fv-nc-f7af8b91e1-234237-1.tingfiber.com) (Remote host closed the connection)
[16:55:26] *** Joins: mertsas (~martin@ti0185q160-2775.bb.online.no)
[16:57:46] <wyre> supakeen, https://i.imgur.com/kTsxYW4.png
[16:57:55] <wyre> you mean to set the lsb to be sent first?
[16:58:27] <supakeen> yes
[16:58:53] <supakeen> might be noted in the spec sheet, but those are the two normal things
[16:59:17] <supakeen> and verify that you are in correct cpol/mode with the datasheet as well
[16:59:23] <supakeen> (it might mention both of these things)
[16:59:41] <wyre> cpol?
[16:59:42] <supakeen> it's clear that you are sending a 00000010 and then a 00000000 but the slave is not sending anything back
[16:59:46] <supakeen> clock polarity
[16:59:46] <mertsas> Is there a way to control the asyncio clock in tests? I want to test that a function is called after a timeout (the code uses asyncio.sleep). But I have no way of moving the asyncio clock forward
[17:00:11] <supakeen> wyre: SPI has a 'CPOL' and 'PHASE' setting that determine when data is valid
[17:00:39] *** Joins: ARoxdale (~ARoxdale@84.203.25.150)
[17:01:13] *** Joins: TranquilEcho (~grom@user/tranquilecho)
[17:01:13] *** Joins: NeilRG (~NeilRG@192.222.196.111)
[17:01:16] <supakeen> CPOL=0 = CLK active high, CPOL=1 = CLK active low. PHASE=0 valid on rising edge of CLK, PHASE=1 valid on falling edge of CLK something like that
[17:01:23] <supakeen> it's likely there's a mismatch on either or any of those
[17:02:33] *** Joins: fdan (~fdan@103.215.168.1)
[17:05:10] *** Quits: NeilRG (~NeilRG@192.222.196.111) (Ping timeout: 240 seconds)
[17:07:16] *** Quits: upsala (~zcb@185.213.155.160) (Read error: Connection reset by peer)
[17:07:31] *** Joins: upsala (~zcb@185.213.155.160)
[17:10:48] *** Quits: slav0nic (slav0nic@python.su) (Remote host closed the connection)
[17:11:04] *** Joins: cedric (~cedric@2a01:cb11:821:7c00:72b3:8648:bea3:1005)
[17:11:17] *** Joins: pycode (~pycode@2001:b07:5d28:551:2f9f:c4de:e283:dfa2)
[17:12:30] *** Parts: gerikson (~gerikson@user/gerikson) ()
[17:12:52] *** Joins: gustaf (~gerikson@user/gerikson)
[17:13:10] *** Quits: tecnico (~tecnico@136.53.93.11) (Quit: Client closed)
[17:13:23] *** Quits: fikran (~fikran@user/fikran) (Ping timeout: 268 seconds)
[17:14:30] *** Quits: theprophet (~theprophe@85.114.228.184) (Quit: Client closed)
[17:14:44] *** Quits: stranac (~stranac@195.29.239.126) (Read error: Connection reset by peer)
[17:15:01] *** Joins: p-i-_ (~Ohmu@mx-ll-223.206.145-156.dynamic.3bb.co.th)
[17:15:03] *** Joins: fikran (~fikran@user/fikran)
[17:16:24] *** Joins: jim87 (~quassel@93.55.249.30)
[17:16:48] *** Joins: System123 (~System123@203-134-35-213.sta.estpak.ee)
[17:18:14] *** Quits: cheater (~Username@user/cheater) (Ping timeout: 260 seconds)
[17:18:19] <jim87> Hello! I'm building a docker image using pipenv (via pipenv install --system --clear). I've noticed though that some dependencies (like python-dotenv) are being stored under /usr/local/lib/python3.9/site-packages/pipenv/vendor/<package name>, instead of two folders behind, while other dependencies are being correctly installed in /usr/local/lib/python3.9/site-packages - why is pipenv behaving like this? Thanks :)
[17:18:32] *** Quits: Gerula (~Gerula@user/gerula) (Ping timeout: 268 seconds)
[17:18:33] *** Joins: cheater (~Username@user/cheater)
[17:18:56] *** Quits: p-i- (~Ohmu@mx-ll-223.206.145-156.dynamic.3bb.co.th) (Ping timeout: 268 seconds)
[17:19:50] *** Quits: mIk3_08 (~Thunderbi@user/mik3-08/x-2852566) (Quit: mIk3_08)
[17:20:06] *** Joins: slowButPresent (~slowButPr@user/slowbutpresent)
[17:20:58] *** Joins: Gerula (~Gerula@user/gerula)
[17:21:10] *** Joins: raxor2k (~raxor2k@78.158.248.203)
[17:21:18] *** Quits: System123 (~System123@203-134-35-213.sta.estpak.ee) (Ping timeout: 265 seconds)
[17:21:20] <raxor2k> jinsun: https://bpa.st/GRWA   here is code and project tree and traceback
[17:21:47] *** Joins: tecnico (~tecnico@136.53.93.11)
[17:21:55] *** Joins: erhandsome (~erhandsom@user/erhandsome)
[17:23:59] *** Joins: nomic (~nomic@185.192.69.176)
[17:24:10] *** Quits: Bronto22 (~mennoh@2a02:a46b:4db0:1:5604:a6ff:fe37:3044) (Quit: Konversation terminated!)
[17:24:11] *** Joins: dld (~davidlowr@2620:6e:6000:2900:d1f0:b8f0:860c:6bfb)
[17:25:02] *** Quits: DnzAtWrk (~DnzAtWrk@mobile-access-6df0f7-64.dhcp.inet.fi) (Read error: Connection reset by peer)
[17:25:10] *** Quits: pretty_d1 (trottel@gateway/vpn/protonvpn/prettydummguy/x-88029655) (Ping timeout: 265 seconds)
[17:25:34] *** Quits: PCatinean (~pcatinean@5-12-192-32.residential.rdsnet.ro) (Remote host closed the connection)
[17:25:42] *** Quits: betelgeuse (~betelgeus@94-225-47-8.access.telenet.be) (Ping timeout: 260 seconds)
[17:25:52] *** Joins: pretty_d1 (trottel@gateway/vpn/protonvpn/prettydummguy/x-88029655)
[17:26:22] *** Joins: FFY00_ (~FFY00@archlinux/trusteduser/ffy00)
[17:26:22] *** Joins: gggp (~textual@111.63.44.11)
[17:26:46] *** Joins: NeilRG (~NeilRG@192.222.196.111)
[17:27:27] *** Joins: betelgeuse (~betelgeus@94-225-47-8.access.telenet.be)
[17:27:52] *** Quits: FFY00 (~FFY00@archlinux/trusteduser/ffy00) (Ping timeout: 252 seconds)
[17:28:14] *** Quits: fdan (~fdan@103.215.168.1) (Ping timeout: 256 seconds)
[17:28:28] *** Joins: sn1tch3r (~sn1tch3r@user/sn1tch3r)
[17:28:33] *** Quits: sn1tch3r (~sn1tch3r@user/sn1tch3r) (Remote host closed the connection)
[17:28:58] *** Joins: mrgz (~mrgz@201-42-0-191.dsl.telesp.net.br)
[17:30:39] *** Joins: cashew (~cashugh@user/cashew)
[17:31:04] *** Quits: tecnico (~tecnico@136.53.93.11) (Quit: Client closed)
[17:31:12] *** Joins: magla (~gelignite@55d46203.access.ecotel.net)
[17:31:19] *** Joins: DnzAtWrk (~DnzAtWrk@mobile-access-6df0f7-64.dhcp.inet.fi)
[17:31:28] *** Joins: acresearch (~acresearc@user/acresearch)
[17:31:54] *** Quits: akinode (~akinode@2a02:908:1394:cce0:a961:9313:f5e0:52ab) (Quit: Client closed)
[17:32:03] *** Joins: FFY00 (~FFY00@archlinux/trusteduser/ffy00)
[17:32:32] *** Joins: atrigent (~atrigent@c-73-69-68-26.hsd1.ma.comcast.net)
[17:33:44] *** Quits: oprypin (~irc@pryp.in) (Ping timeout: 268 seconds)
[17:35:11] *** Quits: FFY00_ (~FFY00@archlinux/trusteduser/ffy00) (Ping timeout: 268 seconds)
[17:35:12] *** Quits: otisolsen70 (~otisolsen@xd4ed80b5.cust.hiper.dk) (Quit: Leaving)
[17:35:33] <jinsun> raxor2k: oh does the main.py only have that function definition? you have to define the `students_from_db_list` outside the function too
[17:35:34] *** Quits: atrigent (~atrigent@c-73-69-68-26.hsd1.ma.comcast.net) (Client Quit)
[17:35:44] *** Joins: odoood (~odoood@2601:c8:c003:a550::3)
[17:35:44] <wyre> supakeen, well, as you see I'm using spi.mode=0x11
[17:36:03] <wyre> what do you think is wrong? the PHASE or CPOL?
[17:36:39] *** Quits: Pickchea (~private@user/pickchea) (Quit: Leaving)
[17:37:42] <raxor2k> jinsun: i have done that, i tried that aswell
[17:38:26] <raxor2k> ModuleNotFoundError: No module named 'fastapi_restapi.folder_with_files.fastapi_restapi'
[17:38:40] *** Quits: vbgunz (~vbgunz@35.141.71.47) (Quit: Konversation terminated!)
[17:38:44] <raxor2k> strange as the class is inside that folder ..
[17:39:53] *** Joins: zeden (~zeden@user/zeden)
[17:40:05] *** Joins: vbgunz (~vbgunz@35.141.71.47)
[17:41:06] *** Quits: gggp (~textual@111.63.44.11) (Quit: My MacBook has gone to sleep. ZZZzzz…)
[17:41:56] *** Joins: Wuniu (~Thunderbi@user/wuniu)
[17:42:43] *** Quits: gizmo_ (~gizmo@45.91.125.2) (Ping timeout: 252 seconds)
[17:42:44] *** Quits: puff (~user@S0106d4ca6d80a83c.vs.shawcable.net) (Read error: Connection reset by peer)
[17:42:57] *** Joins: puff (~user@S0106d4ca6d80a83c.vs.shawcable.net)
[17:43:06] <jinsun> well, try it again, paste the new code after that
[17:44:55] *** Joins: shad1 (~shad@user/shad)
[17:45:39] *** Joins: oprypin (~irc@pryp.in)
[17:46:35] *** Quits: stkrdknmibalz (~test@rrcs-75-87-43-226.sw.biz.rr.com) (Quit: WeeChat 3.0.1)
[17:46:45] *** Joins: harpia (~harpia@58.148.205.168.dynamic.vibefibra.com.br)
[17:46:47] *** Joins: MercilessDeth (~brad@136.49.61.2)
[17:47:46] *** Joins: slee (~slee@user/slee)
[17:48:02] <paul424> How do I find the element where the intersection of two singly linked lists begins? ( by google translate )  does this question have any sense ?
[17:48:15] *** Joins: ozoned (~odoood@2601:c8:c003:a550::1)
[17:48:16] *** Joins: atrigent (~atrigent@c-73-69-68-26.hsd1.ma.comcast.net)
[17:48:23] *** Joins: Wubull (~Thunderbi@user/wuniu)
[17:48:33] <slee> hi, wondering if it's possible to control firefox with python...like say have python enter a song name into the youtube webpage and hit play, etc
[17:48:51] *** Quits: shad (~shad@user/shad) (Ping timeout: 265 seconds)
[17:49:09] *** Quits: Wuniu (~Thunderbi@user/wuniu) (Ping timeout: 268 seconds)
[17:49:09] *** Wubull is now known as Wuniu
[17:49:27] *** Quits: sp0fp12 (~sp0f.p12@user/sp0fp12) (Quit: WeeChat 3.2.1)
[17:50:36] *** Quits: odoood (~odoood@2601:c8:c003:a550::3) (Ping timeout: 268 seconds)
[17:51:50] *** Quits: Cheaterman (~cheaterma@user/cheaterman) (Ping timeout: 268 seconds)
[17:51:51] *** Quits: raxor2k (~raxor2k@78.158.248.203) ()
[17:51:59] *** Joins: gggp (~textual@221.219.70.207)
[17:52:16] <paul424> it;s
[17:52:51] *** Quits: ozoned (~odoood@2601:c8:c003:a550::1) (Ping timeout: 268 seconds)
[17:53:23] <paul424> pardon , is it like (1 2 3 4 5 6 7 8) and ( 54 55 56 57 3 4 5 58 59 ) the answer would be ( 3 4 5) . Is it what the question ask ?
[17:54:32] *** Joins: Wubull (~Thunderbi@user/wuniu)
[17:55:51] *** Joins: georgios (~georgios@user/georgios)
[17:55:59] <wyre> supakeen, this is with 0x10 mode https://i.imgur.com/NFrl5XW.png also you can see the commands ... first one is 0x06 (0b00000110) and the second one is the RDSR command (0x05 = 0b00000101)
[17:56:07] <wyre> but I cannot see any returning signal 😥
[17:56:33] *** Quits: Wuniu (~Thunderbi@user/wuniu) (Ping timeout: 268 seconds)
[17:56:34] *** Wubull is now known as Wuniu
[17:59:06] <raek> slee: something like this is often used for testing. there is a test framework called selenium for testing web pages thorugh a browser that uses "web drivers". this seems to be the selenium web driver for firefox: https://www.selenium.dev/selenium/docs/api/javascript/module/selenium-webdriver/firefox.html
[17:59:10] <raek> selenium has a python API
[17:59:12] *** Joins: Wubull (~Thunderbi@user/wuniu)
[17:59:16] <raek> (but I haven't used it myself)
[18:00:08] <wyre> supakeen, "The 48L640 supports the two most common modes, SPI Modes 0 and 3." so SPI mode 3 should be enough
[18:01:13] *** Quits: Samian (~Sami@user/samian) (Quit: Textual IRC Client: www.textualapp.com)
[18:01:16] <slee> raek, yes, already found selenium just after asking...thanks
[18:01:29] *** Quits: Wuniu (~Thunderbi@user/wuniu) (Ping timeout: 268 seconds)
[18:01:29] *** Wubull is now known as Wuniu
[18:03:35] *** Quits: ole_ (~ole_@84.46.68.3) (Quit: Connection closed)
[18:04:51] <supakeen> wyre: it should be yes but you are clearly not getting data back, does it describe anything about the bit order?
[18:05:08] *** Quits: elkclone (~elkclone@user/elkclone) (Quit: Leaving)
[18:05:11] *** Joins: aleks (~aleks@user/aleks)
[18:05:13] <supakeen> (or have you tried the other bit order)
[18:05:26] <wyre> supakeen, I can see in the signal diagrams the msb is at left
[18:05:33] <wyre> so I guess that's also right
[18:05:36] <supakeen> mrm then i don't know!
[18:05:56] <supakeen> it should be sending data back with the correct commands and the correct settings
[18:06:21] *** Joins: fdan (~fdan@192.146.154.3)
[18:06:25] <supakeen> you did try RDSR without doing the 'enable WEL' first as well right?
[18:06:36] <supakeen> anyways -> gotta go good luck
[18:06:58] <wyre> supakeen, I've tried, the problem with this is that I'm not sure if the contents of the STATUS register are all 0 by default
[18:07:23] <supakeen> (its not even sending 0s)
[18:07:37] <supakeen> MISO isn't pulled low at all
[18:07:58] *** Joins: Pickchea (~private@user/pickchea)
[18:08:08] <supakeen> anyways really have to run maybe later :)
[18:08:12] *** Joins: Wubull (~Thunderbi@user/wuniu)
[18:08:18] *** Quits: Mattiaslndstrm (~Mattiasln@c188-148-207-108.bredband.tele2.se) (Quit: My MacBook has gone to sleep. ZZZzzz…)
[18:08:53] *** Quits: Wuniu (~Thunderbi@user/wuniu) (Ping timeout: 268 seconds)
[18:08:53] *** Wubull is now known as Wuniu
[18:09:03] <wyre> https://imgur.com/MexFrQ8.png supakeen according with this bit 1 in the STATUS register should show the write enable latch status
[18:10:02] *** Quits: loworderbit (~dave@S0106e81cba1736ea.ss.shawcable.net) (Ping timeout: 260 seconds)
[18:10:31] *** Joins: spuz (~spuz@213.129.88.97)
[18:10:31] *** Joins: loworderbit (~dave@S0106e81cba1736ea.ss.shawcable.net)
[18:10:44] *** Quits: oprypin (~irc@pryp.in) (Ping timeout: 268 seconds)
[18:10:45] *** Joins: xrogaan (~xrogaan@user/xrogaan)
[18:11:42] <Lartza> Is using __kwdefaults__ bad?
[18:11:50] *** Quits: ravish0007 (~quassel@ec2-65-0-45-121.ap-south-1.compute.amazonaws.com) (Quit: https://quassel-irc.org - Chat comfortably. Anywhere.)
[18:11:51] <Lartza> I'm trying to iterate over named keyword arguments
[18:12:56] *** Quits: vvdaiwrw (~rvgzuuqp@gateway/tor-sasl/rvgzuuqp) (Quit: vvdaiwrw)
[18:13:00] *** Quits: fdan (~fdan@192.146.154.3) (Ping timeout: 256 seconds)
[18:13:09] *** Joins: ravish0007 (~quassel@ec2-65-0-45-121.ap-south-1.compute.amazonaws.com)
[18:13:23] *** Parts: slee (~slee@user/slee) (Leaving)
[18:13:23] <rendar> does cpython exposes some APIs for asyncio?
[18:13:40] *** Joins: gizmo_ (~gizmo@45.91.125.2)
[18:13:52] *** Joins: vvdaiwrw (~rvgzuuqp@gateway/tor-sasl/rvgzuuqp)
[18:14:15] *** Joins: GreenResponse (~tomek@r-45-155-148-237.gpon.bialnet.pl)
[18:14:30] *** Quits: loworderbit (~dave@S0106e81cba1736ea.ss.shawcable.net) (Read error: Connection reset by peer)
[18:14:31] *** Joins: loworder1it (~dave@s0106e81cba1736ea.ss.shawcable.net)
[18:16:24] *** Quits: nomic (~nomic@185.192.69.176) (Quit: Leaving)
[18:16:38] *** Joins: EvilDMP (~textual@django/moderator/EvilDMP)
[18:17:51] *** Quits: y1n (~y1n@046125249093.public.t-mobile.at) (Ping timeout: 265 seconds)
[18:19:09] *** shad1 is now known as shad
[18:19:10] *** Quits: mozgalom (~mozgalom@IPnet-gw.157.157.97.111.simnet.is) (Quit: My MacBook has gone to sleep. ZZZzzz…)
[18:19:47] *** Quits: ubert (~Thunderbi@178.115.54.21.wireless.dyn.drei.com) (Ping timeout: 265 seconds)
[18:20:00] <Lartza> Actually my iteration idea was just scrapped anyways
[18:22:52] *** Quits: EvilDMP (~textual@django/moderator/EvilDMP) (Quit: My MacBook has gone to sleep. ZZZzzz…)
[18:27:53] *** Joins: oprypin (~irc@pryp.in)
[18:28:05] *** Joins: daoudr_ (~daoudr@2a02:1205:c681:1650:fa7a:c1a4:79b3:bac6)
[18:29:24] *** Joins: computeiro (~Wender@189.37.65.143)
[18:30:35] *** Quits: djhankb (~djhankb@208.113.164.68) (Remote host closed the connection)
[18:30:41] *** Quits: daoudr (~daoudr@178.197.216.245) (Ping timeout: 268 seconds)
[18:30:55] *** Joins: ubert (~Thunderbi@77.119.166.250.wireless.dyn.drei.com)
[18:31:08] *** Joins: djhankb (~djhankb@208.113.164.68)
[18:31:38] <wyre> supakeen, apparently the problem could be I'm writing the RSDR in a different time than the reading operation, could I do write and read operations in some way?
[18:33:07] *** Gamah is now known as gamah
[18:33:11] *** Joins: vimart (~vimart@239.218-30-62.static.virginmediabusiness.co.uk)
[18:33:44] *** Joins: RougeR (~rougex250@user/rouger)
[18:34:43] *** Quits: gggp (~textual@221.219.70.207) (Quit: My MacBook has gone to sleep. ZZZzzz…)
[18:35:17] *** Joins: fdan (~fdan@103.215.168.1)
[18:36:18] *** Joins: theprophet (~theprophe@85.114.228.184)
[18:37:54] *** Quits: ubert (~Thunderbi@77.119.166.250.wireless.dyn.drei.com) (Remote host closed the connection)
[18:37:55] <rendar> for every exception occurred into coroutine inside a Task, i should call task.exception() right?
[18:37:57] *** Quits: daoudr_ (~daoudr@2a02:1205:c681:1650:fa7a:c1a4:79b3:bac6) (Quit: Leaving)
[18:38:12] *** Joins: ubert (~Thunderbi@77.119.166.250.wireless.dyn.drei.com)
[18:40:57] *** Quits: NeilRG (~NeilRG@192.222.196.111) (Remote host closed the connection)
[18:41:32] *** Joins: NeilRG (~NeilRG@192.222.196.111)
[18:41:54] *** Joins: Vornicus (~Vornicus@2603-8000-5d07-7ef0-6464-9c9f-11e3-7f03.res6.spectrum.com)
[18:42:27] *** Quits: Sadale (~Sadale@user/sadale) (Read error: Connection reset by peer)
[18:43:32] *** Joins: bauripalash (~bauripala@2401:4900:1228:e95f:2879:e44:50de:4e1f)
[18:43:54] *** Joins: phonemic (~phonemic@104-60-219-66.lightspeed.nsvltn.sbcglobal.net)
[18:44:06] *** Joins: justsomeguy (~justsomeg@user/justsomeguy)
[18:44:37] *** Joins: Sadale (~Sadale@user/sadale)
[18:45:40] <wyre> supakeen, as you can see here https://i.imgur.com/yeaZhqi.png and here https://bpa.st/3JYA I had to write two bytes to have the STATUS register byte
[18:45:40] *** Quits: NeilRG (~NeilRG@192.222.196.111) (Ping timeout: 240 seconds)
[18:45:46] *** Joins: vats (~vats@103.70.83.191)
[18:46:00] <wyre> so I have to mix the write and read operations! 😥
[18:46:12] <wyre> and I'm not sure how to do this with spidev
[18:46:47] *** Joins: bauripalash1 (~Thunderbi@2401:4900:1228:e95f:2879:e44:50de:4e1f)
[18:47:04] *** Quits: bauripalash1 (~Thunderbi@2401:4900:1228:e95f:2879:e44:50de:4e1f) (Client Quit)
[18:47:11] *** Quits: RougeR (~rougex250@user/rouger) (Quit: Leaving)
[18:47:17] *** Joins: Naan (~Naan@user/naan)
[18:47:21] <wyre> or if this is technically possible, even
[18:47:27] <wyre> what do you think The-Compiler?
[18:47:38] <rendar> any help?
[18:48:41] *** Quits: fdan (~fdan@103.215.168.1) (Ping timeout: 256 seconds)
[18:49:33] <supakeen> wyre: you need to cycle the clock for SPI
[18:49:44] <supakeen> the master is controlling everything; perhaps spidev has a method to do so
[18:50:01] <supakeen> the fact that it responds on your 'second command' has little to do with having to send two commands and more with that it cycles the clock
[18:50:02] <wyre> supakeen, to cycle the clock? 🤔
[18:50:06] *** Joins: impermanence (~impermane@73.94.243.213)
[18:50:42] <supakeen> wyre: SPI puts data on the MISO/MOSI for every clock edge, both the master and the slave do this at the same time after you send a command the slave wants to send data back but it can only do so if the master runs the clock
[18:50:49] <wyre> I mean, right now I'm not having any problem obtaining a response from the IC, the problem right now is how to store this response in a variable
[18:50:49] *** Quits: oprypin (~irc@pryp.in) (Ping timeout: 268 seconds)
[18:51:33] *** Joins: Mattiaslndstrm (~Mattiasln@c188-148-207-108.bredband.tele2.se)
[18:51:35] <supakeen> wyre: try a `spi.writebytes([RDSR]); spi.readbytes(1)`.
[18:51:43] <wyre> supakeen, maybe with the delay_usec for xfer method? https://pypi.org/project/spidev/
[18:52:36] <wyre> supakeen, nope, it splits the write and read operations
[18:53:01] <supakeen> wyre: in that case, does `spi.writebytes([RDSR, 0])`, `spi.readbytes(1)` get you the response?
[18:53:11] <supakeen> it likely reads the response into an internal buffer
[18:53:42] <wyre> I have the response but along the 16bit stream, when it executes spi.readbytes(1) I have a 0
[18:53:59] *** Quits: bauripalash (~bauripala@2401:4900:1228:e95f:2879:e44:50de:4e1f) (Quit: Client closed)
[18:54:23] *** Joins: bauripalash (~Thunderbi@2401:4900:1228:e95f:2879:e44:50de:4e1f)
[18:54:46] *** Parts: bauripalash (~Thunderbi@2401:4900:1228:e95f:2879:e44:50de:4e1f) ()
[18:54:53] *** Joins: Cheaterman (~cheaterma@user/cheaterman)
[18:55:01] <supakeen> i'm not entirely sure on how it works in `spidev` then, but it's 'normal' for SPI to only send data on a 'second command' (aka: when the clock starts cycling again)
[18:55:06] *** Joins: bauripalash (~Thunderbi@2401:4900:1228:e95f:2879:e44:50de:4e1f)
[18:56:21] <wyre> well, the waveform in the datasheet is clear https://imgur.com/EXUAZGv.png
[18:56:47] <wyre> you got the STATUS register contents just after have sent RDSR
[18:57:26] <paul424> How do I find the sum of two lists using a stack? ( also by google translate ) does this make any sense ? SUM OF
[18:57:55] *** Quits: matthewwilkes (sid500242@highgate.irccloud.com) ()
[18:58:00] *** Joins: junktext (~junktext@77.247.181.215)
[18:58:09] <wyre> supakeen, also is the same for normal READ operations https://imgur.com/SIRSTq9.png
[18:58:13] *** Joins: matthewwilkes (sid500242@id-500242.uxbridge.irccloud.com)
[18:58:29] <wyre> so I'd need to use readbytes at same time than writebytes
[18:59:49] <supakeen> wyre: the datasheet has the clock pulsing 16 times (2x8)
[18:59:49] *** Quits: cedric (~cedric@2a01:cb11:821:7c00:72b3:8648:bea3:1005) (Quit: Konversation terminated!)
[19:00:02] <wyre> sure
[19:00:22] <wyre> do you mean should I use 16bits per word?
[19:00:28] <supakeen> no
[19:00:32] <ska> Can I specify dev requirements in pyproject.toml and have pip see those with a 'pip install -e .[dev]' for example?
[19:00:35] <jinsun> paul424: doesn't make much sense really, what does sum of two lists mean?
[19:00:59] <paul424> yeah that's why I am scratching my head ...
[19:01:23] <supakeen> but i'm not sure how spidev doesn't work with readbytes (after you send [RDSR, 0]).
[19:01:41] *** Joins: Samian (~Sami@user/samian)
[19:02:11] *** Quits: herjazz (~herjazz@p6758124-ipngn30801marunouchi.tokyo.ocn.ne.jp) (Quit: leaving)
[19:02:19] *** Quits: pierrepaul (sid504261@highgate.irccloud.com) ()
[19:02:24] <wyre> supakeen, yeah, the problem actually is the device is working because I can see it in the scope, but the spidev module hasn't apparently a way to store the product of that transmission into a variable
[19:02:30] *** Joins: oprypin (~irc@pryp.in)
[19:02:35] <supakeen> wyre: aha, it seems that '.writebytes' is the wrong method to use (reading docs), you should use `data = spi.xfer([RDSR, 0])`.
[19:02:37] *** Joins: pierrepaul (sid504261@id-504261.uxbridge.irccloud.com)
[19:03:36] <wyre> supakeen, I've tried that also, I have a list of zeroes
[19:03:48] <Samian> I'm pissed there's so much I don't know. I can't tell when a call is async under the hood or not. Is that even possible?  Suppose the code line is a = somefunction().  Is it possible for this call to return before the value of 'a' is calculated?  I don't think that's how python works
[19:03:54] <jinsun> ska: depends on the backend, setuptools doesn't have that functionality, but other backends like poetry and flit probably do
[19:03:59] <supakeen> wyre: did you try it with the double command or with just [RDSR]?
[19:04:28] *** Joins: Moosadee (~Moosadee@136.32.155.193)
[19:04:39] <wyre> https://bpa.st/4PSQ that code produces the following https://bpa.st/CMJA, supakeen
[19:04:49] <wyre> but the behaviour in the scope is good
[19:04:55] <paul424> jinsun, after googling I discovered that the lists should contain digits  and the solution is to do the school - in - a - row - addition with carriage
[19:04:56] *** Joins: NeilRG (~NeilRG@192.222.196.111)
[19:05:04] <wyre> I can see the 1 in the SO line
[19:05:05] *** Joins: russw (~russw@bras-base-otwaon0150w-grc-06-184-147-146-48.dsl.bell.ca)
[19:05:14] <supakeen> wyre: weird :(
[19:05:19] *** Joins: Wubull (~Thunderbi@user/wuniu)
[19:05:27] <russw> Anyone know an easy way get PyYaml to dump a pathlib.Path as a string instead of as a complex python object dump like !!python/object/apply:pathlib.PosixPath ?
[19:05:37] *** Quits: Wuniu (~Thunderbi@user/wuniu) (Ping timeout: 268 seconds)
[19:05:37] *** Wubull is now known as Wuniu
[19:05:55] <wyre> supakeen, I'm not sure where could I ask about spidev 😥
[19:05:58] <jinsun> paul424: oh with carry and all
[19:05:59] *** Joins: mozgalom (~mozgalom@194.144.47.113)
[19:06:08] <paul424> https://www.geeksforgeeks.org/add-two-numbers-represented-by-linked-lists/
[19:07:23] *** Quits: jpic (~jpic@82.142.2.146) (Remote host closed the connection)
[19:08:00] *** Quits: Mattiaslndstrm (~Mattiasln@c188-148-207-108.bredband.tele2.se) (Quit: My MacBook has gone to sleep. ZZZzzz…)
[19:08:16] *** Joins: pyre (~pyre@crimeboss.nillas-power.com)
[19:08:24] *** Joins: gggp (~textual@60.10.23.172)
[19:09:18] *** Quits: NeilRG (~NeilRG@192.222.196.111) (Ping timeout: 260 seconds)
[19:10:46] *** Quits: magla (~gelignite@55d46203.access.ecotel.net) (Quit: Stay safe!)
[19:11:08] *** Quits: Hackerpcs (~user@user/hackerpcs) (Quit: Hackerpcs)
[19:11:43] *** Quits: Moosadee (~Moosadee@136.32.155.193) (Remote host closed the connection)
[19:12:08] *** Quits: Wuniu (~Thunderbi@user/wuniu) (Quit: I'm tired, have a good time!)
[19:12:32] *** Joins: Moosadee (~Moosadee@136.32.155.193)
[19:12:38] *** Quits: Falc (~Falc@193.191.206.243) (Quit: Leaving)
[19:13:08] *** Quits: vvdaiwrw (~rvgzuuqp@gateway/tor-sasl/rvgzuuqp) (Quit: vvdaiwrw)
[19:13:27] <jinsun> Samian: you can tell if the function is async def using https://docs.python.org/3/library/inspect.html#inspect.iscoroutinefunction, but that a = somefunction() part I didn't understand
[19:13:29] *** Joins: theseb (~cs@47-220-214-54.cnrocmta03.res.dyn.suddenlink.net)
[19:13:48] *** Joins: Hackerpcs (~user@user/hackerpcs)
[19:14:03] *** Quits: Halven (sid515085@highgate.irccloud.com) ()
[19:14:09] <Samian> jinsun  do you remember where did you learn that? Any book in particular?
[19:14:18] *** Joins: Halven (sid515085@id-515085.uxbridge.irccloud.com)
[19:14:56] *** Joins: medium_cool (~medium_co@2605:a601:a9ed:4300:2d00:540d:12b4:8792)
[19:15:05] *** Quits: spuz (~spuz@213.129.88.97) (Quit: Client closed)
[19:15:06] *** Joins: ham5urg (~ham5urg@2a04:4540:680a:400:79b5:f145:ab4f:521e)
[19:15:17] *** Quits: leduyquang753 (~leduyquan@user/leduyquang753) (Quit: Gotta go, see you guys later.)
[19:15:50] *** Quits: medium_cool (~medium_co@2605:a601:a9ed:4300:2d00:540d:12b4:8792) (Client Quit)
[19:16:05] <ham5urg> Is it correct to load a constant from __init__.py from a file right next to it?
[19:16:32] <ham5urg> or is this the wrong way around?
[19:17:03] <jinsun> Samian: you mean that iscoroutinefunction? I just suspected something like that will be present in the inspect module and Ctrl+F ed in the docs, and I knew about inspect because of some stackoverflow answer about something else I was searching
[19:17:28] *** Joins: System123 (~System123@203-134-35-213.sta.estpak.ee)
[19:18:48] <Samian> jinsun  I just want to know as much about python as you
[19:20:38] *** Quits: oprypin (~irc@pryp.in) (Ping timeout: 268 seconds)
[19:20:55] *** Quits: wob_jonas (~wob_jonas@business-37-191-60-209.business.broadband.hu) (Quit: Client closed)
[19:21:47] *** Quits: akimbo (~thelounge@customer-145-40-27-9.stosn.net) (Quit: Ping timeout (120 seconds))
[19:22:16] *** Quits: System123 (~System123@203-134-35-213.sta.estpak.ee) (Ping timeout: 268 seconds)
[19:22:40] *** Quits: fikran (~fikran@user/fikran) (Ping timeout: 252 seconds)
[19:23:04] *** Quits: frost (~frost@59.71.242.61) (Quit: Connection closed)
[19:23:41] <jinsun> no idea about books, I just use books for the basics, after that just diving into problems and googling if you get stuck works most of the time :D
[19:24:25] *** Joins: fikran (~fikran@user/fikran)
[19:24:28] *** Quits: portalrat (~portalrat@user/portalrat) (Quit: Leaving)
[19:25:28] *** Joins: waxfire82 (~waxfire@65.119.2.240)
[19:25:50] *** drew` is now known as drew
[19:26:04] *** waxfire82 is now known as waxfire
[19:27:00] *** Quits: ubert (~Thunderbi@77.119.166.250.wireless.dyn.drei.com) (Quit: ubert)
[19:27:14] *** Joins: ubert (~Thunderbi@77.119.166.250.wireless.dyn.drei.com)
[19:27:28] *** Quits: ExeciN (~ExeciN@user/nicexe) (Remote host closed the connection)
[19:27:39] *** Parts: justsomeguy (~justsomeg@user/justsomeguy) (WeeChat 3.2)
[19:27:48] *** Joins: hnOsmium0001 (uid453710@id-453710.stonehaven.irccloud.com)
[19:29:53] *** Quits: bauripalash (~Thunderbi@2401:4900:1228:e95f:2879:e44:50de:4e1f) (Quit: bauripalash)
[19:30:27] *** Quits: lastshell (~lastshell@user/lastshell) (Ping timeout: 245 seconds)
[19:30:41] *** Joins: lastshell (~lastshell@user/lastshell)
[19:31:52] *** Joins: oprypin (~irc@pryp.in)
[19:32:03] <anddam> howdy, I have a package that I am releasing as binary using a (modified) py2exe, while building the site-packages at each build .pyc files change due to different timestamp, albeit having always the same version, i.e. I am only updating my package code, not its dependencies in setuptools
[19:32:20] <marduk> Anyone know of anything changing with markupsafe. I had a hash for version 1.1.1 in my Pipfile.lock and it doesn't seem to be on pypi anymore. But that version is pretty old (from 2019)
[19:32:20] *** Quits: ubert (~Thunderbi@77.119.166.250.wireless.dyn.drei.com) (Read error: Connection reset by peer)
[19:32:32] <anddam> question: am I just missing wheel here? if not is there a way to cache those built dependencies?
[19:32:37] *** Joins: ubert (~Thunderbi@77.119.166.250.wireless.dyn.drei.com)
[19:33:19] *** Quits: puff (~user@S0106d4ca6d80a83c.vs.shawcable.net) (Read error: Connection reset by peer)
[19:33:32] *** Joins: puff (~user@S0106d4ca6d80a83c.vs.shawcable.net)
[19:33:46] *** Joins: pro_z (~pro_z@37.214.66.151)
[19:33:52] *** Parts: theseb (~cs@47-220-214-54.cnrocmta03.res.dyn.suddenlink.net) (Leaving)
[19:33:58] *** Joins: mefistofeles (~mefistofe@user/mefistofeles)
[19:34:01] *** Joins: tbcr (~tbcr@user/tbcr)
[19:35:03] *** Joins: portalrat (~portalrat@user/portalrat)
[19:35:16] *** Quits: Zer0xFF (m-3laxwu@matrix.michaelsasser.org) (Remote host closed the connection)
[19:35:47] *** Quits: paul424 (~tom@apn-31-0-25-75.dynamic.gprs.plus.pl) (Remote host closed the connection)
[19:37:11] *** Joins: Zer0xFF (m-3laxwu@matrix.michaelsasser.org)
[19:37:41] *** Quits: ubert (~Thunderbi@77.119.166.250.wireless.dyn.drei.com) (Ping timeout: 268 seconds)
[19:38:04] *** Quits: gggp (~textual@60.10.23.172) (Ping timeout: 252 seconds)
[19:40:30] *** Joins: gggp (~textual@60.10.194.48)
[19:40:30] *** Joins: aead (~aead@user/aead)
[19:41:12] *** Quits: BlessJah (~BlessJah@user/blessjah) (Remote host closed the connection)
[19:42:04] <p-i-_> I'm trying to background-execute an async function
[19:42:14] <p-i-_> I've timed the execution, and it's taking 0.3s
[19:42:15] *** Quits: phonemic (~phonemic@104-60-219-66.lightspeed.nsvltn.sbcglobal.net) (Quit: WeeChat 3.2)
[19:42:19] *** Quits: gggp (~textual@60.10.194.48) (Client Quit)
[19:42:32] <ska> If I put my dependencies in 'install_requires' and 'extra_require' in setup.py, is there a way to specify to pip uninstall to install all those dependencies?
[19:42:33] *** Joins: Staunch (~Staunch@c-24-7-237-208.hsd1.mn.comcast.net)
[19:42:35] <p-i-_> await asyncio.gather(f())
[19:42:45] <p-i-_> What could I be doing wrong?
[19:42:54] <p-i-_> Apart from using asyncio in the first place...
[19:44:05] *** Quits: resmo (~resmo@2a00:d420:9:8a00:3a7f:e16c:6810:72b7) (Ping timeout: 260 seconds)
[19:44:28] *** Quits: pycode (~pycode@2001:b07:5d28:551:2f9f:c4de:e283:dfa2) (Ping timeout: 268 seconds)
[19:44:28] *** Quits: kosh (~kosh@user/kosh) (Ping timeout: 268 seconds)
[19:44:48] <p-i-_> I see what's wrong. I'd need to package the rest of my code into ANOTHER task, and gather them both.
[19:44:49] *** Joins: Kharon (uid511277@user/cypris)
[19:45:01] <Kharon> hello
[19:45:10] <p-i-_> Was hoping I could just background a task and continue.
[19:45:15] <p-i-_> Like spawning a thread
[19:45:46] <InPhase> p-i-_: You can spawn a thread (or process) for that behavior.  :)
[19:45:47] *** Joins: BlessJah (~BlessJah@user/blessjah)
[19:45:47] *** Quits: impermanence (~impermane@73.94.243.213) (Quit: Connection closed)
[19:46:05] <p-i-_> Yeah I was just looking at that.
[19:46:13] <p-i-_> https://docs.python.org/3/library/asyncio-task.html#asyncio.to_thread
[19:46:15] <Kharon> hey guys was anyone scared of attacks on 9/11
[19:46:35] <InPhase> Kharon: There's a #python-offtopic for that sort of question.
[19:46:36] <p-i-_> Go somewhere else Kharon
[19:46:45] <Kharon> it felt weird listening to the emergency radio local channels talk about it
[19:46:51] <Kharon> oh wait im in the wrong channel
[19:46:52] <Kharon> sorry
[19:47:02] <Kharon> i ment to talk in #hamradio sorry i wasnt looking
[19:47:06] <p-i-_> np
[19:47:43] <p-i-_> gotta say I thought you were trolling
[19:47:49] <Kharon> no it was my mistake
[19:48:02] *** Quits: vimart (~vimart@239.218-30-62.static.virginmediabusiness.co.uk) (Ping timeout: 260 seconds)
[19:48:24] *** Joins: markb1 (~markb1@2600:1700:eb40:7ecf:a170:9ad:9865:9dbc)
[19:49:34] *** Quits: andyewen (~andyewen@31.124.173.192) (Quit: Leaving)
[19:49:57] <p-i-_> So if I do coro = asyncio.to_thread(f, arg1, arg2) is that gona return instantly even if it takes .3s to complete?
[19:50:09] <p-i-_> And then it's up to me if I `await coro` or just  plough ahead...
[19:50:16] *** Joins: n00b101 (uid448161@id-448161.lymington.irccloud.com)
[19:52:06] *** Roey is now known as CoolCoolR410A
[19:52:17] *** Joins: KombuchaKip (~kip@192.252.230.5)
[19:53:41] <p-i-_> If I do that it simply isn't executing f(arg1, arg2)
[19:54:58] <Samian> do you guys take out "is" in error message? Like "Module not found" instead of "module is not found" ?
[19:55:32] *** Joins: rpkilby (~rpkilby@c-24-20-208-106.hsd1.or.comcast.net)
[19:56:08] *** Joins: Wuniu (~Thunderbi@user/wuniu)
[19:56:23] <p-i-_> So I'd need to use that together with gather? That's _really_ cumbersome. I'm already in the middle of my main async code. And I want to fire off an 'await send_message(m)' on another thread.
[19:56:27] <p-i-_> Samian: I would.
[19:56:48] <Samian> I feel like I'm talking like a 2 year old after a while heh
[19:57:08] <p-i-_> If it is more concision without compromising comprehension, I'm all for it.
[19:57:21] *** CoolCoolR410A is now known as Roey
[19:58:10] <p-i-_> In Singapore I noticed some concisions, like 'I off the light, ok?' I'm all for language evolution.
[19:58:51] *** Quits: Wuniu (~Thunderbi@user/wuniu) (Client Quit)
[20:00:16] <ska> Is there some simple way to uninstall a package and all its dependencies?
[20:01:16] <InPhase> Samian: There are error message labels, and error message descriptions.  They serve a different role.  "Module not found" is a label.  A description works better as a proper sentence, and provides enough information that there's a hint as to what the user should do to resolve it.
[20:01:42] *** Joins: Ademan (~ademan@47.185.115.221)
[20:02:13] *** Joins: Wuniu (~Thunderbi@user/wuniu)
[20:02:20] *** Joins: vvdaiwrw (~rvgzuuqp@gateway/tor-sasl/rvgzuuqp)
[20:02:21] *** Quits: cheater (~Username@user/cheater) (Ping timeout: 268 seconds)
[20:02:31] *** Joins: cheater (~Username@user/cheater)
[20:02:44] *** Joins: kickingvegas (~cchoi@c-24-5-40-20.hsd1.ca.comcast.net)
[20:02:58] <gamah> is importing another file to my "config" file to create objects from a class to then be passed to the main file a bad practice?
[20:03:50] <marduk> Can anyone confirm that the MacOS wheel files for markupsafe were changed over the weekend?
[20:04:40] <p-i-_> ska: If you're in a .venv you could always recreate it.
[20:05:38] <p-i-_> Usually `pip uninstall` seems to revert a `pip install` and same for other package managers. I _think_... e.g. apt for linux, brew for macOS
[20:06:13] *** Quits: Atque (~Atque@user/atque) (Quit: ...)
[20:06:13] *** Joins: kosh (~kosh@user/kosh)
[20:06:24] <p-i-_> If you're using something like Poetry you can just remove the entry from the manifest file and regenerate the env.
[20:06:59] *** Quits: Wuniu (~Thunderbi@user/wuniu) (Client Quit)
[20:07:01] <p-i-_> Docker's good like that too.
[20:08:43] * cluelessperson is noticing the rise of violent thoughts against the unfairness of pay and work on reddit and thinks it's interesting
[20:08:49] <p-i-_> gamah: I've started using a config.py instead of a config.json, it has VCS issues but sometimes it's the shortest path from A to B.
[20:08:52] <cluelessperson> sorry, wrong channel, ignore me.
[20:09:02] <gamah> yeah i'm using config.py
[20:09:07] <gamah> it just feels... wrong to import at the top of it
[20:09:37] <Samian> InPhase I have the module name in the real thing
[20:09:45] <cluelessperson> gamah, I think it depends on what sort of configuration and how accessible you expect it to be.
[20:09:55] <gamah> i suppose that's fair...
[20:10:12] <gamah> i am making this for myself i suppose not anyone else
[20:10:18] <p-i-_> yeah if it's just for you, you're free to break all the rules :p
[20:10:38] <cluelessperson> gamah, I have my own custom configuration.py module that allows me to grab a config file from storage locations, config.json in the cwd, and override with environment variables and such.
[20:12:59] <cluelessperson> and I can mix them together arbitrarily with:    mix_configs([StorageConfig(default_path), EnvironmentConfig(), ArgConfig()]) ->  Config dict! :D
[20:13:30] <gamah> cluelessperson: i suppose i ought to use json... and then parse it into creating the actualy python objects in the actual program
[20:14:09] <gamah> i probably shouldn't be doing things[otherfile.class.thing(x,y,z)...] in config.py, right?
[20:15:18] *** Quits: oprypin (~irc@pryp.in) (Ping timeout: 268 seconds)
[20:16:19] <cluelessperson> gamah, well, if it works for you and only you are using it, it's probably fine, but I would suggest fashioning a methodology you can easily copy from project to project as you need and are very familiar with.
[20:16:33] <cluelessperson> gamah, the overall goal is to help you rather than hinder you. :)
[20:16:58] *** Joins: vimart (~vimart@239.218-30-62.static.virginmediabusiness.co.uk)
[20:16:58] <gamah> yeah.... i'm not sure i even wanna stick with python as this thing progresses... i could really use the horsepower of something like CPP
[20:16:59] *** Quits: trace987 (~trace@ip5f5a6a70.dynamic.kabel-deutschland.de) (Remote host closed the connection)
[20:18:00] *** Joins: xcombelle (~xavie@176-139-252-198.abo.bbox.fr)
[20:20:13] *** Joins: theseb (~theseb@47-220-214-54.cnrocmta03.res.dyn.suddenlink.net)
[20:21:00] *** Joins: tg (~tg@rockylinux/infra/tg)
[20:22:51] *** Joins: nergar (~Nergar@177.225.152.16)
[20:23:32] *** Quits: Pickchea (~private@user/pickchea) (Ping timeout: 268 seconds)
[20:24:16] *** Joins: bilb_ono (~alexmarsh@ip68-6-90-72.sb.sd.cox.net)
[20:24:56] <cluelessperson> gamah, I don't know what your project is, but outside of doing high speed data handling, python should be fine, and even then python can have bindings to high speed tooling anyway.
[20:25:24] <gamah> cluelessperson: high speed data generating :)
[20:25:34] *** Joins: oprypin (~irc@pryp.in)
[20:25:34] <gamah> simulating blackjack
[20:25:43] <gamah> ideally, billions of rounds, eventually
[20:27:15] *** Joins: LuksNuke (~LuksNuke@ip-146-0-191-68.dyn.luxfibre.pt.lu)
[20:27:42] <gamah> i do wonder how much faster it'll be if i reuse objects tho instead of blowing them away and recreating them every hand...
[20:28:48] *** Joins: DaNeenjah (~jake@adsl-74-230-6-204.hsv.bellsouth.net)
[20:29:54] *** Joins: NeilRG (~NeilRG@192.222.196.111)
[20:30:06] *** Joins: RangerBobVA (~bmaddox@user/rangerbobva)
[20:30:40] *** Quits: legola (~legola@46.235.100.27) (Remote host closed the connection)
[20:30:58] *** Quits: jazzy (~jaziz@2600:380:865d:911b:e5e1:b429:e129:6354) (Ping timeout: 260 seconds)
[20:31:40] *** Quits: harpia (~harpia@58.148.205.168.dynamic.vibefibra.com.br) (Quit: harpia)
[20:31:40] *** Quits: DnzAtWrk (~DnzAtWrk@mobile-access-6df0f7-64.dhcp.inet.fi) (Read error: Connection reset by peer)
[20:31:57] *** Quits: kosh (~kosh@user/kosh) (Ping timeout: 268 seconds)
[20:32:48] <cluelessperson> gamah, then the slowdown probably isn't going to be python, but how you multithread it
[20:33:13] <gitesh> does json.dumps always do the right job converting python object to a json?
[20:33:23] *** Joins: trace987 (~trace@ip5f5a6a70.dynamic.kabel-deutschland.de)
[20:33:28] *** Joins: FluffyMask (~masque@user/fluffymask)
[20:33:28] <gitesh> for example if the python object is a string or list
[20:33:30] <bjs> gitesh: ... what is "the right job"
[20:33:44] <gitesh> bjs: right job is to convert it into json
[20:33:59] <cluelessperson> What is it called when you're dealing with the design and relation of objects?   For example an AirCraftCarrier wouldn't mix the properties of a boat, city, airport, it would simply be an object that CONTAINS   .boat, .city, .airport    right?
[20:33:59] <bjs> gitesh: well yes, its whole purpose is to turn something into json.  So if it doesn't error you get back some json
[20:34:10] *** Quits: NeilRG (~NeilRG@192.222.196.111) (Ping timeout: 252 seconds)
[20:34:11] <cluelessperson> What is this sort of design or paradigm referred to in study?
[20:34:18] <bjs> cluelessperson: some people call it "composition" but i'm not sure it's a very good word
[20:34:52] <cluelessperson> bjs, I'm at this point very familiar with how to use python, but I haven't really read much about composition or design, as much as I'd like.
[20:34:54] <bjs> gitesh: I guess, the `json` module is a way to turn various JSON-encoded objects into Python ones.  Python lists <-> JSON Arrays,   Python dicts <-> JSON Objects,  Python strings <-> JSON Strings etc
[20:35:19] <bjs> cluelessperson: okay
[20:35:22] <gitesh> bjs: oh now i got it
[20:35:38] <gitesh> that means i haven't learn json
[20:35:51] <rendar> bjs, in your solution of `done, pending = await asyncio.wait(self._to_wait, return_when=asyncio.FIRST_COMPLETED)` i can't add more tasks to _to_wait set... is that doable?
[20:35:57] <rendar> i mean, while it's waiting
[20:36:01] <bjs> rendar: you mean once it's started to wait?
[20:36:11] <rendar> yes
[20:36:14] *** Quits: Yion (~Yion@pd95caa88.dip0.t-ipconnect.de) (Quit: Client closed)
[20:36:16] <bjs> rendar: you can add a timeout and try again later with the bigger set
[20:36:26] <gamah> cluelessperson: maybe? pypy already made it quite a bit faster... but i have a feeling cpp will be even faster still
[20:36:41] <rendar> bjs, what about the process fails in the meanwhile? it won't be responsive
[20:36:49] <bjs> rendar: what do you mean?
[20:38:01] <rendar> bjs, wait starts with 5s of timeout | a task is added to the set | that task running fails raising an exception | the wait() wakes up after 5s
[20:38:28] <bjs> rendar: okay
[20:38:35] <rendar> wait
[20:38:41] *** Quits: morrigan (~m0rr1gan@user/m0rr1gan) (Ping timeout: 252 seconds)
[20:38:44] *** Quits: ham5urg (~ham5urg@2a04:4540:680a:400:79b5:f145:ab4f:521e) (Ping timeout: 268 seconds)
[20:38:46] <rendar> if a task fails, wait() should wake up immediately
[20:39:10] <bjs> yes i thought the situation you were concerned about was when you added a new task that finished earlier
[20:39:20] <rendar> the situation is:
[20:39:51] <rendar> wait waits for 5s | a new task is created and added to the set | that task fails | wait() wakes up after 5s because it's not aware of that new task yet
[20:40:24] *** Joins: morrigan (~m0rr1gan@user/m0rr1gan)
[20:40:34] <bjs> rendar: yes, if you add a new thing and the wait is already running the wait won't know about it
[20:40:52] <bjs> unless you did the waiting in a loop -- or made a more complicated thing
[20:40:52] *** Joins: fedenix (~fedenix@gateway/tor-sasl/fedenix)
[20:40:53] *** Quits: sharpertool (sid80151@id-80151.stonehaven.irccloud.com) ()
[20:41:12] *** Joins: sharpertool (sid80151@id-80151.hampstead.irccloud.com)
[20:41:53] <rendar> bjs, all of this mess only because i'm starting task with create_task() without awaiting them, to process more prompt commands, and i just want to print a task exception :(
[20:42:00] <rendar> is that possible a so basic thing is so hard?
[20:42:26] *** Quits: crazysim (sid86009@stonehaven.irccloud.com) ()
[20:42:28] <bjs> rendar: well not really, you can just put a try/except in the task to print out
[20:42:41] *** Joins: crazysim (sid86009@id-86009.hampstead.irccloud.com)
[20:42:42] <rendar> what you mean? a wrapper?
[20:42:52] <bjs> rendar: or a wrapper sure
[20:43:21] <bjs> rendar: you can also just have a task that loops over the set just `await`ing each in order
[20:43:26] <p-i-_> Does await asyncio.gather(task1(), task2()) wait until both tasks have completed?
[20:43:33] <bjs> p-i-_: yes
[20:43:55] <rendar> bjs, i thought about a wrapper which prints the excp..thing is: if i have `creaate_task(wrapper(my_coro())` it works, and it prints the excp, but when i close the program i get that exception raised with the message: Task has an exception never read or something like that
[20:44:01] *** Quits: shad (~shad@user/shad) (Quit: WeeChat 3.0)
[20:44:43] <rendar> bjs, that's happen because the wrapper re-raise the exception
[20:45:09] <bjs> rendar: well, you could just have the wrapper not re-raise it.  But I still think having a dedicated "gatherer" task is a good idea
[20:45:25] *** Joins: Sky_Net (~Sky_Net@176.14.213.149)
[20:45:28] <bjs> well in general at least
[20:45:57] <foo> This spits out [None, None] at the end: [print(x) for x in ["ha", "hey"]] ... I imagine I should just do a for loop and stick a print in there, eh?
[20:46:16] <bjs> foo: if you don't want to make a list then you shouldn't use a list comprehension yes :)
[20:46:23] *** Quits: pathos (~pathos@169-1-247-122.ip.afrihost.co.za) (Ping timeout: 252 seconds)
[20:47:09] <foo> bjs: oh please, stop making me sound so uneducated. Your comment in simply too rational. (Please excuse the remnants of my PHP brain which I've been going to therapy for)
[20:47:19] <foo> s/in/is/
[20:47:31] *** Quits: LuksNuke (~LuksNuke@ip-146-0-191-68.dyn.luxfibre.pt.lu) (Remote host closed the connection)
[20:47:34] *** Quits: jesse-s (sid98646@id-98646.stonehaven.irccloud.com) ()
[20:47:45] <bjs> foo: I think, especially IRC, has a tendency to over-use comprehensions
[20:47:59] <bjs> I think most of the time you really do just want a for loop
[20:48:30] *** Joins: raxor2k (~raxor2k@78.158.248.203)
[20:48:49] <foo> bjs: this is helpful, I may have been a little too shiny-object-syndrome thinking that was the answer. I like your response. Haha. I do confess, in certain temporary scripts I've used list comprehensions to run values through a function to update something... also probably not the proper use case
[20:48:59] *** Joins: jesse-s (sid98646@id-98646.hampstead.irccloud.com)
[20:50:02] *** Joins: Seiryuu (~Seiryuu@ip174-103-176-143.adsl2.static.versatel.nl)
[20:50:14] <rendar> bjs, i thought also about this: gather wait() + semaphore in the same asyncio.gather() so when i add a task in the set i will acquire the semaphore which in turn will awake wait()
[20:50:21] <bjs> foo: comprehensions are great, they're an expression! they fit on one line!  Great for line-based messaging like IRC.  But you can go too far ... https://gist.github.com/habnabit/3805075/
[20:50:26] <rendar> it's wait( wait() + semaphore )
[20:50:57] <foo> bjs: I don't see the problem?
[20:51:03] <bjs> foo: ;)
[20:51:03] *** Quits: promey_ (~Promeys@gateway/tor-sasl/promey) (Ping timeout: 276 seconds)
[20:51:04] * foo slowly backs away and runs
[20:51:28] <Naan> lol
[20:52:02] <rendar> bjs, what you think about that solution?
[20:52:19] <bjs> rendar: hmm, I mean it might be worth asking how much do you really care that you see the things in the gathererd thread in actually the order they happened to "End" in and whether it's okay if there's a 1s lag
[20:52:19] *** Joins: LuksNuke (~LuksNuke@ip-146-0-191-68.dyn.luxfibre.pt.lu)
[20:52:24] <bjs> or a <whatever timeout you choose> lag
[20:52:29] <bjs> in the worst-case scenario
[20:52:45] <rendar> it's not ok the lag, and i don't care the order
[20:52:50] *** Quits: altendky (sid135382@id-135382.stonehaven.irccloud.com) ()
[20:53:06] *** Joins: altendky (sid135382@id-135382.hampstead.irccloud.com)
[20:53:11] *** Joins: greedom (~greedom@2001:16b8:2ebb:6600:e501:1757:c59e:4da4)
[20:55:27] *** Joins: pathos (~pathos@169-1-247-122.ip.afrihost.co.za)
[20:56:11] <bjs> rendar: well how much lag can you cope with
[20:56:21] *** Joins: mwichmann (~mats@209-188-119-117.taosnet.com)
[20:56:54] <bjs> rendar: have you thought about just using trio/anyio
[20:57:17] <bjs> You're slowly creeping up on re-implementing nurseries/taskgroups
[20:57:33] <rendar> bjs, ok
[20:57:42] *** Joins: Neoon (~Neoon@2607:5300:60:23a5::1111)
[20:57:47] <rendar> bjs, so, anyio's task groups do exactly this?
[20:57:50] <bjs> rendar: because the next step is basically... to re-make one of those.
[20:57:59] *** Joins: kosh (~kosh@user/kosh)
[20:58:11] <Neoon> I can print a variable from a dict but when I pass it down to a function I get TypeError: cannot unpack non-iterable NoneType object
[20:58:22] <Neoon> the index of the dict exists and the print looks fine
[20:58:36] <Neoon> I can't explain this maybe some here can?
[20:58:38] <Neoon> someone*
[20:59:13] <bjs> Neoon: it's hard to tell without seeing the code,  the error implies you tried to unpack a None somewhere
[20:59:21] <bjs> it doesn't mention dicts or functions at all
[20:59:50] <bjs> (e.g. `x, y = None` gives that error)
[21:00:35] <aphysically> bjs: I have one case of a somewhat silly comprehension in my code....which I can show you now that I'm on github!
[21:01:13] <Neoon> https://pastebin.com/ukdPSyrV
[21:01:14] <aphysically> https://github.com/GBeauregard/pyffstream/blob/c103f6c3749e3b585dbfd5f94c6ccba9a368472e/src/pyffstream/cli.py#L467
[21:01:21] <Neoon> the code + the output and the traceback
[21:01:32] <aphysically> at this point I feel like I should have just used a for loop
[21:01:40] <Neoon> since the print works fine and the index exists
[21:01:42] <Neoon> its wired
[21:02:17] <bjs> Neoon: what is `mtrIP` ?
[21:02:18] *** Quits: theseb (~theseb@47-220-214-54.cnrocmta03.res.dyn.suddenlink.net) (Quit: Leaving)
[21:02:24] <Neoon> a function
[21:02:29] <bjs> Neoon: and what does it do?
[21:02:35] <aphysically> the comprehension is finding the index that's the same file as the last value in the list or determining if it's not there
[21:02:45] <aphysically> that I even feel like i need to explain it means it should probably be a for loop, I guess
[21:03:12] <aphysically> finding the (first) index
[21:03:31] <Neoon> it just pings the IP
[21:03:37] <bjs> Neoon: and what does it return?
[21:03:56] <bjs> aphysically: I think the next(..., None) is what makes this "okay"
[21:03:58] <Neoon> ah
[21:04:02] <Neoon> wait its a return issue
[21:04:08] <Neoon> oh man
[21:04:15] <Neoon> I had something else in mind
[21:04:23] <bjs> Neoon: this is why we like to see the code :P
[21:04:34] <bjs> aphysically: the for loop variant is equally ugly probably :(
[21:04:39] <Neoon> I looked at the wrong part sorry
[21:04:43] <Neoon> hence I could not find it
[21:05:02] <aphysically> yeah maybe, I think when I wrote this I felt there wasn't any especially clean solution
[21:06:06] <aphysically> this code is especially useful though - I use it so if I want to start processing a directory of files starting at a certain file, I specify "directory filename_to_start_at"
[21:06:12] <jinsun> you were able to one-expression it, but black just made that ugly
[21:06:24] <bjs> yeah the formatting here is working against you sadly
[21:06:32] <jinsun> I rewrite some lines of code a lot just so that black formats it better
[21:06:34] <bjs> aphysically: if the comprehension got any bigger, i'd just turn it into a real generator function
[21:09:16] <aphysically> I haven't had any compelling reasons to try generator functions yet in my code, but this partly may be because it's not something I very often think about considering
[21:09:38] <aphysically> not in my usual "toolbox" I guess
[21:09:53] *** Quits: reset (~reset@user/reset) (Quit: reset)
[21:10:07] *** Joins: domhnall (~developer@user/domhnall/x-2887755)
[21:11:16] *** Joins: ChkDigit (~u388mw@207-195-34-73.prna.static.sasknet.sk.ca)
[21:11:43] *** Joins: rapier (~marcos@170.233.159.1)
[21:13:12] *** Quits: nergar (~Nergar@177.225.152.16) (Quit: Leaving)
[21:13:38] *** Joins: txtsd (~txtsd@user/txtsd)
[21:15:03] <aphysically> I think today I should add some docstrings and look into pytest and/or CI of some sort that I can integrate with github
[21:15:30] *** Joins: Guddu (~Guddu@190.84.88.92)
[21:16:49] <aphysically> I've been reading pytest on and off for a week or so now and I've just been sort of hesitant on how to structure the testing as a whole but I have to get started eventually (:
[21:18:05] <jinsun> docstrings are easy to start, just install flake8-docstrings and let flake8 complain about missing docstings, won't make you write good docs, but they will be there at least
[21:18:21] *** Joins: System123 (~System123@203-134-35-213.sta.estpak.ee)
[21:20:38] <aphysically> (: https://github.com/GBeauregard/pyffstream/blob/c103f6c3749e3b585dbfd5f94c6ccba9a368472e/tox.ini#L54 yeah okay... :P
[21:21:51] <jinsun> ah :D, already using too many plugins I see
[21:22:52] <aphysically> yes, and a lot of redundant with pylint too
[21:22:57] <aphysically> but that's okay
[21:23:21] *** Quits: System123 (~System123@203-134-35-213.sta.estpak.ee) (Ping timeout: 268 seconds)
[21:23:38] <MelMalik> Is python 3.7 supposed to support illumos/Solaris?
[21:23:50] *** Quits: puff (~user@S0106d4ca6d80a83c.vs.shawcable.net) (Read error: Connection reset by peer)
[21:24:03] *** Joins: puff (~user@S0106d4ca6d80a83c.vs.shawcable.net)
[21:24:10] <aphysically> most of the stuff I haven't disabled is usually something I should genuinely fix at least (I have very few in-line disabled linting in my code)
[21:24:59] <MelMalik> There appears to be a GNU extension used in part of parsing that is implicitly declared on illumos.
[21:25:45] *** Joins: aselman4 (~aselman4@136.2.32.180)
[21:26:36] <aselman4> Hello all, does anyone know if its possible for a ContextDecorator to access the method being decorated and arguments like a standalone decorator?
[21:27:15] <raxor2k> bjs: are you here
[21:27:22] <bjs> raxor2k: hi
[21:27:57] *** Joins: Lando-SpacePimp (~Lando@user/lando-spacepimp)
[21:30:41] <rapier> I have no idea how to start. >> the code is https://bpa.st/NNDA I'm getting an error that i've neverseen
[21:31:02] *** Quits: rapier (~marcos@170.233.159.1) (Read error: Connection reset by peer)
[21:31:08] *** Quits: aselman4 (~aselman4@136.2.32.180) (Quit: Client closed)
[21:31:12] *** Quits: wolfgang (~wolfgang@101.174.6.197) (Remote host closed the connection)
[21:32:06] *** Quits: fikran (~fikran@user/fikran) (Ping timeout: 260 seconds)
[21:33:48] *** Joins: fikran (~fikran@user/fikran)
[21:33:53] *** Quits: rpkilby (~rpkilby@c-24-20-208-106.hsd1.or.comcast.net) (Remote host closed the connection)
[21:34:27] <rendar> why i can't do `tg = anyio.TaskGroup()` ? strange design
[21:34:50] *** Joins: rpkilby (~rpkilby@c-24-20-208-106.hsd1.or.comcast.net)
[21:35:26] <axisys> I craft a graphql query (commented on top) with header, footer and nrql (which is a variable) like this ugly way. Looking for a suggestion on how to craft a graphql with better code
[21:35:30] <axisys> https://dpaste.org/0v5h#L47
[21:35:44] <axisys> nrql (newrelic query)
[21:36:47] <rendar> and i try `tg = anyio.create_task_group()` i get this https://bpa.st/MKBQ
[21:36:49] <rendar> any help?
[21:36:54] *** Joins: rapier (~marcos@170.233.159.1)
[21:37:21] <rapier> i'm so sorry... my internet connection dropped
[21:37:34] *** Joins: Akuli (~Akuli@213.216.210.204)
[21:38:00] <rapier> any idea for this error: https://bpa.st/NNDA
[21:38:44] <bjs> rendar: because anyio doesn't have 1 definition of TaskGroup
[21:39:02] <bjs> it's supposed to be agnostic to the backend, so you use trio the TaskGroup just uses a nursery
[21:39:13] <rendar> bjs, but before you said that i was defining something like a TaskGroup, and now i can't instance it
[21:39:52] <jinsun> rapier: is that the full traceback? should have been longer than just those 2 lines
[21:39:53] <bjs> rendar: well I mean you must be doing something wrong, it seems anyio cannot tell if you're using asyncio or if you're using trio
[21:40:02] <rapier> ok
[21:40:24] *** Quits: pizdets_ (~pizdets@183.182.115.39) (Ping timeout: 250 seconds)
[21:40:47] *** Joins: pizdets (~pizdets@183.182.111.39)
[21:40:53] <rendar> bjs, but that's absurd.. i'm using asyncio
[21:41:25] <rapier> this full error message is https://bpa.st/YF3A
[21:41:30] *** Joins: nomic (~nomic@185.192.69.176)
[21:42:08] <rapier> It was working fine, but today i'm getting this weird error
[21:42:56] <BrenBarn> I see this: https://stackoverflow.com/questions/33267002/why-am-i-suddenly-getting-a-no-attribute-clsidtopackagemap-error-with-win32com
[21:43:51] <rapier> i'll try, BrenBarn
[21:44:00] *** phantomcircuit_ is now known as phantomcircuit
[21:44:11] <bjs> rendar: where are you calling this function?
[21:44:15] *** Quits: rsx (~dummy@ppp-188-174-146-217.dynamic.mnet-online.de) (Quit: rsx)
[21:44:30] *** Joins: elkalamar (elkalamar@gateway/vpn/airvpn/elkalamar)
[21:44:31] <bjs> rendar: it says "in <module>" which makes it sound like you've just put it in the file and not inside any `async def` or anything
[21:45:01] <rendar> bjs, in global scope i'm trying to instance a task group with `tg = create_task_group()`
[21:45:27] <bjs> rendar: well that won't work,  you can't make the task group "Outside" of the async code
[21:45:35] *** Joins: ubert (~Thunderbi@178.165.189.117.wireless.dyn.drei.com)
[21:45:37] <bjs> because at that point you really *arent* using asyncio yet
[21:46:00] <raxor2k> bjs: i wanted to ask help for this, but i made it myself: https://bpa.st/NHCQ
[21:46:02] <rendar> wtf, ok.. i can make asyncio Queue and other stuff at global scope, btw
[21:46:10] <bjs> rendar: see the "or not in async context"
[21:46:13] <raxor2k> im an absolute beast
[21:46:24] <bjs> rendar: yes an asyncio one
[21:46:50] <bjs> rendar: but anyio is agnostic, it can't make a TaskGroup until it knows whether to make an asyncio one or a trio one and it doesn't know at that point
[21:46:56] <bjs> raxor2k: congrats
[21:47:12] *** Joins: NeilRG (~NeilRG@192.222.196.111)
[21:47:23] <raxor2k> bjs; but if you have any suggestions/critism(as usual), i happily take it :)
[21:47:36] <rendar> bjs, so i can't instance a task group? i have always to use `async with create_task_group ...` ?
[21:47:40] <bjs> raxor2k: does it work?
[21:47:58] <bjs> rendar: you can, in exactly the way you are doing, you just have to do inside the task
[21:48:04] *** Quits: dvx (~dvx@185.63.97.64) (Remote host closed the connection)
[21:48:04] <raxor2k> bjs: works perfectly
[21:48:07] <bjs> (e.g. inside the `async def` or some other function called *from* the async def)
[21:48:17] <bjs> raxor2k: then I have no suggestions
[21:49:03] *** Quits: nomic (~nomic@185.192.69.176) (Quit: Leaving)
[21:49:11] <rendar> bjs, but i just wanted to create an unique TaskGroup() which is basically a scheduler, and the *add* new task into that, not creating N task groups... which then i have also to await, i think
[21:49:26] <bjs> rendar: so do that inside your async main or whatever
[21:49:52] <rendar> bjs, and then i have to pass that to everything?!?!
[21:49:58] *** Joins: omegatron (~some@p54849842.dip0.t-ipconnect.de)
[21:49:59] <bjs> rendar: no? you can still make it global
[21:50:27] <rendar> damn, ok .. one thing i loved of asyncio, is that it has global state inside
[21:50:33] <bjs> inside what?
[21:50:35] <rendar> asyncio.create_task(..) and you're done
[21:50:45] <bjs> rendar: anyio is no different I'm confused what you're talking about
[21:51:04] <bjs> the only difference with anyio is that you can't call create_task_group until after you start running the event loop
[21:51:05] *** Quits: theprophet (~theprophe@85.114.228.184) (Quit: Client closed)
[21:51:24] <bjs> because until that point anyio doesn't know if you're using an asyncio event loop or a trio event loop...
[21:51:30] <rendar> ok
[21:51:40] *** Quits: NeilRG (~NeilRG@192.222.196.111) (Ping timeout: 240 seconds)
[21:52:24] <rapier> BrenBarn, how can I treat an error like that?
[21:52:58] *** Quits: shlomif (~shlomif@87.68.240.100.adsl.012.net.il) (Ping timeout: 252 seconds)
[21:53:10] <bjs> rendar: I really recommend just putting `async with anyio.create_task_group() as tg: ...` in your async main thing or whatever then when you want to create task, you call `await tg.start` (or `tg.start_soon`)
[21:53:12] *** Joins: theprophet (~theprophe@85.114.228.184)
[21:53:31] <rendar> bjs, ok, fine...
[21:53:33] <BrenBarn> what do you mean?
[21:53:43] <bjs> rendar: ... fine?  You sound unhappy about this?
[21:55:20] <rendar> bjs, yes, i'd just prefer tg = TaskGroup()  tg.start_soon(..)
[21:55:48] <bjs> rendar: well you can do that, you just have some extra methods to call to "start" the taskgroup and "stop" the taskgroup manually
[21:56:07] <bjs> which is all `async with` does
[21:56:39] <rendar> yep, ok
[21:56:58] <rendar> bjs, what about i want to differentiate multiple tasks groups?
[21:57:34] <bjs> rendar: you said you only wanted one,  but you can make multiple if you want
[21:57:42] <bjs> they're just Python objects, you can just assign them to different names
[21:58:03] <rendar> but to make n of them i have to write N async with blocks?!
[21:58:10] <foo> I have a private project and I'm trying to figure out the best/easiest way to get it to someone. I don't normally do this. I'm thinking: private git repo, write a bash script to set up a venv, install the package, then have a click/cli interface they can run within the venv. Any other suggestions/thoughts here?
[21:58:13] <bjs> rendar: no?
[21:59:00] <bjs> rendar: you can go `async with anyio.create_task_group() as tg1, anyio.create_task_group() as tg2` or, of course, if you have a lot of them you can use context.ExitStack to do it programmatically
[21:59:11] <bjs> AsyncExitStack*   or whatever it's called
[21:59:35] <bjs> rendar: but it's kind of weird, why do you want so many task groups?
[21:59:40] <rendar> O_O it's very cumbersome
[21:59:52] <rendar> bjs, i may want to subdivide tasks into groups
[21:59:58] *** Quits: RangerBobVA (~bmaddox@user/rangerbobva) (Quit: Leaving)
[22:00:01] <rendar> e.g. only the tasks i want to run from the console command line
[22:00:14] <rendar> or those i want to run in background and so on
[22:00:34] <bjs> rendar: but when you say subdivide,  why would you put them in different task groups?
[22:00:36] *** Quits: oprypin (~irc@pryp.in) (Read error: Connection reset by peer)
[22:00:38] *** Joins: oprypin_ (~irc@pryp.in)
[22:00:51] <bjs> rendar: I mean so far you've only had 1 big set of tasks to collect
[22:01:08] <rendar> bjs, so i can tell cancel all pending tasks from the console command line
[22:01:24] <rendar> something like that, isn't that the purpose of the TaskGroup abstraction or nursery?
[22:01:32] <bjs> rendar: ah okay,  well then you'd make a task group for all the command line tasks and then you can cancel all of them if you want
[22:01:53] <bjs> rendar: well sort of, there is also the idea of a cancellation scope in these libraries
[22:04:45] *** Quits: shokohsc8 (~shokohsc@161.88.195.77.rev.sfr.net) (Read error: Connection reset by peer)
[22:05:27] <rapier> i'd like that code runs without flaws... how can I make the error handling?
[22:05:38] *** Joins: Pickchea (~private@user/pickchea)
[22:06:42] *** Joins: shokohsc8 (~shokohsc@161.88.195.77.rev.sfr.net)
[22:06:46] *** Joins: Midjak (~Midjak@82-65-111-221.subs.proxad.net)
[22:07:36] *** Quits: Duckle (~Duckle@user/duckle) (Quit: Poof goes the quack - The Lounge - https://thelounge.chat)
[22:09:03] *** Joins: gr33n7007h (~gr33n7007@user/gr33n7007h)
[22:10:35] *** Quits: oprypin_ (~irc@pryp.in) (Quit: Bye)
[22:10:45] *** Joins: magla (~gelignite@55d46203.access.ecotel.net)
[22:10:56] *** Joins: oprypin (~irc@pryp.in)
[22:12:25] *** Joins: philectro (~quassel@2a02:2788:9a4:9f0:d17e:ea2e:4f63:ce5)
[22:13:03] *** Joins: Duckle (~Duckle@user/duckle)
[22:14:45] *** Joins: pycode (~pycode@2001:b07:5d28:551:2e6:2961:b97e:48af)
[22:15:21] *** Joins: Brocker (~NoBody@user/brocker)
[22:15:39] *** Quits: Ademan (~ademan@47.185.115.221) (Ping timeout: 265 seconds)
[22:17:24] *** Joins: aselman4 (~aselman4@136.2.32.180)
[22:17:41] <vimart> rapier: https://gist.github.com/rdapaz/63590adb94a46039ca4a10994dff9dbe
[22:18:32] *** Joins: NeilRG (~NeilRG@192.222.196.111)
[22:18:32] *** Joins: Hokedli (~lasliedv@gateway/tor-sasl/hokedli)
[22:19:00] *** Quits: pjlsergeant (sid143467@id-143467.stonehaven.irccloud.com) ()
[22:19:16] *** Joins: pjlsergeant (sid143467@id-143467.hampstead.irccloud.com)
[22:19:21] <rapier> thank you, vimart
[22:20:32] *** Quits: flagrama (sid145621@id-145621.stonehaven.irccloud.com) ()
[22:20:44] *** Joins: MaximB (~MaximB@87.68.164.121)
[22:20:51] *** Joins: flagrama (sid145621@id-145621.hampstead.irccloud.com)
[22:21:38] *** Joins: EvilDMP (~textual@django/moderator/EvilDMP)
[22:21:56] *** Joins: nomic (~nomic@185.192.69.176)
[22:22:20] *** Quits: Ergo^ (~ergo@91.238.59.144) (Ping timeout: 268 seconds)
[22:22:58] *** Quits: NeilRG (~NeilRG@192.222.196.111) (Ping timeout: 260 seconds)
[22:23:25] <MaximB> Hi, I'm trying to create a simple append to list function, but something is not working: https://paste.debian.net/1211618/
[22:24:23] *** Quits: gusto (~Augustus@109.255.100.54) (Quit: Textual IRC Client: www.textualapp.com)
[22:24:29] <phy1729> Why does line 9 use a?
[22:25:15] <MaximB> trying to convert to list
[22:25:25] *** Quits: akaWolf (~akaWolf@akawolf.org) (Ping timeout: 252 seconds)
[22:25:45] <MaximB> o, sorry, i just copied it, it was supposed to be x
[22:25:48] <Wooble> MaximB: .append() modifies the list, it doesn't return it.
[22:27:57] <MaximB> Wooble so how can I create a function of of it? tried to make a new var, but it didn't work
[22:28:38] *** Quits: Hokedli (~lasliedv@gateway/tor-sasl/hokedli) (Quit: Konversation terminated!)
[22:28:38] <axisys> how do I join multiple lines of sql queries into one line without breaking the syntax? I tried this https://dpaste.org/EDOW but that did not work
[22:28:54] <Wooble> MaximB: if you want the function to return a new list with the value appended (rather than modifying the list you pass in), copy into a new list, append the value, the return the list.
[22:29:25] <Wooble> MaximB: i.e., def ListAppend(x,y): a = list(x); a.append(y);return a
[22:30:32] <gamah> anyone who works with python a lot mind looking over my little toy so far and telling me if i'm doing anything egregiously bad?
[22:31:10] <MaximB> Wooble thanks, but it still returns None when I call it with: print(ListAppend([1,2,3],4))
[22:31:35] *** Joins: RangerBobVA (~bmaddox@user/rangerbobva)
[22:31:47] *** Quits: rpkilby (~rpkilby@c-24-20-208-106.hsd1.or.comcast.net) (Remote host closed the connection)
[22:32:17] <Wooble> MaximB: prints "[1, 2, 3, 4]" here; you must have changed my code.
[22:32:18] <MaximB> and this: print(ListAppend((1,2,3),4)) gives error that Tuple has no attrib append, even tru we converted it to list
[22:32:45] *** Quits: elkalamar (elkalamar@gateway/vpn/airvpn/elkalamar) (Quit: Leaving)
[22:32:55] <gamah> you want [1,2,3] not (1,2,3)
[22:33:00] *** Joins: rpkilby (~rpkilby@c-24-20-208-106.hsd1.or.comcast.net)
[22:33:10] <gamah> (x,y) is a tuple [x,y] is al ist
[22:33:49] <MaximB> Wooble thanks, but now I get AttributeError: 'str' object has no attribute 'append' after:  print(ListAppend("[1,2,3]",4))
[22:33:55] <Omega037> Is it considered bad practice to write a function name that starts with a built-in, like def filter_data(x)?
[22:34:01] *** Quits: lastshell (~lastshell@user/lastshell) (Quit: leaving)
[22:34:01] <gamah> why did you add quotes?
[22:34:03] *** Quits: Naan (~Naan@user/naan) (Ping timeout: 268 seconds)
[22:34:19] <MaximB> Wooble did, so did I
[22:34:34] <MaximB> the original was without quotes
[22:34:39] <MaximB> but didn't work
[22:34:50] <gamah> i guess i haven't seen the code you're looking at
[22:35:36] <MaximB> https://paste.debian.net/1211619/
[22:35:37] <bjs> MaximB: note that Wooble suggested to `return a`
[22:36:11] <bjs> MaximB: no, you overwrite `a` here.  `a = list(x)` then `a.append(y)` then `return a`
[22:36:29] <bjs> append() doesn't return a value
[22:36:32] *** Quits: Tiago_Paolini (sid172748@id-172748.stonehaven.irccloud.com) ()
[22:36:47] *** Joins: Tiago_Paolini (sid172748@id-172748.hampstead.irccloud.com)
[22:36:50] *** Quits: EvilDMP (~textual@django/moderator/EvilDMP) (Quit: My MacBook has gone to sleep. ZZZzzz…)
[22:37:25] <aphysically> there's so many CI out there integrating with github I don't even know where to start to decide what to use
[22:37:38] <aphysically> I guess github actions workflows would be simple?
[22:37:42] *** Quits: rubin55 (sid175221@id-175221.stonehaven.irccloud.com) ()
[22:37:55] <MaximB> bjs fixed it to: a = (a).append(y)  ,but still getting None
[22:38:00] *** Joins: rubin55 (sid175221@id-175221.hampstead.irccloud.com)
[22:38:19] <bjs> MaximB: no, that's not what any of us suggested.  None of our examples did the `a =` part of that line
[22:38:25] <bjs> MaximB: do you see that the line overwrites what `a` was?
[22:39:28] *** Joins: NeilRG (~NeilRG@192.222.196.111)
[22:39:53] <MaximB> ok, but even if I do : b = (a).append(y) ;return b,  I get None
[22:40:22] <bjs> MaximB: just don't do the `b =` part of that line
[22:40:26] <bjs> a.append(y) on its own, then `return a`
[22:41:09] <MaximB> thanks, now it works
[22:41:47] <space-ghost> does a = (a).append(y) execute?
[22:41:51] <space-ghost> what does that do even @ bjs
[22:42:00] <space-ghost> never dreamed of doing that before :p
[22:42:08] <bjs> space-ghost: it calls the append method of a with argument y, and assigns the result to a
[22:42:10] <phy1729> axisys: you want to ' '.join(...
[22:42:20] <space-ghost> no i mean with the (a) <--- ??
[22:42:35] <bjs> space-ghost: I mean, you can just put brackets around expressions anywhere you like
[22:42:41] <space-ghost> oh
[22:42:46] <bjs> space-ghost: print(1+2) or print(((((1+2))))) it's all the same :)
[22:42:51] <MaximB> and thanks Wooble bjs and gamah, I must have messed up somewhere, but you did help me.
[22:43:02] <foo> There is nothing wrong with reordering a list like this, is there? mylist = mylist[::-1] ?
[22:43:03] <MaximB> long day and all...lol
[22:43:27] *** Joins: Payam (~Payam@c83-250-236-236.bredband.tele2.se)
[22:44:52] *** Joins: resmo (~resmo@135-58-239-77.dyn.cable.fcom.ch)
[22:45:13] <foo> mylist = mylist[::-1] is probably fine, I wasn't sure if there's an issue assigning a list to itself
[22:45:20] <axisys> phy1729: let me try that
[22:45:39] <foo> It does work, I'm simply not sure if there are cases where it could cause issues.
[22:45:51] <bjs> foo: no issue,  so long as you know how assignment works. If you've not seen bit.ly/pynames1 before it's a good read
[22:46:02] *** Quits: roxfan (roxfan@11.121-64-87.adsl-dyn.isp.belgacom.be) (Remote host closed the connection)
[22:46:08] <foo> bjs: considering your reputation today, I'll give it a read. :) Thank you.
[22:46:38] *** Joins: roxfan (roxfan@11.121-64-87.adsl-dyn.isp.belgacom.be)
[22:46:56] *** Joins: Hokedli (~lasliedv@gateway/tor-sasl/hokedli)
[22:48:14] *** Quits: pycode (~pycode@2001:b07:5d28:551:2e6:2961:b97e:48af) (Ping timeout: 268 seconds)
[22:48:21] <MaximB> it's even more simple: https://paste.debian.net/1211620/
[22:50:45] *** Joins: codeswhite (~codeswhit@user/codeswhite)
[22:53:18] *** Joins: akaWolf (~akaWolf@akawolf.org)
[22:55:04] *** Quits: KnownSyntax (sid233169@user/knownsyntax) ()
[22:55:30] *** Joins: KnownSyntax (sid233169@user/knownsyntax)
[22:57:59] *** Joins: matsaman (~matsaman@user/matsaman)
[23:00:22] *** Quits: mozgalom (~mozgalom@194.144.47.113) (Quit: My MacBook has gone to sleep. ZZZzzz…)
[23:01:30] *** Quits: NeilRG (~NeilRG@192.222.196.111) (Remote host closed the connection)
[23:02:02] <cluelessperson> I'm a little unsure how to handle a hierarchy of say config or loggers to pass.
[23:02:17] *** Quits: llinguini (sid257922@stonehaven.irccloud.com) ()
[23:02:20] <cluelessperson> should I just create an argument "parent_logger" to pass to each object in the hierarchy?
[23:02:32] *** Joins: llinguini (sid257922@id-257922.hampstead.irccloud.com)
[23:03:24] *** Joins: wolfgang (~wolfgang@101.174.6.197)
[23:03:42] *** Joins: Naan (~Naan@user/naan)
[23:05:17] *** Quits: WhyNotHugo (sid269118@id-269118.stonehaven.irccloud.com) ()
[23:05:36] *** Joins: WhyNotHugo (sid269118@id-269118.hampstead.irccloud.com)
[23:06:05] *** Quits: Midjak (~Midjak@82-65-111-221.subs.proxad.net) (Quit: Leaving)
[23:06:40] *** Joins: Midjak (~Midjak@82-65-111-221.subs.proxad.net)
[23:08:06] *** Quits: rpkilby (~rpkilby@c-24-20-208-106.hsd1.or.comcast.net) (Remote host closed the connection)
[23:08:46] *** Quits: portalrat (~portalrat@user/portalrat) (Quit: Leaving)
[23:08:48] *** Quits: ARoxdale (~ARoxdale@84.203.25.150) (Ping timeout: 268 seconds)
[23:08:50] *** Joins: casastorta (~casastort@dc4.krivokuca.net)
[23:09:16] *** Joins: rpkilby (~rpkilby@ec2-34-252-84-235.eu-west-1.compute.amazonaws.com)
[23:10:31] *** Joins: rpkilby_ (~rpkilby@c-24-20-208-106.hsd1.or.comcast.net)
[23:11:42] *** Joins: EvilDMP (~textual@django/moderator/EvilDMP)
[23:13:44] *** Quits: rpkilby (~rpkilby@ec2-34-252-84-235.eu-west-1.compute.amazonaws.com) (Ping timeout: 268 seconds)
[23:13:52] *** Quits: rpkilby_ (~rpkilby@c-24-20-208-106.hsd1.or.comcast.net) (Remote host closed the connection)
[23:14:21] *** Quits: puff (~user@S0106d4ca6d80a83c.vs.shawcable.net) (Read error: Connection reset by peer)
[23:14:31] *** Joins: rpkilby (~rpkilby@ec2-34-252-84-235.eu-west-1.compute.amazonaws.com)
[23:14:43] *** Joins: puff (~user@S0106d4ca6d80a83c.vs.shawcable.net)
[23:16:36] *** Quits: pro_z (~pro_z@37.214.66.151) (Ping timeout: 268 seconds)
[23:17:29] *** Joins: jaggz (~jaggz@user/jaggz)
[23:18:05] <jaggz> how do I make a numpy array of float32's into a complex64 with 0j imaginary parts?
[23:18:30] <jaggz> something like [1.00, 2.00]  ->  [1.00+0.0j, 2.00+0.0j]
[23:18:56] *** Quits: raydeeam (uid325131@dgplug/raydeeam) ()
[23:19:11] *** Joins: raydeeam (uid325131@dgplug/raydeeam)
[23:19:23] *** Joins: System123 (~System123@203-134-35-213.sta.estpak.ee)
[23:19:54] *** Quits: Naan (~Naan@user/naan) (Ping timeout: 260 seconds)
[23:19:59] *** Joins: bomb-on (~bomb-on@194.144.47.113)
[23:22:21] *** Quits: manti7 (~manti7@176.10.104.94) (Ping timeout: 265 seconds)
[23:23:03] *** Quits: redgloboli (~redglobol@user/redgloboli) (Remote host closed the connection)
[23:23:22] *** Joins: redgloboli (~redglobol@user/redgloboli)
[23:23:34] *** Joins: rpkilby_ (~rpkilby@c-24-20-208-106.hsd1.or.comcast.net)
[23:24:00] *** Quits: System123 (~System123@203-134-35-213.sta.estpak.ee) (Ping timeout: 268 seconds)
[23:24:19] *** Quits: gitesh (uid423739@id-423739.ilkley.irccloud.com) (Quit: Connection closed for inactivity)
[23:24:21] *** Quits: blindguard (~blindguar@2a02:908:1864:c200::4433) (Quit: Konversation terminated!)
[23:24:39] *** Quits: matsaman (~matsaman@user/matsaman) (Quit: leaving)
[23:25:47] *** Quits: aselman4 (~aselman4@136.2.32.180) (Quit: Client closed)
[23:27:00] *** Joins: manti7 (~manti7@176.10.104.94)
[23:27:18] *** Quits: rpkilby (~rpkilby@ec2-34-252-84-235.eu-west-1.compute.amazonaws.com) (Ping timeout: 268 seconds)
[23:27:25] <Yhg1s> jaggz: your_array.astype(numpy.complex)
[23:28:01] *** Quits: EvilDMP (~textual@django/moderator/EvilDMP) (Quit: My MacBook has gone to sleep. ZZZzzz…)
[23:29:36] <anddam> re-asking: while building a package is there a way I can cache the dependencies that get built in order to reuse their same binary packages on successive builds?
[23:29:51] <anddam> I feel I am asking if I am using wheel or how to check that
[23:29:52] *** Quits: JayDoubleu (sid339529@id-339529.stonehaven.irccloud.com) ()
[23:29:54] <hexology> is there any tool to generate manpages for python applications based on click or argparse? python apps almost universally lack man pages, you usually have to load the slow dynamically generated --help output and manually pipe it to a pager. can be annoying (and it feels out of step w/ the rest of the system to not have a manpage)
[23:29:56] *** Quits: n00b101 (uid448161@id-448161.lymington.irccloud.com) (Quit: Connection closed for inactivity)
[23:30:00] <Yhg1s> anddam: what are you using to build the package?
[23:30:16] *** Joins: JayDoubleu (sid339529@id-339529.hampstead.irccloud.com)
[23:30:17] <MaximB> I noticed that mypy plugin for VS Code gives me lots of errors on some files, but the code runs well even if I ignore them
[23:30:19] <anddam> Yhg1s: setuptools, for the python package
[23:30:29] <Yhg1s> anddam: what *command* are you running?
[23:31:06] <anddam> Yhg1s: python -m pip install --use-feature=in-tree-build .
[23:31:11] <hexology> MaximB: mypy is for static analysis only. if the code runs fine, it means that your type hints are either wrong or incomplete. but type hints are not used at runtime by the python interpreter, they exist only to facilitate static analysis.
[23:31:20] <anddam> Yhg1s: technically "python3"
[23:31:48] *** Joins: portalrat (~portalrat@user/portalrat)
[23:32:22] <Yhg1s> anddam: pip should already be caching the wheels it builds for dependencies, if you have wheel installed. (Install wheel.)
[23:32:52] <MaximB> like it would give me error on: b = ["c", "b", "a"]   :List item 2 has incompatible type "str"; expected "int" ... but it doesn't need int at all.
[23:33:06] *** kostkon_ is now known as kostkon
[23:33:09] <Yhg1s> MaximB: what did you define 'b's type to be?
[23:33:23] <MaximB> I didn't define it to be any type
[23:33:28] <anddam> Yhg1s: I am creating a virtualenv using venv, activating it and then installing using setuptools. Should I just add wheel to the environment? should this be done at setuptools level or before the 'pip install .' command?
[23:33:31] <MaximB> it's a list
[23:33:55] <Yhg1s> MaximB: sounds like mypy inferred it to have a different shape for some reason, then. It's hard to say why mypy got it wrong without seeing the actaul code and the mypy error.
[23:34:06] *** Joins: Naan (~Naan@user/naan)
[23:34:14] <Yhg1s> anddam: yes, install wheel after you create the virtualenv.
[23:34:21] <anddam> Yhg1s: thank you
[23:34:24] <Yhg1s> anddam: I'm not sure what you mean by 'installing using setuptools'
[23:34:31] <Yhg1s> anddam: I hope you're installing using 'pip'.
[23:35:13] <anddam> Yhg1s: yes, but afaict 'pip .' is using the setuptools config in setup.py
[23:35:39] *** Quits: Donitz (~Donitz@85-156-203-108.elisa-laajakaista.fi) (Read error: Connection reset by peer)
[23:35:39] <Yhg1s> anddam: it can do, sure. You're still not using setuptools to install the package. pip is (or rather, might) be using setuptools, but you're using pip.
[23:35:41] *** Joins: linux_dream (~isaac@2a01:e0a:7:60e0:bcc4:b32c:9221:831d)
[23:35:49] <anddam> Yhg1s: but you are right, I am defining the package using setuptools and I am installing using pip
[23:35:59] <Yhg1s> (the distinction is important because setuptools *used to* have an install tool that you should absolutely not use.)
[23:36:45] <anddam> Yhg1s: got it, I phrased it that way since in the end I am using setuptools.setup() to define the package
[23:36:52] <anddam> but duly noted
[23:36:54] <anddam> thx again
[23:37:29] *** Joins: Donitz (~Donitz@85-156-203-108.elisa-laajakaista.fi)
[23:38:09] *** Quits: PaddyF (~PaddyF@user/paddyf) (Quit: bye)
[23:38:24] *** Quits: LuksNuke (~LuksNuke@ip-146-0-191-68.dyn.luxfibre.pt.lu) (Ping timeout: 268 seconds)
[23:39:04] *** Joins: EvilDMP (~textual@django/moderator/EvilDMP)
[23:39:58] *** Quits: GenTooMan (~cyberman@2601:547:437f:e5c6:21f:5bff:fefe:a883) (Ping timeout: 260 seconds)
[23:39:59] *** Joins: stkrdknmibalz (~test@rrcs-75-87-43-226.sw.biz.rr.com)
[23:40:30] *** Joins: NeilRG (~NeilRG@192.222.196.111)
[23:41:12] *** Quits: fikran (~fikran@user/fikran) (Ping timeout: 265 seconds)
[23:42:02] *** Joins: qlixed (~qlixed@2802:8010:4006:e301:fa3c:a61a:be5:edd5)
[23:42:12] *** Quits: atrigent (~atrigent@c-73-69-68-26.hsd1.ma.comcast.net) (Quit: My MacBook has gone to sleep. ZZZzzz…)
[23:43:10] *** Joins: fikran (~fikran@user/fikran)
[23:44:30] *** Joins: Bronto22 (~mennoh@2a02:a46b:4db0:1:5604:a6ff:fe37:3044)
[23:44:43] *** Quits: EvilDMP (~textual@django/moderator/EvilDMP) (Quit: My MacBook has gone to sleep. ZZZzzz…)
[23:44:53] *** Joins: n1ceaf (~Mark_Pine@gateway/tor-sasl/markpinecone/x-88286818)
[23:45:28] *** Joins: shibboleth (~shibbolet@user/shibboleth)
[23:47:30] <anddam> Yhg1s: I made a run with wheel and I saw a few "Building wheel …; Created wheel …; Stored in …" lines
[23:47:40] <anddam> running again to see if it uses those wheels
[23:47:54] *** Quits: cashew (~cashugh@user/cashew) (Ping timeout: 260 seconds)
[23:48:03] *** Quits: dld (~davidlowr@2620:6e:6000:2900:d1f0:b8f0:860c:6bfb) (Ping timeout: 268 seconds)
[23:49:53] <anddam> Yhg1s: oh yea, thanks _a lot_
[23:50:57] <foo> I have a (not public, for some friends who aren't tech savvy) project and I'm trying to figure out the best/easiest way to get it to someone. I don't normally do this. I'm thinking: private git repo, write a bash script to set up a venv, install the package, then have a click/cli interface they can run within the venv. Any other suggestions/thoughts here?
[23:51:33] *** Joins: abhixec (~abhixec@c-67-169-139-16.hsd1.ca.comcast.net)
[23:52:43] <raxor2k> bjs: i think im starting to see the benefits of those dict algorithms
[23:52:55] <raxor2k> the number of lines that can be shortened with good dicts functions are incredible
[23:55:08] *** Joins: pycode (~pycode@2001:b07:5d28:551:da8d:c350:f8ec:f65e)
[23:57:28] <foo> I'm also open to a guide on this, it's possible simply being able to install a package to a local environment is enough
[23:57:41] *** Joins: LuksNuke (~LuksNuke@ip-146-0-191-68.dyn.luxfibre.pt.lu)
[23:57:52] <foo> ... but even then, I don't think simply installing to a local env will allow for cli
[23:59:09] *** Joins: UselessCourage (~UselessCo@gateway/tor-sasl/uselesscourage)
