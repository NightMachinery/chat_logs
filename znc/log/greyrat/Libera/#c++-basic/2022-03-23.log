[00:00:59] *** Joins: bebyx (~Thunderbi@user/bebyx)
[00:01:11] *** Quits: darkbit (~db@152.32.100.99) (Ping timeout: 245 seconds)
[00:36:15] *** Quits: dgcampea (~dgc@user/dgcampea) (Remote host closed the connection)
[00:36:37] *** Joins: dgcampea (~dgc@user/dgcampea)
[00:58:14] *** Joins: gehn (~gehn@user/gehn)
[01:12:04] *** Quits: mint (~mint@46.159.204.49) (Quit: Leaving)
[01:14:16] *** Quits: LuckyFire (~LuckyFire@46.217.40.44) (Remote host closed the connection)
[01:14:40] *** Joins: LuckyFire (~LuckyFire@46.217.40.44)
[01:18:39] *** Quits: dgcampea (~dgc@user/dgcampea) (Remote host closed the connection)
[01:19:02] *** Joins: dgcampea (~dgc@user/dgcampea)
[01:58:16] *** Quits: LuckyFire (~LuckyFire@46.217.40.44) (Remote host closed the connection)
[01:58:39] *** Joins: LuckyFire (~LuckyFire@46.217.40.44)
[02:00:25] *** Quits: dgcampea (~dgc@user/dgcampea) (Remote host closed the connection)
[02:00:37] *** Joins: dgcampea (~dgc@user/dgcampea)
[02:23:55] *** Joins: mathe8989 (~wellmathe@dhcp-138-246-3-71.dynamic.eduroam.mwn.de)
[02:30:44] *** Quits: dgcampea (~dgc@user/dgcampea) (Remote host closed the connection)
[02:31:06] *** Joins: dgcampea (~dgc@user/dgcampea)
[02:39:00] *** Quits: LuckyFire (~LuckyFire@46.217.40.44) (Ping timeout: 240 seconds)
[02:51:39] *** Quits: spaceangel (~spaceange@ip-78-102-216-202.net.upcbroadband.cz) (Remote host closed the connection)
[03:17:17] *** Quits: dgcampea (~dgc@user/dgcampea) (Remote host closed the connection)
[03:17:39] *** Joins: dgcampea (~dgc@user/dgcampea)
[03:27:36] *** Quits: jsbach_ (~jsbach@2a01:c22:a861:c200:b455:8fb0:343e:163a) (Ping timeout: 252 seconds)
[03:33:25] *** Quits: seninha (~seninha@user/seninha) (Ping timeout: 240 seconds)
[03:45:35] *** Quits: calcul0n (~calcul0n@2a01:e0a:150:6030:4012:c816:317c:3628) (Ping timeout: 268 seconds)
[03:47:24] *** Joins: seninha (~seninha@user/seninha)
[04:06:33] *** Quits: mathe8989 (~wellmathe@dhcp-138-246-3-71.dynamic.eduroam.mwn.de) (Ping timeout: 268 seconds)
[04:06:33] *** Quits: gehn (~gehn@user/gehn) (Quit: Leaving)
[04:22:32] *** Quits: TheHermann (~TheHerman@gateway/tor-sasl/thehermann) (Quit: Leaving)
[04:26:18] *** Quits: unixpro1970 (~unixpro19@c-67-168-1-124.hsd1.wa.comcast.net) (Remote host closed the connection)
[04:32:35] *** Quits: Fairy (~Fairy@2001:464a:4992:0:5813:fe5c:3e8c:63aa) (Read error: Connection reset by peer)
[04:32:55] *** Joins: Fairy (~Fairy@2001:464a:4992:0:5813:fe5c:3e8c:63aa)
[04:34:40] *** Joins: Xardas (~Xardas@149.233.51.127)
[04:34:54] *** Quits: duude__ (~duude__@user/duude/x-4676560) (Ping timeout: 260 seconds)
[04:35:25] *** Joins: duude__ (~duude__@user/duude/x-4676560)
[04:44:07] *** Quits: str0 (~str0@178.220.28.32) (Quit: Leaving)
[05:15:07] *** Quits: PJBoy (~PJBoy@user/pjboy) (Ping timeout: 256 seconds)
[05:32:12] *** Quits: Tazy (~Tazmainia@2001:1c02:170b:3d00::1009) (Quit: Leaving)
[05:33:00] *** Quits: seninha (~seninha@user/seninha) (Ping timeout: 252 seconds)
[05:33:17] *** Quits: bebyx (~Thunderbi@user/bebyx) (Ping timeout: 250 seconds)
[05:49:53] *** Joins: vdamewood (~vdamewood@fedora/vdamewood)
[06:17:55] *** Joins: ferdna (~ferdna@user/ferdna)
[06:41:56] *** Quits: Xardas (~Xardas@149.233.51.127) (Quit: Client closed)
[06:56:18] *** Joins: unixpro1970 (~unixpro19@c-67-168-1-124.hsd1.wa.comcast.net)
[07:16:28] *** Joins: Inline__ (~Inline@p200300cd4709ad00c6efe95d186eec52.dip0.t-ipconnect.de)
[07:18:47] *** Quits: Inline (~Inline@p200300cd470e6400705287adc1f2aa0f.dip0.t-ipconnect.de) (Ping timeout: 250 seconds)
[07:23:23] *** Stryykert is now known as Stryyker
[09:03:39] *** Quits: ferdna (~ferdna@user/ferdna) (Quit: Leaving)
[09:55:53] *** Quits: mudzap (~mudzap@2806:107e:f:64c7:ef6d:b82a:36c:d8f6) (Ping timeout: 250 seconds)
[10:45:23] *** Joins: seninha (~seninha@user/seninha)
[11:03:34] *** Joins: DSpider (DSpider@2a02:2f00:4ff:ffff::646c:6882)
[11:24:57] *** Joins: calcul0n (~calcul0n@2a01:e0a:150:6030:4012:c816:317c:3628)
[11:45:56] *** Joins: jsbach (~jsbach@2a01:c23:61a1:e900:82f3:2db5:ad58:cd06)
[12:16:19] *** Joins: mathe8989 (~wellmathe@dhcp-138-246-3-71.dynamic.eduroam.mwn.de)
[12:44:29] *** Joins: mint (~mint@46.159.204.49)
[13:32:46] *** Joins: PJBoy (~PJBoy@user/pjboy)
[14:04:50] <nq> hi all, and one
[14:07:24] <nq> is there a way to write less code and to specialize "template <typename ContainedT, LinkedNodeType, ListType> struct LinkedList {};" with multiple arguments for ContainedT; something like template<LinkedNodeType, ListType> struct LinkedList<{int8_t, int16_t, int32_t, int64_t, etc.}, linkedNodeType, listType> {};" ?
[14:20:10] <meicceli> I have a struct Foo with a ctor Foo(void* parent = nullptr). In addition, I have a function bar(const Foo& foo). Now, if I pass pointer ptr of type Foo* to bar, a new instance of Foo get created. That is, bar(ptr) compiles and a new instance of Foo is implicitly created by passing ptr to Foo's ctor
[14:21:28] <meicceli> I spent over an hour debugging that and I dont want that implicit creation to ever happen again (i was passing a pointer to bar when i wanted to pass a reference). Is there a way to forbid converting a pointer passed to bar into a new instance of Foo 
[14:22:23] <osse> meicceli: mark the constructor explicit
[14:22:37] <osse> explicit Foo(void* parent = nullptr);
[14:22:58] <meicceli> i wish i could, but Foo is a library class :/
[14:23:11] <meicceli> a QGraphicsScene to be specific
[14:23:43] <osse> hmm, I thought all Qt's constructors of that kind were explicit
[14:25:27] <osse> Sorry, I don't know of any other way
[14:25:45] <meicceli> that's alright, thanks anyway
[14:25:57] <osse> I suppose you could make bar()  template and do some trait magic
[14:26:45] <meicceli> hmm maybe
[14:28:03] <meicceli> instead of const Foo&, have const T& and static assert if T is not of type Foo
[14:28:22] <osse> Or you could make a MyGraphicsScene which only inherits QGraphicsScene and makes its constructor explicit
[14:29:26] <meicceli> that might be viable
[14:30:29] *** Quits: DSpider (DSpider@2a02:2f00:4ff:ffff::646c:6882) (Quit: Leaving)
[14:30:32] <osse> I guess you already have a MyDialog and MyItemModel etc. so it wouldn't be that big of a change
[14:31:09] <meicceli> I have a MyGraphicsScene actually already. Only, the method bar takes in QGraphicsScene instead of MyGraphicsScene, for the sake of generality
[14:31:19] <meicceli> MyGraphicsScene's ctor is already explicit
[14:31:56] <meicceli> i have to see if i can change bar into taking MyGraphicsScene instead of QGraphicsScene
[14:34:07] <osse> heh, if bar() just took a QGraphicsScene* instead of const QGraphicsScene& you wouldn't have this problem :P glory C
[14:34:56] <meicceli> damn, that's true
[14:35:01] <meicceli> maybe i'll do that
[14:35:26] <meicceli> even though a reference would be preferred since the scene passed to bar should never be null
[14:36:44] *** Joins: TheHermann (~TheHerman@gateway/tor-sasl/thehermann)
[14:39:45] <osse> yeah in this particular case it would crash at runtime instead of construct a dummy QGraphicsScene... which is worse?
[14:40:52] <meicceli> crash would be better
[14:41:02] <meicceli> easier to debug and fix
[14:41:26] <meicceli> well, easier to debug. fixing both issues is trivial once located
[14:45:55] <meicceli> changed the argument from const ref to const ptr. thanks a ton for the help osse!
[14:47:15] <osse> Qt does have a bunch of explicit constructors, but I don't see any particular pattern in which clases have them and which don't
[14:47:28] <osse> also it's not obvious from the docs if a constructor is explicit or not :/
[14:48:06] <meicceli> i thought they put the explicit in the docs where applicable
[14:50:55] <meicceli> well they dont
[14:50:57] <meicceli> smh
[14:52:54] <meicceli> note to self: avoid const refs to Qt classes in function parameters
[15:26:45] *** Quits: mint (~mint@46.159.204.49) (Quit: Leaving)
[15:27:23] *** Joins: g0se (~goose@111.199.80.15)
[15:39:28] <osse> only QObject/QWidget ones
[15:48:23] *** Joins: Tazy (~Tazmainia@2001:1c02:170b:3d00::1009)
[15:52:07] *** Joins: mint (~mint@46.159.204.49)
[15:54:34] *** Joins: osfe (~lemaire@nanpc540.in2p3.fr)
[16:05:17] *** Quits: meicceli (meicceli@kapsi.fi) (Ping timeout: 250 seconds)
[16:17:56] *** Joins: markong (~kvirc@213.146.188.203)
[16:25:13] *** Joins: meicceli (meicceli@kapsi.fi)
[17:34:36] *** Quits: osfe (~lemaire@nanpc540.in2p3.fr) (Ping timeout: 260 seconds)
[17:41:17] *** Quits: night_wulfe (~wulfe@cpe-174-103-156-213.cinci.res.rr.com) (Ping timeout: 240 seconds)
[17:42:53] *** Joins: night_wulfe (~wulfe@cpe-174-103-156-213.cinci.res.rr.com)
[17:44:33] *** Joins: osfe (~lemaire@nanpc540.in2p3.fr)
[18:02:07] *** Joins: bebyx (~Thunderbi@user/bebyx)
[18:28:26] *** Joins: oartemeva (~oartemeva@h86-62-71-213.ln.rinet.ru)
[18:33:25] <Alipha> nq: can you use c++20 concepts?
[18:39:52] *** Quits: Alipha (~AliphaX@user/alipha) (Quit: WeeChat 1.0.1)
[18:40:20] *** Joins: Alipha (~AliphaX@75-168-143-77.mpls.qwest.net)
[18:40:20] *** Quits: Alipha (~AliphaX@75-168-143-77.mpls.qwest.net) (Changing host)
[18:40:20] *** Joins: Alipha (~AliphaX@user/alipha)
[18:51:39] *** Quits: Alipha (~AliphaX@user/alipha) (Quit: WeeChat 1.0.1)
[18:52:11] *** Joins: Alipha (~AliphaX@75-168-143-77.mpls.qwest.net)
[18:52:11] *** Quits: Alipha (~AliphaX@75-168-143-77.mpls.qwest.net) (Changing host)
[18:52:11] *** Joins: Alipha (~AliphaX@user/alipha)
[19:03:09] <Alipha> nq: https://godbolt.org/z/39qo4havE
[19:13:56] *** Quits: oartemeva (~oartemeva@h86-62-71-213.ln.rinet.ru) (Quit: WeeChat 2.8)
[20:00:09] <nq> Alipha: nothing stops me in that regard; but it wories me that I have to use "the latest and greatest" for that
[20:01:54] <Alipha> nq: I gave you both c++17 and 20. And the 17 could be rewritten for 11, using ::value and ::type instead of _v and _t
[20:02:18] <Alipha> The term you're looking for is partial template specialization, btw
[20:04:10] <nq> so template<> struct A <...> is "complete specialization" and template<..> struct A <..> is "partial specialization" ?
[20:07:34] <nq> it's weird that integral type is really integer type; since integral used to (/ does still) mean types like {int, float, char, bool}
[20:07:48] <nq> but not the user-defined structs
[20:36:07] *** Quits: osfe (~lemaire@nanpc540.in2p3.fr) (Ping timeout: 260 seconds)
[20:36:57] *** Quits: Inline__ (~Inline@p200300cd4709ad00c6efe95d186eec52.dip0.t-ipconnect.de) (Quit: Leaving)
[20:41:14] *** Quits: nq (~nq@2a02:2f08:e015:a900:99af:f5ee:ecd5:7377) (Ping timeout: 268 seconds)
[20:43:07] *** Joins: LuckyFire (~LuckyFire@79.125.172.127)
[20:44:39] *** Quits: night_wulfe (~wulfe@cpe-174-103-156-213.cinci.res.rr.com) (Quit: And I'm out.)
[20:53:34] *** Joins: nq (~nq@82.79.141.40)
[20:54:56] *** Joins: Inline (~Inline@p200300cd4709ad00c6efe95d186eec52.dip0.t-ipconnect.de)
[21:05:15] *** Joins: LuckyFire_ (~LuckyFire@79.125.172.127)
[21:08:19] *** Quits: LuckyFire (~LuckyFire@79.125.172.127) (Ping timeout: 260 seconds)
[21:12:54] *** Joins: str0 (~str0@178.220.28.32)
[21:18:06] <Raziel> nq, integral is anything that it says it is here https://en.cppreference.com/w/cpp/types/is_integral
[21:19:09] <Raziel> int, char and bool, yes, but no float :p
[21:19:18] <nq> ah, so float actually isn't
[21:24:28] <Raziel> nq, then you have is_floating_point for floats, doubles, long doubles, and is_arithmetic includes both integrals and floats
[21:32:57] *** Quits: seninha (~seninha@user/seninha) (Ping timeout: 240 seconds)
[21:44:35] <Alipha> Yes. <nq> so template<> struct A <...> is "complete specialization" and template<..> struct A <..> is "partial specialization" ?
[21:59:44] *** Quits: mint (~mint@46.159.204.49) (Quit: Leaving)
[22:01:30] *** Joins: mint (~mint@46.159.204.49)
[22:16:32] *** Joins: spaceangel (~spaceange@ip-78-102-216-202.net.upcbroadband.cz)
[22:27:19] *** Quits: Alipha (~AliphaX@user/alipha) (Quit: WeeChat 1.0.1)
[22:29:28] *** Joins: Alipha (~AliphaX@75-168-143-77.mpls.qwest.net)
[22:29:28] *** Quits: Alipha (~AliphaX@75-168-143-77.mpls.qwest.net) (Changing host)
[22:29:28] *** Joins: Alipha (~AliphaX@user/alipha)
[22:30:11] *** Joins: segnior (segnior@user/segnior)
[22:36:13] *** Joins: artok (~azo@mobile-access-b04817-209.dhcp.inet.fi)
[22:51:49] *** Joins: CalamityBlue (~CalamityB@user/CalamityBlue)
[22:52:26] *** Quits: CalamityToo (~CalamityB@user/CalamityBlue) (Ping timeout: 245 seconds)
[22:55:07] *** Joins: CalamityToo (~CalamityB@user/CalamityBlue)
[22:55:07] *** Quits: CalamityToo (~CalamityB@user/CalamityBlue) (Client Quit)
[22:55:23] *** Joins: CalamityToo (~CalamityB@user/CalamityBlue)
[22:55:48] *** Quits: CalamityBlue (~CalamityB@user/CalamityBlue) (Ping timeout: 240 seconds)
[23:08:43] *** Quits: markong (~kvirc@213.146.188.203) (Ping timeout: 260 seconds)
[23:41:22] *** Quits: artok (~azo@mobile-access-b04817-209.dhcp.inet.fi) (Quit: workwork)
[23:42:33] *** Joins: magla (~gelignite@d53678fd.access.ecotel.net)
