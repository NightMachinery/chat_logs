[00:04:29] *** Joins: jjido (~Denis@2a02:c7f:5c91:e700:447b:43e0:477e:ac6f)
[00:05:56] *** Joins: jmdaemon (~jmdaemon@user/jmdaemon)
[00:17:05] <FromDiscord> <auxym> sent a code paste, see https://paste.rs/dxu
[00:17:21] <FromDiscord> <auxym> sent a code paste, see https://play.nim-lang.org/#ix=3NiT
[00:33:15] *** Quits: jjido (~Denis@2a02:c7f:5c91:e700:447b:43e0:477e:ac6f) (Quit: My MacBook Air has gone to sleep. ZZZzzz…)
[00:46:03] *** Joins: noeontheend (~noeonthee@207.237.194.194)
[00:53:17] <FromDiscord> <auxym> nvm i'm an idiot
[01:01:12] *** Joins: jjido (~Denis@2a02:c7f:5c91:e700:447b:43e0:477e:ac6f)
[01:05:57] *** Quits: noeontheend (~noeonthee@207.237.194.194) (Ping timeout: 240 seconds)
[01:11:28] *** Quits: jjido (~Denis@2a02:c7f:5c91:e700:447b:43e0:477e:ac6f) (Quit: My MacBook Air has gone to sleep. ZZZzzz…)
[01:18:23] *** Joins: Gustavo6046 (~Gustavo60@user/gustavo6046)
[01:33:31] *** Joins: jjido (~Denis@2a02:c7f:5c91:e700:447b:43e0:477e:ac6f)
[01:38:05] <FromDiscord> <ynfle> Why can't JsonNode be `const`?
[01:40:32] <FromDiscord> <enthus1ast> sent a code paste, see https://play.nim-lang.org/#ix=3Njh
[01:41:08] <FromDiscord> <Phil> I'm at the point where I solely want the type conversion
[01:41:12] <FromDiscord> <Phil> I don't even care about the SQL
[01:41:44] <FromDiscord> <enthus1ast> yes this is the idea of my weekend hack
[01:42:15] <FromDiscord> <Phil> Let me write the SQL myself, I've got some usecases there's literally no snowball's chance in hell the orm can cover (FTS5 in sqlite), but boy converting from sqlite3 output to types is agonizing
[01:42:42] <FromDiscord> <enthus1ast> yes
[01:42:54] <FromDiscord> <enthus1ast> if you like i opensource my hack for you, maybe you like it
[01:43:46] <FromDiscord> <Phil> In reply to @enthus1ast "yes this is the": I'll check it out, maybe use it and norm in parallel, norm for the default stuff and this for the complex queries, I'll need to think on that one, thank you very much for giving me a code example! I'll definitely check it out because I really need the ability to do some raw sql --> custom type and the prospect of writing that code by hand put me in a bit of a state of coding paralysis
[01:44:02] <FromDiscord> <enthus1ast> the good thing is that since its just a "sequence unpacker" it also works in non database context (eg csv parsing etc)
[01:44:16] *** Quits: jjido (~Denis@2a02:c7f:5c91:e700:447b:43e0:477e:ac6f) (Quit: My MacBook Air has gone to sleep. ZZZzzz…)
[01:44:57] *** Joins: m5zs7k (aquares@web10.mydevil.net)
[01:45:01] <FromDiscord> <Phil> Oh wait, that was a usage example, would the actual code of your "to" function be available? I'd love to take a look at it on... err... looking at my timetable, tomorrow or sometime wednesday
[01:45:31] <FromDiscord> <ajusa> In reply to @Isofruit "I'll check it out,": BTW Norm doesn't hide the db connection from you, if you want you can directly write the complex stuff.
[01:45:42] <FromDiscord> <ajusa> Oh wait this is Isofruit you probably knew thay
[01:45:47] <FromDiscord> <ajusa> (edit) "thay" => "that"
[01:45:54] <FromDiscord> <enthus1ast> mom let me upload it do github (its in an awfull shape, was not planning to release it so soon
[01:45:58] <FromDiscord> <Phil> In reply to @ajusa "BTW Norm doesn't hide": Yeh, that I liked, but then I couldn't find a way to do the type conversion on a model without an id field
[01:46:34] <FromDiscord> <Phil> Since FTS5 tables are basically virtual tables without ID fields, being forced to use norm models when I want the select-output to be converted into a type for me kind of screws me
[01:46:42] <FromDiscord> <Phil> Because no id field means select proc errors out
[01:47:32] <FromDiscord> <Phil> In reply to @ajusa "Oh wait this is": Awww yeah, getting a reputation that I have like 5% of an idea of what I'm doing! 😄
[01:48:31] <FromDiscord> <enthus1ast> https://github.com/enthus1ast/nisane
[01:48:42] <FromDiscord> <enthus1ast> you just construct you query like normal
[01:48:46] <FromDiscord> <enthus1ast> then unpack it
[01:49:26] <FromDiscord> <enthus1ast> ref objects are not yet supported, since they ast is strange
[01:49:36] <FromDiscord> <enthus1ast> but objects, tuples, int, string, float are
[01:51:20] <FromDiscord> <Elegantbeef> I mean their AST isnt that strange, it's 1 extra node 😛
[01:51:21] <FromDiscord> <Phil> Seeing as it uses pretty decently sized macros and I have only really... let's say I've understood a one line macro so far and that's the extent of my knowledge, I've got a question concerning capabilities.↵I only spotted procs for toString, toInt, toChar etc., but no toBool, do you handle that without needing an extra proc or do you handle bools with "toInt" ?
[01:51:24] <FromDiscord> <enthus1ast> and the ct macro and ci macro just creates create table strings and insert strings out of a tyoe
[01:51:58] <FromDiscord> <Phil> (edit) "Seeing as it uses pretty decently sized macros and I have only really... let's say I've understood a one line macro so far and that's the extent of my knowledge, I've got a question concerning capabilities.↵I only spotted procs for toString, toInt, toChar etc., but no toBool, do you handle that without needing an extra proc or do you ... handlethem" 03added "treat bools as int and" | "bools" => "them"
[01:52:22] <FromDiscord> <enthus1ast> [Elegantbeef](https://matrix.to/#/@elegantbeef:matrix.org)\: i found no way to get to the ACTUAL type definition, @mratsim was pointing me to a possible solution, but not yet doen
[01:52:29] <FromDiscord> <enthus1ast> no to bool is missing
[01:52:47] <FromDiscord> <Elegantbeef> you have the a type or value?
[01:53:16] <FromDiscord> <enthus1ast> both, for the to macro it must be a value for the create macros its a type (or even a value, should not change much)
[01:53:51] <FromDiscord> <Elegantbeef> if it's a value `getImpl` should suffice
[01:53:59] <FromDiscord> <Elegantbeef> If it's a type `getTypeImpl` should suffice
[01:54:04] <FromDiscord> <enthus1ast> nope its not
[01:54:30] <FromDiscord> <ynfle> Why can't JsonNode be const?
[01:54:46] <FromDiscord> <enthus1ast> could be that i have done something wrong, but found no way yet
[01:54:57] <FromDiscord> <Elegantbeef> It's a complex ref object is the only reason i can imagine
[01:55:10] <FromDiscord> <Phil> I'll give myself a ping here because I know not of how to bookmark a thing @Phil and then stare at the code some more and the debate around it when I am not about to go to sleep
[01:55:15] <FromDiscord> <Elegantbeef> Well can you give me an example of the object you're attempting to get the type information of?
[01:55:22] <FromDiscord> <Phil> (edit) "I'll give myself a ping here because I know not of how to bookmark a thing ... @Phil" 03added "in discord"
[01:55:56] <FromDiscord> <enthus1ast> sent a code paste, see https://play.nim-lang.org/#ix=3Njl
[01:56:49] <FromDiscord> <Phil> ... maybe I should make a package out of my db connection pool, it may be tiny but it's better than having to write it yourself
[01:57:17] <FromDiscord> <enthus1ast> i would love to have a sane orm without much magic
[01:58:13] <FromDiscord> <Phil> A proper ORM that includes dealing with DB migration and more I can't see at the moment, not when I consider where we are currently and the amount of work it takes to get to where we'd need to be
[01:58:45] <FromDiscord> <Phil> I'll set my sights lower to having something that just does the DB interface for DML for me and I deal myself with the DDL
[01:59:03] <FromDiscord> <Phil> (edit) "I'll set my sights lower to having something that just does the DB interface for DML for me ... and" 03added "(but does that well and flexibly)"
[01:59:29] <FromDiscord> <ajusa> In reply to @Isofruit "A proper ORM that": Norm technically has a migration manager. Personally I'd love to see more work being put into it rather than alternative libraries as Nim doesn't need more fragmentation. I also know that you've been making PRs 😄
[02:01:08] <FromDiscord> <ynfle> Can `const` be a `ref` type?
[02:02:50] <FromDiscord> <Phil> Kind of. Norm misses a couple things for me to consider letting it handle DML stuff:↵Support for views chief among them. That one in particular is a thing I have no idea how that could be implemented. I don't even have a good idea on how one could implement signals in norm. My current version relies on specifically named procs with a generic signature being within the calling context which is...suboptimal to say the least
[02:02:55] <FromDiscord> <Elegantbeef> enthus here you go https://play.nim-lang.org/#ix=3Njn
[02:03:31] <FromDiscord> <Elegantbeef> It can be but not complex ones iirc
[02:03:40] <FromDiscord> <enthus1ast> nice! Thanks
[02:04:03] <FromDiscord> <enthus1ast> i tried various combinations of getImpl getTypeImpl....
[02:04:21] <FromDiscord> <Elegantbeef> I guess i was wrong and no it cannot be ref objects
[02:04:37] <FromDiscord> <ynfle> In reply to @Elegantbeef "It can be but": Was that a reply to me?
[02:05:13] <FromDiscord> <Elegantbeef> It makes sense given you cannot serialize references
[02:05:44] <FromDiscord> <Elegantbeef> Well i mean you can serialize references but not to raw C
[02:06:18] <FromDiscord> <Elegantbeef> Yes
[02:06:28] <FromDiscord> <enthus1ast> i mean, types from a db are most often not that complex i guess
[02:06:39] <FromDiscord> <enthus1ast> depending what you mean with complex
[02:06:41] <FromDiscord> <Elegantbeef> I mean i was talking about  constant references
[02:06:45] <FromDiscord> <Elegantbeef> Your stuff will always work
[02:07:03] <FromDiscord> <Elegantbeef> Many people have serializers that work on all objects
[02:08:06] <FromDiscord> <Elegantbeef> Depending on what you want you could use disruptek's `assume` package which has `typeit` allowing you to iterate fields of objects
[02:08:26] <FromDiscord> <Elegantbeef> https://github.com/disruptek/assume/blob/master/tests/typeit.nim#L102-L199 for example of it in use
[02:22:11] *** adigitoleo_ is now known as adigitoleo
[02:42:07] <FromDiscord> <ynfle> What kind of error isError: expression '1.0'f64' is of type 'float64' and has to be used (or discarded)↵    echo testConvertToNimArg(%1.0)
[02:42:31] <FromDiscord> <ynfle> (edit) "What kind of error isError: expression '1.0'f64' is of type 'float64' and has to be used (or discarded)↵    echo testConvertToNimArg(%1.0)" => "sent a code paste, see https://play.nim-lang.org/#ix=3Njt"
[02:42:39] <FromDiscord> <ynfle> There is an echo there
[02:42:44] <FromDiscord> <ynfle> I'm very confused
[02:45:17] <FromDiscord> <Elegantbeef> What does `textConvertToNimArg` convert it into
[02:45:17] <FromDiscord> <Elegantbeef> My money is on an unhandled float
[02:45:54] <FromDiscord> <ynfle> It's a macro that generates the nimcode of `convertToNimArg`
[02:46:27] <FromDiscord> <enthus1ast> what return type does the macro has?
[02:46:29] <FromDiscord> <Elegantbeef> That doesnt answer the question
[02:46:47] <FromDiscord> <Elegantbeef> compile with `--expandMacro:testConvertToNimarg`
[02:47:32] <FromDiscord> <ynfle> It doesn't work
[02:47:35] <FromDiscord> <ynfle> I'll try
[02:48:24] <FromDiscord> <ynfle> Won't expand
[02:48:58] <FromDiscord> <Elegantbeef> Did you forget to import `std/json`?
[02:49:29] <FromDiscord> <Elegantbeef> There isnt much reason for it to error unless youre macro has a return type other than `: untyped`
[02:49:46] <FromDiscord> <ynfle> I didn't specify a return type
[02:49:52] <FromDiscord> <ynfle> Should I?
[02:50:11] <FromDiscord> <Elegantbeef> Put untyped on it and see if that changes
[02:50:22] <FromDiscord> <ynfle> That works
[02:50:25] <FromDiscord> <ynfle> Very confused
[02:50:31] <FromDiscord> <ynfle> Why should that work?
[02:50:56] <FromDiscord> <Elegantbeef> Cause without a return type on the macro it's an unhandled value
[02:53:48] <FromDiscord> <ynfle> Ah
[02:53:52] <FromDiscord> <ynfle> Good to know
[03:00:06] <FromDiscord> <ynfle> sent a code paste, see https://play.nim-lang.org/#ix=3Njy
[03:00:11] <FromDiscord> <ynfle> Says illegal ast
[03:09:02] <FromDiscord> <ynfle> Any easy way to debug `illformed AST`?
[03:09:09] *** Quits: neceve (~quassel@2.26.93.228) (Ping timeout: 256 seconds)
[03:10:43] <FromDiscord> <Elegantbeef> Not really
[03:14:23] <FromDiscord> <ynfle> What does the location mean fo the error mean?
[03:14:40] <FromDiscord> <ynfle> THis is what I get
[03:14:41] <FromDiscord> <ynfle> sent a code paste, see https://play.nim-lang.org/#ix=3NjC
[03:14:44] <FromDiscord> <ynfle> (edit) "THis" => "Tgis"
[03:14:48] <FromDiscord> <ynfle> (edit) "Tgis" => "This"
[03:15:01] <FromDiscord> <ynfle> (edit) 
[03:15:13] <FromDiscord> <Elegantbeef> The AST has something wrong with it
[03:15:21] <FromDiscord> <Elegantbeef> Cant say anything else
[03:15:32] <FromDiscord> <ynfle> Edited
[03:15:33] <FromDiscord> <ynfle> (edit) "https://play.nim-lang.org/#ix=3NjC" => "https://play.nim-lang.org/#ix=3NjD"
[03:15:46] <FromDiscord> <ynfle> It points to th ufcs call to gettypeimpl
[03:15:49] <FromDiscord> <Elegantbeef> You're missing the body of the for loop
[03:16:21] <FromDiscord> <ynfle> sent a code paste, see https://play.nim-lang.org/#ix=3NjE
[03:17:13] <FromDiscord> <Elegantbeef> I dont know what to say
[03:17:13] <FromDiscord> <Elegantbeef> why arent you using `genasts`
[03:18:26] <FromDiscord> <ynfle> Formal params doens't play nice
[03:18:30] <FromDiscord> <ynfle> At least with quote
[03:18:40] <FromDiscord> <ynfle> Didn't try genast
[03:18:45] <FromDiscord> <ynfle> I'm too old fashioned
[03:19:00] <FromDiscord> <Elegantbeef> Well you can use genast/quote do then add them manually
[03:25:04] <FromDiscord> <ynfle> sent a code paste, see https://play.nim-lang.org/#ix=3NjF
[03:25:27] <FromDiscord> <Elegantbeef> I dont know look at the AST of what you generated vs. manually created
[03:28:01] <FromDiscord> <ynfle> I switched to genast and still got the error
[03:28:13] <FromDiscord> <ynfle> I only get that error with expandMacros:
[03:28:37] <FromDiscord> <Elegantbeef> I mean you're generating invalid AST changing how you generate it isnt going to make it cleaner
[03:30:09] *** Quits: tk (~tk@ircpuzzles/staff/tk) (Quit: Well, this is unexpected.)
[03:30:33] *** Joins: tk (~tk@ircpuzzles/staff/tk)
[03:34:16] <FromDiscord> <ynfle> I work without the expandMacros: macro but is illegal ast with it
[03:34:33] <FromDiscord> <Elegantbeef> I dont know what to say
[03:37:50] <FromDiscord> <ynfle> Next confusion. When the input to the macro is a json container type (object or array) I get an error lib/system/dollars.nim(131, 10) Error: request to generate code for .compileTime proc: Lit
[03:38:04] <FromDiscord> <ynfle> (edit) "Next confusion. When the input to the macro is" => "sent" | 04removed "json container type (object or array) I get an error lib/system/dollars.nim(131, 10) Error: request to generate" | "for .compileTime proc: Lit" => "paste, see https://play.nim-lang.org/#ix=3NjJ"
[03:45:07] <FromDiscord> <Patitotective> sent a code paste, see https://play.nim-lang.org/#ix=3NjK
[03:45:40] <FromDiscord> <demotomohiro> You cannot store type to variable
[03:45:52] <FromDiscord> <Patitotective> 😕
[03:46:06] <FromDiscord> <demotomohiro> Why do you want to put type to variable?
[03:46:14] <FromDiscord> <ynfle> @Patitotective What are you trying to do?
[03:46:22] <FromDiscord> <ynfle> In reply to @ynfle "Next confusion. When the": Seems related to https://github.com/nim-lang/Nim/issues/10753
[03:47:09] <FromDiscord> <Patitotective> sent a code paste, see https://paste.rs/3K3
[03:47:19] <FromDiscord> <Patitotective> (edit) "https://play.nim-lang.org/#ix=3NjM" => "https://play.nim-lang.org/#ix=3NjL"
[03:47:28] <FromDiscord> <Patitotective> (edit) "https://play.nim-lang.org/#ix=3NjL" => "https://play.nim-lang.org/#ix=3NjN"
[03:47:33] <FromDiscord> <ynfle> And then what? Are you in a macro?
[03:47:57] <FromDiscord> <Patitotective> (I'm creating a parser)
[03:48:11] <FromDiscord> <demotomohiro> Nim is statically typed language and types doesn't exists at runtime.
[03:48:21] <FromDiscord> <Patitotective> sent a code paste, see https://play.nim-lang.org/#ix=3NjO
[03:48:39] <FromDiscord> <ynfle> I'd say template
[03:48:55] <FromDiscord> <Patitotective> In reply to @demotomohiro "Nim is statically typed": I always forgot :p
[03:48:56] <FromDiscord> <Patitotective> lol
[03:49:12] <FromDiscord> <Patitotective> Gonna do something different
[03:49:13] <FromDiscord> <Patitotective> Thanks
[03:49:14] <FromDiscord> <Patitotective> 🙃
[03:49:20] <FromDiscord> <Patitotective> (edit) "forgot" => "forget"
[03:50:02] <FromDiscord> <demotomohiro> Maybe this is what you really needs:
[03:50:03] <FromDiscord> <demotomohiro> https://nim-lang.org/docs/manual.html#types-object-variants
[03:51:06] <FromDiscord> <Patitotective> I already have that lol, It's just that I only have `float` type, not 32 or 64↵Thanks anyways 🙃
[03:51:08] <NimEventer> New question by How2: Add the ability to use tabulation in Nim, see https://stackoverflow.com/questions/70827737/add-the-ability-to-use-tabulation-in-nim
[03:53:40] <FromDiscord> <ynfle> In reply to @ynfle "Seems related to https://github.com/nim-lang/Nim/is": @demotomohiro Did you every find a solution for this issue of yours?
[03:59:51] *** Joins: noeontheend (~noeonthee@207.237.194.194)
[04:30:25] <FromDiscord> <Elegantbeef> there is a work around
[04:30:30] <FromDiscord> <Elegantbeef> sent a code paste, see https://play.nim-lang.org/#ix=3NjS
[04:34:06] <FromDiscord> <Patitotective> sent a code paste, see https://play.nim-lang.org/#ix=3NjT
[04:42:02] <FromDiscord> <Elegantbeef> Warning are compile time
[04:43:27] <FromDiscord> <Patitotective> So `echo`?↵The thing is when I parse some _NiPrefs_ file it has to convert any `float32` to `float`, so it does warn you `Implicit conversion form float32 to float`
[04:43:56] <FromDiscord> <Patitotective> (edit) "So `echo`?↵The thing is ... when" 03added "that"
[04:46:26] <FromDiscord> <Elegantbeef> Well an echo isnt the best since it happens at runtime and can mess the program using your library up
[04:47:12] <FromDiscord> <Patitotective> Maybe I should just say that it does that in the docs (?)
[04:47:42] <FromDiscord> <Elegantbeef> Well i mean you make it more useless
[04:47:59] <FromDiscord> <Elegantbeef> Do users need to know this or the programmers that use this library?
[04:49:23] *** Quits: krux02 (~krux02@p200300e81723dd00b48b627b8314596f.dip0.t-ipconnect.de) (Remote host closed the connection)
[04:49:47] <FromDiscord> <Patitotective> In reply to @Elegantbeef "Do users need to": This only happens when you are writing your own _NiPrefs_ file, in which case you don't normally write floats, so I guess no
[04:50:17] <FromDiscord> <Patitotective> (edit) "writing your own" => "parsing a"
[04:53:15] <FromDiscord> <Elegantbeef> So perhaps just a warning in the source
[04:57:58] *** Joins: vicfred (~vicfred@user/vicfred)
[05:00:04] <FromDiscord> <Elegantbeef> Maybe with `-d:niPrefsFloatConv` but idk
[05:00:20] <FromDiscord> <Patitotective> In reply to @Elegantbeef "So perhaps just a": But isn't that going to warn the user every time the user uses the library?
[05:00:36] <FromDiscord> <Elegantbeef> The programmer yes if the convert float -\> float32
[05:01:52] <FromDiscord> <Patitotective> sent a code paste, see https://play.nim-lang.org/#ix=3NjY
[05:02:14] <FromDiscord> <Elegantbeef> Oh  then I dont know what to do, just document the behaviour
[05:02:25] <FromDiscord> <Elegantbeef> The end user doesnt need to know this really afaict
[05:02:47] <FromDiscord> <Patitotective> ok, thanks 🙃
[05:10:00] <FromDiscord> <demotomohiro> In reply to @ynfle "<@!288750616510201856> Did you every": I forget about the issue and workaround.
[05:51:47] *** Quits: neurocyte0917090 (~neurocyte@user/neurocyte) (Ping timeout: 256 seconds)
[06:11:46] *** Joins: vicfred_ (~vicfred@user/vicfred)
[06:14:02] *** Quits: vicfred (~vicfred@user/vicfred) (Ping timeout: 250 seconds)
[06:14:57] *** Quits: noeontheend (~noeonthee@207.237.194.194) (Ping timeout: 240 seconds)
[06:16:29] *** Joins: noeontheend (~noeonthee@207.237.194.194)
[06:19:45] *** Quits: arkurious (~arkurious@user/arkurious) (Quit: Leaving)
[06:28:24] <FromDiscord> <Evrensel Kişilik> are there C blocks in Nim?
[06:28:28] <FromDiscord> <Evrensel Kişilik> i mean
[06:28:37] <FromDiscord> <Evrensel Kişilik> can i write C in a Nim sousrce?
[06:28:38] <FromDiscord> <Elegantbeef> Can you emit C code inline?
[06:28:47] <FromDiscord> <Evrensel Kişilik> bot
[06:28:55] <FromDiscord> <Evrensel Kişilik> you can't understand all questions
[06:29:09] <FromDiscord> <Elegantbeef> sent a code paste, see https://play.nim-lang.org/#ix=3Nkl
[06:29:13] <FromDiscord> <Evrensel Kişilik> oh nooo
[06:29:13] <FromDiscord> <Elegantbeef> Cant tell if you still think i'm a bot or are still jokiing
[06:29:15] <FromDiscord> <Evrensel Kişilik> what's this
[06:29:28] <FromDiscord> <Elegantbeef> an emit pragma which emits backend code
[06:29:29] <FromDiscord> <Evrensel Kişilik> In reply to @Elegantbeef "Cant tell if you": you can't manipulate my mind
[06:29:30] <FromDiscord> <Evrensel Kişilik> !
[06:29:34] <FromDiscord> <Elegantbeef> In this case C code
[06:29:41] <FromDiscord> <Evrensel Kişilik> loooooooooooooook
[06:29:47] <FromDiscord> <ElegantBeef> If he cant manipulate your mind, can I?
[06:29:59] <FromDiscord> <Evrensel Kişilik> In reply to @ElegantBeef "If he cant manipulate": :BANNED:
[06:30:11] <FromDiscord> <Evrensel Kişilik> i like it
[06:30:14] <FromDiscord> <Evrensel Kişilik> damn
[06:30:17] <FromDiscord> <Evrensel Kişilik> we can write C
[06:30:18] *** Quits: Gustavo6046 (~Gustavo60@user/gustavo6046) (Remote host closed the connection)
[06:30:41] *** Joins: Gustavo6046 (~Gustavo60@user/gustavo6046)
[06:30:43] <FromDiscord> <Elegantbeef> Yes it makes interop easier
[06:31:09] <FromDiscord> <Evrensel Kişilik> https://github.com/nim-lang/Nim/wiki/Nim-for-C-programmers
[06:31:47] <FromDiscord> <Elegantbeef> Yea it's surprisingly a good language
[06:32:12] <FromDiscord> <Evrensel Kişilik> please leave this server @ElegantBeef
[06:32:16] <FromDiscord> <Elegantbeef> No
[06:32:18] <FromDiscord> <Evrensel Kişilik> i dont want to talk to a bot
[06:32:32] <FromDiscord> <Elegantbeef> Well i'm not a bot
[06:32:38] <FromDiscord> <Elegantbeef> Come use matrix and you can be a bot too
[06:32:52] <FromDiscord> <Evrensel Kişilik> loooooooooooooooook
[06:33:05] <FromDiscord> <Elegantbeef> Looking
[06:33:17] <FromDiscord> <Evrensel Kişilik> no sugar left in my home right now
[06:33:25] <FromDiscord> <Evrensel Kişilik> and it is 06:03
[06:33:37] <FromDiscord> <Evrensel Kişilik> i need to drink tea
[06:33:37] <FromDiscord> <Elegantbeef> Shame how will you have your tea
[06:33:41] <FromDiscord> <Evrensel Kişilik> do you understand?
[06:33:45] <FromDiscord> <Evrensel Kişilik> you can'T
[06:33:49] <FromDiscord> <Evrensel Kişilik> cuz you're a bot
[06:33:55] <FromDiscord> <Evrensel Kişilik> you can't taste tea
[06:33:56] <FromDiscord> <Elegantbeef> No i dont understand cause i dont drink tea
[06:33:57] *** Quits: noeontheend (~noeonthee@207.237.194.194) (Ping timeout: 240 seconds)
[06:34:03] <FromDiscord> <Evrensel Kişilik> 😱
[06:34:25] <FromDiscord> <Evrensel Kişilik> sooooooooooooooooooooooooooooo
[06:34:27] <FromDiscord> <Evrensel Kişilik> look
[06:34:53] <FromDiscord> <Evrensel Kişilik> is the only way writing C in Nim to use C libraries?
[06:35:07] <FromDiscord> <Evrensel Kişilik> or
[06:35:10] <FromDiscord> <Evrensel Kişilik> i think
[06:35:18] <FromDiscord> <Evrensel Kişilik> we can also write bindings right?
[06:35:24] <FromDiscord> <Evrensel Kişilik> oh no
[06:35:26] <FromDiscord> <Evrensel Kişilik> oh nooooooooooooooooooooo
[06:35:34] <FromDiscord> <Evrensel Kişilik> loooook
[06:35:38] <FromDiscord> <Evrensel Kişilik> wait
[06:35:53] <FromDiscord> <Evrensel Kişilik> sent a code paste, see https://play.nim-lang.org/#ix=3Nkl
[06:35:54] <FromDiscord> <Evrensel Kişilik> this
[06:35:59] <FromDiscord> <Elegantbeef> You can interop with C
[06:36:03] <FromDiscord> <Evrensel Kişilik> nooooooooo
[06:36:06] <FromDiscord> <Evrensel Kişilik> wait
[06:36:08] <FromDiscord> <Evrensel Kişilik> im asking
[06:36:16] <FromDiscord> <Evrensel Kişilik> how does this work with debugger?
[06:36:26] <FromDiscord> <Elegantbeef> Not a clue
[06:36:42] <FromDiscord> <Evrensel Kişilik> In reply to @Elegantbeef "Not a clue": wdym?
[06:36:45] <FromDiscord> <Elegantbeef> Remember i'm only a bot in name
[06:36:55] <FromDiscord> <Elegantbeef> I've never tried debugging inline C
[06:37:11] <FromDiscord> <Elegantbeef> Ostensibly it writes it out somewhat properly
[06:37:16] <FromDiscord> <Evrensel Kişilik> oooooooooooook
[06:37:24] <FromDiscord> <Evrensel Kişilik> i have tooooo much work
[06:37:25] <FromDiscord> <Evrensel Kişilik> but
[06:37:35] <FromDiscord> <Evrensel Kişilik> i will take the debugger issue of this language
[06:37:58] <FromDiscord> <Evrensel Kişilik> i will make special things for the language
[06:38:39] <FromDiscord> <Evrensel Kişilik> hmmm
[06:38:41] <FromDiscord> <Evrensel Kişilik> for example
[06:38:48] <FromDiscord> <Evrensel Kişilik> in GDB you can't cast to `string`
[06:38:52] <FromDiscord> <leorize> emit is a PITA if you ask me
[06:39:08] <FromDiscord> <leorize> pretty much a hack, by design
[06:39:10] <FromDiscord> <Evrensel Kişilik> you can cast to `NimStringDesc`
[06:39:13] <FromDiscord> <Elegantbeef> It's
[06:39:18] <FromDiscord> <Elegantbeef> I mean there are benefits to it
[06:39:19] <FromDiscord> <Evrensel Kişilik> In reply to @leorize "emit is a PITA": you
[06:39:23] <FromDiscord> <Evrensel Kişilik> 😱
[06:39:27] <FromDiscord> <Evrensel Kişilik> another BOT
[06:39:37] <FromDiscord> <leorize> the nim devs have mastered AI
[06:39:38] <FromDiscord> <leorize> fear us
[06:39:47] <FromDiscord> <Elegantbeef> Cant master compiler dev though 😛
[06:39:47] <FromDiscord> <Evrensel Kişilik> where the fuck am i at?
[06:40:06] <FromDiscord> <Rika> The future
[06:40:11] <FromDiscord> <Rika> Or hell, you choose
[06:40:13] <madprops> the futon
[06:40:17] <FromDiscord> <Evrensel Kişilik> In reply to @Rika "Or hell, you choose": look
[06:40:23] <FromDiscord> <Rika> In reply to @madprops "the futon": That’s me right now
[06:40:26] <FromDiscord> <Rika> In the futon
[06:40:28] <FromDiscord> <Evrensel Kişilik> consciousness
[06:40:37] <FromDiscord> <Evrensel Kişilik> they don't have that
[06:41:10] <FromDiscord> <Rika> Are you sure 😛
[06:41:27] <FromDiscord> <Evrensel Kişilik> In reply to @Rika "Are you sure 😛": this is the main question!
[06:41:38] <FromDiscord> <Evrensel Kişilik> what is consciousness
[06:41:53] <FromDiscord> <Evrensel Kişilik> im making a new language
[06:42:07] <FromDiscord> <Evrensel Kişilik> it is the best
[06:42:11] <FromDiscord> <Elegantbeef> So to explain just incase you're actually scared these "bots" are users of the Matrix protocol and use a bridge specifically to scare you
[06:42:20] <FromDiscord> <Rika> Lol
[06:42:23] <FromDiscord> <Evrensel Kişilik> you have to leave Nim
[06:42:26] <FromDiscord> <Evrensel Kişilik> and use my language
[06:42:30] <FromDiscord> <Evrensel Kişilik> 😱
[06:42:42] <FromDiscord> <Rika> Can’t, it is a fact that Nim is the best language
[06:42:49] <FromDiscord> <Rika> Can’t get any better than Nim
[06:42:51] <FromDiscord> <Elegantbeef> Does it have wirth bitsets, distinct types, subrange types?
[06:42:53] *** Joins: the-true-mind (~leorize@user/leorize)
[06:43:11] <FromDiscord> <Evrensel Kişilik> In reply to @Elegantbeef "Does it have wirth": it is a scripting language
[06:43:13] <FromDiscord> <Evrensel Kişilik> but
[06:43:15] <FromDiscord> <leorize> does it have
[06:43:17] <the-true-mind> these glorious bots?
[06:43:21] <FromDiscord> <Evrensel Kişilik> oh no
[06:43:23] <FromDiscord> <Evrensel Kişilik> more bots
[06:43:26] <FromDiscord> <Evrensel Kişilik> i don't want more bots
[06:43:28] <FromDiscord> <Evrensel Kişilik> leave here
[06:43:29] <FromDiscord> <Evrensel Kişilik> get out
[06:43:40] <FromDiscord> <Rika> Lol
[06:43:40] <FromDiscord> <Elegantbeef> Yea leorize you fucking NPC
[06:43:54] <FromDiscord> <huantian> hold on lemme bootup my irc client
[06:43:56] *** Quits: the-true-mind (~leorize@user/leorize) (Remote host closed the connection)
[06:43:58] <FromDiscord> <Evrensel Kişilik> sooooooooo
[06:44:10] <FromDiscord> <Elegantbeef> Yooooooo
[06:44:11] <FromDiscord> <Evrensel Kişilik> my language is usable for extending something
[06:44:28] <FromDiscord> <Evrensel Kişilik> but it is unsafe
[06:44:34] <FromDiscord> <Evrensel Kişilik> and pretty fast
[06:45:05] <FromDiscord> <Elegantbeef> Let me guess it's named CScript?
[06:45:06] <FromDiscord> <Evrensel Kişilik> very different than Python
[06:45:15] <FromDiscord> <Evrensel Kişilik> In reply to @Elegantbeef "Let me guess it's": oh nooo
[06:45:21] <FromDiscord> <Evrensel Kişilik> it is a VM
[06:45:26] *** Joins: huantian (~huantian@c-24-23-76-78.hsd1.az.comcast.net)
[06:45:51] <FromDiscord> <Rika> PythonScript
[06:45:54] <FromDiscord> <Evrensel Kişilik> oh nooooooo
[06:46:01] <FromDiscord> <Evrensel Kişilik> dont tell me Python
[06:46:07] <FromDiscord> <Rika> Python 4
[06:46:08] <FromDiscord> <Evrensel Kişilik> the worst language
[06:46:09] <FromDiscord> <Evrensel Kişilik> ever
[06:46:12] <huantian> dang I wish I had a programming language like python but a scripting language instead
[06:46:22] <huantian> and they gotta get rid of those nasty type hints
[06:46:33] <FromDiscord> <Evrensel Kişilik> In reply to @huantian "and they gotta get": looooooook
[06:46:38] <FromDiscord> <Evrensel Kişilik> i tried to use type hints
[06:46:41] <FromDiscord> <Evrensel Kişilik> its good
[06:46:42] <FromDiscord> <Evrensel Kişilik> but
[06:46:45] <FromDiscord> <Evrensel Kişilik> i can't use them
[06:46:49] <FromDiscord> <Evrensel Kişilik> cuz if i use them
[06:46:52] <FromDiscord> <Rika> Huantian is being sarcastic
[06:46:58] <FromDiscord> <Rika> Just in case you don’t know
[06:47:04] <FromDiscord> <Evrensel Kişilik> damn software will not work on older Pythons
[06:47:13] <FromDiscord> <Elegantbeef> I wish we had python that was faster and nothing like python
[06:47:20] <FromDiscord> <Rika> So rust
[06:47:28] <FromDiscord> <Evrensel Kişilik> In reply to @Elegantbeef "I wish we had": it is my language
[06:48:07] <FromDiscord> <Elegantbeef> You're going to implement your language in Nim right?
[06:48:07] <FromDiscord> <Elegantbeef> Your new favourite langauge
[06:48:29] <FromDiscord> <Evrensel Kişilik> In reply to @Elegantbeef "You're going to implement": OH NOOOOOO
[06:48:31] <FromDiscord> <Evrensel Kişilik> never
[06:48:39] <FromDiscord> <Evrensel Kişilik> it is implemented in C
[06:48:44] <FromDiscord> <Elegantbeef> Too fast?
[06:48:53] <FromDiscord> <Evrensel Kişilik> In reply to @Elegantbeef "Too fast?": it is my plan lol
[06:49:03] <FromDiscord> <Rika> Why not Pascal
[06:49:12] <FromDiscord> <Elegantbeef> Better C
[06:49:36] <FromDiscord> <Rika> I still have dreams of a world where Pascal was the C of that world
[06:49:58] <FromDiscord> <Elegantbeef> In that world Nim isnt created cause pascal grows into what Nim is
[06:49:59] <huantian> ok but consider implmeenting it in minecraft command blocks
[06:50:02] <FromDiscord> <Evrensel Kişilik> Pascal is a shit
[06:50:23] <FromDiscord> <Elegantbeef> The only downside is that to balance the odds one of the contributors to pascal makes a shitty language called "Get"
[06:50:30] <FromDiscord> <Evrensel Kişilik> https://github.com/pragmagic/godot-nim
[06:50:34] <FromDiscord> <Evrensel Kişilik> you BOT
[06:50:40] <FromDiscord> <Evrensel Kişilik> @ElegantBeef you are everywhere!
[06:50:46] <FromDiscord> <Elegantbeef> Hey something i've contributed to
[06:50:50] <FromDiscord> <Elegantbeef> I'm a good bot
[06:51:04] <huantian> can't believe beef contributes to nim projects
[06:51:17] <FromDiscord> <Elegantbeef> Same my creator was nice and gave me taste
[06:51:22] <FromDiscord> <Evrensel Kişilik> looooooooook
[06:51:23] <FromDiscord> <Elegantbeef> Imagine if i contributed to C projects
[06:51:27] <FromDiscord> <Evrensel Kişilik> is this thingy stable?
[06:51:36] <FromDiscord> <Elegantbeef> People have used it to make games
[06:51:40] <FromDiscord> <Elegantbeef> So it's somewhat
[06:51:50] <FromDiscord> <Evrensel Kişilik> what language is first Nim compiler written in?
[06:51:58] <FromDiscord> <Elegantbeef> Pscal
[06:52:02] <FromDiscord> <Elegantbeef> Pascal\
[06:52:05] <FromDiscord> <Evrensel Kişilik> im leaving here
[06:52:18] <FromDiscord> <Elegantbeef> It was then transpiled using pas2nim
[06:52:19] <FromDiscord> <huantian> scary alternate universes
[06:52:24] <FromDiscord> <Elegantbeef> I mean Nim is heavily pascal inspired
[06:52:37] <FromDiscord> <Elegantbeef> 2/3 of the languages it gets inspiration from vocally are pascal 😀
[06:52:49] <FromDiscord> <Elegantbeef> > It combines successful concepts from mature languages like Python, Ada and Modula
[06:52:49] <FromDiscord> <Rika> In reply to @Evrensel Kişilik "im leaving here": Bruh
[06:52:55] <FromDiscord> <Evrensel Kişilik> theeen
[06:52:59] <FromDiscord> <Evrensel Kişilik> compile to Pascal
[06:53:00] <FromDiscord> <Evrensel Kişilik> damn
[06:53:05] <FromDiscord> <Evrensel Kişilik> what a bullshit
[06:53:07] <FromDiscord> <Rika> No it compiles to C
[06:53:08] <FromDiscord> <Elegantbeef> But  C is supported wider
[06:53:17] <FromDiscord> <Elegantbeef> Pascal is more obscure
[06:53:20] <FromDiscord> <Evrensel Kişilik> then why didn't you write it in C?
[06:53:22] <FromDiscord> <Evrensel Kişilik> firstly
[06:53:30] <FromDiscord> <Elegantbeef> Cause Araq prefered pascal
[06:53:36] <FromDiscord> <Evrensel Kişilik> what is that
[06:53:37] <FromDiscord> <Rika> Because the creator liked Pascal more
[06:53:44] <FromDiscord> <Rika> Araq is the creator
[06:53:46] <FromDiscord> <Elegantbeef> He wrote a pascal inspired langauge it in object pascal since he liked pascal more than C
[06:53:50] <FromDiscord> <Evrensel Kişilik> THE GOD 😱
[06:53:57] <FromDiscord> <Elegantbeef> He used C as the IR as it's a widely supported language with performance
[06:54:18] <FromDiscord> <Evrensel Kişilik> 😱 😱 😱 😱 😱 😱 😱 😱 😱
[06:54:23] <FromDiscord> <Rika> I mean technically Assembly is also a widely supported language with performance 😛
[06:54:33] <FromDiscord> <Evrensel Kişilik> In reply to @Rika "I mean technically Assembly": looooooook
[06:54:36] <FromDiscord> <huantian> yeah but who likes assembly
[06:54:37] <FromDiscord> <Rika> It’s a joke
[06:54:37] <FromDiscord> <Evrensel Kişilik> we are just NOOOBS
[06:54:41] <FromDiscord> <Evrensel Kişilik> we can't write assembly
[06:54:52] <FromDiscord> <Elegantbeef> Well i mean assembly isnt portable, but yes 😀
[06:55:05] <FromDiscord> <Evrensel Kişilik> only MenuetOS devs aren't NOOBS
[06:55:18] <FromDiscord> <Evrensel Kişilik> they are real programmers
[06:55:42] <FromDiscord> <Evrensel Kişilik>  https://media.discordapp.net/attachments/371759389889003532/935012457263534161/net02.png
[06:55:48] <FromDiscord> <Evrensel Kişilik> respect this
[06:56:42] <FromDiscord> <Elegantbeef> Also the benefit of using C was seen when you were testing Nim code and a majority just worked 😛
[06:57:07] <FromDiscord> <Evrensel Kişilik> In reply to @Elegantbeef "Also the benefit of": oh damn yes
[06:57:12] <FromDiscord> <Evrensel Kişilik> but look
[06:57:40] <FromDiscord> <Evrensel Kişilik> we can't do `(string)voidPtr` in evaluater
[06:57:58] <FromDiscord> <huantian> cast exists
[06:58:02] <FromDiscord> <Evrensel Kişilik> i can define Nim pseudo-types for this
[06:58:09] <FromDiscord> <Evrensel Kişilik> In reply to @huantian "cast exists": wdym?
[06:58:19] <FromDiscord> <huantian> actually I have no idea what you mean because I don't do C
[06:58:22] <FromDiscord> <Evrensel Kişilik> how can i cast to void pointer in Nim?
[06:58:22] <FromDiscord> <huantian> don't listen to me
[06:58:38] <FromDiscord> <leorize> `cast[pointer](stuff)`
[06:59:01] <FromDiscord> <demotomohiro> !eval echo cast[string](cast[pointer]("fooo"))
[06:59:03] *** Quits: huantian (~huantian@c-24-23-76-78.hsd1.az.comcast.net) (Quit: WeeChat 3.4)
[06:59:05] <NimBot> fooo
[06:59:38] <FromDiscord> <leorize> warning, does not work with arc
[06:59:53] <FromDiscord> <Evrensel Kişilik> In reply to @leorize "`cast[pointer](stuff)`": what is this
[06:59:57] <FromDiscord> <huantian> it doesn't work with arc? didn't know that
[07:00:03] <FromDiscord> <Elegantbeef> It's a bitwise cast to a void pointer
[07:00:14] <FromDiscord> <demotomohiro> `pointer` in Nim is `void` in C.
[07:00:20] <FromDiscord> <Evrensel Kişilik> In reply to @leorize "`cast[pointer](stuff)`":  https://media.discordapp.net/attachments/371759389889003532/935013621602349086/unknown.png
[07:00:21] <FromDiscord> <Elegantbeef> Nim differentiates casting from type conversions
[07:00:28] <FromDiscord> <Evrensel Kişilik> nothing
[07:00:30] <FromDiscord> <Evrensel Kişilik> why?
[07:00:48] <FromDiscord> <huantian> In reply to @Evrensel Kişilik "": amazing background
[07:00:50] <FromDiscord> <leorize> yea, arc uses a different representation where a string is a pair of pointer and length, so casting it to pointer will remove the length
[07:01:07] <FromDiscord> <Evrensel Kişilik> In reply to @huantian "amazing background": cuz im making the cutest debugger
[07:01:32] <FromDiscord> <Evrensel Kişilik> str is a `string`
[07:01:35] <FromDiscord> <huantian> ah that makes sense
[07:01:43] <FromDiscord> <Evrensel Kişilik> how to cast it to void ptr?
[07:01:54] <FromDiscord> <Elegantbeef> You did
[07:01:58] <FromDiscord> <Evrensel Kişilik> NO
[07:02:08] <FromDiscord> <Evrensel Kişilik> oh no
[07:02:09] <FromDiscord> <Elegantbeef> `pointer` in nim is `vod`
[07:02:10] <FromDiscord> <Evrensel Kişilik> oh nooooooooooo
[07:02:13] <FromDiscord> <Evrensel Kişilik> wait
[07:02:16] <FromDiscord> <Evrensel Kişilik> it is Nim code
[07:02:17] <FromDiscord> <Elegantbeef> `void` i mean
[07:02:18] <FromDiscord> <Evrensel Kişilik> lol
[07:02:20] <FromDiscord> <Evrensel Kişilik> this app
[07:02:30] <FromDiscord> <Evrensel Kişilik> is a C thing in debugger
[07:02:31] <FromDiscord> <Evrensel Kişilik> lol
[07:02:32] <FromDiscord> <Evrensel Kişilik> wait
[07:02:44] <FromDiscord> <Evrensel Kişilik>  https://media.discordapp.net/attachments/371759389889003532/935014227071103027/unknown.png
[07:02:58] <FromDiscord> <Evrensel Kişilik>  https://media.discordapp.net/attachments/371759389889003532/935014287796232314/unknown.png
[07:03:00] <FromDiscord> <Evrensel Kişilik> this
[07:03:02] <FromDiscord> <Evrensel Kişilik> but
[07:03:09] <FromDiscord> <Evrensel Kişilik> other was a Nim thing right?
[07:03:22] <FromDiscord> <Evrensel Kişilik> soooooooooo
[07:04:11] <FromDiscord> <Evrensel Kişilik> `cast[pointer](str)` translates to `(void ) str`
[07:04:13] <FromDiscord> <Evrensel Kişilik> (edit) "str`" => "str)`"
[07:04:15] <FromDiscord> <Evrensel Kişilik> (edit) "str)`" => "str`"
[07:04:34] <FromDiscord> <Evrensel Kişilik> soooooo then
[07:04:54] <FromDiscord> <Evrensel Kişilik> `cast[string](void_ptr)` translates to `(NimStringDesc ) void_ptr`
[07:05:17] <FromDiscord> <Elegantbeef> Yes
[07:05:20] <FromDiscord> <Evrensel Kişilik> lemme try to stepping over C lines
[07:05:30] <FromDiscord> <Evrensel Kişilik> gimme C blocks
[07:07:30] <FromDiscord> <Evrensel Kişilik>  https://media.discordapp.net/attachments/371759389889003532/935015429271851088/unknown.png
[07:07:37] <FromDiscord> <Elegantbeef> sent a code paste, see https://play.nim-lang.org/#ix=3Nkv
[07:07:51] <FromDiscord> <Evrensel Kişilik>  https://media.discordapp.net/attachments/371759389889003532/935015514495918100/unknown.png
[07:07:55] <FromDiscord> <Evrensel Kişilik> oh it works like a charm
[07:07:58] <FromDiscord> <huantian> weird my syntax highlighting does not like the triple quotes
[07:08:14] <FromDiscord> <huantian>  https://media.discordapp.net/attachments/371759389889003532/935015612118364231/unknown.png
[07:08:15] <FromDiscord> <huantian> funky
[07:08:24] <FromDiscord> <Evrensel Kişilik> sent a code paste, see https://play.nim-lang.org/#ix=3Nkw
[07:09:52] <FromDiscord> <Evrensel Kişilik> ?????????????????????????
[07:10:01] <FromDiscord> <Elegantbeef> It uses the Nim symbol
[07:10:07] <FromDiscord> <Evrensel Kişilik> soooooooooooooo
[07:10:10] <FromDiscord> <Evrensel Kişilik> that's what i said
[07:10:21] <FromDiscord> <Evrensel Kişilik> then
[07:10:26] <FromDiscord> <Evrensel Kişilik> its good
[07:10:40] <FromDiscord> <Evrensel Kişilik> i like it
[07:11:12] <FromDiscord> <Evrensel Kişilik> oh no
[07:11:14] <FromDiscord> <Evrensel Kişilik> look
[07:11:18] <FromDiscord> <Evrensel Kişilik> can i do
[07:12:15] <FromDiscord> <huantian> It's not about if you can, it's about if you should
[07:12:41] <FromDiscord> <Evrensel Kişilik> sent a code paste, see https://play.nim-lang.org/#ix=3Nkz
[07:12:42] <FromDiscord> <Evrensel Kişilik> ??????????????????????
[07:14:26] <FromDiscord> <Evrensel Kişilik> 😱
[07:14:35] <FromDiscord> <Evrensel Kişilik> this is too much for YOU BOTS
[07:15:05] <FromDiscord> <Evrensel Kişilik> why im not trying
[07:16:39] <FromDiscord> <Evrensel Kişilik>  https://media.discordapp.net/attachments/371759389889003532/935017728559939604/unknown.png
[07:16:46] <FromDiscord> <Evrensel Kişilik> soooooooooooooooooooooooooooo
[07:16:48] <FromDiscord> <Evrensel Kişilik> what is this?
[07:17:05] <FromDiscord> <Elegantbeef> You emitting bad C code
[07:17:24] <FromDiscord> <Evrensel Kişilik> IM NOT BAD
[07:17:36] <FromDiscord> <Evrensel Kişilik> you can't say bad to me
[07:17:42] <FromDiscord> <Evrensel Kişilik> :BANNED:
[07:18:18] <FromDiscord> <Evrensel Kişilik> sooo this ` syntax is only for symbol names?
[07:19:04] <FromDiscord> <Elegantbeef> Yes
[07:19:11] <FromDiscord> <Evrensel Kişilik> how can i do `#include ...`?
[07:20:22] <FromDiscord> <Elegantbeef> https://nim-lang.org/docs/manual.html#implementation-specific-pragmas-emit-pragma
[07:20:53] <FromDiscord> <Evrensel Kişilik> sooooooooooo
[07:20:56] <FromDiscord> <Evrensel Kişilik> look
[07:21:08] <FromDiscord> <Evrensel Kişilik> i will add some tricks to debugger
[07:21:22] <FromDiscord> <Evrensel Kişilik> sent a code paste, see https://play.nim-lang.org/#ix=
[07:21:24] <FromDiscord> <Evrensel Kişilik> this is string
[07:21:46] <FromDiscord> <Evrensel Kişilik> i will make the debugger to handle names from in this string (C code)
[07:22:17] <FromDiscord> <Evrensel Kişilik> and when you do mouse over on a name on C code
[07:22:20] <FromDiscord> <Evrensel Kişilik> it will handle it
[07:22:54] <FromDiscord> <Evrensel Kişilik> but looks like we don't have syntax highlighting for embedded C
[07:22:58] <FromDiscord> <Evrensel Kişilik> its bad 😦
[07:24:06] <FromDiscord> <Elegantbeef> Yea might encourage people to use it 😛
[07:25:10] <FromDiscord> <Rika> sent a code paste, see https://play.nim-lang.org/#ix=3NkL
[07:26:20] <FromDiscord> <Evrensel Kişilik> In reply to @Rika "and if someone does": i think it must work
[07:26:28] <FromDiscord> <Evrensel Kişilik> GIMME TEA
[07:26:29] <FromDiscord> <Evrensel Kişilik> pls
[07:26:37] <FromDiscord> <Rika> what happens if someone constructs an emit from a macro 😛
[07:27:05] <FromDiscord> <Evrensel Kişilik>  https://media.discordapp.net/attachments/371759389889003532/935020357587443722/5b645cde66be5d25a0c1e13c.png
[07:27:10] <FromDiscord> <Evrensel Kişilik> im eating this thing
[07:27:43] <FromDiscord> <Evrensel Kişilik> In reply to @Rika "what happens if someone": 😱
[07:28:11] <FromDiscord> <Rika> man might have a heart attack
[07:30:33] <NimEventer> New post on r/nim by kewlness: Question about nimble, see https://reddit.com/r/nim/comments/sbcqhh/question_about_nimble/
[07:31:09] <FromDiscord> <Evrensel Kişilik> In reply to @Rika "man might have a": do you want to eat?
[07:36:59] <FromDiscord> <Evrensel Kişilik> damn
[07:37:10] <FromDiscord> <Evrensel Kişilik> tell me
[07:37:22] <FromDiscord> <Evrensel Kişilik> is Nim faster than scripting languages?
[07:37:32] <FromDiscord> <Rika> uh?
[07:37:39] <FromDiscord> <Elegantbeef> It can be as fast as C
[07:37:42] <FromDiscord> <Evrensel Kişilik> v8 JavaScript is the fastest scripting language
[07:37:44] <FromDiscord> <Rika> it can even beat C
[07:37:52] <FromDiscord> <Elegantbeef> It's more about the programmer and less about a language
[07:37:52] <FromDiscord> <Rika> can v8 js beat C?
[07:38:13] <FromDiscord> <Evrensel Kişilik> In reply to @Elegantbeef "It can be as": i don't think sooooo cuz there are soooo many things
[07:38:20] <FromDiscord> <Rika> ???
[07:38:23] <FromDiscord> <Rika> have you tested it
[07:38:28] <FromDiscord> <Evrensel Kişilik> i see soo many things for a hello world app
[07:38:34] <FromDiscord> <Elegantbeef> You can play benchmark games all day long
[07:38:44] <FromDiscord> <Evrensel Kişilik> In reply to @Rika "can v8 js beat": no but it is the fastest scripting language
[07:38:44] <FromDiscord> <Rika> yes, so?
[07:38:48] <FromDiscord> <Rika> ok?
[07:38:50] <FromDiscord> <Elegantbeef> Nim is a fast system programming language just like any other, in the right hands
[07:38:57] <FromDiscord> <Evrensel Kişilik> In reply to @Elegantbeef "Nim is a fast": soooooooooo
[07:39:22] <FromDiscord> <Evrensel Kişilik> In reply to @Rika "yes, so?": im curious about how slower is that than pure C
[07:39:30] <FromDiscord> <Elegantbeef> It can be on par
[07:39:41] <FromDiscord> <Evrensel Kişilik> soooooo then
[07:39:51] <FromDiscord> <Evrensel Kişilik> i have GC
[07:39:55] <FromDiscord> <Evrensel Kişilik> and dynamic things
[07:40:02] <FromDiscord> <Evrensel Kişilik> but i have also performance
[07:40:06] <FromDiscord> <Evrensel Kişilik> and goooooooooooood C compatibility
[07:40:06] <FromDiscord> <Elegantbeef> Yes
[07:40:07] <FromDiscord> <Evrensel Kişilik> right?
[07:40:16] <FromDiscord> <Elegantbeef> It's like Go if it wasnt a mistake 😛
[07:40:26] <FromDiscord> <Evrensel Kişilik> In reply to @Elegantbeef "It's like Go if": wdym?
[07:40:32] <FromDiscord> <Evrensel Kişilik> do you think Nim is better than Go?
[07:40:44] <FromDiscord> <Elegantbeef> If i thought the other way i'd be using Go 😛
[07:40:45] <FromDiscord> <Evrensel Kişilik> can i compile Nim source to .C?
[07:40:52] <FromDiscord> <Evrensel Kişilik> i want .c sources
[07:40:55] <FromDiscord> <Elegantbeef> You can output C code yes
[07:41:05] <FromDiscord> <Elegantbeef> `--nimcache:yourDirectory`
[07:41:11] <FromDiscord> <Evrensel Kişilik> sooooooooooooooooo
[07:41:17] <FromDiscord> <Elegantbeef> If you want to make it cleaner do `-d:danger` or `-d:release`
[07:41:19] <FromDiscord> <Evrensel Kişilik> how does that look like?
[07:41:30] <FromDiscord> <Elegantbeef> It's not very human readable but it looks like C
[07:41:34] <FromDiscord> <Evrensel Kişilik> In reply to @Elegantbeef "If you want to": what are those?
[07:41:52] <FromDiscord> <Elegantbeef> Those are compiler flags for versions, by default nim compiles in debug mode
[07:41:52] <FromDiscord> <Rika> release build
[07:42:03] <FromDiscord> <Evrensel Kişilik> loooooooooook
[07:42:05] <FromDiscord> <Evrensel Kişilik> soooooooo
[07:42:16] <FromDiscord> <Elegantbeef> You can also do `--gc:arc` to use a deterministic move semantic based ARC
[07:42:17] <FromDiscord> <Evrensel Kişilik> you think it is better to use Nim instead of C
[07:42:22] <FromDiscord> <Elegantbeef> Yes
[07:42:39] <FromDiscord> <Evrensel Kişilik> i liked this language
[07:42:42] <FromDiscord> <Elegantbeef> It has a saner type system, and meta programming to make it more enjoyable to write
[07:42:43] <FromDiscord> <Evrensel Kişilik> the most important reason
[07:42:44] <FromDiscord> <Evrensel Kişilik> is
[07:42:56] <FromDiscord> <Evrensel Kişilik> docs page looks like Godot's
[07:43:19] <FromDiscord> <Elegantbeef> Some of nim's website was made by hugo, dont know about the docs design
[07:43:35] <FromDiscord> <Elegantbeef> Hugo is the same person that did godot's webiste/design
[07:43:37] <FromDiscord> <Evrensel Kişilik> In reply to @Elegantbeef "Some of nim's website": what is that?
[07:43:39] <FromDiscord> <Evrensel Kişilik> hmmmmmmmmmm
[07:43:59] <FromDiscord> <Elegantbeef> https://hugo.pro/
[07:44:12] <FromDiscord> <Evrensel Kişilik> ah i know
[07:44:16] <FromDiscord> <Evrensel Kişilik> this
[07:44:17] <FromDiscord> <Evrensel Kişilik> ok
[07:44:22] <FromDiscord> <Evrensel Kişilik> soooooooooo
[07:44:31] <FromDiscord> <Evrensel Kişilik> loooooooooook
[07:44:42] <FromDiscord> <Evrensel Kişilik> this language is working on indents
[07:44:47] <FromDiscord> <Evrensel Kişilik> i don't want it
[07:44:58] <FromDiscord> <Rika> okay
[07:45:00] <FromDiscord> <Rika> thats fine
[07:45:03] <FromDiscord> <Rika> its a preference thing
[07:45:05] <FromDiscord> <Elegantbeef> Then dont use it 😀
[07:45:14] <FromDiscord> <Evrensel Kişilik> In reply to @Elegantbeef "Then dont use it": the language?
[07:45:15] <FromDiscord> <Rika> wtf beef rude
[07:45:26] <FromDiscord> <Evrensel Kişilik> In reply to @Rika "wtf beef rude": it is a BOT
[07:45:37] <FromDiscord> <Evrensel Kişilik> IT is acting like expected
[07:45:48] <FromDiscord> <Rika> i never knew bots could be so rude
[07:45:59] <FromDiscord> <Evrensel Kişilik> In reply to @Rika "i never knew bots": oh nooo it is a MALFUNCTION
[07:46:05] <FromDiscord> <Evrensel Kişilik> maybe its hacked
[07:46:09] <FromDiscord> <Elegantbeef> I mean if someone doesnt like nim's significant whitespace, what do you say? 😀
[07:46:28] <FromDiscord> <Evrensel Kişilik> In reply to @Elegantbeef "I mean if someone": you HAVE TO add curly brackets support
[07:46:31] <FromDiscord> <Rika> the same thing but not rude XD
[07:46:32] <FromDiscord> <Evrensel Kişilik> i would say
[07:46:37] <FromDiscord> <Rika> In reply to @Evrensel Kişilik "you HAVE TO add": it was added before
[07:46:38] <FromDiscord> <Rika> then removed
[07:46:40] <FromDiscord> <Rika> no one used it
[07:46:48] <FromDiscord> <Evrensel Kişilik> In reply to @Rika "then removed": oh
[07:46:52] <FromDiscord> <Evrensel Kişilik> if it is added once
[07:46:52] <FromDiscord> <Rika> and it was expensive in terms of maintenance to keep
[07:47:01] <FromDiscord> <Evrensel Kişilik> why would you remove it again?
[07:47:08] <FromDiscord> <Rika> no one used it and it was hard to maintain
[07:47:18] <FromDiscord> <Evrensel Kişilik> In reply to @Rika "no one used it": really interesting as a reason
[07:47:45] <FromDiscord> <Evrensel Kişilik> i will make a new open source thing
[07:47:56] <FromDiscord> <Evrensel Kişilik> a goooood project
[07:47:58] <FromDiscord> <Evrensel Kişilik> in my mind
[07:48:07] <FromDiscord> <Evrensel Kişilik> soooooooooo i can write that in Nim
[07:48:08] <FromDiscord> <Rika> okay
[07:48:12] <FromDiscord> <Evrensel Kişilik> but
[07:48:19] <FromDiscord> <Evrensel Kişilik> it is using indentations
[07:48:34] <FromDiscord> <Rika> ok
[07:48:46] <FromDiscord> <Rika> you dont have to write it in nim
[07:49:33] <FromDiscord> <Evrensel Kişilik> In reply to @Rika "you dont have to": sure
[07:49:38] <FromDiscord> <Evrensel Kişilik> then
[07:49:43] <FromDiscord> <Evrensel Kişilik> im leaving here
[07:49:44] <FromDiscord> <Evrensel Kişilik> bye
[07:50:15] <FromDiscord> <Rika> uh ok
[07:50:31] <FromDiscord> <Elegantbeef> Worth noting https://github.com/xigoi/nimdenter exists 😀
[07:50:58] <FromDiscord> <Rika> oh yeah it did
[07:50:59] <FromDiscord> <Rika> i forgot
[07:51:00] <FromDiscord> <Rika> xd
[07:51:27] <FromDiscord> <Evrensel Kişilik> In reply to @Elegantbeef "Worth noting https://github.com/xigoi/nimdenter exi": ❤️        ↵       ❤️ ❤️ ❤️ ↵❤️ ❤️ ❤️ ❤️ ❤️
[07:51:37] <FromDiscord> <Evrensel Kişilik> (edit) "In reply to @Elegantbeef "Worth noting https://github.com/xigoi/nimdenter exi": ... ❤️" 03added ".              ↵             "
[07:51:38] <FromDiscord> <Elegantbeef> Think there is another one somewhere
[07:51:39] <FromDiscord> <Evrensel Kişilik> made it
[07:51:44] <FromDiscord> <Elegantbeef> I mean they're toys pretty much imo
[07:51:51] <FromDiscord> <Evrensel Kişilik> In reply to @Rika "i forgot": you are a BAD helper
[07:51:58] <FromDiscord> <Evrensel Kişilik> this BOT is better than you
[07:52:11] <FromDiscord> <Rika> i mean bots dont forget
[07:52:20] <FromDiscord> <Evrensel Kişilik> In reply to @Rika "i mean bots dont": you're right
[07:52:22] <FromDiscord> <Elegantbeef> I'm not a fucking elephant
[07:52:31] <FromDiscord> <Evrensel Kişilik> In reply to @Elegantbeef "I'm not a fucking": sure cuz you're a software
[07:52:33] <FromDiscord> <Rika> 😦
[07:52:34] <FromDiscord> <Evrensel Kişilik> you're cursed
[07:52:39] <FromDiscord> <Rika> lmao
[07:53:12] <FromDiscord> <Evrensel Kişilik> 😱  a stucked mind in electricity in a CPU 😱
[07:54:19] <FromDiscord> <Evrensel Kişilik> is there macros?
[07:54:22] <FromDiscord> <Evrensel Kişilik> (edit) "macros?" => "macro?"
[07:54:36] <FromDiscord> <Elegantbeef> Yes there are Lisp inspired macros
[07:54:42] <FromDiscord> <Rika> oh buiy
[07:54:45] <FromDiscord> <Rika> boy
[07:54:51] <FromDiscord> <Rika> you're gonna explode
[07:55:02] <FromDiscord> <Evrensel Kişilik> In reply to @Elegantbeef "Yes there are Lisp": Lisp?
[07:55:16] <FromDiscord> <Evrensel Kişilik> In reply to @Rika "you're gonna explode": 😱 me? 😱
[07:55:31] <FromDiscord> <Elegantbeef> Nim macros work on the AST and use a VM to evaluate the changes to the AST
[07:55:45] <FromDiscord> <Elegantbeef> So you write your own compiler passes to generate code from code
[07:55:48] <FromDiscord> <Elegantbeef> Unlike C's macros
[07:56:37] <FromDiscord> <Evrensel Kişilik> interesting
[07:56:45] <FromDiscord> <Evrensel Kişilik> soooo
[07:56:53] <FromDiscord> <Evrensel Kişilik> what is the way to make bindings for C libraries?
[07:57:07] <FromDiscord> <Elegantbeef> `c2nim` `futhark` `nimterop` `hcparse`
[07:57:11] <FromDiscord> <Evrensel Kişilik> firstly i will make bindings for this https://github.com/rohanrhu/jsonic
[07:57:29] <FromDiscord> <Evrensel Kişilik> In reply to @Elegantbeef "`c2nim` `futhark` `nimterop` `hcparse`": what are these?
[07:57:34] <FromDiscord> <Rika> libraries or binaries
[07:57:40] <FromDiscord> <Rika> to aid with wrapping c libraries
[07:57:49] <FromDiscord> <Evrensel Kişilik> soooooooooo
[07:57:51] <FromDiscord> <Elegantbeef> What the human saidi
[07:57:57] <FromDiscord> <Rika> human?
[07:58:05] <FromDiscord> <Evrensel Kişilik> how can i use these functions with static linking?
[07:58:10] <FromDiscord> <Rika> did i ever say i was human?
[07:58:10] <FromDiscord> <Elegantbeef> Oh god you're not human?
[07:58:26] <FromDiscord> <Rika> In reply to @Evrensel Kişilik "how can i use": thats a bit more complicated i believe
[07:58:26] <FromDiscord> <Evrensel Kişilik> In reply to @Rika "did i ever say": oh no 😱
[07:58:35] <FromDiscord> <Evrensel Kişilik> In reply to @Rika "thats a bit more": how?
[07:58:42] <FromDiscord> <haxscramper> Hcparse is pure R&D still, it is not usable now
[07:59:06] <FromDiscord> <Elegantbeef> Ah sorry
[07:59:42] *** Quits: vicfred_ (~vicfred@user/vicfred) (Quit: Leaving)
[08:15:20] <FromDiscord> <Evrensel Kişilik> damn
[08:15:48] <FromDiscord> <Evrensel Kişilik> a turkish BTC exchange is down for hours
[08:47:20] <FromDiscord> <evil> Is it possible to use nim js to work with native script?
[08:56:13] <FromDiscord> <leorize> yes
[08:57:46] <FromDiscord> <Evrensel Kişilik> can i use inline assembly in Nim?
[09:01:38] <FromDiscord> <Rika> afaik yes
[09:02:01] <FromDiscord> <Evrensel Kişilik> then
[09:02:08] <FromDiscord> <Evrensel Kişilik> goooooooooooooooooooooooooooooooooooooooooooooooooooooooood
[09:02:14] <FromDiscord> <Evrensel Kişilik> i don't write assembly
[09:02:19] <FromDiscord> <Evrensel Kişilik> pls remove that feature
[09:02:34] <FromDiscord> <Evrensel Kişilik> i don't want it
[09:02:36] <FromDiscord> <Evrensel Kişilik> plsssssssss
[09:03:50] <FromDiscord> <Rika> you dont need to use the feature
[09:05:00] <FromDiscord> <Evrensel Kişilik> In reply to @Rika "you dont need to": YOU TOLD ME THAT FOR BRACES
[09:05:07] <FromDiscord> <Evrensel Kişilik> i dont love you!!!
[09:05:16] <FromDiscord> <that_dude> You don't need braces either lol
[09:05:46] <FromDiscord> <that_dude> Imagine spending extra time typing when you don't need to
[09:05:58] <FromDiscord> <Evrensel Kişilik> if braces would exist you would not be have to use them toooooooooooooooooooooo
[09:06:09] <FromDiscord> <Evrensel Kişilik> In reply to @that_dude "Imagine spending extra time": :BANNED:
[09:06:53] <FromDiscord> <Evrensel Kişilik> loooooooooooooooook
[09:07:00] <FromDiscord> <Evrensel Kişilik> im doing Ctrl + M
[09:07:02] <FromDiscord> <Evrensel Kişilik> in VSCode
[09:07:08] <FromDiscord> <Evrensel Kişilik> it selects over blocks
[09:07:12] <FromDiscord> <Evrensel Kişilik> indentations are bulllshit
[09:07:23] <FromDiscord> <Rika> i mean
[09:07:24] <FromDiscord> <that_dude> just click the minus where it starts
[09:07:27] <FromDiscord> <Rika> lets not fight over it
[09:07:30] <FromDiscord> <that_dude> lol
[09:07:32] <FromDiscord> <that_dude> ^
[09:07:37] <FromDiscord> <Evrensel Kişilik> In reply to @Rika "lets not fight over": loooook
[09:08:01] <FromDiscord> <Evrensel Kişilik> i don't allow you to write Nim anymore
[09:08:06] <FromDiscord> <Evrensel Kişilik> you will write C
[09:08:18] <FromDiscord> <Rika> try me
[09:08:29] <FromDiscord> <that_dude> I think most people don't want me to write nim here. lol I asked so many questions just to make a very niche thing
[09:08:34] <FromDiscord> <Evrensel Kişilik> In reply to @Rika "try me": 😱  are you a language? 😱
[09:08:45] <FromDiscord> <Rika> uh
[09:08:48] <FromDiscord> <that_dude> (edit) "I think most people don't want me to write nim here. lol I asked so many questions just to make a very niche thing ... " 03added "that isn't even very useful"
[09:08:49] <FromDiscord> <Rika> thats not what that means
[09:08:52] <FromDiscord> <Rika> i mean okay
[09:08:53] <FromDiscord> <Rika> sure
[09:09:16] <FromDiscord> <Rika> In reply to @that_dude "I think most people": dont worry i dont remember SHIT about what you were making
[09:09:28] <FromDiscord> <Rika> tbh i dont remember anything past a few hours ago
[09:09:34] <FromDiscord> <that_dude> lol
[09:09:55] <FromDiscord> <that_dude> It was the thing to inject procs at run time
[09:10:06] <FromDiscord> <Rika> OH GOD
[09:10:21] <FromDiscord> <Rika> shh i dont need to remember ^_^
[09:10:32] <FromDiscord> <that_dude> I'll haunt you with that
[09:10:38] <FromDiscord> <Rika> 😅
[09:15:08] <FromDiscord> <Evrensel Kişilik> In reply to @Rika "OH GOD": there is no a GOD
[09:15:13] <FromDiscord> <Evrensel Kişilik> :BANNED:
[09:15:53] <FromDiscord> <that_dude> In reply to @Evrensel Kişilik "there is no a": There is no YOU :BANNED:
[09:15:59] <FromDiscord> <Evrensel Kişilik>  https://media.discordapp.net/attachments/371759389889003532/935047760904876042/dennisritchie.png
[09:16:01] <FromDiscord> <Evrensel Kişilik> except this
[09:16:06] <FromDiscord> <Rika> what the fuck is happening lmfaooo
[09:16:15] <FromDiscord> <Evrensel Kişilik> In reply to @that_dude "There is no YOU": ❤️
[09:16:42] <FromDiscord> <Evrensel Kişilik> In reply to @Rika "what the fuck is": we are discussing on banning you
[09:18:16] <FromDiscord> <Rika> don't worry it's happened plenty before i'm used to it
[09:20:56] <FromDiscord> <Evrensel Kişilik> In reply to @Rika "don't worry it's happened": who the fuck did you do it to you?
[09:21:01] <FromDiscord> <Evrensel Kişilik> i will beat them!!!!!!!!!!!!!!!!!!!!!!!!!!!
[09:21:15] <FromDiscord> <Rika> y'all hyper as fuck
[09:23:35] <FromDiscord> <Elegantbeef> @that_dude\: I mean i dont mind you making the thing you're making, it's just an odd desire 😛
[09:23:48] <FromDiscord> <Evrensel Kişilik> In reply to @Rika "y'all hyper as fuck": gimme them
[09:24:01] <FromDiscord> <Evrensel Kişilik> anyone can't ban you
[09:24:23] <FromDiscord> <that_dude> In reply to @Elegantbeef "<@532751332445257729>\: I mean i": Fair enough, I just don't know enough to properly implement everything myself.
[09:28:32] <FromDiscord> <Elegantbeef> My view is very much "You could spend time making your program more managable instead" but, you do you 😀
[09:33:15] <FromDiscord> <that_dude> I did take another look at my current design and I think I decided that more than I should have at the end of some of my procs which was causing clashes in design. If I resolve that, I think I wouldn't even need the thing I'm working on. That said. I kinda do want to complete this project because I like the idea of it.
[09:33:49] <FromDiscord> <that_dude> (edit) "I did take another look at my current design and I think I decided that ... more" 03added "I did"
[09:34:26] <FromDiscord> <that_dude> When I edit my message, does it also update for you guys on irc/matric/... as well?
[09:34:41] <FromDiscord> <that_dude> (edit) "message," => "messages,"
[09:34:47] <FromDiscord> <Elegantbeef> Sometimes it sometimes explodes
[09:56:18] <FromDiscord> <evoalg> Beefy, what use is that emit pragma if it can be done in Nim anyway? ... or can C do things that Nim can't & so that's why we'd use emit?
[09:56:49] <FromDiscord> <Elegantbeef> You want to include a C source file inside Nim
[09:57:13] <FromDiscord> <Elegantbeef> https://github.com/ftsf/nico/blob/main/nico/stb_vorbis.nim#L16-L32
[09:57:16] <FromDiscord> <evoalg> instead of converting it to nim?
[09:58:40] <FromDiscord> <Elegantbeef> Yea
[09:59:26] <FromDiscord> <Elegantbeef> Though in that case i thinks it's just for the C header
[09:59:49] <FromDiscord> <evoalg> ahhh I see, like if it's someone else's well-thought-out C code, then it might be easier to use emit
[10:05:53] *** Joins: Gustavo6046_ (~Gustavo60@user/gustavo6046)
[10:07:17] *** Quits: Gustavo6046_ (~Gustavo60@user/gustavo6046) (Read error: Connection reset by peer)
[10:07:32] *** Joins: Gustavo6046_ (~Gustavo60@user/gustavo6046)
[10:07:42] *** Gustavo6046 is now known as Guest5580
[10:07:42] *** Quits: Guest5580 (~Gustavo60@user/gustavo6046) (Killed (calcium.libera.chat (Nickname regained by services)))
[10:07:42] *** Gustavo6046_ is now known as Gustavo6046
[10:07:42] <FromDiscord> <Elegantbeef> Generally you shouldnt use it though
[10:09:27] <FromDiscord> <evoalg> gotcha, thank you
[10:20:14] <FromDiscord> <Evrensel Kişilik> In reply to @Elegantbeef "https://github.com/ftsf/nico/blob/main/nico/stb_vor": damn
[10:20:22] <FromDiscord> <Evrensel Kişilik> embedded C code is not highlighted
[10:21:18] *** Quits: vicecea (~vicecea@gateway/vpn/pia/vicecea) (Remote host closed the connection)
[10:21:40] <FromDiscord> <Elegantbeef> It's a string literal what do you expect
[10:21:46] *** Joins: vicecea (~vicecea@gateway/vpn/pia/vicecea)
[10:22:21] <FromDiscord> <Elegantbeef> Plus it could be C++ or JS
[10:23:38] <FromDiscord> <Evrensel Kişilik> In reply to @Elegantbeef "It's a string literal": yes but it is possible to highlight
[10:25:15] <FromDiscord> <Elegantbeef> sent a code paste, see https://paste.rs/Bvw
[10:28:12] <FromDiscord> <Rika> how would you know what is a "c language emit" and which is not?
[10:28:25] <FromDiscord> <Elegantbeef> There is an rfc for it
[10:32:40] <FromDiscord> <Elegantbeef> Or atleast i thought here was
[10:33:13] <FromDiscord> <demotomohiro> emit pragms is not used frequently.
[10:33:56] <FromDiscord> <Elegantbeef> Indeed
[10:34:08] <FromDiscord> <Elegantbeef> There isnt much reason to use it in most cases
[10:51:30] *** Joins: jjido (~Denis@2a02:c7f:5c91:e700:447b:43e0:477e:ac6f)
[11:05:06] *** Quits: vicecea (~vicecea@gateway/vpn/pia/vicecea) (Remote host closed the connection)
[11:05:37] *** Joins: vicecea (~vicecea@gateway/vpn/pia/vicecea)
[11:05:40] *** Quits: Gustavo6046 (~Gustavo60@user/gustavo6046) (Ping timeout: 250 seconds)
[11:14:06] *** Joins: Gustavo6046 (~Gustavo60@user/gustavo6046)
[11:33:10] *** Joins: PMunch (~PMunch@user/pmunch)
[11:56:45] *** Quits: jjido (~Denis@2a02:c7f:5c91:e700:447b:43e0:477e:ac6f) (Quit: My MacBook Air has gone to sleep. ZZZzzz…)
[12:09:48] <NimEventer> New post on r/nim by mavavilj: Is the safety improved when binding Nim to C/C++ or in which sense is Nim safe in such setting?, see https://reddit.com/r/nim/comments/sbhify/is_the_safety_improved_when_binding_nim_to_cc_or/
[12:23:56] <FromDiscord> <narimiran> here is Nim 1.6.4RC, please try it out: https://github.com/nim-lang/nightlies/releases/tag/2022-01-24-version-1-6-e1f3c74bdc458d5d4c528b30f30eabb56a5778d3
[12:31:20] *** Joins: neurocyte0917090 (~neurocyte@user/neurocyte)
[12:32:32] <FromDiscord> <Elegantbeef> Oh and @Phil new defaults breaks your code!
[12:34:34] <FromDiscord> <Phil> wait, "new" defaults?
[12:34:44] <FromDiscord> <enthus1ast> @Phil\: i've added bool and ref obj and also a small readme https://github.com/enthus1ast/nisane
[12:35:06] <FromDiscord> <Elegantbeef> I refactored it a bit
[12:35:10] <FromDiscord> <Phil> In reply to @Elegantbeef "Oh and <@180601887916163073> new": I am of confuse, did you already throw in that the procs generated are init(YOUR TYPE) ?
[12:35:13] <FromDiscord> <Elegantbeef> you new need to pass a flag
[12:35:19] <FromDiscord> <Elegantbeef> now\
[12:35:34] <FromDiscord> <Phil> In reply to @enthus1ast "<@180601887916163073>\: i've added bool": nice!
[12:35:44] <FromDiscord> <Elegantbeef> You can chose between them
[12:36:02] <FromDiscord> <Phil> Check, but I'll more likely just refactor
[12:36:29] <FromDiscord> <Phil> I'll need to contemplate whether I want to keep "newModel(mytype)" or just straight up swap full on to "init(mytype)"
[12:38:23] <FromDiscord> <Phil> In reply to @enthus1ast "<@180601887916163073>\: i've added bool": I'll take a look at it after work, thanks for the update!
[12:38:37] <FromDiscord> <Elegantbeef> `new(MyType)`\↵(@Phil)
[12:38:58] <FromDiscord> <Elegantbeef> Though that might interfer with the systems
[12:45:43] <FromDiscord> <Phil> Ohhh that might actually make me stick with newModel as an alias for that new proc
[12:45:53] <FromDiscord> <Phil> newModel would be more specific
[12:45:55] <FromDiscord> <Phil> Hmmm
[12:51:33] <FromDiscord> <Elegantbeef> Well i havent tested if an exported `new` works
[12:51:44] <FromDiscord> <Elegantbeef> I assume it'll be ambiguous
[13:29:00] <FromDiscord> <Clonkk> sent a code paste, see https://paste.rs/BAb
[13:29:24] <FromDiscord> <Elegantbeef> Nah
[13:29:32] <FromDiscord> <Elegantbeef> a `new(Type)` definition
[13:30:10] <FromDiscord> <Phil> In reply to @Clonkk "Do you mean this": I might actually not consider that a disadvantage
[13:30:14] <FromDiscord> <Phil> hmm
[13:31:12] <FromDiscord> <Elegantbeef> Actually our new would be more specific so it'd work
[13:31:14] <FromDiscord> <Elegantbeef> Disregard
[13:31:27] <FromDiscord> <Clonkk> Well once you have the first one, it's easy to define one with a typedesc
[13:33:10] <FromDiscord> <Elegantbeef> Yea i forgot about the specificity rule of procedure dispatch
[13:34:52] <FromDiscord> <Elegantbeef> `proc new[T](_: typedesc[T]): T` vs `proc new(_: typedesc[MyType]): MyType`
[13:36:53] <FromDiscord> <Clonkk> You could even do `proc new[T: SomeBaseType](_: typedesc[T]): T ` I think
[13:37:08] <FromDiscord> <Elegantbeef> Yea
[13:37:10] <FromDiscord> <Elegantbeef> It's more specific
[13:37:13] <FromDiscord> <Clonkk> (or `ref SomeBaseType` for new semantic)
[13:37:31] <NimEventer> New Nimble package! slicerator - Iterator package aimed at more ergonomic and efficient iterators., see https://github.com/beef331/slicerator
[13:40:06] <FromDiscord> <Elegantbeef> I know that all, i just forgot about the dispatch rule 😛
[13:41:25] *** Quits: Gustavo6046 (~Gustavo60@user/gustavo6046) (Remote host closed the connection)
[13:41:51] *** Joins: Gustavo6046 (~Gustavo60@user/gustavo6046)
[13:59:06] *** Quits: Gustavo6046 (~Gustavo60@user/gustavo6046) (Read error: Connection reset by peer)
[13:59:18] *** Joins: Gustavo6046 (~Gustavo60@user/gustavo6046)
[14:00:16] <NimEventer> New post on r/nim by mavavilj: VST SDK in Nim? How? When?, see https://reddit.com/r/nim/comments/sbj6cb/vst_sdk_in_nim_how_when/
[14:21:45] <FromDiscord> <mratsim> In reply to @Elegantbeef "There isnt much reason": Me looking at my Cuda and OpenCL code 🤔
[14:22:44] <arkanoid> when I do "proc foo[T](arg: typedesc[T])" I'm not sure what's the difference from `T` and `arg` in the proc body
[14:23:35] <FromDiscord> <mratsim> use proc foo(arg: typedesc[T])
[14:23:43] *** Quits: jmdaemon (~jmdaemon@user/jmdaemon) (Quit: ZNC 1.8.2 - https://znc.in)
[14:23:47] <FromDiscord> <mratsim> (edit) "typedesc[T])" => "typedesc)"
[14:23:57] <FromDiscord> <mratsim> without the T in bracket
[14:24:29] <FromDiscord> <mratsim> The main difference is in the bugs it might trigger
[14:24:47] <FromDiscord> <mratsim> typedesc/type/generics have a different, sometimes overlapping set of bugs.
[14:30:21] *** Joins: Gustavo6046_ (~Gustavo60@user/gustavo6046)
[14:30:41] *** Quits: Gustavo6046 (~Gustavo60@user/gustavo6046) (Killed (erbium.libera.chat (Nickname regained by services)))
[14:30:41] *** Gustavo6046_ is now known as Gustavo6046
[14:32:27] *** Quits: Gustavo6046 (~Gustavo60@user/gustavo6046) (Client Quit)
[14:36:22] <arkanoid> mratsim: thanks. Is there a safe net to avoid triggering those kind of bugs? Is "proc foo[T]" == "proc foo(arg: typedesc)" apart from the signature?
[14:43:34] *** Joins: einh0rn (~einhorn@user/einhorn)
[14:43:34] *** Quits: einh0rn (~einhorn@user/einhorn) (Client Quit)
[14:43:54] *** Joins: einhorn (~einhorn@user/einhorn)
[14:49:04] *** Joins: Vladar (~Vladar@46.162.2.53)
[14:51:06] <arkanoid> well, I've just refactored code to avoid _:typedesc[T] and it works correctly. Thanks! Much nicer now
[15:01:55] *** Joins: Lord_Nightmare2 (Lord_Night@user/lord-nightmare/x-3657113)
[15:02:06] *** Quits: Lord_Nightmare (Lord_Night@user/lord-nightmare/x-3657113) (Read error: Connection reset by peer)
[15:03:34] *** Lord_Nightmare2 is now known as Lord_Nightmare
[15:11:51] <FromDiscord> <mratsim> In reply to @arkanoid "well, I've just refactored": We have many such things in Nimbus so if you have a bug on that it's probably a syntax problem
[15:13:09] <FromDiscord> <mratsim> example: https://github.com/status-im/nimbus-eth2/blob/bef13b6/tests/consensus_spec/phase0/test_fixture_rewards.nim#L32
[15:19:08] *** Quits: einhorn (~einhorn@user/einhorn) (Quit: Enough internet for today.)
[15:24:58] *** Joins: haakon (~haakonn@82.196.8.209)
[15:33:57] *** Joins: jjido (~Denis@2a02:c7f:5c91:e700:447b:43e0:477e:ac6f)
[15:48:52] <haakon> Does the compiler define the implicit `result` variable even when it's not used and `return` is used explicitly?
[15:49:27] <PMunch> Well it defines it, but it is optimised away during compilation
[15:50:56] <haakon> Ah, I see
[15:54:01] <PMunch> In general you don't have to worry too much about what Nim does, it mostly does the right thing
[15:54:17] <PMunch> Sure there is room for optimisation here and there, but for the most part it's pretty good
[15:55:36] <haakon> Yeah, that's my impression after a day of playing with it. Quite an enjoyable language so far
[16:03:58] <PMunch> Have anything particular in mind you want to use Nim for?
[16:09:00] <Amun-Ra> nim is great, I switched from zig to nim for my project(s)
[16:09:35] <FromDiscord> <Rika> Why?
[16:09:40] <FromDiscord> <Rika> About the switch
[16:10:16] <haakon> I'm just looking at nim for hobby side-projects (currently dabbling with a system to organize photo collections etc)
[16:10:29] <Amun-Ra> it gives much more freedom and writing library wrappers is pretty straightforward
[16:11:02] <Amun-Ra> (I'm writing old/retro/abandoned image formats viewer just to know and get used to the language)
[16:12:30] <PMunch> Huh, I thought Zig was supposed to be great at wrapping C code? I mean I based Futhark off-of the approach that Zig uses
[16:13:05] <PMunch> haakon, that's how it begins, suddenly you'll start missing it at work as well
[16:14:41] *** Quits: Vladar (~Vladar@46.162.2.53) (Remote host closed the connection)
[16:15:27] <Amun-Ra> don't get me wront, zig is fine, it's just I come from python world and I find nim overwall better
[16:15:30] <Amun-Ra> wrong*
[16:15:42] <Amun-Ra> and overall* ;>
[16:16:50] <FromDiscord> <Rika> Overwall
[16:20:36] *** Joins: Vladar (~Vladar@46.162.2.53)
[16:26:55] <FromDiscord> <Evrensel Kişilik> does GC understand if i use a Nim variable inside C block?
[16:32:51] <FromDiscord> <Rika> No
[16:34:22] <PMunch> Amun-Ra, ah I see
[16:34:35] <PMunch> @Rika, I guess it would if you use --gc:boehm
[16:34:42] <PMunch> Haven't tried it though
[16:38:17] <FromDiscord> <Yepoleb> how would you pass a ref to a c block?
[16:40:12] <FromDiscord> <mratsim> In reply to @PMunch "In general you don't": I'm the only one who needs to worry :/
[16:40:51] *** Joins: pro (~pro@user/pro)
[16:40:58] <PMunch> @Evrensel_Kişilik, in general you either pass a pointer to C to some data in Nim, and then you just take care to not destroy that object until the C function is done. If the C code keeps the reference somewhere you might have to use GC_ref and GC_unref. Although if a C library keeps a pointer it will typically also try to call some kind of free procedure from the same library it got the pointer from, so that shouldn't be a big problem to implement
[16:41:02] <FromDiscord> <mratsim> In reply to @Evrensel Kişilik "does GC understand if": you can use a Nim variable inside a C block, just don't let it escape from the function. Ergo it needs to be alive or C code will do use after free
[16:41:18] <PMunch> @Yepoleb, just pass it as a pointer
[16:41:36] <FromDiscord> <mratsim> You can even pass Nim callbacks to C
[16:42:15] <FromDiscord> <mratsim> for example, I pass this Nim function to a MP4 C library: https://github.com/mratsim/trace-of-radiance/blob/master/trace_of_radiance/io/mp4.nim#L115-L126
[16:42:19] <PMunch> @mratsim, haha you and me both, trying to make sure Nim doesn't generate more code than necessary for microcontrollers is quite finicky
[16:43:27] <PMunch> The good news is that once I've done it and wrapped it in a nice library it's pretty easy to use for an end user :)
[16:43:46] <FromDiscord> <mratsim> Well these days, I just add support for my compile-time assembler
[16:43:52] <FromDiscord> <mratsim> I need to tackle ARM.
[16:45:03] <FromDiscord> <mratsim> I can't believe how poor the codegen can be for bigint :/
[16:45:11] <FromDiscord> <mratsim> even in C.
[16:45:41] <PMunch> Hmm, is there anything I can run to get a mapping from Nim -> C identifiers? Essentially I want to wrap avr-nm and then turn the identifiers there into Nim file:line:column information
[16:46:25] <PMunch> You're truly doing great work though, I'm constantly amazed by the stuff you manage do to
[16:56:56] <FromDiscord> <mratsim> {.exportc.} with `LINE`?
[16:56:59] <FromDiscord> <mratsim> thanks 🙂
[17:07:59] <arkanoid> mratsim, what's the meaning of "arg: type OtherType"?
[17:08:06] <PMunch> With `LINE`?
[17:10:00] *** Joins: rockcavera (~rc@192.12.114.201)
[17:10:00] *** Quits: rockcavera (~rc@192.12.114.201) (Changing host)
[17:10:00] *** Joins: rockcavera (~rc@user/rockcavera)
[17:25:55] <FromDiscord> <ajusa> Anyone know a good bloom filter implementation that works on the JS backend? I think Status and Disruptek have one, not sure about others
[17:27:30] <FromDiscord> <mratsim> In reply to @ajusa "Anyone know a good": our bloomfilter had very narrow requirement and is basically 50 lines of code iirc
[17:28:36] <FromDiscord> <mratsim> 39 LOC: https://github.com/status-im/nim-eth/blob/master/eth/bloom.nim
[17:29:03] <FromDiscord> <mratsim> I'm not even sure why it's using stint
[17:29:58] <FromDiscord> <ajusa> Oh wow it really is short. Do you think it'd be good enough for English spell checking? Looks like it is limited to 2048 bits, and I don't know enough about the implementation to gauge the  false positive rate
[17:31:53] <FromDiscord> <mratsim> https://github.com/status-im/nim-eth-bloom#description↵↵> Ethereum bloom filters are implemented with the Keccak-256 cryptographic hash function.
[17:32:17] <FromDiscord> <mratsim> Using a cryptographic hash function seems overkill for your use-case
[17:32:32] <FromDiscord> <mratsim> There are also Cuckoo Filters iirc
[17:33:58] <FromDiscord> <ajusa> Yeah any generic hashing function would be good enough for me. I'll still give it a try though. No cuckoo filter implementations in Nim yet, though it doesn't look too crazy
[17:34:31] <FromDiscord> <mratsim> do remember that there are about 2⁸⁶ atoms in the universe
[17:35:08] <FromDiscord> <mratsim> if each atom contained an universe you still woudn't reach 2²⁰⁴⁸
[18:00:18] *** Joins: arkurious (~arkurious@user/arkurious)
[18:16:56] *** Quits: pro (~pro@user/pro) (Quit: WeeChat 3.4)
[18:20:46] <FromDiscord> <vindaar> computer scientists always get this wrong, huh 😛↵The number of atoms in the universe is O(10^80). Number of photons O(10^88). Big difference 🤣  2^86 is only \~10^26 so about the number of atoms in a liter of water 😅↵(@mratsim)
[18:22:36] <FromDiscord> <Rika> so 2^266 roughly, num of atoms in univ.
[18:36:21] <FromDiscord> <ynfle> Is this a bug https://play.nim-lang.org/#ix=3Nof ? It seems to be
[18:38:09] <FromDiscord> <ynfle> `varargs[typed]` won't accept an overloaded symbol
[18:38:19] <FromDiscord> <ynfle> Even as the only argument
[18:38:39] <FromDiscord> <ynfle> But just `typed` would
[18:54:04] *** Quits: jjido (~Denis@2a02:c7f:5c91:e700:447b:43e0:477e:ac6f) (Quit: My MacBook Air has gone to sleep. ZZZzzz…)
[19:03:45] <FromDiscord> <mratsim> In reply to @vindaar "computer scientists always get": I'm neither a computer scientist nor a physicist :p
[19:11:05] <FromDiscord> <Rika> computer physicist
[19:15:12] <Amun-Ra> computer physician
[19:23:26] <FromDiscord> <mratsim> comphy
[19:29:42] <FromDiscord> <ache of head> LOL
[20:14:00] <arkanoid> mratsim, if I may ask, what's your background? Math?
[20:20:41] <Zevv> mratsim is a robot from outer space
[20:20:58] <arkanoid> meth?
[20:21:09] <FromDiscord> <Rika> methametics
[20:21:54] *** Quits: Vladar (~Vladar@46.162.2.53) (Quit: Leaving)
[20:22:31] <arkanoid> damn, Paul Erdős was right
[20:45:09] <FromDiscord> <mratsim> In reply to @arkanoid "<@570268431522201601>, if I may": I'm a mechanical engineer
[20:45:12] *** Joins: noeontheend (~noeonthee@207.237.194.194)
[20:50:15] <FromDiscord> <auxym> oh me too. miran is a civvie IIRC?
[20:57:33] <FromDiscord> <ynfle> In reply to @ynfle "Is this a bug": Bug report filed https://github.com/nim-lang/Nim/issues/19446
[21:32:44] <Amun-Ra> do I have to check the result of allocCString (that's calling alloc0) for nil?
[21:52:37] *** Joins: neceve (~quassel@2.26.93.228)
[21:59:30] *** Joins: jjido (~Denis@2a02:c7f:5c91:e700:447b:43e0:477e:ac6f)
[22:10:01] <noeontheend> ;switch rust
[22:11:03] <FromDiscord> <Rika> `/ban noeontheend`
[22:11:22] <noeontheend> :(
[22:11:45] <FromDiscord> <Rika> is joke ;;
[22:13:42] <FromDiscord> <exelotl> `/ban Rika`
[22:15:06] <FromDiscord> <Rika> you cant ban me
[22:23:31] <arkanoid> I can't wrap my head around that emptySeq.low = 0 and emptySeq.high = -1
[22:26:53] <FromDiscord> <demotomohiro> !eval echo @[].high
[22:26:57] <NimBot> -1
[22:27:48] <FromDiscord> <demotomohiro> !eval echo @[].high, ", ", @[0].high
[22:27:51] <NimBot> -1, 0
[22:29:10] <arkanoid> yeah, it is the index of first and last element, I know, but the concept of empty can't be contained inside this
[22:29:13] <FromDiscord> <demotomohiro> So, I guessn@[].high should be @[0].high - 1 because it has 1 less element.
[22:29:43] <arkanoid> high = (len - low) - 1
[22:31:00] <arkanoid> or better, you need "start" and "len" to build low and high, but you can't use low and high to rebuild start and len, unless you bend the spoon and high = -1 if empty
[22:32:00] *** Quits: jjido (~Denis@2a02:c7f:5c91:e700:447b:43e0:477e:ac6f) (Quit: My MacBook Air has gone to sleep. ZZZzzz…)
[22:32:41] <FromDiscord> <demotomohiro> Maybe @[].high == -1 because `for i in myseq.low .. myseq.high:` must not run when myseq.len == 0.
[22:33:47] <arkanoid> sure, that's the point, but it's confusing. Much better to "if i in low..<len"
[22:35:23] *** Parts: Nuc1eoN (~Nuc1eoN@odin.csportal.net) (The Lounge - https://thelounge.chat)
[22:53:17] *** Quits: noeontheend (~noeonthee@207.237.194.194) (Ping timeout: 256 seconds)
[23:00:12] *** Joins: pro (~pro@user/pro)
[23:08:08] <FromDiscord> <eyecon> In reply to @arkanoid "I can't wrap my": Wut
[23:08:39] <FromDiscord> <eyecon> I'm lucky that I didn't stumble upon that
[23:12:10] <FromDiscord> <Elegantbeef> !eval echo default(array[0,int]).high
[23:12:14] <NimBot> -1
[23:12:27] <FromDiscord> <Elegantbeef> I'm fairly certain demotomohiro is right
[23:22:23] <FromDiscord> <Phil> Beef, question about constructor
[23:22:51] <FromDiscord> <Phil> What's events all about? Is that something in the works? Already working?
[23:23:34] <FromDiscord> <Phil> (edit) "events" => "events.nim"
[23:23:36] <FromDiscord> <IsaacPaul> typically -1 means not found so it makes sense, but if that's the reasoning then .low should also be -1.
[23:23:50] <FromDiscord> <IsaacPaul> (edit) "-1." => "-1 which it isn't."
[23:24:25] <FromDiscord> <ElegantBeef> https://github.com/beef331/constructor/tree/648de4bb6b69cb551e139f073643bddccc7f7cc1#events there you go, apart of one of the old macros that i might want to keep
[23:25:03] <FromDiscord> <ElegantBeef> Matrix bridge is slow right now
[23:25:13] <FromDiscord> <Phil> Ahhhh check, so a previous macro that might yet once again come back to life at one point
[23:25:44] <FromDiscord> <ElegantBeef> Well it still functions and isnt some obscure syntax
[23:26:17] <FromDiscord> <Phil> ~~if it isn't documented in the up to date master branch it doesn't exist~~
[23:26:38] <FromDiscord> <ElegantBeef> Lol, i went through a lot of macros to get to the one liner 😛
[23:29:06] <FromDiscord> <Phil> And man am I thankful that you have made these macros given that constructor is easily saving me hundreds of lines of codes that would make me want to shoot myself
[23:43:51] <FromDiscord> <evoalg> ooooo slicerator is in nimble
[23:45:19] <FromDiscord> <evoalg> hmm Package not found ... how to I update nimble's list
[23:46:21] <FromDiscord> <evoalg> `nimble refresh` works!
[23:48:29] *** Quits: pro (~pro@user/pro) (Quit: WeeChat 3.4)
