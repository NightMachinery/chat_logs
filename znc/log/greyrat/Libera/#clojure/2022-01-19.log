[00:08:59] *** Joins: molson (~molson@2001:48f8:704a:123d::75f:1021)
[00:23:39] *** Joins: oscurochu (~oscurochu@37.120.215.100)
[00:31:29] *** Joins: joe_colben (~joe____co@185.190.112.211)
[00:47:56] *** Joins: GrayArea (~cpd@cpc115156-dals23-2-0-cust689.20-2.cable.virginm.net)
[00:55:21] *** Quits: wyrd (~wyrd@gateway/tor-sasl/wyrd) (Ping timeout: 276 seconds)
[01:13:55] *** Joins: MajorBiscuit (~MajorBisc@2a02:a461:129d:1:6d4c:38a4:18b7:4b48)
[01:14:59] *** Joins: piotrts (~piotrts@188.146.239.85.nat.umts.dynamic.t-mobile.pl)
[01:32:43] *** Quits: MajorBiscuit (~MajorBisc@2a02:a461:129d:1:6d4c:38a4:18b7:4b48) (Quit: WeeChat 3.3)
[01:34:16] *** Joins: matty_ma1 (~matt@129.222.239.110)
[01:38:32] *** Quits: matty_ma1 (~matt@129.222.239.110) (Ping timeout: 240 seconds)
[01:38:37] *** Quits: molson (~molson@2001:48f8:704a:123d::75f:1021) (Quit: Leaving)
[01:57:29] *** Quits: ToxicFrog (~ToxicFrog@198-200-100-178.cpe.distributel.net) (Ping timeout: 256 seconds)
[02:03:11] *** Quits: Danishman (~Danishman@2-104-144-110-cable.dk.customer.tdc.net) (Quit: Leaving)
[02:08:15] *** Quits: GrayArea (~cpd@cpc115156-dals23-2-0-cust689.20-2.cable.virginm.net) (Ping timeout: 256 seconds)
[02:14:05] *** Quits: perrierjouet (~perrier-j@modemcable012.251-130-66.mc.videotron.ca) (Quit: WeeChat 3.4)
[02:14:56] *** Joins: perrierjouet (~perrier-j@modemcable012.251-130-66.mc.videotron.ca)
[02:27:34] *** Quits: piotrts (~piotrts@188.146.239.85.nat.umts.dynamic.t-mobile.pl) (Ping timeout: 250 seconds)
[02:28:02] *** Quits: joe_colben (~joe____co@185.190.112.211) (Ping timeout: 240 seconds)
[02:41:16] *** Joins: ToxicFrog (~ToxicFrog@198-200-100-178.cpe.distributel.net)
[02:42:53] *** Joins: joe_colben (~joe____co@185.190.112.211)
[02:43:31] *** Quits: joe_colben (~joe____co@185.190.112.211) (Remote host closed the connection)
[02:52:21] *** Quits: seschwar (~seschwar@user/seschwar) (Quit: :wq)
[02:54:34] *** Joins: molson (~molson@2001-48F8-704A-123D-0-0-75F-101F-static.midco.net)
[02:56:27] *** Quits: unyu (~pyon@user/pyon) (Quit: Reboot.)
[02:56:50] *** Joins: piotrts (~piotrts@188.146.239.85.nat.umts.dynamic.t-mobile.pl)
[02:59:46] *** Joins: matty_ma1 (~matt@129.222.239.110)
[03:01:31] *** Quits: piotrts (~piotrts@188.146.239.85.nat.umts.dynamic.t-mobile.pl) (Ping timeout: 256 seconds)
[03:10:08] *** Quits: perrierjouet (~perrier-j@modemcable012.251-130-66.mc.videotron.ca) (Quit: WeeChat 3.4)
[03:17:26] *** Joins: piotrts (~piotrts@188.146.239.85.nat.umts.dynamic.t-mobile.pl)
[03:24:08] *** Quits: piotrts (~piotrts@188.146.239.85.nat.umts.dynamic.t-mobile.pl) (Ping timeout: 268 seconds)
[03:24:59] *** Joins: Frozenlock (~user@modemcable251.64-203-24.mc.videotron.ca)
[03:27:19] *** Joins: perrierjouet (~perrier-j@modemcable012.251-130-66.mc.videotron.ca)
[03:37:12] *** Quits: perrierjouet (~perrier-j@modemcable012.251-130-66.mc.videotron.ca) (Quit: WeeChat 3.4)
[03:38:27] *** Joins: piotrts (~piotrts@188.146.239.85.nat.umts.dynamic.t-mobile.pl)
[03:43:15] *** Quits: piotrts (~piotrts@188.146.239.85.nat.umts.dynamic.t-mobile.pl) (Ping timeout: 268 seconds)
[04:04:14] *** Joins: perrierjouet (~perrier-j@modemcable012.251-130-66.mc.videotron.ca)
[04:11:45] *** Joins: piotrts (~piotrts@188.146.239.85.nat.umts.dynamic.t-mobile.pl)
[04:16:33] *** Quits: piotrts (~piotrts@188.146.239.85.nat.umts.dynamic.t-mobile.pl) (Ping timeout: 268 seconds)
[04:23:43] *** Joins: unyu (~pyon@user/pyon)
[04:24:25] *** Quits: selfsymmetric-mu (~matt@c-73-10-148-139.hsd1.nj.comcast.net) (Remote host closed the connection)
[04:29:23] *** Joins: piotrts (~piotrts@188.146.239.85.nat.umts.dynamic.t-mobile.pl)
[04:37:03] *** Joins: wyrd (~wyrd@gateway/tor-sasl/wyrd)
[04:40:50] *** Joins: AlaskanEmily (~AlaskanEm@user/alaskanemily)
[04:47:02] *** Quits: op2 (~op2@user/op2) (Ping timeout: 240 seconds)
[04:47:05] *** Quits: piotrts (~piotrts@188.146.239.85.nat.umts.dynamic.t-mobile.pl) (Ping timeout: 256 seconds)
[04:47:29] *** Quits: matty_ma1 (~matt@129.222.239.110) (Ping timeout: 256 seconds)
[05:15:25] *** Joins: piotrts (~piotrts@188.146.239.85.nat.umts.dynamic.t-mobile.pl)
[05:20:31] *** Quits: piotrts (~piotrts@188.146.239.85.nat.umts.dynamic.t-mobile.pl) (Ping timeout: 256 seconds)
[05:28:48] *** Quits: Harlin (~DonQixote@75-163-149-234.clsp.qwest.net) (Remote host closed the connection)
[05:43:32] *** Quits: molson (~molson@2001-48F8-704A-123D-0-0-75F-101F-static.midco.net) (Ping timeout: 240 seconds)
[05:49:29] *** Joins: piotrts (~piotrts@188.146.239.85.nat.umts.dynamic.t-mobile.pl)
[05:51:41] *** Joins: TonyStone (~TonyStone@2603-7080-8607-c36a-9841-fdb7-086b-ec04.res6.spectrum.com)
[05:54:36] *** Quits: piotrts (~piotrts@188.146.239.85.nat.umts.dynamic.t-mobile.pl) (Ping timeout: 268 seconds)
[05:55:02] <v3ga> has anyone looked at the source code for the Braid project?  Would you consider their organzation unorthodox? Breaking components up and then placing client/server under each component opposed to "clj, cljs, cljc" folders?
[05:57:41] *** Quits: tuborgman (~tuborgman@pool-108-16-29-206.phlapa.fios.verizon.net) (Ping timeout: 268 seconds)
[05:58:05] *** Joins: tuborgman (~tuborgman@pool-108-16-29-206.phlapa.fios.verizon.net)
[06:18:50] *** Joins: mbuf (~Shakthi@110.225.233.59)
[06:20:32] *** Joins: jackson99 (~bc8147f2@cerf.good1.com)
[06:22:58] *** Joins: zmt01 (~zmt00@user/zmt00)
[06:23:24] *** Joins: piotrts (~piotrts@188.146.239.85.nat.umts.dynamic.t-mobile.pl)
[06:25:02] *** Quits: zmt01 (~zmt00@user/zmt00) (Read error: Connection reset by peer)
[06:26:16] *** Joins: zmt01 (~zmt00@user/zmt00)
[06:26:20] *** Quits: zmt00 (~zmt00@user/zmt00) (Ping timeout: 250 seconds)
[06:28:31] *** Quits: piotrts (~piotrts@188.146.239.85.nat.umts.dynamic.t-mobile.pl) (Ping timeout: 268 seconds)
[06:34:08] *** Quits: amk (~amk@109.255.169.126) (Ping timeout: 250 seconds)
[06:35:36] *** Joins: molson (~molson@2001-48F8-704A-123D-0-0-75F-1021-static.midco.net)
[06:36:44] *** Joins: amk (~amk@109.255.169.126)
[06:49:25] *** Quits: molson (~molson@2001-48F8-704A-123D-0-0-75F-1021-static.midco.net) (Remote host closed the connection)
[06:50:00] *** Joins: molson (~molson@2001-48F8-704A-123D-0-0-75F-1021-static.midco.net)
[06:58:15] *** Joins: piotrts (~piotrts@188.146.239.85.nat.umts.dynamic.t-mobile.pl)
[07:03:02] *** Quits: piotrts (~piotrts@188.146.239.85.nat.umts.dynamic.t-mobile.pl) (Ping timeout: 240 seconds)
[07:04:24] *** Quits: molson (~molson@2001-48F8-704A-123D-0-0-75F-1021-static.midco.net) (Remote host closed the connection)
[07:05:26] *** Joins: molson (~molson@2001-48F8-704A-123D-0-0-75F-1021-static.midco.net)
[07:13:37] *** Quits: zmt01 (~zmt00@user/zmt00) (Ping timeout: 240 seconds)
[07:14:40] *** Joins: zmt00 (~zmt00@user/zmt00)
[07:17:02] *** Quits: zmt00 (~zmt00@user/zmt00) (Client Quit)
[07:19:36] *** Joins: zmt00 (~zmt00@user/zmt00)
[07:31:47] *** Joins: piotrts (~piotrts@188.146.239.85.nat.umts.dynamic.t-mobile.pl)
[07:36:58] *** Quits: piotrts (~piotrts@188.146.239.85.nat.umts.dynamic.t-mobile.pl) (Ping timeout: 268 seconds)
[07:41:42] *** Joins: atw (~user@ool-18bf5678.dyn.optonline.net)
[07:48:15] *** Quits: atw (~user@ool-18bf5678.dyn.optonline.net) (Remote host closed the connection)
[07:49:02] *** Joins: atw (~user@ool-18bf5678.dyn.optonline.net)
[07:51:37] *** Joins: shiranaihito (~textual@123-192-192-149.dynamic.kbronet.com.tw)
[07:56:30] *** Joins: matty_ma1 (~matt@129.222.239.110)
[08:01:30] *** Joins: zmt01 (~zmt00@user/zmt00)
[08:04:42] *** Quits: zmt00 (~zmt00@user/zmt00) (Ping timeout: 250 seconds)
[08:06:06] *** Joins: piotrts (~piotrts@188.146.239.85.nat.umts.dynamic.t-mobile.pl)
[08:10:53] *** Quits: piotrts (~piotrts@188.146.239.85.nat.umts.dynamic.t-mobile.pl) (Ping timeout: 268 seconds)
[08:11:24] *** Parts: jackson99 (~bc8147f2@cerf.good1.com) ()
[08:25:32] *** Quits: atw (~user@ool-18bf5678.dyn.optonline.net) (Ping timeout: 240 seconds)
[08:30:13] *** Quits: samuelb (~samuelber@nata01.lip.pt) (Ping timeout: 240 seconds)
[08:40:57] *** Joins: piotrts (~piotrts@188.146.239.85.nat.umts.dynamic.t-mobile.pl)
[08:43:58] *** Joins: samuelbernardo (~samuelber@194.210.119.251)
[08:45:39] *** Quits: piotrts (~piotrts@188.146.239.85.nat.umts.dynamic.t-mobile.pl) (Ping timeout: 256 seconds)
[08:50:45] *** Quits: amk (~amk@109.255.169.126) (Ping timeout: 256 seconds)
[08:51:51] *** Joins: amk (~amk@109.255.169.126)
[08:53:25] *** Quits: xsperry (~xs@user/xsperry) ()
[09:07:06] *** Joins: xsperry (~xs@user/xsperry)
[09:15:13] *** Joins: piotrts (~piotrts@188.146.239.85.nat.umts.dynamic.t-mobile.pl)
[09:20:02] *** Quits: piotrts (~piotrts@188.146.239.85.nat.umts.dynamic.t-mobile.pl) (Ping timeout: 240 seconds)
[09:21:49] *** Quits: shiranaihito (~textual@123-192-192-149.dynamic.kbronet.com.tw) (Quit: My MacBook Air has gone to sleep. ZZZzzzâ€¦)
[09:23:40] *** Joins: puchka (~marius@165.73.240.116)
[09:25:38] *** Quits: wyrd (~wyrd@gateway/tor-sasl/wyrd) (Quit: leaving)
[09:39:00] *** Joins: Jing (~hedgehog@240e:390:7c53:a7e1:a11d:216c:4ca3:2c86)
[09:46:32] *** Quits: matty_ma1 (~matt@129.222.239.110) (Ping timeout: 240 seconds)
[09:47:24] *** Joins: piotrts (~piotrts@188.146.239.85.nat.umts.dynamic.t-mobile.pl)
[09:48:29] *** Joins: matty_ma1 (~matt@129.222.239.110)
[09:52:02] *** Quits: piotrts (~piotrts@188.146.239.85.nat.umts.dynamic.t-mobile.pl) (Ping timeout: 240 seconds)
[09:53:05] *** Quits: matty_ma1 (~matt@129.222.239.110) (Ping timeout: 256 seconds)
[09:56:19] *** Joins: shiranaihito (~textual@2001-b011-4000-3c74-6cfd-3299-98ff-82f0.dynamic-ip6.hinet.net)
[10:04:32] *** Quits: zmt01 (~zmt00@user/zmt00) (Ping timeout: 240 seconds)
[10:19:40] *** Joins: piotrts (~piotrts@188.146.239.85.nat.umts.dynamic.t-mobile.pl)
[10:27:24] *** Joins: matty_ma1 (~matt@129.222.239.110)
[10:32:06] *** Quits: matty_ma1 (~matt@129.222.239.110) (Ping timeout: 268 seconds)
[10:38:25] *** Quits: piotrts (~piotrts@188.146.239.85.nat.umts.dynamic.t-mobile.pl) (Ping timeout: 256 seconds)
[10:57:02] *** Joins: matty_ma1 (~matt@129.222.239.110)
[11:03:45] *** Quits: matty_ma1 (~matt@129.222.239.110) (Ping timeout: 256 seconds)
[11:07:02] *** Joins: joe_colben (~joe____co@185.190.112.211)
[11:10:06] *** Joins: piotrts (~piotrts@188.146.239.85.nat.umts.dynamic.t-mobile.pl)
[11:10:45] *** Joins: struchu (~struchu@62.87.192.114)
[11:14:32] *** Quits: piotrts (~piotrts@188.146.239.85.nat.umts.dynamic.t-mobile.pl) (Ping timeout: 240 seconds)
[11:15:21] *** Joins: MajorBiscuit (~MajorBisc@86-88-79-148.fixed.kpn.net)
[11:15:23] *** Quits: MajorBiscuit (~MajorBisc@86-88-79-148.fixed.kpn.net) (Client Quit)
[11:15:39] *** Joins: MajorBiscuit (~MajorBisc@86-88-79-148.fixed.kpn.net)
[11:39:35] *** Joins: matty_ma1 (~matt@129.222.239.110)
[11:43:07] *** Joins: piotrts (~piotrts@188.146.239.85.nat.umts.dynamic.t-mobile.pl)
[11:45:17] *** Quits: matty_ma1 (~matt@129.222.239.110) (Ping timeout: 256 seconds)
[11:48:07] *** Quits: piotrts (~piotrts@188.146.239.85.nat.umts.dynamic.t-mobile.pl) (Ping timeout: 256 seconds)
[11:55:48] *** Joins: Major_Biscuit (~MajorBisc@c-001-018-021.client.tudelft.eduvpn.nl)
[11:58:53] *** Quits: MajorBiscuit (~MajorBisc@86-88-79-148.fixed.kpn.net) (Ping timeout: 256 seconds)
[12:10:24] *** Quits: AlaskanEmily (~AlaskanEm@user/alaskanemily) (Remote host closed the connection)
[12:16:59] *** Joins: piotrts (~piotrts@188.146.239.85.nat.umts.dynamic.t-mobile.pl)
[12:22:08] *** Quits: piotrts (~piotrts@188.146.239.85.nat.umts.dynamic.t-mobile.pl) (Ping timeout: 256 seconds)
[12:57:24] *** Joins: matty_ma1 (~matt@129.222.239.110)
[13:01:37] *** Quits: matty_ma1 (~matt@129.222.239.110) (Ping timeout: 240 seconds)
[13:25:22] *** Quits: Jing (~hedgehog@240e:390:7c53:a7e1:a11d:216c:4ca3:2c86) (Quit: My MacBook has gone to sleep. ZZZzzzâ€¦)
[13:35:33] *** Joins: Jing (~hedgehog@115.207.51.203)
[13:37:32] *** Quits: drbobbeaty (~drbob@c-24-14-127-107.hsd1.il.comcast.net) (Ping timeout: 240 seconds)
[13:38:38] *** Joins: drbobbeaty (~drbob@c-24-14-127-107.hsd1.il.comcast.net)
[13:39:54] *** Joins: tatsumaru (~tatsumaru@82.147.131.155)
[13:40:08] <tatsumaru> hey guys, can you recommend a resource to help me learn how to write wrappers>\
[13:45:48] <ridcully> as in for ring?
[13:46:40] <tatsumaru> not sure what a ring is
[13:47:43] <tatsumaru> like for example I found a wrapper from webdriver for clojure which was very old and deprecated so I thought I might have to write my own
[13:47:51] <tatsumaru> for webdriver*
[13:48:15] <ridcully> ok, it was not clear to me, what you wanted to wrap
[13:48:53] <tatsumaru> I am actually not exactly sure what a wrapper does, does it translate calls from x to z or something as in DX11 to Open GL
[13:49:37] <ridcully> might be hard to give generic instructions.  you usually want to start and actually use the library.  you will write functions, that call the underlying libs.  and then by usage will become more stream lined
[13:49:57] <ridcully> in this case it means to wrap another library to make it more clojure-y
[13:50:29] <tatsumaru> could you use that library without the wrapper?
[13:51:07] <ridcully> usually the answer is yes
[13:51:33] <tatsumaru> so is it fair to say that wrappers are mostly a convenience thing
[13:53:16] <ridcully> yes.  to allow for idiomatic clojure.  the underlying libs might do "oldschool oo nonsense" and the wrapper turns that into a nice API for clojurists.
[13:54:27] <ridcully> if you have trouble with a wrapper, also make sure to check out the clojure toolbox.  maybe someone else picked up the torch and there are more new and shiny tools around
[13:54:35] <tatsumaru> ah i see, so how would one have to use such a library with clojure without a wrapper, would they have to do OOP in clojure?
[13:55:40] <ridcully> this was just an example.  again, there is no silver bullet.  you would have to understand the library.  there are are nasty libs from 2002 and there nasty libs from 2022 - or the opposite
[13:56:10] <tatsumaru> yeah I know it's an ad hoc thing, so my question was targeted at this specific example
[13:57:56] <tatsumaru> just trying to get a very high-level understanding of the value of wrappers
[13:58:03] <ridcully> i have never used raw selenium and i have moved away from it for e2e tests.  i am not qualified to answer.  i'd expect, that there are other, better-maintained clojure wrappers, than the one you found as this is a common use-case
[13:58:28] <tatsumaru> what do you use for e2e tests?
[13:58:32] *** Quits: ToxicFrog (~ToxicFrog@198-200-100-178.cpe.distributel.net) (Ping timeout: 240 seconds)
[13:59:04] <ridcully> the value of a non-working-wrapper is clearly zero ;)  but if you can afford to go down the rabbit hole you can either extract what you need or you can attempt to fix it.
[13:59:08] <ridcully> i use cypress
[14:00:34] *** Joins: op2 (~op2@user/op2)
[14:31:48] *** Joins: wyrd (~wyrd@gateway/tor-sasl/wyrd)
[14:33:26] *** Joins: ekathva (~ekathva@88-114-118-220.elisa-laajakaista.fi)
[14:38:08] *** Quits: faxmodem (~faxmodem@82-65-124-102.subs.proxad.net) (Ping timeout: 256 seconds)
[14:42:38] *** Joins: ToxicFrog (~ToxicFrog@198-200-100-178.cpe.distributel.net)
[14:51:17] <yeik-the-spik[m]> <ridcully> "this was just an example.  again..." <- I will take that as a segue to my question. Thanks!
[14:51:23] <yeik-the-spik[m]> I am performing necromancy on a 2006 java app. I has some code that I desperately need. The app has this "lib" folder with tons of jars. I understand those to be the dependencies of the app. I didn't know they would come that way.
[14:51:23] <yeik-the-spik[m]> I am unsing lein. What would be the better way to handle this thing on my project? Should I add the libs? Should I try to figure out which versions of the dependencies the app uses and add them to my "project.clj"?
[14:52:23] <yeik-the-spik[m]> The first approach gives me a weird feeling in the stomach, but I see there are a couple of ways to handle it. Namely:
[14:52:23] <yeik-the-spik[m]> https://github.com/djpowell/lein-libdir
[14:52:23] <yeik-the-spik[m]> and
[14:52:23] <yeik-the-spik[m]> https://stackoverflow.com/questions/2404426/leiningen-how-to-add-dependencies-for-local-jars
[14:58:14] <ridcully> is it to expect, that those lib-jars could have some successors in maven central?  e.g. version numbers in the name?  or is this just BS from all over the place?
[15:00:23] <yeik-the-spik[m]> I am looking for version numbers
[15:00:29] <yeik-the-spik[m]> so far inconclusively
[15:01:36] <yeik-the-spik[m]> there are these build.xml and build.properties on the root directory
[15:01:46] <yeik-the-spik[m]> but no references to the dependencies are there
[15:02:19] <yeik-the-spik[m]> https://sourceforge.net/projects/jdip/files/
[15:02:31] <yeik-the-spik[m]> this is the project I am reviving
[15:02:31] <ridcully> also i'd consider to isolate this not-so-enchanted area of the code totally.  e.g. turn that lib plus all jars in a fat-jar and deploy that locally/company-artifactory/...
[15:03:04] <ridcully> the build tool would be ant here.  no clue what it can do though...
[15:03:54] *** Quits: oscurochu (~oscurochu@37.120.215.100) (Remote host closed the connection)
[15:08:51] <yeik-the-spik[m]> Isolating is the idea. But given the documentation is lacking. I would like to run the code in the repl, see how it behaves and what parts of the code I need. The app runs a whole gui, and I definitely do not need that
[15:12:56] *** Quits: perrierjouet (~perrier-j@modemcable012.251-130-66.mc.videotron.ca) (Quit: WeeChat 3.4)
[15:17:17] *** Joins: perrierjouet (~perrier-j@modemcable012.251-130-66.mc.videotron.ca)
[15:18:09] *** Quits: perrierjouet (~perrier-j@modemcable012.251-130-66.mc.videotron.ca) (Client Quit)
[15:29:41] *** Joins: perrierjouet (~perrier-j@modemcable012.251-130-66.mc.videotron.ca)
[15:58:46] *** Quits: Jing (~hedgehog@115.207.51.203) (Quit: My MacBook has gone to sleep. ZZZzzzâ€¦)
[16:12:41] *** Quits: greyrat (~greyrat@ip202.ip-51-178-215.eu) (Bye)
[16:13:02] *** Joins: greyrat_ (~greyrat@ip202.ip-51-178-215.eu)
[16:13:38] *** Joins: Trieste_ (T@user/pilgrim)
[16:14:31] *** Joins: szkl_ (uid110435@uxbridge.irccloud.com)
[16:14:39] *** Server sets mode: +nt 
[16:15:15] *** Joins: gko` (~user@2400:8902::f03c:91ff:fe70:e605)
[16:15:16] *** Joins: opqdonut_ (opqdonut@pseudo.fixme.fi)
[16:15:21] *** Joins: perro_ (~perro@072-191-245-069.res.spectrum.com)
[16:15:26] *** Joins: farn_ (~farn@2a03:4000:7:3cd:d4ab:85ff:feeb:f505)
[16:15:31] *** Joins: ridcully_ (~ridcully@p57b52a9a.dip0.t-ipconnect.de)
[16:15:33] *** Joins: laman1 (~laman@rego.ai)
[16:15:36] *** Joins: ihabunek1 (~ihabunek@bezdomni.net)
[16:16:05] *** Quits: Trieste (T@user/pilgrim) (Ping timeout: 240 seconds)
[16:16:06] *** Quits: TheCoffeMaker (~TheCoffeM@user/thecoffemaker) (Ping timeout: 240 seconds)
[16:16:06] *** Quits: etiago (~etiago@user/etiago) (Ping timeout: 240 seconds)
[16:16:06] *** Quits: greyrat (~greyrat@ip202.ip-51-178-215.eu) (Ping timeout: 240 seconds)
[16:16:06] *** Quits: dale (dale@user/dale) (Ping timeout: 240 seconds)
[16:16:06] *** Quits: bailon (~gizzard@saturn.whatbox.ca) (Ping timeout: 240 seconds)
[16:16:06] *** Quits: lagash (lagash@lagash.shelltalk.net) (Ping timeout: 240 seconds)
[16:16:06] *** Quits: jeaye (~jeaye@user/jeaye) (Ping timeout: 240 seconds)
[16:16:06] *** Quits: shem (~shem@saltus.discendum.com) (Ping timeout: 240 seconds)
[16:16:06] *** Quits: ihabunek (~ihabunek@bezdomni.net) (Ping timeout: 240 seconds)
[16:16:06] *** Quits: laman (~laman@rego.ai) (Ping timeout: 240 seconds)
[16:16:06] *** Quits: Ingvix (~Ingvix@user/ingvix) (Ping timeout: 240 seconds)
[16:16:07] *** Quits: szkl (uid110435@id-110435.uxbridge.irccloud.com) (Ping timeout: 240 seconds)
[16:16:07] *** Quits: Oshawott (~archenoth@2604:3d09:681:f00:3863:cfe8:507d:8d05) (Ping timeout: 240 seconds)
[16:16:07] *** Quits: drakonis (drakonis@user/drakonis) (Ping timeout: 240 seconds)
[16:16:07] *** Quits: devn3 (devn@2600:3c02::f03c:92ff:feeb:d478) (Ping timeout: 240 seconds)
[16:16:07] *** Quits: gko (~user@user/gko) (Ping timeout: 240 seconds)
[16:16:07] *** Quits: dim (~dimlibera@2a02:2178:2:4:1658:d0ff:fe49:408c) (Ping timeout: 240 seconds)
[16:16:07] *** Quits: opqdonut (opqdonut@pseudo.fixme.fi) (Ping timeout: 240 seconds)
[16:16:07] *** Quits: hexology (~hexology@user/hexology) (Ping timeout: 240 seconds)
[16:16:07] *** Quits: farn (~farn@2a03:4000:7:3cd:d4ab:85ff:feeb:f505) (Ping timeout: 240 seconds)
[16:16:08] *** Quits: perro (~perro@072-191-245-069.res.spectrum.com) (Ping timeout: 240 seconds)
[16:16:08] *** Quits: ridcully (~ridcully@p57b52a9a.dip0.t-ipconnect.de) (Ping timeout: 240 seconds)
[16:16:08] *** Joins: shem (~shem@saltus.discendum.com)
[16:16:08] *** Ischwitch is now known as Ingvix
[16:16:08] *** Joins: devn3 (devn@2600:3c02::f03c:92ff:feeb:d478)
[16:16:08] *** Joins: drakonis (drakonis@2600:3c02::f03c:92ff:fe5e:b8bf)
[16:16:39] *** Joins: jeaye (~jeaye@user/jeaye)
[16:17:24] *** Joins: TheCoffeMaker (~TheCoffeM@user/thecoffemaker)
[16:18:01] *** Quits: drakonis (drakonis@2600:3c02::f03c:92ff:fe5e:b8bf) (Client Quit)
[16:18:12] *** Joins: drakonis (drakonis@user/drakonis)
[16:18:48] *** Joins: dale (dale@user/dale)
[16:19:57] *** Quits: laman1 (~laman@rego.ai) (Ping timeout: 256 seconds)
[16:19:57] *** Quits: szkl_ (uid110435@uxbridge.irccloud.com) (Ping timeout: 256 seconds)
[16:19:57] *** Quits: dale_ (~dale@user/dale) (Ping timeout: 256 seconds)
[16:19:57] *** Joins: Jing (~hedgehog@240e:390:7c53:a7e1:84bf:ceba:6161:c1f6)
[16:20:31] *** Quits: opqdonut_ (opqdonut@pseudo.fixme.fi) (Ping timeout: 256 seconds)
[16:20:31] *** Quits: Trieste_ (T@user/pilgrim) (Ping timeout: 256 seconds)
[16:21:02] *** Joins: Trieste (T@user/pilgrim)
[16:21:03] *** dimlibera is now known as dim
[16:21:48] *** Joins: szkl_ (uid110435@id-110435.uxbridge.irccloud.com)
[16:21:52] *** Joins: laman1 (~laman@rego.ai)
[16:21:54] *** Joins: opqdonut (opqdonut@pseudo.fixme.fi)
[16:35:52] *** Joins: mwnaylor (~user@2601:5ce:4300:5560::68b3)
[16:45:28] *** Joins: matty_ma1 (~matt@129.222.239.110)
[16:53:10] *** Quits: struchu (~struchu@62.87.192.114) (Quit: WeeChat 3.3)
[16:57:34] *** Quits: henry40408 (~henry4040@175.181.155.165) (Quit: The Lounge - https://thelounge.chat)
[16:59:01] *** Joins: GrayArea (~cpd@cpc115156-dals23-2-0-cust689.20-2.cable.virginm.net)
[17:06:55] *** Joins: struchu (~struchu@62.87.192.114)
[17:16:37] *** Quits: matty_ma1 (~matt@129.222.239.110) (Ping timeout: 240 seconds)
[17:20:00] *** Quits: struchu (~struchu@62.87.192.114) (Quit: WeeChat 3.3)
[17:21:16] *** Joins: piotrts (~piotrts@188.146.239.85.nat.umts.dynamic.t-mobile.pl)
[17:22:06] *** Joins: struchu (~struchu@62.87.192.114)
[17:23:14] *** Joins: oscurochu (~oscurochu@37.120.215.102)
[17:24:35] *** Joins: matty_ma1 (~matt@129.222.239.110)
[17:27:07] *** Joins: cmiles74 (~miles@068-184-030-013.res.spectrum.com)
[17:29:35] *** Quits: puchka (~marius@165.73.240.116) (Ping timeout: 268 seconds)
[17:30:55] *** Quits: ekathva (~ekathva@88-114-118-220.elisa-laajakaista.fi) (Remote host closed the connection)
[17:31:22] *** Joins: puchka (~marius@165.73.240.117)
[17:34:37] *** Quits: joe_colben (~joe____co@185.190.112.211) (Remote host closed the connection)
[17:35:17] *** Quits: piotrts (~piotrts@188.146.239.85.nat.umts.dynamic.t-mobile.pl) (Ping timeout: 240 seconds)
[17:38:17] *** Joins: azimut_ (~azimut@gateway/tor-sasl/azimut)
[17:38:57] *** Quits: azimut (~azimut@gateway/tor-sasl/azimut) (Ping timeout: 276 seconds)
[17:43:40] *** Quits: op2 (~op2@user/op2) (Quit: connection reset by purr)
[17:44:00] *** Quits: matty_ma1 (~matt@129.222.239.110) (Ping timeout: 256 seconds)
[17:48:50] *** Joins: matty_ma1 (~matt@129.222.239.110)
[17:49:10] *** Joins: vats (~vats@180.149.226.41)
[17:55:51] *** Joins: op2 (~op2@user/op2)
[17:56:51] *** Quits: GrayArea (~cpd@cpc115156-dals23-2-0-cust689.20-2.cable.virginm.net) (Ping timeout: 256 seconds)
[18:04:00] *** Joins: henry40408 (~henry4040@175.181.155.165)
[18:05:49] *** Quits: henry40408 (~henry4040@175.181.155.165) (Client Quit)
[18:06:14] *** Joins: henry40408 (~henry4040@175.181.155.165)
[18:32:01] *** Joins: yoonkn (~user@175.197.208.79)
[18:36:25] *** Joins: seschwar (~seschwar@user/seschwar)
[18:40:21] *** Joins: shiranaihito_ (~textual@123-192-192-149.dynamic.kbronet.com.tw)
[18:42:32] *** Quits: shiranaihito (~textual@2001-b011-4000-3c74-6cfd-3299-98ff-82f0.dynamic-ip6.hinet.net) (Ping timeout: 240 seconds)
[18:46:09] *** Quits: vats (~vats@180.149.226.41) (Ping timeout: 256 seconds)
[18:58:54] *** Quits: struchu (~struchu@62.87.192.114) (Quit: WeeChat 3.3)
[19:01:57] *** Quits: matty_ma1 (~matt@129.222.239.110) (Ping timeout: 240 seconds)
[19:03:45] *** Joins: matty_ma1 (~matt@129.222.239.110)
[19:14:35] *** Quits: dharrigan (~dharrigan@user/dharrigan) (Quit: ZNC - https://znc.in)
[19:16:27] *** Joins: dharrigan (~dharrigan@user/dharrigan)
[19:36:23] *** Quits: yoonkn (~user@175.197.208.79) (Remote host closed the connection)
[19:58:46] *** Joins: xulfer (uid452788@id-452788.ilkley.irccloud.com)
[19:59:37] *** Quits: matty_ma1 (~matt@129.222.239.110) (Ping timeout: 240 seconds)
[20:14:52] <yeik-the-spik[m]> So, after an afternoon deleting code, I've managed to get what I need into the repl. I just need to run it now.
[20:15:27] <yeik-the-spik[m]> I have a Java class with this signature `public static synchronized void init(File[] searchPaths, boolean isValidating)`
[20:16:06] <yeik-the-spik[m]> so I happily called `(. VariantManager init [(clojure.java.io/file "." variant-dir)] false)`
[20:16:50] <yeik-the-spik[m]> Which yields `class clojure.lang.PersistentVector cannot be cast to class [Ljava.io.File;`
[20:17:45] *** Quits: tatsumaru (~tatsumaru@82.147.131.155) (Quit: Leaving.)
[20:18:26] <ridcully_> you need into-array and friends here
[20:18:33] *** Joins: zmt01 (~zmt00@user/zmt00)
[20:19:12] <ridcully_> something like `(into-array java.io.File [,,,])` maybe
[20:19:28] <yeik-the-spik[m]> Thanks
[20:20:27] <yeik-the-spik[m]> A more carefull read of the docs would have saved your the trouble: https://clojure.org/reference/java_interop#_arrays
[20:21:43] *** Joins: Mark_fisher_ghos (~Mark_fish@2603-6010-e123-0d3c-00d6-b9a5-9d00-4bad.res6.spectrum.com)
[20:21:53] <ridcully_> it's especially handy to know how to handle var args
[20:22:02] *** Quits: Mark_fisher_ghos (~Mark_fish@2603-6010-e123-0d3c-00d6-b9a5-9d00-4bad.res6.spectrum.com) (Client Quit)
[20:22:40] *** Joins: GrayArea (~cpd@cpc115156-dals23-2-0-cust689.20-2.cable.virginm.net)
[20:24:03] <yeik-the-spik[m]> Yeah, thats why I ignored half of the docs on the first read. I did not see this as a varargs case. But I am completely ignorant on Java.
[20:24:14] <yeik-the-spik[m]> Thanks for answering my question
[20:24:27] <yeik-the-spik[m]> I have it running now!
[20:25:12] *** Joins: matty_ma1 (~matt@129.222.239.110)
[20:26:19] <ridcully_> yeah, can run in problem like that if this File... thingy is the last arg and some docs only state "use `init(new File())`" - then you have to know about this problem and that `[L` is easy to miss too
[20:27:05] <ridcully_> i once had a java lib switch from X to X... on a patch-version -- it was no breaking change to Java... but it was to the JVM...
[20:31:51] *** Quits: mbuf (~Shakthi@110.225.233.59) (Quit: Leaving)
[20:32:09] <yeik-the-spik[m]> [L, what an insidious thing. I've spent half an hour duckduckgoing Ljava. And I knew that was an array or list. But to me passing a vec of File seemed like the same.
[20:53:32] *** Quits: tomku (~tomku@user/tomku) (Ping timeout: 240 seconds)
[20:53:55] *** Joins: tomku (~tomku@user/tomku)
[21:05:12] *** Joins: dalek-caan (~Thunderbi@109.252.124.86)
[21:05:49] *** Quits: GrayArea (~cpd@cpc115156-dals23-2-0-cust689.20-2.cable.virginm.net) (Ping timeout: 240 seconds)
[21:08:55] *** Joins: joe_colben (~joe____co@185.190.112.211)
[21:17:13] *** Quits: joe_colben (~joe____co@185.190.112.211) (Remote host closed the connection)
[21:21:27] *** Quits: Major_Biscuit (~MajorBisc@c-001-018-021.client.tudelft.eduvpn.nl) (Ping timeout: 268 seconds)
[21:22:50] *** Joins: faxmodem (~faxmodem@82-65-124-102.subs.proxad.net)
[21:23:22] *** Joins: joe_colben (~joe____co@185.190.112.211)
[21:23:47] *** Quits: Jing (~hedgehog@240e:390:7c53:a7e1:84bf:ceba:6161:c1f6) (Quit: My MacBook has gone to sleep. ZZZzzzâ€¦)
[21:24:38] *** Quits: joe_colben (~joe____co@185.190.112.211) (Read error: Connection reset by peer)
[21:30:19] <aphyr> I keep wondering about something like (.* obj method arg vararg1 vararg2)
[21:30:29] <aphyr> which would do the into-array packaging
[21:30:44] *** Quits: henry40408 (~henry4040@175.181.155.165) (Remote host closed the connection)
[21:31:13] *** Joins: henry40408 (~henry4040@175.181.155.165)
[21:34:04] *** Quits: dalek-caan (~Thunderbi@109.252.124.86) (Quit: dalek-caan)
[21:34:24] <v3ga> has anyone looked at the source code for the Braid project?  Would you consider their organzation unorthodox? Breaking components up and then placing client/server under each component opposed to "clj, cljs, cljc" folders?
[21:36:32] <v3ga> i was reading about organization as far as clojure projects are concerned and it still seems to be up for grabs...I like the idea of working from one file then breaking it up as it gets huge but when it comes to frontend/back end i'm a bit torn with breaking things up between clj/cljs folders or combining the two and breaking things up into domains? like users/server user/client  post/server
[21:36:34] <v3ga> post/client? is that redundant? asking for trouble? 
[21:42:45] <technomancy> never heard of this; what is it?
[21:48:49] *** Quits: puchka (~marius@165.73.240.117) (Quit: leaving)
[21:49:22] *** Joins: GrayArea (~cpd@cpc115156-dals23-2-0-cust689.20-2.cable.virginm.net)
[21:50:02] *** Quits: uncleyear (~ian@pppoe.178-66-158-61.dynamic.avangarddsl.ru) (Remote host closed the connection)
[21:51:08] *** Joins: uncleyear (~ian@pppoe.178-66-158-61.dynamic.avangarddsl.ru)
[21:59:17] *** Quits: cmiles74 (~miles@068-184-030-013.res.spectrum.com) (Ping timeout: 240 seconds)
[22:23:14] *** Joins: cmiles74 (~miles@068-184-030-013.res.spectrum.com)
[22:24:25] <v3ga> technomancy: https://github.com/braidchat/braid
[22:26:15] <v3ga> they just have a 'unique' organization style to me.  I've also looked at a few common lisp projects over the last year and I've noticed they don't seem to have any consistent style, which isn't badnecessarily.  A lot of people are trapped in the mindset that frameworks have taught them...Rails, Django etc... i'm just looking around to see what makes sense 'to me'.
[22:28:25] <v3ga> eric normand also started an interesting conversation about this.  https://clojureverse.org/t/organizing-clojure-code-a-real-problem/7567
[22:32:37] *** Quits: GrayArea (~cpd@cpc115156-dals23-2-0-cust689.20-2.cable.virginm.net) (Ping timeout: 240 seconds)
[22:32:50] *** Joins: tatsumaru (~tatsumaru@82.147.131.155)
[22:33:18] <tatsumaru> i find clojure's way of looping so much more elegant than having to break
[22:33:29] <technomancy> where I work we don't have a lot of code organization problems because we just split up our codebases when they get too big. the main one is 16kloc and definitely needs to get split up.
[22:34:06] <technomancy> of course you still have problems of where you draw the dividing line between services but that's a lot higher-level of a problem and also very difficult to generalize about
[22:35:00] <tatsumaru> technomancy this might be farfetched but I wonder if you could solve the problem of dividing lines through a wisdom of crowds algorithm
[22:36:57] *** Joins: yassernasc (~yassernas@ec2-54-87-145-249.compute-1.amazonaws.com)
[22:37:01] <technomancy> if you want average-at-best results, maybe
[22:42:32] <v3ga> I guess 'keep it simple' is the best path.  
[22:43:05] <v3ga> I see some people making separate namespaces for 5 lines of code. I believe that's going overboard
[22:43:41] <technomancy> in rare cases it could be justified in order to avoid a circular dependency, but normally a bad idea
[22:44:01] <technomancy> this kind of question is very difficult to answer without any context
[22:44:06] <ridcully_> what if you have a strategy to name things and the thing is supposed to be there?
[22:45:07] <v3ga> ridcully_: thats how I normally think... but maybe its not necessary
[22:45:32] <v3ga> technomancy: what do did you think about that Braid project? would you consider their organization messy or odd?
[22:45:53] <technomancy> I don't really have time to do a code review right now, sorry
[22:46:08] <technomancy> also I have no experience with cljs anyway
[22:46:27] <v3ga> gotcha... 
[22:48:37] <ridcully_> v3ga: i doubt there is a general solution.  like with so many things, what you are doing right now is the best you can do.  educate yourself about as many options you can and then decide on a per project base, what you think is best
[22:50:50] <v3ga> ridcully_: yeah, may as well explore...
[22:56:05] *** Quits: tatsumaru (~tatsumaru@82.147.131.155) (Quit: Leaving.)
[23:00:38] *** Joins: GrayArea (~cpd@cpc115156-dals23-2-0-cust689.20-2.cable.virginm.net)
[23:15:32] *** Quits: tuborgman (~tuborgman@pool-108-16-29-206.phlapa.fios.verizon.net) (Ping timeout: 268 seconds)
[23:16:56] *** Joins: tuborgman (~tuborgman@pool-108-16-29-206.phlapa.fios.verizon.net)
[23:19:55] <Frozenlock> Anyone tried Polylith and saw the light? (https://polylith.gitbook.io/polylith/) I've seen it mentioned a few times, but every time I look at it I lose interest before trying a fake project.
[23:40:32] <sobel> seen the light, as in an oncoming train, or...?
[23:41:02] <sobel> (looks interesting enough, bookmarking for my post-meeting reads)
[23:45:58] <Frozenlock> "Seen the light" as in understood what's so great about it and can communicate in simple terms to grug brains like myself.
[23:49:44] <sobel> gotcha. i'm gonna try to read more today.
[23:51:01] *** Quits: matty_ma1 (~matt@129.222.239.110) (Ping timeout: 256 seconds)
[23:52:12] *** Joins: joe_colben (~joe____co@185.190.112.211)
[23:52:27] <ridcully_> there was a talk at the london clojurists about it
[23:53:11] *** Quits: joe_colben (~joe____co@185.190.112.211) (Read error: Connection reset by peer)
[23:53:27] *** Joins: joe_colben (~joe____co@185.190.112.211)
[23:57:09] *** Quits: joe_colben (~joe____co@185.190.112.211) (Read error: Connection reset by peer)
[23:58:27] *** Quits: azimut_ (~azimut@gateway/tor-sasl/azimut) (Remote host closed the connection)
[23:58:52] *** Joins: azimut (~azimut@gateway/tor-sasl/azimut)
[23:59:15] *** Quits: yassernasc (~yassernas@ec2-54-87-145-249.compute-1.amazonaws.com) (Remote host closed the connection)
