[00:00:31] *** Quits: ThorMojito (~Adium@modemcable212.77-202-24.mc.videotron.ca) (Quit: Leaving.)
[00:01:19] *** Quits: shiranaihito_ (~textual@123-192-192-149.dynamic.kbronet.com.tw) (Quit: My MacBook Air has gone to sleep. ZZZzzz…)
[00:01:53] *** Quits: hoppity (~hoppity@user/hoppity) (Ping timeout: 256 seconds)
[00:01:57] *** Quits: DevAntoine (~DevAntoin@2a01:e34:ec18:50c0:ed69:ba9e:940:104c) (Ping timeout: 252 seconds)
[00:03:32] *** Joins: velix (~velix@user/velix)
[00:03:48] <velix> Not a pure PG question, but #security is pretty quiet these days. When connecting python or php as web-backend to PostgreSQL via pgBouncer and unix socket, I wonder if it's needed to use a password at all. Isn't it more secure to allow just the php-worker to access the unix socket and use peer auth?
[00:04:13] *** Joins: hoppity (~hoppity@mobile-166-172-56-167.mycingular.net)
[00:04:14] *** Quits: hoppity (~hoppity@mobile-166-172-56-167.mycingular.net) (Changing host)
[00:04:14] *** Joins: hoppity (~hoppity@user/hoppity)
[00:05:34] *** Quits: hoppity (~hoppity@user/hoppity) (Remote host closed the connection)
[00:10:28] *** Quits: mthall (~quassel@mail.thalliman.com) (Quit: https://quassel-irc.org - Chat comfortably. Anywhere.)
[00:11:29] *** Joins: mthall (~quassel@mail.thalliman.com)
[00:13:34] *** Quits: glik22_ (~glik22@99-36-164-253.lightspeed.snjsca.sbcglobal.net) (Ping timeout: 272 seconds)
[00:13:41] <Snow-Man> yes.
[00:15:10] <velix> Snow-Man: oh come on. you can't answer my long  text just with one word :D
[00:15:19] <Snow-Man> but ... I did
[00:15:20] <velix> even when it's perfect ;)
[00:15:21] <Snow-Man> :)
[00:15:33] <velix> That's like "42".
[00:15:39] <velix> It might be the answer, but...
[00:16:04] *** Quits: mthall (~quassel@mail.thalliman.com) (Client Quit)
[00:16:19] *** Joins: hoppity (~hoppity@mobile-166-172-56-167.mycingular.net)
[00:16:19] *** Quits: hoppity (~hoppity@mobile-166-172-56-167.mycingular.net) (Changing host)
[00:16:19] *** Joins: hoppity (~hoppity@user/hoppity)
[00:16:42] *** Joins: mthall (~quassel@mail.thalliman.com)
[00:20:09] *** Joins: nulixes1 (~Thunderbi@188.241.178.27)
[00:22:07] *** Quits: elastic_dog (~elastic_d@2a01:118f:822:9c00:f583:aa51:9ad4:d4fb) (Ping timeout: 250 seconds)
[00:24:20] *** Quits: nulixes (~Thunderbi@gateway/vpn/pia/nulixes) (Ping timeout: 272 seconds)
[00:24:21] *** nulixes1 is now known as nulixes
[00:26:17] *** Joins: gp5st (~gp5st@pool-72-77-44-213.pitbpa.fios.verizon.net)
[00:26:37] *** Joins: carragom (~textual@201.204.94.76)
[00:27:38] *** Joins: glik22_ (~glik22@99-36-164-253.lightspeed.snjsca.sbcglobal.net)
[00:27:38] *** Joins: elastic_dog (~elastic_d@2a01:118f:822:9c00:f583:aa51:9ad4:d4fb)
[00:28:09] *** Quits: awmv (~awmv@mob-194-230-148-95.cgn.sunrise.net) (Read error: Connection reset by peer)
[00:28:14] <velix> Snow-Man: Now I realized, why I'm not satisfied with your answer. It's a two parted question!
[00:28:38] <Snow-Man> what's the second part?  I only see one question-mark. :)
[00:28:38] <velix> Snow-Man: a) is it still needed to use a password or b) shall I allow out by peer only to the php/python user?
[00:28:46] <velix> Snow-Man: yeah, they're expensive these days :(
[00:28:48] <Snow-Man> peer auth doesn't need a password.
[00:29:02] <velix> Snow-Man: okay, I didn't know which part you actually answered.
[00:29:17] <Snow-Man> pretty sure I answered all of it. :)
[00:29:38] *** Joins: concrete-houses (~g@209.6.150.53)
[00:30:15] *** Quits: GNUmoon (~GNUmoon@gateway/tor-sasl/gnumoon) (Ping timeout: 240 seconds)
[00:31:22] <velix> Since the container for apache, php and python is readonly, the intruder cannot create code to access the database.
[00:31:40] <concrete-houses> Hi I have table design question I would love some ideas about:  my developer wants to store the true/flase if a salesperson and a customer can use a purchasing module
[00:31:56] <concrete-houses> one to many from salesperson to module-enabled
[00:31:59] *** Joins: awmv (~awmv@mob-194-230-148-95.cgn.sunrise.net)
[00:32:03] <concrete-houses> same for customer to moduel enabled
[00:32:16] <concrete-houses> how to design the moduel enabled table?
[00:32:25] <concrete-houses> 2 foriegn key?
[00:32:50] <concrete-houses> there are many modules say 340
[00:33:12] <concrete-houses> or would it be smarter to have a table for each
[00:33:47] <concrete-houses> I meant 40 not 340
[00:34:18] <ilmari> maret: sorry, I was away making dinner. I don't have any further suggestions as to how to make it faster
[00:34:23] *** Quits: kyshoc (~kyshoc@user/kyshoc) (Quit: ZNC 1.8.2 - https://znc.in)
[00:34:38] *** Joins: kyshoc (~kyshoc@adsl-99-93-208-248.dsl.mtry01.sbcglobal.net)
[00:34:39] *** Quits: kyshoc (~kyshoc@adsl-99-93-208-248.dsl.mtry01.sbcglobal.net) (Changing host)
[00:34:39] *** Joins: kyshoc (~kyshoc@user/kyshoc)
[00:35:39] <ilmari> concrete-houses: two many-to-many link tables
[00:35:54] <ilmari> salesperson >- salesperson_can_use_module -< module >- customer_can_use_module -< customer
[00:36:55] <concrete-houses> how do I setup a link table?
[00:37:22] *** Quits: jelly (jelly@user/jelly) (Ping timeout: 260 seconds)
[00:37:38] <concrete-houses> oh table for salesperson with primary key of module as foreng key   and another for customer?
[00:39:08] *** Quits: gambl0re (~gambl0re@2607:fea8:a59f:c360::4f67) (Quit: WeeChat 3.4)
[00:40:01] *** Joins: ponsfrilus (~Thunderbi@adsl-178-39-226-100.adslplus.ch)
[00:41:31] <concrete-houses> tank you for help
[00:42:49] *** Quits: RLa (~RLa@85.253.187.184.cable.starman.ee) (Quit: Client closed)
[00:43:55] *** Quits: phx (~phoemix@marvin.harmless.hu) (Remote host closed the connection)
[00:44:36] <concrete-houses> so that would have primary key matches salesperson the can use t/f and foreign key to module?  then same on other side for customer?
[00:44:41] <maret> ilmari no worries, thanks!
[00:44:52] *** Quits: zer0bitz (~zer0bitz@dsl-hkibng32-54fbf8-224.dhcp.inet.fi) (Read error: Connection reset by peer)
[00:45:03] *** Joins: kitsunenokenja (~kitsunech@68.91.220.96)
[00:46:04] <ilmari> concrete-houses: a table with a foreign key to both salesperson and module, and both columns make up the primary key
[00:46:10] <concrete-houses> not sure how to try and visualize ro think about tit
[00:46:22] *** Quits: hoppity (~hoppity@user/hoppity) (Remote host closed the connection)
[00:46:30] <ilmari> that way a salesperson can use many modules, and many salespeople can use the same module, but a given salesperson can only have one entry for each module
[00:46:49] <concrete-houses> so 1 table?
[00:46:51] <concrete-houses> oh wow
[00:47:00] *** Quits: immibis (~hexchat@62.156.144.218) (Remote host closed the connection)
[00:47:02] <concrete-houses> combined primary key
[00:47:21] *** Quits: awmv (~awmv@mob-194-230-148-95.cgn.sunrise.net) (Quit: My MacBook has gone to sleep. ZZZzzz…)
[00:47:28] *** Joins: immibis (~hexchat@62.156.144.218)
[00:47:29] <concrete-houses> why did you say 2 two to many link tables?
[00:48:46] <concrete-houses> ohhhh
[00:48:48] <concrete-houses> iok
[00:49:02] *** Joins: hoppity (~hoppity@mobile-166-172-56-167.mycingular.net)
[00:49:02] *** Quits: hoppity (~hoppity@mobile-166-172-56-167.mycingular.net) (Changing host)
[00:49:02] *** Joins: hoppity (~hoppity@user/hoppity)
[00:50:21] *** Joins: Auron (Auron956@user/auron)
[00:51:30] *** Parts: moritz[m] (~moritzgeg@2001:470:69fc:105::1:b65b) ()
[00:52:46] *** Joins: ThorMojito (~Adium@modemcable212.77-202-24.mc.videotron.ca)
[00:52:51] *** Quits: ThorMojito (~Adium@modemcable212.77-202-24.mc.videotron.ca) (Client Quit)
[00:52:53] <ilmari> one for salespeople, one for users (assuming they are in seprate tables)
[00:52:58] <concrete-houses> ok
[00:53:03] *** Quits: jazzy (~jaziz@user/jaziz) (Remote host closed the connection)
[00:53:14] <ilmari> https://www.db-fiddle.com/f/fdp9JyAnKdfwdZaYs3TUQh/0
[00:53:34] *** Quits: hoppity (~hoppity@user/hoppity) (Ping timeout: 250 seconds)
[00:53:38] <concrete-houses> so the salesperson table would have like primary key forkey1 forkey2 canuse?
[00:53:41] *** Joins: jelly (jelly@user/jelly)
[00:54:40] <ilmari> no, the salesperson table has nothing module-related in it
[00:54:53] *** Joins: jazzy (~jaziz@user/jaziz)
[00:54:53] <ilmari> see the above fiddle
[00:57:23] *** Joins: jazzy2 (~jaziz@user/jaziz)
[00:57:29] *** Quits: dre (~dre@2001:8003:c932:c301:403f:9f61:c28b:c314) (Ping timeout: 252 seconds)
[00:57:43] <concrete-houses> wow nice
[00:57:44] *** Quits: aremaref (~aremaref@107-198-1-161.lightspeed.irvnca.sbcglobal.net) (Ping timeout: 256 seconds)
[00:57:46] <concrete-houses> thank you so much
[00:58:12] <maret> whats general approach in such a cases? should i look for  horizontal scaling?
[00:58:25] *** Quits: jelly (jelly@user/jelly) (Excess Flood)
[00:58:44] *** Quits: rpkilby (~rpkilby@c-24-20-208-106.hsd1.or.comcast.net) (Remote host closed the connection)
[01:00:14] *** Quits: jazzy (~jaziz@user/jaziz) (Ping timeout: 252 seconds)
[01:00:27] *** Joins: hoppity (~hoppity@mobile-166-172-56-167.mycingular.net)
[01:00:27] *** Quits: hoppity (~hoppity@mobile-166-172-56-167.mycingular.net) (Changing host)
[01:00:27] *** Joins: hoppity (~hoppity@user/hoppity)
[01:01:32] <ilmari> concrete-houses: updated with users as well, and a query: https://www.db-fiddle.com/f/fdp9JyAnKdfwdZaYs3TUQh/1
[01:02:14] <ilmari> maret: you could have multiple processes working on subsets of the addresses in parallel
[01:03:35] <ilmari> multiple client processes, that is. scaling databases horizontally is hard, but postgres is good at concurrency, so you can get quite far with "just" giving it more CPU cores and iops
[01:04:16] <ilmari> oh, and ram, of course
[01:07:46] <Kobaz> sheeps and rams
[01:08:23] <concrete-houses> I think its more to trakc who of sales is allowed to use some module of the app
[01:08:28] <concrete-houses> and which customers are
[01:09:11] <ilmari> the query was just a sample one, showing salespeople and users who have modules in common
[01:09:55] *** Joins: rpkilby (~rpkilby@c-24-20-208-106.hsd1.or.comcast.net)
[01:10:02] <concrete-houses> so the primary key indicates if the salesperson can use the module...
[01:10:29] <ilmari> the existence of the row in the salesperson_can_use_module table indicates that that salesperson can use that module
[01:10:53] <ilmari> the primary key is just so you don't get duplicate entries in the table for the same salesperson and module combination
[01:11:12] <concrete-houses> ah
[01:12:13] *** Joins: aremaref (~aremaref@107-198-1-161.lightspeed.irvnca.sbcglobal.net)
[01:14:02] *** Quits: alguien (~alguien@user/alguien) (Ping timeout: 240 seconds)
[01:15:35] *** Joins: ThorMojito (~Adium@modemcable212.77-202-24.mc.videotron.ca)
[01:17:18] *** Joins: jelly (~me@user/jelly)
[01:18:23] *** Quits: otisolsen70 (~otisolsen@xd4ed80b5.cust.hiper.dk) (Quit: Leaving)
[01:18:25] *** Quits: magla (~gelignite@55d4843f.access.ecotel.net) (Quit: Stay safe!)
[01:18:29] *** Joins: dre (~dre@2001:8003:c932:c301:9b63:ba34:8f7a:bf77)
[01:18:35] *** Quits: bindu (~bindu@user/bindu) (Ping timeout: 240 seconds)
[01:18:47] *** Joins: bindu (~bindu@user/bindu)
[01:19:10] <maret> ilmari so  increaswe max paralel workers?
[01:20:07] *** Joins: richard_h (~richard@2406:e001:8:a900:6e62:6dff:fe05:ae29)
[01:20:09] <ilmari> maret: you could try, but I'm not sure SELECT FOR UPDATE can use parallel queries
[01:20:41] <ilmari> I was thinking splitting the list of addresses between multiple client processes with a separate connection each
[01:28:35] <bougyman> If I want to stream replication to an "analytics" instance, where that instance needs the DS team to be able to create views and such (but not modify the data), what's the go-to solution? Thus far I'm investigating bucardo and slony. Is there anything native that supports this or am I on the right path?
[01:29:04] *** Quits: Rashad (~textual@2a01:9700:1aac:7d00:8dc3:4a35:f79f:3415) (Quit: My MacBook Air has gone to sleep. ZZZzzz…)
[01:30:51] *** Quits: jpaa_ (~jpaa@161.97.129.36) (Ping timeout: 256 seconds)
[01:31:02] *** Quits: ekathva_ (~ekathva@85-76-69-150-nat.elisa-mobile.fi) (Remote host closed the connection)
[01:31:25] *** Quits: cerill (~cerill@h-155-4-198-153.A785.priv.bahnhof.se) (Quit: Client closed)
[01:31:37] *** Quits: funhouse (~funhouse@user/funhouse) (Quit: Client closed)
[01:32:15] <maret> ilmari I see so  instead of doing the one query through one connection  for lets say 10k items I do 2 5k each or 5 2k each .. ?
[01:34:09] *** Quits: k8yun (~k8yun@user/k8yun) (Quit: Leaving)
[01:35:54] *** Quits: manti7 (~manti7@176.10.104.94) (Quit: WeeChat 3.4)
[01:36:15] *** Quits: varioust (~varioust@gateway/tor-sasl/varioust) (Ping timeout: 240 seconds)
[01:39:06] *** Quits: michalz (~michalz@185.246.204.69) (Remote host closed the connection)
[01:42:37] *** Joins: Rashad (~textual@2a01:9700:1aac:7d00:8dc3:4a35:f79f:3415)
[01:42:53] *** Quits: ponsfrilus (~Thunderbi@adsl-178-39-226-100.adslplus.ch) (Quit: ponsfrilus)
[01:43:21] *** Joins: ponsfrilus (~Thunderbi@adsl-178-39-226-100.adslplus.ch)
[01:47:00] *** Quits: Rashad (~textual@2a01:9700:1aac:7d00:8dc3:4a35:f79f:3415) (Ping timeout: 252 seconds)
[01:47:56] *** Quits: uncleyear (~ian@178.176.72.65) (Ping timeout: 272 seconds)
[01:49:14] *** Joins: uncleyear (~ian@178.176.74.236)
[01:56:16] *** Quits: Klinda (~superleag@user/klinda) (Quit: Konversation terminated!)
[02:00:38] *** Quits: kitsunenokenja (~kitsunech@68.91.220.96) (Ping timeout: 256 seconds)
[02:01:39] *** Quits: rpkilby (~rpkilby@c-24-20-208-106.hsd1.or.comcast.net) (Remote host closed the connection)
[02:03:20] *** Quits: rendar (~rendar@user/rendar) (Quit: Leaving)
[02:04:23] *** Quits: mowcat (~mowcat@2a00:23c5:d190:1901:f22f:74ff:fe77:1e1c) (Remote host closed the connection)
[02:04:29] *** Quits: Auron (Auron956@user/auron) (Remote host closed the connection)
[02:10:40] *** Joins: rpkilby (~rpkilby@c-24-20-208-106.hsd1.or.comcast.net)
[02:14:09] *** Joins: ovnicraft (~ovnicraft@191.99.151.8)
[02:14:48] *** Quits: rewrit3 (~rewrit3@user/rewrit3) (Read error: Connection reset by peer)
[02:16:33] *** Quits: ThorMojito (~Adium@modemcable212.77-202-24.mc.videotron.ca) (Quit: Leaving.)
[02:17:14] *** Quits: pateh (~pateh@81-197-66-239.elisa-laajakaista.fi) (Ping timeout: 260 seconds)
[02:17:54] *** Quits: rpkilby (~rpkilby@c-24-20-208-106.hsd1.or.comcast.net) (Remote host closed the connection)
[02:18:03] *** Joins: varioust (~varioust@gateway/tor-sasl/varioust)
[02:20:29] *** Quits: ovnicraft (~ovnicraft@191.99.151.8) (Quit: My MacBook has gone to sleep. ZZZzzz…)
[02:20:55] *** Joins: ovnicraft (~ovnicraft@191.99.151.8)
[02:22:43] *** Quits: PeGaSuS (WeeChat@user/pegasus) (Remote host closed the connection)
[02:22:46] *** Quits: f3f3lix (~weechat@55d4279f.access.ecotel.net) (Ping timeout: 272 seconds)
[02:23:08] *** Quits: keithf4 (~ircuser@159.203.190.148) (Quit: quit)
[02:23:23] *** Joins: PeGaSuS (WeeChat@user/pegasus)
[02:24:22] *** Joins: f3f3lix (~weechat@55d4279f.access.ecotel.net)
[02:29:49] *** Quits: V (~v@anomalous.eu) (Ping timeout: 240 seconds)
[02:30:20] *** Joins: austb_ (~austb@c-73-240-245-80.hsd1.or.comcast.net)
[02:33:01] *** Quits: v3ga (~v3ga@2603-6080-5204-3b35-e149-f31f-1120-01f3.res6.spectrum.com) (Remote host closed the connection)
[02:34:46] *** Joins: v3ga (~v3ga@2603-6080-5204-3b35-e149-f31f-1120-01f3.res6.spectrum.com)
[02:36:33] *** Quits: ovnicraft (~ovnicraft@191.99.151.8) (Quit: My MacBook has gone to sleep. ZZZzzz…)
[02:36:59] *** Joins: ovnicraft (~ovnicraft@191.99.151.8)
[02:41:06] *** Joins: pateh (~pateh@81-197-66-239.elisa-laajakaista.fi)
[02:41:41] *** Joins: Nekomander (~BadAdvice@user/badadvicecat)
[02:42:00] *** Joins: keithf4 (~ircuser@159.203.190.148)
[02:43:40] *** Joins: rpkilby (~rpkilby@c-24-20-208-106.hsd1.or.comcast.net)
[02:44:50] *** Quits: austb_ (~austb@c-73-240-245-80.hsd1.or.comcast.net) (Ping timeout: 256 seconds)
[02:46:03] *** Joins: kakashiA1 (~kakashi@105.159.158.112)
[02:47:06] *** Quits: uncleyear (~ian@178.176.74.236) (Ping timeout: 260 seconds)
[02:48:39] *** Quits: richard_h (~richard@2406:e001:8:a900:6e62:6dff:fe05:ae29) (Quit: Leaving.)
[02:49:14] *** Quits: off^ (~off@50.232.121.75) (Remote host closed the connection)
[02:49:19] *** Quits: DNH (~DNH@2a02:8108:1100:16d8:844b:b51a:d0ea:add8) (Quit: My MacBook has gone to sleep. ZZZzzz…)
[02:52:19] *** Quits: ovnicraft (~ovnicraft@191.99.151.8) (Quit: My MacBook has gone to sleep. ZZZzzz…)
[02:52:23] *** Quits: palasso (~palasso@user/palasso) (Remote host closed the connection)
[02:53:10] *** Quits: Reiner_Unsinn (~quassel@p5dd47e8f.dip0.t-ipconnect.de) (Ping timeout: 272 seconds)
[02:54:37] *** Quits: ur5us_ (~ur5us@2406:e002:6845:dc01:68c7:1b9f:7d41:5e0d) (Ping timeout: 240 seconds)
[02:56:26] *** Joins: ovnicraft (~ovnicraft@191.99.151.8)
[02:57:06] *** Joins: DNH (~DNH@2a02:8108:1100:16d8:844b:b51a:d0ea:add8)
[03:01:43] *** Joins: V (~v@anomalous.eu)
[03:02:05] *** Joins: ilikeyou (~ilikeyou@ec2-18-219-166-223.us-east-2.compute.amazonaws.com)
[03:05:50] *** Quits: shka (~herr@109.231.3.55) (Ping timeout: 272 seconds)
[03:07:03] *** Joins: bsd4me (~usingbsd@user/bsd4me)
[03:09:31] *** Quits: tc__ (~tc@103-140-203-11.vic.as139284.net.au) (Remote host closed the connection)
[03:09:55] *** Joins: tc__ (~tc@103-140-203-11.vic.as139284.net.au)
[03:10:29] *** Quits: maret (~maret@nat-88-212-37-89.antik.sk) (Quit: maret)
[03:11:21] *** Quits: fstd (~fstd@xdsl-78-35-88-2.nc.de) (Read error: Connection reset by peer)
[03:12:27] *** Joins: fstd (~fstd@xdsl-78-35-88-2.nc.de)
[03:14:42] *** Quits: G_SabinoMullane (~G_SabinoM@pool-72-94-251-236.phlapa.fios.verizon.net) (Ping timeout: 272 seconds)
[03:19:51] *** Joins: GNUmoon (~GNUmoon@gateway/tor-sasl/gnumoon)
[03:20:42] *** Quits: DNH (~DNH@2a02:8108:1100:16d8:844b:b51a:d0ea:add8) (Quit: My MacBook has gone to sleep. ZZZzzz…)
[03:21:25] *** Quits: rpkilby (~rpkilby@c-24-20-208-106.hsd1.or.comcast.net) (Remote host closed the connection)
[03:22:24] *** Quits: NCS_One (~NCS_One@bl11-90-133.dsl.telepac.pt) (Quit: Lost terminal)
[03:23:07] *** Joins: dsrt^ (~dsrt@50.232.121.75)
[03:23:22] *** Quits: Haudegen (~quassel@178.115.237.87.static.drei.at) (Ping timeout: 256 seconds)
[03:23:44] *** Joins: Junxter (~Junxter@121.237.63.222)
[03:24:26] *** Joins: richard_h (~richard@2406:e001:8:a900:6e62:6dff:fe05:ae29)
[03:25:15] *** Quits: varioust (~varioust@gateway/tor-sasl/varioust) (Ping timeout: 240 seconds)
[03:25:44] *** Joins: rpkilby (~rpkilby@c-24-20-208-106.hsd1.or.comcast.net)
[03:25:54] *** Joins: ur5us_ (~ur5us@2406:e002:6845:dc01:68c7:1b9f:7d41:5e0d)
[03:26:43] *** Quits: richard_h (~richard@2406:e001:8:a900:6e62:6dff:fe05:ae29) (Client Quit)
[03:27:20] *** Quits: kakashiA1 (~kakashi@105.159.158.112) (Ping timeout: 256 seconds)
[03:28:10] *** Quits: jkavalik (~jkavalik@ip-78-102-141-139.net.upcbroadband.cz) (Remote host closed the connection)
[03:30:25] *** Quits: Junxter (~Junxter@121.237.63.222) (Ping timeout: 256 seconds)
[03:30:28] *** Joins: jkavalik (~jkavalik@ip-78-102-141-139.net.upcbroadband.cz)
[03:31:00] *** Joins: nulixes1 (~Thunderbi@gateway/vpn/pia/nulixes)
[03:32:26] *** Quits: nulixes (~Thunderbi@188.241.178.27) (Ping timeout: 256 seconds)
[03:32:26] *** nulixes1 is now known as nulixes
[03:34:54] *** Quits: pedja (~pedja@user/deus-ex/x-7934090) (Quit: Leaving)
[03:35:10] *** Joins: nulixes1 (~Thunderbi@gateway/vpn/pia/nulixes)
[03:36:58] *** Quits: nulixes (~Thunderbi@gateway/vpn/pia/nulixes) (Ping timeout: 256 seconds)
[03:36:58] *** nulixes1 is now known as nulixes
[03:37:35] *** Joins: ur5us (~ur5us@2406:e002:6845:dc01:b921:6822:fa0e:e017)
[03:37:48] *** Quits: ur5us_ (~ur5us@2406:e002:6845:dc01:68c7:1b9f:7d41:5e0d) (Ping timeout: 240 seconds)
[03:41:56] *** Quits: james_lavin (~jameslavi@ool-457981b2.dyn.optonline.net) (Ping timeout: 272 seconds)
[03:44:01] *** Quits: gp5st (~gp5st@pool-72-77-44-213.pitbpa.fios.verizon.net) (Ping timeout: 256 seconds)
[03:53:11] *** Quits: hoppity (~hoppity@user/hoppity) (Remote host closed the connection)
[03:53:18] *** Joins: bencc1 (~bencc1@2a00:a040:197:3af:be25:a9e5:d36c:4ea2)
[03:53:39] <bencc1> I have a table with PRIMARY KEY (col_a, col_b)
[03:53:55] <bencc1> how can I replace this primary key with a serial?
[03:54:12] <bencc1> should I create another table, copy all records and replace the table name?
[03:54:16] <nbjoerg> no
[03:54:40] <nbjoerg> just add a new integer column with null; use row_number() in update
[03:54:58] <bencc1> what is row_number()?
[03:55:18] <nbjoerg> it's a window function
[03:56:26] <nbjoerg> try "select row_number() over (), col_a, col_b FROM my_table" :)
[03:56:49] *** Quits: rpkilby (~rpkilby@c-24-20-208-106.hsd1.or.comcast.net) (Remote host closed the connection)
[03:57:08] <nbjoerg> just remember to update the next value of the sequence afterwards, so that you don't get a conflict on the next insert
[03:59:38] <bencc1> tried this query but I'm getting an empty result
[04:00:09] <bencc1> maybe parentheses are wrong? row_number() and over() don't have any arguments?
[04:01:46] <bencc1> ok. I'm getting results
[04:02:08] <bencc1> I think I should also use "over(order by col a asc, col_b asc)" right?
[04:02:12] *** Joins: rpkilby (~rpkilby@c-24-20-208-106.hsd1.or.comcast.net)
[04:02:16] *** Joins: trafficjam (~qubes@fortivpn.svha.org.au)
[04:02:59] <trafficjam> hey guys, is there a general category hierarchy for events?
[04:05:05] <bencc1> nbjoerg: what should the update query should be to update the new col_serial column?
[04:05:42] *** Quits: dre (~dre@2001:8003:c932:c301:9b63:ba34:8f7a:bf77) (Remote host closed the connection)
[04:06:03] <bencc1> "update tab set col_serial = select row_number() over (), col_a, col_b FROM my_table;" ?
[04:08:17] <nbjoerg> update table my_table set ... from (select row_number() over () as new_id, col_a, col_b FROM my_table) x where x.col_a = my_table.col_a AND x.col_b = my_table.col_b
[04:09:02] <nbjoerg> you might even be able to use it without subselect, but I don't want to test that right now
[04:09:29] <bencc1> can I make it ordered by (col_a, col_b) ?
[04:09:39] *** Joins: varioust (~varioust@gateway/tor-sasl/varioust)
[04:09:53] <nbjoerg> sure
[04:10:11] <bencc1> update table my_table set ... from (select row_number() over (order by col_a, col_b) as new_id, col_a, col_b FROM my_table) x where x.col_a = my_table.col_a AND x.col_b = my_table.col_b ?
[04:11:28] *** Quits: cliluw (~cliluw@47.147.77.43) (Quit: Leaving)
[04:11:45] <nbjoerg> yeah
[04:12:41] <bencc1> thanks. trying
[04:17:46] *** Quits: dsrt^ (~dsrt@50.232.121.75) (Ping timeout: 256 seconds)
[04:22:18] *** Quits: n0fun_ (~jack@mue-88-130-48-101.dsl.tropolys.de) (Ping timeout: 256 seconds)
[04:24:49] *** Quits: trafficjam (~qubes@fortivpn.svha.org.au) (Ping timeout: 256 seconds)
[04:25:58] *** Quits: ovnicraft (~ovnicraft@191.99.151.8) (Quit: My MacBook has gone to sleep. ZZZzzz…)
[04:27:00] *** Quits: op2 (~op2@user/op2) (Ping timeout: 240 seconds)
[04:30:01] *** Joins: dsrt^ (~dsrt@50.232.121.75)
[04:30:01] *** Quits: bertptrs (~quassel@user/bertptrs) (Quit: https://quassel-irc.org - Chat comfortably. Anywhere.)
[04:30:41] *** Joins: bertptrs (~quassel@user/bertptrs)
[04:32:36] <bencc1> nbjoerg: everything seems to work without updating the next value of the sequence
[04:33:00] <bencc1> I tried to insert a new row to the table after replacing the primary key and it works
[04:33:45] <bencc1> I've used DROP CONSTRAINT tab_pkey; and ADD PRIMARY KEY(tab_id)
[04:37:42] *** Joins: james_lavin (~jameslavi@ool-457981b2.dyn.optonline.net)
[04:37:51] *** Quits: rpkilby (~rpkilby@c-24-20-208-106.hsd1.or.comcast.net) (Remote host closed the connection)
[04:39:13] *** Joins: BadAdviceCat (~BadAdvice@user/badadvicecat)
[04:39:52] *** Quits: Nekomander (~BadAdvice@user/badadvicecat) (Ping timeout: 256 seconds)
[04:40:20] *** Quits: ivii (~ivan@user/ivii) (Remote host closed the connection)
[04:41:37] *** Quits: james_lavin (~jameslavi@ool-457981b2.dyn.optonline.net) (Ping timeout: 240 seconds)
[04:48:49] *** Joins: zemis (~zemis@ip-89-176-21-138.net.upcbroadband.cz)
[04:59:54] *** Joins: Nekomander (~BadAdvice@user/badadvicecat)
[04:59:57] *** Quits: BadAdviceCat (~BadAdvice@user/badadvicecat) (Ping timeout: 240 seconds)
[05:00:02] *** Joins: Junxter (~Junxter@121.237.63.222)
[05:06:53] <bencc1> thanks
[05:06:57] *** Quits: bencc1 (~bencc1@2a00:a040:197:3af:be25:a9e5:d36c:4ea2) (Quit: Leaving)
[05:07:00] *** Quits: defjam (~eb0t@90.210.89.170) (Ping timeout: 240 seconds)
[05:09:01] *** Quits: dsrt^ (~dsrt@50.232.121.75) (Ping timeout: 256 seconds)
[05:09:04] *** Joins: defjam (~eb0t@90.203.123.221)
[05:09:36] *** Joins: dsrt^ (~dsrt@50.232.121.75)
[05:22:33] *** Joins: MrZeus (~MrZeus@89.238.130.71)
[05:25:09] *** Joins: rpkilby (~rpkilby@c-24-20-208-106.hsd1.or.comcast.net)
[05:26:36] *** Joins: henrydance (~henrydanc@static-n49-176-146-220.meb4.vic.optusnet.com.au)
[05:27:29] <henrydance> How can I find what query is causing exclusive locks on a table?
[05:30:14] *** Quits: rpkilby (~rpkilby@c-24-20-208-106.hsd1.or.comcast.net) (Ping timeout: 272 seconds)
[05:31:56] *** Joins: gp5st (~gp5st@pool-72-77-44-213.pitbpa.fios.verizon.net)
[05:32:34] *** Quits: nulixes (~Thunderbi@gateway/vpn/pia/nulixes) (Ping timeout: 256 seconds)
[05:32:49] *** Quits: MrZeus (~MrZeus@89.238.130.71) (Ping timeout: 256 seconds)
[05:37:46] <henrydance> It seems that I have simple select queries which are causing AccessShareLocks. What could be the reason for this?
[05:38:20] *** Joins: james_lavin (~jameslavi@ool-457981b2.dyn.optonline.net)
[05:39:29] *** Joins: gumnos (~gumnos@2600:1702:410:f440:ba70:f4ff:fe1e:1ef2)
[05:39:53] *** Joins: ovnicraft (~ovnicraft@191.99.151.8)
[05:40:32] <gumnos> I've been unable to track this down: if I do an UPDATE where all the SET items are no-ops (they set to the existing value), do any writes actually take place? Or is Postgres smart enough to do nothing?
[05:41:53] *** Quits: f3f3lix (~weechat@55d4279f.access.ecotel.net) (Ping timeout: 256 seconds)
[05:43:33] *** Joins: f3f3lix (~weechat@55d42faa.access.ecotel.net)
[05:45:19] *** Joins: G_SabinoMullane (~G_SabinoM@pool-72-94-251-236.phlapa.fios.verizon.net)
[05:50:20] *** Joins: BadAdviceCat (~BadAdvice@user/badadvicecat)
[05:51:16] *** Quits: Nekomander (~BadAdvice@user/badadvicecat) (Ping timeout: 250 seconds)
[05:55:00] *** Quits: zemis (~zemis@ip-89-176-21-138.net.upcbroadband.cz) (Ping timeout: 240 seconds)
[05:59:02] *** Quits: Xof (~Xof@157-131-136-66.dedicated.static.sonic.net) (Quit: Bye.)
[06:00:00] *** Quits: henrydance (~henrydanc@static-n49-176-146-220.meb4.vic.optusnet.com.au) (Ping timeout: 252 seconds)
[06:00:38] *** Quits: Su-Shee (~Susanne@83-125-142-46.pool.kielnet.net) (Ping timeout: 272 seconds)
[06:01:56] *** Joins: Su-Shee (~Susanne@130-111-142-46.pool.kielnet.net)
[06:02:36] *** Quits: ur5us (~ur5us@2406:e002:6845:dc01:b921:6822:fa0e:e017) (Ping timeout: 240 seconds)
[06:03:25] *** Quits: aremaref (~aremaref@107-198-1-161.lightspeed.irvnca.sbcglobal.net) (Ping timeout: 256 seconds)
[06:05:25] *** Quits: Slade (uid128877@user/slade) (Quit: Connection closed for inactivity)
[06:18:22] *** Quits: iliv (~iliv@user/iliv) (Ping timeout: 272 seconds)
[06:22:44] *** Joins: rpkilby (~rpkilby@c-24-20-208-106.hsd1.or.comcast.net)
[06:23:35] *** Quits: varioust (~varioust@gateway/tor-sasl/varioust) (Ping timeout: 240 seconds)
[06:24:10] *** Joins: henrydance (~henrydanc@static-n49-176-146-220.meb4.vic.optusnet.com.au)
[06:28:55] *** Quits: gp5st (~gp5st@pool-72-77-44-213.pitbpa.fios.verizon.net) (Ping timeout: 256 seconds)
[06:29:16] *** Joins: aremaref (~aremaref@107-198-1-161.lightspeed.irvnca.sbcglobal.net)
[06:29:43] <teKuru> gumnos: I don't know definitively, but how would it know it was a no-op unless it checked the value of every column before updating it, and that seems like it would not be a good thing to do regularly. The user said to set it to this value, so do it, I presume.
[06:31:40] *** Quits: rpkilby (~rpkilby@c-24-20-208-106.hsd1.or.comcast.net) (Ping timeout: 272 seconds)
[06:34:23] *** Joins: iliv (~iliv@93-77-147-152.lvv.volia.net)
[06:34:54] *** Quits: Su-Shee (~Susanne@130-111-142-46.pool.kielnet.net) (Ping timeout: 256 seconds)
[06:36:41] *** Joins: Su-Shee (~Susanne@i5E8613B5.versanet.de)
[06:41:08] *** Quits: BadAdviceCat (~BadAdvice@user/badadvicecat) (Ping timeout: 256 seconds)
[06:56:47] *** Joins: austb_ (~austb@c-73-240-245-80.hsd1.or.comcast.net)
[06:57:00] *** Quits: aremaref (~aremaref@107-198-1-161.lightspeed.irvnca.sbcglobal.net) (Ping timeout: 256 seconds)
[06:58:44] *** Joins: aremaref (~aremaref@107-198-1-161.lightspeed.irvnca.sbcglobal.net)
[07:05:42] *** Parts: velix (~velix@user/velix) (Leaving)
[07:09:33] *** Joins: rpkilby (~rpkilby@c-24-20-208-106.hsd1.or.comcast.net)
[07:14:15] *** Quits: james_lavin (~jameslavi@ool-457981b2.dyn.optonline.net) (Ping timeout: 252 seconds)
[07:16:27] *** Quits: thekingofbandit (~thekingof@user/thekingofbandit) (Remote host closed the connection)
[07:18:19] *** Joins: thekingofbandit (~thekingof@user/thekingofbandit)
[07:25:54] *** Joins: connor_goodwolf (~connor@user/connor-goodwolf/x-2615606)
[07:26:20] *** Quits: connor_goodwolf_ (~connor@user/connor-goodwolf/x-2615606) (Ping timeout: 252 seconds)
[07:27:00] *** Quits: Junxter (~Junxter@121.237.63.222) (Ping timeout: 240 seconds)
[07:27:02] *** Quits: Vacuity (~Vacuity@user/vovo) (Ping timeout: 256 seconds)
[07:28:25] *** Joins: Vacuity (~Vacuity@user/vovo)
[07:29:11] *** Quits: pinaraf (~quassel@rock.pinaraf.info) (Ping timeout: 250 seconds)
[07:30:58] *** Joins: Slade (uid128877@user/slade)
[07:33:45] *** Joins: ur5us (~ur5us@122-56-203-167.mobile.spark.co.nz)
[07:35:22] *** Joins: Junxter (~Junxter@121.237.63.222)
[07:37:11] *** Joins: kitsunenokenja (~kitsunech@68.91.220.96)
[07:39:32] *** Quits: sreve (~quassel@p4ff44e9b.dip0.t-ipconnect.de) (Ping timeout: 252 seconds)
[07:39:59] *** Joins: sreve (~quassel@p549d71f3.dip0.t-ipconnect.de)
[07:41:12] *** Quits: mrgz (~mrgz@201-42-0-191.dsl.telesp.net.br) (Ping timeout: 252 seconds)
[07:45:00] *** Quits: PeGaSuS (WeeChat@user/pegasus) (Ping timeout: 240 seconds)
[07:47:57] *** Joins: PeGaSuS (WeeChat@user/pegasus)
[07:50:45] *** Quits: rpkilby (~rpkilby@c-24-20-208-106.hsd1.or.comcast.net) (Remote host closed the connection)
[07:55:15] *** Quits: PeGaSuS (WeeChat@user/pegasus) (Remote host closed the connection)
[07:55:53] *** Joins: PeGaSuS (WeeChat@user/pegasus)
[07:58:11] *** Joins: gp5st (~gp5st@pool-72-77-44-213.pitbpa.fios.verizon.net)
[08:00:43] *** Joins: james_lavin (~jameslavi@ool-457981b2.dyn.optonline.net)
[08:03:11] *** Quits: PeGaSuS (WeeChat@user/pegasus) (Remote host closed the connection)
[08:03:49] *** Joins: PeGaSuS (WeeChat@user/pegasus)
[08:03:51] *** Quits: TMM_ (hp@amanda.tmm.cx) (Quit: https://quassel-irc.org - Chat comfortably. Anywhere.)
[08:03:58] *** Joins: TMM_ (hp@amanda.tmm.cx)
[08:05:39] *** Quits: ur5us (~ur5us@122-56-203-167.mobile.spark.co.nz) (Remote host closed the connection)
[08:06:15] *** Joins: ur5us (~ur5us@122-56-203-167.mobile.spark.co.nz)
[08:14:11] *** Joins: shiranaihito (~textual@123-192-192-149.dynamic.kbronet.com.tw)
[08:14:14] *** Joins: kakashiA1 (~kakashi@105.159.158.112)
[08:19:42] *** Quits: aremaref (~aremaref@107-198-1-161.lightspeed.irvnca.sbcglobal.net) (Ping timeout: 252 seconds)
[08:21:32] *** Quits: PeGaSuS (WeeChat@user/pegasus) (Remote host closed the connection)
[08:22:11] *** Joins: PeGaSuS (WeeChat@user/pegasus)
[08:25:22] *** Quits: ovnicraft (~ovnicraft@191.99.151.8) (Quit: My MacBook has gone to sleep. ZZZzzz…)
[08:32:08] <dfg> i have a text[] column of "tags", i want to count occurances of each tag in each row.. i came up with the following query, but it seems more complicated than necessary and I wonder if there's a simpler appraoch?
[08:32:10] <dfg> with tag_list as ( select unnest(tags) as tags from posts) select tags, count(1) from tag_list group by tags
[08:34:11] *** Joins: Haudegen (~quassel@178.115.237.87.static.drei.at)
[08:35:29] *** Quits: FunkyBob (~curtis@vhost3.tinbrain.net) (Ping timeout: 250 seconds)
[08:37:51] *** Quits: gp5st (~gp5st@pool-72-77-44-213.pitbpa.fios.verizon.net) (Ping timeout: 252 seconds)
[08:40:14] *** Quits: james_lavin (~jameslavi@ool-457981b2.dyn.optonline.net) (Ping timeout: 272 seconds)
[08:42:46] *** Quits: ur5us (~ur5us@122-56-203-167.mobile.spark.co.nz) (Ping timeout: 272 seconds)
[08:45:48] *** Quits: kakashiA1 (~kakashi@105.159.158.112) (Ping timeout: 256 seconds)
[08:48:58] *** Joins: Guest87 (~Guest87@202-90-244-107.ca5af4.per.static.aussiebb.net)
[08:50:15] <Guest87> Does adding a fk still require a AccessExclusiveLock ?
[08:52:22] *** Joins: mattil (~mattil@87-92-215-209.rev.dnainternet.fi)
[08:52:56] *** Joins: mattil_ (~mattil@helsinki.portalify.com)
[08:53:46] *** Quits: Junxter (~Junxter@121.237.63.222) (Quit: Leaving)
[08:57:06] *** Quits: mattil (~mattil@87-92-215-209.rev.dnainternet.fi) (Ping timeout: 252 seconds)
[08:57:36] *** jazzy2 is now known as jazzy
[08:59:14] <Guest87> I thought one of the versions of postgres chagned it so you didn't have to make an invalid constraint and then check it, but I can't find it in the release notes
[09:04:28] *** Quits: sakasama (~sakasama@user/sakasama) (Remote host closed the connection)
[09:04:36] *** Joins: Junxter (~Junxter@121.237.63.222)
[09:04:56] *** Quits: tehenderz_ (~tehenderz@ti0018a400-10352.bb.online.no) (Ping timeout: 272 seconds)
[09:05:08] *** Joins: tehenderz (~tehenderz@ti0018a400-2588.bb.online.no)
[09:11:24] *** Quits: austb_ (~austb@c-73-240-245-80.hsd1.or.comcast.net) (Ping timeout: 252 seconds)
[09:15:09] *** Quits: zer0def (~zer0def@user/zer0def) (Remote host closed the connection)
[09:18:39] *** Joins: darutoko (~darutoko@5.136.68.159)
[09:18:59] *** Joins: uncleyear (~ian@178.176.74.236)
[09:20:15] *** Joins: electron^-892402 (~electron^@212.66.122.116)
[09:20:27] *** Quits: Medlir (Medlir@user/medlir) (Read error: Connection reset by peer)
[09:21:22] *** Joins: FunkyBob (~curtis@vhost3.tinbrain.net)
[09:22:06] *** Joins: shangxiao (~davids@pa49-183-51-109.pa.vic.optusnet.com.au)
[09:23:39] *** Joins: maret (~maret@nat-88-212-37-89.antik.sk)
[09:23:57] *** Joins: zer0def (~zer0def@user/zer0def)
[09:26:12] *** Quits: [sep] (~sep@2a05:6d40:0:340:ec:24ff:fe65:d91c) (Ping timeout: 240 seconds)
[09:34:47] *** Quits: kitsunenokenja (~kitsunech@68.91.220.96) (Ping timeout: 256 seconds)
[09:35:15] *** Quits: G_SabinoMullane (~G_SabinoM@pool-72-94-251-236.phlapa.fios.verizon.net) (Remote host closed the connection)
[09:37:27] *** Joins: austb_ (~austb@c-73-240-245-80.hsd1.or.comcast.net)
[09:38:15] *** Quits: GNUmoon (~GNUmoon@gateway/tor-sasl/gnumoon) (Ping timeout: 240 seconds)
[09:44:17] *** Quits: alex88 (~alex88@ip72-207-140-105.lv.lv.cox.net) (Ping timeout: 240 seconds)
[09:47:09] *** Quits: mattil_ (~mattil@helsinki.portalify.com) (Ping timeout: 252 seconds)
[09:51:40] *** Quits: todd (~todd@gateway/tor-sasl/toddf) (Remote host closed the connection)
[09:54:56] *** Joins: alex88 (~alex88@ip72-207-140-105.lv.lv.cox.net)
[09:55:43] *** Joins: hoppity (~hoppity@user/hoppity)
[09:57:06] *** Joins: todd (~todd@gateway/tor-sasl/toddf)
[10:00:21] *** Quits: hoppity (~hoppity@user/hoppity) (Ping timeout: 252 seconds)
[10:00:40] *** Quits: glik22_ (~glik22@99-36-164-253.lightspeed.snjsca.sbcglobal.net) (Ping timeout: 272 seconds)
[10:00:53] *** Joins: Reiner_Unsinn (~quassel@p5dd47daa.dip0.t-ipconnect.de)
[10:05:11] *** Joins: ur5us (~ur5us@122-56-203-167.mobile.spark.co.nz)
[10:06:21] *** Joins: mattil (~mattil@d4mf8sfn-32kjt0wmcf-4.rev.dnainternet.fi)
[10:06:33] *** Quits: bsd4me (~usingbsd@user/bsd4me) (Quit: Leaving)
[10:10:10] *** Quits: austb_ (~austb@c-73-240-245-80.hsd1.or.comcast.net) (Ping timeout: 272 seconds)
[10:10:24] <maret> Hi, any option how to speed up a query -> https://explain.depesz.com/s/9pCm ? The issue is the sheer amount of data. I got a recommendation to try to split query into sub queries which its own connection
[10:10:32] *** Joins: rvalue- (~rvalue@user/rvalue)
[10:10:47] *** Quits: rvalue (~rvalue@user/rvalue) (Ping timeout: 265 seconds)
[10:13:44] *** Joins: sliss (~sliss@109.136.165.60)
[10:13:56] *** rvalue- is now known as rvalue
[10:15:52] *** Quits: mattil (~mattil@d4mf8sfn-32kjt0wmcf-4.rev.dnainternet.fi) (Remote host closed the connection)
[10:16:21] *** Joins: mattil (~mattil@d4mf8sfn-32kjt0wmcf-4.rev.dnainternet.fi)
[10:16:57] *** Quits: mattil (~mattil@d4mf8sfn-32kjt0wmcf-4.rev.dnainternet.fi) (Remote host closed the connection)
[10:17:11] *** Joins: mattil (~mattil@d4mf8sfn-32kjt0wmcf-4.rev.dnainternet.fi)
[10:22:40] *** Quits: mattil (~mattil@d4mf8sfn-32kjt0wmcf-4.rev.dnainternet.fi) (Remote host closed the connection)
[10:23:07] *** Joins: mattil (~mattil@d4mf8sfn-32kjt0wmcf-4.rev.dnainternet.fi)
[10:24:06] *** Quits: Su-Shee (~Susanne@i5E8613B5.versanet.de) (Ping timeout: 272 seconds)
[10:24:25] *** Joins: Su-Shee (~Susanne@84-109-142-46.pool.kielnet.net)
[10:27:44] *** Quits: mattil (~mattil@d4mf8sfn-32kjt0wmcf-4.rev.dnainternet.fi) (Ping timeout: 250 seconds)
[10:29:04] *** Joins: manti7 (~manti7@176.10.104.94)
[10:31:12] *** Joins: mattil (~mattil@d4mf8sfn-32kjt0wmcf-4.rev.dnainternet.fi)
[10:32:09] *** Quits: manti7 (~manti7@176.10.104.94) (Read error: Connection reset by peer)
[10:33:25] *** Quits: tc__ (~tc@103-140-203-11.vic.as139284.net.au) (Remote host closed the connection)
[10:33:48] *** Joins: tc__ (~tc@103-140-203-11.vic.as139284.net.au)
[10:33:51] *** Quits: mattil (~mattil@d4mf8sfn-32kjt0wmcf-4.rev.dnainternet.fi) (Remote host closed the connection)
[10:34:19] *** Joins: mattil (~mattil@d4mf8sfn-32kjt0wmcf-4.rev.dnainternet.fi)
[10:36:29] *** Joins: mrwick (~mrwick@user/mrwick)
[10:36:48] *** Joins: manti7 (~manti7@176.10.104.94)
[10:37:25] *** Joins: austb_ (~austb@c-73-240-245-80.hsd1.or.comcast.net)
[10:38:34] *** Quits: mattil (~mattil@d4mf8sfn-32kjt0wmcf-4.rev.dnainternet.fi) (Ping timeout: 250 seconds)
[10:41:58] *** Quits: austb_ (~austb@c-73-240-245-80.hsd1.or.comcast.net) (Ping timeout: 256 seconds)
[10:44:28] *** Joins: the_lanetly_052 (~the_lanet@185.30.90.65)
[10:44:28] *** Joins: mattil (~mattil@d4mf8sfn-32kjt0wmcf-4.rev.dnainternet.fi)
[10:45:43] *** Joins: gleu (~guillaume@2a01cb0c0e54b8007e39e75cb4390e1c.ipv6.abo.wanadoo.fr)
[10:49:26] *** Joins: nulixes (~Thunderbi@gateway/vpn/pia/nulixes)
[10:53:52] *** Joins: austb_ (~austb@c-73-240-245-80.hsd1.or.comcast.net)
[10:54:35] *** Joins: nulixes1 (~Thunderbi@gateway/vpn/pia/nulixes)
[10:57:02] *** Quits: nulixes (~Thunderbi@gateway/vpn/pia/nulixes) (Ping timeout: 272 seconds)
[10:57:03] *** nulixes1 is now known as nulixes
[10:57:41] *** Quits: simplicity (~yti@user/simplicity) (Remote host closed the connection)
[10:58:02] *** Quits: mattil (~mattil@d4mf8sfn-32kjt0wmcf-4.rev.dnainternet.fi) (Ping timeout: 260 seconds)
[10:58:56] *** Quits: austb_ (~austb@c-73-240-245-80.hsd1.or.comcast.net) (Ping timeout: 272 seconds)
[11:03:36] *** Quits: Guest87 (~Guest87@202-90-244-107.ca5af4.per.static.aussiebb.net) (Quit: Client closed)
[11:03:40] *** Joins: simplicity (~yti@user/simplicity)
[11:12:00] *** Quits: tehenderz (~tehenderz@ti0018a400-2588.bb.online.no) (Ping timeout: 256 seconds)
[11:12:17] *** Joins: tehenderz (~tehenderz@ti0018a400-3164.bb.online.no)
[11:14:31] *** Joins: mattil (~mattil@helsinki.portalify.com)
[11:14:48] *** Quits: mattil (~mattil@helsinki.portalify.com) (Remote host closed the connection)
[11:14:49] *** Joins: aremaref (~aremaref@107-198-1-161.lightspeed.irvnca.sbcglobal.net)
[11:15:05] *** Quits: shangxiao (~davids@pa49-183-51-109.pa.vic.optusnet.com.au) (Ping timeout: 256 seconds)
[11:15:42] *** Joins: mattil (~mattil@helsinki.portalify.com)
[11:17:14] *** Joins: ponsfrilus1 (~Thunderbi@vpn-253-045.epfl.ch)
[11:18:48] *** Quits: ponsfrilus (~Thunderbi@adsl-178-39-226-100.adslplus.ch) (Ping timeout: 256 seconds)
[11:18:49] *** ponsfrilus1 is now known as ponsfrilus
[11:19:22] *** Quits: EvanCarroll (~ecarroll@68-78-105-35.lightspeed.hstntx.sbcglobal.net) (Ping timeout: 256 seconds)
[11:20:23] *** Joins: mncheck (~mncheck@193.224.205.254)
[11:20:25] *** Joins: mncheckm (~mncheck@193.224.205.254)
[11:23:05] *** Quits: henrydance (~henrydanc@static-n49-176-146-220.meb4.vic.optusnet.com.au) ()
[11:23:48] *** Quits: mattil (~mattil@helsinki.portalify.com) (Ping timeout: 240 seconds)
[11:24:58] *** Joins: palasso (~palasso@user/palasso)
[11:25:11] *** Joins: austb_ (~austb@c-73-240-245-80.hsd1.or.comcast.net)
[11:25:26] *** Quits: mncheck (~mncheck@193.224.205.254) (Quit: Leaving)
[11:25:32] *** Joins: alguien (~alguien@user/alguien)
[11:25:34] *** Joins: mncheck (~mncheck@193.224.205.254)
[11:27:04] *** Joins: rhagu (~rhagu@2001:16b8:e387:9d00:7211:b47:3295:34e4)
[11:28:36] *** Quits: Su-Shee (~Susanne@84-109-142-46.pool.kielnet.net) (Ping timeout: 240 seconds)
[11:29:33] <rhagu> Hi, I just got feedback from someone running explain analyze on a database and it says: "Execution Time: 1336.323 ms". I am from germany so I am used to a decimal comma, not a decimal point: the output I am seeing needs to be read as a decimal point, right? This would be 1.3 seconds right?
[11:29:37] *** Quits: austb_ (~austb@c-73-240-245-80.hsd1.or.comcast.net) (Ping timeout: 240 seconds)
[11:30:14] <selckin> yes
[11:30:22] <rhagu> thank you
[11:30:30] *** Joins: Su-Shee (~Susanne@145-108-142-46.pool.kielnet.net)
[11:34:40] *** Quits: fcr (~fran@r167-60-1-103.dialup.adsl.anteldata.net.uy) (Ping timeout: 256 seconds)
[11:37:24] *** Joins: mattil (~mattil@helsinki.portalify.com)
[11:37:41] *** Quits: shored1 (~shored@user/shored) (Ping timeout: 252 seconds)
[11:38:13] *** Quits: tc__ (~tc@103-140-203-11.vic.as139284.net.au) (Remote host closed the connection)
[11:38:38] *** Joins: tc__ (~tc@103-140-203-11.vic.as139284.net.au)
[11:38:50] *** Quits: aLeSD (~aLeSD@139.47.114.114) (Ping timeout: 272 seconds)
[11:39:17] *** Joins: op2 (~op2@user/op2)
[11:40:32] *** Quits: sliss (~sliss@109.136.165.60) (Quit: sliss)
[11:41:00] *** Joins: fcr (~fran@r167-60-60-36.dialup.adsl.anteldata.net.uy)
[11:41:28] *** Joins: austb_ (~austb@c-73-240-245-80.hsd1.or.comcast.net)
[11:45:19] *** Quits: SwK__ (~SwK_@45.18.197.35) (Read error: Connection reset by peer)
[11:46:15] *** Quits: austb_ (~austb@c-73-240-245-80.hsd1.or.comcast.net) (Ping timeout: 256 seconds)
[11:48:44] *** Quits: SAS (~SAS@mail.loxodata.com) (Quit: ZNC - http://znc.sourceforge.net)
[11:49:34] *** Quits: mattil (~mattil@helsinki.portalify.com) (Remote host closed the connection)
[11:50:31] *** Joins: mattil (~mattil@helsinki.portalify.com)
[11:51:06] *** Quits: rodo (~rodo@2a01:e0a:2c6:d5f0:36a8:8001:b781:a63e) (Ping timeout: 268 seconds)
[11:51:18] <depesz> maret: simple thing: don't order by id.
[11:51:37] <depesz> maret: order by address, id, and your query will be faster.
[11:51:59] <depesz> or not, sorry. i misread. you're locking 190k rows?!
[11:52:07] *** Joins: aLeSD (~aLeSD@91.126.33.194)
[11:52:30] <maret> in this case yes, could more or less in other cases
[11:53:04] <maret> but afaik locking isnt the slowest part
[11:53:24] <depesz> yeah. i thought that you're limiting, and it's locking.
[11:54:01] <depesz> for getting that many rows, to make it faster, you will have to either partition the table, or just use faster hardware
[11:54:14] *** Joins: cerill (~cerill@h-155-4-198-153.A785.priv.bahnhof.se)
[11:54:18] <depesz> you could consider adding index on (address, id), and try to make use index only scans.
[11:54:27] <depesz> but if the table changes a lot, it will be hard.
[11:54:39] <cerill> Hi, beginner question: Is it possible to do ON CONFLICT on an entire jsonb object?
[11:55:37] *** Quits: sebastorama (~sebastora@104.131.87.249) (Quit: ZNC 1.7.5+deb4 - https://znc.in)
[11:55:53] *** Joins: justAstache4 (~justache@user/justache)
[11:55:54] *** Joins: sebastorama (~sebastora@104.131.87.249)
[11:56:32] <Berge> cerill: On a _row_
[11:56:40] <Berge> And a row can have jsonb columns
[11:56:57] <Berge> (Or strictly speaking on an UPDATE or INSERT statement that touches one or more rows.)
[11:57:07] <cerill> Berge: Yeah that is what I mean. If I can do ON CONFLICT (jsonb column)
[11:57:20] *** Quits: justAstache (~justache@user/justache) (Ping timeout: 256 seconds)
[11:57:21] *** justAstache4 is now known as justAstache
[11:57:23] <Berge> cerill: Ah, right – you can use any column with a data type that's sortable
[11:57:26] <maret> depesz it already is index only scan no?
[11:57:37] <Berge> Which I actually don't know if jsonb is
[11:57:53] <depesz> maret: no, it's index scan. not index only scan
[11:58:03] <Berge> ah, it is
[11:58:21] <Berge> cerill: What do you want to achieve?
[11:58:35] <Berge> Comparing JSON document is surprisingly non-trivial, and generally should be avoided
[11:58:56] <Berge> Just a quick glance at the myriads of ways javascript programmers try to compare them should give anyone pause
[11:59:06] *** Quits: mattil (~mattil@helsinki.portalify.com) (Ping timeout: 272 seconds)
[11:59:36] *** Joins: shka (~herr@109.231.3.55)
[11:59:56] *** Joins: zer0bitz (~zer0bitz@dsl-hkibng32-54fbf8-224.dhcp.inet.fi)
[12:00:06] *** Joins: dege (~dege@user/dege)
[12:00:13] <cerill> I have a table where I want to insert data with timestamp and a jsonb metadata column. If metadata with the exact same value already exists I just want to update the timestamp, otherwise make a new entry
[12:00:27] <Berge> cerill: Define value
[12:01:13] <cerill> {"a": 1, "b": False, "c": "value"}
[12:01:18] *** Quits: aremaref (~aremaref@107-198-1-161.lightspeed.irvnca.sbcglobal.net) (Ping timeout: 256 seconds)
[12:01:39] <cerill> so that entire object needs to match
[12:01:57] *** Joins: shored (~shored@user/shored)
[12:02:00] <Berge> First of all, consider not using JSON
[12:02:03] <cerill> If its not possible I will have to do something else
[12:02:15] <Berge> Secondly, what if it's a 100MB JSON document with arrays and nested things and whatnot?
[12:02:31] *** Joins: rodo (~rodo@2a01:e0a:2c6:d5f0:2b7d:a0dc:7c86:a1)
[12:02:31] *** Quits: shiranaihito (~textual@123-192-192-149.dynamic.kbronet.com.tw) (Quit: My MacBook Air has gone to sleep. ZZZzzz…)
[12:02:32] <Berge> If a key-value-store is what you actually want, consider hstore
[12:02:34] *** Joins: mattil (~mattil@helsinki.portalify.com)
[12:02:36] <sekun[m]> hey all. i'm trying to test a role's lack of permissions with `pgtap`. i checked their docs and there is no equivalent for something like `schema_privs_arent`, where i can guarantee that a role doesn't have certain permissions. i also checked that there's nothing i can use to pass a "failed" test that i expect to fail. how should i work around this?
[12:03:57] <Berge> sekun[m]: ASSERT and has_table_privilege(), for instance?
[12:04:33] <Berge> Or, do you need it to throw an error?
[12:04:41] *** Joins: ekathva (~ekathva@93-90-58-246.welcomnet.fi)
[12:04:52] *** Quits: shored (~shored@user/shored) (Client Quit)
[12:05:08] *** Joins: shored (~shored@user/shored)
[12:05:51] *** Quits: podverse-mitch (~podverse-@c-73-176-137-149.hsd1.il.comcast.net) (Remote host closed the connection)
[12:05:52] *** Joins: rendar (~rendar@user/rendar)
[12:06:11] *** Joins: podverse-mitch (~podverse-@c-73-176-137-149.hsd1.il.comcast.net)
[12:06:27] *** Joins: zer0bitz_ (~zer0bitz@dsl-hkibng32-54fbf8-224.dhcp.inet.fi)
[12:08:16] *** Joins: zer0bitz__ (~zer0bitz@dsl-hkibng32-54fbf8-224.dhcp.inet.fi)
[12:10:00] *** Quits: zer0bitz (~zer0bitz@dsl-hkibng32-54fbf8-224.dhcp.inet.fi) (Ping timeout: 250 seconds)
[12:10:31] *** Quits: ur5us (~ur5us@122-56-203-167.mobile.spark.co.nz) (Read error: Connection reset by peer)
[12:11:44] *** Quits: zer0bitz_ (~zer0bitz@dsl-hkibng32-54fbf8-224.dhcp.inet.fi) (Ping timeout: 250 seconds)
[12:12:34] *** Quits: kyshoc (~kyshoc@user/kyshoc) (Quit: ZNC 1.8.2 - https://znc.in)
[12:12:49] *** Joins: kyshoc (~kyshoc@adsl-99-93-208-248.dsl.mtry01.sbcglobal.net)
[12:12:49] *** Quits: kyshoc (~kyshoc@adsl-99-93-208-248.dsl.mtry01.sbcglobal.net) (Changing host)
[12:12:49] *** Joins: kyshoc (~kyshoc@user/kyshoc)
[12:12:49] *** Joins: austb_ (~austb@c-73-240-245-80.hsd1.or.comcast.net)
[12:15:09] *** Quits: the_lanetly_052 (~the_lanet@185.30.90.65) (Ping timeout: 256 seconds)
[12:15:45] *** Joins: zer0bitz (~zer0bitz@dsl-hkibng32-54fbf8-224.dhcp.inet.fi)
[12:16:04] *** Quits: zer0bitz__ (~zer0bitz@dsl-hkibng32-54fbf8-224.dhcp.inet.fi) (Ping timeout: 250 seconds)
[12:16:51] *** Quits: concrete-houses (~g@209.6.150.53) (Ping timeout: 256 seconds)
[12:17:24] *** Quits: austb_ (~austb@c-73-240-245-80.hsd1.or.comcast.net) (Ping timeout: 240 seconds)
[12:17:40] *** Joins: zer0bitz_ (~zer0bitz@dsl-hkibng32-54fbf8-224.dhcp.inet.fi)
[12:18:23] *** Joins: concrete-houses (~g@209.6.150.53)
[12:19:06] *** Joins: zer0bitz__ (~zer0bitz@dsl-hkibng32-54fbf8-224.dhcp.inet.fi)
[12:19:43] *** Joins: jpa (~jpa@2a01:e0a:5cb:6b80:9dd8:d715:f031:d21c)
[12:19:54] *** Joins: Auron (Auron956@user/auron)
[12:21:01] *** Quits: zer0bitz (~zer0bitz@dsl-hkibng32-54fbf8-224.dhcp.inet.fi) (Ping timeout: 240 seconds)
[12:22:28] *** Joins: shiranaihito (~textual@1.200.9.21)
[12:22:30] *** Joins: zer0bitz (~zer0bitz@dsl-hkibng32-54fbf8-224.dhcp.inet.fi)
[12:22:37] *** Quits: zer0bitz_ (~zer0bitz@dsl-hkibng32-54fbf8-224.dhcp.inet.fi) (Ping timeout: 240 seconds)
[12:25:49] *** Quits: zer0bitz__ (~zer0bitz@dsl-hkibng32-54fbf8-224.dhcp.inet.fi) (Ping timeout: 240 seconds)
[12:27:12] *** Quits: zer0bitz (~zer0bitz@dsl-hkibng32-54fbf8-224.dhcp.inet.fi) (Ping timeout: 252 seconds)
[12:28:09] <mbanck> magnush: maybe https://2022.nordicpgday.org/covid-info/ could be updated, e.g. to mention whether masks (and which type) are required during the event; it's probably obvious for locals but worldwide the mask mandates are so different nowadays that it would avoid confusion IMO
[12:35:12] *** Quits: zelest (jesper@81-233-184-27-no13.tbcn.telia.com) (Quit: If you wake up in a house that's full of smoke, don't panic! Call me and I'll tell you a joke!)
[12:37:11] *** Joins: Rashad (~textual@2a01:9700:1aac:7d00:8dc3:4a35:f79f:3415)
[12:43:00] *** Quits: ekathva (~ekathva@93-90-58-246.welcomnet.fi) (Read error: Connection reset by peer)
[12:45:53] *** Joins: ekathva (~ekathva@93-90-58-246.welcomnet.fi)
[12:50:00] *** Joins: GNUmoon (~GNUmoon@gateway/tor-sasl/gnumoon)
[12:50:22] *** Quits: rhagu (~rhagu@2001:16b8:e387:9d00:7211:b47:3295:34e4) (Quit: Leaving)
[12:50:36] *** Quits: iliv (~iliv@93-77-147-152.lvv.volia.net) (Ping timeout: 256 seconds)
[12:51:02] *** Quits: martti (~martti@46-126-48-136.dynamic.hispeed.ch) (Remote host closed the connection)
[12:51:34] *** Joins: richard_h (~richard@2406:e001:8:a900:6e62:6dff:fe05:ae29)
[12:57:18] *** Quits: shiranaihito (~textual@1.200.9.21) (Quit: My MacBook Air has gone to sleep. ZZZzzz…)
[12:59:37] *** Joins: michalz (~michalz@185.246.204.93)
[13:00:23] *** Quits: tc__ (~tc@103-140-203-11.vic.as139284.net.au) (Remote host closed the connection)
[13:00:47] *** Joins: tc__ (~tc@103-140-203-11.vic.as139284.net.au)
[13:03:20] *** Joins: maxzor (~maxzor@2a01cb04054faa003d7c55d0ea19255d.ipv6.abo.wanadoo.fr)
[13:06:18] *** Joins: shiranaihito (~textual@1.200.9.21)
[13:08:54] <dege> mbanck: it's in the process of being updated to match local regulations and mandates
[13:09:28] *** Joins: DNH (~DNH@2a02:8108:1100:16d8:844b:b51a:d0ea:add8)
[13:10:52] *** Joins: shangxiao (~davids@101.165.217.11)
[13:12:45] *** Quits: jazzy (~jaziz@user/jaziz) (Quit: Beddie bye-bye)
[13:12:46] *** Quits: Nyakajima (~Hayate@lunaluna.nyakajima.net) (Remote host closed the connection)
[13:14:10] *** Joins: Nyakajima (~Hayate@lunaluna.nyakajima.net)
[13:15:02] *** Quits: shangxiao (~davids@101.165.217.11) (Ping timeout: 240 seconds)
[13:21:35] *** Joins: robins (~robin@25.51-174-133.customer.lyse.net)
[13:22:12] *** Quits: robinsmidsrod (~robin@25.51-174-133.customer.lyse.net) (Ping timeout: 240 seconds)
[13:26:56] <mbanck> dege: cool, thanks
[13:30:32] *** Quits: marcel (~marcel@user/marcel) (Quit: The Lounge - https://thelounge.chat)
[13:30:52] *** Joins: marcel (~marcel@user/marcel)
[13:34:47] *** Joins: iliv (~iliv@93-77-147-152.lvv.volia.net)
[13:36:07] *** Quits: iliv (~iliv@93-77-147-152.lvv.volia.net) (Changing host)
[13:36:07] *** Joins: iliv (~iliv@user/iliv)
[13:41:31] *** Joins: irionr (~irionr@net-93-145-27-202.cust.vodafonedsl.it)
[13:43:25] *** Quits: nikow (~nikow@99.ip-217-182-76.eu) (Quit: WeeChat 3.0)
[13:43:32] *** Joins: nikow (~nikow@99.ip-217-182-76.eu)
[13:48:20] *** Joins: ivii (~ivan@user/ivii)
[13:51:36] <maret> depesz I was thinking about it and there are few options I was thinking about 1. Look at indexes right now I have UNIQUE index on address column which might not be ideal 2. Change type of a column I am using varchar 256 eventough the addresses is never longer than 50 chars +- 3 and this will be probably best store whole table in memory for reading
[13:53:24] <Myon> if you have a UNIQUE index on it, yes
[13:53:40] <Myon> (err I was stuck in scrollback)
[13:56:22] *** Joins: shangxiao (~davids@101.165.217.11)
[13:56:32] *** Quits: xocolatl (~xocolatl@193.32.126.231) (Ping timeout: 240 seconds)
[13:57:50] *** Joins: aremaref (~aremaref@107-198-1-161.lightspeed.irvnca.sbcglobal.net)
[13:58:10] *** Joins: xocolatl (~xocolatl@14.149.88.79.rev.sfr.net)
[13:59:08] <maret> Myon sorr if I have unique index than what?
[13:59:54] <maret> to be fair even with that I am not sure that it would help that much and seems like I need some better optimization and given my limited experience with databases in memory something like redis or maybe something bit more effective seems like easiest solution
[14:00:03] *** Joins: Vitto (~Vitto@se-14.nat.univ-paris4.fr)
[14:00:36] *** Quits: shangxiao (~davids@101.165.217.11) (Ping timeout: 240 seconds)
[14:00:44] <Myon> maret: that wasn't for you, sorry
[14:01:09] <maret> ou ok :)
[14:02:12] *** Quits: aremaref (~aremaref@107-198-1-161.lightspeed.irvnca.sbcglobal.net) (Ping timeout: 240 seconds)
[14:11:09] *** Quits: xocolatl (~xocolatl@14.149.88.79.rev.sfr.net) (Ping timeout: 252 seconds)
[14:11:19] *** Quits: veesh (~veesh@89.237.96.175) (Ping timeout: 256 seconds)
[14:12:10] *** Joins: xocolatl (~xocolatl@193.32.126.219)
[14:15:24] *** Quits: ponsfrilus (~Thunderbi@vpn-253-045.epfl.ch) (Quit: ponsfrilus)
[14:15:51] *** Quits: cerill (~cerill@h-155-4-198-153.A785.priv.bahnhof.se) (Ping timeout: 256 seconds)
[14:17:52] *** Quits: ekathva (~ekathva@93-90-58-246.welcomnet.fi) (Ping timeout: 256 seconds)
[14:18:20] <Bilge> Does pg have any provision for self-expiring rows or is Redis more suited for that kind of thing?
[14:18:24] *** Quits: shiranaihito (~textual@1.200.9.21) (Quit: My MacBook Air has gone to sleep. ZZZzzz…)
[14:18:26] <Bilge> i.e. TTL
[14:18:42] <Myon> no, you need to run DELETE commands
[14:19:30] <Myon> (unless you consider a VIEW that has some "where visible_until >= now()" condition
[14:21:02] *** Quits: zauberfisch (~Zauberfis@cm147-42.liwest.at) (Ping timeout: 240 seconds)
[14:26:19] *** Joins: awmv (~awmv@mob-194-230-148-95.cgn.sunrise.net)
[14:40:30] *** Quits: econo (uid147250@user/econo) (Quit: Connection closed for inactivity)
[14:41:13] *** Joins: Klinda (~superleag@user/klinda)
[14:46:14] <Bilge> It's a clever idea but requires a ton more work than just installing Redis heh
[14:50:05] *** Joins: shiranaihito (~textual@125-228-188-231.hinet-ip.hinet.net)
[14:51:51] *** Quits: awmv (~awmv@mob-194-230-148-95.cgn.sunrise.net) (Ping timeout: 252 seconds)
[14:54:50] *** Joins: irionr59 (~irionr@net-93-145-27-202.cust.vodafonedsl.it)
[14:55:13] *** Quits: irionr59 (~irionr@net-93-145-27-202.cust.vodafonedsl.it) (Client Quit)
[14:57:42] *** Quits: nyov (~nyov@user/nyov) (Ping timeout: 272 seconds)
[14:59:00] *** Joins: nyov (~nyov@user/nyov)
[14:59:35] <dim> hi friends
[15:00:01] <dim> Myon: I just pushed the tag/release of pgcopydb 0.5 with the fixes for the bug we found earlier this week in 0.4
[15:00:20] <Myon> just saw the mail, ack
[15:00:35] <dim> https://github.com/dimitri/pgcopydb/releases/tag/v0.5
[15:00:52] <dim> awesome ;-)
[15:02:32] *** Quits: acidsys (~LSD@2a03:4000:55:d20::3) (Excess Flood)
[15:03:03] *** Joins: acidsys (~LSD@2a03:4000:55:d20::3)
[15:08:57] *** Quits: szkl (uid110435@id-110435.uxbridge.irccloud.com) (Quit: Connection closed for inactivity)
[15:10:17] *** Joins: zauberfisch (~Zauberfis@cm147-42.liwest.at)
[15:21:08] <Myon> dim: done, that worked smoothly
[15:21:25] <dim> thank you so much Myon, you're doing magic there ;-)
[15:21:40] *** Joins: ekathva (~ekathva@n14jpjdc5hpackvwy-1.v6.elisa-mobile.fi)
[15:27:10] *** Quits: shored (~shored@user/shored) (Ping timeout: 250 seconds)
[15:30:37] *** Joins: n0fun_ (~jack@i577BC055.versanet.de)
[15:30:50] *** Joins: shangxiao (~davids@101.165.217.11)
[15:32:59] *** Joins: zeden (~zeden@user/zeden)
[15:33:29] *** Joins: awmv (~awmv@mob-194-230-148-95.cgn.sunrise.net)
[15:34:08] *** Joins: pedja (~pedja@user/deus-ex/x-7934090)
[15:35:42] *** Quits: shangxiao (~davids@101.165.217.11) (Ping timeout: 272 seconds)
[15:36:13] *** Joins: ekathva_ (~ekathva@85-76-69-127-nat.elisa-mobile.fi)
[15:36:47] *** Quits: awmv (~awmv@mob-194-230-148-95.cgn.sunrise.net) (Read error: Connection reset by peer)
[15:36:57] *** Quits: ekathva (~ekathva@n14jpjdc5hpackvwy-1.v6.elisa-mobile.fi) (Ping timeout: 240 seconds)
[15:36:58] *** Joins: shored (~shored@user/shored)
[15:39:27] *** Quits: rvalue (~rvalue@user/rvalue) (Remote host closed the connection)
[15:41:17] *** Joins: rvalue (~rvalue@user/rvalue)
[15:46:32] *** Quits: fraxamo (~fraxamo@bexl-11-b2-v4wan-163006-cust259.vm4.cable.virginm.net) (Quit: Leaving)
[15:47:21] *** Joins: l1m4r (~l1m4r@dslb-084-063-242-231.084.063.pools.vodafone-ip.de)
[15:47:39] <l1m4r> Kobaz: hey
[15:49:33] <Myon> l1m4r: ask the channel, not individuals, and ask concrete questions
[15:49:51] <l1m4r> figured out about the json parsing from yesterday
[15:53:09] *** Quits: tc__ (~tc@103-140-203-11.vic.as139284.net.au) (Remote host closed the connection)
[15:53:33] *** Joins: tc__ (~tc@103-140-203-11.vic.as139284.net.au)
[16:01:19] *** Joins: dupondje (~dupondje@artemis.dupie.be)
[16:02:04] *** Quits: richard_h (~richard@2406:e001:8:a900:6e62:6dff:fe05:ae29) (Quit: Leaving.)
[16:02:25] *** Joins: jpaa (~jpaa@161.97.129.36)
[16:03:04] *** Joins: ovnicraft (~ovnicraft@corp-179-49-44-28.uio.puntonet.ec)
[16:03:48] *** Quits: ovnicraft (~ovnicraft@corp-179-49-44-28.uio.puntonet.ec) (Client Quit)
[16:04:15] *** Joins: darkbit (~db@136.158.8.67)
[16:11:47] *** Joins: MrZeus (~MrZeus@86.106.136.215)
[16:14:58] *** Quits: Su-Shee (~Susanne@145-108-142-46.pool.kielnet.net) (Ping timeout: 272 seconds)
[16:16:10] *** Joins: Su-Shee (~Susanne@176-125-142-46.pool.kielnet.net)
[16:18:01] *** Joins: ovnicraft (~ovnicraft@corp-179-49-44-28.uio.puntonet.ec)
[16:18:04] *** Quits: DNH (~DNH@2a02:8108:1100:16d8:844b:b51a:d0ea:add8) (Quit: My MacBook has gone to sleep. ZZZzzz…)
[16:18:50] *** Joins: DNH (~DNH@2a02:8108:1100:16d8:844b:b51a:d0ea:add8)
[16:19:21] *** Quits: ovnicraft (~ovnicraft@corp-179-49-44-28.uio.puntonet.ec) (Client Quit)
[16:19:42] *** Quits: Haudegen (~quassel@178.115.237.87.static.drei.at) (Quit: Bin weg.)
[16:20:29] *** Joins: ovnicraft (~ovnicraft@ftth-179-49-44-28.cue.celerity.ec)
[16:21:15] *** Joins: mowcat (~mowcat@2a00:23c5:d190:1901:f22f:74ff:fe77:1e1c)
[16:24:21] *** Quits: l1m4r (~l1m4r@dslb-084-063-242-231.084.063.pools.vodafone-ip.de) (Quit: Connection closed)
[16:25:37] *** Joins: rando25892 (~homefame@user/rando25892)
[16:26:23] *** Joins: awmv (~awmv@mob-194-230-148-95.cgn.sunrise.net)
[16:27:39] *** Quits: awmv (~awmv@mob-194-230-148-95.cgn.sunrise.net) (Client Quit)
[16:27:48] *** Quits: mncheckm (~mncheck@193.224.205.254) (Ping timeout: 240 seconds)
[16:28:12] *** Quits: mncheck (~mncheck@193.224.205.254) (Ping timeout: 256 seconds)
[16:33:32] *** Joins: varioust (~varioust@gateway/tor-sasl/varioust)
[16:38:03] *** Quits: mowcat (~mowcat@2a00:23c5:d190:1901:f22f:74ff:fe77:1e1c) (Remote host closed the connection)
[16:39:27] *** Joins: Guest14 (~Guest14@net-93-145-27-202.cust.vodafonedsl.it)
[16:40:44] *** Quits: irionr (~irionr@net-93-145-27-202.cust.vodafonedsl.it) (Quit: Client closed)
[16:41:03] *** Quits: peerce (mudshark@2601:647:c980:247:45a1:6404:aaac:25e7) ()
[16:41:17] *** Joins: zumba_addict (~zumba_add@c-71-194-58-34.hsd1.il.comcast.net)
[16:42:12] *** Joins: MrZeus_ (~MrZeus@89.238.143.231)
[16:42:59] *** Joins: sakasama (~sakasama@user/sakasama)
[16:44:19] *** Joins: fandre1986 (~fandre198@62.67.214.101)
[16:45:27] *** Quits: MrZeus (~MrZeus@86.106.136.215) (Ping timeout: 256 seconds)
[16:45:35] *** Quits: varioust (~varioust@gateway/tor-sasl/varioust) (Ping timeout: 240 seconds)
[16:45:38] *** robins is now known as robinsmidsrod
[16:48:17] *** Joins: psoo (~psoo@dslb-002-202-190-148.002.202.pools.vodafone-ip.de)
[16:49:19] *** Quits: mattil (~mattil@helsinki.portalify.com) (Remote host closed the connection)
[16:50:12] *** Joins: mattil (~mattil@helsinki.portalify.com)
[16:50:13] *** Quits: mattil (~mattil@helsinki.portalify.com) (Read error: Connection reset by peer)
[16:51:32] *** Joins: mncheckm (~mncheck@193.224.205.254)
[16:51:34] *** Joins: mncheck (~mncheck@193.224.205.254)
[16:52:39] *** Joins: zer0bitz (~zer0bitz@dsl-hkibng32-54fbf8-224.dhcp.inet.fi)
[16:54:44] *** Joins: mattil (~mattil@d4mf8rlkj4sq2r6wt0k-4.rev.dnainternet.fi)
[16:54:44] *** Quits: sakasama (~sakasama@user/sakasama) (Read error: Connection reset by peer)
[16:57:33] *** Joins: aremaref (~aremaref@107-198-1-161.lightspeed.irvnca.sbcglobal.net)
[16:59:58] *** Joins: kakashiA1 (~kakashi@105.154.2.98)
[17:02:12] *** Quits: aremaref (~aremaref@107-198-1-161.lightspeed.irvnca.sbcglobal.net) (Ping timeout: 256 seconds)
[17:10:44] *** Joins: james_lavin (~jameslavi@ool-457981b2.dyn.optonline.net)
[17:12:20] *** Quits: zeden (~zeden@user/zeden) (Remote host closed the connection)
[17:15:07] *** Joins: shangxiao (~davids@101.165.217.11)
[17:20:12] *** Quits: shangxiao (~davids@101.165.217.11) (Ping timeout: 272 seconds)
[17:24:13] *** Quits: marcel (~marcel@user/marcel) (Quit: The Lounge - https://thelounge.chat)
[17:25:24] *** Joins: marcel (~marcel@user/marcel)
[17:27:42] *** Joins: awmv (~awmv@mob-194-230-148-95.cgn.sunrise.net)
[17:29:11] *** Parts: strk (~strk@user/strk) (WeeChat 3.4)
[17:31:27] *** Joins: Haudegen (~quassel@91.114.49.10)
[17:35:02] *** Quits: epony (epony@user/epony) (Ping timeout: 240 seconds)
[17:37:04] *** Joins: mizi (~mizi@user/mizi)
[17:37:18] *** Joins: shiranaihito_ (~textual@123-192-192-149.dynamic.kbronet.com.tw)
[17:39:12] *** Quits: shiranaihito (~textual@125-228-188-231.hinet-ip.hinet.net) (Ping timeout: 272 seconds)
[17:45:37] *** Joins: szkl (uid110435@id-110435.uxbridge.irccloud.com)
[17:47:03] *** Joins: varioust (~varioust@gateway/tor-sasl/varioust)
[17:49:33] *** Joins: rewrit3 (~rewrit3@user/rewrit3)
[18:00:06] *** Joins: AceSlash (~slash@cosium-fo-152-18.fib.nerim.net)
[18:01:11] *** Joins: bigGopher (~dan@207.98.176.66)
[18:03:54] *** Joins: a1fa (~a1fa@user/a1fa)
[18:04:21] <a1fa> hello.. i'd like to do a regex match on two or more spaces, or tabs, i used [ \t]{2,} but this is not returning anything
[18:04:32] *** Quits: Guest14 (~Guest14@net-93-145-27-202.cust.vodafonedsl.it) (Quit: Connection closed)
[18:04:54] <a1fa> but if i do [ \t]{1,} it does select where there is 1 space
[18:05:06] <a1fa> i am trying to do a match on 2+ spaces
[18:05:54] <a1fa> nvm :) looks like it was a single tab
[18:05:58] <a1fa> weird
[18:17:10] *** Quits: mattil (~mattil@d4mf8rlkj4sq2r6wt0k-4.rev.dnainternet.fi) (Remote host closed the connection)
[18:17:37] *** Joins: mattil (~mattil@d4mf8rlkj4sq2r6wt0k-4.rev.dnainternet.fi)
[18:22:05] *** Joins: randir (~randir@93.159.239.42)
[18:22:18] *** Quits: mattil (~mattil@d4mf8rlkj4sq2r6wt0k-4.rev.dnainternet.fi) (Ping timeout: 260 seconds)
[18:22:32] *** Joins: mattil (~mattil@d4mf8svslz3z8zm3c6p-4.rev.dnainternet.fi)
[18:22:40] *** Quits: mattil (~mattil@d4mf8svslz3z8zm3c6p-4.rev.dnainternet.fi) (Remote host closed the connection)
[18:23:06] *** Joins: mattil (~mattil@d4mf8svslz3z8zm3c6p-4.rev.dnainternet.fi)
[18:29:14] *** Joins: gp5st (~gp5st@pool-72-77-44-213.pitbpa.fios.verizon.net)
[18:30:02] *** Quits: uncleyear (~ian@178.176.74.236) (Ping timeout: 256 seconds)
[18:30:39] *** Joins: epony (epony@user/epony)
[18:33:31] *** Joins: mrgz (~mrgz@201-42-0-191.dsl.telesp.net.br)
[18:34:28] *** Quits: randir (~randir@93.159.239.42) (Remote host closed the connection)
[18:35:35] *** Quits: awmv (~awmv@mob-194-230-148-95.cgn.sunrise.net) (Quit: My MacBook has gone to sleep. ZZZzzz…)
[18:36:21] *** Quits: mattil (~mattil@d4mf8svslz3z8zm3c6p-4.rev.dnainternet.fi) (Remote host closed the connection)
[18:36:47] *** Joins: mattil (~mattil@d4mf8svslz3z8zm3c6p-4.rev.dnainternet.fi)
[18:40:21] *** Joins: mowcat (~mowcat@2a00:23c5:d190:1901:f22f:74ff:fe77:1e1c)
[18:41:11] *** Quits: mattil (~mattil@d4mf8svslz3z8zm3c6p-4.rev.dnainternet.fi) (Ping timeout: 245 seconds)
[18:41:43] *** Joins: uncleyear (~ian@178.176.74.236)
[18:42:52] *** Joins: mattil (~mattil@d4mf8sch420l6k5krhk-4.rev.dnainternet.fi)
[18:42:59] *** Quits: mattil (~mattil@d4mf8sch420l6k5krhk-4.rev.dnainternet.fi) (Remote host closed the connection)
[18:43:07] *** Joins: tofran55 (~tofran@bl15-47-228.dsl.telepac.pt)
[18:43:11] *** Joins: mattil (~mattil@87-95-72-7.bb.dnainternet.fi)
[18:43:44] *** Joins: mattil_ (~mattil@d4mf8sch420l6k5krhk-4.rev.dnainternet.fi)
[18:44:46] *** Quits: tofran5 (~tofran@bl15-47-228.dsl.telepac.pt) (Ping timeout: 256 seconds)
[18:44:47] *** tofran55 is now known as tofran5
[18:47:23] *** Quits: fandre1986 (~fandre198@62.67.214.101) (Quit: Connection closed)
[18:47:48] *** Quits: mattil (~mattil@87-95-72-7.bb.dnainternet.fi) (Ping timeout: 252 seconds)
[18:49:14] *** Joins: bsd4me (~usingbsd@user/bsd4me)
[18:54:14] *** Joins: EvanCarroll (~ecarroll@68-78-105-35.lightspeed.hstntx.sbcglobal.net)
[18:54:58] *** Quits: mrwick (~mrwick@user/mrwick) (Ping timeout: 256 seconds)
[18:58:57] *** Joins: Guest14 (~Guest14@net-93-145-27-202.cust.vodafonedsl.it)
[19:03:15] *** Joins: shangxiao (~davids@101.165.217.11)
[19:03:19] *** Quits: mattil_ (~mattil@d4mf8sch420l6k5krhk-4.rev.dnainternet.fi) (Remote host closed the connection)
[19:03:41] *** Joins: mattil (~mattil@d4mf8sch420l6k5krhk-4.rev.dnainternet.fi)
[19:07:36] *** Quits: shangxiao (~davids@101.165.217.11) (Ping timeout: 252 seconds)
[19:08:10] *** Quits: mattil (~mattil@d4mf8sch420l6k5krhk-4.rev.dnainternet.fi) (Ping timeout: 250 seconds)
[19:10:47] *** Joins: hoppity (~hoppity@mobile-166-172-56-167.mycingular.net)
[19:10:47] *** Quits: hoppity (~hoppity@mobile-166-172-56-167.mycingular.net) (Changing host)
[19:10:47] *** Joins: hoppity (~hoppity@user/hoppity)
[19:11:40] *** Quits: hoppity (~hoppity@user/hoppity) (Remote host closed the connection)
[19:11:53] *** Joins: hoppity (~hoppity@mobile-166-172-56-167.mycingular.net)
[19:11:53] *** Quits: hoppity (~hoppity@mobile-166-172-56-167.mycingular.net) (Changing host)
[19:11:53] *** Joins: hoppity (~hoppity@user/hoppity)
[19:13:51] *** Joins: vladoski (~vladoski@93-36-219-239.ip62.fastwebnet.it)
[19:14:34] <vladoski> what's the nicest way to handle a case where I need to query two different tables with the same id?
[19:14:42] <vladoski> is array_agg or something like this useful?
[19:20:52] *** Joins: gareppa (~gareppa@user/gareppa)
[19:21:37] *** Quits: gareppa (~gareppa@user/gareppa) (Remote host closed the connection)
[19:22:43] <kjetilho> sounds more like you want a JOIN to me
[19:23:30] *** Joins: zeden (~zeden@user/zeden)
[19:23:34] *** n_shp is now known as nshp
[19:25:59] *** Quits: gleu (~guillaume@2a01cb0c0e54b8007e39e75cb4390e1c.ipv6.abo.wanadoo.fr) (Quit: Leaving.)
[19:29:42] *** Quits: se-sm-ca (~mottles@user/se-sm-ca) (Quit: WeeChat 2.8)
[19:30:15] *** Joins: john_johnk (~Thunderbi@102.178.207.77.rev.sfr.net)
[19:32:55] <vladoski> kjetilho, yes like a full join
[19:33:10] <vladoski> but I want to keep the data separate
[19:33:50] *** Quits: nulixes (~Thunderbi@gateway/vpn/pia/nulixes) (Ping timeout: 272 seconds)
[19:35:21] <ilmari> vladoski: select … from table1 where id = $1 union all select … from table2 where id = $1;
[19:35:26] <xocolatl> vladoski: can you give some example data and desired result?
[19:35:41] <ilmari> assuming the columns you want from each table are the same type
[19:36:18] <ilmari> if you want to know which table each row came from:  select 'table1' as source, … from table1 where id = $1 union all select 'table2', … from table2 where id = $1;
[19:42:14] *** Quits: ovnicraft (~ovnicraft@ftth-179-49-44-28.cue.celerity.ec) (Quit: My MacBook has gone to sleep. ZZZzzz…)
[19:43:29] *** Joins: vanessa (~farawayas@103.160.128.7)
[19:48:15] *** Quits: varioust (~varioust@gateway/tor-sasl/varioust) (Ping timeout: 240 seconds)
[19:48:44] *** Joins: nulixes (~Thunderbi@gateway/vpn/pia/nulixes)
[19:51:12] *** Joins: ovnicraft (~ovnicraft@ftth-179-49-44-28.cue.celerity.ec)
[19:51:47] *** Joins: varioust (~varioust@gateway/tor-sasl/varioust)
[19:59:14] *** Quits: Guest14 (~Guest14@net-93-145-27-202.cust.vodafonedsl.it) (Quit: Connection closed)
[20:00:17] *** Joins: rpkilby (~rpkilby@c-24-20-208-106.hsd1.or.comcast.net)
[20:01:17] *** Joins: robin44 (~robin44@131.106.25.151)
[20:01:30] *** Quits: bmomjian (~bruce@momjian.us) (Ping timeout: 252 seconds)
[20:01:53] <robin44> is there any way i can order by a json value, but if it doesn't exist, order by something else?
[20:01:55] *** Quits: varioust (~varioust@gateway/tor-sasl/varioust) (Ping timeout: 240 seconds)
[20:01:58] *** Quits: john_johnk (~Thunderbi@102.178.207.77.rev.sfr.net) (Ping timeout: 268 seconds)
[20:02:03] *** Quits: uncleyear (~ian@178.176.74.236) (Ping timeout: 252 seconds)
[20:02:29] <robin44> trying to do something like this: `ORDER BY c.messages->-1->'created_at' DESC, c.created_at DESC;`
[20:04:10] <robin44> basically, i want to sort by result set by a value. each row has a `messages` json field. if that field has any entries, i want the sort value to be the last entry's `created_at` field, otherwise i want that row's sort value to be the `created_at` field
[20:04:46] *** Joins: varioust (~varioust@gateway/tor-sasl/varioust)
[20:04:56] <robin44> something like... `ORDER BY if messages.len > 0 { messages[-1].created_at } else { created_at } DESC`, if that makes sense
[20:05:35] *** Quits: ovnicraft (~ovnicraft@ftth-179-49-44-28.cue.celerity.ec) (Quit: My MacBook has gone to sleep. ZZZzzz…)
[20:05:54] *** Quits: heldchen (~heldchen@user/held) (Ping timeout: 252 seconds)
[20:06:26] *** Quits: vanessa (~farawayas@103.160.128.7) (Remote host closed the connection)
[20:07:00] *** Quits: mncheck (~mncheck@193.224.205.254) (Ping timeout: 252 seconds)
[20:07:00] *** Quits: mncheckm (~mncheck@193.224.205.254) (Ping timeout: 252 seconds)
[20:08:40] *** Joins: uncleyear (~ian@178.176.74.236)
[20:09:45] <xocolatl> order by coalesce(c.messages[1]['created_at'], c.created_at) desc
[20:10:46] <robin44> -1, right? and is there a difference between arrows and dots here? my original uses arrows but yours uses dots i see
[20:12:54] <xocolatl> what?
[20:13:02] <xocolatl> oh, I see
[20:13:05] <xocolatl> yes.  -1
[20:13:27] <xocolatl> I don't know what you mean by dots
[20:13:32] <robin44> oh, not dots. i meant brackets
[20:14:10] <xocolatl> brackets are easier to read, imo
[20:14:24] <robin44> okay so they're functionally the same? seems to be the case in any case
[20:14:31] <xocolatl> yes
[20:14:40] <robin44> i'm getting an error though.. `COALESCE types jsonb and bigint cannot be matched`
[20:14:55] <xocolatl> created_at is a bigint?
[20:14:58] <xocolatl> why?
[20:15:03] <robin44> it's an epoch
[20:15:07] <xocolatl> so?
[20:15:16] <robin44> i do not understand
[20:15:19] <xocolatl> it should still be stored as a timestamptz
[20:15:27] <robin44> oh, i think i see the issue
[20:15:28] <robin44> (it is)
[20:15:32] <xocolatl> anyway, cast the json
[20:15:49] <robin44> yeah, i see the issue now. one moment..
[20:16:11] *** Quits: aLeSD (~aLeSD@91.126.33.194) (Remote host closed the connection)
[20:17:30] <robin44> like this? `COALESCE(c.messages[-1]['created_at']::timestamptz, c.created_at) DESC`
[20:18:01] <robin44> oh wait.. okay nevermind hold on
[20:18:17] <robin44> okay, i got it. thanks!!
[20:18:55] *** Quits: varioust (~varioust@gateway/tor-sasl/varioust) (Ping timeout: 240 seconds)
[20:20:26] *** Joins: ovnicraft (~ovnicraft@corp-179-49-44-28.uio.puntonet.ec)
[20:21:38] *** Quits: Haudegen (~quassel@91.114.49.10) (Quit: Bin weg.)
[20:21:45] *** Joins: heldchen (~heldchen@user/held)
[20:21:57] *** Quits: alguien (~alguien@user/alguien) (Ping timeout: 240 seconds)
[20:22:23] *** Joins: varioust (~varioust@gateway/tor-sasl/varioust)
[20:23:14] *** Quits: Vitto (~Vitto@se-14.nat.univ-paris4.fr) (Ping timeout: 272 seconds)
[20:29:24] *** Parts: jpa (~jpa@2a01:e0a:5cb:6b80:9dd8:d715:f031:d21c) ()
[20:29:49] <depesz> how can I check whether logical replication (subscription) is in "initial sync" or "normally replicating" state?
[20:30:17] *** Joins: pinaraf (~quassel@rock.pinaraf.info)
[20:31:30] *** Quits: maxzor (~maxzor@2a01cb04054faa003d7c55d0ea19255d.ipv6.abo.wanadoo.fr) (Remote host closed the connection)
[20:31:49] *** Joins: maxzor (~maxzor@2a01cb04054faa00c8eb79ca2a44da9c.ipv6.abo.wanadoo.fr)
[20:32:20] *** Quits: DNH (~DNH@2a02:8108:1100:16d8:844b:b51a:d0ea:add8) (Quit: My MacBook has gone to sleep. ZZZzzz…)
[20:33:50] *** Joins: ponsfrilus (~Thunderbi@vpn-253-045.epfl.ch)
[20:35:31] *** Joins: DNH (~DNH@2a02:8108:1100:16d8:844b:b51a:d0ea:add8)
[20:35:42] *** Quits: dege (~dege@user/dege) (Ping timeout: 250 seconds)
[20:36:30] *** Joins: kitsunenokenja (~kitsunech@68.91.220.96)
[20:37:56] *** Quits: ovnicraft (~ovnicraft@corp-179-49-44-28.uio.puntonet.ec) (Quit: My MacBook has gone to sleep. ZZZzzz…)
[20:41:35] *** Quits: varioust (~varioust@gateway/tor-sasl/varioust) (Ping timeout: 240 seconds)
[20:41:41] <depesz> specifically - I made publication with 402 tables. subscribed it. max_sync_workers_per_subscription on both primary and replica is "2". but I see *50* connections in pg_replication_slots. One is named like my subscription, and all the other ones are "pg_NUMBER_synx_NUMBER_NUMBER"
[20:42:08] <dim> I think those names belong to the initial COPY processes, as per docs
[20:42:13] <depesz> https://paste.depesz.com/s/9Le
[20:42:25] <depesz> why are there 50 of them? pg_stat_activity doesn't show *ANY* copy running
[20:43:12] *** Quits: kitsunenokenja (~kitsunech@68.91.220.96) (Ping timeout: 256 seconds)
[20:44:39] <dim> Additional table synchronization slots are normally transient, created internally to perform initial table synchronization and dropped automatically when they are no longer needed. These table synchronization slots have generated names: “pg_%u_sync_%u_%llu” (parameters: Subscription oid, Table relid, system identifier sysid)
[20:44:42] <dim> https://www.postgresql.org/docs/14/logical-replication-subscription.html
[20:45:31] <depesz> Hmmm. ... Ok. This is only 2gb and this sync is already going for like an hour...
[20:45:57] <dim> then although I had to read the full logical rep chapter of the docs not too long ago, it was for writing a tool, not in the context of production usage, so I won't be able to help much beyond sharing those pointers
[20:46:52] <depesz> Will wait and see
[20:51:29] *** Joins: shangxiao (~davids@101.165.217.11)
[20:55:32] *** Quits: ponsfrilus (~Thunderbi@vpn-253-045.epfl.ch) (Ping timeout: 272 seconds)
[20:56:14] *** Quits: shangxiao (~davids@101.165.217.11) (Ping timeout: 256 seconds)
[20:57:52] *** Quits: bsd4me (~usingbsd@user/bsd4me) (Quit: Leaving)
[20:59:03] *** Joins: bsd4me (~usingbsd@user/bsd4me)
[20:59:42] *** Joins: ahmed (~ahmed@user/ahmed)
[21:06:23] *** Quits: epony (epony@user/epony) (Read error: Connection reset by peer)
[21:07:05] *** Joins: epony (epony@user/epony)
[21:11:01] *** Joins: irionr (~irionr@net-93-145-27-202.cust.vodafonedsl.it)
[21:13:48] *** Joins: austb_ (~austb@c-73-240-245-80.hsd1.or.comcast.net)
[21:15:27] *** Quits: irionr (~irionr@net-93-145-27-202.cust.vodafonedsl.it) (Client Quit)
[21:16:15] *** Joins: econo (uid147250@user/econo)
[21:18:58] *** Quits: austb_ (~austb@c-73-240-245-80.hsd1.or.comcast.net) (Ping timeout: 272 seconds)
[21:25:54] *** Quits: ludste_ (~ludste@p200300cc1f1a285fd02aa93c4a58af2e.dip0.t-ipconnect.de) (Quit: Konversation terminated!)
[21:28:12] *** Quits: psoo (~psoo@dslb-002-202-190-148.002.202.pools.vodafone-ip.de) (Ping timeout: 240 seconds)
[21:29:25] *** Joins: awmv (~awmv@mob-194-230-148-95.cgn.sunrise.net)
[21:36:23] *** Joins: SwK (~SwK_@45.18.197.35)
[21:36:24] *** Quits: SwK (~SwK_@45.18.197.35) (Changing host)
[21:36:24] *** Joins: SwK (~SwK_@user/swk)
[21:40:46] *** Quits: qwedfg (~qwedfg@user/qwedfg) (Excess Flood)
[21:42:01] *** Joins: qwedfg (~qwedfg@user/qwedfg)
[21:42:13] *** Quits: AceSlash (~slash@cosium-fo-152-18.fib.nerim.net) (Quit: Leaving)
[21:42:20] *** Joins: Xof (~Xof@157-131-136-66.dedicated.static.sonic.net)
[21:43:46] *** Joins: Aldonius (~Aldonius@wsip-72-203-218-131.oc.oc.cox.net)
[21:43:59] *** Joins: Haudegen (~quassel@178.115.237.87.static.drei.at)
[21:44:04] *** Quits: JanC (~janc@user/janc) (Read error: Connection reset by peer)
[21:44:26] *** Joins: JanC (~janc@user/janc)
[21:45:32] *** Joins: austb_ (~austb@c-73-240-245-80.hsd1.or.comcast.net)
[21:49:28] *** Joins: ovnicraft (~ovnicraft@corp-179-49-44-28.uio.puntonet.ec)
[21:50:04] *** Quits: austb_ (~austb@c-73-240-245-80.hsd1.or.comcast.net) (Ping timeout: 256 seconds)
[21:56:45] *** Quits: Aldonius (~Aldonius@wsip-72-203-218-131.oc.oc.cox.net) (Quit: Client closed)
[22:00:05] *** Joins: bmomjian (~bruce@172.58.204.175)
[22:02:02] *** Joins: austb_ (~austb@c-73-240-245-80.hsd1.or.comcast.net)
[22:02:14] *** Joins: Asgaroth (~Asgaroth@93.107.191.92)
[22:05:12] *** Quits: kakashiA1 (~kakashi@105.154.2.98) (Ping timeout: 272 seconds)
[22:06:18] *** Quits: austb_ (~austb@c-73-240-245-80.hsd1.or.comcast.net) (Ping timeout: 260 seconds)
[22:06:45] *** Quits: darkbit (~db@136.158.8.67) (Ping timeout: 256 seconds)
[22:11:29] *** Quits: vladoski (~vladoski@93-36-219-239.ip62.fastwebnet.it) (Remote host closed the connection)
[22:12:48] *** Quits: fstd (~fstd@xdsl-78-35-88-2.nc.de) (Read error: Connection reset by peer)
[22:12:58] *** Joins: fstd (~fstd@xdsl-78-35-88-2.nc.de)
[22:17:48] *** Joins: gopi_i (~gopi_i@49.37.169.180)
[22:18:47] *** Joins: varioust (~varioust@gateway/tor-sasl/varioust)
[22:20:02] *** Joins: kitsunenokenja (~kitsunech@68.91.220.96)
[22:21:11] *** Quits: gopi_i (~gopi_i@49.37.169.180) (Client Quit)
[22:22:16] *** Joins: aremaref (~aremaref@107-198-1-161.lightspeed.irvnca.sbcglobal.net)
[22:31:24] *** Quits: ovnicraft (~ovnicraft@corp-179-49-44-28.uio.puntonet.ec) (Ping timeout: 240 seconds)
[22:31:48] *** Joins: ekathva__ (~ekathva@mobile-access-b04872-245.dhcp.inet.fi)
[22:33:18] *** Quits: darutoko (~darutoko@5.136.68.159) (Quit: Leaving)
[22:33:18] *** Joins: austb_ (~austb@c-73-240-245-80.hsd1.or.comcast.net)
[22:34:00] *** Joins: ovnicraft (~ovnicraft@corp-179-49-44-28.uio.puntonet.ec)
[22:34:31] *** Quits: ekathva_ (~ekathva@85-76-69-127-nat.elisa-mobile.fi) (Ping timeout: 256 seconds)
[22:34:57] *** Quits: robin44 (~robin44@131.106.25.151) (Quit: Client closed)
[22:38:14] *** Quits: austb_ (~austb@c-73-240-245-80.hsd1.or.comcast.net) (Ping timeout: 252 seconds)
[22:39:41] *** Joins: shangxiao (~davids@101.165.217.11)
[22:41:41] *** Joins: ekathva_ (~ekathva@n14jrd0b036rtepea-1.v6.elisa-mobile.fi)
[22:42:34] *** Joins: xenoterracide (~xenoterra@99-124-139-34.lightspeed.iplsin.sbcglobal.net)
[22:43:48] *** Quits: shangxiao (~davids@101.165.217.11) (Ping timeout: 240 seconds)
[22:44:28] *** Quits: ekathva__ (~ekathva@mobile-access-b04872-245.dhcp.inet.fi) (Ping timeout: 256 seconds)
[22:52:42] *** Quits: bsd4me (~usingbsd@user/bsd4me) (Ping timeout: 272 seconds)
[22:53:55] *** Quits: varioust (~varioust@gateway/tor-sasl/varioust) (Ping timeout: 240 seconds)
[22:56:17] *** Quits: Echoz (~chris@user/echoz) (Ping timeout: 240 seconds)
[22:57:50] *** Quits: ovnicraft (~ovnicraft@corp-179-49-44-28.uio.puntonet.ec) (Quit: My MacBook has gone to sleep. ZZZzzz…)
[22:58:39] *** Joins: Echoz (~chris@user/echoz)
[22:59:08] *** Joins: ovnicraft (~ovnicraft@corp-179-49-44-28.uio.puntonet.ec)
[22:59:57] *** Quits: rpkilby (~rpkilby@c-24-20-208-106.hsd1.or.comcast.net) (Remote host closed the connection)
[23:01:14] *** Joins: rpkilby (~rpkilby@c-24-20-208-106.hsd1.or.comcast.net)
[23:04:52] *** Joins: austb_ (~austb@c-73-240-245-80.hsd1.or.comcast.net)
[23:08:31] *** Quits: ovnicraft (~ovnicraft@corp-179-49-44-28.uio.puntonet.ec) (Quit: My MacBook has gone to sleep. ZZZzzz…)
[23:09:01] *** Joins: varioust (~varioust@gateway/tor-sasl/varioust)
[23:09:39] *** Quits: austb_ (~austb@c-73-240-245-80.hsd1.or.comcast.net) (Ping timeout: 256 seconds)
[23:13:08] *** Joins: bsd4me (~usingbsd@user/bsd4me)
[23:13:56] *** Quits: uncleyear (~ian@178.176.74.236) (Ping timeout: 256 seconds)
[23:14:31] *** Joins: ovnicraft (~ovnicraft@corp-179-49-44-28.uio.puntonet.ec)
[23:15:15] *** Quits: ovnicraft (~ovnicraft@corp-179-49-44-28.uio.puntonet.ec) (Client Quit)
[23:15:38] *** Quits: xenoterracide (~xenoterra@99-124-139-34.lightspeed.iplsin.sbcglobal.net) (Ping timeout: 252 seconds)
[23:16:23] *** Quits: mike-kfed (~htd@095129203062.t4.akis.net) (Read error: Connection reset by peer)
[23:16:48] *** Joins: rufito (~phil@186-79-2-135.baf.movistar.cl)
[23:19:14] *** Quits: awmv (~awmv@mob-194-230-148-95.cgn.sunrise.net) (Quit: My MacBook has gone to sleep. ZZZzzz…)
[23:24:16] *** Joins: mike-kfed (~htd@095129203062.t4.akis.net)
[23:29:51] *** Joins: krismatrix (~krismatri@c-73-212-30-17.hsd1.md.comcast.net)
[23:31:46] *** Joins: awmv (~awmv@mob-194-230-148-95.cgn.sunrise.net)
[23:34:12] *** Quits: podverse-mitch (~podverse-@c-73-176-137-149.hsd1.il.comcast.net) (Remote host closed the connection)
[23:34:12] *** Quits: fcr (~fran@r167-60-60-36.dialup.adsl.anteldata.net.uy) (Read error: Connection reset by peer)
[23:36:02] *** Quits: Junxter (~Junxter@121.237.63.222) (Ping timeout: 256 seconds)
[23:36:37] *** Joins: austb_ (~austb@c-73-240-245-80.hsd1.or.comcast.net)
[23:41:30] *** Quits: austb_ (~austb@c-73-240-245-80.hsd1.or.comcast.net) (Ping timeout: 252 seconds)
[23:44:20] *** Joins: fcr (~fran@r167-60-49-13.dialup.adsl.anteldata.net.uy)
[23:46:15] *** Quits: varioust (~varioust@gateway/tor-sasl/varioust) (Ping timeout: 240 seconds)
[23:46:21] *** Joins: NCS_One (~NCS_One@bl11-90-133.dsl.telepac.pt)
[23:51:10] *** Joins: Knuckles-Omalley (uid200746@id-200746.lymington.irccloud.com)
[23:53:06] <Knuckles-Omalley> Has anyone used crunchydata operator before?  Curious if you don't define pgbouncer or pgpool, if you can still get load balancing in a 1 master 1 replica scenario - ie read operations are done on the replica depending on load
[23:55:16] *** Quits: krismatrix (~krismatri@c-73-212-30-17.hsd1.md.comcast.net) (Quit: Leaving)
[23:55:36] *** Joins: Junxter (~Junxter@121.237.63.222)
