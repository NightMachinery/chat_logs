[00:04:21] *** Quits: byteskeptical (~amnesia@user/byteskeptical) (Remote host closed the connection)
[00:06:21] *** Joins: Leonardzzz (~Administr@114.55.127.80)
[00:06:24] *** Quits: Leonard (~Administr@114.55.127.80) (Read error: Connection reset by peer)
[00:10:41] *** Quits: blyat-73 (~hjgkjhgkj@46.235.96.249) (Ping timeout: 256 seconds)
[00:10:53] *** Joins: byteskeptical (~amnesia@user/byteskeptical)
[00:15:21] *** Joins: Leonard (~Administr@114.55.127.80)
[00:16:21] *** Joins: somlis (~somlis@user/somlis)
[00:17:29] *** Quits: Leonardzzz (~Administr@114.55.127.80) (Ping timeout: 256 seconds)
[00:33:55] *** Quits: ___nick___ (~quassel@cpc68286-cdif17-2-0-cust533.5-1.cable.virginm.net) (Ping timeout: 256 seconds)
[00:36:51] *** Joins: Leonardzzz (~Administr@114.55.127.80)
[00:39:57] *** Quits: Leonard (~Administr@114.55.127.80) (Ping timeout: 240 seconds)
[00:41:03] *** Quits: kali2 (~kali@user/msfninja) (Quit: WeeChat 3.0)
[00:49:38] *** Quits: MetricT (~MetricT@075-131-120-170.res.spectrum.com) (Read error: Connection reset by peer)
[00:53:27] *** Joins: VarunAgw (~VarunAgw@103.158.148.26)
[01:01:46] *** Joins: sdfgsdfg (~sdfgsdfg@user/sdfgsdfg)
[01:05:11] *** Joins: Rutice (~Rutice@216.131.105.51)
[01:06:04] *** Joins: Teth|3 (~kvirc@cpe-71-79-34-84.cinci.res.rr.com)
[01:08:37] *** Quits: Teth (~kvirc@cpe-71-79-34-84.cinci.res.rr.com) (Ping timeout: 240 seconds)
[01:08:40] *** Joins: Leonard (~Administr@114.55.127.80)
[01:09:33] *** Joins: gabriel1 (~gabriel1@user/gabriel1)
[01:11:19] *** Quits: Leonardzzz (~Administr@114.55.127.80) (Ping timeout: 256 seconds)
[01:12:27] *** Quits: VarunAgw (~VarunAgw@103.158.148.26) (Ping timeout: 256 seconds)
[01:24:21] *** Joins: Leonardzzz (~Administr@114.55.127.80)
[01:27:17] *** Quits: Leonard (~Administr@114.55.127.80) (Ping timeout: 240 seconds)
[01:30:20] *** Joins: Leonard (~Administr@114.55.127.80)
[01:32:17] *** Quits: Leonardzzz (~Administr@114.55.127.80) (Ping timeout: 240 seconds)
[01:35:51] *** Joins: Leonardzzz (~Administr@114.55.127.80)
[01:38:57] *** Quits: Leonard (~Administr@114.55.127.80) (Ping timeout: 240 seconds)
[01:42:11] *** Joins: blyat-73 (~hjgkjhgkj@46.235.96.249)
[01:43:18] *** Joins: llorllale (~llorllale@2607:9880:3a18:69:78c1:741e:24d7:1bb)
[01:44:36] *** Quits: byteskeptical (~amnesia@user/byteskeptical) (Quit: Lost terminal)
[01:52:42] *** Joins: amnrst (~amnrst@45-79-201-163.ip.linodeusercontent.com)
[01:54:20] *** Quits: zro (~zro@user/zro) (Quit: WeeChat 3.4)
[01:54:37] *** Joins: natewrench123456 (~joshu@cpe-72-228-153-194.buffalo.res.rr.com)
[01:55:10] <natewrench123456> NFTs sound like DNA... you left your NFT at the scene of the crime
[01:58:37] <amnrst> same for UTXOs
[02:00:03] <rk4> unexploded Tsomething ordnance D:
[02:00:32] <natewrench123456> NFTs are as useless as arcade tokens, no cash value
[02:01:09] <rk4> empirically false^
[02:01:56] <rk4> some have been sold for money, ergo some have a cash value
[02:02:49] <rk4> we may think it's worthless, i think baseball cards are worthless...but that doesn't change that there can still be a market for something
[02:04:15] <natewrench123456> wait... NFTs could have a purpose say digital distribution, you truly own the game if you truly own the NFT so you can resell it to another person
[02:04:45] *** Quits: hqdruxn08_ (~hqdruxn08@cpe-66-68-166-214.austin.res.rr.com) (Read error: Connection reset by peer)
[02:04:45] *** Quits: Amadiro (~Amadiro@84.209.11.12) (Remote host closed the connection)
[02:04:46] *** Joins: jringstad__ (~Amadiro@84.209.11.12)
[02:04:49] <natewrench123456> you know how you dont own the game you have a license
[02:04:54] <halosghost> rk4: “Texas”
[02:05:03] * halosghost drops mic
[02:05:07] *** Quits: halosghost (~halosghos@user/halosghost) (Quit: WeeChat 2.5-rc1)
[02:05:23] *** Joins: Leonard (~Administr@114.55.127.80)
[02:07:17] <TimMc> natewrench123456: 'Course, that would be a *fungible* token...
[02:07:25] *** Quits: Leonardzzz (~Administr@114.55.127.80) (Ping timeout: 256 seconds)
[02:07:33] *** Quits: Guyver2 (~Guyver@2001:985:f3f:1:d99:63ba:fbe5:11e2) (Quit: Going offline, see ya! (www.adiirc.com))
[02:07:34] *** Quits: mouseghost (~draco@user/mouseghost) (Quit: mew wew)
[02:09:51] <natewrench123456> TimMc, yea I confused say discord tokens with steam tokens
[02:09:51] *** Joins: Leonardzzz (~Administr@114.55.127.80)
[02:13:25] <natewrench123456> NFT access passes
[02:13:31] *** Quits: Leonard (~Administr@114.55.127.80) (Ping timeout: 256 seconds)
[02:28:43] *** Joins: hqdruxn08 (~hqdruxn08@cpe-66-68-166-214.austin.res.rr.com)
[02:29:21] *** Joins: Leonard (~Administr@114.55.127.80)
[02:31:47] *** Quits: Leonardzzz (~Administr@114.55.127.80) (Ping timeout: 256 seconds)
[02:36:21] *** Joins: Leonardzzz (~Administr@114.55.127.80)
[02:37:54] *** Quits: ioxzev1z (~ioxzev1z@user/ioxzev1z) (Quit: Leaving)
[02:39:43] *** Quits: Leonard (~Administr@114.55.127.80) (Ping timeout: 256 seconds)
[02:40:01] *** Quits: amnrst (~amnrst@45-79-201-163.ip.linodeusercontent.com) (Quit: The Lounge - https://thelounge.chat)
[02:41:22] *** Quits: gabriel1 (~gabriel1@user/gabriel1) (Remote host closed the connection)
[02:42:37] *** Joins: gabriel1 (~gabriel1@user/gabriel1)
[02:44:33] *** Quits: yanmaani (~yanmaani@gateway/tor-sasl/yanmaani) (Ping timeout: 276 seconds)
[02:46:35] *** Joins: amnrst (~amnrst@45-79-201-163.ip.linodeusercontent.com)
[02:49:58] *** Joins: mouseghost (~draco@user/mouseghost)
[02:52:02] *** Quits: amnrst (~amnrst@45-79-201-163.ip.linodeusercontent.com) (Quit: The Lounge - https://thelounge.chat)
[02:52:25] *** Joins: amnrst (~amnrst@45-79-201-163.ip.linodeusercontent.com)
[02:56:08] *** Quits: amnrst (~amnrst@45-79-201-163.ip.linodeusercontent.com) (Client Quit)
[02:56:17] *** Quits: Pythayr (~pither195@2600:1700:82f0:2fe0:fe39:6ff4:2642:3ef4) (Ping timeout: 240 seconds)
[02:57:25] *** Joins: amnrst (~amnrst@45-79-201-163.ip.linodeusercontent.com)
[03:03:56] *** Quits: amnrst (~amnrst@45-79-201-163.ip.linodeusercontent.com) (Quit: The Lounge - https://thelounge.chat)
[03:04:20] *** Joins: amnrst (~amnrst@45-79-201-163.ip.linodeusercontent.com)
[03:05:03] *** Quits: amnrst (~amnrst@45-79-201-163.ip.linodeusercontent.com) (Client Quit)
[03:05:24] *** Joins: amnrst (~amnrst@45-79-201-163.ip.linodeusercontent.com)
[03:07:25] *** Joins: CodeSpelunker (~CodeSpelu@user/codespelunker)
[03:09:22] *** Joins: Pythayr (~pither195@vps-1494dc6f.vps.ovh.us)
[03:09:35] *** Joins: Leonard (~Administr@114.55.127.80)
[03:11:53] *** Quits: Leonardzzz (~Administr@114.55.127.80) (Ping timeout: 256 seconds)
[03:12:51] *** Joins: smach (~savio@177.12.48.44)
[03:12:57] *** Quits: amnrst (~amnrst@45-79-201-163.ip.linodeusercontent.com) (Quit: The Lounge - https://thelounge.chat)
[03:14:17] *** Joins: amnrst (~amnrst@45-79-201-163.ip.linodeusercontent.com)
[03:21:29] *** Quits: natewrench123456 (~joshu@cpe-72-228-153-194.buffalo.res.rr.com) (Quit: Leaving)
[03:22:40] *** Quits: holgersson (~quassel@user/holgersson) (Quit: “Format C:........[Done]“)
[03:23:24] *** Joins: holgersson (~quassel@user/holgersson)
[03:30:43] *** Quits: machinedgod (~machinedg@24.105.81.50) (Ping timeout: 256 seconds)
[03:34:34] *** Joins: yanmaani (~yanmaani@gateway/tor-sasl/yanmaani)
[03:34:51] *** Joins: Leonardzzz (~Administr@114.55.127.80)
[03:38:05] *** Quits: Leonard (~Administr@114.55.127.80) (Ping timeout: 256 seconds)
[03:40:01] *** Joins: Leonard (~Administr@114.55.127.80)
[03:41:57] *** Quits: Leonardzzz (~Administr@114.55.127.80) (Ping timeout: 240 seconds)
[03:59:03] *** Quits: gproto23 (~gproto23@user/gproto23) (Ping timeout: 256 seconds)
[04:00:48] *** Hash is now known as EnchanterTim
[04:01:17] *** Quits: blyat-73 (~hjgkjhgkj@46.235.96.249) (Quit: Leaving)
[04:04:35] *** Quits: Wulf (~Wulf@user/wulf) (Ping timeout: 256 seconds)
[04:05:21] *** Quits: Leonard (~Administr@114.55.127.80) (Read error: Connection reset by peer)
[04:05:26] *** Joins: Leonardzzz (~Administr@114.55.127.80)
[04:06:22] *** Joins: Wulf (~Wulf@user/wulf)
[04:18:12] *** Joins: dude12312414 (~test@gateway/tor-sasl/dude12312414)
[04:23:56] *** Joins: machinedgod (~machinedg@24.105.81.50)
[04:25:01] *** Joins: CodeSpelunker2 (~CodeSpelu@user/codespelunker)
[04:27:49] *** Quits: CodeSpelunker (~CodeSpelu@user/codespelunker) (Ping timeout: 256 seconds)
[04:30:13] *** Joins: CodeSpelunker3 (~CodeSpelu@user/codespelunker)
[04:32:17] *** Quits: CodeSpelunker2 (~CodeSpelu@user/codespelunker) (Ping timeout: 240 seconds)
[04:36:26] *** Joins: jbis (~jbis@pool-108-6-219-196.nycmny.fios.verizon.net)
[04:36:44] <jbis> Is there a point in which keystretching using a KDF is too much?
[04:37:54] <sarnold> it depends on the task at hand.. if you're waiting a few hours for your key to unlock your shopping list, you're probably doing something wrong
[04:38:07] *** Quits: Seirdy (~Seirdy@sourcehut/user/seirdy) (Quit: exiting 3.3)
[04:39:39] *** Quits: smach (~savio@177.12.48.44) (Quit: Leaving)
[04:42:16] <Alipha> Key stretching should take as long as the user is willing to wait
[04:44:49] <sarnold> well said
[04:48:11] <jbis> sorry, wasn't clear
[04:48:36] <jbis> the length input of a KDF (the length you want to produce), can that be too large for a low entropy input?
[04:49:10] *** Quits: dude12312414 (~test@gateway/tor-sasl/dude12312414) (Remote host closed the connection)
[04:49:23] <jbis> for example if i have a 10 bit input, is using a KDF to generate 2048 bits too much?
[04:50:10] *** Joins: dude12312414 (~test@gateway/tor-sasl/dude12312414)
[04:50:19] <jbis> if i understand KDFs correctly, the answer is there is no limit to how much you can stretch an input
[04:51:33] <sarnold> so long as you don't pretend that you've actually got 2048 bits of security it might be fine
[04:51:59] *** Joins: igemnace (~ian@user/igemnace)
[04:53:07] <jbis> ok part 2 of the question, what are the implications of splitting up the output to create separate keys (Wireguard does this), for example, we take that 2048 bit key and split it into 16 128 bit keys.
[04:53:42] <jbis> and how much true entropy would the 128 bit key have?
[04:55:10] <sarnold> oh that's a good question... I believe a *good* kdf would be enough to prevent any related-key attacks with sub-pieces like that, but that might be too hopeful on my part
[04:55:37] <jbis> (10/2048)*128 = 0.625?
[04:56:16] *** Joins: zvijezda2 (~Foobar@c-98-203-220-45.hsd1.wa.comcast.net)
[04:57:55] <maroon> since there's only 2^10 possible outputs, the output has only 10 bits of security - if you can hide the other 9 chunks from the outside observer, the 10th chunk has 10 bits of security
[04:57:58] <jbis> sarnold I would use the example of a hash (as in HKDF). If you hash a password to produce D1. And then hash D1 to produce D2. I would think you could use D1 and D2 as encryption keys without issue.
[04:58:10] <iz> i think everything should be diffused through the whole value, like a hash -- so you can just use any part of it
[04:58:56] <TimMc> There's diffusion and then there's also the question of structure.
[04:58:58] <maroon> yes, with that stretched-longer KDF output, it shouldn't matter which portion you used as your key
[04:59:12] <jbis> maroon " if you can hide the other 9 chunks from the outside observer, the 10th chunk has 10 bits of security" i don't understand this
[04:59:16] <maroon> (if you throw away the remainder)
[04:59:25] *** Quits: zvijezda (~Foobar@c-98-203-220-45.hsd1.wa.comcast.net) (Ping timeout: 240 seconds)
[05:00:06] <maroon> you can't have a free energy device that creates entropy from nothing - the output cant have more entropy than the input
[05:00:35] <jbis> yes, but it could have less
[05:00:59] <maroon> if the observer knows one of the other 128-bit chunks, they can try all 2^10 possibilities and know that 10th chunk before you even use it as a key
[05:01:41] <maroon> if the KDF perfectly spreads the entropy across the entire stream, it wouldn't matter which chunk you keep while throwing all the others away
[05:01:43] <jbis> sure
[05:02:20] <jbis> but whats the entropy of each chunk? how can each chunk be 10 bits of entropy when the entire piece is 10 bits of entropy?
[05:03:56] <sarnold> jbis: I'd recommend against using D1 and H(D1) for anything important -- that feels like crossing a line. H(D1 || "A")  and H(D1 || "B") would probably be safer
[05:04:29] <maroon> using 2 of those chunks as passwords for different websites should be considered equivalent to using the same password at both
[05:04:47] <jbis> sarnold why?
[05:06:05] <maroon> it's possible for D1 and H(D1) to be identical, which means that H(H(DI)) is also identical. you dont have that problem with h(D1|counter++)
[05:06:07] <sarnold> jbis: they feel entirely "too related" to me. it might be perfectly fine 99.999% of the time, but then blow apart an algorithm somewhere..
[05:07:54] <jbis> For context (and to avoid xy), I have a key derived from DH. For each TCP connection, I need to produce a send and receive symmetric encryption key. Like wireguard, I intend to use a KDF. I was wondering how many times I can do that.
[05:08:35] <maroon> to be clear, DH means diffie hellman?
[05:08:42] <jbis> Yes
[05:08:53] <jbis> specifically ECDH
[05:09:15] *** Joins: frost (~frost@user/frost)
[05:09:32] <maroon> is the DH safe prime modulus using the standard TLS one, or is it a homebrew?
[05:10:41] <maroon> ie, there are 'well known' DH modulus listed in RFC 7919, or you can make a random one from 'openssl dhparam'
[05:11:27] <maroon> oh, ECDH. that's different than DH
[05:12:38] <maroon> for using a DH shared secret, i'd definitely want to use something like HKDF that has expand/compress steps, rather than simply using hash(stuff)
[05:13:35] <maroon> in HKDF there's an 'info' parameter to change the hash each time, so that's where you'd put something unique for each different key to be generated
[05:14:52] <jbis> Ok assuming I use HKDF
[05:15:11] <jbis> Is there a limit to how much I can stretch?
[05:15:18] <jbis> I don't think so
[05:15:52] <maroon> you mean, instead of using HKDF for each unique key, you want to make a really long stretch of a single HKDF and use it for all session keys?
[05:16:26] <jbis> Ah I see the confusion 
[05:17:38] <jbis> this is the scheme wireguard:
[05:17:45] <jbis> https://i.imgur.com/GWfF4ck.png
[05:18:26] <jbis> https://i.imgur.com/ckv1N4U.png
[05:18:45] <jbis> Which is a very confusing way of writing, generate a long KDF and split it up.
[05:20:47] <jbis> I would generate KDF_{2*<num of tcp connections>}
[05:21:04] *** Quits: mouseghost (~draco@user/mouseghost) (Quit: mew wew)
[05:21:23] <maroon> that may be 'a' KDF, but it's not the HKDF i know about
[05:22:04] <jbis> https://datatracker.ietf.org/doc/html/rfc5869
[05:22:15] <maroon> this is the design i was thinking of, that's easier to read: https://en.wikipedia.org/wiki/HKDF
[05:24:52] <maroon> your image didnt show the info-field and seems to call the salt 'input'
[05:26:31] <jbis> it appears most implement rfc5869
[05:26:32] <jbis> https://github.com/golang/crypto/blob/master/hkdf/hkdf.go
[05:26:38] <jbis> https://github.com/RustCrypto/KDFs/blob/master/hkdf/src/lib.rs
[05:27:30] <maroon> without saying so specifically, with the output tuple being 32 bytes, that indicates they're using sha256, which means that's the top limit for the amount of entropy that could be in the output
[05:29:13] <jbis> Actually they are using -BLAKE2
[05:39:07] *** Joins: Seirdy (~Seirdy@sourcehut/user/seirdy)
[05:42:28] *** Quits: igemnace (~ian@user/igemnace) (Quit: WeeChat 3.4)
[05:52:49] *** Quits: dude12312414 (~test@gateway/tor-sasl/dude12312414) (Quit: THE RAM IS TOO DAMN HIGH)
[05:56:13] *** Quits: machinedgod (~machinedg@24.105.81.50) (Ping timeout: 256 seconds)
[05:58:13] *** Quits: zulutango (~zulutango@static-n58-105-160-58.mas4.nsw.optusnet.com.au) (Remote host closed the connection)
[06:01:12] *** Joins: zulutango (~zulutango@static-n58-105-160-58.mas4.nsw.optusnet.com.au)
[06:04:55] *** Quits: zulutango (~zulutango@static-n58-105-160-58.mas4.nsw.optusnet.com.au) (Remote host closed the connection)
[06:08:08] *** Joins: zulutango (~zulutango@static-n58-105-160-58.mas4.nsw.optusnet.com.au)
[06:13:21] *** Quits: PJBoy (~PJBoy@user/pjboy) (Ping timeout: 256 seconds)
[06:22:35] *** Quits: sdfgsdfg (~sdfgsdfg@user/sdfgsdfg) (Quit: ZzzZ)
[06:40:15] *** Joins: igemnace (~ian@user/igemnace)
[06:41:36] *** Joins: CodeSpelunker2 (~CodeSpelu@user/codespelunker)
[06:42:17] *** Quits: Pythayr (~pither195@vps-1494dc6f.vps.ovh.us) (Ping timeout: 240 seconds)
[06:43:05] *** Joins: sdfgsdfg (~sdfgsdfg@user/sdfgsdfg)
[06:43:57] *** Quits: CodeSpelunker3 (~CodeSpelu@user/codespelunker) (Ping timeout: 256 seconds)
[07:02:28] *** Joins: maroon2 (tinycrypt@136.32.225.142)
[07:02:35] *** Joins: CodeSpelunker3 (~CodeSpelu@user/codespelunker)
[07:03:47] *** Quits: maroon (tinycrypt@user/maroon) (Ping timeout: 256 seconds)
[07:03:49] *** maroon2 is now known as maroon
[07:03:59] *** Quits: maroon (tinycrypt@136.32.225.142) (Changing host)
[07:03:59] *** Joins: maroon (tinycrypt@user/maroon)
[07:05:21] *** Quits: CodeSpelunker2 (~CodeSpelu@user/codespelunker) (Ping timeout: 256 seconds)
[07:17:22] *** Quits: zulutango (~zulutango@static-n58-105-160-58.mas4.nsw.optusnet.com.au) (Remote host closed the connection)
[07:17:49] *** Joins: zulutango (~zulutango@static-n58-105-160-58.mas4.nsw.optusnet.com.au)
[07:28:01] *** Joins: CodeSpelunker2 (~CodeSpelu@user/codespelunker)
[07:30:17] *** Quits: CodeSpelunker3 (~CodeSpelu@user/codespelunker) (Ping timeout: 240 seconds)
[07:30:36] *** Joins: CodeSpelunker3 (~CodeSpelu@user/codespelunker)
[07:33:41] *** Quits: CodeSpelunker2 (~CodeSpelu@user/codespelunker) (Ping timeout: 256 seconds)
[07:53:21] *** zvijezda2 is now known as zvijezda
[08:04:51] *** Joins: byteskeptical (~amnesia@user/byteskeptical)
[08:10:42] *** Quits: gabriel1 (~gabriel1@user/gabriel1) (Remote host closed the connection)
[08:23:01] *** Quits: rardiol (~quassel@user/rardiol) (Ping timeout: 240 seconds)
[08:26:28] *** Quits: CodeSpelunker3 (~CodeSpelu@user/codespelunker) (Quit: CodeSpelunker3)
[08:37:18] *** Quits: dez (uid92154@user/dez) (Quit: Connection closed for inactivity)
[08:38:55] *** Joins: BOKALDO (~BOKALDO@user/bokaldo)
[08:42:57] *** Joins: gproto23 (~gproto23@user/gproto23)
[08:50:44] *** Quits: Gallomimia (~Gallomimi@node-1w7jra2a2gqpwzf9xormpws0i.ipv6.telus.net) (Remote host closed the connection)
[08:51:49] *** Joins: Gallomimia (~Gallomimi@node-1w7jra2a2gqpz8weypyt79fw3.ipv6.telus.net)
[09:05:50] *** Quits: sec^nd (~sec^nd@gateway/tor-sasl/secnd/x-45171752) (Remote host closed the connection)
[09:06:16] *** Joins: sec^nd (~sec^nd@gateway/tor-sasl/secnd/x-45171752)
[09:09:12] *** Quits: osi (~osi@5.53.148.124) (Quit: q)
[09:16:43] *** Quits: Church (~aleph@pool-98-116-232-112.nycmny.fios.verizon.net) (Ping timeout: 268 seconds)
[09:17:58] *** Joins: Church (~aleph@pool-98-116-232-112.nycmny.fios.verizon.net)
[09:27:14] *** Quits: sdfgsdfg (~sdfgsdfg@user/sdfgsdfg) (Quit: ZzzZ)
[09:34:51] *** Joins: Pythayr (~pither195@2600:1700:82f0:2fe0:dacb:e5c6:a324:e80e)
[09:40:57] *** Quits: Pythayr (~pither195@2600:1700:82f0:2fe0:dacb:e5c6:a324:e80e) (Ping timeout: 240 seconds)
[09:53:58] *** Joins: Pythayr (~pither195@vps-1494dc6f.vps.ovh.us)
[10:04:59] *** Quits: _flood (flooded@gateway/vpn/protonvpn/flood/x-43489060) (Ping timeout: 256 seconds)
[10:09:14] *** Joins: flooded (flooded@gateway/vpn/protonvpn/flood/x-43489060)
[10:33:24] *** Joins: opsecfail (~opsecfail@user/opsecfail)
[10:33:26] *** Quits: opsecfail (~opsecfail@user/opsecfail) (Read error: Connection reset by peer)
[10:34:24] *** Quits: woggle (~charles@c-va-26578d734e-1840-1.tingfiber.com) (Quit: WeeChat 2.8)
[10:37:52] *** Joins: VarunAgw (~VarunAgw@103.158.148.26)
[10:47:21] *** Joins: opsecfail (~opsecfail@user/opsecfail)
[10:49:42] *** Quits: opsecfail (~opsecfail@user/opsecfail) (Client Quit)
[10:50:07] *** Joins: opsecfail (~opsecfail@user/opsecfail)
[10:50:20] *** Quits: opsecfail (~opsecfail@user/opsecfail) (Read error: Connection reset by peer)
[10:50:37] *** Joins: sdfgsdfg (~sdfgsdfg@user/sdfgsdfg)
[10:59:20] *** Joins: VarunAgw_ (~VarunAgw@103.158.148.26)
[11:01:57] *** Quits: VarunAgw (~VarunAgw@103.158.148.26) (Ping timeout: 240 seconds)
[11:19:18] *** Quits: zulutango (~zulutango@static-n58-105-160-58.mas4.nsw.optusnet.com.au) (Remote host closed the connection)
[11:19:39] *** Joins: zulutango (~zulutango@static-n58-105-160-58.mas4.nsw.optusnet.com.au)
[11:29:26] *** Joins: andreasbuhr (~quassel@p5dcf913e.dip0.t-ipconnect.de)
[11:29:29] *** Quits: andreasbuhr (~quassel@p5dcf913e.dip0.t-ipconnect.de) (Client Quit)
[11:30:19] *** Joins: Nick261515848488 (~VarunAgw@106.217.169.69)
[11:30:20] *** Quits: Nick261515848488 (~VarunAgw@106.217.169.69) (Remote host closed the connection)
[11:32:57] *** Quits: zulutango (~zulutango@static-n58-105-160-58.mas4.nsw.optusnet.com.au) (Ping timeout: 240 seconds)
[11:33:16] *** Joins: zulutango (~zulutango@static-n58-105-160-58.mas4.nsw.optusnet.com.au)
[11:33:57] *** Quits: VarunAgw_ (~VarunAgw@103.158.148.26) (Ping timeout: 240 seconds)
[11:44:11] *** Joins: Haohmaru (~Haohmaru@195.24.53.110)
[11:47:53] *** Joins: MajorBiscuit (~MajorBisc@c-001-007-050.client.tudelft.eduvpn.nl)
[11:59:29] *** Quits: EnchanterTim (~Hash@hashsecurity.org) (Quit: https://hashsecurity.org)
[12:00:35] *** Joins: Hash (~Hash@hashsecurity.org)
[12:05:35] *** Quits: Hash (~Hash@hashsecurity.org) (Max SendQ exceeded)
[12:06:14] *** Joins: Hash (~Hash@hashsecurity.org)
[12:09:59] *** Quits: Rutice (~Rutice@216.131.105.51) (Quit: My Mac Mini has gone to sleep. ZZZzzz…)
[12:12:31] *** Joins: Guyver2 (Guyver@guyver2.xs4all.nl)
[12:15:28] *** Joins: Dima[m] (~reddima10@2001:470:69fc:105::366)
[12:21:37] *** Joins: xenoterracide (~xenoterra@99-124-139-34.lightspeed.iplsin.sbcglobal.net)
[12:21:42] *** Quits: MajorBiscuit (~MajorBisc@c-001-007-050.client.tudelft.eduvpn.nl) (Ping timeout: 268 seconds)
[12:22:37] *** Joins: MajorBiscuit (~MajorBisc@c-001-007-050.client.tudelft.eduvpn.nl)
[12:23:49] *** Quits: lithiumpt (~lithiumpt@217.138.203.167) (Ping timeout: 250 seconds)
[12:28:17] *** Joins: saolof[m] (~saolofenv@2001:470:69fc:105::1:6188)
[12:40:17] *** Quits: xenoterracide (~xenoterra@99-124-139-34.lightspeed.iplsin.sbcglobal.net) (Ping timeout: 240 seconds)
[12:54:14] *** Joins: lithiumpt (~lithiumpt@217.138.203.205)
[13:01:17] <saolof[m]> Hey, I was wondering what the advantage of using elliptic curve addition is specifically, compared to using any other cyclic group?
[13:01:28] *** Joins: xenoterracide (~xenoterra@99-124-139-34.lightspeed.iplsin.sbcglobal.net)
[13:02:05] <Wulf> saolof[m]: shorter, O(1) key generation, faster for some operations
[13:03:44] <saolof[m]> Well yeah, it's Diffie-Hellman, so key generation is the same. But in both cases it's the same cyclic group just represented in a different way, so why can it use shorter keys again?
[13:04:27] *** Parts: Dima[m] (~reddima10@2001:470:69fc:105::366) ()
[13:04:27] <Wulf> saolof[m]: I guess there are certain types of attacks that work against other groups but not EC.
[13:04:54] <Wulf> see e.g. logjam
[13:17:23] *** Joins: ___nick___ (~quassel@cpc68286-cdif17-2-0-cust533.5-1.cable.virginm.net)
[13:17:25] *** Quits: yawkat (~yawkat@cats.coffee) (Ping timeout: 240 seconds)
[13:26:01] *** Joins: PJBoy (~PJBoy@user/pjboy)
[13:40:27] *** Quits: lithiumpt (~lithiumpt@217.138.203.205) (Ping timeout: 256 seconds)
[13:59:48] *** Joins: lithiumpt (~lithiumpt@195.216.219.150)
[14:01:12] *** Quits: kish` (~aqua@user/aqua) (Ping timeout: 276 seconds)
[14:02:08] *** Joins: Lord_of_Life_ (~Lord@user/lord-of-life/x-2819915)
[14:03:33] *** Quits: Lord_of_Life (~Lord@user/lord-of-life/x-2819915) (Ping timeout: 256 seconds)
[14:03:33] *** Lord_of_Life_ is now known as Lord_of_Life
[14:05:38] *** Joins: wsb (~wsb@user/wsb)
[14:12:41] *** Joins: kish` (~aqua@user/aqua)
[14:26:14] *** Quits: xenoterracide (~xenoterra@99-124-139-34.lightspeed.iplsin.sbcglobal.net) (Remote host closed the connection)
[14:26:37] *** Joins: x88x88x (~x88x88x@2001:19f0:5:39a8:5400:3ff:feb6:73cb)
[14:31:12] <Hash> How will we protect against quatum processing power to try to determine keys?
[14:32:06] <riv> Either using much larger keys, or using algorithms for which quantum computers aren't able/known to be able to beat faster than normal computers
[14:32:07] <Hash> s/to try/that tries/
[14:32:22] <Hash> i see
[14:32:45] <riv> this is called post-quantum crypto, an example is lattice and error correcting code based systems - rather than prime factorization based ones
[14:33:12] <Hash> I see
[14:33:37] *** Joins: ioxzev1z (~ioxzev1z@user/ioxzev1z)
[14:38:15] *** Quits: yanmaani (~yanmaani@gateway/tor-sasl/yanmaani) (Ping timeout: 276 seconds)
[14:41:25] <Haohmaru> wrap the keys in lead containers
[14:44:17] <Wulf> Hash: https://media.ccc.de/v/rc3-2021-cwtv-230-kyber-and-post-quantum
[14:58:37] *** Quits: MajorBiscuit (~MajorBisc@c-001-007-050.client.tudelft.eduvpn.nl) (Ping timeout: 240 seconds)
[15:23:08] *** Quits: igemnace (~ian@user/igemnace) (Remote host closed the connection)
[15:23:27] *** Joins: MajorBiscuit (~MajorBisc@c-001-007-050.client.tudelft.eduvpn.nl)
[15:24:38] *** Joins: d1cor (~diego@179.63.242.123)
[15:28:22] *** Joins: Guyver2_ (Guyver@guyver2.xs4all.nl)
[15:29:28] *** Joins: igemnace (~ian@user/igemnace)
[15:30:37] *** Quits: Guyver2 (Guyver@guyver2.xs4all.nl) (Ping timeout: 240 seconds)
[15:30:43] *** Guyver2_ is now known as Guyver2
[15:33:06] *** Joins: machinedgod (~machinedg@24.105.81.50)
[15:35:30] *** Quits: boxframes_ (~Saloframe@2607:9000:2000:15::a45d) (Quit: Leaving)
[15:38:08] *** Quits: sdfgsdfg (~sdfgsdfg@user/sdfgsdfg) (Quit: ZzzZ)
[15:46:51] *** Joins: gabriel1 (~gabriel1@user/gabriel1)
[15:50:34] *** Quits: BOKALDO (~BOKALDO@user/bokaldo) (Quit: Leaving)
[15:52:20] *** flooded is now known as _flood
[15:56:39] *** Joins: Guyver2_ (Guyver@guyver2.xs4all.nl)
[15:59:17] *** Quits: Guyver2 (Guyver@guyver2.xs4all.nl) (Ping timeout: 240 seconds)
[15:59:20] *** Guyver2_ is now known as Guyver2
[16:00:26] *** Quits: jringstad__ (~Amadiro@84.209.11.12) (Quit: Leaving)
[16:00:43] *** Joins: Amadiro (~Amadiro@84.209.11.12)
[16:05:45] *** Joins: menace (~someone@ppp-93-104-175-20.dynamic.mnet-online.de)
[16:05:58] *** Quits: igemnace (~ian@user/igemnace) (Quit: WeeChat 3.4)
[16:06:25] *** Quits: menace (~someone@ppp-93-104-175-20.dynamic.mnet-online.de) (Changing host)
[16:06:25] *** Joins: menace (~someone@user/menace)
[16:23:56] *** Joins: yawkat (~yawkat@cats.coffee)
[16:25:27] *** Joins: Rutice (~Rutice@pool-96-237-137-192.bstnma.fios.verizon.net)
[16:26:10] *** Quits: gabriel1 (~gabriel1@user/gabriel1) (Remote host closed the connection)
[16:28:47] *** Joins: gabriel1 (~gabriel1@user/gabriel1)
[16:34:57] *** Quits: gabriel1 (~gabriel1@user/gabriel1) (Remote host closed the connection)
[16:37:21] *** Joins: gabriel1 (~gabriel1@user/gabriel1)
[16:37:27] *** Joins: mikrosis (~mikrosis@dynamic-046-114-174-174.46.114.pool.telefonica.de)
[16:38:52] *** Quits: byteskeptical (~amnesia@user/byteskeptical) (Quit: Lost terminal)
[16:39:33] *** Quits: gabriel1 (~gabriel1@user/gabriel1) (Remote host closed the connection)
[16:45:52] *** menace is now known as Deknos
[16:50:44] *** Joins: BOKALDO (~BOKALDO@user/bokaldo)
[16:55:05] *** Joins: cvmn (~caveman@gateway/tor-sasl/caveman)
[16:58:26] *** Quits: chiselfuse (~chiselfus@user/chiselfuse) (Remote host closed the connection)
[16:58:39] *** Joins: chiselfuse (~chiselfus@user/chiselfuse)
[17:08:40] *** Joins: Rutice_ (~Rutice@216.131.105.52)
[17:09:44] *** Joins: rardiol (~quassel@user/rardiol)
[17:10:17] *** Quits: Rutice (~Rutice@pool-96-237-137-192.bstnma.fios.verizon.net) (Ping timeout: 240 seconds)
[17:10:50] *** Joins: boxframes (~Saloframe@2607:9000:2000:15::a45d)
[17:17:57] *** Quits: d1cor (~diego@179.63.242.123) (Ping timeout: 240 seconds)
[17:20:45] *** Quits: cvmn (~caveman@gateway/tor-sasl/caveman) (Ping timeout: 276 seconds)
[17:23:06] *** Joins: blyat-73 (~hjgkjhgkj@46.235.96.249)
[17:26:08] *** Quits: blyat-73 (~hjgkjhgkj@46.235.96.249) (Remote host closed the connection)
[17:27:19] *** Joins: sambauer64 (~sambauer6@86.121.75.23)
[17:28:29] *** Joins: blyat-73 (~hjgkjhgkj@46.235.96.249)
[17:31:14] *** Quits: blyat-73 (~hjgkjhgkj@46.235.96.249) (Remote host closed the connection)
[17:31:39] *** Joins: blyat-73 (~hjgkjhgkj@46.235.96.249)
[17:33:22] *** Quits: blyat-73 (~hjgkjhgkj@46.235.96.249) (Remote host closed the connection)
[17:34:15] *** Joins: blyat-73 (~hjgkjhgkj@46.235.96.249)
[17:34:55] *** Quits: blyat-73 (~hjgkjhgkj@46.235.96.249) (Remote host closed the connection)
[17:36:14] *** Joins: blyat-73 (~hjgkjhgkj@46.235.96.249)
[17:46:09] *** Joins: byteskeptical (~amnesia@user/byteskeptical)
[17:52:17] *** Joins: sdfgsdfg (~sdfgsdfg@user/sdfgsdfg)
[17:55:56] *** Quits: Leonardzzz (~Administr@114.55.127.80) (Remote host closed the connection)
[17:56:21] *** Joins: Leonardzzz (~Administr@114.55.127.80)
[17:58:05] *** Quits: llorllale (~llorllale@2607:9880:3a18:69:78c1:741e:24d7:1bb) (Ping timeout: 252 seconds)
[18:02:09] *** Joins: cvmn (~caveman@gateway/tor-sasl/caveman)
[18:05:52] <iz> saolof[m]: also w/ rsa keys, there are lots of invalid keys in the bit size range
[18:07:19] <iz> saolof[m]: and it requires big integer libraries and math, while w/ ECC the important operations end up being simple bitwise operations
[18:07:58] *** Joins: Leonard (~Administr@114.55.127.80)
[18:08:33] <TimMc> With RSA, you can't even tell if you've chosen a weak key without trying to crack it yourself. :-/
[18:08:45] <TimMc> well, sort of
[18:09:21] <TimMc> You obviously know the p and q, but you would then have to try to factor those.
[18:10:11] *** Quits: Leonardzzz (~Administr@114.55.127.80) (Ping timeout: 256 seconds)
[18:11:20] *** Joins: woggle (~charles@c-va-26578d734e-1840-1.tingfiber.com)
[18:20:57] *** Quits: frost (~frost@user/frost) (Ping timeout: 256 seconds)
[18:25:52] *** Joins: halosghost (~halosghos@user/halosghost)
[18:28:12] <Alipha> riv: "much larger keys"... You mean impractically-large keys, like 1-million bit RSA keys which take hours to perform DH with
[18:29:10] *** Quits: jbis (~jbis@pool-108-6-219-196.nycmny.fios.verizon.net) (Remote host closed the connection)
[18:29:21] <riv> yes
[18:30:24] <riv> > The largest number reliably factored by Shor's algorithm is 21 which was factored in 2012.[23] 15 had previously been factored by several labs.
[18:30:36] <riv> so use a key size of at least 8 bits to protect yourself against quantum attacks
[18:30:51] <int-e> ouch
[18:32:12] <riv> im surprised that IBMs newest quantum computer has not increased this?
[18:32:13] *** Quits: derpadmin (~Anonymous@homebase.200013.net) (Quit: Lost terminal)
[18:33:35] <iz> https://phys.org/news/2014-11-largest-factored-quantum-device.html
[18:34:05] <iz> but i'm pretty sure those numbers are weak in a certain way
[18:35:00] <int-e> 241*233... almost square
[18:35:13] <riv> im curious what algorithm is being used here? it is not shors algorithm
[18:35:35] *** Joins: RawFiend (~textual@176.55.118.178)
[18:35:38] <int-e> Not sure whether this helps quantum computers, but this brings it into pen and paper territory (Fermat could've factored 56153!)
[18:35:42] <riv> "In order for quantum computers to provide real, practical advantages over classical computers, the equations must have many more than four variables" what
[18:36:06] <riv> there is mention of dwave on this page, which is a little sus
[18:36:16] <iz> yeah, there's fermat or gauss's trick when the two primes are close to each other
[18:36:23] <iz> like the difference of squares thing
[18:36:59] <int-e> right. to be concrete: 241*233 = (237+4)*(237-4) = 237^2 - 4^2.
[18:37:01] <iz> oh, you're right, that isn't even using shor's alg.. just saying it outperforms it in this instance
[18:37:23] <iz> man, i remember in college, i thought i had discovered that and was on my way to cracking RSA
[18:37:45] <iz> and then later found out it was like something gauss figured out centuries ago when he was like 11 years old or something :b
[18:37:56] <int-e> well, it's suspicious that *all* the examples are close to squares
[18:38:03] <iz> yeah, agreed
[18:41:16] *** Joins: Leonardzzz (~Administr@114.55.127.80)
[18:44:36] *** Quits: cvmn (~caveman@gateway/tor-sasl/caveman) (Ping timeout: 276 seconds)
[18:44:45] *** Quits: Leonard (~Administr@114.55.127.80) (Ping timeout: 256 seconds)
[18:46:01] *** Quits: Leonardzzz (~Administr@114.55.127.80) (Remote host closed the connection)
[18:46:23] *** Joins: Leonardzzz (~Administr@114.55.127.80)
[18:52:44] *** Joins: gabriel1 (~gabriel1@user/gabriel1)
[18:54:58] *** Joins: dez (uid92154@user/dez)
[18:55:07] *** Quits: RawFiend (~textual@176.55.118.178) (Remote host closed the connection)
[18:57:16] <maroon> if i'm trying to test large numbers for primality (not trying to factor them), is there something more efficient than fermat/miller-rabin stuff that can more quickly discard some of the composites who didn't get flagged by trial division by the smallest primes?
[19:06:43] *** Quits: Leonardzzz (~Administr@114.55.127.80) (Read error: Connection reset by peer)
[19:07:53] *** Joins: Leonard (~Administr@114.55.127.80)
[19:14:17] *** Joins: Leonardzzz (~Administr@114.55.127.80)
[19:14:49] *** Quits: sdfgsdfg (~sdfgsdfg@user/sdfgsdfg) (Quit: ZzzZ)
[19:17:37] *** Quits: Leonard (~Administr@114.55.127.80) (Ping timeout: 256 seconds)
[19:19:35] *** Quits: Leonardzzz (~Administr@114.55.127.80) (Remote host closed the connection)
[19:22:49] *** Joins: Leonardzzz (~Administr@114.55.127.80)
[19:24:40] *** Joins: Leonard (~Administr@114.55.127.80)
[19:27:41] *** Quits: Leonardzzz (~Administr@114.55.127.80) (Ping timeout: 256 seconds)
[19:30:50] *** Joins: Leonardzzz (~Administr@114.55.127.80)
[19:30:59] *** Quits: Leonard (~Administr@114.55.127.80) (Read error: Connection reset by peer)
[19:36:37] *** Quits: gabriel1 (~gabriel1@user/gabriel1) (Remote host closed the connection)
[19:38:49] *** Joins: Leonard (~Administr@114.55.127.80)
[19:39:02] *** Joins: gabriel1 (~gabriel1@user/gabriel1)
[19:39:21] *** Quits: phebus (~phebus@fsf/member/phebus) (Remote host closed the connection)
[19:40:37] *** Quits: Leonardzzz (~Administr@114.55.127.80) (Ping timeout: 240 seconds)
[19:41:20] *** Quits: gabriel1 (~gabriel1@user/gabriel1) (Remote host closed the connection)
[19:47:56] *** Quits: ___nick___ (~quassel@cpc68286-cdif17-2-0-cust533.5-1.cable.virginm.net) (Quit: https://quassel-irc.org - Chat comfortably. Anywhere.)
[19:49:22] *** Joins: ___nick___ (~quassel@cpc68286-cdif17-2-0-cust533.5-1.cable.virginm.net)
[19:49:44] *** Quits: ___nick___ (~quassel@cpc68286-cdif17-2-0-cust533.5-1.cable.virginm.net) (Client Quit)
[19:50:48] *** Joins: gabriel1 (~gabriel1@user/gabriel1)
[19:51:15] *** Joins: ___nick___ (~quassel@cpc68286-cdif17-2-0-cust533.5-1.cable.virginm.net)
[19:51:35] *** Joins: jbis (~jbis@pool-108-6-219-196.nycmny.fios.verizon.net)
[19:58:46] *** Quits: gproto23 (~gproto23@user/gproto23) (Remote host closed the connection)
[19:59:58] *** Joins: gproto23 (~gproto23@user/gproto23)
[20:00:26] *** Quits: Leonard (~Administr@114.55.127.80) (Read error: Connection reset by peer)
[20:00:50] *** Joins: Leonard (~Administr@114.55.127.80)
[20:03:33] *** Quits: ioxzev1z (~ioxzev1z@user/ioxzev1z) (Quit: Leaving)
[20:08:52] *** Joins: Leonardzzz (~Administr@114.55.127.80)
[20:12:01] *** Quits: Leonard (~Administr@114.55.127.80) (Ping timeout: 256 seconds)
[20:25:08] *** Joins: yanmaani (~yanmaani@gateway/tor-sasl/yanmaani)
[20:25:59] *** Quits: blyat-73 (~hjgkjhgkj@46.235.96.249) (Remote host closed the connection)
[20:26:22] *** Joins: xenoterracide (~xenoterra@99-124-139-34.lightspeed.iplsin.sbcglobal.net)
[20:26:23] *** Joins: blyat-73 (~hjgkjhgkj@46.235.96.249)
[20:30:23] *** Joins: cwebber (~user@user/cwebber)
[20:31:59] *** Joins: gabriel1_ (~gabriel1@k2.ilion.info)
[20:32:07] *** Quits: gabriel1 (~gabriel1@user/gabriel1) (Remote host closed the connection)
[20:38:36] *** Quits: kashire (~kashire@user/kashire) (Quit: be back later.)
[20:39:41] *** Joins: Leonard (~Administr@114.55.127.80)
[20:40:29] *** Joins: kashire (~kashire@c-76-31-172-90.hsd1.tx.comcast.net)
[20:40:29] *** Quits: kashire (~kashire@c-76-31-172-90.hsd1.tx.comcast.net) (Changing host)
[20:40:29] *** Joins: kashire (~kashire@user/kashire)
[20:40:55] *** Quits: blyat-73 (~hjgkjhgkj@46.235.96.249) (Quit: Leaving)
[20:41:37] *** Quits: Leonardzzz (~Administr@114.55.127.80) (Ping timeout: 240 seconds)
[20:44:07] *** Quits: gproto23 (~gproto23@user/gproto23) (Remote host closed the connection)
[20:50:48] *** Joins: AndroUser (~androirc@2607:fb90:40f4:5da3:7ce2:dc66:1e26:77e9)
[20:53:51] <dostoyevsky2> I want to calculate a hash code for a string that I can calculate a remainder/mod/% on -- is it ok for this purpose to use the last 8 bytes of e.g. a sha256sum?
[20:54:44] <yawkat> Sure
[20:55:25] <yawkat> Just be aware of modulo bias
[20:57:57] *** Quits: Haohmaru (~Haohmaru@195.24.53.110) ()
[21:03:22] *** Quits: AndroUser (~androirc@2607:fb90:40f4:5da3:7ce2:dc66:1e26:77e9) (Read error: Connection reset by peer)
[21:05:06] <dostoyevsky2> I guess modulo would be a problem for this consistent hashing implementation.  I want my nodes to be at truly random locations in a ring buffer.  So I guess I could also just e.g. use the last 4bytes of sha and then store that value and then scale down the different values I got to create the actual ring buffer based on the minium distance between two nodes (so each entry in the ring buffer can 
[21:05:12] <dostoyevsky2> represent one node)
[21:05:32] *** Quits: deusexbeer (~hedeo@37-146-236-2.broadband.corbina.ru) (Ping timeout: 240 seconds)
[21:05:54] *** Joins: AndroUser (~androirc@2607:fb90:40f4:5da3:7ce2:dc66:1e26:77e9)
[21:06:22] *** Joins: deusexbeer (~hedeo@37-146-236-2.broadband.corbina.ru)
[21:06:46] *** Quits: Deknos (~someone@user/menace) (Quit: Deknos)
[21:09:32] *** Quits: jab416171 (~jab416171@c-174-52-177-39.hsd1.ut.comcast.net) (Ping timeout: 240 seconds)
[21:12:28] *** Quits: AndroUser (~androirc@2607:fb90:40f4:5da3:7ce2:dc66:1e26:77e9) (Read error: Connection reset by peer)
[21:12:50] *** Joins: Leonardzzz (~Administr@114.55.127.80)
[21:14:50] *** Joins: jab416171 (~jab416171@c-174-52-177-39.hsd1.ut.comcast.net)
[21:15:17] *** Quits: machinedgod (~machinedg@24.105.81.50) (Remote host closed the connection)
[21:15:37] *** Quits: Leonard (~Administr@114.55.127.80) (Ping timeout: 240 seconds)
[21:18:53] *** Joins: machinedgod (~machinedg@24.105.81.50)
[21:19:04] *** Quits: gabriel1_ (~gabriel1@k2.ilion.info) (Remote host closed the connection)
[21:19:17] *** Quits: kish` (~aqua@user/aqua) (Remote host closed the connection)
[21:20:25] *** Joins: Leonard (~Administr@114.55.127.80)
[21:22:43] *** Quits: Leonardzzz (~Administr@114.55.127.80) (Ping timeout: 256 seconds)
[21:22:55] *** Joins: jarthur (~jarthur@cpe-70-114-198-37.austin.res.rr.com)
[21:24:01] *** Joins: kish` (~aqua@user/aqua)
[21:25:47] *** Joins: inlight (~inlight@157.35.76.105)
[21:25:47] *** Quits: inlight (~inlight@157.35.76.105) (Changing host)
[21:25:47] *** Joins: inlight (~inlight@user/inlight)
[21:28:36] <dostoyevsky2> I guess with a mod by a power of 2 everything should be alright
[21:30:51] *** Joins: Leonardzzz (~Administr@114.55.127.80)
[21:31:49] <riv> modulo bias?
[21:32:11] <riv> there is no bias if you take a chunk of bits from a random bitstring
[21:33:36] <dostoyevsky2> Well, if I were to take the last byte of a sha sum I'd have a random number between 0-255 if I mod 100 it... there is going to be a bias since the numbers don't go to 300, only to 255 so 0-55 will have a higher probability of appearing
[21:34:11] *** Quits: Leonard (~Administr@114.55.127.80) (Ping timeout: 256 seconds)
[21:36:43] <riv> yes under the idealized model of a hash, if you take the last byte it will be uniformly random
[21:36:58] <riv> or at least indistinguishable from
[21:38:34] <ms7821> do you mean hash ring, rather than ring buffer?
[21:39:24] <dostoyevsky2> ms7821: I guess that depends on the implementation... I'd map a hash ring to a ring buffer, as it's easy to search through an array
[21:40:06] *** Joins: aleck (~aleck@user/aleck)
[21:40:30] <ms7821> easier to search a linked list unless your buffer is relatively full
[21:40:53] <ms7821> (in which case, you're probably no longer fair, so should enlarge it)
[21:41:05] <ms7821> why not just use the full hash as the key for the hash ring?
[21:41:18] <maroon> dostoyevsky2, if you have plenty of bytes to play with, if you need 0-99, then keep discarding bytes until it's in the 0-199 range
[21:41:25] *** Quits: aleck1 (~aleck@user/aleck) (Ping timeout: 256 seconds)
[21:41:56] <dostoyevsky2> maroon: yeah, that's another way to fix the problem
[21:42:23] *** Joins: Leonard (~Administr@114.55.127.80)
[21:42:42] <ms7821> what's the problem? you're artificially limiting the fairness of the hash ring and want to still preserve the fairness of the hash that corresponds to it? that doesn't make sense
[21:44:05] <dostoyevsky2> ms7821: If I use the hash directly I'd need to find a way to map a 256bit number into a ring range
[21:44:23] *** Quits: Leonardzzz (~Administr@114.55.127.80) (Ping timeout: 256 seconds)
[21:44:28] <ms7821> why not use 0-2^256-1 as the range?
[21:45:39] <ms7821> you just need a value that you can divide by the number of current nodes. the larger it is, the less biased the outcome is
[21:46:32] *** Quits: epony (epony@user/epony) (Ping timeout: 240 seconds)
[21:47:11] <maroon> totp has a bias because they take an input of a 2^31 number and output it as 10^6. if their input was 2^64 the bias would be barely detectible
[21:48:00] <dostoyevsky2> ms7821: I guess that would be possible too but then you'd always start searching from the beginning.  E.g. you can see in that image here that they first calculate the position in the rind and go to the next node from there: https://blog.carlosgaldino.com/public/images/consistent-hashing_14.png
[21:48:08] <ms7821> yeah, tbh truncating would be fine too, but dostoyevsky2 was talking about 0-255 which is minute
[21:48:23] <ms7821> what the fuck is that diagram
[21:50:13] *** Joins: epony (epony@user/epony)
[21:51:12] *** Quits: Leonard (~Administr@114.55.127.80) (Read error: Connection reset by peer)
[21:51:20] *** Joins: Leonard (~Administr@114.55.127.80)
[21:51:42] <ms7821> https://miro.medium.com/max/530/0*eUVMkanQ4rsAOB43
[21:53:37] *** Joins: xenoterracide_ (~xenoterra@2600:1700:71d4:810:101f:cf82:e73c:f52b)
[21:55:57] *** Quits: xenoterracide (~xenoterra@99-124-139-34.lightspeed.iplsin.sbcglobal.net) (Ping timeout: 240 seconds)
[22:01:15] *** Quits: sambauer64 (~sambauer6@86.121.75.23) (Ping timeout: 256 seconds)
[22:02:47] *** Joins: sambauer64 (~sambauer6@86.121.131.207)
[22:02:56] <dostoyevsky2> maroon: is totp being 10^6 really relevant -- because it's not really used for hashing, no?
[22:03:34] <dostoyevsky2> Speaking of which: https://github.com/aidansteele/ipv6-ghost-ship
[22:03:43] <maroon> i mentioned that as an example of modulo bias caused by a combo of the output not being 2^n and the input range being rather small relative to the output
[22:04:03] <dostoyevsky2> > So I thought it would be fun to add TOTP support to every protocol by embedding the six digit code inside the IP [ipv6| address. 
[22:06:45] <wasamasa> I wish every ISP supported ipv6 already
[22:06:52] <wasamasa> it's just stupid how long they hold out
[22:07:28] <dostoyevsky2> I once switched my bouncer to ipv6, couldn't even connect to freenode
[22:08:48] <dostoyevsky2> But I've actually seen ipv6 addresses since then in whois output
[22:13:32] *** Quits: MajorBiscuit (~MajorBisc@c-001-007-050.client.tudelft.eduvpn.nl) (Ping timeout: 240 seconds)
[22:16:20] *** Joins: Leonardzzz (~Administr@114.55.127.80)
[22:19:31] *** Quits: Leonard (~Administr@114.55.127.80) (Ping timeout: 256 seconds)
[22:21:45] <TimMc> dostoyevsky2: yesss, I just saw that on lobste.rs
[22:30:13] *** Joins: Leonard (~Administr@114.55.127.80)
[22:32:25] *** Quits: Leonardzzz (~Administr@114.55.127.80) (Ping timeout: 256 seconds)
[22:33:14] <halosghost> that's hilarious
[22:33:41] <halosghost> I have 0 things in AWS, but I'm vaguely tempted to get something so that I can use that…
[22:34:17] *** Quits: xenoterracide_ (~xenoterra@2600:1700:71d4:810:101f:cf82:e73c:f52b) (Ping timeout: 240 seconds)
[22:35:53] *** Joins: Guyver2_ (~Guyver@2001:985:f3f:1:ccad:a172:dbd3:d8fa)
[22:38:47] *** Quits: Guyver2 (Guyver@guyver2.xs4all.nl) (Ping timeout: 256 seconds)
[22:38:50] *** Joins: Leonardzzz (~Administr@114.55.127.80)
[22:38:54] *** Guyver2_ is now known as Guyver2
[22:39:45] *** Joins: dude12312414 (~test@gateway/tor-sasl/dude12312414)
[22:41:49] *** Quits: Leonard (~Administr@114.55.127.80) (Ping timeout: 240 seconds)
[22:47:05] *** Joins: gabriel1 (~gabriel1@user/gabriel1)
[22:47:53] *** Quits: jbis (~jbis@pool-108-6-219-196.nycmny.fios.verizon.net) (Remote host closed the connection)
[22:49:34] *** Quits: gabriel1 (~gabriel1@user/gabriel1) (Remote host closed the connection)
[22:52:03] *** Joins: gabriel1 (~gabriel1@user/gabriel1)
[22:53:16] *** Joins: Itaru (~Itaru@ro2.flokinet.is)
[22:54:31] *** Joins: zro (~zro@user/zro)
[22:58:03] *** Quits: gabriel1 (~gabriel1@user/gabriel1) (Ping timeout: 256 seconds)
[23:00:30] *** Joins: gabriel1 (~gabriel1@user/gabriel1)
[23:07:04] *** Joins: RawFiend (~textual@176.55.118.178)
[23:17:33] *** Joins: Leonard (~Administr@114.55.127.80)
[23:19:27] *** Quits: Leonardzzz (~Administr@114.55.127.80) (Ping timeout: 256 seconds)
[23:20:11] *** Quits: BOKALDO (~BOKALDO@user/bokaldo) (Quit: Leaving)
[23:27:02] *** Joins: Narrat (~omnius@p200300df5f0aabe806ea56fffe2e7cdc.dip0.t-ipconnect.de)
[23:29:41] *** Quits: RawFiend (~textual@176.55.118.178) (Quit: Gone away...)
[23:30:02] <dostoyevsky2> I am currently working on something to replace my login shell with a totp checking guard program, so I can run that guard shell via the command='' modifier in my authorized_keys for certain keys... a setup which OATH-TOTP pam modules don't seem to support
[23:32:20] *** Joins: Leonardzzz (~Administr@114.55.127.80)
[23:32:22] *** Quits: Leonard (~Administr@114.55.127.80) (Read error: Connection reset by peer)
[23:42:25] *** Quits: wsb (~wsb@user/wsb) (Quit: leaving)
[23:42:36] *** Joins: Leonard (~Administr@114.55.127.80)
[23:45:03] *** Joins: wsb (~wsb@user/wsb)
[23:45:05] *** Quits: Leonardzzz (~Administr@114.55.127.80) (Ping timeout: 256 seconds)
[23:50:11] *** Quits: machinedgod (~machinedg@24.105.81.50) (Ping timeout: 256 seconds)
[23:51:48] *** Joins: RawFiend (~textual@92.45.117.58)
[23:56:17] *** Quits: RawFiend (~textual@92.45.117.58) (Ping timeout: 256 seconds)
