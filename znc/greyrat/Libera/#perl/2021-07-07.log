[00:00:03] <LeoNerd> defer if $foo { ... }
[00:00:10] <LeoNerd> might work
[00:00:23] <lopid> nah
[00:00:45] <LeoNerd> currently `defer` must be followed by `{` so there's plenty of opportunity to add other things at some later date
[00:01:36] <xenu> nothing in perl works like this :P
[00:03:55] <revhippie> we need a deferred statement modifier.  do_whatever() deferred;
[00:05:13] *** Joins: Manderson (~manderson@45.40.80.170)
[00:06:59] *** Quits: __Manderson (~manderson@45.40.80.170) (Ping timeout: 265 seconds)
[00:08:38] *** Quits: txtsd (~txtsd@user/txtsd) (Ping timeout: 252 seconds)
[00:08:45] *** Joins: kitsunenokenja (~kitsunech@68.91.220.96)
[00:08:58] <simcop2387> genio: rpi4 is now flashed with the new boot code, just waiting on the windows 10 iso to build for arm64
[00:22:03] * GumbyPAN CPAN Upload: PLS-0.85 by MREISNER https://metacpan.org/release/MREISNER/PLS-0.85
[00:22:59] *** Quits: JasonNYC (~Guest73@cpe-67-49-107-16.dc.res.rr.com) (Quit: Client closed)
[00:38:14] *** Quits: kitsunenokenja (~kitsunech@68.91.220.96) (Ping timeout: 252 seconds)
[00:39:40] *** Quits: magla (~gelignite@55d4860d.access.ecotel.net) (Quit: Stay safe!)
[00:42:10] *** Quits: pj (~pj@ghettoforge/pj) (Ping timeout: 246 seconds)
[00:42:57] *** Joins: koo6 (~koo6@89-24-13-235.customers.tmcz.cz)
[00:45:14] *** Joins: txtsd (~txtsd@user/txtsd)
[00:46:55] *** Quits: Bossi (~quassel@p4fc22308.dip0.t-ipconnect.de) (Quit: http://quassel-irc.org - Chat comfortably. Anywhere.)
[00:47:23] *** Joins: tcohen (~tcohen@192.141.149.60)
[00:52:06] * GumbyPAN CPAN Upload: Book-Collate-v0.0.1 by LEAM https://metacpan.org/release/LEAM/Book-Collate-v0.0.1
[00:53:44] *** Joins: brtastic (~bartosz@185.24.91.138)
[00:54:50] *** Quits: LuksNuke (~LuksNuke@94.242.245.63) (Ping timeout: 252 seconds)
[00:54:54] <leitz> Yay!
[00:55:07] *** Joins: pj (~pj@ghettoforge/pj)
[00:59:27] *** Joins: kitsunenokenja (~kitsunech@68.91.220.96)
[01:00:26] *** Quits: Deesl (~bsdboy@redhat/psirt/Deesl) (Quit: My Mac Pro has gone to sleep. ZZZzzz‚Ä¶)
[01:00:56] <Grinnz> \o/
[01:04:00] *** Joins: Bossi (~quassel@p4fc22308.dip0.t-ipconnect.de)
[01:06:02] *** Joins: RandalSchwartz (~Adium@c-73-221-215-233.hsd1.wa.comcast.net)
[01:12:18] <leitz> There's lots of things I know of that need fixing on it, but there are probably more things other folks will find. I'm in the "release early, release often" camp.  :)
[01:12:24] *** Joins: Deesl (~bsdboy@redhat/psirt/Deesl)
[01:25:39] <leitz> Just drafted the CONTRIBUTING doc. 
[01:25:46] *** Quits: Deesl (~bsdboy@redhat/psirt/Deesl) (Quit: My Mac Pro has gone to sleep. ZZZzzz‚Ä¶)
[01:28:23] *** Quits: yzhernand (~yzhernand@129.85.8.39) (Ping timeout: 252 seconds)
[01:29:03] *** Joins: yzhernand (~yzhernand@2607:fb90:e863:7a21:a820:2eff:fe72:1c89)
[01:32:13] *** Quits: txtsd (~txtsd@user/txtsd) (Read error: Connection reset by peer)
[01:33:20] *** Quits: yzhernand (~yzhernand@2607:fb90:e863:7a21:a820:2eff:fe72:1c89) (Ping timeout: 252 seconds)
[01:33:56] *** Joins: yzhernand (~yzhernand@2607:fb90:e863:7a21:e042:baff:fee8:d917)
[01:38:21] *** Joins: txtsd (~txtsd@user/txtsd)
[01:38:57] *** Quits: tcohen (~tcohen@192.141.149.60) (Quit: My MacBook has gone to sleep. ZZZzzz‚Ä¶)
[01:40:41] *** Joins: congratulated (crazyed@2603:300a:1d10:c000:de4a:3eff:fe88:cc5f)
[01:43:15] <simcop2387> genio: so putting windows on the usb stick is *slooooowwww* for whatever reason it just stops writing for a while at times.
[01:43:38] <simcop2387> it's a nice usb stick too, 15MB/s top speed.
[01:46:45] <curdlesnoot> simcop2387: what are you using to do it?
[01:51:40] <simcop2387> curdlesnoot: windows on raspberry installer.  takes an iso built from UUP and does the install to a usb or sd card
[01:53:21] <simcop2387> once it's done i should have a reasonable windows build for making a build server for strawberry perl for arm64 windows.  we very very weirdly talked about it a few weeks ago as sort of a "this'd be cool" when genio was talking about trying to get 5.34 built since kmx is out of commision at the moment (don't know the details) then about a week ago someone came actually wanting it.
[01:53:41] <simcop2387> we don't know what it'll take to do it at all but i'm gonna try because i can.
[01:53:53] <curdlesnoot> simcop2387: oh, it actually performs an OS installation? never mind. I thought you were writing a bootable image for installation.
[01:54:06] <simcop2387> curdlesnoot: i guess? i don't know entirely how it works
[01:54:07] <curdlesnoot> some utilities are worse than others in that case.
[01:54:18] <simcop2387> this is the only way as far as i know to get a full windows install
[01:54:43] <curdlesnoot> curdlesnoot: hmm, ok. let me ask it this way. after it has completed, is the expectation that you can then boot the USB device an begin the installation process from there?
[01:54:47] <curdlesnoot> er, simcop2387 even
[01:54:55] <simcop2387> lol that's a fun tab fail :)
[01:55:14] <simcop2387> curdlesnoot: once it's done it'll boot into a windows desktop
[01:55:54] <simcop2387> https://www.youtube.com/watch?v=n1AXJjpM0L8 # this is an older video but it convers the basic idea
[01:55:55] <Paperbot> YouTube video linked by simcop2387: Windows 10 Desktop on a Raspberry Pi 4!!! - published by Gary Explains
[01:55:56] <curdlesnoot> alright. yeah, that sounds like something bespoke. never mind. I would have had a suggestion or two otherwise.
[01:56:40] <curdlesnoot> viewing.
[01:57:11] <simcop2387> it's basically sort of supported by microsoft too.  it's a result of the rpi4 uefi firmware and microsoft making arm64 builds available.  as far as i know the winpatch parts don't need to happen anymore
[01:58:30] <simcop2387> if this actually works and we get perl builds going for it then i might invest in one of the nicer compute module boards and a real ssd.  and then get it to be a cpan smoker too
[02:02:02] <curdlesnoot> I don't have any arm64 hardware but - for UEFI installations - the necessary mechanic is typically that the media be formatted as FAT32 and the files contained by the ISO simply copied into it, with only the splitting of the "install.wim" file being necessary due to FAT32 file size limits (the open-source wimlib toolkit can do it).
[02:02:10] *** Quits: yzhernand (~yzhernand@2607:fb90:e863:7a21:e042:baff:fee8:d917) (Ping timeout: 240 seconds)
[02:02:15] <curdlesnoot> maybe that imager is doing something more, though.
[02:02:42] <simcop2387> i have to imagine so, just no idea what it does though.
[02:02:48] <simcop2387> it's taken 1.5 hours to get to 23%
[02:03:00] <simcop2387> lots of bursty writing
[02:03:17] *** Joins: yzhernand (~yzhernand@129.85.8.39)
[02:03:56] <simcop2387> genio: if i actually get it booting i'll setup RDP and wireguard on a vlan for it so you can get at it once we actually see something potentially usable.
[02:04:22] <simcop2387> it'd be kinda neat to build git perls for a while too to help pretend we actually support it
[02:04:25] <curdlesnoot> some utilities in this class format the installation media as ntfs even though it's not really a requirement. that doesn't help.
[02:04:42] <genio> üëç
[02:05:09] <simcop2387> yea i'm pretty sure this does do the ntfs format based on what i see.  i suspect it's extracting cab files directly and doing all kinds of weird stuff
[02:05:15] *** Joins: nirnam (~nirnam@1.47.129.158)
[02:05:22] <curdlesnoot> yeah. it's not even needed for UEFI. sad.
[02:06:10] <simcop2387> windows needs ntfs though
[02:06:29] <curdlesnoot> the C: filesystem does, yes. booting and running the installer, no.
[02:07:14] <curdlesnoot> I've prepared flash drives with just mkfs.vfat, cp(1) and wimsplit, for instance. I couldn't confidently recommend it for hardware I don't have to hand, though.
[02:07:34] *** Quits: yzhernand (~yzhernand@129.85.8.39) (Ping timeout: 246 seconds)
[02:08:08] *** Joins: yzhernand (~yzhernand@2607:fb90:54d8:29ec:b878:ceff:fe60:2676)
[02:10:20] <simcop2387> don't think that'd work for this since i think for that method you'd need an already installed arm64 windows, wouldn't you?
[02:11:06] <simcop2387> ah shit, i broke reddit.
[02:11:12] <revhippie> simcop2387++
[02:11:34] <simcop2387> https://www.simcop2387.info/reddit.png
[02:11:48] <Adura> About time reddit broke.
[02:12:32] *** Joins: whynot (~whynot@88.155.63.129)
[02:12:50] <simcop2387> revhippie: i'm hoping we get more than just going, "ok we got mingw-llvm working, but nothing else wants to work".
[02:13:18] <curdlesnoot> simcop2387: basically, the UDF filesystem in the image contains an efi/ directory. so the mere act of copying the files over renders the media UEFI bootable. for BIOS booting and installation, it does need a special boot sector and other shenaniagns. so yeah, I did manage it with just those three tools (only tested on x86).
[02:14:06] <curdlesnoot> simcop2387: using those tools from a linux environment, I mean.
[02:16:10] *** Quits: koo6 (~koo6@89-24-13-235.customers.tmcz.cz) (Ping timeout: 240 seconds)
[02:18:35] *** Quits: furrymcgee (~devuan@31.179.186.66) (Quit: leaving)
[02:21:24] <simcop2387> ah compute module 4 doesn't work yet, https://github.com/pftf/RPi4/issues/146
[02:21:24] <Paperbot> Link title(s): [ Cannot boot Windows from eMMC on CM4 ¬∑ Issue #146 ¬∑ pftf/RPi4 ¬∑ GitHub ]
[02:24:43] <simcop2387> well we need to actually get something running and usable before worrying about that anyway
[02:24:57] <simcop2387> 24% it might finish tonight :)
[02:25:10] <simcop2387> ok dinner time
[02:30:44] *** Joins: neshpion (~neshpion@gateway/tor-sasl/neshpion)
[02:32:25] *** Quits: G_SabinoMullane (~G_SabinoM@pool-72-94-251-236.phlapa.fios.verizon.net) (Ping timeout: 246 seconds)
[02:33:27] *** Joins: G_SabinoMullane (~G_SabinoM@pool-72-94-251-236.phlapa.fios.verizon.net)
[02:33:29] *** Joins: Deesl (~bsdboy@redhat/psirt/Deesl)
[02:41:32] *** Quits: R2robot (~R2robot@user/r2robot) (Ping timeout: 252 seconds)
[02:41:52] *** Quits: yzhernand (~yzhernand@2607:fb90:54d8:29ec:b878:ceff:fe60:2676) (Ping timeout: 246 seconds)
[02:43:04] *** Joins: yzhernand (~yzhernand@38-73-255-174.starry-inc.net)
[02:47:50] *** Joins: sverzel_ (~sverzel@h-155-4-128-136.NA.cust.bahnhof.se)
[02:49:09] *** Quits: sverzel__ (~sverzel@h-155-4-128-136.NA.cust.bahnhof.se) (Remote host closed the connection)
[02:49:36] *** Quits: haj (~haj@ip5f5beb42.dynamic.kabel-deutschland.de) (Quit: Leaving.)
[02:50:35] *** Quits: Pny (pny1312@2605:6400:c847:1985::5891) (Changing host)
[02:50:35] *** Joins: Pny (pny1312@user/pny)
[02:55:06] *** Quits: zgu|skaro (~zgu@2603-7080-b744-4900-b230-24d8-b385-2d05.res6.spectrum.com) (Quit: Leaving)
[02:58:20] *** Quits: curdlesnoot (~curdlesno@2a03:1b20:1:f410::a17d) (Quit: = "")
[03:01:46] *** Quits: whynot (~whynot@88.155.63.129) (Ping timeout: 240 seconds)
[21:04:11] *** Joins: greyrat (~greyrat@ip202.ip-51-178-215.eu)
[21:04:24] *** Joins: lucerne (~lucerne@ip202.ip-51-178-215.eu)
[21:05:45] <MichaelOF> vague: I'm on openSUSE Leap 15.3, more or less brandnew. And it seems that JSON:Parse has not found it's way into the newest repos. Script ran fine in 15.2, it's a CGI running inside Apache
[21:06:00] *** Server sets mode: +nt 
[21:06:10] <leitz> Using Test::More, how do you test a sub that opens a file?    https://github.com/LeamHall/book_collate/blob/add_old_tests/lib/Book/Collate/Book.pm#L88
[21:06:11] <Paperbot> Link title(s): [ book_collate/Book.pm at add_old_tests ¬∑ LeamHall/book_collate ¬∑ GitHub ]
[21:06:53] <MichaelOF> will search for a perl specific community or experimental repo
[21:07:30] <Grinnz> MichaelOF: are you using JSON::Parse directly or via another module? I wouldn't recommend that module
[21:07:33] <thrig> touch t/somefiletoopen  then in test code open said file, etc
[21:08:29] <Grinnz> it gets the perl string model wrong, and the author threw a fit and closed the issue i opened
[21:09:20] *** Quits: randir (~randir@93.159.239.42) (Remote host closed the connection)
[21:09:39] *** Quits: lucerne (~lucerne@ip202.ip-51-178-215.eu) (Quit: Bye)
[21:10:13] <Grinnz> use JSON::MaybeXS or Cpanel::JSON::XS ideally
[21:10:27] <Grinnz> or Mojo::JSON in mojo projects, which also uses Cpanel::JSON::XS
[21:12:20] <thrig> meanwhile here is a https://github.com/thrig/ministry-of-silly-vaults/tree/master/bouncing-ball
[21:12:21] <Paperbot> Link title(s): [ ministry-of-silly-vaults/bouncing-ball at master ¬∑ thrig/ministry-of-silly-vaults ¬∑ GitHub <https://github.com/thrig/ministry-of-silly-vaults/blob/master/bouncing-ball> ]
[21:13:39] *** Joins: lucerne (~lucerne@ip202.ip-51-178-215.eu)
[21:17:40] <Grinnz> leitz: Test::More doesn't have anything for that but easiest would be to include a file in t/ for the test to open
[21:18:01] <leitz> Grinnz, thrig, thanks! I'll do that.
[21:18:04] *** Quits: seekr (~seekr@130.44.163.10) (Ping timeout: 268 seconds)
[21:19:59] *** Joins: Adura (~Adura@user/adura)
[21:20:09] *** Joins: brtastic (~bartosz@185.24.91.138)
[21:21:10] <choroba> Grinnz: re JSON::Parse: Oops. Rather than trying to learn, they closed the conversation? They seem to have a lot of modules on CPAN.
[21:21:34] <Grinnz> https://github.com/benkasminbullock/JSON-Parse/issues/46
[21:21:35] <Paperbot> Link title(s): [ parse_json suffers the "Unicode Bug" ¬∑ Issue #46 ¬∑ benkasminbullock/JSON-Parse ¬∑ GitHub ]
[21:22:51] <choroba> It kind of marks all of their modules "Do not use"
[21:23:16] <Grinnz> yeah, i used to use Gzip::Faster as it seems alright, but i switched off that a while ago as well
[21:23:50] *** Joins: seekr (~seekr@130.44.163.10)
[21:24:22] *** Joins: randir (~randir@95-25-235-134.broadband.corbina.ru)
[21:24:59] *** Quits: choroba (~E.Choroba@88.146.255.106) (Quit: Leaving)
[21:30:01] <simcop2387> Genio, new disk ready.  Seems much happier.  I suspect that usb disk needs some love (I.e. force discard it all so it can wear level properly)
[21:33:29] <simcop2387> It's a spinning rust disk so it'll probably behave better long term anyway.
[21:33:45] <simcop2387> But I'll need a bbetter enclosure long term
[21:33:54] <thrig> at least you can hear when spinnies are going bad
[21:33:57] <genio> Damn, the rain is insane right now
[21:34:37] *** Joins: Deesl (~bsdboy@redhat/psirt/Deesl)
[21:35:02] <simcop2387> Thrig, yea it's an old 5400rpm kne from a laptop.  Barely used
[21:35:19] <simcop2387> Woo, it's on the just a moment bit
[21:39:25] *** Joins: argento (~argent0@168-227-97-29.ptr.westnet.com.ar)
[21:39:56] *** Joins: gast0n (~g4570n@user/gast0n)
[21:46:09] <simcop2387> Booted!
[21:57:17] *** Joins: Su-Shee (~Susanne@p4ff49322.dip0.t-ipconnect.de)
[21:58:05] *** Quits: akaWolf (~akaWolf@akawolf.org) (Ping timeout: 252 seconds)
[21:58:35] <phryk> thanks for the info everyone, also gordonfish "use feature 'signatures';" is exactly what I'm doing. It raises a warning, but doesn't fall on its face, even tho I have "use strict;" enabled, too.
[21:58:58] *** Quits: argento (~argent0@168-227-97-29.ptr.westnet.com.ar) (Ping timeout: 240 seconds)
[21:59:17] *** Joins: brunoramoslu (~brunoramo@94.252.121.246)
[21:59:46] *** Quits: Su-Shee_ (~Susanne@p4ffc7028.dip0.t-ipconnect.de) (Ping timeout: 272 seconds)
[22:02:51] <phryk> where are my, our and state documented? Don't seem to find the right place in perldoc‚Ä¶
[22:05:01] <thrig> perldoc -f my
[22:05:01] <perlbot> thrig: Your documentation is available at: https://perldoc.perl.org/functions/my
[22:05:48] <phryk> thrig: yes okay, in the reference ‚Äì but is there no introductory text introducing their concepts?
[22:06:23] * GumbyPAN CPAN Upload: Google-RestApi-0.6 by MVSJES https://metacpan.org/release/MVSJES/Google-RestApi-0.6
[22:06:36] *** Joins: akaWolf (~akaWolf@akawolf.org)
[22:06:57] <Grinnz> perlbot: my
[22:06:57] <perlbot> Grinnz: Coping with Scoping - http://perl.plover.com/FAQs/Namespaces.html | https://github.com/mvanwinkleias/perl_tutorials/blob/master/MyOurLocalTutorial.pod | http://www.stonehenge.com/merlyn/UnixReview/col46.html
[22:07:18] <Grinnz> https://perldoc.perl.org/perlsub#Private-Variables-via-my() explains my and state
[22:07:19] <Paperbot> Link title(s): [ perlsub - Perl subroutines - Perldoc Browser ]
[22:07:27] <Grinnz> and local
[22:07:44] <Grinnz> yeah, kind of weird place for it
[22:08:12] <thrig> I guess someone could write a perlscopetut or something
[22:08:34] <phryk> Ah okay, the subroutine documentation is not where i would have expected it. Thanks Grinnz.
[22:10:25] <phryk> okay so there's `my` and `our` and that already gives plenty of potential for communist code jokes. and there's sub‚Ä¶ is there also dom so I can start making kinky leftist hacker jokes? ( Õ°¬∞ Õú ñ Õ°¬∞)
[22:10:57] <simcop2387> genio: booted, rdp working.  just have to go configure the networks and stuff for it's permanent home
[22:12:17] <simcop2387> it's about the kind of desktop experience you'd expect on a pi 4, but with windows
[22:12:45] <simcop2387> as in, you can work but it's like using a desktop from the early 2000s.
[22:12:50] <Harzilein> hmm
[22:12:58] *** Quits: seekr (~seekr@130.44.163.10) (Ping timeout: 246 seconds)
[22:12:59] <MichaelOF> vague: Harzilein: found an openSUSE repo for JSON:Parse. THANK YOU!
[22:13:03] <Harzilein> simcop2387: and that is retail?
[22:13:37] <Harzilein> simcop2387: or some crummy "sign up your main windows machine to more surveillance and you'll get this one for free"?
[22:13:56] *** Quits: leitz (~LeamHall@cpe-173-172-58-72.tx.res.rr.com) (Quit: nappy time)
[22:14:10] <simcop2387> Harzilein: kind of sort of not really.  there's no official builds, but it's kosher to make your own build from an existing and licensed windows install.  you can then get an official license for the arm64 install after that.
[22:14:23] <MichaelOF> Grinnz: I'm using JSON:Parse for a very small script, reading the json output from dockerd, parse the containers, and create a simple html about the container status
[22:14:36] <simcop2387> hrm my overclock and ram limit changes didn't take.  have to try again
[22:14:41] <vague> MichaelOF, https://en.opensuse.org/openSUSE:Packaging_Perl if you need to package other dists
[22:14:41] <Paperbot> Link title(s): [ openSUSE:Packaging Perl - openSUSE Wiki ]
[22:15:10] <Grinnz> MichaelOF: then i'd recommend switching
[22:15:41] <MichaelOF> Grinnz: to which module, and why?
[22:16:06] <Grinnz> see my earlier messages
[22:16:30] <Grinnz> https://perl.bot/raw/c215f4
[22:16:41] <ether> wow that JSON-Parse ticket is frustrating
[22:16:54] <ether> "you didn't respond to my points." <closes and locks issue so you can't>
[22:16:54] <MichaelOF> Grinnz: SORRY, just seen that you replied in general, just looked for the red lines personally to me here
[22:17:09] <Grinnz> sure
[22:17:15] <ether> the utf8 flag has been such a source of frustration...
[22:17:34] <ether> Grinnz: I wonder if we can fix that under the new RFC framework. I'm not sure how, but it could be worth a discussion
[22:17:54] <ether> if only putting out a comprehensive set of documention in core to explain how people often Do It Wrong
[22:17:55] <Grinnz> ether: i think it's a general problem with character encoding, when people think they understand it and don't
[22:18:11] <Grinnz> the utf8 bit is just another facet of that (but the name doesn't help)
[22:18:28] <ether> I've had similar frustrating conversations as you, where the person just doesn't get it and won't accept that they're not understanding something
[22:18:34] *** Quits: WinterStar (~IceLight@user/icelight) (Ping timeout: 265 seconds)
[22:18:46] <ether> so we need some sort of authoritative doc to point to and say "look, it's not just me that says so"
[22:18:48] <Grinnz> perlunitut is actually pretty good, people just don't read it or believe it
[22:18:57] <MichaelOF> vague: thanks, exactly the mentioned repo devel:languages:perl is what I now added and using
[22:19:06] <Grinnz>  / perlunifaq
[22:19:42] <simcop2387> Harzilein, basically you can do all this fine but it has some issues.  Onboard wifi and ethernet don't work but usb ethernet does.  and a few other hardware issues.  But it should work as a build server for strawberry perl on arm64.  If we get even a test build I'm gonna make a logo of a strawberry with arms
[22:20:09] *** Joins: WinterStar (~IceLight@user/icelight)
[22:20:12] <Harzilein> yeah
[22:20:21] <Harzilein> seems nice enough if it enables that
[22:21:06] <ether> perlunitut is way too high-level. it doesn't even mention the utf8 flag
[22:21:49] <ether> people who are already using it (for good or for bad) need an explanation of what it really is, so they can figure out if they're using it properly
[22:21:51] <revhippie> you can file the utf8 flag along with "sub prototypes" and "use threads" under "it's called that, but it's _not_, so don't use it"
[22:22:00] <ether> revhippie: indeed
[22:22:36] *** Joins: seekr (~seekr@130.44.163.10)
[22:23:03] <simcop2387> Harzilein, yea should be cool in the end once it's all working
[22:30:08] *** Quits: aman (~aman@user/aman) (Quit: aman)
[22:31:26] *** Quits: LuksNuke (~LuksNuke@94.242.245.63) (Ping timeout: 272 seconds)
[22:31:35] *** Quits: MichaelOF (~michael@p200300eb8f09730101b7c7bcee03fc42.dip0.t-ipconnect.de) (Quit: Konversation terminated!)
[22:32:19] <simcop2387> genio: ok getting llvm-mingw 11 and 12 downloaded.  not sure which makes sense to try to support.
[22:32:35] <phryk> Mhh, can't I use package with a {} scope so I can explicitly end the scope of a package?
[22:32:55] *** Quits: bmeneg (~bmeneg@2001:1284:f013:51b7:15d7:c:ab1:8147) (Ping timeout: 246 seconds)
[22:32:57] *** Joins: bmeneg_ (~bmeneg@2001:1284:f016:c161:678c:947b:d239:9071)
[22:33:46] <phryk> like `package foo { <definition of foo> }`
[22:34:01] <simcop2387> genio: hrm, looks like it isn't possible to support straberry on arm below vista in any capacity.  there's no arm64 c runtime for below vista (that's easily available).
[22:34:38] <ilmari> phryk: you can, since 5.14
[22:34:42] <genio> Given my idea of a supported platform matrix, I'm not complaining :)
[22:35:02] <genio> phryk: { package foo;   .... }
[22:35:12] <phryk> genio: Ah.
[22:35:16] <genio> but yea, since 5.14 you're good
[22:35:24] <xenu> simcop2387: the first windows for arm was windows 8
[22:35:26] <genio> as ilmari said
[22:35:30] <xenu> and for arm64 windows 10
[22:35:49] <genio> I plan on only supporting 64-bit builds going forward 
[22:36:00] <xenu> (and win8 couldn't run 3rd party apps officially)
[22:36:08] <buZz> it couldnt?
[22:36:16] <buZz> oh on arm
[22:36:55] <simcop2387> xenu: there was a vista build but it was different than the modern windows on arm stuff iirc.
[22:37:28] <xenu> vista was x86 and x64 only, it didn't even support itanium
[22:37:49] <xenu> (although windows 2008, which was basically the same OS, did support itanium)
[22:37:58] <xenu> before win8 there was only windows ce on arm
[22:37:58] *** Quits: Deesl (~bsdboy@redhat/psirt/Deesl) (Quit: My Mac Pro has gone to sleep. ZZZzzz‚Ä¶)
[22:38:25] <buZz> i loved that vista was NT6.0 , windows 7 was NT6.1 , windows 8 was NT6.2 and during win10 dev it was even still NT6.5 or something
[22:38:35] <buZz> win10 is the most popular vista to date, i think
[22:39:00] <thrig> kind of hard to avoid the criminal monopoly
[22:39:15] <buZz> which one?
[22:39:59] <thrig> the one John Ascroft forgot to break up
[22:40:02] <simcop2387> xenu: yea i think i'll try to build this so that it might support 8 but i'm definitely not going to try to do official support for 8 on arm.  i don't have anything that can run it
[22:42:12] *** Joins: LuksNuke (~LuksNuke@94.242.245.63)
[22:42:13] <simcop2387> rdp performance isn't the best esp when downloading stuff, but i think that's all down to usb networking
[22:42:38] <buZz> could try using a pi4 for the native networking
[22:43:24] <simcop2387> buZz: it is a pi 4 but windows on pi doesn't quite work properly with the built in networking still
[22:43:42] <buZz> oh ok, but that device does not have usb ethernet
[22:43:44] <buZz> is what i ment
[22:44:06] <simcop2387> yea but you can't currently use the non-usb ethernet, no driver
[22:44:15] <simcop2387> at least as far as i understand and it is working for me
[22:44:18] <buZz> ahh
[22:44:47] <simcop2387> i *think* if i use an insider build it can work but i didn't want that extra layer of instability
[22:44:59] <phryk> god damn, i hate when basic code from the official docs fails‚Ä¶ :/
[22:45:22] <thrig> perl probably can't run BASIC
[22:45:27] <phryk> har :P
[22:46:02] <phryk> `sub new { my $class = shift; return bless {}, $class; }` fails, saying $class wasn't initialized‚Ä¶
[22:46:25] <phryk> literally copied that code from perldoc/perlobj
[22:46:48] <phryk> this is on 5.30 btw
[22:46:56] <xenu> how did you call it?
[22:47:02] <Grinnz> ether: then i would say https://perldoc.perl.org/perlapi#SvPV which has been recently updated
[22:47:03] <Paperbot> Link title(s): [ perlapi - autogenerated documentation for the perl public API - Perldoc Browser ]
[22:47:08] <phryk> <classname>::new();
[22:47:10] <xenu> wrong
[22:47:17] <xenu> it should be ClassName->new()
[22:47:25] <phryk> oh lol right.
[22:47:27] <simcop2387> methods are always called with ->
[22:47:33] <phryk> i'm even doing that for the method call in the line after m)
[22:47:50] <Grinnz> ether: and https://perldoc.perl.org/perlguts#How-does-Perl-store-UTF-8-strings? similarly recently updated
[22:47:50] <Paperbot> Link title(s): [ perlguts - Introduction to the Perl API - Perldoc Browser ]
[22:48:05] <Grinnz> actually https://perldoc.perl.org/perlguts#Unicode-Support in general
[22:48:05] <Paperbot> Link title(s): [ perlguts - Introduction to the Perl API - Perldoc Browser ]
[22:48:52] <phryk> oh, and `package foo { <pkgdef> }` works, too. i think that's nicer syntactically than { package foo; ‚Ä¶ }
[22:48:54] <mjgardner> phryk: When you call a method with `->`, either the classname or the object is the first argument passed, thus the `shift`. If you're calling it with `::`, you're calling it as a plain function and you're not passing any arguments.
[22:49:32] <phryk> Ah thanks for clearing that up mjgardner, was already asking myself what the particular difference would be. :)
[22:50:05] <xenu> Grinnz: >Currently, Perl deals with UTF-8 strings and non-UTF-8 strings slightly differently.
[22:50:13] <xenu> that implies that there are two kinds of strings
[22:50:16] <xenu> which is completely wrong
[22:50:28] <xenu> actually it doesn't just "imply it", it just says it outright
[22:50:40] <Grinnz> then send another PR
[22:50:41] <mjgardner> phryk: You're welcome. It's nice to know why things are the way they are so they don't seem like magic.
[22:51:27] <phryk> mjgardner: i almost forgot how weird perl feels at times. it's like somewhere between C and python. interesting space.^^
[22:52:00] <mjgardner> Meh, everything has its own weirdness. Weird just means you're used to different.
[22:52:29] <xenu> perlunitut implies that there are two types of string too
[22:52:52] *** Quits: Sauvin (~sauvin@about/linux/staff/sauvin) (Ping timeout: 246 seconds)
[22:52:53] <xenu> as far as i can tell, nothing in perl documentation says that strings always consist of codepoints
[22:53:03] <phryk> I did perl a fair amount for 1-2 years a decade back, it showed me that things can be better than PHP. I'm not dissing on perl. But it's definitely a product of its time.
[22:53:13] *** helium-3 is now known as dilfridge
[22:53:40] *** Quits: mns (~mns@c-73-119-178-157.hsd1.ma.comcast.net) (Ping timeout: 268 seconds)
[22:53:42] <xenu> i'd love to fix the docs, but i don't think it's a simple task
[22:53:43] <Grinnz> xenu: the problem is in C space, they actually are stored differently
[22:54:25] <mjgardner> phryk: Yah, and it's being brought into more current times. See the recent try/catch syntax addition in 5.34 and the work on the Corinna object system.
[22:54:51] <phryk> mjgardner: I assume Corinna is something that'll be built-in as opposed to things like Moose?
[22:55:10] <simcop2387> that's the idea eventually
[22:55:14] <mjgardner> That's the plan. You can play with the syntax today using Object::Pad.
[22:55:26] <phryk> Nice to know. :)
[22:55:45] <xenu> i *personally* learned how actuall perl unicode model works from some e-mail on p5p
[22:55:50] <xenu> definitely not from the docs
[22:55:54] <simcop2387> Object::Pad is so far nice, but it takes some getting used to.
[22:56:17] <simcop2387> the whole automatic $self, and slots stuff is just so different
[22:56:45] <mjgardner> See comment above about weird and different.
[22:56:48] <thrig> slots are right out of CLOS
[22:56:52] <phryk> Being able to kind of build your own lang is a thing that's extremely powerful, but for me that felt more comfortable in Lisp. Perl was subjectively a lot harder to write clean code in.
[22:57:11] <xenu> phryk: perl and lisp have exactly the same syntax
[22:57:12] <simcop2387> phryk: have you read Higher Order Perl?
[22:57:16] <xenu> eval: (print "hello world")
[22:57:17] <perlbot> xenu: hello world
[22:57:21] <simcop2387> perlbot: hop
[22:57:21] <perlbot> simcop2387: Higher Order Perl, http://hop.perl.plover.com/, download at http://hop.perl.plover.com/book/pdf/HigherOrderPerl.pdf
[22:57:24] <xenu> the above works both in common lisp and in perl
[22:57:37] <phryk> simcop2387: no, just getting back into it. have done a bit of a refresher on basics the last 2 days.
[22:57:42] *** Joins: leitz (~LeamHall@cpe-173-172-58-72.tx.res.rr.com)
[22:58:04] <phryk> xenu: still, they are not syntactically equivalent. :P
[22:58:11] <simcop2387> phryk: once you get past the basics you'll probably find HOP helpful then if you're a lisp/functional programming mindset
[22:58:20] <phryk> and conceptually even less, i'd say.
[22:58:22] <leitz> When building a module, do you need both META.yml and META.json? Can I get rid of the yml file?
[22:58:54] <phryk> simcop2387: Eh, the last decade I've mostly written python. Lately also a tiny bit of D. Still want to learn Haskell properly at some point.^^
[22:58:56] <simcop2387> leitz: those should be fully generated for you by EUMM or MB (or MBT), you shouldn't be making or managing them by hand
[22:59:01] <Grinnz> you don't need either. they are both generated by your author tool
[22:59:13] <phryk> HoP being an open book is nice, tho. :)
[22:59:33] <leitz> HoP?
[22:59:35] <Grinnz> they should both be present in the release
[22:59:41] <phryk> Higher Order Perl^^
[22:59:44] <mjgardner> I used to work at the same company as mjd. Was nice.
[23:00:06] <thrig> rm'ing random metadata files might break random toolchain stuff
[23:00:29] <leitz> Grinnz, simcop2387, I'm looking at the Kwalitee stats and trying to clean up. I'm moving away from yaml.
[23:01:35] <xenu> Grinnz: isn't meta.yml just for legacy toolchains?
[23:01:52] <Grinnz> yes, so?
[23:02:11] <Grinnz> leitz: you don't do anything with them. they are generated by your author tool. both should be present.
[23:02:32] <xenu> well then is it needed for anything if you don't target perls older than X (replace X with a version)?
[23:02:33] *** Quits: SincereFox (uid337158@user/sincerefox) (Quit: Connection closed for inactivity)
[23:02:47] <Grinnz> shrug
[23:02:56] <Grinnz> static analyzers could still use it
[23:02:59] <xenu> i get that it's generated automatically so it doesn't cost anything to have it
[23:03:03] <xenu> i'm just wondering
[23:03:59] <Grinnz> leitz: what kwalitee stat leads you to believe anything needs to be done?
[23:04:41] <thrig> YAML delanda est
[23:04:55] <Grinnz> in fact, kwalitee is one static analyzer that does still use META.yml
[23:05:13] <Grinnz> though perhaps it actually uses CPAN::Meta and just hasn't changed the stat names
[23:05:41] *** Joins: Deesl (~bsdboy@redhat/psirt/Deesl)
[23:05:44] <Grinnz> nope, its metadata is from META.yml
[23:06:09] <mjgardner> I've seen people half-jokingly call themselves YAML programmers because of  k8s.
[23:06:25] <xenu> well personally i'm more of JPEG XL programmer
[23:06:38] <xenu> (https://dbohdan.com/wiki/jpeg-xl)
[23:06:39] <Paperbot> Link title(s): [ dbohdan: jpeg-xl ]
[23:09:40] * leitz is on the phone.  brb
[23:12:19] *** Quits: thrig (~thrig@65.113.153.50) (Remote host closed the connection)
[23:21:19] <simcop2387> xenu: there's a weight and compression joke there but i can't word it
[23:22:24] *** Joins: furrymcgee (~devuan@31.179.186.66)
[23:26:01] *** Quits: RandalSchwartz (~Adium@c-73-221-215-233.hsd1.wa.comcast.net) (Quit: Leaving.)
[23:26:44] *** Quits: jetchisel (~jetchisel@user/jetchisel) (Ping timeout: 252 seconds)
[23:27:44] <mst> mjgardner: ok, https://www.reddit.com/r/programming/comments/oevnyg/perl_debugger_superpowers_part_2/h49ohzb/?context=3 was funny
[23:27:45] <Paperbot> Link title(s): [ Perl debugger superpowers, part 2 : programming ]
[23:28:34] <leitz> Grinnz, Just looking at the Kwalitee issues   https://cpants.cpanauthors.org/release/LEAM/Book-Collate-v0.0.1
[23:28:35] <Paperbot> Link title(s): [ CPANTS ]
[23:28:41] <xenu> [deleted]
[23:28:52] <Grinnz> yes... those are issues with your metadata. nothing specific to yml
[23:28:58] <mjgardner> mst: Yah, that guy eventually did come around. Looks like he deleted his intervening comments.
[23:29:01] <leitz> The issues refer to meta_yml, so I figured I needed to clean things up.
[23:29:03] <mst> xenu: the deletion of the original anti-perl rant isn't the funny part
[23:29:59] <mjgardner> I'm getting better at swatting them down.
[23:30:00] <leitz> I'm still not sure about the "license_file" defined in the metadata:   https://cpants.cpanauthors.org/release/LEAM/Book-Collate-v0.0.1/metadata
[23:30:01] <Paperbot> Link title(s): [ CPANTS ]
[23:30:28] <Grinnz> leitz: that page is for kwalitee's internals, ignore it
[23:30:43] <leitz> Grinnz, thanks.
[23:30:51] <mst> mjgardner: ayup, just, I do already know about Corinna :D
[23:31:13] <mjgardner> The trolling "perl should die in a fire lol" comments are useless, I just downvote and move on.
[23:31:25] <mst> the -one- time I forget to sign a reddit post ...
[23:31:29] <leitz> mjgardner, I met mjd at a PerlMonger meeting in Philly, years ago. My Perl claim to fame...
[23:31:32] * GumbyPAN CPAN Upload: App-Licensecheck-v3.2.3 by JONASS https://metacpan.org/release/JONASS/App-Licensecheck-v3.2.3
[23:32:03] <mst> it's just a shame the deletion hid both our comments
[23:32:49] <mjgardner> mst: Sorry I missed it. :-(
[23:33:11] <mst> mjgardner: no, no, it was perfectly reasonable to mention those two
[23:33:39] <mst> mjgardner: it was just hilarious haaving you mention them as a recommendation cos you hadn't realised reddit's one of the few places I'm not 'mst' :
[23:33:42] <mst> "D
[23:34:10] *** Quits: zakame (~zakame@user/zakame) (Ping timeout: 240 seconds)
[23:34:15] <mst> I'm amused at it happening, not at all troubled that it did
[23:34:38] <mjgardner> Oh, this is you? https://www.reddit.com/user/matthewt/
[23:34:41] <Paperbot> Link title(s): [ matthewt (u/matthewt) - Reddit ]
[23:34:44] <mst> ayup
[23:35:46] <mst> hence my amusement :D
[23:36:47] <mjgardner> :: looks for 'embarrassed' emoji ::
[23:37:08] <simcop2387> mst: we might have a build server for strawberry perl on arm available now.  Still getting things setup and validated.
[23:37:25] <mst> normally when I post about perl stuff I sign it '-- mst' at the end so this doesn't happen
[23:37:37] <mst> but of course the -one- time I forget to do that ... :D
[23:38:21] <mjgardner> I'm just glad the post didn't get downvoted to hell like it usually does in r/programming.
[23:38:31] <mst> mjgardner: also I stand by "the important part is that it was worth mentioning those two in the thread"
[23:38:52] * mst remembers one time at oscon he dragged a couple perl hackers back to the flat of the girlfriend I was staying with
[23:39:01] <mst> "this is perigrin, this is tim"
[23:39:09] <mst> about an hour of drinking and chatting later
[23:39:17] <mst> her: so, what sort of stuff do you do with perl?
[23:39:21] <mst> him: well, I wrote DBI
[23:39:31] <mst> her: ... *squeeeeee*
[23:40:29] <mst> but I think he quite enjoyed getting an hour of just being "some dude mst knows" first
[23:41:25] *** Quits: Harzilein (harzi@user/harzilein) (Ping timeout: 268 seconds)
[23:44:57] *** Joins: emanuele6 (~emanuele6@user/emanuele6)
[23:47:43] *** Joins: mns (~mns@c-73-119-178-157.hsd1.ma.comcast.net)
[23:49:06] *** Joins: R2robot (~R2robot@user/r2robot)
[23:55:57] *** Joins: argento (~argent0@168-227-97-29.ptr.westnet.com.ar)
[23:58:37] *** Quits: brtastic (~bartosz@185.24.91.138) (Ping timeout: 265 seconds)
