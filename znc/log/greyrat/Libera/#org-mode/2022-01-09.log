[00:09:17] <fnstudio_> hi, there's this problem i have with org babel where i keep getting multiple copies of #+RESULT: added under my code blocks when i run them
[00:10:03] <fnstudio_> i understand the default behaviour should be for the result block to be replaced, as explained here https://orgmode.org/manual/Results-of-Evaluation.html#Handling
[00:11:05] <fnstudio_> but whatever i try, in my case, result blocks get replicated (appended instead of replace) over and over
[00:11:34] <fnstudio_> (which tends to be a bit of a drag as everytime i need to delete them manually)
[00:11:57] <fnstudio_> any ideas on how i could be investigating/debugging this?
[00:12:43] <ngz> Use C-c C-v C-i
[00:12:51] <ngz> (to investigate)
[00:13:00] <fnstudio_> ngz, cool, thanks
[00:13:03] <ngz> with point on the source block, that is.
[00:15:00] <fnstudio_> ngz: yeah... it seems to be fine... it reports ":results output replace"
[00:15:14] <fnstudio_> which should be what i want there
[00:15:57] <fnstudio_> i'll try to bisect or reduce this to an mwe
[00:20:04] *** Joins: _thelion_ (~user@88-117-125-60.adsl.highway.telekom.at)
[00:20:08] <fnstudio_> ah, interestingly i found a minimal setup where the issue doesn't show up
[00:20:15] <fnstudio_> so i can actually bisect this
[00:22:35] <fnstudio_> cool... apparently this is the culprit: (setq org-babel-results-keyword "result")
[00:23:34] <fnstudio_> i like the block headings to be lowercase...
[00:24:36] <fnstudio_> that works, the heading turns out as lowercase but for some reason Babel must get confused
[00:25:07] <ngz> it should be a plural form
[00:25:10] <ngz> "results"
[00:25:59] <fnstudio_> uh, really? let me try
[00:26:34] <fnstudio_> ahah! it works now, thanks ngz!!
[00:26:50] <fnstudio_> it'd have taken me ages to figure that out
[00:27:15] <fnstudio_> how grammar-picky it is though! :)
[00:27:27] <ngz> The `org-babel-results-keyword' docstring is explicit: "the value should be "RESULTS". However any capitalization may be used."
[00:27:47] *** Quits: johnw (~johnw@76-234-69-149.lightspeed.frokca.sbcglobal.net) (Quit: ZNC - http://znc.in)
[00:27:50] <fnstudio_> ngz: ah...
[00:27:52] <fnstudio_> interesting
[00:28:05] <fnstudio_> i should have looked there straightaway...
[00:28:21] <fnstudio_> thank you v much
[00:28:30] <ngz> But, I agree the UI is terrible. It should be an option that lets you decide if it should be upper case or lower case.
[00:28:57] <ngz> I mean, why would we allow "ReSulTs"?
[00:29:52] <fnstudio_> yeah, either that or an option that gives you complete freedom in choosing whatever keyword you like, and then uses that (both when printing and when - possibly - replacing a block)
[00:30:30] <ngz> No thanks.
[00:30:53] <ngz> That would hurt portability.
[00:31:02] <fnstudio_> as a matter of fact, it's much more probable that i may want to go for a different word (e.g. outcome or maybe a different locale) as opposed to rESULTS
[00:31:27] <ngz> But the syntax is not meant to be configurable.
[00:32:07] <fnstudio_> hm... ah, i see, got it
[00:33:23] <fnstudio_> ok, this is great, i now know what the reason was behind my issue and have a complete solution 
[00:42:26] <fnstudio_> ngz: something else that comes to mind, if the syntax is not meant to be configurable (and rightfully so) i think it'd be better for it to fail straightaway
[00:42:45] <fnstudio_> instead, it lets you set a different word and it actually (semi-)works
[00:42:54] <fnstudio_> i'll try and have a look at the code later
[00:43:27] <fnstudio_> and see if there's anything i can suggest (possibly not much, but i'll try)
[00:44:42] <fnstudio_> *it actually (semi-)works = result blocks are still printed, it's the append vs replace behaviour that subtly fails
[00:52:29] *** Joins: zebrag (~chris@user/zebrag)
[00:55:28] *** Joins: ManiacOfMadness (~ManiacOfM@2a02:587:3228:9900:adaa:3752:e7f7:c874)
[00:57:15] <madnificent> It seems that when caching a ruby code-block in org-babel doesn't cache the values for passing.  If you try to use the results a second time, they'll be nil.  Any clues on this or where it would be reported?
[00:57:56] <ngz> Caching has strong limitations.
[00:58:30] <madnificent> My output is a table, but when the result has already been cached, it yields nil instead.
[01:00:46] *** Joins: lxsameer (~lxsameer@user/lxsameer)
[01:01:29] <lxsameer> hey folks, is there a way to set the path for latex to use with org-mode?
[01:02:16] *** Joins: Al-Khwarizmi (~Al-Khwari@d24-57-234-201.home.cgocable.net)
[01:02:43] <ngz> lxsameer: You may want to tweak `org-latex-pdf-process'.
[01:02:46] <madnificent> ngz: I'm trying to understand but it doesn't make too much sense to me.  A raw table (just entering it) works, but when the table is a result from a cached block it doesn't.
[01:03:18] <ngz> madnificent: Could you show an example? I'm not sure to understand your isuse.
[01:03:26] <Al-Khwarizmi> Hello, I could not fine anything on the #+DESCRIPTION comment. My understanding is this is a special comment much like #+STARTUP at file loading and #+TITLE on export. I would like to have a multi-line description, What is the syntax for that?
[01:03:31] <Al-Khwarizmi> s/fine/find
[01:04:01] <lxsameer> ngz: cheers
[01:04:30] <ngz> Al-Khwarizmi: Use multiple description keywords?
[01:05:11] <Al-Khwarizmi> No syntax for a paragraph comment that starts with #+?
[01:05:50] <ngz> Sorry, I don't understand your question.
[01:05:58] *** Quits: perrierjouet (~perrier-j@modemcable012.251-130-66.mc.videotron.ca) (Quit: WeeChat 3.4)
[01:06:39] <Al-Khwarizmi> alright, let me put it another way. What can I use the #+description for?
[01:07:26] *** Quits: ManiacOfMadness (~ManiacOfM@2a02:587:3228:9900:adaa:3752:e7f7:c874) (Ping timeout: 268 seconds)
[01:08:12] <ngz> Apparently, some export back-ends make use of this. For example, HTML back-end will put its value in HTML head.
[01:08:43] <ngz> I don't think there's a standard use for it. It depends on the export format.
[01:09:12] <Al-Khwarizmi> ah I see.
[01:10:29] <Al-Khwarizmi> Now, if I have multiple descriptions they will be multiple tags?
[01:10:32] <Al-Khwarizmi> in the header?
[01:10:53] <madnificent> ngz: https://pastebin.com/2qDMBZjW
[01:11:16] <ngz> Al-Khwarizmi: No idea, I don't use ox-html.el. Just try.
[01:11:33] <Al-Khwarizmi> thanks.
[01:12:47] <madnificent> ngz: workarounds on how I can get multi-dimensional tables into bash are more then welcome.  if it works there, then I'm good to go too.
[01:14:01] <Al-Khwarizmi> ngz: #+ comments are properties as in :PROPERTY: drawers?
[01:14:14] <Al-Khwarizmi> :PROPERTIES: *
[01:16:55] <madnificent> ngz: It could be something really silly and I don't mind trying out workarounds.
[01:17:18] <ngz> #+... are called keywords. They are not like properties, excepted #+PROPERTY: ... keyword
[01:18:00] <ngz> madnificent: Could you try to name your cached results, e.g., #+name: cached-table
[01:18:29] <ngz> madnificent: and then apply your code on :var table=cached-table
[01:19:16] <madnificent> ngz: as in: adding #+name: ... above #+RESULTS[8707faed7ba58317c669d2ebe54db2df55b0cc83]: processed-table-with-cache ?
[01:19:22] <ngz> Yes
[01:19:29] <ngz> You name the table
[01:20:19] <madnificent> ngz: if I give it a different name than the name of the code-block, it works
[01:20:59] <madnificent> Ah, and it won't recalculate the results.  So this is a workaround.  But that probably also points you to the root of the issue?
[01:21:27] <ngz> I think your slightly confused here. #+results: does not name data.
[01:21:31] <madnificent> ngz: thanks for this!
[01:21:32] <ngz> you're
[01:21:59] <ngz> So, you don't give it a different name, you name the table when it was unnamed.
[01:22:33] <madnificent> ngz: hmmm.  then why am I referring to the results of a code-block if the code-block is not cached?
[01:24:06] <madnificent> ngz: And perhaps also, why would it work if the output came from bash?  Would that be because it's capturing output, rather than values?
[01:24:19] <ngz> Possibly.
[01:25:28] <ngz> when you write table=processed-table-with-cache, your referring to the output of the code block. Since the code block is not re-evaluated, there's nothing to store.
[01:25:34] <ngz> you're
[01:25:51] *** Joins: perrierjouet (~perrier-j@modemcable012.251-130-66.mc.videotron.ca)
[01:28:51] <madnificent> i got disconnected for a moment and I lost the relevant portion of the chat.  could you repeat if you added anything?
[01:29:44] <ngz> when you write table=processed-table-with-cache, you're referring to the output of the code block. Since the code block is not re-evaluated, there's nothing to store.
[01:29:51] <ngz> I stopped there
[01:30:25] <madnificent> can I make it refer to the resulting table instead?  is that a different type of variable or somesuch?
[01:30:37] *** Quits: madix (~madix@april/staff/madix) (Ping timeout: 240 seconds)
[01:30:59] <ngz> This is what you did by adding a name to the table, and using that name in the :var header
[01:31:44] <madnificent> so it's intended that I add a name to the resulting table when i use the caching mechanism?  i find it weird that writing :cache yes is not transparent.
[01:34:28] <ngz> As I wrote earlier, caching has limitations. What you did actually works sometimes, but it's rather unpredictable. It may be related to the type of output. OTOH, if the code block result is stable, you can always use it as data.
[01:35:44] <ngz> IOW, I don't know what is indented, but the above works, soâ€¦
[01:35:52] <madnificent> ngz: thank you for helping me understand. I'm going to place it under a thought-bucket of "I'm not sure why this happens, but I know a workaround" for now.
[01:36:13] <madnificent> thanks a whole lot, actually.  it helps me dig through my current task :)
[02:01:25] *** Quits: ngz (~ngz@user/ngz) (Ping timeout: 240 seconds)
[02:06:57] *** Quits: ardon (~user@user/ardon) (Read error: Connection reset by peer)
[02:22:58] <lxsameer> hey folks, have you ever used komascripts with org mode?
[02:29:08] *** Quits: _thelion_ (~user@88-117-125-60.adsl.highway.telekom.at) (Quit: ERC (IRC client for Emacs 27.2))
[02:38:31] *** Joins: ardon (~user@user/ardon)
[02:44:24] <sm2n> the latex packages?
[02:44:26] <sm2n> I have
[02:44:38] <sm2n> What about it?
[02:45:19] <lxsameer> sm2n: did you have to make any change or setup for org mode to play nice with it?
[02:46:23] <sm2n> iirc I added the documentclass as per org-mode docs, with a custom preamble etc
[02:46:33] <sm2n> I don't think I changed org defaults otherwise
[02:46:45] <sm2n> But this was several years ago so I don't remember exactly what I did
[02:47:08] <lxsameer> sm2n: ahhh a custom preamble
[02:47:21] <lxsameer> thanks that was a good hint
[02:47:46] <sm2n> org-mode docs seem to suggest making global changes to your configuration, but I would not recommend that
[02:48:15] <sm2n> imo it's nicer to have all the necessary info to build the document in the document
[02:48:37] <sm2n> so I suggest using emacs's facility for file-local variables for this kind of thing
[02:49:19] <lxsameer> sm2n: will do, but could you please point me to that doc?
[02:49:53] *** Quits: GNUmoon (~GNUmoon@gateway/tor-sasl/gnumoon) (Remote host closed the connection)
[02:50:18] *** Joins: GNUmoon (~GNUmoon@gateway/tor-sasl/gnumoon)
[02:50:21] <sm2n> this? <https://www.gnu.org/software/emacs/manual/html_node/emacs/Specifying-File-Variables.html>
[02:51:57] <lxsameer> gotcha thanks
[02:57:28] *** Quits: selfsymmetric-mu (~matt@c-73-10-148-139.hsd1.nj.comcast.net) (Remote host closed the connection)
[03:02:55] *** Quits: ardon (~user@user/ardon) (Remote host closed the connection)
[03:04:01] <fnstudio_> hi, i have a org mode file with some babel blocks that i'd like to publish to HTML; i have a publish.el file and everything works actually pretty well with the exception of the results blocks that don't seem to get printed
[03:05:35] <fnstudio_> it might be worth to mention that the code blocks have all been manually run and the results block are regularly visible in the file
[03:05:45] <fnstudio_> i make use of org-html-publish-to-html for publishing
[03:06:11] <fnstudio_> which makes me wonder whether i should be using a different publishing backend
[03:07:04] <fnstudio_> i know i can have all blocks to be rerun during the export/publishing step (i think i have another babel file that i was able to configure that way)
[03:07:11] <fnstudio_> however, in this particular case, i
[03:07:39] <fnstudio_> ...i'd like to have the results printed as they are in the org file
[03:07:53] <fnstudio_> with no code to be re-executed
[03:11:47] <fnstudio_> ah... i might have fixed it... hold on
[03:12:18] <fnstudio_> possibly with this: (setq org-export-babel-evaluate nil) ?
[03:12:31] <fnstudio_> (in my publish.el)
[03:14:38] *** Joins: ardon (~user@user/ardon)
[03:24:12] *** Quits: aleck (~aleck@user/aleck) (Ping timeout: 256 seconds)
[03:56:53] *** Quits: seschwar (~seschwar@user/seschwar) (Quit: :wq)
[04:21:49] *** Quits: lxsameer (~lxsameer@user/lxsameer) (Ping timeout: 240 seconds)
[04:23:57] *** Joins: lxsameer (lxsameer@user/lxsameer)
[04:41:53] *** Joins: aleck (~aleck@user/aleck)
[04:47:25] *** Quits: algae (~algernon@170.10.246.117) (Ping timeout: 240 seconds)
[04:53:10] *** Quits: lxsameer (lxsameer@user/lxsameer) (Ping timeout: 256 seconds)
[05:00:37] *** Quits: nullx002 (~nullx002@2402:8100:3981:7659:4510:6c7:3fc2:bf2c) (Ping timeout: 240 seconds)
[05:06:21] *** Joins: kickingv1gas (~cchoi@c-24-5-40-20.hsd1.ca.comcast.net)
[05:08:37] *** Quits: kickingvegas (~cchoi@c-24-5-40-20.hsd1.ca.comcast.net) (Ping timeout: 240 seconds)
[05:12:05] *** Joins: selfsymmetric-mu (~matt@c-73-10-148-139.hsd1.nj.comcast.net)
[05:13:01] *** Quits: selfsymmetric-mu (~matt@c-73-10-148-139.hsd1.nj.comcast.net) (Remote host closed the connection)
[05:14:25] *** Joins: selfsymmetric-mu (~matt@c-73-10-148-139.hsd1.nj.comcast.net)
[05:29:54] *** Joins: algae (~algernon@170.10.246.117)
[05:31:34] *** Quits: Al-Khwarizmi (~Al-Khwari@d24-57-234-201.home.cgocable.net) (Quit: Lost terminal)
[05:34:12] *** Joins: vysn (~vysn@user/vysn)
[05:36:44] *** Zweihander is now known as zwei
[05:53:05] *** Quits: cliluw (~cliluw@47.147.73.223) (Ping timeout: 256 seconds)
[05:53:26] *** Joins: cliluw (~cliluw@47.147.73.223)
[05:56:04] *** Quits: plitter (~plitter@user/plitter) (Ping timeout: 256 seconds)
[06:16:25] *** Joins: junebug (~junebug@2600:1700:3db0:2540:ccfa:2f24:22:a481)
[06:17:17] *** Quits: junebug (~junebug@2600:1700:3db0:2540:ccfa:2f24:22:a481) (Remote host closed the connection)
[06:41:50] *** Quits: raeburn (~user@c-24-60-138-149.hsd1.ma.comcast.net) (Remote host closed the connection)
[06:46:10] *** Joins: nullx002 (~nullx002@106.66.56.216)
[07:12:39] *** Joins: dirtcastle (~dirtcastl@2409:4072:6d1a:950b:146f:2bff:fe36:2621)
[07:13:51] *** Joins: xaltsc (~xaltsc@user/xaltsc)
[07:16:37] *** Quits: dirtcastle (~dirtcastl@2409:4072:6d1a:950b:146f:2bff:fe36:2621) (Ping timeout: 240 seconds)
[07:17:14] *** Joins: dirtcastle (~dirtcastl@103.43.203.226)
[07:31:19] *** Quits: skapata (~Skapata@user/skapata) (Remote host closed the connection)
[07:42:58] *** Quits: algae (~algernon@170.10.246.117) (Quit: WeeChat 3.4)
[08:17:36] *** Quits: tyson2 (~user@bras-base-toroon0624w-grc-19-70-31-33-162.dsl.bell.ca) (Remote host closed the connection)
[08:28:13] *** Quits: nullx002 (~nullx002@106.66.56.216) (Ping timeout: 240 seconds)
[08:28:21] *** Parts: pranavats (3fba1d1b34@jabberfr.org) (Error from remote client)
[08:29:04] *** Joins: pranavats (3fba1d1b34@jabberfr.org)
[08:47:03] *** Quits: dirtcastle (~dirtcastl@103.43.203.226) (Quit: Quit)
[08:47:11] *** Joins: dirtcastle (~dirtcastl@103.43.203.229)
[09:33:53] *** Quits: bsd4me (~IceChat95@user/bsd4me) (Quit: Hard work pays off in the future, laziness pays off now)
[09:45:04] *** Quits: jealousmonk (~user@2804:431:e7c4:750a:e8f5:ebdf:f21a:128e) (Quit: ERC (IRC client for Emacs 27.1))
[10:01:26] *** Quits: JSR (~jasonjsr@c-71-59-145-34.hsd1.or.comcast.net) (Ping timeout: 256 seconds)
[10:02:41] *** Quits: zebrag (~chris@user/zebrag) (Quit: Konversation terminated!)
[10:13:25] *** Quits: stef204 (~stef204@user/stef204) (Ping timeout: 240 seconds)
[10:22:37] *** Quits: YoungFrog (~youngfrog@2a02:a03f:c21b:f900:f484:3278:789d:d6a5) (Remote host closed the connection)
[10:22:56] *** Joins: YoungFrog (~youngfrog@39.129-180-91.adsl-dyn.isp.belgacom.be)
[10:29:23] *** Quits: dirtcastle (~dirtcastl@103.43.203.229) (Remote host closed the connection)
[10:32:14] *** Joins: dirtcastle (~dirtcastl@103.43.203.229)
[10:51:03] *** Joins: Tipex (~Tipex@user/tipex)
[10:54:03] *** Quits: Tipex (~Tipex@user/tipex) (Quit: Client closed)
[10:54:39] *** Joins: Tipex (~Tipex@user/tipex)
[10:56:02] *** Quits: Tipex (~Tipex@user/tipex) (Client Quit)
[10:59:32] *** Joins: Tipex (~Tipex@user/tipex)
[11:02:02] *** Quits: Tipex (~Tipex@user/tipex) (Client Quit)
[11:34:39] *** Quits: unluckyshrubbery (~unluckysh@45-19-33-188.lightspeed.livnmi.sbcglobal.net) (Quit: ZNC 1.8.2 - https://znc.in)
[11:35:04] *** Joins: ur5us_ (~ur5us@2406:e002:6c7b:2301:1b18:b746:eaa9:fad6)
[11:51:24] *** Quits: dirtcastle (~dirtcastl@103.43.203.229) (Remote host closed the connection)
[11:59:18] *** Joins: dirtcastle (~dirtcastl@103.43.203.229)
[12:00:43] *** Quits: kickingv1gas (~cchoi@c-24-5-40-20.hsd1.ca.comcast.net) (Quit: leaving)
[12:16:08] *** Joins: ur5us__ (~ur5us@203.86.198.200)
[12:18:57] *** Quits: ur5us_ (~ur5us@2406:e002:6c7b:2301:1b18:b746:eaa9:fad6) (Ping timeout: 240 seconds)
[12:52:39] *** Joins: lxsameer (~lxsameer@user/lxsameer)
[13:12:57] *** Joins: seschwar (~seschwar@user/seschwar)
[13:19:52] *** Joins: unluckyshrubbery (~unluckysh@45-19-33-188.lightspeed.livnmi.sbcglobal.net)
[13:34:42] *** Parts: pranavats (3fba1d1b34@jabberfr.org) (Error from remote client)
[13:42:28] *** Joins: rito_ (~rito_gh@45.112.243.206)
[13:44:33] *** Quits: ur5us__ (~ur5us@203.86.198.200) (Ping timeout: 256 seconds)
[14:02:58] *** Joins: pranavats (3fba1d1b34@jabberfr.org)
[14:18:17] *** Joins: ngz (~ngz@user/ngz)
[14:29:25] <konubinix> fnstudio_: To export stuff without evaluating, I have those variables set
[14:29:31] <konubinix> http://ix.io/3LCv
[14:30:54] <konubinix> I took me a long time to find out a way to export code blocks and the result as they are, without evaluating them
[14:31:36] <konubinix> Now, I don't remember how it works, but it is the setup I use to generate my blog and braindump
[14:31:43] <konubinix> And it works 
[14:32:34] <konubinix> Maybe there are some global variables in my setup that also impact the export, so I don't know if it will work for you
[14:32:56] <konubinix> But I hope it gives you some food for thoughts :-)
[14:34:17] <konubinix> For instance, I can export this note without evaluating the code blocks https://konubinix.eu/braindump/posts/25b52cc8-71f8-420f-9161-5c60030cede9/?title=make_org_babel_sh_evaluate_handle_noop_lines
[14:37:36] *** Joins: plitter (~plitter@78.31.86.243)
[14:44:49] *** Joins: jlrnick (~josephler@2a01cb040a159400e1a03ee1c031b0f8.ipv6.abo.wanadoo.fr)
[15:07:56] *** Parts: pranavats (3fba1d1b34@jabberfr.org) (Error from remote client)
[15:10:33] *** Joins: pranavats (3fba1d1b34@jabberfr.org)
[15:19:13] <fnstudio_> konubinix: thanks, very kind of you sharing your setup; my (possibly wrong) understanding is that there are two separate steps, exporting and publishing; i was able to prevent the (re-)evaluation of the code blocks by only launching the publishing
[15:19:27] *** Joins: tyson2 (~user@bras-base-toroon0624w-grc-19-70-31-33-162.dsl.bell.ca)
[15:20:06] <fnstudio_> or maybe that's just a wrong model i have in my head, scrap that - but (setq org-export-babel-evaluate nil) did fix it for me
[15:21:16] <fnstudio_> on a slightly different note, after cleaning up my init.el a bit, i now see that fill-paragraph totally messes things up in org babel code blocks
[15:21:46] <fnstudio_> is there any obvious piece of config that i should be looking at and possibly re-instating?
[15:24:03] <fnstudio_> if editing a, for instance, python file "natively" (i mean, outside of org mode), M-q works as expected
[15:31:13] <Demosthenex> fnstudio_: open the source block in the mini-editor (C-c ') and M-q should work fine
[15:31:50] <fnstudio_> Demosthenex: thanks, let me try
[15:32:52] <Demosthenex> org tries to overlay some of the major mode editing over source blocks, but it isn't perfect.
[15:33:39] <fnstudio_> Demosthenex: it works perfectly from within the mini-editor, thanks!
[15:34:01] <fnstudio_> still a bit frustrating because i have the feeling this did use to work until just yesterday
[15:34:30] <fnstudio_> when i say it used to work, i mean from within the code block itself, directly in the main org file
[15:36:06] <fnstudio_> Demosthenex: from what you say in terms of the overlaying of major modes, it might sound as an issue of precedence/priority between configs (that i might have messed with moving things around in my init.el)?
[15:37:06] *** Quits: philipsd6 (~philipsd6@185.215.227.67) (Quit: Ping timeout (120 seconds))
[15:37:36] *** Joins: philipsd6 (~philipsd6@185.215.227.67)
[15:39:15] *** Quits: x88x88x (~x88x88x@149.28.53.172) (Remote host closed the connection)
[15:40:06] *** Joins: x88x88x (~x88x88x@149.28.53.172)
[15:40:23] *** Joins: ManiacOfMadness (~ManiacOfM@2a02:587:3228:9900:adaa:3752:e7f7:c874)
[15:40:28] <Demosthenex> fnstudio_: not configs. org has keybinds and behaviors, it is the major mode
[15:40:33] <Demosthenex> there can only be ONE major mode at any time
[15:41:03] <Demosthenex> overlapping hotkeys is part of it, but also the behavior of the edit buffer.
[15:41:20] <Demosthenex> so you'll never edit python or other code in org as well as you would in a buffer for that code type
[15:41:40] <Demosthenex> org does a reasonably good job, but it's "wrapping" for lack of a better term
[15:42:19] <Demosthenex> i believe it basicaly tries to assign a major mode over the text block, but has to keep org's keys on top
[15:53:49] *** Quits: xaltsc (~xaltsc@user/xaltsc) (Read error: Connection reset by peer)
[15:58:50] <fnstudio_> Demosthenex: oh i see, thanks, that's very clear and helpful - yes i had a sense there can only be one major mode active at a time, but thanks for explaining all the rest
[16:00:53] <fnstudio_> yeah, but i do think there's some issue here - that goes beyond the limitations of a best-effort wrapping - here's what i tried:
[16:02:01] <fnstudio_> i used `C-h k' agains `M-q' in my org file and it says that's bound to `org-fill-paragraph' (instead of `fill-paragraph', i guess)
[16:02:36] <fnstudio_> now, the description of `org-fill-paragraph' says "This function only applies to comment blocks, comments, example blocks and paragraphs."
[16:03:01] <fnstudio_> so it shouldn't do anything, i understand?, within a org babel code block?
[16:03:27] *** Quits: ManiacOfMadness (~ManiacOfM@2a02:587:3228:9900:adaa:3752:e7f7:c874) (Ping timeout: 268 seconds)
[16:03:28] <fnstudio_> so it's either a small bug or, very possibly, an issue with my init.el?
[16:10:54] *** Quits: lxsameer (~lxsameer@user/lxsameer) (Ping timeout: 256 seconds)
[16:11:16] <Demosthenex> fnstudio_: i think org-fill-paragraph wraps fill-paragraph, maybe if it lacks context it calls the original?
[16:20:37] <fnstudio_> yeah, thanks Demosthenex, i'm having a look at the source now, trying to make sense of it
[16:21:43] <fnstudio_> it seems to be repeatedly applying `org-fill-element', so now having a look at that
[16:24:53] *** Joins: ManiacOfMadness (~ManiacOfM@2a02:587:3228:9900:adaa:3752:e7f7:c874)
[16:25:06] <fnstudio_> yeah, but you're right (of course), it boils down to `(funcall-interactively #'fill-paragraph justify 'region)'
[16:29:23] <fnstudio_> hm, there's something i don't fully get... here: https://git.savannah.gnu.org/cgit/emacs/org-mode.git/tree/lisp/org.el#n19758
[16:29:40] <fnstudio_> in `org-fill-element'
[16:30:18] <fnstudio_> it says that "This function only applies to comment blocks, comments, example blocks and paragraphs."
[16:30:55] <fnstudio_> but it then does call `fill-paragraph' on src-blocks
[16:31:19] <fnstudio_> although it's very likely that i'm misunderstanding something
[16:31:42] <Demosthenex> fnstudio_: isn't fill-paragraph the default case?
[16:31:56] <Demosthenex> org overlays that function with it's own and only handles it's own special behaviors
[16:33:18] <Demosthenex> it's likely that python-mode has it's own py-fill-paragraph to overlay fill-paragraph called on M-q in that mode, and then org only falls back to fill-paragraph, not py-fill-paragraph
[16:34:18] <fnstudio_> Demosthenex: i'd say i have a problem with what stated by the docstring: This function only applies to comment blocks, comments, example ...
[16:34:30] <Demosthenex> fnstudio_: yes, the ORG function only applies to those
[16:34:38] <fnstudio_> if that were true, things shouldn't be passed on to fill-paragraph
[16:37:48] <Demosthenex> mind you i'm talking pie in the sky, i'm trying to follow the code now
[16:38:51] <fnstudio_> Demosthenex: hey, thanks for taking the time! so appreciated!!
[16:39:09] <fnstudio_> i do see there's a couple of changes that were applied just a few months ago
[16:39:19] <fnstudio_> at some point in Sept 2021
[16:40:03] <fnstudio_> so i'm wondering if that might have slightly changed (possibly in the right way) the way this works - and hence the different behaviour i'm experiencing now
[16:40:35] <Demosthenex> well, first question is are you sure it ever worked?
[16:40:53] <Demosthenex> second my basic assertion is while org does many things, if you really want to code python do it in a python buffer ;]
[16:42:17] <fnstudio_> not 100%, but i'm strongly inclined to think it used to work (differently) as it's too noticeable given my `M-q' habit
[16:43:56] <fnstudio_> Demosthenex: yeah, fair point re using the proper major mode - i'm very keen on this literate programming thing, and fixing this little M-q snag seems achievable
[16:45:45] <fnstudio_> i know that the proper major mode is only a "C-c '" away (i know now, thank you for that!! :)) but it does gets in the way of the user experience a little bit
[16:47:04] <Demosthenex> fnstudio_: literate programming is fine, you might just need to use the C-c ' to pop up the snippet in the correct mode
[16:47:20] <Demosthenex> yeah, emacs has a hard limit of one major mode per buffer.
[16:47:28] <Demosthenex> which is why org can't be perfect in that emulation
[16:49:08] <fnstudio_> this change seems ok to me: https://git.savannah.gnu.org/cgit/emacs/org-mode.git/commit/lisp/org.el?id=05ee1e6ee06db711198b211867788c39cd08f911
[16:51:15] <fnstudio_> and this too, as far as i can tell, https://git.savannah.gnu.org/cgit/emacs/org-mode.git/commit/lisp/org.el?id=db167b99997a0f01c71caf3a118e5e9af77abee4
[16:51:27] <fnstudio_> *this one too
[16:58:14] <Demosthenex> if you track it down, be sure to post on the mL
[17:10:31] <fnstudio_> yeah, i've gone quite far back in time and i can't see anything suspicious
[17:12:32] <fnstudio_> so it must have been some local change on my side; although i may still reach out to the ML to ask how that function works and whether it really should ultimately call fill-paragraph
[17:13:02] <fnstudio_> thanks for all your help by the way
[17:14:30] *** Quits: x88x88x (~x88x88x@149.28.53.172) (Quit: ZNC - https://znc.in)
[17:15:56] <Demosthenex> certainly
[17:32:13] *** Joins: x88x88x (~x88x88x@2001:19f0:5:39a8:5400:3ff:feb6:73cb)
[17:48:41] *** Quits: tyson2 (~user@bras-base-toroon0624w-grc-19-70-31-33-162.dsl.bell.ca) (Remote host closed the connection)
[18:01:17] *** Quits: jlrnick (~josephler@2a01cb040a159400e1a03ee1c031b0f8.ipv6.abo.wanadoo.fr) (Ping timeout: 240 seconds)
[18:04:39] *** Quits: rito_ (~rito_gh@45.112.243.206) (Ping timeout: 256 seconds)
[18:09:14] *** Quits: ardon (~user@user/ardon) (Read error: Connection reset by peer)
[18:15:03] *** Joins: n2linux (~n2linux@cpe-68-201-121-168.gt.res.rr.com)
[18:16:18] *** Quits: n2linux (~n2linux@cpe-68-201-121-168.gt.res.rr.com) (Client Quit)
[18:24:26] *** Joins: skapata (~Skapata@2804:14c:87b0:a6f9:b9d4:dfb1:ac7d:59bf)
[18:24:27] *** Quits: skapata (~Skapata@2804:14c:87b0:a6f9:b9d4:dfb1:ac7d:59bf) (Changing host)
[18:24:27] *** Joins: skapata (~Skapata@user/skapata)
[18:33:41] *** Joins: xaltsc (~xaltsc@user/xaltsc)
[18:37:59] *** Joins: JSR (~jasonjsr@c-71-59-145-34.hsd1.or.comcast.net)
[18:41:39] *** Joins: tyson2 (~user@bras-base-toroon0624w-grc-19-70-31-33-162.dsl.bell.ca)
[18:45:09] *** Quits: nunggu (~q@gateway/tor-sasl/nunggu) (Ping timeout: 276 seconds)
[18:46:54] *** Joins: nunggu (~q@gateway/tor-sasl/nunggu)
[19:08:30] *** Joins: wizzo (~wizzo@user/wizzo)
[19:12:16] *** Joins: stef204 (~stef204@user/stef204)
[19:39:11] *** Quits: YoungFrog (~youngfrog@39.129-180-91.adsl-dyn.isp.belgacom.be) (Quit: ZNC 1.7.x-git-3-96481995 - https://znc.in)
[19:40:46] *** Joins: YoungFrog (~youngfrog@2a02:a03f:c21b:f900:f89b:2c73:97b1:7ba3)
[19:46:27] *** Joins: anotheryou (uid257186@user/anotheryou)
[19:46:50] <anotheryou> hi. does anyone have a nice screenshot or image paste to folder and path in clipboard script for me? :)
[19:47:07] <anotheryou> on linux
[19:47:35] <Demosthenex> anotheryou: sorry? can you explain that again?
[19:48:04] <Demosthenex> there are screenshot tools, yes, and i use a function in org to take screenshots with imagemagick and link it into my file
[19:48:15] <anotheryou> I want to add screenshots to my notes. So I'd like to make a screenshot, have it saved to my /org/img folder and than be able to paste ./img/screenshot.png or something
[19:48:36] <anotheryou> and do you know how bad images are for performance when somewhere folded in the tree?
[19:49:02] <anotheryou> my org file is out of control with 50k lines or so. I don't like splitting in to different files -_-. But I guess I have to, just for performance sake
[19:49:24] <anotheryou> oh, food is done. will be back :)
[20:02:21] <anotheryou> and back :)
[20:04:03] <anotheryou> Ah I found something https://stackoverflow.com/a/46268816
[20:04:15] <anotheryou> but does anyone know about performance?
[20:14:17] *** Quits: vysn (~vysn@user/vysn) (Ping timeout: 240 seconds)
[20:15:45] *** Joins: jealousmonk (~user@2804:431:e7c4:750a:e8f5:ebdf:f21a:128e)
[20:32:20] *** Joins: lxsameer (~lxsameer@user/lxsameer)
[20:36:11] *** Quits: ManiacOfMadness (~ManiacOfM@2a02:587:3228:9900:adaa:3752:e7f7:c874) (Ping timeout: 252 seconds)
[20:37:10] *** Quits: gxt (~gxt@gateway/tor-sasl/gxt) (Quit: WeeChat 3.4)
[20:38:46] *** Joins: gxt (~gxt@gateway/tor-sasl/gxt)
[20:55:25] *** Joins: ManiacOfMadness (~ManiacOfM@2a02:587:3228:9900:adaa:3752:e7f7:c874)
[21:11:19] <Demosthenex> anotheryou: performance on length is ok
[21:11:24] <Demosthenex> long lines lag
[21:11:32] <Demosthenex> you can also enable/disable images
[21:11:48] <Demosthenex> and you can clone an indirect buffer of the tree heading you're on, so you can minimize lag
[21:12:11] <anotheryou> Demosthenex: you mean indirect buffer and then narrow the tree?
[21:12:31] <Demosthenex> nope.
[21:12:33] <anotheryou> my poor work computer is already huffing and puffing :)
[21:12:43] <Demosthenex> org-tree-to-indirect-buffer
[21:13:05] <Demosthenex> starts at cursor, grabs all chidlren
[21:13:57] *** Quits: TheCoffeMaker (~TheCoffeM@user/thecoffemaker) (Ping timeout: 240 seconds)
[21:15:12] <anotheryou> ah I see. kind of what I meant I think. great
[21:24:54] *** Quits: dirtcastle (~dirtcastl@103.43.203.229) (Remote host closed the connection)
[21:33:59] *** Quits: ManiacOfMadness (~ManiacOfM@2a02:587:3228:9900:adaa:3752:e7f7:c874) (Ping timeout: 268 seconds)
[21:37:14] *** Joins: makomo (~makomo@user/makomo)
[21:37:33] *** Joins: compro (~user@2401:4900:382f:2f5b:1f19:442f:ce7c:285e)
[21:37:38] <compro> Hello
[21:38:08] <compro> How to prevent org export from prefixing URLs with file://?
[21:45:24] *** Joins: johnw (~johnw@2607:f6f0:3004:1:c8b4:50ff:fef8:6bf0)
[21:54:22] *** Joins: rito_ (~rito_gh@45.112.243.149)
[21:57:18] *** Joins: ardon (~user@user/ardon)
[22:02:57] *** Quits: compro (~user@2401:4900:382f:2f5b:1f19:442f:ce7c:285e) (Ping timeout: 240 seconds)
[22:03:46] *** Joins: dirtcastle (~dirtcastl@103.43.203.226)
[22:05:30] <fnstudio_> hi, when exporting to HTML i would expect my source blocks to be highlighted, but that doesn't seem to be the case
[22:05:46] <fnstudio_> i have htmlize.el regularly installed
[22:06:16] <fnstudio_> the generated HTML looks fine otherwise
[22:06:43] <fnstudio_> but the code blocks only have a combination of normal, bold, and italic fonts
[22:07:07] <fnstudio_> no colours though
[22:08:01] <fnstudio_> any idea why this might be the case?
[22:08:52] *** Joins: jlrnick (~josephler@2a01cb040a159400e1a03ee1c031b0f8.ipv6.abo.wanadoo.fr)
[22:13:20] <Demosthenex> fnstudio_: did you specify src block and language?
[22:16:24] *** Joins: aleck1 (~aleck@user/aleck)
[22:19:14] *** Quits: aleck (~aleck@user/aleck) (Ping timeout: 256 seconds)
[22:34:28] <fnstudio_> yes, Demosthenex, i did
[22:35:27] *** Joins: TheCoffeMaker (~TheCoffeM@user/thecoffemaker)
[22:38:21] *** Quits: dirtcastle (~dirtcastl@103.43.203.226) (Ping timeout: 256 seconds)
[22:39:23] *** Joins: dirtcastle (~dirtcastl@2409:4072:6e0b:7ead:2c57:c7ff:fe87:4752)
[22:40:46] *** Quits: dirtcastle (~dirtcastl@2409:4072:6e0b:7ead:2c57:c7ff:fe87:4752) (Client Quit)
[22:47:18] *** Joins: dirtcastle (~dirtcastl@2409:4072:6e0b:7ead:cb1:13ff:fee7:e873)
[22:47:49] *** Quits: jlrnick (~josephler@2a01cb040a159400e1a03ee1c031b0f8.ipv6.abo.wanadoo.fr) (Ping timeout: 240 seconds)
[22:50:15] *** Quits: TheCoffeMaker (~TheCoffeM@user/thecoffemaker) (Ping timeout: 256 seconds)
[22:50:55] *** Joins: TheCoffeMaker (~TheCoffeM@user/thecoffemaker)
[22:58:17] *** Quits: dirtcastle (~dirtcastl@2409:4072:6e0b:7ead:cb1:13ff:fee7:e873) (Ping timeout: 240 seconds)
[22:58:28] *** Joins: dirtcastle (~dirtcastl@2409:4072:6e0b:7ead:3c30:d1ff:fe8f:d1da)
[23:02:37] *** Quits: dirtcastle (~dirtcastl@2409:4072:6e0b:7ead:3c30:d1ff:fe8f:d1da) (Ping timeout: 240 seconds)
[23:14:02] <fnstudio_> bingo! this did it! `(setq org-html-htmlize-output-type 'css)' as explained here https://emacs.stackexchange.com/a/7633
[23:44:56] <Demosthenex> nice
[23:48:26] *** Quits: tyson2 (~user@bras-base-toroon0624w-grc-19-70-31-33-162.dsl.bell.ca) (Remote host closed the connection)
[23:56:07] *** Joins: nullx002 (~nullx002@2402:8100:39ae:8ff2:a882:e6a:531e:d584)
