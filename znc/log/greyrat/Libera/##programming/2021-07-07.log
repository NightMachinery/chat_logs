[00:00:01] <Mathisen> most people dont use tapes anymore the life expectancy pf
[00:00:15] <Mathisen> of tapes* is like 20+ years
[00:00:15] <immibis> tape drive that size, but make it LTO
[00:00:26] <mrig> It is used for pro audio for its better resilience than digital.
[00:00:29] *** Quits: wovixo (~wovixo@128.104.205.49) (Quit: Leaving)
[00:00:37] <mrig> better longevity.
[00:00:37] <immibis> what does that mean?
[00:00:39] <immibis> oh
[00:01:11] <mrig> cosmic rays do not destroy it, induces a tiny amount of noise but that is all.
[00:01:29] *** Quits: j0hnny (kadnsjkfnw@shell.xshellz.com) (Ping timeout: 252 seconds)
[00:01:50] <immibis> take your master, encode it as digital with a 300-baud modem, record THAT on a tape
[00:01:55] <deniska> cosmic rays wouldn't destroy uncompressed raw audio stored digitally either
[00:01:57] *** Joins: tkob (tkob@user/thekingofbandit)
[00:02:00] <immibis> now cosmic rays do not induce noise
[00:02:02] <deniska> just introduce a tiny amount of noise :D
[00:02:40] <mrig> https://en.wikipedia.org/wiki/Mastering_(audio)
[00:03:10] <mrig> the majority of the noise that tape introduces is a part of the 'sound' of the musical genre.
[00:03:19] <mrig> they seldom go without it.
[00:03:31] <mrig> certainly is for rock.
[00:03:44] <mrig> yes a little hisssss
[00:03:49] <mrig> :D
[00:04:01] <immibis> to get tape noise you could just wind a very short tape around an erase, record and play head
[00:04:06] <mrig> but for the same reason it would be better for digital too.
[00:04:22] <mrig> for archiving anyhow
[00:04:46] <deniska> print MP3 on paper in base64
[00:04:49] <mrig> immibis: some do do that, that is how the first delay effects worked too :D
[00:05:00] <deniska> we're good at preserving papers :D
[00:05:19] <mrig> just dont use bubble jet ink!
[00:05:29] <mrig> :D some carbon pigment should do it.
[00:05:35] <mrig> those printers look awesome.
[00:06:11] <mrig> for black and white photos anyhow, would be good for base64 too
[00:06:34] *** Joins: TheAceOfHearts (~TheAceOfH@24.41.239.76)
[00:06:39] *** Joins: NEYi (~NEYi@109.251.216.38)
[00:07:42] *** Quits: x003fgqwe (uid479614@id-479614.tooting.irccloud.com) (Quit: Connection closed for inactivity)
[00:08:09] <mrig> would be a lot of fun to write a driver for writing digital to tape, will get round to doing this some day.
[00:08:29] <mrig> perhaps store my utf-s data that way :P
[00:08:32] <immibis> you mean a winmodem driver to sound card?
[00:08:40] *** Joins: Y00fie (~yoofie@097-070-135-101.res.spectrum.com)
[00:09:07] <mrig> yes analog out to tape.
[00:09:28] *** Joins: j0hnny (kadnsjkfnw@2607:5300:60:21b::1)
[00:09:31] <mrig> could be some intersting things to play with there.
[00:09:47] <immibis> you can synthesize an FM signal very easily
[00:10:04] *** Quits: chance (~chance@user/chance) (Quit: Client closed)
[00:10:19] <mrig> Frequency modulated?
[00:10:40] *** Quits: odnes_ (~odnes@109-178-241-209.pat.ren.cosmote.net) (Ping timeout: 246 seconds)
[00:11:10] *** Quits: terminalpusher (~terminalp@2a01:586:9006:1:2960:cd7c:21a:6a1e) (Remote host closed the connection)
[00:11:48] <mrig> Would be interesting to see what the best way to write data into Fourier transforms at different frequencies for different things.
[00:12:07] <immibis> this is exactly what RF designers do all day
[00:12:14] <immibis> or RF engineers. RF somethingers
[00:12:24] <immibis> it's literally exactly the same problem
[00:12:31] <mrig> dang, you can get paid for playing with this stuff :D
[00:12:53] <immibis> so you can get inspiration from there. The thing you're thinking of is called OFDM
[00:13:00] <immibis> for Orthogonal Frequency-Division Multiplexing
[00:13:13] *** Quits: usr123 (~usr123@124.253.108.128) (Read error: Connection reset by peer)
[00:13:14] <mrig> cool I shall have to investigate the field a little further, once i've put some more solid time into my math.
[00:13:32] <mrig> thank you for the pointer, I will make a not of that right away.
[00:13:36] *** Joins: usr123 (~usr123@27.255.251.28)
[00:14:02] <immibis> there is a known fundamental limit on how much data you can send through a particular analog "channel"; the different coding schemes are just trying to approach this limit in different ways with different tradeoffs like receiver simplicity
[00:14:18] *** Quits: TechTest (uid283215@id-283215.tooting.irccloud.com) (Quit: Connection closed for inactivity)
[00:14:18] *** Joins: codingcampbell (~codingcam@user/codingcampbell)
[00:14:42] <deniska> immibis: the Bekenstein bound? :D
[00:14:48] <immibis> the shannon limit
[00:15:08] *** Quits: Glumfish (~Glumfish@user/glumfish) (Ping timeout: 252 seconds)
[00:16:14] <immibis> there are also lots of different error-detecting and error-correcting codes. You send your N bits through OFDM, and because you are operating right at the limit and because of randomness in general, M of the bits get received incorrectly. How can you (a) know that it happened and (b) recover the correct data?
[00:16:21] *** Quits: TheAceOfHearts (~TheAceOfH@24.41.239.76) (Quit: So long, and thanks for all the fish!)
[00:17:25] <mrig> cool this is one of the things that fascinates me about sanskrit, it is built into the language as a possibility due to the nature of the grammar.
[00:18:07] *** Joins: Glumfish (~Glumfish@user/glumfish)
[00:18:10] <immibis> there is "interleaving", where you take these error-correcting codes, and you transmit the first bit from each, then the second bit from each, etc... then if some error happens that corrupts say 10 bits
[00:18:29] <immibis> (10 sequential bits) instead of corrupting 10 bits in one code, it corrupts 1 bit from 10 different codes, which is more likely to be correctable
[00:19:13] <mrig> they record the same data in several different rhythmic forms, and the word order within a line is not important, retaining meaning. So different backups should have the equivalent end meaning but the code is different, very hard to introduce new code due to this.
[00:19:19] <immibis> these error-correcting techniques are used on CDs which is why you can often still play them with minor scratches
[00:19:20] <decker> https://github.com/d3x0r/space-plasma.js#flow-field-dynamics-test much better fog effect... and all done in a shader
[00:19:59] *** Quits: teut (~teut@106.214.16.139) (Quit: Connection closed)
[00:20:40] <mrig> immibis: is this the same technique that uses is it hamming encoding, with the graph plotted onto a cube?
[00:20:52] * mrig skits of to check the name.
[00:21:57] <mrig> yes that is one form of it at least. Oh cool this is some pretty inspiring thoughts, a great way to mix audio recording back into my plans.
[00:22:26] <GeDaMo> https://en.wikipedia.org/wiki/Burst_error-correcting_code#Compact_disc
[00:23:20] *** Quits: Glumfish (~Glumfish@user/glumfish) (Ping timeout: 272 seconds)
[00:25:02] *** Quits: Thedarkb-Desktop (~beno@2001:bb6:b404:188f:7474:a5c3:ab91:d493) (Ping timeout: 252 seconds)
[00:25:08] *** Joins: Thedarkb-Desktop (~beno@2001:bb6:b404:188f:7474:a5c3:ab91:d493)
[00:25:28] *** Joins: Glumfish (~Glumfish@user/glumfish)
[00:25:35] *** Quits: ChromaCat248 (~ChromaCat@user/chromacat248) (Remote host closed the connection)
[00:26:05] *** Joins: vitorgonc (~vitorgonc@2804:7f4:3b80:1769:48d8:407c:dda6:167e)
[00:27:30] <immibis> you could start with just getting the bits through the sound. maybe push the limits until you start getting errors, then you can play with codes to correct the errors
[00:29:10] *** Joins: ChromaCat248 (~ChromaCat@user/chromacat248)
[00:31:05] *** Quits: mnd999_ (~mark@2001:8b0:da3:76a2:4630:5b97:83a2:3e21) (Ping timeout: 252 seconds)
[00:31:33] <mrig> yes find the limits and see how it behaves then.
[00:32:18] *** Quits: Glumfish (~Glumfish@user/glumfish) (Ping timeout: 252 seconds)
[00:32:18] *** Quits: caterfxo (~caterfxo@52.sub-174-253-195.myvzw.com) (Ping timeout: 252 seconds)
[00:32:47] *** Joins: caterfxo (~caterfxo@47.sub-174-253-195.myvzw.com)
[00:34:26] *** Quits: arcatech (~arcatech@user/arcatech) (Remote host closed the connection)
[00:35:32] <mrig> oh, you could record a stream from each cpu to a different track of a tape too.
[00:35:59] *** Joins: arcatech (~arcatech@user/arcatech)
[00:36:39] <mrig> oh tricky to record data though that way, would be a similar mess to raid I suppose.
[00:36:56] <mrig> that said the medium does not have the same fragility.
[00:37:30] <mrig> immibis: thanks for the thought, lost of food for more thought there.
[00:37:41] *** Quits: decker (~d3x0r@ip98-160-176-209.lv.lv.cox.net) (Read error: Connection reset by peer)
[00:39:40] *** Quits: magla (~gelignite@55d4860d.access.ecotel.net) (Quit: Stay safe!)
[00:39:57] *** Joins: Glumfish (~Glumfish@user/glumfish)
[00:40:35] *** Quits: krz3si (~szara@2a02:a31c:853b:b780:df0:1631:dcb9:4e4f) (Read error: Connection reset by peer)
[00:41:08] *** Joins: pilyn (~pilyn@user/pilyn)
[00:41:09] *** Quits: pilyn (~pilyn@user/pilyn) (Quit: Leaving)
[00:42:14] *** Quits: arcatech (~arcatech@user/arcatech) (Quit: Bye.)
[00:42:57] *** Joins: koo6 (~koo6@89-24-13-235.customers.tmcz.cz)
[00:43:14] *** Quits: danielrparks (~quassel@2600:1700:3f7b:20f:b45:9757:4c25:fee4) (Remote host closed the connection)
[00:44:29] *** Joins: danielrparks (~quassel@2600:1700:3f7b:20f:a6c6:fec2:6193:7681)
[00:45:08] *** Quits: Haxxa (~Haxxa@122-199-59-136.ip4.superloop.com) (Quit: Haxxa flies away.)
[00:45:41] *** Joins: audiocat (~audio@2603-8081-1800-6a65-b3c0-70ee-cb55-0b14.res6.spectrum.com)
[00:46:01] *** Quits: lucf117_ (~lucf117@user/lucf117) (Ping timeout: 246 seconds)
[00:47:26] *** Joins: Haxxa (~Haxxa@122-199-59-136.ip4.superloop.com)
[00:47:35] *** Quits: kill (~killown@user/killown) (Ping timeout: 252 seconds)
[00:50:58] *** Joins: ayenet4 (~0x100@32.211.211.39)
[00:56:31] *** Joins: Joanna (uid57472@id-57472.tooting.irccloud.com)
[00:56:50] <immibis> mrig: one stream per CPU is just stupid. One CPU is fast enough to process plenty of sound
[00:57:41] <mrig> If the data is different encoding of the same thing, it could be used to verify for errors though.
[00:58:57] <mrig> if each 'segment' of tape whatever the the measure might be, were verified you could cross check for errors, you would then have two copies at the same time too.
[00:59:46] <mrig> other than that would be density, but you are quite right, not need for me to be thinking on this sort of thing at this point in time :)
[01:00:20] *** Joins: penguino (~mrpenguin@user/mrpenguin)
[01:00:47] *** Quits: Glumfish (~Glumfish@user/glumfish) (Ping timeout: 252 seconds)
[01:01:25] *** Quits: Crescendo (~Crescendo@user/crescendo) (Ping timeout: 246 seconds)
[01:01:47] *** Joins: Crescendo (~Crescendo@user/crescendo)
[01:02:17] *** Joins: Cyp_ (~cyp@192038128058.mbb.telenor.dk)
[01:02:39] *** Joins: Glumfish (~Glumfish@user/glumfish)
[01:04:39] *** Quits: gitesh (uid423739@id-423739.charlton.irccloud.com) (Quit: Connection closed for inactivity)
[01:05:53] *** Joins: RougeR (~rougex250@user/rouger)
[01:06:13] *** Joins: ______GOD______ (~GOD@user/god/x-9778998)
[01:06:24] *** Quits: Cyp (~cyp@213.237.82.162) (Ping timeout: 272 seconds)
[01:07:06] *** Quits: envex (~envex@cpe-173-91-189-33.neo.res.rr.com) (Ping timeout: 252 seconds)
[01:07:24] *** Quits: Glumfish (~Glumfish@user/glumfish) (Ping timeout: 265 seconds)
[01:09:22] *** Joins: Yoofie (~yoofie@097-070-135-101.res.spectrum.com)
[01:11:07] *** Joins: merijn (~merijn@83-160-49-249.ip.xs4all.nl)
[01:11:09] <mrig> immibis: oh I see what you mean, well per thread rather.
[01:11:55] *** Joins: lille_bitte_ven (~LilleVen@83-91-97-60-cable.dk.customer.tdc.net)
[01:12:14] *** Quits: Y00fie (~yoofie@097-070-135-101.res.spectrum.com) (Ping timeout: 265 seconds)
[01:13:45] *** Joins: Glumfish (~Glumfish@user/glumfish)
[01:14:00] *** Quits: GeDaMo (~GeDaMo@user/gedamo) (Quit: Leaving.)
[01:15:33] *** Joins: gitgood (~gitgood@80-44-9-45.dynamic.dsl.as9105.com)
[01:15:54] *** Quits: merijn (~merijn@83-160-49-249.ip.xs4all.nl) (Ping timeout: 272 seconds)
[01:17:03] *** Quits: DevAntoine (~DevAntoin@78.196.234.32) (Remote host closed the connection)
[01:19:32] *** Joins: leib (~leib@2409:4061:405:275b:6d6e:d5d5:f3c6:27f8)
[01:19:58] *** Quits: Glumfish (~Glumfish@user/glumfish) (Ping timeout: 265 seconds)
[01:20:42] *** Joins: Glumfish (~Glumfish@user/glumfish)
[01:23:59] *** Quits: vitorgonc (~vitorgonc@2804:7f4:3b80:1769:48d8:407c:dda6:167e) (Ping timeout: 252 seconds)
[01:25:13] *** Joins: Y00fie (~yoofie@097-070-135-101.res.spectrum.com)
[01:26:19] *** Joins: terminalpusher (~terminalp@2a01:586:9006:1:2960:cd7c:21a:6a1e)
[01:27:09] <terminalpusher> I just realized that "word" doesn't always refer to 16-bit. But I'm using it in a context where a nibble is 4 bits and a byte 8 bits. Is it acceptable to use "word" for 16 bits there?
[01:27:18] *** Quits: Yoofie (~yoofie@097-070-135-101.res.spectrum.com) (Ping timeout: 272 seconds)
[01:27:25] <terminalpusher> 16 bits*
[01:28:19] *** Quits: leib (~leib@2409:4061:405:275b:6d6e:d5d5:f3c6:27f8) (Quit: Leaving)
[01:28:30] <InPhase> terminalpusher: The appropriate clarifier is "16-bit word", and if stated at first use, it establishes the size for subsequent usages.
[01:28:39] *** Quits: ayenet4 (~0x100@32.211.211.39) (Remote host closed the connection)
[01:28:42] <terminalpusher> alright
[01:28:50] <nitrix> Microsoft's terminology uses WORD (16), DWORD (32), QWORD (64).
[01:28:52] *** Joins: ayenet4 (~0x100@32.211.211.39)
[01:28:54] <terminalpusher> honestly I expect it to be quite clear from the way I use it and the code anyway
[01:29:05] <terminalpusher> I agree with that terminology
[01:29:08] <InPhase> 16, 32, and 64 are all appropriately labeled "word" in various contexts.
[01:29:11] *** Quits: [Kalisto] (~Nico@user/kalisto/x-8968079) (Quit: The Lounge - https://thelounge.chat)
[01:29:28] *** Joins: arcatech (~arcatech@user/arcatech)
[01:29:40] *** Joins: kanton (kanton@gateway/vpn/airvpn/kanton)
[01:29:40] <InPhase> You could even do 128-bit, but that's just less often done as a "word" in present systems.
[01:29:58] *** Quits: ayenet4 (~0x100@32.211.211.39) (Remote host closed the connection)
[01:30:05] <nitrix> Personally, I use "word" as what C and Rust would think of "usize/size_t", the machine word size.
[01:30:11] *** Joins: ayenet4 (~0x100@32.211.211.39)
[01:30:26] <nitrix> Varying widths, depending on the hardware.
[01:30:56] <InPhase> 32-bit is the entity I see most often used as "word" in 2021, but absolutely you can use any of the ones I mentioned, as long as you clarify.
[01:31:23] <InPhase> Non power of 2 words are also sometimes used in digital electronics.
[01:31:33] *** Quits: arcatech (~arcatech@user/arcatech) (Client Quit)
[01:31:47] <InPhase> Like if your data bus is 36 bits, that's what you label as a word for that purpose.
[01:32:04] *** Joins: qunzhong_luxian (~qunzhong_@68.235.43.102)
[01:32:14] *** Quits: Glumfish (~Glumfish@user/glumfish) (Ping timeout: 252 seconds)
[01:32:39] *** Quits: spynxic (~spynxic@spynxic.powered.by.lunarbnc.net) (Ping timeout: 256 seconds)
[01:32:49] <ayenet4> some languages might have a predefined "Word_Size"
[01:32:52] <oldlaptop> Computers with 36-bit words were once commercially important - which is why 010 is not ten in most C-family languages
[01:33:14] *** Quits: mmfood (~mmfood@45.91.21.37) (Ping timeout: 252 seconds)
[01:34:15] <immibis> mrig: it's still useless. you'd waste half your capacity when only one thread wanted to write data. Better to take all the data, combine it together, then write it out using both tracks
[01:34:16] *** Quits: penguino (~mrpenguin@user/mrpenguin) (Ping timeout: 244 seconds)
[01:34:37] *** Quits: Joanna (uid57472@id-57472.tooting.irccloud.com) ()
[01:34:52] *** Quits: Pickchea (~private@user/pickchea) (Quit: Leaving)
[01:34:58] *** Quits: pikapika (~pikapika_@pika.powered.by.lunarbnc.net) (Ping timeout: 268 seconds)
[01:35:04] <immibis> terminalpusher: a "word" is like the "native" data size on some processor, except then they make better versions of the processor, and they can't change how big a "word" is because of compatibility, so they call the new word a dword, qword, etc
[01:35:06] *** Joins: penguino (~mrpenguin@user/mrpenguin)
[01:35:09] *** Joins: AnisBarghouthi[m (~anis-barg@2001:470:69fc:105::6ebb)
[01:36:36] *** Joins: Glumfish (~Glumfish@user/glumfish)
[01:36:49] <terminalpusher> I see
[01:37:00] *** Joins: Joanna (uid57472@id-57472.tooting.irccloud.com)
[01:37:55] *** Joins: mmfood (~mmfood@45.91.21.29)
[01:39:13] *** Quits: scabby (~scabby@user/scabootssca) (Ping timeout: 246 seconds)
[01:40:10] <locknet> deniska, thanks, I found flask_restful which is perfect for this purpouse
[01:40:58] *** Quits: Glumfish (~Glumfish@user/glumfish) (Ping timeout: 240 seconds)
[01:41:39] *** Joins: Glumfish (~Glumfish@user/glumfish)
[01:41:54] *** Quits: ahungry (~user@99-40-9-245.lightspeed.livnmi.sbcglobal.net) (Remote host closed the connection)
[01:42:49] *** Joins: arcatech (~arcatech@user/arcatech)
[01:44:35] *** Quits: aradesh (~aradesh@user/aradesh) (Quit: WeeChat 1.9.1)
[01:45:46] *** Joins: eldenring0 (uid506233@id-506233.tooting.irccloud.com)
[01:45:54] *** Joins: elnavigator (~elnavigat@105.196.63.39)
[01:46:00] *** Joins: cursey (uid186300@id-186300.charlton.irccloud.com)
[01:47:16] *** Quits: nekonibble (~nekonibbl@user/nekobit) (Ping timeout: 246 seconds)
[01:47:31] *** Quits: elnavigator (~elnavigat@105.196.63.39) (Client Quit)
[01:48:06] *** Joins: Nickssen (~Nickssen@186.11.58.52)
[01:48:41] *** Joins: elnavigator (~elnavigat@105.196.63.39)
[01:50:04] <Nickssen> Hello. I am trying to solve a problem for heat distribution on a wire. I need to solve an ode using scipy.solve_bvp. For some reason i am getting attribute error on the variable t.
[01:50:10] <Nickssen> Here is my code if anybody could help: https://pastebin.com/gmvVvis2
[01:53:23] *** Quits: Nickssen (~Nickssen@186.11.58.52) (Quit: Client closed)
[01:53:33] *** Quits: LucaTM (~LucaTM@user/lucatm) (Quit: Textual IRC Client: www.textualapp.com)
[01:53:36] *** Quits: gitgood (~gitgood@80-44-9-45.dynamic.dsl.as9105.com) (Remote host closed the connection)
[01:53:57] *** Joins: gitgood (~gitgood@80-44-9-45.dynamic.dsl.as9105.com)
[01:54:16] *** Quits: Glumfish (~Glumfish@user/glumfish) (Ping timeout: 246 seconds)
[01:55:48] *** Quits: mmfood (~mmfood@45.91.21.29) (Ping timeout: 272 seconds)
[01:56:50] *** Quits: eXistenZ (~biskit@bzq-79-179-125-183.red.bezeqint.net) (Quit: Leaving)
[01:57:26] *** Quits: elnavigator (~elnavigat@105.196.63.39) (Ping timeout: 252 seconds)
[01:57:51] *** Joins: spynxic (~spynxic@spynxic.powered.by.lunarbnc.net)
[01:58:01] *** Quits: bebna (~bebna@bebna.de) (Quit: WeeChat 3.1)
[01:58:39] *** Joins: x003fgqwe (uid479614@id-479614.tooting.irccloud.com)
[02:00:34] *** Quits: audiocat (~audio@2603-8081-1800-6a65-b3c0-70ee-cb55-0b14.res6.spectrum.com) (Ping timeout: 246 seconds)
[02:00:38] *** Quits: edgar-rft (~edgar-rft@HSI-KBW-109-193-249-223.hsi7.kabel-badenwuerttemberg.de) (Quit: Leaving)
[02:01:37] *** Joins: iauc (~iauc@ti0061a400-1478.bb.online.no)
[02:02:55] *** Quits: amahl (~amahl@dsl-jklbng12-54fbca-64.dhcp.inet.fi) (Remote host closed the connection)
[02:03:28] *** Quits: kodah (~kodah@user/kodah) (Ping timeout: 265 seconds)
[02:04:31] *** Joins: TheAceOfHearts (~TheAceOfH@24.41.239.76)
[02:04:44] *** Joins: pikapika (~pikapika_@pika.powered.by.lunarbnc.net)
[02:06:51] *** Joins: exvicesindaco (~exvicio@user/exvicesindaco)
[02:07:19] <terminalpusher> TIL there's "tribble" referring to a 12-bit word (3 nibbles)
[02:08:25] *** Joins: edgar-rft (~edgar-rft@HSI-KBW-109-193-249-223.hsi7.kabel-badenwuerttemberg.de)
[02:09:05] *** Quits: hoochmonger (~hoochmong@user/hoochmonger) (Ping timeout: 252 seconds)
[02:09:45] *** Joins: elnavigator (~elnavigat@105.196.63.39)
[02:11:13] *** Quits: locknet (~locknet@static.193.168.itcsa.net) (Quit: Leaving)
[02:11:53] *** Quits: arcatech (~arcatech@user/arcatech) (Quit: Bye.)
[02:12:24] *** Quits: Crescendo (~Crescendo@user/crescendo) (Read error: Connection reset by peer)
[02:12:42] *** Joins: Crescendo (~Crescendo@user/crescendo)
[02:13:12] *** Quits: usr123 (~usr123@27.255.251.28) (Read error: Connection reset by peer)
[02:13:35] *** Joins: usr123 (~usr123@49.156.67.226)
[02:13:37] *** Joins: arcatech (~arcatech@user/arcatech)
[02:14:23] *** Joins: kodah (~kodah@user/kodah)
[02:16:10] *** Quits: koo6 (~koo6@89-24-13-235.customers.tmcz.cz) (Ping timeout: 240 seconds)
[02:18:10] *** Quits: mrig (~mrig@user/mrig) (Quit: WeeChat 3.2)
[02:18:35] *** Quits: furrymcgee (~devuan@31.179.186.66) (Quit: leaving)
[02:18:40] *** Joins: Guest50 (~textual@ool-43527ebe.dyn.optonline.net)
[02:18:42] *** Joins: Guest50_ (~textual@ool-43527ebe.dyn.optonline.net)
[02:20:35] *** Quits: Guest50 (~textual@ool-43527ebe.dyn.optonline.net) (Client Quit)
[02:20:36] *** Quits: Guest50_ (~textual@ool-43527ebe.dyn.optonline.net) (Client Quit)
[02:21:21] *** Quits: caterfxo (~caterfxo@47.sub-174-253-195.myvzw.com) (Quit: Quit)
[02:23:01] *** Quits: arcatech (~arcatech@user/arcatech) (Quit: Bye.)
[02:24:20] *** Joins: scabby (~scabby@user/scabootssca)
[02:27:18] *** Quits: kodah (~kodah@user/kodah) (Quit: kodah)
[02:28:05] *** Joins: jinsun_ (~jinsun_@user/jinsun)
[02:29:14] *** Joins: ahungry (~user@99-40-9-245.lightspeed.livnmi.sbcglobal.net)
[02:30:44] *** Joins: neshpion (~neshpion@gateway/tor-sasl/neshpion)
[02:32:02] *** Quits: death916 (~death916@c-67-182-183-147.hsd1.ca.comcast.net) (Ping timeout: 258 seconds)
[02:32:25] *** Quits: Crescendo (~Crescendo@user/crescendo) (Read error: Connection reset by peer)
[02:33:37] *** Quits: edgar-rft (~edgar-rft@HSI-KBW-109-193-249-223.hsi7.kabel-badenwuerttemberg.de) (Remote host closed the connection)
[02:34:00] *** Parts: pyzozord (~pyzozord@user/pyzozord) ()
[02:35:15] *** Joins: kodah (~kodah@user/kodah)
[02:35:32] *** Quits: Joanna (uid57472@id-57472.tooting.irccloud.com) ()
[02:35:38] *** Quits: RougeR (~rougex250@user/rouger) (Remote host closed the connection)
[02:36:49] *** Quits: ChromaCat248 (~ChromaCat@user/chromacat248) (Remote host closed the connection)
[02:37:02] *** Quits: exvicesindaco (~exvicio@user/exvicesindaco) (Quit: Going offline, see ya! (www.adiirc.com))
[02:39:44] *** Joins: ChromaCat248 (~ChromaCat@user/chromacat248)
[02:41:17] *** Quits: terminalpusher (~terminalp@2a01:586:9006:1:2960:cd7c:21a:6a1e) (Remote host closed the connection)
[02:41:43] *** Parts: Raguile (~Raguile@user/raguile) ()
[02:41:47] *** Joins: Glumfish (~Glumfish@user/glumfish)
[02:43:15] *** Quits: plastico (~plastico@2001:8a0:de6b:1a00:9d14:766e:70a8:dcea) (Quit: WeeChat 3.2)
[02:45:41] *** Joins: edgar-rft (~edgar-rft@HSI-KBW-109-193-249-223.hsi7.kabel-badenwuerttemberg.de)
[02:46:04] *** Quits: Glumfish (~Glumfish@user/glumfish) (Ping timeout: 246 seconds)
[02:46:24] *** Quits: zeenk (~zeenk@2a02:2f04:a106:9600:82fb:aed9:ca9:38d3) (Quit: Konversation terminated!)
[02:46:45] *** Joins: Yoofie (~yoofie@097-070-135-101.res.spectrum.com)
[02:49:41] *** Quits: Y00fie (~yoofie@097-070-135-101.res.spectrum.com) (Ping timeout: 252 seconds)
[02:52:22] *** Joins: audiocat (~audio@2603-8081-1800-6a65-6958-6c6d-d850-5f1b.res6.spectrum.com)
[02:53:18] *** Joins: Glumfish (~Glumfish@user/glumfish)
[02:54:35] *** Joins: Nyeogmi (~Nyeogmi@2601:645:8700:bea0:4d5e:7bf4:e290:5648)
[02:55:33] *** Quits: NEYi (~NEYi@109.251.216.38) (Quit: Leaving)
[02:56:20] *** Joins: death916 (~death916@c-67-182-183-147.hsd1.ca.comcast.net)
[02:59:07] *** Quits: ixil (~ixil@82.197.178.137) (Remote host closed the connection)
[03:00:39] *** Joins: pyzozord (~pyzozord@user/pyzozord)
[21:04:10] *** Joins: greyrat (~greyrat@ip202.ip-51-178-215.eu)
[21:04:21] *** Server sets mode: +CFcnt 
[21:04:40] *** Quits: alextee (~alextee@zrythm/alex) (Ping timeout: 272 seconds)
[21:04:55] *** Quits: c0n4m (~user@user/c0n4m) (Quit: ERC (IRC client for Emacs 26.1))
[21:05:23] *** Joins: jmcantrell (~weechat@user/jmcantrell)
[21:06:05] *** Joins: hoochmonger (~hoochmong@user/hoochmonger)
[21:06:27] *** Joins: dunkeln (~dunkeln@188.70.10.207)
[21:07:08] <Glumfish> sandman13: yeah look I get there is a meme factor
[21:07:24] <Glumfish> but professional software doensn't run on meme factor
[21:07:51] *** Joins: jhulten (~jhulten@c-67-185-71-124.hsd1.wa.comcast.net)
[21:08:10] *** Quits: __jmcantrell__ (~weechat@user/jmcantrell) (Ping timeout: 240 seconds)
[21:08:38] <sandman13> True.
[21:09:08] <sandman13> It might not have been written professionally but as an hobby it's a possibility
[21:12:47] <InPhase> Glumfish: People using things like Google Sheets or Excel as databases are typically doing it because those are the only tools they know.
[21:15:08] <pyzozord> InPhase: I think that happens to all technologies sadly. React developers will insist on developing every single website, no matter how simple or content heavy, in react, any ideas about using for example wordpress will be laughted out or fiersly rejected
[21:16:15] <Glumfish> InPhase: yeah I don't mean in the legacy software sense
[21:16:23] <Glumfish> I mean in the sense I go learn the google API
[21:16:30] <Glumfish> and use it on purpose
[21:16:51] <Glumfish> google sheets is online only so to my knowledge no one has used it a database with an application
[21:16:52] <sandman13> For the wielder of hammer, everything is a nail pyzozord
[21:16:57] <Glumfish> for a serious purpuse
[21:17:09] <Glumfish> like they may have done with Access and Excel in the past
[21:17:26] *** Quits: nekonibble (~nekonibbl@user/nekobit) (Read error: Connection reset by peer)
[21:17:41] *** Joins: nekonibble (~nekonibbl@user/nekobit)
[21:17:46] *** Joins: alextee (~alextee@zrythm/alex)
[21:18:11] *** Joins: fboers[71 (~Android@p4ff7e92a.dip0.t-ipconnect.de)
[21:20:14] *** Quits: fboers[m] (~Android@dynamic-046-114-152-059.46.114.pool.telefonica.de) (Ping timeout: 252 seconds)
[21:24:00] *** Joins: zubeida (~zubeida@117.222.64.149)
[21:24:02] <GeDaMo> "Tesla is going crazy because he has never seen a truck that carries traffic lights" https://www.youtube.com/watch?v=Wz6Ins1D9ak
[21:27:25] *** Joins: LiftLeft (~LiftLeft@154.21.28.219)
[21:27:30] * Glumfish Plays troll song
[21:27:35] <rindolf> sandman13: https://www.shlomifish.org/philosophy/philosophy/advice-for-the-young/#technologies_to_learn
[21:28:00] <Glumfish> HTML
[21:28:03] <bytefire> InPhase: i found that OO design isn't always the simplest approach. it is very powerful programming technique no doubt. may be it's about training one's mind and i i never could train myself
[21:28:04] <Glumfish> Perl
[21:28:16] <Glumfish> XML
[21:28:20] <Glumfish> RIP
[21:28:59] *** Quits: gitgood (~gitgood@80-44-9-45.dynamic.dsl.as9105.com) (Read error: Connection reset by peer)
[21:29:20] <rindolf> Glumfish: the rest is in peace!
[21:29:42] <Glumfish> bytefire: I think its important to create solutions than follow paradigms
[21:30:12] <Glumfish> There's no one size fits all, and sticking to one thing religiously will probably cause more problems than it solves
[21:30:43] <rindolf> Glumfish: do you know Perl?
[21:31:18] <zubeida> rindolf: it's a good list. you might like to add JavaScript to the mix too.
[21:31:47] <beaky> what about rust
[21:32:01] *** Joins: CalamityBlue (~CalamityB@cpe-108-185-144-94.socal.res.rr.com)
[21:32:07] <Glumfish> rindolf: no
[21:32:10] <rindolf> zubeida: ah, it's an old page
[21:32:26] <zubeida> beaky: not really.
[21:33:02] <rindolf> Glumfish: then why are you prejudiced?
[21:33:06] <Glumfish> beaky: Rust is not at the point where its "commercially useful" or the kind of language that will get you acclimated with a lot of different thigs in the intersting
[21:34:01] *** Quits: amigojapan (uid86330@id-86330.brockwell.irccloud.com) (Quit: Connection closed for inactivity)
[21:34:12] <zubeida> rindolf: it reminds me of a similar list by Peter Norvig.
[21:34:18] <Glumfish> rindolf: Look I don't have a strong opinion on it, although scripting languages are not my area of interest, plus I sent a lot of times today trying to install one package and the whole thing was a complicated mess
[21:34:26] *** Quits: scabby (~scabby@user/scabootssca) (Remote host closed the connection)
[21:34:26] <Glumfish> s/interesting/industry
[21:35:11] *** Joins: scabby (~scabby@user/scabootssca)
[21:35:57] <rindolf> Glumfish: "today"?
[21:37:35] <rindolf> Glumfish: what do you feel is better than xhtml5?
[21:38:10] *** Joins: NEYi (~NEYi@109.251.216.38)
[21:40:16] *** Quits: FoodMan (~FoodMan@cpc104776-belf12-2-0-cust417.2-1.cable.virginm.net) (Ping timeout: 268 seconds)
[21:40:29] *** Quits: dunkeln (~dunkeln@188.70.10.207) (Ping timeout: 252 seconds)
[21:41:51] <InPhase> bytefire: OO is primarily about encapsulation, which is just a fancy way of saying interfacing and abstracting, and securing away the details to reduce interaction complexity.  OO is sometimes misunderstood as declaring everything in a hierarchy of inheritance, but that has almost nothing to do with how OO is primarily used.  Instead, it's taking some component, saying what it's external behaviors
[21:41:57] <InPhase> should be, and then hiding how it does that so that the details of how it does it can't impact the rest of the code, and only the clean public interface needs to be considered.  The component then guarantees that it will do the right thing inside as long as you follow the interface requirements.  So if you make the interfaces good, clean, and robust, entire programs then become good, clean, and
[21:42:03] <InPhase> robust with very clear code.
[21:42:05] <InPhase> s/it's/its/
[21:43:34] <Glumfish> rindolf: Like today I had to install something and it was the biggest pain in the ass
[21:45:37] *** Joins: BrianG61UK (~BrianG61U@2a02:8010:66b7:dddd:9906:b11f:fc03:2673)
[21:49:17] <InPhase> bytefire: Compare for example C strings and C++ strings.  C strings require every function working on them, custom and built-in, to have meticulous knowledge of how the data is stored and allocated, and manage these low level resources of allocated bytes, scanning through the bytes for length, allocating and freeing memory manually, and then imposing on callers extra responsibilities for further
[21:49:23] <InPhase> management of these resources to avoid issues.  C++ strings know and report their own lengths, and if you want to combine two strings, the string has built-in functions that provide a guaranteed result.  No one concatenating C++ strings has to worry about the operation going wrong or about data getting corrupted.  They just use a clean interface and move on to the higher level problems.  Someone
[21:49:29] <InPhase> using a C++ string also doesn't need to think twice about resource clean-up or anything of that sort, because it's all managed by the object in an encapsulated manner.  Scale this reasoning up with progressively larger components, and it means each layer of code can do higher level logic without needing to contemplate the details, because those are correctly and efficiently managed by well-tested
[21:49:35] <InPhase> lower level components that provide these guarantees of correct behavior.
[21:50:16] <zubeida> InPhase: are you saying the difference between C strings and C++ strings is the difference between structured and object-oriented?
[21:50:29] *** Joins: gitgood (~gitgood@80-44-9-45.dynamic.dsl.as9105.com)
[21:51:07] <GeDaMo> C strings could use a bit more structure :P
[21:52:13] <deniska> C could use a string type
[21:53:14] *** Quits: chomwitt (~Pitsikoko@athedsl-16082.home.otenet.gr) (Ping timeout: 252 seconds)
[21:54:12] <rindolf> Glumfish: ah, i use apt / dnf / pacman/ etc
[21:54:31] <Glumfish> I use brew
[21:54:36] <Glumfish> but for pearl packages
[21:54:41] <Glumfish> you have to use CPAN
[21:55:19] <Glumfish> and on a mac its kind of messed up, plus from what I've seen (big disclaimer, huge lack of knowledge, don't take seriously) perl packages are a mess
[21:55:25] *** Joins: adanwan_ (~adanwan@gateway/tor-sasl/adanwan)
[21:55:49] <zubeida> Glumfish: i use `dnf` and they have plenty of good Perl packages right off the bat.
[21:56:02] <zubeida> Glumfish: but CPAN is good too.
[21:56:10] <Glumfish> by a mess I mean in the way they are installed, built etc
[21:56:11] *** Quits: adanwan (~adanwan@gateway/tor-sasl/adanwan) (Ping timeout: 244 seconds)
[21:56:39] <Glumfish> but as I said I don't know much take it with a huge grain of salt, its just my inital perception
[21:56:52] <zubeida> Glumfish: is Perl not as popular for MacOS users?
[21:57:28] <Glumfish> I would asume no
[21:57:34] <Glumfish> I don't have any data
[21:57:46] <Glumfish> Although another grain of salt
[21:58:06] <Glumfish> I would say most dev on mac is either native, C, C++, Ojb-C, Swift and Web
[21:58:14] <zubeida> Glumfish: Perl is not as popular overall.
[21:59:12] <Glumfish> Yeah especially these days
[21:59:25] <Glumfish> especially considering Python
[21:59:46] *** Quits: xff0x (~xff0x@2001:1a81:539d:3600:7f6d:8918:f53:97d7) (Ping timeout: 240 seconds)
[22:00:28] <rindolf> Perl is popular
[22:00:43] *** Joins: xff0x (~xff0x@2001:1a81:539d:3600:1c1d:c169:6e6:5e55)
[22:01:11] <Glumfish> rindolf: compared to what, and with what measure of popularity, current interest, or amount of code that exists and is being maintained
[22:01:18] *** Joins: OverCoder (~OverCoder@user/overcoder)
[22:01:34] <zubeida> Glumfish: Perl is quite widespread as code.
[22:01:39] <Glumfish> Definately as in currenty interest Perl is not popular, although a lot of code exists and runs a lot of things
[22:01:41] <zubeida> Glumfish: it's not hip though.
[22:01:44] <rindolf> Glumfish: macOsucks is a mess in the fear realm
[22:02:00] <Glumfish> rindolf: its a good OS but in  a lot of things its been clobbered
[22:02:13] * rindolf is now playing: Me Singing "I Will Always Love You" by Whitney Houston-CBdmpvPa73g.mp4 [04:10/05:28]
[22:02:14] <Glumfish> like how and where the apple dev tools are installed
[22:02:25] <Glumfish> but in other ways its very much like a bsd
[22:02:28] <Glumfish> UNIX
[22:02:41] *** Quits: kron (~weechat@user/qaph) (Quit: kron)
[22:03:06] <Glumfish> (MacOS is officially UNIX actually, while Linux is not)
[22:03:29] <zubeida> Glumfish: it's GNU/Linux.
[22:03:38] <Glumfish> ...
[22:03:45] <zubeida> Glumfish: of course it's ... Not Unix.
[22:04:00] <deniska> or as I've recently taken to calling it, GNU plus Linux
[22:04:08] <Glumfish> oh boi
[22:04:14] <zubeida> deniska: no, no. this was not the interjection.
[22:04:19] <zubeida> deniska: :)
[22:04:19] <Glumfish> I'd like to interject for a moment
[22:04:25] <zubeida> Glumfish: please don't.
[22:04:28] <rindolf> Glumfish: wrt that tired argument: https://github.com/shlomif/Freenode-programming-channel-FAQ/blob/master/FAQ_with_ToC__generated.md#is-it-true-that-macos--mac-os-x-is-superior-to-linux-because-it-is-a-certified-unix
[22:04:50] <deniska> Who cares about being stinky unix, gnu utils are more user friendly anyway
[22:05:03] <Glumfish> the bsd utils are quite good
[22:05:09] <Glumfish> and their man pages are very clean
[22:05:11] <rindolf> deniska: i agree
[22:05:20] <deniska> reading man pages? What's that? 80s?
[22:05:25] <Glumfish> rindolf: and no I would not have made that argument
[22:05:30] <zubeida> deniska: i do read man pages.
[22:05:42] <Glumfish> zubeida: they are very useful and nice
[22:05:43] <zubeida> deniska: and i agree. BSD are lot cleaner.
[22:05:49] <deniska> zubeida: how volumetric is your beard?
[22:06:00] <Glumfish> if they are well written that is
[22:06:39] <zubeida> deniska: i'm one of those people who don't like to leave the terminal. i use `elinks` for static websites lol. but that's not to brag, though.
[22:07:07] <deniska> I mean, BSD systems have a sweet spot in my heart. But macOS doesn't :)
[22:07:26] <Glumfish> deniska: It has its goods and bads
[22:07:31] <Glumfish> I prefer it over windows
[22:07:43] <Glumfish> except for games, so I also use Windows
[22:08:09] <deniska> if you need to dev for linux oriented server world, windows with wsl2 is a better choice than macos with its currently weird virtualization story
[22:08:23] <zubeida> deniska: yes.
[22:08:29] <pyzozord> I still kind of find the single root of directory structure a bit strange when I think about it to be honest
[22:08:33] <zubeida> deniska: WSL was very good.
[22:08:33] <Glumfish> deniska: WSL is good
[22:08:35] <Glumfish> I've used it
[22:08:57] <deniska> WSL1 works until it doesn't, WSL2 is a honest linux vm, so there shouldn't be any noticable difference
[22:09:00] <Glumfish> zubeida: Why was?, its now faster than ever
[22:09:11] <rindolf> perl's popularity: https://www.explainxkcd.com/wiki/index.php/224:_Lisp
[22:09:18] <zubeida> Glumfish: no. i mean i haven't used WSL2.
[22:09:33] <Glumfish> ah
[22:09:35] <InPhase> zubeida: I was saying the difference between C strings and C++ strings is the most basic level difference between structured and object-oriented.  Object-oriented approaches take that advantage and layer it many times over to strong benefit, but that requires more elaborate examples.  For example in OOP you can have a Person record which manages many strings providing data about that person, and
[22:09:38] <zubeida> Glumfish: i used WSL. it was good. just a little slow. i've heard WSL2 is better.
[22:09:39] <pyzozord> I'm interested in WSL just because I wanna play my steam games and still use unix
[22:09:41] <oldlaptop> "WSL" describes two completely different things which are not directly comparable, and don't really belong behind the same name.
[22:09:41] <InPhase> provides many desired invariants about that data.  Perhaps you want an Employee class where every Employee is guaranteed to have a name, a title, and a salary.  OOP lets you assert that guarantee, and then if you receive an Employee object, it's guaranteed these fields are present and initialized.
[22:09:44] <Glumfish> wsl2 should be much faster
[22:09:48] <deniska> MS is so good at naming things
[22:10:00] <deniska> MS SQL, VS, VS Code, WSL, WSL2 :D
[22:10:07] <oldlaptop> In many ways the first one was more interesting.
[22:10:07] <Glumfish> oldlaptop: we mean the Windows Subsystem for Linux
[22:10:26] <deniska> yeah, the first one was weird, the second one is more practical though :)
[22:10:31] <Glumfish> InPhase: there are lot of
[22:10:32] <pyzozord> deniska: at counting to 11, 98, 2000, xp, 9, 10, 11
[22:10:36] <oldlaptop> Glumfish: Yes. That acronym refers to two completely and entirely different things which are not comparable.
[22:10:38] <Glumfish> usablity features I would ike to have in C
[22:10:50] <InPhase> Glumfish: You can find them in C++.  ;)
[22:10:53] <deniska> pyzozord: 8, 8.1, 10, 11
[22:10:57] <zubeida> InPhase: yes, but that's not essentially object-oriented. i could have initialised variables with bounds checking and that would give what you're saying.
[22:11:01] <Glumfish> InPhase: I'm tempted to try
[22:11:08] <pyzozord> deniska: I think there was also windows 7, but I'm not sure :D
[22:11:09] <Glumfish> but its complicated as hell from what I head
[22:11:10] <zubeida> InPhase: that doesn't make it oop, though right?
[22:11:13] <deniska> I think I liked windows 8.1 more than win10
[22:11:30] <InPhase> Glumfish: It takes time to master, but it's pretty straightforward to get started.  Grab a book.
[22:11:47] <Glumfish> and I want to do it properly not, isn't half the battle finding the "modern" way to do things because people use a bunch of different ways from different times in the standard
[22:12:19] *** Joins: fboers[m] (~Android@dynamic-046-114-156-096.46.114.pool.telefonica.de)
[22:12:19] *** Joins: blahboybaz (~blahboyba@c-67-183-225-44.hsd1.wa.comcast.net)
[22:12:24] <Glumfish> InPhase: I'm thinking of just jumping into rust, the fact I don't have to learn any third party tooling and the integrated ones work easily and well are appealing
[22:12:26] <InPhase> Glumfish: Going from C to C++ is not hard if you approach with the right mindset of being willing to swap out C idioms with C++ idioms.  Resist the urge to write C in C++.
[22:12:37] *** Joins: dunkeln_ (~dunkeln@188.70.10.207)
[22:12:58] <zubeida> InPhase: the reason the strings are barebone in C has nothing to do with structured v. oop programming.
[22:13:07] <deniska> it's almost easier to learn C++ when you don't know C nowadays
[22:13:22] <Glumfish> InPhase: I want to use the modern features, I'm just worried of the information overload of things like operator overlaoding and templates, especially when you do something wrong and the compiler shouts at you
[22:13:27] <InPhase> zubeida: The key is the guarantees.
[22:13:35] <InPhase> zubeida: And the invariants.
[22:13:36] <zubeida> InPhase: even that.
[22:13:44] *** Quits: fboers[71 (~Android@p4ff7e92a.dip0.t-ipconnect.de) (Ping timeout: 265 seconds)
[22:13:53] <pyzozord> it feels like c++ is too big to grok
[22:14:02] <zubeida> InPhase: you had that all in Perl4. but that doesn't automagically make it oop.
[22:14:04] <Glumfish> InPhase: and sadly C++ has some of the rusty parts of C like headers and the lack of an easy to use build system
[22:14:45] <InPhase> Glumfish: C++ compiler errors have gotten much much better in the last 7 or so years.  It retains a reputation from a time past, but they're a lot easier to digest now.
[22:14:45] <Glumfish> I'm very divided if I should jump into something modern and fresh, or go to something old and big (as in numbers and popularity)
[22:15:02] <InPhase> Glumfish: That is assuming you are using either clang or gcc.
[22:15:16] <Glumfish> InPhase: same with C, but the language and standard are definately more complicated so you have to understand those things
[22:15:26] <Glumfish> InPhase: of course clang gang ftw
[22:15:46] <InPhase> zubeida: Perl had this for strings, but strings are just an example of something you can apply to ALL data.
[22:16:15] <blahboybaz> Node is starting to relly piss me off. Do you mean to tell me that there isn't a way to include, require, import, whatever you want to call it - an entire file? By that I mean, with one line of code in the file it's getting included into without having to use some variable or prefix every call to that object with a separate unique name, without having to export individual items in the included
[22:16:21] <blahboybaz> file --> just like how it works in C or C++ you #include something into another file and you fucking use it (directly). Am I getting this right or am I just missing how it is done?
[22:16:28] <zubeida> InPhase: what makes a language oop is a debatable question, but i don't think secure data types is a start, even.
[22:16:55] *** Joins: jamea (~jamea77@200.68.140.11)
[22:16:55] <InPhase> zubeida: Encapsulation is the core concept of it.
[22:16:56] <zubeida> InPhase: Haskell has secure types. Clojure too. Rust. Go.
[22:17:04] <zubeida> InPhase: none of them are OOP.
[22:17:11] <pyzozord> boycott: you can require('afile.js')
[22:17:12] <Glumfish> zubeida: a lot of people say that OOP is bascially just about message passing
[22:17:22] <Glumfish> between objects, that that is the fundamental concept
[22:17:31] <pyzozord> bytefire: or if you are using es7 syntax import 'afile.js'
[22:17:46] <zubeida> Glumfish: yes. Alan Kay says that. i think that's one important idea.
[22:17:56] *** Quits: \o` (~\o`@user/o/x-1005988) (Quit: Client closed)
[22:18:15] <InPhase> zubeida: I'm not sure why you think Rust isn't OO.
[22:18:34] *** Quits: jamea97 (~jamea77@200.68.140.59) (Ping timeout: 265 seconds)
[22:19:08] <GeDaMo> pyzozord: are you trying to ping blahboybaz? :P
[22:19:23] <pyzozord> oh right, sorry!
[22:19:44] <pyzozord> blahboybaz: you can use require('file.js') or in es7 syntax import 'file.js'
[22:19:47] <blahboybaz>  GeDaMo: ping? I thought that was a network utility
[22:20:05] *** Joins: Auron (Auron956@user/auron)
[22:20:24] <GeDaMo> On IRC 'ping' means naming someone, some clients will alert you when your name is mentioned
[22:20:41] <blahboybaz> pyzozord: I tried require('file.js'); then tried to use the stuff in it and got an error that the thing I was trying to call was "undefined"
[22:21:07] <pyzozord> blahboybaz: that might be because of circular dependencies
[22:21:09] <blahboybaz> had to do export modules = {item 1, item2, ... and so on};
[22:21:10] *** Joins: chomwitt (~Pitsikoko@athedsl-16082.home.otenet.gr)
[22:21:13] <InPhase> zubeida: The structs might be called struct in Rust, but they're basically classes skipping over the notion of inheritance.
[22:21:31] <deniska> a class is a struct with methods attached
[22:21:42] <pyzozord> blahboybaz: and yeah you need to export everything, things by default have only file scope
[22:21:46] <deniska> in C++ the only distinction is just a default visibility modifier
[22:21:52] <blahboybaz> They tried to talk about circular deps in a freecodecamp article on the subject but I don't grep that
[22:22:04] *** Joins: sheepduck (~sheepduck@user/sheepduck)
[22:22:09] *** Quits: [o (~sjw@pool-71-172-141-233.nwrknj.fios.verizon.net) (Read error: Connection reset by peer)
[22:22:47] <blahboybaz> Thats what I was talkinng about - I don't see why we can't just require some file (one line of code) and be done with it
[22:23:07] <Glumfish> blahboybaz: do you even sed bro?
[22:23:20] *** Joins: zoey (~zoey@2a02:8084:a080:9e00:3fae:994c:3fdc:274d)
[22:23:21] *** Joins: [o (~sjw@pool-71-172-141-233.nwrknj.fios.verizon.net)
[22:23:24] *** Quits: Booster2ooo (~Booster2o@host-213-189-163-54.dynamic.voo.be) (Read error: Connection reset by peer)
[22:23:26] <pyzozord> blahboybaz: that works, the code in the imported file will be still executed, just you can't interact with stuff that wasn't exported
[22:23:54] <blahboybaz> Glumfish:  I'm not really great at a lot. Not sure how great of a programmer I'll ever be but I'm in love with it and I can't help that.
[22:24:02] <pyzozord> blahboybaz: write a console.log in the imported file at the very bottom of the file. Then import that file, and observe console log working
[22:24:13] <Glumfish> blahboybaz: thats the spirit mate
[22:24:23] *** Quits: jinsun_ (~jinsun_@user/jinsun) (Remote host closed the connection)
[22:24:57] <blahboybaz> Well, it is what it is I guess
[22:25:21] <zubeida> InPhase: most languages do claim to be oop to woo audiences. but as i said, it's debatable.
[22:25:41] <pyzozord> language is compromise :P you need to invent your own if you want things your way
[22:25:56] <pyzozord> even then it will be probably some compromise
[22:26:27] <Glumfish> zubeida: I mean in the end the important part is what the language actually is and how well its desgined to solve the problems it sets out to do
[22:26:29] <blahboybaz> GeDaMo: Sorry brother I dind't get what you meant. Thanks for being there man
[22:26:55] <GeDaMo> No problem :)
[22:28:16] *** Quits: paulo_ (~paul0@user/paulo/x-9032687) (Ping timeout: 272 seconds)
[22:29:46] *** Quits: vitorgonc (~vitorgonc@2804:d55:580c:5e00:b930:5d2e:f2ac:9885) (Ping timeout: 240 seconds)
[22:30:12] <zubeida> Glumfish: ye
[22:32:38] *** Quits: exvicesindaco (~exvicio@user/exvicesindaco) (Remote host closed the connection)
[22:34:04] <jamea> i run my java program: java -jar jLeoniComprasExtTexto2.jar    run perfectly: C:\zprogramas\java\jLeoniComprasExtTexto2\dist>   but when run on: C:\Users\Miguel\Documents\_Negocio\Leoni\Compras\Transformar Archivos 2021\virtuales\w>  get this error: "Error: A JNI error has occurred, please check your installation and try again and Exception in thread "main" java.lang.NoClassDefFoundError:
[22:34:04] <jamea> org/apache/poi/ss/usermodel/Font" why?
[22:34:09] <jamea> how to fix?
[22:34:36] <Glumfish> jamea: *joke* You have to stop using Java
[22:34:50] <zubeida> Glumfish: please dont.
[22:34:58] <Glumfish> zubeida: *just joke*
[22:35:08] <Glumfish> I promise
[22:35:20] <KillerWasp> wow, how nice... how much crap peertube has... and promises to be decentralized... Who i'm giving my videos to this time?...
[22:35:24] <zubeida> Glumfish: it's pretty juvenile.
[22:35:45] <zubeida> Glumfish: ok
[22:36:02] *** Joins: merijn (~merijn@83-160-49-249.ip.xs4all.nl)
[22:36:30] <rindolf> jamea: $CLASSPATH ?
[22:37:15] *** Joins: pavonia (~user@user/siracusa)
[22:37:50] *** Joins: jamea97 (~jamea77@200.68.140.59)
[22:37:57] <Glumfish> KillerWasp: you will always end up selling your soul to someone, its inevitable these days
[22:38:20] <jamea97> sorry i am disconnected any answer_
[22:38:42] <KillerWasp> Glumfish# you want my soul? it's free!
[22:38:44] <Glumfish> rindolf suggested checkign $CLASSPATH
[22:38:47] <Glumfish> jamea97:
[22:38:52] *** Quits: jamea (~jamea77@200.68.140.11) (Ping timeout: 265 seconds)
[22:39:00] <Glumfish> KillerWasp: free as in price or as in freedom
[22:39:09] <rindolf> jamea: $CLASSPATH ?
[22:39:15] <KillerWasp> Glumfish# both
[22:39:20] <Glumfish> noice
[22:40:20] <jamea97> aum why classpath? would be error in first... run not?
[22:40:20] <KillerWasp> Another option is to create your own video player, I already have some of the knowledge, but it bothers me that it has to be on the web, I prefer a client made (by me) in C.
[22:40:34] *** Joins: penguino (~mrpenguin@user/mrpenguin)
[22:40:49] *** Joins: _wovixo_ (~wovixo@146.151.192.66)
[22:41:04] *** Joins: caterfxo (~caterfxo@216.sub-174-253-193.myvzw.com)
[22:41:11] <Glumfish> KillerWasp: you could make a client using something like libmpv and/or ffmpeg
[22:41:21] <KillerWasp> I wonder if I'm not making the mistake of giving in to the supposed ease and ending up using peertube.
[22:41:37] <Glumfish> KillerWasp: someone made this really cool in terminal rick roll
[22:41:44] <Glumfish> its was amazing, it even had audio
[22:41:44] <KillerWasp> Glumfish# ffmpeg libraries
[22:42:10] *** Quits: nekonibble (~nekonibbl@user/nekobit) (Quit: Segmentation fault (Core dumped))
[22:42:13] <KillerWasp> Glumfish# rick roll?
[22:42:16] <rindolf> KillerWasp: https://en.wikipedia.org/wiki/Ghost_in_the_Shell_(1995_film)
[22:42:45] *** Joins: entuland_ (~entuland@user/entuland)
[22:42:57] <Glumfish> here `curl -s -L http://bit.ly/10hA8iC | bash` try it (I take no responsibility, you have been warned)
[22:43:17] <Glumfish> or here is the full link `curl -s -L https://raw.githubusercontent.com/keroserene/rickrollrc/master/roll.sh | bash`
[22:43:20] <KillerWasp> heh...
[22:43:31] <Glumfish> its cool how its done using only shell script
[22:43:37] <Glumfish> especially since it leverages audio
[22:43:55] <Glumfish> and works on multiple unix systems
[22:43:59] <Glumfish> including mac
[22:44:00] *** Quits: wovixo (~wovixo@128.104.205.49) (Ping timeout: 252 seconds)
[22:44:19] <KillerWasp> I'm a coward and I don't dare to execute that line.
[22:44:28] *** Quits: jmcantrell (~weechat@user/jmcantrell) (Ping timeout: 246 seconds)
[22:44:32] <Glumfish> well take a look at the github
[22:44:34] *** Quits: danielrparks (~quassel@2600:1700:3f7b:20f:8e7:a4cc:2b19:bd03) (Quit: No Ping reply in 180 seconds.)
[22:44:37] <Glumfish> its open source
[22:45:20] <Glumfish> here take a look at a video of it I found : https://www.youtube.com/watch?v=lPUPhg1relU
[22:45:31] *** Quits: entuland (~entuland@user/entuland) (Ping timeout: 246 seconds)
[22:45:33] <KillerWasp> (I don't want to execute that line, but I do want to execute arbitrary code from peertube) *SIGH*
[22:45:49] *** Joins: danielrparks (~quassel@2600:1700:3f7b:20f:87a6:f7cc:b1eb:3d1c)
[22:46:06] *** Joins: nazuwi (~nazuwi@89.44.10.140)
[22:46:19] <Glumfish> Its interesting to atleast find out how it works
[22:46:42] *** Joins: jmcantrell (~weechat@user/jmcantrell)
[22:47:53] <Glumfish> KillerWasp: Its not gonna give you up, let you down, run around or desert you, tell a lie and hurt you
[22:48:04] <KillerWasp> Glumfish# 'afplay' and 'play'
[22:50:01] <KillerWasp> Glumfish# I think it's easier to put an iframe to my website and make the browser play the video...
[22:50:02] *** Joins: alycidyne (~kova@91-160-172-214.subs.proxad.net)
[22:50:18] <KillerWasp> very hacky, but good.
[22:50:31] <alycidyne> Hello, would it be possible to use something like tmpfs to implement an explicit file cache in userspace?
[22:50:35] <Glumfish> didn't know this thing existed lol, how its all neatly packaged is cool, and generally its just fun :) and when you show it to non tech people they get really excited
[22:50:52] <Glumfish> KillerWasp: probably a better idea than make your own client...
[22:51:26] *** Joins: Izem (~Izem@bras-base-london1483w-grc-42-65-95-172-41.dsl.bell.ca)
[22:51:43] *** Quits: gitesh (uid423739@id-423739.charlton.irccloud.com) (Quit: Connection closed for inactivity)
[22:51:57] <GeDaMo> alycidyne: what kind of cache? Like a RAM disk?
[22:52:52] *** Quits: Sauvin (~sauvin@about/linux/staff/sauvin) (Ping timeout: 246 seconds)
[22:53:14] *** Parts: Glumfish (~Glumfish@user/glumfish) (bye lads :))
[22:55:40] *** Joins: misnor (~misnor@156.57.153.38)
[22:56:03] <alycidyne> GeDaMo: ... actually, I think I need to do more research before asking ^^'
[22:56:32] *** Quits: rtypo (~alex@user/rtypo) (Quit: WeeChat 3.2)
[22:56:34] <GeDaMo> https://en.wikipedia.org/wiki/Filesystem_in_Userspace
[22:58:24] <GeDaMo> Alternatively, maybe mmap would be related to what you want
[22:59:13] *** Quits: jmcantrell (~weechat@user/jmcantrell) (Ping timeout: 268 seconds)
[22:59:53] <KillerWasp> alycidyne# you can use fuse3, but maybe is more hard for you
[23:00:57] *** Joins: jmcantrell (~weechat@user/jmcantrell)
[23:01:07] <alycidyne> KillerWasp: oh this isn't related to a project... at least, any "normal" project heh
[23:01:08] *** Quits: fweht (uid404746@id-404746.tooting.irccloud.com) (Quit: Connection closed for inactivity)
[23:02:03] *** Quits: kikijiki (~Thunderbi@user/kikijiki) (Quit: kikijiki)
[23:03:02] <alycidyne> GeDaMo: okay, first thing is I forgot to mention that this was part of my fs idea, which is entirely in userspace (hence me talking about it)
[23:03:17] <GeDaMo> Oh right, I forgot about that :P
[23:03:30] <alycidyne> Second thing is, I forgot: what do most VFSes cache, actual file contents or just name lookups?
[23:03:52] <GeDaMo> Honestly, I don't know, maybe just metadata
[23:05:03] <alycidyne> GeDaMo: right... then how are shared libraries actually implemented? Through the open file table or something deeper than a cache?
[23:05:25] <jamea97> worked only if copy libs directory generateed on dist, is possible add on same jar?
[23:06:08] <GeDaMo> I'm not sure how shared libraries relate to filesystems
[23:06:30] <GeDaMo> If you do an strace on a program, you can see it scanning directories for shared libraries
[23:07:03] *** Joins: MrMobius (~MrMobius@208.58.206.154)
[23:07:06] <alycidyne> I mean, I may be completely wrong, but I thought open library files got shared by requests to open them being redirected to a loaded memory copy
[23:07:42] <alycidyne> Which, the way I understood it, was done by the page cache
[23:08:10] <GeDaMo> I'm not sure if that happens but if it does, it would involve mapping some memory pages into the process address space
[23:08:13] * alycidyne reminds himself to be careful around caches, which were designed precisely to circumvent the laws of physics
[23:09:46] *** Quits: merijn (~merijn@83-160-49-249.ip.xs4all.nl) (Ping timeout: 240 seconds)
[23:09:53] *** Quits: MrMobius (~MrMobius@208.58.206.154) (Client Quit)
[23:10:06] <GeDaMo> That is, the physical pages containing the shared library would be mapped into the virtual address spaces of multiple processes
[23:10:10] *** Joins: MrMobius (~MrMobius@208.58.206.154)
[23:10:31] <GeDaMo> Like I said, I don't know if systems still do this
[23:11:53] *** Quits: MrMobius (~MrMobius@208.58.206.154) (Client Quit)
[23:12:11] *** Joins: MrMobius (~MrMobius@208.58.206.154)
[23:13:17] *** Quits: MrMobius (~MrMobius@208.58.206.154) (Remote host closed the connection)
[23:13:29] *** Joins: MrMobius (~MrMobius@208.58.206.154)
[23:14:41] *** Quits: johnwick (~johnwick@94.10.88.208) (Remote host closed the connection)
[23:15:20] *** Quits: MrMobius (~MrMobius@208.58.206.154) (Client Quit)
[23:15:37] *** Joins: MrMobius (~MrMobius@208.58.206.154)
[23:16:40] <alycidyne> GeDaMo: and what other way would systems do this?
[23:16:50] <alycidyne> Now I'm scratching my head
[23:17:57] <GeDaMo> Do what?
[23:18:30] <alycidyne> Share open library files
[23:18:47] *** Joins: vitorgonc (~vitorgonc@2804:d55:580c:5e00:b930:5d2e:f2ac:9885)
[23:19:07] <GeDaMo> Well they don't have to be shared in memory, they might only be shared on disk
[23:19:42] <GeDaMo> I don't know if there's a reason for each process to have its own copy of libraries in memory, I'm wondering if there might be some security-related reason
[23:20:16] <alycidyne> GeDaMo: wait, so the 'shared libraries' debate which began with the X server was about disk usage? Not memory usage?
[23:20:31] <GeDaMo> I'm not familiar with that debate
[23:20:56] <alycidyne> It's about the whole debate between dynamic linking and static linking
[23:21:25] <GeDaMo> With static linking the libraries are linked into the executable at compile (link) time
[23:21:38] <GeDaMo> With dynamic linking, the libraries are linked at load time
[23:21:56] <alycidyne> AFAIR the first 'dynamic linking considered harmful' appeared when X libraries essentially forced Unix vendors to implement a dynamic linking scheme
[23:22:23] <alycidyne> GeDaMo: ... so the same library might be loaded multiple times then?
[23:22:24] *** Joins: furrymcgee (~devuan@31.179.186.66)
[23:23:58] <GeDaMo> I know that systems used to share libraries in memory, I assume they still do but don't know for sure
[23:24:21] <pyzozord> alycidyne: I only started it but I seems it's a good book exactly about that subject https://www.amazon.com/Linkers-Kaufmann-Software-Engineering-Programming/dp/1558604960
[23:24:24] <alycidyne> Well Windows obviously did, else we wouldn't have as much DLL hell :P
[23:25:22] <pyzozord> I have a stupid question: what are your guys's strategies for using blank lines in the source code?
[23:25:57] <TJ-> pyzozord: to deliniate changes in flow, or focus
[23:25:58] <alycidyne> pyzozord: mainly before comments not beginning a block
[23:26:13] *** Joins: wovixo_ (~wovixo@128.104.205.49)
[23:26:42] <alycidyne> pyzozord: kinda like breaking your code into paragraphs, where each paragraph deals with a separate 'phase' of the function
[23:27:06] *** Quits: wovixo_ (~wovixo@128.104.205.49) (Client Quit)
[23:29:17] <pyzozord> In this example https://ideone.com/MOJeMX I used blank lines to separate kind of "init", "real work" and "cleanup"
[23:29:56] *** Quits: dunkeln_ (~dunkeln@188.70.10.207) (Read error: Connection reset by peer)
[23:30:01] <alycidyne> GeDaMo: That said, apart from COW, I don't see why systems wouldn't share libraries anymore
[23:30:02] *** Quits: _wovixo_ (~wovixo@146.151.192.66) (Ping timeout: 252 seconds)
[23:30:39] *** Joins: ayenet4 (~0x100@32.211.211.39)
[23:31:54] <Mangy_Dog> hi quick question... Say i do a floating calculation but i want to remove the decimal... when i place the number in a int8 or in16... does the decimal just get lost or can it cause errored numbers?
[23:32:03] *** Joins: gggpkm_ (~gggpkm@60.10.194.47)
[23:32:20] <GeDaMo> alycidyne: neither do I :P
[23:32:45] *** Quits: gggpkm_ (~gggpkm@60.10.194.47) (Remote host closed the connection)
[23:33:04] <GeDaMo> Mangy_Dog: your language should say how it rounds floating point on conversion
[23:33:16] *** Joins: gggpkm_ (~gggpkm@60.10.194.47)
[23:33:49] <Mangy_Dog> umm not set it in the makefile any rules
[23:34:01] <Mangy_Dog> its just part of the same slober stm32 stuff i usually do
[23:34:05] <GeDaMo> :|
[23:34:10] *** Quits: gggpkm (~gggpkm@221.219.64.188) (Ping timeout: 246 seconds)
[23:34:34] <Mangy_Dog> im just having a strange issue im trying to identify the root cause of
[23:34:48] <GeDaMo> Are you sure you're in the right channel?
[23:34:53] <alycidyne> Anyway, I can now reformulate my original question: could a disk cache be implemented a) entirely in userspace b) using a userspace tmpfs?
[23:35:18] <Mangy_Dog> yeah just wanted to rule out a problem when casint a floating result into a int
[23:35:23] <GeDaMo> The OS already caches disk using any memory not being used for other things
[23:35:49] *** Quits: ayenet4 (~0x100@32.211.211.39) (Remote host closed the connection)
[23:35:59] <alycidyne> GeDaMo: well, "normal" OSes that is :)
[23:36:03] *** Joins: ayenet4 (~0x100@32.211.211.39)
[23:36:13] <GeDaMo> Oh right, I keep forgetting you're working on your own FS :P
[23:36:31] <ayenet4> mangydog, iirc the ieee float spec allows for various rounding behaviors
[23:37:16] <Mangy_Dog> https://pastebin.com/knKAc5i1  small bit of code im having issue with
[23:37:28] <Mangy_Dog> its for rendering a BPM graphic...
[23:37:37] <Mangy_Dog> the framerate was 25fps
[23:37:52] <alycidyne> GeDaMo: ay, no worries, I'm also being kind of hard doing something totally different heh
[23:37:55] *** Parts: zubeida (~zubeida@117.222.64.149) ()
[23:38:09] <GeDaMo> Mangy_Dog: what type is bpm?
[23:38:10] <Mangy_Dog> the idea is the modulas is meant to keep the graphic lit for 2 frames
[23:38:18] <Mangy_Dog> uint8_t
[23:38:43] <Mangy_Dog> i dont need precise numbers just rounde3d off
[23:39:09] <GeDaMo> That will do an integer division, so rounded towards zero, I think
[23:39:19] <Mangy_Dog> thats fine
[23:39:36] <Mangy_Dog> sadly doesnt explain why the graphic is behaving a little irratic
[23:39:43] <Mangy_Dog> sometimes it pulses smoothly
[23:39:48] <Mangy_Dog> then sometimes a bit too randomly
[23:40:27] <Mangy_Dog> the bpm is ever changing
[23:40:30] <Mangy_Dog> its simulating a heart rate
[23:40:51] <alycidyne> It's alive
[23:41:09] <Mangy_Dog> but i have the rate change ++ or -- every 10 frames
[23:41:29] *** Quits: Thedarkb-Desktop (~beno@2001:bb6:b404:188f:7474:a5c3:ab91:d493) (Ping timeout: 252 seconds)
[23:42:32] *** Joins: Thedarkb-Desktop (~beno@2001:bb6:b404:188f:78ec:ad0c:c775:2f28)
[23:42:37] *** Joins: Inline (~Inline@2a02:908:1252:7a80:c035:deeb:51be:5431)
[23:43:14] *** Quits: Izem (~Izem@bras-base-london1483w-grc-42-65-95-172-41.dsl.bell.ca) (Quit: Connection closed)
[23:43:41] <GeDaMo> You might want to check what values bpm, bpmDelay, frame and (frame % bpmDelay) actually have
[23:43:46] <Mangy_Dog> https://imgur.com/a/0XffHwE
[23:43:53] <Mangy_Dog> well
[23:44:01] <Mangy_Dog> i can debug out dlay
[23:44:13] <Mangy_Dog> but you can see the graphic in the bottom
[23:44:50] *** Joins: lunarkitty (uid501895@user/pyra)
[23:44:53] *** Joins: inky (~inky@46.36.119.6)
[23:45:01] <alycidyne> Anyway, I'm going out, nice talking with you GeDaMo :)
[23:46:11] <GeDaMo> Good luck :)
[23:46:31] *** Quits: bytefire (~bytefire@51.19.235.161) (Quit: leaving)
[23:46:32] *** Joins: gggpkm (~gggpkm@60.10.194.47)
[23:46:32] *** Quits: inky_ (~inky@5.77.149.137) (Ping timeout: 252 seconds)
[23:46:56] *** Quits: alycidyne (~kova@91-160-172-214.subs.proxad.net) (Quit: leaving)
[23:47:46] *** Quits: gggpkm_ (~gggpkm@60.10.194.47) (Ping timeout: 240 seconds)
[23:48:13] *** Joins: __jmcantrell__ (~weechat@user/jmcantrell)
[23:48:22] *** Quits: rany (~rany@user/rany) (Quit: ZNC 1.8.2+deb2+b1 - https://znc.in)
[23:48:35] *** Joins: rany (~rany@user/rany)
[23:51:06] *** Quits: jmcantrell (~weechat@user/jmcantrell) (Ping timeout: 252 seconds)
[23:55:01] *** Quits: penguino (~mrpenguin@user/mrpenguin) (Ping timeout: 244 seconds)
