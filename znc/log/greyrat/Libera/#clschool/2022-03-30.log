[00:05:19] *** Quits: minion (~minion@common-lisp.net) (Remote host closed the connection)
[00:06:39] *** Joins: minion (~minion@common-lisp.net)
[00:09:36] *** Quits: treflip (~user@user/treflip) (Quit: Quit)
[00:27:57] *** Joins: tyson2 (~user@bras-base-toroon0624w-grc-08-70-29-36-27.dsl.bell.ca)
[00:45:51] *** Joins: lisp123 (~lisp123@143.238.171.43)
[00:51:17] *** Joins: seok (~Seok@n114-73-75-18.bla3.nsw.optusnet.com.au)
[00:51:42] <seok> Is there a shortcut to set all values in an array to nil or some value ?
[00:57:19] *** Quits: il (~il@user/f/x-7830992) (Quit: tc)
[01:01:36] <Bike> clhs fill
[01:01:41] <Bike> oh, no bot here
[01:02:46] <Bike> well, use cl:fill, seok. (fill array nil). that's only for one dimensional arrays, though.
[01:03:41] <seok> so for 2d arrays I guess I have to loop ?
[01:05:34] <Bike> yeah. probably (loop for i below (array-total-size array) do (setf (row-major-aref array i) nil))
[01:13:21] *** Joins: ec (~ec@gateway/tor-sasl/ec)
[01:19:41] *** Joins: f^ (~il@user/f/x-7830992)
[01:30:02] *** Quits: minion (~minion@common-lisp.net) (Remote host closed the connection)
[01:31:19] *** Joins: minion (~minion@common-lisp.net)
[01:59:48] *** Quits: shka (~herr@109.231.3.55) (Ping timeout: 272 seconds)
[02:05:03] *** Joins: hashfunc32 (~user@2601:5c0:c280:7090:4533:6252:8e32:243)
[02:15:51] <pjb> seok: (let ((a (make-array '(2 3 4) :initial-element 42))) (fill (make-array (reduce '* (array-dimensions a)) :displaced-to a :displaced-index-offset 0) nil) a) #| --> #3A(((nil nil nil nil) (nil nil nil nil) (nil nil nil nil)) ((nil nil nil nil) (nil nil nil nil) (nil nil nil nil))) |# 
[02:21:18] *** Joins: waleee (~waleee@2001:9b0:213:7200:cc36:a556:b1e8:b340)
[03:04:25] *** Quits: hashfunc32 (~user@2601:5c0:c280:7090:4533:6252:8e32:243) (Ping timeout: 256 seconds)
[03:14:53] *** f^ is now known as il
[03:19:53] *** Quits: ec (~ec@gateway/tor-sasl/ec) (Quit: ec)
[03:24:56] *** Joins: ec (~ec@gateway/tor-sasl/ec)
[03:44:02] *** Quits: tyson2 (~user@bras-base-toroon0624w-grc-08-70-29-36-27.dsl.bell.ca) (Remote host closed the connection)
[03:56:19] *** Quits: rotateq (~user@p200300e787143500a6f16de1b1c2e823.dip0.t-ipconnect.de) (Quit: ERC (IRC client for Emacs 27.2))
[04:42:23] *** Joins: tyson2 (~user@bras-base-toroon0624w-grc-08-70-29-36-27.dsl.bell.ca)
[04:53:09] *** Quits: Bike (~Glossina@71.69.170.70) (Quit: Lost terminal)
[04:53:31] *** Quits: random-nick (~random-ni@87.116.176.196) (Ping timeout: 246 seconds)
[04:56:15] *** Quits: seok (~Seok@n114-73-75-18.bla3.nsw.optusnet.com.au) (Ping timeout: 260 seconds)
[04:57:26] *** Joins: dre (~dre@2001:8003:c932:c301:55ad:378d:2c99:f745)
[04:58:36] *** Parts: dre (~dre@2001:8003:c932:c301:55ad:378d:2c99:f745) ()
[05:02:03] *** Joins: Bike (~Bike@71.69.170.70)
[05:08:57] *** Joins: seok (~Seok@n114-73-75-18.bla3.nsw.optusnet.com.au)
[05:36:20] *** Quits: waleee (~waleee@2001:9b0:213:7200:cc36:a556:b1e8:b340) (Quit: WeeChat 3.4.1)
[05:37:38] *** Joins: waleee (~waleee@2001:9b0:213:7200:cc36:a556:b1e8:b340)
[05:45:38] *** Quits: Bike (~Bike@71.69.170.70) (Quit: Connection closed)
[06:01:07] *** Joins: Bike (~Bike@71.69.170.70)
[06:31:15] *** Quits: Bike (~Bike@71.69.170.70) (Quit: Connection closed)
[06:36:31] *** Joins: hashfuncd36 (~user@2601:5c0:c280:7090:4533:6252:8e32:243)
[06:37:49] *** Quits: seok (~Seok@n114-73-75-18.bla3.nsw.optusnet.com.au) (Ping timeout: 246 seconds)
[06:51:30] *** Joins: seok (~Seok@n114-73-75-18.bla3.nsw.optusnet.com.au)
[07:06:00] *** Quits: hashfuncd36 (~user@2601:5c0:c280:7090:4533:6252:8e32:243) (Remote host closed the connection)
[07:06:53] *** Joins: hashfunc11d (~user@2601:5c0:c280:7090:4533:6252:8e32:243)
[07:16:16] *** Quits: hashfunc11d (~user@2601:5c0:c280:7090:4533:6252:8e32:243) (Ping timeout: 260 seconds)
[07:30:01] *** Joins: Bike (~Bike@71.69.170.70)
[07:31:13] <beach> Good morning everyone! 
[08:26:12] *** Quits: notzmv (~zmv@user/notzmv) (Ping timeout: 268 seconds)
[08:27:26] *** Joins: hashfunc11d (~user@2601:5c0:c280:7090:4533:6252:8e32:243)
[08:28:14] *** Quits: tyson2 (~user@bras-base-toroon0624w-grc-08-70-29-36-27.dsl.bell.ca) (Remote host closed the connection)
[08:32:31] *** Quits: waleee (~waleee@2001:9b0:213:7200:cc36:a556:b1e8:b340) (Ping timeout: 256 seconds)
[09:01:29] *** Quits: hashfunc11d (~user@2601:5c0:c280:7090:4533:6252:8e32:243) (Ping timeout: 250 seconds)
[09:04:32] *** Quits: Bike (~Bike@71.69.170.70) (Quit: Connection closed)
[09:20:25] *** Quits: pjb (~pjb@user/pjb) (Read error: Connection reset by peer)
[10:18:22] *** Joins: hashfunc1f63 (~user@2601:5c0:c280:7090:4533:6252:8e32:243)
[10:23:44] *** Quits: hashfunc1f63 (~user@2601:5c0:c280:7090:4533:6252:8e32:243) (Remote host closed the connection)
[10:57:50] *** Joins: waleee (~waleee@2001:9b0:213:7200:cc36:a556:b1e8:b340)
[11:09:35] *** Quits: waleee (~waleee@2001:9b0:213:7200:cc36:a556:b1e8:b340) (Ping timeout: 260 seconds)
[11:09:42] *** Joins: occ (~occ@user/occ)
[11:53:36] <occ> how to get length of a file ?
[11:55:45] <beach> ::clhs file-length
[11:55:54] <beach> Bah.
[11:56:31] <beach> occ: If you want to know the length of a file, it would be a good idea to look in the permuted symbol index for "file" or "length".
[11:56:41] <beach> If you did that, you would see FILE-LENGTH.
[11:58:39] <occ> beach: thank you, got it.  
[11:59:30] <beach> Pleasure. 
[12:02:34] *** Joins: shka (~herr@109.231.3.55)
[12:25:58] <occ> when use with-open-file with an existed file and I want to modify it , what option should I use after :if-exists ?
[12:48:27] <occ> how to open a file for modifing ?
[12:49:16] <beach> How do you expect to "modify" it?
[12:49:31] <occ> (with-open-file (s "/tmp/test.txt" :if-exists :supersede) ...)  will let the file be trunked.
[12:50:04] <occ> a text file,  change content in it.
[12:50:05] <beach> I know only how to replace the entire contents.  Not how to "modify" it.  Sorry.
[12:50:56] <occ> how to access a file in random mode in Lispï¼Ÿ
[12:53:01] <occ> :if-exists :overwrite 
[12:53:03] <beach> You can change the file position. 
[13:02:27] <occ> I should not use :supersede, it will truncate the file to zero length.
[13:03:18] <occ> and can't get the length of file through stream s in (with-open-file (s path) ...)
[13:03:29] <occ> :overwrite is ok.
[13:04:23] <occ> how to remove all things in a package ?
[13:05:33] <beach> Things?
[13:05:42] <occ> if I defined some functions/packages that I don't want any more , how to remove it/them in current Lisp image?
[13:05:50] <beach> Packages contain only symbols. 
[13:06:09] <beach> You can delete the package.
[13:07:05] <occ> (unintern package-name) ?
[13:07:38] <beach> Did you check the permuted symbol index for "delete" and "package"?
[13:09:02] <occ> beach: delete-package 
[13:10:35] <occ> beach: how do you  consult ref/doc when you don't know/unsure anything ?
[13:11:35] <beach> I said "you can DELETE the PACKAGE" so I gave you the search keys.
[13:11:51] <occ> in search engine ?
[13:12:04] <beach> In the permuted symbol index of the Common Lisp HyperSpec.
[13:13:34] <occ> I use a local CLHS. 
[13:14:28] <beach> That's fine.  
[13:14:43] <beach> Just look in the permuted symbol index. 
[13:16:01] <occ> I installed the local CLHS by quicklisp, don't know where the permuted symbol index is.
[13:16:30] <beach> On the start page, there is "symbol index", click on it.
[13:16:40] <beach> Then the lower part is the permuted symbol index.
[13:16:50] <occ> got!
[13:18:25] <occ> beach: if you want to write some code but you don't know which method/function/package to use,what do you do ?
[13:18:37] <occ> s/which/what
[13:19:20] <beach> That's a very general question.  The only solution I know of is to learn the language well, and for libraries, ask here or in #commonlisp. 
[13:19:59] <occ> there are lots lots of things to learn.
[13:20:41] <beach> Indeed.  
[13:20:50] <occ> for guys whose mother tongue isn't english ,it's very difficult.
[13:22:23] <beach> I would be in that category.  However, I think, if things are simple, they probably aren't worth the effort to learn, so it is normal that things are difficult.
[13:23:57] <occ> beach: :) thank you again. you told me a new way (to me) to find function/method in CLHS.
[13:24:36] <beach> Great!
[13:25:18] <occ> is there any meta-chapter that describes how to use CLHS in CLHS ?
[13:25:39] <beach> Not that I am aware of. 
[13:26:14] <beach> The Common Lisp HyperSpec is not great as an end-user document, but it's the best reference we have.  For learning, books are better, like PCL.
[13:27:44] <occ> wish guy who maintain the CLHS quicklisp package add some tips on how to use CLHS. that would be good to lisp beginner.
[13:28:58] <beach> I am afraid that won't happen.
[13:29:20] <beach> But maybe I'm wrong.
[13:31:07] <occ> how to remove temp function in package ?
[13:32:00] <beach> Packages don't have functions in them.  Only symbols.  You can make the function name no longer refer to the function by using FMAKUNBOUND.
[13:33:33] <occ>  how could a newbie found the fmakunbound in CLHS?
[13:33:58] <beach> You would read the book, for instance PCL.
[13:34:05] *** Joins: Josh_2 (~user@197.184.168.137)
[13:34:06] <occ> :)
[13:35:03] <beach> Again, the Common Lisp HyperSpec is not even a language reference.  It is made for people who implement Common Lisp systems.  It is kind of OK as a reference for people who already know the language.  It is not usable at all for newbies.
[13:35:22] <Josh_2> ^
[13:40:12] <occ> maybe a cheat sheet is useful.
[13:40:19] <Josh_2> gosh, it would be pretty long
[13:40:39] <Josh_2> there is an article by Norvig where he compares python and cl, there is a sort of "cheat sheet" in that
[13:53:51] *** Quits: occ (~occ@user/occ) (Ping timeout: 260 seconds)
[14:56:31] *** Joins: occ (~occ@user/occ)
[15:04:47] *** Quits: aeth (~aeth@user/aeth) (Ping timeout: 260 seconds)
[15:06:19] *** Joins: aeth (~aeth@user/aeth)
[15:12:51] *** Joins: pjb (~pjb@user/pjb)
[15:15:05] *** Joins: random-nick (~random-ni@87.116.176.196)
[15:18:21] *** Quits: lisp123 (~lisp123@143.238.171.43) (Remote host closed the connection)
[15:23:55] *** Quits: mala (~mala@user/malaclyps) (Ping timeout: 260 seconds)
[15:54:08] *** Joins: tyson2 (~user@bras-base-toroon0624w-grc-08-70-29-36-27.dsl.bell.ca)
[15:54:44] *** Joins: lisp123 (~lisp123@143.238.171.43)
[15:59:51] *** Quits: lisp123 (~lisp123@143.238.171.43) (Ping timeout: 260 seconds)
[16:30:26] *** Joins: treflip (~user@user/treflip)
[17:17:30] *** Quits: aeth (~aeth@user/aeth) (Ping timeout: 272 seconds)
[17:18:39] *** Joins: aeth (~aeth@user/aeth)
[17:23:05] *** Joins: mala (~mala@user/malaclyps)
[17:27:33] *** Joins: Bike (~Glossina@71.69.170.70)
[17:31:45] *** Quits: treflip (~user@user/treflip) (Remote host closed the connection)
[17:34:25] *** Joins: st_iron (uid370243@id-370243.uxbridge.irccloud.com)
[17:43:21] *** Joins: lisp123 (~lisp123@143.238.171.43)
[17:44:31] *** Quits: tyson2 (~user@bras-base-toroon0624w-grc-08-70-29-36-27.dsl.bell.ca) (Remote host closed the connection)
[17:48:14] *** Quits: lisp123 (~lisp123@143.238.171.43) (Ping timeout: 260 seconds)
[18:38:24] *** Joins: thrig (~thrig@207.108.197.156)
[18:38:28] *** Joins: treflip (~user@user/treflip)
[18:41:05] *** Joins: tewi (~tewi@apn-95-40-58-246.dynamic.gprs.plus.pl)
[18:47:33] *** Joins: tyson2 (~user@cpef492bf758151-cm688f2e29d8d0.cpe.net.cable.rogers.com)
[18:54:04] *** Quits: treflip (~user@user/treflip) (Remote host closed the connection)
[18:54:55] *** Joins: treflip (~user@user/treflip)
[19:15:31] *** Quits: treflip (~user@user/treflip) (Remote host closed the connection)
[19:16:12] *** Joins: treflip (~user@user/treflip)
[19:19:05] *** Joins: waleee (~waleee@2001:9b0:213:7200:cc36:a556:b1e8:b340)
[19:20:19] *** Quits: treflip (~user@user/treflip) (Client Quit)
[19:21:56] *** Joins: eugercek (~user@user/eugercek)
[19:31:21] *** Quits: tyson2 (~user@cpef492bf758151-cm688f2e29d8d0.cpe.net.cable.rogers.com) (Remote host closed the connection)
[19:31:25] *** Joins: rotateq (~user@p200300e787143500a6f16de1b1c2e823.dip0.t-ipconnect.de)
[19:31:38] *** Joins: lisp123 (~lisp123@143.238.171.43)
[19:36:13] *** Quits: lisp123 (~lisp123@143.238.171.43) (Ping timeout: 246 seconds)
[19:44:44] *** Quits: thrig (~thrig@207.108.197.156) (Read error: Connection reset by peer)
[19:45:58] *** Joins: tyson2 (~user@cpef492bf758151-cm688f2e29d8d0.cpe.net.cable.rogers.com)
[19:46:16] *** Joins: thrig (~thrig@207.108.197.156)
[20:01:32] *** Quits: occ (~occ@user/occ) (Ping timeout: 272 seconds)
[20:29:32] *** Quits: waleee (~waleee@2001:9b0:213:7200:cc36:a556:b1e8:b340) (Ping timeout: 260 seconds)
[20:31:03] *** Quits: tewi (~tewi@apn-95-40-58-246.dynamic.gprs.plus.pl) (Quit: WeeChat 3.4.1)
[20:42:01] *** Quits: tyson2 (~user@cpef492bf758151-cm688f2e29d8d0.cpe.net.cable.rogers.com) (Remote host closed the connection)
[20:42:53] *** Quits: eugercek (~user@user/eugercek) (Remote host closed the connection)
[20:49:51] *** Joins: tewi (~tewi@apn-95-40-58-246.dynamic.gprs.plus.pl)
[21:13:08] *** Joins: trocado (~uiop9@bl18-243-251.dsl.telepac.pt)
[21:19:52] *** Joins: lisp123 (~lisp123@143.238.171.43)
[21:24:20] *** Quits: lisp123 (~lisp123@143.238.171.43) (Ping timeout: 252 seconds)
[22:06:07] *** Quits: Partmedia (~kevinz@2600:6c40:6400:2f:221:ccff:fe66:4105) (Quit: reboot)
[22:06:23] *** Joins: Partmedia (~kevinz@2600:6c40:6400:2f:221:ccff:fe66:4105)
[22:08:31] *** Quits: thrig (~thrig@207.108.197.156) (Ping timeout: 260 seconds)
[23:04:14] *** Quits: st_iron (uid370243@id-370243.uxbridge.irccloud.com) (Quit: Connection closed for inactivity)
[23:08:11] *** Joins: lisp123 (~lisp123@143.238.171.43)
[23:12:48] *** Quits: lisp123 (~lisp123@143.238.171.43) (Ping timeout: 272 seconds)
[23:16:55] *** Joins: lisp123 (~lisp123@143.238.171.43)
[23:21:25] *** Quits: lisp123 (~lisp123@143.238.171.43) (Ping timeout: 250 seconds)
[23:27:45] *** Joins: waleee (~waleee@2001:9b0:213:7200:cc36:a556:b1e8:b340)
