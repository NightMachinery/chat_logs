[00:43:15] *** Quits: minion (~minion@common-lisp.net) (Remote host closed the connection)
[00:44:28] *** Joins: minion (~minion@common-lisp.net)
[00:58:37] *** Joins: tyson2 (~user@bras-base-toroon0624w-grc-19-70-31-33-162.dsl.bell.ca)
[01:04:52] *** Quits: artchad (~user@public-gprs225103.centertel.pl) (Read error: Connection reset by peer)
[01:51:11] *** Joins: mns (~mns@c-73-119-178-157.hsd1.ma.comcast.net)
[02:28:37] *** Quits: random-nick (~random-ni@87.116.167.125) (Ping timeout: 240 seconds)
[03:49:46] *** Joins: dra (~dra@2a04:4540:6402:9000:510e:1ea2:84e8:475a)
[04:21:11] *** Joins: opcode (~nathan@user/opcode)
[04:22:08] *** Joins: EdLangley[m] (~edwlanmed@2001:470:69fc:105::7a0b)
[04:22:23] *** Quits: shka (~herr@109.231.0.226) (Ping timeout: 268 seconds)
[04:30:13] *** Quits: dra (~dra@2a04:4540:6402:9000:510e:1ea2:84e8:475a) (Remote host closed the connection)
[04:55:12] *** Quits: waleee (~waleee@2001:9b0:21d:fc00:398f:b003:b90d:acf4) (Ping timeout: 250 seconds)
[04:59:26] *** Joins: waleee (~waleee@2001:9b0:21d:fc00:398f:b003:b90d:acf4)
[06:02:43] <rotateq> Hm very quiet.
[06:07:14] <rotateq> was funny some hours ago, a friend of mine asked me, why here 'while foo != {}:' in python didn't stop, when all elements of foo were removed. then i tried out and with 'while foo != set():' it works
[06:07:54] <rotateq> it's so intransparent, when typing {} it's seen as an empty DICTIONARY rather than a set
[06:08:30] <rotateq> but I'll tell her she better uses 'while len(foo) > 0:' maybe that's clearer :)
[06:08:32] <mfiano> This is #lispcafe material
[06:08:35] <rotateq> sry
[06:09:01] <rotateq> it's a bit ontopic, cause it reminds me that clearness with cl is important
[06:09:23] <rotateq> so I'll leave for some days to not go to offtopic jail
[06:09:25] *** Parts: rotateq (~user@p200300e78706a00050f72feb644e2401.dip0.t-ipconnect.de) (ERC (IRC client for Emacs 27.2))
[06:36:11] *** Joins: cyberbanjo (mksybr@tilde.team)
[06:38:57] *** Quits: waleee (~waleee@2001:9b0:21d:fc00:398f:b003:b90d:acf4) (Ping timeout: 240 seconds)
[06:45:52] *** Joins: Oladon (~olad@98.43.81.226)
[07:11:47] *** Quits: vats (~vats@103.216.143.18) (Ping timeout: 256 seconds)
[07:16:53] *** Quits: sts-q (~sts-q@212.53.219.134) (Ping timeout: 256 seconds)
[07:19:06] *** Joins: sts-q (~sts-q@212.53.219.204)
[07:31:00] <beach> Good morning everyone! 
[07:46:09] *** Quits: Oladon (~olad@98.43.81.226) (Quit: Leaving.)
[08:15:21] *** Quits: tyson2 (~user@bras-base-toroon0624w-grc-19-70-31-33-162.dsl.bell.ca) (Remote host closed the connection)
[08:54:59] *** Joins: [w] (~w]@2601:8c1:80:70d0::4b06)
[09:20:18] *** Joins: vats (~vats@103.216.143.32)
[09:27:00] *** Joins: Jing (~hedgehog@240e:390:7c53:a7e1:c16c:1790:8bf6:b4b5)
[10:58:06] *** Joins: lisp123 (~lisp123@5.30.23.247)
[11:04:05] *** Joins: artchad (~user@public-gprs225103.centertel.pl)
[12:21:07] *** Quits: lisp123 (~lisp123@5.30.23.247) (Remote host closed the connection)
[12:36:12] *** Joins: lisp123 (~lisp123@5.30.23.247)
[12:40:37] *** Quits: lisp123 (~lisp123@5.30.23.247) (Ping timeout: 240 seconds)
[12:48:17] *** Joins: shka (~herr@109.231.0.226)
[13:22:51] *** Joins: rain3 (~rain3___@5-12-7-240.residential.rdsnet.ro)
[14:02:25] *** Quits: vats (~vats@103.216.143.32) (Ping timeout: 256 seconds)
[15:02:52] *** Quits: [w] (~w]@2601:8c1:80:70d0::4b06) (Quit: zzz)
[15:22:01] *** Joins: lisp123 (~lisp123@5.30.23.247)
[15:26:32] *** Quits: lisp123 (~lisp123@5.30.23.247) (Ping timeout: 240 seconds)
[15:31:30] *** Joins: vats (~vats@103.216.143.14)
[15:49:08] *** Joins: akoana (~ah@user/akoana)
[15:56:10] <akoana> I've two small functions (avg and variance), I would appreciate any comments about that (e.g.: nested lambdas in variance...)
[15:56:19] <akoana> https://termbin.com/ts7w
[15:57:16] <akoana> thanks in advance to anyone who would care to have a look at that :)
[16:02:13] <pjb> akoana: when you use sequence functions, mind the :key argument, which can be very useful.
[16:02:49] <pjb> akoana: eg. (reduce #'+ list :key  (lambda (x) ((lambda (y) (* y y)) (- x avg)))) ; let's you avoid consing a list with mapcar.
[16:03:55] <akoana> pjb: ah, great, thank you!
[16:05:23] <akoana> I wasn't aware I could use :key here and then even with lambda...
[16:05:38] <akoana> that's really nice
[16:08:08] <pjb> akoana: I fail to understand the logic in the (1- len) in variance.
[16:08:37] <pjb> or the test (> len 1); 
[16:08:50] <pjb> either (> len 2) or divide by len.
[16:09:46] <pjb> https://en.wikipedia.org/wiki/Variance  defines it with (/ sum (square (xi - avg)) n)
[16:10:25] <akoana> pjb: I just used some formula found on the web (with a bias correction), yes it could be  divide by len
[16:10:52] <akoana> for population variance
[16:11:16] <pjb> ok. So s/variance/population-variance/
[16:11:35] <akoana> well I juste renamed it :)
[16:11:38] <akoana> just*
[16:12:27] <akoana> sorry for the misnaming
[16:12:32] <beach> akoana: WHEN and UNLESS should be used only in a context where the value is not used.
[16:13:00] <beach> akoana: In your case, what you probably mean is to return NIL if the length is 0, yes?
[16:13:11] <akoana> yes, exactly
[16:13:20] <beach> akoana: If so, then you should use IF instead with an explicit NIL if length is 0.
[16:13:56] <akoana> ah, I see, more explicit
[16:13:56] <pjb> akoana: I would use loop to avoid walking the list too many times (with length and with summing): https://termbin.com/592v
[16:14:41] *** Joins: tyson2 (~user@bras-base-toroon0624w-grc-19-70-31-33-162.dsl.bell.ca)
[16:18:12] <akoana> pjb: oh thank you, now I've got to study your code:)  - my intention was not to use loop (though suspecting loop would offer advantages) - just for exploration
[16:18:17] <beach> akoana: It is more explicit only in the situation when the value is used.  If you want to execute some code conditionally, but in a context where the value is not used, then WHEN and UNLESS are fine.
[16:19:17] <beach> pjb: Why do you have a newline after `(loop'?
[16:19:24] <beach> pjb: It's a waste of vertical space.
[16:20:04] <pjb> horizontal space is scarcer: only 80 columns :-)
[16:20:17] <beach> You are nowhere near that.
[16:20:26] <beach> And you should also avoid WHEN when the value is needed.
[16:20:39] <pjb> Well, I like this idiosyncratic style.
[16:20:54] *** Joins: random-nick (~random-ni@87.116.167.125)
[16:21:04] <pjb> Of course, if we returned something else than NIL, IF would be in order.
[16:21:21] <akoana> beach: thank you, food for thought...
[16:21:48] <beach> And I believe the two can be computed from the sum of the elements, the sum of the square of the elements, and the number of elements.
[16:22:10] <pjb> beach: I could argue that when n=0, the sample-variance doesn't exist, so nothing should be returned. Then WHEN seems indicated.  WHEN, as a poor-man (VALUES) .
[16:22:11] <beach> So no need to call AVG and then loop.
[16:22:40] <beach> pjb: You could argue that, but you would be wrong. :)
[16:23:11] <pjb> Right, I didn't remember the formula right away to avoid computing avg first.
[16:23:18] <beach> As an alternative I could imagine (if (plusp len) ... (error...))
[16:23:45] <pjb> or just: (if (plusp len) ... (values)) ; that'd be acceptable.
[16:23:57] <beach> Yes, that's fine too.
[16:32:51] <akoana> once more I'm overwhelmed with loop magic, I've to confess, anyway thank you both, pjb and beach for your comments and exanples!
[16:33:02] <akoana> examples even
[16:36:00] <beach> Pleasure. 
[16:41:57] *** Quits: vats (~vats@103.216.143.14) (Ping timeout: 240 seconds)
[17:39:06] *** Quits: artchad (~user@public-gprs225103.centertel.pl) (Read error: Connection reset by peer)
[17:46:04] *** Quits: shka (~herr@109.231.0.226) (Read error: Connection reset by peer)
[17:49:58] *** Joins: shka (~herr@109.231.0.226)
[18:04:23] *** Joins: lisp123 (~lisp123@5.30.23.247)
[18:09:41] *** Quits: lisp123 (~lisp123@5.30.23.247) (Ping timeout: 256 seconds)
[18:48:28] *** Joins: domovod (~domovod@176.196.122.197)
[18:51:07] *** Joins: artchad (~user@public-gprs225103.centertel.pl)
[18:52:44] *** Quits: epony (epony@user/epony) (Quit: QUIT)
[18:53:18] *** Joins: vats (~vats@103.216.143.56)
[18:56:26] *** Joins: lisp123 (~lisp123@45.86.201.13)
[18:57:05] *** Joins: dra (~dra@2a04:4540:6402:9000:d8f9:f30:9793:747d)
[19:05:35] *** Quits: tyson2 (~user@bras-base-toroon0624w-grc-19-70-31-33-162.dsl.bell.ca) (Ping timeout: 256 seconds)
[19:06:25] *** Joins: tyson2 (~user@bras-base-toroon0624w-grc-17-50-101-91-98.dsl.bell.ca)
[19:14:37] *** Joins: ec (~ec@gateway/tor-sasl/ec)
[19:24:52] *** Joins: epony (epony@user/epony)
[19:31:54] *** Parts: akoana (~ah@user/akoana) (Leaving)
[19:46:39] *** Quits: ec (~ec@gateway/tor-sasl/ec) (Ping timeout: 276 seconds)
[19:51:01] *** Joins: lisp123_ (~lisp123@5.30.23.247)
[19:51:07] *** Quits: lisp123_ (~lisp123@5.30.23.247) (Read error: Connection reset by peer)
[19:55:05] *** Quits: lisp123 (~lisp123@45.86.201.13) (Ping timeout: 256 seconds)
[19:59:06] *** Quits: Jing (~hedgehog@240e:390:7c53:a7e1:c16c:1790:8bf6:b4b5) (Quit: My MacBook has gone to sleep. ZZZzzzâ€¦)
[21:03:59] *** Quits: domovod (~domovod@176.196.122.197) (Quit: WeeChat 3.4)
[21:41:07] *** Joins: neceve (~quassel@2.26.93.228)
[21:52:36] *** Quits: vats (~vats@103.216.143.56) (Remote host closed the connection)
[21:57:56] *** Joins: treflip (~user@user/treflip)
[22:03:31] *** Quits: sts-q (~sts-q@212.53.219.204) (Ping timeout: 256 seconds)
[22:07:31] *** Quits: Jacobis9100 (~jonaholuf@host109-156-226-202.range109-156.btcentralplus.com) (Quit: leaving)
[22:07:59] *** Joins: sts-q (~sts-q@212.53.219.204)
[22:13:47] *** Quits: tyson2 (~user@bras-base-toroon0624w-grc-17-50-101-91-98.dsl.bell.ca) (Remote host closed the connection)
[22:13:50] *** Joins: waleee (~waleee@2001:9b0:21d:fc00:398f:b003:b90d:acf4)
[22:34:46] *** Quits: ChanServ (ChanServ@services.libera.chat) (shutting down)
[22:34:59] *** Quits: treflip (~user@user/treflip) (Quit: good night)
[22:35:18] *** Joins: ChanServ (ChanServ@services.libera.chat)
[22:35:18] *** erbium.libera.chat sets mode: +o ChanServ
[23:31:10] *** Joins: tyson2 (~user@bras-base-toroon0624w-grc-17-50-101-91-98.dsl.bell.ca)
[23:33:19] *** Quits: dra (~dra@2a04:4540:6402:9000:d8f9:f30:9793:747d) (Remote host closed the connection)
[23:42:37] *** Quits: tyson2 (~user@bras-base-toroon0624w-grc-17-50-101-91-98.dsl.bell.ca) (Remote host closed the connection)
[23:44:12] *** Quits: rain3 (~rain3___@5-12-7-240.residential.rdsnet.ro) (Remote host closed the connection)
[23:44:31] *** Joins: rain3 (~rain3___@2a02:2f09:d113:6d00:6f23:fba2:d834:1a7)
[23:49:29] *** Joins: Lanny (~Lanny@2600:1700:5f60:d2f:e9bf:6:848a:3a19)
[23:49:43] *** Parts: Lanny (~Lanny@2600:1700:5f60:d2f:e9bf:6:848a:3a19) ()
