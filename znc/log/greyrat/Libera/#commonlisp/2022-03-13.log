[00:03:24] *** Quits: tyson2 (~user@bras-base-toroon0628w-grc-46-142-112-141-177.dsl.bell.ca) (Ping timeout: 252 seconds)
[00:13:57] *** Quits: aartaka (aartaka@gateway/vpn/protonvpn/aartaka) (Ping timeout: 240 seconds)
[00:24:50] *** Joins: aartaka (aartaka@gateway/vpn/protonvpn/aartaka)
[00:26:27] *** Quits: brobot (brobot@user/brobot) (Remote host closed the connection)
[00:36:56] *** Quits: cage (~cage@dynamic-adsl-94-34-137-6.clienti.tiscali.it) (Quit: rcirc on GNU Emacs 27.1)
[00:40:47] *** Quits: aartaka (aartaka@gateway/vpn/protonvpn/aartaka) (Ping timeout: 256 seconds)
[00:45:50] *** Quits: thegreatcatadore (~thegreatc@69.151.207.13) (Quit: thegreatcatadore)
[00:53:02] *** Joins: aartaka (aartaka@gateway/vpn/protonvpn/aartaka)
[00:55:30] *** Joins: akoana (~ah@user/akoana)
[01:00:04] *** Joins: tyson2 (~user@bras-base-toroon0624w-grc-08-70-29-36-27.dsl.bell.ca)
[01:04:27] *** Quits: nature (~nature@45.32.235.173) (Ping timeout: 252 seconds)
[01:10:20] *** Quits: Dynom (~niels@80-114-12-206.cable.dynamic.v4.ziggo.nl) (Quit: WeeChat 3.4)
[01:11:55] *** Quits: wyrd (~wyrd@gateway/tor-sasl/wyrd) (Ping timeout: 240 seconds)
[01:15:10] *** Joins: jmes (~james@216.154.22.238)
[01:16:12] <jmes> Are there any extensible calculators written in CL? Perhaps somewhat inspired by emacs-calc?
[01:16:29] *** Quits: aartaka (aartaka@gateway/vpn/protonvpn/aartaka) (Ping timeout: 256 seconds)
[01:17:28] *** Joins: aartaka (aartaka@gateway/vpn/protonvpn/aartaka)
[01:18:30] *** Quits: dmh (~dmh@user/dmh) (Quit: rip)
[01:18:59] *** Joins: wyrd (~wyrd@gateway/tor-sasl/wyrd)
[01:19:47] *** Inline__ is now known as Inline
[01:34:09] *** Quits: Giovanni (~Giovanni@176.55.170.26) (Ping timeout: 252 seconds)
[01:35:02] *** Quits: aartaka (aartaka@gateway/vpn/protonvpn/aartaka) (Ping timeout: 272 seconds)
[01:35:35] *** Joins: thegreatcatadore (~thegreatc@199.101.125.118)
[01:35:44] <pjb> jmes: there's maxima, and a few other mathematical program that could be used.
[01:48:46] *** Joins: Guest74 (~Guest74@modemcable110.164-177-173.mc.videotron.ca)
[01:52:13] *** Joins: aartaka (aartaka@gateway/vpn/protonvpn/aartaka)
[01:54:54] *** Quits: Bike (~Bike@71.69.170.70) (Quit: Connection closed)
[01:55:19] *** Joins: hashfunc569 (~user@2601:5c0:c280:7090:78e9:5f82:1899:8c96)
[01:56:20] *** Quits: aartaka (aartaka@gateway/vpn/protonvpn/aartaka) (Ping timeout: 250 seconds)
[01:57:29] *** Joins: Bike (~Bike@71.69.170.70)
[02:05:49] *** Quits: lottaquestions (~nick@2607:fa49:5041:a200:e074:d04a:8e4c:140f) (Ping timeout: 240 seconds)
[02:09:45] *** Quits: cosimone (~user@2001:b07:ae5:db26:c24a:d20:4d91:1e20) (Quit: ERC (IRC client for Emacs 27.1))
[02:44:33] *** Quits: shka (~herr@109.231.3.55) (Ping timeout: 252 seconds)
[02:58:14] *** Quits: thegreatcatadore (~thegreatc@199.101.125.118) (Quit: thegreatcatadore)
[02:59:12] *** Quits: Oladon (~olad@98.43.81.226) (Quit: Leaving.)
[03:14:40] <markasoftware> qhong I think SICL has a hash table implementation with linear probing
[03:15:33] *** rdrg109_ is now known as rdrg109
[03:16:39] <markasoftware> Written probably all in cl
[03:32:01] *** Joins: tophullyte (tophullyte@gateway/vpn/protonvpn/tophullyte)
[03:36:27] *** Quits: Bike (~Bike@71.69.170.70) (Quit: Connection closed)
[03:39:54] *** Joins: thegreatcatadore (~thegreatc@199.101.125.118)
[03:40:26] *** Quits: random-nick (~random-ni@87.116.176.196) (Ping timeout: 272 seconds)
[03:45:30] <hashfunc569> i'm having trouble with UIOP:WITH-TEMPORARY-FILE. i want to WRITE something to the file. then i want to UIOP:READ-FILE-STRING. but when i UIOP:READ-FILE-STRING, i get an empty string "". here's the minimal reproducible example:
[03:45:33] <hashfunc569> (uiop:with-temporary-file (:stream s :pathname p :keep t) (write 'yo :stream s) (uiop:read-file-string (namestring p)))
[03:50:00] <markasoftware> Need to flush it maybe
[03:50:54] <markasoftware> Try (finish-output s) before read
[03:53:13] <jmes> pjb: Thanks, it's not exactly what I'm looking for, but I've been exploring some options.
[03:55:48] <Xach> hashfunc569: out of curiosity, why are you using an intermediary temporary file?
[03:56:39] <jmes> Question: how can I have name conflicts with COMMON-LISP when I don't :USE it in my DEFPACKAGE form? Details here https://dpaste.com/HETRVSJPS
[03:58:32] <etimmons> hashfunc569: using an intermediate file does seem weird. But I think adding :close-stream after you write should fix it (assuming you no longer want to write to the stream)
[04:02:50] <Guest74> jmes: seems cl+qt is exactly that.
[04:03:14] <Guest74> oops, misread.
[04:03:34] *** Quits: triffid (~triffid@gateway/tor-sasl/triffid) (Remote host closed the connection)
[04:06:45] <Xach> jmes: looks weird to me. i don't see an obvious reason in what you shared.
[04:10:06] <jmes> I restarted my lisp image and it works. I think it was because I was using COMMON-LISP in the previous DEFPACKAGE, then I fixed it and tried to re-run QL:QUICKLOAD but that remembered the old symbols
[04:10:59] *** Joins: s-liao (~s-liao@101.86.102.167)
[04:11:51] <Xach> ah. delete-package can help there.
[04:20:22] *** Joins: triffid (~triffid@gateway/tor-sasl/triffid)
[04:32:05] <hashfunc569> markasoftware: ok i'll give that a go when i get back
[04:33:54] <hashfunc569> Xach: the cli tool that i'm using requires that i use a file & i reallyyy don't feel like learning a new library. i'm just gonna use this approach to get it up-and-running, and then i'll refactor the code and whatnot
[04:34:20] <hashfunc569> etimmons: i tried adding :close-stream earlier and to no avail, but i'll try again when i get back
[04:41:47] <jmes> Xach: ty, I didn't know about delete-package
[05:03:06] *** Quits: gjvc (~gjvc@user/gjvc) (Quit: leaving)
[05:03:29] *** Joins: gjvc (~gjvc@user/gjvc)
[05:17:12] *** Joins: lottaquestions (~nick@104.221.94.126)
[05:27:28] *** Quits: tophullyte (tophullyte@gateway/vpn/protonvpn/tophullyte) (Ping timeout: 272 seconds)
[05:34:39] *** Quits: lucerne (~lucerne@ip202.ip-51-178-215.eu) (Read error: Connection reset by peer)
[05:37:41] *** Joins: lucerne (~lucerne@ip202.ip-51-178-215.eu)
[05:52:16] *** Joins: razetime (~quassel@117.254.34.148)
[05:53:35] *** Quits: karlosz (~karlosz@47.151.136.69) (Ping timeout: 256 seconds)
[05:55:58] *** Quits: wyrd (~wyrd@gateway/tor-sasl/wyrd) (Remote host closed the connection)
[05:56:11] *** Joins: wyrd (~wyrd@gateway/tor-sasl/wyrd)
[06:00:06] <hashfunc569> markasoftware: etimmons: (FINISH-OUTPUT s) and :CLOSE-STREAM both work after i'm done writing to the stream. thanks
[06:04:45] <char[m]> Is there some rules about what macros can expand into? Are there certain macros that are not allowed to expand into implementation specific functions?
[06:07:36] *** Joins: Bike (~Bike@71.69.170.70)
[06:08:59] <Bike> there are not really any general rules about what standard macros expand into, if that's what you're asking
[06:09:50] <Bike> sometimes it's defined that a macro expansion involves a call to some function, as with the MOP macros for example, but that's not a guarantee that the function call is directly in the expansion; e.g. sbcl's defclass expands into a call to something like load-defclass, which is a function that calls ensure-class as specified
[06:13:48] <char[m]> Just to clarify, I am talking about only macros defined in ansi. the load-class you refer to is implementation specific.
[06:14:08] <char[m]> s/load-class/load-defclass/
[06:14:28] *** Joins: Inline__ (~Inline@p200300cd473ac50039f51e8a2d5e1728.dip0.t-ipconnect.de)
[06:17:01] *** Quits: Inline (~Inline@p200300cd472d8600a7f83f236a05ec56.dip0.t-ipconnect.de) (Ping timeout: 240 seconds)
[06:21:23] <Bike> yes, but i mean, defclass is part of ansi
[06:22:00] <Bike> and it can expand into load-defclass, which is not, even though mop defines that the expansion of defclass needs to call the generic function ensure-class
[06:24:43] *** Quits: orestarod (~orestarod@2a02:2149:8b20:700:2b9d:7f86:7169:61c0) (Ping timeout: 268 seconds)
[06:25:24] *** Quits: thegreatcatadore (~thegreatc@199.101.125.118) (Quit: thegreatcatadore)
[06:43:02] *** Parts: pranavats (3fba1d1b34@2a00:c70:1:178:170:40:189:1) (Disconnected: Replaced by new connection)
[06:43:46] *** Joins: pranavats (3fba1d1b34@2a00:c70:1:178:170:40:189:1)
[06:43:53] *** Quits: jmes (~james@216.154.22.238) (Remote host closed the connection)
[06:46:24] <hashfunc569> how can transform everything in a form like how MAPCAR does, but instead for a tree?
[06:47:32] <hashfunc569> i've tried SUBST-IF but it doesn't give me access to the form itself
[06:47:33] <hashfunc569> or does it?
[06:48:52] <Bike> what form?
[06:50:24] <hashfunc569> i think an example is better suited for this question
[06:50:31] <hashfunc569> (mapcar (lambda (x) (+ x 10)) '(1 2 3)) --> (11 12 13)
[06:50:41] <hashfunc569> ^ that's what i expect
[06:50:52] <hashfunc569> (subst-if (lambda (x) (+ x 10)) #'integerp '(1 2 3)) --> (#<FUNCTION (LAMBDA (X)) {536963CB}> #<FUNCTION (LAMBDA (X)) {536963CB}> #<FUNCTION (LAMBDA (X)) {536963CB}>)
[06:51:00] <hashfunc569> ^ that's not what i want
[06:51:18] <hashfunc569> (subst-if (lambda (x) (+ x 10)) #'integerp '(1 2 3)) -- > (11 12 13)
[06:51:23] <hashfunc569> ^ that's what i want
[06:51:41] <Bike> oh, you want a transformation
[06:51:49] <Bike> yeah, subst-if doesn't do that
[06:52:22] <hashfunc569> is there a function that does do that?
[06:52:33] <Bike> not in the standard
[06:52:59] <hashfunc569> so there isn't like a MAPCAR equivalent for trees?
[06:54:50] <Bike> no. and it would have to be a bit more complicated, since you don't want to substitute everything
[06:55:00] <Bike> since you have the test, and separately, the transformation
[06:57:35] <hashfunc569> there has to be something simple available
[06:57:54] <hashfunc569> or a simple strategy
[06:58:15] *** Joins: Oladon (~olad@98.43.81.226)
[06:59:03] <hashfunc569> all i can think of is using a recursive mapcar
[06:59:53] <Oladon> I'm attempting to override a defsetf from another package, and it works when I manually evaluate it in SLIME, but not when I quickload the package -- anyone have any ideas as to what I might be missing?
[06:59:57] <hashfunc569> is there any way to iterator over a tree
[07:00:31] <markasoftware> Not in the standard.
[07:01:07] <hashfunc569> markasoftware: but subst essentially does it
[07:01:31] <markasoftware> Oh interesting
[07:01:42] <Bike> (defun maptree (function test tree &key (key #'identity)) (cond ((funcall test (funcall key tree)) (funcall function tree)) ((consp tree) (cons (maptree function test (car tree) :key key) (maptree function test (cdr tree) :key key))) (t tree)))
[07:02:18] <hashfunc569> Bike: thanks, i'll probably use that if i can't figure out how to mold subst to the way i need it
[07:02:33] <hashfunc569> SUBST is clearly accessing the elements, because it can compare the elements
[07:02:49] <hashfunc569> all i want is the element that SUBST is currently looking at
[07:03:59] <Bike> you cannot do what you want with subst
[07:04:23] <Bike> Oladon: not sure i understand what you're doing, but maybe the problem is a symbol being read in a different package than what you expect?
[07:06:01] <hashfunc569> Bike: truth
[07:07:52] <Oladon> Bike: Hmm... I've in-package'd to the package of the original defsetf, but perhaps you're on to something... I'd assumed #:package the same as :package, but is it not?
[07:08:06] <Bike> it is the same for your purpose
[07:08:10] <Oladon> Hrm.
[07:08:42] <Bike> so what's the scenario here? you have a system that includes a setf definition that overrides a setf definition in another system?
[07:09:15] <Oladon> Correct -- I'm overriding hunchentoot's session-value setf with my own.
[07:10:15] <Oladon> (I suspect it's an ugly thing to do and that I'm doing it in an ugly way, but I'll deal with that later)
[07:11:10] <Bike> maybe the problem has to do with recompiling hunchentoot? if you're using defsetf, you will have to recompile any previously compiled (setf (session-value ...) ...) to put the new definition in
[07:11:46] <Oladon> Hmm...
[07:12:01] <Oladon> I didn't realize that, but it makes sense... let's see...
[07:12:34] <Bike> (ditto define-setf-expander)j
[07:13:49] *** Quits: terrorjack (~terrorjac@2a01:4f8:1c1e:509a::1) (Quit: The Lounge - https://thelounge.chat)
[07:14:22] <Oladon> That doesn't seem like the issue... the setf comes after the definition (same file)
[07:14:40] *** Joins: terrorjack (~terrorjac@2a01:4f8:1c1e:509a::1)
[07:16:17] <Oladon> The thing that's weird to me though is that if I run a setf in the SLIME REPL, it calls my override... but if I just quickload the package (still in SLIME) and call an applicable method through localhost, it'll still run Hunchentoot's default one
[07:17:38] <Bike> that really sounds like there's an old setf form that needs recompilation
[07:17:44] *** Quits: razetime (~quassel@117.254.34.148) (Read error: Connection reset by peer)
[07:17:56] <Oladon> It does, doesn't it...
[07:17:59] <Oladon> hrm.
[07:20:40] <Oladon> Is there a way to specify in my asd that a particular package dependency should be recompiled after a component is loaded?
[07:20:59] <Oladon> Or what would be the best way to handle that?
[07:25:35] *** Quits: dre (~dre@2001:8003:c932:c301:5689:c0f3:d693:ff24) (Ping timeout: 252 seconds)
[07:26:03] *** Quits: luis (~luis@lisp/luis) (Quit: The Lounge - https://thelounge.chat)
[07:30:07] <beach> Good morning everyone!
[07:30:13] <Oladon> Morning beach!
[07:30:41] *** Joins: luis (~luis@lisp/luis)
[07:30:41] *** ChanServ sets mode: +o luis
[07:31:12] <beach> ::notify kpoeck Thanks, fixed!
[07:31:12] <Colleen> beach: Got it. I'll let kpoeck know as soon as possible.
[07:40:59] *** Quits: lucerne (~lucerne@ip202.ip-51-178-215.eu) (Remote host closed the connection)
[07:41:28] *** Joins: razetime (~quassel@117.254.34.148)
[07:41:50] *** Quits: Lord_Nightmare (znc@user/lord-nightmare/x-3657113) (Quit: ZNC - http://znc.in)
[07:42:28] *** Joins: lucerne (~lucerne@ip202.ip-51-178-215.eu)
[07:43:16] *** Joins: semz_ (~semz@user/semz)
[07:45:17] *** Joins: Lord_Nightmare (znc@user/lord-nightmare/x-3657113)
[07:45:42] *** Quits: akoana (~ah@user/akoana) (Quit: leaving)
[07:46:02] *** Quits: semz (~semz@user/semz) (Ping timeout: 260 seconds)
[08:13:01] *** Quits: mfiano (~mfiano@cpe-67-240-71-179.nycap.res.rr.com) (Quit: WeeChat 3.4)
[08:20:14] *** Quits: Bike (~Bike@71.69.170.70) (Quit: Connection closed)
[08:22:36] *** Quits: s-liao (~s-liao@101.86.102.167) (Quit: Client closed)
[08:26:49] *** Parts: pranavats (3fba1d1b34@2a00:c70:1:178:170:40:189:1) (Error from remote client)
[08:33:06] *** Quits: tyson2 (~user@bras-base-toroon0624w-grc-08-70-29-36-27.dsl.bell.ca) (Remote host closed the connection)
[08:33:53] *** Joins: dre (~dre@2001:8003:c932:c301:bcc3:636b:c0a:15ba)
[08:34:19] *** Joins: s-liao (~s-liao@101.86.102.167)
[08:35:21] *** Quits: s-liao (~s-liao@101.86.102.167) (Client Quit)
[08:54:57] *** Quits: waleee (~waleee@2001:9b0:213:7200:cc36:a556:b1e8:b340) (Ping timeout: 240 seconds)
[09:07:18] *** Quits: Guest74 (~Guest74@modemcable110.164-177-173.mc.videotron.ca) (Quit: Connection closed)
[09:12:13] *** Quits: dre (~dre@2001:8003:c932:c301:bcc3:636b:c0a:15ba) (Ping timeout: 240 seconds)
[09:22:34] <contrapunctus> Uhm...I'm trying to help a first-time programmer install SBCL on their Windows machine.
[09:25:36] <contrapunctus> Ah, they had accidentally installed the source tarball rather than the MSI installer.
[09:27:03] *** Quits: Oladon (~olad@98.43.81.226) (Quit: Leaving.)
[09:33:51] *** Joins: Guest74 (~Guest74@modemcable110.164-177-173.mc.videotron.ca)
[09:46:36] *** Joins: masinter (~masinter@c-73-158-116-21.hsd1.ca.comcast.net)
[09:47:07] *** Joins: zacque (~zacque@124.82.52.252)
[09:54:25] *** Joins: mfiano (~mfiano@cpe-67-240-71-179.nycap.res.rr.com)
[09:55:17] *** Joins: dre (~dre@2001:8003:c932:c301:efa8:3ab4:6d9d:737a)
[09:59:16] <contrapunctus> s/installed/downloaded/
[10:12:31] *** Joins: aartaka (aartaka@gateway/vpn/protonvpn/aartaka)
[10:20:46] *** Quits: mfiano (~mfiano@cpe-67-240-71-179.nycap.res.rr.com) (Read error: error:1408F119:SSL routines:ssl3_get_record:decryption failed or bad record mac)
[10:21:01] *** Joins: mfiano (~mfiano@cpe-67-240-71-179.nycap.res.rr.com)
[10:22:42] *** Quits: aartaka (aartaka@gateway/vpn/protonvpn/aartaka) (Ping timeout: 252 seconds)
[10:23:24] *** Joins: aartaka (aartaka@gateway/vpn/protonvpn/aartaka)
[10:24:36] *** Quits: splatt990 (4b25e29db1@198.108.77.17) (Ping timeout: 240 seconds)
[10:36:56] *** Joins: lisp123 (~lisp123@120.154.103.52)
[10:54:57] *** Quits: hashfunc569 (~user@2601:5c0:c280:7090:78e9:5f82:1899:8c96) (Ping timeout: 240 seconds)
[10:58:37] *** Joins: s-liao (~s-liao@101.86.102.167)
[11:01:02] *** Quits: aartaka (aartaka@gateway/vpn/protonvpn/aartaka) (Ping timeout: 250 seconds)
[11:12:06] *** Quits: lucerne (~lucerne@ip202.ip-51-178-215.eu) (Remote host closed the connection)
[11:12:18] *** Joins: aartaka (aartaka@gateway/vpn/protonvpn/aartaka)
[11:19:17] *** Joins: lucerne (~lucerne@ip202.ip-51-178-215.eu)
[11:28:36] *** Joins: pranavats (3fba1d1b34@2a00:c70:1:178:170:40:189:1)
[11:33:06] *** Quits: mfiano (~mfiano@cpe-67-240-71-179.nycap.res.rr.com) (Ping timeout: 250 seconds)
[11:36:10] *** Joins: Nselm (~Nselm@p200300d56f3ad47571811764dd95855a.dip0.t-ipconnect.de)
[11:40:16] *** Joins: mfiano (~mfiano@cpe-67-240-71-179.nycap.res.rr.com)
[11:50:31] *** Quits: lisp123 (~lisp123@120.154.103.52) (Remote host closed the connection)
[11:55:05] *** Quits: mfiano (~mfiano@cpe-67-240-71-179.nycap.res.rr.com) (Ping timeout: 272 seconds)
[11:57:25] *** Joins: mfiano (~mfiano@cpe-67-240-71-179.nycap.res.rr.com)
[12:00:39] *** Joins: lisp123 (~lisp123@120.154.103.52)
[12:04:27] *** Quits: mfiano (~mfiano@cpe-67-240-71-179.nycap.res.rr.com) (Ping timeout: 252 seconds)
[12:29:07] *** Quits: razetime (~quassel@117.254.34.148) (Ping timeout: 256 seconds)
[12:29:44] *** Joins: razetime (~quassel@117.254.34.148)
[12:30:06] *** Quits: zbrown[m] (~zbrownsys@2001:470:69fc:105::1:4e81) (Quit: You have been kicked for being idle)
[12:30:50] *** Quits: lisp123 (~lisp123@120.154.103.52) (Remote host closed the connection)
[12:35:07] *** Joins: wacki (~wacki@87.122.85.34)
[12:40:03] *** Joins: lisp123 (~lisp123@120.154.103.52)
[12:43:31] *** Joins: karlosz (~karlosz@47.151.136.69)
[12:51:19] *** Joins: gaqwas (~john@dynamic-095-118-097-023.95.118.pool.telefonica.de)
[12:55:02] *** Quits: notzmv (~zmv@user/notzmv) (Ping timeout: 240 seconds)
[12:57:36] *** Quits: karlosz (~karlosz@47.151.136.69) (Ping timeout: 250 seconds)
[12:59:07] *** Quits: gaqwas (~john@dynamic-095-118-097-023.95.118.pool.telefonica.de) (Remote host closed the connection)
[13:06:42] *** Quits: aartaka (aartaka@gateway/vpn/protonvpn/aartaka) (Ping timeout: 250 seconds)
[13:08:00] *** Joins: aartaka (aartaka@gateway/vpn/protonvpn/aartaka)
[13:11:06] *** Joins: dickbar__ (~dickbaren@86-90-132-28.fixed.kpn.net)
[13:15:18] *** Joins: ahammer (~ahammer@157.122.68.183)
[13:16:14] *** Quits: ahammer (~ahammer@157.122.68.183) (Client Quit)
[13:16:27] *** Joins: ahammer (~ahammer@157.122.68.183)
[13:20:54] *** Quits: ahammer (~ahammer@157.122.68.183) (Ping timeout: 252 seconds)
[13:23:47] *** Joins: ahammer (~ahammer@157.122.68.183)
[13:24:10] *** Quits: ahammer (~ahammer@157.122.68.183) (Remote host closed the connection)
[13:28:37] *** Quits: s-liao (~s-liao@101.86.102.167) (Ping timeout: 256 seconds)
[13:30:48] *** Quits: mon_aaraj (~MonAaraj@user/mon-aaraj/x-4416475) (Ping timeout: 252 seconds)
[13:32:45] *** Joins: mon_aaraj (~MonAaraj@user/mon-aaraj/x-4416475)
[13:36:09] *** Joins: cosimone (~user@93-44-187-176.ip98.fastwebnet.it)
[13:44:22] *** Joins: shka (~herr@109.231.3.55)
[13:54:58] *** Quits: lisp123 (~lisp123@120.154.103.52) (Remote host closed the connection)
[13:55:23] *** Joins: lisp123 (~lisp123@120.154.103.52)
[13:56:33] *** Joins: mfiano (~mfiano@cpe-67-240-71-179.nycap.res.rr.com)
[13:57:43] *** Joins: mgl (~mgl@cpc87455-finc19-2-0-cust234.4-2.cable.virginm.net)
[13:58:07] *** Joins: Dynom (~niels@80-114-12-206.cable.dynamic.v4.ziggo.nl)
[14:04:26] *** semz_ is now known as semz
[14:18:21] *** Quits: mfiano (~mfiano@cpe-67-240-71-179.nycap.res.rr.com) (Quit: WeeChat 3.4)
[14:25:33] *** Inline__ is now known as Inline
[14:29:46] *** Quits: lisp123 (~lisp123@120.154.103.52) (Remote host closed the connection)
[14:31:55] *** Quits: azimut (~azimut@gateway/tor-sasl/azimut) (Remote host closed the connection)
[14:32:23] *** Joins: azimut (~azimut@gateway/tor-sasl/azimut)
[14:37:45] *** Quits: mgl (~mgl@cpc87455-finc19-2-0-cust234.4-2.cable.virginm.net) (Ping timeout: 256 seconds)
[14:38:58] *** Joins: lisp123 (~lisp123@120.154.103.52)
[14:40:09] *** Joins: X-Scale` (~ARM@83.223.233.31)
[14:41:00] *** Quits: X-Scale (~ARM@219.206.137.78.rev.vodafone.pt) (Ping timeout: 272 seconds)
[14:41:01] *** X-Scale` is now known as X-Scale
[14:41:02] *** Joins: VincentVega (~user@212.97.0.35)
[14:43:24] *** Quits: lisp123 (~lisp123@120.154.103.52) (Ping timeout: 240 seconds)
[14:52:07] *** Joins: s-liao (~s-liao@101.86.102.167)
[15:03:06] *** Joins: igemnace (~ian@user/igemnace)
[15:05:38] *** Joins: cage (~cage@dynamic-adsl-94-34-137-6.clienti.tiscali.it)
[15:07:56] *** Joins: notzmv (~zmv@user/notzmv)
[15:24:13] *** Quits: aartaka (aartaka@gateway/vpn/protonvpn/aartaka) (Ping timeout: 256 seconds)
[15:25:49] *** Joins: tyson2 (~user@bras-base-toroon0624w-grc-08-70-29-36-27.dsl.bell.ca)
[15:28:30] *** Quits: mon_aaraj (~MonAaraj@user/mon-aaraj/x-4416475) (Ping timeout: 252 seconds)
[15:30:13] *** Joins: mon_aaraj (~MonAaraj@user/mon-aaraj/x-4416475)
[15:34:59] *** Quits: s-liao (~s-liao@101.86.102.167) (Ping timeout: 256 seconds)
[15:35:09] *** Joins: aartaka (aartaka@gateway/vpn/protonvpn/aartaka)
[15:37:44] *** Joins: lisp123 (~lisp123@120.154.103.52)
[15:41:31] *** Quits: igemnace (~ian@user/igemnace) (Remote host closed the connection)
[15:42:16] *** Quits: lisp123 (~lisp123@120.154.103.52) (Ping timeout: 250 seconds)
[15:45:25] *** Joins: thegreatcatadore (~thegreatc@199.101.125.118)
[15:49:00] *** Joins: orestarod (~orestarod@2a02:2149:8b20:700:2b9d:7f86:7169:61c0)
[15:51:20] *** Joins: mgl (~mgl@cpc87455-finc19-2-0-cust234.4-2.cable.virginm.net)
[15:57:39] *** Quits: Inline (~Inline@p200300cd473ac50039f51e8a2d5e1728.dip0.t-ipconnect.de) (Quit: Leaving)
[15:58:16] *** Quits: lucerne (~lucerne@ip202.ip-51-178-215.eu) (Read error: Connection reset by peer)
[16:00:10] *** Quits: razetime (~quassel@117.254.34.148) (Ping timeout: 272 seconds)
[16:02:21] *** Joins: random-nick (~random-ni@87.116.176.196)
[16:03:01] *** Quits: orestarod (~orestarod@2a02:2149:8b20:700:2b9d:7f86:7169:61c0) (Quit: Leaving)
[16:05:03] *** Quits: Nselm (~Nselm@p200300d56f3ad47571811764dd95855a.dip0.t-ipconnect.de) (Quit: Client closed)
[16:18:12] <gin> learning hunchentoot from http://edicl.github.io/hunchentoot/ . how does the function header-in* name &optional request => header avoid race condition? if two requests lands very close to each other, wouldn't the header-in* call while handling the first request end up reading the headers of the second request?
[16:28:35] *** Joins: Inline (~Inline@p200300cd473ac50039f51e8a2d5e1728.dip0.t-ipconnect.de)
[16:29:38] *** Quits: d4ryus (~d4ryus@ppp-93-104-13-17.dynamic.mnet-online.de) (Quit: WeeChat 3.4)
[16:30:16] *** Quits: Inline (~Inline@p200300cd473ac50039f51e8a2d5e1728.dip0.t-ipconnect.de) (Client Quit)
[16:30:51] *** Joins: Inline (~Inline@p200300cd473ac50039f51e8a2d5e1728.dip0.t-ipconnect.de)
[16:31:37] *** Joins: d4ryus (~d4ryus@ppp-93-104-13-17.dynamic.mnet-online.de)
[16:35:05] *** Joins: orestarod (~orestarod@2a02:2149:8b20:700:2b9d:7f86:7169:61c0)
[16:36:33] *** Joins: s-liao (~s-liao@101.86.102.167)
[16:43:08] <semz> gin: You should probably read up on dynamic variables. Hunchentoot (likely) rebinds *request* with (let ((*request* ...)) ...) for each handler. The rebindings for different requests don't observe each other.
[16:46:17] *** Quits: perrierjouet (~perrier-j@modemcable012.251-130-66.mc.videotron.ca) (Quit: WeeChat 3.4)
[16:52:01] *** Joins: perrierjouet (~perrier-j@modemcable012.251-130-66.mc.videotron.ca)
[16:54:49] *** Joins: lucerne (~lucerne@ip202.ip-51-178-215.eu)
[16:58:25] *** Joins: razetime (~quassel@117.193.4.214)
[17:02:32] <gin> semz: thanks
[17:05:32] *** Quits: zachel_ (~zachel@user/zachel) (Quit: DIsconnected: v7+nano)
[17:08:04] *** Joins: zachel (~zachel@user/zachel)
[17:28:00] *** dirtcastle_ is now known as dirtcastle
[17:28:51] *** Joins: splatt990 (4b25e29db1@198.108.77.17)
[17:30:17] *** Quits: ec (~ec@gateway/tor-sasl/ec) (Remote host closed the connection)
[17:31:17] *** Joins: ec (~ec@gateway/tor-sasl/ec)
[17:31:27] *** Joins: Bike (~Bike@71.69.170.70)
[17:34:01] *** Quits: Bike (~Bike@71.69.170.70) (Client Quit)
[17:34:13] *** Joins: Bike (~Bike@71.69.170.70)
[17:54:09] *** Quits: amb007 (~a_bakic@102.215.76.86.rev.sfr.net) (Ping timeout: 268 seconds)
[17:54:14] *** Quits: qhong (~qhong@rescomp-21-400677.stanford.edu) (Read error: Connection reset by peer)
[17:54:24] *** Joins: qhong (~qhong@rescomp-21-400677.stanford.edu)
[17:55:33] *** Quits: Guest74 (~Guest74@modemcable110.164-177-173.mc.videotron.ca) (Quit: Ping timeout (120 seconds))
[17:56:31] *** Joins: amb007 (~a_bakic@209.107.204.77.rev.sfr.net)
[17:56:38] *** Quits: zachel (~zachel@user/zachel) (Quit: DIsconnected: v7+nano)
[17:57:27] *** Joins: mayuresh (~kathe@49.32.134.182)
[17:57:42] <mayuresh> hello. :)
[17:58:20] *** Quits: mayuresh (~kathe@49.32.134.182) (Client Quit)
[17:59:05] *** Joins: zachel (~zachel@user/zachel)
[18:01:43] *** Joins: mfiano (~mfiano@cpe-67-240-71-179.nycap.res.rr.com)
[18:02:51] *** Quits: zacque (~zacque@124.82.52.252) (Quit: Goodbye :D)
[18:04:05] *** Joins: nature (~nature@45.32.235.173)
[18:08:41] *** Quits: s-liao (~s-liao@101.86.102.167) (Quit: Client closed)
[18:10:58] *** Quits: sterni (~lukas@user/sterni) (Quit: WeeChat 3.3)
[18:14:05] *** Joins: Guest74 (~Guest74@modemcable110.164-177-173.mc.videotron.ca)
[18:15:43] *** Joins: NotThatRPG_ (~NotThatRP@162-219-230-90.fttp.usinternet.com)
[18:17:18] *** Joins: sterni (~lukas@user/sterni)
[18:17:54] *** Quits: NotThatRPG (~NotThatRP@162-219-230-90.fttp.usinternet.com) (Ping timeout: 252 seconds)
[18:18:52] *** Quits: psf (~pi@206.55.172.18) (Ping timeout: 272 seconds)
[18:19:05] *** Joins: psf (~pi@206.55.172.18)
[18:32:36] <drbluefall> ' ')/
[18:35:45] *** Quits: mgl (~mgl@cpc87455-finc19-2-0-cust234.4-2.cable.virginm.net) (Ping timeout: 256 seconds)
[18:36:15] <beach> drbluefall: Are you new here?  I don't recognize your nick.  And I completely failed to interpret your message.
[18:36:42] <drbluefall> I've been lurking for a while, and it's a wave!
[18:36:52] <beach> Ah, got it!
[18:37:01] <beach> So, welcome!
[18:37:20] <drbluefall> danke ^~^
[18:38:03] * drbluefall goes back to searching for a half-decent mysql lib
[18:40:07] *** Quits: lucerne (~lucerne@ip202.ip-51-178-215.eu) (Remote host closed the connection)
[18:43:11] *** Joins: lucerne (~lucerne@ip202.ip-51-178-215.eu)
[18:43:17] *** Quits: razetime (~quassel@117.193.4.214) (Ping timeout: 240 seconds)
[18:51:49] *** Quits: amb007 (~a_bakic@209.107.204.77.rev.sfr.net) (Read error: Connection reset by peer)
[18:52:03] *** Joins: razetime (~quassel@117.254.34.148)
[18:52:08] *** Joins: amb007 (~a_bakic@102.215.76.86.rev.sfr.net)
[18:53:20] *** Joins: lisp123 (~lisp123@120.154.103.52)
[18:57:42] *** Quits: lisp123 (~lisp123@120.154.103.52) (Ping timeout: 250 seconds)
[18:59:32] *** Quits: robin (~robin@user/terpri) (Remote host closed the connection)
[18:59:59] *** Joins: lisp123 (~lisp123@120.154.103.52)
[19:02:23] *** Joins: robin (~robin@user/terpri)
[19:10:16] *** Quits: lisp123 (~lisp123@120.154.103.52) (Ping timeout: 250 seconds)
[19:13:55] *** Joins: Everything (~Everythin@37.115.210.35)
[19:26:02] *** Quits: aartaka (aartaka@gateway/vpn/protonvpn/aartaka) (Ping timeout: 240 seconds)
[19:32:44] *** Quits: tyson2 (~user@bras-base-toroon0624w-grc-08-70-29-36-27.dsl.bell.ca) (Remote host closed the connection)
[19:33:48] *** Quits: robin (~robin@user/terpri) (Remote host closed the connection)
[19:41:29] *** Quits: mon_aaraj (~MonAaraj@user/mon-aaraj/x-4416475) (Ping timeout: 256 seconds)
[19:43:34] *** Joins: mon_aaraj (~MonAaraj@user/mon-aaraj/x-4416475)
[19:46:02] *** Quits: mfiano (~mfiano@cpe-67-240-71-179.nycap.res.rr.com) (Quit: WeeChat 3.4)
[19:46:24] *** Joins: mfiano (~mfiano@cpe-67-240-71-179.nycap.res.rr.com)
[19:46:35] *** Quits: nature (~nature@45.32.235.173) (Ping timeout: 256 seconds)
[19:48:00] *** Quits: mfiano (~mfiano@cpe-67-240-71-179.nycap.res.rr.com) (Client Quit)
[19:51:46] *** Joins: mfiano (~mfiano@cpe-67-240-71-179.nycap.res.rr.com)
[20:08:33] *** Quits: masinter (~masinter@c-73-158-116-21.hsd1.ca.comcast.net) (Quit: ~ Trillian - www.trillian.im ~)
[20:08:53] *** Joins: lisp123 (~lisp123@120.154.103.52)
[20:09:41] *** Joins: tyson2 (~user@cpe44d9e795a64f-cm688f2e2dfaa0.sdns.net.rogers.com)
[20:13:33] *** Quits: lisp123 (~lisp123@120.154.103.52) (Ping timeout: 256 seconds)
[20:27:44] *** Joins: waleee (~waleee@2001:9b0:213:7200:cc36:a556:b1e8:b340)
[20:32:06] *** Quits: razetime (~quassel@117.254.34.148) (Ping timeout: 252 seconds)
[20:42:19] *** Quits: Bike (~Bike@71.69.170.70) (Quit: Connection closed)
[20:51:31] *** Quits: thegreatcatadore (~thegreatc@199.101.125.118) (Quit: thegreatcatadore)
[20:59:34] *** Quits: perrierjouet (~perrier-j@modemcable012.251-130-66.mc.videotron.ca) (Quit: WeeChat 3.4)
[21:01:53] *** Joins: perrierjouet (~perrier-j@modemcable012.251-130-66.mc.videotron.ca)
[21:06:50] *** Quits: amb007 (~a_bakic@102.215.76.86.rev.sfr.net) (Ping timeout: 250 seconds)
[21:07:01] *** Joins: masinter (~masinter@c-73-158-116-21.hsd1.ca.comcast.net)
[21:07:08] *** Joins: amb007 (~a_bakic@102.215.76.86.rev.sfr.net)
[21:11:20] *** Joins: Oladon (~olad@98.43.81.226)
[21:14:26] *** Quits: Guest74 (~Guest74@modemcable110.164-177-173.mc.videotron.ca) (Quit: Connection closed)
[21:14:53] *** Joins: thegreatcatadore (~thegreatc@199.101.125.118)
[21:20:49] *** Joins: robin (~robin@user/terpri)
[21:21:33] <jmercouris> Is there some kind of append that can accept both single elements and lists?
[21:21:45] <jmercouris> Something in Alexandria that does not distinguish?
[21:22:01] <jmercouris> When I say “single elements”, I mean atoms of course
[21:24:18] <jmercouris> I guess I could mapcar ensure list or something
[21:24:22] <jmercouris> Or make a macro of my own
[21:24:35] <jmercouris> But this seems a common enough practice that there should be something you know
[21:27:09] *** Joins: nature (~nature@45.32.235.173)
[21:28:35] <yitzi> Maybe use mapcan.
[21:31:43] *** Quits: cosimone (~user@93-44-187-176.ip98.fastwebnet.it) (Quit: ERC (IRC client for Emacs 27.1))
[21:32:41] *** Quits: _whitelogger (~whitelogg@uruz.whitequark.org) (Read error: Connection reset by peer)
[21:33:00] *** Joins: _whitelogger_ (~whitelogg@uruz.whitequark.org)
[21:45:47] *** Joins: Guest74 (~Guest74@modemcable110.164-177-173.mc.videotron.ca)
[21:49:07] *** Joins: Bike (~Bike@71.69.170.70)
[21:50:01] <jackdaniel> mapcant ;)
[21:50:18] <jackdaniel> this function name always sounds funny to me
[21:51:02] <drakonis> mapcar?
[21:51:17] <jackdaniel> mapcan
[21:51:25] <drakonis> ha, i havent used that yet
[21:52:05] <edgar-rft> 𝄞 ♩ ♫ mapchant ♪ ♬ ...
[21:52:10] <jackdaniel> jmercouris: (mappend 'ensure-list lists)
[21:54:36] *** Quits: tyson2 (~user@cpe44d9e795a64f-cm688f2e2dfaa0.sdns.net.rogers.com) (Read error: Connection reset by peer)
[21:54:50] *** Joins: tyson2 (~user@cpe44d9e795a64f-cm688f2e2dfaa0.sdns.net.rogers.com)
[21:56:09] <yitzi> jackdaniel: mapwecandoit
[21:57:33] <yitzi> jmercouris: https://plaster.tymoon.eu/view/2983
[21:57:40] <jackdaniel> (yes-we-can-p ...)
[22:00:41] *** Quits: VincentVega (~user@212.97.0.35) (Remote host closed the connection)
[22:02:44] *** Quits: tyson2 (~user@cpe44d9e795a64f-cm688f2e2dfaa0.sdns.net.rogers.com) (Remote host closed the connection)
[22:05:46] *** Quits: thegreatcatadore (~thegreatc@199.101.125.118) (Quit: thegreatcatadore)
[22:35:15] *** Joins: thegreatcatadore (~thegreatc@199.101.125.118)
[22:35:36] *** Quits: Bike (~Bike@71.69.170.70) (Quit: Connection closed)
[22:39:31] *** Quits: edgar-rft (~edgar-rft@ip-109-193-249-223.um39.pools.vodafone-ip.de) (Remote host closed the connection)
[22:39:50] *** Joins: edgar-rft (~edgar-rft@ip-109-193-249-223.um39.pools.vodafone-ip.de)
[22:40:17] *** Quits: Brucio-61 (~Brucio-72@ip-094-114-248-079.um31.pools.vodafone-ip.de) (Ping timeout: 240 seconds)
[22:41:06] <yitzi> 5
[22:42:41] <drbluefall> can't seem to figure out how to define a root route with snooze...
[22:43:00] *** Joins: cosimone (~user@93-44-187-176.ip98.fastwebnet.it)
[22:43:02] <drbluefall> either it's painfully obvious and I'm missing it or it's not possible
[22:53:48] *** Joins: tane (~tane@dslb-002-201-234-175.002.201.pools.vodafone-ip.de)
[22:53:48] *** Quits: tane (~tane@dslb-002-201-234-175.002.201.pools.vodafone-ip.de) (Changing host)
[22:53:48] *** Joins: tane (~tane@user/tane)
[22:54:27] *** Quits: d4ryus (~d4ryus@ppp-93-104-13-17.dynamic.mnet-online.de) (Quit: WeeChat 3.4)
[22:54:45] *** Joins: Bike (~Bike@152.7.255.195)
[22:57:34] *** Joins: d4ryus (~d4ryus@ppp-93-104-13-17.dynamic.mnet-online.de)
[22:59:11] *** Quits: Guest74 (~Guest74@modemcable110.164-177-173.mc.videotron.ca) (Quit: Connection closed)
[23:07:03] *** Quits: mon_aaraj (~MonAaraj@user/mon-aaraj/x-4416475) (Ping timeout: 272 seconds)
[23:07:26] *** Quits: Everything (~Everythin@37.115.210.35) (Quit: leaving)
[23:08:45] *** Joins: mon_aaraj (~MonAaraj@user/mon-aaraj/x-4416475)
[23:12:49] *** Quits: thegreatcatadore (~thegreatc@199.101.125.118) (Quit: thegreatcatadore)
[23:22:23] *** Joins: karlosz (~karlosz@47.151.136.69)
[23:23:42] *** Joins: Brucio-61 (~Brucio-72@ip-094-114-248-079.um31.pools.vodafone-ip.de)
[23:29:32] *** Joins: Lord_of_Life_ (~Lord@user/lord-of-life/x-2819915)
[23:30:12] *** Quits: Lord_of_Life (~Lord@user/lord-of-life/x-2819915) (Ping timeout: 240 seconds)
[23:30:48] *** Lord_of_Life_ is now known as Lord_of_Life
[23:31:08] <jmercouris> yitzi: of course I can write a function, just don’t want to reinvent the wheel for my codebase if there is some sort of “idiomatic” example
[23:31:29] <jmercouris> jackdaniel: perhaps this is the way
[23:36:41] <Bike> if the wheel is simple enough it can be faster to reinvent it than to find an existing one
[23:36:46] <Bike> or something. metaphor: overextended
[23:39:22] *** Quits: karlosz (~karlosz@47.151.136.69) (Ping timeout: 250 seconds)
[23:40:46] <yitzi> I would argue that writing your own simple "wheels" is idiomatic in CL versus including bloated libraries that attempt to solve all problems but end up doing it badly ... IMHO.
[23:43:42] *** Quits: Alfr (~Alfr@user/alfr) (Quit: Leaving)
[23:51:57] <jackdaniel> yitzi: I second that opinion :)
[23:52:24] <jackdaniel> jmercouris: you are perhaps welcome ,)
[23:54:39] <yitzi> jackdaniel: consider the motion passed! ;)
