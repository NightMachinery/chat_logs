[01:00:03] <nedbat> escherial: it sounds interesting. can you say more about why you want to remove classes?
[01:00:48] *** Quits: theseb (~theseb@47-220-214-54.cnrocmta03.res.dyn.suddenlink.net) (Remote host closed the connection)
[01:01:24] *** Quits: bahamas (~lucian@84.232.140.158) (Ping timeout: 252 seconds)
[01:03:17] *** Joins: radu242 (~radu242@pool-96-250-220-83.nycmny.fios.verizon.net)
[01:03:36] *** Quits: jpodivin (~jpodivin@cgnat44-pool3-71-160.poda.cz) (Ping timeout: 252 seconds)
[01:03:41] <escherial> nedbat: it's not really that interesting...i'm using a tool that produces a model definition from a database, and there are some extra classes in the output that i want to remove
[01:03:43] <nedbat> Barones: how often do your requirements change?
[01:04:02] <nedbat> escherial: why does it matter that they are in the file? If no one uses them, what's the problem?
[01:04:13] *** Joins: theseb (~theseb@47-220-214-54.cnrocmta03.res.dyn.suddenlink.net)
[01:04:42] <escherial> nedbat: they're django model classes, so they'll get detected by django's model loading code and conflict with the existing classes
[01:04:55] <nedbat> escherial: i see
[01:04:55] <escherial> nedbat: honestly, this whole thing is a hack that makes me want to die
[01:05:02] <escherial> off-topic, i guess
[01:05:15] <nedbat> escherial: it might be simple enough to do it with text manipulation instead of ast
[01:05:35] <escherial> nedbat: right, that's what i thought at first, but i was told in no uncertain terms in #bash that sed is not the way
[01:05:46] <Barones> nedbat, I do test some modules and read and test other ppl codes on env
[01:05:47] <nedbat> escherial: i wasn't thinking sed, i was thinking python
[01:05:49] *** Quits: wyre (~wyre@user/wyre) (Quit: ZNC 1.8.2 - https://znc.in)
[01:05:54] *** Joins: sobkas (~sobkas@95.175.17.217)
[01:06:04] *** Quits: acidsys (~LSD@2a03:4000:55:d20::3) (Excess Flood)
[01:06:04] *** Joins: Hokedli (~lasliedv@gateway/tor-sasl/hokedli)
[01:06:08] <escherial> nedbat: ah, ok, cool. yeah, i could do it in python without much trouble, sure
[01:06:15] <CrtxReavr> How, the docstring for ast.unparse() is horribad.
[01:06:18] <nedbat> Barones: sure, but you said youve have to freeze/install constantly.  Only when requirements change.
[01:06:20] <CrtxReavr> s/How/Wow
[01:06:28] <SnoopJ> CrtxReavr, in what way?
[01:06:37] *** Joins: acidsys (~LSD@2a03:4000:55:d20::3)
[01:06:39] *** Quits: ExpiredKebab (~sgreadly@2407:7000:89aa:b303:f939:34d5:7362:6adf) (Quit: My MacBook Air has gone to sleep. ZZZzzzâ€¦)
[01:06:58] <CrtxReavr> ``
[01:07:08] <CrtxReavr> ``unparse(ast_obj)``
[01:07:12] <CrtxReavr> That's its full text.
[01:07:24] <SnoopJ> oh, you mean the actual docstring
[01:07:34] *** Joins: ExpiredKebab (~sgreadly@2407:7000:89aa:b303:f939:34d5:7362:6adf)
[01:07:37] <SnoopJ> I don't really know why the stdlib likes to leave them empty so often :(
[01:07:40] *** Joins: wyre (~wyre@user/wyre)
[01:07:49] <CrtxReavr> Yes. . . I try to speak literally most of the time.
[01:07:52] <SnoopJ> or not even empty in that case, it's None
[01:07:57] *** Quits: src (~src@user/src) (Ping timeout: 240 seconds)
[01:08:09] *** Quits: wakeup (~wakeup@user/wakeup) (Quit: Client closed)
[01:08:24] <Barones> I see, thanks nedbat , so I would only pip install -r on projects, that makes sense. No need to do it constantly
[01:08:32] *** Quits: dakudos (~dakudos@c-73-229-175-50.hsd1.co.comcast.net) (Ping timeout: 252 seconds)
[01:08:37] *** Quits: foul_owl (~kerry@23.82.193.87) (Ping timeout: 240 seconds)
[01:09:01] *** Quits: Thanatos (~Thanatos@105.112.16.248) (Read error: Connection reset by peer)
[01:09:19] *** Joins: Thanatos (~Thanatos@105.112.16.248)
[01:09:32] *** Joins: tkazi (~tkazi@user/tkazi)
[01:10:05] *** Joins: src (~src@user/src)
[01:10:28] *** Joins: merijn (~merijn@c-001-001-001.client.esciencecenter.eduvpn.nl)
[01:10:49] *** Joins: ThanatosJ (~Thanatos@105.112.16.248)
[01:12:01] *** Quits: newpy (~newpy@2601:280:4381:1390:c31c:7c32:bc2a:a52e) (Ping timeout: 245 seconds)
[01:12:40] *** Quits: tkazi (~tkazi@user/tkazi) (Client Quit)
[01:13:29] <squirrel> with tox, and generally with pip, in a case of a dependency conflict, is there a way to override some constraints to resolve it? i have a package that depends on another package but specifies a maximum version, and that version is too low.
[01:13:39] *** Joins: tkazi (~tkazi@user/tkazi)
[01:13:42] *** Quits: tkazi (~tkazi@user/tkazi) (Remote host closed the connection)
[01:13:48] *** Quits: Thanatos (~Thanatos@105.112.16.248) (Ping timeout: 240 seconds)
[01:14:09] *** Quits: diddly_bop_ (~diddly_bo@107-196-11-132.lightspeed.wchtks.sbcglobal.net) (Quit: Leaving)
[01:14:22] *** Quits: orbisvicis (~orbisvici@user/orbisvicis) (Quit: Leaving)
[01:14:32] <TML> squirrel: fork other package and update it?
[01:15:03] *** Quits: vimal (~vimal@2a02:a210:9600:1f00:cf25:5fe2:fd13:9e52) (Quit: Leaving)
[01:15:28] <TML> just blindly forcing a particular version of package A when package B declares a dependency on an older version seems like it could go horribly, horribly wrong in all kinds of subtle and pernicious ways
[01:16:08] *** Joins: tkazi (~tkazi@user/tkazi)
[01:16:20] <anddam> how are extras handled in setuptools? https://peps.python.org/pep-0508/#extras
[01:17:05] <squirrel> TML: that's what i did but and it works but i was trying to avoid that. besides this is only for testing so it should be safe enough
[01:18:20] *** Joins: nesoi (~Adium@60-241-111-113.static.tpgi.com.au)
[01:19:02] *** Quits: radu242 (~radu242@pool-96-250-220-83.nycmny.fios.verizon.net) (Ping timeout: 240 seconds)
[01:19:14] <anddam> I figure extras_requires setup option is it
[01:20:51] <ChrisWarrick> anddam: yes
[01:20:52] *** Joins: radu242 (~radu242@pool-96-250-220-83.nycmny.fios.verizon.net)
[01:20:53] *** Joins: nesoi1 (~Adium@60-241-111-113.static.tpgi.com.au)
[01:21:32] *** Quits: gambl0re (~gambl0re@45.72.228.31) (Ping timeout: 240 seconds)
[01:22:20] *** Joins: nesoi2 (~Adium@60-241-111-113.static.tpgi.com.au)
[01:22:37] *** Quits: nesoi (~Adium@60-241-111-113.static.tpgi.com.au) (Ping timeout: 240 seconds)
[01:23:12] *** Quits: nesoi1 (~Adium@60-241-111-113.static.tpgi.com.au) (Read error: Connection reset by peer)
[01:23:19] *** Quits: greedom (~greedom@p200300de67110e003e89986c4a4c4c52.dip0.t-ipconnect.de) (Remote host closed the connection)
[01:23:20] *** Joins: foul_owl (~kerry@174-21-69-110.tukw.qwest.net)
[01:23:45] <SnoopJ> escherial, this is pretty fuzzy around the edges but hopefully shows off what you can do with `ast` with a fairly dumb approach: https://bpa.st/PZIA
[01:23:51] *** Joins: foobaz212 (~foobaz212@152.37.103.80)
[01:24:15] *** Quits: Pickchea (~private@user/pickchea) (Quit: Leaving)
[01:24:39] *** Quits: quhar_ (~quhar@188.146.102.227.nat.umts.dynamic.t-mobile.pl) (Quit: WeeChat 3.4)
[01:24:56] <SnoopJ> err, I guess "multiple inheritance" is wrong there, what I mean is multiple layers of subclassing from a denied class.
[01:25:02] *** Joins: quhar (~quhar@188.146.102.227.nat.umts.dynamic.t-mobile.pl)
[01:25:08] *** Joins: tijuco (~tijuco@user/tijuco)
[01:26:17] *** Joins: greedom (~greedom@p200300de67110e003e89986c4a4c4c52.dip0.t-ipconnect.de)
[01:26:36] *** Joins: Xano_ (~Xano@2a00:23c4:4204:700:d3cc:ad5f:f62b:46d1)
[01:27:34] *** Quits: gurkenglas (~gurkengla@dslb-178-012-018-212.178.012.pools.vodafone-ip.de) (Read error: Connection reset by peer)
[01:28:59] <pgib> All: I have a script I wrote to sanity check our TLS server certificates. The old script with completely serial and would use socket.socket and OpenSSL's SSL.Connection in order to establish a connection, then SSL.Connection's get_peer_cert_chain to receive the X509 certs.
[01:29:54] *** Joins: Tajan (~Tajan@user/Tajan)
[01:30:16] <pgib> This works fine, but it is slow. I started a rewrite with asyncio, and the scaffolding is fine, but I cannot find a way to asynchronously connect and access the socket. Closest I could find was asyncio.open_connection, but that only provides opaque SteamReader/Writers
[01:30:46] *** Quits: Xano (~Xano@2a00:23c4:4204:700:f1ca:70f5:1259:dd57) (Ping timeout: 245 seconds)
[01:31:21] *** Joins: gurkenglas (~gurkengla@dslb-178-012-018-212.178.012.pools.vodafone-ip.de)
[01:31:21] *** Joins: Thanatos (~Thanatos@105.112.16.248)
[01:31:32] *** Quits: marderII1 (~MarderIII@86.88.74.111) (Ping timeout: 240 seconds)
[01:31:32] *** Quits: marderIII (~MarderIII@86.88.74.111) (Ping timeout: 240 seconds)
[01:31:39] *** Quits: jpn_ (~jpn@user/jpn) (Ping timeout: 252 seconds)
[01:32:42] <anddam> ChrisWarrick: any way I can access the extra part from within setup.py?
[01:33:03] *** Parts: Intelo (~Intelo@user/Intelo) ()
[01:33:22] *** Quits: Hokedli (~lasliedv@gateway/tor-sasl/hokedli) (Quit: Konversation terminated!)
[01:33:32] *** Quits: ThanatosJ (~Thanatos@105.112.16.248) (Ping timeout: 240 seconds)
[01:33:32] *** Quits: ghost43 (~ghost43@gateway/tor-sasl/ghost43) (Remote host closed the connection)
[01:33:39] *** Quits: radu242 (~radu242@pool-96-250-220-83.nycmny.fios.verizon.net) (Ping timeout: 256 seconds)
[01:34:18] *** Quits: quhar (~quhar@188.146.102.227.nat.umts.dynamic.t-mobile.pl) (Quit: WeeChat 3.4)
[01:34:21] *** Joins: ghost43 (~ghost43@gateway/tor-sasl/ghost43)
[01:34:24] *** Quits: src (~src@user/src) (Quit: leaving)
[01:34:37] *** Joins: quhar (~quhar@188.146.102.227.nat.umts.dynamic.t-mobile.pl)
[01:35:02] *** Quits: Atque (~Atque@user/atque) (Quit: ...)
[01:35:41] *** Joins: diddly_bop (~diddly_bo@107-196-11-132.lightspeed.wchtks.sbcglobal.net)
[01:35:57] *** Quits: spawnmc (~spawnmc@user/spawnmc) (Quit: Client closed)
[01:35:57] *** Quits: Xano_ (~Xano@2a00:23c4:4204:700:d3cc:ad5f:f62b:46d1) (Ping timeout: 240 seconds)
[01:36:50] *** Joins: ThanatosJ (~Thanatos@105.112.16.248)
[01:37:13] *** Joins: EvilDMP (~textual@django/moderator/EvilDMP)
[01:37:20] *** Joins: dakudos (~dakudos@172.58.62.218)
[01:37:42] *** Joins: gambl0re (~gambl0re@45.72.228.31)
[01:38:33] *** Quits: Thanatos (~Thanatos@105.112.16.248) (Read error: Connection reset by peer)
[01:38:51] *** Joins: otisolsen70 (~otisolsen@xd4ed80b5.cust.hiper.dk)
[01:38:55] *** Quits: GNUmoon (~GNUmoon@gateway/tor-sasl/gnumoon) (Ping timeout: 240 seconds)
[01:39:02] <ChrisWarrick> anddam: access how?
[01:39:14] *** Quits: BlessJah (~BlessJah@user/blessjah) (Remote host closed the connection)
[01:39:31] *** Quits: merijn (~merijn@c-001-001-001.client.esciencecenter.eduvpn.nl) (Ping timeout: 245 seconds)
[01:39:32] <anddam> I have a custom function in the script, I would like to access the extras that were passed there
[01:39:44] <anddam> to be more clear I am editing someone else's augmented"
[01:40:18] *** Quits: andyewen (~andyewen@91.110.2.87) (Quit: Leaving)
[01:40:22] *** Quits: crashrep (~crashrep@user/crashrep) (Quit: WeeChat 3.4)
[01:40:23] <anddam> to be more clear I am editing someone else's "augmented" setup.py, and people's mind is an frightening abyss to look into
[01:40:29] <anddam> fat-fingered
[01:41:37] <anddam> so there is     extras_require= {"requests": ["requests", "ldap3"], "curl": [get_pycurl()]},    in setup(), but then get_pycurl() looks for an env variable looking for "requests" to decide its return value
[01:43:03] *** Quits: dreamon (~dreamon@pd9503ce4.dip0.t-ipconnect.de) (Ping timeout: 256 seconds)
[01:43:30] *** Quits: ghost43 (~ghost43@gateway/tor-sasl/ghost43) (Remote host closed the connection)
[01:43:50] *** Joins: ghost43 (~ghost43@gateway/tor-sasl/ghost43)
[01:44:07] *** Joins: BlessJah (~BlessJah@user/blessjah)
[01:44:15] <anddam> the calling shell script then proceeds to  a) export the variable in the environment in order to make it accessible to get_pycurl() in the python process AND  b) explicitly pass the variable to setuptools using    pip install .[$SOMEVAR]
[01:44:30] <anddam> that seems redundant and I'd like to reduce that to a single passing mechanism
[01:45:32] *** Quits: dkr13 (~dkr13@dkr13.de) (Quit: The Lounge - https://thelounge.chat)
[01:45:50] *** Quits: Y4knotiS (~YaknotiS@cpc1-cmbg18-2-0-cust87.5-4.cable.virginm.net) (Ping timeout: 260 seconds)
[01:46:10] *** Joins: dkr13 (~dkr13@dkr13.de)
[01:46:50] *** Joins: radu242 (~radu242@pool-96-250-220-83.nycmny.fios.verizon.net)
[01:47:01] *** Quits: purple_cthulhu (~rax@188.214.96.37) (Ping timeout: 245 seconds)
[01:47:03] <supakeen> More twists than many a movie.
[01:48:01] *** Quits: seabre_ (~seabre@user/seabre) (Quit: ZNC 1.8.2 - https://znc.in)
[01:48:16] <supakeen> But no, there's no easy way aside from providing your own custom option, that would still required you to change 'all of it'.
[01:48:46] *** Joins: llanhmod (~developer@user/domhnall/x-2887755)
[01:49:28] *** Joins: seabre (~seabre@user/seabre)
[01:50:21] *** Quits: gambl0re (~gambl0re@45.72.228.31) (Ping timeout: 252 seconds)
[01:51:06] *** Quits: llanhmod (~developer@user/domhnall/x-2887755) (Client Quit)
[01:52:00] *** Quits: dakudos (~dakudos@172.58.62.218) (Ping timeout: 252 seconds)
[01:53:53] <anddam> ok, then it stays
[01:55:24] *** Quits: zen_coder (~zen_coder@2a02:8109:a280:2d8d:6469:70ea:b962:2f9) (Remote host closed the connection)
[01:55:47] *** Joins: zen_coder (~zen_coder@2a02:8109:a280:2d8d:699f:6e20:195b:1ccd)
[01:55:51] *** Quits: radu242 (~radu242@pool-96-250-220-83.nycmny.fios.verizon.net) (Ping timeout: 252 seconds)
[01:56:44] *** Joins: radu242 (~radu242@pool-96-250-220-83.nycmny.fios.verizon.net)
[01:57:02] *** Quits: magla (~gelignite@d5363125.access.ecotel.net) (Quit: Stay safe!)
[01:58:45] *** Joins: flower_ (~archie@217-123-218-6.cable.dynamic.v4.ziggo.nl)
[01:58:48] <mattf> Where can i find blender addon dev help and if it can be here
[01:59:01] *** Quits: mud (~mud@user/kadoban) (Ping timeout: 240 seconds)
[01:59:20] *** Joins: stdout (~stdout@2605:ab80:b000:7202:3e12:af82:936c:2ff6)
[01:59:49] <Togra> that might be specific enough that you'd probably be better asking in blender related channels, though if they're all written in python or at least mostly, then checking here might work too?
[01:59:54] <mattf> how can i add a custom button to the grease pencil menu, in the add object panel, for mesh and many others it is easy: bpy.types.VIEW3D_MT_mesh_add.prepend(menu_func), but there isn't a gpencil_add. How can i figure this UI stuff out?
[02:01:44] <TML> mattf: https://blender.stackexchange.com/questions/119335/creating-a-custom-menu-of-active-grease-pencil-palette-colors-via-python-script seems like it might have a thread you can pull on
[02:02:24] <mefistofeles> wg 33
[02:02:26] *** Quits: stockholm (~Andreas@p200300d2c709500004b60d0de4ff27de.dip0.t-ipconnect.de) (Ping timeout: 245 seconds)
[02:02:54] *** Joins: purple_cthulhu (~rax@185.108.96.52)
[02:03:22] <TML> mattf: There's also https://docs.blender.org/api/current/bpy.ops.gpencil.html
[02:03:46] <mattf> TML doesn't have much to do, i want to add a button on the grease pencil add panel, shift + a pannel
[02:03:56] *** Joins: dakudos (~dakudos@c-73-229-175-50.hsd1.co.comcast.net)
[02:04:08] <squirrel> is there any way to print to console from a test using pytest-forked? i found some tricks like writing to stderr but none seem to work
[02:04:09] *** Joins: tj123 (~tjh123@cpe-75-185-104-199.cinci.res.rr.com)
[02:04:15] *** Quits: rendar (~rendar@user/rendar) (Quit: Leaving)
[02:04:56] *** Joins: theprophet (~theprophe@2a0b:6204:42b1:2d00:99e3:35cd:134:8180)
[02:04:57] *** Quits: tj123 (~tjh123@cpe-75-185-104-199.cinci.res.rr.com) (Client Quit)
[02:08:13] *** Quits: radu242 (~radu242@pool-96-250-220-83.nycmny.fios.verizon.net) (Ping timeout: 256 seconds)
[02:08:13] *** Quits: Tajan (~Tajan@user/Tajan) (Ping timeout: 256 seconds)
[02:09:14] *** Quits: BrokenCog (~BrokenCog@c-73-92-151-140.hsd1.ca.comcast.net) (Quit: leaving)
[02:10:33] *** Joins: newpy (~newpy@2601:280:4381:1390:2ddc:61c2:abe8:a959)
[02:12:49] *** Quits: jdavfsxd (~rvgzuuqp@gateway/tor-sasl/rvgzuuqp) (Quit: jdavfsxd)
[02:13:06] *** Quits: humanBird (~humanBird@2603-8001-7000-3642-dceb-bf7e-650a-7ef8.res6.spectrum.com) (Quit: Client closed)
[02:13:22] *** Joins: jpn (~jpn@user/jpn)
[02:13:53] *** Quits: Lando-SpacePimp (~Lando-Spa@user/lando-spacepimp) (Ping timeout: 256 seconds)
[02:14:03] *** Quits: quhar (~quhar@188.146.102.227.nat.umts.dynamic.t-mobile.pl) (Read error: Connection reset by peer)
[02:14:25] *** Joins: quhar (~quhar@staticline-31-182-243-70.toya.net.pl)
[02:14:47] *** Quits: flower_ (~archie@217-123-218-6.cable.dynamic.v4.ziggo.nl) (Ping timeout: 256 seconds)
[02:15:02] <dob1>  m = re.match(r"user:([A-Za-z][A-Za-z0-9_]{7,29}):.+", key)  but key is byte, how can I fix fix?  I tried str(key)
[02:15:18] *** Joins: GNUmoon (~GNUmoon@gateway/tor-sasl/gnumoon)
[02:15:28] *** Quits: rustyshackleford (uid236774@id-236774.helmsley.irccloud.com) (Quit: Connection closed for inactivity)
[02:15:53] *** Joins: Guest49 (~Guest49@209.52.68.8)
[02:16:34] *** Joins: ncwbqcfe (~rvgzuuqp@gateway/tor-sasl/rvgzuuqp)
[02:16:46] <SnoopJ> dob1, to get a string out of bytes, you have to decode the bytes
[02:17:05] *** Quits: Guest49 (~Guest49@209.52.68.8) (Client Quit)
[02:17:08] <dob1> SnoopJ, using utf8 how can I do this?
[02:17:11] *** Quits: ncwbqcfe (~rvgzuuqp@gateway/tor-sasl/rvgzuuqp) (Client Quit)
[02:17:12] <dob1> it's a redis key
[02:17:25] *** Joins: mugen (~mugen@gateway/tor-sasl/mugen)
[02:17:26] <TML> dob1: key.decode(encoding)
[02:17:29] <SnoopJ> dob1, key.decode("utf-8")
[02:17:36] <pyeveryt_> given the index of a row how can I duplicate in in pandas?
[02:17:40] *** Parts: Neeknaim (~Neeknaim@77.139.140.101) (Konversation terminated!)
[02:17:40] <SnoopJ> you can also make your pattern a bytes object; they always have to match, though
[02:18:05] <dob1> thanks
[02:18:21] *** Joins: ncwbqcfe (~rvgzuuqp@gateway/tor-sasl/rvgzuuqp)
[02:18:26] *** Quits: MasterK (~MK@86.120.52.156) (Remote host closed the connection)
[02:18:51] *** Quits: ncwbqcfe (~rvgzuuqp@gateway/tor-sasl/rvgzuuqp) (Client Quit)
[02:19:15] *** Joins: Tajan (~Tajan@user/Tajan)
[02:19:15] *** Quits: mug3n_ (~mugen@gateway/tor-sasl/mugen) (Ping timeout: 240 seconds)
[02:19:17] *** Joins: ncwbqcfe (~rvgzuuqp@gateway/tor-sasl/rvgzuuqp)
[02:20:05] *** Joins: jmd (~user@de.cellform.com)
[02:20:24] <parv> SnoopJ, Could you explain the always-matching part for a bytes object? Or, has this explained in "re"?
[02:20:33] <SnoopJ> parv, bytes goes with bytes, str goes with str
[02:20:41] *** Quits: ChkDigit (~u388mw@207-195-34-73.prna.static.sasknet.sk.ca) (Ping timeout: 256 seconds)
[02:21:01] *** Quits: diddly_bop (~diddly_bo@107-196-11-132.lightspeed.wchtks.sbcglobal.net) (Quit: Leaving)
[02:21:04] <SnoopJ> i.e. the pattern and the thing to run the pattern over need to be the same type
[02:21:15] *** Quits: jmd (~user@de.cellform.com) (Remote host closed the connection)
[02:21:32] <parv> SnoopJ, Oh. I thought the pattern itself must match for a given bytes object
[02:21:42] *** Quits: jpn (~jpn@user/jpn) (Ping timeout: 252 seconds)
[02:21:42] *** Quits: pkapp (~pkapp@2601:58c:c500:6900:1b6b:8479:90d3:db91) (Quit: ZNC 1.7.5+deb4 - https://znc.in)
[02:21:45] *** Joins: jmd (~user@de.cellform.com)
[02:22:49] *** Quits: aslicedbanjo (~aslicedba@host86-168-244-104.range86-168.btcentralplus.com) (Quit: Leaving.)
[02:23:58] *** Joins: pkapp (~pkapp@2601:58c:c500:6900:1b6b:8479:90d3:db91)
[02:26:27] *** Joins: gr33n7007h (~gr33n7007@user/gr33n7007h)
[02:26:38] *** Quits: Tajan (~Tajan@user/Tajan) (Quit: Leaving)
[02:27:09] *** Joins: maxzor (~maxzor@2a01cb04054faa00996bd0b5db51ef1b.ipv6.abo.wanadoo.fr)
[02:29:45] *** Quits: ice9 (~ice9@user/ice9) (Ping timeout: 256 seconds)
[02:30:01] *** Joins: radu242 (~radu242@pool-96-250-220-83.nycmny.fios.verizon.net)
[02:32:26] *** Joins: ChkDigit (~u388mw@207-195-34-73.prna.static.sasknet.sk.ca)
[02:32:35] *** Quits: Barones (~Barones@user/Barones) (Quit: Leaving)
[02:32:40] *** Quits: radu242 (~radu242@pool-96-250-220-83.nycmny.fios.verizon.net) (Client Quit)
[02:32:56] *** Quits: oriba (~oriba@dynamic-089-014-152-127.89.14.pool.telefonica.de) (Quit: https://quassel-irc.org - Chat comfortably. Anywhere.)
[02:33:32] *** Joins: betuxy (~betuxy@p579adb74.dip0.t-ipconnect.de)
[02:34:23] *** Quits: JanC (~janc@user/janc) (Read error: Connection reset by peer)
[02:34:23] *** Quits: mspe (~user@tilde.team/user/mspe) (Quit: WeeChat 2.8)
[02:34:37] *** Joins: JanC (~janc@user/janc)
[02:34:37] *** Joins: src (~src@user/src)
[02:34:51] *** Joins: janemba (~janemba@94.204.254.193)
[02:34:52] *** Joins: mud (~mud@user/kadoban)
[02:34:54] *** Joins: mspe (~user@tilde.team/user/mspe)
[02:35:28] *** Joins: jeho (~jehoshaph@user/jehoshaphat)
[02:35:38] *** Joins: jpn (~jpn@user/jpn)
[02:35:55] *** Quits: noteness (~noteness@user/noteness) (Ping timeout: 240 seconds)
[02:36:11] *** Joins: radu242 (~radu242@pool-96-250-220-83.nycmny.fios.verizon.net)
[02:36:25] *** Quits: ghost43 (~ghost43@gateway/tor-sasl/ghost43) (Remote host closed the connection)
[02:36:42] *** Quits: fedenix (~fedenix@gateway/tor-sasl/fedenix) (Remote host closed the connection)
[02:36:46] *** Joins: noteness (~noteness@user/noteness)
[02:37:15] *** Joins: ghost43 (~ghost43@gateway/tor-sasl/ghost43)
[02:37:27] *** Joins: Codaraxis (~Codaraxis@user/codaraxis)
[02:37:32] <pyeveryt_> could you please have a look at my question and guide me ? https://stackoverflow.com/questions/71564611/duplicate-and-update-a-row-in-pandas-given-its-index it is about pandas dataframe
[02:38:00] *** Quits: tj123_ (~tjh123@cpe-75-185-104-199.cinci.res.rr.com) (Read error: Connection reset by peer)
[02:38:09] *** Joins: tj123 (~tjh123@cpe-75-185-104-199.cinci.res.rr.com)
[02:38:31] *** Quits: manti7 (~manti7@176.10.104.94) (Quit: WeeChat 3.4)
[02:39:29] *** Joins: roky52428535 (~roky52428@196.74.197.151)
[02:39:56] *** Joins: cliluw (~cliluw@47.147.77.43)
[02:40:25] *** Quits: ghost43 (~ghost43@gateway/tor-sasl/ghost43) (Remote host closed the connection)
[02:40:51] *** Quits: Auron (Auron956@user/auron) (Remote host closed the connection)
[02:40:51] *** Joins: ghost43 (~ghost43@gateway/tor-sasl/ghost43)
[02:40:58] *** Quits: EsoAlgo (~EsoAlgo@152.70.142.52) (Remote host closed the connection)
[02:42:01] *** Quits: stdout (~stdout@2605:ab80:b000:7202:3e12:af82:936c:2ff6) (Quit: Leaving)
[02:42:18] *** Quits: maxzor (~maxzor@2a01cb04054faa00996bd0b5db51ef1b.ipv6.abo.wanadoo.fr) (Quit: Leaving)
[02:42:24] *** Joins: Lando-SpacePimp (~Lando-Spa@user/lando-spacepimp)
[02:42:48] *** Joins: EsoAlgo (~EsoAlgo@152.70.142.52)
[02:43:20] *** Joins: dre (~dre@2001:8003:c932:c301:70ee:1824:1d7e:5401)
[02:44:43] *** Quits: purple_cthulhu (~rax@185.108.96.52) (Quit: Leaving.)
[02:44:47] *** Quits: jpn (~jpn@user/jpn) (Ping timeout: 252 seconds)
[02:46:24] *** Joins: aclark (~aclark@pool-108-51-184-139.washdc.fios.verizon.net)
[02:47:01] *** Quits: pkapp (~pkapp@2601:58c:c500:6900:1b6b:8479:90d3:db91) (Quit: ZNC 1.7.5+deb4 - https://znc.in)
[02:47:17] *** Joins: pkapp (~pkapp@c-75-74-40-214.hsd1.fl.comcast.net)
[02:47:55] *** Joins: jpn (~jpn@user/jpn)
[02:48:40] *** Quits: dfch (~dfch@user/dfch) (Quit: bye)
[02:49:00] *** Parts: roky52428535 (~roky52428@196.74.197.151) ()
[02:50:41] *** Joins: dfch (~dfch@user/dfch)
[02:50:52] *** Joins: storm_ (~storm@176.33.68.86)
[02:51:03] *** Quits: wge^ (~wge@96-67-120-105-static.hfc.comcastbusiness.net) (Remote host closed the connection)
[02:51:20] *** Quits: greedom (~greedom@p200300de67110e003e89986c4a4c4c52.dip0.t-ipconnect.de) (Remote host closed the connection)
[02:51:34] *** Joins: Atque (~Atque@user/atque)
[02:51:36] *** Joins: whatsupdoc (uid509081@id-509081.hampstead.irccloud.com)
[02:52:45] *** Quits: jpn (~jpn@user/jpn) (Ping timeout: 256 seconds)
[02:52:52] *** Quits: theprophet (~theprophe@2a0b:6204:42b1:2d00:99e3:35cd:134:8180) (Quit: Client closed)
[02:52:57] *** Joins: brookesy66 (~will@203.185.205.85)
[02:54:50] *** Joins: wakeup (~wakeup@user/wakeup)
[02:54:56] *** Joins: Barones (~Barones@user/Barones)
[02:55:25] *** Quits: Enitin (~Enitin@82.180.145.230) (Ping timeout: 240 seconds)
[02:55:26] *** Quits: frmlof (~frmlof@70.243.238.191) (Quit: frmlof)
[02:55:51] *** Quits: pretty_dumm_guy (trottel@gateway/vpn/protonvpn/prettydummguy/x-88029655) (Quit: WeeChat 3.4.1)
[02:56:34] *** Joins: moog__ (~moog@98.97.82.161)
[02:57:02] *** Quits: jmd (~user@de.cellform.com) (Remote host closed the connection)
[02:57:45] *** sharktamer is now known as surskit
[02:57:50] *** Joins: et_ (~et@user/et)
[02:58:02] *** Quits: et (~et@user/et) (Ping timeout: 240 seconds)
[02:58:19] *** et_ is now known as et
[02:58:48] *** Quits: pyeveryt_ (~pyeveryth@dot1x-155-41-160-40.bumc.bu.edu) (Remote host closed the connection)
[02:59:00] *** Quits: moog_ (~moog@107.126.53.83) (Ping timeout: 240 seconds)
[02:59:02] *** Quits: darksun (~darksun@user/darksun) (Quit: Lost terminal)
[02:59:13] *** Quits: berong91 (~noob4ever@d75-154-235-153.bchsia.telus.net) (Ping timeout: 256 seconds)
[02:59:13] <yates> i am using an collections.OrderedDict as "translations". why am i getting this error? http://paste.debian.net/1235175/
[02:59:28] *** Joins: pyeveryt_ (~pyeveryth@dot1x-155-41-160-40.bumc.bu.edu)
[02:59:30] *** Joins: flower_ (~archie@217-123-218-6.cable.dynamic.v4.ziggo.nl)
[03:00:05] <bjs> yates: because you mutated it while iterating over it
[03:00:49] <bjs> you shouldn't add or remove keys from dicts while iterating over it
[03:00:53] <yates> bjs: by jove i did!
[03:01:01] <bjs> yates: i could tell from the error message :P
[03:01:10] *** Joins: berong91 (~noob4ever@d75-154-235-153.bchsia.telus.net)
[03:01:46] <yates> i didn't take it seriously, or overcomplicated it, but that is all it is
[03:02:03] <yates> ..a mind is a terrible thing to waste..
[03:02:19] <yates> SnoopJ: hand me the bong..
[03:03:40] *** Quits: rinzewind (~rinzewind@user/rinzewind) (Quit: leaving)
[03:04:03] *** Quits: pyeveryt_ (~pyeveryth@dot1x-155-41-160-40.bumc.bu.edu) (Ping timeout: 252 seconds)
[03:05:09] *** Quits: roxfan (~roxfan@2a02:a03f:a2be:4f00:6d0c:3ed5:99e5:49fe) (Ping timeout: 252 seconds)
[03:05:17] *** Joins: Enitin (~Enitin@82.180.145.230)
[03:05:35] *** Quits: funhouse (~funhouse@user/funhouse) (Quit: Client closed)
[03:06:21] <yates> ok so i made a copy of the keys (i thought) like this: eas = self.translation.keys(), and iterated over eas, but i'm still getting the error. http://paste.debian.net/1235176/
[03:06:37] *** Joins: Mat1010 (~Mat1010@168.181.209.34)
[03:07:43] *** Joins: Pickchea (~private@user/pickchea)
[03:07:54] <yates> so while self.delTranslation(ea) does mutate self.translations, i'm not iterating over it (rather, over eas). why is it still happening?
[03:08:32] <moonmoon> eas isn't a copy of the keys
[03:08:49] <moonmoon> try eas = list(self.translation.keys())
[03:09:44] *** Joins: bitdex (~bitdex@gateway/tor-sasl/bitdex)
[03:10:35] *** Joins: vaaqif (~vaaqif_3@cpc151159-smal19-2-0-cust83.19-1.cable.virginm.net)
[03:11:00] <yates> moonmoon: that worked, thanks. but why is somedict.keys() not a separate identify from somedict?
[03:11:08] <yates> identity
[03:11:32] <Repiphany> somedict.keys() returns a view of the keys of that dict
[03:11:58] <yates> so it's like pointers to thekeys?
[03:12:04] <yates> that's so C++!
[03:12:15] *** Quits: pgib (~textual@173.38.117.89) (Ping timeout: 256 seconds)
[03:12:16] *** Quits: otisolsen70 (~otisolsen@xd4ed80b5.cust.hiper.dk) (Quit: Leaving)
[03:13:01] *** Quits: amogorkon (~amogorkon@user/amogorkon) (Ping timeout: 240 seconds)
[03:13:19] <tusko> C++ hurts people
[03:13:42] <moonmoon> much of python is like that tbh; if bar is an object of some sort, foo = bar makes foo a reference to the bar object, not a copy of it.
[03:13:42] <yates> apparently, so does python
[03:13:54] <Pickchea> C++ destroys lives. C++. Not even once.
[03:13:58] <moonmoon> in any case, .keys() is very explicitly documented as being a live view -- https://docs.python.org/3/library/stdtypes.html#dictionary-view-objects
[03:14:00] <tusko> Python allows programmers to be too lazy
[03:14:07] <tusko> It abstracts away too much
[03:14:49] <yates> tusko: i couldn't agree with you more.
[03:15:01] *** Quits: dthpulse (~quassel@podciarou.sk) (Quit: https://quassel-irc.org - Chat comfortably. Anywhere.)
[03:15:11] <Pickchea> Use Haskell. It's safe and surprisingly performant. Sorry, evangelism over :-D
[03:15:16] *** Joins: gambl0re (~gambl0re@2607:fea8:a59f:c360::81cb)
[03:15:48] <yates> i don't think you can write IDAPro plugins in Haskell, but i would like to try the language sometime
[03:16:03] *** Joins: moose (~moose@user/moose)
[03:16:22] *** Joins: dthpulse (~quassel@podciarou.sk)
[03:16:33] * aclark starts browsing through Python source code â€¦
[03:16:36] <yates> of course we could always just use C++ and pay more attention to object lifetimes...
[03:17:18] *** Joins: dsrt^ (~dsrt@96-67-120-105-static.hfc.comcastbusiness.net)
[03:19:27] *** Quits: qlixed (~qlixed@152.170.45.16) (Ping timeout: 252 seconds)
[03:19:34] *** Joins: gentooclimax (~gentoocli@81-64-65-213.rev.numericable.fr)
[03:19:37] *** Quits: gentooclimax (~gentoocli@81-64-65-213.rev.numericable.fr) (Remote host closed the connection)
[03:21:08] *** Joins: Xardas (~Xardas@149.233.51.127)
[03:21:47] *** Joins: llanhmod (~developer@user/domhnall/x-2887755)
[03:22:27] *** Quits: palasso (~palasso@user/palasso) (Remote host closed the connection)
[03:22:52] *** Joins: iflema (~ian@user/iflema)
[03:23:57] *** Quits: gambl0re (~gambl0re@2607:fea8:a59f:c360::81cb) (Ping timeout: 240 seconds)
[03:24:49] *** Joins: vdamewood (~vdamewood@fedora/vdamewood)
[03:25:06] *** Joins: gambl0re (~gambl0re@2607:fea8:a59f:c360::81cb)
[03:25:41] *** Quits: caveman (~caveman@gateway/tor-sasl/caveman) (Quit: caveman)
[03:27:48] *** Quits: ThanatosJ (~Thanatos@105.112.16.248) (Read error: Connection reset by peer)
[03:27:50] *** Joins: crashrep (~crashrep@user/crashrep)
[03:28:25] *** Joins: ThanatosJ (~Thanatos@102.89.2.205)
[03:28:47] *** Quits: Mat1010 (~Mat1010@168.181.209.34) (Quit: Client closed)
[03:29:33] *** Joins: korg815 (~korg815@user/korg815)
[03:29:55] *** Quits: bitdex (~bitdex@gateway/tor-sasl/bitdex) (Ping timeout: 240 seconds)
[03:30:16] *** Quits: EvilDMP (~textual@django/moderator/EvilDMP) (Quit: My MacBook has gone to sleep. ZZZzzzâ€¦)
[03:30:22] *** Quits: slav0nic (slav0nic@python.su) (Ping timeout: 260 seconds)
[03:30:41] *** Quits: storm_ (~storm@176.33.68.86) (Quit: Leaving)
[03:31:35] *** Joins: NeilRG (~NeilRG@96-127-194-85.qc.cable.ebox.net)
[03:31:46] <NeilRG> what's the easiest way to narrow an object to a superclass type?
[03:32:01] *** Quits: quhar (~quhar@staticline-31-182-243-70.toya.net.pl) (Quit: WeeChat 3.4)
[03:32:05] *** Quits: gambl0re (~gambl0re@2607:fea8:a59f:c360::81cb) (Ping timeout: 252 seconds)
[03:32:10] <NeilRG> if a dataclass X inherits from a dataclass Y, how do I convert an object of type X to Y?
[03:32:36] <ELFrederich> NeilRG, kind of defeats the point.  What exactly are you trying to do?
[03:32:47] <NeilRG> I want to prevent accidentally changing things
[03:32:53] *** Joins: justm33 (~Username@84.84.41.7)
[03:32:53] <NeilRG> or accidental usage of data
[03:33:12] <ELFrederich> you don't need to convert it, it is already an instance of Y
[03:33:19] <NeilRG> I know it's an instance
[03:33:25] *** Quits: gusto (~Augustus@109.255.100.54) (Quit: Textual IRC Client: www.textualapp.com)
[03:33:30] *** Quits: daoudr_ (~daoudr@xdsl-31-164-222-159.adslplus.ch) (Quit: Leaving)
[03:33:35] <NeilRG> I want to prevent the caller of a method from having access to members of X that aren't in Y
[03:34:34] <ELFrederich> NeilRG, I'm not entirely certain you can change it in place and I'd be hesitant to try monkey-patching stuff.  Do you want to construct a new object?
[03:34:46] <NeilRG> ELFrederich, yes
[03:34:50] *** Joins: gambl0re (~gambl0re@2607:fea8:a59f:c360::81cb)
[03:34:55] *** Quits: justm3 (~Username@84-84-41-7.fixed.kpn.net) (Ping timeout: 256 seconds)
[03:34:58] *** justm33 is now known as justm3
[03:35:49] <meejah> NeilRG: maybe X and Y should just be different (non-inheriting)? (can you show code?)
[03:36:24] <NeilRG> meejah, I could, but it's spread over many classes
[03:36:31] <NeilRG> I think the inheritance makes sense
[03:36:49] <NeilRG> but it's worth thinking about for sure
[03:37:19] *** Quits: ckdCreations (~ckdCreati@147.55.133.139) (Read error: Connection reset by peer)
[03:37:20] *** Joins: cs (~ovnicraft@ftth-179-49-44-28.cue.celerity.ec)
[03:37:23] <meejah> NeilRG: so you want to take this "X->Y" thing, and convert it to a (new) Y that lacks the Y things?
[03:37:23] <NeilRG> I think I'll manually reconstruct the members, and if I decide to break the inheritance, nothing will be lost
[03:37:32] <meejah> er "lacks the X things"
[03:37:39] *** Joins: ckdCreations (~ckdCreati@c-73-140-151-116.hsd1.wa.comcast.net)
[03:37:39] <NeilRG> yes, X < Y
[03:37:51] *** Joins: bitdex (~bitdex@gateway/tor-sasl/bitdex)
[03:37:52] <NeilRG> (is the usually way of denoting inheritance, I think)
[03:37:54] *** Joins: monkey_ (~user@190.104.116.153)
[03:37:58] <tusko> Really they did it best when they made C, but if God ever spoke to man it would certainly be in Perl.
[03:38:02] <meejah> can't you just "foo = Y(the_thing)"?
[03:38:08] <NeilRG> lol Perl's a joke
[03:38:24] <tusko> vulgar
[03:38:26] *** Joins: nomic (~nomic@185.198.243.249)
[03:38:40] <NeilRG> when I was at Google, the Python presenter openly mocked it with the Larry Wall in the room (oops)
[03:39:09] <NeilRG> meejah, I wish, but you have to do y = Y(x.a, x.b, x.c, ...)
[03:39:14] <meejah> "mocking" languages isn't very useful, everyone has reasons for liking things
[03:39:19] <meejah> NeilRG: oh, gross
[03:39:19] <KirkMcDonald> Really it depends on how Y's __init__ is written.
[03:39:27] <KirkMcDonald> But Y(x) doesn't work generally.
[03:39:29] <tusko> What's the Larry Wall?
[03:39:30] <meejah> NeilRG: maybe attrs does a better job? (i don't know either way)
[03:39:37] *** Quits: Iolo (~iolo@user/Iolo) (Quit: Leaving)
[03:39:47] *** Quits: foobaz212 (~foobaz212@152.37.103.80) (Quit: Client closed)
[03:39:50] <NeilRG> meejah, well, he was just making a joke, I think he said something like "if you want it to be unintelligible, you could write it in Perl", or something like that
[03:39:55] <NeilRG> poor Larry
[03:39:59] *** Joins: foobaz212 (~foobaz212@152.37.103.80)
[03:40:27] <meejah> i agree Perl is "write-only" haha
[03:40:37] *** Quits: ovnicraft (~ovnicraft@ftth-179-49-44-28.cue.celerity.ec) (Ping timeout: 240 seconds)
[03:41:07] <meejah> NeilRG: IMO attrs.org is better than dataclasses, but "existing code" and all ..
[03:41:10] *** Quits: codificat (~pep@90.167.94.92) (Quit: leaving)
[03:41:15] <KirkMcDonald> In any case, I find this question weird. The operation is pretty contrary to how I normally think of classes working; it makes sense that there's no simple way to do this.
[03:41:33] *** Quits: src (~src@user/src) (Quit: leaving)
[03:41:44] <KirkMcDonald> Classes in Python, I should say.
[03:41:46] <tusko> woah his webpage tho
[03:41:47] <tusko> Its chartruese
[03:41:48] *** Joins: djapo (~archangel@user/djapo)
[03:41:53] <ELFrederich> NeilRG, you could use dataclasses's asdict() and fields() to dump and then instantiate.  https://bpa.st/5SYQ
[03:42:08] *** Quits: aclark (~aclark@pool-108-51-184-139.washdc.fios.verizon.net) (Quit: Client closed)
[03:42:24] <NeilRG> ELFrederich, I thought of that, but asdict has a trajic flaw whereby it is recursive
[03:42:30] <KirkMcDonald> Talking about *members* of X is the weird part, I think, since that's terminology that doesn't really apply to Python.
[03:42:32] *** Quits: kosh (~kosh@user/kosh) (Ping timeout: 252 seconds)
[03:42:45] <NeilRG> ELFrederich, see what happens if you nest your dataclasses...
[03:43:01] <KirkMcDonald> NeilRG: If you want the terrible, no good, very bad option, you can reassign `obj.__class__ = Y`
[03:43:25] <KirkMcDonald> Though this doesn't do anything for you about the object's instance attributes; those are not changed by this operation.
[03:43:26] *** Quits: ponyofdeath (~vladi@2606:6000:cfc0:2b:9cf9:caf8:f20d:1053) (Ping timeout: 260 seconds)
[03:43:27] <NeilRG> KirkMcDonald, lol thanks, didn't know about that!  (I'm not going to do that of course)
[03:43:28] <ELFrederich> ... the monkey-patching I mentioned, typically means you're doing something wrong
[03:43:31] *** Joins: Imk0tter (~Imk0tter@221.sub-174-204-129.myvzw.com)
[03:43:33] *** Quits: ghost43 (~ghost43@gateway/tor-sasl/ghost43) (Remote host closed the connection)
[03:43:52] *** Joins: ghost43 (~ghost43@gateway/tor-sasl/ghost43)
[03:43:53] *** Joins: aclark (~aclark@pool-108-51-184-139.washdc.fios.verizon.net)
[03:43:56] <NeilRG> ELFrederich, yeah, I need to think about this some more.  I should probably break inheritance like meejah suggested
[03:44:11] <NeilRG> inheritance for convenience seems to be a code smell most of the time
[03:44:12] <BrenBarn> it seems weird to have Y inherit from X but then want Y to not have the stuff that X has
[03:44:13] <BrenBarn> that's kind of the point of inheriting
[03:44:15] <NeilRG> easy trap to fall into
[03:44:22] <KirkMcDonald> Yes, I agree with that: Wanting this operation suggests that you don't want to use inheritance in the first place.
[03:44:25] *** Quits: ghost43 (~ghost43@gateway/tor-sasl/ghost43) (Remote host closed the connection)
[03:44:29] <NeilRG> yeah, thanks for the nudge
[03:44:31] <deltab> you could create a proxy that limits access
[03:44:31] <NeilRG> everyone
[03:45:10] *** Joins: ghost43 (~ghost43@gateway/tor-sasl/ghost43)
[03:45:16] <Imk0tter> is there anyway to truncate a list of integers?
[03:45:25] *** Quits: aclark (~aclark@pool-108-51-184-139.washdc.fios.verizon.net) (Client Quit)
[03:46:12] *** Quits: nomic (~nomic@185.198.243.249) (Quit: Leaving)
[03:46:31] *** Joins: nomic (~nomic@185.198.243.249)
[03:46:33] <papna> Imk0tter: first_n_items_or_all_items_if_there_are_fewer_than_n = my_list[:n]
[03:46:35] <deltab> Imk0tter: yes... unless I misunderstand what you mean
[03:47:19] *** Quits: korg815 (~korg815@user/korg815) (Quit: WeeChat 2.8)
[03:47:21] *** Joins: qlixed (~qlixed@181.44.129.13)
[03:47:44] <deltab> list operations don't depend on what type of values you have in a list
[03:47:56] *** Quits: shibboleth (~shibbolet@user/shibboleth) (Quit: shibboleth)
[03:47:57] *** Quits: cedric (~cedric@2a01:cb11:821:7c00:687b:b58d:cf7d:aae5) (Quit: Konversation terminated!)
[03:48:31] *** Joins: korg815 (~korg815@user/korg815)
[03:49:06] *** Quits: hexnewbie (~hexnewbie@user/hexnewbie) (Ping timeout: 245 seconds)
[03:49:13] <vaaqif> Hello, first time on irc. I am learning Python. I am trying to make a scrabble game and I have made a __repr__ for printing out the grid. I think there must be a cleaner way to do it than what I have, could anyone help me please?
[03:49:17] <vaaqif> The code is here https://bpa.st/DA7A
[03:49:22] *** Quits: flower_ (~archie@217-123-218-6.cable.dynamic.v4.ziggo.nl) (Ping timeout: 268 seconds)
[03:51:08] <KirkMcDonald> vaaqif: For a start, I would recommend making the grid an instance rather than a class attribute. (I.e. create it inside of an __init__ method.)
[03:51:41] <NeilRG> vaaqif, use sum instead of adding the chars, and using str.join instead of adding the rows
[03:51:54] <KirkMcDonald> sum() does not work with strings.
[03:52:05] *** Quits: LucaTM (~LucaTM@user/lucatm) (Quit: Textual IRC Client: www.textualapp.com)
[03:52:08] <NeilRG> vaaqif, I would also prefer a numpy array with dtype np.str_ instead of a list of lists personally
[03:52:11] <KirkMcDonald> Adding a string in this manner is fine.
[03:52:43] *** Quits: theseb (~theseb@47-220-214-54.cnrocmta03.res.dyn.suddenlink.net) (Quit: Leaving)
[03:52:45] <NeilRG> KirkMcDonald, oh yeah, they removed that, "".join() is simpler then
[03:53:15] <KirkMcDonald> Eh, it's about the same.
[03:54:34] <NeilRG> return "\n".join("".join(for item in row) for row in self.grid) seems simpler to me
[03:54:50] <NeilRG> return "\n".join("".join(row) for row in self.grid) seems simpler to me
[03:55:03] <KirkMcDonald> That's going to miss a newline on the end.
[03:55:13] <NeilRG> okay, so + "\n"
[03:55:22] <NeilRG> not sure repr should have that though
[03:55:30] <NeilRG> usually repr doesn't include a newline
[03:55:51] <vaaqif> Thank you for the advice. For the grid because there is only one scrabble board, I thought I should include it into the class variable. Is there a reason to include it in the init instead?
[03:56:04] <NeilRG> vaaqif, aren't you going to change it?
[03:56:20] *** Joins: hexnewbie (~hexnewbie@user/hexnewbie)
[03:56:30] *** Joins: Jonopoly (~Jonopoly@user/jonopoly)
[03:56:58] <KirkMcDonald> vaaqif: You might only instantiate Board once, but consider what it would do if you *did* make more than one Board.
[03:57:00] <Imk0tter> let's say i have a list of 2 integers and a tuple of 5 integers; how can i easily appened the integers in the tuple of 5 integers ot the list of 2 integers?
[03:57:01] <vaaqif> Thank you Niel, this return join is what I was looking for
[03:57:20] <KirkMcDonald> Imk0tter: a.extend(b)
[03:57:34] <vaaqif> Ah right, I see. Thank you
[03:58:53] <vaaqif> Niel, sorry what do you mean about what am I going to change? I have changed the repr functino and now moved the grid into the __init__. I am not too sure about numpy yet, I am just learning python so I would prefer to try with the lists first before exploring numpy.
[03:59:16] *** Quits: plastico (~plastico@neomutt/plastico) (Quit: WeeChat 3.4)
[03:59:27] <SnoopJ> yates, ?
[03:59:35] *** Quits: blindguard (~blindguar@2a02:908:1864:c200::ef3c) (Quit: Konversation terminated!)
[03:59:40] *** Joins: kaiser (~kaiser@24.48.99.111)
[04:00:03] <NeilRG> vaaqif, I mean what Kirk said: you're going to instantiate this and change it, so it should be an instance variableâ€”not a class variable
[04:00:23] <vaaqif> Oh yep, I've changed it now. Thank you
[04:00:27] <NeilRG> class variables aren't a way to write singletons anyway
[04:00:35] *** Quits: junktext (~junktext@gateway/vpn/pia/junktext) (Ping timeout: 250 seconds)
[04:00:50] *** Quits: betuxy (~betuxy@p579adb74.dip0.t-ipconnect.de) (Quit: Connection closed)
[04:01:18] *** Quits: Xardas (~Xardas@149.233.51.127) (Quit: Client closed)
[04:01:30] *** Joins: Xardas (~Xardas@149.233.51.127)
[04:02:10] *** Quits: foobaz212 (~foobaz212@152.37.103.80) (Quit: Client closed)
[04:02:16] *** Joins: junebug (~junebug@2600:1700:3db0:2540:481:39cc:c7b4:e39c)
[04:02:23] *** Joins: foobaz212 (~foobaz212@152.37.103.80)
[04:04:04] *** Joins: Thanatos (~Thanatos@105.112.16.248)
[04:05:22] *** Quits: Thanatos (~Thanatos@105.112.16.248) (Read error: Connection reset by peer)
[04:05:32] *** Quits: ThanatosJ (~Thanatos@102.89.2.205) (Ping timeout: 240 seconds)
[04:05:41] <Imk0tter> ty
[04:05:52] *** Joins: Thanatos (~Thanatos@102.89.2.39)
[04:06:56] *** Quits: sobkas (~sobkas@95.175.17.217) (Quit: sobkas)
[04:07:17] *** Quits: gambl0re (~gambl0re@2607:fea8:a59f:c360::81cb) (Ping timeout: 252 seconds)
[04:07:55] *** Quits: noteness (~noteness@user/noteness) (Ping timeout: 240 seconds)
[04:08:13] *** Joins: Guts71 (~Guts71@197.205.129.168)
[04:08:21] *** Quits: foobaz212 (~foobaz212@152.37.103.80) (Ping timeout: 256 seconds)
[04:08:33] *** Joins: gambl0re (~gambl0re@2607:fea8:a59f:c360::81cb)
[04:08:40] *** Joins: noteness (~noteness@user/noteness)
[04:10:53] *** Quits: junebug (~junebug@2600:1700:3db0:2540:481:39cc:c7b4:e39c) (Quit: Leaving)
[04:11:09] *** Quits: hub (~hub@user/hub) (Quit: -)
[04:11:37] *** Joins: hub (~hub@user/hub)
[04:11:59] *** Quits: qlixed (~qlixed@181.44.129.13) (Quit: That's all folks!!)
[04:12:06] *** Joins: foobaz212 (~foobaz212@152.37.103.80)
[04:13:00] *** Quits: driib2 (~driib@185.195.233.157) (Quit: The Lounge - https://thelounge.chat)
[04:13:42] *** Joins: driib2 (~driib@185.195.233.157)
[04:14:39] *** Joins: herjazz (~herjazz@p10295192-ipngn22201marunouchi.tokyo.ocn.ne.jp)
[04:15:36] <vaaqif> If I have some value that wont change no matter what the instance of the class, does it make sense to put that as a class variable then?. For example I have
[04:15:43] *** Joins: uhug (~AdminUser@m91-129-96-24.cust.tele2.ee)
[04:15:49] *** Quits: dre (~dre@2001:8003:c932:c301:70ee:1824:1d7e:5401) (Ping timeout: 240 seconds)
[04:16:02] <vaaqif> board_dimensions in class variable. then in the init i make a grid based on board_dimensions
[04:16:06] *** Joins: junebug (~junebug@104-0-169-217.lightspeed.miamfl.sbcglobal.net)
[04:16:46] *** Quits: driib2 (~driib@185.195.233.157) (Client Quit)
[04:16:57] <grym> vaaqif: a module level variable would be fine
[04:17:28] *** Joins: driib2 (~driib@185.195.233.157)
[04:18:53] *** Quits: gambl0re (~gambl0re@2607:fea8:a59f:c360::81cb) (Ping timeout: 256 seconds)
[04:19:14] <nedbat> vaaqif: it could also be a class attribute
[04:19:48] *** Joins: skapata (~Skapata@2804:14c:87b0:9d2e:964:33b9:5b34:486d)
[04:19:48] *** Quits: skapata (~Skapata@2804:14c:87b0:9d2e:964:33b9:5b34:486d) (Changing host)
[04:19:48] *** Joins: skapata (~Skapata@user/skapata)
[04:19:54] *** Joins: gambl0re (~gambl0re@cpe688f2e1852a3-cm688f2e1852a0.cpe.net.cable.rogers.com)
[04:21:15] *** Quits: TheHermann (~TheHerman@gateway/tor-sasl/thehermann) (Quit: Leaving)
[04:21:36] *** Quits: foobaz212 (~foobaz212@152.37.103.80) (Quit: Client closed)
[04:21:36] *** Joins: stewie925 (~stewie925@2001:420:c0c8:1001::415)
[04:21:48] *** Quits: junebug (~junebug@104-0-169-217.lightspeed.miamfl.sbcglobal.net) (Quit: Leaving)
[04:21:49] *** Joins: foobaz212 (~foobaz212@152.37.103.80)
[04:22:57] *** Quits: jwhisnant (~jwhisnant@user/jwhisnant) (Quit: Free ZNC ~ Powered by LunarBNC: https://LunarBNC.net)
[04:23:05] *** Quits: cybniv (~niv@limbo.cypherpunks.io) (Quit: Powered by LunarBNC: https://LunarBNC.net)
[04:23:13] *** Joins: niv (~niv@limbo.cypherpunks.io)
[04:23:59] *** Joins: driib27 (~driib@185.65.135.238)
[04:23:59] *** Quits: diogenese (~diogenese@diogenese.velotech.net) (Quit: Has anybody seen the bridge?)
[04:24:21] *** Joins: diogenese (~diogenese@diogenese.velotech.net)
[04:24:54] *** Quits: driib2 (~driib@185.195.233.157) (Ping timeout: 252 seconds)
[04:24:54] *** driib27 is now known as driib2
[04:25:03] *** Quits: rud0lf (rangifer@user/rud0lf) (Remote host closed the connection)
[04:25:03] *** Quits: decimuscorvinus (~jimmy@136.37.105.112) (Quit: Will return)
[04:25:10] *** Joins: jwhisnant (~jwhisnant@user/jwhisnant)
[04:25:15] *** Joins: rud0lf (rangifer@user/rud0lf)
[04:25:30] *** Quits: Fozzworth (~Fozzworth@user/fozzworth) (Read error: Connection reset by peer)
[04:25:41] *** Quits: gambl0re (~gambl0re@cpe688f2e1852a3-cm688f2e1852a0.cpe.net.cable.rogers.com) (Ping timeout: 256 seconds)
[04:28:37] *** Joins: ShinyCyril (~ShinyCyri@65.79.144.153)
[04:29:24] *** Joins: decimuscorvinus (~jimmy@136.37.105.112)
[04:29:53] *** Quits: foobaz212 (~foobaz212@152.37.103.80) (Ping timeout: 256 seconds)
[04:29:54] *** Joins: cincoswim (~cincoswim@cm-72-241-33-17.buckeyecom.net)
[04:30:27] *** Quits: Pickchea (~private@user/pickchea) (Quit: Leaving)
[04:30:46] *** Quits: iflema (~ian@user/iflema) (Ping timeout: 245 seconds)
[04:31:54] *** Joins: rama (~rama@c-24-130-92-222.hsd1.ca.comcast.net)
[04:33:50] *** Quits: mrgz (~mrgz@201-42-0-191.dsl.telesp.net.br) (Ping timeout: 260 seconds)
[04:34:23] *** Quits: el_kevino (~mote@2604:a880:400:d1::901:5001) (Quit: WeeChat 3.4.1)
[04:34:29] *** Quits: wakeup (~wakeup@user/wakeup) (Quit: Client closed)
[04:34:29] *** Quits: ghost43 (~ghost43@gateway/tor-sasl/ghost43) (Remote host closed the connection)
[04:34:36] *** Joins: aphysically (~aphysical@user/aphysically)
[04:35:57] *** Quits: Klinda (~superleag@user/klinda) (Quit: Konversation terminated!)
[04:36:02] *** Joins: ghost43 (~ghost43@gateway/tor-sasl/ghost43)
[04:36:22] *** Quits: MJ (~mjpieters@zopatista.plus.com) (Quit: ZNC - http://znc.in)
[04:36:52] *** Joins: CatCow (~wtf_over@c-73-96-109-206.hsd1.or.comcast.net)
[04:37:03] *** Quits: ShinyCyril (~ShinyCyri@65.79.144.153) (Quit: ShinyCyril)
[04:37:47] *** Joins: chenqisu1 (~chenqisu1@183.217.201.47)
[04:37:51] <stewie925> hi guysÂ  I am getting syntax error when trying to do pandas.read_excel("C:\test\test_file.xlsx")
[04:38:07] <phy1729> you need to double up the \
[04:38:07] *** Joins: MJ (~mjpieters@zopatista.plus.com)
[04:38:36] *** Parts: bomb (~bomb@user/bomb) (â€Ž)
[04:38:57] *** Quits: Linux77 (~LinuMage@189-48-140-124.user3p.veloxzone.com.br) (Ping timeout: 256 seconds)
[04:39:15] *** phaisedArray is now known as phaise
[04:39:16] <nedbat> stewie925: is it actually a syntax error, or a different kind of error?
[04:39:49] <stewie925> oh wait, sorry..
[04:39:58] <stewie925> let me try again... brb
[04:40:02] <stewie925> thanks nedbat :)
[04:40:46] *** Joins: iflema (~ian@user/iflema)
[04:43:01] *** Quits: xrogaan (~xrogaan@user/xrogaan) (Ping timeout: 268 seconds)
[04:43:05] *** Quits: korg815 (~korg815@user/korg815) (Quit: WeeChat 2.8)
[04:43:15] *** Quits: grimvar (~grimvar@i5C75F597.versanet.de) (Ping timeout: 256 seconds)
[04:44:24] *** Quits: ivii (~ivan@user/ivii) (Remote host closed the connection)
[04:44:40] *** Joins: grimvar (~grimvar@i5C75F5BE.versanet.de)
[04:46:06] *** Parts: uhug (~AdminUser@m91-129-96-24.cust.tele2.ee) (https://quassel-irc.org - Chat comfortably. Anywhere.)
[04:46:14] *** Joins: xrogaan (~xrogaan@user/xrogaan)
[04:46:19] *** Joins: uhug (~AdminUser@m91-129-96-24.cust.tele2.ee)
[04:47:35] *** Quits: winterflaw (~winterfla@gateway/tor-sasl/winterflaw) (Ping timeout: 240 seconds)
[04:48:50] *** Quits: upsala (~zcb@185.209.196.134) (Quit: WeeChat 3.4.1)
[04:48:56] *** Joins: funhouse (~funhouse@user/funhouse)
[04:49:28] *** Quits: ghost43 (~ghost43@gateway/tor-sasl/ghost43) (Remote host closed the connection)
[04:50:19] *** Joins: ghost43 (~ghost43@gateway/tor-sasl/ghost43)
[04:51:44] *** Joins: adiKt (uid472628@id-472628.tinside.irccloud.com)
[04:52:18] <vaaqif> Hi again. I have now made a rough class for the board and I was going to have a player. I want the player to be able to place a tile on the board. But I'm not sure the best way to get the player to interact with the board. Should I pass in the instance of the board class or something else? https://bpa.st/6SFQ
[04:54:15] *** Quits: crashrep (~crashrep@user/crashrep) (Ping timeout: 240 seconds)
[04:54:23] *** Joins: b1ack0p (~ocloud@user/blackop)
[04:54:26] <b1ack0p> hi
[04:55:49] *** Quits: ba (~ba@86.18.4.28) (Ping timeout: 250 seconds)
[04:55:57] *** Quits: Guts71 (~Guts71@197.205.129.168) (Ping timeout: 256 seconds)
[04:56:11] *** Joins: crashrep (~crashrep@user/crashrep)
[04:56:39] <nedbat> b1ack0p: Welcome. If you have a question, it's always best to jump right in and ask it.
[04:56:48] *** Quits: admin123 (~harrymore@ool-2f12f5b1.dyn.optonline.net) (Ping timeout: 252 seconds)
[04:57:18] <nedbat> vaaqif: you might want a player to have a board instance as an attribute, or you could pass the board into the place() method
[04:58:07] *** Joins: korg815 (~korg815@user/korg815)
[05:00:09] <b1ack0p> earlier nvz wrote me a python code to create csv from xml but seems he is not available
[05:00:20] <b1ack0p> i need help to extend the code
[05:00:34] *** Quits: Thanatos (~Thanatos@102.89.2.39) (Read error: Connection reset by peer)
[05:01:00] <vaaqif> Thanks nedbat, I shall give the player a board instance
[05:01:21] <nedbat> b1ack0p: pastebin the code, and ask a question
[05:01:41] *** Joins: Thanatos (~Thanatos@105.112.16.248)
[05:01:55] *** Quits: crashrep (~crashrep@user/crashrep) (Ping timeout: 240 seconds)
[05:02:06] <stewie925> I have another issue here - so I am running a python script with pandas that reads an excel file.Â  Â I put a logging statement that says "reading data" right before the read_excel statement.Â  Then the pandas.read_excel() is executing.... then it stopped and my console shows 'Killed'.
[05:02:53] <stewie925> clarification - so I see "reading data"Â  followed by "Killed"
[05:03:10] <b1ack0p> this is the python code: http://paste.debian.net/plain/1235187
[05:03:11] *** Joins: roxfan (~roxfan@2a02:a03f:a2be:4f00:6d0c:3ed5:99e5:49fe)
[05:03:29] <b1ack0p> and this is the xml file to be created csv : https://github.com/mamedev/mame/releases/download/mame0241/mame0241lx.zip
[05:03:37] *** Quits: foul_owl (~kerry@174-21-69-110.tukw.qwest.net) (Ping timeout: 240 seconds)
[05:03:53] <stewie925> oh its linux process ...
[05:03:54] <b1ack0p> in the code we got only basic details but now how can i add more details such as :
[05:04:14] <b1ack0p> <driver status="good" emulation="good" savestate="supported"/>
[05:04:42] <b1ack0p> and >> https://cdn.discordapp.com/attachments/951454112078241802/955623994537693214/unknown.png
[05:04:52] <b1ack0p> and >> https://cdn.discordapp.com/attachments/951454112078241802/955624123512537189/unknown.png
[05:05:40] *** Joins: crashrep (~crashrep@user/crashrep)
[05:05:41] <b1ack0p> ?
[05:07:08] *** Quits: Forsaken87 (~quassel@ip-037-201-193-116.um10.pools.vodafone-ip.de) (Quit: https://quassel-irc.org - Chat comfortably. Anywhere.)
[05:09:15] *** Quits: stewie925 (~stewie925@2001:420:c0c8:1001::415) (Quit: Client closed)
[05:09:55] *** Quits: crashrep (~crashrep@user/crashrep) (Ping timeout: 240 seconds)
[05:09:56] *** Joins: kaiseisei (~Thunderbi@user/kaiseisei)
[05:11:07] *** Quits: vicfred (~vicfred@user/vicfred) (Quit: Leaving)
[05:11:27] *** Quits: gitesh (uid423739@id-423739.ilkley.irccloud.com) (Quit: Connection closed for inactivity)
[05:12:33] *** Joins: jazzy2 (~jaziz@user/jaziz)
[05:13:20] *** Joins: crashrep (~crashrep@user/crashrep)
[05:14:27] *** Quits: jazzy (~jaziz@user/jaziz) (Ping timeout: 250 seconds)
[05:14:31] *** Quits: osxtra (~root@2605:a601:aa0a:2200::83a2:6799) (Ping timeout: 245 seconds)
[05:15:27] *** Quits: CrazyEddy (crazyed@2603:300a:1d10:c000:de4a:3eff:fe88:cc5f) (Remote host closed the connection)
[05:16:52] *** Joins: foobaz212 (~foobaz212@152.37.103.80)
[05:16:59] *** Quits: herjazz (~herjazz@p10295192-ipngn22201marunouchi.tokyo.ocn.ne.jp) (Quit: leaving)
[05:17:30] *** Joins: XV9 (~XV8@2601:5cb:c001:50::94d3)
[05:18:12] *** Joins: CrazyEddy (crazyed@2603:300a:1d10:c000:de4a:3eff:fe88:cc5f)
[05:18:27] *** Joins: foul_owl (~kerry@23.82.193.88)
[05:18:45] <b1ack0p> and even more : <input players="1" coins="4" service="yes"> <control type="only_buttons" buttons="7"/> </input>
[05:19:15] <b1ack0p> home many player - coin - control type etc
[05:19:24] *** Quits: XV8 (~XV8@2601:5cb:c001:50:f138:1e1a:7095:9508) (Ping timeout: 240 seconds)
[05:21:12] *** Quits: CrazyEddy (crazyed@2603:300a:1d10:c000:de4a:3eff:fe88:cc5f) (Remote host closed the connection)
[05:22:18] *** Joins: matsaman (~matsaman@user/matsaman)
[05:23:47] *** Joins: microscopy (crazyed@2603:300a:1d10:c000:de4a:3eff:fe88:cc5f)
[05:23:58] *** Quits: jmiehe (~Thunderbi@user/jmiehe) (Quit: jmiehe)
[05:24:02] *** microscopy is now known as CrazyEddy
[05:25:38] *** Joins: Linux77 (~LinuMage@189-48-140-124.user3p.veloxzone.com.br)
[05:25:45] *** Joins: rama_ (~rama@c-24-130-92-222.hsd1.ca.comcast.net)
[05:25:59] *** Quits: Linux77 (~LinuMage@189-48-140-124.user3p.veloxzone.com.br) (Max SendQ exceeded)
[05:26:22] *** Joins: Linux77 (~LinuMage@189-48-140-124.user3p.veloxzone.com.br)
[05:26:37] *** Joins: zmotaj (~zmotaj@user/zmotaj)
[05:26:43] *** Quits: Linux77 (~LinuMage@189-48-140-124.user3p.veloxzone.com.br) (Max SendQ exceeded)
[05:26:44] *** Quits: moog__ (~moog@98.97.82.161) (Remote host closed the connection)
[05:26:46] *** Joins: CodePoint (~CodePoint@107-208-128-79.lightspeed.tukrga.sbcglobal.net)
[05:26:46] *** Joins: vlado (~vlado@2800:484:3587:3c90:8bf1:66d4:72a6:4f9c)
[05:26:58] *** Joins: moog (~moog@98.97.82.161)
[05:27:00] *** Quits: Wulf (~Wulf@user/wulf) (Ping timeout: 240 seconds)
[05:27:07] *** Joins: Linux77 (~LinuMage@189-48-140-124.user3p.veloxzone.com.br)
[05:27:30] *** Quits: Linux77 (~LinuMage@189-48-140-124.user3p.veloxzone.com.br) (Max SendQ exceeded)
[05:27:53] *** Joins: Linux77 (~LinuMage@189-48-140-124.user3p.veloxzone.com.br)
[05:28:45] *** Joins: osxtra (~root@2605:a601:aa01:5000::83a2:6799)
[05:29:00] *** Quits: rama (~rama@c-24-130-92-222.hsd1.ca.comcast.net) (Ping timeout: 240 seconds)
[05:29:06] *** Joins: Wulf (~Wulf@user/wulf)
[05:29:19] *** Quits: crashrep (~crashrep@user/crashrep) (Quit: WeeChat 3.4)
[05:29:24] *** Joins: cho14 (~USSR@41.107.167.41)
[05:30:21] *** Quits: PJBoy (~PJBoy@user/pjboy) (Ping timeout: 252 seconds)
[05:30:30] *** Quits: monkey_ (~user@190.104.116.153) (Remote host closed the connection)
[05:31:18] <deltab> b1ack0p: you can add columns by setting  data['...'] = ...  in the region of line 50
[05:31:26] *** Quits: moog (~moog@98.97.82.161) (Ping timeout: 252 seconds)
[05:31:30] *** Joins: moog_ (~moog@98.97.82.161)
[05:31:39] *** Joins: admin123 (~harrymore@37.120.216.194)
[05:31:53] <b1ack0p> deltab: what about fields?
[05:32:00] *** Parts: cho14 (~USSR@41.107.167.41) ()
[05:32:03] <b1ack0p> should i define fields i wanna add?
[05:32:09] <b1ack0p> and how should i define?
[05:33:06] *** Joins: moog__ (~moog@107.126.53.83)
[05:33:40] <deltab> you can see how the name is set in line 38:  data['name'] = rom['name']
[05:34:35] *** Joins: herme5 (~mote@2604:a880:400:d1::901:5001)
[05:34:55] *** herme5 is now known as el_kevino
[05:34:55] *** Quits: bitdex (~bitdex@gateway/tor-sasl/bitdex) (Ping timeout: 240 seconds)
[05:35:38] <deltab> e.g.  data['players'] = rom.find('input')['players']  if I've understood the structure correctly
[05:35:42] <b1ack0p> can i add more same in there?
[05:36:04] <b1ack0p> deltab: in xml all values show in separate section
[05:36:10] *** Joins: bitdex (~bitdex@gateway/tor-sasl/bitdex)
[05:36:11] *** Quits: moog_ (~moog@98.97.82.161) (Ping timeout: 256 seconds)
[05:36:33] <b1ack0p> for example name - description etc defined between <machine> </machine>
[05:36:47] <b1ack0p> players defined in <input> </input>
[05:36:50] <b1ack0p> ..etc
[05:37:59] <deltab> that's more complicated: what do you want to happen when there are multiple players?
[05:40:13] *** Quits: cosimone (~user@93-44-187-176.ip98.fastwebnet.it) (Quit: ERC (IRC client for Emacs 27.1))
[05:40:33] <b1ack0p> deltab: i want to get info that how many players game supports
[05:41:26] *** Quits: Techcable (~Techcable@168.235.93.147) (Changing host)
[05:41:26] *** Joins: Techcable (~Techcable@user/Techcable)
[05:41:35] <kaiser> howdy, I am using pyQT and QT-designer to put together a GUI, i got a rough canvas to work with, its time to actually get buttons to do stuff; how can I store "Key Sequence Edit" box input to a variable?
[05:41:45] *** Joins: leshaste (~lesshaste@82-69-126-43.dsl.in-addr.zen.co.uk)
[05:42:20] *** Quits: lesshaste (~lesshaste@82-69-126-43.dsl.in-addr.zen.co.uk) (Remote host closed the connection)
[05:42:46] <kaiser> https://pastebin.com/JRpVsCpL
[05:42:55] <kaiser> this is my dialog python script
[05:43:16] *** Quits: akk (~akk@75-161-61-130.albq.qwest.net) (Quit: +++)
[05:43:33] <kaiser>  i want that "enter shortcut" input to actually be stored somewhere so i can later append it to a xkbcomp keymapping
[05:43:53] <kaiser> I am trying to make a program I can use to configure a keypad
[05:44:35] <kaiser> additonally, I would like to somehow edit the amount of keys you can enter as a shortcut, to 1 key, or else it will break things
[05:45:41] <deltab> kaiser: you'll need event handlers to detect when buttons are pressed
[05:46:11] <deltab> (I think)
[05:46:15] <kaiser> it seems to detect that my keys are pressed already
[05:46:42] *** Joins: kaichiuchi (uid547644@id-547644.uxbridge.irccloud.com)
[05:46:45] <kaiser> the problem is, i cant see where in the code I can actually handle that input and do something with it
[05:47:19] <kaiser> it can very much be because I am not good with python, first time im actually trying to write python in years
[05:48:21] *** Quits: uhug (~AdminUser@m91-129-96-24.cust.tele2.ee) (Remote host closed the connection)
[05:48:33] *** Quits: ghost43 (~ghost43@gateway/tor-sasl/ghost43) (Remote host closed the connection)
[05:48:47] *** Quits: bomb-on (~bomb-on@user/bomb-on) (Quit: aÐ»Ð»Ð¸Ð»Ñ¹Ñ–Ð°!)
[05:49:21] *** Joins: ghost43 (~ghost43@gateway/tor-sasl/ghost43)
[05:49:25] *** Quits: ghost43 (~ghost43@gateway/tor-sasl/ghost43) (Remote host closed the connection)
[05:49:33] *** Joins: moog_ (~moog@98.97.82.161)
[05:49:35] <deltab> how will the user interact with this? they click on the input, press a key, and then?
[05:49:41] *** Quits: rpkilby (~rpkilby@c-24-20-208-106.hsd1.or.comcast.net) (Remote host closed the connection)
[05:49:54] *** Joins: ghost43 (~ghost43@gateway/tor-sasl/ghost43)
[05:49:58] *** Quits: kaichiuchi (uid547644@id-547644.uxbridge.irccloud.com) (Changing host)
[05:49:58] *** Joins: kaichiuchi (uid547644@user/kaichiuchi)
[05:50:36] <deltab> I see something about buttons that accept or reject
[05:50:42] *** Joins: rpkilby (~rpkilby@c-24-20-208-106.hsd1.or.comcast.net)
[05:50:51] <kaiser> deltab: then they press "OK" which then it will append with some formatting to a .xkb file
[05:51:30] <deltab> okay, so you need to detect when they've pressed OK
[05:51:39] *** Quits: vaaqif (~vaaqif_3@cpc151159-smal19-2-0-cust83.19-1.cable.virginm.net) (Quit: Lost terminal)
[05:51:57] *** Quits: moog__ (~moog@107.126.53.83) (Ping timeout: 250 seconds)
[05:52:03] *** Quits: foobaz212 (~foobaz212@152.37.103.80) (Quit: Client closed)
[05:52:16] *** Joins: foobaz212 (~foobaz212@152.37.103.80)
[05:52:37] <kaiser> indeed, but right now im confused as to how to store the input in a variable
[05:52:53] <deltab> I presume this tells the dialog that the OK button being clicked means the Dialog was accepted: self.buttonBox.accepted.connect(Dialog.accept)
[05:53:00] *** Quits: nyah (~nyah@05453449.skybroadband.com) (Ping timeout: 240 seconds)
[05:53:20] <deltab> so you need to detect when the dialog is accepted
[05:54:18] <kaiser> Can I store the input into a variable live? before the user presses accept?
[05:54:28] <deltab> I'm guessing that would involve another .connect call in the region of line 33
[05:54:37] *** Quits: jstein (~jstein@gentoo/developer/jstein) (Ping timeout: 240 seconds)
[05:54:38] <deltab> yes
[05:55:06] *** Quits: rpkilby (~rpkilby@c-24-20-208-106.hsd1.or.comcast.net) (Ping timeout: 252 seconds)
[05:56:34] <deltab> that would I think involve the signals: https://doc.qt.io/qtforpython-5/PySide2/QtWidgets/QKeySequenceEdit.html#signals
[05:57:43] *** Quits: gurkenglas (~gurkengla@dslb-178-012-018-212.178.012.pools.vodafone-ip.de) (Ping timeout: 256 seconds)
[05:58:36] <deltab> https://doc.qt.io/qtforpython-5/tutorials/basictutorial/clickablebutton.html
[05:58:59] <kaiser> i got buttons working already
[05:59:13] <deltab> like that, but instead of button.clicked you'd have dialog.accepted, I think
[05:59:30] *** Joins: gambl0re (~gambl0re@2607:fea8:a59f:c360::81cb)
[06:00:18] <deltab> or key1edit.keySequenceChanged
[06:00:36] *** Joins: rpkilby (~rpkilby@c-24-20-208-106.hsd1.or.comcast.net)
[06:01:38] *** Joins: ShinyCyril (~ShinyCyri@65.79.144.153)
[06:02:34] *** Quits: nuclearg1 (~nucleargr@user/nuclearg1) (Ping timeout: 268 seconds)
[06:03:59] <FergusL> that's a far shot but I'm using pybind11's binder to generated bindings for a medium size project (VCV Rack), I'm using the cmake example as a base, I set the namespace right namespace to be bound (rack) and I get that error at compile time : "error: â€˜rackâ€™ was not declared in this scope" for one of the structs in the codebase; it feels really
[06:03:59] <FergusL> weird that it can't find the namespace it is currently binding...
[06:04:42] <FergusL> dev docs for Rack are here: https://vcvrack.com/docs-v2/namespacerack Context is the struct for which I get that error
[06:04:48] *** Joins: ule (~ule@user/ule)
[06:05:15] *** Quits: ano (~ano@user/ano) (Ping timeout: 240 seconds)
[06:05:30] *** Quits: ShinyCyril (~ShinyCyri@65.79.144.153) (Client Quit)
[06:06:46] <FergusL> https://bpa.st/FHNQ first part is the generated part, second part after //// is the code from which it generates
[06:07:04] *** Joins: ShinyCyril (~ShinyCyri@65.79.144.153)
[06:07:09] <FergusL> I had to set a few things in config.cfg for binder to complete its work so far
[06:07:31] *** Quits: rama_ (~rama@c-24-130-92-222.hsd1.ca.comcast.net) (Remote host closed the connection)
[06:08:50] *** Quits: MercilessDeth (~brad@136.49.59.177) (Quit: Konversation terminated!)
[06:09:14] *** Quits: Jonopoly (~Jonopoly@user/jonopoly) (Quit: WeeChat 3.0)
[06:09:39] <kaiser> deltab: PySide2.QtGui.QKeySequence seems to be what im looking for
[06:09:45] *** Quits: ShinyCyril (~ShinyCyri@65.79.144.153) (Client Quit)
[06:10:15] *** Quits: matsaman (~matsaman@user/matsaman) (Quit: leaving)
[06:11:22] <ule> Hi there, can someone please explain why when I try to populate a multi-dimencional array, Python updates all columns instead of updating just the item I wan to change? Example: https://pastebin.com/W5fMz2bq
[06:11:59] *** Joins: mrgz (~mrgz@201-42-0-191.dsl.telesp.net.br)
[06:12:24] <ule> It returns a [[0, 2, 4], [0, 2, 4], [0, 2, 4]] instead of [[0,1,2], [1,2,3], [2,3,4]]. Why?
[06:12:30] <grym> ule: bit.ly/pynames1 ; what you actually want is arr_2d = [[0 for c in range(ncols)] for r in range(nrows)]
[06:12:45] <grym> the why is because you're referencing *the same list* three times
[06:12:49] <grym> not making three lists
[06:12:59] <ule> ohhh let me try here
[06:13:59] <grym> (my way does actually make multiple lists_
[06:14:35] <grym> ule: this is one of the top 3 gotchas, by the way, so we've all been there
[06:14:38] <ule> grym: You mande my day. THANK YOU!!
[06:14:50] <ule> *made
[06:14:57] <ule> I could kiss you now lol
[06:15:00] <grym> haha
[06:15:08] <ule> was stuck on this for hours
[06:15:29] <ule> part of another algorithm, until I finally did a debug and found out about this behaviour
[06:15:40] <grym> the other gotcha is `def foo(x=[])`, which is also wrong for the same reason
[06:16:08] <ule> This is great interview question for python devs
[06:16:11] <ule> :D
[06:16:49] *** Quits: mud (~mud@user/kadoban) (Quit: quit)
[06:17:07] *** Joins: rama (~rama@c-24-130-92-222.hsd1.ca.comcast.net)
[06:17:35] <phy1729> Also a great reason to use a linter. Didn't know about it until a linter complained and I had to google to figure out why.
[06:18:40] <ule> I have a linter on my VIM and it didn't catch that
[06:18:44] <ule> :/
[06:18:59] <ule> I mean, in my example there.. I'm not sure for the foo(x=[])
[06:19:08] <ule> anyways, thanks again!
[06:19:26] *** Quits: [itchyjunk] (~itchyjunk@user/itchyjunk/x-7353470) (Remote host closed the connection)
[06:19:28] *** Quits: sgen (~sgen@2607:fea8:7ce1:c8e0:a992:a734:d5e:8b54) (Remote host closed the connection)
[06:19:46] *** Joins: [itchyjunk] (~itchyjunk@user/itchyjunk/x-7353470)
[06:22:22] *** Joins: Russell- (russell@bnc4free/staff/russell)
[06:22:34] *** Quits: Russell (russell@bnc4free/staff/russell) (Ping timeout: 260 seconds)
[06:22:46] <kaiser> deltab: i still am stumped on how i can save the input in a variable after reading several doc pages now
[06:22:58] *** Quits: foobaz212 (~foobaz212@152.37.103.80) (Quit: Client closed)
[06:23:02] *** Quits: cs (~ovnicraft@ftth-179-49-44-28.cue.celerity.ec) (Ping timeout: 240 seconds)
[06:23:05] *** Russell- is now known as Russell
[06:23:11] *** Joins: foobaz212 (~foobaz212@152.37.103.80)
[06:23:32] *** Quits: djapo (~archangel@user/djapo) (Ping timeout: 240 seconds)
[06:24:10] <deltab> kaiser: can you get something like say_hello working?
[06:24:31] <kaiser> what do you mean exactly?
[06:24:48] <deltab> outputting something when the signal is sent
[06:24:58] <kaiser> ill see if i can figure it out
[06:25:15] <deltab> take it step by step
[06:25:22] *** Joins: ovnicraft (~ovnicraft@ftth-179-49-44-28.cue.celerity.ec)
[06:25:37] <deltab> first get something happening when the signal is sent, so that you know you have that part working
[06:25:51] <deltab> then output the value read from the input
[06:26:05] <deltab> then use the value in some other way
[06:26:25] <twainwek> what's the cost of assert?
[06:26:26] *** Quits: johnkeats6 (~johnkeats@2804:14c:32:a0cc:90dc:6b82:6352:8639) (Ping timeout: 252 seconds)
[06:27:02] <twainwek> and is there a way to disable assertions
[06:27:50] <grym> twainwek: python -O disables assertions
[06:28:05] <grym> but they fit best in unit tests anyway, so ...
[06:28:12] <grym> i don't use them in normal code myself
[06:29:48] <phy1729> They're occasionally nice for telling the type checker you know better than it does with    assert isinstance(...
[06:29:56] *** Quits: llanhmod (~developer@user/domhnall/x-2887755) (Ping timeout: 245 seconds)
[06:30:00] *** Quits: luke-jr (~luke-jr@user/luke-jr) (Read error: Connection reset by peer)
[06:30:01] *** Quits: foobaz212 (~foobaz212@152.37.103.80) (Ping timeout: 256 seconds)
[06:33:06] *** Quits: rama (~rama@c-24-130-92-222.hsd1.ca.comcast.net) (Remote host closed the connection)
[06:33:26] *** Quits: ghost43 (~ghost43@gateway/tor-sasl/ghost43) (Remote host closed the connection)
[06:34:13] *** Joins: ghost43 (~ghost43@gateway/tor-sasl/ghost43)
[06:34:50] *** Joins: luke-jr (~luke-jr@user/luke-jr)
[06:35:24] *** Joins: NealRame (~a@89.187.163.193)
[06:35:44] <SnoopJ> I used to be worried about -O but I think I've gotten over it. I don't exactly write a lot of assertions, but I wouldn't shy away from it per se
[06:39:40] *** Quits: CodePoint (~CodePoint@107-208-128-79.lightspeed.tukrga.sbcglobal.net) (Quit: CodePoint struts into the sunset on the beach.)
[06:40:13] *** Quits: rpkilby (~rpkilby@c-24-20-208-106.hsd1.or.comcast.net) (Ping timeout: 256 seconds)
[06:40:39] *** Quits: ncwbqcfe (~rvgzuuqp@gateway/tor-sasl/rvgzuuqp) (Quit: ncwbqcfe)
[06:43:37] *** Joins: dre (~dre@2001:8003:c932:c301:c38d:68f8:7c3:7e20)
[06:46:22] *** Quits: zerotypic (~zerotypic@165.173.19.147) (Ping timeout: 260 seconds)
[06:46:52] *** Joins: dodobrain (~dodobrain@user/dodobrain)
[06:47:52] *** Quits: Falcon| (andreas@user/falcon/x-0540249) (Ping timeout: 250 seconds)
[06:48:12] *** Joins: Falcon| (andreas@user/falcon/x-0540249)
[06:51:14] *** Joins: Gustavo6046 (~Gustavo60@user/gustavo6046)
[06:51:14] *** Joins: Hanii (~textual@2a00:23c5:c583:a300:e0d9:96aa:840c:1d25)
[06:53:34] *** Joins: ano (~ano@user/ano)
[06:54:26] *** Quits: ghost43 (~ghost43@gateway/tor-sasl/ghost43) (Remote host closed the connection)
[06:54:30] *** Quits: cincoswim (~cincoswim@cm-72-241-33-17.buckeyecom.net) (Ping timeout: 252 seconds)
[06:55:15] *** Joins: ghost43 (~ghost43@gateway/tor-sasl/ghost43)
[06:57:13] *** Quits: howdoi (uid224@id-224.lymington.irccloud.com) (Quit: Connection closed for inactivity)
[06:59:45] *** Quits: tj123 (~tjh123@cpe-75-185-104-199.cinci.res.rr.com) (Quit: Leaving)
[07:03:24] *** Joins: ubert1 (~Thunderbi@p548c8d44.dip0.t-ipconnect.de)
[07:04:35] *** Quits: tijuco (~tijuco@user/tijuco) (Ping timeout: 256 seconds)
[07:04:55] *** Quits: ubert (~Thunderbi@p200300ecdf1588ca0b7aa2fbaa2d0440.dip0.t-ipconnect.de) (Ping timeout: 256 seconds)
[07:04:55] *** ubert1 is now known as ubert
[07:05:02] *** Quits: roxfan (~roxfan@2a02:a03f:a2be:4f00:6d0c:3ed5:99e5:49fe) (Ping timeout: 240 seconds)
[07:07:31] *** Quits: vlado (~vlado@2800:484:3587:3c90:8bf1:66d4:72a6:4f9c) (Quit: WeeChat 3.4)
[07:08:17] *** Joins: MercilessDeth (~brad@136.49.59.177)
[07:10:01] *** Parts: ule (~ule@user/ule) (WeeChat 3.2.1)
[07:10:43] *** Quits: nesoi2 (~Adium@60-241-111-113.static.tpgi.com.au) (Quit: Leaving.)
[07:10:50] *** Joins: rpkilby (~rpkilby@c-24-20-208-106.hsd1.or.comcast.net)
[07:12:51] *** Quits: Barones (~Barones@user/Barones) (Remote host closed the connection)
[07:13:10] *** Joins: Barones (~Barones@user/Barones)
[07:14:06] *** Quits: gambl0re (~gambl0re@2607:fea8:a59f:c360::81cb) (Ping timeout: 268 seconds)
[07:14:56] *** Quits: acidsys (~LSD@2a03:4000:55:d20::3) (Excess Flood)
[07:15:15] *** Quits: spithash (~spithash@user/spithash) (Ping timeout: 240 seconds)
[07:15:29] *** Joins: acidsys (~LSD@2a03:4000:55:d20::3)
[07:16:15] *** Quits: rpkilby (~rpkilby@c-24-20-208-106.hsd1.or.comcast.net) (Ping timeout: 256 seconds)
[07:17:14] *** Joins: spithash (~spithash@user/spithash)
[07:19:48] *** Quits: KimK (~KimK@ip98-186-40-208.ks.ks.cox.net) (Ping timeout: 240 seconds)
[07:20:37] *** Quits: rindolf (~shlomif@inkscape/dev/shlomif) (Read error: Connection reset by peer)
[07:20:48] *** Quits: very_sneaky (~very_snea@user/very-sneaky/x-7432109) (Ping timeout: 250 seconds)
[07:21:00] *** Joins: rindolf (~shlomif@inkscape/dev/shlomif)
[07:21:59] *** Joins: mud (~mud@user/kadoban)
[07:22:01] *** Joins: djapo (~archangel@user/djapo)
[07:22:40] *** Joins: very_sneaky (~very_snea@user/very-sneaky/x-7432109)
[07:22:54] *** Quits: mags (~mags@097-091-082-103.res.spectrum.com) (Quit: leaving)
[07:22:57] *** Quits: SaltHilStroller_ (~SaltHillS@206.223.160.26) (Ping timeout: 250 seconds)
[07:23:29] *** Joins: mags (~mags@097-091-082-103.res.spectrum.com)
[07:24:49] *** Quits: vakera_pingveno (~dan@2600:1700:21f9:b150::10) (Quit: Konversation terminated!)
[07:29:41] *** Joins: rustyshackleford (uid236774@id-236774.helmsley.irccloud.com)
[07:31:36] *** Quits: mags (~mags@097-091-082-103.res.spectrum.com) (Quit: leaving)
[07:31:52] *** Joins: foobaz212 (~foobaz212@152.37.103.80)
[07:32:03] *** Quits: leshaste (~lesshaste@82-69-126-43.dsl.in-addr.zen.co.uk) (Read error: Connection reset by peer)
[07:32:14] *** Joins: leshaste (~lesshaste@82-69-126-43.dsl.in-addr.zen.co.uk)
[07:33:09] *** Joins: mags (~mags@097-091-082-103.res.spectrum.com)
[07:33:29] *** Joins: weuo3 (~weuo@101.230.253.179)
[07:34:35] *** Quits: jpds (~jpds@gateway/tor-sasl/jpds) (Ping timeout: 240 seconds)
[07:36:39] *** Joins: white2 (~mahengrui@user/mahengrui1)
[07:36:53] *** Quits: foobaz212 (~foobaz212@152.37.103.80) (Ping timeout: 256 seconds)
[07:36:58] *** Quits: esther (~esther@24-155-112-236.dyn.grandenetworks.net) (Read error: Connection reset by peer)
[07:37:12] *** Joins: esther (~esther@24-155-112-236.dyn.grandenetworks.net)
[07:37:17] *** Joins: rama (~rama@c-24-130-92-222.hsd1.ca.comcast.net)
[07:39:58] *** Quits: luke-jr (~luke-jr@user/luke-jr) (Read error: Connection reset by peer)
[07:40:12] *** Joins: goppo (~goppo@user/goppo)
[07:40:49] *** Joins: kehn_ (quassel@2600:3c03::f03c:92ff:fe9a:ad08)
[07:40:50] *** Joins: syx (~sy@zm.is)
[07:40:51] *** Joins: Norkle_ (~norkle@admin.nasa-g0v.com)
[07:40:53] *** Joins: pudnutsS (mfisher@shell.themfishers.com)
[07:40:54] *** Joins: susam_ (~susam@user/susam)
[07:40:55] *** Joins: jant_ (~jant@pavlov.tiddo.net)
[07:40:56] *** Joins: Kraus_ (~quassel@075-141-246-250.res.spectrum.com)
[07:40:56] *** Joins: uhu- (~uhu@static.101.168.216.95.clients.your-server.de)
[07:40:57] *** Joins: H4Z3_ (~H4ZE@user/H4Z3)
[07:40:59] *** Joins: or4n (~or4n@gerbera.qkka.org)
[07:41:00] *** Joins: bloodElk_ (~bloodElk@user/bloodelk)
[07:41:00] *** Joins: tonitch_ (~tonitch@user/tonitch)
[07:41:05] *** Joins: sirpengi (~sirpengi@li587-65.members.linode.com)
[07:41:05] *** Joins: davef2 (dave@user/davef)
[07:41:09] *** Joins: ecrump_ (~ecrump@75.161.248.175)
[07:41:10] *** Joins: earthbre- (earthbreak@2600:3c03::f03c:91ff:fece:9070)
[07:41:11] *** Joins: sviermsung (owJr4HCxlX@user/s4msung)
[07:41:15] *** Joins: dante4431 (~dante443@2600:1702:7a0:9a40:6e62:6dff:fe5d:c340)
[07:41:15] *** Joins: burakcan- (~burakcank@has.arrived.and.is.ready-to.party)
[07:41:15] *** Joins: cloux_ (~cloux@user/cloux)
[07:41:19] *** Joins: anorthall_ (~anorthall@user/anorthall)
[07:41:20] *** Joins: mcint1 (mcint@pox.ocf.berkeley.edu)
[07:41:29] *** Quits: ivanf (~ivan@user/ivanf) (*.net *.split)
[07:41:29] *** Quits: uhu (~uhu@2a01:4f9:c010:1087::2) (*.net *.split)
[07:41:29] *** Quits: Kraus (~quassel@075-141-246-250.res.spectrum.com) (*.net *.split)
[07:41:29] *** Quits: veegee (~veegee@ipagstaticip-469c2903-2b07-6dc3-3bc2-98748da5ca77.sdsl.bell.ca) (*.net *.split)
[07:41:29] *** Quits: mfisher (mfisher@shell.themfishers.com) (*.net *.split)
[07:41:29] *** Quits: MrFixIt (~samurai_@c-73-75-104-200.hsd1.il.comcast.net) (*.net *.split)
[07:41:29] *** Quits: jrjsmrtn (~jrjsmrtn@ip-83-134-41-224.dsl.scarlet.be) (*.net *.split)
[07:41:29] *** Quits: fleabag (~sirpengi@li587-65.members.linode.com) (*.net *.split)
[07:41:29] *** Quits: tonitch (~tonitch@user/tonitch) (*.net *.split)
[07:41:29] *** Quits: Norkle (~norkle@admin.nasa-g0v.com) (*.net *.split)
[07:41:29] *** Quits: mcint (mcint@user/mcint) (*.net *.split)
[07:41:29] *** Quits: dante443 (~dante443@2600:1702:7a0:9a40:6e62:6dff:fe5d:c340) (*.net *.split)
[07:41:29] *** Quits: mcglk (~mcglk@131.191.49.120) (*.net *.split)
[07:41:29] *** Quits: Dotz0cat (~Dotz0cat@h244.35.188.173.dynamic.ip.windstream.net) (*.net *.split)
[07:41:29] *** Quits: trainsley69_ (~trainsley@c188-148-14-166.bredband.tele2.se) (*.net *.split)
[07:41:29] *** Quits: jant (~jant@pavlov.tiddo.net) (*.net *.split)
[07:41:29] *** Quits: infidel (~ecrump@75.161.248.175) (*.net *.split)
[07:41:29] *** Quits: s4msung (z4rgS71Nb1@user/s4msung) (*.net *.split)
[07:41:29] *** Quits: Titore (~Titore@user/titore) (*.net *.split)
[07:41:29] *** Quits: burakcank (~burakcank@has.arrived.and.is.ready-to.party) (*.net *.split)
[07:41:29] *** Quits: anorthall (~anorthall@user/anorthall) (*.net *.split)
[07:41:29] *** Quits: sy (~sy@zm.is) (*.net *.split)
[07:41:29] *** Quits: susam (~susam@user/susam) (*.net *.split)
[07:41:29] *** Quits: kehn (quassel@2600:3c03::f03c:92ff:fe9a:ad08) (*.net *.split)
[07:41:29] *** Quits: bloodElk (~bloodElk@user/bloodelk) (*.net *.split)
[07:41:29] *** Quits: cloux (~cloux@user/cloux) (*.net *.split)
[07:41:29] *** Quits: lawt (~lawt@2601:200:8101:f140:dea6:32ff:fea1:adf9) (*.net *.split)
[07:41:29] *** Quits: davef (dave@user/davef) (*.net *.split)
[07:41:29] *** Quits: earthbreaker (earthbreak@2600:3c03::f03c:91ff:fece:9070) (*.net *.split)
[07:41:29] *** Quits: H4Z3 (~H4ZE@user/H4Z3) (*.net *.split)
[07:41:29] *** Quits: or4n_ (~or4n@gerbera.qkka.org) (*.net *.split)
[07:41:29] *** cloux_ is now known as cloux
[07:41:29] *** Joins: Titore_ (~Titore@user/titore)
[07:41:29] *** davef2 is now known as davef
[07:41:33] *** Joins: MrFixIt_ (~samurai_@c-73-75-104-200.hsd1.il.comcast.net)
[07:41:33] *** Joins: Dotz0cat_ (~Dotz0cat@h244.35.188.173.dynamic.ip.windstream.net)
[07:41:47] *** Joins: lawt2 (~lawt@2601:200:8101:f140:dea6:32ff:fea1:adf9)
[07:41:58] *** Joins: jrjsmrtn (~jrjsmrtn@ip-83-134-41-224.dsl.scarlet.be)
[07:42:11] *** Quits: Xardas (~Xardas@149.233.51.127) (Quit: Client closed)
[07:42:24] *** burakcan- is now known as burakcank
[07:42:27] *** Dotz0cat_ is now known as Dotz0cat
[07:42:34] *** Joins: veegee_ (~veegee@ipagstaticip-469c2903-2b07-6dc3-3bc2-98748da5ca77.sdsl.bell.ca)
[07:42:44] *** bloodElk_ is now known as bloodElk
[07:42:54] *** Joins: trainsley69_ (~trainsley@c188-148-14-166.bredband.tele2.se)
[07:43:19] *** Quits: cdown (~cdown@cpe-98-15-154-102.hvc.res.rr.com) (Ping timeout: 250 seconds)
[07:43:43] *** Norkle_ is now known as Norkle
[07:44:44] *** Joins: luke-jr (~luke-jr@user/luke-jr)
[07:45:13] *** Quits: jero98772 (~jero98772@2800:484:1d80:d8ce:efcc:cbb3:7f2a:6dff) (Remote host closed the connection)
[07:46:29] *** Joins: mcglk (~mcglk@131.191.49.120)
[07:47:20] *** Quits: dodobrain (~dodobrain@user/dodobrain) (Remote host closed the connection)
[07:47:58] *** Joins: dodobrain (~dodobrain@user/dodobrain)
[07:50:12] *** Quits: luke-jr (~luke-jr@user/luke-jr) (Ping timeout: 240 seconds)
[07:50:40] *** Joins: lukedashjr (~luke-jr@user/luke-jr)
[07:51:05] *** paprika is now known as pepper
[07:51:45] *** lukedashjr is now known as luke-jr
[07:52:20] *** Quits: Barones (~Barones@user/Barones) (Ping timeout: 268 seconds)
[07:54:21] *** Quits: TheCat (~TheCat@user/z-cat) (Ping timeout: 250 seconds)
[07:55:34] *** Quits: ghost43 (~ghost43@gateway/tor-sasl/ghost43) (Remote host closed the connection)
[07:55:40] *** Quits: millido (~millido@84.210.150.128) (Read error: Connection reset by peer)
[07:56:16] *** Joins: ghost43 (~ghost43@gateway/tor-sasl/ghost43)
[07:56:19] <Indecisive> Hey guys what's "strict mode"?
[07:57:12] <deltab> in python?
[07:57:35] <Indecisive> Yeah, other people above mentioned a "strict mode", but I've never heard of such a thing in python.
[07:57:58] <deltab> me neither
[07:58:01] *** Quits: relight (~relight@user/relight) (Quit: Konversation terminated!)
[07:59:16] *** Joins: Korra (~textual@216.15.105.161)
[08:00:10] <SnoopJ> Indecisive, are you talking about a strict mode in a particular tool? E.g. mypy has a --strict option
[08:00:10] *** Joins: wyclif (~wyclif@user/wyclif)
[08:00:23] *** Joins: LAVBoy (~LAVBoy@85.249.46.8)
[08:00:57] *** Quits: raym (~raym@user/raym) (Ping timeout: 240 seconds)
[08:01:17] *** Quits: goppo (~goppo@user/goppo) (Ping timeout: 250 seconds)
[08:01:35] *** Joins: goppo (~goppo@user/goppo)
[08:01:44] <Indecisive> SnoopJ: Yeah that seems like it! I want to enforce static type checking in my files, and this "mypy" tool sounds just like what I need.
[08:02:09] <deltab> 08:40:51 < jinsun__> mypy has a stupid limitation though, if you don't take any parameters in __init__ and you run strict mode then it will ask you to annotate the return type as None
[08:02:51] *** Joins: raym (~raym@user/raym)
[08:03:20] <Indecisive> That's a minor sin at most, as long as there's a way for it to not freak out at me importing libraries it doesn't have type records on.
[08:03:29] *** Quits: Vornicus (~Vornicus@2603-8000-5d07-7ef0-f0f2-5be8-40b8-72bd.res6.spectrum.com) (Read error: Connection reset by peer)
[08:03:30] <SnoopJ> Indecisive, mypy's --strict is a short way to turn on a bunch of individual options. It makes the tool much pickier about the source you give it, i.e. it will complain about unannotated functions instead of just letting them sail through without much benefit from static analysis.
[08:04:32] <SnoopJ> you can definitely squelch complaints about missing type information per-library, I've done this for some generated (in a way that makes it hard to get annotations) bindings before
[08:04:51] *** Joins: relight (~relight@user/relight)
[08:05:02] <SnoopJ> and also just some stuff in the scipy stack that was missing type info at the time of that project, looking at its mypy.ini
[08:05:09] <Indecisive> And is mypy automatically ran as part of the python interpreter process, or is it something you run once when you are done editing your file, have it print something like "yeah ur good" into your terminal, and THEN you just run python
[08:05:14] <Indecisive> ?
[08:05:22] <Indecisive> (Forgot my question mark)
[08:05:23] <SnoopJ> It's a separate tool
[08:05:59] <SnoopJ> There are a variety of ways to make tools like this (there are others) part of a workflow that lets you regularly check your work, though
[08:06:19] <Indecisive> Does it do anything to manipulate the python source files itself (like typescript), or does it automatically make changes to the source (like a linter), or does it just send a pass/fail message?
[08:07:25] *** Quits: Techcable (~Techcable@user/Techcable) (Ping timeout: 240 seconds)
[08:07:35] <SnoopJ> Mypy just issues an error report (or warnings, or a friendly green "success!") for you
[08:08:09] <SnoopJ> There are other tools that perform some of this functionality, though. If you want a slightly shorter feedback loop, Pylance is a tool that can do static analysis and also integrates well into IDEs (VS Code in particular)
[08:09:03] *** Joins: rpkilby (~rpkilby@c-24-20-208-106.hsd1.or.comcast.net)
[08:09:11] *** Quits: raym (~raym@user/raym) (Ping timeout: 256 seconds)
[08:09:54] *** Joins: millido (~millido@84.210.150.128)
[08:10:50] <phy1729> You can also write your own stubs for libraries that lack them
[08:12:04] *** Quits: Korra (~textual@216.15.105.161) (Quit: Textual IRC Client: www.textualapp.com)
[08:13:06] <Indecisive> Ok, this all makes sense. Thank you; I shall now try this tool
[08:13:15] *** Joins: SaltHilStroller_ (~SaltHillS@206.223.160.26)
[08:13:41] *** Quits: relight (~relight@user/relight) (Quit: Konversation terminated!)
[08:13:43] *** Quits: ubert (~Thunderbi@p548c8d44.dip0.t-ipconnect.de) (Read error: Connection reset by peer)
[08:14:00] *** Joins: ubert (~Thunderbi@p200300ecdf158894255673a7c9121e6c.dip0.t-ipconnect.de)
[08:15:45] *** Quits: goppo (~goppo@user/goppo) (Ping timeout: 256 seconds)
[08:16:48] *** Quits: mrgz (~mrgz@201-42-0-191.dsl.telesp.net.br) (Quit: leaving)
[08:17:02] *** Quits: weuo3 (~weuo@101.230.253.179) (Quit: Client closed)
[08:17:52] *** Joins: relight (~relight@user/relight)
[08:19:14] *** Quits: Nahra (~user@static.161.95.99.88.clients.your-server.de) (Remote host closed the connection)
[08:20:54] *** Quits: Lando-SpacePimp (~Lando-Spa@user/lando-spacepimp) (Quit: They told me they fixed it. I trusted them to fix it. It's not my fault!)
[08:21:24] *** Quits: SaltHilStroller_ (~SaltHillS@206.223.160.26) (Ping timeout: 252 seconds)
[08:22:00] *** Quits: subopt (~subopt@2603-8081-2302-459a-f140-9a7b-333f-c9b1.res6.spectrum.com) (Quit: My MacBook has gone to sleep. ZZZzzzâ€¦)
[08:22:45] *** Quits: admin123 (~harrymore@37.120.216.194) (Ping timeout: 250 seconds)
[08:23:54] *** Quits: relight (~relight@user/relight) (Quit: Konversation terminated!)
[08:24:22] *** Joins: relight (~relight@user/relight)
[08:27:35] *** Joins: newpy_ (~newpy@c-73-229-15-176.hsd1.co.comcast.net)
[08:28:33] *** Derailed_ is now known as Derailed
[08:29:13] *** Joins: saroy (~Sandipan@45.249.73.234)
[08:29:48] *** Quits: newpy (~newpy@2601:280:4381:1390:2ddc:61c2:abe8:a959) (Ping timeout: 240 seconds)
[08:30:10] *** Quits: GreenLlama (~quassel@80-219-124-12.dclient.hispeed.ch) (Quit: http://quassel-irc.org - Chat comfortably. Anywhere.)
[08:31:11] *** Joins: raym (~raym@user/raym)
[08:31:29] *** Quits: ghost43 (~ghost43@gateway/tor-sasl/ghost43) (Remote host closed the connection)
[08:32:17] *** Joins: ghost43 (~ghost43@gateway/tor-sasl/ghost43)
[08:32:20] *** Joins: GreenLlama (~quassel@80-219-124-12.dclient.hispeed.ch)
[08:33:42] *** Joins: rama_ (~rama@c-24-130-92-222.hsd1.ca.comcast.net)
[08:33:46] *** Quits: Roey (~Roey@user/Roey) (Quit: Client exiting)
[08:36:51] *** Quits: alxndr_ (~alexander@ybti.net) (Remote host closed the connection)
[08:37:49] *** Quits: rama_ (~rama@c-24-130-92-222.hsd1.ca.comcast.net) (Ping timeout: 240 seconds)
[08:38:32] *** Quits: raym (~raym@user/raym) (Ping timeout: 240 seconds)
[08:40:24] *** Joins: alxndr (~alexander@ybti.net)
[08:40:29] *** Joins: raym (~raym@user/raym)
[08:40:35] *** Quits: bitdex (~bitdex@gateway/tor-sasl/bitdex) (Ping timeout: 240 seconds)
[08:42:01] *** Quits: cyphase (~cyphase@user/cyphase) (Ping timeout: 245 seconds)
[08:42:42] *** Joins: oaulakh (oaulakh@gateway/vpn/protonvpn/oaulakh)
[08:42:50] *** Joins: bitdex (~bitdex@gateway/tor-sasl/bitdex)
[08:48:29] *** Quits: rama (~rama@c-24-130-92-222.hsd1.ca.comcast.net) (Remote host closed the connection)
[08:48:35] *** Joins: nuclearg1 (~nucleargr@user/nuclearg1)
[08:48:46] <hams> guy's im using jupyer, i do a print(csvfile) but only get a few rows. how can i make it print more?
[08:48:55] *** Quits: bitdex (~bitdex@gateway/tor-sasl/bitdex) (Ping timeout: 240 seconds)
[08:50:12] *** Quits: nomic (~nomic@185.198.243.249) (Quit: Leaving)
[08:50:32] *** Joins: cyphase (~cyphase@user/cyphase)
[08:50:54] *** Joins: cyphase_ (~cyphase@2600:1700:7800:4680::48)
[08:51:08] <deltab> is there a button to show more?
[08:51:25] <BrenBarn> what kind of object is `csvfile`
[08:51:46] <mefistofeles> jupyter truncates the output in any case
[08:51:58] *** Quits: cyphase_ (~cyphase@2600:1700:7800:4680::48) (Client Quit)
[08:52:15] <mefistofeles> what you really want to do is to open the csvfile directly in the jupyter browser web interface, if you really want to check its full content
[08:52:30] <mefistofeles> I bet you can tweek some settings for jupyter to print the whole thing, but it's probably not the best idea in this case
[08:52:57] *** Quits: nuclearg1 (~nucleargr@user/nuclearg1) (Ping timeout: 240 seconds)
[08:53:19] *** Quits: luva (~luva@45.141.152.54) (Quit: Ping timeout (120 seconds))
[08:54:29] *** Quits: ghost43 (~ghost43@gateway/tor-sasl/ghost43) (Remote host closed the connection)
[08:54:50] *** Joins: ghost43 (~ghost43@gateway/tor-sasl/ghost43)
[08:55:39] *** Quits: tomasfarias (~tomasfari@user/tomasfarias) (Ping timeout: 256 seconds)
[08:56:03] *** Quits: moto (~moto@user/moto) (Ping timeout: 252 seconds)
[08:56:58] *** Joins: moto (~moto@user/moto)
[08:57:25] <hams> it's not the best ideal to print out 8000 rows lol, i just want it to be like command liek where i hit the enter key and it shows me a bit more
[08:59:02] *** Joins: luva (~luva@185.168.9.232)
[08:59:47] *** Joins: kdc (~kdc@196-210-1-81.dynamic.isadsl.co.za)
[09:00:00] *** Joins: bahamas (~lucian@84.232.140.158)
[09:00:23] <tusko> Python is the weakest of the lnguages
[09:00:25] <tusko> debate me'
[09:00:48] *** Quits: korg815 (~korg815@user/korg815) (Quit: WeeChat 2.8)
[09:02:12] *** Quits: ExpiredKebab (~sgreadly@2407:7000:89aa:b303:f939:34d5:7362:6adf) (Quit: My MacBook Air has gone to sleep. ZZZzzzâ€¦)
[09:02:27] *** Quits: [itchyjunk] (~itchyjunk@user/itchyjunk/x-7353470) (Ping timeout: 256 seconds)
[09:03:19] *** Joins: roxfan (~roxfan@2a02:a03f:a2be:4f00:6d0c:3ed5:99e5:49fe)
[09:04:06] *** Joins: rama (~rama@c-24-130-92-222.hsd1.ca.comcast.net)
[09:04:32] *** Quits: bahamas (~lucian@84.232.140.158) (Ping timeout: 240 seconds)
[09:06:16] *** Joins: [itchyjunk] (~itchyjunk@user/itchyjunk/x-7353470)
[09:06:23] <phaise> Might have to provide some basis for your assertion to avoid bein considered a low-effort troll.
[09:06:52] *** Quits: slowButPresent (~slowButPr@user/slowbutpresent) (Quit: leaving)
[09:06:54] *** Quits: zaquest (~notzaques@5.130.79.72) (Remote host closed the connection)
[09:06:56] *** Quits: squirrel (uid529456@user/squirrel) (Quit: Connection closed for inactivity)
[09:08:03] *** Joins: zaquest (~notzaques@5.130.79.72)
[09:08:32] *** Quits: rama (~rama@c-24-130-92-222.hsd1.ca.comcast.net) (Ping timeout: 240 seconds)
[09:09:02] *** Quits: djapo (~archangel@user/djapo) (Ping timeout: 240 seconds)
[09:09:21] *** Joins: Techcable (~Techcable@user/Techcable)
[09:09:56] *** Joins: Huitzilopochtli (~ronnie@45.64.220.51)
[09:11:54] <hams> that was very low effort
[09:17:24] *** Joins: lindsay (~lindsay@user/LindsayZhou)
[09:17:34] *** Quits: LAVBoy (~LAVBoy@85.249.46.8) (Ping timeout: 260 seconds)
[09:17:41] *** Quits: dre (~dre@2001:8003:c932:c301:c38d:68f8:7c3:7e20) (Quit: Leaving)
[09:20:14] *** Quits: elastic_dog (~elastic_d@2a01:118f:822:9c00:f583:aa51:9ad4:d4fb) (Ping timeout: 252 seconds)
[09:22:15] *** Joins: nuclearg1 (~nucleargr@user/nuclearg1)
[09:22:27] *** Quits: cthulchu (~Cthulchu@69-172-160-196.cable.teksavvy.com) (Ping timeout: 252 seconds)
[09:22:30] *** Quits: Thanatos (~Thanatos@105.112.16.248) (Read error: Connection reset by peer)
[09:22:45] *** Quits: pkapp (~pkapp@c-75-74-40-214.hsd1.fl.comcast.net) (Quit: ZNC 1.7.5+deb4 - https://znc.in)
[09:22:51] *** Quits: pepper (~pepper@user/pepper) (Ping timeout: 256 seconds)
[09:23:00] *** Joins: pkapp (~pkapp@c-75-74-40-214.hsd1.fl.comcast.net)
[09:25:17] *** Quits: dirigible (~dirigible@c-66-41-40-51.hsd1.mn.comcast.net) (Quit: Leaving)
[09:25:21] *** Quits: sreve (~quassel@p4ff44c5a.dip0.t-ipconnect.de) (Ping timeout: 250 seconds)
[09:25:29] *** Joins: elastic_dog (~elastic_d@2a01:118f:822:9c00:f583:aa51:9ad4:d4fb)
[09:25:38] *** Quits: xaltsc (~xaltsc@user/xaltsc) (Remote host closed the connection)
[09:26:00] *** Joins: sreve (~quassel@p4ff44c40.dip0.t-ipconnect.de)
[09:26:00] *** Quits: bloody (~bloody@user/bloody) (Quit: okluvyabubye)
[09:26:49] *** Quits: nuclearg1 (~nucleargr@user/nuclearg1) (Ping timeout: 256 seconds)
[09:27:57] *** Quits: ELFrederich (~ELFrederi@siemens-industry-software-inc-216-196-155-202.static.fuse.net) (Ping timeout: 256 seconds)
[09:28:32] *** Joins: bitdex (~bitdex@gateway/tor-sasl/bitdex)
[09:28:33] *** Quits: leshaste (~lesshaste@82-69-126-43.dsl.in-addr.zen.co.uk) (Read error: Connection reset by peer)
[09:28:44] *** Joins: leshaste (~lesshaste@82-69-126-43.dsl.in-addr.zen.co.uk)
[09:32:02] *** Quits: djhankb (~djhankb@208.113.164.68) (Remote host closed the connection)
[09:32:43] *** Joins: djhankb (~djhankb@208.113.164.68)
[09:33:00] *** Joins: foobaz212 (~foobaz212@152.37.103.80)
[09:33:13] *** Joins: dre (~dre@2001:8003:c932:c301:c38d:68f8:7c3:7e20)
[09:33:26] *** Quits: ghost43 (~ghost43@gateway/tor-sasl/ghost43) (Remote host closed the connection)
[09:33:41] *** Quits: revolve (~u0_a227@cpc100838-bagu15-2-0-cust672.1-3.cable.virginm.net) (Read error: Connection reset by peer)
[09:33:42] *** Quits: dre (~dre@2001:8003:c932:c301:c38d:68f8:7c3:7e20) (Remote host closed the connection)
[09:33:57] *** Quits: l4yer (~l4yer@user/l4yer) (Ping timeout: 256 seconds)
[09:34:14] *** Joins: ghost43 (~ghost43@gateway/tor-sasl/ghost43)
[09:34:50] *** Quits: Donitz (~Donitz4@88-115-149-215.elisa-laajakaista.fi) (Ping timeout: 260 seconds)
[09:35:24] *** Quits: nullroute (~nullroute@user/nullroute) (Ping timeout: 240 seconds)
[09:37:29] <hams> I have a persons.csv file that has a country column with diff countries. Im trying to define the real countries and having it delete the fake ones. https://bpa.st/UQAQ I'm not getting a return on the print, plz help
[09:37:35] *** Quits: foobaz212 (~foobaz212@152.37.103.80) (Ping timeout: 256 seconds)
[09:37:55] <hams> i imported pandas as pd
[09:38:20] *** Quits: spithash (~spithash@user/spithash) (Remote host closed the connection)
[09:38:31] *** Joins: spithash (~spithash@user/spithash)
[09:39:16] *** Joins: merijn (~merijn@c-001-001-001.client.esciencecenter.eduvpn.nl)
[09:40:04] *** Quits: erry (~erry@errietta.me) (Quit: WeeChat 2.5)
[09:41:16] <jinsun__> hams: by "delete" you mean set them to np.NaN?
[09:41:18] *** Joins: erry (~erry@errietta.me)
[09:41:35] <jinsun__> or do you want to remove those rows altogether
[09:42:07] <hams> no, you're correct, i want to set them as nan, so i can see what's happening
[09:43:12] <jinsun__> okay so data["Country"] = data["Country"].isin(VALID_COUNTRIES)
[09:43:24] <jinsun__> assuming the country column is called "Country"
[09:43:58] <jinsun__> ah no
[09:44:49] *** Joins: ghost43_ (~ghost43@gateway/tor-sasl/ghost43)
[09:45:39] <jinsun__> data.loc[~data["Country"].isin(VALID_COUNTRIES), "Country"] = np.NaN
[09:45:56] <jinsun__> the other way would just have given you True or False
[09:46:17] <hams> idk, it was working before :/
[09:46:28] *** Joins: nesoi (~Adium@60-241-111-113.static.tpgi.com.au)
[09:46:44] *** Joins: idontneedanick (~idontneed@h-85-24-184-105.A189.priv.bahnhof.se)
[09:46:52] <jinsun__> what was working before?
[09:46:56] *** Joins: l4yer (~l4yer@user/l4yer)
[09:47:20] *** Quits: dodobrain (~dodobrain@user/dodobrain) (Remote host closed the connection)
[09:47:49] *** Quits: ghost43 (~ghost43@gateway/tor-sasl/ghost43) (Remote host closed the connection)
[09:48:08] *** Joins: dodobrain (~dodobrain@user/dodobrain)
[09:49:45] *** Joins: RiFo (~RiFo@user/rifo)
[09:50:28] <hams> ohhhhhhh, wait i got it!!!
[09:51:05] <hams> data['country'] = data['country'].apply(check_country)
[09:51:45] <jinsun__> okay that works but it would be much slower than the .isin way I gave before
[09:51:59] <jinsun__> .apply is just looping over the data, not vectorized
[09:54:30] *** Joins: nuclearg1 (~nucleargr@user/nuclearg1)
[09:56:57] <hams> you're right.
[09:59:07] *** Quits: nuclearg1 (~nucleargr@user/nuclearg1) (Ping timeout: 256 seconds)
[10:05:18] *** Joins: revolve (~u0_a227@cpc100838-bagu15-2-0-cust672.1-3.cable.virginm.net)
[10:07:01] *** Quits: rpkilby (~rpkilby@c-24-20-208-106.hsd1.or.comcast.net) (Remote host closed the connection)
[10:07:57] *** Joins: sandb0y (~pirate@user/sandb0y)
[10:08:36] *** Joins: rpkilby (~rpkilby@c-24-20-208-106.hsd1.or.comcast.net)
[10:08:53] *** Joins: sagax (~sagax_nb@user/sagax)
[10:08:58] *** Joins: moog (~moog@98.97.82.161)
[10:10:51] *** Quits: moog_ (~moog@98.97.82.161) (Ping timeout: 252 seconds)
[10:13:00] *** Joins: stockholm (~Andreas@p200300d2c70c00004c35e0b4ad8e7716.dip0.t-ipconnect.de)
[10:13:03] *** Quits: rpkilby (~rpkilby@c-24-20-208-106.hsd1.or.comcast.net) (Ping timeout: 252 seconds)
[10:13:37] *** Quits: toulene (~toulene@user/toulene) (Ping timeout: 256 seconds)
[10:14:10] *** Quits: merijn (~merijn@c-001-001-001.client.esciencecenter.eduvpn.nl) (Ping timeout: 268 seconds)
[10:14:41] *** Joins: cthulchu (~Cthulchu@69-172-160-196.cable.teksavvy.com)
[10:15:43] *** Quits: zebrag (~chris@user/zebrag) (Quit: Konversation terminated!)
[10:15:54] *** Joins: toulene (~toulene@user/toulene)
[10:19:12] *** Joins: ExpiredKebab (~sgreadly@2407:7000:89aa:b303:b9b1:84a9:128d:44ec)
[10:20:21] *** Joins: hemstock (~hemstock@176.113.74.130)
[10:20:41] *** Joins: pepper (~pepper@user/pepper)
[10:21:09] *** Quits: ExpiredKebab (~sgreadly@2407:7000:89aa:b303:b9b1:84a9:128d:44ec) (Client Quit)
[10:21:26] *** Quits: hemstock (~hemstock@176.113.74.130) (Client Quit)
[10:21:53] *** Joins: ExpiredKebab (~sgreadly@2407:7000:89aa:b303:b9b1:84a9:128d:44ec)
[10:26:48] *** Quits: SallyAhaj (~SallyAhaj@user/sallyahaj) (Remote host closed the connection)
[10:27:25] *** Quits: pkapp (~pkapp@c-75-74-40-214.hsd1.fl.comcast.net) (Quit: ZNC 1.7.5+deb4 - https://znc.in)
[10:27:36] *** Joins: hemstock (~hemstock@146.70.27.242)
[10:27:44] *** Joins: jmd` (~user@de.cellform.com)
[10:27:54] *** Joins: cerill (~cerill@h-155-4-198-153.A785.priv.bahnhof.se)
[10:28:41] *** Joins: pkapp (~pkapp@2601:58c:c500:6900:1b6b:8479:90d3:db91)
[10:29:38] *** Joins: kts (~kts@103.73.237.225)
[10:31:10] *** Joins: SallyAhaj (~SallyAhaj@user/sallyahaj)
[10:31:50] *** Joins: marderIII (~MarderIII@86-88-74-111.fixed.kpn.net)
[10:32:16] *** Quits: skapata (~Skapata@user/skapata) (Remote host closed the connection)
[10:33:44] *** Joins: han-solo (~han-solo@user/han-solo)
[10:34:31] <hams> jinsun__, this is not writing the modifications to the csv? how can i make it do so?
[10:34:34] *** Quits: ghost43_ (~ghost43@gateway/tor-sasl/ghost43) (Remote host closed the connection)
[10:35:23] *** Joins: ghost43 (~ghost43@gateway/tor-sasl/ghost43)
[10:35:26] *** Quits: ghost43 (~ghost43@gateway/tor-sasl/ghost43) (Remote host closed the connection)
[10:35:38] <hams> i figured the .apply would make the modif
[10:36:05] *** Quits: oaulakh (oaulakh@gateway/vpn/protonvpn/oaulakh) (Quit: Leaving)
[10:36:32] *** Quits: ST47 (~ST47@wikimedia/st47) (Ping timeout: 240 seconds)
[10:37:00] *** Quits: tgamblin (~tgamblin@2607:fea8:c29f:f340:cfbf:d57d:b0f7:eb51) (Ping timeout: 240 seconds)
[10:38:44] *** Joins: vantage (~vantage@ip-193-121-152-141.dsl.scarlet.be)
[10:38:51] *** Quits: sandb0y (~pirate@user/sandb0y) (Quit: Time for another great escape)
[10:39:09] *** Joins: ghost43 (~ghost43@gateway/tor-sasl/ghost43)
[10:39:29] <BrenBarn> when you read a CSV into pandas there's no further connection between the DataFrame and the file on disk
[10:39:52] <BrenBarn> the way you should do it is read it in, do whatever manipulations you want, and then use `.to_csv` to write it out to a file again (the same file if you like)
[10:40:03] *** Joins: pvergain (~Thunderbi@2a01:e0a:223:690:a9ce:1cfd:6f06:91b5)
[10:41:29] *** Quits: pvergain (~Thunderbi@2a01:e0a:223:690:a9ce:1cfd:6f06:91b5) (Client Quit)
[10:42:03] <KnowledgeShark> greetings jinsun__ and BrenBarn
[10:42:45] *** Joins: tgamblin (~tgamblin@2607:fea8:c29f:f340:cfbf:d57d:b0f7:eb51)
[10:43:03] <KnowledgeShark> hams: I am a beginner also. I was working with Pandas and CSV's on python-forum.io and my thread can be found here with screenshots (using LibreCalc). I don't know if it can be of use to you; https://python-forum.io/thread-36005.html . Best of luck on your journey!
[10:44:13] <KnowledgeShark> hams: here is another: https://python-forum.io/thread-35939.html (This one shows how to send from CSV from wikipedia to MySQL).
[10:44:48] *** Quits: AlanMD (~AlanMD@86.124.30.89) (Remote host closed the connection)
[10:45:11] *** Joins: dreamon (~dreamon@pd9503ce4.dip0.t-ipconnect.de)
[10:45:22] *** Quits: dodobrain (~dodobrain@user/dodobrain) (Ping timeout: 240 seconds)
[10:45:25] *** Joins: AlanMD (~AlanMD@86.124.30.89)
[10:46:02] *** Joins: nuclearg1 (~nucleargr@user/nuclearg1)
[10:46:06] <jinsun__> hams: yes, as BrenBarn says, the DataFrame is not connected to the csv in any way, the csv was just input data to construct it, if you want to save those changes back to the csv you need to use .to_csv to make a  new csv out of the DataFrame, and you can decide to overwrite the existing file if you want
[10:47:12] *** Joins: pvergain (~Thunderbi@2a01:e0a:223:690:a9ce:1cfd:6f06:91b5)
[10:47:59] *** Joins: grooverman_ (~grooverma@152.250.149.217)
[10:48:45] *** Quits: Huitzilopochtli (~ronnie@45.64.220.51) (Quit: WeeChat 3.4)
[10:49:02] *** Joins: Xardas (~Xardas@149.233.51.127)
[10:50:35] *** Joins: ST47 (~ST47@wikimedia/st47)
[10:50:37] *** Quits: nuclearg1 (~nucleargr@user/nuclearg1) (Ping timeout: 240 seconds)
[10:50:41] *** Quits: cerill (~cerill@h-155-4-198-153.A785.priv.bahnhof.se) (Ping timeout: 256 seconds)
[10:51:00] *** Quits: grooverman (~grooverma@152.250.149.49) (Ping timeout: 240 seconds)
[10:51:49] *** Quits: moog (~moog@98.97.82.161) (Ping timeout: 256 seconds)
[10:51:54] <hams> KnowledgeShark, are u doing data science too?
[10:52:41] *** Joins: moog (~moog@98.97.82.161)
[10:53:56] *** Quits: pkapp (~pkapp@2601:58c:c500:6900:1b6b:8479:90d3:db91) (Quit: ZNC 1.7.5+deb4 - https://znc.in)
[10:54:11] *** Quits: Zeturic (~Orimendix@50.26.218.162) (Quit: Leaving)
[10:54:12] *** Joins: pkapp (~pkapp@c-75-74-40-214.hsd1.fl.comcast.net)
[10:56:15] *** Quits: GNUmoon (~GNUmoon@gateway/tor-sasl/gnumoon) (Ping timeout: 240 seconds)
[10:56:38] *** Joins: moog_ (~moog@98.97.82.161)
[10:57:23] <KnowledgeShark> hams: I am in the sense of dealing with large amounts of data and learning to parse it and store it and eventually present it.
[10:57:41] <hams> KnowledgeShark, https://python-graph-gallery.com/
[10:57:48] *** Joins: manti7 (~manti7@176.10.104.94)
[10:58:13] *** Quits: moog (~moog@98.97.82.161) (Ping timeout: 240 seconds)
[10:58:40] *** Quits: moog_ (~moog@98.97.82.161) (Read error: Connection reset by peer)
[10:59:30] *** Quits: califax (~califax@user/califx) (Remote host closed the connection)
[10:59:53] *** Joins: califax (~califax@user/califx)
[11:00:39] *** Quits: kts (~kts@103.73.237.225) (Ping timeout: 256 seconds)
[11:00:46] <KnowledgeShark> hams: Very cool. I'm doing a different type of large data. I have seen lots of graphs, plots, etc like your website shows.
[11:02:22] *** Quits: AlanMD (~AlanMD@86.124.30.89) (Quit: ZZZzzzâ€¦)
[11:02:24] *** Quits: Techcable (~Techcable@user/Techcable) (Remote host closed the connection)
[11:04:18] *** Joins: barry1 (~Thunderbi@222.129.35.38)
[11:04:37] *** Joins: Techcable (~Techcable@user/Techcable)
[11:05:52] *** Quits: whatsupdoc (uid509081@id-509081.hampstead.irccloud.com) (Quit: Connection closed for inactivity)
[11:06:25] *** Joins: Donitz (~Donitz4@88-115-149-215.elisa-laajakaista.fi)
[11:08:16] *** Quits: kujo (~kujo@188.166.12.52) (Ping timeout: 245 seconds)
[11:08:55] *** Quits: bitdex (~bitdex@gateway/tor-sasl/bitdex) (Ping timeout: 240 seconds)
[11:10:09] *** Joins: bitdex (~bitdex@gateway/tor-sasl/bitdex)
[11:11:06] *** Quits: jarthur_ (~jarthur@2603-8080-1540-002d-9cc7-b2df-6523-fde2.res6.spectrum.com) (Quit: jarthur_)
[11:11:46] *** Quits: brookesy66 (~will@203.185.205.85) (Quit: WeeChat 3.4.1)
[11:13:02] *** Quits: Enitin (~Enitin@82.180.145.230) (Ping timeout: 240 seconds)
[11:15:01] *** Quits: ExpiredKebab (~sgreadly@2407:7000:89aa:b303:b9b1:84a9:128d:44ec) (Quit: My MacBook Air has gone to sleep. ZZZzzzâ€¦)
[11:15:11] *** Quits: cthulchu (~Cthulchu@69-172-160-196.cable.teksavvy.com) (Ping timeout: 252 seconds)
[11:15:30] *** Joins: ExpiredKebab (~sgreadly@2407:7000:89aa:b303:b9b1:84a9:128d:44ec)
[11:18:02] *** Quits: somlis (~somlis@user/somlis) (Ping timeout: 240 seconds)
[11:18:38] *** Joins: ravan (~ravan@user/ravan)
[11:18:54] *** Joins: nuclearg1 (~nucleargr@user/nuclearg1)
[11:20:08] *** Quits: kickingvegas (~cchoi@c-73-170-198-193.hsd1.ca.comcast.net) (Quit: leaving)
[11:20:47] *** Quits: acidsys (~LSD@2a03:4000:55:d20::3) (Excess Flood)
[11:21:20] *** Joins: acidsys (~LSD@2a03:4000:55:d20::3)
[11:21:42] *** Joins: Enitin (~Enitin@82.180.145.223)
[11:23:28] *** jazzy2 is now known as jazzy
[11:23:31] *** Joins: upsala (~zcb@185.209.196.134)
[11:23:52] *** Quits: xrogaan (~xrogaan@user/xrogaan) (Quit: Leaving)
[11:23:53] *** Quits: nuclearg1 (~nucleargr@user/nuclearg1) (Ping timeout: 256 seconds)
[11:26:47] *** Quits: Batzy (~quassel@user/batzy) (Quit: https://quassel-irc.org - Chat comfortably. Anywhere.)
[11:27:20] *** Joins: msk (~Thunderbi@89.205.124.59)
[11:27:56] *** Joins: Batzy (~quassel@user/batzy)
[11:28:09] *** Quits: ravan (~ravan@user/ravan) (Quit: Leaving)
[11:28:24] *** Quits: Enitin (~Enitin@82.180.145.223) (Ping timeout: 252 seconds)
[11:28:32] *** Joins: Enitin (~Enitin@82.180.145.230)
[11:28:58] *** Quits: rindolf (~shlomif@inkscape/dev/shlomif) (Read error: Connection reset by peer)
[11:30:11] *** Quits: newpy_ (~newpy@c-73-229-15-176.hsd1.co.comcast.net) (Quit: Leaving)
[11:30:14] *** Joins: jpodivin (~jpodivin@cgnat44-pool1-237-44.poda.cz)
[11:30:39] *** Quits: jpodivin (~jpodivin@cgnat44-pool1-237-44.poda.cz) (Client Quit)
[11:31:10] *** Quits: Helithumper (~Helithump@c-76-25-170-226.hsd1.co.comcast.net) (Quit: ZNC 1.8.2 - https://znc.in)
[11:31:35] *** Joins: jpodivin (~jpodivin@cgnat44-pool1-237-44.poda.cz)
[11:31:59] *** Joins: slav0nic (slav0nic@python.su)
[11:32:06] *** Joins: Helithumper (~Helithump@c-76-25-170-226.hsd1.co.comcast.net)
[11:32:13] *** Quits: dreamon (~dreamon@pd9503ce4.dip0.t-ipconnect.de) (Ping timeout: 240 seconds)
[11:33:14] *** Quits: pkapp (~pkapp@c-75-74-40-214.hsd1.fl.comcast.net) (Quit: ZNC 1.7.5+deb4 - https://znc.in)
[11:33:16] *** Joins: foobaz212 (~foobaz212@152.37.103.80)
[11:34:35] *** Quits: [itchyjunk] (~itchyjunk@user/itchyjunk/x-7353470) (Read error: Connection reset by peer)
[11:35:05] *** Joins: pkapp (~pkapp@2601:58c:c500:6900:1c22:bc0a:3c9b:7e21)
[11:35:13] *** Quits: emerent (~quassel@p200300cd5743c3adba27ebfffed28a59.dip0.t-ipconnect.de) (Ping timeout: 256 seconds)
[11:35:19] *** Joins: emerent (~quassel@p200300cd5743c3f3ba27ebfffed28a59.dip0.t-ipconnect.de)
[11:35:30] *** Joins: mrwick (~mrwick@user/mrwick)
[11:36:44] *** Joins: kai (~kai@x50d24799.cust.hiper.dk)
[11:36:57] *** Quits: esther (~esther@24-155-112-236.dyn.grandenetworks.net) (Ping timeout: 240 seconds)
[11:37:25] *** Quits: Enitin (~Enitin@82.180.145.230) (Ping timeout: 240 seconds)
[11:37:40] *** Quits: ghost43 (~ghost43@gateway/tor-sasl/ghost43) (Remote host closed the connection)
[11:37:53] *** Joins: ghost43 (~ghost43@gateway/tor-sasl/ghost43)
[11:38:17] *** Quits: foobaz212 (~foobaz212@152.37.103.80) (Ping timeout: 256 seconds)
[11:39:35] *** Quits: bitdex (~bitdex@gateway/tor-sasl/bitdex) (Ping timeout: 240 seconds)
[11:40:21] *** Joins: ravan (~ravan@user/ravan)
[11:40:34] *** Joins: ccapndave (~ccapndave@xcpe-194-230-18-202.cgn.res.adslplus.ch)
[11:41:29] *** Quits: adiKt (uid472628@id-472628.tinside.irccloud.com) (Quit: Connection closed for inactivity)
[11:41:30] *** Joins: bitdex (~bitdex@gateway/tor-sasl/bitdex)
[11:42:03] <ccapndave> Hey!  I am totally new to Python.  I have a list of strings and am trying to get all the strings that end with either "battery" or "battery_level", apart from a few blacklisted entries which are in a different string.  I came up with this, but the blacklisting clause causes the result to contain everything.  Any idea why?  https://gist.github.com/ccapndave/f92a7714d9e9de528a2783354e598292
[11:42:08] *** Joins: kosh (~kosh@user/kosh)
[11:43:02] *** Joins: whatsupdoc (uid509081@id-509081.hampstead.irccloud.com)
[11:43:11] *** Quits: pkapp (~pkapp@2601:58c:c500:6900:1c22:bc0a:3c9b:7e21) (Quit: ZNC 1.7.5+deb4 - https://znc.in)
[11:44:16] <parv> ccapndave, What are your input strings?
[11:44:27] *** Joins: pkapp (~pkapp@2601:58c:c500:6900:1c22:bc0a:3c9b:7e21)
[11:44:30] <ccapndave> Its a big list of strings that comes from Home Assistant
[11:44:51] *** Quits: wyclif (~wyclif@user/wyclif) (Ping timeout: 256 seconds)
[11:44:55] <ccapndave> `[..., 'switch.backyard_rtsp_stream', 'binary_sensor.doorbell_global_motion_sensor', 'media_player.home_group', 'alarm_control_panel.t8010p23210648c7', 'select.doorbell_power_working_mode', 'select.doorbell_video_streaming_quality', 'select.doorbell_motion_detection_type', 'select.doorbell_charging_status', 'select.doorbell_chime_volume', 'select.backyard_power_working_mode', 'select.backyard_motion_detection_type',
[11:44:55] <ccapndave>  'select.backyard_charging_status', 'camera.doorbell', 'camera.backyard', 'media_player.googlehome6130', 'scene.window_holidays_joduba', ...]
[11:44:56] <ccapndave> etc
[11:45:06] *** Quits: kosh (~kosh@user/kosh) (Read error: Connection reset by peer)
[11:45:14] <ccapndave> This is what is in `state.names()`
[11:45:45] <parv> ccapndave, Post the code, input etc on the paste link mentioned in the topic.
[11:46:00] *** Parts: parv (~quass@user/parv) ()
[11:46:11] *** Joins: wyclif (~wyclif@user/wyclif)
[11:46:14] *** Joins: rindolf (~shlomif@inkscape/dev/shlomif)
[11:46:30] *** Joins: admin123 (~harrymore@ool-2f12f5b1.dyn.optonline.net)
[11:46:43] <cyphase> ccapndave, it would be good to create a completely self-contained example that shows the problem. use that example list instead of state.names(). show the issue clearly
[11:47:13] *** Joins: tobybl (~tobybl@227.192.115.87.dyn.plus.net)
[11:47:14] <cyphase> mentioning what you expect and what actually happens
[11:47:29] <ccapndave> Ok
[11:48:29] <cyphase> http://sscce.org/
[11:48:33] <cyphase> glancing at the code i'm not seeing where the problem would be yet
[11:49:00] <ccapndave> https://bpa.st/RRGQ
[11:49:09] <ccapndave> If you run this it returns the whole list
[11:49:20] *** Joins: kosh (~kosh@user/kosh)
[11:49:22] *** Joins: rpkilby (~rpkilby@c-24-20-208-106.hsd1.or.comcast.net)
[11:49:27] <ccapndave> It should return the list, minus "group.battery_status" and "persistent_notification.low_battery_alert"
[11:49:54] <ccapndave> If I remove the ` and (sensor not in ignore_sensors)` clause then it returns the list filtered by the regex
[11:49:55] <cyphase> for me it returns ['sensor.pixel_6_pro_battery_level', 'sensor.doorbell_battery', 'sensor.backyard_battery']
[11:50:05] <ccapndave> No!
[11:50:08] <cyphase> yes
[11:50:25] <cyphase> you ran that code and got a different output?
[11:50:25] *** Quits: ghost43 (~ghost43@gateway/tor-sasl/ghost43) (Remote host closed the connection)
[11:50:28] <ccapndave> I did
[11:50:31] <ccapndave> In a Jupyter notebook
[11:50:45] *** Quits: admin123 (~harrymore@ool-2f12f5b1.dyn.optonline.net) (Ping timeout: 250 seconds)
[11:50:57] *** Quits: wyclif (~wyclif@user/wyclif) (Ping timeout: 240 seconds)
[11:50:59] <cyphase> hmm.. try restarting the kernel first, then just run that one cell
[11:51:09] *** Joins: ghost43 (~ghost43@gateway/tor-sasl/ghost43)
[11:51:19] *** Joins: GNUmoon (~GNUmoon@gateway/tor-sasl/gnumoon)
[11:51:21] <ccapndave> Nope, it still doesn't work
[11:51:23] <ccapndave> This is madness
[11:51:32] <cyphase> which version of python?
[11:51:39] <cyphase> not that it should make a difference
[11:51:41] *** Joins: wyclif (~wyclif@user/wyclif)
[11:51:49] <ccapndave> I'm using this kernel - https://github.com/craigbarratt/hass-pyscript-jupyter
[11:52:01] <ccapndave> But this is basic Python, it shouldn't make a difference
[11:52:06] <ccapndave> Obviously I've done something silly somewhere..
[11:52:12] <cyphase> well, try in python :)
[11:52:28] <cyphase> paste it into the plain repl
[11:52:29] <ccapndave> Yeah, I just tried in a terminal and it returns correxctly
[11:52:35] *** Quits: bitdex (~bitdex@gateway/tor-sasl/bitdex) (Ping timeout: 240 seconds)
[11:52:41] <cyphase> we're making progress
[11:53:10] <ccapndave> Its definitely something to do with the kernel, because if I change to `ipykernel` it works
[11:53:16] *** Joins: luigibu (~luigi@93.176.153.88)
[11:53:31] <ccapndave> Maybe something I am using is a global variable or something like that?
[11:53:47] *** Quits: rpkilby (~rpkilby@c-24-20-208-106.hsd1.or.comcast.net) (Ping timeout: 250 seconds)
[11:54:11] <ccapndave> Maybe something to do with an old version of Python?  I know literally nothing about Python I'm afraid :(
[11:54:32] *** Quits: ttree (~ttree0@c-24-17-16-242.hsd1.wa.comcast.net) (Ping timeout: 240 seconds)
[11:54:46] *** Joins: bitdex (~bitdex@gateway/tor-sasl/bitdex)
[11:56:17] *** Quits: wyclif (~wyclif@user/wyclif) (Ping timeout: 240 seconds)
[11:56:18] *** Quits: pkapp (~pkapp@2601:58c:c500:6900:1c22:bc0a:3c9b:7e21) (Quit: ZNC 1.7.5+deb4 - https://znc.in)
[11:56:39] *** Joins: pkapp (~pkapp@c-75-74-40-214.hsd1.fl.comcast.net)
[11:57:11] *** Joins: wyclif (~wyclif@user/wyclif)
[11:58:42] <cyphase> ccapndave, you can try breaking up that code into smaller pieces to see which one is not working as you expect
[11:59:27] <cyphase> something weird is certainly going on
[12:00:33] <ccapndave> I tried replacing `and` with `&&1`
[12:00:40] <ccapndave> Oops - with `&&` - is that valid Python?
[12:00:56] <ccapndave> Cos it gives me an invalid Python error
[12:01:08] <ccapndave> `SyntaxError: invalid syntax (jupyter_14, line 6)`
[12:01:18] <BrenBarn> `&&` isn't valid Python
[12:01:33] <ccapndave> Ah
[12:01:34] <ccapndave> Ok
[12:01:35] *** Joins: otisolsen70 (~otisolsen@xd4ed80b5.cust.hiper.dk)
[12:01:36] <BrenBarn> when you say it "returns" the list what exactly do you mean?
[12:02:01] <ccapndave> I press "Alt-enter" and the new list is displayed as output under the cell
[12:02:31] <BrenBarn> I would try making a smaller list just to test it
[12:04:09] *** Joins: quhar (~quhar@192.162.148.48)
[12:04:40] *** Joins: csm3105 (~csm3105@143.red-83-48-84.staticip.rima-tde.net)
[12:06:11] <ccapndave> Even with a small list it doesn't seem to work
[12:07:13] <ccapndave> https://bpa.st/LH6Q <-- smaller non-working example
[12:08:26] *** Joins: EvilDMP (~textual@django/moderator/EvilDMP)
[12:08:42] *** Joins: Enitin (~Enitin@82.102.22.84)
[12:08:52] <ccapndave> The Python version is 3.9.9 which should be correct I suppose
[12:09:07] *** Quits: kostkon_ (~androirc@athedsl-393845.home.otenet.gr) (Remote host closed the connection)
[12:09:26] <BrenBarn> that returns an empty list for me both times
[12:09:33] <BrenBarn> presumably because none of the items contain `_battery`
[12:09:37] *** Joins: nuclearg1 (~nucleargr@user/nuclearg1)
[12:10:21] *** Joins: winterflaw (~winterfla@gateway/tor-sasl/winterflaw)
[12:10:34] <BrenBarn> you can try doing something like `[re.search('battery', sensor) for sensor in state_names]` and then `[sensor not in ignore_sensors for sensor in state_names]` to see what it thinks is true for each item
[12:11:09] *** Joins: kostkon_ (~androirc@2a02:587:a10f:c988:5455:7996:42cf:6660)
[12:11:26] <ccapndave> Good idea
[12:11:50] *** Joins: mIk3_08 (~Thunderbi@user/mik3-08/x-2852566)
[12:11:51] <ccapndave> It works correctly
[12:11:58] *** Joins: xaltsc (~xaltsc@user/xaltsc)
[12:12:04] <ccapndave> The boolean operator is causing the problem, it seems
[12:12:08] <ccapndave> Which is madness
[12:12:09] *** Quits: quhar (~quhar@192.162.148.48) (Quit: WeeChat 3.3)
[12:12:24] <ccapndave> `True and False == 0`
[12:12:26] <ccapndave> Is that expected?
[12:12:30] *** Joins: quhar (~quhar@192.162.148.48)
[12:12:35] <han-solo> yes
[12:12:40] <ccapndave> Ok
[12:12:44] <jinsun__> True and False is False and False == 0
[12:13:12] <ccapndave> No, but `True and False` actually shows `0` as the output in Jupyter
[12:13:23] <jinsun__> (that's actally valid python code too :D)
[12:13:33] <han-solo> 0 ?
[12:13:34] <BrenBarn> so then try `[re.search('battery', sensor) and sensor not in ignore_sensors for sensor in state_names]
[12:13:36] <ccapndave> Ha :)
[12:13:48] *** Joins: sudomann (~sudomann@98.219.211.182)
[12:13:57] <supakeen> Just because something is valid doesn't mean it should be written ðŸ™‚
[12:14:12] <ccapndave> I'll just start a new notebook
[12:14:12] <sudomann> can `str(foo)` produce the error ` nonetype is not iterable`?
[12:14:19] <supakeen> Yes.
[12:14:25] *** Quits: nuclearg1 (~nucleargr@user/nuclearg1) (Ping timeout: 268 seconds)
[12:14:26] <supakeen> As far as I know it can.
[12:14:28] <jinsun__> yeah I was writing english and then I noticed it is valid python also after typing it
[12:15:00] <supakeen> sudomann: It really depends on what the `__str__` of `foo` is.
[12:15:00] <sudomann> Ooookay small progress here, thank you
[12:15:01] <ccapndave> BrenBarn: That returns `[0, 0, True, True]`
[12:15:05] <supakeen> So it can be anything ðŸ™‚
[12:15:17] <BrenBarn> so it seems like something weird is going on with the booleans
[12:15:23] <ccapndave> It does
[12:15:33] <BrenBarn> try `type(True and False)`
[12:15:55] <ccapndave> `<class 'int'>`
[12:16:10] <sudomann> The system I am trying to debug is so unforgiving in its setup, I cant even get a usable trace for exceptions
[12:16:15] <ccapndave> It should be <class 'bool'>, eh?
[12:16:16] <supakeen> Did you, at some point, redefine `False` in this session or is this default ipython weirdness?
[12:16:28] <ccapndave> I'm using a custom kernel for Home Assistant
[12:16:30] <BrenBarn> yeah, it should be bool
[12:16:33] <ccapndave> Which is apparently a bit buggy
[12:16:39] <BrenBarn> I don't know what this HASS thing is, but, like is it really Python?
[12:16:39] <ccapndave> https://github.com/craigbarratt/hass-pyscript-jupyter
[12:16:55] <BrenBarn> that doesn't really explain what it is on the backend though
[12:16:57] <supakeen> ccapndave: what is `type(False)` then?
[12:17:03] <jinsun__> can't redefine True and False even in ipython at least with the default kernel
[12:17:04] <han-solo> supakeen: though can it ? i am getting only type error for those
[12:17:23] <han-solo> `class X:..def __str__(self):....return None` or return anything non stringy
[12:17:24] <supakeen> han-solo: you can do anything you want in `__str__`.
[12:17:32] <ccapndave> type(False) is <class 'bool'>
[12:17:46] <supakeen> `def str(self): for x in None: ...
[12:17:50] <supakeen> Etc.
[12:17:53] *** Joins: Ergo^ (~ergo@91.238.59.144)
[12:17:54] <han-solo> supakeen: ah...
[12:17:57] <ccapndave> type(True and True) == <class 'bool'>
[12:17:58] <han-solo> make sense
[12:18:00] <BrenBarn> like is "pyscript" actually *Python*, or is it some kind of thing that is mapping to some kind of Python emulator or something
[12:18:02] <supakeen> Maybe a bit tricky.
[12:18:10] <supakeen> ccapndave: Exceedingly weird.
[12:19:00] *** Quits: jmd` (~user@de.cellform.com) (Remote host closed the connection)
[12:19:31] <jinsun__> kinda feels like a buggy python emulator, probably written in JS
[12:19:38] <BrenBarn> yeah, that's what I'm thinking
[12:19:51] <BrenBarn> it's translating Python to something else and it's not doing it right
[12:20:09] <supakeen> Anyways, I missed the initial problem this is causing, `0` is likely still Falsey ðŸ™‚
[12:20:12] <BrenBarn> out of curiosity try `bool(0)`
[12:20:20] <BrenBarn> yeah
[12:21:26] <ccapndave> bool(0) is False
[12:21:31] <BrenBarn> hmmm
[12:21:52] <BrenBarn> so try doing your list comprehension with `if False` and then `if True and False` as the condition
[12:21:55] <ccapndave> So it actually looks like this custom kernel is implementing a parser and evaluator
[12:22:01] <ccapndave> I have no idea why but I'm sure there is a good reason
[12:22:02] <ccapndave> https://github.com/custom-components/pyscript/blob/master/custom_components/pyscript/eval.py#L1678-L1692
[12:22:06] <ccapndave> Does this look correct?
[12:22:18] *** Joins: audiobirb (~audio@user/audio)
[12:23:25] *** Quits: lumgwada_ (~lumgwada@101.181.27.168) (Ping timeout: 240 seconds)
[12:23:26] *** Joins: palasso (~palasso@user/palasso)
[12:23:28] *** Joins: amogorkon (~amogorkon@user/amogorkon)
[12:24:09] *** Joins: joeyzheng5403_ (~kerwin@124.126.18.162)
[12:24:22] *** Joins: jdmark2 (~jdmark@user/jdmark)
[12:24:54] <jinsun__> if this_val == 0:  return 0
[12:25:03] <jinsun__> I guess that's what turns False to 0
[12:25:50] <BrenBarn> it looks plausible but the fact that it exists at all is disturbing
[12:26:08] *** Quits: NealRame (~a@89.187.163.193) (Quit: Konversation terminated!)
[12:26:09] <ccapndave> They have obviously put a lot of effort into writing this, so I guess there is a good reason for it
[12:26:16] <BrenBarn> I mean this kind of confirms to me that it's not actually running Python, it's doing some kind of emulation
[12:26:21] <ccapndave> Yeqh
[12:26:30] <ccapndave> I had no idea till I just looked at it
[12:26:41] <ccapndave> It seems very strange
[12:26:57] *** Quits: fflam (~mdt@ip72-220-60-77.sd.sd.cox.net) (Ping timeout: 240 seconds)
[12:27:59] *** Quits: jdmark (~jdmark@user/jdmark) (Ping timeout: 268 seconds)
[12:28:01] *** Joins: fef (~thedawn@user/thedawn)
[12:28:18] *** Joins: AlanMD (~AlanMD@193.105.140.131)
[12:28:41] <BrenBarn> I see there's a commit message "and more happiness still"
[12:28:50] *** Quits: joeyzheng5403_ (~kerwin@124.126.18.162) (Quit: Konversation terminated!)
[12:29:28] *** Joins: joeyzheng5403_ (~kerwin@124.126.18.162)
[12:29:34] <ccapndave> Cute
[12:29:50] *** Quits: joeyzheng5403_ (~kerwin@124.126.18.162) (Max SendQ exceeded)
[12:30:23] *** Joins: joeyzheng5403_ (~kerwin@124.126.18.162)
[12:30:44] *** Joins: tapeworm (~tapeworm@188.168.50.119)
[12:32:48] *** Joins: ghost43_ (~ghost43@gateway/tor-sasl/ghost43)
[12:32:59] *** Joins: grooverman (~grooverma@152.250.149.217)
[12:33:00] *** Joins: KimK (~KimK@2600:8803:740b:4700:4a5b:39ff:fe0b:57d2)
[12:33:04] *** Joins: Forsaken87 (~quassel@ip-037-201-193-116.um10.pools.vodafone-ip.de)
[12:33:13] <ccapndave> Well, I made an issue in the repository and hopefully they can sort it out
[12:33:13] *** Quits: ghost43 (~ghost43@gateway/tor-sasl/ghost43) (Remote host closed the connection)
[12:33:16] <ccapndave> Thanks everyone for your help
[12:33:33] <csm3105> hi guys, regarding this tutorial https://fastapi.tiangolo.com/tutorial/sql-databases/#create-a-sessionlocal-class in the section where cerates the local session class they pass as parameter autocommit and autoflush
[12:33:48] <csm3105> I took a look at it, and if I understand correctly, flush() communicates a series of operations to the database (like insert, update or delete)
[12:33:54] <BrenBarn> It seems there are some other issues related to emulation failures
[12:33:54] <BrenBarn> https://github.com/custom-components/pyscript/issues/263
[12:34:03] <BrenBarn> https://github.com/custom-components/pyscript/issues/236
[12:34:03] <jinsun__> also weird that it is written in python, if it was JS or some other language it would have made more sense, like python runtime itself is not available wherever it is supposed to run
[12:34:13] *** Quits: grooverman_ (~grooverma@152.250.149.217) (Ping timeout: 240 seconds)
[12:34:29] <csm3105> And the database keeps them as pending operations in a transaction, so these changes are not visible until it receives a commit...correct me if I'v sais something wrong please
[12:34:49] <csm3105> I still don't understand why in this example both values are set to false, according to the sqlalchemy documentation the default value is true
[12:34:58] <supakeen> csm3105: It's honestly close enough.
[12:35:19] <ccapndave> jinsun__ It runs in home assistant which itself is written in Python
[12:35:39] <ccapndave> So the platform (which can be anything but is usually a Rasberry Pi) can definitely run it
[12:35:40] <BrenBarn> yeah it's weird that it seems to be Python implemented in Python
[12:35:48] <ccapndave> Very weird
[12:35:53] <BrenBarn> I also see this buried in the documentation: https://hacs-pyscript.readthedocs.io/en/stable/reference.html#language-limitations
[12:36:12] <csm3105> what would it change in the behavior of the database to do it one way or the other?
[12:36:35] <supakeen> csm3105: Specifically, flushing means 'put all changes in objects in the current session into the database transaction', and committing means, well, committing.
[12:36:51] <supakeen> Nothing much, a commit already flushes.
[12:37:09] <supakeen> There's some tidbits about shared sessions (don't do that).
[12:37:13] <ccapndave> BrenBarn: So maybe the whole thing is to make an async version of Python?
[12:37:53] *** Joins: mexen_wfh (uid495612@id-495612.ilkley.irccloud.com)
[12:38:12] *** Joins: ayustae (Thunderbir@gateway/vpn/protonvpn/ayustae)
[12:38:24] <supakeen> I usually have those two set because I like the explicitness of only having to think about sending changes to the database server on `.commit`.
[12:38:58] *** Joins: dreamon (~dreamon@ppp-88-217-83-128.dynamic.mnet-online.de)
[12:39:24] <supakeen> Also I believe on some databases transactions that do not get committed linger.
[12:39:46] <BrenBarn> maybe yeah
[12:39:54] <BrenBarn> seems like a pretty fraught enterprise
[12:40:23] *** Joins: tapeworm116 (~tapeworm@188.168.50.119)
[12:41:45] *** Quits: ccapndave (~ccapndave@xcpe-194-230-18-202.cgn.res.adslplus.ch) (Quit: My MacBook has gone to sleep. ZZZzzzâ€¦)
[12:42:59] <csm3105> supakeen, ok, I see...but why in this example assigns False to the status of these attributes, I mean...what is the purpose? is it well done?
[12:44:35] *** Quits: tapeworm (~tapeworm@188.168.50.119) (Ping timeout: 256 seconds)
[12:45:22] *** Joins: Jonopoly (~Jonopoly@user/jonopoly)
[12:47:22] *** Joins: grooverman_ (~grooverma@152.250.149.49)
[12:50:41] *** Joins: chele (~chele@user/chele)
[12:50:53] *** Quits: grooverman (~grooverma@152.250.149.217) (Ping timeout: 252 seconds)
[12:54:37] *** Quits: Betal (~Betal@user/betal) (Quit: WeeChat 3.4.1)
[12:55:21] *** Quits: sawk (~quassel@151.81.118.116) (Ping timeout: 256 seconds)
[12:59:31] *** Quits: ghost43_ (~ghost43@gateway/tor-sasl/ghost43) (Remote host closed the connection)
[12:59:40] *** Quits: sokan (~sokan@85.73.229.195) (Quit: Reality.is.a.lie)
[12:59:51] *** Joins: ghost43 (~ghost43@gateway/tor-sasl/ghost43)
[13:00:51] *** Joins: cuanim (~cuanim@user/cuanim)
[13:01:15] *** Joins: JoeyZheng[m] (~joeyzheng@2001:470:69fc:105::1:e20a)
[13:01:17] *** Quits: jab416171 (~jab416171@c-67-161-208-65.hsd1.ut.comcast.net) (Ping timeout: 240 seconds)
[13:02:02] *** Joins: nuclearg1 (~nucleargr@user/nuclearg1)
[13:03:03] *** Quits: csm3105 (~csm3105@143.red-83-48-84.staticip.rima-tde.net) (Ping timeout: 256 seconds)
[13:03:10] *** Quits: mentallyinspired (~mentallyi@h-85-24-146-18.A400.priv.bahnhof.se) (Remote host closed the connection)
[13:03:28] *** Joins: mentallyinspired (~mentallyi@h-85-24-146-18.A400.priv.bahnhof.se)
[13:04:55] *** Quits: Xardas (~Xardas@149.233.51.127) (Quit: Client closed)
[13:04:59] *** Quits: hams (~hams@user/hams) (Ping timeout: 256 seconds)
[13:06:37] *** Quits: nuclearg1 (~nucleargr@user/nuclearg1) (Ping timeout: 240 seconds)
[13:07:53] *** Joins: merijn (~merijn@c-001-001-001.client.esciencecenter.eduvpn.nl)
[13:08:13] *** Quits: sudomann (~sudomann@98.219.211.182) (Ping timeout: 240 seconds)
[13:08:29] *** Joins: jab416171 (~jab416171@c-67-161-208-65.hsd1.ut.comcast.net)
[13:09:13] *** Joins: sudomann (~sudomann@98.219.211.182)
[13:12:44] *** Joins: moog (~moog@98.97.82.161)
[13:12:45] *** Joins: rendar (~rendar@user/rendar)
[13:13:48] *** Joins: nomic (~nomic@185.198.243.249)
[13:14:38] *** Joins: storm_ (~storm@88.242.225.100)
[13:16:51] *** Joins: csm3105 (~csm3105@143.red-83-48-84.staticip.rima-tde.net)
[13:17:26] *** Quits: sudomann (~sudomann@98.219.211.182) (Ping timeout: 245 seconds)
[13:18:17] *** Quits: wyclif (~wyclif@user/wyclif) (Ping timeout: 240 seconds)
[13:18:48] *** Joins: Pickchea (~private@user/pickchea)
[13:19:25] *** Joins: wyclif (~wyclif@user/wyclif)
[13:19:27] *** Joins: somlis (~somlis@user/somlis)
[13:21:43] *** Joins: MajorBiscuit (~MajorBisc@wlan-145-94-218-48.wlan.tudelft.nl)
[13:21:49] *** Joins: jstein (~jstein@gentoo/developer/jstein)
[13:23:24] *** Joins: zeenk (~zeenk@2a02:2f04:a110:7d00:2011:cfed:bad7:3c94)
[13:24:10] *** Joins: BASHitup (~richard@user/yippeekaiyay)
[13:24:12] *** Quits: wyclif (~wyclif@user/wyclif) (Ping timeout: 240 seconds)
[13:24:12] *** Quits: mon_aaraj (~MonAaraj@user/mon-aaraj/x-4416475) (Ping timeout: 240 seconds)
[13:24:37] *** Joins: vladoski (~vladoski@2001:b07:add:d406:6b4d:394e:5161:d4b0)
[13:24:54] *** Joins: wyclif (~wyclif@user/wyclif)
[13:25:35] *** Quits: ghost43 (~ghost43@gateway/tor-sasl/ghost43) (Ping timeout: 240 seconds)
[13:26:00] *** Quits: MajorBiscuit (~MajorBisc@wlan-145-94-218-48.wlan.tudelft.nl) (Client Quit)
[13:26:09] *** Joins: MajorBiscuit (~MajorBisc@wlan-145-94-218-48.wlan.tudelft.nl)
[13:26:25] *** Joins: mon_aaraj (~MonAaraj@user/mon-aaraj/x-4416475)
[13:26:37] *** Joins: ghost43 (~ghost43@gateway/tor-sasl/ghost43)
[13:27:14] *** Joins: sawk (~quassel@78.6.80.66)
[13:27:36] *** Quits: gr33n7007h (~gr33n7007@user/gr33n7007h) (Quit: WeeChat 3.4.1)
[13:28:22] *** Joins: PJBoy (~PJBoy@user/pjboy)
[13:29:53] <kaiser> So last night I wasn't able to figure out how to save my input from a keysequenceEdit box in PyQT, but I found a gist of code that much more closely achieves the behaviour I was initially trying to get: https://pastebin.com/fh2nsUGQ
[13:30:08] *** Quits: interestingname (~throwaway@2001:470:69fc:105::1:6560) (Quit: You have been kicked for being idle)
[13:30:34] <kaiser> I was able to change it to log to a file
[13:30:50] *** Joins: interestingname (~throwaway@2001:470:69fc:105::1:6560)
[13:31:03] <kaiser> but an issue I am facing is that this does not open as a Dialog window, how could I fix that?
[13:31:11] *** Joins: Csm319_ (~csm3105@143.red-83-48-84.staticip.rima-tde.net)
[13:31:41] *** Quits: EvilDMP (~textual@django/moderator/EvilDMP) (Quit: My MacBook has gone to sleep. ZZZzzzâ€¦)
[13:33:05] *** Quits: han-solo (~han-solo@user/han-solo) (Ping timeout: 256 seconds)
[13:33:55] *** Joins: cm315 (~csm3105@143.red-83-48-84.staticip.rima-tde.net)
[13:34:12] *** Joins: schumaml (~schumaml@dslb-178-007-201-036.178.007.pools.vodafone-ip.de)
[13:34:27] *** Quits: csm3105 (~csm3105@143.red-83-48-84.staticip.rima-tde.net) (Ping timeout: 256 seconds)
[13:34:32] *** Joins: foobaz212 (~foobaz212@152.37.103.80)
[13:35:58] *** Joins: shad (~shad@user/shad)
[13:37:03] *** Quits: Csm319_ (~csm3105@143.red-83-48-84.staticip.rima-tde.net) (Ping timeout: 256 seconds)
[13:37:43] *** Joins: herjazz (~herjazz@p10295192-ipngn22201marunouchi.tokyo.ocn.ne.jp)
[13:38:12] *** Quits: gbristol (gbristol@hermes.gbristol.net) (Ping timeout: 252 seconds)
[13:38:17] *** Quits: kostkon_ (~androirc@2a02:587:a10f:c988:5455:7996:42cf:6660) (Ping timeout: 268 seconds)
[13:38:36] *** Quits: ghost43 (~ghost43@gateway/tor-sasl/ghost43) (Remote host closed the connection)
[13:38:38] *** Joins: gbristol (gbristol@hermes.gbristol.net)
[13:38:41] *** Quits: rhrf (~mr@144.202.95.227) (Ping timeout: 245 seconds)
[13:39:02] *** Joins: vimal (~vimal@2a02:a210:9641:8780:c1c8:67bc:35b:91da)
[13:39:18] *** Joins: ghost43 (~ghost43@gateway/tor-sasl/ghost43)
[13:39:33] *** Quits: foobaz212 (~foobaz212@152.37.103.80) (Ping timeout: 256 seconds)
[13:39:42] *** Joins: rhrf (~mr@144.202.95.227)
[13:39:49] *** Quits: chenqisu1 (~chenqisu1@183.217.201.47) (Quit: Leaving)
[13:40:41] *** Quits: Axy (~Axy@user/axy) (Ping timeout: 256 seconds)
[13:41:13] *** Joins: Axy (~Axy@user/axy)
[13:42:11] *** Joins: edocod (~edocod@user/edocod)
[13:43:28] *** Quits: edocod (~edocod@user/edocod) (Client Quit)
[13:44:05] *** Joins: kostkon_ (~androirc@2.142.66.94.static.otenet.gr)
[13:44:11] *** Joins: edocod_ (~edocod@84-33-124-93.static.eolo.it)
[13:44:24] *** Joins: EvilDMP (~textual@django/moderator/EvilDMP)
[13:44:35] *** Joins: gulzar (~gulzar@49.206.240.149)
[13:45:10] *** Quits: kostkon_ (~androirc@2.142.66.94.static.otenet.gr) (Read error: Connection reset by peer)
[13:45:14] *** Joins: flower_ (~archie@217-123-218-6.cable.dynamic.v4.ziggo.nl)
[13:45:25] *** Joins: kostkon_ (~androirc@2.142.66.94.static.otenet.gr)
[13:47:47] *** Joins: maxzor (~maxzor@2a01cb04054faa007972c534aff021b8.ipv6.abo.wanadoo.fr)
[13:47:49] *** Quits: tobybl (~tobybl@227.192.115.87.dyn.plus.net) (Remote host closed the connection)
[13:48:38] *** Parts: edocod_ (~edocod@84-33-124-93.static.eolo.it) ()
[13:48:40] *** dcaro_away is now known as dcaro
[13:48:46] *** Joins: foxo (~edocod@84-33-124-93.static.eolo.it)
[13:50:08] *** Joins: gurkenglas (~gurkengla@dslb-178-012-018-212.178.012.pools.vodafone-ip.de)
[13:50:21] <gulzar> Hi. I have a string with 4 values separated with '|' and if another group is present in the same string , it is separated with '---' and again 4 values with '|'.Â  simply %4==0.Â  I need to separate this into tuple/list of lists OR put them into dict with keys, either way. Each containing 4 elements. looks like this https://bpa.st/TFTQÂ  . Any
[13:50:21] <gulzar> ideas please
[13:50:32] *** Quits: Furai (~Furai@furai.pl) (Quit: WeeChat 3.4.1)
[13:50:51] *** Quits: pkapp (~pkapp@c-75-74-40-214.hsd1.fl.comcast.net) (Quit: ZNC 1.7.5+deb4 - https://znc.in)
[13:51:16] *** Joins: ice9 (~ice9@user/ice9)
[13:51:18] *** Joins: paul424 (~tom@ip-5-172-234-96.multi.internet.cyfrowypolsat.pl)
[13:51:49] *** Joins: rsx (~dummy@ppp-188-174-131-150.dynamic.mnet-online.de)
[13:51:53] *** Joins: gentooclimax (~gentoocli@81-64-65-213.rev.numericable.fr)
[13:53:13] *** Joins: pkapp (~pkapp@2601:58c:c500:6900:1c22:bc0a:3c9b:7e21)
[13:53:25] *** Quits: cuanim (~cuanim@user/cuanim) (Ping timeout: 240 seconds)
[13:53:26] *** Joins: gitesh (uid423739@id-423739.ilkley.irccloud.com)
[13:53:34] *** Joins: mav`rik (~unknown@ec2-54-171-126-99.eu-west-1.compute.amazonaws.com)
[13:53:41] *** Joins: Furai (~Furai@furai.pl)
[13:54:18] *** Quits: foxo (~edocod@84-33-124-93.static.eolo.it) (Quit: Leaving)
[13:55:18] *** Joins: revilaika (~revilaika@151.144.8.109.rev.sfr.net)
[13:56:05] *** Joins: nuclearg1 (~nucleargr@user/nuclearg1)
[13:56:17] *** Joins: cuanim (~cuanim@31.215.207.104)
[13:56:17] *** Quits: cuanim (~cuanim@31.215.207.104) (Changing host)
[13:56:17] *** Joins: cuanim (~cuanim@user/cuanim)
[13:56:59] *** Joins: bahamas (~lucian@86.120.77.115)
[13:57:30] <supakeen> I mean, a double split?
[13:57:35] <supakeen> What have you tried that doesn't work?
[13:57:36] *** Joins: purple_cthulhu (~rax@185.108.96.17)
[13:58:01] *** Joins: pretty_dumm_guy (trottel@gateway/vpn/protonvpn/prettydummguy/x-88029655)
[13:59:26] <wyre> how django links javascript with python backend? websockets? ðŸ¤”
[13:59:30] <gulzar> supakeen: I did first split on --- to get a list of string. loop over this list and split each element by | and add to dict
[13:59:41] <supakeen> And what's wrong with that?
[14:00:01] <gulzar> wyre: you can add js to template directly or using {% static %}
[14:00:18] <gulzar> supakeen: it's double the work. I was hoping for some python magic :)
[14:00:37] *** Quits: nuclearg1 (~nucleargr@user/nuclearg1) (Ping timeout: 240 seconds)
[14:00:59] <supakeen> You can write an actual parser if you only want to go over it once, that'd probably be more work.
[14:01:14] *** Quits: slav0nic (slav0nic@python.su) (Remote host closed the connection)
[14:04:13] *** Quits: mspe (~user@tilde.team/user/mspe) (Quit: WeeChat 2.8)
[14:04:16] <mav`rik> (suppresses smirk) You could always use regex...
[14:04:18] *** Joins: sudomann (~sudomann@98.219.211.182)
[14:05:17] <gulzar> mav`rik : I did re.split() , but can't divide the data into 4 equal tuples/lists
[14:05:48] *** Joins: AquaL1te (~AquaL1te@user/aqual1te)
[14:05:49] *** Quits: pkapp (~pkapp@2601:58c:c500:6900:1c22:bc0a:3c9b:7e21) (Ping timeout: 240 seconds)
[14:06:00] <mav`rik> gulzar: do you have a link to the data and your current code somewhere (sorry, wasn't here early enough to see it before)
[14:06:02] *** Quits: CrazyEddy (crazyed@2603:300a:1d10:c000:de4a:3eff:fe88:cc5f) (Ping timeout: 240 seconds)
[14:06:17] <gulzar> mav`rik https://bpa.st/TFTQ
[14:06:26] <gulzar> the code I changed :(
[14:07:33] *** Quits: leshaste (~lesshaste@82-69-126-43.dsl.in-addr.zen.co.uk) (Read error: Connection reset by peer)
[14:07:44] *** Joins: leshaste (~lesshaste@82-69-126-43.dsl.in-addr.zen.co.uk)
[14:07:55] *** Quits: BASHitup (~richard@user/yippeekaiyay) (Quit: WeeChat 2.8)
[14:09:14] *** Quits: Gustavo6046 (~Gustavo60@user/gustavo6046) (Quit: I'm a quit message virus. Please replace your old line with this line and help me take over the world. <screw you aloo_shu my old line was better and more creative!>)
[14:09:35] *** Quits: Pickchea (~private@user/pickchea) (Ping timeout: 256 seconds)
[14:10:05] *** Quits: vladoski (~vladoski@2001:b07:add:d406:6b4d:394e:5161:d4b0) (Ping timeout: 252 seconds)
[14:13:03] *** Joins: plastico (~plastico@neomutt/plastico)
[14:15:56] *** gentooclimax is now known as climax
[14:16:54] *** climax is now known as gentooclimax
[14:18:23] <mav`rik> gulzar: https://bpa.st/GXRQ
[14:19:04] <gulzar> mav`rik Ah, I forgot about this reÂ Â  . Thank You
[14:19:22] <mav`rik> But, fair warning, regular expressions are a perversion. split is _fine_ just use regular str.split, not re.split
[14:20:06] *** Joins: LucaTM (~LucaTM@user/lucatm)
[14:20:23] <gulzar> mav`rik : yes yes
[14:20:57] *** Joins: dvx (~dvx@5.181.92.64)
[14:21:05] *** Quits: mentallyinspired (~mentallyi@h-85-24-146-18.A400.priv.bahnhof.se) (Remote host closed the connection)
[14:21:46] *** Joins: pkapp (~pkapp@c-75-74-40-214.hsd1.fl.comcast.net)
[14:22:37] *** Joins: mentallyinspired (~mentallyi@h-85-24-146-18.A400.priv.bahnhof.se)
[14:23:04] *** Quits: mentallyinspired (~mentallyi@h-85-24-146-18.A400.priv.bahnhof.se) (Remote host closed the connection)
[14:25:06] *** Quits: mcglk (~mcglk@131.191.49.120) (Ping timeout: 260 seconds)
[14:25:38] *** Joins: mentallyinspired (~mentallyi@h-85-24-146-18.A400.priv.bahnhof.se)
[14:25:52] *** Quits: whatsupdoc (uid509081@id-509081.hampstead.irccloud.com) (Quit: Connection closed for inactivity)
[14:26:35] *** Quits: Enitin (~Enitin@82.102.22.84) (Ping timeout: 256 seconds)
[14:27:22] *** Joins: Enitin (~Enitin@82.180.145.230)
[14:28:08] *** Joins: mcglk (~mcglk@131.191.49.120)
[14:29:00] *** Quits: wyclif (~wyclif@user/wyclif) (Ping timeout: 240 seconds)
[14:29:46] *** Quits: jazzy (~jaziz@user/jaziz) (Ping timeout: 260 seconds)
[14:29:53] *** Joins: wyclif (~wyclif@user/wyclif)
[14:29:59] *** Quits: txtsd (~txtsd@user/txtsd) (Ping timeout: 256 seconds)
[14:30:47] *** Quits: ghost43 (~ghost43@gateway/tor-sasl/ghost43) (Remote host closed the connection)
[14:30:59] *** Quits: roxfan (~roxfan@2a02:a03f:a2be:4f00:6d0c:3ed5:99e5:49fe) (Ping timeout: 252 seconds)
[14:31:02] *** Joins: TheHermann (~TheHerman@gateway/tor-sasl/thehermann)
[14:31:37] *** Joins: ghost43 (~ghost43@gateway/tor-sasl/ghost43)
[14:31:51] *** Quits: Hackerpcs (~user@user/hackerpcs) (Quit: Hackerpcs)
[14:33:43] *** Joins: blindguard (~blindguar@2a02:908:1864:c200::ef3c)
[14:34:22] *** Joins: ravan_ (~ravan@user/ravan)
[14:34:28] *** Quits: ravan (~ravan@user/ravan) (Remote host closed the connection)
[14:34:48] *** Joins: Hackerpcs (~user@user/hackerpcs)
[14:34:53] *** gentooclimax is now known as climax
[14:35:05] *** Quits: wyclif (~wyclif@user/wyclif) (Ping timeout: 256 seconds)
[14:35:16] *** Joins: esther (~esther@24-155-112-236.dyn.grandenetworks.net)
[14:35:23] *** Joins: wyclif (~wyclif@user/wyclif)
[14:37:12] *** Quits: gulzar (~gulzar@49.206.240.149) (Quit: gulzar)
[14:39:57] *** Quits: wyclif (~wyclif@user/wyclif) (Ping timeout: 240 seconds)
[14:40:34] *** Joins: Bronto22 (~mennoh@84-86-247-193.fixed.kpn.net)
[14:40:50] *** Quits: revilaika (~revilaika@151.144.8.109.rev.sfr.net) (Quit: WeeChat 3.4.1)
[14:40:54] *** Joins: wyclif (~wyclif@user/wyclif)
[14:42:30] *** Quits: FergusL (~freenode4@user/fergusl) (Quit: Ping timeout (120 seconds))
[14:43:02] *** Joins: FergusL (~freenode4@23.247.118.78.rev.sfr.net)
[14:43:39] *** Quits: flower_ (~archie@217-123-218-6.cable.dynamic.v4.ziggo.nl) (Ping timeout: 250 seconds)
[14:43:54] *** Joins: flower_ (~archie@217-123-218-6.cable.dynamic.v4.ziggo.nl)
[14:45:20] *** Quits: toulene (~toulene@user/toulene) (Quit: Ping timeout (120 seconds))
[14:45:51] *** Quits: Enitin (~Enitin@82.180.145.230) (Ping timeout: 256 seconds)
[14:46:17] *** Joins: cosimone (~user@2001:b07:ae5:db26:c24a:d20:4d91:1e20)
[14:46:47] *** Joins: nuclearg1 (~nucleargr@user/nuclearg1)
[14:47:30] *** Quits: white2 (~mahengrui@user/mahengrui1) (Ping timeout: 260 seconds)
[14:47:34] *** Joins: toulene (~toulene@user/toulene)
[14:49:14] *** Joins: Enitin (~Enitin@82.180.145.230)
[14:49:35] *** Quits: cm315 (~csm3105@143.red-83-48-84.staticip.rima-tde.net) (Ping timeout: 256 seconds)
[14:50:07] *** Joins: white2 (~mahengrui@user/mahengrui1)
[14:51:14] *** Quits: al_ (~al@134.17.36.147) (Read error: Connection reset by peer)
[14:51:34] *** Joins: al_ (~al@134.17.36.147)
[14:51:54] *** Quits: flower_ (~archie@217-123-218-6.cable.dynamic.v4.ziggo.nl) (Ping timeout: 252 seconds)
[14:52:08] *** Joins: flower_ (~archie@217-123-218-6.cable.dynamic.v4.ziggo.nl)
[14:55:20] *** climax is now known as gentooclimax
[14:55:37] *** Quits: Enitin (~Enitin@82.180.145.230) (Ping timeout: 240 seconds)
[14:56:29] *** Quits: ghost43 (~ghost43@gateway/tor-sasl/ghost43) (Remote host closed the connection)
[14:57:16] *** Joins: ivii (~ivan@user/ivii)
[14:57:17] *** Joins: ghost43 (~ghost43@gateway/tor-sasl/ghost43)
[14:57:30] *** Quits: jstein (~jstein@gentoo/developer/jstein) (Quit: quit)
[14:59:56] *** Quits: nuclearg1 (~nucleargr@user/nuclearg1) (Ping timeout: 245 seconds)
[15:01:16] *** Joins: foobaz212 (~foobaz212@152.37.103.80)
[15:01:33] *** Joins: Dr_Tea (~Dr_Tea@2a02:587:4f13:e100:947e:2575:3e59:c13b)
[15:02:08] *** Joins: Pickchea (~private@user/pickchea)
[15:02:38] *** Joins: Merinorus (~Merinorus@lfbn-mar-1-707-11.w90-118.abo.wanadoo.fr)
[15:02:45] *** Joins: marcello42 (~mp@p200300dfaf10fe018edad6997a9398b1.dip0.t-ipconnect.de)
[15:03:16] *** Joins: cm315 (~csm3105@143.red-83-48-84.staticip.rima-tde.net)
[15:03:27] *** Joins: ba (~ba@cpc1-hari17-2-0-cust27.20-2.cable.virginm.net)
[15:04:55] *** Quits: toulene (~toulene@user/toulene) (Quit: Ping timeout (120 seconds))
[15:05:05] *** Joins: tobybl (~tobybl@227.192.115.87.dyn.plus.net)
[15:05:25] *** Joins: noteness_ (~noteness@user/noteness)
[15:05:45] *** Quits: Wulf (~Wulf@user/wulf) (Ping timeout: 250 seconds)
[15:06:07] *** Joins: Enitin (~Enitin@82.180.145.223)
[15:06:15] *** Quits: foobaz212 (~foobaz212@152.37.103.80) (Ping timeout: 256 seconds)
[15:06:15] *** Quits: noteness (~noteness@user/noteness) (Ping timeout: 240 seconds)
[15:07:11] *** Joins: toulene (~toulene@user/toulene)
[15:07:47] *** Joins: cypostres (~cypostres@user/cypostres)
[15:08:14] *** Joins: thelounge59 (~thelounge@2001:1af8:4700:b0e0:2600::)
[15:08:15] *** Joins: KidBeta (~KidBeta@118.102.80.20)
[15:08:15] *** Quits: KidBeta (~KidBeta@118.102.80.20) (Changing host)
[15:08:15] *** Joins: KidBeta (~KidBeta@user/kidbeta)
[15:08:23] *** Quits: ano (~ano@user/ano) (Remote host closed the connection)
[15:08:37] *** Joins: Klinda (~superleag@user/klinda)
[15:09:13] *** Quits: cypostres (~cypostres@user/cypostres) (Remote host closed the connection)
[15:09:16] *** Joins: toad_X (~ali@159.146.40.81)
[15:09:34] *** Joins: cypostres (~cypostres@user/cypostres)
[15:09:54] *** Quits: takezo (~takezo@gateway/vpn/pia/takezo) (Ping timeout: 260 seconds)
[15:10:52] *** Joins: takezo (~takezo@gateway/vpn/pia/takezo)
[15:11:00] *** Quits: robert_ (~robert_@47.203.169.95) (Read error: Connection reset by peer)
[15:11:07] *** Quits: zen_coder (~zen_coder@2a02:8109:a280:2d8d:699f:6e20:195b:1ccd) (Ping timeout: 256 seconds)
[15:12:05] *** Quits: Dr_Tea (~Dr_Tea@2a02:587:4f13:e100:947e:2575:3e59:c13b) (Quit: Leaving)
[15:12:21] *** Joins: Dr_Tea (~Dr_Tea@2a02:587:4f13:e100:947e:2575:3e59:c13b)
[15:12:46] *** Quits: Dr_Tea (~Dr_Tea@2a02:587:4f13:e100:947e:2575:3e59:c13b) (Client Quit)
[15:12:47] *** Quits: gurkenglas (~gurkengla@dslb-178-012-018-212.178.012.pools.vodafone-ip.de) (Ping timeout: 252 seconds)
[15:13:20] *** Quits: bahamas (~lucian@86.120.77.115) (Ping timeout: 252 seconds)
[15:13:26] *** Quits: FergusL (~freenode4@23.247.118.78.rev.sfr.net) (Changing host)
[15:13:26] *** Joins: FergusL (~freenode4@user/fergusl)
[15:13:51] *** Joins: ano (~ano@user/ano)
[15:13:58] *** Joins: kts (~kts@103.73.237.225)
[15:15:38] *** Joins: remolej (~kenoba@user/kenoba)
[15:15:39] *** Quits: kaiseisei (~Thunderbi@user/kaiseisei) (Ping timeout: 256 seconds)
[15:16:46] *** Joins: oh-bee (~walt@2601:346:8100:5ec0:dab1:816f:a6d6:9b31)
[15:22:20] *** Joins: wakeup (~wakeup@user/wakeup)
[15:23:44] *** Quits: sudomann (~sudomann@98.219.211.182) (Ping timeout: 268 seconds)
[15:24:35] *** Joins: sudomann (~sudomann@98.219.211.182)
[15:26:05] *** Joins: jdavfsxd (~rvgzuuqp@gateway/tor-sasl/rvgzuuqp)
[15:27:30] *** Quits: gentooclimax (~gentoocli@81-64-65-213.rev.numericable.fr) (Quit: Konversation terminated!)
[15:30:11] *** Joins: Csm319_ (~csm3105@143.red-83-48-84.staticip.rima-tde.net)
[15:31:00] *** Quits: cm315 (~csm3105@143.red-83-48-84.staticip.rima-tde.net) (Ping timeout: 240 seconds)
[15:31:28] *** Joins: foobaz212 (~foobaz212@152.37.103.80)
[15:31:51] *** Joins: gurkenglas (~gurkengla@dslb-178-012-018-212.178.012.pools.vodafone-ip.de)
[15:34:01] *** Joins: nomic2 (~nomic@185.217.117.249)
[15:36:36] *** Quits: nomic (~nomic@185.198.243.249) (Ping timeout: 245 seconds)
[15:36:49] *** Joins: YuGiOhJCJ (~YuGiOhJCJ@gateway/tor-sasl/yugiohjcj)
[15:36:57] *** Joins: tomeaton17 (~tomeaton1@2a0c:5bc0:40:2e2f:2ce3:6930:c948:771c)
[15:37:01] *** Joins: vlm (~vlm@user/vlm)
[15:37:16] *** Joins: Thanatos (~Thanatos@105.112.16.248)
[15:38:34] *** Joins: Jimmy2027 (~hendrik@142.47.3.213.static.wline.lns.sme.cust.swisscom.ch)
[15:39:02] *** Joins: adiKt (uid472628@id-472628.tinside.irccloud.com)
[15:39:28] *** Quits: rustyshackleford (uid236774@id-236774.helmsley.irccloud.com) (Quit: Connection closed for inactivity)
[15:40:31] *** Joins: aclark (~aclark@pool-108-51-184-139.washdc.fios.verizon.net)
[15:41:49] *** Quits: vlm (~vlm@user/vlm) (Ping timeout: 240 seconds)
[15:42:17] *** Quits: aclark (~aclark@pool-108-51-184-139.washdc.fios.verizon.net) (Client Quit)
[15:42:21] <Jimmy2027> hi, is there any way to slice a tensor in a flexible way, such that the actual slicing index is returned by some function? for example x[:,my_slicing_index,:], where "my_slicing_index" can be (1,1:,1:1, 1:1::1, ...). How can I return something like 1:1 in a function?
[15:42:39] *** Joins: aclark (~aclark@pool-108-51-184-139.washdc.fios.verizon.net)
[15:43:30] <Jimmy2027> actually I want something like "{x}[:,my_slicing_index,:]".format(x = x, my_slicing_index = my_slicing_index) but as an actual tensor, not a string
[15:43:43] <Jimmy2027> is this possible?
[15:44:24] *** Joins: the_lanetly_052 (~the_lanet@194.135.167.45)
[15:44:40] <Jimmy2027> ' I meant "{x}[:,{my_slicing_index},:]".format(x = x, my_slicing_index = my_slicing_index)
[15:45:11] <bookworm> Jimmy2027: https://docs.python.org/3/library/functions.html#slice
[15:45:32] *** Quits: ice9 (~ice9@user/ice9) (Read error: Connection reset by peer)
[15:45:47] *** Joins: vulpes_vulpes (~vulpes_vu@62-64-207-88.dynamic.dial.as9105.com)
[15:46:03] <bookworm> I'd try with that
[15:46:45] *** Quits: tobybl (~tobybl@227.192.115.87.dyn.plus.net) (Remote host closed the connection)
[15:46:59] <Jimmy2027> hmm yeah this looks like what I was looking for :) but I'm still interested in finiding out if what I tried to do is actually possible
[15:47:37] *** Quits: Oddity (~Oddity@user/oddity) (Ping timeout: 256 seconds)
[15:47:48] *** Joins: tobybl (~tobybl@227.192.115.87.dyn.plus.net)
[15:48:33] *** Quits: ghost43 (~ghost43@gateway/tor-sasl/ghost43) (Remote host closed the connection)
[15:48:52] *** Joins: ghost43 (~ghost43@gateway/tor-sasl/ghost43)
[15:49:06] *** Joins: vlm (~vlm@user/vlm)
[15:50:11] *** Joins: nuclearg1 (~nucleargr@user/nuclearg1)
[15:50:15] <Jimmy2027> thanks bookworm, the slice class works perfectly for my usecase :)
[15:50:33] <bookworm> well, eval
[15:50:38] <bookworm> but it's nasty
[15:51:20] *** Joins: storm__ (~storm@88.242.225.100)
[15:51:54] *** Joins: betuxy (~betuxy@p579adb74.dip0.t-ipconnect.de)
[15:52:29] *** Quits: ghost43 (~ghost43@gateway/tor-sasl/ghost43) (Remote host closed the connection)
[15:52:34] <FergusL> Hello hello! Is there a specific python channel on libera to ask about pybind11 (and its companion binder tool)?
[15:52:43] *** Quits: sudomann (~sudomann@98.219.211.182) (Ping timeout: 256 seconds)
[15:52:52] *** Joins: ghost43 (~ghost43@gateway/tor-sasl/ghost43)
[15:53:17] *** Quits: vlm (~vlm@user/vlm) (Ping timeout: 240 seconds)
[15:53:42] <mad_moses> Hi, how can I upload a file to my rest endpoint with some other data: https://dpaste.org/1UO1
[15:53:49] *** Quits: storm_ (~storm@88.242.225.100) (Ping timeout: 240 seconds)
[15:54:55] *** Quits: foobaz212 (~foobaz212@152.37.103.80) (Quit: Client closed)
[15:55:07] *** Joins: foobaz212 (~foobaz212@152.37.103.80)
[15:55:08] *** Quits: nuclearg1 (~nucleargr@user/nuclearg1) (Ping timeout: 252 seconds)
[15:55:36] *** Joins: ice9 (~ice9@user/ice9)
[15:55:45] *** Joins: tobybl_ (~tobybl@227.192.115.87.dyn.plus.net)
[15:55:56] *** Quits: Bronto22 (~mennoh@84-86-247-193.fixed.kpn.net) (Quit: Konversation terminated!)
[15:56:15] *** Joins: thanatos_jj (~Thanatos@ec2-54-148-37-124.us-west-2.compute.amazonaws.com)
[15:56:15] <mad_moses> got it .. there is a second optional paramter = files
[15:57:07] *** Quits: oh-bee (~walt@2601:346:8100:5ec0:dab1:816f:a6d6:9b31) (Quit: Konversation terminated!)
[15:57:30] *** Joins: rinzewind (~rinzewind@user/rinzewind)
[15:58:26] *** Quits: tobybl (~tobybl@227.192.115.87.dyn.plus.net) (Ping timeout: 252 seconds)
[15:59:23] *** Joins: TheCat (~TheCat@user/z-cat)
[16:00:18] <FergusL> I'm using binder to bind VCV Rack. I get the error "error: â€˜rackâ€™ was not declared in this scope" on line 18 here: https://bpa.st/FHNQ which is weird as the namespace being currently bound is "rack". The content of context.hpp is added after the ///, the struct that is failing is on line 77 in the paste
[16:00:39] *** Quits: foobaz212 (~foobaz212@152.37.103.80) (Ping timeout: 256 seconds)
[16:01:10] <zamba> i just removed a python package from pip and installed the same, corresponding, package through apt.. how can i get python3 to search in dist-packages instead of site-packages for that package?
[16:01:34] *** Quits: hemstock (~hemstock@146.70.27.242) ()
[16:01:37] *** Joins: Guest54 (~Guest54@110.16.202.67)
[16:02:34] *** Quits: tobybl_ (~tobybl@227.192.115.87.dyn.plus.net) (Remote host closed the connection)
[16:02:37] *** Quits: Enitin (~Enitin@82.180.145.223) (Ping timeout: 240 seconds)
[16:03:41] *** Quits: Guest54 (~Guest54@110.16.202.67) (Quit: Client closed)
[16:04:04] *** Joins: sudomann (~sudomann@98.219.211.182)
[16:04:06] *** Quits: dhch (~dhch@185.213.154.165) (Quit: The Lounge - https://thelounge.chat)
[16:04:31] *** Quits: merijn (~merijn@c-001-001-001.client.esciencecenter.eduvpn.nl) (Ping timeout: 245 seconds)
[16:04:35] *** Joins: Enitin (~Enitin@82.102.22.84)
[16:05:32] *** Joins: merijn (~merijn@c-001-001-001.client.esciencecenter.eduvpn.nl)
[16:06:18] *** Quits: nesoi (~Adium@60-241-111-113.static.tpgi.com.au) (Quit: Leaving.)
[16:06:42] <FergusL> zamba it's better to avoid I guess, but you can hack sys.path and add or remove elements
[16:07:15] <FergusL> make sure to only do it exactly when and if you need it, modifying sys.path can lead to a lot of module issues
[16:07:18] <zamba> FergusL: but the module i want to load is not in /usr/local/lib/python3.9/site-packages no more?
[16:07:28] *** Joins: Barones (~Barones@user/Barones)
[16:07:45] <zamba> so there must be some index file somewhere that still believes it's there?
[16:08:35] *** Quits: sudomann (~sudomann@98.219.211.182) (Ping timeout: 256 seconds)
[16:10:19] *** Joins: fedenix (~fedenix@gateway/tor-sasl/fedenix)
[16:10:45] *** Quits: merijn (~merijn@c-001-001-001.client.esciencecenter.eduvpn.nl) (Ping timeout: 250 seconds)
[16:10:51] *** Quits: vantage (~vantage@ip-193-121-152-141.dsl.scarlet.be) (Ping timeout: 256 seconds)
[16:10:55] *** flooded is now known as _flood
[16:11:23] *** Joins: merijn (~merijn@c-001-001-001.client.esciencecenter.eduvpn.nl)
[16:11:43] <FergusL> zamba I don't know if there is such a thing, I don't think so
[16:12:12] <FergusL> zamba do still check every path in sys.path to make sure: python3 -c "import sys; print(sys.path)"
[16:12:58] <zamba> ['', '/usr/local/lib/python39.zip', '/usr/local/lib/python3.9', '/usr/local/lib/python3.9/lib-dynload', '/usr/local/lib/python3.9/site-packages']
[16:12:59] *** Quits: gitesh (uid423739@id-423739.ilkley.irccloud.com) (Quit: Connection closed for inactivity)
[16:14:11] *** Joins: Feri (~Feriun@user/Feriun)
[16:14:19] <Feri> Hello Everyone
[16:14:45] <jinsun__> zamba: so dist-packages is not there in sys.path that's why python3 is not looking for packages there
[16:14:51] *** Joins: bigRoo (~user@73.181.dsl.syd.iprimus.net.au)
[16:15:01] <Feri> If I have a 2D array and I want to itterate over all the elements using [x for x in y] syntax, How can I do that?
[16:15:06] <zamba> jinsun__: but shouldn't it be there?
[16:15:17] <FergusL> yes it definitely should
[16:15:26] <jinsun__> dunno how it is exactly supposed to work in debian, but I guess yeah it should be there by default
[16:15:30] <Feri> [m[i][j] for j in range(len(m)) for i in range(len(m[0]))] this is deffinitly wrong
[16:15:37] <Yhg1s> No, it shouldn't be there.
[16:15:51] <Feri> May anyone help me please :D
[16:15:54] <Yhg1s> You're looking at the sys.path of a Python installation in /usr/local, _not_ one controlled by Debian.
[16:16:01] <FergusL> zamba tried running this in a fresh terminal?
[16:16:13] *** Quits: merijn (~merijn@c-001-001-001.client.esciencecenter.eduvpn.nl) (Ping timeout: 240 seconds)
[16:16:23] <tomeaton17> Feri you can just do 2 for loops
[16:16:35] <Feri> I want to use this syntax
[16:16:39] <Yhg1s> FergusL: [item for row in m for item in row]
[16:16:43] <Feri> Not sure what the name is
[16:16:43] <tomeaton17> Feri like for x in arr: for y in x
[16:16:49] <zamba> Yhg1s: that's probably correct, yes
[16:17:00] <zamba> Yhg1s: this is a docker image built with FROM:python3.9
[16:17:26] <Feri> tomeaton17: What would be the end code like?
[16:17:30] <Yhg1s> zamba: if Python 3.9 is built from source, not from apt, you can't apt-install Python packages for it. You have to use python3.9's pip to install them, instead.
[16:17:37] <tomeaton17> Feri https://bpa.st/DFEQ
[16:17:39] <FergusL> Yhg1s good catch Yhg1s!
[16:17:41] *** Quits: ayustae (Thunderbir@gateway/vpn/protonvpn/ayustae) (Ping timeout: 252 seconds)
[16:17:56] <zamba> Yhg1s: ok, but for some reason the RPi.GPIO module is b0rked
[16:18:02] <Yhg1s> Feri: the list comprehension I gave you does the same iteration as tomeaton17's suggestion.
[16:18:12] <zamba> the one installed through apt worked fine, but then i had to manually include it
[16:18:14] <Yhg1s> zamba: you'll have to find out why then, I guess.
[16:18:25] <Yhg1s> zamba: you can't expect apt-installed packages to work with Python not from apt.
[16:18:33] *** Quits: stockholm (~Andreas@p200300d2c70c00004c35e0b4ad8e7716.dip0.t-ipconnect.de) (Ping timeout: 256 seconds)
[16:18:41] <Feri> Yhg1s: Thank you I was looking for the compression method
[16:18:49] <Yhg1s> Feri: 'comprehension'.
[16:18:50] <Feri> tomeaton17: I saw your code, this is not what I want
[16:18:57] <Feri> Yhg1s: Yep :D
[16:19:09] <zamba> Yhg1s: ok, i'm attempting to install the package through pip again.. let's see what happens then
[16:19:10] <Feri> Yhg1s: What would it be like for a 3D array?
[16:19:20] *** Joins: admin123 (~harrymore@ool-2f12f5b1.dyn.optonline.net)
[16:19:28] *** jant_ is now known as jant
[16:19:44] <Yhg1s> Feri: you would add more for loops. (Although, if it's actually a *3D array*, rather than a list of lists of lists, you really don't want to handle it like this. You want to use array methods instead.)
[16:20:27] *** Joins: sudomann (~sudomann@98.219.211.182)
[16:20:29] <zamba> Yhg1s: https://bpa.st/Z74A
[16:20:37] *** Quits: Hanii (~textual@2a00:23c5:c583:a300:e0d9:96aa:840c:1d25) (Quit: Textual IRC Client: www.textualapp.com)
[16:20:37] <Feri> Yhg1s: This is actualy a programming question and I like to solve it in 1 line
[16:20:51] <zamba> it attempts to load RPi._GPIO..?
[16:21:02] *** Joins: zeden (~zeden@user/zeden)
[16:21:33] <Feri> Yhg1s: I need to take a 3D array as input (A rubic cube) and change the elements in surface to 1
[16:21:39] <Yhg1s> zamba: make sure pip is the right pip for the python you're using. Also, always use a virtualenv, even in a container. Always explicitly use the virtualenv's pip and python.
[16:21:46] <Feri> Yhg1s: Is this a proper 1 line method for doing so?
[16:21:59] <Yhg1s> Feri: but what do you mean by '3D array'? Is it a numpy array? Or do you just mean a list of lists of lists?
[16:22:09] <zamba> Yhg1s: how do i make sure that it's the right pip?
[16:22:22] <Feri> Yhg1s: A list of lists of lists
[16:22:26] <Yhg1s> zamba: look at what pip it is, or use python3 -m pip
[16:22:31] <Yhg1s> Feri: then it's fine.
[16:22:38] <Feri> Yhg1s: Perfect ^^
[16:23:21] *** Joins: nuclearg1 (~nucleargr@user/nuclearg1)
[16:23:28] <jinsun__> zamba: https://snarky.ca/why-you-should-use-python-m-pip
[16:23:53] *** Quits: admin123 (~harrymore@ool-2f12f5b1.dyn.optonline.net) (Ping timeout: 256 seconds)
[16:23:56] *** Joins: caveman (~caveman@gateway/tor-sasl/caveman)
[16:24:25] *** Quits: jdmark2 (~jdmark@user/jdmark) (Quit: Leaving)
[16:24:54] <zamba> # python3 -m pip install RPi.GPIO
[16:24:56] <zamba> Requirement already satisfied: RPi.GPIO in /usr/local/lib/python3.9/site-packages (0.7.1)
[16:25:02] *** Quits: sudomann (~sudomann@98.219.211.182) (Ping timeout: 260 seconds)
[16:25:03] *** Quits: bitdex (~bitdex@gateway/tor-sasl/bitdex) (Remote host closed the connection)
[16:25:07] *** Joins: revolve_ (~u0_a227@82-132-238-117.dab.02.net)
[16:25:11] *** Quits: joeyzheng5403_ (~kerwin@124.126.18.162) (Remote host closed the connection)
[16:26:39] *** Quits: vdamewood (~vdamewood@fedora/vdamewood) (Quit: Life beckons)
[16:26:43] *** pudnutsS is now known as mfisher
[16:26:48] <zamba> so i'm not following why this module won't load
[16:27:21] *** Joins: vlm (~vlm@user/vlm)
[16:27:33] *** Joins: roxfan (~roxfan@2a02:a03f:a2be:4f00:6d0c:3ed5:99e5:49fe)
[16:27:51] *** Quits: nuclearg1 (~nucleargr@user/nuclearg1) (Ping timeout: 256 seconds)
[16:29:15] *** Quits: revolve (~u0_a227@cpc100838-bagu15-2-0-cust672.1-3.cable.virginm.net) (Ping timeout: 252 seconds)
[16:29:19] *** Quits: ano (~ano@user/ano) (Remote host closed the connection)
[16:29:39] *** Joins: fflam (~mdt@ip72-220-60-77.sd.sd.cox.net)
[16:29:52] <jinsun__> so RPi._GPIO is a .so file in the RPi folder, make sure that file exists
[16:30:32] <zamba> https://bpa.st/EIIQ
[16:30:37] <zamba> that's /usr/local/lib/python3.9/site-packages/RPi
[16:31:18] *** Quits: toulene (~toulene@user/toulene) (Read error: Connection reset by peer)
[16:31:57] *** Joins: ano (~ano@user/ano)
[16:32:48] *** Quits: kostkon_ (~androirc@2.142.66.94.static.otenet.gr) (Ping timeout: 268 seconds)
[16:32:58] *** Joins: toulene (~toulene@user/toulene)
[16:33:23] *** Joins: foobaz212 (~foobaz212@152.37.103.80)
[16:33:29] *** Joins: vantage (~vantage@ip-193-121-152-141.dsl.scarlet.be)
[16:34:41] *** Joins: milkt (~debian@gateway/tor-sasl/milkt)
[16:35:35] *** Quits: milkt_ (~debian@gateway/tor-sasl/milkt) (Ping timeout: 240 seconds)
[16:35:38] *** Quits: ano (~ano@user/ano) (Remote host closed the connection)
[16:35:42] *** audiobirb is now known as audio
[16:36:32] *** Quits: ghost43 (~ghost43@gateway/tor-sasl/ghost43) (Remote host closed the connection)
[16:36:47] *** Joins: ghost43 (~ghost43@gateway/tor-sasl/ghost43)
[16:37:08] *** Joins: sudomann (~sudomann@98.219.211.182)
[16:37:47] *** Joins: rama (~rama@c-24-130-92-222.hsd1.ca.comcast.net)
[16:38:03] *** Quits: foobaz212 (~foobaz212@152.37.103.80) (Ping timeout: 256 seconds)
[16:39:32] *** Parts: thelounge59 (~thelounge@2001:1af8:4700:b0e0:2600::) (The Lounge - https://thelounge.chat)
[16:40:28] *** Joins: nuclearg1 (~nucleargr@user/nuclearg1)
[16:40:55] *** Quits: caveman (~caveman@gateway/tor-sasl/caveman) (Ping timeout: 240 seconds)
[16:42:23] *** Quits: EvilDMP (~textual@django/moderator/EvilDMP) (Quit: My MacBook has gone to sleep. ZZZzzzâ€¦)
[16:42:41] *** Quits: Feri (~Feriun@user/Feriun) (Quit: WeeChat 3.4.1)
[16:42:57] *** Quits: rama (~rama@c-24-130-92-222.hsd1.ca.comcast.net) (Ping timeout: 240 seconds)
[16:44:00] *** Joins: ano (~ano@user/ano)
[16:44:37] *** Quits: moldorcoder7 (~moldorcod@37.120.143.30) (Ping timeout: 240 seconds)
[16:45:11] *** Quits: nuclearg1 (~nucleargr@user/nuclearg1) (Ping timeout: 256 seconds)
[16:45:36] *** Joins: MasterK (~MK@86.121.141.249)
[16:46:14] *** Joins: merijn (~merijn@c-001-001-001.client.esciencecenter.eduvpn.nl)
[16:46:50] *** Quits: maxzor (~maxzor@2a01cb04054faa007972c534aff021b8.ipv6.abo.wanadoo.fr) (Ping timeout: 252 seconds)
[16:48:01] *** Quits: shad (~shad@user/shad) (Ping timeout: 250 seconds)
[16:49:49] *** Joins: EvilDMP (~textual@django/moderator/EvilDMP)
[16:50:33] *** Masklin__Gurder is now known as Masklin
[16:51:15] *** Quits: merijn (~merijn@c-001-001-001.client.esciencecenter.eduvpn.nl) (Ping timeout: 250 seconds)
[16:51:19] *** Joins: moldorcoder7 (~moldorcod@37.120.143.29)
[16:51:23] *** Joins: Wulf (~Wulf@user/wulf)
[16:51:25] *** Joins: tobybl (~tobybl@227.192.115.87.dyn.plus.net)
[16:53:24] <zamba> the same docker image works fine on a different pi
[16:54:20] *** Quits: dsrt^ (~dsrt@96-67-120-105-static.hfc.comcastbusiness.net) (Remote host closed the connection)
[16:55:13] *** Joins: twb (~twb@2403-5804-c6--cfeb-44f7-7895-9800.ip6.aussiebb.net)
[16:55:58] *** Joins: merijn (~merijn@c-001-001-001.client.esciencecenter.eduvpn.nl)
[16:56:06] <twb> What's the least messy way to do integer division, rounding towards positive infinity?  math.ceil(x/y) ?
[16:57:55] *** Joins: stockholm (~Andreas@p200300d2c70c00004c35e0b4ad8e7716.dip0.t-ipconnect.de)
[16:57:56] <twb> Actually, I guess what I *really* want is to round towards infinity keeping only two significant figures, so e.g. "1234.666" just becomes "1300".  The additional accuracy is not interesting for my use case
[16:58:50] <twb> Huh, round(1234.56, -2)
[17:01:11] *** Quits: wyclif (~wyclif@user/wyclif) (Ping timeout: 245 seconds)
[17:01:31] <jinsun__> that goes down half the time though
[17:01:55] <twb> Yeah and math.ceil has no second arg
[17:02:23] <twb> The use case is estimating the space wasted by packages, so I want to over-estimate rather than under-estimate
[17:02:40] *** Joins: wyclif (~wyclif@user/wyclif)
[17:02:46] *** Quits: paul424 (~tom@ip-5-172-234-96.multi.internet.cyfrowypolsat.pl) (Remote host closed the connection)
[17:03:05] *** Joins: torswq (~torswq@190.107.187.114)
[17:03:13] *** nomic2 is now known as nomic
[17:03:51] *** Quits: torswq (~torswq@190.107.187.114) (Client Quit)
[17:05:02] *** Quits: tobybl (~tobybl@227.192.115.87.dyn.plus.net) (Remote host closed the connection)
[17:05:37] <jinsun__> you could just add 10**2 if round(x, -2) is less than x
[17:05:58] <jinsun__> not a nice expression, or anything built-in for that though
[17:06:14] *** Joins: ShinyCyril (~ShinyCyri@65.79.144.153)
[17:06:25] <jinsun__> result if (result:=round(value, -2)) > value else result + 10**2
[17:07:36] <twb> Interesting use of :=
[17:07:36] *** Quits: ShinyCyril (~ShinyCyri@65.79.144.153) (Client Quit)
[17:08:11] *** Joins: flower__ (~archie@217-123-218-6.cable.dynamic.v4.ziggo.nl)
[17:09:03] *** Quits: Gerula (~Gerula@user/gerula) (Quit: Leaving)
[17:09:06] *** Quits: iflema (~ian@user/iflema) (Ping timeout: 245 seconds)
[17:09:34] *** Joins: iflema (~ian@user/iflema)
[17:09:47] *** Joins: bloody (~bloody@user/bloody)
[17:13:27] *** Joins: ThanatosJ (~Thanatos@105.112.182.96)
[17:13:27] *** Joins: ericleer (~ericleer@dhcp-077-249-173-130.chello.nl)
[17:14:28] *** Quits: ghost43 (~ghost43@gateway/tor-sasl/ghost43) (Remote host closed the connection)
[17:14:35] *** Quits: Thanatos (~Thanatos@105.112.16.248) (Read error: Connection reset by peer)
[17:14:49] *** Joins: ghost43 (~ghost43@gateway/tor-sasl/ghost43)
[17:14:57] *** Joins: kostkon_ (~androirc@5-203-216-150.pat.nym.cosmote.net)
[17:17:03] *** Joins: librenaut (~librenaut@li1898-97.members.linode.com)
[17:17:04] <InPhase> twb: This is less opaque:  math.ceil(1234.666 / 10**2)*10**2
[17:19:27] *** Quits: mIk3_08 (~Thunderbi@user/mik3-08/x-2852566) (Quit: mIk3_08)
[17:19:54] <twb> InPhase: except your magic number 2 there is how many figures to remove, not how many figures to keep
[17:19:54] *** Quits: kostkon_ (~androirc@5-203-216-150.pat.nym.cosmote.net) (Read error: Connection reset by peer)
[17:20:08] *** Joins: kostkon_ (~androirc@2a02:1388:97:596:340b:3837:ee39:e38a)
[17:20:54] <twb> http://ix.io/3Taf  is the trashy code I have for now
[17:21:11] <InPhase> twb: So is round?
[17:21:24] <twb> InPhase: no because round is taking a negative number
[17:21:36] <InPhase> round(123498, -2)
[17:21:51] <twb> InPhase: oh.  Crap.
[17:21:54] <InPhase> math.ceil(123498 / 10**2)*10**2
[17:22:05] <twb> I misunderstood round() then
[17:22:55] <InPhase> That negative means left of the decimal point.
[17:23:40] <twb> Yeah I see that now
[17:24:03] *** Quits: librenaut (~librenaut@li1898-97.members.linode.com) (Quit: Lost terminal)
[17:25:45] *** Quits: marduk (~marduk@99-122-3-133.lightspeed.nsvltn.sbcglobal.net) (Quit: The Lounge - https://thelounge.chat)
[17:26:27] *** Quits: MajorBiscuit (~MajorBisc@wlan-145-94-218-48.wlan.tudelft.nl) (Ping timeout: 252 seconds)
[17:27:18] *** Quits: ovnicraft (~ovnicraft@ftth-179-49-44-28.cue.celerity.ec) (Read error: Connection reset by peer)
[17:27:19] *** Joins: librenaut (~librenaut@user/librenaut)
[17:27:24] <twb> hahaha
[17:27:51] *** Joins: ovnicraft (~ovnicraft@corp-179-49-44-28.uio.puntonet.ec)
[17:27:59] *** Quits: acidsys (~LSD@2a03:4000:55:d20::3) (Excess Flood)
[17:28:06] <twb> What some dude is doing is roughly int( str(n)[:2] + '0' * len(str(n)[2:]) )
[17:28:21] <twb> Like... get each digit and either keep it, or turn it into a zero
[17:28:32] *** Joins: acidsys (~LSD@2a03:4000:55:d20::3)
[17:28:34] *** Joins: MajorBiscuit (~MajorBisc@wlan-145-94-218-48.wlan.tudelft.nl)
[17:28:59] *** Joins: mrgz (~mrgz@201-42-0-191.dsl.telesp.net.br)
[17:29:01] <InPhase> twb: That's okay as long as n is guaranteed a positive integer at input.
[17:29:36] *** Joins: bigRoo` (~user@89.187.163.193)
[17:29:43] <twb> I think in my case size_in_bytes is guaranteed to be a non-negative integer
[17:30:00] <InPhase> Ah, well yes, one would hope.  :)
[17:30:10] <twb> Note: non-negative not positive
[17:30:13] *** Quits: bigRoo (~user@73.181.dsl.syd.iprimus.net.au) (Ping timeout: 240 seconds)
[17:30:18] *** Quits: kostkon_ (~androirc@2a02:1388:97:596:340b:3837:ee39:e38a) (Ping timeout: 252 seconds)
[17:30:22] <InPhase> 0 should work okay.
[17:30:29] *** Joins: kostkon_ (~androirc@2.142.66.94.static.otenet.gr)
[17:30:48] *** Joins: vladoski (~vladoski@2001:b07:add:d406:693e:d630:31f9:1e46)
[17:31:28] *** Quits: ghost43 (~ghost43@gateway/tor-sasl/ghost43) (Remote host closed the connection)
[17:31:39] *** Joins: shad (~shad@user/shad)
[17:32:06] *** Joins: marduk (~marduk@99-122-3-133.lightspeed.nsvltn.sbcglobal.net)
[17:32:16] *** Joins: ghost43 (~ghost43@gateway/tor-sasl/ghost43)
[17:34:08] *** Quits: kts (~kts@103.73.237.225) (Ping timeout: 252 seconds)
[17:34:08] *** Quits: YuGiOhJCJ (~YuGiOhJCJ@gateway/tor-sasl/yugiohjcj) (Quit: YuGiOhJCJ)
[17:34:49] *** Joins: k` (~weechat@about/web/empty)
[17:35:09] *** Joins: xrogaan (~xrogaan@user/xrogaan)
[17:35:37] *** Quits: vladoski (~vladoski@2001:b07:add:d406:693e:d630:31f9:1e46) (Ping timeout: 256 seconds)
[17:35:43] *** Joins: theseb (~theseb@47-220-214-54.cnrocmta03.res.dyn.suddenlink.net)
[17:35:58] *** Quits: cheater (~Username@user/cheater) (Remote host closed the connection)
[17:37:02] *** Joins: cheater (~Username@user/cheater)
[17:37:55] <twb> InPhase: your approach seems sound to me http://ix.io/3Tap  -- I used the str len hack to work out how big the magic number should be
[17:38:02] *** Joins: Hanii (~textual@2a00:23c5:c583:a300:d5c4:f026:e451:bdeb)
[17:38:59] *** Joins: lispy (~lispy@user/lispy)
[17:40:48] *** Joins: vladoski (~vladoski@2001:b07:add:d406:ce45:15e1:21a7:b919)
[17:41:17] *** Quits: sudomann (~sudomann@98.219.211.182) (Ping timeout: 240 seconds)
[17:41:31] *** Quits: wyclif (~wyclif@user/wyclif) (Ping timeout: 256 seconds)
[17:42:37] *** Quits: toulene (~toulene@user/toulene) (Ping timeout: 240 seconds)
[17:42:54] <mad_moses> Hi, I want to parse an email response. I need to cut/detect the original message and the response. I want also to remove the signature from an response. Any idea how to do this?
[17:43:05] *** Quits: KidBeta (~KidBeta@user/kidbeta) (Remote host closed the connection)
[17:43:44] *** Joins: mohammad5305 (~mohammad@37.44.59.11)
[17:44:27] <twb> mad_moses: are you starting from a text/rfc822 object, or are you starting from just a text/plain body part?
[17:44:28] *** Joins: tobybl (~tobybl@227.192.115.87.dyn.plus.net)
[17:44:54] *** Quits: Jonopoly (~Jonopoly@user/jonopoly) (Quit: WeeChat 3.0)
[17:45:04] <twb> i.e. does your initial string start "From: alice@example.com\n\tSubject: ..." or does it start "Alice wrote: \n"
[17:45:20] *** Joins: toulene (~toulene@user/toulene)
[17:45:24] *** Joins: sh0ne (~sh0ne@178.237.217.167)
[17:45:31] <mad_moses> twb: not sure what amazon SES is savin. Just a moment
[17:45:34] *** Joins: wyclif (~wyclif@user/wyclif)
[17:46:27] <twb> Also if you only have one message and cannot look at the In-Reply-To and References messages (i.e. you don't have access to the JMAP or IMAP server), you will *definitely* need to know if the person writing the message is using Outlook, mutt, or something else
[17:46:44] <twb> Because the quoting style for outlook is completely... different
[17:47:30] *** Quits: tobybl (~tobybl@227.192.115.87.dyn.plus.net) (Remote host closed the connection)
[17:47:44] <twb> https://en.wikipedia.org/wiki/Usenet_quoting <-- this is what I consider "normal" style because I'm old.  Outlook broke that, so the de facto result is that business emails use Outlook style instead
[17:48:10] *** Quits: mohammad5305 (~mohammad@37.44.59.11) (Client Quit)
[17:48:12] *** Joins: BobRockHR (~andrija@user/BobRockHR)
[17:48:18] <twb> If this is the sort of parsing you mean, you will NEVER get it 100% right
[17:48:24] *** Quits: BobRockHR (~andrija@user/BobRockHR) (Client Quit)
[17:48:39] *** Joins: BobRockHR (~andrija@user/BobRockHR)
[17:48:47] *** Joins: nuclearg1 (~nucleargr@user/nuclearg1)
[17:49:25] <mad_moses> twb: I see in-reply-to
[17:49:25] <twb> Some code that does this job I know of is written in lisp, it's the function "gnus-article-outlook-deuglify-article"
[17:49:49] <twb> mad_moses: yeah OK in that case step #1 is to use email.mime.parse() to handle the MIME layer
[17:50:31] <twb> Then iterate over the parts that are text/plain and/or text/html or multipart/alternative
[17:50:42] *** Joins: KidBeta (~KidBeta@118.102.80.20)
[17:50:42] *** Quits: KidBeta (~KidBeta@118.102.80.20) (Changing host)
[17:50:42] *** Joins: KidBeta (~KidBeta@user/kidbeta)
[17:50:50] *** Joins: ghost43_ (~ghost43@gateway/tor-sasl/ghost43)
[17:51:13] <twb> All this stuff is a huge pain, so I strongly recommend you get your boss to say e.g. "we only have to handle messages generated from gmail's web UI, and outlook, with default settings.  Everything else, we can completely ignore"
[17:52:05] *** Joins: kts (~kts@103.73.237.196)
[17:52:07] <twb> (Or even better, maybe, ignore email completely and only handle... whatever Kids Today use.  Twitter?)
[17:52:14] <mad_moses> hmm okay
[17:52:25] *** Quits: EgonX (~EgonX@2601:2c6:47f:879e:39fe:6a9b:6533:77e) (Read error: Connection reset by peer)
[17:52:58] *** Joins: EgonX (~EgonX@2601:2c6:47f:879e:ec7d:567c:8b36:1bf4)
[17:52:58] *** Joins: tobybl (~tobybl@227.192.115.87.dyn.plus.net)
[17:53:07] *** Quits: Csm319_ (~csm3105@143.red-83-48-84.staticip.rima-tde.net) (Remote host closed the connection)
[17:53:18] *** Quits: tobybl (~tobybl@227.192.115.87.dyn.plus.net) (Remote host closed the connection)
[17:53:24] *** Quits: nuclearg1 (~nucleargr@user/nuclearg1) (Ping timeout: 240 seconds)
[17:53:26] *** Joins: Csm319_ (~csm3105@143.red-83-48-84.staticip.rima-tde.net)
[17:53:35] *** Quits: ghost43 (~ghost43@gateway/tor-sasl/ghost43) (Ping timeout: 240 seconds)
[17:53:38] <twb> Ugh the function I mentioned is a nest of little functions: https://sources.debian.org/src/emacs/1:27.1+1-3.1/lisp/gnus/deuglify.el/?hl=457#L457
[17:53:58] *** Quits: ubert (~Thunderbi@p200300ecdf158894255673a7c9121e6c.dip0.t-ipconnect.de) (Quit: ubert)
[17:54:16] *** Joins: ubert (~Thunderbi@p200300ecdf1588942c242a19e1a99324.dip0.t-ipconnect.de)
[17:54:34] *** Joins: sudomann (~sudomann@98.219.211.182)
[17:54:55] <twb> Yeah don't read that elisp unless you're sitting down and have some hard liquor ready
[17:55:03] *** Quits: dreamon (~dreamon@ppp-88-217-83-128.dynamic.mnet-online.de) (Ping timeout: 252 seconds)
[17:55:36] *** Quits: bigRoo` (~user@89.187.163.193) (Remote host closed the connection)
[17:56:00] *** Joins: nyah (~nyah@05453449.skybroadband.com)
[17:56:47] *** Joins: vaaqif (~vaaqif_3@cpc151159-smal19-2-0-cust83.19-1.cable.virginm.net)
[17:56:51] *** Joins: xheimlich (~xheimlich@179.218.1.150)
[17:57:24] *** Joins: cdown (~cdown@cpe-98-15-154-102.hvc.res.rr.com)
[17:58:01] <xheimlich> so I have a backend API that stores some usage logs in $external_key_value_store and also offers an endpoint to see those logs.
[17:58:02] *** Joins: cm315 (~csm3105@143.red-83-48-84.staticip.rima-tde.net)
[17:58:03] *** Joins: rootx74 (~rootx74@user/rootx74)
[17:58:34] *** Joins: tarel2 (~tarel2@139.28.216.244)
[17:58:47] *** Quits: revolve_ (~u0_a227@82-132-238-117.dab.02.net) (Read error: Connection reset by peer)
[17:59:01] *** Quits: sudomann (~sudomann@98.219.211.182) (Ping timeout: 240 seconds)
[17:59:01] *** Quits: rindolf (~shlomif@inkscape/dev/shlomif) (Read error: Connection reset by peer)
[17:59:06] <xheimlich> Thing is, I keep getting asked what's usage going like because fuck reading json on a cellphone even if you give them a no-auth-needed http link.
[17:59:08] *** Joins: Guest3 (~Guest3@2a02:908:214:9cc0:96a:c07c:88ab:284c)
[17:59:14] *** Quits: quhar (~quhar@192.162.148.48) (Quit: WeeChat 3.3)
[17:59:25] *** XV9 is now known as XV8
[17:59:28] *** Joins: rindolf (~shlomif@inkscape/dev/shlomif)
[17:59:41] *** Quits: nomic (~nomic@185.217.117.249) (Quit: Leaving)
[17:59:43] *** Quits: very_sneaky (~very_snea@user/very-sneaky/x-7432109) (Quit: very_sneaky)
[18:00:01] <xheimlich> I'd love it if there existed some SIMPLE way to generate html+maybe some js for interactivity to display this result more or less like a code editor is able to read json.
[18:00:21] *** Quits: Csm319_ (~csm3105@143.red-83-48-84.staticip.rima-tde.net) (Ping timeout: 245 seconds)
[18:00:38] *** Joins: revolve (~u0_a227@cpc100838-bagu15-2-0-cust672.1-3.cable.virginm.net)
[18:00:38] *** Quits: willcl_ark (~willcl-ar@user/willcl-ark/x-8282106) (Quit: issued !quit command)
[18:01:57] <xheimlich> i.e. with the ability to collapse and expand entries. because this is basically a big list of dictionaries like [{username: joe, count: 671, activity: [{first thing he did, also a nested dict thing}, {second thing he did}] yadda yadda.
[18:03:31] <xheimlich> probably easy to find "components" (for react or whatever) that do the json pretty-viewing. maybe there's even vanilla js that does so. But what would be best is a lightweight solution that speaks in Python.
[18:03:48] *** Joins: foobaz212 (~foobaz212@152.37.103.80)
[18:03:49] *** Quits: tomeaton17 (~tomeaton1@2a0c:5bc0:40:2e2f:2ce3:6930:c948:771c) (Quit: Client closed)
[18:03:51] *** Quits: jeho (~jehoshaph@user/jehoshaphat) (Ping timeout: 252 seconds)
[18:06:19] <SnoopJ> xheimlich, "speaks in Python?"
[18:06:25] *** Joins: very_sneaky (~very_snea@user/very-sneaky/x-7432109)
[18:06:36] *** Quits: ericleer (~ericleer@dhcp-077-249-173-130.chello.nl) (Ping timeout: 240 seconds)
[18:06:49] *** Joins: gitesh (uid423739@id-423739.ilkley.irccloud.com)
[18:07:21] <twb> xheimlich: so you basically want pygments?
[18:08:07] <twb> Here is an existing site using pygments in python2: http://ix.io/3Tap/py
[18:08:37] *** Joins: soju-test-user (~soju-test@lfbn-idf2-1-1140-121.w90-92.abo.wanadoo.fr)
[18:08:56] <twb> You'd basically use json.dumps with whitespace/wrapping on, then feed that to pygments saying "this is json" or "this is js", and "give me HTML output"
[18:09:16] *** Quits: widp (~widp@124.123.106.12) (Remote host closed the connection)
[18:09:28] <twb> It's not nearly as nice as e.g. firefox's native json viewer, but I guess com.android.chrome doesn't have that?
[18:09:51] <xheimlich> more like iOS Safari.
[18:10:00] *** Joins: ericleer (~ericleer@dhcp-077-249-173-130.chello.nl)
[18:10:17] <xheimlich> I think this is a good enough fix. I didn't want to spend more than an hour on it.
[18:10:20] <xheimlich> Thanks a lot!
[18:10:28] *** Quits: revolve (~u0_a227@cpc100838-bagu15-2-0-cust672.1-3.cable.virginm.net) (Read error: Connection reset by peer)
[18:10:39] <twb> https://chromeenterprise.google/static/json/policy_templates_en-US.json  is too big for that website, but...
[18:10:46] <SnoopJ> bpaste uses pygments as well (but I don't think it provides folding)
[18:11:09] <twb> http://ix.io/3Taz/json here is an example render of a subset
[18:11:13] <xheimlich> folding would be ideal, but I don't want to get lost in a tangent.
[18:11:21] <twb> Hrm that looks wrong
[18:11:30] <xheimlich> I think Pygments fills my need. Thanks again.
[18:11:42] *** Joins: Henry_ (~mahengrui@user/mahengrui1)
[18:11:50] <twb> Apparently ix.io in json mode is broken, haha
[18:12:00] <twb> http://ix.io/3Taz/js  shows what I expected
[18:12:26] *** Quits: barry1 (~Thunderbi@222.129.35.38) (Quit: barry1)
[18:12:33] <twb> And yeah -- no js folding AFAIK
[18:12:55] <twb> I daresay there's better options but pygments handles my own humble needs :-)
[18:14:01] *** Joins: jay-m1262 (~jay-m@gateway/vpn/pia/jay-m126)
[18:14:14] <xheimlich> we have frontend developers and an intranet is in the horizon but right now it's all hands push this to the finishing line with likely customers waiting.
[18:14:33] *** Quits: white2 (~mahengrui@user/mahengrui1) (Ping timeout: 268 seconds)
[18:16:04] *** Joins: tuskkk____ (uid18470@id-18470.tinside.irccloud.com)
[18:16:08] <xheimlich> this logging already is a makeshift solution. Logging should be handled by whomever calls me, since they have way more information than what they send me.
[18:16:37] *** Quits: wovixo (~wovixo@128.104.205.49) (Quit: Leaving)
[18:16:42] *** Quits: herjazz (~herjazz@p10295192-ipngn22201marunouchi.tokyo.ocn.ne.jp) (Quit: leaving)
[18:17:21] *** Joins: widp (~widp@124.123.106.12)
[18:17:39] *** Quits: theseb (~theseb@47-220-214-54.cnrocmta03.res.dyn.suddenlink.net) (Quit: Leaving)
[18:17:50] <xheimlich> also my mongo collection is called "temp_habberdashery"
[18:18:34] *** Joins: slowButPresent (~slowButPr@user/slowbutpresent)
[18:18:53] <xheimlich> pygments is simple as heck, let me just see how much it weighs in dependencies.
[18:20:04] <xheimlich> (simple= good)
[18:20:42] *** Quits: CatCow (~wtf_over@c-73-96-109-206.hsd1.or.comcast.net) (Quit: My MacBook Air has gone to sleep. ZZZzzzâ€¦)
[18:20:51] <grym> it's the de facto standard for a reason, yep
[18:21:03] *** Joins: a1eaiactaest (~a1eaiacta@user/a1eaiactaest)
[18:21:10] *** Joins: torswq (~torswq@190.107.187.114)
[18:21:11] *** Joins: tWqaq (~tWqaq@240e:389:5d41:5900:1d1b:d1f1:a0d3:647c)
[18:21:33] *** Quits: torswq (~torswq@190.107.187.114) (Quit: Leaving)
[18:22:16] *** Quits: vaaqif (~vaaqif_3@cpc151159-smal19-2-0-cust83.19-1.cable.virginm.net) (Read error: Connection reset by peer)
[18:22:28] *** Joins: revolve (~u0_a227@cpc100838-bagu15-2-0-cust672.1-3.cable.virginm.net)
[18:22:36] *** Joins: nuclearg1 (~nucleargr@user/nuclearg1)
[18:22:45] <ericleer> :q
[18:22:48] <xheimlich> I like this style of API where in basic use cases you can just pass default instances of objects. Quickstart says print(highlight(code, PythonLexer(), HtmlFormatter())) # I wish scikit-learn et caterva were like this.
[18:22:53] *** Quits: jay-m1262 (~jay-m@gateway/vpn/pia/jay-m126) (Ping timeout: 256 seconds)
[18:23:09] *** Quits: NoelFlantier3 (~Hubert@195.201.244.189) (Remote host closed the connection)
[18:23:31] *** Joins: NoelFlantier3 (~Hubert@195.201.244.189)
[18:23:41] *** Joins: wovixo (~wovixo@128.104.205.49)
[18:23:42] *** Quits: Elzington_ (~Elzington@87.249.134.24) (Quit: Leaving)
[18:24:48] *** Joins: gambl0re (~gambl0re@2607:fea8:a59f:c360::81cb)
[18:25:22] *** Joins: Elzington (~Elzington@87.249.134.24)
[18:25:30] *** Joins: zerotypic (~zerotypic@165.173.19.147)
[18:25:33] <xheimlich> xs = fit_transform(Xtrain, TruncatedSVD(20), KernelSVM(kernel="rbf") # lipsmack muah
[18:25:56] <xheimlich> or something.
[18:26:47] *** Quits: marduk (~marduk@99-122-3-133.lightspeed.nsvltn.sbcglobal.net) (Quit: The Lounge - https://thelounge.chat)
[18:26:51] *** Quits: mon_aaraj (~MonAaraj@user/mon-aaraj/x-4416475) (Ping timeout: 256 seconds)
[18:27:24] *** Joins: sudomann (~sudomann@98.219.211.182)
[18:27:30] *** Quits: nuclearg1 (~nucleargr@user/nuclearg1) (Ping timeout: 268 seconds)
[18:27:38] *** Joins: bahamas (~lucian@86.120.77.115)
[18:27:51] *** Joins: han-solo (~han-solo@178.248.114.109)
[18:28:12] *** Quits: acidsys (~LSD@2a03:4000:55:d20::3) (Excess Flood)
[18:28:40] *** Joins: marduk (~marduk@99-122-3-133.lightspeed.nsvltn.sbcglobal.net)
[18:28:44] *** Joins: acidsys (~LSD@2a03:4000:55:d20::3)
[18:28:59] *** Quits: Barones (~Barones@user/Barones) (Ping timeout: 250 seconds)
[18:30:26] *** Joins: frmlof (~frmlof@70.243.238.191)
[18:30:45] *** Joins: vaaqif (~vaaqif@cpc151159-smal19-2-0-cust83.19-1.cable.virginm.net)
[18:31:44] *** Quits: frmlof (~frmlof@70.243.238.191) (Client Quit)
[18:31:57] <Syzygy> can I just run __init__() again after my class has been initialized or do I need to create some reinitialize() function?
[18:32:07] *** Quits: cdown (~cdown@cpe-98-15-154-102.hvc.res.rr.com) (Remote host closed the connection)
[18:32:32] *** Joins: cdown (~cdown@cpe-98-15-154-102.hvc.res.rr.com)
[18:32:43] <grym> Syzygy: running init twice is very, very unusual
[18:32:44] *** Joins: SaltHillStroller (~SaltHillS@206.223.160.26)
[18:32:54] <xheimlich> it's just a function. but I tend to split my inits in methods.
[18:33:00] <grym> Syzygy: can you say more about why you're finding that you want to?
[18:33:04] *** Quits: vlm (~vlm@user/vlm) (Read error: Connection reset by peer)
[18:33:05] *** Quits: ericleer (~ericleer@dhcp-077-249-173-130.chello.nl) (Ping timeout: 256 seconds)
[18:33:51] <xheimlich> first self.this = this_you_passed etc. then self.do_something(self.this) self.do_something_else(self.that)
[18:34:02] *** Joins: Vornicus (~Vornicus@2603-8000-5d07-7ef0-8144-30ff-3cf9-8b7f.res6.spectrum.com)
[18:34:07] <Syzygy> sure. I have a mysql database running on kubernetes, on the same cluster I have a different workload which acts as an API to the mysql service. After running for what seems like months, the connection gets lost because it's a weak reference.
[18:34:14] <xheimlich> then my little partial init methods also set object-wide attributes.
[18:34:23] <Syzygy> this is not part of my code, but instead the code of the mysql connection library.
[18:34:50] *** Joins: merrinx (~merrinx@ti0028a400-3686.bb.online.no)
[18:35:21] *** Quits: zeudap_ (~zeudap@45.91.23.27) (Ping timeout: 256 seconds)
[18:35:22] <xheimlich> maybe "def __init__(self, *args, **kwargs): self.i_push_my_fingers_into_my_eyes(*args, **kwargs) and then move logic there.
[18:35:22] <Syzygy> so when I try/except the reference error, I set mydb to None and try to reestablish the connection. that's exactly what my __init__() does/
[18:35:22] <grym> Syzygy: i'm used to (re)opening a conn when i want to do something, instead of persisting one forever
[18:35:34] <grym> Syzygy: (which i do with a context manager, usually)
[18:35:36] <xheimlich> (something sensibly named, self documented)
[18:35:41] *** Quits: rootx74 (~rootx74@user/rootx74) (Quit: Leaving)
[18:36:00] <Syzygy> xheimlich, definitely and option, but is it necessary?
[18:36:12] <xheimlich> grym: Streamlit performance goes down the drain like that. There's use cases.
[18:36:26] <grym> xheimlich: what's streamlit
[18:36:28] <Syzygy> grym, makes sense... I just don't know when I should close and reopen? like... with every request?
[18:36:36] <xheimlich> (Streamlit is "reactive" more or less like a spreadsheet, but it has a persistent state object)
[18:36:44] *** Joins: korg815 (~korg815@user/korg815)
[18:36:45] <grym> xheimlich: is it a mysql orm?
[18:36:57] *** Quits: cdown (~cdown@cpe-98-15-154-102.hvc.res.rr.com) (Remote host closed the connection)
[18:37:11] *** Joins: cdown (~cdown@cpe-98-15-154-102.hvc.res.rr.com)
[18:37:15] <xheimlich> grym: Streamlit is how you throw together something in 8 business days and then people think you have a big product and then you keep them waiting for six months of heavy coding and redesigning and more coding.
[18:37:25] <xheimlich> grym: sqlite conn.
[18:37:32] <Syzygy> streamlit is web based datavis for python.
[18:37:38] *** Joins: vlado (~vlado@2800:484:3587:3c90:8bf1:66d4:72a6:4f9c)
[18:38:05] <xheimlich> Streamlit is so, so, so good it kind of sucks, because it just about touches into a level of magic that isn't actually possible.
[18:38:36] <xheimlich> Like having telekinesis, but only for miligram-weighted objects within 2 centimeters from your eyes.
[18:39:02] *** Quits: cdown (~cdown@cpe-98-15-154-102.hvc.res.rr.com) (Remote host closed the connection)
[18:39:15] *** Joins: cdown (~cdown@cpe-98-15-154-102.hvc.res.rr.com)
[18:39:26] *** Joins: rootx74 (~rootx74@user/rootx74)
[18:40:46] *** Quits: KidBeta (~KidBeta@user/kidbeta) (Ping timeout: 245 seconds)
[18:42:46] *** Quits: cdown (~cdown@cpe-98-15-154-102.hvc.res.rr.com) (Remote host closed the connection)
[18:43:00] *** Joins: cdown (~cdown@cpe-98-15-154-102.hvc.res.rr.com)
[18:43:17] *** Quits: zerotypic (~zerotypic@165.173.19.147) (Ping timeout: 256 seconds)
[18:43:25] *** Quits: ghost43_ (~ghost43@gateway/tor-sasl/ghost43) (Remote host closed the connection)
[18:43:27] *** Quits: storm__ (~storm@88.242.225.100) (Remote host closed the connection)
[18:43:28] *** Joins: jeho (~jehoshaph@user/jehoshaphat)
[18:44:12] *** Joins: ghost43 (~ghost43@gateway/tor-sasl/ghost43)
[18:44:19] *** Quits: mefistofeles (~mefistofe@user/mefistofeles) (Remote host closed the connection)
[18:44:26] *** Quits: cypostres (~cypostres@user/cypostres) (Quit: Leaving)
[18:44:41] *** Quits: ghost43 (~ghost43@gateway/tor-sasl/ghost43) (Remote host closed the connection)
[18:46:00] *** Joins: Csm319_ (~csm3105@143.red-83-48-84.staticip.rima-tde.net)
[18:46:40] *** Quits: cm315 (~csm3105@143.red-83-48-84.staticip.rima-tde.net) (Read error: Connection reset by peer)
[18:47:25] *** Joins: ghost43 (~ghost43@gateway/tor-sasl/ghost43)
[18:48:17] *** Quits: a1eaiactaest (~a1eaiacta@user/a1eaiactaest) (Ping timeout: 240 seconds)
[18:48:33] *** Joins: qlixed (~qlixed@181.44.129.13)
[18:49:18] *** Quits: han-solo (~han-solo@178.248.114.109) (Quit: leaving)
[18:49:50] *** Joins: han-solo (~han-solo@user/han-solo)
[18:50:35] *** Quits: Csm319_ (~csm3105@143.red-83-48-84.staticip.rima-tde.net) (Ping timeout: 252 seconds)
[18:51:31] *** Joins: akk (~akk@75-161-61-130.albq.qwest.net)
[18:51:31] *** Quits: cdown (~cdown@cpe-98-15-154-102.hvc.res.rr.com) (Remote host closed the connection)
[18:51:43] *** Quits: Midjak (~Midjak@82.66.147.146) (Quit: This computer has gone to sleep)
[18:51:45] *** Joins: cdown (~cdown@cpe-98-15-154-102.hvc.res.rr.com)
[18:52:23] *** Quits: Axy (~Axy@user/axy) (Ping timeout: 250 seconds)
[18:52:35] *** Joins: jero98772 (~jero98772@2800:484:1d80:d8ce:efcc:cbb3:7f2a:6dff)
[18:52:38] *** Joins: Axy (~Axy@user/axy)
[18:52:52] *** Quits: foobaz212 (~foobaz212@152.37.103.80) (Quit: Client closed)
[18:53:06] *** Joins: foobaz212 (~foobaz212@152.37.103.80)
[18:53:10] *** Joins: ayustae (Thunderbir@gateway/vpn/protonvpn/ayustae)
[18:53:31] *** Quits: grooverman_ (~grooverma@152.250.149.49) (Read error: Connection reset by peer)
[18:53:37] *** Quits: kts (~kts@103.73.237.196) (Quit: Konversation terminated!)
[18:53:47] *** Joins: vlm (~vlm@user/vlm)
[18:54:35] *** Quits: jdavfsxd (~rvgzuuqp@gateway/tor-sasl/rvgzuuqp) (Quit: jdavfsxd)
[18:54:48] *** Joins: grooverman (~grooverma@152.250.149.217)
[18:57:00] *** Quits: Pickchea (~private@user/pickchea) (Ping timeout: 240 seconds)
[18:57:09] *** Quits: thanatos_jj (~Thanatos@ec2-54-148-37-124.us-west-2.compute.amazonaws.com) (Ping timeout: 250 seconds)
[18:57:13] *** Quits: schumaml (~schumaml@dslb-178-007-201-036.178.007.pools.vodafone-ip.de) (Ping timeout: 256 seconds)
[18:58:35] *** Quits: foobaz212 (~foobaz212@152.37.103.80) (Ping timeout: 256 seconds)
[18:58:44] *** Joins: thanatos_jj (~Thanatos@ec2-54-148-37-124.us-west-2.compute.amazonaws.com)
[18:58:49] *** Joins: nuclearg1 (~nucleargr@user/nuclearg1)
[19:00:07] *** Quits: widp (~widp@124.123.106.12) (Read error: Connection reset by peer)
[19:00:16] *** Quits: vlm (~vlm@user/vlm) (Quit: "")
[19:00:39] *** Joins: vlm (~vlm@user/vlm)
[19:01:03] *** Quits: thanatos_jj (~Thanatos@ec2-54-148-37-124.us-west-2.compute.amazonaws.com) (Remote host closed the connection)
[19:01:45] *** Joins: zerotypic (~zerotypic@165.173.19.147)
[19:02:00] *** Joins: frmlof (~frmlof@70.243.238.191)
[19:02:17] *** Quits: ThanatosJ (~Thanatos@105.112.182.96) (Ping timeout: 240 seconds)
[19:03:08] *** Joins: Thanatos (~Thanatos@ec2-54-148-37-124.us-west-2.compute.amazonaws.com)
[19:03:16] <wyre> are pydantic and marshmallow alternatives?
[19:03:26] <wyre> I mean ... are both used for the very same? ðŸ¤”
[19:03:27] *** Quits: nuclearg1 (~nucleargr@user/nuclearg1) (Ping timeout: 256 seconds)
[19:04:21] *** Joins: hexenbane9 (~hexenbane@fixed-187-188-14-118.totalplay.net)
[19:04:37] *** Joins: rpkilby (~rpkilby@c-24-20-208-106.hsd1.or.comcast.net)
[19:04:55] *** Quits: ayustae (Thunderbir@gateway/vpn/protonvpn/ayustae) (Quit: ayustae)
[19:05:09] *** Joins: ThanatosJ (~Thanatos@105.112.182.96)
[19:06:02] *** Quits: acidsys (~LSD@2a03:4000:55:d20::3) (Excess Flood)
[19:06:34] *** Joins: acidsys (~LSD@2a03:4000:55:d20::3)
[19:06:41] *** Joins: widp (~widp@124.123.106.12)
[19:07:29] <SnoopJ> wyre, there is some overlap in features between the two but I wouldn't say they're the "very same"
[19:08:15] *** Joins: hesse (~TheHerman@gateway/tor-sasl/thehermann)
[19:08:33] *** Quits: TheHermann (~TheHerman@gateway/tor-sasl/thehermann) (Remote host closed the connection)
[19:08:57] *** Quits: vlm (~vlm@user/vlm) (Read error: Connection reset by peer)
[19:09:18] *** Quits: Henry_ (~mahengrui@user/mahengrui1) (Ping timeout: 260 seconds)
[19:09:40] <wyre> SnoopJ, what I can see is both are used to create schemas for data validation according to python types, aren't they?
[19:09:46] *** Joins: pvergain1 (~Thunderbi@2a01:e0a:223:690:a9ce:1cfd:6f06:91b5)
[19:10:11] *** Quits: pvergain (~Thunderbi@2a01:e0a:223:690:a9ce:1cfd:6f06:91b5) (Read error: Connection reset by peer)
[19:10:11] *** pvergain1 is now known as pvergain
[19:10:12] *** Quits: rpkilby (~rpkilby@c-24-20-208-106.hsd1.or.comcast.net) (Ping timeout: 240 seconds)
[19:10:32] *** Quits: wakeup (~wakeup@user/wakeup) (Quit: Client closed)
[19:10:45] <SnoopJ> wyre, marshmallow is built with converting to/from serialized representations as a core concern. In Pydantic, these features are present, but they aren't the library's reason for existence.
[19:11:36] *** Quits: stockholm (~Andreas@p200300d2c70c00004c35e0b4ad8e7716.dip0.t-ipconnect.de) (Ping timeout: 245 seconds)
[19:11:51] *** Quits: SallyAhaj (~SallyAhaj@user/sallyahaj) (Remote host closed the connection)
[19:12:01] <xheimlich> standard explanation is that pydantic is a parser.
[19:12:07] <SnoopJ> I would not say that, no
[19:12:08] *** Joins: vlm (~vlm@user/vlm)
[19:13:16] <xheimlich> I have this dream of generating Arduino-C(++ I think) driven by http calls in json.
[19:16:30] *** Joins: ericleer (~ericleer@dhcp-077-249-173-130.chello.nl)
[19:20:08] <wyre> SnoopJ, so I don't need Marshmallow if I'm going to use pydantic?
[19:20:15] *** Joins: mefistofeles (~mefistofe@user/mefistofeles)
[19:20:41] *** Quits: ericleer (~ericleer@dhcp-077-249-173-130.chello.nl) (Ping timeout: 256 seconds)
[19:20:47] <SnoopJ> wyre, you can use pydantic without marshmallow, yes
[19:20:50] *** Joins: vakera_pingveno (~dan@2600:1700:21f9:b150::10)
[19:20:59] <SnoopJ> (if you couldn't, it would be weird to have them as separate libraries)
[19:21:00] *** Joins: magla (~gelignite@55d4decd.access.ecotel.net)
[19:21:34] <wyre> SnoopJ, and will I able to still convert to/from serialized representations with pydantic?
[19:22:54] *** Quits: Mechanismus (~LabMonkey@206.255.106.67) (Quit: Leaving)
[19:23:02] *** Quits: rootx74 (~rootx74@user/rootx74) (Ping timeout: 252 seconds)
[19:23:28] *** Joins: stockholm (~Andreas@p200300d2c70c00004c35e0b4ad8e7716.dip0.t-ipconnect.de)
[19:24:12] *** Joins: tobybl (~tobybl@227.192.115.87.dyn.plus.net)
[19:24:26] <SnoopJ> wyre, it has support for to/from dicts and JSON, but if you need other functionality you'll need to either write it yourself or use another tool with it.
[19:24:39] *** Joins: ma7mad (~ma7mad@ip5f5af6bb.dynamic.kabel-deutschland.de)
[19:25:27] <wyre> SnoopJ, may you give some functionality as example?
[19:25:47] <SnoopJ> wyre, have you read the documentation? There is an entire section dedicated to exporting: https://pydantic-docs.helpmanual.io/usage/exporting_models/
[19:25:53] <SnoopJ> (with examples)
[19:26:03] *** Joins: cdown_ (~cdown@163.114.131.1)
[19:26:18] *** Joins: foobaz212 (~foobaz212@152.37.103.80)
[19:26:36] <wyre> SnoopJ, well for models I was planning just using SQLAlchemy ðŸ¤”
[19:27:29] *** Quits: bahamas (~lucian@86.120.77.115) (Ping timeout: 256 seconds)
[19:27:30] <han-solo> pydantic is for scehma
[19:27:30] <wyre> but I'm not sure as well if pydantic models are equivalent to SQLAlchemy models
[19:27:43] <han-solo> schema*
[19:27:47] *** Joins: xkuru (~xkuru@user/xkuru)
[19:28:12] *** launchd is now known as l
[19:28:32] *** Quits: cdown (~cdown@cpe-98-15-154-102.hvc.res.rr.com) (Ping timeout: 252 seconds)
[19:28:37] *** Quits: amogorkon (~amogorkon@user/amogorkon) (Ping timeout: 240 seconds)
[19:28:44] *** cdown_ is now known as cdown
[19:28:58] <wyre> I'm a little confused because of all these different tools ... I'd say I can see how the concepts are linked ... (I mean Models and Schemas) but I'm not sure what tool is the most appropriate for each
[19:29:11] *** Joins: d3sync- (~d3sync@212.251.16.252.dsl.dyn.forthnet.gr)
[19:29:49] *** Joins: schumaml (~schumaml@dslb-178-007-201-036.178.007.pools.vodafone-ip.de)
[19:30:12] *** Quits: roxfan (~roxfan@2a02:a03f:a2be:4f00:6d0c:3ed5:99e5:49fe) (Ping timeout: 252 seconds)
[19:30:14] <han-solo> https://fastapi.tiangolo.com/tutorial/sql-databases/ # you can see them used together
[19:30:24] <shad> wyre: i use dataclass with Flask-SQLAlchemy for json marshmallin'
[19:30:45] * SnoopJ has never used Pydantic's schema functionality, but finds it helpful for data modeling
[19:30:50] *** Quits: hesse (~TheHerman@gateway/tor-sasl/thehermann) (Quit: Leaving)
[19:30:55] <shad> https://docs.sqlalchemy.org/en/14/orm/mapping_styles.html#imperative-mapping-with-dataclasses-and-attrs
[19:31:01] *** Joins: hesse (~TheHerman@gateway/tor-sasl/thehermann)
[19:31:18] *** Quits: sawk (~quassel@78.6.80.66) (Ping timeout: 252 seconds)
[19:31:23] <wyre> han-solo, sure! I was reading this one actually, but I'm not sure if that article combines pydantic models with sqlalchemy models or if it presents the pydantic model as an alternative to sqlalchemy ones
[19:31:26] <shad> tldr: annotate your models with @dataclass and boom they become json serializable
[19:31:27] *** Quits: foobaz212 (~foobaz212@152.37.103.80) (Ping timeout: 256 seconds)
[19:31:35] *** Joins: rootx74 (~rootx74@user/rootx74)
[19:31:51] *** Joins: nuclearg1 (~nucleargr@user/nuclearg1)
[19:31:51] *** Quits: sudomann (~sudomann@98.219.211.182) (Ping timeout: 252 seconds)
[19:32:01] *** Quits: d3sync (~d3sync@212.251.16.252.dsl.dyn.forthnet.gr) (Ping timeout: 256 seconds)
[19:32:12] <han-solo> wyre: no, they use it together, they are not exactly alternatives
[19:32:20] *** Joins: rpkilby (~rpkilby@c-24-20-208-106.hsd1.or.comcast.net)
[19:32:27] *** Quits: rootx74 (~rootx74@user/rootx74) (Remote host closed the connection)
[19:32:28] *** Quits: AquaL1te (~AquaL1te@user/aqual1te) (Quit: leaving)
[19:32:39] *** Joins: a1eaiactaest (~a1eaiacta@user/a1eaiactaest)
[19:32:54] *** Joins: rootx74 (~rootx74@user/rootx74)
[19:33:08] <wyre> han-solo, and this is not a little of duplication? I mean ... could not I just use a single model?
[19:33:23] *** hesse is now known as TheHermann
[19:33:36] <SnoopJ> the parts that are common to each of these libraries will be duplicated. The parts that are not common will not be duplicated
[19:33:58] <SnoopJ> (there's not really any harm done by duplicated code that you don't use, though)
[19:34:02] *** Quits: rootx74 (~rootx74@user/rootx74) (Max SendQ exceeded)
[19:34:28] *** Joins: rootx74 (~rootx74@user/rootx74)
[19:35:12] <wyre> SnoopJ, I'm not thinking in a potential harm, rather I don't see this so elegant ðŸ¤”
[19:35:26] <SnoopJ> if you say so
[19:35:40] *** Quits: rootx74 (~rootx74@user/rootx74) (Max SendQ exceeded)
[19:35:40] *** Quits: vlm (~vlm@user/vlm) (Quit: "")
[19:35:48] <mav`rik> wyre: duplication for different purposes though. The pydantic schema is used for parsing and normalisation, the sqla one for describing the backend model. I'm not 100% sure I'd choose to tie the two together, otherwise your external model (as exposed to a REST client) would be the same as the internal one. That feels weird to me
[19:35:58] <wyre> I mean ... should I create two models then? one with SQLAlchemy and another one with pydantic/marshmallow?
[19:36:03] *** Joins: vlm (~vlm@user/vlm)
[19:36:09] *** Joins: rootx74 (~rootx74@user/rootx74)
[19:36:13] *** Joins: ghost43_ (~ghost43@gateway/tor-sasl/ghost43)
[19:36:16] <wyre> and will both look pretty similar?
[19:36:27] <grym> wyre: https://sqlmodel.tiangolo.com/ why not both at the same time
[19:36:46] <wyre> I'm making the difference between Model and Schema, btw
[19:36:56] *** Quits: rootx74 (~rootx74@user/rootx74) (Max SendQ exceeded)
[19:37:07] *** Quits: schumaml (~schumaml@dslb-178-007-201-036.178.007.pools.vodafone-ip.de) (Ping timeout: 256 seconds)
[19:37:26] *** Joins: dreamon (~dreamon@ppp-88-217-83-128.dynamic.mnet-online.de)
[19:37:42] *** Joins: gr33n7007h (~gr33n7007@user/gr33n7007h)
[19:38:05] *** Joins: barry1 (~Thunderbi@222.129.35.38)
[19:38:11] <SnoopJ> wyre, you should figure out what functionality you need first, then find a library that meets your needs
[19:38:57] *** Joins: [itchyjunk] (~itchyjunk@user/itchyjunk/x-7353470)
[19:39:03] *** Joins: schumaml (~schumaml@dslb-178-007-207-113.178.007.pools.vodafone-ip.de)
[19:39:15] *** Quits: ghost43 (~ghost43@gateway/tor-sasl/ghost43) (Ping timeout: 240 seconds)
[19:39:24] <deniska> Any sufficiently complicated FastAPI program contains an ad hoc, informally-specified, bug-ridden, slow implementation of half of Django REST Framework :P
[19:39:29] <wyre> mav`rik, but you said pydantic Schema ... so is a schema also a model? ðŸ¤”
[19:39:30] <han-solo> sqlmodel seems perfect for this
[19:39:44] *** Quits: Strom (strom@fedora/strom) ()
[19:40:42] *** Quits: barry1 (~Thunderbi@222.129.35.38) (Client Quit)
[19:41:08] <wyre> sure, sqlmodel looks good, but I guess if I want to use it I will be forced to use fastapi instead flask, won't I?
[19:41:17] *** Joins: Strom (strom@fedora/strom)
[19:41:21] *** Quits: a1eaiactaest (~a1eaiacta@user/a1eaiactaest) (Ping timeout: 250 seconds)
[19:42:13] *** Quits: rpkilby (~rpkilby@c-24-20-208-106.hsd1.or.comcast.net) (Ping timeout: 256 seconds)
[19:42:24] <grym> no, but it's designed to work with fastAPI in a particularly nice way
[19:42:27] <grym> but it's not required
[19:42:47] *** Quits: purple_cthulhu (~rax@185.108.96.17) (Ping timeout: 256 seconds)
[19:43:11] *** Quits: bss (bss@rie.incorporeal.org) (Quit: brb)
[19:43:19] <mav`rik> wyre: /shrug/ A model defines a schema, I guess. Terminology is "fun"
[19:43:29] *** Joins: barry1 (~Thunderbi@222.129.35.38)
[19:43:31] *** Quits: schumaml (~schumaml@dslb-178-007-207-113.178.007.pools.vodafone-ip.de) (Ping timeout: 250 seconds)
[19:43:42] *** Joins: sudomann (~sudomann@98.219.211.182)
[19:43:46] <mav`rik> deniska: sure, but REST is a flawed model... discuss ;)
[19:44:13] *** Joins: bss (bss@rie.incorporeal.org)
[19:44:18] <SnoopJ> Every Pydantic Model induces a Schema, is how I think about it
[19:44:19] <wyre> also, mav`rik ... why could not be used the same? I mean ... you could just define a model and use it for both ... parsing and normalisation and also for describing the backend structure ...
[19:44:24] <deniska> mav`rik: As a descriptivist, I read "REST" as "returns jsons and maybe non-2xx codes on errors"
[19:44:48] *** Joins: Stench (~Staunch@c-24-7-237-208.hsd1.mn.comcast.net)
[19:44:51] <SnoopJ> wyre, that isn't very helpful to the backend if the backend doesn't speak [specific modeling library]
[19:44:58] <SnoopJ> this is the point of a schema
[19:45:19] *** Joins: schumaml (~schumaml@dslb-094-216-173-113.094.216.pools.vodafone-ip.de)
[19:45:56] <grym> deniska: > and behind every framework, there's a langauge trying to get out, to protect semantic ideas, then syntax ones, and then support the logical ideas that we have...
[19:46:47] <wyre> so I guess pydantic is not a `specific modeling library`, ain't it?
[19:46:55] <vaaqif> Is there a simpler way of writing out the following if statement: `if x == 'hello' or y == 'hello:`
[19:46:57] <ba> Anyone have recommendations for intermediate/expert level Python books? A coworker is at a beginner/intermediate level, wants to skill up.
[19:46:59] <SnoopJ> wyre, yes
[19:47:11] <wyre> SnoopJ, but has both? models and schemas?
[19:47:14] *** Quits: luigibu (~luigi@93.176.153.88) (Quit: WeeChat 3.4.1)
[19:47:15] <SnoopJ> wyre, correct
[19:47:30] <SnoopJ> ba, "Think Python" and "Automate the Boring Stuff with Python" are both free and well-liked by this community
[19:47:33] *** Joins: squirrel (uid529456@user/squirrel)
[19:47:45] <deniska> Honestly I'd rather see `return OutputThing(id=DBThing.id, name=DBThing.name)` in the view handler, than jump around inheritance chains of FancyModelBase FancyModelCreate FancyModelRead
[19:47:48] *** Quits: Staunch (~Staunch@137.83.202.220) (Ping timeout: 252 seconds)
[19:47:50] <wyre> so ... what are pydantic models for if it's not a specific modeling library? just to provide a platform for schemas? ðŸ¤”
[19:48:11] <SnoopJ> I don't understand the question
[19:48:15] <jinsun__> vaaqif: if "hello" in {x, y}
[19:48:16] *** Joins: ericleer (~ericleer@dhcp-077-249-173-130.chello.nl)
[19:48:35] <mav`rik> wyre: How would you expect to move from "user-provided JSON/form-fields" to "Data has this specific shape as an object" and the inverse?
[19:48:40] <wyre> SnoopJ, what are models in pydantic for? Apparently for data validation you just need a Schema
[19:48:43] <jinsun__> vaaqif: assuming both are hashable, otherwise make list/tuple instead of set
[19:48:53] <han-solo> ba: i liked fluent python too
[19:48:58] <SnoopJ> wyre, for defining a representation of data.
[19:48:59] <grym> wyre: pydantic makes classes; what you choose to do with those classes is really up to you
[19:49:14] <squirrel> say, is there a ready context manager such as this in multiprocessing? https://bpa.st/W26Q
[19:49:45] <mav`rik> ba: The Python tutorial itself assumes people have an understanding of programming in general - https://docs.python.org/3/tutorial/index.html
[19:50:08] <vaaqif> jinsun__ thank you very much
[19:50:36] <SnoopJ> ba, oh, you said your coworker is already basic/intermediate, I misread. Fluent Python has a 2nd edition coming in May (it's available online already), that might be precisely what you're looking for here.
[19:51:12] <ba> SnoopJ: Ooh that does sound pretty perfect, thank you.
[19:51:28] *** Quits: ghost43_ (~ghost43@gateway/tor-sasl/ghost43) (Remote host closed the connection)
[19:51:34] <SnoopJ> to be clear, those other books are still good reads even at that level :)
[19:51:52] *** Joins: ghost43 (~ghost43@gateway/tor-sasl/ghost43)
[19:52:42] <w0rp> I got asked to rewrite `foo = value1 if cond1 else value2 if cond2 else default` as multiple assignments to `foo` in `if ... elif ... else ...` and I did it for now because I don't have the time to convince the person who asked me how good ternary expressions in Python are.
[19:52:59] *** Quits: ericleer (~ericleer@dhcp-077-249-173-130.chello.nl) (Ping timeout: 256 seconds)
[19:53:03] <deniska> nesting two ternaries is too much
[19:53:17] <ba> han-solo: mav`rik thank you!
[19:53:22] *** Joins: Viewday1152 (~Viewday@user/viewday)
[19:53:34] *** Joins: Pickchea (~private@user/pickchea)
[19:53:36] <w0rp> Python is the only language I know where the syntax for multiple ternary expressions is easy to read.
[19:53:40] <phy1729> I like ternaries, but I wouldn't nest them
[19:53:54] <wyre> grym, so apparently pydantic has models(schemas) not has models and schemas, right?
[19:54:04] <SnoopJ> wyre, a model and a schema are not the same thing
[19:54:29] *** Joins: dsrt^ (~dsrt@96-67-120-105-static.hfc.comcastbusiness.net)
[19:54:37] <SnoopJ> but Pydantic lets you render schema from your models: https://pydantic-docs.helpmanual.io/usage/schema/
[19:54:44] <wyre> I'd say so ... but I can't see here as exchangeable terms https://fastapi.tiangolo.com/tutorial/sql-databases/#create-pydantic-models-schemas-for-reading-returning
[19:54:47] *** Quits: schumaml (~schumaml@dslb-094-216-173-113.094.216.pools.vodafone-ip.de) (Ping timeout: 250 seconds)
[19:54:56] *** Quits: Viewday115 (~Viewday@user/viewday) (Read error: Connection reset by peer)
[19:54:56] *** Viewday1152 is now known as Viewday115
[19:55:00] *** Quits: jeho (~jehoshaph@user/jehoshaphat) (Quit: Leaving)
[19:55:22] <SnoopJ> you can say so if you'd like, just be aware that you will confuse probably everyone you talk to abotu it
[19:55:28] <SnoopJ> (because they aren't)
[19:55:57] *** Quits: ma7mad (~ma7mad@ip5f5af6bb.dynamic.kabel-deutschland.de) (Quit: Client closed)
[19:56:33] *** Joins: schumaml (~schumaml@dslb-188-104-163-192.188.104.pools.vodafone-ip.de)
[19:56:35] <ba> SnoopJ: where did you read the May release date for the 2nd edition of Fluent Python?
[19:56:46] *** Joins: rpkilby (~rpkilby@c-24-20-208-106.hsd1.or.comcast.net)
[19:56:55] <grym> wyre: pydantic calls one of its base classes `BaseModel`, anyway
[19:57:03] <grym> but that's about the end of it, imo
[19:57:19] *** Joins: rootx74 (~rootx74@user/rootx74)
[19:57:21] *** Joins: purple_cthulhu (~rax@185.108.96.29)
[19:57:29] *** Quits: vantage (~vantage@ip-193-121-152-141.dsl.scarlet.be) (Read error: Connection reset by peer)
[19:57:41] *** Joins: caveman (~caveman@gateway/tor-sasl/caveman)
[19:58:01] <deniska> if you deal with a codebase written by someone who read through fastapi tutorial, then you'll sqlalchemy stuff in models.py, pydantic stuff in schema.py, and zalgo stuff in crud.py
[19:58:11] <deniska> you'll find*
[19:58:14] <ba> SnoopJ: ah sorry, amazon says end of April in the UK. All good! https://www.amazon.co.uk/Fluent-Python-Concise-Effective-Programming/dp/1492056359
[19:58:15] <SnoopJ> ba, that's the date Amazon lists, it could be specific to them. I see that Barnes and Noble is claiming it will be available in April, so maybe there's wiggle room here. Soon
[19:58:58] *** Quits: lispy (~lispy@user/lispy) (Quit: Leaving)
[19:58:59] *** Quits: vlm (~vlm@user/vlm) (Read error: Connection reset by peer)
[19:59:42] <han-solo> i see it as, one describes input/output data and the other describes the db table
[19:59:48] *** Quits: bindu (~bindu@user/bindu) (Remote host closed the connection)
[19:59:51] <wyre> grym, I think the link SnoopJ pasted clarifies the difference between models and schemas, but I cannot avoid thinking in render the schemas from the specific modeling library, though probably pydantic devs want to make pydantic as library modeling agnostic as possible, am I right?
[20:00:07] *** Joins: bindu (~bindu@user/bindu)
[20:00:15] *** Quits: drbeco (~beco@user/beco) (Quit: Leaving)
[20:00:33] <grym> wyre: i have a very hard time understanding what you're trying to say
[20:00:57] <grym> you're using a lot of jargon, and it's hindering, not helping
[20:01:01] *** Quits: magla (~gelignite@55d4decd.access.ecotel.net) (Quit: Stay safe!)
[20:01:09] *** Joins: vlm (~vlm@user/vlm)
[20:01:23] *** Joins: mon_aaraj (~MonAaraj@user/mon-aaraj/x-4416475)
[20:02:45] <wyre> I mean ... if pydantic uses models to render schemas ... it could relay on the modeling-library and use those models, but I guess pydantic devs want to keep pydantic as agnostic as possible
[20:02:58] <grym> sorry, absolutely no idea.
[20:03:24] <SnoopJ> wyre, in this context, a schema is a document that describes the structure of other documents that comply with the schema. So you can *create* a data model in Pydantic and create a schema from your model which other tools can use to do their own validation/etc.
[20:04:36] *** Quits: schumaml (~schumaml@dslb-188-104-163-192.188.104.pools.vodafone-ip.de) (Ping timeout: 240 seconds)
[20:04:45] *** Quits: MajorBiscuit (~MajorBisc@wlan-145-94-218-48.wlan.tudelft.nl) (Ping timeout: 250 seconds)
[20:05:13] *** Joins: ivanf (~ivan@user/ivanf)
[20:06:29] *** Quits: mrwick (~mrwick@user/mrwick) (Ping timeout: 252 seconds)
[20:06:42] *** Joins: Guest4831415 (~Guest4831@wp003.bloomberg.com)
[20:07:04] *** Joins: schumaml (~schumaml@dslb-188-104-182-003.188.104.pools.vodafone-ip.de)
[20:07:33] <wyre> SnoopJ, sure, I think I can see this. The point I'm not getting properly stated is that I'd like to be able to use the modeling-library models (SQLAlchemy models) as those `data model in Pydantic`, but I guess pydantic has to be agnostic (regarding the modeling-library)
[20:07:43] *** Quits: sudomann (~sudomann@98.219.211.182) (Ping timeout: 256 seconds)
[20:07:48] <SnoopJ> I have no idea what any of that means
[20:08:58] <wyre> well, I guess the `Pydantic data model` will has to be the very same than SQLAlchemy model, won't it?
[20:09:09] <wyre> at least ... pretty similar
[20:09:39] <grym> wyre: if you want to write one class that is both a pydantic class and also a sqlalchemy class, use sqlmodel https://sqlmodel.tiangolo.com/ to do so
[20:09:53] <grym> if that's not where you're going then i'm just lost and i'll shut up :)
[20:10:30] *** Quits: thekingofbandit (~thekingof@user/thekingofbandit) (Read error: Connection reset by peer)
[20:10:31] <wyre> grym, sure, that sounds like I'm trying to mean
[20:10:37] *** Quits: kmh (~kmh@2a00:6020:5004:6800:d56f:5ec4:ddd1:e31d) (Read error: Connection reset by peer)
[20:10:48] *** Joins: chowmein__ (~chowmeine@user/chowmeined)
[20:10:54] *** Joins: kmh (~kmh@2a00:6020:5004:6800:5555:27f0:7629:76f0)
[20:10:58] *** Quits: ckdCreations (~ckdCreati@c-73-140-151-116.hsd1.wa.comcast.net) (Read error: Connection reset by peer)
[20:11:03] *** Joins: martums597 (~martums@user/martums)
[20:11:19] *** Joins: thekingofbandit (thekingofb@user/thekingofbandit)
[20:11:30] *** Joins: ckdCreations (~ckdCreati@c-73-140-151-116.hsd1.wa.comcast.net)
[20:11:34] *** Joins: tapeworm (~tapeworm@188.168.50.119)
[20:11:52] <audio> can someone tell me what's wrong with my code? it's not pickling all the data: https://bpa.st/GO7Q
[20:12:54] *** Quits: Guest4831415 (~Guest4831@wp003.bloomberg.com) (Quit: Client closed)
[20:13:35] <mav`rik> audio: it'll only pickle the last, because images/labels is redefined each loop iteration
[20:13:41] *** Quits: flower__ (~archie@217-123-218-6.cable.dynamic.v4.ziggo.nl) (Ping timeout: 245 seconds)
[20:13:48] *** Quits: flower_ (~archie@217-123-218-6.cable.dynamic.v4.ziggo.nl) (Ping timeout: 240 seconds)
[20:13:50] <han-solo> wyre: if you mean similar property names, then yes
[20:14:10] *** Quits: rootx74 (~rootx74@user/rootx74) (Quit: Leaving)
[20:14:12] *** Quits: tapeworm116 (~tapeworm@188.168.50.119) (Ping timeout: 252 seconds)
[20:14:12] *** Quits: martums59 (~martums@user/martums) (Ping timeout: 252 seconds)
[20:14:12] *** Quits: chowmeined (~chowmeine@user/chowmeined) (Ping timeout: 252 seconds)
[20:14:12] *** martums597 is now known as martums59
[20:14:15] <SnoopJ> wyre, similar: yes. very same: no
[20:14:55] <audio> mav`rik, ah. for some reason i thought numpy would do some special magic
[20:15:04] *** Joins: rootx74 (~rootx74@user/rootx74)
[20:15:08] <yates> i must be missing something very basic in python..
[20:15:23] <Swayze> was that a programming language pun
[20:15:27] <yates> what is "if Not fn():"
[20:15:28] <Swayze> becoz i think i saw what you did there
[20:15:28] *** Joins: sudomann (~sudomann@98.219.211.182)
[20:15:32] <yates> invalid syntax?
[20:15:37] <grym> not, not Not
[20:15:39] <wyre> I see, thank you very much guys, very much clear right now ðŸ˜Š
[20:15:48] <yates> holy $^%#&
[20:15:53] *** Joins: MikZyth (~MikZyth@host-161-158-66-217.spbmts.ru)
[20:15:59] <yates> grym: ok thanks
[20:16:03] *** Quits: MikZyth (~MikZyth@host-161-158-66-217.spbmts.ru) (Client Quit)
[20:16:15] * yates puts on sheepish countenance
[20:16:39] *** Joins: BASHitup (~richard@user/yippeekaiyay)
[20:17:01] *** Quits: cuanim (~cuanim@user/cuanim) (Ping timeout: 240 seconds)
[20:17:13] *** Joins: Mechanismus (~LabMonkey@206.255.106.67)
[20:17:19] *** Quits: purple_cthulhu (~rax@185.108.96.29) (Read error: Connection reset by peer)
[20:17:31] <mav`rik> audio: you're using the same name for two different concepts. I guess it might help to understand what the images and labels is supposed to refer to in `for images, labels in data:` compared to `images = np.array(images)`? Both will contain different values for each element in `data` though.
[20:17:43] *** Quits: vaaqif (~vaaqif@cpc151159-smal19-2-0-cust83.19-1.cable.virginm.net) (Read error: Connection reset by peer)
[20:17:50] *** Joins: pah (~pah@user/pah)
[20:17:54] *** Parts: toad_X (~ali@159.146.40.81) (Leaving)
[20:18:03] *** Quits: pa (~pah@user/pah) (Ping timeout: 252 seconds)
[20:18:04] *** Joins: toad_X (~ali@159.146.40.81)
[20:18:07] *** Joins: skapata (~Skapata@2804:14c:87b0:9d2e:f52e:1e16:af5a:322a)
[20:18:07] *** Quits: skapata (~Skapata@2804:14c:87b0:9d2e:f52e:1e16:af5a:322a) (Changing host)
[20:18:07] *** Joins: skapata (~Skapata@user/skapata)
[20:18:07] <mav`rik> audio: your `dump` will only be applied to the last element yielded by the iteration over data. What are you _wanting_ to occur?
[20:18:34] *** Joins: mharig (~mharig@190.104.20.27)
[20:19:08] *** Joins: MikZyth (~MikZyth@host-161-158-66-217.spbmts.ru)
[20:20:14] *** pah is now known as pa
[20:20:18] *** Quits: MikZyth (~MikZyth@host-161-158-66-217.spbmts.ru) (Client Quit)
[20:20:33] *** Joins: Iolo (~iolo@user/Iolo)
[20:20:46] *** Joins: MikZyth (~MikZyth@host-161-158-66-217.spbmts.ru)
[20:20:47] *** Joins: vaaqif (~vaaqif@cpc151159-smal19-2-0-cust83.19-1.cable.virginm.net)
[20:20:58] *** Quits: marderIII (~MarderIII@86-88-74-111.fixed.kpn.net) (Ping timeout: 268 seconds)
[20:21:34] <yates> pebkac
[20:22:16] *** Quits: tobybl (~tobybl@227.192.115.87.dyn.plus.net) (Remote host closed the connection)
[20:22:32] *** Quits: millido (~millido@84.210.150.128) (Ping timeout: 240 seconds)
[20:23:05] *** Joins: cuanim (~cuanim@31.215.207.104)
[20:23:06] *** Quits: cuanim (~cuanim@31.215.207.104) (Changing host)
[20:23:06] *** Joins: cuanim (~cuanim@user/cuanim)
[20:23:15] *** Joins: millido (~millido@84.210.150.128)
[20:24:07] *** Joins: stewie925 (~stewie925@2600:1702:44f0:35c0:38ed:fe77:bdd1:d85e)
[20:24:18] *** Quits: xheimlich (~xheimlich@179.218.1.150) (Quit: leaving)
[20:24:46] *** Quits: mtk (~mtk@2601:185:200:70:20c:29ff:fe3e:59e4) (Remote host closed the connection)
[20:25:01] *** Quits: vaaqif (~vaaqif@cpc151159-smal19-2-0-cust83.19-1.cable.virginm.net) (Ping timeout: 240 seconds)
[20:25:07] *** Quits: kosh (~kosh@user/kosh) (Ping timeout: 250 seconds)
[20:25:21] *** Joins: kosh (~kosh@user/kosh)
[20:25:58] <stewie925> hey guys, I am running python with lots of pandas processing and its getting KILLED - I am running the python script on a linux server on Windows machine.
[20:26:10] <twb> stewie925: is it OOMing?
[20:26:12] <sco1> What does that mean
[20:26:22] <The-Compiler> "out of memory"-ing
[20:26:30] <stewie925> twb:Â  it looks like it, yes
[20:26:34] <sco1> I meant "killed", not OOM
[20:26:58] <stewie925> but there is no warning whatsoever -it just issues the word KILLED
[20:27:00] <twb> stewie925: OK, so is it legitimately needing lots of memory, or is it leaking
[20:27:01] <SnoopJ> stewie925, what is your question?
[20:27:25] *** Joins: rama (~rama@c-24-130-92-222.hsd1.ca.comcast.net)
[20:27:53] <twb> And if it's legit, what is the part that's suboptimal -- go rewrite that to either mark/sweep harder, or remember less in the first place
[20:28:17] *** Quits: Ergo^ (~ergo@91.238.59.144) (Remote host closed the connection)
[20:28:18] <twb> (I have no idea how to do this in pandas stuff; I'm just speaking generically)
[20:28:19] <rama> Is there a preferred way to assert that only a set of keys are present in a dictionary, and there are no other entries?
[20:28:54] <twb> rama: I would say something like if set(expected_keys) != set(mydict.keys()): raise RuntimeError('...', mydict)
[20:29:30] <twb> There is an actual "assert" keyword, but people tell me not to use it because then dumb people will compile it out
[20:29:56] <mav`rik> twb: you don't need the call to `.keys()` there
[20:30:13] *** Joins: mtk (~mtk@2601:185:200:70:20c:29ff:fe3e:59e4)
[20:30:17] <rama> twb, really we use asserts a bunch in our code base
[20:30:28] *** Quits: ghost43 (~ghost43@gateway/tor-sasl/ghost43) (Remote host closed the connection)
[20:30:35] <twb> mav`rik: OK.  I wasn't sure.  I figured it didn't hurt and was maybe a little clearer.
[20:30:38] <mefistofeles> hmm, having a hard time converting a timedelta to iso format, as in... there are X seconds remaining, I'd like that to say , there are HH:MM:SS remaining... I thought datetime could handle this easily, but I can't seem to find how. Any ideas? Thanks!
[20:30:38] <rama> what do you mean by compile it out?
[20:30:43] *** Quits: interestingname (~throwaway@2001:470:69fc:105::1:6560) (Quit: You have been kicked for being idle)
[20:30:45] *** Joins: GreenResponse (~tomek@r-45-155-148-237.gpon.bialnet.pl)
[20:30:53] *** Joins: ghost43 (~ghost43@gateway/tor-sasl/ghost43)
[20:30:56] <mav`rik> rama: try running your assert-heavy code with python -o :)
[20:31:01] <twb> ^ that
[20:31:07] <stewie925> SnoopJ: sorry talking to my boss
[20:31:29] <stewie925> so I was running a pandas-processing-heavy python script
[20:31:49] <stewie925> and after a few minutes it ended with the word "Killed"
[20:32:11] <stewie925> am running it in linux server from my Windows machine
[20:32:18] *** Quits: Guest3 (~Guest3@2a02:908:214:9cc0:96a:c07c:88ab:284c) (Quit: Client closed)
[20:32:26] <twb> does "in linux server" mean WSL1 ?
[20:32:40] <rama> lololol "* ignores assert statements in code" thats great
[20:32:42] <stewie925> twb: what is WSL1?
[20:33:05] *** Quits: de-facto (~de-facto@user/de-facto) (Remote host closed the connection)
[20:33:18] <twb> stewie925: that's a GNU userland running with a Windows kernel in linux personality mode
[20:33:19] <mav`rik> rama: assert is a suggestion, it's not something to be used in program logic.
[20:33:23] *** Joins: de-facto (~de-facto@user/de-facto)
[20:33:47] *** Quits: Enitin (~Enitin@82.102.22.84) (Ping timeout: 250 seconds)
[20:33:51] <SnoopJ> stewie925, okay, and your question to us is...
[20:33:52] <twb> stewie925: e.g. if you go to the Windows Store app and install Ubuntu or Debian or Alpine, that actually installs 0% linux.
[20:33:53] *** Joins: ponyofdeath (~vladi@2606:6000:cfc0:2b:9cf9:caf8:f20d:1053)
[20:34:23] <CrtxReavr> SnoopJ, Dugaway, UT?
[20:34:30] <SnoopJ> CrtxReavr, ?
[20:34:44] <CrtxReavr> Other channel.
[20:34:56] *** Quits: ckdCreations (~ckdCreati@c-73-140-151-116.hsd1.wa.comcast.net) (Ping timeout: 245 seconds)
[20:35:16] <stewie925> SnoopJ: wondering if anyone encounter this issue and how to fix it?
[20:35:47] *** Joins: Moosadee (~Moosadee@198.248.38.27)
[20:36:06] <stewie925> I already changed my python pandas SELECT statements to include column names, not just dump the whole table to the dataframeÂ  to avoid the memory issue
[20:36:35] <SnoopJ> stewie925, I have encountered this sort of problem on Linux, the fix was mostly "make the program use less memory." There are *some* changes you can make at the system level to make the OOM killer a little nicer, but the options are not great: https://lwn.net/Articles/317814/
[20:36:56] <mav`rik> stewie925: the way to usually solve something like this is to profile your memory usage, and or consider how/where you might be creating a lot of objects
[20:37:18] <stewie925> SnoopJ thank you
[20:37:30] *** Quits: jiffe (~jiffe@47-220-182-140.gtwncmkt04.res.dyn.suddenlink.net) (Quit: WeeChat 2.8)
[20:37:33] <stewie925> mav`rik thank you
[20:38:09] <SnoopJ> resource.setrlimit() with RLIMIT_AS can also be handy to limit the size of a program's address space. It won't apply to all programs, but when it does work, it'll raise MemoryError when the address space becomes "too large" https://docs.python.org/3/library/resource.html#resource.setrlimit
[20:39:01] <SnoopJ> kind of a crude solution, but unfortunately the OOM killer is just not very configurable; if it gets invoked, things are going to get messy before returning to user space :(
[20:39:43] *** Joins: paul424 (~tom@ip-5-172-239-101.multi.internet.cyfrowypolsat.pl)
[20:40:06] <stewie925> appreciate your input SnoopJ
[20:40:11] <mav`rik> SnoopJ: at least with a MemoryError you're likely to get a traceback where the allocation occurs, which is a benefit
[20:40:35] <SnoopJ> mav`rik, yes, but unfortunately *any* alloc might be the one that sends you over the limit, so it's less useful than you might expect
[20:41:11] <SnoopJ> it can be handy if it's absolutely unacceptable to just kill the program (and drop live connections/etc.) though
[20:41:18] <twb> stewie925: another thing nobody has mentioned yet (AFAICT)
[20:41:30] <twb> stewie925: "allocate a huge swap file and let the program run very very very slowly"
[20:41:36] *** Quits: mharig (~mharig@190.104.20.27) (Quit: WeeChat 3.4.1)
[20:41:46] *** Quits: kosh (~kosh@user/kosh) (Read error: Connection reset by peer)
[20:42:25] *** Quits: Viewday115 (~Viewday@user/viewday) (Quit: Ping timeout (120 seconds))
[20:42:26] <twb> Like if you want to use AWS but your chromebook only has 1GB of RAM, you need to allocate another 4GB of swap because browsers are awful
[20:42:42] *** Joins: Viewday115 (~Viewday@user/viewday)
[20:42:55] *** Quits: Atque (~Atque@user/atque) (Ping timeout: 240 seconds)
[20:43:48] *** Joins: shibboleth (~shibbolet@user/shibboleth)
[20:43:53] *** Quits: sudomann (~sudomann@98.219.211.182) (Ping timeout: 252 seconds)
[20:43:58] *** Quits: merrinx (~merrinx@ti0028a400-3686.bb.online.no) (Quit: WeeChat 3.4.1)
[20:44:03] <stewie925> twb: thank you - yes it sucks
[20:44:04] *** Joins: Atque (~Atque@user/atque)
[20:44:31] <mav`rik> SnoopJ: sure, I'd be hoping stewie925's code is something which does some large allocations rather than several billion small ones.
[20:44:33] *** Quits: tarel2 (~tarel2@139.28.216.244) (Ping timeout: 256 seconds)
[20:44:46] *** Joins: pyeveryt_ (~pyeveryth@64-18-153-56.starry-inc.net)
[20:44:54] <SnoopJ> mav`rik, my point is more that this approach can fail if e.g. the Python runtime allocates something
[20:44:58] *** Joins: merrinx (~merrinx@ti0028a400-3686.bb.online.no)
[20:45:08] <stewie925> well the code is horrid - lots of pd.merge and it balloons and balloons
[20:45:28] <SnoopJ> mav`rik, so the offending trace may not even come from application code :(
[20:45:40] <mav`rik> Sure, it's imperfect :)
[20:45:47] *** Joins: Barones (~Barones@user/Barones)
[20:45:48] *** Quits: tuskkk____ (uid18470@id-18470.tinside.irccloud.com) (Quit: Connection closed for inactivity)
[20:45:54] <stewie925> and forgot to mention they get killed while pandas is running a query on Snowflake table
[20:46:06] <SnoopJ> there are probably much fancier approaches that can make this sort of distinction, but setrlimit() is a quick cudgel
[20:46:36] <stewie925> SELECT * FROM <table> (table has almost 100 columns)
[20:46:55] <stewie925> thank you SnoopJ - will look into setrlimit()
[20:47:02] <mav`rik> stewie925: which DB are you using?
[20:47:18] *** Joins: amogorkon (~amogorkon@user/amogorkon)
[20:47:20] <stewie925> MySQL - but tables are in Snowflake data cloud
[20:48:18] *** Joins: jcass (~cindy@50-0-146-207.dsl.dynamic.fusionbroadband.com)
[20:48:37] *** Quits: Pickchea (~private@user/pickchea) (Ping timeout: 240 seconds)
[20:48:50] <mav`rik> stewie925: A lot of libraries which interface with MySQL will pull the full resultset to the client unless you specifically tell it not to, it may even be worth investigating how to use server-side cursors, or how to restrict and run multiple queries to get result-sets in chunks
[20:48:54] <SnoopJ> stewie925, it's a Linux feature, so the Linux Programmer's Manual is a good reference: https://man7.org/linux/man-pages/man2/setrlimit.2.html (or run `man 2 setrlimit` to bring up the same information)
[20:49:03] <jcass> nedbat, hi... what's your website? wanted a list of talks
[20:49:20] *** Quits: widp (~widp@124.123.106.12) (Remote host closed the connection)
[20:49:44] <SnoopJ> jcass, the site is here, not sure if there's a list of talks anywhere on there though: https://nedbatchelder.com/
[20:50:06] <stewie925> mav'rik I hear you - which is why I am changing some of the SELECT statements to just get specific columns
[20:50:17] <jcass> thanks :) (talks are in /text)
[20:50:24] <mav`rik> stewie925: do you have an idea as to the number of rows in your result sets?
[20:50:30] *** Joins: rama_ (~rama@c-24-130-92-222.hsd1.ca.comcast.net)
[20:50:37] <stewie925> yes, almost 1M rows
[20:50:38] <stewie925> :D
[20:50:43] <SnoopJ> jcass, ah, and so they are, that's handy
[20:50:50] *** Joins: nomic (~nomic@185.217.117.249)
[20:51:48] <mav`rik> stewie925: So, 1M rows of pointers is 64MB, and that's before we get to the overhead on each object that the million rows are represented by.
[20:52:50] <phy1729> 8MB no?
[20:52:56] <stewie925> thanks again SnoopJ
[20:53:20] <graingert[m]> nedbat: Pretty sure f_lineno is supposed to never be None "The f_lineno attribute will be updated to match the line number about to be executed, even if tracing is turned off and no event is generated."
[20:53:21] <SnoopJ> mav`rik, some libraries in the scipy ecosystem (notably numpy) are exposing ways to say "use this allocator," so hopefully in the future there will be good ways to monitor/control memory usage in a granular way
[20:53:31] <mav`rik> phy1729: sorry, yes, gods :facepalm:
[20:53:38] *** Joins: ckdCreations (~ckdCreati@147.55.130.35)
[20:53:53] <graingert[m]> nedbat: do you think it's worth me pushing back on https://bugs.python.org/issue47085 ?
[20:54:22] <SnoopJ> NEP 49 mentions it in the context of numpy: https://numpy.org/neps/nep-0049.html
[20:54:31] *** Quits: schumaml (~schumaml@dslb-188-104-182-003.188.104.pools.vodafone-ip.de) (Ping timeout: 245 seconds)
[20:54:32] *** Quits: ghost43 (~ghost43@gateway/tor-sasl/ghost43) (Remote host closed the connection)
[20:54:37] *** Quits: rama_ (~rama@c-24-130-92-222.hsd1.ca.comcast.net) (Ping timeout: 240 seconds)
[20:54:48] *** Joins: ghost43 (~ghost43@gateway/tor-sasl/ghost43)
[20:54:53] *** Quits: ubert (~Thunderbi@p200300ecdf1588942c242a19e1a99324.dip0.t-ipconnect.de) (Ping timeout: 252 seconds)
[20:56:01] *** Joins: LAVBoy (~LAVBoy@85.249.46.8)
[20:56:31] *** Joins: sudomann (~sudomann@98.219.211.182)
[20:56:38] *** Joins: kickingvegas (~cchoi@c-73-170-198-193.hsd1.ca.comcast.net)
[20:56:42] *** Joins: dez (uid92154@user/dez)
[20:57:12] *** Joins: schumaml (~schumaml@dslb-188-104-171-078.188.104.pools.vodafone-ip.de)
[20:57:55] *** Joins: F0ma (Liudas@shell.xshellz.com)
[20:58:49] *** Quits: adiKt (uid472628@id-472628.tinside.irccloud.com) (Quit: Connection closed for inactivity)
[20:59:35] *** Joins: SallyAhaj (~SallyAhaj@user/sallyahaj)
[21:00:18] *** Joins: junktext (~junktext@gateway/vpn/pia/junktext)
[21:00:50] *** Quits: ckdCreations (~ckdCreati@147.55.130.35) (Read error: Connection reset by peer)
[21:01:15] *** Joins: ckdCreations (~ckdCreati@147.55.130.35)
[21:02:05] *** Joins: Wh0 (~V@43.242.116.64)
[21:02:27] *** Quits: rpkilby (~rpkilby@c-24-20-208-106.hsd1.or.comcast.net) (Ping timeout: 256 seconds)
[21:03:45] *** Quits: Stench (~Staunch@c-24-7-237-208.hsd1.mn.comcast.net) (Remote host closed the connection)
[21:04:00] *** Joins: theseb (~theseb@47-220-214-54.cnrocmta03.res.dyn.suddenlink.net)
[21:04:08] *** Joins: bahamas (~lucian@84.232.140.158)
[21:04:18] *** Joins: Staunch (~Staunch@134.238.165.172)
[21:05:20] *** Quits: BobRockHR (~andrija@user/BobRockHR) (Ping timeout: 252 seconds)
[21:05:25] *** Quits: schumaml (~schumaml@dslb-188-104-171-078.188.104.pools.vodafone-ip.de) (Ping timeout: 250 seconds)
[21:06:54] *** Joins: cthulchu (~Cthulchu@69-172-160-196.cable.teksavvy.com)
[21:07:17] *** Quits: betuxy (~betuxy@p579adb74.dip0.t-ipconnect.de) (Ping timeout: 240 seconds)
[21:07:32] *** Joins: schumaml (~schumaml@dslb-188-104-164-119.188.104.pools.vodafone-ip.de)
[21:07:55] *** Quits: bitblit (~bitblit@gateway/tor-sasl/bitblit) (Ping timeout: 240 seconds)
[21:08:36] *** Quits: MikZyth (~MikZyth@host-161-158-66-217.spbmts.ru) (Quit: WeeChat 3.4.1)
[21:09:44] *** Quits: Vision-_- (~Vision@023-084-128-214.res.spectrum.com) (Ping timeout: 252 seconds)
[21:09:56] *** Joins: daedw (~daedw@cpe-70-95-200-209.san.res.rr.com)
[21:10:09] *** Joins: Vision (~Vision@023-084-128-214.res.spectrum.com)
[21:10:25] *** Joins: MikZyth (~MikZyth@host-161-158-66-217.spbmts.ru)
[21:12:03] *** Quits: MikZyth (~MikZyth@host-161-158-66-217.spbmts.ru) (Client Quit)
[21:12:28] *** Joins: widp (~widp@124.123.106.12)
[21:12:29] *** Joins: MikZyth (~MikZyth@host-161-158-66-217.spbmts.ru)
[21:12:32] *** Quits: stewie925 (~stewie925@2600:1702:44f0:35c0:38ed:fe77:bdd1:d85e) (Quit: Client closed)
[21:12:57] *** Quits: MikZyth (~MikZyth@host-161-158-66-217.spbmts.ru) (Client Quit)
[21:13:32] *** Joins: MikZyth (~MikZyth@host-161-158-66-217.spbmts.ru)
[21:13:44] *** Quits: tWqaq (~tWqaq@240e:389:5d41:5900:1d1b:d1f1:a0d3:647c) (Remote host closed the connection)
[21:13:48] *** Joins: bitblit (~bitblit@gateway/tor-sasl/bitblit)
[21:13:58] *** Quits: MikZyth (~MikZyth@host-161-158-66-217.spbmts.ru) (Client Quit)
[21:14:31] *** Joins: MikZyth (~MikZyth@host-161-158-66-217.spbmts.ru)
[21:14:42] *** Quits: MikZyth (~MikZyth@host-161-158-66-217.spbmts.ru) (Client Quit)
[21:15:09] *** Quits: sudomann (~sudomann@98.219.211.182) (Ping timeout: 256 seconds)
[21:16:09] *** Joins: jaggz (~jaggz@user/jaggz)
[21:16:40] *** Joins: MikZyth (~MikZyth@host-161-158-66-217.spbmts.ru)
[21:17:13] *** Joins: daedw_ (~daedw@cpe-70-95-200-209.san.res.rr.com)
[21:18:34] *** Joins: FluffyMask (~masque@user/fluffymask)
[21:18:41] *** Quits: grooverman (~grooverma@152.250.149.217) (Ping timeout: 245 seconds)
[21:19:07] *** Quits: fluiD (~fluiD@161.97.236.182) (Read error: Connection reset by peer)
[21:19:30] *** Quits: daedw (~daedw@cpe-70-95-200-209.san.res.rr.com) (Ping timeout: 260 seconds)
[21:19:35] *** Joins: Enitin (~Enitin@82.180.145.230)
[21:20:29] *** Joins: foobaz212 (~foobaz212@152.37.103.80)
[21:21:18] *** Quits: Wh0 (~V@43.242.116.64) (Quit: Leaving)
[21:21:49] *** Joins: Thanattt (~Thanatos@105.112.182.96)
[21:21:49] *** Quits: Thanatos (~Thanatos@ec2-54-148-37-124.us-west-2.compute.amazonaws.com) (Remote host closed the connection)
[21:22:14] *** Joins: Thanatos (~Thanatos@ec2-54-148-37-124.us-west-2.compute.amazonaws.com)
[21:22:44] *** Quits: resmo (~resmo@214-52-239-77.dyn.cable.fcom.ch) (Read error: Connection reset by peer)
[21:23:04] *** Joins: resmo (~resmo@2a00:d420:9:8a00:999f:c73c:fc43:e307)
[21:23:14] *** Joins: hams (~hams@73.232.205.0)
[21:23:14] *** Quits: hams (~hams@73.232.205.0) (Changing host)
[21:23:14] *** Joins: hams (~hams@user/hams)
[21:23:28] <jaggz> I'm confused.  How do I do an FFT of this heart EKG (ecg) data?  I have some high frequency stuff going on (possibly 60Hz picked up, but I'm not sure)
[21:23:30] <jaggz> https://paste.debian.net/hidden/ee4421e8/
[21:24:01] <jaggz> I'm trying to convert the example, posted somewhere, to give a maximum frequency of, say, 300Hz
[21:24:12] *** Quits: ThanatosJ (~Thanatos@105.112.182.96) (Ping timeout: 240 seconds)
[21:24:40] <jaggz> you can see the ekg data, and its weird noise, here: https://paste.debian.net/hidden/ee4421e8/
[21:24:42] <jaggz> oops
[21:24:46] <jaggz> https://live.staticflickr.com/65535/51954242068_8f0bf4bf00_h.jpg
[21:24:47] *** Joins: sudomann (~sudomann@98.219.211.182)
[21:25:07] *** Quits: KimK (~KimK@2600:8803:740b:4700:4a5b:39ff:fe0b:57d2) (Ping timeout: 256 seconds)
[21:25:10] *** Joins: src (~src@user/src)
[21:25:10] *** Quits: AlanMD (~AlanMD@193.105.140.131) (Quit: ZZZzzzâ€¦)
[21:25:13] *** Quits: saroy (~Sandipan@45.249.73.234) (Remote host closed the connection)
[21:25:55] *** Quits: schumaml (~schumaml@dslb-188-104-164-119.188.104.pools.vodafone-ip.de) (Ping timeout: 256 seconds)
[21:26:21] <mefistofeles> jaggz: what is vals in your function?
[21:26:29] *** Quits: dreamon (~dreamon@ppp-88-217-83-128.dynamic.mnet-online.de) (Ping timeout: 256 seconds)
[21:26:32] <mefistofeles> I'd assume it's the normalized signal, though
[21:26:37] <jaggz> mefistofeles, 1d array of ECG data, ranging like 0-1024
[21:27:07] <jaggz> yeah I'm using the green signal there
[21:27:16] <jaggz> not normalized
[21:27:24] <jaggz> not like [0-1]
[21:27:41] *** Joins: Roey (~Roey@user/Roey)
[21:27:48] <SnoopJ> jaggz, how many datapoints do you actually have on the left-hand of that plot? the artifacting looks like it might just be really undersampled
[21:27:48] *** Joins: BobRockHR (~andrija@user/BobRockHR)
[21:27:52] *** Joins: schumaml (~schumaml@dslb-178-002-187-167.178.002.pools.vodafone-ip.de)
[21:27:54] <jaggz> but a very slow avg is subtracted from it to give the green plot
[21:28:22] *** Joins: roxfan (~roxfan@2a02:a03f:a2be:4f00:c45b:6de3:6013:2c08)
[21:28:40] <jaggz> SnoopJ,  good point.  this is a snippet of data which comes and goes as the electrodes are adjusted
[21:28:49] *** Joins: KimK (~KimK@2600:8803:740b:4700:4a5b:39ff:fe0b:57d2)
[21:28:50] <jaggz> so really I need a moving histogram (spectrogram style)
[21:28:54] <mefistofeles> jaggz: yeah, I said normalized because that's what's the label in the figure, but I agree is not a real normalization
[21:29:04] <jaggz> okay, so that's a clue.. look for generating a spectrogram from audio data.. that'll work
[21:29:25] <SnoopJ> jaggz, you want to compute the FFT with a sliding window over the data, maybe?
[21:29:27] <jaggz> since this fft is working off the full data, which has some screwed up non-linearities and whatnot
[21:29:27] *** Joins: jpds (~jpds@gateway/tor-sasl/jpds)
[21:29:34] * SnoopJ isn't following the problem description particularly closely
[21:29:47] <jaggz> SnoopJ, yeah.. first goal is to analyze it to see what that frequency/noise is
[21:29:49] <audio> jaggz, librosa
[21:29:50] <jaggz> looks pretty regular
[21:29:57] *** Joins: bomb-on (~bomb-on@user/bomb-on)
[21:30:07] *** Joins: tobybl (~tobybl@227.192.115.87.dyn.plus.net)
[21:30:08] <jaggz> next is to see if I can filter it out (possibly removing it from the fft, then inverting that)
[21:30:18] *** Quits: merrinx (~merrinx@ti0028a400-3686.bb.online.no) (Quit: WeeChat 3.4.1)
[21:30:18] <jaggz> http://chris35wills.github.io/simple_fft_filter/
[21:30:37] <SnoopJ> scipy.signal has some good stuff for fairly arbitrary filtering
[21:30:45] *** Quits: chele (~chele@user/chele) (Remote host closed the connection)
[21:30:48] *** Joins: ubert (~Thunderbi@p200300ecdf158894f1c8f499466ba149.dip0.t-ipconnect.de)
[21:30:51] <jaggz> so strange how many irritable people get bothered by title bots :)
[21:30:53] *** Joins: vaaqif (~vaaqif@cpc151159-smal19-2-0-cust83.19-1.cable.virginm.net)
[21:30:57] <jaggz> (the loud few!)
[21:31:09] <SnoopJ> a few good examples in the scipy cookbook: https://scipy-cookbook.readthedocs.io/items/idx_signal_processing.html
[21:31:11] *** Quits: theseb (~theseb@47-220-214-54.cnrocmta03.res.dyn.suddenlink.net) (Remote host closed the connection)
[21:31:15] *** Joins: merrinx (~merrinx@ti0028a400-3686.bb.online.no)
[21:31:19] <jaggz> thanks.. got some stuff to work on now.  I'll be sure to bring some coffee and treats the next time I ask
[21:31:35] *** Joins: theseb (~theseb@47-220-214-54.cnrocmta03.res.dyn.suddenlink.net)
[21:31:35] <jaggz> (gonna look at the audio spectrogram method of analyzing it)
[21:31:36] *** Quits: cosimone (~user@2001:b07:ae5:db26:c24a:d20:4d91:1e20) (Ping timeout: 245 seconds)
[21:31:43] <jaggz> with varying width windows, etc.
[21:31:59] *** Joins: j0hn_mc_clane (~j0hn_mc_c@ptr-fqhhm12iua58a0gd4hj.18120a2.ip6.access.telenet.be)
[21:32:19] <j0hn_mc_clane> Hi, ik zou morgen van thuis werken. Todo: API endpoints afwerken voor de experiment analysis view
[21:33:32] *** Joins: a1eaiactaest (~a1eaiacta@user/a1eaiactaest)
[21:33:37] *** Joins: jdavfsxd (~rvgzuuqp@gateway/tor-sasl/rvgzuuqp)
[21:33:50] *** Joins: marcello1 (~mp@p5084bed4.dip0.t-ipconnect.de)
[21:33:54] <ubert> what's happened to celery? https://docs.celeryproject.org/ has been offline for at least 24h
[21:34:21] *** Quits: marcello42 (~mp@p200300dfaf10fe018edad6997a9398b1.dip0.t-ipconnect.de) (Ping timeout: 268 seconds)
[21:34:49] *** Joins: wattux (~wattux@2a02:238:f014:472:31a4:4a54:162b:367f)
[21:35:04] *** Quits: Thanattt (~Thanatos@105.112.182.96) (Read error: Connection reset by peer)
[21:35:27] *** Quits: theseb (~theseb@47-220-214-54.cnrocmta03.res.dyn.suddenlink.net) (Remote host closed the connection)
[21:35:33] *** Joins: howdoi (uid224@id-224.lymington.irccloud.com)
[21:35:34] <supakeen> j0hn_mc_clane: Is goed, geef me even einde dag je voortgang door.
[21:35:35] *** dcaro is now known as dcaro_away
[21:35:39] *** Quits: funhouse (~funhouse@user/funhouse) (Quit: Client closed)
[21:35:45] <jdavfsxd> ubert: some concurrency issue /s
[21:35:48] *** Quits: KimK (~KimK@2600:8803:740b:4700:4a5b:39ff:fe0b:57d2) (Ping timeout: 240 seconds)
[21:36:08] *** Quits: sharksauce (~sharksauc@user/sharksauce) (Quit: Why do you keep going into our closet?)
[21:36:09] <ubert> jdavfsxd: :)
[21:36:14] *** Quits: ghost43 (~ghost43@gateway/tor-sasl/ghost43) (Remote host closed the connection)
[21:36:27] *** Joins: ghost43 (~ghost43@gateway/tor-sasl/ghost43)
[21:36:44] *** Joins: theseb (~theseb@47-220-214-54.cnrocmta03.res.dyn.suddenlink.net)
[21:36:52] *** Quits: vaaqif (~vaaqif@cpc151159-smal19-2-0-cust83.19-1.cable.virginm.net) (Read error: Connection reset by peer)
[21:37:19] *** Quits: theseb (~theseb@47-220-214-54.cnrocmta03.res.dyn.suddenlink.net) (Client Quit)
[21:38:11] *** Quits: j0hn_mc_clane (~j0hn_mc_c@ptr-fqhhm12iua58a0gd4hj.18120a2.ip6.access.telenet.be) (Remote host closed the connection)
[21:38:12] *** Quits: sudomann (~sudomann@98.219.211.182) (Ping timeout: 240 seconds)
[21:38:13] *** Joins: daedw (~daedw@cpe-70-95-200-209.san.res.rr.com)
[21:38:18] *** Joins: junktext_ (~junktext@gateway/vpn/pia/junktext)
[21:38:33] *** Quits: shad (~shad@user/shad) (Quit: WeeChat 3.0)
[21:39:02] <SnoopJ> ubert, have you seen the ticket about it? https://github.com/celery/celeryproject/issues/52
[21:39:21] *** Quits: jpds (~jpds@gateway/tor-sasl/jpds) (Remote host closed the connection)
[21:39:28] *** Quits: vladoski (~vladoski@2001:b07:add:d406:ce45:15e1:21a7:b919) (Remote host closed the connection)
[21:39:37] <ubert> SnoopJ: ahh, thanks
[21:39:40] <SnoopJ> looks like maybe the ownership/stewartship of the domain slipped through the cracks during a handoff
[21:40:01] *** Joins: funhouse (~funhouse@user/funhouse)
[21:40:05] *** Quits: junktext (~junktext@gateway/vpn/pia/junktext) (Ping timeout: 250 seconds)
[21:40:07] *** Joins: sudomann (~sudomann@98.219.211.182)
[21:40:08] <SnoopJ> (hence the invalid cert)
[21:40:37] *** Quits: daedw_ (~daedw@cpe-70-95-200-209.san.res.rr.com) (Ping timeout: 240 seconds)
[21:41:17] *** Quits: Thanatos (~Thanatos@ec2-54-148-37-124.us-west-2.compute.amazonaws.com) (Remote host closed the connection)
[21:42:06] *** Joins: jpds (~jpds@gateway/tor-sasl/jpds)
[21:42:30] *** Joins: argument (~0ptions@user/argument)
[21:43:01] *** Quits: sh0ne (~sh0ne@178.237.217.167) (Quit: My MacBook has gone to sleep. ZZZzzzâ€¦)
[21:44:10] *** Joins: Thanatos (~Thanatos@ec2-54-148-37-124.us-west-2.compute.amazonaws.com)
[21:44:11] *** Quits: schumaml (~schumaml@dslb-178-002-187-167.178.002.pools.vodafone-ip.de) (Ping timeout: 250 seconds)
[21:44:18] *** Quits: marcello1 (~mp@p5084bed4.dip0.t-ipconnect.de) (Quit: WeeChat 3.4)
[21:44:28] *** Joins: grooverman (~grooverma@187.11.220.159)
[21:44:43] *** Joins: sh0ne (~sh0ne@178.237.217.167)
[21:45:25] *** Quits: ghost43 (~ghost43@gateway/tor-sasl/ghost43) (Remote host closed the connection)
[21:46:12] <argument> Hey! Quick question as I'm fairly new to Python and I haven't been able to find an answer online. I have a python aws lambda and the main function which gets triggered in AWS is lambd_function(event, context). I have create a class called SourceEvent which defines all the fields for this event object coming in, is there any way to map the event object to my new SourceEvent as it's being passed into the
[21:46:13] *** Joins: ghost43 (~ghost43@gateway/tor-sasl/ghost43)
[21:46:14] <argument> function, e.g. lambda_function(SourceEvent, context)?
[21:46:22] *** Joins: promach[m] (~promach@2001:470:69fc:105::ca1)
[21:47:33] *** Joins: Zeturic (~Orimendix@50.26.218.162)
[21:47:35] <grym> argument: what's type(event)
[21:47:53] *** Quits: qlixed (~qlixed@181.44.129.13) (Ping timeout: 250 seconds)
[21:48:08] *** Quits: palasso (~palasso@user/palasso) (Remote host closed the connection)
[21:48:55] *** Joins: KimK (~KimK@2600:8803:740b:4700:4a5b:39ff:fe0b:57d2)
[21:48:58] <sco1> lol that celery issue took a turn I wasn't expecting
[21:49:34] *** Joins: palasso (~palasso@user/palasso)
[21:49:42] *** veegee_ is now known as veegee
[21:49:53] *** Quits: Viewday115 (~Viewday@user/viewday) (Quit: Ping timeout (120 seconds))
[21:50:10] <argument> grym: It's originally a java object that is then serialized and passed into a AWS step function, so it's just pure json really when AWS passes it along to the function.
[21:50:20] *** Joins: Viewday115 (~Viewday@user/viewday)
[21:50:25] <grym> argument: so is it a string, or a dict
[21:50:27] <han-solo> argument: if `event` seems like a dict thing, so maybe `SourceEvent(**event)` ?
[21:50:37] *** Quits: sudomann (~sudomann@98.219.211.182) (Ping timeout: 256 seconds)
[21:50:41] <grym> ^ that's what i was going to suggest too
[21:50:58] <han-solo> "The first argument is the event object. An event is a JSON-formatted document that contains data for a Lambda function to process. The Lambda runtime converts the event to an object and passes it to your function code. It is usually of the Python dict type. It can also be list, str, int, float, or the NoneType type."
[21:51:23] <grym> argument: so yeah, SourceEvent(**event) as the first line of your lambda function then.
[21:51:27] <argument> Yeah I had almost copy pasted that earlier for here
[21:51:29] <argument> I'll test
[21:52:11] <grym> if you need more complicated deserialization (ie, if that's deeply nested json), there are ways to do that too
[21:52:21] <grym> (i'd use pydantic's .parse_obj())
[21:52:22] <argument> Yeah it is deply nested
[21:52:22] *** Quits: SallyAhaj (~SallyAhaj@user/sallyahaj) (Remote host closed the connection)
[21:52:26] <argument> maybe why it's not working
[21:52:32] <promach[m]> Could anyone help with https://www.reddit.com/r/learnpython/comments/tk7woj/simple_word_splitting/ ?
[21:52:51] *** Quits: Moosadee (~Moosadee@198.248.38.27) (Ping timeout: 245 seconds)
[21:52:51] *** Quits: cdown (~cdown@163.114.131.1) (Ping timeout: 245 seconds)
[21:53:21] *** Joins: Viewday1159 (~Viewday@user/viewday)
[21:53:40] *** Joins: magla (~gelignite@55d4decd.access.ecotel.net)
[21:53:51] *** Joins: sobkas (~sobkas@95.175.17.217)
[21:54:09] *** Quits: kdc (~kdc@196-210-1-81.dynamic.isadsl.co.za) (Quit: Leaving)
[21:54:12] <Wooble> promach[m]: you were answered 7 minutes ago.
[21:54:17] *** Joins: ghost43_ (~ghost43@gateway/tor-sasl/ghost43)
[21:54:26] *** Quits: ghost43 (~ghost43@gateway/tor-sasl/ghost43) (Remote host closed the connection)
[21:54:27] <han-solo> promach[m]: you are assigning to the same variable there, so only the last results will be available
[21:54:31] <han-solo> oh
[21:54:48] <grym> argument: https://bpa.st/WCZA e.g.
[21:55:09] *** Quits: Viewday115 (~Viewday@user/viewday) (Ping timeout: 256 seconds)
[21:55:10] *** Viewday1159 is now known as Viewday115
[21:55:28] <grym> where `data` is like your `event`
[21:56:08] *** Joins: greedom (~greedom@p200300de671bab00ebb70478d84b6287.dip0.t-ipconnect.de)
[21:56:16] *** Joins: sudomann (~sudomann@98.219.211.182)
[21:56:24] *** Joins: ericleer (~ericleer@dhcp-077-249-173-130.chello.nl)
[21:57:42] <argument> grym: parse_obj seems to have worked :D
[21:57:52] *** Quits: maggotbrain (~maggotbra@c-73-225-163-217.hsd1.wa.comcast.net) (Quit: Gone to Croatan...)
[21:57:56] <grym> it's the good stuff
[21:59:51] *** Quits: MikZyth (~MikZyth@host-161-158-66-217.spbmts.ru) (Quit: WeeChat 3.4.1)
[22:00:11] <argument> Thanks!
[22:00:12] *** Quits: vlm (~vlm@user/vlm) (Ping timeout: 240 seconds)
[22:00:37] *** Quits: ericleer (~ericleer@dhcp-077-249-173-130.chello.nl) (Ping timeout: 240 seconds)
[22:00:55] *** Joins: no-n (sid524992@smol/hors)
[22:01:08] <promach[m]> han-solo: how to fix that without much hassle ?
[22:01:59] *** Quits: grooverman (~grooverma@187.11.220.159) (Ping timeout: 252 seconds)
[22:02:15] *** Joins: ProdIssue (~nicbr@cpe-71-77-64-33.nc.res.rr.com)
[22:02:18] *** Joins: rpkilby (~rpkilby@c-24-20-208-106.hsd1.or.comcast.net)
[22:04:08] *** Joins: MikZyth (~MikZyth@host-161-158-66-217.spbmts.ru)
[22:04:47] *** Joins: flower_ (~archie@217-123-218-6.cable.dynamic.v4.ziggo.nl)
[22:04:49] *** Joins: flower__ (~archie@217-123-218-6.cable.dynamic.v4.ziggo.nl)
[22:05:26] <han-solo> `result.append(input.split(p))` instead of `result = input.split(p)`
[22:05:29] <han-solo> i suppose
[22:05:39] *** Joins: Wh0 (~V@43.242.116.64)
[22:05:48] <jinsun__> promach[m]: you should explain why you think the code doesn't work or what it is supposed to do, instead of making people guess
[22:06:06] *** Joins: vlm (~vlm@user/vlm)
[22:06:20] *** Joins: ErkiS (~opera@85.253.137.91.cable.starman.ee)
[22:06:31] *** Joins: ttree (~ttree0@c-24-17-16-242.hsd1.wa.comcast.net)
[22:06:56] *** Quits: sudomann (~sudomann@98.219.211.182) (Ping timeout: 252 seconds)
[22:06:59] *** Quits: vlm (~vlm@user/vlm) (Remote host closed the connection)
[22:08:04] *** Joins: vlm (~vlm@user/vlm)
[22:08:17] *** Quits: Elzington (~Elzington@87.249.134.24) (Ping timeout: 240 seconds)
[22:08:32] *** Joins: grooverman (~grooverma@152.250.149.217)
[22:08:36] *** Quits: Madda (~Madda@2a05:f6c3:1935:0:2990:3a03:c1e1:2949) (Remote host closed the connection)
[22:09:12] *** Quits: wattux (~wattux@2a02:238:f014:472:31a4:4a54:162b:367f) (Quit: Client closed)
[22:09:15] <ProdIssue> Is it possible to change your Class's Type based on the method calling it?
[22:09:27] *** Joins: Elzington (~Elzington@68.235.43.14)
[22:09:48] <ProdIssue> Like say my class type is UserString, could I change that to be just String if .join is called on it?
[22:10:11] <ProdIssue> without having to do str(my_class)?
[22:10:22] *** Joins: Madda (~Madda@2a05:f6c3:1935:0:2990:3a03:c1e1:2949)
[22:10:44] <grym> ProdIssue: no, but if UserString is a subclass of str, join will work.
[22:10:45] *** Joins: b_jonas (~x@catv-176-63-4-59.catv.fixed.vodafone.hu)
[22:10:55] <grym> https://docs.python.org/3/library/collections.html#userstring-objects  e.g.
[22:13:04] *** Joins: sudomann (~sudomann@98.219.211.182)
[22:13:15] <SensibleSalmon[m> I'm having an issue with MyPy that's driving me nuts. I want to enforce that concrete classes do indeed implement things that're marked as abstract in an interface class. MyPy correctly raises errors when I instantiate the concrete at the module level, but not in, say, a function. Example here: https://bpa.st/X4DA
[22:13:16] <SensibleSalmon[m> thoughts?
[22:13:39] *** Quits: TheCat (~TheCat@user/z-cat) (Read error: Connection reset by peer)
[22:13:51] <ProdIssue> so grym it doesn't work because join expects a str instance and gets UserString instead
[22:14:16] <ProdIssue> Throws a TypeError: sequence item 0: expected str instance, UserString found
[22:14:24] *** Joins: TheCat (~TheCat@user/z-cat)
[22:14:33] *** Quits: zeden (~zeden@user/zeden) (Quit: WeeChat 3.4.1)
[22:14:39] *** Quits: merijn (~merijn@c-001-001-001.client.esciencecenter.eduvpn.nl) (Ping timeout: 256 seconds)
[22:15:14] *** Joins: jiffe (~jiffe@47-220-182-140.gtwncmkt04.res.dyn.suddenlink.net)
[22:15:34] <ProdIssue> Wondering if there is something I can overload in the UserString class to make it work
[22:15:37] <jinsun__> SensibleSalmon[m: looks like it is working fine if I try here https://mypy-play.net/?mypy=latest&python=3.10&gist=ed7826b138a8183e375f77f14bfcb4d7
[22:15:53] *** Joins: zeden (~zeden@user/zeden)
[22:15:59] *** Quits: greedom (~greedom@p200300de671bab00ebb70478d84b6287.dip0.t-ipconnect.de) (Remote host closed the connection)
[22:16:07] *** Joins: merijn (~merijn@c-001-001-001.client.esciencecenter.eduvpn.nl)
[22:16:11] <grym> ProdIssue: hm.  userstring says you can just subclass str directly, but i'm not super clear that i'd ever want to... https://bpa.st/JIDA
[22:16:17] <grym> (i have no idea if that's a good idea or not)
[22:16:25] *** Joins: daedw_ (~daedw@cpe-70-95-200-209.san.res.rr.com)
[22:16:33] <SensibleSalmon[m> jinsun__: (a) wonderful utility, (b) wtf
[22:16:48] <SensibleSalmon[m> I'm gonna eat and then dig into this I guess. maybe it's low calorie brain fog.
[22:16:56] *** Joins: greedom (~greedom@p200300de671bab00ebb70478d84b6287.dip0.t-ipconnect.de)
[22:17:06] *** Quits: FinnElija (~finn_elij@user/finn-elija/x-0085643) (Remote host closed the connection)
[22:17:29] *** Quits: sudomann (~sudomann@98.219.211.182) (Ping timeout: 256 seconds)
[22:17:31] *** Quits: Viewday115 (~Viewday@user/viewday) (Quit: Ping timeout (120 seconds))
[22:17:39] *** Joins: FinnElija (~finn_elij@user/finn-elija/x-0085643)
[22:17:53] *** Joins: Viewday115 (~Viewday@user/viewday)
[22:18:25] *** Quits: merrinx (~merrinx@ti0028a400-3686.bb.online.no) (Quit: WeeChat 3.4.1)
[22:19:02] *** Quits: daedw (~daedw@cpe-70-95-200-209.san.res.rr.com) (Ping timeout: 252 seconds)
[22:19:17] *** Quits: TheCat (~TheCat@user/z-cat) (Ping timeout: 250 seconds)
[22:19:44] *** Quits: foobaz212 (~foobaz212@152.37.103.80) (Quit: Client closed)
[22:19:49] *** Joins: fifihyperbola (~fifihyper@212.219.41.130)
[22:19:57] *** Joins: foobaz212 (~foobaz212@152.37.103.80)
[22:19:57] *** Quits: Wh0 (~V@43.242.116.64) (Quit: Leaving)
[22:20:37] *** Quits: daedw_ (~daedw@cpe-70-95-200-209.san.res.rr.com) (Ping timeout: 240 seconds)
[22:21:21] <dba> I have a json with text like this `"Comit\u00c3\u00a9` but when I create a panda dataframe it convert it to some weird characters like `ComitÃƒÂ© ` how do I pass the proper encoding when creating a dataframe like `pd.DataFrame` or is there any other approach to fix this?
[22:21:25] *** Joins: daedw (~daedw@cpe-70-95-200-209.san.res.rr.com)
[22:21:27] *** Quits: merijn (~merijn@c-001-001-001.client.esciencecenter.eduvpn.nl) (Ping timeout: 256 seconds)
[22:21:40] *** Joins: marderIII (~MarderIII@86-88-74-111.fixed.kpn.net)
[22:21:52] *** Joins: merrinx (~merrinx@ti0028a400-3686.bb.online.no)
[22:22:40] *** Quits: jiffe (~jiffe@47-220-182-140.gtwncmkt04.res.dyn.suddenlink.net) (Quit: WeeChat 2.8)
[22:24:06] *** Joins: vaaqif (~vaaqif@cpc151159-smal19-2-0-cust83.19-1.cable.virginm.net)
[22:24:32] <SnoopJ> dba, what is it supposed to be? That looks proper to me, Unicode codepoints U+00C3 and U+00A9 are Ãƒ and Â© respectively...
[22:24:43] *** Quits: gbristol (gbristol@hermes.gbristol.net) (Ping timeout: 250 seconds)
[22:25:12] *** Quits: merrinx (~merrinx@ti0028a400-3686.bb.online.no) (Client Quit)
[22:25:14] <SnoopJ> (maybe there's an encoding problem wherever this file was produced, though?)
[22:25:14] <dba> SnoopJ: it supposed to be `ComitÃ© `
[22:25:40] <ErkiS> dba: looks like it has been double-encoded
[22:25:57] <dba> Erkis, I suspected that too
[22:26:04] <SnoopJ> dba, probably someone has erroneously decoded this as latin-1, then. `"ComitÃ©".encode("utf-8").decode("latin-1")` produces the same string.
[22:26:05] *** Joins: vantage (~vantage@ip-193-121-152-141.dsl.scarlet.be)
[22:26:08] *** Joins: merrinx (~merrinx@ti0028a400-3686.bb.online.no)
[22:26:29] *** Joins: qlixed (~qlixed@152.170.36.244)
[22:27:08] <grym> dba: if the code that produces this string is accessible to you, grep for naked .decode()s and replace them with .decode('utf-8'), perhaps
[22:27:16] <grym> (is this a windows or mixed environment?)
[22:27:18] *** Quits: mexen_wfh (uid495612@id-495612.ilkley.irccloud.com) (Quit: Connection closed for inactivity)
[22:27:45] <dba> grym: it is Linux
[22:27:50] *** Quits: domicron (~domicron@gateway/tor-sasl/domicron) (Quit: Ping timeout (120 seconds))
[22:28:17] *** Quits: vaaqif (~vaaqif@cpc151159-smal19-2-0-cust83.19-1.cable.virginm.net) (Ping timeout: 240 seconds)
[22:28:33] *** Joins: domicron (~domicron@gateway/tor-sasl/domicron)
[22:28:34] <SnoopJ> probably a little more complex since what's in the JSON is \u escaped
[22:28:37] *** Quits: vlm (~vlm@user/vlm) (Ping timeout: 268 seconds)
[22:29:13] <dba> ` with open('noc.json', 'a') as f: f.write(json.dumps(dict_))` that is how I saved the  `ComitÃ©` and it is saved as `"Comit\u00c3\u00a9`
[22:29:37] <dba> do I have to specify the encoding in `with open`
[22:29:48] <Wooble> dba: no, it's outputting ASCII anyway.
[22:29:58] *** Quits: kostkon_ (~androirc@2.142.66.94.static.otenet.gr) (Remote host closed the connection)
[22:30:28] <Wooble> the string in dict_ was almost certainly already "ComitÃƒÂ©" before you wrote the json
[22:30:32] <SnoopJ> agreed
[22:30:43] *** Quits: greedom (~greedom@p200300de671bab00ebb70478d84b6287.dip0.t-ipconnect.de) (Remote host closed the connection)
[22:30:48] <energizer> sum(x for x in xs, start=1) "SyntaxError: Generator expression must be parenthesized" why does this rule exist?
[22:31:02] <dba> Wooble, hmm I will double check that
[22:31:35] *** Joins: greedom (~greedom@p200300de671bab00ebb70478d84b6287.dip0.t-ipconnect.de)
[22:31:53] <Wooble> anyway, you can fix it with .encode('latin-1').decode('utf-8') but ideally fix the original source of the data...
[22:31:59] *** Quits: foobaz212 (~foobaz212@152.37.103.80) (Quit: Client closed)
[22:32:01] *** Quits: bindu (~bindu@user/bindu) (Remote host closed the connection)
[22:32:08] <SnoopJ> energizer, I think it's some combination of avoiding a parse ambiguity introduced by a comma and not wanting to special-case for keyword arguments
[22:32:12] *** Joins: foobaz212 (~foobaz212@152.37.103.80)
[22:32:15] *** Quits: ano (~ano@user/ano) (Ping timeout: 240 seconds)
[22:32:22] *** Joins: bindu (~bindu@user/bindu)
[22:32:54] <energizer> SnoopJ: what is the other parse with which it is ambiguous?
[22:33:10] <jinsun__> yeah if the 1 was positiional it will look like a tuple, sum(x for x in xs, 1)
[22:33:12] *** Joins: Lando-SpacePimp (~Lando-Spa@user/lando-spacepimp)
[22:33:19] <SnoopJ> energizer, it isn't really because it's a keyword arg, but it would be if you'd done `sum(x for x in xs, 1)`
[22:33:26] <jinsun__> then you might read it as xs + 1
[22:34:12] *** Quits: foobaz212 (~foobaz212@152.37.103.80) (Client Quit)
[22:34:16] *** Joins: daedw_ (~daedw@cpe-70-95-200-209.san.res.rr.com)
[22:34:25] *** Joins: foobaz212 (~foobaz212@152.37.103.80)
[22:34:26] <SnoopJ> energizer, i.e. you know you're in trouble by the time you hit the comma *unless* you look ahead to see if there's a keyword argument, which is just kinda icky compared to treating the unparenthesized form as a special case when there aren't args
[22:34:55] <energizer> that sounds right. thanks
[22:34:57] *** Joins: ghost43 (~ghost43@gateway/tor-sasl/ghost43)
[22:34:59] <Wooble> can an LL(1) parser even look ahead far enough to get the =?
[22:35:05] <NoImNotNineVolt> so apparently aws lambda's python runtime is a bit weird.
[22:35:08] *** Quits: gr33n7007h (~gr33n7007@user/gr33n7007h) (Quit: WeeChat 3.4.1)
[22:35:16] <NoImNotNineVolt> exec() doesn't work the way it does in a normal python.
[22:35:22] <SnoopJ> Wooble, I don't think so but I am less than up-to-speed with exactly how CPython's parsing works nowadays
[22:35:33] <NoImNotNineVolt> that is, it appears side-effects are not preserved. might run in a forked interpreter?
[22:35:40] <SnoopJ> even if a hypothetical parser can do it, it's more magic than I think CPython tends to like
[22:35:53] <Wooble> SnoopJ: the new parser could almost certainly handle that but it's already a syntaxerror so making it legal now would be odd.
[22:36:00] * SnoopJ nods
[22:36:08] *** Quits: ghost43_ (~ghost43@gateway/tor-sasl/ghost43) (Remote host closed the connection)
[22:36:12] *** Joins: cosimone (~user@93-44-187-176.ip98.fastwebnet.it)
[22:36:19] *** Joins: ano (~ano@user/ano)
[22:36:20] <SnoopJ> seems not-unlikely that it was a hand-me-down from the time when it was a technical limitation
[22:36:25] <anddam> while defining a setuptools entrypoint should I be able to use just a module as I gather from the syntax at https://setuptools.pypa.io/en/latest/userguide/entry_point.html#console-scripts ?
[22:36:30] *** Joins: sudomann (~sudomann@98.219.211.182)
[22:36:34] <anddam> <name> = [<package>.[<subpackage>.]]<module>[:<object>.<object>]
[22:36:37] *** Quits: daedw (~daedw@cpe-70-95-200-209.san.res.rr.com) (Ping timeout: 240 seconds)
[22:37:03] *** Quits: tobybl (~tobybl@227.192.115.87.dyn.plus.net) (Remote host closed the connection)
[22:37:09] *** Quits: widp (~widp@124.123.106.12) (Remote host closed the connection)
[22:37:18] <anddam> case in point I have codesign/__init__ with a main() that gest called if __name__ == "__main__"
[22:37:25] *** Joins: tobybl (~tobybl@227.192.115.87.dyn.plus.net)
[22:37:52] <anddam> yet calling the console script I get a   TypeError: 'module' object is not callable
[22:38:24] <SnoopJ> anddam, I think the answer is yes syntactically, but a callable module is indeed a weird concept, so you probably don't usually want to do this
[22:38:32] <SnoopJ> (is it even possible? ðŸ¤”)
[22:38:40] <grym> i think you'd need a __main__.py ?
[22:38:46] *** Quits: mbrndtgn (~mbrndtgn@undecidable.de) (Quit: The Lounge - https://thelounge.chat)
[22:38:46] <Wooble> yes.
[22:38:47] *** Quits: daedw_ (~daedw@cpe-70-95-200-209.san.res.rr.com) (Ping timeout: 250 seconds)
[22:39:07] <SnoopJ> Wooble, is it limited to packages?
[22:39:15] *** Joins: daedw (~daedw@cpe-70-95-200-209.san.res.rr.com)
[22:39:25] *** Joins: mbrndtgn (~mbrndtgn@undecidable.de)
[22:39:28] <grym> and then codesign.__main__:main would work.  codesign.__init__.main might, too; i don't think i've ever tried
[22:39:36] *** Quits: foobaz212 (~foobaz212@152.37.103.80) (Quit: Client closed)
[22:39:40] <grym> err, codesign.__init__:main
[22:39:45] <Wooble> I think a .py file should work just fine.
[22:39:49] <SnoopJ> yea, if you want a particular callable inside a module, you should be specifying it anyway
[22:39:51] *** Joins: foobaz212 (~foobaz212@152.37.103.80)
[22:40:08] <grym> anddam: either way, entry points do not care about "if __name__..."
[22:40:11] <Wooble> codesign:main might even work?
[22:40:17] <grym> ^ maaaybe
[22:40:21] *** Joins: gbristol (gbristol@hermes.gbristol.net)
[22:40:24] <SnoopJ> Wooble, I tried writing a .py with __call__ but it doesn't seem to work, curious
[22:40:35] *** Quits: merrinx (~merrinx@ti0028a400-3686.bb.online.no) (Quit: WeeChat 3.4.1)
[22:40:47] <anddam> oh an explicit __main__ ?
[22:40:52] <Wooble> SnoopJ: err, the module isn't "callable" but it can be an entry point.
[22:41:08] <anddam> the syntax seems to suggest so
[22:41:15] <NoImNotNineVolt> hm. so, is there an alternative to exec() if i want to read python code from somewhere and run it in threads? i guess importlib?
[22:41:16] <SnoopJ> Wooble, does it look for a __main__ then?
[22:41:30] *** Joins: wakeup (~wakeup@user/wakeup)
[22:41:45] <SnoopJ> It makes sense in the context of packages that define one, just wondering about the type itself being callable (which sounds weird)
[22:41:50] <jinsun__> no, it just throws TypeError you run it
[22:41:53] <jinsun__> :D
[22:42:05] <jinsun__> like anddam discovered
[22:42:07] <SnoopJ> jinsun__, that does seem more likely than any alternative ;P
[22:42:20] <anddam> "codesign.__init__:main" works but it's ugly
[22:42:22] <SnoopJ> but I would think if setuptools allows not specifying it, there's some kind of possible meaningful behavior
[22:42:37] *** Joins: merrinx (~merrinx@ti0028a400-3686.bb.online.no)
[22:42:53] <anddam> and the linked docs can import the function from the __init__ module without mentioning it (that is expected from __init__)
[22:43:03] *** Parts: ErkiS (~opera@85.253.137.91.cable.starman.ee) ()
[22:43:10] <SnoopJ> anddam, does `codesign:main` not work?
[22:43:14] <han-solo> `codesign:main` works ?
[22:43:20] <han-solo> it seems to
[22:43:30] <anddam> SnoopJ: yes it does, I just double checked, I had a "codesign.main" before
[22:43:32] * anddam oopses
[22:43:39] *** Quits: tobybl (~tobybl@227.192.115.87.dyn.plus.net) (Remote host closed the connection)
[22:43:42] <anddam> still the syntax is saying just a module would be enough
[22:44:08] <NoImNotNineVolt> so, if anyone's used importlib to import a source file directly (e.g. https://docs.python.org/3/library/importlib.html#importing-a-source-file-directly), is it possible to do that if you don't have a file, merely a string containing all your python code?
[22:44:29] <NoImNotNineVolt> i'd rather not have to write to a tmp file just to read back from it if i don't have to.
[22:44:29] <grym> NoImNotNineVolt: make it a StringIO first?
[22:44:35] <SnoopJ> yea, I dunno what's up with that except the possibility of a package that defines its own entrypoint
[22:44:41] *** Quits: foobaz212 (~foobaz212@152.37.103.80) (Ping timeout: 256 seconds)
[22:44:44] <SnoopJ> (in the Python sense, not the setuptools sense)
[22:44:44] <NoImNotNineVolt> grym: importlib.util.spec_from_file_location expects a file path.
[22:44:53] <grym> NoImNotNineVolt: oh, not a file object :(
[22:45:10] <grym> tempfile hackery it is then i guess
[22:45:28] <SnoopJ> NoImNotNineVolt, why don't you want to use exec() for this?
[22:45:36] *** Joins: vicfred (~vicfred@user/vicfred)
[22:46:02] <jinsun__> I could make a callable module by doing sys.modules[__name__] = print :D
[22:46:12] <jinsun__> maybe it is for those cases
[22:46:18] <NoImNotNineVolt> SnoopJ: i do, but aws lambda's python runtime has a nonstandard exewc
[22:46:36] <NoImNotNineVolt> SnoopJ: it doesn't preserve side-effects. looks like it might fork off an interpreter. weird.
[22:46:37] *** Joins: foobaz212 (~foobaz212@152.37.103.80)
[22:46:52] <SnoopJ> NoImNotNineVolt, can you elaborate on what "doesn't preserve side-effects" means?
[22:47:01] *** Quits: sudomann (~sudomann@98.219.211.182) (Ping timeout: 250 seconds)
[22:47:23] <NoImNotNineVolt> exec('def foo():\n  pass'); foo() # gives NameError: name 'foo' is not defined
[22:47:53] *** Quits: BobRockHR (~andrija@user/BobRockHR) (Ping timeout: 250 seconds)
[22:48:29] <SnoopJ> NoImNotNineVolt, does their exec() take the locals and globals arguments? Maybe `exec(..., None, globals())` would do what you want
[22:48:35] <anddam>  jinsun__ | like anddam discovered <<< I am going to name that "anddam's Law"
[22:49:07] *** Joins: kostkon_ (~androirc@2.142.66.94.static.otenet.gr)
[22:49:07] *** Quits: merrinx (~merrinx@ti0028a400-3686.bb.online.no) (Quit: WeeChat 3.4.1)
[22:49:11] *** Quits: EgonX (~EgonX@2601:2c6:47f:879e:ec7d:567c:8b36:1bf4) (Read error: Connection reset by peer)
[22:49:40] <wakeup> when does u personally use else in try?
[22:49:43] *** Joins: EgonX (~EgonX@2601:2c6:47f:879e:a123:54c0:358b:30bb)
[22:49:52] <rama> NoImNotNineVolt: have you taken a look at the `bootstrap.py` file that AWS runs before the lambda code is ran? Lemme find you a link...
[22:50:04] *** Joins: merrinx (~merrinx@ti0028a400-3686.bb.online.no)
[22:50:32] <NoImNotNineVolt> apparently i'm not the only person who's seen this: https://forums.aws.amazon.com/thread.jspa?threadID=314191
[22:51:05] <rama> NoImNotNineVolt: https://github.com/aws/aws-lambda-base-images/tree/python3.8/x86_64 theres a compressed bootstrap.py file in these tar files.
[22:51:12] *** Joins: Y4knotiS (~YaknotiS@cpc1-cmbg18-2-0-cust87.5-4.cable.virginm.net)
[22:51:28] *** Quits: aclark (~aclark@pool-108-51-184-139.washdc.fios.verizon.net) (Quit: Client closed)
[22:51:47] <NoImNotNineVolt> oh snap, it works!
[22:51:48] <NoImNotNineVolt> thanks
[22:51:48] * SnoopJ notes that his suggestion is in that post, too
[22:51:57] <SnoopJ> NoImNotNineVolt, passing globals() explicitly worked?
[22:52:21] <NoImNotNineVolt> indeed, i see your suggestion there too. fail :P
[22:52:23] <NoImNotNineVolt> thanks!
[22:52:23] *** Quits: bahamas (~lucian@84.232.140.158) (Ping timeout: 256 seconds)
[22:52:35] *** Quits: Zeturic (~Orimendix@50.26.218.162) (Ping timeout: 252 seconds)
[22:52:58] <SnoopJ> good to know. Obnoxious that they modify it, but I guess maybe they're doing weird stuff with namespaces
[22:53:18] <han-solo> wakeup: i usually put the happy path in else, i think
[22:53:49] *** Quits: cuanim (~cuanim@user/cuanim) (Ping timeout: 240 seconds)
[22:54:41] *** Joins: merijn (~merijn@c-001-001-001.client.esciencecenter.eduvpn.nl)
[22:55:26] <wakeup> do you guys know of a good example of a relatively simple but quite illustrative app that is organized as microservices, uses flask, docker and kubernetes?
[22:55:39] <Wooble> if you told me an hour ago I'd be stepping through pkg_resources code in a debugger right now I wouldn't have come back from lunch.
[22:55:57] <han-solo> lol
[22:56:10] *** Quits: src (~src@user/src) (Quit: leaving)
[22:56:24] *** Joins: ub (~Thunderbi@p200300ecdf158894bc3487aad6770a01.dip0.t-ipconnect.de)
[22:56:51] *** Joins: lispy (~lispy@user/lispy)
[22:57:09] *** Quits: fifihyperbola (~fifihyper@212.219.41.130) (Ping timeout: 256 seconds)
[22:57:20] *** Joins: jiffe (~jiffe@47-220-182-140.gtwncmkt04.res.dyn.suddenlink.net)
[22:57:47] *** Joins: vaaqif (~vaaqif@cpc151159-smal19-2-0-cust83.19-1.cable.virginm.net)
[22:57:53] <SnoopJ> Wooble, ouch
[22:58:55] *** Joins: vanessa (~farawayas@103.160.128.7)
[22:59:00] *** Quits: toad_X (~ali@159.146.40.81) (Ping timeout: 240 seconds)
[22:59:25] *** Quits: merijn (~merijn@c-001-001-001.client.esciencecenter.eduvpn.nl) (Ping timeout: 240 seconds)
[22:59:34] *** Joins: sudomann (~sudomann@98.219.211.182)
[22:59:42] *** Quits: rvalue (~rvalue@user/rvalue) (Read error: Connection reset by peer)
[22:59:59] <Wooble> I'm going with "they put the '[' in the docs in the wrong place" but I'm surprised this works at all :)
[23:00:11] *** Quits: jiffe (~jiffe@47-220-182-140.gtwncmkt04.res.dyn.suddenlink.net) (Client Quit)
[23:00:14] *** Joins: rvalue (~rvalue@user/rvalue)
[23:00:24] *** Quits: merrinx (~merrinx@ti0028a400-3686.bb.online.no) (Quit: WeeChat 3.4.1)
[23:00:27] *** Joins: daedw_ (~daedw@cpe-70-95-200-209.san.res.rr.com)
[23:00:30] *** Quits: BASHitup (~richard@user/yippeekaiyay) (Quit: WeeChat 2.8)
[23:00:34] *** Quits: ghost43 (~ghost43@gateway/tor-sasl/ghost43) (Remote host closed the connection)
[23:00:49] *** Joins: ghost43 (~ghost43@gateway/tor-sasl/ghost43)
[23:01:07] *** Joins: jiffe (~jiffe@47-220-182-140.gtwncmkt04.res.dyn.suddenlink.net)
[23:01:42] <han-solo> well, fwiw they did put a `__main__.py` in their sample project
[23:01:48] *** Joins: merijn (~merijn@c-001-001-001.client.esciencecenter.eduvpn.nl)
[23:02:09] *** Joins: betuxy (~betuxy@p579adb74.dip0.t-ipconnect.de)
[23:02:23] *** Joins: merrinx (~merrinx@ti0028a400-3686.bb.online.no)
[23:02:25] *** Quits: vaaqif (~vaaqif@cpc151159-smal19-2-0-cust83.19-1.cable.virginm.net) (Ping timeout: 250 seconds)
[23:02:37] *** Joins: Stench (~Staunch@c-24-7-237-208.hsd1.mn.comcast.net)
[23:02:38] *** Parts: Klinda (~superleag@user/klinda) (Konversation terminated!)
[23:02:39] *** Joins: BASHitup (~richard@user/yippeekaiyay)
[23:03:02] *** Quits: daedw (~daedw@cpe-70-95-200-209.san.res.rr.com) (Ping timeout: 252 seconds)
[23:03:03] *** Joins: fifihyperbola (~fifihyper@212.219.41.130)
[23:03:04] <Wooble> oh, wow. I'm not even in the pkg_resources code, that doesn't even get used unless importlib is missing. :/
[23:03:10] *** Quits: fifihyperbola (~fifihyper@212.219.41.130) (Client Quit)
[23:03:45] <BinarySavior> hi i am using caldav (pypi package) and it's failing with SSL error when it uses requests
[23:03:47] *** Quits: Staunch (~Staunch@134.238.165.172) (Remote host closed the connection)
[23:03:55] <BinarySavior> this is because my server is on LAN and uses self signed cert
[23:03:59] *** Quits: BASHitup (~richard@user/yippeekaiyay) (Client Quit)
[23:04:12] *** Joins: fifihyperbola (~fifihyper@212.219.41.130)
[23:04:19] *** Quits: fef (~thedawn@user/thedawn) (Remote host closed the connection)
[23:04:20] <BinarySavior> normally in requests you can set verify=False, but I'm not sure how to set that option from the caldav package
[23:04:30] *** Joins: cuanim (~cuanim@user/cuanim)
[23:04:55] *** Joins: BobRockHR (~andrija@user/BobRockHR)
[23:05:00] *** Joins: djapo (~archangel@user/djapo)
[23:05:05] *** Quits: daedw_ (~daedw@cpe-70-95-200-209.san.res.rr.com) (Ping timeout: 256 seconds)
[23:06:36] *** Quits: merijn (~merijn@c-001-001-001.client.esciencecenter.eduvpn.nl) (Ping timeout: 240 seconds)
[23:07:07] *** Joins: jazzy (~jaziz@user/jaziz)
[23:07:49] *** Quits: a1eaiactaest (~a1eaiacta@user/a1eaiactaest) (Ping timeout: 250 seconds)
[23:08:12] *** Joins: BrokenCog (~BrokenCog@jachin.hartnell.edu)
[23:08:54] *** Quits: Stench (~Staunch@c-24-7-237-208.hsd1.mn.comcast.net) (Remote host closed the connection)
[23:09:04] *** Joins: cdown (~cdown@cpe-98-15-154-102.hvc.res.rr.com)
[23:09:23] *** Quits: BobRockHR (~andrija@user/BobRockHR) (Ping timeout: 256 seconds)
[23:09:27] *** Joins: Staunch (~Staunch@134.238.184.213)
[23:09:42] <yates> grym: regarding Not vs not: why is the carrot pointing at the end of "fn" and not at the Not? http://paste.debian.net/1235277/
[23:09:46] <Wooble> BinarySavior: DAVClient(..., ssl_verify_cert=False)
[23:09:47] *** Joins: a1eaiactaest (~a1eaiacta@user/a1eaiactaest)
[23:10:09] *** Quits: rpkilby (~rpkilby@c-24-20-208-106.hsd1.or.comcast.net) (Remote host closed the connection)
[23:10:16] *** Joins: stewie925 (~stewie925@2600:1702:44f0:35c0:38ed:fe77:bdd1:d85e)
[23:10:28] *** Joins: daedw (~daedw@cpe-70-95-200-209.san.res.rr.com)
[23:11:24] <BinarySavior> thanks Wooble
[23:11:36] <bjs> yates: because Not is a valid variable name, it's the thing that came after it that was the problem
[23:11:37] *** Joins: vaaqif (~vaaqif@cpc151159-smal19-2-0-cust83.19-1.cable.virginm.net)
[23:11:43] <bjs> yates: of course, you know, and I know, that you just misspelled "not"
[23:11:57] *** Quits: kostkon_ (~androirc@2.142.66.94.static.otenet.gr) (Ping timeout: 250 seconds)
[23:11:58] <jinsun__> yates: it is better in 3.11 https://bpa.st/AJXA
[23:12:04] *** Joins: Auron (Auron956@user/auron)
[23:12:12] <bjs> jinsun__: and by better you mean misleading :P
[23:12:40] <yates> bjs: "know" is a slippery concept. i did indeed NOT know (no pun intended) because I had forgotten.
[23:12:59] *** Quits: EvilDMP (~textual@django/moderator/EvilDMP) (Quit: My MacBook has gone to sleep. ZZZzzzâ€¦)
[23:13:15] *** Joins: AlanMD (~AlanMD@86.124.30.89)
[23:13:16] *** Quits: merrinx (~merrinx@ti0028a400-3686.bb.online.no) (Quit: WeeChat 3.4.1)
[23:13:19] <jinsun__> bjs: well more magic I guess
[23:13:20] <bjs> yates: well I mean, you and I looking at this code and this error can say that Python has put the caret at the "wrong" place because we can agree it was actually the "Not" that was a typo
[23:13:36] *** Joins: Moosadee (~Moosadee@198.248.38.27)
[23:13:59] <bjs> yates: but Python just has to guess and it's always going to sometimes get cases like this wrong.  What probably happened was it was at `if (Not ` and so far everything was good, and then it saw `fn` and reported the error there-and-then.
[23:14:11] <Wooble> jinsun__: figuring out adding a comma would lead to a NameError and the noticing it's a variant of a keyword left as a PR to the reader
[23:14:12] *** Joins: merrinx (~merrinx@ti0028a400-3686.bb.online.no)
[23:14:52] <bjs> yates: Better error reporting code could look at the surrounding code, see that it's a typo of "not" and see if "not" would've worked there instead,  but Python doesn't do that kind of checks (although recently it's been getting more and more of them ...)
[23:15:13] <yates> bjs: i follow your logic and can't disagree
[23:15:17] <jinsun__> actually it was ipython doing weird stuff, the normal repl looks a bit different https://bpa.st/VO6A
[23:15:34] <jinsun__> which is a bit more correct I guess
[23:15:49] <betuxy> What would be the best way to parse this?: https://termbin.com/rrtyÂ  its a description box of a shelter with the answers to kategories encased in strong tags
[23:15:55] *** Quits: mtk (~mtk@2601:185:200:70:20c:29ff:fe3e:59e4) (Remote host closed the connection)
[23:16:11] <yates> jinsun__: we are hamstrung to 3.6.9 because of our application (IDAPro)
[23:16:26] <yates> i am pleased it is improving though
[23:17:09] *** Quits: nyah (~nyah@05453449.skybroadband.com) (Quit: leaving)
[23:17:14] *** Joins: rama_ (~rama@c-24-130-92-222.hsd1.ca.comcast.net)
[23:17:17] *** Quits: rama_ (~rama@c-24-130-92-222.hsd1.ca.comcast.net) (Remote host closed the connection)
[23:17:32] *** Joins: sokan (~sokan@2a02:587:9e19:4700:227:eff:fe16:865d)
[23:17:40] *** Joins: Stench (~Staunch@c-24-7-237-208.hsd1.mn.comcast.net)
[23:17:42] <Wooble> next version: perhaps you forgot a comma, period, T_PAAMAYIM_NEKUDOTAYIM, or mistyped something else?
[23:17:50] *** Joins: BASHitup (~richard@user/yippeekaiyay)
[23:18:09] *** Joins: nyah (~nyah@05453449.skybroadband.com)
[23:18:16] <Wooble> (I mean a :: would be a syntax error there too but ummm... :) )
[23:18:24] *** Joins: rama_ (~rama@c-24-130-92-222.hsd1.ca.comcast.net)
[23:18:59] *** Quits: the_lanetly_052 (~the_lanet@194.135.167.45) (Ping timeout: 252 seconds)
[23:19:25] *** Quits: vakera_pingveno (~dan@2600:1700:21f9:b150::10) (Ping timeout: 240 seconds)
[23:19:31] <carlio> betuxy: beautifulsoup or lxml
[23:19:44] *** Quits: takezo (~takezo@gateway/vpn/pia/takezo) (Quit: Leaving)
[23:19:56] *** Quits: justOkay (~justache@user/justache) (Read error: Connection reset by peer)
[23:20:43] *** Quits: Staunch (~Staunch@134.238.184.213) (Ping timeout: 256 seconds)
[23:20:50] *** Quits: rama (~rama@c-24-130-92-222.hsd1.ca.comcast.net) (Ping timeout: 260 seconds)
[23:21:17] *** Joins: justOkay (~justache@user/justache)
[23:21:34] *** Joins: admin123 (~harrymore@ool-18b9adbf.dyn.optonline.net)
[23:21:38] <jinsun__> Wooble: bjs: oh right the "Perhaps you forgot a comma?" part was definitely misleading, I was looking more at the ^^^^^s
[23:22:10] <Wooble> jinsun__: hey, at least they tried. :)
[23:22:39] *** Quits: djapo (~archangel@user/djapo) (Ping timeout: 256 seconds)
[23:22:43] *** Joins: BillyZane2 (~BillyZane@91.196.220.78)
[23:23:38] *** Joins: rpkilby (~rpkilby@c-24-20-208-106.hsd1.or.comcast.net)
[23:24:06] *** Joins: mtk (~mtk@2601:185:200:70:20c:29ff:fe3e:59e4)
[23:24:40] *** Joins: kostkon_ (~androirc@2a02:587:a10f:c988:5455:7996:42cf:6660)
[23:25:16] *** Joins: theseb (~theseb@47-220-214-54.cnrocmta03.res.dyn.suddenlink.net)
[23:25:31] *** Quits: theseb (~theseb@47-220-214-54.cnrocmta03.res.dyn.suddenlink.net) (Client Quit)
[23:26:04] <betuxy> i am carlio: i started whith lxlm but I dont know how i would navigate to each categorien as they are not encased in anything but the paragrah, no?
[23:26:08] *** Quits: BillyZane (~BillyZane@91.196.220.78) (Ping timeout: 252 seconds)
[23:26:10] *** Joins: parv (~quass@user/parv)
[23:26:44] *** Quits: merrinx (~merrinx@ti0028a400-3686.bb.online.no) (Quit: WeeChat 3.4.1)
[23:26:49] *** Joins: aslicedbanjo (~aslicedba@host86-150-115-207.range86-150.btcentralplus.com)
[23:27:40] *** Joins: merrinx (~merrinx@ti0028a400-3686.bb.online.no)
[23:28:17] *** Joins: onichomp (~onichomp@2806:264:4408:2be:f870:5efc:af85:a8ae)
[23:28:28] *** Joins: jstein (~jstein@gentoo/developer/jstein)
[23:30:13] <jinsun__> anddam: here an example where you are able to just use a module in options.entry_points without getting TypeError https://bpa.st/QPWQ :D
[23:31:14] <Wooble> that's horrifying
[23:31:24] *** Quits: foobaz212 (~foobaz212@152.37.103.80) (Quit: Client closed)
[23:31:33] *** Joins: wlemuel_ (~wlemuel@210.22.124.110)
[23:31:39] *** Joins: foobaz212 (~foobaz212@152.37.103.80)
[23:32:13] *** Quits: wlemuel (~wlemuel@210.22.124.110) (Read error: Connection reset by peer)
[23:32:17] *** Quits: wlemuel_ (~wlemuel@210.22.124.110) (Read error: Connection reset by peer)
[23:32:48] *** Quits: ba (~ba@cpc1-hari17-2-0-cust27.20-2.cable.virginm.net) (Remote host closed the connection)
[23:32:54] *** Joins: Jong (~Jong@2620:10d:c090:400::5:7a46)
[23:33:33] *** Joins: zebrag (~chris@user/zebrag)
[23:34:13] <jinsun__> yeah a bit weird that it even works :D
[23:34:46] <jinsun__> like the module changed itself while it was being imported
[23:35:01] *** Quits: BrokenCog (~BrokenCog@jachin.hartnell.edu) (Ping timeout: 240 seconds)
[23:35:16] <Wooble> I feel like even if this makes the setuptools docs technically correct, that's not what they were going for. :)
[23:35:18] *** Joins: sandb0y (~pirate@user/sandb0y)
[23:36:15] *** Quits: foobaz212 (~foobaz212@152.37.103.80) (Ping timeout: 256 seconds)
[23:36:32] *** Joins: wlemuel (~wlemuel@210.22.124.110)
[23:37:01] *** Joins: widp (~widp@124.123.106.12)
[23:37:31] *** Quits: ghost43 (~ghost43@gateway/tor-sasl/ghost43) (Remote host closed the connection)
[23:37:51] *** Joins: ghost43 (~ghost43@gateway/tor-sasl/ghost43)
[23:38:22] *** Joins: tijuco (~tijuco@user/tijuco)
[23:38:50] *** Quits: fifihyperbola (~fifihyper@212.219.41.130) (Quit: Client closed)
[23:41:02] *** Quits: mud (~mud@user/kadoban) (Quit: quit)
[23:41:22] *** Quits: onichomp (~onichomp@2806:264:4408:2be:f870:5efc:af85:a8ae) (Quit: onichomp)
[23:41:23] *** Joins: EvilDMP (~textual@django/moderator/EvilDMP)
[23:41:37] *** Joins: riz (~BillyZane@91.196.220.53)
[23:42:05] *** Joins: foobaz212 (~foobaz212@152.37.103.80)
[23:42:44] *** Quits: stewie925 (~stewie925@2600:1702:44f0:35c0:38ed:fe77:bdd1:d85e) (Quit: Client closed)
[23:43:48] *** Joins: stewie925 (~stewie925@2600:1702:44f0:35c0:38ed:fe77:bdd1:d85e)
[23:44:11] *** Quits: BillyZane2 (~BillyZane@91.196.220.78) (Ping timeout: 256 seconds)
[23:44:25] <stewie925> hi guys, so I tried experimenting with removing pandas dataframe to free some memory space for python - https://bpa.st/YCLA
[23:44:39] *** Quits: dvx (~dvx@5.181.92.64) (Quit: dvx)
[23:45:06] *** Quits: Haxxa (~Haxxa@202-130-210-100.ip4.superloop.com) (Quit: Haxxa flies away.)
[23:45:31] <stewie925> when I put that into my script, my process still getting killed :(
[23:47:23] *** Joins: Haxxa (~Haxxa@202-130-210-100.ip4.superloop.com)
[23:47:32] *** Joins: kosh (~kosh@user/kosh)
[23:48:02] *** Joins: BrokenCog (~BrokenCog@jachin.hartnell.edu)
[23:48:32] *** Quits: Imk0tter (~Imk0tter@221.sub-174-204-129.myvzw.com) (Ping timeout: 240 seconds)
[23:48:43] *** Quits: ExpiredKebab (~sgreadly@2407:7000:89aa:b303:b9b1:84a9:128d:44ec) (Quit: My MacBook Air has gone to sleep. ZZZzzzâ€¦)
[23:49:03] *** Joins: Imk0tter (~Imk0tter@172.58.228.212)
[23:49:33] *** Joins: ExpiredKebab (~sgreadly@2407:7000:89aa:b303:b9b1:84a9:128d:44ec)
[23:50:01] <Wooble> stewie925: line 21 should give a SyntaxError.
[23:50:14] *** Joins: maxzor (~maxzor@2a01cb04054faa0067e968e95df8d6eb.ipv6.abo.wanadoo.fr)
[23:50:22] *** Joins: a1eaiact1 (~a1eaiacta@user/a1eaiactaest)
[23:50:34] *** Quits: ghost43 (~ghost43@gateway/tor-sasl/ghost43) (Remote host closed the connection)
[23:50:52] <stewie925> oh
[23:50:52] *** Joins: ghost43 (~ghost43@gateway/tor-sasl/ghost43)
[23:51:07] <stewie925> wondering why it didnt error - that python version is 3.7
[23:51:36] <Wooble> stewie925: in any event, del doesn't delete things, it just removes references, and something else might be holding other references to the objects (I know nothing about pandas internals)
[23:51:49] *** Joins: bahamas (~lucian@84.232.140.158)
[23:52:30] *** Joins: ErkiS (~opera@85.253.137.91.cable.starman.ee)
[23:52:32] *** Quits: KimK (~KimK@2600:8803:740b:4700:4a5b:39ff:fe0b:57d2) (Ping timeout: 252 seconds)
[23:52:51] *** Quits: rsx (~dummy@ppp-188-174-131-150.dynamic.mnet-online.de) (Quit: rsx)
[23:53:01] *** Quits: a1eaiactaest (~a1eaiacta@user/a1eaiactaest) (Ping timeout: 256 seconds)
[23:53:05] <stewie925> thanks Wooble.Â  Â Let me check if pandas say something about freeing memory
[23:53:12] <Wooble> stewie925: err, sorry. I'm dumb, that's not a syntax error.
[23:53:22] *** Joins: Viewday1153 (~Viewday@user/viewday)
[23:53:51] *** Quits: kr0nk (~kr0nk@user/kr0nk) (Quit: leaving)
[23:53:51] *** Quits: magla (~gelignite@55d4decd.access.ecotel.net) (Quit: Stay safe!)
[23:54:18] <stewie925> Wooble: nahh thats okay :)
[23:54:32] *** Parts: ErkiS (~opera@85.253.137.91.cable.starman.ee) ()
[23:54:40] <stewie925> ok I am reading through this page - https://towardsdatascience.com/python-garbage-collection-article-4a530b0992e3
[23:54:42] <Wooble> (although I'm not sure why del'ing a list nested like that works.)
[23:54:55] *** Quits: Viewday115 (~Viewday@user/viewday) (Read error: Connection reset by peer)
[23:54:55] *** Viewday1153 is now known as Viewday115
[23:55:30] <Wooble> stewie925: anyway, from your paste it seems like you *are* managing to reclaim most of the memory.
[23:56:07] <stewie925> yeah, but I put the same code in my python script, and its still being killed by linux
[23:56:29] <Wooble> stewie925: maybe it's getting killed before it hits the del?
[23:56:46] *** Joins: daedw_ (~daedw@cpe-70-95-200-209.san.res.rr.com)
[23:57:00] <stewie925> no, after
[23:57:09] <stewie925> I put some logging output to trace it
[23:57:19] *** Quits: Stench (~Staunch@c-24-7-237-208.hsd1.mn.comcast.net) (Quit: Leaving...)
[23:57:29] *** Quits: bahamas (~lucian@84.232.140.158) (Ping timeout: 252 seconds)
[23:57:33] *** Quits: maxzor (~maxzor@2a01cb04054faa0067e968e95df8d6eb.ipv6.abo.wanadoo.fr) (Remote host closed the connection)
[23:57:33] <stewie925> and it died while reading another excel file
[23:57:52] *** Joins: maxzor (~maxzor@2a01cb04054faa00ed919463e5f3a61d.ipv6.abo.wanadoo.fr)
[23:58:15] <Wooble> is the other file too big to fit in RAM even if you never had the data you del'ed?
[23:58:59] <stewie925> the new file being read, you mean?
[23:59:10] <stewie925> let me look...
[23:59:11] <Wooble> yeah
[23:59:29] *** Quits: daedw (~daedw@cpe-70-95-200-209.san.res.rr.com) (Ping timeout: 256 seconds)
