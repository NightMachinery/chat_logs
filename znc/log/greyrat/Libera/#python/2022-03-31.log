[00:00:34] *** Joins: blei (~blei@user/blei)
[00:01:43] <SnoopJ> hm, maybe not an extension, then
[00:02:00] *** Joins: rpkilby (~rpkilby@c-24-20-208-106.hsd1.or.comcast.net)
[00:02:18] <SnoopJ> As far as fretting about time wasted, I see orders of magnitude more time wasted on trying to reason about the perfect combination of tools before trying any of them than I do tools that overlap a bit, YMMV.
[00:02:46] *** Joins: nemexis (~nemexis@193-62-201-31.ftth.glasoperator.nl)
[00:02:59] *** Joins: FFY00_ (~FFY00@archlinux/trusteduser/ffy00)
[00:03:28] <gjvc> what package from pypi do people favour as a decorator for "retrying" upon an exception being raised ?
[00:03:39] *** Joins: merijn (~merijn@c-001-001-001.client.esciencecenter.eduvpn.nl)
[00:04:10] *** Quits: FFY00 (~FFY00@archlinux/trusteduser/ffy00) (Remote host closed the connection)
[00:04:18] <patchie> SnoopJ: Thanks for the info and link
[00:04:27] <patchie> jinsun__: i will check it out, thanks!
[00:04:56] <SnoopJ> gjvc, I've seen `tenacity` discussed in here a bit, it seems well-liked
[00:05:41] <gjvc> thank you SnoopJ
[00:06:42] *** Joins: Deneb (~johnch@194.82.159.143.dyn.plus.net)
[00:06:51] *** Joins: Enitin (~Enitin@82.180.145.226)
[00:07:54] *** Quits: nemexis (~nemexis@193-62-201-31.ftth.glasoperator.nl) (Ping timeout: 272 seconds)
[00:08:17] *** Quits: merijn (~merijn@c-001-001-001.client.esciencecenter.eduvpn.nl) (Ping timeout: 260 seconds)
[00:09:00] *** Quits: jmdaemon (~jmdaemon@user/jmdaemon) (Ping timeout: 240 seconds)
[00:09:26] *** Joins: jmdaemon (~jmdaemon@user/jmdaemon)
[00:10:08] *** Joins: magic_ninja (~sparkie1@2600:1700:3ab0:e9f0:1b43:1ece:72e0:faf4)
[00:11:09] <BinarySavior> hi, in jinja2 template I am passing an object into context with several attributes.  If I try to access an attribute of that object that does not exist, flask is not throwing an exception, instead it is just rendering as blank / empty space.  How can I force flask to throw AttributeError when trying to access an attribute on context object that
[00:11:09] <BinarySavior> does not exist?
[00:12:50] *** Joins: moog (~moog@107.77.244.98)
[00:13:35] *** Joins: gitesh (uid423739@id-423739.ilkley.irccloud.com)
[00:13:45] <bjs> BinarySavior: I think the usual way is to pass a StrictUndefined as the Environment's `undefined` https://jinja.palletsprojects.com/en/3.1.x/api/#undefined-types
[00:17:12] *** Joins: MRDPZK1 (~MRDPZK@d205-250-152-220.bchsia.telus.net)
[00:18:04] <BinarySavior> Yes bjs I have done that, it works if I try to reference an undefined object, but it's not throwing exception for accessing an undefined attribute on an object that _does_ exist
[00:18:23] <gjvc> SnoopJ: https://github.com/jd/tenacity is the docs -- looks decent
[00:18:59] <bjs> BinarySavior: well the way jinja works it that accessing attributes that don't exist, or accessing names that do not exist give you undefined. Then a StrictUndefined raises an error if you try to display it (render it) or loop over it or try use it in any kind of computation other than "is this undefined?"
[00:19:07] <SnoopJ> gjvc, yep, that's the one
[00:19:16] *** Joins: pystardust (~pystardus@2001:19f0:4401:f8:5400:3ff:fec4:f98c)
[00:20:37] *** Joins: data68 (~data@2a02:908:a67:2ce0:4197:8ffe:f671:b843)
[00:20:40] *** Joins: veracioux (~user@92.36.214.90)
[00:20:44] *** Quits: sharksauce (~sharksauc@user/sharksauce) (Quit: Why do you keep going into our closet?)
[00:20:46] *** Quits: MRDPZK (~MRDPZK@d205-250-152-220.bchsia.telus.net) (Ping timeout: 250 seconds)
[00:21:12] *** Quits: varmonger (~nav@122.182.204.29) (Quit: leaving)
[00:22:45] <veracioux> Hi, I
[00:23:22] *** Quits: MRDPZK1 (~MRDPZK@d205-250-152-220.bchsia.telus.net) (Ping timeout: 250 seconds)
[00:24:10] *** Joins: Jacques (~Jacques@2600:1702:6f0:4310:103f:908e:57b4:10ab)
[00:24:24] *** Quits: slav0nic (slav0nic@python.su) (Remote host closed the connection)
[00:24:29] <gjvc> SnoopJ: i was using "retry" before, but this looks a bit "bigger"
[00:24:55] *** Joins: slav0nic (slav0nic@python.su)
[00:24:59] <gjvc> seems to work :-)
[00:25:15] *** Quits: cmagina (sid286142@user/cmagina) ()
[00:25:17] <grym> gjvc: also, updated in this decade!
[00:25:53] *** Joins: Auron (~Auron956@user/auron)
[00:26:15] *** Joins: ovnicraft (~ovnicraft@ftth-179-49-44-28.cue.celerity.ec)
[00:26:21] *** Joins: philipp64 (~philipp64@65.129.128.199)
[00:26:29] <axisys> when I test a code in jupyter notebook I need to make sure to comment out all args from main section. any one know of a way to get a terminal shell in the jupyter so I can use switches? I run jupyter with no browser and the http to that on default port 8888, so I don't have the option to dropdown to terminal by default
[00:26:45] <axisys> may be not appropriate question for this channel?
[00:26:51] <axisys> I use it only for python
[00:28:24] <veracioux> Hi, I'm trying to embed the python interpreter in my C++ application and would like to use the limited API so I don't have to rely on a specific minor version of python. When I link my C++ app against python3 get undefined reference errors for any python function I try to use, even for Py_Initialize (when I link to python3.10 it works fine). Can I even link against python3? I'm on linux, and using CMake.
[00:28:43] <TML> axisys: Why not just write the code so that if you're invoking from inside jupyter, all the switches have sensible default?
[00:29:09] <gjvc> grym: :-)
[00:29:15] * gjvc tips hat to grym 
[00:29:26] *** Quits: nuclearg1 (~nucleargr@user/nuclearg1) (Ping timeout: 272 seconds)
[00:29:28] <axisys> TML: yeah that is what I am doing.. but I was hoping to stick to same code when I test in terminal ..
[00:29:32] *** Quits: ovnicraft (~ovnicraft@ftth-179-49-44-28.cue.celerity.ec) (Client Quit)
[00:29:52] <TML> axisys: well, in the approach I'm suggesting, it would be the same code
[00:29:54] *** Joins: haris (~haris@69.169.3.81)
[00:30:02] <axisys> I guess your logic will still work.. right :-)
[00:30:06] <axisys> TML: thanks
[00:30:08] <TML> :)
[00:30:21] <philipp64> Hi. I'm trying to derive a TextIOBase class that I can then use for `stderr=` and `stdout=` in `subprocess.Popen()`. The idea being that I might want to do multiple things with the text passing through... (1) accumulate it into a monolithic buffer, or (2) send it to a `logging` instance, or (3) pass it on through to another file (like `sys.stderr` or `sys.stdout`). any suggestions on a good example to follow?
[00:31:02] <BinarySavior> bjs let's say i have a context variabled called qprj_attr which is a sqlalchemy object with several relationships. In my jinja2 template, if I type qpprrj_attr (typeo) then it will throw exception, but if I type the object correctly while misspelling one of its attributes (i.e. qprj_attr.mispelled), I get no error, even though I have passed
[00:31:03] <BinarySavior> StrictUndefined to the flask app.jinja_env.undefined
[00:31:26] <exarkun> philipp64: I doubt you can.  It probably requires a real file descriptor.
[00:31:32] <axisys> TML: I could try it .. but this will need to be commented out, right? if __name__ == '__main__'   main() ?
[00:31:37] *** Quits: haris (~haris@69.169.3.81) (Client Quit)
[00:31:40] <TML> axisys: No
[00:31:50] <axisys> TML: interesting .. ok
[00:32:11] *** Joins: haris (~haris@69.169.3.81)
[00:32:30] *** Joins: stockh0lm (~Andreas@p200300d2c708320000c708ef6c3168b1.dip0.t-ipconnect.de)
[00:32:38] <exarkun> philipp64: Or rather, surely there is a way to do what you want, but it's not a matter of subclassing TextIOBase and overriding a couple methods.
[00:32:48] <axisys> TML: however .. if I want to test non-default argument I will need to chnage it
[00:32:54] <SnoopJ> gjvc, the other extreme of complexity is writing your own decorator that does this: https://bpa.st/JKBA
[00:32:55] <philipp64> okay, so how?
[00:33:00] <axisys> no-default value rather
[00:33:04] *** Quits: rinzewind (~rinzewind@user/rinzewind) (Quit: leaving)
[00:33:06] <axisys> non-default
[00:33:20] <haris> anyone use bazel + rules_python ? banging my head over why bazel on macos is NOT using a wheel and trying to build form source whereas on the same machine things are all good if i try to install the pip and wheel is used without bazel
[00:33:23] <exarkun> philipp64: What OS?
[00:33:30] <philipp64> Linux
[00:33:31] *** Quits: haris (~haris@69.169.3.81) (Client Quit)
[00:33:32] <SnoopJ> gjvc, but it can get pretty complicated, so probably a library that has already run into all the common problems is a good choice :)
[00:33:52] <exarkun> philipp64: Make a pipe, hand the write end to Popen as stdout, read from the read end yourself, do your processing there.
[00:34:22] *** Quits: zmt00 (~zmt00@user/zmt00) (Read error: Connection reset by peer)
[00:34:23] *** Quits: ghost43 (~ghost43@gateway/tor-sasl/ghost43) (Remote host closed the connection)
[00:34:35] *** Joins: haris (~haris@69.169.3.81)
[00:34:47] <haris> sorry got disconnected
[00:34:50] <haris> anyone use bazel + rules_python ? banging my head over why bazel on macos is NOT using a wheel and trying to build form source whereas on the same machine things are all good if i try to install the pip and wheel is used without bazel
[00:35:10] *** Joins: ghost43 (~ghost43@gateway/tor-sasl/ghost43)
[00:35:28] *** Quits: radu242 (~radu242@pool-96-250-220-83.nycmny.fios.verizon.net) (Ping timeout: 246 seconds)
[00:35:47] *** Joins: zmt00 (~zmt00@user/zmt00)
[00:36:24] <gjvc> SnoopJ: ooh thank you always good to see examples of decorators
[00:36:33] <gjvc> https://github.com/jd/tenacity#statistics is fancy!
[00:37:46] *** Joins: vlm (~vlm@user/vlm)
[00:38:18] *** Quits: konfusedagain (~konfuseda@125.99.177.198) (Ping timeout: 272 seconds)
[00:38:19] <TML> axisys: What I'm suggesting is that the code which processes your arguments checks to see if it's being run inside jupyter, and if it is, it shortcuts to defaults for each argument
[00:38:43] *** Joins: AnselmoCampanas (~AnselmoCa@190.99.69.41)
[00:38:57] *** Quits: AquaL1te (~AquaL1te@user/aqual1te) (Ping timeout: 272 seconds)
[00:40:02] <AnselmoCampanas> hi everyone! in a django app sometimes celery stop working, do you know a simple way to develop a health-check for celery?
[00:40:20] <bjs> BinarySavior: hmm, well if you just do {{foo.bar}} for example then with StrictUndefined if either foo or foo.bar don't exist then you get an UndefinedError exception when you try render
[00:40:32] <bjs> BinarySavior: what exactly are you doing in the template to not get an error?
[00:41:21] *** Quits: ghost43 (~ghost43@gateway/tor-sasl/ghost43) (Remote host closed the connection)
[00:41:55] *** Quits: foobaz212 (~foobaz212@152.37.103.80) (Quit: Client closed)
[00:41:57] *** Quits: Merinorus (~Merinorus@lfbn-mar-1-707-11.w90-118.abo.wanadoo.fr) (Quit: Someone cut my Wi-Fi cable.)
[00:42:07] *** Joins: Merinorus (~Merinorus@lfbn-mar-1-707-11.w90-118.abo.wanadoo.fr)
[00:42:09] *** Joins: foobaz212 (~foobaz212@152.37.103.80)
[00:43:19] *** Joins: Lord_of_Life_ (~Lord@user/lord-of-life/x-2819915)
[00:43:55] *** Quits: Lord_of_Life (~Lord@user/lord-of-life/x-2819915) (Ping timeout: 260 seconds)
[00:44:37] *** Lord_of_Life_ is now known as Lord_of_Life
[00:46:06] *** Joins: ghost43 (~ghost43@gateway/tor-sasl/ghost43)
[00:46:31] *** Quits: Bandicoot (~bandicoot@212.58.114.93) (Quit: Leaving)
[00:46:50] <TML> axisys: e.g, I believe you can inspect get_ipython().__class__.__name__ to see whether you're running inside a jupyter kernel
[00:49:22] *** Quits: foobaz212 (~foobaz212@152.37.103.80) (Ping timeout: 250 seconds)
[00:51:45] *** Quits: lakrass (~lakrass@user/lakrass) (Quit: WeeChat 3.4.1)
[00:53:27] *** Joins: harpia (~harpia@143.208.84.100)
[00:54:13] *** Quits: jpn (~jpn@user/jpn) (Ping timeout: 256 seconds)
[00:54:20] *** Joins: cmagina (~cmaginafe@user/cmagina)
[00:54:55] *** Quits: Codaraxis (~Codaraxis@user/codaraxis) (Remote host closed the connection)
[00:55:21] *** Joins: Codaraxis (~Codaraxis@user/codaraxis)
[00:55:40] *** Joins: pepper (~pepper@user/pepper)
[00:57:38] *** Joins: EgonX (~EgonX@2601:2c6:47f:879e:b949:3ab6:25f0:720c)
[00:57:55] *** Joins: nuclearg1 (~nucleargr@user/nuclearg1)
[00:58:29] *** Quits: TheCat (~TheCat@user/z-cat) (Ping timeout: 250 seconds)
[00:58:37] *** Joins: Vision (~Vision@023-084-128-214.res.spectrum.com)
[00:59:50] *** Quits: BlessJah (~BlessJah@user/blessjah) (Remote host closed the connection)
[01:00:39] *** Quits: aslicedbanjo (~aslicedba@host86-134-28-13.range86-134.btcentralplus.com) (Quit: Leaving.)
[01:00:40] *** Quits: EgonX_ (~EgonX@38.66.76.50) (Ping timeout: 246 seconds)
[01:02:06] *** Joins: Vision-_- (~Vision@023-084-128-214.res.spectrum.com)
[01:02:42] *** Quits: nuclearg1 (~nucleargr@user/nuclearg1) (Ping timeout: 260 seconds)
[01:03:04] *** Joins: BlessJah (~BlessJah@user/blessjah)
[01:04:21] *** Quits: Vision (~Vision@023-084-128-214.res.spectrum.com) (Ping timeout: 250 seconds)
[01:04:54] *** Quits: powftw (uid448161@id-448161.lymington.irccloud.com) (Quit: Connection closed for inactivity)
[01:04:55] *** Quits: Thanatos (~Thanatos@ec2-54-148-37-124.us-west-2.compute.amazonaws.com) (Ping timeout: 260 seconds)
[01:06:29] *** Joins: konfusedagain (~konfuseda@125.99.177.198)
[01:06:37] *** Joins: julia__ (~quassel@user/julia)
[01:06:44] *** Joins: zacts (~zacts@user/zacts)
[01:06:57] *** Quits: Vision-_- (~Vision@023-084-128-214.res.spectrum.com) (Ping timeout: 250 seconds)
[01:07:01] *** Joins: jazzy (~jaziz@user/jaziz)
[01:07:35] *** Quits: julia (~quassel@user/julia) (Ping timeout: 256 seconds)
[01:07:40] *** Joins: Vision (~Vision@023-084-128-214.res.spectrum.com)
[01:09:09] *** Joins: Vision-_- (~Vision@023-084-128-214.res.spectrum.com)
[01:10:59] *** Quits: roxfan (~roxfan@2a02:a03f:a2be:4f00:913a:502b:5b7b:1e2b) (Ping timeout: 260 seconds)
[01:11:54] *** Joins: Spiral-_- (~Vision@023-084-128-214.res.spectrum.com)
[01:12:09] *** Quits: Vision (~Vision@023-084-128-214.res.spectrum.com) (Ping timeout: 250 seconds)
[01:12:35] *** Quits: gevreeen (~gevreeen@2001:470:67:326:d879:e6f4:586a:79af) (Ping timeout: 250 seconds)
[01:14:12] *** Joins: storm_ (~storm@176.33.64.156)
[01:14:22] *** Quits: Vision-_- (~Vision@023-084-128-214.res.spectrum.com) (Ping timeout: 260 seconds)
[01:14:28] *** Joins: mekhami (~mekhami@12.161.60.162)
[01:16:07] <mekhami> design question: i'm making an api client, the api uses token auth. i can generate a token with an id and password, but then would obviously prefer to use that token/refresh token going forward rather than generating a new token before every request. how would you persist that token across requests, across workers in the case of a django app where you can't just hold things in memory? would you
[01:16:09] <mekhami> store it in redis or a database, or is there some smarter way?
[01:16:38] *** Quits: storm_ (~storm@176.33.64.156) (Client Quit)
[01:16:58] *** Quits: philipp64 (~philipp64@65.129.128.199) (Quit: philipp64)
[01:17:00] *** Joins: Vision (~Vision@023-084-128-214.res.spectrum.com)
[01:18:06] *** Quits: Spiral-_- (~Vision@023-084-128-214.res.spectrum.com) (Ping timeout: 260 seconds)
[01:18:40] *** Quits: winterflaw (~winterfla@gateway/tor-sasl/winterflaw) (Remote host closed the connection)
[01:18:44] <grym> lsrtl_: you can ask here
[01:18:53] *** Quits: Deknos (~someone@user/menace) (Quit: Deknos)
[01:19:04] *** Quits: greedom (~greedom@p200300de6714360009c6eb8f0484c9b8.dip0.t-ipconnect.de) (Remote host closed the connection)
[01:19:09] *** Quits: qlixed (~qlixed@181.44.129.13) (Quit: That's all folks!!)
[01:19:13] <lsrtl_> hi, on setup.cfg
[01:19:48] *** Quits: vlm (~vlm@user/vlm) (Quit: "")
[01:20:18] <lsrtl_> I've make my package installable(hope so).  setup.cfg, toml etc. all done. "python -m build" generates all the things - egg info and archives.
[01:22:11] <lsrtl_> one of the install_requires is a git repo link in a format "project @ git+https://<url>". after a built I don't see the package available for use. it isn't listed by the pip ("pip list")
[01:22:38] *** Quits: ericleer (~ericleer@dhcp-077-249-173-130.chello.nl) (Ping timeout: 272 seconds)
[01:23:16] *** Joins: jazzy2 (~jaziz@user/jaziz)
[01:23:30] <EdFletcher> mekhami: Yeah you’ve got to persist that token in some way and given that your auth endpoint is likely to be pretty high-frequency you’ll want that lookup to be quick, so Redis is often what people chose indeed
[01:23:32] *** Joins: jpn (~jpn@user/jpn)
[01:23:51] <lsrtl_> should I then create requirements.txt and put the deps there, ie duplicating all from install_require of setup.cfg ?!
[01:24:43] *** Quits: Codaraxis (~Codaraxis@user/codaraxis) (Remote host closed the connection)
[01:25:14] *** Joins: Codaraxis (~Codaraxis@user/codaraxis)
[01:25:20] *** Quits: Jacques (~Jacques@2600:1702:6f0:4310:103f:908e:57b4:10ab) (Ping timeout: 250 seconds)
[01:25:49] <ztrawhcse> I'm not sure install_requires permits the use of urls instead of pypi names
[01:26:18] <ztrawhcse> requirements.txt has the advantage of supporting "anything pip install accepts"
[01:26:30] *** Quits: jazzy (~jaziz@user/jaziz) (Ping timeout: 260 seconds)
[01:26:50] <ztrawhcse> install_requires has to generate wheel metadata for Requires-Dist
[01:27:17] <ztrawhcse> lsrtl_: why do you need install_requires to specify the git repo?
[01:28:50] <lsrtl_> ztrawhcse, I need to create a dependency to a package that isn't in PyPI, but in git repo
[01:29:26] <lsrtl_> ztrawhcse, it should support url as well as pip
[01:29:36] *** Quits: xakan (~xakan@pnmx.zdx.fr) (Quit: The Lounge - https://thelounge.chat)
[01:29:36] *** Quits: mon_aaraj (~MonAaraj@user/mon-aaraj/x-4416475) (Ping timeout: 272 seconds)
[01:30:23] *** Quits: mugen (~mugen@gateway/tor-sasl/mugen) (Remote host closed the connection)
[01:30:24] *** Quits: kevr (~kevr@user/kevr) (Remote host closed the connection)
[01:30:30] *** Joins: Seto_Kaiba (~hunterkll@2001:470:8b06:100:2958:1194:aedf:1fa3)
[01:30:31] *** Joins: foobaz212 (~foobaz212@152.37.103.80)
[01:30:34] <lsrtl_> the main concern here is, that my package will install all the deps when used in some app. But for the package itself how to properly specify requirements ?!
[01:30:41] *** Joins: nuclearg1 (~nucleargr@user/nuclearg1)
[01:30:43] *** Joins: mugen (~mugen@gateway/tor-sasl/mugen)
[01:30:49] *** Joins: kevr (~kevr@user/kevr)
[01:31:03] *** Quits: stockh0lm (~Andreas@p200300d2c708320000c708ef6c3168b1.dip0.t-ipconnect.de) (Ping timeout: 260 seconds)
[01:31:29] *** Joins: mon_aaraj (~MonAaraj@user/mon-aaraj/x-4416475)
[01:32:26] <SnoopJ> lsrtl_, pip supports a good selection of version control systems, you can do e.g. `pkg @ git+https://someurl.com/your_git_repo` to install a package from a git repo. More complete information here: https://pip.pypa.io/en/stable/topics/vcs-support/#git
[01:33:02] <SnoopJ> You may want to specify a particular tag/ref if you do this
[01:33:24] *** Quits: Hunterkll (~hunterkll@2001:470:8b06:100:2958:1194:aedf:1fa3) (Ping timeout: 240 seconds)
[01:34:07] *** Joins: tomeaton17 (~tomeaton1@92.234.2.175)
[01:35:18] *** Quits: foobaz212 (~foobaz212@152.37.103.80) (Ping timeout: 250 seconds)
[01:35:21] *** Quits: nuclearg1 (~nucleargr@user/nuclearg1) (Ping timeout: 245 seconds)
[01:35:28] *** Joins: Vision-_- (~Vision@023-084-128-214.res.spectrum.com)
[01:35:57] *** Quits: epony (epony@user/epony) (Quit: QUIT)
[01:36:39] *** Quits: spetrosi (~spetrosi@2a02:8308:b:ec00:e1ce:d7b:6a8f:f189) (Remote host closed the connection)
[01:36:53] *** Joins: xakan (~xakan@pnmx.zdx.fr)
[01:36:58] *** Joins: foobaz212 (~foobaz212@152.37.103.80)
[01:37:08] *** Joins: spetrosi (~spetrosi@2a02:8308:b:ec00:e1ce:d7b:6a8f:f189)
[01:37:09] *** Joins: gentooclimax (~gentoocli@81-64-65-213.rev.numericable.fr)
[01:37:33] *** Quits: aclark (~aclark@pool-108-51-184-139.washdc.fios.verizon.net) (Quit: Client closed)
[01:37:46] *** Quits: Vision (~Vision@023-084-128-214.res.spectrum.com) (Ping timeout: 246 seconds)
[01:38:09] *** Quits: spetrosi (~spetrosi@2a02:8308:b:ec00:e1ce:d7b:6a8f:f189) (Read error: Connection reset by peer)
[01:38:31] *** Quits: foobaz212 (~foobaz212@152.37.103.80) (Client Quit)
[01:38:46] *** Joins: foobaz212 (~foobaz212@152.37.103.80)
[01:39:48] *** Joins: bitkiller (~bitkiller@user/bitkiller)
[01:39:56] *** Quits: mon_aaraj (~MonAaraj@user/mon-aaraj/x-4416475) (Ping timeout: 245 seconds)
[01:40:03] *** Joins: spetrosi (~spetrosi@2a02:8308:b:ec00:e1ce:d7b:6a8f:f189)
[01:41:01] *** Quits: spetrosi (~spetrosi@2a02:8308:b:ec00:e1ce:d7b:6a8f:f189) (Remote host closed the connection)
[01:41:08] *** Quits: funhouse (~funhouse@user/funhouse) (Quit: Client closed)
[01:41:31] *** Joins: spetrosi (~spetrosi@2a02:8308:b:ec00:e1ce:d7b:6a8f:f189)
[01:41:36] *** Joins: nuclearg1 (~nucleargr@user/nuclearg1)
[01:41:41] *** Quits: frmlof (~frmlof@70.243.238.191) (Quit: frmlof)
[01:41:44] *** Joins: Thanatos (~Thanatos@ec2-54-148-37-124.us-west-2.compute.amazonaws.com)
[01:42:01] *** Joins: mon_aaraj (~MonAaraj@user/mon-aaraj/x-4416475)
[01:42:16] *** Quits: gentooclimax (~gentoocli@81-64-65-213.rev.numericable.fr) (Ping timeout: 272 seconds)
[01:42:31] *** Quits: spetrosi (~spetrosi@2a02:8308:b:ec00:e1ce:d7b:6a8f:f189) (Read error: Connection reset by peer)
[01:42:50] *** Quits: otisolsen70 (~otisolsen@xd4ed80b5.cust.hiper.dk) (Quit: Leaving)
[01:43:02] *** Quits: manti7 (~manti7@176.10.104.94) (Quit: WeeChat 3.4)
[01:43:32] *** Joins: spetrosi (~spetrosi@2a02:8308:b:ec00:e1ce:d7b:6a8f:f189)
[01:43:58] *** Quits: foobaz212 (~foobaz212@152.37.103.80) (Ping timeout: 250 seconds)
[01:44:35] *** Quits: magla (~gelignite@55d42a76.access.ecotel.net) (Quit: Stay safe!)
[01:45:12] *** Quits: Stench (~Staunch@c-24-7-237-208.hsd1.mn.comcast.net) (Remote host closed the connection)
[01:45:24] *** Quits: spetrosi (~spetrosi@2a02:8308:b:ec00:e1ce:d7b:6a8f:f189) (Read error: Connection reset by peer)
[01:45:45] *** Joins: Staunch (~Staunch@137.83.202.220)
[01:46:21] <ztrawhcse> lsrtl_: why should install_requires support it "as well as pip"? Why should it support it at all? They are totaly different concepts used by different tools.
[01:46:28] *** Quits: adiKt (uid472628@id-472628.tinside.irccloud.com) (Quit: Connection closed for inactivity)
[01:46:59] *** Quits: MerrinX (~merrinx@ti0028a400-3686.bb.online.no) (Quit: WeeChat 3.4.1)
[01:48:35] *** Quits: AnselmoCampanas (~AnselmoCa@190.99.69.41) (Quit: Client closed)
[01:48:39] *** Quits: msk (~Thunderbi@89.205.124.39) (Read error: Connection reset by peer)
[01:49:18] <lsrtl_> ztrawhcse, I presume, that list is fed to pip
[01:49:29] *** Quits: blei (~blei@user/blei) (Quit: Client closed)
[01:49:52] *** Quits: gitly (~gitly@85.255.234.42) (Ping timeout: 272 seconds)
[01:49:53] *** Quits: vdamewood (~vdamewood@fedora/vdamewood) (Quit: My MacBook Pro has gone to sleep. ZZZzzz…)
[01:50:09] <ztrawhcse> well, no
[01:50:21] <ztrawhcse> that list is embedded into the wheel metadata as Requires-Dist
[01:50:31] <ztrawhcse> so it needs to be a Dist name
[01:50:52] <ztrawhcse> pip does try to install any required Dists, yes
[01:51:15] *** Joins: gitly (~gitly@185.69.145.79)
[01:51:32] <ztrawhcse> it may also try to normalize the name first
[01:52:58] *** Quits: Strom (strom@fedora/strom) ()
[01:54:27] *** Quits: zacts (~zacts@user/zacts) (Quit: Client closed)
[01:54:59] *** Joins: Strom (strom@fedora/strom)
[01:55:36] *** Joins: jay-m126 (~jay-m@d75-159-62-172.abhsia.telus.net)
[01:56:11] *** Quits: zer0bitz (~zer0bitz@2001:2003:f750:a200:88a0:fb04:2d2:c434) (Ping timeout: 245 seconds)
[01:56:23] *** Joins: foobaz212 (~foobaz212@152.37.103.80)
[01:56:55] <lsrtl_> ztrawhcse, the question is different. If my package foo has deps, a) automate installation of the deps when my package is used in the script bar b) if install_required of setup.cfg is used for such purpose, should I use requirements.txt as well during the dev of the foo package ?
[01:56:56] *** Quits: ncwbqcfe (~rvgzuuqp@gateway/tor-sasl/rvgzuuqp) (Quit: ncwbqcfe)
[01:57:52] *** Joins: ncwbqcfe (~rvgzuuqp@gateway/tor-sasl/rvgzuuqp)
[01:58:25] <SnoopJ> lsrtl_, requirements.txt is useful when you want to record the details of an _environment_. This is a little less common. Dev dependencies are often recorded by making a [dev] extra for your package
[01:58:47] <SnoopJ> but sometimes you need to be able to distribute a list of requirements that have nothing to do with a package, and that's where requirements.txt is useful
[01:59:26] <ztrawhcse> requirements.txt is the wild west of standards so many people actually have requirements.txt with the baseline requirements, and requirements-dev.txt recording the details of an environment
[01:59:44] <ztrawhcse> and sometimes requirements-dev.txt is *just* the [dev] extra
[01:59:56] <SnoopJ> the format itself is very well specified, usage much less so
[02:00:18] *** Quits: ghost43 (~ghost43@gateway/tor-sasl/ghost43) (Remote host closed the connection)
[02:00:25] <ztrawhcse> I was referring to its usage, anyway :D
[02:01:04] *** Joins: ghost43 (~ghost43@gateway/tor-sasl/ghost43)
[02:01:22] <ztrawhcse> anyway, constraints files seem more generally useful as a lockfile (which is what people tend to use requirements for)
[02:01:35] *** Joins: peteyboy_ (~peteyboy1@199.157.133.37.dynamic.jazztel.es)
[02:01:50] *** Joins: AnselmoCampanas (~AnselmoCa@190.99.69.41)
[02:02:02] *** Seto_Kaiba is now known as Hunterkll
[02:02:32] *** Quits: peteyboy1 (~peteyboy1@199.157.133.37.dynamic.jazztel.es) (Ping timeout: 272 seconds)
[02:03:01] *** Joins: funhouse (~funhouse@user/funhouse)
[02:03:17] *** Joins: YuGiOhJCJ (~YuGiOhJCJ@gateway/tor-sasl/yugiohjcj)
[02:03:22] *** Joins: spetrosi (~spetrosi@2a02:8308:b:ec00:e1ce:d7b:6a8f:f189)
[02:03:34] *** Quits: darksun (~darksun@user/darksun) (Quit: leaving)
[02:04:09] *** Joins: ghost43_ (~ghost43@gateway/tor-sasl/ghost43)
[02:04:54] *** Quits: spetrosi (~spetrosi@2a02:8308:b:ec00:e1ce:d7b:6a8f:f189) (Read error: Connection reset by peer)
[02:05:42] *** Joins: spetrosi (~spetrosi@2a02:8308:b:ec00:e1ce:d7b:6a8f:f189)
[02:05:50] *** Quits: Viewday115 (~Viewday@user/viewday) (Read error: Connection reset by peer)
[02:05:55] *** Quits: ghost43 (~ghost43@gateway/tor-sasl/ghost43) (Ping timeout: 240 seconds)
[02:06:11] *** Joins: Viewday115 (~Viewday@user/viewday)
[02:06:18] *** Joins: merijn (~merijn@c-001-001-001.client.esciencecenter.eduvpn.nl)
[02:06:36] *** Quits: spetrosi (~spetrosi@2a02:8308:b:ec00:e1ce:d7b:6a8f:f189) (Remote host closed the connection)
[02:07:01] *** Joins: spetrosi (~spetrosi@2a02:8308:b:ec00:e1ce:d7b:6a8f:f189)
[02:07:05] <lsrtl_> okay, if look on it from a different angle. During the dev I add as much package as needed(altering my environment) is one thing, but when making it installable(for some other app/script) I have to make sure that all the deps are listed in install_required of setup.cfg(or alternative place if exists). The point here - these two things can't be tied up
[02:07:12] *** Quits: cosimone (~user@93-44-187-176.ip98.fastwebnet.it) (Quit: ERC (IRC client for Emacs 27.1))
[02:07:14] *** Joins: grooverman (~grooverma@179.97.175.157)
[02:08:19] *** Quits: spetrosi (~spetrosi@2a02:8308:b:ec00:e1ce:d7b:6a8f:f189) (Read error: Connection reset by peer)
[02:08:28] *** Quits: Lando-SpacePimp (~Lando-Spa@user/lando-spacepimp) (Ping timeout: 260 seconds)
[02:08:36] *** Joins: spetrosi (~spetrosi@2a02:8308:b:ec00:e1ce:d7b:6a8f:f189)
[02:10:06] *** Quits: Deneb (~johnch@194.82.159.143.dyn.plus.net) (Quit: Leaving)
[02:10:58] *** Joins: agireud (~agireud@user/agireud)
[02:11:16] *** Quits: spetrosi (~spetrosi@2a02:8308:b:ec00:e1ce:d7b:6a8f:f189) (Read error: Connection reset by peer)
[02:11:56] *** Joins: djapo (~archangel@user/djapo)
[02:12:21] *** Joins: hiroshi_ (~freedom@151.35.6.191)
[02:13:44] *** Joins: spetrosi (~spetrosi@2a02:8308:b:ec00:e1ce:d7b:6a8f:f189)
[02:14:07] *** Joins: msk (~Thunderbi@89.205.124.39)
[02:14:28] *** Joins: causasui (~causasui@c-68-60-125-136.hsd1.mi.comcast.net)
[02:14:38] *** Quits: Enitin (~Enitin@82.180.145.226) (Read error: Connection reset by peer)
[02:14:52] *** Quits: peteyboy_ (~peteyboy1@199.157.133.37.dynamic.jazztel.es) (Ping timeout: 246 seconds)
[02:14:59] *** Joins: Enitin (~Enitin@82.180.145.226)
[02:15:01] *** Quits: dthpulse (~quassel@podciarou.sk) (Quit: https://quassel-irc.org - Chat comfortably. Anywhere.)
[02:15:01] *** Quits: spetrosi (~spetrosi@2a02:8308:b:ec00:e1ce:d7b:6a8f:f189) (Read error: Connection reset by peer)
[02:15:41] <nedbat> Anyone have Mac Monterey and can try installing coverage.py?  https://github.com/nedbat/coveragepy/issues/1349
[02:15:57] *** Joins: spetrosi (~spetrosi@2a02:8308:b:ec00:e1ce:d7b:6a8f:f189)
[02:16:17] *** Joins: frmlof (~frmlof@70.243.238.191)
[02:16:23] *** Quits: djapo (~archangel@user/djapo) (Ping timeout: 256 seconds)
[02:16:27] *** Joins: dthpulse (~quassel@podciarou.sk)
[02:16:40] *** Joins: peteyboy1 (~peteyboy1@199.157.133.37.dynamic.jazztel.es)
[02:17:03] *** Quits: msk (~Thunderbi@89.205.124.39) (Client Quit)
[02:17:13] *** Quits: jay-m126 (~jay-m@d75-159-62-172.abhsia.telus.net) (Ping timeout: 260 seconds)
[02:17:32] *** Quits: spetrosi (~spetrosi@2a02:8308:b:ec00:e1ce:d7b:6a8f:f189) (Remote host closed the connection)
[02:17:58] *** Joins: spetrosi (~spetrosi@2a02:8308:b:ec00:e1ce:d7b:6a8f:f189)
[02:18:49] <greatgatsby> lsrtl_, does setup.cfg support something like setup.py's extras_require?  Here's a setup.py example from httpie with tests_require and dev_require:  https://github.com/httpie/httpie/blob/master/setup.py
[02:19:01] *** Quits: spetrosi (~spetrosi@2a02:8308:b:ec00:e1ce:d7b:6a8f:f189) (Remote host closed the connection)
[02:19:07] *** Quits: Jong (~Jong@184-99-74-148.boid.qwest.net) (Ping timeout: 260 seconds)
[02:19:34] *** Quits: foobaz212 (~foobaz212@152.37.103.80) (Quit: Client closed)
[02:19:47] *** Joins: foobaz212 (~foobaz212@152.37.103.80)
[02:19:52] *** Joins: jpn_ (~jpn@user/jpn)
[02:20:07] *** Joins: spetrosi (~spetrosi@2a02:8308:b:ec00:e1ce:d7b:6a8f:f189)
[02:20:31] *** Quits: spetrosi (~spetrosi@2a02:8308:b:ec00:e1ce:d7b:6a8f:f189) (Read error: Connection reset by peer)
[02:20:49] *** Quits: jpn (~jpn@user/jpn) (Ping timeout: 246 seconds)
[02:20:54] *** Joins: spetrosi (~spetrosi@2a02:8308:b:ec00:e1ce:d7b:6a8f:f189)
[02:22:07] *** Quits: spetrosi (~spetrosi@2a02:8308:b:ec00:e1ce:d7b:6a8f:f189) (Remote host closed the connection)
[02:22:36] *** Joins: spetrosi (~spetrosi@2a02:8308:b:ec00:e1ce:d7b:6a8f:f189)
[02:22:40] *** Quits: Midjak (~Midjak@82.66.147.146) (Quit: Leaving)
[02:22:57] *** Joins: the_lanetly_052_ (~the_lanet@194.135.169.165)
[02:23:09] <lsrtl_> greatgatsby, ic, it's doable.
[02:23:10] *** Joins: kyooo (~kyooo@2a02:a31d:a13c:5600:559d:f748:905d:cda9)
[02:23:26] *** Quits: harpia (~harpia@143.208.84.100) (Quit: harpia)
[02:23:48] *** Quits: spetrosi (~spetrosi@2a02:8308:b:ec00:e1ce:d7b:6a8f:f189) (Remote host closed the connection)
[02:24:10] *** Joins: junebug (~junebug@2600:1700:3db0:2540:2774:4d56:3e4e:44ed)
[02:24:17] <greatgatsby> lsrtl_, that's how you get things like `pip install foobar[bizbaz]`
[02:24:41] *** Joins: soju-test-user (~soju-test@2a01cb040760a5cb0000000000000318.ipv6.abo.wanadoo.fr)
[02:24:44] *** Joins: spetrosi (~spetrosi@2a02:8308:b:ec00:e1ce:d7b:6a8f:f189)
[02:25:08] *** Quits: foobaz212 (~foobaz212@152.37.103.80) (Ping timeout: 250 seconds)
[02:25:23] *** Quits: the_lanetly_052 (~the_lanet@194.135.169.76) (Ping timeout: 260 seconds)
[02:25:31] *** Quits: spetrosi (~spetrosi@2a02:8308:b:ec00:e1ce:d7b:6a8f:f189) (Read error: Connection reset by peer)
[02:25:32] *** Joins: _0x00 (~0x00@user/0x00/x-6246543)
[02:25:52] *** Joins: howdoi (uid224@id-224.lymington.irccloud.com)
[02:26:15] *** Quits: rendar (~rendar@user/rendar) (Quit: Leaving)
[02:26:41] *** Quits: konfusedagain (~konfuseda@125.99.177.198) (Ping timeout: 250 seconds)
[02:27:15] *** Quits: EvilDMP (~textual@django/moderator/EvilDMP) (Quit: My MacBook has gone to sleep. ZZZzzz…)
[02:27:32] *** Joins: spetrosi (~spetrosi@2a02:8308:b:ec00:e1ce:d7b:6a8f:f189)
[02:28:31] *** Quits: spetrosi (~spetrosi@2a02:8308:b:ec00:e1ce:d7b:6a8f:f189) (Remote host closed the connection)
[02:28:38] *** Quits: frmlof (~frmlof@70.243.238.191) (Quit: frmlof)
[02:29:35] *** Joins: spetrosi (~spetrosi@2a02:8308:b:ec00:e1ce:d7b:6a8f:f189)
[02:30:36] *** Joins: konfusedagain (~konfuseda@125.99.177.198)
[02:31:06] *** Quits: spetrosi (~spetrosi@2a02:8308:b:ec00:e1ce:d7b:6a8f:f189) (Read error: Connection reset by peer)
[02:31:23] *** Quits: ghost43_ (~ghost43@gateway/tor-sasl/ghost43) (Remote host closed the connection)
[02:31:31] *** Joins: spetrosi (~spetrosi@2a02:8308:b:ec00:e1ce:d7b:6a8f:f189)
[02:31:36] *** Quits: Payam38 (~Payam@138.106.57.131) (Quit: Client closed)
[02:32:08] *** Joins: ghost43 (~ghost43@gateway/tor-sasl/ghost43)
[02:32:24] *** Quits: spetrosi (~spetrosi@2a02:8308:b:ec00:e1ce:d7b:6a8f:f189) (Read error: Connection reset by peer)
[02:32:36] *** Joins: spetrosi_ (~spetrosi@2a02:8308:b:ec00:e1ce:d7b:6a8f:f189)
[02:34:08] *** Joins: Lando-SpacePimp (~Lando-Spa@user/lando-spacepimp)
[02:34:43] *** Joins: spetrosi__ (~spetrosi@2a02:8308:b:ec00:e1ce:d7b:6a8f:f189)
[02:34:44] *** Quits: rampart (~rampart@4.sub-174-250-0.myvzw.com) (Remote host closed the connection)
[02:34:45] *** Quits: spetrosi_ (~spetrosi@2a02:8308:b:ec00:e1ce:d7b:6a8f:f189) (Read error: Connection reset by peer)
[02:35:34] *** Joins: zacts (~zacts@user/zacts)
[02:35:52] *** Joins: jay-m126 (~jay-m@d75-159-62-172.abhsia.telus.net)
[02:36:01] *** Quits: spetrosi__ (~spetrosi@2a02:8308:b:ec00:e1ce:d7b:6a8f:f189) (Read error: Connection reset by peer)
[02:36:10] *** Quits: junebug (~junebug@2600:1700:3db0:2540:2774:4d56:3e4e:44ed) (Quit: Leaving)
[02:36:41] *** Joins: spetrosi_ (~spetrosi@2a02:8308:b:ec00:e1ce:d7b:6a8f:f189)
[02:38:15] *** Quits: merijn (~merijn@c-001-001-001.client.esciencecenter.eduvpn.nl) (Ping timeout: 256 seconds)
[02:38:22] *** Quits: ghost43 (~ghost43@gateway/tor-sasl/ghost43) (Remote host closed the connection)
[02:38:23] *** Quits: spetrosi_ (~spetrosi@2a02:8308:b:ec00:e1ce:d7b:6a8f:f189) (Read error: Connection reset by peer)
[02:38:31] *** Quits: GreenResponse (~tomek@r-45-155-148-237.gpon.bialnet.pl) (Quit: Leaving)
[02:38:45] *** Joins: ghost43 (~ghost43@gateway/tor-sasl/ghost43)
[02:38:52] *** Joins: rampart (~rampart@5.sub-174-250-0.myvzw.com)
[02:42:14] *** Quits: Staunch (~Staunch@137.83.202.220) (Remote host closed the connection)
[02:42:47] *** Quits: peteyboy1 (~peteyboy1@199.157.133.37.dynamic.jazztel.es) (Ping timeout: 252 seconds)
[02:43:37] *** Joins: Staunch (~Staunch@137.83.202.220)
[02:45:20] *** Joins: radu242 (~radu242@pool-96-250-220-83.nycmny.fios.verizon.net)
[02:45:33] *** Joins: withered_wolf (~withered_@1437135-v103.1561-static.stchilaa.metronetinc.net)
[02:47:01] *** Quits: whatsupboy (~whatsupbo@user/scobydoo) (Quit: WeeChat 2.8)
[02:47:12] *** Joins: whatsupboy (~whatsupbo@user/scobydoo)
[02:47:17] *** Quits: whatsupboy (~whatsupbo@user/scobydoo) (Client Quit)
[02:47:24] <grym> lsrtl_: https://bpa.st/V62Q is this what you had in mind?
[02:48:01] *** Joins: mug3n (~mugen@gateway/tor-sasl/mugen)
[02:50:47] *** Joins: admin123 (harrymoren@gateway/vpn/protonvpn/admin123)
[02:50:55] *** Quits: mugen (~mugen@gateway/tor-sasl/mugen) (Ping timeout: 240 seconds)
[02:52:27] *** Quits: pepper (~pepper@user/pepper) (Read error: Connection reset by peer)
[02:52:34] *** Quits: admin124 (harrymoren@gateway/vpn/protonvpn/admin123) (Ping timeout: 272 seconds)
[02:53:39] <lsrtl_> grym, yes :) put that in there, and I believe it will work, but run into really odd thing.. put that into requirements.txt file for a test with the intention to run "pip install -r requirements.txt". for git+ssh it fails on git clone with permission denied(public key), like I have no access to it.... in the very same command line(it's pycharm+win10, dont ask why) I run "git clone my-lovely-repo" - success
[02:53:52] <lsrtl_> that thing will kill me
[02:54:35] *** Quits: grooverman (~grooverma@179.97.175.157) (Remote host closed the connection)
[02:54:43] *** Parts: exarkun (~exarkun@user/exarkun) (WeeChat 3.3)
[02:54:44] <grym> where a process inherits its environment from can be tricky
[02:54:46] <grym> :(
[02:55:17] *** Quits: flower_ (~archie@217-123-218-6.cable.dynamic.v4.ziggo.nl) (Ping timeout: 250 seconds)
[02:55:25] *** Quits: LucaTM (~LucaTM@user/lucatm) (Quit: Textual IRC Client: www.textualapp.com)
[02:55:46] *** Joins: grooverman (~grooverma@179.97.175.157)
[02:56:16] <lsrtl_> it is in context of a venv
[02:57:36] <gjvc> in my gjvc-standard-project i have a bin/venv-python script acting as a wrapper to the .venv/bin/python ... bin/venv-python sets the environment for execution
[02:57:44] <gjvc> (and everything must use that)
[02:57:53] *** Quits: Praise (~Fat@user/praise) (Ping timeout: 250 seconds)
[02:58:27] <gjvc> and this is one way to control environment variables
[02:58:28] *** Quits: blindguard (~blindguar@2a02:908:1864:c200::beb) (Quit: Konversation terminated!)
[02:58:54] *** Quits: revolve (~u0_a227@cpc100838-bagu15-2-0-cust672.1-3.cable.virginm.net) (Ping timeout: 272 seconds)
[03:00:04] *** Joins: nomic (~nomic@185.217.117.233)
[03:00:17] *** Quits: runelind (~runelind@user/runelind) (Ping timeout: 240 seconds)
[03:00:21] *** Joins: Praise (~Fat@user/praise)
[03:01:16] *** Quits: fedenix (~fedenix@gateway/tor-sasl/fedenix) (Remote host closed the connection)
[03:01:35] *** Quits: kosh (~kosh@user/kosh) (Ping timeout: 260 seconds)
[03:01:46] *** Quits: plastico (~plastico@neomutt/plastico) (Quit: WeeChat 3.4)
[03:02:31] *** Quits: nyah (~nyah@05453449.skybroadband.com) (Ping timeout: 260 seconds)
[03:03:08] *** Quits: Y4knotiS (~YaknotiS@cpc1-cmbg18-2-0-cust87.5-4.cable.virginm.net) (Ping timeout: 252 seconds)
[03:03:14] *** Quits: upsala (~zcb@185.209.196.134) (Quit: WeeChat 3.5)
[03:05:01] *** Quits: soju-test-user (~soju-test@2a01cb040760a5cb0000000000000318.ipv6.abo.wanadoo.fr) (Ping timeout: 240 seconds)
[03:05:14] *** Quits: kyooo (~kyooo@2a02:a31d:a13c:5600:559d:f748:905d:cda9) (Quit: Leaving)
[03:05:20] *** Joins: revolve (~u0_a227@cpc100838-bagu15-2-0-cust672.1-3.cable.virginm.net)
[03:06:37] *** Joins: frmlof (~frmlof@70.243.238.191)
[03:07:55] *** Joins: roxfan (~roxfan@2a02:a03f:a2be:4f00:913a:502b:5b7b:1e2b)
[03:08:00] *** Joins: taoe (~taoe@pool-96-253-125-62.rcmdva.fios.verizon.net)
[03:09:08] *** Quits: pedahzur (~jkugler@2600:380:7038:7446:be6a:57f0:1cb3:21a1) (Ping timeout: 260 seconds)
[03:09:34] *** Joins: pedahzur (~jkugler@2600:380:704f:5b8e:735:a0d0:1856:ba18)
[03:09:59] *** Quits: taoe (~taoe@pool-96-253-125-62.rcmdva.fios.verizon.net) (Client Quit)
[03:10:03] *** Joins: runelind (~runelind@user/runelind)
[03:10:13] *** Quits: bitkiller (~bitkiller@user/bitkiller) (Ping timeout: 250 seconds)
[03:11:00] *** Joins: moog_ (~moog@98.97.85.203)
[03:12:15] *** Quits: data68 (~data@2a02:908:a67:2ce0:4197:8ffe:f671:b843) (Ping timeout: 256 seconds)
[03:12:56] *** Quits: Auron (~Auron956@user/auron) (Remote host closed the connection)
[03:13:47] *** Quits: moog (~moog@107.77.244.98) (Ping timeout: 260 seconds)
[03:14:42] *** Quits: revolve (~u0_a227@cpc100838-bagu15-2-0-cust672.1-3.cable.virginm.net) (Read error: Connection reset by peer)
[03:15:47] *** Quits: jpn_ (~jpn@user/jpn) (Ping timeout: 252 seconds)
[03:16:32] *** Quits: sobkas (~sobkas@95.175.17.217) (Quit: sobkas)
[03:17:18] *** Joins: jpn (~jpn@user/jpn)
[03:17:32] *** Quits: zacts (~zacts@user/zacts) (Quit: Client closed)
[03:17:51] *** Quits: tomeaton17 (~tomeaton1@92.234.2.175) (Quit: Client closed)
[03:19:55] *** Joins: revolve (~u0_a227@cpc100838-bagu15-2-0-cust672.1-3.cable.virginm.net)
[03:20:21] *** Joins: xrogaan (~xrogaan@user/xrogaan)
[03:22:51] *** Joins: afree (~afree@ada.cs.pdx.edu)
[03:23:52] *** Quits: Pickchea (~private@user/pickchea) (Quit: Leaving)
[03:23:59] <afree> Hey everyone. I'm trying to generate a sin wave in python. I've found some code that does what I want but having trouble understanding it. Does anyone with audio experience know what the *= 128 and *= 256 lines are doing here? https://stackoverflow.com/a/27571460
[03:24:09] *** Quits: haris (~haris@69.169.3.81) (Remote host closed the connection)
[03:24:52] *** Quits: kujo (~kujo@188.166.12.52) (Ping timeout: 272 seconds)
[03:25:23] <mekhami> afree: open up a python repl (python on the command line) and type a = 2, and a *= 2, and then print out the value of a
[03:25:31] *** Quits: flyback (~flyback@2601:540:8201:1e60::de9) (Quit: Leaving)
[03:28:07] *** Joins: flyback (~flyback@2601:540:8201:1e60::de9)
[03:28:29] *** Joins: foobaz212 (~foobaz212@152.37.103.80)
[03:28:37] *** Joins: kujo (~kujo@188.166.12.52)
[03:30:57] *** Quits: Jck_true (~jcktrue@user/jck-true/x-0200799) (Quit: Ping timeout (120 seconds))
[03:31:16] *** Quits: Forsaken87 (~quassel@ip-037-201-193-116.um10.pools.vodafone-ip.de) (Quit: https://quassel-irc.org - Chat comfortably. Anywhere.)
[03:31:32] <SnoopJ> afree, the first one looks like it's setting the amplitude of the sine wave (it goes up to 128.0, down to -128.0, i.e. it's an 8-bit signed sample). The second one is I think a volume control (i.e. there are 256**(WIDTH-1) levels of sample volume)
[03:31:59] <SnoopJ> the first one was pretty clear to me right away, I had to just run the file with and without the second multiplication to figure out what it was *for* :)
[03:34:02] *** Quits: foobaz212 (~foobaz212@152.37.103.80) (Ping timeout: 250 seconds)
[03:34:47] *** Quits: zeenk (~zeenk@2a02:2f04:a313:d600:8d26:ec9f:3ff6:fc94) (Quit: Konversation terminated!)
[03:35:18] *** Quits: ghost43 (~ghost43@gateway/tor-sasl/ghost43) (Remote host closed the connection)
[03:35:38] *** Quits: MJ (~mjpieters@zopatista.plus.com) (Ping timeout: 272 seconds)
[03:35:43] *** Joins: ghost43 (~ghost43@gateway/tor-sasl/ghost43)
[03:36:07] *** Quits: Wulf (~Wulf@user/wulf) (Ping timeout: 260 seconds)
[03:36:30] <SnoopJ> `vol = abs(math.sin(i * 2*math.pi * 10/ (BITRATE*LENGTH))); value *= vol  # sounds a bit like a telephone ringer!`
[03:36:32] *** Joins: dre (~dre@2001:8003:c932:c301:ddea:d36a:75bb:2e08)
[03:37:36] *** Joins: Wulf (~Wulf@user/wulf)
[03:38:52] *** Quits: amogorkon (~amogorkon@user/amogorkon) (Ping timeout: 260 seconds)
[03:38:57] *** Joins: FlipFlop (~FlipFlop@user/fl1pfl0p)
[03:40:05] *** Joins: MJ (~mjpieters@zopatista.plus.com)
[03:40:55] *** Joins: ttree (~ttree0@c-24-17-16-242.hsd1.wa.comcast.net)
[03:41:39] *** Quits: johnkeats6 (~johnkeats@2804:14c:32:a0cc:f517:49e6:c7f8:1ff3) (Ping timeout: 250 seconds)
[03:42:58] *** Quits: slav0nic (slav0nic@python.su) (Ping timeout: 260 seconds)
[03:42:58] *** Joins: justsomeguy (~justsomeg@user/justsomeguy)
[03:43:11] *** Quits: Optimus (~risto@87.227.227.147) ()
[03:43:42] *** Quits: ckdCreations (~ckdCreati@147.55.133.141) (Read error: Connection reset by peer)
[03:45:15] *** Quits: tuskkk____ (uid18470@id-18470.tinside.irccloud.com) (Quit: Connection closed for inactivity)
[03:45:24] *** Quits: mat001_ (~mat001@72.28.108.216) (Ping timeout: 240 seconds)
[03:45:27] *** Quits: mat001 (~mat001@89.45.90.157) (Ping timeout: 260 seconds)
[03:45:40] *** Joins: Atque (~Atque@user/atque)
[03:46:48] *** Parts: agireud (~agireud@user/agireud) ()
[03:47:03] *** Quits: Foxyloxy (~foxyloxy@cpc151593-shef16-2-0-cust343.17-1.cable.virginm.net) (Ping timeout: 250 seconds)
[03:48:43] *** Quits: zuQe85 (~zuQe8@cpc105060-sgyl40-2-0-cust136.18-2.cable.virginm.net) (Ping timeout: 260 seconds)
[03:48:48] *** Quits: revolve (~u0_a227@cpc100838-bagu15-2-0-cust672.1-3.cable.virginm.net) (Ping timeout: 260 seconds)
[03:48:50] *** Quits: lesault (~lesault@user/lesault) (Ping timeout: 260 seconds)
[03:48:56] *** Quits: luva (~luva@185.168.9.235) (Ping timeout: 272 seconds)
[03:53:51] *** Joins: Foxyloxy (~foxyloxy@cpc151593-shef16-2-0-cust343.17-1.cable.virginm.net)
[03:53:55] *** Joins: sarsbeauty (~sarsbeaut@2407:7000:9d99:d00:e4b8:c94a:a731:63b8)
[03:54:03] *** Joins: lesault (~lesault@user/lesault)
[03:55:32] *** Joins: revolve (~u0_a227@cpc100838-bagu15-2-0-cust672.1-3.cable.virginm.net)
[03:55:55] *** Joins: tarel2 (~tarel2@139.28.216.245)
[03:56:55] *** Joins: luva (~luva@37.120.197.53)
[03:57:33] *** Quits: vicfred (~vicfred@user/vicfred) (Ping timeout: 260 seconds)
[04:00:35] *** Joins: zuQe85 (~zuQe8@cpc105060-sgyl40-2-0-cust136.18-2.cable.virginm.net)
[04:02:04] *** Quits: ncwbqcfe (~rvgzuuqp@gateway/tor-sasl/rvgzuuqp) (Quit: ncwbqcfe)
[04:02:22] *** Quits: ghost43 (~ghost43@gateway/tor-sasl/ghost43) (Remote host closed the connection)
[04:03:07] *** Joins: ghost43 (~ghost43@gateway/tor-sasl/ghost43)
[04:03:28] *** Joins: Guest54 (~Guest54@2620:10d:c092:400::4:a737)
[04:03:35] *** Quits: AnselmoCampanas (~AnselmoCa@190.99.69.41) (Quit: Client closed)
[04:05:08] *** Quits: Shou (~nyah@wikipedia/Davepeta) (Ping timeout: 260 seconds)
[04:05:24] *** Quits: the_lanetly_052_ (~the_lanet@194.135.169.165) (Ping timeout: 272 seconds)
[04:05:31] *** Quits: jay-m126 (~jay-m@d75-159-62-172.abhsia.telus.net) (Ping timeout: 260 seconds)
[04:05:50] *** Quits: grimvar (~grimvar@i5C75F446.versanet.de) (Ping timeout: 252 seconds)
[04:07:24] *** Joins: grimvar (~grimvar@i5C75F432.versanet.de)
[04:07:28] *** Joins: jay-m126 (~jay-m@d75-159-62-172.abhsia.telus.net)
[04:07:59] *** Quits: jstein (~jstein@gentoo/developer/jstein) (Quit: quit)
[04:08:11] *** Quits: sarsbeauty (~sarsbeaut@2407:7000:9d99:d00:e4b8:c94a:a731:63b8) (Quit: Leaving)
[04:08:36] *** Quits: user3456 (user3456@user/user3456) (Ping timeout: 252 seconds)
[04:08:53] *** Quits: MasterK (~MK@86.127.22.26) (Remote host closed the connection)
[04:11:07] *** Quits: pedahzur (~jkugler@2600:380:704f:5b8e:735:a0d0:1856:ba18) (Ping timeout: 250 seconds)
[04:11:33] *** Quits: jarthur (~jarthur@2603-8080-1540-002d-546d-a2a7-eb54-e4bc.res6.spectrum.com) (Ping timeout: 260 seconds)
[04:13:50] *** Joins: CatCow (~wtf_over@c-73-96-109-206.hsd1.or.comcast.net)
[04:14:51] *** Quits: stoneware (~stoneware@user/stoneware) (Ping timeout: 260 seconds)
[04:15:03] <afree> thanks SnoopJ, that helps
[04:15:50] *** Joins: jamiejackson (~jamiejack@131.106.140.145)
[04:16:09] *** Quits: Thanatos (~Thanatos@ec2-54-148-37-124.us-west-2.compute.amazonaws.com) (Remote host closed the connection)
[04:16:33] *** Joins: Thanatos (~Thanatos@ec2-54-148-37-124.us-west-2.compute.amazonaws.com)
[04:16:41] <SnoopJ> afree, I haven't watched it, but Łukasz Langa gave a talk at PyCon 2021 about FM synthesis. Depending on what you're generating audio for, you might be interested in it. https://www.youtube.com/watch?v=eKEjkB2bXK4
[04:17:10] *** Quits: hiroshi_ (~freedom@151.35.6.191) (Quit: hiroshi_)
[04:18:51] <jamiejackson> hi folks. how do i assert the return value of a mocked function? https://gist.github.com/jamiejackson/7a7b397cbc9441d562ac5aec66df1250
[04:19:35] *** Joins: herjazz (~herjazz@p10295192-ipngn22201marunouchi.tokyo.ocn.ne.jp)
[04:20:42] *** Quits: dhch (~dhch@185.213.154.171) (Ping timeout: 252 seconds)
[04:21:25] *** Joins: adiKt (uid472628@id-472628.tinside.irccloud.com)
[04:24:11] <nedbat> jamiejackson: if the function is mocked, why do you need to assert its return? you aren't calling any real code, are you?
[04:24:43] *** Quits: jay-m126 (~jay-m@d75-159-62-172.abhsia.telus.net) (Ping timeout: 246 seconds)
[04:26:48] *** Joins: nemexis (~nemexis@193-62-201-31.ftth.glasoperator.nl)
[04:27:01] *** Quits: nemexis (~nemexis@193-62-201-31.ftth.glasoperator.nl) (Remote host closed the connection)
[04:27:02] *** Quits: zware (~zach@python/psf/zware) (Quit: No Ping reply in 180 seconds.)
[04:27:39] <SnoopJ> I'm confused about that aspect of the question as well
[04:28:28] *** Joins: zware (~zach@python/psf/zware)
[04:30:48] *** Joins: bitkiller (~bitkiller@user/bitkiller)
[04:31:15] *** Joins: dhch (~dhch@185.213.154.171)
[04:31:31] *** Quits: califax (~califax@user/califx) (Remote host closed the connection)
[04:31:32] <jamiejackson> it must be a weird thing to want to do, as evidenced by the lack of information on it. i am calling a function that, in turn, calls a bunch of other functions. i want to check on the return value of one of those internal functions.
[04:31:33] *** Quits: brabrax (~brabrax@user/brabrax) (Quit: ZNC 1.8.2 - https://znc.in)
[04:31:41] *** Joins: comet23 (comet23@user/comet23)
[04:31:59] *** Joins: drbeco (~beco@user/beco)
[04:32:31] *** Joins: califax (~califax@user/califx)
[04:32:53] <comet23> hello
[04:32:59] *** Joins: brabrax (~brabrax@user/brabrax)
[04:33:22] *** Quits: ghost43 (~ghost43@gateway/tor-sasl/ghost43) (Remote host closed the connection)
[04:34:06] *** Joins: ghost43 (~ghost43@gateway/tor-sasl/ghost43)
[04:34:08] <jamiejackson> it's also possible that i used the wrong terminology in my question. i just want to check on the return value of a low-level function call that's buried within the context of a high-level function call.
[04:34:20] <comet23> anyone know of a book similar to this but for css?
[04:34:21] <comet23> https://nostarch.com/big-book-small-python-projects
[04:34:54] *** Joins: foobaz212 (~foobaz212@152.37.103.80)
[04:34:55] *** Joins: summersault (~summersau@179.221.251.36)
[04:35:06] <SnoopJ> jamiejackson, the confusion is arising because we're reading "check on the return value" as "check that the code on the other side of the call did the right thing," which is not something you can do if you mock that code away
[04:35:09] *** Quits: jpds (~jpds@gateway/tor-sasl/jpds) (Remote host closed the connection)
[04:35:29] *** Joins: jpds (~jpds@gateway/tor-sasl/jpds)
[04:35:47] <SnoopJ> it might make more sense in the context of the complete code, though, I encourage you to share it with us if you can
[04:35:48] *** Quits: pa (~pah@user/pah) (Ping timeout: 272 seconds)
[04:36:39] <jamiejackson> does it help if we call it spying instead of mocking?
[04:38:00] *** Quits: summersault (~summersau@179.221.251.36) (Remote host closed the connection)
[04:38:29] <SnoopJ> jamiejackson, is the internal call something you can bust out into its own direct test?
[04:39:28] *** Quits: foobaz212 (~foobaz212@152.37.103.80) (Ping timeout: 250 seconds)
[04:39:32] <SnoopJ> i.e. something of the form `def test_internal_call(): assert internal_call(*prepared_arguments) == expected_value` where the prepared_arguments may be mocks or stand-ins
[04:39:56] *** Joins: merijn (~merijn@c-001-001-001.client.esciencecenter.eduvpn.nl)
[04:41:29] <jamiejackson> i guess i can test the internal function directly and spy on the caller to make sure it's calling it with expected values. it's not exactly what i want but what i want seems to be a weird thing to want.
[04:43:33] *** Quits: digilink (~digilink@user/digilink) (Quit: WeeChat 3.4)
[04:44:00] *** Joins: digilink (~digilink@user/digilink)
[04:44:57] *** Joins: agireud (~agireud@user/agireud)
[04:45:04] *** Joins: nemexis (~nemexis@193-62-201-31.ftth.glasoperator.nl)
[04:45:25] *** Joins: pah (~pah@user/pah)
[04:45:37] <SnoopJ> It's hard to say with the extremely narrow view we have of your 'real' problem
[04:47:05] *** Joins: jmiehe (~Thunderbi@user/jmiehe)
[04:48:07] *** Joins: zacts (~zacts@user/zacts)
[04:48:23] *** Quits: ghost43 (~ghost43@gateway/tor-sasl/ghost43) (Remote host closed the connection)
[04:48:48] <jamiejackson> i understand. i'm just going to go with the flow instead of pursuing my idea further tho.
[04:49:09] *** Joins: ghost43 (~ghost43@gateway/tor-sasl/ghost43)
[04:49:35] <nedbat> jamiejackson: there's a way to do what you want (get the actual return value from a spy), but I'm not sure how.
[04:49:53] *** Quits: nemexis (~nemexis@193-62-201-31.ftth.glasoperator.nl) (Ping timeout: 250 seconds)
[04:50:15] <jamiejackson> yeah, it's not very well documented/discussed so i'm going to write it off as an anti-pattern for now.
[04:50:34] *** Quits: jmiehe (~Thunderbi@user/jmiehe) (Client Quit)
[04:51:36] *** Quits: comet23 (comet23@user/comet23) (Ping timeout: 250 seconds)
[04:52:02] *** Joins: user3456 (~user3456@user/user3456)
[04:52:13] *** Joins: sgt_chuckles (~sgt_chuck@pool-71-190-209-205.nycmny.fios.verizon.net)
[04:52:54] *** Quits: IceMichael (~IceMichae@h2878436.stratoserver.net) (Quit: bye)
[04:53:13] *** Joins: IceMichael (~IceMichae@h2878436.stratoserver.net)
[04:53:19] *** Quits: gitesh (uid423739@id-423739.ilkley.irccloud.com) (Quit: Connection closed for inactivity)
[04:53:37] <sgt_chuckles> how do i make an attribute in a dataclass optional?
[04:54:15] *** Quits: spithash (~spithash@user/spithash) (Ping timeout: 240 seconds)
[04:54:32] *** Joins: spithash (~spithash@user/spithash)
[04:55:12] *** Joins: george-smiley (~george_sm@user/george-smiley/x-3139219)
[04:55:45] *** Joins: user3456_ (user3456@user/user3456)
[04:55:47] *** Quits: Guest54 (~Guest54@2620:10d:c092:400::4:a737) (Quit: Client closed)
[04:56:15] *** Quits: ano (~ano@user/ano) (Ping timeout: 240 seconds)
[04:56:22] *** Joins: chenqisu1 (~chenqisu1@183.217.200.168)
[04:56:24] <nedbat> jamiejackson: did you try accessing the .return_value attribute of the spy?
[04:56:51] *** Quits: user3456 (~user3456@user/user3456) (Ping timeout: 260 seconds)
[04:56:54] *** Joins: mat001 (~mat001@c-71-202-208-66.hsd1.ca.comcast.net)
[04:57:52] *** Quits: minto (~mintograd@47.201.5.61) (Read error: Connection reset by peer)
[04:57:53] *** user3456_ is now known as user3456
[04:58:07] *** Joins: m_ (~mat001@static-198-54-129-70.cust.tzulo.com)
[04:58:13] <SnoopJ> sgt_chuckles, if a field in the class has a default value, it isn't required in the constructor, if that's what you mean
[04:58:32] *** Joins: minto (~mintograd@47.201.5.61)
[04:58:32] *** Joins: ano (~ano@user/ano)
[04:58:36] *** Quits: jpn (~jpn@user/jpn) (Ping timeout: 272 seconds)
[04:58:53] *** Quits: george-smiley (~george_sm@user/george-smiley/x-3139219) (Client Quit)
[04:59:01] *** Quits: bitkiller (~bitkiller@user/bitkiller) (Ping timeout: 240 seconds)
[05:01:47] *** Joins: jay-m126 (~jay-m@d75-159-62-172.abhsia.telus.net)
[05:01:51] <SnoopJ> grym, feel like this is up your alley: https://curlconverter.com/#python
[05:02:06] *** Quits: gurkenglas (~gurkengla@dslb-178-012-018-212.178.012.pools.vodafone-ip.de) (Ping timeout: 260 seconds)
[05:02:17] <grym> oo nice
[05:02:25] <sgt_chuckles> setting some attributes in my dataclass to field(default="")) throws TypeError: missing 3 required positional arguments: ...
[05:04:12] <sgt_chuckles> I also tried: field(default=Optional[str])
[05:04:36] <sgt_chuckles> as well as: Optional[str]
[05:04:59] *** Quits: KnowledgeShark (~Knowledge@50.34.198.222) (Quit: Leaving)
[05:07:19] <sgt_chuckles> okay, i see where i went wrong: theres a dataclass that tries to inherit from the one with optional fields.
[05:07:49] *** Quits: bloody (~bloody@user/bloody) (Quit: okluvyabubye)
[05:07:59] <SnoopJ> https://bpa.st/T5NQ
[05:08:01] <sgt_chuckles> it tells me Non-default argument(s) follows default argument(s) defined in 'Item'
[05:08:55] *** Joins: kaiseisei (~Thunderbi@user/kaiseisei)
[05:08:57] <SnoopJ> sgt_chuckles, right, you need to define every non-defaulted argument before you start defining ones that have a default. This enforces a natural not-optional/optional ordering, although I'm not sure that's the *reason* the error happens
[05:08:59] *** Quits: merijn (~merijn@c-001-001-001.client.esciencecenter.eduvpn.nl) (Ping timeout: 260 seconds)
[05:09:17] *** Joins: foobaz212 (~foobaz212@152.37.103.80)
[05:09:35] *** Quits: herjazz (~herjazz@p10295192-ipngn22201marunouchi.tokyo.ocn.ne.jp) (Quit: leaving)
[05:09:45] <SnoopJ> I generally like to put an empty line separating the two (or any other meaningful grouping of fields on such a class)
[05:09:54] *** Joins: bloody (~bloody@user/bloody)
[05:11:47] <sgt_chuckles> the error happens on line 10: https://bpa.st/BIBQ
[05:12:18] <SnoopJ> https://bpa.st/R7MA
[05:13:35] <SnoopJ> ah, you're subclassing
[05:14:08] *** Quits: foobaz212 (~foobaz212@152.37.103.80) (Ping timeout: 250 seconds)
[05:14:28] <SnoopJ> sgt_chuckles, `default=str` looks pretty weird, to me, that sets the default value of those fields to the type object `str`
[05:15:10] <sgt_chuckles> i actually just changed those to None
[05:15:27] <sgt_chuckles> but it works, im able to create an instance of Item
[05:15:36] <sgt_chuckles> just not able to extend it
[05:15:47] <SnoopJ> I'm not sure if there's a good way to do what you want with the subclass. The docs say: "TypeError will be raised if a field without a default value follows a field with a default value. This is true whether this occurs in a single class, or as a result of class inheritance."
[05:16:07] <SnoopJ> which I think means that any either a base class can't have optional fields, or a subclass can't have required ones
[05:16:07] *** Joins: vlm (~vlm@user/vlm)
[05:17:17] <sgt_chuckles> i was expecting the subclass to also inherit optional properties of the attributes in its parent class
[05:17:19] *** Joins: Bandicoot (~bandicoot@212.58.114.93)
[05:17:46] <SnoopJ> it does, that's actually the problem
[05:18:12] <Andrew> What *are* python strings under the hood?  Are they a linked list (like a haskell [Char]), or some type of more efficent one (like Text)
[05:18:18] <SnoopJ> it inherits the fields in the order that appears on the base class...and then you go to add some more not-optional ones, and it sees that the base class's optional ones come *before* the not-optional ones on the base class
[05:18:32] <nedbat> Andrew: they are vectors of 1-, 2-, or 4-byte code points.
[05:18:39] <SnoopJ> Andrew, it depends on which implementation you're talking about, but if you mean CPython, what nedbat said
[05:18:51] <Andrew> Okay, thanks :)
[05:19:10] <Andrew> That's much more efficent than a linked list, nice
[05:19:10] <sgt_chuckles> SnoopJ: aaah, i see
[05:19:29] <sgt_chuckles> so i might be better off using a class then
[05:19:33] <nedbat> Andrew: what are you investigating?
[05:19:35] <sgt_chuckles> instead of a dataclass
[05:20:05] <SnoopJ> sgt_chuckles, or possibly attrs
[05:20:08] *** Quits: rpkilby (~rpkilby@c-24-20-208-106.hsd1.or.comcast.net) (Remote host closed the connection)
[05:20:11] <SnoopJ> I *think* you can do this with attrs
[05:20:20] *** Joins: Fiji (~Fiji@user/fiji)
[05:20:21] *** Quits: Fiji (~Fiji@user/fiji) (Client Quit)
[05:21:17] <sgt_chuckles> attrs looks...like overkill
[05:21:28] <Andrew> nedbat: It's more of a Haskell thing honestly.  Haskell's "String" class is literally "[Char]", a linked list of characters but with a double-quotes rather than square brackets default representation.  It's really inefficent so many of us use the 'Text' class from the 'text' package instead, and then now we have String, LazyString, LazyText, Text, and of course ByteString and LazyByteString.  The
[05:21:30] <Andrew> first four are all text-like objects, however there's no typeclass for them for proper typeclass polymorphism
[05:21:42] <Andrew> I just wanted to see how Python deals with strings
[05:22:01] <lsrtl_> the package foo was installed. it is listed within output of "pip list", but when is is mentioned in "import foo" -  no module named "foo". what's been done wrong ?
[05:22:43] *** Quits: SaltHilStroller_ (~SaltHillS@206.223.160.26) (Ping timeout: 260 seconds)
[05:22:43] <nedbat> lsrtl_: 1) the import name might be different than the pip name; 2) you might have installed it into a different Python than you are running.
[05:22:49] *** Quits: zacts (~zacts@user/zacts) (Quit: Client closed)
[05:23:01] <nedbat> lsrtl_: for #1: what is the package?  for #2: try using "python -m pip install ...." instead.
[05:23:30] <lsrtl_> it is internal custom package
[05:23:42] <lsrtl_> how to find out the proper name ?
[05:23:55] <lsrtl_> It is with in venv, 2) is not the case
[05:25:04] <nedbat> lsrtl_: to find the proper name, check the docs.
[05:25:20] <lsrtl_> I'm the author :D
[05:25:27] <nedbat> lsrtl_: for #2, just to be sure:  `which python` and `which pip`
[05:25:37] <nedbat> lsrtl_: ok, then you should know how to import it I guess! :)
[05:26:00] *** Quits: pretty_dumm_guy (trottel@gateway/vpn/protonvpn/prettydummguy/x-88029655) (Quit: WeeChat 3.5)
[05:26:01] <grym> lsrtl_: well, it's whatever you set name= to in setup.cfg; did you have dashes in there
[05:26:14] <grym> that's (a) common confusion
[05:26:21] <lsrtl_> grym, yes, 3 like f-o-o
[05:26:34] <lsrtl_> omg 2 :D
[05:26:44] <lsrtl_> need a coffee or a gun..
[05:26:51] <SnoopJ> sgt_chuckles, counterpoint: dataclasses is a version of attrs that's been cut off at the knees. Dataclasses can't do this task because it's made some simplifications to how it all works under the hood. Consequently, it can't do quite as many neat tricks, like the one you want (although they do discourage doing it)
[05:28:00] *** Joins: nemexis (~nemexis@193-62-201-31.ftth.glasoperator.nl)
[05:28:05] <grym> lsrtl_: import as s/-/_ then
[05:28:22] <grym> lsrtl_: that is, if you name your package foo-bar, you import foo_bar
[05:28:38] <grym> no kebab case in python :(
[05:29:05] *** Joins: Jck_true (~jcktrue@user/jck-true/x-0200799)
[05:29:07] *** Quits: bomb-on (~bomb-on@user/bomb-on) (Quit: aллилѹіа!)
[05:30:37] <MacGyver> Why would you want to import the subtraction of bar from foo, after all.
[05:30:55] <grym> just so, it's a price we pay for infix
[05:31:14] *** Quits: xcombelle2 (~xcombelle@176-139-252-198.abo.bbox.fr) (Remote host closed the connection)
[05:32:18] <SnoopJ> hmm, maybe attrs has the same problem after all
[05:32:20] <MacGyver> (Arguably there's no reason why this couldn't work)
[05:32:38] *** Quits: nemexis (~nemexis@193-62-201-31.ftth.glasoperator.nl) (Ping timeout: 260 seconds)
[05:32:38] <SnoopJ> https://bpa.st/P37Q
[05:32:58] *** Joins: CodePoint (~CodePoint@107-208-128-79.lightspeed.tukrga.sbcglobal.net)
[05:32:59] <lsrtl_> grym, ic. it was installed as https://bpa.st/V62Q. setup.cfg name is indeed with dashes f-o-o. Used "import f_o_o" - same story, no module named
[05:33:17] <MacGyver> (It's part of an import statement after all, it's not as though it'd *have* to interpret it as a minus.)
[05:33:34] *** Joins: cul8r (~cul8r@wkt-bband-148-66-171-9.wk.net)
[05:33:38] <sgt_chuckles> were data dictionaries ever a thing?
[05:33:47] <SnoopJ> sgt_chuckles, I guess you don't have a choice with either of these libraries, then, short of reworking your base class(es) to have only optional fields, so they can be used as mixins
[05:33:59] <grym> lsrtl_: next horrible question: is name= in your setup.cfg quoted, or not quoted
[05:34:06] <SnoopJ> you could *maybe* generate the subclass dynamically but even if it worked it would be hideously complicated
[05:34:23] <grym> lsrtl_: do you have [options] name=foo-bar, or name="foo-bar"
[05:34:39] <grym> (disturbingly), it should be unquoted.
[05:34:57] <sgt_chuckles> SnoopJ: pydantic maybe?
[05:34:57] <lsrtl_> grym, not quoted, name=f-o-o
[05:35:04] <grym> lsrtl_: blast
[05:35:05] *** Quits: leitz (~LeamHall@072-182-158-027.res.spectrum.com) (Quit: nappy time)
[05:35:47] <SnoopJ> sgt_chuckles, now that *does* sound like overkill. But maybe
[05:35:57] *** Joins: white2 (~mahengrui@user/mahengrui1)
[05:36:24] <lsrtl_> grym, name is not under [options], it is under [metadata]
[05:36:35] <grym> lsrtl_: that's also correct
[05:38:30] <lsrtl_> grym, I can see that compared to others packages returned by "pip list" all of em have verstion X.X.X(some numbers), mine zeros 0.0.0
[05:38:35] <lsrtl_> could it be the reason
[05:39:37] <nedbat> lsrtl_: can you share the code?
[05:40:10] <SnoopJ> sgt_chuckles, yes, pydantic can do it: https://bpa.st/BOPQ
[05:41:49] *** Quits: bloody (~bloody@user/bloody) (Quit: okluvyabubye)
[05:45:03] <sgt_chuckles> :P
[05:45:22] <sgt_chuckles> had a feeling, since it's used for creating models in fastAPI
[05:45:43] <sgt_chuckles> but it has it's shortcomings
[05:45:57] <lsrtl_> nedbat, only partially, what is related to package making installable https://0x0.st/oqv1.png
[05:46:46] <nedbat> i'm continually surprised at companies' penchant for secrecy.
[05:47:20] <nedbat> lsrtl_: is this the first time you are trying to install and import it?
[05:47:24] <lsrtl_> me2
[05:47:30] <lsrtl_> yes
[05:48:26] <nedbat> lsrtl_: tell your boss, "I got some free consulting, and they helped me fix the problem"
[05:48:31] <nedbat> you'll get an award :)
[05:48:31] <ztrawhcse> MacGyver: special casing an import statement to interpret "-" as a name instead of a mathematical minus, would only help you import it -- it would not permit you to *use* its name later on. So I can completely understand why the designers argued that it cannot, in fact, work. ;)
[05:48:48] <lsrtl_> nedbat, already send sms, no worries
[05:49:17] <ztrawhcse> having a weird limitation where you must `import foo-bar as foo_bar` to use it would be more damaging in its inconsistency than useful
[05:49:30] *** Joins: lowfi (~lowfi@user/lowfi)
[05:50:28] *** Quits: fattredd (~fattredd@pool-100-16-1-70.bltmmd.fios.verizon.net) (Ping timeout: 246 seconds)
[05:50:34] *** Quits: reset (~reset@user/reset) (Quit: reset)
[05:50:48] <MacGyver> ztrawhcse: That's a very good point.
[05:52:36] *** Joins: impermanence (~impermane@c-75-73-193-204.hsd1.mn.comcast.net)
[05:54:54] *** Quits: aghast (~aghast@2607:fb91:bd8e:4bdb:2ce3:8a9e:136a:946e) (Remote host closed the connection)
[05:55:11] *** Joins: aghast (~aghast@2607:fb91:bd8e:4bdb:2ce3:8a9e:136a:946e)
[05:55:24] *** Quits: ghost43 (~ghost43@gateway/tor-sasl/ghost43) (Remote host closed the connection)
[05:55:45] *** Joins: ghost43 (~ghost43@gateway/tor-sasl/ghost43)
[05:55:50] <lsrtl_> it is installed as direct reference https://bpa.st/V62Q. I'm not sure whether it is possible to rename it on that stage like http://ix.io/3TTu
[05:57:45] *** Joins: trmanco (~trmanco@107-190-97-227.cpe.teksavvy.com)
[05:57:57] *** Joins: pedahzur (~jkugler@216-67-98-32.static.acsalaska.net)
[06:00:19] *** Quits: _h4x0r_ (~till@user/till/x-8616149) (Ping timeout: 260 seconds)
[06:02:18] *** Quits: PJBoy (~PJBoy@user/pjboy) (Ping timeout: 260 seconds)
[06:03:20] *** Quits: trmanco (~trmanco@107-190-97-227.cpe.teksavvy.com) (Quit: Connection closed)
[06:03:21] *** Quits: roxfan (~roxfan@2a02:a03f:a2be:4f00:913a:502b:5b7b:1e2b) (Ping timeout: 250 seconds)
[06:03:24] *** Joins: stoneware (~stoneware@user/stoneware)
[06:04:47] *** Joins: trmanco (6bbe61e3@67.205.143.82)
[06:06:28] *** Quits: FlipFlop (~FlipFlop@user/fl1pfl0p) (Ping timeout: 260 seconds)
[06:14:32] *** Joins: foobaz212 (~foobaz212@152.37.103.80)
[06:17:02] *** Quits: aghast (~aghast@2607:fb91:bd8e:4bdb:2ce3:8a9e:136a:946e) (Read error: Connection reset by peer)
[06:17:12] *** Joins: aghast (~aghast@2607:fb91:bd8e:4bdb:2ce3:8a9e:136a:946e)
[06:17:48] *** Joins: Shou (~nyah@wikipedia/Davepeta)
[06:17:59] *** Joins: dodobrain (~dodobrain@user/dodobrain)
[06:19:08] *** Quits: foobaz212 (~foobaz212@152.37.103.80) (Ping timeout: 250 seconds)
[06:19:32] *** Quits: trmanco (6bbe61e3@67.205.143.82) (Quit: The Lounge - https://thelounge.chat)
[06:22:25] *** Quits: aghast (~aghast@2607:fb91:bd8e:4bdb:2ce3:8a9e:136a:946e) (Ping timeout: 250 seconds)
[06:24:45] *** Joins: Guest48 (~textual@2001:ee0:4081:6914:c4b6:c300:278:fafe)
[06:25:15] *** Quits: frmlof (~frmlof@70.243.238.191) (Quit: frmlof)
[06:25:23] *** Quits: malvin (malvin@2a01:7e00::f03c:93ff:fef1:5307) (Killed (NickServ (GHOST command used by malvin1!malvin@thought.institute)))
[06:25:40] *** Joins: malvin1 (malvin@2a01:7e00::f03c:93ff:fef1:5307)
[06:25:41] *** Joins: malvin (malvin@thought.institute)
[06:26:24] *** Joins: wyclif (~wyclif@user/wyclif)
[06:27:51] <malvin> my question is why are there relatively few python mail servers that can all in one recieve emails and provide imap in pure python possibly for RAD deployments with django
[06:28:25] <malvin> inbox.py was interesting but not secure
[06:29:48] *** Quits: rampart (~rampart@5.sub-174-250-0.myvzw.com) (Quit: Leaving)
[06:30:20] <SnoopJ> malvin, a not-very-satisfying answer might be "because not a lot of people are writing mail servers in Python," but I'm not familiar with that space.
[06:30:37] <meejah> also mail is "hard", approximately, these days
[06:31:27] *** Quits: ghost43 (~ghost43@gateway/tor-sasl/ghost43) (Remote host closed the connection)
[06:31:40] <lsrtl_> question, in pycharm the project interpreter set to 3.9 venv created. In the Terminal of PyCharm it adds (venv) to each command making sure that it is activated. however the output of "python -V" 3.8. I expect that with activated venv it should be as per project setup 3.9. How to make sure that venv python is used whenever command lands in the Terminal ? ps it is win10
[06:31:45] *** Joins: ghost43 (~ghost43@gateway/tor-sasl/ghost43)
[06:31:59] *** Joins: ncwbqcfe (~rvgzuuqp@gateway/tor-sasl/rvgzuuqp)
[06:32:39] <lsrtl_> plus, when just "py -V" issued it returns correct version ...
[06:32:42] <lsrtl_> madness
[06:33:10] *** Quits: zmotaj (~zmotaj@user/zmotaj) (Ping timeout: 246 seconds)
[06:33:40] *** Joins: kor1 (~kor1@81.19.209.58)
[06:33:41] <rindolf> meejah: https://www.shlomifish.org/humour/image-macros/indiv-nodes/set_up_email_service.xhtml
[06:34:59] <SnoopJ> lsrtl_, `python` and `py` are not the same thing at all. The latter is a launcher that is capable with dealing with multiple versions, as described in the documentation: https://docs.python.org/3/using/windows.html#launcher
[06:35:29] <SnoopJ> If they give different versions, that means `py` thinks it should default to something other than whatever `python` is pointing at
[06:35:51] *** Joins: aknot (~aknot@2603-900a-1503-17bb-b1d3-c3bf-56bf-672e.inf6.spectrum.com)
[06:36:34] <lsrtl_> python is 3.8 and py is 3.9. My goal is to make it consistent and always run the proper python
[06:37:20] <lsrtl_> SnoopJ, my problem was that I've installed packages for the wrong python(3.8), but I need them for my venv env. How to make sure ?
[06:37:35] *** Joins: Cyp_ (~cyp@213.237.84.236)
[06:37:43] *** Quits: revolve (~u0_a227@cpc100838-bagu15-2-0-cust672.1-3.cable.virginm.net) (Ping timeout: 246 seconds)
[06:37:56] *** Joins: Jong (~Jong@2620:10d:c090:400::5:cbbc)
[06:38:23] <SnoopJ> lsrtl_, using the launcher may be the most predictable option. You can do `py -X.Y` to ask the launcher to use verison X.Y of Python. I.e. `py -3.9` will launch Python 3.9
[06:38:29] <lsrtl_> For package installation I use "pip install -r req.txt"
[06:38:39] *** Joins: Hanii (~textual@2a00:23c5:c583:a300:b563:2857:6cfb:5f17)
[06:39:03] <SnoopJ> lsrtl_, I strongly recommend against a bare `pip` on any platform, but *especially* on Windows
[06:39:17] <SnoopJ> https://snarky.ca/why-you-should-use-python-m-pip/
[06:39:44] <lsrtl_> I probably misunderstand how the venv works, I expect the installed packages to show up under venv/site_packages. Is that correct ?
[06:39:47] <SnoopJ> `py -X.Y -m pip install -r req.txt` will be a lot more predictable for you. Or you can activate your venv first, and then you'll be sure that `pip` and `python` point to that venv's tools.
[06:40:26] <m_> Why is my PyCharm alerting "global variable aredis is undefined at the module level" here: https://bpa.st/BCBA
[06:40:52] <SnoopJ> lsrtl_, only if you install packages using the venv's pip. If you don't activate it or point directly at it (i.e. `.\path\to\venv\Scripts\pip ...`) you are going to get whatever `pip` currently points at.
[06:41:10] * SnoopJ usually activates his venvs on Windows, but doesn't have a lot of experience working with them on the platform
[06:41:28] *** Quits: Cyp (~cyp@213.237.84.236) (Ping timeout: 260 seconds)
[06:41:41] <lsrtl_> SnoopJ, me2. I have no choice :'(
[06:42:17] <SnoopJ> lsrtl_, the other choice is pointing directly at the venv's python/pip executables (the stuff in `venv\Scripts`) but this is a little clumsy
[06:42:22] *** Joins: zmotaj_ (~zmotaj@86.61.80.191)
[06:43:10] <malvin> thanks snoop + mee
[06:43:49] *** Joins: _xor (~xor@74.215.232.169)
[06:45:00] *** Quits: howdoi (uid224@id-224.lymington.irccloud.com) (Quit: Connection closed for inactivity)
[06:45:49] *** Joins: Guest80 (~Guest80@pool-96-253-74-73.rcmdva.fios.verizon.net)
[06:46:46] *** Joins: johnkeats6 (~johnkeats@2804:14c:32:a0cc:48a5:7056:902f:37e0)
[06:48:32] <lsrtl_> SnoopJ, the problem is that with activated venv it doesn't pick up venv/* stuff. It still installs the packages in some AppData/etc/
[06:48:58] <SnoopJ> lsrtl_, I don't know what else to tell you. If `pip install` sends your installed packages somewhere else, it's because `pip` doesn't point at what you expected. It's a great reason not to ever invoke pip this way.
[06:49:03] *** Quits: CodePoint (~CodePoint@107-208-128-79.lightspeed.tukrga.sbcglobal.net) (Ping timeout: 260 seconds)
[06:49:15] <SnoopJ> If you always invoke it as `python -m pip`, you only need to keep track of what `python` points at (i.e. 1 thing instead of 2)
[06:49:37] <SnoopJ> you can also do `py -X.Y -m pip` if you don't mind that it's kind of clunky
[06:50:15] <lsrtl_> going with clumsy choice :D
[06:50:31] <SnoopJ> well, it's not much use to the venv case
[06:50:36] <SnoopJ> venvs don't get their own `py`
[06:51:18] *** Quits: ghost43 (~ghost43@gateway/tor-sasl/ghost43) (Remote host closed the connection)
[06:51:21] <SnoopJ> understanding why the problem exists in the first place can make the mystery go away, and then what to do about it is a matter of preference
[06:51:58] *** Quits: kujo (~kujo@188.166.12.52) (Ping timeout: 260 seconds)
[06:52:05] *** Joins: ghost43 (~ghost43@gateway/tor-sasl/ghost43)
[06:52:52] *** Joins: kujo (~kujo@188.166.12.52)
[06:53:57] *** Joins: hamburger (~hamburger@user/hamburger)
[06:55:07] *** Quits: user3456 (user3456@user/user3456) (Ping timeout: 250 seconds)
[06:56:06] *** Joins: revolve (~u0_a227@cpc100838-bagu15-2-0-cust672.1-3.cable.virginm.net)
[06:58:40] <m_> I have a variable declared on line 15. Whay is it undefined at the module level? https://bpa.st/BCBA
[06:58:44] *** hamburger is now known as auwooo
[06:58:50] *** Joins: admin124 (harrymoren@gateway/vpn/protonvpn/admin123)
[06:59:01] *** auwooo is now known as ndut2
[06:59:07] *** ndut2 is now known as hamburger
[07:00:01] <lsrtl_> make sense
[07:01:02] *** Quits: Bandicoot (~bandicoot@212.58.114.93) (Quit: Leaving)
[07:01:15] *** Quits: FluffyMask (~masque@user/fluffymask) (Quit: WeeChat 3.5)
[07:01:17] *** Joins: tijuco (~tijuco@user/tijuco)
[07:01:25] *** Quits: admin123 (harrymoren@gateway/vpn/protonvpn/admin123) (Ping timeout: 256 seconds)
[07:02:21] *** Joins: user3456 (user3456@user/user3456)
[07:05:08] <SnoopJ> m_, because the assignment only happens when the inner function is called. https://bpa.st/3UKQ
[07:05:08] *** Quits: BASHitup (~richard@user/yippeekaiyay) (Quit: WeeChat 2.8)
[07:06:52] *** Joins: adeliktas9 (~adeliktas@i59F52E5A.versanet.de)
[07:07:13] *** Joins: merijn (~merijn@c-001-001-001.client.esciencecenter.eduvpn.nl)
[07:08:27] *** Quits: adeliktas (~adeliktas@i59F52D90.versanet.de) (Ping timeout: 260 seconds)
[07:08:28] *** adeliktas9 is now known as adeliktas
[07:09:07] *** Quits: pycurious (~Adium@user/pycurious) (Quit: Leaving.)
[07:10:20] *** Quits: thiras (~thiras@user/thiras) (Ping timeout: 272 seconds)
[07:10:52] <m_> SnoopJ: so it's possible I never call the inner functions?
[07:10:58] *** Quits: EgonX (~EgonX@2601:2c6:47f:879e:b949:3ab6:25f0:720c) (Quit: My MacBook has gone to sleep. ZZZzzz…)
[07:11:12] *** hamburger is now known as trovalds
[07:11:32] *** trovalds is now known as ndut-net
[07:11:40] *** ndut-net is now known as hamburger
[07:12:30] *** Quits: millido (~millido@84.210.150.128) (Quit: ZNC 1.8.2 - https://znc.in)
[07:15:13] *** Quits: sgt_chuckles (~sgt_chuck@pool-71-190-209-205.nycmny.fios.verizon.net) (Remote host closed the connection)
[07:16:10] *** Joins: mihael (~mihael@115.146.176.131)
[07:17:20] *** Joins: Blackajack (~Blackajac@user/Blackajack)
[07:17:48] *** Joins: gevreeen (~gevreeen@2001:470:67:326:7c6b:19ca:beb4:741f)
[07:20:23] *** Joins: irf21k (~irf21k@2401:4900:26be:f27c:0:76:66c7:1301)
[07:20:48] <gevreeen> suppose I have a *huge* dictionary DA which consists of entries of the form <int>:<int>, and a dictionary DB of its reverse mapping. DA and DB are bijective. and now I would like to delete entries of the form x:y from DB where x < x0 for some integer x0, and it's associated entries in DA. should I use filter with lambda's, dictionary comprehension, or something more efficient?
[07:21:15] *** Joins: EgonX (~EgonX@2601:2c6:47f:879e:b949:3ab6:25f0:720c)
[07:21:53] *** Joins: [_] (~itchyjunk@user/itchyjunk/x-7353470)
[07:22:32] *** Quits: EgonX (~EgonX@2601:2c6:47f:879e:b949:3ab6:25f0:720c) (Client Quit)
[07:23:35] *** Joins: Seto_Kaiba (~hunterkll@2001:470:8b06:100:2958:1194:aedf:1fa3)
[07:24:03] *** Joins: ericleer (~ericleer@dhcp-077-249-173-130.chello.nl)
[07:24:37] *** Quits: irf21k (~irf21k@2401:4900:26be:f27c:0:76:66c7:1301) (Ping timeout: 240 seconds)
[07:24:38] *** Quits: [itchyjunk] (~itchyjunk@user/itchyjunk/x-7353470) (Ping timeout: 260 seconds)
[07:25:26] *** Joins: EgonX (~EgonX@2601:2c6:47f:879e:b949:3ab6:25f0:720c)
[07:26:13] <gevreeen> a naive method would be iterator of the form "for i in DB: if i < x0: del DB[i]" but I'm getting "RuntimeError: dictionary changed size during iteration"
[07:26:30] *** Quits: EgonX (~EgonX@2601:2c6:47f:879e:b949:3ab6:25f0:720c) (Client Quit)
[07:26:36] *** Quits: Hunterkll (~hunterkll@2001:470:8b06:100:2958:1194:aedf:1fa3) (Ping timeout: 240 seconds)
[07:26:46] <gevreeen> del and pop gives the same RuntimeError
[07:27:00] *** Joins: jbox (~jbox@user/jbox)
[07:27:06] <phy1729> you can for i in list(DB):   but yeah you can delete keys from the thing you're iterating over
[07:27:32] <phy1729> Ah it's a dict so list(DB.keys())
[07:28:17] *** Quits: v9fk1yn3nu (~v9fk1yn3n@user/v9fk1yn3nu) (Remote host closed the connection)
[07:28:43] *** Quits: ericleer (~ericleer@dhcp-077-249-173-130.chello.nl) (Ping timeout: 260 seconds)
[07:29:19] <gevreeen> the list() one does work. how isn't it inefficient to perform the if-filter on every dictionary key?
[07:29:26] <gevreeen> s/how/however/
[07:29:45] *** Joins: millido (~millido@84.210.150.128)
[07:29:58] <gevreeen> much like filter() with lambda
[07:30:07] *** Joins: philipp64 (~philipp64@65.129.128.199)
[07:30:14] *** Quits: GreenLlama (~quassel@80-219-124-12.dclient.hispeed.ch) (Quit: http://quassel-irc.org - Chat comfortably. Anywhere.)
[07:30:32] <phy1729> I'd probably do  DB = {k: v for k, v in DB.items() if k >= x0}
[07:31:10] <gevreeen> so, construct a new dict, and leave the old one for GC?
[07:31:34] <phy1729> yeah
[07:31:35] *** Quits: squirrel (uid529456@user/squirrel) (Quit: Connection closed for inactivity)
[07:31:37] *** Joins: EgonX (~EgonX@2601:2c6:47f:879e:b949:3ab6:25f0:720c)
[07:31:50] <phy1729> If this is hot, you could timeit for the different variations
[07:32:03] *** Quits: EgonX (~EgonX@2601:2c6:47f:879e:b949:3ab6:25f0:720c) (Client Quit)
[07:32:22] *** Joins: GreenLlama (~quassel@80-219-124-12.dclient.hispeed.ch)
[07:32:47] *** Joins: v9fk1yn3nu (~v9fk1yn3n@user/v9fk1yn3nu)
[07:32:56] <gevreeen> or I should have been limiting the sizes to begin with
[07:33:59] *** Joins: pycurious (~Adium@user/pycurious)
[07:34:32] *** Quits: zaquest (~notzaques@5.130.79.72) (Remote host closed the connection)
[07:34:40] <lsrtl_> hooray, thx all
[07:37:49] *** Quits: kaiseisei (~Thunderbi@user/kaiseisei) (Quit: kaiseisei)
[07:39:00] *** Quits: merijn (~merijn@c-001-001-001.client.esciencecenter.eduvpn.nl) (Ping timeout: 240 seconds)
[07:39:40] *** Joins: kaiseisei (~Thunderbi@user/kaiseisei)
[07:39:42] *** Quits: Roey (~Roey@user/Roey) (Quit: Client exiting)
[07:41:02] *** Joins: EgonX (~EgonX@2601:2c6:47f:879e:b949:3ab6:25f0:720c)
[07:41:30] *** Quits: EgonX (~EgonX@2601:2c6:47f:879e:b949:3ab6:25f0:720c) (Client Quit)
[07:41:30] *** Joins: zaquest (~notzaques@5.130.79.72)
[07:41:59] *** Quits: aknot (~aknot@2603-900a-1503-17bb-b1d3-c3bf-56bf-672e.inf6.spectrum.com) (Ping timeout: 256 seconds)
[07:42:49] <ezzieyguywuf> I have a `class Foo` with `def __ge__(self, other: Foo)`, however I get `NameError: name 'Foo' is not defined`. am I doing the annotation incorrectly?
[07:43:53] <phy1729> Since the class Foo hasn't been fully defined yet, the name isn't valid there. you'd need other: 'Foo', but really should have other: Any and a isinstance check
[07:44:15] <ezzieyguywuf> hm, ok then
[07:44:26] <parsnip> phy1729: how about `if isinstance(other, Foo):`
[07:44:40] <parsnip> hmm
[07:44:48] <phy1729> That's fine because when that code runs Foo is defined
[07:45:10] <parsnip> `def __ge__(self, other):\n.   return self == other or self > other`
[07:45:16] <parsnip> oops
[07:45:30] <parsnip> do you have to check the type?
[07:45:57] <phy1729> You could get anything, so your really ought to, but nothing is going to force you
[07:46:02] <ezzieyguywuf> I guess I can use the template thingy with the type annotations, but that would just ensure that self and other are the same type, not that both are Foo
[07:47:10] <parsnip> `if isinstance(other, Area):\n    return self == other or self > other`
[07:47:19] <parsnip> er
[07:47:23] <parsnip> Foo
[07:47:40] <ezzieyguywuf> `T = TypeVare('T')...def __ge__(self: T, other: T)`
[07:47:45] <ezzieyguywuf> something like this
[07:47:55] <ezzieyguywuf> actually, I guess self _should_ always be Foo, so I guess this works?
[07:48:09] *** Joins: MRDPZK (~MRDPZK@d205-250-152-220.bchsia.telus.net)
[07:48:10] <ztrawhcse> if you raise NotImplemented on anything other than another instance of Foo
[07:48:22] <ztrawhcse> then surely type annotating it as only accepting Foo is correct?
[07:48:25] <phy1729> The types are just for humans and type checkers. The runtime doesn't care about them
[07:48:47] <parsnip> isinstance does, though, right?
[07:48:59] <phy1729> well sure
[07:49:16] <phy1729> It cares about it's arguments not the type annotations
[07:49:25] <parsnip> its
[07:49:31] <ezzieyguywuf> "just or homan and type checkers": then I would expect the original `def __ge__(self, other: Foo)` to work
[07:49:34] <parsnip> :-P
[07:49:36] *** Quits: ghost43 (~ghost43@gateway/tor-sasl/ghost43) (Remote host closed the connection)
[07:49:49] <parsnip> maybe at runtime?
[07:50:05] *** Joins: ghost43 (~ghost43@gateway/tor-sasl/ghost43)
[07:50:18] *** Quits: ghost43 (~ghost43@gateway/tor-sasl/ghost43) (Remote host closed the connection)
[07:50:25] *** Joins: bitdex (~bitdex@gateway/tor-sasl/bitdex)
[07:50:27] <ztrawhcse> `other: Foo` tells mypy and other linters that you shouldn't be trying to write code which passes other types as comparisons
[07:50:40] <ztrawhcse> isinstance tells the runtime that information
[07:50:45] <ezzieyguywuf> right
[07:50:46] <phy1729> so looks like typeshed does use more specific types for other
[07:50:53] <ezzieyguywuf> I'd prefer to keep the check at 'compile' time
[07:51:04] <phy1729> lint time as it were
[07:51:06] *** Joins: ghost43 (~ghost43@gateway/tor-sasl/ghost43)
[07:51:08] <ztrawhcse> you cannot check at compile time, since there is no compilation
[07:51:09] <ezzieyguywuf> sure
[07:51:18] <ezzieyguywuf> s/compile/lint/
[07:51:35] <phy1729> so I take it back, other: 'Foo'  is fine
[07:52:06] <ezzieyguywuf> should be fine
[07:52:18] *** Joins: zebrag (~chris@user/zebrag)
[07:52:18] *** Quits: zebrag (~chris@user/zebrag) (Client Quit)
[07:52:47] *** Quits: ivii (~ivan@user/ivii) (Remote host closed the connection)
[07:52:47] *** Quits: jay-m126 (~jay-m@d75-159-62-172.abhsia.telus.net) (Ping timeout: 260 seconds)
[07:53:15] *** Joins: EgonX (~EgonX@2601:2c6:47f:879e:b949:3ab6:25f0:720c)
[07:53:25] *** Quits: nomic (~nomic@185.217.117.233) (Quit: Leaving)
[07:53:37] <ezzieyguywuf> this does not run http://dpaste.com/7TKQUR25W
[07:54:19] <ezzieyguywuf> er, even if you fix the typo on line 3
[07:54:34] *** Quits: EgonX (~EgonX@2601:2c6:47f:879e:b949:3ab6:25f0:720c) (Client Quit)
[07:54:40] <phy1729> Yes you need to  other: 'Foo'
[07:55:04] <ezzieyguywuf> ah
[07:55:10] <ezzieyguywuf> so I _was_ doing the type annotation incorrectly
[07:55:30] <phy1729> So fun fact you can do things like print(f'{a >= b =}')
[07:56:19] <ezzieyguywuf> yea, I learned about these f-strings just earlier today
[07:56:27] *** Quits: kor1 (~kor1@81.19.209.58) (Quit: kor1)
[07:56:33] <ezzieyguywuf> didn't know it could be used it _quite_ that manner though
[07:56:36] <ezzieyguywuf> kinda neat
[07:56:55] <ezzieyguywuf> where in here does it say I have to wrap the type in quotes? https://docs.python.org/3/library/typing.html
[07:56:57] <ztrawhcse> or use from __future__ import annotations :D
[07:58:13] <phy1729> They're called forward references, but I don't know if it's explicitly mentioned anywhere
[07:58:37] *** Joins: kor1 (~kor1@81.19.209.58)
[07:59:05] *** Joins: nemexis (~nemexis@193-62-201-31.ftth.glasoperator.nl)
[07:59:12] <ztrawhcse> https://peps.python.org/pep-0563/
[07:59:40] <ezzieyguywuf> ah, yikes
[07:59:52] *** Joins: roxfan (~roxfan@2a02:a03f:a2be:4f00:913a:502b:5b7b:1e2b)
[08:00:53] <ztrawhcse> also https://peps.python.org/pep-0484/#forward-references
[08:01:10] <ztrawhcse> > A situation where this occurs commonly is the definition of a container class, where the class being defined occurs in the signature of some of the methods.
[08:01:46] *** Quits: jamiejackson (~jamiejack@131.106.140.145) (Quit: Connection closed)
[08:02:48] *** Quits: v9fk1yn3nu (~v9fk1yn3n@user/v9fk1yn3nu) (Quit: Goodbye!)
[08:03:08] *** Quits: Vornicus (~Vornicus@2603-8000-5d07-7ef0-b9ff-93f8-06fd-9be4.res6.spectrum.com) (Read error: Connection reset by peer)
[08:03:43] *** Quits: nemexis (~nemexis@193-62-201-31.ftth.glasoperator.nl) (Ping timeout: 260 seconds)
[08:03:49] *** Quits: Codaraxis (~Codaraxis@user/codaraxis) (Ping timeout: 240 seconds)
[08:06:00] *** Joins: TheCat (~TheCat@user/z-cat)
[08:06:01] *** Joins: v9fk1yn3nu (~v9fk1yn3n@user/v9fk1yn3nu)
[08:06:42] *** Quits: revolve (~u0_a227@cpc100838-bagu15-2-0-cust672.1-3.cable.virginm.net) (Ping timeout: 272 seconds)
[08:08:03] *** Quits: Guest48 (~textual@2001:ee0:4081:6914:c4b6:c300:278:fafe) (Ping timeout: 256 seconds)
[08:10:30] *** Quits: Guest80 (~Guest80@pool-96-253-74-73.rcmdva.fios.verizon.net) (Ping timeout: 250 seconds)
[08:10:39] *** Joins: parv (~quass@user/parv)
[08:11:39] *** Quits: v9fk1yn3nu (~v9fk1yn3n@user/v9fk1yn3nu) (Remote host closed the connection)
[08:13:06] *** Joins: EgonX (~EgonX@2601:2c6:47f:879e:b949:3ab6:25f0:720c)
[08:14:13] *** Quits: EgonX (~EgonX@2601:2c6:47f:879e:b949:3ab6:25f0:720c) (Client Quit)
[08:14:31] *** Quits: zerotypic (~zerotypic@165.173.19.147) (Ping timeout: 256 seconds)
[08:14:44] *** Joins: v9fk1yn3nu (~v9fk1yn3n@user/v9fk1yn3nu)
[08:15:01] *** Joins: saroy (~Sandipan@103.24.86.178)
[08:15:22] *** saroy is now known as bytehackr
[08:15:34] *** Quits: sreve (~quassel@p4ff44df2.dip0.t-ipconnect.de) (Ping timeout: 272 seconds)
[08:15:36] *** Joins: sreve_ (~quassel@p4ff44f3f.dip0.t-ipconnect.de)
[08:17:11] *** Quits: mefistofeles (~mefistofe@user/mefistofeles) (Ping timeout: 252 seconds)
[08:17:31] *** Quits: cdown (~cdown@user/cdown) (Ping timeout: 260 seconds)
[08:21:06] *** Quits: pycurious (~Adium@user/pycurious) (Quit: Leaving.)
[08:21:10] *** Quits: adiKt (uid472628@id-472628.tinside.irccloud.com) (Quit: Connection closed for inactivity)
[08:21:43] *** Quits: lowfi (~lowfi@user/lowfi) (Quit: Leaving)
[08:22:48] *** Joins: vicfred (~vicfred@user/vicfred)
[08:23:33] *** Quits: v9fk1yn3nu (~v9fk1yn3n@user/v9fk1yn3nu) (Remote host closed the connection)
[08:23:48] *** Joins: v9fk1yn3nu (~v9fk1yn3n@user/v9fk1yn3nu)
[08:26:25] *** Quits: _0x00 (~0x00@user/0x00/x-6246543) (Quit: Leaving)
[08:27:44] *** Joins: zumba_addict (~zumba_add@12.202.91.140)
[08:32:40] *** Joins: chirukodati (~chirukoda@43.225.21.196)
[08:34:35] *** Joins: Codaraxis (~Codaraxis@user/codaraxis)
[08:34:44] *** Quits: srg (~srg@user/srg) (Quit: :wqa)
[08:35:30] <chirukodati> Hi, I searched on internet about dictionary evaluation in python but couldn't find much. I want to understand why this {True: 'yes', 1: 'no', 1.0: 'maybe'} evaluates to {True: 'maybe'} in python. I notice that true values --> 1, true, non empty strings are substituted in the dictionary, and order of elements in dictionary also matters. This doesn't
[08:35:30] <chirukodati> happen with false values. Can someone throw some light on here. Help is appreciated.
[08:35:35] *** Quits: rindolf (~shlomif@inkscape/dev/shlomif) (Read error: Connection reset by peer)
[08:35:36] *** Joins: Yugi (~hunterkll@remote.kisaracorporation.com)
[08:38:36] *** Quits: Seto_Kaiba (~hunterkll@2001:470:8b06:100:2958:1194:aedf:1fa3) (Ping timeout: 240 seconds)
[08:38:43] *** Joins: zebrag (~chris@user/zebrag)
[08:39:17] *** Quits: v9fk1yn3nu (~v9fk1yn3n@user/v9fk1yn3nu) (Remote host closed the connection)
[08:39:25] *** Joins: spetrosi_ (~spetrosi@2a02:8308:b:ec00:e1ce:d7b:6a8f:f189)
[08:40:35] *** Quits: jero98772 (~jero98772@2800:484:1d80:d8ce:efcc:cbb3:7f2a:6dff) (Remote host closed the connection)
[08:40:50] *** chirukodati is now known as kratos
[08:41:10] *** Quits: dez (uid92154@user/dez) (Quit: Connection closed for inactivity)
[08:41:38] *** Quits: spetrosi_ (~spetrosi@2a02:8308:b:ec00:e1ce:d7b:6a8f:f189) (Read error: Connection reset by peer)
[08:41:58] <Repiphany> kratos: True == 1 and False == 0
[08:44:06] *** Joins: v9fk1yn3nu (~v9fk1yn3n@user/v9fk1yn3nu)
[08:44:22] <Repiphany> hashing an int also returns itself
[08:44:42] *** Quits: kor1 (~kor1@81.19.209.58) (Ping timeout: 272 seconds)
[08:48:25] *** Quits: ghost43 (~ghost43@gateway/tor-sasl/ghost43) (Remote host closed the connection)
[08:48:54] <kratos> so, due to hashing and presence of True ---> hashed value of both 1 & True is True, if True is not present in the dictionary, 1's hashing results in 1. Is my understanding correct?
[08:49:05] *** Quits: hamburger (~hamburger@user/hamburger) (Ping timeout: 252 seconds)
[08:49:15] *** Joins: ghost43 (~ghost43@gateway/tor-sasl/ghost43)
[08:49:16] *** Joins: zacts (~zacts@user/zacts)
[08:49:27] <Repiphany> 1, True and 1.0 are all equivalent keys
[08:49:38] <Repiphany> (also 0, False, 0.0)
[08:50:02] *** Quits: dodobrain (~dodobrain@user/dodobrain) (Ping timeout: 240 seconds)
[08:50:05] <Repiphany> The dictionary remembers which key you use first, but doesn't change it if you reassign the value using one of the other equivalent keys
[08:51:12] <kratos> Ok, this explains the behavior. Thanks for the help.
[08:51:46] <Repiphany> `True + True == 2`
[08:52:57] *** Quits: MRDPZK (~MRDPZK@d205-250-152-220.bchsia.telus.net) (Quit: Client closed)
[08:53:10] *** Joins: rindolf (~shlomif@inkscape/dev/shlomif)
[08:54:13] <gevreeen> chirukodati: probably the language treats True, 1, and 1.0 all as the same key
[08:55:08] <gevreeen> as long as you alter "True" to "False" the first entry appears in the dictionary object
[08:55:47] <SnoopJ> yes, because all of those objects hash() the same and compare equal to each other, and those two things are how dictionary lookup knows it's got the right slot in the dictionary
[08:55:58] <SnoopJ> (this is kind of a mess)
[08:56:02] <gevreeen> tested with hash on True, 1, and 1.0
[08:56:20] *** Quits: lockywolf (~lockywolf@public.lockywolf.net) (Quit: ZNC 1.8.2 - https://znc.in)
[08:56:22] <SnoopJ> although re: 1.0, it's not a great idea to use floats as dictionary keys to begin with
[08:56:48] *** Joins: Barones (~Barones@user/Barones)
[08:56:52] *** Quits: tarel2 (~tarel2@139.28.216.245) (Ping timeout: 250 seconds)
[08:56:55] <kratos> Correct. The first not replaced with equivalent key is what lighted the bulb for me :)
[08:56:57] <gevreeen> maybe we should use byte strings instead
[08:57:03] <gevreeen> as the key
[08:57:15] <gevreeen> at least those representations are unique
[08:57:15] <kratos> *first key
[08:57:47] <SnoopJ> gevreeen, True and 1 are unique representations of distinct values. Those values just happen to compare equal and have the same hash.
[08:58:04] <SnoopJ> (you can confirm this by taking the id() of each of them, which won't be the same)
[08:58:09] <gevreeen> unless, we are certain, say the dictionary consists of say, integer values)
[08:58:12] *** Quits: mrgz (~mrgz@201-42-0-191.dsl.telesp.net.br) (Ping timeout: 240 seconds)
[08:58:15] <kratos> id(True)
[08:58:23] <gevreeen> ah, yeah, id
[08:58:44] <gevreeen> maybe id first then hash would be a better idea then?
[08:59:07] <SnoopJ> gevreeen, the point of the hash is that it's what makes dictionary lookups fast in CPython
[08:59:08] <gevreeen> for mixed types
[08:59:57] <SnoopJ> because you just look at however many hash bits you need for the current size of the dictionary, then go look in the "bucket" that hash corresponds to. The equality comparison is what confirms you got the "right" bucket for a given key, though
[09:00:09] <gevreeen> ok. another big caveat: dictionary keys *should* be of the same type
[09:00:28] <SnoopJ> I tend to use them this way but it's not a big deal to the language
[09:00:42] *** Quits: jbox (~jbox@user/jbox) (Read error: Connection reset by peer)
[09:01:10] <SnoopJ> there is definitely a tendency to have keys that form a meaningful domain, but that domain might be spanned by more than one type
[09:01:19] <SnoopJ> (frustratingly, True is actually an int)python3
[09:01:48] <SnoopJ> because bool is a subtype of int 😭
[09:02:23] *** Quits: ghost43 (~ghost43@gateway/tor-sasl/ghost43) (Remote host closed the connection)
[09:02:42] *** Joins: ghost43 (~ghost43@gateway/tor-sasl/ghost43)
[09:02:48] *** Joins: gulzar (~gulzar@49.206.240.149)
[09:03:02] <Repiphany> Makes counting clean, though
[09:03:22] <ztrawhcse> if insinstance(foo, int): # object that can be str, bool, int, or one of several custom objects
[09:03:23] *** Quits: Barones (~Barones@user/Barones) (Quit: Leaving)
[09:03:27] <ztrawhcse> been there, done that :p
[09:03:35] *** Joins: lockywolf (~lockywolf@public.lockywolf.net)
[09:03:37] <phy1729> str?
[09:04:11] <ztrawhcse> in this case, the parse loop for a DSL that has all those different objects
[09:04:29] <ztrawhcse> so yes, has to handle each one in turn
[09:04:34] <kratos> it cant be str, right?
[09:04:52] <SnoopJ> kratos, which "it" are you asking about?
[09:04:53] <phy1729> What str would isinstance(foo, int) return True for?
[09:05:57] <kratos> foo in if instance(foo, int) == True can't be str, right?
[09:06:03] *** Joins: lowfi (~lowfi@user/lowfi)
[09:07:22] <ztrawhcse> phy1729: I think you misunderstand, the bug was only when the parse loop encountered a bool. str worked fine
[09:07:40] <SnoopJ> kratos, right, the two types don't overlap and you can't write a subclass that inherits from both of them
[09:08:10] *** Joins: SaltHilStroller_ (~SaltHillS@206.223.160.26)
[09:08:33] *** Quits: toulene (~toulene@user/toulene) (Quit: The Lounge - https://thelounge.chat)
[09:08:33] <phy1729> oh you just have to test for bool before testing for int, like how you have to test for str before testing if it's iterable
[09:08:34] *** Joins: cdman (~dcm@27.2.217.176)
[09:08:34] *** Quits: cdman (~dcm@27.2.217.176) (Changing host)
[09:08:34] *** Joins: cdman (~dcm@user/dmc/x-4369397)
[09:09:12] <kratos> true, i tried doing subclassing both the types. I got --> TypeError: multiple bases have instance lay-out conflict
[09:09:37] <kratos> class A(str, int):
[09:09:37] <kratos>     pass
[09:09:55] <ztrawhcse> wait hmm, looked up the exact case just now
[09:10:21] *** Joins: pycurious (~Adium@user/pycurious)
[09:10:22] *** Quits: pycurious (~Adium@user/pycurious) (Client Quit)
[09:10:52] <ztrawhcse> phy1729: it was much better, one part only accepted (str, int) and did fallthrough to 'raise InvalidArguments(...)'
[09:10:52] *** Joins: Codaraxis_ (~Codaraxis@user/codaraxis)
[09:11:23] *** Quits: KimK (~KimK@ip98-186-40-208.ks.ks.cox.net) (Ping timeout: 260 seconds)
[09:11:34] <ztrawhcse> so the solution was adding this
[09:11:41] <ztrawhcse> elif isinstance(args, bool):
[09:11:44] <ztrawhcse>     pass # bools are a type of int, make this fallthrough to the error case
[09:11:47] <ztrawhcse> before checking int
[09:12:39] *** Joins: hanzo (uid532183@user/hanzo)
[09:14:31] *** Quits: Codaraxis (~Codaraxis@user/codaraxis) (Ping timeout: 246 seconds)
[09:17:53] *** Joins: dodobrain (~dodobrain@user/dodobrain)
[09:19:00] *** Quits: slowButPresent (~slowButPr@user/slowbutpresent) (Quit: leaving)
[09:19:01] *** Quits: zacts (~zacts@user/zacts) (Quit: Client closed)
[09:19:17] *** Joins: whatsupboy (~whatsupbo@user/scobydoo)
[09:20:46] *** Quits: subopt (~subopt@2603-8081-2302-459a-ed10-e47e-a3f1-992c.res6.spectrum.com) (Quit: My MacBook has gone to sleep. ZZZzzz…)
[09:21:14] *** Joins: revolve (~u0_a227@cpc100838-bagu15-2-0-cust672.1-3.cable.virginm.net)
[09:23:19] <kratos> first check subtypes before checking the supertype --> google rule of thumb :)
[09:23:30] <kratos> *good
[09:23:48] *** Quits: CrazyEddy (crazyed@2603:300a:1d10:c000:de4a:3eff:fe88:cc5f) (Ping timeout: 240 seconds)
[09:25:43] *** Quits: konfusedagain (~konfuseda@125.99.177.198) (Ping timeout: 246 seconds)
[09:27:46] *** Joins: CrazyEddy (crazyed@2603:300a:1d10:c000:de4a:3eff:fe88:cc5f)
[09:28:39] *** Joins: KnowledgeShark (~Knowledge@50.34.198.222)
[09:28:59] *** Joins: dvx (~dvx@5.181.92.64)
[09:29:11] <KnowledgeShark> evening everyone! Just got a new clean install of Debian 11 Bullseye w/ Python 3.10.0 :)
[09:29:16] <KnowledgeShark> happy coding!
[09:30:46] *** Quits: runelind (~runelind@user/runelind) (Quit: ZNC 1.8.2 - https://znc.in)
[09:31:31] <dba> Can anybody elaborate a doc, howto, article or any sort of content with some use cases of  `requests.adapters` and in particular `HTTPAdapter`. Thanks in advance
[09:32:38] *** Joins: Guest34 (~textual@ip4d14fa13.dynamic.kabel-deutschland.de)
[09:34:01] *** Quits: tijuco (~tijuco@user/tijuco) (Quit: Leaving)
[09:36:24] *** Joins: merijn (~merijn@c-001-001-001.client.esciencecenter.eduvpn.nl)
[09:37:11] *** Guest34 is now known as Gotoma
[09:38:29] *** Quits: Gotoma (~textual@ip4d14fa13.dynamic.kabel-deutschland.de) (Quit: Textual IRC Client: www.textualapp.com)
[09:38:44] *** Joins: Gotoma (~textual@ip4d14fa13.dynamic.kabel-deutschland.de)
[09:40:35] *** Joins: gitesh (uid423739@id-423739.ilkley.irccloud.com)
[09:40:48] <SnoopJ> dba, they're useful if you want to get inside the loop before a request is sent out to the transport layer. The ability to specify a maximum number of retries is an example on the base class of how that may be useful, and pip vendors an adapter that allows for cached responses (removing the need to hit the wire multiple times for the same resource) for a third-party example
[09:41:13] *** Joins: manti7 (~manti7@176.10.104.94)
[09:41:22] *** Quits: ghost43 (~ghost43@gateway/tor-sasl/ghost43) (Remote host closed the connection)
[09:42:10] *** Joins: ghost43 (~ghost43@gateway/tor-sasl/ghost43)
[09:42:46] <SnoopJ> The `requests_toolbelt` package also has some adapters that may give you a sense what of mucking about in those details can do: https://toolbelt.readthedocs.io/en/latest/adapters.html
[09:43:06] *** Joins: kostkon_ (~kostkon@athedsl-254924.home.otenet.gr)
[09:44:22] *** Quits: AlanMD_ (~AlanMD@86.124.29.88) (Remote host closed the connection)
[09:44:35] *** Quits: YuGiOhJCJ (~YuGiOhJCJ@gateway/tor-sasl/yugiohjcj) (Quit: YuGiOhJCJ)
[09:44:36] *** Quits: kostkon (~kostkon@2a02:587:a106:f8d0:28a:a3d5:fa76:ae0a) (Ping timeout: 240 seconds)
[09:44:40] *** Quits: zebrag (~chris@user/zebrag) (Quit: Konversation terminated!)
[09:44:52] *** Quits: SaltHilStroller_ (~SaltHillS@206.223.160.26) (Ping timeout: 272 seconds)
[09:45:10] *** Joins: AlanMD (~AlanMD@86.124.29.88)
[09:45:38] *** Quits: hams (~hams@user/hams) (Read error: Connection reset by peer)
[09:47:28] *** Quits: dodobrain (~dodobrain@user/dodobrain) (Remote host closed the connection)
[09:47:37] *** Quits: Shou (~nyah@wikipedia/Davepeta) (Remote host closed the connection)
[09:49:18] *** Quits: ghost43 (~ghost43@gateway/tor-sasl/ghost43) (Remote host closed the connection)
[09:49:55] *** Quits: dhellmann (~dhellmann@097-081-099-073.res.spectrum.com) (Ping timeout: 260 seconds)
[09:50:06] *** Quits: Gotoma (~textual@ip4d14fa13.dynamic.kabel-deutschland.de) (Quit: Textual IRC Client: www.textualapp.com)
[09:50:21] *** Joins: Gotoma (~textual@ip4d14fa13.dynamic.kabel-deutschland.de)
[09:50:51] *** Quits: Gotoma (~textual@ip4d14fa13.dynamic.kabel-deutschland.de) (Client Quit)
[09:50:58] *** Quits: julia__ (~quassel@user/julia) (Ping timeout: 260 seconds)
[09:51:10] *** Joins: Gotoma (~textual@ip4d14fa13.dynamic.kabel-deutschland.de)
[09:52:12] *** Joins: ghost43 (~ghost43@gateway/tor-sasl/ghost43)
[09:52:19] *** Quits: dob1 (~dob1@user/dob1) (Ping timeout: 246 seconds)
[09:52:40] *** Quits: cthulchu_ (~Cthulchu@69-172-160-196.cable.teksavvy.com) (Ping timeout: 246 seconds)
[09:54:03] *** Joins: dhellmann (~dhellmann@097-081-099-073.res.spectrum.com)
[09:54:25] *** Quits: grawity (grawity@star.nullroute.lt) (Remote host closed the connection)
[09:54:58] *** Joins: codebam_ (~codebam@user/codebam)
[09:55:46] *** Quits: Hanii (~textual@2a00:23c5:c583:a300:b563:2857:6cfb:5f17) (Quit: My iMac has gone to sleep. ZZZzzz…)
[09:55:59] *** Joins: lpapp (~lpapp@ec2-35-158-255-21.eu-central-1.compute.amazonaws.com)
[09:56:08] <lpapp> hi, is it ok to create a python virtualenv with space in the path?
[09:56:36] *** Quits: causasui (~causasui@c-68-60-125-136.hsd1.mi.comcast.net) (Ping timeout: 240 seconds)
[09:56:51] *** Quits: daex (~daex@user/daex) (Quit: /me 's znc kicks the bucket)
[09:57:06] <lpapp> scripts seem to break from there
[09:57:10] *** Joins: daex (~daex@user/daex)
[09:57:19] *** Joins: grawity (grawity@star.nullroute.lt)
[09:57:27] *** Quits: codebam (~codebam@user/codebam) (Ping timeout: 260 seconds)
[09:57:53] <Gotoma> @lpapp never tryed but does not sound like a good idea, why do you think about it at all?
[09:57:55] *** Quits: carl- (~carl-@c-138ee555.02-180-73746f39.bbcust.telenor.se) (Ping timeout: 246 seconds)
[09:58:06] <lpapp> Gotoma: why not? It is a completely valid path
[09:58:27] <InPhase> lpapp: That sounds worth avoiding.  Spaces in paths just lead to problems, and it's not worth worrying about when you have a choice.
[09:58:54] <InPhase> Underscores and WordCapitalizing offer much flexibility already.
[09:59:05] <lpapp> It does not matter what you really think about spaces
[09:59:10] <lpapp> since they are valid paths, they will be used by users.
[09:59:27] <Gotoma> Because on mac you would need to escape with backslash to step into, thats already nasty
[09:59:30] <lpapp> I am surprised scripts inside virtualenv breaks
[09:59:36] <parv> lpapp, Frankly whatever is breaking over a space is broken itself. Point is how much do you care about filing a bug; fixing for youself; or, make do without having a space.
[09:59:42] <lpapp> it sounds like virtualenv is bad if it cannot avoid breakage.
[09:59:49] <lpapp> better to avoid virtualenv itself.
[09:59:49] <InPhase> If you're asking, "Should I write code that handles spaces in paths?"  Yes, yes you should.  Should you introduce spaces into paths?  No, no you shouldn't.
[10:00:16] *** Joins: iflema (~ian@user/iflema)
[10:00:17] <Gotoma> No virtualenv is perfect
[10:00:20] <lpapp> parv: I do not care much about virtualenv if such a basic thing breaks in it
[10:00:27] <Gotoma> Do not consider leave it out
[10:00:28] *** Joins: kts (~kts@103.73.237.175)
[10:00:55] <Gotoma> Python + Virtualenv = True Love
[10:00:58] <parv> lpapp, Yeah, that's another worthy consideration.
[10:00:59] <lpapp> god, even old 70s/80s programmes can handle spaces.
[10:02:24] *** Quits: iflema (~ian@user/iflema) (Quit: iflema)
[10:03:08] <SnoopJ> lpapp, what breaks when you create a venv with a space in the path, in your experience?
[10:03:22] *** Joins: han-solo (~han-solo@user/han-solo)
[10:03:27] *** Quits: roxfan (~roxfan@2a02:a03f:a2be:4f00:913a:502b:5b7b:1e2b) (Ping timeout: 260 seconds)
[10:03:28] <lpapp> e.g. conan in the virtualenv installed by pip
[10:04:04] <rud0lf> that may be offtopic but how do you pronounce .py extension? "pee-aye" or "pie"?
[10:04:31] <rud0lf> i'mm asking if i ever talked over voice channel with someone, i want to sound more credible :)
[10:04:36] <lpapp> like the beginning of python
[10:04:44] <rud0lf> pie then, thank you
[10:05:03] <InPhase> rud0lf: Hah.  Not sure where "pee-aye" would come from, but "pie" is what I always hear.  :)
[10:05:17] <rud0lf> pee-aye as in spelling, P.Y.
[10:05:35] <SnoopJ> rud0lf, the letter Y is not typically pronounced "aye"
[10:05:48] <InPhase> Maybe among pirates.
[10:05:50] <SnoopJ> (more like "why")
[10:06:09] <lpapp> yeah, I did not get pee-aye either
[10:06:13] <rud0lf> :p
[10:06:21] <lpapp> in general, it is awkward to pronounce abbreviations as abbreviations
[10:06:29] <lpapp> when it comes to geek-y things
[10:06:57] *** Joins: dob1 (~dob1@user/dob1)
[10:06:57] <parv> lpapp, How would you say CVS?
[10:07:05] <lpapp> e.g. chmod would not be pronounced as "see, h, mod".
[10:07:09] <lpapp> cvs is fine
[10:07:17] <lpapp> although it is not a geek-y thing as chmod
[10:07:25] <SnoopJ> lpapp, interesting, I can produce a fault this way with a venv named `test\ venv/`. The shebang looks reasonable to me (the path is quoted) but I guess bash doesn't support the space
[10:07:34] <InPhase> lpapp: Why not?  That's how chmod is pronounced.
[10:07:39] <lpapp> no, not at all
[10:07:51] <lpapp> most people pronounce it here as the word reads.
[10:07:58] <InPhase> The word doesn't read.
[10:08:05] *** Joins: dodobrain (~dodobrain@user/dodobrain)
[10:08:05] <lpapp> oh, yes, it does.
[10:08:08] <InPhase> Do you do "chumod"?
[10:08:19] <lpapp> ch from ch-ange
[10:08:21] <lpapp> and then just mod
[10:08:24] <lpapp> cs-mod
[10:08:24] <parv> "chae mod" or "changemod"
[10:08:41] *** Quits: nuclearg1 (~nucleargr@user/nuclearg1) (Ping timeout: 245 seconds)
[10:08:41] <lpapp> nah, no one bothers with pronunciation here for such things
[10:08:46] <lpapp> much quicker to just say as you read it.
[10:08:58] <lpapp> abbreviation-pronunciation is slow.
[10:09:17] *** Quits: mihael (~mihael@115.146.176.131) (Quit: Client closed)
[10:09:36] <SnoopJ> lpapp, I would say if you want to insist on spaces, you should probably not rely on the shebang and should probably invoke things with the venv's `python3`
[10:09:38] <lpapp> although I can see why one would think "pee why" based on "tee ex tee", etc.
[10:09:40] <InPhase> lpapp: Yep, I'm not crazy.  Most videos on youtube seem to be pronouncing it like "see, h, mod"  https://www.youtube.com/watch?v=ngJG6Ix5FR4
[10:09:45] <lpapp> but never heard "pee why"
[10:10:12] <SnoopJ> i.e. if I do `test\ venv/bin/conan` I get the fault, but if I do `test\ venv/bin/python3 test\ venv/bin/conan` it works fine because the shebang is then irrelevant: I told the shell exactly how to run that file
[10:10:27] <lpapp> InPhase: less effective
[10:10:31] *** Quits: tg (~tg@rockylinux/infra/tg) (Ping timeout: 246 seconds)
[10:10:53] *** Quits: merijn (~merijn@c-001-001-001.client.esciencecenter.eduvpn.nl) (Ping timeout: 260 seconds)
[10:11:11] <lpapp> SnoopJ: the whole point of devenv though is to avoid things like python3.
[10:11:24] <SnoopJ> lpapp, I don't agree
[10:11:48] <SnoopJ> but the problem in this case is not Python, it's the thing interpreting the shebang. I don't know if it's any different on Windows, but Windows doesn't really have a shebang analogue anyway
[10:12:10] <lpapp> there was a pyswitcher sort of setup, cannot remember the project name
[10:12:14] <lpapp> that might be better than virtualenv
[10:12:17] <lpapp> I will try out if that works
[10:12:43] <lpapp> well, you can say that, but ultimately, venv brings in the problem - I do not have problems outside venv
[10:12:49] <SnoopJ> no amount of tool cleverness will make the `conan` entrypoint less broken on a system that doesn't allow a shebang path with a space in it
[10:12:59] <SnoopJ> and this has absolutely nothing to do with it being in a venv
[10:13:08] <lpapp> oh, yes, it has everything
[10:13:10] <ztrawhcse> shebangs don't reliably support spaces, file a bug with your OS kernel if you like
[10:13:13] *** Quits: dob1 (~dob1@user/dob1) (Ping timeout: 260 seconds)
[10:13:15] <SnoopJ> ^
[10:13:22] *** Quits: Gotoma (~textual@ip4d14fa13.dynamic.kabel-deutschland.de) (Quit: My iMac has gone to sleep. ZZZzzz…)
[10:13:23] <SnoopJ> (probably your shell, not your kernel)
[10:13:45] <lpapp> you repeatedly fail to acknowledge that I do not have this issue with venv :)
[10:13:49] <lpapp> without*
[10:13:55] <ztrawhcse> it's irrelevant, the python tools just use /bin/sh and handle spaces by exec'ing the script from there
[10:14:02] <SnoopJ> lpapp, do you have a non-venv Python installed somewhere with a space in the path?
[10:14:14] <SnoopJ> Do you have console scripts whose shebangs point to this Python?
[10:14:20] <lpapp> no, why would I?
[10:14:30] <lpapp> stock python installations do not really do that.
[10:14:41] <SnoopJ> Right, so it's not exactly shocking that you aren't reproducing the fault when you don't set up the conditions of the fault.
[10:14:52] *** Joins: spetrosi (~spetrosi@2a02:8308:b:ec00:e1ce:d7b:6a8f:f189)
[10:14:56] <SnoopJ> If you install Python into a directory that has a space in it, you'll see the same issue with console scripts created for that Python, sans any venv.
[10:15:09] <lpapp> exactly, the venv setup is at fault.
[10:15:17] <SnoopJ> I'm not sure you're understanding the point I'm making.
[10:15:20] <lpapp> when you create it in a project root with space in the path.
[10:15:27] <ztrawhcse> well no you should not see that fault with console scripts
[10:15:28] <lpapp> Whcih is a completely supported filepath character.
[10:15:30] <ztrawhcse> or rather, it depends
[10:15:31] <lpapp> which*
[10:15:32] *** Quits: spetrosi (~spetrosi@2a02:8308:b:ec00:e1ce:d7b:6a8f:f189) (Read error: Connection reset by peer)
[10:15:53] <ztrawhcse> again, the tools should handle this automatically, the script ends up running with /bin/sh
[10:15:53] <SnoopJ> lpapp, apparently not completely supported by shell conventions about shebangs
[10:16:06] <ztrawhcse> and the first shell command is: '''exec' '/path to/python' "$0" "$@"
[10:16:43] <ztrawhcse> so it *really* depends on how you install things, because your installer program will dictate whether that workaround is generated
[10:17:04] <ztrawhcse> pip should work, python -m installer should work
[10:17:26] *** Quits: rvalue (~rvalue@user/rvalue) (Read error: Connection reset by peer)
[10:17:30] <ztrawhcse> if you installed conan with `python setup.py install` I'm pretty sure it doesn't work
[10:17:34] <SnoopJ> oh huh, maybe it is the kernel after all, some discussion on the bash mailing list: https://lists.gnu.org/archive/html/bug-bash/2008-05/msg00053.html
[10:17:41] <ztrawhcse> if the software includes its own scripts, it may not work
[10:17:58] *** Joins: rvalue (~rvalue@user/rvalue)
[10:18:12] <lpapp> ztrawhcse: installed by pip
[10:18:12] <ztrawhcse> SnoopJ: of course it's the kernel, bash doesn't automatically run everything you execute using bash
[10:18:24] <ztrawhcse> it will sometimes do so, yes
[10:18:31] <SnoopJ> ztrawhcse, you say "of course" like it's obvious
[10:18:56] <ztrawhcse> well, what do you suppose the zsh or fish users encounter?
[10:19:06] <ztrawhcse> (surely there is at least one fish user)
[10:19:09] <SnoopJ> I wouldn't know, I don't use those shells
[10:19:11] <lpapp> ztrawhcse: pip install -r ./build-requirements.txt in venv
[10:19:20] <SnoopJ> at any rate, this fault has very little to do with Python
[10:19:28] <lpapp> so, it is not exactly true what you are saying, sadly.
[10:19:58] *** Joins: pvergain (~Thunderbi@2a01:e0a:223:690:9ae7:53b8:7ea7:4c7f)
[10:20:01] <lpapp> it has almost everything to do with python's virtualenv, if I do not use it, things just work, really.
[10:20:19] <lpapp> I have a python and conan installation that way, and my project with space in the past, no issues at all whatsoever.
[10:20:25] <SnoopJ> lpapp, you can reproduce this fault without getting Python involved at all
[10:20:27] *** Joins: tg (~tg@rockylinux/infra/tg)
[10:20:46] <SnoopJ> make a path that has a space in it, put something executable there, point to that in a shebang
[10:20:49] <lpapp> SnoopJ: why would I introduce issues? venv is introducing it for me, really. You still do not get it =)
[10:21:06] <lpapp> You seem to claim "people should not use valid paths". That is really bad "support".
[10:21:11] <SnoopJ> lpapp, understood, I won't bother you with any more feedback.
[10:21:16] <lpapp> thanks!
[10:21:19] <ztrawhcse> SnoopJ: keep in mind also that shebang scripts can be used from python subprocess.run and similar, unlike on Windows where you cannot really run scripts directly, on unix a script is a first class citizen
[10:21:57] <jinsun__> nice quote from that email SnoopJ posted, Patient asks: "Doctor, doctor, it hurts when I use spaces in filenames."
[10:21:57] <jinsun__> Doctor responds:  "... then don't use spaces in filenames." :D
[10:22:31] <SnoopJ> I guess the superstition didn't come from nowhere
[10:22:54] <lpapp> "Doctor, doctor, it hurts when I use venv with pytyon." - "Doctor response: "... then do not use venv with python." :D
[10:23:04] *** Joins: nuclearg1 (~nucleargr@user/nuclearg1)
[10:23:13] <SnoopJ> you are free to do that, if you like
[10:23:26] <SnoopJ> It won't make this problem stop existing, but it might make you feel better about it
[10:23:28] <lpapp> again, space is a completely valid filepath character practically everywhere.
[10:23:37] <SnoopJ> yes, except in exactly the case you're trying to use it in
[10:23:53] <lpapp> that is a venv fault
[10:24:01] <lpapp> sorry that they cannot handle it.
[10:24:05] <lpapp> or any other tools.
[10:24:12] <dba> SnoopJ: Thanks for the reference to `requests_toolbelt`
[10:24:18] <lpapp> still, the os allows spaces in filepaths, so they can be used.
[10:24:27] <lpapp> try out: "mkdir foo\ bar"
[10:24:37] <lpapp> on any OS, practically. You will not get an error.
[10:24:38] <ztrawhcse> space is a completely unrecommended filepath character everywhere other than Windows, for decades.
[10:24:40] <lpapp> and that is fair.
[10:24:55] <ztrawhcse> however, this does work in general for python last I checked
[10:25:13] *** Quits: revolve (~u0_a227@cpc100838-bagu15-2-0-cust672.1-3.cable.virginm.net) (Read error: Connection reset by peer)
[10:25:24] <lpapp> Yes, it is a poor recommendation though
[10:25:30] <jinsun__> if it is an issue with the #! processing of the kernel, I assume it doesn't happen on windows?
[10:25:38] *** Joins: stockh0lm (~Andreas@p200300d2c70cd40090355f9938920f5d.dip0.t-ipconnect.de)
[10:25:44] <ztrawhcse> sure, windows can't run them to begin with
[10:25:53] <ztrawhcse> that's why distlib has the simple launcher
[10:26:17] <ztrawhcse> every program you pip install installs a .exe file as a console script, which loads the python entry point
[10:26:37] <ztrawhcse> by regexing the filename of the exe, if I recall correctly
[10:26:38] <SnoopJ> here is a reproduction of the fault that does not involve Python: https://bpa.st/2MQA
[10:26:49] <ztrawhcse> ./python -m venv 'venv with spaces'
[10:26:59] <ztrawhcse> ./venv\ with\ spaces/bin/python -m pip install conan
[10:27:09] <ztrawhcse> $ cat venv\ with\ spaces/bin/conan
[10:27:11] <ztrawhcse> #!/bin/sh
[10:27:13] <ztrawhcse> '''exec' "/tmp/venv with spaces/bin/python" "$0" "$@"
[10:27:19] *** Quits: nuclearg1 (~nucleargr@user/nuclearg1) (Ping timeout: 246 seconds)
[10:27:22] <ztrawhcse> golly gee, look at that
[10:27:35] <ztrawhcse> just like I said -- pip works here, it supports venv with spaces
[10:27:45] <ztrawhcse> it supports python with spaces too :)
[10:28:10] <SnoopJ> venv could maybe try to bend over backwards to patch this gaping hole in how shebangs work, but I doubt it ever would
[10:28:23] <ztrawhcse> it's not a venv thing
[10:28:42] <ztrawhcse> it's part of distlib, vendored by pip, it's how entry points generate their script launcher
[10:28:47] <lpapp> pyenv seems better than venv, scrape it.
[10:28:54] <ztrawhcse> distlib *does* bend over backward
[10:29:02] <ztrawhcse> pip, therefore, bends over backward
[10:29:10] <SnoopJ> to emit a faulty shebang?
[10:29:12] <The-Compiler> lpapp: pyenv and venv don't solve the same problem
[10:29:14] <ztrawhcse> lpapp: I did exactly what you said you did, and it works for me
[10:29:37] <SnoopJ> I don't understand what's "bending over backwards" about emitting a shebang that doesn't actually work in this case. I was talking about emitting one that *would* work in this case (like your exec/etc. samples)
[10:29:56] <lpapp> ztrawhcse: you did not do what I did though.
[10:30:22] <ztrawhcse> how is that so?
[10:30:23] <SnoopJ> anyway, venv doing that would be kinda pointless, this is the upstream's fault and trying to support it would probably be a nightmare for portability
[10:30:28] <ztrawhcse> you said you installed with pip
[10:30:33] <lpapp> ztrawhcse:  did not create venv with space in the first place
[10:30:38] *** Joins: Guest54 (~Guest54@197.244.111.215)
[10:30:39] <ztrawhcse> I didn't???
[10:30:41] <lpapp> I said the project root had space in it
[10:30:46] <SnoopJ> much better to give the best faith and let the kernel deal with it, and if the kernel does a bad job, well, it's the kernel's fault
[10:30:51] <InPhase> lpapp: So there are plenty of things I install with venv and they work fine with spaces in the venv.  conan doesn't, but other things do.  There must be something different with how the conan package is setup.
[10:30:58] <ztrawhcse> the project root has spaces in it therefore what?
[10:30:59] <lpapp> moreover, you did not seem to activate the venv
[10:31:10] *** Joins: ghost43_ (~ghost43@gateway/tor-sasl/ghost43)
[10:31:12] *** Joins: ericleer (~ericleer@dhcp-077-249-173-130.chello.nl)
[10:31:14] *** Quits: ghost43 (~ghost43@gateway/tor-sasl/ghost43) (Remote host closed the connection)
[10:31:17] <SnoopJ> InPhase, nah, it works fine if you `path/to/that\ venv/bin/python3 -m conans.conan`, it's the shebang specifically
[10:31:22] <ztrawhcse> what does the project root have to do with venv, unless.... the venv has spaces in it because it is in the project root
[10:31:23] <lpapp> and you did not use pip install -r ./br.txt inside with something like conan==1.45.0
[10:31:27] <SnoopJ> (I don't know why it's conans.conan, that's weird)
[10:31:29] <lpapp> and then running conan _inside_ the venv
[10:31:42] <InPhase> SnoopJ: Yeah, the shebang is being worked around by an exec line in many of these installs I just tested.
[10:31:43] <ztrawhcse> lpapp: you don't need to activate a venv. Ever.
[10:31:50] <lpapp> lol
[10:31:52] <InPhase> SnoopJ: Just not for conan.
[10:31:58] <ztrawhcse> activating a venv is literally just setting $PATH
[10:32:00] <SnoopJ> InPhase, interesting. I wonder why mine is just a garbage quoted path
[10:32:15] <lpapp> so, you do completely different things and you say you did the same :)
[10:32:17] <ztrawhcse> you can just... directly run the executables
[10:32:22] <lpapp> just try out what I wrote.
[10:32:28] <SnoopJ> lpapp, did you look at my reproduction case?
[10:32:28] <lpapp> You will see that it will fail on you (hopefully)
[10:32:46] <lpapp> SnoopJ: no, because it does not make sense to create problems for yourself.
[10:32:53] <InPhase> lpapp: When you installed conan did you get the tqdm package picked up as well?
[10:32:55] <lpapp> that is insanity for me, personally :)
[10:33:05] <lpapp> InPhase: I do not know.
[10:33:08] <InPhase> lpapp: And does the tqdm package have a correct shebang line?
[10:33:14] <ztrawhcse> lpapp: Speaking as an ***actual domain expert*** you are wrong, I don't know why you are so attached to trying to correct the experts :)
[10:33:16] *** Quits: fflam (~mdt@ip72-220-60-77.sd.sd.cox.net) (Ping timeout: 246 seconds)
[10:33:25] *** Quits: Guest54 (~Guest54@197.244.111.215) (Client Quit)
[10:33:25] <InPhase> lpapp: Well, can you look in the bin of the venv?
[10:33:29] <lpapp> ztrawhcse: please stay objective, domain expert
[10:33:39] <lpapp> reason with arguments, not get personal
[10:33:40] <SnoopJ> lpapp, that is an interesting thing to say, but I can't make you interested in an explanation of the fault
[10:33:41] *** Quits: lbalhar (~lbalhar@93.185.13.26) (Ping timeout: 245 seconds)
[10:34:06] <ztrawhcse> I *demonstrated* it for you, so I think that's objective enough
[10:34:17] <lpapp> No, because you did not do the same
[10:34:30] <lpapp> you demonstrated a different use case and/or workflow.
[10:34:36] <jinsun__> it kinda sounds like you don't want to solve your problem but convince others that they shouldn't use venvs
[10:34:54] <lpapp> InPhase: ./devenv/bin/tqdm and ./devenv/lib/python3.10/site-packages/tqdm are there
[10:35:15] <lpapp> jinsun__: that _is_ the solution though
[10:35:19] *** Joins: mexen (uid495612@user/mexen)
[10:35:20] <InPhase> lpapp: And is the shebang line ok for tqdm?
[10:35:21] <lpapp> unless you know how to make this work inside venv
[10:35:30] *** Joins: fflam (~mdt@ip72-220-60-77.sd.sd.cox.net)
[10:35:31] <ztrawhcse> $ mkdir "project root" && python -m venv "project root/venvroot" && echo "conan==1.45.0" > project\ root/venvroot/br.txt
[10:35:43] <InPhase> lpapp: Specifically when using a space in the env.
[10:35:49] <lpapp> InPhase: it is just #!/bin/sh
[10:35:51] <SnoopJ> lpapp, I demonstrated how the failure can happen when venv is not involved at all, to try and illustrate that this isn't venv going wrong.
[10:35:56] <lpapp> looks good to me
[10:36:01] <SnoopJ> But you seem very committed to that point of view, I will leave you to it.
[10:36:10] *** Joins: carl- (~carl-@185.103.188.130)
[10:36:13] <InPhase> lpapp: Right.  So the problem here is something about how conan sets itself up, not venv or pip itself.
[10:36:21] <ztrawhcse> $ . project\ root/venvroot/bin/activate && pip install -r project\ root/venvroot/br.txt
[10:36:33] <ztrawhcse> lpapp: this is identical in behavior, but if you insist
[10:36:53] <ztrawhcse> holy cow
[10:36:58] <ztrawhcse> $ Using legacy 'setup.py install' for conan, since package 'wheel' is not installed.
[10:37:01] <InPhase> lpapp: I'm not sure what the cause is, but clearly some packages handle it and some don't.  Which means the problem is happening somewhere other than at the venv level.
[10:37:07] *** Joins: upsala (~zcb@185.209.196.134)
[10:37:09] *** Joins: ghost47 (~ghost47@197.244.111.215)
[10:37:16] <lpapp> ztrawhcse: different step, use source .../activate
[10:37:16] <ztrawhcse> $ cat project\ root/venvroot/bin/conan
[10:37:18] <ztrawhcse> #!"/tmp/project root/venvroot/bin/python"
[10:37:20] <ztrawhcse> # EASY-INSTALL-ENTRY-SCRIPT: 'conan==1.45.0','console_scripts','conan'
[10:37:42] <ztrawhcse> lpapp: I reproduced your error, by following your pointless activate steps
[10:37:44] <SnoopJ> InPhase, yea, the problem is compounded here by counting on individual packages to support these paths, too. You'd think that would be straightforward, but...
[10:37:49] <lpapp> In any case, it does not give me a solution if this works for you, but not for me.
[10:37:49] <ztrawhcse> however my new venv did not have wheel installed
[10:37:57] <ztrawhcse> so, pip didn't pip
[10:38:05] <ztrawhcse> pip went and `python setup.py install`ed
[10:38:20] *** Quits: lowfi (~lowfi@user/lowfi) (Quit: Leaving)
[10:38:23] <ztrawhcse> which I already stated from the beginning, does not work, because it doesn't do the pip trick
[10:38:56] <SnoopJ> lpapp, a completely reliable solution is not to rely on the shebang: `path/to/the\ venv/bin/python3 -m conans.conan` will work, as will `path/to/the\ venv/bin/python3 path/to/the\ venv/bin/conan`
[10:39:07] <ztrawhcse> guess what else is reliable
[10:39:11] <ztrawhcse> installing wheel
[10:39:14] <SnoopJ> those are hideous, but if you really really don't wanna activate the venv...
[10:39:44] *** Joins: Midjak (~Midjak@82.66.147.146)
[10:39:47] <lpapp> huh? I have to activate the environment. ztrawhcse did not want.
[10:39:54] <ztrawhcse> SnoopJ: the questioner has utterly rejected spec-compliant reproducers, by insisting that "you have to activate the venv or it doesn't count"
[10:40:03] *** Joins: konfusedagain (~konfuseda@125.99.177.198)
[10:40:04] *** Quits: ghost47 (~ghost47@197.244.111.215) (Client Quit)
[10:40:06] <SnoopJ> lpapp, you do not have to activate the venv
[10:40:08] <ztrawhcse> lpapp: ***the spec*** states that you don't need to activate the environment
[10:40:15] <lpapp> yes, I have to.
[10:40:18] <lpapp> This is our workflow.
[10:40:18] <ztrawhcse> no you don't
[10:40:20] <SnoopJ> you can point directly at the interpreter, as in the example I just gave. It's just really verbose
[10:40:22] <lpapp> yes, I have to.
[10:40:29] <lpapp> This is our supported workflow here.
[10:40:34] <lpapp> Let me not repeat this again....
[10:40:35] <ztrawhcse> your workflow is not related to whether something is reproducible
[10:40:37] <SnoopJ> lpapp, okay, then you can shorten the invocation to `python3 -m conans.conan` or `python3 path/to/the\ venv/bin/conan`
[10:40:38] *** Quits: Enitin (~Enitin@82.180.145.226) (Ping timeout: 260 seconds)
[10:40:51] <SnoopJ> because your `python3` will point to the right place and you can skip specifying that path
[10:40:54] <InPhase> Hmm, yeah.  When I install wheel first, conan installs correctly with a valid shebang.
[10:41:02] <ztrawhcse> I have done what you did, and "activate the venv" is not related to what you did
[10:41:12] *** Joins: Enitin (~Enitin@82.180.145.230)
[10:41:17] *** Quits: scoobydoo (~scooby@user/scoobydoo) (Ping timeout: 256 seconds)
[10:41:40] <ztrawhcse> lpapp: but because you insisted, I went to extra effort to try with and without activating the venv, just to make you happy. I got the same successful results when I activated the venv first
[10:41:53] <lpapp> it is not extra effort at all, this is the effort required for the question I had.
[10:42:01] <SnoopJ> InPhase, huh, and so it does. I didn't even realize the console scripts could be so different.
[10:42:09] <ztrawhcse> lpapp: I only repeated your error when I didn't activate the venv, and also didn't have wheel installed
[10:42:30] <lpapp> so, the solution I should suggest is to add wheel to the build requirements?
[10:42:34] <ztrawhcse> yes
[10:42:45] <ztrawhcse> so that conan uses wheel to build a wheel
[10:43:00] <ztrawhcse> instead of directly using `setup.py install` (and warning you on the console that it is doing so)
[10:43:31] <InPhase> A self-contained test:  python -m venv foo\ bar; ./foo\ bar/bin/pip install wheel conan
[10:43:46] *** Quits: mncheck (~mncheck@193.224.205.254) (Read error: Connection reset by peer)
[10:44:03] <lpapp> ztrawhcse: and it will work on Mac, Win and Linux, yeah?
[10:44:09] <ztrawhcse> InPhase: I did that, and showed the results to lpapp, but got told it doesn't count, because I didn't first do `. foo\ bar/bin/activate`
[10:44:15] *** Joins: nemexis (~nemexis@193-62-201-31.ftth.glasoperator.nl)
[10:44:19] <lpapp> including CentOS 7.x?
[10:44:27] <ztrawhcse> lpapp: it will work everywhere
[10:45:06] <lpapp> which version would you suggest?
[10:45:15] <lpapp> We seem to hardcode the version in br.txt
[10:45:16] <ztrawhcse> however, it is only *needed* on linux and mac (which use shebangs), and it is harmless on Windows (which uses .exe)
[10:45:25] <ztrawhcse> I recommend hardcoding the latest version
[10:45:30] <lpapp> well, if it does not take ages to install, it is ok.
[10:45:32] <InPhase> ztrawhcse: lpapp might be trying out venv for the first time and might not know yet what the activate actually does to the path.
[10:45:33] <lpapp> I think
[10:45:33] <SnoopJ> yea, Windows won't have this bizarre quirk that needs working-around in the first place
[10:45:34] <ztrawhcse> no real point using an old one :D
[10:45:50] <lpapp> InPhase: lol
[10:45:55] <lpapp> InPhase: you must be kidding :)
[10:46:05] <ztrawhcse> SnoopJ: it has a different bizarre quirk that needs working around with a .exe bundled with pip instead :D
[10:46:41] <lpapp> ztrawhcse: what is the latest? 0.37.1?
[10:46:42] <SnoopJ> ztrawhcse, now you're just describing operating systems
[10:46:55] <ztrawhcse> that is true... quirks gonna quirk
[10:47:10] <SnoopJ> at least Windows is a relatively predictable level of crazy :)
[10:48:27] *** Joins: quhar (~quhar@192.162.148.48)
[10:48:39] *** Quits: kaiseisei (~Thunderbi@user/kaiseisei) (Quit: kaiseisei)
[10:48:39] <lpapp> ztrawhcse: sadly, wheel installation did not work here
[10:48:43] <ztrawhcse> err... sorry no, I don't find Windows very predictable at all :(
[10:48:56] <InPhase> lpapp: Did you try my self-contained test?
[10:50:04] *** Joins: kaiseisei (~Thunderbi@user/kaiseisei)
[10:50:07] *** Quits: Enitin (~Enitin@82.180.145.230) (Ping timeout: 260 seconds)
[10:50:28] <ztrawhcse> but also, if everyone stuck to windows then where would we get our -fomg-optimize in? Where would be our quotable quotes? "HOLY COW I'M TOTALLY GOING SO FAST OH F*** OH S***"
[10:50:31] <lpapp> getting the same in the virtual environment after wheel set up.
[10:50:51] <ztrawhcse> lpapp: does conan still log: Using legacy 'setup.py install' for conan, since package 'wheel' is not installed.
[10:51:33] <lpapp> InPhase: reproduction step is not correct. As written before, the virtual env is not foo\ bar, the project root is.
[10:51:47] <SnoopJ> ztrawhcse, perhaps I mean something more like "specified in the first place" since AFAIK shebangs are explicitly unspecified by POSIX
[10:51:55] <lpapp> ztrawhcse: no idea
[10:52:25] <lpapp> Using legacy 'setup.py install' for conan, since package 'wheel' is not installed.
[10:52:26] <SnoopJ> (which is why I'm sort of surprised the tooling even bothers to get the right answer here, but maybe that's a modern compat thing since it whiffs it in the legacy build chain)
[10:52:32] *** Joins: Gotoma (~textual@ip4d14fa13.dynamic.kabel-deutschland.de)
[10:52:36] <lpapp> aye, sorry, might need to add wheel before conan in br.txt
[10:52:46] <lpapp> it is not picking up again otherwise if later maybe
[10:53:20] <ztrawhcse> yes, you do need to ensure wheel gets installed first
[10:54:25] *** Quits: kaiseisei (~Thunderbi@user/kaiseisei) (Client Quit)
[10:54:48] *** Quits: alex11 (~alex11@user/alex11) (Quit: Leaving)
[10:55:11] *** Joins: kaiseisei (~Thunderbi@user/kaiseisei)
[10:55:33] <jinsun__> editable install will still break probably, because looks like setuptools is not handling this like distlib
[10:55:35] <ztrawhcse> SnoopJ: to be fair, whether it is specified by POSIX or not is a bit irrelevant since I believe all Unixes support it anyway -- with certain portable baseline semantics
[10:56:27] <SnoopJ> ztrawhcse, I wouldn't bet the farm on the immutability of Unix-alikes, personally, but point taken.
[10:56:34] <ztrawhcse> how to handle spaces followed by arguments is one of those non-portable things, but how to handle a shebang with a single word that is a filename without spaces? easy and reliable
[10:56:47] <SnoopJ> It does at least point out explicitly that the behavior is unspecified, but something it's aware of
[10:57:14] <lpapp> ztrawhcse: damn, we have our own internal pypi --index-url
[10:57:15] <SnoopJ> It just surprised me whenever I first learned that #!whatever is wink-wink-nudge-nudge behavior
[10:57:26] <lpapp> I will need to check whether wheel is available there, because if not, that is gonna suck
[10:57:32] <ztrawhcse> it's one of those things that I'd rely on, because it's broadly supported and anyone who goes against the grain is likely to be deliberately *trying* to break it
[10:58:10] <ztrawhcse> mind you, you cannot actually assume /bin/sh is a POSIX shel
[10:58:15] <gevreeen> uwsgi's REQUEST_URI key in environ isn't part of the wsgi std, in particular, PEP 3333, no?
[10:58:18] <ztrawhcse> there's that one standout, solaris
[10:58:46] <SnoopJ> ztrawhcse, my point is more that you can't rely on *anything* about what #!something will do
[10:58:47] <ztrawhcse> /usr/xpg4/bin/sh is the POSIX shell, /bin/sh is the legacy pre-posix shell "for compatibility"
[10:58:52] <gevreeen> /bin/sh on solaris isn't a posix shell?
[10:59:03] *** Quits: nemexis (~nemexis@193-62-201-31.ftth.glasoperator.nl) (Read error: Connection reset by peer)
[10:59:09] <gevreeen> oh dear
[10:59:09] <ztrawhcse> the latest version of solaris fixes this inconsistency -- it is now a POSIX shell
[10:59:17] <SnoopJ> but I guess leaving it unspecified is how the sausage gets made: the shell is free to do whatever it's gotta do
[10:59:21] *** Quits: ghost43_ (~ghost43@gateway/tor-sasl/ghost43) (Remote host closed the connection)
[10:59:29] <parv>  Is Solaris not done, kaput, EoL'd, etc?
[10:59:33] <SnoopJ> shell/kernel
[10:59:56] <lpapp> can I query from the command line if wheel exists in our index? pip search does not seem to be enabled.
[11:00:09] *** Joins: ghost43 (~ghost43@gateway/tor-sasl/ghost43)
[11:00:25] *** Joins: cliluw (~cliluw@47.147.77.43)
[11:00:39] <lpapp> and our --index-url does not seem to load in the browser :D
[11:00:43] *** Joins: nemexis (~nemexis@193-62-201-31.ftth.glasoperator.nl)
[11:01:28] <SnoopJ> you can do `python3 -m pip index versions wheel` if you're willing to rely on index being an experimental command (and have a recent enough pip)
[11:01:36] <lpapp> Requirement already satisfied: wheel==0.37.1 in ./devenv/lib/python3.10/site-packages (from -r ./build-requirements.txt (line 4)) (0.37.1)
[11:01:40] *** Joins: amogorkon (~amogorkon@user/amogorkon)
[11:01:43] <lpapp> but conan would still use setup.py, why?
[11:01:49] <ztrawhcse> parv: solaris 11.4 was released in 2018, and apparently people still pay for it and use it
[11:02:06] <SnoopJ> lpapp, have you tried removing and reinstalling it? possibly you installed them in the other order when you first got wheel
[11:02:07] <lpapp> SnoopJ: that says wheel (0.37.1)
[11:02:33] <SnoopJ> lpapp, right, it reports the versions if there are any. It reports an error if there aren't any.
[11:02:35] <lpapp> br.txt is in this order: wheel==0.37.1 next line conan==1.45.0
[11:02:51] <lpapp> are these packages installed in parallel or "chronologically"?
[11:02:58] <SnoopJ> I don't think there's a defined order
[11:03:05] <lpapp> ok, so wheel clearly did not fix it for me in br.txt
[11:03:06] <SnoopJ> you shouldn't try to do it all in one go in this case
[11:03:18] <ztrawhcse> it's like trying to upgrade pip in requirements.txt
[11:03:35] <lpapp> wait, what?
[11:03:41] <lpapp> you cannot define the order in br.txt?
[11:03:46] <lpapp> even if one depends on another?
[11:04:04] <ztrawhcse> if one depends on another then that one will contain metadata saying so
[11:04:04] *** Quits: kts (~kts@103.73.237.175) (Ping timeout: 246 seconds)
[11:04:09] *** Joins: luigibu (~luigi@93.176.153.88)
[11:04:17] <SnoopJ> it does not have a meaningful order, no
[11:04:20] <ztrawhcse> in setup.cfg or suchlike it should do setup_requires or pyproject.toml build requires
[11:04:28] <lpapp> phew... this is really bad.
[11:04:37] <ztrawhcse> that will ensure ordering
[11:04:37] *** Joins: EvilDMP (~textual@django/moderator/EvilDMP)
[11:04:50] <SnoopJ> so if you have build dependencies (like wheel), you need to install them in a separate step, or stop using a requirements file and use something PEP 517-aware
[11:04:53] <ztrawhcse> your current problem is because conan doesn't require wheel
[11:05:03] <lpapp> what if I do -r setup-requirements.txt at the beginning?
[11:05:09] <lpapp> that is still not guaranteed to run first?
[11:05:20] <ztrawhcse> presumably because wheel is not actually needed by setuptools itself, but only by PEP 517/518 workflows
[11:05:24] <ztrawhcse> ... and by pip
[11:05:26] <SnoopJ> lpapp, if you install `wheel` before you install `conan`, your problem should be resolved.
[11:05:45] <lpapp> I really really really do not want to introduce one extra step for the devs
[11:05:57] <ztrawhcse> if you first install setup-requirements.txt, and then in a second run you install everything else -- that will work
[11:05:57] <lpapp> so, it should all be defined internally, and not something a dev needs to remember.
[11:06:02] *** Joins: stasp (~chatzilla@37.30.100.59.nat.umts.dynamic.t-mobile.pl)
[11:06:07] <SnoopJ> If you absolutely must use requirements files, you don't really have an alternative
[11:06:22] <lpapp> whilst I can certainly create scripts to automate it, it is kinda shocking that you cannot meaningfully use br.txt to define an order.
[11:06:26] <ztrawhcse> alternatively, you can try asking the conan developers to add a pyproject.toml?
[11:06:52] <lpapp> even if they add, it does not help us, surely.
[11:07:01] <lpapp> cause we are locked on the conan version, too, for good.
[11:07:21] <SnoopJ> `python3 -m pip install -r setup-requirements.txt && python3 -m pip install -r br.txt` ?
[11:07:33] <han-solo> i'm curious, why do one need "wheel", if they don't need to explicitly build a "wheel" ?
[11:07:40] *** Joins: fedenix (~fedenix@gateway/tor-sasl/fedenix)
[11:08:15] <InPhase> han-solo: That's just how we roll.
[11:08:18] <han-solo> iirc, there seems to be an issue with debian, where they try to build the wheel anyway
[11:08:28] <ztrawhcse> actually never mind, conan specifically rejected adding a pyproject.toml
[11:08:33] <han-solo> even if they don't succeed, the package will still be installed
[11:08:38] <han-solo> InPhase: ':)
[11:09:03] <han-solo> s/debian/debian packaged pip/
[11:09:12] <SnoopJ> han-solo, it will still be installed in this case, it just has a console script with a useless shebang
[11:09:12] <ztrawhcse> han-solo: because internally, pip either runs `setup.py install` or else builds a wheel and installs the wheel
[11:09:21] <lpapp> so, Using legacy 'setup.py install' for conan, since package 'wheel' is not installed. even with -r setup-requirements.txt - this is really bad.
[11:09:31] *** Joins: slav0nic (slav0nic@python.su)
[11:09:35] <ztrawhcse> and that hits the unfortunate fact that in the former case, the console scripts are created by setuptools, not by pip
[11:09:37] * SnoopJ is sensing a theme
[11:09:41] *** Quits: Gotoma (~textual@ip4d14fa13.dynamic.kabel-deutschland.de) (Quit: My iMac has gone to sleep. ZZZzzz…)
[11:10:03] <han-solo> ztrawhcse: but why would they build a wheel ? pip can install from src just fine, no ?
[11:10:07] <ztrawhcse> and setuptools has a different console script template, which does not support a python exe that has a space in the filename
[11:10:36] <ztrawhcse> han-solo: it doesn't actually matter, except if your weird python exe has a space in the absolute path name :)
[11:10:55] <SnoopJ> yea setuptools apparently just happily emits garbage for this case
[11:10:58] <han-solo> SnoopJ: oh yeah, i was reading about that, seems for historic reasons can't have a space in shebang ?
[11:11:03] <han-solo> ztrawhcse: i see
[11:11:27] *** Joins: plastico (~plastico@neomutt/plastico)
[11:11:35] <han-solo> Patient asks: "Doctor, doctor, it hurts when I use spaces in filenames."
[11:11:36] <han-solo> Doctor responds:  "... then don't use spaces in filenames."
[11:11:37] <SnoopJ> han-solo, yea evidently you have to do some inane tricks to get this to work. `wheel` will do that for you, `setuptools` won't (legacy behavior, I guess?)
[11:11:49] *** Joins: Optimus (~risto@87.227.227.147)
[11:11:57] <lpapp> I wonder why conan in particular is such a nightmare in this case
[11:12:00] <lpapp> compared to other projects
[11:12:05] <ztrawhcse> han-solo: "but doctor, I *like* spaces"
[11:12:29] <han-solo> SnoopJ: *shrug*
[11:12:40] *** Joins: scoobydoo (~scooby@user/scoobydoo)
[11:12:40] <lpapp> Patient asks: "Doctor, doctor, it hurts when I use virtualenv". Doctor responds:  "... then don't use venvs."
[11:12:50] <lpapp> "but doctor, I *like* venvs"
[11:13:00] *** Joins: nuclearg1 (~nucleargr@user/nuclearg1)
[11:13:00] <han-solo> what ? venv has nothing to do with this...
[11:13:04] <ztrawhcse> but it doesn't hurt to use virtualenv
[11:13:09] <SnoopJ> han-solo, it's a long and tiresome story
[11:13:09] <ztrawhcse> we keep saying that
[11:13:25] <lpapp> you can keep repeating yourself as much as you like, but it does not mean I agree.
[11:13:27] <han-solo> SnoopJ: ah, i should probably scroll back and read
[11:13:35] <ztrawhcse> lpapp: you just happen to be using spaces in the filename of your virtualenv
[11:13:44] <SnoopJ> han-solo, I wouldn't particularly advise it, because it's a long and tiresome story
[11:13:44] *** pah is now known as pa
[11:13:46] <lpapp> no
[11:13:52] <han-solo> SnoopJ: i see ':)
[11:14:17] <SnoopJ> ztrawhcse, did conan outright reject pyproject.toml? I only see "we'll think about it for conan 2.0" on GitHub
[11:14:18] *** Joins: gusto (~Augustus@109.255.100.54)
[11:14:35] <ztrawhcse> > After checking this a little bit more, I'd say to stay with the current setup:
[11:14:37] <ztrawhcse> >>>> In many cases, it needs an extra tool (poetry) in order to work, and that is inconvenient for our non-python-expert users
[11:14:43] *** Quits: Oddity (~Oddity@user/oddity) (Ping timeout: 256 seconds)
[11:14:51] *** Joins: admin123 (harrymoren@gateway/vpn/protonvpn/admin123)
[11:15:14] <ztrawhcse> because some silly person tried to use "switch to poetry" as the implementation description of what adding a pyproject.toml means
[11:15:22] <SnoopJ> so, "no" to the question I asked
[11:15:26] *** Quits: Optimus (~risto@87.227.227.147) (Read error: Connection reset by peer)
[11:15:31] <ztrawhcse> but also:
[11:15:33] <ztrawhcse> > It seems pyproject.toml doesn't support the pip install -e case, that we use a lot
[11:15:37] *** Quits: stasp (~chatzilla@37.30.100.59.nat.umts.dynamic.t-mobile.pl) (Ping timeout: 260 seconds)
[11:15:43] *** Joins: Optimus (~risto@87.227.227.147)
[11:15:44] <lpapp> Can the conan guy fix this by the way, so that people do not have to have an extra step using conan in venv?
[11:15:58] <ztrawhcse> so I actually cannot remember about that, but...
[11:15:59] <SnoopJ> lpapp, yes, and they've already said they won't do it before 2.0
[11:16:07] *** Joins: Enitin (~Enitin@82.180.145.226)
[11:16:10] <ztrawhcse> does adding a pyproject.toml outright break -e ?
[11:16:26] *** Joins: stasp (~chatzilla@37.30.100.59.nat.umts.dynamic.t-mobile.pl)
[11:16:35] <ztrawhcse> ISTR it might force pep517 mode which then breaks -e and cannot be disabled?
[11:16:36] <SnoopJ> ztrawhcse, it works now with pip but didn't used to
[11:16:49] <lpapp> what is the rationale for br.txt not to be able to install things line by line?
[11:17:01] *** Quits: admin124 (harrymoren@gateway/vpn/protonvpn/admin123) (Ping timeout: 246 seconds)
[11:17:04] <lpapp> as they are written
[11:17:15] <SnoopJ> lpapp, because the requirements are considered as a whole, not individually.
[11:17:26] <lpapp> why
[11:17:28] <SnoopJ> it is exactly the same behavior as `pip install pkgA pkgB pkgC`
[11:17:29] <ztrawhcse> because the assumption is that requirements don't require each other to successfully install
[11:17:40] <ztrawhcse> and therefore it is *faster* to do work in parallel
[11:17:47] <lpapp> yeah, I do not agree with that assumption, I do not think.
[11:17:56] <lpapp> parallel is nice, but premature optimisation is not.
[11:17:58] *** Quits: nuclearg1 (~nucleargr@user/nuclearg1) (Ping timeout: 260 seconds)
[11:18:03] <lpapp> if it is for the cost of the actual functionality.
[11:18:04] <SnoopJ> lpapp, because the requirements taken together form a dependency graph. If you treat them as completely separable, you will miss conflicts entirely.
[11:18:04] *** Quits: nickodd (~nickodd@user/nickodd) (Ping timeout: 246 seconds)
[11:18:15] <ztrawhcse> it's not a premature optimization though... conan has under-specified build requires
[11:18:46] <gevreeen> is "yield x" just "return [x]"?
[11:18:47] <lpapp> well, why don't they add wheel to it?
[11:19:10] <ztrawhcse> because the poetry advocates scared them off
[11:19:19] *** Joins: alex11 (~alex11@user/alex11)
[11:19:22] <lpapp> ?
[11:19:23] *** Quits: AlanMD (~AlanMD@86.124.29.88) (Quit: ZZZzzz…)
[11:19:34] <SnoopJ> gevreeen, no, a `yield` statement makes the function it's in into a "generator function" that produces a generator iterator (an iterable object) when called, and each yield corresponds to an iteration.
[11:19:37] <ztrawhcse> which is honestly pretty understandable... poetry scares me too
[11:19:49] <SnoopJ> I can't really blame them from staying away from poetry
[11:20:11] <lpapp> so, a broken software is better/
[11:20:12] <lpapp> ?
[11:20:26] <gevreeen> SnoopJ: somehow it seems my code past the yield statement is exeucted
[11:20:31] <SnoopJ> lpapp, do you have a question we can help you with, or are you looking for an argument?
[11:20:34] <ztrawhcse> however, if someone would like to inform the conan team that they can use pyproject.toml without poetry (and that at least recent versions of pip allow that without breaking pip install -e)...
[11:20:54] <lpapp> well, yes, I would.
[11:21:03] <lpapp> because the current status quo is pretty bad.
[11:21:05] *** Joins: revolve (~u0_a227@cpc100838-bagu15-2-0-cust672.1-3.cable.virginm.net)
[11:21:12] <gevreeen> nvm. guess I'll just use return instead
[11:21:20] <lpapp> it should be fine to just install conan and expect it to work with filepaths that have spaces in them.
[11:21:30] *** Joins: tobybl (~tobybl@227.192.115.87.dyn.plus.net)
[11:21:36] <SnoopJ> gevreeen, think about `yield` as putting the code down for a moment and sending a value along with it. On the next iteration of that generator, the code is picked up exactly where it left off.
[11:21:45] <lpapp> softwares had a few decades to account for this after all...
[11:21:51] *** Quits: emerent (~quassel@p200300cd5743c3afba27ebfffed28a59.dip0.t-ipconnect.de) (Ping timeout: 256 seconds)
[11:21:53] <SnoopJ> lpapp, does that mean "no?"
[11:21:58] *** Quits: NoelFlantier3 (~Hubert@195.201.244.189) (Remote host closed the connection)
[11:22:00] *** Joins: emerent (~quassel@p200300cd5743c3dfba27ebfffed28a59.dip0.t-ipconnect.de)
[11:22:03] *** Quits: slav0nic (slav0nic@python.su) (Ping timeout: 260 seconds)
[11:22:12] *** Joins: callq (~callq@2409:4062:2013:e445:c48c:fc50:229d:16f7)
[11:22:20] *** Joins: NoelFlantier3 (~Hubert@195.201.244.189)
[11:22:23] <gevreeen> SnoopJ: doesn't it sound like a closure of some kind?
[11:22:32] <lpapp> ztrawhcse: where is that poetry discussion happening for conan
[11:22:49] <SnoopJ> gevreeen, I don't really understand the question
[11:22:50] <ztrawhcse> "I'm not looking for an argument, I just want to protest that my spaces are perfectly awesome and should be supported"
[11:23:05] <ztrawhcse> lpapp: on the conan-io repository's issue tracker
[11:23:06] <lpapp> that is trolling
[11:23:18] <SnoopJ> gevreeen, maybe this will shed light on it: https://bpa.st/XQAQ
[11:23:21] <lpapp> never said awesome, just like I do not see "ztrawhcse" characters are awesome
[11:23:22] *** Quits: dodobrain (~dodobrain@user/dodobrain) (Ping timeout: 240 seconds)
[11:23:23] <gevreeen> SnoopJ: meaning the some state is persistent, in both cases, closure and yield
[11:23:24] <lpapp> I said all of them are valid.
[11:23:26] <SnoopJ> lpapp, https://github.com/conan-io/conan/issues/5577
[11:23:28] <gevreeen> let's see
[11:23:29] <lpapp> and therefore, they must be supported.
[11:23:46] <SnoopJ> gevreeen, yes, each call produces a generator that carries its own little bit of state
[11:23:51] <lpapp> this is a perfectly reasonable claim, like it or not.
[11:24:06] <SnoopJ> lpapp, do you have a question we can help you with?
[11:24:07] <lpapp> unlike you, I will not tell my users to fsck off if you use space.
[11:24:11] <ztrawhcse> lpapp: you're entirely correct there. The ztrawhcse characters are very not-awesome
[11:24:38] *** Joins: slav0nic (slav0nic@python.su)
[11:24:49] <gevreeen> SnoopJ: that's some excellent illustration. my thanks.
[11:25:31] <lpapp> ztrawhcse: since you already know what to write to them, why cannot you write a comment then on their github discussion? You seem to be the self-selected domain expert, so you must correspond better than me in this regard.
[11:25:49] <lpapp> I would not like to take the credit as a newbie from a domain expert.
[11:26:37] *** Quits: bdeshi (~bdeshi@bdeshi.space) (Quit: bouncer disconnect)
[11:26:49] <SnoopJ> I do not imagine they would be particularly receptive to combative remarks, no
[11:27:09] <lpapp> by the way, https://github.com/conan-io/conan/issues/5577 seems to be a different discussion.
[11:27:25] <lpapp> I guess it is better to open a new issue for them saying that conan will not work with spaces in the path.
[11:27:37] *** Joins: bdeshi (~bdeshi@bdeshi.space)
[11:27:42] <lpapp> Might get lost amongst 1.9K issues though.
[11:27:44] <SnoopJ> With exactly the same conclusion: they might consider it for 2.0
[11:27:51] *** Quits: Merinorus (~Merinorus@lfbn-mar-1-707-11.w90-118.abo.wanadoo.fr) (Quit: Someone cut my Wi-Fi cable.)
[11:28:20] *** Joins: Merinorus (~Merinorus@lfbn-mar-1-707-11.w90-118.abo.wanadoo.fr)
[11:28:44] <SnoopJ> Clarifying that this wouldn't require poetry and that editable installs are possible with pip now might help, but I'm not sure how that helps you anyway since you said you're pinned to an extant conan version
[11:29:13] *** Joins: Forsaken87 (~quassel@ip-037-201-193-116.um10.pools.vodafone-ip.de)
[11:29:38] <SnoopJ> It might be worth reporting it as a possible failure of the tool, though, just for the sake of documenting what can go wrong
[11:29:40] *** Joins: nuclearg1 (~nucleargr@user/nuclearg1)
[11:29:41] <jinsun__> why was  this happening only with venv though? because path to python didn't have spaces but path to venv had them?
[11:30:08] <SnoopJ> jinsun__, yea
[11:30:19] *** Quits: Helithumper (~Helithump@c-76-25-170-226.hsd1.co.comcast.net) (Quit: ZNC 1.8.2 - https://znc.in)
[11:30:31] *** Joins: zeenk (~zeenk@2a02:2f04:a313:d600:8d26:ec9f:3ff6:fc94)
[11:30:44] <lpapp> ? Python is also in the venv, so with spaces.
[11:30:49] *** Quits: gusto (~Augustus@109.255.100.54) (Quit: Textual IRC Client: www.textualapp.com)
[11:31:00] <jinsun__> okay, so it was really dumb to say it is an issue with venvs
[11:31:08] *** Joins: Helithumper (~Helithump@c-76-25-170-226.hsd1.co.comcast.net)
[11:31:22] <lpapp> in my view and setup, it is dumb to say it is not.
[11:31:44] <lpapp> since my solution is not to use venv, but something like pyenv.
[11:32:03] *** Quits: Helithumper (~Helithump@c-76-25-170-226.hsd1.co.comcast.net) (Client Quit)
[11:32:18] <lpapp> I do not think I am going to be able to sell that hey "you have to use one extra step in the build process just to make spaces work". It should really work by default like it does with other setups than venv.
[11:32:22] *** Joins: vantage (~vantage@ip-193-121-152-141.dsl.scarlet.be)
[11:32:23] <jinsun__> well if you install pyenv in a path with spaces you'll have the same issue
[11:32:24] *** Joins: Helithumper (~Helithump@c-76-25-170-226.hsd1.co.comcast.net)
[11:32:33] *** Quits: Enitin (~Enitin@82.180.145.226) (Ping timeout: 260 seconds)
[11:32:33] <lpapp> why would I?
[11:32:37] *** Quits: bfortified (~bfortifie@user/bfortified) (Ping timeout: 240 seconds)
[11:32:47] <SnoopJ> lpapp, "should" doesn't exactly change the software that is currently in front of you, but I'm sure it feels nice
[11:32:59] <SnoopJ> shebangs with spaces in them "should" work, but they don't
[11:33:09] <jinsun__> you are deciding to not use path with spaces with pyenv but use paths with spaces with venvs
[11:33:21] <jinsun__> that is why it is dumb to blame this on venvs
[11:33:27] <lpapp> not correct
[11:33:31] <lpapp> system paths do not contain space in them
[11:33:34] <lpapp> custom paths of course can
[11:33:39] <lpapp> and venv goes into a custom path
[11:33:49] *** Joins: bfortified (~bfortifie@user/bfortified)
[11:33:50] <jinsun__> there is no rule like that
[11:33:56] <lpapp> unlike a standard python or pyenv installation
[11:33:56] <jinsun__> use pyenv-virtualenv
[11:33:57] *** Quits: esther (~esther@24-155-112-236.dyn.grandenetworks.net) (Ping timeout: 240 seconds)
[11:34:03] *** Joins: winterflaw (~winterfla@gateway/tor-sasl/winterflaw)
[11:34:23] <lpapp> but if you disregard pyenv, even a standard python installation is better in this regard than venv.
[11:34:26] <jinsun__> it will make venvs inside the .pyenv folder without any spaces in the path
[11:34:54] <SnoopJ> lpapp, as I said before, if you install Python into a path with a space in it, that Python will have exactly the same problem if you install conan into it without wheel
[11:34:57] *** Joins: orjsjskjdzk1 (~orjsjskjd@103.244.175.42)
[11:34:57] <lpapp> I know, that is why I am saying avoid venv like plague if softwares do not care to work with spaces.
[11:35:04] *** Quits: nuclearg1 (~nucleargr@user/nuclearg1) (Ping timeout: 272 seconds)
[11:35:05] <lpapp> and use something standard that for sure does not have space in it.
[11:35:16] <lpapp> but custom paths should be allowed to have spaces.
[11:35:17] <jinsun__> putting venvs inside the project is a convention you don't have to follow it
[11:35:25] <lpapp> since it is a valid character for files and directories after all.
[11:35:34] <SnoopJ> lpapp, not in a shebang
[11:35:38] <SnoopJ> not without the exec trick
[11:35:41] <jinsun__> I keep venvs in a central place where there are no spaces in the path
[11:35:43] <SnoopJ> and setuptools doesn't use the exec trick
[11:35:52] <lpapp> that is not our process here though.
[11:36:09] *** Quits: xcombelle (~xavie@176-139-252-198.abo.bbox.fr) (Read error: Connection reset by peer)
[11:36:14] <SnoopJ> that does seem to be the uniform answer at the end of every proposed solution to the problem you're facing
[11:36:23] <parv> *ugh* What a cope out of using spaces only in "custom path"!
[11:36:31] *** Joins: xcombelle (~xavie@176-139-252-198.abo.bbox.fr)
[11:36:35] <jinsun__> okay as I guessed before you don't really want to solve the problem
[11:36:47] <jinsun__> maybe you want #rant instead of #python
[11:36:49] <hogarius> lpapp: fix your process?
[11:36:52] <lpapp> your guess is wrong.
[11:36:57] <lpapp> and it is already solved.
[11:37:04] <ztrawhcse> SnoopJ: not in a shebang at all :D the exec trick is all about not having invalid chars in the shebang
[11:37:17] *** Joins: palasso (~palasso@user/palasso)
[11:37:25] <SnoopJ> ztrawhcse, which character is invalid in the one emitted by setuptools?
[11:37:32] *** Quits: orjsjskjdzk1 (~orjsjskjd@103.244.175.42) (Remote host closed the connection)
[11:37:33] <ztrawhcse> space
[11:37:35] <lpapp> jinsun__: to me, you are ranting, but let us agree to disagree.
[11:37:41] <SnoopJ> ztrawhcse, spaces are invalid?
[11:37:43] <lpapp> It is ok not to use venv
[11:37:47] <lpapp> this is not ranting.
[11:37:52] *** Joins: orjsjskjdzk1 (~orjsjskjd@103.244.175.42)
[11:38:03] <SnoopJ> it's unpleasant, whatever you want to call it
[11:38:11] <SnoopJ> perhaps we could turn the discussion to something we could help you with
[11:38:17] <ztrawhcse> they get parsed as something other than what they are supposed to be, that's for sure
[11:38:30] <lpapp> seems some people are religously defensive about venv :)
[11:38:31] *** Quits: ericleer (~ericleer@dhcp-077-249-173-130.chello.nl) (Ping timeout: 256 seconds)
[11:38:36] *** Joins: AlanMD (~AlanMD@193.105.140.131)
[11:38:45] <SnoopJ> lpapp, you are free not to use it
[11:39:03] <ztrawhcse> lpapp: no one is religiously defensive about venv, but a lot of people are pointing out that it is not venv that has a problem. Spaces+venv has a problem
[11:39:08] <ztrawhcse> so does spaces+pyenv
[11:39:20] <ztrawhcse> so does spaces + system-python
[11:39:27] <SnoopJ> it won't in any way make console scripts created by setuptools less unusable for Python sites that live somewhere with a space in the path, but it does cost $0 not to use it
[11:39:28] <ztrawhcse> so does spaces + perl
[11:39:34] <parv> I thought 3.10 had better error messages; just learned -- https://realpython.com/python311-error-messages/ -- that 3.11 improves on it. Sweet!
[11:39:35] <ztrawhcse> so does spaces + ruby
[11:39:47] <SnoopJ> parv, yea, the improvements in warnings/errors is fantastic
[11:40:17] <lpapp> ztrawhcse: except that system python does not have space n it
[11:40:38] *** Quits: ghost43 (~ghost43@gateway/tor-sasl/ghost43) (Remote host closed the connection)
[11:41:07] <SnoopJ> usually
[11:41:19] <SnoopJ> it's possible to install Python in a place that has a space in the path
[11:41:24] <SnoopJ> if you do this, it will break in exactly this way
[11:41:24] *** Joins: a210222 (~alex@218-215-213-197.sta.wbroadband.net.au)
[11:41:32] <SnoopJ> even if you never even think the word "venv"
[11:42:07] *** Joins: ghost43 (~ghost43@gateway/tor-sasl/ghost43)
[11:42:22] *** Joins: Hunterkll (~hunterkll@2001:470:8b06:100:2958:1194:aedf:1fa3)
[11:43:13] *** Joins: ihristov (~ihristov@87-243-114-151.ip.btc-net.bg)
[11:43:17] <ztrawhcse> you blindly assume that all systems install system software to /usr/bin
[11:43:19] *** Joins: data68 (~data@2a02:908:a67:2ce0:4197:8ffe:f671:b843)
[11:43:20] <ztrawhcse> this is incorrect
[11:43:22] *** Quits: orjsjskjdzk1 (~orjsjskjd@103.244.175.42) (Remote host closed the connection)
[11:43:43] *** Joins: orjsjskjdzk1 (~orjsjskjd@103.244.175.42)
[11:43:51] <ztrawhcse> for example, Gobolinux installs it to /Programs/Python/3.10.0/Bin
[11:44:19] *** Quits: zumba_addict (~zumba_add@12.202.91.140) (Quit: Client closed)
[11:45:00] *** Quits: Yugi (~hunterkll@remote.kisaracorporation.com) (Ping timeout: 240 seconds)
[11:45:04] <lpapp> ztrawhcse: I do not assume /usr/bin, no, that is wrong assumption from you.
[11:45:17] <lpapp> and in any case, /Programs/Python/3.10.0/Bin does not have space in it either.
[11:45:21] <ztrawhcse> > except that system python does not have space n it
[11:45:22] <lpapp> so, still more than ok.
[11:45:27] *** Joins: merijn (~merijn@c-001-001-001.client.esciencecenter.eduvpn.nl)
[11:45:34] *** Joins: ayustae (Thunderbir@gateway/vpn/protonvpn/ayustae)
[11:45:37] <ztrawhcse> don't assume that all niche systems avoid spaces
[11:46:00] <lpapp> the oses we support certainly do not have it, but you are free to prove me wrong
[11:46:12] <lpapp> Windows 10, Mac Big Sur, and CentOS 7.x
[11:46:29] <lpapp> so, yes, it really is a venv issue coming from darn conan in my case.
[11:46:29] <SnoopJ> "C:\Program Files\" ?
[11:46:57] <lpapp> I am still surprised that everything else managed to work with it, like cmake, etc, but conan did not.
[11:47:06] <lpapp> like cmake did not need a wheel installation, etc.
[11:47:13] <ztrawhcse> no, it's an interaction between your supported OSes, python (not venv), and your project structure
[11:47:13] <deniska> I regularly create venvs in '/home/denis/Рабочий стол'
[11:47:26] <ztrawhcse> cmake wheel insta--- what
[11:47:34] <ztrawhcse> cmake is not written in python
[11:47:39] <ztrawhcse> it doesn't install to your venv
[11:47:41] <SnoopJ> ztrawhcse, it does have a PyPI package though (which is neat!)
[11:47:56] <lpapp> not correct
[11:48:01] <ztrawhcse> it installs via rpm/yum/whatever to /usr/bin
[11:48:02] <lpapp> there is a cmake python module.
[11:48:13] <ztrawhcse> sigh
[11:48:21] <lpapp> it really does
[11:48:29] <lpapp> install to my venv
[11:48:32] <ztrawhcse> you can install *anything* from pypi, just like you can install bash scripts using `npm install`
[11:48:34] <lpapp> ./devenv/bin/cmake
[11:48:54] <ztrawhcse> that doesn't make cmake into python software, and it doesn't mean that cmake is "managing to work with it"
[11:49:27] <lpapp> it does not have to be python to cope with spaces....
[11:49:37] *** Joins: dob1 (~dob1@user/dob1)
[11:49:52] <lpapp> cli tools written in any language should obey the OS choice of valid path characters, no matter what.
[11:49:54] <SnoopJ> I think I've had enough of this unpleasantness. night!
[11:50:17] *** Parts: SnoopJ (~snoopj@user/snoopj) ()
[11:50:19] *** Joins: HaMsTeRs (~Thunderbi@210.3.201.132)
[11:50:36] *** Joins: maxzor (~maxzor@laubervilliers-657-1-70-103.w90-63.abo.wanadoo.fr)
[11:50:46] *** Joins: paul424 (~tom@ip-5-172-234-109.multi.internet.cyfrowypolsat.pl)
[11:50:49] <Repiphany> Hot take: spaces are gross and shouldn't be valid path characters
[11:50:56] <ztrawhcse> not a hot take
[11:50:58] *** Quits: ttree (~ttree0@c-24-17-16-242.hsd1.wa.comcast.net) (Ping timeout: 246 seconds)
[11:51:02] <deniska> Spaces are nice, they are easy to type and nice to read
[11:51:06] <ztrawhcse> it's pure logic, and widely held
[11:51:17] <deniska> literally the easiest key to hit on the keyboard
[11:51:23] <ztrawhcse> spaces are nice where they belong, in prose
[11:51:27] <ztrawhcse> not filepaths
[11:51:28] <gevreeen> usually it's "C:\\Program Files\\" on windows
[11:51:33] <gevreeen> the double-backslash
[11:51:48] <gevreeen> or just use single forward slash and hope the api accomodates
[11:51:51] <deniska> Programmers complain about the way humans work, how typical :)
[11:51:52] <ztrawhcse> windows allows C:/Program Files/ too
[11:52:02] <ztrawhcse> "sometimes"
[11:52:15] <gevreeen> not every windows function takes /
[11:52:24] <jinsun__> gevreeen: that is just the repr, it is actually one backslash if you print it
[11:53:07] <deniska> If software breaks with a file path which OS is happy to create, the software is badly written
[11:53:14] <deniska> it has a bug
[11:53:30] <ztrawhcse> boy oh boy
[11:53:38] <ztrawhcse> how about those unix bags of bytes then
[11:54:07] *** Quits: Lando-SpacePimp (~Lando-Spa@user/lando-spacepimp) (Ping timeout: 246 seconds)
[11:54:08] <ztrawhcse> unix paths may contain anything other than a NULL byte, and "/" is reserved for directory separators
[11:54:09] *** Quits: kickingvegas (~cchoi@c-73-170-198-193.hsd1.ca.comcast.net) (Quit: leaving)
[11:54:33] <ztrawhcse> any bytes at all -- so welcome to unicode hell
[11:54:39] <gevreeen> DQUOTE's usually implies backslash escapes
[11:54:39] <lpapp> deniska: fully agree, but they will not acknowledge this :)
[11:54:42] <deniska> python file path handling erred to the side of programmer convenience over technical correctness
[11:54:53] <lpapp> it really does not even matter whether space is good or bad, so long as it is a valid character, it must be supported.
[11:54:56] <Repiphany> Not even necessarily unicode, lel locales
[11:55:19] <ztrawhcse> well really you just want it to become unicode
[11:55:24] <ztrawhcse> probably
[11:55:25] <deniska> in something more… rigorous, like rust, you have special string-like types specifically for file paths on various platforms
[11:55:36] <ztrawhcse> but there's no restriction that says it has to *be* any locale at all
[11:55:40] <ztrawhcse> random bytes are valid
[11:55:55] <ztrawhcse> they don't have to decode to anything
[11:55:58] *** Quits: dob1 (~dob1@user/dob1) (Ping timeout: 272 seconds)
[11:56:01] *** Quits: Betal (~Betal@user/betal) (Quit: WeeChat 3.5)
[11:56:18] *** Joins: iomari891 (~iomari891@105.112.138.38)
[11:56:26] <deniska> bytes which are not \0, and / has a special meaning, sure
[11:56:41] <jinsun__> I agree it is bug to not handle spaces too, but it is a bug in the kernel or setuptools, it is dumb to say it is a problem with venvs
[11:56:43] <lpapp> and by the way, I do not even use spaces myself, but know from 15+ years of experience that someone will since it is valid.
[11:56:50] <ztrawhcse> deniska: so... rust has a special string-like type that doesn't represent all valid unix paths? Does rust just not support those "valid" OS paths then.
[11:57:40] <deniska> ztrawhcse: I'm not too familiar with rust, but I believe the type is platform depending, or whatever specific subtype is returned by path handling functions is platform dependent
[11:57:41] *** Joins: Seto_Kaiba (~hunterkll@2001:470:8b06:100:2958:1194:aedf:1fa3)
[11:57:57] <ztrawhcse> so why do you mention rust at all?
[11:58:04] <ztrawhcse> if you do not know whether rust is better or worse
[11:58:06] *** Quits: Hunterkll (~hunterkll@2001:470:8b06:100:2958:1194:aedf:1fa3) (Killed (NickServ (GHOST command used by Seto_Kaiba)))
[11:58:08] *** Seto_Kaiba is now known as Hunterkll
[11:58:12] <ztrawhcse> also why is python "bad" anyway?
[11:58:20] <ztrawhcse> it's a setuptools bug, not a python bug
[11:58:44] <deniska> it's not bad, I said it erred on convenience over correctness
[11:58:46] <ztrawhcse> moreover, it's a kernel design flaw that necessitates a setuptools workaround which doesn't exist
[11:58:59] <ztrawhcse> what's the convenience you speak of?
[11:59:15] <deniska> paths on unix-like systems being of type `str` and not `bytes`
[11:59:20] <ztrawhcse> what?
[11:59:31] <ztrawhcse> I don't understand the meaning of that sentence
[11:59:56] <deniska> in python path operations work with `str`, while in reality it'd be more correctly represented as `bytes`
[11:59:56] *** Joins: eson123 (~whatever@user/eson123)
[12:00:24] *** Quits: stasp (~chatzilla@37.30.100.59.nat.umts.dynamic.t-mobile.pl) (Ping timeout: 272 seconds)
[12:00:27] <ztrawhcse> this is *completely* incorrect, did you try it?
[12:00:28] *** Joins: roxfan (~roxfan@2a02:a03f:a2be:4f00:913a:502b:5b7b:1e2b)
[12:00:39] <eson123> i have been trying to deploy flask on nginx recently and even though no error were found during the installation, when i try to browse to my page, it is still the nginx default page but not the flask program that i tested, what should i check first if this happen ?
[12:00:39] *** Joins: jpn (~jpn@user/jpn)
[12:00:40] *** Joins: otisolsen70 (~otisolsen@80.80.4.2)
[12:00:45] <ztrawhcse> path operations explicitly accept bytestrings
[12:00:48] <eson123> i use flask + uwsgi + flask
[12:00:51] *** Quits: strNophix9 (~strNophix@86-83-36-18.fixed.kpn.net) (Remote host closed the connection)
[12:01:12] <ztrawhcse> try it. `touch foo && python -c "open(b'foo')"`
[12:01:22] <deniska> ztrawhcse: type(os.getcwd()) -> <class 'str'>
[12:01:23] <eson123> oh no, flask + gunicorn + nginx
[12:01:24] <eson123> sorry
[12:01:25] *** Joins: stasp (~chatzilla@37.30.100.59.nat.umts.dynamic.t-mobile.pl)
[12:01:30] *** Quits: eson123 (~whatever@user/eson123) (Remote host closed the connection)
[12:01:48] *** Quits: otisolsen70 (~otisolsen@80.80.4.2) (Remote host closed the connection)
[12:01:51] *** Joins: eson123 (~whatever@118.69.128.37)
[12:01:51] *** Quits: eson123 (~whatever@118.69.128.37) (Changing host)
[12:01:51] *** Joins: eson123 (~whatever@user/eson123)
[12:02:00] <ztrawhcse> deniska: yes, quite obviously both are supported
[12:02:08] *** Joins: esro (~esro@nat1.krakowskiinternet.pl)
[12:02:16] <deniska> ztrawhcse: but return values of functions like these are `str`
[12:02:24] <ztrawhcse> okay? why is this bad?
[12:02:32] <ztrawhcse> did it produce invalid results?
[12:02:59] <deniska> It got bytes from the system, and then decoded it using… some encoding, it assumed, somehow
[12:03:03] *** Joins: otisolsen70 (~otisolsen@80.80.4.2)
[12:03:26] <ztrawhcse> like perhaps the locale encoding?
[12:04:05] <ztrawhcse> python has determined that that bag of bytes is representable as a specific unicode string
[12:04:20] <deniska> or just hardcoded utf-8 with errors='surrogateescape'
[12:04:24] <ztrawhcse> using the current locale conversion
[12:04:39] <deniska> not sure, I'll need to look it up, there were changes around that in recent-ish python
[12:04:44] <ztrawhcse> are you stating this as fact or asking?
[12:05:03] *** Quits: mug3n (~mugen@gateway/tor-sasl/mugen) (Remote host closed the connection)
[12:05:26] *** Joins: mug3n (~mugen@gateway/tor-sasl/mugen)
[12:05:34] <ztrawhcse> anyway I think we've quite drifted away from "the OS kernel has a bug which manifests in ALL programming languages that use scripts with shebangs"
[12:05:40] *** Quits: jpn (~jpn@user/jpn) (Ping timeout: 246 seconds)
[12:06:11] *** Joins: herjazz (~herjazz@p10295192-ipngn22201marunouchi.tokyo.ocn.ne.jp)
[12:06:23] <ztrawhcse> and that's not badly written software from python's side
[12:06:49] <deniska> https://docs.python.org/3/library/sys.html#sys.getfilesystemencoding
[12:07:09] *** Joins: Spiral-_- (~Vision@023-084-128-214.res.spectrum.com)
[12:07:53] *** Quits: palasso (~palasso@user/palasso) (Remote host closed the connection)
[12:08:10] *** Joins: jmd (~user@de.cellform.com)
[12:08:40] <deniska> yeah, it's the whole mess of what it picks, but nowadays it seems to be "err towards the side of utf-8 unless something strongly hints otherwise or windows"
[12:08:45] *** Joins: trashbird6 (~trashbird@user/trashbird)
[12:08:59] *** Quits: pkapp (~pkapp@c-75-74-40-214.hsd1.fl.comcast.net) (Quit: ZNC 1.7.5+deb4 - https://znc.in)
[12:09:19] *** Joins: pkapp (~pkapp@2601:58c:c500:6900:86be:e48d:dd2f:66ff)
[12:09:31] *** Quits: esaym153 (~esaym153@net153.net) (Ping timeout: 245 seconds)
[12:09:33] *** Quits: vegii (~quassel@2001:470:1f18:3aa:30f::5439) (Read error: Connection reset by peer)
[12:09:45] *** Joins: esaym153 (~esaym153@net153.net)
[12:09:51] <gevreeen> https://peps.python.org/pep-3333 states "This may be an empty string, if the application corresponds to the “root” of the server." and "This may be an empty string, if the request URL targets the application root and does not have a trailing slash." for SCRIPT_NAME and PATH_INFO under the section "environ Variables". what does mean by "application root" or "root of the server"?
[12:09:56] *** Quits: trashbird (~trashbird@user/trashbird) (Read error: Connection reset by peer)
[12:09:56] *** trashbird6 is now known as trashbird
[12:10:05] <deniska> Anyway, practicality beats purity, and utf-8 on unix-likes is a practical safe default, and str is a practical type. But then spaces are also practical in file paths if you are a human and not a programmer :)
[12:10:21] *** Quits: Vision-_- (~Vision@023-084-128-214.res.spectrum.com) (Ping timeout: 245 seconds)
[12:10:21] *** Quits: defn (~n0b0dy@user/defn) (Ping timeout: 245 seconds)
[12:10:28] *** Joins: MajorBiscuit (~MajorBisc@c-001-024-034.client.tudelft.eduvpn.nl)
[12:10:43] *** Joins: vegii (~quassel@2001:470:1f18:3aa:30f::5439)
[12:10:45] <gevreeen> iirc autotools have problems with spaces in paths
[12:11:04] <deniska> old unixy stuff written in worse programming languages often does
[12:11:12] *** Joins: defn (~n0b0dy@user/defn)
[12:11:14] <jinsun__> hopefully PEP 686 gets accepted, then windows gets utf8 default too
[12:11:33] <gevreeen> while msft forced everyone to adapt to spaces in pathname by giving the space in "Program Files"
[12:11:47] <deniska> and don't forget 'Document and Settings'
[12:11:56] *** Joins: dob1 (~dob1@user/dob1)
[12:12:03] <deniska> not only spaces, but also long filenames
[12:12:18] <gevreeen> unc and prefices
[12:12:18] <deniska> we don't require file names to be in 8.3 format anymore
[12:13:18] *** Joins: palasso (~palasso@user/palasso)
[12:13:44] *** Joins: AquaL1te (~AquaL1te@user/aqual1te)
[12:14:43] <han-solo> always do "pip install -U pip wheel" as a first step # solves the problem ?
[12:14:54] <han-solo> one little step for mankind
[12:15:28] <jinsun__> solves that specific problem by bypassing setuptools
[12:15:34] *** Joins: rendar (~rendar@user/rendar)
[12:15:58] <jinsun__> but it is possible to run into the same problem again by doing editable install too I think
[12:16:21] <jinsun__> because those rely on setptools again (if you use setuptools as the build backend)
[12:16:41] <han-solo> mm
[12:16:42] *** Joins: eroux (~eroux@102-65-72-61.ftth.web.africa)
[12:17:12] *** Joins: mncheck (~mncheck@193.224.205.254)
[12:17:13] <jinsun__> so ideally setuptools should fix it just like distlib does
[12:17:19] * han-solo nods
[12:18:03] *** Quits: jmdaemon (~jmdaemon@user/jmdaemon) (Ping timeout: 260 seconds)
[12:18:08] *** Quits: kratos (~chirukoda@43.225.21.196) (Quit: Client closed)
[12:18:15] *** Joins: gurkenglas (~gurkengla@dslb-178-012-018-212.178.012.pools.vodafone-ip.de)
[12:18:37] *** Joins: soju-test-user (~soju-test@2a01cb040760a5cb0000000000000318.ipv6.abo.wanadoo.fr)
[12:20:40] *** Quits: stasp (~chatzilla@37.30.100.59.nat.umts.dynamic.t-mobile.pl) (Ping timeout: 272 seconds)
[12:21:26] *** Joins: stasp (~chatzilla@37.30.100.59.nat.umts.dynamic.t-mobile.pl)
[12:23:15] *** Quits: nemexis (~nemexis@193-62-201-31.ftth.glasoperator.nl) (Remote host closed the connection)
[12:23:56] *** Joins: Mulugruntz (~Mulugrunt@217.117.229.220)
[12:24:08] *** Joins: Payam96 (~Payam@138.106.57.131)
[12:24:10] <Mulugruntz> o/
[12:24:31] *** Joins: Ergo^ (~ergo@91.238.59.144)
[12:24:34] *** Joins: hans (uid529825@id-529825.helmsley.irccloud.com)
[12:24:48] <hans> fsck it, i'll learn Python then
[12:26:19] *** Joins: Oddity (~Oddity@user/oddity)
[12:27:13] *** Quits: quhar (~quhar@192.162.148.48) (Quit: quhar)
[12:29:52] *** Joins: nemexis (~nemexis@193-62-201-31.ftth.glasoperator.nl)
[12:31:05] <hans> https://i.imgur.com/szZHwt9.png
[12:31:30] *** Quits: callq (~callq@2409:4062:2013:e445:c48c:fc50:229d:16f7) (Ping timeout: 260 seconds)
[12:31:49] *** Joins: vladoski (~vladoski@2001:b07:add:d406:ce46:ce1d:6082:2c6f)
[12:31:59] *** Joins: rememberYou (~someone@user/rememberyou)
[12:32:09] *** Joins: freeman_h (~freeman_h@37.120.159.215)
[12:32:09] <dav1d> what a dogshit
[12:32:45] *** Joins: grooverman_ (~grooverma@179.97.175.157)
[12:32:57] <hans> elaborate?
[12:33:43] *** Joins: kosh (~kosh@user/kosh)
[12:34:04] <han-solo> one told me i'm not returning what i'm supposed to by itself, the other didn't. So depends on what exactly you consider bad
[12:34:08] *** Quits: paul424 (~tom@ip-5-172-234-109.multi.internet.cyfrowypolsat.pl) (Remote host closed the connection)
[12:34:15] <dav1d> clickbait title comparing apples to something else
[12:34:24] <han-solo> i don't know php, i just read the tracback
[12:34:39] *** Quits: grooverman (~grooverma@179.97.175.157) (Ping timeout: 260 seconds)
[12:34:47] <eson123> so... no one knows how to troubleshoot when nginx still shows the original page :(
[12:34:47] <eson123> ?
[12:34:52] <hans> well python didn't catch a very obvious type error there, php did :p
[12:35:04] <Mulugruntz> type hints in python are just that: type **hints** ;-)
[12:35:20] *** Quits: esro (~esro@nat1.krakowskiinternet.pl) (Quit: Leaving)
[12:35:27] <dav1d> it's not a type error, it's called type hints for a reason
[12:35:42] <Mulugruntz> that's not enforced in Python. The idea with type hints is to have external tools that can check it for you "if you want".
[12:35:49] <dav1d> if you want errors use mypy or another tool to statically check these
[12:36:03] <Mulugruntz> But the core implementation will completely ignore them
[12:36:05] <hans> eson123: sup
[12:36:10] <dav1d> also with ducktyping this would get very very weird
[12:36:10] <eson123> hans: hey
[12:36:28] <hans> eson123: i joined too late to see your issue, what are you struggling with?
[12:36:28] <Mulugruntz> if you run mypy, it'll give you an error on this python code :-)
[12:36:28] *** Quits: radu242 (~radu242@pool-96-250-220-83.nycmny.fios.verizon.net) (Ping timeout: 246 seconds)
[12:36:32] *** Quits: ghost43 (~ghost43@gateway/tor-sasl/ghost43) (Remote host closed the connection)
[12:36:42] *** Joins: ghost43_ (~ghost43@gateway/tor-sasl/ghost43)
[12:36:54] <mgedmin> eson123: #python doesn't seem to be the right channel for nginx troubleshooting
[12:37:11] <dav1d> eson123, you need to include more than a generic question/error, e.g. your nginx config
[12:37:11] <eson123> hans: i was trying to deploy my flask app through nginx and gunicorn, my flask is simple, it's just a testcase which gives "Hello world" at "/", the point is nginx just keep showing that "Welcome to nginx" page but not my "Hello world"
[12:37:23] *** Quits: ghost43_ (~ghost43@gateway/tor-sasl/ghost43) (Remote host closed the connection)
[12:37:35] <eson123> mgedmin: well but i think flask stuffs related to python ?
[12:37:46] <hans> google: >Flask is a micro web framework written in Python
[12:37:48] *** dcaro_away is now known as dcaro
[12:38:04] <Mulugruntz> oh and btw, php didn't catch that the code block wasn't closed. I think it was an issue in earlier versions of PHP. Not being mandatory anymore doesn't make it suddenly "bad" because it doesn't catch these "errors" anymore. They're just ignored.
[12:38:30] <mgedmin> eson123: what OS/distro?
[12:38:37] <freeman_h> Hi guys. I am having issue with flask including html tags in the data it posting to python. In my html form I write this https://i.ibb.co/DtnB2vn/test.png, however in the database what is actually getting saved is https://i.ibb.co/Vx2BwNC/what-is-actually-looks-like.png this is what my code looks like https://bpa.st/6QDQ line 10. Please how can I prevent flask from include html tags? in the text you can see I have the text in new lines, I want to
[12:38:38] <freeman_h> mention this. thank you
[12:38:42] <hans> eson123: is flask a fastcgi thing? my best guess is that your fastcgi-to-flask is messed up, anyway sounds more like a #nginx issue
[12:38:52] <mgedmin> eson123: it sounds like you have multiple virtual hosts configured in your nginx, and the wrong one is being picked up
[12:38:57] *** Andrew is now known as fadsfdsafdsa
[12:39:14] <eson123> wait i am posting my configs on termbin
[12:39:16] <eson123> also i am on Ubuntu
[12:39:22] <mgedmin> e.g. debian (and ubuntu) has this /etc/nginx/sites-available vs /etc/nginx/sites-enabled symlink tree thingy
[12:39:34] *** Quits: luna-is-here (~quassel@2a02:908:f761:2a3c::a) (Quit: luna-is-here)
[12:39:41] *** fadsfdsafdsa is now known as Andrew
[12:40:00] <freeman_h> * I want to maintain this. thank you
[12:40:11] <hans> (and you're free to ignore the symlinks by just creating your files in the sites-enabled folder. even tho technically you're supposed to create it in sites-available and symlink it to sites-enabled)
[12:40:15] *** Quits: stasp (~chatzilla@37.30.100.59.nat.umts.dynamic.t-mobile.pl) (Ping timeout: 260 seconds)
[12:40:17] *** Quits: gitesh (uid423739@id-423739.ilkley.irccloud.com) (Quit: Connection closed for inactivity)
[12:40:23] *** Joins: peteyboy1 (~peteyboy1@199.157.133.37.dynamic.jazztel.es)
[12:40:43] *** Joins: lbalhar (~lbalhar@spsei.osanet.cz)
[12:41:26] *** Joins: stasp (~chatzilla@37.30.100.59.nat.umts.dynamic.t-mobile.pl)
[12:41:28] <eson123> ok so here is my /etc/nginx/sites-available/my-server which i symlinked to /etc/nginx/sites-enabled/ http://termbin.com/oe2u and here is my gunicorn systemd service file https://termbin.com/tzyv
[12:41:45] <eson123> also there used to be 2 symbols in the /etc/nginx/sites-enabled which one of them was default, i deleted it
[12:41:52] <eson123> tried to restart the service and yet still the same page
[12:41:57] <mgedmin> I mostly do apache on ubuntu, so I'm probably not the right one to help with nginx problems -- and I still think this is not a topic for #python
[12:41:59] <eson123> 2 symlinks*
[12:42:05] *** Joins: ghost43 (~ghost43@gateway/tor-sasl/ghost43)
[12:42:12] <eson123> well ok i can try... err, #programming ? :/
[12:42:24] <eson123> oh, we have #nginx here
[12:43:03] *** Quits: dre (~dre@2001:8003:c932:c301:ddea:d36a:75bb:2e08) (Ping timeout: 260 seconds)
[12:43:16] *** Quits: parv (~quass@user/parv) (Quit: parv)
[12:44:34] *** Quits: chenqisu1 (~chenqisu1@183.217.200.168) (Quit: Leaving)
[12:45:07] *** Joins: fandre1986 (~fandre198@78.10.85.96)
[12:45:30] *** Joins: luna-is-here (~quassel@2a02:908:f761:2a3c::a)
[12:47:42] <hans> eson123: do you actually get the page you expect with > curl --unix-socket /tmp/ipoc.sock http://127.0.0.1/
[12:48:13] *** Joins: otisolsen70_ (~otisolsen@80.80.4.2)
[12:48:21] *** Joins: fillx (~fillx@user/fillx)
[12:48:49] <eson123> yep i do
[12:48:57] *** Quits: newdimension (~newdimens@user/newdimension) (Quit: Ping timeout (120 seconds))
[12:49:08] <eson123> a beautiful "Hello world" instead of the annoying nginx page
[12:49:14] <hans> well next step would be to verify that `nginx -t` returns sucess, but take it to #nginx
[12:49:42] <eson123> welp it failed but ok then
[12:49:42] *** Joins: Guest48 (~textual@2001:ee0:4081:6914:99b7:825c:2784:1235)
[12:49:49] *** Joins: newdimension (~newdimens@user/newdimension)
[12:50:25] *** Joins: hamburger (~hamburger@2001:448a:1082:fe6f:6197:f3df:285e:35b9)
[12:50:28] *** Quits: fillx (~fillx@user/fillx) (Client Quit)
[12:51:43] *** Quits: otisolsen70 (~otisolsen@80.80.4.2) (Ping timeout: 272 seconds)
[12:52:58] *** Quits: revolve (~u0_a227@cpc100838-bagu15-2-0-cust672.1-3.cable.virginm.net) (Ping timeout: 272 seconds)
[12:53:08] *** Quits: Guest48 (~textual@2001:ee0:4081:6914:99b7:825c:2784:1235) (Client Quit)
[12:53:29] *** Quits: vicfred (~vicfred@user/vicfred) (Quit: Leaving)
[12:53:49] *** Joins: Guest48 (~textual@2001:ee0:4081:6914:99b7:825c:2784:1235)
[12:53:53] *** Quits: Guest48 (~textual@2001:ee0:4081:6914:99b7:825c:2784:1235) (Client Quit)
[12:54:13] *** Joins: revolve (~u0_a227@82-132-237-111.dab.02.net)
[12:54:50] *** Joins: cosimone (~user@2001:b07:ae5:db26:c24a:d20:4d91:1e20)
[12:55:50] *** Quits: otisolsen70_ (~otisolsen@80.80.4.2) (Remote host closed the connection)
[12:56:40] *** Quits: Tempesta (~Tempesta@user/tempesta) (Read error: Connection reset by peer)
[12:56:54] *** Quits: HaMsTeRs (~Thunderbi@210.3.201.132) (Quit: HaMsTeRs)
[12:58:48] *** Joins: Naan (~Naan@user/naan)
[12:58:48] *** Quits: mjacob (~mjacob@adrastea.uberspace.de) (Read error: Connection reset by peer)
[12:59:00] *** Joins: mjacob (~mjacob@adrastea.uberspace.de)
[13:00:26] *** Quits: stasp (~chatzilla@37.30.100.59.nat.umts.dynamic.t-mobile.pl) (Ping timeout: 260 seconds)
[13:01:05] *** Joins: Enitin (~Enitin@82.180.145.224)
[13:01:26] *** Joins: stasp (~chatzilla@37.30.100.59.nat.umts.dynamic.t-mobile.pl)
[13:03:36] *** Quits: ackyshake (~ackyshake@user/ackyshake) (Read error: Connection reset by peer)
[13:04:51] *** Joins: ackyshake (~ackyshake@user/ackyshake)
[13:04:56] *** Joins: Xardas (~Xardas@149.233.51.127)
[13:05:32] *** Joins: teut (~teut@103.144.92.226)
[13:07:10] *** Quits: skapata (~Skapata@user/skapata) (Read error: Connection reset by peer)
[13:07:19] *** Joins: Pickchea (~private@user/pickchea)
[13:07:32] *** Joins: Guest48 (~textual@2001:ee0:4081:6914:6868:2b77:4d50:9077)
[13:07:48] *** Quits: Enitin (~Enitin@82.180.145.224) (Ping timeout: 260 seconds)
[13:08:07] *** Quits: revolve (~u0_a227@82-132-237-111.dab.02.net) (Read error: Connection reset by peer)
[13:08:23] *** Quits: CrazyEddy (crazyed@2603:300a:1d10:c000:de4a:3eff:fe88:cc5f) (Ping timeout: 256 seconds)
[13:09:00] *** Joins: Enitin (~Enitin@82.102.22.86)
[13:10:03] *** Joins: revolve (~u0_a227@82-132-236-106.dab.02.net)
[13:10:28] <white_rose[m]> guys
[13:10:29] *** Quits: stasp (~chatzilla@37.30.100.59.nat.umts.dynamic.t-mobile.pl) (Quit: Doom MIDIs await)
[13:10:52] <white_rose[m]> say i have an array with numbers, for e.g 1,6,8, is there a way to carry out a task for each recognised number
[13:11:24] <white_rose[m]> for each call a seperate function per number
[13:11:43] <white_rose[m]> as opposed to making an if statement for every single permutation as there could be many
[13:12:48] *** Joins: rsx (~dummy@ppp-188-174-147-44.dynamic.mnet-online.de)
[13:14:04] *** Joins: Y4knotiS (~YaknotiS@cpc1-cmbg18-2-0-cust87.5-4.cable.virginm.net)
[13:14:30] *** Quits: wyclif (~wyclif@user/wyclif) (Ping timeout: 272 seconds)
[13:14:55] <deniska> white_rose[m]: you can have a dict like {1: func_for_1, 6: func_for_6} and then call it like this_dict[number_you_have]()
[13:15:10] *** Joins: wyclif (~wyclif@user/wyclif)
[13:15:17] *** Joins: CrazyEddy (crazyed@2603:300a:1d10:c000:de4a:3eff:fe88:cc5f)
[13:15:22] *** Joins: gproto23 (~gproto23@user/gproto23)
[13:15:25] <deniska> white_rose[m]: or am I misunderstanding your question and you are looking for a `for`-loop?
[13:16:11] *** Quits: Enitin (~Enitin@82.102.22.86) (Ping timeout: 260 seconds)
[13:16:24] *** Joins: Enitin (~Enitin@82.102.22.85)
[13:17:28] *** Joins: chenqisu1 (~chenqisu1@183.217.200.168)
[13:19:15] *** Joins: vulpes_vulpes (~vulpes_vu@62-64-207-88.dynamic.dial.as9105.com)
[13:20:28] *** Quits: wyclif (~wyclif@user/wyclif) (Ping timeout: 260 seconds)
[13:20:56] *** Joins: wyclif (~wyclif@user/wyclif)
[13:21:04] *** Joins: KimK (~KimK@2600:8803:740b:4700:4a5b:39ff:fe0b:57d2)
[13:21:08] *** Joins: freeman_h1 (~freeman_h@cpc94282-ward11-2-0-cust375.10-2.cable.virginm.net)
[13:24:34] *** Joins: PJBoy (~PJBoy@user/pjboy)
[13:24:46] *** Quits: freeman_h (~freeman_h@37.120.159.215) (Ping timeout: 246 seconds)
[13:24:59] *** Quits: chenqisu1 (~chenqisu1@183.217.200.168) (Quit: Leaving)
[13:26:36] *** Quits: m42e (~m42e@pb42.de) (Ping timeout: 240 seconds)
[13:27:45] *** Joins: jpn (~jpn@user/jpn)
[13:30:05] *** Quits: DeaDSouL[m] (~deadsoulm@2001:470:69fc:105::1:c0de) (Quit: You have been kicked for being idle)
[13:30:07] *** Joins: Tempesta (~Tempesta@user/tempesta)
[13:30:20] *** Quits: Balzy_ (~Balzy@host-87-2-141-60.retail.telecomitalia.it) (Ping timeout: 272 seconds)
[13:30:58] *** Quits: wyclif (~wyclif@user/wyclif) (Ping timeout: 260 seconds)
[13:30:59] *** Quits: vlado (~vlado@2800:484:3587:3c90:8bf1:66d4:72a6:4f9c) (Ping timeout: 250 seconds)
[13:31:26] *** Quits: ghost43 (~ghost43@gateway/tor-sasl/ghost43) (Remote host closed the connection)
[13:31:44] *** Joins: ghost43 (~ghost43@gateway/tor-sasl/ghost43)
[13:31:58] *** Joins: wyclif (~wyclif@user/wyclif)
[13:32:03] *** Quits: Enitin (~Enitin@82.102.22.85) (Ping timeout: 260 seconds)
[13:32:48] <freeman_h1> Hi guys. I am having issue with flask including html tags in the data it posting to python. In my html form I write this https://i.ibb.co/DtnB2vn/test.png, however in the database what is actually getting saved is https://i.ibb.co/Vx2BwNC/what-is-actually-looks-like.png this is what my code looks like https://bpa.st/6QDQ line 10. Please how can I prevent flask from include html tags? in the text you can see I
[13:32:48] <freeman_h1> have the text in new lines, I want to maintain the spaces. thank you
[13:33:23] *** Joins: blindguard (~blindguar@2a02:908:1864:c200::beb)
[13:34:00] *** Joins: Enitin (~Enitin@82.102.22.86)
[13:34:23] *** Joins: zer0bitz (~zer0bitz@2001:2003:f750:a200:c06:c5f:5435:411f)
[13:34:25] *** Quits: [_] (~itchyjunk@user/itchyjunk/x-7353470) (Remote host closed the connection)
[13:34:42] *** Joins: Balzy (~Balzy@host-95-237-165-207.retail.telecomitalia.it)
[13:34:47] *** Joins: otisolsen70 (~otisolsen@80.80.4.2)
[13:35:13] <hans> does Python support private class constants? like in php one can do class C{ private const FOO=123; }
[13:35:31] <hans> (for constants that are only relevant inside that class, not part of the public api~)
[13:35:39] *** Joins: tempate (~alpha@user/tempate)
[13:35:45] <mgedmin> by convention private things have names that start with an underscore
[13:36:00] *** Quits: nemexis (~nemexis@193-62-201-31.ftth.glasoperator.nl) (Remote host closed the connection)
[13:36:12] <tempate> Is there a difference between assigning a value to a variable and to the attribute of a class?
[13:36:48] <tempate> I have a local variable in a function that gives me trouble if I treat it as a variable but works perfectly if I treat it as an attribute
[13:37:14] *** Joins: radu242 (~radu242@pool-96-250-220-83.nycmny.fios.verizon.net)
[13:37:30] *** Joins: stasp (uid548761@id-548761.ilkley.irccloud.com)
[13:38:33] *** Quits: Enitin (~Enitin@82.102.22.86) (Ping timeout: 260 seconds)
[13:38:59] <deniska> tempate: can you show code examples?
[13:39:17] *** Joins: vlado (~vlado@2800:484:3587:3c90:8bf1:66d4:72a6:4f9c)
[13:39:25] *** Joins: VoidSync (~sync@user/voidsync)
[13:39:35] *** Quits: ihristov (~ihristov@87-243-114-151.ip.btc-net.bg) (Quit: Connection closed)
[13:39:36] *** Joins: fanis30 (~anon@adsl-153.37.6.0.tellas.gr)
[13:39:45] <jinsun__> assigning to an attribute is method call not really an assignment, so yes it is different
[13:40:14] <mgedmin> uhhh
[13:40:14] *** Quits: nuala (~nuala@user/nuala) (Read error: Connection reset by peer)
[13:40:16] *** Joins: nemexis (~nemexis@193-62-201-31.ftth.glasoperator.nl)
[13:41:14] *** Quits: a210222 (~alex@218-215-213-197.sta.wbroadband.net.au) (Read error: Connection reset by peer)
[13:41:55] *** Quits: Oddity (~Oddity@user/oddity) (Ping timeout: 246 seconds)
[13:42:03] *** Quits: wyclif (~wyclif@user/wyclif) (Ping timeout: 260 seconds)
[13:42:05] <tempate> This is the actual code: https://bpa.st/JXIQ . I assume it's acting weirdly because of GUI stuff I don't understand. If I remove the self. from photoimage1 and photoimage2 they appear blank on the screen
[13:43:05] *** Joins: wyclif (~wyclif@user/wyclif)
[13:44:13] *** Quits: radu242 (~radu242@pool-96-250-220-83.nycmny.fios.verizon.net) (Ping timeout: 240 seconds)
[13:44:33] *** Joins: moog__ (~moog@98.97.83.133)
[13:44:52] <jinsun__> you remove self. from which lines? only 34 and 35?
[13:45:45] *** Joins: nuala (~nuala@user/nuala)
[13:46:07] <jinsun__> or did you remove from line 37 and 38 too?
[13:46:25] *** Joins: nuclearg1 (~nucleargr@user/nuclearg1)
[13:47:01] *** Quits: moog_ (~moog@98.97.85.203) (Ping timeout: 250 seconds)
[13:48:23] <mgedmin> hmm, one difference between locals and instance attributes would be that locals disappear when the function returns
[13:49:00] <mgedmin> which shouldn't affect anything, since the label on line 43 should retain a reference
[13:49:10] <mgedmin> but the label on line 43 is a local that disappears?
[13:49:17] *** Quits: orjsjskjdzk1 (~orjsjskjd@103.244.175.42) (Remote host closed the connection)
[13:49:20] *** Quits: Church (~aleph@68.161.207.188) (Ping timeout: 272 seconds)
[13:49:33] <tempate> jinsun_: I removed it from 34-38 and removed lines 17 and 18 altogether
[13:49:48] *** Quits: moog__ (~moog@98.97.83.133) (Ping timeout: 240 seconds)
[13:50:02] <mgedmin> actually that looks wrong to me, when the label goes away at the end of the function how does it still remain visible on screen?
[13:50:47] *** Quits: vlado (~vlado@2800:484:3587:3c90:8bf1:66d4:72a6:4f9c) (Ping timeout: 260 seconds)
[13:51:26] <mgedmin> how does tk work?  does creating the label for a window insert itself into a list of visible objects stored on the window?
[13:51:39] <tempate> I think that's what .place does
[13:51:47] <mgedmin> if so why are you creating two new labels every second without removing old ones?
[13:51:58] *** Quits: nuclearg1 (~nucleargr@user/nuclearg1) (Ping timeout: 260 seconds)
[13:52:27] *** Joins: nomic (~nomic@185.217.117.233)
[13:53:08] *** Quits: wyclif (~wyclif@user/wyclif) (Ping timeout: 260 seconds)
[13:53:59] *** Quits: vladoski (~vladoski@2001:b07:add:d406:ce46:ce1d:6082:2c6f) (Ping timeout: 260 seconds)
[13:54:10] *** Joins: wyclif (~wyclif@user/wyclif)
[13:54:31] <tempate> I just got distracted with this whole self. situation. I was planning on removing the labels as well.
[13:55:26] <jinsun__> tempate: okay so not doing anything obviously wrong, probably specific to how Label or .place works like mgedmin suspects, it is not keeping a refernce to the image alive so it gets killed and self.photoimage1 keeps a reference to the image in self
[13:55:59] *** Quits: stockh0lm (~Andreas@p200300d2c70cd40090355f9938920f5d.dip0.t-ipconnect.de) (Ping timeout: 256 seconds)
[13:56:21] *** Quits: ghost43 (~ghost43@gateway/tor-sasl/ghost43) (Remote host closed the connection)
[13:56:26] *** Joins: ssbr (~ssbr@python/site-packages/ssbr)
[13:56:29] <mgedmin> it would feel weird to me if a tk.Label kept only a weak reference to an image, but I have no other theories to explain why the code would behave this way
[13:56:44] <tempate> jinsun_: hmmm, that's interesting
[13:56:44] *** Joins: ghost43 (~ghost43@gateway/tor-sasl/ghost43)
[13:57:28] *** Joins: icsdi (~icsdi@net-5-94-129-68.cust.vodafonedsl.it)
[13:58:36] *** Quits: icsdi (~icsdi@net-5-94-129-68.cust.vodafonedsl.it) (Client Quit)
[13:59:04] *** Quits: wyclif (~wyclif@user/wyclif) (Ping timeout: 246 seconds)
[13:59:45] *** Joins: wyclif (~wyclif@user/wyclif)
[14:00:19] *** Joins: csm3105 (~csm3105@143.red-83-48-84.staticip.rima-tde.net)
[14:00:52] *** Joins: fearnothing (~fearnothi@user/fearnothing)
[14:00:56] *** Joins: vladoski (~vladoski@93-32-199-119.ip35.fastwebnet.it)
[14:01:04] *** Joins: stockh0lm (~Andreas@p200300d2c70cd40090355f9938920f5d.dip0.t-ipconnect.de)
[14:02:47] *** Quits: roxfan (~roxfan@2a02:a03f:a2be:4f00:913a:502b:5b7b:1e2b) (Ping timeout: 256 seconds)
[14:03:31] *** Joins: flower_ (~archie@217-123-218-6.cable.dynamic.v4.ziggo.nl)
[14:04:40] *** Quits: wyclif (~wyclif@user/wyclif) (Ping timeout: 246 seconds)
[14:04:53] *** Quits: vladoski (~vladoski@93-32-199-119.ip35.fastwebnet.it) (Remote host closed the connection)
[14:05:14] *** Joins: wyclif (~wyclif@user/wyclif)
[14:05:25] *** Quits: mon_aaraj (~MonAaraj@user/mon-aaraj/x-4416475) (Ping timeout: 250 seconds)
[14:05:28] <csm3105> Hi guys, one question, I have the following output that returns the gitlab webhook https://bpa.st/NHZA
[14:05:51] <csm3105> I need to know how can I do with python to verify that a path exists in that output
[14:06:19] <csm3105> I mean, when I update the title of an issue the structure that is generated is '['assignees']['changes']['last_edited_at']' and when I update the issue assignee I get the following structure: '['assignees']['changes']['assigees']'
[14:07:41] *** Joins: mon_aaraj (~MonAaraj@user/mon-aaraj/x-4416475)
[14:08:02] <csm3105> should I do something like this https://stackoverflow.com/a/45473000 ?
[14:08:57] *** Quits: nemexis (~nemexis@193-62-201-31.ftth.glasoperator.nl) (Read error: Connection reset by peer)
[14:09:23] *** Joins: nemexis (~nemexis@193-62-201-31.ftth.glasoperator.nl)
[14:09:32] *** Joins: msk (~Thunderbi@89.205.124.83)
[14:09:39] *** Joins: Enitin (~Enitin@82.180.145.228)
[14:10:05] <jinsun__> csm3105: yes, those chained .get calls are a nice way to handle this
[14:10:34] *** Joins: admin124 (~harrymore@ool-2f12f5b1.dyn.optonline.net)
[14:11:45] *** Quits: Ranhir (~Ranhir@157.97.53.139) (Quit: KVIrc 5.0.0 Aria http://www.kvirc.net/)
[14:12:23] *** Quits: admin123 (harrymoren@gateway/vpn/protonvpn/admin123) (Ping timeout: 260 seconds)
[14:13:07] *** Quits: AlanMD (~AlanMD@193.105.140.131) (Ping timeout: 260 seconds)
[14:14:03] *** Quits: diogenese (~diogenese@diogenese.velotech.net) (Quit: Has anybody seen the bridge?)
[14:14:22] *** Joins: diogenese (~diogenese@diogenese.velotech.net)
[14:15:59] <csm3105> jinsun__, fine, thanks!
[14:16:30] *** Joins: Helmholtz (~leibnizma@2001:470:69fc:105::3124)
[14:20:00] *** Joins: EgonX (~EgonX@2601:2c6:47f:879e:1c69:4995:f8a4:2715)
[14:20:29] *** Quits: hamburger (~hamburger@2001:448a:1082:fe6f:6197:f3df:285e:35b9) (Quit: Leaving)
[14:20:37] *** Quits: karlpinc (~user@173-161-46-9-Illinois.hfc.comcastbusiness.net) (Ping timeout: 240 seconds)
[14:20:55] *** Joins: ivii (~ivan@user/ivii)
[14:21:00] *** Quits: maxzor (~maxzor@laubervilliers-657-1-70-103.w90-63.abo.wanadoo.fr) (Ping timeout: 272 seconds)
[14:21:29] *** Joins: nuclearg1 (~nucleargr@user/nuclearg1)
[14:21:46] *** Quits: EgonX (~EgonX@2601:2c6:47f:879e:1c69:4995:f8a4:2715) (Client Quit)
[14:23:30] *** Quits: VoidSync (~sync@user/voidsync) ()
[14:24:13] *** kostkon_ is now known as kostkon
[14:24:31] *** Quits: nemexis (~nemexis@193-62-201-31.ftth.glasoperator.nl) (Remote host closed the connection)
[14:24:55] *** Joins: EgonX (~EgonX@2601:2c6:47f:879e:1c69:4995:f8a4:2715)
[14:25:41] *** Joins: dodobrain (~dodobrain@user/dodobrain)
[14:26:15] *** Quits: EgonX (~EgonX@2601:2c6:47f:879e:1c69:4995:f8a4:2715) (Client Quit)
[14:26:48] *** Joins: LucaTM (~LucaTM@user/lucatm)
[14:27:11] *** Joins: gentooclimax (~gentoocli@81-64-65-213.rev.numericable.fr)
[14:27:22] <Helmholtz> hi
[14:27:33] *** Quits: Pickchea (~private@user/pickchea) (Ping timeout: 260 seconds)
[14:27:33] *** Quits: sokan (~sokan@athedsl-4549484.home.otenet.gr) (Read error: Connection reset by peer)
[14:28:00] <Helmholtz> Is there a guide to write "single-file" python CLI apps?
[14:28:15] <Helmholtz> (which unfortunately rely on installing something in the venv via pip?)
[14:28:24] *** Quits: funhouse (~funhouse@user/funhouse) (Quit: Client closed)
[14:29:27] *** Joins: AlanMD (~AlanMD@193.105.140.131)
[14:29:29] *** Joins: enoq (~enoq@2a05:1141:1f5:5600:b9c9:721a:599:bfe7)
[14:30:42] *** Joins: sokan (~sokan@2a02:587:9e1f:c900:227:eff:fe16:865d)
[14:31:48] *** Quits: fanis30 (~anon@adsl-153.37.6.0.tellas.gr) (Quit: WeeChat 3.3)
[14:31:55] *** Joins: Csm319_ (~csm3105@143.red-83-48-84.staticip.rima-tde.net)
[14:31:55] *** Quits: fling (~fling@user/fling) (Ping timeout: 240 seconds)
[14:32:17] *** Quits: csm3105 (~csm3105@143.red-83-48-84.staticip.rima-tde.net) (Ping timeout: 252 seconds)
[14:32:22] *** Quits: tempate (~alpha@user/tempate) (Quit: Leaving.)
[14:32:29] *** Quits: MajorBiscuit (~MajorBisc@c-001-024-034.client.tudelft.eduvpn.nl) (Quit: WeeChat 3.4)
[14:32:54] <mgedmin> it's about the same as a multi-file python CLI app, except in your setup.py you specify a py_modules=... instead of packages=...
[14:33:16] <mgedmin> if you want an example, see e.g. https://github.com/mgedmin/gitlab-jobs
[14:34:03] <freeman_h1> Hi guys. I am having issue with flask including html tags in the data it posting to python. In my html form I write this https://i.ibb.co/DtnB2vn/test.png, however in the database what is actually getting saved is https://i.ibb.co/Vx2BwNC/what-is-actually-looks-like.png this is what my code looks like https://bpa.st/6QDQ line 10. Please how can I prevent flask from include html tags? in the text you can see I
[14:34:04] <freeman_h1> have the text in new lines, I want to maintain the spaces. thank you
[14:34:39] <lpapp> ztrawhcse: thanks, forgot to say.
[14:34:53] *** Quits: mon_aaraj (~MonAaraj@user/mon-aaraj/x-4416475) (Ping timeout: 250 seconds)
[14:34:55] *** Quits: Xardas (~Xardas@149.233.51.127) (Quit: Client closed)
[14:35:17] *** Joins: fling (~fling@user/fling)
[14:35:40] *** Joins: MajorBiscuit (~MajorBisc@c-001-024-034.client.tudelft.eduvpn.nl)
[14:36:34] *** Joins: EgonX (~EgonX@2601:2c6:47f:879e:1c69:4995:f8a4:2715)
[14:36:35] *** Joins: m42e (~m42e@pb42.de)
[14:37:00] *** gentooclimax is now known as climax
[14:37:08] *** Joins: mon_aaraj (~MonAaraj@user/mon-aaraj/x-4416475)
[14:37:08] *** Quits: EgonX (~EgonX@2601:2c6:47f:879e:1c69:4995:f8a4:2715) (Client Quit)
[14:37:15] *** Joins: Ranhir (~Ranhir@157.97.53.139)
[14:37:48] *** Joins: tempate (~alpha@user/tempate)
[14:38:04] *** Joins: darksun (~darksun@user/darksun)
[14:38:48] *** Quits: eson123 (~whatever@user/eson123) (Quit: Leaving)
[14:38:59] *** Joins: nemexis (~nemexis@193-62-201-31.ftth.glasoperator.nl)
[14:39:01] *** Quits: tempate (~alpha@user/tempate) (Client Quit)
[14:39:35] *** Joins: EgonX (~EgonX@2601:2c6:47f:879e:1c69:4995:f8a4:2715)
[14:41:11] *** Quits: EgonX (~EgonX@2601:2c6:47f:879e:1c69:4995:f8a4:2715) (Client Quit)
[14:41:59] *** Joins: esther (~esther@24-155-112-236.dyn.grandenetworks.net)
[14:42:09] *** Joins: hyskaru (~hyskaru@user/hyskaru)
[14:42:22] *** Quits: ghost43 (~ghost43@gateway/tor-sasl/ghost43) (Remote host closed the connection)
[14:42:41] *** Quits: hyskaru (~hyskaru@user/hyskaru) (Client Quit)
[14:42:42] *** Joins: ghost43 (~ghost43@gateway/tor-sasl/ghost43)
[14:42:49] *** Parts: veracioux (~user@92.36.214.90) (ERC (IRC client for Emacs 27.2))
[14:45:22] *** Joins: EgonX (~EgonX@2601:2c6:47f:879e:1c69:4995:f8a4:2715)
[14:45:50] *** Quits: EgonX (~EgonX@2601:2c6:47f:879e:1c69:4995:f8a4:2715) (Client Quit)
[14:45:58] *** Quits: m42e (~m42e@pb42.de) (Ping timeout: 246 seconds)
[14:47:18] *** climax is now known as gentooclimax
[14:47:35] *** Quits: gentooclimax (~gentoocli@81-64-65-213.rev.numericable.fr) (Quit: Konversation terminated!)
[14:48:07] *** Quits: Gustavo6046 (~Gustavo60@user/gustavo6046) (Ping timeout: 250 seconds)
[14:48:29] *** Quits: otisolsen70 (~otisolsen@80.80.4.2) (Quit: Leaving)
[14:48:44] *** Joins: audio (~audio@user/audio)
[14:49:17] *** Quits: ghost43 (~ghost43@gateway/tor-sasl/ghost43) (Remote host closed the connection)
[14:52:29] *** Joins: Blackajack_ (~Blackajac@user/Blackajack)
[14:54:02] *** Joins: ghost43 (~ghost43@gateway/tor-sasl/ghost43)
[14:55:01] *** Quits: Guest48 (~textual@2001:ee0:4081:6914:6868:2b77:4d50:9077) (Quit: My MacBook has gone to sleep. ZZZzzz…)
[14:55:50] *** Quits: Blackajack (~Blackajac@user/Blackajack) (Ping timeout: 272 seconds)
[14:56:43] *** Quits: Blackajack_ (~Blackajac@user/Blackajack) (Client Quit)
[14:58:13] *** Quits: jmd (~user@de.cellform.com) (Remote host closed the connection)
[14:58:35] *** Joins: tempate (~alpha@user/tempate)
[14:58:43] *** Quits: Enitin (~Enitin@82.180.145.228) (Ping timeout: 250 seconds)
[14:58:55] *** Joins: Enitin (~Enitin@82.102.22.85)
[15:01:31] *** Quits: Csm319_ (~csm3105@143.red-83-48-84.staticip.rima-tde.net) (Quit: Leaving)
[15:03:38] *** Joins: vdamewood (~vdamewood@fedora/vdamewood)
[15:03:43] *** Quits: lbalhar (~lbalhar@spsei.osanet.cz) (Ping timeout: 260 seconds)
[15:04:07] *** Joins: jmd (~user@de.cellform.com)
[15:04:08] *** Quits: jmd (~user@de.cellform.com) (Read error: Connection reset by peer)
[15:04:18] *** Quits: Cheaterman (~Cheaterma@user/cheaterman) (Ping timeout: 260 seconds)
[15:05:22] *** Joins: EgonX (~EgonX@2601:2c6:47f:879e:1c69:4995:f8a4:2715)
[15:06:28] *** Quits: EgonX (~EgonX@2601:2c6:47f:879e:1c69:4995:f8a4:2715) (Client Quit)
[15:07:07] *** Quits: botfather (~botfather@shell2.dds.nl) (Remote host closed the connection)
[15:09:04] *** Quits: kaiseisei (~Thunderbi@user/kaiseisei) (Quit: kaiseisei)
[15:09:18] *** Joins: andreasbuhr (~quassel@p549dba4c.dip0.t-ipconnect.de)
[15:09:38] *** Joins: kaiseisei (~Thunderbi@user/kaiseisei)
[15:12:29] *** Joins: nishant (~nishant@2405:201:f005:c007:3ab2:bee7:6ff3:39cb)
[15:13:07] *** Quits: Thanatos (~Thanatos@ec2-54-148-37-124.us-west-2.compute.amazonaws.com) (Remote host closed the connection)
[15:13:19] *** Joins: jmd (~user@de.cellform.com)
[15:13:50] *** Joins: Sario (sid356235@fosshost/cdo/Sario)
[15:13:58] *** Joins: Thanatos (~Thanatos@ec2-54-148-37-124.us-west-2.compute.amazonaws.com)
[15:13:58] *** Quits: kaiseisei (~Thunderbi@user/kaiseisei) (Ping timeout: 246 seconds)
[15:17:07] *** Quits: wyclif (~wyclif@user/wyclif) (Ping timeout: 260 seconds)
[15:17:57] *** Joins: wyclif (~wyclif@user/wyclif)
[15:18:13] *** Joins: thiras (~thiras@user/thiras)
[15:19:52] *** Joins: VoidSync (~sync@user/voidsync)
[15:20:29] *** Quits: Thanatos (~Thanatos@ec2-54-148-37-124.us-west-2.compute.amazonaws.com) (Remote host closed the connection)
[15:20:54] *** Joins: Cheaterman (~Cheaterma@user/cheaterman)
[15:20:55] *** Joins: Thanatos (~Thanatos@ec2-54-148-37-124.us-west-2.compute.amazonaws.com)
[15:21:48] *** Quits: flower_ (~archie@217-123-218-6.cable.dynamic.v4.ziggo.nl) (Ping timeout: 260 seconds)
[15:21:48] *** Quits: merijn (~merijn@c-001-001-001.client.esciencecenter.eduvpn.nl) (Ping timeout: 272 seconds)
[15:22:07] *** Joins: flower_ (~archie@217-123-218-6.cable.dynamic.v4.ziggo.nl)
[15:22:08] *** Joins: Seto_Kaiba (~hunterkll@2001:470:8b06:100:2958:1194:aedf:1fa3)
[15:22:21] *** Joins: merijn (~merijn@c-001-001-001.client.esciencecenter.eduvpn.nl)
[15:23:07] *** Quits: wyclif (~wyclif@user/wyclif) (Ping timeout: 260 seconds)
[15:23:15] *** Quits: Hunterkll (~hunterkll@2001:470:8b06:100:2958:1194:aedf:1fa3) (Killed (NickServ (GHOST command used by Seto_Kaiba)))
[15:23:17] *** Seto_Kaiba is now known as Hunterkll
[15:23:43] *** Joins: wyclif (~wyclif@user/wyclif)
[15:24:27] *** Quits: lastshell (~lastshell@user/lastshell) (Quit: WeeChat 3.0)
[15:24:34] *** Quits: nemexis (~nemexis@193-62-201-31.ftth.glasoperator.nl) (Remote host closed the connection)
[15:24:42] *** Quits: ackyshake (~ackyshake@user/ackyshake) (Quit: Soupy Twist!)
[15:25:02] *** Joins: nemexis (~nemexis@193-62-201-31.ftth.glasoperator.nl)
[15:26:17] *** Quits: mncheck (~mncheck@193.224.205.254) (Read error: Connection reset by peer)
[15:26:28] *** Joins: Bronto22 (~mennoh@2a02:a46b:4db0:1:5604:a6ff:fe37:3044)
[15:26:39] *** Quits: nuclearg1 (~nucleargr@user/nuclearg1) (Ping timeout: 256 seconds)
[15:27:52] *** Joins: sharperguy (~sharpergu@fnord.cryptophone.de)
[15:27:59] *** Joins: amaenli5 (~amaenli@aries.uberspace.de)
[15:28:52] *** Quits: califax (~califax@user/califx) (Remote host closed the connection)
[15:28:52] *** Quits: brabrax (~brabrax@user/brabrax) (Quit: ZNC 1.8.2 - https://znc.in)
[15:29:10] *** Joins: cypostres (~cypostres@user/cypostres)
[15:29:49] *** Quits: amaenli (~amaenli@aries.uberspace.de) (Ping timeout: 240 seconds)
[15:29:49] *** amaenli5 is now known as amaenli
[15:29:50] *** Joins: brabrax (~brabrax@user/brabrax)
[15:29:52] *** Joins: califax (~califax@user/califx)
[15:30:29] *** Quits: cypostres (~cypostres@user/cypostres) (Remote host closed the connection)
[15:30:52] *** Joins: cypostres (~cypostres@user/cypostres)
[15:33:40] *** Joins: radu242 (~radu242@pool-96-250-220-83.nycmny.fios.verizon.net)
[15:33:53] *** Quits: johnkeats6 (~johnkeats@2804:14c:32:a0cc:48a5:7056:902f:37e0) (Ping timeout: 252 seconds)
[15:33:56] *** Quits: ghost43 (~ghost43@gateway/tor-sasl/ghost43) (Remote host closed the connection)
[15:34:06] *** Joins: ghost43_ (~ghost43@gateway/tor-sasl/ghost43)
[15:34:26] *** Joins: Pickchea (~private@user/pickchea)
[15:35:12] *** Joins: sudomann (~sudomann@98.219.211.182)
[15:35:14] <PJBoy> do I get to access the key that triggers a KeyError in an exception handler?
[15:35:23] *** Quits: Thanatos (~Thanatos@ec2-54-148-37-124.us-west-2.compute.amazonaws.com) (Remote host closed the connection)
[15:35:48] <PJBoy> docs have nothing to say on the subject
[15:35:49] *** Joins: Thanatos (~Thanatos@ec2-54-148-37-124.us-west-2.compute.amazonaws.com)
[15:36:13] *** Quits: jazzy2 (~jaziz@user/jaziz) (Ping timeout: 250 seconds)
[15:36:15] *** Quits: fling (~fling@user/fling) (Ping timeout: 240 seconds)
[15:36:21] <nedbat> PJBoy: exc.args[0] is the key
[15:36:44] *** Joins: Barones (~Barones@user/Barones)
[15:36:47] <PJBoy> brilliant, thanks :)
[15:36:55] <sudomann> Trying to figure out how tensorflow=2.7.0 made it into my docker image. Could ipython==7.31.1 install it?
[15:37:05] *** Quits: merijn (~merijn@c-001-001-001.client.esciencecenter.eduvpn.nl) (Ping timeout: 250 seconds)
[15:37:59] *** Joins: Anon (~Anon@i59F4C9FB.versanet.de)
[15:38:05] *** Joins: fling (~fling@user/fling)
[15:38:10] <Anon> pease
[15:38:23] *** Anon is now known as Guest7957
[15:38:36] *** Quits: Guest7957 (~Anon@i59F4C9FB.versanet.de) (Client Quit)
[15:39:15] *** Joins: merijn (~merijn@c-001-001-001.client.esciencecenter.eduvpn.nl)
[15:41:29] *** Joins: _h4x0r_ (~till@user/till/x-8616149)
[15:44:11] *** Joins: rpkilby (~rpkilby@c-24-20-208-106.hsd1.or.comcast.net)
[15:45:07] *** Quits: tempate (~alpha@user/tempate) (Ping timeout: 246 seconds)
[15:45:55] *** Joins: tempate (~alpha@user/tempate)
[15:46:55] <Helmholtz> Is there a way to generate error messages automatically for poorly typed argparse options? https://dpaste.com/AZYUBDAQF
[15:47:01] *** Quits: data68 (~data@2a02:908:a67:2ce0:4197:8ffe:f671:b843) (Ping timeout: 240 seconds)
[15:47:06] <Helmholtz> This is the manual way I guess ^
[15:48:10] <Helmholtz> (I don't want to handle mis-typed options manually. I just want an error message showing "Bad type for option"
[15:48:15] <nedbat> Helmholtz: your except clause covers too much code, and doesn't argparse.FileType already handle those errors?
[15:48:27] *** Joins: tj123 (~tjh123@cpe-75-185-104-199.cinci.res.rr.com)
[15:50:39] *** Quits: tempate (~alpha@user/tempate) (Ping timeout: 260 seconds)
[15:50:57] <Helmholtz> nedbat, it prints a long chain of errors like this: https://dpaste.com/8J7R5RKHU
[15:51:32] *** Joins: bigRoo (~user@73.181.dsl.syd.iprimus.net.au)
[15:51:33] *** Joins: summersault (~summersau@179.221.251.36)
[15:52:08] <nedbat> Helmholtz: I see. then put that except: around just that line of code.
[15:52:26] *** Quits: teut (~teut@103.144.92.226) (Ping timeout: 250 seconds)
[15:52:55] <Helmholtz> nedbat, but I want an automatic error message. Like "bad type for source_file"
[15:52:57] *** Quits: konfusedagain (~konfuseda@125.99.177.198) (Ping timeout: 256 seconds)
[15:53:15] *** Joins: konfusedagain (~konfuseda@2409:4050:e0f:2ee9:f157:1419:b470:fba4)
[15:53:18] <Helmholtz> like if you provide an unsupported option, it does print bad usage
[15:53:21] <nedbat> Helmholtz: right, won;t that work if the except is just around the parse_args call?
[15:53:27] *** Quits: TechSmurf (~tech@user/techsmurf) (Ping timeout: 260 seconds)
[15:53:43] <jinsun__> that traceback is the automatic error message
[15:54:12] <mgedmin> Helmholtz: that's because you're doing `type=open`, instead of type=argparse.FileType("r")
[15:54:28] <mgedmin> argparse.FileType() will raise the right exception for argparse to report a proper error message
[15:54:47] <mgedmin> (IIRC)
[15:55:23] <Helmholtz> mgedmin, very nice!
[15:55:47] *** Quits: avane (~avane@fsf/member/avane) (Ping timeout: 256 seconds)
[15:55:50] <Helmholtz> mgedmin, can I enforce a specific format also? (like xlsx)
[15:56:13] *** Quits: summersault (~summersau@179.221.251.36) (Ping timeout: 260 seconds)
[15:56:28] *** Joins: avane (~avane@fsf/member/avane)
[15:57:01] <mgedmin> I would do that outside the argparse framework, like pass the file to your xlsx parser, intercept its BadFormat exception or whatnot, report it nicely
[15:57:44] <Helmholtz> thanks
[15:58:05] <mgedmin> but if you really want to, you can do a type=open_xlsx, with a def open_xlsx(filename): that does the xlsx parser instantiation etc. and converts the parser's exception into argparse.ArgumentTypeError
[15:58:10] <Helmholtz> argparse is in stdlibs right? Any reasons to prefer click or others>
[15:58:14] <Helmholtz> s/>/?
[15:58:25] <mgedmin> argparse is in the stdlib; some people prefer click because they like its API better
[15:58:34] <mgedmin> I haven't used click myself so I cannot possibly comment
[15:58:55] *** Joins: nuclearg1 (~nucleargr@user/nuclearg1)
[15:59:39] *** Joins: moog (~moog@98.97.85.1)
[16:00:37] *** Joins: roxfan (~roxfan@2a02:a03f:a2be:4f00:913a:502b:5b7b:1e2b)
[16:01:39] *** Joins: botfather (~botfather@shell1.dds.nl)
[16:01:55] *** Joins: Guest141 (~Guest141@88.103.7.38)
[16:02:20] *** Quits: ghost43_ (~ghost43@gateway/tor-sasl/ghost43) (Remote host closed the connection)
[16:02:41] *** Joins: ghost43 (~ghost43@gateway/tor-sasl/ghost43)
[16:02:58] *** Joins: pycurious (~Adium@user/pycurious)
[16:03:15] *** Cyp_ is now known as Cyp
[16:04:47] *** Quits: hans (uid529825@id-529825.helmsley.irccloud.com) (Quit: Connection closed for inactivity)
[16:07:51] *** Joins: maxzor (~maxzor@laubervilliers-657-1-70-103.w90-63.abo.wanadoo.fr)
[16:08:28] *** Quits: revolve (~u0_a227@82-132-236-106.dab.02.net) (Ping timeout: 260 seconds)
[16:08:28] *** Joins: tempate (~alpha@user/tempate)
[16:08:35] *** Joins: revolve (~u0_a227@82-132-236-106.dab.02.net)
[16:10:13] <patchie> is there an active python datascience channel i can ask questions in, or can i use this channel for datascience questions?
[16:11:53] *** Quits: sentriz (~sentriz@109.255.139.98) (Remote host closed the connection)
[16:12:01] *** Joins: sentriz (~sentriz@109.255.139.98)
[16:13:23] <bjs> patchie: you can ask any questions relating to Python here,  but if it's some more specific question about a particular field/library then it might just be that there's nobody here that can answer directly
[16:13:25] <bjs> but you're free to ask
[16:13:31] *** Joins: tomeaton17 (~tomeaton1@2a0c:5bc0:40:2e2f:c50d:a851:5c8f:3d64)
[16:14:44] *** Joins: cdown (~cdown@user/cdown)
[16:14:48] *** Joins: TechSmurf (~tech@user/techsmurf)
[16:16:05] *** Quits: Masklin (~joel@130.235.150.20) (Quit: Konversation terminated!)
[16:16:12] *** Joins: vlado (~vlado@2800:484:3587:3c90:8bf1:66d4:72a6:4f9c)
[16:16:33] *** Joins: zerotypic (~zerotypic@165.173.19.147)
[16:16:50] *** Joins: Guest48_ (~textual@2001:ee0:4081:6914:59d4:c39b:227b:2087)
[16:17:23] *** Joins: bitkiller (~bitkiller@user/bitkiller)
[16:17:26] *** Joins: Masklin__Gurder (~joel@pool20.nat.lunet.lu.se)
[16:19:43] *** Quits: Guest48_ (~textual@2001:ee0:4081:6914:59d4:c39b:227b:2087) (Client Quit)
[16:21:49] <dob1> I don't understand how exception works on an executor, for example why this continue its execution  https://termbin.com/6z3a  but this is not executed after the first exception ? https://termbin.com/l5jg
[16:22:21] <dob1> depends on exception type?
[16:23:19] *** Quits: dodobrain (~dodobrain@user/dodobrain) (Remote host closed the connection)
[16:23:47] *** Joins: dodobrain (~dodobrain@user/dodobrain)
[16:24:51] *** Masklin__Gurder is now known as Masklin
[16:25:11] *** Joins: sorta (~sorta@user/sorta)
[16:25:47] *** Quits: mon_aaraj (~MonAaraj@user/mon-aaraj/x-4416475) (Ping timeout: 272 seconds)
[16:26:42] <bjs> dob1: i'm not sure what you mean you say it both continues its execution but also not?
[16:27:36] *** Joins: mon_aaraj (~MonAaraj@user/mon-aaraj/x-4416475)
[16:27:48] *** Joins: hans (uid529825@id-529825.helmsley.irccloud.com)
[16:28:01] <hans> how do you typehint that a function may return multiple types? for example in PHP you'd do function f(): int | string | null {...}
[16:28:28] <bjs> hans: pretty much like that. `def f() -> int | str | None: ...`
[16:28:37] <hans> perfect, thanks
[16:28:58] <bjs> dob1: maybe you're asking why this code won't re-raise the exception so you can see it? well the reason is that you're submit()ing a bunch of jobs but never asking to see the result
[16:28:59] *** Quits: elastic_dog (~elastic_d@2a01:118f:822:9c00:f583:aa51:9ad4:d4fb) (Ping timeout: 256 seconds)
[16:29:23] *** Joins: toulene (~toulene@user/toulene)
[16:30:12] *** Quits: wyclif (~wyclif@user/wyclif) (Ping timeout: 272 seconds)
[16:30:30] *** Joins: elastic_dog (~elastic_d@2a01:118f:822:9c00:f583:aa51:9ad4:d4fb)
[16:30:57] *** Joins: wyclif (~wyclif@user/wyclif)
[16:31:15] <dob1> bjs, both will throw an exception, but the first one will continue its execution, the second one get interrupted
[16:31:37] *** Joins: nickodd (~nickodd@user/nickodd)
[16:32:00] *** Joins: Hanii (~textual@2a00:23c5:c583:a300:187d:1335:db91:60e3)
[16:33:28] <bjs> dob1: both what?
[16:33:37] <bjs> dob1: you spawned up to 30 threads, with 100 jobs
[16:34:01] *** Joins: Gotoma (~textual@ip4d14fa13.dynamic.kabel-deutschland.de)
[16:34:08] *** Quits: tempate (~alpha@user/tempate) (Quit: Leaving.)
[16:35:21] <hans> how do you combine typehints with default arguments? def f(foo: string "defaultstring")    ?
[16:35:44] <nedbat> hans: def f(foo: str = "default")
[16:35:51] <hans> thanks
[16:35:55] *** Quits: wyclif (~wyclif@user/wyclif) (Ping timeout: 260 seconds)
[16:36:29] *** Joins: wyclif (~wyclif@user/wyclif)
[16:37:06] <dob1> bjs, I mean this https://www.online-python.com/QW7GwDYopf   with executor.submit(test1, i)  you see the print ,  with executor.submit(test2, i)  no,  they both raise an exception
[16:37:57] <bjs> dob1: yeah that makes sense
[16:38:01] *** Quits: slav0nic (slav0nic@python.su) (Remote host closed the connection)
[16:38:24] *** Joins: slav0nic (slav0nic@python.su)
[16:38:34] <bjs> dob1: in `test1` 50% of the calls succeed so you see the prints, but in `test2` 100% of them fail so you don't see any of the prints
[16:38:41] <bjs> is that what you see?
[16:39:30] <dob1> bjs, ah, right... what a stupid question.... sorry. it doesn't reach the sleep...
[16:40:01] *** Quits: fling (~fling@user/fling) (Remote host closed the connection)
[16:40:29] *** Joins: fling (~fling@user/fling)
[16:40:42] <dob1> bjs, thanks
[16:40:43] *** Quits: ghost43 (~ghost43@gateway/tor-sasl/ghost43) (Remote host closed the connection)
[16:41:03] *** Joins: ghost43 (~ghost43@gateway/tor-sasl/ghost43)
[16:42:22] *** Quits: ghost43 (~ghost43@gateway/tor-sasl/ghost43) (Remote host closed the connection)
[16:44:01] *** Joins: ghost43 (~ghost43@gateway/tor-sasl/ghost43)
[16:45:02] *** Quits: dodobrain (~dodobrain@user/dodobrain) (Ping timeout: 240 seconds)
[16:46:00] *** Quits: elastic_dog (~elastic_d@2a01:118f:822:9c00:f583:aa51:9ad4:d4fb) (Quit: elastic_dog)
[16:46:02] *** Quits: fandre1986 (~fandre198@78.10.85.96) (Quit: Connection closed)
[16:47:00] *** Joins: elastic_dog (~elastic_d@2a01:118f:822:9c00:f583:aa51:9ad4:d4fb)
[16:49:15] *** Joins: slowButPresent (~slowButPr@user/slowbutpresent)
[16:50:08] *** Quits: Gotoma (~textual@ip4d14fa13.dynamic.kabel-deutschland.de) (Quit: My iMac has gone to sleep. ZZZzzz…)
[16:51:51] *** Joins: PeloPelo (~kerem@85.153.141.133)
[16:52:14] *** Joins: rinzewind (~rinzewind@user/rinzewind)
[16:57:33] <freeman_h1> Hi guys. I am having issue with flask including html tags in the data it posting to python. In my html form I write this https://i.ibb.co/DtnB2vn/test.png, however in the database what is actually getting saved is https://i.ibb.co/Vx2BwNC/what-is-actually-looks-like.png this is what my code looks like https://bpa.st/6QDQ line 10. Please how can I prevent flask from include html tags? in the text you can see I
[16:57:33] <freeman_h1> have the text in new lines, I want to maintain the spaces. thank you
[16:58:33] *** Joins: bloody (~bloody@user/bloody)
[16:58:44] *** Quits: Guest141 (~Guest141@88.103.7.38) (Ping timeout: 250 seconds)
[16:59:14] *** Joins: kts (~kts@103.73.237.175)
[16:59:40] *** Quits: revolve (~u0_a227@82-132-236-106.dab.02.net) (Ping timeout: 246 seconds)
[16:59:43] <PeloPelo> Hi, I have a project about casting steel mixtures. This project has two steps. First, i need to predict electric consumption. I completed the first part. Second, according to a few given data, find the cheapest mixture for a specified quality of steel by adding which components.
[17:00:06] <PeloPelo> Can you advise me on how to do this second question? I did the first part with scikit-learn and multiple linear regression, and the dataset includes which scrap and how much chemicals are added to different steel qualities and their prices.
[17:00:11] *** Joins: paul424 (~tom@apn-95-41-75-186.dynamic.gprs.plus.pl)
[17:00:18] *** Quits: Payam96 (~Payam@138.106.57.131) (Quit: Client closed)
[17:00:40] *** zmotaj_ is now known as zmotaj
[17:00:41] *** Quits: zmotaj (~zmotaj@86.61.80.191) (Changing host)
[17:00:41] *** Joins: zmotaj (~zmotaj@user/zmotaj)
[17:01:29] *** Joins: revolve (~u0_a227@cpc100838-bagu15-2-0-cust672.1-3.cable.virginm.net)
[17:04:48] *** Quits: theo (~theo@user/theo) (Quit: Ping timeout (120 seconds))
[17:04:55] *** Quits: birkoff (birkoff@user/birkoff) (Quit: ZNC 1.8.2 - https://znc.in)
[17:05:14] *** Joins: theo (~theo@user/theo)
[17:05:20] *** Joins: dante-as (~dante-as@188.26.94.194)
[17:05:25] <hans> for "def f()->int | bool: return 1;" i get TypeError: unsupported operand type(s) for |: 'type' and 'type'
[17:06:03] *** Quits: carl- (~carl-@185.103.188.130) (Ping timeout: 256 seconds)
[17:06:09] <jinsun__> which version of python?
[17:06:19] <hans> 3.8.12
[17:06:20] <jinsun__> it works on 3.10+ only
[17:06:29] <hans> ohh kk, thanks
[17:06:35] *** Joins: Guest141 (~Guest141@88.103.7.38)
[17:06:45] <jinsun__> for 3.7+ you can do `from __future__ import annotations` at the top of your file to make it work
[17:07:39] *** Joins: Guest48_ (~textual@2001:ee0:4081:6914:d947:7613:ea9e:b0dc)
[17:08:04] <jinsun__> int | bool is a weird annotation though, it could just be int
[17:08:13] <jinsun__> since bools are ints too
[17:08:19] *** Parts: PeloPelo (~kerem@85.153.141.133) ()
[17:08:36] *** Joins: PeloPelo (~kerem@85.153.141.133)
[17:09:04] *** Quits: gulzar (~gulzar@49.206.240.149) (Quit: Client closed)
[17:09:26] <jinsun__> though probably many people and type checkers don't like that, so I guess it is fine
[17:09:27] *** Quits: Hunterkll (~hunterkll@2001:470:8b06:100:2958:1194:aedf:1fa3) (Read error: Connection reset by peer)
[17:10:07] *** Quits: onu (~onufn@gibbs.uberspace.de) (Read error: Connection reset by peer)
[17:10:30] <jinsun__> you can write Union[int, bool] before 3.10 too, if you don't want to enable PEP 563 behavior
[17:11:18] *** Quits: Guest141 (~Guest141@88.103.7.38) (Ping timeout: 250 seconds)
[17:12:05] <hans> thanks
[17:13:08] *** Quits: rpkilby (~rpkilby@c-24-20-208-106.hsd1.or.comcast.net) ()
[17:13:41] *** Quits: CatCow (~wtf_over@c-73-96-109-206.hsd1.or.comcast.net) (Quit: My MacBook Air has gone to sleep. ZZZzzz…)
[17:13:42] *** Joins: onu (~onufn@gibbs.uberspace.de)
[17:13:59] *** Joins: cvmn (~caveman@gateway/tor-sasl/caveman)
[17:14:08] *** Joins: machaddr (~machaddr@a79-168-74-18.cpe.netcabo.pt)
[17:14:27] *** Joins: causasui (~causasui@c-68-60-125-136.hsd1.mi.comcast.net)
[17:14:42] *** Joins: rpkilby (~rpkilby@c-24-20-208-106.hsd1.or.comcast.net)
[17:15:20] *** Quits: Bronto22 (~mennoh@2a02:a46b:4db0:1:5604:a6ff:fe37:3044) (Quit: Konversation terminated!)
[17:15:55] <ztrawhcse> Helmholtz: in terms of preferring argparse or click or others, having one less dependency is nice, so the stdlib is good. On the other hand, argparse has various non-posix and frankly weird behaviors, which is bad. (e.g. upfront parsing of flag values as flags, why on earth ;))
[17:17:07] *** Quits: Guest48_ (~textual@2001:ee0:4081:6914:d947:7613:ea9e:b0dc) (Quit: My MacBook has gone to sleep. ZZZzzz…)
[17:17:11] <ztrawhcse> Click seems to be a ton nicer in terms of standards conformance, and has neat tricks, but dependency management...
[17:17:32] *** Joins: EgonX (~EgonX@2601:2c6:47f:879e:1c69:4995:f8a4:2715)
[17:17:33] *** Quits: luigibu (~luigi@93.176.153.88) (Quit: WeeChat 3.5)
[17:17:51] *** Joins: jinsun (~jinsun@user/jinsun)
[17:17:54] <mgedmin> flag values as flags?
[17:18:36] <mgedmin> ah, I see what you mean
[17:18:55] *** Joins: Xardas (~Xardas@149.233.51.127)
[17:19:08] <mgedmin> if you have an option --foo that requires 1 arg, and you say myscript --foo --bar, it complains about --bar being an unknown option
[17:19:17] *** Quits: freeman_h1 (~freeman_h@cpc94282-ward11-2-0-cust375.10-2.cable.virginm.net) (Read error: Connection reset by peer)
[17:19:19] *** Quits: jinsun__ (~jinsun@user/jinsun) (Ping timeout: 260 seconds)
[17:19:28] <mgedmin> and you have to do --foo=--bar to pass the text '--bar' as the value for the option --foo
[17:19:40] <mgedmin> hmmm I think I actually like it
[17:20:03] *** Joins: yhnujmikV (~yhnujmikV@185.195.233.162)
[17:20:09] <mgedmin> in the face of ambiguity refuse the temptation to guess and all that
[17:22:08] *** Quits: tomeaton17 (~tomeaton1@2a0c:5bc0:40:2e2f:c50d:a851:5c8f:3d64) (Ping timeout: 250 seconds)
[17:22:16] *** Joins: Moosadee (~Moosadee@216.185.233.27)
[17:22:38] *** Joins: Lando-SpacePimp (~Lando-Spa@user/lando-spacepimp)
[17:24:15] *** Joins: nyah (~nyah@05453449.skybroadband.com)
[17:24:45] *** Joins: cdown_ (~cdown@user/cdown)
[17:24:50] <Swayze> well experimentation often yields as much success as thought experiments :p
[17:25:01] <Swayze> i'd say guess but prepare to be wrong
[17:25:07] <Swayze> validate your results
[17:25:26] <patchie> Is it possible to do the following to all columns in the dataset, without making new columns every time? df['new_col'] = df['text'].parallel_apply(lambda x: nltk.word_tokenize(x))
[17:25:31] <mgedmin> did posix ever standartize --long-option-names?
[17:25:56] <mgedmin> does posix allow intermixing flags with non-flag args?
[17:26:47] *** Quits: Barones (~Barones@user/Barones) (Read error: Connection reset by peer)
[17:27:34] *** Joins: fattredd (~fattredd@pool-100-16-1-70.bltmmd.fios.verizon.net)
[17:27:48] *** Quits: cdown (~cdown@user/cdown) (Ping timeout: 260 seconds)
[17:27:55] *** cdown_ is now known as cdown
[17:28:43] *** Joins: Guest48_ (~textual@2001:ee0:4081:6914:21dc:9af0:7cc1:e4dc)
[17:28:58] *** Joins: bancroft (~bancroft@user/bancroft)
[17:29:21] *** Joins: Church (~aleph@68.161.207.188)
[17:30:22] <bancroft> I have typing extensions, and it uses the package rich, but I also have ansible and it needs rich too. How can I specify a specific version for rich without adding it to my .lock file manually or adding it to my projects dependencies ?
[17:30:31] <bancroft> in python poetry
[17:30:32] *** Joins: luigibu (~luigi@93.176.153.88)
[17:30:44] <bancroft> because rich 12 doesn't work with ansible
[17:31:39] *** Joins: zen_coder (~zen_coder@2a02:8109:a280:2d8d:e082:8b12:97d8:5d28)
[17:31:41] *** Joins: reset (~reset@user/reset)
[17:31:52] *** Quits: maxzor (~maxzor@laubervilliers-657-1-70-103.w90-63.abo.wanadoo.fr) (Ping timeout: 246 seconds)
[17:32:07] <grym> rich ^=11.something, i believe is how poetry says "update not past this major version"
[17:32:20] *** Joins: wakeup (~wakeup@user/wakeup)
[17:32:48] *** Quits: bitdex (~bitdex@gateway/tor-sasl/bitdex) (Quit: = "")
[17:32:54] *** Quits: machaddr (~machaddr@a79-168-74-18.cpe.netcabo.pt) (Ping timeout: 272 seconds)
[17:33:04] <bancroft> grym: so I should add it to my deps then by doing poetry add rich==11.something?
[17:33:44] <wakeup> for questions about pandas, which channel?
[17:33:47] <grym> it should work out okay as a transitive dep, but perhaps not
[17:33:50] <grym> wakeup: here is fine
[17:34:54] *** Quits: bigRoo (~user@73.181.dsl.syd.iprimus.net.au) (Remote host closed the connection)
[17:35:57] <wakeup> so I'm trying to split a dataframe in half. The first half contains all rows such that the column is less than the median. The other half contains all other rows. Now, the median should be the element that is in the middle of the column, if the column is sorted. So, this should really split the dataframe in half. But in my case, it doesn't. One
[17:35:58] <wakeup> half has more elements than the other
[17:36:52] <wakeup> I'm doing it like this https://bpa.st/TKUA
[17:37:01] *** Joins: GreenResponse (~tomek@r-45-155-148-237.gpon.bialnet.pl)
[17:37:08] <grym> wakeup: what's the median value of 1,2,3,4,5,6,8,9
[17:37:36] <wakeup> I know what is the median dude
[17:37:42] <wakeup> just average the 2 elements in the middle
[17:37:45] <grym> ok.
[17:37:53] <grym> is 4.5 a valid index into a dataframe
[17:38:17] <wakeup> but I am not using indices, but a mask
[17:38:19] *** Quits: dante-as (~dante-as@188.26.94.194) (Quit: Client closed)
[17:38:20] <wakeup> you can see that
[17:38:26] <wakeup> in the code that I shared above
[17:39:14] <grym> hmm.  do you have nans in there?
[17:39:29] <grym> around 30 of them?
[17:39:43] *** Quits: OMGOMG (~bobrobert@poppy.ifi.uio.no) (Quit: Lost terminal)
[17:39:44] *** Quits: fattredd (~fattredd@pool-100-16-1-70.bltmmd.fios.verizon.net) (Quit: Leaving)
[17:39:54] <wakeup> no
[17:39:59] *** Quits: Guest48_ (~textual@2001:ee0:4081:6914:21dc:9af0:7cc1:e4dc) (Quit: Textual IRC Client: www.textualapp.com)
[17:40:06] <wakeup> print(df[select_column].hasnans) is false
[17:40:09] <grym> or infs?
[17:40:11] *** Joins: favadi (~favadi@2001:ee0:4081:6914:21dc:9af0:7cc1:e4dc)
[17:40:22] *** Joins: pretty_dumm_guy (trottel@gateway/vpn/protonvpn/prettydummguy/x-88029655)
[17:40:47] *** Quits: wyclif (~wyclif@user/wyclif) (Ping timeout: 260 seconds)
[17:41:41] <wakeup> no, I don't think so
[17:42:01] *** Joins: OMGOMG (~bobrobert@poppy.ifi.uio.no)
[17:42:07] *** Joins: wyclif (~wyclif@user/wyclif)
[17:42:13] <wakeup> I was thinking that maybe I have many elements equal to the median and that causes a problem, but the numbers do not match
[17:43:12] <wakeup> maybe I can just split the dataframe according to the number of elements
[17:43:14] <wakeup> by index
[17:43:20] <wakeup> I sort it anyway, so
[17:43:54] <wakeup> I need to use iloc I think
[17:44:10] <grym> maybe.  this is the point where i start print-debugging, i think
[17:44:14] *** Quits: fling (~fling@user/fling) (Quit: ZNC 1.8.2+deb2+b1 - https://znc.in)
[17:44:38] <grym> or its spiritual equivalent of a breakpoint and messing around
[17:44:39] *** Joins: fling (~fling@user/fling)
[17:47:28] *** Quits: wyclif (~wyclif@user/wyclif) (Ping timeout: 272 seconds)
[17:47:41] <Jong> Is there a name of python's main thread
[17:47:46] *** Joins: wyclif (~wyclif@user/wyclif)
[17:48:33] <ivii> Why do I get double logging output from libs after setting basicConfig? https://dpaste.org/9L8L
[17:48:35] <lericson> Steve, Jong
[17:48:38] <Jong> Doesn't the Python GIL system mean there is a single "python thread" ?
[17:48:55] <lericson> no Jong, there is a single thread /with the GIL/
[17:49:07] <Jong> lericson  what's / mean?
[17:49:11] <lericson> italics
[17:49:32] *** Joins: Gotoma (~textual@ip4d14fa13.dynamic.kabel-deutschland.de)
[17:51:10] *** Joins: subopt (~subopt@2603-8081-2302-459a-d9b8-c024-16d5-2f7f.res6.spectrum.com)
[17:52:55] *** Quits: wyclif (~wyclif@user/wyclif) (Ping timeout: 260 seconds)
[17:53:18] *** Joins: wyclif (~wyclif@user/wyclif)
[17:53:23] *** Parts: PeloPelo (~kerem@85.153.141.133) ()
[17:56:01] *** Quits: nuclearg1 (~nucleargr@user/nuclearg1) (Ping timeout: 246 seconds)
[17:57:21] *** Quits: ghost43 (~ghost43@gateway/tor-sasl/ghost43) (Remote host closed the connection)
[17:57:57] *** Joins: hamburger (~hamburger@2001:448a:1082:fe6f:e51d:4c9e:662:d9eb)
[17:58:10] *** Joins: ghost43 (~ghost43@gateway/tor-sasl/ghost43)
[17:59:26] *** Quits: ghost43 (~ghost43@gateway/tor-sasl/ghost43) (Remote host closed the connection)
[17:59:35] *** Quits: kts (~kts@103.73.237.175) (Quit: Konversation terminated!)
[18:00:14] *** Joins: frmlof (~frmlof@70.243.238.191)
[18:00:37] *** Joins: Guest141 (~Guest141@88.103.7.38)
[18:01:36] <jinsun> Jong: the GIL is just a lock, and only one thread can have it at a particular point of time, but other threads can exist and do stuff that don't require the GIL
[18:01:58] *** Quits: herjazz (~herjazz@p10295192-ipngn22201marunouchi.tokyo.ocn.ne.jp) (Quit: leaving)
[18:02:18] <jinsun> most common one is waiting for IO
[18:03:21] *** Quits: cul8r (~cul8r@wkt-bband-148-66-171-9.wk.net) (Remote host closed the connection)
[18:03:32] *** Quits: Viewday115 (~Viewday@user/viewday) (Quit: Ping timeout (120 seconds))
[18:03:45] *** Joins: cul8r (~cul8r@wkt-bband-148-66-171-9.wk.net)
[18:03:51] <lericson> why would you be waiting on jupiter's 3rd moon
[18:03:53] *** Joins: ghost43 (~ghost43@gateway/tor-sasl/ghost43)
[18:04:03] <Swayze> gravity similar to earth
[18:04:09] <lericson> does it bear some astrological significance
[18:04:14] *** Joins: Viewday115 (~Viewday@user/viewday)
[18:04:33] *** Quits: roxfan (~roxfan@2a02:a03f:a2be:4f00:913a:502b:5b7b:1e2b) (Ping timeout: 260 seconds)
[18:04:56] *** Quits: jmd (~user@de.cellform.com) (Remote host closed the connection)
[18:06:24] *** Joins: switcher (~switcher@user/switcher)
[18:09:39] *** Joins: nuclearg1 (~nucleargr@user/nuclearg1)
[18:10:27] *** Joins: jesopo (~jess@libera/staff/cat/jess)
[18:10:39] *** Quits: Pickchea (~private@user/pickchea) (Ping timeout: 260 seconds)
[18:10:55] *** Joins: Liblx (~trader@2a02:810c:280:59c:f9b7:b6d6:1d66:45ce)
[18:11:06] *** Quits: Liblx (~trader@2a02:810c:280:59c:f9b7:b6d6:1d66:45ce) (Client Quit)
[18:12:08] <wakeup> wait, you could use jupiter to make presentations
[18:12:15] <wakeup> that would be a great view from there
[18:14:36] *** jesopo is now known as jess
[18:14:42] *** Quits: nuclearg1 (~nucleargr@user/nuclearg1) (Ping timeout: 272 seconds)
[18:15:58] *** Joins: MarderIII (~MarderIII@86-88-74-111.fixed.kpn.net)
[18:16:07] <hamburger> time for research asshole
[18:16:12] <hamburger> go play aiononline
[18:16:18] <hamburger> i am back to earth again now
[18:16:21] <hamburger> ... .
[18:16:22] <hamburger> now
[18:17:22] *** Quits: Forsaken87 (~quassel@ip-037-201-193-116.um10.pools.vodafone-ip.de) (Ping timeout: 246 seconds)
[18:17:37] <wakeup> that's what I call politeness hahahah
[18:17:57] <wakeup> polaitNESS
[18:18:08] <hamburger> go kids
[18:18:11] <hamburger> is research time
[18:18:15] <hamburger> just for sleep
[18:18:18] <wakeup> polytness
[18:18:21] <hamburger> and the brain and everything
[18:18:22] <wakeup> polymer
[18:18:25] <hamburger> see you there kids
[18:18:29] *** Quits: Viewday115 (~Viewday@user/viewday) (Quit: Ping timeout (120 seconds))
[18:18:33] <hamburger> grandpa wipe the whole toon too
[18:18:35] *** Joins: Liblx (~trader@2a02:810c:280:59c:f9b7:b6d6:1d66:45ce)
[18:18:38] <hamburger> let's see hmm
[18:18:39] <wakeup> you eat too many hamburgers haha
[18:18:42] *** Joins: Viewday115 (~Viewday@user/viewday)
[18:18:44] <hamburger> grandpa will be assasin than
[18:18:48] <hamburger> approve God ?
[18:18:54] <hamburger> thank you
[18:19:44] *** Quits: xcombelle (~xavie@176-139-252-198.abo.bbox.fr) (Read error: Connection reset by peer)
[18:19:47] *** Quits: kosh (~kosh@user/kosh) (Ping timeout: 250 seconds)
[18:20:28] *** Joins: xcombelle (~xavie@176-139-252-198.abo.bbox.fr)
[18:20:50] *** Joins: Sauvin (~sauvin@about/linux/staff/sauvin)
[18:20:56] *** Joins: Forsaken87 (~quassel@2a02:908:1866:e360:4d2a:597c:d813:f407)
[18:22:49] *** Quits: grooverman_ (~grooverma@179.97.175.157) (Read error: Connection reset by peer)
[18:22:49] *** Quits: _h4x0r_ (~till@user/till/x-8616149) (Remote host closed the connection)
[18:23:21] *** Quits: cul8r (~cul8r@wkt-bband-148-66-171-9.wk.net) (Remote host closed the connection)
[18:23:45] *** Joins: cul8r (~cul8r@wkt-bband-148-66-171-9.wk.net)
[18:23:47] *** Joins: grooverman (~grooverma@179.97.175.157)
[18:23:54] *** Joins: csm3105 (~csm3105@143.red-83-48-84.staticip.rima-tde.net)
[18:24:00] *** Joins: CodeMouse92 (~CodeMouse@user/codemouse92)
[18:25:28] *** Quits: Haxxa (~Haxxa@202-130-210-100.ip4.superloop.com) (Ping timeout: 272 seconds)
[18:25:32] *** Quits: Naan (~Naan@user/naan) (Ping timeout: 260 seconds)
[18:26:12] *** Joins: tomeaton17 (~tomeaton1@2a0c:5bc0:40:2e2f:c50d:a851:5c8f:3d64)
[18:26:15] *** Quits: gurkenglas (~gurkengla@dslb-178-012-018-212.178.012.pools.vodafone-ip.de) (Quit: Lost terminal)
[18:26:41] *** Joins: gurkenglas (~gurkengla@dslb-178-012-018-212.178.012.pools.vodafone-ip.de)
[18:27:36] *** Joins: cdown_ (~cdown@user/cdown)
[18:27:39] *** Quits: Enitin (~Enitin@82.102.22.85) (Ping timeout: 256 seconds)
[18:30:22] *** Quits: ghost43 (~ghost43@gateway/tor-sasl/ghost43) (Remote host closed the connection)
[18:30:29] *** Quits: cdown (~cdown@user/cdown) (Ping timeout: 256 seconds)
[18:30:32] *** cdown_ is now known as cdown
[18:30:45] *** Joins: ghost43 (~ghost43@gateway/tor-sasl/ghost43)
[18:30:55] *** Quits: white2 (~mahengrui@user/mahengrui1) (Read error: Connection reset by peer)
[18:30:59] *** Quits: stockh0lm (~Andreas@p200300d2c70cd40090355f9938920f5d.dip0.t-ipconnect.de) (Ping timeout: 252 seconds)
[18:31:03] *** Quits: MarderIII (~MarderIII@86-88-74-111.fixed.kpn.net) (Ping timeout: 256 seconds)
[18:31:18] *** Quits: cdman (~dcm@user/dmc/x-4369397) (Quit: Leaving)
[18:31:28] *** Joins: white2 (~mahengrui@user/mahengrui1)
[18:31:55] *** Quits: raym (~raym@user/raym) (Remote host closed the connection)
[18:31:57] *** Joins: CodePoint (~CodePoint@107-208-128-79.lightspeed.tukrga.sbcglobal.net)
[18:32:12] *** Joins: birkoff (birkoff@thunderirc.net)
[18:32:13] *** Quits: birkoff (birkoff@thunderirc.net) (Changing host)
[18:32:13] *** Joins: birkoff (birkoff@user/birkoff)
[18:32:14] *** Quits: Liblx (~trader@2a02:810c:280:59c:f9b7:b6d6:1d66:45ce) (Ping timeout: 260 seconds)
[18:32:17] <nedbat> everything ok in here?
[18:32:26] *** Joins: Hunterkll (~hunterkll@2001:470:8b06:100:2958:1194:aedf:1fa3)
[18:32:44] <Swayze> lol
[18:33:01] *** Quits: flower_ (~archie@217-123-218-6.cable.dynamic.v4.ziggo.nl) (Ping timeout: 250 seconds)
[18:33:11] <Swayze> some rogue chatting going down
[18:33:52] *** Joins: Liblx (~trader@ip4d15ff09.dynamic.kabel-deutschland.de)
[18:35:01] *** Quits: paul424 (~tom@apn-95-41-75-186.dynamic.gprs.plus.pl) (Remote host closed the connection)
[18:35:08] *** Joins: flower_ (~archie@217-123-218-6.cable.dynamic.v4.ziggo.nl)
[18:35:46] *** Joins: Tjips (~Tjips@196.252.49.112)
[18:37:10] *** Quits: andrewSC (~andrewSC@archlinux/trusteduser/andrewSC) (Quit: brb)
[18:37:13] *** Quits: yhnujmikV (~yhnujmikV@185.195.233.162) (Ping timeout: 260 seconds)
[18:37:52] *** Quits: luigibu (~luigi@93.176.153.88) (Quit: WeeChat 3.5)
[18:38:07] *** Quits: flower_ (~archie@217-123-218-6.cable.dynamic.v4.ziggo.nl) (Client Quit)
[18:38:43] <nedbat> btw, if anyone wants to earn some SO rep points:  https://stackoverflow.com/questions/71660067/after-rendering-a-jinja2-template-can-i-get-the-set-values
[18:38:57] *** Joins: yhnujmikV (~yhnujmikV@45.83.220.203)
[18:39:07] *** Joins: Haxxa (~Haxxa@202-65-73-230.ip4.superloop.com)
[18:39:33] <hamburger> hey yah all
[18:39:36] *** Joins: chris_99 (uid26561@id-26561.lymington.irccloud.com)
[18:39:44] <hamburger> since you all choose to be in irc let's go
[18:39:46] <hamburger> and chat
[18:39:49] <Gotoma> Hi Hamburger
[18:40:11] <The-Compiler> hamburger: please remember to keep this channel on-topic though
[18:40:15] <hamburger> hi gotoma
[18:40:25] <hamburger> i am just back to earth
[18:40:28] <hamburger> what's up all
[18:40:40] <hamburger> nah i don't like your style The-Compiler
[18:40:50] <hamburger> you want me to downgrade you to tk ?
[18:40:56] <nedbat> hamburger: please try harder to understand the tone of the room
[18:40:59] *** Quits: switcher (~switcher@user/switcher) (Ping timeout: 260 seconds)
[18:41:03] <The-Compiler> nedbat: hm, I do something vaguely similar in qutebrowser, though just finding all attributes being accessed from the template
[18:41:40] <lericson> nedbat: pretty sure jinja templates compile to python code objects
[18:41:49] <The-Compiler> nedbat: basically you can parse the template and get some kind of AST, I bet you can get the {% set %} stuff out there too
[18:41:55] <The-Compiler> lericson: pretty sure they don't
[18:42:02] <lericson> really
[18:42:04] <lericson> they used to
[18:42:10] <chris_99> Hi, i'm just wondering, i have a folder full of example scripts, should the setup.py script install those, maybe using the  'packages' list, or is there another way?
[18:42:10] *** Joins: tWqaq (~tWqaq@240e:389:5d41:5900:b21b:c6f6:b71f:8613)
[18:42:16] <The-Compiler> lericson: I thought that was what mako did, but not jinja
[18:42:39] *** Quits: impermanence (~impermane@c-75-73-193-204.hsd1.mn.comcast.net) (Quit: Connection closed)
[18:43:15] <The-Compiler> nedbat: https://github.com/qutebrowser/qutebrowser/blob/v2.4.0/qutebrowser/utils/jinja.py#L146-L175 and https://github.com/qutebrowser/qutebrowser/blob/v2.4.0/tests/unit/utils/test_jinja.py#L132-L141
[18:43:34] *** Joins: nuclearg1 (~nucleargr@user/nuclearg1)
[18:43:45] <Tjips> I'm building a package (say `foo`) with a subpackage (say `bar`, with modules `main.py` and `extra.py`), and I want to code it such that I can do `import foo.bar as bar` and have `extra` and <everything in `main.py`> in `bar`'s namespace but _not_ `main` itself (this is aimed at sensible use of the package via ipython). Would it be a bad idea to just rename `main.py` to `_main.py` and put `from ._main.py import *` and `from . import extra` in `bar`'s __init__.
[18:43:53] *** Joins: raym (~raym@user/raym)
[18:44:09] *** Joins: Vornicus (~Vornicus@2603-8000-5d07-7ef0-6182-beee-d0fd-5928.res6.spectrum.com)
[18:44:14] *** hamburger is now known as ndut
[18:44:38] <Tjips> ?
[18:45:02] <The-Compiler> nedbat: for context, qutebrowser uses this to know which config variables a template (used for styling GUI elements) accesses, so that it knows which stylesheets to regenerate/reapply when the user changed a setting (rather than reapplying all of them, which is too slow)
[18:45:19] *** Joins: She (~daemoness@she/her)
[18:45:33] *** Joins: aknot (~aknot@2603-900a-1503-17bb-7804-089d-5a92-e868.inf6.spectrum.com)
[18:45:37] <nedbat> The-Compiler: sounds kind of like what I need
[18:45:51] *** Parts: She (~daemoness@she/her) (Looting data, don't mind me~)
[18:45:58] <nedbat> though I also want the values...
[18:46:03] *** Joins: kosh (~kosh@user/kosh)
[18:46:17] <The-Compiler> I suppose those would be in the AST too
[18:46:43] <The-Compiler> gets harder if they are dynamically generated though, as this is essentially static analysis of the template
[18:47:13] *** Quits: Gotoma (~textual@ip4d14fa13.dynamic.kabel-deutschland.de) (Quit: Textual IRC Client: www.textualapp.com)
[18:47:44] <lericson> The-Compiler: lol yes it does
[18:48:15] *** Quits: fling (~fling@user/fling) (Ping timeout: 240 seconds)
[18:48:18] *** Quits: nuclearg1 (~nucleargr@user/nuclearg1) (Ping timeout: 260 seconds)
[18:48:20] <lericson> now if you can actually get at the scope
[18:48:20] *** Joins: mrgz (~mrgz@201-42-0-191.dsl.telesp.net.br)
[18:48:29] <lericson> i think you may in that case have to do some stack frame traversal
[18:48:32] <lericson> so it wouldn't be pretty
[18:48:33] *** Quits: Tjips (~Tjips@196.252.49.112) (Remote host closed the connection)
[18:49:30] <lericson> to be clear i don't know if it actually creates code objects, but it does convert it to python code
[18:49:41] *** Joins: Anarkitty (~c0a801f8@user/Anarkitty)
[18:49:55] *** Joins: mefistofeles (~mefistofe@user/mefistofeles)
[18:50:20] *** Joins: jay-m126 (~jay-m@d75-159-62-172.abhsia.telus.net)
[18:50:34] *** Quits: rpkilby (~rpkilby@c-24-20-208-106.hsd1.or.comcast.net) ()
[18:51:32] *** Joins: fling (~fling@user/fling)
[18:51:51] *** Joins: rpkilby (~rpkilby@c-24-20-208-106.hsd1.or.comcast.net)
[18:52:19] *** Joins: [itchyjunk] (~itchyjunk@user/itchyjunk/x-7353470)
[18:53:01] *** Joins: stockh0lm (~Andreas@p200300d2c70cd40090355f9938920f5d.dip0.t-ipconnect.de)
[18:54:59] *** Quits: konfusedagain (~konfuseda@2409:4050:e0f:2ee9:f157:1419:b470:fba4) (Ping timeout: 260 seconds)
[18:55:45] *** Joins: nickel8448 (~rahulwadh@147.80.76.34.bc.googleusercontent.com)
[18:56:19] *** Joins: qlixed (~qlixed@181.44.129.13)
[18:56:23] *** Joins: SaltHilStroller_ (~SaltHillS@206.223.160.26)
[18:58:39] *** Quits: ndut (~hamburger@2001:448a:1082:fe6f:e51d:4c9e:662:d9eb) (Quit: Leaving)
[18:58:55] *** Quits: cvmn (~caveman@gateway/tor-sasl/caveman) (Ping timeout: 240 seconds)
[18:59:17] <The-Compiler> nedbat: hm, I can't seem to make it work - there's https://jinja.palletsprojects.com/en/3.0.x/api/#the-meta-api too, but it only has a thing to find undeclared vars :D
[18:59:49] <octav1a> Can anyone help me decode the GCC problem here?  https://bpa.st/XJOQ
[18:59:58] *** Joins: Tjips (~Tjips@196.252.49.112)
[19:00:23] *** Quits: hanetzer (~hanetzer@user/hanetzer) (Quit: WeeChat 3.4.1)
[19:00:25] <octav1a> I see a number of "too few arguments to function" but I'm unsure how I would even go about solving what sounds like a source code h5py problem
[19:00:35] <The-Compiler> nedbat: maybe something like https://github.com/pallets/jinja/blob/3.1.1/src/jinja2/meta.py#L14-L54 could get you there
[19:00:39] <Tjips> Got dc'd. Did I miss an answer to my question?
[19:00:51] <dTal> "too few arguments to function" sounds like my ex
[19:01:09] <lericson> The-Compiler: https://github.com/pallets/jinja/blob/bb7f3a51091d91010deb1e01e69f4f255d3b3eb6/src/jinja2/environment.py#L718
[19:01:12] <lericson> fyi
[19:01:21] *** Quits: ghost43 (~ghost43@gateway/tor-sasl/ghost43) (Remote host closed the connection)
[19:02:09] *** Joins: ghost43 (~ghost43@gateway/tor-sasl/ghost43)
[19:02:12] *** Quits: sreve_ (~quassel@p4ff44f3f.dip0.t-ipconnect.de) (Ping timeout: 272 seconds)
[19:02:33] *** Joins: akk (~akk@75.161.150.5)
[19:02:48] <The-Compiler> lericson: that just seems to mean "skip this frame when debugging" from what I can see
[19:03:00] *** Quits: pankid (~quassel@pankid.club) (Quit: https://quassel-irc.org - Chat comfortably. Anywhere.)
[19:03:01] <The-Compiler> i.e. filtering of tracebacks
[19:03:08] <lericson> The-Compiler: uh look at what the function does
[19:03:14] <lericson> tellingly called `compile`
[19:03:26] <The-Compiler> lericson: ah, I thought you meant the decorator you linked to
[19:03:41] *** Quits: pkapp (~pkapp@2601:58c:c500:6900:86be:e48d:dd2f:66ff) (Quit: ZNC 1.7.5+deb4 - https://znc.in)
[19:03:43] <lericson> ah no
[19:03:45] *** Joins: EgonX_ (~EgonX@2601:2c6:47f:879e:f869:fc5:ffa:d4c8)
[19:03:58] *** Joins: pkapp (~pkapp@2601:58c:c500:6900:86be:e48d:dd2f:66ff)
[19:04:04] *** Joins: sreve (~quassel@p54a71c9d.dip0.t-ipconnect.de)
[19:04:04] * Tjips suspects they're muted
[19:04:08] *** Joins: pankid (~quassel@pankid.club)
[19:04:18] <The-Compiler> Tjips: nope, you are not
[19:04:26] *** Quits: EgonX (~EgonX@2601:2c6:47f:879e:1c69:4995:f8a4:2715) (Ping timeout: 260 seconds)
[19:04:34] <The-Compiler> lericson: fair, I stand corrected!
[19:04:49] <lericson> The-Compiler: you got a stand desk?
[19:04:49] <Tjips> Mmmk; just bad at asking questions then... xD
[19:04:51] <lericson> :-)
[19:05:33] *** Joins: jmd (~user@de.cellform.com)
[19:05:37] <The-Compiler> lericson: hah, funnily enough, it will get delivered next Tuesday and I can't wait!
[19:06:02] <lericson> ah i under*stand*
[19:06:03] <lericson> ho-ho-ho
[19:06:21] * lericson cranes neck over kitchen counter as he prepares baby mash
[19:06:23] <The-Compiler> long-standing fun with puns, I see
[19:07:02] *** Joins: koan (~laeruz@2a01:c23:750d:e700:bcaa:f3fc:c19f:9d28)
[19:07:41] <The-Compiler> Tjips: still trying to parse your question, too much foo and bar for my taste :D
[19:07:42] *** Quits: Xardas (~Xardas@149.233.51.127) (Quit: Client closed)
[19:07:51] <Tjips> Lemme try rephrasing: Would it be a sin if I were to hide the code for the core stuff in a subpackage in a hidden "_core.py" module?
[19:08:16] *** Quits: EgonX_ (~EgonX@2601:2c6:47f:879e:f869:fc5:ffa:d4c8) (Client Quit)
[19:08:17] <The-Compiler> Tjips: this sounds like it should work though (minus the .py in "from ._main.py import *")
[19:08:50] <koan> hello, is `asyncio.create_task` the recommended way for fire and forget coroutines or is it mandatory to keep a reference around and is so how to manage spawing many tasks in a loop?
[19:08:57] <Tjips> The-Compiler: Whoops. Thanks
[19:09:05] <The-Compiler> Tjips: seems fine to me, and _core might be a more accurate name than _main
[19:09:16] *** Joins: lakrass (~lakrass@user/lakrass)
[19:09:38] <The-Compiler> Tjips: for some inspiration, pytest actually has two separate packages (pytest and _pytest) and exposes the public part in pytest/ by importing them from _pytest/
[19:09:44] <jinsun> koan: not manadatory to keep reference around but a good idea, just stuff it in a list
[19:10:14] *** Joins: chirukodati (~chirukoda@43.225.21.196)
[19:11:03] <Tjips> The-Compiler: Ooh, I'll have a look. Perhaps _bar.py would then be even better that _core.py...
[19:11:22] <The-Compiler> ok, enough being nerdsniped by nedbat, back to qutebrowser stuff :)
[19:11:30] *** Quits: cypostres (~cypostres@user/cypostres) (Quit: Leaving)
[19:11:50] <jinsun> koan: see the part labelled as "Important:" here https://docs.python.org/3/library/asyncio-task.html#asyncio.create_task
[19:12:13] *** Quits: Hanii (~textual@2a00:23c5:c583:a300:187d:1335:db91:60e3) (Quit: My iMac has gone to sleep. ZZZzzz…)
[19:13:06] *** Joins: EgonX (~EgonX@2601:2c6:47f:879e:388c:9712:1d29:b183)
[19:13:27] <zware> koan: You probably also care somewhat about the result of the task, so adding a done callback to it to log about what happened and remove it from the list of current tasks probably wouldn't be a bad idea
[19:14:53] *** Quits: justsomeguy (~justsomeg@user/justsomeguy) (Quit: WeeChat 3.4)
[19:16:51] *** Parts: Tjips (~Tjips@196.252.49.112) ()
[19:17:08] <lericson> nedbat: isn't this exactly what you want
[19:17:08] <lericson> https://github.com/pallets/jinja/blob/bb7f3a51091d91010deb1e01e69f4f255d3b3eb6/src/jinja2/environment.py#L1454
[19:17:13] *** Joins: nuclearg1 (~nucleargr@user/nuclearg1)
[19:17:24] <lericson> Template.module
[19:17:24] *** Quits: wyclif (~wyclif@user/wyclif) (Ping timeout: 272 seconds)
[19:17:34] *** Joins: MarderIII (~MarderIII@2a02:a45a:72f1:1:39c6:a0b0:ecf6:4a3d)
[19:17:46] <lericson> also The-Compiler
[19:17:57] *** Joins: wyclif (~wyclif@user/wyclif)
[19:18:22] *** Joins: Roey (~Roey@user/Roey)
[19:18:22] *** Roey is now known as SaladExpert
[19:20:09] *** Joins: otisolsen70 (~otisolsen@xd4ed80b5.cust.hiper.dk)
[19:20:49] *** Joins: koanos (~laeruz@dynamic-078-049-112-056.78.49.pool.telefonica.de)
[19:22:14] *** Quits: MarderIII (~MarderIII@2a02:a45a:72f1:1:39c6:a0b0:ecf6:4a3d) (Client Quit)
[19:22:23] *** Quits: nuclearg1 (~nucleargr@user/nuclearg1) (Ping timeout: 256 seconds)
[19:22:27] <nedbat> lericson: hmm, that does look promising.
[19:22:59] *** Quits: fling (~fling@user/fling) (Remote host closed the connection)
[19:23:01] *** Quits: koan (~laeruz@2a01:c23:750d:e700:bcaa:f3fc:c19f:9d28) (Ping timeout: 240 seconds)
[19:23:16] *** Joins: fling (~fling@user/fling)
[19:23:18] *** Quits: wyclif (~wyclif@user/wyclif) (Ping timeout: 260 seconds)
[19:23:42] *** Joins: wyclif (~wyclif@user/wyclif)
[19:23:54] <nedbat> lericson: there's a thing called "exported_vars" that is empty, even though the docs say that "set" exports a variable....
[19:25:03] <lericson> nedbat: https://github.com/pallets/jinja/blob/20eb7f5e33120f1717b78bdf85540ab75631187a/src/jinja2/compiler.py#L819
[19:25:20] <lericson> i'm guessing that if condition is not fulfilled
[19:26:05] <lericson> what about context.vars though?
[19:26:15] <lericson> also seems exported_vars would be a set
[19:26:17] *** Joins: MikZyth (~MikZyth@host-243-154-66-217.spbmts.ru)
[19:26:39] <nedbat> lericson: exported_vars is an empty set, and vars is an empty dict (for me)
[19:27:31] *** Joins: gevreeen_ (~gevreeen@2001:470:67:326:3905:3b4d:53b3:1eb6)
[19:27:46] <lericson> ah there's a huge if at the top also
[19:27:56] <lericson> `or not vars` hmm
[19:28:18] *** Quits: zen_coder (~zen_coder@2a02:8109:a280:2d8d:e082:8b12:97d8:5d28) (Quit: Konversation terminated!)
[19:28:37] *** Quits: wyclif (~wyclif@user/wyclif) (Ping timeout: 256 seconds)
[19:29:13] *** Joins: wyclif (~wyclif@user/wyclif)
[19:30:56] *** Quits: gevreeen (~gevreeen@2001:470:67:326:7c6b:19ca:beb4:741f) (Ping timeout: 260 seconds)
[19:30:57] *** gevreeen_ is now known as gevreeen
[19:31:56] *** Joins: Guest65 (~Guest65@152.228.60.113)
[19:32:28] *** Quits: PublicWiFi (~PublicWiF@user/publicwifi) (Quit: WeeChat 3.5)
[19:33:43] <nedbat> lericson: I think template.module might be the answer I need, thanks
[19:33:48] *** Joins: MerrinX (~merrinx@ti0028a400-3686.bb.online.no)
[19:33:58] <nedbat> i don't understand why the other things aren't working, but I only need one thing to work :)
[19:33:59] *** Joins: runelind (~runelind@user/runelind)
[19:34:22] *** Quits: wyclif (~wyclif@user/wyclif) (Ping timeout: 260 seconds)
[19:34:30] *** Quits: csm3105 (~csm3105@143.red-83-48-84.staticip.rima-tde.net) (Ping timeout: 272 seconds)
[19:34:43] *** Joins: wyclif (~wyclif@user/wyclif)
[19:34:47] *** Quits: hans (uid529825@id-529825.helmsley.irccloud.com) (Quit: Connection closed for inactivity)
[19:35:31] <lericson> nedbat: i'd bet if you looked at the generated source you'd see why
[19:35:48] <lericson> as with all things programming, i try to just go straight to the source
[19:35:56] *** Joins: PublicWiFi (~PublicWiF@user/publicwifi)
[19:36:01] <lericson> english is an imperfect api over code ;)
[19:36:25] *** Joins: effg (~effgee@91.220.171.155)
[19:36:41] <lericson> joke's on me though because i do classic-style tensorflow, so your code really only generates the graph that then actually computes things...
[19:36:53] <lericson> it's like simulating a simulator
[19:37:16] *** Joins: csm3105 (~csm3105@143.red-83-48-84.staticip.rima-tde.net)
[19:37:32] <lericson> oh and that graph is executed on a python interpreter, which itself is actually run on the machine via C
[19:37:38] <lericson> makes for some pretty interesting debugging
[19:38:14] *** Quits: PublicWiFi (~PublicWiF@user/publicwifi) (Client Quit)
[19:38:45] *** Joins: nuclearg1 (~nucleargr@user/nuclearg1)
[19:39:21] *** Quits: Guest65 (~Guest65@152.228.60.113) (Quit: Client closed)
[19:39:37] *** Quits: wyclif (~wyclif@user/wyclif) (Ping timeout: 246 seconds)
[19:39:46] *** Joins: PublicWiFi (~PublicWiF@user/publicwifi)
[19:40:19] *** Joins: wyclif (~wyclif@user/wyclif)
[19:41:34] *** Joins: KeybInterrupt (~quassel@dslb-002-200-104-234.002.200.pools.vodafone-ip.de)
[19:41:54] <wakeup> I have durations in a pandas dataframe as strings like "00:17:48". I would like to form the "average" duration
[19:42:01] <wakeup> how would you approach this?
[19:43:09] <lericson> wakeup: timedelta and just sum
[19:43:11] <lericson> and divide
[19:43:25] *** Quits: ghost43 (~ghost43@gateway/tor-sasl/ghost43) (Remote host closed the connection)
[19:43:25] *** Quits: koanos (~laeruz@dynamic-078-049-112-056.78.49.pool.telefonica.de) (Quit: Leaving)
[19:43:47] *** Joins: ghost43 (~ghost43@gateway/tor-sasl/ghost43)
[19:43:50] <lericson> >>> (timedelta(hours=2) + timedelta(seconds=20)) / 2.0
[19:43:50] <lericson> datetime.timedelta(seconds=3610)
[19:44:24] <lericson> as for how to make your string into a timedelta
[19:44:25] <wakeup> we can use mean()
[19:44:25] <lericson> ¯\_(ツ)_/¯
[19:44:27] *** Quits: Ergo^ (~ergo@91.238.59.144) (Remote host closed the connection)
[19:44:38] *** Quits: csm3105 (~csm3105@143.red-83-48-84.staticip.rima-tde.net) (Ping timeout: 272 seconds)
[19:44:47] <jinsun> maybe pd.to_datetime(your_series).mean()
[19:44:48] <wakeup> with to_datetime it doesn't work, but it works with to_timedelta
[19:45:05] *** Quits: pycurious (~Adium@user/pycurious) (Quit: Leaving.)
[19:45:13] *** Quits: wyclif (~wyclif@user/wyclif) (Ping timeout: 246 seconds)
[19:45:49] <wakeup> actually, it works with both
[19:45:53] *** Joins: wyclif (~wyclif@user/wyclif)
[19:45:55] <wakeup> not sure why I was getting an error before
[19:46:15] <wakeup> but the question is: is mean() doing the right thing
[19:46:31] <lericson> i was always told you shouldn't be mean
[19:46:58] <jinsun> yeah I almost didn't expect it to work, not sure what it is doing
[19:47:30] <jinsun> probably taking the mean of the unix timestamp
[19:48:20] <wakeup> my durations are in the format HOURS:MINUTES:SECONDS
[19:48:25] <lericson> surely taking the mean of datetimes is just the obvious thing?
[19:48:30] <wakeup> I'm using pd.to_datetime(df[select_column], format='%H:%M:%S')
[19:48:44] <wakeup> but it returns this: 1900-01-01 00:07:48.780000512
[19:48:44] *** Quits: CodePoint (~CodePoint@107-208-128-79.lightspeed.tukrga.sbcglobal.net) (Quit: CodePoint struts into the sunset on the beach.)
[19:48:50] <wakeup> i.e. with the year too
[19:48:54] *** Joins: csm3105 (~csm3105@143.red-83-48-84.staticip.rima-tde.net)
[19:49:43] <jinsun> yes that is how strptime works, it starts with a default value and updates it with the numbers from the string
[19:49:58] <jinsun> and default is 1970-01-01 00:00:00
[19:50:14] <wakeup> well, I didn't specify the year
[19:50:24] <wakeup> why does it change to 1900 then?
[19:50:34] <wakeup> if the default is 1970
[19:50:40] *** Joins: pycurious (~Adium@user/pycurious)
[19:50:46] <jinsun> oh it's 1900
[19:50:48] <wakeup> anyway, I would like to display only the hours, minutes and seconds
[19:51:22] <jinsun> maybe pandas is trying to be more like excel
[19:52:26] *** Joins: srg (~srg@user/srg)
[19:52:29] <jinsun> pd.to_datetime(df[select_column], format='%H:%M:%S').dt.time
[19:52:35] *** Quits: fling (~fling@user/fling) (Ping timeout: 240 seconds)
[19:53:05] <jinsun> that remvoes the date part and gives a series of datetime.time objects
[19:53:16] *** Quits: pretty_dumm_guy (trottel@gateway/vpn/protonvpn/prettydummguy/x-88029655) (Quit: WeeChat 3.5)
[19:53:53] *** Quits: grooverman (~grooverma@179.97.175.157) (Read error: Connection reset by peer)
[19:54:17] *** Quits: pvergain (~Thunderbi@2a01:e0a:223:690:9ae7:53b8:7ea7:4c7f) (Quit: pvergain)
[19:54:24] *** Joins: fling (~fling@user/fling)
[19:54:50] *** Joins: grooverman (~grooverma@179.97.175.157)
[19:55:14] <jinsun> wakeup: okay default is 1900 actually not 1970, so not something that pandas is doing
[19:55:24] <jinsun> you can find it by running datetime.datetime.strptime("", "")
[19:56:11] *** Joins: gareppa (~gareppa@user/gareppa)
[19:56:40] *** Quits: Thanatos (~Thanatos@ec2-54-148-37-124.us-west-2.compute.amazonaws.com) (Ping timeout: 272 seconds)
[19:56:44] *** Quits: gareppa (~gareppa@user/gareppa) (Remote host closed the connection)
[19:57:03] <wakeup> I can call .dt.time on the result of pd.to_datetime
[19:57:08] <wakeup> but then I cannot compute mean on that
[19:57:08] *** Joins: Thanatos (~Thanatos@ec2-54-148-37-124.us-west-2.compute.amazonaws.com)
[19:57:44] *** Joins: paul424 (~tom@ip-5-172-236-200.multi.internet.cyfrowypolsat.pl)
[19:57:48] <jinsun> get mean first then do .time() on that
[19:57:49] *** Joins: ramprax (~ramprax@49.204.134.158)
[19:58:02] *** Joins: MRDPZK (~MRDPZK@d205-250-152-220.bchsia.telus.net)
[19:58:06] *** Quits: csm3105 (~csm3105@143.red-83-48-84.staticip.rima-tde.net) (Quit: Leaving)
[19:58:27] <wakeup> AttributeError: 'Timedelta' object has no attribute 'time'
[19:58:51] <jinsun> did you do pd.to_datetime or pd.to_timedelta?
[19:59:11] *** Joins: lbalhar (~lbalhar@78-80-120-176.customers.tmcz.cz)
[19:59:16] <jinsun> .time() works for datetime not timedelta
[19:59:20] *** Quits: gproto23 (~gproto23@user/gproto23) (Read error: Connection reset by peer)
[19:59:21] *** Quits: ghost43 (~ghost43@gateway/tor-sasl/ghost43) (Remote host closed the connection)
[19:59:34] *** Joins: ghost43 (~ghost43@gateway/tor-sasl/ghost43)
[20:00:08] *** Quits: MRDPZK (~MRDPZK@d205-250-152-220.bchsia.telus.net) (Client Quit)
[20:00:15] <jinsun> with timedelta you can do .total_seconds()
[20:00:37] *** Quits: jay-m126 (~jay-m@d75-159-62-172.abhsia.telus.net) (Ping timeout: 246 seconds)
[20:00:45] <jinsun> then convert to HH:MM:SS yourself by divmoding with 60
[20:00:56] *** Joins: aghast (~aghast@2607:fb91:bd0b:1329:a0d6:4979:f73c:e2ec)
[20:01:06] *** Joins: roxfan (~roxfan@2a02:a03f:a2be:4f00:cde9:ec1e:3b73:a5d6)
[20:01:43] <jinsun> I'd be more comfortable with that really, since the random years in datetime are a bit icky
[20:02:12] *** Quits: nemexis (~nemexis@193-62-201-31.ftth.glasoperator.nl) (Remote host closed the connection)
[20:02:13] *** Quits: elastic_dog (~elastic_d@2a01:118f:822:9c00:f583:aa51:9ad4:d4fb) (Ping timeout: 240 seconds)
[20:02:24] <Repiphany> datetime wouldn't handle durations larger than 24 hours
[20:02:30] *** Joins: jay-m126 (~jay-m@gateway/vpn/pia/jay-m126)
[20:02:46] *** Quits: slav0nic (slav0nic@python.su) (Ping timeout: 260 seconds)
[20:02:51] *** Quits: chirukodati (~chirukoda@43.225.21.196) (Quit: Client closed)
[20:03:25] *** Joins: zen_coder (~zen_coder@2a02:8109:a280:2d8d:e082:8b12:97d8:5d28)
[20:03:26] *** Joins: Barones (~Barones@user/Barones)
[20:03:28] <jinsun> oh yeah, even better reason to go with timedelta
[20:03:31] *** Joins: FluffyMask (~masque@user/fluffymask)
[20:03:33] *** Joins: slav0nic (slav0nic@python.su)
[20:03:49] *** Quits: wakeup (~wakeup@user/wakeup) (Quit: Client closed)
[20:03:51] <lericson> so we're 360° noscoped back to my original solution then
[20:05:10] *** Joins: Guest65 (~Guest65@152.228.60.113)
[20:05:15] *** Joins: ckdCreations (~ckdCreati@147.55.130.35)
[20:05:18] *** Parts: Guest65 (~Guest65@152.228.60.113) ()
[20:06:14] *** Quits: pycurious (~Adium@user/pycurious) (Quit: Leaving.)
[20:06:15] *** Quits: Thanatos (~Thanatos@ec2-54-148-37-124.us-west-2.compute.amazonaws.com) (Remote host closed the connection)
[20:06:41] *** Joins: Thanatos (~Thanatos@ec2-54-148-37-124.us-west-2.compute.amazonaws.com)
[20:07:30] *** Quits: rsx (~dummy@ppp-188-174-147-44.dynamic.mnet-online.de) (Quit: rsx)
[20:07:36] *** Joins: pycurious (~Adium@user/pycurious)
[20:07:44] *** Joins: dante-as (~dante-as@188.26.94.194)
[20:08:12] *** Joins: Deana (~Deana@90.151.89.204)
[20:08:17] *** Parts: chris_99 (uid26561@id-26561.lymington.irccloud.com) ()
[20:08:53] *** Quits: jay-m126 (~jay-m@gateway/vpn/pia/jay-m126) (Ping timeout: 252 seconds)
[20:09:14] *** Joins: elastic_dog (~elastic_d@2a01:118f:822:9c00:f583:aa51:9ad4:d4fb)
[20:09:22] *** Quits: ssbr (~ssbr@python/site-packages/ssbr) (Ping timeout: 260 seconds)
[20:09:49] *** Quits: lbalhar (~lbalhar@78-80-120-176.customers.tmcz.cz) (Ping timeout: 240 seconds)
[20:10:38] *** Joins: jay-m126 (~jay-m@gateway/vpn/pia/jay-m126)
[20:10:40] *** Quits: ayustae (Thunderbir@gateway/vpn/protonvpn/ayustae) (Quit: ayustae)
[20:11:17] *** Joins: magla (~gelignite@d5362fd7.access.ecotel.net)
[20:11:35] *** Joins: BASHitup (~richard@user/yippeekaiyay)
[20:12:43] <dante-as> Hi guys, If I am adding the logging handlers as `self.logger.addHandler(handler.use())` I have the same timestamp for all handlers. Should I reset somehow the formatter?
[20:15:29] <han-solo> nedbat: do you only need the `{'number': 42}` ?
[20:16:07] *** Joins: Oddity (~Oddity@user/oddity)
[20:17:02] *** SaladExpert is now known as Roey
[20:18:59] *** Quits: mon_aaraj (~MonAaraj@user/mon-aaraj/x-4416475) (Ping timeout: 260 seconds)
[20:19:28] *** Quits: Barones (~Barones@user/Barones) (Quit: Leaving)
[20:20:45] *** Joins: mon_aaraj (~MonAaraj@user/mon-aaraj/x-4416475)
[20:21:09] *** Joins: ovnicraft (~ovnicraft@corp-179-49-44-28.uio.puntonet.ec)
[20:22:08] *** Joins: elastic_1 (~elastic_d@2a01:118f:822:9c00:f583:aa51:9ad4:d4fb)
[20:22:13] *** Quits: ovnicraft (~ovnicraft@corp-179-49-44-28.uio.puntonet.ec) (Client Quit)
[20:22:39] *** Quits: elastic_dog (~elastic_d@2a01:118f:822:9c00:f583:aa51:9ad4:d4fb) (Ping timeout: 250 seconds)
[20:22:41] <han-solo> oh, hey, you could get both, it seems
[20:23:24] <nedbat> han-solo: i want all the locals ideally.
[20:23:55] *** Quits: elastic_1 (~elastic_d@2a01:118f:822:9c00:f583:aa51:9ad4:d4fb) (Client Quit)
[20:24:17] *** Joins: elastic_dog (~elastic_d@2a01:118f:822:9c00:f583:aa51:9ad4:d4fb)
[20:24:34] *** Joins: ovnicraft (~ovnicraft@corp-179-49-44-28.uio.puntonet.ec)
[20:24:43] *** Quits: favadi (~favadi@2001:ee0:4081:6914:21dc:9af0:7cc1:e4dc) (Quit: My MacBook has gone to sleep. ZZZzzz…)
[20:24:55] *** Quits: r0073rr0r (~MyH3e@user/r0073rr0r) (Quit: ZNC 1.8.2 - https://znc.in)
[20:24:58] *** Joins: Gustavo6046 (~Gustavo60@user/gustavo6046)
[20:25:11] *** Quits: pycurious (~Adium@user/pycurious) (Quit: Leaving.)
[20:25:31] *** Quits: Belxjander (~Belxjande@p1575007-ipoe.ipoe.ocn.ne.jp) (Ping timeout: 260 seconds)
[20:25:34] *** Joins: Bjander (~Belxjande@p1575007-ipoe.ipoe.ocn.ne.jp)
[20:25:40] *** Joins: r0073rr0r (~MyH3e@cable-24-135-125-115.dynamic.sbb.rs)
[20:25:40] *** Quits: r0073rr0r (~MyH3e@cable-24-135-125-115.dynamic.sbb.rs) (Changing host)
[20:25:40] *** Joins: r0073rr0r (~MyH3e@user/r0073rr0r)
[20:26:32] *** Bjander is now known as Belxjander
[20:26:47] <han-solo> gotcha
[20:26:54] *** Quits: Gustavo6046 (~Gustavo60@user/gustavo6046) (Max SendQ exceeded)
[20:27:15] *** Joins: Gustavo6046 (~Gustavo60@user/gustavo6046)
[20:27:28] *** Quits: sharperguy (~sharpergu@fnord.cryptophone.de) (Ping timeout: 260 seconds)
[20:27:37] *** Joins: PedroG2 (~android@gav8.hipkapi.org)
[20:27:37] *** Quits: MajorBiscuit (~MajorBisc@c-001-024-034.client.tudelft.eduvpn.nl) (Quit: WeeChat 3.4)
[20:28:40] *** Quits: dante-as (~dante-as@188.26.94.194) (Quit: Client closed)
[20:28:59] *** Joins: sharperguy (~sharpergu@88.130.221.221)
[20:30:07] *** Quits: neromm[m] (~nerommmon@2001:470:69fc:105::1:75a5) (Quit: You have been kicked for being idle)
[20:31:41] <PedroG2> Python3 + DNF/Yum question: I have a list of rpm names. How to sort them given they have 'epoch', 'version', 'release', 'arch'. This is on centos 8.
[20:32:17] *** Joins: grooverman_ (~grooverma@179.97.175.157)
[20:33:09] *** Joins: nemexis (~nemexis@193-62-201-31.ftth.glasoperator.nl)
[20:33:33] *** Joins: sobkas (~sobkas@95.175.17.217)
[20:34:32] *** Joins: aclark (~aclark@pool-108-51-184-139.washdc.fios.verizon.net)
[20:34:40] *** Quits: grooverman (~grooverma@179.97.175.157) (Ping timeout: 272 seconds)
[20:34:41] *** Quits: aclark (~aclark@pool-108-51-184-139.washdc.fios.verizon.net) (Client Quit)
[20:35:14] *** Joins: aclark (~aclark@pool-108-51-184-139.washdc.fios.verizon.net)
[20:35:48] *** Quits: enoq (~enoq@2a05:1141:1f5:5600:b9c9:721a:599:bfe7) (Quit: enoq)
[20:37:15] <nedbat> PedroG2: what do the names look like?
[20:37:22] *** Quits: mat001 (~mat001@c-71-202-208-66.hsd1.ca.comcast.net) (Read error: Connection reset by peer)
[20:37:56] <PedroG2> ['authselect-compat-1.2.2-3.el8.x86_64','libnsl2-1.2.0-2.20180605git4a062cf.el8.x86_64','python3-ptyprocess-0.5.2-4.el8.noarch','elfutils-libs-0.186-1.el8.x86_64']
[20:37:59] *** Joins: mat001 (~mat001@72.28.108.216)
[20:38:01] *** Quits: nemexis (~nemexis@193-62-201-31.ftth.glasoperator.nl) (Ping timeout: 250 seconds)
[20:38:26] *** Quits: palasso (~palasso@user/palasso) (Remote host closed the connection)
[20:38:50] *** Quits: Thanatos (~Thanatos@ec2-54-148-37-124.us-west-2.compute.amazonaws.com) (Remote host closed the connection)
[20:39:11] *** Joins: theseb (~theseb@47-220-214-54.cnrocmta03.res.dyn.suddenlink.net)
[20:41:54] *** Quits: dibas (~dibas@user/dibas) (Read error: Connection reset by peer)
[20:43:37] <nedbat> PedroG2: do you know how to parse out the components from these names?
[20:44:10] *** Quits: schumaml (~schumaml@dslb-188-104-171-003.188.104.pools.vodafone-ip.de) (Ping timeout: 272 seconds)
[20:44:11] *** Joins: Mulugruntz_ (~Mulugrunt@45.84.41.113)
[20:44:46] <PedroG2> No, I don't. There is a python dnf module. Just wondering how to get a key to sort from those dnf related modules
[20:44:51] *** Joins: dibas (~dibas@wild.uberspace.de)
[20:44:51] *** Quits: dibas (~dibas@wild.uberspace.de) (Changing host)
[20:44:51] *** Joins: dibas (~dibas@user/dibas)
[20:44:59] *** Joins: dez (uid92154@user/dez)
[20:45:34] *** Joins: schumaml (~schumaml@dslb-178-007-204-005.178.007.pools.vodafone-ip.de)
[20:46:18] *** Quits: nomic (~nomic@185.217.117.233) (Quit: Leaving)
[20:46:33] *** Quits: bytehackr (~Sandipan@103.24.86.178) (Quit: Leaving)
[20:46:59] *** Quits: Mulugruntz (~Mulugrunt@217.117.229.220) (Ping timeout: 260 seconds)
[20:47:01] *** Joins: Thanatos (~Thanatos@ec2-54-148-37-124.us-west-2.compute.amazonaws.com)
[20:47:47] *** Joins: kickingvegas (~cchoi@c-73-170-198-193.hsd1.ca.comcast.net)
[20:48:45] *** Quits: jay-m126 (~jay-m@gateway/vpn/pia/jay-m126) (Ping timeout: 256 seconds)
[20:48:53] *** Joins: CoderCharmander (~CoderChar@20014C4C12563000BCCDBFC417CDB7F0.catv.pool.telekom.hu)
[20:50:14] *** Quits: jpn (~jpn@user/jpn) (Quit: Lost terminal)
[20:51:16] *** Quits: BASHitup (~richard@user/yippeekaiyay) (Quit: WeeChat 2.8)
[20:51:37] *** Joins: calamari (~jjohnston@209.104.4.210)
[20:52:16] *** Quits: dvx (~dvx@5.181.92.64) (Remote host closed the connection)
[20:53:20] *** Quits: vantage (~vantage@ip-193-121-152-141.dsl.scarlet.be) (Read error: Connection reset by peer)
[20:54:01] <calamari> What's the correct typing hint for a text file that is open()ed? Calling type() on the file object reports <class '_io.TextIOWrapper'>, but I get errors that neither _io.TextIOWrapper nor simply TextIOWrapper are defined.
[20:54:13] *** Quits: tobybl (~tobybl@227.192.115.87.dyn.plus.net) (Remote host closed the connection)
[20:54:24] *** Joins: cristober (~cristober@194.37.96.116)
[20:54:25] <grym> typing.IO, i think?
[20:54:47] <grym> or typing.TextIO, BinaryIO, if you can be more precise
[20:56:19] <calamari> grym: IO[Any] worked, thanks!
[20:56:36] *** Quits: cristober (~cristober@194.37.96.116) (Read error: Connection reset by peer)
[20:56:46] *** Joins: cristober (~cristober@194.37.96.116)
[20:57:32] *** Quits: tg (~tg@rockylinux/infra/tg) (Read error: Connection reset by peer)
[20:58:19] *** Joins: tg (~tg@rockylinux/infra/tg)
[20:58:37] *** Quits: stockh0lm (~Andreas@p200300d2c70cd40090355f9938920f5d.dip0.t-ipconnect.de) (Ping timeout: 240 seconds)
[20:58:55] *** Roey is now known as SaladChampion
[20:59:12] *** Joins: BASHitup (~richard@user/yippeekaiyay)
[20:59:48] *** Joins: lacrymology (~lacrymolo@5.225.79.114)
[21:00:12] *** Quits: VoidSync (~sync@user/voidsync) (Remote host closed the connection)
[21:00:17] *** Quits: jab416171 (~jab416171@c-67-172-226-173.hsd1.ut.comcast.net) (Ping timeout: 240 seconds)
[21:01:16] *** Quits: eroux (~eroux@102-65-72-61.ftth.web.africa) (Quit: My MacBook has gone to sleep. ZZZzzz…)
[21:01:47] *** Joins: Enitin (~Enitin@82.180.145.223)
[21:02:18] *** Joins: cthulchu (~Cthulchu@69-172-160-196.cable.teksavvy.com)
[21:02:25] *** Quits: jcass (~cindy@50-0-146-207.dsl.dynamic.fusionbroadband.com) (Remote host closed the connection)
[21:02:48] *** Joins: jcass (~cindy@50-0-146-207.dsl.dynamic.fusionbroadband.com)
[21:02:57] *** Joins: andrewSC (~andrewSC@archlinux/trusteduser/andrewSC)
[21:04:12] *** Quits: cristober (~cristober@194.37.96.116) (Read error: Connection reset by peer)
[21:04:26] *** Joins: cristober (~cristober@194.37.96.116)
[21:04:33] *** Quits: cristober (~cristober@194.37.96.116) (Max SendQ exceeded)
[21:04:54] *** Joins: cristober (~cristober@194.37.96.116)
[21:05:04] *** Quits: cristober (~cristober@194.37.96.116) (Remote host closed the connection)
[21:05:33] *** Joins: eroux (~eroux@102-65-72-61.ftth.web.africa)
[21:06:00] *** Joins: jab416171 (~jab416171@c-67-172-226-173.hsd1.ut.comcast.net)
[21:06:15] *** Quits: Deana (~Deana@90.151.89.204) (Quit: Konversation terminated!)
[21:08:49] *** Quits: mtk (~mtk@2601:185:200:70:20c:29ff:fe3e:59e4) (Remote host closed the connection)
[21:09:32] *** Joins: chirukodati (~chirukoda@43.225.21.196)
[21:09:45] *** Quits: ovnicraft (~ovnicraft@corp-179-49-44-28.uio.puntonet.ec) (Quit: My MacBook has gone to sleep. ZZZzzz…)
[21:10:12] *** Joins: stas-prze (~chatzilla@37.30.100.59.nat.umts.dynamic.t-mobile.pl)
[21:11:48] *** Quits: zzzz-- (~qqq@c-24-30-119-248.hsd1.ga.comcast.net) (Ping timeout: 260 seconds)
[21:11:51] *** Quits: stas-prze (~chatzilla@37.30.100.59.nat.umts.dynamic.t-mobile.pl) (Client Quit)
[21:12:27] <jinsun> calamari: IO[Any] is only slightly better than Any though, if you know it is a text file then use IO[str] or TextIO
[21:13:04] *** Quits: Codaraxis_ (~Codaraxis@user/codaraxis) (Ping timeout: 246 seconds)
[21:13:12] *** Joins: zzzz-- (~qqq@c-69-180-15-230.hsd1.ga.comcast.net)
[21:14:39] <jinsun> calamari: for example https://mypy-play.net/?mypy=latest&python=3.10&flags=strict&gist=d34a4570bbf9800f5635b3939419a2ad
[21:15:23] <jinsun> it catches the problem only if you annotate IO[str]
[21:15:25] *** dcaro is now known as dcaro_away
[21:16:00] <Jong> For using mmap_mode for large numpy datasets, do most pros make it a CLI option like --use-mmap-mode or set it to always be true?   I don't see any reason why not to use it on 1tb + datasets
[21:16:32] <calamari> jinsun: thanks, I discovered that a few minutes ago as well. There's also BinaryIO for a "b" open.
[21:16:57] *** Joins: jarthur (~jarthur@cpe-70-114-198-37.austin.res.rr.com)
[21:17:04] *** Joins: stockh0lm (~Andreas@p200300d2c70cd40090355f9938920f5d.dip0.t-ipconnect.de)
[21:17:26] *** Quits: schumaml (~schumaml@dslb-178-007-204-005.178.007.pools.vodafone-ip.de) (Ping timeout: 260 seconds)
[21:19:19] *** Joins: schumaml (~schumaml@dslb-178-002-181-154.178.002.pools.vodafone-ip.de)
[21:20:09] *** Joins: Naan (~Naan@user/naan)
[21:20:45] *** Quits: djhankb (~djhankb@208.113.164.68) (Remote host closed the connection)
[21:21:24] *** Joins: djhankb (~djhankb@208.113.164.68)
[21:22:14] *** Joins: vicfred (~vicfred@user/vicfred)
[21:22:30] *** Joins: hvitol (hvitol@gateway/vpn/protonvpn/hvitol)
[21:24:51] *** Joins: stas-prze (~chatzilla@37.30.100.59.nat.umts.dynamic.t-mobile.pl)
[21:26:14] *** Joins: elb0w (~elb0w@50-201-95-250-static.hfc.comcastbusiness.net)
[21:27:50] *** Quits: magla (~gelignite@d5362fd7.access.ecotel.net) (Quit: Stay safe!)
[21:29:47] <dba> is it possible to debug an HTTP request and TCP/IP level protocol, does `requests` or any library has this capabilities ?
[21:30:30] <InPhase> dba: Google "wireshark".
[21:30:30] <han-solo> you can always use wireshark or something like that
[21:31:16] *** Joins: ovnicraft (~ovnicraft@corp-179-49-44-28.uio.puntonet.ec)
[21:31:21] *** Joins: elb0w_ (~elb0w@172.58.141.210)
[21:31:33] *** Quits: thiras (~thiras@user/thiras) (Ping timeout: 250 seconds)
[21:31:54] *** Joins: Barones (~Barones@user/Barones)
[21:31:59] <dba> InPhase , han-solo : I was curious if there is something in-house to do that
[21:32:10] *** Quits: mexen (uid495612@user/mexen) (Quit: Connection closed for inactivity)
[21:32:43] *** Quits: elb0w (~elb0w@50-201-95-250-static.hfc.comcastbusiness.net) (Ping timeout: 260 seconds)
[21:33:14] <InPhase> dba: Well there appears to be a pyshark.
[21:33:18] *** Quits: jinsun (~jinsun@user/jinsun) (Ping timeout: 260 seconds)
[21:33:25] *** Quits: stas-prze (~chatzilla@37.30.100.59.nat.umts.dynamic.t-mobile.pl) (Quit: Doom MIDIs await)
[21:34:26] <InPhase> dba: I cannot vouch for how mature it is as a package though.  Wireshark is a very mature program in comparison.  I've used it across 20-some years.
[21:34:28] <han-solo> which is kinda a wrapper i gues ?
[21:34:37] <han-solo> and you will likely need wireshark anyway ?
[21:34:59] <InPhase> It seems it uses the terminal interface for wireshark called tshark, which I have not attempted.
[21:35:01] *** Quits: whaley (~whaley@cpe-76-182-165-20.sc.res.rr.com) (Quit: It won't give up.  It wants me dead.  Goddamn this noise inside my head.)
[21:35:07] *** Joins: SnoopJ (~snoopj@user/snoopj)
[21:35:35] *** Joins: kevr` (~kevr@user/kevr)
[21:35:43] *** Joins: karlpinc (~user@173-161-46-9-Illinois.hfc.comcastbusiness.net)
[21:35:44] <dba> Thanks for the feedbacks
[21:36:09] <vdamewood> I'l add my support for Wireshark.
[21:36:35] *** Quits: EgonX (~EgonX@2601:2c6:47f:879e:388c:9712:1d29:b183) (Quit: Textual IRC Client: www.textualapp.com)
[21:36:50] *** Quits: kevr (~kevr@user/kevr) (Remote host closed the connection)
[21:37:42] *** Joins: dante-as (~dante-as@188.26.94.194)
[21:38:42] <nedbat> anyone have Mac Monterey and can try installing coverage.py? https://github.com/nedbat/coveragepy/issues/1349
[21:39:03] <dante-as> How can I manipulate log records for a logging.formatter?
[21:39:40] <grym> nedbat: sure
[21:39:42] <vdamewood> nedbat: Care about processor?
[21:39:43] <dba> nedbat: I can try that with version 12.1
[21:39:58] *** Quits: revolve (~u0_a227@cpc100838-bagu15-2-0-cust672.1-3.cable.virginm.net) (Read error: Connection reset by peer)
[21:40:08] <nedbat> dba, vdamewood, grym: I really don't know. I think this report is bogus, and would like some counter-data-points.
[21:40:11] <nedbat> thanks, btw!
[21:40:32] *** Quits: kosh (~kosh@user/kosh) (Read error: Connection reset by peer)
[21:41:03] *** Joins: EgonX (~EgonX@c-73-115-70-244.hsd1.tx.comcast.net)
[21:41:26] *** Joins: Shou (~nyah@wikipedia/Davepeta)
[21:41:52] *** Joins: hanetzer (~hanetzer@user/hanetzer)
[21:41:56] <SnoopJ> dante-as, that's a pretty broad question, have you looked at the documentation on how Formatters work?
[21:42:07] *** Quits: stasp (uid548761@id-548761.ilkley.irccloud.com) ()
[21:42:07] *** Joins: bomb-on (~bomb-on@user/bomb-on)
[21:42:16] *** Quits: Barones (~Barones@user/Barones) (Remote host closed the connection)
[21:42:20] <grym> nedbat: works for me on 3.9.9 (pyenv-installed)
[21:42:43] *** Joins: Pickchea (~private@user/pickchea)
[21:43:07] <grym> nedbat: monterey's system python3 appears to be 3.8.9, so the bug reporter is using another python; maybe they installed it wrong
[21:43:33] <ChrisWarrick> nedbat: I’d also ask how they’re installing it and why are .egg files involved
[21:43:36] <grym> nedbat: (intel macbook air c.2018; i don't have a M1 or higher to test on)
[21:43:53] *** Joins: kosh (~kosh@user/kosh)
[21:43:59] <dba> nedbat: worked fine on `Python 3.8.9` Monetary 12.1
[21:44:00] <vdamewood> nedbat: No hang here.
[21:44:06] <nedbat> i love you all :)
[21:44:14] <vdamewood> Oh, oops. I'm using Python 3.10 from Homebrew
[21:44:35] *** hexa- is now known as h
[21:45:02] <vdamewood> nedbat: Glad to help, or approximate it.
[21:45:56] <vdamewood> FWIW Monterey 12.3, and installed https://files.pythonhosted.org/packages/60/4e/c4a3148bf1e1dee6ec49e488b393bf7f33c3e6593ffbf4eaf2c4165050ee/coverage-6.3.2-cp310-cp310-macosx_10_9_x86_64.whl
[21:46:20] *** Joins: NeoCore (~neocore@195.200.221.198)
[21:46:31] *** Joins: Guest_135 (~Guest_135@2001:9e8:30b:1500:9d62:6ba4:fb08:9169)
[21:46:37] <vdamewood> Python 3.10.2
[21:47:36] *** Joins: Skriptmonkey (~Skriptmon@82-92-237-24.gci.net)
[21:47:49] <vdamewood> nedbat: https://xkcd.com/583/
[21:49:33] <nedbat> vdamewood: :D somehow I had missed that one
[21:49:41] *** Joins: Jacques (~Jacques@162-239-107-41.lightspeed.rcsntx.sbcglobal.net)
[21:50:02] *** Quits: jianwu (~jianwu@softbank126088036030.bbtec.net) (Read error: Connection reset by peer)
[21:50:15] *** Joins: zebrag (~chris@user/zebrag)
[21:50:30] <jamwil> nedbat: Hah! That's a good one
[21:50:52] *** Quits: wyclif (~wyclif@user/wyclif) (Ping timeout: 246 seconds)
[21:51:00] *** Quits: merijn (~merijn@c-001-001-001.client.esciencecenter.eduvpn.nl) (Ping timeout: 240 seconds)
[21:51:09] *** Quits: ovnicraft (~ovnicraft@corp-179-49-44-28.uio.puntonet.ec) (Quit: My MacBook has gone to sleep. ZZZzzz…)
[21:51:21] *** Joins: cedric (~cedric@2a01:cb11:821:7c00:295a:c0f6:bdc5:6c0)
[21:51:32] *** Joins: jianwu (~jianwu@softbank126088036030.bbtec.net)
[21:51:57] *** Joins: wyclif (~wyclif@user/wyclif)
[21:53:11] <Staunch> i'm comparing the return value of a function with a variable, like `foo()` and `self.bool`. They are expected to both be booleans. Is there any specific reason for `is` or `==` that would cause preference for one over the other?
[21:53:49] <SnoopJ> Staunch, use `is` whenever you want to check that two objects are exactly the same object (or not). For everything else, use `==`
[21:54:05] <SnoopJ> `a is b` does the moral equivalent of `id(a) == id(b)` and this is almost never what you mean
[21:54:40] <Staunch> SnoopJ: yes, but all i'm doing here is making sure that the result of a function is the same boolean as the stored attribute. Is there a reason to use one over the other here, or are they effectively interchangeable?
[21:54:48] *** Quits: belphegor666 (~satan@ip-046-223-003-068.um13.pools.vodafone-ip.de) (Changing host)
[21:54:48] *** Joins: belphegor666 (~satan@user/belphegor666)
[21:54:57] <SnoopJ> Staunch, they are extremely not-interchangeable in general
[21:55:04] <Staunch> i understand that
[21:55:07] *** Quits: l4yer (~l4yer@user/l4yer) (Read error: Connection reset by peer)
[21:55:31] <SnoopJ> my preference is to never use `is` unless I absolutely cannot do what I want without `is` (or its verbose equivalent above)
[21:55:40] <SnoopJ> with the exception of checking for `None`
[21:55:54] <SnoopJ> (which is fine because None is guaranteed to be the only instance of its type)
[21:56:01] <Staunch> is that not the same for True and False?
[21:56:21] *** Joins: jmdaemon (~jmdaemon@user/jmdaemon)
[21:56:22] *** Quits: FinnElija (~finn_elij@user/finn-elija/x-0085643) (Remote host closed the connection)
[21:56:30] <OMGOMG> for True and False and small numbers they will give you the same result
[21:56:42] <OMGOMG> but == is much more readable, so why consider using is
[21:56:52] *** Joins: Codaraxis_ (~Codaraxis@user/codaraxis)
[21:56:53] *** Joins: mihaiadrian (~Thunderbi@82.76.223.244)
[21:57:16] <OMGOMG> in fact, why are you comparing one boolean against another one in the first place?
[21:57:33] *** Quits: soju-test-user (~soju-test@2a01cb040760a5cb0000000000000318.ipv6.abo.wanadoo.fr) (Ping timeout: 250 seconds)
[21:57:36] <Staunch> OMGOMG: an actual value vs. an expectation
[21:57:39] <jamwil> I think `1 == True` but `1 is not True`, so use the degree of specificity you need.
[21:57:39] <SnoopJ> Staunch, I'm not sure, actually
[21:57:53] <grym> True is always the same True
[21:58:12] <grym> i usually say "singleton" here, but one time someone yelled at me for that about bools
[21:58:20] <OMGOMG> Staunch: oh, so it's part of a test suite?
[21:58:26] <SnoopJ> the doc for bool() does say `True, False` are the only instances, but the language reference doesn't really clarify this
[21:58:53] <Staunch> OMGOMG: yes, it's in a matcher
[21:58:53] *** Quits: Moosadee (~Moosadee@216.185.233.27) (Ping timeout: 252 seconds)
[21:59:04] <SnoopJ> OMGOMG, the "small numbers" property you mentioned is an implementation detail of CPython. Relying on it is exactly the kind of semantic confusion I am warning about
[21:59:05] <jinsun_> wanting to check for True or False is rare though, normally you want to check for truthiness
[21:59:32] <SnoopJ> (because some other implementation of Python might not do this for small integers, and code that relies on it won't work right on that implementation)
[21:59:33] <nishant> some linters warn you, if you use `==` where you should not
[21:59:36] <jinsun_> so you want if x: instead of if x is True:
[21:59:46] <SnoopJ> nishant, CPython warns you about using `is` with literals now, too
[21:59:49] *** Joins: FinnElija (~finn_elij@user/finn-elija/x-0085643)
[22:00:03] <grym> use of `is` with `True is 1` raises the literals syntax warning in 3.8, but `True is True` doesn't
[22:00:05] <SnoopJ> (because this is basically nonsense)
[22:00:17] <nishant> right SnoopJ
[22:01:02] *** Joins: Moosadee (~Moosadee@198.248.38.27)
[22:01:30] <SnoopJ> grym, that would probably be the case even if it could have multiple instances, because it's a keyword instead of a literal
[22:01:36] *** Joins: jinsun (~jinsun@user/jinsun)
[22:01:44] <Staunch> thank you all for the discussion! I think i'm going to go with `==` because of the readability. My coworker had mentioned the `is` that i had put in, which i did by reflex. I think the consensus is that `==` is better here
[22:01:49] <han-solo> i can seem to do nonsense like `{} is []` ':)
[22:01:54] <grym> SnoopJ: yeah, i realised that shortly after..
[22:01:58] *** Quits: wyclif (~wyclif@user/wyclif) (Ping timeout: 260 seconds)
[22:02:04] *** Quits: elb0w_ (~elb0w@172.58.141.210) (Ping timeout: 246 seconds)
[22:02:13] <SnoopJ> Staunch, yea, when you need to use `is` you will be sure of it. If you're not, use `==`
[22:02:14] <OMGOMG> Staunch: honestly i think "a and b or not a and not b" might often be more expressive, but if it specifically is a test suite then equality might make sense
[22:02:32] <SnoopJ> it would probably be a lot better if `is` had a better name or just didn't exist in the first place, but we're stuck with it, so...
[22:02:49] <OMGOMG> is is what is is
[22:02:54] *** Joins: funhouse (~funhouse@user/funhouse)
[22:03:01] *** Joins: wyclif (~wyclif@user/wyclif)
[22:03:41] * SnoopJ shakes fist at English
[22:03:51] <grym> OMGOMG: especially in buffalo
[22:03:58] *** Quits: BASHitup (~richard@user/yippeekaiyay) (Ping timeout: 272 seconds)
[22:04:10] *** Quits: schumaml (~schumaml@dslb-178-002-181-154.178.002.pools.vodafone-ip.de) (Ping timeout: 246 seconds)
[22:04:23] *** Quits: roxfan (~roxfan@2a02:a03f:a2be:4f00:cde9:ec1e:3b73:a5d6) (Ping timeout: 252 seconds)
[22:04:40] *** Quits: Jacques (~Jacques@162-239-107-41.lightspeed.rcsntx.sbcglobal.net) (Ping timeout: 250 seconds)
[22:04:43] *** Joins: aslicedbanjo (~aslicedba@host86-148-108-171.range86-148.btcentralplus.com)
[22:05:59] <OMGOMG> >>> [a and b or not a and not b for a in (0,1) for b in (0,1)]
[22:05:59] <OMGOMG> [True, False, False, 1]
[22:06:09] *** Joins: mike18 (~geri@216.200.232.252)
[22:06:25] *** Quits: pkapp (~pkapp@2601:58c:c500:6900:86be:e48d:dd2f:66ff) (Quit: ZNC 1.7.5+deb4 - https://znc.in)
[22:06:40] *** Joins: BASHitup (~richard@user/yippeekaiyay)
[22:06:40] *** Joins: schumaml (~schumaml@dslb-188-104-177-187.188.104.pools.vodafone-ip.de)
[22:06:42] *** Joins: pkapp (~pkapp@2601:58c:c500:6900:7c48:7d8:4ce7:130c)
[22:07:12] <mike18> how how can i call pandas.DataFrame.drop_duplicates on columns i specify?
[22:07:30] <mike18> and not on the entire columns
[22:07:31] *** Quits: blackpawn_ (~blackpawn@c-73-73-53-23.hsd1.il.comcast.net) (Ping timeout: 256 seconds)
[22:07:40] <mike18> with subset?
[22:07:49] <tpr> yes
[22:08:03] <mike18> and how to keep the column which is set to a specific value?
[22:08:05] *** Quits: nuclearg1 (~nucleargr@user/nuclearg1) (Ping timeout: 256 seconds)
[22:09:31] *** Joins: ornxka (~ornxka@user/ornxka)
[22:10:04] <ornxka> is it safe to pass user-defined data to str.format()?
[22:10:13] <mike18> keep{‘first’, ‘last’, False}, default ‘first’ ...
[22:10:22] <tpr> I'm not sure what you mean. you want to have some specific condition on rows to consider for drop_duplicates? for that you'd call the drop_duplicates only on a subset of the dataframe
[22:10:23] <mike18> i only see keep first last, etc.
[22:10:26] <SnoopJ> ornxka, safe in what sense?
[22:11:08] <mike18> tpr: lets say there is a duplicate between col1 - col3 and col4 is True vs False ... i want to remove if col1 - col3 are the same - but only keep the row with col4 = true
[22:11:17] *** Quits: BASHitup (~richard@user/yippeekaiyay) (Ping timeout: 260 seconds)
[22:11:19] <ornxka> in C you can write malicious format strings for use with printf() that cause crashes or other undefined behavior
[22:11:33] *** Quits: grooverman_ (~grooverma@179.97.175.157) (Read error: Connection reset by peer)
[22:11:38] <ornxka> im wondering if python's str.format() function has similar properties
[22:12:01] *** Joins: blackpawn (~blackpawn@c-73-73-53-23.hsd1.il.comcast.net)
[22:12:04] <SnoopJ> ornxka, you won't get those kinds of effects in Python, no. But you can still write unsafe code if you're using it to e.g. build a query or something. It kind of depends on what you're doing.
[22:12:08] <tpr> ornxka: take a look at https://stackoverflow.com/questions/15356649/can-pythons-string-format-be-made-safe-for-untrusted-format-strings
[22:12:17] *** Joins: Hanii (~textual@2a00:23c5:c583:a300:e060:11bc:86e1:43be)
[22:12:28] <SnoopJ> a good rule of thumb is to treat any string that came from a client/user as if it is malicious
[22:12:47] <SnoopJ> except where you are absolutely 100% sure it is not and will not ever be at risk of that
[22:12:47] *** Joins: grooverman (~grooverma@179.97.175.157)
[22:12:58] *** Joins: BASHitup (~richard@user/yippeekaiyay)
[22:13:20] <mike18> tpr: does that make sense?
[22:13:22] <tpr> mike18: you would want to work on a subset chosen by that col4 value
[22:13:35] <ornxka> ah, so it is unsafe, gotcha..
[22:13:37] *** Joins: nemexis (~nemexis@193-62-201-31.ftth.glasoperator.nl)
[22:13:59] <tpr> mike18: deduped_df = df[df["col4"]].drop_duplicates(subset=["col1", "col2", "col3"]) -- or something similar
[22:14:24] *** Joins: nuclearg1 (~nucleargr@user/nuclearg1)
[22:14:29] <tpr> mike18: the keep just defines the behavior what to do on duplicate rows, i.e., which row to keep (if any)
[22:14:31] <SnoopJ> ornxka, that issue is talking about building the format specification itself from user input. This is definitely giving a malicious user a lot of power but I wouldn't call it 'unsafe' in the sense that the word is used in C
[22:14:37] *** Quits: audio (~audio@user/audio) (Ping timeout: 240 seconds)
[22:14:44] *** Quits: schumaml (~schumaml@dslb-188-104-177-187.188.104.pools.vodafone-ip.de) (Ping timeout: 272 seconds)
[22:14:56] <mike18> tpr: how does that specify to keep col4 = True if there is a duplicate?
[22:15:14] <SnoopJ> i.e. you aren't at risk of "{:>99999999}" if you have `my_template = "..."; my_template.format(user_input)` because the user didn't provide the *format*, they provided what goes into it
[22:15:49] <SnoopJ> another good rule of thumb: treat with suspicion anybody who divides the world into "safe" and "unsafe" (unless you are writing Rust, heh)
[22:15:56] <tpr> mike18: well, it selects only the rows where col4 is true, and does deduplication on that subset
[22:16:08] *** Joins: whaley (~whaley@cpe-76-182-165-20.sc.res.rr.com)
[22:16:15] <ornxka> well, what i want to do is be able to have the user provide a format string that defines a filename, where metavariables in that format string like {{artist}} are replaced with values from a dictionary i provide
[22:16:28] <tpr> mike18: you want to negate the selection for your usecase though
[22:16:42] <mike18> tpr: oh wait - that select col4 = true - should only be for duplicates .... but if there is not a duplicate i also want to have col4=true/false
[22:16:44] <tpr> mike18: so only drop the duplicates on the subset where col4 is false
[22:16:56] <SnoopJ> ornxka, maybe the problem of how to keep malicious inputs from breaking your program will be more clear if we can see more of the context
[22:17:23] *** Joins: mtk (~mtk@2601:185:200:70:20c:29ff:fe3e:59e4)
[22:17:23] <SnoopJ> what you just described sounds like you might want a templating engine with user-defined templates
[22:17:29] <mike18> tpr: i need all rows with col4=true/false ... if there there is a duplicate i only want those for col4=true
[22:17:45] <SnoopJ> or probably user-defined fragments that get put together into a template
[22:17:46] <mike18> if there is no duplicate get all rows with col4=true/false
[22:18:00] <ornxka> yeah i was googling around for templating engines but it sounds a bit heavy duty when all i want is to produce a filesystem path
[22:18:28] * SnoopJ can't make sense of that in the absolute absence of context
[22:18:32] *** Quits: nemexis (~nemexis@193-62-201-31.ftth.glasoperator.nl) (Ping timeout: 272 seconds)
[22:18:35] *** Joins: ovnicraft (~ovnicraft@corp-179-49-44-28.uio.puntonet.ec)
[22:18:56] *** Joins: rairden (~rairden@2603-9000-de04-9613-0000-0000-0000-1a20.inf6.spectrum.com)
[22:19:04] *** Quits: mtk (~mtk@2601:185:200:70:20c:29ff:fe3e:59e4) (Remote host closed the connection)
[22:19:22] <ornxka> the program downloads files from the internet, the files have metadata like "artist", the user specifies the path for each file via a template that uses metavariables like "artist"
[22:19:28] *** Quits: BASHitup (~richard@user/yippeekaiyay) (Ping timeout: 260 seconds)
[22:19:31] <ornxka> i havent written any code yet so i dont have any to show unfortunately
[22:20:14] *** Joins: mtk (~mtk@2601:185:200:70:20c:29ff:fe3e:59e4)
[22:20:28] <ornxka> eg something like /music/{{artist}}/{{track}} - {{album}}.{{extension}}
[22:21:16] *** Joins: BASHitup (~richard@user/yippeekaiyay)
[22:21:20] <SnoopJ> ornxka, hm, you may not have too much to worry about there if the set of metavariables is bounded and known to you
[22:21:33] *** Joins: MasterK (~MK@86.127.10.135)
[22:22:11] <SnoopJ> i.e. `"{malicious_input} {artist}".format(artist="Someone")` will be a KeyError because the malicious_input wasn't specified
[22:22:25] *** Joins: schumaml (~schumaml@dslb-178-002-182-245.178.002.pools.vodafone-ip.de)
[22:22:31] *** Quits: mtk (~mtk@2601:185:200:70:20c:29ff:fe3e:59e4) (Remote host closed the connection)
[22:22:48] *** Quits: MikZyth (~MikZyth@host-243-154-66-217.spbmts.ru) (Quit: WeeChat 3.5)
[22:22:51] <SnoopJ> so the concern there is I think more about the user building a path than the interpolation of the variables
[22:23:14] *** Joins: merijn (~merijn@c-001-001-001.client.esciencecenter.eduvpn.nl)
[22:23:28] *** Joins: wakeup (~wakeup@user/wakeup)
[22:23:48] *** Quits: pkapp (~pkapp@2601:58c:c500:6900:7c48:7d8:4ce7:130c) (Quit: ZNC 1.7.5+deb4 - https://znc.in)
[22:24:03] *** Joins: pkapp (~pkapp@c-75-74-40-214.hsd1.fl.comcast.net)
[22:24:08] <ornxka> yeah it looks like string.template doesnt look outside the dictionary you give it (or run any code inside templates), so its probably fine
[22:24:17] *** Joins: mtk (~mtk@2601:185:200:70:20c:29ff:fe3e:59e4)
[22:24:28] <SnoopJ> well, string.Template is another thing entirely
[22:24:30] <nedbat> ornxka: is this program running on the user's machine?
[22:25:01] *** Joins: savolla (~quassel@95.10.200.51)
[22:25:11] <ornxka> probably i will run it in a docker container somewhere
[22:25:27] <SnoopJ> but I think Template.substitute() has the same property of raising a KeyError
[22:26:04] *** Joins: jay-m126 (~jay-m@gateway/vpn/pia/jay-m126)
[22:26:16] <SnoopJ> and Template.safe_substitute() will pass through the unknown thingy
[22:27:13] *** Quits: zen_coder (~zen_coder@2a02:8109:a280:2d8d:e082:8b12:97d8:5d28) (Quit: Konversation terminated!)
[22:27:20] <ornxka> to be completely honest i am probably the only person who will run this program and in retrospect im not sure why i would care about template injection given that
[22:27:35] <ornxka> i guess its just a reflex
[22:27:37] <wakeup> in pandas, what is the difference between df.iloc[:index] and df[:index]?
[22:28:08] <wakeup> if any
[22:28:12] *** Quits: cul8r (~cul8r@wkt-bband-148-66-171-9.wk.net) (Quit: abducted by aliens)
[22:28:12] *** Quits: merijn (~merijn@c-001-001-001.client.esciencecenter.eduvpn.nl) (Ping timeout: 260 seconds)
[22:28:13] *** Joins: Bando (~Bando@c-68-47-51-147.hsd1.mn.comcast.net)
[22:28:16] <SnoopJ> wakeup, the first one is "purely integer based indexing"
[22:28:20] <SnoopJ> https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#indexing-integer
[22:28:30] <wakeup> and the second?
[22:28:31] *** Joins: tobybl (~tobybl@227.192.115.87.dyn.plus.net)
[22:28:35] *** Quits: aknot (~aknot@2603-900a-1503-17bb-7804-089d-5a92-e868.inf6.spectrum.com) (Ping timeout: 252 seconds)
[22:28:38] <mike18> tpr: here an example: https://ideone.com/hGHH3Q
[22:28:42] *** Joins: vantage (~vantage@ip-193-121-152-141.dsl.scarlet.be)
[22:28:56] <SnoopJ> wakeup, doesn't have a special name, it's unrestricted and can do an awful lot of things depending on what kind of input it gets
[22:28:57] <mike18> to the question duplicates
[22:29:17] <wakeup> but they are equivalent if index is an int
[22:29:22] <wakeup> right?
[22:29:38] <SnoopJ> wakeup, you should read that guide I linked. It's a thorough guide of all the different indexing idiosyncrasies
[22:29:42] *** Quits: savolla (~quassel@95.10.200.51) (Remote host closed the connection)
[22:29:44] <SnoopJ> (and there are a *lot*)
[22:31:06] *** Quits: ramprax (~ramprax@49.204.134.158) (Quit: Client closed)
[22:31:32] *** Quits: Naan (~Naan@user/naan) (Ping timeout: 260 seconds)
[22:31:41] *** Joins: Xardas (~Xardas@149.233.51.127)
[22:32:27] *** Quits: Pickchea (~private@user/pickchea) (Quit: Leaving)
[22:33:13] *** Quits: Mulugruntz_ (~Mulugrunt@45.84.41.113) (Ping timeout: 246 seconds)
[22:34:18] <jinsun> mike18: you could sort the df with the subset+retry, so that False will always be first and True will be last, and then drop_duplicates with subset and keep="last"
[22:34:31] <mike18> jinsun: i did someting like: https://ideone.com/hGHH3Q
[22:34:40] <mike18> but is there a better way?
[22:34:50] <mike18> is that what you mean?
[22:35:12] *** Quits: chirukodati (~chirukoda@43.225.21.196) (Quit: Client closed)
[22:35:14] <jinsun> well if you like that output then it is good
[22:35:38] <jinsun> I was saying keep by=['algo', 'id', 'score','retry'] in sort_values
[22:35:42] *** Quits: Thanatos (~Thanatos@ec2-54-148-37-124.us-west-2.compute.amazonaws.com) (Remote host closed the connection)
[22:35:50] <jinsun> so that it doesn't get shuffled
[22:36:06] *** Joins: Thanatos (~Thanatos@ec2-54-148-37-124.us-west-2.compute.amazonaws.com)
[22:36:22] <wakeup> It talks about iloc but not about the difference between iloc and just indexing the column
[22:36:58] <SnoopJ> wakeup, .iloc only lets you use integers is really the main difference
[22:37:08] <wakeup> well, yea
[22:37:10] <SnoopJ> it doesn't do [everything else]
[22:37:16] *** Quits: MrAureliusR (~MrAureliu@user/mraureliusr) (Quit: ZNC - https://znc.in)
[22:37:22] <mike18> jinsun: if i do sort by: 'algo', 'id', 'score','retry' it should be same output?
[22:37:34] *** Joins: gitesh (uid423739@id-423739.ilkley.irccloud.com)
[22:37:35] <wakeup> I guess we should iloc when you want to make sure that you're not indexing with something which is not an int
[22:37:49] <jinsun> mike18: depends on your data
[22:37:53] <rendar> with annotations you must import modules, and this creates many import loops :( how can this be fixed?
[22:38:25] *** Joins: MrAureliusR (~MrAureliu@user/mraureliusr)
[22:38:28] *** Quits: jay-m126 (~jay-m@gateway/vpn/pia/jay-m126) (Ping timeout: 246 seconds)
[22:38:53] *** Quits: paul424 (~tom@ip-5-172-236-200.multi.internet.cyfrowypolsat.pl) (Remote host closed the connection)
[22:38:54] <jinsun> if TYPE_CHECKING and stringified annotations https://docs.python.org/3/library/typing.html#typing.TYPE_CHECKING
[22:38:57] <mike18> jinsun: i mean a duplicate with col1-col3 should put the the retry=True first after the sort?
[22:39:31] <mike18> jinsun: any advantage if i do it inplace=True ?
[22:39:40] <mike18> instead recreating a new df?
[22:40:09] <wakeup> how do you know if indexing a dataframe returns another dataframe or Series?
[22:40:25] *** Quits: dante-as (~dante-as@188.26.94.194) (Quit: Client closed)
[22:41:14] <jinsun> mike18: not much benefit performance-wise, so depends only on whether you wanted to mutate or not
[22:41:21] <mike18> ok
[22:41:34] *** Quits: Forsaken87 (~quassel@2a02:908:1866:e360:4d2a:597c:d813:f407) (Quit: https://quassel-irc.org - Chat comfortably. Anywhere.)
[22:42:02] *** Quits: tobybl (~tobybl@227.192.115.87.dyn.plus.net) (Remote host closed the connection)
[22:42:21] *** Joins: Blankspace (~androirc@user/blankspace)
[22:42:52] <rairden> for sys.path in python3, is it normal for ~/.local/lib/python3.10/site-packages to be listed before /usr/lib/python3.10/site-packages? I'm getting an error `AttributeError: module 'json' has no attribute 'loads'`
[22:43:49] *** Quits: jmdaemon (~jmdaemon@user/jmdaemon) (Quit: ZNC 1.8.2 - https://znc.in)
[22:44:04] <jinsun> json shouldn't be in either place really, it is stdlib
[22:44:08] *** Joins: jmdaemon (~jmdaemon@user/jmdaemon)
[22:44:25] <wakeup> what's the easiest way to select the top N rows from a pandas dataframe according to some condition?
[22:44:33] <ChrisWarrick> rairden: did you name your file json.py?
[22:44:44] <jinsun> and I think that order is right, the user packages get more preference than system packages
[22:44:48] <wakeup> right now, I sort the dataframe according to the column that I am interested in, then select the top N using iloc
[22:44:50] *** Joins: Forsaken87 (~quassel@2a02:908:1866:e360:4d2a:597c:d813:f407)
[22:44:59] <wakeup> but maybe I don't need to call sort_values explicitly
[22:45:18] <rairden> no, I only have 4-5 other ones. But shouldn't json/__init__.py be ran first?
[22:46:05] <ChrisWarrick> rairden: import json; print(json.__file__)
[22:46:37] *** Quits: iomari891 (~iomari891@105.112.138.38) (Ping timeout: 256 seconds)
[22:46:49] <rairden> yeah I tried that. Been on it for an hour.
[22:46:59] <ChrisWarrick> rairden: what does it output?
[22:47:00] <rairden> it's obviously importing the wrong module
[22:47:10] <rairden> None I think
[22:47:10] <wakeup> I guess I can use head(n) instead of iloc
[22:47:11] <ChrisWarrick> rairden: what wrong module?
[22:47:16] <ChrisWarrick> rairden: this cannot outptu none
[22:48:45] <rairden> it does print out the right one as long as my curr dir is /usr/lib.  But I think it doesn't give right result when somewhere else.
[22:49:09] <ChrisWarrick> rairden: what, exactly, does it print?
[22:49:23] *** Joins: MrAureliusR_ (~MrAureliu@user/mraureliusr)
[22:49:52] <rairden> It prints None if I'm at $HOME. And if my curr dir is at /usr/lib then it prints /usr/lib/python3.10/json/__init__.py
[22:50:24] <ChrisWarrick> rairden: Run `python -v`, then `import json`, and show us the output
[22:50:37] *** Quits: MrAureliusR (~MrAureliu@user/mraureliusr) (Ping timeout: 240 seconds)
[22:50:47] *** Joins: magla (~gelignite@d5362fd7.access.ecotel.net)
[22:51:56] *** Quits: anecdotal57 (~anecdotal@S0106889e6862b41a.ed.shawcable.net) (Quit: Ping timeout (120 seconds))
[22:51:56] <rairden> ok thanks that helps. If at /usr/lib, prints out same results. Or None at $HOME
[22:52:09] *** Quits: AquaL1te (~AquaL1te@user/aqual1te) (Ping timeout: 250 seconds)
[22:52:13] *** Joins: anecdotal57 (~anecdotal@S0106889e6862b41a.ed.shawcable.net)
[22:52:35] *** Quits: rpkilby (~rpkilby@c-24-20-208-106.hsd1.or.comcast.net) (Remote host closed the connection)
[22:52:51] *** Quits: vimal (~vimal@2a02:a210:9641:8780:c1c8:67bc:35b:91da) (Ping timeout: 245 seconds)
[22:52:57] <ChrisWarrick> rairden: show us the output you get when importing json in verbose mode in $HOME
[22:53:02] *** Quits: white2 (~mahengrui@user/mahengrui1) (Read error: Connection reset by peer)
[22:53:24] <rairden> the output is an empty string
[22:53:26] *** Joins: jay-m126 (~jay-m@gateway/vpn/pia/jay-m126)
[22:53:27] *** Joins: white2 (~mahengrui@user/mahengrui1)
[22:54:17] *** Quits: tWqaq (~tWqaq@240e:389:5d41:5900:b21b:c6f6:b71f:8613) (Quit: Leaving)
[22:54:37] *** Joins: rpkilby (~rpkilby@c-24-20-208-106.hsd1.or.comcast.net)
[22:54:56] *** Quits: ovnicraft (~ovnicraft@corp-179-49-44-28.uio.puntonet.ec) (Quit: My MacBook has gone to sleep. ZZZzzz…)
[22:54:56] <jinsun> can you show a screenshot of what you see on your screen? the descriptions don't sound right
[22:55:20] <ChrisWarrick> rairden: python -v doesn’t output empty strings
[22:55:31] *** Joins: vimal (~vimal@2a02:a210:9641:8780:c1c8:67bc:35b:91da)
[22:55:37] *** Quits: Thanatos (~Thanatos@ec2-54-148-37-124.us-west-2.compute.amazonaws.com) (Remote host closed the connection)
[22:55:42] <rairden> i run `python -v` and it succeeds. At a python prompt. I type `import json` and hit enter and nothing is displayed
[22:56:03] *** Joins: Thanatos (~Thanatos@ec2-54-148-37-124.us-west-2.compute.amazonaws.com)
[22:56:18] <bjs> rairden: that would usually mean json was already imported
[22:56:31] <bjs> rairden: what do you see if you print(json)
[22:56:58] <ChrisWarrick> rairden: show us the full output
[22:57:10] <rairden> yes the paths are all broken. If I do dir(json) it doesnt list the functions if at $HOME, but it works if in say /usr/lib
[22:57:44] <bjs> rairden: the actual logs from importing the json module must exist in the -v output somewhere, if you share the entire session with us we might be able to help
[22:57:44] *** Quits: ezakimak (~ezakimak@c-174-52-132-123.hsd1.ut.comcast.net) (Quit: ezakimak)
[22:57:58] *** Joins: ezakimak (~ezakimak@c-174-52-132-123.hsd1.ut.comcast.net)
[22:58:41] *** Quits: rpkilby (~rpkilby@c-24-20-208-106.hsd1.or.comcast.net) (Ping timeout: 245 seconds)
[22:58:58] <rairden> bjs, ok i searched both lots for "json" and got nothing. Except when ran at /usr/lib. Once I did "import json" it printed out 10 lines of what looked to be working (pointing to the init file)
[22:59:37] <bjs> rairden: it's much easier if you just show us the session with -v that didn't work rather than trying to explain in words what happened
[22:59:42] *** Quits: MrAureliusR_ (~MrAureliu@user/mraureliusr) (Quit: ZNC - https://znc.in)
[22:59:52] <rairden> right of course thanks. Give me a sec
[23:00:09] *** Quits: Balzy (~Balzy@host-95-237-165-207.retail.telecomitalia.it) (Ping timeout: 250 seconds)
[23:01:11] *** Quits: vimal (~vimal@2a02:a210:9641:8780:c1c8:67bc:35b:91da) (Max SendQ exceeded)
[23:01:56] *** Joins: cdown_ (~cdown@user/cdown)
[23:04:05] *** Quits: Hanii (~textual@2a00:23c5:c583:a300:e060:11bc:86e1:43be) (Quit: Textual IRC Client: www.textualapp.com)
[23:04:25] *** Joins: MrAureliusR (~MrAureliu@user/mraureliusr)
[23:04:28] *** Quits: Moosadee (~Moosadee@198.248.38.27) (Remote host closed the connection)
[23:04:39] *** Quits: cdown (~cdown@user/cdown) (Ping timeout: 260 seconds)
[23:04:45] *** Joins: Moosadee (~Moosadee@216.185.233.28)
[23:04:45] *** cdown_ is now known as cdown
[23:05:06] *** Quits: nishant (~nishant@2405:201:f005:c007:3ab2:bee7:6ff3:39cb) (Quit: Leaving)
[23:07:34] *** Joins: Vision-_- (~Vision@023-084-128-214.res.spectrum.com)
[23:07:38] *** Quits: white2 (~mahengrui@user/mahengrui1) (Ping timeout: 252 seconds)
[23:08:01] <rairden> I notice it behaves differently if I'm root user or not:  https://gitlab.com/-/snippets/2282786
[23:08:05] *** Joins: vimal (~vimal@2a02:a210:9641:8780:c1c8:67bc:35b:91da)
[23:08:28] *** Quits: wyclif (~wyclif@user/wyclif) (Ping timeout: 260 seconds)
[23:10:05] <jinsun> from that _NamespaceLoader seems like it is importing a namespace package json
[23:10:21] <bjs> rairden: do you have a json/ directory?
[23:10:30] <jinsun> print(json.__path__)
[23:10:33] <rairden> yes.  Se I can show
[23:10:41] <bjs> rairden: it's probably importing that
[23:10:47] *** Quits: Spiral-_- (~Vision@023-084-128-214.res.spectrum.com) (Ping timeout: 250 seconds)
[23:10:50] <bjs> jinsun: I dont think namespace packages have a __path__
[23:11:14] *** Joins: mahler (~hasley@wikimedia/Hasley)
[23:11:48] *** Joins: data68 (~data@2a02:908:a67:2ce0:c23f:d5ff:fe6c:da60)
[23:12:38] <bjs> although I'm not sure how you can import a namespace package with the same name as a builtin,  I thought the builtin would always win.
[23:13:21] *** Quits: Moosadee (~Moosadee@216.185.233.28) (Quit: Leaving)
[23:13:29] *** Quits: vimal (~vimal@2a02:a210:9641:8780:c1c8:67bc:35b:91da) (Max SendQ exceeded)
[23:13:46] <jinsun> I tried and it had a  __path__ but it is a _NamespacePath thing instead of list[str] for a normal package
[23:14:14] <jinsun> and yeah seems like the built-in one wins if I name it json, had to use another name
[23:14:18] *** Joins: Moosadee (~Moosadee@216.185.233.28)
[23:14:44] *** Joins: Balzy (~Balzy@host-95-237-165-207.retail.telecomitalia.it)
[23:14:48] *** Joins: vimal (~vimal@2a02:a210:9641:8780:c1c8:67bc:35b:91da)
[23:15:25] *** Quits: stockh0lm (~Andreas@p200300d2c70cd40090355f9938920f5d.dip0.t-ipconnect.de) (Ping timeout: 240 seconds)
[23:15:32] <bjs> rairden: it looks a bit weird to me, you have a "json" in your site-packages?
[23:16:16] *** Quits: vantage (~vantage@ip-193-121-152-141.dsl.scarlet.be) (Read error: Connection reset by peer)
[23:16:25] <jinsun> there is /home/erik/.local/lib/python3.10/site-packages/json in the paste
[23:17:52] <jinsun> though weirdly that is before the import json and there isn't anything related to json around that line
[23:19:04] *** Quits: codebam_ (~codebam@user/codebam) (Ping timeout: 246 seconds)
[23:21:28] <rairden> pic looking for a json.py file somewhere that conflicts:  https://i.imgur.com/zPCjjj4.png
[23:21:49] *** Joins: orbisvicis_ (~orbisvici@user/orbisvicis)
[23:22:56] <bjs> rairden: did you install some json related thing?
[23:23:10] *** Joins: koaala (~koaala@107-179-241-78.cpe.teksavvy.com)
[23:23:32] <mike18> try to understand all here: https://ideone.com/xDDVqL ... does all refer to all elements in the list?
[23:23:50] <rairden> bjs, no I don't think so. This issue started 1 month ago. Using youtube-dl and yt-dlp. Now I cant even use them to download youtube vids. I had the original scripts, today I tried download both programs from pkg mgr.
[23:23:51] <mike18> or to all characters of a string to compare?
[23:25:45] *** Quits: koaala (~koaala@107-179-241-78.cpe.teksavvy.com) (Client Quit)
[23:26:03] *** Joins: koaala (~koaala@107-179-241-78.cpe.teksavvy.com)
[23:26:21] *** Joins: jpn (~jpn@user/jpn)
[23:26:27] *** Joins: revolve (~u0_a227@cpc100838-bagu15-2-0-cust672.1-3.cable.virginm.net)
[23:26:42] *** Joins: lbalhar (~lbalhar@93.185.13.26)
[23:28:00] *** Quits: mihaiadrian (~Thunderbi@82.76.223.244) (Quit: mihaiadrian)
[23:29:34] *** Quits: vulpes_vulpes (~vulpes_vu@62-64-207-88.dynamic.dial.as9105.com) (Remote host closed the connection)
[23:29:50] *** Quits: koaala (~koaala@107-179-241-78.cpe.teksavvy.com) (Client Quit)
[23:29:51] *** Joins: Elliria (~littlegir@cpe-66-24-84-219.stny.res.rr.com)
[23:31:16] *** Joins: ovnicraft (~ovnicraft@ftth-179-49-44-28.cue.celerity.ec)
[23:31:26] <rairden> you guys were really helpful. Thanks a lot. I'll figure it out.
[23:31:56] <bjs> rairden: so there's this json-extension thing you seem to have (version 0.2.1) that has installed a namespace package over the top of "json"
[23:32:24] <bjs> I suspect that's just not a kosher thing to do,  I wonder where it came from?
[23:33:19] *** Quits: Balzy (~Balzy@host-95-237-165-207.retail.telecomitalia.it) (Ping timeout: 250 seconds)
[23:33:34] <bjs> rairden: can you try run `pip show json-extensions`  and see if pip can tell you anything about who depends on it,  maybe they have some outdated/incompatible dependencies
[23:33:35] <rairden> probably from me jacking with things. I have a project I haven't touched in 1-2 yrs and tried to rerun it, and it wouldn't work.
[23:34:53] *** Joins: skapata (~Skapata@2804:14c:87b0:9d2e:e59a:4251:16bb:b170)
[23:34:53] *** Quits: skapata (~Skapata@2804:14c:87b0:9d2e:e59a:4251:16bb:b170) (Changing host)
[23:34:53] *** Joins: skapata (~Skapata@user/skapata)
[23:35:25] <rairden> yeah I ran it bjs. It's at the top of the snippet
[23:35:36] *** Quits: Elliria (~littlegir@cpe-66-24-84-219.stny.res.rr.com) (Quit: *POOF*)
[23:35:48] <bjs> rairden: which snippet?
[23:36:09] <bjs> rairden: oh that one sorry I just need to refresh
[23:36:09] <rairden> the gitlab one I gave above.
[23:36:24] <bjs> Yeah okay, it looks like pip isn't aware of something depending on it. Try uninstall it?
[23:36:35] <bjs> Perhaps it's just broken
[23:36:58] <bjs> either because of an update in Python or pip or maybe the package trying to do this fancy namespace stuff ontop a builtin was always broken somehow
[23:36:59] <rairden> Yeah I'm python noob and dont know how to uninstall.
[23:37:07] <bjs> rairden: pip uninstall typing-extensions
[23:37:22] *** Joins: rpkilby (~rpkilby@c-24-20-208-106.hsd1.or.comcast.net)
[23:37:31] <bjs> (you can always re-install it later if it wasn't the cause and/or you need it still.)
[23:37:40] *** Joins: elb0w (~elb0w@172.58.143.156)
[23:37:55] <jinsun> typing-extensions is good, json-extensions is the bad one
[23:38:05] <bjs> oops!
[23:38:23] <bjs> rairden: `pip uninstall json-extensions`  i mean
[23:38:33] <bjs> jinsun: thanks
[23:38:51] <rairden> same type of exception
[23:38:52] *** Joins: wyclif (~wyclif@user/wyclif)
[23:39:00] <bjs> rairden: what type of exception?
[23:39:16] <bjs> Oh no, pip uses json
[23:39:17] <mike18> hi any idea what that prints False? https://ideone.com/4C6I0g
[23:39:37] <bjs> rairden: if it were me, I'd nuke python and start over
[23:39:38] <rairden> it looks identical
[23:39:49] <rairden> yeah I was about to do that an hour ago
[23:40:09] <jinsun> just `rm -rf /home/erik/.local/lib/python3.10/site-packages/json` I guess
[23:40:25] <jinsun> then pip uninstall json-extensions to get rid of the metadata too
[23:40:27] <rairden> yeah that should fix it honestly
[23:40:40] *** Joins: Auron (~Auron956@user/auron)
[23:40:44] <bjs> rairden: at least we probably know the cause, this json-extensions package has installed a json/ directory somewhere in site-packages and this has caused pip and/or python to go crazy. Possibly you can just delete the associated directories and pth file in site-packages/ but I have no idea
[23:40:50] <bjs> it depends how crazy this module was
[23:40:54] <aandrew> I'm assuming because the text '1024717' is not what any of the elements in the list 'files' -- it looks like you want to search for a substring, but I think if x in list is doing exact string matching
[23:41:02] <aandrew> mike18: ^^
[23:41:18] <orbisvicis_> matplotlib is drawing my NaNs larger or without interpolation! How can I disable this?
[23:41:22] <bjs> mike18: "a" is not in ["ab"]
[23:41:30] <rairden> i notice the json module is different than the /usr/lib one. The init file is only 60 lines of code
[23:41:51] <bjs> rairden: yeah, it's trying to do something hacky/clever but I don't think the thing it's even trying to do is allowed.
[23:42:01] <mike18> aandrew: whats the suggested way to compare?
[23:42:33] <bjs> mike18: maybe you want to loop over `files` as well, and check if for any file whether `id in file`
[23:42:35] <SnoopJ> orbisvicis_, I usually drop NaNs from the data I will be plotting before I do
[23:42:46] *** Joins: LiftLeft (~LiftLeft@gateway/vpn/pia/liftleft)
[23:42:50] <aandrew> mike18: I'm not very good with python but I suppose you'd want something like foreach s in files: if s.find(id) then...
[23:43:11] *** Quits: Xardas (~Xardas@149.233.51.127) (Quit: Client closed)
[23:43:17] <aandrew> basically for each element in the list, use the string.find() method for each of the IDs you want to search for
[23:43:28] <aandrew> I'm 100% sure there's some ultra slick pythonistic way to do it, but I don't know it
[23:43:38] <bjs> `in` works for checking substrings
[23:43:49] <orbisvicis_> SnoopJ: I need the nans as a color separate from the colormap, which means I'll have to map my values to rgb using mp.get_cmap(...)()
[23:43:49] <bjs> "a" in "ab" is True,  it's just that "a" is not in ["ab"]
[23:44:13] <orbisvicis_> I was hoping I could disable the "large" nans
[23:44:16] <mike18> Anarchic: yeah: https://ideone.com/4C6I0g sure. how to write that in 1 line btw? :)
[23:44:17] <orbisvicis_> hmm, let me get a test-case
[23:44:30] *** Joins: Lupin (~Lupin@71.39.50.109)
[23:44:37] <SnoopJ> orbisvicis_, plotting a NaN is kind of nonsensical, because it's not a number, and as such there isn't going to be a natural mapping to the data coordinates in general.
[23:45:26] <aandrew> bjs: hm, in that case I'm not sure why his code isn't finding any of the IDs
[23:45:29] *** Quits: theseb (~theseb@47-220-214-54.cnrocmta03.res.dyn.suddenlink.net) (Quit: Leaving)
[23:45:41] <bjs> aandrew: because like I say, "a" is in "ab" but "a" is not in ["ab"].
[23:45:44] *** Quits: CodeMouse92 (~CodeMouse@user/codemouse92) (Ping timeout: 260 seconds)
[23:45:45] <orbisvicis_> SnoopJ: yeah that's why matplotlib has colormap.set_bad() so that nans can be mapped to a value outside the data coordinates
[23:46:02] <SnoopJ> orbisvicis_, I'm afraid I'm not following the problem particularly well here
[23:46:06] <aandrew> bjs: especially since he is iterating over each string.  for s in list_of_strings: if id in s: found = True should find them, no?
[23:46:10] <bjs> aandrew: inclusion isn't transitive, just because "a" is in "ab" and "ab" is in ["ab"] does not mean that "a" is in ["ab"].
[23:46:38] <aandrew> bjs: he's not searching for id in the list though, he's searching for id in each string (individually) from the list
[23:46:45] <mike18> bjs: is there a way to write that in 1 line btw? https://ideone.com/4C6I0g
[23:46:55] <bjs> aandrew: `print(id in files)`  files is the list
[23:47:02] <aandrew> the inner loop is "if id in some_string"
[23:47:25] <bjs> aandrew: well yes, mike18's updated code (to what I suggesd) is correct
[23:47:31] <aandrew> each "file_name" is a string, so "if needle in haystack" should evaluate true, shouldn't it?
[23:47:34] <aandrew> ahh
[23:47:41] <aandrew> I came into this at the updated code I guess... my apologies
[23:47:53] <bjs> mike18: you can use any() instead of the inner loop.  print(any(id in f for f in files))  if you want
[23:47:55] *** Joins: Guest99 (~Guest99@102.118.149.135)
[23:48:04] <mike18> sorry - trying to see how you would write it in 1 line now :)
[23:48:15] <aandrew> mike18: don't try to be slick, just make the code clear. I wasted way too much of my early programming career trying to be slick
[23:48:18] *** Joins: Balzy (~Balzy@host-95-237-165-207.retail.telecomitalia.it)
[23:48:21] <mike18> bjs: but will that compare all ids - what if some are missing?
[23:48:43] <bjs> mike18: i mean this any() is the same as your inner `for file_name in files` so I don't know what you mean
[23:48:44] <Repiphany> btw `assert(found, True)` is bad because you're testing a non-empty tuple
[23:49:18] <mike18> assert(found == True)
[23:49:19] *** Parts: lpapp (~lpapp@ec2-35-158-255-21.eu-central-1.compute.amazonaws.com) ()
[23:49:24] <mike18> or assert(found) i guess
[23:49:38] <bjs> assert found  # no parens.
[23:50:23] <mike18> no ) ?
[23:50:32] <bjs> mike18: nope, assert is not a function
[23:50:52] <SnoopJ> the parens won't break anything, but it's pretty unusual to use them
[23:50:54] <mike18> but python was not complaining - weired
[23:51:29] <jinsun> parens can be used outside of function calls too
[23:51:30] <SnoopJ> mike18, it's because `assert(foo)` and `assert (foo)` are the same thing, and both are the same as `assert foo`
[23:51:41] <SnoopJ> kind of a syntax quirk
[23:52:35] <Repiphany> assert(found, True) == assert bool((found, True)) == assert True
[23:52:36] *** Joins: howdoi (uid224@id-224.lymington.irccloud.com)
[23:52:50] *** Quits: sharperguy (~sharpergu@88.130.221.221) (Ping timeout: 260 seconds)
[23:53:55] <Repiphany> even if found is False
[23:54:38] *** Joins: sharperguy (~sharpergu@88.130.222.144)
[23:54:43] <orbisvicis_> SnoopJ, /topic
[23:55:01] <SnoopJ> orbisvicis_, ?
[23:55:12] <orbisvicis_> SnoopJ: meant this ^
[23:55:18] <orbisvicis_> https://bpa.st/NNCQ
[23:55:21] *** Quits: elb0w (~elb0w@172.58.143.156) (Ping timeout: 245 seconds)
[23:55:26] *** Quits: Vision-_- (~Vision@023-084-128-214.res.spectrum.com) (Ping timeout: 272 seconds)
[23:56:01] <jinsun> some race condition in your keyboard :D
[23:56:04] *** Quits: schumaml (~schumaml@dslb-178-002-182-245.178.002.pools.vodafone-ip.de) (Ping timeout: 272 seconds)
[23:56:09] <orbisvicis_> heh
[23:56:13] *** Joins: greedom (~greedom@p200300de671b0100735cbed970ddf0f0.dip0.t-ipconnect.de)
[23:56:43] <orbisvicis_> SnoopJ, anyway, this shows that nans are drawn larger
[23:57:03] <orbisvicis_> happens even with imshow(..., interpolation=None)
[23:57:21] *** Joins: schumaml (~schumaml@dslb-188-104-178-039.188.104.pools.vodafone-ip.de)
[23:57:38] *** Joins: cuhela (~cuhela@188.119.45.227)
[23:58:01] *** Joins: jpn_ (~jpn@user/jpn)
[23:58:21] *** Joins: stockh0lm (~Andreas@p200300d2c70cd40090355f9938920f5d.dip0.t-ipconnect.de)
[23:58:38] *** Quits: aclark (~aclark@pool-108-51-184-139.washdc.fios.verizon.net) (Ping timeout: 250 seconds)
[23:59:13] <orbisvicis_> oh and it happens even after converting testi to np.float64 so its not a int vs float thing
