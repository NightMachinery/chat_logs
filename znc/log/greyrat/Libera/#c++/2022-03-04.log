[00:00:46] *** Quits: bebyx (~Thunderbi@user/bebyx) (Ping timeout: 245 seconds)
[00:03:10] *** Joins: Null_A (~null_a@2601:645:8700:2290:c864:fc8b:2d0b:834a)
[00:03:44] *** Joins: CodeAgain (~codeagain@user/CodeAgain)
[00:06:35] *** Quits: varioust (~varioust@gateway/tor-sasl/varioust) (Ping timeout: 240 seconds)
[00:07:37] *** Quits: Null_A (~null_a@2601:645:8700:2290:c864:fc8b:2d0b:834a) (Ping timeout: 240 seconds)
[00:09:59] *** Quits: RoKenn (~RoKenn@user/rokenn) (Quit: NSA proxy service interrupted)
[00:10:15] *** Joins: bebyx (~Thunderbi@user/bebyx)
[00:13:07] *** Joins: c4017w_ (~c4017@209.52.68.8)
[00:14:48] *** Quits: sord937 (~sord937@gateway/tor-sasl/sord937) (Quit: sord937)
[00:16:17] *** Quits: c4017w__ (~c4017@209.52.68.8) (Ping timeout: 240 seconds)
[00:17:07] *** Joins: Guest3689 (~Guest@181.95.236.163)
[00:17:24] *** Quits: Viewday11 (~Viewday@user/viewday) (Ping timeout: 240 seconds)
[00:17:47] *** Joins: Viewday11 (~Viewday@user/viewday)
[00:23:35] *** Quits: GNUmoon (~GNUmoon@gateway/tor-sasl/gnumoon) (Ping timeout: 240 seconds)
[00:25:45] *** Joins: varioust (~varioust@gateway/tor-sasl/varioust)
[00:25:49] *** Joins: Viewday115 (~Viewday@user/viewday)
[00:26:45] *** Quits: immibis (~hexchat@2a02:3032:3:a84:62b2:c42d:455d:d277) (Read error: Connection reset by peer)
[00:27:19] *** Joins: immibis (~hexchat@2a02:3032:3:a84:62b2:c42d:455d:d277)
[00:27:20] *** Quits: Viewday11 (~Viewday@user/viewday) (Read error: Connection reset by peer)
[00:27:21] *** Viewday115 is now known as Viewday11
[00:28:32] *** Joins: sh00p (~z@89-253-71-70.customers.ownit.se)
[00:30:34] *** Joins: Viewday110 (~Viewday@user/viewday)
[00:31:46] <CarloWood> I remember vaguely that boost (I think?) had something that writes to files (I think?) and you could just swap a class or something to either write the file using xml, or json or something else - this might or might not be related to persistent configuration files.
[00:32:05] *** Quits: Viewday11 (~Viewday@user/viewday) (Read error: Connection reset by peer)
[00:32:05] *** Viewday110 is now known as Viewday11
[00:32:12] <CarloWood> In other words - bad memory.  Can someone remember what the name of the library is that I'm thinking of?
[00:33:52] *** Quits: ___nick___ (~quassel@cpc68286-cdif17-2-0-cust533.5-1.cable.virginm.net) (Ping timeout: 250 seconds)
[00:34:01] <T`aZ> boost has some serializable class/components yes
[00:34:19] *** Quits: Teukka (~teukka@user/Teukka) (Read error: Connection reset by peer)
[00:34:43] <CarloWood> I think what I read was one library, and that used another so it could serialize in different/configurable ways...
[00:36:08] <CarloWood> Yeah - that second lib was boost-serialization
[00:36:41] *** Joins: Null_A (~null_a@2601:645:8700:2290:3c1e:11a0:debc:333e)
[00:36:56] *** Quits: CodePoint (~CodePoint@173-160-94-242-atlanta.hfc.comcastbusiness.net) (Quit: CodePoint)
[00:37:24] *** Joins: Teukka (~teukka@84-216-41-232.customers.ownit.se)
[00:37:24] *** Quits: Teukka (~teukka@84-216-41-232.customers.ownit.se) (Changing host)
[00:37:24] *** Joins: Teukka (~teukka@user/Teukka)
[00:43:30] *** Quits: SGautam (uid286066@id-286066.ilkley.irccloud.com) (Quit: Connection closed for inactivity)
[00:46:08] <FAT1337> nice
[00:49:03] *** Joins: sobkas (~sobkas@95.175.17.217)
[00:49:48] *** Quits: Hello71 (~Hello71@wireguard/contributor/hello71) (Remote host closed the connection)
[00:50:05] *** Joins: Hello71 (~Hello71@wireguard/contributor/hello71)
[00:50:17] *** Quits: dld (~davidlowr@73.61.8.74) (Ping timeout: 240 seconds)
[00:52:39] *** Joins: dld (~davidlowr@2601:197:600:1210:fddb:e1db:6b56:f9d3)
[00:53:05] <Alipha> imMute: seems like a bug where the coder intended to write (*p)++;
[00:56:57] *** Quits: jsbach (~jsbach@2a01:c23:64c8:ff00:8062:461e:f6a0:9313) (Ping timeout: 240 seconds)
[00:58:18] *** Joins: KAHR-Alpha (~Alpha@2a01cb0d024a66003d8cd34af480fbda.ipv6.abo.wanadoo.fr)
[00:58:28] <zz> should've just written ++*p
[00:58:32] *** Joins: rgrinberg (~textual@2806:101e:7:70b6:8dd4:3160:af1d:d6df)
[01:00:18] *** Quits: slidercrank (~slidercra@user/slidercrank) (Ping timeout: 272 seconds)
[01:05:30] *** Quits: cosimone (~user@2001:b07:ae5:db26:c24a:d20:4d91:1e20) (Ping timeout: 250 seconds)
[01:05:47] *** Quits: pretty_dumm_guy (trottel@gateway/vpn/protonvpn/prettydummguy/x-88029655) (Ping timeout: 256 seconds)
[01:05:55] *** Quits: LuksNuke (~LuksNuke@gateway/tor-sasl/luksnuke) (Ping timeout: 240 seconds)
[01:05:59] *** Quits: m_ben (~m_ben@user/m-ben/x-7429725) (Quit: WeeChat 3.4)
[01:06:39] <river> prefix ++ is better yeah
[01:08:46] *** Quits: yhirose3 (~yhirose3@user/yhirose3) (Quit: WeeChat 2.8)
[01:13:22] *** Joins: foobaz212 (~foobaz212@152.37.103.80)
[01:13:41] *** Joins: c4017w__ (~c4017@209.52.68.8)
[01:14:19] <foobaz212> is there any point in having a std::option<string> over just string? I mean, with the latter, if it's not set you can just check if it's equal to empty string
[01:14:41] <imMute> Alipha: it's not a bug, the line before assigned to *p.
[01:14:42] <T`aZ> i's all about semantics
[01:15:03] <imMute> foobaz212: if you need to differentiate "the empty string" from "no string at all", then yes, use optional.  if not, then a plain string should be fine
[01:15:22] <T`aZ> foobaz212: an empty string might be a perfect valid string. In some other cases, empty string makes no sense, and could be used as 'no string'
[01:15:37] *** Joins: hashfunc107e (~user@2601:5c0:c280:7090:78e9:5f82:1899:8c96)
[01:15:49] <foobaz212> T`aZ so what does optional<empy_string> mean?
[01:16:08] <T`aZ> that you can have a string, or not
[01:16:21] <T`aZ> and if you have a string, it can obviously be also empty
[01:16:38] *** Joins: Viewday116 (~Viewday@user/viewday)
[01:16:59] <foobaz212> but empty string implies that the string wasn't even set (potentially)
[01:17:08] <imMute> suppose you have a case where the user provides some string, but if they don't provide a string at all, then you want to use a default.  you'd need optional<string> for that, because you want the user to specify an empty string (that would *not* get overridden with the default)
[01:17:15] <T`aZ> no, it means it's tempy, it has a vallue
[01:17:24] *** Quits: c4017w_ (~c4017@209.52.68.8) (Ping timeout: 272 seconds)
[01:17:35] <T`aZ> like the value 0 for an int, as an example
[01:17:53] <imMute> think of string as a basket of chars (apples).  an empty basket is different than not having a basket at all (though whether or not you want them to mean the same thing is up to the situation)
[01:17:58] <foobaz212> but if you don't set a string, it still gets a "value" - empty string
[01:18:15] *** Quits: Viewday11 (~Viewday@user/viewday) (Ping timeout: 256 seconds)
[01:18:16] *** Viewday116 is now known as Viewday11
[01:18:37] <foobaz212> so even if I didn't set the string, it will still have a "value" - that doesn't mean it was set to that value
[01:18:50] <imMute> correct.
[01:18:58] <imMute> where "string" means "std::string"
[01:19:02] <foobaz212> yep
[01:19:11] <foobaz212> it's confusing behavior, and I think optional only compound it
[01:19:45] <T`aZ> it's not confusing
[01:19:56] <T`aZ> it's all about semantics
[01:20:28] <T`aZ> to be more pragmatic, you often use optional<something> when you cannot return a something in all cases, thikn about error cases
[01:21:31] <foobaz212> but just because you get a string from that optional, it doesn't necessarily mean that the string was meant to have a value
[01:21:42] <T`aZ> imagine you have a function : optional<std::string> get_file_content(path)
[01:21:57] <imMute> foobaz212: if the optional contains a string (instead of nothing), then the string you pull out of it was set to that value (whatever it is)
[01:22:12] <T`aZ> if file is not found, you'll return an nullopt : if file is found you return the content of the file
[01:22:34] <T`aZ> but what if the file is empty, you return the content, that is the empty string in *this* case
[01:22:57] *** Quits: Tobbi (~Tobbi@2a02:8108:1240:48ec:ec7a:c710:284d:4802) (Ping timeout: 240 seconds)
[01:23:04] <T`aZ> thus returning a nullopt, or the emptystring has different meaning
[01:26:16] <imMute> that's a great example too (even if it ignores all the other things that could go wrong ;)
[01:26:29] <T`aZ> foobaz212: and also, dont confuse nullopt, and default values
[01:27:13] <T`aZ> a std::string has always a value; it cannot be uninitialized
[01:27:18] <foobaz212> if the file was empty, what would be the right thing to return? None or empty string
[01:27:28] <foobaz212> s/None/nullopy
[01:27:34] <foobaz212> nullopt
[01:28:34] *** Joins: pretty_dumm_guy (trottel@gateway/vpn/protonvpn/prettydummguy/x-88029655)
[01:28:41] <T`aZ> it depends on the meaning of the interface/function/code/your software/
[01:28:41] *** Quits: pretty_dumm_guy (trottel@gateway/vpn/protonvpn/prettydummguy/x-88029655) (Client Quit)
[01:30:12] <Alipha> If the file was empty but existed, I would return ""
[01:30:13] <T`aZ> if in your system, no empty files exist. then you could represent file not found with an empty string
[01:31:12] *** Joins: pretty_dumm_guy (trottel@gateway/vpn/protonvpn/prettydummguy/x-88029655)
[01:31:32] *** Quits: pretty_dumm_guy (trottel@gateway/vpn/protonvpn/prettydummguy/x-88029655) (Client Quit)
[01:31:36] *** Joins: Tobbi (~Tobbi@2a02:8108:1240:48ec:e0cd:c88b:7499:2cc0)
[01:31:38] <T`aZ> but I would say that such system is not common, and to be generic, you should handle empty files. thus makes the distinction between file not found, and empty file.
[01:32:11] *** Joins: pretty_dumm_guy (trottel@gateway/vpn/protonvpn/prettydummguy/x-88029655)
[01:32:30] *** Quits: immibis (~hexchat@2a02:3032:3:a84:62b2:c42d:455d:d277) (Remote host closed the connection)
[01:32:38] *** Joins: immibis (~hexchat@2a02:3032:3:a84:62b2:c42d:455d:d277)
[01:32:49] *** Joins: pulse_ (~pulse@user/pulse)
[01:33:07] *** Quits: pulse (~pulse@user/pulse) (Killed (NickServ (GHOST command used by pulse_)))
[01:33:11] *** pulse_ is now known as pulse
[01:33:38] <Alipha> In most cases, "" is a fine "sentinel value" and std::string is fine, and std::optional<std::string> is unnecessary. But as with this "get file contents" example, you may want to distinguish between "" and no string
[01:34:11] <T`aZ> foobaz212: another example would be optional<int> : if in your system some value of int makes no sense, you could use this value as a sentinel value to express that it's not really a valid value, but something else (not found, error, overflow etc)
[01:34:50] <T`aZ> but if all int are valid, and you need to express 'i dont have an int at all' , then use optional
[01:35:52] *** Quits: Hello71 (~Hello71@wireguard/contributor/hello71) (Remote host closed the connection)
[01:35:57] *** Quits: immibis (~hexchat@2a02:3032:3:a84:62b2:c42d:455d:d277) (Read error: Connection reset by peer)
[01:36:03] *** Joins: Hello71 (~Hello71@wireguard/contributor/hello71)
[01:36:05] <Alipha> Often something like -1 or INT_MAX can be used as a sentinel value, but yes, if -1 and INT_MAX are valid values, then std::optional<int> makes sense
[01:36:07] *** Joins: immibis (~hexchat@2a02:3032:3:a84:62b2:c42d:455d:d277)
[01:36:29] *** Quits: magla (~gelignite@d53619a1.access.ecotel.net) (Quit: Stay safe!)
[01:36:30] <T`aZ> i'll insist again on the semantic part, there is no universal solution, it must be part of the design of your api/domain
[01:36:33] <Alipha> (and I realize I'm just repeating what T`aZ is saying, but often saying the same thing in different ways helps)
[01:37:37] *** Quits: Null_A (~null_a@2601:645:8700:2290:3c1e:11a0:debc:333e) (Ping timeout: 240 seconds)
[01:37:38] <T`aZ> (this is fine, i do the same :p)
[01:37:38] <foobaz212> I think that's one of the problem, that it really depends on your specific API domain
[01:37:55] *** Quits: varioust (~varioust@gateway/tor-sasl/varioust) (Ping timeout: 240 seconds)
[01:38:04] <foobaz212> because when you interact with 3rd parties, you have to now understand how they're thinking and try to wrap it into your API
[01:39:19] <foobaz212> I feel like the language itself should be consistent enough so that the language semantics shouldn't depend on who's writing the code
[01:40:11] <T`aZ> it is consistent
[01:40:59] <foobaz212> for eg, say you're a firm believer of optional, and you're interacting with a 3rd party has a function get_foo() -> std::string, with empty string indicating no value
[01:41:36] <T`aZ> if you use optional<string>, i assume that nullopt, string being null, and string being something have all different meanings
[01:41:52] <imMute> s/string being null/string being empty/
[01:42:10] <T`aZ> or maybe an empty string is not differant than a string being something, but that's just a detail
[01:42:38] <T`aZ> imMute: yes, there is no string null :p sorry
[01:43:19] *** Quits: npaperbot (~npaperbot@dodecahedron.m-ou.se) (Remote host closed the connection)
[01:43:26] *** Joins: npaperbot (~npaperbot@dodecahedron.m-ou.se)
[01:43:26] *** ChanServ sets mode: +v npaperbot
[01:43:41] <foobaz212> right, but but some apis don't use options - they use empty string to convey "no value found". And if your codebases uses optional, then you have to read their documentation and understand their way of thinking
[01:43:57] <T`aZ> but you always have to do that part
[01:43:59] <foobaz212> I'm just saying - there's two styles of thinking, and it is confusing
[01:44:19] <imMute> for those APIs the difference between no string at all and an empty string is not important.
[01:44:28] <imMute> so they simplified and just used std::string with no optional.
[01:44:44] <foobaz212> I'm just saying - it should be clear from the function signature what the semantics are
[01:44:47] *** Quits: Hello71 (~Hello71@wireguard/contributor/hello71) (Remote host closed the connection)
[01:45:02] *** Joins: Hello71 (~Hello71@wireguard/contributor/hello71)
[01:45:09] <imMute> it is!   if it's a string, the two don't differentiate.  if it's an optional<string>, they mean different things
[01:45:21] <imMute> (the two / they == no string vs empty string)
[01:45:22] <T`aZ> foobaz212: i understand what you mean, you want types+value semantics in the signature, but that cannot be done :p
[01:45:45] <foobaz212> yep:)
[01:46:05] <T`aZ> like returning an int, but specifiying that -1 and -2 are invalid values and should be handled differently
[01:46:30] <T`aZ> you can always create your own class with those properties, but it wont sole the problem of interacting with 3rd party api
[01:46:37] <T`aZ> s/sole/solve/
[01:47:40] * imMute is in the camp that sentinel values are bad, so I tend to use optional<> more than I need to.  which, to me at least, simplifies things because I don't have to worry about if there's a sentinel value for a given type and what it might be
[01:48:36] <T`aZ> indeedn, optional and the other class wth erro values are a step in that direction
[01:49:16] <foobaz212> a bit offtopic, but how do I create optinal string in myql schema? Looking at this link https://stackoverflow.com/questions/45706346/which-data-type-should-i-use-for-optional-string-in-mysql
[01:49:18] <T`aZ> being explicit in the signature is better than relying on comments saying //btw, it string's empty then the fct failed
[01:49:37] <T`aZ> s/it/if/
[01:50:46] *** Quits: Tangent-Man (~Tang3nt-M@cpc145602-basl14-2-0-cust33.20-1.cable.virginm.net) (Remote host closed the connection)
[01:51:36] *** Quits: ipe (~ipe@91-156-246-15.elisa-laajakaista.fi) (Remote host closed the connection)
[01:51:40] *** Joins: Null_A (~null_a@c-98-210-133-39.hsd1.ca.comcast.net)
[01:51:46] <foobaz212> mysql interprets empty string as null btw:)  https://softwareengineering.stackexchange.com/questions/32578/sql-empty-string-vs-null-value (if I'm reading it correctly, please correct me if I'm mistaken)
[01:52:49] *** Quits: smallville7123 (~smallvill@cpe-172-193-72-46.qld.foxtel.net.au) (Ping timeout: 256 seconds)
[01:53:05] *** Quits: evangeline (~Eleanor@178.79.105.181) (Ping timeout: 256 seconds)
[01:54:12] *** Quits: skapata (~Skapata@user/skapata) (Ping timeout: 240 seconds)
[01:57:38] *** Quits: zeenk (~zeenk@2a02:2f04:a30d:1300:51a3:bcfc:6cda:9fc5) (Quit: Konversation terminated!)
[01:59:30] *** Quits: rendar (~rendar@user/rendar) (Quit: Leaving)
[01:59:51] *** Joins: varioust (~varioust@gateway/tor-sasl/varioust)
[02:03:18] *** Quits: greyrat_ (~greyrat@ip202.ip-51-178-215.eu) (Bye)
[02:03:38] *** Joins: greyrat (~greyrat@ip202.ip-51-178-215.eu)
[02:04:02] *** Quits: pippijn (~pippijn@isis.xinutec.org) (Ping timeout: 240 seconds)
[02:04:32] *** Quits: pnill (~pnill@ip170.ip-54-39-37.net) (Ping timeout: 240 seconds)
[02:04:48] *** Joins: pnill (~pnill@ip170.ip-54-39-37.net)
[02:04:52] *** Server sets mode: +Fcnt 
[02:05:14] *** Quits: routeveg (~lee@197.ip-51-195-136.eu) (Ping timeout: 268 seconds)
[02:05:19] *** Joins: zaratustra (~zaratustr@idlerpg/player/zaratustra)
[02:05:49] *** Joins: pippijn (~pippijn@isis.xinutec.org)
[02:05:51] *** Quits: Brocker (~NoBody@user/brocker) (Ping timeout: 268 seconds)
[02:05:51] *** Quits: zaratustra_ (~zaratustr@idlerpg/player/zaratustra) (Ping timeout: 268 seconds)
[02:06:27] *** Joins: routeveg (~lee@197.ip-51-195-136.eu)
[02:08:46] *** Quits: gh34 (~textual@cpe-184-58-181-106.wi.res.rr.com) (Quit: Textual IRC Client: www.textualapp.com)
[02:10:04] *** Quits: Null_A (~null_a@c-98-210-133-39.hsd1.ca.comcast.net) (Ping timeout: 250 seconds)
[02:11:52] *** Quits: LucaTM (~LucaTM@user/lucatm) (Quit: Textual IRC Client: www.textualapp.com)
[02:13:00] *** Quits: rgrinberg (~textual@2806:101e:7:70b6:8dd4:3160:af1d:d6df) (Ping timeout: 240 seconds)
[02:14:24] *** Joins: c4017w_ (~c4017@209.52.68.8)
[02:15:22] *** Quits: Burgundy (~NA@86.121.143.206) (Ping timeout: 260 seconds)
[02:17:25] *** Joins: Viewday114 (~Viewday@user/viewday)
[02:17:50] *** Quits: TonyStone (~TonyStone@cpe-74-76-51-197.nycap.res.rr.com) (Remote host closed the connection)
[02:18:12] *** Quits: c4017w__ (~c4017@209.52.68.8) (Ping timeout: 272 seconds)
[02:19:27] *** Quits: Viewday11 (~Viewday@user/viewday) (Ping timeout: 256 seconds)
[02:19:28] *** Viewday114 is now known as Viewday11
[02:25:33] *** Joins: yhirose3 (~yhirose3@user/yhirose3)
[02:26:11] *** Quits: bebyx (~Thunderbi@user/bebyx) (Ping timeout: 252 seconds)
[02:27:17] <Alipha> foobaz212: where exactly did you get that from that post?
[02:27:28] *** Joins: Viewday118 (~Viewday@user/viewday)
[02:29:05] *** Quits: Viewday11 (~Viewday@user/viewday) (Ping timeout: 256 seconds)
[02:29:06] *** Viewday118 is now known as Viewday11
[02:31:22] *** Quits: mattf (~mattf@li908-138.members.linode.com) (Quit: ZNC 1.7.5+deb4 - https://znc.in)
[02:33:17] *** Joins: mattf (~mattf@li908-138.members.linode.com)
[02:33:46] *** Joins: pizdets_ (~pizdets@183.182.114.123)
[02:34:07] *** Quits: pizdets (~pizdets@183.182.110.54) (Ping timeout: 265 seconds)
[02:35:26] *** Joins: TonyStone (~TonyStone@cpe-74-76-51-197.nycap.res.rr.com)
[02:39:34] *** Joins: lxsameer (~lxsameer@user/lxsameer)
[02:41:27] <Alipha> foobaz212: that's wrong. and i fired up my mysql server just to make sure mysql doesn't do something weird. i inserted two records, one with '' and one with null. `where foo = ''` returned the one record and `where foo is null` returned the other
[02:45:57] *** Quits: Nitrousoxide (~msdos@user/nitrousoxide) (Ping timeout: 240 seconds)
[02:46:36] *** Quits: Guest3689 (~Guest@181.95.236.163) (Remote host closed the connection)
[02:46:38] <Alipha> foobaz212: and, indeed, c++ code is horribly inconsistent. that's probably mostly due to its long life. you have c-style code, you have c++98 code, you have c++11 code. std::optional wasn't until c++17. and now c++20 with concepts and modules brings plenty of new ways to do things too
[02:46:49] *** Joins: Nitrousoxide (~msdos@user/nitrousoxide)
[02:47:01] *** Joins: blackout69 (~blackout6@37.183.230.121)
[02:47:47] *** Quits: immibis (~hexchat@2a02:3032:3:a84:62b2:c42d:455d:d277) (Remote host closed the connection)
[02:48:23] *** Joins: immibis (~hexchat@2a02:3032:3:a84:62b2:c42d:455d:d277)
[02:48:41] *** Quits: GreenResponse (~tomek@r-45-155-148-237.gpon.bialnet.pl) (Quit: Leaving)
[02:48:51] *** Quits: Hello71 (~Hello71@wireguard/contributor/hello71) (Remote host closed the connection)
[02:49:03] *** Joins: Hello71 (~Hello71@wireguard/contributor/hello71)
[02:52:39] *** Quits: whatsupboy (~whatsupbo@user/scobydoo) (Quit: brb)
[02:54:06] *** Quits: PlasmaHH (~PlasamaHH@user/plasmahh) (Ping timeout: 245 seconds)
[02:55:30] *** Quits: yhirose3 (~yhirose3@user/yhirose3) (Quit: WeeChat 2.8)
[03:04:45] *** Joins: cation21 (cation@user/cation)
[03:05:46] *** Quits: cation (cation@user/cation) (Ping timeout: 260 seconds)
[03:07:47] *** Parts: blackout69 (~blackout6@37.183.230.121) ()
[03:08:08] *** cation21 is now known as cation
[03:08:27] *** Joins: ckdCreations (~ckdCreati@c-73-140-151-116.hsd1.wa.comcast.net)
[03:08:30] *** Quits: plastico (~plastico@neomutt/plastico) (Quit: WeeChat 3.4)
[03:09:17] *** Quits: hashfunc107e (~user@2601:5c0:c280:7090:78e9:5f82:1899:8c96) (Ping timeout: 240 seconds)
[03:11:04] *** Joins: Garbanzo_ (~Garbanzo@2602:304:6eac:dc10::43)
[03:13:13] *** Quits: kaph (~kaph@net-109-116-124-149.cust.vodafonedsl.it) (Read error: Connection reset by peer)
[03:13:37] *** Joins: Null_A (~null_a@2601:645:8700:2290:3c1e:11a0:debc:333e)
[03:14:46] *** Quits: KAHR-Alpha (~Alpha@2a01cb0d024a66003d8cd34af480fbda.ipv6.abo.wanadoo.fr) (Changing host)
[03:14:46] *** Joins: KAHR-Alpha (~Alpha@aether/dev/KAHR-Alpha)
[03:15:11] *** Joins: c4017w__ (~c4017@209.52.68.8)
[03:16:29] *** Quits: TheHermann (~TheHerman@gateway/tor-sasl/thehermann) (Quit: Leaving)
[03:16:52] *** Joins: kaph (~kaph@net-109-116-124-149.cust.vodafonedsl.it)
[03:17:57] *** Quits: Null_A (~null_a@2601:645:8700:2290:3c1e:11a0:debc:333e) (Ping timeout: 240 seconds)
[03:18:12] *** Quits: c4017w_ (~c4017@209.52.68.8) (Ping timeout: 240 seconds)
[03:18:36] *** Quits: Garbanzo_ (~Garbanzo@2602:304:6eac:dc10::43) (Ping timeout: 240 seconds)
[03:18:52] *** Joins: Linux77 (~7Linux7@2804:d45:8c08:9300:ead8:83e5:3ff3:b0a6)
[03:19:01] *** Quits: spaceangel_ (~spaceange@ip-78-102-216-202.net.upcbroadband.cz) (Remote host closed the connection)
[03:19:10] *** Joins: Viewday113 (~Viewday@user/viewday)
[03:19:43] *** Joins: skapata (~Skapata@2804:14c:87b0:9d2e:8151:9b0d:b8cd:32c4)
[03:19:43] *** Quits: skapata (~Skapata@2804:14c:87b0:9d2e:8151:9b0d:b8cd:32c4) (Changing host)
[03:19:43] *** Joins: skapata (~Skapata@user/skapata)
[03:19:49] *** Quits: PJBoy (~PJBoy@user/pjboy) (Ping timeout: 240 seconds)
[03:20:56] *** Quits: Viewday11 (~Viewday@user/viewday) (Read error: Connection reset by peer)
[03:20:57] *** Viewday113 is now known as Viewday11
[03:21:52] *** Joins: ferdna (~ferdna@user/ferdna)
[03:24:47] *** Joins: rgrinberg (~textual@2806:101e:7:70b6:74fb:2532:55e4:bc77)
[03:26:19] *** Joins: Viewday119 (~Viewday@user/viewday)
[03:27:48] *** Quits: Viewday11 (~Viewday@user/viewday) (Read error: Connection reset by peer)
[03:27:48] *** Viewday119 is now known as Viewday11
[03:28:15] *** Quits: immibis (~hexchat@2a02:3032:3:a84:62b2:c42d:455d:d277) (Remote host closed the connection)
[03:28:54] *** Joins: immibis (~hexchat@2a02:3032:3:a84:62b2:c42d:455d:d277)
[03:32:46] *** Joins: Viewday113 (~Viewday@user/viewday)
[03:34:49] *** Quits: Viewday11 (~Viewday@user/viewday) (Ping timeout: 256 seconds)
[03:34:50] *** Viewday113 is now known as Viewday11
[03:38:18] *** Quits: pretty_dumm_guy (trottel@gateway/vpn/protonvpn/prettydummguy/x-88029655) (Quit: WeeChat 3.4)
[03:38:46] *** Quits: Hello71 (~Hello71@wireguard/contributor/hello71) (Remote host closed the connection)
[03:38:52] *** Quits: karakedi (~eAC53C340@user/karakedi) (Remote host closed the connection)
[03:39:02] *** Joins: Hello71 (~Hello71@wireguard/contributor/hello71)
[03:42:45] *** Quits: Hello71 (~Hello71@wireguard/contributor/hello71) (Remote host closed the connection)
[03:43:02] *** Joins: Hello71 (~Hello71@wireguard/contributor/hello71)
[03:43:42] *** Quits: ckdCreations (~ckdCreati@c-73-140-151-116.hsd1.wa.comcast.net) (Ping timeout: 272 seconds)
[03:44:33] *** Joins: PJBoy (~PJBoy@user/pjboy)
[03:46:55] *** Joins: Null_A (~null_a@2601:645:8700:2290:3c1e:11a0:debc:333e)
[03:47:26] *** Quits: Hello71 (~Hello71@wireguard/contributor/hello71) (Remote host closed the connection)
[03:47:35] *** Joins: GNUmoon (~GNUmoon@gateway/tor-sasl/gnumoon)
[03:47:37] *** Joins: Hello71 (~Hello71@wireguard/contributor/hello71)
[03:49:54] *** Joins: smallville7123 (~smallvill@cpe-172-193-72-46.qld.foxtel.net.au)
[03:51:00] *** Quits: Null_A (~null_a@2601:645:8700:2290:3c1e:11a0:debc:333e) (Ping timeout: 240 seconds)
[03:54:17] *** Quits: smallville7123 (~smallvill@cpe-172-193-72-46.qld.foxtel.net.au) (Read error: Connection reset by peer)
[03:54:50] *** Quits: immibis (~hexchat@2a02:3032:3:a84:62b2:c42d:455d:d277) (Remote host closed the connection)
[03:55:04] *** Joins: immibis (~hexchat@2a02:3032:3:a84:62b2:c42d:455d:d277)
[04:00:50] *** Quits: jplejacq (~jplejacq@24.224.90.176) (Ping timeout: 260 seconds)
[04:02:44] *** Quits: nostar (~nostar@68.51.221.108) (Ping timeout: 250 seconds)
[04:05:12] *** Joins: lh_mouse (~lh_mouse@mingw-w64/developer/lhmouse)
[04:07:56] *** Joins: karakedi (~eAC53C340@user/karakedi)
[04:11:34] *** Joins: TonyStone31 (~TonyStone@2603-7080-8607-c36a-d912-8cca-9865-b723.res6.spectrum.com)
[04:11:45] *** Quits: senoraraton (~senorarat@192-195-83-130.static.monkeybrains.net) (Remote host closed the connection)
[04:12:37] *** Quits: sobkas (~sobkas@95.175.17.217) (Quit: sobkas)
[04:13:14] *** Joins: senoraraton (~senorarat@192-195-83-130.static.monkeybrains.net)
[04:13:21] *** Joins: Kohe (~Kohe@46.12.214.37.dsl.dyn.forthnet.gr)
[04:14:45] *** Quits: lxsameer (~lxsameer@user/lxsameer) (Ping timeout: 256 seconds)
[04:15:40] *** Joins: c4017w_ (~c4017@209.52.68.8)
[04:19:48] *** Quits: c4017w__ (~c4017@209.52.68.8) (Ping timeout: 272 seconds)
[04:19:55] *** Quits: senoraraton (~senorarat@192-195-83-130.static.monkeybrains.net) (Remote host closed the connection)
[04:21:03] *** Joins: senoraraton (~senorarat@192-195-83-130.static.monkeybrains.net)
[04:21:19] *** Joins: Null_A (~null_a@2601:645:8700:2290:3c1e:11a0:debc:333e)
[04:22:03] *** Joins: ncwbqcfe (~rvgzuuqp@gateway/tor-sasl/rvgzuuqp)
[04:23:37] *** Joins: jplejacq (~jplejacq@68.71.169.160)
[04:24:07] *** Quits: Viewday11 (~Viewday@user/viewday) (Ping timeout: 256 seconds)
[04:25:37] *** Quits: Null_A (~null_a@2601:645:8700:2290:3c1e:11a0:debc:333e) (Ping timeout: 240 seconds)
[04:27:23] *** Joins: TheParham (~Parham@ns3083122.ip-145-239-7.eu)
[04:27:34] *** Joins: CatCow (~wtf_over@c-73-96-109-206.hsd1.or.comcast.net)
[04:27:49] <TheParham> Hi there...
[04:28:12] *** Joins: Viewday119 (~Viewday@user/viewday)
[04:28:59] *** Quits: TonyStone31 (~TonyStone@2603-7080-8607-c36a-d912-8cca-9865-b723.res6.spectrum.com) (Quit: Leaving)
[04:29:43] *** Joins: lh_ideapad (~lh_mouse@mingw-w64/developer/lhmouse)
[04:29:49] *** Viewday119 is now known as Viewday11
[04:30:14] <TheParham> I'm trying to work with bitwise operators to get 11 bit chunks of data from a long entropy... is there any good documentation or code sample for a guy who codes as a hobby? :P
[04:30:51] *** Quits: Hello71 (~Hello71@wireguard/contributor/hello71) (Remote host closed the connection)
[04:30:53] *** Joins: alesan (~root@c-73-158-143-8.hsd1.ca.comcast.net)
[04:30:57] <alesan> hello
[04:31:04] *** Joins: Hello71 (~Hello71@wireguard/contributor/hello71)
[04:31:32] <TheParham> I mean masking & stuff works great with anything 8-16-32-64 bit wise, but 11 bit chunks gives me headache to think about the ways it should be handled! lol
[04:34:53] <TheParham> any nerds here who may assist a lost amateur? ^_^
[04:35:59] <Alipha> TheParham: data = entropy & ((1 << 11) - 1);
[04:36:29] *** Joins: Viewday113 (~Viewday@user/viewday)
[04:36:57] *** Quits: Thelma (uid509475@id-509475.lymington.irccloud.com) ()
[04:37:28] <TheParham> Alipha: Thank you very much... Is it also possible for me to use that in a loop and shift 11 bits on each iteration? I'm just guessing atm... sorry, new to this stuff
[04:37:50] *** Quits: Viewday11 (~Viewday@user/viewday) (Read error: Connection reset by peer)
[04:37:50] *** Viewday113 is now known as Viewday11
[04:41:20] *** Joins: Viewday115 (~Viewday@user/viewday)
[04:42:37] <TheParham> Oh, let me also illuminate the "long entropy" as like 256 bits or even 512 bits... is it okay to simply shift 11 bits at a time with a pointer of ANY type? I mean does it work if I'm shifting on a uint8_t array?
[04:42:47] *** Quits: Viewday11 (~Viewday@user/viewday) (Read error: Connection reset by peer)
[04:42:50] <TheParham> Terribly sorry for the noob questions :(
[04:43:39] <TheParham> Couldn't find anything who suggests best practice on this matter
[04:44:13] *** Quits: karakedi (~eAC53C340@user/karakedi) (Ping timeout: 256 seconds)
[04:44:28] *** Quits: senoraraton (~senorarat@192-195-83-130.static.monkeybrains.net) (Remote host closed the connection)
[04:45:47] *** Joins: senoraraton (~senorarat@192-195-83-130.static.monkeybrains.net)
[04:46:02] <Alipha> TheParham: yeah, just `entropy >>= 11;` afterwards. Though then you'll want to combine in more entropy as you use it, so that's the tricky part
[04:47:01] *** Joins: karakedi (~eAC53C340@user/karakedi)
[04:47:47] <TheParham> Alipha: Thanks sir, God bless you :) So I guess I've to go test some code & see what happens. Appreciate your heads up. Cheers
[04:47:55] *** Quits: undephin3d (~undephin3@158.181.83.107) (Ping timeout: 256 seconds)
[04:49:24] *** Quits: pulse (~pulse@user/pulse) (Quit: pulse)
[04:49:56] *** Quits: drbeco (~beco@user/beco) (Read error: Connection reset by peer)
[04:51:27] *** Joins: moose (~moose@user/moose)
[04:52:27] *** Quits: vicfred (~vicfred@user/vicfred) (Quit: Leaving)
[04:52:55] *** Joins: leduyquang753 (~leduyquan@user/leduyquang753)
[04:53:56] *** Joins: Null_A (~null_a@2601:645:8700:2290:3c1e:11a0:debc:333e)
[04:54:52] *** Quits: Yruama (~Yruama@2a01:cb15:8128:c100:6c61:6a53:9bf0:64ca) (Quit: Leaving)
[04:55:04] *** Joins: drbeco (~beco@user/beco)
[04:56:35] *** Joins: nostar (~nostar@2601:406:4100:34d:8f4:5ea7:30b2:b7e6)
[04:58:17] *** Quits: Null_A (~null_a@2601:645:8700:2290:3c1e:11a0:debc:333e) (Ping timeout: 240 seconds)
[04:58:46] *** Quits: Hello71 (~Hello71@wireguard/contributor/hello71) (Remote host closed the connection)
[04:59:15] *** Joins: Hello71 (~Hello71@wireguard/contributor/hello71)
[05:00:53] *** Quits: rgrinberg (~textual@2806:101e:7:70b6:74fb:2532:55e4:bc77) (Quit: My MacBook has gone to sleep. ZZZzzz…)
[05:04:37] *** Joins: rgrinberg (~textual@187.223.63.190)
[05:10:15] *** Quits: Hello71 (~Hello71@wireguard/contributor/hello71) (Ping timeout: 240 seconds)
[05:10:29] *** Joins: Hello71 (~Hello71@wireguard/contributor/hello71)
[05:11:23] *** Joins: Null_A (~null_a@2601:645:8700:2290:3c1e:11a0:debc:333e)
[05:12:39] *** Quits: ncwbqcfe (~rvgzuuqp@gateway/tor-sasl/rvgzuuqp) (Quit: ncwbqcfe)
[05:16:24] *** Joins: c4017w__ (~c4017@209.52.68.8)
[05:16:24] *** Quits: KAHR-Alpha (~Alpha@aether/dev/KAHR-Alpha) (Ping timeout: 250 seconds)
[05:19:09] *** Joins: immibis_ (~hexchat@62.156.144.218)
[05:19:55] *** Quits: c4017w_ (~c4017@209.52.68.8) (Ping timeout: 256 seconds)
[05:21:57] *** Quits: immibis (~hexchat@2a02:3032:3:a84:62b2:c42d:455d:d277) (Ping timeout: 268 seconds)
[05:22:09] *** Quits: foobaz212 (~foobaz212@152.37.103.80) (Quit: Client closed)
[05:22:10] *** Quits: foobaz21248 (~foobaz212@152.37.103.80) (Quit: Client closed)
[05:22:21] *** Joins: foobaz212 (~foobaz212@152.37.103.80)
[05:22:23] *** Joins: foobaz21248 (~foobaz212@152.37.103.80)
[05:24:12] *** Quits: Viewday115 (~Viewday@user/viewday) (Ping timeout: 240 seconds)
[05:25:08] *** Joins: Viewday115 (~Viewday@user/viewday)
[05:28:59] *** Quits: foobaz21248 (~foobaz212@152.37.103.80) (Ping timeout: 256 seconds)
[05:29:00] *** Quits: foobaz212 (~foobaz212@152.37.103.80) (Ping timeout: 256 seconds)
[05:29:37] *** Quits: Null_A (~null_a@2601:645:8700:2290:3c1e:11a0:debc:333e) (Ping timeout: 240 seconds)
[05:30:01] *** Joins: cmburn (~cmburn@c-107-4-141-134.hsd1.mn.comcast.net)
[05:30:38] *** Parts: cmburn (~cmburn@c-107-4-141-134.hsd1.mn.comcast.net) ()
[05:30:59] *** Joins: cmburn (~cmburn@c-107-4-141-134.hsd1.mn.comcast.net)
[05:33:53] *** Quits: Hello71 (~Hello71@wireguard/contributor/hello71) (Remote host closed the connection)
[05:34:05] *** Quits: jplejacq (~jplejacq@68.71.169.160) (Ping timeout: 256 seconds)
[05:34:08] *** Joins: Hello71 (~Hello71@wireguard/contributor/hello71)
[05:34:38] <cmburn> Take it easy on me, I'm a C programmer thrust into C++, but if I have programs marked const that get overridden, how do I do that? const override gets a warning , override const gets an error, up is down?
[05:35:26] *** Quits: Viewday115 (~Viewday@user/viewday) (Quit: Ping timeout (120 seconds))
[05:35:42] *** Joins: Viewday115 (~Viewday@user/viewday)
[05:36:20] *** Quits: sh00p (~z@89-253-71-70.customers.ownit.se) (Ping timeout: 250 seconds)
[05:38:31] *** Quits: whupdup (~whupdup@pool-173-76-128-81.bstnma.fios.verizon.net) (Quit: Going offline, see ya! (www.adiirc.com))
[05:40:18] *** Joins: Viewday1159 (~Viewday@user/viewday)
[05:40:20] <TheParham> cmburn: I'm not the expert, but I believe the idealogy behind using "const" in the first place is to make a promise to the compiler that the const variable "will not be changed/overridden". so you might need to "NOT" use const for a variable that you know might need any overrides if I got your point right? just my 2 cents...
[05:40:49] <zz> {} struct B {virtual void f() const;}; struct D:B{void f() const override;}; struct D2:B{void f() override const;};
[05:40:50] <geordi> error: expected ';' at end of member declaration (fix known)
[05:41:05] <zz> yeah, override comes after this-qualifiers.
[05:42:19] *** Quits: Viewday115 (~Viewday@user/viewday) (Ping timeout: 256 seconds)
[05:42:20] *** Viewday1159 is now known as Viewday115
[05:43:19] *** Quits: npaperbot (~npaperbot@dodecahedron.m-ou.se) (Remote host closed the connection)
[05:43:27] *** Joins: npaperbot (~npaperbot@dodecahedron.m-ou.se)
[05:43:27] *** ChanServ sets mode: +v npaperbot
[05:44:55] <cmburn> yeah, just trying to fix a massive codebase, just trying to not do things :'(
[05:46:16] <cmburn> *trying to fix a massive codebase, just trying to avoid doing things
[05:46:31] *** Quits: Tobbi (~Tobbi@2a02:8108:1240:48ec:e0cd:c88b:7499:2cc0) (Quit: Textual IRC Client: www.textualapp.com)
[05:46:34] *** Quits: PJBoy (~PJBoy@user/pjboy) (Ping timeout: 272 seconds)
[05:47:25] *** Joins: Hello72 (~Hello71@wireguard/contributor/hello71)
[05:47:55] *** Quits: Hello71 (~Hello71@wireguard/contributor/hello71) (Ping timeout: 240 seconds)
[05:54:35] *** Joins: whupdup (~whupdup@pool-173-76-128-81.bstnma.fios.verizon.net)
[05:55:37] *** Quits: mgot (~mgot@vps-35cddd71.vps.ovh.net) (Quit: Goodbye)
[05:55:47] *** Quits: rgrinberg (~textual@187.223.63.190) (Quit: My MacBook has gone to sleep. ZZZzzz…)
[05:56:11] *** Quits: Kohe (~Kohe@46.12.214.37.dsl.dyn.forthnet.gr) (Ping timeout: 256 seconds)
[05:56:25] *** Joins: mgot (~mgot@vps-35cddd71.vps.ovh.net)
[05:58:08] *** Joins: malloy (~jimery@116.30.220.175)
[05:59:00] *** Joins: Betal (~Betal@user/betal)
[06:00:56] *** Joins: foobaz21248 (~foobaz212@152.37.103.80)
[06:00:58] *** Joins: foobaz212 (~foobaz212@152.37.103.80)
[06:02:04] *** Joins: rgrinberg (~textual@2806:101e:7:70b6:74fb:2532:55e4:bc77)
[06:03:06] *** Quits: whupdup (~whupdup@pool-173-76-128-81.bstnma.fios.verizon.net) (Quit: Going offline, see ya! (www.adiirc.com))
[06:03:15] *** Joins: Carbonflux (~Carbonflu@c-66-235-54-179.sea.wa.customer.broadstripe.net)
[06:04:32] *** Quits: msk (~Thunderbi@89.205.124.39) (Ping timeout: 240 seconds)
[06:05:49] *** Quits: foobaz212 (~foobaz212@152.37.103.80) (Ping timeout: 256 seconds)
[06:05:49] *** Quits: foobaz21248 (~foobaz212@152.37.103.80) (Ping timeout: 256 seconds)
[06:06:32] *** Joins: msk (~Thunderbi@89.205.124.40)
[06:06:56] *** Joins: Viewday1152 (~Viewday@user/viewday)
[06:08:57] *** Quits: Viewday115 (~Viewday@user/viewday) (Ping timeout: 256 seconds)
[06:08:58] *** Viewday1152 is now known as Viewday115
[06:17:06] *** Joins: c4017w_ (~c4017@209.52.68.8)
[06:18:48] *** Quits: TheParham (~Parham@ns3083122.ip-145-239-7.eu) (Remote host closed the connection)
[06:18:52] *** Joins: Inline__ (~Inline@p200300cd471026001e3cab216ce28c3c.dip0.t-ipconnect.de)
[06:19:09] *** Joins: TheParham (~Parham@ns3083122.ip-145-239-7.eu)
[06:19:13] *** Joins: Viewday1150 (~Viewday@user/viewday)
[06:20:17] *** Quits: c4017w__ (~c4017@209.52.68.8) (Ping timeout: 240 seconds)
[06:21:24] *** Quits: Inline (~Inline@p200300cd470c380061a83d28f03bd1ae.dip0.t-ipconnect.de) (Ping timeout: 250 seconds)
[06:21:25] *** Quits: Viewday115 (~Viewday@user/viewday) (Ping timeout: 256 seconds)
[06:21:26] *** Viewday1150 is now known as Viewday115
[06:30:04] *** Quits: smeso (~smeso@user/smeso) (Quit: smeso)
[06:31:36] *** Quits: Brainium (~brainium@user/brainium) (Quit: Konversation terminated!)
[06:34:04] *** Quits: cmburn (~cmburn@c-107-4-141-134.hsd1.mn.comcast.net) (Ping timeout: 272 seconds)
[06:34:58] *** Quits: alesan (~root@c-73-158-143-8.hsd1.ca.comcast.net) (Quit: Leaving)
[06:36:09] *** Joins: mattallmill (~mattallmi@ip68-103-130-85.ks.ok.cox.net)
[06:39:10] *** Joins: furrymcg1e (~devuan@cgn-89-1-211-94.nc.de)
[06:40:19] *** Joins: Viewday1153 (~Viewday@user/viewday)
[06:42:23] *** Quits: Viewday115 (~Viewday@user/viewday) (Ping timeout: 256 seconds)
[06:42:24] *** Viewday1153 is now known as Viewday115
[06:42:39] *** Quits: furrymcgee (~devuan@cgn-89-1-209-226.nc.de) (Ping timeout: 256 seconds)
[06:43:54] *** Joins: smeso (~smeso@user/smeso)
[06:47:33] *** Joins: zer0x_ (~zer0x@58.186.216.56)
[06:57:27] *** Quits: Hello72 (~Hello71@wireguard/contributor/hello71) (Quit: Hello72)
[06:59:47] *** Joins: marc__ (~marc@171.42.231.100)
[07:05:07] *** Joins: great_taste (~great_tas@user/great-taste/x-5798414)
[07:07:42] *** Joins: paddymahoney (~paddymaho@cpe9050ca207f83-cm9050ca207f80.cpe.net.cable.rogers.com)
[07:11:11] *** Quits: skapata (~Skapata@user/skapata) (Remote host closed the connection)
[07:11:52] *** Quits: Rynn (~rynn@216.30.158.198) (Quit: My MacBook has gone to sleep. ZZZzzz…)
[07:14:57] *** Joins: Rynn (~rynn@216.30.158.198)
[07:17:51] *** Joins: c4017w__ (~c4017@209.52.68.8)
[07:20:15] *** Quits: varioust (~varioust@gateway/tor-sasl/varioust) (Ping timeout: 240 seconds)
[07:21:21] *** Joins: Viewday1152 (~Viewday@user/viewday)
[07:21:29] *** Quits: c4017w_ (~c4017@209.52.68.8) (Ping timeout: 256 seconds)
[07:21:53] *** Joins: Null_A (~null_a@c-98-210-133-39.hsd1.ca.comcast.net)
[07:23:11] *** Quits: Viewday115 (~Viewday@user/viewday) (Ping timeout: 256 seconds)
[07:23:12] *** Viewday1152 is now known as Viewday115
[07:23:51] *** Joins: varioust (~varioust@gateway/tor-sasl/varioust)
[07:25:38] *** Joins: Prof_Dumbledore (~Prof_Dumb@2409:4042:39a:24d3:4abe:c577:f77b:9f71)
[07:26:51] *** Quits: Null_A (~null_a@c-98-210-133-39.hsd1.ca.comcast.net) (Ping timeout: 256 seconds)
[07:26:54] *** Quits: frost (~frost@user/frost) (Quit: Connection closed)
[07:27:24] *** Joins: frost (~frost@user/frost)
[07:33:55] *** Quits: varioust (~varioust@gateway/tor-sasl/varioust) (Ping timeout: 240 seconds)
[07:35:55] *** Quits: mattallmill (~mattallmi@ip68-103-130-85.ks.ok.cox.net) (Ping timeout: 256 seconds)
[07:37:51] *** Joins: Hello71 (~Hello71@wireguard/contributor/hello71)
[07:38:50] *** Joins: smallville7123 (~smallvill@cpe-172-193-72-46.qld.foxtel.net.au)
[07:39:29] *** Joins: Viewday1159 (~Viewday@user/viewday)
[07:40:38] *** Quits: marc__ (~marc@171.42.231.100) (Quit: marc__)
[07:41:00] *** Quits: Viewday115 (~Viewday@user/viewday) (Read error: Connection reset by peer)
[07:41:00] *** Viewday1159 is now known as Viewday115
[07:46:42] *** Quits: sreve (~quassel@p549d72b1.dip0.t-ipconnect.de) (Ping timeout: 260 seconds)
[07:47:11] *** Joins: sreve (~quassel@p549d7115.dip0.t-ipconnect.de)
[07:47:18] *** Joins: eelstrebor (~eelstrebo@198-178-29-136.scb.ne.static.allophone.net)
[07:54:36] *** Quits: mrgz (~mrgz@201-42-0-191.dsl.telesp.net.br) (Ping timeout: 240 seconds)
[07:58:21] *** Joins: Null_A (~null_a@2601:645:8700:2290:3c1e:11a0:debc:333e)
[07:58:37] *** Joins: hinata (~hinata@2409:4042:d16:67df:910d:a889:57a1:6ea0)
[07:59:43] *** Joins: gab_ (~gab@156.192.171.207)
[08:02:05] *** Joins: foobaz212 (~foobaz212@152.37.103.80)
[08:02:10] *** Joins: foobaz21248 (~foobaz212@152.37.103.80)
[08:02:57] *** Quits: Null_A (~null_a@2601:645:8700:2290:3c1e:11a0:debc:333e) (Ping timeout: 240 seconds)
[08:04:22] *** Quits: Rynn (~rynn@216.30.158.198) (Quit: My MacBook has gone to sleep. ZZZzzz…)
[08:06:31] *** Quits: foobaz21248 (~foobaz212@152.37.103.80) (Ping timeout: 256 seconds)
[08:06:31] *** Quits: foobaz212 (~foobaz212@152.37.103.80) (Ping timeout: 256 seconds)
[08:07:55] *** Joins: Rynn (~rynn@216.30.158.198)
[08:10:04] *** Joins: ironman (~ironman@2405:201:1010:b033:bad0:8910:44c9:da61)
[08:15:53] *** Joins: Viewday1159 (~Viewday@user/viewday)
[08:16:24] *** Quits: Rynn (~rynn@216.30.158.198) (Quit: My MacBook has gone to sleep. ZZZzzz…)
[08:16:54] *** Joins: Rynn (~rynn@216.30.158.198)
[08:17:21] *** Quits: Viewday115 (~Viewday@user/viewday) (Read error: Connection reset by peer)
[08:17:22] *** Viewday1159 is now known as Viewday115
[08:18:34] *** Joins: c4017w_ (~c4017@209.52.68.8)
[08:22:23] *** Quits: c4017w__ (~c4017@209.52.68.8) (Ping timeout: 256 seconds)
[08:22:24] *** Joins: Viewday1157 (~Viewday@user/viewday)
[08:24:23] *** Quits: Viewday115 (~Viewday@user/viewday) (Ping timeout: 256 seconds)
[08:24:24] *** Viewday1157 is now known as Viewday115
[08:26:56] *** Quits: Prof_Dumbledore (~Prof_Dumb@2409:4042:39a:24d3:4abe:c577:f77b:9f71) (Quit: Leaving)
[08:27:05] *** Quits: Rynn (~rynn@216.30.158.198) (Quit: My MacBook has gone to sleep. ZZZzzz…)
[08:30:03] *** Quits: emerent (~quassel@p5b2657e5.dip0.t-ipconnect.de) (Remote host closed the connection)
[08:30:56] *** Quits: moose (~moose@user/moose) (Quit: Leaving)
[08:32:04] *** Joins: emerent (~quassel@p200300cd570c2187ba27ebfffed28a59.dip0.t-ipconnect.de)
[08:38:58] *** Quits: eelstrebor (~eelstrebo@198-178-29-136.scb.ne.static.allophone.net) (Quit: Ex-Chat)
[08:40:31] *** Joins: Burgundy (~NA@86.121.143.206)
[08:40:36] *** Joins: Viewday1151 (~Viewday@user/viewday)
[08:41:12] *** Joins: Prof_Dumbledore (~Prof_Dumb@2409:4042:39a:24d3:4abe:c577:f77b:9f71)
[08:42:10] *** Quits: Viewday115 (~Viewday@user/viewday) (Read error: Connection reset by peer)
[08:42:11] *** Viewday1151 is now known as Viewday115
[08:49:00] *** Quits: KimK (~KimK@2600:8803:740b:4700:4a5b:39ff:fe0b:57d2) (Quit: Leaving)
[08:58:23] *** Quits: rpnx-phone (rpnx-phone@gateway/vpn/protonvpn/rpnx) (Ping timeout: 256 seconds)
[09:08:37] *** Quits: lh_ideapad (~lh_mouse@mingw-w64/developer/lhmouse) (Ping timeout: 240 seconds)
[09:09:03] *** Joins: lh_ideapad (~lh_mouse@mingw-w64/developer/lhmouse)
[09:09:09] *** Joins: ElectronApps (~ElectronA@user/electronapps)
[09:11:09] *** Joins: ymwm (~yingmanwu@110.85.66.212)
[09:16:22] *** Quits: ferdna (~ferdna@user/ferdna) (Quit: Leaving)
[09:18:07] *** Joins: KimK (~KimK@2600:8803:740b:4700:4a5b:39ff:fe0b:57d2)
[09:19:15] *** Joins: c4017w__ (~c4017@209.52.68.8)
[09:20:55] *** Quits: rvalue (~rvalue@user/rvalue) (Read error: Connection reset by peer)
[09:21:09] *** Joins: rvalue (~rvalue@user/rvalue)
[09:21:39] *** Quits: Viewday115 (~Viewday@user/viewday) (Read error: Connection reset by peer)
[09:22:32] *** Quits: indy (~indy@dsl-static-104.213-160-167.telecom.sk) (Ping timeout: 272 seconds)
[09:22:56] *** Joins: zer0bitz_ (~zer0bitz@2001:2003:f74d:b800:858f:1c83:7b4e:c545)
[09:23:01] *** Quits: c4017w_ (~c4017@209.52.68.8) (Ping timeout: 256 seconds)
[09:23:44] *** Joins: Viewday115 (~Viewday@user/viewday)
[09:24:43] *** Quits: great_taste (~great_tas@user/great-taste/x-5798414) (Ping timeout: 256 seconds)
[09:26:23] *** Quits: zer0bitz (~zer0bitz@2001:2003:f74d:b800:71e5:4f52:ed0e:7b4e) (Ping timeout: 252 seconds)
[09:27:37] *** Joins: the_lanetly_052 (~the_lanet@185.30.91.173)
[09:29:42] *** Quits: rgrinberg (~textual@2806:101e:7:70b6:74fb:2532:55e4:bc77) (Quit: My MacBook has gone to sleep. ZZZzzz…)
[09:38:35] *** Quits: GNUmoon (~GNUmoon@gateway/tor-sasl/gnumoon) (Ping timeout: 240 seconds)
[09:40:36] *** Joins: Null_A (~null_a@2601:645:8700:2290:3c1e:11a0:debc:333e)
[09:40:41] *** Quits: vdamewood (~vdamewood@fedora/vdamewood) (Quit: My MacBook Pro has gone to sleep. ZZZzzz…)
[09:43:20] *** Quits: npaperbot (~npaperbot@dodecahedron.m-ou.se) (Remote host closed the connection)
[09:43:29] *** Joins: npaperbot (~npaperbot@dodecahedron.m-ou.se)
[09:43:29] *** ChanServ sets mode: +v npaperbot
[09:44:57] *** Quits: Null_A (~null_a@2601:645:8700:2290:3c1e:11a0:debc:333e) (Ping timeout: 240 seconds)
[09:47:03] *** Joins: hashfunc528 (~user@2601:5c0:c280:7090:78e9:5f82:1899:8c96)
[09:47:41] *** Quits: frost (~frost@user/frost) (Quit: Connection closed)
[09:49:47] *** Joins: rpnx-phone (rpnx-phone@gateway/vpn/protonvpn/rpnx)
[09:50:14] *** Joins: lh_cat (~lh_mouse@mingw-w64/developer/lhmouse)
[09:51:57] *** Joins: frost (~frost@user/frost)
[09:53:37] *** Quits: lh_mouse (~lh_mouse@mingw-w64/developer/lhmouse) (Ping timeout: 256 seconds)
[09:57:52] *** Quits: frost (~frost@user/frost) (Quit: Connection closed)
[10:00:17] *** Joins: rgrinberg (~textual@2806:101e:7:70b6:74fb:2532:55e4:bc77)
[10:02:27] *** Joins: foobaz21248 (~foobaz212@152.37.103.80)
[10:02:39] *** Joins: foobaz212 (~foobaz212@152.37.103.80)
[10:07:47] *** Quits: foobaz212 (~foobaz212@152.37.103.80) (Ping timeout: 256 seconds)
[10:07:47] *** Quits: foobaz21248 (~foobaz212@152.37.103.80) (Ping timeout: 256 seconds)
[10:12:09] *** Quits: zmt00 (~zmt00@user/zmt00) (Quit: Leaving)
[10:13:07] *** Joins: zmt00 (~zmt00@user/zmt00)
[10:14:01] *** Joins: Null_A (~null_a@2601:645:8700:2290:c864:fc8b:2d0b:834a)
[10:14:19] *** Quits: zer0x_ (~zer0x@58.186.216.56) (Ping timeout: 256 seconds)
[10:15:24] *** Quits: Enitin (~Enitin@82.180.145.230) (Ping timeout: 250 seconds)
[10:15:34] *** Quits: chiselfuse (~chiselfus@user/chiselfuse) (Remote host closed the connection)
[10:16:09] *** Joins: chiselfuse (~chiselfus@user/chiselfuse)
[10:18:17] *** Quits: Null_A (~null_a@2601:645:8700:2290:c864:fc8b:2d0b:834a) (Ping timeout: 240 seconds)
[10:18:34] *** Joins: Enitin (~Enitin@82.180.145.225)
[10:19:31] *** Joins: c4017w_ (~c4017@209.52.68.8)
[10:19:45] *** Joins: frost (~frost@user/frost)
[10:22:36] *** Quits: c4017w__ (~c4017@209.52.68.8) (Ping timeout: 240 seconds)
[10:23:10] *** Joins: Viewday1153 (~Viewday@user/viewday)
[10:24:17] *** Quits: Viewday115 (~Viewday@user/viewday) (Read error: Connection reset by peer)
[10:24:17] *** Viewday1153 is now known as Viewday115
[10:24:49] *** Joins: Serpent7776 (~Serpent77@90-156-31-193.internetia.net.pl)
[10:26:11] *** Quits: rgrinberg (~textual@2806:101e:7:70b6:74fb:2532:55e4:bc77) (Quit: My MacBook has gone to sleep. ZZZzzz…)
[10:27:59] *** Joins: sord937 (~sord937@gateway/tor-sasl/sord937)
[10:30:57] *** Joins: zer0x_ (~zer0x@58.186.216.56)
[10:30:58] *** Quits: BluesBoy (~bboy@user/bluesboy) (Quit: leaving)
[10:34:44] *** Joins: Kohe (~Kohe@46.12.214.37.dsl.dyn.forthnet.gr)
[10:36:11] *** Quits: TheParham (~Parham@ns3083122.ip-145-239-7.eu) (Remote host closed the connection)
[10:36:33] *** Joins: TheParham (~Parham@ns3083122.ip-145-239-7.eu)
[10:37:01] <aLeSD[m]> have rust people the same mindset of C++ people ?
[10:37:43] *** Joins: JohnMS_WORK (~kvirc@89-64-70-205.dynamic.chello.pl)
[10:38:08] *** Quits: TheParham (~Parham@ns3083122.ip-145-239-7.eu) (Remote host closed the connection)
[10:38:30] *** Joins: Viewday1150 (~Viewday@user/viewday)
[10:40:23] *** Quits: Viewday115 (~Viewday@user/viewday) (Ping timeout: 256 seconds)
[10:40:24] *** Viewday1150 is now known as Viewday115
[10:41:31] *** Joins: j0hn_mc_clane (~j0hn_mc_c@ptr-fqhhm12iua58a0gd4hj.18120a2.ip6.access.telenet.be)
[10:41:47] *** Quits: Enitin (~Enitin@82.180.145.225) (Ping timeout: 256 seconds)
[10:42:47] *** Quits: bitmask (~bitmask@c-73-215-237-27.hsd1.nj.comcast.net) (Quit: My MacBook has gone to sleep. ZZZzzz…)
[10:43:16] *** Joins: BluesBoy (~bboy@user/bluesboy)
[10:44:39] *** Joins: Enitin (~Enitin@82.102.22.84)
[10:44:57] *** Quits: phrosty (~phrosty@c-73-225-175-19.hsd1.wa.comcast.net) (Ping timeout: 240 seconds)
[10:47:12] *** Quits: gab_ (~gab@156.192.171.207) (Quit: gab_)
[10:49:09] *** Quits: Enitin (~Enitin@82.102.22.84) (Ping timeout: 256 seconds)
[10:50:31] <ville> how or why would we know such things?
[10:50:37] *** Joins: evangeline (~Eleanor@178.79.105.181)
[10:50:56] *** Joins: Enitin (~Enitin@82.180.145.227)
[10:57:57] *** Quits: Kohe (~Kohe@46.12.214.37.dsl.dyn.forthnet.gr) (Ping timeout: 256 seconds)
[10:58:36] <aLeSD[m]> ville: because it seems my story is C++ -> goLang -> Rust
[10:58:56] <aLeSD[m]> just to know if I wiil feel home
[10:58:58] <aLeSD[m]> ;)
[11:04:55] *** Joins: indy (~indy@dsl-static-104.213-160-167.telecom.sk)
[11:05:38] *** Joins: Viewday1155 (~Viewday@user/viewday)
[11:05:47] *** Quits: Viewday115 (~Viewday@user/viewday) (Read error: Connection reset by peer)
[11:05:47] *** Viewday1155 is now known as Viewday115
[11:07:46] *** Joins: phrosty (~phrosty@c-73-225-175-19.hsd1.wa.comcast.net)
[11:07:53] *** Quits: phrosty (~phrosty@c-73-225-175-19.hsd1.wa.comcast.net) (Remote host closed the connection)
[11:08:16] <ville> still we don't perform psychological evaluations on programmers in various groups and highly off-topic for the channel
[11:09:38] *** Quits: RandomReader (~RandomRea@user/randomreader) (Quit: RandomReader)
[11:12:06] *** Joins: zeenk (~zeenk@2a02:2f04:a30d:1300:51a3:bcfc:6cda:9fc5)
[11:12:49] *** zer0bitz_ is now known as zer0bitz
[11:12:54] *** Joins: jsbach (~jsbach@2a01:c22:349c:3100:8fb0:3270:f51d:118b)
[11:17:28] *** Joins: RandomReader (~RandomRea@user/randomreader)
[11:20:12] *** Joins: c4017w__ (~c4017@209.52.68.8)
[11:20:15] *** Joins: Viewday1152 (~Viewday@user/viewday)
[11:21:02] *** Joins: nafen (~nafen@gateway/tor-sasl/nafen)
[11:21:45] *** Quits: Viewday115 (~Viewday@user/viewday) (Ping timeout: 256 seconds)
[11:21:46] *** Viewday1152 is now known as Viewday115
[11:23:01] *** Joins: Null_A (~null_a@2601:645:8700:2290:c864:fc8b:2d0b:834a)
[11:24:01] *** Quits: c4017w_ (~c4017@209.52.68.8) (Ping timeout: 256 seconds)
[11:24:17] *** Quits: Prof_Dumbledore (~Prof_Dumb@2409:4042:39a:24d3:4abe:c577:f77b:9f71) (Ping timeout: 240 seconds)
[11:24:35] *** Joins: PlasmaHH (~PlasamaHH@user/plasmahh)
[11:26:01] *** Joins: Prof_Dumbledore (~Prof_Dumb@2409:4042:e0b:e745:294:db96:f060:4f7e)
[11:26:49] *** Quits: nafen (~nafen@gateway/tor-sasl/nafen) (Remote host closed the connection)
[11:27:07] *** Joins: nafen (~nafen@gateway/tor-sasl/nafen)
[11:28:12] *** Quits: Null_A (~null_a@2601:645:8700:2290:c864:fc8b:2d0b:834a) (Ping timeout: 240 seconds)
[11:30:02] *** Quits: cbreak (~cbreak@77-58-201-132.dclient.hispeed.ch) (Read error: Connection reset by peer)
[11:33:28] *** Joins: cbreak (~cbreak@77-58-201-132.dclient.hispeed.ch)
[11:34:32] *** Quits: hashfunc528 (~user@2601:5c0:c280:7090:78e9:5f82:1899:8c96) (Remote host closed the connection)
[11:35:47] *** Quits: Betal (~Betal@user/betal) (Quit: WeeChat 3.4)
[11:35:48] *** Quits: lh_ideapad (~lh_mouse@mingw-w64/developer/lhmouse) (Ping timeout: 240 seconds)
[11:37:15] *** Joins: rendar (~rendar@user/rendar)
[11:37:48] *** Joins: bebyx (~Thunderbi@user/bebyx)
[11:38:13] *** Quits: xkuru (~xkuru@user/xkuru) (Read error: Connection reset by peer)
[11:41:05] *** Joins: slidercrank (~slidercra@user/slidercrank)
[11:41:18] *** Joins: Viewday1155 (~Viewday@user/viewday)
[11:42:22] *** Quits: bebyx (~Thunderbi@user/bebyx) (Ping timeout: 260 seconds)
[11:42:32] *** Joins: hashfuncb70 (~user@2601:5c0:c280:7090:78e9:5f82:1899:8c96)
[11:42:44] *** Quits: Viewday115 (~Viewday@user/viewday) (Read error: Connection reset by peer)
[11:42:44] *** Viewday1155 is now known as Viewday115
[11:44:50] *** Joins: jellie (~luv_panda@user/jellie)
[11:47:08] *** Joins: limubs (~limubs@cgn-89-1-58-13.nc.de)
[11:48:36] *** Quits: martiert_work (~martiert_@2001:420:44c1:2617:21d9:6cab:edac:3a72) (Ping timeout: 240 seconds)
[11:49:19] *** Joins: lh_ideapad (~lh_mouse@mingw-w64/developer/lhmouse)
[11:49:37] *** Quits: ironman (~ironman@2405:201:1010:b033:bad0:8910:44c9:da61) (Ping timeout: 240 seconds)
[11:49:51] *** Joins: martiert_work (~martiert_@2001:420:44c1:2617:a6ae:11ff:fe11:bb70)
[11:49:52] *** Joins: Dumbledore (~Prof_Dumb@2409:4042:2e02:4677:b623:325d:4ddd:be6)
[11:52:12] *** Quits: Prof_Dumbledore (~Prof_Dumb@2409:4042:e0b:e745:294:db96:f060:4f7e) (Ping timeout: 240 seconds)
[11:53:43] *** Joins: cadmio (~cadmio@151.57.219.240)
[11:53:45] <cadmio> Hello
[11:55:53] *** Joins: dongcarl7 (~dongcarl@pool-96-232-179-212.nycmny.fios.verizon.net)
[11:57:25] *** Quits: dongcarl (~dongcarl@pool-96-232-179-212.nycmny.fios.verizon.net) (Ping timeout: 250 seconds)
[11:57:25] *** dongcarl7 is now known as dongcarl
[11:58:06] *** Joins: Null_A (~null_a@2601:645:8700:2290:3c1e:11a0:debc:333e)
[12:01:30] *** Quits: senoraraton (~senorarat@192-195-83-130.static.monkeybrains.net) (Ping timeout: 272 seconds)
[12:02:17] *** Quits: Null_A (~null_a@2601:645:8700:2290:3c1e:11a0:debc:333e) (Ping timeout: 240 seconds)
[12:03:40] *** Joins: foobaz21248 (~foobaz212@152.37.103.80)
[12:03:53] *** Joins: foobaz212 (~foobaz212@152.37.103.80)
[12:04:36] *** Joins: bebyx (~Thunderbi@user/bebyx)
[12:09:25] *** Quits: bebyx (~Thunderbi@user/bebyx) (Ping timeout: 240 seconds)
[12:09:36] *** Joins: spaceangel (~spaceange@ip-78-102-216-202.net.upcbroadband.cz)
[12:09:37] *** Quits: foobaz212 (~foobaz212@152.37.103.80) (Ping timeout: 256 seconds)
[12:09:41] *** Quits: martiert (~martiert@ti0185q160-2775.bb.online.no) (Quit: leaving)
[12:09:57] *** Joins: Guest7996 (~martiert@ti0185q160-2775.bb.online.no)
[12:10:05] *** Guest7996 is now known as martiert
[12:10:11] *** Quits: foobaz21248 (~foobaz212@152.37.103.80) (Ping timeout: 256 seconds)
[12:14:43] *** Quits: Enitin (~Enitin@82.180.145.227) (Ping timeout: 256 seconds)
[12:19:13] *** Joins: bebyx (~Thunderbi@user/bebyx)
[12:20:53] *** Joins: c4017w_ (~c4017@209.52.68.8)
[12:21:29] *** Joins: gentooclimax (~gentoocli@2a02-8440-3440-9373-bf12-0497-4be5-4868.rev.sfr.net)
[12:21:31] *** Joins: Viewday1158 (~Viewday@user/viewday)
[12:22:56] *** Quits: Viewday115 (~Viewday@user/viewday) (Read error: Connection reset by peer)
[12:22:57] *** Viewday1158 is now known as Viewday115
[12:24:18] *** Quits: bebyx (~Thunderbi@user/bebyx) (Ping timeout: 272 seconds)
[12:24:21] *** Quits: c4017w__ (~c4017@209.52.68.8) (Ping timeout: 256 seconds)
[12:26:14] *** Joins: interop_madness (~interop_m@user/interop-madness/x-0950004)
[12:28:06] *** Joins: LucaTM (~LucaTM@user/lucatm)
[12:28:25] <fluter> hi, is the pointer returned by std::unique_ptr<T>.get() stable?
[12:28:47] <fluter> like, can i save the pointer and use it after the unique_ptr being moved?
[12:29:33] *** Quits: Viewday115 (~Viewday@user/viewday) (Quit: Ping timeout (120 seconds))
[12:29:35] <Zogatribe> save?
[12:29:50] *** Joins: Viewday115 (~Viewday@user/viewday)
[12:30:44] <fluter> Zogatribe: yes, like p = unique_ptr.get();  move(unique_ptr); then use p
[12:30:47] <fluter> is p still valid?
[12:30:53] *** Joins: Null_A (~null_a@2601:645:8700:2290:3c1e:11a0:debc:333e)
[12:31:24] *** Quits: the_lanetly_052 (~the_lanet@185.30.91.173) (Ping timeout: 240 seconds)
[12:33:59] *** Quits: jellie (~luv_panda@user/jellie) (Ping timeout: 256 seconds)
[12:35:17] *** Quits: Null_A (~null_a@2601:645:8700:2290:3c1e:11a0:debc:333e) (Ping timeout: 240 seconds)
[12:35:26] *** Quits: zeenk (~zeenk@2a02:2f04:a30d:1300:51a3:bcfc:6cda:9fc5) (Quit: Konversation terminated!)
[12:35:30] *** Joins: ironman (~ironman@2405:201:1010:b033:bad0:8910:44c9:da61)
[12:38:05] *** Parts: cadmio (~cadmio@151.57.219.240) (WeeChat 3.0)
[12:41:00] *** Joins: chenqisu1 (~chenqisu1@183.217.201.47)
[12:43:43] *** Joins: foobaz212 (~foobaz212@152.37.103.80)
[12:43:59] *** Joins: foobaz21248 (~foobaz212@152.37.103.80)
[12:44:22] <ville> yes. note it's returned by value. for the address to become invalid the object being pointed-to would need to change its address
[12:46:36] *** Joins: bebyx (~Thunderbi@user/bebyx)
[12:51:26] *** Quits: bebyx (~Thunderbi@user/bebyx) (Ping timeout: 260 seconds)
[12:52:55] *** Joins: MajorBiscuit (~MajorBisc@wlan-145-94-218-48.wlan.tudelft.nl)
[12:56:53] *** Joins: ProperN[out] (~holyShizn@user/propernoun)
[12:57:01] *** Joins: the_lanetly_052 (~the_lanet@185.30.91.173)
[12:57:47] *** Quits: ProperNoun (~holyShizn@user/propernoun) (Ping timeout: 256 seconds)
[12:58:08] *** Quits: Dave_R (~Dave_R@home.amunra.co.uk) (Quit: My MacBook has gone to sleep. ZZZzzz…)
[12:59:36] *** gentooclimax is now known as climax
[13:00:38] *** Quits: hashfuncb70 (~user@2601:5c0:c280:7090:78e9:5f82:1899:8c96) (Remote host closed the connection)
[13:03:59] *** Joins: ivii (~ivan@user/ivii)
[13:05:22] *** Joins: bebyx (~Thunderbi@user/bebyx)
[13:08:26] <the_lanetly_052> Hi all, could anyone explain that: class X { void foo() & {} }; what does & mean after member prototype declaration?
[13:09:12] <the_lanetly_052> or class X { void foo() &&; }; there can be also rvalue as well
[13:09:32] *** Quits: bebyx (~Thunderbi@user/bebyx) (Ping timeout: 240 seconds)
[13:13:17] *** Joins: plastico (~plastico@neomutt/plastico)
[13:13:41] <zz> rvalue-ref qualifier for member functions
[13:15:41] *** Joins: Enitin (~Enitin@82.180.145.230)
[13:15:55] <the_lanetly_052> ohh I see thank you
[13:17:22] *** Joins: lxsameer (~lxsameer@user/lxsameer)
[13:21:36] *** Joins: c4017w__ (~c4017@209.52.68.8)
[13:21:42] *** Joins: Null_A (~null_a@2601:645:8700:2290:c864:fc8b:2d0b:834a)
[13:23:58] *** Joins: Viewday1158 (~Viewday@user/viewday)
[13:25:03] *** climax is now known as gentooclimax
[13:25:17] *** Quits: c4017w_ (~c4017@209.52.68.8) (Ping timeout: 256 seconds)
[13:25:48] *** Quits: Null_A (~null_a@2601:645:8700:2290:c864:fc8b:2d0b:834a) (Ping timeout: 240 seconds)
[13:26:16] *** Quits: Viewday115 (~Viewday@user/viewday) (Read error: Connection reset by peer)
[13:26:16] *** Viewday1158 is now known as Viewday115
[13:31:14] *** Joins: bebyx (~Thunderbi@user/bebyx)
[13:32:15] *** Stryykert is now known as Stryyker
[13:33:31] *** Quits: hinata (~hinata@2409:4042:d16:67df:910d:a889:57a1:6ea0) (Quit: Leaving)
[13:37:02] *** Quits: Enitin (~Enitin@82.180.145.230) (Ping timeout: 240 seconds)
[13:37:45] *** Joins: Enitin (~Enitin@82.180.145.230)
[13:38:55] *** Quits: the_lanetly_052 (~the_lanet@185.30.91.173) (Ping timeout: 256 seconds)
[13:41:15] *** Joins: lh_mouse_ (~lh_mouse@mingw-w64/developer/lhmouse)
[13:42:12] *** Quits: Enitin (~Enitin@82.180.145.230) (Ping timeout: 272 seconds)
[13:42:45] *** Joins: PJBoy (~PJBoy@user/pjboy)
[13:42:53] *** Joins: undephin3d (~undephin3@158.181.83.107)
[13:43:20] *** Quits: npaperbot (~npaperbot@dodecahedron.m-ou.se) (Remote host closed the connection)
[13:43:29] *** Joins: npaperbot (~npaperbot@dodecahedron.m-ou.se)
[13:43:29] *** ChanServ sets mode: +v npaperbot
[13:44:18] *** Joins: N4buc0 (~N4buc0@2804:7f4:348b:7576:1d0d:f98:c178:948d)
[13:44:33] *** Quits: lh_cat (~lh_mouse@mingw-w64/developer/lhmouse) (Ping timeout: 256 seconds)
[13:45:10] *** Joins: Viewday1151 (~Viewday@user/viewday)
[13:46:40] *** Quits: Viewday115 (~Viewday@user/viewday) (Read error: Connection reset by peer)
[13:46:41] *** Viewday1151 is now known as Viewday115
[13:47:39] *** Quits: foobaz21248 (~foobaz212@152.37.103.80) (Ping timeout: 256 seconds)
[13:47:40] *** Quits: foobaz212 (~foobaz212@152.37.103.80) (Ping timeout: 256 seconds)
[13:52:04] *** Joins: Enitin (~Enitin@82.180.145.230)
[13:58:40] *** Quits: bebyx (~Thunderbi@user/bebyx) (Ping timeout: 272 seconds)
[14:00:15] *** Joins: akuma (~i.am@user/marlboro)
[14:01:07] *** Joins: cadmio (~cadmio@151.57.251.180)
[14:01:27] *** gentooclimax is now known as climax
[14:01:39] <cadmio> I'm trying to implement this https://dpaste.com/5PY6BUWPY
[14:02:17] <cadmio> I tried this but it's failing https://paste.gnome.org/powlmtsvl
[14:03:31] *** Quits: Enitin (~Enitin@82.180.145.230) (Ping timeout: 256 seconds)
[14:03:37] *** Quits: Flannel (~flannel@cpe-76-175-193-181.socal.res.rr.com) (Read error: Connection reset by peer)
[14:05:42] *** Joins: Enitin (~Enitin@82.180.145.227)
[14:09:04] *** Quits: leduyquang753 (~leduyquan@user/leduyquang753) (Quit: Gotta go, see you guys later.)
[14:09:25] *** Joins: Flannel (~flannel@cpe-76-175-193-181.socal.res.rr.com)
[14:09:40] *** Quits: Dumbledore (~Prof_Dumb@2409:4042:2e02:4677:b623:325d:4ddd:be6) (Remote host closed the connection)
[14:09:59] *** Joins: Dumbledore (~Prof_Dumb@2409:4042:2e02:4677:9995:c401:66d3:12a7)
[14:11:00] *** Joins: Null_A (~null_a@c-98-210-133-39.hsd1.ca.comcast.net)
[14:12:17] *** Quits: Enitin (~Enitin@82.180.145.227) (Ping timeout: 240 seconds)
[14:14:00] *** Joins: immibis (~hexchat@2a02:3032:a:5f88:44a5:c3af:6367:30ff)
[14:15:37] *** Quits: Null_A (~null_a@c-98-210-133-39.hsd1.ca.comcast.net) (Ping timeout: 240 seconds)
[14:15:37] *** Quits: immibis_ (~hexchat@62.156.144.218) (Ping timeout: 240 seconds)
[14:16:25] *** Quits: malloy (~jimery@116.30.220.175) (Quit: WeeChat 3.0)
[14:16:52] *** climax is now known as gentooclimax
[14:17:48] *** Joins: Enitin (~Enitin@82.180.145.227)
[14:21:19] *** Joins: Viewday1159 (~Viewday@user/viewday)
[14:22:17] *** Quits: Enitin (~Enitin@82.180.145.227) (Ping timeout: 240 seconds)
[14:22:22] *** Joins: c4017w_ (~c4017@209.52.68.8)
[14:22:47] *** Quits: Viewday115 (~Viewday@user/viewday) (Read error: Connection reset by peer)
[14:22:47] *** Viewday1159 is now known as Viewday115
[14:25:55] *** Quits: c4017w__ (~c4017@209.52.68.8) (Ping timeout: 256 seconds)
[14:29:53] *** Joins: gab_ (~gab@156.192.171.207)
[14:30:06] *** Joins: Enitin (~Enitin@82.180.145.230)
[14:35:42] *** Joins: Dave_R (~Dave_R@109.111.223.66)
[14:35:47] *** Quits: ElectronApps (~ElectronA@user/electronapps) (Remote host closed the connection)
[14:37:53] *** Quits: AbleBacon (~AbleBacon@user/AbleBacon) (Read error: Connection reset by peer)
[14:38:09] *** Quits: Dave_R (~Dave_R@109.111.223.66) (Client Quit)
[14:38:13] *** Quits: kaph (~kaph@net-109-116-124-149.cust.vodafonedsl.it) (Remote host closed the connection)
[14:38:38] *** Joins: kaph (~kaph@net-109-116-124-149.cust.vodafonedsl.it)
[14:39:38] *** Joins: Dave_R (~Dave_R@109.111.223.66)
[14:39:54] *** gentooclimax is now known as climax
[14:39:56] *** Joins: whupdup (~whupdup@pool-173-76-128-81.bstnma.fios.verizon.net)
[14:40:54] *** Quits: j0hn_mc_clane (~j0hn_mc_c@ptr-fqhhm12iua58a0gd4hj.18120a2.ip6.access.telenet.be) (Remote host closed the connection)
[14:45:09] *** Joins: Viewday1151 (~Viewday@user/viewday)
[14:47:27] *** Quits: Viewday115 (~Viewday@user/viewday) (Ping timeout: 256 seconds)
[14:47:28] *** Viewday1151 is now known as Viewday115
[14:47:45] *** Joins: RoKenn (~RoKenn@2001:a61:35b1:ca01:3ad3:cb:1cfd:f4f7)
[14:47:45] *** Quits: RoKenn (~RoKenn@2001:a61:35b1:ca01:3ad3:cb:1cfd:f4f7) (Changing host)
[14:47:45] *** Joins: RoKenn (~RoKenn@user/rokenn)
[14:48:31] *** Quits: RoKenn (~RoKenn@user/rokenn) (Client Quit)
[14:55:45] *** Quits: unixpro1970 (~unixpro19@c-67-168-187-106.hsd1.wa.comcast.net) (Remote host closed the connection)
[14:55:50] *** Joins: night_wulfe (~wulfe@cpe-174-103-156-213.cinci.res.rr.com)
[14:56:09] *** Joins: unixpro1970 (~unixpro19@c-67-168-187-106.hsd1.wa.comcast.net)
[14:59:00] *** Joins: bebyx (~Thunderbi@user/bebyx)
[14:59:47] *** Joins: jplejacq (~jplejacq@24.224.90.176)
[14:59:55] *** Quits: nwulfe (~wulfe@cpe-174-103-156-213.cinci.res.rr.com) (Ping timeout: 256 seconds)
[15:06:14] *** Quits: ironman (~ironman@2405:201:1010:b033:bad0:8910:44c9:da61) (Quit: Leaving)
[15:06:18] *** Joins: Markow (~Markow@176.122.215.103)
[15:08:20] *** Quits: JohnMS_WORK (~kvirc@89-64-70-205.dynamic.chello.pl) (Ping timeout: 272 seconds)
[15:08:20] *** Quits: upp (~upp@c-71-227-220-185.hsd1.wa.comcast.net) (Ping timeout: 272 seconds)
[15:10:29] *** Joins: Pr_Dumbledore (~Prof_Dumb@2409:4042:2c9a:9656:979d:a8c9:36ba:c9be)
[15:10:31] *** Parts: cadmio (~cadmio@151.57.251.180) (WeeChat 3.0)
[15:11:39] *** climax is now known as gentooclimax
[15:12:08] *** Quits: hackkitten (~hackkitte@94.31.104.136) (Ping timeout: 272 seconds)
[15:12:57] *** Quits: Dumbledore (~Prof_Dumb@2409:4042:2e02:4677:9995:c401:66d3:12a7) (Ping timeout: 240 seconds)
[15:18:12] *** Quits: N4buc0 (~N4buc0@2804:7f4:348b:7576:1d0d:f98:c178:948d) (Ping timeout: 240 seconds)
[15:20:58] *** Joins: upp (~upp@c-71-227-220-185.hsd1.wa.comcast.net)
[15:22:17] *** Quits: Pr_Dumbledore (~Prof_Dumb@2409:4042:2c9a:9656:979d:a8c9:36ba:c9be) (Ping timeout: 240 seconds)
[15:23:05] *** Joins: c4017w__ (~c4017@209.52.68.8)
[15:23:05] *** Quits: Dave_R (~Dave_R@109.111.223.66) (Read error: Connection reset by peer)
[15:23:14] *** Joins: Viewday1150 (~Viewday@user/viewday)
[15:24:31] *** gentooclimax is now known as climax
[15:24:34] *** Quits: gab_ (~gab@156.192.171.207) (Quit: gab_)
[15:24:46] *** Quits: Viewday115 (~Viewday@user/viewday) (Read error: Connection reset by peer)
[15:24:47] *** Viewday1150 is now known as Viewday115
[15:24:48] *** climax is now known as gentooclimax
[15:26:12] *** Quits: c4017w_ (~c4017@209.52.68.8) (Ping timeout: 240 seconds)
[15:30:08] *** Joins: JohnMS_WORK (~kvirc@89-64-70-205.dynamic.chello.pl)
[15:31:28] *** Joins: hackkitten (~hackkitte@94.31.104.136)
[15:31:39] *** Quits: Markow (~Markow@176.122.215.103) (Quit: Linux 5.17.0-rc6-git-38f80f4-Pogorze-Karpackie-CUSTOM-KERNEL)
[15:39:10] *** Joins: gab_ (~gab@156.192.171.207)
[15:40:14] *** Joins: Thelma_ (uid509475@id-509475.lymington.irccloud.com)
[15:40:21] *** Quits: whupdup (~whupdup@pool-173-76-128-81.bstnma.fios.verizon.net) (Quit: Going offline, see ya! (www.adiirc.com))
[15:40:24] *** Thelma_ is now known as sweetsymph
[15:41:12] *** Quits: frost (~frost@user/frost) (Quit: Connection closed)
[15:43:45] *** Joins: foobaz212 (~foobaz212@152.37.103.80)
[15:44:02] *** Joins: foobaz21248 (~foobaz212@152.37.103.80)
[15:47:00] *** Joins: Viewday1155 (~Viewday@user/viewday)
[15:47:27] *** Quits: gab_ (~gab@156.192.171.207) (Quit: gab_)
[15:48:55] *** Quits: foobaz21248 (~foobaz212@152.37.103.80) (Ping timeout: 256 seconds)
[15:48:55] *** Quits: foobaz212 (~foobaz212@152.37.103.80) (Ping timeout: 256 seconds)
[15:49:30] *** Quits: Viewday115 (~Viewday@user/viewday) (Ping timeout: 272 seconds)
[15:49:31] *** Viewday1155 is now known as Viewday115
[15:58:13] *** Quits: Carbonflux (~Carbonflu@c-66-235-54-179.sea.wa.customer.broadstripe.net) (Quit: When all you have are solutions, everything is a problem.)
[16:05:20] *** Joins: mrgz (~mrgz@201-42-0-191.dsl.telesp.net.br)
[16:07:06] *** Joins: nwulfe (~wulfe@cpe-174-103-156-213.cinci.res.rr.com)
[16:09:08] *** Joins: Null_A (~null_a@2601:645:8700:2290:3c1e:11a0:debc:333e)
[16:10:16] *** Joins: N4buc0 (~N4buc0@2804:7f4:348b:d670:6242:84ac:67cd:b737)
[16:11:19] *** Quits: night_wulfe (~wulfe@cpe-174-103-156-213.cinci.res.rr.com) (Ping timeout: 256 seconds)
[16:13:37] *** Quits: Null_A (~null_a@2601:645:8700:2290:3c1e:11a0:debc:333e) (Ping timeout: 240 seconds)
[16:16:10] *** Quits: gentooclimax (~gentoocli@2a02-8440-3440-9373-bf12-0497-4be5-4868.rev.sfr.net) (Read error: Connection reset by peer)
[16:17:56] <fluter> hi, is std::variant has same semantics as union
[16:19:05] <fluter> specifically is following ok:   std::variant<MyS, MyT> v;  MyS obj{}; v = obj;  MyS *p = (MyS*)&v; p->...
[16:19:11] <fluter> is this defined behavior?
[16:19:34] <fluter> that is , is the object aligned at the address with the 1st byte of the variant itself?
[16:19:39] *** Joins: mattallmill (~mattallmi@ip68-103-130-85.ks.ok.cox.net)
[16:20:25] *** Joins: tmm88 (~tmm88@bl22-240-102.dsl.telepac.pt)
[16:20:41] <ville> i don't think the layout of std::variant is specified
[16:21:13] <fluter> ville: so the code is UB?
[16:21:33] *** Joins: hans (uid529825@id-529825.helmsley.irccloud.com)
[16:22:03] <ville> http://www.eelis.net/c++draft/variant#variant.general-1
[16:22:53] <ville> within those requirements it would be rather simple to not stick the object at the same address on an evil implementation
[16:23:48] *** Joins: c4017w_ (~c4017@209.52.68.8)
[16:24:52] <fluter> hmm
[16:24:52] <Eelis> doesn't have to be an evil implementation. fluter's cast would be bad even on a normal implementation that happens to store the type index before the object
[16:24:54] <fluter> ok
[16:27:27] *** Quits: c4017w__ (~c4017@209.52.68.8) (Ping timeout: 256 seconds)
[16:27:51] *** Joins: GNUmoon (~GNUmoon@gateway/tor-sasl/gnumoon)
[16:27:57] *** Quits: Viewday115 (~Viewday@user/viewday) (Read error: Connection reset by peer)
[16:28:16] *** Joins: Viewday115 (~Viewday@user/viewday)
[16:31:53] *** Joins: j0hn_mc_clane (~j0hn_mc_c@ptr-fqhhm12iua58a0gd4hj.18120a2.ip6.access.telenet.be)
[16:33:21] *** Joins: ymwm_ (~yingmanwu@27.153.164.187)
[16:34:11] *** Joins: skapata (~Skapata@2804:14c:87b0:9d2e:8da:5468:d39:d983)
[16:34:11] *** Quits: skapata (~Skapata@2804:14c:87b0:9d2e:8da:5468:d39:d983) (Changing host)
[16:34:11] *** Joins: skapata (~Skapata@user/skapata)
[16:34:26] *** Joins: wib_jonas (~wib_jonas@cst2-26-227.cust.vodafone.cz)
[16:35:37] *** Quits: ymwm (~yingmanwu@110.85.66.212) (Ping timeout: 240 seconds)
[16:36:37] *** Joins: whupdup (~whupdup@pool-173-76-128-81.bstnma.fios.verizon.net)
[16:37:56] *** Joins: Guest54 (~Guest54@2620:10d:c092:400::4:61ef)
[16:38:22] <Guest54> what is the cleanest way of unwrapping an optional if value is present, otherwise default to optional
[16:38:53] <Oxyd> “default to optional”?
[16:39:55] <Guest54> I mean default to a custom value
[16:40:03] <Guest54> I see value_or() in the api, looks promising
[16:40:08] <Oxyd> Yes, that.
[16:40:46] *** Quits: unlink2 (~unlink@p200300ebcf3e190012b7094ba83de7f3.dip0.t-ipconnect.de) (Remote host closed the connection)
[16:41:59] *** Joins: ssbr (~ssbr@python/site-packages/ssbr)
[16:43:21] *** Joins: ElectronApps (~ElectronA@user/electronapps)
[16:45:21] *** Joins: darkbit (~db@136.158.8.67)
[16:45:56] *** Quits: darkbit (~db@136.158.8.67) (Client Quit)
[16:46:55] *** Joins: Viewday1156 (~Viewday@user/viewday)
[16:47:52] *** Quits: lh_ideapad (~lh_mouse@mingw-w64/developer/lhmouse) (Remote host closed the connection)
[16:47:53] *** Quits: bebyx (~Thunderbi@user/bebyx) (Read error: Connection reset by peer)
[16:48:11] *** Joins: bebyx (~Thunderbi@user/bebyx)
[16:48:15] *** Joins: darkbit (~db@136.158.8.67)
[16:49:09] *** Quits: Viewday115 (~Viewday@user/viewday) (Read error: Connection reset by peer)
[16:49:09] *** Viewday1156 is now known as Viewday115
[16:55:37] *** Quits: ssbr (~ssbr@python/site-packages/ssbr) (Ping timeout: 240 seconds)
[16:57:19] *** Joins: foobaz212 (~foobaz212@152.37.103.80)
[16:57:22] *** Joins: foobaz21248 (~foobaz212@152.37.103.80)
[16:59:11] *** Joins: Null_A (~null_a@2601:645:8700:2290:3c1e:11a0:debc:333e)
[17:02:01] *** Quits: foobaz21248 (~foobaz212@152.37.103.80) (Ping timeout: 256 seconds)
[17:02:02] *** Quits: foobaz212 (~foobaz212@152.37.103.80) (Ping timeout: 256 seconds)
[17:03:36] *** Quits: Null_A (~null_a@2601:645:8700:2290:3c1e:11a0:debc:333e) (Ping timeout: 250 seconds)
[17:04:14] *** Quits: chenqisu1 (~chenqisu1@183.217.201.47) (Ping timeout: 272 seconds)
[17:06:08] *** Joins: proller (~p@2a02:6b8:0:408:eafc:afff:fec7:a7a3)
[17:07:45] *** Joins: foobaz21248 (~foobaz212@152.37.103.80)
[17:07:48] *** Joins: foobaz212 (~foobaz212@152.37.103.80)
[17:12:46] *** furrymcg1e is now known as furrymcgee
[17:16:38] *** Joins: Null_A (~null_a@2601:645:8700:2290:3c1e:11a0:debc:333e)
[17:21:17] *** Quits: Guest54 (~Guest54@2620:10d:c092:400::4:61ef) (Ping timeout: 256 seconds)
[17:21:18] *** Quits: CatCow (~wtf_over@c-73-96-109-206.hsd1.or.comcast.net) (Quit: Textual IRC Client: www.textualapp.com)
[17:21:55] *** Quits: Inline__ (~Inline@p200300cd471026001e3cab216ce28c3c.dip0.t-ipconnect.de) (Quit: Leaving)
[17:23:18] *** Joins: Viewday1156 (~Viewday@user/viewday)
[17:24:31] *** Joins: c4017w__ (~c4017@209.52.68.8)
[17:25:33] *** Quits: Viewday115 (~Viewday@user/viewday) (Ping timeout: 256 seconds)
[17:25:34] *** Viewday1156 is now known as Viewday115
[17:26:24] *** Joins: Inline (~Inline@p200300cd471026001e3cab216ce28c3c.dip0.t-ipconnect.de)
[17:28:05] *** Quits: c4017w_ (~c4017@209.52.68.8) (Ping timeout: 256 seconds)
[17:33:48] *** Quits: Null_A (~null_a@2601:645:8700:2290:3c1e:11a0:debc:333e) (Ping timeout: 240 seconds)
[17:33:58] *** Joins: Brainium (~brainium@user/brainium)
[17:38:57] *** Quits: AmR (~AmREiSa@156.199.197.9) (Ping timeout: 240 seconds)
[17:42:11] *** Joins: eelstrebor (~eelstrebo@198-178-29-136.scb.ne.static.allophone.net)
[17:43:21] *** Quits: npaperbot (~npaperbot@dodecahedron.m-ou.se) (Remote host closed the connection)
[17:43:30] *** Joins: npaperbot (~npaperbot@dodecahedron.m-ou.se)
[17:43:30] *** ChanServ sets mode: +v npaperbot
[17:47:21] *** Quits: hackkitten (~hackkitte@94.31.104.136) (Ping timeout: 256 seconds)
[17:47:30] *** Joins: Viewday1158 (~Viewday@user/viewday)
[17:49:19] *** Quits: Viewday115 (~Viewday@user/viewday) (Read error: Connection reset by peer)
[17:49:19] *** Viewday1158 is now known as Viewday115
[17:51:03] *** Quits: mattallmill (~mattallmi@ip68-103-130-85.ks.ok.cox.net) (Ping timeout: 256 seconds)
[17:52:11] *** Joins: gproto23 (~gproto23@user/gproto23)
[17:52:31] *** Joins: gproto23_ (~gproto23@user/gproto23)
[17:53:00] *** Joins: varioust (~varioust@gateway/tor-sasl/varioust)
[17:53:07] <Alipha> fluter: p is valid as long as the object held by the unique_ptr has not been deleted. So, for instance, `unique_ptr.reset();` or the unique_ptr going out of scope would invalidate p. Also note that `move(unique_ptr);` by itself does nothing.
[17:57:12] *** Joins: pulse (~pulse@user/pulse)
[17:57:40] *** Quits: N4buc0 (~N4buc0@2804:7f4:348b:d670:6242:84ac:67cd:b737) (Remote host closed the connection)
[17:57:57] *** Joins: N4buc0 (~N4buc0@2804:7f4:348b:d670:6242:84ac:67cd:b737)
[17:59:13] <ville> Alipha: the rules require the storage to be re-used... so can't unconditioally say that .reset() would be enough: http://www.eelis.net/c++draft/full#basic.life-6.sentence-1
[17:59:20] *** Quits: bebyx (~Thunderbi@user/bebyx) (Ping timeout: 272 seconds)
[18:00:20] <ville> oops link to full..
[18:01:48] <ville> http://www.eelis.net/c++draft/basic.life#6.sentence-1
[18:06:25] *** Joins: hackkitten (~hackkitte@94.31.104.136)
[18:06:32] *** Quits: timwis (uid152344@id-152344.uxbridge.irccloud.com) (Quit: Connection closed for inactivity)
[18:07:44] *** Joins: Kohe (~Kohe@46.12.214.37.dsl.dyn.forthnet.gr)
[18:10:16] *** Joins: bebyx (~Thunderbi@user/bebyx)
[18:15:05] *** Quits: interop_madness (~interop_m@user/interop-madness/x-0950004) (Quit: Leaving)
[18:22:39] *** Quits: greyrat (~greyrat@ip202.ip-51-178-215.eu) (Bye)
[18:23:01] *** Joins: greyrat_ (~greyrat@ip202.ip-51-178-215.eu)
[18:23:07] *** Joins: pizdets (~pizdets@183.182.114.123)
[18:23:26] *** Joins: zachel_ (~zachel@user/zachel)
[18:23:28] *** Joins: slavfox_ (~slavfox@93.158.232.111)
[18:23:51] *** Joins: hirish (~hirish@ip85.ip-137-74-20.eu)
[18:23:52] *** Joins: cbreak_ (~cbreak@77-58-201-132.dclient.hispeed.ch)
[18:23:57] *** Joins: pah (~pah@user/pah)
[18:24:01] *** Joins: samuelb (~samuelber@nata01.lip.pt)
[18:24:04] *** Joins: luna-is-here_ (~quassel@2a02:908:f761:2a3c::a)
[18:24:10] *** Joins: [RMS] (~rs@genoce.org)
[18:24:14] *** Server sets mode: +Fcnt 
[18:24:19] *** Joins: GrecKo_ (~grecko@static.183.157.9.5.clients.your-server.de)
[18:24:23] *** Joins: barometz_ (~dvanb@i117058.upc-i.chello.nl)
[18:24:24] *** Joins: Gamah_ (~quassel@gamah.net)
[18:24:54] *** Joins: c4017w_ (~c4017@209.52.68.8)
[18:25:01] *** Joins: pippijn_ (~pippijn@isis.xinutec.org)
[18:25:11] *** Joins: Soliton_ (soliton@wesnoth/developer/soliton)
[18:25:12] *** Joins: FlannelKing (~flannel@cpe-76-175-193-181.socal.res.rr.com)
[18:25:17] *** Joins: fflam_ (~mdt@ip72-220-60-77.sd.sd.cox.net)
[18:25:23] *** Joins: constxd (~brad@142.134.78.128)
[18:25:23] *** Joins: murphy_ (~murphy_@cpe-104-162-115-128.nyc.res.rr.com)
[18:25:24] *** Joins: veverak1 (~veverak@ip-89-102-98-161.net.upcbroadband.cz)
[18:25:24] *** Joins: wickedmic_ (~wickedmic@2a02:908:1028:3140:2c7b:1bff:feb4:e91a)
[18:25:25] *** Joins: ndorf_ (~nd@ob.noxio.us)
[18:25:38] *** Joins: BluesBoy_ (~bboy@stotz2.com)
[18:25:38] *** Joins: mrec_ (~markus@sundtek.de)
[18:25:41] *** Joins: routeveg_ (~lee@197.ip-51-195-136.eu)
[18:25:41] *** Joins: smallvil_ (~smallvill@cpe-172-193-72-46.qld.foxtel.net.au)
[18:25:42] *** Joins: talisein_ (~talisein@user/talisein)
[18:25:47] *** Joins: rdrg109_ (~rdrg109@user/rdrg109)
[18:25:50] *** Joins: Xizor_ (~Xizor@151.ip-51-68-121.eu)
[18:25:51] *** Joins: zeenk (~zeenk@2a02:2f04:a30d:1300:51a3:bcfc:6cda:9fc5)
[18:26:14] *** Joins: Viewday1154 (~Viewday@user/viewday)
[18:27:35] *** Quits: pa (~pah@user/pah) (Killed (zirconium.libera.chat (Nickname regained by services)))
[18:27:35] *** pah is now known as pa
[18:27:53] *** Quits: Viewday115 (~Viewday@user/viewday) (Ping timeout: 256 seconds)
[18:27:56] *** Viewday1154 is now known as Viewday115
[18:28:16] *** Quits: c4017w__ (~c4017@209.52.68.8) (Ping timeout: 245 seconds)
[18:28:58] *** Joins: dwt_ (~dwt_@c-98-198-103-176.hsd1.tx.comcast.net)
[18:29:25] *** Quits: sweetsymph (uid509475@id-509475.lymington.irccloud.com) (Quit: Connection closed for inactivity)
[18:29:52] *** Quits: bebyx (~Thunderbi@user/bebyx) (*.net *.split)
[18:29:52] *** Quits: eelstrebor (~eelstrebo@198-178-29-136.scb.ne.static.allophone.net) (*.net *.split)
[18:29:52] *** Quits: whupdup (~whupdup@pool-173-76-128-81.bstnma.fios.verizon.net) (*.net *.split)
[18:29:52] *** Quits: JohnMS_WORK (~kvirc@89-64-70-205.dynamic.chello.pl) (*.net *.split)
[18:29:52] *** Quits: jplejacq (~jplejacq@24.224.90.176) (*.net *.split)
[18:29:52] *** Quits: Flannel (~flannel@cpe-76-175-193-181.socal.res.rr.com) (*.net *.split)
[18:29:52] *** Quits: dongcarl (~dongcarl@pool-96-232-179-212.nycmny.fios.verizon.net) (*.net *.split)
[18:29:52] *** Quits: slidercrank (~slidercra@user/slidercrank) (*.net *.split)
[18:29:52] *** Quits: cbreak (~cbreak@77-58-201-132.dclient.hispeed.ch) (*.net *.split)
[18:29:52] *** Quits: BluesBoy (~bboy@user/bluesboy) (*.net *.split)
[18:29:52] *** Quits: zer0x_ (~zer0x@58.186.216.56) (*.net *.split)
[18:29:52] *** Quits: smallville7123 (~smallvill@cpe-172-193-72-46.qld.foxtel.net.au) (*.net *.split)
[18:29:52] *** Quits: pizdets_ (~pizdets@183.182.114.123) (*.net *.split)
[18:29:52] *** Quits: routeveg (~lee@197.ip-51-195-136.eu) (*.net *.split)
[18:29:52] *** Quits: pippijn (~pippijn@isis.xinutec.org) (*.net *.split)
[18:29:52] *** Quits: greyrat (~greyrat@ip202.ip-51-178-215.eu) (*.net *.split)
[18:29:52] *** Quits: Artea (~Lufia@artea.com.pt) (*.net *.split)
[18:29:52] *** Quits: kkd (~kkd@255.205.154.104.bc.googleusercontent.com) (*.net *.split)
[18:29:52] *** Quits: constxo (~brad@142.134.78.128) (*.net *.split)
[18:29:52] *** Quits: dextaa (~DV@user/dextaa) (*.net *.split)
[18:29:52] *** Quits: samuelbernardo (~samuelber@nata02.lip.pt) (*.net *.split)
[18:29:52] *** Quits: Soliton (soliton@wesnoth/developer/soliton) (*.net *.split)
[18:29:52] *** Quits: mrec (~markus@sundtek.de) (*.net *.split)
[18:29:52] *** Quits: flynn (~mcbloch@user/flynn) (*.net *.split)
[18:29:53] *** Quits: acidtonic_ (~acidtonic@162-17-146-153-static.hfc.comcastbusiness.net) (*.net *.split)
[18:29:53] *** Quits: dwt__ (~dwt_@c-98-198-103-176.hsd1.tx.comcast.net) (*.net *.split)
[18:29:53] *** Quits: jancoow (~jancoow@user/jancoow) (*.net *.split)
[18:29:53] *** Quits: luna-is-here (~quassel@ip-095-223-058-048.um35.pools.vodafone-ip.de) (*.net *.split)
[18:29:53] *** Quits: wickedmic (~wickedmic@ip-037-201-214-002.um10.pools.vodafone-ip.de) (*.net *.split)
[18:29:53] *** Quits: nortoh (~nortoh@user/nortoh) (*.net *.split)
[18:29:53] *** Quits: zachel (~zachel@user/zachel) (*.net *.split)
[18:29:53] *** Quits: henbruas (~henbruas@ti0003a400-6569.bb.online.no) (*.net *.split)
[18:29:53] *** Quits: useretail (~useretail@185.132.19.151) (*.net *.split)
[18:29:53] *** Quits: fflam (~mdt@ip72-220-60-77.sd.sd.cox.net) (*.net *.split)
[18:29:53] *** Quits: talisein (~talisein@user/talisein) (*.net *.split)
[18:29:53] *** Quits: Devtron (~Devtron@D4708984.rev.sefiber.dk) (*.net *.split)
[18:29:53] *** Quits: noarb (~noarb@user/noarb) (*.net *.split)
[18:29:53] *** Quits: twice (~twice@173.82.153.50) (*.net *.split)
[18:29:53] *** Quits: veverak (~veverak@ip-89-102-98-161.net.upcbroadband.cz) (*.net *.split)
[18:29:53] *** Quits: Grell (~john@ool-4579c605.dyn.optonline.net) (*.net *.split)
[18:29:53] *** Quits: simpl_e (~user@user/simpl-e/x-8589812) (*.net *.split)
[18:29:53] *** Quits: Gamah (~quassel@gamah.net) (*.net *.split)
[18:29:53] *** Quits: e2 (e2@sponsored.by.bnc4you.xyz) (*.net *.split)
[18:29:53] *** Quits: Dragoon (~Dragoon@user/dragoon) (*.net *.split)
[18:29:53] *** Quits: foul_owl (~kerry@23.82.193.89) (*.net *.split)
[18:29:53] *** Quits: Xizor (~Xizor@151.ip-51-68-121.eu) (*.net *.split)
[18:29:53] *** Quits: beagles (~beagles@47.55.222.129) (*.net *.split)
[18:29:53] *** Quits: murphy__ (~murphy_@cpe-104-162-115-128.nyc.res.rr.com) (*.net *.split)
[18:29:53] *** Quits: EdFletcher (~PKD@user/edfletcher) (*.net *.split)
[18:29:53] *** Quits: barometz (~dvanb@i117058.upc-i.chello.nl) (*.net *.split)
[18:29:53] *** Quits: rdrg109 (~rdrg109@user/rdrg109) (*.net *.split)
[18:29:53] *** Quits: hirish_ (~hirish@ip85.ip-137-74-20.eu) (*.net *.split)
[18:29:53] *** Quits: Khoyo (~khoyo@user/khoyo) (*.net *.split)
[18:29:53] *** Quits: ZeroKnight (zeroknight@dimensionzero.net) (*.net *.split)
[18:29:53] *** Quits: ndorf (~nd@ob.noxio.us) (*.net *.split)
[18:29:53] *** Quits: slavfox (~slavfox@93.158.232.111) (*.net *.split)
[18:29:53] *** Quits: GrecKo (~grecko@static.183.157.9.5.clients.your-server.de) (*.net *.split)
[18:29:53] *** Quits: [R] (~rs@genoce.org) (*.net *.split)
[18:29:53] *** Quits: koolazer (~koo@user/koolazer) (*.net *.split)
[18:29:53] *** dongcarl4 is now known as dongcarl
[18:29:53] *** bebyx1 is now known as bebyx
[18:29:54] *** dextaa4 is now known as dextaa
[18:29:54] *** henbruas_ is now known as henbruas
[18:29:54] *** twice1 is now known as twice
[18:29:54] *** ZeroKnight_ is now known as ZeroKnight
[18:29:57] *** slavfox_ is now known as slavfox
[18:29:57] *** flynn4 is now known as flynn
[18:29:57] *** jancoow9 is now known as jancoow
[18:29:58] *** Soliton_ is now known as Soliton
[18:30:00] *** whup_dup is now known as whupdup
[18:31:00] *** Quits: j0hn_mc_clane (~j0hn_mc_c@ptr-fqhhm12iua58a0gd4hj.18120a2.ip6.access.telenet.be) (Quit: Leaving)
[18:32:19] *** Quits: JohnMS_AWAY (~kvirc@194.110.240.100) (Quit: KVIrc 5.0.1 Aria http://www.kvirc.net/)
[18:33:37] *** Quits: c4017w_ (~c4017@209.52.68.8) (Read error: Connection reset by peer)
[18:33:59] *** Joins: c4017w_ (~c4017@209.52.68.8)
[18:35:15] *** Quits: ymwm_ (~yingmanwu@27.153.164.187) (Ping timeout: 256 seconds)
[18:36:28] *** Joins: foul_owl (~kerry@23.82.193.89)
[18:36:58] *** Joins: koolazer (~koo@user/koolazer)
[18:37:19] *** Joins: slidercrank (~slidercra@user/slidercrank)
[18:37:26] *** Joins: Dragoon (~Dragoon@user/dragoon)
[18:37:50] *** Joins: kkd (~kkd@255.205.154.104.bc.googleusercontent.com)
[18:38:00] *** Joins: jplejacq (~jplejacq@24.224.90.176)
[18:38:15] *** Joins: e2 (e2@sponsored.by.bnc4you.xyz)
[18:38:16] *** Joins: beagles (~beagles@47.55.222.129)
[18:38:57] *** Joins: eelstrebor (~eelstrebo@198-178-29-136.scb.ne.static.allophone.net)
[18:40:37] *** Quits: zer0x__ (~zer0x@58.186.216.56) (Ping timeout: 256 seconds)
[18:45:55] *** Quits: BluesBoy_ (~bboy@stotz2.com) (Quit: leaving)
[18:46:29] *** Joins: BluesBoy (~bboy@user/bluesboy)
[18:47:05] *** Joins: Tungki (~Guest28@114.124.195.102)
[18:50:17] *** Quits: gproto23 (~gproto23@user/gproto23) (Remote host closed the connection)
[18:50:17] *** Quits: gproto23_ (~gproto23@user/gproto23) (Remote host closed the connection)
[18:52:23] *** Quits: ivii (~ivan@user/ivii) (Remote host closed the connection)
[18:54:52] *** Joins: Viewday1155 (~Viewday@user/viewday)
[18:56:47] *** Quits: Viewday115 (~Viewday@user/viewday) (Ping timeout: 256 seconds)
[18:56:48] *** Viewday1155 is now known as Viewday115
[19:06:23] *** Joins: elkalamar (elkalamar@gateway/vpn/airvpn/elkalamar)
[19:06:54] *** Joins: Prof_Dumbledore (~Prof_Dumb@2409:4042:2e02:4677:694b:f603:d717:d956)
[19:09:22] *** Joins: RoKenn (~RoKenn@2001:a61:35b1:ca01:3e05:ca1a:e466:cc04)
[19:09:22] *** Quits: RoKenn (~RoKenn@2001:a61:35b1:ca01:3e05:ca1a:e466:cc04) (Changing host)
[19:09:22] *** Joins: RoKenn (~RoKenn@user/rokenn)
[19:13:17] *** Quits: Linux77 (~7Linux7@2804:d45:8c08:9300:ead8:83e5:3ff3:b0a6) (Ping timeout: 240 seconds)
[19:15:29] *** Quits: tmm88 (~tmm88@bl22-240-102.dsl.telepac.pt) (Ping timeout: 256 seconds)
[19:15:30] *** Quits: Vile` (~Vile@user/Vile/x-1554198) (Read error: Connection reset by peer)
[19:18:02] *** Joins: ipe (~ipe@91-156-246-15.elisa-laajakaista.fi)
[19:18:37] *** Joins: Vile (~Vile@73.182.253.255)
[19:19:32] *** Quits: ville (~ville@user/ville) (Quit: ville)
[19:19:57] *** Joins: Linux77 (~7Linux7@2804:d45:8c08:9300:c614:6dc7:1fa7:6dfd)
[19:20:51] *** Quits: Tungki (~Guest28@114.124.195.102) (Ping timeout: 256 seconds)
[19:21:12] *** Joins: cosimone (~user@2001:b07:ae5:db26:c24a:d20:4d91:1e20)
[19:22:05] *** Quits: Linux77 (~7Linux7@2804:d45:8c08:9300:c614:6dc7:1fa7:6dfd) (Remote host closed the connection)
[19:22:20] *** Joins: ville (~ville@user/ville)
[19:22:59] *** Joins: Miyu (~hackkitte@94.31.104.136)
[19:23:46] *** Joins: AbleBacon (~AbleBacon@user/AbleBacon)
[19:23:58] *** Joins: ymwm_ (~yingmanwu@27.153.164.187)
[19:25:56] *** Joins: Viewday1159 (~Viewday@user/viewday)
[19:26:49] *** Quits: hackkitten (~hackkitte@94.31.104.136) (Ping timeout: 256 seconds)
[19:27:31] *** Miyu is now known as hackkitten
[19:27:57] *** Quits: Viewday115 (~Viewday@user/viewday) (Ping timeout: 256 seconds)
[19:27:58] *** Viewday1159 is now known as Viewday115
[19:28:38] *** Joins: rgrinberg (~textual@2806:101e:7:70b6:74fb:2532:55e4:bc77)
[19:34:35] *** Quits: varioust (~varioust@gateway/tor-sasl/varioust) (Ping timeout: 240 seconds)
[19:34:44] *** Joins: c4017w__ (~c4017@209.52.68.8)
[19:35:22] *** Quits: N4buc0 (~N4buc0@2804:7f4:348b:d670:6242:84ac:67cd:b737) (Remote host closed the connection)
[19:37:16] *** Quits: rgrinberg (~textual@2806:101e:7:70b6:74fb:2532:55e4:bc77) (Ping timeout: 268 seconds)
[19:37:41] *** Quits: arch-angel (~arch-ange@user/arch-angel) (Remote host closed the connection)
[19:38:03] *** Quits: c4017w_ (~c4017@209.52.68.8) (Ping timeout: 250 seconds)
[19:38:16] *** Joins: varioust (~varioust@gateway/tor-sasl/varioust)
[19:39:15] *** Quits: Prof_Dumbledore (~Prof_Dumb@2409:4042:2e02:4677:694b:f603:d717:d956) (Quit: Leaving)
[19:41:16] *** Joins: Linux77 (~leonardo@2804:d45:8c08:9300:76d0:2bff:fe7a:f3a4)
[19:46:13] *** veverak1 is now known as veverak
[19:47:37] *** Quits: immibis (~hexchat@2a02:3032:a:5f88:44a5:c3af:6367:30ff) (Remote host closed the connection)
[19:47:47] *** Joins: immibis (~hexchat@2a02:3032:a:5f88:44a5:c3af:6367:30ff)
[19:48:48] *** john__ is now known as Grell
[19:50:49] *** Quits: immibis (~hexchat@2a02:3032:a:5f88:44a5:c3af:6367:30ff) (Read error: Connection reset by peer)
[19:50:57] *** Joins: immibis (~hexchat@2a02:3032:a:5f88:44a5:c3af:6367:30ff)
[19:57:22] *** Quits: wib_jonas (~wib_jonas@cst2-26-227.cust.vodafone.cz) (Quit: Client closed)
[20:00:10] <constxd> hey kings
[20:00:38] <constxd> so i have this unique_ptr<T> member right and i want to initialize it in my constructor
[20:01:17] <acidtonic__> Is there a runtime-version of using std::duration with std::ratio<1,60> to build a loop-yielding to a specific frame rate. I found code that works but I need the user to runtime-specify the value of "60" inside std:ratio to pick the desired frame rate.
[20:01:20] <constxd> what is the difference between: my_member(new T(x)) and my_member(make_shared<T>(x))
[20:01:25] *** Joins: LuksNuke (~LuksNuke@gateway/tor-sasl/luksnuke)
[20:01:40] <constxd> err
[20:01:42] <constxd> make_unique*
[20:01:43] *** Quits: crabbedhaloablut (~crabbedha@user/crabbedhaloablut) (Remote host closed the connection)
[20:01:44] <ville> constxd: creating a shared_ptr would seem wrong
[20:01:51] <constxd> indeed haha
[20:02:00] *** Quits: LuksNuke (~LuksNuke@gateway/tor-sasl/luksnuke) (Remote host closed the connection)
[20:02:01] *** Joins: crabbedhaloablut (~crabbedha@user/crabbedhaloablut)
[20:02:17] <acidtonic__> it then uses some odd delay = duration{1}  construct to calculate the correct delay and I'm not totally certain how that works
[20:02:28] <ville> constxd: the various make_ functions are slightly anachronistic these days. they served two purposes which are no longer issues
[20:02:52] <constxd> what are those?
[20:02:59] <constxd> i'm using c++14 btw
[20:03:55] <ville> constxd: 0) only function templates could do template argument deduction 1) function argument evaluation could be interleaved leading to exception unsafety issues with functions that had more than 1 parameter
[20:05:15] <constxd> so you're saying i should use the `new` version?
[20:05:30] <ville> sure why not
[20:05:55] <constxd> i wish u could like
[20:06:05] <constxd> forward the T constructors to to unique_ptr<T>
[20:06:10] <constxd> so i could just write my_member(x)
[20:06:16] *** Joins: vicfred (~vicfred@user/vicfred)
[20:06:26] *** Quits: immibis (~hexchat@2a02:3032:a:5f88:44a5:c3af:6367:30ff) (Read error: Connection reset by peer)
[20:07:01] *** Joins: immibis (~hexchat@2a02:3032:a:5f88:44a5:c3af:6367:30ff)
[20:08:45] *** Quits: eelstrebor (~eelstrebo@198-178-29-136.scb.ne.static.allophone.net) (Quit: Ex-Chat)
[20:10:57] *** Joins: eelstrebor (~eelstrebo@198-178-29-136.scb.ne.static.allophone.net)
[20:14:36] *** Quits: AssKoala (~asskoala@user/asskoala) (Ping timeout: 240 seconds)
[20:15:09] *** Quits: lh_mouse_ (~lh_mouse@mingw-w64/developer/lhmouse) (Read error: Connection reset by peer)
[20:15:55] *** Joins: AssKoala (~asskoala@23-121-91-253.lightspeed.dybhfl.sbcglobal.net)
[20:15:55] *** Quits: AssKoala (~asskoala@23-121-91-253.lightspeed.dybhfl.sbcglobal.net) (Changing host)
[20:15:55] *** Joins: AssKoala (~asskoala@user/asskoala)
[20:16:54] <cbreak_> you can. If x is a pointer you want to take ownership of.
[20:17:56] <cbreak_> have you considered just using your type directly, without pointer indirection?
[20:18:21] *** Quits: foobaz21248 (~foobaz212@152.37.103.80) (Quit: Client closed)
[20:18:21] *** Quits: foobaz212 (~foobaz212@152.37.103.80) (Quit: Client closed)
[20:18:34] *** Joins: foobaz212 (~foobaz212@152.37.103.80)
[20:18:36] *** Joins: foobaz21248 (~foobaz212@152.37.103.80)
[20:19:03] *** Joins: gh34 (~textual@cpe-184-58-181-106.wi.res.rr.com)
[20:21:02] *** Joins: Viewday1153 (~Viewday@user/viewday)
[20:21:23] *** Joins: jokoon (~eio@2a01:e0a:542:e160:5997:2cc6:43a7:4f4e)
[20:22:33] *** Quits: Viewday115 (~Viewday@user/viewday) (Read error: Connection reset by peer)
[20:22:33] *** Viewday1153 is now known as Viewday115
[20:24:19] *** Quits: foobaz21248 (~foobaz212@152.37.103.80) (Ping timeout: 256 seconds)
[20:24:19] *** Quits: foobaz212 (~foobaz212@152.37.103.80) (Ping timeout: 256 seconds)
[20:25:07] *** Quits: jsbach (~jsbach@2a01:c22:349c:3100:8fb0:3270:f51d:118b) (Remote host closed the connection)
[20:27:55] *** Joins: jsbach (~jsbach@2a01:c22:349c:3100:92e4:b61b:fb6f:e371)
[20:32:12] *** Quits: elkalamar (elkalamar@gateway/vpn/airvpn/elkalamar) (Quit: Leaving)
[20:35:26] *** Joins: c4017w_ (~c4017@209.52.68.8)
[20:35:46] *** Joins: great_taste (~great_tas@user/great-taste/x-5798414)
[20:39:02] *** Quits: c4017w__ (~c4017@209.52.68.8) (Ping timeout: 260 seconds)
[20:41:08] <constxd> cbreak_: yes
[20:41:25] <constxd> cbreak_: i'm not the original author
[20:46:11] *** Quits: ymwm_ (~yingmanwu@27.153.164.187) (Ping timeout: 252 seconds)
[20:47:11] <constxd> ville: what about make_shared? doesn't that one actually have performance implications?
[20:49:31] *** Joins: the_lanetly_052 (~the_lanet@194.135.166.223)
[20:50:28] <PJBoy> most of the make_ functions act subtly different than the direct ctor calls
[20:50:40] <PJBoy> make_shared has the performance implication yeah
[20:51:47] <cbreak_> usually positive ones
[20:53:30] *** Joins: tradar (~tradar@user/tradar)
[20:54:53] *** Joins: bitmask (~bitmask@c-73-215-237-27.hsd1.nj.comcast.net)
[20:55:12] *** Joins: xkuru (~xkuru@user/xkuru)
[20:57:11] *** Joins: EdFletcher (~PKD@user/edfletcher)
[20:57:33] <ville> constxd: i'll give you "impication". actual measurable performance benefits in real-life scenarios i'm still waiting for the blog post
[20:58:16] <constxd> lol
[20:58:22] <cbreak_> I'm somewhat convinced that synthetic test cases where the difference is measurable can be manufactured
[20:58:31] <ville> of course they can be
[20:59:13] *** Quits: writeback[m] (~writeback@2001:470:69fc:105::1:6118) (Ping timeout: 256 seconds)
[20:59:27] *** Joins: writeback[m] (~writeback@2001:470:69fc:105::1:6118)
[21:00:35] *** Quits: Vile (~Vile@73.182.253.255) (Quit: ...)
[21:01:00] *** Joins: Vile (~Vile@73.182.253.255)
[21:01:10] *** Quits: Vile (~Vile@73.182.253.255) (Client Quit)
[21:01:25] <ville> the claimed benefit comes from getting a single allocation vs two separate allocations... but for that to matter it would sort of mean you'd have lot of those objects, and then if you've lot of them you're likely to stick them in a container. so now you've that single allocation kept alive because the control block is there, and a copy of the original object allocated in the container
[21:01:34] *** Joins: VIle` (~Vile@73.182.253.255)
[21:02:03] *** Joins: sadaqat (~sadaqat@119.158.3.122)
[21:02:25] *** Joins: sobkas (~sobkas@95.175.17.217)
[21:02:36] *** Quits: VIle` (~Vile@73.182.253.255) (Client Quit)
[21:03:03] *** Quits: sadaqat (~sadaqat@119.158.3.122) (Client Quit)
[21:03:13] *** Joins: VIle` (~Vile@73.182.253.255)
[21:05:59] *** Quits: Kohe (~Kohe@46.12.214.37.dsl.dyn.forthnet.gr) (Ping timeout: 256 seconds)
[21:06:20] <ville> in that kind of scenario you'd likely look for gains by using a faster allocator that doesn't end up doing a system calls as often. allocating page at a time, never returning memory to the system...
[21:06:43] *** Joins: Kohe (~Kohe@46.12.214.37.dsl.dyn.forthnet.gr)
[21:07:06] <ville> (of course std::shared_ptr knows nothing about allocators)
[21:07:18] <Eelis> hm? if you have a shared_ptrs in a container (and nowhere else), then as soon as the last shared_ptr pointing to some object perishes, both the object and the control block are deallocated. the container doesn't come into it
[21:08:16] <Eelis> s/have a/have/
[21:08:31] <ville> something along the lines of this: auto x = make_shared(); /* stuff */ xs.push_back(xs);
[21:08:44] <ville> err .push_back(x)
[21:09:05] *** Quits: slavfox (~slavfox@93.158.232.111) (Ping timeout: 256 seconds)
[21:09:18] <Eelis> make_shared is beneficial when it's called a lot. simple :)
[21:09:29] <ville> so is the claim
[21:09:59] <Eelis> oh you're skeptical that 2 free store allocations is better than 1 when it's done frequently?
[21:10:07] <Eelis> erm, 1 is better than 2
[21:10:34] <ville> it doesn't matter if you're better if even the worse case doesn't manage to distinguish from the system noise
[21:11:16] <Eelis> ah, you mean you find it hard to imagine a case where allocating shared_ptrs and control blocks could be a bottleneck?
[21:11:48] <ville> yes and no. i can perfectly well manufacture a synthetic case where you can measure it
[21:12:24] *** Joins: Null_A (~null_a@2601:645:8700:2290:3c1e:11a0:debc:333e)
[21:12:26] *** Quits: tradar (~tradar@user/tradar) (Quit: tradar)
[21:12:32] <Eelis> i've got too little experience to say. i've only ever written simple programs
[21:16:29] *** Joins: foobaz212 (~foobaz212@152.37.103.80)
[21:16:33] *** Joins: foobaz21248 (~foobaz212@152.37.103.80)
[21:16:36] *** Quits: rpnx-phone (rpnx-phone@gateway/vpn/protonvpn/rpnx) (Ping timeout: 240 seconds)
[21:16:47] *** Joins: rpnx-phone (rpnx-phone@gateway/vpn/protonvpn/rpnx)
[21:16:57] *** Quits: Null_A (~null_a@2601:645:8700:2290:3c1e:11a0:debc:333e) (Ping timeout: 240 seconds)
[21:20:21] *** Joins: slavfox_ (~slavfox@93.158.232.111)
[21:20:52] *** Quits: Kohe (~Kohe@46.12.214.37.dsl.dyn.forthnet.gr) (Ping timeout: 268 seconds)
[21:21:06] *** slavfox_ is now known as slavfox
[21:21:33] *** Quits: foobaz21248 (~foobaz212@152.37.103.80) (Ping timeout: 256 seconds)
[21:21:33] *** Quits: foobaz212 (~foobaz212@152.37.103.80) (Ping timeout: 256 seconds)
[21:22:34] *** Joins: rgrinberg (~textual@2806:101e:7:cba4:b560:bad3:e7c6:5293)
[21:23:59] *** Joins: kuuuk (~dan_pena@86.228.71.37.rev.sfr.net)
[21:24:22] <kuuuk> Hello, I'm lookin for a book to learn about high performance C++ applied to finance. If any of you have an idea
[21:29:23] <Eelis> kuuuk: there isn't that much special about finance. they tend not to care about power usage so you can do busy waiting loops, and they use FPGAs for the stuff that matters the most, but apart from that, all the general wisom about writing high-performance C++ applies
[21:29:28] *** Quits: Techcable (~Techcable@168.235.93.147) (Remote host closed the connection)
[21:29:35] <Eelis> *wisdom
[21:30:11] *** Quits: nurupo (~nurupo.ga@user/nurupo) (Quit: nurupo.ga)
[21:30:24] *** Joins: PlasmaHH_ (~PlasamaHH@user/plasmahh)
[21:30:26] *** Joins: nurupo (~nurupo.ga@user/nurupo)
[21:30:28] <Eelis> and the general wisdom boils down to: try to keep your memory accesses close together in space and time
[21:30:40] *** Quits: MajorBiscuit (~MajorBisc@wlan-145-94-218-48.wlan.tudelft.nl) (Quit: WeeChat 3.4)
[21:30:58] <Eelis> because that's what the hardware has been tuned for
[21:31:05] *** Joins: tmm88 (~tmm88@user/tmm88)
[21:31:17] *** Joins: Techcable (~Techcable@168.235.93.147)
[21:31:18] *** Quits: elastic_dog (~elastic_d@2a01:118f:822:9c00:f583:aa51:9ad4:d4fb) (Ping timeout: 260 seconds)
[21:31:24] *** Quits: slavfox (~slavfox@93.158.232.111) (Ping timeout: 240 seconds)
[21:31:37] *** Quits: PlasmaHH (~PlasamaHH@user/plasmahh) (Ping timeout: 240 seconds)
[21:31:46] *** Quits: Inline (~Inline@p200300cd471026001e3cab216ce28c3c.dip0.t-ipconnect.de) (Quit: Leaving)
[21:32:33] *** Joins: slavfox (~slavfox@93.158.232.111)
[21:33:12] *** Quits: lxsameer (~lxsameer@user/lxsameer) (Ping timeout: 268 seconds)
[21:33:55] *** Joins: elastic_dog (~elastic_d@2a01:118f:822:9c00:f583:aa51:9ad4:d4fb)
[21:34:11] *** Joins: Inline (~Inline@p200300cd471026001e3cab216ce28c3c.dip0.t-ipconnect.de)
[21:34:14] *** Quits: rvalue (~rvalue@user/rvalue) (Read error: Connection reset by peer)
[21:34:28] *** Joins: rvalue (~rvalue@user/rvalue)
[21:34:53] *** Quits: Zogatribe (Zogatribe@user/zogatribe) (Ping timeout: 256 seconds)
[21:35:22] <tmm88> heyho
[21:36:09] *** Joins: c4017w__ (~c4017@209.52.68.8)
[21:36:11] <Eelis> yes!
[21:37:23] *** Quits: elastic_dog (~elastic_d@2a01:118f:822:9c00:f583:aa51:9ad4:d4fb) (Client Quit)
[21:37:54] *** Joins: elastic_dog (~elastic_d@2a01:118f:822:9c00:f583:aa51:9ad4:d4fb)
[21:38:57] *** Joins: Tobbi (~Tobbi@2a02:8108:1240:48ec:1e5:681d:af1f:ca64)
[21:39:32] *** Quits: c4017w_ (~c4017@209.52.68.8) (Ping timeout: 240 seconds)
[21:43:21] *** Quits: npaperbot (~npaperbot@dodecahedron.m-ou.se) (Remote host closed the connection)
[21:43:29] *** Joins: npaperbot (~npaperbot@dodecahedron.m-ou.se)
[21:43:29] *** ChanServ sets mode: +v npaperbot
[21:43:57] *** Quits: Rayke (rayke@user/rayke) (Quit: WeeChat 3.4)
[21:44:33] *** Quits: Perry (~perry@coffee-break.at) (Quit: ZNC - http://znc.in)
[21:45:04] *** Joins: Null_A (~null_a@2601:645:8700:2290:c864:fc8b:2d0b:834a)
[21:45:13] *** Joins: vdamewood (~vdamewood@fedora/vdamewood)
[21:45:18] *** Joins: Perry (~perry@coffee-break.at)
[21:46:29] *** Joins: Rayke (rayke@user/rayke)
[21:47:54] *** Joins: vinleod (~vdamewood@fedora/vdamewood)
[21:49:24] *** Quits: Null_A (~null_a@2601:645:8700:2290:c864:fc8b:2d0b:834a) (Ping timeout: 240 seconds)
[21:50:06] *** Quits: vdamewood (~vdamewood@fedora/vdamewood) (Killed (silver.libera.chat (Nickname regained by services)))
[21:50:06] *** vinleod is now known as vdamewood
[21:51:05] *** Quits: hans (uid529825@id-529825.helmsley.irccloud.com) (Quit: Connection closed for inactivity)
[21:53:30] *** cbreak_ is now known as cbreak
[21:56:00] *** Quits: vicfred (~vicfred@user/vicfred) (Quit: Leaving)
[22:01:43] *** Joins: Cromulent (sid301841@id-301841.helmsley.irccloud.com)
[22:03:30] *** Quits: proller (~p@2a02:6b8:0:408:eafc:afff:fec7:a7a3) (Ping timeout: 260 seconds)
[22:13:26] *** Joins: Kohe (~Kohe@46.12.214.37.dsl.dyn.forthnet.gr)
[22:16:29] *** Quits: sord937 (~sord937@gateway/tor-sasl/sord937) (Quit: sord937)
[22:18:37] *** Joins: Null_A (~null_a@2601:645:8700:2290:3c1e:11a0:debc:333e)
[22:19:26] *** Joins: Angs (~Angs@193.138.218.200)
[22:21:17] *** Joins: Viewday1152 (~Viewday@user/viewday)
[22:22:33] *** Quits: Viewday115 (~Viewday@user/viewday) (Read error: Connection reset by peer)
[22:22:34] *** Viewday1152 is now known as Viewday115
[22:23:24] *** Quits: Null_A (~null_a@2601:645:8700:2290:3c1e:11a0:debc:333e) (Ping timeout: 250 seconds)
[22:25:15] *** Quits: ville (~ville@user/ville) (Quit: ville)
[22:26:12] *** Joins: vicfred (~vicfred@user/vicfred)
[22:26:14] *** Joins: ville (~ville@user/ville)
[22:26:30] *** Quits: undephin3d (~undephin3@158.181.83.107) (Quit: leaving)
[22:26:48] <Alipha> constxd: since make_shared is preferred (it has performance benefits over directly using new), I would use make_unique just for consistency
[22:26:51] *** Quits: limubs (~limubs@cgn-89-1-58-13.nc.de) (Quit: Connection closed)
[22:31:01] *** Quits: the_lanetly_052 (~the_lanet@194.135.166.223) (Ping timeout: 256 seconds)
[22:32:13] *** Quits: bebyx (~Thunderbi@user/bebyx) (Ping timeout: 240 seconds)
[22:35:48] *** Quits: eelstrebor (~eelstrebo@198-178-29-136.scb.ne.static.allophone.net) (Quit: Ex-Chat)
[22:36:24] *** Joins: c4017w_ (~c4017@209.52.68.8)
[22:37:18] <PJBoy> `auto p = make_unique<T>(args...);` is a bit shorter than `unique_ptr<T> p(new T(args...));` and doesn't need to name the type twice
[22:37:31] <PJBoy> so I like make_unique still
[22:38:36] <PJBoy> if unique_ptr was able to deduce its template parameter from a new expression, then I'd probably wouldn't bother with make_unique
[22:40:37] *** Quits: c4017w__ (~c4017@209.52.68.8) (Ping timeout: 256 seconds)
[22:41:43] <Alipha> kuuuk: not related to performance, but if you're doing finance stuff in c++, you most likely should use a "fixed point" numeric library instead of floats/doubles because you don't want floating point's inaccuracies to cause calculation errors
[22:43:38] *** Joins: Angs_ (~Angs@45.83.220.209)
[22:45:46] *** Joins: wib_jonas (~wib_jonas@2a02:c38:d77d:380a:c95a:f833:9e7d:ed80)
[22:46:26] *** Quits: Angs (~Angs@193.138.218.200) (Ping timeout: 260 seconds)
[22:47:36] *** Joins: neet (~neet@136.41.96.251)
[22:51:10] *** Joins: Null_A (~null_a@c-98-210-133-39.hsd1.ca.comcast.net)
[22:52:00] <mitch0> that reminds me... TMForum's OpenAPI uses floats for all sorts of monetary values (it's a REST API specification supposedly created by experts of the field...)
[22:53:56] <Alipha> (though if the currency amounts are not large and you're not doing complication calculations with them, then double would probably be fine)
[22:54:23] <Alipha> (just make sure you round and not truncate :-) )
[22:55:55] *** Quits: Null_A (~null_a@c-98-210-133-39.hsd1.ca.comcast.net) (Ping timeout: 256 seconds)
[23:03:08] *** Quits: rpnx-phone (rpnx-phone@gateway/vpn/protonvpn/rpnx) (Ping timeout: 252 seconds)
[23:08:12] *** Quits: PJBoy (~PJBoy@user/pjboy) (Ping timeout: 240 seconds)
[23:08:42] *** Joins: bebyx (~Thunderbi@user/bebyx)
[23:10:28] *** Quits: Brainium (~brainium@user/brainium) (Quit: Konversation terminated!)
[23:11:06] *** Joins: unlink2 (~unlink@p200300ebcf3e190012b7094ba83de7f3.dip0.t-ipconnect.de)
[23:13:00] *** Quits: constxd (~brad@142.134.78.128) (Quit: WeeChat 2.8)
[23:13:49] <welder> Alipha: what is a performance benefit of make_shared over raw new and passing it to a constructor?
[23:13:58] *** Joins: Markow (~Markow@176.122.215.103)
[23:14:45] <Alipha> welder: make_shared is able to allocate the object and the control block in one allocation. Whereas using new means that the object and control block are allocated separately
[23:15:30] <imMute> there's also a downside of it where if all the shared_ptrs go away but a weak_ptr is keeping the control block alive - if you use make_shared, it cannot deallocate the space for the object separately (which might be a concern if the object is large)
[23:16:47] <imMute> but that's only a concern when the owned object is huge and you have the potential for weak_ptrs to outlive all the shared_ptrs
[23:17:33] *** Joins: foobaz21248 (~foobaz212@152.37.103.80)
[23:17:36] *** Joins: foobaz212 (~foobaz212@152.37.103.80)
[23:18:52] *** Joins: Zogatribe (Zogatribe@user/zogatribe)
[23:18:59] *** Quits: vicfred (~vicfred@user/vicfred) (Quit: Leaving)
[23:19:18] *** Joins: immibis_ (~hexchat@62.156.144.218)
[23:19:27] *** Quits: Zogatribe (Zogatribe@user/zogatribe) (Read error: Connection reset by peer)
[23:19:55] *** Quits: chiselfuse (~chiselfus@user/chiselfuse) (Ping timeout: 240 seconds)
[23:21:26] *** Joins: chiselfuse (~chiselfus@user/chiselfuse)
[23:21:51] *** Quits: immibis (~hexchat@2a02:3032:a:5f88:44a5:c3af:6367:30ff) (Ping timeout: 252 seconds)
[23:21:57] *** Joins: Zogatribe (Zogatribe@user/zogatribe)
[23:22:15] *** Quits: foobaz212 (~foobaz212@152.37.103.80) (Ping timeout: 256 seconds)
[23:22:15] *** Quits: foobaz21248 (~foobaz212@152.37.103.80) (Ping timeout: 256 seconds)
[23:25:21] *** Quits: Zogatribe (Zogatribe@user/zogatribe) (Read error: Connection reset by peer)
[23:25:49] *** Joins: Zogatribe (Zogatribe@user/zogatribe)
[23:29:08] *** Quits: caramel_ (~caramel@user/caramel) (Ping timeout: 268 seconds)
[23:29:46] *** Joins: caramel (~caramel@user/caramel)
[23:30:17] *** Joins: rpnx-phone (rpnx-phone@gateway/vpn/protonvpn/rpnx)
[23:33:48] *** Quits: gjvc (~gjvc@user/gjvc) (Quit: leaving)
[23:34:07] *** Joins: gjvc (~gjvc@user/gjvc)
[23:37:09] *** Joins: c4017w__ (~c4017@209.52.68.8)
[23:38:32] <welder> Alipha: noted
[23:39:05] *** Joins: lispy (~lispy@user/lispy)
[23:40:41] *** Quits: c4017w_ (~c4017@209.52.68.8) (Ping timeout: 256 seconds)
[23:42:55] *** Quits: tmm88 (~tmm88@user/tmm88) (Quit: Lost terminal)
[23:46:24] *** Joins: BucetaPeluda (~istupy@2620:0:1003:206:8b01:2270:8a9f:b179)
[23:49:11] *** Quits: Angs_ (~Angs@45.83.220.209) (Ping timeout: 256 seconds)
[23:50:48] *** Quits: akuma (~i.am@user/marlboro) (Quit: a pentium 100 "running" windows 11 trying to play Last of Us II at ps4emu... that's my brain trying understand 0->R->R->R/2R->0)
[23:51:08] *** Quits: rgrinberg (~textual@2806:101e:7:cba4:b560:bad3:e7c6:5293) (Quit: My MacBook has gone to sleep. ZZZzzz…)
[23:51:55] *** Quits: Zogatribe (Zogatribe@user/zogatribe) (Read error: Connection reset by peer)
[23:52:43] <neet> How could I improve the type-safety in this minimal example: https://wandbox.org/permlink/bCt52Px5muCWhxcO Without using a void pointer in Asset<T>::data(), and ideally returning a reference as the data will never be null.
[23:52:53] *** Joins: Zogatribe (Zogatribe@user/zogatribe)
[23:53:40] <neet> whoops, wandbox ate my paste
[23:55:02] *** Quits: Tobbi (~Tobbi@2a02:8108:1240:48ec:1e5:681d:af1f:ca64) (Ping timeout: 268 seconds)
[23:55:36] *** Joins: proller (~p@80.240.216.69)
[23:56:07] *** Joins: PJBoy (~PJBoy@user/pjboy)
[23:56:40] *** Quits: cosimone (~user@2001:b07:ae5:db26:c24a:d20:4d91:1e20) (Remote host closed the connection)
[23:56:54] *** Joins: cosimone (~user@2001:b07:ae5:db26:c24a:d20:4d91:1e20)
[23:58:00] *** Joins: Betal (~Betal@user/betal)
[23:58:33] *** Joins: Tobbi (~Tobbi@2a02:8108:1240:48ec:1e5:681d:af1f:ca64)
[23:58:56] *** Quits: Viewday115 (~Viewday@user/viewday) (Read error: Connection reset by peer)
