[00:02:05] *** Joins: fikran (~fikran@user/fikran)
[00:03:13] *** Quits: viridian (~viridian@user/c41e3a) (Changing host)
[00:03:13] *** Joins: viridian (~viridian@user/viridian)
[00:05:16] *** Joins: yagamilito (~yagamilit@2601:642:4600:34b0:f5d2:86ea:63ad:b952)
[00:05:37] *** Quits: yagamilito (~yagamilit@2601:642:4600:34b0:f5d2:86ea:63ad:b952) (Client Quit)
[00:05:49] *** Joins: yagamilito (~yagamilit@2601:642:4600:34b0:f5d2:86ea:63ad:b952)
[00:07:08] *** Quits: hseg (~hseg@195.192.229.41) (Remote host closed the connection)
[00:09:59] *** Joins: hseg (~hseg@195.192.229.41)
[00:10:08] *** Quits: masoudd (~masoudd@user/masoudd) (Ping timeout: 256 seconds)
[00:13:01] *** Quits: rgrinberg (~textual@2806:101e:7:6bed:613c:f1e3:33fb:ee34) (Quit: My MacBook has gone to sleep. ZZZzzz…)
[00:21:08] *** Joins: zeenk (~zeenk@2a02:2f04:a30d:1300:51a3:bcfc:6cda:9fc5)
[00:25:17] *** Quits: pycurious (~Adium@user/pycurious) (Quit: Leaving.)
[00:26:09] *** Quits: TheCatBehemoth (~TheCatBeh@2001:8a0:f55d:b200:c9b4:f537:f18d:71d4) (Quit: bbl)
[00:26:43] *** Quits: hseg (~hseg@195.192.229.41) (Remote host closed the connection)
[00:27:00] <ecraven> rewt: thanks!
[00:28:11] *** Joins: OnkelTem (~OnkelTem@user/onkeltem)
[00:29:36] *** Joins: m0viefreak (~asdf@user/m0viefreak)
[00:31:39] *** Quits: crashrep (~crashrep@user/crashrep) (Ping timeout: 276 seconds)
[00:33:38] *** Quits: stewie925 (~stewie925@2600:1702:44f0:35c0:883:87ae:5ce4:ab78) (Quit: Client closed)
[00:34:10] *** Quits: ___nick___ (~quassel@cpc68286-cdif17-2-0-cust533.5-1.cable.virginm.net) (Ping timeout: 250 seconds)
[00:37:41] *** Joins: pycurious (~Adium@user/pycurious)
[00:38:21] *** Joins: Shashin (~Shashin@cpc112711-nmal22-2-0-cust53.19-2.cable.virginm.net)
[00:38:45] *** Joins: rgrinberg (~textual@2806:101e:7:6bed:613c:f1e3:33fb:ee34)
[00:39:39] *** Quits: viridian (~viridian@user/viridian) (Quit: viridian)
[00:41:04] *** Quits: toma (~RubbishPu@node-1w7jr9yhpl487lg3g4utvpjhp.ipv6.telus.net) (Quit: Leaving)
[00:42:03] *** Quits: GNUmoon (~GNUmoon@gateway/tor-sasl/gnumoon) (Ping timeout: 276 seconds)
[00:42:28] *** Joins: dsrt^ (~dsrt@128-092-160-106.biz.spectrum.com)
[00:46:52] *** Joins: Tangent-Man (~Tang3nt-M@cpc145602-basl14-2-0-cust33.20-1.cable.virginm.net)
[00:47:43] *** Quits: humanBird (~humanBird@2603-8001-7000-3642-8c2b-39c2-5b67-a4ff.res6.spectrum.com) (Quit: Client closed)
[00:50:02] *** Quits: SuperLag (~akulbe@user/superlag) (Ping timeout: 240 seconds)
[00:52:06] *** Joins: SuperLag (~akulbe@user/superlag)
[00:52:41] <OnlineCop> My repo contains three submodules. One submodule's HEAD points to main, and the other two submodules' HEADs point to dev. When I'm in my main repo and change branches, it's often changing the HEAD of those submodules. Is there a setting to disable that (so I have to change the HEAD in those submodules manually)?
[00:53:06] *** Quits: pycurious (~Adium@user/pycurious) (Quit: Leaving.)
[00:53:33] *** Joins: pycurious (~Adium@user/pycurious)
[00:58:11] *** Quits: pycurious (~Adium@user/pycurious) (Ping timeout: 250 seconds)
[00:58:49] *** Joins: zacts (~zacts@user/zacts)
[00:59:03] <zacts> hi what's the best book for learning git for a complete beginner to git?
[00:59:24] <ikke> !book
[00:59:24] <gitinfo> There are several good books available about git; 'Pro Git' is probably the best: https://git-scm.com/book but also look at !bottomup !cs !gcs !designers !gitt !vcbe and !parable
[00:59:36] <zacts> thanks
[01:01:12] *** Joins: stewie925 (~stewie925@2600:1702:44f0:35c0:883:87ae:5ce4:ab78)
[01:01:27] *** Quits: cliluw (~cliluw@47.147.73.223) (Ping timeout: 250 seconds)
[01:03:34] *** Quits: otisolsen70 (~otisolsen@xd4ed80b5.cust.hiper.dk) (Quit: Leaving)
[01:04:23] *** Joins: cliluw (~cliluw@47.147.73.223)
[01:07:18] *** Joins: causasui (~causasui@c-68-60-125-136.hsd1.mi.comcast.net)
[01:07:43] <stewie925> hey guys, whats a clean way to move files within my git repo (local) to a new folder, then PUSH it to github?
[01:08:32] <ikke> git mv src dst; git commit; git push?
[01:08:38] <stewie925> I wonder if git push process would be able to figure it out that I did a git mv locally and implement the same change ?
[01:08:50] <ikke> stewie925: git push does not care
[01:08:51] <stewie925> ikke: oh nice, just as I thought
[01:09:03] <ikke> stewie925: git is not a file sync program
[01:09:12] <ikke> you commit the changes, git push just pushes that commit
[01:09:45] <ikke> you can even just use mv, git rm --cached and git add
[01:09:52] <stewie925> ikke: "git is not a file sync program - you commit the changes, git push just pushes that commit".  Well said.
[01:10:08] <stewie925> ugh Ive been out of a job for too long and forgot my git commands
[01:11:14] *** Joins: pycurious (~Adium@user/pycurious)
[01:13:57] *** Quits: cliluw (~cliluw@47.147.73.223) (Ping timeout: 240 seconds)
[01:14:27] *** Joins: cliluw (~cliluw@47.147.73.223)
[01:17:54] <stewie925> yay, EZ PZ! Done-zo!
[01:18:45] *** Joins: yashraj466 (~yashraj46@2401:4900:5137:848c:765a:7006:c1a1:8ed6)
[01:19:01] *** Quits: OnkelTem (~OnkelTem@user/onkeltem) (Ping timeout: 256 seconds)
[01:23:31] *** Quits: kilobyte1 (~kbch@77.109.171.85) (Quit: WeeChat 2.3)
[01:24:04] *** Joins: hrehf (~hrehf@200116b82c76b300ed7758b1d0bd69b2.dip.versatel-1u1.de)
[01:24:14] *** Joins: kilobyte_ch (~kbch@77.109.171.85)
[01:24:24] *** Quits: hrehf (~hrehf@200116b82c76b300ed7758b1d0bd69b2.dip.versatel-1u1.de) (Client Quit)
[01:24:52] *** Joins: hrehf (~hrehf@200116b82c76b300ed7758b1d0bd69b2.dip.versatel-1u1.de)
[01:25:12] *** Quits: hbautista (~hbautista@187.171.73.186) (Remote host closed the connection)
[01:26:41] *** Joins: hbautista (~hbautista@187.171.73.186)
[01:27:03] *** Joins: dmc (~dmc@archlinux/trusteduser/polyzen)
[01:27:37] <hrehf> Hmm, I have a bunch of technically unrelated repos, where someone decided to cold start every project year. I'd like to restore a continuous history in a single repo. Can I just force  pull unrelated histories to achieve that and rebase? or do I need some script that copies each revision over?
[01:27:59] <hrehf> (Files didn't change much between project years)
[01:28:17] <ikke> hrehf: look at man git replace --graft
[01:28:17] <gitinfo> hrehf: the git-replace manpage is available at https://gitirc.eu/git-replace.html
[01:32:54] <hrehf> ikke: do I understand right, I just replace --graft each root commit onto the last commit of previous year?
[01:33:13] <ikke> hendry: yes, that would be the idea
[01:33:37] <hrehf> Cool, gonna try that, thanks!
[01:33:44] *** Quits: zacts (~zacts@user/zacts) (Quit: Client closed)
[01:33:45] *** Quits: pyeveryt_ (~pyeveryth@64-18-153-56.starry-inc.net) (Ping timeout: 256 seconds)
[01:33:46] <ikke> after that, you use something like git filter-repo (third-party tool) to make it permanent
[01:33:50] *** Joins: duxco (~Thunderbi@user/duxsco)
[01:35:25] *** Quits: duxsco (~Thunderbi@user/duxsco) (Ping timeout: 240 seconds)
[01:35:25] *** duxco is now known as duxsco
[01:36:43] *** Joins: GNUmoon (~GNUmoon@gateway/tor-sasl/gnumoon)
[01:36:47] <hrehf> ikke: hmm, why is it not permanent? Shouldn't it be part of a named branch already? Maybe I'm not getting what replacing refs means yet
[01:37:25] <ikke> hrehf: it relies on the replace refs being pushed and fetched, which is not being done by default
[01:37:52] *** Quits: Shashin (~Shashin@cpc112711-nmal22-2-0-cust53.19-2.cable.virginm.net) (Quit: My MacBook has gone to sleep. ZZZzzz…)
[01:37:59] *** Joins: dirigible (~dirigible@2607:9000:0:3:36a4:cf80:2f7b:6990)
[01:38:04] *** Quits: dmc (~dmc@archlinux/trusteduser/polyzen) (Quit: WeeChat 3.4)
[01:39:31] *** Joins: Shashin (~Shashin@cpc112711-nmal22-2-0-cust53.19-2.cable.virginm.net)
[01:39:48] *** Quits: Shashin (~Shashin@cpc112711-nmal22-2-0-cust53.19-2.cable.virginm.net) (Client Quit)
[01:40:51] *** Joins: Shashin (~Shashin@cpc112711-nmal22-2-0-cust53.19-2.cable.virginm.net)
[01:40:53] *** Quits: dirigible_ (~dirigible@2607:9000:0:3:36a4:cf80:2f7b:6990) (Ping timeout: 256 seconds)
[01:41:24] *** Joins: dmc (~dmc@archlinux/trusteduser/polyzen)
[01:41:29] *** Quits: Shashin (~Shashin@cpc112711-nmal22-2-0-cust53.19-2.cable.virginm.net) (Client Quit)
[01:42:13] *** Quits: Deknos (~someone@user/menace) (Quit: Deknos)
[01:43:09] *** Quits: bkircher (~bkircher@2001:a61:24c9:9301:c70b:7b10:9434:b399) (Ping timeout: 256 seconds)
[01:45:46] *** Joins: The_Blode (~Blode@user/the-blode/x-7164444)
[01:46:33] *** Quits: The_Blod- (~Blode@user/the-blode/x-7164444) (Ping timeout: 256 seconds)
[01:49:33] *** Quits: stewie925 (~stewie925@2600:1702:44f0:35c0:883:87ae:5ce4:ab78) (Quit: Client closed)
[01:49:33] *** Quits: hrehf (~hrehf@200116b82c76b300ed7758b1d0bd69b2.dip.versatel-1u1.de) (Read error: Connection reset by peer)
[01:49:40] *** Joins: wonty (~Matthew@bras-base-otwaon1243w-grc-02-209-226-231-73.dsl.bell.ca)
[01:50:09] *** Joins: hrehf (~hrehf@200116b82c76b300ed7758b1d0bd69b2.dip.versatel-1u1.de)
[01:52:13] *** Quits: worky (~Matthew@bras-base-otwaon1243w-grc-02-209-226-231-73.dsl.bell.ca) (Ping timeout: 256 seconds)
[01:56:05] *** Quits: duxsco (~Thunderbi@user/duxsco) (Quit: duxsco)
[01:56:30] *** Quits: cliluw (~cliluw@47.147.73.223) (Read error: Connection reset by peer)
[01:58:33] *** Quits: junebug (~junebug@2600:1700:3db0:2540:bb54:f69c:5ce0:5722) (Quit: Leaving)
[02:00:27] *** Joins: zacts (~zacts@user/zacts)
[02:02:30] *** Quits: yagamilito (~yagamilit@2601:642:4600:34b0:f5d2:86ea:63ad:b952) (Quit: Client closed)
[02:04:17] *** Joins: stewie925 (~stewie925@2600:1702:44f0:35c0:883:87ae:5ce4:ab78)
[02:07:35] *** Quits: ikwyl6 (~ikwyl6@195.206.105.27) (Quit: WeeChat 3.4)
[02:07:55] *** Joins: ikwyl6 (~ikwyl6@195.206.105.27)
[02:08:43] <hrehf> ikke: thanks again, that seems to work! I just run it through git-filter-repo --force, hope that's doing its job. Repo looked okay before as well, where would I expect breaking without filter-repo?
[02:08:49] *** Joins: cliluw (~cliluw@47.147.73.223)
[02:09:27] *** Quits: fikran (~fikran@user/fikran) (Ping timeout: 256 seconds)
[02:10:01] *** Quits: causasui (~causasui@c-68-60-125-136.hsd1.mi.comcast.net) (Ping timeout: 256 seconds)
[02:11:00] *** Quits: odoood (~odoood@2601:c8:c000:c4e0:f799:b570:9765:917c) (Quit: Leaving)
[02:11:26] *** Joins: fikran (~fikran@user/fikran)
[02:13:37] *** Quits: pycurious (~Adium@user/pycurious) (Ping timeout: 240 seconds)
[02:15:55] *** Joins: pycurious (~Adium@user/pycurious)
[02:17:09] *** Quits: feriman (~feriman@188.163.113.151) (Ping timeout: 256 seconds)
[02:17:34] *** Quits: rgrinberg (~textual@2806:101e:7:6bed:613c:f1e3:33fb:ee34) (Quit: My MacBook has gone to sleep. ZZZzzz…)
[02:20:19] *** Quits: pycurious (~Adium@user/pycurious) (Ping timeout: 250 seconds)
[02:21:35] *** Joins: pycurious (~Adium@user/pycurious)
[02:22:46] *** Joins: causasui (~causasui@c-68-60-125-136.hsd1.mi.comcast.net)
[02:24:24] *** Quits: great_taste (~great_tas@user/great-taste/x-5798414) (Quit: Client closed)
[02:24:39] *** Joins: causa_sui (~causasui@c-68-60-125-136.hsd1.mi.comcast.net)
[02:25:27] *** Joins: foul_owl (~kerry@71.212.148.11)
[02:25:58] *** Quits: pycurious (~Adium@user/pycurious) (Ping timeout: 260 seconds)
[02:27:15] *** Joins: pycurious (~Adium@user/pycurious)
[02:27:38] *** Parts: ash_worksi (~ash_m@user/ash-m/x-3292451) ()
[02:29:32] *** Quits: causa_sui (~causasui@c-68-60-125-136.hsd1.mi.comcast.net) (Ping timeout: 256 seconds)
[02:31:33] *** Quits: pycurious (~Adium@user/pycurious) (Ping timeout: 256 seconds)
[02:32:48] *** Joins: rev1nchn (~rev1nchn@user/rev1nchn)
[02:33:25] *** Joins: pycurious (~Adium@user/pycurious)
[02:33:41] *** Quits: pizdets (~pizdets@183.182.114.142) (Ping timeout: 245 seconds)
[02:34:02] *** Joins: pizdets_ (~pizdets@183.182.115.213)
[02:35:12] *** Quits: mat001 (~mat001@72.28.108.216) (Ping timeout: 256 seconds)
[02:36:21] *** Quits: foul_owl (~kerry@71.212.148.11) (Ping timeout: 250 seconds)
[02:36:35] *** Quits: zeenk (~zeenk@2a02:2f04:a30d:1300:51a3:bcfc:6cda:9fc5) (Quit: Konversation terminated!)
[02:37:13] *** Quits: rev1nchn (~rev1nchn@user/rev1nchn) (Ping timeout: 250 seconds)
[02:38:52] *** Quits: kenanmarasli (~kenanmara@user/kenanmarasli) (Quit: Leaving)
[02:43:32] *** Joins: yagamilito (~yagamilit@2601:642:4600:34b0:f5d2:86ea:63ad:b952)
[02:43:37] *** Quits: lechner (~lechner@debian/lechner) (Ping timeout: 240 seconds)
[02:48:28] *** Joins: cornfeedhobo (~cornfeedh@user/cornfeedhobo)
[02:51:07] *** Joins: foul_owl (~kerry@94.140.8.52)
[02:53:00] <cornfeedhobo> question about submodules. i'm finding that sync --recursive does not pull submodule's submodules (in this case the nested submodule points to a relative path and I have no control over this)
[02:53:23] <cornfeedhobo> however, if i use update --init --recursive, it does pull the nested submodules
[02:53:29] *** Quits: yashraj466 (~yashraj46@2401:4900:5137:848c:765a:7006:c1a1:8ed6) (Quit: Client closed)
[02:54:00] *** Joins: Xenguy (~Xenguy@user/xenguy)
[02:54:00] <cornfeedhobo> what is the correct way to populate the submodules without making the tree change references
[02:55:04] *** Joins: paddymahoney (~paddymaho@cpe9050ca207f83-cm9050ca207f80.cpe.net.cable.rogers.com)
[02:56:17] <CarloWood> What do mean 'change references'?
[02:56:49] *** Joins: mat001 (~mat001@c-69-181-155-247.hsd1.ca.comcast.net)
[02:57:56] *** Joins: odoood (~odoood@2601:c8:c000:c4e0::3)
[02:58:20] <cornfeedhobo> well, these submodules are cloned at a specific commit, right? and that is maintained somewhere, right?
[02:58:43] <CarloWood> Yes, as commit in the module they are contained in.
[02:59:13] <CarloWood> Can you reproduce the sync case now?
[02:59:21] <cornfeedhobo> and so i would think that `update` would update that reference, no?
[02:59:48] <CarloWood> That seems unlikely :/
[03:00:11] <cornfeedhobo> hmm, this brings up the question then. how do you update that reference to a newer commit?
[03:00:31] <CarloWood> git add  subdirectory
[03:00:34] *** Joins: causa_sui (~causasui@c-68-60-125-136.hsd1.mi.comcast.net)
[03:00:37] <CarloWood> and then commit that
[03:01:05] <CarloWood> If you type: git submodule status
[03:01:09] <CarloWood> it prints all the refs
[03:01:31] <CarloWood> so you can easily check if they change when you do an --init --recursive or whatever.
[03:01:52] <CarloWood> And I suspect that if your sync isn't working, you'll have some prefixed with a '-'
[03:02:10] <cornfeedhobo> that is correct. what does the prefix mean?
[03:02:31] <CarloWood> I knew that, in a distant past :/
[03:02:47] <CarloWood> I have an SO answer about it even, somewhere
[03:02:56] *** Joins: jumpcutking (uid459573@id-459573.uxbridge.irccloud.com)
[03:03:22] <CarloWood> From the top of my head it means that the submodule was never checked out (directory is empty) and you need to --init it
[03:03:44] *** Quits: Kilroy (~thelounge@user/Kilroy) (Quit: Bye)
[03:04:26] <cornfeedhobo> and so am i reading betweens the lines correctly that git expects one to cd to the submodule path and run `git pull` before running `git submodule add`? is that how one would update the ref intentionally?
[03:04:55] <CarloWood> I use a system myself that DOES refresh submodules to the HEAD of their branch, but that required hard work from my end :P
[03:04:57] *** Quits: causa_sui (~causasui@c-68-60-125-136.hsd1.mi.comcast.net) (Ping timeout: 240 seconds)
[03:05:25] <CarloWood> Normally that should never happen - it doesn't even HAVE a branch - just a hash. How could it update that to a newer one?
[03:06:52] <cornfeedhobo> i don't follow
[03:07:02] <cornfeedhobo> the directory is a full blown repo
[03:07:03] <CarloWood> git submodule add  is to add a directory to your source tree in which a submodule is checked out. That is hardly something you do often.
[03:07:12] <cornfeedhobo> okay
[03:07:24] <cornfeedhobo> so back to the question of how to intentionally update a submodule ref
[03:07:33] <CarloWood> Where 'update' means?
[03:08:54] <CarloWood> submodules aren't as user friendly as you think, I think... I seriously wrote a whole system around them to make them user friendly (to the deveper - not the occasional person that checks out a repo and then compiles it)
[03:08:54] <cornfeedhobo> Dependency bar releases a new tag and repository foo wants to update it's submodule to use this newer release of bar
[03:09:07] <CarloWood> developer*
[03:09:35] <cornfeedhobo> If you want to check for new work in a submodule, you can go into the directory and run git fetch and git merge the upstream branch to update the local code.
[03:09:39] <cornfeedhobo> nvm found my answer
[03:09:40] <CarloWood> Maybe you want to try my system :)
[03:10:01] <cornfeedhobo> interesting `git submodule update --remote`
[03:10:35] <CarloWood> https://github.com/CarloWood/cwm4
[03:11:06] <CarloWood> Still mentions autoconf, but I use cmake now - so it's mainly for that now (as in being maintained)
[03:11:14] *** Joins: causa_sui (~causasui@c-68-60-125-136.hsd1.mi.comcast.net)
[03:13:32] <CarloWood> What I do is run my script (./autogen.sh) which ... automagically fixes EVERYTHING.
[03:13:34] <CarloWood> :)
[03:13:57] <CarloWood> I forgot most of the rest - it Just Works(tm).
[03:13:59] <cornfeedhobo> lol. na this gave me the answers i needed. the subcommands are just poorly named, at least in my opinion
[03:14:32] <CarloWood> But among others, it adds a branch name to submodules and keeps them up to date (when I run that script)
[03:15:17] *** Quits: causa_sui (~causasui@c-68-60-125-136.hsd1.mi.comcast.net) (Ping timeout: 240 seconds)
[03:15:22] <CarloWood> https://gyazo.com/84d606b3c731e59593c3ab23f5a0e799
[03:16:22] *** Quits: madewokherd (~urk@65-128-183-86.mpls.qwest.net) (Read error: Connection reset by peer)
[03:18:33] <CarloWood> It even managed to completely not fuck up the work that I'm in the middle of doing ;)
[03:19:12] *** Joins: great_taste (~great_tas@user/great-taste/x-5798414)
[03:20:30] *** Quits: m0viefreak (~asdf@user/m0viefreak) (Remote host closed the connection)
[03:21:25] *** Quits: jstein (~jstein@gentoo/developer/jstein) (Ping timeout: 256 seconds)
[03:22:40] *** Joins: lechner (~lechner@debian/lechner)
[03:30:08] *** Joins: causa_sui (~causasui@c-68-60-125-136.hsd1.mi.comcast.net)
[03:31:11] *** Joins: worky (~Matthew@bras-base-otwaon1243w-grc-02-209-226-231-73.dsl.bell.ca)
[03:33:34] *** Quits: wonty (~Matthew@bras-base-otwaon1243w-grc-02-209-226-231-73.dsl.bell.ca) (Ping timeout: 256 seconds)
[03:34:13] *** Joins: auk (auk@gateway/vpn/protonvpn/auk)
[03:34:42] *** Quits: causa_sui (~causasui@c-68-60-125-136.hsd1.mi.comcast.net) (Ping timeout: 256 seconds)
[03:36:09] *** Quits: pycurious (~Adium@user/pycurious) (Ping timeout: 250 seconds)
[03:42:31] *** Joins: causa_sui (~causasui@c-68-60-125-136.hsd1.mi.comcast.net)
[03:44:04] *** Quits: oztunan (~oztunan@oztunan.org) (Quit: In the morning!)
[03:45:04] *** Joins: oztunan (~oztunan@oztunan.org)
[03:46:05] *** Joins: k8yun (~k8yun@user/k8yun)
[03:46:33] *** Quits: palasso (~palasso@user/palasso) (Remote host closed the connection)
[03:46:50] *** Quits: xkuru (~xkuru@user/xkuru) (Read error: Connection reset by peer)
[03:47:10] *** Quits: causa_sui (~causasui@c-68-60-125-136.hsd1.mi.comcast.net) (Ping timeout: 256 seconds)
[03:48:10] *** Joins: pycurious (~Adium@user/pycurious)
[03:50:04] <k8yun> This might sound dumb but do you need remote git repo (as `--bare`)?  I use two workstations at work and I would like to sync the two.  Can I just sync to workstation B from workstation A without having the remote git repo?
[03:50:47] <k8yun> having remote git repo just creates additional disk space to store the same file that worksation A and workstation B would eventually have.
[03:56:13] *** Joins: hqdruxn08_ (~hqdruxn08@user/hqdruxn08)
[03:58:01] <dminuoso> k8yun: No you dont.
[03:58:33] <dminuoso> k8yun: So in principle a "bare" repo is not really different from a regular one.
[03:59:05] <dminuoso> The difference is merely that a bare repo has no working tree
[03:59:21] <dminuoso> But the rest of the git operations, be it whether you push or interact with it, is the same
[03:59:35] <dminuoso> So you can treat the git repository at workstation B as a "remote" from workstation A just fine
[04:00:00] *** Quits: hqdruxn08__ (~hqdruxn08@user/hqdruxn08) (Ping timeout: 250 seconds)
[04:00:02] <dminuoso> (the ability to push does not depend on whether or not a working tree exists
[04:08:38] <k8yun> so on A, I do `git init` and just push to B?  Do I need to do git init on the B as well?
[04:08:46] <k8yun> before I push from A
[04:08:47] *** Joins: rgrinberg (~textual@2806:101e:7:6bed:613c:f1e3:33fb:ee34)
[04:10:39] *** Quits: vicfred (~vicfred@user/vicfred) (Quit: Leaving)
[04:10:49] *** Quits: rgrinberg (~textual@2806:101e:7:6bed:613c:f1e3:33fb:ee34) (Client Quit)
[04:14:37] *** Joins: causa_sui (~causasui@c-68-60-125-136.hsd1.mi.comcast.net)
[04:15:57] *** Quits: odoood (~odoood@2601:c8:c000:c4e0::3) (Ping timeout: 240 seconds)
[04:18:36] <dminuoso> Yeah, you need a repo first
[04:18:37] *** Quits: fikran (~fikran@user/fikran) (Ping timeout: 240 seconds)
[04:19:28] *** Quits: causa_sui (~causasui@c-68-60-125-136.hsd1.mi.comcast.net) (Ping timeout: 256 seconds)
[04:20:00] <k8yun> ok, let me try it out this evening.  Thank you!
[04:20:04] *** Joins: crashrep (~crashrep@user/crashrep)
[04:20:48] *** Joins: fikran (~fikran@user/fikran)
[04:21:07] *** Joins: chenqisu1 (~chenqisu1@183.217.200.249)
[04:30:21] *** Quits: DrowningElysium (uid190788@user/drowningelysium) (Quit: Connection closed for inactivity)
[04:33:39] *** Joins: vicfred (~vicfred@user/vicfred)
[04:36:43] *** Joins: causa_sui (~causasui@c-68-60-125-136.hsd1.mi.comcast.net)
[04:39:24] *** Quits: BUSY (~BUSY@user/busy) (Remote host closed the connection)
[04:39:37] *** Quits: dsrt^ (~dsrt@128-092-160-106.biz.spectrum.com) (Remote host closed the connection)
[04:41:10] *** Quits: causa_sui (~causasui@c-68-60-125-136.hsd1.mi.comcast.net) (Ping timeout: 250 seconds)
[04:43:25] *** Joins: llh (~llh@user/llh)
[04:43:31] *** Joins: geowiesnot (~user@5-51-190-244.abo.bbox.fr)
[04:44:57] *** Joins: madewokherd (~urk@65-128-183-86.mpls.qwest.net)
[04:45:49] *** Quits: moviuro (~moviuro@znc.popho.be) (Quit: Reboot? Or did my jail(8) just die?)
[04:46:07] *** Joins: moviuro (~moviuro@znc.popho.be)
[04:46:35] *** Joins: BUSY (~BUSY@user/busy)
[04:46:37] *** Quits: ronny (~ronny@2001:470:69fc:105::b57) (Ping timeout: 240 seconds)
[04:46:37] *** Quits: esc (~esc@kudu.in-berlin.de) (Ping timeout: 240 seconds)
[04:46:40] *** Joins: wonty (~Matthew@bras-base-otwaon1243w-grc-02-209-226-231-73.dsl.bell.ca)
[04:46:49] *** Joins: esc (esc@kudu.in-berlin.de)
[04:47:06] *** Quits: gxt (~gxt@gateway/tor-sasl/gxt) (Ping timeout: 276 seconds)
[04:47:23] *** Joins: cdown_ (~cdown@188.214.11.14)
[04:48:08] *** Joins: gxt (~gxt@gateway/tor-sasl/gxt)
[04:48:44] *** Joins: ronny (~ronny@2001:470:69fc:105::b57)
[04:49:35] *** Quits: worky (~Matthew@bras-base-otwaon1243w-grc-02-209-226-231-73.dsl.bell.ca) (Ping timeout: 256 seconds)
[04:50:05] *** Joins: causa_sui (~causasui@c-68-60-125-136.hsd1.mi.comcast.net)
[04:51:46] *** Quits: pycurious (~Adium@user/pycurious) (Ping timeout: 256 seconds)
[04:54:07] *** Joins: pycurious (~Adium@user/pycurious)
[04:54:32] *** Quits: skapata (~Skapata@user/skapata) (Remote host closed the connection)
[04:54:53] *** Joins: Sulky_ (~Sulky@2a04:cec0:116a:4878:dbc7:d702:c728:b053)
[04:54:55] *** Quits: causa_sui (~causasui@c-68-60-125-136.hsd1.mi.comcast.net) (Ping timeout: 256 seconds)
[04:57:38] *** Quits: Sulky (~Sulky@2a04:cec0:117a:e0e7:de3:a35c:a5c7:d084) (Ping timeout: 260 seconds)
[05:05:52] *** Joins: causa_sui (~causasui@c-68-60-125-136.hsd1.mi.comcast.net)
[05:06:50] *** vinleod is now known as vdamewood
[05:09:05] *** Quits: cdown_ (~cdown@188.214.11.14) (Remote host closed the connection)
[05:09:05] *** Joins: donofrio (~donofrio@c-68-40-123-74.hsd1.mi.comcast.net)
[05:09:19] *** Joins: cdown_ (~cdown@188.214.11.14)
[05:09:57] *** Quits: causa_sui (~causasui@c-68-60-125-136.hsd1.mi.comcast.net) (Ping timeout: 240 seconds)
[05:14:41] *** Quits: cdown_ (~cdown@188.214.11.14) (Remote host closed the connection)
[05:14:48] *** Joins: iateadonut (~dan@121.177.17.154)
[05:14:57] *** Joins: cdown_ (~cdown@188.214.11.14)
[05:15:27] <iateadonut> one developer merged main into his branch and then pushed.  his branch reverts a lot of files, but it doesn't show up in `git log`
[05:17:33] *** Quits: cdown_ (~cdown@188.214.11.14) (Remote host closed the connection)
[05:17:47] *** Joins: cdown_ (~cdown@188.214.11.14)
[05:18:30] *** Joins: odoood (~odoood@2601:c8:c000:c4e0::3)
[05:19:05] *** Quits: jinsun (~quassel@user/jinsun) (Read error: Connection reset by peer)
[05:24:26] *** Joins: walterwhip (~www@user/walterwhip)
[05:24:40] *** Quits: cdown_ (~cdown@188.214.11.14) (Remote host closed the connection)
[05:27:22] *** Joins: vysn (~vysn@user/vysn)
[05:28:07] *** Joins: cdown_ (~cdown@188.214.11.14)
[05:28:41] *** Joins: xiongxin (~Thunderbi@2409:8954:2e60:230e:6411:bf4c:835d:709d)
[05:28:49] *** Joins: toma (~RubbishPu@node-1w7jr9yhpl489jwj4pqbm7f4c.ipv6.telus.net)
[05:29:05] *** Quits: toma (~RubbishPu@node-1w7jr9yhpl489jwj4pqbm7f4c.ipv6.telus.net) (Remote host closed the connection)
[05:29:29] *** Joins: toma (~RubbishPu@node-1w7jr9yhpl489jwj4pqbm7f4c.ipv6.telus.net)
[05:29:53] *** Quits: M3troidman (~buttler@196.244.191.100) (Ping timeout: 252 seconds)
[05:29:55] *** Joins: M3troidman_ (~buttler@196.244.191.100)
[05:32:21] *** Quits: donofrio (~donofrio@c-68-40-123-74.hsd1.mi.comcast.net) (Remote host closed the connection)
[05:32:47] *** Quits: yagamilito (~yagamilit@2601:642:4600:34b0:f5d2:86ea:63ad:b952) (Quit: Client closed)
[05:34:12] *** Quits: Tangent-Man (~Tang3nt-M@cpc145602-basl14-2-0-cust33.20-1.cable.virginm.net) (Remote host closed the connection)
[05:35:02] *** Quits: vicfred (~vicfred@user/vicfred) (Quit: Leaving)
[05:36:54] *** Joins: vakera_pingveno (~dan@2600:1700:21f9:b150::40)
[05:37:59] *** Quits: M3troidman_ (~buttler@196.244.191.100) (Ping timeout: 256 seconds)
[05:38:48] *** Quits: michigan (uid507982@id-507982.ilkley.irccloud.com) (Quit: Connection closed for inactivity)
[05:38:48] *** Quits: keypusher (keypusher@user/keypusher) (Ping timeout: 256 seconds)
[05:39:59] *** Joins: k8yun_ (~k8yun@user/k8yun)
[05:40:58] *** Joins: rgrinberg (~textual@2806:101e:7:6bed:613c:f1e3:33fb:ee34)
[05:41:23] *** Quits: cliluw (~cliluw@47.147.73.223) (Ping timeout: 256 seconds)
[05:41:28] *** Joins: Kilroy9 (~thelounge@user/Kilroy)
[05:41:36] *** Quits: k8yun_ (~k8yun@user/k8yun) (Remote host closed the connection)
[05:42:21] *** Joins: cliluw (~cliluw@47.147.73.223)
[05:43:39] *** Quits: k8yun (~k8yun@user/k8yun) (Ping timeout: 256 seconds)
[05:44:01] *** Quits: cdown_ (~cdown@188.214.11.14) (Remote host closed the connection)
[05:46:09] *** Quits: fjmorazan (~quassel@user/fjmorazan) (Quit: fjmorazan)
[05:46:41] *** Joins: fjmorazan (~quassel@user/fjmorazan)
[05:52:40] *** Quits: rgrinberg (~textual@2806:101e:7:6bed:613c:f1e3:33fb:ee34) (Ping timeout: 250 seconds)
[05:53:43] *** Quits: stewie925 (~stewie925@2600:1702:44f0:35c0:883:87ae:5ce4:ab78) (Quit: Client closed)
[05:54:48] *** Joins: yagamilito (~yagamilit@2601:642:4600:34b0:a4a6:dd03:c62d:4176)
[05:55:01] *** Joins: Celeo (~Celeo@user/celeo)
[05:55:49] *** Joins: keypusher (keypusher@user/keypusher)
[06:01:20] *** Joins: k8yun (~k8yun@user/k8yun)
[06:03:30] *** Joins: causa_sui (~causasui@c-68-60-125-136.hsd1.mi.comcast.net)
[06:06:24] *** Quits: yagamilito (~yagamilit@2601:642:4600:34b0:a4a6:dd03:c62d:4176) (Quit: Client closed)
[06:08:01] *** Quits: causa_sui (~causasui@c-68-60-125-136.hsd1.mi.comcast.net) (Ping timeout: 256 seconds)
[06:08:50] <k8yun> so based on guidance from dminuoso, I created two git repos called "pcA" and "pcB", both issued `git init` at the root of each folder, then tried pushing from pcA to pcB then I am getting errors.
[06:08:55] <k8yun> https://termbin.com/4106
[06:09:49] <k8yun> I'm trying to sync two folders using git without creating another bare git remo
[06:10:16] *** Joins: causa_sui (~causasui@c-68-60-125-136.hsd1.mi.comcast.net)
[06:11:14] <k_sze> Is there a way for `git diff` to automatically try to guess file renames?
[06:11:42] <k_sze> I think by default it doesn't? And so git diff would show one file deleted and another newly created.
[06:13:30] <rewt> k8yun, is your fs case-sensitive?  that remote add may need to have pcB instead of pcb
[06:14:05] *** Quits: Xenguy (~Xenguy@user/xenguy) (Quit: Leaving)
[06:14:07] <rewt> k_sze, if the files are similar enough, git guesses it's a rename; there is a setting to adjust the similarity threshold somewhere
[06:14:36] *** Joins: Xenguy (~Xenguy@user/xenguy)
[06:14:37] *** Quits: causa_sui (~causasui@c-68-60-125-136.hsd1.mi.comcast.net) (Ping timeout: 240 seconds)
[06:15:27] *** Joins: shailangsa (~shailangs@host217-39-45-199.range217-39.btcentralplus.com)
[06:16:17] *** Quits: Sulky_ (~Sulky@2a04:cec0:116a:4878:dbc7:d702:c728:b053) (Ping timeout: 256 seconds)
[06:22:47] *** Quits: odoood (~odoood@2601:c8:c000:c4e0::3) (Remote host closed the connection)
[06:23:12] *** Joins: odoood (~odoood@2601:c8:c000:c4e0::3)
[06:26:17] *** Joins: causa_sui (~causasui@c-68-60-125-136.hsd1.mi.comcast.net)
[06:27:08] *** Quits: pretty_dumm_guy (trottel@gateway/vpn/protonvpn/prettydummguy/x-88029655) (Quit: WeeChat 3.4)
[06:27:22] *** Quits: Swahili (~Swahili@a95-94-208-187.cpe.netcabo.pt) (Quit: Leaving...)
[06:27:37] *** Joins: stewie925 (~stewie925@2600:1702:44f0:35c0:883:87ae:5ce4:ab78)
[06:28:06] *** Quits: fikran (~fikran@user/fikran) (Ping timeout: 256 seconds)
[06:30:08] *** Joins: fikran (~fikran@user/fikran)
[06:31:15] *** Quits: causa_sui (~causasui@c-68-60-125-136.hsd1.mi.comcast.net) (Ping timeout: 256 seconds)
[06:35:07] *** Quits: txtsd (~txtsd@user/txtsd) (Ping timeout: 250 seconds)
[06:35:55] *** Quits: odoood (~odoood@2601:c8:c000:c4e0::3) (Remote host closed the connection)
[06:36:00] *** Quits: emf_ (~emf@2620:10d:c090:400::5:c6d7) (Ping timeout: 250 seconds)
[06:36:12] *** Joins: odoood (~odoood@2601:c8:c000:c4e0::3)
[06:41:02] *** Joins: rgrinberg (~textual@2806:101e:7:6bed:e00d:69c0:db02:528b)
[06:46:53] *** Joins: M3troidman (~buttler@196.244.191.100)
[06:52:02] *** Joins: causa_sui (~causasui@c-68-60-125-136.hsd1.mi.comcast.net)
[06:52:17] *** Quits: odoood (~odoood@2601:c8:c000:c4e0::3) (Ping timeout: 240 seconds)
[06:53:40] *** Joins: CaCode (~CaCode@user/cacode)
[06:56:33] *** Joins: DoofusCanadensis (~DoofusCan@2604:3d09:47c:f970:ad0d:4394:26b:f671)
[06:56:45] *** Quits: causa_sui (~causasui@c-68-60-125-136.hsd1.mi.comcast.net) (Ping timeout: 256 seconds)
[06:56:59] *** Joins: durham (~durham@2600:1700:38d4:60:c3c:5bfc:8cac:a0ac)
[06:57:00] <k8yun> rewt: ah... I looked my history and I did enter `pcb` instead of `pcB`. I retried with removing the wrong remote origin but failed.  Then I re-created a folder and restarted with correct case-sensitive entries but also failed.
[06:57:01] <k8yun> https://termbin.com/yj5y
[06:57:17] *** Quits: rgrinberg (~textual@2806:101e:7:6bed:e00d:69c0:db02:528b) (Ping timeout: 240 seconds)
[06:58:17] <rewt> hmm... try adding it as ../pcB/.git
[06:58:31] *** Joins: junebug (~junebug@2600:1700:3db0:2540:3b4c:a3a0:1c16:653e)
[06:59:09] *** Quits: nyah (~nyah@05453449.skybroadband.com) (Ping timeout: 250 seconds)
[06:59:25] <rewt> or just init B, and clone it to A; this should set B as A's origin remote automatically
[07:00:17] *** Quits: xiongxin (~Thunderbi@2409:8954:2e60:230e:6411:bf4c:835d:709d) (Ping timeout: 240 seconds)
[07:00:27] <rewt> o wait, it says "branch is currently checked out"... maybe you can't push to a remote where that same branch is checked out
[07:00:53] *** Quits: noex (~null@user/noex) (Ping timeout: 250 seconds)
[07:01:17] *** Quits: durham (~durham@2600:1700:38d4:60:c3c:5bfc:8cac:a0ac) (Ping timeout: 240 seconds)
[07:01:23] <rewt> yep, that seems to be the issue
[07:03:58] *** Quits: CaCode (~CaCode@user/cacode) (Quit: Leaving)
[07:04:12] *** Joins: noex (~null@user/noex)
[07:06:32] *** Quits: R2robot (~R2robot@user/r2robot) (Quit: Pull the lever, Kronk.  Wrong leverrrrrrr!)
[07:07:13] *** Joins: Emet-Selch (~haise01@user/haise01)
[07:07:17] *** Quits: foul_owl (~kerry@94.140.8.52) (Ping timeout: 256 seconds)
[07:09:57] *** Quits: Azem (~haise01@user/haise01) (Ping timeout: 240 seconds)
[07:10:07] *** Joins: causa_sui (~causasui@c-68-60-125-136.hsd1.mi.comcast.net)
[07:10:21] *** Joins: R2robot (~R2robot@user/r2robot)
[07:10:44] *** Joins: xiongxin (~Thunderbi@117.136.79.118)
[07:10:45] *** Joins: rgrinberg (~textual@2806:101e:7:6bed:ed3c:cb5a:50ec:f83d)
[07:11:48] *** Quits: terrorjack (~terrorjac@2a01:4f8:1c1e:509a::1) (Quit: The Lounge - https://thelounge.chat)
[07:12:58] *** Joins: terrorjack (~terrorjac@2a01:4f8:1c1e:509a::1)
[07:14:06] *** Kilroy9 is now known as Kilroy
[07:14:34] *** Quits: causa_sui (~causasui@c-68-60-125-136.hsd1.mi.comcast.net) (Ping timeout: 256 seconds)
[07:15:58] *** Joins: causa_sui (~causasui@c-68-60-125-136.hsd1.mi.comcast.net)
[07:17:58] *** Quits: geowiesnot (~user@5-51-190-244.abo.bbox.fr) (Ping timeout: 256 seconds)
[07:20:17] *** Quits: causa_sui (~causasui@c-68-60-125-136.hsd1.mi.comcast.net) (Ping timeout: 240 seconds)
[07:21:54] *** Joins: ferdna (~ferdna@user/ferdna)
[07:22:03] *** Joins: foul_owl (~kerry@94.140.8.25)
[07:24:51] *** Quits: ouzel8___ (~ouzel8_@shams.boastblast.com) (Remote host closed the connection)
[07:25:37] *** Quits: ChmEarl (~chmearl@user/chmearl) (Quit: Leaving)
[07:27:03] *** Quits: toma (~RubbishPu@node-1w7jr9yhpl489jwj4pqbm7f4c.ipv6.telus.net) (Quit: Leaving)
[07:28:50] *** Quits: hrehf (~hrehf@200116b82c76b300ed7758b1d0bd69b2.dip.versatel-1u1.de) (Ping timeout: 260 seconds)
[07:28:54] *** Quits: pycurious (~Adium@user/pycurious) (Quit: Leaving.)
[07:29:53] *** Joins: hrehf (~hrehf@mue-88-130-61-237.dsl.tropolys.de)
[07:31:17] *** Quits: M3troidman (~buttler@196.244.191.100) (Ping timeout: 240 seconds)
[07:31:25] *** Joins: causa_sui (~causasui@c-68-60-125-136.hsd1.mi.comcast.net)
[07:32:36] *** Quits: zacts (~zacts@user/zacts) (Quit: Client closed)
[07:35:23] *** Quits: stewie925 (~stewie925@2600:1702:44f0:35c0:883:87ae:5ce4:ab78) (Quit: Client closed)
[07:37:01] *** Quits: causa_sui (~causasui@c-68-60-125-136.hsd1.mi.comcast.net) (Ping timeout: 240 seconds)
[07:37:38] <k8yun> so I have to have another directory with `git init --bare` to act as a server?  Is that something that's not avoidable?
[07:38:33] <rewt> you could have B fetch from A
[07:39:22] *** Joins: M3troidman (~buttler@196.244.191.100)
[07:39:49] *** Joins: causa_sui (~causasui@c-68-60-125-136.hsd1.mi.comcast.net)
[07:39:56] <rewt> the problem you're running into is that you cannot change the files in the remote's working directory, which makes sense; what if there are changes there and git can't resolve conflicts?
[07:40:45] <k8yun> I was hoping git was smart enough to handle these conflicts
[07:40:49] *** Joins: Gustavo6046 (~Gustavo60@user/gustavo6046)
[07:41:05] <k8yun> so I do have to have another directory git `git init --bare` to act as a server then?
[07:41:21] <rewt> if a line is changed in both places, git cannot pick one or the other; the correct one may be a combination of the 2
[07:41:33] <rewt> you could have B fetch from A
[07:41:36] *** Joins: jinsun (~quassel@user/jinsun)
[07:41:40] <rewt> instead of A pushing to B
[07:41:59] *** Quits: Gustavo6046 (~Gustavo60@user/gustavo6046) (Max SendQ exceeded)
[07:42:38] *** Joins: Gustavo6046 (~Gustavo60@user/gustavo6046)
[07:42:39] *** Quits: xiongxin (~Thunderbi@117.136.79.118) (Ping timeout: 256 seconds)
[07:42:44] <k8yun> I can fetch but, could I also merge afterwards?  The fact that I can't push from A kind of leads to the thinking that I won't be able to eventually merge
[07:42:55] <rewt> why not?
[07:43:23] <rewt> the only reason you can't push is because of changing active files in the remote... has nothing to do with merging
[07:43:50] *** Quits: M3troidman (~buttler@196.244.191.100) (Client Quit)
[07:43:56] *** Quits: Gustavo6046 (~Gustavo60@user/gustavo6046) (Remote host closed the connection)
[07:44:28] <k8yun> let me try it out... i was looking for a simple solution... this looks like more complicated process than having a third bare repo
[07:44:34] *** Quits: crashrep (~crashrep@user/crashrep) (Quit: WeeChat 3.4)
[07:44:47] *** Joins: Gustavo6046 (~Gustavo60@user/gustavo6046)
[07:44:56] <rewt> how is it more complicated?  `git fetch` on B instead of `git push` on A
[07:45:29] *** Quits: causa_sui (~causasui@c-68-60-125-136.hsd1.mi.comcast.net) (Ping timeout: 256 seconds)
[07:45:30] *** Quits: Gustavo6046 (~Gustavo60@user/gustavo6046) (Remote host closed the connection)
[07:45:31] <rewt> with a 3rd repo, you'd have to do BOTH `git push` on A and then `git fetch` on B
[07:45:39] *** Joins: M3troidman (~buttler@196.244.191.100)
[07:47:06] <k8yun> i'm just new to git... let me try out git fetch
[07:48:43] <jim> k8yun, do you have scott chacon's book?
[07:49:03] <k8yun> no, all my learning has been online blogs and such
[07:49:13] <k8yun> I should read that book I am guessing
[07:49:18] <jim> ok, sec...
[07:50:25] <jim> k8yun, here it is on the web: https://git-scm.com/book/en/v2 or you can download a pdf here: https://progit2.s3.amazonaws.com/en/2016-03-22-f3531/progit-en.1084.pdf
[07:51:23] *** Quits: causasui (~causasui@c-68-60-125-136.hsd1.mi.comcast.net) (Ping timeout: 250 seconds)
[07:55:08] *** Quits: DoofusCanadensis (~DoofusCan@2604:3d09:47c:f970:ad0d:4394:26b:f671) (Quit: So as you can see from this flowchSQUIRREL!!)
[07:56:15] *** Joins: rev1nchn (~rev1nchn@user/rev1nchn)
[07:56:38] *** Joins: causa_sui (~causasui@c-68-60-125-136.hsd1.mi.comcast.net)
[07:58:17] *** Quits: tehenderz (~tehenderz@ti0018a400-10432.bb.online.no) (Ping timeout: 256 seconds)
[07:58:32] *** Joins: tehenderz (~tehenderz@ti0018a400-0109.bb.online.no)
[08:01:21] *** Quits: causa_sui (~causasui@c-68-60-125-136.hsd1.mi.comcast.net) (Ping timeout: 256 seconds)
[08:01:30] *** Quits: magic_ninja (~sparkie1@2600:1700:3ab0:e9f0:df3e:ef17:255f:ee78) (Remote host closed the connection)
[08:03:00] <jim> k8yun, a video showing git concepts: https://www.youtube.com/watch?v=uR6G2v_WsRA&t=4s
[08:04:54] *** Joins: magic_ninja (~sparkie1@2600:1700:3ab0:e9f0:63be:4b7:5b8:1ce3)
[08:04:57] *** Quits: junebug (~junebug@2600:1700:3db0:2540:3b4c:a3a0:1c16:653e) (Quit: Leaving)
[08:05:00] *** Quits: rev1nchn (~rev1nchn@user/rev1nchn) (Ping timeout: 256 seconds)
[08:07:55] *** Joins: Gustavo6046 (~Gustavo60@user/gustavo6046)
[08:07:58] *** Quits: Gustavo6046 (~Gustavo60@user/gustavo6046) (Remote host closed the connection)
[08:18:12] *** Quits: Strom (strom@fedora/strom) ()
[08:18:23] *** Joins: Gustavo6046 (~Gustavo60@user/gustavo6046)
[08:19:44] *** Joins: causa_sui (~causasui@c-68-60-125-136.hsd1.mi.comcast.net)
[08:20:47] *** Joins: Strom (strom@fedora/strom)
[08:22:21] *** Quits: tirnanog (~tirnanog@user/tirnanog) (Quit: = "")
[08:23:54] *** Quits: CarloWood (~LdK13@212-127-230-18.cable.dynamic.v4.ziggo.nl) (Ping timeout: 260 seconds)
[08:24:02] *** Joins: cvmn (~caveman@gateway/tor-sasl/caveman)
[08:25:24] *** Quits: causa_sui (~causasui@c-68-60-125-136.hsd1.mi.comcast.net) (Ping timeout: 256 seconds)
[08:25:29] *** Quits: xx (~xx@user/xx) (Ping timeout: 256 seconds)
[08:28:12] *** Joins: madewokherd` (~urk@65-128-183-86.mpls.qwest.net)
[08:31:38] *** Quits: madewokherd (~urk@65-128-183-86.mpls.qwest.net) (Ping timeout: 256 seconds)
[08:34:42] *** Joins: worky (~Matthew@bras-base-otwaon1243w-grc-02-209-226-231-73.dsl.bell.ca)
[08:37:23] *** Quits: wonty (~Matthew@bras-base-otwaon1243w-grc-02-209-226-231-73.dsl.bell.ca) (Ping timeout: 256 seconds)
[08:37:37] *** Quits: fikran (~fikran@user/fikran) (Ping timeout: 256 seconds)
[08:39:30] *** Joins: fikran (~fikran@user/fikran)
[08:44:09] *** Quits: boxframes_ (~Saloframe@user/Saloframes) (Quit: Leaving)
[08:47:12] *** Joins: FH_thecat (~FH_thecat@75.11.25.212.ftth.as8758.net)
[08:48:31] *** Joins: rev1nchn (~rev1nchn@user/rev1nchn)
[08:50:05] *** Quits: Thanatermesis (~Thanaterm@191.92.148.122) (Ping timeout: 256 seconds)
[08:50:39] *** Quits: hoochmonger (~hoochmong@user/hoochmonger) (Ping timeout: 256 seconds)
[08:52:12] *** Quits: jumpcutking (uid459573@id-459573.uxbridge.irccloud.com) (Quit: Connection closed for inactivity)
[08:52:55] *** Quits: rev1nchn (~rev1nchn@user/rev1nchn) (Ping timeout: 256 seconds)
[08:54:03] *** Joins: viridian (~viridian@user/viridian)
[08:54:23] *** Joins: causa_sui (~causasui@c-68-60-125-136.hsd1.mi.comcast.net)
[08:54:28] *** Joins: rev1nchn (~rev1nchn@user/rev1nchn)
[08:54:44] *** Quits: zebrag (~chris@user/zebrag) (Quit: Konversation terminated!)
[08:55:10] *** Joins: Saloframes (~Saloframe@user/Saloframes)
[08:55:57] *** Quits: ferdna (~ferdna@user/ferdna) (Ping timeout: 240 seconds)
[08:56:26] *** Quits: Celeo (~Celeo@user/celeo) (Quit: Leaving)
[08:56:49] *** Joins: ferdna (~ferdna@user/ferdna)
[08:59:30] *** Joins: hornbill047 (~hornbill0@111.92.77.217)
[08:59:42] *** hornbill047 is now known as hornbill
[08:59:43] *** Quits: causa_sui (~causasui@c-68-60-125-136.hsd1.mi.comcast.net) (Ping timeout: 256 seconds)
[09:00:23] *** Joins: causa_sui (~causasui@c-68-60-125-136.hsd1.mi.comcast.net)
[09:01:39] *** Quits: hornbill (~hornbill0@111.92.77.217) (Client Quit)
[09:02:03] *** Joins: hornbill047 (~hornbill0@111.92.77.217)
[09:02:16] *** Quits: dtux (~dtux@c-98-207-149-218.hsd1.ca.comcast.net) (Quit: dtux)
[09:02:23] *** Quits: hornbill047 (~hornbill0@111.92.77.217) (Remote host closed the connection)
[09:02:33] *** Quits: cvmn (~caveman@gateway/tor-sasl/caveman) (Ping timeout: 276 seconds)
[09:03:04] *** Joins: hornbill (~hornbill0@111.92.77.217)
[09:05:23] *** Quits: causa_sui (~causasui@c-68-60-125-136.hsd1.mi.comcast.net) (Ping timeout: 256 seconds)
[09:05:23] *** Quits: hornbill (~hornbill0@111.92.77.217) (Client Quit)
[09:05:28] *** Joins: kmt_ (~hornbill0@111.92.77.217)
[09:05:42] *** Quits: kmt_ (~hornbill0@111.92.77.217) (Remote host closed the connection)
[09:06:01] *** Joins: hornbill (~hornbill0@111.92.77.217)
[09:06:04] *** Joins: kmt_ (~hornbill0@111.92.77.217)
[09:06:23] *** Quits: kmt_ (~hornbill0@111.92.77.217) (Remote host closed the connection)
[09:06:23] *** Quits: hornbill (~hornbill0@111.92.77.217) (K-Lined)
[09:06:59] *** Quits: tyson2 (~user@bras-base-toroon0624w-grc-17-50-101-91-98.dsl.bell.ca) (Remote host closed the connection)
[09:11:03] *** Quits: lechner (~lechner@debian/lechner) (Ping timeout: 256 seconds)
[09:13:20] *** Joins: lechner (~lechner@debian/lechner)
[09:21:37] *** Quits: iateadonut (~dan@121.177.17.154) (Ping timeout: 240 seconds)
[09:22:30] *** Joins: iateadonut (~dan@99.136.252.138)
[09:24:44] *** Quits: Gustavo6046 (~Gustavo60@user/gustavo6046) (Remote host closed the connection)
[09:24:57] *** Joins: causa_sui (~causasui@c-68-60-125-136.hsd1.mi.comcast.net)
[09:25:10] *** Joins: Gustavo6046 (~Gustavo60@user/gustavo6046)
[09:25:27] *** Quits: Gustavo6046 (~Gustavo60@user/gustavo6046) (Client Quit)
[09:25:40] *** Quits: rgrinberg (~textual@2806:101e:7:6bed:ed3c:cb5a:50ec:f83d) (Quit: My MacBook has gone to sleep. ZZZzzz…)
[09:25:59] *** Joins: k8yun_ (~k8yun@user/k8yun)
[09:29:17] *** Quits: causa_sui (~causasui@c-68-60-125-136.hsd1.mi.comcast.net) (Ping timeout: 240 seconds)
[09:29:45] *** Quits: k8yun (~k8yun@user/k8yun) (Ping timeout: 256 seconds)
[09:30:49] *** Joins: causa_sui (~causasui@c-68-60-125-136.hsd1.mi.comcast.net)
[09:32:31] *** Joins: xiongxin (~Thunderbi@2409:8954:2e60:8ef:9383:e8bb:73b3:7c08)
[09:34:17] *** Quits: lechner (~lechner@debian/lechner) (Ping timeout: 240 seconds)
[09:34:35] *** Quits: auk (auk@gateway/vpn/protonvpn/auk) (Quit: Leaving)
[09:35:25] *** Quits: causa_sui (~causasui@c-68-60-125-136.hsd1.mi.comcast.net) (Ping timeout: 256 seconds)
[09:45:06] *** Joins: mexen (uid495612@user/mexen)
[09:50:35] *** Joins: carl-- (~carl-@c-138ee555.02-180-73746f39.bbcust.telenor.se)
[09:56:07] *** Joins: causa_sui (~causasui@c-68-60-125-136.hsd1.mi.comcast.net)
[10:00:24] *** Quits: GNUmoon (~GNUmoon@gateway/tor-sasl/gnumoon) (Ping timeout: 276 seconds)
[10:00:37] *** Quits: causa_sui (~causasui@c-68-60-125-136.hsd1.mi.comcast.net) (Ping timeout: 240 seconds)
[10:01:57] *** Quits: iateadonut (~dan@99.136.252.138) (Ping timeout: 240 seconds)
[10:04:00] *** Quits: jelmer (~jelmer@user/jelmer) (Ping timeout: 256 seconds)
[10:07:37] *** Quits: xiongxin (~Thunderbi@2409:8954:2e60:8ef:9383:e8bb:73b3:7c08) (Ping timeout: 240 seconds)
[10:09:27] *** Joins: masoudd (~masoudd@user/masoudd)
[10:12:58] *** Joins: jelmer (~jelmer@user/jelmer)
[10:13:21] *** Quits: jelmer (~jelmer@user/jelmer) (Remote host closed the connection)
[10:15:02] *** Joins: hoochmonger (~hoochmong@user/hoochmonger)
[10:16:50] *** Joins: iateadonut (~dan@121.177.17.154)
[10:23:27] *** Joins: causa_sui (~causasui@c-68-60-125-136.hsd1.mi.comcast.net)
[10:25:19] *** Joins: nikk (~user@ip5b40a656.dynamic.kabel-deutschland.de)
[10:26:30] *** Quits: viridian (~viridian@user/viridian) (Quit: viridian)
[10:27:57] *** Quits: causa_sui (~causasui@c-68-60-125-136.hsd1.mi.comcast.net) (Ping timeout: 240 seconds)
[10:29:03] *** Parts: iateadonut (~dan@121.177.17.154) ()
[10:29:37] *** Quits: foul_owl (~kerry@94.140.8.25) (Ping timeout: 240 seconds)
[10:30:12] *** Quits: great_taste (~great_tas@user/great-taste/x-5798414) (Quit: Client closed)
[10:30:56] *** Joins: lechner (~lechner@debian/lechner)
[10:31:55] *** Quits: cbreak (~cbreak@77-58-201-132.dclient.hispeed.ch) (Read error: Connection reset by peer)
[10:33:54] *** Joins: CarloWood (~LdK13@212-127-230-18.cable.dynamic.v4.ziggo.nl)
[10:35:33] <nikk> hi
[10:35:47] *** Joins: cbreak (~cbreak@77-58-201-132.dclient.hispeed.ch)
[10:37:31] *** Joins: bkircher (~bkircher@2001:a61:24c9:9301:c70b:7b10:9434:b399)
[10:38:27] *** Joins: jelmer (~jelmer@user/jelmer)
[10:40:30] *** Joins: Sulky (~Sulky@2a04:cec0:1003:c64:a4c5:b217:a3e3:a4aa)
[10:40:34] *** Quits: walterwhip (~www@user/walterwhip) (Quit: My MacBook Air has gone to sleep. ZZZzzz…)
[10:42:23] *** Joins: causa_sui (~causasui@c-68-60-125-136.hsd1.mi.comcast.net)
[10:44:08] *** Joins: foul_owl (~kerry@71.212.148.11)
[10:46:17] *** Quits: hoochmonger (~hoochmong@user/hoochmonger) (Read error: Connection reset by peer)
[10:46:37] *** Quits: fikran (~fikran@user/fikran) (Ping timeout: 240 seconds)
[10:46:59] *** Joins: xiongxin (~Thunderbi@117.136.39.240)
[10:46:59] *** Joins: viridian (~viridian@user/viridian)
[10:47:04] *** Quits: causa_sui (~causasui@c-68-60-125-136.hsd1.mi.comcast.net) (Ping timeout: 256 seconds)
[10:47:18] <nikk> In https://www.git-scm.com/book/en/v2/Git-Tools-Advanced-Merging section "Merge Log" it's described that "git log --oneline --left-right --merge" would show me the commits that touch files with a conflict. And most of the time, this works just fin - naturally there are commits from both branches involved (HEAD and MERGE_HEAD). But sometimes the output shows _only_ commits of one branch (either only commits prefixed with '<' or '>') -
[10:47:18] <nikk> that raises the question how it's conflicting at all. How can this happen? I use the command from above with a file path:  "git log --oneline --left-right --merge -- /path/to/conflicting/file".
[10:48:19] *** Joins: causa_sui (~causasui@c-68-60-125-136.hsd1.mi.comcast.net)
[10:48:51] *** Joins: fikran (~fikran@user/fikran)
[10:49:38] *** Joins: GNUmoon (~GNUmoon@gateway/tor-sasl/gnumoon)
[10:50:27] *** Quits: RiFo (~RiFo@user/rifo) (Quit: ... and thanks for all the fish.)
[10:51:02] *** Quits: hbautista (~hbautista@187.171.73.186) (Ping timeout: 256 seconds)
[10:53:18] *** Quits: causa_sui (~causasui@c-68-60-125-136.hsd1.mi.comcast.net) (Ping timeout: 256 seconds)
[10:55:13] *** Joins: causa_sui (~causasui@c-68-60-125-136.hsd1.mi.comcast.net)
[10:55:15] *** Joins: jstein (~jstein@gentoo/developer/jstein)
[10:57:13] <osse> nikk: the first command you cited does not only list commits that touch files with a conflict. it just list all commits
[10:57:28] <osse> as for the second question: what kind of conflict is it, according to git status?
[10:57:50] <nikk> osse: "both modified"
[10:58:07] <osse> nikk: and do you give foo...bar to git log like in the book?
[10:58:59] *** Joins: walterwhip (~www@user/walterwhip)
[10:59:22] *** Quits: zer0bitz (~zer0bitz@2001:2003:f74d:b800:a89e:b347:cccb:c7e5) (Read error: Connection reset by peer)
[10:59:39] *** Joins: zer0bitz (~zer0bitz@2001:2003:f74d:b800:3c9b:6dce:e374:3130)
[11:00:06] *** Quits: causa_sui (~causasui@c-68-60-125-136.hsd1.mi.comcast.net) (Ping timeout: 256 seconds)
[11:00:17] <nikk> osse: I don't remember for sure (I don't have the situation right now at hand, would need to restart the merge), I'll check next time. So being in a merge state and providind "--merge" to log is probably not enough?
[11:00:40] *** Quits: jnnnnnnnnn (~jnnnnnnnn@c-8f70524e.016-77-73746f43.bbcust.telenor.se) (Remote host closed the connection)
[11:01:15] *** Joins: feriman (~feriman@188.163.113.151)
[11:01:18] <osse> nikk: my bad, the --merge option sort of does that
[11:01:37] <nikk> hmm
[11:01:39] <osse> I agree it sounds weird.
[11:02:28] <osse> "After a failed merge, show refs that touch files having a conflict and don’t exist on all heads to merge"
[11:02:54] <osse> Maybe a commit has been merged in to one branch from the other, and then you try to merge the other branch back ?
[11:02:56] *** Quits: gast0n (~g4570n@user/gast0n) (Quit: Bye, see you soon! 👋)
[11:03:23] <osse> ... but then that merge would be a merge base and so you shouldn't have gotten a conflict at all...
[11:03:58] <nikk> osse: I think I started the merge with "git merge -Xignore-all-space ..." - could this have caused it?
[11:04:35] <osse> I don't know for certain but I highly doubt that
[11:07:00] *** Joins: jnnnnnnnnn (~jnnnnnnnn@c-8f70524e.016-77-73746f43.bbcust.telenor.se)
[11:07:58] *** Joins: causa_sui (~causasui@c-68-60-125-136.hsd1.mi.comcast.net)
[11:08:44] *** Quits: k8yun_ (~k8yun@user/k8yun) (Quit: Leaving)
[11:09:27] *** Quits: vdamewood (~vdamewood@fedora/vdamewood) (Quit: My MacBook Pro has gone to sleep. ZZZzzz…)
[11:11:26] *** Quits: thiago (~thiago@2601:1c0:4501:635c:ad38:bce1:accc:1b58) (Ping timeout: 260 seconds)
[11:12:39] *** Quits: causa_sui (~causasui@c-68-60-125-136.hsd1.mi.comcast.net) (Ping timeout: 256 seconds)
[11:14:09] *** Joins: cvmn (~caveman@gateway/tor-sasl/caveman)
[11:18:17] *** Quits: lechner (~lechner@debian/lechner) (Ping timeout: 240 seconds)
[11:20:40] *** Quits: FH_thecat (~FH_thecat@75.11.25.212.ftth.as8758.net) (Quit: Leaving)
[11:21:03] *** Quits: ferdna (~ferdna@user/ferdna) (Quit: Leaving)
[11:22:15] *** Joins: Akiva (~Akiva@user/Akiva)
[11:24:38] *** Joins: causa_sui (~causasui@c-68-60-125-136.hsd1.mi.comcast.net)
[11:28:21] *** Joins: kenanmarasli (~kenanmara@user/kenanmarasli)
[11:29:10] *** Quits: causa_sui (~causasui@c-68-60-125-136.hsd1.mi.comcast.net) (Ping timeout: 260 seconds)
[11:29:27] *** Quits: cvmn (~caveman@gateway/tor-sasl/caveman) (Ping timeout: 276 seconds)
[11:30:38] *** Joins: causa_sui (~causasui@c-68-60-125-136.hsd1.mi.comcast.net)
[11:31:28] *** Joins: palasso (~palasso@user/palasso)
[11:32:56] *** Quits: viridian (~viridian@user/viridian) (Quit: viridian)
[11:34:36] *** Quits: unluckyshrubbery (~unluckysh@45-19-33-188.lightspeed.livnmi.sbcglobal.net) (Quit: ZNC 1.8.2 - https://znc.in)
[11:35:33] *** Quits: causa_sui (~causasui@c-68-60-125-136.hsd1.mi.comcast.net) (Ping timeout: 256 seconds)
[11:36:41] *** Joins: 042AAVZ70 (~l4s8g@pd9e621d0.dip0.t-ipconnect.de)
[11:41:47] *** Quits: nikk (~user@ip5b40a656.dynamic.kabel-deutschland.de) (Remote host closed the connection)
[11:44:08] *** Joins: zeenk (~zeenk@2a02:2f04:a30d:1300:51a3:bcfc:6cda:9fc5)
[11:48:50] *** Joins: szkl (uid110435@id-110435.uxbridge.irccloud.com)
[11:52:19] *** Quits: AbleBacon (~AbleBacon@user/AbleBacon) (Read error: Connection reset by peer)
[11:57:17] *** Joins: spare (~a6w4egbt7@user/spareproject)
[11:57:19] *** Quits: hrehf (~hrehf@mue-88-130-61-237.dsl.tropolys.de) (Read error: Connection reset by peer)
[11:57:59] *** Joins: jazzy2 (~jaziz@user/jaziz)
[11:59:42] *** Quits: xiongxin (~Thunderbi@117.136.39.240) (Read error: Connection reset by peer)
[12:00:14] *** Joins: causa_sui (~causasui@c-68-60-125-136.hsd1.mi.comcast.net)
[12:00:44] *** Quits: Saloframes (~Saloframe@user/Saloframes) (Ping timeout: 257 seconds)
[12:00:57] *** Quits: jazzy (~jaziz@user/jaziz) (Ping timeout: 240 seconds)
[12:01:18] *** Quits: hololeap (~hololeap@user/hololeap) (Ping timeout: 276 seconds)
[12:03:59] *** Joins: Saloframes (~Saloframe@user/Saloframes)
[12:05:01] *** Quits: causa_sui (~causasui@c-68-60-125-136.hsd1.mi.comcast.net) (Ping timeout: 256 seconds)
[12:06:06] *** jazzy2 is now known as jazzy
[12:08:43] *** Joins: hololeap (~hololeap@user/hololeap)
[12:09:30] *** Joins: rev1nchn_ (~rev1nchn@user/rev1nchn)
[12:10:07] *** Quits: rev1nchn (~rev1nchn@user/rev1nchn) (Ping timeout: 256 seconds)
[12:13:24] *** Emet-Selch is now known as Azem
[12:18:42] *** Joins: xiongxin (~Thunderbi@2409:8954:2e60:93a:f816:bc7c:4b35:fc6b)
[12:19:20] *** Joins: murii (~murii@2a02:a58:835a:1100:d927:8ab3:6163:c6b0)
[12:20:08] *** Quits: bkircher (~bkircher@2001:a61:24c9:9301:c70b:7b10:9434:b399) (Quit: Leaving)
[12:26:48] *** oldwildwest is now known as [ad]angelo
[12:27:25] *** Joins: causa_sui (~causasui@c-68-60-125-136.hsd1.mi.comcast.net)
[12:27:49] *** Quits: walterwhip (~www@user/walterwhip) (Quit: My MacBook Air has gone to sleep. ZZZzzz…)
[12:29:16] *** Joins: MajorBiscuit (~MajorBisc@wlan-145-94-218-48.wlan.tudelft.nl)
[12:29:57] *** Quits: mat001 (~mat001@c-69-181-155-247.hsd1.ca.comcast.net) (Ping timeout: 240 seconds)
[12:30:18] *** Quits: [ad]angelo (~heisenbug@2a01:4f8:c2c:5a84::1) (Changing host)
[12:30:18] *** Joins: [ad]angelo (~heisenbug@user/ad/x-9056428)
[12:30:56] *** Quits: cbreak (~cbreak@77-58-201-132.dclient.hispeed.ch) (Quit: ZNC - https://znc.in)
[12:32:37] *** Quits: causa_sui (~causasui@c-68-60-125-136.hsd1.mi.comcast.net) (Ping timeout: 240 seconds)
[12:34:41] *** Joins: causa_sui (~causasui@c-68-60-125-136.hsd1.mi.comcast.net)
[12:35:01] *** Joins: cbreak (~cbreak@77-58-201-132.dclient.hispeed.ch)
[12:35:28] *** Joins: RiFo (~RiFo@user/rifo)
[12:36:31] *** Joins: TheCatBehemoth (~TheCatBeh@2001:8a0:f55d:b200:c9b4:f537:f18d:71d4)
[12:37:25] *** Quits: spare (~a6w4egbt7@user/spareproject) (Remote host closed the connection)
[12:39:38] *** Quits: causa_sui (~causasui@c-68-60-125-136.hsd1.mi.comcast.net) (Ping timeout: 260 seconds)
[12:40:37] *** Joins: iomari891 (~iomari891@105.112.138.38)
[12:44:15] *** Quits: gxt (~gxt@gateway/tor-sasl/gxt) (Remote host closed the connection)
[12:44:36] *** Quits: bloody (~bloody@user/bloody) (Quit: okluvyabubye)
[12:44:38] *** Joins: gxt (~gxt@gateway/tor-sasl/gxt)
[12:49:28] *** Quits: foul_owl (~kerry@71.212.148.11) (Ping timeout: 256 seconds)
[12:51:47] <sicelo> ipv6 help: i would like to force `git remote update` to use IPv6. with `git pull`, i can do `git pull -6`. any idea for `git remote update`?
[12:53:15] *** Quits: chenqisu1 (~chenqisu1@183.217.200.249) (Quit: Leaving)
[12:55:08] *** Joins: causa_sui (~causasui@c-68-60-125-136.hsd1.mi.comcast.net)
[12:56:15] *** Joins: chenqisu1 (~chenqisu1@183.217.200.249)
[12:56:35] *** Quits: fikran (~fikran@user/fikran) (Ping timeout: 256 seconds)
[12:58:12] *** Joins: fikran (~fikran@user/fikran)
[12:58:24] *** Quits: Saloframes (~Saloframe@user/Saloframes) (Quit: Leaving)
[12:58:36] *** Joins: Saloframes (~Saloframe@user/Saloframes)
[12:59:08] *** Joins: Rashad (~textual@86.108.22.173)
[13:03:07] <canton7> sicelo, do you need to use `git remote update` or is the more normal `git fetch` OK?
[13:03:23] *** Joins: foul_owl (~kerry@94.140.8.194)
[13:03:49] *** Quits: causa_sui (~causasui@c-68-60-125-136.hsd1.mi.comcast.net) (Ping timeout: 250 seconds)
[13:06:08] <sicelo> i have a number of remotes. looks like git remote update is the best way to update all the remotes in one go (kernel.org)
[13:08:06] *** Quits: xiongxin (~Thunderbi@2409:8954:2e60:93a:f816:bc7c:4b35:fc6b) (Ping timeout: 260 seconds)
[13:09:43] <osse> git fetch --all should do the same
[13:10:08] <osse> in fact, that's what remote update does
[13:11:40] *** Joins: Gustavo6046 (~Gustavo60@user/gustavo6046)
[13:13:17] *** Joins: spare (~dvaet4nwm@user/spareproject)
[13:14:33] *** Joins: unluckyshrubbery (~unluckysh@45-19-33-188.lightspeed.livnmi.sbcglobal.net)
[13:16:44] <sicelo> Oh thanks. I'll give that a spin
[13:16:47] *** Quits: mannequin (uid453465@id-453465.helmsley.irccloud.com) (Quit: Connection closed for inactivity)
[13:16:49] *** Quits: Betal (~Betal@user/betal) (Quit: WeeChat 3.4)
[13:23:05] *** Parts: ecraven (ecraven@user/nex) (Bye)
[13:23:49] *** Quits: iomari891 (~iomari891@105.112.138.38) (Quit: WeeChat 3.3)
[13:24:23] *** Joins: rfuentess (~rfuentess@static-5-51-117-151.ftth.abo.bbox.fr)
[13:27:12] *** Quits: spare (~dvaet4nwm@user/spareproject) (Remote host closed the connection)
[13:28:06] *** Joins: roadie (~user@2a02:8108:5a40:1d87:31cd:2bdc:74d7:79e6)
[13:29:54] *** Joins: hrehf (~hrehf@mue-88-130-61-237.dsl.tropolys.de)
[13:30:58] *** Quits: Akiva (~Akiva@user/Akiva) (Ping timeout: 260 seconds)
[13:33:17] *** Quits: jazzy (~jaziz@user/jaziz) (Ping timeout: 250 seconds)
[13:35:22] *** Joins: NeilRG (~NeilRG@96-127-194-85.qc.cable.ebox.net)
[13:35:27] *** Quits: sudoforge (~sudoforge@wireguard/tunneler/sudoforge) (Ping timeout: 256 seconds)
[13:36:13] *** Quits: foul_owl (~kerry@94.140.8.194) (Ping timeout: 240 seconds)
[13:45:01] *** Quits: hrehf (~hrehf@mue-88-130-61-237.dsl.tropolys.de) (Ping timeout: 240 seconds)
[13:46:10] *** Joins: wonty (~Matthew@bras-base-otwaon1243w-grc-02-209-226-231-73.dsl.bell.ca)
[13:48:37] *** Quits: worky (~Matthew@bras-base-otwaon1243w-grc-02-209-226-231-73.dsl.bell.ca) (Ping timeout: 240 seconds)
[13:49:11] *** Joins: foul_owl (~kerry@71.212.133.174)
[13:55:48] *** Joins: j`ey (~joey@user/jey/x-2681904)
[13:56:08] *** Joins: Crispy (~crispy@101.187.236.231)
[13:56:13] *** Joins: hrehf (~hrehf@mue-88-130-61-202.dsl.tropolys.de)
[13:56:25] *** Quits: m5zs7k (aquares@web10.mydevil.net) (Ping timeout: 256 seconds)
[13:56:26] *** Joins: causa_sui (~causasui@c-68-60-125-136.hsd1.mi.comcast.net)
[13:56:34] <j`ey> I want to delete some tags locally, because they keep messing with autocomplete, but when I ran git fetch.. of course they came back, is there a way to mark some tags as 'dont fetch there'
[13:56:38] <j`ey> *these
[13:57:28] *** Joins: m5zs7k (aquares@web10.mydevil.net)
[14:01:11] *** Joins: cryptone1tor (~nico@24.28.108.183)
[14:01:11] *** Quits: causa_sui (~causasui@c-68-60-125-136.hsd1.mi.comcast.net) (Ping timeout: 256 seconds)
[14:01:17] *** Joins: [RiFo] (~RiFo@user/rifo)
[14:02:11] *** Joins: worky (~Matthew@bras-base-otwaon1243w-grc-02-209-226-231-73.dsl.bell.ca)
[14:02:33] *** Joins: lungaro_ (~lungaro@99-117-118-33.lightspeed.sndgca.sbcglobal.net)
[14:02:36] *** Joins: cweiss076532 (~cweiss@50.53.188.115)
[14:02:39] *** Joins: Duckle3 (~Duckle@user/duckle)
[14:02:42] *** Joins: jbg7 (~jbg@user/jbg)
[14:02:54] *** Joins: Kilroy7 (~thelounge@user/Kilroy)
[14:02:54] *** Quits: murii (~murii@2a02:a58:835a:1100:d927:8ab3:6163:c6b0) (Remote host closed the connection)
[14:02:56] *** Joins: trilobite4 (~Malka@ns300725.ip-91-121-65.eu)
[14:03:02] *** Joins: tofran2 (~tofran@bl15-47-228.dsl.telepac.pt)
[14:03:05] *** Joins: madewokherd (~urk@65-128-183-86.mpls.qwest.net)
[14:03:07] *** Joins: cfjk0 (~cfjk@user/cfjk)
[14:03:15] *** Joins: ferr_ (~ferr@185.65.50.97)
[14:03:25] *** Joins: MrBenC (Ben@mrbenc.net)
[14:03:25] *** Quits: MrC (~Ben@mrbenc.net) (Killed (molybdenum.libera.chat (Nickname regained by services)))
[14:03:25] *** MrBenC is now known as MrC
[14:03:37] *** Joins: firewyre- (~firewyre@pool-71-184-153-62.bstnma.fios.verizon.net)
[14:03:37] *** Joins: samuelb (~samuelber@nata01.lip.pt)
[14:03:38] *** Joins: dodo__ (~dodo@user/dodo)
[14:03:42] *** Joins: Noisytoot_ (~noisytoot@sourcehut/user/noisytoot)
[14:03:48] *** Joins: MIsAn (~yuljk@86.11.178.103)
[14:04:30] *** Joins: Quaack (~Quack@185.21.216.169)
[14:04:40] *** Joins: infernixx (nix@spirit.infernix.net)
[14:04:42] *** Joins: dansan_ (~daniel@75.81.148.51)
[14:04:57] *** Joins: causa_sui (~causasui@c-68-60-125-136.hsd1.mi.comcast.net)
[14:05:11] *** Joins: tehenderz_ (~tehenderz@ti0018a400-0109.bb.online.no)
[14:05:42] *** Joins: duxsco (~Thunderbi@user/duxsco)
[14:05:59] *** Quits: TheCatBehemoth (~TheCatBeh@2001:8a0:f55d:b200:c9b4:f537:f18d:71d4) (Ping timeout: 250 seconds)
[14:06:05] *** Joins: vancz_ (~vancz@user/vancz)
[14:06:08] *** Joins: mooz_ (~none@173.208.98.70)
[14:06:15] *** Joins: jelmer_ (~jelmer@user/jelmer)
[14:06:17] *** Joins: g2anj_ (~v@58.228.230.4)
[14:06:20] *** Joins: esc23 (esc@kudu.in-berlin.de)
[14:06:26] *** Joins: diego (~diego@187.39.23.21)
[14:06:33] *** Joins: pasky_ (~pasky@nikam.ms.mff.cuni.cz)
[14:06:49] *** Joins: axisys_ (~axisys@ec2-52-207-123-244.compute-1.amazonaws.com)
[14:06:55] *** diego is now known as Guest3980
[14:07:03] *** Joins: TheCatBehemoth (~TheCatBeh@2001:8a0:f55d:b200:c9b4:f537:f18d:71d4)
[14:07:07] *** Quits: igemnace (~ian@user/igemnace) (Quit: WeeChat 3.4)
[14:09:25] *** Quits: causa_sui (~causasui@c-68-60-125-136.hsd1.mi.comcast.net) (Ping timeout: 240 seconds)
[14:09:55] *** Joins: murii (~murii@2a02:a58:835a:1100:d927:8ab3:6163:c6b0)
[14:10:02] *** Joins: xiongxin (~Thunderbi@2409:8954:2e60:2efb:49eb:5abc:71c2:a5ba)
[14:11:02] *** Quits: foul_owl (~kerry@71.212.133.174) (*.net *.split)
[14:11:02] *** Quits: wonty (~Matthew@bras-base-otwaon1243w-grc-02-209-226-231-73.dsl.bell.ca) (*.net *.split)
[14:11:02] *** Quits: RiFo (~RiFo@user/rifo) (*.net *.split)
[14:11:02] *** Quits: rev1nchn_ (~rev1nchn@user/rev1nchn) (*.net *.split)
[14:11:02] *** Quits: jelmer (~jelmer@user/jelmer) (*.net *.split)
[14:11:02] *** Quits: madewokherd` (~urk@65-128-183-86.mpls.qwest.net) (*.net *.split)
[14:11:02] *** Quits: tehenderz (~tehenderz@ti0018a400-0109.bb.online.no) (*.net *.split)
[14:11:02] *** Quits: Kilroy (~thelounge@user/Kilroy) (*.net *.split)
[14:11:02] *** Quits: esc (esc@kudu.in-berlin.de) (*.net *.split)
[14:11:02] *** Quits: dmc (~dmc@archlinux/trusteduser/polyzen) (*.net *.split)
[14:11:02] *** Quits: kilobyte_ch (~kbch@77.109.171.85) (*.net *.split)
[14:11:02] *** Quits: cryptonector (~nico@24.28.108.183) (*.net *.split)
[14:11:02] *** Quits: firewyre (~firewyre@pool-71-184-153-62.bstnma.fios.verizon.net) (*.net *.split)
[14:11:02] *** Quits: ishutin (~ishutin@193-110-63-21.cable-modem.hdsnet.hu) (*.net *.split)
[14:11:02] *** Quits: ackyshake (~ackyshake@user/ackyshake) (*.net *.split)
[14:11:02] *** Quits: Noisytoot (~noisytoot@sourcehut/user/noisytoot) (*.net *.split)
[14:11:02] *** Quits: lungaro (~lungaro@99-117-118-33.lightspeed.sndgca.sbcglobal.net) (*.net *.split)
[14:11:02] *** Quits: fingercomp (~fingercom@fomalhaut.me) (*.net *.split)
[14:11:02] *** Quits: g2anj (~v@58.228.230.4) (*.net *.split)
[14:11:02] *** Quits: dviola (~diego@user/dviola) (*.net *.split)
[14:11:02] *** Quits: Dreadnaught (Kulrak@n122-109-158-59.rdl2.qld.optusnet.com.au) (*.net *.split)
[14:11:02] *** Quits: LogicAside (~LogicAsid@user/logicaside) (*.net *.split)
[14:11:02] *** Quits: Quack (~Quack@185.21.216.169) (*.net *.split)
[14:11:02] *** Quits: bin101 (~bin101@user/bin101) (*.net *.split)
[14:11:02] *** Quits: yuljk (~yuljk@86.11.178.103) (*.net *.split)
[14:11:02] *** Quits: s1b1 (~s1b1@user/s1b1) (*.net *.split)
[14:11:02] *** Quits: chemsmith (~chemsmith@user/chemsmith) (*.net *.split)
[14:11:02] *** Quits: vancz (~vancz@user/vancz) (*.net *.split)
[14:11:03] *** Quits: tofran (~tofran@bl15-47-228.dsl.telepac.pt) (*.net *.split)
[14:11:03] *** Quits: wgrant (~wgrant@ubuntu/member/wgrant) (*.net *.split)
[14:11:03] *** Quits: fercell (~ferr@185.65.50.97) (*.net *.split)
[14:11:03] *** Quits: mooz (~none@173.208.98.70) (*.net *.split)
[14:11:03] *** Quits: The_Tablet (~tablet@user/the-tablet) (*.net *.split)
[14:11:03] *** Quits: cweiss07653 (~cweiss@50.53.188.115) (*.net *.split)
[14:11:03] *** Quits: pasky (~pasky@nikam.ms.mff.cuni.cz) (*.net *.split)
[14:11:03] *** Quits: Zubin (~rubin@ender.afternet.org) (*.net *.split)
[14:11:03] *** Quits: cfjk (~cfjk@user/cfjk) (*.net *.split)
[14:11:03] *** Quits: jbg (~jbg@user/jbg) (*.net *.split)
[14:11:03] *** Quits: trilobite (~Malka@ns300725.ip-91-121-65.eu) (*.net *.split)
[14:11:03] *** Quits: Duckle (~Duckle@user/duckle) (*.net *.split)
[14:11:03] *** Quits: infernix (~nix@spirit.infernix.net) (*.net *.split)
[14:11:03] *** Quits: axisys (~axisys@ec2-52-207-123-244.compute-1.amazonaws.com) (*.net *.split)
[14:11:03] *** Quits: dansan (~daniel@75.81.148.51) (*.net *.split)
[14:11:03] *** Quits: samuelbernardo (~samuelber@nata01.lip.pt) (*.net *.split)
[14:11:03] *** Quits: Frogging101 (~Frogging@kitsune.fastquake.com) (*.net *.split)
[14:11:03] *** Quits: swistak (~swistak@185.21.216.141) (*.net *.split)
[14:11:03] *** Quits: asdflkj_sh (asdflkj@user/asdflkj-sh/x-6013523) (*.net *.split)
[14:11:03] *** Quits: mw_ (~mw@catv-80-98-128-161.catv.fixed.vodafone.hu) (*.net *.split)
[14:11:03] *** Quits: justGhost (~justache@user/justache) (*.net *.split)
[14:11:03] *** Quits: HelloShitty (~psysc0rpi@bl20-171-222.dsl.telepac.pt) (*.net *.split)
[14:11:03] *** Quits: bgs (~bgs@cpe-212-85-160-171.cable.telemach.net) (*.net *.split)
[14:11:03] *** Quits: dodo (~dodo@user/dodo) (*.net *.split)
[14:11:03] *** Quits: webstran- (~webstrand@user/webstrand) (*.net *.split)
[14:11:03] *** Quits: haskl (~haskl@user/haskl) (*.net *.split)
[14:11:03] *** Quits: kyshoc (~kyshoc@adsl-99-93-208-248.dsl.mtry01.sbcglobal.net) (*.net *.split)
[14:11:03] *** Quits: queue- (~nerd@user/queue/x-7267619) (*.net *.split)
[14:11:03] *** Quits: dminuoso (~dminuoso@user/dminuoso) (*.net *.split)
[14:11:03] *** Quits: Spydar007 (~spydar007@user/spydar007) (*.net *.split)
[14:11:03] *** Quits: mika (~mika@odysseus.grml.info) (*.net *.split)
[14:11:03] *** Quits: dustinm (~dustinm@static.38.6.217.95.clients.your-server.de) (*.net *.split)
[14:11:03] *** Quits: Disconsented (~quassel@107.170.227.20) (*.net *.split)
[14:11:03] *** Quits: dlam (~dlam@dlam.me) (*.net *.split)
[14:11:03] *** Quits: ilogger2 (~ilogger2@colabti.org) (*.net *.split)
[14:11:03] *** Quits: corelax (~corelax@user/corelax) (*.net *.split)
[14:11:03] *** Quits: sahilister (~sahiliste@user/sahilister) (*.net *.split)
[14:11:03] *** Quits: dslegends (~dslegends@user/dslegends) (*.net *.split)
[14:11:03] *** Quits: Soliton (~Soliton@wesnoth/developer/soliton) (*.net *.split)
[14:11:03] *** Quits: Nei (~ailin@openSUSE/member/ailin-nemui) (*.net *.split)
[14:11:03] *** Quits: DoubleJ (~DoubleJ@user/doublej) (*.net *.split)
[14:11:04] *** trilobite4 is now known as trilobite
[14:11:04] *** jbg7 is now known as jbg
[14:11:05] *** jelmer_ is now known as jelmer
[14:11:06] *** dodo__ is now known as dodo
[14:11:09] *** tofran2 is now known as tofran
[14:11:09] *** cfjk0 is now known as cfjk
[14:11:09] *** Duckle3 is now known as Duckle
[14:11:20] *** infernixx is now known as infernix
[14:12:04] *** Joins: chemsmith (~chemsmith@user/chemsmith)
[14:12:09] *** Joins: bgs (~bgs@cpe-212-85-160-171.cable.telemach.net)
[14:12:14] *** Joins: HelloShitty (~psysc0rpi@bl20-171-222.dsl.telepac.pt)
[14:16:12] *** Joins: rev1nchn_ (~rev1nchn@user/rev1nchn)
[14:16:12] *** Joins: dmc (~dmc@archlinux/trusteduser/polyzen)
[14:16:12] *** Joins: kilobyte_ch (~kbch@77.109.171.85)
[14:16:12] *** Joins: ishutin (~ishutin@193-110-63-21.cable-modem.hdsnet.hu)
[14:16:12] *** Joins: ackyshake (~ackyshake@user/ackyshake)
[14:16:12] *** Joins: fingercomp (~fingercom@fomalhaut.me)
[14:16:12] *** Joins: Dreadnaught (Kulrak@n122-109-158-59.rdl2.qld.optusnet.com.au)
[14:16:12] *** Joins: LogicAside (~LogicAsid@user/logicaside)
[14:16:12] *** Joins: bin101 (~bin101@user/bin101)
[14:16:12] *** Joins: s1b1 (~s1b1@user/s1b1)
[14:16:12] *** Joins: asdflkj_sh (asdflkj@user/asdflkj-sh/x-6013523)
[14:16:12] *** Joins: wgrant (~wgrant@ubuntu/member/wgrant)
[14:16:12] *** Joins: The_Tablet (~tablet@user/the-tablet)
[14:16:12] *** Joins: Zubin (~rubin@ender.afternet.org)
[14:16:12] *** Joins: Frogging101 (~Frogging@kitsune.fastquake.com)
[14:16:12] *** Joins: swistak (~swistak@185.21.216.141)
[14:16:12] *** Joins: mw_ (~mw@catv-80-98-128-161.catv.fixed.vodafone.hu)
[14:16:12] *** Joins: justGhost (~justache@user/justache)
[14:16:12] *** Joins: webstran- (~webstrand@user/webstrand)
[14:16:12] *** Joins: haskl (~haskl@user/haskl)
[14:16:12] *** Joins: kyshoc (~kyshoc@adsl-99-93-208-248.dsl.mtry01.sbcglobal.net)
[14:16:12] *** Joins: queue- (~nerd@user/queue/x-7267619)
[14:16:12] *** Joins: dminuoso (~dminuoso@user/dminuoso)
[14:16:12] *** Joins: Spydar007 (~spydar007@user/spydar007)
[14:16:12] *** Joins: mika (~mika@odysseus.grml.info)
[14:16:12] *** Joins: dustinm (~dustinm@static.38.6.217.95.clients.your-server.de)
[14:16:12] *** Joins: dlam (~dlam@dlam.me)
[14:16:12] *** Joins: Disconsented (~quassel@107.170.227.20)
[14:16:12] *** Joins: ilogger2 (~ilogger2@colabti.org)
[14:16:12] *** Joins: corelax (~corelax@user/corelax)
[14:16:12] *** Joins: sahilister (~sahiliste@user/sahilister)
[14:16:12] *** Joins: dslegends (~dslegends@user/dslegends)
[14:16:12] *** Joins: Soliton (~Soliton@wesnoth/developer/soliton)
[14:16:12] *** Joins: Nei (~ailin@openSUSE/member/ailin-nemui)
[14:16:12] *** Joins: DoubleJ (~DoubleJ@user/doublej)
[14:18:26] *** Joins: foul_owl (~kerry@71.212.133.174)
[14:21:00] *** Joins: rsx (~dummy@ppp-188-174-150-145.dynamic.mnet-online.de)
[14:24:58] *** Joins: causa_sui (~causasui@c-68-60-125-136.hsd1.mi.comcast.net)
[14:29:23] *** Quits: causa_sui (~causasui@c-68-60-125-136.hsd1.mi.comcast.net) (Ping timeout: 250 seconds)
[14:29:41] <osse> j`ey: you can add negative refspecs
[14:29:58] *** Joins: causa_sui (~causasui@c-68-60-125-136.hsd1.mi.comcast.net)
[14:30:37] *** Quits: Lord_of_Life (~Lord@user/lord-of-life/x-2819915) (Ping timeout: 240 seconds)
[14:31:32] <j`ey> osse: sounds useful
[14:31:49] <osse> hmm, I tried it just now and couldn't get it to work
[14:32:11] <osse> my idea was git config --add remote.origin.fetch '^refs/tags/not-this-one'
[14:32:37] <j`ey> I was jsut typing that :(
[14:33:04] *** Quits: jbg (~jbg@user/jbg) (Quit: jbg)
[14:33:29] *** Joins: Lord_of_Life (~Lord@user/lord-of-life/x-2819915)
[14:33:30] <j`ey> uh, I thought the 'add' would add on, but it seems like it overwrote it
[14:34:25] <j`ey> osse: did you also get 'invalid refspec'?
[14:34:31] *** Quits: causa_sui (~causasui@c-68-60-125-136.hsd1.mi.comcast.net) (Ping timeout: 245 seconds)
[14:34:33] <osse> no
[14:35:27] <j`ey> turns out my git is too old for negative refspecs
[14:35:31] <j`ey> (2.29, I have 2.17)
[14:36:47] <osse> It works as I expected for other branch names. But I think it fetches the tags anyway because of --tags
[14:37:13] <osse> I wonder if that's a bug
[14:37:45] <j`ey> ok so, --add actually does add, but config only shows the last item
[14:38:28] <osse> yeah you need --get-all
[14:40:05] <j`ey> someone made a tag with the name 'foo-bar', and there's a folder 'foo', and git always autocompletes the tag before the folder
[14:40:58] <fling> How to rebase from a patch file?
[14:41:31] *** Quits: Rashad (~textual@86.108.22.173) (Read error: Connection reset by peer)
[14:42:32] <bremner> I don't think the question makes sense. Care to expand / retry?
[14:44:14] <fling> ok I have a commit in a patch file but it is not going to apply cleanly as there are missing files. I want to skip them
[14:46:15] *** Joins: Emet-Selch (~haise01@user/haise01)
[14:46:31] *** Emet-Selch is now known as haise01
[14:46:51] <osse> j`ey: easy fix: type -- first
[14:49:44] <j`ey> osse: you literally mean to run: `type --first`?
[14:49:49] *** Quits: Azem (~haise01@user/haise01) (Ping timeout: 240 seconds)
[14:49:52] <j`ey> err `type -- first`
[14:50:04] <osse> j`ey: no I mean type --
[14:50:12] <osse> in order to separate refs from paths
[14:51:01] <j`ey> oh: git log -- foo
[14:51:19] <osse> yes
[14:52:08] *** haise01 is now known as Azem
[14:52:36] *** Joins: xkuru (~xkuru@user/xkuru)
[14:52:42] <bremner> fling: if you apply it with "patch", then you should get a partial application with some failed hunks
[14:54:15] *** Joins: AnapodoPsalidi (~AnapodoPs@2a02:587:290e:a0c9:efeb:495c:188:c469)
[14:54:35] *** Joins: Rashad (~textual@86.108.23.36)
[14:54:36] *** Joins: lightningwright (~lightning@user/lightningwright)
[14:54:43] *** Joins: causa_sui (~causasui@c-68-60-125-136.hsd1.mi.comcast.net)
[14:55:32] *** Joins: jalil (~jalil@2a01:e0a:277:4100:4b34:f28b:c1d1:3941)
[14:56:37] *** Quits: AnapodoPsalidaki (~AnapodoPs@154.57.4.229) (Ping timeout: 240 seconds)
[14:58:53] *** Quits: whatsupdoc (uid509081@id-509081.hampstead.irccloud.com) (Quit: Connection closed for inactivity)
[15:01:53] *** Quits: causa_sui (~causasui@c-68-60-125-136.hsd1.mi.comcast.net) (Ping timeout: 250 seconds)
[15:01:56] *** Joins: cousteau_ (~cousteau@user/cousteau)
[15:02:07] *** cousteau_ is now known as cousteau
[15:05:17] *** Quits: fikran (~fikran@user/fikran) (Ping timeout: 240 seconds)
[15:06:18] <cousteau> Out of curiosity, what are the long term plans for Git?  Just minor fixes and making things easier, or are there any major features being considered?
[15:07:30] *** Quits: lightningwright (~lightning@user/lightningwright) (Remote host closed the connection)
[15:07:33] *** Joins: fikran (~fikran@user/fikran)
[15:07:49] *** Joins: lightningwright (~lightning@user/lightningwright)
[15:10:25] <bremner> I don't think the people deciding that hang out here
[15:10:38] *** Joins: AnapodoPsalidaki (~AnapodoPs@154.57.4.229)
[15:12:06] *** Quits: AnapodoPsalidi (~AnapodoPs@2a02:587:290e:a0c9:efeb:495c:188:c469) (Ping timeout: 250 seconds)
[15:12:15] *** Quits: Rashad (~textual@86.108.23.36) (Quit: Textual IRC Client: www.textualapp.com)
[15:12:21] *** Joins: jbg (~jbg@user/jbg)
[15:12:53] <cousteau> I'm reading this Git vs Perforce blog entry, which is written by Perforce so it's obviously biased, but it's pretty fair with Git and highlights its strengths, and does rise a few fair points in which distributed SCM might have trouble, at least the way Git does it
[15:16:02] <cousteau> Basically with large binary files... actually any file that is not mergeable in nature.  That is tricky to handle in Git and the like.
[15:17:45] <cousteau> (you can have an xml file that is designed in such a horrible way that it's not feasible to merge it; it's pretty much a binary file in plain text format.  I've seen those.)
[15:18:49] *** Joins: Tangent-Man (~Tang3nt-M@cpc145602-basl14-2-0-cust33.20-1.cable.virginm.net)
[15:19:21] <fling> bremner: sure but I wanted to keep the commit message and author etc
[15:19:40] *** Joins: causa_sui (~causasui@c-68-60-125-136.hsd1.mi.comcast.net)
[15:19:41] *** Parts: j`ey (~joey@user/jey/x-2681904) ()
[15:22:24] *** Joins: spare (~i3djj7znq@user/spareproject)
[15:24:25] *** Quits: causa_sui (~causasui@c-68-60-125-136.hsd1.mi.comcast.net) (Ping timeout: 268 seconds)
[15:24:58] *** Joins: causa_sui (~causasui@c-68-60-125-136.hsd1.mi.comcast.net)
[15:27:11] *** Quits: foul_owl (~kerry@71.212.133.174) (Ping timeout: 252 seconds)
[15:29:55] *** Quits: causa_sui (~causasui@c-68-60-125-136.hsd1.mi.comcast.net) (Ping timeout: 256 seconds)
[15:30:14] <jim> is perforce not distributed
[15:30:15] <jim> ?
[15:31:02] <cousteau> It also points out some "advantages" of Perforce which are a bit fallacious in my opinion, somewhat overinflating the benefits of the centralized approach Perforce uses, as if Git couldn't use that too if you wanted.  But some of the points they make are valid (and I don't think it would be too difficult to implement, at least for git developers)
[15:31:32] <cousteau> jim: not at all, you even need an internet connection to create a branch...
[15:31:54] <jim> or to commit?
[15:31:57] *** Joins: causa_sui (~causasui@c-68-60-125-136.hsd1.mi.comcast.net)
[15:32:00] *** Quits: hrehf (~hrehf@mue-88-130-61-202.dsl.tropolys.de) (Quit: Quit)
[15:32:01] <bremner> fling: if you have a branch with the files you can apply the patch there and then rebase it. Otherwise dunno.
[15:32:02] <cousteau> That too, I think
[15:32:36] <cousteau> It's just better at branching and merging than CVS and SVN, but that's about it
[15:32:49] *** Joins: Rashad (~textual@86.108.22.173)
[15:33:29] <osse> cousteau: https://devblogs.microsoft.com/devops/introducing-scalar/
[15:33:38] <osse> this is slowly but surely making its way into git proper
[15:33:41] <osse> which is cool
[15:33:58] <cousteau> Back in 2011, the company I currently work for said "OK we really need to ditch CVS, we need something that allows faster branching and painless merging.  Any ideas?"
[15:34:10] <cousteau> "Sure, let's move to Perforce!"
[15:36:11] *** Quits: spare (~i3djj7znq@user/spareproject) (Remote host closed the connection)
[15:36:11] *** Quits: Dreadnaught (Kulrak@n122-109-158-59.rdl2.qld.optusnet.com.au) (Read error: Connection reset by peer)
[15:36:25] *** Joins: Dreadnaught (Kulrak@n122-109-158-59.rdl2.qld.optusnet.com.au)
[15:36:25] *** Joins: spare (~i3djj7znq@user/spareproject)
[15:36:56] <cousteau> osse: looks interesting!
[15:38:15] *** Joins: walterwhip (~www@user/walterwhip)
[15:38:39] <cousteau> As I read the initial problem I was thinking "so the problem seems to be keeping track of the files that have changed... doesn't the file system provide some tools for that?  Modification timestamps?  Built-in hashes/checksums?"
[15:38:39] *** Quits: roadie (~user@2a02:8108:5a40:1d87:31cd:2bdc:74d7:79e6) (Remote host closed the connection)
[15:38:53] *** Joins: roadie (~user@2a02:8108:5a40:1d87:31cd:2bdc:74d7:79e6)
[15:38:59] *** Quits: causa_sui (~causasui@c-68-60-125-136.hsd1.mi.comcast.net) (Ping timeout: 256 seconds)
[15:39:04] <cousteau> The answer appears to be, indeed, "let's use a virtual file system that does"
[15:41:25] *** Quits: vaio (~gary@user/ghost) (Remote host closed the connection)
[15:41:56] *** Joins: vaio (~gary@user/ghost)
[15:42:42] <cousteau> I think one of the beautiful things of Git is that it works without having to interfere with the file system, just seeing the repository as a bunch of files.  But I guess when a project becomes unmanageably large, that VFS trick can be a better solution than a server-side one
[15:43:43] *** Quits: xiongxin (~Thunderbi@2409:8954:2e60:2efb:49eb:5abc:71c2:a5ba) (Ping timeout: 250 seconds)
[15:43:58] *** Quits: LuKaRo (~LuKaRo@p200300dfa72f4b3100000000000001f9.dip0.t-ipconnect.de) (Ping timeout: 260 seconds)
[15:44:15] <cousteau> (plus, if this VFS gets created as soon as you `git clone` a project, and doesn't require you to do anything, and it's transparent to the end user, then I guess it's all advantages)
[15:48:03] <jim> unmanagably large? you mean line the linux kernel? :)
[15:48:13] <jim> like not line
[15:49:06] *** Joins: DrowningElysium (uid190788@user/drowningelysium)
[15:49:45] *** Quits: duxsco (~Thunderbi@user/duxsco) (Quit: duxsco)
[15:51:04] <osse> based on the article the windows os repo is about 50 times larger
[15:53:24] <cousteau> The other issue is "binary" files, ie files that are impossible to merge, because (a) they are not regular code, but a format edited in a weird program that is not diff-friendly, or (b) they are the result of "compiling" (or building or synthesizing or whatever) a bunch of source files, and you don't want other developers to have to be compiling the whole thing again whenever they check out a new version, so it feels like a good idea to include it in the
[15:53:24] <cousteau> repo, but you should somehow mark it as "generated file"
[15:53:37] *** Quits: srinidhi (~srinidhi@49.205.134.23) (Ping timeout: 240 seconds)
[15:53:47] <dminuoso> cousteau: wanting to merge arbitrary "binary" files is a weird thing.
[15:53:56] <cousteau> osse: well duh, one is a kernel and the other is a whole OS... why are they not using submodules in the first place?
[15:53:58] <dminuoso> Even regular merges are rarely just "decide which side to pick"
[15:54:27] <dminuoso> If you use git frequently in a non-trivial setting, merging usually means *modifying* program code, with merge conflicts only being hints at some mismatches.
[15:54:28] <osse> cousteau: I was just responding to considering the linux kernel "unmanagably large"
[15:54:38] <osse> it's obviously not
[15:54:56] <cousteau> dminuoso: yeah but that's the thing, git doesn't help you there; maybe it could be a tad more helpful in some way, who knows
[15:55:11] *** Joins: madewokherd` (~urk@65-128-183-86.mpls.qwest.net)
[15:55:16] *** Joins: causa_sui (~causasui@c-68-60-125-136.hsd1.mi.comcast.net)
[15:55:26] <cousteau> This was more about inventing a new paradigm than implementing a new feature
[15:55:31] *** Joins: LuKaRo (~LuKaRo@p4fc3264a.dip0.t-ipconnect.de)
[15:55:35] <dminuoso> How could it be helpful?
[15:55:55] <dminuoso> Logical merge are nearly impossible to detect from git's point of view.
[15:56:01] <dminuoso> *merge conflicts
[15:56:16] <dminuoso> The best git can do is tell you whether it physically cant merge them together, but whether that's a sensible thing it cant say
[15:56:16] <cousteau> I don't know; that's why it's a hard thing to figure out :)
[15:56:44] <dminuoso> git does not understand Haskell, C or Python. So how could it know what "merging" two things even means?
[15:57:01] *** Quits: madewokherd (~urk@65-128-183-86.mpls.qwest.net) (Ping timeout: 240 seconds)
[15:57:02] *** Quits: ackyshake (~ackyshake@user/ackyshake) (Ping timeout: 256 seconds)
[15:57:12] <dminuoso> It would have to understand your code too. And what you end up with, is an expect in the problem domain - a programmer
[15:57:21] *** Joins: mei (~mei@user/mei)
[15:57:42] <cousteau> Git could, for example, know which files need to be built from sources after modifying those sources, and automatically build them, OR leave the files unbuilt and then require you to build them before pushing, but allowing to have those files not built as a special case, OR... dunno, something that needs to be thought out of the box
[15:57:51] <dminuoso> About the only way git isnt helpful is that it doesnt default to diff3
[15:58:12] <dminuoso> cousteau: So git suddenly understands arbitrary build processes and arbitrary languages? :)
[15:58:46] <cousteau> What Perforce and other centralized SCMs do in this case is to somehow give "exclusive rights" of a file to a certain user, so they can block the file so that no one else can edit it, thus preventing merge conflicts that cannot be solved
[15:59:04] <bremner> aka locking
[15:59:17] <osse> git let's you implement custom merge drivers
[15:59:21] <cousteau> Is this a good apprach?  I don't know, but apparently it's the only thing that works for "projects involving large binary files", and the argument they have against using Git.
[15:59:46] <jim> and (I think) custom diff tools
[15:59:51] <cousteau> osse: I guess that would facilitate things, yes
[16:00:09] *** Joins: xiongxin (~Thunderbi@2409:8954:2e60:2a6:96e7:82a0:9aab:fe7f)
[16:00:34] <dminuoso> Anyway, it seems to me you're wishing git was equipped with build tool powers.
[16:00:37] <bremner> I don't think "pick one file" merging requires centralized locking (git-annex manages fine without it), but maybe it makes it more convenient
[16:01:05] <dminuoso> And I also think "pick one file" is, for the vast majority of users, completely inappropriate.
[16:01:06] <cousteau> As for custom diff/merge tools... have you ever tried to merge two Word documents, or work in parallel in a Word document?  Worst.  Experience.  Ever.
[16:01:25] *** Quits: lightningwright (~lightning@user/lightningwright) (Ping timeout: 268 seconds)
[16:01:47] <dminuoso> I think diff3 is the most convenient display, and that you cant do side-by-side
[16:01:52] <dminuoso> you need three dimensions to do that
[16:02:02] <cousteau> Word doesn't seem to be aware of the concept of three-way merges, so merging two Word documents works pretty much through magic
[16:02:23] <dminuoso> Im not talking about three-way merges, but diff3
[16:02:37] <dminuoso> or rather, not its merge capability
[16:02:43] <dminuoso> but merely displaying a difference
[16:03:00] <dminuoso> I cant fathom how people ever resolve merge conflicts after rebasing without diff3
[16:03:08] *** Quits: walterwhip (~www@user/walterwhip) (Quit: Textual IRC Client: www.textualapp.com)
[16:03:10] <cousteau> dminuoso: pretty sure you can do that with three layers in a two-dimensional space.  Just put the common ancestor in the middle
[16:04:28] <cousteau> also yes, I kinda hate how git merge conflicts defaults to not showing the common ancestor.  You can configure it to do that though; it ends up like <<< version1 ||| common_ancestor === version2 >>>
[16:04:31] <osse> Git's merge/diff capabilities are prety limited, in the grand scheme of things. But it works pretty well for the main usecase: text files. For other stuff you can write your own diff/merge tools. If *that* doesn't work then the problem is the file format and there's nothing Git or any other system can do.
[16:05:07] *** Quits: causa_sui (~causasui@c-68-60-125-136.hsd1.mi.comcast.net) (Ping timeout: 268 seconds)
[16:05:07] <cousteau> so it's much easier to see what each version is changing, rather than having to figure out which parts are changes and which parts are original
[16:06:16] *** Joins: aniketgm (~aniketgm@49.36.58.36)
[16:06:16] <cousteau> I guess Git assumes those cases are often simple enough that the developers can typically figure out what to use, or even which version of the code block to keep and which to discard entirely
[16:07:01] <dminuoso> cousteau: Indeed, and that's what I said earlier. merge.conflictstyle should default to diff3 :p
[16:07:24] <dminuoso> But I dont have any motivation to argue this, since *I* know about it and *I* have it set in my global git config.
[16:07:43] <osse> diff3, eh. Maybe I should try it
[16:07:50] <cousteau> osse: as I said, there ARE solutions or workarounds, such as that file blocking thing.  You solve the problem by avoiding it in the first place.  Although it's contrary to the principles Git is built upon, and brings in a new dimension of chaos.
[16:08:30] <aniketgm> hi. I was wondering how does git know that the branch I'm currently is changed remotely. For e.g. say I'm on a develop branch and I've made some changes, so without git pull/fetch, hoe does git know that this branch was changed by someone remotely.
[16:08:49] <cousteau> dminuoso: oh, I thought you meant having a look at the diff3-style diffs, the ones with -- ++ - + in them; didn't remember the option for the ||||||| thing was also called diff3
[16:09:05] <aniketgm> If there is any link/blog you guys know. can you please share.
[16:09:33] <cousteau> re: arguing about it, I don't think it would be too useful since I think most of us agree that it's a nice feature indeed
[16:10:17] <osse> aniketgm: it doesn't know
[16:10:31] <cousteau> aniketgm: git has a copy of the remote branch.  It knows that you have changed the local branch since the last time you fetched the remote branch.
[16:11:31] *** Quits: M3troidman (~buttler@196.244.191.100) (Ping timeout: 256 seconds)
[16:12:02] *** Quits: xiongxin (~Thunderbi@2409:8954:2e60:2a6:96e7:82a0:9aab:fe7f) (Ping timeout: 240 seconds)
[16:12:12] *** Joins: M3troidman (~buttler@196.244.191.100)
[16:13:05] <cousteau> Maybe the branch in the remote server has changed since then, but in any case it would diverge from the local branch anyway.  So git knows whether you have added stuff on top of the remote branch or not.  And before pushing your branch, git checks if the remote branch has changed.  If it hasn't (you have the latest version of the remote branch correctly mirrored), you can just push away.  If there are updates you hadn't fetched, it forces you to fetch, merge
[16:13:05] <cousteau> and push.
[16:13:45] <osse> I think you answered the opposite question :p
[16:14:34] <cousteau> I guess my point was "it doesn't matter, because of how git works"
[16:14:50] <cousteau> (well, it matters the moment you intend to push)
[16:14:57] <aniketgm> osse: lol. I searched so much I couldn't find the answer, and now I did. I think 'git remote update' does that. right ?
[16:15:08] <aniketgm> cousteau: ^^
[16:15:12] <osse> aniketgm: git remote update is essentially the same as git fethc
[16:15:49] <aniketgm> ok, so then I guess git status -uno will tell me if my local is ahead or not.
[16:17:27] <cousteau> basically, as osse said, when you do ˋgit statusˋ git will show the info of this branch with respect to the *local* copy it has of the remote branch, so the information it displays may not reflect the fact that the remote has new commits as well
[16:18:10] <aniketgm> I just wanted to know these things so I can manage my branch accordingly. I've messed up a lot in the past. Need to be careful beofre I make any unnecessary commits and blow up develop.
[16:18:31] <aniketgm> cousteau: oh!
[16:18:37] *** Quits: chenqisu1 (~chenqisu1@183.217.200.249) (Ping timeout: 240 seconds)
[16:19:38] <aniketgm> so before pulling from develop, is there any way I know what has changes ?
[16:19:49] <aniketgm> *changed
[16:21:34] <cousteau> Fetch
[16:22:11] <cousteau> Personally I never pull, I fetch and then merge FETCH_HEAD, which is the same but in two steps
[16:24:37] * aniketgm looking into fetch. I'm new to git so..
[16:25:11] <aniketgm> cousteau: thanks
[16:25:57] *** Joins: donofrio (~donofrio@c-68-40-123-74.hsd1.mi.comcast.net)
[16:29:00] <cousteau> git fetch will "pull" any commits from the remote repository that you don't have locally, and update which commit the remote branch is pointing to
[16:29:30] <cousteau> So you can see what has been going on remotely, e.g. in gitk
[16:30:04] <cousteau> You'll see your current branch and the commits you made, along with the commits that were done remotely
[16:30:34] <cousteau> git pull is a shortcut for git fetch + git merge
[16:34:02] *** Quits: luke-jr (~luke-jr@user/luke-jr) (Quit: ZNC - http://znc.sourceforge.net)
[16:34:06] *** Quits: M3troidman (~buttler@196.244.191.100) (Ping timeout: 245 seconds)
[16:35:02] *** Joins: luke-jr (~luke-jr@user/luke-jr)
[16:35:22] *** Joins: M3troidman (~buttler@196.244.191.100)
[16:37:38] *** Joins: hornbill (~hornbill0@111.92.77.217)
[16:38:21] *** Joins: skapata (~Skapata@2804:14c:87b0:9d2e:cd96:474c:cc93:ce17)
[16:38:21] *** Quits: skapata (~Skapata@2804:14c:87b0:9d2e:cd96:474c:cc93:ce17) (Changing host)
[16:38:21] *** Joins: skapata (~Skapata@user/skapata)
[16:40:51] *** Quits: roadie (~user@2a02:8108:5a40:1d87:31cd:2bdc:74d7:79e6) (Remote host closed the connection)
[16:41:05] *** Joins: roadie (~user@2a02:8108:5a40:1d87:695f:c99c:7fb1:9b97)
[16:41:51] *** Quits: vysn (~vysn@user/vysn) (Quit: WeeChat 3.4)
[16:43:31] <cousteau> Another point where I think git might be able to improve is in its handling of whitespace and newlines, at least for merges.  Unless it's already aware of those and handles them correctly rather than going for a strict line-based merge.
[16:44:48] <cousteau> One example being changes in indentation.
[16:46:07] *** Joins: diverdude (~user@176-21-102-230-cable.dk.customer.tdc.net)
[16:47:43] <cousteau> jim: re: the Linux kernel... Do commits take forever there due to its size?
[16:48:39] <cousteau> (in Linux.  I've had issues of stash and rebase taking forever in Windows due to the way they work internally, but that doesn't count)
[16:48:54] <diverdude> hello. i have a gitlab running inside a docker container on a machine. When i do git clone ssh://git@git.mycompany.com:27869/myproj/myproj.git (because ssh is forwarded through port 27869) git is asking me for a password. What user/password is this?
[16:49:16] <canton7> diverdude, if ssh is prompting for a password, it means you haven't set up your SSH keys correctly
[16:49:53] <diverdude> canton7: ah..i actually didnt add my key...thats probably why then
[16:50:02] *** Quits: aniketgm (~aniketgm@49.36.58.36) (Ping timeout: 240 seconds)
[16:50:04] <CarloWood> ARGH no... I just worked an hour using 'git add -p' adding 1000 lines to the index and leaving 500 in the working directory.  Then I did a 'git stash push' with the idea that ONLY the working directory would be pushed, and not the index.
[16:50:48] <CarloWood> Now the index was stashed too - I remember from a previous event that after a 'git stash pop' *everything* is in the working directory again and the index is empty :/
[16:51:03] <CarloWood> Is there still a way to get back what I added to the index?
[16:51:31] <canton7> CarloWood, try 'stash apply --index' ?
[16:51:49] <CarloWood> Won't that just put everything in the index then?
[16:52:02] <canton7> "Tries to reinstate not only the working tree’s changes, but also the index’s ones" -- suggests not
[16:52:21] <CarloWood> k
[16:53:43] <canton7> You might have needed to 'push --keep-index', I can't remember. Take a look at the 2 commits created by the stash in e.g. 'gitk --all', check whether your index's changes are stored separately to the working copy's
[16:54:11] <CarloWood> it worked :)
[16:54:30] <canton7> Nice!
[16:54:50] *** Joins: causa_sui (~causasui@c-68-60-125-136.hsd1.mi.comcast.net)
[16:55:17] *** Joins: tga (~tga@user/tga)
[16:56:01] <diverdude> canton7: hmm after having added my ssh key its still asking for password
[16:56:42] <osse> did you make a passphrase when you generated the key?
[16:56:48] <cousteau> Yeah it's weird that git stash is asymmetric in that stashing modifies the index by default, but unstashing doesn't
[16:56:51] <tga> hey. I have a long running feature branch that's been rebased from master, and smaller branches that should feed into the feature branch. reality check: what's the proper way of getting the changes from a feature-feature-branch back into the feature-branch after it's been rebased?
[16:56:59] <cousteau> Always had trouble with that
[16:57:05] *** Joins: antani (~antani@user/antani)
[16:57:22] <canton7> tga, most people don't branch features off features
[16:57:29] <canton7> so I'm not sure there is a "Proper" way
[16:57:45] <canton7> diverdude, run 'ssh -vvv git@git.mycompany.com:port' from that environment, see what the output is
[16:57:56] <CarloWood> diverdude: what do you get with you just try: ... that
[16:58:05] <cousteau> CarloWood: BTW, an alternative to git stash that causes fewer headaches is to use worktrees
[16:58:14] <tga> it makes sense to have smaller MRs on a long running feature branch that can't be deployed yet
[16:58:29] <tga> the screwup was rebasing the feature branch, now I'm not sure what to do with the MR branches
[16:58:51] <tga> rebase everything off master, then merge MRs into feature?
[16:59:26] <diverdude> canton7: dont you mean ssh -vvv git@git.mycompany.com -p PORT    ?
[16:59:43] <canton7> tga, yeah, you're going to have to rebase all of those smaller MRs onto the new updated feature branch
[16:59:47] <CarloWood> yes he did
[17:00:02] <canton7> diverdude, bleh, yes
[17:00:25] <CarloWood> He only beat me to it because I was still looking up how to pass the port :P
[17:03:07] * tga rebases all the things
[17:03:53] *** Quits: causa_sui (~causasui@c-68-60-125-136.hsd1.mi.comcast.net) (Ping timeout: 250 seconds)
[17:04:03] <diverdude> Ok...im getting this output: https://dpaste.org/uzJf
[17:05:38] *** Joins: szymon (~ugh@37.120.156.246)
[17:06:23] *** Quits: Gustavo6046 (~Gustavo60@user/gustavo6046) (Remote host closed the connection)
[17:07:47] <diverdude> canton7: can you see anything suspicious there?
[17:09:29] *** Quits: roadie (~user@2a02:8108:5a40:1d87:695f:c99c:7fb1:9b97) (Ping timeout: 252 seconds)
[17:10:06] *** Quits: antani (~antani@user/antani) (Remote host closed the connection)
[17:13:39] <geirha> It's trying to use id_rsa, but gitlab rejects it. I'd go into the gilab webui and double check that the id_rsa.pub was added correctly to your user's list of ssh keys
[17:14:39] *** Joins: geowiesnot (~user@5-51-190-244.abo.bbox.fr)
[17:14:55] *** Quits: fikran (~fikran@user/fikran) (Ping timeout: 250 seconds)
[17:16:31] <geirha> ssh-keygen -lf ~/.ssh/id_rsa.pub -E md5   prints the MD5 fingerprint of that key, it should match what you see in the gitlab SSH Keys page
[17:16:33] *** Joins: nyah (~nyah@05453449.skybroadband.com)
[17:16:34] <jim> cousteau, I'm not the right person to ask; 1, I don't work on the kernel at all, and 2, I don't work on anything nearly as large
[17:16:54] <diverdude> geirha: mmm i have tried to doublecheck and key really looks ok
[17:16:54] *** Joins: fikran (~fikran@user/fikran)
[17:17:55] <diverdude> geirha: the exact same fingerprint is getting printed
[17:19:04] <mackerman> diverdude: While on your gitlab profile,  check if the ssh key is restricted by policy, will have an icon   https://docs.gitlab.com/ee/security/ssh_keys_restrictions.html
[17:20:26] <diverdude> mackerman: hmm no, my key has an icon of a key
[17:22:58] *** Joins: aniketgm (~aniketgm@49.36.58.36)
[17:24:16] <diverdude> my setup is that machine A runs gitlab with these port mappings: 0.0.0.0:11022->22/tcp, 0.0.0.0:11080->80/tcp, 0.0.0.0:11443->443/tcp. machine A is behind a firwall where SSH is forwarded on port X, http on port Y and https on port Z
[17:24:23] *** Joins: mcpackey (~pm0001@p57b83e30.dip0.t-ipconnect.de)
[17:24:42] *** Joins: xx (~xx@user/xx)
[17:24:51] *** Joins: gh34 (~textual@cpe-184-58-181-106.wi.res.rr.com)
[17:25:02] *** Quits: murii (~murii@2a02:a58:835a:1100:d927:8ab3:6163:c6b0) (Remote host closed the connection)
[17:26:51] <diverdude> Could there be something in this setup that gives me the git login error?
[17:27:06] *** Quits: geowiesnot (~user@5-51-190-244.abo.bbox.fr) (Ping timeout: 260 seconds)
[17:28:56] <canton7> You said 11022, but the port you told SSH to connect to was 27869?
[17:30:32] <cousteau> jim: well, since you mentioned it as an example of a big project, I was curious if you were saying that it doesn't take that long to do git status, or that it does and it's really a problem
[17:30:46] *** Quits: drbeco (~beco@2804:351c:dd01:b700:1b03:6b85:20d4:ad73) (Ping timeout: 245 seconds)
[17:31:29] <diverdude> canton7: yes because on firwall 27869 is mapped to 22 on machine A, and docker machine is port mapping 0.0.0.0:11022->22
[17:31:34] <cousteau> 11022?  What happened to good ol' 2222?
[17:31:37] *** Joins: tyson2 (~user@bras-base-toroon0624w-grc-17-50-101-91-98.dsl.bell.ca)
[17:31:52] <cousteau> Or was that mostly for http? (8080)
[17:33:18] <cousteau> jim: guess I'll have to clone the Linux kernel and see for myself now :) Can't live with unsolved curiosities
[17:34:46] <canton7> diverdude, I've completely lost track of your setup, heh
[17:35:16] *** Joins: bambams (~bambams@user/bambams)
[17:35:29] <diverdude> :(
[17:35:45] *** Joins: roadie (~user@2a02:8108:5a40:1d87:31cd:2bdc:74d7:79e6)
[17:36:28] *** Joins: murii (~murii@2a02:a58:835a:1100:d927:8ab3:6163:c6b0)
[17:38:28] *** Quits: Xenguy (~Xenguy@user/xenguy) (Quit: Leaving)
[17:40:16] *** Quits: Spydar007 (~spydar007@user/spydar007) (Quit: Quit)
[17:40:59] <jim> cousteau, I'm given to understand that most such operations don't take long at all, including merges
[17:41:26] <jim> (on a project as large as the kernel)
[17:42:06] *** Joins: lightningwright (~lightning@user/lightningwright)
[17:42:31] *** Quits: roadie (~user@2a02:8108:5a40:1d87:31cd:2bdc:74d7:79e6) (Ping timeout: 256 seconds)
[17:46:05] *** Joins: Spydar007 (~spydar007@user/spydar007)
[17:46:35] *** Joins: odoood (~odoood@2601:c8:c000:c4e0::3)
[17:47:34] *** Joins: causa_sui (~causasui@c-68-60-125-136.hsd1.mi.comcast.net)
[17:49:48] *** Quits: rev1nchn_ (~rev1nchn@user/rev1nchn) (Ping timeout: 256 seconds)
[17:50:14] <jim> cousteau, yes, and you'll see some of that stuff. now, having said all that, remember that the linux kernel is not everything you'd be downloading, also you'd be getting the history from when git was first used on the kernel, and that's said to be even larger than the kernel itself. when I did a clone of the kernel (again, not a coder, but I was curious, and wanted to build kernels that come from git), a -clone- will take a long time
[17:50:17] <cousteau> jim: we'll see!  It's the status what I'm most concerned about, since anything else can be improved by, uh, "writing better software", but git status has the barrier of having to check EVERY file in the tree
[17:50:46] <jim> I think the clone took like 25 mins
[17:51:06] *** Joins: rev1nchn_ (~rev1nchn@user/rev1nchn)
[17:51:07] <cousteau> So far I've downloaded 2 GB of objects
[17:51:33] <jim> oh right, hope you have enough space :)
[17:51:55] <cousteau> BTW if you don't care about history you can shallow clone with --depth=1
[17:52:02] *** Quits: causa_sui (~causasui@c-68-60-125-136.hsd1.mi.comcast.net) (Ping timeout: 240 seconds)
[17:52:19] <cousteau> Oh boy, solving deltas using 4 of my 8 cores!
[17:52:22] <jim> interesting
[17:52:43] <cousteau> ...shouldn't it be using all of them?  Even if half of them aren't real cores
[17:52:51] <cousteau> (or are they?)
[17:52:59] <jim> most of the time will be spent on t5he networking part
[17:53:35] <jim> what cpu do you have, some amd? or maybe an i9?
[17:53:35] *** Quits: jalil (~jalil@2a01:e0a:277:4100:4b34:f28b:c1d1:3941) (Quit: jalil)
[17:53:41] *** Joins: jalil (~jalil@2a01:e0a:277:4100:f726:20ac:8c7a:b279)
[17:54:04] <cousteau> Ah, lscpu says I have 8 "processing threads" but only 4 cores
[17:54:25] *** Joins: causa_sui (~causasui@c-68-60-125-136.hsd1.mi.comcast.net)
[17:54:35] <jim> so i7?
[17:54:51] <cousteau> OK, deltas solved, now checking out files... Done!
[17:54:59] *** Quits: keypusher (keypusher@user/keypusher) (Remote host closed the connection)
[17:55:08] <jim> actually that was very fast
[17:55:09] *** Joins: hseg (~hseg@195.192.229.41)
[17:55:16] <cousteau> Took 6 minutes of "real" time for me
[17:55:25] <cousteau> Maybe your internet was slow
[17:55:39] *** Joins: drbeco (~beco@2804:351c:dd00:9600:7e60:24d6:7e4a:7676)
[17:55:41] <jim> could be. I have different net now
[17:55:58] *** Joins: keypusher (keypusher@user/keypusher)
[17:56:27] *** Joins: dharrigan (~dharrigan@user/dharrigan)
[17:56:28] <cousteau> With no files changed, `git status` took 0.368 seconds.
[17:56:38] <cousteau> What the hell is this nonsense
[17:57:59] *** Joins: Thanatermesis (~Thanaterm@191.92.148.122)
[17:58:27] *** Joins: gast0n (~g4570n@user/gast0n)
[17:58:41] *** Quits: causa_sui (~causasui@c-68-60-125-136.hsd1.mi.comcast.net) (Ping timeout: 245 seconds)
[17:59:26] *** Quits: hseg (~hseg@195.192.229.41) (Remote host closed the connection)
[17:59:35] *** Joins: hseg (~hseg@195.192.229.41)
[17:59:51] *** Joins: causa_sui (~causasui@c-68-60-125-136.hsd1.mi.comcast.net)
[17:59:52] *** Quits: hseg (~hseg@195.192.229.41) (Remote host closed the connection)
[18:00:24] *** Quits: Ranhir (~Ranhir@157.97.53.139) (Quit: KVIrc 5.0.0 Aria http://www.kvirc.net/)
[18:00:37] <dharrigan> Hi! Experimenting with worktrees. What would be the equivalant of `git rev-list master..origin/master`, for if I try that presently it complains about `fatal: ambiguous argument 'master..origin/master': unknown revision or path not in the working tree.`
[18:01:21] <osse> dharrigan: that command should work in all worktress
[18:01:24] *** Quits: JanC (~janc@user/janc) (Remote host closed the connection)
[18:01:27] <jim> my git status on the clone I got, an old clone of linux-stable, took about 4 secs
[18:01:38] *** Joins: JanC (~janc@user/janc)
[18:02:05] <cousteau> jim: My (possibly wrong) bash-fu says that the latest commit of the Linux kernel (master) has 74980 files and 4913 directories, excluding the .git dir
[18:02:08] *** Quits: epony (epony@user/epony) (Read error: Connection reset by peer)
[18:02:17] <dharrigan> osse: interestingly, can't seem to get that to work (I did `git worktree add master`, then cd'ed into master and ran that rev-list command, and got that response)
[18:03:01] <osse> dharrigan: does it work outside ?
[18:03:20] <dharrigan> no
[18:03:37] <osse> try 'git rev-list master..origin/master --'
[18:04:09] <dharrigan> `fatal: bad revision 'master..origin/master'`
[18:04:31] *** Quits: causa_sui (~causasui@c-68-60-125-136.hsd1.mi.comcast.net) (Ping timeout: 245 seconds)
[18:04:47] *** Joins: bloody (~bloody@user/bloody)
[18:04:50] <jim> cousteau, I think a "commit" is said to have all the files of what was directly committed in that commit, -and- the commits of all its parents, recursively
[18:04:51] <dharrigan> (on both the worktree and the bare repo)
[18:04:57] <osse> dharrigan: ok... did it even work before you made the worktree ?
[18:05:09] <dharrigan> yes, on a normal, non-bare version, yes.
[18:05:12] <cousteau> jim: pointers to, at least
[18:05:18] <cousteau> Think of it as a linked list
[18:05:30] <osse> dharrigan: the problem is likely that origin/master doesn't exist
[18:06:06] <cousteau> Anyway all that magic is buried inside the .git directory.  Anything outside of it is just the files that are part of the "snapshot" (commit)
[18:06:24] <jim> I think my machine is horribly swapping
[18:06:35] <dharrigan> osse: interesting, hmm, I wonder if origin doesn't exist if it's a worktree
[18:06:37] <dharrigan> testing
[18:06:48] <osse> dharrigan: how did you create this bare repo ?
[18:06:51] <jim> git log -1 took at least 15 secs
[18:07:07] <cousteau> jim: do you know how git is organized internally, in terms of objects, commits/blobs/trees, etc?  It's quite interesting actually, and helps understand git
[18:07:17] *** Joins: fandre1986 (~fandre198@131.228.48.68)
[18:07:22] <mackerman> cousteau: SMT threads are not real CPU cores
[18:07:42] <dharrigan> osse: `git clone --bare .....`
[18:08:09] <cousteau> For example, most people think a commit is basically a diff, but it's more a snapshot containing all files
[18:08:20] <osse> dharrigan: ah, unlike regular git clone this does not set up the usual mapping of master -> origin/master etc.
[18:08:27] <jim> that, I was aware of
[18:08:45] <osse> dharrigan: it'll just be a straight mirror without the distintion of the local master and remote master
[18:09:03] *** Joins: vanessa (~farawayas@103.160.128.7)
[18:09:06] <cousteau> Which you would think means that if your history contains 100 commits that's 100 copies of the whole code, but of course there are several kinds of "compression" involved
[18:09:18] <cousteau> (or at least... 2 kinds)
[18:09:27] *** Joins: vitali64 (~vitali64@user/vitali64)
[18:10:03] <dharrigan> osse: right I see, getting closer to the result. So, there's no origin, which explains why rev-list complains. So how would you compare a "remote" version of the branch if using a worktree?
[18:10:13] <cousteau> Like, if a file didn't change between commits, you don't end up with 2 copies of the file, you have 2 "pointers" to the same file, so to speak.  Or to the same file content.
[18:10:33] *** Joins: Ranhir (~Ranhir@157.97.53.139)
[18:10:51] <osse> dharrigan: I wouldn't :P
[18:11:01] <osse> It sounds like you want a regular clone, honestly
[18:11:19] <osse> but you can always change add the remote and that jazz
[18:11:49] <dharrigan> Right, okay, so yes, did an experiment. Cloned the repo as normally, then did `git worktree add ../foo` which works with rev-list.
[18:12:16] <dharrigan> going away to ponder my options now! thank you osse for your helpful insights :-)
[18:12:55] *** Joins: geowiesnot (~user@5-51-190-244.abo.bbox.fr)
[18:14:13] <CarloWood> *sigh* it went wrong again :(.  I did a  git stash push -k   and then wanted to undo that again; so I did a  git stash pop
[18:14:41] <jim> cousteau, curious, how much ram do you have?
[18:15:05] <CarloWood> That gave collisions... Weird ones, I didn't see any real collisions, but it had to do I guess with me editing diff hunks when doing  git add -p.
[18:15:14] <cousteau> CarloWood: it's better to apply and drop than to pop
[18:15:41] <cousteau> The first tutorial on stash I read didn't even mention pop, it went straight to apply and then drop
[18:16:02] <cousteau> I see how that would give collisions
[18:16:23] <CarloWood> Now I can't commit what I have in the index because error: Committing is not possible because you have unmerged files.
[18:16:48] <CarloWood> I don't want to change my index :/
[18:18:09] <CarloWood> I don't get it - when I do a  git stash -k,  it just stashes the diff in my working directory no? So it should have been easy to revert that :/
[18:18:24] <cousteau> CarloWood: maybe a better idea to create another worktree and do everything there, rather than attempting to use stash.  Maybe for the next time.
[18:18:57] <cousteau> Or maybe you still can leverage worktree to create a new worktree with the original commit, and apply the stash there if that's possible
[18:19:33] *** Joins: causa_sui (~causasui@c-68-60-125-136.hsd1.mi.comcast.net)
[18:21:28] *** Quits: zer0bitz (~zer0bitz@2001:2003:f74d:b800:3c9b:6dce:e374:3130) (Read error: Connection reset by peer)
[18:21:50] <cousteau> git stash -k means that it reverts the files in the file system to the version on the index, so the index is left intact.  But I think a copy of the index also gets stashed.
[18:21:51] *** Joins: Shashin (~Shashin@cpc112711-nmal22-2-0-cust53.19-2.cable.virginm.net)
[18:23:23] *** Joins: otisolsen70 (~otisolsen@xd4ed80b5.cust.hiper.dk)
[18:23:40] <aniketgm> c
[18:24:03] <cousteau> I'll be honest, git stash is quite unintuitive...
[18:25:20] <aniketgm> I read about it yesterday. One blog said imagine it as keeping it away but not removing it. so that, if required bring it back and continue development.
[18:25:31] *** Joins: cvmn (~caveman@gateway/tor-sasl/caveman)
[18:26:38] *** Joins: ELFrederich (~ELFrederi@siemens-industry-software-inc-216-196-155-202.static.fuse.net)
[18:27:24] *** Joins: rgrinberg (~textual@2806:101e:7:6bed:ed3c:cb5a:50ec:f83d)
[18:27:33] <ELFrederich> I can get the common ancestor of two branches via "git merge-base origin/branch1 origin/branch2", but how can I view it nicely?  I tried "git cat-file -p $(git merge-base origin/b1 origin/b2)" but that isn't a nice format to see the date
[18:28:31] <jim> the way the parameters of git-stash are, it looks like a stack
[18:28:34] *** Joins: ChmEarl (~chmearl@user/chmearl)
[18:29:23] <cousteau> aniketgm: yes, that's basically it.  The alternative is to use worktrees, which is like having a clone of the repo but without actually cloning the .git dir, so you can work on two branches of the same repo simultaneously
[18:30:01] <bremner> or just make temporary commits
[18:31:49] <cousteau> jim: yeah, the list of stashes is a stack, so that you can push a set of changes and then either apply "the last set of changes you pushed" and drop it, or leave it there and "I'll take care of it in the future"
[18:32:10] *** Joins: wonty (~Matthew@bras-base-otwaon1243w-grc-02-209-226-231-73.dsl.bell.ca)
[18:32:41] *** Quits: Shashin (~Shashin@cpc112711-nmal22-2-0-cust53.19-2.cable.virginm.net) (Quit: My MacBook has gone to sleep. ZZZzzz…)
[18:33:10] <cousteau> Think of the list of stashes as a to-do list; those are better dealt with as a stack, since you first take care of the last pending task you had
[18:33:22] *** Quits: vitali64 (~vitali64@user/vitali64) (Ping timeout: 260 seconds)
[18:34:07] <CarloWood> This stash use still managed to COMPLETELY screw up my 'git add -p' work :/
[18:34:17] *** Quits: worky (~Matthew@bras-base-otwaon1243w-grc-02-209-226-231-73.dsl.bell.ca) (Ping timeout: 240 seconds)
[18:34:25] <CarloWood> I'll never ever use stash again unless my index is empty, grrr.
[18:36:10] <cousteau> CarloWood: I think it can still be recovered.  Did you already commit the new thing you were working with?
[18:36:24] <CarloWood> nah - I reset everything now
[18:36:30] <cousteau> Oh :(
[18:36:49] <cousteau> If you reset everything you might be able to apply the stash with --index
[18:37:22] <cousteau> jim: BTW I just checked and the documentation for git stash never mentions it's a stack.  But it's totally a stack.
[18:38:17] <cousteau> (This is obvious since it has push and pop commands, although push is relatively new, it used to be "save" only)
[18:39:17] *** Joins: jmorgan (~jmorgan@vpn.lcec.net)
[18:39:18] *** Joins: roadie (~user@2a02:8108:5a40:1d87:bce8:1cab:adfc:b621)
[18:39:45] *** Parts: jmorgan (~jmorgan@vpn.lcec.net) ()
[18:44:41] <cousteau> (...well, not "obvious", but easy to guess)
[18:46:54] *** Quits: rgrinberg (~textual@2806:101e:7:6bed:ed3c:cb5a:50ec:f83d) (Quit: My MacBook has gone to sleep. ZZZzzz…)
[18:47:12] *** Quits: cousteau (~cousteau@user/cousteau) (Read error: Connection reset by peer)
[18:48:13] *** Quits: jnnnnnnnnn (~jnnnnnnnn@c-8f70524e.016-77-73746f43.bbcust.telenor.se) (Remote host closed the connection)
[18:49:25] *** Joins: great_taste (~great_tas@user/great-taste/x-5798414)
[18:50:08] *** Joins: vysn (~vysn@user/vysn)
[18:51:51] *** Parts: k_sze (~k_sze@mail2.kalunite.net) (Leaving)
[18:52:06] *** Joins: vitali64 (~vitali64@user/vitali64)
[18:52:07] <jim> that's what made it obvious to me too
[18:52:57] <jim> right, easy to guess, and there seem to be other ways it seems like a stack
[18:53:22] <jim> git stash apply pops the top one and applies that
[18:53:50] *** Joins: jnnnnnnnnn (~jnnnnnnnn@c-8f70524e.016-77-73746f43.bbcust.telenor.se)
[18:56:07] *** Azem is now known as haise01
[18:56:26] *** Joins: ferdna (~ferdna@user/ferdna)
[19:00:26] *** Joins: Guest75 (~Guest75@85.153.200.227)
[19:00:47] *** Quits: keypusher (keypusher@user/keypusher) (Remote host closed the connection)
[19:01:36] <Guest75> hi
[19:02:02] *** Quits: rev1nchn_ (~rev1nchn@user/rev1nchn) (Ping timeout: 240 seconds)
[19:02:14] <Guest75> i pushed an android app to github to master branch but there is also an main branch
[19:02:23] *** Joins: amikrop (~amikrop@2a02:587:545c:b600:9596:7dd:74e8:c7ee)
[19:02:32] <Guest75> to see my app code i have to change to master branch always
[19:02:39] <Guest75> what should i do? is everything ok?
[19:02:44] *** Joins: keypusher (keypusher@user/keypusher)
[19:03:19] <mackerman> Guest75: You are in control over what branches exist.
[19:03:43] <Guest75> or how can i move the files that are in the master branch to main branch
[19:04:18] <mackerman> Feel free to delete a branch that does not have anything important.
[19:04:23] <Guest75> i created a main branch in my local but i have some issues to push files to remote
[19:04:38] *** Quits: mcpackey (~pm0001@p57b83e30.dip0.t-ipconnect.de) (Remote host closed the connection)
[19:04:53] *** Quits: vanessa (~farawayas@103.160.128.7) (Remote host closed the connection)
[19:04:55] <Guest75> mackerman ok. i will try it now
[19:05:39] <Guest75> and i would like to create a directory for my mobile project in github. should i do it in my local or in remote and how?
[19:06:24] *** Quits: cvmn (~caveman@gateway/tor-sasl/caveman) (Ping timeout: 276 seconds)
[19:06:25] <mackerman> Make changes in your local repo, add, commit, and push.
[19:06:48] <CarloWood> local working directory, you mean.
[19:07:11] <Guest75> like android/kotlinCourse/Doggler.app
[19:07:13] *** Joins: clime (~clime@37-48-57-231.nat.epc.tmcz.cz)
[19:07:22] <Guest75> to just push Doggler.app
[19:07:36] <Guest75> and will i see these pathway in remote?
[19:07:41] *** Quits: murii (~murii@2a02:a58:835a:1100:d927:8ab3:6163:c6b0) (Remote host closed the connection)
[19:07:46] <Guest75> at remote github?
[19:08:22] <Guest75> by the way i deleted main branch and it worked thanks mackerman :)
[19:08:33] <CarloWood> Guest75: github misguidedly creates a 'main' branch in an attempt to push a Woke political agenda on the git users (claiming that the old 'master' branch is racist or something). So yeah, just delete the main branch.
[19:09:19] <Guest75> i am not racist too so, i will try to find using main branch next time :)
[19:09:27] *** Parts: amikrop (~amikrop@2a02:587:545c:b600:9596:7dd:74e8:c7ee) ()
[19:09:28] *** Joins: crashrep (~crashrep@user/crashrep)
[19:09:32] <mackerman> Again, you control what branches exist.
[19:09:39] *** Joins: thiago (~thiago@2601:1c0:4501:635c:7023:47d1:f798:c7ec)
[19:10:21] <mackerman> Do you know how to commit changes in your local repo ?
[19:10:28] <Guest75> yes, i know
[19:10:50] <Guest75> https://github.com/ksknysn/KotlinCourse
[19:10:57] <Guest75> this is my repoe :)
[19:11:31] <Guest75> but i think i should sum my android project in a folder like android/kotlinCourse
[19:11:37] <Guest75> android/personelProjects
[19:11:38] <Guest75> etc.
[19:11:39] <mackerman> commit locally. When you are happy with the result, push.
[19:12:55] *** Joins: leochiu (~leochiu@user/leochiu)
[19:13:14] <mackerman> git doesn't care what you tree looks like,  do what you want.
[19:13:23] <Guest75> i have a git folder in my local and open projects in it but android studio does it itself so i was not able to manage path for now
[19:13:45] *** Parts: cornfeedhobo (~cornfeedh@user/cornfeedhobo) (when i leave, come together like butt cheeks)
[19:13:54] <Guest75> right but github doesn't allow creating folder
[19:13:55] <tga> Guest75: you don't want to make any changes on github (for now), you just make the repo public there but that's it
[19:14:43] <tga> Guest75: anything you change in your working directory, you can commit to git, and that will go to github next time you push
[19:14:57] <mackerman> git doesn't track folders either, only files
[19:15:23] <CarloWood> Guest75: seriously? I am using master as master branch in all my projects. Are you saying I am racist?  The whole point is that words have meanings depending on their context. It is pathetic to try to push a meaning on words in other contexts (like the git context). To me it is clear what master branch means, there is no reason to change it because it does have absolutely nothing to do with racism.
[19:15:43] <CarloWood> I also have master/slave harddisks in my PC.  That is technical term.
[19:16:59] <bremner> OK, you said your bit, please let it rest. It's not helpful discussion.
[19:17:03] <osse> ... you do? You still have those IDE "belt" cabels?
[19:17:06] <osse> *cables
[19:17:27] <osse> i thought sata made master/slave irrelevant
[19:17:45] *** Joins: Gustavo6046 (~Gustavo60@user/gustavo6046)
[19:19:02] <CarloWood> I hope they didn't do that for the wrong reasons :P
[19:19:39] *** Joins: mannequin (uid453465@id-453465.helmsley.irccloud.com)
[19:21:01] <Guest75> https://git-scm.com is very helpful
[19:21:11] <bremner> !book
[19:21:11] <gitinfo> There are several good books available about git; 'Pro Git' is probably the best: https://git-scm.com/book but also look at !bottomup !cs !gcs !designers !gitt !vcbe and !parable
[19:21:21] <mackerman> Guest75: If you want to have a folder appear but don't have any files yet, commit any empty file into one
[19:21:35] <mackerman> A convention is to call it   .keep  but could be anything
[19:21:55] <bremner> another convention is to use an empty .gitignore file
[19:22:05] <nedbat> mackerman: another good convention is to write a readme.txt into that folder, so that you can explain to people why they have an empty folder.
[19:22:21] <tga> I was thinking about making a windows explorer based git tutorial, you should see what is being taught to barely technical users in academia
[19:22:21] <Guest75> ok. i am trying now :)
[19:22:47] <osse> nedbat: woah... the readme to explain the emptiness makes it non-empty
[19:22:57] <nedbat> osse: it can get meta
[19:23:02] *** Quits: zeenk (~zeenk@2a02:2f04:a30d:1300:51a3:bcfc:6cda:9fc5) (Quit: Konversation terminated!)
[19:23:18] <tga> "git commits record the changes to each file"
[19:23:35] <tga> I thought .gitkeep was pretty standard
[19:23:44] <mackerman> Doesn't matter can be anything
[19:24:03] *** Quits: fikran (~fikran@user/fikran) (Ping timeout: 250 seconds)
[19:24:03] <bremner> tga: not saying it matter, but I have never seen it
[19:24:06] *** Joins: murii (~murii@2a02:a58:835a:1100:d927:8ab3:6163:c6b0)
[19:24:15] <tga> there is also the question as to _why_ you'd want empty dirs in git
[19:24:35] <bremner> because you don't believe in build systems, probably
[19:24:38] <bremner> or it's just easier
[19:25:02] *** Joins: benni (~benni@ipbcc2c928.dynamic.kabel-deutschland.de)
[19:25:22] *** Quits: vakera_pingveno (~dan@2600:1700:21f9:b150::40) (Quit: Konversation terminated!)
[19:25:23] <Guest75> because i have machine learning projects and android projects i think it would be better they are in different folder.
[19:25:32] <mackerman> A directory for build artifacts that is not tracked.
[19:25:36] <Guest75> do i have a wrong idea?
[19:25:37] <tga> uhh so I had branch A and branched B off it, made changes to both A and B, then someone rebased A to master. any chance of painlessly merging B back into A?
[19:25:51] <mackerman> Guest75: No, again git does not care what you tree looks like
[19:26:15] *** Joins: fikran (~fikran@user/fikran)
[19:26:29] <Guest75> but when i share my github page to some how can i see my projects?
[19:26:35] <Guest75> how can they see?
[19:26:54] <tga> include a readme.md listing which files belong to which project ;)
[19:26:55] <mackerman> Guest75: GitHub has a different repo than your local one, and it is public
[19:27:17] <tga> Guest75: use as many dirs as you need, the only point was that git won't keep _empty_ dirs
[19:27:32] <Guest75> okay
[19:29:02] *** Joins: Swahili (~Swahili@a95-94-208-187.cpe.netcabo.pt)
[19:29:11] *** Quits: vysn (~vysn@user/vysn) (Ping timeout: 252 seconds)
[19:29:17] <Guest75> i will not waste my time for folder tree
[19:29:30] *** Quits: murii (~murii@2a02:a58:835a:1100:d927:8ab3:6163:c6b0) (Ping timeout: 250 seconds)
[19:30:07] *** Quits: kai[m] (~kaimatrix@2001:470:69fc:105::1:678) (Quit: You have been kicked for being idle)
[19:31:07] <Guest75> is there anybody here who contribute to git?
[19:31:23] <Guest75> i wonder how they earn from an open source project like this?
[19:31:36] *** Quits: 042AAVZ70 (~l4s8g@pd9e621d0.dip0.t-ipconnect.de) (Remote host closed the connection)
[19:31:57] <Swahili> Q: On git worktree -b branch /pathname, is it possible to create a worktree from a particular branch? Sometimes I want to branch out from a different branch then the one I'm at...
[19:32:03] <Swahili> Any suggestions? Thank you!
[19:32:11] <Swahili> I checked the --help but maybe missing it?!
[19:33:04] <Swahili> maybe it's the --checkout ?
[19:33:14] * tga wonders what a worktree is
[19:33:28] <Swahili> git worktree --checkout someFancyBranch -b myBranch /some/path
[19:33:36] <Swahili> tga: it's a cool feature! Check it out!
[19:33:50] <tga> ah, handy, I just copy paste the whole thing now
[19:33:55] <Swahili> tga: lets you have multiple work trees ( https://git-scm.com/docs/git-worktree )
[19:34:09] <Swahili> tga: yeh and easy to get started!
[19:34:12] <Swahili> crazy cool!
[19:34:21] *** Quits: crashrep (~crashrep@user/crashrep) (Ping timeout: 276 seconds)
[19:34:26] <tga> thanks for the tip, this will save me many redundant fetches
[19:34:55] <Swahili> tga: exactly! and this speed things up in such way that people start wondering how come you are so quick!!
[19:35:00] <Swahili> YOLO :D
[19:37:02] <tga> so uhh will a pull update all worktrees?
[19:37:08] * tga rtfms
[19:38:39] *** Quits: spare (~i3djj7znq@user/spareproject) (Remote host closed the connection)
[19:39:00] <Swahili> tga: I haven't tried it yet
[19:39:17] <Swahili> but I'd guess that no, as its isolated, you'd need to update all the individual worktrees
[19:40:45] <tga> yeah but I can fetch once and leave, and all of them will have the latest remotes, nice
[19:40:46] *** Joins: rgrinberg (~textual@187.223.115.137)
[19:41:21] *** Quits: Gustavo6046 (~Gustavo60@user/gustavo6046) (Quit: Leaving)
[19:41:39] *** Joins: Gustavo6046 (~AdminUser@2804:14d:4cd8:96b6:f57:b290:e69a:6832)
[19:41:57] *** Quits: Gustavo6046 (~AdminUser@2804:14d:4cd8:96b6:f57:b290:e69a:6832) (Client Quit)
[19:41:58] *** Noisytoot_ is now known as Noisytoot
[19:42:08] *** Joins: molt (~molt@178-222-245-206.static.isp.telekom.rs)
[19:43:01] *** Quits: leochiu (~leochiu@user/leochiu) (Ping timeout: 240 seconds)
[19:46:10] *** Joins: epony (~epony@user/epony)
[19:53:06] <tga> Swahili: I think the answer to your question is --checkout
[19:53:26] <tga> `git worktree --checkout some-branch ../my-worktree`
[19:53:31] *** Quits: benni (~benni@ipbcc2c928.dynamic.kabel-deutschland.de) (Quit: Client closed)
[19:53:43] <Swahili> tga: yeh thought so, will have to try again got this error
[19:53:55] <Swahili> fatal: Not a valid object name: '../pathname/blabla'
[19:54:10] <Swahili> preceded by Preparing worktree (new branch 'chore/utility-scripts')
[19:54:12] <tga> `git worktree --checkout ../my-worktree some-branch`
[19:54:18] <tga> ^^ branch goes at the end, sorry
[19:54:35] *** Joins: ThorMojito (~Adium@modemcable212.77-202-24.mc.videotron.ca)
[19:54:42] <Swahili> tga: oh... thanks for noticing that
[19:54:57] <Swahili> git worktree add [-f] [--detach] [--checkout] [--lock] [-b <new-branch>] <path> [<commit-ish>]
[19:55:04] <tga> I also got that wrong first time I tried it
[19:55:26] <Swahili> would be nicer if they did --checkout branch but anyway works fine
[19:55:42] <tga> +1
[19:57:46] *** Joins: murii (~murii@2a02:a58:835a:1100:d927:8ab3:6163:c6b0)
[20:01:15] *** Quits: fandre1986 (~fandre198@131.228.48.68) (Quit: Connection closed)
[20:02:13] *** Quits: murii (~murii@2a02:a58:835a:1100:d927:8ab3:6163:c6b0) (Ping timeout: 240 seconds)
[20:02:26] *** Joins: roadie` (~user@2a02:8108:5a40:1d87:ad3d:bf25:18ab:d30e)
[20:03:06] *** Joins: murii (~murii@2a02:a58:835a:1100:d927:8ab3:6163:c6b0)
[20:05:39] *** Quits: roadie (~user@2a02:8108:5a40:1d87:bce8:1cab:adfc:b621) (Ping timeout: 250 seconds)
[20:05:58] *** Joins: dflick (~dflick@75-148-140-77-Houston.hfc.comcastbusiness.net)
[20:08:02] *** Joins: lavos (~molt@178-222-245-206.static.isp.telekom.rs)
[20:11:31] *** Joins: mat001 (~mat001@c-69-181-155-247.hsd1.ca.comcast.net)
[20:11:32] *** Quits: molt (~molt@178-222-245-206.static.isp.telekom.rs) (Ping timeout: 240 seconds)
[20:12:18] *** Joins: molt (~molt@178-222-245-206.static.isp.telekom.rs)
[20:12:29] *** Quits: molt (~molt@178-222-245-206.static.isp.telekom.rs) (Client Quit)
[20:12:38] *** Joins: eXtr3m0_ (~eXtr3m0@p4fd3a0d7.dip0.t-ipconnect.de)
[20:13:37] *** Quits: vitali64 (~vitali64@user/vitali64) (Ping timeout: 240 seconds)
[20:15:01] *** Quits: lavos (~molt@178-222-245-206.static.isp.telekom.rs) (Ping timeout: 240 seconds)
[20:15:43] *** Joins: vitali64 (~vitali64@user/vitali64)
[20:15:56] *** Quits: ferdna (~ferdna@user/ferdna) (Quit: Leaving)
[20:20:59] *** Quits: Rashad (~textual@86.108.22.173) (Quit: My MacBook Air has gone to sleep. ZZZzzz…)
[20:23:07] *** Quits: Shentino (~shentino@user/shentino) (Ping timeout: 256 seconds)
[20:23:40] *** Quits: aniketgm (~aniketgm@49.36.58.36) (Quit: leaving)
[20:26:09] <nedbat> I'm running a git rebase command, and it is outputting '\nRebasing (1/2)\nRebasing (2/2)\n\n\x1b[KSuccessfully rebased and updated refs/heads/my-work.\n'  Is there a way to get it to not use escape sequences? I tried GIT_PAGER=cat, but it still happens.
[20:29:00] *** Joins: Rashad (~textual@86.108.22.173)
[20:29:00] *** Quits: cliluw (~cliluw@47.147.73.223) (Read error: Connection reset by peer)
[20:29:25] *** Joins: cliluw (~cliluw@47.147.73.223)
[20:30:10] *** Quits: Rashad (~textual@86.108.22.173) (Read error: Connection reset by peer)
[20:31:04] *** Joins: Gustavo6046 (~Gustavo60@user/gustavo6046)
[20:31:09] *** Joins: ekathva (~ekathva@2001:999:50:cab1:d271:1874:582c:870e)
[20:31:49] *** Quits: Gustavo6046 (~Gustavo60@user/gustavo6046) (Client Quit)
[20:32:45] *** Quits: rgrinberg (~textual@187.223.115.137) (Quit: My MacBook has gone to sleep. ZZZzzz…)
[20:32:59] *** Quits: ekathva (~ekathva@2001:999:50:cab1:d271:1874:582c:870e) (Remote host closed the connection)
[20:35:57] *** Quits: shailangsa (~shailangs@host217-39-45-199.range217-39.btcentralplus.com) (Remote host closed the connection)
[20:35:57] *** Quits: vitali64 (~vitali64@user/vitali64) (Ping timeout: 240 seconds)
[20:39:31] *** Joins: rgrinberg (~textual@2806:101e:7:6bed:ed3c:cb5a:50ec:f83d)
[20:41:52] *** Joins: Shentino (~shentino@user/shentino)
[20:47:31] *** Joins: polyphem_ (~rod@2a02:810d:840:8754:f9b2:95ef:efe9:3c0f)
[20:48:03] *** Quits: luke-jr (~luke-jr@user/luke-jr) (Quit: ZNC - http://znc.sourceforge.net)
[20:49:31] *** Quits: polyphem (~rod@2a02:810d:840:8754:e075:74dd:6e37:209d) (Ping timeout: 245 seconds)
[20:49:45] *** Quits: cliluw (~cliluw@47.147.73.223) (Ping timeout: 256 seconds)
[20:50:05] *** cryptone1tor is now known as cryptonector
[20:50:07] *** Joins: luke-jr (~luke-jr@user/luke-jr)
[20:50:09] *** Joins: cliluw (~cliluw@47.147.73.223)
[20:52:55] *** Joins: john_johnk (~Thunderbi@232.58.140.77.rev.sfr.net)
[20:53:06] *** Quits: john_johnk (~Thunderbi@232.58.140.77.rev.sfr.net) (Client Quit)
[20:53:40] *** Joins: john_johnk (~Thunderbi@232.58.140.77.rev.sfr.net)
[20:55:16] <imMute> nedbat: you probably don't want to try consuming the output from porcelain commands in a script.  it's not a stable output
[20:56:37] *** Joins: tirnanog (~tirnanog@user/tirnanog)
[20:59:03] <nedbat> imMute: in this case I'm just trying to capture it to put into a blog post showing what happens.
[20:59:21] *** Joins: spare (~g2qmwuuxq@user/spareproject)
[20:59:33] <imMute> a gif would probably be better in this case, because some of those \n's are actually \r's
[20:59:40] <imMute> and it overwrites existing output
[20:59:49] *** Quits: rfuentess (~rfuentess@static-5-51-117-151.ftth.abo.bbox.fr) (Remote host closed the connection)
[21:01:42] <nedbat> imMute: TERM=dumb will turn off the escapes.  i wonder what turned the \r into \n ?
[21:01:54] <mackerman> https://asciinema.org/  would be even better as it replays as text
[21:03:02] *** Joins: shailangsa (~shailangs@host217-39-45-199.range217-39.btcentralplus.com)
[21:04:37] *** Quits: carl-- (~carl-@c-138ee555.02-180-73746f39.bbcust.telenor.se) (Ping timeout: 240 seconds)
[21:08:15] *** Joins: terminalpusher (~terminalp@2a01:586:c811:1:5c46:8c99:ea68:5e78)
[21:11:17] *** Quits: rgrinberg (~textual@2806:101e:7:6bed:ed3c:cb5a:50ec:f83d) (Ping timeout: 240 seconds)
[21:11:45] *** Joins: goldfish (~goldfish@user/goldfish)
[21:12:01] *** Quits: hornbill (~hornbill0@111.92.77.217) (Remote host closed the connection)
[21:12:48] *** Joins: stewie925 (~stewie925@2600:1702:44f0:35c0:dc3f:455b:3e34:63a6)
[21:15:11] *** Joins: vitali64 (~vitali64@user/vitali64)
[21:15:33] *** Joins: Shashin (~Shashin@cpc112711-nmal22-2-0-cust53.19-2.cable.virginm.net)
[21:15:54] <nedbat> none of you are going to like this, but:  TERM=dumb git rebase ... 2>&1 | tr '\r' '\n' | tail -1
[21:16:36] *** Quits: feriman (~feriman@188.163.113.151) (Quit: leaving)
[21:16:53] *** Quits: mat001 (~mat001@c-69-181-155-247.hsd1.ca.comcast.net) (Remote host closed the connection)
[21:17:31] *** Joins: mat001 (~mat001@72.28.108.216)
[21:17:57] *** Quits: mexen (uid495612@user/mexen) (Quit: Connection closed for inactivity)
[21:19:05] *** Joins: feriman (~feriman@188.163.113.151)
[21:22:04] <j416> copypaste it from the terminal manually?
[21:23:08] <nedbat> j416: thanks, but it's done and it works :)
[21:23:49] <j416> >.>
[21:24:05] *** Joins: Akiva (~Akiva@user/Akiva)
[21:24:19] *** Quits: MajorBiscuit (~MajorBisc@wlan-145-94-218-48.wlan.tudelft.nl) (Ping timeout: 256 seconds)
[21:25:17] *** Joins: emf (~emf@2620:10d:c090:400::5:21fc)
[21:25:18] *** Quits: Shashin (~Shashin@cpc112711-nmal22-2-0-cust53.19-2.cable.virginm.net) (Quit: My MacBook has gone to sleep. ZZZzzz…)
[21:25:53] *** Joins: sudoforge (~sudoforge@wireguard/tunneler/sudoforge)
[21:26:10] *** Quits: terminalpusher (~terminalp@2a01:586:c811:1:5c46:8c99:ea68:5e78) (Remote host closed the connection)
[21:26:35] *** Quits: ELFrederich (~ELFrederi@siemens-industry-software-inc-216-196-155-202.static.fuse.net) (Remote host closed the connection)
[21:28:04] *** Joins: duxsco (~Thunderbi@user/duxsco)
[21:29:07] <mat001> Question about flask gettin data from the form (it's rely "quart", the asycnc ver of flask, but it's similar). How do I get the form data, specifically the text of the selected checkboxes in the submit form. Right now I have request.form.. before I render_template. Will this get me the data after I submit?
[21:29:46] <imMute> mat001: I think you're in the wrong channel
[21:30:16] <j416> yeah go away
[21:30:23] <mat001> oops, you're right. Sorry. Shoud be in Python. I saw some Python folks named here so got confused ;-)
[21:30:48] *** Joins: zeenk (~zeenk@2a02:2f04:a30d:1300:51a3:bcfc:6cda:9fc5)
[21:31:47] *** Quits: duxsco (~Thunderbi@user/duxsco) (Client Quit)
[21:32:33] *** Joins: ___nick___ (~quassel@cpc68286-cdif17-2-0-cust533.5-1.cable.virginm.net)
[21:32:53] *** Joins: Shashin (~Shashin@cpc112711-nmal22-2-0-cust53.19-2.cable.virginm.net)
[21:33:25] *** Quits: fikran (~fikran@user/fikran) (Ping timeout: 250 seconds)
[21:35:07] <Guest75> Git' is probably the best: https://git-scm.com/book but also look at !bottomup !cs !gcs !designers !gitt !vcbe and !parable
[21:35:07] <gitinfo> 'Git from the bottom up' starts with explaining the building blocks of git and proceeds to tell you how they fit together. https://jwiegley.github.io/git-from-the-bottom-up/
[21:35:07] <gitinfo> "Git for Computer Scientists" is a quick introduction to git internals for people who are not scared by phrases like Directed Acyclic Graph. http://eagain.net/articles/git-for-computer-scientists/ See also !concepts !bottomup
[21:35:07] <gitinfo> [!concepts] "Git Concepts Simplified" presents all the important structures in Git, step by step, including selected internal details so it becomes much easier to understand what's going on whenever something's going on. http://gitolite.com/gcs.html
[21:35:09] <gitinfo> 'Git for Web Designers' is a quick "Who why what when how" on VCS and git: http://www.webdesignerdepot.com/2009/03/intro-to-git-for-web-designers/
[21:35:13] <gitinfo> A book designed to teach people about Git in a real world usage model. The book follows a fictional company as they implement and learn about Git. Covers all 21 standard Git commands. Available for free at http://cbx33.github.io/gitt/
[21:35:17] <gitinfo> 'Version Control By Example' gives a good overview of the different VCSes available. The author will even mail you a dead-tree copy for free. https://ericsink.com/vcbe/index.html
[21:35:20] <gitinfo> 'The git parable' provides some good reasoning behind git.  http://tom.preston-werner.com/2009/05/19/the-git-parable.html
[21:35:25] *** Quits: tga (~tga@user/tga) (Ping timeout: 256 seconds)
[21:35:27] <Guest75> Git' is probably the best: https://git-scm.com/book but also look at !bottomup !cs !gcs !designers !gitt !vcbe and !parable.. what are these? bottomup cs etch
[21:35:28] <gitinfo> 'Git from the bottom up' starts with explaining the building blocks of git and proceeds to tell you how they fit together. https://jwiegley.github.io/git-from-the-bottom-up/
[21:35:28] <gitinfo> "Git for Computer Scientists" is a quick introduction to git internals for people who are not scared by phrases like Directed Acyclic Graph. http://eagain.net/articles/git-for-computer-scientists/ See also !concepts !bottomup
[21:35:31] <gitinfo> [!concepts] "Git Concepts Simplified" presents all the important structures in Git, step by step, including selected internal details so it becomes much easier to understand what's going on whenever something's going on. http://gitolite.com/gcs.html
[21:35:35] <gitinfo> 'Git for Web Designers' is a quick "Who why what when how" on VCS and git: http://www.webdesignerdepot.com/2009/03/intro-to-git-for-web-designers/
[21:35:36] *** Joins: fikran (~fikran@user/fikran)
[21:35:41] <gitinfo> A book designed to teach people about Git in a real world usage model. The book follows a fictional company as they implement and learn about Git. Covers all 21 standard Git commands. Available for free at http://cbx33.github.io/gitt/
[21:35:45] <gitinfo> 'Version Control By Example' gives a good overview of the different VCSes available. The author will even mail you a dead-tree copy for free. https://ericsink.com/vcbe/index.html
[21:35:48] <gitinfo> 'The git parable' provides some good reasoning behind git.  http://tom.preston-werner.com/2009/05/19/the-git-parable.html
[21:36:10] *** Quits: Vonter (~Vonter@user/vonter) (Quit: WeeChat 3.4)
[21:36:25] <mackerman> Now you expanded all the links, have fun
[21:36:36] <imMute> wow.
[21:37:40] <mackerman> Those are books or guides about git, most of which have examples.
[21:37:57] *** Joins: Betal (~Betal@user/betal)
[21:39:00] *** Joins: toma (~RubbishPu@node-1w7jr9yhpl48a1a6mr4fc6eyr.ipv6.telus.net)
[21:39:15] *** Quits: toma (~RubbishPu@node-1w7jr9yhpl48a1a6mr4fc6eyr.ipv6.telus.net) (Remote host closed the connection)
[21:39:16] *** Joins: vdamewood (~vdamewood@fedora/vdamewood)
[21:39:40] *** Joins: toma (~RubbishPu@node-1w7jr9yhpl48a1a6mr4fc6eyr.ipv6.telus.net)
[21:40:31] *** Joins: duxsco (~Thunderbi@user/duxsco)
[21:42:30] *** Quits: Shashin (~Shashin@cpc112711-nmal22-2-0-cust53.19-2.cable.virginm.net) (Quit: My MacBook has gone to sleep. ZZZzzz…)
[21:45:11] *** Joins: vicfred (~vicfred@user/vicfred)
[21:48:02] *** Joins: rgrinberg (~textual@187.223.115.137)
[21:48:44] *** Joins: joeb (~joeb@host86-178-173-101.range86-178.btcentralplus.com)
[21:48:56] *** polyphem_ is now known as polyphem
[21:53:59] *** Quits: drbeco (~beco@2804:351c:dd00:9600:7e60:24d6:7e4a:7676) (Quit: Leaving)
[21:54:22] *** Joins: nattiestnate (~nate@2001:448a:4063:1cc8:3706:7ea7:62f5:aeaf)
[21:54:40] *** Quits: geowiesnot (~user@5-51-190-244.abo.bbox.fr) (Ping timeout: 250 seconds)
[22:00:12] <joeb> Heya! I have a query about git-gui. Whenever I clone a repo, the git gui creates a branch called master (or whatever I've set git config --global init.defaultBranch to) even if there is no such branch on the remote.
[22:00:13] <joeb> Using cli git doesn't do this, so I can't understand why git-gui would. Is there a reason I'm missing?
[22:00:13] <joeb> I'm trying to put together a very simple workflow for our users but they aren't very git-literate and this is throwing a spanner in the works. If there's no good reason, I'll file a bug report
[22:02:36] <imMute> joeb: sounds like a bug.
[22:02:46] *** Quits: mei (~mei@user/mei) (Quit: mei)
[22:05:29] *** Quits: vitali64 (~vitali64@user/vitali64) (Ping timeout: 250 seconds)
[22:06:52] <nightstrike> I renamed a file (git mv) and made some changes to it, but then I accidentally committed it along with unrelated changes.  How do I pull that out of the most recent commit?
[22:07:08] *** Quits: ThorMojito (~Adium@modemcable212.77-202-24.mc.videotron.ca) (Quit: Leaving.)
[22:07:15] <nightstrike> I'm not ready to commit it yet, as there are more changes I'd be making
[22:07:20] *** Joins: vitali64 (~vitali64@user/vitali64)
[22:07:26] <nightstrike> and it would be in a completely separate commit anyway
[22:07:53] <nightstrike> I just got screwed up because I was quickly doing a "git add -p" of a part of a different file, and then I did a git commit, which also grabbed the already staged rename
[22:08:03] *** Joins: Shashin (~Shashin@cpc112711-nmal22-2-0-cust53.19-2.cable.virginm.net)
[22:08:58] <nightstrike> git status still shows "deleted: oldfile"
[22:11:40] *** Joins: drbeco (~beco@2804:351c:dd00:9600:7e60:24d6:7e4a:7676)
[22:13:41] *** Quits: Tobbi_ (~Thunderbi@31.209.188.226) (Remote host closed the connection)
[22:14:01] <mackerman> nightstrike: git rebase --interactive  to  edit the commits
[22:14:17] <mackerman> man git rebase    see  splitting commits
[22:14:17] <gitinfo> the git-rebase manpage is available at https://gitirc.eu/git-rebase.html
[22:16:17] *** Quits: joeb (~joeb@host86-178-173-101.range86-178.btcentralplus.com) (Quit: Ping timeout (120 seconds))
[22:16:56] *** Quits: toma (~RubbishPu@node-1w7jr9yhpl48a1a6mr4fc6eyr.ipv6.telus.net) (Quit: Leaving)
[22:20:16] *** Quits: jelmer (~jelmer@user/jelmer) (Remote host closed the connection)
[22:21:22] *** Quits: ___nick___ (~quassel@cpc68286-cdif17-2-0-cust533.5-1.cable.virginm.net) (Quit: https://quassel-irc.org - Chat comfortably. Anywhere.)
[22:23:02] *** Joins: ___nick___ (~quassel@cpc68286-cdif17-2-0-cust533.5-1.cable.virginm.net)
[22:24:11] *** Quits: thebombzen (~thebombze@c-68-41-54-207.hsd1.mi.comcast.net) (Quit: Quit)
[22:24:17] *** Joins: joeb (~joeb@host86-178-173-101.range86-178.btcentralplus.com)
[22:25:03] *** Joins: thebombzen (~thebombze@c-68-41-54-207.hsd1.mi.comcast.net)
[22:25:20] *** Quits: drbeco (~beco@2804:351c:dd00:9600:7e60:24d6:7e4a:7676) (Quit: Leaving)
[22:25:31] *** Quits: cliluw (~cliluw@47.147.73.223) (Ping timeout: 256 seconds)
[22:26:42] *** Quits: dflick (~dflick@75-148-140-77-Houston.hfc.comcastbusiness.net) (Ping timeout: 260 seconds)
[22:28:42] *** Joins: drbeco (~beco@2804:351c:dd00:9600:7e60:24d6:7e4a:7676)
[22:28:51] *** Joins: Rashad (~textual@86.108.22.173)
[22:31:06] *** Joins: dflick (~dflick@75-148-140-77-Houston.hfc.comcastbusiness.net)
[22:32:37] *** Quits: duxsco (~Thunderbi@user/duxsco) (Ping timeout: 240 seconds)
[22:33:11] *** Joins: duxsco (~Thunderbi@user/duxsco)
[22:37:41] *** Joins: ThorMojito (~Adium@modemcable212.77-202-24.mc.videotron.ca)
[22:37:58] *** Quits: ThorMojito (~Adium@modemcable212.77-202-24.mc.videotron.ca) (Client Quit)
[22:37:59] *** Quits: vitali64 (~vitali64@user/vitali64) (Ping timeout: 256 seconds)
[22:38:38] *** Joins: jazzy (~jaziz@user/jaziz)
[22:39:43] *** Quits: Shashin (~Shashin@cpc112711-nmal22-2-0-cust53.19-2.cable.virginm.net) (Quit: My MacBook has gone to sleep. ZZZzzz…)
[22:41:18] *** Joins: vysn (~vysn@user/vysn)
[22:41:18] *** Joins: Shashin (~Shashin@cpc112711-nmal22-2-0-cust53.19-2.cable.virginm.net)
[22:41:37] *** Joins: AbleBacon (~AbleBacon@user/AbleBacon)
[22:43:22] *** Joins: ThorMojito (~Adium@modemcable212.77-202-24.mc.videotron.ca)
[22:46:14] *** Quits: john_johnk (~Thunderbi@232.58.140.77.rev.sfr.net) (Ping timeout: 250 seconds)
[22:49:29] *** Quits: thebombzen (~thebombze@c-68-41-54-207.hsd1.mi.comcast.net) (Quit: Quit)
[22:50:25] *** Quits: great_taste (~great_tas@user/great-taste/x-5798414) (Quit: Client closed)
[22:50:31] *** Quits: Shashin (~Shashin@cpc112711-nmal22-2-0-cust53.19-2.cable.virginm.net) (Quit: My MacBook has gone to sleep. ZZZzzz…)
[22:50:54] *** Joins: great_taste (~great_tas@user/great-taste/x-5798414)
[22:51:59] *** Joins: thebombzen (~thebombze@c-68-41-54-207.hsd1.mi.comcast.net)
[22:52:08] *** Quits: Guest75 (~Guest75@85.153.200.227) (Quit: Client closed)
[22:55:05] *** Quits: palasso (~palasso@user/palasso) (Read error: Connection reset by peer)
[22:56:33] *** Joins: palasso (~palasso@user/palasso)
[22:57:07] *** Quits: anddam (~anddam@user/anddam) (Quit: WeeChat 3.4)
[22:58:32] *** Joins: lechner (~lechner@debian/lechner)
[22:58:45] *** Joins: anddam (~anddam@user/anddam)
[22:59:31] *** Quits: stewie925 (~stewie925@2600:1702:44f0:35c0:dc3f:455b:3e34:63a6) (Quit: Client closed)
[23:01:58] *** Quits: Rashad (~textual@86.108.22.173) (Quit: My MacBook Air has gone to sleep. ZZZzzz…)
[23:02:42] *** Quits: murii (~murii@2a02:a58:835a:1100:d927:8ab3:6163:c6b0) (Remote host closed the connection)
[23:05:55] *** Quits: duxsco (~Thunderbi@user/duxsco) (Ping timeout: 250 seconds)
[23:09:48] *** Joins: k8yun (~k8yun@user/k8yun)
[23:12:29] *** Quits: lightningwright (~lightning@user/lightningwright) (Ping timeout: 252 seconds)
[23:12:37] *** Quits: vysn (~vysn@user/vysn) (Ping timeout: 240 seconds)
[23:12:57] *** Quits: dflick (~dflick@75-148-140-77-Houston.hfc.comcastbusiness.net) (Ping timeout: 240 seconds)
[23:13:10] *** Joins: DibbTubberOne (~DibbDibbe@2a02:908:956:3ce0::3530)
[23:14:39] *** Joins: stewie925 (~stewie925@2600:1702:44f0:35c0:dc3f:455b:3e34:63a6)
[23:15:11] *** Joins: geowiesnot (~user@5-51-190-244.abo.bbox.fr)
[23:15:43] *** Quits: ThorMojito (~Adium@modemcable212.77-202-24.mc.videotron.ca) (Quit: Leaving.)
[23:18:29] *** Joins: murii (~murii@2a02:a58:835a:1100:d927:8ab3:6163:c6b0)
[23:21:11] *** Joins: duxsco (~Thunderbi@user/duxsco)
[23:21:13] *** Quits: duxsco (~Thunderbi@user/duxsco) (Client Quit)
[23:22:14] *** Joins: ferdna (~ferdna@user/ferdna)
[23:22:37] *** Quits: murii (~murii@2a02:a58:835a:1100:d927:8ab3:6163:c6b0) (Ping timeout: 240 seconds)
[23:23:28] *** Quits: stewie925 (~stewie925@2600:1702:44f0:35c0:dc3f:455b:3e34:63a6) (Quit: Client closed)
[23:25:50] *** Joins: ale (~ale@145.40.213.56)
[23:27:24] <ale> hi... i'd like to get a single branch of an svn repository into a new git repository...
[23:28:02] <ale> i'm close to the expected results, but i still get a few more branches that are refs on the branch i need.
[23:28:49] <ale> this is what i'm trying to "import": https://www.scribus.net/websvn/listing.php?repname=Scribus&path=%2Fbranches%2FVersion15x%2F&#a4eb6ac5d55a7aea207ba79ea9fdd4988
[23:28:54] <j416> you can select what branch to include with the .. what is it, prefix or whatnot
[23:28:59] <j416> when you import it
[23:29:08] <ale> and this is the result: https://gitlab.com/scribus/scribus16
[23:29:38] <j416> that's a private repo it seems like
[23:29:41] <ale> here are the commands i'm issuing:
[23:29:50] <ale> ooops sorry i'll make it public right away
[23:30:09] <cbreak> git svn can "convert" a branch subdirectory from svn
[23:30:23] <cbreak> if you simply point it at the directory in branches instead of trunk
[23:30:28] <j416> ^
[23:30:32] <cbreak> or what ever messed up layout you have in your repo
[23:31:01] <ale> https://paste.opensuse.org/view/simple/23599882
[23:31:09] <cbreak> you won't get the common parts of history though
[23:31:31] <ale> the relevant line is probably
[23:31:33] <ale> git config --add svn-remote.svn.fetch "branches/$branch/Scribus:"
[23:31:56] *** Quits: rgrinberg (~textual@187.223.115.137) (Quit: My MacBook has gone to sleep. ZZZzzz…)
[23:31:57] <cbreak> why are you not using git svn?
[23:32:09] <cbreak> man git-svn
[23:32:09] <gitinfo> the git-svn manpage is available at https://gitirc.eu/git-svn.html
[23:32:14] <j416> wow, didn't know git could fetch from an svn repo like that
[23:32:26] *** Quits: odoood (~odoood@2601:c8:c000:c4e0::3) (Ping timeout: 245 seconds)
[23:32:35] *** Quits: rwp (~invalid@havoc.proulx.com) (Ping timeout: 250 seconds)
[23:32:37] <cbreak> in particular git svn clone might be useful
[23:32:47] <ale> https://gitlab.com/scribus/scribus16 should now be public
[23:33:18] *** Quits: jalil (~jalil@2a01:e0a:277:4100:f726:20ac:8c7a:b279) (Quit: jalil)
[23:33:42] *** Joins: Ilyu (~quassel@166.215.82.79.rev.sfr.net)
[23:33:58] *** Quits: rsx (~dummy@ppp-188-174-150-145.dynamic.mnet-online.de) (Quit: rsx)
[23:34:02] <ale> cbreak, that's about using git-svn (as far as i can tell)
[23:34:24] <cbreak> that's correct.
[23:34:25] *** Joins: x_kuru (~xkuru@user/xkuru)
[23:34:49] <cbreak> git svn is a good way to get svn history into a git repository
[23:34:56] *** Joins: rgrinberg (~textual@2806:101e:7:6bed:f1e5:db7b:1d69:5e00)
[23:35:47] <ale> thanks for pointing to the man... i guess that https://www.bible.com/ might also be helpful : - (
[23:36:23] *** Joins: lightningwright (~lightning@user/lightningwright)
[23:36:25] <bananer> I'm writing a script to automate a few steps with git, and I want to verify that there are no staged changes at a certain point. Is there a better way of doing that then running `git diff --cached` and seeing if the output is empty? Some command maybe that will return a different exit code depending on whether the stage is empty or not?
[23:36:48] <cbreak> bananer: yes, man git-diff
[23:36:48] <gitinfo> bananer: the git-diff manpage is available at https://gitirc.eu/git-diff.html
[23:36:59] <ale> so the question is: what does this do exactly?
[23:37:02] <cbreak> bananer: search for --exit-code
[23:37:05] <ale> git config --add svn-remote.svn.fetch "branches/$branch/Scribus:refs/heads/$branch"
[23:37:07] *** Quits: xkuru (~xkuru@user/xkuru) (Ping timeout: 250 seconds)
[23:37:34] <ale> where $branch is Version15x
[23:37:47] <ale> (i hope i have the right line in the pastebin...)
[23:37:51] <bananer> cbreak: thanks, that's what I was looking for
[23:38:17] <cbreak> ale: it's documented in the man page.
[23:38:29] <cbreak> I never configured those myself, so no idea what it does exactly
[23:38:51] <ale> cbreak, do you have a hint about the part where this is documented?
[23:39:57] <cbreak> ale: the section labeled CONFIG FILE-ONLY OPTIONS
[23:40:12] <cbreak> I just searched for svn-remote in firefox, on the page linked above, and found that
[23:40:16] <ale> ctr-f with svn.fetch does not give any result.
[23:41:16] *** Quits: rgrinberg (~textual@2806:101e:7:6bed:f1e5:db7b:1d69:5e00) (Ping timeout: 250 seconds)
[23:41:39] <cbreak> the svn. is a name in this context
[23:41:42] <ale> svn-remote seems to be all over the man-page
[23:42:14] <cbreak> there are more complete examples in the "CONFIGURATION" section
[23:42:43] <cbreak> but as I said above, you probably don't need to worry about any of this
[23:42:53] <cbreak> (unless you want the common history)
[23:43:09] *** Quits: fikran (~fikran@user/fikran) (Ping timeout: 256 seconds)
[23:43:10] <ale> the problem is that as is, downloading the svn refs takes several hours
[23:43:26] <cbreak> then you're not using the right path
[23:43:36] <ale> : - )
[23:43:39] *** Quits: joeb (~joeb@host86-178-173-101.range86-178.btcentralplus.com) (Quit: Client closed)
[23:43:45] <cbreak> git svn clone svn://blah.tld/path/to/repo/branches/BranchnameHere
[23:43:48] <cbreak> something like that should work
[23:44:02] <cbreak> well, obviously using a valid URL
[23:44:32] <ale> i've tried it but it did not work.
[23:44:48] <cbreak> this is without --stdlayout
[23:44:57] *** Joins: fikran (~fikran@user/fikran)
[23:45:10] <cbreak> without marking any dir as branch dir or trunk dir
[23:45:11] <ale> i got an empty directory with clone.
[23:45:35] <cbreak> hmm...
[23:45:47] <ale> with the code i've posted i got all the needed code but it took multiple hours.
[23:46:23] *** Joins: ThorMojito (~Adium@modemcable212.77-202-24.mc.videotron.ca)
[23:46:45] <ale> i guess what i'm really looking is an explanation of what this does:
[23:46:57] <ale> git config --add svn-remote.svn.fetch "branches/$branch/Scribus:refs/heads/$branch"
[23:47:12] *** Joins: dflick (~dflick@75-148-140-77-Houston.hfc.comcastbusiness.net)
[23:47:27] <cbreak> it adds a new entry in the config file
[23:47:36] <cbreak> in the section [svn-remote "svn"]
[23:47:39] <ale> yes, indeed!
[23:47:43] *** Joins: rgrinberg (~textual@2806:101e:7:6bed:f1e5:db7b:1d69:5e00)
[23:47:55] <ale> but what i don't understand is the part before and after the :
[23:48:32] <cbreak> that looks similar to a git fetch ref spec
[23:48:44] *** Quits: rgrinberg (~textual@2806:101e:7:6bed:f1e5:db7b:1d69:5e00) (Quit: My MacBook has gone to sleep. ZZZzzz…)
[23:48:44] *** Quits: roadie` (~user@2a02:8108:5a40:1d87:ad3d:bf25:18ab:d30e) (Quit: ERC (IRC client for Emacs 25.3.50.1))
[23:48:58] <cbreak> normally, those are like fetch = +refs/heads/*:refs/remotes/origin/*
[23:49:11] <ale> ok, i have no clue what that means : - (
[23:49:17] <cbreak> that means "fetch refs/heads/XXX on the remote into the local ref refs/remotes/origin/XXX
[23:49:25] *** Joins: rwp (~invalid@havoc.proulx.com)
[23:49:40] <cbreak> so I'd expect that this is analogous
[23:50:06] *** Joins: Guest75 (~Guest75@85.153.200.227)
[23:50:13] <cbreak> fetch the directory branches/$branch/Scribus into the local refs/heads/$branch
[23:50:22] <cbreak> (which is weird. you shouldn't fetch into local branches)
[23:50:46] <cbreak> (you should fetch into remote tracking branches inside refs/remotes/)
[23:51:27] <ale> if you look at https://gitlab.com/scribus/scribus16 , can you explain me if the additional branches come from something that is wrong in that line?
[23:51:51] *** Joins: murii (~murii@2a02:a58:835a:1100:d927:8ab3:6163:c6b0)
[23:52:58] <cbreak> no idea :(
[23:53:40] <cbreak> but you shouldn't fetch into local branches
[23:53:48] <cbreak> unless you have a bare repo or something like that
[23:54:10] <ale> i don't understand what "fetch into local branches" mean ...
[23:54:36] <cbreak> refs/heads/XXX is a local branch (named XXX)
[23:54:53] <cbreak> refs/remotes/origin/XXX is a remote-tracking branch for a branch named XXX on the remote origin
[23:55:08] <cbreak> fetching would read history from origin and write it into the remote tracking branch
[23:55:24] <cbreak> the man page I linked to above has examples for fetch: fetch = trunk/project-a:refs/remotes/project-a/trunk
[23:56:04] <causa_sui> $ git pull -> Your configuration specifies to merge with the ref 'refs/heads/OHSH-229'from the remote, but no such ref was fetched.
[23:56:11] *** Quits: murii (~murii@2a02:a58:835a:1100:d927:8ab3:6163:c6b0) (Ping timeout: 245 seconds)
[23:56:12] <causa_sui> ^ what does this mean? how do I fix it?
[23:56:56] *** Quits: otisolsen70 (~otisolsen@xd4ed80b5.cust.hiper.dk) (Quit: Leaving)
[23:58:08] <ale> i'm lost there. my main issue is that i have no clue what project-a is... it's really hard to follow a documentation with complex explanations about repos that are not clearly defined.
[23:59:04] <cbreak> ale: the name of your remote
[23:59:37] <ale> yes, but i can only fetch to a local branch... at least i think that is what i'm doing when using git.
[23:59:44] <cbreak> no
[23:59:50] <ale> i never had a command that would fetch into a remote...
[23:59:58] <cbreak> as I said above, the normal way is to fetch into remote-tracking branches
