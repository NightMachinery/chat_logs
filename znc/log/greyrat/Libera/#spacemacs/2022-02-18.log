[00:02:14] <FromGitter> <lebensterben> do you have native compilation?
[00:16:06] <FromGitter> <davidpiano> If I don't know what that is, does it probably mean "no"? :)
[00:18:24] <FromGitter> <davidpiano> I'm using Termux, with its default version of Emacs, and my Spacemacs is kept up to date by simple git pull on the develop branch
[00:19:54] <FromGitter> <davidpiano> On console, no gui
[00:28:56] <FromGitter> <lebensterben> okay I think this is indeed a bug....
[00:29:07] <FromGitter> <lebensterben> I will fix it once I get home
[00:29:17] <FromGitter> <lebensterben> thanks for reporting....
[00:33:02] <FromGitter> <lebensterben> are you using spacemacs-base distribution?
[00:36:53] <FromGitter> <lebensterben> if your dotspacemacs-distribution is 'spacemacs-base, that explains a lot of things
[00:37:37] <FromGitter> <lebensterben> alternatively if you added all-the-icons to dotspacemacs-excluded-packages, this bug also occurs
[00:40:03] <FromGitter> <davidpiano> Not spacemacs-base
[00:41:00] <FromGitter> <davidpiano> But yes I excluded the package. I'll remove that line.
[00:41:33] <FromGitter> <lebensterben> I will fix the bug anyway...
[00:44:13] <FromGitter> <lebensterben> basically the new spacemacs-buffer adopted the file icons from dashboard package, which in turn is ported from spacemacs-buffer
[00:45:40] <FromGitter> <lebensterben> dashboard has some neat integrations with org agenda that I have not added to Spacemacs.
[00:47:15] <FromGitter> <lebensterben> In spacemacs-buffer you can press numerical keys to open a file, which is inspired from SpaceVim. And dashboard doesn't have it.
[00:49:23] <FromGitter> <lebensterben> I have fixed a unreported bug in Spacemacs buffer, but have not submit it. ‚èé  ‚èé Also I'm working on compleseus layer. ‚èé I recommend everyone to try it. ‚èé It feels faster than helm. [https://gitter.im/syl20bnr/spacemacs?at=620ebbdb41e3293d65fa2229]
[01:03:23] *** Quits: teehemkay_ (sid14792@id-14792.lymington.irccloud.com) (Read error: Connection reset by peer)
[01:03:30] *** Joins: teehemkay_ (sid14792@id-14792.lymington.irccloud.com)
[02:19:31] <FromGitter> <lebensterben> I've fixed the bug regarding all-the-icons. I will push it to develop branch tonight.
[02:24:58] <FromGitter> <lebensterben> well. I actually just pushed the commit.  @davidpiano You can try it now. I've added `all-the-icons` to the excluded-packages list and it behaves well.
[02:25:44] <FromGitter> <lebensterben> well not  yet .... the push failed..
[02:29:16] <FromGitter> <lebensterben> okay now it's on the develop
[03:09:37] <FromGitter> <TheDohn> Hi all, new the channel and I am having a problem with org-mode since I ran some updates today. Anytime I try to do any org clocking in/out I am getting an error around org-clocking-buffer, in particular things like " Symbol‚Äôs function definition is void: org-clocking-bufferError "
[03:10:45] <FromGitter> <TheDohn> I can see that this variable exists in org-clock.el in a variety of places, notably in the definition of org-clocking-p:  ‚èé  ‚èé (defun org-clocking-p () ‚èé   "Return t when clocking a task." ‚èé   (not (equal (org-clocking-buffer) nil))) [https://gitter.im/syl20bnr/spacemacs?at=620edcfd3349fe1c7118c7c6]
[03:12:40] <FromGitter> <TheDohn> I was wondering what the best strategy for troubleshooting something like this might be? I don't know how to run a backtrack in spacemacs, but I don't gather that I need to as it seems like the source of the problem is that variable.
[03:13:25] <FromGitter> <dalanicolai> @TheDohn I don't have this installed, but from from you message it looks like `org-clocking-buffer` is a function
[03:14:24] <FromGitter> <dalanicolai> So you should enable the debugger: `SPC SPC toggle-debug-on-error`
[03:14:40] <FromGitter> <TheDohn> So, one thing to note is that in that case it is a bit weirder, b/c when I try to find documentation on that function (C-h-f) the function doesn't seem to exist
[03:15:15] <FromGitter> <dalanicolai> Well interesting
[03:15:29] <FromGitter> <dalanicolai> How did you install org-clocking?
[03:16:06] <FromGitter> <TheDohn> I just have org in dotspacemacs/layers ()
[03:16:13] <FromGitter> <lebensterben> org-mode hasn't been touched recently.
[03:16:13] <FromGitter> <TheDohn> so I didn't install it specifically
[03:16:29] <FromGitter> <franpenedo:matrix.org> clocking is part of standard org I think
[03:16:46] <FromGitter> <dalanicolai> Can you do `SPC SPC org-version`?
[03:16:57] <FromGitter> <dalanicolai> and post your version
[03:17:13] <FromGitter> <TheDohn> 1) 4.4
[03:17:18] <FromGitter> <dalanicolai> Ah okay
[03:17:46] <FromGitter> <lebensterben> that's outdated
[03:17:51] <FromGitter> <TheDohn> ah
[03:18:09] <FromGitter> <lebensterben> use `SPC f e U` to update your packages
[03:18:16] <FromGitter> <dalanicolai> So, you should git pull the latest Spacemacs, and/or if you have don't that (already) then throw away the org-mode folder from the .emacs.d/elpa directory
[03:18:34] <FromGitter> <TheDohn> yeah I rebased on to the dev branch today already
[03:18:40] <FromGitter> <TheDohn> so I will try the second suggestion
[03:19:12] <FromGitter> <dalanicolai> Usually @lebensterben suggestion should work also... but I think org is an exception
[03:19:17] <FromGitter> <dalanicolai> You could try it first
[03:19:33] <FromGitter> <dalanicolai> Then check `org-version` again
[03:19:51] <FromGitter> <dalanicolai> When you get 9,5,2 then you are there
[03:21:30] <FromGitter> <lebensterben> damn. for some reason my org is not being updated. it stuck at 9.4.6
[03:21:48] *** Quits: ur5us (~ur5us@2406:e002:6804:8a01:fe29:d3cc:a0c3:c22) (Ping timeout: 240 seconds)
[03:22:01] <FromGitter> <dalanicolai> Even after you delete the folder?
[03:22:20] <FromGitter> <dalanicolai> directory
[03:22:46] <FromGitter> <lebensterben> damn...... After deleting it the org-version is 9.4.4
[03:22:49] <FromGitter> <TheDohn> I might be making this up, but was org moved to a different hosting service? (I don't know all the acronyms)
[03:22:52] <FromGitter> <lebensterben> how's that possible
[03:23:21] <FromGitter> <lebensterben> after restarting it goes to 9.4.6
[03:23:29] <FromGitter> <dalanicolai> > I might be making this up, but was org moved to a different hosting service? (I don't know all the acronyms) ‚èé  ‚èé Yes it is... but it should have been fixed already
[03:23:30] <FromGitter> <lebensterben> So 9.4.4 comes from Emacs...
[03:23:39] <FromGitter> <lebensterben> 1) 4.6 is the one from elpa
[03:23:49] <FromGitter> <lebensterben> but  clearly Elpa has 9.5.2
[03:24:52] <FromGitter> <lebensterben> it's really strange.
[03:24:53] <FromGitter> <franpenedo:matrix.org> ah, I see the issue, not all clocking stuff is autoloaded. a (require 'org-clock) should fix the issue
[03:25:01] <FromGitter> <dalanicolai> Well it should say  `(org :location elpa :min-version "9.5")` in `org-packages`
[03:25:13] <FromGitter> <lebensterben> Yes that's why it's weired.
[03:26:12] <FromGitter> <dalanicolai> Well,  I found it already weird that I had to add the `:min-version "9.5` explicitly
[03:26:25] <FromGitter> <dalanicolai> But after that it was fixed for me... and many others...
[03:27:09] <FromGitter> <TheDohn> @franpenedo:matrix.org Should I put require 'org-clock in my  dotspacemacs/user-load in my spacemacs dot file?
[03:27:11] <FromGitter> <dalanicolai> I am now using emacs 29 so that comes with org 9.5.2 anyway already
[03:28:06] <FromGitter> <franpenedo:matrix.org> @TheDohn: just put it in user-config
[03:28:44] <FromGitter> <dalanicolai> @franpenedo:matrix.org I do find a `(autoload #'org-clock-jump-to-current-clock "org-clock")` in the packages.el file
[03:29:05] <FromGitter> <dalanicolai> so that command should always be available I guess
[03:29:44] <FromGitter> <lebensterben> so I removed that ~/.emacs.d/.cache/quelpa
[03:29:57] <FromGitter> <franpenedo:matrix.org> I should read a bit more about how emacs loads stuff. Isn't it supposed to load the whole file when you call one of the autoloaded functions?
[03:29:59] <FromGitter> <lebensterben> (and also recreated quelpa and quelpa/build directory)
[03:30:11] <FromGitter> <lebensterben> than emacs found 2 other outdated packages that are not found before
[03:30:14] <FromGitter> <lebensterben> .........
[03:30:15] <FromGitter> <dalanicolai> > I should read a bit more about how emacs loads stuff. Isn't it supposed to load the whole file when you call one of the autoloaded functions? ‚èé  ‚èé Exactly
[03:30:39] <FromGitter> <dalanicolai> > (and also recreated quelpa and quelpa/build directory) ‚èé  ‚èé Ah interesting find
[03:31:10] <FromGitter> <dalanicolai> Well I was really going to sleep now btw
[03:31:22] <FromGitter> <dalanicolai> But I guess this issue will be solved very soon...
[03:31:53] <FromGitter> <franpenedo:matrix.org> I guess we got a workaround
[03:31:55] <FromGitter> <dalanicolai> So have fun guys :) See you later...
[03:32:11] <FromGitter> <franpenedo:matrix.org> night
[03:32:25] <FromGitter> <TheDohn> Hmm, crud the (require 'org-clock)  in my dotspacemacs/user-config doesn't seem to work...
[03:32:29] <FromGitter> <dalanicolai> Thanks
[03:32:49] <FromGitter> <TheDohn> I tried reloading my dot file and restarting Spacemacs
[03:33:11] <FromGitter> <TheDohn> Not sure, was the the workaround you guys were talking about that ?
[03:33:51] <FromGitter> <franpenedo:matrix.org> hmm seems to be working fine for me
[03:34:23] <FromGitter> <franpenedo:matrix.org> well, at least `(org-clocking-buffer)` returns nil, so you shouldn't be seeing the same error
[03:35:11] <FromGitter> <franpenedo:matrix.org> I don't use clocking stuff, so not sure how to reproduce your actual issue, went with "if this one runs, it'll probably work"
[03:37:35] <FromGitter> <lebensterben> damn I found what caused the bug
[03:37:41] <FromGitter> <lebensterben> this doesn't make any sense
[03:38:11] <FromGitter> <lebensterben> @dalanicolai what's your setting for `package-archives`
[03:38:34] <FromGitter> <lebensterben> I manually moved `gnu` before `melpa` to get  org 9.5.2 installed....
[03:40:02] <FromGitter> <TheDohn> hey guys I actually have to step away for dinner - thanks for the help so far! I will try to pick this up tomorrow.
[04:40:11] *** Joins: ur5us (~ur5us@2406:e002:6804:8a01:f026:9131:1160:dcf8)
[06:04:41] <FromGitter> <TheDohn>  (https://files.gitter.im/543c742ddb8155e6700cb292/pgOF/Screen-Shot-2022-02-17-at-9.34.04-PM.png)
[06:05:22] <FromGitter> <TheDohn> Actually one thing that is strange is that when i check org-version (above) I see both 9.4.4 in once place and 9.5.2 in another...?
[06:06:22] *** Quits: Unicorn_Princess (~Unicorn_P@93-103-228-248.dynamic.t-2.net) (Remote host closed the connection)
[06:06:33] <FromGitter> <TheDohn>  (https://files.gitter.im/543c742ddb8155e6700cb292/UVwv/Screen-Shot-2022-02-17-at-9.34.04-PM.png)
[06:06:57] <FromGitter> <lebensterben> 1) 4.4 comes with Emacs
[06:07:03] <FromGitter> <lebensterben> 1) 5.2 is from Elpa
[06:07:06] <FromGitter> <TheDohn> not sure if that helps at all, but it at least clarifies what I meant before when I see 9.4.4
[06:07:39] <FromGitter> <lebensterben> As long as the `org-version` shows 9.5.2, then it's okay
[06:07:48] <FromGitter> <TheDohn> okay
[06:07:52] <FromGitter> <TheDohn> sorry for the confusion then
[06:09:06] <FromGitter> <TheDohn> oh but, my reading of that is that org-version is 9.4.4, so I am stuck on 9.4.4
[06:09:34] <FromGitter> <TheDohn> i.e. that screen shot is the output of org-version on my machine
[07:29:32] <FromGitter> <lebensterben> restart emacs
[08:02:37] *** Quits: ur5us (~ur5us@2406:e002:6804:8a01:f026:9131:1160:dcf8) (Ping timeout: 240 seconds)
[08:59:42] *** Joins: ur5us (~ur5us@2406:e002:6804:8a01:fe29:d3cc:a0c3:c22)
[09:41:48] *** Quits: asdflkj_sh (asdflkj@bsdforall.org) (Ping timeout: 240 seconds)
[09:42:54] *** Joins: asdflkj_sh (asdflkj@bsdforall.org)
[10:50:20] *** Joins: fahrradToken (~fahrradTo@2a02:810b:149f:f0f4::e3bb)
[11:41:24] *** Quits: ur5us (~ur5us@2406:e002:6804:8a01:fe29:d3cc:a0c3:c22) (Ping timeout: 240 seconds)
[12:48:33] *** Quits: fahrradToken (~fahrradTo@2a02:810b:149f:f0f4::e3bb) (Ping timeout: 252 seconds)
[13:27:10] <FromGitter> <dalanicolai> @lebensterben I have just tried to update org in Emacs 27.2, which did not work by using `SPC f e U`, but it worked fine after removing the directory from its `elpa` directory.
[13:27:37] <FromGitter> <dalanicolai> The value of  `package-archives` was just: ‚èé  ‚èé ```code paste, see link``` [https://gitter.im/syl20bnr/spacemacs?at=620f6d91d4102444806b23c6]
[14:40:53] *** Joins: fahrradToken (~fahrradTo@2a02:810b:149f:f0f4::e3bb)
[15:53:22] *** Quits: penguwin (~penguwin@fribbledom.com) (Quit: NO CARRIER)
[15:53:50] *** Joins: penguwin (~penguwin@fribbledom.com)
[16:33:39] *** Joins: osfe (~lemaire@2a01:e0a:16e:7620::1e2d:4e60)
[17:07:43] *** Joins: Unicorn_Princess (~Unicorn_P@93-103-228-248.dynamic.t-2.net)
[17:11:11] <FromGitter> <TheDohn> okay so one thing I just found that seems to be leading to at least some confusion on my part, if not a source of my problem, is that I have two org-verion.el files, associated with two different org directories on my machine.  ‚èé  ‚èé 1) One is at /Applications/Emacs.app/Contents/Resources/list/org
[17:12:01] <FromGitter> <TheDohn> 1) The second is at /Users/<me>/.emacs.d/elpa/27.2/develop/org-9.5.2
[17:12:28] <FromGitter> <TheDohn> The first one is associated with org 9.4.4
[17:12:41] <FromGitter> <TheDohn> and when I call org-version I am getting a mix of results from those two installations.
[17:12:52] <FromGitter> <dalanicolai> @TheDohn A mix?
[17:13:12] <FromGitter> <dalanicolai> So let me explain as far as I understand...
[17:13:21] <FromGitter> <TheDohn>  (https://files.gitter.im/543c742ddb8155e6700cb292/qYCj/Screen-Shot-2022-02-18-at-8.43.15-AM.png)
[17:13:24] <FromGitter> <dalanicolai> Emacs is shipped with org-mode
[17:13:44] <FromGitter> <dalanicolai> I guess that is the version you see in the first dir mentioned above
[17:14:05] <FromGitter> <TheDohn>  (https://files.gitter.im/543c742ddb8155e6700cb292/3rRa/Screen-Shot-2022-02-17-at-9.34.04-PM.png)
[17:14:15] <FromGitter> <dalanicolai> However, you can install a newer org from some archive (i.e. elpa)
[17:14:57] <FromGitter> <TheDohn> That makes sense
[17:15:01] <FromGitter> <dalanicolai> >  (https://files.gitter.im/543c742ddb8155e6700cb292/3rRa/Screen-Shot-2022-02-17-at-9.34.04-PM.png) ‚èé  ‚èé Ah okay... such message looks new to me
[17:15:36] <FromGitter> <dalanicolai> Let me check the code of `org-version`... to find out what it reports (if I understand it)...
[17:16:49] <FromGitter> <dalanicolai> Okay, maybe you should join me
[17:17:10] <FromGitter> <dalanicolai> I mean... follow my instructions
[17:17:11] <FromGitter> <TheDohn> join?
[17:17:14] <FromGitter> <TheDohn> oh oh
[17:17:27] <FromGitter> <dalanicolai> I'll teach you some debugging
[17:17:30] <FromGitter> <dalanicolai> Very simple
[17:17:50] <FromGitter> <TheDohn> full disclosure I have to hop to work at 9, so I don't know how long I will be able to stay on, but I appreciate your time on this either way
[17:17:57] <FromGitter> <TheDohn> 9 am EST that is
[17:18:15] <FromGitter> <dalanicolai> Ah well... it is a few minutes
[17:18:19] <FromGitter> <TheDohn> sounds good
[17:18:43] <FromGitter> <dalanicolai> So to find out what org-version does we type `SPC h d v` org-version
[17:19:00] <FromGitter> <dalanicolai> then type `o` (and the label) to jump to the source
[17:19:36] <FromGitter> <dalanicolai> There we find that `org-version` is a variable that is set via the `(org-version)` function
[17:19:47] <FromGitter> <dalanicolai> You just check what I write down
[17:19:53] <FromGitter> <TheDohn> I follow so far
[17:20:11] <FromGitter> <dalanicolai> To jump to the function you place your cursor on it and press `gd`
[17:20:36] <FromGitter> <dalanicolai> then we see it sets all kind of local variables
[17:20:46] <FromGitter> <TheDohn> ah, nice, I was looking for something like "gd"! Thanks!
[17:21:44] <FromGitter> <dalanicolai> You can check which value `org-find-library-dir` has by placing your cursor on it and press `, e c` to evaluate the form (invocation)
[17:22:28] <FromGitter> <TheDohn> ok, I am still with you
[17:22:33] <FromGitter> <dalanicolai> Maybe easier is to edebug the function, by pressing `SPC u` `, e f` on the function
[17:23:06] <FromGitter> <dalanicolai> After that do cal the function by doing `M-: (org-version)`
[17:23:30] <FromGitter> <dalanicolai> then you can step through the function by pressing `s`
[17:23:38] <FromGitter> <dalanicolai> This works so far?
[17:24:01] <FromGitter> <dalanicolai> When edebugging, the values are printed below in the echo area
[17:24:11] <FromGitter> <dalanicolai> To quite edebugging press `q`
[17:24:37] <FromGitter> <dalanicolai> This is how you can read source code, and understand it, and learn lisp relly quickly
[17:24:54] <FromGitter> <dalanicolai> This took me a few months to find out
[17:25:04] <FromGitter> <dalanicolai> What I told you just now in few minutes
[17:25:10] <FromGitter> <TheDohn> wow, thanks for passing this along to me
[17:25:16] <FromGitter> <TheDohn> very helpful
[17:25:43] <FromGitter> <dalanicolai> Yeah there should exist a good guide for it
[17:25:53] <FromGitter> <dalanicolai> Parts of it are scattered all over the web
[17:26:12] <FromGitter> <dalanicolai> Anyway... I guess as you are using Emacs that you can read code
[17:26:27] <FromGitter> <dalanicolai> And lisp is almost as understandable as python
[17:26:46] <FromGitter> <dalanicolai> So you can try to debug things yourself
[17:26:54] <FromGitter> <TheDohn> haha, yeah I get the gist of Elisp
[17:27:03] <FromGitter> <dalanicolai> And ask questions when you get stuck
[17:27:11] <FromGitter> <dalanicolai> I will also have a look
[17:27:25] <FromGitter> <TheDohn> cool. Thanks, I will run through this a bit more and see if I can get to the bttom of things.
[17:27:32] <FromGitter> <dalanicolai> So you try to find if you can find some weird behavior
[17:27:41] <FromGitter> <dalanicolai> Yeah good luck
[17:27:49] <FromGitter> <dalanicolai> I am just behind my computer
[17:27:55] <FromGitter> <dalanicolai> If you have some question I am here
[17:27:57] <FromGitter> <TheDohn> Thanks again! gotta hop to work.
[17:28:17] <FromGitter> <dalanicolai> Haha. okay... hop you make it
[17:28:23] <FromGitter> <dalanicolai> hope
[17:28:29] <FromGitter> <dalanicolai> :)
[17:32:59] <FromGitter> <John-Dawson-Camlin> I have many Python buffers. I want to format on saving in all except one. I have `python-format-on-save` set to `t` in `.spacemacs`. How do I turn formatting on saving off in the buffer where I do not want it?
[17:33:42] <FromGitter> <dalanicolai> @John-Dawson-Camlin Not sure but I guess you can use a file-local variable for that
[17:34:06] <FromGitter> <John-Dawson-Camlin> Thank you. How do I do that?
[17:34:23] <FromGitter> <John-Dawson-Camlin> I am a Spacemacs novice.
[17:35:30] <FromGitter> <dalanicolai> I'll have to look that up
[17:35:58] <FromGitter> <dalanicolai> Even though I know it is very easy
[17:36:23] <FromGitter> <dalanicolai> Ah okay here it is: https://www.gnu.org/software/emacs/manual/html_node/emacs/Specifying-File-Variables.html
[17:36:52] <FromGitter> <dalanicolai> You should put it in the first line of your file
[17:37:10] <FromGitter> <dalanicolai> As a comment (so for python starting the line with `#`
[17:38:26] <FromGitter> <dalanicolai> So it becomes `# -*- python-format-on-save: nil -*-`
[17:38:50] <FromGitter> <dalanicolai> You have to reopen the file to let it have effect
[17:39:31] <FromGitter> <dalanicolai> I hope it works... otherwise I don't know immediately how to do it
[17:45:04] <FromGitter> <John-Dawson-Camlin> It did not work. Spacemacs still formats the buffer on saving.
[18:10:18] <FromGitter> <dalanicolai> ah okay
[18:10:26] <FromGitter> <dalanicolai> maybe you can try if the following work
[18:11:09] <FromGitter> <dalanicolai> `# -*- python-format-on-save: (remove-hook 'python-mode-hook 'blacken-mode) -*-
[18:12:01] <FromGitter> <dalanicolai> Although I guess that removes the hook globally
[18:12:41] <FromGitter> <dalanicolai> I think you should add you custom hook via a .dir-local variable
[18:15:33] <FromGitter> <dalanicolai> @John-Dawson-Camlin
[19:12:36] *** Quits: asdflkj_sh (asdflkj@bsdforall.org) (Ping timeout: 240 seconds)
[19:13:38] *** Joins: asdflkj_sh (asdflkj@bsdforall.org)
[19:22:18] *** Quits: fahrradToken (~fahrradTo@2a02:810b:149f:f0f4::e3bb) (Ping timeout: 250 seconds)
[19:40:12] *** Quits: Unicorn_Princess (~Unicorn_P@93-103-228-248.dynamic.t-2.net) (Remote host closed the connection)
[19:40:27] *** Joins: Unicorn_Princess (~Unicorn_P@93-103-228-248.dynamic.t-2.net)
[19:40:46] *** Quits: Unicorn_Princess (~Unicorn_P@93-103-228-248.dynamic.t-2.net) (Remote host closed the connection)
[19:40:50] *** Joins: ris (~ris@176-152-110-84.abo.bbox.fr)
[19:41:00] *** Joins: Unicorn_Princess (~Unicorn_P@93-103-228-248.dynamic.t-2.net)
[19:41:56] <ris> hi. are there any spacemacs tutors, along the lines of vimtutor ?
[19:48:12] *** Quits: teehemkay_ (sid14792@id-14792.lymington.irccloud.com) (Ping timeout: 240 seconds)
[19:48:42] *** Joins: teehemkay_ (sid14792@id-14792.lymington.irccloud.com)
[20:01:07] *** Quits: teehemkay_ (sid14792@id-14792.lymington.irccloud.com) (Ping timeout: 256 seconds)
[20:01:23] *** Joins: teehemkay_ (sid14792@id-14792.lymington.irccloud.com)
[20:03:24] *** Quits: osfe (~lemaire@2a01:e0a:16e:7620::1e2d:4e60) (Ping timeout: 240 seconds)
[20:43:32] <FromGitter> <TheDohn> Note sure if this is too on-the-nose , but there is evil-tutor
[20:43:49] <FromGitter> <TheDohn> SPC h T v
[21:04:15] <FromGitter> <davidpiano> Yesterday I mentioned that the Spacemacs buffer code was looking for something from all-the-icons even though I had put all-the-icons into the excluded packages list. @lebensterben  confirmed the behavior, thought it was a bug, and went to fix it. At the same time, I removed my line from excluded-packages, which actually fixed my problem.
[21:05:41] <FromGitter> <davidpiano> This morning I updated Spacemacs - and now I have the problem ALL the time, it doesn't matter if I exclude it or not. :)
[21:07:28] <FromGitter> <davidpiano> spacemacs-buffer||propertize-heading: Symbol‚Äôs function definition is void: all-the-icons-material
[21:07:48] <FromGitter> <davidpiano> Looks prettier but same error as before
[21:17:10] <FromGitter> <TheDohn> It might be worth updating again, I think he pushed a quick update after the one that addressed the bug you are talking about.
[21:19:26] <FromGitter> <davidpiano> I fixed my problem by going into my .spacemacs and removing every mention of all-the-icons that I had previously added - no more excluding, no more making sure all its parts are installed, just letting Spacemacs "do what it wants"
[22:08:56] <ris> TheDohn: thanks ! I didn't know if evil-tutor would cover spacemacs...
[22:09:18] *** Joins: ur5us (~ur5us@2406:e002:6804:8a01:fe29:d3cc:a0c3:c22)
[22:09:41] <ris> SPC h T v - perfect :)
[23:26:30] <FromGitter> <lebensterben> The story is, originally there's a function `spacemacs-buffer//propertize-heading` and there's nothing wrong with it per se. ‚èé But when a function is called, the arguments are evaluated first.. So `all-the-icons-material` is evaluated even when you don't have `all-the-icons` enabled.
[23:27:40] <FromGitter> <lebensterben> I then changed it to `spacemacs-buffer||propertize-heading` and it beomes a macro. ‚èé The difference is the arguments passed to a macro is not evaluated right away. So I added additional test to make sure `all-the-icons` is available at call-time.
[23:29:29] <FromGitter> <lebensterben> But then I found that, if you've added `all-the-icons` to `dotspacemacs-excluded-packages`, `(featurep 'all-the-icons)` returns `t` as long as `all-the-icons` is downloaded. ‚èé So orignal tests are made invalid. ‚èé To fix it I replaced `(featurep 'all-the-icons)` by `(configuration-layer/package-used-p 'all-the-icons)`.
[23:31:01] <FromGitter> <lebensterben> After this fix, someone commented under the commit that, he has `all-the-icons` installed, not excluded, and fonts installed. But it still reports error. ‚èé It tursn out that with `native-comp` on Emacs >= 28 things work differently. ‚èé So I added an additional `(require 'all-the-icons)` explicitly to fix the issue.
[23:38:13] <FromGitter> <lebensterben> So that is to say, the a few patches I pushed should have dealt with `dotspacemacs-excluded-packages` and `native-comp`.
[23:41:48] *** Quits: ur5us (~ur5us@2406:e002:6804:8a01:fe29:d3cc:a0c3:c22) (Ping timeout: 240 seconds)
