[00:10:46] *** Kabouik_ is now known as Kabouik
[00:31:57] *** Quits: cthulchu (~Cthulchu@184-090-172-137.res.spectrum.com) (Ping timeout: 240 seconds)
[00:36:34] *** Joins: re101-poodle-11 (~re101-poo@2600:1700:c6c2:1560:c830:4511:847a:6810)
[00:38:53] <re101-poodle-11> https://regex101.com/r/31Pscc/1
[00:38:54] <re101-poodle-11> I am trying to pull the numbers (-2.1 and -6.5) from a string. I got it working here, but for some reason I can't figure out it is also 'matching' the entire string. Is there a way to just pull out the three items I need (-2.1,×,-6.5)?
[00:38:54] *** Joins: psydroid (~psydroid@user/psydroid)
[00:42:05] <rewt> those numbers are in the capture groups $1 and $3
[00:45:53] <re101-poodle-11> Oh good grief, disregard. That's a 'fail', for me.
[00:53:27] *** Joins: VarunAgw (~VarunAgw@103.158.148.26)
[00:56:48] *** Joins: ttree (~ttree0@c-73-169-193-237.hsd1.wa.comcast.net)
[01:00:36] *** Quits: lavaball (felix@31.204.155.215) (Remote host closed the connection)
[01:12:27] *** Quits: VarunAgw (~VarunAgw@103.158.148.26) (Ping timeout: 256 seconds)
[01:38:19] <OnlineCop> Also note that a character group may work just as well as those non-capturing groups.
[01:38:40] <OnlineCop> `(?:-|\+|÷|×|\()?` could be: `[-+÷×(]?`
[01:39:47] <OnlineCop> Something like this: https://regex101.com/r/31Pscc/2
[02:04:46] *** Quits: ahmedelgabri (~ahmedelga@2a02-a446-d88a-1-d9bc-da66-3285-1aca.fixed6.kpn.net) (Quit: WeeChat 3.3)
[02:17:55] *** Joins: netpipe (~netpipe@user/netpipe)
[02:20:49] *** Joins: treble (~treble@user/treble)
[02:23:26] *** Joins: loganlee (~Thunderbi@user/loganlee)
[02:40:06] *** Quits: niso- (~niso-@2a02:1205:c690:ca10:c43a:ae3b:214e:cd0a) (Read error: Network is unreachable)
[02:40:28] *** Joins: niso- (~niso-@2a02:1205:c690:ca10:c43a:ae3b:214e:cd0a)
[03:10:25] *** Quits: palasso (~palasso@user/palasso) (Read error: Connection reset by peer)
[04:00:48] *** Hash is now known as EnchanterTim
[04:18:12] *** Joins: cthulchu (~Cthulchu@184-090-172-137.res.spectrum.com)
[04:35:46] *** Quits: netpipe (~netpipe@user/netpipe) (Ping timeout: 256 seconds)
[04:49:57] *** Quits: subie (~subie@193.36.224.158) (Remote host closed the connection)
[04:57:44] *** Quits: luva (~luva@37.120.197.53) (Quit: Ping timeout (120 seconds))
[04:58:14] *** Joins: luva0 (~luva@37.120.197.53)
[05:00:03] *** Joins: subie (~subie@2601:4c0:4080:bc0:1c49:6d39:cd8f:c992)
[05:07:43] *** Quits: r3m (~launch@user/r3m) (Quit: WeeChat 3.5-dev)
[05:30:18] *** Quits: vlm (~vlm@user/vlm) (Quit: "")
[05:32:37] *** Quits: Floflobel (~Floflobel@82-64-37-152.subs.proxad.net) (Ping timeout: 240 seconds)
[05:33:17] *** Quits: maetthew (~maetthew@user/maetthew) (Quit: ZNC 1.8.2 - https://znc.in)
[05:35:54] *** Joins: maetthew (~maetthew@c188-150-159-232.bredband.tele2.se)
[05:35:54] *** Quits: maetthew (~maetthew@c188-150-159-232.bredband.tele2.se) (Changing host)
[05:35:54] *** Joins: maetthew (~maetthew@user/maetthew)
[05:54:45] *** Joins: luva00 (~luva@146.70.62.253)
[05:56:55] *** Quits: luva0 (~luva@37.120.197.53) (Ping timeout: 256 seconds)
[05:56:56] *** luva00 is now known as luva0
[06:01:00] *** Quits: loganlee (~Thunderbi@user/loganlee) (Quit: loganlee)
[06:01:18] *** Joins: loganlee (~Thunderbi@user/loganlee)
[06:01:27] *** Quits: luva0 (~luva@146.70.62.253) (Ping timeout: 256 seconds)
[06:03:38] *** Joins: luva0 (~luva@45.141.152.45)
[06:40:12] *** Quits: src (~src@user/src) (Quit: Leaving)
[06:40:37] *** Joins: src (~src@user/src)
[07:00:56] *** Joins: locsmif (~none@user/locsmif)
[07:01:37] *** Quits: karakedi (~eAC53C340@user/karakedi) (Ping timeout: 240 seconds)
[07:01:54] <locsmif> Hi all. Is there a way I can search for the string "shot", but not preceded by either "still ", "screen ", or "screen"? The problem is that zero-width negative lookbehind assertions have to be fixed width, and the tool I'm using only allows one regular expression to be matched
[07:02:28] *** Joins: maroon2 (tinycrypt@136.32.225.142)
[07:03:47] *** Quits: maroon (tinycrypt@user/maroon) (Ping timeout: 256 seconds)
[07:03:49] *** maroon2 is now known as maroon
[07:03:59] *** Quits: maroon (tinycrypt@136.32.225.142) (Changing host)
[07:03:59] *** Joins: maroon (tinycrypt@user/maroon)
[07:03:59] *** ChanServ sets mode: +v maroon
[07:04:57] <Me-me> locsmif: What engine are you using?
[07:04:59] <locsmif> https://regex101.com/r/bZd5Bt/1
[07:05:04] <Me-me> Ah, perfect timing.
[07:05:41] <Me-me> https://regex101.com/r/bZd5Bt/2
[07:05:44] <Me-me> You had an extraneous space.
[07:05:49] *** Joins: karakedi (~eAC53C340@user/karakedi)
[07:05:51] <locsmif> The tool says Perl, so I expected PCRE, but that while regex101 thinks that particular regex right there is cool, this tool (UltraFinder) gives me an error saying the regex is invalid
[07:06:05] <Me-me> Does it elaborate on what the invalidity is?
[07:06:16] <locsmif> No, unfortunately not :(
[07:06:24] <Me-me> Hmm. What is the tool?
[07:06:31] <locsmif> UltraFinder
[07:06:55] <locsmif> I'll try again to make sure
[07:07:50] <locsmif> Right using the regex from your link, it says "You have entered an invalid regular expression!" (a warning dialog box) (Running Windows)
[07:08:12] <locsmif> I think I'm using invalid software instead, haha
[07:08:18] <Me-me> Yeah, https://www.ultraedit.com/support/tutorials-power-tips/ultraedit/regular-expressions.html spells out PCRE pretty directly. Even if it's not PCRE2, version 2 should work.
[07:08:35] <Me-me> Can you give me a screenshot?
[07:08:53] <Me-me> Maybe it wants delimiters. Can you try just "shot" by itself?
[07:09:00] <Me-me> (without quotes)
[07:10:01] *** luva0 is now known as luva
[07:11:04] <locsmif> Screenshot: https://i.imgur.com/a1tQZct.png
[07:11:33] <Me-me> In the dropdown where it says "perl" what are the other options?
[07:11:58] <locsmif> I also have "Unix" and "UltraEdit"
[07:12:15] <Me-me> Alright. Stick with perl.
[07:12:35] <Me-me> https://regex101.com/r/bZd5Bt/3
[07:12:37] <Me-me> Try that one.
[07:12:39] <locsmif> (?<!screen)shot is accepted
[07:13:28] <locsmif> Hmm, that might be working! :)
[07:13:57] <Me-me> Right, so they say PCRE but they're just wrong.
[07:14:21] <locsmif> Well, pedantically, they say "Perl" and I'm not sure what they assume that means
[07:14:30] <locsmif> But you'd expect PCRE 
[07:14:48] <Me-me> As I said, https://www.ultraedit.com/support/tutorials-power-tips/ultraedit/regular-expressions.html is pretty straightforward.
[07:15:01] <locsmif> I can't imagine them writing their own engine to sort of "simulate" PCRE but who knows
[07:15:05] <Me-me> They bold "Perl-compatible regular expressions" which is what PCRE stands for.
[07:15:14] <locsmif> Oh, I'm sorry, I missed that the first time around
[07:15:25] <locsmif> Well, that sucks
[07:16:29] <locsmif> So technically, a zero-width negative lookbehind assertion may contain pipes? Doesn't that make its length dynamic?
[07:17:04] <Me-me> If you put actual quantifiers in it, even limited range ones like ? or {3,5} or whatever, that'll throw an error in PCRE>
[07:17:15] <Me-me> But when you use alternatives, the engine simply treats it as multiple lookarounds.
[07:17:39] <Me-me> I think it's slightly more efficient as a result of not having to close and reopen a group? I dunno that's all complicated backend stuff.
[07:17:46] <locsmif> Ah, that's what I hoped PCRE would be able to handle, and I was a bit taken aback that this tool refused it
[07:17:49] <Me-me> But you're supposed to be able to use it.
[07:17:52] <Me-me> Aye.
[07:17:53] <locsmif> YEah
[07:18:07] <Me-me> I think what I'm supposed to suggest is submitting a pull request or something.
[07:18:09] <locsmif> Well, your last example works great, thank you
[07:18:16] <Me-me> To ulraedit. I suppose.
[07:18:18] <Me-me> Happy to help.
[07:18:20] *** Joins: at (~at@2620:10d:c090:400::5:535b)
[07:18:20] <locsmif> Haha
[07:18:59] <locsmif> Yeah, I could, but... I'm not sure how fast I would be in locating the code section responsible. Thought perhaps I'm exaggerating how much effort it would take.
[07:19:18] <Me-me> Fair enough.
[07:19:51] <locsmif> And, I have yet to try the newest version, which is entirely on me; I might have missed a patch. But I do think I should do this more often. After all, I've been happily consuming FOSS for decades
[07:20:04] <locsmif> That reminds me, I should be making a few donations.
[07:20:29] <locsmif> Hmm, correction, this isn't FOSS though, this is trialware.
[07:20:38] <locsmif> I think
[07:21:01] <locsmif> Hmm, yes it is, Wikipedia claims
[07:21:21] <Me-me> *nonchalant cough* Regex101 also has a donation button. It doesn't go to me directly or indirectly, but it does go to server costs.
[07:26:44] *** Joins: adeliktas9 (~adeliktas@i59F5F686.versanet.de)
[07:27:30] *** Joins: re101-hare-17 (~re101-har@131.226.32.133)
[07:27:38] *** Quits: at (~at@2620:10d:c090:400::5:535b) (Quit: Client closed)
[07:28:35] *** Quits: adeliktas (~adeliktas@i59F5FB64.versanet.de) (Ping timeout: 256 seconds)
[07:28:35] *** adeliktas9 is now known as adeliktas
[07:28:50] <re101-hare-17> hello, trying to match 'st.' in python - https://regex101.com/r/M0C8sr/1
[07:29:53] <re101-hare-17> escaping the wildcard with \. not working for some reason
[07:30:49] <re101-hare-17> update - https://regex101.com/r/M0C8sr/2
[07:31:17] <digitok> https://regex101.com/r/M0C8sr/3
[07:31:42] <digitok> for \b to match after a . (a non-word character), it needs to be followed by a word character (a-zA-Z0-9_)
[07:33:55] *** Quits: loganlee (~Thunderbi@user/loganlee) (Quit: loganlee)
[07:34:57] <re101-hare-17> nice makes sense!
[07:34:58] <re101-hare-17> but in this case, the period is for abbreviation - I'd still need to make sure there's a word break after it
[07:36:49] <digitok> if you use \B it will match as long as the next char is NOT a word character
[07:37:12] <digitok> https://regex101.com/r/M0C8sr/4
[07:37:22] <locsmif> Me-me: great tip!
[07:37:42] <re101-hare-17> there you go!!
[07:46:17] <re101-hare-17> next step, what if there's a non .-ending alternative?
[07:46:18] <re101-hare-17> https://regex101.com/r/M0C8sr/5
[07:48:20] <digitok> https://regex101.com/r/M0C8sr/6
[07:51:58] <re101-hare-17> was thinking something similar, but why do you need the ?:
[07:52:28] <digitok> i prefer to use non-capturing groups if i do not need the capture
[07:52:35] <digitok> but, it is optional
[07:58:17] <Me-me> Warm take: Non-capture should be the default, and capture groups should have the extra construct signage.
[07:59:38] <re101-hare-17> that one went a bit above my head
[08:03:04] <Me-me> () is a capture group; (?:) is a non-capture group.
[08:03:18] <Me-me> They do the same thing(s) but a capture group saves the result to be called upon later.
[08:04:11] *** Quits: src (~src@user/src) (Quit: Leaving)
[08:12:59] <digitok> i think they meant your warm take
[08:13:15] <Me-me> Tepid take.
[08:23:53] <re101-hare-17> thanks folks
[08:23:58] *** Quits: re101-hare-17 (~re101-har@131.226.32.133) (Quit: Client closed)
[08:38:17] *** Joins: at (~at@2620:10d:c090:400::5:535b)
[08:38:48] *** Joins: r3m (~launch@user/r3m)
[08:41:35] <at> Hey all! New to regex. Is anyone familiar how to create multiple groups in regex? I'm trying to create some regex that isolates the ID and the password of a given VC link: https://zoom.us/j/[ID]?pwd=[Password].
[08:41:54] <at> with*
[08:56:40] <yitz> Why not just use a URL parser?
[08:57:02] <yitz> Then you don't need to learn all the ins and outs of URL encoding
[08:57:57] *** Quits: bin101 (~bin101@user/bin101) (Ping timeout: 240 seconds)
[08:59:09] *** Joins: bin101 (~bin101@user/bin101)
[09:18:33] <at> ah, good question. not sure tbh. our team is using regex, and so i was just trying to modify the existing regex to meet my needs. currently the code matches https://zoom.us/j/[ID] and groups [ID]. but i also want to grab the password
[09:21:17] <at> here's a link in case it's useful: https://regex101.com/r/F9oHBX/1
[09:21:37] *** Quits: cthulchu (~Cthulchu@184-090-172-137.res.spectrum.com) (Ping timeout: 240 seconds)
[09:21:46] <at> i want to grab everything after the pwd= as well
[09:27:58] <digitok> are we assuming pwd will always exist
[09:28:03] <at> yes
[09:29:28] <digitok> can we simplify other parts of the regex or does it need to be unchanged
[09:30:26] *** Sevalecan is now known as rmbeer
[09:30:33] <at> if you see opportunities to simplify, i'd love to learn!
[09:30:58] <digitok> would you make http(s):// required?
[09:31:06] <digitok> it is currently optional
[09:31:45] <digitok> also, is the input just a link or is it inside other text
[09:31:45] <at> ah interesting. i honestly probably need more context as to why the original regex was done the way it was. i'm assuming there was probably good reason for making it optional
[09:32:38] <at> along those lines, if pwd doesn't always exist could we do something that returns 2 vs 3 results if it doesn't?
[09:32:49] <digitok> sure
[09:32:56] <digitok> but id will always exist?
[09:34:07] <at> i'm thinking it SHOULD, but now that you're asking, it's probably best to account for the case where it doesn't :/
[09:34:13] <at> sorry if that adds way more complexity!
[09:34:59] <digitok> if it does not exist, should the link end with / or is that also optional
[09:35:10] <digitok> "link.com/j"
[09:36:28] <at> the link should always at least end in the meeting id
[09:36:53] <at> just might not have the query string with the encrypted password at the end
[09:37:24] <digitok> ok, so we are not making the id optional now?
[09:37:54] *** rmbeer is now known as Sevalecan
[09:38:21] <at> oh apologies if i misunderstood! https and password are potentially optional but the meeting id is required
[09:38:47] <digitok> right
[09:39:03] <digitok> and this? <digitok> also, is the input just a link or is it inside other text
[09:39:53] <at> not sure i follow
[09:40:22] <digitok> the string you are comparing the regex to - is it just a link? or "blah blah <link> more text"
[09:42:15] <at> ah got it. yeah the string could potentially contain other text
[09:43:08] <digitok> https://regex101.com/r/F9oHBX/3
[09:46:38] <at> wow! i was trying to do something like (?:\?pwd=(\w+))? but did something like this instead (?:\?pwd=)/w+?
[09:46:57] <at> what's putting w+ in parens do?
[09:58:11] *** Quits: ttree (~ttree0@c-73-169-193-237.hsd1.wa.comcast.net) (Ping timeout: 256 seconds)
[10:03:22] <digitok> the parens create a group
[10:07:14] <at> ah i thought the outer parens did that
[10:11:06] *** Joins: ttree (~ttree0@c-73-169-193-237.hsd1.wa.comcast.net)
[10:19:17] <at> at any rate, thanks a ton!
[10:19:17] *** Quits: ttree (~ttree0@c-73-169-193-237.hsd1.wa.comcast.net) (Ping timeout: 256 seconds)
[10:19:20] <at> really appreciate it
[10:24:24] <digitok> np :) incidentally, the outer parens there are actually part of a non-capturing group, meaning we need a group to make its contents optional (by placing the ? after it), but we do not need the contents "?pwd=..." captured
[10:25:03] <digitok> (group) (?:non-capturing group)
[10:37:52] *** Joins: VarunAgw (~VarunAgw@103.158.148.26)
[10:39:30] <at> ah okay got it. whoever you are, you're a brilliant brilliant soul!
[10:39:36] *** Quits: at (~at@2620:10d:c090:400::5:535b) (Quit: Client closed)
[10:56:28] <digitok> aw
[10:59:20] *** Joins: VarunAgw_ (~VarunAgw@103.158.148.26)
[11:01:57] *** Quits: VarunAgw (~VarunAgw@103.158.148.26) (Ping timeout: 240 seconds)
[11:11:37] *** Quits: genius3000 (g3k@user/genius3000) (Ping timeout: 240 seconds)
[11:27:00] *** Quits: re101-poodle-11 (~re101-poo@2600:1700:c6c2:1560:c830:4511:847a:6810) (Quit: Client closed)
[11:29:14] *** Joins: genius3000 (g3k@user/genius3000)
[11:30:19] *** Joins: Nick261515848488 (~VarunAgw@106.217.169.69)
[11:30:20] *** Quits: Nick261515848488 (~VarunAgw@106.217.169.69) (Remote host closed the connection)
[11:32:17] *** Joins: re101-yorkie-29 (~re101-yor@157.49.203.43)
[11:33:57] *** Quits: VarunAgw_ (~VarunAgw@103.158.148.26) (Ping timeout: 240 seconds)
[11:34:40] *** Quits: unluckyshrubbery (~unluckysh@45-19-33-188.lightspeed.livnmi.sbcglobal.net) (Quit: ZNC 1.8.2 - https://znc.in)
[11:35:46] *** Joins: han-solo (~hanish@user/han-solo)
[11:38:08] *** Quits: re101-yorkie-29 (~re101-yor@157.49.203.43) (Quit: Client closed)
[11:39:59] *** Joins: palasso (~palasso@user/palasso)
[11:44:19] *** Quits: jinsun (~quassel@user/jinsun) (Read error: Connection reset by peer)
[11:45:39] *** Joins: jinsun (~quassel@user/jinsun)
[11:59:29] *** Quits: EnchanterTim (~Hash@hashsecurity.org) (Quit: https://hashsecurity.org)
[12:00:35] *** Joins: Hash (~Hash@hashsecurity.org)
[12:05:35] *** Quits: Hash (~Hash@hashsecurity.org) (Max SendQ exceeded)
[12:06:14] *** Joins: Hash (~Hash@hashsecurity.org)
[12:25:37] *** Quits: Kabouik (~Kabouik@2a03:4000:4d:fbd:4fe:b1ff:fee3:35d) (Remote host closed the connection)
[12:26:53] *** Joins: Kabouik (~Kabouik@2a03:4000:4d:fbd:4fe:b1ff:fee3:35d)
[12:26:53] *** Quits: Kabouik (~Kabouik@2a03:4000:4d:fbd:4fe:b1ff:fee3:35d) (Changing host)
[12:26:53] *** Joins: Kabouik (~Kabouik@user/kabouik)
[12:30:14] *** Joins: Floflobel (~Floflobel@82-64-37-152.subs.proxad.net)
[12:52:54] *** Joins: mozgalom (~mozgalom@194.144.47.113)
[13:25:20] *** Joins: unluckyshrubbery (~unluckysh@45-19-33-188.lightspeed.livnmi.sbcglobal.net)
[14:08:54] *** Quits: niso- (~niso-@2a02:1205:c690:ca10:c43a:ae3b:214e:cd0a) (Quit: Leaving)
[14:14:02] *** Quits: dax7 (~NetHogr@user/nethogr) (Quit: See ya)
[14:14:18] *** Joins: dax7 (~NetHogr@user/nethogr)
[14:18:37] *** Quits: jinsun (~quassel@user/jinsun) (Ping timeout: 240 seconds)
[14:20:10] *** Joins: jinsun (~quassel@user/jinsun)
[14:26:37] *** Joins: x88x88x (~x88x88x@2001:19f0:5:39a8:5400:3ff:feb6:73cb)
[14:37:47] *** Joins: re101-okapi-77 (~re101-oka@162.44.151.11)
[14:37:49] <re101-okapi-77> Hi
[14:38:09] <re101-okapi-77> I need a help on regex
[14:38:40] <re101-okapi-77> i have only regex validation . its failing for thai language
[14:38:50] <re101-okapi-77> could you please help me on that ?
[14:39:20] <digitok> we can try
[14:39:35] <re101-okapi-77> ^[^\-¿][A-Za-z0-9a-À-ÖØ-öø-ÿÀÁÂÃÈÉÊÌÑÍÒÓÔÕÙÚĂĐĨŨƠàáâãèéêìíòóôõùúăđĩũơƯĂẠẢẤẦẨẪẬẮẰẲẴẶẸẺẼỀỀỂưËẾăạảấầẩẫậắằẳẵÇặẹẻẽềềếểỄỆỈỊỌỎỐỒỔỖỘỚỜỞỠỢỤỦỨỪễệỉịọỏốồổỗộớờởỡ
[14:39:35] <re101-okapi-77> ợụủứừỬỮỰỲỴÝỶỸửữựỳỵỷỹကဋပခဌဖဂဍဗဃဎဘငဏမစတယဆထရဇဒလဈဓဝညနသဉဟဠအ◌ာ◌ါ◌ေ◌◌ဣ◌ိ◌◌ဲ◌ဤ◌ီ◌ေ◌ာေ◌ါ◌ဥ◌ု◌ေ◌ာ်ေ◌ါ်◌ဦ◌ူ◌◌ို◌ိ◌ဧဩဪအမည်ရှေ့ဆုံ
[14:39:36] <re101-okapi-77> းစာလုံးကိုလိုအပ်ပါသည်ကခဂဃငစဆဇဈဉညဋဌဍဎဏတထဒဓနပဖဗဘဘမယရလဝသဟဠအဣဤဥဦဧဩဪအသတ်တံခွန်ကင်းစီးအောက်မြစ်ရေးချမောက်ချဝိုက်ချဝစ္စပေါ
[14:39:36] <re101-okapi-77> က်ဝိသဇ္ဇနီရှေ့ကပေါက်ရှေ့ဆီးသဝေထိုးနောက်ပစ်တစ်ချောင်းငင်နှစ်ချောင်းငင်လုံးကြီးတင်လုံးကြီးတင်ဆန်ခတ်အဆွဲအငင်လုံးကြီးတင်
[14:39:37] <re101-okapi-77> ဆန်ခတ်အဆွဲအငင်သေးသေးတင်မောက်ချသဝေထိုးရေးချရှေ့ထိုးကကာကားကက်ကင်ကင့်ကင်းကစ်ကည်ကဉ်ကည့်ကဉ့်ကည်းကဉ်းကတ်ကန်ကန့်ကန်းကမ်ကမ့်
[14:39:37] <re101-okapi-77> ကမ်းကပ်ကယ်ကံကံ့ကံးကိကိတ်ကိန်ကိန့်ကိန်းကိပ်ကိမ်ကိမ့်ကိမ်းကိံကိံ့ကိံးကွမ်းကွမ့်ကွမ်ကွပ်ကွန်းကွန့်ကွန်ကွတ်ကိုးကို့ကိုင်
[14:39:38] *** rebot sets mode: +q re101-okapi-77!*@*
[14:39:39] <rebot> 14re101-okapi-77: For regex help, please share a https://regex101.com/ link. To share other data, see !paste. You will be unmuted in 30s.
[14:40:08] *** rebot sets mode: -q re101-okapi-77!*@*
[14:40:28] <re101-okapi-77> กรุณาบอกเราเกี่ยวกับตัวคุณเพื่อให้เราสามารถหาสถานที่ที่เหมาะสม
[14:40:33] <re101-okapi-77> this is my input
[14:41:01] <re101-okapi-77> \p{L} its working in this regex
[14:41:22] <re101-okapi-77> but i dont how to combine this validation in my existing regex
[14:41:38] <re101-okapi-77> could you please help me with this?
[14:42:35] <digitok> !link
[14:42:36] <perlbot> Please click Save on the left side of regex101.com and share your link here. (https://i.ibb.co/68c2YnH/s.png)
[14:44:46] <re101-okapi-77> https://regex101.com/r/xeB8s5/1
[14:48:34] <re101-okapi-77> กรุณาบอกเราเกี่ยวกับตัวคุณเพื่อให้เราสามารถหาสถานที่ที่เหมาะสม
[14:48:45] <re101-okapi-77> this is the string to validate
[14:56:40] <digitok> :|
[14:57:03] <digitok> i am not entirely sure what we need to do
[14:58:18] <re101-okapi-77> i need to validate กรุณาบอกเราเกี่ยวกับตัวคุณเพื่อให้เราสามารถหาสถานที่ที่เหมาะสม and pass this string using https://regex101.com/r/xeB8s5/1 regex
[14:59:29] <Me-me> How would you like to validate it?
[14:59:38] <Me-me> What rules does the text need to follow for it to be valid?
[15:00:46] <re101-okapi-77> it should accept all thai language strings
[15:05:00] <Me-me> It looks like the string you posted is more than 30 characters, but the {1,30} maxes out at 30. https://regex101.com/r/xeB8s5/3 Try this one, maybe.
[15:05:26] <Me-me> Although I don't know why you had [^\-¿] at the start.
[15:05:46] <Me-me> Could probably make it even simpler with /^\p{Thai}+$/
[15:08:37] <re101-okapi-77> ok
[15:10:24] <re101-okapi-77> but it should work for other languages as well
[15:10:43] <re101-okapi-77> and numerics as well
[15:11:24] <re101-okapi-77> something like \p{L} + numbers
[15:12:22] <Me-me> https://regex101.com/r/xeB8s5/4
[15:14:30] <re101-okapi-77> but no match for this
[15:14:31] <re101-okapi-77> กรุณาบอกเราเกี่ยวกับตัวคุณเพื่อให้เราสามารถหาสถานที่ที่เหมาะสม
[15:16:32] <Me-me> Ah, I see.
[15:16:59] <Me-me> I don't know why that is, it should be in the subset of \p{L}
[15:17:34] <digitok> https://regex101.com/r/xeB8s5/5
[15:17:54] <digitok> note that is 13 matches
[15:18:01] <re101-okapi-77> its working if we put \p{L}
[15:18:36] <Me-me> okapi: I don't know the thai alphabet or language. In v5 that digitok posted, why are there 13 characters that are not letters?
[15:19:55] <digitok> https://regex101.com/r/xeB8s5/6
[15:20:05] <digitok> this matches both \p{L} and \P{L}
[15:20:05] <digitok> lol
[15:20:13] <Me-me> ...
[15:20:15] <Me-me> I'm out.
[15:20:30] <digitok> \P{L} produces 2 matches
[15:20:40] <re101-okapi-77> ohh noo... help me to add numbers with \p{L}
[15:21:03] <digitok> so the surrogate chars or whatever are not considered letters
[15:21:34] <digitok> weird. i do not know enough about unicode
[15:22:16] <digitok> that string matches with \p{Thai} though
[15:22:43] <digitok> https://regex101.com/r/xeB8s5/7 ?
[15:22:50] <re101-okapi-77> ohhh... Then oky. Thank you so much for helping me so far ...
[15:23:06] <digitok> try that link re101-okapi-77
[15:24:38] *** Joins: d1cor (~diego@179.63.242.123)
[15:25:07] <re101-okapi-77> sure
[15:25:23] <re101-okapi-77> wow...Its working
[15:25:33] <re101-okapi-77> i just added below ^[\p{L}\p{N}\p{Thai}\p{Common}]+$
[15:25:46] <re101-okapi-77> to accept common languages
[15:26:15] <re101-okapi-77> I think i can add other languages if that is not working with this...
[15:26:55] <re101-okapi-77> Anyway this will solve my issue... This is a great help. Thank you so much... Have a nice day .
[15:27:14] <digitok> great :) yw
[15:27:50] <digitok> i would expect Common to be a subset of Letters, but i have not checked
[15:36:27] <re101-okapi-77> :)
[15:38:11] *** Joins: re101-yak-26 (~re101-yak@195.220.9.18)
[15:38:12] *** Quits: re101-yak-26 (~re101-yak@195.220.9.18) (Client Quit)
[16:30:53] *** Quits: re101-okapi-77 (~re101-oka@162.44.151.11) (Ping timeout: 256 seconds)
[17:06:52] *** Joins: re101-fish-65 (~re101-fis@ec2-44-192-130-73.compute-1.amazonaws.com)
[17:07:28] <re101-fish-65> https://regex101.com/r/G8PWty/1 need docker-v1-1908 out of this string
[17:09:25] <re101-fish-65> Anybody please help
[17:11:53] *** Joins: re101-mole-53 (~re101-mol@62-131-37-176.fixed.kpn.net)
[17:17:23] <digitok> https://regex101.com/r/G8PWty/2
[17:17:38] <re101-fish-65> Thanks
[17:17:42] *** Quits: re101-fish-65 (~re101-fis@ec2-44-192-130-73.compute-1.amazonaws.com) (Quit: Client closed)
[17:17:57] *** Quits: d1cor (~diego@179.63.242.123) (Ping timeout: 240 seconds)
[17:22:31] *** Joins: anshul1217 (~anshul121@213.156.160.98)
[17:27:11] <anshul1217> I have two string anshul dubey 15/Dec/2021:23:32:46 and Test 15/Dec/2021:23:32:46 regex I have tried is (.*\s)
[17:36:57] <locsmif> .* is greedy, therefore not useful here
[17:37:21] <locsmif> You need to match the date, and that shouldn't be too hard
[17:37:41] <locsmif> Using that, .* becomes useful again.
[17:38:35] <locsmif> anshul1217: which regular expression engine are you using?
[17:39:14] <anshul1217> Java, I want to match the name before the date only
[17:39:23] <locsmif> I understand
[17:41:50] <locsmif> anshul1217: https://regex101.com/r/1HWykD/1
[17:42:51] <locsmif> Or better yet: https://regex101.com/r/e6naWu/1
[17:42:51] <re101-mole-53> Assuming following regex: [a-z]{0,8}\d{0,8}; I have a string of lowercase letters followed by numbers. Is there any way to match a total max. length of 8 characters (rather than the 16 allowed here), but still allow both a string of 8 letters and a string of 8 numbers, or anything in between?
[17:43:28] *** Joins: cthulchu (~Cthulchu@184-090-172-137.res.spectrum.com)
[17:45:19] <locsmif> So the total string length may be 16, but there may be no more than 8 contiguous lowercase letters and no more than 8 contiguous digits?
[17:46:22] <locsmif> Hmm, correction, the match may be length 8 max
[17:46:54] <re101-mole-53> Yes, max. 8 characters, letters first, numbers second
[17:47:02] <locsmif> I presume your problem is in contiguousness then, otherwise you would have used [a-z\d]{0,8}
[17:47:34] <re101-mole-53> so abc123 is fine, abcdefgh is fine, 12345678 is fine, but 1234abcd is not, and neither is abcd123456
[17:48:33] <locsmif> Hmmm, difficult, maybe somebody more skillful then I am knows a solution
[17:49:27] <re101-mole-53> For context, valid match is one string containing two unpadded incremental values, just one is in letters because who knows
[17:52:22] <locsmif> I'm afraid your next best solution may be to match first and then verify your match is no longer than 8
[17:53:23] *** Joins: vlm (~vlm@user/vlm)
[17:54:24] *** Quits: anshul1217 (~anshul121@213.156.160.98) (Quit: Client closed)
[17:55:22] *** Joins: ahmedelgabri (~ahmedelga@2a02-a446-d88a-1-c8d-534f-491e-f3bd.fixed6.kpn.net)
[17:55:37] *** Parts: Me-me (~me-me@user/me-me) (Closing Window)
[17:57:21] *** Joins: Me-me (~me-me@user/me-me)
[17:57:21] *** ChanServ sets mode: +v Me-me
[18:07:18] <locsmif> re101-mole-53: trying something
[18:09:43] <locsmif> re101-mole-53: what is expected after your match? A space?
[18:10:35] *** Joins: re101-okapi-77 (~re101-oka@162.44.151.11)
[18:10:45] *** Quits: re101-okapi-77 (~re101-oka@162.44.151.11) (Client Quit)
[18:11:43] <locsmif> re101-mole-53: how about this? https://regex101.com/r/RNTL56/1
[18:13:27] <locsmif> Or, perhaps: https://regex101.com/r/RNTL56/2
[18:13:51] <locsmif> Hmmm, no, scratch that.
[18:15:19] <locsmif> re101-mole-53: perhaps this: https://regex101.com/r/zqQ20K/1
[18:16:27] <locsmif> Hmmm, matches are still alllowed to be too long.
[18:27:05] <locsmif> This, maybe: https://regex101.com/r/zqQ20K/2
[18:28:27] <locsmif> You'll probably have to tweak a bit to make sure it observe your further match constraints, which I honestly haven't fully understood.
[18:28:41] <locsmif> But it seems to be quite close to what you want?
[18:42:35] <digitok> 07re101-mole-53, ^(?!.{9})[a-z]*\d*$
[18:45:52] <locsmif> Hmmm, that doesn't seem to match test cases? https://regex101.com/r/7d9VGs/1
[18:52:24] <digitok> they would need to be on individual lines
[18:53:37] <locsmif> I've tested that too just now, no matches? Maybe you could share a regex101 example?
[18:54:01] <locsmif> Yours is of course way more concise, so if it worked, it could be great
[18:54:30] <digitok> you have a space at the start of the regex
[18:54:37] <locsmif> Hmm, Yup, just noticed
[18:55:55] <locsmif> Works if it is one string on a line indeed :)
[18:56:22] *** Joins: re101-horse-28 (~re101-hor@165.225.26.249)
[19:04:31] <digitok> hehe :)
[19:05:00] *** Quits: mozgalom (~mozgalom@194.144.47.113) (Quit: SO LONG SUCKERS!)
[19:06:08] <re101-horse-28> https://regex101.com/r/q0HWzT/1
[19:06:21] <re101-horse-28> need help ignoring the ~$SEN... files :'(
[19:07:10] *** Joins: enoq (~enoq@2a05:1141:1f5:5600:b9c9:721a:599:bfe7)
[19:07:25] <enoq> how do I say: must not have an @ sign
[19:11:05] <enoq> got it
[19:11:07] <enoq> ^[^@]*$
[19:11:52] *** Joins: re101-moose-33 (~re101-moo@ec2-54-254-248-42.ap-southeast-1.compute.amazonaws.com)
[19:12:07] <re101-moose-33> Hello I want to help for javascript sort string array
[19:13:08] <re101-moose-33> I have this ["Banana-1", "Banana-2", "Banana-10", "Banana-3"]. I want like this ["Banana-1", "Banana-2", "Banana-3", "Banana-10"].
[19:14:39] *** Quits: karakedi (~eAC53C340@user/karakedi) (Ping timeout: 256 seconds)
[19:15:03] <re101-moose-33> someone help me plz
[19:15:30] *** Joins: karakedi (~eAC53C340@user/karakedi)
[19:21:19] <enoq> re101-horse-28: wrong channel
[19:22:44] <enoq> re101-moose-33: what you are looking for however is called "natural sort"; here's the first google link https://stackoverflow.com/questions/2802341/javascript-natural-sort-of-alphanumerical-strings
[19:23:33] *** Quits: re101-moose-33 (~re101-moo@ec2-54-254-248-42.ap-southeast-1.compute.amazonaws.com) (Quit: Client closed)
[19:24:56] *** Quits: han-solo (~hanish@user/han-solo) (Quit: leaving)
[19:28:50] <locsmif> I wonder if that was a homework assignment, haha
[19:30:07] <re101-horse-28> Why is the * in ^[^~]* needed to exclude files beginning with ~ ?
[19:30:09] <re101-horse-28> I mean
[19:30:44] <re101-horse-28> ^[^~]*SEN_.*_TRN_.*_Communication.xlsm will match SEN_0_00_05_32_TRN_5_05_01_65_Communication.xlsm, but ^[^~]SEN_.*_TRN_.*_Communication.xlsm won't.
[19:31:37] <re101-horse-28> If I want to ignore something, why do I need to say how many of them I want to ignore, how many being 0 or more xD
[19:32:32] <re101-horse-28> it's a bit misleading I think
[19:32:52] <re101-horse-28> I lost an hour trying to understand why it didn't work with ^[^~]
[19:36:29] <re101-mole-53> digitok locsmif: had to wrap up work sorry, but definitely looks like lookahead is the way to go for regex only
[19:36:30] <re101-mole-53> thanks!
[19:36:45] *** Quits: re101-mole-53 (~re101-mol@62-131-37-176.fixed.kpn.net) (Quit: Client closed)
[19:39:08] <locsmif> re101-horse-28: because you are literally commanding the regex engine to find any character other than ~ *before* the string SEN
[19:39:28] <locsmif> Since you are looking for filenames which always start with SEN, this will fail
[19:39:57] <locsmif> Because, obviously, there is no non-"~" character there, and yet you command the regex engine to find it, or else fail the match
[19:41:15] *** Joins: Floflobel_ (~Floflobel@82-64-37-152.subs.proxad.net)
[19:41:33] <locsmif> Therefore, you must then specify  there must *zero or more* non-"~" characters at a beginning of a string. Frankly, I don't understand what you don't simply match ^SEN and be done with it?
[19:42:23] <locsmif> Unless the match you specify is actually e.g. XSEN_0_00_05_32_TRN_5_05_01_65_Communication.xlsm
[19:42:41] <locsmif> or YSEN_0_00_05_32_TRN_5_05_01_65_Communication.xlsm, but not ~SEN_0_00_05_32_TRN_5_05_01_65_Communication.xlsm
[19:43:37] *** Quits: Floflobel (~Floflobel@82-64-37-152.subs.proxad.net) (Ping timeout: 240 seconds)
[19:45:22] <locsmif> If all else fails, you attempt to use a zero-width lookbehind assertion instead, which is where you tell the regex engine: I want to match SEN_<something>, but "SEN" may not be *preceded* with a "~", and the "zero-width" bit ensures that it doesn't actually *require* there to be a non-"~" character there.
[19:46:32] *** Quits: cthulchu (~Cthulchu@184-090-172-137.res.spectrum.com) (Ping timeout: 256 seconds)
[19:48:19] <locsmif> re101-horse-28: example: https://regex101.com/r/rSyMIO/1
[19:48:27] *** Joins: re101-pika-76 (~re101-pik@194.5.53.37)
[19:49:59] *** Quits: re101-pika-76 (~re101-pik@194.5.53.37) (Client Quit)
[19:56:12] *** Quits: enoq (~enoq@2a05:1141:1f5:5600:b9c9:721a:599:bfe7) (Quit: enoq)
[20:13:59] *** Hobadee_ is now known as Hobadee
[20:32:27] <re101-horse-28> Maybe because i'm stupid ? :D
[20:32:31] <re101-horse-28> Thank you locsmif
[20:32:37] <re101-horse-28> much clearer in my head now
[20:33:25] *** Quits: shailangsa_ (~shailangs@host86-162-150-202.range86-162.btcentralplus.com) (Ping timeout: 240 seconds)
[20:34:37] <re101-horse-28> https://regex101.com/r/0oHo8e/1 doesn't work, that's why i didn't use the ^SEN :'(
[20:35:13] <re101-horse-28> forget it
[20:35:17] <re101-horse-28> it works with multiline option
[20:35:20] <re101-horse-28> ofc
[20:42:35] *** Quits: re101-horse-28 (~re101-hor@165.225.26.249) (Quit: Client closed)
[20:51:04] *** Quits: ahmedelgabri (~ahmedelga@2a02-a446-d88a-1-c8d-534f-491e-f3bd.fixed6.kpn.net) (Ping timeout: 268 seconds)
[21:02:51] *** Joins: src (~src@user/src)
[21:15:07] *** Joins: shailangsa (~shailangs@host86-162-150-202.range86-162.btcentralplus.com)
[21:16:49] *** Joins: ahmedelgabri (~ahmedelga@2a02-a446-d88a-1-c8d-534f-491e-f3bd.fixed6.kpn.net)
[21:21:43] *** Quits: bin101 (~bin101@user/bin101) (Ping timeout: 256 seconds)
[21:22:46] *** Joins: bin101 (~bin101@user/bin101)
[21:22:57] *** Quits: ahmedelgabri (~ahmedelga@2a02-a446-d88a-1-c8d-534f-491e-f3bd.fixed6.kpn.net) (Ping timeout: 240 seconds)
[21:43:20] *** Joins: adeliktas72 (~adeliktas@i59F5F686.versanet.de)
[21:44:57] *** Quits: adeliktas (~adeliktas@i59F5F686.versanet.de) (Ping timeout: 256 seconds)
[21:44:58] *** adeliktas72 is now known as adeliktas
[21:45:25] *** Joins: ahmedelgabri (~ahmedelga@2a02-a446-d88a-1-c8d-534f-491e-f3bd.fixed6.kpn.net)
[21:46:32] *** Quits: epony (epony@user/epony) (Ping timeout: 240 seconds)
[21:50:13] *** Joins: epony (epony@user/epony)
[21:50:16] *** Quits: ahmedelgabri (~ahmedelga@2a02-a446-d88a-1-c8d-534f-491e-f3bd.fixed6.kpn.net) (Ping timeout: 268 seconds)
[21:52:53] *** Quits: adeliktas (~adeliktas@i59F5F686.versanet.de) (Ping timeout: 256 seconds)
[21:56:22] *** Joins: ttree (~ttree0@c-73-169-193-237.hsd1.wa.comcast.net)
[22:00:09] *** Joins: adeliktas (~adeliktas@i59F5F686.versanet.de)
[22:09:37] *** Quits: adeliktas (~adeliktas@i59F5F686.versanet.de) (Ping timeout: 240 seconds)
[22:10:44] *** Joins: adeliktas (~adeliktas@i59F5F686.versanet.de)
[22:49:20] *** Joins: adeliktas1 (~adeliktas@i59F5F686.versanet.de)
[22:50:57] *** Quits: adeliktas (~adeliktas@i59F5F686.versanet.de) (Ping timeout: 240 seconds)
[22:50:57] *** adeliktas1 is now known as adeliktas
[23:22:21] *** Joins: ahmedelgabri (~ahmedelga@2a02-a446-d88a-1-c8d-534f-491e-f3bd.fixed6.kpn.net)
[23:22:27] *** Quits: adeliktas (~adeliktas@i59F5F686.versanet.de) (Quit: like, subscribe, turn notifications on, buy my merch, write me an email and have a nice day.)
[23:28:54] *** Joins: adeliktas (~adeliktas@i59F5F686.versanet.de)
[23:42:07] *** Quits: adeliktas (~adeliktas@i59F5F686.versanet.de) (Ping timeout: 256 seconds)
