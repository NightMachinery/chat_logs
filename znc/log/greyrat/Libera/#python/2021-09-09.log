[00:02:08] *** Quits: bitmega (~bitmega@user/bitmega) (Quit: WeeChat 3.2.1)
[00:03:05] *** Quits: akmod (~akmod@c-24-10-154-68.hsd1.ut.comcast.net) (Remote host closed the connection)
[00:03:11] *** Joins: bitmega (~bitmega@user/bitmega)
[00:04:22] *** Quits: theprophet (~theprophe@85.114.228.184) (Quit: Client closed)
[00:04:22] *** Quits: Jefren (~Jefren@70.35.66.223) (Ping timeout: 252 seconds)
[00:06:10] <Fieldy> anyway, when i run this stuff in the python shell manually, i get output. gonna crawl back into my cave and start over, chalking it up to some user error silliness :x
[00:06:21] *** Joins: Jefren (~Jefren@70.35.67.154)
[00:07:18] *** Joins: EvilDMP (~textual@django/moderator/EvilDMP)
[00:07:49] *** Joins: bilb_ono_ (~alexmarsh@ip68-6-90-72.sb.sd.cox.net)
[00:08:15] *** Quits: bilb_ono (~alexmarsh@ip68-6-90-72.sb.sd.cox.net) (Ping timeout: 260 seconds)
[00:08:15] *** bilb_ono_ is now known as bilb_ono
[00:09:12] *** Quits: y1n (~y1n@84-115-65-155.wifi.dynamic.surfer.at) (Ping timeout: 245 seconds)
[00:10:48] *** Joins: webmind (~webmind@user/webmind)
[00:11:27] *** Joins: ELFrederich (~ELFrederi@134.244.29.70)
[00:12:20] *** Quits: georgios (~georgios@user/georgios) (Ping timeout: 260 seconds)
[00:12:59] *** Quits: bitmega (~bitmega@user/bitmega) (Quit: WeeChat 3.2.1)
[00:13:29] *** Quits: gitesh (uid423739@id-423739.ilkley.irccloud.com) (Quit: Connection closed for inactivity)
[00:13:39] *** Joins: bitmega (~bitmega@user/bitmega)
[00:14:21] *** Quits: bitmega (~bitmega@user/bitmega) (Client Quit)
[00:15:36] *** Quits: GenTooMan (~cyberman@2601:547:437f:e5c6:21f:5bff:fefe:a883) (Remote host closed the connection)
[00:16:06] *** Joins: GenTooMan (~cyberman@2601:547:437f:e5c6:21f:5bff:fefe:a883)
[00:17:12] *** Quits: mat001 (~mat001@c-73-223-64-126.hsd1.ca.comcast.net) (Remote host closed the connection)
[00:18:30] *** Joins: wickedjargon (~wickedjar@2607:9880:2198:4e::325e)
[00:21:05] *** Joins: mat001 (~mat001@c-73-223-64-126.hsd1.ca.comcast.net)
[00:22:31] *** Joins: besnn (~besnn@user/besnn)
[00:22:46] *** Joins: bitmega (~bitmega@user/bitmega)
[00:22:57] *** Joins: y1n (~y1n@84-115-65-155.wifi.dynamic.surfer.at)
[00:23:02] *** Quits: Wulf (~Wulf@user/wulf) (Ping timeout: 252 seconds)
[00:23:19] *** Quits: EvilDMP (~textual@django/moderator/EvilDMP) (Quit: My MacBook has gone to sleep. ZZZzzz…)
[00:23:20] *** Quits: bitmega (~bitmega@user/bitmega) (Quit: WeeChat 3.2.1)
[00:23:59] *** Quits: wickedjargon (~wickedjar@2607:9880:2198:4e::325e) (Quit: Leaving)
[00:24:29] *** Quits: LostInWeb (~quassel@narvi.bifroest.eu) (Quit: https://quassel-irc.org - Chat comfortably. Anywhere.)
[00:24:50] *** Joins: Wulf (~Wulf@user/wulf)
[00:27:05] <Fieldy> alright, i feel crazy. I'm using this example: https://huggingface.co/gpt2?text=A+long+time+ago%2C#how-to-use  . on the python 3.7.11 shell, i get output like it shows. when i put it into a script (removing the >>>'s), i get no output, and no errors. any ideas? this is the script: https://bpa.st/L2DA
[00:27:26] *** Quits: goldfish (~goldfish@user/goldfish) (Ping timeout: 252 seconds)
[00:27:45] *** Joins: bitmega (~bitmega@user/bitmega)
[00:27:46] <grym> Fieldy: repls print things "for free", code doesn't.
[00:28:02] <grym> probably, you'll want to say `result = generator(...; print(result)`
[00:29:29] *** Joins: TranquilEcho (~grom@user/tranquilecho)
[00:29:56] <Fieldy> grym: i'm sorry I really don't understand the first part?
[00:29:57] *** Joins: theprophet (~theprophe@85.114.228.184)
[00:31:51] *** Quits: Deknos (~someone@user/menace) (Read error: Connection reset by peer)
[00:32:04] *** Quits: abraham (~abraham@191.96.121.37) (Quit: My MacBook Air has gone to sleep. ZZZzzz…)
[00:33:03] <Fieldy> i understand the changing the output, as that's how i'm doing it in the former version. seems like a less than optimal example
[00:33:11] <Fieldy> (on the page)
[00:33:40] <jinsun> in the repl when you enter an expression, it gets printed automatically (and None gets eaten)
[00:33:48] *** Quits: zmt00 (~zmt00@user/zmt00) (Read error: Connection reset by peer)
[00:33:49] *** Quits: mozgalom (~mozgalom@194.144.47.113) (Quit: My MacBook has gone to sleep. ZZZzzz…)
[00:34:15] <jinsun> but if you run your file.py with python, you have to put print() around the expression
[00:34:50] <Fieldy> jinsun: okay, i understand now. pretty noob here, I hope I don't regret this... what does repl mean
[00:35:04] <yitz> read evaluate print loop
[00:35:18] <jinsun> Fieldy: the thing you were calling "shell"
[00:35:20] *** Quits: bitmega (~bitmega@user/bitmega) (Quit: WeeChat 3.2.1)
[00:35:21] <yitz> i.e. what you get when you run "python" in your terminal
[00:35:37] *** Joins: bitmega (~bitmega@user/bitmega)
[00:35:39] <Fieldy> ah!
[00:35:43] <Fieldy> got it, thanks
[00:35:49] <Fieldy> making the changes now
[00:36:37] *** Quits: r3m (~launch@user/r3m) (Quit: WeeChat 3.3-dev)
[00:37:01] *** Joins: r3m (~launch@user/r3m)
[00:37:48] *** Quits: bitmega (~bitmega@user/bitmega) (Client Quit)
[00:38:39] *** Joins: kickingvegas (~cchoi@c-24-5-40-20.hsd1.ca.comcast.net)
[00:38:59] *** Quits: withered_wolf (~withered_@1437135-v103.1561-static.stchilaa.metronetinc.net) (Ping timeout: 252 seconds)
[00:39:42] <theprophet> wow, i am amazed by dictionaries in python. its ultra deep.
[00:40:02] *** Joins: imakestuff (~imakestuf@197.156.111.180)
[00:40:03] *** Joins: withered_wolf (~withered_@1437135-v103.1561-static.stchilaa.metronetinc.net)
[00:40:51] <Fieldy> right on. it's now outputting its results. excellent
[00:42:15] <theprophet> man python crash course is really good book.
[00:43:52] *** Joins: abhixec (~abhixec@c-67-169-139-16.hsd1.ca.comcast.net)
[00:45:06] *** Quits: Haxxa (~Haxxa@122.199.45.213) (Quit: Haxxa flies away.)
[00:45:11] <p-i-_> Is there any one=liner for reading a file into a string? Or do I have to `with open(...) as f: s=f.read()
[00:46:03] *** Joins: FFY00 (~FFY00@archlinux/trusteduser/ffy00)
[00:46:39] <jinsun> assuming pathlib is already imported, `pathlib.Path(...).read_text()` is one line
[00:46:42] *** Quits: FFY00_ (~FFY00@archlinux/trusteduser/ffy00) (Ping timeout: 265 seconds)
[00:46:50] <grym> p-i-_: pathlib.Path(thefilename).read_text()
[00:47:03] *** Quits: jvh (~jvh@user/jvh) (Read error: Connection reset by peer)
[00:47:23] *** Joins: jvh (~jvh@user/jvh)
[00:48:02] *** Joins: Haxxa (~Haxxa@122.199.45.213)
[00:49:03] *** Quits: jvh (~jvh@user/jvh) (Read error: Connection reset by peer)
[00:49:12] <Fieldy> p-i-_: this is how i'm using it, at least in 3.7.11. please note i can't guarantee this is the best or even a good way, but it does work for me. https://bpa.st/4IPA
[00:49:19] *** Joins: georgios (~georgios@user/georgios)
[00:49:22] *** Joins: jvh (~jvh@user/jvh)
[00:49:42] <Fieldy> for everyone else, i've moved on from that and am rewriting it using a lower level library (transformers versus happytransformers)
[00:51:05] *** Quits: darksun (~darksun@user/darksun) (Ping timeout: 252 seconds)
[00:51:17] *** Quits: Sky_Net (~Sky_Net@176.14.213.85) (Read error: Connection reset by peer)
[00:52:03] <ska> Is it possible to take a pure rust library and use that to create a python module? IE> The Rust libary has not pre-cognition of Python at all.
[00:53:22] *** Quits: jvh (~jvh@user/jvh) (Ping timeout: 245 seconds)
[00:54:09] <grym> ska: you can use cffi and rust i think
[00:54:16] <grym> to make a python binding to the library
[00:55:05] <grym> ska: a very quick google yields https://gist.github.com/seanjensengrey/f5d73bbdf22cfa1ad463
[00:55:31] *** Quits: Wulf (~Wulf@user/wulf) (Ping timeout: 252 seconds)
[00:56:19] <ska> Cool kids ;)
[00:57:51] *** Quits: linux_dream (~isaac@2a01:e0a:7:60e0:bcc4:b32c:9221:831d) (Quit: WeeChat 3.2)
[00:59:03] <p-i-_> My gosh what are you up to Fieldy? 48 gigs RAM
[00:59:09] *** Joins: Auron (~Auron956@user/auron)
[00:59:25] <p-i-_> tx grym
[01:01:25] * foo investigates generating a timezone list with pytz
[01:01:44] <foo> Looks like pytz.common_timezones has what I want, just need to pull offsets
[01:03:44] *** Joins: raxor2k (~raxor2k@78.158.248.158)
[01:04:06] *** Quits: fikran (~fikran@user/fikran) (Ping timeout: 265 seconds)
[01:04:22] <raxor2k> bjs: is it possible to do add keys to a dict manually? like: "if 'name' not in dict:  add ' name' : 'tim'"
[01:05:32] <jinsun> raxor2k: `d.setdefault("name", "tim")`
[01:05:52] *** Joins: fikran (~fikran@user/fikran)
[01:05:55] <Repiphany> d['name'] = 'tim'
[01:07:17] *** Joins: sym (tekla@user/sym)
[01:07:28] *** Quits: freeman_h (~freeman_h@2a02:c7f:fc54:ba00:5d43:45db:959a:84d6) (Quit: Leaving)
[01:07:32] <raxor2k> thanks boys <3
[01:08:53] *** Parts: justsomeguy (~justsomeg@user/justsomeguy) (WeeChat 3.2)
[01:09:25] *** Quits: y1n (~y1n@84-115-65-155.wifi.dynamic.surfer.at) (Ping timeout: 265 seconds)
[01:09:44] *** Parts: sym (tekla@user/sym) ()
[01:10:06] <bjs> raxor2k: yes, `if "name" not in dict: dict["name"] = "tim"`
[01:10:50] *** Joins: str1ve (~strive@user/strive)
[01:11:16] <raxor2k> bjs for president <3
[01:11:26] <raxor2k> i have finally solved my task
[01:11:28] * grym whispers something about defaultdict 
[01:11:33] <raxor2k> everything works perfectly
[01:12:09] *** Joins: vvdaiwrw (~rvgzuuqp@gateway/tor-sasl/rvgzuuqp)
[01:13:17] *** Joins: p-i- (~Ohmu@223.206.69.159)
[01:13:26] *** Quits: supakeen (~user@python/site-packages/supakeen) (Remote host closed the connection)
[01:13:34] *** Joins: Celeo (~Celeo@user/celeo)
[01:13:50] *** Joins: supakeen (~user@python/site-packages/supakeen)
[01:16:25] *** Quits: p-i-_ (~Ohmu@223.206.69.159) (Ping timeout: 252 seconds)
[01:17:01] *** Joins: darksun (~darksun@user/darksun)
[01:18:37] *** Joins: blackout69 (~blackout6@net-31-156-75-64.cust.vodafonedsl.it)
[01:20:27] *** Quits: puff (~user@S0106d4ca6d80a83c.vs.shawcable.net) (Remote host closed the connection)
[01:20:40] *** Joins: puff (~user@S0106d4ca6d80a83c.vs.shawcable.net)
[01:21:20] *** Quits: besnn (~besnn@user/besnn) (Ping timeout: 252 seconds)
[01:21:30] *** Quits: carl- (~carl-@c-138ee555.02-180-73746f39.bbcust.telenor.se) (Ping timeout: 265 seconds)
[01:21:53] *** Quits: bancroft (~bancroft@bras-base-mtrlpq02hsy-grc-09-76-68-189-147.dsl.bell.ca) (Ping timeout: 252 seconds)
[01:21:59] *** Quits: darksun (~darksun@user/darksun) (Ping timeout: 265 seconds)
[01:22:03] *** Joins: bitmega (~bitmega@user/bitmega)
[01:22:05] *** Joins: kyooo (~kyooo@2a02:a31d:a13c:5600:559d:f748:905d:cda9)
[01:22:58] *** Quits: manti7 (~manti7@176.10.104.94) (Quit: WeeChat 3.1)
[01:23:03] *** Joins: y1n (~y1n@84-115-65-155.wifi.dynamic.surfer.at)
[01:23:16] *** Joins: Jefren1 (~Jefren@70.35.66.251)
[01:24:47] *** Quits: vicfred (~vicfred@user/vicfred) (Quit: Leaving)
[01:25:27] *** Quits: imakestuff (~imakestuf@197.156.111.180) (Remote host closed the connection)
[01:25:52] *** Quits: Jefren (~Jefren@70.35.67.154) (Ping timeout: 245 seconds)
[01:26:21] *** Joins: Lord_of_Life_ (~Lord@user/lord-of-life/x-2819915)
[01:27:08] *** Joins: shawwwn (uid6132@id-6132.helmsley.irccloud.com)
[01:27:23] *** Quits: Lord_of_Life (~Lord@user/lord-of-life/x-2819915) (Ping timeout: 252 seconds)
[01:27:34] *** Joins: besnn (~besnn@user/besnn)
[01:29:00] *** Lord_of_Life_ is now known as Lord_of_Life
[01:29:28] *** Quits: Everything (~Everythin@37.115.210.35) (Quit: leaving)
[01:34:06] <defjam> hey i am using pdb, and i have a variable with the web page i have just read from beautiful soup.
[01:34:18] <defjam> when i p variable ..it isjust a mess
[01:34:27] <defjam> i would have expected pdb to display html as text
[01:34:50] *** Joins: EvilDMP (~textual@django/moderator/EvilDMP)
[01:36:02] *** Quits: nomic (~nomic@185.192.69.188) (Quit: Leaving)
[01:36:12] *** Quits: ham5urg (~ham5urg@p5ddfcd25.dip0.t-ipconnect.de) (Quit: Leaving)
[01:36:13] *** Quits: ubert (~Thunderbi@178.115.77.119.wireless.dyn.drei.com) (Ping timeout: 252 seconds)
[01:37:08] *** Quits: wovixo (~wovixo@128.104.205.49) (Quit: Leaving)
[01:37:25] *** Joins: zln (~zln@c80-217-230-193.bredband.tele2.se)
[01:39:13] *** Quits: EgonX (~EgonX@2601:2c6:47f:9c18:385a:8616:2ea6:bd5d) (Quit: Textual IRC Client: www.textualapp.com)
[01:43:15] *** Quits: y1n (~y1n@84-115-65-155.wifi.dynamic.surfer.at) (Ping timeout: 265 seconds)
[01:46:06] *** Quits: milkt (~debian@gateway/tor-sasl/milkt) (Ping timeout: 276 seconds)
[01:46:31] <nedbat> defjam: pdb uses the __repr__ of an object, which is more authoritative.  it would be odd to see text, then parse it, and still see text.
[01:49:33] *** Joins: darksun (~darksun@user/darksun)
[01:51:16] <defjam> ah ok ill try and look at the __repr__
[01:53:15] *** Quits: freeworld (~vit@chello085216193138.chello.sk) (Ping timeout: 260 seconds)
[01:53:50] *** Quits: portalrat (~portalrat@user/portalrat) (Remote host closed the connection)
[01:54:10] *** Joins: portalrat (~portalrat@user/portalrat)
[01:54:51] *** Quits: darksun (~darksun@user/darksun) (Ping timeout: 265 seconds)
[01:55:51] <anddam> howdy, I have a colleague who does not feel the need for linting/formatting code. While I appreciated the freedom now that we are working on the same codebase I find myself reformatting stuff when I happen to touch it afterward
[01:56:13] <grym> anddam: precommit + black + isort time?
[01:56:26] <anddam> grym: I am using flake in the editor and black for formatting
[01:56:33] <anddam> oh I missed isort this round
[01:56:44] <grym> anddam: you can compel this to happen serverside, if you do it right )
[01:56:55] <anddam> sure, but I was wondering if there's an "official" (for what's worth) or semi-official PEP or discussion apropos the subject to persuade him
[01:57:07] *** Quits: codificat (~pep@187.red-83-46-128.dynamicip.rima-tde.net) (Quit: leaving)
[01:57:26] <grym> black belongs to the psf now
[01:57:30] *** Quits: abhixec (~abhixec@c-67-169-139-16.hsd1.ca.comcast.net) (Remote host closed the connection)
[01:57:34] <grym> that speaks to a certain acceptance
[01:57:51] <grym> but if you're looking for Iron Laws, python doesn't have them
[01:57:59] *** Quits: Ergo^ (~ergo@91.238.59.144) (Remote host closed the connection)
[01:58:21] <anddam> not written in stone, but I figure there has to be some known discussion about that
[01:58:28] *** Quits: Akuli (~Akuli@87-94-109-224.bb.dnainternet.fi) (Quit: Leaving)
[01:58:28] *** Joins: zmt00 (~zmt00@user/zmt00)
[01:58:32] <anddam> ml or PEP or whatelse
[01:58:45] <grym> you shouldn't have to appeal to a language committee to say "hey bob it's hard to read your code, and it's not hard to read alices' and mine, let's all play nice huh?"
[01:59:13] <anddam> sure, but he's the senior
[01:59:20] <grym> pep8 is a/the canonical reference for "we think generally these conventions are good"
[01:59:34] <anddam> my idea counts up till a certain point
[01:59:59] <anddam> in my repo I am rewriting stuff and that's it, personally I like the approach of a code that is conforming to a formal set of rule
[02:00:08] <anddam> not to "how do I feel today"
[02:00:41] <grym> anddam: as a holdover, anyway, there's https://github.com/akaihola/darker
[02:00:52] <grym> i do this to breadcrumb my way through codebases
[02:01:28] *** Joins: abraham (~abraham@191.96.121.37)
[02:02:55] <anddam> grym: that's nice thanks
[02:03:10] <grym> "oh, i can read this code; i must've written it"
[02:03:10] *** Quits: ferz (~ferz@93-39-142-17.ip76.fastwebnet.it) (Ping timeout: 252 seconds)
[02:03:42] *** Quits: Hokedli (~lasliedv@gateway/tor-sasl/hokedli) (Quit: Konversation terminated!)
[02:04:58] *** Joins: bancroft (~bancroft@bras-base-mtrlpq02hsy-grc-09-76-68-189-147.dsl.bell.ca)
[02:05:05] <c4017w_> Can someone explain why the PyCharm type hinter doesn't catch this? https://bpa.st/KQUA I would expect the last line to be highlighted since the dict was declared to have string keys
[02:05:52] *** Quits: flyback (~flyback@2601:540:8201:1e60:3cb8:7bae:b60:429c) (Ping timeout: 245 seconds)
[02:05:56] <c4017w_> if I change the line above to .clear() it works, but that doesn't seem necessary. It should remember how it was declared in __init__
[02:05:56] *** Quits: raxor2k (~raxor2k@78.158.248.158) ()
[02:07:41] *** Quits: GreenResponse (~tomek@r-45-155-148-237.gpon.bialnet.pl) (Quit: Leaving)
[02:07:55] *** Quits: magla (~gelignite@55d4c46b.access.ecotel.net) (Quit: Stay safe!)
[02:08:07] <Soni> so uh we have `repo = pygit2.Repository(os.getcwd())` and we have `changes = [list(l.split(" ", 2)) for l in sys.stdin]`, how do we get a Path to $HOME/.cache/gitdumper/foo.git/ when getcwd is /var/www/git-repos/foo.git/ (i.e. the foo.git should carry over)?
[02:08:30] *** Joins: EgonX (~EgonX@2601:2c6:47f:9c18:4c33:a7d1:f089:3a07)
[02:09:29] <grym> .relative_to, but it's fussy
[02:09:29] *** Joins: flyback (~flyback@2601:540:8201:1e60:3cb8:7bae:b60:429c)
[02:09:41] *** Quits: computeiro (~Wender@189.37.69.130) (Read error: No route to host)
[02:10:16] *** Joins: computeiro (~Wender@189.37.69.130)
[02:10:19] *** Quits: zebrag (~chris@user/zebrag) (Ping timeout: 252 seconds)
[02:10:20] <Soni> grym: fussy?
[02:10:43] *** Joins: zebrag (~chris@user/zebrag)
[02:10:49] <grym> i've never quite figured out what it wants in order to work
[02:11:16] <Soni> strip_prefix?
[02:11:31] <Soni> (... okay that's a rust thing, but anyway)
[02:12:27] <grym> you can juggle .parents, which is a .... tuple?
[02:12:33] *** Joins: GreaseMonkey (greaser@user/greasemonkey)
[02:12:45] <grym> tupleish
[02:13:21] <Soni> so just, `pathlib.Path(???) / pathlib.Path(os.getcwd()).relative_to("/var/www/git-repos")` ?
[02:13:36] <jinsun> c4017w_: it should be `Dict[str, int]` in line 5 btw, pyright and mypy are catching that actually when I try it in vscode, not sure what pycharm uses
[02:13:38] <jwhisnant> Soni: why not just clone goo.git into $HOME/.cache/gitdumper?
[02:13:57] <Soni> jwhisnant: how would that help with anything?
[02:14:31] <c4017w_> jinsun, oops typo. I checked that mypy catches it too, so looks like it's just PyCharm being dumb
[02:14:34] <grym> in general i find having to know what my cwd is to be a sign i've done something wrong
[02:14:36] <jwhisnant> Soni: I don't know! (I haven't seen what you are trying to accomplish, maybe that was before I joined)
[02:15:06] <jwhisnant> Soni: I have only seen "I want to do X". I am trying to figure out the end goal.
[02:16:37] <Soni> grym: eh, it's meant to be slightly more convenient than generating post-receive scripts for each git repo
[02:16:38] <jinsun> c4017w_: oh actually mypy doesn't catch that unless you add return type annotation to func, I had strict mode enabled so I added the -> None annotation myself, try that in pycharm
[02:16:42] <nedbat> Soni: instead of hardcoding $HOME/.cache, you might like https://pypi.org/project/appdirs/
[02:16:46] <grym> Soni: https://bpa.st/UR2Q
[02:17:12] <nedbat> jwhisnant: people vary in how well they can explain the backstory unfortunately
[02:17:23] <c4017w_> jinsun, ran into the same thing, so I added -> None but PyCharm still doesn't catch it
[02:17:54] <Soni> jwhisnant: basically making a post-receive githooks
[02:18:05] <Soni> githooks(5)
[02:18:27] <c4017w_> I guess it uses `self.something = {}` to infer the types and isn't smart enough to know that it should use the declaration in __init__
[02:18:30] *** Quits: EvilDMP (~textual@django/moderator/EvilDMP) (Quit: My MacBook has gone to sleep. ZZZzzz…)
[02:19:21] <jinsun> ok, so now we can finally blame it on pycharm being dumb, maybe there is/will be an update to it to catch this, does it have a strict mode?
[02:20:06] <c4017w_> I hoped someone here would know if a setting. I can't find any
[02:20:37] <c4017w_> There does seem to be a mypy plugin for PyCharm. Maybe that will work better
[02:21:30] *** Joins: EvilDMP (~textual@django/moderator/EvilDMP)
[02:21:52] *** Quits: kosh (~kosh@user/kosh) (Ping timeout: 252 seconds)
[02:22:58] *** Quits: odoood (~odoood@2601:c8:c003:a550::3) (Ping timeout: 252 seconds)
[02:24:24] *** Joins: cjbayliss (~cjb@user/cjb)
[02:24:46] *** cjbayliss is now known as cjb
[02:26:36] <c4017w_> the mypy plugin real-time scan catches it. I'll use that if it's not too slow
[02:27:07] *** Quits: Narrat (~omnius@p200300df5f01ca1206ea56fffe2e7cdc.dip0.t-ipconnect.de) (Quit: They say a little knowledge is a dangerous thing, but it's not one half so bad as a lot of ignorance.)
[02:28:26] *** Quits: otisolsen70 (~otisolsen@xd4ed80b5.cust.hiper.dk) (Quit: Leaving)
[02:28:44] *** Joins: milkt (~debian@gateway/tor-sasl/milkt)
[02:29:33] *** Quits: fedenix (~fedenix@gateway/tor-sasl/fedenix) (Remote host closed the connection)
[02:29:35] *** Quits: sn1tch3r (~sn1tch3r@user/sn1tch3r) (Quit: Leaving)
[02:30:17] *** Joins: Metalsutton (~Metalsutt@101.100.153.131)
[02:30:40] *** Joins: nomic (~nomic@185.192.69.188)
[02:32:03] *** Joins: lifefir3 (~lifefir3@152.37.120.101)
[02:32:17] *** Joins: jvh (~jvh@user/jvh)
[02:32:56] *** Parts: blackout69 (~blackout6@net-31-156-75-64.cust.vodafonedsl.it) ()
[02:33:27] *** Quits: cjb (~cjb@user/cjb) (Quit: cjb)
[02:35:39] <Soni> okay so that's nice `name = pathlib.Path(os.getcwd()).relative_to(repo.config["htmldumper.base"])`
[02:39:17] *** Joins: rtypo (~alex@user/rtypo)
[02:40:07] *** Quits: pyfisch (~pyfisch@user/pyfisch) (Ping timeout: 240 seconds)
[02:40:36] *** Quits: Celeo (~Celeo@user/celeo) (Quit: Leaving)
[02:42:44] *** Quits: qlixed (~qlixed@181.44.129.13) (Ping timeout: 252 seconds)
[02:43:46] *** Quits: dbristow (~dbristow@user/dbristow) (Quit: Leaving)
[02:45:36] *** Joins: cjb (~cjb@user/cjb)
[02:46:49] *** Quits: TranquilEcho (~grom@user/tranquilecho) (Quit: WeeChat 2.8)
[02:47:10] *** Quits: besnn (~besnn@user/besnn) (Ping timeout: 252 seconds)
[02:47:13] *** Quits: thurs81 (~thurs@ip68-225-209-147.ph.ph.cox.net) (Quit: Ping timeout (120 seconds))
[02:47:35] *** Joins: thurs8 (~thurs@ip68-225-209-147.ph.ph.cox.net)
[02:49:03] *** Quits: EvilDMP (~textual@django/moderator/EvilDMP) (Quit: My MacBook has gone to sleep. ZZZzzz…)
[02:49:16] *** Joins: dutch (~DutchIngr@user/dutch)
[02:49:35] *** Quits: palasso (~palasso@user/palasso) (Remote host closed the connection)
[02:49:36] *** Quits: argoneus (~argoneus@argoneus.com) (Quit: Ping timeout (120 seconds))
[02:49:47] *** Quits: computeiro (~Wender@189.37.69.130) (Quit: Leaving)
[02:50:00] *** Joins: argoneus (~argoneus@argoneus.com)
[02:50:28] *** Quits: thurs8 (~thurs@ip68-225-209-147.ph.ph.cox.net) (Read error: Connection reset by peer)
[02:51:01] *** Joins: thurs8 (~thurs@ip68-225-209-147.ph.ph.cox.net)
[02:51:45] *** Quits: winterflaw (~winterfla@gateway/tor-sasl/winterflaw) (Ping timeout: 276 seconds)
[02:52:10] *** Quits: gossie (~gossie@2a10:3781:328:1:e1d:50cc:c868:ca94) (Ping timeout: 260 seconds)
[02:52:26] <Fieldy> hello, i'm using 3.7.11. is there a way to get cleaner output here? for example i'd like the newlines to actually do newline things. output: https://bpa.st/D3LQ   source https://bpa.st/6ITQ
[02:52:58] *** Joins: gossie (~gossie@2a10:3781:328:1:e1d:50cc:c868:ca94)
[02:53:06] *** Quits: plastico (~plastico@neomutt/plastico) (Quit: WeeChat 3.2)
[02:53:11] <KirkMcDonald> Fieldy: You'll want to make a string, then.
[02:53:30] <Fieldy> KirkMcDonald: ok, i thought the contents of results was a string
[02:53:39] *** Joins: thurs86 (~thurs@ip72-217-111-183.ph.ph.cox.net)
[02:53:40] <KirkMcDonald> Fieldy: It's a list of dictionaries.
[02:54:07] <Fieldy> i see, so like an array?
[02:54:13] <KirkMcDonald> Yes.
[02:54:16] *** Joins: Naan (~Naan@user/naan)
[02:54:27] *** Quits: argoneus (~argoneus@argoneus.com) (Client Quit)
[02:54:31] <Fieldy> hm. so, and i don't know exactly how, i need to print each item of that array?
[02:54:42] *** Joins: argoneus (~argoneus@argoneus.com)
[02:54:57] <KirkMcDonald> Fieldy: Well, each item in the list is a dict. So you'll want to print the value in that dict.
[02:55:13] <Fieldy> KirkMcDonald: okay, what function etc should i be reading about here to learn how?
[02:55:17] <KirkMcDonald> Fieldy: So something like: for d in result: print(d["generated_text"])
[02:55:46] *** Quits: thurs8 (~thurs@ip68-225-209-147.ph.ph.cox.net) (Ping timeout: 260 seconds)
[02:55:46] *** thurs86 is now known as thurs8
[02:55:56] <Fieldy> alright so it's just a matter of stepping through conditionally if i want them all?
[02:56:15] <KirkMcDonald> Conditionally? It seems fairly unconditional so far.
[02:56:31] *** Quits: metah4ck3r (~meta@user/metah4ck3r) (Ping timeout: 252 seconds)
[02:56:55] <Fieldy> hm. well, i mean, if there are 5 of them like here, wouldn't i show each like print(a["generated_text"]) then print(b["generated_text"])      and so on?
[02:57:06] *** Quits: upsala (~zcb@185.213.155.160) (Quit: WeeChat 3.2)
[02:57:34] <KirkMcDonald> Fieldy: Yes. That's what the for loop does.
[02:57:55] <Fieldy> ok, i'll re-read up on for, i think i'm not entirely clear -- thanks
[02:58:16] *** Lando-SpacePimp is now known as Lando-DinoEater
[02:58:18] *** Joins: metah4ck3r (~meta@user/metah4ck3r)
[02:58:36] *** Joins: codeswhite (~codeswhit@2.55.8.89)
[02:59:18] *** Joins: thurs80 (~thurs@ip68-225-209-147.ph.ph.cox.net)
[02:59:30] *** Joins: MrFantastik (~f@cpe-69-204-101-67.buffalo.res.rr.com)
[03:00:18] *** Quits: LucaTM (~LucaTM@user/lucatm) (Quit: Textual IRC Client: www.textualapp.com)
[03:00:51] *** Quits: kyooo (~kyooo@2a02:a31d:a13c:5600:559d:f748:905d:cda9) (Quit: Leaving)
[03:00:53] *** Joins: dbristow (~dbristow@user/dbristow)
[03:01:14] *** Joins: pyfisch (~pyfisch@user/pyfisch)
[03:01:33] *** Quits: thurs8 (~thurs@ip72-217-111-183.ph.ph.cox.net) (Ping timeout: 265 seconds)
[03:01:42] *** thurs80 is now known as thurs8
[03:01:59] *** Quits: matsaman (~matsaman@user/matsaman) (Quit: leaving)
[03:02:37] *** Joins: johnkeats6 (~johnkeats@2804:14c:32:a0cc:34db:cb73:c9f3:b634)
[03:03:30] *** Quits: thurs8 (~thurs@ip68-225-209-147.ph.ph.cox.net) (Read error: Connection reset by peer)
[03:03:37] *** Joins: abhixec (~abhixec@c-67-169-139-16.hsd1.ca.comcast.net)
[03:03:58] *** Joins: thurs8 (~thurs@ip68-225-209-147.ph.ph.cox.net)
[03:05:07] *** Joins: ZedHedTed (~ZedHedTed@user/zedhedted)
[03:07:46] <vvdaiwrw> guess vim is beating pycharm these days https://0x0.st/-wIq.gif
[03:09:57] *** Quits: mickey (~user@user/mickey) (Quit: Ping timeout (120 seconds))
[03:10:19] *** Joins: bitdex (~bitdex@gateway/tor-sasl/bitdex)
[03:10:22] *** Joins: mickey (~user@user/mickey)
[03:10:37] *** Joins: PantelicGR (~PantelicG@user/pantelicgr)
[03:10:59] *** Quits: puff (~user@S0106d4ca6d80a83c.vs.shawcable.net) (Read error: Connection reset by peer)
[03:11:12] *** Joins: puff (~user@s0106d4ca6d80a83c.vs.shawcable.net)
[03:13:32] *** Quits: fikran (~fikran@user/fikran) (Ping timeout: 252 seconds)
[03:15:07] *** Quits: gitly (~gitly@148.252.132.151) (Ping timeout: 252 seconds)
[03:15:20] *** Quits: georgios (~georgios@user/georgios) (Quit: Konversation terminated!)
[03:15:29] *** Joins: fikran (~fikran@user/fikran)
[03:16:35] <MrFantastik> always-has-been.jpg
[03:16:37] *** Quits: amrooting (~amrooting@197.255.10.31) (Quit: Leaving)
[03:17:12] *** Joins: gitly (~gitly@148.252.129.181)
[03:18:07] *** Quits: Seiryuu (~Seiryuu@ip174-103-176-143.adsl2.static.versatel.nl) (Quit: Leaving)
[03:18:14] *** Joins: shangxiao (~davids@124.187.193.187)
[03:18:45] <vvdaiwrw> heh. correct.
[03:21:42] *** Quits: cjb (~cjb@user/cjb) (Quit: cjb)
[03:21:46] *** Joins: pwnd_sfw1 (~pwnd_sfw@ool-18b88100.dyn.optonline.net)
[03:22:20] *** Quits: pwnd_sfw (~pwnd_sfw@ool-18b88100.dyn.optonline.net) (Ping timeout: 252 seconds)
[03:22:21] *** pwnd_sfw1 is now known as pwnd_sfw
[03:22:52] *** Joins: cedric (~cedric@2a01:cb11:821:7c00:c59d:cc06:22e5:2a24)
[03:23:09] *** Joins: jetchisel (jetchisel@user/jetchisel)
[03:24:25] *** Joins: Thanatos (~Thanatos@ec2-54-148-37-124.us-west-2.compute.amazonaws.com)
[03:24:29] <very_sneaky> vvdaiwrw: which plugin are you using there? I'm using YCM/jedi which works reasonably well, but it doesn't give those context windows
[03:25:41] <mh3f> coc and coc-pyright from what it looks like
[03:25:42] <c4017w_> vvdaiwrw, nice I really need to put in the time to set up vim and see if I can eventually move away from PyCharm
[03:25:43] <vvdaiwrw> very_sneaky: ycm/jedi is old cruft, I had that way long time ago. Currently I'm with coc.nvim + coc-pyright.
[03:26:16] <vvdaiwrw> currently using neovim at that, but coc.nvim works on vim as well.
[03:26:23] <very_sneaky> huh. interesting. I use YCM mostly because it has a non-shit front-end for clangd for c++ dev
[03:26:44] <very_sneaky> python was just an additional bonus. might have to look at deconflicting plugin loading for python files
[03:26:49] *** Quits: Thanatos (~Thanatos@ec2-54-148-37-124.us-west-2.compute.amazonaws.com) (Remote host closed the connection)
[03:27:20] *** Joins: Thanatos (~Thanatos@ec2-54-148-37-124.us-west-2.compute.amazonaws.com)
[03:28:10] *** Quits: Thanatos (~Thanatos@ec2-54-148-37-124.us-west-2.compute.amazonaws.com) (Remote host closed the connection)
[03:28:20] <Fieldy> KirkMcDonald: any idea if I can tame some of this output? it's gone from merely annoying with the \n printed literally, to behaving as expected and well... output: https://bpa.st/YXOA   source: https://bpa.st/IJXA
[03:28:41] <Fieldy> i'd like to grab ahold of it with some sed / regular expression
[03:28:49] *** Joins: Thanatos (~Thanatos@ec2-54-148-37-124.us-west-2.compute.amazonaws.com)
[03:29:48] <vvdaiwrw> very_sneaky: coc-clangd is best.
[03:29:50] <Fieldy> no idea what those urls are at the bottom lol
[03:30:29] *** Quits: Naan (~Naan@user/naan) (Quit: Leaving)
[03:30:39] *** Joins: Naan (~naan@user/naan)
[03:33:22] *** Quits: amahl (~amahl@dsl-jklbng12-54fbca-64.dhcp.inet.fi) (Ping timeout: 252 seconds)
[03:33:55] *** Joins: pizdets_ (~pizdets@183.182.115.101)
[03:33:57] *** Quits: pizdets (~pizdets@183.182.110.162) (Ping timeout: 265 seconds)
[03:34:33] *** Quits: Covrus (~Covrus@2602:ff16:3:0:1:ec:0:1) (Quit: WeeChat 3.2.1)
[03:39:21] *** Quits: portalrat (~portalrat@user/portalrat) (Remote host closed the connection)
[03:39:40] *** Joins: portalrat (~portalrat@user/portalrat)
[03:42:03] *** Joins: matsaman (~matsaman@user/matsaman)
[03:46:35] *** Quits: rpkilby (~rpkilby@ec2-34-252-84-235.eu-west-1.compute.amazonaws.com) (Remote host closed the connection)
[03:46:48] *** Quits: cedric (~cedric@2a01:cb11:821:7c00:c59d:cc06:22e5:2a24) (Quit: Konversation terminated!)
[03:47:18] *** Joins: rpkilby (~rpkilby@ec2-34-252-84-235.eu-west-1.compute.amazonaws.com)
[03:48:10] *** Quits: ckdCreations (~ckdCreati@c-24-17-50-149.hsd1.wa.comcast.net) (Ping timeout: 260 seconds)
[03:48:10] *** Quits: Seirdy (~Seirdy@sourcehut/user/seirdy) (Ping timeout: 260 seconds)
[03:48:52] *** Joins: ckdCreations (~ckdCreati@147.55.130.32)
[03:51:34] *** Joins: darksun (~darksun@user/darksun)
[03:52:13] *** Quits: zaquest (~notzaques@5.128.210.178) (Remote host closed the connection)
[03:52:18] *** Quits: rpkilby (~rpkilby@ec2-34-252-84-235.eu-west-1.compute.amazonaws.com) (Ping timeout: 265 seconds)
[03:52:54] *** Joins: cjb (~cjbayliss@user/cjb)
[03:53:29] *** Joins: zaquest (~notzaques@5.128.210.178)
[03:53:37] *** Quits: Auron (~Auron956@user/auron) (Remote host closed the connection)
[03:53:46] *** Joins: Seirdy (~Seirdy@sourcehut/user/seirdy)
[03:56:19] *** Quits: darksun (~darksun@user/darksun) (Ping timeout: 252 seconds)
[03:58:14] *** Quits: theprophet (~theprophe@85.114.228.184) (Quit: Client closed)
[04:02:28] <aphysically> ah nuitka is working nice
[04:04:24] *** Quits: Gurkenglas (~Gurkengla@dslb-002-207-014-195.002.207.pools.vodafone-ip.de) (Ping timeout: 265 seconds)
[04:04:36] <aphysically> some odd dependencies getting found though, but whatever I guess
[04:04:47] *** Joins: hyskaru (~hyskaru@user/hyskaru)
[04:05:43] *** Quits: luva (~luva@178.239.167.169) (Ping timeout: 252 seconds)
[04:07:51] *** Quits: hyskaru (~hyskaru@user/hyskaru) (Client Quit)
[04:10:33] *** Quits: MrFantastik (~f@cpe-69-204-101-67.buffalo.res.rr.com) (Quit: Leaving)
[04:11:09] *** Joins: UselessCourage (~UselessCo@gateway/tor-sasl/uselesscourage)
[04:12:01] <defjam> hey how do i get the text string out of this in python scraper...i can use summary=article.find('div', 'job-snippet')
[04:12:13] <defjam> but how do i get the rest from the listitem
[04:12:23] <defjam> https://dpaste.org/P2Uw
[04:12:48] <defjam> just the snippet
[04:13:19] <rama> defjam where is the python code?
[04:13:26] <defjam> https://dpaste.org/P2Uw
[04:13:43] <rama> defjam: thats some html.....
[04:13:53] <defjam> im using beautiful soup to try and extract the snippet
[04:14:01] *** Joins: herjazz (~herjazz@p6758124-ipngn30801marunouchi.tokyo.ocn.ne.jp)
[04:14:14] <defjam> summary=article.find('div', 'job-snippet')
[04:14:19] <defjam> gets me the whole lot
[04:14:50] *** Quits: renrelkha (~renrelkha@user/renrelkha) (Quit: bye)
[04:15:02] <defjam> ill try .text
[04:15:12] *** Joins: renrelkha (~renrelkha@user/renrelkha)
[04:15:18] <rama> https://beautiful-soup-4.readthedocs.io/en/latest/index.html?highlight=find#find
[04:15:31] *** Quits: k162 (~k162@user/k162) (Ping timeout: 265 seconds)
[04:15:45] <rama> founds like you want to use `find_all` to have a list of items
[04:15:54] <rama> rather than just everything in a block
[04:16:03] <rama> er in a variable
[04:16:21] *** Quits: AlanMD (~AlanMD@193.105.140.131) (Remote host closed the connection)
[04:17:07] *** Joins: k162 (k162@user/k162)
[04:17:09] *** Joins: AlanMD (~AlanMD@193.105.140.131)
[04:18:21] <defjam> ah sorry, i have already got a list now im just going down into each element ...the .text.strip() works a treat
[04:18:23] <defjam> thanks
[04:23:02] *** Quits: abhixec (~abhixec@c-67-169-139-16.hsd1.ca.comcast.net) (Remote host closed the connection)
[04:23:10] *** Joins: gggp (~textual@60.10.23.169)
[04:24:08] *** Joins: ttree (~ttree0@c-73-239-62-159.hsd1.wa.comcast.net)
[04:24:47] *** Quits: aum (~aum@202.47.255.123.static.snap.net.nz) (Quit: Leaving)
[04:26:13] *** Joins: abhixec (~abhixec@c-67-169-139-16.hsd1.ca.comcast.net)
[04:26:41] *** Quits: cthulchu (~Cthulchu@193.194.107.250) (Ping timeout: 252 seconds)
[04:27:47] *** Quits: gggp (~textual@60.10.23.169) (Ping timeout: 252 seconds)
[04:30:31] *** Joins: NeilRG (~NeilRG@192.222.196.111)
[04:31:42] *** Quits: zln (~zln@c80-217-230-193.bredband.tele2.se) (Ping timeout: 245 seconds)
[04:32:11] *** Quits: ice9 (~ice9@user/ice9) (Ping timeout: 252 seconds)
[04:34:41] *** Joins: rpkilby (~rpkilby@ec2-34-252-84-235.eu-west-1.compute.amazonaws.com)
[04:35:34] *** Quits: lilibyte (lilibyte@gateway/vpn/protonvpn/lilibyte) (Quit:  )
[04:37:10] *** Quits: str1ve (~strive@user/strive) (Ping timeout: 252 seconds)
[04:39:03] *** Joins: str1ve (~strive@user/strive)
[04:39:20] *** Quits: PJBoy (~PJBoy@user/pjboy) (Ping timeout: 252 seconds)
[04:39:22] *** Quits: rpkilby (~rpkilby@ec2-34-252-84-235.eu-west-1.compute.amazonaws.com) (Ping timeout: 260 seconds)
[04:39:45] *** Quits: mteo (francis@user/francis) (Quit: rb)
[04:40:52] *** Quits: matsaman (~matsaman@user/matsaman) (Quit: leaving)
[04:40:59] *** Joins: lukedashjr (~luke-jr@user/luke-jr)
[04:41:09] *** Joins: mteo (francis@user/francis)
[04:41:22] *** Quits: luke-jr (~luke-jr@user/luke-jr) (Ping timeout: 245 seconds)
[04:41:49] *** lukedashjr is now known as luke-jr
[04:43:24] *** Quits: cheater (~Username@user/cheater) (Remote host closed the connection)
[04:50:20] *** Joins: ssbr (~ssbr@python/site-packages/ssbr)
[04:50:59] *** Joins: cheater (~Username@user/cheater)
[04:51:14] <jinsun> ugh, mypy stupidity https://mypy-play.net/?mypy=latest&python=3.10&gist=f506e4bbc828a0ffd86886cd606b92e4
[04:51:31] <NeilRG> Why do I need type(self) in this code? https://bpa.st/DPRA
[04:51:54] *** AmyMalik is now known as LXGHTNXNG
[04:52:14] *** Quits: nyah (~nyah@bcdcb6e3.skybroadband.com) (Ping timeout: 265 seconds)
[04:53:00] <jinsun> that is another mypy bug
[04:53:28] <nedbat> NeilRG: why do you need type()?
[04:53:45] <NeilRG> nedbat: I guess it converts the lambda to a methodtype
[04:53:45] *** Joins: Codaraxis (~Codaraxis@user/codaraxis)
[04:54:02] <NeilRG> nedbat: so I should pass the lambda to staticmethod
[04:54:07] *** Quits: d3sync (~d3sync@130.43.80.239.dsl.dyn.forthnet.gr) (Ping timeout: 252 seconds)
[04:54:11] <NeilRG> to prevent it from doing that
[04:54:46] *** Joins: rpkilby (~rpkilby@ec2-34-252-84-235.eu-west-1.compute.amazonaws.com)
[04:55:11] <nedbat> NeilRG: or, give the lambda a self argument.
[04:55:25] <jinsun> NeilRG: this one https://github.com/python/mypy/issues/9489
[04:55:42] *** Joins: stkrdknmibalz (~test@rrcs-75-87-43-226.sw.biz.rr.com)
[04:55:53] *** Quits: rpkilby (~rpkilby@ec2-34-252-84-235.eu-west-1.compute.amazonaws.com) (Remote host closed the connection)
[04:56:07] *** Joins: rpkilby (~rpkilby@ec2-34-252-84-235.eu-west-1.compute.amazonaws.com)
[04:56:16] <NeilRG> jinsun: I don't think that's the same thing?
[04:56:33] <NeilRG> when you assign a function on a dataclass, it remains a function
[04:56:45] <NeilRG> when you assign a class variable on a class, it is converted to a method
[04:57:08] <NeilRG> I mean when you assign a function on an ordinary class, it is converted to a method
[04:57:26] <NeilRG> at least that's what I think is happening?
[04:57:28] <nedbat> NeilRG: more precisely, if you access the function through an instance, it's a method.
[04:57:34] *** Joins: d3sync (~d3sync@62.1.62.164.dsl.dyn.forthnet.gr)
[04:57:53] <NeilRG> nedbat: can you elaborate please?  so the function stays a function at assignment time?
[04:58:09] <nedbat> NeilRG: yes, assignment doesn't change the function.
[04:58:31] *** Quits: TonyStone (~TonyStone@2603-7080-8607-c36a-9cdb-69bc-753b-1e50.res6.spectrum.com) (Ping timeout: 252 seconds)
[05:00:16] *** Quits: maharg101 (~maharg101@savoy.force9.co.uk) (Ping timeout: 252 seconds)
[05:00:39] *** Joins: jaggz (~jaggz@user/jaggz)
[05:01:01] *** Joins: Wuniu (~Thunderbi@user/wuniu)
[05:01:30] *** Quits: puff (~user@s0106d4ca6d80a83c.vs.shawcable.net) (Read error: Connection reset by peer)
[05:01:43] <jinsun> hmm okay not the same thing, here mypy is right
[05:01:43] *** Joins: puff (~user@S0106d4ca6d80a83c.vs.shawcable.net)
[05:02:03] <jaggz> where's a paset site where someone can edit the code and send me the paste url back?
[05:02:09] <jinsun> in my case though it is obviosly not right
[05:02:11] <jaggz> doesn't need to be runnable
[05:03:10] <nedbat> jaggz: gist.github.com?
[05:04:48] <jaggz> nedbat, like, with a web-editable view
[05:04:56] <jaggz> oh, they can edit right there.. hmm
[05:04:59] <nedbat> jaggz: did you try it?
[05:05:02] <nedbat> ok :)
[05:05:10] <jaggz> didn't see the [edit] button :)
[05:05:12] <jaggz> https://gist.github.com/jaggzh/9d9cbb58db20e504fd0d8cd56d51f010
[05:05:44] <NeilRG> jinsun: yes, exactly
[05:05:51] <NeilRG> nedbat thanks :)
[05:06:09] *** Quits: jmiehe (~Thunderbi@user/jmiehe) (Quit: jmiehe)
[05:08:44] *** Quits: xrogaan (~xrogaan@user/xrogaan) (Quit: Leaving)
[05:09:37] *** Quits: R0b0t1 (~R0b0t1@d-74-214-63-13.md.cpe.atlanticbb.net) (Read error: Connection reset by peer)
[05:10:08] *** Joins: R0b0t1 (~R0b0t1@d-74-214-63-13.md.cpe.atlanticbb.net)
[05:10:08] *** Quits: mefistofeles (~mefistofe@user/mefistofeles) (Ping timeout: 252 seconds)
[05:10:50] *** Joins: TonyStone (~TonyStone@2603-7080-8607-c36a-9cdb-69bc-753b-1e50.res6.spectrum.com)
[05:11:44] <jinsun> jaggz: have to be signed in to edit though
[05:11:58] *** Joins: maharg101 (~maharg101@savoy.force9.co.uk)
[05:12:34] *** Quits: abraham (~abraham@191.96.121.37) (Quit: Textual IRC Client: www.textualapp.com)
[05:12:44] <jinsun> https://bpa.st/ has repaste button on top of pastes, which is probably what you want?
[05:13:59] *** Quits: Jigsy (~Jigsy@user/jigsy) (Ping timeout: 252 seconds)
[05:14:58] <jaggz> jinsun, online editing would be most convenient when I'm trying to get someone to chip in and offer me some assistance here
[05:15:11] <jaggz> [imo]
[05:15:14] *** Joins: Jigsy (~Jigsy@user/jigsy)
[05:16:00] <jaggz> I'm trying to change this audio classifier model into an auto-encoder to, eventually, do voice-style-transfer, but right now to just operate as an autoencoder
[05:16:50] *** Quits: nomic (~nomic@185.192.69.188) (Ping timeout: 260 seconds)
[05:19:09] *** Quits: herjazz (~herjazz@p6758124-ipngn30801marunouchi.tokyo.ocn.ne.jp) (Quit: leaving)
[05:19:23] *** Joins: nomic (~nomic@2a00:23c6:9902:2401:7560:e094:d106:f4f3)
[05:22:33] *** Joins: Sabinno (~Sabinno@75.26.52.152)
[05:23:10] *** Quits: fikran (~fikran@user/fikran) (Ping timeout: 265 seconds)
[05:23:29] <Sabinno> Complete noob here. How do I convert this loop to store pkg.name and pkg.version in an array?
[05:23:31] <Sabinno> `for pkg in list(base.sack.query().upgrades()):
[05:23:32] <Sabinno>         print(pkg.name, pkg.version)`
[05:23:41] *** Quits: Jigsy (~Jigsy@user/jigsy) (Remote host closed the connection)
[05:23:55] *** Quits: EgonX (~EgonX@2601:2c6:47f:9c18:4c33:a7d1:f089:3a07) (Ping timeout: 252 seconds)
[05:24:02] *** Quits: PantelicGR (~PantelicG@user/pantelicgr) (Quit: Leaving)
[05:24:06] *** Joins: Jigsy (~Jigsy@user/jigsy)
[05:24:29] <grym> Sabinno: [(pkg.name, pkg.version) for pkg in base.sack.query().upgrades()] ought to give you a list of 2-tuples
[05:24:50] <Sabinno> that's absolutely beautiful
[05:24:52] *** Joins: fikran (~fikran@user/fikran)
[05:25:17] <grym>  [{"name":pkg.name,"version": pkg.version} for pkg in base.sack.query().upgrades()] ought to give you a list of dicts :)
[05:25:25] *** Joins: semeion (~semeion@user/semeion)
[05:25:37] <grym> then you don't have to remember the index order
[05:26:03] <bilb_ono> Im having trouble creating a url using urllib. https://bpa.st/BJ2Q . It seems to replace my $ with %24 and spaces with + and ‘ with %27 and : with %3 and so on. Is there a way to not replace any of these with any of that? I thought my quote_via=urllib.parse.quote would do that but no
[05:26:17] <Sabinno> based, thanks grym
[05:26:58] *** Quits: rpkilby (~rpkilby@ec2-34-252-84-235.eu-west-1.compute.amazonaws.com) (Remote host closed the connection)
[05:27:34] *** Joins: rpkilby (~rpkilby@ec2-34-252-84-235.eu-west-1.compute.amazonaws.com)
[05:27:45] <nedbat> bilb_ono: what made line 8?
[05:28:23] <bilb_ono> nedbat: when I called res.raise_for_status() it gave me requests.exceptions.HTTPError: 400 Client Error: Bad Request for url: and then that url
[05:28:49] <nedbat> bilb_ono: those are standard escapes for unusual characters. It should be fine.
[05:28:51] *** Quits: rpkilby (~rpkilby@ec2-34-252-84-235.eu-west-1.compute.amazonaws.com) (Remote host closed the connection)
[05:28:58] *** Quits: ttree (~ttree0@c-73-239-62-159.hsd1.wa.comcast.net) (Ping timeout: 265 seconds)
[05:28:58] *** Quits: trace987 (~trace@ip5f5a6a70.dynamic.kabel-deutschland.de) (Ping timeout: 265 seconds)
[05:29:07] *** Joins: rpkilby (~rpkilby@ec2-34-252-84-235.eu-west-1.compute.amazonaws.com)
[05:29:31] *** Joins: EgonX (~EgonX@2601:2c6:47f:9c18:b9f3:9e2a:7cee:6091)
[05:30:21] <bilb_ono> when I create this url via “…url…{}..{}…{}”.format(param1=x,param2=y).. etc. it seems to work. But then I was reading about urllib and wanted to try it
[05:30:30] <bilb_ono> but yeah this one gives a 400 error at least
[05:30:36] *** Joins: frost (~frost@59.71.240.119)
[05:31:42] <bilb_ono> its weird that they want spaces and $’s in the url isn’t it? Ive never seen that
[05:34:22] *** Quits: Vonter (~Vonter@user/vonter) (Ping timeout: 252 seconds)
[05:34:26] *** Joins: vlm (~vlm@user/vlm)
[05:35:05] *** Quits: Jigsy (~Jigsy@user/jigsy) (Killed (NickServ (GHOST command used by Jigsy`)))
[05:35:12] *** Joins: Jigsy` (~Jigsy@user/jigsy)
[05:37:05] *** Jigsy` is now known as Jigsy
[05:37:08] *** Joins: MrBungle (~MrBungle@2604:3d08:1788:dc00:1daf:ff75:3f77:f7b1)
[05:39:48] *** Quits: johnkeats6 (~johnkeats@2804:14c:32:a0cc:34db:cb73:c9f3:b634) (Remote host closed the connection)
[05:40:06] *** Joins: johnkeats6 (~johnkeats@2804:14c:32:a0cc:34db:cb73:c9f3:b634)
[05:40:56] *** Quits: semeion (~semeion@user/semeion) (Ping timeout: 252 seconds)
[05:42:21] *** Joins: gggp (~textual@111.63.44.6)
[05:43:01] *** Quits: barometz (~dvanb@i117058.upc-i.chello.nl) (Remote host closed the connection)
[05:44:10] *** Joins: barometz (~dvanb@i117058.upc-i.chello.nl)
[05:45:30] *** Quits: gggp (~textual@111.63.44.6) (Client Quit)
[05:45:40] *** Joins: dodobrain (~dodobrain@user/dodobrain)
[05:46:32] *** Joins: mefistofeles (~mefistofe@user/mefistofeles)
[05:47:11] <dodobrain> calling sorted() on a list of 2-tuples (with ints) with sort the list with both the first and then the second value of the tuples, right?
[05:47:32] *** Quits: hid3 (~arnoldas@78.157.71.116) (Ping timeout: 245 seconds)
[05:47:36] <dodobrain> thats the behaviour i see, which i guess is simply obtained from the comapre operator's output for tuples
[05:48:22] <Repiphany> Tuples sort element-wise, yes
[05:49:13] <grym> you can always provide a key function if you want them to sort differently
[05:49:44] <dodobrain> nope, i want them sorted in this way :) sorted([(123,1), (119, 10), (123,0)]) gives me the output i expect [(119, 10), (123, 0), (123, 1)]
[05:51:09] *** Joins: Wubull (~Thunderbi@user/wuniu)
[05:51:14] *** Quits: Wuniu (~Thunderbi@user/wuniu) (Ping timeout: 260 seconds)
[05:51:18] *** Wubull is now known as Wuniu
[05:52:43] *** Quits: zebrag (~chris@user/zebrag) (Quit: Konversation terminated!)
[05:53:47] *** Joins: semeion (~semeion@user/semeion)
[05:54:46] *** semeion is now known as mnemonic
[05:54:48] *** Quits: withered_wolf (~withered_@1437135-v103.1561-static.stchilaa.metronetinc.net) (Remote host closed the connection)
[05:56:28] <KirkMcDonald> This is also called a lexicographical ordering.
[06:00:59] *** Joins: thurs80 (~thurs@ip68-225-209-147.ph.ph.cox.net)
[06:01:10] *** Quits: thurs8 (~thurs@ip68-225-209-147.ph.ph.cox.net) (Read error: Connection reset by peer)
[06:02:22] *** Quits: atrigent (~atrigent@c-73-69-68-26.hsd1.ma.comcast.net) (Quit: My MacBook has gone to sleep. ZZZzzz…)
[06:05:08] *** Quits: jjasghar (~quassel@user/jjasghar) (Ping timeout: 252 seconds)
[06:05:14] *** Quits: Naan (~naan@user/naan) (Quit: Leaving)
[06:06:50] *** Joins: thetoloachekid (~ttk@189.147.153.136)
[06:08:48] *** Quits: cjb (~cjbayliss@user/cjb) ()
[06:09:28] *** Quits: rpkilby (~rpkilby@ec2-34-252-84-235.eu-west-1.compute.amazonaws.com) (Remote host closed the connection)
[06:10:04] *** Joins: rpkilby (~rpkilby@ec2-34-252-84-235.eu-west-1.compute.amazonaws.com)
[06:10:15] *** Joins: Fiji (~Fiji@user/fiji)
[06:11:29] *** Joins: cjb (~cjbayliss@user/cjb)
[06:12:28] *** Quits: Wuniu (~Thunderbi@user/wuniu) (Ping timeout: 265 seconds)
[06:12:56] *** Joins: nomic2 (~nomic@185.192.69.176)
[06:14:51] *** Joins: Vonter (~Vonter@user/vonter)
[06:14:53] *** Quits: rpkilby (~rpkilby@ec2-34-252-84-235.eu-west-1.compute.amazonaws.com) (Ping timeout: 265 seconds)
[06:14:54] *** Quits: brabrax (~brabrax@user/brabrax) (Ping timeout: 265 seconds)
[06:15:10] *** Quits: nomic (~nomic@2a00:23c6:9902:2401:7560:e094:d106:f4f3) (Ping timeout: 260 seconds)
[06:15:16] *** Joins: brabrax (~brabrax@user/brabrax)
[06:16:48] *** Quits: johnkeats6 (~johnkeats@2804:14c:32:a0cc:34db:cb73:c9f3:b634) (Read error: Connection reset by peer)
[06:17:06] *** Joins: johnkeats6 (~johnkeats@2804:14c:32:a0cc:34db:cb73:c9f3:b634)
[06:17:34] *** Joins: cthulchu (~Cthulchu@193.194.107.250)
[06:17:37] *** Quits: metah4ck3r (~meta@user/metah4ck3r) (Quit: WeeChat 3.2)
[06:20:02] *** Joins: metah4ck3r (~meta@user/metah4ck3r)
[06:20:41] *** Quits: Kvothe (~weechat@user/elodin) (Ping timeout: 265 seconds)
[06:21:31] *** Quits: gitly (~gitly@148.252.129.181) (Ping timeout: 252 seconds)
[06:21:42] <Fieldy> hi, i'm using 3.7.11. i'm running into an unexpected issue, i have the output/errors as well as the source here. any ideas? https://bpa.st/FP4A  it works fine if i pass max_length and num_return_sequences as numbers rather than variables defined with those numbers from earlier. that's line 41 (variables are defined in lines 29 and 30)
[06:22:13] *** Joins: ominionx (~ominionx@6.sub-174-250-40.myvzw.com)
[06:22:26] <grym> Fieldy: on L29 and 30 you define two strings, not two integers
[06:22:37] <grym> define them as integers instead
[06:22:52] <Fieldy> grym: hrm... how do I do that? or where to learn?
[06:23:02] <grym> Fieldy: esired_length = 150
[06:23:09] <Fieldy> OH no quotes... got it
[06:23:26] <grym> yes, things in quotes are strings
[06:23:33] *** Joins: gitly (~gitly@85.255.234.69)
[06:23:39] *** Quits: Thanatos (~Thanatos@ec2-54-148-37-124.us-west-2.compute.amazonaws.com) (Remote host closed the connection)
[06:23:57] <grym> 150 is an int, 150. is a float
[06:23:59] <Fieldy> that did it :P
[06:24:04] *** Joins: Thanatos (~Thanatos@ec2-54-148-37-124.us-west-2.compute.amazonaws.com)
[06:24:12] <Fieldy> yet another thing learned. so good here
[06:25:09] *** Joins: trace987 (~trace@95.90.106.112)
[06:25:33] *** Joins: manjaroCinnamon (~stealth_@216-197-160-97.regn.static.sasknet.sk.ca)
[06:27:31] *** Joins: elkclone (~elkclone@user/elkclone)
[06:28:30] *** Quits: syntaxman (~wade@li227-215.members.linode.com) (Quit: leaving)
[06:29:48] *** Joins: syntaxman (~wade@li227-215.members.linode.com)
[06:34:10] *** Quits: ssbr (~ssbr@python/site-packages/ssbr) (Ping timeout: 260 seconds)
[06:34:46] *** Joins: Kvothe (~weechat@user/elodin)
[06:35:40] *** Parts: manjaroCinnamon (~stealth_@216-197-160-97.regn.static.sasknet.sk.ca) (Leaving)
[06:35:58] *** Quits: FinnElija (~finn_elij@user/finn-elija/x-0085643) (Ping timeout: 252 seconds)
[06:38:02] *** Joins: FinnElija (~finn_elij@user/finn-elija/x-0085643)
[06:39:35] *** Quits: ElPresidente (~ElPreside@2600:1700:3d10:4870:353b:afbb:2653:5a75) (Read error: Connection reset by peer)
[06:41:53] <grym> Fieldy: the tutorial is pretty good https://docs.python.org/3/tutorial/introduction.html
[06:41:59] *** Joins: jdmark (~jdmark@67.8.137.130)
[06:42:15] <Fieldy> grym: ok! thanks, i will use it
[06:42:34] *** Quits: cthulchu (~Cthulchu@193.194.107.250) (Ping timeout: 260 seconds)
[06:44:57] <fluter> hi, what is the best way to format a long like like this:   my_str = "loooooooooooooooong string with format %d %s" % (arg1, arg2...)
[06:45:08] <fluter> it's about 200 chars wide
[06:47:25] <Repiphany> Format in what sense
[06:48:03] *** Joins: audio (~audio@2603-8081-1800-6a6f-31ac-9639-bc0a-65dc.res6.spectrum.com)
[06:48:33] <fluter> in a beatiful sense :)
[06:48:39] <fluter> it's ugly
[06:49:14] <Repiphany> Do you mean "format" in your script or the actual formatting done in code
[06:49:37] <Repiphany> f-strings and str.format are preferred over %-style formatting if that's what you mean
[06:50:51] <fluter> so sorry, i mean how to format my source code
[06:52:02] *** Joins: strive (~strive@user/strive)
[06:52:02] *** Quits: puff (~user@S0106d4ca6d80a83c.vs.shawcable.net) (Read error: Connection reset by peer)
[06:52:10] <fluter> it's too long for one line
[06:52:16] *** Joins: puff (~user@S0106d4ca6d80a83c.vs.shawcable.net)
[06:52:47] <elkclone> ah indented 4 spaces?
[06:53:32] *** Quits: thetoloachekid (~ttk@189.147.153.136) (Ping timeout: 252 seconds)
[06:53:41] *** Joins: lukedashjr (~luke-jr@user/luke-jr)
[06:53:46] *** Quits: str1ve (~strive@user/strive) (Ping timeout: 260 seconds)
[06:53:57] *** Joins: atrigent (~atrigent@c-73-69-68-26.hsd1.ma.comcast.net)
[06:54:18] <elkclone> I think he means to make the code readable and postable to web. etc.
[06:54:52] <shangxiao> "what is the best way to format a ..." "use black"
[06:55:10] *** Quits: luke-jr (~luke-jr@user/luke-jr) (Ping timeout: 260 seconds)
[06:55:15] <fluter> ?
[06:55:15] *** lukedashjr is now known as luke-jr
[06:55:44] <shangxiao> black formats your source code for you, so you don't have to wonder how to do it :)
[06:55:58] <shangxiao> one less thing to worry about in your day-to-day
[06:56:54] <elkclone> what if you just wanted to know how to do it for shits and giggles. ?
[06:58:01] *** Joins: rpkilby (~rpkilby@ec2-34-252-84-235.eu-west-1.compute.amazonaws.com)
[06:58:40] *** nomic2 is now known as nomic
[06:59:06] <elkclone> fluter: https://note.nkmk.me/en/python-long-string/
[07:00:38] *** Quits: FluffyMask (~masque@user/fluffymask) (Quit: WeeChat 3.2)
[07:01:39] *** Joins: ttree (~ttree0@c-73-239-62-159.hsd1.wa.comcast.net)
[07:02:17] <shangxiao> well then you run black and see what it does :P
[07:02:56] <elkclone> fluter: https://www.freecodecamp.org/news/auto-format-your-python-code-with-black/
[07:03:05] *** Joins: feoh (~feoh@137.184.104.30)
[07:03:08] <elkclone> enjoy :D
[07:04:08] <shangxiao> be sure to hook it up with your favourite editor on save or whatever and then you don't even have to think about it
[07:04:40] <shangxiao> it's like little magical fairies come and clean up your formatting in the instant that you blink your eye
[07:07:16] *** Quits: ravan (~ravan@user/ravan) (Remote host closed the connection)
[07:07:33] *** Joins: ravan (~ravan@user/ravan)
[07:09:20] *** Quits: Sabinno (~Sabinno@75.26.52.152) (Quit: Client closed)
[07:12:26] *** Quits: johnkeats6 (~johnkeats@2804:14c:32:a0cc:34db:cb73:c9f3:b634) (Ping timeout: 260 seconds)
[07:13:57] *** Joins: Wuniu (~Thunderbi@user/wuniu)
[07:16:47] *** Quits: shawwwn (uid6132@id-6132.helmsley.irccloud.com) (Quit: Connection closed for inactivity)
[07:17:28] *** Joins: jazzy (~jaziz@2600:380:473d:ed3e:711b:d41d:621e:ae84)
[07:19:47] *** Joins: pyeverything (~pyeveryth@c-66-31-107-137.hsd1.ma.comcast.net)
[07:21:22] *** Quits: rpkilby (~rpkilby@ec2-34-252-84-235.eu-west-1.compute.amazonaws.com) (Remote host closed the connection)
[07:21:35] *** Joins: jazzy2 (~jaziz@2600:380:473d:ed3e:711b:d41d:621e:ae84)
[07:22:39] *** Quits: pretty_dumm_guy (trottel@gateway/vpn/protonvpn/prettydummguy/x-88029655) (Quit: WeeChat 3.2.1)
[07:23:06] *** Joins: Wubull (~Thunderbi@user/wuniu)
[07:23:18] *** Quits: Wubull (~Thunderbi@user/wuniu) (Client Quit)
[07:24:06] *** Quits: pyeverything (~pyeveryth@c-66-31-107-137.hsd1.ma.comcast.net) (Ping timeout: 260 seconds)
[07:24:06] *** Quits: jazzy (~jaziz@2600:380:473d:ed3e:711b:d41d:621e:ae84) (Ping timeout: 260 seconds)
[07:25:27] *** Quits: Wuniu (~Thunderbi@user/wuniu) (Ping timeout: 265 seconds)
[07:25:44] *** Quits: dtman34 (~dtman34@c-73-62-246-247.hsd1.mn.comcast.net) (Ping timeout: 250 seconds)
[07:26:37] *** Joins: Wuniu (~Thunderbi@user/wuniu)
[07:27:07] *** Quits: emerent (~quassel@p200300cd5701a136ba27ebfffed28a59.dip0.t-ipconnect.de) (Ping timeout: 252 seconds)
[07:27:36] *** Joins: emerent (~quassel@p200300cd5701a149ba27ebfffed28a59.dip0.t-ipconnect.de)
[07:29:09] *** Joins: dtman34 (~dtman34@c-73-62-246-247.hsd1.mn.comcast.net)
[07:29:45] *** Quits: Elzington (~Elzington@68.235.43.76) (Quit: Leaving)
[07:29:50] *** Quits: Kvothe (~weechat@user/elodin) (Ping timeout: 252 seconds)
[07:32:13] *** Quits: fikran (~fikran@user/fikran) (Ping timeout: 265 seconds)
[07:32:48] *** Joins: tddschn (~textual@45.77.71.205)
[07:33:14] *** Joins: lint_coder (~lint_code@2405:201:f00c:8944:7970:c2c5:e235:e994)
[07:34:14] *** Joins: fikran (~fikran@user/fikran)
[07:34:43] <lint_coder> hello!
[07:36:42] *** Joins: djapo (~archangel@user/djapo)
[07:36:47] *** Quits: Wuniu (~Thunderbi@user/wuniu) (Quit: I'm tired, have a good time!)
[07:38:26] *** Joins: mohabaks (~mohabaks@gateway/tor-sasl/mohabaks)
[07:41:34] *** Joins: Wulf (~Wulf@user/wulf)
[07:43:20] *** Quits: DerpGusta (~quassel@user/derpgusta) (Ping timeout: 265 seconds)
[07:44:09] *** Quits: tg (~tg@rockylinux/infra/tg) (Quit: tg)
[07:44:58] *** Quits: vvdaiwrw (~rvgzuuqp@gateway/tor-sasl/rvgzuuqp) (Quit: vvdaiwrw)
[07:45:37] *** Joins: chowmein__ (~chowmeine@user/chowmeined)
[07:46:02] *** Joins: FH_thecat (~FH_thecat@75.11.25.212.ftth.as8758.net)
[07:46:48] *** Joins: Kvothe (~weechat@user/elodin)
[07:47:16] *** Joins: DerpGusta (~quassel@user/derpgusta)
[07:48:53] *** Quits: ELFrederich (~ELFrederi@134.244.29.70) (Remote host closed the connection)
[07:49:05] *** Quits: chowmeined (~chowmeine@user/chowmeined) (Ping timeout: 252 seconds)
[07:49:17] *** Joins: ELFrederich (~ELFrederi@134.244.29.70)
[07:49:47] *** Joins: nergar (~Nergar@177.225.152.16)
[07:51:38] *** Quits: Kvothe (~weechat@user/elodin) (Ping timeout: 260 seconds)
[07:52:03] *** Joins: Kvothe (~weechat@user/elodin)
[07:52:57] *** Joins: michelem (~Adium@51.154.167.11)
[07:53:03] *** Joins: darksun (~darksun@user/darksun)
[07:53:45] *** Joins: node1 (~node1@user/node1)
[07:54:51] *** Quits: michelem (~Adium@51.154.167.11) (Client Quit)
[07:58:26] *** Quits: darksun (~darksun@user/darksun) (Ping timeout: 252 seconds)
[08:10:46] *** Quits: ttree (~ttree0@c-73-239-62-159.hsd1.wa.comcast.net) (Ping timeout: 260 seconds)
[08:12:25] *** Quits: strive (~strive@user/strive) (Remote host closed the connection)
[08:13:30] *** Joins: aac (~AAC@2001:8a0:6cc5:7e01:7dc0:b46f:9c56:edf5)
[08:13:35] *** Quits: node1 (~node1@user/node1) (Quit: Leaving)
[08:13:40] <aac> is python good as c , in running programs?
[08:13:52] <aac> because c has a good compiler its fast :) does that apply to python?
[08:15:22] *** Joins: qlixed (~qlixed@181.44.129.13)
[08:15:37] <shangxiao> that's a question with many facets to explore
[08:15:59] *** Quits: qlixed (~qlixed@181.44.129.13) (Client Quit)
[08:16:07] <aac> ok so generally speaking is python fast as compiled c code
[08:16:17] <aac> depending on the functiosn?=!
[08:16:42] *** Quits: crabbedhaloablut (~crabbedha@user/crabbedhaloablut) (Remote host closed the connection)
[08:17:01] *** Joins: crabbedhaloablut (~crabbedha@user/crabbedhaloablut)
[08:17:10] *** Quits: sunyibo (~dorsch@5.2.75.229) (Quit: ZNC 1.7.2+deb3 - https://znc.in)
[08:17:29] *** Joins: sunyibo (~dorsch@5.2.75.229)
[08:17:42] <shangxiao> i'm no expert at comparing python to c ... but ... no :)
[08:18:44] *** Quits: tddschn (~textual@45.77.71.205) (Quit: My MacBook has gone to sleep. ZZZzzz…)
[08:19:50] <defjam> getting an Invalid URL 'url': No schema supplied. Perhaps you meant http://url?
[08:20:02] <defjam> but if i cut out the actual passed in url it works
[08:20:09] <defjam> ill show some code
[08:20:33] *** Joins: yuesbeez (uid458354@id-458354.tinside.irccloud.com)
[08:21:16] *** Joins: withered_wolf (~withered_@1437135-v103.1561-static.stchilaa.metronetinc.net)
[08:21:56] <defjam> https://dpaste.org/U1cg
[08:22:33] *** Joins: lalitmee__ (~lalitmee@180.94.33.12)
[08:24:36] <shangxiao> defjam: I think you want to remove the quotes around 'url'
[08:24:43] <defjam> https://dpaste.org/8drZ
[08:24:46] *** Quits: jack__d (~jack__d@pool-98-109-145-13.nwrknj.fios.verizon.net) (Ping timeout: 252 seconds)
[08:25:19] <shangxiao> looks like url is a list of strings?
[08:25:23] *** Quits: withered_wolf (~withered_@1437135-v103.1561-static.stchilaa.metronetinc.net) (Ping timeout: 252 seconds)
[08:26:16] *** Joins: strive (~strive@user/strive)
[08:26:26] *** Joins: jack__d (~jack__d@pool-98-109-145-13.nwrknj.fios.verizon.net)
[08:26:27] <defjam> i have removed the quotes around the url and still same error
[08:26:47] <defjam> yes i think it is a list of strings ...ill show you how i constructed it.
[08:26:50] *** Quits: LiftLeft (~LiftLeft@216-26-118-34.dynamic.nelson.airstreamcomm.net) (Ping timeout: 265 seconds)
[08:26:51] <shangxiao> defjam: url[0
[08:26:54] <shangxiao> url[0]
[08:27:05] <defjam> ok ill try that
[08:28:44] *** Quits: slowButPresent (~slowButPr@user/slowbutpresent) (Quit: leaving)
[08:29:25] *** Quits: FH_thecat (~FH_thecat@75.11.25.212.ftth.as8758.net) (Quit: Leaving)
[08:29:33] <defjam> url[0] is  https://uk.indeed.com/jobs?q=cobol&l=London%2C%20Greater%20London
[08:31:11] *** Joins: Sky_Net (~Sky_Net@176.14.213.85)
[08:32:38] *** Joins: freeworld (~vit@chello085216193138.chello.sk)
[08:32:56] *** Joins: tddschn (~textual@45.77.71.205)
[08:33:12] <defjam> hmm...when i do response = requests.get(url[0]) it works
[08:33:17] <defjam> why is that shangxiao
[08:35:13] <jinsun> because url[0] is the actual url
[08:36:01] *** Quits: supakeen (~user@python/site-packages/supakeen) (Quit: WeeChat 3.2.1)
[08:36:30] *** Joins: supakeen (~user@python/site-packages/supakeen)
[08:36:37] <defjam> but the length of url is 1
[08:36:55] <defjam> so when i address url it should just give me the value shouldnt it?
[08:38:04] *** Joins: ubert (~Thunderbi@178.115.77.119.wireless.dyn.drei.com)
[08:38:17] <jinsun> url is just a bad name for that variable
[08:38:32] <jinsun> it should have been list_of_urls or something
[08:38:59] <Repiphany> A list with one element is still a list, it isn't that element
[08:39:44] *** Joins: cloudbender (~cloudbend@user/cloudbender)
[08:40:02] <jinsun> and you cannot pass list of urls to requests.get, you have to pass a url, to get the item out of the list you have to do list_of_urls[0]
[08:40:31] *** Quits: ubert (~Thunderbi@178.115.77.119.wireless.dyn.drei.com) (Client Quit)
[08:40:34] <defjam> thanks so much shangxiao and jinsun and Repiphany
[08:40:46] <defjam> i just noticed when constructiong the url url = [url_template.format(quote(config.JOB_QUERY), quote(config.LOCATIONS))]
[08:40:48] *** Joins: ubert (~Thunderbi@178.115.77.119.wireless.dyn.drei.com)
[08:41:12] <defjam> i had put it in a list
[08:41:34] *** Joins: lalitmee_ (~lalitmee@180.94.32.180)
[08:41:48] <cloudbender> Does someone have a reference regarding why an empty dict needs 272 bytes of memory ?
[08:41:54] <defjam> thats a great tip though url[0]...im going to have a tatoo of that
[08:44:12] *** Quits: puff (~user@S0106d4ca6d80a83c.vs.shawcable.net) (Read error: Connection reset by peer)
[08:44:22] *** Quits: lalitmee__ (~lalitmee@180.94.33.12) (Ping timeout: 260 seconds)
[08:44:26] *** Joins: puff (~user@S0106d4ca6d80a83c.vs.shawcable.net)
[08:45:04] *** Quits: scoobydoo (~scooby@user/scoobydoo) (Ping timeout: 256 seconds)
[08:45:41] *** Quits: ubert (~Thunderbi@178.115.77.119.wireless.dyn.drei.com) (Ping timeout: 265 seconds)
[08:45:53] <cloudbender> I tried a roll-your-own linked list using dicts .... wrong.
[08:46:10] <cloudbender> I ended up using a list of node class instances
[08:47:03] <jinsun> why list or dict, just the head node is enough to represent the entire linked list
[08:47:17] <cloudbender> yes
[08:47:35] <cloudbender> I mispoke
[08:47:50] <cloudbender> I meant linked list
[08:48:26] <cloudbender> I do have a function that can emit the nodes as a list
[08:48:58] <cloudbender> And a function that can build a linked-list from a list
[08:49:10] *** Quits: strive (~strive@user/strive) (Remote host closed the connection)
[08:49:21] <cloudbender> Probably standard stuff for you experts, but I has alot of fun
[08:49:30] <cloudbender> ... had alot of ...
[08:52:11] *** Quits: Sky_Net (~Sky_Net@176.14.213.85) (Read error: Connection reset by peer)
[08:53:18] *** Quits: Metalsutton (~Metalsutt@101.100.153.131) (Quit: Leaving)
[08:53:46] *** Quits: tddschn (~textual@45.77.71.205) (Quit: tddschn)
[08:54:31] *** Joins: tddschn (~textual@45.77.71.205)
[08:55:08] <cloudbender> The possibilities for a huge list which only holds one external reference and has no container are new to me.
[08:55:52] <jinsun> it is fun stuff, not really standard, in actual code the built in lists and dicts are more useful
[08:56:53] <Repiphany> deques are pretty useful in some cases too
[08:57:47] *** Joins: cloudbender23 (~cloudbend@user/cloudbender)
[08:58:45] *** Joins: cloudbender9 (~cloudbend@user/cloudbender)
[08:58:53] <cloudbender9> flakey isp
[08:59:39] *** Quits: nomic (~nomic@185.192.69.176) (Quit: Leaving)
[09:01:01] <shangxiao> defjam: wait, so why do you put it into a list with the [url_template.format(....)] ?
[09:01:08] *** Quits: cloudbender (~cloudbend@user/cloudbender) (Ping timeout: 252 seconds)
[09:01:48] *** Quits: dez (uid92154@user/dez) (Quit: Connection closed for inactivity)
[09:02:14] *** Quits: cloudbender23 (~cloudbend@user/cloudbender) (Ping timeout: 252 seconds)
[09:02:34] <shangxiao> seems a bit... superfluous
[09:03:20] *** Quits: cloudbender9 (~cloudbend@user/cloudbender) (Ping timeout: 252 seconds)
[09:06:40] *** Quits: Lando-DinoEater (~Lando@user/lando-spacepimp) (Ping timeout: 260 seconds)
[09:06:56] <defjam> i thought that was the best way to do it shangxiao
[09:07:25] *** Joins: jazzy3 (~jaziz@2600:380:473d:ed3e:711b:d41d:621e:ae84)
[09:08:25] *** Quits: Fiji (~Fiji@user/fiji) (Ping timeout: 265 seconds)
[09:08:50] *** Quits: mrgz (~mrgz@201-42-0-191.dsl.telesp.net.br) (Ping timeout: 252 seconds)
[09:10:30] *** Quits: jazzy2 (~jaziz@2600:380:473d:ed3e:711b:d41d:621e:ae84) (Ping timeout: 260 seconds)
[09:11:25] *** Quits: khrbt (~znc@user/khrbt) (Quit: ZNC 1.7.2+deb3 - https://znc.in)
[09:13:04] *** Joins: khrbt (~znc@user/khrbt)
[09:15:22] *** Quits: ska (~ska@user/ska) (Ping timeout: 252 seconds)
[09:16:08] *** Joins: ska (~ska@user/ska)
[09:21:14] *** Quits: tddschn (~textual@45.77.71.205) (Remote host closed the connection)
[09:21:45] <shangxiao> defjam: so you just want a single value (scalar)? A list should be used if you want more than 1 url... unless you're working with code that expects a list.
[09:22:02] *** Quits: AlanMD (~AlanMD@193.105.140.131) (Read error: Connection reset by peer)
[09:22:25] *** Quits: codeswhite (~codeswhit@2.55.8.89) (Ping timeout: 265 seconds)
[09:22:31] <defjam> i only wanted .. a scalar.
[09:22:45] <defjam> thats what it is called ...good stuff
[09:22:55] *** Joins: mijofa (~mike@119-17-140-127.77118c.mel.nbn.aussiebb.net)
[09:23:25] <mijofa> I'm trying to connect 2 sockets together, with the Python code effectively just acting as a proxy from multicast to unicast, I started with effectively "while True: unicast_sock.send(multicast_sock.recv(1024))" which kinda works, but not well.
[09:24:32] <mijofa> I was hoping I could do "multicast_sock.recv_into(unicast_sock)" but that errors about "read-write bytes-like object, not socket", got any ideas for a way around this?
[09:25:04] <Wulf> mijofa: what's wrong with your first approach?
[09:25:23] *** Joins: maryo87 (~Maryo@user/maryo)
[09:25:58] <mijofa> I'm not entirely sure, but I think it's skipping a bunch of packets. It was more reliable with a larger packet size, but that can only go so far
[09:26:17] <mijofa> Still testing to try and understand the problem, figured I'd drop in and ask for advice before I go too deep down the wrong path though
[09:26:26] *** Joins: tddschn (~textual@45.77.71.205)
[09:26:50] *** Quits: trace987 (~trace@95.90.106.112) (Ping timeout: 260 seconds)
[09:26:56] *** Joins: ferz (~ferz@93-39-143-98.ip76.fastwebnet.it)
[09:27:05] <Wulf> mijofa: perhaps you can use sendfile
[09:27:48] <mijofa> Oh, makefile() on one, then sendfile() on the other, that could work, will try
[09:28:15] <Wulf> mijofa: and consider writing this in C instead of Python
[09:28:16] *** Joins: AlanMD (~AlanMD@193.105.140.131)
[09:29:59] <mijofa> Why?
[09:31:21] *** Joins: stranac (~stranac@195.29.239.126)
[09:31:36] <defjam> should i use brackets on this .... while True and reccount < maximum:
[09:31:41] <defjam> or is that ok
[09:32:06] <Wulf> defjam: remove the True part.
[09:32:29] <Wulf> mijofa: less packet loss because python is slow ;-)
[09:32:30] <defjam> hmm...ill take a look
[09:33:54] *** Quits: tddschn (~textual@45.77.71.205) (Remote host closed the connection)
[09:34:07] *** Joins: hqdruxn08__ (~hqdruxn08@cpe-66-68-166-214.austin.res.rr.com)
[09:34:21] *** Joins: twofingersneat__ (~twofinger@174-080-036-228.res.spectrum.com)
[09:35:24] *** Joins: tddschn (~textual@45.77.71.205)
[09:36:09] <defjam> thanks Wulf, looks like i dont need the True part
[09:36:46] *** Quits: tddschn (~textual@45.77.71.205) (Remote host closed the connection)
[09:37:26] *** Quits: twofingersneat_ (~twofinger@174-080-036-228.res.spectrum.com) (Ping timeout: 252 seconds)
[09:37:26] *** Quits: hqdruxn08_ (~hqdruxn08@cpe-66-68-166-214.austin.res.rr.com) (Ping timeout: 252 seconds)
[09:38:00] *** Joins: upsala (~zcb@185.213.155.160)
[09:38:59] *** Joins: gloin_ (~gloin@user/gloin)
[09:39:10] *** Quits: gloin (~gloin@user/gloin) (Ping timeout: 240 seconds)
[09:40:10] *** Quits: NeilRG (~NeilRG@192.222.196.111) (Remote host closed the connection)
[09:41:46] *** Quits: fikran (~fikran@user/fikran) (Ping timeout: 260 seconds)
[09:43:36] *** Joins: fikran (~fikran@user/fikran)
[09:45:08] *** Quits: djapo (~archangel@user/djapo) (Ping timeout: 252 seconds)
[09:46:47] *** Quits: pkapp (~pkapp@c-75-74-40-214.hsd1.fl.comcast.net) (Ping timeout: 245 seconds)
[09:47:02] *** Parts: jaggz (~jaggz@user/jaggz) (Leaving)
[09:47:55] *** Joins: zln (~zln@c80-217-230-193.bredband.tele2.se)
[09:48:36] *** Quits: pycurious (~Adium@user/pycurious) (Quit: Leaving.)
[09:48:44] *** Joins: ramblebamble (ramblebamb@gateway/vpn/protonvpn/ramblebamble)
[09:49:10] *** Joins: dcaro_ (~dcaro@user/dcaro)
[09:49:32] *** Quits: Xaldafax (~xaldafax@cpe-198-72-160-101.socal.res.rr.com) (Quit: Bye...)
[09:50:07] *** Quits: rama (~rama@c-24-130-92-222.hsd1.ca.comcast.net) (Ping timeout: 252 seconds)
[09:50:07] *** Quits: dcaro (~dcaro@user/dcaro) (Ping timeout: 252 seconds)
[09:50:12] *** dcaro_ is now known as dcaro
[09:52:23] *** Joins: USER_ (~lint_code@49.37.185.218)
[09:52:23] *** Quits: rtypo (~alex@user/rtypo) (Ping timeout: 265 seconds)
[09:53:26] *** Quits: lint_coder (~lint_code@2405:201:f00c:8944:7970:c2c5:e235:e994) (Ping timeout: 260 seconds)
[09:53:27] *** Quits: ramblebamble (ramblebamb@gateway/vpn/protonvpn/ramblebamble) (Quit: WeeChat 3.2)
[09:54:52] *** Joins: pycurious (~Adium@user/pycurious)
[09:54:52] *** Quits: pycurious (~Adium@user/pycurious) (Client Quit)
[09:55:28] *** Quits: heco (~redrum@user/redrum88) (Quit: Going offline, see ya! (www.adiirc.com))
[09:56:48] *** Joins: Confusioned (~AnySomebo@p200300c2871c5e29aa0bc84c421db63f.dip0.t-ipconnect.de)
[09:58:00] *** Quits: AnySomebody (~AnySomebo@p200300c2871c5e497b38f4f62927883a.dip0.t-ipconnect.de) (Ping timeout: 260 seconds)
[09:58:39] *** Quits: MrBungle (~MrBungle@2604:3d08:1788:dc00:1daf:ff75:3f77:f7b1) (Read error: Connection reset by peer)
[09:58:48] *** Joins: djapo (~archangel@user/djapo)
[10:01:04] <mijofa> sendfile() just sense nothing as though it's already hit an EOF, I thought it might need blocking enabled, which it already was it seems. Not sure why that one's not working, but I reckon that's probably the right track to be going down
[10:01:34] *** Joins: KombuchaKip (~kip@192.252.230.5)
[10:02:44] *** Quits: USER_ (~lint_code@49.37.185.218) (Read error: Connection reset by peer)
[10:03:10] *** Joins: USER_ (~lint_code@2405:201:f00c:8944:ad1c:af0b:eba0:6609)
[10:07:04] *** Joins: lalitmee__ (~lalitmee@2402:3a80:8cb:8f5b:aa5f:284e:d5af:1590)
[10:07:08] *** Joins: Wuniu (~Thunderbi@user/wuniu)
[10:07:43] *** Quits: zmt00 (~zmt00@user/zmt00) (Ping timeout: 252 seconds)
[10:08:32] *** Quits: cjb (~cjbayliss@user/cjb) (Ping timeout: 260 seconds)
[10:09:46] *** Quits: lalitmee_ (~lalitmee@180.94.32.180) (Ping timeout: 260 seconds)
[10:10:41] *** Joins: NeilRG (~NeilRG@192.222.196.111)
[10:14:06] *** Joins: winterflaw (~winterfla@gateway/tor-sasl/winterflaw)
[10:15:23] *** Quits: NeilRG (~NeilRG@192.222.196.111) (Ping timeout: 252 seconds)
[10:18:16] *** Quits: bitmega (~bitmega@user/bitmega) (Quit: WeeChat 3.2.1)
[10:18:39] *** Quits: Wuniu (~Thunderbi@user/wuniu) (Quit: I'm tired, have a good time!)
[10:18:43] *** Joins: manti7 (~manti7@176.10.104.94)
[10:18:46] *** Joins: raxor2k (~raxor2k@78.158.248.158)
[10:19:34] *** Joins: o97115 (~o97115@78-56-97-76.static.zebra.lt)
[10:19:39] *** Joins: hendrik1 (~hendrik@2001:1620:2018:38:dde3:1b0f:dc57:eb0f)
[10:20:23] *** Joins: Mrbungle (~Mrbungle@2604:3d08:1788:dc00:5da5:a866:5bff:6961)
[10:20:51] *** Joins: y1n (~y1n@84-115-65-34.wifi.dynamic.surfer.at)
[10:21:06] <Wulf> mijofa: I never tried sendfile on dgram sockets. Perhaps it doesn't work at all.
[10:21:21] *** Joins: Wuniu (~Thunderbi@user/wuniu)
[10:21:42] *** Joins: Gurkenglas (~Gurkengla@dslb-002-207-014-195.002.207.pools.vodafone-ip.de)
[10:21:46] <o97115> Hi! I'm probably missing something extremely obvious but why my Python3 CGI script doesn't shows Cyrillic characters in a browser?
[10:21:55] <o97115> the script: https://termbin.com/0aqc
[10:22:34] <o97115> When openning it in a browser, I only see the first string, 'qwerty'
[10:22:39] <Wulf> o97115: got a webserver that I can try myself?
[10:23:02] <o97115> Wulf, nope, sorry
[10:23:22] <Wulf> o97115: you could try charset=UTF-8
[10:23:42] <o97115> you mean adding this # -*- coding: utf-8 -*- to the script itself?
[10:23:57] <Wulf> o97115: no. UPPER case instead of lower in the header.
[10:24:04] <o97115> oh
[10:24:13] *** Quits: Sheilong (uid293653@id-293653.ilkley.irccloud.com) ()
[10:24:20] <Wulf> o97115: and can you provide the output of:  curl -i http://localhost/cgi-bin/o97115 ?
[10:25:25] <mijofa> It's not evern rendering the Cyrillic line at all? I'd expect it to render as garbage, rather than not render at all
[10:25:40] <o97115> mijofa: exactly
[10:25:51] <o97115> Wulf: with the uppercase it's the same
[10:26:03] <o97115> here's curl -I:
[10:26:06] <o97115> HTTP/1.1 200 OK
[10:26:07] <o97115> Date: Thu, 09 Sep 2021 05:55:05 GMT
[10:26:08] <o97115> Server: Apache/2.4.6 (CentOS) OpenSSL/1.0.2k-fips PHP/5.4.16
[10:26:09] <o97115> Content-Type: text/html; charset=UTF-8
[10:26:52] <mijofa> Add another "qwerty" line after it. Might be that Python is crashing and not even running that print line, rather than rendering failing, that would help narrow it down
[10:27:30] <Wulf> o97115: full output, to termbin.
[10:27:41] <o97115> mijofa: you are right, it doesn't shows anything after the first Cyrillic symbol appears
[10:28:07] <Wulf> o97115: check your apache error log
[10:28:32] *** Quits: Mattiaslndstrm (~Mattiasln@c188-148-207-108.bredband.tele2.se) (Quit: My MacBook has gone to sleep. ZZZzzz…)
[10:28:38] <mijofa> Web server is probably running it without UTF-8 enabled properly. So yeah, Apache logs & config is the place to go looking
[10:28:39] *** Joins: otisolsen70 (~otisolsen@xd4ed80b5.cust.hiper.dk)
[10:28:40] *** Joins: ubert (~Thunderbi@91.141.58.198.wireless.dyn.drei.com)
[10:28:48] <o97115> Wulf: it's not exactly _mine_ apache, and I have no permissions there
[10:28:59] <o97115> here's curl -i: https://termbin.com/q1o3
[10:29:23] <o97115> as for UTF-8 not enabled properly, it does work with Python2, though
[10:29:28] *** Joins: tddschn (~textual@45.77.71.205)
[10:29:47] <o97115> (with # -*- coding: utf-8 -*- in the script)
[10:30:21] *** Quits: yuesbeez (uid458354@id-458354.tinside.irccloud.com) (Quit: Connection closed for inactivity)
[10:30:33] <Wulf> o97115: from sys import stdout; print(stdout.encoding)    run this through your apache.
[10:30:49] *** Joins: newpy (~newpy@206.168.231.90)
[10:31:26] <Wulf> o97115: and try adding try/except to print the error
[10:32:47] <mijofa> Oh yeah, I'd recommend adding "import cgitb ; cgitb.enable()" near the top when debugging CGI scripts.  Never ever leave that in production though, it can leak inner-workings of things you don't want publicly known
[10:33:07] *** Quits: puff (~user@S0106d4ca6d80a83c.vs.shawcable.net) (Remote host closed the connection)
[10:33:21] *** Joins: puff (~user@S0106d4ca6d80a83c.vs.shawcable.net)
[10:33:35] <mijofa> Then it'll render the tracebacks into HTML without crashing, rather than expecting you to have access to the Apache log
[10:34:23] <Wulf> o97115: if that is not showing "utf-8", try this: stdout.reconfigure(encoding='utf-8')
[10:34:28] <o97115> Wulf: wow, it says ANSI_X3.4-1968
[10:36:24] <o97115> Wulf: added this, and now even qwerty isn't printed out :)
[10:36:47] <Wulf> o97115: also follow mijofa's idea with cgibt
[10:37:43] *** Joins: Mattiaslndstrm (~Mattiasln@c188-148-207-108.bredband.tele2.se)
[10:40:13] <o97115> Wulf: got this for stdout.reconfigure(encoding='utf-8'): https://i.imgur.com/OGGnKB6.png
[10:40:35] *** Joins: mexen (uid495612@user/mexen)
[10:40:44] <Wulf> o97115: what python version is that?
[10:41:03] <o97115> 3.6.8
[10:41:03] <Wulf> o97115: print(sys.version)
[10:41:31] <Wulf> "New in version 3.7."
[10:42:26] <Wulf> sys.stdout = codecs.getwriter("utf-8")(sys.stdout.detach())
[10:42:37] *** Joins: rama (~rama@c-24-130-92-222.hsd1.ca.comcast.net)
[10:43:47] <o97115> if I put Cyrillic text in try/except, I get this: 'ascii' codec can't encode characters in position 0-5: ordinal not in range(128)
[10:44:51] *** Joins: NeilRG (~NeilRG@192.222.196.111)
[10:45:04] <o97115> (this is in a browser, in a shell everythong works fine, of course, and UTF-8 is reported as stdout.encoding)
[10:45:14] *** Parts: o97115 (~o97115@78-56-97-76.static.zebra.lt) ()
[10:45:21] *** Joins: o97115 (~o97115@78-56-97-76.static.zebra.lt)
[10:45:25] <o97115> sorry
[10:46:19] *** Quits: seednode (~seednode@user/seednode) (Quit: Nihil supernum.)
[10:46:52] *** Joins: seednode (~seednode@user/seednode)
[10:48:51] *** Joins: carl- (~carl-@185.103.188.130)
[10:49:00] *** Joins: dvx (~dvx@185.63.97.64)
[10:49:22] *** Quits: NeilRG (~NeilRG@192.222.196.111) (Ping timeout: 252 seconds)
[10:49:52] *** Quits: newpy (~newpy@206.168.231.90) (Read error: Connection reset by peer)
[10:50:12] <Wulf> o97115: got it working with codecs.getwriter...?
[10:50:41] *** Joins: newpy (~newpy@206.168.231.90)
[10:51:19] *** Quits: Mattiaslndstrm (~Mattiasln@c188-148-207-108.bredband.tele2.se) (Quit: My MacBook has gone to sleep. ZZZzzz…)
[10:51:28] <o97115> Wulf: could you please repeat it, I probably missed it? (accidentially closed the channel, had to rejoin)
[10:53:03] <o97115> I tried adding something like this: sys.stdout = codecs.getwriter("utf-8")(sys.stdout.detach()) but it says NameError: name 'codecs' is not defined
[10:53:55] <o97115> ooops, sorry, forgot to import
[10:53:59] <o97115> seems to be working :)
[10:54:01] <o97115> thanks :)
[10:55:44] *** Joins: ub (~Thunderbi@91.141.53.92.wireless.dyn.drei.com)
[10:57:44] *** Quits: ubert (~Thunderbi@91.141.58.198.wireless.dyn.drei.com) (Ping timeout: 252 seconds)
[10:57:44] *** ub is now known as ubert
[10:59:04] *** Joins: ole_ (~ole_@84.46.68.3)
[11:00:05] *** Quits: tddschn (~textual@45.77.71.205) (Quit: tddschn)
[11:00:14] *** Quits: _0x5fc3 (~0x5fc3@wireguard/tunneler/-0x5fc3) (Quit: The Lounge - https://thelounge.chat)
[11:01:33] *** Joins: _0x5fc3 (~0x5fc3@wireguard/tunneler/-0x5fc3)
[11:02:10] *** Quits: gitly (~gitly@85.255.234.69) (Ping timeout: 252 seconds)
[11:03:28] *** Quits: maryo87 (~Maryo@user/maryo) (Read error: Connection reset by peer)
[11:03:31] *** Quits: rama (~rama@c-24-130-92-222.hsd1.ca.comcast.net) (Remote host closed the connection)
[11:03:45] *** Joins: rama (~rama@c-24-130-92-222.hsd1.ca.comcast.net)
[11:03:52] *** Joins: maryo87 (~Maryo@user/maryo)
[11:03:53] *** Joins: gitly (~gitly@148.252.132.151)
[11:04:12] *** Quits: ShorTie (~ShorTie@112.sub-72-108-77.myvzw.com) (Ping timeout: 245 seconds)
[11:04:55] *** Quits: bilb_ono (~alexmarsh@ip68-6-90-72.sb.sd.cox.net) (Quit: bilb_ono)
[11:05:03] *** Joins: gusto (~Augustus@109.255.100.54)
[11:05:17] *** Joins: bilb_ono (~alexmarsh@ip68-6-90-72.sb.sd.cox.net)
[11:05:19] *** Joins: ShorTie (~ShorTie@112.sub-72-108-77.myvzw.com)
[11:05:22] *** Quits: luke-jr (~luke-jr@user/luke-jr) (Ping timeout: 265 seconds)
[11:05:38] *** Joins: lukedashjr (~luke-jr@user/luke-jr)
[11:06:12] *** Quits: jinsun (~quassel@user/jinsun) (Read error: Connection reset by peer)
[11:06:35] *** lukedashjr is now known as luke-jr
[11:07:10] *** Quits: dodobrain (~dodobrain@user/dodobrain) (Ping timeout: 260 seconds)
[11:07:23] <andi_> hello, can someone maybe tell me why the commented call to subprocess is failing with a file not found and the os.system is working, shouldn't they be the same? https://paste.xinu.at/j1UVdb/
[11:08:17] *** Joins: palasso (~palasso@user/palasso)
[11:08:40] *** Joins: chele (~chele@user/chele)
[11:08:43] *** Joins: VaniaPy (~VaniaPy@adsl-117.176.58.195.tellas.gr)
[11:08:46] *** Quits: y1n (~y1n@84-115-65-34.wifi.dynamic.surfer.at) (Ping timeout: 265 seconds)
[11:09:06] <VaniaPy> hello,can i pass the HTTP verb as a parameter in a function?
[11:09:28] <VaniaPy> for example def func(request="POST")
[11:09:50] *** Quits: bilb_ono (~alexmarsh@ip68-6-90-72.sb.sd.cox.net) (Ping timeout: 252 seconds)
[11:11:36] *** Joins: jinsun (~quassel@user/jinsun)
[11:11:38] *** Joins: jinsun__ (~quassel@user/jinsun)
[11:12:50] *** Quits: rama (~rama@c-24-130-92-222.hsd1.ca.comcast.net) (Remote host closed the connection)
[11:12:57] <fluter> is the name __main__.py special?
[11:13:12] *** Quits: jinsun__ (~quassel@user/jinsun) (Client Quit)
[11:13:57] *** Quits: USER_ (~lint_code@2405:201:f00c:8944:ad1c:af0b:eba0:6609) (Quit: Leaving)
[11:14:18] *** Quits: o97115 (~o97115@78-56-97-76.static.zebra.lt) (Quit: o97115)
[11:14:45] <Repiphany> `python -m module` will run module/__main__.py
[11:16:29] *** Quits: Wuniu (~Thunderbi@user/wuniu) (Ping timeout: 265 seconds)
[11:16:43] <bookworm> VaniaPy: sure? You can design your functions however you like
[11:16:50] *** Quits: kickingvegas (~cchoi@c-24-5-40-20.hsd1.ca.comcast.net) (Quit: leaving)
[11:18:17] <mijofa> andi_: You don't need the nested "" inside the '' with subprocess, because it's splitting each argument in the list, unlike os.system which is leaving it it to the shell to decide and the shell needs a little extra help
[11:18:51] *** Quits: mnemonic (~semeion@user/semeion) (Quit: WeeChat 3.2)
[11:19:33] *** Joins: ayustae (Thunderbir@gateway/vpn/protonvpn/ayustae)
[11:20:00] *** Quits: nergar (~Nergar@177.225.152.16) (Quit: Leaving)
[11:20:09] <bookworm> the shell redirection won't work as you aren't running a shell by default, you need to explicitly do that with shell=True
[11:21:04] <fluter> ah
[11:21:09] *** Joins: rendar (~rendar@user/rendar)
[11:21:23] *** Joins: shlomif (~shlomif@87.68.240.100.adsl.012.net.il)
[11:21:25] *** Joins: y1n (~y1n@84-115-65-34.wifi.dynamic.surfer.at)
[11:21:26] <fluter> Repiphany: so should i remove my main.py which is just call the module?
[11:21:34] *** Joins: kosh (~kosh@user/kosh)
[11:22:09] *** Quits: Guddu (~Guddu@190.84.88.92) (Quit: Leaving)
[11:22:16] <Repiphany> If you want to be able to run your package with `python -m blah` then you'll need to put stuff in __main__.py
[11:22:37] <Repiphany> But you can add entry points into arbitrary files in other ways
[11:23:00] *** Joins: trace987 (~trace@ip5f5a6a70.dynamic.kabel-deutschland.de)
[11:23:34] *** Joins: Mattiaslndstrm (~Mattiasln@c188-148-207-108.bredband.tele2.se)
[11:24:13] *** Joins: gggp (~textual@60.10.194.45)
[11:28:53] *** Quits: gggp (~textual@60.10.194.45) (Client Quit)
[11:29:32] *** Quits: ShorTie (~ShorTie@112.sub-72-108-77.myvzw.com) (Ping timeout: 265 seconds)
[11:29:57] *** Joins: juanma (~juanma@55.red-79-145-11.dynamicip.rima-tde.net)
[11:30:27] *** Joins: ShorTie (~ShorTie@112.sub-72-108-77.myvzw.com)
[11:31:50] *** Quits: trace987 (~trace@ip5f5a6a70.dynamic.kabel-deutschland.de) (Ping timeout: 252 seconds)
[11:32:24] *** Joins: pycode (~pycode@2001:b07:5d28:551:ca58:cf49:8125:bd3c)
[11:32:57] *** Joins: Wuniu (~Thunderbi@user/wuniu)
[11:33:18] *** Quits: jazzy3 (~jaziz@2600:380:473d:ed3e:711b:d41d:621e:ae84) (Ping timeout: 260 seconds)
[11:35:34] *** Joins: lalitmee_ (~lalitmee@180.94.33.217)
[11:36:36] *** Joins: EvilDMP (~textual@django/moderator/EvilDMP)
[11:37:43] <fluter> ok
[11:38:03] *** Quits: Mattiaslndstrm (~Mattiasln@c188-148-207-108.bredband.tele2.se) (Quit: My MacBook has gone to sleep. ZZZzzz…)
[11:38:54] *** Quits: lalitmee__ (~lalitmee@2402:3a80:8cb:8f5b:aa5f:284e:d5af:1590) (Ping timeout: 260 seconds)
[11:39:56] *** Joins: dcaro_ (~dcaro@user/dcaro)
[11:40:01] *** Quits: doko (~doko@2a02:8106:1a:7600:e98d:a0e:1892:1c) (Ping timeout: 252 seconds)
[11:40:46] *** Quits: dcaro (~dcaro@user/dcaro) (Ping timeout: 260 seconds)
[11:40:54] *** dcaro_ is now known as dcaro
[11:43:00] *** Quits: trashbird (~trashbird@user/trashbird) (Ping timeout: 256 seconds)
[11:43:36] *** Joins: Wubull (~Thunderbi@user/wuniu)
[11:43:56] *** Quits: Wuniu (~Thunderbi@user/wuniu) (Ping timeout: 252 seconds)
[11:43:57] *** Wubull is now known as Wuniu
[11:45:55] *** Quits: Betal (~Betal@user/betal) (Quit: WeeChat 3.2)
[11:47:48] *** Quits: Wuniu (~Thunderbi@user/wuniu) (Client Quit)
[11:47:58] *** Joins: scoobydoo (~scooby@user/scoobydoo)
[11:49:50] *** Quits: ubert (~Thunderbi@91.141.53.92.wireless.dyn.drei.com) (Ping timeout: 265 seconds)
[11:51:02] *** Quits: fikran (~fikran@user/fikran) (Ping timeout: 260 seconds)
[11:51:03] <fluter> hmm, how can i let int(20419.999999999996) = 20420 ?
[11:51:16] *** Quits: ravan (~ravan@user/ravan) (Remote host closed the connection)
[11:51:33] *** Joins: ravan (~ravan@user/ravan)
[11:51:37] *** Quits: djapo (~archangel@user/djapo) (Read error: Connection reset by peer)
[11:51:41] <Widdershins> make int be a function that returns 20420 no matter what you give it
[11:51:47] *** Joins: djapo (~archangel@user/djapo)
[11:52:44] *** Quits: Linux77 (~Linux7_7@186.233.182.237) (Ping timeout: 252 seconds)
[11:52:48] *** Joins: Mattiaslndstrm (~Mattiasln@c188-148-207-108.bredband.tele2.se)
[11:52:57] *** Joins: fikran (~fikran@user/fikran)
[11:53:58] *** Joins: jazzy2 (~jaziz@2600:380:865d:911b:7479:f78f:95d9:1914)
[11:55:23] *** Quits: atrigent (~atrigent@c-73-69-68-26.hsd1.ma.comcast.net) (Read error: Connection reset by peer)
[11:55:32] *** Joins: darksun (~darksun@user/darksun)
[11:56:13] *** Joins: atrigent (~atrigent@c-73-69-68-26.hsd1.ma.comcast.net)
[11:57:10] <kosh> fluter, use round instead of int
[11:57:32] <fluter> winterflaw: O_O
[11:57:34] *** Quits: Mattiaslndstrm (~Mattiasln@c188-148-207-108.bredband.tele2.se) (Ping timeout: 260 seconds)
[11:58:37] <winterflaw> Hi.  What's up?
[11:58:50] <fluter> OOPs rorry
[11:58:59] <fluter> meant to say Widdershins o_O
[12:00:22] *** Joins: gggp (~textual@111.63.44.6)
[12:01:01] *** Quits: darksun (~darksun@user/darksun) (Ping timeout: 252 seconds)
[12:02:54] *** Joins: mIk3_08 (~Thunderbi@user/mik3-08/x-2852566)
[12:03:46] *** Quits: KirkMcDonald (~Kirk@python/site-packages/KirkMcDonald) (Ping timeout: 252 seconds)
[12:04:00] *** Joins: Wuniu (~Thunderbi@user/wuniu)
[12:04:23] *** Quits: ihaveamac (~ihaveamac@ihaveahax.net) (Quit: fail)
[12:04:29] *** Joins: ub (~Thunderbi@91.141.53.92.wireless.dyn.drei.com)
[12:04:52] *** Parts: Alphare (~Alphare@163-172-8-17.rev.poneytelecom.eu) (WeeChat 1.6)
[12:05:16] *** Joins: ihaveamac (~ihaveamac@ihaveahax.net)
[12:05:55] *** Quits: zer0bitz (~zer0bitz@dsl-hkibng31-58c384-213.dhcp.inet.fi) (Read error: Connection reset by peer)
[12:07:10] *** Quits: Wuniu (~Thunderbi@user/wuniu) (Client Quit)
[12:08:41] *** Quits: y1n (~y1n@84-115-65-34.wifi.dynamic.surfer.at) (Ping timeout: 252 seconds)
[12:09:23] *** Joins: waynew (~waynew@user/waynew)
[12:09:30] *** Joins: Meteorhead (~Meteorhea@165.225.205.32)
[12:09:36] *** Quits: waynew (~waynew@user/waynew) (Client Quit)
[12:12:19] <Gurkenglas> I have tensors of shape [a,x],[b,x],[c,x],.... Can I manipulate them as one tensor of shape [a+b+c+...,x] without losing the information of what was where?
[12:12:47] *** Quits: EvilDMP (~textual@django/moderator/EvilDMP) (Quit: My MacBook has gone to sleep. ZZZzzz…)
[12:12:47] *** Joins: Wuniu (~Thunderbi@user/wuniu)
[12:13:03] *** Joins: xrogaan (~xrogaan@user/xrogaan)
[12:13:05] <Gurkenglas> for example, i would then like to multiply it with its transpose to get [a+b+c+...,a+b+c+...]
[12:13:26] *** Quits: gggp (~textual@111.63.44.6) (Ping timeout: 260 seconds)
[12:14:50] *** Quits: Thanatos (~Thanatos@ec2-54-148-37-124.us-west-2.compute.amazonaws.com) (Ping timeout: 260 seconds)
[12:15:37] *** Joins: darksun (~darksun@user/darksun)
[12:15:41] *** Joins: KirkMcDonald (~Kirk@python/site-packages/KirkMcDonald)
[12:18:32] *** Joins: aleks (~aleks@user/aleks)
[12:19:44] <hexnewbie> #!/bin/bash -e pitfall, No. 173: the idiot operator (me) would run the script with bash script.sh instead of ./script.sh
[12:19:51] <hexnewbie> Err, sorry, wrong channel
[12:21:24] *** Joins: moldorcoder7_ (~moldorcod@37.120.143.28)
[12:21:26] *** Joins: y1n (~y1n@84-115-64-221.wifi.dynamic.surfer.at)
[12:22:06] <bookworm> Gurkenglas: you can reshape the array back to whatever
[12:22:20] <bookworm> after you've done what you've done
[12:22:42] *** Quits: moldorcoder7 (~moldorcod@37.120.143.28) (Ping timeout: 265 seconds)
[12:23:02] <Gurkenglas> bookworm, but then I have to keep track of the original shape manually :c
[12:23:17] <bookworm> yes
[12:23:52] *** Quits: puff (~user@S0106d4ca6d80a83c.vs.shawcable.net) (Remote host closed the connection)
[12:24:05] *** Joins: puff (~user@S0106d4ca6d80a83c.vs.shawcable.net)
[12:26:00] *** Joins: Wubull (~Thunderbi@user/wuniu)
[12:26:29] <shangxiao> now I want to know what channel discusses #!/bin/bash pitfalls
[12:26:30] *** Quits: Wuniu (~Thunderbi@user/wuniu) (Ping timeout: 260 seconds)
[12:26:31] *** Wubull is now known as Wuniu
[12:26:46] <shangxiao> I mean must be exciting if there are at least 173
[12:28:03] *** Quits: Wuniu (~Thunderbi@user/wuniu) (Client Quit)
[12:28:11] *** Joins: bilb_ono (~alexmarsh@ip68-6-90-72.sb.sd.cox.net)
[12:29:17] <Gurkenglas> Can I have a type alias for Diagram[Callable[[S],T],Callable[[A],B]]
[12:30:31] *** Quits: djhankb (~djhankb@208.113.164.68) (Remote host closed the connection)
[12:30:59] *** Joins: djhankb (~djhankb@208.113.164.68)
[12:31:38] *** ub is now known as ubert
[12:33:02] *** Quits: bilb_ono (~alexmarsh@ip68-6-90-72.sb.sd.cox.net) (Ping timeout: 260 seconds)
[12:33:30] *** Joins: shad (~shad@user/shad)
[12:33:38] *** Joins: ssbr (~ssbr@python/site-packages/ssbr)
[12:34:14] *** Joins: amahl (~amahl@dsl-jklbng12-54fbca-64.dhcp.inet.fi)
[12:36:52] *** Quits: p-i- (~Ohmu@223.206.69.159) (Read error: Connection reset by peer)
[12:36:53] *** Joins: hendursa1 (~weechat@user/hendursaga)
[12:37:10] *** Joins: gggp (~textual@114.245.107.137)
[12:38:27] *** Quits: gggp (~textual@114.245.107.137) (Client Quit)
[12:39:21] *** Quits: hendursaga (~weechat@user/hendursaga) (Ping timeout: 276 seconds)
[12:40:45] *** Joins: gggp (~textual@114.245.107.137)
[12:42:49] *** Joins: zerotypic (~zerotypic@66.96.192.176)
[12:44:43] *** Quits: Samian (~Sami@2620:10d:c091:480::1:941f) (Quit: Textual IRC Client: www.textualapp.com)
[12:45:10] *** Quits: gggp (~textual@114.245.107.137) (Client Quit)
[12:46:23] *** Quits: jpic (~jpic@82.142.24.154) (Ping timeout: 265 seconds)
[12:47:09] *** Quits: ano (~ano@user/ano) (Ping timeout: 276 seconds)
[12:47:54] *** Joins: stpz (~stpz@240e:341:229d:4a00:31ff:34d4:ae:58c5)
[12:48:08] *** Joins: jpic (~jpic@bernadette.objectif-libre.com)
[12:49:43] *** Quits: stpz (~stpz@240e:341:229d:4a00:31ff:34d4:ae:58c5) (Client Quit)
[12:50:43] *** Joins: gggp (~textual@111.63.44.6)
[12:51:35] *** Quits: thrillgore (~ZugZug@69-225-55-100.lightspeed.nsvltn.sbcglobal.net) (Ping timeout: 252 seconds)
[12:53:03] *** Joins: thrillgore (~ZugZug@69-225-55-100.lightspeed.nsvltn.sbcglobal.net)
[12:53:19] *** Quits: maryo87 (~Maryo@user/maryo) (Read error: Connection reset by peer)
[12:55:45] *** Joins: EvilDMP (~textual@django/moderator/EvilDMP)
[12:55:57] *** Joins: darwillim86d (uid517090@id-517090.ilkley.irccloud.com)
[12:56:01] *** Joins: mozgalom (~mozgalom@IPnet-gw.157.157.97.111.simnet.is)
[12:56:05] *** Joins: hegstal (~hegstal@2a02:c7f:7608:d400:8959:ed5e:30f7:362a)
[12:58:30] *** Joins: plastico (~plastico@neomutt/plastico)
[12:59:00] *** Parts: VaniaPy (~VaniaPy@adsl-117.176.58.195.tellas.gr) ()
[12:59:10] *** Quits: jpic (~jpic@bernadette.objectif-libre.com) (Ping timeout: 260 seconds)
[12:59:35] *** Joins: iflema (~ian@user/iflema)
[13:01:03] *** Joins: jpic (~jpic@82.142.24.154)
[13:02:31] *** Quits: mcglk (~mcglk@131.191.49.120) (Read error: Connection reset by peer)
[13:07:01] *** Joins: diamondbond (~diamondbo@175.157.238.149)
[13:07:16] *** Joins: ExeciN (~ExeciN@user/nicexe)
[13:08:02] *** Joins: pretty_dumm_guy (trottel@gateway/vpn/protonvpn/prettydummguy/x-88029655)
[13:08:30] *** Quits: y1n (~y1n@84-115-64-221.wifi.dynamic.surfer.at) (Ping timeout: 260 seconds)
[13:10:33] *** Joins: gitesh (uid423739@id-423739.ilkley.irccloud.com)
[13:11:34] *** Joins: theprophet (~theprophe@85.114.228.184)
[13:11:46] *** Quits: djapo (~archangel@user/djapo) (Ping timeout: 260 seconds)
[13:12:36] *** Joins: PJBoy (~PJBoy@user/pjboy)
[13:13:01] *** Joins: herjazz (~herjazz@p6758124-ipngn30801marunouchi.tokyo.ocn.ne.jp)
[13:14:06] *** Quits: gggp (~textual@111.63.44.6) (Ping timeout: 260 seconds)
[13:15:51] *** Joins: Linux77 (~Linux7_7@186.233.182.237)
[13:18:09] *** Joins: gggp (~textual@60.10.23.169)
[13:19:32] *** Quits: zepolen (~zepolen@2a02:587:8611:2428:ce94:8d76:7cb4:e244) (Quit: Konversation terminated!)
[13:19:46] *** Quits: vdamewood (~vdamewood@fedora/vdamewood) (Quit: My MacBook Pro has gone to sleep. ZZZzzz…)
[13:20:21] *** Joins: rubin55 (sid175221@id-175221.stonehaven.irccloud.com)
[13:20:40] *** Joins: zepolen (~zepolen@2a02:587:8611:2428:f8f0:cc0b:630c:65af)
[13:21:56] *** Joins: cthulchu (~Cthulchu@193.194.107.250)
[13:21:56] *** Joins: y1n (~y1n@84-115-65-10.wifi.dynamic.surfer.at)
[13:22:02] *** Joins: Pickchea (~private@user/pickchea)
[13:22:48] <sunny93> What is this syntax called `x * y for x, y in [(1,2),(3,4)]` ?
[13:23:43] <sunny93> for example, a typical usage sum(x * y for x, y in [(1,2),(3,4)]) . Does `x * y for x, y in [(1,2),(3,4)]` return a list or tuple? I tried [x * y for x, y in [(1,2),(3,4)]] and (x * y for x, y in [(1,2),(3,4)]), both work.
[13:24:37] <ssbr> sunny93: that's a comprehension. If it's surrounded by parens, it's a generator comprehension, producing a lazily evaluated generator. If it has square brackets around it, then it's an eagerly-evaluated list comprehension
[13:25:49] <theprophet> sunny93 what you do there is nesting
[13:26:52] *** Quits: hnOsmium0001 (uid453710@id-453710.stonehaven.irccloud.com) (Quit: Connection closed for inactivity)
[13:27:18] *** Joins: lalitmee (~lalitmee@2402:3a80:8df:5a7f:9760:b838:cefe:2a0a)
[13:27:42] <sunny93> Ok thanks
[13:28:34] *** Quits: ferz (~ferz@93-39-143-98.ip76.fastwebnet.it) (Ping timeout: 260 seconds)
[13:28:43] *** Quits: lalitmee (~lalitmee@2402:3a80:8df:5a7f:9760:b838:cefe:2a0a) (Remote host closed the connection)
[13:28:58] *** Joins: lalitmee (~lalitmee@2402:3a80:8df:5a7f:815a:aaec:bc3f:6d7c)
[13:29:25] *** Quits: lalitmee_ (~lalitmee@180.94.33.217) (Ping timeout: 265 seconds)
[13:29:57] *** Quits: EvilDMP (~textual@django/moderator/EvilDMP) (Quit: My MacBook has gone to sleep. ZZZzzz…)
[13:32:47] *** Quits: pretty_dumm_guy (trottel@gateway/vpn/protonvpn/prettydummguy/x-88029655) (Ping timeout: 265 seconds)
[13:32:50] *** Joins: PaddyF (~PaddyF@user/paddyf)
[13:32:51] *** Joins: legola (~legola@46.235.100.27)
[13:33:16] *** Quits: amahl (~amahl@dsl-jklbng12-54fbca-64.dhcp.inet.fi) (Ping timeout: 265 seconds)
[13:33:52] *** Joins: pretty_dumm_guy (trottel@gateway/vpn/protonvpn/prettydummguy/x-88029655)
[13:35:01] *** Quits: reset (~reset@user/reset) (Quit: reset)
[13:36:02] *** Quits: zerotypic (~zerotypic@66.96.192.176) (Ping timeout: 260 seconds)
[13:36:07] <shangxiao> sunny93: https://docs.python.org/3/howto/functional.html#generator-expressions-and-list-comprehensions
[13:36:29] *** Quits: TakinOver (~quassel@47.150.196.72) (Quit: https://quassel-irc.org - Chat comfortably. Anywhere.)
[13:36:42] *** Quits: FastJack (~fastjack@b2b-78-94-22-14.unitymedia.biz) (Ping timeout: 245 seconds)
[13:36:56] <sunny93> that's very helpful. Let me take a look!
[13:36:59] *** Quits: Amadiro (~Amadiro@84.209.11.12) (Remote host closed the connection)
[13:37:15] <shangxiao> yeah that functional howto is pretty good
[13:37:36] *** Quits: diamondbond (~diamondbo@175.157.238.149) (Quit: Leaving)
[13:38:12] *** Joins: FastJack (~fastjack@b2b-78-94-22-14.unitymedia.biz)
[13:38:53] *** Quits: y1n (~y1n@84-115-65-10.wifi.dynamic.surfer.at) (Ping timeout: 252 seconds)
[13:39:30] *** Joins: trace987 (~trace@ip5f5a6a70.dynamic.kabel-deutschland.de)
[13:39:38] *** Quits: ExeciN (~ExeciN@user/nicexe) (Remote host closed the connection)
[13:40:09] *** Joins: ExeciN (~ExeciN@user/nicexe)
[13:41:45] *** Joins: bilb_ono (~alexmarsh@ip68-6-90-72.sb.sd.cox.net)
[13:41:50] *** Joins: Wuniu (~Thunderbi@user/wuniu)
[13:42:10] *** Joins: y1n (~y1n@84-115-65-10.wifi.dynamic.surfer.at)
[13:44:12] *** Quits: gggp (~textual@60.10.23.169) (Quit: My MacBook has gone to sleep. ZZZzzz…)
[13:44:39] *** Joins: ferz (~ferz@93-39-143-98.ip76.fastwebnet.it)
[13:45:21] *** Quits: dba (uid502594@id-502594.stonehaven.irccloud.com) (Quit: Connection closed for inactivity)
[13:45:36] *** Joins: EvilDMP (~textual@django/moderator/EvilDMP)
[13:46:20] *** Joins: gggp (~textual@60.10.23.169)
[13:46:42] *** Joins: blindguard (~blindguar@2a02:908:1864:c200::4433)
[13:47:14] *** Joins: diamondbond (~diamondbo@175.157.238.149)
[13:47:41] *** Quits: diamondbond (~diamondbo@175.157.238.149) (Read error: Connection reset by peer)
[13:48:09] *** Joins: diamondbond (~diamondbo@175.157.238.149)
[13:48:11] *** Joins: ub (~Thunderbi@178.165.180.233.wireless.dyn.drei.com)
[13:48:13] *** Quits: diamondbond (~diamondbo@175.157.238.149) (Read error: Connection reset by peer)
[13:50:12] *** Quits: ubert (~Thunderbi@91.141.53.92.wireless.dyn.drei.com) (Ping timeout: 265 seconds)
[13:50:12] *** ub is now known as ubert
[13:50:40] *** Quits: bilb_ono (~alexmarsh@ip68-6-90-72.sb.sd.cox.net) (Ping timeout: 265 seconds)
[13:51:09] *** Quits: Wuniu (~Thunderbi@user/wuniu) (Ping timeout: 265 seconds)
[13:51:59] *** Joins: arash (arash@thinks.life.is-a.beauty)
[13:52:33] <arash> Hello, how can i learn and practice basics of python?
[13:53:00] <bjs> arash: have you learned other programming languages before?
[13:53:29] <arash> bjs, yes, i know php, html and JavaScript
[13:53:34] *** Joins: georgios (~georgios@user/georgios)
[13:53:46] *** Quits: y1n (~y1n@84-115-65-10.wifi.dynamic.surfer.at) (Ping timeout: 252 seconds)
[13:55:34] *** Joins: DnzAtWrk (~DnzAtWrk@mobile-access-5673bf-42.dhcp.inet.fi)
[13:55:53] <shangxiao> well python is quite approachable from php
[13:55:55] <bookworm> so do just the same as you did with those
[13:56:05] <bookworm> pick up a book and off we go
[13:56:05] <Mocramis> Hello, is there a python module that provides something equivalent to AsyncMock but for pre-3.8 python ?
[13:56:10] <shangxiao> I think you'll find that python is a joy compared to php
[13:56:22] <Mocramis> (idealy api compatble, i'd like to handle both)
[13:56:32] <jinsun> arash: https://docs.python.org/3/tutorial/index.html
[13:56:47] *** Quits: ExeciN (~ExeciN@user/nicexe) (Remote host closed the connection)
[13:57:06] *** Joins: ExeciN (~ExeciN@user/nicexe)
[13:57:49] <arash> jinsun, thank you
[13:58:15] *** Joins: lesshaste (~lesshaste@82-69-126-43.dsl.in-addr.zen.co.uk)
[13:58:23] <lesshaste> what does "~1" compute?
[13:59:37] *** Joins: Wuniu (~Thunderbi@user/wuniu)
[13:59:38] <bookworm> it flips the bits in the binary representation
[14:00:22] *** Quits: fikran (~fikran@user/fikran) (Ping timeout: 252 seconds)
[14:00:53] *** Quits: NoImNotNineVolt (~fdsa@c-73-248-207-98.hsd1.nj.comcast.net) (Ping timeout: 252 seconds)
[14:00:58] *** Quits: gggp (~textual@60.10.23.169) (Quit: My MacBook has gone to sleep. ZZZzzz…)
[14:01:34] <bjs> lesshaste: it's equivalent to a bitwise inversion over the imagined two's complement representation of the number
[14:01:53] <lesshaste> bjs,  ah.. and why not :)
[14:02:00] <supakeen> Yes, it's a bit more complex in Python-land than just a negation.
[14:02:03] <bjs> lesshaste: why not what
[14:02:05] <supakeen> Because the integers aren't fixed size.
[14:02:20] *** Joins: fikran (~fikran@user/fikran)
[14:03:02] <bjs> lesshaste: 3 == 0b0..11 and ~3 = 0b1..00 == -4.  Mathematically `~x == -x - 1`
[14:03:10] <lesshaste> so ~1 is -2
[14:03:25] <bjs> (here I write 0b0..11 to say the number is sign-extended with 0 to infinity)
[14:03:29] <lesshaste> thanks
[14:03:30] <bjs> lesshaste: yes
[14:04:11] *** Quits: perrierjouet (~perrier-j@modemcable012.251-130-66.mc.videotron.ca) (Quit: WeeChat 3.2)
[14:05:20] <lesshaste> ~-1  also works
[14:05:43] <bjs> lesshaste: yeah, x=-1 so you get -x-1 == -(-1)-1 == 1-1 == 0
[14:06:06] <bjs> which makes sense as -1 is binary all-ones, so negating it gives you all zeros... which is zero.
[14:06:07] <bjs> :)
[14:06:38] <pycode> hello, i have a simple dataframe: https://bpa.st/MFQA basically i need to create a kinf of ranges (with the index of the df) so the conditions is preatty simple, i need to find all the 1 inside the column 'a' and the NEXT 1 inside the column 'b'... with "next" i mean that the match should be made FROM a.index+1
[14:06:42] <pycode> is that possible somehow?
[14:07:20] <pycode> then the 'a.index' is the start of the range and the 'b.index' is the value of the end
[14:09:08] *** Joins: mei (~mei@user/mei)
[14:10:46] <pycode> i think i must loop
[14:10:50] <pycode> :/
[14:10:51] <lesshaste> bjs,  :)
[14:11:27] *** Quits: Wuniu (~Thunderbi@user/wuniu) (Ping timeout: 265 seconds)
[14:14:01] *** Joins: VaniaPy (~VaniaPy@adsl-117.176.58.195.tellas.gr)
[14:14:20] *** Quits: puff (~user@S0106d4ca6d80a83c.vs.shawcable.net) (Read error: Connection reset by peer)
[14:14:33] *** Joins: puff (~user@S0106d4ca6d80a83c.vs.shawcable.net)
[14:14:42] *** Joins: dev0 (~dev0@user/deepspace-link)
[14:14:44] *** Quits: theprophet (~theprophe@85.114.228.184) (Quit: Client closed)
[14:16:39] *** Quits: UselessCourage (~UselessCo@gateway/tor-sasl/uselesscourage) (Quit: Leaving)
[14:16:59] <rendar> ok, it seems that if i print my exception, and i get filename and lineno, those are from the *latest* try block, and not where the exception really originates :( how can i fix this?
[14:17:03] *** Joins: UselessCourage (~UselessCo@gateway/tor-sasl/uselesscourage)
[14:20:41] *** Quits: ubert (~Thunderbi@178.165.180.233.wireless.dyn.drei.com) (Ping timeout: 252 seconds)
[14:23:25] *** Joins: minip (minip@user/minip)
[14:23:59] *** Quits: asthasr (~asthasr@162.210.28.151) (Quit: asthasr)
[14:24:33] *** Joins: Liblx (~Alex@2a02:810c:280:59c:85ed:fd82:ed90:f17a)
[14:24:58] *** Joins: theprophet (~theprophe@85.114.228.184)
[14:26:12] *** Joins: ubert (~Thunderbi@91.141.39.93.wireless.dyn.drei.com)
[14:26:26] *** Quits: ssbr (~ssbr@python/site-packages/ssbr) (Ping timeout: 265 seconds)
[14:26:27] *** Quits: VaniaPy (~VaniaPy@adsl-117.176.58.195.tellas.gr) (Quit: Connection closed)
[14:27:55] <bjs> rendar: the try shouldn't affect the filename/lineno of the exception,  they come from the `raise`
[14:28:21] <zln> is it possible to write over input line with next output? I've tried with input in a print with end in variations and begin next with \r and many other things but havent been successful?
[14:28:47] <rendar> bjs, yeah but apparently, it does
[14:28:47] *** Joins: drogas (~drogas@jump2.jet.uk)
[14:28:56] <bjs> rendar: it does?  can you show a example?
[14:29:08] <rendar> yes, wait
[14:29:08] <bjs> zln: like, when printing to the terminal?  stdout?
[14:30:02] <zln> bjs: yes
[14:30:16] <zln> should I use tput for it?
[14:30:28] <deniska> zln: https://bpa.st/YTIA
[14:30:43] <bjs> zln: well stdout is just a stream of characters, you can't "overwrite" things directly.  But \r should return the cursor to the beginning of the line
[14:30:47] *** Quits: ubert (~Thunderbi@91.141.39.93.wireless.dyn.drei.com) (Ping timeout: 265 seconds)
[14:30:50] *** Joins: ub (~Thunderbi@91.141.41.188.wireless.dyn.drei.com)
[14:30:55] <deniska> zln: the second line should be no shorter than the first (pad with spaces otherwise)
[14:31:23] <rendar> bjs, https://bpa.st/B4UQ -- at every error when tryin' to compile the program, i always get that filename (console.py) and that lineno signed with "HERE!!"
[14:31:44] <zln> https://bpa.st/2OLQ tried like this
[14:31:53] * zln checking deniskas link
[14:33:08] *** ub is now known as ubert
[14:33:32] <deniska> zln: \r is a character which tells a terminal to move the cursor to the beginning of the line
[14:34:13] <deniska> zln: the previous print was with end='' so that it doesn't go to a new line, and flush=True because by default python buffers standard output and won't print an "incomplete" line
[14:34:16] <zln> deniska: yes. The problem must be that one uses Enter to input, Think I should use tput to accomplish it
[14:34:29] <zln> aha
[14:34:32] <zln> let me test
[14:35:07] *** Joins: chenxuezhao (~chenxuezh@106.39.157.10)
[14:35:13] <deniska> zln: if you want something fancier than that, especially involving user input, it might be easier to go with a TUI library like urwid or maybe prompt-toolkit
[14:35:35] * zln checking TUI and urwid...
[14:35:40] <zln> thanks
[14:37:30] <pycode> can i do this with numpy? https://bpa.st/MFQA
[14:37:51] *** Quits: aleks (~aleks@user/aleks) (Quit: Client closed)
[14:37:55] *** Quits: theprophet (~theprophe@85.114.228.184) (Quit: Client closed)
[14:37:59] *** Joins: NeilRG (~NeilRG@192.222.196.111)
[14:38:10] <Repiphany> Where does the output come from
[14:41:06] <pycode> Repiphany, i need to calculate it :)
[14:41:11] <pycode> i mean...i need to create ranges
[14:41:25] *** Quits: Mechanismus (~LabMonkey@2602:306:cf62:e270:101a:c784:11b0:c2b7) (Quit: Leaving)
[14:41:25] <pycode> those ranges have a start condition and an end condition
[14:41:33] *** Quits: dev0 (~dev0@user/deepspace-link) ()
[14:41:34] <pycode> the start condition is when i met 1 in 'a'
[14:41:51] <pycode> the end conditions is when i meet 1 in 'b'
[14:42:10] <pycode> obviously the 1 in 'b' must be AFTER the a
[14:42:34] *** Quits: NeilRG (~NeilRG@192.222.196.111) (Ping timeout: 252 seconds)
[14:43:07] *** Quits: khile (cacambo@triton.blinkenshell.org) (Ping timeout: 252 seconds)
[14:45:39] <Repiphany> Are you guaranteed to start with "nice" data
[14:46:40] <pycode> Repiphany, what do you exactly mean? i have those two columns and both have 1 or 0 my problem is that i need to create those ranges giving start and end conditions so a condition to open UNTIL i meet the end condition match
[14:46:44] <Repiphany> Would you ever start with {'a': [1,1,1,1,0,1], 'b':[0,0,1,0,1,1]}
[14:47:35] <pycode> Repiphany, yes sure, but the condition is the same...i need to find where a = 1 until the b = 1 so i can ignore the inner 1 1 1 in a
[14:47:52] <pycode> so the next range will start from b.index + 1
[14:48:01] <pycode> must be consecutive
[14:48:27] <pycode> a=1 until --> b =1 and then start from b.index + 1 to find the next range...
[14:48:57] <Repiphany> Are the arrays so long that you need to optimize it using vectorized functions rather than just doing it "naively"
[14:49:12] <rendar> bjs, ?
[14:49:35] <bjs> rendar: I can't really make much of this
[14:50:00] <bjs> it's some partial code, and your point is about a traceback/error so I have no way to generate one myself and you didn't include one
[14:50:00] <bjs> so
[14:51:26] *** Joins: theprophet (~theprophe@85.114.228.184)
[14:51:32] <pycode> Repiphany, yes
[14:51:34] <pycode> very very long
[14:51:53] *** Joins: vvdaiwrw (~rvgzuuqp@gateway/tor-sasl/rvgzuuqp)
[14:51:55] *** Quits: upsala (~zcb@185.213.155.160) (Quit: WeeChat 3.2)
[14:52:17] <pycode> i thought to numpy for that reason
[14:53:59] <pycode> instead of create a while loop
[14:54:40] *** Joins: LucaTM (~LucaTM@user/lucatm)
[14:57:23] <pycode> Repiphany, seems wuite difficult i mean...i do not know how to set conditions for both start/end
[14:59:41] *** Joins: perrierjouet (~perrier-j@modemcable012.251-130-66.mc.videotron.ca)
[14:59:59] <rendar> bjs,  i have reproduced the error: https://bpa.st/XYZQ
[15:02:17] *** Joins: Naan (~Naan@user/naan)
[15:02:25] <bjs> rendar: you're thinking of the traceback upside down
[15:02:36] <rendar> bjs, huh?
[15:02:41] <bjs> rendar: traceback.tb_next goes "up" the stack towards the exception
[15:02:49] *** Joins: ub (~Thunderbi@91.141.34.0.wireless.dyn.drei.com)
[15:03:11] <rendar> bjs, oh, ok, thing is.. i want the first file/lineno which originated the initial exception...
[15:03:18] <bjs> rendar: when you print out a traceback, the bottom of the traceback is the line that caused the error, you have to follow tb_next to the last frame to get that
[15:03:58] <gitesh> so input is string, then what is printed by print function is string and what is write to a file is string, i mean always string is it?
[15:04:08] *** Quits: ubert (~Thunderbi@91.141.41.188.wireless.dyn.drei.com) (Ping timeout: 265 seconds)
[15:04:09] *** ub is now known as ubert
[15:04:10] <rendar> bjs, i have to follow tb_next until it's None ?
[15:04:16] <bjs> rendar: so do something like `tb = exception_traceback; while tb.tb_next is not None: tb = tb.tb_next; ...`
[15:04:17] <bjs> rendar: yes
[15:04:22] <rendar> ok
[15:05:21] *** Quits: jpic (~jpic@82.142.24.154) (Remote host closed the connection)
[15:05:43] <bjs> gitesh: well not really
[15:06:07] <bjs> gitesh: files and input/output streams are actually just bytes (binary).  But Python secretly translates to/from text (strings) for you
[15:07:19] <gitesh> bjs: ok, so for me it's string to care about ,and automatically and really it's bytes
[15:07:32] <bjs> gitesh: yes
[15:07:44] <gitesh> Good.
[15:08:52] <jinsun> rendar: you can also use `frame, lineno = more_itertools.last(traceback.walk_tb(exception_traceback))`
[15:08:58] <Repiphany> pycode: https://bpa.st/5CNQ Still kind of a naive way of doing it, not sure how performant you're trying to be
[15:09:11] *** Quits: perrierjouet (~perrier-j@modemcable012.251-130-66.mc.videotron.ca) (Quit: WeeChat 3.2)
[15:09:12] <rendar> jinsun, thanks
[15:09:56] *** Quits: Pickchea (~private@user/pickchea) (Ping timeout: 265 seconds)
[15:10:30] <pycode> i see Repiphany
[15:10:37] <pycode> thanks
[15:11:03] *** Joins: perrierjouet (~perrier-j@modemcable012.251-130-66.mc.videotron.ca)
[15:12:11] <pycode> Repiphany, it is 100% numpy so i suppose it achive the max speed i can think with python
[15:12:11] <pycode> no?
[15:12:19] <pycode> let me try it with giant array
[15:15:08] *** Quits: cthulchu (~Cthulchu@193.194.107.250) (Ping timeout: 252 seconds)
[15:15:20] *** Quits: georgios (~georgios@user/georgios) (Ping timeout: 260 seconds)
[15:15:44] *** Joins: sedeki (~textual@user/sedeki)
[15:18:17] *** Quits: sedeki (~textual@user/sedeki) (Client Quit)
[15:18:30] *** Joins: dez (uid92154@user/dez)
[15:19:50] *** Joins: cthulchu (~Cthulchu@193.194.107.250)
[15:22:09] *** Quits: Liblx (~Alex@2a02:810c:280:59c:85ed:fd82:ed90:f17a) (Quit: WeeChat 3.2)
[15:24:54] <rendar> bjs,  the thing is, if i have `ex_type, ex_obj, tb = sys.exc_info()` and i do tb = tb.tb_next ... the `tb` will move thorugh the linked list, but ex_type and ex_obj won't, is that normal?
[15:25:40] <bjs> rendar: that question is a misunderstanding.  There isn't separate exception info for each line in the traceback
[15:25:51] <bjs> There is one exception, and it has a traceback, and that traceback has many lines
[15:25:57] *** Joins: aleks (~aleks@user/aleks)
[15:26:22] <rendar> bjs, oh, that's right
[15:26:23] <rendar> thanks
[15:28:34] *** Joins: Wuniu (~Thunderbi@user/wuniu)
[15:29:59] *** Quits: chenxuezhao (~chenxuezh@106.39.157.10) (Quit: Leaving...)
[15:31:30] *** Quits: Oddity (Oddity@user/oddity) (Ping timeout: 250 seconds)
[15:32:31] *** Joins: NeilRG (~NeilRG@192.222.196.111)
[15:32:44] *** Quits: ubert (~Thunderbi@91.141.34.0.wireless.dyn.drei.com) (Ping timeout: 252 seconds)
[15:32:55] *** Joins: ub (~Thunderbi@178.115.42.105.wireless.dyn.drei.com)
[15:33:16] *** Quits: Meteorhead (~Meteorhea@165.225.205.32) (Quit: Client closed)
[15:35:14] *** ub is now known as ubert
[15:36:18] *** Quits: mat001 (~mat001@c-73-223-64-126.hsd1.ca.comcast.net) (Remote host closed the connection)
[15:36:54] *** Quits: NeilRG (~NeilRG@192.222.196.111) (Ping timeout: 260 seconds)
[15:37:00] *** Joins: mat001 (~mat001@c-73-223-64-126.hsd1.ca.comcast.net)
[15:39:35] *** Joins: Oddity (Oddity@user/oddity)
[15:40:05] *** Quits: perrierjouet (~perrier-j@modemcable012.251-130-66.mc.videotron.ca) (Quit: WeeChat 3.2)
[15:40:56] *** Joins: Samian (~Sami@2620:10d:c091:480::1:941f)
[15:41:08] <Samian> Does this make sense to anyone? [p for emb in dlrm.emb_l for p in emb.parameters()]
[15:42:00] <Samian> eh it does to me now
[15:42:15] <Samian> funny how something makes sense right after I ask a question because it wasn't making sense
[15:43:28] *** Joins: ano (~ano@user/ano)
[15:43:45] *** Quits: ckdCreations (~ckdCreati@147.55.130.32) (Read error: Connection reset by peer)
[15:44:02] *** Joins: ckdCreations (~ckdCreati@c-24-17-50-149.hsd1.wa.comcast.net)
[15:44:14] *** Joins: sn1tch3r (~sn1tch3r@user/sn1tch3r)
[15:44:36] *** Joins: perrierjouet (~perrier-j@modemcable012.251-130-66.mc.videotron.ca)
[15:45:37] <Samian> sanity check, which is the outer for loop?
[15:45:55] * Samian googles nested for loop comprehension
[15:46:03] *** Joins: Mechanismus (~LabMonkey@2602:306:cf62:e270:2d63:1fb2:2154:afb0)
[15:46:48] *** Joins: doko_ (~doko@2a02:8106:1a:7600:9f1c:f187:4c79:647a)
[15:46:55] *** doko_ is now known as doko
[15:47:43] *** Joins: bilb_ono (~alexmarsh@ip68-6-90-72.sb.sd.cox.net)
[15:48:04] *** Joins: VaniaPy (~VaniaPy@adsl-117.176.58.195.tellas.gr)
[15:48:40] *** Joins: NeilRG (~NeilRG@192.222.196.111)
[15:49:02] <Repiphany> You read list comprehensions in the same order as normal for loops
[15:49:22] <Repiphany> for emb in ...: for p in emb...: blah
[15:49:55] *** Joins: Pickchea (~private@user/pickchea)
[15:49:58] *** Quits: audio (~audio@2603-8081-1800-6a6f-31ac-9639-bc0a-65dc.res6.spectrum.com) (Ping timeout: 260 seconds)
[15:49:58] <Samian> right
[15:50:10] <Samian> it looks like a blatant error. I think it should be [for p in emb.parameters() for emb in dlrm.emb_l ]
[15:50:37] <Repiphany> No, you need emb outside to loop over it in the "inner" loop
[15:51:09] <Samian> Repiphany search "[p for emb in dlrm.emb_l for p in emb.parameters()]" in https://github.com/facebookresearch/dlrm/blob/master/dlrm_s_pytorch.py
[15:51:21] <Samian> it looks like emb is not defined outside the list comprehension
[15:51:31] *** Joins: gggp (~textual@111.63.44.6)
[15:51:46] <Repiphany> Yes, emb is in the first part of the comprehension so that it can be used in the second part
[15:52:32] *** Quits: bilb_ono (~alexmarsh@ip68-6-90-72.sb.sd.cox.net) (Ping timeout: 252 seconds)
[15:53:17] <Repiphany> Samian: https://bpa.st/U5FQ
[15:53:33] <Samian> I see. I was looking at this example online: [[j for j in range(5)] for i in range(5)]. ... But because it's a list comprehension inside another one, it's behavior is different
[15:54:38] *** Quits: pycode (~pycode@2001:b07:5d28:551:ca58:cf49:8125:bd3c) (Ping timeout: 260 seconds)
[15:54:41] *** Joins: Naan` (~Naan@user/naan)
[15:55:18] *** Quits: perrierjouet (~perrier-j@modemcable012.251-130-66.mc.videotron.ca) (Quit: WeeChat 3.2)
[15:55:35] *** Quits: Naan (~Naan@user/naan) (Ping timeout: 260 seconds)
[15:56:24] <Samian> Repiphany  thanks!  now I get it
[15:56:43] <rendar> bjs, another problem is that i don't want to print the actual traceback but the e.__cause__'s one
[15:56:50] *** Joins: perrierjouet (~perrier-j@modemcable012.251-130-66.mc.videotron.ca)
[15:59:33] <rendar> so if with `ex_type, ex_object, tb = sys.exc_info()` i get ex_object.__cause__ is not None, how can i get `tb` of that ex_object.__cause__ ?
[16:02:08] <Yhg1s> rendar: ex_object.__cause__.__traceback__.
[16:02:30] <Yhg1s> rendar: since Python 3, the exception object holds a reference to the traceback. You usually don't need sys.exc_info() anymore.
[16:02:58] *** Quits: gggp (~textual@111.63.44.6) (Quit: My MacBook has gone to sleep. ZZZzzz…)
[16:03:58] *** Quits: Vonter (~Vonter@user/vonter) (Ping timeout: 260 seconds)
[16:03:59] <gitesh> should I always use inheritance?
[16:04:36] <Yhg1s> gitesh: no.
[16:04:41] <Yhg1s> gitesh: you shouldn't "always" do anything.
[16:04:41] *** Quits: puff (~user@S0106d4ca6d80a83c.vs.shawcable.net) (Read error: Connection reset by peer)
[16:04:44] <otisolsen70> Is there a 'file' library for Python that will effectively do the same as the unix 'file' utility to guess file types?
[16:04:54] *** Joins: puff (~user@S0106d4ca6d80a83c.vs.shawcable.net)
[16:05:11] <andi_> what's a nice way to get count the files found when i use pathlib.Path(cwd).rglob(mypattern) isn't this returning a generator?
[16:05:35] <deniska> otisolsen70: there're interfaces/bindings for libmagic
[16:05:41] <Yhg1s> otisolsen70: the third-party 'magic' module.
[16:05:57] <otisolsen70> deniska, Yhg1s: Thanks!
[16:05:59] <gitesh> Yhg1s: if i were to create a class for cricketers should I always first make person class by which a cricketer class inherits
[16:06:35] <gitesh> Yhg1s: or i can just make cricketer class
[16:06:41] <Yhg1s> gitesh: no. Again, never "always" do anything.
[16:06:54] <gitesh> Yhg1s: i don't understand that what you are saying
[16:06:55] <Yhg1s> gitesh: if it makes sense to also hav a person class, make a person class. if it doesn't make sense, don't.
[16:07:01] <Yhg1s> gitesh: there are no absolute rules.
[16:07:16] *** Quits: ihaveamac (~ihaveamac@ihaveahax.net) (Quit: fail)
[16:07:17] <gitesh> Yhg1s: oh okay
[16:08:27] *** Joins: georgios (~georgios@user/georgios)
[16:09:04] *** Joins: ihaveamac (~ihaveamac@ihaveahax.net)
[16:09:27] <otisolsen70> Yhg1s, deniska: there seems to be both "magic" and "libmagic" available via pip?
[16:09:48] <otisolsen70> "magic" is v0.1. Is that the real one?
[16:10:02] *** Quits: fikran (~fikran@user/fikran) (Ping timeout: 260 seconds)
[16:10:10] <otisolsen70> And also a python-magic
[16:10:19] *** Joins: Meteorhead (~Meteorhea@165.225.205.32)
[16:10:21] <Yhg1s> otisolsen70: python-magic is the one you probably want to use.
[16:10:34] *** Joins: lalitmee_ (~lalitmee@180.94.32.192)
[16:10:53] <otisolsen70> Thanks. How to know this stuff?
[16:11:02] <otisolsen70> When there are multiple packages with almost same name?
[16:11:42] *** Joins: fikran (~fikran@user/fikran)
[16:12:19] <Yhg1s> otisolsen70: unfortunately, PyPI is not an authority. Anyone can upload packages. You have to evaluate them yourself, much like anything you download and install.
[16:12:43] <otisolsen70> OK. There is no wetting at all?
[16:12:50] <Yhg1s> vetting? No, PyPI does not vet.
[16:13:18] *** Quits: lalitmee (~lalitmee@2402:3a80:8df:5a7f:815a:aaec:bc3f:6d7c) (Ping timeout: 260 seconds)
[16:13:22] *** Quits: Wuniu (~Thunderbi@user/wuniu) (Quit: I'm tired, have a good time!)
[16:13:48] <otisolsen70> Yhg1s, amazing that this is not filled with spam to the point of being useless. I mean it is a big shared namespace. And if everyone can potentially pollute it.... I would imagine there would be all sorts of typo squatting with packages containing forked versions with malware...
[16:13:59] *** Joins: computeiro (~Wender@189.37.68.37)
[16:14:19] <Soni> so basically this is what we wanna end up with: https://bpa.st/URKQ
[16:14:34] <Yhg1s> otisolsen70: there are people who clean up obvious spam and malicious packages.
[16:14:49] <otisolsen70> OK
[16:15:31] <Soni> we currently have a pygit2.Repository and a Path to that website dir, but we're not sure where to go from here
[16:15:38] *** Quits: minip (minip@user/minip) (Ping timeout: 252 seconds)
[16:16:11] *** Joins: minip (minip@user/minip)
[16:17:00] *** Quits: Spawns_Carpeting (~pi@user/spawns-carpeting/x-6969421) (Quit: ZNC 1.7.2+deb3 - https://znc.in)
[16:17:12] *** Quits: bitdex (~bitdex@gateway/tor-sasl/bitdex) (Quit: = "")
[16:17:57] *** Joins: Spawns_Carpeting (~pi@user/spawns-carpeting/x-6969421)
[16:18:14] *** Joins: Julian (~tos9@python/site-packages/Julian)
[16:18:47] *** Quits: noctavian (~noctavian@gateway/tor-sasl/noctavian) (Remote host closed the connection)
[16:19:02] *** Joins: Adoi (~Adoi@user/adoi)
[16:19:04] *** Joins: Adois (~Adoi@user/adoi)
[16:19:08] *** Joins: noctavian (~noctavian@gateway/tor-sasl/noctavian)
[16:19:20] *** Joins: jpic (~jpic@82.142.24.154)
[16:20:23] *** Joins: nickel8448 (~rahulwadh@147.80.76.34.bc.googleusercontent.com)
[16:20:46] *** Quits: Naan` (~Naan@user/naan) (Ping timeout: 260 seconds)
[16:22:10] *** Joins: Naan (~Naan@user/naan)
[16:26:30] *** Joins: lalitmee__ (~lalitmee@2402:3a80:8c3:93d3:723d:f129:22bb:96f3)
[16:27:12] *** Joins: Vonter (~Vonter@user/vonter)
[16:27:38] *** Joins: Atque (~Atque@user/atque)
[16:28:38] *** Quits: ouzel8_ (~ouzel8_@shams.boastblast.com) (Remote host closed the connection)
[16:29:01] *** Joins: ouzel8_ (~ouzel8_@shams.boastblast.com)
[16:29:10] *** Quits: lalitmee_ (~lalitmee@180.94.32.192) (Ping timeout: 260 seconds)
[16:30:03] *** Joins: pkapp (~pkapp@2601:58c:c500:6900:29a5:5ba5:e5d7:8cdc)
[16:30:34] *** Quits: djhankb (~djhankb@208.113.164.68) (Read error: Connection reset by peer)
[16:30:43] *** Joins: Bronto22 (~mennoh@84-86-247-193.fixed.kpn.net)
[16:31:09] *** Joins: djhankb (~djhankb@208.113.164.68)
[16:32:31] *** Joins: pycurious (~Adium@user/pycurious)
[16:36:02] *** Quits: supakeen (~user@python/site-packages/supakeen) (Quit: WeeChat 3.2.1)
[16:36:10] *** Joins: zeden (~zeden@user/zeden)
[16:36:31] *** Joins: supakeen (~user@python/site-packages/supakeen)
[16:39:36] *** Quits: stkrdknmibalz (~test@rrcs-75-87-43-226.sw.biz.rr.com) (Quit: WeeChat 3.0.1)
[16:39:41] *** Joins: cdown_ (~cdown@163.114.131.1)
[16:39:58] *** Joins: pycode (~pycode@2001:b07:5d28:551:d455:47c4:8ac6:8f93)
[16:40:05] *** Quits: Cyp (~cyp@192038133070.mbb.telenor.dk) (Ping timeout: 250 seconds)
[16:41:09] *** Joins: AliceMeows (~AliceMeow@user/alicemeows)
[16:41:21] *** Joins: node1 (~node1@user/node1)
[16:42:32] *** Quits: mickey (~user@user/mickey) (Remote host closed the connection)
[16:42:35] *** Quits: cdown (~cdown@89.32.122.5) (Ping timeout: 252 seconds)
[16:42:45] *** cdown_ is now known as cdown
[16:43:15] *** Joins: mickey (~user@user/mickey)
[16:43:34] *** Quits: NeilRG (~NeilRG@192.222.196.111) (Remote host closed the connection)
[16:44:03] *** Quits: minip (minip@user/minip) (Remote host closed the connection)
[16:45:30] *** Quits: cheater (~Username@user/cheater) (Ping timeout: 260 seconds)
[16:45:49] *** Joins: LiftLeft (~LiftLeft@216-26-118-34.dynamic.nelson.airstreamcomm.net)
[16:46:11] *** Parts: AliceMeows (~AliceMeow@user/alicemeows) (Leaving)
[16:46:23] *** Quits: juanma (~juanma@55.red-79-145-11.dynamicip.rima-tde.net) (Remote host closed the connection)
[16:48:43] *** Quits: perrierjouet (~perrier-j@modemcable012.251-130-66.mc.videotron.ca) (Quit: WeeChat 3.2)
[16:51:51] *** Joins: shawwwn (uid6132@id-6132.helmsley.irccloud.com)
[16:51:52] *** Quits: newpy (~newpy@206.168.231.90) (Quit: Leaving)
[16:52:02] *** Quits: Julian (~tos9@python/site-packages/Julian) (Ping timeout: 260 seconds)
[16:53:52] *** Quits: CombatVet (~c4@user/combatvet) (Quit: suck it)
[16:54:02] *** Joins: Julian (~tos9@python/site-packages/Julian)
[16:54:27] *** Quits: frost (~frost@59.71.240.119) (Quit: Connection closed)
[16:55:05] *** Quits: Pickchea (~private@user/pickchea) (Ping timeout: 260 seconds)
[16:55:45] *** Joins: cdown_ (~cdown@89.32.122.5)
[16:55:49] *** Joins: Cyp (~cyp@192038129207.mbb.telenor.dk)
[16:58:30] *** Quits: Hackerpcs (~user@user/hackerpcs) (Quit: Hackerpcs)
[16:58:41] *** Quits: cdown (~cdown@163.114.131.1) (Ping timeout: 265 seconds)
[16:58:45] *** cdown_ is now known as cdown
[16:59:50] *** Joins: Hackerpcs (~user@user/hackerpcs)
[17:01:30] *** Quits: node1 (~node1@user/node1) (Quit: Leaving)
[17:01:33] *** Joins: bilb_ono (~alexmarsh@ip68-6-90-72.sb.sd.cox.net)
[17:02:23] *** Joins: withered_wolf (~withered_@1437135-v103.1561-static.stchilaa.metronetinc.net)
[17:03:27] <Soni> given a "foo bar baz\n" how to get ["foo", "bar", "baz"]?
[17:03:44] *** Quits: trace987 (~trace@ip5f5a6a70.dynamic.kabel-deutschland.de) (Remote host closed the connection)
[17:03:45] *** Joins: FFY00_ (~FFY00@archlinux/trusteduser/ffy00)
[17:05:08] <Repiphany> [w.strip() for w in "foo bar baz\n".split(' ')]
[17:05:45] *** Joins: cdown_ (~cdown@163.114.131.1)
[17:05:49] <nedbat> Soni: or:  that_string.split()
[17:05:52] *** Quits: FFY00 (~FFY00@archlinux/trusteduser/ffy00) (Ping timeout: 245 seconds)
[17:06:16] *** Quits: bilb_ono (~alexmarsh@ip68-6-90-72.sb.sd.cox.net) (Ping timeout: 252 seconds)
[17:06:27] *** Joins: FFY00 (~FFY00@archlinux/trusteduser/ffy00)
[17:06:38] <Repiphany> Oh what, it already does magic with discarding empty strings
[17:06:40] <Soni> yes we already have changes = [list(l.split(" ", 2)) for l in sys.stdin]
[17:06:43] *** Quits: withered_wolf (~withered_@1437135-v103.1561-static.stchilaa.metronetinc.net) (Remote host closed the connection)
[17:06:51] <Soni> how do you get rid of the '\n' tho
[17:06:52] *** Joins: withered_wolf (~withered_@1437135-v103.1561-static.stchilaa.metronetinc.net)
[17:07:04] <Soni> [:-1]?
[17:07:31] <Repiphany> "foo bar baz\n".split() is exactly ['foo', 'bar', 'baz'] already
[17:08:22] *** Quits: FFY00_ (~FFY00@archlinux/trusteduser/ffy00) (Ping timeout: 260 seconds)
[17:08:28] *** Quits: cdown (~cdown@89.32.122.5) (Ping timeout: 252 seconds)
[17:08:33] *** cdown_ is now known as cdown
[17:09:02] <Repiphany> My original suggestion is only needed for non-whitespace splitting I guess
[17:09:07] *** Joins: trashbird (~trashbird@user/trashbird)
[17:12:08] <Soni> [:-1] works :shrug:
[17:12:17] *** Joins: perrierjouet (~perrier-j@modemcable012.251-130-66.mc.videotron.ca)
[17:12:26] <nedbat> Soni: why not:  changes = [l.split() for l in sys.stdin]    ?
[17:12:34] *** Quits: Julian (~tos9@python/site-packages/Julian) (Ping timeout: 260 seconds)
[17:12:38] <Soni> nedbat: because git
[17:12:53] <Soni> no idea if spaces are allowed in ref names but :shrug:
[17:13:20] <nedbat> Soni: ok, then [l.split(maxsplit=2) for l in sys.stdin]
[17:13:44] <Soni> nedbat: that wouldn't help
[17:13:55] *** Joins: FFY00_ (~FFY00@archlinux/trusteduser/ffy00)
[17:14:04] <nedbat> Soni: ok, you've only given us half the problem, so asking here was kind of a waste of time.
[17:14:05] *** Joins: NeilRG (~NeilRG@192.222.196.111)
[17:14:37] *** Quits: jetchisel (jetchisel@user/jetchisel) (Quit: Unfortunately time is always against us -- [Morpheus])
[17:14:50] *** Quits: FFY00 (~FFY00@archlinux/trusteduser/ffy00) (Read error: Connection reset by peer)
[17:15:07] <Soni> <old-value> SP <new-value> SP <ref-name> LF
[17:15:34] <Soni> so changes = [list(l[:-1].split(" ", 2)) for l in sys.stdin] should work yeah?
[17:15:45] *** Joins: cdown_ (~cdown@89.32.122.5)
[17:16:50] <nedbat> Soni: i would use l.rstrip("\n").split(maxsplit=2)
[17:17:29] <Soni> close enough
[17:17:33] *** Joins: Mattiaslndstrm (~Mattiasln@c188-148-207-108.bredband.tele2.se)
[17:17:35] *** Joins: Wuniu (~Thunderbi@user/wuniu)
[17:18:03] <Soni> so uh what's that thing with namedtuple vs dataclass again?
[17:18:20] *** Quits: NeilRG (~NeilRG@192.222.196.111) (Ping timeout: 252 seconds)
[17:18:20] <grym> well, one's a tuple
[17:18:20] *** Quits: cdown (~cdown@163.114.131.1) (Ping timeout: 252 seconds)
[17:18:21] *** cdown_ is now known as cdown
[17:18:24] <grym> and the other isnt
[17:19:40] <Soni> you can dataclass(*foo)?
[17:20:27] <grym> sure
[17:20:37] <grym> it's just a class.  you can call its init the usual ways
[17:21:45] *** Joins: nyah (~nyah@bcdcb6e3.skybroadband.com)
[17:21:49] *** Joins: slowButPresent (~slowButPr@user/slowbutpresent)
[17:21:55] <grym> https://www.attrs.org/en/stable/why.html#namedtuples  is the usual list of pros and cons
[17:24:16] *** Quits: Wuniu (~Thunderbi@user/wuniu) (Ping timeout: 252 seconds)
[17:24:35] *** Joins: Wuniu (~Thunderbi@user/wuniu)
[17:24:51] <grym> if you really do have an ordered immutable collection of values that you'd like to iterate over, but call by name instead of remember index integers for; namedtuple is for you
[17:24:55] <grym> otherwise, it's not
[17:25:07] *** Joins: tg (~tg@rockylinux/infra/tg)
[17:25:16] *** Joins: trace987 (~trace@ip5f5a6a70.dynamic.kabel-deutschland.de)
[17:25:43] *** Quits: trace987 (~trace@ip5f5a6a70.dynamic.kabel-deutschland.de) (Remote host closed the connection)
[17:25:56] *** Joins: FFY00 (~FFY00@archlinux/trusteduser/ffy00)
[17:26:01] *** Joins: Julian (~tos9@python/site-packages/Julian)
[17:26:45] <Soni> something like this then? https://bpa.st/NNJQ
[17:27:10] *** Joins: sedeki (~textual@user/sedeki)
[17:27:18] *** Joins: Pickchea (~private@user/pickchea)
[17:27:46] *** Quits: sedeki (~textual@user/sedeki) (Client Quit)
[17:28:26] *** Quits: FFY00_ (~FFY00@archlinux/trusteduser/ffy00) (Ping timeout: 260 seconds)
[17:28:39] <grym> doing a lot of work in one line, to my tastes, but sure that looks like it'll run
[17:28:49] *** Quits: carl- (~carl-@185.103.188.130) (Ping timeout: 252 seconds)
[17:29:25] <lericson> Soni: add a GitChange.from_line classmethod maybe
[17:30:02] *** Quits: stranac (~stranac@195.29.239.126) (Read error: Connection reset by peer)
[17:30:04] <grym> ^  that'd be a nice touch
[17:30:58] <grym> https://bpa.st/CBHA  thusly
[17:31:16] <lericson> eek lowercase l
[17:31:30] <grym> ?
[17:31:38] <lericson> i dislike it as a variable name
[17:31:48] <lericson> for its similarity to 1
[17:32:00] <lericson> particularly in the font on bpa.st
[17:32:00] <grym> oh.  i am pretty cavalier about my naming inside comprehensions; also, i have a reasonable font :)
[17:32:28] *** Quits: Bronto22 (~mennoh@84-86-247-193.fixed.kpn.net) (Quit: Konversation terminated!)
[17:32:31] *** Quits: iomari891 (~iomari891@105.112.138.38) (Ping timeout: 265 seconds)
[17:33:06] *** Quits: jazzy2 (~jaziz@2600:380:865d:911b:7479:f78f:95d9:1914) (Ping timeout: 260 seconds)
[17:33:09] <theprophet> can somebody name me 1 reason, why should we raise an exception instead of writing a code where theres no exceptions?
[17:33:29] *** Joins: trace987 (~trace@ip5f5a6a70.dynamic.kabel-deutschland.de)
[17:33:50] <grym> theprophet: "I said: “You give up that idea; this is an imperfect world of joy and sorrow mingled. There may be a better land where bicycle saddles are made out of rainbow, stuffed with cloud; in this world the simplest thing is to get used to something hard."
[17:33:54] *** Joins: eodks (~eodks@178.49.152.42)
[17:34:00] <rendar> Yhg1s, awesome thanks
[17:34:02] *** Quits: Wuniu (~Thunderbi@user/wuniu) (Ping timeout: 260 seconds)
[17:34:12] <grym> or in this case, anticipate handling/raising exceptions :)
[17:34:22] <eodks> is there a non-destructive xml parser in python?
[17:34:37] <eodks> i tried elementtree, but it messes the file pretty badly
[17:34:37] <theprophet> grym just write the beautiful code
[17:34:43] <lericson> theprophet: an unpopular opinion around here to be sure, but signalling errors outside exceptions is a normal thing
[17:35:00] *** Quits: EvilDMP (~textual@django/moderator/EvilDMP) (Quit: My MacBook has gone to sleep. ZZZzzz…)
[17:35:04] *** Joins: lalitmee_ (~lalitmee@180.94.33.186)
[17:35:48] <theprophet> lericson i mean does not your code suppose to work without exceptions?
[17:36:03] <lericson> impossible to avoid
[17:36:08] <lericson> and futile
[17:36:16] <grym> theprophet: i don't recommend defensive programming in python very much, though
[17:36:27] <grym> like not every function body deserves to be wrapped in try/except/handling
[17:36:30] <theprophet> grym why not?
[17:36:31] <Repiphany> Exceptions can be cleaner flow control than a billion ifs
[17:36:53] <grym> theprophet: because you can and should, as you say, write tested code for the majority of your business logic that doesn't raise
[17:37:04] <grym> at the edges? different story
[17:37:14] <grym> users are stupid, they'll pass in any old thing!
[17:37:28] *** Quits: Julian (~tos9@python/site-packages/Julian) (Ping timeout: 252 seconds)
[17:37:28] *** Joins: mrgz (~mrgz@201-42-0-191.dsl.telesp.net.br)
[17:37:38] <theprophet> grym so its like you gotta plan that ahead?
[17:37:46] *** Quits: lalitmee__ (~lalitmee@2402:3a80:8c3:93d3:723d:f129:22bb:96f3) (Ping timeout: 260 seconds)
[17:38:07] <Repiphany> `try: v = float(list[10]); except IndexError: print('List is not long enough'); except ValueError: print(
[17:38:14] <grym> i find it hard to cleanly explain "easier to ask forgiveness than permission" versus "look before you leap" style debates
[17:38:15] <Repiphany> 'value is not valid float')
[17:38:45] <Repiphany> Rather than checking if your list is long enough and then doing some convoluted regex to check if it's floatable
[17:38:48] *** Quits: Adois (~Adoi@user/adoi) (Ping timeout: 265 seconds)
[17:38:48] *** Quits: Adoi (~Adoi@user/adoi) (Ping timeout: 265 seconds)
[17:39:01] <grym> Repiphany: but now you swallow the errors and dump a noninterrupting print and continue with invalid state. why would you do that?
[17:39:06] <theprophet> Repiphany whats the case in tha t code? is that input?
[17:39:31] <Repiphany> It's just an example of flow control, presumably you'd actually handle the errors properly in an actual situation
[17:40:45] *** Joins: ham5urg (~ham5urg@p5ddfcd25.dip0.t-ipconnect.de)
[17:42:13] <theprophet> @grym is not planing exceptions and handling them infro also an idea of deffensive programing?
[17:42:13] <theprophet> infront*
[17:42:13] <lericson> exceptions have the unique ability to bubble up
[17:42:13] *** Joins: GreenResponse (~tomek@r-45-155-148-237.gpon.bialnet.pl)
[17:42:13] *** Quits: legola (~legola@46.235.100.27) (Remote host closed the connection)
[17:42:13] <theprophet> ohhh ok that makese sense
[17:42:13] *** Quits: shangxiao (~davids@124.187.193.187) (Quit: WeeChat 3.2.1)
[17:42:13] <theprophet> makes*
[17:42:23] <theprophet> ooohh ok ok bugs right?
[17:42:32] <lericson> but i think there is more nuance here than people want to admit
[17:42:47] <ham5urg> Does pyparsing have predefined ParserElement(s) for parsing common input like dd.mm.yyyy ?
[17:42:49] *** Joins: legola (~legola@46.235.100.27)
[17:43:32] <theprophet> lericson like what? can you name a one thing?
[17:44:35] <deniska> If an error condition can't be expressed by returning None alone, I'd rather see an exception, otherwise people will just ignore the error
[17:44:46] *** Quits: lethu (~lethu@user/lethu) (Ping timeout: 252 seconds)
[17:45:16] <lericson> for example, you may be running a numerical optimization routine, where failure is really on a spectrum
[17:45:22] <theprophet> deniska i kind of agree on that.
[17:45:45] <lericson> the user likely wants the half-finished result, but also needs to know convergence failed
[17:45:46] <theprophet> lericson and?
[17:45:56] *** Joins: NeilRG (~NeilRG@192.222.196.111)
[17:45:59] <theprophet> lericson i see
[17:46:26] *** Joins: zerotypic (~zerotypic@66.96.192.176)
[17:46:34] *** Joins: kulernil (~kulernil@gateway/tor-sasl/kuler)
[17:46:47] <lericson> idk there are always nuances you miss if you think there is one correct approach
[17:46:49] *** Quits: NeilRG (~NeilRG@192.222.196.111) (Remote host closed the connection)
[17:47:03] *** Joins: Hax0r (~Hax0r@51.252.22.22)
[17:47:11] *** Joins: lethu (~lethu@user/lethu)
[17:47:24] *** Joins: NeilRG (~NeilRG@192.222.196.111)
[17:47:29] *** Quits: legola (~legola@46.235.100.27) (Ping timeout: 252 seconds)
[17:47:45] *** Quits: kuler (~kulernil@gateway/tor-sasl/kuler) (Remote host closed the connection)
[17:47:56] *** Joins: dhellmann (~dhellmann@097-081-099-073.res.spectrum.com)
[17:48:17] <deniska> my litmus test for whether something should be an exception or not is whether it makes work in REPL/debugger more annoying
[17:48:22] *** Joins: mathsboy (~user@2001:1c02:2b25:5c00:619e:43ae:cd4d:4aed)
[17:48:33] *** Quits: Mattiaslndstrm (~Mattiasln@c188-148-207-108.bredband.tele2.se) (Quit: My MacBook has gone to sleep. ZZZzzz…)
[17:48:43] <deniska> like an http library which raises for status by default is annoying
[17:49:13] <theprophet> lericson what do you think, is it better to point out one exception at a time or just everything at the same time? like except Exception?
[17:49:22] *** Quits: hendursa1 (~weechat@user/hendursaga) (Quit: hendursa1)
[17:49:28] *** Joins: realies (~realies@user/realies)
[17:50:16] <Repiphany> `except Exception` is bad and you should feel bad if you use it
[17:50:32] <deniska> theprophet: `except Exception` is typically an antipattern
[17:50:40] <theprophet> lol thats a strong statement Repiphany
[17:50:44] <theprophet> but why tho?
[17:50:51] <theprophet> whats up with Exception?
[17:50:55] *** Joins: hendursaga (~weechat@user/hendursaga)
[17:51:00] <lericson> it's like killing a mosquito with a bazooka
[17:51:02] <lericson> you want precision
[17:51:17] <deniska> theprophet: it catches pretty much every exception, including ones you may not, uhm, expect, which makes debugging harder
[17:51:21] <lericson> catching any error is unlikely to be what you want
[17:51:50] <theprophet> deniska aha i see
[17:52:06] *** Quits: VaniaPy (~VaniaPy@adsl-117.176.58.195.tellas.gr) (Quit: Connection closed)
[17:52:11] *** Joins: portalrat_ (~portalrat@user/portalrat)
[17:52:54] <theprophet> lericson so i should hunt mosquitos with precision lol
[17:53:26] <lericson> i use except Exception every now and then tbh
[17:53:40] <theprophet> lericson depend on what?
[17:53:50] *** Joins: bilb_ono (~alexmarsh@ip68-6-90-72.sb.sd.cox.net)
[17:53:52] *** Joins: jazzy2 (~jaziz@2600:380:865d:911b:c128:d355:1b30:8490)
[17:54:03] <lericson> typically if i have a set of things i need to transform somehow, and it takes a long time, i might print exceptions as they occur and then present the result for those that did not fail
[17:54:04] <deniska> there're possible usecases for `except Exception`, e.g. in top level wrappers of, say, a request handler
[17:54:05] *** Joins: lalitmee__ (~lalitmee@180.94.32.172)
[17:54:16] <grym> that's the only place i use it
[17:54:21] <grym> and i feel slightly guilty about doing so
[17:54:25] <grym> it does keep the server up, though
[17:54:28] <Repiphany> If you really want to just log all errors but for whatever reason you need to continue execution, might as well catch all exceptions
[17:54:39] <lericson> yes
[17:54:40] *** Quits: portalrat (~portalrat@user/portalrat) (Ping timeout: 252 seconds)
[17:54:43] <deniska> Give 400 to a user, write the error to the log, continue with life
[17:54:44] <lericson> which is a legitimate case
[17:54:46] <grym> with a middleware handler that reports "something has gone horrifically wrong in a worker, here's the traceback"
[17:54:53] *** portalrat_ is now known as portalrat
[17:54:54] <lericson> i see everybody apparently assumes a web context here lol
[17:54:56] *** Joins: cheater (~Username@user/cheater)
[17:55:04] <grym> (it's where i've used it)
[17:55:08] <Repiphany> But in general you should already know which exceptions you could expect and why, so that you can handle things
[17:55:14] *** Joins: Mattiaslndstrm (~Mattiasln@c188-148-207-108.bredband.tele2.se)
[17:55:17] *** Joins: streampunk (~streampun@2001:470:69fc:105::f1d1)
[17:56:00] <theprophet> ok all this makes sense
[17:56:00] *** Quits: puff (~user@S0106d4ca6d80a83c.vs.shawcable.net) (Read error: Connection reset by peer)
[17:56:06] <theprophet> thanks guys
[17:56:13] *** Joins: puff (~user@S0106d4ca6d80a83c.vs.shawcable.net)
[17:56:48] <deniska> While `except Exception` may have its place, bare `except` is just nope
[17:56:50] *** Quits: lalitmee_ (~lalitmee@180.94.33.186) (Ping timeout: 252 seconds)
[17:56:59] <lericson> yeah
[17:57:03] <lericson> should probably be a syntax error tbh
[17:57:18] *** Joins: novasharper (~novasharp@2001:470:69fc:105::b4a)
[17:58:00] *** Joins: gggp (~textual@60.10.194.45)
[17:58:11] *** Quits: raxor2k (~raxor2k@78.158.248.158) ()
[17:58:13] <theprophet> deniska even for a newbie like me bare except makes no sense tbh
[17:58:37] *** Quits: bilb_ono (~alexmarsh@ip68-6-90-72.sb.sd.cox.net) (Ping timeout: 265 seconds)
[17:58:53] *** Joins: LostInWeb (~quassel@narvi.bifroest.eu)
[17:59:46] <theprophet> back to python crash course , thanks for your effort everybody
[18:00:03] *** Joins: lalitmee_ (~lalitmee@180.94.32.27)
[18:00:50] *** Quits: elkclone (~elkclone@user/elkclone) (Quit: Leaving)
[18:01:03] *** Quits: ExeciN (~ExeciN@user/nicexe) (Remote host closed the connection)
[18:01:23] *** Joins: ExeciN (~ExeciN@user/nicexe)
[18:01:57] <lericson> in jupyter, i have this odd intermittent bug.  suppose i have two cells.  i execute cell 1, it works fine, and the busy indicator goes out.  but then very shortly after, it goes busy again - even though i didn't request execution of anything!  then when i execute cell 2, it begins waiting for this imaginary work to be finished.  very odd and very annoying.  only happens after a while it seems.
[18:02:30] *** Quits: lalitmee__ (~lalitmee@180.94.32.172) (Ping timeout: 260 seconds)
[18:02:59] *** Joins: Julian (~tos9@python/site-packages/Julian)
[18:03:38] *** Quits: Hax0r (~Hax0r@51.252.22.22) (Remote host closed the connection)
[18:03:57] <lericson> ah i cracked it.
[18:04:04] <lericson> it's because of the variable inspector plugin.
[18:04:14] <lericson> once again "helpful" features get in the way
[18:04:54] *** Quits: Mattiaslndstrm (~Mattiasln@c188-148-207-108.bredband.tele2.se) (Quit: My MacBook has gone to sleep. ZZZzzz…)
[18:05:02] <pycode> hello what is the correct way to create a bool numpy array in cython ?
[18:05:06] <pycode> i read bint
[18:05:08] <Soni> how do you rm -rf a Path?
[18:05:17] <pycode> but seems not correct
[18:05:19] <pycode> ValueError: Buffer dtype mismatch, expected 'bint' but got 'bool' <---
[18:06:18] <lericson> pycode: https://stackoverflow.com/questions/49715547/how-to-declare-numpy-bool-in-cython#49715956
[18:06:22] <grym> Soni: shutil.rmtree
[18:06:30] *** Joins: carl- (~carl-@c-138ee555.02-180-73746f39.bbcust.telenor.se)
[18:07:14] *** Quits: jpds (~jpds@gateway/tor-sasl/jpds) (Remote host closed the connection)
[18:07:39] *** Joins: jpds (~jpds@gateway/tor-sasl/jpds)
[18:08:17] *** Quits: ano (~ano@user/ano) (Quit: ano)
[18:08:32] *** Joins: ano (~ano@user/ano)
[18:08:46] <pycode> thanks
[18:09:04] *** Quits: Atque (~Atque@user/atque) (Quit: ...)
[18:09:25] *** Quits: aleks (~aleks@user/aleks) (Ping timeout: 256 seconds)
[18:10:12] *** Joins: chenxuezhao (~chenxuezh@120.244.238.36)
[18:10:47] <pycode> lericson, i get the same error: https://github.com/cython/cython/issues/3153
[18:10:51] <pycode> but i am not using anaconda
[18:11:00] <pycode> how can i add that path in setup to build the module ?
[18:11:03] *** Quits: jpds (~jpds@gateway/tor-sasl/jpds) (Remote host closed the connection)
[18:11:22] *** Quits: Julian (~tos9@python/site-packages/Julian) (Ping timeout: 260 seconds)
[18:11:25] *** Joins: jpds (~jpds@gateway/tor-sasl/jpds)
[18:11:49] *** Joins: heco (~redrum@user/redrum88)
[18:13:24] <ham5urg> I'm trying to run this leap-year regex http://paste.debian.net/1211097/ which I found here https://stackoverflow.com/a/15504877 but I get an "RecursionError: maximum recursion depth exceeded while calling a Python object" from re.py. What can I do to circumvent this?
[18:13:40] *** Joins: stealth_ (~stealth_@216-197-160-97.regn.static.sasknet.sk.ca)
[18:14:07] <lericson> pycode: idk mate this is a different question
[18:14:49] <lericson> i noticed i tend to use [lists, like, these] where i might as well use tuples just because the list syntax is more obvious
[18:15:26] <pycode> lericson, i mean during the compile
[18:16:33] *** Joins: EvilDMP (~textual@django/moderator/EvilDMP)
[18:17:02] *** Joins: legola (~legola@46.235.100.27)
[18:17:05] <stealth_> lericson, list with small amount of reference its not going to make much of a difference
[18:17:30] *** Joins: VaniaPy (~VaniaPy@adsl-117.176.58.195.tellas.gr)
[18:17:44] *** Parts: VaniaPy (~VaniaPy@adsl-117.176.58.195.tellas.gr) ()
[18:18:29] <defjam> hey i have created 2 csv files.. one temporary ..then i finally check the temporary for duplicates and write to the main csv file
[18:18:50] <defjam> but when i am writing the non duplicate entries it is just like spurious squiggles
[18:18:54] <defjam> here is the code
[18:18:57] <defjam> https://dpaste.org/oRZo
[18:19:11] *** Quits: vvdaiwrw (~rvgzuuqp@gateway/tor-sasl/rvgzuuqp) (Quit: vvdaiwrw)
[18:19:18] *** Quits: fikran (~fikran@user/fikran) (Ping timeout: 260 seconds)
[18:19:21] *** Joins: aleks (~aleks@user/aleks)
[18:19:31] *** Quits: mathsboy (~user@2001:1c02:2b25:5c00:619e:43ae:cd4d:4aed) (Quit: ERC (IRC client for Emacs 27.2))
[18:20:48] <Soni> how do you get relative paths with .. in them?
[18:21:04] *** Joins: fikran (~fikran@user/fikran)
[18:21:11] *** Quits: NeilRG (~NeilRG@192.222.196.111) (Remote host closed the connection)
[18:21:54] *** Joins: NeilRG (~NeilRG@192.222.196.111)
[18:23:05] *** Joins: ravan_ (~ravan@user/ravan)
[18:23:31] <stealth_> Soni, can you be a bit more specific? are you talking about import or actual file path?
[18:23:37] *** Joins: Julian (~tos9@python/site-packages/Julian)
[18:24:43] *** Quits: mefistofeles (~mefistofe@user/mefistofeles) (Ping timeout: 265 seconds)
[18:25:39] *** Joins: CombatVet (~c4@user/combatvet)
[18:25:42] *** Quits: ravan (~ravan@user/ravan) (Ping timeout: 265 seconds)
[18:25:50] <Soni> stealth_: if we have "refs/heads/main" or "refs/heads/feature/foo" as a base and "trees/foo" as a target we need a relative path like "../../trees/foo" or "../../../trees/foo" respectively
[18:27:02] *** Joins: System123 (~System123@ec2-52-61-197-79.us-gov-west-1.compute.amazonaws.com)
[18:27:49] *** Joins: delarge (~chamigo@ctm.linuxers.cl)
[18:28:15] *** Joins: Sheilong (uid293653@id-293653.ilkley.irccloud.com)
[18:29:18] *** Quits: Meteorhead (~Meteorhea@165.225.205.32) (Quit: Client closed)
[18:31:38] *** Quits: ravan_ (~ravan@user/ravan) (Read error: Connection reset by peer)
[18:31:39] <defjam> does anyone know why my out_file contains only garbage, when i read lines from my in csvfile which were fine
[18:31:39] <defjam> https://dpaste.org/jGmh
[18:31:39] <lericson> Soni: pathlib.Path.relative_to
[18:31:39] *** Joins: ravan_ (~ravan@user/ravan)
[18:31:47] <nedbat> defjam: i would make the csv writer just once, not once for each line.
[18:32:20] <Soni> lericson: yes that errors
[18:32:29] *** Quits: delarge (~chamigo@ctm.linuxers.cl) (Quit: leaving)
[18:32:31] *** Joins: FFY00_ (~FFY00@archlinux/trusteduser/ffy00)
[18:32:32] <lericson> i assure you it works fine
[18:32:47] *** Quits: Pickchea (~private@user/pickchea) (Quit: Leaving)
[18:32:58] *** Joins: delarge (~chamigo@ctm.linuxers.cl)
[18:33:27] <Soni> lericson: "/etc/passwd".relative_to("/usr") should be "../etc/passwd"
[18:34:37] <Repiphany> "/etc/passwd" is already an absolute path, why do you want it relative
[18:34:45] <Soni> Repiphany: symlinks
[18:34:50] <defjam> ok nedbat ill have a go at that
[18:34:58] <Repiphany> Are you trying to find a folder that has an unknown number of "../"
[18:35:10] *** Quits: FFY00 (~FFY00@archlinux/trusteduser/ffy00) (Ping timeout: 260 seconds)
[18:35:11] <lericson> Soni: i see
[18:35:14] <lericson> i did this once but i forgot the code
[18:35:15] <Soni> trying to make sure all generated symlinks are relative so they can be moved
[18:35:17] <stealth_> Soni what you probably want is https://bpa.st/P47A you can read up on it https://docs.python.org/3/library/urllib.parse.html#urllib.parse.urljoin
[18:36:22] <stealth_> Soni, rather then working with relative path, it would be better to work with real/absolute path.
[18:36:24] <pycode> how can i implement a None variable in cython ?
[18:36:25] <lericson> it's pretty easy though, you just tack on '..' until it's a parent of your target path
[18:37:03] <Soni> stealth_: no it wouldn't
[18:37:55] *** Joins: FFY00 (~FFY00@archlinux/trusteduser/ffy00)
[18:38:13] <Soni> stealth_: https://bpa.st/VKVA we think
[18:38:38] <stealth_> pycode, you mean `cython.NULL` ?
[18:38:54] *** Quits: jazzy2 (~jaziz@2600:380:865d:911b:c128:d355:1b30:8490) (Ping timeout: 260 seconds)
[18:39:02] <pycode> stealth_, i am confused, if i do variable = None
[18:39:04] <pycode> i do not get any error
[18:39:10] <pycode> so what? can i use it directly?
[18:39:20] <stealth_> pycode, yes, cython is smart like that
[18:39:25] *** Joins: hnOsmium0001 (uid453710@id-453710.stonehaven.irccloud.com)
[18:39:48] *** Quits: System123 (~System123@ec2-52-61-197-79.us-gov-west-1.compute.amazonaws.com) (Remote host closed the connection)
[18:40:03] <pycode> so basically i can mix variable and then cython will "fix" them at the compile time ?
[18:40:06] <pycode> stealth_, ^
[18:40:23] *** Joins: mcglk (~mcglk@131.191.49.120)
[18:40:25] <stealth_> pycode, you can use normal python syntax/code in cython, you just give it extra type to boost it
[18:40:40] *** Quits: FFY00_ (~FFY00@archlinux/trusteduser/ffy00) (Ping timeout: 265 seconds)
[18:40:46] <pycode> stealth_, ok last question
[18:40:47] *** Joins: Mattiaslndstrm (~Mattiasln@c188-148-207-108.bredband.tele2.se)
[18:40:48] *** Quits: theprophet (~theprophe@85.114.228.184) (Quit: Client closed)
[18:40:52] <pycode> i saw that i cannot used yield
[18:40:54] <pycode> is that correct?
[18:40:59] <pycode> can i not create generators?
[18:41:07] <lericson> likely not possibel
[18:41:09] <lericson> likely not possible
[18:41:09] *** Quits: aleks (~aleks@user/aleks) (Ping timeout: 256 seconds)
[18:41:15] *** Joins: VaniaPy (~VaniaPy@adsl-117.176.58.195.tellas.gr)
[18:41:32] <pycode> lericson, so i must append to a list and return the entire list
[18:41:44] *** Joins: NineBAR (~NineBAR@c-107-5-176-200.hsd1.mi.comcast.net)
[18:41:50] <lericson> or create an iterator yes
[18:42:08] *** Joins: mcope (~matt@user/mcope)
[18:42:22] <stealth_> lericson, what about `await` and such?
[18:42:31] <pycode> lericson, create an iterator ? wait, but the cython funciton must return the entire list then i can move inside that list with an iterator
[18:42:55] <lericson> async functions in python are generators, stealth_
[18:43:12] <lericson> pycode: no, you can create a cython class that implements the iterator protocol
[18:43:22] <lericson> if you want something generator-like
[18:43:35] *** Quits: gggp (~textual@60.10.194.45) (Ping timeout: 260 seconds)
[18:44:08] *** Quits: Julian (~tos9@python/site-packages/Julian) (Ping timeout: 252 seconds)
[18:44:09] <Soni> guess we have to write our own relativization code
[18:44:21] <lericson> Soni: like i said, it's pretty easy
[18:44:35] *** Joins: Julian (~tos9@python/site-packages/Julian)
[18:44:48] <pycode> lericson, can you give me an example? somewhere to look how to implement it?
[18:44:53] <stealth_> lericson, i am looking into learning cython myself, cython should have written some helper for those, it would be pain for everyone to write their own generator classes.
[18:45:20] <stealth_> Soni, why i said working with absolute path will be better
[18:45:35] <Soni> stealth_: it won't
[18:45:43] <lericson> stealth_: show me how to implement coroutines in C cleanly
[18:46:08] <eodks> is there a non-destructive xml parser in python?
[18:46:11] <Soni> soupault currently doesn't support symlinks but when it does, it'll error if symlinks escape the site_dir, and absolute paths escape the site_dir
[18:46:31] <lericson> pycode: https://docs.python.org/3/library/stdtypes.html#typeiter
[18:46:45] <stealth_> lericson, couldn't they have used python's coroutine C code for that? guessing
[18:46:57] <Soni> (soupault being the HTML processor we wanna use)
[18:47:01] *** Joins: gggp (~textual@60.10.23.169)
[18:47:14] *** Joins: luva (~luva@178.239.173.201)
[18:47:38] <lericson> stealth_: uh no, that's not how that works
[18:48:30] <stealth_> lericson, i see, i will have to look into it more, i am at the noob stage for cython.
[18:48:46] <lericson> i think you need to understand C and the computer as a calculating machine better
[18:49:05] <pycode> lericson, oh my wrong i can implement it with a clean python code...sorry :D i thought there were some other things to do :D
[18:49:07] <stealth_> lericson, going from python to C is a pain
[18:49:20] <Soni> stealth_: https://bpa.st/VKVA we need these to be relative so we can move the website root
[18:49:29] *** Quits: herjazz (~herjazz@p6758124-ipngn30801marunouchi.tokyo.ocn.ne.jp) (Quit: leaving)
[18:49:49] *** Joins: Pickchea (~private@user/pickchea)
[18:49:51] <lericson> stealth_: if you expect them to be similar, sure. it's a different set of design requirements
[18:51:19] <stealth_> Soni, in html its better to work with absolute path, like "/refs/heads/main/index.html" vs "../../../inde.html" <- you make more mistakes this way, hard to debug, no clue where that file it without spending more time looking into it
[18:51:38] <Soni> stealth_: these are symlinks
[18:51:52] *** Joins: gizmo_ (~gizmo@45.91.125.2)
[18:52:06] <Soni> *sigh*
[18:52:39] <lericson> >>> path.relpath('/etc/passwd', '/usr')
[18:52:39] <lericson> '../etc/passwd'
[18:52:40] <lericson> by the way
[18:52:59] <stealth_> Soni, not sure what that has to do with how you will call/use path
[18:53:16] <Soni> lericson: where is that?
[18:53:21] <lericson> Soni: os.path
[18:53:21] *** Joins: rpkilby (~rpkilby@ec2-34-252-84-235.eu-west-1.compute.amazonaws.com)
[18:53:41] *** Joins: cul8r (~cul8r@2601:8c3:4280:ae00:6d9:f5ff:fe89:5583)
[18:53:52] <lericson> honestly just very strange that they decided to enforce this subpathness
[18:54:00] *** Parts: VaniaPy (~VaniaPy@adsl-117.176.58.195.tellas.gr) ()
[18:54:20] <jinsun> Soni: os.path.relpath works for simple cases, but may do unexpected things if those pathsa re actually symlinks, see https://bugs.python.org/issue40358, it is just doing string processing not actually looking at the paths
[18:54:28] *** Joins: mefistofeles (~mefistofe@user/mefistofeles)
[18:54:37] <Soni> jinsun: ah, working as intended then
[18:55:20] <stealth_> isn't that wrong?
[18:56:05] <Soni> stealth_: no because we're working with resolved paths
[18:56:42] <stealth_> Soni, from your example above you wanted `urljoin`
[18:56:46] <pycode> hmmm
[18:57:05] <Soni> stealth_: we're trying to generate the symlinks
[18:57:09] <pycode> python implementation 7.9 seconds    cython implementation 18seconds
[18:57:14] *** Quits: Mattiaslndstrm (~Mattiasln@c188-148-207-108.bredband.tele2.se) (Quit: My MacBook has gone to sleep. ZZZzzz…)
[18:57:14] <pycode> :)
[18:57:20] <pycode> is there something wrong
[18:57:40] <lericson> pycode: do use the dynamic importer thing or
[18:57:57] <nedbat> eodks: what is a destructive xml parser?
[18:58:14] *** Joins: VaniaPy (~VaniaPy@adsl-117.176.58.195.tellas.gr)
[18:58:15] *** Joins: {HD} (~{HD}@86.106.121.200)
[18:58:42] <pycode> lericson, pardon ?
[18:58:46] <pycode> what do you exactly mean?
[18:58:48] <eodks> elementtree, it scrambles all namespaces and changes the layout
[18:59:12] <stealth_> Soni, https://bpa.st/RZPQ
[18:59:49] <Soni> stealth_: other way around but yes relpath seems correct
[18:59:49] <defjam> hey im trying to pip3 install pandas on debian and it seems to be taking some time..is this normal
[19:00:17] <cul8r> define "time"
[19:00:21] <pycode> lericson, really interesting if i use numpy array with booleans it is x3 times slower than int, how is that possible? i just check if var == the_Bool
[19:00:31] <lericson> pycode: probably copying init
[19:00:47] <lericson> hard to say without looking at the code
[19:00:49] <pycode> lericson, ?
[19:00:51] <pycode> rints = rng.integers(low=0, high=2, size=10000000)
[19:00:51] <pycode> #rints = np.random.choice(a=[False, True], size=10000000)
[19:00:53] <lericson> in general i recommend actually reading the output C code
[19:01:18] <lericson> oh
[19:01:22] <lericson> np.random.binomial
[19:01:31] <pycode> it is 6.5k lines long the .c file
[19:01:33] <defjam> 5 mintes and still not finished ..ok my machines are old but that is some package
[19:01:49] <cul8r> how is network?
[19:01:52] <pycode> lericson, how is that possible if i use the same size but bool instead of int i will get really poor performance?
[19:01:53] <Soni> okay, with pygit2... how do you get a tree object ID?
[19:02:18] <lericson> i know they're long files, but one python line is like 20-40 C lines in the cython output
[19:02:25] *** Quits: ShorTie (~ShorTie@112.sub-72-108-77.myvzw.com) (Ping timeout: 265 seconds)
[19:02:26] *** Joins: tempate (~alpha@user/tempate)
[19:02:28] <Soni> we have an old_value (commit ID), new_value (commit ID), ref_name (ref name), and we need to somehow get the new_value commit's tree object ID
[19:02:31] <pycode> lericson, https://bpa.st/IYWQ
[19:02:52] <lericson> lol yes that's going to be slow pycode
[19:02:53] *** Joins: Wuniu (~Thunderbi@user/wuniu)
[19:03:00] <stealth_> Soni, do `os.path.abspath(your_relpath)` to make sure the path is correct.
[19:03:03] <pycode> lericson, why ?
[19:03:11] <lericson> you're reallocating the list hundreds of times
[19:03:17] <lericson> for starters
[19:03:22] *** Joins: ShorTie (~ShorTie@112.sub-72-108-77.myvzw.com)
[19:03:24] <lericson> second, using lists in cython means using _actual_ python lists
[19:03:27] <tempate> Is there a more professional way to write something like: https://bpa.st/VD4A ? The basic idea is to be able to replace words without messing up the punctuation and stuff.
[19:03:30] <Soni> stealth_: meh
[19:03:31] <lericson> i think you need to read up on how cython works
[19:04:24] <cul8r> defjam: assuming your network is adequate, I'd leave it for a few, then if it still hasnt finished redo with verbose and see. pandas is kinda big if i recall
[19:04:29] *** Quits: gggp (~textual@60.10.23.169) (Ping timeout: 252 seconds)
[19:04:31] *** Joins: NoImNotNineVolt (~fdsa@c-73-248-207-98.hsd1.nj.comcast.net)
[19:04:41] <pycode> lericson, i am trying without iterator, but i do not undertsand the problem about reallocation, what do you mean? i opened <--- list? you mean that or the global list that hold the result ?
[19:04:47] <defjam> thanks cul8r
[19:04:55] <lericson> pycode: your list r grows to size 100000 or whatever
[19:05:02] <lericson> pycode: this means reallocating the list many times
[19:05:15] <pycode> lericson, yes around 3M of times :)
[19:05:20] <pycode> lericson, so what can i do?
[19:05:22] <stealth_> pycode, you are not really converting it to cython type though
[19:05:44] <pycode> i do not know how many ranges it will find
[19:05:47] <lericson> pycode: also don't store state in lists like that
[19:05:54] <defjam> ah pandas has a spinning line a bit like microsofts spinning thingy....and it just moved a bit
[19:06:15] <pycode> lericson, ok i can change that but is there a particular reason to not old state that way?
[19:06:24] *** Joins: resmo (~resmo@2a00:d420:9:8a00:3a7f:e16c:6810:72b7)
[19:06:26] <lericson> pycode: read the output C code for those lines
[19:06:33] <lericson> you will see what it translates to
[19:07:01] <pycode> hard to find
[19:07:05] <pycode> can i post the entire C ?
[19:07:21] <lericson> each line is marked by comments in the output C
[19:07:24] <Repiphany> tempate: re.split('(\w+)', text) would probably be easier to work with, just ''.join(...) it all up at the end
[19:07:24] <cul8r> should be able to get the html output
[19:07:31] <cul8r> pycode
[19:07:35] *** Joins: theprophet (~theprophe@85.114.228.184)
[19:07:42] <cul8r> then can click to expand the line
[19:08:02] <pycode> too long for bpaste
[19:08:03] <lericson> that's also a good approach
[19:08:06] <pycode> oh ok cul8r
[19:08:12] <lericson> i don't need to see the code, pycode
[19:08:12] <pycode> i will see at the html
[19:08:13] <tempate> Repiphany: hmm, but what happens with the characters that are not \w?
[19:08:27] <pycode> but i can remove those "state" and assign it to other vars but...
[19:08:31] <pycode> regarding the giant list
[19:08:34] *** Joins: Wubull (~Thunderbi@user/wuniu)
[19:08:47] <gitesh> how do you call parent class's constructor usually?
[19:08:51] <pycode> i really do not understand how to hold it...i mean..... 1. i do not know the number of ranges in advance    2. so i keep appending to list
[19:08:52] <lericson> allocate your output buffer up front, and don't use python lists for it
[19:08:58] <Repiphany> tempate: re.split('(\w+)', 'a;bc,def,gn') == ['', 'a', ';', 'bc', ',', 'def', ',', 'gn', '']
[19:09:09] <lericson> i see
[19:09:10] <gitesh> Parent.__init__() or super().__init__() ?
[19:09:13] <pycode> lericson, ok so i allocate and then if i reach that limit i expand the buffer
[19:09:16] <pycode> right ?
[19:09:17] <lericson> gitesh: super()
[19:09:28] *** Quits: Julian (~tos9@python/site-packages/Julian) (Ping timeout: 252 seconds)
[19:09:29] <lericson> pycode: if you don't know, you can use the list type
[19:09:31] <lericson> it does this better than you will
[19:09:32] *** Joins: tlaxkit (~hexchat@170.253.47.137)
[19:09:32] *** Joins: pro_z (~pro_z@37.214.61.236)
[19:09:40] *** Quits: Wuniu (~Thunderbi@user/wuniu) (Ping timeout: 265 seconds)
[19:09:41] *** Wubull is now known as Wuniu
[19:10:00] <pycode> lericson, it is a list, do you mean there is a "special" list in cython ?
[19:10:00] <gitesh> lericson: super() is one step up right ? not the origin?
[19:10:10] <lericson> gitesh: it's the thing you want, basically
[19:10:13] *** Quits: Wuniu (~Thunderbi@user/wuniu) (Client Quit)
[19:10:21] <lericson> gitesh: python has MI so it's not as easy as "one step up"
[19:10:24] *** Joins: odoood (~odoood@2601:c8:c003:a550::3)
[19:10:50] <gitesh> lericson: what is MI?
[19:10:55] <grym> it's one step up alright... it's just up the mro
[19:10:55] <lericson> multiple inheritance
[19:11:01] <grym> so it's potentially not what you think
[19:11:06] <gitesh> oh
[19:11:47] <cul8r> would using a numpy array be worth it vs normal list?
[19:11:47] <grym> gitesh: put another way, the problem with Parent.__init__() is that you're potentially unable to know / wrong about waht Parent is, so you can't type it
[19:11:56] <grym> cul8r: to do what
[19:12:06] <cul8r> for pycodes problem
[19:12:07] *** Joins: aleks (~aleks@user/aleks)
[19:12:16] <lericson> it might, cul8r
[19:12:24] <gitesh> grym: oh
[19:12:52] <grym> gitesh: so you tell super() to figure it out for you
[19:12:56] <gitesh> is super() a funciton?
[19:13:02] <gitesh> grym: that's good
[19:14:02] *** Joins: magla (~gelignite@55d42fe3.access.ecotel.net)
[19:14:09] <tempate> Repiphany: the problem with doing something like ''.join(f(word) for word in re.split('(\w+)', text)) is that f flips out when word is not a word and is empty or a space or something like that
[19:14:29] <pycode> lericson, cul8r i see everything yellow :D
[19:14:56] *** Joins: waynew (~wayne@user/waynew)
[19:15:11] <Repiphany> You don't have to do everything in one line
[19:15:31] *** Quits: GenTooMan (~cyberman@2601:547:437f:e5c6:21f:5bff:fefe:a883) (Ping timeout: 252 seconds)
[19:15:39] *** Joins: bilb_ono (~alexmarsh@ip68-6-90-72.sb.sd.cox.net)
[19:15:55] <tempate> Repiphany: but do I have to use another regex? or is there a way to check if the current word matched \w?
[19:16:10] <stealth_> pycode, https://cython.readthedocs.io/en/latest/src/userguide/numpy_tutorial.html
[19:16:10] *** Quits: gizmo_ (~gizmo@45.91.125.2) (Read error: Connection reset by peer)
[19:16:44] *** Joins: xavie1 (~xavie@176-139-252-198.abo.bbox.fr)
[19:16:50] *** Quits: heco (~redrum@user/redrum88) (Quit: Going offline, see ya! (www.adiirc.com))
[19:16:52] *** xavie1 is now known as xcombelle
[19:16:52] <Repiphany> You could presumably change f to just return the input string if it doesn't need to be corrected or whatever
[19:17:23] *** Joins: heco (~redrum@user/redrum88)
[19:18:01] <Repiphany> or f(word) if re.match('\w+') else word
[19:18:19] *** Joins: Xaldafax (~xaldafax@cpe-198-72-160-101.socal.res.rr.com)
[19:18:21] <grym> gitesh: it's a callable, anyway
[19:18:28] *** Joins: Julian (~tos9@python/site-packages/Julian)
[19:19:05] <stealth_> lericson, looks like you can use `@cython.iterable_coroutine` for `await`
[19:19:20] *** Joins: GenTooMan (~cyberman@c-73-214-106-63.hsd1.pa.comcast.net)
[19:19:50] <lericson> really
[19:20:22] <lericson> i guess it's possibel
[19:20:23] <lericson> i guess it's possible
[19:20:31] <lericson> just.... very complicated
[19:20:36] <gitesh> what does super() do?
[19:21:01] <pycode> stealth_, interesting
[19:21:18] <pycode> i read that i also need to implement Py_ssize_t for the loop index!
[19:21:39] <stealth_> lericson, lericson, ya, then you can just use `await whatever` normally, cython is written brilliantly!
[19:21:53] *** Joins: gizmo_ (~gizmo@45.91.125.2)
[19:21:54] <stealth_> pycode, there must be a wrapper like that `yield` as well.
[19:22:00] <tempate> Repiphany: https://bpa.st/3NRQ
[19:22:01] <lericson> uh
[19:22:02] <lericson> no
[19:22:09] <lericson> that does the opposite thing
[19:22:12] <tempate> Repiphany: that version is working and looks way better than the previous one
[19:22:29] <lericson> according to release notes of 0.15:
[19:22:29] <lericson> Generators (yield) - Cython has full support for generators, generator expressions and PEP 342 coroutines.
[19:23:00] <Repiphany> Sure
[19:23:00] *** Quits: mohabaks (~mohabaks@gateway/tor-sasl/mohabaks) (Ping timeout: 276 seconds)
[19:23:04] *** Quits: mIk3_08 (~Thunderbi@user/mik3-08/x-2852566) (Quit: mIk3_08)
[19:23:17] <pycode> so we can use generators lericson ?
[19:23:32] <Repiphany> If your text is very long, it might not be the best idea to make the string by repeatedly +=
[19:23:41] <lericson> yes pycode
[19:23:44] *** Quits: twobitsprite (~twobitspr@195.181.171.248) (Ping timeout: 252 seconds)
[19:24:01] <lericson> it inserts some type of state machine into the generated code
[19:24:13] <tempate> Repiphany: how should I do it if not with += ?
[19:24:19] *** Quits: Pickchea (~private@user/pickchea) (Ping timeout: 252 seconds)
[19:24:38] *** Quits: Julian (~tos9@python/site-packages/Julian) (Ping timeout: 260 seconds)
[19:24:43] *** Joins: djapo (~archangel@user/djapo)
[19:24:50] <stealth_> pycode, which version of cython are you using?
[19:25:29] *** Joins: twobitsprite (~twobitspr@195.181.171.244)
[19:25:41] <Samian> tracebar for the win.   That multiline alternative containing sys.exc_info() and such spread like wildfire from a stackoverflow post
[19:25:56] <Samian> whoops wrong chan.
[19:25:56] *** Quits: GenTooMan (~cyberman@c-73-214-106-63.hsd1.pa.comcast.net) (Ping timeout: 252 seconds)
[19:26:09] <Repiphany> tempate: Modifying the list in-place https://bpa.st/PREQ
[19:26:16] <eodks> stackoverflow: The only way to preserve the namespace prefix with ElementTree is by using register_namespace()
[19:26:29] *** Quits: chenxuezhao (~chenxuezh@120.244.238.36) (Ping timeout: 252 seconds)
[19:26:39] <eodks> that's so stupid
[19:26:39] <pycode> stealth_, Cython version 0.29.24
[19:27:43] <Samian> Anyone recommend any books or online resources that will help me know how python code runs as cpp under the hood?  I try to visualize my python code in its cpp implementation when crafting high quality code
[19:27:49] *** Joins: jjasghar (~quassel@user/jjasghar)
[19:27:50] <stealth_> pycode, i see, if you are going to publish your software say in the next 6months, cython3 might be a better choice
[19:28:19] <Samian> It can't be high quality code without the code translating to highly efficient c/cpp code
[19:28:25] *** Joins: jazzy2 (~jaziz@2600:380:865d:911b:c128:d355:1b30:8490)
[19:29:07] <Repiphany> Readability tends to be much more valuable than blindly going for efficiency
[19:29:22] <stealth_> Samian, python uses C not CPP
[19:29:36] <pycode> stealth_, so it will has generators and other cool stuff ?
[19:29:40] <tempate> Repiphany: I'm going to go with re.sub finally: re.sub('\w+', lambda m: f(m.group()), text)
[19:29:52] <pycode> stealth_, is there a book that start from zero to....hero for cython? :D
[19:30:02] *** Quits: deniska (~denis@user/deniska) (Quit: leaving)
[19:30:25] <stealth_> pycode, think it already has those. cython is going to be ALOT of tweaking and such, so you better be ready for that.
[19:30:27] *** Joins: deniska (~denis@user/deniska)
[19:30:57] <stealth_> pycode, i am just reading their docs and such
[19:31:20] <lericson> i think in order to use Cython effectively, you must understand the Python C API and C in general
[19:31:36] <Samian> But I struggle when it comes to whether certain python calls are blocking or nonblocking. This is important when I'm using python to control multiple GPUs. Consider the loop:  a = [] for i in range(0,10): a.append(gpu[i].run()).  If that's blocking, it will be 10 times slower than if that's nonblocking.
[19:31:55] <pycode> ok
[19:31:55] <Repiphany> Huh, I didn't even know re.sub could take a function for replacement. Yeah, that's probably the cleanest way
[19:32:18] <lericson> Samian: most GPU libraries perform asynchronous execution behind the scenes anyway
[19:32:23] <lericson> CUDA, most notably
[19:33:01] *** Quits: ExeciN (~ExeciN@user/nicexe) (Remote host closed the connection)
[19:33:26] <Samian> lericson  true, but I'm not certain how that works on the python side. how would a.append(gpu[i].run()) work if gpu[i].run() was nonblocking?
[19:33:29] *** Quits: ole_ (~ole_@84.46.68.3) (Quit: Connection closed)
[19:33:34] <lericson> Samian: for a more general solution for waiting for many tasks, python's async stuff deals with that
[19:33:39] <Samian> a value must be appended... If a value isn't returned yet, what is appended?
[19:33:45] *** Quits: NeilRG (~NeilRG@192.222.196.111) (Remote host closed the connection)
[19:33:55] <stealth_> Samian, hmm append? well that linear, when something "blocks" you would `await`
[19:33:58] *** Quits: luva (~luva@178.239.173.201) (Ping timeout: 260 seconds)
[19:33:59] *** Joins: Julian (~tos9@python/site-packages/Julian)
[19:34:03] <Samian> maybe a dummy value is appended, and when the GPU computes the result, the result replaced the dummy?
[19:34:06] <tempate> the great Samian!
[19:34:14] <defjam> cant believe how difficult it is to just get rid of duplicates in a csv file
[19:34:28] <defjam> https://bpa.st/66IA
[19:34:39] <defjam> still putting garbage in the new csv file
[19:34:52] *** Joins: ExeciN (~ExeciN@user/nicexe)
[19:35:04] <gitesh> I want to know the usage of super()
[19:35:06] <lericson> defjam: what about sort -u
[19:35:18] <Yhg1s> defjam: can you show the input and the output?
[19:35:23] *** Quits: ExeciN (~ExeciN@user/nicexe) (Remote host closed the connection)
[19:35:29] <defjam> yes i have to rerun it
[19:35:32] <Yhg1s> gitesh: the usage of super() is to call the method that would have been called if the current class hadn't defined it.
[19:35:45] <jabberwock> gitesh, at the python shell, type help(super)
[19:36:00] <Samian> stealth_  are you saying I use asyncio ?
[19:36:06] <jabberwock> n/m that doesn't show examples.
[19:36:14] <Samian> tempate  what's up? Chess master right?
[19:36:18] *** Quits: otisolsen70 (~otisolsen@xd4ed80b5.cust.hiper.dk) (Ping timeout: 260 seconds)
[19:36:20] <jabberwock> "super" needs better docs
[19:36:53] <stealth_> Samian, any library that supports `async/await` or you are using callback way.
[19:36:58] <jinsun> defjam: that sep doesn't look right, does "\t or ," actually work? why does your csv have both separators anyway?
[19:37:05] <Yhg1s> There's really not that much to document about super().
[19:37:13] <tempate> Samian: correct. I'm working on a SpellingCorrector :)
[19:37:13] *** Joins: Mattiaslndstrm (~Mattiasln@c188-148-207-108.bredband.tele2.se)
[19:37:27] <defjam> jinsun should i just use \t
[19:37:42] <Samian> stealth_  if you could show me how do that multi-gpu loop for me, I'd super appreciate it.   I have 12 years of experience coding in CUDA cpp.  It's controlling cuda via python that I have much less experience in.
[19:37:44] *** Joins: Adoi (~Adoi@user/adoi)
[19:38:12] <Yhg1s> defjam: it's really hard to tell without sample input and output.
[19:38:17] <stealth_> Samian, what python library are you using?
[19:38:23] <Samian> pytorch
[19:38:24] <jinsun> defjam: the normal thing would be to use just "\t" or just "," not both, depends on your csv file
[19:38:24] <gitesh> Yhg1s: oh, i liked that
[19:38:45] *** Joins: RangerBobVA (~bmaddox@user/rangerbobva)
[19:38:53] <defjam> my input file has csv and then i assume each row ends with a \t
[19:39:08] <Yhg1s> defjam: each _row_? That's fairly uncommon.
[19:39:13] <lericson> Samian: pytorch will force CUDA to execute the code when you copy the data back to the host device
[19:39:15] <Yhg1s> defjam: please, just show us the input file.
[19:39:20] <defjam> ill chnge things a little ..but i have just looked at my input file and it is also corrupt
[19:39:22] <lericson> Samian: as you well know that CUDA itself does
[19:39:24] <Yhg1s> defjam: and the output file you say has garbage in it.
[19:39:26] <defjam> i must have damaged the code somewhere
[19:39:34] <defjam> ill just check through it
[19:39:41] <defjam> and rerun it and show you the files
[19:39:55] <Samian> lericson  I just don't know for sure what's blocking and what's not. I wish there was a quick way to know.
[19:40:00] <Samian> like if the debugger could tell me
[19:40:18] <lericson> Samian: that'd be nice
[19:40:26] *** Quits: VaniaPy (~VaniaPy@adsl-117.176.58.195.tellas.gr) (Quit: Connection closed)
[19:40:31] <lericson> gpus are pretty inscrutable in general
[19:40:51] <lericson> most of us just look at the % usage and aim for a high percentage
[19:40:58] <pycode> keep optimizing... wow 16 code: ~8secs  first versions in cython 18secs, now 1.6secs :)
[19:41:01] *** Quits: Mattiaslndstrm (~Mattiasln@c188-148-207-108.bredband.tele2.se) (Client Quit)
[19:41:07] <pycode> awesome
[19:41:12] <stealth_> Samian, pytorch sure is asynchronous but it looks like they use the callback way, its ok!
[19:43:41] *** Quits: Ninpo (~Ninpo@leviathan.qap.la) (Changing host)
[19:43:41] *** Joins: Ninpo (~Ninpo@user/ninpo)
[19:43:41] <pycode> now i just see yellow on that ugly list.append()
[19:43:42] <lericson> pycode: i tended to use C++'s STL types for this stuff
[19:43:42] <lericson> like std::vector etc
[19:43:42] <lericson> this also allows your app to release the GIL by the nogil keyword
[19:43:42] <stealth_> pycode, more yellow it is means its fater then being at C level, so you have room to improve it
[19:43:42] <stealth_> *further
[19:43:42] <pycode> stealth_, yes exactly, not i see less yellow linea
[19:43:42] *** Quits: axisys (~axisys@ec2-34-225-151-46.compute-1.amazonaws.com) (Quit: Lost terminal)
[19:43:42] <pycode> wait lericson can i use c++ there? you said vector)
[19:43:42] *** Quits: Andrew (~andrew@user/andrewyu) (Ping timeout: 250 seconds)
[19:43:57] <lericson> pycode: you can use C++ yes
[19:44:25] *** Joins: AndrewYu (~andrew@user/andrewyu)
[19:44:51] <pycode> oh
[19:45:24] *** Joins: bfoley (~bfoley@pool-173-48-101-113.bstnma.fios.verizon.net)
[19:45:25] *** Joins: axisys (~axisys@ec2-34-225-151-46.compute-1.amazonaws.com)
[19:45:33] *** Joins: jdwidari (~jdwidari@2001:420:c0c4:1009::10)
[19:45:33] <stealth_> i don't see why you would use cython if you can write it in c/c++ already! isn't the whole point for it to be used by python?
[19:45:56] *** Quits: puff (~user@S0106d4ca6d80a83c.vs.shawcable.net) (Read error: Connection reset by peer)
[19:46:09] *** Joins: puff (~user@S0106d4ca6d80a83c.vs.shawcable.net)
[19:47:06] <eodks> usually, people use python to avoid libraries, headers, compilers and makefile junk
[19:47:20] <lericson> https://github.com/lericson/fragmenot/blob/master/src/tree_search.pyx
[19:47:22] *** Quits: Julian (~tos9@python/site-packages/Julian) (Ping timeout: 265 seconds)
[19:47:29] <lericson> here's an example of how i used cython
[19:47:33] <lericson> with C++ container types
[19:47:52] <lericson> note though that i needed some things that weren't in the normal cython definitions
[19:47:53] <pycode> stealth_, yes sure
[19:47:55] <lericson> https://github.com/lericson/fragmenot/blob/master/src/tree_search.pxd
[19:47:57] <pycode> i need to use it in python
[19:48:23] *** Joins: GenTooMan (~cyberman@2601:547:437f:e5c6:21f:5bff:fefe:a883)
[19:48:37] <lericson> also note the general pattern of converting python objects to STL types, working with them for a while, then converting them back to python
[19:48:38] *** Joins: zmt00 (~zmt00@user/zmt00)
[19:49:27] <axisys> how do I make a list of dictionary into a dataframe? pd.DataFrame({'A': 1.36, 'B': 2.45}) gives
[19:49:30] <axisys> ValueError: If using all scalar values, you must pass an index
[19:49:43] <axisys> I am not really following the error
[19:50:07] *** Joins: Blackpajamas (~Blackpaja@24-246-42-203.cable.teksavvy.com)
[19:50:15] <axisys> I do not know what it means by pass an index!
[19:50:22] <grym> axisys: that's just one dict
[19:50:42] <grym> pd.DataFrame([dict(), dict(), ...]) ought to work
[19:50:43] <pycode> stealth_, however removing the list i can use the yield too
[19:51:09] *** Quits: dvx (~dvx@185.63.97.64) (Remote host closed the connection)
[19:51:14] <grym> axisys: https://bpa.st/XBCQ
[19:51:16] <stealth_> Samian, https://unixism.net/loti/async_intro.html#why-asynchronous-programming
[19:51:54] <pycode> stealth_, 0.7 secs!!!
[19:51:55] <pycode> wow
[19:52:08] *** Joins: Hax0r (~Hax0r@87.101.169.254)
[19:52:24] <pycode> thats the code: https://bpa.st/LPOA
[19:52:36] *** Joins: Julian (~tos9@python/site-packages/Julian)
[19:52:45] <stealth_> pycode, i would use the yield myself, also you are mixing np with cython, though maybe ppl do this, it might be better to go directly with cython if you can.
[19:52:45] <axisys> grym: I parsed out r.json() to get that dict .. I see a solution to add index=[0] to it, which works.. but your one seems more parsing first
[19:52:53] *** Quits: ham5urg (~ham5urg@p5ddfcd25.dip0.t-ipconnect.de) (Ping timeout: 252 seconds)
[19:52:54] *** Joins: Guddu (~Guddu@190.84.88.92)
[19:53:01] <grym> axisys: not really, no
[19:53:02] <stealth_> pycode, ya, now you are starting to type def it :)
[19:53:03] <axisys> but I still not follow what "pass an index" means
[19:53:12] <pycode> stealth_, yes :)
[19:53:12] <lericson> pycode: probably should do values[i, 0] instead of values[i][0]
[19:53:28] <grym> axisys: you could just as well pd.DataFrame([{"A":1.36, "B":2.45}])
[19:53:31] <pycode> try
[19:53:32] <lericson> and by probably i mean definitely
[19:53:57] *** Quits: c10l (~c10l@89.34.167.207) (Changing host)
[19:53:57] *** Joins: c10l (~c10l@user/c10l)
[19:54:02] <lericson> also you may want to put a const on the values argument so the compiler knows it won't change
[19:54:04] <pycode> stealth_, i am importing numpy but i do not know where it takes acation
[19:54:07] <pycode> lericson, i am changing it
[19:54:26] *** Joins: kickingvegas (~cchoi@c-24-5-40-20.hsd1.ca.comcast.net)
[19:54:29] <pycode> lericson, where? on func params?
[19:54:32] <lericson> yes
[19:54:37] <axisys> grym: that worked perfect.. so dataframe only takes list? I guess need to read their doc again *sigh*
[19:54:45] <lericson> pycode: here's a similarly tight loop in my code https://github.com/lericson/fragmenot/blob/master/src/tree_search.pyx#L57
[19:54:46] <stealth_> pycode, doesn't look like you are using it
[19:54:47] *** Joins: Pickchea (~private@user/pickchea)
[19:54:49] <grym> axisys: its constructor takes many things
[19:54:52] <grym> it's a bit confusing
[19:55:08] <axisys> grym: can't agree more, lol
[19:55:27] <grym> pandas trades coherency for coverage :D
[19:55:38] <grym> it does everything, one way or 12 others
[19:55:41] <lericson> pycode: the ::1 you see in the declaration simply means the array has to be contiguous in that dimension
[19:55:53] <lericson> which helps cache locality
[19:55:56] <jinsun> axisys: it can take a single dict but then the values have to be list or array or something 1D like that, not a single scalar value
[19:56:02] <pycode> lericson, wait is this a numpy things or not?
[19:56:18] <lericson> it uses memory views, like your code does
[19:56:30] *** Joins: dakotakae (~dakotakae@2601:680:cb80:a6d0:8f78:cde0:7cc5:2fc2)
[19:56:32] <stealth_> pycode, according to your code, you are not even using np
[19:56:34] *** Quits: zln (~zln@c80-217-230-193.bredband.tele2.se) (Ping timeout: 265 seconds)
[19:56:49] <pycode> stealth_, i am going to remove the import
[19:56:55] *** Joins: nomic (~nomic@2a00:23c6:9902:2401:5924:599b:3dc1:d263)
[19:56:58] <dakotakae> Hey all! Anyone know how I can parse ls-like output (with recursion into all subdirs) into a dict?
[19:57:25] <dakotakae> Unfortunately I cannot use os.walk() as it's not actually ls running, just something that returns similar to ls
[19:57:39] <pycode> lericson, wait are there two things i suppose no? you said... 1. const    2. continuos in memory
[19:57:41] *** Quits: NineBAR (~NineBAR@c-107-5-176-200.hsd1.mi.comcast.net) (Quit: Leaving)
[19:57:46] <lericson> yes
[19:57:48] *** Joins: NeilRG (~NeilRG@192.222.196.111)
[19:57:50] <stealth_> dakotakae, `glob.glob`
[19:57:54] <axisys> jinsun: ok but it works if I feed it as a list like [{'A':1,'B':2}] and here those values are scalar, no?
[19:57:57] *** Parts: tempate (~alpha@user/tempate) ()
[19:57:59] <lericson> contiguous memory is a separate thing, not likely a problem for you
[19:58:15] <defjam> hey guys i just noticed something when opening my csv files that contain garbage
[19:58:18] <axisys> jinsun: (sorry I am trying to understand)
[19:58:21] <jinsun_> axisys: yeah but that is a list of dict, not a dict
[19:58:24] <defjam> they were somehow set to utf-16
[19:58:32] <defjam> omg what a total waste of a day
[19:58:35] <pycode> can i not declare ::1 ?
[19:58:51] <defjam> should have been set to utf-8
[19:58:56] *** Quits: withered_wolf (~withered_@1437135-v103.1561-static.stchilaa.metronetinc.net) (Ping timeout: 252 seconds)
[19:58:59] <defjam> in libraoffice
[19:59:04] <axisys> jinsun_: ok but here I have two dicts or one? {'A':1,'B':2} ?
[19:59:30] <pycode> lericson, where can i set it as const ?
[19:59:36] <lericson> same place as i did
[19:59:44] <pycode> yes i will not change values, just read
[19:59:50] <jinsun_> axisys: so you have to give a list of dict of scalars, or a dict of list/array like
[20:00:05] <pycode> oh pardon, right
[20:00:31] *** Quits: atrigent (~atrigent@c-73-69-68-26.hsd1.ma.comcast.net) (Read error: Connection reset by peer)
[20:00:48] <dakotakae> stealth the issue is that the files are not actually part of the filesystem, either.
[20:01:02] <jinsun_> axisys: that is one dict, with scalar values
[20:01:02] <dakotakae> It's fetching file listings from the Keybase filesystem
[20:01:10] <pycode> lericson, is bint correct for boolean right ?=
[20:01:28] <lericson> pycode: i used unsigned char
[20:01:29] *** Joins: atrigent (~atrigent@c-73-69-68-26.hsd1.ma.comcast.net)
[20:01:37] <dakotakae> So it's kind of remote, but not actually mounted anywhere
[20:02:12] <lericson>         unsigned char [:, ::1] Seen = np.empty((N + steps, F), dtype=np.bool)
[20:02:15] *** Joins: Wuniu (~Thunderbi@user/wuniu)
[20:02:28] <pycode> lericson, is there a particular difference?
[20:02:29] *** Joins: chenxuezhao (~chenxuezh@120.244.238.36)
[20:02:32] *** Quits: Hax0r (~Hax0r@87.101.169.254) (Quit: Leaving)
[20:02:44] <lericson> pycode: I ran into some issue with bint and bool iirc
[20:02:44] <pycode> not for array just for my   bint return_running_trade=False
[20:03:13] <lericson> crucially, the storage type of the numpy array does not have to be the same as the type of the memory view
[20:03:21] <lericson> they just have to be compatible
[20:03:28] <lericson> so uchar ≈ np.bool
[20:03:49] <lericson> anyway, i'm off, good luck
[20:04:56] <pycode> lericson, thanks!
[20:05:20] *** Quits: aleks (~aleks@user/aleks) (Quit: Client closed)
[20:05:21] <pycode> however 0.7secs is an hugeee improvement
[20:05:33] *** Joins: aleks (~aleks@user/aleks)
[20:06:01] *** Quits: Blackpajamas (~Blackpaja@24-246-42-203.cable.teksavvy.com) (Quit: Blackpajamas)
[20:07:11] *** Quits: chenxuezhao (~chenxuezh@120.244.238.36) (Ping timeout: 265 seconds)
[20:10:05] *** Quits: Julian (~tos9@python/site-packages/Julian) (Ping timeout: 265 seconds)
[20:10:44] *** Quits: chele (~chele@user/chele) (Remote host closed the connection)
[20:10:59] *** Joins: FluffyMask (~masque@user/fluffymask)
[20:11:07] <dakotakae> Here's the code so far:https://pastebin.com/Tb2DLeZe
[20:11:32] *** Quits: Pickchea (~private@user/pickchea) (Ping timeout: 265 seconds)
[20:11:51] *** Quits: portalrat (~portalrat@user/portalrat) (Remote host closed the connection)
[20:12:10] *** Joins: portalrat (~portalrat@user/portalrat)
[20:12:17] *** Quits: pycode (~pycode@2001:b07:5d28:551:d455:47c4:8ac6:8f93) (Remote host closed the connection)
[20:12:20] *** Joins: VaniaPy (~VaniaPy@adsl-117.176.58.195.tellas.gr)
[20:12:28] <dakotakae> And an example of it in action: https://pastebin.com/i6yje32e
[20:12:29] *** Joins: pycode (~pycode@2001:b07:5d28:551:ad07:4c3f:f9ee:4534)
[20:15:21] *** Joins: Seiryuu (~Seiryuu@ip174-103-176-143.adsl2.static.versatel.nl)
[20:15:38] *** Joins: System123 (~System123@2c0f:f4c0:2202:6b94:9580:2b3e:eee5:e946)
[20:15:58] *** Quits: jazzy2 (~jaziz@2600:380:865d:911b:c128:d355:1b30:8490) (Ping timeout: 260 seconds)
[20:16:19] *** Joins: Julian (~tos9@python/site-packages/Julian)
[20:16:55] *** Quits: DnzAtWrk (~DnzAtWrk@mobile-access-5673bf-42.dhcp.inet.fi) (Ping timeout: 260 seconds)
[20:17:19] *** Joins: Hokedli (~lasliedv@gateway/tor-sasl/hokedli)
[20:17:26] <Soni> what is open('x') and is that the proper way to atomically check if a file exists and open it for writing if it doesn't?
[20:17:36] *** Quits: Wuniu (~Thunderbi@user/wuniu) (Remote host closed the connection)
[20:18:53] *** Joins: Blackpajamas (~Blackpaja@24-246-42-203.cable.teksavvy.com)
[20:19:30] <stealth_> Soni, "x" will create a file and you can write to it. if file alredy exist it will raise error
[20:19:38] <Soni> and it's atomic?
[20:19:38] <grym> Soni: open(os.Pathlike, 'w'), perhaps https://docs.python.org/3/library/functions.html#open
[20:19:57] *** Joins: Hax0r (~Hax0r@87.101.169.254)
[20:20:01] <grym> w truncates, use 'a' for append
[20:20:02] <Soni> does it have TOCTOU issues?
[20:20:25] <grym> ¯\_(ツ)_/¯
[20:20:46] *** Quits: Blackpajamas (~Blackpaja@24-246-42-203.cable.teksavvy.com) (Client Quit)
[20:20:58] <Soni> lol okay
[20:21:07] <grym> i've never knowingly been burned, anyway
[20:21:13] <stealth_> it will raise error if file already exists! so ...
[20:21:15] *** Joins: chenxuezhao (~chenxuezh@120.244.238.36)
[20:21:29] *** Quits: bilb_ono (~alexmarsh@ip68-6-90-72.sb.sd.cox.net) (Ping timeout: 252 seconds)
[20:21:57] <grym> stealth_: with 'X', yes
[20:22:01] <grym> otherwise, i don't think so..
[20:22:08] <stealth_> ya talking about x
[20:22:09] <axisys> jinsun_, grym: thank you guys for your help!
[20:22:46] <grym> np
[20:24:23] <jinsun> Soni: there is this https://pypi.org/project/atomicwrites/
[20:24:41] *** Joins: cdown_ (~cdown@163.114.131.1)
[20:25:46] *** Quits: chenxuezhao (~chenxuezh@120.244.238.36) (Ping timeout: 260 seconds)
[20:25:48] *** Joins: DnzAtWrk (~DnzAtWrk@mobile-access-5673bf-42.dhcp.inet.fi)
[20:25:55] <Soni> hmm
[20:25:59] *** Quits: lesshaste (~lesshaste@82-69-126-43.dsl.in-addr.zen.co.uk) (Read error: Connection reset by peer)
[20:26:07] <stealth_> seriously! lol
[20:26:26] <Soni> `while [list]:` is supposed to break when the list runs empty yeah?
[20:26:26] *** Quits: Adoi (~Adoi@user/adoi) (Ping timeout: 252 seconds)
[20:26:33] *** Joins: Sky_Net (~Sky_Net@176.14.213.85)
[20:26:41] <grym> Soni: erk
[20:27:03] <Soni> ah nvm we see what we did wrong
[20:27:06] <deniska> Soni: if it's literally `while [some_list]:` it will never break
[20:27:13] *** Joins: amahl (~amahl@dsl-jklbng12-54fbca-64.dhcp.inet.fi)
[20:27:29] *** Quits: cdown (~cdown@89.32.122.5) (Ping timeout: 265 seconds)
[20:27:34] *** cdown_ is now known as cdown
[20:27:34] *** Quits: Julian (~tos9@python/site-packages/Julian) (Ping timeout: 252 seconds)
[20:27:54] <stealth_> Soni, where do you get their code ideas from? or are you are tester or some kind?
[20:28:03] <Soni> we wrote "while other_list: pass" thinking that would do nothing and... well, it did nothing, just the wrong kind of nothing XD
[20:28:05] <stealth_> get these*
[20:28:15] *** Joins: nomic2 (~nomic@185.192.69.176)
[20:28:27] *** Quits: fikran (~fikran@user/fikran) (Ping timeout: 265 seconds)
[20:28:28] <Soni> "#" works a lot better than "pass" tbh
[20:28:45] <Soni> (for WIP code)
[20:28:52] *** Parts: VaniaPy (~VaniaPy@adsl-117.176.58.195.tellas.gr) ()
[20:28:53] <stealth_> Soni, you mean `while len(some_list):` ?
[20:29:05] <deniska> ... is syntactically correct to use instead of pass
[20:29:08] <Soni> stealth_: `while some_list:`
[20:29:26] <Soni> why len()
[20:29:42] <stealth_> Soni, as deniska just mentioned that will always be True!
[20:30:20] <Soni> stealth_: `while []:` will always be False... no?
[20:30:27] *** Joins: fikran (~fikran@user/fikran)
[20:30:36] *** Quits: djhankb (~djhankb@208.113.164.68) (Read error: Connection reset by peer)
[20:30:55] *** Quits: nomic (~nomic@2a00:23c6:9902:2401:5924:599b:3dc1:d263) (Ping timeout: 260 seconds)
[20:30:58] <jinsun> `some_list` can be falsy, `[some_list]` will be truthy always
[20:31:07] *** Joins: djhankb (~djhankb@208.113.164.68)
[20:31:10] *** nomic2 is now known as nomic
[20:32:30] <Soni> see, this is starting to look pretty nice https://bpa.st/UCFQ
[20:32:52] <stealth_> Soni, we taking about your `while [list]:` code
[20:33:05] *** Quits: mozgalom (~mozgalom@IPnet-gw.157.157.97.111.simnet.is) (Quit: My MacBook has gone to sleep. ZZZzzz…)
[20:33:48] <pycode> stealth_, i am doing some stupid tests, very....stupid tests https://bpa.st/MPVA
[20:34:02] <pycode> do you think is ok that a loop of 10M takes 0.6 secs?
[20:34:12] <pycode> a loop and an assign
[20:34:19] <Soni> stealth_: because writing `while list:` is confusing (list is a builtin) and `while [something]` is also confusing ([] makes a list), we figured `while [list]:` would be... less confusing because it generally makes no sense to put the builtin list in a list
[20:34:40] <Soni> but yes, `some_list` is a better... way to talk about it we guess
[20:34:47] *** Quits: System123 (~System123@2c0f:f4c0:2202:6b94:9580:2b3e:eee5:e946) (Remote host closed the connection)
[20:34:58] *** Joins: txtsd (~txtsd@user/txtsd)
[20:35:58] <Soni> anyway this is exciting https://bpa.st/UCFQ
[20:36:44] <stealth_> pycode, i can't test it, but seems slow
[20:37:12] <pycode> real    0m0,237s
[20:37:12] <pycode> user    0m0,418s
[20:37:12] <pycode> sys     0m0,621s
[20:37:14] <axisys> df = pd.DataFrame([..])  df.round(2)  is there a better way to display 2.1342 to 2.13 ?
[20:37:20] *** Joins: Payam (~Payam@138.106.57.131)
[20:37:23] <pycode> i removed other stupid things...but yes seems slow
[20:38:10] *** Quits: DnzAtWrk (~DnzAtWrk@mobile-access-5673bf-42.dhcp.inet.fi) (Read error: Connection reset by peer)
[20:38:19] *** Joins: nwoehler (~nwoehler@p200300c4bf353a00d0933f8764bd89a5.dip0.t-ipconnect.de)
[20:38:23] <axisys> got it.. add .round(2) on initial assignment works too
[20:39:00] <stealth_> Soni, https://bpa.st/JMQQ
[20:39:37] <jinsun> axisys: do that only if you don't want to do any calculations with the data, otherwise you just reduced the precision a lot
[20:39:43] <stealth_> Soni, even though `my_list` is empty, `a` is true, thus the `while [anything]:` will be true!
[20:39:48] *** Quits: PaddyF (~PaddyF@user/paddyf) (Quit: bye)
[20:40:07] <nwoehler> Hi, can I post a call for participants in an interview study on open source projects here? If any mod wants more details via DM first, then I'm happy to oblige
[20:40:45] <pycode> is there a way to check it better?
[20:40:49] <pycode> stealth_, ^
[20:41:36] *** Joins: vvdaiwrw (~rvgzuuqp@gateway/tor-sasl/rvgzuuqp)
[20:41:38] *** Joins: PaddyF (~PaddyF@user/paddyf)
[20:43:02] <stealth_> pycode, maybe `x = i` is creating new copies! python has gc and will reuse that same memory space, not sure what cython does.
[20:44:04] <Soni> stealth_: obviously we're doing `while some_list: c = some_list.pop()`, aside from that one mistake with the `pass` vs actually commenting out the `while`
[20:44:27] <eodks> can you recommend a lightweight python ide with autocompletion?
[20:45:17] <stealth_> eodks, https://www.sublimetext.com/ is good
[20:45:39] <jinsun> eodks: does vscode count as lightweight?
[20:46:11] *** Joins: imakestuff (~imakestuf@197.156.95.154)
[20:46:12] *** Quits: nwoehler (~nwoehler@p200300c4bf353a00d0933f8764bd89a5.dip0.t-ipconnect.de) (Quit: Client closed)
[20:46:52] <pycode> stealth_, it declare an int and assign
[20:46:52] <pycode> https://bpa.st/UI2A
[20:47:22] <eodks> interesting
[20:47:42] *** Joins: withered_wolf (~withered_@1437135-v103.1561-static.stchilaa.metronetinc.net)
[20:47:49] *** Quits: Hokedli (~lasliedv@gateway/tor-sasl/hokedli) (Quit: Konversation terminated!)
[20:47:59] <Soni> anyway this is exciting but also we're getting distracted
[20:48:03] <gitesh> class A has a method attack_up() with return self.attack and class B is a subclass of class A with method attack_up() with return statement also. so what happens with 2 return statements?
[20:48:15] <grym> eodks: vscode's a good starting point for general purpose work and python
[20:48:30] <gitesh> class B is overriding class A attack_up method
[20:49:09] <gitesh> I want to do super().attack_up()
[20:49:27] <gitesh> which return statement is used to end the call to the function?
[20:49:29] <Soni> does `while some_dict:` work? also how do you pop random entries from a dict?
[20:49:34] *** Joins: luva (~luva@178.239.173.200)
[20:50:38] <Soni> eh popitem is good enough
[20:50:48] <grym> Soni: iterating over a dict is an implicit walk over its keyview
[20:50:48] <grym> which is stylistically kind of meh, but he
[20:50:48] <grym> y
[20:50:48] <stealth_> Soni, `pop` removes from end of the list
[20:50:48] <grym> in general, mutating things as you iterate them gives me the willies
[20:50:48] <stealth_> Soni, `some_dict.pop('key')`
[20:50:51] *** Quits: eodks (~eodks@178.49.152.42) (Quit: Client closed)
[20:52:08] *** Quits: abhixec (~abhixec@c-67-169-139-16.hsd1.ca.comcast.net) (Ping timeout: 265 seconds)
[20:52:17] <foo> About to code a user/pass auth system. I *think* this will work: I'll have a separate password table with these keys: FK uid, password_hash, salt ... I'll randomly generate a salt per-user like this: salt = os.urandom(hashlib.blake2b.SALT_SIZE) where hashlib.blake2b.SALT_SIZE is 16. Then I'll hash with hashlib.pbkdf2_hmac('sha256', b'password', salt, 100000).hex() ... and I'll store that hash. Sound about
[20:52:23] <foo> right? Any suggestions?
[20:52:30] <Soni> grym: yep, it generally goes badly. but iterating with while foo: foo.pop() is pretty good because it lets you build up a todo list and discover more things as you go
[20:52:38] <Soni> particularly useful with commits, as commits have parent commits
[20:52:52] <Soni> and trees too, as trees have child trees
[20:52:58] <Soni> blobs are uh
[20:53:13] <Soni> ... we don't need to popitem the blobs do we
[20:53:18] <foo> Soni: Not sure what I ever did to you to want to pop me.
[20:53:26] * foo grabs the meat for his eye
[20:53:38] <Payam> can someone explain to be why random.seed exists
[20:54:01] <grym> Payam: so you can get the same random every time
[20:54:25] <Soni> meh, popiteming the blobs is consistent, altho using a dict for the blobs isn't
[20:54:28] <Payam> how? is it random then?
[20:54:59] *** Quits: lalitmee_ (~lalitmee@180.94.32.27) (Quit: Leaving)
[20:55:05] <grym> Payam: random can mean a lot of things
[20:55:13] *** Quits: legola (~legola@46.235.100.27) (Remote host closed the connection)
[20:55:42] <ano> >File "/usr/lib64/python3.8/logging/__init__.py", line 1084, in emit >stream.write(msg + self.terminator) >BlockingIOError: [Errno 11] write could not complete without blocking
[20:55:49] <Payam> what is seed doing here for instance? https://bpa.st/T3VA
[20:55:57] *** Quits: NeilRG (~NeilRG@192.222.196.111) (Remote host closed the connection)
[20:56:03] <Soni> altho maybe we should use sets for the commits and trees
[20:56:14] <grym> Payam: it means every time you run that code, you pick the same sample from x
[20:56:22] <grym> Soni: something something networkx
[20:56:35] <Soni> grym: what?
[20:56:52] <grym> Payam: (which, while debugging/developing, is often a nice fact to have for reproducability)
[20:56:56] <Soni> how do you shove things into sets?
[20:57:03] <grym> set()
[20:57:03] <Payam> grym well I use ipython3 now and each time I run random.sample(..) I get different value
[20:57:04] *** Quits: luva (~luva@178.239.173.200) (Quit: Byebye)
[20:57:13] <grym> Payam: yes
[20:57:19] <Soni> add/update instead of append/extend?
[20:57:19] <grym> and you'll get the same order of different values every time
[20:57:20] <Payam> they are not the same
[20:57:37] *** Joins: luva (~luva@178.239.173.200)
[20:57:40] *** Joins: greedom (~greedom@2001:16b8:2e7a:ff00:449b:abea:901:6bb6)
[20:57:45] <Payam> I need to see it. I will try something now
[20:59:12] <grym> Payam: run this over and over from a command line: `python -c "import random; random.seed(2); x=list(range(1000)); print(random.sample(x,3)); print(random.sample(x,3))"`
[20:59:12] *** Quits: djapo (~archangel@user/djapo) (Ping timeout: 252 seconds)
[20:59:13] <grym> Payam: then, remove the seed and run it over and over
[21:00:04] *** Quits: mcope (~matt@user/mcope) (Quit: Konversation terminated!)
[21:00:11] <grym> in the first case, you'll get two subsequent dissimilar samples, and the same two every time
[21:00:12] <Soni> to change some code from using list, specifically append, extend, pop, to set, just replace append with add, extend with update, and pop with pop?
[21:00:25] *** Joins: fedenix (~fedenix@gateway/tor-sasl/fedenix)
[21:00:26] <grym> in the second case, you'll get two different samples among themselves and also across repeated runs
[21:00:47] <stealth_> ano, does that file you are trying to write to has a lock on it?
[21:01:32] *** Joins: abhixec (~abhixec@c-67-169-139-16.hsd1.ca.comcast.net)
[21:02:19] *** Quits: atrigent (~atrigent@c-73-69-68-26.hsd1.ma.comcast.net) (Read error: Connection reset by peer)
[21:03:03] *** Quits: EvilDMP (~textual@django/moderator/EvilDMP) (Quit: My MacBook has gone to sleep. ZZZzzz…)
[21:03:03] *** Joins: atrigent (~atrigent@c-73-69-68-26.hsd1.ma.comcast.net)
[21:03:10] <Soni> python docs are still confusing af sometimes :/
[21:03:10] *** Joins: Julian (~tos9@python/site-packages/Julian)
[21:03:15] <stealth_> ano, you got a link to your code?
[21:03:45] <grym> when in doubt, repl it out
[21:04:44] <ano> stealth_: it's uwsgi/flask logging and it only happens on big strings, probably stderr/stdout but not sure
[21:05:12] *** Joins: freeman_h (~freeman_h@2a02:c7f:fc54:ba00:f5e1:d0a2:ba4:a153)
[21:05:15] *** Quits: bfoley (~bfoley@pool-173-48-101-113.bstnma.fios.verizon.net) (Quit: My MacBook has gone to sleep. ZZZzzz…)
[21:05:54] <stealth_> ano, well the `loggin` module uses lock, so without looking at the code can't say what is happening.
[21:06:06] <stealth_> `loggin`
[21:06:13] <stealth_> `logging`
[21:07:16] *** Quits: rpkilby (~rpkilby@ec2-34-252-84-235.eu-west-1.compute.amazonaws.com) (Remote host closed the connection)
[21:07:50] *** Quits: greedom (~greedom@2001:16b8:2e7a:ff00:449b:abea:901:6bb6) (Remote host closed the connection)
[21:07:52] *** Joins: rpkilby (~rpkilby@ec2-34-252-84-235.eu-west-1.compute.amazonaws.com)
[21:07:57] <Soni> btw where's bool(collection) documented?
[21:08:33] <stealth_> Soni, ?
[21:08:37] *** Joins: Adoi (~Adoi@user/adoi)
[21:08:53] <stealth_> Soni, https://docs.python.org/3/library/functions.html#bool ?
[21:08:58] <grym> https://docs.python.org/3/library/stdtypes.html#truth
[21:08:59] <Soni> stealth_: e.g. bool(set())
[21:08:59] <grym> ?
[21:09:06] <grym> empty collections are falsey
[21:09:13] <Soni> grym: thanks
[21:09:22] *** Quits: shad (~shad@user/shad) (Quit: WeeChat 3.0)
[21:09:27] <Soni> wish class set documented it but thanks
[21:10:22] <Soni> ah, we guess it does
[21:10:26] <Soni> because len()
[21:10:32] *** Quits: rpkilby (~rpkilby@ec2-34-252-84-235.eu-west-1.compute.amazonaws.com) (Remote host closed the connection)
[21:10:47] <Soni> neat
[21:10:47] *** Joins: rpkilby (~rpkilby@ec2-34-252-84-235.eu-west-1.compute.amazonaws.com)
[21:12:54] *** Joins: mozgalom (~mozgalom@194.144.47.113)
[21:13:27] <jinsun> that is only good check for standard library collections btw, classes can do do whatever they want in __bool__
[21:13:40] <jinsun> numpy decides to throw an error
[21:14:34] <stealth_> ano, to be honest with you i am not sure why uwsgi/flask uses logging, since 1 it has locks and 2 it flushes! in a server enviroment you don't really want to waste time doing both of those.
[21:14:46] *** Quits: odoood (~odoood@2601:c8:c003:a550::3) (Ping timeout: 260 seconds)
[21:15:05] *** Joins: fstd (~fstd@xdsl-78-34-124-42.nc.de)
[21:15:20] *** Quits: Adoi (~Adoi@user/adoi) (Ping timeout: 265 seconds)
[21:15:50] *** Quits: fstd (~fstd@xdsl-78-34-124-42.nc.de) (Remote host closed the connection)
[21:16:13] *** Quits: ELFrederich (~ELFrederi@134.244.29.70) (Remote host closed the connection)
[21:17:37] *** Joins: ELFrederich (~ELFrederi@134.244.29.70)
[21:18:58] *** Quits: khrbt (~znc@user/khrbt) (Ping timeout: 260 seconds)
[21:19:12] *** Joins: khrbt (~znc@user/khrbt)
[21:20:14] *** Joins: tos9_ (~tos9@python/site-packages/Julian)
[21:20:54] *** Joins: dvyd (~dvyd@068-118-248-191.res.spectrum.com)
[21:21:26] <Soni> jinsun: that's fair
[21:21:41] *** Quits: hegstal (~hegstal@2a02:c7f:7608:d400:8959:ed5e:30f7:362a) (Remote host closed the connection)
[21:22:02] <grym> 'the truth value of an array is ambiguous, use np.any()'
[21:22:17] <grym> the best errors are the ones that tell you how to make them go away
[21:22:42] *** Quits: xcombelle (~xavie@176-139-252-198.abo.bbox.fr) (Ping timeout: 260 seconds)
[21:22:58] *** Quits: Julian (~tos9@python/site-packages/Julian) (Ping timeout: 252 seconds)
[21:23:04] *** Quits: ELFrederich (~ELFrederi@134.244.29.70) (Ping timeout: 265 seconds)
[21:23:15] *** Joins: fstd (~fstd@xdsl-78-34-124-42.nc.de)
[21:23:53] *** Joins: Betal (~Betal@user/betal)
[21:23:58] <dvyd> I'm troubleshooting someone else's code. The programmer is using multiprocessing with workers and a manager, but it still runs in a single process. The programmer is using global variables, which will not function correctly with multiprocessing. However, could they stop a worker from starting in its own process?
[21:24:04] *** Joins: khrbt_ (~znc@user/khrbt)
[21:24:31] *** Quits: khrbt (~znc@user/khrbt) (Ping timeout: 265 seconds)
[21:24:49] *** Joins: ELFrederich (~ELFrederi@134.244.29.70)
[21:26:29] <jinsun> only problem is they show up when you do `arr1 and arr2` also, and then usually the actual fix is to use `&` instead of `and` since you wanted elementwise `and`
[21:27:01] *** Joins: Mrbungle6661 (~MrBungle@2604:3d08:1788:dc00:90b8:1310:c52b:43cf)
[21:27:02] <cul8r> dvyd have you tried multithreading instead of multiprocessing?
[21:27:21] *** Quits: dakotakae (~dakotakae@2601:680:cb80:a6d0:8f78:cde0:7cc5:2fc2) (Quit: Leaving)
[21:27:36] *** Quits: Mrbungle (~Mrbungle@2604:3d08:1788:dc00:5da5:a866:5bff:6961) (Quit: CoreIRC for Android - www.coreirc.com)
[21:27:57] *** Quits: luva (~luva@178.239.173.200) (Ping timeout: 245 seconds)
[21:28:00] *** Mrbungle6661 is now known as MrBungle
[21:28:19] <dvyd> cul8r, my understanding is that multithreading will not engage multiple CPUs, correct?
[21:28:35] *** Joins: luva (~luva@178.239.167.170)
[21:29:03] *** Joins: bilb_ono (~alexmarsh@ip68-6-90-72.sb.sd.cox.net)
[21:29:05] <dvyd> I generally like the worker + manager approach with multiprocessing.
[21:29:05] *** Joins: _ELFrederich (~ELFrederi@134.244.29.70)
[21:29:11] *** Joins: reset (~reset@user/reset)
[21:29:14] *** Quits: ferz (~ferz@93-39-143-98.ip76.fastwebnet.it) (Ping timeout: 260 seconds)
[21:29:46] <saltrocklamp[m]> what do you mean by "manager" in this case
[21:29:50] *** Quits: ELFrederich (~ELFrederi@134.244.29.70) (Ping timeout: 265 seconds)
[21:29:54] <cul8r> yeah, but it sounds like you want multiprocessing within a single process, which I dont think you can do, unless I'm misinterpreting your question
[21:30:11] *** Quits: wolfgang (~wolfgang@101.174.6.197) (Remote host closed the connection)
[21:30:41] <bjs> saltrocklamp[m]: presumably a multiprocessing manager object
[21:30:47] <foo> Implementing a user/pass system, here's my model and basic code here: https://bpa.st/ZD3A - using argon2 / sqlalchemy. I think it's this simple? Would love another set of eyes. Thank you.
[21:30:56] <bjs> dynos01: the global variables can be read/write they're just not shared between processes
[21:30:58] <bjs> oops
[21:31:02] <bjs> dvyd: the global variables can be read/write they're just not shared between processes
[21:31:09] <saltrocklamp[m]> ^
[21:31:36] <bjs> dvyd: i'm not sure what you mean by "in a single process" when you also say "multiprocessing"
[21:31:53] <saltrocklamp[m]> i've had issues with multiprocessing code appearing to only use 1 cpu core in the past
[21:31:54] *** Quits: _ELFrederich (~ELFrederi@134.244.29.70) (Remote host closed the connection)
[21:31:57] *** Joins: mohabaks (~mohabaks@gateway/tor-sasl/mohabaks)
[21:31:57] <saltrocklamp[m]> maybe that's it
[21:32:18] <bjs> saltrocklamp[m]: that sounds like you had a bug in your code
[21:32:19] *** Joins: _ELFrederich (~ELFrederi@134.244.29.70)
[21:33:26] <saltrocklamp[m]> in my case it was with joblib and numpy stuff. it was a while ago, so i don't remember if/how i resolved it.
[21:33:28] *** Quits: mohabaks (~mohabaks@gateway/tor-sasl/mohabaks) (Client Quit)
[21:33:48] <cul8r> probably used IBM Watson.
[21:33:55] *** Joins: juiceBoks (~mikanJuic@user/mikanjuice)
[21:34:04] *** Joins: zebrag (~chris@user/zebrag)
[21:34:29] <pycode> stealth_, still there?
[21:34:45] <stealth_> pycode, nope
[21:34:51] *** Joins: ferz (~ferz@93-39-143-98.ip76.fastwebnet.it)
[21:34:58] <pycode> when i compile a module with cython it creates the .so file into the main folder of the project
[21:35:03] <pycode> something like fast.cpython-38-x86_64-linux-gnu.so
[21:35:12] <pycode> is there a way to put it in another place?
[21:35:20] *** Joins: ELFrederich (~ELFrederi@134.244.29.70)
[21:35:23] <pycode> where do you usually put .so files?
[21:35:32] <saltrocklamp[m]> cul8r: i remember something about how numpy with mkl already parallelizes dot products and such, so maybe there was some conflict with whatever joblib was doing
[21:35:46] <saltrocklamp[m]> i would have been using mkl at the time
[21:36:14] *** Quits: puff (~user@S0106d4ca6d80a83c.vs.shawcable.net) (Read error: Connection reset by peer)
[21:36:24] <stealth_> pycode, i don't know off hand
[21:36:28] *** Joins: puff (~user@S0106d4ca6d80a83c.vs.shawcable.net)
[21:36:37] *** Joins: mohabaks (~mohabaks@gateway/tor-sasl/mohabaks)
[21:36:45] <pycode> i do python setup.py build_ext --inplace
[21:36:49] *** Quits: _ELFrederich (~ELFrederi@134.244.29.70) (Remote host closed the connection)
[21:36:59] <pycode> i suppose that --inplace makes the differenc
[21:37:00] <pycode> :D
[21:37:05] <stealth_> pycode, it should store that .so into the package folder
[21:37:07] <dvyd> bjs, saltrocklamp, cul8r: yes, I mean a manager object and the special data types like manager.dict() to share and return state. with my own code, I see additional python interpreters open in Windows' task manager. I do not see that happen with this programmers code. I used only standard library stuff. This programmer is using pandas and scipy.
[21:37:25] <bjs> dvyd: are they actually using multiprocessing?
[21:37:25] <cul8r> hm interesting, i would have thought something as "basic" as dotprod would be compatible with joblib
[21:37:30] <pycode> stealth_, yes but i mean is not better to put it into another place?
[21:38:27] <dvyd> This is the code that should start new processes:         p = mp.Process(name=f"worker_{str(i)}",target=Full_one_run())
[21:38:28] <dvyd>         jobs.append(p)
[21:38:28] <dvyd>         p.start()
[21:38:33] <stealth_> pycode, well somewhere inside the package folder or else you will not be able to import it
[21:38:45] <bjs> dvyd: did they really mean to *call* Full_one_run there
[21:39:11] *** Quits: hnOsmium0001 (uid453710@id-453710.stonehaven.irccloud.com) (Quit: Connection closed for inactivity)
[21:39:27] <pycode> stealth_, for example i see that numpy creates numpy.libs and put the .so files there
[21:39:49] <dvyd> bjs, ah! you are correct! thank you!
[21:39:58] *** Quits: fstd (~fstd@xdsl-78-34-124-42.nc.de) (Ping timeout: 260 seconds)
[21:40:00] *** Joins: Pickchea (~private@user/pickchea)
[21:40:51] *** Joins: NeilRG (~NeilRG@192.222.196.111)
[21:41:45] <dvyd> bjs, I cannot thank you enough. the code now starts multiple processes.
[21:42:00] <bjs> dvyd: it's a common mistake
[21:42:09] <bjs> maybe even it's even the mistake saltrocklamp[m] had in their code a while ago :)
[21:42:21] <saltrocklamp[m]> hah, definitely not in my case
[21:42:42] <saltrocklamp[m]> the joblib api makes that harder to do
[21:43:18] *** Quits: computeiro (~Wender@189.37.68.37) (Quit: Leaving)
[21:43:43] *** Quits: ELFrederich (~ELFrederi@134.244.29.70) (Remote host closed the connection)
[21:44:02] *** Quits: rpkilby (~rpkilby@ec2-34-252-84-235.eu-west-1.compute.amazonaws.com) (Remote host closed the connection)
[21:44:38] *** Joins: rpkilby (~rpkilby@ec2-34-252-84-235.eu-west-1.compute.amazonaws.com)
[21:44:43] *** Joins: ELFrederich (~ELFrederi@134.244.29.70)
[21:45:10] *** Quits: rpkilby (~rpkilby@ec2-34-252-84-235.eu-west-1.compute.amazonaws.com) (Remote host closed the connection)
[21:45:26] *** Joins: rpkilby (~rpkilby@ec2-34-252-84-235.eu-west-1.compute.amazonaws.com)
[21:45:36] <stealth_> pycode, you should be able to do that, yes, i am just not sure where you would in cython yet
[21:46:23] *** Joins: matsaman (~matsaman@user/matsaman)
[21:46:42] <pycode> i think in setup.py
[21:47:21] <stealth_> pycode, https://stackoverflow.com/questions/31043774/customize-location-of-so-file-generated-by-cython
[21:47:46] <stealth_> pycode, also use `setuptools` like that if you aren't already
[21:47:46] <pycode> perfect
[21:47:51] <Soni> what's the easiest way to build HTML from strings?
[21:47:54] <pycode> yes
[21:48:13] *** Joins: jvh_ (~jvh@user/jvh)
[21:48:28] *** Joins: abraham (~abraham@191.96.120.55)
[21:48:28] <bjs> Soni: you mean from a string containing HTML source parse and generate a Python object,  or from some text generate HTML that contains the text
[21:48:44] <Soni> the lattter
[21:48:45] <bjs> the former I guess something like lxml, the latter I'd use a templating engine like jinja to do
[21:48:49] <Soni> latter*
[21:48:56] *** Quits: k162 (k162@user/k162) (Ping timeout: 252 seconds)
[21:49:12] <Soni> hmm do we really want/need *two* templating engines for this project
[21:49:29] <bjs> Soni: ... two?
[21:50:00] <Soni> bjs: yeah, one in python and another in not-python
[21:50:03] *** Quits: jvh_ (~jvh@user/jvh) (Max SendQ exceeded)
[21:50:20] <bjs> Soni: well I mean, I can't comment about your whole project and its complexities and all the other parts you didn't explain
[21:50:22] *** Joins: jvh_ (~jvh@user/jvh)
[21:50:35] *** Quits: jvh (~jvh@user/jvh) (Ping timeout: 252 seconds)
[21:50:38] <bjs> but generating HTML is a fine thing to do with a simple templating engine, and if doing that was the best way I'd do that
[21:50:54] *** Joins: zln (~zln@c80-217-230-193.bredband.tele2.se)
[21:50:58] *** Quits: mexen (uid495612@user/mexen) (Quit: Connection closed for inactivity)
[21:51:00] <bjs> even if you happened to also be using a different templating engine somewhere else in the project, i'm not sure why that matters
[21:51:42] <Soni> because... hmm, maybe we can just use the other one...
[21:51:54] <stealth_> Soni, you have a backend/front end template engine?
[21:52:10] <bjs> Soni: oh,  well,  sure I didn't mean you *had* to use jinja, it was just an example templating engine in Python
[21:52:13] <bjs> (given you're in #python ...)
[21:52:38] <Soni> stealth_: nah, we're using python for scripting and we wanna shell out to something much better designed for the task
[21:52:52] <Soni> which has its own template engine ofc
[21:53:48] <stealth_> Soni, then give that something else a json data, then it can take that content and create template using that
[21:54:50] *** Quits: pizdets_ (~pizdets@183.182.115.101) (Ping timeout: 250 seconds)
[21:54:58] *** Quits: jvh_ (~jvh@user/jvh) (Ping timeout: 265 seconds)
[21:55:01] *** Joins: k162 (k162@user/k162)
[21:55:12] *** Joins: pizdets (~pizdets@183.182.111.101)
[21:55:50] *** Quits: Pickchea (~private@user/pickchea) (Ping timeout: 260 seconds)
[21:58:43] *** Quits: ELFrederich (~ELFrederi@134.244.29.70) (Remote host closed the connection)
[21:59:20] *** Joins: fstd (~fstd@xdsl-87-79-158-186.nc.de)
[22:00:50] *** Joins: midnite (~human@user/midnightlantern)
[22:01:02] *** Joins: semeion (~semeion@user/semeion)
[22:01:36] *** Joins: fassl (~fassl@2a02:8388:1987:9380:c4ee:81c5:625a:a215)
[22:02:46] *** Quits: fstd (~fstd@xdsl-87-79-158-186.nc.de) (Remote host closed the connection)
[22:03:15] *** Joins: fstd (~fstd@xdsl-87-79-158-186.nc.de)
[22:05:48] *** Joins: LuksNuke (~LuksNuke@2001:7e8:c066:6200:be85:8d95:5d9:f9da)
[22:06:48] <saltrocklamp[m]> the _easiest_ way is probably `str.format` :)
[22:06:56] <foo> Writing a user/pass auth, I think this is solid/good: https://bpa.st/UMZQ - open to any other thoughts! Using argon2
[22:07:03] <foo> thank you thank you
[22:07:56] <TML> you have an entire table just for passwords?
[22:08:02] <TML> That's a bit on the odd side
[22:08:27] <TML> password is more traditionally a single field in a table where the tuples represent a user
[22:08:45] *** Quits: mohabaks (~mohabaks@gateway/tor-sasl/mohabaks) (Ping timeout: 276 seconds)
[22:08:59] <TML> I mean, I'm not saying it's WRONG to do it your way; just…odd
[22:10:54] *** Parts: juiceBoks (~mikanJuic@user/mikanjuice) ()
[22:10:56] *** Quits: Naan (~Naan@user/naan) (Ping timeout: 252 seconds)
[22:11:45] <foo> TML: thank you. Yes, because we have some users that don't have any sort of login - they're only users of the system but never have a need to auth
[22:12:13] <TML> foo: That's ok - you can have a nullable password field :)
[22:12:37] <foo> TML: oh.
[22:13:07] *** Quits: rpkilby (~rpkilby@ec2-34-252-84-235.eu-west-1.compute.amazonaws.com) (Remote host closed the connection)
[22:13:13] *** Joins: Diemuzi (~Diemuzi@ip68-106-203-17.pn.at.cox.net)
[22:13:37] <foo> TML: well, then, yes, I can do that. :) A very very small fraction of users will have passwords, if that matters? eg. 2000 users, like 20 will have a password. In the auth, I would have a relationship to a users password and match against that... or, even after me further elaborating, would you still suggest a password column on the user table?
[22:13:54] <Fieldy> hi :) 3.7.11 here. i'm trying to test for if something is "True" (line 97). and it is, it should be setting device to "cuda". otherwise, device is set to "cpu". but it's getting unexpectedly set to "cpu". am i making some silly mistake? https://bpa.st/NRGQ
[22:14:00] *** Joins: rpkilby (~rpkilby@ec2-34-252-84-235.eu-west-1.compute.amazonaws.com)
[22:14:55] <TML> foo: I generally design my data model to what makes the most sense to me, and I recommend you do the same; if you feel this method makes more sense, do that. I was just providing a perspective. :)
[22:15:18] <grym> Fieldy: you don't need the quotes, again
[22:15:31] <grym> Fieldy: `if torch.cuda.is_available(): ` suffices
[22:15:46] <grym> and if you like being redundant, `if torch.cuda.is_available() is True`
[22:15:47] <TML> Fieldy: Also, look into the keyword "else"
[22:15:55] *** Quits: zln (~zln@c80-217-230-193.bredband.tele2.se) (Quit: WeeChat 3.2)
[22:16:00] <TML> you'll love it :)
[22:16:04] <grym> Fieldy: "True" is a string, True is a bool
[22:16:10] <Fieldy> oh that makes sense, so the if is looking for 1 or true by default, got it
[22:16:15] <Fieldy> OH
[22:16:17] <Fieldy> guh
[22:16:30] *** Quits: rany (~rany@user/rany) (Ping timeout: 260 seconds)
[22:16:33] <Fieldy> TML: yeah i plant to use else next :)
[22:16:43] <foo> TML: I love perspective and am always in learning mode. Given what I've shared, if you were designing this - what would you do? Or, what questions would you further ask to decide what to do? #curious
[22:17:21] <grym> Fieldy: also, torch.cuda.is_available() returns a bool, so what you're doing with `if torch.cuda.is_available()` is `if True:`, which is nice and easy
[22:17:26] *** Joins: rpkilby_ (~rpkilby@c-24-20-208-106.hsd1.or.comcast.net)
[22:17:37] <Fieldy> grym: yeah that makes perfect sense now
[22:17:57] <TML> foo: I would have passwords be part of the user model, just because that's what I've been doing for 30+ years :)
[22:17:59] <Fieldy> now to tidy it up with else
[22:18:17] *** Quits: vats (~vats@103.70.83.191) (Read error: Connection reset by peer)
[22:19:09] <foo> TML: It's officially, you pulled the time card on me. To be fair, IIRC, I think you were helping me with PHP 20+ years ago. Heh. Grateful for your assistance. Thank you, I'll do that... one less table and one less relationship sounds nice. :)
[22:19:20] <foo> s/officially/official/
[22:19:27] <TML> lol
[22:19:37] <TML> I mean "heh"
[22:19:44] <TML> forgot :D
[22:19:54] <Fieldy>         torch.cuda.is_available():  True
[22:19:54] <Fieldy>         device:  cuda
[22:19:57] <Fieldy> :D
[22:20:01] <foo> TML: I guess I'm not the most important thing in your life after all.
[22:20:10] *** Quits: rpkilby (~rpkilby@ec2-34-252-84-235.eu-west-1.compute.amazonaws.com) (Ping timeout: 252 seconds)
[22:20:10] <Fieldy> lol
[22:20:23] <TML> foo: I have helped way too many people in the past 20 years to remember them all :)
[22:20:28] *** Joins: zln (~zln@c80-217-230-193.bredband.tele2.se)
[22:20:34] <rud0lf> cuda means miracles or wonders in polish
[22:21:04] <Fieldy> hah. appropriate. because it helps those results go from taking about 15 seconds to 0.15 seconds :) though i don't have it actually RUNNING on cuda yet, haven't figured out how to actually do it in transformers yet.
[22:21:11] <grym> rud0lf: and it sounds a lot like "Когда", in russian
[22:21:27] <Fieldy> just wanted to set that up to check the environment, that cuda is ready to go, rather than just assuming it is and having breaking fun later
[22:21:27] <rud0lf> what's kagda?
[22:21:30] <space-ghost> anyone know how to say it in zulu
[22:21:36] <rud0lf> "someone"?
[22:21:38] <foo> TML: Grateful for all your assistance, thank you for helping me become a better dev!
[22:21:57] <grym> rud0lf: "when"
[22:21:59] <rud0lf> ah
[22:22:00] <space-ghost> isimangaliso in zulu
[22:22:04] <space-ghost> for cuda in polish
[22:22:16] <rud0lf> nye zaboodoo neekagda
[22:22:25] <space-ghost> what u say bout my mama
[22:22:32] <Fieldy> lmao
[22:22:46] <Fieldy> space-ghost: do you take requests? can you do /me coast to coast
[22:23:07] * space-ghost obliterates Fieldy with his arm-band-death-ray
[22:23:07] * Fieldy throws Brak at space-ghost
[22:23:10] <Fieldy> oh my
[22:24:14] *** Quits: Scarecr0w (scarecr0w@user/scarecr0w) (Remote host closed the connection)
[22:25:01] <Fieldy> anybody else doing gpt-neo stuff with the transformers (not happytransformers) library? having a hard time finding how to tell it to use the GPU
[22:26:02] <foo> TML: I suppose one value of a separate Password table is knowing when a password was created and updated. If I wanted to prevent people from re-using passwords and expire them, this could be beneficial. Although I have no need for none of this, not even telling the user "you last changed your password on ____" ... so yes, a password column makes a lot of sense.
[22:26:29] <TML> foo: Don't do that
[22:26:45] *** Quits: russw (~russw@bras-base-otwaon0150w-grc-06-184-147-146-48.dsl.bell.ca) (Ping timeout: 250 seconds)
[22:26:48] <foo> TML: I hear you and accept your message - what's the reasoning?
[22:27:17] <TML> the best recommendation from NIST is to not arbitrarily expire passwords; if there's indications a password has been compromised, sure, invalidate it; otherwise, stop with the expiry :)
[22:28:08] *** Quits: midnite (~human@user/midnightlantern) (Quit: midnite)
[22:28:09] *** Joins: cloudbender (~cloudbend@user/cloudbender)
[22:28:27] <foo> TML: aha, I see. Last question: do you name the column hash or password_hash? :)
[22:29:03] <TML> foo: https://pages.nist.gov/800-63-3/sp800-63b.html#memsecretver
[22:29:11] *** Joins: roxfan (roxfan@11.121-64-87.adsl-dyn.isp.belgacom.be)
[22:29:23] <TML> (Justification for my assertions)
[22:29:32] *** Joins: qlixed (~qlixed@181.44.129.13)
[22:29:39] <TML> foo: I usually just call it "password"
[22:29:46] *** Quits: fannagoganna (~tanim@c-73-40-72-85.hsd1.va.comcast.net) (Remote host closed the connection)
[22:30:15] <foo> TML: thank you
[22:31:23] *** Joins: cloudbender18 (~cloudbend@user/cloudbender)
[22:32:25] <roxfan> trying to use websockets module, simple connect(uri) fails due to Unsupported extension: name = permessage-deflate; suggestions from https://websockets.readthedocs.io/en/stable/topics/compression.html do not work :/
[22:33:37] *** Quits: shlomif (~shlomif@87.68.240.100.adsl.012.net.il) (Quit: Shlomi Fish ("Rindolf") has left the server. “Chuck Norris was challenged to fight the world, and accepted. He bet on himself, won, and collected the bet money.”)
[22:33:38] *** Quits: cloudbender (~cloudbend@user/cloudbender) (Ping timeout: 260 seconds)
[22:34:05] *** Quits: noctavian (~noctavian@gateway/tor-sasl/noctavian) (Remote host closed the connection)
[22:34:21] *** Joins: noctavian (~noctavian@gateway/tor-sasl/noctavian)
[22:35:05] *** Quits: tos9_ (~tos9@python/site-packages/Julian) (Ping timeout: 265 seconds)
[22:35:32] *** Quits: abraham (~abraham@191.96.120.55) (Quit: Textual IRC Client: www.textualapp.com)
[22:35:36] *** Joins: System123 (~System123@2c0f:f4c0:2202:6b94:9580:2b3e:eee5:e946)
[22:36:40] *** Quits: imakestuff (~imakestuf@197.156.95.154) (Remote host closed the connection)
[22:37:10] *** Quits: KernelPanic (~KernelPan@user/kernelpanic) (Ping timeout: 240 seconds)
[22:37:21] *** Quits: ominionx (~ominionx@6.sub-174-250-40.myvzw.com) (Remote host closed the connection)
[22:37:27] <foo> TML: heh, this simplifies a lot more than just a table. I don't need a "get password" function... I can simply get the user. Thanks again for sharing your perspective.
[22:37:50] *** Quits: fikran (~fikran@user/fikran) (Ping timeout: 260 seconds)
[22:38:00] *** Quits: cloudbender18 (~cloudbend@user/cloudbender) (Ping timeout: 265 seconds)
[22:38:06] *** Quits: LuksNuke (~LuksNuke@2001:7e8:c066:6200:be85:8d95:5d9:f9da) (Remote host closed the connection)
[22:38:52] *** Quits: rendar (~rendar@user/rendar) (Quit: Leaving)
[22:39:25] *** Quits: abhixec (~abhixec@c-67-169-139-16.hsd1.ca.comcast.net) (Ping timeout: 252 seconds)
[22:39:49] *** Joins: fikran (~fikran@user/fikran)
[22:40:10] *** Quits: System123 (~System123@2c0f:f4c0:2202:6b94:9580:2b3e:eee5:e946) (Ping timeout: 260 seconds)
[22:41:37] *** Quits: NeilRG (~NeilRG@192.222.196.111) (Remote host closed the connection)
[22:41:42] *** Quits: mozgalom (~mozgalom@194.144.47.113) (Quit: My MacBook has gone to sleep. ZZZzzz…)
[22:41:55] *** Joins: linux_dream (~isaac@2a01:e0a:7:60e0:bcc4:b32c:9221:831d)
[22:42:01] <roxfan> https://bpa.st/QJ7Q <- can anyone make this work?
[22:42:39] *** Quits: RangerBobVA (~bmaddox@user/rangerbobva) (Quit: Leaving)
[22:43:17] *** Joins: ominionx (~ominionx@173-25-110-118.client.mchsi.com)
[22:44:07] *** Quits: damonlynch (~ngaio@2601:245:c700:2c06:f9ca:7b49:9cc6:4727) (Read error: Connection reset by peer)
[22:45:35] *** Quits: semeion (~semeion@user/semeion) (Ping timeout: 252 seconds)
[22:47:14] *** Quits: roxfan (roxfan@11.121-64-87.adsl-dyn.isp.belgacom.be) (Remote host closed the connection)
[22:47:31] *** Joins: roxfan (roxfan@11.121-64-87.adsl-dyn.isp.belgacom.be)
[22:48:14] *** Joins: iomari891 (~iomari891@105.112.138.38)
[22:50:04] *** Joins: Scarecr0w (scarecr0w@user/scarecr0w)
[22:51:07] *** Quits: pycode (~pycode@2001:b07:5d28:551:ad07:4c3f:f9ee:4534) (Ping timeout: 252 seconds)
[22:53:54] *** Joins: Amadiro (~Amadiro@84.209.11.12)
[22:54:18] *** Joins: EvilDMP (~textual@django/moderator/EvilDMP)
[22:55:28] *** Joins: rany (~rany@user/rany)
[22:55:42] *** Joins: ham5urg (~ham5urg@p5ddfcd25.dip0.t-ipconnect.de)
[22:56:14] *** Joins: sniperwolf (~sniperwol@91.230.98.1)
[22:56:28] *** Quits: wilk (~wilk@user/wilk) (Ping timeout: 252 seconds)
[22:57:01] <fbiagent> what's the state of the art in command line stuff that can also be guis in python
[22:57:08] *** Quits: jack__d (~jack__d@pool-98-109-145-13.nwrknj.fios.verizon.net) (Ping timeout: 252 seconds)
[22:57:10] <fbiagent> I seem to recall some package to take a command line app and make it gui automatically
[22:57:17] <grym>  o.0 news to me
[22:57:37] <TML> sounds like a fairy tale to me
[22:57:38] <fbiagent> re CLI <-> GUI? I think it took a click CLI to GUI
[22:58:09] *** Joins: KernelPanic (~KernelPan@user/kernelpanic)
[22:58:10] *** Joins: semeion (~semeion@user/semeion)
[22:58:37] <fbiagent> https://github.com/chriskiehl/Gooey
[23:00:08] <Soni> okay, what all can you do with pygit2 "tree entries"? the docs are completely unclear on this
[23:00:47] *** Joins: hnOsmium0001 (uid453710@id-453710.stonehaven.irccloud.com)
[23:01:26] <Soni> we see tree_entry.id, tree_entry.name, and tree_entry.type_str but... is that it?
[23:01:34] <grym> fbiagent: wild
[23:01:49] *** Quits: aleks (~aleks@user/aleks) (Ping timeout: 256 seconds)
[23:01:57] *** Joins: Gudddu (~Guddu@190.84.88.92)
[23:02:02] *** Joins: LuksNuke (~LuksNuke@2001:7e8:c066:6200:be85:8d95:5d9:f9da)
[23:02:07] *** Quits: EvilDMP (~textual@django/moderator/EvilDMP) (Quit: My MacBook has gone to sleep. ZZZzzz…)
[23:03:17] *** Joins: wolfgang (~wolfgang@101.174.6.197)
[23:03:17] *** Joins: neilthereildeil (~neilthere@204.115.183.4)
[23:03:40] <neilthereildeil> hey all. i made some changes to the code in my venv
[23:03:45] *** Quits: ham5urg (~ham5urg@p5ddfcd25.dip0.t-ipconnect.de) (Ping timeout: 260 seconds)
[23:03:46] *** Quits: aead (~aead@user/aead) (Ping timeout: 252 seconds)
[23:03:53] <neilthereildeil> and every time i make changes, i run "pip install -e ."
[23:04:15] <grym> (the point of -e is that you don't have to do that)
[23:04:22] *** Joins: damonlynch (~ngaio@2601:245:c700:2c06:3100:2071:52b6:bf1e)
[23:04:45] *** Quits: atrigent (~atrigent@c-73-69-68-26.hsd1.ma.comcast.net) (Read error: Connection reset by peer)
[23:04:55] <neilthereildeil> does this command reach out to the internet? It has been working for a long time, and i just got an error so im thinking some online resources is now unavailable
[23:05:21] <grym> neilthereildeil: it'll depend on what's in your install_requires, but in general probably not
[23:05:23] <neilthereildeil> i havent changed the venv on my side so i cant think of what would cause it to suddenly fail
[23:05:23] *** Joins: atrigent (~atrigent@c-73-69-68-26.hsd1.ma.comcast.net)
[23:05:23] *** Quits: Guddu (~Guddu@190.84.88.92) (Ping timeout: 252 seconds)
[23:06:07] *** Joins: Julian (~tos9@python/site-packages/Julian)
[23:06:25] <kevr> I've got a bit of an odd question that doesn't directly relate to Python, but its linters: I'm working on a web app which uses FastAPI as its web framework (ok, whatever), and it uses Jinja2 to render templates. I register some Jinja2 filters via decorators, but in order for those decorators to take effect, they need to be imported somewhere so it gets loaded up before Jinja2 is used with the
[23:06:27] <kevr> filter.
[23:06:47] <kevr> However, importing and not actually using the module in a file just causes me to get a warning because it looks like i'm doing nothing with it.
[23:06:57] <kevr> This is flake8/pyflakes
[23:07:31] <kevr> And yes, of course, I'm doing nothing with it, but importing it is by itself doing something with it: running the decorator which registers the particular decorated functions.
[23:07:34] <neilthereildeil> grym: it seems without this command, my code changes are not taking effect
[23:07:39] <kevr> Any4 idea?
[23:08:01] *** Joins: vicfred (~vicfred@user/vicfred)
[23:08:44] <roxfan> https://bpa.st/QJ7Q <- can anyone make this work?
[23:08:49] <Soni> oh nvm found it
[23:09:06] <Soni> tree entries are just objects, because... meh
[23:10:17] *** Joins: gs (~behelit@217.61.224.9)
[23:11:23] <gs> Hi! Long-time Django user looking to change things up with FastAPI. Which ORM do you prefer and what do you use in place of Django Admin? :)
[23:12:18] <mefistofeles> sqlalchemy is a popular one, that's all I know :)
[23:13:06] <gs> yeah, and tortoise looks pretty neat.
[23:13:22] <Soni> how are you supposed to check object type with pygit2?
[23:13:42] *** Joins: Midjak (~Midjak@82-65-111-221.subs.proxad.net)
[23:14:24] *** Quits: Alina-malina (~Alina-mal@user/alina-malina) (Quit: !be back soon)
[23:14:36] *** Quits: ano (~ano@user/ano) (Remote host closed the connection)
[23:14:46] <foo> Well, this is different. I just installed python 3.8.10 - I have no /bin/activate
[23:14:49] <foo> Did that change?
[23:14:59] <nedbat> foo: that's a virtualenv thing, not a python thing
[23:15:00] *** Joins: ano (~ano@user/ano)
[23:15:31] <ska> Can I put develop required package in pyproject.toml too?
[23:15:54] <ska> Separate section from build-system?
[23:16:23] <bjs> Soni: a quick google lands me at https://www.pygit2.org/objects.html which seems to list all the things you can do with all the kinds of entries
[23:16:23] *** Joins: Narrat (~omnius@p200300df5f01ca2806ea56fffe2e7cdc.dip0.t-ipconnect.de)
[23:16:45] *** Joins: Alina-malina (~Alina-mal@user/alina-malina)
[23:16:50] <Soni> bjs: do we just check obj.type == something or is there something special we need to do?
[23:17:24] <bjs> Soni: to do... what?
[23:18:45] *** Quits: cashew (~cashugh@user/cashew) (Quit: bye)
[23:19:05] *** Joins: fannagoganna (~tanim@c-73-40-72-85.hsd1.va.comcast.net)
[23:19:40] *** Quits: fannagoganna (~tanim@c-73-40-72-85.hsd1.va.comcast.net) (Remote host closed the connection)
[23:20:29] *** Joins: Aye (jeda@hellomouse/dev/cryb.jeda)
[23:23:07] *** Joins: pizdets_ (~pizdets@183.182.115.101)
[23:23:32] *** Quits: pizdets (~pizdets@183.182.111.101) (Ping timeout: 252 seconds)
[23:23:47] *** Joins: Bronto22 (~mennoh@84-86-247-193.fixed.kpn.net)
[23:24:51] *** Quits: elibrokeit (eschwartz@archlinux/bugwrangler/eschwartz) (Quit: A random quit message)
[23:25:39] *** Joins: EvilDMP (~textual@django/moderator/EvilDMP)
[23:26:04] *** Joins: abraham (~abraham@143.244.185.86)
[23:26:47] *** Joins: elibrokeit (eschwartz@archlinux/bugwrangler/eschwartz)
[23:26:47] *** Quits: puff (~user@S0106d4ca6d80a83c.vs.shawcable.net) (Read error: Connection reset by peer)
[23:27:00] *** Quits: LuksNuke (~LuksNuke@2001:7e8:c066:6200:be85:8d95:5d9:f9da) (Remote host closed the connection)
[23:27:01] *** Joins: puff (~user@S0106d4ca6d80a83c.vs.shawcable.net)
[23:27:10] *** Joins: Mr_Bungle (~MrBungle@2604:3d08:1788:dc00:5e6:dd7d:c32d:e9f0)
[23:28:21] *** Joins: saschi (~saschi@user/saschi)
[23:28:50] *** Quits: Julian (~tos9@python/site-packages/Julian) (Ping timeout: 260 seconds)
[23:29:56] *** Quits: neilthereildeil (~neilthere@204.115.183.4) (Quit: Client closed)
[23:30:28] *** Joins: cashew (~cashugh@user/cashew)
[23:31:51] *** Joins: Julian (~tos9@python/site-packages/Julian)
[23:31:55] *** Joins: upsala (~zcb@185.213.155.160)
[23:32:58] *** Quits: Aye (jeda@hellomouse/dev/cryb.jeda) (Quit: //System Offline//)
[23:37:35] *** semeion is now known as mnemonic
[23:37:47] *** Quits: cul8r (~cul8r@2601:8c3:4280:ae00:6d9:f5ff:fe89:5583) (Remote host closed the connection)
[23:37:55] *** Quits: qlixed (~qlixed@181.44.129.13) (Ping timeout: 265 seconds)
[23:42:40] *** Quits: Julian (~tos9@python/site-packages/Julian) (Ping timeout: 252 seconds)
[23:42:43] *** Joins: Aye (jeda@hellomouse/dev/cryb.jeda)
[23:43:12] *** Joins: System123 (~System123@165-73-115-78.ip.afrihost.capetown)
[23:44:13] <grym> Soni: isinstance, usually
[23:46:09] *** Quits: EWDurbin (sid38710@id-38710.tinside.irccloud.com) (Quit: Updating details, brb)
[23:46:15] <nedbat> Soni is working with git objects, and it probably trying to determine the type of the git object (tree, blob, whatever), but is not explaining themselves well.
[23:46:18] *** Joins: EWDurbin (sid38710@id-38710.tinside.irccloud.com)
[23:47:00] <Soni> nedbat: we have no idea how to talk about what we're trying to do, no
[23:47:24] *** Joins: Auron (~Auron956@user/auron)
[23:47:39] <grym> Soni: bjs' link shows you what subclasses of pygit2.Object there are and where they arise and what you can do to them
[23:47:55] *** Quits: nomic (~nomic@185.192.69.176) (Quit: Leaving)
[23:48:10] <grym> they seem to be {Blob, Tree, Commit, Tag}
[23:48:33] *** Joins: Julian (~tos9@python/site-packages/Julian)
[23:49:08] <Soni> ... is bpa.st down for anyone else?
[23:49:21] *** Quits: kosh (~kosh@user/kosh) (Read error: Connection reset by peer)
[23:49:24] <bjs> Soni: no
[23:49:30] <bjs> well, not for me I mean.
[23:49:58] *** Joins: abhixec (~abhixec@c-67-169-139-16.hsd1.ca.comcast.net)
[23:51:16] *** Joins: kosh (~kosh@user/kosh)
[23:51:41] <TML> Soni: It's working here, but some places block it; maybe try using a Github Gist?
[23:54:21] *** Quits: Jefren1 (~Jefren@70.35.66.251) (Ping timeout: 265 seconds)
[23:54:23] *** Quits: kulernil (~kulernil@gateway/tor-sasl/kuler) (Remote host closed the connection)
[23:54:50] *** Joins: kulernil (~kulernil@gateway/tor-sasl/kuler)
[23:55:11] *** Joins: ELFrederich (~ELFrederi@134.244.29.70)
[23:55:29] <Soni> hmm why's ISP nullrouting bpaste
[23:55:48] *** Joins: Thanatos (~Thanatos@ec2-54-148-37-124.us-west-2.compute.amazonaws.com)
[23:56:01] <Soni> hmm actually what else would it be nullrouting
[23:56:07] *** Joins: Jefren1 (~Jefren@70.35.66.146)
[23:58:11] *** Quits: EvilDMP (~textual@django/moderator/EvilDMP) (Quit: My MacBook has gone to sleep. ZZZzzz…)
[23:58:19] *** Joins: System12_ (~System123@ec2-52-61-197-79.us-gov-west-1.compute.amazonaws.com)
[23:58:49] <Soni> nah it'd be just bpaste
