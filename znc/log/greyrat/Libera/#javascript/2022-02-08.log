[00:00:44] <mseidl> ljharb: What happened is, without an await, it wont update the browser.pages()
[00:01:07] *** Quits: garrit (~garrit@user/garrit) (Read error: Connection reset by peer)
[00:01:21] *** Joins: aolko[m] (~aolko93ma@2001:470:69fc:105::68ec)
[00:01:23] *** Joins: Darvesh[m] (~drvshmatr@2001:470:69fc:105::1:6c1e)
[00:01:34] <quartz> onosendi: So the lines 2 and 8 are not needed (from your solution)
[00:01:42] *** Joins: garrit (~garrit@p4fe71ff7.dip0.t-ipconnect.de)
[00:01:42] *** Quits: garrit (~garrit@p4fe71ff7.dip0.t-ipconnect.de) (Changing host)
[00:01:42] *** Joins: garrit (~garrit@user/garrit)
[00:01:44] *** Quits: dapinitial (~dpuerto@136-27-83-52.cab.webpass.net) (Ping timeout: 252 seconds)
[00:02:05] <robertmaxrees> quartz you don't need a state var like that.  just select it as needed.
[00:02:14] <mseidl> But i can
[00:02:20] <mseidl> 't an await in the promise
[00:02:31] <robertmaxrees> quartz though i think what you're trying to do is more akin to https://jsfiddle.net/robertmaxrees/8y65kz4e/
[00:03:10] *** Joins: sheetjs (~sheetjs@pool-108-53-213-150.nwrknj.fios.verizon.net)
[00:04:13] *** Joins: jazzy (~jaziz@user/jaziz)
[00:06:37] <quartz> robertmaxrees: OK thank you, and you too onosendi. I will try to understand your solutions
[00:07:10] *** Joins: macbook (~macbook@cpc101496-gill19-2-0-cust142.20-1.cable.virginm.net)
[00:07:27] <robertmaxrees> quartz if you want more jquery help, there's always #jquery :)
[00:08:04] *** Parts: macbook (~macbook@cpc101496-gill19-2-0-cust142.20-1.cable.virginm.net) ()
[00:09:06] *** Joins: saltrocklamp[m] (~hexology@user/hexology)
[00:09:10] *** Joins: assemblylang[m] (~assemblyl@2001:470:69fc:105::1:7012)
[00:11:20] <quartz> robertmaxrees: OK thank you.
[00:11:41] *** Quits: banana_ (~banana_@user/banana/x-2944094) (Ping timeout: 250 seconds)
[00:13:29] *** Quits: perrierjouet (~perrier-j@modemcable012.251-130-66.mc.videotron.ca) (Quit: WeeChat 3.4)
[00:13:32] *** Joins: ericson2314 (~ericson23@2001:470:69fc:105::70c)
[00:13:52] <hax> I started reading https://gamethemedgroup.github.io/GTCS-GameEngine/  to learn some stuff about canvas, but it uses IIFEs and global variables, as seen in https://github.com/Apress/build-your-own-2d-game-engine/blob/master/BookSourceCode/Chapter2/2.4.JavaScriptObjects/public_html/src/Engine/Engine_Core.js
[00:14:20] <hax> Since there doesn't seem to be a current book on canvas, what is the modern way of doing what this author is trying to do?
[00:15:08] *** Joins: perrierjouet (~perrier-j@modemcable012.251-130-66.mc.videotron.ca)
[00:15:17] <hax> should I just have one <script> tag in the html, and use import statements in all of the other scripts?
[00:15:50] <hax> ** import all other scripts into main script
[00:17:19] <ljharb> mseidl: wrong
[00:17:31] <ljharb> mseidl: without the `await`, your code won't wait til it's done. the change happens regardless.
[00:17:45] <buu> oh no
[00:17:46] *** Joins: MichaelLaRosa[m] (~michaelbi@2001:470:69fc:105::1:6ac9)
[00:17:47] <ljharb> blezz: you need to auth with nickserv for non-ops to see what you say; see the last link in the topic
[00:17:52] <buu> awaits
[00:18:01] *** Joins: graingert[m] (~graingert@2001:470:69fc:105::653)
[00:18:08] *** Joins: h274f[m] (~h274fmatr@2001:470:69fc:105::1:6a8a)
[00:18:09] *** Joins: Eugenius[m] (~eugeniusg@2001:470:69fc:105::1:a867)
[00:18:44] *** Joins: Betal (~Betal@user/betal)
[00:18:45] *** Joins: loke[m] (~loke@2001:470:69fc:105::237)
[00:18:49] *** Joins: WillPittenger (~willpitte@2001:470:69fc:105::1bf)
[00:20:16] *** Joins: nicoty (~nicoty@user/nicoty)
[00:21:45] *** Quits: CiaoSen (~Jura@p200300c95737a2002a3a4dfffe84dbd5.dip0.t-ipconnect.de) (Ping timeout: 256 seconds)
[00:23:05] *** Quits: quartz (~quartz@user/quartz) (Quit: WeeChat 3.4)
[00:23:51] <mseidl> ljharb: when i update the browserpages it just show s up as Promise { <pending> }
[00:26:04] <buu> mseidl: What are you expecting it to show?
[00:28:54] <ljharb> mseidl: ok, but the promise is just a placeholder. the actual work is already being performed.
[00:30:50] *** Quits: onosendi (~onosendi@user/onosendi) (Quit: WeeChat 3.4)
[00:31:44] <mseidl> buu: ljharb I'm doing an automation thing that involves an extension.  I was able to interact with the  extension when I found it in the browser.pages() .   But it was acting weird like it was running too fast and , so ljharb told me to use promise
[00:32:50] *** Joins: dffo^ (~dffo@128-092-182-020.biz.spectrum.com)
[00:34:27] *** Quits: ___nick___ (~quassel@cpc68286-cdif17-2-0-cust533.5-1.cable.virginm.net) (Ping timeout: 256 seconds)
[00:37:51] <ljharb> mseidl: sure. but whether you use `await` or `.then`, you do have to set up your conceptual dependency graph properly
[00:37:55] <mseidl> ljharb: https://bpa.st/NPIQ
[00:38:05] <mseidl> i didnt get around to a then
[00:38:20] <mseidl> before it works right?
[00:38:27] *** Joins: c4017w__ (~c4017@209.52.68.8)
[00:39:29] *** Joins: cotko (~cotko@188-230-251-153.dynamic.t-2.net)
[00:39:49] *** Quits: perrierjouet (~perrier-j@modemcable012.251-130-66.mc.videotron.ca) (Quit: WeeChat 3.4)
[00:40:22] *** Joins: varrg (~varrg@h-176-10-198-245.A351.priv.bahnhof.se)
[00:40:30] *** Quits: wyre (~wyre@user/wyre) (Quit: ZNC 1.8.2 - https://znc.in)
[00:41:20] *** Quits: D4mned (~D1mned@212.101.253.44) (Quit: Leaving)
[00:41:49] *** Quits: c4017w_ (~c4017@209.52.68.8) (Ping timeout: 240 seconds)
[00:42:10] <ljharb> mseidl: `await` is just sugar for `.then`
[00:42:12] *** Joins: perrierjouet (~perrier-j@modemcable012.251-130-66.mc.videotron.ca)
[00:42:16] *** Joins: wyre (~wyre@user/wyre)
[00:44:55] *** Joins: reallymemorable (~reallymem@2601:180:8300:8fd0:4812:9a4c:6b8c:661c)
[00:45:12] <hassoon_> sugar is allover javascript, javascript is so sweet
[00:45:41] *** Joins: greggerz (~greggerzm@2001:470:69fc:105::da2)
[00:49:37] *** Quits: Deneb (~johnch@23.143.9.51.dyn.plus.net) (Remote host closed the connection)
[00:50:45] *** Quits: magga (magga@ti0036a400-3577.bb.online.no) (Remote host closed the connection)
[00:56:01] <mseidl> ljharb: would a timeout wait here while it's in <pending>
[00:56:18] <mseidl> in the promise?
[00:57:10] *** Joins: bitonic (~bitonic@2001:470:69fc:105::1812)
[00:57:53] *** Joins: ormaaj (~ormaaj@user/ormaaj)
[00:58:08] *** Joins: Hansuke[m] (~hansukema@2001:470:69fc:105::1:86bb)
[00:58:17] *** Quits: pmercado (~pmercado@190.22.165.59) (Ping timeout: 240 seconds)
[00:58:18] <ljharb> mseidl: no, you don't use timeouts.
[00:58:24] <ljharb> mseidl: to wait on a promise, you use await, or `.then`
[00:59:13] <mseidl> but It wont work with await ?  I  want to update the browserpages in the   SyntaxError: await is only valid in async functions and the top level bodies of modules
[00:59:55] *** Joins: jjido (~Denis@2a02:c7f:5c91:e700:655c:94b:918d:9e34)
[01:01:19] *** Joins: banana_ (~banana_@user/banana/x-2944094)
[01:01:52] *** Quits: Pilum (~JKM@user/pilum) (Ping timeout: 268 seconds)
[01:02:15] *** Quits: cotko (~cotko@188-230-251-153.dynamic.t-2.net) (Quit: Konversation terminated!)
[01:02:28] <ljharb> mseidl: right, so, make it an async function
[01:02:47] <ljharb> mseidl: if you share a codesandbox - specifically that one, so it's editable - i can show you what changes to make
[01:03:18] <mseidl> which do you recommend?
[01:03:24] <mseidl> jsfiddle?
[01:04:15] <jjido> const p = new Point(1, 2); {...p, x: 0} // is there any way to preserve type (constructor) information?
[01:04:29] <mseidl> ljharb:
[01:04:47] *** Joins: onosendi (~onosendi@user/onosendi)
[01:04:47] <mseidl> oh lol
[01:05:22] *** Quits: Hansuke[m] (~hansukema@2001:470:69fc:105::1:86bb) (Read error: Connection reset by peer)
[01:05:22] *** Quits: greggerz (~greggerzm@2001:470:69fc:105::da2) (Write error: Connection reset by peer)
[01:05:22] *** Quits: bitonic (~bitonic@2001:470:69fc:105::1812) (Read error: Connection reset by peer)
[01:05:23] *** Quits: aolko[m] (~aolko93ma@2001:470:69fc:105::68ec) (Write error: Connection reset by peer)
[01:05:23] *** Quits: Darvesh[m] (~drvshmatr@2001:470:69fc:105::1:6c1e) (Read error: Connection reset by peer)
[01:05:23] *** Quits: assemblylang[m] (~assemblyl@2001:470:69fc:105::1:7012) (Write error: Connection reset by peer)
[01:05:23] *** Quits: aesth[m] (~aesthmatr@2001:470:69fc:105::1:57c1) (Read error: Connection reset by peer)
[01:05:23] *** Quits: nicoty (~nicoty@user/nicoty) (Write error: Connection reset by peer)
[01:05:23] *** Quits: MichaelLaRosa[m] (~michaelbi@2001:470:69fc:105::1:6ac9) (Read error: Connection reset by peer)
[01:05:23] *** Quits: kakuhen (~kakuhen@user/kakuhen) (Read error: Connection reset by peer)
[01:05:23] *** Quits: ormaaj (~ormaaj@user/ormaaj) (Write error: Connection reset by peer)
[01:05:24] *** Quits: loke[m] (~loke@2001:470:69fc:105::237) (Read error: Connection reset by peer)
[01:05:24] *** Quits: ericson2314 (~ericson23@2001:470:69fc:105::70c) (Read error: Connection reset by peer)
[01:05:24] *** Quits: Eugenius[m] (~eugeniusg@2001:470:69fc:105::1:a867) (Write error: Connection reset by peer)
[01:05:24] *** Quits: paulcarroty (~paulcarro@2001:470:69fc:105::216) (Write error: Connection reset by peer)
[01:05:24] *** Quits: saltrocklamp[m] (~hexology@user/hexology) (Write error: Connection reset by peer)
[01:05:25] *** Quits: WillPittenger (~willpitte@2001:470:69fc:105::1bf) (Read error: Connection reset by peer)
[01:05:25] *** Quits: graingert[m] (~graingert@2001:470:69fc:105::653) (Write error: Connection reset by peer)
[01:05:25] *** Quits: h274f[m] (~h274fmatr@2001:470:69fc:105::1:6a8a) (Read error: Connection reset by peer)
[01:05:58] <onosendi> mseidl: https://gist.github.com/onosendi/159721ea5332608ca8d2c3e57959d633
[01:06:00] *** Quits: onosendi (~onosendi@user/onosendi) (Client Quit)
[01:06:19] *** Joins: spronkey (~spronkey@2002:7a3a:4b4c:0:7021:b521:947c:5993)
[01:06:21] *** Joins: Pilum (~JKM@user/pilum)
[01:06:37] <mseidl> ttps://codesandbox.io/s/lucid-currying-4eh4u?file=/src/index.js  can you see that?
[01:07:05] <ljharb> jjido: `.constructor` is both not reliable and not the "type"
[01:07:16] <ljharb> jjido: so no, `p` and that new object are different.
[01:07:55] <ljharb> jjido: if you want to make that, you want something like `new Point(p)` or `Point.clone(p)`
[01:08:18] *** Quits: Booster2ooo (~Booster2o@user/booster2ooo) (Read error: Connection reset by peer)
[01:08:37] <jjido> ljharb why does "instanceof" return true if it's not the type?
[01:08:42] *** Joins: paulcarroty (~paulcarro@2001:470:69fc:105::216)
[01:09:55] <jjido> ljharb both `new Point(p)` and `Point.clone(p)` copy all the properties of p, I can't override selected properties.
[01:09:56] *** Joins: WillPittenger (~willpitte@2001:470:69fc:105::1bf)
[01:09:56] *** Joins: greggerz (~greggerzm@2001:470:69fc:105::da2)
[01:09:56] *** Joins: nicoty (~nicoty@user/nicoty)
[01:09:56] *** Joins: kadoban (~kadoban@user/kadoban)
[01:09:56] *** Joins: loke[m] (~loke@2001:470:69fc:105::237)
[01:10:09] *** Joins: h274f[m] (~h274fmatr@2001:470:69fc:105::1:6a8a)
[01:10:10] *** Joins: hsiktas[m] (~hsiktasm]@2001:470:69fc:105::30d4)
[01:10:11] *** Joins: MichaelLaRosa[m] (~michaelbi@2001:470:69fc:105::1:6ac9)
[01:10:12] *** Joins: Deide (~deide@user/deide)
[01:10:12] *** Joins: jmcantrell (~jmcantrel@user/jmcantrell)
[01:10:12] *** Joins: graingert[m] (~graingert@2001:470:69fc:105::653)
[01:10:12] *** Joins: ormaaj (~ormaaj@user/ormaaj)
[01:10:12] *** Joins: boris[m] (~borisruna@2001:470:69fc:105::32f3)
[01:10:12] *** Joins: ericson2314 (~ericson23@2001:470:69fc:105::70c)
[01:10:13] *** Joins: saltrocklamp[m] (~hexology@user/hexology)
[01:10:13] *** Joins: f33d1[m] (~g0nkstead@2001:470:69fc:105::1:320b)
[01:10:13] *** Joins: bitonic (~bitonic@2001:470:69fc:105::1812)
[01:10:27] *** Joins: Darvesh[m] (~drvshmatr@2001:470:69fc:105::1:6c1e)
[01:10:36] *** Joins: abf (~abf@user/abf)
[01:10:40] *** Joins: aesth[m] (~aesthmatr@2001:470:69fc:105::1:57c1)
[01:10:40] *** Joins: mekeor[m] (~mekeormat@2001:470:69fc:105::17e4)
[01:10:43] <ljharb> jjido: well sure
[01:10:51] <ljharb> jjido: i mean there's a reason inheritance and "instances" suck
[01:10:53] *** Joins: Hansuke[m] (~hansukema@2001:470:69fc:105::1:86bb)
[01:10:53] *** Joins: sickdyd (~sickd@120.51.82.69.ap.gmobb-fix.jp)
[01:11:02] <ljharb> jjido: `instanceof` doesn't do what you think it does. it's easily forgeable as well.
[01:11:05] <ljharb> jjido: JS doesn't have "types" like that.
[01:11:06] *** Joins: aolko[m] (~aolko93ma@2001:470:69fc:105::68ec)
[01:11:07] *** Joins: assemblylang[m] (~assemblyl@2001:470:69fc:105::1:7012)
[01:11:08] *** Joins: kakuhen (~kakuhen@user/kakuhen)
[01:11:23] *** Joins: Eugenius[m] (~eugeniusg@2001:470:69fc:105::1:a867)
[01:11:24] *** Quits: zer0bitz (~zer0bitz@2001:2003:f74d:b800:bc81:ba25:7a70:67f2) (Read error: Connection reset by peer)
[01:12:19] <jjido> ljharb they're all objects, but instanceof and constructors are a convenient illusion
[01:12:55] <ljharb> jjido: convenient, until you run into the many sharp edges like this one
[01:13:15] <jjido> if you follow a specific pattern they can serve well
[01:14:01] *** Joins: ezio (~ezio@user/ezio)
[01:15:54] <jjido> at the moment I have a convenience method copy(obj, props) e.g. copy(p, {x: 0})
[01:16:06] <mseidl> ljharb: https://codesandbox.io/s/lucid-currying-4eh4u?file=/src/index.js  can you see that?
[01:16:13] <jjido> I prefer the ellipsis syntax though
[01:16:38] *** Quits: sickdyd (~sickd@120.51.82.69.ap.gmobb-fix.jp) (Ping timeout: 260 seconds)
[01:17:48] <ljharb> jjido: the point of that syntax is to generate plain objects, not instances.
[01:18:04] <jjido> ok
[01:18:43] <ljharb> mseidl: yes
[01:18:54] <ljharb> mseidl: "sleep" is a harmful name tho, since JS doesn't have sleep
[01:19:26] <mseidl> ljharb: that was left from yest4erday
[01:19:38] <mseidl> i was going to remove it but wasn't really concerned
[01:19:44] <mseidl> atm
[01:19:58] <ljharb> mseidl: anyways which line is the syntax error?
[01:20:08] <ljharb> ah i see it
[01:20:23] <mseidl> 56
[01:20:44] <ljharb> mseidl: https://codesandbox.io/s/elastic-chebyshev-406gc
[01:20:51] <ljharb> mseidl: iow, the `new Promise` part should be as small as possible
[01:21:07] <ljharb> i don't think my fix is perfect but it should show you the gist
[01:21:13] *** Quits: hojasuelta (~hojasuelt@2806:102e:18:abc0:60e9:e960:2794:1af9) (Remote host closed the connection)
[01:21:45] <ezio> stenno, I finally know what mergeMap does.  And I got a much better grasp on functional programming.  The last piece of the puzzle that clicked is that what's inside the mergeMap is a collection of subscriptions.  Or something like that.  Now it makes sense that I would use that for when it's necessary to save data even if new data is being sent while the previous request has yet to return.  concat if I want to insure the order.  The one I want is switchMap
[01:21:45] <ezio> which will just close the connection immediately and start a new request.  I have to pull vehicle information based on VIN. So each time they click the search button, I'll dump any connections that were in the pipe and make a new request.
[01:22:12] <stenno> glad you figured it out!
[01:22:13] <mseidl> ljharb: should i do the logic outside?
[01:22:23] <stenno> also thanks for reporting back :D
[01:22:26] <stenno> good job
[01:22:49] <ljharb> mseidl: outside the new Promise? yes
[01:23:18] <mseidl> lh
[01:23:19] <ezio> Thanks for pointing me in the right direction.  Sorry it took so long.  I was off all last week on bereavement.
[01:24:17] *** Joins: hojasuelta (~hojasuelt@187.144.37.38)
[01:24:43] <stenno> haha no worries
[01:24:48] <stenno> persistence prevails
[01:24:53] <mseidl> ljharb: did you change something?
[01:25:17] *** Quits: dan01 (~dan01@2a02:2f09:3913:cc00:1d8d:6567:868f:a9e0) (Remote host closed the connection)
[01:25:27] <stenno> rxjs is really something nifty
[01:25:28] <ljharb> mseidl: yes, line 56
[01:25:38] <ljharb> mseidl: i closed the `new Promise` executor function sooner
[01:25:42] *** Joins: dan01 (~dan01@2a02:2f09:3913:cc00:1d8d:6567:868f:a9e0)
[01:25:46] *** Quits: z_lehinsun__ (~lehinsun@188.113.178.220) (Quit: Leaving)
[01:26:12] <ezio> Like I was saying before, functional programming made an entire class revolt.  So this stuff is hard.
[01:26:37] <stenno> yep
[01:26:42] *** Parts: jjido (~Denis@2a02:c7f:5c91:e700:655c:94b:918d:9e34) (Textual IRC Client: www.textualapp.com)
[01:26:47] <stenno> its certainly different from what is taught in uni in first semester
[01:27:09] <ezio> It's the first time in recent memory that I haven't been able to transfer most of my knowledge to a new language in a short period of time.
[01:27:20] *** Quits: hojasuelta (~hojasuelt@187.144.37.38) (Read error: Connection reset by peer)
[01:27:23] <ljharb> lol "revolt"?
[01:27:36] *** Joins: hojasuelta (~hojasuelt@2806:102e:18:abc0:60e9:e960:2794:1af9)
[01:28:29] <tokie> by class do you mean class of people or like a university class?:P
[01:28:45] <stenno> class of people, yes
[01:28:49] <stenno> well you tell it :)
[01:28:52] <ezio> ljharb, I wasn't involved.  I would never go over someone's head.  I was a vocal opponent of the growing mutiny.  But they went to the compsci chair and successfully had him removed.  It wasn't the first time that people had done that to that prof, but it was the first time it was successful.
[01:28:54] <stenno> i remember the story
[01:29:11] *** Quits: garrit (~garrit@user/garrit) (Ping timeout: 256 seconds)
[01:29:31] <ljharb> ezio: i really don't know what you're describing
[01:29:38] <ljharb> ezio: but a functional style is superior
[01:29:57] <mseidl> ljharb:i wanted check a couple of times, maybe try to click again if it didn't show up , then do a the logically outside . then once it's there i'll to the promse.then() and click there?   or error out?
[01:29:59] <ezio> It was a university class that taught functional programming using Scheme.
[01:30:17] <ljharb> ezio: ok… so what was the problem
[01:30:25] <ezio> This prof is kinda frumpy, grumpy, and clearly didn't like to teach.
[01:30:28] <ljharb> mseidl: anyways just only put *one* thing inside the `new Promise` function
[01:31:26] <ezio> But everyone was like ... this is the hardest class ever.  They went to the compsci chair and had him removed.
[01:31:37] <ezio> And I agree.  The class was insanely hard.
[01:32:02] <ezio> But they also didn't like him as a person.  I liked him.  He was my thesis advisor.
[01:32:02] *** Quits: EvanCarroll (~ecarroll@68-78-105-35.lightspeed.hstntx.sbcglobal.net) (Remote host closed the connection)
[01:32:13] <ezio> Gave me a 95.
[01:33:15] <ezio> I actually messaged him between now and then just to say hi and that I was learning functional programming now after so many years.
[01:33:37] *** Quits: Y4knotiS (~YaknotiS@cpc1-cmbg18-2-0-cust87.5-4.cable.virginm.net) (Ping timeout: 256 seconds)
[01:35:42] <ezio> The first class I had with him, it was Organization of Computers.  Encoding, MARIE, etc.  And there was like one sentence I couldn't figure out, and I asked around and no one else could figure it out.  So the next class, before the lecture (which are never really lectures in his class), I asked him about it, and he went into a half-an-hour lesson on just that one thing, and I was like: This dude is brilliant.
[01:37:22] *** Joins: Harlin_ (~DonQixote@75-163-202-34.clsp.qwest.net)
[01:37:52] *** Joins: ph88 (~ph88@2a02:8109:9e00:71d0:713a:ad1d:dd0:bdcc)
[01:38:19] <ph88> is it better to import the css in my javascript or just hardcode it in the html ? i'm a bit confused
[01:38:56] *** Joins: c4017w_ (~c4017@209.52.68.8)
[01:39:51] *** Quits: Harlin (~DonQixote@75-163-136-96.clsp.qwest.net) (Ping timeout: 256 seconds)
[01:39:53] <ezio> ph88, probably in the html is better.  The browser optimizes CSS so it can display the page faster.
[01:40:59] *** Quits: jmdaemon (~jmdaemon@user/jmdaemon) (Ping timeout: 256 seconds)
[01:41:55] <systemfault> ph88: Not sure what's confusing... you make a .css file and add it to your HTML
[01:41:57] <ljharb> ph88: "import css in javascript" isn't a thing. that's just nonstandard syntax that bundlers use to fake it
[01:42:46] *** Quits: c4017w__ (~c4017@209.52.68.8) (Ping timeout: 260 seconds)
[01:43:33] *** Quits: spronkey (~spronkey@2002:7a3a:4b4c:0:7021:b521:947c:5993) (Quit: you are feeeling very sleeeeeepyy......)
[01:43:56] *** Joins: spronkey (~spronkey@122-58-75-76-adsl.sparkbb.co.nz)
[01:45:42] *** Quits: reallymemorable (~reallymem@2601:180:8300:8fd0:4812:9a4c:6b8c:661c) (Remote host closed the connection)
[01:46:53] *** Joins: reallymemorable (~reallymem@2601:180:8300:8fd0:4812:9a4c:6b8c:661c)
[01:47:03] *** Quits: joepie91 (~joepie91p@user/joepie91) (Quit: Bridge terminating on SIGTERM)
[01:47:05] *** Joins: mintoyatsu (~mint@user/mintoyatsu)
[01:50:55] *** Quits: Aljone (~Aljone1@87.70.78.111) ()
[01:51:42] *** Quits: perrierjouet (~perrier-j@modemcable012.251-130-66.mc.videotron.ca) (Quit: WeeChat 3.4)
[01:52:34] *** Joins: jmdaemon (~jmdaemon@user/jmdaemon)
[01:52:50] *** Quits: Flonk (~Flonk@vps-zap441517-1.zap-srv.com) (Quit: Ping timeout (120 seconds))
[01:53:05] *** Quits: gproto23 (~gproto23@user/gproto23) (Ping timeout: 250 seconds)
[01:57:42] *** Quits: lilmonkey (~lilmonkey@user/lilmonkey) (Remote host closed the connection)
[01:58:07] *** Joins: lilmonkey (~lilmonkey@user/lilmonkey)
[01:59:47] *** Quits: FlorianBad (~FlorianBa@cpe-67-49-107-16.dc.res.rr.com) (Quit: Client closed)
[02:00:34] <mseidl> ljharb: last question of the night.     it seems like I cannot put make a function to update the pages?  since it has to be an await thing
[02:00:59] <ljharb> sure you can. it'll just be an async function.
[02:01:39] <mseidl> do i just put an async in front of it?
[02:03:30] <mseidl> ops, maybe i found it here
[02:03:34] <mseidl> https://stackoverflow.com/questions/42964102/syntax-for-an-async-arrow-function
[02:08:35] *** Joins: quazimodo (~quazimodo@n110-21-88-214.bla2.nsw.optusnet.com.au)
[02:08:39] <mseidl> that didn't work either. lol
[02:09:16] <ljharb> mseidl: you can't avoid actually learning how promises and asynchrony in JS works
[02:09:20] <ljharb> !promises intro @ mseidl
[02:09:20] <jellobot> mseidl, Promises are placeholders for values that'll be provided in the future. They allow composing asynchronous operations like synchronous ones. See http://robotlolita.me/2015/11/15/how-do-promises-work.html and https://blog.domenic.me/youre-missing-the-point-of-promises/. Contrast with !cps & see https://bevacqua.github.io/promisees/. Another guide: http://www.javascriptkit.com/javatutors/javascriptpromises.shtml
[02:10:59] *** Joins: dapinitial (~dpuerto@136-27-83-52.cab.webpass.net)
[02:11:32] <mseidl> thanks. night
[02:11:59] *** Joins: sickdyd (~sickd@120.51.82.69.ap.gmobb-fix.jp)
[02:12:40] *** Joins: perrierjouet (~perrier-j@modemcable012.251-130-66.mc.videotron.ca)
[02:13:41] *** Quits: mseidl (~flughafen@p57969381.dip0.t-ipconnect.de) (Quit: WeeChat 2.8)
[02:14:04] *** Quits: varrg (~varrg@h-176-10-198-245.A351.priv.bahnhof.se) (Quit: Leaving)
[02:15:57] *** Quits: dapinitial (~dpuerto@136-27-83-52.cab.webpass.net) (Ping timeout: 240 seconds)
[02:16:41] *** Quits: sickdyd (~sickd@120.51.82.69.ap.gmobb-fix.jp) (Ping timeout: 250 seconds)
[02:16:48] *** Joins: Flonk (~Flonk@vps-zap441517-1.zap-srv.com)
[02:17:15] *** Quits: nomic (~nomic@185.217.117.232) (Quit: Leaving)
[02:18:36] *** Parts: knstn (~knstn@ppp-94-66-57-191.home.otenet.gr) ()
[02:20:17] *** Joins: nulysses1 (~Thunderbi@p5dd17eaa.dip0.t-ipconnect.de)
[02:20:49] *** Quits: nulysses (~Thunderbi@p5dd174a1.dip0.t-ipconnect.de) (Ping timeout: 250 seconds)
[02:23:31] *** Joins: hseg (~hseg@195.192.229.23)
[02:23:57] *** Joins: SOMBRIO (~SOMBRIO@177.137.113.66)
[02:29:43] *** Quits: \mSg (mSg@user/msg/x-0285936) (Ping timeout: 256 seconds)
[02:30:01] *** Quits: Sven_vB (~sven@user/sven-vb/x-2094958) (Remote host closed the connection)
[02:30:26] *** Joins: Sven_vB (~sven@user/sven-vb/x-2094958)
[02:31:02] *** Joins: \mSg (mSg@user/msg/x-0285936)
[02:31:45] *** Joins: joepie91 (~joepie91p@user/joepie91)
[02:32:05] *** Quits: banana_ (~banana_@user/banana/x-2944094) (Ping timeout: 250 seconds)
[02:32:31] *** Quits: \mSg (mSg@user/msg/x-0285936) (Client Quit)
[02:33:00] *** Quits: pizdets (~pizdets@183.182.110.149) (Ping timeout: 250 seconds)
[02:33:42] *** Joins: pizdets (~pizdets@183.182.114.157)
[02:34:45] *** Quits: z1haze (~z1haze@user/z1haze) (Quit: Leaving)
[02:36:52] *** Quits: Donitz (~Donitz@88-115-149-215.elisa-laajakaista.fi) (Read error: Connection reset by peer)
[02:37:02] *** Joins: Reign (~Username@ip98-161-226-10.ph.ph.cox.net)
[02:38:35] *** Joins: Donitz (~Donitz@88-115-149-215.elisa-laajakaista.fi)
[02:39:27] *** Joins: c4017w__ (~c4017@209.52.68.8)
[02:42:58] *** Quits: c4017w_ (~c4017@209.52.68.8) (Ping timeout: 260 seconds)
[02:44:11] *** Quits: GreenResponse (~tomek@r-45-155-148-237.gpon.bialnet.pl) (Quit: Leaving)
[02:45:51] *** Joins: k8yun_ (~k8yun@24.244.29.102)
[02:45:55] *** Joins: dilip (~dilip@2402:3a80:cc2:be33:f0d6:2a2e:96fe:3f96)
[02:48:20] *** Quits: spronkey (~spronkey@122-58-75-76-adsl.sparkbb.co.nz) (Quit: you are feeeling very sleeeeeepyy......)
[02:49:25] *** Quits: k8yun (~k8yun@24.244.29.102) (Ping timeout: 240 seconds)
[02:50:12] *** Joins: maret (~maret@nat-88-212-37-89.antik.sk)
[02:54:22] *** Quits: Flonk (~Flonk@vps-zap441517-1.zap-srv.com) (Quit: Ping timeout (120 seconds))
[02:54:38] *** Quits: maret (~maret@nat-88-212-37-89.antik.sk) (Ping timeout: 260 seconds)
[02:58:43] *** Joins: Alexendoo_ (~Alex@144.21.50.247)
[03:01:27] *** Quits: Alexendoo (~Alex@144.21.50.247) (Ping timeout: 256 seconds)
[03:01:27] *** Alexendoo_ is now known as Alexendoo
[03:01:44] *** Quits: federico (~federico@176.206.191.61) (Quit: WeeChat 3.3)
[03:05:28] *** Quits: jmdaemon (~jmdaemon@user/jmdaemon) (Ping timeout: 250 seconds)
[03:09:40] *** Joins: jmdaemon (~jmdaemon@user/jmdaemon)
[03:10:52] *** Quits: c4017w__ (~c4017@209.52.68.8) (Quit: Leaving)
[03:17:03] *** Joins: sam_1 (~sam_1@87.51.251.118)
[03:17:16] *** Joins: c4017w (~c4017@209.52.68.8)
[03:17:49] *** Joins: twiclo (~twiclo@2604:7b80:2000:1069:52fc:cedd:fbeb:10c)
[03:19:25] *** Quits: hojasuelta (~hojasuelt@2806:102e:18:abc0:60e9:e960:2794:1af9) (Ping timeout: 240 seconds)
[03:19:50] *** Joins: sickdyd (~sickd@120.51.82.69.ap.gmobb-fix.jp)
[03:20:10] *** Quits: hseg (~hseg@195.192.229.23) (Remote host closed the connection)
[03:21:41] *** Quits: sam_1 (~sam_1@87.51.251.118) (Ping timeout: 250 seconds)
[03:24:49] *** Quits: kmh (~kmh@2a00:6020:5004:6800:f98e:e38d:b4ba:5a03) (Remote host closed the connection)
[03:25:00] *** Joins: kmh (~kmh@2a00:6020:5004:6800:f98e:e38d:b4ba:5a03)
[03:28:34] *** Joins: ycon (~ycon@2001:8004:5160:3983:21c5:1f96:ec86:4367)
[03:31:49] *** Quits: eXtr3m0_ (~eXtr3m0@p4fd3afed.dip0.t-ipconnect.de) (Ping timeout: 256 seconds)
[03:34:02] *** Joins: dapinitial (~dpuerto@136-27-83-52.cab.webpass.net)
[03:36:39] *** Joins: junebug (~junebug@2600:1700:3db0:2540:cb34:6962:9bf8:f69f)
[03:41:08] *** Joins: sam_1 (~sam_1@87.51.251.118)
[03:44:54] *** Quits: mat001 (~mat001@72.28.108.216) (Ping timeout: 250 seconds)
[03:45:25] *** Quits: dan01 (~dan01@2a02:2f09:3913:cc00:1d8d:6567:868f:a9e0) (Ping timeout: 240 seconds)
[03:45:37] *** Joins: llorllale (~llorllale@198.98.119.85)
[03:45:59] *** Quits: sam_1 (~sam_1@87.51.251.118) (Ping timeout: 256 seconds)
[03:46:33] *** Quits: yagamilito (~yagamilit@2601:642:4600:34b0:e00d:866f:e93f:4751) (Ping timeout: 256 seconds)
[03:50:40] *** Quits: Reign (~Username@ip98-161-226-10.ph.ph.cox.net) (Quit: Going offline, see ya! (www.adiirc.com))
[03:54:48] *** Joins: wroathe (~wroathe@206-55-188-8.fttp.usinternet.com)
[03:54:48] *** Quits: wroathe (~wroathe@206-55-188-8.fttp.usinternet.com) (Changing host)
[03:54:48] *** Joins: wroathe (~wroathe@user/wroathe)
[03:57:08] *** Quits: jmdaemon (~jmdaemon@user/jmdaemon) (Ping timeout: 252 seconds)
[04:00:39] *** Joins: chenqisu1 (~chenqisu1@183.217.200.249)
[04:05:01] *** Quits: dilip (~dilip@2402:3a80:cc2:be33:f0d6:2a2e:96fe:3f96) (Ping timeout: 240 seconds)
[04:07:08] *** Joins: \mSg (mSg@user/msg/x-0285936)
[04:08:51] *** Quits: Harlin_ (~DonQixote@75-163-202-34.clsp.qwest.net) (Remote host closed the connection)
[04:08:55] *** Joins: quartz (~quartz@user/quartz)
[04:09:18] *** Quits: k8yun_ (~k8yun@24.244.29.102) (Ping timeout: 260 seconds)
[04:09:29] *** Quits: reallymemorable (~reallymem@2601:180:8300:8fd0:4812:9a4c:6b8c:661c) (Remote host closed the connection)
[04:12:51] *** Quits: gde33 (~gde33@84-106-154-98.cable.dynamic.v4.ziggo.nl) (Ping timeout: 256 seconds)
[04:16:24] *** Joins: vysn (~vysn@user/vysn)
[04:17:46] *** Joins: sam_1 (~sam_1@87.51.251.118)
[04:17:57] *** Joins: c4017w_ (~c4017@209.52.68.8)
[04:17:59] *** Joins: LiftLeft (~LiftLeft@gateway/vpn/pia/liftleft)
[04:19:11] *** Quits: abf (~abf@user/abf) (Quit: Leaving)
[04:19:18] *** Quits: rewrit3 (~rewrit3@user/rewrit3) (Read error: Connection reset by peer)
[04:21:29] *** Quits: c4017w (~c4017@209.52.68.8) (Ping timeout: 250 seconds)
[04:22:15] *** Quits: sam_1 (~sam_1@87.51.251.118) (Ping timeout: 256 seconds)
[04:22:45] *** Joins: crashrep (~crashrep@user/crashrep)
[04:23:28] *** Parts: funhouse (~funhouse@user/funhouse) ()
[04:24:49] *** Joins: reallymemorable (~reallymem@2601:180:8300:8fd0:4812:9a4c:6b8c:661c)
[04:26:04] *** Quits: ycon (~ycon@2001:8004:5160:3983:21c5:1f96:ec86:4367) (Remote host closed the connection)
[04:26:46] *** Joins: mat001 (~mat001@c-69-181-155-247.hsd1.ca.comcast.net)
[04:27:43] *** Quits: perrierjouet (~perrier-j@modemcable012.251-130-66.mc.videotron.ca) (Quit: WeeChat 3.4)
[04:28:00] *** Joins: dilip (~dilip@1.39.147.170)
[04:30:31] *** Quits: reallymemorable (~reallymem@2601:180:8300:8fd0:4812:9a4c:6b8c:661c) (Ping timeout: 256 seconds)
[04:31:33] *** Joins: gde33 (~gde33@84-106-154-98.cable.dynamic.v4.ziggo.nl)
[04:31:57] *** Quits: DrowningElysium (uid190788@user/drowningelysium) (Quit: Connection closed for inactivity)
[04:35:08] *** Quits: voltage_ (voltage@user/voltage) (Quit: Leaving)
[04:35:13] *** Quits: _mikey (~mikey@user/mikey/x-4335048) (Quit: WeeChat 3.4)
[04:35:22] <quartz> Hello. I made a simple website where the user can enter text into a box and post it, like in Twitter. When the user beings to type, there is a character counter displayed that shows the remaining characters the user has entered from a total of 30. When the user posts something, I want the counter to reset to 30, but it does not.
[04:35:44] <quartz> I'm not sure how to solve this issue. Here is my code: https://jsfiddle.net/koa91zn8/   Thank you for your help!
[04:36:20] *** Joins: _mikey (~mikey@user/mikey/x-4335048)
[04:40:57] *** Quits: m5zs7k (aquares@web10.mydevil.net) (Ping timeout: 256 seconds)
[04:44:03] *** Quits: wallsY (~wallsY@c-73-211-135-175.hsd1.il.comcast.net) (Quit: WeeChat 3.0)
[04:45:21] *** Joins: rock (~rock@user/rock)
[04:48:11] *** Joins: jmdaemon (~jmdaemon@user/jmdaemon)
[04:54:21] *** Joins: ferdna (~ferdna@user/ferdna)
[04:54:44] <austincheney> quartz, your keyup event fires.
[04:55:09] <quartz> austincheney: What do you mean?
[04:55:16] <austincheney> the problem is lines 31-35
[04:56:04] *** Quits: mat001 (~mat001@c-69-181-155-247.hsd1.ca.comcast.net) (Read error: Connection reset by peer)
[04:56:15] *** Quits: yte3 (~0@151.31.110.176) (Ping timeout: 256 seconds)
[04:56:40] <austincheney> quartz, look at this and look at your browser console
[04:56:41] <austincheney> https://jsfiddle.net/kcdotajx/
[04:56:42] *** Joins: mat001_ (~mat001@c-69-181-155-247.hsd1.ca.comcast.net)
[04:57:00] <austincheney> that might get you started in the right direction, but I have to go.  Dinner just got here
[04:57:25] *** Quits: jmdaemon (~jmdaemon@user/jmdaemon) (Ping timeout: 240 seconds)
[04:57:34] *** Parts: rock (~rock@user/rock) ()
[04:59:45] *** Quits: SOMBRIO (~SOMBRIO@177.137.113.66) (Quit: Client closed)
[05:04:52] *** Joins: jmdaemon (~jmdaemon@user/jmdaemon)
[05:05:50] *** Joins: pavonia (~user@user/siracusa)
[05:06:00] *** Quits: lehinsun (~ttytwiste@188.113.176.117) (Quit: Leaving)
[05:09:59] *** Joins: leduyquang753 (~leduyquan@user/leduyquang753)
[05:11:33] *** Quits: thiras (~thiras@user/thiras) (Ping timeout: 256 seconds)
[05:11:54] *** Joins: N4buc0- (~N4buc0@2804:7f4:348a:fff2:5b62:1f82:2580:5e0a)
[05:12:13] *** Quits: N4buc0 (~N4buc0@2804:7f4:348a:fff2:86e5:3ec1:2264:dc1) (Remote host closed the connection)
[05:12:40] *** Joins: reallymemorable (~reallymem@2601:180:8300:8fd0:4812:9a4c:6b8c:661c)
[05:14:58] *** Quits: jmdaemon (~jmdaemon@user/jmdaemon) (Quit: ZNC 1.8.2 - https://znc.in)
[05:15:19] *** Quits: dapinitial (~dpuerto@136-27-83-52.cab.webpass.net) (Remote host closed the connection)
[05:16:45] *** Quits: junebug (~junebug@2600:1700:3db0:2540:cb34:6962:9bf8:f69f) (Quit: Leaving)
[05:18:28] *** Joins: c4017w__ (~c4017@209.52.68.8)
[05:21:08] *** Joins: jmdaemon (~jmdaemon@user/jmdaemon)
[05:22:06] *** Quits: c4017w_ (~c4017@209.52.68.8) (Ping timeout: 260 seconds)
[05:23:47] *** Quits: LiftLeft (~LiftLeft@gateway/vpn/pia/liftleft) (Ping timeout: 256 seconds)
[05:23:47] *** Quits: wroathe (~wroathe@user/wroathe) (Ping timeout: 256 seconds)
[05:29:33] <ljharb> dilip: you need to auth with nickserv for non-ops to see what you say; see the last link in the topic
[05:30:49] *** Joins: sam_1 (~sam_1@87.51.251.118)
[05:32:17] *** Quits: JayDoubleu_ (sid339529@hampstead.irccloud.com) (Ping timeout: 256 seconds)
[05:32:41] *** Quits: pax_os__ (uid535114@ilkley.irccloud.com) (Read error: Connection reset by peer)
[05:33:04] *** Joins: JayDoubleu_ (sid339529@id-339529.hampstead.irccloud.com)
[05:33:12] *** Joins: pax_os__ (sid535114@id-535114.ilkley.irccloud.com)
[05:35:23] *** Quits: sam_1 (~sam_1@87.51.251.118) (Ping timeout: 250 seconds)
[05:37:35] *** Joins: wroathe (~wroathe@206-55-188-8.fttp.usinternet.com)
[05:37:35] *** Quits: wroathe (~wroathe@206-55-188-8.fttp.usinternet.com) (Changing host)
[05:37:35] *** Joins: wroathe (~wroathe@user/wroathe)
[05:38:23] *** Joins: dodobrain (~dodobrain@user/dodobrain)
[05:39:57] *** Quits: quartz (~quartz@user/quartz) (Quit: WeeChat 3.4)
[05:40:16] *** Joins: cha0s (~jp@modemcable164.40-23-96.mc.videotron.ca)
[05:41:34] *** Joins: LiftLeft (~LiftLeft@gateway/vpn/pia/liftleft)
[05:46:07] *** Quits: LiftLeft (~LiftLeft@gateway/vpn/pia/liftleft) (Ping timeout: 256 seconds)
[05:56:53] *** Quits: jmdaemon (~jmdaemon@user/jmdaemon) (Ping timeout: 256 seconds)
[05:57:33] *** Quits: _mikey (~mikey@user/mikey/x-4335048) (Quit: WeeChat 3.4)
[05:58:04] *** Joins: _mikey (~mikey@user/mikey/x-4335048)
[05:58:45] *** Joins: LiftLeft (~LiftLeft@gateway/vpn/pia/liftleft)
[06:00:02] *** Joins: dirigible_ (~dirigible@2607:9000:0:3:36a4:cf80:2f7b:6990)
[06:00:44] *** Joins: Junxter (~Junxter@222.95.164.193)
[06:01:05] *** Quits: src (~src@user/src) (Ping timeout: 256 seconds)
[06:01:07] <jaawerth> hmm, if I have a userscript that wants to react to transform new content via NodeIterator or TreeWalker on pages I don't necessarily know the structure of, does it make more sense to use a debounced MutationObserver that runs the NodeIterator on the whole tree every time, or only on the new content while filtering out any new nodes that are children of other new nodes? My gut says the latter
[06:01:10] <jaawerth> but it feels like that could explode
[06:01:19] <jaawerth> this is for a very silly usecase
[06:02:13] <jaawerth> or rather, without the filter it could explode, but in most cases it'd probably be less work to just not filter out the nested inserts
[06:02:47] *** Quits: eXtr3m0 (~eXtr3m0@user/eXtr3m0) (Ping timeout: 256 seconds)
[06:03:06] *** Joins: pmercado (~pmercado@190.22.165.59)
[06:03:08] *** Quits: dirigible (~dirigible@2607:9000:0:3:36a4:cf80:2f7b:6990) (Ping timeout: 250 seconds)
[06:04:01] *** Quits: paule32 (~paul@user/paule32) (Ping timeout: 256 seconds)
[06:04:15] *** Quits: dilip (~dilip@1.39.147.170) (Ping timeout: 256 seconds)
[06:06:03] <jaawerth> ehh screw it i'll start with the debounced and later I can do a find common ancestor thing if perf gets weird on sits with lots of dynamic inserts
[06:06:30] <jaawerth> it's just text replacement, it'll be fast
[06:07:34] *** Quits: Junxter (~Junxter@222.95.164.193) (Quit: Leaving)
[06:07:54] *** Joins: Rockwood (~Rocky@user/rocky)
[06:07:55] *** Joins: Junxter (~Junxter@222.95.164.193)
[06:09:24] *** Joins: spronkey (~spronkey@122-58-75-76-adsl.sparkbb.co.nz)
[06:18:09] *** Joins: jmdaemon (~jmdaemon@user/jmdaemon)
[06:18:57] *** Joins: c4017w_ (~c4017@209.52.68.8)
[06:22:37] *** Quits: c4017w__ (~c4017@209.52.68.8) (Ping timeout: 250 seconds)
[06:27:48] *** Joins: k8yun (~k8yun@198-48-158-40.cpe.pppoe.ca)
[06:29:06] *** Joins: ycon (~ycon@2001:8004:5160:3983:21c5:1f96:ec86:4367)
[06:29:26] *** Quits: k8yun (~k8yun@198-48-158-40.cpe.pppoe.ca) (Remote host closed the connection)
[06:29:45] *** Joins: k8yun (~k8yun@198-48-158-40.cpe.pppoe.ca)
[06:31:21] <wroathe> jaawerth: Go with your gut
[06:31:32] <ycon> Hi all, I've built a svelte component library that I want to import. It seems to work, except that the CSS is missing (classes stil there)
[06:32:04] <systemfault> Find a Svelte channel, maybe they'll be able to help...
[06:33:53] <systemfault> From the website, their community is on Discord.
[06:34:15] *** Parts: et09 (~et09@user/et09) ()
[06:34:19] *** Joins: banana_ (~banana_@user/banana/x-2944094)
[06:34:45] <ycon> Not sure it's a svelte thing,  I think it's more a question of how do I get a .css files from one package to another
[06:35:38] <systemfault> If your bundler is configured to bundle CSS, you could just import the .css file.
[06:35:51] <systemfault> I don't know the svelte tools and/or conventions
[06:40:47] <theskillwithin> there is #svelte but its so small that asking it here might be wiser
[06:40:54] *** Quits: ycon (~ycon@2001:8004:5160:3983:21c5:1f96:ec86:4367) (Read error: Connection reset by peer)
[06:41:55] *** Joins: N4buc0 (~N4buc0@179.178.58.130)
[06:42:13] <theskillwithin> seems odd to me you've built a svelte component library, but are having problems with css
[06:42:40] *** Joins: dapinitial (~dpuerto@136-27-83-52.cab.webpass.net)
[06:43:07] *** Quits: N4buc0- (~N4buc0@2804:7f4:348a:fff2:5b62:1f82:2580:5e0a) (Remote host closed the connection)
[06:44:23] <theskillwithin> if they haven't left, I was going to suggest they share the github or something
[06:45:08] *** Joins: ycon (~ycon@2001:8003:332f:4700:cec:9c75:c671:2f4a)
[06:48:04] <sickdyd> how to replace html entities like &amp; to the actual char & ?
[06:48:26] <sickdyd> I mean, is there like a method that allows that on strings or do I have to manually replace all of the interested ones?
[06:55:58] *** Quits: pulse (~pulse@user/pulse) (Quit: Join a community of gamedev supermutants at https://indiedevs.net/)
[06:58:53] *** Quits: g2anj (~v@58.228.230.4) (Ping timeout: 256 seconds)
[06:59:27] *** Quits: N4buc0 (~N4buc0@179.178.58.130) (Ping timeout: 250 seconds)
[07:04:07] *** Quits: crashrep (~crashrep@user/crashrep) (Quit: WeeChat 3.4)
[07:04:35] <jaawerth> sickdyd: well the best way if you're pulling from the DOM would be to just use .textContent, which will give it to you with the entitis translated. You can ust .replace on strings with a regex but that's much dirtier and ou'd have to replace each entity yourself
[07:07:06] <silly> so you'd have to put it in an element as html and risk xss
[07:08:10] *** Quits: fweht (uid404746@id-404746.lymington.irccloud.com) (Quit: Connection closed for inactivity)
[07:08:17] *** Quits: k8yun (~k8yun@198-48-158-40.cpe.pppoe.ca) (Ping timeout: 256 seconds)
[07:08:22] <Rockwood> KevinX, thx
[07:09:02] *** Joins: m5zs7k (aquares@web10.mydevil.net)
[07:12:15] *** Quits: terrorjack (~terrorjac@2a01:4f8:1c1e:509a::1) (Quit: The Lounge - https://thelounge.chat)
[07:14:01] *** Joins: terrorjack (~terrorjac@2a01:4f8:1c1e:509a::1)
[07:16:01] <sickdyd> jaawerth: thanks
[07:16:32] <sickdyd> it's coming from an API call from a trusted source
[07:16:56] *** Quits: dodobrain (~dodobrain@user/dodobrain) (Remote host closed the connection)
[07:17:29] *** Joins: dodobrain (~dodobrain@user/dodobrain)
[07:18:32] *** Quits: cha0s (~jp@modemcable164.40-23-96.mc.videotron.ca) (Ping timeout: 250 seconds)
[07:18:50] *** Quits: Tobbi (~Tobbi@2a02:8108:1240:48ec:7d5c:9df3:79fe:43ff) (Quit: My MacBook has gone to sleep. ZZZzzz…)
[07:19:11] *** Quits: dapinitial (~dpuerto@136-27-83-52.cab.webpass.net) (Remote host closed the connection)
[07:19:28] *** Joins: c4017w__ (~c4017@209.52.68.8)
[07:20:37] <ThePendulum> that source might get hacked though
[07:22:58] *** Quits: c4017w_ (~c4017@209.52.68.8) (Ping timeout: 260 seconds)
[07:25:05] *** Joins: k8yun (~k8yun@198-48-158-40.cpe.pppoe.ca)
[07:29:25] *** Quits: CalamityToo (~CalamityB@2603-8000-d907-cec8-205e-a251-a079-a4d7.res6.spectrum.com) (Read error: Connection reset by peer)
[07:31:31] *** Quits: simius (~simius@user/simius) (Ping timeout: 256 seconds)
[07:33:13] *** Joins: simius (~simius@user/simius)
[07:36:03] *** Quits: wroathe (~wroathe@user/wroathe) (Ping timeout: 256 seconds)
[07:40:22] <KevinX> Rockwood for what? :)
[07:42:07] *** Quits: pmercado (~pmercado@190.22.165.59) (Ping timeout: 250 seconds)
[07:42:51] *** Joins: dapinitial (~dpuerto@136-27-83-52.cab.webpass.net)
[07:42:57] *** Quits: stagas (~stagas@2a02:587:c441:b777:b914:15bd:5515:2a1f) (Ping timeout: 240 seconds)
[07:44:14] <jaawerth> tbh it's dumb that the DOM doesn't have a builtin for doing that by now. PHP has it! The DOM obviously has an underlying mechanism for it! Come on, whatwg
[07:45:07] <Rockwood> KevinX, List.js is works very well now
[07:45:17] <KevinX> nice
[07:50:35] *** Quits: dapinitial (~dpuerto@136-27-83-52.cab.webpass.net) (Ping timeout: 250 seconds)
[07:51:36] <Rockwood> KevinX, next i will make it correct
[07:51:47] <Rockwood> but right now my shop time cya thanks
[07:51:49] *** Quits: Rockwood (~Rocky@user/rocky) (Quit: The Time is Over)
[07:51:51] *** Joins: wroathe (~wroathe@206-55-188-8.fttp.usinternet.com)
[07:51:51] *** Quits: wroathe (~wroathe@206-55-188-8.fttp.usinternet.com) (Changing host)
[07:51:51] *** Joins: wroathe (~wroathe@user/wroathe)
[07:55:19] *** Joins: dapinitial (~dpuerto@136-27-83-52.cab.webpass.net)
[07:58:21] *** Joins: nomic (~nomic@185.198.243.198)
[07:59:05] *** Joins: dave0 (~davezero@069.d.003.ncl.iprimus.net.au)
[08:00:43] <deltab> could you do it with DOMParser or DocumentFragment?
[08:04:39] <deltab> "The definition of scripting is disabled means that, amongst others, the following scripts will not execute: scripts in XMLHttpRequest's responseXML
[08:04:42] <deltab> documents, scripts in DOMParser-created documents, scripts in documents created by XSLTProcessor's transformToDocument feature, and scripts that are
[08:04:45] <deltab> first inserted by a script into a Document that was created using the createDocument() API." -- HTML spec
[08:05:19] <theskillwithin> are we talking about like http://underscorejs.org/#unescape ?
[08:05:37] <theskillwithin> https://lodash.com/docs/4.17.15#unescape
[08:06:12] <theskillwithin> sickdyd
[08:07:36] <deltab> that's limited to those five entities; if that's all you need, sure, use string replacement
[08:08:51] <theskillwithin> deltab ahh i should have read it.   "Note: No other HTML entities are unescaped. To unescape additional HTML entities use a third-party library like he."
[08:09:09] <theskillwithin> this is "
[08:09:14] <theskillwithin> "he"  https://github.com/mathiasbynens/he
[08:09:26] <jaawerth> deltab: not sure that precloads inline event hacks and such thoough
[08:11:56] <jaawerth> hmm actually yeah if you don't attach it I thin it'd be fine, it's be the same as loading with XHR, which the spec also mentions
[08:13:46] <jaawerth> sickdyd: ^
[08:19:45] <deltab> looks like using an element would be hazardous, and DOMParser is the way to go: https://stackoverflow.com/questions/1912501/
[08:19:57] *** Joins: c4017w_ (~c4017@209.52.68.8)
[08:23:39] *** Quits: c4017w__ (~c4017@209.52.68.8) (Ping timeout: 256 seconds)
[08:25:02] *** Quits: chenqisu1 (~chenqisu1@183.217.200.249) (Ping timeout: 260 seconds)
[08:25:27] <silly> TC&#39;
[08:26:43] *** Joins: junebug (~junebug@2600:1700:3db0:2540:20e5:b214:6f9d:aa59)
[08:27:41] *** Joins: ekathva (~ekathva@2001:999:50:cab1:59c2:628d:2b45:2b24)
[08:28:00] *** Quits: junebug (~junebug@2600:1700:3db0:2540:20e5:b214:6f9d:aa59) (Remote host closed the connection)
[08:29:11] <jaawerth> oh yeah element is a big no
[08:29:32] <jaawerth> DOMParser is safe so long as you aren't inserting anything you pull it except text nodes, though
[08:29:44] *** Quits: bobdobbs (~user@2406:5a00:4456:db00:edec:be3c:e9b3:23e0) (Remote host closed the connection)
[08:30:29] <jaawerth> there's always CSP but by then you may as well use a library, lol
[08:31:18] *** Joins: han-solo (~hanish@user/han-solo)
[08:31:54] <theskillwithin> dangerous inserting
[08:32:39] <sickdyd> theskillwithin, jaawerth: thanks, it looks like the only one used is & so I'll manually replace that one for now
[08:33:14] *** Quits: banana_ (~banana_@user/banana/x-2944094) (Ping timeout: 252 seconds)
[08:35:19] <jaawerth> there's always that, lol
[08:35:37] *** Quits: wroathe (~wroathe@user/wroathe) (Ping timeout: 240 seconds)
[08:41:52] *** Joins: wroathe (~wroathe@206-55-188-8.fttp.usinternet.com)
[08:41:52] *** Quits: wroathe (~wroathe@206-55-188-8.fttp.usinternet.com) (Changing host)
[08:41:52] *** Joins: wroathe (~wroathe@user/wroathe)
[08:46:39] *** Quits: wroathe (~wroathe@user/wroathe) (Ping timeout: 256 seconds)
[08:51:57] *** Joins: maret (~maret@nat-88-212-37-89.antik.sk)
[08:56:09] *** Quits: optimant (~asavage@user/optimant) (Quit: nyaa~)
[08:56:31] *** Quits: maret (~maret@nat-88-212-37-89.antik.sk) (Ping timeout: 256 seconds)
[09:01:10] *** Joins: k8yun_ (~k8yun@24.244.29.99)
[09:05:10] *** Quits: k8yun (~k8yun@198-48-158-40.cpe.pppoe.ca) (Ping timeout: 260 seconds)
[09:09:13] *** Quits: scoobydoo (~scooby@user/scoobydoo) (Ping timeout: 256 seconds)
[09:11:13] *** Joins: D4mned (~D1mned@212.101.253.71)
[09:14:09] *** Joins: masoudd (~masoudd@user/masoudd)
[09:16:37] *** Joins: garrit (~garrit@ip-109-42-114-236.web.vodafone.de)
[09:16:37] *** Quits: garrit (~garrit@ip-109-42-114-236.web.vodafone.de) (Changing host)
[09:16:37] *** Joins: garrit (~garrit@user/garrit)
[09:16:52] *** Quits: dodobrain (~dodobrain@user/dodobrain) (Remote host closed the connection)
[09:17:07] *** Joins: scoobydoo (~scooby@user/scoobydoo)
[09:17:32] *** Joins: stagas (~stagas@2a02:587:c441:b777:a4f9:d376:ddc4:9436)
[09:17:35] *** Joins: dodobrain (~dodobrain@user/dodobrain)
[09:18:49] *** Joins: minto (~mintograd@47.201.5.61)
[09:20:28] *** Joins: c4017w__ (~c4017@209.52.68.8)
[09:20:43] *** Quits: garrit (~garrit@user/garrit) (Ping timeout: 250 seconds)
[09:21:05] *** Joins: garrit (~garrit@p4fc2f9b4.dip0.t-ipconnect.de)
[09:21:05] *** Quits: garrit (~garrit@p4fc2f9b4.dip0.t-ipconnect.de) (Changing host)
[09:21:05] *** Joins: garrit (~garrit@user/garrit)
[09:21:47] *** Quits: mintograde (~mintograd@47.201.5.61) (Ping timeout: 250 seconds)
[09:24:17] *** Quits: c4017w_ (~c4017@209.52.68.8) (Ping timeout: 256 seconds)
[09:25:21] *** Quits: ferdna (~ferdna@user/ferdna) (Quit: Leaving)
[09:27:25] *** Quits: zebrag (~chris@user/zebrag) (Remote host closed the connection)
[09:36:54] *** Quits: spronkey (~spronkey@122-58-75-76-adsl.sparkbb.co.nz) (Quit: you are feeeling very sleeeeeepyy......)
[09:41:54] *** Quits: whatsupdoc (uid509081@id-509081.hampstead.irccloud.com) (Quit: Connection closed for inactivity)
[09:42:30] *** Joins: thojanssens (~thojansse@49.230.76.241)
[09:46:39] *** Joins: thojanssens_ (~thojansse@49.230.76.241)
[09:46:58] *** Quits: thojanssens_ (~thojansse@49.230.76.241) (Read error: Connection reset by peer)
[09:49:02] *** Quits: thojanssens (~thojansse@49.230.76.241) (Ping timeout: 260 seconds)
[09:53:01] *** Joins: paule32 (~paul@nat-91-137-17-17.net.encoline.de)
[09:53:01] *** Quits: paule32 (~paul@nat-91-137-17-17.net.encoline.de) (Changing host)
[09:53:01] *** Joins: paule32 (~paul@user/paule32)
[09:53:25] *** Quits: mat001_ (~mat001@c-69-181-155-247.hsd1.ca.comcast.net) (Ping timeout: 256 seconds)
[09:54:08] *** Quits: nomic (~nomic@185.198.243.198) (Quit: Leaving)
[09:54:37] *** Quits: ycon (~ycon@2001:8003:332f:4700:cec:9c75:c671:2f4a) (Remote host closed the connection)
[09:57:39] *** Quits: JohnComputation (~JohnCompu@gateway/tor-sasl/johncomputation) (Ping timeout: 276 seconds)
[09:58:24] *** Joins: dan01 (~dan01@2a02:2f09:3913:cc00:1d8d:6567:868f:a9e0)
[10:02:44] *** Joins: JohnComputation (~JohnCompu@gateway/tor-sasl/johncomputation)
[10:05:31] *** Joins: banana_ (~banana_@user/banana/x-2944094)
[10:10:46] *** Joins: baracurda_ (~baracurda@user/parserblabla)
[10:11:27] *** Quits: reallymemorable (~reallymem@2601:180:8300:8fd0:4812:9a4c:6b8c:661c) (Remote host closed the connection)
[10:14:53] *** Quits: dapinitial (~dpuerto@136-27-83-52.cab.webpass.net) (Remote host closed the connection)
[10:14:59] *** Quits: audiobirb (~audio@user/audio) (Ping timeout: 252 seconds)
[10:17:03] *** Joins: dapinitial (~dpuerto@136-27-83-52.cab.webpass.net)
[10:19:37] *** Quits: znf (ibm86@blender.linge-ma.ro) (Excess Flood)
[10:20:57] *** Joins: c4017w_ (~c4017@209.52.68.8)
[10:21:31] *** Quits: dapinitial (~dpuerto@136-27-83-52.cab.webpass.net) (Ping timeout: 256 seconds)
[10:21:43] *** Joins: oscurochu (~oscurochu@097-096-050-227.res.spectrum.com)
[10:22:16] *** Joins: znf (ibm86@2001:19f0:5001:3600:5400:3ff:fecd:9ee5)
[10:22:49] <oscurochu> join /docker
[10:23:08] *** Parts: oscurochu (~oscurochu@097-096-050-227.res.spectrum.com) (Leaving)
[10:24:25] *** Quits: c4017w__ (~c4017@209.52.68.8) (Ping timeout: 250 seconds)
[10:25:07] *** Quits: lefteye (~wbrawner@c-67-190-106-99.hsd1.co.comcast.net) (Quit: The Lounge - https://thelounge.chat)
[10:26:41] *** Joins: lefteye (~lefteye@c-67-190-106-99.hsd1.co.comcast.net)
[10:30:14] *** Joins: sam_1 (~sam_1@87.51.251.118)
[10:30:24] *** Quits: dodobrain (~dodobrain@user/dodobrain) (Ping timeout: 260 seconds)
[10:32:32] *** Joins: dilip (~dilip@42.111.128.231)
[10:36:15] *** Quits: daniel-k3 (~daniel-k@fsf/emeritus/daniel-k) (Remote host closed the connection)
[10:36:32] *** Joins: daniel-k3 (~daniel-k@fsf/emeritus/daniel-k)
[10:36:46] *** Joins: spronkey (~spronkey@2002:7a3a:4b4c:0:2095:9fa1:3c22:78a0)
[10:37:50] *** Quits: spronkey (~spronkey@2002:7a3a:4b4c:0:2095:9fa1:3c22:78a0) (Client Quit)
[10:40:45] <thomas25> it feels weird that this made it news: https://leaningtech.com/webvm-server-less-x86-virtual-machines-in-the-browser/
[10:42:00] <thomas25> given that this exists for quite some time now: https://bellard.org/jslinux/news.html
[10:42:00] *** Quits: garrit (~garrit@user/garrit) (Read error: Connection reset by peer)
[10:42:16] *** Joins: garrit (~garrit@p4fc2f9b4.dip0.t-ipconnect.de)
[10:42:16] *** Quits: garrit (~garrit@p4fc2f9b4.dip0.t-ipconnect.de) (Changing host)
[10:42:16] *** Joins: garrit (~garrit@user/garrit)
[10:43:36] *** Quits: k8yun_ (~k8yun@24.244.29.99) (Read error: Connection reset by peer)
[10:44:45] *** Quits: plitter (~plitter@user/plitter) (Ping timeout: 256 seconds)
[10:45:13] *** Joins: maret (~maret@nat-88-212-37-89.antik.sk)
[10:49:14] *** Quits: banana_ (~banana_@user/banana/x-2944094) (Quit: Leaving)
[10:49:55] *** Joins: mexen (uid495612@user/mexen)
[10:58:56] *** Joins: fweht (uid404746@id-404746.lymington.irccloud.com)
[11:02:33] *** Quits: dilip (~dilip@42.111.128.231) (Ping timeout: 250 seconds)
[11:13:34] *** Joins: magga (magga@ti0036a400-3577.bb.online.no)
[11:17:09] *** Quits: sheetjs (~sheetjs@pool-108-53-213-150.nwrknj.fios.verizon.net) (Quit: Leaving...)
[11:19:32] *** Joins: dilip (~dilip@42.111.129.183)
[11:19:54] *** Joins: chenqisu1 (~chenqisu1@183.217.200.249)
[11:20:22] *** Quits: dilip (~dilip@42.111.129.183) (Remote host closed the connection)
[11:20:38] *** Quits: chenqisu1 (~chenqisu1@183.217.200.249) (Max SendQ exceeded)
[11:20:45] *** Joins: dilip (~dilip@42.111.129.183)
[11:21:01] *** Joins: Tobbi (~Tobbi@ip1f115d4d.dynamic.kabel-deutschland.de)
[11:21:05] *** Joins: chenqisu1 (~chenqisu1@183.217.200.249)
[11:21:28] *** Joins: c4017w__ (~c4017@209.52.68.8)
[11:24:59] *** Quits: c4017w_ (~c4017@209.52.68.8) (Ping timeout: 256 seconds)
[11:25:09] *** Joins: pycode1 (~pycode3@2001:b07:5d28:551:c4ad:fd57:ed84:5b22)
[11:25:17] *** Joins: dilip_ (~dilip@42.111.129.183)
[11:25:19] *** Quits: dilip (~dilip@42.111.129.183) (Read error: Connection reset by peer)
[11:25:53] *** Quits: Tobbi (~Tobbi@ip1f115d4d.dynamic.kabel-deutschland.de) (Ping timeout: 256 seconds)
[11:25:58] *** Quits: szkl (uid110435@id-110435.uxbridge.irccloud.com) (Quit: Connection closed for inactivity)
[11:28:48] *** Quits: cinderblock (~cinderblo@firefly.isozilla.com) (Quit: kthxbai!)
[11:29:23] *** Joins: dilip__ (~dilip@42.111.129.183)
[11:29:26] *** Quits: dilip_ (~dilip@42.111.129.183) (Read error: Connection reset by peer)
[11:29:33] *** Joins: cinderblock (~cinderblo@firefly.isozilla.com)
[11:30:56] *** Quits: dilip__ (~dilip@42.111.129.183) (Read error: Connection reset by peer)
[11:31:41] *** Joins: Guest52 (~Guest52@213.162.65.110)
[11:32:29] *** Joins: Booster2ooo (~Booster2o@user/booster2ooo)
[11:34:25] *** Quits: _mikey (~mikey@user/mikey/x-4335048) (Quit: WeeChat 3.4)
[11:35:14] <fweht> if my linter complains everytime i  use `==` or `!=`, why do these operators exist at all?  is `3!=4` not a valid statement?
[11:36:15] <leduyquang753> `==` attempts to coerce sides into the same type, which might be unsafe. There is `===` immediately returning `false` if two sides are of different types.
[11:36:21] *** Joins: interop_madness (~interop_m@user/interop-madness/x-0950004)
[11:37:07] <leduyquang753> n>"5" == 5
[11:37:08] <jellobot> (okay) true
[11:37:14] <leduyquang753> n>"5" === 5
[11:37:14] <jellobot> (okay) false
[11:38:17] *** Joins: Tobbi (~Tobbi@2a02:8108:1240:48ec:ed88:aae9:3bf6:fcb5)
[11:38:58] *** Joins: gtristan (~tristan@223.33.165.49)
[11:41:24] <fweht> leduyquang753: thank you!
[11:44:38] * gtristan returns here after a very long time of not writing any JS ...
[11:44:55] *** Joins: nomic (~nomic@185.198.243.198)
[11:45:06] <gtristan> I'm looking for a way, possibly using underscore.js, to flatten an arbitrarily nested hierarchy of simple objects
[11:45:18] <gtristan> An example of what that might look like in JSON: https://bpa.st/IJZQ
[11:46:50] <gtristan> So far from what I can gather, _.flatten() by itself won't do the trick for me - I could write a recursive function to append items to an array by brute force, but was hoping to find something more elegant (which might not be using deep recursion under the hood)
[11:47:05] *** Joins: ekathva_ (~ekathva@2001:999:50:cab1:cb06:9935:dc:f7e7)
[11:47:07] <gtristan> Any ideas ? Am I missing something simple I can do with _.js ?
[11:49:33] *** Quits: ekathva (~ekathva@2001:999:50:cab1:59c2:628d:2b45:2b24) (Ping timeout: 250 seconds)
[11:55:20] * gtristan notices his arbitrary example missed brackets "[" and "]" to denote that "children" should actually be lists of objects, but that is rather immaterial pedantry
[11:57:42] *** Joins: i0e (~is0ke3@user/is0ke3)
[12:04:31] <silly> this is why underscore, lodash and the likes are gross
[12:04:53] *** Quits: cthulchu (~Cthulchu@69-172-160-196.cable.teksavvy.com) (Ping timeout: 256 seconds)
[12:06:13] *** Joins: sheetjs (~sheetjs@user/sheetjs)
[12:06:14] <silly> you waste an hour searching through a metric ton of functions and if you find something, it's almost the thing you need but you still end up writing your own
[12:06:39] *** Joins: perrierjouet (~perrier-j@modemcable012.251-130-66.mc.videotron.ca)
[12:08:42] *** Joins: varaindemian (uid73404@id-73404.ilkley.irccloud.com)
[12:09:31] *** Joins: monoxane5 (~monoxane@user/monoxane)
[12:10:57] *** Quits: monoxane (~monoxane@user/monoxane) (Ping timeout: 240 seconds)
[12:10:57] *** monoxane5 is now known as monoxane
[12:11:00] *** Joins: dilip (~dilip@42.111.129.183)
[12:11:24] *** Joins: ekathva (~ekathva@2001:999:50:cab1:b7e8:130b:c792:9fd)
[12:11:25] *** Quits: ekathva (~ekathva@2001:999:50:cab1:b7e8:130b:c792:9fd) (Remote host closed the connection)
[12:11:59] *** Joins: rootkea (~rootmonk@user/rootkea)
[12:13:49] *** Quits: Akiva (~Akiva@user/Akiva) (Ping timeout: 250 seconds)
[12:21:39] <entropygain> gtristan: you like sql?
[12:21:57] *** Joins: c4017w_ (~c4017@209.52.68.8)
[12:22:11] <entropygain> gtristan: sometimes i like to use "alasql"
[12:22:49] <entropygain> which allows you to manipulate js data with sql statements
[12:23:36] <entropygain> can't speak to deep recursions but i bet it is heavily optimized
[12:24:41] *** Joins: rootmonk_ (~rootmonk@103.81.36.221)
[12:25:50] *** Quits: rootkea (~rootmonk@user/rootkea) (Ping timeout: 260 seconds)
[12:25:51] *** Quits: c4017w__ (~c4017@209.52.68.8) (Ping timeout: 256 seconds)
[12:28:43] *** Parts: rootmonk_ (~rootmonk@103.81.36.221) ()
[12:29:26] *** Joins: rootkea (~rootmonk@user/rootkea)
[12:30:40] <silly> "heavily optimized" that's a good one :F
[12:37:20] <sickdyd> hey guys    guys    hey guys listen     hey    my boss said    hey guys    my boss said he wants a "production grade proof of concept"
[12:38:59] <silly> sickdyd, sounds reasonable
[12:40:01] *** Quits: quazimodo (~quazimodo@n110-21-88-214.bla2.nsw.optusnet.com.au) (Ping timeout: 256 seconds)
[12:40:13] <silly> if you read between the lines, it's "give me a finished product in a tenth of the time you'd usually need"
[12:40:35] <silly> every boss wants that
[12:42:13] *** Joins: Guest32 (~Guest32@103.81.36.221)
[12:42:45] <sickdyd> hilarious
[12:45:08] *** Joins: thiras (~thiras@user/thiras)
[12:47:03] *** Quits: rootkea (~rootmonk@user/rootkea) (Quit: Leaving)
[12:47:54] *** Quits: Betal (~Betal@user/betal) (Quit: WeeChat 3.4)
[12:50:35] *** Joins: rootkea (~rootkea@user/rootkea)
[12:58:30] *** Quits: dilip (~dilip@42.111.129.183) (Remote host closed the connection)
[12:58:50] *** Joins: dilip (~dilip@42.111.129.183)
[12:59:30] *** Joins: naan (~Naan@user/naan)
[13:04:31] *** Quits: dilip (~dilip@42.111.129.183) (Read error: Connection reset by peer)
[13:05:12] *** Joins: lara99 (~lara99@93-36-163-139.ip61.fastwebnet.it)
[13:11:08] *** Joins: N4buc0 (~N4buc0@179.178.58.130)
[13:18:42] *** Quits: nomic (~nomic@185.198.243.198) (Quit: Leaving)
[13:19:00] *** Joins: nomic (~nomic@185.198.243.198)
[13:19:19] *** Quits: Guest52 (~Guest52@213.162.65.110) (Quit: Client closed)
[13:22:28] *** Joins: c4017w__ (~c4017@209.52.68.8)
[13:22:51] *** Joins: heatwave (~heatwave@2401:4900:1c22:7b9b:8338:3e49:d644:6c7c)
[13:25:49] *** Quits: c4017w_ (~c4017@209.52.68.8) (Ping timeout: 240 seconds)
[13:28:21] *** Quits: jazzy (~jaziz@user/jaziz) (Ping timeout: 250 seconds)
[13:35:03] *** Quits: sheetjs (~sheetjs@user/sheetjs) (Remote host closed the connection)
[13:35:37] *** Quits: gtristan (~tristan@223.33.165.49) (Ping timeout: 240 seconds)
[13:37:06] *** Joins: mseidl (~flughafen@p57969381.dip0.t-ipconnect.de)
[13:41:05] *** Quits: dffo^ (~dffo@128-092-182-020.biz.spectrum.com) (Remote host closed the connection)
[13:47:33] *** Quits: sickdyd (~sickd@120.51.82.69.ap.gmobb-fix.jp) (Ping timeout: 256 seconds)
[13:52:08] *** Joins: taupiqueur (~taupiqueu@lmontsouris-659-1-2-186.w193-248.abo.wanadoo.fr)
[13:54:15] *** Quits: i0e (~is0ke3@user/is0ke3) (Ping timeout: 256 seconds)
[13:54:35] *** Quits: lara99 (~lara99@93-36-163-139.ip61.fastwebnet.it) (Ping timeout: 256 seconds)
[13:56:59] *** Quits: mintoyatsu (~mint@user/mintoyatsu) (Remote host closed the connection)
[13:59:52] *** Quits: JohnComputation (~JohnCompu@gateway/tor-sasl/johncomputation) (Remote host closed the connection)
[14:00:08] *** Joins: JohnComputation (~JohnCompu@gateway/tor-sasl/johncomputation)
[14:11:16] *** Quits: Booster2ooo (~Booster2o@user/booster2ooo) (Quit: The Game)
[14:16:18] *** Joins: Booster2ooo (~Booster2o@user/booster2ooo)
[14:22:57] *** Joins: c4017w_ (~c4017@209.52.68.8)
[14:26:42] *** Quits: c4017w__ (~c4017@209.52.68.8) (Ping timeout: 260 seconds)
[14:27:47] *** Quits: nomic (~nomic@185.198.243.198) (Quit: Leaving)
[14:31:20] *** Joins: sickdyd (~sickd@120.51.82.69.ap.gmobb-fix.jp)
[14:33:55] *** Quits: qwedfg (~qwedfg@user/qwedfg) (Quit: ZNC - https://znc.in)
[14:34:55] *** Joins: qwedfg (~qwedfg@user/qwedfg)
[14:35:43] *** Quits: xse (~xse@user/xse) (Ping timeout: 256 seconds)
[14:35:44] *** Joins: nomic (~nomic@185.198.243.198)
[14:35:47] *** Joins: xse_ (~xse@user/xse)
[14:36:17] *** Quits: sickdyd (~sickd@120.51.82.69.ap.gmobb-fix.jp) (Ping timeout: 256 seconds)
[14:36:25] *** xse_ is now known as xse
[14:37:54] *** Joins: i0e (~is0ke3@user/is0ke3)
[14:39:54] *** Joins: g2anj (~v@58.228.230.4)
[14:41:04] *** Joins: blacked (~blacked@user/blacked)
[14:46:28] *** Joins: OnkelTem (~OnkelTem@user/onkeltem)
[14:47:32] *** Quits: naan (~Naan@user/naan) (Ping timeout: 240 seconds)
[14:48:59] *** Quits: i0e (~is0ke3@user/is0ke3) (Ping timeout: 256 seconds)
[14:52:10] *** Quits: Guest32 (~Guest32@103.81.36.221) (Quit: Connection closed)
[14:53:04] *** Parts: blacked (~blacked@user/blacked) ()
[14:54:10] *** Joins: i0e (~is0ke3@user/is0ke3)
[15:01:06] *** Joins: eXtr3m0 (~eXtr3m0@p4fd3ac0f.dip0.t-ipconnect.de)
[15:06:46] *** Joins: sickdyd (~sickd@120.51.82.69.ap.gmobb-fix.jp)
[15:08:30] *** Quits: Booster2ooo (~Booster2o@user/booster2ooo) (Read error: Connection reset by peer)
[15:12:27] *** Quits: sickdyd (~sickd@120.51.82.69.ap.gmobb-fix.jp) (Ping timeout: 256 seconds)
[15:23:28] *** Joins: c4017w__ (~c4017@209.52.68.8)
[15:27:17] *** Quits: c4017w_ (~c4017@209.52.68.8) (Ping timeout: 256 seconds)
[15:32:11] *** Quits: D4mned (~D1mned@212.101.253.71) (Read error: Connection reset by peer)
[15:32:59] *** Quits: duds- (~duds-@user/duds) (Remote host closed the connection)
[15:33:47] *** Joins: duds- (~duds-@user/duds)
[15:33:52] *** Joins: D4mned (~D1mned@212.101.251.204)
[15:41:06] *** Joins: sickdyd (~sickd@120.51.82.69.ap.gmobb-fix.jp)
[15:42:00] *** Joins: otisolsen70 (~otisolsen@xd4ed80b5.cust.hiper.dk)
[15:42:22] *** Joins: CiaoSen (~Jura@p200300c95737a2002a3a4dfffe84dbd5.dip0.t-ipconnect.de)
[15:43:17] *** Joins: pulse (~pulse@user/pulse)
[15:45:07] *** Joins: pmercado (~pmercado@190.22.165.59)
[15:45:53] *** Quits: sickdyd (~sickd@120.51.82.69.ap.gmobb-fix.jp) (Ping timeout: 256 seconds)
[15:48:00] *** Joins: moti86 (~moti86@106.202.90.81)
[15:49:01] *** Quits: dave0 (~davezero@069.d.003.ncl.iprimus.net.au) (Quit: dave's not here)
[15:51:52] *** Quits: gopar (~gopar@c-67-164-79-22.hsd1.ca.comcast.net) (Remote host closed the connection)
[15:59:53] *** Joins: sickdyd (~sickd@120.51.82.69.ap.gmobb-fix.jp)
[16:00:21] *** Quits: pycode1 (~pycode3@2001:b07:5d28:551:c4ad:fd57:ed84:5b22) (Ping timeout: 245 seconds)
[16:04:35] *** Quits: sickdyd (~sickd@120.51.82.69.ap.gmobb-fix.jp) (Ping timeout: 250 seconds)
[16:05:27] *** Quits: moti86 (~moti86@106.202.90.81) (Quit: Client closed)
[16:05:29] *** Quits: thiras (~thiras@user/thiras) (Ping timeout: 256 seconds)
[16:06:25] *** Joins: gproto23 (~gproto23@user/gproto23)
[16:12:21] *** Quits: D4mned (~D1mned@212.101.251.204) (Read error: Connection reset by peer)
[16:12:23] *** Joins: D3mned (~D1mned@212.101.251.204)
[16:16:08] *** Quits: pizdets (~pizdets@183.182.114.157) (Read error: Connection reset by peer)
[16:16:21] *** Joins: pizdets (~pizdets@183.182.114.157)
[16:17:12] *** Quits: D3mned (~D1mned@212.101.251.204) (Client Quit)
[16:23:57] *** Joins: c4017w_ (~c4017@209.52.68.8)
[16:27:34] *** Quits: c4017w__ (~c4017@209.52.68.8) (Ping timeout: 250 seconds)
[16:34:12] <OnkelTem> Hi folks
[16:35:00] <OnkelTem> I'm stuck trying to figure out what the heck is going on with HTTP2 support in browsers
[16:35:28] <OnkelTem> According to: https://caniuse.com/http2 all modern browsers do support HTTP2
[16:35:39] <OnkelTem> Yet, I can't find a library which allows to use it
[16:36:33] <OnkelTem> Specifically, I'm trying to compile a simple gRPC client and it requires 'http2' lib. Node natively supports it, but it doesn't seem like there is a lib for browsers
[16:37:07] *** Joins: mknod (~mknod@user/mknod)
[16:38:47] <OnkelTem> Does it mean that we can't really use all the charm of HTTP2 even now in 2022?
[16:39:06] *** Quits: eXtr3m0 (~eXtr3m0@p4fd3ac0f.dip0.t-ipconnect.de) (Ping timeout: 245 seconds)
[16:40:11] <OnkelTem> This is so confusing...
[16:44:20] *** Joins: ejjfunky (~ejjfunky@125.164.23.217)
[16:44:45] *** Quits: nomic (~nomic@185.198.243.198) (Quit: Leaving)
[16:45:21] <ejjfunky> hi all. i got a java function that takes in 1 input parameter. foo(arg)
[16:45:29] *** Quits: chenqisu1 (~chenqisu1@183.217.200.249) (Ping timeout: 256 seconds)
[16:45:29] <ejjfunky> javascript*
[16:45:45] <ejjfunky> why no error when i do foo(arg1, arg2);
[16:46:50] <Cork> ejjfunky: javascript doesn't validate function declaration
[16:47:14] <Cork> n> function call(a,b,c,d) { console.log(a,b,c,d); }; call(1)
[16:47:16] <jellobot> (okay) 1 undefined undefined undefined
[16:47:32] <Cork> n> function call(a,b,c,d) { console.log(a,b,c,d); }; call(1,2,3,4,5,6,7,8,9,0)
[16:47:33] <jellobot> (okay) 1 2 3 4
[16:47:34] <ejjfunky> how can i catch all input parameters?
[16:47:58] <ejjfunky> just basing on function foo(arg); foo("test1", "test2", ...);
[16:48:19] <Cork> depends in es5 and older you use arguments
[16:48:27] <Cork> in es6+ use argument stread
[16:48:30] <Cork> *spread
[16:48:40] <Cork> https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Operators/Spread_syntax
[16:49:15] <Cork> https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Functions/arguments
[16:49:37] <ejjfunky> Cork, very nice. Thank you!
[16:49:41] <Cork> np
[16:52:16] <OnkelTem> I hate the thought that I have to create one more shitty client using polling
[16:52:36] <OnkelTem> I hate polling, it's so stupid
[16:52:41] <Cork> ouch, why not websocket?
[16:52:53] <Cork> ya, polling sucks
[16:53:19] <OnkelTem> because websockets are not intended to be used by normal people :)
[16:53:34] <Cork> O_o it isn't?
[16:54:11] <Cork> i know php sucks quite badly with websockets but else it usually works quite well
[16:54:31] <OnkelTem> ws are too low-level, they cannot be integrated with just anything
[16:54:42] <Cork> sure they can
[16:54:46] <OnkelTem> no server-side or client-side solutions of a higher level
[16:55:09] <Cork> client side is build into any browser, can you do ajax you can do websockets
[16:55:14] <Cork> server side is a different matter
[16:55:41] <OnkelTem> not a different, why? If you have an app with two sides, they should talk the same protocol
[16:55:42] *** Joins: sickdyd (~sickd@120.51.82.69.ap.gmobb-fix.jp)
[16:55:51] <OnkelTem> and can you name a single protocol for websockets?
[16:56:13] <Cork> OnkelTem: its is tcp, just send json or what ever you need
[16:56:23] <OnkelTem> Ahhah
[16:56:26] <OnkelTem> Yeah, it's IP
[16:56:29] <Cork> i've used both bjson and json with it, (bjson to include binary)
[16:56:33] <Cork> no not ip...
[16:57:05] <Cork> tcp as in the data package going between two computers to send data over networks
[16:57:24] <Cork> same as http pre 2.0 uses
[16:57:32] *** Joins: mlok (~mlok@62.77.75.34)
[16:59:11] <OnkelTem> Look. TCP as well as WS are too low level to be used in apps
[16:59:23] <OnkelTem> one doesn't simply make OpenAPI work via websocket!
[16:59:29] <OnkelTem> a restful api
[16:59:37] <OnkelTem> and there is no any wrapper or something to get it working
[16:59:50] <Cork> ok, if that floats your bubble use pulling
[16:59:56] <OnkelTem> to turn your API responses into streams really
[17:00:20] <Cork> it alrweady is a stream so... well what ever
[17:00:27] *** Quits: sickdyd (~sickd@120.51.82.69.ap.gmobb-fix.jp) (Ping timeout: 256 seconds)
[17:00:39] *** Joins: pycode1 (~pycode3@2001:b07:5d28:551:afe0:99df:7fb3:d84b)
[17:01:14] <OnkelTem> when I make a request (any request) I want to receive a stream of object versions
[17:01:25] <Cork> ok?
[17:01:32] <Cork> so just encode it on the server side and send it
[17:01:35] <OnkelTem> and this stream should receive new items when there are updates on the server
[17:01:51] <Cork> that is what websockets is normally for ya
[17:02:17] <Cork> the hard part is to figure out what is changed server side so it can send it
[17:02:28] <Cork> the rest is very simple
[17:03:27] <OnkelTem> I don't see how it's simple
[17:03:34] <Cork> i see that
[17:03:42] <OnkelTem> in my view it's quite complicated
[17:04:02] <Cork> not really, decode the encoded data loop the set and update the local store
[17:04:10] <Cork> the then wait for the next set
[17:04:24] <OnkelTem> Manually? All that?
[17:04:31] <OnkelTem> Is there a library which can do that?
[17:04:37] <Cork> ut its like 3-5 lines of js...
[17:04:48] <Cork> uh*
[17:05:27] <OnkelTem> really? wow
[17:05:49] <Cork> like i said, the hard part is to get the server to know when things changes and notify everyone that cares
[17:05:52] <Cork> that is tricky
[17:06:02] <Cork> just spooling up the updates is dead simple
[17:06:35] <OnkelTem> How to determine which response relates to which request? Those 3-4 lines include it?
[17:07:06] <Cork> OnkelTem: you don't request anything
[17:07:09] <Cork> as it is pushed updates
[17:07:28] <Cork> the update contains what is updated so the client can put it where it belongs
[17:07:59] <Cork> if you want the client to subscribe to areas that is a separate request (can still be in ws)
[17:08:13] <Cork> the server still says what is updated not the client
[17:10:48] <OnkelTem> I think you're oversimplifying things really. I said we use OpenAPI for example. It has 3000+ lines of code - data schemas, requests, reponses. And all those responses come marged in one reply via ws. And like making it work on the client-side is "dead simple". Seriously?
[17:10:57] *** Joins: sudorm (~sudorm@2a01cb06a002be47d903666039764951.ipv6.abo.wanadoo.fr)
[17:10:58] <sudorm> Hi
[17:11:21] <sudorm> do you know if there is a DB of all .com domain names that are currently registred?
[17:11:39] <Cork> OnkelTem: depends on how much you can get the server to actually do the job, yes it is
[17:11:50] <sudorm> I've only found a few websites with super expensive databases
[17:12:12] <Cork> sudorm: no, you can use some apis that you can use to check
[17:12:20] <Cork> db isn't possible as it would change way to often
[17:12:38] <Cork> (several hundred times a minute)
[17:12:44] <sudorm> Cork, a DB as of today would be ok
[17:12:59] <sudorm> I'm ok if 0.0001% of them have changed in the past month
[17:13:03] <Cork> as not many find that usefull, no
[17:13:42] <sudorm> Cork, yes I have found API but i'd prefer a gigantic CSV that I can parse myself in JS
[17:14:03] <sudorm> so I can do as many requests as I want without having to pay for every request
[17:14:18] <Cork> ya, but that would require someone to actually export it all into a csv
[17:14:33] <Cork> and that someone would be verisign, so good luck with that
[17:14:43] <sudorm> Cork, haha, right!
[17:15:29] <Cork> sudorm: to be a little more specific, registrars only have epp access, and you can't list domains there
[17:15:36] <Cork> hence you can't make a list of everything
[17:15:52] <Cork> only the registry can do that as they are the only one with a complete list
[17:16:39] <sudorm> Cork, yes you're right... so it seems difficult
[17:16:43] <Cork> (and big parts of this is actually intentionally for privacy, hording reasons)
[17:16:58] <Cork> sudorm: actively prevented even
[17:17:27] *** Quits: jmdaemon (~jmdaemon@user/jmdaemon) (Ping timeout: 256 seconds)
[17:17:34] <sudorm> Cork, note that I don't want the full WHOIS (this is often redacted for privacy)
[17:17:43] <sudorm> Cork, I'm only looking for the domain names
[17:18:05] <Cork> ya, it is still a bit of privacy reason, and definitly a hording reason
[17:18:26] *** Quits: taupiqueur (~taupiqueu@lmontsouris-659-1-2-186.w193-248.abo.wanadoo.fr) (Quit: taupiqueur)
[17:19:38] *** Joins: naan (~Naan@user/naan)
[17:20:03] <EdFletcher> Let’s put it another way: that list clear has real-world value (you want it, for one) so they’re not likely to just be giving it away. It’s probably considered IP by Verizon or something.
[17:20:23] <EdFletcher> Verisign even
[17:20:53] <sudorm> Yes
[17:22:04] <Cork> as far as i know it isn't available in any form; one can check for specific names, but not "give me all"
[17:24:06] <OnkelTem> Cork: I cannot find any example of what you're speaking about. I've been googling for it for half a year
[17:24:29] *** Joins: c4017w__ (~c4017@209.52.68.8)
[17:24:49] <Cork> OnkelTem: i didn't say you'll find ready modules or anything, but it isn't hard to do; but yes you will have to write the integration
[17:25:12] <OnkelTem> That's what I call "Protocol"
[17:25:46] <Cork> ok, do as you want
[17:26:28] <OnkelTem> I want fucking http/2! That's what I want. And gRPC. But for some reasons browser makes don't care
[17:26:41] <OnkelTem> makers*
[17:26:44] *** Joins: geowiesnot (~user@5-51-190-244.abo.bbox.fr)
[17:26:51] <Cork> http2 is just a queued pull protocol
[17:27:03] <Cork> so if you hate pull i'm not sure what that would give you
[17:27:49] <OnkelTem> o_O
[17:27:53] <Cork> (http2 can provide information as a side channel on a different request, it can't ever push data)
[17:27:59] *** Quits: c4017w_ (~c4017@209.52.68.8) (Ping timeout: 256 seconds)
[17:28:21] *** Joins: tristan_ (~tristan@223.62.175.186)
[17:28:32] <EdFletcher> gRPC will never be added to browsers directly, you have to do that yourself server-side. And yeah, if you just want push functionality, what’s wrong with websockets and regular ol http1?
[17:29:27] <OnkelTem> I take it that http2 is a sinlge connection thing like websocket where you get all the data, but on top of it - gRPC works. And object streams (is what I need) - is the first-class thing there
[17:29:59] <OnkelTem> say, I call getChatMessages and start receiving ChatReponse's. Plain simple.
[17:30:26] <EdFletcher> gRPC could work over a websocket too, with very little work. It just doesn’t work in the browser natively.
[17:30:32] *** Quits: cebor (~cebor@user/cebor) (Quit: bye!)
[17:30:37] <sudorm> Something else:
[17:31:22] *** Joins: cebor (~cebor@user/cebor)
[17:31:30] <sudorm> I've developed a few front-end tools, and I always have on my TODO list "Make good videos showcasing them"
[17:31:46] <sudorm> but I never find the perfect screenshot video making tool, would you recommend one? (for Windows)
[17:32:06] <sudorm> OBS is ok, but I dont think we can edit videos, zoom on parts of the video...
[17:32:11] <OnkelTem> EdFletcher: yeah, I actually expected to find @grpc-* package for client working on top of websockets but there is none...
[17:32:37] <sudorm> Every ad I see now for SaaS have nice videos, with zooms on certain parts of the UI, then zoom out, etc.
[17:32:53] <sudorm> like a regular screen recording, but nicer... What tool do you use to do this?
[17:34:19] *** Quits: mlok (~mlok@62.77.75.34) (Quit: Lost terminal)
[17:36:23] *** Joins: reallymemorable (~reallymem@c-71-234-43-7.hsd1.ma.comcast.net)
[17:37:28] *** Joins: mlok (~mlok@62.77.75.34)
[17:38:25] <EdFletcher> You won’t find a client specifically for operating over websocket because it’s just a transport and gRPC is transport agnostic
[17:39:04] <EdFletcher> You just pass the gRPC frames opaquely over the WS transport
[17:39:36] *** Joins: rewrit3 (~rewrit3@user/rewrit3)
[17:40:41] *** Quits: reallymemorable (~reallymem@c-71-234-43-7.hsd1.ma.comcast.net) (Ping timeout: 256 seconds)
[17:42:03] <EdFletcher> OnkelTem: ^
[17:42:04] <OnkelTem> Sure, it's just a socket, so why not
[17:42:15] <EdFletcher> Yup exactly
[17:42:37] *** Joins: sickdyd (~sickd@120.51.82.69.ap.gmobb-fix.jp)
[17:43:23] <OnkelTem> but I'm not sure that *I* can do that, if such people like @grpc-guys didn't do that :)
[17:43:28] *** Joins: DrowningElysium (uid190788@user/drowningelysium)
[17:43:40] *** Joins: reallymemorable (~reallymem@2601:180:8300:8fd0:4812:9a4c:6b8c:661c)
[17:43:57] <OnkelTem> I mean, such clever people
[17:44:13] <OnkelTem> they do tooling right? So it's a tool. Quite obvious
[17:44:23] *** Quits: mlok (~mlok@62.77.75.34) (Quit: Lost terminal)
[17:44:38] <EdFletcher> OnkelTem: Naw you definitely can, just break it down into atomic steps and each is pretty simple. Like much engineering, the challenge is getting the simple bits all working together correctly 🤣
[17:44:51] <OnkelTem> Ahha, yeah!
[17:46:41] *** Joins: GreenResponse (~tomek@r-45-155-148-237.gpon.bialnet.pl)
[17:47:29] *** Quits: sickdyd (~sickd@120.51.82.69.ap.gmobb-fix.jp) (Ping timeout: 256 seconds)
[17:49:14] *** Joins: wroathe (~wroathe@206-55-188-8.fttp.usinternet.com)
[17:49:14] *** Quits: wroathe (~wroathe@206-55-188-8.fttp.usinternet.com) (Changing host)
[17:49:14] *** Joins: wroathe (~wroathe@user/wroathe)
[17:50:37] *** Quits: i0e (~is0ke3@user/is0ke3) (Ping timeout: 240 seconds)
[17:53:03] *** Joins: i0e (~is0ke3@user/is0ke3)
[17:57:50] *** Joins: paule32_ (~paul@nat-91-137-17-17.net.encoline.de)
[17:57:50] *** Quits: paule32_ (~paul@nat-91-137-17-17.net.encoline.de) (Changing host)
[17:57:50] *** Joins: paule32_ (~paul@user/paule32)
[18:00:50] *** Quits: vysn (~vysn@user/vysn) (Ping timeout: 252 seconds)
[18:01:20] *** Quits: paule32 (~paul@user/paule32) (Ping timeout: 256 seconds)
[18:02:43] *** Joins: dilip (~dilip@2402:3a80:cc2:be33:c368:a6df:2d4f:6f51)
[18:05:45] *** Joins: iomari891 (~iomari891@102.91.5.136)
[18:09:53] *** Quits: henry40408 (~henry4040@175.181.155.165) (Quit: Ping timeout (120 seconds))
[18:10:14] *** Joins: henry40408 (~henry4040@175.181.155.165)
[18:13:28] *** Quits: leduyquang753 (~leduyquan@user/leduyquang753) (Quit: Gotta go, see you guys later.)
[18:16:25] *** Quits: sudorm (~sudorm@2a01cb06a002be47d903666039764951.ipv6.abo.wanadoo.fr) (Quit: Leaving)
[18:19:46] *** Joins: ekathva (~ekathva@2001:999:50:cab1:b7e8:130b:c792:9fd)
[18:19:54] *** Quits: ekathva (~ekathva@2001:999:50:cab1:b7e8:130b:c792:9fd) (Remote host closed the connection)
[18:24:58] *** Joins: c4017w_ (~c4017@209.52.68.8)
[18:27:44] *** Quits: dan01 (~dan01@2a02:2f09:3913:cc00:1d8d:6567:868f:a9e0) (Quit: Leaving)
[18:28:31] *** Quits: c4017w__ (~c4017@209.52.68.8) (Ping timeout: 256 seconds)
[18:30:30] *** Quits: dilip (~dilip@2402:3a80:cc2:be33:c368:a6df:2d4f:6f51) (Quit: Leaving)
[18:31:27] *** Quits: LiftLeft (~LiftLeft@gateway/vpn/pia/liftleft) (Ping timeout: 256 seconds)
[18:33:27] *** Joins: fef (~thedawn@user/thedawn)
[18:35:25] *** Quits: llorllale (~llorllale@198.98.119.85) (Ping timeout: 256 seconds)
[18:54:17] *** Quits: N4buc0 (~N4buc0@179.178.58.130) (Remote host closed the connection)
[18:54:27] *** Joins: k8yun (~k8yun@198-48-158-40.cpe.pppoe.ca)
[18:54:30] *** Joins: voltage_ (voltage@user/voltage)
[18:56:59] *** Joins: kakashiA1 (~kakashi@37.84.156.126)
[19:00:01] *** Quits: sam_1 (~sam_1@87.51.251.118) (Ping timeout: 256 seconds)
[19:01:18] *** Joins: sickdyd (~sickd@120.51.82.69.ap.gmobb-fix.jp)
[19:01:55] *** Joins: junktext (~junktext@gateway/vpn/pia/junktext)
[19:05:44] *** Quits: sickdyd (~sickd@120.51.82.69.ap.gmobb-fix.jp) (Ping timeout: 250 seconds)
[19:07:16] *** Joins: igater (~root@h178-129-134-39.dyn.bashtel.ru)
[19:12:37] *** Joins: otisolsen70_ (~otisolsen@xd4ed80b5.cust.hiper.dk)
[19:16:07] *** Quits: otisolsen70 (~otisolsen@xd4ed80b5.cust.hiper.dk) (Ping timeout: 256 seconds)
[19:16:45] *** Quits: ekathva_ (~ekathva@2001:999:50:cab1:cb06:9935:dc:f7e7) (Remote host closed the connection)
[19:17:05] *** Joins: otisolsen70 (~otisolsen@xd4ed80b5.cust.hiper.dk)
[19:18:15] *** Quits: otisolsen70 (~otisolsen@xd4ed80b5.cust.hiper.dk) (Client Quit)
[19:20:17] *** Quits: otisolsen70_ (~otisolsen@xd4ed80b5.cust.hiper.dk) (Ping timeout: 240 seconds)
[19:25:28] *** Joins: c4017w__ (~c4017@209.52.68.8)
[19:29:09] *** Quits: c4017w_ (~c4017@209.52.68.8) (Ping timeout: 256 seconds)
[19:32:41] *** Quits: reallymemorable (~reallymem@2601:180:8300:8fd0:4812:9a4c:6b8c:661c) (Remote host closed the connection)
[19:35:03] *** Joins: reallymemorable (~reallymem@2601:180:8300:8fd0:4812:9a4c:6b8c:661c)
[19:40:21] *** Joins: sam_1 (~sam_1@87.51.251.118)
[19:40:56] *** Quits: wroathe (~wroathe@user/wroathe) (Ping timeout: 252 seconds)
[19:41:50] *** Joins: LiftLeft (~LiftLeft@gateway/vpn/pia/liftleft)
[19:45:35] *** Quits: sam_1 (~sam_1@87.51.251.118) (Ping timeout: 250 seconds)
[19:46:27] *** Quits: LiftLeft (~LiftLeft@gateway/vpn/pia/liftleft) (Ping timeout: 250 seconds)
[19:47:07] *** Joins: wroathe (~wroathe@206-55-188-8.fttp.usinternet.com)
[19:47:07] *** Quits: wroathe (~wroathe@206-55-188-8.fttp.usinternet.com) (Changing host)
[19:47:07] *** Joins: wroathe (~wroathe@user/wroathe)
[19:51:13] *** Quits: wroathe (~wroathe@user/wroathe) (Ping timeout: 250 seconds)
[19:56:41] *** Quits: geowiesnot (~user@5-51-190-244.abo.bbox.fr) (Ping timeout: 256 seconds)
[19:57:45] *** Joins: Rockwood (~Rocky@user/rocky)
[19:59:21] *** Joins: Rockwood_ (~Rocky@user/rocky)
[20:01:49] *** Quits: garrit (~garrit@user/garrit) (Ping timeout: 250 seconds)
[20:02:15] *** Joins: nomic (~nomic@185.198.243.198)
[20:02:17] *** Quits: Rockwood (~Rocky@user/rocky) (Ping timeout: 240 seconds)
[20:02:29] *** Joins: garrit (~garrit@ip-109-42-115-77.web.vodafone.de)
[20:02:29] *** Quits: garrit (~garrit@ip-109-42-115-77.web.vodafone.de) (Changing host)
[20:02:29] *** Joins: garrit (~garrit@user/garrit)
[20:03:32] *** Quits: tristan_ (~tristan@223.62.175.186) (Read error: Connection reset by peer)
[20:03:49] *** Quits: nulysses1 (~Thunderbi@p5dd17eaa.dip0.t-ipconnect.de) (Ping timeout: 256 seconds)
[20:03:50] *** Joins: tristan_ (~tristan@223.62.175.186)
[20:04:42] *** Joins: ThePhilgrim (~ThePhilgr@151.40.115.120)
[20:08:19] *** Quits: tristan_ (~tristan@223.62.175.186) (Remote host closed the connection)
[20:10:39] *** Joins: k8yun_ (~k8yun@24.244.29.114)
[20:14:15] *** Quits: k8yun (~k8yun@198-48-158-40.cpe.pppoe.ca) (Ping timeout: 256 seconds)
[20:14:40] *** Joins: Booster2ooo (~Booster2o@user/booster2ooo)
[20:15:09] *** Joins: LiftLeft (~LiftLeft@gateway/vpn/pia/liftleft)
[20:20:09] *** Quits: LiftLeft (~LiftLeft@gateway/vpn/pia/liftleft) (Ping timeout: 256 seconds)
[20:21:01] *** Quits: garrit (~garrit@user/garrit) (Ping timeout: 240 seconds)
[20:22:10] *** Quits: k8yun_ (~k8yun@24.244.29.114) (Changing host)
[20:22:10] *** Joins: k8yun_ (~k8yun@user/k8yun)
[20:22:20] *** Joins: garrit (~garrit@user/garrit)
[20:22:54] <fweht> im confused by the js import process, i look at a react three fiber example where they use the object `primitive`, but they dont explicitly import it, how can i find out which import line is responsible for that object?
[20:25:57] *** Joins: c4017w_ (~c4017@209.52.68.8)
[20:26:24] *** Joins: Akiva (~Akiva@user/Akiva)
[20:26:49] *** Joins: gopar (~gopar@c-67-164-79-22.hsd1.ca.comcast.net)
[20:28:47] *** Quits: gopar (~gopar@c-67-164-79-22.hsd1.ca.comcast.net) (Client Quit)
[20:29:07] *** Joins: gopar (~gopar@c-67-164-79-22.hsd1.ca.comcast.net)
[20:29:11] <ljharb> fweht: what's the example
[20:29:20] *** Quits: c4017w__ (~c4017@209.52.68.8) (Ping timeout: 252 seconds)
[20:30:54] *** Quits: voltage_ (voltage@user/voltage) (Quit: Leaving)
[20:31:17] <fweht> ljharb: its this: https://codesandbox.io/s/camera-pan-nsb7f?file=/src/App.js
[20:32:03] <fweht> i saw now in the documentation that primitive comes from react-three-fiber, not from three-js, but is there some better process to find this stuff out?
[20:32:58] *** Quits: interop_madness (~interop_m@user/interop-madness/x-0950004) (Quit: Leaving)
[20:34:08] *** Quits: kakashiA1 (~kakashi@37.84.156.126) (Ping timeout: 250 seconds)
[20:36:46] *** Joins: LiftLeft (~LiftLeft@166.171.248.123)
[20:37:54] *** Quits: han-solo (~hanish@user/han-solo) (Quit: leaving)
[20:38:12] *** Joins: voltage_ (voltage@user/voltage)
[20:39:57] *** Joins: vdamewood (~vdamewood@fedora/vdamewood)
[20:42:17] *** Joins: dapinitial (~dpuerto@136-27-83-52.cab.webpass.net)
[20:45:15] *** Joins: kakashiA1 (~kakashi@37.84.156.126)
[20:45:22] <devslash> My React app makes 3 REST requests to fetch data from the server. If the first request fails I do not want to attempt the following 2 requests. Any suggestions on how to approach this
[20:46:47] *** Quits: dapinitial (~dpuerto@136-27-83-52.cab.webpass.net) (Ping timeout: 256 seconds)
[20:47:30] *** Joins: Swahili (~Swahili@a95-94-208-187.cpe.netcabo.pt)
[20:47:55] *** Quits: kalen (~kalen@gateway/vpn/pia/kalen) (Ping timeout: 256 seconds)
[20:50:59] <SpiceMan> fetch(url).then( (res) => { // do stuff with res; fetch(url2).then(...) })
[20:51:05] <SpiceMan> or a promise
[20:51:17] *** Quits: boris[m] (~borisruna@2001:470:69fc:105::32f3) (Quit: issued !quit command)
[20:52:05] *** Joins: kalen (~kalen@gateway/vpn/pia/kalen)
[20:52:23] *** Joins: crashrep (~crashrep@user/crashrep)
[20:54:14] *** Quits: mexen (uid495612@user/mexen) (Quit: Connection closed for inactivity)
[20:54:47] *** Joins: nulysses (~Thunderbi@p200300c5171d5500859a7a3db03dbc6b.dip0.t-ipconnect.de)
[20:55:13] *** Quits: Rockwood_ (~Rocky@user/rocky) (Quit: The Time is Over)
[20:55:23] *** Joins: whatsupdoc (uid509081@id-509081.hampstead.irccloud.com)
[20:55:25] *** Quits: CiaoSen (~Jura@p200300c95737a2002a3a4dfffe84dbd5.dip0.t-ipconnect.de) (Ping timeout: 240 seconds)
[20:56:37] *** Quits: ttys000 (~ttys000@user/ttys000) (Ping timeout: 240 seconds)
[20:56:46] *** Joins: sam_1 (~sam_1@87.51.251.118)
[20:57:56] *** Quits: reallymemorable (~reallymem@2601:180:8300:8fd0:4812:9a4c:6b8c:661c) (Remote host closed the connection)
[21:01:11] *** Quits: sam_1 (~sam_1@87.51.251.118) (Ping timeout: 245 seconds)
[21:02:10] *** dan_berg_pub_ is now known as YourNick
[21:02:34] <ljharb> fweht jesus, that tab instantly freezes my computer
[21:02:45] <fweht> ljharb: im so sorry :D
[21:02:48] <ljharb> fweht: so no, there's no better process
[21:02:56] *** Joins: sickdyd (~sickd@120.51.82.69.ap.gmobb-fix.jp)
[21:02:59] <ljharb> fweht: make a PR to the docs for the example you found confusing, i guess
[21:03:08] *** YourNick is now known as dan_berg_pub
[21:03:25] *** Parts: dan_berg_pub (2c6463a49d@2604:bf00:561:2000::1c) ()
[21:05:27] *** Joins: ttys000 (~ttys000@user/ttys000)
[21:05:30] *** Quits: admin123 (~harrymore@ool-2f12f5b1.dyn.optonline.net) (Ping timeout: 256 seconds)
[21:05:33] <fweht> ljharb: true...  but i guess its not that complicated, im just confused by myself
[21:06:15] *** Joins: cthulchu (~Cthulchu@69-172-160-196.cable.teksavvy.com)
[21:07:17] *** Quits: sickdyd (~sickd@120.51.82.69.ap.gmobb-fix.jp) (Ping timeout: 240 seconds)
[21:07:45] *** Quits: LiftLeft (~LiftLeft@166.171.248.123) (Ping timeout: 256 seconds)
[21:08:15] *** Joins: N4buc0 (~N4buc0@179.178.58.130)
[21:12:17] *** Quits: i0e (~is0ke3@user/is0ke3) (Ping timeout: 256 seconds)
[21:12:58] *** Joins: vysn (~vysn@user/vysn)
[21:23:57] *** Joins: reallymemorable (~reallymem@2601:180:8300:8fd0:4812:9a4c:6b8c:661c)
[21:25:59] *** Quits: stagas (~stagas@2a02:587:c441:b777:a4f9:d376:ddc4:9436) (Ping timeout: 256 seconds)
[21:26:28] *** Joins: c4017w__ (~c4017@209.52.68.8)
[21:26:50] *** Joins: admin123 (~harrymore@ool-2f12f5b1.dyn.optonline.net)
[21:29:37] *** Quits: c4017w_ (~c4017@209.52.68.8) (Ping timeout: 240 seconds)
[21:29:52] *** Joins: stagas (~stagas@2a02:587:c41a:ac49:a399:4815:8a5:cc21)
[21:32:09] *** Quits: vdamewood (~vdamewood@fedora/vdamewood) (Quit: My MacBook Pro has gone to sleep. ZZZzzz…)
[21:34:43] *** Quits: wovixo (~wovixo@128.104.205.49) (Quit: Leaving)
[21:36:42] *** Joins: mat001 (~mat001@c-69-181-155-247.hsd1.ca.comcast.net)
[21:37:33] *** Quits: admin123 (~harrymore@ool-2f12f5b1.dyn.optonline.net) (Ping timeout: 256 seconds)
[21:39:50] *** Quits: mat001 (~mat001@c-69-181-155-247.hsd1.ca.comcast.net) (Remote host closed the connection)
[21:40:25] *** Joins: mat001 (~mat001@72.28.108.216)
[21:43:43] *** Joins: Codaraxis (~Codaraxis@user/codaraxis)
[21:44:01] *** Quits: N4buc0 (~N4buc0@179.178.58.130) (Ping timeout: 256 seconds)
[21:48:28] *** Quits: varaindemian (uid73404@id-73404.ilkley.irccloud.com) (Quit: Connection closed for inactivity)
[21:49:15] *** Joins: sam_1 (~sam_1@87.51.251.118)
[21:49:25] *** Joins: forgotmynick (uid24625@id-24625.hampstead.irccloud.com)
[21:53:59] *** Quits: sam_1 (~sam_1@87.51.251.118) (Ping timeout: 256 seconds)
[22:00:24] *** Joins: N4buc0 (~N4buc0@2804:7f4:348b:2121:2c89:a688:8cf7:59a8)
[22:02:46] <buu> https://acss.io/guides/atomizer.html
[22:02:49] <buu> what the fuck
[22:04:17] *** Joins: Guest19 (~Guest19@2601:647:5280:2a50:ac8b:76d2:9030:fa62)
[22:04:50] <ljharb> wtf is acss
[22:05:22] *** Joins: vdamewood (~vdamewood@fedora/vdamewood)
[22:06:18] *** Joins: sheetjs (~sheetjs@user/sheetjs)
[22:08:14] <silly> something old, it says (c) yahoo 2015 at the bottom
[22:09:08] *** Joins: Betal (~Betal@user/betal)
[22:13:48] *** Quits: mat001 (~mat001@72.28.108.216) (Ping timeout: 250 seconds)
[22:18:00] *** Quits: fef (~thedawn@user/thedawn) (Ping timeout: 276 seconds)
[22:18:19] *** Quits: vysn (~vysn@user/vysn) (Ping timeout: 250 seconds)
[22:20:17] *** Quits: OnkelTem (~OnkelTem@user/onkeltem) (Quit: WeeChat 2.8)
[22:21:02] <stenno> doesn't look too bad for 2015
[22:21:03] *** AciD is now known as AciD`
[22:22:00] <ljharb> yahoo tho. in 2015.
[22:23:30] *** Joins: mat001 (~mat001@72.28.108.216)
[22:23:56] *** Quits: iomari891 (~iomari891@102.91.5.136) (Quit: WeeChat 3.3)
[22:24:19] *** Quits: JohnComputation (~JohnCompu@gateway/tor-sasl/johncomputation) (Remote host closed the connection)
[22:24:36] *** Joins: JohnComputation (~JohnCompu@gateway/tor-sasl/johncomputation)
[22:26:50] *** Quits: shailangsa (~shailangs@host86-185-98-37.range86-185.btcentralplus.com) (Remote host closed the connection)
[22:26:56] *** Joins: c4017w_ (~c4017@209.52.68.8)
[22:30:10] <stenno> true lmao
[22:30:35] *** Quits: c4017w__ (~c4017@209.52.68.8) (Ping timeout: 256 seconds)
[22:32:21] *** Joins: mohab (~mohab@45.243.71.249)
[22:37:36] *** Joins: admin123 (~harrymore@cpe-69-203-109-69.nyc.res.rr.com)
[22:38:37] *** Joins: Y4knotiS (~YaknotiS@cpc1-cmbg18-2-0-cust87.5-4.cable.virginm.net)
[22:39:36] *** Quits: mohab (~mohab@45.243.71.249) (Quit: WeeChat 3.4)
[22:45:03] *** Quits: Haxxa (~Haxxa@125-253-30-213.ip4.superloop.com) (Quit: Haxxa flies away.)
[22:46:18] *** Joins: mohab (~mohab@45.243.71.249)
[22:47:07] *** Joins: Haxxa (~Haxxa@125-253-30-213.ip4.superloop.com)
[22:51:59] *** Quits: k8yun_ (~k8yun@user/k8yun) (Quit: Leaving)
[22:53:40] *** Quits: pycode1 (~pycode3@2001:b07:5d28:551:afe0:99df:7fb3:d84b) (Ping timeout: 250 seconds)
[22:53:58] *** Quits: mohab (~mohab@45.243.71.249) (Quit: WeeChat 3.4)
[22:57:13] *** Quits: stagas (~stagas@2a02:587:c41a:ac49:a399:4815:8a5:cc21) (Ping timeout: 256 seconds)
[22:57:42] *** Joins: ___nick___ (~quassel@cpc68286-cdif17-2-0-cust533.5-1.cable.virginm.net)
[22:59:24] *** Joins: mohab (~mohab@45.243.71.249)
[23:04:29] *** Quits: TheStormsOfFury (~StormsOfF@wsip-207-162-134-107.tu.ok.cox.net) (Ping timeout: 250 seconds)
[23:04:34] *** Joins: sickdyd (~sickd@120.51.82.69.ap.gmobb-fix.jp)
[23:06:25] *** Joins: stagas (~stagas@2a02:587:c42d:13b4:27b7:1181:49f4:6745)
[23:06:49] *** Quits: mohab (~mohab@45.243.71.249) (Quit: WeeChat 3.4)
[23:07:07] *** Joins: mohab (~mohab@45.243.71.249)
[23:08:24] *** Joins: TheStormsOfFury (~StormsOfF@wsip-207-162-134-107.tu.ok.cox.net)
[23:08:37] *** Quits: mat001 (~mat001@72.28.108.216) (Ping timeout: 240 seconds)
[23:08:57] *** Quits: sickdyd (~sickd@120.51.82.69.ap.gmobb-fix.jp) (Ping timeout: 240 seconds)
[23:09:11] *** Joins: varrg (~varrg@h-176-10-198-245.A351.priv.bahnhof.se)
[23:15:21] *** naan is now known as Naan
[23:15:55] *** Quits: PowaBanga (~PowaBanga@user/powabanga) (Ping timeout: 256 seconds)
[23:18:40] *** Quits: ___nick___ (~quassel@cpc68286-cdif17-2-0-cust533.5-1.cable.virginm.net) (Quit: https://quassel-irc.org - Chat comfortably. Anywhere.)
[23:20:17] *** Joins: ___nick___ (~quassel@cpc68286-cdif17-2-0-cust533.5-1.cable.virginm.net)
[23:20:18] *** Joins: _mikey (~mikey@user/mikey/x-4335048)
[23:21:29] *** Quits: mohab (~mohab@45.243.71.249) (Quit: WeeChat 3.4)
[23:23:23] *** Joins: mat001 (~mat001@c-69-181-155-247.hsd1.ca.comcast.net)
[23:23:50] *** Quits: mat001 (~mat001@c-69-181-155-247.hsd1.ca.comcast.net) (Remote host closed the connection)
[23:24:25] *** Joins: mat001 (~mat001@72.28.108.216)
[23:25:37] *** Joins: mohab (~mohab@45.243.71.249)
[23:25:39] *** Quits: mohab (~mohab@45.243.71.249) (Client Quit)
[23:26:07] *** Joins: mohab (~mohab@45.243.71.249)
[23:27:28] *** Joins: c4017w__ (~c4017@209.52.68.8)
[23:28:05] *** Quits: mohab (~mohab@45.243.71.249) (Client Quit)
[23:28:53] *** Joins: jazzy (~jaziz@user/jaziz)
[23:28:54] *** Joins: mohab (~mohab@45.243.71.249)
[23:31:18] *** Quits: c4017w_ (~c4017@209.52.68.8) (Ping timeout: 260 seconds)
[23:33:22] *** Joins: N4buc0- (~N4buc0@177.16.170.138)
[23:33:29] *** Quits: N4buc0 (~N4buc0@2804:7f4:348b:2121:2c89:a688:8cf7:59a8) (Remote host closed the connection)
[23:37:31] *** Joins: Naan` (~Naan@user/naan)
[23:37:59] *** Joins: sidro (~sidro@86.126.115.212)
[23:38:11] *** Quits: rewrit3 (~rewrit3@user/rewrit3) (Read error: Connection reset by peer)
[23:41:06] *** Quits: Naan (~Naan@user/naan) (Ping timeout: 260 seconds)
[23:50:10] *** Joins: sam_1 (~sam_1@87.51.251.118)
[23:52:16] *** Quits: sidro (~sidro@86.126.115.212) (Remote host closed the connection)
[23:53:18] *** Joins: sidro (~sidro@86.126.115.212)
[23:54:59] *** Quits: crashrep (~crashrep@user/crashrep) (Quit: WeeChat 3.4)
[23:55:25] *** Quits: sam_1 (~sam_1@87.51.251.118) (Ping timeout: 240 seconds)
[23:57:25] *** Joins: sam_1 (~sam_1@87.51.251.118)
