[00:01:59] *** Quits: freakazoid12345 (~matt@2603:9000:cf0f:80e3:e132:c55e:27b9:e77d) (Ping timeout: 260 seconds)
[00:07:41] *** Quits: nostalgia (~nostalgia@2601:243:c600:95f0:22f1:3efe:9b37:299c) (Read error: error:1408F10B:SSL routines:ssl3_get_record:wrong version number)
[00:08:05] *** Joins: nostalgia (~nostalgia@2601:243:c600:95f0:22f1:3efe:9b37:299c)
[00:08:38] *** Quits: mickey8 (~user@user/mickey) (Quit: Ping timeout (120 seconds))
[00:09:11] *** Joins: mickey8 (~user@user/mickey)
[00:11:00] *** Quits: betelgeuse (~betelgeus@94-225-47-8.access.telenet.be) (Quit: The Lounge - https://thelounge.chat)
[00:12:26] *** Joins: CaryHartline (~CaryHartl@2603-8080-6a0e-8d88-6043-cabb-4e54-73fe.res6.spectrum.com)
[00:18:46] *** Quits: mei (~mei@user/mei) (Read error: Connection reset by peer)
[00:23:21] *** Quits: burningserenity (~burningse@142-196-178-216.res.spectrum.com) (Quit: ZNC 1.8.2 - https://znc.in)
[00:24:10] *** Joins: tyson2 (~user@bras-base-toroon0624w-grc-19-70-31-33-162.dsl.bell.ca)
[00:26:15] *** Quits: adip (~adip@did202.neoplus.adsl.tpnet.pl) (Ping timeout: 260 seconds)
[00:26:23] *** Quits: stealth[] (~stealth]@2001:9e8:36ec:4500:596f:c69a:fd6a:5f82) (Read error: Connection reset by peer)
[00:27:25] <braxas> if I want to write a library that uses random numbers, should I still rely on user setting seed?
[00:27:48] <braxas> I guess if I want it cryptographically secure I should use crypto/rand not math/rand
[00:28:00] *** Joins: adip (~adip@det250.neoplus.adsl.tpnet.pl)
[00:30:02] *** Quits: alzgh (~alzgh@user/alzgh) (Remote host closed the connection)
[00:30:22] *** Joins: alzgh (~alzgh@user/alzgh)
[00:30:23] <seebs> that's a philosophical question. *do* you want it "cryptographically secure"? does the seed or random number you use matter for that, particularly? i seem to recall being told that crypto/rand is not usually relevant.
[00:33:34] *** Quits: tane (~tane@user/tane) (Quit: Leaving)
[00:40:37] *** Joins: freakazoid12345 (~matt@2603:9000:cf0f:80e3:e132:c55e:27b9:e77d)
[00:41:06] *** Joins: mehwork (~mehwork@98.185.199.35.bc.googleusercontent.com)
[00:42:03] <mehwork> golang.org says to install Go for Mac by downloading the go1.17.2 .pkg installer. Is this the preferred way now? I haven't used Go in a while and last time i had to do a bunch of environment variable stuff
[00:43:31] *** Quits: freakazoid343 (~matt@2603:9000:cf0f:80e3:e132:c55e:27b9:e77d) (Ping timeout: 258 seconds)
[00:45:41] <seebs> the package installer is probably fine these days, i think? i usually get the tarball so i can unpack multiple versions.
[00:45:53] <seebs> shouldn't be much environment stuff apart from "make sure the go bin directory is in $PATH"
[00:46:02] <mehwork> ok thanks
[00:50:50] <mehwork> seebs: should that setting go in the login shell profile (~/.profile) or just the general shell rc (~/.zshrc)?
[00:51:25] <seebs> that is a philosophical question! i usually set PATH in .profile, although i don't know anything about zsh's handling of startup files.
[00:51:31] *** Quits: alzgh (~alzgh@user/alzgh) (Remote host closed the connection)
[00:51:51] *** Joins: alzgh (~alzgh@user/alzgh)
[00:52:55] <mehwork> seebs: .zprofile gets handled before .zshrc, so it's useful for GUI IDE's to see PATH in time to run plugins
[00:53:03] <mehwork> afaik
[00:53:04] <seebs> makes sense
[01:01:22] *** Joins: oltuvok (~user@2804:1b2:80:e71:46be:e582:1f9a:da33)
[01:03:18] <mehwork> the installer seemed to have put /usr/local/go/bin at the end of my path already
[01:04:46] *** Joins: arinov (~arinov@213.194.126.155)
[01:05:01] *** Quits: nostalgia (~nostalgia@2601:243:c600:95f0:22f1:3efe:9b37:299c) (Read error: error:1408F10B:SSL routines:ssl3_get_record:wrong version number)
[01:05:25] *** Joins: nostalgia (~nostalgia@2601:243:c600:95f0:22f1:3efe:9b37:299c)
[01:05:39] <mehwork> which is weird because it didn't seem to append to my shell files
[01:05:50] *** Quits: aniruddha (uid340443@id-340443.ilkley.irccloud.com) (Quit: Connection closed for inactivity)
[01:06:25] <mehwork> and i don't see it updated anything in /etc
[01:06:51] *** Quits: paulgrmn (~paulgrmn@user/paulgrmn) (Ping timeout: 260 seconds)
[01:08:22] *** Quits: nostalgia (~nostalgia@2601:243:c600:95f0:22f1:3efe:9b37:299c) (Read error: error:1408F10B:SSL routines:ssl3_get_record:wrong version number)
[01:09:08] *** Joins: nostalgia (~nostalgia@2601:243:c600:95f0:22f1:3efe:9b37:299c)
[01:10:42] *** Quits: nostalgia (~nostalgia@2601:243:c600:95f0:22f1:3efe:9b37:299c) (Read error: error:1408F10B:SSL routines:ssl3_get_record:wrong version number)
[01:11:05] *** Joins: nostalgia (~nostalgia@2601:243:c600:95f0:22f1:3efe:9b37:299c)
[01:13:16] *** Quits: mrig (~mrig@user/mrig) (Quit: WeeChat 3.0)
[01:13:23] *** Quits: rek2 (~ReK2@47.62.9.10) (Quit: WeeChat 3.3)
[01:16:39] *** Quits: mickey8 (~user@user/mickey) (Quit: Ping timeout (120 seconds))
[01:17:04] *** Joins: mickey8 (~user@user/mickey)
[01:18:17] *** Joins: simson (~simson@p57ba7d35.dip0.t-ipconnect.de)
[01:19:01] *** Quits: simson (~simson@p57ba7d35.dip0.t-ipconnect.de) (Client Quit)
[01:19:11] *** Joins: simson (~simson@p57ba7d35.dip0.t-ipconnect.de)
[01:35:39] *** Quits: yonson (~yonson@2600:8801:d900:7bb:1e69:7aff:fea2:4e85) (Remote host closed the connection)
[01:35:47] *** Joins: yonson (~yonson@2600:8801:d900:7bb:1e69:7aff:fea2:4e85)
[01:44:47] *** Quits: shka (~herr@83.175.151.96.piasta.pl) (Ping timeout: 264 seconds)
[01:46:31] *** Quits: simson (~simson@p57ba7d35.dip0.t-ipconnect.de) (Ping timeout: 260 seconds)
[01:53:30] *** Quits: mickey8 (~user@user/mickey) (Quit: Ping timeout (120 seconds))
[01:53:57] *** Joins: mickey8 (~user@user/mickey)
[02:03:32] *** Joins: Atque (~Atque@user/atque)
[02:05:38] *** Joins: rcernin (~rcernin@2001:8003:6803:db00:7dea:9d00:e23b:d284)
[02:06:45] *** Quits: fikran (~fikran@user/fikran) (Ping timeout: 260 seconds)
[02:06:50] *** Quits: LtHummus (~lthummus@97.126.106.255) (Quit: ZNC 1.8.2 - https://znc.in)
[02:07:07] *** Joins: LtHummus (~lthummus@97.126.106.255)
[02:07:31] *** Quits: dsrt^ (~dsrt@wsip-68-227-92-38.mc.at.cox.net) (Ping timeout: 260 seconds)
[02:08:44] *** Joins: fikran (~fikran@user/fikran)
[02:09:42] <mehwork> seebs: whether i put it in .zprofile and/or .zshrc vim-go complaints it can't find the go binary when i open a new .go file
[02:09:52] <mehwork> but only one one of my machines :/
[02:09:59] *** Quits: DogHackit (~nathanren@c-76-27-57-63.hsd1.ut.comcast.net) (Ping timeout: 264 seconds)
[02:10:51] <mehwork> both of them installed it with the same .pkg file and to /usr/local/bin/go and I added PATH=/usr/local/go/bin/go:$PATH
[02:11:05] <mehwork> and then export PATH at the bottom of the file
[02:11:22] <mehwork> and i see /usr/local/go/bin/go in echo $PATH
[02:12:12] *** Quits: adip (~adip@det250.neoplus.adsl.tpnet.pl) (Ping timeout: 268 seconds)
[02:12:13] *** Joins: dsrt^ (~dsrt@wsip-68-227-92-38.mc.at.cox.net)
[02:12:43] *** Quits: INeedAHandle (~INeedAHan@39.124.72.106) (Quit: My MacBook Air has gone to sleep. ZZZzzzâ€¦)
[02:13:29] *** Joins: INeedAHandle (~INeedAHan@39.124.72.106)
[02:13:36] *** Quits: normen (~normen@p200300d71721dd00c0b2c8de4d9e4c5b.dip0.t-ipconnect.de) (Ping timeout: 258 seconds)
[02:13:54] *** Joins: adip (~adip@det123.neoplus.adsl.tpnet.pl)
[02:15:07] <mehwork> nevermind, it was some other plugin saying that.  I'll take it to #vim
[02:17:09] *** Quits: NCS_One (~NCS_One@bl11-90-133.dsl.telepac.pt) (Quit: Lost terminal)
[02:22:52] *** Joins: DogHackit (~nathanren@c-76-27-57-63.hsd1.ut.comcast.net)
[02:23:34] *** Joins: NCS_One (~NCS_One@bl11-90-133.dsl.telepac.pt)
[02:24:41] *** Quits: nostalgia (~nostalgia@2601:243:c600:95f0:22f1:3efe:9b37:299c) (Read error: error:1408F10B:SSL routines:ssl3_get_record:wrong version number)
[02:25:03] *** Joins: nostalgia (~nostalgia@2601:243:c600:95f0:22f1:3efe:9b37:299c)
[02:27:24] *** Quits: DogHackit (~nathanren@c-76-27-57-63.hsd1.ut.comcast.net) (Ping timeout: 258 seconds)
[02:30:05] *** Quits: volt (~volt@67.197.6.215) (Ping timeout: 260 seconds)
[02:31:46] *** Quits: fikran (~fikran@user/fikran) (Ping timeout: 245 seconds)
[02:32:09] *** Quits: nostalgia (~nostalgia@2601:243:c600:95f0:22f1:3efe:9b37:299c) (Read error: error:1408F10B:SSL routines:ssl3_get_record:wrong version number)
[02:32:43] *** Joins: nostalgia (~nostalgia@2601:243:c600:95f0:22f1:3efe:9b37:299c)
[02:34:05] *** Joins: fikran (~fikran@user/fikran)
[02:34:45] *** Quits: rcernin (~rcernin@2001:8003:6803:db00:7dea:9d00:e23b:d284) (Ping timeout: 260 seconds)
[02:36:02] *** Joins: leitz (~LeamHall@cpe-173-172-58-72.tx.res.rr.com)
[02:37:22] <leitz> Is there any difference in a "package" that holds library code and a "package" that is the application?
[02:38:17] *** Joins: normen (~normen@p200300d71721dd00cd3d534d55b7cdb9.dip0.t-ipconnect.de)
[02:38:50] <evilop> the later has a main entrypoint
[02:40:16] <evilop> (main() function in the "main" package)
[02:41:37] *** Joins: goldfish (~goldfish@user/goldfish)
[02:49:15] *** Joins: paulgrmn (~paulgrmn@user/paulgrmn)
[02:51:59] *** Quits: lemonsnicks (~lemonsnic@cpc159519-perr18-2-0-cust114.19-1.cable.virginm.net) (Ping timeout: 264 seconds)
[02:52:59] *** Joins: lemonsnicks (~lemonsnic@cpc159519-perr18-2-0-cust114.19-1.cable.virginm.net)
[02:55:03] <sdfgsdfg> is go > python ?
[02:56:44] <sdfgsdfg> there are no collection transformation operations like in kotlin
[02:56:46] <foobaz> they are different tools for different jobs, i use both
[02:56:58] <sdfgsdfg> it's not as minimal as perl
[02:57:02] *** Quits: mickey8 (~user@user/mickey) (Quit: Ping timeout (120 seconds))
[02:57:07] <sdfgsdfg> and my first question was actually, what's go used for ?
[02:57:24] *** Joins: mickey8 (~user@user/mickey)
[02:57:30] <foobaz> it's a staticly typed compiled language, like C, Java, or Rust
[02:57:35] *** Joins: DogHackit (~nathanren@c-76-27-57-63.hsd1.ut.comcast.net)
[02:57:55] <leitz> sdfgsdfg, go does concurrency well, and gives you a binary. You can usually cross-compile easily, IIUC.
[02:57:59] <foobaz> compared to python, it is much faster, and many bugs cause compile time errors instead of runtime errors
[02:58:04] <sdfgsdfg> gives you a binary ?
[02:58:17] <foobaz> which means it's much easier to detect bugs quickly
[02:58:32] <sdfgsdfg> everything compiles to a binary though, what do you mean
[02:58:37] <foobaz> python doesn't
[02:58:37] <sdfgsdfg> it compiles to portable binaries ?
[02:58:47] <sdfgsdfg> ahh ok
[02:59:07] <leitz> sdfgsdfg, it's compiled, whereas Python (and Ruby, etc) have to have a language runtime on the target machine.
[02:59:37] <foobaz> go is good for writing very reliable software slowly
[02:59:39] <sdfgsdfg> I wish they would import the collection operations of kotlin though, it's a really nice lang to develop with
[02:59:40] <leitz> It must be compiled for your OS/Arch combination, but you can copy in the binary and run it.
[02:59:53] <foobaz> whereas python is good at writing somewhat flaky software quickly
[03:00:00] <foobaz> both have their uses
[03:00:07] <sdfgsdfg> I've also seen go included as part of the gcc compiler ?
[03:00:18] <sdfgsdfg> there must be quite a nice sysadmin community behind it
[03:00:42] <leitz> There's almost three times as many jobs for Python as there are for Go, using Dice.com as a resource.  :)
[03:00:49] <foobaz> go is often used for network servers where security is important, because publicly exposed network services need to be bulletproof
[03:01:31] *** Quits: jhchabran (~jhchabran@user/jhchabran) (Ping timeout: 258 seconds)
[03:02:10] *** Quits: DogHackit (~nathanren@c-76-27-57-63.hsd1.ut.comcast.net) (Ping timeout: 260 seconds)
[03:02:10] <foobaz> because go is high performance, you could also use it to write a video game, it would work much better than python for that
[03:02:20] <fizzie> leitz: But the Go jobs pay better, according to those silly clickbait articles about "highest-paid programming languages" that always seem to crop up. ;)
[03:04:00] <b0nn> Is it the school holidays?
[03:04:12] <foobaz> there are more taco bell jobs than nuclear engineer jobs, clearly taco bell is the better career path :)
[03:04:37] *** Joins: freakazoid343 (~matt@2603:9000:cf0f:80e3:13a:8440:ff61:6eda)
[03:04:53] <b0nn> I mean, reddit had these "Python is better than Go" and "Go is used for projects but I hate Go so you need to justify it" yesterday
[03:05:20] <sdfgsdfg> I actually haven't used either
[03:05:41] <sdfgsdfg> and I'm not a highschool kid who's here to troll, I just wanted to ask for your personal opinion on the use cases
[03:06:09] <sdfgsdfg> b0nn
[03:06:14] <foobaz> they are both nice languages, python is easier for beginners
[03:06:40] <foobaz> go is a more powerful and specialized language for more experienced programmers
[03:06:42] <leitz> foobaz, a Taco Bell job beats none a all.  :)
[03:06:59] *** Quits: freakazoid343 (~matt@2603:9000:cf0f:80e3:13a:8440:ff61:6eda) (Read error: Connection reset by peer)
[03:07:16] *** Quits: freakazoid12345 (~matt@2603:9000:cf0f:80e3:e132:c55e:27b9:e77d) (Ping timeout: 258 seconds)
[03:07:30] <b0nn> sdfgsdfg: "Let's ask ion a Go channel what they think of... Go" - statikstics would tell you what your survey will generate
[03:07:32] <leitz> sdfgsdfg, I'm a Go beginner. I tend to view Go as a good replacement for Java and C++. You can develop faster in Python and Ruby, but the resultant code will be slower than in Go.
[03:07:46] *** Joins: freakazoid343 (~matt@2603:9000:cf0f:80e3:13a:8440:ff61:6eda)
[03:07:48] <b0nn> statistics, my god my typing is rubbish
[03:08:25] <leitz> sdfgsdfg, if the Python version is "fast enough", then you're golden.   Go is a pretty small language to learn the basics of, so you could spend a few days and get a solid feel for it.
[03:09:01] <sdfgsdfg> what about Rust
[03:09:43] <leitz> sdfgsdfg, IIUC, Rust is good if you're looking at the driver level stuff. I don't know much more than that, it's not my thing.
[03:09:52] <foobaz> like go, rust is also good for writing fast and reliable software slowly
[03:10:55] <foobaz> rust has better interoperability with C libraries
[03:11:04] <leitz> fizzie, and yes, Go jobs pay better and you stand out a bit from the crowd. Just fewer options.
[03:11:20] <foobaz> rust is faster, but also slightly more effort to write than go
[03:12:23] *** Quits: adip (~adip@det123.neoplus.adsl.tpnet.pl) (Ping timeout: 264 seconds)
[03:12:27] <foobaz> rust compiles much slower, so testing bug fixes and iterative development take longer
[03:12:51] *** Quits: arinov (~arinov@213.194.126.155) (Ping timeout: 260 seconds)
[03:13:17] <foobaz> imo rust is best for anything with a GUI, like a video game or a desktop app
[03:13:25] *** Joins: volt (~volt@67.197.6.215)
[03:13:30] <sdfgsdfg> sounds like I made a good choice to start learning go then... I got this book called Black hat go which looks nice, has sections for packet monitoring and writing an overflow fuzzer bla bla bla
[03:13:43] <foobaz> whereas go is better for headless apps like servers or command line stuff
[03:14:02] *** Joins: adip (~adip@dil236.neoplus.adsl.tpnet.pl)
[03:14:42] <sdfgsdfg> monitoring stuff, cryptography.. backend code. Yee
[03:15:16] <leitz> I'm reading about software engineering at Google, and it talks about the longevity of codebases and being able to swap team members around without lots of ramp up time. I think Go was written with that goal in mind.
[03:15:27] <foobaz> python is probably better for hacking, if you're writing tools for personal use they don't need to be totally reliable, and python is faster to develop
[03:16:02] <foobaz> also the lower performance of python is not likely to be an issue for what you're doing
[03:17:28] <foobaz> leitz: go is a very easy language to read, it doesn't allow you to write heavily obfuscated code like you can in C for example
[03:17:59] *** Quits: volt (~volt@67.197.6.215) (Ping timeout: 260 seconds)
[03:18:07] <foobaz> and for maintaining existing codebases, ease of reading code is more important than ease of writing code
[03:18:13] <leitz> foobaz, speak for yourself. I'm looking at some of my two year old Go code and seeing how much I've forgotten...
[03:18:27] *** Quits: paulgrmn (~paulgrmn@user/paulgrmn) (Ping timeout: 260 seconds)
[03:18:37] <sdfgsdfg> they would hate perl in that case
[03:18:41] <foobaz> better than two year old rust code i would imagine
[03:18:46] *** Quits: Seirdy (~Seirdy@sourcehut/user/seirdy) (Quit: exiting 3.2)
[03:18:48] <leitz> Why would go vet complian?    "Fprint call has possible formatting directive %v"
[03:18:57] <sdfgsdfg> I wonder where all the oldschool perl monks went
[03:19:01] * leitz hides his perl code under a book.
[03:19:02] <sdfgsdfg> are they ruby fanboys now
[03:19:05] <sdfgsdfg> :P
[03:19:06] <foobaz> %v doesn't work in Fprint, you need to use Fprintf instead
[03:19:16] *** Joins: Seirdy (~Seirdy@sourcehut/user/seirdy)
[03:19:25] *** Joins: frm (~frm@user/frm)
[03:19:47] *** Quits: CaryHartline (~CaryHartl@2603-8080-6a0e-8d88-6043-cabb-4e54-73fe.res6.spectrum.com) (Quit: My iMac has gone to sleep. ZZZzzzâ€¦)
[03:19:55] <foobaz> i like perl, it's very lightweight, and runs on very old OSs
[03:19:57] <leitz> foobaz, interesting. It compiled and ran with Fprint. I did fix it, though.
[03:21:04] <leitz> foobaz, a customer told me some of my perl code had a small bug on a ppc64le node. I had to go look up what that was. The perl still ran, though.
[03:21:18] <fizzie> leitz: I mean, it "works" in the sense that you can use Fprint to print the string "%v", and also (because Fprint will print values of all arguments it gets) the value you want will also end up in there. But you'll also get a spurious "%v" in the output.
[03:22:05] <fizzie> leitz: Compare the outputs in https://play.golang.org/p/4htJ0UyPz05
[03:23:24] *** Joins: DogHackit (~nathanren@c-76-27-57-63.hsd1.ut.comcast.net)
[03:26:19] *** Quits: artifishul (~nate@162.218.217.134) (Quit: Leaving.)
[03:27:33] *** Quits: NCS_One (~NCS_One@bl11-90-133.dsl.telepac.pt) (Quit: Lost terminal)
[03:28:26] *** Quits: DogHackit (~nathanren@c-76-27-57-63.hsd1.ut.comcast.net) (Ping timeout: 245 seconds)
[03:28:44] <b0nn> https://play.golang.org/p/2-OLZwPDeqm
[03:28:46] * leitz is re-figuring out a pointer conversion and muttering under his breath.
[03:28:57] <b0nn> %#v > %v
[03:31:13] * leitz takes a deep breath...
[03:39:49] *** Quits: nostalgia (~nostalgia@2601:243:c600:95f0:22f1:3efe:9b37:299c) (Read error: error:1408F10B:SSL routines:ssl3_get_record:wrong version number)
[03:40:11] *** Joins: nostalgia (~nostalgia@2601:243:c600:95f0:22f1:3efe:9b37:299c)
[03:45:22] *** Quits: trog (~trog@user/trog) (Ping timeout: 252 seconds)
[03:45:31] *** Joins: vptr (~vptr@user/vptr)
[03:45:47] *** Quits: nostalgia (~nostalgia@2601:243:c600:95f0:22f1:3efe:9b37:299c) (Read error: error:1408F10B:SSL routines:ssl3_get_record:wrong version number)
[03:46:02] *** Quits: predmijat (~predmijat@mail.strogopro.com) (Quit: bye)
[03:46:09] *** Joins: nostalgia (~nostalgia@2601:243:c600:95f0:22f1:3efe:9b37:299c)
[03:46:42] *** Joins: rcernin (~rcernin@2001:8003:6803:db00:7dea:9d00:e23b:d284)
[03:47:34] *** Joins: trog (~trog@user/trog)
[03:47:41] *** Joins: predmijat (~predmijat@mail.strogopro.com)
[03:48:55] <leitz> My personal biggest frustration with Go is that the docs assume you know Go. Someone needs to write a Pickaxe book for it.
[03:49:10] *** phytyca is now known as jlindgren
[03:49:31] *** Joins: CaryHartline (~CaryHartl@2603-8080-6a0e-8d88-6043-cabb-4e54-73fe.res6.spectrum.com)
[03:51:35] *** Quits: rcernin (~rcernin@2001:8003:6803:db00:7dea:9d00:e23b:d284) (Ping timeout: 260 seconds)
[03:52:59] *** Quits: normen (~normen@p200300d71721dd00cd3d534d55b7cdb9.dip0.t-ipconnect.de) (Ping timeout: 260 seconds)
[03:53:21] *** Quits: oltuvok (~user@2804:1b2:80:e71:46be:e582:1f9a:da33) (Remote host closed the connection)
[03:53:26] *** Joins: paulgrmn (~paulgrmn@user/paulgrmn)
[03:53:37] <b0nn> Write the book that you want to read
[03:59:10] *** Joins: DogHackit (~nathanren@c-76-27-57-63.hsd1.ut.comcast.net)
[04:01:07] *** Quits: nostalgia (~nostalgia@2601:243:c600:95f0:22f1:3efe:9b37:299c) (Read error: error:1408F10B:SSL routines:ssl3_get_record:wrong version number)
[04:01:29] *** Joins: nostalgia (~nostalgia@2601:243:c600:95f0:22f1:3efe:9b37:299c)
[04:02:19] *** Quits: paulgrmn (~paulgrmn@user/paulgrmn) (Ping timeout: 260 seconds)
[04:03:02] *** Joins: ahappydeath (~ahappydea@user/ahappydeath)
[04:03:43] *** Quits: DogHackit (~nathanren@c-76-27-57-63.hsd1.ut.comcast.net) (Ping timeout: 260 seconds)
[04:04:11] *** Quits: nostalgia (~nostalgia@2601:243:c600:95f0:22f1:3efe:9b37:299c) (Read error: error:1408F10B:SSL routines:ssl3_get_record:wrong version number)
[04:04:23] *** Joins: frost (~frost@user/frost)
[04:04:33] *** Joins: nostalgia (~nostalgia@2601:243:c600:95f0:22f1:3efe:9b37:299c)
[04:05:01] <leitz> flag.String returns a *string. I'm not seeing how to get the string portion, so I can pass it to something that needs a string.
[04:05:07] *** Quits: goldfish (~goldfish@user/goldfish) (Ping timeout: 260 seconds)
[04:05:53] *** Quits: nostalgia (~nostalgia@2601:243:c600:95f0:22f1:3efe:9b37:299c) (Read error: error:1408F10B:SSL routines:ssl3_get_record:wrong version number)
[04:06:15] *** Joins: nostalgia (~nostalgia@2601:243:c600:95f0:22f1:3efe:9b37:299c)
[04:07:15] *** Quits: nostalgia (~nostalgia@2601:243:c600:95f0:22f1:3efe:9b37:299c) (Read error: error:1408F10B:SSL routines:ssl3_get_record:wrong version number)
[04:07:20] <leitz> Well, part way there. I can pass it in, but it's ugly:    and %!s(*string=0xc000092c10) was found
[04:07:37] *** Joins: nostalgia (~nostalgia@2601:243:c600:95f0:22f1:3efe:9b37:299c)
[04:07:55] *** Quits: nostalgia (~nostalgia@2601:243:c600:95f0:22f1:3efe:9b37:299c) (Read error: error:1408F10B:SSL routines:ssl3_get_record:wrong version number)
[04:08:04] *** Quits: mickey8 (~user@user/mickey) (Remote host closed the connection)
[04:08:17] *** Joins: nostalgia (~nostalgia@2601:243:c600:95f0:22f1:3efe:9b37:299c)
[04:08:18] <Sam> It returns a pointer to a string that gets updated after Parse() is called. Any time after Parse is called you can dereference it, eg. "s := flag.String(â€¦); println(*s)"
[04:08:38] *** Joins: mickey8 (~user@user/mickey)
[04:08:52] <Sam> It's pretty ugly, I normally use StringVar instead personally, but your mileage may vary.
[04:09:00] *** Quits: nostalgia (~nostalgia@2601:243:c600:95f0:22f1:3efe:9b37:299c) (Read error: error:1408F10B:SSL routines:ssl3_get_record:wrong version number)
[04:09:22] *** Joins: nostalgia (~nostalgia@2601:243:c600:95f0:22f1:3efe:9b37:299c)
[04:09:38] *** Joins: llorllale (~llorllale@2607:9880:3a18:69:fcf9:7db7:8568:40fd)
[04:09:40] *** Quits: nostalgia (~nostalgia@2601:243:c600:95f0:22f1:3efe:9b37:299c) (Read error: error:1408F10B:SSL routines:ssl3_get_record:wrong version number)
[04:10:03] *** Joins: nostalgia (~nostalgia@2601:243:c600:95f0:22f1:3efe:9b37:299c)
[04:10:48] *** Quits: nostalgia (~nostalgia@2601:243:c600:95f0:22f1:3efe:9b37:299c) (Read error: error:1408F10B:SSL routines:ssl3_get_record:wrong version number)
[04:11:10] *** Joins: nostalgia (~nostalgia@2601:243:c600:95f0:22f1:3efe:9b37:299c)
[04:11:19] <leitz> Sam, I'm open to StingVar. Lemme put the code up so you can see what I'm doing.
[04:12:02] *** Quits: nostalgia (~nostalgia@2601:243:c600:95f0:22f1:3efe:9b37:299c) (Read error: error:1408F10B:SSL routines:ssl3_get_record:wrong version number)
[04:12:44] *** Joins: nostalgia (~nostalgia@2601:243:c600:95f0:22f1:3efe:9b37:299c)
[04:13:15] *** Joins: volt (~volt@67.197.6.215)
[04:13:42] <leitz> This is where I'm working. https://github.com/LeamHall/webCheck/blob/add_search_term/cmd/main.go#L39-L45
[04:14:07] <leitz> Line 37 is the var I'm trying to figure out.
[04:16:25] <Sam> Your Printf on line 99 is not doing the dereference, that's why you're getting the value of the pointer and the incorrect type thing you pasted a moment ago.
[04:17:19] <leitz> Ah, got it.
[04:17:29] *** Joins: DogHackit (~nathanren@c-76-27-57-63.hsd1.ut.comcast.net)
[04:17:47] *** Quits: volt (~volt@67.197.6.215) (Ping timeout: 264 seconds)
[04:17:51] <leitz> Is there a way to, and a need to, convert to a string earlier so you don't have to remember what type something is?
[04:18:16] <Sam> Sure, you can dereference to a string and save the result any time after Parse() is called.
[04:18:21] <Sam> Just like you already did, just do it earlier.
[04:18:53] *** Quits: nostalgia (~nostalgia@2601:243:c600:95f0:22f1:3efe:9b37:299c) (Read error: error:1408F10B:SSL routines:ssl3_get_record:wrong version number)
[04:19:01] <Sam> Or use StringVar which takes a pointer to a thing instead so you don't have to worry about the dereferencing.
[04:19:17] *** Joins: nostalgia (~nostalgia@2601:243:c600:95f0:22f1:3efe:9b37:299c)
[04:20:02] *** Quits: nostalgia (~nostalgia@2601:243:c600:95f0:22f1:3efe:9b37:299c) (Read error: error:1408F10B:SSL routines:ssl3_get_record:wrong version number)
[04:20:24] *** Joins: nostalgia (~nostalgia@2601:243:c600:95f0:22f1:3efe:9b37:299c)
[04:20:44] <leitz> Lemme see if I can figure that out.
[04:20:48] *** Quits: nostalgia (~nostalgia@2601:243:c600:95f0:22f1:3efe:9b37:299c) (Read error: error:1408F10B:SSL routines:ssl3_get_record:wrong version number)
[04:21:10] *** Joins: nostalgia (~nostalgia@2601:243:c600:95f0:22f1:3efe:9b37:299c)
[04:21:46] *** Quits: DogHackit (~nathanren@c-76-27-57-63.hsd1.ut.comcast.net) (Ping timeout: 245 seconds)
[04:22:03] *** Quits: CaryHartline (~CaryHartl@2603-8080-6a0e-8d88-6043-cabb-4e54-73fe.res6.spectrum.com) (Quit: My iMac has gone to sleep. ZZZzzzâ€¦)
[04:24:22] *** Quits: nostalgia (~nostalgia@2601:243:c600:95f0:22f1:3efe:9b37:299c) (Read error: error:1408F10B:SSL routines:ssl3_get_record:wrong version number)
[04:24:44] *** Joins: nostalgia (~nostalgia@2601:243:c600:95f0:22f1:3efe:9b37:299c)
[04:25:27] *** Quits: nostalgia (~nostalgia@2601:243:c600:95f0:22f1:3efe:9b37:299c) (Read error: error:1408F10B:SSL routines:ssl3_get_record:wrong version number)
[04:25:49] *** Joins: nostalgia (~nostalgia@2601:243:c600:95f0:22f1:3efe:9b37:299c)
[04:26:41] *** Quits: nostalgia (~nostalgia@2601:243:c600:95f0:22f1:3efe:9b37:299c) (Read error: error:1408F10B:SSL routines:ssl3_get_record:wrong version number)
[04:27:03] *** Joins: nostalgia (~nostalgia@2601:243:c600:95f0:22f1:3efe:9b37:299c)
[04:27:07] *** Quits: nostalgia (~nostalgia@2601:243:c600:95f0:22f1:3efe:9b37:299c) (Read error: error:1408F10B:SSL routines:ssl3_get_record:wrong version number)
[04:27:23] *** Quits: danderson (~dave@tailscale/danderson) (Ping timeout: 264 seconds)
[04:27:29] *** Joins: nostalgia (~nostalgia@2601:243:c600:95f0:22f1:3efe:9b37:299c)
[04:29:13] *** Quits: nostalgia (~nostalgia@2601:243:c600:95f0:22f1:3efe:9b37:299c) (Read error: error:1408F10B:SSL routines:ssl3_get_record:wrong version number)
[04:29:36] *** Joins: nostalgia (~nostalgia@2601:243:c600:95f0:22f1:3efe:9b37:299c)
[04:31:49] *** Quits: nostalgia (~nostalgia@2601:243:c600:95f0:22f1:3efe:9b37:299c) (Read error: error:1408F10B:SSL routines:ssl3_get_record:wrong version number)
[04:31:50] <leitz> Does flag.StringVar have to be used in an init()?
[04:32:11] *** Joins: nostalgia (~nostalgia@2601:243:c600:95f0:22f1:3efe:9b37:299c)
[04:32:59] *** Quits: nostalgia (~nostalgia@2601:243:c600:95f0:22f1:3efe:9b37:299c) (Read error: error:1408F10B:SSL routines:ssl3_get_record:wrong version number)
[04:33:11] <leitz> Oh...it doesn't need a "-" to be called as a flag?
[04:33:21] *** Joins: nostalgia (~nostalgia@2601:243:c600:95f0:22f1:3efe:9b37:299c)
[04:36:05] *** Joins: rairden (~rairden@2603-9000-de04-9613-0000-0000-0000-1a20.inf6.spectrum.com)
[04:36:15] <leitz> No, drat.
[04:37:34] <leitz> i thought using init() was frowned upon.
[04:37:44] *** Quits: pylong_ (bluehoney@gateway/vpn/protonvpn/bluehoney) (Ping timeout: 258 seconds)
[04:40:45] *** Quits: nostalgia (~nostalgia@2601:243:c600:95f0:22f1:3efe:9b37:299c) (Read error: error:1408F10B:SSL routines:ssl3_get_record:wrong version number)
[04:41:07] *** Joins: nostalgia (~nostalgia@2601:243:c600:95f0:22f1:3efe:9b37:299c)
[04:41:31] *** Quits: fikran (~fikran@user/fikran) (Ping timeout: 260 seconds)
[04:43:26] *** Joins: fikran (~fikran@user/fikran)
[04:43:29] *** Quits: andlabs (~andlabs@2a00:79e1:abc:1a12:10e7:8edb:294d:c20e) (Quit: My MacBook has gone to sleep. ZZZzzzâ€¦)
[04:44:04] *** Quits: nostalgia (~nostalgia@2601:243:c600:95f0:22f1:3efe:9b37:299c) (Read error: error:1408F10B:SSL routines:ssl3_get_record:wrong version number)
[04:44:26] *** Joins: nostalgia (~nostalgia@2601:243:c600:95f0:22f1:3efe:9b37:299c)
[04:47:13] *** Quits: nostalgia (~nostalgia@2601:243:c600:95f0:22f1:3efe:9b37:299c) (Read error: error:1408F10B:SSL routines:ssl3_get_record:wrong version number)
[04:47:36] *** Joins: nostalgia (~nostalgia@2601:243:c600:95f0:22f1:3efe:9b37:299c)
[04:47:44] <Sam> It is, but you don't need to call any of this from init. They're just normal functions, nothing here is magic. You can use them from wherever you want.
[04:48:18] <Sam> For example: https://play.golang.org/p/IUrVUwX8YaC
[04:49:26] <leitz> I tried with it in main() but it gave me "flag provided but not defined."
[04:49:28] *** Joins: normen (~normen@p200300d71721dd00cd3d534d55b7cdb9.dip0.t-ipconnect.de)
[04:50:24] <leitz> Ah, I wasn't using  NewFlagSet, either.
[04:52:06] <Sam> NewFlagSet doesn't matter, you can use the regular flag versions too, they work the same way
[04:52:36] *** Joins: DogHackit (~nathanren@c-76-27-57-63.hsd1.ut.comcast.net)
[04:52:43] <Sam> Sounds like you gave it a flag that wasn't recognized, like the error says. That doesn't have anything to do with where a function was called from.
[04:53:34] <Sam> For example, if you change the "-v" to "-a" (or whatever) in the example I sent, you will get the same error because there is no "-a" defined.
[04:55:11] <leitz> Right, but when I put the exact same StringVar lines in main(), it couldn't find it.
[04:55:29] <leitz> Find the flag. It's close to my nappy time.
[04:56:17] <Sam> Did you put them after Parse()? You have to define things before you parse the flags into them.
[04:57:05] *** Quits: DogHackit (~nathanren@c-76-27-57-63.hsd1.ut.comcast.net) (Ping timeout: 260 seconds)
[04:57:48] <leitz> Ah, no. They were after parse.
[04:58:03] <leitz> Just tested, and that seems to work. Now I have to clean up some more code...
[04:58:17] *** Quits: GJdan (~quassel@107-190-25-70.cpe.teksavvy.com) (Quit: https://quassel-irc.org - Chat comfortably. Anywhere.)
[05:00:23] *** Joins: GJdan (~quassel@107-190-25-70.cpe.teksavvy.com)
[05:01:11] *** Joins: oltuvok (~user@2804:1b2:80:e71:46be:e582:1f9a:da33)
[05:01:13] <leitz> sdfgsdfg, still hanging out?
[05:01:23] <sdfgsdfg> yes
[05:02:24] <leitz> sdfgsdfg, okay, if I were awake I could explain this better. You asked about where Go shines, and I had a small concurrency  thing I wanted to try out.
[05:02:28] <leitz> https://github.com/LeamHall/webCheck/blob/master/cmd/main.go
[05:03:09] <sdfgsdfg> is this a http network filter
[05:03:10] <leitz> The data file is just two URLs. However, with Go's concurrency, a datafile of 1,000 URLs wouldn't take much longer than with 2.
[05:03:42] <leitz> It checks the status of a list of URLs. So the speed is determined by the network response.
[05:04:18] <leitz> If you did it in python, unless you did a lot of threads, your execution time would grow linearly with the number of hosts you're checking.
[05:04:55] <leitz> With Go's built in concurrency it doesn't take much longer than the single slowest remote site.
[05:05:16] <leitz> Such is my understanding, anyway. Smarter minds can explain it better.
[05:05:47] <sdfgsdfg> I guess go provides a language native way of creating and managing threads
[05:06:13] <leitz> Yup. Well, they call them goroutines, but concurrency is baked in.
[05:07:15] *** Quits: saml (~saml@cpe-74-73-80-162.nyc.res.rr.com) (Quit: Leaving)
[05:07:32] <leitz> If you look at the imports, I didn't have to bring in a concurrency package.
[05:07:54] <foobaz> python is actually decent at concurrency for IO-limited stuff like network requests
[05:08:00] <sdfgsdfg> I'm thinking of proxies
[05:08:16] <sdfgsdfg> that'd be nice to play around with in go
[05:08:27] <leitz> foobaz, I never learned concurrency in Python.
[05:09:01] <foobaz> it's just bad at CPU-limited compute operations because of the interpreter locks
[05:09:44] <leitz> sdfgsdfg, yup. Consider that the world is moving to AWS-scale "fast spin up" stuff and you can see Go processing things and sending them off to a hundred thousand new servers.
[05:10:50] *** Quits: kiril (~kiril@85.91.153.163) (Quit: ZNC - https://znc.in)
[05:10:52] <sdfgsdfg> python threading... with concurrent.futures.ThreadPoolExecutor(max_workers=5) as executor:
[05:10:54] <leitz> Even something like Squid or Nginx could be fun.
[05:11:01] *** Joins: kiril (~kiril@85.91.153.163)
[05:25:13] *** Joins: DogHackit (~nathanren@c-76-27-57-63.hsd1.ut.comcast.net)
[05:25:47] *** Joins: andlabs (~andlabs@2604:ca00:178:8f1f:c8e:3678:8572:5705)
[05:26:29] *** Quits: cim (~cim@205.185.117.110) (Remote host closed the connection)
[05:26:45] *** Joins: cim (~cim@205.185.117.110)
[05:26:51] *** Quits: gggpkm (~gggpkm@li2015-124.members.linode.com) (Read error: Connection reset by peer)
[05:29:45] *** Quits: DogHackit (~nathanren@c-76-27-57-63.hsd1.ut.comcast.net) (Ping timeout: 260 seconds)
[05:32:57] <foobaz> leitz: i like haproxy for that
[05:34:53] *** Joins: rcernin (~rcernin@2001:8003:6803:db00:7dea:9d00:e23b:d284)
[05:39:50] *** Quits: ahappydeath (~ahappydea@user/ahappydeath) (Ping timeout: 258 seconds)
[05:40:47] *** Quits: andlabs (~andlabs@2604:ca00:178:8f1f:c8e:3678:8572:5705) (Ping timeout: 260 seconds)
[05:41:09] *** Joins: andlabs (~andlabs@2604:ca00:17c:a0dd:e102:3c2c:840f:e0bc)
[05:49:20] *** Quits: nostalgia (~nostalgia@2601:243:c600:95f0:22f1:3efe:9b37:299c) (Read error: error:1408F10B:SSL routines:ssl3_get_record:wrong version number)
[05:49:44] *** Joins: nostalgia (~nostalgia@2601:243:c600:95f0:22f1:3efe:9b37:299c)
[05:51:20] *** Quits: art_vandelay (~art_vande@bras-base-toroon63x9w-grc-21-174-89-102-174.dsl.bell.ca) (Ping timeout: 268 seconds)
[05:51:23] *** Quits: rcernin (~rcernin@2001:8003:6803:db00:7dea:9d00:e23b:d284) (Ping timeout: 264 seconds)
[05:51:35] *** Quits: nostalgia (~nostalgia@2601:243:c600:95f0:22f1:3efe:9b37:299c) (Read error: error:1408F10B:SSL routines:ssl3_get_record:wrong version number)
[05:51:58] *** Joins: nostalgia (~nostalgia@2601:243:c600:95f0:22f1:3efe:9b37:299c)
[05:52:55] *** Joins: art_vandelay (~art_vande@bras-base-toroon63x9w-grc-21-174-89-102-174.dsl.bell.ca)
[06:00:38] *** Joins: DogHackit (~nathanren@c-76-27-57-63.hsd1.ut.comcast.net)
[06:02:57] <leitz> On a different note, what took me two and a half hours in Go took me less than half an hour to write in Python, minus the concurrency stiff.
[06:03:01] <leitz> stuff.
[06:03:21] <leitz> And most of the go code was already written; I was doing a slight modification.
[06:05:08] *** Quits: DogHackit (~nathanren@c-76-27-57-63.hsd1.ut.comcast.net) (Ping timeout: 258 seconds)
[06:05:53] <foobaz> have you set up gopls integration in your text editor? it might speed up your development
[06:07:22] <leitz> foobaz, just using vim. I'm just getting back into Go, and trying to learn what I can understand, a step at a time.
[06:07:55] <foobaz> gopls works great in vim, as you might expect considering so many go developers use vim
[06:08:03] <leitz> OKay, nappy time. See you all tomorrow.
[06:08:14] <foobaz> peace
[06:08:27] * leitz makes a note to research gopls in vim.
[06:08:43] *** Quits: leitz (~LeamHall@cpe-173-172-58-72.tx.res.rr.com) (Quit: nappy time)
[06:10:31] *** Joins: tsujp (~tsujp@sourcehut/user/tsujp)
[06:11:28] *** Joins: freakazoid12345 (~matt@2603-9000-cf0f-80e3-013a-8440-ff61-6eda.inf6.spectrum.com)
[06:11:53] *** Joins: rcernin (~rcernin@2001:8003:6803:db00:7dea:9d00:e23b:d284)
[06:14:23] *** Quits: freakazoid343 (~matt@2603:9000:cf0f:80e3:13a:8440:ff61:6eda) (Ping timeout: 260 seconds)
[06:14:55] *** Joins: gggpkm (~gggpkm@li2015-124.members.linode.com)
[06:15:04] *** Quits: seebs (~seebs@24.196.59.174) (Ping timeout: 252 seconds)
[06:18:09] *** Quits: mickey8 (~user@user/mickey) (Quit: Ping timeout (120 seconds))
[06:20:36] *** Joins: mickey8 (~user@user/mickey)
[06:20:40] *** Quits: arcatech (~arcatech@user/arcatech) (Quit: Bye.)
[06:21:20] *** Quits: tsujp (~tsujp@sourcehut/user/tsujp) (Quit: Client closed)
[06:21:26] *** Quits: rcernin (~rcernin@2001:8003:6803:db00:7dea:9d00:e23b:d284) (Quit: WeeChat 3.3)
[06:22:52] *** Quits: tyson2 (~user@bras-base-toroon0624w-grc-19-70-31-33-162.dsl.bell.ca) (Remote host closed the connection)
[06:22:57] *** Joins: freakazoid343 (~matt@2603-9000-cf0f-80e3-013a-8440-ff61-6eda.inf6.spectrum.com)
[06:25:35] *** Quits: freakazoid12345 (~matt@2603-9000-cf0f-80e3-013a-8440-ff61-6eda.inf6.spectrum.com) (Ping timeout: 246 seconds)
[06:26:21] *** Quits: adip (~adip@dil236.neoplus.adsl.tpnet.pl) (Ping timeout: 245 seconds)
[06:27:16] *** Joins: seebs (~seebs@24.196.59.174)
[06:28:25] *** Joins: adip (~adip@aedu188.neoplus.adsl.tpnet.pl)
[06:32:31] *** Joins: freakazoid12345 (~matt@2603:9000:cf0f:80e3:13a:8440:ff61:6eda)
[06:32:49] *** Joins: DogHackit (~nathanren@c-76-27-57-63.hsd1.ut.comcast.net)
[06:35:02] *** Quits: freakazoid343 (~matt@2603-9000-cf0f-80e3-013a-8440-ff61-6eda.inf6.spectrum.com) (Ping timeout: 246 seconds)
[06:37:15] *** Quits: DogHackit (~nathanren@c-76-27-57-63.hsd1.ut.comcast.net) (Ping timeout: 260 seconds)
[06:43:16] *** Joins: CaryHartline (~CaryHartl@2603-8080-6a0e-8d88-a4fe-4f97-b0f4-b9a3.res6.spectrum.com)
[06:49:39] *** Quits: andlabs (~andlabs@2604:ca00:17c:a0dd:e102:3c2c:840f:e0bc) (Quit: My MacBook has gone to sleep. ZZZzzzâ€¦)
[06:50:35] *** Joins: DogHackit (~nathanren@c-76-27-57-63.hsd1.ut.comcast.net)
[06:50:47] *** Quits: fikran (~fikran@user/fikran) (Ping timeout: 264 seconds)
[06:52:17] *** Quits: elastic_dog (~elastic_d@2a01:118f:822:9c00:f583:aa51:9ad4:d4fb) (Ping timeout: 258 seconds)
[06:52:47] *** Joins: fikran (~fikran@user/fikran)
[06:57:53] *** Joins: elastic_dog (~elastic_d@2a01:118f:822:9c00:f583:aa51:9ad4:d4fb)
[07:00:05] *** Quits: normen (~normen@p200300d71721dd00cd3d534d55b7cdb9.dip0.t-ipconnect.de) (Ping timeout: 264 seconds)
[07:05:32] *** Joins: freakazoid343 (~matt@2603:9000:cf0f:80e3:13a:8440:ff61:6eda)
[07:08:31] *** Quits: bongobrown (~bongobrow@cpe-76-185-215-2.satx.res.rr.com) (Ping timeout: 265 seconds)
[07:08:31] *** Quits: freakazoid12345 (~matt@2603:9000:cf0f:80e3:13a:8440:ff61:6eda) (Ping timeout: 260 seconds)
[07:08:42] *** Quits: vptr (~vptr@user/vptr) (Remote host closed the connection)
[07:09:15] *** Quits: nostalgia (~nostalgia@2601:243:c600:95f0:22f1:3efe:9b37:299c) (Read error: error:1408F10B:SSL routines:ssl3_get_record:wrong version number)
[07:09:29] *** Joins: andlabs (~andlabs@70.107.171.168)
[07:09:37] *** Joins: nostalgia (~nostalgia@2601:243:c600:95f0:22f1:3efe:9b37:299c)
[07:12:07] *** Joins: freakazoid12345 (~matt@2603:9000:cf0f:80e3:13a:8440:ff61:6eda)
[07:14:35] *** Quits: freakazoid343 (~matt@2603:9000:cf0f:80e3:13a:8440:ff61:6eda) (Ping timeout: 260 seconds)
[07:16:21] *** Quits: HisShadow_ (~HisShadow@user/hisshadow) (Ping timeout: 245 seconds)
[07:17:52] *** Joins: freakazoid343 (~matt@2603:9000:cf0f:80e3:b93b:ba56:719d:f32e)
[07:18:28] *** Joins: HisShadow (~HisShadow@user/hisshadow)
[07:21:29] *** Quits: nostalgia (~nostalgia@2601:243:c600:95f0:22f1:3efe:9b37:299c) (Read error: error:1408F10B:SSL routines:ssl3_get_record:wrong version number)
[07:21:35] *** Quits: freakazoid12345 (~matt@2603:9000:cf0f:80e3:13a:8440:ff61:6eda) (Ping timeout: 260 seconds)
[07:21:51] *** Joins: nostalgia (~nostalgia@2601:243:c600:95f0:22f1:3efe:9b37:299c)
[07:23:54] *** Joins: oltuvok` (~user@177.205.76.35.dynamic.adsl.gvt.net.br)
[07:23:55] *** Quits: oltuvok (~user@2804:1b2:80:e71:46be:e582:1f9a:da33) (Ping timeout: 260 seconds)
[07:24:00] *** Quits: Tv_ (uid62079@user/tv/x-3144562) (Quit: Connection closed for inactivity)
[07:33:12] *** Quits: nostalgia (~nostalgia@2601:243:c600:95f0:22f1:3efe:9b37:299c) (Read error: error:1408F10B:SSL routines:ssl3_get_record:wrong version number)
[07:33:34] *** Joins: nostalgia (~nostalgia@2601:243:c600:95f0:22f1:3efe:9b37:299c)
[07:33:50] *** Quits: nostalgia (~nostalgia@2601:243:c600:95f0:22f1:3efe:9b37:299c) (Read error: error:1408F10B:SSL routines:ssl3_get_record:wrong version number)
[07:34:12] *** Joins: nostalgia (~nostalgia@2601:243:c600:95f0:22f1:3efe:9b37:299c)
[07:34:59] *** Quits: nostalgia (~nostalgia@2601:243:c600:95f0:22f1:3efe:9b37:299c) (Read error: error:1408F10B:SSL routines:ssl3_get_record:wrong version number)
[07:35:26] *** Joins: nostalgia (~nostalgia@2601:243:c600:95f0:22f1:3efe:9b37:299c)
[07:36:11] *** Quits: nostalgia (~nostalgia@2601:243:c600:95f0:22f1:3efe:9b37:299c) (Read error: error:1408F10B:SSL routines:ssl3_get_record:wrong version number)
[07:36:51] *** Joins: nostalgia (~nostalgia@2601:243:c600:95f0:22f1:3efe:9b37:299c)
[07:37:25] *** Quits: nostalgia (~nostalgia@2601:243:c600:95f0:22f1:3efe:9b37:299c) (Read error: error:1408F10B:SSL routines:ssl3_get_record:wrong version number)
[07:37:48] *** Joins: nostalgia (~nostalgia@2601:243:c600:95f0:22f1:3efe:9b37:299c)
[07:37:51] *** Quits: nostalgia (~nostalgia@2601:243:c600:95f0:22f1:3efe:9b37:299c) (Read error: error:1408F10B:SSL routines:ssl3_get_record:wrong version number)
[07:38:13] *** Joins: nostalgia (~nostalgia@2601:243:c600:95f0:22f1:3efe:9b37:299c)
[07:39:01] *** Quits: nostalgia (~nostalgia@2601:243:c600:95f0:22f1:3efe:9b37:299c) (Read error: error:1408F10B:SSL routines:ssl3_get_record:wrong version number)
[07:39:23] *** Joins: nostalgia (~nostalgia@2601:243:c600:95f0:22f1:3efe:9b37:299c)
[07:39:27] *** Quits: nostalgia (~nostalgia@2601:243:c600:95f0:22f1:3efe:9b37:299c) (Read error: error:1408F10B:SSL routines:ssl3_get_record:wrong version number)
[07:40:02] *** Joins: nostalgia (~nostalgia@2601:243:c600:95f0:22f1:3efe:9b37:299c)
[07:40:12] *** Quits: nostalgia (~nostalgia@2601:243:c600:95f0:22f1:3efe:9b37:299c) (Read error: error:1408F10B:SSL routines:ssl3_get_record:wrong version number)
[07:45:07] *** Joins: freakazoid12345 (~matt@2603-9000-cf0f-80e3-b93b-ba56-719d-f32e.inf6.spectrum.com)
[07:47:53] *** Quits: freakazoid343 (~matt@2603:9000:cf0f:80e3:b93b:ba56:719d:f32e) (Ping timeout: 268 seconds)
[07:49:27] *** Quits: DanielW (~quassel@2a00:23c5:ac06:1401:5c7c:665e:213a:8a24) (Quit: https://quassel-irc.org - Chat comfortably. Anywhere.)
[07:56:04] *** Joins: normen (~normen@p200300d71721dd00cd3d534d55b7cdb9.dip0.t-ipconnect.de)
[07:57:36] *** Quits: HisShadow (~HisShadow@user/hisshadow) (Ping timeout: 245 seconds)
[07:59:35] *** Joins: HisShadow (~HisShadow@user/hisshadow)
[08:13:29] *** Joins: volt (~volt@67.197.6.215)
[08:16:11] *** Quits: dsrt^ (~dsrt@wsip-68-227-92-38.mc.at.cox.net) (Ping timeout: 260 seconds)
[08:17:11] *** Quits: DogHackit (~nathanren@c-76-27-57-63.hsd1.ut.comcast.net) (Ping timeout: 264 seconds)
[08:18:09] *** Quits: volt (~volt@67.197.6.215) (Ping timeout: 258 seconds)
[08:30:00] *** Quits: normen (~normen@p200300d71721dd00cd3d534d55b7cdb9.dip0.t-ipconnect.de) (Ping timeout: 260 seconds)
[08:33:59] *** Joins: dsrt^ (~dsrt@wsip-68-227-92-38.mc.at.cox.net)
[08:34:26] *** Joins: DogHackit (~nathanren@c-76-27-57-63.hsd1.ut.comcast.net)
[08:39:23] *** Quits: DogHackit (~nathanren@c-76-27-57-63.hsd1.ut.comcast.net) (Ping timeout: 264 seconds)
[08:41:05] *** Quits: CaryHartline (~CaryHartl@2603-8080-6a0e-8d88-a4fe-4f97-b0f4-b9a3.res6.spectrum.com) (Quit: My iMac has gone to sleep. ZZZzzzâ€¦)
[08:41:07] *** Joins: normen (~normen@p200300d71721dd00cd3d534d55b7cdb9.dip0.t-ipconnect.de)
[08:43:23] *** Quits: oltuvok` (~user@177.205.76.35.dynamic.adsl.gvt.net.br) (Ping timeout: 268 seconds)
[08:45:59] *** Quits: normen (~normen@p200300d71721dd00cd3d534d55b7cdb9.dip0.t-ipconnect.de) (Ping timeout: 264 seconds)
[08:54:16] *** Quits: kupi (uid212005@id-212005.hampstead.irccloud.com) (Quit: Connection closed for inactivity)
[08:55:23] *** Quits: LiftLeft (~LiftLeft@gateway/vpn/pia/liftleft) (Ping timeout: 260 seconds)
[08:59:09] *** Joins: DogHackit (~nathanren@c-76-27-57-63.hsd1.ut.comcast.net)
[08:59:34] *** Joins: gggp (~gggp@li870-78.members.linode.com)
[09:00:23] *** Quits: fikran (~fikran@user/fikran) (Ping timeout: 264 seconds)
[09:02:08] *** Joins: fikran (~fikran@user/fikran)
[09:04:25] *** Quits: lemonsnicks (~lemonsnic@cpc159519-perr18-2-0-cust114.19-1.cable.virginm.net) (Ping timeout: 260 seconds)
[09:04:43] *** Quits: DogHackit (~nathanren@c-76-27-57-63.hsd1.ut.comcast.net) (Ping timeout: 260 seconds)
[09:06:10] *** Joins: lemonsnicks (~lemonsnic@cpc159519-perr18-2-0-cust114.19-1.cable.virginm.net)
[09:07:18] *** Quits: gggp (~gggp@li870-78.members.linode.com) (Remote host closed the connection)
[09:07:53] *** Joins: gggp (~gggp@li870-78.members.linode.com)
[09:12:12] *** Joins: normen (~normen@p200300d71721dd00cd3d534d55b7cdb9.dip0.t-ipconnect.de)
[09:14:32] *** Joins: sord937 (~sord937@gateway/tor-sasl/sord937)
[09:16:51] *** Quits: normen (~normen@p200300d71721dd00cd3d534d55b7cdb9.dip0.t-ipconnect.de) (Ping timeout: 260 seconds)
[09:17:10] *** Joins: shka (~herr@83.175.151.96.piasta.pl)
[09:17:17] *** Joins: DogHackit (~nathanren@c-76-27-57-63.hsd1.ut.comcast.net)
[09:21:59] *** Quits: DogHackit (~nathanren@c-76-27-57-63.hsd1.ut.comcast.net) (Ping timeout: 264 seconds)
[09:30:53] *** Quits: gggp (~gggp@li870-78.members.linode.com) (Quit: My MacBook has gone to sleep. ZZZzzzâ€¦)
[09:31:45] *** Joins: normen (~normen@p200300d71721dd00cd3d534d55b7cdb9.dip0.t-ipconnect.de)
[09:33:00] *** Joins: Mattiaslndstrm (~Mattiasln@c213-103-137-235.bredband.tele2.se)
[09:34:02] *** Joins: DogHackit (~nathanren@c-76-27-57-63.hsd1.ut.comcast.net)
[09:34:11] *** Quits: DogHackit (~nathanren@c-76-27-57-63.hsd1.ut.comcast.net) (Client Quit)
[09:37:51] *** Quits: Mattiaslndstrm (~Mattiasln@c213-103-137-235.bredband.tele2.se) (Ping timeout: 260 seconds)
[09:43:26] *** Joins: thorsager (~mit@green.krakow.dk)
[09:47:36] *** Joins: mrig (~AdiIRC@user/mrig)
[09:50:19] *** Quits: jpw (~jpw@user/jpw) (Remote host closed the connection)
[09:52:18] *** Joins: saschagrunert (~saschagru@46.128.124.46)
[09:55:16] *** Joins: rcernin (~rcernin@124.190.139.235)
[09:56:51] *** Joins: aniruddha (uid340443@id-340443.ilkley.irccloud.com)
[09:57:11] *** Quits: boingolov (~nastynate@c-71-236-46-219.hsd1.tn.comcast.net) (Ping timeout: 245 seconds)
[09:59:03] *** Joins: boingolov (~nastynate@c-71-236-46-219.hsd1.tn.comcast.net)
[10:02:07] *** Quits: normen (~normen@p200300d71721dd00cd3d534d55b7cdb9.dip0.t-ipconnect.de) (Ping timeout: 260 seconds)
[10:02:58] *** Quits: _xor (~xor@72.49.199.147) (Quit: brb)
[10:05:03] *** Joins: Berlin36 (~Berlin36@user/berlin36)
[10:05:14] <Berlin36> hello :D
[10:13:30] *** Joins: normen (~normen@p200300d71721dd00cd3d534d55b7cdb9.dip0.t-ipconnect.de)
[10:17:31] *** Quits: mrig (~AdiIRC@user/mrig) (Read error: Connection reset by peer)
[10:17:44] *** Joins: mrig (~AdiIRC@user/mrig)
[10:18:01] *** Quits: normen (~normen@p200300d71721dd00cd3d534d55b7cdb9.dip0.t-ipconnect.de) (Ping timeout: 245 seconds)
[10:28:37] *** Joins: v01d4lph4 (~v01d4lph4@user/v01d4lph4)
[10:29:57] *** Quits: girafe (~girafe@176-147-142-235.abo.bbox.fr) (Read error: Connection reset by peer)
[10:37:33] *** Joins: eruditass (uid248673@id-248673.uxbridge.irccloud.com)
[10:41:36] *** Joins: freakazoid343 (~matt@2603:9000:cf0f:80e3:b93b:ba56:719d:f32e)
[10:43:49] *** Quits: freakazoid12345 (~matt@2603-9000-cf0f-80e3-b93b-ba56-719d-f32e.inf6.spectrum.com) (Ping timeout: 258 seconds)
[10:49:59] *** Joins: Mattiaslndstrm (~Mattiasln@c213-103-137-235.bredband.tele2.se)
[10:54:33] *** Quits: rcernin (~rcernin@124.190.139.235) (Ping timeout: 258 seconds)
[10:55:47] *** Quits: sudoforge (~sudoforge@wireguard/tunneler/sudoforge) (Ping timeout: 260 seconds)
[10:56:15] *** Quits: art_vandelay (~art_vande@bras-base-toroon63x9w-grc-21-174-89-102-174.dsl.bell.ca) (Ping timeout: 260 seconds)
[10:57:35] *** Joins: art_vandelay (~art_vande@bras-base-toroon63x9w-grc-21-174-89-102-174.dsl.bell.ca)
[10:59:12] *** Joins: darkapex (~darkapex@user/darkapex)
[11:00:15] *** Quits: Mattiaslndstrm (~Mattiasln@c213-103-137-235.bredband.tele2.se) (Quit: My MacBook has gone to sleep. ZZZzzzâ€¦)
[11:01:51] *** Joins: Mattiaslndstrm (~Mattiasln@c213-103-137-235.bredband.tele2.se)
[11:03:49] *** Joins: casionaut (~casionaut@user/casionaut)
[11:04:33] *** Joins: normen (~normen@p200300d71721dd00cd3d534d55b7cdb9.dip0.t-ipconnect.de)
[11:07:24] *** Quits: kochchef_ (~quassel@80.146.255.46) (Quit: brb)
[11:07:34] *** Joins: kochchef (~quassel@80.146.255.46)
[11:08:16] *** Quits: gggpkm (~gggpkm@li2015-124.members.linode.com) (Remote host closed the connection)
[11:09:30] *** Quits: fikran (~fikran@user/fikran) (Ping timeout: 258 seconds)
[11:09:41] *** Joins: rcernin (~rcernin@2001:8003:6803:db00:25d8:d928:8227:82f8)
[11:11:29] *** Joins: fikran (~fikran@user/fikran)
[11:11:44] *** Quits: frm (~frm@user/frm) (Quit: Textual IRC Client: www.textualapp.com)
[11:22:46] *** Quits: Praise (~Fat@user/praise) (Ping timeout: 244 seconds)
[11:32:45] *** Joins: frm (~frm@user/frm)
[11:38:10] *** Joins: jhchabran (~jhchabran@user/jhchabran)
[11:38:15] *** Quits: normen (~normen@p200300d71721dd00cd3d534d55b7cdb9.dip0.t-ipconnect.de) (Ping timeout: 258 seconds)
[11:48:13] *** Quits: Asgaroth (~Asgaroth@93.107.191.92) (Ping timeout: 258 seconds)
[11:48:59] *** Quits: Berlin36 (~Berlin36@user/berlin36) (Ping timeout: 260 seconds)
[11:52:23] *** Joins: pranjal (~pranjal@user/pranjal)
[11:54:41] *** Joins: arinov (~arinov@213.194.126.155)
[11:56:14] *** Quits: casionaut (~casionaut@user/casionaut) (Remote host closed the connection)
[12:02:28] *** Quits: mosen (~mosen@159-196-125-15.9fc47d.syd.static.aussiebb.net) (Quit: Textual IRC Client: www.textualapp.com)
[12:08:52] *** Quits: pranjal (~pranjal@user/pranjal) (Quit: WeeChat 3.3)
[12:12:59] *** Quits: llorllale (~llorllale@2607:9880:3a18:69:fcf9:7db7:8568:40fd) (Ping timeout: 264 seconds)
[12:13:20] *** Joins: pranjal (~pranjal@user/pranjal)
[12:14:57] *** Joins: llorllale (~llorllale@97.108.193.189)
[12:15:03] *** Joins: volt (~volt@67.197.6.215)
[12:20:06] *** Quits: jeromenerf (~jerome@176-149-34-153.abo.bbox.fr) (Ping timeout: 245 seconds)
[12:20:13] *** Joins: jeromenerf (~jerome@per92-h03-176-149-34-153.dsl.sta.abo.bbox.fr)
[12:21:59] *** Quits: volt (~volt@67.197.6.215) (Ping timeout: 264 seconds)
[12:22:03] *** Quits: saschagrunert (~saschagru@46.128.124.46) (Quit: Leaving)
[12:33:12] *** Quits: Mattiaslndstrm (~Mattiasln@c213-103-137-235.bredband.tele2.se) (Quit: My MacBook has gone to sleep. ZZZzzzâ€¦)
[12:40:44] *** Quits: rcernin (~rcernin@2001:8003:6803:db00:25d8:d928:8227:82f8) (Ping timeout: 258 seconds)
[12:42:46] *** Quits: mrig (~AdiIRC@user/mrig) (Remote host closed the connection)
[12:43:00] *** Joins: mrig (~AdiIRC@user/mrig)
[12:47:02] *** Quits: eruditass (uid248673@id-248673.uxbridge.irccloud.com) (Quit: Connection closed for inactivity)
[12:50:18] *** Joins: Arsen (~arsen@managarm/dev/Arsen)
[12:50:44] <Arsen> hey, can a block define in {text,html}/template recursively call itself
[12:50:56] <Arsen> I have an object I want to render that can render references to other objects (similar to a linked list)
[12:51:50] <bookworm> can't you just loop?
[12:52:40] <Arsen> hm, well the reference is placed in the middle of the UI, so maybe nots
[12:52:44] <Arsen> s/s$//
[12:53:05] <Arsen> though, I could move it to the end and special case that, since I only want to render up to one anyways
[12:53:18] <Arsen> I didn't think of that
[12:54:46] *** Joins: ekathva (~ekathva@93-90-58-246.welcomnet.fi)
[12:54:58] *** Joins: normen (~normen@p200300d71721dd00cd3d534d55b7cdb9.dip0.t-ipconnect.de)
[13:04:41] *** Joins: darkapex_ (~darkapex@user/darkapex)
[13:05:11] *** Quits: arinov (~arinov@213.194.126.155) (Ping timeout: 264 seconds)
[13:05:31] *** Quits: darkapex (~darkapex@user/darkapex) (Ping timeout: 260 seconds)
[13:09:09] *** Joins: rcernin (~rcernin@2001:8003:6803:db00:25d8:d928:8227:82f8)
[13:18:59] *** Quits: fikran (~fikran@user/fikran) (Ping timeout: 264 seconds)
[13:20:19] *** Joins: Mattiaslndstrm (~Mattiasln@c213-103-137-235.bredband.tele2.se)
[13:20:49] *** Joins: fikran (~fikran@user/fikran)
[13:21:14] *** Joins: arinov (~arinov@178.240.160.150)
[13:22:11] *** Quits: be3uykpy (~be3uykpy@2a00:a040:19a:b060:80be:24fb:c570:cb65) (Ping timeout: 245 seconds)
[13:24:08] *** Quits: rcernin (~rcernin@2001:8003:6803:db00:25d8:d928:8227:82f8) (Quit: WeeChat 3.3)
[13:27:57] *** Joins: darkapex (~darkapex@user/darkapex)
[13:29:19] *** Quits: darkapex_ (~darkapex@user/darkapex) (Ping timeout: 260 seconds)
[13:38:11] *** Joins: Guest90 (~textual@pa49-184-175-59.pa.vic.optusnet.com.au)
[13:42:30] *** Quits: Mattiaslndstrm (~Mattiasln@c213-103-137-235.bredband.tele2.se) (Quit: My MacBook has gone to sleep. ZZZzzzâ€¦)
[13:44:19] *** Quits: bkircher (~bkircher@2001:a61:24b5:cd01:711f:b4dc:f9:b325) (Quit: Leaving)
[13:45:27] <Arsen> also, what's the best way to embed templates? currently I have them as a raw string in sources, but it's pretty ugly
[13:45:33] <Arsen> I'd like to keep this a single-executable deal
[13:51:00] <sztanpet> the official way
[13:51:23] <sztanpet> https://pkg.go.dev/embed
[13:53:09] <Arsen> oh wow comment parsing, that's pretty ugly
[13:53:13] <Arsen> thanks, though :D
[13:53:28] *** Joins: bluehoney (~bluehoney@cpe-75-81-204-188.mi.res.rr.com)
[13:54:01] <sztanpet> thats the long-established modus operandi for metadata, not sure how it can be less ugly
[13:54:49] *** Joins: pylong_ (bluehoney@gateway/vpn/protonvpn/bluehoney)
[13:57:31] <Arsen> by not parsing comments
[13:57:35] <Arsen> but yeah, it's fine
[13:57:36] <Arsen> thanks
[13:57:47] *** Quits: bluehoney (~bluehoney@cpe-75-81-204-188.mi.res.rr.com) (Ping timeout: 258 seconds)
[13:58:43] *** Quits: normen (~normen@p200300d71721dd00cd3d534d55b7cdb9.dip0.t-ipconnect.de) (Ping timeout: 260 seconds)
[13:59:52] *** Joins: normen (~normen@p200300d71721dd00cd3d534d55b7cdb9.dip0.t-ipconnect.de)
[14:04:42] *** Joins: shaqeel (~shaqeel@user/shaqeel)
[14:08:20] *** Parts: shaqeel (~shaqeel@user/shaqeel) (Leaving)
[14:21:57] *** Joins: volt (~volt@67.197.6.215)
[14:26:53] *** Joins: jla (~jordi@64.225.79.195)
[14:32:47] *** Quits: Guest90 (~textual@pa49-184-175-59.pa.vic.optusnet.com.au) (Ping timeout: 264 seconds)
[14:33:59] *** Quits: dsrt^ (~dsrt@wsip-68-227-92-38.mc.at.cox.net) (Ping timeout: 264 seconds)
[14:42:10] *** Joins: bpalmer (~user@user/bpalmer)
[14:45:48] *** Joins: Mattiaslndstrm (~Mattiasln@c213-103-137-235.bredband.tele2.se)
[14:49:45] *** Quits: pylong_ (bluehoney@gateway/vpn/protonvpn/bluehoney) (Ping timeout: 260 seconds)
[14:50:09] *** Joins: __alex (~alex@ip5f5afef3.dynamic.kabel-deutschland.de)
[14:50:13] *** Joins: mosen (~mosen@159-196-125-15.9fc47d.syd.static.aussiebb.net)
[14:51:15] *** Joins: bluehoney (~bluehoney@cpe-75-81-204-188.mi.res.rr.com)
[14:54:48] *** Quits: jla (~jordi@64.225.79.195) (Quit: Leaving.)
[14:56:09] *** Joins: freakazoid12345 (~matt@2603:9000:cf0f:80e3:b8ba:27d6:6be3:c5b)
[14:56:09] *** Joins: tyson2 (~user@bras-base-toroon0624w-grc-19-70-31-33-162.dsl.bell.ca)
[14:58:26] *** Quits: arinov (~arinov@178.240.160.150) (Ping timeout: 245 seconds)
[14:58:43] *** Quits: Mattiaslndstrm (~Mattiasln@c213-103-137-235.bredband.tele2.se) (Quit: My MacBook has gone to sleep. ZZZzzzâ€¦)
[14:59:23] *** Quits: freakazoid343 (~matt@2603:9000:cf0f:80e3:b93b:ba56:719d:f32e) (Ping timeout: 260 seconds)
[15:00:19] *** Joins: bongobrown (~bongobrow@cpe-76-185-215-2.satx.res.rr.com)
[15:06:51] *** Quits: bluehoney (~bluehoney@cpe-75-81-204-188.mi.res.rr.com) (Ping timeout: 260 seconds)
[15:07:54] *** Joins: freakazoid343 (~matt@2603:9000:cf0f:80e3:907d:d8a7:bd22:df5)
[15:09:35] *** Joins: emcconville (~emcconvil@c-98-222-200-8.hsd1.il.comcast.net)
[15:09:40] *** Joins: darkapex_ (~darkapex@user/darkapex)
[15:10:14] *** Quits: freakazoid12345 (~matt@2603:9000:cf0f:80e3:b8ba:27d6:6be3:c5b) (Ping timeout: 246 seconds)
[15:11:20] *** Quits: darkapex (~darkapex@user/darkapex) (Ping timeout: 260 seconds)
[15:12:27] *** Joins: kurashiki48 (~kurashiX4@2601:410:0:c03:bd46:ad6a:716d:4d8e)
[15:13:11] *** Joins: darkapex (~darkapex@user/darkapex)
[15:14:52] *** Parts: acagastya (~acagastya@wikinews/acagastya) ()
[15:15:15] *** Quits: darkapex_ (~darkapex@user/darkapex) (Ping timeout: 260 seconds)
[15:16:24] *** Joins: dsrt^ (~dsrt@wsip-68-227-92-38.mc.at.cox.net)
[15:17:34] *** Joins: Mattiaslndstrm (~Mattiasln@c213-103-137-235.bredband.tele2.se)
[15:18:01] *** Quits: llorllale (~llorllale@97.108.193.189) (Ping timeout: 245 seconds)
[15:18:59] *** Quits: demon__ (~user@197.54.25.232) (Read error: Connection reset by peer)
[15:23:56] *** Quits: kurashiki48 (~kurashiX4@2601:410:0:c03:bd46:ad6a:716d:4d8e) (Remote host closed the connection)
[15:26:09] *** Quits: mickey8 (~user@user/mickey) (Quit: Ping timeout (120 seconds))
[15:26:34] *** Joins: mickey8 (~user@user/mickey)
[15:27:37] *** Joins: arinov (~arinov@213.194.126.155)
[15:28:19] *** Quits: fikran (~fikran@user/fikran) (Ping timeout: 260 seconds)
[15:30:13] *** Joins: fikran (~fikran@user/fikran)
[15:30:39] *** Joins: jla (~jordi@64.225.79.195)
[15:38:26] *** Quits: amk (~amk@109.255.169.126) (Read error: Connection reset by peer)
[15:38:42] *** Joins: amk (~amk@109.255.169.126)
[15:38:54] *** Quits: alzgh (~alzgh@user/alzgh) (Remote host closed the connection)
[15:39:14] *** Joins: alzgh (~alzgh@user/alzgh)
[15:51:17] *** Joins: Guest90 (~textual@pa49-184-175-59.pa.vic.optusnet.com.au)
[15:56:09] *** Joins: bkircher (~bkircher@2001:a61:24b5:cd01:711f:b4dc:f9:b325)
[16:04:14] *** Joins: guniberas (~guniberas@42.191.188.121)
[16:04:17] *** Quits: ekathva (~ekathva@93-90-58-246.welcomnet.fi) (Ping timeout: 264 seconds)
[16:04:42] *** Parts: pranjal (~pranjal@user/pranjal) ()
[16:05:40] *** Joins: ekathva (~ekathva@93-90-58-246.welcomnet.fi)
[16:05:53] *** Quits: Guest90 (~textual@pa49-184-175-59.pa.vic.optusnet.com.au) (Ping timeout: 246 seconds)
[16:07:05] *** Joins: Guest90 (~textual@pa49-184-175-59.pa.vic.optusnet.com.au)
[16:11:10] *** Joins: bluehoney (~bluehoney@cpe-75-81-204-188.mi.res.rr.com)
[16:15:19] *** Quits: tyson2 (~user@bras-base-toroon0624w-grc-19-70-31-33-162.dsl.bell.ca) (Remote host closed the connection)
[16:18:50] *** Joins: saml (~saml@cpe-74-73-80-162.nyc.res.rr.com)
[16:19:17] *** Quits: Guest90 (~textual@pa49-184-175-59.pa.vic.optusnet.com.au) (Quit: Textual IRC Client: www.textualapp.com)
[16:21:17] *** Joins: kupi (uid212005@id-212005.hampstead.irccloud.com)
[16:23:05] *** Joins: neurocyte0132889 (~neurocyte@212.232.89.185)
[16:23:05] *** Quits: neurocyte0132889 (~neurocyte@212.232.89.185) (Changing host)
[16:23:05] *** Joins: neurocyte0132889 (~neurocyte@user/neurocyte)
[16:37:13] *** Joins: paulgrmn (~paulgrmn@user/paulgrmn)
[16:42:48] *** Joins: saschagrunert (~saschagru@46.128.124.46)
[16:44:40] *** Quits: Mattiaslndstrm (~Mattiasln@c213-103-137-235.bredband.tele2.se) (Quit: My MacBook has gone to sleep. ZZZzzzâ€¦)
[16:46:14] *** Quits: ekathva (~ekathva@93-90-58-246.welcomnet.fi) (Remote host closed the connection)
[16:51:23] *** Quits: shka (~herr@83.175.151.96.piasta.pl) (Ping timeout: 264 seconds)
[16:54:45] *** Quits: yonson (~yonson@2600:8801:d900:7bb:1e69:7aff:fea2:4e85) (Remote host closed the connection)
[16:54:52] *** Joins: yonson (~yonson@2600:8801:d900:7bb:1e69:7aff:fea2:4e85)
[17:14:47] *** Joins: sudoforge (~sudoforge@wireguard/tunneler/sudoforge)
[17:21:16] *** Joins: shka (~herr@83.175.151.96.piasta.pl)
[17:21:48] *** Joins: betelgeuse (~betelgeus@94-225-47-8.access.telenet.be)
[17:23:46] *** Joins: krux02 (~krux02@p200300e817076e008131ec4e024fd61b.dip0.t-ipconnect.de)
[17:24:03] <krux02> join #c
[17:24:27] <krux02> ups, forgot the yi
[17:24:30] <krux02> ups, forgot the /
[17:28:03] *** Joins: tyson2 (~user@bras-base-toroon0954w-grc-67-142-113-220-20.dsl.bell.ca)
[17:28:47] *** Joins: gggp (~gggp@li870-78.members.linode.com)
[17:29:50] *** Quits: gggp (~gggp@li870-78.members.linode.com) (Client Quit)
[17:35:38] *** Quits: andlabs (~andlabs@70.107.171.168) (Quit: My MacBook has gone to sleep. ZZZzzzâ€¦)
[17:37:49] *** Quits: fikran (~fikran@user/fikran) (Ping timeout: 268 seconds)
[17:38:29] *** Quits: binkers (~binkers@user/binkers) (Ping timeout: 264 seconds)
[17:39:16] *** Quits: shka (~herr@83.175.151.96.piasta.pl) (Ping timeout: 245 seconds)
[17:39:21] *** Joins: casionaut (~casionaut@user/casionaut)
[17:39:34] *** Joins: fikran (~fikran@user/fikran)
[17:43:23] *** Joins: binkers (~binkers@user/binkers)
[17:43:48] *** Joins: zer0bitz (~zer0bitz@dsl-hkibng31-54fae3-116.dhcp.inet.fi)
[17:46:45] *** Joins: shka (~herr@83.175.151.96.piasta.pl)
[17:48:23] *** Joins: CaryHartline (~CaryHartl@2603-8080-6a0e-8d88-7142-4eba-4b64-53f0.res6.spectrum.com)
[17:48:27] *** Joins: stealth[] (~stealth]@2001:9e8:36d0:d300:c9c2:fb4b:7972:6b91)
[17:55:05] *** Joins: Asgaroth (~Asgaroth@93.107.191.92)
[17:55:47] *** Parts: jla (~jordi@64.225.79.195) ()
[18:00:38] *** Joins: andlabs (~andlabs@2604:ca00:178:214a:576:c946:3979:2e28)
[18:04:15] *** Joins: tane (~tane@dslb-002-201-234-197.002.201.pools.vodafone-ip.de)
[18:04:15] *** Quits: tane (~tane@dslb-002-201-234-197.002.201.pools.vodafone-ip.de) (Changing host)
[18:04:15] *** Joins: tane (~tane@user/tane)
[18:08:13] *** Joins: andlabs_ (~andlabs@209.107.190.134)
[18:11:10] *** Quits: andlabs (~andlabs@2604:ca00:178:214a:576:c946:3979:2e28) (Ping timeout: 265 seconds)
[18:13:52] *** Quits: amk (~amk@109.255.169.126) (Read error: Connection reset by peer)
[18:14:03] *** Joins: amk (~amk@109.255.169.126)
[18:16:15] *** Quits: volt (~volt@67.197.6.215) (Ping timeout: 260 seconds)
[18:17:13] *** Joins: junon (~junon@user/junon)
[18:17:13] *** Quits: andlabs_ (~andlabs@209.107.190.134) (Read error: Connection reset by peer)
[18:17:39] *** Joins: andlabs (~andlabs@2604:ca00:178:214a:8c:a687:c105:f080)
[18:18:03] <junon> I already know the answer but it's worth asking just in case. I have an assertion function that I'd like to, ideally, enforce that the conditional expression passed to it has no side effects. Can Go do this?
[18:19:08] <seebs> no
[18:19:25] <junon> :/ Alright, thanks
[18:19:29] <seebs> so the good news is, expressions can't have side-effects, except if they're function calls, channel receives, [...]
[18:19:39] <seebs> but there's nothing like C's ++/--.
[18:19:52] <junon> Right but function calls are still expressions
[18:20:20] *** Joins: volt (~volt@67.197.6.215)
[18:20:23] <seebs> yes, also channel receives are the other one i found
[18:20:38] <seebs> you can do stuff with analysis tools for this potentially
[18:21:13] <junon> You'd have to analyze all the way down to the standard library, and even then it's tricky to track side effects.
[18:21:47] <junon> Especially libraries that use unsafe pointers or FFI or the like, they'd have to mark which functions induce side effects - you wouldn't be able to infer this by looking at e.g. what invokes a syscall, for example.
[18:22:25] <junon> So it would have to be something built into the language, unfortunately. I was hoping there was some hidden Go-fu I could tap into.
[18:23:10] <junon> Unless you just outright ban function calls in the expressions, but that's less than useful in practice.
[18:26:11] *** Quits: arinov (~arinov@213.194.126.155) (Ping timeout: 264 seconds)
[18:27:01] *** Quits: tyson2 (~user@bras-base-toroon0954w-grc-67-142-113-220-20.dsl.bell.ca) (Remote host closed the connection)
[18:27:03] *** Quits: c10l (~c10l@user/c10l) (Ping timeout: 260 seconds)
[18:27:10] <junon> Thanks for the info btw seebs :) Appreciated
[18:27:15] <seebs> it's not ideal, but it's the only real way to approach the thing, i think
[18:27:32] <seebs> i'd argue that every function call has side-effects even if none of the code in it has side-effects :P
[18:27:53] <junon> How do you figure?
[18:28:01] <seebs> stack growth etc
[18:28:18] *** haise01 is now known as haise01_
[18:28:19] <seebs> a function call is a risk in a way that local expression evaluation usually isn't
[18:28:27] <junon> Depends on the side effects you care about.
[18:28:50] <junon> I'm not worried about thread stack overflows in this case.
[18:29:13] <junon> well, underflows I suppose. Either way.
[18:29:28] <junon> But you're right, you'd have to kind of draw the line somewhere.
[18:30:26] *** Joins: c10l (~c10l@user/c10l)
[18:30:29] *** Quits: kupi (uid212005@id-212005.hampstead.irccloud.com) (Quit: Connection closed for inactivity)
[18:35:16] *** Quits: CaryHartline (~CaryHartl@2603-8080-6a0e-8d88-7142-4eba-4b64-53f0.res6.spectrum.com) (Quit: Textual IRC Client: www.textualapp.com)
[18:36:18] *** Joins: andlabs_ (~andlabs@209.107.190.134)
[18:39:41] *** Quits: andlabs (~andlabs@2604:ca00:178:214a:8c:a687:c105:f080) (Ping timeout: 245 seconds)
[18:43:01] <oliv3> anyone knows of a library that would combine logs and metrics ? something like logrus with a wrapper for prometheus
[18:50:02] *** Joins: freakazoid12345 (~matt@2603:9000:cf0f:80e3:bdbe:d475:b1d4:1bf4)
[18:52:55] *** Quits: andlabs_ (~andlabs@209.107.190.134) (Read error: Connection reset by peer)
[18:53:20] *** Quits: freakazoid343 (~matt@2603:9000:cf0f:80e3:907d:d8a7:bd22:df5) (Ping timeout: 258 seconds)
[18:55:12] *** Joins: andlabs (~andlabs@2604:ca00:178:214a:c8dd:4338:c40e:2e78)
[18:57:04] *** Joins: Tv_ (uid62079@user/tv/x-3144562)
[18:57:44] <Tv_> why oh why is web authn/account management such a hot mess
[18:58:02] <Tv_> every time someone writes a reusable thing, it tends up being a towering mess of complexity
[18:59:11] *** Joins: andlabs_ (~andlabs@2604:ca00:178:214a:3c08:ca44:14c0:2c50)
[18:59:16] *** Quits: volt (~volt@67.197.6.215) (Ping timeout: 245 seconds)
[19:02:08] *** Quits: bluehoney (~bluehoney@cpe-75-81-204-188.mi.res.rr.com) (Remote host closed the connection)
[19:02:47] *** Quits: andlabs (~andlabs@2604:ca00:178:214a:c8dd:4338:c40e:2e78) (Ping timeout: 264 seconds)
[19:03:02] *** Joins: bluehoney (~bluehoney@cpe-75-81-204-188.mi.res.rr.com)
[19:03:11] *** Joins: teasea9 (~teasea@user/teasea)
[19:04:14] *** Quits: teasea (~teasea@user/teasea) (Ping timeout: 260 seconds)
[19:04:14] *** teasea9 is now known as teasea
[19:08:26] *** Quits: andlabs_ (~andlabs@2604:ca00:178:214a:3c08:ca44:14c0:2c50) (Ping timeout: 245 seconds)
[19:11:16] <Sam> I get that I'm alone in this (apparently), but one day I'm going to have to write my "Logrus considered harmful" article.
[19:19:34] *** Joins: volt (~volt@67.197.6.215)
[19:20:30] *** Joins: tyson2 (~user@bras-base-toroon0954w-grc-67-142-113-220-20.dsl.bell.ca)
[19:23:27] <Tv_> Sam: you are not alone
[19:23:54] <Tv_> i haven't found anything better than zap, but even with zap it was better before the "zapcore" split and complexity explosion
[19:24:11] <Tv_> and i wish there was a zap-neutral way for libraries to provide fast zap-serializable objects
[19:24:26] <Tv_> that other log mechanisms could use too, that is, without depending on zap
[19:25:14] <Tv_> also, i don't use the raw zap api, i have my own tracing-style wrapper on top that uses context
[19:25:29] <Tv_> one of these days i need to publish that
[19:25:58] <Tv_> oh and json structured logging is nice but *really* begging for a good log viewer
[19:26:34] *** Quits: saschagrunert (~saschagru@46.128.124.46) (Remote host closed the connection)
[19:28:58] *** Joins: arinov (~arinov@178.240.160.150)
[19:31:25] <Sam> I literally just use the standard library logging. Normally I create two loggers, one for general stuff one for "verbose" or debug logs (and on occasion a third for application specific stuff, eg. a session viewer that spits out raw messages over the wire or something to debug a network exchange or similar. It's worked really well thus far. Anything that needs to be structured should probably be metrics inste
[19:31:25] <Sam> ad.
[19:32:51] *** Quits: tyson2 (~user@bras-base-toroon0954w-grc-67-142-113-220-20.dsl.bell.ca) (Remote host closed the connection)
[19:34:31] <Tv_> i've written log parsers too often in my life, never again
[19:34:32] *** Quits: c10l (~c10l@user/c10l) (Read error: Connection reset by peer)
[19:34:35] *** Joins: c10l0 (~c10l@user/c10l)
[19:35:20] <Tv_> also the hierarchical style from the tracing world *really* helps if you have concurrent requests that log more than one line
[19:35:45] <Tv_> so easy to filter to only see logs related to one request
[19:41:05] <Sam> Tracing is fine too; that's also a separate thing from logs IMO
[19:43:04] <Tv_> yes, but the nesting entries concept is useful outside of tracing
[19:44:58] <Sam> I suppose, but having functionality built in for that seems like unnecessary complication. I mean, I'll have logs prefixed by a request ID or something so I can grep out all the same request ones or what not, but I don't build that in in a special way
[19:46:52] *** Joins: DogHackit (~nathanren@c-76-27-57-63.hsd1.ut.comcast.net)
[19:47:32] *** Quits: fikran (~fikran@user/fikran) (Ping timeout: 268 seconds)
[19:48:54] *** Joins: mickey84 (~user@user/mickey)
[19:48:55] *** Joins: fikran (~fikran@user/fikran)
[19:49:43] *** Joins: kupi (uid212005@id-212005.hampstead.irccloud.com)
[19:51:01] *** Joins: jaca122 (~Thunderbi@89-65-136-254.dynamic.chello.pl)
[19:51:36] *** Quits: mickey8 (~user@user/mickey) (Remote host closed the connection)
[19:51:37] *** mickey84 is now known as mickey8
[19:52:36] *** Quits: wolfshappen (~waff@irc.furworks.de) (Ping timeout: 245 seconds)
[19:56:19] *** Joins: wolfshappen (~waff@irc.furworks.de)
[19:56:55] *** Joins: teasea9 (~teasea@user/teasea)
[19:57:43] *** Quits: tane (~tane@user/tane) (Quit: Leaving)
[19:58:38] *** Quits: teasea (~teasea@user/teasea) (Ping timeout: 268 seconds)
[20:02:28] *** Quits: alzgh (~alzgh@user/alzgh) (Remote host closed the connection)
[20:02:47] *** Joins: alzgh (~alzgh@user/alzgh)
[20:10:00] *** Quits: betelgeuse (~betelgeus@94-225-47-8.access.telenet.be) (Read error: Connection reset by peer)
[20:11:14] *** Joins: betelgeuse (~betelgeus@94-225-47-8.access.telenet.be)
[20:11:31] *** Quits: wolfshappen (~waff@irc.furworks.de) (Ping timeout: 265 seconds)
[20:12:13] *** Joins: wolfshappen (~waff@irc.furworks.de)
[20:12:59] *** Quits: lofiguy (~lofiguy@87-207-104-205.dynamic.chello.pl) (Ping timeout: 260 seconds)
[20:13:11] *** Joins: teasea90 (~teasea@user/teasea)
[20:14:54] *** Quits: teasea9 (~teasea@user/teasea) (Ping timeout: 265 seconds)
[20:14:54] *** teasea90 is now known as teasea9
[20:17:36] *** Joins: Ergo^ (~ergo@91.238.59.144)
[20:19:22] *** Quits: jaca122 (~Thunderbi@89-65-136-254.dynamic.chello.pl) (Quit: jaca122)
[20:23:37] *** Quits: v01d4lph4 (~v01d4lph4@user/v01d4lph4) (Remote host closed the connection)
[20:23:55] *** Quits: bluehoney (~bluehoney@cpe-75-81-204-188.mi.res.rr.com) (Ping timeout: 268 seconds)
[20:24:41] *** Joins: jpw (~jpw@user/jpw)
[20:27:08] <lungaro> anyone know how to do a regex in cel-go? It seems like i dont hvae the function but I dont necessarily understand the docs
[20:27:18] <lungaro> ie, https://github.com/google/cel-spec/blob/master/doc/langdef.md#list-of-standard-definitions
[20:27:26] <lungaro> Says I should have "matches" but I get an error
[20:27:36] <lungaro> ERROR: <input>:1:8: found no matching overload for 'matches' applied to '(string, string)'
[20:29:48] *** Quits: novns (~novns@user/novns) (Quit: ZNC 1.8.2 - https://znc.in)
[20:30:20] *** Joins: novns (~novns@user/novns)
[20:34:19] <lungaro> man, they really need examples, I can't make sense of the docs at all
[20:35:36] <lungaro> figured it out
[20:38:30] *** Quits: arinov (~arinov@178.240.160.150) (Ping timeout: 268 seconds)
[20:41:00] *** Quits: alzgh (~alzgh@user/alzgh) (Remote host closed the connection)
[20:41:19] *** Joins: alzgh (~alzgh@user/alzgh)
[20:41:33] *** Joins: LiftLeft (~LiftLeft@gateway/vpn/pia/liftleft)
[20:41:56] *** Joins: craekz (~craekz@user/craekz)
[20:43:02] *** Joins: strubbl891941988 (~strubbl@ipbcc0b2d1.dynamic.kabel-deutschland.de)
[20:47:35] *** Quits: casionaut (~casionaut@user/casionaut) (Quit: o7)
[20:54:57] *** Joins: freakazoid343 (~matt@2603:9000:cf0f:80e3:bdbe:d475:b1d4:1bf4)
[20:55:03] *** Joins: jaca122 (~Thunderbi@89-65-136-254.dynamic.chello.pl)
[20:56:01] *** Joins: andlabs (~andlabs@2a00:79e1:abc:1a12:ecf4:6e3d:e5b5:e83a)
[20:57:47] *** Quits: freakazoid12345 (~matt@2603:9000:cf0f:80e3:bdbe:d475:b1d4:1bf4) (Ping timeout: 260 seconds)
[20:57:58] *** Joins: freakazoid12345 (~matt@2603-9000-cf0f-80e3-bdbe-d475-b1d4-1bf4.inf6.spectrum.com)
[20:59:50] *** Quits: volt (~volt@67.197.6.215) (Ping timeout: 258 seconds)
[21:01:03] *** Quits: freakazoid343 (~matt@2603:9000:cf0f:80e3:bdbe:d475:b1d4:1bf4) (Ping timeout: 260 seconds)
[21:04:12] *** Joins: phao (~phao@2804:d45:8e7a:de00:d8c8:7412:bda7:287b)
[21:07:27] *** Joins: darkapex_ (~darkapex@user/darkapex)
[21:07:30] *** Quits: darkapex (~darkapex@user/darkapex) (Ping timeout: 258 seconds)
[21:08:15] *** Joins: tane (~tane@dslb-002-201-234-197.002.201.pools.vodafone-ip.de)
[21:08:15] *** Quits: tane (~tane@dslb-002-201-234-197.002.201.pools.vodafone-ip.de) (Changing host)
[21:08:15] *** Joins: tane (~tane@user/tane)
[21:08:40] *** Joins: tyson2 (~user@cpe00fc8d34ff03-cm00fc8d34ff00.sdns.net.rogers.com)
[21:17:28] *** Quits: dsrt^ (~dsrt@wsip-68-227-92-38.mc.at.cox.net) (Ping timeout: 258 seconds)
[21:24:56] *** Joins: girafe (~girafe@176-147-142-235.abo.bbox.fr)
[21:32:20] *** Joins: leitz (~LeamHall@cpe-173-172-58-72.tx.res.rr.com)
[21:40:09] *** Joins: freakazoid343 (~matt@2603:9000:cf0f:80e3:bdbe:d475:b1d4:1bf4)
[21:42:22] *** Quits: freakazoid12345 (~matt@2603-9000-cf0f-80e3-bdbe-d475-b1d4-1bf4.inf6.spectrum.com) (Ping timeout: 252 seconds)
[21:49:33] *** Joins: volt (~volt@67.197.6.215)
[21:56:24] *** Quits: fikran (~fikran@user/fikran) (Ping timeout: 265 seconds)
[21:58:16] *** Joins: fikran (~fikran@user/fikran)
[21:58:19] *** Quits: thing (~thing@user/thing) (Remote host closed the connection)
[21:59:26] *** Joins: bluehoney (~bluehoney@cpe-75-81-204-188.mi.res.rr.com)
[22:00:02] *** Quits: tyson2 (~user@cpe00fc8d34ff03-cm00fc8d34ff00.sdns.net.rogers.com) (Remote host closed the connection)
[22:01:23] *** Joins: ekathva (~ekathva@88-114-118-220.elisa-laajakaista.fi)
[22:07:36] *** Quits: bluehoney (~bluehoney@cpe-75-81-204-188.mi.res.rr.com) (Ping timeout: 245 seconds)
[22:08:49] *** Joins: freakazoid12345 (~matt@2603:9000:cf0f:80e3:3dd9:f34b:ba8b:befd)
[22:12:41] *** Quits: freakazoid343 (~matt@2603:9000:cf0f:80e3:bdbe:d475:b1d4:1bf4) (Ping timeout: 264 seconds)
[22:17:49] *** Joins: oltuvok (~user@2804:1b2:80:e71:a663:a1ff:fe49:c8ed)
[22:20:32] *** Joins: freakazoid343 (~matt@2603-9000-cf0f-80e3-4979-b9b0-afd6-be9b.inf6.spectrum.com)
[22:24:07] *** Quits: freakazoid12345 (~matt@2603:9000:cf0f:80e3:3dd9:f34b:ba8b:befd) (Ping timeout: 260 seconds)
[22:25:20] *** Joins: freakazoid333 (~matt@2603-9000-cf0f-80e3-4979-b9b0-afd6-be9b.inf6.spectrum.com)
[22:26:27] *** Quits: freakazoid343 (~matt@2603-9000-cf0f-80e3-4979-b9b0-afd6-be9b.inf6.spectrum.com) (Ping timeout: 260 seconds)
[22:29:13] <pinky_> is it possible to get the directory of the test file or the root directory of the project or something like that when running a test?
[22:29:29] *** Joins: freakazoid343 (~matt@2603:9000:cf0f:80e3:4979:b9b0:afd6:be9b)
[22:29:35] <pinky_> so that i can load some data files from the relative path
[22:30:00] *** Quits: phao (~phao@2804:d45:8e7a:de00:d8c8:7412:bda7:287b) (Quit: Leaving)
[22:30:06] <seebs> i believe the canonical answer is just to use a relative path instead of using the absolute path
[22:30:36] <pinky_> ah I hadn't tried it, hmm
[22:31:04] <pinky_> ah i guess the testdata directory is the standard place
[22:31:08] <b0nn> hrm WRT log levels https://dave.cheney.net/2015/11/05/lets-talk-about-logging
[22:32:31] *** Quits: freakazoid333 (~matt@2603-9000-cf0f-80e3-4979-b9b0-afd6-be9b.inf6.spectrum.com) (Ping timeout: 260 seconds)
[22:32:42] <pinky_> ooh, go-bindata
[22:33:25] <b0nn> I've personally never thought to run two loggers, one for BAU and one for DEBUG, how do you switch DEBUG on/off? envvar?
[22:33:53] *** Joins: freakazoid12345 (~matt@2603:9000:cf0f:80e3:e58d:4e5a:54eb:ed75)
[22:34:05] *** Joins: vulcandev (~quassel@2a00:23c5:ac06:1401:8c71:27a4:af8f:6881)
[22:34:41] *** Quits: vulcandev (~quassel@2a00:23c5:ac06:1401:8c71:27a4:af8f:6881) (Client Quit)
[22:35:23] *** gjnoonan_ is now known as gjnoonan
[22:35:24] <Sam> Yah, or a -v flag. I start with it pointing to io.Discard and then if -v or whatever I use to configure things is set do debug.SetOutput(os.Stderr)
[22:36:49] *** Quits: freakazoid343 (~matt@2603:9000:cf0f:80e3:4979:b9b0:afd6:be9b) (Ping timeout: 258 seconds)
[22:38:33] <b0nn> hmm, this is food for thought
[22:40:10] <b0nn> I'm usually - strip the prod code of the debug logging that I was using for dev, but it pains me because then it has to be put back in for troubleshooting a fire
[22:44:14] *** Quits: sagax (~sagax_nb@user/sagax) (Remote host closed the connection)
[22:44:24] *** Quits: gjnoonan (sid95422@lymington.irccloud.com) ()
[22:46:11] *** Joins: X-Scale` (~ARM@50.77.166.178.rev.vodafone.pt)
[22:46:47] *** Quits: X-Scale (~ARM@31.22.203.65) (Ping timeout: 258 seconds)
[22:46:56] <Sam> I have had things where it can't be possible to log debug stuff in prod anymore so I've stuck the log creation in a function behind a build constraint that only gets turned on if -tags="release" or whatever is set too, but 90% of the time I don't care if a customer wants to spit out some debug logs to send me too and just put it behind a flag.
[22:47:54] *** X-Scale` is now known as X-Scale
[22:54:47] *** Quits: brb (~brb@user/brb) (Ping timeout: 268 seconds)
[22:57:15] <b0nn> yeah, because it's a noop your verbose logger is a nice solution
[22:58:35] <Sam> I think it still does the formatting before discarding what it wrote, annoyingly, which I guess could be fixed by the build constraint, but Â¯\_(ãƒ„)_/Â¯ if it becomes a problem I'll come up with a solution (and I don't expect it to ever be a problem)
[22:58:49] <b0nn> hrm, you've also made me realise I should be injecting the logger I am using, so I can test it better
[22:58:49] *** Quits: kupi (uid212005@id-212005.hampstead.irccloud.com) (Quit: Connection closed for inactivity)
[22:59:47] <Sam> Oh yah, for tests I always end up creating a writer that just prints anything written to it with t.Print or whatever so log lines get grouped under the test that generated them. I desperately wish that were in the standard library, but they didn't want it so I copy/paste the wrapper type around constantly.
[23:00:12] *** Quits: jespada (~jespada@181.28.253.200) (Quit: My MacBook has gone to sleep. ZZZzzzâ€¦)
[23:00:47] <b0nn> hrm, that made me think, if you injected a debug logger that just noopsbefore even formatting...
[23:01:20] <Sam> You'd need some kind of logging interface for that, which is easy enough and probably fine, but I never want all the extra stuff and just go with passing the actual log.Logger around directly personally.
[23:05:11] <lungaro> so, what can I do to improve this nasty error handling?  https://play.golang.org/p/fawDpv1QOft
[23:05:43] <lungaro> too many type switches, excessive nesting of errors. It's just lame code
[23:06:45] <b0nn> lines 20 and 22 are superfluous
[23:07:05] <pinky_> if i put init() in a test I assume thats going to run in the app too right?
[23:07:06] *** Joins: fub (uid190747@id-190747.ilkley.irccloud.com)
[23:07:38] <pinky_> since they're the same package, unless somehow they're treated differently?
[23:07:43] <b0nn> pinky_: The best answer is to TIAS, but, FTR _test.go isn't compiled into the production binary
[23:07:54] <pinky_> ah :)
[23:07:55] <lungaro> b0nn, how? I first have to type switch to a *url.Error, which would be nil if it did not succeed. Then I have to use the ue.Err to typeswitch THAT to a OpError or DnsError
[23:07:57] <pinky_> thx
[23:09:22] <b0nn> lungaro: the two lines I pointed at, one is the closing bracket for if ok{}; the second is the opening of another if ok{}
[23:09:30] <lungaro> and to even make things worse, the OpError needs to be used after getting the url.Error, to find the dns error
[23:10:25] <b0nn> lungaro: I don't /know/ but I would look at a type switch for your errors, because that should clean up some of the ifs
[23:10:47] <lungaro> its the nesting that's really screwing me
[23:16:03] <b0nn> the nesting is because of wrapped errors?
[23:16:23] <Sam> url.Error implements unwrap, so you can use errors.Is/As to jump straight to any level and clean this up, I assume.
[23:17:15] *** Joins: tyson2 (~user@bras-base-toroon0624w-grc-19-70-31-33-162.dsl.bell.ca)
[23:19:08] *** Quits: aniruddha (uid340443@id-340443.ilkley.irccloud.com) (Quit: Connection closed for inactivity)
[23:22:06] *** Joins: kupi (uid212005@id-212005.hampstead.irccloud.com)
[23:25:30] *** Joins: casionaut (~casionaut@user/casionaut)
[23:39:23] *** Quits: zwr (~zwr@2804:d45:b966:fb00:d12a:3b0c:2197:11ad) (Ping timeout: 264 seconds)
[23:40:08] *** Joins: zwr (~zwr@2804:d45:b966:fb00:9c18:5252:f406:3ebf)
[23:42:33] *** Quits: tane (~tane@user/tane) (Quit: Leaving)
[23:45:26] *** Quits: shka (~herr@83.175.151.96.piasta.pl) (Ping timeout: 258 seconds)
[23:48:16] *** Quits: ekathva (~ekathva@88-114-118-220.elisa-laajakaista.fi) (Remote host closed the connection)
[23:48:23] *** Quits: mrig (~AdiIRC@user/mrig) (Quit: Going offline, see ya! (www.adiirc.com))
[23:53:34] *** Joins: thing (~thing@user/thing)
[23:54:58] *** Joins: X-Scale` (~ARM@46.50.5.8)
[23:55:26] *** Quits: X-Scale (~ARM@50.77.166.178.rev.vodafone.pt) (Ping timeout: 268 seconds)
[23:56:38] *** X-Scale` is now known as X-Scale
[23:58:00] *** Joins: Praise (~Fat@user/praise)
