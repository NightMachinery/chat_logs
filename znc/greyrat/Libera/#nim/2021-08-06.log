[00:12:44] <nrds> <06Prestige99> Elegantbeef how goes your wm ventures?
[00:20:44] <FromDiscord> <Elegantbeef> Fairly well so far https://streamable.com/wojd85
[00:21:06] <FromDiscord> <Elegantbeef> Presently trying to use CPS for my X event loop so it doesnt block
[00:23:06] *** Joins: kayabaNerve (~kayabaNer@user/kayabanerve)
[00:29:52] <FromDiscord> <Elegantbeef> I do know XCheckEvent exists but it doesnt play overly nice afaik
[00:31:16] <nrds> <06Prestige99> hm I think I was doing something for non-blocking using FDs
[00:32:22] <nrds> <06Prestige99> https://github.com/avahe-kellenberger/nimdow/blob/master/src/nimdow.nim#L76 ElegantBeef (there's also xcb for non-blocking instead of xlib if you want)
[00:32:39] *** Quits: neceve (~quassel@2a02:c7f:607e:d600:f762:20dd:304e:4b1f) (Ping timeout: 258 seconds)
[00:36:51] <FromDiscord> <Daniel> In reply to @dom96 "I honestly think banning": can you make some kind of vlidation or authorisation for this discord server?
[00:38:15] <FromDiscord> <Ayy Lmao> I'm having an issue with using `--cc:vcc` where I'm using `{.compile.}` on a cpp source file that includes a header that uses some win32 api stuff. An example of the errors I am getting is: `'HDROP': undeclared identifier`. I'm not sure what to do to fix it. The solutions I'm finding say to just include `windows.h` first, which I am already doing.
[00:38:25] <FromDiscord> <codic> that's cool, did you ever figure out how to advertise that you have emwh support?
[00:39:20] <nrds> <06Prestige99> me? I don't think I have full support
[01:05:11] <FromDiscord> <Elegantbeef> Also prestige presently looking at your repo and cmon, why no nimble task for using xephyr 😛
[01:06:31] <FromDiscord> <codic> oh yeah i see nimdow has support for fullscreen... i implemented the emwh hint but i can't figure out how to advertise to clients that I have it, so some apps do work like chromium, but others check for the hint, so don't work, like firefox
[01:06:36] <FromDiscord> <codic> i'll give it another shot later
[01:11:37] <nrds> <06Prestige99> @Elegantbeef I did it in bash, idk :P
[01:32:26] *** Quits: kayabaNerve (~kayabaNer@user/kayabanerve) (Ping timeout: 258 seconds)
[01:40:56] *** Joins: kayabaNerve (~kayabaNer@user/kayabanerve)
[01:49:25] *** Quits: ozzz (~oz@46.49.41.80) (Quit: Bye)
[02:01:23] *** Quits: max22- (~maxime@2a01cb0883359800a6f3455c42ce2aff.ipv6.abo.wanadoo.fr) (Quit: Leaving)
[02:14:19] <FromDiscord> <dom96> In reply to @Daniel "can you make some": Like what? I’d rather Discord fixed this
[02:21:36] *** Joins: auxym (~francis@modemcable027.118-81-70.mc.videotron.ca)
[02:25:00] *** Quits: auxym (~francis@modemcable027.118-81-70.mc.videotron.ca) (Read error: No route to host)
[02:25:13] *** Joins: auxym (~francis@modemcable027.118-81-70.mc.videotron.ca)
[02:25:17] <FromDiscord> <exelotl> there's no solution for server admins, even if you put a captcha in place or set the server's validation level to highest, bots can still join the server, scrape the list of users and send DMs to people
[02:25:18] <FromDiscord> <Cryne> @parkourfornik 872165474648088576 <= Scammer↵https://i.imgur.com/QL81zU0.png
[02:30:53] <FromDiscord> <enthus1ast> when i do a staticRead, from which module is it relative? From the module where the staticRead resides or the one where i call the enclosing function?
[02:31:21] <FromDiscord> <enthus1ast> actually i tried both ways and it can not open my file o.0
[02:31:33] <FromDiscord> <Elegantbeef> Afaik it's relative to the file calling the staticRead
[02:33:37] <FromDiscord> <enthus1ast> mh i dont know, i tried both path and also an absolute path none are working, strange
[02:34:24] *** Quits: auxym (~francis@modemcable027.118-81-70.mc.videotron.ca) (Ping timeout: 272 seconds)
[02:36:10] <FromDiscord> <enthus1ast> well
[02:36:41] <FromDiscord> <enthus1ast> "the/path/to/file.txt"   is not a path (including " )  😀
[03:51:55] <FromDiscord> <Sabena Sema> so nim has var return types... that (or something like it) is actually strictly required for people to be able to implement their own containers right? Even Delphi's array properties aren't powerful enough
[03:52:49] <FromDiscord> <Elegantbeef> well it's needed if you want to be able to mutate it with `a[someKey].field = 300`
[03:55:06] <FromDiscord> <Sabena Sema> yes
[03:55:09] <FromDiscord> <Sabena Sema> that's what I thought
[03:55:26] <FromDiscord> <Sabena Sema> I'm not sure if Delphi or some other pascal extension has a way around that
[03:55:28] <FromDiscord> <Elegantbeef> well without auto dereference i guess
[03:55:35] <FromDiscord> <Sabena Sema> it looks like Oberon-7 doesn't either
[03:55:44] <FromDiscord> <Sabena Sema> well
[03:56:10] <FromDiscord> <Sabena Sema> even with autoderef a[somekey][otherkey] might be hard to resolve
[03:56:52] <FromDiscord> <Sabena Sema> and, var return type basically is autoderef for return types, since nim doesn't let you use it everywhere like some other languages do (C++)
[04:04:29] <FromDiscord> <Sabena Sema> This comes up _all the darn time_ at work (working with C and C++ developers)
[04:04:45] <FromDiscord> <Sabena Sema> people really love top level const (which all c++ references are)
[04:05:07] <FromDiscord> <Sabena Sema> it's also sort tangentially come up in the c++ `optional<T&>` discussion
[04:06:33] <FromDiscord> <Elegantbeef> Yea i dont know much of how C/C++ is actually used, so just figure it does the same thing just more unsafe 😛
[04:08:22] <FromDiscord> <Sabena Sema> sent a code paste, see https://play.nim-lang.org/#ix=3v6R
[04:08:35] <FromDiscord> <Sabena Sema> but `int&` is deceptively close to `ptr int not nil`
[04:08:55] <FromDiscord> <Sabena Sema> no: also c++ isn't really less safe than nim
[04:09:35] <FromDiscord> <Sabena Sema> nim has less attractive nuisances
[04:09:59] <FromDiscord> <Sabena Sema> but yeah, I really, really, like that nim just totally omits top level const
[04:10:03] <FromDiscord> <Sabena Sema> you just can't do it
[04:11:48] <FromDiscord> <Sabena Sema> the problem with not nil _ptrs_ in nim ofc is that they can dangle
[04:13:11] <FromDiscord> <Elegantbeef> Yea it's were having good view types would make life nice
[04:27:06] *** Joins: auxym (~francis@modemcable027.118-81-70.mc.videotron.ca)
[04:32:51] *** Quits: auxym (~francis@modemcable027.118-81-70.mc.videotron.ca) (Ping timeout: 276 seconds)
[04:34:07] *** Quits: Oddmonger (~Oddmonger@user/oddmonger) (Ping timeout: 265 seconds)
[04:50:06] *** Joins: vicfred (~vicfred@user/vicfred)
[04:54:58] <FromDiscord> <theangryepicbanana> pretty sure I just killed the typechecker https://media.discordapp.net/attachments/371759389889003532/872998647976046652/unknown.png
[05:11:47] <mst> theangryepicbanana: http://trout.me.uk/foom2.jpg
[05:12:05] <FromDiscord> <theangryepicbanana> yeah pretty fun
[05:12:36] <FromDiscord> <theangryepicbanana> also just found out that implicit generics work just fine here, not sure why
[05:15:53] <mst> I have no idea but I sympathise with "bending software until it breaks" cos I do it all the time so the least I could do was provide a cute kitty to look at while you curse :D
[05:16:14] <FromDiscord> <theangryepicbanana> I appreciate the kitty :)
[05:16:53] <FromDiscord> <theangryepicbanana> this is now day 7 of arguing with nim's type checker
[05:43:30] *** Joins: auxym (~francis@modemcable027.118-81-70.mc.videotron.ca)
[05:53:17] *** Joins: neurocyte0 (~neurocyte@185.238.253.171)
[05:53:18] *** Quits: neurocyte0 (~neurocyte@185.238.253.171) (Changing host)
[05:53:18] *** Joins: neurocyte0 (~neurocyte@user/neurocyte)
[05:55:50] <FromDiscord> <undersquire> In reply to @theangryepicbanana "pretty sure I just": Lol
[05:56:24] <FromDiscord> <undersquire> It broke cause u need to use <T> not <T>
[05:56:45] <FromDiscord> <theangryepicbanana> In reply to @undersquire "It broke cause u": obv
[05:56:56] *** Quits: neurocyte (~neurocyte@user/neurocyte) (Ping timeout: 258 seconds)
[05:56:56] *** neurocyte0 is now known as neurocyte
[05:57:03] <FromDiscord> <undersquire> Simple mistake 😉
[06:13:47] *** Quits: arkurious (~arkurious@user/arkurious) (Quit: Leaving)
[06:23:54] *** Quits: krux02 (~krux02@p4ff8b737.dip0.t-ipconnect.de) (Remote host closed the connection)
[06:34:53] *** Quits: auxym (~francis@modemcable027.118-81-70.mc.videotron.ca) (Ping timeout: 258 seconds)
[06:35:16] *** Quits: redj (~quassel@bras-base-bchmpq5707w-grc-24-76-69-197-62.dsl.bell.ca) (Quit: http://quassel-irc.org - Chat comfortably. Anywhere.)
[06:36:08] *** Joins: redj (~quassel@bras-base-bchmpq5707w-grc-24-76-69-197-62.dsl.bell.ca)
[06:44:39] *** Quits: redj (~quassel@bras-base-bchmpq5707w-grc-24-76-69-197-62.dsl.bell.ca) (Read error: Connection reset by peer)
[06:44:56] *** Joins: redj (~quassel@bras-base-bchmpq5707w-grc-24-76-69-197-62.dsl.bell.ca)
[07:09:03] *** Joins: tiorock (~rc@192.12.115.218)
[07:09:03] *** Quits: tiorock (~rc@192.12.115.218) (Changing host)
[07:09:03] *** Joins: tiorock (~rc@user/rockcavera)
[07:09:03] *** Quits: rockcavera (~rc@user/rockcavera) (Killed (zirconium.libera.chat (Nickname regained by services)))
[07:09:03] *** tiorock is now known as rockcavera
[07:34:36] *** Joins: tiorock (~rc@192.12.115.218)
[07:34:36] *** Quits: tiorock (~rc@192.12.115.218) (Changing host)
[07:34:36] *** Joins: tiorock (~rc@user/rockcavera)
[07:34:36] *** rockcavera is now known as Guest8834
[07:34:36] *** Quits: Guest8834 (~rc@user/rockcavera) (Killed (platinum.libera.chat (Nickname regained by services)))
[07:34:36] *** tiorock is now known as rockcavera
[07:37:10] <FromDiscord> <Alea> Why does nim only have bitwise operators and not logical ones? Isn't bitwise slower when you just need a circuit breaker in your logic?
[07:37:46] <FromDiscord> <undersquire> logical ones as in like `break` ?
[07:37:53] <FromDiscord> <undersquire> (edit) "logical ones as in like `break` ... ?" 03added "and `continue`"
[07:37:53] <FromDiscord> <Alea> No like && vs &
[07:37:56] <FromDiscord> <undersquire> oh
[07:38:02] <FromDiscord> <undersquire> i think it does
[07:38:24] <FromDiscord> <Alea> It seems like and, or, etc. Do bitwise
[07:38:31] <FromDiscord> <undersquire> sent a code paste, see https://play.nim-lang.org/#ix=3v7A
[07:38:48] <FromDiscord> <Elegantbeef> `and` is bitwise with ints, and boolean with  bools
[07:38:49] <FromDiscord> <Elegantbeef> if you want a concise different op `import std/bitops`
[07:39:35] <FromDiscord> <Alea> So False or True or False or ... Would cut off early?
[07:40:11] <FromDiscord> <undersquire> yeah
[07:40:25] <FromDiscord> <undersquire> False or True (this is true so it should end here)
[07:40:47] <FromDiscord> <undersquire> @ElegantBeef what is your take on this? https://forum.nim-lang.org/t/8301
[07:40:52] <FromDiscord> <Elegantbeef> sent a code paste, see https://play.nim-lang.org/#ix=3v7C
[07:40:55] <FromDiscord> <Elegantbeef> This is testable pretty easily 😀
[07:41:01] <FromDiscord> <undersquire> personally i think its a cool idea to make the language a bit more consistent
[07:41:36] <FromDiscord> <Elegantbeef> I dont see the point proc definitions can get long so you'd have to scroll up to see if you're in a proc def, macro, template, or func
[07:41:59] <FromDiscord> <Elegantbeef> It also would have another indent level eaten for no reason but "consistency"
[07:42:03] <FromDiscord> <undersquire> oh true
[07:42:22] <FromDiscord> <undersquire> i forgot it could also be template, func etf
[07:42:25] <FromDiscord> <undersquire> (edit) "etf" => "etc"
[07:42:36] <FromDiscord> <undersquire> and yeah it would use another indentation level
[07:42:56] <FromDiscord> <Alea> In reply to @Elegantbeef "This is testable pretty": It came up during bed time reading and it was going to eat at me 😂
[07:43:05] <FromDiscord> <Alea> No comp to test on
[07:43:13] <FromDiscord> <Alea> Although playground to be fair
[07:43:29] <FromDiscord> <Elegantbeef> Ok well alea it doesnt call echo
[07:43:29] <FromDiscord> <Elegantbeef> Plus pragmas get more confusion
[07:43:30] <FromDiscord> <Elegantbeef> Plus pragmas get more confusing
[07:45:43] <FromDiscord> <Elegantbeef> And personally i only use var/const/let sections, so it's not overly consistent to me
[07:48:20] <FromDiscord> <Elegantbeef> I'd rather have the abillity to use `closure` `cdecl` `noconv` and similar to declare a procedure to get rid of the constant pragma usage 😛
[07:49:34] <FromDiscord> <Elegantbeef> Would also make the type mismatch easier to spot
[08:05:26] <FromDiscord> <gogolxdong (liuxiaodong)> Is there any RELIC library in Nim? https://github.com/relic-toolkit/relic
[08:05:29] <nrds> <12R2D299> 4GitHub: 7"Code"
[08:36:01] *** Quits: supakeen (~user@python/site-packages/supakeen) (Quit: WeeChat 3.2)
[08:36:33] *** Joins: supakeen (~user@python/site-packages/supakeen)
[09:01:07] *** Joins: thunder (~thunder@user/thunder)
[09:15:07] *** Quits: rockcavera (~rc@user/rockcavera) (Remote host closed the connection)
[09:34:27] <FromDiscord> <Rika> In reply to @exelotl "there's no solution for": The bots can’t scrape if the validation channel is locked to them (unverified users) and admins and only them and admins
[10:10:07] <FromDiscord> <bolino> Hi, I have an issue with db_mysql.
[10:10:26] <FromDiscord> <bolino> Hi, I have an issue with db_mysql
[10:15:41] *** Quits: thunder (~thunder@user/thunder) (Ping timeout: 258 seconds)
[10:16:00] <FromDiscord> <bolino> sent a long message, see http://ix.io/3v7Y
[10:16:20] <FromDiscord> <bolino> (edit) "http://ix.io/3v7Y" => "http://ix.io/3v7Z"
[10:17:44] <FromDiscord> <Elegantbeef> is `?` a special character in sql?
[10:21:06] <FromDiscord> <bolino> In reply to @Elegantbeef "is `?` a special": Yes, it's used for parameter substitution, but when it's alone, not when in a string. I tried to escape it with \, but it fails. Never had this issue in native SQL or any other language. I'm afraid the Nim library just parse for ? to interprete it as parameter substitution instead of treating the full string first.
[10:21:22] <FromDiscord> <bolino> (edit) "\," => ""\","
[10:21:32] <FromDiscord> <bolino> (edit) ""\"," => ""`\`","
[10:21:43] <FromDiscord> <bolino> (edit) "?" => "`?`"
[10:30:16] <FromDiscord> <Elegantbeef> I'd check the source for the procedure and see if there is anything odd
[11:07:23] <FromDiscord> <mratsim> In reply to @gogolxdong (liuxiaodong) "Is there any RELIC": I looked into relic before choosing a crypto library but it requires generating custom C code for the exact primitives you need.↵↵I might have something ready to use depending on what you want, so what do you need from there?
[11:09:09] *** Joins: max22- (~maxime@2a01cb0883359800a4c557047a6ba7ad.ipv6.abo.wanadoo.fr)
[12:04:52] *** Quits: neurocyte (~neurocyte@user/neurocyte) (Quit: The Lounge - https://thelounge.chat)
[12:09:06] *** Joins: neurocyte (~neurocyte@185.238.253.171)
[12:09:06] *** Quits: neurocyte (~neurocyte@185.238.253.171) (Changing host)
[12:09:06] *** Joins: neurocyte (~neurocyte@user/neurocyte)
[12:14:38] <arkanoid> I'm trying hard to grok what the "mangle" option of c2nim does
[12:15:08] <arkanoid> mangle "_" "p" replaces ALL names with just ppppppppppppppppppppppppp
[12:15:38] <arkanoid> mangle "{.*}__{.*}" "$1_p_$2" seemns to work for replacing __ with _
[12:16:17] <arkanoid> but this: mangle "_{.*}" "p_$1"  and this: mangle "{.*}_" "$1_p" does NOT replace heading and trailing underscores
[12:16:45] <arkanoid> manual says that they follow PEG syntax, but it doesn't seems https://www.gnu.org/software/guile/manual/html_node/PEG-Syntax-Reference.html
[12:24:19] <FromDiscord> <haxscramper> I'm pretty sure it does https://github.com/nim-lang/c2nim/blob/0557f1e2a86b2a9e99acd23ebc41cfa7dcdfc76b/mangler.nim#L65
[12:24:36] <FromDiscord> <haxscramper> You can try `std/peg` as a standalone
[12:25:51] *** Joins: neceve (~quassel@2a02:c7f:607e:d600:f762:20dd:304e:4b1f)
[13:16:13] *** Joins: maxime_ (~maxime@2a01cb0883359800a4c557047a6ba7ad.ipv6.abo.wanadoo.fr)
[13:17:57] *** Quits: max22- (~maxime@2a01cb0883359800a4c557047a6ba7ad.ipv6.abo.wanadoo.fr) (Ping timeout: 268 seconds)
[13:25:15] <FromDiscord> <dain> really basic question I have:
[13:25:40] <FromDiscord> <Elegantbeef> Real basic answer might suffice
[13:25:58] <FromDiscord> <dain> nim encourages unqualified imports. when reading such a module, how do you figure out where each function comes from
[13:26:18] <FromDiscord> <dain> im used to python where you can always tell by the prefix
[13:26:29] <FromDiscord> <Elegantbeef> Tooling + imports
[13:28:43] <FromDiscord> <Elegantbeef> And if you dont have tooling, is it really a concern to know which module X comes from, since you know you're probably not able to compile the code 😀
[13:32:15] <FromDiscord> <dain> what tools tells you where the functions come from
[13:32:42] <FromDiscord> <Elegantbeef> The vscode extension has it listed in hovering
[13:32:55] <FromDiscord> <Elegantbeef> Goto definition also does
[13:41:11] <FromDiscord> <Rika> The more you use a language the easier it becomes to tell where something comes from hahaha
[13:41:23] <FromDiscord> <Rika> Basically memory
[13:41:41] <FromDiscord> <Rika> And if you don’t know then tooling as said above
[13:41:56] <FromDiscord> <Rika> And then there’s also intuition lol
[13:42:37] <FromDiscord> <Elegantbeef> Yea it doesnt really matter where a symbol comes from assuming no overlap and you import just what you need
[13:42:43] <FromDiscord> <Elegantbeef> The compiler does tell you when you have unused modules
[13:43:21] <FromDiscord> <Elegantbeef> If you're wanting to see all the symbols the stdlib has you may consider looking at and searching here https://nim-lang.org/docs/theindex.html
[13:45:45] <FromDiscord> <Rika> Of course, you can have tooling import via “from import” too
[13:45:56] <FromDiscord> <Rika> Don’t ask me how to set that up though, I do not know
[13:46:31] <FromDiscord> <Rika> In reply to @Rika "Of course, you can": Notably nvim-compe can do this with configuration
[13:46:40] <FromDiscord> <haxscramper> https://narimiran.github.io/2019/07/01/nim-import.html
[13:47:00] *** Quits: beshr (~beshr@user/beshr) (Ping timeout: 272 seconds)
[14:00:16] <FromDiscord> <dain> oh ya I knew that the compiler could figure it out, was just wondering how I would
[14:00:19] <FromDiscord> <dain> thanks :)
[14:10:31] <FromDiscord> <Rika> It’s usually obvious due to types and function names
[15:24:33] <arkanoid> I really don't get peg syntax
[15:25:50] <emery> we'd have nim on plan9 if it wasn't for {.align.}
[15:28:55] <arkanoid> this plan9? https://en.wikipedia.org/wiki/Plan_9_from_Bell_Labs
[15:29:38] <emery> yep
[15:30:08] <emery> the native C compiler is only C99
[15:30:30] <arkanoid> this never fell under my radar in last 20 years. I've been living on the moon probably. Cool project!
[15:31:35] <emery> well, plan9 hasn't been used much in the last 20 years
[15:32:23] <FromDiscord> <haxscramper> What is wrong with .align.
[15:33:04] <emery> older compilers don't have any guarantess on aligning stuff
[15:33:35] <FromDiscord> <haxscramper> Ah, I just thought it somehow completely prevents use on plan9.
[15:34:09] <FromDiscord> <haxscramper> So you technically can use it, but not all features are available
[15:34:43] <emery> it does, you don't see align very much, but its used in the GC, so stuff works until things are freed
[16:08:05] <FromDiscord> <enthus1ast> i'm fighting with staticRead, i've build a template engine which compiles everything on compile time. my "compileTemplateFile" functions accepts a static string to a path. But staticRead behaviour is not want i want, it is relative to the imported modules path. It also not accepts absolute dirs. Any idea how to solve this?
[16:11:15] <FromDiscord> <Rika> make your compileTemplateFile take in a static string with the contents of the file instead of a path
[16:11:17] <FromDiscord> <enthus1ast> sent a code paste, see https://play.nim-lang.org/#ix=3v8X
[16:11:25] <FromDiscord> <Rika> and just tell the user to use staticstring(path) or so
[16:11:42] <FromDiscord> <enthus1ast> yes that can work for not extended templates
[16:11:50] <FromDiscord> <enthus1ast> but for extended templates it will not \:/
[16:12:00] <FromDiscord> <Rika> i have no idea what extended templates are
[16:12:15] <FromDiscord> <enthus1ast> an index.html can extend a master.html
[16:12:31] <FromDiscord> <enthus1ast> and have the whole boiler plate from master around its code blocks
[16:13:07] <FromDiscord> <Rika> i dont know how to help then sorry
[16:13:42] <FromDiscord> <enthus1ast> sent a code paste, see https://paste.rs/IOn
[16:14:12] <FromDiscord> <enthus1ast> wow that code block is broken, sorry
[16:16:04] <FromDiscord> <Rika> i dont know how "broken" looks
[16:16:07] <FromDiscord> <Rika> it looks fine in discord
[16:16:26] <FromDiscord> <enthus1ast> ok in matrix it is broken ...
[16:17:31] <FromDiscord> <enthus1ast> the problem is that the {% extends master.nwt %} internally must call staticRead to read the master template, and this is relative to my parser
[16:21:01] <FromDiscord> <enthus1ast> which basically is a showstopper 😥
[16:24:11] *** Quits: maxime_ (~maxime@2a01cb0883359800a4c557047a6ba7ad.ipv6.abo.wanadoo.fr) (Ping timeout: 268 seconds)
[16:24:21] <FromDiscord> <Rika> windows or linux
[16:24:29] <FromDiscord> <enthus1ast> currently windows
[16:24:51] <FromDiscord> <enthus1ast> but it must run everywhere (i consider it to run even in the browser)
[16:24:59] <FromDiscord> <enthus1ast> but then it is of course another logic
[16:25:28] <FromDiscord> <Rika> heres the code to staticread https://github.com/nim-lang/Nim/blob/devel/compiler/vmdeps.nim#L13
[16:26:05] <FromDiscord> <enthus1ast> yes
[16:28:17] <FromDiscord> <enthus1ast> mh
[16:29:06] <FromDiscord> <enthus1ast> i think now it works. Thank you Rika. I'm a little dizzy already, to much coding.
[16:29:15] <FromDiscord> <Rika> what did you do lol
[16:29:23] <FromDiscord> <Rika> i dont see anything obvious to make it work
[16:29:38] <FromDiscord> <enthus1ast> in the users file\:
[16:29:44] <FromDiscord> <Rika> and i did think it was weird that staticread didnt work with absolute directories
[16:30:03] <FromDiscord> <enthus1ast> template scriptDir()\: string =↵  parentDir(instantiationInfo(-1, true).filename)↵↵proc renderIndex(users\: seq[User])\: string = compileTemplateFile(scriptDir() / "index.nwt.html")
[16:30:31] <FromDiscord> <enthus1ast> in the parser\:`let masterStr = staticRead( parentDir(path) / secondsStepTokens[0].extendsPath)`
[16:31:08] <FromDiscord> <enthus1ast> yes that was my mistake, i called scriptDir()↵(@Rika)
[16:32:33] <FromDiscord> <enthus1ast> so basically i took the parent dir from the file i want to render
[16:32:34] <FromDiscord> <enthus1ast> which also does not work all the time mhhhhh, but for now it is good enough i guess
[16:33:47] <FromDiscord> <enthus1ast> no not the "the file i want to render" but my executable ...
[16:36:02] *** Quits: supakeen (~user@python/site-packages/supakeen) (Quit: WeeChat 3.2)
[16:36:35] *** Joins: supakeen (~user@python/site-packages/supakeen)
[16:39:48] <FromDiscord> <enthus1ast> yeah nice, the template engine works quite well. Basically a "jina" or "twig" for nim. Strongly typed \:)
[16:40:51] *** Joins: auxym (~francis@modemcable027.118-81-70.mc.videotron.ca)
[16:42:49] <FromDiscord> <enthus1ast> but in constrast to my old "nimWebTemplates" this one is compiled and has "if elif else / while / for / eval / variables / comments / include / extend" functionallity
[16:46:53] *** Quits: auxym (~francis@modemcable027.118-81-70.mc.videotron.ca) (Ping timeout: 250 seconds)
[16:47:10] *** Quits: stkrdknmibalz (~test@rrcs-75-87-43-226.sw.biz.rr.com) (Quit: WeeChat 3.0.1)
[17:01:51] *** Joins: auxym (~francis@modemcable027.118-81-70.mc.videotron.ca)
[17:09:06] *** Quits: auxym (~francis@modemcable027.118-81-70.mc.videotron.ca) (Ping timeout: 240 seconds)
[17:16:29] *** Joins: maxime_ (~maxime@2a01cb0883359800badf35d6afc41a63.ipv6.abo.wanadoo.fr)
[17:19:01] *** Joins: rockcavera (~rc@192.12.113.207)
[17:19:01] *** Quits: rockcavera (~rc@192.12.113.207) (Changing host)
[17:19:01] *** Joins: rockcavera (~rc@user/rockcavera)
[17:33:53] *** Joins: arkurious (~arkurious@user/arkurious)
[17:39:37] <FromDiscord> <enthus1ast> ugh staticRead still bites me
[17:39:55] <FromDiscord> <enthus1ast> its behaviour is nearly useless ...
[17:45:43] <FromDiscord> <enthus1ast> do you know if the compiler has a global where the current working dir is stored? This might help
[17:48:50] <FromDiscord> <Rika> isnt there a function for that
[17:49:06] <FromDiscord> <enthus1ast> all must be at compile time
[17:49:15] <FromDiscord> <TurtleP> Yeah, the os module has one @Rika
[17:49:16] <FromDiscord> <enthus1ast> because the templates are parsed on compile time
[17:49:55] <FromDiscord> <enthus1ast> nope cannot use getCurrentDir() on compile time
[17:50:53] *** Joins: vicfred_ (~vicfred@user/vicfred)
[17:50:56] <FromDiscord> <krisppurg> Anyone who knows nimsuggest, is there an example of a generic parameter and a label?
[17:51:15] <FromDiscord> <enthus1ast> either the current working dir (where the compiler is invoked) or the file that is compiled (the one that i specify via nim c -r i/need/this/path.nim)
[17:51:47] <FromDiscord> <xflywind> You need compile with `-d:vmopsDanger`
[17:52:07] <FromDiscord> <xflywind> or so to use `getCurrentDir` at compile time.
[17:54:00] *** Quits: vicfred (~vicfred@user/vicfred) (Ping timeout: 272 seconds)
[17:54:04] <FromDiscord> <xflywind> https://github.com/nim-lang/Nim/blob/6563a685c1076cb5342f65d192b8f2a983220dba/compiler/vmops.nim#L296
[17:55:57] <FromDiscord> <xflywind> yeah compile with `--experimental:vmopsDanger`
[17:58:08] <FromDiscord> <enthus1ast> yesss
[17:58:09] <FromDiscord> <xflywind> works for me
[17:58:12] <FromDiscord> <xflywind> sent a code paste, see https://play.nim-lang.org/#ix=3v9l
[17:58:29] <FromDiscord> <enthus1ast> @xflywind\:  thank you \:D
[17:59:18] <FromDiscord> <xflywind> you are welcome
[17:59:47] <FromDiscord> <enthus1ast> do you know by chance if i can enable this in a module file?
[18:00:06] <FromDiscord> <Rika> not recommended
[18:00:57] <FromDiscord> <enthus1ast> the problem is if this is not enabled via the module file, then this must be specified for every project that uses the template engine
[18:04:10] <FromDiscord> <Rika> i think experimental is a pragma
[18:04:36] <FromDiscord> <enthus1ast> {.experimental\: "vmopsDanger".}  is not working
[18:04:43] <FromDiscord> <Rika> {.experimental: vmopsDanger.} i think? i dont remember its been a while since i wrote nim code. if not maybe string
[18:05:47] *** Quits: vicfred_ (~vicfred@user/vicfred) (Quit: Leaving)
[18:06:36] <FromDiscord> <Rika> i dont think this can be enabled by pragma
[18:08:00] <FromDiscord> <xflywind> I don't know, at least you can use `staticExec` + shell command at compile time 🙂
[18:08:19] <FromDiscord> <enthus1ast> yes i tried as well...
[18:08:47] <FromDiscord> <enthus1ast> maybe i will do this but its very ugly
[18:10:42] <FromDiscord> <enthus1ast> maybe i should open an incident for a more usable staticRead
[18:15:49] <FromDiscord> <xflywind> Compile time is quite limited, maybe generate templates at runtime.
[18:16:11] <FromDiscord> <enthus1ast> the templates evaluate to nim source code
[18:16:50] <FromDiscord> <enthus1ast> this is basically a compiled jinja or twig
[18:19:16] <FromDiscord> <Ænigma> sent a code paste, see https://play.nim-lang.org/#ix=3v9t
[18:19:58] *** Joins: vicfred (~vicfred@user/vicfred)
[18:20:07] <FromDiscord> <Ænigma> (edit) "https://play.nim-lang.org/#ix=3v9t" => "https://play.nim-lang.org/#ix=3v9u"
[18:22:10] <FromDiscord> <Rika> nim uses `initT()` for a naming style
[18:23:01] <FromDiscord> <Rika> but some people use `init(T: typedesc[MyType], ...): T` or `init[T: MyType](...): T` afaik?
[18:24:00] <FromDiscord> <Ænigma> I see
[18:28:18] <FromDiscord> <Rika> imo the generic one (the last one i said) is the best one
[18:29:01] *** Quits: Lord_Nightmare (Lord_Night@user/lord-nightmare/x-3657113) (Remote host closed the connection)
[18:29:36] *** Joins: Lord_Nightmare (Lord_Night@user/lord-nightmare/x-3657113)
[18:29:49] <arkanoid> could you please help me write a PEG mangle rule for c2nim that removes all trailing underscores? like in foo_ -> foo
[19:05:44] <arkanoid> wait, I might have just found the right mindset! "^{ ( !'_' . )* }'_'$"
[19:06:56] <arkanoid> no, I was wrong
[19:08:23] <FromDiscord> <haxscramper> `#mangle "'_'{@}'_''_'" "$1"` is a possible solution, but!
[19:08:33] <FromDiscord> <haxscramper> peg does not support non-greedy quantifiers
[19:08:48] <FromDiscord> <haxscramper> But that handles `void test() {` correctly
[19:08:54] <FromDiscord> <haxscramper> Why someting sane
[19:09:14] <arkanoid> I'm testing with string "foo_bar_" -> expected output "foo_bar"
[19:09:18] <FromDiscord> <haxscramper> like regex (which everyone in the world already knows) wasn't used is completely beyond me
[19:10:57] <arkanoid> haxscramper, actually not sure, but PEG is actually deterministic, regex is not
[19:11:41] <arkanoid> and I'd say this is a requirement if dealing with code
[19:12:16] <FromDiscord> <haxscramper> requirement for dealing with code would be converting identifiers to nep1 by default
[19:12:47] <FromDiscord> <haxscramper> or supporting both regex and peg
[19:13:59] <FromDiscord> <haxscramper> I don't ask "do you really want me to generate `_poor_mans_mangling_` identifiers as-is?" in hcparse
[19:13:59] <FromDiscord> <haxscramper> I just fix it
[19:14:06] <FromDiscord> <haxscramper> so you put shit in get something usable out, without having to learn some never-before-seen text matching syntax
[19:16:01] <FromDiscord> <haxscramper> and I'm pretty sure "deterministic" does not really add anything when we talk about `^_(.?)_$`
[19:16:34] <FromDiscord> <haxscramper> which is, by the way, the use case
[19:16:56] <FromDiscord> <haxscramper> honestly I would just use `sed` on code generated from c2nim
[19:19:41] <FromDiscord> <haxscramper> I also checked whether you could use full peg grammar in `#mangle` - sadly this is not possible
[19:21:29] *** Quits: vicfred (~vicfred@user/vicfred) (Quit: Leaving)
[19:26:13] <FromDiscord> <haxscramper> Peg also has very strange notion of capture group. I tried to do `#mangle "'_' { (!'_') } { ('_' (!'_') ) } '_'" "[#1$1][#1$2]"`↵` _`
[19:26:40] <FromDiscord> <haxscramper> Leading `'_'`, then search until next `_`,
[19:26:47] <FromDiscord> <haxscramper> Then repeatedly search for `_<things>`
[19:26:51] <FromDiscord> <haxscramper> Followed by `_`
[19:27:20] <FromDiscord> <haxscramper> And given `void _foo_bar_() {}` it mangles it to `proc [#1][#2]foo[#1][#2]bar[#1][#2]()`
[19:27:30] <FromDiscord> <haxscramper> So it is applied like three times total?
[19:31:30] <FromDiscord> <haxscramper> https://regex101.com/r/WWO1nB/1
[19:32:46] <FromDiscord> <haxscramper> [Edit](https://discord.com/channels/371759389889003530/371759389889003532/873217905288953896): Peg also has very strange notion of capture group. I tried to do `#mangle "'_' { (!'_') } { ('_' (!'_') ) } '_'" "[#1$1][#2$2]"`↵` _`
[19:34:21] <arkanoid> I've been playing with the mangle option for hours and yet I'm not there
[19:36:09] <arkanoid> if you read here: https://nim-lang.org/docs/pegs.html , there's "{@} E" and "@@ E" that should exactly do what I need (capture all except trailing underscore), but mangle "{@} '_'" "$1" transforms "foo_false_" in "foofalse"
[19:36:17] <arkanoid> so there's something I don't get yet
[19:36:28] <arkanoid> it shouldn't be greedy, but apparently is
[19:38:12] <arkanoid> maybe maybe I just got it: mangle "{@} ('_'$)" "$1"
[19:38:42] <FromDiscord> <haxscramper> does not work for leading, works for trailing
[19:39:01] <FromDiscord> <haxscramper> `{@}('_'+$)` is more correct
[19:39:02] <FromDiscord> <haxscramper> `foo`
[19:39:34] <FromDiscord> <haxscramper> `^'_'{@}('_'+$)`
[19:39:42] <arkanoid> yeah, I'm just trying to replace tralining. I've a separate mangle for removing heading
[19:40:00] <arkanoid> actually 3 mangles, remove heading, remove heading, remove double "__"
[19:40:24] <arkanoid> but yeah probably I will try to merge them
[19:40:44] <FromDiscord> <haxscramper> sent a code paste, see https://play.nim-lang.org/#ix=3vai
[19:40:50] <arkanoid> but if I first replace __ with _ then the other two can be merged easily
[19:40:55] <FromDiscord> <haxscramper> oh no, `foo` fails
[19:40:55] <FromDiscord> <haxscramper> `^'_'{@}('_'$)` yes
[19:43:32] <arkanoid> "( ^ '_'* ) @@ ( '_'* $ )" "$1"
[19:44:04] <arkanoid> otherwise it won't remove trailing if heading is not present
[19:44:40] <FromDiscord> <haxscramper> https://github.com/nim-lang/c2nim/pull/218
[19:48:39] <arkanoid> this is the spirit! thanks
[19:48:52] <FromDiscord> <generic linux user> thats the spirit
[19:49:19] <FromDiscord> <Rika> no u
[19:49:21] <arkanoid> yeah, sorry, I've literally translated from my language
[19:49:22] <arkanoid> :D
[19:53:31] <FromDiscord> <exelotl> In reply to @Rika "imo the generic one": I like `proc init(foo: var Foo, ...)` but it doesn't really fit that nicely with arc I guess :(
[19:53:44] <FromDiscord> <Rika> why not
[19:53:47] <FromDiscord> <haxscramper> Honestly I did it only because it is possible to make PR on github without cloning/pushing etc, just using web interface
[19:54:06] <FromDiscord> <Rika> and im not a fan of that, it requires me to have an out variable
[19:54:20] <FromDiscord> <haxscramper> So not that big of a deal
[19:57:12] *** Quits: neceve (~quassel@2a02:c7f:607e:d600:f762:20dd:304e:4b1f) (Ping timeout: 258 seconds)
[19:58:09] <arkanoid> haxscramper, I've just realised there's a --nep1 option in c2nim that does all the underscore thing automatically
[19:59:58] <FromDiscord> <haxscramper> making most wanted option non-default
[20:00:02] <FromDiscord> <haxscramper> classic
[20:00:04] <arkanoid> I've just realised that's creating also big holes in syntax
[20:00:23] <FromDiscord> <haxscramper> what do you mean?
[20:00:45] <arkanoid> I mean, I was already quite far from compilable nim code, but with --nep1 I'm even further away
[20:01:28] <FromDiscord> <exelotl> In reply to @Rika "why not": I came to that conclusion when I was trying it a few weeks ago, as assignment seems to be the preferred way to initialise things. `foo.init()` does pair nicely with `foo.destroy()`, but that's superseded by destructors in arc
[20:01:39] <FromDiscord> <haxscramper> so `#mangle` is better in that case?
[20:01:58] <FromDiscord> <haxscramper> Can you show what exactly `--nep1` breaks?
[20:12:00] <FromDiscord> <top level await> hello could anybody look at my code ?
[20:12:09] <FromDiscord> <top level await> I don't think it's that good and I want some second opinions
[20:12:14] <FromDiscord> <top level await> I'm trying out nim and have really liked it so far
[20:13:06] <FromDiscord> <top level await> https://github.com/yourfriendoss/yourfriendoss
[20:13:09] <nrds> <12R2D299> 4GitHub: 7"Website + Readme"
[20:15:24] <FromDiscord> <top level await> the nim code is a single file `run.nim`
[20:17:18] <FromDiscord> <haxscramper> If you need mostly stylistic commments -↵● https://github.com/yourfriendoss/yourfriendoss/blob/main/run.nim#L34 usually it is not necessary to use `strutils` all over the place↵● https://github.com/yourfriendoss/yourfriendoss/blob/main/run.nim#L1 std imports are better done with `std/[]` prefix, other ones I assume are packages? (there is no `.nimble` file for a project, so I would have to manually install all of them).
[20:17:58] <FromDiscord> <haxscramper> Otherwise it looks fine
[20:18:05] <FromDiscord> <top level await> what's a .nimble?
[20:18:21] <FromDiscord> <top level await> i don't know a better way to do the replacing
[20:19:56] <arkanoid> haxscramper, I'm trying to create minimal example. Problem is that I'm converting a 11K lines long C header
[20:21:18] <FromDiscord> <haxscramper> In reply to @arkanoid "<@608382355454951435>, I'm trying to": you can just send it as is, I just want to take a quick look
[20:21:22] <nrds> <06Prestige99> Anyone else have a problem accidentally typing discard instead of discord now?
[20:22:12] <FromDiscord> <haxscramper> well, with your current `#mangle` modifications etc, I would just do `c2nim`, `c2nim --nep1` and look at cwdiff
[20:22:50] <FromDiscord> <top level await> how do I add stuff a dependency to my .nimble file?
[20:22:55] <FromDiscord> <top level await> (edit) "stuff a" => "\a"
[20:22:59] <FromDiscord> <top level await> (edit) "\a" => "a"
[20:23:01] <FromDiscord> <top level await> how do I add a dependency to my .nimble file?
[20:23:30] <FromDiscord> <generic linux user> In reply to @top level await "what's a .nimble?": breuh
[20:23:30] <FromDiscord> <haxscramper> I was talking about `strutils.replace` - there is no need for `strutils.` part. Just `replace` would be sufficient
[20:23:31] <FromDiscord> <haxscramper> Pin minimum required prologue versions, like `prologue >= 0.4.4"`
[20:23:37] <FromDiscord> <haxscramper> sent a code paste, see https://play.nim-lang.org/#ix=3vay
[20:24:05] <FromDiscord> <top level await> In reply to @richard stallmen(crazy GNU guy) "breuh": i'm very new to nim..
[20:24:26] <FromDiscord> <generic linux user> please suit yourslef
[20:24:46] <FromDiscord> <haxscramper> it seems like matrix bridge is routed through a potato floating somewhere in the pacific ocean
[20:24:56] <FromDiscord> <top level await> sent a code paste, see https://play.nim-lang.org/#ix=3vaz
[20:25:04] <FromDiscord> <top level await> (edit) "https://play.nim-lang.org/#ix=3vaz" => "https://play.nim-lang.org/#ix=3vaA"
[20:25:06] <FromDiscord> <haxscramper> yes, that is correct
[20:25:11] <FromDiscord> <top level await> thanks
[20:26:02] <FromDiscord> <haxscramper> now `nimble run` should pull down all deps, build and run binary
[20:26:51] <FromDiscord> <generic linux user> oh i didnt know that you had run
[20:27:09] <FromDiscord> <generic linux user> lesson: read doc :|
[20:27:26] <arkanoid> haxscramper, no problem. I can send you raw initial .h and the .nim generated via c2nim and mangling rules
[20:30:47] <FromDiscord> <haxscramper> yes, that would be enogh
[20:32:56] *** Joins: neceve (~quassel@2a02:c7f:607e:d600:d2c9:6317:8847:51b6)
[20:36:03] <FromDiscord> <Rika> In reply to @haxscramper "it seems like matrix": that implies it is water cooled
[20:40:06] <FromDiscord> <generic linux user> :|
[20:45:23] *** Quits: maxime_ (~maxime@2a01cb0883359800badf35d6afc41a63.ipv6.abo.wanadoo.fr) (Quit: Leaving)
[20:46:17] *** Joins: max22- (~maxime@2a01cb08833598007a28640b26a8ad90.ipv6.abo.wanadoo.fr)
[21:03:50] *** Quits: neceve (~quassel@2a02:c7f:607e:d600:d2c9:6317:8847:51b6) (Remote host closed the connection)
[21:05:05] *** Joins: neceve (~quassel@2a02:c7f:607e:d600:f762:20dd:304e:4b1f)
[21:10:45] <arkanoid> haxscramper, here's the c2nim output without manual mangling but --nep1 https://termbin.com/nyci
[21:10:56] <arkanoid> I've removed lines 30:34
[21:36:22] <arkanoid> I think this is a good file identify possible c2nim improvements
[21:36:39] <arkanoid> for example, I'm finding '__' even with --nep1
[21:36:51] *** Quits: rockcavera (~rc@user/rockcavera) (Remote host closed the connection)
[21:56:53] <FromDiscord> <codic> gintro looks to auto generate stuff, and I'm trying to grep for `DestroyNotify` to see what it aliases to but can't find it, and the compiler isn't being helpful; what could I do?
[21:57:21] <FromDiscord> <codic> actually found it
[21:57:27] <FromDiscord> <codic> ~/.nimble/bin/pkgs
[21:58:33] <FromDiscord> <codic> sent a code paste, see https://paste.rs/H8G
[21:58:55] <FromDiscord> <codic> oh no cdecl i guess
[22:06:02] <FromDiscord> <codic> sent a code paste, see https://play.nim-lang.org/#ix=3vbl
[22:09:33] <FromDiscord> <codic> ok so the destroy proc should be replaced with nil
[22:47:14] *** Quits: max22- (~maxime@2a01cb08833598007a28640b26a8ad90.ipv6.abo.wanadoo.fr) (Ping timeout: 272 seconds)
[23:19:44] <FromDiscord> <StefanSalewski (StefanSalewski)> Codic, I can not really help you with vte async, but you may look at
[23:19:48] <FromDiscord> <StefanSalewski (StefanSalewski)> https://github.com/StefanSalewski/gintro/blob/master/examples/gtk3/vte.nim
[23:20:04] <FromDiscord> <StefanSalewski (StefanSalewski)> and [StefanSalewski/gintro#82](https://github.com/StefanSalewski/gintro/issues/82)
[23:20:11] <FromDiscord> <StefanSalewski (StefanSalewski)> Bye, logout
[23:28:34] <FromDiscord> <codic> yeah I got it to work, thanks
[23:29:47] *** Joins: max22- (~maxime@2a01cb08833598006a5fbc7f80028307.ipv6.abo.wanadoo.fr)
[23:40:38] <FromDiscord> <StefanSalewski (StefanSalewski)> codic, great!
[23:40:43] <FromDiscord> <StefanSalewski (StefanSalewski)> logout
[23:43:48] <nrds> <11sorcerer99> o/
