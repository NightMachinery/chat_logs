[00:00:36] <Nistar> After I finish working through K&R C, does anyone have some recommendations for a book or some material for modern C developement, including organizing large projects, building and testing, defensive programming, etc?
[00:02:12] <Wulf> Nistar: perhaps look at cmake, cunit, doxygen, sphinx. No idea if there is good reading material for those.
[00:02:56] <Nistar> Sounds good, I'll just look into those projects. What about compilers? How do people decide on which to choose for their project?
[00:04:30] <Wulf> Nistar: there are only two relevant compilers, gcc and clang/llvm.
[00:05:00] <Wulf> Nistar: I believe you can configure which one to use through cmake.
[00:05:32] <Nistar> CLANG and LLVM are part of the same project?
[00:06:10] <Wulf> Nistar: I think clang is a part of llvm.
[00:07:25] <Nistar> Wulf: Thanks.
[00:08:06] <Nistar> How about resources for learning "enough assembly"?
[00:08:21] <Wulf> Nistar: enough for what?
[00:08:55] <twkm> the wiki has some more.
[00:09:17] <Nistar> To develop a deeper understanding of how C operates with hardware
[00:09:34] <makersmasher> no starch has a decent book....
[00:09:42] <clarity> You don't need to study assembly
[00:09:59] <clarity> If you need to do things with it, just look things up as you go and you'll learn just enough
[00:10:03] <Wulf> Nistar: write a few simple C functions and have a look at the assembly code that your compiler spits out
[00:10:21] <Nistar> makersmasher: _Art of 64-bit assembly_?
[00:10:30] <tk> I would argue that trying to understand how C operates with hardware is generally a bad idea unless you already know C very well, or at least have a healthy respect for the boundaries of your C knowledge and can stop yourelf from trying to fill in gaps in your C knowledge with your newfound understanding of hardware.
[00:10:32] <floatcomplex> don't bother learning assembly for x86_64
[00:10:47] <tk> Lots of bugs arise because people assume that C operates like a direct abstraction over their hardware
[00:10:47] <floatcomplex> learn aarch64 assembly because optimizing your code at that level actually matters
[00:11:20] <Nistar> tk: Oh that's an interesting view.
[00:11:26] <floatcomplex> x86_64 is both a turing tarpid and not worth optimizing for anyway
[00:11:27] <makersmasher> Nistar, yeah, art of assembly
[00:11:32] <floatcomplex> s/tarpid/tarpit/
[00:11:45] <makersmasher> listen to the others though, I am not an expert
[00:12:04] <chair1> Nistar: At the uni we read Patterson's book "Computer Organization and Design", it's all theory but introduces about MIPS assembly, how a CPU works, what is the pipeline and branch prediction, how the stack works etc.
[00:12:44] <makersmasher> I started learning asm because I wanted to be a RE/exploit developer
[00:13:05] <aosync> assembly is fun
[00:13:20] <makersmasher> ...and I've always wanted to write a custom NES game
[00:15:47] <Nistar> Right now I just want to learn enough C to the point where I could start my own projects, and manipulate OS-level things, and probably some CFFI stuff. I do want to get good at this language, though I don't yet know what I want to end up doing with it -- I've always found that expanding my tool repertoire allows me to take on bigger and bolder projects. And yeah, reverse engineering sounds very
[00:15:49] <Nistar> exciting, though that might be something I'd be into more as a hobby.
[00:16:26] <Nistar> It's kind of interesting seeing these posts on Hacker News where guys RE some old video game and discover unused assets and levels :-)
[00:18:32] *** Quits: superdupond (~Kev@2a01cb0400149f00a9a1e81531558137.ipv6.abo.wanadoo.fr) (Ping timeout: 265 seconds)
[00:20:20] <chair1> As you may have read on K&R, if you know the basics you can already start or contribute to big projects, C is rather simple and you can go very far with it, the rest is all functions and libraries to learn, and you learn as you need
[00:21:02] *** candide sets mode: -b *!~tar_xvf@*.amazonaws.com
[00:22:49] <Wulf> Nistar: game content is usually saved as data in files. Parse the files, understand the content and compare to the content you can see during normal game play.
[00:23:03] <chair1> Sorry, I've just checked the book, it says the opposite at Chapter 1. It covers the basics for simple programs but you need to learn the rest for bigger stuff lol
[00:23:23] <Wulf> Nistar: I guess finding out if content is actually inaccessible or just well hidden can be complicated
[00:24:51] *** Quits: rgrinberg (~textual@200.5.63.76) (Quit: My MacBook has gone to sleep. ZZZzzzâ€¦)
[00:27:05] *** Joins: Jong (~Jong@2620:10d:c090:400::5:4527)
[00:27:05] *** Quits: Bi1non (~8iIn0n@2a01:4b00:8e07:7900:aa4d:84b:c3c0:acbe) (Quit: Leaving)
[00:28:28] *** Joins: tar_xvf (~tar_xvf@ec2-3-136-243-174.us-east-2.compute.amazonaws.com)
[00:28:58] *** Joins: De4nWhit3 (~De4nWhit3@165-73-119-36.ip.afrihost.capetown)
[00:29:11] <De4nWhit3> Hello all.
[00:30:25] *** Joins: alefir (~alefir@rrcs-24-43-248-58.west.biz.rr.com)
[00:30:34] *** Quits: plainoldcheese (~plainoldc@user/plainoldcheese) (Quit: WeeChat 3.3)
[00:30:54] *** Joins: Alhazred (~Alhazred@s91904425.blix.com)
[00:30:56] *** Quits: linguist (~autistic@user/linguist) (Ping timeout: 256 seconds)
[00:31:27] *** Quits: cm007magnum (~Rheanna@218.78.99.237) (Remote host closed the connection)
[00:33:23] *** Quits: chair1 (~bbs@187.109.18.204) (Quit: Thanks for the help, sorry for being vague :))
[00:34:38] *** Joins: cm007magnum (~Rheanna@218.78.79.129)
[00:35:56] *** Quits: bruda (~bruda@172.58.62.226) (Ping timeout: 265 seconds)
[00:35:58] *** Joins: brad_mssw (~bhouse@2601:344:4100:b490:f0ce:fbf8:7961:3fa2)
[00:36:21] *** Joins: bruda (~bruda@172.58.62.226)
[00:36:25] *** Quits: constxd (~brad@192.75.101.164) (Ping timeout: 265 seconds)
[00:41:13] *** Quits: strajder (~strajder@user/strajder) (Quit: leaving)
[00:43:27] *** Quits: zsoltiv_ (~zsoltiv@fibhost-67-12-35.fibernet.hu) (Read error: Connection reset by peer)
[00:44:17] *** Joins: zsoltiv_ (~zsoltiv@fibhost-67-12-35.fibernet.hu)
[00:44:36] <sham1> Hello
[00:46:46] *** Joins: boB_K7IQ (~boB_K7IQ@152.44.147.180)
[00:46:53] * Feuermagier greets candide 
[00:46:54] *** Joins: Guest4430 (~Guest44@nat-x096-090.reshsg.uci.edu)
[00:47:03] *** Quits: Iarfen (~quassel@ec2-3-225-168-229.compute-1.amazonaws.com) (Ping timeout: 265 seconds)
[00:47:17] *** Joins: linguist (~autistic@user/linguist)
[00:47:33] *** Quits: ko (~i.am@user/marlboro) (Quit: I come down here for a fat woman and that's what I'm havin.)
[00:47:43] *** Parts: Guest4430 (~Guest44@nat-x096-090.reshsg.uci.edu) ()
[00:47:46] <Feuermagier> well it thinks i've mistyped gets ._.
[00:47:55] * Feuermagier pets candide instead
[00:48:48] <sham1> Please do not the bot
[00:49:16] <Wulf> ,botsnack
[00:49:16] * candide excitedly ingests its tomato cake.
[00:50:48] <fizzie> I know carrot cakes are a thing, but I think that's taking it a little far.
[00:51:23] <fizzie> Unless a "tomato cake" is just a salad.
[00:51:35] <Wulf> or it's actually a noodle cake with tomato topping.
[00:51:46] <Feuermagier> Wulf, I think that's spaghetti
[00:51:52] <Wulf> oh.
[00:54:14] *** Joins: cousteau (~cousteau@user/cousteau)
[00:56:41] *** Joins: lkor (~lionkor@beammp/staff/lionkor)
[00:57:23] *** Quits: lionkor (~lionkor@beammp/staff/lionkor) (Ping timeout: 250 seconds)
[01:00:31] *** Quits: Chip1972 (~Chip1972@186.206.217.247) (Quit: Leaving)
[01:06:26] *** Quits: rsarson (~rsarson@2607:fea8:29e1:b000::9037) (Quit: Leaving.)
[01:06:41] <sham1> Spaghetti but with what
[01:07:22] *** Joins: Klinda (~superleag@user/klinda)
[01:09:31] *** Quits: bruda (~bruda@172.58.62.226) (Ping timeout: 250 seconds)
[01:10:10] *** Quits: Alhazred (~Alhazred@s91904425.blix.com) (Ping timeout: 260 seconds)
[01:10:26] *** Joins: bruda (~bruda@172.58.62.226)
[01:11:09] <cousteau> sausages
[01:13:06] *** Quits: piku (~piku@47.202.113.8) (Quit: Leaving)
[01:13:23] *** Joins: Senicar7 (~Senicar@gateway/tor-sasl/senicar)
[01:15:32] *** Quits: Senicar (~Senicar@gateway/tor-sasl/senicar) (Remote host closed the connection)
[01:15:34] *** Senicar7 is now known as Senicar
[01:16:36] *** Quits: AmR (~AmREiSa@156.199.219.108) (Quit: Konversation terminated!)
[01:16:51] *** Joins: rsarson (~rsarson@2607:fea8:29e1:b000::9037)
[01:18:05] *** Joins: diamondbond (~diamondbo@175.157.52.20)
[01:18:12] <Nistar> I'm about half-way done K&R C; I started on Thursday, aiming to do at least a 3/4ths of the exercises in the book. Some of the exercises can be real timesinks, and I have a feeling they're skills I'd end up picking up anyway working on some project.
[01:18:36] *** Quits: diamondbond (~diamondbo@175.157.52.20) (Read error: Connection reset by peer)
[01:21:05] *** Joins: lionkor (~lionkor@beammp/staff/lionkor)
[01:21:18] *** Quits: the (~the@2620:8d:8000:1044:b6ca:1ac:6dab:2ab1) (Remote host closed the connection)
[01:21:29] *** Quits: cm007magnum (~Rheanna@218.78.79.129) (Remote host closed the connection)
[01:21:39] *** Quits: lkor (~lionkor@beammp/staff/lionkor) (Ping timeout: 250 seconds)
[01:23:09] *** Joins: cm007magnum (~Rheanna@218.78.94.61)
[01:26:18] *** Quits: ZedHedTed (~ZedHedTed@user/zedhedted) (Remote host closed the connection)
[01:27:35] *** Quits: zacts (~zacts@user/zacts) (Quit: leaving)
[01:27:51] *** Joins: zacts (~zacts@user/zacts)
[01:33:36] *** Quits: Nistar (~Nistar@188.241.177.235) (Quit: WeeChat 3.3)
[01:42:56] *** Joins: bonbon (~bonbon@103.111.178.109)
[01:42:56] *** Quits: bonbon (~bonbon@103.111.178.109) (Changing host)
[01:42:56] *** Joins: bonbon (~bonbon@user/bonbon)
[01:43:39] *** Quits: rsjw (~quassel@user/rsjw) (Quit: rsjw)
[01:44:21] *** Quits: bonbon (~bonbon@user/bonbon) (Client Quit)
[01:45:44] *** Quits: mrig (~mrig@user/mrig) (Ping timeout: 256 seconds)
[01:47:22] *** Joins: mrig (~mrig@user/mrig)
[01:48:31] *** Quits: radnic (~NeckLek@89.137.113.39) (Read error: Connection reset by peer)
[01:48:34] *** Quits: mikoto-chan (~mikoto-ch@esm-84-240-99-143.netplaza.fi) (Ping timeout: 256 seconds)
[01:50:41] *** Quits: mimmy (~mimmy@72.142.88.18) (Ping timeout: 250 seconds)
[01:50:57] *** candide sets mode: -o candide
[01:51:03] *** Joins: loganlee (~Thunderbi@user/loganlee)
[01:51:52] *** Joins: Alhazred (~Alhazred@130.245.70.28)
[01:53:25] *** Quits: kuoi (~kuoi@109.175.166.58) (Remote host closed the connection)
[01:53:55] *** Quits: banc (banc@gateway/vpn/airvpn/banc) (Ping timeout: 265 seconds)
[01:55:43] *** Quits: Fleck (~fleck@user/fleck) (Quit: GOSUB w/o RETURN)
[01:56:30] *** Joins: Fleck (~fleck@user/fleck)
[01:56:38] *** Quits: chiselfuse (~chiselfus@user/chiselfuse) (Remote host closed the connection)
[01:57:02] *** Joins: banc (banc@gateway/vpn/airvpn/banc)
[01:57:19] *** Joins: chiselfuse (~chiselfus@user/chiselfuse)
[01:57:29] *** Quits: kenanmarasli (~kenanmara@user/kenanmarasli) (Quit: Leaving)
[01:59:31] <zwr> that's some speed, I took 2 months and don't remember how many of the exercises I completed
[02:00:50] *** Quits: zwr (~zwr@2804:d45:b966:fb00:f670:f79d:3e7d:a052) (Remote host closed the connection)
[02:01:00] *** Joins: zwr (~zwr@2804:d45:b966:fb00:c972:cfd6:54b3:c83e)
[02:01:13] <nitrix> You're doing fantastic for just a week. Feel free to ask questions as you run into more real-world problems.
[02:02:07] *** Quits: sord937 (~sord937@gateway/tor-sasl/sord937) (Quit: sord937)
[02:02:18] *** Quits: whupdup (~whupdup@pool-173-76-128-81.bstnma.fios.verizon.net) (Quit: Going offline, see ya! (www.adiirc.com))
[02:02:28] <nitrix> More often people build things in C because they have to and it's the only language that makes sense. I wouldn't recommend forcing things the other way around.
[02:03:15] *** Quits: Alhazred (~Alhazred@130.245.70.28) (Ping timeout: 250 seconds)
[02:04:26] *** Quits: Y4knotiS (~YaknotiS@cpc1-cmbg18-2-0-cust87.5-4.cable.virginm.net) (Ping timeout: 256 seconds)
[02:04:29] *** Joins: mongrel (uid508343@ilkley.irccloud.com)
[02:06:25] *** Joins: CaryHartline (~CaryHartl@2603-8080-6a0e-8d88-a5f1-5281-6a38-5d1d.res6.spectrum.com)
[02:06:43] *** Quits: bruda (~bruda@172.58.62.226) (Ping timeout: 250 seconds)
[02:07:42] *** Quits: Klinda (~superleag@user/klinda) (Quit: Konversation terminated!)
[02:08:21] *** Quits: aradesh (~aradesh@user/aradesh) (Quit: WeeChat 1.9.1)
[02:09:19] <nitrix> I'd try to find domains where C's minimalism/performance gives you an advantage. Embedded devices, IoT, drivers, crypto, graphics, networking, gamedev, sound, physics, simulations, AI... anything fairly low level or computationally intensive.
[02:10:46] *** Quits: dogbert2 (~Bill@ip68-105-189-91.lv.lv.cox.net) (Remote host closed the connection)
[02:11:01] *** Joins: dogbert2 (~Bill@ip68-105-189-91.lv.lv.cox.net)
[02:11:14] *** Joins: mimmy (~mimmy@72.142.88.18)
[02:11:30] *** Quits: cm007magnum (~Rheanna@218.78.94.61) (Remote host closed the connection)
[02:12:07] *** Quits: kitsunenokenja (~kitsunech@68.91.220.96) (Ping timeout: 265 seconds)
[02:13:12] *** Joins: cm007magnum (~Rheanna@218.78.99.237)
[02:13:54] *** Quits: shivesh (~shivesh@user/shivesh) (Quit: leaving)
[02:14:26] <nitrix> Otherwise, all the fine grained control that the language gives you starts to get in the way. Memory management becomes a burden, portability a burden, ...
[02:14:37] *** Joins: kurahaupo_ (~kurahaupo@pa49-179-130-175.pa.nsw.optusnet.com.au)
[02:14:48] *** Quits: kurahaupo (~kurahaupo@ppp122-115.static.internode.on.net) (Read error: Connection reset by peer)
[02:15:05] *** Quits: kurahaupo_ (~kurahaupo@pa49-179-130-175.pa.nsw.optusnet.com.au) (Read error: Connection reset by peer)
[02:15:44] *** Joins: kurahaupo (~kurahaupo@pa49-179-130-175.pa.nsw.optusnet.com.au)
[02:15:44] *** Joins: lotation[m] (~lotationm@2001:470:69fc:105::1:355f)
[02:15:59] *** Quits: mimmy (~mimmy@72.142.88.18) (Ping timeout: 265 seconds)
[02:16:27] *** Quits: kurahaupo (~kurahaupo@pa49-179-130-175.pa.nsw.optusnet.com.au) (Read error: Connection reset by peer)
[02:16:40] *** Parts: lotation[m] (~lotationm@2001:470:69fc:105::1:355f) ()
[02:17:15] *** Joins: whupdup (~whupdup@pool-173-76-128-81.bstnma.fios.verizon.net)
[02:17:20] *** Quits: magla (~gelignite@55d4d56a.access.ecotel.net) (Quit: Stay safe!)
[02:17:29] *** Joins: kurahaupo (~kurahaupo@pa49-179-130-175.pa.nsw.optusnet.com.au)
[02:20:15] *** Quits: tejr (~tejr@user/tejr) (Ping timeout: 276 seconds)
[02:20:15] *** Quits: bud (~bud@user/bud) (Read error: Connection reset by peer)
[02:21:02] *** Joins: constxd (~brad@192.75.101.164)
[02:26:32] *** Quits: boB_K7IQ (~boB_K7IQ@152.44.147.180) (Ping timeout: 256 seconds)
[02:27:13] *** Quits: gh34 (~textual@cpe-184-58-181-106.wi.res.rr.com) (Quit: Textual IRC Client: www.textualapp.com)
[02:29:31] *** Quits: kurahaupo (~kurahaupo@pa49-179-130-175.pa.nsw.optusnet.com.au) (Ping timeout: 265 seconds)
[02:29:49] *** Joins: kurahaupo (~kurahaupo@pa49-180-154-230.pa.nsw.optusnet.com.au)
[02:30:59] *** Quits: zsoltiv_ (~zsoltiv@fibhost-67-12-35.fibernet.hu) (Ping timeout: 250 seconds)
[02:31:50] *** Joins: zsoltiv_ (~zsoltiv@fibhost-67-12-35.fibernet.hu)
[02:32:40] *** Quits: wovixo (~wovixo@128.104.205.49) (Quit: Leaving)
[02:32:46] *** Quits: pizdets_ (~pizdets@183.182.110.150) (Ping timeout: 250 seconds)
[02:33:43] *** Joins: pizdets (~pizdets@183.182.115.47)
[02:36:07] *** Joins: rgrinberg (~textual@190.113.102.153)
[02:37:53] *** Quits: Echoz_ (~chris@user/echoz) (Ping timeout: 264 seconds)
[02:39:34] *** Quits: CaryHartline (~CaryHartl@2603-8080-6a0e-8d88-a5f1-5281-6a38-5d1d.res6.spectrum.com) (Quit: My iMac has gone to sleep. ZZZzzzâ€¦)
[02:40:32] *** Quits: kurahaupo (~kurahaupo@pa49-180-154-230.pa.nsw.optusnet.com.au) (Read error: Connection reset by peer)
[02:42:22] *** Quits: Techcable_ (~Techcable@168.235.93.147) (Quit: ZNC - https://znc.in)
[02:42:45] *** Joins: Echoz_ (~chris@user/echoz)
[02:43:07] *** Joins: kurahaupo_ (~kurahaupo@ppp122-115.static.internode.on.net)
[02:43:39] *** Quits: Richard_Cavell (uid165693@ilkley.irccloud.com) (Quit: Connection closed for inactivity)
[02:44:10] *** Quits: mrig (~mrig@user/mrig) (Quit: WeeChat 3.0)
[02:44:26] *** Joins: Techcable (~Techcable@168.235.93.147)
[02:45:06] *** Joins: freakazoid12345 (~matt@2603:9000:cf0f:80e3:c95:5e78:2621:2637)
[02:45:28] *** Quits: Fault (~Fault@150.230.39.7) (Quit: Quit.)
[02:46:04] *** Joins: Alhazred (~Alhazred@s91904425.blix.com)
[02:47:27] *** Quits: reset (~reset@user/reset) (Ping timeout: 250 seconds)
[02:47:36] *** Quits: kurahaupo_ (~kurahaupo@ppp122-115.static.internode.on.net) (Read error: Connection reset by peer)
[02:47:46] *** Joins: kurahaupo (~kurahaupo@ppp122-115.static.internode.on.net)
[02:47:53] *** Quits: freakazoid343 (~matt@2603:9000:cf0f:80e3:c95:5e78:2621:2637) (Ping timeout: 250 seconds)
[02:48:01] *** Joins: Fault (~Fault@150.230.39.7)
[02:49:56] *** Quits: kurahaupo (~kurahaupo@ppp122-115.static.internode.on.net) (Read error: Connection reset by peer)
[02:51:49] *** Quits: perrierjouet (~perrier-j@modemcable012.251-130-66.mc.videotron.ca) (Quit: WeeChat 3.3)
[02:52:01] *** Joins: kurahaupo (~kurahaupo@ppp122-115.static.internode.on.net)
[02:53:54] *** Quits: kurahaupo (~kurahaupo@ppp122-115.static.internode.on.net) (Read error: Connection reset by peer)
[02:54:35] *** Quits: pnill_ (~pnill@ip170.ip-54-39-37.net) (Ping timeout: 250 seconds)
[02:55:48] *** Joins: Nistar (Nistar@gateway/vpn/protonvpn/nistar)
[02:56:20] *** Joins: kurahaupo (~kurahaupo@ppp122-115.static.internode.on.net)
[02:56:25] *** Quits: puke (~puke@user/puke) (Quit: puke)
[02:58:17] *** Quits: kurahaupo (~kurahaupo@ppp122-115.static.internode.on.net) (Read error: Connection reset by peer)
[02:58:30] *** Joins: lkor (~lionkor@beammp/staff/lionkor)
[02:58:42] *** Joins: kurahaupo (~kurahaupo@ppp122-115.static.internode.on.net)
[02:59:00] *** Quits: lionkor (~lionkor@beammp/staff/lionkor) (Ping timeout: 265 seconds)
[02:59:50] *** Quits: kurahaupo (~kurahaupo@ppp122-115.static.internode.on.net) (Read error: Connection reset by peer)
[03:00:24] *** Quits: plastico (~plastico@neomutt/plastico) (Quit: WeeChat 3.3)
[03:00:44] *** Quits: vdamewood (~vdamewood@fedora/vdamewood) (Quit: My MacBook Pro has gone to sleep. ZZZzzzâ€¦)
[03:02:11] *** Quits: constxd (~brad@192.75.101.164) (Ping timeout: 250 seconds)
[03:02:43] *** Joins: perrierjouet (~perrier-j@modemcable012.251-130-66.mc.videotron.ca)
[03:06:57] *** Quits: alch (~alch@151.68.22.42) (Ping timeout: 250 seconds)
[03:08:42] *** Joins: alch (~alch@151.34.36.165)
[03:10:34] *** Joins: tinyweasel (~weasel@15.235.28.27)
[03:10:53] *** Quits: perrierjouet (~perrier-j@modemcable012.251-130-66.mc.videotron.ca) (Quit: WeeChat 3.3)
[03:12:13] *** Joins: soapsudsxx (~soapsudsx@141.193.188.156)
[03:12:18] *** Joins: mimmy (~mimmy@2607:fea8:6e0:7f90:d1ec:e4ac:744a:8e08)
[03:12:54] *** Joins: lionkor (~lionkor@beammp/staff/lionkor)
[03:14:03] *** Quits: lkor (~lionkor@beammp/staff/lionkor) (Ping timeout: 268 seconds)
[03:15:59] *** Quits: nostar (~nostar@2601:406:4100:34d:8f4:5ea7:30b2:b7e6) (Ping timeout: 264 seconds)
[03:17:12] *** Quits: rgrinberg (~textual@190.113.102.153) (Read error: Connection reset by peer)
[03:18:19] *** Joins: rgrinberg (~textual@190.113.102.153)
[03:18:21] *** Joins: pnill (~pnill@ip170.ip-54-39-37.net)
[03:20:12] *** Quits: LucaTM (~LucaTM@user/lucatm) (Quit: Textual IRC Client: www.textualapp.com)
[03:22:22] *** Quits: whupdup (~whupdup@pool-173-76-128-81.bstnma.fios.verizon.net) (Quit: Going offline, see ya! (www.adiirc.com))
[03:23:54] *** Joins: wroathe (~wroathe@c-68-54-25-135.hsd1.mn.comcast.net)
[03:23:54] *** Quits: wroathe (~wroathe@c-68-54-25-135.hsd1.mn.comcast.net) (Changing host)
[03:23:54] *** Joins: wroathe (~wroathe@user/wroathe)
[03:23:58] <floatcomplex> any time when two people need to maintain the same code, c is a better choice than c++
[03:24:12] <floatcomplex> regardless of application
[03:24:43] <floatcomplex> (and, spoiler: you are two people)
[03:27:20] <floatcomplex> in other words, c++ is the right language to use when you are writing a bunch of code in a c++ game engine that you need to ship and then never fix
[03:27:54] *** Joins: davros (~davros@host86-185-61-22.range86-185.btcentralplus.com)
[03:28:09] *** Joins: g2anj (~v@58.227.244.56)
[03:28:10] *** Joins: perrierjouet (~perrier-j@modemcable012.251-130-66.mc.videotron.ca)
[03:32:50] *** Quits: mimmy (~mimmy@2607:fea8:6e0:7f90:d1ec:e4ac:744a:8e08) (Ping timeout: 265 seconds)
[03:33:46] *** Joins: ChromaCat248 (~ChromaCat@user/chromacat248)
[03:34:56] <twkm> probably game devs would argue that, but as it isn't very topical i hope they don't.
[03:36:32] *** Joins: nostar (~nostar@68.51.221.108)
[03:38:21] *** Joins: lllh (~llh@198.48.244.21)
[03:39:19] *** Quits: llh (~llh@user/llh) (Ping timeout: 268 seconds)
[03:39:29] *** Quits: luizfrds (~Luiz@152.250.243.147) (Read error: Connection reset by peer)
[03:40:17] *** Joins: luizfrds (~Luiz@152.250.243.147)
[03:41:23] *** Quits: lllh (~llh@198.48.244.21) (Remote host closed the connection)
[03:41:35] *** Quits: Fault (~Fault@150.230.39.7) (Quit: Quit.)
[03:41:53] *** Joins: llh (~llh@user/llh)
[03:43:32] <apotheon> floatcomplex: That's a good explanation of the problem.
[03:44:47] *** Quits: Cyp (~cyp@192038135092.mbb.telenor.dk) (Read error: Connection reset by peer)
[03:45:25] *** Joins: Cyp (~cyp@192038135092.mbb.telenor.dk)
[03:46:04] *** Quits: De4nWhit3 (~De4nWhit3@165-73-119-36.ip.afrihost.capetown) (Quit: Connection closed)
[03:52:00] *** Quits: cm007magnum (~Rheanna@218.78.99.237) (Remote host closed the connection)
[03:52:40] *** Quits: soapsudsxx (~soapsudsx@141.193.188.156) (Remote host closed the connection)
[03:53:58] *** Joins: cm007magnum (~Rheanna@218.78.94.61)
[03:54:11] *** Quits: Cyp (~cyp@192038135092.mbb.telenor.dk) (Read error: Connection reset by peer)
[03:54:35] *** Quits: Inline (~Inline@2a02:908:1252:7a80:7c12:e31e:34fb:c517) (Ping timeout: 265 seconds)
[03:54:36] *** Joins: Cyp (~cyp@192038135092.mbb.telenor.dk)
[03:56:24] <cousteau> floatcomplex: what the hell do you mean I am two people?
[03:56:28] <cousteau> yeah, what the hell do you mean?
[03:56:53] *** Joins: EdFletcher (~PKD@user/edfletcher)
[03:58:59] *** Quits: dutch (~DutchIngr@user/dutch) (Quit: WeeChat 3.3)
[03:59:21] *** Joins: pucara (~i@181.95.204.204)
[03:59:24] <twkm> you today, and you later.
[03:59:40] *** Quits: Lord_of_Life (~Lord@user/lord-of-life/x-2819915) (Ping timeout: 268 seconds)
[04:00:06] <twkm> authoring something vs maintaining it.
[04:00:27] *** Joins: Lord_of_Life (~Lord@user/lord-of-life/x-2819915)
[04:00:56] <cousteau> yeah, I always thank "past me" when he leaves comments explaining what the heck he just did there
[04:02:06] *** Joins: mimmy (~mimmy@2607:fea8:6e0:7f90:e4cb:5a57:fd6e:e655)
[04:02:11] <cousteau> floatcomplex's advice is actually something I always go by; I code as if my code had to be read by a complete idiot in a future.  90% of the time, I'M that idiot.
[04:04:18] <apotheon> Always write code as if the next person to maintain it is a psychopathic murderer who knows where you live.
[04:05:01] *** Quits: LuKaRo (~LuKaRo@p4fc32d6b.dip0.t-ipconnect.de) (Ping timeout: 250 seconds)
[04:05:03] <cousteau> technically correct most of the time
[04:05:19] *** Joins: LuKaRo_ (~LuKaRo@p5dedaa53.dip0.t-ipconnect.de)
[04:05:49] <cousteau> and yet, most of the time I seem to inherit code coming from the psychopath
[04:06:47] <apotheon> Well . . . realisitically, they're more likely to be sociopaths, and unlikely to be (intentional) killers.
[04:06:55] *** Joins: treble (~treble@user/treble)
[04:07:47] *** Joins: CaryHartline (~CaryHartl@2603-8080-6a0e-8d88-a5f1-5281-6a38-5d1d.res6.spectrum.com)
[04:07:48] <cousteau> I forgot the difference between psychopath and sociopath again (other than the former is, like, more dangerous)
[04:09:02] *** Joins: mimmy_ (~mimmy@2607:fea8:6e0:7f90:20d6:2b3a:ce41:e0b6)
[04:09:18] <cousteau> if it's just "a psychopath tries very carefully to be evil and cause harm on purpose; a sociopath simply doesn't care", then I'm more inclined to think they're the former
[04:10:21] *** Joins: dutch (~DutchIngr@user/dutch)
[04:11:47] *** Quits: mimmy (~mimmy@2607:fea8:6e0:7f90:e4cb:5a57:fd6e:e655) (Ping timeout: 264 seconds)
[04:12:44] <apotheon> Well . . . basically, it seems that a psychopath is kind of "naturally" an evil motherfucker, and a sociopath became that way at a very young age, possibly with a pre-existing susceptibility to it.  This tends to result in slightly different symptomologies, e.g. sociopaths often being glibly charming and convincing while psychopaths are often more cold.
[04:13:34] <apotheon> It's not about intentions so much.
[04:14:02] *** Quits: mven (~mven@ip68-104-39-54.lv.lv.cox.net) (Quit: Goodbye.)
[04:14:05] <apotheon> Both will do things negligent that harm others, and both will intentionally harm others for their own benefit or enjoyment.
[04:14:34] *** Joins: mven (~mven@ip68-104-39-54.lv.lv.cox.net)
[04:14:40] <cousteau> oh I thought it was the other way around, psychopaths being more charming, pretending to care, while sociopaths not caring at all and not caring to pretend that they care
[04:14:44] *** Joins: mven` (~mven@ip68-104-39-54.lv.lv.cox.net)
[04:14:54] <cousteau> so it's more a matter of intensity?
[04:15:10] <apotheon> more a matter of how they got that way
[04:15:22] *** Quits: Wulf (~Wulf@user/wulf) (Ping timeout: 265 seconds)
[04:15:46] <apotheon> A sociopath might be better at charm because the sociopath wasn't born with no empathy, but rather ended up with it being withered away to almost nothing.
[04:15:48] <cousteau> well, in that case I cannot tell the motivations of people who write the code I have to deal with
[04:15:50] <apotheon> for instance
[04:15:59] <cousteau> I suspect most of the time it's incompetence
[04:16:25] <apotheon> yeah, incompetence is rampant
[04:16:47] <cousteau> (and no, I'm not one of those "anything not done by me is crap" kind of people; sometimes I read a piece of code and jump and say "holy shit, this is a beautifully written code!"
[04:16:48] <apotheon> Either a psychopath or sociopath might intentionally do it for amusement value, depending on the individual, though.
[04:16:52] *** Joins: Wulf (~Wulf@user/wulf)
[04:16:53] *** Joins: mimmy (~mimmy@2607:fea8:6e0:7f90:fc41:a35f:792:b57c)
[04:16:56] <cousteau> "look, a comment!  and it's helpful!"
[04:17:19] *** Quits: freakazoid12345 (~matt@2603:9000:cf0f:80e3:c95:5e78:2621:2637) (Read error: Connection reset by peer)
[04:18:04] *** Joins: freakazoid12345 (~matt@2603:9000:cf0f:80e3:c95:5e78:2621:2637)
[04:18:27] *** Quits: mimmy_ (~mimmy@2607:fea8:6e0:7f90:20d6:2b3a:ce41:e0b6) (Ping timeout: 250 seconds)
[04:19:33] *** Joins: merced (merced@user/merced)
[04:28:59] *** Joins: boB_K7IQ (~boB_K7IQ@c-24-19-3-104.hsd1.wa.comcast.net)
[04:31:28] *** Joins: Macuser (~Macuser@216.30.159.201)
[04:32:05] *** Joins: superboot (~agentgasm@user/superboot)
[04:34:41] *** Quits: rgrinberg (~textual@190.113.102.153) (Quit: My MacBook has gone to sleep. ZZZzzzâ€¦)
[04:34:44] *** Joins: varioust (~varioust@cpe-108-167-11-88.neb.res.rr.com)
[04:37:08] *** Joins: freakazoid343 (~matt@2603:9000:cf0f:80e3:c95:5e78:2621:2637)
[04:37:57] *** Quits: lionkor (~lionkor@beammp/staff/lionkor) (Ping timeout: 250 seconds)
[04:39:41] *** Quits: freakazoid12345 (~matt@2603:9000:cf0f:80e3:c95:5e78:2621:2637) (Ping timeout: 250 seconds)
[04:40:07] *** Quits: random-nick (~random-ni@87.116.165.220) (Ping timeout: 250 seconds)
[04:41:24] *** Quits: cm007magnum (~Rheanna@218.78.94.61) (Remote host closed the connection)
[04:42:17] *** Quits: Nistar (Nistar@gateway/vpn/protonvpn/nistar) (Remote host closed the connection)
[04:43:40] *** Joins: cm007magnum (~Rheanna@101.89.150.168)
[04:47:51] *** Joins: Nistar (Nistar@gateway/vpn/protonvpn/nistar)
[04:48:57] *** Quits: EdFletcher (~PKD@user/edfletcher) (Quit: Quit.)
[04:49:51] *** Quits: pucara (~i@181.95.204.204) (Quit: Lost terminal)
[04:50:10] *** Joins: EdFletcher (~PKD@user/edfletcher)
[04:51:52] *** Quits: cousteau (~cousteau@user/cousteau) (Quit: â™« I can't forget the day I shot that network down â™«)
[04:56:05] *** Joins: quartz (~quartz@user/quartz)
[04:56:27] *** Joins: Chip1972 (~Chip1972@186.206.217.247)
[04:57:39] *** Joins: rgrinberg (~textual@190.113.102.153)
[04:58:55] *** Joins: X-Scale` (~ARM@165.201.137.78.rev.vodafone.pt)
[04:59:10] *** Joins: BSaboia (~bsaboia@177.37.198.227)
[05:00:40] *** Quits: X-Scale (~ARM@31.22.167.45) (Ping timeout: 256 seconds)
[05:02:29] *** X-Scale` is now known as X-Scale
[05:03:26] *** Quits: EdFletcher (~PKD@user/edfletcher) (Quit: Quit.)
[05:08:17] *** Quits: boB_K7IQ (~boB_K7IQ@c-24-19-3-104.hsd1.wa.comcast.net) (Ping timeout: 250 seconds)
[05:09:09] *** Quits: alefir (~alefir@rrcs-24-43-248-58.west.biz.rr.com) (Ping timeout: 250 seconds)
[05:09:11] *** Joins: EdFletcher (~PKD@user/edfletcher)
[05:09:24] *** Joins: alefir (~alefir@rrcs-24-43-248-58.west.biz.rr.com)
[05:09:42] *** Quits: alefir (~alefir@rrcs-24-43-248-58.west.biz.rr.com) (Client Quit)
[05:11:16] *** Quits: Chip1972 (~Chip1972@186.206.217.247) (Quit: Leaving)
[05:13:09] *** Joins: JonasTripps (~user@bras-base-crnwon2435w-grc-27-76-70-40-124.dsl.bell.ca)
[05:13:15] <JonasTripps> https://youtu.be/ykT_g0-bgZo
[05:14:34] *** Quits: JonasTripps (~user@bras-base-crnwon2435w-grc-27-76-70-40-124.dsl.bell.ca) (K-Lined)
[05:15:27] <floatcomplex> comments should be used to mitigate surprises
[05:15:39] *** Quits: Rounin (~david@84.212.130.215) (Ping timeout: 250 seconds)
[05:15:58] <floatcomplex> don't add surprises just because you need a comment there, though :)
[05:17:10] *** Joins: mimmy_ (~mimmy@2607:fea8:6e0:7f90:ec1e:7b74:9028:2102)
[05:17:42] *** Quits: varioust (~varioust@cpe-108-167-11-88.neb.res.rr.com) (Quit: varioust)
[05:17:43] *** Quits: Nistar (Nistar@gateway/vpn/protonvpn/nistar) (Ping timeout: 265 seconds)
[05:17:43] *** Quits: mimmy (~mimmy@2607:fea8:6e0:7f90:fc41:a35f:792:b57c) (Ping timeout: 265 seconds)
[05:20:01] *** Joins: kuoi (~guo1@109.175.166.59)
[05:21:59] *** Joins: varioust (~varioust@cpe-108-167-11-88.neb.res.rr.com)
[05:22:01] *** Quits: joev (~joev@user/joev) (Read error: Connection reset by peer)
[05:22:49] *** Joins: joev (~joev@user/joev)
[05:24:57] *** Joins: wootz (~wootz@2806:1000:8000:bf68:65c7:bafa:a90f:b7f3)
[05:25:38] *** Joins: diamondbond (~diamondbo@175.157.52.20)
[05:28:44] *** Quits: pretty_dumm_guy (trottel@gateway/vpn/protonvpn/prettydummguy/x-88029655) (Quit: WeeChat 3.3)
[05:29:05] *** Quits: g2anj (~v@58.227.244.56) (Ping timeout: 250 seconds)
[05:29:19] *** Quits: wroathe (~wroathe@user/wroathe) (Ping timeout: 265 seconds)
[05:29:58] *** Quits: EdFletcher (~PKD@user/edfletcher) (Quit: Quit.)
[05:30:32] *** Joins: EdFletcher (~PKD@user/edfletcher)
[05:31:22] *** Joins: g2anj (~v@39.112.227.198)
[05:31:30] *** Quits: cm007magnum (~Rheanna@101.89.150.168) (Remote host closed the connection)
[05:33:56] *** Joins: cm007magnum (~Rheanna@218.78.104.50)
[05:37:00] *** Joins: kitsunenokenja (~kitsunech@68.91.220.96)
[05:45:34] *** Joins: wroathe (~wroathe@c-68-54-25-135.hsd1.mn.comcast.net)
[05:45:34] *** Quits: wroathe (~wroathe@c-68-54-25-135.hsd1.mn.comcast.net) (Changing host)
[05:45:34] *** Joins: wroathe (~wroathe@user/wroathe)
[05:46:28] *** Quits: grep_xtrange (~x@ac255238.ppp.asahi-net.or.jp) (Quit: Quitting)
[05:46:56] *** Joins: z8z (~x@ac255238.ppp.asahi-net.or.jp)
[05:47:18] *** Quits: brad_mssw (~bhouse@2601:344:4100:b490:f0ce:fbf8:7961:3fa2) (Quit: Leaving)
[05:49:33] *** Quits: bindu (~bindu@user/bindu) (Ping timeout: 276 seconds)
[05:50:03] *** Quits: mahmutov (~mahmutov@37.155.41.41) (Ping timeout: 268 seconds)
[05:50:32] *** Quits: BSaboia (~bsaboia@177.37.198.227) (Quit: This computer has gone to sleep)
[05:50:35] *** Quits: wroathe (~wroathe@user/wroathe) (Ping timeout: 265 seconds)
[05:57:11] *** Quits: ChromaCat248 (~ChromaCat@user/chromacat248) (Remote host closed the connection)
[05:57:18] *** Joins: CatCow (~wtf_over@c-73-96-109-206.hsd1.or.comcast.net)
[05:58:27] *** Quits: quartz (~quartz@user/quartz) (Quit: WeeChat 3.3)
[06:01:09] *** Quits: eelstrebor (~eelstrebo@198-178-29-136.scb.ne.static.allophone.net) (Read error: Connection reset by peer)
[06:02:41] *** Joins: frost (~frost@user/frost)
[06:03:26] *** Quits: seninha (~seninha@user/seninha) (Quit: Leaving)
[06:06:16] *** Joins: bindu (~bindu@user/bindu)
[06:06:18] *** Joins: diamondbond_ (~diamondbo@175.157.52.20)
[06:06:47] *** Quits: diamondbond (~diamondbo@175.157.52.20) (Ping timeout: 250 seconds)
[06:07:01] *** Quits: mimmy_ (~mimmy@2607:fea8:6e0:7f90:ec1e:7b74:9028:2102) (Ping timeout: 265 seconds)
[06:09:31] *** Joins: mimmy_ (~mimmy@185.244.215.86)
[06:16:11] *** Joins: seninha (~seninha@user/seninha)
[06:17:36] *** Quits: paddymahoney (~paddymaho@cpe9050ca207f83-cm9050ca207f80.cpe.net.cable.rogers.com) (Ping timeout: 245 seconds)
[06:18:23] *** Quits: jinsun (~quassel@user/jinsun) (Ping timeout: 264 seconds)
[06:18:48] *** Quits: acerbic (~acerbic@cs-xdata-50-86-48-149.cspire.com) (Read error: Connection reset by peer)
[06:19:02] *** Quits: mimmy_ (~mimmy@185.244.215.86) (Ping timeout: 268 seconds)
[06:20:23] *** Joins: eelstrebor (~eelstrebo@198-178-29-136.scb.ne.static.allophone.net)
[06:20:30] *** Joins: paddymahoney (~paddymaho@cpe9050ca207f83-cm9050ca207f80.cpe.net.cable.rogers.com)
[06:20:34] *** Quits: kitsunenokenja (~kitsunech@68.91.220.96) (Ping timeout: 256 seconds)
[06:21:35] *** Quits: cm007magnum (~Rheanna@218.78.104.50) (Remote host closed the connection)
[06:21:57] *** Quits: WilliamLeara_ (~wdl@cpe-76-185-2-28.tx.res.rr.com) (Ping timeout: 250 seconds)
[06:22:18] *** Joins: Chip1972 (~Chip1972@186.206.217.247)
[06:23:17] *** Joins: cm007magnum (~Rheanna@101.91.232.166)
[06:24:13] *** Joins: mimmy_ (~mimmy@185.244.215.86)
[06:24:22] *** Quits: varioust (~varioust@cpe-108-167-11-88.neb.res.rr.com) (Quit: varioust)
[06:24:23] *** Quits: FlipFlop (~FlipFlop@user/fl1pfl0p) (Ping timeout: 264 seconds)
[06:29:07] *** Joins: the (~the@2620:8d:8000:1044:b6ca:1ac:6dab:2ab1)
[06:30:02] *** Quits: Arwalk (~Arwalk@lfbn-dij-1-1329-53.w92-141.abo.wanadoo.fr) (Quit: ZNC 1.8.2 - https://znc.in)
[06:30:35] *** Quits: kuoi (~guo1@109.175.166.59) (Read error: Connection reset by peer)
[06:33:46] *** Joins: Arwalk (~Arwalk@lfbn-dij-1-1329-53.w92-141.abo.wanadoo.fr)
[06:34:05] *** Quits: banc (banc@gateway/vpn/airvpn/banc) (Ping timeout: 250 seconds)
[06:35:07] *** Joins: brunodOut (~autistic@user/linguist)
[06:35:24] *** Quits: masterbuilder (~user@user/masterbuilder) (Remote host closed the connection)
[06:36:32] *** Joins: acerbic (~acerbic@cs-xdata-50-86-48-149.cspire.com)
[06:37:07] *** Quits: linguist (~autistic@user/linguist) (Ping timeout: 250 seconds)
[06:40:16] *** Joins: Gimble (~G1mble2@2a01:4b00:8e07:7900:aa4d:84b:c3c0:acbe)
[06:42:00] *** Joins: b1101 (~b1101@pool-100-33-96-155.nycmny.fios.verizon.net)
[06:45:35] *** Joins: cr1901 (~cr1901@2601:8d:8600:911:bc3c:53c:d96a:be86)
[06:50:27] *** Quits: seninha (~seninha@user/seninha) (Quit: Leaving)
[06:50:45] *** Quits: ghenry (~ghenry@ghenry.plus.com) (Ping timeout: 250 seconds)
[06:51:16] *** Joins: AmR (~AmREiSa@156.199.219.108)
[06:53:34] *** Joins: banc (banc@gateway/vpn/airvpn/banc)
[06:53:54] *** Quits: wootz (~wootz@2806:1000:8000:bf68:65c7:bafa:a90f:b7f3) (Ping timeout: 265 seconds)
[06:54:48] *** Quits: diamondbond_ (~diamondbo@175.157.52.20) (Ping timeout: 268 seconds)
[06:54:50] *** Parts: cr1901 (~cr1901@2601:8d:8600:911:bc3c:53c:d96a:be86) (Leaving)
[07:03:58] *** Joins: ghenry (~ghenry@ghenry.plus.com)
[07:05:17] *** Quits: alch (~alch@151.34.36.165) (Read error: Connection reset by peer)
[07:06:28] *** Quits: brunodOut (~autistic@user/linguist) (Ping timeout: 265 seconds)
[07:09:00] *** Joins: alch (~alch@151.34.36.55)
[07:11:47] *** Quits: cm007magnum (~Rheanna@101.91.232.166) (Remote host closed the connection)
[07:12:29] *** Quits: mimmy_ (~mimmy@185.244.215.86) (Quit: WeeChat 3.3)
[07:14:03] *** Joins: cm007magnum (~Rheanna@218.78.99.237)
[07:14:25] *** Joins: motherfsck (~motherfsc@user/motherfsck)
[07:19:26] *** Quits: m4v (~znc@ubuntu/member/m4v) (Quit: Desconectando ...)
[07:20:07] *** Joins: m4v (~znc@ubuntu/member/m4v)
[07:23:02] *** Quits: kilobyte_ch (~kbch@77.109.171.167) (Ping timeout: 240 seconds)
[07:27:24] *** Joins: varioust (~varioust@cpe-108-167-11-88.neb.res.rr.com)
[07:27:53] *** Parts: freakazoid343 (~matt@2603:9000:cf0f:80e3:c95:5e78:2621:2637) (Leaving)
[07:28:04] *** Joins: supajerm (~supajerm@gateway/vpn/pia/supajerm)
[07:29:32] *** Quits: EdFletcher (~PKD@user/edfletcher) (Quit: Quit.)
[07:30:20] *** Joins: EdFletcher (~PKD@user/edfletcher)
[07:30:25] *** Joins: wroathe (~wroathe@c-68-54-25-135.hsd1.mn.comcast.net)
[07:30:25] *** Quits: wroathe (~wroathe@c-68-54-25-135.hsd1.mn.comcast.net) (Changing host)
[07:30:25] *** Joins: wroathe (~wroathe@user/wroathe)
[07:31:28] *** Quits: eelstrebor (~eelstrebo@198-178-29-136.scb.ne.static.allophone.net) (Quit: Ex-Chat)
[07:32:51] *** Joins: fstd_ (~fstd@xdsl-78-35-74-116.nc.de)
[07:35:26] *** Joins: jinsun (~quassel@user/jinsun)
[07:35:49] *** Quits: fstd (~fstd@xdsl-78-34-189-40.nc.de) (Ping timeout: 250 seconds)
[07:36:02] *** Quits: supakeen (~user@python/site-packages/supakeen) (Quit: WeeChat 3.3)
[07:36:33] *** Joins: supakeen (~user@python/site-packages/supakeen)
[07:37:38] *** Quits: slidercrank (~slidercra@user/slidercrank) (Ping timeout: 256 seconds)
[07:38:12] *** Joins: kdc (~kdc@196.211.197.159)
[07:39:10] *** Joins: puke (~puke@user/puke)
[07:41:32] *** Quits: Macuser (~Macuser@216.30.159.201) (Quit: Textual IRC Client: www.textualapp.com)
[07:43:15] <nitrix> Are YouTubers advertising their content on IRC channels for programming languages now?
[07:44:18] <nitrix> That's an easy dislike from me, no questions. Hope it helps the algorithm.
[07:44:20] *** Joins: soapsudsxx (~soapsudsx@209.221.40.148)
[07:45:35] *** Quits: varioust (~varioust@cpe-108-167-11-88.neb.res.rr.com) (Ping timeout: 250 seconds)
[07:45:58] *** Joins: simon323 (~simon323@2409:8a34:46c:5830:bcea:b9ce:1db0:fa57)
[07:47:51] <rcf> Thankfully they're eliminating all dislikes in the near future so that advertisers will make all the decisions. 
[07:48:19] *** Joins: kilobyte_ch (~kbch@mob-194-230-148-160.cgn.sunrise.net)
[07:48:59] <nitrix> Was that announced as part of what they've done to hide the count?
[07:49:36] *** Joins: kashyaprushi (~kashyapru@2405:201:1010:b033:686:82ae:af42:9e88)
[07:49:55] *** Quits: wroathe (~wroathe@user/wroathe) (Ping timeout: 250 seconds)
[07:50:01] *** Quits: Gimble (~G1mble2@2a01:4b00:8e07:7900:aa4d:84b:c3c0:acbe) (Quit: Leaving)
[07:51:18] *** Joins: missogra (~missogra@dynamic-077-010-001-191.77.10.pool.telefonica.de)
[07:51:40] <rcf> They're not going to come out and say that, of course. It's just pretty transparently the actual reason for the change ("We're paying you to promote this but your users are making us look bad!") 
[07:52:15] *** Joins: ckeshav (~keshavcha@user/ckeshav)
[07:52:42] <nitrix> I'm already not super thrilled by the removal of the count; eliminating the dislikes entirely seems like turning the knob to 11.
[07:54:20] <nitrix> Everyone asks you to "like and subscribe", I never do. I find it too forceful/artificial. I practically only ever use the dislike button.
[07:54:36] *** Joins: Nistar (Nistar@gateway/vpn/protonvpn/nistar)
[07:55:03] *** Quits: smeso (~smeso@user/smeso) (Quit: smeso)
[07:59:33] *** Quits: b1101 (~b1101@pool-100-33-96-155.nycmny.fios.verizon.net) (Quit: b1101)
[08:02:11] *** Quits: cm007magnum (~Rheanna@218.78.99.237) (Remote host closed the connection)
[08:02:24] *** Joins: smeso (~smeso@user/smeso)
[08:02:48] *** Quits: bindu (~bindu@user/bindu) (Ping timeout: 276 seconds)
[08:04:28] *** Joins: cm007magnum (~Rheanna@218.78.67.149)
[08:06:51] *** Quits: missogra (~missogra@dynamic-077-010-001-191.77.10.pool.telefonica.de) (Quit: Leaving)
[08:09:27] *** Quits: EdFletcher (~PKD@user/edfletcher) (Quit: Quit.)
[08:13:05] *** Quits: Chip1972 (~Chip1972@186.206.217.247) (Quit: Leaving)
[08:13:35] *** Joins: EdFletcher (~PKD@user/edfletcher)
[08:15:06] *** Quits: kilobyte_ch (~kbch@mob-194-230-148-160.cgn.sunrise.net) (Ping timeout: 265 seconds)
[08:15:07] *** Joins: bindu (~bindu@user/bindu)
[08:21:22] *** Quits: TheCoffeMaker (~TheCoffeM@user/thecoffemaker) (Ping timeout: 260 seconds)
[08:26:11] <high_ground> Does anyone know of a library for localisation strings
[08:27:55] *** Joins: b1101 (~b1101@pool-100-33-96-155.nycmny.fios.verizon.net)
[08:28:17] <high_ground> localising*
[08:29:52] *** Joins: kilobyte_ch (~kbch@77.109.171.167)
[08:30:43] *** Joins: TheCoffeMaker (~TheCoffeM@user/thecoffemaker)
[08:31:02] *** Joins: cvmn (~caveman@gateway/tor-sasl/caveman)
[08:33:38] *** Joins: boB_K7IQ (~boB_K7IQ@c-24-19-3-104.hsd1.wa.comcast.net)
[08:33:48] *** Quits: the (~the@2620:8d:8000:1044:b6ca:1ac:6dab:2ab1) (Quit: Leaving)
[08:41:47] *** Joins: riksteri (riksteri@gateway/vpn/airvpn/riksteri)
[08:45:45] *** Joins: penguino (~mrpenguin@user/mrpenguin)
[08:45:48] *** Quits: mrgz (~mrgz@201-42-0-191.dsl.telesp.net.br) (Ping timeout: 268 seconds)
[08:52:21] *** Quits: skapata (~Skapata@user/skapata) (Remote host closed the connection)
[08:56:37] *** Joins: HaMsTeRs (~Thunderbi@14-0-157-112.static.pccw-hkt.com)
[09:01:35] *** Quits: nyah (~nyah@94.6.71.219) (Ping timeout: 264 seconds)
[09:13:16] *** Quits: rgrinberg (~textual@190.113.102.153) (Quit: My MacBook has gone to sleep. ZZZzzzâ€¦)
[09:15:36] *** Quits: HaMsTeRs (~Thunderbi@14-0-157-112.static.pccw-hkt.com) (Quit: HaMsTeRs)
[09:16:20] *** Quits: karakedi (~eAC53C340@user/karakedi) (Remote host closed the connection)
[09:17:41] *** Quits: nostar (~nostar@68.51.221.108) (Quit: Leaving)
[09:32:09] *** Quits: EdFletcher (~PKD@user/edfletcher) (Quit: Quit.)
[09:34:06] *** Joins: EdFletcher (~PKD@user/edfletcher)
[09:39:15] *** Joins: skapata (~Skapata@2804:14c:87b0:a6f9:ad56:b236:43bf:104b)
[09:39:15] *** Quits: skapata (~Skapata@2804:14c:87b0:a6f9:ad56:b236:43bf:104b) (Changing host)
[09:39:15] *** Joins: skapata (~Skapata@user/skapata)
[09:42:54] *** Quits: bindu (~bindu@user/bindu) (Ping timeout: 276 seconds)
[09:44:07] *** Joins: bindu (~bindu@user/bindu)
[09:49:58] <rcf> gettext is the obvious choice 
[09:50:26] *** Joins: mikoto-chan (~mikoto-ch@esm-84-240-99-143.netplaza.fi)
[09:54:03] *** Quits: loganlee (~Thunderbi@user/loganlee) (Quit: loganlee)
[09:54:08] *** Quits: soapsudsxx (~soapsudsx@209.221.40.148) (Remote host closed the connection)
[09:54:47] *** Quits: pizdets (~pizdets@183.182.115.47) (Quit: pizdets)
[09:55:26] *** Quits: CatCow (~wtf_over@c-73-96-109-206.hsd1.or.comcast.net) (Quit: Textual IRC Client: www.textualapp.com)
[09:55:27] *** Joins: pizdets (~pizdets@183.182.115.47)
[09:55:28] *** Quits: Budd (~Budd@2001:470:8d44:1::5) (Remote host closed the connection)
[09:55:54] *** Quits: penguino (~mrpenguin@user/mrpenguin) (Ping timeout: 276 seconds)
[09:57:31] *** Quits: AbleBacon (~AbleBacon@user/AbleBacon) (Read error: Connection reset by peer)
[09:58:59] *** Quits: riksteri (riksteri@gateway/vpn/airvpn/riksteri) (Read error: Connection reset by peer)
[09:59:45] *** Joins: riksteri (riksteri@gateway/vpn/airvpn/riksteri)
[10:00:23] *** Joins: Budd (~Budd@2001:470:8d44:1::5)
[10:00:27] *** Quits: Budd (~Budd@2001:470:8d44:1::5) (Remote host closed the connection)
[10:00:45] *** Joins: Budd (~Budd@2001:470:8d44:1::5)
[10:03:10] *** Joins: nostar (~nostar@2601:406:4100:34d:8f4:5ea7:30b2:b7e6)
[10:06:53] *** Joins: jusski (~user@78-63-85-123.static.zebra.lt)
[10:07:06] *** Joins: Guest8054 (~Guest80@pd9ed79bf.dip0.t-ipconnect.de)
[10:07:14] *** Quits: KevinX (~KevinX@c-71-200-222-150.hsd1.fl.comcast.net) (Ping timeout: 256 seconds)
[10:10:10] *** Joins: KevinX (~KevinX@c-71-200-222-150.hsd1.fl.comcast.net)
[10:13:41] *** Joins: bbju (~bbju@103.144.148.219)
[10:19:41] *** Joins: gproto23 (~gproto23@user/gproto23)
[10:20:17] *** Quits: Enitin (~Enitin@82.102.22.85) (Ping timeout: 250 seconds)
[10:24:23] *** Quits: jetchisel (jetchisel@user/jetchisel) (Ping timeout: 264 seconds)
[10:25:12] *** Joins: Enitin (~Enitin@82.102.22.85)
[10:25:34] *** Joins: vanell0pe (~vanell0pe@228.224.70.37.rev.sfr.net)
[10:25:42] *** Joins: sord937 (~sord937@gateway/tor-sasl/sord937)
[10:26:07] *** Joins: jetchisel (jetchisel@user/jetchisel)
[10:26:36] *** Joins: bbju5 (~bbju@103.144.148.219)
[10:27:19] *** Quits: bbju5 (~bbju@103.144.148.219) (Client Quit)
[10:31:02] *** Joins: mrig (~AdiIRC@user/mrig)
[10:31:30] *** Quits: cm007magnum (~Rheanna@218.78.67.149) (Remote host closed the connection)
[10:32:50] *** Joins: cm007magnum (~Rheanna@218.78.94.61)
[10:37:10] *** Joins: Gimble (~G1mble2@2a01:4b00:8e07:7900:aa4d:84b:c3c0:acbe)
[10:39:55] *** Joins: zalt (~zalt@user/zalt)
[10:43:37] *** Joins: slidercrank (~slidercra@user/slidercrank)
[10:44:38] *** Quits: LARathbone (~logan@user/poprocks) (Ping timeout: 256 seconds)
[10:44:43] *** Joins: sm2n_ (~sm2n@user/sm2n)
[10:44:56] *** Quits: sm2n (~sm2n@user/sm2n) (Read error: Connection reset by peer)
[10:44:57] *** Joins: LARathbone (~logan@d24-146-53-55.commercial.cgocable.net)
[10:46:13] *** Quits: AmR (~AmREiSa@156.199.219.108) (Read error: Connection reset by peer)
[10:46:32] *** Quits: Nistar (Nistar@gateway/vpn/protonvpn/nistar) (Remote host closed the connection)
[10:47:02] *** Joins: Nistar (Nistar@gateway/vpn/protonvpn/nistar)
[10:49:58] *** Joins: dave0 (~davezero@069.d.003.ncl.iprimus.net.au)
[10:53:45] *** Quits: Gimble (~G1mble2@2a01:4b00:8e07:7900:aa4d:84b:c3c0:acbe) (Quit: Leaving)
[10:56:16] *** Joins: retro_ (~retro@97e2ba2e.skybroadband.com)
[10:57:47] *** Quits: geeknix (~pi@2001:e68:5432:3185:f40a:1f47:7e09:1c6e) (Ping timeout: 268 seconds)
[11:00:14] *** Quits: retroid_ (~retro@97e2ba2e.skybroadband.com) (Ping timeout: 268 seconds)
[11:01:05] *** Quits: Arwalk (~Arwalk@lfbn-dij-1-1329-53.w92-141.abo.wanadoo.fr) (Quit: ZNC 1.8.2 - https://znc.in)
[11:05:00] *** Quits: bindu (~bindu@user/bindu) (Remote host closed the connection)
[11:05:15] *** Quits: alch (~alch@151.34.36.55) (Read error: Connection reset by peer)
[11:05:46] *** Joins: bindu (~bindu@user/bindu)
[11:06:46] *** Quits: skapata (~Skapata@user/skapata) (Remote host closed the connection)
[11:08:01] *** Joins: Arwalk (~Arwalk@lfbn-dij-1-1329-53.w92-141.abo.wanadoo.fr)
[11:09:21] *** Joins: alch (~alch@151.68.13.128)
[11:10:02] <vanell0pe> printf("Hello !");
[11:10:35] *** Quits: sord937 (~sord937@gateway/tor-sasl/sord937) (Remote host closed the connection)
[11:10:36] <dave0> hi envel0pe
[11:10:37] <supakeen> Here, take this "\n".
[11:10:38] *** Joins: geeknix (~pi@2001:e68:5432:3185:f40a:1f47:7e09:1c6e)
[11:10:54] *** Joins: sord937 (~sord937@gateway/tor-sasl/sord937)
[11:11:03] <vanell0pe> thanks for the "\n"
[11:12:07] *** Quits: dogbert2 (~Bill@ip68-105-189-91.lv.lv.cox.net) (Remote host closed the connection)
[11:12:23] *** Joins: dogbert2 (~Bill@ip68-105-189-91.lv.lv.cox.net)
[11:14:13] *** Joins: AmR (~AmREiSa@156.199.67.156)
[11:14:40] *** Quits: Echoz_ (~chris@user/echoz) (Ping timeout: 256 seconds)
[11:17:04] *** Joins: tejr (~tejr@user/tejr)
[11:20:48] *** Quits: Hexmind (~Hexmind@modemcable049.25-131-66.mc.videotron.ca) (Quit: Leaving)
[11:21:40] *** Quits: cm007magnum (~Rheanna@218.78.94.61) (Remote host closed the connection)
[11:23:17] *** Joins: cm007magnum (~Rheanna@218.78.67.149)
[11:30:24] *** Quits: EdFletcher (~PKD@user/edfletcher) (Quit: Quit.)
[11:30:51] *** Joins: Everything (~Everythin@37.115.210.35)
[11:31:16] *** Joins: EdFletcher (~PKD@user/edfletcher)
[11:32:18] *** Quits: alch (~alch@151.68.13.128) (Ping timeout: 265 seconds)
[11:32:56] *** Joins: the_lanetly_052_ (~the_lanet@185.30.88.43)
[11:33:31] *** Quits: rahl (~rahl@102.114.71.93) (Ping timeout: 250 seconds)
[11:34:03] *** Quits: cvmn (~caveman@gateway/tor-sasl/caveman) (Ping timeout: 276 seconds)
[11:34:38] *** Quits: frost (~frost@user/frost) (Quit: Connection closed)
[11:35:02] *** Joins: linxue (~linxue3@113.68.253.235)
[11:35:22] *** Joins: lleo (~leo@188-206-67-123.mobile.kpn.net)
[11:35:37] *** Joins: rahl (~rahl@102.114.3.99)
[11:36:07] *** Quits: kashyaprushi (~kashyapru@2405:201:1010:b033:686:82ae:af42:9e88) (Ping timeout: 250 seconds)
[11:37:34] *** Joins: frost (~frost@user/frost)
[11:41:34] *** Quits: caveman (~caveman@gateway/tor-sasl/caveman) (Quit: AA TOO NEE ZUBARALHADEEEEEEEEEEEED)
[11:44:02] *** Joins: caveman (~caveman@gateway/tor-sasl/caveman)
[11:44:04] *** Joins: alch (~alch@151.68.13.128)
[11:44:15] *** Joins: aradesh (~aradesh@user/aradesh)
[11:47:23] *** Joins: loganlee (~Thunderbi@user/loganlee)
[11:47:30] *** Joins: chomwitt (~chomwitt@2a02:587:dc12:3f00:12c3:7bff:fe6d:d374)
[11:48:03] *** Quits: Budd (~Budd@2001:470:8d44:1::5) (Remote host closed the connection)
[11:48:24] *** Quits: Nistar (Nistar@gateway/vpn/protonvpn/nistar) (Quit: WeeChat 3.3)
[11:48:48] *** Joins: Rounin (~david@84.212.130.215)
[11:49:07] *** Quits: chasmo77 (~chas77@71.63.241.168) (Ping timeout: 250 seconds)
[11:49:37] *** Joins: Nistar (Nistar@gateway/vpn/protonvpn/nistar)
[11:49:48] *** Joins: chasmo77 (~chas77@71.63.241.168)
[11:51:49] <tk> Hey everyone, rate my amazing function: http://ix.io/3F84
[11:53:04] *** Quits: loganlee (~Thunderbi@user/loganlee) (Quit: loganlee)
[11:53:12] *** Quits: mongrel (uid508343@ilkley.irccloud.com) (Quit: Connection closed for inactivity)
[11:55:02] <dave0> i think it removes any chars in set from str ?
[11:55:43] <tk> can someone estimate the time complexity?
[11:56:07] <supakeen> I rate it low.
[11:56:17] <tk> O(low)
[11:56:19] <tk> fair enough
[11:56:30] <tk> n doesn't even come into it
[11:56:33] <tk> that's very smart
[11:57:56] *** Quits: pulse (~pulse@user/pulse) (Ping timeout: 246 seconds)
[11:58:42] <supakeen> If you wrote it as 'just a swap' I'd argue that it'd be O(log n) or something.
[11:58:49] <supakeen> But Big-O Big-Schmo.
[12:00:10] <dave0> i like how it's randomized, to break through the theoretical bounds
[12:01:40] <supakeen> Clearly you are memory bound since you want to use a single buffer so the O number for computation doesn't matter that much
[12:01:52] <supakeen> And if it was the revers you wouldn't care (much) about the memory
[12:01:55] <tk> the randomisation is to try to avoid timing side-channel attacks
[12:02:39] <tk> wouldn't want the calling function to be able to figure out how many characters were removed
[12:02:55] <supakeen> ...
[12:03:23] <supakeen> I hope I need to have more coffee and I'm missing sarcasm :)
[12:04:11] <dave0> tk: rand() is not a cryptographically secure pseudo random number generator :-(
[12:04:41] <tk> dave0: ah, but it should be
[12:04:56] <tk> and wishful thinking is a valid approach to security
[12:05:01] <dave0> haha
[12:05:02] <supakeen> quick arc4random to the rescue
[12:05:39] *** Quits: ckeshav (~keshavcha@user/ckeshav) (Ping timeout: 265 seconds)
[12:06:21] <caze> dave0: It's not impossible for it to be.
[12:06:56] <dave0> bad news for tk :-(
[12:07:19] <dave0> wait parse error
[12:07:23] <tk> I wrote that function after taking inspiration from some C++ code I saw.
[12:07:28] <markand> only tru random generator: https://www.youtube.com/watch?v=7n8LNxGbZbs
[12:07:29] <candide> Title of markand's link: Dice-O-Matic - YouTube
[12:08:23] <tk> https://github.com/domoticz/domoticz/blob/development/hardware/Rtl433.cpp#L18
[12:08:27] <tk> this is the code
[12:08:32] <tk> that inspired me
[12:09:30] <caze> markand: low entropy
[12:09:52] <markand> caze, why? you can't be more real than that :P
[12:10:16] <caze> markand: Entropy has nothing to do with "real".
[12:10:32] *** Quits: johnjay (~pi@192.142.100.50) (Ping timeout: 268 seconds)
[12:10:33] <markand> tk, I would use while (*charsToRemove) instead
[12:10:40] <markand> avoid a useless call to strlen
[12:11:03] <tk> that would never terminate
[12:11:12] <markand> yes, since you increment it
[12:11:24] <tk> I increment it?
[12:11:24] *** Quits: cm007magnum (~Rheanna@218.78.67.149) (Remote host closed the connection)
[12:11:29] <supakeen> "// Basic protection from malicious command line"
[12:11:49] <supakeen> not for advanced malicious command lines
[12:12:05] <markand> tk, something like this: https://bpa.st/YERA
[12:12:16] <tk> at work last week my coworker found an application which was "sanitizing" inputs by removing single quotes before feeding them directly into a SQL database
[12:12:38] <tk> it was very easy to get blind injection without quotes it was actually funny
[12:12:44] *** Joins: johnjay (~pi@192.142.100.50)
[12:13:05] <tk> this code reminded me of that application
[12:13:08] <supakeen> tk: one of my favorites is always when people limit size after escaping stuff :)
[12:13:44] *** Joins: cm007magnum (~Rheanna@61.171.69.141)
[12:13:46] <supakeen> (or do other post processing after a sane escape mechanism)
[12:13:55] *** Quits: gproto23 (~gproto23@user/gproto23) (Read error: Connection reset by peer)
[12:14:54] *** Joins: kashyaprushi (~kashyapru@2405:201:1010:b033:9af9:4bfe:ee61:8327)
[12:15:00] <caze> markand: It's like if you have a biased coin where there is a 30% probability of getting heads, you can still get fair results, but the entropy is much lower.
[12:15:20] *** Joins: gproto23 (~gproto23@user/gproto23)
[12:15:31] <tk> markand: yes, good job, I think you have taken the time complexity from O(ðŸ’©) to O(ðŸ”¥)
[12:15:34] <tk> a marked improvement
[12:15:36] <caze> The entropy is much lower than if you had a fair coin.
[12:16:11] <caze> 50% lower, in fact.
[12:17:43] <caze> tk: Why are you actually using rand?
[12:18:31] <tk> caze: why indeed
[12:18:52] <caze> tk: Your omega is actually infinite.
[12:18:59] *** Quits: Nistar (Nistar@gateway/vpn/protonvpn/nistar) (Quit: WeeChat 3.3)
[12:19:21] <caze> It's possible it never terminates.
[12:20:26] <tk> You mean it terminates in at most omega steps
[12:21:15] <tk> so optimistically, my function never terminates
[12:21:16] <markand> tk, :)
[12:21:20] <tk> which means... that it takes infinite time
[12:21:22] <tk> and... hmm
[12:21:26] <tk> that means it's constant time right?
[12:21:28] <tk> basically
[12:21:30] <markand> caze, thanks for the explanation
[12:21:30] <tk> O(1)
[12:21:32] <tk> perfect
[12:21:38] <tk> the function is O(1) at the limit
[12:21:51] <caze> markand: Do you understand how to obtain fair results from a biased coin?
[12:22:01] <tk> you have to dip the coin in white paint
[12:22:04] <tk> it's a process called whitening
[12:22:33] <markand> no I must say I've never been so much interested in everything related to high level maths, random and all that stuff (especially since I always had been very poor younger at school)
[12:23:21] <caze> markand: Instead of considering individual coin tosses, you examine consecutive pairs of tosses. Ignore all pairs where it's the same side. 
[12:23:40] <caze> markand: Only pairs where the side has flipped (head to tails, or tails to head) are considered.
[12:23:57] *** Joins: rgrinberg (~textual@190.113.102.153)
[12:24:08] <caze> So since you're forced to discard so many tosses, the entropy is lower.
[12:24:40] *** Quits: unixpro1970 (~unixpro19@c-73-181-185-205.hsd1.wa.comcast.net) (Ping timeout: 265 seconds)
[12:24:48] <caze> The "rate" at which you're getting useful values is lower.
[12:24:59] <tk> I don't think that reduces the entropy?
[12:25:02] <caze> That's what I meant when I said that dice machine has low entropy.
[12:27:07] *** Joins: loganlee (~Thunderbi@user/loganlee)
[12:27:23] <dave0> tk: i'd like to see a parallel version of your program
[12:28:26] <dave0> O(1/log k) where k is the number of processors
[12:29:02] *** Quits: lleo (~leo@188-206-67-123.mobile.kpn.net) (Ping timeout: 268 seconds)
[12:29:41] *** Joins: magla (~gelignite@55d42279.access.ecotel.net)
[12:31:24] <caze> tk: Have you read Mitzenmacher?
[12:33:08] <tk> no
[12:34:00] <caze> https://www.amazon.com/Probability-Computing-Randomized-Algorithms-Probabilistic/dp/0521835402
[12:34:25] *** Joins: unixpro1970 (~unixpro19@c-73-181-185-205.hsd1.wa.comcast.net)
[12:35:26] <caze> His blog is called "My biased coin".
[12:36:12] <tk> interesting
[12:36:28] <tk> I will look into it, thanks.
[12:36:41] <caze> Just about the only thing I remember from his class is the biased coin example I just mentioned.
[12:37:12] *** Joins: bbju96 (~bbju@103.144.148.219)
[12:37:23] <tk> Well yeah, that's just a standard technique for fixing biased random number generators
[12:37:27] <tk> but I don't think it reduces entropy
[12:37:41] <caze> How does it not?
[12:37:57] <caze> The rate at which you get useful numbers is decreased.
[12:38:24] *** Quits: GlobalBanksta (~aqua@user/aqua) (Ping timeout: 276 seconds)
[12:39:00] *** Quits: jusski (~user@78-63-85-123.static.zebra.lt) (Ping timeout: 265 seconds)
[12:39:33] <caze> I mean, unless you just toss the coin faster.
[12:39:36] <tk> I don't think that's true either, you had useless numbers before, and now they're more useful at a lower frequency. But we need to define "quantity" of randomness first
[12:39:50] <clarity> They were not useless
[12:40:04] <caze> tk: I'm comparing to a fair coin.
[12:40:18] <caze> tk: A biased coin has lower entropy as compared to a fair coin.
[12:40:23] <tk> well yes, they weren't useless because you used them
[12:41:45] *** Quits: supajerm (~supajerm@gateway/vpn/pia/supajerm) (Remote host closed the connection)
[12:42:04] *** Joins: supajerm (~supajerm@gateway/vpn/pia/supajerm)
[12:42:05] *** Quits: bbju96 (~bbju@103.144.148.219) (Client Quit)
[12:42:09] <caze> All the pairs with the same side are useless.
[12:42:22] <tk> like if you take a biased source and you unbias it then you have more entropy in your source, let's say you had a biased coin, the maximum amount of entropy is 1 bit, but it's less than that
[12:42:24] *** Joins: kish` (~aqua@user/aqua)
[12:42:36] <tk> after you unbias that successfuly, you have 1 bit of entropy
[12:42:44] *** Quits: kish` (~aqua@user/aqua) (Remote host closed the connection)
[12:42:51] <tk> you have a random source with 1 bit of entropy
[12:43:02] <caze> I'm talking about entropy *rate*.
[12:43:08] *** Joins: kish` (~aqua@user/aqua)
[12:43:16] <caze> https://csrc.nist.gov/glossary/term/entropy_rate
[12:43:20] <tk> right, so say that
[12:43:41] <caze> I mean, I thought it was obvious.
[12:43:44] <tk> but even so, I would argue that the best case scenario is that your entropy rate decreased as much as you entropy increased
[12:43:56] <tk> (which may be unachievable, but it's theoretically possible I think)
[12:44:06] <tk> (I guess it's a limit or whatever the term is)
[12:44:18] <caze> 50% of you tosses are thrown out.
[12:44:36] <caze> H-H, T-T, H-T, T-H
[12:44:49] <loganlee> hi guys
[12:44:53] <loganlee> i did statistics at uni
[12:44:54] <caze> Your entropy rate is halaved.
[12:45:01] <caze> halved
[12:45:25] <tk> I also don't think that's true, if your change of getting heads is 0.99 then you're much more likely to get a long run of hh than you are to get a transition or a run of tt so you're surely throwing away more than 50%
[12:45:33] <tk> this would actually, be trivial to test
[12:46:06] <caze> So it's at best 50%.
[12:46:15] <tk> hmm
[12:46:21] <tk> I see what you're saying
[12:46:22] <caze> But you're getting hte idea now.
[12:46:33] <tk> so when you have an unbiased coin you throw away half the coin tosses
[12:46:46] <caze> No, you don't throw away any.
[12:46:47] <tk> but I was talking about other methods of unbiasing
[12:47:01] <tk> well yes, but if you were to apply that method of unbiasing to a fair coin
[12:47:02] <caze> WHy would you throw away any tosses with an unbiased coin?
[12:47:16] <tk> just at the limit caze
[12:47:21] <caze> Why would you apply that method?
[12:47:26] <tk> well you wouldn't
[12:47:34] <tk> but the fairer your unfair coin gets, that's the worst case scenario
[12:47:52] <caze> Best?
[12:48:07] <tk> hmm, yes
[12:48:10] <tk> best case scenario
[12:48:33] <tk> okay, so yes, the entropy rate is reduced, but the entropy is increased, 
[12:48:50] <tk> but the entropy rate is reduced more than the entropy is increased
[12:48:50] <caze> I don't see how it's increased.
[12:49:06] <tk> because now you have 1 bit of entropy and before you had less then 1 bit
[12:49:34] <caze> Oh, you mean if you tried to use the biased results?
[12:49:48] <tk> yes for example, you can calculate their entropy
[12:49:58] <tk> https://wikimedia.org/api/rest_v1/media/math/render/svg/bfe3616dee43f6287d4a4e2a557de8d48ad24926
[12:50:13] *** Joins: LucaTM (~LucaTM@user/lucatm)
[12:50:18] <tk> in any case
[12:50:38] <tk> I need to go get ready for a call which will take an indeterminate amount of time and be indeterminately productive
[12:51:29] <caze> Anyway, the takeaway is that it's not that hard to generate high quality random numbers, but generating high quality random numbers at a high rate is harder.
[12:51:48] *** Joins: imp (~imp@192-141-191-227.alternativaip.net.br)
[12:52:27] <dave0> surely you can parallelize it
[12:53:42] <caze> Hyperthread it.
[12:53:54] *** kish` is now known as GlobalBanksta
[12:53:56] <dave0> when in doubt, use threads
[12:54:13] *** Parts: GlobalBanksta (~aqua@user/aqua) (Leaving)
[12:54:37] <rcf> Unless you're using these numbers for cryptography, in which case, when in doubt, stop what you are doing right now before you break everything. 
[13:01:04] *** Quits: Betal (~Betal@user/betal) (Quit: WeeChat 3.3)
[13:01:34] *** Quits: cm007magnum (~Rheanna@61.171.69.141) (Remote host closed the connection)
[13:02:39] *** Joins: cm007magnum (~Rheanna@218.78.99.237)
[13:04:48] *** Joins: plastico (~plastico@neomutt/plastico)
[13:07:32] *** Quits: imp (~imp@192-141-191-227.alternativaip.net.br) (Quit: imp)
[13:08:40] *** Quits: boB_K7IQ (~boB_K7IQ@c-24-19-3-104.hsd1.wa.comcast.net) (Remote host closed the connection)
[13:09:01] *** Joins: boB_K7IQ (~boB_K7IQ@c-24-19-3-104.hsd1.wa.comcast.net)
[13:09:58] *** Joins: vysn (~vysn@user/vysn)
[13:12:27] *** Quits: vysn (~vysn@user/vysn) (Client Quit)
[13:12:44] *** Joins: vysn (~vysn@user/vysn)
[13:14:40] *** Joins: extern (~archer@37.142.171.206)
[13:15:33] *** Joins: xantoz (~tewi_inab@c-c0bae255.013-124-73746f25.bbcust.telenor.se)
[13:15:46] *** Quits: extern (~archer@37.142.171.206) (Client Quit)
[13:16:03] *** Joins: extern (~archer@37.142.171.206)
[13:17:08] *** Quits: rgrinberg (~textual@190.113.102.153) (Quit: My MacBook has gone to sleep. ZZZzzzâ€¦)
[13:24:36] *** Quits: loganlee (~Thunderbi@user/loganlee) (Quit: loganlee)
[13:30:19] *** Joins: pucara (~i@181.95.204.204)
[13:32:17] *** Joins: BSaboia (~bsaboia@177.37.198.227)
[13:35:31] *** Quits: BSaboia (~bsaboia@177.37.198.227) (Client Quit)
[13:36:39] *** Quits: sord937 (~sord937@gateway/tor-sasl/sord937) (Remote host closed the connection)
[13:36:58] *** Joins: sord937 (~sord937@gateway/tor-sasl/sord937)
[13:37:27] *** Quits: boB_K7IQ (~boB_K7IQ@c-24-19-3-104.hsd1.wa.comcast.net) (Ping timeout: 250 seconds)
[13:37:56] *** Joins: boB_K7IQ (~boB_K7IQ@c-24-19-3-104.hsd1.wa.comcast.net)
[13:41:56] *** Quits: davros (~davros@host86-185-61-22.range86-185.btcentralplus.com) (Remote host closed the connection)
[13:44:50] *** Joins: abdullah (~abdullah@103.66.177.186)
[13:51:06] *** Quits: abdullah (~abdullah@103.66.177.186) (Quit: Leaving)
[13:51:42] *** Quits: cm007magnum (~Rheanna@218.78.99.237) (Remote host closed the connection)
[13:53:35] *** Joins: cm007magnum (~Rheanna@61.171.69.141)
[13:56:14] *** Joins: ko (~i.am@user/marlboro)
[14:01:42] *** Joins: BSaboia (~bsaboia@177.37.198.227)
[14:02:43] *** Quits: extern (~archer@37.142.171.206) (Quit: WeeChat 3.3)
[14:08:07] *** Joins: |7| (~seachdamh@user/seachdamh)
[14:08:36] *** Joins: superdupond (~Kev@2a01cb0400149f0038fa573c7176672d.ipv6.abo.wanadoo.fr)
[14:12:07] *** Quits: gproto23 (~gproto23@user/gproto23) (Ping timeout: 250 seconds)
[14:14:30] *** Joins: whupdup (~whupdup@pool-173-76-128-81.bstnma.fios.verizon.net)
[14:15:12] *** Joins: gproto23 (~gproto23@user/gproto23)
[14:16:48] *** Joins: scoobydoo (~scooby@user/scoobydoo)
[14:23:51] *** Joins: shivesh (~shivesh@user/shivesh)
[14:30:16] *** Quits: csrf (~csrf@user/csrf) (Quit: ZNC 1.7.2+deb3 - https://znc.in)
[14:31:01] *** Joins: csrf (~csrf@user/csrf)
[14:33:05] *** Quits: Masklin_Gurder (~joel@h-155-4-23-152.A230.priv.bahnhof.se) (Quit: Konversation terminated!)
[14:37:23] *** Joins: Jenmin (~Jenmin@111.225.67.179)
[14:37:35] *** Quits: zalt (~zalt@user/zalt) (Ping timeout: 264 seconds)
[14:41:28] *** Quits: cm007magnum (~Rheanna@61.171.69.141) (Remote host closed the connection)
[14:43:15] *** Joins: cm007magnum (~Rheanna@218.78.104.50)
[14:43:45] *** Quits: elastic_dog (~elastic_d@2a01:118f:822:9c00:f583:aa51:9ad4:d4fb) (Ping timeout: 250 seconds)
[14:45:11] *** Joins: blindguard (~blindguar@2a02:908:1864:c200::12)
[14:49:17] *** Quits: linxue (~linxue3@113.68.253.235) (Quit: Leaving)
[14:50:34] *** Joins: elastic_dog (~elastic_d@2a01:118f:822:9c00:f583:aa51:9ad4:d4fb)
[14:50:57] *** Quits: Jenmin (~Jenmin@111.225.67.179) (Ping timeout: 265 seconds)
[14:51:44] *** Quits: Guest8054 (~Guest80@pd9ed79bf.dip0.t-ipconnect.de) (Ping timeout: 256 seconds)
[14:52:44] *** Quits: bbju (~bbju@103.144.148.219) (Quit: Client closed)
[14:54:06] <vanell0pe> Hi again ! there is a windows.h, winuser.h equivalent on linux ?
[14:54:32] *** Joins: the_lanetly_052 (~the_lanet@185.30.88.162)
[14:55:11] *** Quits: jfsimon1981 (~jfsimon19@82.199.121.78.rev.sfr.net) (Ping timeout: 268 seconds)
[14:55:42] *** Quits: zlg (~zlg@user/zlg) (Ping timeout: 260 seconds)
[14:56:25] *** Quits: the_lanetly_052_ (~the_lanet@185.30.88.43) (Ping timeout: 268 seconds)
[14:58:22] <slidercrank> vanell0pe, standard include files are in /usr/include/
[14:59:05] <slidercrank> or do you need headers for developing GUI apps?
[14:59:35] <vanell0pe> I would like to create screen without using SDL
[14:59:37] <slidercrank> they are still under the same directory. But there are many GUI toolkits. So no "standard" header
[15:00:38] <slidercrank> and not using GTK/Qt?
[15:00:54] <slidercrank> 		#include <X11/Xlib.h>
[15:00:54] <slidercrank> 		#include <X11/Xutil.h>
[15:00:54] <slidercrank> 		#include <X11/Xos.h>
[15:01:02] <slidercrank> but it's going to be hard :)
[15:01:37] *** Joins: Phil-Work (~phil@62.3.100.20)
[15:01:49] <vanell0pe> is that xlib ?
[15:01:51] <slidercrank> vanell0pe, http://mech.math.msu.su/~vvb/2course/Borisenko/CppProjects/GWindow/xintro.html
[15:01:53] <candide> Title of slidercrank's link: A Brief intro to X11 Programming
[15:01:58] *** Joins: nyah (~nyah@94.6.71.219)
[15:02:27] <vanell0pe> thanks slidercrank for the link :)
[15:02:37] <slidercrank> but there is a movement towards Wayland. So X11 programming is considered ... weird? nowadays
[15:03:27] *** Joins: rbp (~abdullah@103.66.177.186)
[15:06:52] <vanell0pe> I will check the Xlib lib ! thanks for helping me !
[15:07:10] <dave0> vanell0pe: i have some code that will open an xlib window and draw coloured bars on it
[15:07:31] *** Quits: alch (~alch@151.68.13.128) (Ping timeout: 268 seconds)
[15:07:44] <vanell0pe> dave0: that was hard ? I never try xlib, always sdl
[15:07:58] <dave0> hang on i'll paste it
[15:08:23] *** Joins: zlg (~zlg@user/zlg)
[15:08:53] *** Joins: alch (~alch@151.34.10.44)
[15:09:21] <dave0> https://termbin.com/nugc
[15:10:01] <dave0> it works but it aint small
[15:10:11] *** Quits: larry87 (~quassel@2601:2c7:4280:17a0:82b:710a:4114:6888) (Ping timeout: 250 seconds)
[15:10:21] *** Joins: cart_man (~rynot@host-78-144-121-1.as13285.net)
[15:10:22] <vanell0pe> I see
[15:10:58] <vanell0pe> dave0: woaw you used constants :'(
[15:11:13] <dave0> hmm?
[15:11:23] *** Quits: rbp (~abdullah@103.66.177.186) (Quit: Konversation terminated!)
[15:11:35] *** Joins: rbp (~abdullah@103.66.177.186)
[15:11:40] *** Quits: BSaboia (~bsaboia@177.37.198.227) (Quit: This computer has gone to sleep)
[15:11:46] <vanell0pe> there are constants in the code 
[15:11:48] <vanell0pe> ...
[15:11:56] <dave0> yep?
[15:12:03] *** Joins: BSaboia (~bsaboia@177.37.198.227)
[15:12:07] <dave0> like numbers?
[15:12:17] <dave0> o_O
[15:12:25] <vanell0pe> 9
[15:12:54] <dave0> that's one number that isn't in there lol
[15:13:19] <vanell0pe> lol
[15:14:09] <dave0> hopefully it runs okay
[15:14:23] <dave0> i tried to keep it as simple as x would let me
[15:14:53] <vanell0pe> as long as it works, it's good! 
[15:15:09] <dave0> truth
[15:19:48] *** Quits: rbp (~abdullah@103.66.177.186) (Quit: Konversation terminated!)
[15:19:56] <slidercrank> I have bad memories relating to programming for X :) I wrote a screen saver. The main issue is you don't know beforehand how many colours there are in the current screen resolution. Making it universal for all video modes was painful
[15:20:01] *** Joins: rbp (~abdullah@103.66.177.186)
[15:20:36] *** Quits: rbp (~abdullah@103.66.177.186) (Client Quit)
[15:22:02] *** Quits: whupdup (~whupdup@pool-173-76-128-81.bstnma.fios.verizon.net) (Quit: Going offline, see ya! (www.adiirc.com))
[15:24:10] *** Quits: dfip^ (~dfip@h50.174.139.63.static.ip.windstream.net) (Remote host closed the connection)
[15:30:36] *** Quits: cebor (~cebor@user/cebor) (Quit: bye!)
[15:30:55] *** Joins: cebor (~cebor@user/cebor)
[15:31:33] *** Quits: cm007magnum (~Rheanna@218.78.104.50) (Remote host closed the connection)
[15:32:06] *** Joins: Iarfen (~quassel@181.43.59.114)
[15:32:44] *** Quits: mrig (~AdiIRC@user/mrig) (Read error: Connection reset by peer)
[15:32:58] *** Joins: mrig (~AdiIRC@user/mrig)
[15:34:38] *** Joins: cm007magnum (~Rheanna@61.171.38.68)
[15:35:45] *** Quits: Enitin (~Enitin@82.102.22.85) (Ping timeout: 250 seconds)
[15:36:02] *** Quits: supakeen (~user@python/site-packages/supakeen) (Quit: WeeChat 3.3)
[15:36:09] *** Quits: Cyp (~cyp@192038135092.mbb.telenor.dk) (Remote host closed the connection)
[15:36:32] *** Joins: supakeen (~user@python/site-packages/supakeen)
[15:36:34] *** Joins: Cyp (~cyp@192038135092.mbb.telenor.dk)
[15:38:11] *** Joins: Enitin (~Enitin@82.102.22.85)
[15:39:11] *** Quits: soul-d (~uknown@user/soul-d) (Read error: Connection reset by peer)
[15:41:21] *** Joins: Klinda (~superleag@user/klinda)
[15:41:22] *** Joins: dlbh^ (~dlbh@h50.174.139.63.static.ip.windstream.net)
[15:41:25] *** Quits: mrig (~AdiIRC@user/mrig) (Read error: Connection reset by peer)
[15:41:38] *** Joins: mrig (~AdiIRC@user/mrig)
[15:44:23] *** Joins: jfsimon1981 (~jfsimon19@82.199.121.78.rev.sfr.net)
[15:46:24] *** Joins: linxue1 (~linxue3@113.68.253.235)
[15:46:38] *** Quits: linxue1 (~linxue3@113.68.253.235) (Read error: Connection reset by peer)
[15:47:22] *** Joins: linxue1 (~linxue3@113.68.253.235)
[15:48:34] *** Quits: linxue1 (~linxue3@113.68.253.235) (Read error: Connection reset by peer)
[15:49:23] *** Joins: linxue1 (~linxue3@113.68.253.235)
[15:49:56] *** Joins: extern (~archer@37.142.171.206)
[15:49:56] *** Quits: linxue1 (~linxue3@113.68.253.235) (Read error: Connection reset by peer)
[15:54:44] *** Quits: dave0 (~davezero@069.d.003.ncl.iprimus.net.au) (Quit: dave's not here)
[15:54:48] *** Joins: Guest4216 (~Guest42@wificampus-098145.grenet.fr)
[15:54:50] *** Joins: tech_exorcist (txrcst@user/tech-exorcist/x-0447479)
[15:55:17] *** Quits: tech_exorcist (txrcst@user/tech-exorcist/x-0447479) (Remote host closed the connection)
[15:55:34] *** Joins: tech_exorcist (txrcst@user/tech-exorcist/x-0447479)
[15:56:06] *** Joins: jpbruyere (~jp@2a02:a03f:a992:4900:c6e9:84ff:fe0d:aa9e)
[15:56:11] *** Joins: Guest80 (~Guest80@pd9ed79bf.dip0.t-ipconnect.de)
[15:57:43] *** Joins: diamondbond (~diamondbo@175.157.52.20)
[16:02:11] *** Quits: vysn (~vysn@user/vysn) (Ping timeout: 264 seconds)
[16:02:23] *** Quits: jpbruyere (~jp@2a02:a03f:a992:4900:c6e9:84ff:fe0d:aa9e) (Quit: Leaving)
[16:05:44] *** Quits: Arwalk (~Arwalk@lfbn-dij-1-1329-53.w92-141.abo.wanadoo.fr) (Quit: ZNC 1.8.2 - https://znc.in)
[16:05:58] *** Joins: linxue (~linxue3@113.68.253.235)
[16:06:49] *** Joins: LordJohn (~lordjohn@l37-192-203-250.novotelecom.ru)
[16:08:45] *** Joins: Arwalk (~Arwalk@lfbn-dij-1-1329-53.w92-141.abo.wanadoo.fr)
[16:10:37] *** Joins: seninha (~seninha@user/seninha)
[16:10:44] *** Joins: X-Scale` (~ARM@46.50.0.92)
[16:12:35] *** Quits: X-Scale (~ARM@165.201.137.78.rev.vodafone.pt) (Ping timeout: 250 seconds)
[16:12:42] *** Quits: cmbengue (~Thunderbi@207.191.249.160) (Ping timeout: 260 seconds)
[16:12:47] *** Joins: jusski (~user@78-63-85-123.static.zebra.lt)
[16:12:57] *** Joins: cmbengue (~Thunderbi@207.191.249.160)
[16:15:32] *** X-Scale` is now known as X-Scale
[16:16:31] *** Joins: iddev5 (~iddev5@2409:4062:2397:19e9:ecda:b83f:8ef0:46d4)
[16:17:40] *** Joins: brunodOut (~autistic@user/linguist)
[16:21:48] *** Quits: cm007magnum (~Rheanna@61.171.38.68) (Remote host closed the connection)
[16:22:20] *** Joins: stanrifkin (~stanrifki@p200300dbcf1af400ca3d35d4b9048383.dip0.t-ipconnect.de)
[16:22:24] *** Joins: Echoz_ (~chris@user/echoz)
[16:24:24] *** Joins: tradar (~tradar@user/tradar)
[16:24:38] *** Joins: cm007magnum (~Rheanna@61.171.21.169)
[16:24:45] *** Joins: WilliamLeara (~wdl@cpe-76-185-2-28.tx.res.rr.com)
[16:27:41] *** Quits: Furai (~Furai@cookiehoster.furai.pl) (Quit: WeeChat 3.3)
[16:28:36] *** Quits: linxue (~linxue3@113.68.253.235) (Quit: Leaving)
[16:29:30] *** Quits: diamondbond (~diamondbo@175.157.52.20) (Ping timeout: 260 seconds)
[16:30:55] *** Joins: Furai (~Furai@cookiehoster.furai.pl)
[16:31:40] *** Parts: stanrifkin (~stanrifki@p200300dbcf1af400ca3d35d4b9048383.dip0.t-ipconnect.de) (Leaving)
[16:32:36] *** Quits: Guest4216 (~Guest42@wificampus-098145.grenet.fr) (Ping timeout: 256 seconds)
[16:34:44] *** Joins: diamondbond (~diamondbo@175.157.52.20)
[16:36:17] *** Joins: whupdup (~whupdup@pool-173-76-128-81.bstnma.fios.verizon.net)
[16:38:11] *** Quits: iddev5 (~iddev5@2409:4062:2397:19e9:ecda:b83f:8ef0:46d4) (Quit: iddev5)
[16:40:19] *** Quits: boB_K7IQ (~boB_K7IQ@c-24-19-3-104.hsd1.wa.comcast.net) (Ping timeout: 250 seconds)
[16:41:52] *** Quits: WilliamLeara (~wdl@cpe-76-185-2-28.tx.res.rr.com) (Ping timeout: 268 seconds)
[16:43:36] *** Joins: brad_mssw (~bhouse@2601:344:4100:b490:891e:be41:6dd8:c278)
[16:45:19] *** Quits: gproto23 (~gproto23@user/gproto23) (Remote host closed the connection)
[16:47:38] *** Joins: diamondbond_ (~diamondbo@175.157.52.20)
[16:48:54] *** Quits: diamondbond_ (~diamondbo@175.157.52.20) (Client Quit)
[16:49:00] *** Quits: tradar (~tradar@user/tradar) (Quit: tradar)
[16:49:52] *** Joins: Famine- (~Famine@user/famine)
[16:50:08] *** Quits: diamondbond (~diamondbo@175.157.52.20) (Ping timeout: 256 seconds)
[16:50:44] *** Joins: karakedi (~eAC53C340@user/karakedi)
[16:51:49] *** Joins: bzng (~bzng4@2a02:60a0:102:4302:7d5d:d244:551b:9c7a)
[16:52:01] *** Quits: jusski (~user@78-63-85-123.static.zebra.lt) (Ping timeout: 250 seconds)
[16:52:45] *** Quits: Famine_ (~Famine@user/famine) (Ping timeout: 265 seconds)
[16:53:25] *** Parts: Arwalk (~Arwalk@lfbn-dij-1-1329-53.w92-141.abo.wanadoo.fr) (The Lounge - https://thelounge.chat)
[16:54:45] *** Quits: ko (~i.am@user/marlboro) (Quit: I come down here for a fat woman and that's what I'm havin.)
[16:59:52] *** Joins: constxd (~brad@192.75.101.164)
[17:02:12] *** Quits: kashyaprushi (~kashyapru@2405:201:1010:b033:9af9:4bfe:ee61:8327) (Quit: Leaving)
[17:04:03] *** Joins: gh34 (~textual@cpe-184-58-181-106.wi.res.rr.com)
[17:04:54] *** Quits: bindu (~bindu@user/bindu) (Ping timeout: 276 seconds)
[17:04:58] *** Quits: foxtrot (~foxtrot@user/foxtrot) (Ping timeout: 260 seconds)
[17:05:18] *** Quits: Echoz_ (~chris@user/echoz) (Ping timeout: 268 seconds)
[17:05:50] *** Joins: Echoz_ (~chris@user/echoz)
[17:06:07] *** Joins: WilliamLeara (~wdl@cpe-76-185-2-28.tx.res.rr.com)
[17:06:09] *** Joins: southey (~foxtrot@user/foxtrot)
[17:07:43] *** Joins: skeels (uid493124@uxbridge.irccloud.com)
[17:08:50] *** Quits: whupdup (~whupdup@pool-173-76-128-81.bstnma.fios.verizon.net) (Quit: Going offline, see ya! (www.adiirc.com))
[17:09:47] *** Joins: RicardasSim (~RicardasS@78-63-172-44.static.zebra.lt)
[17:11:12] *** Joins: whupdup (~whupdup@pool-173-76-128-81.bstnma.fios.verizon.net)
[17:11:58] *** Quits: cm007magnum (~Rheanna@61.171.21.169) (Remote host closed the connection)
[17:13:27] *** Joins: cm007magnum (~Rheanna@218.78.104.50)
[17:14:59] *** Quits: i336 (~i336@121.216.192.114) (Ping timeout: 250 seconds)
[17:15:52] *** Joins: i336 (~i336@101.163.192.47)
[17:16:54] *** Quits: tech_exorcist (txrcst@user/tech-exorcist/x-0447479) (Quit: talk to you later or tomorrow)
[17:17:00] *** Joins: gr33n7007h (~gr33n7007@user/gr33n7007h)
[17:20:19] *** Joins: mrgz (~mrgz@201-42-0-191.dsl.telesp.net.br)
[17:25:56] *** Joins: pulse (~pulse@user/pulse)
[17:29:28] *** Quits: |7| (~seachdamh@user/seachdamh) (Quit: KVIrc 5.0.0 Aria http://www.kvirc.net/)
[17:30:58] *** Joins: pample (~xse@user/xse)
[17:38:00] *** Joins: odoood (~odoood@2601:c8:c003:a550::3)
[17:38:33] *** Joins: loganlee (~Thunderbi@user/loganlee)
[17:40:22] <vanell0pe> do you share your github project ?
[17:40:50] *** Quits: loganlee (~Thunderbi@user/loganlee) (Client Quit)
[17:40:53] *** Quits: myon98 (~myon98@user/myon98) (Quit: Bouncer maintainance...)
[17:42:04] *** Joins: Gimble (~G1mble2@2a01:4b00:8e07:7900:258a:d8a:632b:a428)
[17:44:53] *** Quits: Enitin (~Enitin@82.102.22.85) (Ping timeout: 250 seconds)
[17:45:19] *** Joins: AbleBacon (~AbleBacon@user/AbleBacon)
[17:45:41] *** Joins: Enitin (~Enitin@82.102.22.86)
[17:46:13] *** Joins: eelstrebor (~eelstrebo@198-178-29-136.scb.ne.static.allophone.net)
[17:47:03] <pample> Hello #c, i slowly managed to write a super small program for my tmux statusbar: http://ix.io/3F9S/c Took me like 4 hours but it works really well! at least on the machine it needs to work on :3 I'm looking for someone that more or less knows what he/she's doing better than me (i can now say i understand how to read files) to glance at it and maybe
[17:47:04] <pample> notice something awful/something that could be way better if done X/Y way, .. like tips/hints and so on
[17:47:23] *** Joins: meator (~meator@user/meator)
[17:48:56] *** Quits: nyah (~nyah@94.6.71.219) (Quit: leaving)
[17:49:20] *** Quits: brad_mssw (~bhouse@2601:344:4100:b490:891e:be41:6dd8:c278) (Quit: This computer has gone to sleep)
[17:49:39] *** Quits: extern (~archer@37.142.171.206) (Ping timeout: 250 seconds)
[17:49:48] *** Joins: brad_mssw (~bhouse@2601:344:4100:b490:891e:be41:6dd8:c278)
[17:51:31] <omegatron> no need to use "static" with every function if this is the entire program
[17:52:26] *** Joins: sickdugongo (~sickdugon@user/sickdugongo)
[17:52:36] <omegatron> and use { .. } with loops (line 76) (and indentation) to make it clear what the loop body is
[17:54:04] *** Quits: vanell0pe (~vanell0pe@228.224.70.37.rev.sfr.net) (Remote host closed the connection)
[17:54:42] *** Quits: frost (~frost@user/frost) (Quit: Connection closed)
[17:54:46] <omegatron> and why are using 1024.0 (a floating point value) in lines 80 and 81 ?
[17:56:35] *** Quits: Enitin (~Enitin@82.102.22.86) (Ping timeout: 250 seconds)
[17:56:41] *** Joins: dugsickongo (~sickdugon@5-157-101-123.dyn.eolo.it)
[17:56:41] *** Quits: dugsickongo (~sickdugon@5-157-101-123.dyn.eolo.it) (Changing host)
[17:56:41] *** Joins: dugsickongo (~sickdugon@user/sickdugongo)
[17:56:50] *** Joins: Enitin (~Enitin@82.102.22.84)
[17:57:56] *** Joins: soul-d (~uknown@user/soul-d)
[17:58:31] *** Joins: brad_mssw|mac (~bhouse@c-76-106-206-149.hsd1.fl.comcast.net)
[17:58:34] *** Quits: sickdugongo (~sickdugon@user/sickdugongo) (Read error: Connection reset by peer)
[18:00:55] *** Quits: brad_mssw (~bhouse@2601:344:4100:b490:891e:be41:6dd8:c278) (Ping timeout: 250 seconds)
[18:01:02] <floatcomplex> code that uses sscanf never looks right even when it is
[18:01:07] <pample> makes sense, indeed it needs better indentation functions kinda look like big blocks. right that floating 1024.0 don't need to be floating, it's a remnant from when i had an issue with that function i was consistently 1MiB off free's output and tried lots of converting unsigned long to floats thinking the issue was linked to decimals being lots
[18:01:07] <pample> which wasn't the case ^^
[18:01:29] *** Quits: cm007magnum (~Rheanna@218.78.104.50) (Remote host closed the connection)
[18:01:44] <pample> lost*
[18:02:10] *** Parts: dugsickongo (~sickdugon@user/sickdugongo) (Leaving)
[18:02:12] *** Joins: dugsickongo (~sickdugon@user/sickdugongo)
[18:03:55] *** Joins: cm007magnum (~Rheanna@61.171.38.68)
[18:04:59] *** Joins: bindu (~bindu@user/bindu)
[18:05:56] *** Joins: myon98 (~myon98@user/myon98)
[18:06:59] *** Joins: the (~the@2620:8d:8000:1044:b6ca:1ac:6dab:2ab1)
[18:07:38] *** Quits: caveman (~caveman@gateway/tor-sasl/caveman) (Remote host closed the connection)
[18:08:08] *** Joins: caveman (~caveman@gateway/tor-sasl/caveman)
[18:08:42] *** Joins: wroathe (~wroathe@c-68-54-25-135.hsd1.mn.comcast.net)
[18:08:42] *** Quits: wroathe (~wroathe@c-68-54-25-135.hsd1.mn.comcast.net) (Changing host)
[18:08:42] *** Joins: wroathe (~wroathe@user/wroathe)
[18:09:58] *** Joins: Guest42 (~Guest42@eth-west-pareq2-46-193-4-100.wb.wifirst.net)
[18:12:11] *** Joins: extern (~archer@37.142.171.206)
[18:13:25] *** Quits: Iarfen (~quassel@181.43.59.114) (Quit: https://quassel-irc.org - Chat comfortably. Anywhere.)
[18:14:18] *** Joins: vysn (~vysn@user/vysn)
[18:14:27] *** Joins: Iarfen (~quassel@181.43.59.114)
[18:16:45] *** Quits: TheCoffeMaker (~TheCoffeM@user/thecoffemaker) (Excess Flood)
[18:16:52] *** Quits: asm (~alexander@burner.asm89.io) (Changing host)
[18:16:52] *** Joins: asm (~alexander@user/asm)
[18:17:15] *** Joins: TheCoffeMaker (~TheCoffeM@user/thecoffemaker)
[18:18:38] <nomagno> If I provide an unterminated string to one of the strxxx() libc functions, can this cause any trouble?
[18:18:53] *** Quits: acerbic (~acerbic@cs-xdata-50-86-48-149.cspire.com) (Read error: Connection reset by peer)
[18:19:22] *** Joins: kurahaupo (~kurahaupo@ppp122-115.static.internode.on.net)
[18:19:59] *** Quits: the (~the@2620:8d:8000:1044:b6ca:1ac:6dab:2ab1) (Ping timeout: 250 seconds)
[18:21:17] *** Quits: wroathe (~wroathe@user/wroathe) (Ping timeout: 250 seconds)
[18:22:39] <Learath2> ofc
[18:23:17] <nomagno> Is this actually undefined, or will the function simply return some error code?
[18:23:44] <nomagno> It would actually seem very dumb to have a function that segfaults on purpose...
[18:23:54] <Learath2> It's UB to pass a non-terminated string to a library function expecting a cstring
[18:24:33] <nomagno> That sounds like a case where it would make sense to define an error code
[18:25:09] <Learath2> How are the functions supposed to know that your string is unterminated?
[18:26:19] <clarity> More like it's UB to pass a non-string to a library function that requires a string
[18:26:43] <nomagno> Learath2: you scan it until you either hit NULL, or you run out of array
[18:26:49] *** Quits: z8z (~x@ac255238.ppp.asahi-net.or.jp) (Quit: Quitting)
[18:26:58] <nomagno> Oh wait, strings are pointers-
[18:27:00] <Learath2> Well yes, a "non-terminated string" is no string in the eyes of the standard, but I decided it'd be more productive to use their terminology
[18:27:02] *** Quits: brunodOut (~autistic@user/linguist) (Ping timeout: 256 seconds)
[18:27:22] <clarity> I know, but it's good to hilight the absurdity of it
[18:27:34] *** Quits: RicardasSim (~RicardasS@78-63-172-44.static.zebra.lt) (Quit: Leaving)
[18:27:41] <clarity> Before they want error codes also if you pass floats or ints or whatever
[18:27:59] <nomagno> Pointer decay ruining the day, I guess
[18:28:01] <clarity> Or pointers to whatever really
[18:28:02] <Learath2> Well floats or ints you just can't pass period without casts :P
[18:28:36] <clarity> strings aren't pointers :(
[18:28:51] *** Joins: tech_exorcist (txrcst@user/tech-exorcist/x-0447479)
[18:28:51] <Learath2> nomagno: It's not really ruining things per se, where would this extra size information go? More recent languages carry around a header with their arrays containing this size information
[18:28:57] *** Joins: masterbuilder (~user@user/masterbuilder)
[18:29:28] <nomagno> Learath2: well yeah, it was just an expression
[18:30:08] *** Joins: wovixo (~wovixo@128.104.205.49)
[18:30:41] <nomagno> If we get cheeky, the spec could demand a char array (not just char *) to be passed, and that the preprocessor automatically inserts a sizeof() argument
[18:30:48] *** Joins: nvmd (~nvmd@user/nvmd)
[18:30:55] *** Quits: bzng (~bzng4@2a02:60a0:102:4302:7d5d:d244:551b:9c7a) (Read error: Connection reset by peer)
[18:31:37] <clarity> That'd be a pain
[18:31:43] <Learath2> You are free to have a more foolproof/developer-friendly abstraction above C and many people made similar things. Even fancy growing strings can be had, the standard really just provides the bare minimum
[18:31:50] <nomagno> Make strtol() actually be a #define for internal_strtol. Obviously too much work for this dummy thing :P
[18:32:15] <apotheon> nomagno: Disallowing a dynamically allocated array seems like a bad idea.
[18:32:36] <nomagno> I know
[18:33:07] <nomagno> apotheon: ... Yeah fair point
[18:33:46] <Learath2> apotheon: Well technically even those could be accomodated through making the standard also mandate standard headers for dynamically allocated blocks and getting the size from there. Hopefully I don't have to point out why this is not the best idea :D
[18:34:04] <apotheon> har
[18:34:24] <nomagno> We are on track to C+!
[18:34:25] <Learath2> At the end of the day you'll end up inventing python, and who really wants python
[18:34:54] <pragma-> everyone wants a python. they just don't want python's syntax.
[18:35:03] <apotheon> If C gets a solid grade of A, C+ is a definite downgrade.
[18:35:17] <apotheon> Learath2: not I
[18:35:23] <nomagno> I really hope the C committee calms down with the new features after C23
[18:35:33] <apotheon> pragma-: I don't actually like Python's semantics all that much.
[18:35:35] *** Joins: acerbic (~acerbic@cs-xdata-50-86-48-149.cspire.com)
[18:36:18] <nomagno> They are standardizing things that have already been semistandard for a while, cool, now little cool down
[18:36:24] <apotheon> nomagno: I'd really like to see the C committee upgrade guaranteed zeroing before free from optional to mandatory, though.
[18:36:37] *** Quits: wovixo (~wovixo@128.104.205.49) (Read error: Connection reset by peer)
[18:36:45] <Learath2> I actually do want new features in C, but not in the way they are introducing them. Can we all just at some point decide that programs from 1990 don't need to compile on every modern compiler anymore?
[18:37:06] <nomagno> apotheon: oh wait, they're making free() actually get rid of the value? Hooray!
[18:37:23] <pragma-> I think it's healthy to discard backwards compatability after a certain point.
[18:37:36] <apotheon> Requiring everyone to use libraries that keep having to be updated for portable guaranteed zeroing before free just to keep up with psychopathic compiler optimization is exhausting.
[18:37:55] *** Joins: wroathe (~wroathe@c-68-54-25-135.hsd1.mn.comcast.net)
[18:37:55] *** Quits: wroathe (~wroathe@c-68-54-25-135.hsd1.mn.comcast.net) (Changing host)
[18:37:55] *** Joins: wroathe (~wroathe@user/wroathe)
[18:38:25] <Learath2> Um, what is the problem with free not zeroing memory? Why should it when it's a waste of cycles?
[18:38:42] <pragma-> After a certain point, you've gotta say "c2076 is dropping legacy support for c1989."
[18:38:47] *** Quits: pulse (~pulse@user/pulse) (Ping timeout: 264 seconds)
[18:38:50] <apotheon> Learath2: When you are dealing with sensitive data, guaranteeing zero before free is kind of important.
[18:39:12] <pragma-> OH
[18:39:20] <pragma-> C23 DROPPED SUPPORT FOR K&R STYLE FUNCTIONS!
[18:39:22] <pragma-> I AM SO HAPPY
[18:39:27] <apotheon> har
[18:39:35] *** Joins: monkey_ (~user@181.114.17.106)
[18:39:40] <Learath2> Ah, I see what you mean, you want zeroing that won't get optimized out. Yeah that'd be useful, I thought you wanted all frees to always zero memory
[18:40:06] <apotheon> Learath2: No, I just want the one function that does it to always work.
[18:40:09] *** Quits: TheCoffeMaker (~TheCoffeM@user/thecoffemaker) (Excess Flood)
[18:40:27] <nomagno> I'll still be voluntarily stuck on C99 for a while. Can't wait to get my hands on those juicy C11 atomic guarantees though!
[18:40:40] *** Quits: avar (avar@vm.nix.is) (Read error: Connection reset by peer)
[18:40:43] <Learath2> clear_free()? I don't see why everyone should get a performance penalty because some programs handle sensitive data
[18:40:52] <apotheon> Learath2: Because it's optional in C11, and compiler maintainers just fucking ignored it, you basically have to pull in something like libsodium to get fairly portable support for it.
[18:40:56] *** Joins: mimmy (~mimmy@146.70.75.156)
[18:41:02] *** Joins: TheCoffeMaker (~TheCoffeM@user/thecoffemaker)
[18:41:19] <apotheon> Learath2: . . . or reimplement libsodium's platform detection and function selection for that.
[18:42:00] *** Quits: richbridger (~richbridg@089144202142.atnat0011.highway.a1.net) (Remote host closed the connection)
[18:42:05] *** Quits: wroathe (~wroathe@user/wroathe) (Ping timeout: 250 seconds)
[18:42:26] *** Joins: richbridger (~richbridg@089144202142.atnat0011.highway.a1.net)
[18:42:33] <apotheon> Learath2: I don't see why you'd think everyone would get a performance penalty.
[18:42:55] <apotheon> Learath2: You wouldn't, if you don't use the specific function designed for guaranteed zeroing before free.
[18:43:38] <Learath2> That's what I proposed, you said "No, I just want..."
[18:43:54] *** Quits: mark_infinite (~skynet@ppp-94-66-136-166.home.otenet.gr) (Quit: Lost terminal)
[18:44:24] <Learath2> If you want all free() calls to clean up the memory, I'm not onboard, if you want a mandatory clean()/clean_free() that is not allowed to be optimized out I'm in
[18:44:30] *** Quits: tech_exorcist (txrcst@user/tech-exorcist/x-0447479) (Quit: bbl)
[18:45:00] *** Quits: bindu (~bindu@user/bindu) (Ping timeout: 276 seconds)
[18:45:12] <nomagno> https://termbin.com/sb4a
[18:45:16] <nomagno> Cursed recursion
[18:45:33] *** Joins: avar (avar@vm.nix.is)
[18:45:47] <apotheon> Learath2: dude
[18:45:52] <apotheon> Learath2: not all free calls
[18:46:09] <apotheon> Learath2: a function you execute before free that zeroes memory, and guarantees it won't get optimized away
[18:46:46] <apotheon> Learath2: Look at C11.  It includes an optional standard function for this purpose.
[18:47:02] <Learath2> Okay, either you are not reading what I'm saying or you have some preconception about me that seems to make you skip words while reading
[18:47:22] <apotheon> memset_s()
[18:48:00] <apotheon> I think *you* aren't reading what *I'm* saying, because you keep railing against something almost totally unrelated to what I'm saying.
[18:48:31] <Learath2> 16:09 <Learath2> Ah, I see what you mean, you want zeroing that won't get optimized out. Yeah that'd be useful, I thought you wanted all frees to always zero memory
[18:48:39] <Learath2> Which is exactly what you want
[18:49:01] <nomagno> facepalm
[18:49:02] <apotheon> and yet you then go on to complain about me potentially wanting all frees to zero memory
[18:49:57] <Learath2> Because when I said this you said "No, I just want the one function that does it to always work"
[18:50:08] <pragma-> I'm reminded of a skit where two guys are talking to each other. One guy says "I want X!" The other guy repeats back to the first, "You want X!" And the first replies, "Don't tell me what I want!"
[18:50:09] *** Joins: pulse (~pulse@user/pulse)
[18:50:16] <Learath2> Enough of this semantic discussion leading nowhere. What an absolutely retarded waste of time
[18:50:27] <apotheon> Learath2: one function = memset_s(), instead of a different function on every platform
[18:51:29] <apotheon> For example, OpenBSD has explicit_bzero() because compilers still don't implement memset_s().
[18:51:30] *** Quits: cm007magnum (~Rheanna@61.171.38.68) (Remote host closed the connection)
[18:51:33] <Learath2> "I want X" "I don't think that's a good idea" "*elaborates about X*" "Oh yeah, I misunderstood what you meant by X, that is indeed a good idea" "No fuck you"
[18:51:44] *** Joins: bindu (~bindu@user/bindu)
[18:51:50] *** Quits: dlbh^ (~dlbh@h50.174.139.63.static.ip.windstream.net) (Remote host closed the connection)
[18:52:10] <apotheon> Okay, sure you can just mischaracterize the apparent misunderstanding rather than try to meet in the middle.  It's cool.
[18:52:13] <apotheon> never mind
[18:52:39] <Learath2> What middle my guy, I literally am at the same position as you. This debatelord trend is so mind boggling
[18:53:26] <Learath2> It's like I'm talking to a FSA programmed to just debate and is missing a branch to the end state
[18:53:27] *** Joins: cm007magnum (~Rheanna@218.78.104.50)
[18:53:34] <clarity> meow
[18:53:42] *** Quits: Nitrousoxide (~msdos@user/nitrousoxide) (Ping timeout: 260 seconds)
[18:53:52] <apotheon> The middle is where you stop trying to make people feel bad for not understanding your insistence on beating something to death that reads like continued disagreement while you're supposedly agreeing.
[18:54:08] <nomagno> woof
[18:55:57] *** Quits: odoood (~odoood@2601:c8:c003:a550::3) (Ping timeout: 250 seconds)
[18:56:18] *** Quits: |darc| (darc@darcserv.net) (Ping timeout: 268 seconds)
[18:56:30] *** Quits: Klinda (~superleag@user/klinda) (Ping timeout: 256 seconds)
[18:56:58] *** Joins: Nitrousoxide (~msdos@user/nitrousoxide)
[18:59:12] *** Joins: katnis (uid15849@helmsley.irccloud.com)
[18:59:28] *** Joins: z8z (~x@ac255238.ppp.asahi-net.or.jp)
[19:00:49] <Learath2> I literally don't know how better to signal that I agree than "Yeah that'd be useful" followed by a very clear statement of my position 3 messages later when it became apparent that you didn't understand
[19:01:02] <Learath2> Next time I'll stick to "I concede my lord"
[19:03:23] *** Quits: bindu (~bindu@user/bindu) (Remote host closed the connection)
[19:03:51] *** Joins: topside_ (~topside@ip68-226-238-34.lf.br.cox.net)
[19:04:05] *** Joins: bindu (~bindu@user/bindu)
[19:04:41] *** Quits: dugsickongo (~sickdugon@user/sickdugongo) (Read error: Connection reset by peer)
[19:04:50] *** Quits: alch (~alch@151.34.10.44) (Read error: Connection reset by peer)
[19:04:59] *** Joins: dugsickongo (~sickdugon@5-157-101-123.dyn.eolo.it)
[19:04:59] *** Quits: dugsickongo (~sickdugon@5-157-101-123.dyn.eolo.it) (Changing host)
[19:04:59] *** Joins: dugsickongo (~sickdugon@user/sickdugongo)
[19:06:42] *** Quits: Alhazred (~Alhazred@s91904425.blix.com) (Ping timeout: 256 seconds)
[19:07:30] *** Joins: |darc| (darc@darcserv.net)
[19:08:05] *** Quits: topside (~topside@ip68-226-238-34.lf.br.cox.net) (Ping timeout: 265 seconds)
[19:08:32] *** Joins: brunodOut (~autistic@user/linguist)
[19:09:09] *** Joins: alch (~alch@151.34.83.95)
[19:10:56] *** Joins: gareppa (~gareppa@user/gareppa)
[19:15:12] *** Quits: skeels (uid493124@uxbridge.irccloud.com) (Quit: Connection closed for inactivity)
[19:18:23] *** Quits: Tom^ (~Tom^@user/tom/x-0773808) (Ping timeout: 264 seconds)
[19:18:23] <markand> annex k functions will probably never make in anyway
[19:18:25] *** Joins: Masklin_Gurder (~joel@213-67-8-136-no206.tbcn.telia.com)
[19:18:35] *** Quits: gareppa (~gareppa@user/gareppa) (Quit: Leaving)
[19:20:14] *** Joins: Tom^ (~Tom^@user/tom/x-0773808)
[19:20:39] *** Quits: meator (~meator@user/meator) (Ping timeout: 265 seconds)
[19:20:41] *** topside_ is now known as topside
[19:23:13] *** Quits: extern (~archer@37.142.171.206) (Quit: WeeChat 3.3)
[19:24:09] *** Joins: rgrinberg (~textual@190.113.102.153)
[19:27:03] *** Joins: tech_exorcist (txrcst@user/tech-exorcist/x-0447479)
[19:28:01] *** Quits: Echoz_ (~chris@user/echoz) (Ping timeout: 250 seconds)
[19:29:19] *** Quits: Nitrousoxide (~msdos@user/nitrousoxide) (Ping timeout: 250 seconds)
[19:29:40] <apotheon> Learath2: My suggestion would be, after saying you understand and it would be useful, to not go back and complain about the original misconceived idea again.
[19:30:06] *** Joins: dyeplexer (~dyeplexer@user/dyeplexer)
[19:31:08] *** Quits: tech_exorcist (txrcst@user/tech-exorcist/x-0447479) (Remote host closed the connection)
[19:31:09] *** Quits: bindu (~bindu@user/bindu) (Quit: Leaving)
[19:31:57] *** Joins: bindu (~bindu@user/bindu)
[19:32:37] *** Joins: Nitrousoxide (~msdos@user/nitrousoxide)
[19:35:23] *** Quits: monkey_ (~user@181.114.17.106) (Ping timeout: 250 seconds)
[19:35:55] *** Joins: kuber (~kuber@97-126-3-32.tukw.qwest.net)
[19:35:59] *** Joins: Echoz_ (~chris@user/echoz)
[19:39:20] <pample> aaand i'm off, thanks a lot for those couple tips earlier, have a good day/night
[19:39:23] *** Parts: pample (~xse@user/xse) ()
[19:40:37] *** Joins: Alhazred (~Alhazred@s91904425.blix.com)
[19:41:32] *** Quits: cm007magnum (~Rheanna@218.78.104.50) (Remote host closed the connection)
[19:43:02] *** Joins: cm007magnum (~Rheanna@61.171.38.68)
[19:47:14] *** Joins: pretty_dumm_guy (trottel@gateway/vpn/protonvpn/prettydummguy/x-88029655)
[19:47:18] *** Joins: Klinda (~superleag@user/klinda)
[19:47:41] *** Joins: sheldon (~sheldon@user/sheldon)
[19:49:48] *** Quits: rgrinberg (~textual@190.113.102.153) (Quit: My MacBook has gone to sleep. ZZZzzzâ€¦)
[19:50:53] *** Joins: kdc_ (~kdc@196.211.197.159)
[19:51:08] <johnjay> would "int class = 0;" fail for c++ but succeed for c because of keywords?
[19:52:11] <floatcomplex> hopefully
[19:53:25] *** Joins: [sprint]^ (~ace@83.96.14.74)
[19:53:44] *** Quits: kdc (~kdc@196.211.197.159) (Ping timeout: 256 seconds)
[19:55:06] <johnjay> ok. i thought this project wanted c++. but ninja is running checks for a c compiler as well
[19:55:08] <supakeen> Does for me.
[19:55:17] <johnjay> so CC=/opt/homebrew/bin/g++-11 meson build didn't cut it
[19:55:19] *** Quits: Echoz_ (~chris@user/echoz) (Ping timeout: 250 seconds)
[19:55:38] <johnjay> i think CC and CXX are the magic names i need to tell it to not use clang
[19:55:44] *** Quits: dugsickongo (~sickdugon@user/sickdugongo) (Read error: Connection reset by peer)
[19:56:06] *** Joins: dugsickongo (~sickdugon@5.157.101.123)
[19:56:06] *** Quits: dugsickongo (~sickdugon@5.157.101.123) (Changing host)
[19:56:06] *** Joins: dugsickongo (~sickdugon@user/sickdugongo)
[19:56:41] *** Joins: Echoz_ (~chris@user/echoz)
[19:57:48] <floatcomplex> what's wrong with clang
[19:58:21] <floatcomplex> this sounds like a homebrew problem actually
[19:59:13] *** Quits: Alhazred (~Alhazred@s91904425.blix.com) (Ping timeout: 250 seconds)
[20:04:47] *** Joins: varioust (~varioust@72-46-48-28.lnk.ne.static.allophone.net)
[20:06:17] *** Quits: [sprint]^ (~ace@83.96.14.74) ()
[20:12:22] *** Quits: AsenMx (~AsenMx@user/asenmx) (Ping timeout: 265 seconds)
[20:12:28] *** Joins: Hax0r (~Hax0r@128.127.222.243)
[20:13:29] *** Quits: dogbert2 (~Bill@ip68-105-189-91.lv.lv.cox.net) (Remote host closed the connection)
[20:13:44] *** Joins: dogbert2 (~Bill@ip68-105-189-91.lv.lv.cox.net)
[20:15:00] *** Joins: horribleprogram (~user@user/horribleprogram)
[20:15:17] <horribleprogram> can u guys explain this
[20:15:29] <horribleprogram> int d = a / 2; 
[20:15:52] *** Quits: mrig (~AdiIRC@user/mrig) (Quit: Going offline, see ya! (www.adiirc.com))
[20:16:06] <horribleprogram> generates movl %eax, %edx ... shrl $31, %edx ... addl %edx, %eax ... sarl $1, %eax
[20:16:21] <horribleprogram> I forgot that a = -1;
[20:16:49] *** Quits: The_Blode_ (~Blode@user/the-blode/x-7164444) (Read error: No route to host)
[20:16:57] <horribleprogram> I understand a bit about two's complement encoding, I understand the difference between the right shifts
[20:16:59] *** Quits: fatalnix (~hodbogi@user/fatalnix) (Quit: ZNC 1.8.2 - https://znc.in)
[20:17:04] <horribleprogram> but wtf is this shit
[20:17:25] <horribleprogram> a logical shift right of 31, clears everything but the most significant bit, which is 1
[20:17:28] <horribleprogram> cuz a = -1
[20:17:57] <horribleprogram> then u add %edx to %eax, which would add 1
[20:18:13] <horribleprogram> this produces a 00000000000000...00010
[20:18:19] <omegatron> is this a channel for x86 assembler ?
[20:18:24] <horribleprogram> omegatron: no
[20:18:33] <horribleprogram> but it's both C and assembly
[20:19:04] <omegatron> does your code work as expected?
[20:19:08] <horribleprogram> no
[20:19:20] *** Joins: mrig (~mrig@user/mrig)
[20:19:50] <horribleprogram> this is from a book 
[20:20:03] <horribleprogram> https://www.jjj.de/fxt/#fxtbook
[20:20:04] <candide> Title of horribleprogram's link: jj's useful and ugly FXT page
[20:20:22] <horribleprogram> it talks about low-level algorithms, which I'm one of the best at
[20:20:22] <omegatron> ... and why do you care about the produced assembler instructions ?
[20:20:27] <horribleprogram> BECAUSE
[20:20:42] <horribleprogram> bro uk me
[20:20:47] <horribleprogram> I'm learning the GCC internals
[20:21:00] <omegatron> do you think gcc has a bug?
[20:21:03] <horribleprogram> yes
[20:21:08] <omegatron> -_-
[20:21:09] <horribleprogram> or it "optimizes" weirdly
[20:21:12] *** Joins: The_Blode (~Blode@user/the-blode/x-7164444)
[20:21:24] <horribleprogram> with two's complement signed right shift when dividing by powers of 2
[20:21:51] <omegatron> ... I assume you use a recent compiler ?
[20:22:10] <horribleprogram> clang 13.0.0
[20:23:08] <fizzie> A signed divide by 2 *needs* "that shit" to produce the correct (truncated towards zero) result if implemented using an arithmetic right shift.
[20:23:41] <horribleprogram> but it doesn't... it produces a 1
[20:23:50] <horribleprogram> -1 / 2 should be 0
[20:23:59] <horribleprogram> wait should it?
[20:24:09] <horribleprogram> yeah u say it's rounded towards zero
[20:24:53] <omegatron> if you are learning the gcc internals.. why do you use clang ?
[20:24:53] *** Joins: Alhazred (~Alhazred@s91904425.blix.com)
[20:25:02] <fizzie> horribleprogram: It should, and it is.
[20:25:06] *** Quits: varioust (~varioust@72-46-48-28.lnk.ne.static.allophone.net) (Quit: varioust)
[20:25:18] <horribleprogram> omegatron: because I'm on macOS
[20:25:32] <fizzie> -1 shifted arithmetically right by one is -1, so it needs that +1 to be added to get that zero.
[20:25:41] <horribleprogram> OH
[20:25:50] <nomagno> omegatron: I assume by "GCC internals" they mean GNU C, which Clang definitely implements
[20:26:32] <horribleprogram> correct
[20:27:37] <omegatron> .. gcc in general is the  gnu compiler collection, which is not clang ..  besides, my mac os x machines all have gcc and clang, so the "because i'm on mac os" is .. not definitive
[20:28:05] <horribleprogram> didn't know I was in #bullypeople
[20:28:52] <omegatron> who is bullying someone? if you use words with another meaning as the common one, you can expect confusion
[20:29:27] <nomagno> omegatron: GCC in the context of #c is most of the time referring to the language the GNU C Compiler implements
[20:29:28] <horribleprogram> classic bullying tactic
[20:29:37] <horribleprogram> listen nvm then
[20:29:44] <horribleprogram> I'll go somewhere where omegatron doesn't bully me
[20:29:47] *** Quits: horribleprogram (~user@user/horribleprogram) (Quit: ERC (IRC client for Emacs 27.2))
[20:30:04] <omegatron> nomagno: I see
[20:30:07] *** Joins: rgrinberg (~textual@201.192.183.100)
[20:30:33] <fizzie> "How to implement x/2 in x86 assembly" isn't really a "GCC internals" question no matter how you interpret the word, so I don't think it really matters.
[20:30:42] <omegatron> perhaps that should be put into the channel's topic ..
[20:31:27] *** Quits: cm007magnum (~Rheanna@61.171.38.68) (Remote host closed the connection)
[20:31:34] *** Quits: CaryHartline (~CaryHartl@2603-8080-6a0e-8d88-a5f1-5281-6a38-5d1d.res6.spectrum.com) (Quit: My iMac has gone to sleep. ZZZzzzâ€¦)
[20:32:26] *** Joins: missogra (~missogra@dynamic-077-010-001-191.77.10.pool.telefonica.de)
[20:32:33] <nomagno> omegatron: well no, not really. I'm sure you'll find situations where the distinction between GCC and Clang is important, this just wasn't one of them. GNU C is more universally understood
[20:33:02] <fizzie> Well, now. I don't know if "GNU C internals" is really a meaningful concept in any way.
[20:33:14] <fizzie> (There was also nothing "GNU C" about the question.)
[20:33:16] *** Joins: kenanmarasli (~kenanmara@user/kenanmarasli)
[20:33:38] <nomagno> fizzie: The question wasn't related to anything that starts with GNU
[20:33:41] <floatcomplex> maybe in the sense that signed arithmetic right shift is implementation-defined, and gnu c implements it in a defined way
[20:34:00] <floatcomplex> ...probably
[20:34:01] *** Joins: kuoi (~kuoi@109.175.166.58)
[20:34:07] *** Quits: karakedi (~eAC53C340@user/karakedi) (Ping timeout: 265 seconds)
[20:34:11] <fizzie> That would only be relevant if the C code had had a shift operator in it.
[20:34:30] *** Joins: cm007magnum (~Rheanna@61.171.69.141)
[20:35:05] <floatcomplex> (i don't actually know if gcc implements signed arithmetic right shift the same way on all platforms it targets)
[20:35:51] <fizzie> Although `int d = a / 2;` for a negative a *was* implementation-defined too in C89. ;)
[20:38:08] *** Joins: karakedi (~eAC53C340@user/karakedi)
[20:38:12] *** Joins: random-nick (~random-ni@87.116.165.220)
[20:38:28] *** Quits: sheldon (~sheldon@user/sheldon) (Ping timeout: 265 seconds)
[20:39:27] *** Joins: sheldon (~sheldon@user/sheldon)
[20:39:42] *** Quits: kuber (~kuber@97-126-3-32.tukw.qwest.net) (Quit: leaving)
[20:39:45] <baltazar> hi! do I need to do anything extra to get dprintf?
[20:40:02] <floatcomplex> posix 2008
[20:40:25] <pragma-> baltazar: what does `man dprintf` say?
[20:40:33] <baltazar> it says it's in stdio
[20:40:42] <baltazar> but apparently it isn't
[20:40:46] <floatcomplex> baltazar: you need to define one of the listed feature test macros before any of your include statements
[20:40:47] <pragma-> your system-specific manpages will tell you any system-specific feature macros you need to define.
[20:41:06] <fizzie> Don't skip over the "Feature Test Macro Requirements" section, it's not there just as a decoration.
[20:41:08] <Learath2> fizzie: I guess if he meant the gnu c compiler by gcc, the way it optimizes the divide to a shift could maaybe be considered a gcc internals question
[20:41:10] <twkm> not always, but hopefully they do.
[20:41:12] <floatcomplex> baltazar: it's a big hammer but _#define GNU_SOURCE and have done with it
[20:41:26] <twkm> stupid hammer too.
[20:41:56] <baltazar> hmm yes, apparently I need either `_POSIX_C_SOURCE >= 200809L` or `_GNU_SOURCE`
[20:42:14] <mort> _Generic is such a useless and badly thought through feature
[20:42:42] <floatcomplex> baltazar: so "#define _POSIX_C_SOURCE 200809L" and make sure it's before all of the #include statements in that file
[20:42:51] <baltazar> floatcomplex: sure, thanks
[20:43:22] <mort> maybe you want one macro which can call either an int version or a long version of a function; but if you use _Generic with those two cases, your program won't compile on systems where int and long are compatible types
[20:43:25] *** Quits: imm_ (~imm_@user/imm/x-3405860) (Quit: leaving)
[20:43:36] <fizzie> `int` and `long` are never compatible types.
[20:43:46] <fizzie> They may have the same value ranges, but they're never compatible types.
[20:43:48] <nomagno> fizzie: wait what? What implementation didn't follow basic mathematical rules for signed operations for that to be a thing?
[20:43:51] *** Quits: sheldon (~sheldon@user/sheldon) (Ping timeout: 250 seconds)
[20:44:03] <fizzie> nomagno: C89: "If either operand is negative, whether the result of the / operator is the largest integer less than the algebraic quotient or the smallest integer greater than the algebraic quotient is implementation-defined, as is the sign of the result of the % operator."
[20:44:21] <floatcomplex> or in human words, whether it rounds toward zero or negative infinity
[20:44:29] <mort> replace int and long with your favourite types of choice which may be compatible in one compiler but not in another
[20:44:47] <mort> mingw implements a lot of types as typedefs of other types for example
[20:44:54] <johnjay> a lot of the C standard is basically shrugging and saying, dunno!
[20:45:07] <Learath2> Can there even be any implementation where int and long are compatible? :D
[20:45:13] <nomagno> baltazar: go for the first
[20:45:16] <nomagno> mort: well it allows for careless overloading!
[20:45:48] *** Quits: rgrinberg (~textual@201.192.183.100) (Quit: My MacBook has gone to sleep. ZZZzzzâ€¦)
[20:45:49] <floatcomplex> redundant sentence is redundant
[20:46:02] *** Quits: gnoo (gnoo@user/gnoo) (Ping timeout: 240 seconds)
[20:47:10] <fizzie> The standard integer types can't be implemented as typedefs. But sure, if you want to involve size_t or <stdint.h> types in it.
[20:47:35] <mort> with mingw32, ssize_t is a typedef of int I believe
[20:47:48] *** Joins: odoood (~odoood@2601:c8:c003:a550::3)
[20:47:53] <mort> it's so bad
[20:48:09] <fizzie> ISTR there's a few types that are explicitly called out as having to be aliases of standard rather than extended integer types, in which case the "solution" is to just have your _Generic expressions include all the standard integer types and no others.
[20:48:15] <floatcomplex> does mingw32 imply 32 bit or is it just legacy naming
[20:48:31] <mort> 32 bits
[20:48:39] <mort> I'm fairly sure
[20:48:44] <nomagno> Oooh, round towards negative infinity is "up" for negative numbers! Never understood that expression
[20:49:06] <floatcomplex> tenebrous sentence is tenebrous
[20:49:08] <johnjay> floatcomplex: i believe it is legacy naming
[20:49:16] <mort> so how do you make a _Generic macro which the user can pass either int or ssize_t
[20:49:22] <sham1> mingw64 is how you'd do it form modern platforms yes
[20:49:24] <johnjay> i've seen 64 bit tooling which still says mingw32 in the name
[20:49:52] <mort> curious
[20:49:53] *** Joins: varioust (~varioust@72-46-48-28.lnk.ne.static.allophone.net)
[20:50:04] *** Joins: CaryHartline (~CaryHartl@2603-8080-6a0e-8d88-a5f1-5281-6a38-5d1d.res6.spectrum.com)
[20:50:19] <Learath2> I propose we make all standard integers typedefs of the exact-width types
[20:50:47] <mort> I wouldn't mind 
[20:50:47] <fizzie> If ssize_t is one of those types that has to be an alias of a standard integer type, by having cases for char, signed char, short, int, long and long long in the macro; then ssize_t has to match one of them.
[20:51:18] <floatcomplex> i don't disagree with the original assertion that _Generic is poorly thought out
[20:51:22] <mort> ssize_t doesn't have to be an alias afaik?
[20:51:29] <fizzie> Anyway, IIRC the rationale for _Generic is "provide a way for apps to do what <tgmath.h> does", not to be a general vehicle for type-generic programming.
[20:51:41] <floatcomplex> tgmath.h is poorly thought out too
[20:51:43] <sham1> _Generic is very underutilized because of that very thinf
[20:51:54] <sham1> If only it worked for structs
[20:52:11] <mort> _Generic is under-utilised because it's not really solving a need anyone has
[20:52:29] <floatcomplex> keep your unmaintainable overloaded functions out of my pristine language thx
[20:52:51] <twkm> people were crying about having to know the right function names and/or the proliferation of fnames.
[20:52:53] <floatcomplex> i want to know what function i'm calling
[20:53:01] *** Joins: sheldon (~sheldon@user/sheldon)
[20:53:14] *** Joins: ___nick___ (~quassel@cpc68286-cdif17-2-0-cust533.5-1.cable.virginm.net)
[20:53:28] <floatcomplex> i want to be warned by the compiler when it looks like i'm calling the wrong one due to a suspicious implicit conversion, and be forced to fix it
[20:53:57] *** Joins: rgrinberg (~textual@201.192.183.100)
[20:54:17] <twkm> sometimes you need a lint, not training wheels.
[20:55:14] *** Joins: ff9527ff_ (uid527419@uxbridge.irccloud.com)
[20:55:31] <mort> contextually, that looks like an argument in favour of _Generic, but the contents sound like an argument against it 
[20:55:33] <fizzie> Also, _Generic does "work" for structs, it just has the *other* problem of requiring all the branches, even the non-evaluated ones, to be valid code with no constraint violations.
[20:56:12] <floatcomplex> mostly i want to be able to read other people's code and know what function they're calling by looking at the name of the function rather than after figuring out some possibly non-local type information for its arguments
[20:57:20] <Learath2> floatcomplex: hm, I don't see how type information can be non-local in C, it's always in the body right before the call or the signature
[20:57:32] <floatcomplex> Learath2: i mean at the call site
[20:57:53] <fizzie> ,cc struct foo { int x; }; void print_foo(struct foo foo) { printf("%d", foo.x); } struct bar { double d; }; void print_bar(struct bar bar) { printf(" %.2f", bar.d); } #define p(x) _Generic((x), struct foo: print_foo, struct bar: print_bar)(x) \n p((struct foo){ .x = 123 }); p((struct bar){ .d = 1.23 }); // works for structs
[20:57:55] <floatcomplex> if it's passing some variable to the function, and the definition of that variable isn't local
[20:57:56] <candide> fizzie: 123 1.23
[20:58:05] <floatcomplex> declaration
[20:58:06] <floatcomplex> whatever
[20:58:24] <floatcomplex> and by local i don't mean C scope, i mean human scope
[20:58:31] <Learath2> floatcomplex: I mean it's either local or it's file scope, not really too many places to look tho, no?
[20:58:51] <floatcomplex> Learath2: you'd be amazed at the creativity of humans when it comes to fucking this stuff up
[20:59:30] <Learath2> Ah, I guess it can be quite far if it's a struct member and/or the function is long. I see your point
[20:59:55] <Learath2> Seems I got too used to modern crutches like navigating around with ctags
[21:00:01] <floatcomplex> the underlying point is even a little bit of it can massively increase the cognitive burden when trying to debug other people's code
[21:00:19] <floatcomplex> even the POSSIBILITY of it is not free, regardless of whether it's used or not
[21:01:09] <floatcomplex> c is easy to debug in part because you don't have to think about whether that sort of thing is in play
[21:01:30] <floatcomplex> until people get cute with stuff like _Generic
[21:02:29] <Learath2> I honestly love debugging C and absolutely hate C++ and Rust. Those function signatures can be like a meter long with template stuff + overloads
[21:03:16] *** Quits: slidercrank (~slidercra@user/slidercrank) (Quit: Why not ask me about Sevastopol's safety protocols?)
[21:03:55] <apotheon> "modern crutches like [. . .] ctags"
[21:04:01] <apotheon> amusing
[21:04:16] <apotheon> I should probably learn to use ctags some day.
[21:04:53] <pragma-> there's not much to learn
[21:05:03] <apotheon> That's encouraging.
[21:05:37] *** Quits: Guest80 (~Guest80@pd9ed79bf.dip0.t-ipconnect.de) (Quit: Client closed)
[21:06:26] *** Joins: Guest80 (~Guest80@pd9ed79bf.dip0.t-ipconnect.de)
[21:06:57] *** Joins: ckdCreations (~ckdCreati@147.55.133.136)
[21:07:26] *** Quits: blindguard (~blindguar@2a02:908:1864:c200::12) (Quit: Konversation terminated!)
[21:08:15] *** Joins: strajder (~strajder@user/strajder)
[21:09:14] *** Joins: blindguard (~blindguar@2a02:908:1864:c200::12)
[21:11:52] *** Quits: varioust (~varioust@72-46-48-28.lnk.ne.static.allophone.net) (Quit: varioust)
[21:12:12] *** Joins: Inline (~Inline@2a02:908:1252:7a80:c0ad:80c4:dd74:5cc0)
[21:13:11] <pragma-> Yeah, it seems to work with most popular editors out of the box without any fiddling.
[21:13:12] *** Quits: missogra (~missogra@dynamic-077-010-001-191.77.10.pool.telefonica.de) (Ping timeout: 268 seconds)
[21:14:15] *** Joins: quartz (~quartz@user/quartz)
[21:14:33] <Learath2> Some new editors with more newfangled support for C/C++ don't even need ctags anymore
[21:15:03] *** Quits: gr33n7007h (~gr33n7007@user/gr33n7007h) (Ping timeout: 250 seconds)
[21:18:16] *** Joins: iddev5 (~iddev5@2409:4062:2390:f166:3d47:fd3d:5bae:5ef9)
[21:18:23] *** Quits: ___nick___ (~quassel@cpc68286-cdif17-2-0-cust533.5-1.cable.virginm.net) (Quit: https://quassel-irc.org - Chat comfortably. Anywhere.)
[21:19:10] *** Quits: LordJohn (~lordjohn@l37-192-203-250.novotelecom.ru) (Read error: Connection reset by peer)
[21:19:32] *** Joins: Budd (~Budd@2001:470:8d44:1::5)
[21:19:44] *** Joins: ___nick___ (~quassel@cpc68286-cdif17-2-0-cust533.5-1.cable.virginm.net)
[21:19:55] *** Quits: ___nick___ (~quassel@cpc68286-cdif17-2-0-cust533.5-1.cable.virginm.net) (Client Quit)
[21:21:03] *** Quits: quartz (~quartz@user/quartz) (Quit: WeeChat 3.3)
[21:21:11] *** Joins: tech_exorcist (txrcst@user/tech-exorcist/x-0447479)
[21:21:18] *** Joins: ___nick___ (~quassel@cpc68286-cdif17-2-0-cust533.5-1.cable.virginm.net)
[21:21:31] *** Quits: treble (~treble@user/treble) (Quit: WeeChat 3.3)
[21:21:32] *** Quits: cm007magnum (~Rheanna@61.171.69.141) (Remote host closed the connection)
[21:21:55] *** Quits: Alhazred (~Alhazred@s91904425.blix.com) (Quit: leaving)
[21:22:20] *** Joins: ozoned (odoood@gateway/vpn/protonvpn/odoood)
[21:24:13] *** Joins: cm007magnum (~Rheanna@61.171.69.141)
[21:24:23] *** Quits: dugsickongo (~sickdugon@user/sickdugongo) (Read error: Connection reset by peer)
[21:24:55] *** Quits: karakedi (~eAC53C340@user/karakedi) (Ping timeout: 268 seconds)
[21:24:59] *** Quits: odoood (~odoood@2601:c8:c003:a550::3) (Ping timeout: 264 seconds)
[21:25:42] *** Quits: rgrinberg (~textual@201.192.183.100) (Quit: My MacBook has gone to sleep. ZZZzzzâ€¦)
[21:25:59] *** Joins: dugsickongo (~sickdugon@5.157.101.123)
[21:25:59] *** Quits: dugsickongo (~sickdugon@5.157.101.123) (Changing host)
[21:25:59] *** Joins: dugsickongo (~sickdugon@user/sickdugongo)
[21:28:33] *** Joins: rgrinberg (~textual@201.192.183.100)
[21:28:40] <rahl> Looking to find (initially) mp4 files in a directory. Any opinions on if it's worth manually checking file header bytes, or perhaps "outsourcing" to `file` command?
[21:29:07] <twkm> depends.
[21:29:14] *** Quits: the_lanetly_052 (~the_lanet@185.30.88.162) (Ping timeout: 268 seconds)
[21:29:40] *** Joins: Richard_Cavell (uid165693@ilkley.irccloud.com)
[21:29:58] *** Quits: rgrinberg (~textual@201.192.183.100) (Client Quit)
[21:29:59] <twkm> e.g., the cost of having file work on multiple files might exceed the effort of putting magic detection in your code.
[21:30:39] *** Quits: Iarfen (~quassel@181.43.59.114) (Ping timeout: 250 seconds)
[21:30:41] <rahl> kinda my thinking
[21:31:07] *** Joins: Iarfen (~quassel@ec2-3-225-168-229.compute-1.amazonaws.com)
[21:31:12] <Learath2> file is also looking for many different signatures, so I highly doubt it'd be efficient at any amount of files
[21:31:30] *** Joins: rgrinberg (~textual@201.192.183.100)
[21:31:35] <rahl> true
[21:31:38] <Learath2> (that is more efficient than opening the file and checking the magic yourself)
[21:32:07] <rahl> I'm currently trying to find papers on mp4 file type so I can find the magic I'm looking for
[21:32:19] <rahl> Proving a bit trickier than I thought it would
[21:33:01] *** Quits: cart_man (~rynot@host-78-144-121-1.as13285.net) (Quit: Konversation terminated!)
[21:35:42] *** Quits: iddev5 (~iddev5@2409:4062:2390:f166:3d47:fd3d:5bae:5ef9) (Quit: Client closed)
[21:36:16] *** Quits: cmbengue (~Thunderbi@207.191.249.160) (Read error: Connection reset by peer)
[21:37:29] *** Quits: ckdCreations (~ckdCreati@147.55.133.136) (Read error: Connection reset by peer)
[21:37:47] *** Joins: ckdCreations (~ckdCreati@c-24-17-50-149.hsd1.wa.comcast.net)
[21:37:55] <rahl> ty both btw
[21:38:08] *** Quits: BSaboia (~bsaboia@177.37.198.227) (Quit: This computer has gone to sleep)
[21:40:38] *** Quits: ckdCreations (~ckdCreati@c-24-17-50-149.hsd1.wa.comcast.net) (Read error: Connection reset by peer)
[21:41:36] *** Joins: vdamewood (~vdamewood@fedora/vdamewood)
[21:42:20] *** Joins: gr33n7007h (~gr33n7007@user/gr33n7007h)
[21:43:14] *** Joins: kuber (~kuber@97-126-3-32.tukw.qwest.net)
[21:43:26] *** Quits: reductum (~reductum@2603-8000-b400-8764-dea6-32ff-fe16-a622.res6.spectrum.com) (Ping timeout: 268 seconds)
[21:45:55] *** Joins: ckdCreations (~ckdCreati@c-24-17-50-149.hsd1.wa.comcast.net)
[21:48:34] *** Quits: simon323 (~simon323@2409:8a34:46c:5830:bcea:b9ce:1db0:fa57) (Quit: simon323)
[21:49:16] <rahl> Is the magic connected with MIME type or something separate?
[21:49:41] *** Quits: FragByte (~christian@user/fragbyte) (Ping timeout: 245 seconds)
[21:49:55] *** Joins: BSaboia (~bsaboia@177.37.198.227)
[21:50:02] *** Quits: prime (~prime@user/prime) (Ping timeout: 260 seconds)
[21:50:18] <rahl> (thinking separate by the looks of things)
[21:50:56] *** Quits: eldritch (~eldritch@user/eldritch/x-9272577) (Ping timeout: 245 seconds)
[21:51:16] *** Joins: iddev5 (~iddev5@2409:4062:2390:f166:3d47:fd3d:5bae:5ef9)
[21:51:23] *** Quits: ra4king (~ra4king@roiatalla.com) (Ping timeout: 264 seconds)
[21:51:46] *** Joins: FragByte (~christian@user/fragbyte)
[21:51:56] *** Quits: Hax0r (~Hax0r@128.127.222.243) (Remote host closed the connection)
[21:52:00] *** Joins: prime (~prime@user/prime)
[21:52:09] *** Joins: ra4king (~ra4king@roiatalla.com)
[21:54:54] *** Quits: Guest80 (~Guest80@pd9ed79bf.dip0.t-ipconnect.de) (Quit: Client closed)
[21:55:13] *** Joins: eldritch_ (~eldritch@user/eldritch/x-9272577)
[21:55:36] *** Joins: Guest80 (~Guest80@pd9ed79bf.dip0.t-ipconnect.de)
[21:55:38] *** Joins: reductum (~reductum@2603-8000-b400-8764-dea6-32ff-fe16-a622.res6.spectrum.com)
[21:55:59] *** Quits: BSaboia (~bsaboia@177.37.198.227) (Quit: This computer has gone to sleep)
[21:57:05] *** Quits: mimmy (~mimmy@146.70.75.156) (Ping timeout: 250 seconds)
[21:57:11] *** Joins: davros (~davros@host86-185-61-22.range86-185.btcentralplus.com)
[21:57:56] *** Quits: dyeplexer (~dyeplexer@user/dyeplexer) (Remote host closed the connection)
[22:00:29] *** Joins: varioust (~varioust@72-46-48-28.lnk.ne.static.allophone.net)
[22:00:33] *** Quits: sheldon (~sheldon@user/sheldon) (Ping timeout: 250 seconds)
[22:00:53] *** Joins: Y4knotiS (~YaknotiS@cpc1-cmbg18-2-0-cust87.5-4.cable.virginm.net)
[22:01:25] <LangerJan> MIME type? isn't that just a string given as a courtesy by web servers?
[22:01:35] *** Joins: sheldon (~sheldon@user/sheldon)
[22:02:18] <LangerJan> with some file types, you are lucky to find a magic string or byte sequence, often at the beginning and sometimes at the end of the file.
[22:03:41] *** Joins: pehaef (~pehaef@user/pehaef)
[22:03:47] <sham1> We *could* have filesystems where the FS stores the MIME-type, but alas no
[22:03:56] <rahl> LangerJan: yes. I'm a bit new to looking for magic bytes, and in reading about mp4's I kept seeing more reference to MIME :/
[22:04:46] <rahl> I know I will likely be having to look at the beginning bytes, I'm just having trouble finding what I should be looking for :)
[22:05:49] *** Joins: node1 (~node1@user/node1)
[22:06:05] <LangerJan> sham1: what a wonderful world that would be
[22:06:45] *** Joins: imm_ (~imm_@user/imm/x-3405860)
[22:06:48] <LangerJan> rahl: I am not entirely sure what your final goal is. Are you trying to detect mp4 files on your own?
[22:07:42] *** Joins: inomoz (~inomoz@176.59.125.26)
[22:09:46] *** Quits: iddev5 (~iddev5@2409:4062:2390:f166:3d47:fd3d:5bae:5ef9) (Quit: iddev5)
[22:10:06] *** Joins: steve_ (~steve@ool-182c2b80.dyn.optonline.net)
[22:10:30] <LangerJan> rahl: https://raw.githubusercontent.com/OpenAnsible/rust-mp4/master/docs/ISO_IEC_14496-14_2003-11-15.pdf
[22:11:23] *** Quits: cm007magnum (~Rheanna@61.171.69.141) (Remote host closed the connection)
[22:11:56] <System_Error> sham1: guess you can try to store it in xattrs. Though point of doing so is not clear to me.
[22:12:18] <System_Error> its very nominal and may or may not correspond to actual file content
[22:12:23] *** Quits: Everything (~Everythin@37.115.210.35) (Quit: leaving)
[22:12:34] <twkm> and might not exist.
[22:13:09] *** Joins: malina (~malina@user/malina)
[22:13:20] *** Joins: quartz (~quartz@user/quartz)
[22:13:48] <sham1> Well there's always application/octet-stream. Besides, this same argument can be had wrt. Ffle extensions yet they're also used readily
[22:14:14] *** Joins: cm007magnum (~Rheanna@218.78.105.67)
[22:14:15] <rahl> LangerJan: basically yes
[22:15:14] <rahl> LangerJan: thanks for the link. I have this doc. Skimmed it and didn't find what I was looking for. Perhaps I should read it more carefully
[22:15:29] <twkm> perhaps look for libmagic.
[22:15:53] <quartz> Hi. Can someone explain what the | does at line 18 in this code snippet? https://bpa.st/4R2Q
[22:16:21] <twkm> it looks for magic generally, where you might look only for mp4 magic.
[22:16:30] <sham1> Bitwise OR between the first length which is shifted right by 8 bits, and the second length
[22:16:48] <twkm> or?
[22:16:57] <quartz> sham1: Oh yeah, I can't believe I forgot that.
[22:17:05] <twkm> i must have a different line 18.
[22:17:06] *** Quits: rgrinberg (~textual@201.192.183.100) (Quit: My MacBook has gone to sleep. ZZZzzzâ€¦)
[22:18:00] <rahl> twkm: thanks. will have a dig
[22:18:15] *** Quits: supajerm (~supajerm@gateway/vpn/pia/supajerm) (Remote host closed the connection)
[22:18:34] *** Joins: supajerm (~supajerm@gateway/vpn/pia/supajerm)
[22:18:36] <quartz> sham1: How can they use -> here at line 18 when r is not declared as a pointer?
[22:18:39] <twkm> & is bitwise and.  sham1 is describing the expressiong with a |, bitwise or.
[22:18:47] *** Joins: karakedi (~eAC53C340@user/karakedi)
[22:18:58] *** Joins: imm__ (~imm_@user/imm/x-3405860)
[22:19:04] <quartz> twkm: Yeah
[22:19:16] <caze> quartz: struct MdbRec r[1];
[22:19:20] <twkm> line 17 uses it too, so it better be a struct pointer type.
[22:19:29] *** Quits: kdc_ (~kdc@196.211.197.159) (Quit: Leaving)
[22:19:59] <sham1> quartz: r is an array, and to use somewhat controversial language, the array lvalue "decays" into a pointer lvalue expression
[22:20:01] <quartz> caze: but shouldn't it be struct MdbRec *r[1]?
[22:20:03] *** Joins: carlavilla (~carlavill@188.26.219.172)
[22:20:26] <caze> quartz: What does that mean? (in english)
[22:20:39] *** Quits: strajder (~strajder@user/strajder) (Quit: leaving)
[22:20:56] *** Quits: imm_ (~imm_@user/imm/x-3405860) (Ping timeout: 265 seconds)
[22:21:15] <quartz> caze: I guess what I typed makes no sense. it should be struct MdbRec *r;
[22:21:46] <twkm> NO!
[22:22:12] <twkm> then you would need to allocate storage for r to point at.
[22:22:34] <quartz> Yeah, malloc
[22:22:45] <quartz> sham1: What do you mean by "lvalue"?
[22:23:00] <sham1> An lvalue expression is one you can use on the left side, l, of an assignment
[22:23:39] <twkm> the value of an array is not all the values, it is a pointer to the first element.
[22:23:55] <sham1> â€¦when used in a context where a pointer is expected
[22:24:16] *** Joins: mimmy (~mimmy@146.70.75.158)
[22:24:16] <caze> I have no idea why they didn't just do struct MdbRec r;
[22:24:24] <twkm> indeed.
[22:24:42] *** Joins: the (~the@2620:8d:8000:1044:b6ca:1ac:6dab:2ab1)
[22:24:42] <quartz> caze: To make things more of a challange probably
[22:24:44] <caze> I guess they didn't know about the & operator.
[22:24:47] <twkm> so they could use -> instead of . seems silly.
[22:25:05] <quartz> twkm: Why can they use -> instead of . ?
[22:25:18] <twkm> because [repeat:] the value of an array is not all the values, it is a pointer to the first element.
[22:25:38] <caze> quartz: Can you explain in english what is struct MdbRec r[1];?
[22:26:31] <quartz> caze: It is an array of size 1, which contain struct MdbRec
[22:27:58] <caze> quartz: Do you know what is the value of the expression `r` (just by itself) given that declaration?
[22:28:19] <rahl> twkm: only sort of right; it's not quite a pointer to the first element ;p (but for sake of simplicity)
[22:28:21] *** Joins: rbp (~abdullah@103.66.177.186)
[22:28:38] <caze> wtf
[22:29:00] *** Quits: mimmy (~mimmy@146.70.75.158) (Ping timeout: 256 seconds)
[22:29:03] *** Quits: Guest42 (~Guest42@eth-west-pareq2-46-193-4-100.wb.wifirst.net) (Quit: Client closed)
[22:29:06] <quartz> caze: A pointer to the first element in the array r
[22:29:31] *** Joins: topside_ (~topside@ip68-226-238-34.lf.br.cox.net)
[22:29:37] <sham1> Right, and if it gives you the pointer to the first elemenent, can you use -> with it?
[22:29:38] <caze> quartz: Yes. What is the type of the first elemet in the array r?
[22:29:50] <constxd> lmfao
[22:29:50] *** Quits: tejr (~tejr@user/tejr) (Remote host closed the connection)
[22:30:10] *** Joins: tejr (~tejr@user/tejr)
[22:30:12] <quartz> sham1: Yes?
[22:30:18] <sham1> Well there you go
[22:30:23] <quartz> caze: struct MdbRec
[22:30:30] <constxd> this array vs pointer discussion is going to be happening until the end of time
[22:30:47] <caze> constxd: Seems likely.
[22:30:51] <rahl> ^
[22:30:52] <tusko> ,cc printf('Hello world!')
[22:30:55] <candide> tusko: [warning: character constant too long for its type  warning: passing argument 1 of 'printf' makes pointer from integer without a cast [-Wint-conversion] note: expected 'const char * restrict' but argument is of type 'int'] Program received signal SIGSEGV, Segmentation fault in __strchrnul_sse2 () called by __vfprintf_internal () called by buffered_vfprintf () called by printf () called by main () at statement: printf('Hello world!')
[22:31:03] <caze> rahl: What did you mean by that?
[22:31:10] <tusko> that's racist
[22:31:18] <rahl> caze: agreed
[22:31:32] <caze> <rahl> twkm: only sort of right; it's not quite a pointer to the first element ;p (but for sake of simplicity)
[22:31:34] <caze> I meant this
[22:31:37] <rahl> oh
[22:32:37] <constxd> maybe talking about sizeof
[22:33:06] <sham1> Or alignof
[22:33:17] <rahl> well, in an attempt to put it simply. the array identifier is more like the address of the first element itself - whereas a pointer would contain the address (one extra layer of abstraction) - If I am not mistaken
[22:33:29] *** Quits: topside (~topside@ip68-226-238-34.lf.br.cox.net) (Ping timeout: 250 seconds)
[22:33:30] *** Joins: rackj (~rackj@c-73-140-240-136.hsd1.wa.comcast.net)
[22:33:46] *** topside_ is now known as topside
[22:34:00] <quartz> Sorry, but what is the result of strlen(r->name) << 8 ?
[22:34:22] <quartz> It shifts the bits to the left by 8 spaces, so it's the same as multiplying by 2^8?
[22:34:30] <sham1> Yes
[22:35:21] <caze> rahl: There are pointer objects, and pointer values. Pointer objects can hold pointer values. A pointer object is not required to generate a pointer value.
[22:36:01] <nomagno> Why does there seem to be no different between assigning `&myfunc()` and `myfunc()` to a function pointer?
[22:36:08] <caze> rahl: There are int objects, and int values. int objects can hold int values. An int object is not required to generate an int value.
[22:36:09] <nomagno> Without the `()`
[22:36:09] <sham1> Convenience
[22:36:13] <nomagno> my bad
[22:36:47] <nomagno> sham1: Is this in response to my message?
[22:37:27] <sham1> No, obviously it's a response to the other other person that was talking
[22:37:30] <sham1> Soâ€¦ yes
[22:38:05] <caze> rahl: twkm is saying that the value of an array is a pointer value. He was not implying that it is inherently a pointer object.
[22:38:58] <caze> rahl: Just like the expression `2 + 3` is an int value. Nobody would argue that the expression is inherently an int object.
[22:39:05] <fizzie> C11 6.3.2.1p4: "A /function designator/ is an expression that has function type. Except when it is the operand of the -- unary `&` operator, a function designator with type 'function returning /type/' is converted to an expression that has type 'pointer to function returning /type/'." So both `myfunc` and `&myfunc` yield the same thing, a pointer to the function.
[22:39:38] <fizzie> The part that tends to confuse people sometimes is that so do `*myfunc`, `**myfunc`, `***myfunc` and so on.
[22:39:53] <nomagno> Interesting thing is it seems no matter how many times I dereference either one, it just doesn't change
[22:40:01] <nomagno> Probably GCC-specific behaviour
[22:40:16] <fizzie> No, it's an entirely standard thing.
[22:40:23] <fizzie> Because of the above-quoted paragraph.
[22:40:36] <caze> nomagno: fizzie just quoted you the part of the standard that requires every compiler to have that behavior.
[22:41:02] <fizzie> When you dereference a function pointer, you get a function designator, which converts back to a function pointer, which you can dereference again to get a function designator, and so on forever.
[22:41:13] <fizzie> ,cc int (*p)(const char *) = ************puts; p("like so");
[22:41:13] *** Quits: Guest80 (~Guest80@pd9ed79bf.dip0.t-ipconnect.de) (Quit: Client closed)
[22:41:16] <candide> fizzie: like so
[22:41:43] <nomagno> caze: can you really blame me for double checking?
[22:41:55] <nomagno> Oh actually interesting question, if you can use array-like indexes on pointers, and pointer arithmetic on arrays, and arrays decay to pointers, is there any practical difference between an array of a given size and a malloc'ed pointer, other than sizeof()?
[22:41:58] *** Joins: Guest80 (~Guest80@pd9ed79bf.dip0.t-ipconnect.de)
[22:42:05] <rahl> caze: the language was ambiguous though - which is not ideal when talking about pointers :)
[22:42:50] <nomagno> ,cc int (*p)(const char *) = *&*&*&*&*&*&*&*&*&*&*&*puts; p("like so");
[22:42:50] *** imm__ is now known as imm_
[22:42:53] <candide> nomagno: like so
[22:44:07] <fizzie> Well, *that* sort of chain isn't particularly surprising, or specific to function pointers. When the operand of the unary * is the result of the unary &, neither are evaluated.
[22:44:10] *** Joins: mimmy (~mimmy@146.70.75.158)
[22:44:13] <sham1> As to why is it a part of the standard? Again, I'd probably guess convenience
[22:45:01] <sham1> Makes it easy to do things
[22:45:02] <quartz> Can anyone explain to me what the hell line 18 actually does? https://bpa.st/4R2Q   
[22:45:06] *** Joins: cmbengue (~Thunderbi@207.191.249.160)
[22:45:07] *** Quits: Haxxa (~Haxxa@89nnjg0xckz9ggn6r5xm.ip6.superloop.com) (Quit: Haxxa flies away.)
[22:45:26] <caze> rahl: Not really. <twkm> because [repeat:] the value of an array is not all the values, it is a pointer to the first element.
[22:45:41] <caze> He did specify "the value of".
[22:45:53] <twkm> quartz: it writes data to stdout.
[22:46:10] <constxd> you have two 8 bit numbers and you want to store them in a 16 bit box. so you shift one of them to the top half of the 16 bits and put the other one in the bottom half of the 16 bits
[22:46:25] <sham1> quartz: It gets the length of the name-field of the first element of r. Then it shifts it up by 8 bits. Then it reads the length of the the msg-field of the first element of r, and bitwise ORs them together
[22:46:27] *** Joins: nyah (~nyah@94.6.71.219)
[22:46:28] <constxd> don't think about it in terms of multiplication
[22:46:43] <twkm> i usually just use arithmetic.
[22:46:51] <sham1> Well this is arithmeti
[22:47:05] <caze> It's not wrong to think of it in terms of multiplication.
[22:47:13] <floatcomplex> strlen(r->name) * 256 + strlen(r->msg)
[22:47:24] <floatcomplex> works, looks weird
[22:47:33] <sham1> It's very weird arithmetic of the vector field (Z_2)^n where n is the number of bits
[22:47:35] <fizzie> You can think of it in terms of multiplication if you like. You could just as well pack two two-digit decimal numbers into a single 4-digit decimal number with (a * 100) + b. So that if a = 12, b = 34, you'll end up with the result 1234.
[22:47:38] <sham1> But it still works
[22:47:40] *** Joins: Haxxa (~Haxxa@89nnjg0xckz9ggn6r5xm.ip6.superloop.com)
[22:47:44] *** Joins: freakingpenguin (~user@wifi-nat-137-148-13-193.csuohio.edu)
[22:47:58] <constxd> sure, whatever seems intuitive i guess
[22:48:19] <caze> rahl: Indeed, people usually don't specify whether they're talking about values or object types, when things would be a lot clearer if they did. It's to the point where many beginners don't understand the difference.
[22:48:56] <nomagno> It writes data to stdout while there is data to read, basically
[22:48:57] <nomagno> the while is checking if it read exactly one element
[22:51:19] *** Quits: node1 (~node1@user/node1) (Quit: Client closed)
[22:51:37] <quartz> But what is the purpose of | in the code at line 18?
[22:51:45] <quartz> What it he purpose of OR operator here?
[22:51:50] <fizzie> The same as + in `(a * 100) + b`.
[22:52:03] <floatcomplex> quartz: it's a bitwise or
[22:52:07] <floatcomplex> not a logical or
[22:52:25] <rahl> caze: quite. btw, just in case, I made the original comment lightly. And appreciate what you've been describing. I'm just presently leaning toward wanting to know more about the differences between arrays and pointers, rather than keep thinking of them (or perpetuating the thought of them) as interchangeable
[22:52:51] <fizzie> quartz: It takes your shifted 0bxxxxxxxx00000000 value and your unshifted 0b00000000yyyyyyyy value, and merges them into 0bxxxxxxxxyyyyyyyy.
[22:52:53] <nomagno> So, if I use the `&` operator on a variable, is this pointer value the actual address of the variable, or simply one it generated?
[22:53:19] <sham1> What's the difference?
[22:54:09] <floatcomplex> nomagno: the address of a given variable is unique, if it exists. it might not exist until you take the address of it with &
[22:54:18] <floatcomplex> tldr: if you can't tell, does it matter
[22:54:26] <topside> quartz, think of it as just packing two 8-bit values into a single 16-bit variable.... the | is acting as "Adding" the lower 8-bit value to the 16-bit value which has all 0's for the lower 8 bits
[22:54:54] <topside> s/adding/combining
[22:55:01] <floatcomplex> also it's only guaranteed to be unique in the context of comparing it with other addresses of the same type
[22:55:03] <quartz> Ahhhhh I see it
[22:55:06] <quartz> Yeah thanks everyone
[22:55:06] <caze> rahl: The first thing to understand is that C effectively only has one dimensional arrays.
[22:55:11] <quartz> This was super helpful.
[22:55:37] <quartz> How are you guys so good at this? 
[22:55:46] <sham1> Practice
[22:55:50] <quartz> It takes most everyone in my class a long time to get an answer like that.
[22:56:05] <topside> quartz, taking the code literally and just writing it out by hand to see what it's doing :)
[22:56:32] <sham1> Also keep in mind that this is a literal meeting point of C programmers
[22:57:03] <sham1> Of course the density of people who can be described as "being so good at this" would be higher than almost everywhere
[22:57:30] <floatcomplex> sham1: this channel is a local minimum of shittiness at c, not necessarily the global one
[22:57:39] <sham1> Perhaps
[22:57:40] <constxd> especially when fizzie is around
[22:58:09] <sham1> Also I'm glad that someone picked up on that very specific wording :)
[22:59:13] <quartz> BRB
[22:59:28] <nomagno> floatcomplex: That sounds weird, which implementation method is this intended to cater to?
[23:00:19] <sham1> To only have your value in registers if you can help it
[23:00:37] <sham1> If you don't need to have an address for a value, you don't necessarily need to spill it
[23:00:57] *** Quits: quartz (~quartz@user/quartz) (Quit: WeeChat 3.3)
[23:01:13] *** Quits: malina (~malina@user/malina) (Ping timeout: 250 seconds)
[23:01:23] <floatcomplex> nomagno: it's not really meant to cater to an implementation. it can make some optimizations possible. i don't remember the details but if the compiler knows that the set of possible pointed-to objects by a given pointer is finite, it can make some simplifying assumptions
[23:01:27] *** Quits: cm007magnum (~Rheanna@218.78.105.67) (Remote host closed the connection)
[23:01:58] <floatcomplex> assuming you were talking about the pointer-uniqueness thing
[23:02:03] <rahl> caze: I know :) Part of the use of arrays as I see is that you get nice "stepping" (can't think of the proper term)
[23:02:48] <rahl> tbf computers really do effectively only have 1d arrays ;)
[23:03:10] <sham1> What do you mean, cache is multi-level
[23:03:11] <floatcomplex> rowhammer cannot be fully understood with a 1-dimensional model of memory
[23:03:16] <sham1> That's clearly multidimensional /s
[23:04:45] <earnestly> ECC as standard soonâ„¢
[23:04:45] *** Quits: alch (~alch@151.34.83.95) (Read error: Connection reset by peer)
[23:04:56] *** Joins: defjam (~eb0t@90.209.246.132)
[23:07:16] *** Quits: freakingpenguin (~user@wifi-nat-137-148-13-193.csuohio.edu) (Remote host closed the connection)
[23:09:32] *** Joins: alch (~alch@151.68.83.239)
[23:10:04] *** Joins: quartz (~quartz@user/quartz)
[23:10:12] *** Quits: bindu (~bindu@user/bindu) (Ping timeout: 276 seconds)
[23:10:47] *** Joins: Hexmind (~Hexmind@modemcable049.25-131-66.mc.videotron.ca)
[23:11:30] *** Joins: treble (~treble@75.76.29.142)
[23:11:41] *** Quits: treble (~treble@75.76.29.142) (Changing host)
[23:11:41] *** Joins: treble (~treble@user/treble)
[23:12:38] *** Quits: Y4knotiS (~YaknotiS@cpc1-cmbg18-2-0-cust87.5-4.cable.virginm.net) (Ping timeout: 256 seconds)
[23:13:04] *** Joins: BSaboia (~bsaboia@177.37.198.227)
[23:13:45] *** Joins: bindu (~bindu@user/bindu)
[23:13:50] *** Joins: Guest42 (~Guest42@eth-west-pareq2-46-193-4-100.wb.wifirst.net)
[23:14:08] *** Joins: mikey__ (~mikey__@user/mikey/x-6463285)
[23:14:19] *** Joins: malina (~malina@user/malina)
[23:14:45] *** Quits: Inline (~Inline@2a02:908:1252:7a80:c0ad:80c4:dd74:5cc0) (Quit: Leaving)
[23:17:57] *** Quits: riksteri (riksteri@gateway/vpn/airvpn/riksteri) (Quit: riksteri)
[23:22:53] *** Joins: Thedarkb (~Thedarkb@cpc105342-pool17-2-0-cust428.15-1.cable.virginm.net)
[23:25:22] *** Quits: cebor (~cebor@user/cebor) (Quit: bye!)
[23:25:42] *** Joins: cebor (~cebor@user/cebor)
[23:25:55] *** Quits: Zenton (~user@user/zenton) (Ping timeout: 250 seconds)
[23:26:02] *** Joins: Zenton (~user@user/zenton)
[23:30:38] *** Quits: varioust (~varioust@72-46-48-28.lnk.ne.static.allophone.net) (Quit: varioust)
[23:30:51] *** Joins: De4nWhit3 (~De4nWhit3@165-73-119-36.ip.afrihost.capetown)
[23:30:55] <De4nWhit3> Hello.
[23:33:46] *** Joins: varioust (~varioust@72-46-48-28.lnk.ne.static.allophone.net)
[23:34:46] *** Quits: Guest80 (~Guest80@pd9ed79bf.dip0.t-ipconnect.de) (Ping timeout: 256 seconds)
[23:34:56] <sham1> Hello.
[23:35:13] *** Quits: CaryHartline (~CaryHartl@2603-8080-6a0e-8d88-a5f1-5281-6a38-5d1d.res6.spectrum.com) (Quit: My iMac has gone to sleep. ZZZzzzâ€¦)
[23:36:09] *** Quits: smlavine (~smlavine@sourcehut/user/smlavine) (Quit: nyaa~)
[23:36:47] <shiroyasha> Salute.
[23:37:16] <sham1> o7
[23:37:37] *** Joins: smlavine (~smlavine@sourcehut/user/smlavine)
[23:38:19] *** Quits: the (~the@2620:8d:8000:1044:b6ca:1ac:6dab:2ab1) (Quit: Leaving)
[23:38:31] *** Joins: Alhazred (~Alhazred@s91904425.blix.com)
[23:38:31] *** Joins: the (~the@2620:8d:8000:1044:b6ca:1ac:6dab:2ab1)
[23:39:51] *** Joins: Inline (~Inline@2a02:908:1252:7a80:c0ad:80c4:dd74:5cc0)
[23:40:18] *** Joins: slidercrank (~slidercra@user/slidercrank)
[23:41:25] *** Quits: MrMobius (~MrMobius@pool-108-31-243-125.washdc.fios.verizon.net) (Read error: Connection reset by peer)
[23:44:20] *** Joins: MrMobius (~MrMobius@pool-108-31-243-125.washdc.fios.verizon.net)
[23:44:54] <LangerJan> heyo
[23:45:27] <nomagno> Greetings!
[23:46:03] <Inline> sup
[23:46:25] <twkm> ghod i hope 760 more don't respod.
[23:46:33] <twkm> err, respond.
[23:46:35] <nomagno> (Does no one actually have a question? disappointing music)
[23:49:43] *** Quits: the (~the@2620:8d:8000:1044:b6ca:1ac:6dab:2ab1) (Quit: Leaving)
[23:49:55] *** Joins: the (~the@2620:8d:8000:1044:b6ca:1ac:6dab:2ab1)
[23:50:04] <apotheon> Is there anything you could write in C that you couldn't write the same way in C++?
[23:50:04] <kurahaupo> horribleprogram: as your asm shows, mandating that "integer division must round towards zero" is a friggin horrible language design choice. I want (a+b)/b == a/b+1 to be guaranteed (provided a+b doesn't wrap) which is most conveniently provided by "round towards negative infinity" aka "floor" or by 99,99"round towards Infinity with the opposite sign as b
[23:50:59] * pragma- stares.
[23:51:41] *** Quits: kaizen (sid501599@helmsley.irccloud.com) (Ping timeout: 268 seconds)
[23:52:17] *** Quits: mimmy (~mimmy@146.70.75.158) (Ping timeout: 265 seconds)
[23:52:18] *** Quits: zx2c4 (sid204921@gentoo/developer/zx2c4) (Ping timeout: 268 seconds)
[23:52:33] *** Joins: kaizen (sid501599@helmsley.irccloud.com)
[23:52:46] *** Joins: cm007magnum (~Rheanna@218.78.99.237)
[23:52:52] *** Joins: sedeki (~textual@user/sedeki)
[23:53:07] <apotheon> I liked my question more.
[23:53:45] <constxd> apotheon: 
[23:53:53] <apotheon> Thanks.
[23:53:56] <sham1> apotheon: Let there be `struct foo {int bar;}` Now, in C we can do `struct foo foo = {.bar = 1};` while in C++ we can't
[23:54:08] <constxd> ,cc int class = 2; printf("%d\n", class);
[23:54:09] *** Quits: englishm (sid6629@tinside.irccloud.com) (Ping timeout: 268 seconds)
[23:54:11] <candide> constxd: 2
[23:54:49] <apotheon> ,c struct foo foo = {.bar = 1};
[23:54:50] <candide> apotheon: error: variable 'foo' has initializer but incomplete type
[23:54:56] <apotheon> hmm
[23:54:59] *** Joins: zx2c4 (sid204921@gentoo/developer/zx2c4)
[23:55:03] <sham1> You need the struct definition first
[23:55:13] <apotheon> of course
[23:55:19] <constxd> ,cc struct { int bar; } foo = { .bar = 1 };
[23:55:21] <apotheon> That's my pedantic and half-joking point.
[23:55:22] <candide> constxd: no output: foo = {bar = 1}
[23:55:33] <constxd> also this
[23:55:59] <constxd> ,cc int *p = malloc(sizeof (int[8])); print(p);
[23:56:02] <candide> constxd:  p = (int *) 0x41de10
[23:56:15] *** Quits: Inline (~Inline@2a02:908:1252:7a80:c0ad:80c4:dd74:5cc0) (Quit: Leaving)
[23:56:19] *** Quits: varioust (~varioust@72-46-48-28.lnk.ne.static.allophone.net) (Quit: varioust)
[23:56:22] <sham1> Yeah
[23:56:33] <edk> you can also use a variable where 8 is
[23:56:49] <constxd> does c++ have FAMs
[23:56:50] *** Joins: englishm (sid6629@tinside.irccloud.com)
[23:56:54] <constxd> can't remember
[23:56:56] *** Quits: pucara (~i@181.95.204.204) (Quit: Lost terminal)
[23:56:59] <sham1> No
[23:57:07] *** Quits: the (~the@2620:8d:8000:1044:b6ca:1ac:6dab:2ab1) (Ping timeout: 250 seconds)
[23:57:10] <nomagno> apotheon: There is nothing you can write in C that you can't write in a similar way in C++. However, C and C++ are different languages, so chances are copy pasting C to a C++ codebase will give errors
[23:57:12] <apotheon> I'm probably going to have to relearn C++ soon.
[23:57:15] *** Quits: nvmd (~nvmd@user/nvmd) (Quit: Later, nerds.)
[23:57:47] <nomagno> C++ has so many features it's just impossible not to have a procedural/object oriented language you can't approximate with it
[23:57:48] <apotheon> I haven't really touched it since probably before the subprime mortgage crisis.
[23:58:05] *** Joins: skapata (~Skapata@2804:14c:87b0:a6f9:f53c:4bb1:7324:d639)
[23:58:05] *** Quits: skapata (~Skapata@2804:14c:87b0:a6f9:f53c:4bb1:7324:d639) (Changing host)
[23:58:05] *** Joins: skapata (~Skapata@user/skapata)
[23:58:08] <sham1> nomagno: Greenspun's 10th rule
[23:58:41] <kurahaupo> quartz: 2^8 == 10 rather than 256 because ^ is bitwise XOR, not exponentiation 
[23:58:48] <apotheon> any nontrivial compiled imperative language contains a bug-ridden, informally specified, partial implementation of C in it
[23:58:56] *** Joins: the (~the@2620:8d:8000:1044:b6ca:1ac:6dab:2ab1)
[23:58:58] <apotheon> rule 10.3
[23:59:20] *** Joins: varioust (~varioust@72-46-48-28.lnk.ne.static.allophone.net)
[23:59:43] <sham1> Don't forget "ad-hoc"
