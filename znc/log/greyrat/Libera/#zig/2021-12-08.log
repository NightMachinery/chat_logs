[00:01:51] *** Joins: Techcable (~Techcable@168.235.93.147)
[00:05:59] *** Quits: gxt (~gxt@gateway/tor-sasl/gxt) (Remote host closed the connection)
[00:06:23] *** Joins: gxt (~gxt@gateway/tor-sasl/gxt)
[00:10:59] *** Quits: gxt (~gxt@gateway/tor-sasl/gxt) (Remote host closed the connection)
[00:11:21] *** Joins: gxt (~gxt@gateway/tor-sasl/gxt)
[00:20:57] *** Joins: frmdstryr (~jrm@172.58.206.179)
[00:23:43] *** Quits: nki (~nki@adsl-89-217-141-227.adslplus.ch) (Ping timeout: 256 seconds)
[00:29:59] *** Joins: peterhil (~peterhil@dsl-hkibng32-54fb56-2.dhcp.inet.fi)
[00:38:03] <andrewrk> ifreund, it means the LLVM IR is valid but LLVM is panicking because it did not know how to lower one of the instructions
[00:38:22] <andrewrk> motiejus, excellent 
[00:39:13] <ifreund> andrewrk: cool, that's pretty much what I assumed in the end. I think we might want to get rid of the cache type option for prefetch in that case
[00:39:30] <ifreund> https://github.com/ziglang/zig/pull/10295
[00:39:41] <andrewrk> hmm maybe. or we could make it a compile error for architectures that don't support it
[00:39:50] <andrewrk> it probably exists because it will get correctly lowered on a different arch
[00:40:06] <andrewrk> oh not a compile error- it can just be ignored
[00:40:28] <ifreund> yeah, but llvm should be doing the ignoring no?
[00:40:48] <andrewrk> yes I think it would be reasonable to call this a bug in llvm
[00:40:53] <ifreund> at least the docs for the llvm.prefetch intrinsic says that it will do nothing if not supported
[00:41:04] <ifreund> so it should do nothing instead of failing to lower
[00:41:16] <andrewrk> this would be far from the first time that the zig llvm backend would have to know what llvm supports and carefully not lower to LLVM IR that will result in a problem such as this
[00:41:59] <andrewrk> llvm is in the middle of migrating their bugzilla db to github: https://docs.google.com/document/d/11_3rgYuv-QO0g1oO6T0MmkFhacqJg6o24eWFFVNSX_o/edit
[00:42:12] <andrewrk> nobody has been able to file bugs since nov 25th
[00:42:20] <ifreund> :/
[00:42:34] <freshcoffee> that's a feature :)
[00:44:22] <freshcoffee> https://lists.llvm.org/pipermail/llvm-dev/2014-September/077021.html
[00:44:25] <freshcoffee> https://bugs.llvm.org/show_bug.cgi?id=21037
[00:45:31] <andrewrk> yep that looks like it
[00:46:00] <ifreund> reported in 2014...
[00:46:21] <freshcoffee> and maybe this one from 2011 https://bugs.llvm.org/show_bug.cgi?id=10994
[00:49:00] <ifreund> does anyone even have a use case for manual instruction prefetching? CPUs are already quite good at this and I'm not really aware of instruction access patterns where manual prefetching would be beneficial
[00:49:41] <ifreund> it's not possible with gcc/clang's __builtin_prefetch() 
[00:50:14] <ifreund> I feel like adding this option to Zig without a use-case just because llvm exposes it in their API doesn't make much sense
[00:58:51] *** Quits: xackus (~xackus@9-164.w.knc.pl) (Ping timeout: 256 seconds)
[00:59:28] <andrewrk> ifreund, one misconception I had about llvm until recently is that it's an independent project with a vision and a sense for where it wants to go (like zig). in reality, it's more of a DMZ for multiple companies to push on the use cases that they have, while sharing code with each other
[01:00:21] <andrewrk> to answer your question - one piece of information that I think would give us the answer is whether llvm is able to lower this instruction for *any* target, not just x86
[01:00:45] <andrewrk> or another way to answer the question would be: is there any non-llvm backend in stage2 where we would be able to lower the cache prefetch to machine code?
[01:01:22] <andrewrk> if not, then I agree we should eliminate it from the builtin
[01:03:14] *** Quits: terminalpusher (~terminalp@2a01:586:a4a5:1:e003:e11d:22df:b459) (Remote host closed the connection)
[01:07:15] <ifreund> andrewrk: I did some grepping through the llvm source and found some test cases for powerpc. I was able to successfully cross compile a binary with @prefetch() for both the data and instruction caches with -target powerpc64-linux-gnu -mcpu a2 
[01:07:35] <ifreund> so it seems llvm does support it for some targets
[01:09:02] <ifreund> works for aarch64 as well
[01:09:05] <andrewrk> in this case my suggestion would be to keep the proposal as-is, and don't emit the llvm instruction for x86 (and other targets that it fails for)
[01:10:53] <ifreund> alright, I can do that 
[01:25:12] *** Quits: tane (~tane@user/tane) (Quit: Leaving)
[01:41:30] *** Quits: peterhil (~peterhil@dsl-hkibng32-54fb56-2.dhcp.inet.fi) (Read error: Connection reset by peer)
[01:41:44] *** Joins: peterhil (~peterhil@dsl-hkibng32-54fb56-2.dhcp.inet.fi)
[01:41:54] *** Joins: binarycat (~binarycat@35.24.192.117)
[01:51:01] *** Quits: freshcoffee (~fresh@user/freshcoffee) (Quit: WeeChat 3.0.1)
[01:51:17] *** Joins: notzmv (~zmv@user/notzmv)
[01:56:35] *** Quits: peterhil (~peterhil@dsl-hkibng32-54fb56-2.dhcp.inet.fi) (Remote host closed the connection)
[01:57:15] *** Joins: peterhil (~peterhil@dsl-hkibng32-54fb56-2.dhcp.inet.fi)
[01:59:01] *** Quits: peterhil (~peterhil@dsl-hkibng32-54fb56-2.dhcp.inet.fi) (Max SendQ exceeded)
[01:59:26] *** Joins: peterhil (~peterhil@dsl-hkibng32-54fb56-2.dhcp.inet.fi)
[02:11:09] *** Quits: frmdstryr (~jrm@172.58.206.179) (Ping timeout: 268 seconds)
[02:30:32] *** Quits: tgschultz (UserNick@047-034-058-084.res.spectrum.com) (Quit: Going offline, see ya! (www.adiirc.com))
[02:30:59] *** Joins: tgschultz (UserNick@047-034-058-084.res.spectrum.com)
[02:40:54] *** Joins: freshcoffee (~fresh@user/freshcoffee)
[02:41:23] *** Quits: ur5us (~ur5us@2406:e002:6c7b:2301:1b18:b746:eaa9:fad6) (Ping timeout: 252 seconds)
[02:48:02] <freshcoffee> andrewrk: did a711fcbbfa41d3f1dedc7ce4be9106e21b6c7ffb fix on_master_success VERSION ? looks to me like it did
[02:48:32] <andrewrk> freshcoffee, yes, thank you!
[03:11:25] *** Quits: paulgrmn_ (~paulgrmn@user/paulgrmn) (Ping timeout: 240 seconds)
[03:15:57] *** Joins: frmdstryr (~jrm@172.58.206.179)
[03:20:02] *** Joins: paulgrmn_ (~paulgrmn@user/paulgrmn)
[03:22:21] *** Quits: jjido (~Denis@90.213.58.125) (Quit: My MacBook Air has gone to sleep. ZZZzzz…)
[03:25:01] *** Quits: paulgrmn_ (~paulgrmn@user/paulgrmn) (Ping timeout: 240 seconds)
[03:31:19] *** Quits: binarycat (~binarycat@35.24.192.117) (Ping timeout: 268 seconds)
[03:38:59] *** Quits: pretty_dumm_guy (trottel@gateway/vpn/protonvpn/prettydummguy/x-88029655) (Quit: WeeChat 3.3)
[03:46:21] *** Joins: rgrinberg (~textual@2806:101e:7:9999:853a:1f51:2226:1f4)
[03:48:24] *** Joins: ibokuri (0fab725886@2604:bf00:561:2000::23f)
[04:02:19] *** Joins: mikemar10 (~mikemar10@216-177-191-54.block0.gvtc.com)
[04:03:02] *** Joins: livoreno (~livoreno@user/notzmv)
[04:03:24] *** Joins: ur5us (~ur5us@2406:e002:6c7b:2301:f812:b76c:617f:99d7)
[04:32:39] *** Quits: tgschultz (UserNick@047-034-058-084.res.spectrum.com) (Quit: Going offline, see ya! (www.adiirc.com))
[04:33:18] *** Joins: tgschultz (UserNick@047-034-058-084.res.spectrum.com)
[04:37:31] *** Quits: mikemar10 (~mikemar10@216-177-191-54.block0.gvtc.com) (Quit: My MacBook has gone to sleep. ZZZzzz…)
[04:40:14] *** Quits: rgrinberg (~textual@2806:101e:7:9999:853a:1f51:2226:1f4) (Quit: My MacBook has gone to sleep. ZZZzzz…)
[04:40:47] *** Joins: mikemar10 (~mikemar10@216-177-191-54.block0.gvtc.com)
[05:10:17] *** Joins: [deleted] (~livoreno@user/notzmv)
[05:13:49] *** Quits: livoreno (~livoreno@user/notzmv) (Ping timeout: 240 seconds)
[05:14:17] *** Quits: frmdstryr (~jrm@172.58.206.179) (Ping timeout: 252 seconds)
[05:14:40] *** Joins: notapenguin (~ryu@2804:14d:5680:8a2c:75cf:7f59:516a:b801)
[05:15:21] *** Quits: mikemar10 (~mikemar10@216-177-191-54.block0.gvtc.com) (Quit: My MacBook has gone to sleep. ZZZzzz…)
[05:20:35] *** Quits: jcmoyer (~jcmoyer@user/jcmoyer) (Ping timeout: 256 seconds)
[05:25:01] *** Joins: jcmoyer (~jcmoyer@user/jcmoyer)
[05:29:05] *** Joins: rgrinberg (~textual@2806:101e:7:9999:853a:1f51:2226:1f4)
[05:33:37] *** Quits: notapenguin (~ryu@2804:14d:5680:8a2c:75cf:7f59:516a:b801) (Quit: WeeChat 3.3)
[05:48:53] *** Quits: rgrinberg (~textual@2806:101e:7:9999:853a:1f51:2226:1f4) (Quit: My MacBook has gone to sleep. ZZZzzz…)
[06:09:38] *** Quits: [deleted] (~livoreno@user/notzmv) (Ping timeout: 265 seconds)
[06:13:39] *** Joins: livoreno (~livoreno@user/notzmv)
[06:19:39] *** Quits: livoreno (~livoreno@user/notzmv) (Read error: Connection reset by peer)
[06:20:34] *** Joins: rgrinberg (~textual@2806:101e:7:9999:853a:1f51:2226:1f4)
[06:24:37] *** Joins: livoreno (~livoreno@user/notzmv)
[06:29:29] *** Quits: dbohdan (~dbohdan@user/dbohdan) (Read error: Connection reset by peer)
[06:30:15] *** Joins: dbohdan (~dbohdan@user/dbohdan)
[06:31:01] *** Quits: neurocyte0132889 (~neurocyte@user/neurocyte) (Ping timeout: 240 seconds)
[06:58:49] *** Quits: arkurious (~arkurious@user/arkurious) (Quit: Leaving)
[07:26:37] *** Quits: livoreno (~livoreno@user/notzmv) (Ping timeout: 240 seconds)
[07:28:43] *** Joins: livoreno (~livoreno@user/notzmv)
[07:36:01] *** Quits: supakeen (~user@python/site-packages/supakeen) (Quit: WeeChat 3.3)
[07:36:31] *** Joins: supakeen (~user@python/site-packages/supakeen)
[07:44:52] *** Joins: Guest4 (~Guest4@c-98-245-163-161.hsd1.co.comcast.net)
[07:47:25] *** Quits: Guest4 (~Guest4@c-98-245-163-161.hsd1.co.comcast.net) (Remote host closed the connection)
[07:47:43] *** Joins: Guest71 (~Guest71@c-98-245-163-161.hsd1.co.comcast.net)
[07:49:44] *** Quits: Guest71 (~Guest71@c-98-245-163-161.hsd1.co.comcast.net) (Client Quit)
[07:51:35] *** Quits: ur5us (~ur5us@2406:e002:6c7b:2301:f812:b76c:617f:99d7) (Ping timeout: 252 seconds)
[08:16:34] *** Quits: tgschultz (UserNick@047-034-058-084.res.spectrum.com) (Quit: Going offline, see ya! (www.adiirc.com))
[08:17:05] *** Joins: tgschultz (UserNick@047-034-058-084.res.spectrum.com)
[08:29:24] *** Quits: livoreno (~livoreno@user/notzmv) (Quit: Quit)
[08:29:41] *** Joins: livoreno (~livoreno@user/notzmv)
[08:29:59] *** Quits: livoreno (~livoreno@user/notzmv) (Read error: Connection reset by peer)
[08:30:45] *** Joins: livoreno (~livoreno@user/notzmv)
[08:36:09] *** Quits: af (~af@awalgarg.me) (Ping timeout: 256 seconds)
[08:48:52] *** Joins: af (~af@awalgarg.me)
[08:59:42] *** Joins: ajr (~ajr@cpe-172-91-111-232.socal.res.rr.com)
[09:17:20] *** Quits: tgschultz (UserNick@047-034-058-084.res.spectrum.com) (Quit: Going offline, see ya! (www.adiirc.com))
[09:17:41] *** Joins: tgschultz (UserNick@047-034-058-084.res.spectrum.com)
[09:21:00] *** Joins: damxsa (~damx@2001:16a2:cc64:7200:bdc3:4708:1067:d70f)
[09:35:16] *** Quits: damxsa (~damx@2001:16a2:cc64:7200:bdc3:4708:1067:d70f) (Remote host closed the connection)
[09:35:29] *** Joins: damxsa (~damx@2001:16a2:cc64:7200:e49d:a9e2:19fd:26)
[09:49:33] *** Quits: ajr (~ajr@cpe-172-91-111-232.socal.res.rr.com) (Quit: nyaa~)
[10:00:37] *** Quits: notzmv (~zmv@user/notzmv) (Ping timeout: 240 seconds)
[10:05:04] *** Quits: rgrinberg (~textual@2806:101e:7:9999:853a:1f51:2226:1f4) (Quit: My MacBook has gone to sleep. ZZZzzz…)
[10:05:59] *** Quits: damxsa (~damx@2001:16a2:cc64:7200:e49d:a9e2:19fd:26) (Ping timeout: 265 seconds)
[10:24:49] *** Joins: Vexu (~Thunderbi@188.117.20.105)
[10:35:21] *** Quits: haze (~haze@cpe-68-174-143-88.nyc.res.rr.com) (Ping timeout: 245 seconds)
[10:35:30] *** Joins: h4ze (~haze@cpe-68-174-143-88.nyc.res.rr.com)
[10:35:54] *** h4ze is now known as haze
[10:49:27] *** Joins: damxsa (~damx@2001:16a2:cc64:7200:e49d:a9e2:19fd:26)
[11:19:27] *** Quits: tgschultz (UserNick@047-034-058-084.res.spectrum.com) (Quit: Going offline, see ya! (www.adiirc.com))
[11:19:55] *** Joins: tgschultz (UserNick@047-034-058-084.res.spectrum.com)
[11:25:53] <motiejus> folks, looks like there is a regression since 1414 w.r.t. cgo darwin binaries: https://github.com/ziglang/zig/issues/10297 ; should I spend some time bisecting zig to find where it failed?
[11:27:41] <motiejus> while we're at it: would you be willing to accept/maintain a CI build that builds a super-simple cgo binary (like in 10297)?
[11:29:48] *** Quits: reductum (~reductum@2603-8000-b400-8764-dea6-32ff-fe16-a622.res6.spectrum.com) (Quit: WeeChat 2.8)
[11:48:26] *** Joins: chgr (~ek@nat-91-137-30-14.net.encoline.de)
[11:50:23] *** Quits: damxsa (~damx@2001:16a2:cc64:7200:e49d:a9e2:19fd:26) (Ping timeout: 265 seconds)
[12:11:15] *** Joins: notzmv (~zmv@user/notzmv)
[12:14:33] *** Joins: Guest71 (~Guest71@p200300d5071b7e00699fe900cf6f8e7f.dip0.t-ipconnect.de)
[12:20:11] *** Quits: tgschultz (UserNick@047-034-058-084.res.spectrum.com) (Quit: Going offline, see ya! (www.adiirc.com))
[12:20:41] *** Joins: tgschultz (UserNick@047-034-058-084.res.spectrum.com)
[12:26:14] *** Quits: b_jonas (~x@catv-176-63-4-16.catv.broadband.hu) (Quit: leaving)
[12:30:09] *** Quits: superdeluxe[m] (~superdelu@2001:470:69fc:105::1:11b) (Quit: You have been kicked for being idle)
[12:35:24] *** Quits: peterhil (~peterhil@dsl-hkibng32-54fb56-2.dhcp.inet.fi) (Remote host closed the connection)
[12:36:54] *** Quits: chgr (~ek@nat-91-137-30-14.net.encoline.de) (Quit: WeeChat 3.3)
[12:37:37] *** Joins: chgr (~ek@nat-91-137-30-14.net.encoline.de)
[13:02:58] *** Quits: Guest71 (~Guest71@p200300d5071b7e00699fe900cf6f8e7f.dip0.t-ipconnect.de) (Quit: Client closed)
[13:20:55] *** Quits: tgschultz (UserNick@047-034-058-084.res.spectrum.com) (Quit: Going offline, see ya! (www.adiirc.com))
[13:21:17] *** Joins: tgschultz (UserNick@047-034-058-084.res.spectrum.com)
[13:30:16] *** Joins: dyeplexer (~dyeplexer@user/dyeplexer)
[13:44:28] <andrewrk> mmm that might be problematic if it introduces a go dependency
[13:45:24] <andrewrk> let me think about how we can get test coverage for this
[14:04:20] <motiejus> so #10297 is darwin-x86_64; there is a separate regression on darwin-aarch64, which was caused by an earlier commit: https://github.com/ziglang/zig/issues/10299
[14:06:30] <motiejus> I bisected the x86_64 issue, and simple revert seems to fix it (didn't run other tests though); but the cause-of-aarch64 doesn't revert cleanly
[14:06:44] <andrewrk> thanks for taking the time to file issues
[14:07:03] <andrewrk> I'm headed to bed but I share your goal of getting test coverage for these
[14:07:31] <motiejus> should I submit a PR reverting the x86_64 breakage, so CI can do it's thing?
[14:08:01] <motiejus> (aarch64 will be much more involved, so will defer to Jakub there)
[14:08:04] <andrewrk> jakub is already looking into it, I think that would be unnecessary
[14:08:12] <motiejus> ah, great!
[14:09:29] <motiejus> good night, Andrew, thanks for your prompt responses
[14:10:37] *** Quits: Vexu (~Thunderbi@188.117.20.105) (Ping timeout: 240 seconds)
[14:12:12] *** Joins: b_jonas (~x@catv-176-63-4-47.catv.broadband.hu)
[14:15:03] *** Joins: nki (~nki@adsl-89-217-141-227.adslplus.ch)
[14:21:32] *** Quits: tgschultz (UserNick@047-034-058-084.res.spectrum.com) (Quit: Going offline, see ya! (www.adiirc.com))
[14:22:15] *** Joins: tgschultz (UserNick@047-034-058-084.res.spectrum.com)
[14:44:37] *** Joins: jjido (~Denis@90.213.58.125)
[14:45:33] *** Joins: peterhil (~peterhil@dsl-hkibng32-54fb56-2.dhcp.inet.fi)
[14:48:31] <daurnimator> wouldn't it be the same as how "wine is a dependency"?
[15:00:46] *** Joins: notapenguin (~ryu@179.222.254.137)
[15:01:55] *** Joins: Vexu (~Thunderbi@188.117.20.105)
[15:05:01] *** Quits: notapenguin (~ryu@179.222.254.137) (Ping timeout: 240 seconds)
[15:06:19] *** Joins: notapenguin (~ryu@2804:14d:5680:8a2c:75cf:7f59:516a:b801)
[15:11:26] *** Quits: jjido (~Denis@90.213.58.125) (Quit: My MacBook Air has gone to sleep. ZZZzzz…)
[15:18:04] *** Quits: notapenguin (~ryu@2804:14d:5680:8a2c:75cf:7f59:516a:b801) (Quit: WeeChat 3.3)
[15:19:19] *** Joins: notapenguin (~ryu@2804:14d:5680:8a2c:75cf:7f59:516a:b801)
[15:22:31] *** Quits: tgschultz (UserNick@047-034-058-084.res.spectrum.com) (Quit: Going offline, see ya! (www.adiirc.com))
[15:23:03] *** Joins: tgschultz (UserNick@047-034-058-084.res.spectrum.com)
[15:32:26] *** Quits: kron (~weechat@user/qaph) (Ping timeout: 245 seconds)
[15:32:59] *** Joins: kron (~weechat@user/qaph)
[15:36:02] *** Quits: supakeen (~user@python/site-packages/supakeen) (Quit: WeeChat 3.3)
[15:36:32] *** Joins: supakeen (~user@python/site-packages/supakeen)
[15:39:34] *** Quits: isolier (~isolier@174.31.3.60) (Quit: Ping timeout (120 seconds))
[15:39:53] *** Joins: isolier (~isolier@174.31.3.60)
[15:46:25] *** Joins: jjido (~Denis@90.213.58.125)
[15:52:51] *** Joins: breavyn_ (~breavyn@user/breavyn)
[15:53:01] *** Quits: breavyn (~breavyn@user/breavyn) (Ping timeout: 240 seconds)
[16:29:47] *** Joins: paulgrmn_ (~paulgrmn@user/paulgrmn)
[16:56:53] *** Joins: frmdstryr (~jrm@172.58.206.179)
[16:58:16] *** Quits: chgr (~ek@nat-91-137-30-14.net.encoline.de) (Ping timeout: 265 seconds)
[17:20:38] *** Joins: chgr (~ek@nat-91-137-16-17.net.encoline.de)
[17:23:45] *** Joins: pretty_dumm_guy (trottel@gateway/vpn/protonvpn/prettydummguy/x-88029655)
[17:24:09] *** Quits: pretty_dumm_guy (trottel@gateway/vpn/protonvpn/prettydummguy/x-88029655) (Client Quit)
[17:24:32] *** Joins: pkap (~pkap@185.209.196.137)
[17:28:57] *** Quits: jjido (~Denis@90.213.58.125) (Quit: My MacBook Air has gone to sleep. ZZZzzz…)
[17:30:11] *** Joins: jjido (~Denis@90.213.58.125)
[17:30:52] *** Quits: jjido (~Denis@90.213.58.125) (Client Quit)
[17:34:03] *** Quits: powerofzero (c2b6947721@2604:bf00:561:2000::225) (Remote host closed the connection)
[17:34:03] *** Quits: lizog (75b54f24ba@2604:bf00:561:2000::14d) (Remote host closed the connection)
[17:34:03] *** Quits: novakane (ca74a093b3@user/novakane) (Remote host closed the connection)
[17:34:03] *** Quits: patrick (224fa09e8b@fsf/member/patrick) (Remote host closed the connection)
[17:34:03] *** Quits: ibokuri (0fab725886@2604:bf00:561:2000::23f) (Remote host closed the connection)
[17:34:04] *** Quits: utzig (d5d7f726e3@2604:bf00:561:2000::71) (Remote host closed the connection)
[17:36:14] *** Quits: thickrocks (e46ff6ac16@2604:bf00:561:2000::13d) (Remote host closed the connection)
[17:36:14] *** Quits: philipwhite (062636b2b0@2604:bf00:561:2000::227) (Remote host closed the connection)
[17:36:14] *** Quits: rycwo (dbdb4a3e7b@sourcehut/user/rycwo) (Remote host closed the connection)
[17:36:14] *** Quits: leon-p (1b22ab9492@2604:bf00:561:2000::18c) (Remote host closed the connection)
[17:36:14] *** Quits: ManDeJan (3da94070ba@user/mandejan) (Remote host closed the connection)
[17:36:14] *** Quits: fleg (dfbb34cb39@user/fleg) (Remote host closed the connection)
[17:36:14] *** Quits: slind (e19c209508@2604:bf00:561:2000::17a) (Remote host closed the connection)
[17:36:14] *** Quits: sm2n (ae95cb1267@user/sm2n) (Remote host closed the connection)
[17:36:14] *** Quits: weslem (32012e016f@2604:bf00:561:2000::12f) (Remote host closed the connection)
[17:36:14] *** Quits: andrea (3f138254b4@2604:bf00:561:2000::38) (Remote host closed the connection)
[17:36:14] *** Quits: coder_kalyan (2c72974719@user/coderkalyan) (Remote host closed the connection)
[17:36:14] *** Quits: gjnoonan (cb73e0a324@2604:bf00:561:2000::e) (Remote host closed the connection)
[17:36:14] *** Quits: psnszsn (7fe6b73f65@user/psnsn) (Remote host closed the connection)
[17:36:33] *** Joins: slind (e19c209508@2604:bf00:561:2000::17a)
[17:36:35] *** Joins: andrea (3f138254b4@2604:bf00:561:2000::38)
[17:36:35] *** Joins: patrick (224fa09e8b@fsf/member/patrick)
[17:36:35] *** Joins: philipwhite (062636b2b0@2604:bf00:561:2000::227)
[17:36:35] *** Joins: lizog (75b54f24ba@2604:bf00:561:2000::14d)
[17:36:35] *** Joins: utzig (d5d7f726e3@2604:bf00:561:2000::71)
[17:36:36] *** Joins: ibokuri (0fab725886@2604:bf00:561:2000::23f)
[17:36:36] *** Joins: novakane (ca74a093b3@user/novakane)
[17:36:43] *** Joins: weslem (32012e016f@2604:bf00:561:2000::12f)
[17:36:43] *** Joins: rycwo (dbdb4a3e7b@sourcehut/user/rycwo)
[17:36:43] *** Joins: ManDeJan (3da94070ba@user/mandejan)
[17:36:49] *** Joins: gjnoonan (cb73e0a324@2604:bf00:561:2000::e)
[17:36:49] *** Joins: coder_kalyan (2c72974719@user/coderkalyan)
[17:36:49] *** Joins: sm2n (ae95cb1267@user/sm2n)
[17:36:49] *** Joins: psnszsn (7fe6b73f65@user/psnsn)
[17:36:49] *** Joins: fleg (dfbb34cb39@user/fleg)
[17:36:50] *** Joins: leon-p (1b22ab9492@2604:bf00:561:2000::18c)
[17:36:50] *** Joins: thickrocks (e46ff6ac16@2604:bf00:561:2000::13d)
[17:36:50] *** Joins: powerofzero (c2b6947721@2604:bf00:561:2000::225)
[17:37:19] *** Quits: Vexu (~Thunderbi@188.117.20.105) (Quit: Vexu)
[17:50:06] *** Quits: bindu (~bindu@user/bindu) (Ping timeout: 276 seconds)
[17:50:43] *** Joins: bindu (~bindu@user/bindu)
[18:01:04] <motiejus> Wine's abi does not change, ever. Golang cuts a major version every 6 months
[18:02:43] <motiejus> Technically minor, but it's always a major change anyway
[18:07:23] *** Quits: Techcable (~Techcable@168.235.93.147) (Ping timeout: 265 seconds)
[18:11:50] *** Quits: pkap (~pkap@185.209.196.137) (Ping timeout: 256 seconds)
[18:35:53] *** Quits: tgschultz (UserNick@047-034-058-084.res.spectrum.com) (Quit: Going offline, see ya! (www.adiirc.com))
[18:36:29] *** Joins: tgschultz (UserNick@047-034-058-084.res.spectrum.com)
[18:51:13] *** Quits: yelnah (~felix@2001:44b8:30f9:18c:6f0:21ff:fe3c:d4d7) (Ping timeout: 252 seconds)
[18:51:42] *** Joins: yelnah (~felix@2001:44b8:3082:ad:6f0:21ff:fe3c:d4d7)
[19:26:34] *** Joins: xackus (~xackus@9-164.w.knc.pl)
[19:41:30] *** Quits: chgr (~ek@nat-91-137-16-17.net.encoline.de) (Quit: WeeChat 3.3)
[19:57:17] <peterhil> Hi! I am trying to do advent of code exercises with Zig, and I am struggling to understand and use arrays, ArrayLists and memory allocations right apparently. Can someone tell why I get OutOfMemory error when I run zig test src/day03/day03.zig?
[19:57:20] <peterhil> https://github.com/peterhil/aoc/blob/main/src/day03/day03.zig
[19:58:10] <peterhil> I am learning Zig, and have previously learned a bit of Rust about 1,5 years ago.
[19:58:36] <peterhil> Is the problem because I should use test_allocator on tests?
[20:00:19] <peterhil> Any comments on code best practises and Zig idioms are also welcome. I did read Zig learn and tried to code some months ago and did the very first Ziglings exercises, so maybe I do not remember all the basics that I should remember...
[20:00:44] *** Joins: Swahili (~Swahili@a95-94-208-187.cpe.netcabo.pt)
[20:01:49] <peterhil> I would have used just []u64 arrays for ones and bits, but I could get over "can not evaluate constant expression" with bitWidth.
[20:02:09] <peterhil> ...could NOT get over...
[20:03:11] <peterhil> Or actually: var ones: [bitWidth]u64 = [bitWidth]u64{0} ** bitWidth;
[20:03:44] <peterhil> I have a slight flu, so maybe my brain is not in the best shape either... :-)
[20:07:31] *** Joins: Techcable (~Techcable@168.235.93.147)
[20:09:50] <peterhil> How would you initialize the ones and bits with bitWidth times zeros?
[20:10:07] <peterhil> Or would you even use ArrayList?
[20:10:51] <dutchie> without having a chance to look at the full code, you probably want `[1]u64{0} ** bitWidth` or `[_]u64{0} ** bitWidth`
[20:11:48] <peterhil> Will that produce and arrays of zeros, and not array of arrays?
[20:12:08] <peterhil> an array...
[20:12:51] <peterhil> [_]u64{0} ** bitWidth does not work, because the array size can not be inferred.
[20:15:09] <dutchie> that definitely should work, there must be something else wrong
[20:15:31] <dutchie> ah bitWidth needs to be comptime-known
[20:16:54] *** Joins: arkurious (~arkurious@user/arkurious)
[20:17:23] <peterhil> Yeah, but it can not be, as the input width might change. And actually for the part 2 I'd like to write test with the sample input.
[20:17:45] <peterhil> Why bitWidth has to be compile time known?
[20:18:04] <peterhil> Can I make it a runtime variable?
[20:18:47] <dutchie> arrays always have comptime-known length, slices are for when you only know them at runtime
[20:19:28] <peterhil> Ah, ok. I read that somewhere, but did not fully internalise apparently.
[20:20:05] <dutchie> you could use arraylist as you currently do in getArraySlice, but i'd just use the allocator interface directly
[20:20:56] <dutchie> `const sl = try allocator.alloc(T, n); for (sl) |*x| x.* = value;`
[20:20:57] <peterhil> Yeah, putting it away in a function does not really feel right. OTOH, I'd like to avoid the repetitive code.
[20:22:30] <peterhil> Oh, you can build a slice using the allocator interface like that?
[20:22:45] <dutchie> well, how do you think ArrayList does it? ;)
[20:22:49] <peterhil> Just allocate the memory, and use pointers?
[20:22:54] <peterhil> :-)
[20:27:12] <dutchie> as for why it's running out of memory... idk. you aren't freeing anything at the moment but i would have thought with page_allocator you'd just get oomkilled by the os rather than zig internals
[20:28:06] <dutchie> minor style tip: `if (2 * count >= total) 1 else 0` -> @boolToInt
[20:28:22] <peterhil> Thanks!
[20:33:40] <ugla> peterhil: Seems to me like the test output is wrong. It's correctly reporting the test failure, but also showing the OutOfMemory stuff for some reason. If I update the expected value to match the result of part1(), it just passes cleanly.
[20:35:30] <peterhil> ugla: Oh, I forgot to update the expected value... Thanks!
[20:36:11] <dutchie> ah yeah, i've had that happen to me before
[20:36:33] <dutchie> error return traces show a bunch of errors that were handled as well as the one that actually failed so you can get red herrings like that sometimes
[20:38:44] *** Joins: rgrinberg (~textual@2806:101e:7:9999:853a:1f51:2226:1f4)
[20:41:43] *** Quits: tgschultz (UserNick@047-034-058-084.res.spectrum.com) (Quit: Going offline, see ya! (www.adiirc.com))
[20:42:09] *** Joins: tgschultz (UserNick@047-034-058-084.res.spectrum.com)
[20:43:51] *** Quits: dyeplexer (~dyeplexer@user/dyeplexer) (Remote host closed the connection)
[20:50:09] <peterhil> dutchie: ugla: Thanks, updated the code with these suggestions.
[20:51:14] <peterhil> I think I'll adjust my mentality to really write lower level code with Zig, at least initially to get used to memory handling.
[20:52:46] <peterhil> And I kind of miss generics. I was about to write initWith to initialise both ones and bits with zeros, but gave up because of the type system.
[20:58:21] <ugla> peterhil: Do you mean that there's no trait or similar that covers both u2 and u64?
[21:00:32] <peterhil> ugla: Yes
[21:01:21] <ugla> peterhil: You can "cheat" and do `x: anytype`, which gives you basically static duck typing 
[21:01:22] <peterhil> Or in Haskell you can use type variables or whatever those were called.
[21:01:54] <peterhil> ugla: I'd like to ensure the output type to be same as input or based on it, thought.
[21:01:56] <peterhil> though...
[21:02:17] *** Quits: rgrinberg (~textual@2806:101e:7:9999:853a:1f51:2226:1f4) (Quit: My MacBook has gone to sleep. ZZZzzz…)
[21:05:11] <ugla> Oh, well that should work. Either fn foo(comptime T: type, x: T) T, or if that doesn't work for some reason, I think fn foo(x: anytype) @TypeOf(x) should work. 
[21:05:21] <ugla> You can do a lot with types as comptime values
[21:05:54] <peterhil> ugla: Oh, T needed to comptime value. I forgot...
[21:06:04] <peterhil> to be..
[21:25:13] *** Quits: frmdstryr (~jrm@172.58.206.179) (Ping timeout: 252 seconds)
[21:42:24] *** Quits: tgschultz (UserNick@047-034-058-084.res.spectrum.com) (Quit: Going offline, see ya! (www.adiirc.com))
[21:42:55] *** Joins: tgschultz (UserNick@047-034-058-084.res.spectrum.com)
[21:51:30] *** Joins: rgrinberg (~textual@2806:101e:7:9999:853a:1f51:2226:1f4)
[21:57:51] *** Quits: nrr__ (sid20938@lymington.irccloud.com) (Ping timeout: 245 seconds)
[21:58:16] *** Quits: jacoscaz (sid512194@tinside.irccloud.com) (Ping timeout: 245 seconds)
[21:58:32] *** Joins: jacoscaz (sid512194@id-512194.tinside.irccloud.com)
[21:58:36] *** Joins: jjido (~Denis@90.213.58.125)
[21:59:37] *** Joins: nrr__ (sid20938@id-20938.lymington.irccloud.com)
[22:01:33] *** Joins: frmdstryr (~jrm@172.58.206.179)
[22:04:53] *** Joins: Arw (~Arwalk@lfbn-dij-1-167-216.w109-215.abo.wanadoo.fr)
[22:05:55] *** Quits: Arw- (~Arwalk@lfbn-dij-1-959-87.w90-125.abo.wanadoo.fr) (Ping timeout: 252 seconds)
[22:09:51] *** Joins: tane (~tane@dslb-002-201-234-166.002.201.pools.vodafone-ip.de)
[22:09:51] *** Quits: tane (~tane@dslb-002-201-234-166.002.201.pools.vodafone-ip.de) (Changing host)
[22:09:51] *** Joins: tane (~tane@user/tane)
[22:14:00] *** Quits: bindu (~bindu@user/bindu) (Ping timeout: 276 seconds)
[22:14:10] *** Joins: bindu_ (~bindu@user/bindu)
[22:14:51] *** Quits: pusewic|away_ (sid2036@id-2036.lymington.irccloud.com) (Ping timeout: 264 seconds)
[22:15:09] *** Joins: pusewic|away_ (sid2036@id-2036.lymington.irccloud.com)
[22:16:02] *** bindu_ is now known as bindu
[22:30:25] *** Quits: jjido (~Denis@90.213.58.125) (Quit: My MacBook Air has gone to sleep. ZZZzzz…)
[22:33:14] *** Joins: phaleth (~phaleth@user/phaleth)
[22:33:25] *** Quits: marler8997 (~marler899@24-116-126-185.cpe.sparklight.net) (Ping timeout: 252 seconds)
[22:35:56] *** Quits: peterhil (~peterhil@dsl-hkibng32-54fb56-2.dhcp.inet.fi) (Read error: Connection reset by peer)
[22:39:02] *** Joins: peterhil (~peterhil@dsl-hkibng32-54fb56-2.dhcp.inet.fi)
[22:39:51] *** Quits: peterhil (~peterhil@dsl-hkibng32-54fb56-2.dhcp.inet.fi) (Remote host closed the connection)
[22:41:01] *** Joins: peterhil (~peterhil@dsl-hkibng32-54fb56-2.dhcp.inet.fi)
[22:42:59] *** Quits: peterhil (~peterhil@dsl-hkibng32-54fb56-2.dhcp.inet.fi) (Max SendQ exceeded)
[22:43:40] *** Joins: peterhil (~peterhil@dsl-hkibng32-54fb56-2.dhcp.inet.fi)
[22:50:20] *** Quits: bindu (~bindu@user/bindu) (Remote host closed the connection)
[22:51:18] *** Joins: bindu (~bindu@user/bindu)
[22:52:48] *** Joins: jjido (~Denis@90.213.58.125)
[23:06:04] *** Quits: frmdstryr (~jrm@172.58.206.179) (Ping timeout: 268 seconds)
[23:07:40] *** Joins: marler8997 (~marler899@24-116-126-185.cpe.sparklight.net)
[23:15:35] *** Quits: haze (~haze@cpe-68-174-143-88.nyc.res.rr.com) (Ping timeout: 252 seconds)
[23:19:34] *** Joins: haze (~haze@2603-7000-a300-1741-4cd9-af3a-b8a1-08f7.res6.spectrum.com)
[23:36:37] *** Joins: feinfinger (~username@user/yeti)
[23:38:38] *** Quits: yeti (~username@user/yeti) (Killed (NickServ (GHOST command used by feinfinger)))
[23:38:53] *** feinfinger is now known as yeti
[23:39:10] *** Joins: Piraty_ (~irc@user/piraty)
[23:40:01] *** Joins: rektide (~rektide@eldergods.com)
[23:40:30] *** Joins: s-ol_ (~s-ol@s-ol.nu)
[23:40:42] *** Joins: Ankhers_ (~Ankhers@ec2-54-196-233-138.compute-1.amazonaws.com)
[23:44:30] *** Quits: Ankhers (~Ankhers@ec2-54-196-233-138.compute-1.amazonaws.com) (Quit: ZNC 1.8.2 - https://znc.in)
[23:44:30] *** Quits: Piraty (~irc@user/piraty) (Remote host closed the connection)
[23:44:31] *** Quits: rektide_ (~rektide@eldergods.com) (Ping timeout: 260 seconds)
[23:44:31] *** Quits: s-ol (~s-ol@s-ol.nu) (Ping timeout: 260 seconds)
[23:44:31] *** Quits: mla (~mla@162.253.176.229) (Ping timeout: 260 seconds)
[23:44:31] *** Ankhers_ is now known as Ankhers
[23:59:12] *** Quits: phaleth (~phaleth@user/phaleth) (Quit: phaleth)
