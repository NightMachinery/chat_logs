[00:00:30] *** Joins: smeeagle (~smeeagle@2a00:23c8:9611:e600:2446:13de:20ec:764f)
[00:00:44] <mickey8> whats an elegant way of sleeping for 1.1 seconds? time.Second*1.1 complains about types mismatch
[00:02:07] <b0nn> use a smaller unit
[00:02:27] <b0nn> time.Nanosecond*110000 I think
[00:02:49] <b0nn> or time.Millisecond*1100
[00:04:07] <seebs> durations are integers
[00:04:08] <mickey8> yeah that works, i saw a division on the docs, but 1100 milliseconds isn't as "clear" as 1.1 seconds
[00:04:11] *** Quits: davidkrauser (~davidkrau@user/davidkrauser) (Quit: Leaving)
[00:04:20] *** Quits: dr0n (~nabromov@94.11.23.235) (Quit: WeeChat 3.3)
[00:04:27] <mickey8> just wondered if i might be missing something nice around the corner there
[00:08:00] *** Joins: dr0n (~nabromov@94.11.23.235)
[00:08:21] <b0nn> 1.1 seconds is a weird time to sleep, so you'll be commenting on it anyways
[00:08:57] <b0nn> eg // waiting 11ms (1.1 Sec) because Jira ticket #8976345
[00:09:04] <b0nn> 1100*
[00:09:49] *** Joins: danmurf (uid480399@user/danmurf)
[00:11:29] <b0nn> The other option (altho I can't think of a nice way to do it) is to document via variable names. eg OnePointOneSec := time.Millisecond*1100
[00:15:41] <j416> (or 1100*time.Millisecond which maybe reads better)
[00:16:37] <j416> mickey8: you can also do 1*time.Second+100*time.Millisecond if you think that's clearer. 1100*time.Millisecond looks clear enough to me.
[00:16:39] *** Joins: andlabs (~andlabs@2a00:79e1:abc:1a12:1c46:a12e:3d70:7b88)
[00:17:29] *** Quits: zer0bitz (~zer0bitz@dsl-hkibng31-54fabc-15.dhcp.inet.fi) (Read error: Connection reset by peer)
[00:20:57] *** Joins: ItsNotGoodName05 (~ItsNotGoo@c-73-83-144-140.hsd1.wa.comcast.net)
[00:21:11] <adip> how big is []slice field in a struct? is it just a pointer to a slice struct/object?
[00:22:34] *** Quits: lemmi (~lemmi@2001:bc8:1830:13::1) (Quit: WeeChat 3.3)
[00:22:36] <b0nn> It's not a pointer to a slice (unless you make it one *[]Foo)
[00:22:46] *** Joins: lemmi (~lemmi@user/lemmi)
[00:22:56] <A_Dragon> its a struct of int, int, uintptr
[00:23:04] *** Quits: ItsNotGoodName0 (~ItsNotGoo@c-73-83-144-140.hsd1.wa.comcast.net) (Ping timeout: 264 seconds)
[00:23:05] *** ItsNotGoodName05 is now known as ItsNotGoodName0
[00:23:10] <A_Dragon> (see reflect.SliceHeader)
[00:24:07] <b0nn> adip: https://itnext.io/structure-size-optimization-in-golang-alignment-padding-more-effective-memory-layout-linters-fffdcba27c61
[00:24:23] *** Quits: jpw (~jpw@user/jpw) (Remote host closed the connection)
[00:24:44] <b0nn> There used to be a linter that checked the order of fields in a struct to ensure memory was used optimally too (but I've never used iot in anger)
[00:25:40] <A_Dragon> misalign
[00:26:21] *** Joins: burningserenity (~burningse@2603:9001:f01:ad99::100f)
[00:26:41] *** Joins: lxsameer (~lxsameer@user/lxsameer)
[00:28:33] <adip> thanks
[00:29:55] <adip> b0nn: interesting, I'd assume that modern language could optimize for that.
[00:30:56] <b0nn> If the compiler changed the order of the fields, that would screw with the ability of the runtime to create an instance of the struct using positional parameters, instead of named
[00:31:38] <b0nn> eg struct{One int; Two float32}{1, 32,0}
[00:31:49] <b0nn> gah .0
[00:32:35] *** Joins: g2anj (~v@39.112.227.198)
[00:33:20] <adip> well, smart compiler could also reorganize order of positional parameters ;)
[00:33:42] <adip> shower thoughts
[00:34:27] <adip> can I serialize struct with interface{} field and send it over the network?
[00:35:53] <b0nn> how would you reorganise the positional fields in this struct{X int, Two float32, Y int}{1, 2.0, 3}
[00:36:30] <b0nn> sending data over the network is normally done with rpc, grpc, or a json struct
[00:40:06] <adip> b0nn: "how would you reorganise" I'm not sure. I give up if it's a compiler question. I also never bother to align structs manually.
[00:42:04] <adip> My serialization works fine with json encoders and decoders. I've tried to send some data inside a struct with interface{} field. I had some issues, and I'm wondering if it's even possible
[00:42:42] <b0nn> I mean, - what is the encoder going to encode it as?
[00:42:52] *** Quits: alwyn (~alwyn@user/alwyn) (Ping timeout: 264 seconds)
[00:43:43] <b0nn> If you have funky fields you need to tell the tools what to do with them
[00:43:54] <b0nn> Meaning a custom marshal
[00:45:33] *** Quits: sord937 (~sord937@gateway/tor-sasl/sord937) (Quit: sord937)
[00:47:04] *** Quits: fikran (~fikran@user/fikran) (Ping timeout: 264 seconds)
[00:47:10] <adip> for example: I have struct A with a field F1 interface{}. I'm trying to assign struct B to F1 inside struct A. Is struct Can normal marshal handle this ?
[00:47:57] *** Quits: rendar (~rendar@user/rendar) (Quit: Leaving)
[00:48:01] *** Quits: tane (~tane@user/tane) (Quit: Leaving)
[00:48:04] <adip> (I'm not sure if I understood your previous answer
[00:48:54] *** Joins: fikran (~fikran@user/fikran)
[01:02:40] *** Quits: shka (~herr@83.175.151.96.piasta.pl) (Ping timeout: 264 seconds)
[01:10:13] *** Quits: lxsameer (~lxsameer@user/lxsameer) (*.net *.split)
[01:10:13] *** Quits: burningserenity (~burningse@2603:9001:f01:ad99::100f) (*.net *.split)
[01:10:14] *** Quits: dr0n (~nabromov@94.11.23.235) (*.net *.split)
[01:10:14] *** Quits: hsiktas[m] (~hsiktasma@2001:470:69fc:105::30d4) (*.net *.split)
[01:10:14] *** Quits: Seirdy (~Seirdy@sourcehut/user/seirdy) (*.net *.split)
[01:10:14] *** Quits: tyson2 (~user@cpe00fc8d34ff03-cm00fc8d34ff00.sdns.net.rogers.com) (*.net *.split)
[01:10:14] *** Quits: jla (~jordi@64.225.79.195) (*.net *.split)
[01:10:14] *** Quits: holgersson (~quassel@user/holgersson) (*.net *.split)
[01:10:14] *** Quits: morgabra (sid500580@user/morgabra) (*.net *.split)
[01:10:14] *** Quits: be3uykpy (~be3uykpy@2a00:a040:19a:b060:f1ac:429b:e0b:8fee) (*.net *.split)
[01:10:14] *** Quits: NCS_One (~NCS_One@bl11-90-133.dsl.telepac.pt) (*.net *.split)
[01:10:14] *** Quits: krux02 (~krux02@p200300e8170c11004db6e8013ca32c23.dip0.t-ipconnect.de) (*.net *.split)
[01:10:14] *** Quits: dalek-caan (~Thunderbi@109.252.124.86) (*.net *.split)
[01:10:14] *** Quits: t0xicCode (~t0xicCode@user/t0xiccode) (*.net *.split)
[01:10:14] *** Quits: w1ke (~w1ke@user/w1ke) (*.net *.split)
[01:10:14] *** Quits: noord (~noord@user/noord) (*.net *.split)
[01:10:14] *** Quits: pinpox (~pinpox@v2202101107577140883.nicesrv.de) (*.net *.split)
[01:10:14] *** Quits: dsrt^ (~dsrt@68.101.58.90) (*.net *.split)
[01:10:14] *** Quits: rewt (~default@user/rewt) (*.net *.split)
[01:10:14] *** Quits: saml (~saml@cpe-74-73-80-162.nyc.res.rr.com) (*.net *.split)
[01:10:14] *** Quits: kn100 (~kn100@wireguard/tunneler/kn100) (*.net *.split)
[01:10:14] *** Quits: haniaF (~haniaF@83.24.192.250.ipv4.supernova.orange.pl) (*.net *.split)
[01:10:14] *** Quits: mosen (~mosen@159-196-125-15.9fc47d.syd.static.aussiebb.net) (*.net *.split)
[01:10:14] *** Quits: zwr (~zwr@2804:d45:b966:fb00:3ac9:5265:a79e:4a2a) (*.net *.split)
[01:10:14] *** Quits: stmuk (~steve@15.43.187.81.in-addr.arpa) (*.net *.split)
[01:10:14] *** Quits: mic4ael (~mic4ael@kolodzie-pc.cern.ch) (*.net *.split)
[01:10:14] *** Quits: darkapex (~darkapex@user/darkapex) (*.net *.split)
[01:10:14] *** Quits: jkovac1 (~jkovac1@user/jkovac1) (*.net *.split)
[01:10:14] *** Quits: g2anj (~v@39.112.227.198) (*.net *.split)
[01:10:15] *** Quits: ItsNotGoodName0 (~ItsNotGoo@c-73-83-144-140.hsd1.wa.comcast.net) (*.net *.split)
[01:10:15] *** Quits: jaca122 (~Thunderbi@89-65-136-254.dynamic.chello.pl) (*.net *.split)
[01:10:15] *** Quits: lofiguy (~lofiguy@87-207-104-205.dynamic.chello.pl) (*.net *.split)
[01:10:15] *** Quits: ajfriesen (~ajfriesen@cable-78-35-98-50.nc.de) (*.net *.split)
[01:10:15] *** Quits: danderson (~dave@tailscale/danderson) (*.net *.split)
[01:10:15] *** Quits: justache (~justache@user/justache) (*.net *.split)
[01:10:15] *** Quits: fputs (~fputs@67.59.83.166) (*.net *.split)
[01:10:15] *** Quits: mrig (~mrig@user/mrig) (*.net *.split)
[01:10:15] *** Quits: Wouter0100 (~Wouter010@entry.nbg.netvos.nl) (*.net *.split)
[01:10:15] *** Quits: pztrn (~pztrn@user/pztrn) (*.net *.split)
[01:10:15] *** Quits: ztx (~ztx@user/ztx) (*.net *.split)
[01:10:15] *** Quits: adip (~adip@deq245.neoplus.adsl.tpnet.pl) (*.net *.split)
[01:10:15] *** Quits: chripell (~chripell@147.80.76.34.bc.googleusercontent.com) (*.net *.split)
[01:10:15] *** Quits: ropes (~ropes@133.77.127.34.bc.googleusercontent.com) (*.net *.split)
[01:10:15] *** Quits: monchi (~joints@143.198.92.132) (*.net *.split)
[01:10:15] *** Quits: xMopx (~xMopx-lib@192.95.23.134) (*.net *.split)
[01:10:15] *** Quits: gsora (~gsora@140.238.174.213) (*.net *.split)
[01:10:15] *** Quits: kcrk (~kcrk@user/kcrk) (*.net *.split)
[01:10:15] *** Quits: Pokey (~pokey@spikeyCactus/hoosky) (*.net *.split)
[01:10:15] *** Quits: siXy (~jfindley@centos/ops/sixy) (*.net *.split)
[01:10:15] *** Quits: loosh (~jason@vultr.bastion.pnj1.us.zj.is) (*.net *.split)
[01:10:15] *** Quits: PlaydohPlato (~playdohpl@23-88-157-194.fttp.usinternet.com) (*.net *.split)
[01:10:15] *** Quits: soxhlet (~soxhlet@81.171.29.137) (*.net *.split)
[01:10:16] *** Quits: jer0me (~jerome@176-149-34-153.abo.bbox.fr) (*.net *.split)
[01:10:16] *** Quits: jjcm (~j@li263-105.members.linode.com) (*.net *.split)
[01:10:16] *** Quits: frebib (~frebibcha@nerdhouse.io) (*.net *.split)
[01:10:16] *** Quits: wolfdale (~wolfdale@ec2-3-1-90-26.ap-southeast-1.compute.amazonaws.com) (*.net *.split)
[01:10:16] *** Quits: victori (~victori@cpe-76-174-179-126.socal.res.rr.com) (*.net *.split)
[01:10:16] *** Quits: Jigsy (~Jigsy@user/jigsy) (*.net *.split)
[01:10:16] *** Quits: DM430784214 (~DM4307@c-73-15-244-129.hsd1.ca.comcast.net) (*.net *.split)
[01:10:16] *** Quits: mikoto-chan (~mikoto-ch@esm-84-240-99-143.netplaza.fi) (*.net *.split)
[01:10:16] *** Quits: Icedream (~icedream@144.76.223.175) (*.net *.split)
[01:10:16] *** Quits: bch_x (~bch@S01069050ca2cbf63.ok.shawcable.net) (*.net *.split)
[01:10:16] *** Quits: pulsepoint433[m] (~pulsepoin@2001:470:69fc:105::1:1f25) (*.net *.split)
[01:10:16] *** Quits: explodes (~explodes@user/explodes) (*.net *.split)
[01:10:16] *** Quits: kindablue (znc@irc.tpurist.com) (*.net *.split)
[01:10:16] *** Quits: cfjk (~cfjk@user/cfjk) (*.net *.split)
[01:10:16] *** Quits: mjorgensen (mjorgensen@sourcehut/users/mjorgensen) (*.net *.split)
[01:10:16] *** Quits: Guest7196 (~blinux@pool-108-48-11-122.washdc.fios.verizon.net) (*.net *.split)
[01:10:16] *** Quits: twaapo (glxblt@91-152-242-177.elisa-laajakaista.fi) (*.net *.split)
[01:10:16] *** Quits: mva (znc@gentoo/developer/mva) (*.net *.split)
[01:10:16] *** Quits: cultpony (~cultpony@user/cultpony) (*.net *.split)
[01:10:16] *** Quits: mgubyt (u@mgub.yt) (*.net *.split)
[01:10:16] *** Quits: wmo (~quassel@2604:a880:2:d0::1df0:b001) (*.net *.split)
[01:10:16] *** Quits: jackneill (~jackneill@20014C4E1813AE00725516C168831FC1.dsl.pool.telekom.hu) (*.net *.split)
[01:10:16] *** Quits: monke (~monke@user/monke) (*.net *.split)
[01:10:17] *** Quits: art_vandelay (~art_vande@142.126.234.156) (*.net *.split)
[01:10:17] *** Quits: lithammer (~lithammer@2a02:2770::21a:4aff:fe88:c18d) (*.net *.split)
[01:10:17] *** Quits: nachoes (~nachoes@user/nachoes) (*.net *.split)
[01:10:17] *** Quits: svedrin (~quassel@tiamat.funzt-halt.net) (*.net *.split)
[01:10:17] *** Quits: Praise (~Fat@user/praise) (*.net *.split)
[01:10:17] *** Quits: Vigdis (~danj@ns4.chown.me) (*.net *.split)
[01:10:17] *** Quits: avery (sid501608@id-501608.uxbridge.irccloud.com) (*.net *.split)
[01:10:17] *** Quits: soren (sid124229@id-124229.uxbridge.irccloud.com) (*.net *.split)
[01:10:17] *** Quits: theckman (sid295081@user/theckman) (*.net *.split)
[01:10:17] *** Quits: Shrike (sid305680@id-305680.helmsley.irccloud.com) (*.net *.split)
[01:10:17] *** Quits: lebster (sid17131@id-17131.hampstead.irccloud.com) (*.net *.split)
[01:10:17] *** Quits: hdm (sid500490@aha/hacker/hdm) (*.net *.split)
[01:10:17] *** Quits: jsvcycling (sid369784@id-369784.uxbridge.irccloud.com) (*.net *.split)
[01:10:17] *** Quits: sam1 (~sam1@molly.millions.slask.me) (*.net *.split)
[01:10:17] *** Quits: Thinkofname (~thinkthin@37.205.12.211) (*.net *.split)
[01:10:17] *** Quits: dante443 (~dante443@99-88-166-99.lightspeed.milwwi.sbcglobal.net) (*.net *.split)
[01:10:17] *** Quits: foobaz (~oofabz@phoenix.frammish.org) (*.net *.split)
[01:10:17] *** Quits: michele (~eraser@user/michele) (*.net *.split)
[01:10:17] *** Quits: mastardet (~mastardet@user/mastardet) (*.net *.split)
[01:10:17] *** Quits: joshbaptiste (~josh@2001:470:1f07:4d5:24::c2b5) (*.net *.split)
[01:10:17] *** Quits: cim (~cim@205.185.117.110) (*.net *.split)
[01:10:17] *** Quits: lazyreader (~lazyreade@user/lazyreader) (*.net *.split)
[01:10:17] *** Quits: muesli (~muesli@fribbledom.com) (*.net *.split)
[01:10:17] *** Quits: greypw254 (~greypw2@grey.pw) (*.net *.split)
[01:10:17] *** Quits: st3fan (sid43079@id-43079.lymington.irccloud.com) (*.net *.split)
[01:10:17] *** Quits: nescafe1001 (sid211018@id-211018.tinside.irccloud.com) (*.net *.split)
[01:10:17] *** Quits: braxas (sid508886@id-508886.lymington.irccloud.com) (*.net *.split)
[01:10:17] *** Quits: griffinmb (sid410590@id-410590.helmsley.irccloud.com) (*.net *.split)
[01:10:17] *** Quits: sus (zero@user/zeromomentum) (*.net *.split)
[01:10:17] *** Quits: LtHummus (~lthummus@97-126-100-88.tukw.qwest.net) (*.net *.split)
[01:10:17] *** Quits: pjs (~pjs@user/pjs) (*.net *.split)
[01:10:17] *** Quits: jaguar (jag@maddshark.com) (*.net *.split)
[01:10:17] *** Quits: acohn (~acohn@wikipedia/alex-cohn) (*.net *.split)
[01:10:17] *** Quits: haliucinas (~haliucina@5.20.153.21) (*.net *.split)
[01:10:17] *** Quits: dkeohane2 (~dkeohane@ec2-18-189-29-140.us-east-2.compute.amazonaws.com) (*.net *.split)
[01:10:18] *** Quits: hjmcnew____ (sid86092@tinside.irccloud.com) (*.net *.split)
[01:10:18] *** Quits: pl (sid98063@helmsley.irccloud.com) (*.net *.split)
[01:10:18] *** Quits: eau (~chat@user/eau) (*.net *.split)
[01:10:18] *** Quits: hexology (~hexology@user/hexology) (*.net *.split)
[01:10:18] *** Quits: martin_ (nobody@188.113.85.137) (*.net *.split)
[01:10:18] *** Quits: oliv3 (~olivier@2001:bc8:6005:129:208:a2ff:fe0c:46bc) (*.net *.split)
[01:10:18] *** Quits: aram (~aram@9front.army) (*.net *.split)
[01:10:18] *** Quits: trewq (~trewq@li70-4.members.linode.com) (*.net *.split)
[01:10:18] *** Quits: sjas (~sjas@irc.sjas.de) (*.net *.split)
[01:10:18] *** Quits: albertito (~nil@37.228.204.251) (*.net *.split)
[01:10:18] *** Quits: Celeste[m] (~sleprainb@2001:470:69fc:105::3f4a) (*.net *.split)
[01:10:18] *** Quits: zsnes (~dead@173.82.46.220) (*.net *.split)
[01:10:18] *** Quits: avoozl2 (~avoozl@escaflowne.hro.nl) (*.net *.split)
[01:10:18] *** Quits: arusso-alt (~arusso@nubsicle.aaron-russo.com) (*.net *.split)
[01:10:18] *** Quits: grantbow_ (~grantbow@tatooine.princessleia.com) (*.net *.split)
[01:10:18] *** Quits: clee_ (~clee@tali.t0k.org) (*.net *.split)
[01:10:18] *** Quits: ethoxy_ (~caretaker@cx21.havox.ru) (*.net *.split)
[01:10:18] *** Quits: qzio_ (~qzio@198.167.223.200) (*.net *.split)
[01:10:18] *** Quits: mohan43u (~mohan@user/mohan43u) (*.net *.split)
[01:10:18] *** Quits: anticw (~anticw@157-131-153-146.fiber.dynamic.sonic.net) (*.net *.split)
[01:10:18] *** Quits: huf (huf@user/huf) (*.net *.split)
[01:10:18] *** Quits: simoneb_ (~simone@static.39.20.203.116.clients.your-server.de) (*.net *.split)
[01:10:18] *** Quits: corby (~corby@c0rby.de) (*.net *.split)
[01:10:18] *** Quits: fjmorazan (~quassel@user/fjmorazan) (*.net *.split)
[01:10:18] *** Quits: penguwin (~penguwin@fribbledom.com) (*.net *.split)
[01:10:18] *** Quits: jramsay (~lack@user/lack) (*.net *.split)
[01:10:18] *** Quits: FoodMan_ (~glucose@user/foodman) (*.net *.split)
[01:10:18] *** Quits: tnez (~el@user/tnez) (*.net *.split)
[01:10:18] *** Quits: zopsi_ (zopsi@2600:3c00::f03c:91ff:fe14:551f) (*.net *.split)
[01:10:18] *** Quits: jkl1337 (~jkl@user/jkl) (*.net *.split)
[01:10:18] *** Quits: witcher (~witcher@static.74.224.203.116.clients.your-server.de) (*.net *.split)
[01:10:18] *** Quits: batdog_ (batdog@lnsq.elkins.co) (*.net *.split)
[01:10:18] *** Quits: casastortaAway (~casastort@dc4.krivokuca.net) (*.net *.split)
[01:10:18] *** Quits: Kyros (~kyros@user/kyros) (*.net *.split)
[01:10:18] *** Quits: cfebs (~cfebs@user/cfebs) (*.net *.split)
[01:10:18] *** Quits: flynn (~mcbloch@user/flynn) (*.net *.split)
[01:10:18] *** Quits: rvt_ (~rvt@217-121-201-10.cable.dynamic.v4.ziggo.nl) (*.net *.split)
[01:10:18] *** Quits: scjosh (~scjosh@206.189.79.69) (*.net *.split)
[01:10:18] *** Quits: pgloor (~petergloo@mix.cubus.space) (*.net *.split)
[01:10:18] *** Quits: sgarciapdx (~serge@irc.shork.io) (*.net *.split)
[01:10:18] *** Quits: KDDLB (kevin@user/kddlb) (*.net *.split)
[01:10:18] *** Quits: pots9038 (~pots@20.51.220.66) (*.net *.split)
[01:10:18] *** Quits: _lungaro_ (~lungaro@99-117-118-33.lightspeed.sndgca.sbcglobal.net) (*.net *.split)
[01:10:18] *** Quits: grumb (~grumb@rint.osaka) (*.net *.split)
[01:10:18] *** Quits: johnjay (~pi@192.142.100.50) (*.net *.split)
[01:10:19] *** Quits: danieln (~danieln@erebor.danieln.de) (*.net *.split)
[01:10:19] *** Quits: lechner (~lechner@debian/lechner) (*.net *.split)
[01:10:19] *** Quits: ventic (ircbouncer@3v.fi) (*.net *.split)
[01:10:19] *** Quits: jimeh (~jimeh@51.15.210.236) (*.net *.split)
[01:10:19] *** Quits: A_Dragon (A_D@libera/staff/dragon) (*.net *.split)
[01:10:19] *** Quits: Ugrastil (~Ugrastil@89.40.112.204) (*.net *.split)
[01:10:19] *** Quits: samhza (sam@2600:3c03::f03c:92ff:fe40:814c) (*.net *.split)
[01:10:19] *** Quits: void09 (~void@revinin5minute.com) (*.net *.split)
[01:10:19] *** Quits: Xizor_ (~Xizor@151.ip-51-68-121.eu) (*.net *.split)
[01:10:19] *** Quits: happy-dude (~happy-dud@2001:470:69fc:105::b4d7) (*.net *.split)
[01:10:19] *** Quits: gio[m] (~giolekvam@2001:470:69fc:105::1:16a) (*.net *.split)
[01:10:19] *** Quits: notepad7 (~notepad@129.159.46.243) (*.net *.split)
[01:10:19] *** Quits: wolfshappen (~waff@irc.furworks.de) (*.net *.split)
[01:10:19] *** Quits: tebruno99 (~tebruno99@user/tebruno99) (*.net *.split)
[01:10:19] *** Quits: rudi_s (~simon@user/rudi-s/x-7673890) (*.net *.split)
[01:10:19] *** Quits: hendry (~hendry@210.23.22.8) (*.net *.split)
[01:10:19] *** Quits: chemsmith (~chemsmith@user/chemsmith) (*.net *.split)
[01:10:19] *** Quits: cnf (~cnf@d5152daf0.static.telenet.be) (*.net *.split)
[01:10:19] *** Quits: foxtrot (~foxtrot@user/foxtrot) (*.net *.split)
[01:10:19] *** Quits: fling (~fling@user/fling) (*.net *.split)
[01:10:19] *** Quits: schaeffer (~schaeffer@user/schaeffer) (*.net *.split)
[01:10:19] *** Quits: CRThaze1 (~weechat@188.166.44.58) (*.net *.split)
[01:10:19] *** Quits: lux0r (~lux0r@65.56.68.34.bc.googleusercontent.com) (*.net *.split)
[01:10:19] *** Quits: shtirlic (~shtirlic@178.70.138.122) (*.net *.split)
[01:10:19] *** Quits: vimal (~vimal@ip-213-127-89-120.ip.prioritytelecom.net) (*.net *.split)
[01:10:19] *** Quits: deepy (deepy@user/deepy) (*.net *.split)
[01:10:19] *** Quits: _\_ (~o@user/ding) (*.net *.split)
[01:10:19] *** Quits: kyshoc (~kyshoc@user/kyshoc) (*.net *.split)
[01:10:19] *** Quits: ilpanda (ilpanda@user/ilpanda) (*.net *.split)
[01:10:19] *** Quits: gl (~x@pwn.lu) (*.net *.split)
[01:10:19] *** Quits: lemonsnicks (~lemonsnic@cpc159519-perr18-2-0-cust114.19-1.cable.virginm.net) (*.net *.split)
[01:10:20] *** Quits: predmijat (~predmijat@mail.strogopro.com) (*.net *.split)
[01:10:20] *** Quits: moto (~moto@user/moto) (*.net *.split)
[01:10:20] *** Quits: mmk2410 (~mmk2410@user/mmk2410) (*.net *.split)
[01:10:20] *** Quits: moldorcoder7_ (~moldorcod@37.120.143.28) (*.net *.split)
[01:10:20] *** Quits: TheCoffeMaker (~TheCoffeM@user/thecoffemaker) (*.net *.split)
[01:10:20] *** Quits: hedon (~hedon@user/hedon) (*.net *.split)
[01:10:20] *** Quits: arcanez (~arcanez@warpedreality.org) (*.net *.split)
[01:10:20] *** Quits: boingolov (~nastynate@99.26.180.217) (*.net *.split)
[01:10:20] *** Quits: xzr (xzar@shell.troopers.fi) (*.net *.split)
[01:10:20] *** Quits: eldritch_ (~eldritch@user/eldritch/x-9272577) (*.net *.split)
[01:10:20] *** Quits: Xu_R (~dev-dsk-x@user/xu-r/x-9187770) (*.net *.split)
[01:10:20] *** Quits: paddymahoney (~paddymaho@cpe9050ca207f83-cm9050ca207f80.cpe.net.cable.rogers.com) (*.net *.split)
[01:10:20] *** Quits: pieguy128 (~pieguy128@bas1-quebec14-67-70-102-17.dsl.bell.ca) (*.net *.split)
[01:10:20] *** Quits: loggingbot (~loggingbo@user/loggingbot) (*.net *.split)
[01:10:20] *** Quits: b0nn (~shane@user/b0nn) (*.net *.split)
[01:10:20] *** Quits: ziofork (~ziofork@fr.worn.eu) (*.net *.split)
[01:10:20] *** Quits: jesk (~jesk@stakka.errxtx.net) (*.net *.split)
[01:10:20] *** Quits: darkskiez[m] (~darkskiez@2001:470:69fc:105::1:2a27) (*.net *.split)
[01:10:20] *** Quits: Liexei (~Liexei@user/liexei) (*.net *.split)
[01:10:20] *** Quits: franitor (~frank@user/franitor) (*.net *.split)
[01:10:20] *** Quits: welt (~welt@willow.spiderden.net) (*.net *.split)
[01:10:20] *** Quits: reenix (~reenix@2a01:238:420e:ae00:1c37:63c1:24c0:ff75) (*.net *.split)
[01:10:20] *** Quits: JPT (~jpt@classified.name) (*.net *.split)
[01:10:20] *** Quits: mtrovilho (~weechat@user/mtrovilho) (*.net *.split)
[01:10:20] *** Quits: sheb (~sheb@31.223.228.71) (*.net *.split)
[01:10:20] *** Quits: PedroG1 (~android@45.77.216.181) (*.net *.split)
[01:10:20] *** Quits: jespada (~jespada@87.74.37.56) (*.net *.split)
[01:10:20] *** Quits: synthmeat (~synthmeat@user/synthmeat) (*.net *.split)
[01:10:20] *** Quits: _xor (~xor@72.49.199.147) (*.net *.split)
[01:10:20] *** Quits: ghenry (~ghenry@ghenry.plus.com) (*.net *.split)
[01:10:20] *** Quits: KirkMcDonald (~Kirk@python/site-packages/KirkMcDonald) (*.net *.split)
[01:10:20] *** Quits: sudden (~cat@user/sudden) (*.net *.split)
[01:10:20] *** Quits: sleepingforest (~sleepingf@pool-74-98-255-220.pitbpa.fios.verizon.net) (*.net *.split)
[01:10:20] *** Quits: decartes_ (sid240036@id-240036.helmsley.irccloud.com) (*.net *.split)
[01:10:21] *** Quits: qwedfg (~qwedfg@user/qwedfg) (*.net *.split)
[01:10:21] *** Quits: teasea (~teasea@user/teasea) (*.net *.split)
[01:10:21] *** Quits: Kaivo (~Kaivo@user/kaivo) (*.net *.split)
[01:10:21] *** Quits: Rhvs (Rhys@help.lux.melted.me) (*.net *.split)
[01:10:21] *** Quits: zkanda (~zkanda@box.makean.art) (*.net *.split)
[01:10:21] *** Quits: yonson (~yonson@2600:8801:d900::16db) (*.net *.split)
[01:10:21] *** Quits: jzacsh[m]1 (~jzacshdax@2001:470:69fc:105::1:3a69) (*.net *.split)
[01:10:21] *** Quits: avemestr (~avemestr@2a01:4f8:212:2719::2) (*.net *.split)
[01:10:21] *** Quits: Maxattax (~max@50-195-160-193-static.hfc.comcastbusiness.net) (*.net *.split)
[01:10:21] *** Quits: znpy (~znpy@user/znpy) (*.net *.split)
[01:10:21] *** Quits: Rayke (rayke@user/rayke) (*.net *.split)
[01:10:21] *** Quits: enick_642 (~dngraymat@2001:470:69fc:105::793b) (*.net *.split)
[01:10:21] *** Quits: psydroid (~psydroid@user/psydroid) (*.net *.split)
[01:10:21] *** Quits: fugkco (~fugkcomat@2001:470:69fc:105::c70d) (*.net *.split)
[01:10:21] *** Quits: Endow[m] (~endowmatr@2001:470:69fc:105::1:21eb) (*.net *.split)
[01:10:21] *** Quits: dan01[m] (~dan01@2001:470:69fc:105::1:2640) (*.net *.split)
[01:10:21] *** Quits: Freman (~Freman@flatus.fremnet.net) (*.net *.split)
[01:10:21] *** Quits: caverton (~caverton@ercro.tech) (*.net *.split)
[01:10:21] *** Quits: chder (~chder@user/chder) (*.net *.split)
[01:10:21] *** Quits: AndrewYu (~andrew@user/andrewyu) (*.net *.split)
[01:10:21] *** Quits: dansan (~daniel@75.81.148.51) (*.net *.split)
[01:10:21] *** Quits: n1000 (~n1000@user/n1000) (*.net *.split)
[01:10:21] *** Quits: aml (~antoon_i@h-85-24-213-163.A392.priv.bahnhof.se) (*.net *.split)
[01:10:21] *** Quits: redquasar (~redquasar@redquasar.xyz) (*.net *.split)
[01:10:21] *** Quits: Thedarkb-Work (~Thedarkb@62.232.253.82) (*.net *.split)
[01:10:21] *** Quits: j416 (~j416@user/j416) (*.net *.split)
[01:10:21] *** Quits: daved (~daved@162.67.197.35.bc.googleusercontent.com) (*.net *.split)
[01:10:21] *** Quits: pez (~pez@user/pez) (*.net *.split)
[01:10:21] *** Quits: rvalue (~rvalue@user/rvalue) (*.net *.split)
[01:10:22] *** Quits: aeadio (~aead@user/aead) (*.net *.split)
[01:10:22] *** Quits: matt1982__ (~matt1982@178.62.73.7) (*.net *.split)
[01:10:22] *** Quits: hegemoOn (~netmonk@195-154-92-20.rev.poneytelecom.eu) (*.net *.split)
[01:10:22] *** Quits: Chepra (~chepra@summer.c137.eu) (*.net *.split)
[01:10:22] *** Quits: rbn (~rbn@user/rbn) (*.net *.split)
[01:10:22] *** Quits: pombreda (sid227801@id-227801.tinside.irccloud.com) (*.net *.split)
[01:10:22] *** Quits: sa (sid1055@id-1055.tinside.irccloud.com) (*.net *.split)
[01:10:22] *** Quits: gluon (~gluon@2a01:4f8:c0c:e2da::1) (*.net *.split)
[01:10:22] *** Quits: noobcake2465[m] (~noobcake2@2001:470:69fc:105::cced) (*.net *.split)
[01:10:22] *** Quits: mambang[m] (~mambang@user/mambang) (*.net *.split)
[01:10:22] *** Quits: buu (~buu@70-142-48-147.lightspeed.austtx.sbcglobal.net) (*.net *.split)
[01:10:22] *** Quits: idstam (~idstam@2.70.144.43.mobile.tre.se) (*.net *.split)
[01:10:22] *** Quits: ramrunner (~dsp@78.141.218.152) (*.net *.split)
[01:10:22] *** Quits: newton (james@user/newton) (*.net *.split)
[01:10:22] *** Quits: con3 (~con3@143.198.53.32) (*.net *.split)
[01:10:22] *** Quits: edr (~edr@user/edr) (*.net *.split)
[01:10:22] *** Quits: bradp- (~bradp@cpe-70-92-7-182.wi.res.rr.com) (*.net *.split)
[01:10:22] *** Quits: LogicAside (~LogicAsid@user/logicaside) (*.net *.split)
[01:10:22] *** Quits: LawnGnome (~LawnGnome@user/lawngnome) (*.net *.split)
[01:10:22] *** Quits: zutt (~zutt@user/zutt) (*.net *.split)
[01:10:22] *** Quits: strudl (~strudl@user/strudl) (*.net *.split)
[01:10:22] *** Quits: bertiger (~bertiger@user/bertiger) (*.net *.split)
[01:10:22] *** Quits: roasbeef (~roasbeef@104.131.26.124) (*.net *.split)
[01:10:22] *** Quits: Disconsented (~quassel@107.170.227.20) (*.net *.split)
[01:10:22] *** Quits: klaas (~klaas@simply.kla.as) (*.net *.split)
[01:10:23] *** Quits: Gnuman (~gnuman@user/gnuman) (*.net *.split)
[01:10:23] *** Quits: Snorlax (~Snorlax@2a03:b0c0:2:f0::363:a001) (*.net *.split)
[01:10:23] *** Quits: clemens3 (~clemens@225.40.150.83.ftth.as8758.net) (*.net *.split)
[01:10:23] *** Quits: wikro_ (~foo@hjkl.se) (*.net *.split)
[01:10:23] *** Quits: thinkofher (~thinkofhe@user/thinkofher) (*.net *.split)
[01:10:23] *** Quits: Fossil (~Fossil@95.85.23.165) (*.net *.split)
[01:10:23] *** Quits: mstruebing (~maex@2001:41d0:8:93c7::1) (*.net *.split)
[01:10:23] *** Quits: MD87 (~MD87@user/md87) (*.net *.split)
[01:10:23] *** Quits: m-kad (~quassel@2a02:c207:2043:4525::1) (*.net *.split)
[01:10:23] *** Quits: since_ (d1cb7284cb@ircbox.informatik.uni-erlangen.de) (*.net *.split)
[01:10:23] *** Quits: k0ta (~k0ta@103.108.94.37) (*.net *.split)
[01:10:23] *** Quits: tar_xvf (~tar_xvf@ec2-3-136-243-174.us-east-2.compute.amazonaws.com) (*.net *.split)
[01:10:23] *** Quits: trollixx (sid289131@id-289131.uxbridge.irccloud.com) (*.net *.split)
[01:10:23] *** Quits: redlegion (sid429547@id-429547.ilkley.irccloud.com) (*.net *.split)
[01:10:23] *** Quits: telemachus (sid2004@id-2004.helmsley.irccloud.com) (*.net *.split)
[01:10:23] *** Quits: Duns_Scrotus (sid262565@id-262565.tinside.irccloud.com) (*.net *.split)
[01:10:23] *** Quits: Manouchehri (sid384576@id-384576.hampstead.irccloud.com) (*.net *.split)
[01:10:23] *** Quits: egy (egy@tilde.team) (*.net *.split)
[01:10:23] *** Quits: ryu` (~ryusaku@c09825BC1.dhcp.as2116.net) (*.net *.split)
[01:10:23] *** Quits: fdv (sid27570@id-27570.helmsley.irccloud.com) (*.net *.split)
[01:10:23] *** Quits: kieren (~kieren@ec2-54-247-60-196.eu-west-1.compute.amazonaws.com) (*.net *.split)
[01:10:23] *** Quits: recursion (sid504862@id-504862.ilkley.irccloud.com) (*.net *.split)
[01:10:23] *** Quits: dmgk (~dmgk@user/dmgk) (*.net *.split)
[01:10:23] *** Quits: mcfrdy (~mcfrdy@user/mcfrdy) (*.net *.split)
[01:10:23] *** Quits: nickster (~nickster@67.207.91.6) (*.net *.split)
[01:10:23] *** Quits: zunk (~zunk@user/zunk) (*.net *.split)
[01:10:23] *** Quits: GinjaNinja32 (~nyx@thanatos.gn32.uk) (*.net *.split)
[01:10:23] *** Quits: MrElendig (~Urist@archlinux/op/MrElendig) (*.net *.split)
[01:10:23] *** Quits: cornfeedhobo (~cornfeedh@user/cornfeedhobo) (*.net *.split)
[01:10:24] *** Quits: TcM1911 (~tcm1911@2001:470:69fc:105::3649) (*.net *.split)
[01:10:24] *** Quits: petoem (~petoem@user/petoem) (*.net *.split)
[01:10:24] *** Quits: fizzie (irc@selene.zem.fi) (*.net *.split)
[01:10:24] *** Quits: jiqiren (~jiqiren@oh-hi.org) (*.net *.split)
[01:10:24] *** Quits: preisi (~preisi@irc.prei.si) (*.net *.split)
[01:10:24] *** Quits: SJrX (~sjr@S0106302303dfb018.vf.shawcable.net) (*.net *.split)
[01:10:24] *** Quits: OnkelUlla (~uol@ptx.hi.pengutronix.de) (*.net *.split)
[01:10:24] *** Quits: dostoyevsky2 (~sck@user/dostoyevsky2) (*.net *.split)
[01:10:24] *** Quits: ollien (~ollien@ollien.com) (*.net *.split)
[01:10:24] *** Quits: frobnitz (~ian@photon.remmler.org) (*.net *.split)
[01:10:24] *** Quits: krjst (~krjst@2604:a880:800:c1::16b:8001) (*.net *.split)
[01:10:24] *** Quits: jhchabran (~jhchabran@user/jhchabran) (*.net *.split)
[01:10:24] *** Quits: gbmor (ben@gbmor.dev) (*.net *.split)
[01:10:24] *** Quits: kochchef (~quassel@80.146.255.46) (*.net *.split)
[01:10:24] *** Quits: Xe (~cadey@tailscale/xe) (*.net *.split)
[01:10:24] *** Quits: dragonmaster (dragonmast@user/dragonmaster) (*.net *.split)
[01:10:24] *** Quits: ws2k3 (znc@vps.freegamehosting.eu) (*.net *.split)
[01:10:24] *** Quits: psil (~krwlisp@karatefylla.nu) (*.net *.split)
[01:10:24] *** Quits: mweckbecker (~matthias@weckbecker.name) (*.net *.split)
[01:10:24] *** Quits: elastic_dog (~elastic_d@2a01:118f:822:9c00:f583:aa51:9ad4:d4fb) (*.net *.split)
[01:10:24] *** Quits: mobbi (~quassel@dfsm20yjbwf9g5bjjfm2t-3.rev.dnainternet.fi) (*.net *.split)
[01:10:24] *** Quits: demsh (ws14dshtt8@hermod.demsh.org) (*.net *.split)
[01:10:25] *** Quits: alm (~alm@user/alm) (*.net *.split)
[01:10:25] *** Quits: wangledorf (sid505185@id-505185.ilkley.irccloud.com) (*.net *.split)
[01:10:25] *** Quits: dreamcat4 (uid157427@id-157427.hampstead.irccloud.com) (*.net *.split)
[01:10:25] *** Quits: qaisjp (sid26374@user/qaisjp) (*.net *.split)
[01:10:25] *** Quits: computerquip (sid423484@user/computerquip) (*.net *.split)
[01:10:25] *** Quits: Logiar (~logiar@nerdsluts.net) (*.net *.split)
[01:10:25] *** Quits: amodo (~derf@naeon.org) (*.net *.split)
[01:10:25] *** Quits: jlaffaye (~jlaffaye@user/jlaffaye) (*.net *.split)
[01:10:25] *** Quits: Piraty (~irc@user/piraty) (*.net *.split)
[01:10:25] *** Quits: ezzieyguywuf (~Unknown@user/ezzieyguywuf) (*.net *.split)
[01:10:25] *** Quits: alip (~alip@exherbo/developer/alip) (*.net *.split)
[01:10:25] *** Quits: koo5_ (~quassel@51.140.155.227) (*.net *.split)
[01:10:25] *** Quits: eyJhb (~eyJhb@user/eyjhb) (*.net *.split)
[01:10:25] *** Quits: leonardo (~leonardo@user/leonardo) (*.net *.split)
[01:10:25] *** Quits: philmacfly (~philmacfl@galaxie.weltraumhochofen.space) (*.net *.split)
[01:10:25] *** Quits: troseman (~troseman@c-75-70-98-121.hsd1.co.comcast.net) (*.net *.split)
[01:10:25] *** Quits: darkmuggle (darkmuggle@here.for-the.chat) (*.net *.split)
[01:10:25] *** Quits: goplay (uQokv148jU@user/goplay) (*.net *.split)
[01:10:25] *** Quits: karl (~Karlssel@2001:41d0:8:9a4b::1) (*.net *.split)
[01:10:25] *** Quits: SmokedCheese (nyoroon@2a01:7e01::f03c:91ff:fed1:d9ef) (*.net *.split)
[01:10:25] *** Quits: shiroyasha (~shiroyash@ec2-3-124-70-31.eu-central-1.compute.amazonaws.com) (*.net *.split)
[01:10:25] *** Quits: dupondje (~dupondje@artemis.dupie.be) (*.net *.split)
[01:10:26] *** Quits: kinlo (~peter@user/kinlo) (*.net *.split)
[01:10:26] *** Quits: Mutsumi (~Mutsumi@99-93-141-12.lightspeed.mssnks.sbcglobal.net) (*.net *.split)
[01:10:26] *** Quits: matthewcroughan_ (~quassel@static.211.38.12.49.clients.your-server.de) (*.net *.split)
[01:10:26] *** Quits: gijs (~gpeskens@94-208-100-217.cable.dynamic.v4.ziggo.nl) (*.net *.split)
[01:10:26] *** Quits: gueorgui (~gueorgui@user/gueorgui) (*.net *.split)
[01:10:26] *** Quits: Rudde (~rudde@netboot.io) (*.net *.split)
[01:10:26] *** Quits: wkalt (~wkalt@user/wkalt) (*.net *.split)
[01:10:26] *** Quits: hwm4rgs (~hwm4rgs@user/hwm4rgs) (*.net *.split)
[01:10:26] *** Quits: vulp1ne (16abab341f@foxes.are.allowed.org) (*.net *.split)
[01:10:26] *** Quits: mooff (mooff@awful.cooking) (*.net *.split)
[01:10:26] *** Quits: greatgatsby (~greatgats@bras-base-toroon0411w-grc-52-142-114-106-7.dsl.bell.ca) (*.net *.split)
[01:10:26] *** Quits: Erzwurm (~archwyrm@archwyrm.net) (*.net *.split)
[01:10:27] *** Quits: brooks (~brooks@23.157.160.131) (*.net *.split)
[01:10:27] *** Quits: rockyh (~rockyh@user/rockyh) (*.net *.split)
[01:10:27] *** Quits: ofh (~felix@2001:44b8:30f9:18c:6f0:21ff:fe3c:d4d7) (*.net *.split)
[01:10:27] *** Quits: nperez_ (~nperez@86-93-223-59.fixed.kpn.net) (*.net *.split)
[01:10:27] *** Quits: Nex8192 (~Nex8192@user/nex8192) (*.net *.split)
[01:10:27] *** Quits: sagax (~sagax_nb@user/sagax) (*.net *.split)
[01:10:27] *** Quits: spudly[m] (~spudly@2001:470:69fc:105::18) (*.net *.split)
[01:10:27] *** Quits: bloony (~tjellomat@2001:470:69fc:105::3aac) (*.net *.split)
[01:10:27] *** Quits: meain (~meain@2001:470:69fc:105::2db) (*.net *.split)
[01:10:27] *** Quits: kadoban (~kadoban@user/kadoban) (*.net *.split)
[01:10:27] *** Quits: sordidwhiskey[m] (~sordidwhi@2001:470:69fc:105::c94e) (*.net *.split)
[01:10:27] *** Quits: dove (~jordan@li1158-85.members.linode.com) (*.net *.split)
[01:10:27] *** Quits: VSpike (~johncc@2001:bc8:47ac:1a22::1) (*.net *.split)
[01:10:27] *** Quits: lord4163 (~lord4163@90-230-194-205-no86.tbcn.telia.com) (*.net *.split)
[01:10:27] *** Quits: chameleon (~chameleon@62.ip-51-89-164.eu) (*.net *.split)
[01:10:27] *** Quits: effprime (~effprime@user/effprime) (*.net *.split)
[01:10:27] *** Quits: cp- (~cp-@b157153.ppp.asahi-net.or.jp) (*.net *.split)
[01:10:27] *** Quits: Artea (~Lufia@artea.com.pt) (*.net *.split)
[01:10:27] *** Quits: Tykling (~tykling@irc.tyknet.dk) (*.net *.split)
[01:10:27] *** Quits: flam (~flam@clairlair.xyz) (*.net *.split)
[01:10:28] *** Quits: mkbloke (~mkbloke@vps.cammo.me.uk) (*.net *.split)
[01:10:28] *** Quits: connor_goodwolf (~connor@user/connor-goodwolf/x-2615606) (*.net *.split)
[01:10:28] *** Quits: mjanssen (mpcjanssen@2a01:7e01::f03c:92ff:fe02:7c97) (*.net *.split)
[01:10:28] *** Quits: queue- (~nerd@user/queue/x-7267619) (*.net *.split)
[01:10:28] *** Quits: bsandro (~bsandro@139.138.197.56) (*.net *.split)
[01:10:28] *** Quits: Haise0 (~haise01@user/haise01) (*.net *.split)
[01:10:28] *** Quits: dfch (~dfch@user/dfch) (*.net *.split)
[01:10:28] *** Quits: riv (river@tilde.team/user/river) (*.net *.split)
[01:10:28] *** Quits: achilleas (ach@user/achilleas) (*.net *.split)
[01:10:28] *** Quits: SoF (~skius@user/skius) (*.net *.split)
[01:10:28] *** Quits: nikki93 (sid200244@id-200244.tinside.irccloud.com) (*.net *.split)
[01:10:28] *** Quits: jimcroft_______ (sid148498@id-148498.uxbridge.irccloud.com) (*.net *.split)
[01:10:28] *** Quits: Anderson-D (sid146635@id-146635.tinside.irccloud.com) (*.net *.split)
[01:10:28] *** Quits: vds_ (sid12483@id-12483.helmsley.irccloud.com) (*.net *.split)
[01:10:28] *** Quits: r0bby (r0bby@user/r0bby) (*.net *.split)
[01:10:28] *** Quits: obviyus (sid415299@user/obviyus) (*.net *.split)
[01:10:28] *** Quits: meinside (uid24933@id-24933.helmsley.irccloud.com) (*.net *.split)
[01:10:28] *** Quits: hgl (hgl@67.230.181.248) (*.net *.split)
[01:10:28] *** Quits: markkuit (~markkuit@93-43-234-84.ip94.fastwebnet.it) (*.net *.split)
[01:10:28] *** Quits: nebiros (nebiros@user/nebiros) (*.net *.split)
[01:10:28] *** Quits: eric_hill (sid323132@id-323132.tinside.irccloud.com) (*.net *.split)
[01:10:28] *** Quits: mustafa (sid502723@rockylinux/releng/mustafa) (*.net *.split)
[01:10:28] *** Quits: sailorTheCat (~sailorCat@mail2.gajsin.name) (*.net *.split)
[01:10:28] *** Quits: nj- (nicholas@stop.disconnecting.me) (*.net *.split)
[01:10:28] *** Quits: a1paca_ (~a1paca@user/a1paca) (*.net *.split)
[01:10:28] *** Quits: kipukun_ (~kipukun@207.244.104.227) (*.net *.split)
[01:10:28] *** Quits: henry40408 (~henry4040@112.104.114.35) (*.net *.split)
[01:10:28] *** Quits: seds (sid492514@user/seds) (*.net *.split)
[01:10:28] *** Quits: bat[m] (~batdice-t@2001:470:69fc:105::19b8) (*.net *.split)
[01:10:28] *** Quits: itok_ (sid418430@id-418430.ilkley.irccloud.com) (*.net *.split)
[01:10:28] *** Quits: bw (sid2730@user/betawaffle) (*.net *.split)
[01:10:28] *** Quits: hhes (sid420846@id-420846.ilkley.irccloud.com) (*.net *.split)
[01:10:28] *** Quits: aarchi (sid486183@id-486183.uxbridge.irccloud.com) (*.net *.split)
[01:10:28] *** Quits: maxamillion (sid276220@ansible/staff/maxamillion) (*.net *.split)
[01:10:28] *** Quits: derfj (sid19429@id-19429.tinside.irccloud.com) (*.net *.split)
[01:10:29] *** Quits: orn (~orn@2a01:6f00:2:a51d:468a:5bff:fea5:bf9d) (*.net *.split)
[01:10:29] *** Quits: M1000mh[theythem (~M1000mhmo@2001:470:69fc:105::4103) (*.net *.split)
[01:10:29] *** Quits: freswa (~freswa@2001:470:69fc:105::c1ec) (*.net *.split)
[01:10:29] *** Quits: itsjoints (~itsjoints@2001:470:69fc:105::1:29f4) (*.net *.split)
[01:10:29] *** Quits: Fish (~Fish@cartwheel.9grid.fr) (*.net *.split)
[01:10:29] *** Quits: jolan (~jolan@ec2.jolan.org) (*.net *.split)
[01:10:29] *** Quits: vhost- (~vhost@65.102.48.134) (*.net *.split)
[01:10:29] *** Quits: deniska (~denis@user/deniska) (*.net *.split)
[01:10:29] *** Quits: jsanford (~jsanford@user/jsanford) (*.net *.split)
[01:10:29] *** Quits: Shimmy (~Shimmy@user/shimmy) (*.net *.split)
[01:10:29] *** Quits: jjakob_ (~quassel@2a01:260:8028:10f0::62) (*.net *.split)
[01:10:29] *** Quits: burakcank (~burakcank@has.arrived.and.is.ready-to.party) (*.net *.split)
[01:10:29] *** Quits: opcode (~nathan@user/opcode) (*.net *.split)
[01:10:29] *** Quits: glats (~glats@45.77.73.141) (*.net *.split)
[01:10:29] *** Quits: dg (~dgl@dg.wtf) (*.net *.split)
[01:10:29] *** Quits: Patater (~patater@104.248.173.85) (*.net *.split)
[01:10:29] *** Quits: ds (~ds@user/ds) (*.net *.split)
[01:10:29] *** Quits: mrus (~mrus@149.28.224.172) (*.net *.split)
[01:10:30] *** Quits: ChanServ (ChanServ@services.libera.chat) (*.net *.split)
[01:10:30] *** Quits: alzgh (~alzgh@user/alzgh) (*.net *.split)
[01:10:30] *** Quits: smrtz (~smrtz@user/smrtz) (*.net *.split)
[01:10:30] *** Quits: mickey8 (~user@user/mickey) (*.net *.split)
[01:10:30] *** Quits: bindu (~bindu@user/bindu) (*.net *.split)
[01:10:30] *** Quits: todd (~todd@gateway/tor-sasl/toddf) (*.net *.split)
[01:11:24] *** Quits: getynge (~getynge@2601:702:80:2fc0::c4bf) (Remote host closed the connection)
[01:12:52] *** Quits: x88x88x (~cheeg@gateway/vpn/pia/x88x88x) (Ping timeout: 264 seconds)
[01:13:04] *** Joins: burningserenity (~burningse@2603:9001:f01:ad99::100b)
[01:14:05] *** burningserenity is now known as 042AAAPLS
[01:14:29] *** Quits: Spydar007 (~spydar007@user/spydar007) (Max SendQ exceeded)
[01:14:29] *** Quits: lucerne (~lucerne@ip202.ip-51-178-215.eu) (Max SendQ exceeded)
[01:14:30] *** Joins: smrtz (~smrtz@user/smrtz)
[01:14:30] *** Joins: theoceaniscool (~theoceani@119.12.232.133)
[01:14:30] *** Joins: ols (~ols@nixers/ols)
[01:14:30] *** Joins: burningserenity (~burningse@142-196-178-216.res.spectrum.com)
[01:14:30] *** Joins: g2anj (~v@39.112.227.198)
[01:14:30] *** Joins: lxsameer (~lxsameer@user/lxsameer)
[01:14:30] *** Joins: ItsNotGoodName0 (~ItsNotGoo@c-73-83-144-140.hsd1.wa.comcast.net)
[01:14:30] *** Joins: dr0n (~nabromov@94.11.23.235)
[01:14:30] *** Joins: jaca122 (~Thunderbi@89-65-136-254.dynamic.chello.pl)
[01:14:30] *** Joins: hsiktas[m] (~hsiktasma@2001:470:69fc:105::30d4)
[01:14:30] *** Joins: Celeste[m] (~sleprainb@2001:470:69fc:105::3f4a)
[01:14:30] *** Joins: pulsepoint433[m] (~pulsepoin@2001:470:69fc:105::1:1f25)
[01:14:30] *** Joins: lofiguy (~lofiguy@87-207-104-205.dynamic.chello.pl)
[01:14:30] *** Joins: Seirdy (~Seirdy@sourcehut/user/seirdy)
[01:14:30] *** Joins: jla (~jordi@64.225.79.195)
[01:14:30] *** Joins: holgersson (~quassel@user/holgersson)
[01:14:30] *** Joins: pez (~pez@user/pez)
[01:14:30] *** Joins: morgabra (sid500580@user/morgabra)
[01:14:30] *** Joins: be3uykpy (~be3uykpy@2a00:a040:19a:b060:f1ac:429b:e0b:8fee)
[01:14:30] *** Joins: NCS_One (~NCS_One@bl11-90-133.dsl.telepac.pt)
[01:14:30] *** Joins: ajfriesen (~ajfriesen@cable-78-35-98-50.nc.de)
[01:14:30] *** Joins: alzgh (~alzgh@user/alzgh)
[01:14:30] *** Joins: danderson (~dave@tailscale/danderson)
[01:14:30] *** Joins: shtirlic (~shtirlic@178.70.138.122)
[01:14:30] *** Joins: justache (~justache@user/justache)
[01:14:30] *** Joins: krux02 (~krux02@p200300e8170c11004db6e8013ca32c23.dip0.t-ipconnect.de)
[01:14:30] *** Joins: fputs (~fputs@67.59.83.166)
[01:14:30] *** Joins: dalek-caan (~Thunderbi@109.252.124.86)
[01:14:30] *** Joins: t0xicCode (~t0xicCode@user/t0xiccode)
[01:14:30] *** Joins: w1ke (~w1ke@user/w1ke)
[01:14:30] *** Joins: mrig (~mrig@user/mrig)
[01:14:30] *** Joins: noord (~noord@user/noord)
[01:14:30] *** Joins: Wouter0100 (~Wouter010@entry.nbg.netvos.nl)
[01:14:30] *** Joins: pinpox (~pinpox@v2202101107577140883.nicesrv.de)
[01:14:30] *** Joins: vimal (~vimal@ip-213-127-89-120.ip.prioritytelecom.net)
[01:14:30] *** Joins: dsrt^ (~dsrt@68.101.58.90)
[01:14:30] *** Joins: rewt (~default@user/rewt)
[01:14:30] *** Joins: saml (~saml@cpe-74-73-80-162.nyc.res.rr.com)
[01:14:30] *** Joins: mickey8 (~user@user/mickey)
[01:14:30] *** Joins: pztrn (~pztrn@user/pztrn)
[01:14:30] *** Joins: kn100 (~kn100@wireguard/tunneler/kn100)
[01:14:30] *** Joins: haniaF (~haniaF@83.24.192.250.ipv4.supernova.orange.pl)
[01:14:30] *** Joins: mosen (~mosen@159-196-125-15.9fc47d.syd.static.aussiebb.net)
[01:14:30] *** Joins: zwr (~zwr@2804:d45:b966:fb00:3ac9:5265:a79e:4a2a)
[01:14:30] *** Joins: stmuk (~steve@15.43.187.81.in-addr.arpa)
[01:14:30] *** Joins: ztx (~ztx@user/ztx)
[01:14:30] *** strontium.libera.chat sets mode: +v danderson
[01:14:30] *** Joins: gl (~x@pwn.lu)
[01:14:30] *** Joins: mic4ael (~mic4ael@kolodzie-pc.cern.ch)
[01:14:30] *** Joins: darkapex (~darkapex@user/darkapex)
[01:14:30] *** Joins: adip (~adip@deq245.neoplus.adsl.tpnet.pl)
[01:14:30] *** Joins: chripell (~chripell@147.80.76.34.bc.googleusercontent.com)
[01:14:30] *** Joins: jkovac1 (~jkovac1@user/jkovac1)
[01:14:30] *** Joins: clemens3 (~clemens@225.40.150.83.ftth.as8758.net)
[01:14:30] *** Joins: darkskiez[m] (~darkskiez@2001:470:69fc:105::1:2a27)
[01:14:30] *** Joins: ropes (~ropes@133.77.127.34.bc.googleusercontent.com)
[01:14:30] *** Joins: Gnuman (~gnuman@user/gnuman)
[01:14:30] *** Joins: Snorlax (~Snorlax@2a03:b0c0:2:f0::363:a001)
[01:14:30] *** Joins: Xe (~cadey@tailscale/xe)
[01:14:30] *** Joins: monchi (~joints@143.198.92.132)
[01:14:30] *** Joins: dragonmaster (dragonmast@user/dragonmaster)
[01:14:30] *** Joins: wikro_ (~foo@hjkl.se)
[01:14:30] *** Joins: thinkofher (~thinkofhe@user/thinkofher)
[01:14:30] *** Joins: ws2k3 (znc@vps.freegamehosting.eu)
[01:14:30] *** Joins: Fossil (~Fossil@95.85.23.165)
[01:14:30] *** Joins: mweckbecker (~matthias@weckbecker.name)
[01:14:30] *** Joins: psil (~krwlisp@karatefylla.nu)
[01:14:30] *** Joins: mstruebing (~maex@2001:41d0:8:93c7::1)
[01:14:30] *** Joins: MD87 (~MD87@user/md87)
[01:14:30] *** Joins: m-kad (~quassel@2a02:c207:2043:4525::1)
[01:14:30] *** Joins: Liexei (~Liexei@user/liexei)
[01:14:30] *** Joins: since_ (d1cb7284cb@ircbox.informatik.uni-erlangen.de)
[01:14:30] *** Joins: explodes (~explodes@user/explodes)
[01:14:30] *** Joins: xMopx (~xMopx-lib@192.95.23.134)
[01:14:30] *** Joins: kindablue (znc@irc.tpurist.com)
[01:14:30] *** Joins: gsora (~gsora@140.238.174.213)
[01:14:30] *** Joins: cfjk (~cfjk@user/cfjk)
[01:14:30] *** Joins: deepy (deepy@user/deepy)
[01:14:30] *** Joins: mjorgensen (mjorgensen@sourcehut/users/mjorgensen)
[01:14:30] *** Joins: kcrk (~kcrk@user/kcrk)
[01:14:30] *** Joins: _\_ (~o@user/ding)
[01:14:30] *** Joins: Pokey (~pokey@spikeyCactus/hoosky)
[01:14:30] *** Joins: siXy (~jfindley@centos/ops/sixy)
[01:14:30] *** Joins: Guest7196 (~blinux@pool-108-48-11-122.washdc.fios.verizon.net)
[01:14:30] *** Joins: twaapo (glxblt@91-152-242-177.elisa-laajakaista.fi)
[01:14:30] *** Joins: franitor (~frank@user/franitor)
[01:14:30] *** Joins: mva (znc@gentoo/developer/mva)
[01:14:30] *** Joins: loosh (~jason@vultr.bastion.pnj1.us.zj.is)
[01:14:30] *** Joins: mgubyt (u@mgub.yt)
[01:14:30] *** Joins: cultpony (~cultpony@user/cultpony)
[01:14:30] *** Joins: soxhlet (~soxhlet@81.171.29.137)
[01:14:30] *** Joins: PlaydohPlato (~playdohpl@23-88-157-194.fttp.usinternet.com)
[01:14:30] *** Joins: welt (~welt@willow.spiderden.net)
[01:14:30] *** Joins: kyshoc (~kyshoc@user/kyshoc)
[01:14:30] *** Joins: wmo (~quassel@2604:a880:2:d0::1df0:b001)
[01:14:30] *** Joins: reenix (~reenix@2a01:238:420e:ae00:1c37:63c1:24c0:ff75)
[01:14:30] *** Joins: ilpanda (ilpanda@user/ilpanda)
[01:14:30] *** Joins: jer0me (~jerome@176-149-34-153.abo.bbox.fr)
[01:14:30] *** Joins: JPT (~jpt@classified.name)
[01:14:30] *** Joins: lemonsnicks (~lemonsnic@cpc159519-perr18-2-0-cust114.19-1.cable.virginm.net)
[01:14:30] *** Joins: predmijat (~predmijat@mail.strogopro.com)
[01:14:30] *** Joins: jackneill (~jackneill@20014C4E1813AE00725516C168831FC1.dsl.pool.telekom.hu)
[01:14:30] *** Joins: bindu (~bindu@user/bindu)
[01:14:30] *** Joins: jjcm (~j@li263-105.members.linode.com)
[01:14:30] *** Joins: frebib (~frebibcha@nerdhouse.io)
[01:14:30] *** Joins: wolfdale (~wolfdale@ec2-3-1-90-26.ap-southeast-1.compute.amazonaws.com)
[01:14:30] *** Joins: victori (~victori@cpe-76-174-179-126.socal.res.rr.com)
[01:14:30] *** Joins: Jigsy (~Jigsy@user/jigsy)
[01:14:30] *** Joins: DM430784214 (~DM4307@c-73-15-244-129.hsd1.ca.comcast.net)
[01:14:30] *** Joins: mtrovilho (~weechat@user/mtrovilho)
[01:14:30] *** Joins: todd (~todd@gateway/tor-sasl/toddf)
[01:14:30] *** Joins: sheb (~sheb@31.223.228.71)
[01:14:30] *** Joins: monke (~monke@user/monke)
[01:14:30] *** Joins: moto (~moto@user/moto)
[01:14:30] *** Joins: mikoto-chan (~mikoto-ch@esm-84-240-99-143.netplaza.fi)
[01:14:30] *** Joins: elastic_dog (~elastic_d@2a01:118f:822:9c00:f583:aa51:9ad4:d4fb)
[01:14:30] *** Joins: mmk2410 (~mmk2410@user/mmk2410)
[01:14:30] *** Joins: mobbi (~quassel@dfsm20yjbwf9g5bjjfm2t-3.rev.dnainternet.fi)
[01:14:30] *** Joins: PedroG1 (~android@45.77.216.181)
[01:14:30] *** Joins: grumb (~grumb@rint.osaka)
[01:14:30] *** Joins: rvalue (~rvalue@user/rvalue)
[01:14:30] *** Joins: art_vandelay (~art_vande@142.126.234.156)
[01:14:30] *** Joins: k0ta (~k0ta@103.108.94.37)
[01:14:30] *** Joins: jespada (~jespada@87.74.37.56)
[01:14:30] *** Joins: Icedream (~icedream@144.76.223.175)
[01:14:30] *** Joins: bch_x (~bch@S01069050ca2cbf63.ok.shawcable.net)
[01:14:30] *** Joins: mooff (mooff@awful.cooking)
[01:14:30] *** Joins: demsh (ws14dshtt8@hermod.demsh.org)
[01:14:30] *** Joins: synthmeat (~synthmeat@user/synthmeat)
[01:14:30] *** Joins: _xor (~xor@72.49.199.147)
[01:14:30] *** Joins: lithammer (~lithammer@2a02:2770::21a:4aff:fe88:c18d)
[01:14:30] *** Joins: nachoes (~nachoes@user/nachoes)
[01:14:30] *** Joins: svedrin (~quassel@tiamat.funzt-halt.net)
[01:14:30] *** Joins: ghenry (~ghenry@ghenry.plus.com)
[01:14:30] *** Joins: alm (~alm@user/alm)
[01:14:30] *** Joins: tar_xvf (~tar_xvf@ec2-3-136-243-174.us-east-2.compute.amazonaws.com)
[01:14:30] *** Joins: johnjay (~pi@192.142.100.50)
[01:14:30] *** Joins: KirkMcDonald (~Kirk@python/site-packages/KirkMcDonald)
[01:14:30] *** Joins: Praise (~Fat@user/praise)
[01:14:30] *** Joins: sudden (~cat@user/sudden)
[01:14:30] *** Joins: sleepingforest (~sleepingf@pool-74-98-255-220.pitbpa.fios.verizon.net)
[01:14:30] *** Joins: Vigdis (~danj@ns4.chown.me)
[01:14:30] *** Joins: greatgatsby (~greatgats@bras-base-toroon0411w-grc-52-142-114-106-7.dsl.bell.ca)
[01:14:30] *** Joins: nikki93 (sid200244@id-200244.tinside.irccloud.com)
[01:14:30] *** Joins: trollixx (sid289131@id-289131.uxbridge.irccloud.com)
[01:14:30] *** Joins: jimcroft_______ (sid148498@id-148498.uxbridge.irccloud.com)
[01:14:30] *** Joins: redlegion (sid429547@id-429547.ilkley.irccloud.com)
[01:14:30] *** Joins: decartes_ (sid240036@id-240036.helmsley.irccloud.com)
[01:14:30] *** Joins: Anderson-D (sid146635@id-146635.tinside.irccloud.com)
[01:14:30] *** Joins: vds_ (sid12483@id-12483.helmsley.irccloud.com)
[01:14:30] *** Joins: r0bby (r0bby@user/r0bby)
[01:14:30] *** Joins: obviyus (sid415299@user/obviyus)
[01:14:30] *** Joins: telemachus (sid2004@id-2004.helmsley.irccloud.com)
[01:14:30] *** Joins: Duns_Scrotus (sid262565@id-262565.tinside.irccloud.com)
[01:14:30] *** Joins: meinside (uid24933@id-24933.helmsley.irccloud.com)
[01:14:30] *** Joins: Manouchehri (sid384576@id-384576.hampstead.irccloud.com)
[01:14:30] *** Joins: avery (sid501608@id-501608.uxbridge.irccloud.com)
[01:14:30] *** Joins: wangledorf (sid505185@id-505185.ilkley.irccloud.com)
[01:14:30] *** Joins: soren (sid124229@id-124229.uxbridge.irccloud.com)
[01:14:30] *** Joins: dreamcat4 (uid157427@id-157427.hampstead.irccloud.com)
[01:14:30] *** Joins: qaisjp (sid26374@user/qaisjp)
[01:14:30] *** Joins: Shrike (sid305680@id-305680.helmsley.irccloud.com)
[01:14:30] *** Joins: theckman (sid295081@user/theckman)
[01:14:30] *** Joins: hdm (sid500490@aha/hacker/hdm)
[01:14:30] *** Joins: lebster (sid17131@id-17131.hampstead.irccloud.com)
[01:14:30] *** Joins: computerquip (sid423484@user/computerquip)
[01:14:30] *** Joins: jsvcycling (sid369784@id-369784.uxbridge.irccloud.com)
[01:14:30] *** Joins: qwedfg (~qwedfg@user/qwedfg)
[01:14:30] *** Joins: griffinmb (sid410590@id-410590.helmsley.irccloud.com)
[01:14:30] *** Joins: hgl (hgl@67.230.181.248)
[01:14:30] *** Joins: teasea (~teasea@user/teasea)
[01:14:30] *** Joins: Kaivo (~Kaivo@user/kaivo)
[01:14:30] *** Joins: corby (~corby@c0rby.de)
[01:14:30] *** Joins: markkuit (~markkuit@93-43-234-84.ip94.fastwebnet.it)
[01:14:30] *** Joins: egy (egy@tilde.team)
[01:14:30] *** Joins: Logiar (~logiar@nerdsluts.net)
[01:14:30] *** Joins: sam1 (~sam1@molly.millions.slask.me)
[01:14:30] *** Joins: 068AAC0VA (Rhys@help.lux.melted.me)
[01:14:30] *** Joins: zsnes (~dead@173.82.46.220)
[01:14:30] *** Joins: amodo (~derf@naeon.org)
[01:14:30] *** Joins: jlaffaye (~jlaffaye@user/jlaffaye)
[01:14:30] *** Joins: Erzwurm (~archwyrm@archwyrm.net)
[01:14:30] *** Joins: aeadio (~aead@user/aead)
[01:14:30] *** Joins: matt1982__ (~matt1982@178.62.73.7)
[01:14:30] *** Joins: avoozl2 (~avoozl@escaflowne.hro.nl)
[01:14:30] *** Joins: arusso-alt (~arusso@nubsicle.aaron-russo.com)
[01:14:30] *** Joins: grantbow_ (~grantbow@tatooine.princessleia.com)
[01:14:30] *** Joins: clee_ (~clee@tali.t0k.org)
[01:14:30] *** Joins: ethoxy_ (~caretaker@cx21.havox.ru)
[01:14:30] *** Joins: qzio_ (~qzio@198.167.223.200)
[01:14:30] *** Joins: mohan43u (~mohan@user/mohan43u)
[01:14:30] *** Joins: anticw (~anticw@157-131-153-146.fiber.dynamic.sonic.net)
[01:14:30] *** Joins: huf (huf@user/huf)
[01:14:30] *** Joins: simoneb_ (~simone@static.39.20.203.116.clients.your-server.de)
[01:14:30] *** Joins: penguwin (~penguwin@fribbledom.com)
[01:14:30] *** Joins: fjmorazan (~quassel@user/fjmorazan)
[01:14:30] *** Joins: jramsay (~lack@user/lack)
[01:14:30] *** Joins: Piraty (~irc@user/piraty)
[01:14:30] *** Joins: FoodMan_ (~glucose@user/foodman)
[01:14:30] *** Joins: tnez (~el@user/tnez)
[01:14:30] *** Joins: zopsi_ (zopsi@2600:3c00::f03c:91ff:fe14:551f)
[01:14:30] *** Joins: jkl1337 (~jkl@user/jkl)
[01:14:30] *** Joins: nebiros (nebiros@user/nebiros)
[01:14:30] *** Joins: rvt_ (~rvt@217-121-201-10.cable.dynamic.v4.ziggo.nl)
[01:14:30] *** Joins: witcher (~witcher@static.74.224.203.116.clients.your-server.de)
[01:14:30] *** Joins: batdog_ (batdog@lnsq.elkins.co)
[01:14:30] *** Joins: eric_hill (sid323132@id-323132.tinside.irccloud.com)
[01:14:30] *** Joins: casastortaAway (~casastort@dc4.krivokuca.net)
[01:14:30] *** Joins: Kyros (~kyros@user/kyros)
[01:14:30] *** Joins: flynn (~mcbloch@user/flynn)
[01:14:30] *** Joins: mustafa (sid502723@rockylinux/releng/mustafa)
[01:14:30] *** Joins: cfebs (~cfebs@user/cfebs)
[01:14:30] *** Joins: KDDLB (kevin@user/kddlb)
[01:14:30] *** Joins: scjosh (~scjosh@206.189.79.69)
[01:14:30] *** Joins: pgloor (~petergloo@mix.cubus.space)
[01:14:30] *** Joins: sgarciapdx (~serge@irc.shork.io)
[01:14:30] *** Joins: pots9038 (~pots@20.51.220.66)
[01:14:30] *** Joins: _lungaro_ (~lungaro@99-117-118-33.lightspeed.sndgca.sbcglobal.net)
[01:14:30] *** Joins: zkanda (~zkanda@box.makean.art)
[01:14:30] *** Joins: Thinkofname (~thinkthin@37.205.12.211)
[01:14:30] *** Joins: yonson (~yonson@2600:8801:d900::16db)
[01:14:30] *** Joins: hegemoOn (~netmonk@195-154-92-20.rev.poneytelecom.eu)
[01:14:30] *** Joins: ezzieyguywuf (~Unknown@user/ezzieyguywuf)
[01:14:30] *** Joins: ryu` (~ryusaku@c09825BC1.dhcp.as2116.net)
[01:14:30] *** Joins: alip (~alip@exherbo/developer/alip)
[01:14:30] *** Joins: dante443 (~dante443@99-88-166-99.lightspeed.milwwi.sbcglobal.net)
[01:14:30] *** Joins: Chepra (~chepra@summer.c137.eu)
[01:14:30] *** Joins: danieln (~danieln@erebor.danieln.de)
[01:14:30] *** Joins: foobaz (~oofabz@phoenix.frammish.org)
[01:14:30] *** Joins: lechner (~lechner@debian/lechner)
[01:14:30] *** Joins: brooks (~brooks@23.157.160.131)
[01:14:30] *** Joins: fdv (sid27570@id-27570.helmsley.irccloud.com)
[01:14:30] *** Joins: kieren (~kieren@ec2-54-247-60-196.eu-west-1.compute.amazonaws.com)
[01:14:30] *** Joins: recursion (sid504862@id-504862.ilkley.irccloud.com)
[01:14:30] *** Joins: sailorTheCat (~sailorCat@mail2.gajsin.name)
[01:14:30] *** Joins: nj- (nicholas@stop.disconnecting.me)
[01:14:30] *** Joins: a1paca_ (~a1paca@user/a1paca)
[01:14:30] *** Joins: kipukun_ (~kipukun@207.244.104.227)
[01:14:30] *** Joins: henry40408 (~henry4040@112.104.114.35)
[01:14:30] *** Joins: seds (sid492514@user/seds)
[01:14:30] *** Joins: koo5_ (~quassel@51.140.155.227)
[01:14:30] *** Joins: michele (~eraser@user/michele)
[01:14:30] *** Joins: mastardet (~mastardet@user/mastardet)
[01:14:30] *** Joins: joshbaptiste (~josh@2001:470:1f07:4d5:24::c2b5)
[01:14:30] *** Joins: bat[m] (~batdice-t@2001:470:69fc:105::19b8)
[01:14:30] *** Joins: cim (~cim@205.185.117.110)
[01:14:30] *** Joins: lazyreader (~lazyreade@user/lazyreader)
[01:14:30] *** Joins: muesli (~muesli@fribbledom.com)
[01:14:30] *** Joins: rockyh (~rockyh@user/rockyh)
[01:14:30] *** Joins: greypw254 (~greypw2@grey.pw)
[01:14:30] *** Joins: rbn (~rbn@user/rbn)
[01:14:30] *** Joins: pombreda (sid227801@id-227801.tinside.irccloud.com)
[01:14:30] *** Joins: sa (sid1055@id-1055.tinside.irccloud.com)
[01:14:30] *** Joins: itok_ (sid418430@id-418430.ilkley.irccloud.com)
[01:14:30] *** Joins: st3fan (sid43079@id-43079.lymington.irccloud.com)
[01:14:30] *** Joins: nescafe1001 (sid211018@id-211018.tinside.irccloud.com)
[01:14:30] *** Joins: bw (sid2730@user/betawaffle)
[01:14:30] *** Joins: hhes (sid420846@id-420846.ilkley.irccloud.com)
[01:14:30] *** Joins: aarchi (sid486183@id-486183.uxbridge.irccloud.com)
[01:14:30] *** Joins: maxamillion (sid276220@ansible/staff/maxamillion)
[01:14:30] *** Joins: derfj (sid19429@id-19429.tinside.irccloud.com)
[01:14:30] *** Joins: braxas (sid508886@id-508886.lymington.irccloud.com)
[01:14:30] *** Joins: gluon (~gluon@2a01:4f8:c0c:e2da::1)
[01:14:30] *** Joins: sus (zero@user/zeromomentum)
[01:14:30] *** Joins: ofh (~felix@2001:44b8:30f9:18c:6f0:21ff:fe3c:d4d7)
[01:14:30] *** Joins: LtHummus (~lthummus@97-126-100-88.tukw.qwest.net)
[01:14:30] *** Joins: pjs (~pjs@user/pjs)
[01:14:30] *** Joins: jaguar (jag@maddshark.com)
[01:14:30] *** Joins: acohn (~acohn@wikipedia/alex-cohn)
[01:14:30] *** Joins: nperez_ (~nperez@86-93-223-59.fixed.kpn.net)
[01:14:30] *** Joins: haliucinas (~haliucina@5.20.153.21)
[01:14:30] *** Joins: dkeohane2 (~dkeohane@ec2-18-189-29-140.us-east-2.compute.amazonaws.com)
[01:14:30] *** Joins: Nex8192 (~Nex8192@user/nex8192)
[01:14:30] *** Joins: sagax (~sagax_nb@user/sagax)
[01:14:30] *** Joins: hjmcnew____ (sid86092@tinside.irccloud.com)
[01:14:30] *** Joins: pl (sid98063@helmsley.irccloud.com)
[01:14:30] *** Joins: eau (~chat@user/eau)
[01:14:30] *** Joins: eyJhb (~eyJhb@user/eyjhb)
[01:14:30] *** Joins: hexology (~hexology@user/hexology)
[01:14:30] *** Joins: jimeh (~jimeh@51.15.210.236)
[01:14:30] *** Joins: ventic (ircbouncer@3v.fi)
[01:14:30] *** Joins: A_Dragon (A_D@libera/staff/dragon)
[01:14:30] *** Joins: martin_ (nobody@188.113.85.137)
[01:14:30] *** Joins: oliv3 (~olivier@2001:bc8:6005:129:208:a2ff:fe0c:46bc)
[01:14:30] *** Joins: Ugrastil (~Ugrastil@89.40.112.204)
[01:14:30] *** Joins: aram (~aram@9front.army)
[01:14:30] *** Joins: samhza (sam@2600:3c03::f03c:92ff:fe40:814c)
[01:14:30] *** Joins: sjas (~sjas@irc.sjas.de)
[01:14:30] *** Joins: trewq (~trewq@li70-4.members.linode.com)
[01:14:30] *** Joins: void09 (~void@revinin5minute.com)
[01:14:30] *** Joins: albertito (~nil@37.228.204.251)
[01:14:30] *** Joins: mcfrdy (~mcfrdy@user/mcfrdy)
[01:14:30] *** Joins: dmgk (~dmgk@user/dmgk)
[01:14:30] *** Joins: leonardo (~leonardo@user/leonardo)
[01:14:30] *** Joins: nickster (~nickster@67.207.91.6)
[01:14:30] *** Joins: zunk (~zunk@user/zunk)
[01:14:30] *** Joins: philmacfly (~philmacfl@galaxie.weltraumhochofen.space)
[01:14:30] *** Joins: GinjaNinja32 (~nyx@thanatos.gn32.uk)
[01:14:30] *** Joins: Xizor_ (~Xizor@151.ip-51-68-121.eu)
[01:14:30] *** Joins: jzacsh[m]1 (~jzacshdax@2001:470:69fc:105::1:3a69)
[01:14:30] *** Joins: avemestr (~avemestr@2a01:4f8:212:2719::2)
[01:14:30] *** Joins: noobcake2465[m] (~noobcake2@2001:470:69fc:105::cced)
[01:14:30] *** Joins: troseman (~troseman@c-75-70-98-121.hsd1.co.comcast.net)
[01:14:30] *** Joins: Maxattax (~max@50-195-160-193-static.hfc.comcastbusiness.net)
[01:14:30] *** Joins: MrElendig (~Urist@archlinux/op/MrElendig)
[01:14:30] *** Joins: orn (~orn@2a01:6f00:2:a51d:468a:5bff:fea5:bf9d)
[01:14:30] *** Joins: znpy (~znpy@user/znpy)
[01:14:30] *** Joins: Rayke (rayke@user/rayke)
[01:14:30] *** Joins: enick_642 (~dngraymat@2001:470:69fc:105::793b)
[01:14:30] *** Joins: M1000mh[theythem (~M1000mhmo@2001:470:69fc:105::4103)
[01:14:30] *** Joins: meain (~meain@2001:470:69fc:105::2db)
[01:14:30] *** Joins: bloony (~tjellomat@2001:470:69fc:105::3aac)
[01:14:30] *** Joins: happy-dude (~happy-dud@2001:470:69fc:105::b4d7)
[01:14:30] *** Joins: psydroid (~psydroid@user/psydroid)
[01:14:30] *** Joins: mambang[m] (~mambang@user/mambang)
[01:14:30] *** Joins: freswa (~freswa@2001:470:69fc:105::c1ec)
[01:14:30] *** Joins: kadoban (~kadoban@user/kadoban)
[01:14:30] *** Joins: spudly[m] (~spudly@2001:470:69fc:105::18)
[01:14:30] *** Joins: cornfeedhobo (~cornfeedh@user/cornfeedhobo)
[01:14:30] *** Joins: petoem (~petoem@user/petoem)
[01:14:30] *** Joins: TcM1911 (~tcm1911@2001:470:69fc:105::3649)
[01:14:30] *** Joins: sordidwhiskey[m] (~sordidwhi@2001:470:69fc:105::c94e)
[01:14:30] *** Joins: itsjoints (~itsjoints@2001:470:69fc:105::1:29f4)
[01:14:30] *** Joins: Endow[m] (~endowmatr@2001:470:69fc:105::1:21eb)
[01:14:30] *** Joins: fugkco (~fugkcomat@2001:470:69fc:105::c70d)
[01:14:30] *** Joins: dan01[m] (~dan01@2001:470:69fc:105::1:2640)
[01:14:30] *** Joins: gio[m] (~giolekvam@2001:470:69fc:105::1:16a)
[01:14:30] *** Joins: buu (~buu@70-142-48-147.lightspeed.austtx.sbcglobal.net)
[01:14:30] *** strontium.libera.chat sets mode: +v aram
[01:14:30] *** Joins: dove (~jordan@li1158-85.members.linode.com)
[01:14:30] *** Joins: notepad7 (~notepad@129.159.46.243)
[01:14:30] *** Joins: moldorcoder7_ (~moldorcod@37.120.143.28)
[01:14:30] *** Joins: queue- (~nerd@user/queue/x-7267619)
[01:14:30] *** Joins: wolfshappen (~waff@irc.furworks.de)
[01:14:30] *** Joins: TheCoffeMaker (~TheCoffeM@user/thecoffemaker)
[01:14:30] *** Joins: tebruno99 (~tebruno99@user/tebruno99)
[01:14:30] *** Joins: rudi_s (~simon@user/rudi-s/x-7673890)
[01:14:30] *** Joins: hendry (~hendry@210.23.22.8)
[01:14:30] *** Joins: chemsmith (~chemsmith@user/chemsmith)
[01:14:30] *** Joins: hedon (~hedon@user/hedon)
[01:14:30] *** Joins: arcanez (~arcanez@warpedreality.org)
[01:14:30] *** Joins: boingolov (~nastynate@99.26.180.217)
[01:14:30] *** Joins: cnf (~cnf@d5152daf0.static.telenet.be)
[01:14:30] *** Joins: xzr (xzar@shell.troopers.fi)
[01:14:30] *** Joins: eldritch_ (~eldritch@user/eldritch/x-9272577)
[01:14:30] *** Joins: Xu_R (~dev-dsk-x@user/xu-r/x-9187770)
[01:14:30] *** Joins: foxtrot (~foxtrot@user/foxtrot)
[01:14:30] *** Joins: fling (~fling@user/fling)
[01:14:30] *** Joins: paddymahoney (~paddymaho@cpe9050ca207f83-cm9050ca207f80.cpe.net.cable.rogers.com)
[01:14:30] *** Joins: schaeffer (~schaeffer@user/schaeffer)
[01:14:30] *** Joins: CRThaze1 (~weechat@188.166.44.58)
[01:14:30] *** Joins: pieguy128 (~pieguy128@bas1-quebec14-67-70-102-17.dsl.bell.ca)
[01:14:30] *** Joins: lux0r (~lux0r@65.56.68.34.bc.googleusercontent.com)
[01:14:30] *** Joins: loggingbot (~loggingbo@user/loggingbot)
[01:14:30] *** Joins: b0nn (~shane@user/b0nn)
[01:14:30] *** Joins: ziofork (~ziofork@fr.worn.eu)
[01:14:30] *** Joins: jesk (~jesk@stakka.errxtx.net)
[01:14:30] *** Joins: ChanServ (ChanServ@services.libera.chat)
[01:14:30] *** Joins: mrus (~mrus@149.28.224.172)
[01:14:30] *** Joins: ds (~ds@user/ds)
[01:14:30] *** Joins: Patater (~patater@104.248.173.85)
[01:14:30] *** Joins: dg (~dgl@dg.wtf)
[01:14:30] *** Joins: opcode (~nathan@user/opcode)
[01:14:30] *** Joins: SoF (~skius@user/skius)
[01:14:30] *** Joins: achilleas (ach@user/achilleas)
[01:14:30] *** Joins: dfch (~dfch@user/dfch)
[01:14:30] *** Joins: Haise0 (~haise01@user/haise01)
[01:14:30] *** Joins: bsandro (~bsandro@139.138.197.56)
[01:14:30] *** Joins: connor_goodwolf (~connor@user/connor-goodwolf/x-2615606)
[01:14:30] *** Joins: mkbloke (~mkbloke@vps.cammo.me.uk)
[01:14:30] *** Joins: flam (~flam@clairlair.xyz)
[01:14:30] *** Joins: Artea (~Lufia@artea.com.pt)
[01:14:30] *** Joins: cp- (~cp-@b157153.ppp.asahi-net.or.jp)
[01:14:30] *** Joins: effprime (~effprime@user/effprime)
[01:14:30] *** Joins: burakcank (~burakcank@has.arrived.and.is.ready-to.party)
[01:14:30] *** strontium.libera.chat sets mode: +o ChanServ
[01:14:30] *** Joins: chameleon (~chameleon@62.ip-51-89-164.eu)
[01:14:30] *** Joins: lord4163 (~lord4163@90-230-194-205-no86.tbcn.telia.com)
[01:14:30] *** Joins: vulp1ne (16abab341f@foxes.are.allowed.org)
[01:14:30] *** Joins: VSpike (~johncc@2001:bc8:47ac:1a22::1)
[01:14:30] *** Joins: hwm4rgs (~hwm4rgs@user/hwm4rgs)
[01:14:30] *** Joins: wkalt (~wkalt@user/wkalt)
[01:14:30] *** Joins: Rudde (~rudde@netboot.io)
[01:14:30] *** Joins: gueorgui (~gueorgui@user/gueorgui)
[01:14:30] *** Joins: kochchef (~quassel@80.146.255.46)
[01:14:30] *** Joins: gijs (~gpeskens@94-208-100-217.cable.dynamic.v4.ziggo.nl)
[01:14:30] *** Joins: glats (~glats@45.77.73.141)
[01:14:30] *** Joins: matthewcroughan_ (~quassel@static.211.38.12.49.clients.your-server.de)
[01:14:30] *** Joins: gbmor (ben@gbmor.dev)
[01:14:30] *** Joins: jhchabran (~jhchabran@user/jhchabran)
[01:14:30] *** Joins: krjst (~krjst@2604:a880:800:c1::16b:8001)
[01:14:30] *** Joins: frobnitz (~ian@photon.remmler.org)
[01:14:30] *** Joins: ollien (~ollien@ollien.com)
[01:14:30] *** Joins: Mutsumi (~Mutsumi@99-93-141-12.lightspeed.mssnks.sbcglobal.net)
[01:14:30] *** Joins: kinlo (~peter@user/kinlo)
[01:14:30] *** Joins: dostoyevsky2 (~sck@user/dostoyevsky2)
[01:14:30] *** Joins: dupondje (~dupondje@artemis.dupie.be)
[01:14:30] *** Joins: OnkelUlla (~uol@ptx.hi.pengutronix.de)
[01:14:30] *** Joins: Tykling (~tykling@irc.tyknet.dk)
[01:14:30] *** Joins: SJrX (~sjr@S0106302303dfb018.vf.shawcable.net)
[01:14:30] *** Joins: shiroyasha (~shiroyash@ec2-3-124-70-31.eu-central-1.compute.amazonaws.com)
[01:14:30] *** Joins: preisi (~preisi@irc.prei.si)
[01:14:30] *** Joins: SmokedCheese (nyoroon@2a01:7e01::f03c:91ff:fed1:d9ef)
[01:14:30] *** Joins: klaas (~klaas@simply.kla.as)
[01:14:30] *** Joins: karl (~Karlssel@2001:41d0:8:9a4b::1)
[01:14:30] *** Joins: goplay (uQokv148jU@user/goplay)
[01:14:30] *** Joins: roasbeef (~roasbeef@104.131.26.124)
[01:14:30] *** Joins: Disconsented (~quassel@107.170.227.20)
[01:14:30] *** Joins: bertiger (~bertiger@user/bertiger)
[01:14:30] *** Joins: strudl (~strudl@user/strudl)
[01:14:30] *** Joins: darkmuggle (darkmuggle@here.for-the.chat)
[01:14:30] *** Joins: daved (~daved@162.67.197.35.bc.googleusercontent.com)
[01:14:30] *** Joins: j416 (~j416@user/j416)
[01:14:30] *** Joins: Thedarkb-Work (~Thedarkb@62.232.253.82)
[01:14:30] *** Joins: zutt (~zutt@user/zutt)
[01:14:30] *** Joins: redquasar (~redquasar@redquasar.xyz)
[01:14:30] *** Joins: aml (~antoon_i@h-85-24-213-163.A392.priv.bahnhof.se)
[01:14:30] *** Joins: LawnGnome (~LawnGnome@user/lawngnome)
[01:14:30] *** Joins: n1000 (~n1000@user/n1000)
[01:14:30] *** Joins: LogicAside (~LogicAsid@user/logicaside)
[01:14:30] *** Joins: bradp- (~bradp@cpe-70-92-7-182.wi.res.rr.com)
[01:14:30] *** Joins: edr (~edr@user/edr)
[01:14:30] *** Joins: dansan (~daniel@75.81.148.51)
[01:14:30] *** Joins: AndrewYu (~andrew@user/andrewyu)
[01:14:30] *** Joins: con3 (~con3@143.198.53.32)
[01:14:30] *** Joins: chder (~chder@user/chder)
[01:14:30] *** Joins: newton (james@user/newton)
[01:14:30] *** Joins: ramrunner (~dsp@78.141.218.152)
[01:14:30] *** Joins: Freman (~Freman@flatus.fremnet.net)
[01:14:30] *** Joins: idstam (~idstam@2.70.144.43.mobile.tre.se)
[01:14:30] *** Joins: mjanssen (mpcjanssen@2a01:7e01::f03c:92ff:fe02:7c97)
[01:14:30] *** Joins: jjakob_ (~quassel@2a01:260:8028:10f0::62)
[01:14:30] *** Joins: caverton (~caverton@ercro.tech)
[01:14:30] *** Joins: riv (river@tilde.team/user/river)
[01:14:30] *** Joins: Shimmy (~Shimmy@user/shimmy)
[01:14:30] *** Joins: jsanford (~jsanford@user/jsanford)
[01:14:30] *** Joins: jiqiren (~jiqiren@oh-hi.org)
[01:14:30] *** Joins: deniska (~denis@user/deniska)
[01:14:30] *** Joins: vhost- (~vhost@65.102.48.134)
[01:14:30] *** Joins: jolan (~jolan@ec2.jolan.org)
[01:14:30] *** Joins: Fish (~Fish@cartwheel.9grid.fr)
[01:14:30] *** Joins: fizzie (irc@selene.zem.fi)
[01:14:32] *** Quits: burningserenity (~burningse@142-196-178-216.res.spectrum.com) (Ping timeout: 256 seconds)
[01:14:33] *** Quits: glider (~glider@user/glider) (Max SendQ exceeded)
[01:15:05] *** Quits: Alina-malina (~Alina-mal@user/alina-malina) (Ping timeout: 268 seconds)
[01:15:14] *** Joins: Spydar007 (~spydar007@user/spydar007)
[01:15:21] *** Joins: glider (~glider@user/glider)
[01:15:27] *** Joins: lucerne (~lucerne@ip202.ip-51-178-215.eu)
[01:16:32] *** Joins: Alina-malina (~Alina-mal@user/alina-malina)
[01:24:00] *** Quits: mickey8 (~user@user/mickey) (Quit: Ping timeout (120 seconds))
[01:24:17] *** Joins: mickey8 (~user@user/mickey)
[01:27:11] *** Joins: Asgaroth (~Asgaroth@93.107.191.92)
[01:28:29] *** Joins: sdfgsdfg (~sdfgsdfg@user/sdfgsdfg)
[01:28:29] *** Quits: Seirdy (~Seirdy@sourcehut/user/seirdy) (Ping timeout: 252 seconds)
[01:32:04] *** Quits: kn100 (~kn100@wireguard/tunneler/kn100) (Read error: Connection reset by peer)
[01:32:25] *** Joins: kn100 (~kn100@wireguard/tunneler/kn100)
[01:33:58] *** Joins: Seirdy (~Seirdy@sourcehut/user/seirdy)
[01:34:52] *** Quits: 042AAAPLS (~burningse@2603:9001:f01:ad99::100b) (Quit: ZNC 1.8.2 - https://znc.in)
[01:36:26] <bpalmer> adip: some modern languages are allowed to do so. For example, rust allows compiler reordering of fields.
[01:36:44] *** Quits: sdfgsdfg (~sdfgsdfg@user/sdfgsdfg) (Ping timeout: 252 seconds)
[01:37:06] <b0nn> does rust also allow positional arguments when instantiating a struct?
[01:37:28] <b0nn> Or do they all need to be named
[01:37:31] <bpalmer> it doesn't matter either way; it would simply have to handle it in the "constructor"
[01:37:57] <b0nn> Ok, so there's no way to do it with positional arguments
[01:38:20] <b0nn> That's the answer I was looking for - it seems to me that that's the choice that needs to be made
[01:38:44] <bpalmer> I don't know what you mean; it's straightforward to have the compiler do the mapping when it sees an initialization
[01:39:11] <b0nn> 08:05 < b0nn> how would you reorganise the positional fields in this struct{X int, Two float32, Y int}{1, 2.0, 3}
[01:39:27] <b0nn> Which is X and which is Y in that scenario?
[01:39:33] <bpalmer> the compiler would know that the third position argument gets written to wherever it decided Y would be located
[01:40:00] <bpalmer> because the logical ordering is X, Two, Y  and everything that the developer writes is in term of that logical ordering.
[01:40:00] *** Joins: sdfgsdfg (~sdfgsdfg@user/sdfgsdfg)
[01:40:32] <b0nn> Hmm, would love to see a real world example of that working
[01:40:39] *** Quits: halden (~halden@lden.im) (Read error: Connection reset by peer)
[01:40:39] <bpalmer> The only thing this clearly breaks on is if you use unsafe constructs like reinterpreting the struct as bytes, messing with it, and then casting back to the real object.
[01:42:09] *** Joins: halden (~halden@lden.im)
[01:44:04] <bpalmer> type S struct{ X int, Two float32, Y int }; S{1, 2.0, 3} <-- the compiler first allocates memory with something like m := malloc(sizeof(S)); then it does *(int*)((char*)m+offsetof(m, X)) = 0x1; *(float32*)((char*)m+offsetof(m, Two)) = 2.0; *(int*)((char*)m+offsetof(m, Y)) = 3;
[01:44:07] <leitz> Contrary to web tutorials, can you not append a slice to a slice?
[01:44:14] <bpalmer> using a hideous butchery of C and go syntax there.
[01:44:28] <b0nn> leitz: look at ...
[01:45:01] <leitz> https://go.dev/play/p/M2ijeCLif7H
[01:45:03] <bpalmer> b0nn: everything is defined in terms of offsetof(Type, FieldName)  , which the compiler is completely in charge of.
[01:45:19] <b0nn> https://go.dev/play/p/VtJd4DoVOys
[01:45:58] *** Quits: Gnuman (~gnuman@user/gnuman) (Quit: The number you have dialed is no longer in service..)
[01:45:58] *** Quits: LogicAside (~LogicAsid@user/logicaside) (Quit: That's a thinker...)
[01:45:59] <bpalmer> Rust (and go, should go allow it; I'm not sure if ti does or not) don't allow direct memory access in safe code or pointer arithmetic, so there's no way for a user to see how things are ordered
[01:46:07] <bpalmer> no safe way
[01:46:24] <b0nn> bpalmer: it's a /wild guess/ that what the developer has supplied and what the compiler has decided match
[01:46:59] <b0nn> the runtime lookup would be slow too
[01:47:35] <leitz> b0nn, I'm working on an exercism task, and I don't think explicitly typing in the second slice is gonna work.
[01:47:40] <bpalmer> Most of this would be handled at compile time. You'd also have to include a permutation in the type's runtime metadata, for use with reflect.GetFieldByIndex
[01:48:01] <bpalmer> but reflect is already slow.
[01:48:38] <b0nn> leitz: the explicit was lazy on my part.. the ... is what was being demonstrated
[01:49:03] *** Joins: Gnuman (~gnuman@user/gnuman)
[01:49:04] <b0nn> https://go.dev/play/p/8miEXrAKeZN
[01:49:36] <bpalmer> Incidentally, you get this sort of order mapping with interfaces already: interface { Foo(); Bar(); } but a struct may define them in the opposite order Bar() and Foo(). reflect.Method takes an an index which is the logical ordering
[01:51:37] *** Joins: LogicAside (~LogicAsid@user/logicaside)
[01:52:12] <pinky> https://pkg.go.dev/net#Resolver.LookupIPAddr
[01:52:20] <pinky> this says added in go 1.8, is that right?
[01:53:04] *** Quits: kn100 (~kn100@wireguard/tunneler/kn100) (Ping timeout: 264 seconds)
[01:53:43] <b0nn> looks like Brad added it in 2016
[01:54:09] <b0nn> https://cs.opensource.google/go/go/+/refs/tags/go1.17.3:src/net/lookup.go;l=605
[01:54:21] <b0nn> hrm, not sure if that will toggle the blame or not
[01:54:33] *** Quits: dalek-caan (~Thunderbi@109.252.124.86) (Quit: dalek-caan)
[01:54:47] <pinky> oh wait i might be dumb and was confused .. its the resolver type that method is on
[01:54:49] <pinky> sorry
[01:55:05] <leitz> b0nn, thanks! I missed the ...
[01:55:08] <pinky> theres a `net.LookupIP` and that threw me off
[01:55:08] *** Joins: arinov (~arinov@213.194.126.155)
[01:55:36] <b0nn> leitz: it's a PITA to Google too
[01:57:35] *** Joins: rickybob (~rickybob@35.143.255.39)
[01:59:40] *** Quits: paulgrmn_ (~paulgrmn@user/paulgrmn) (Ping timeout: 264 seconds)
[02:07:19] *** Quits: smrtz (~smrtz@user/smrtz) (Quit: Client closed)
[02:07:54] *** Joins: lauraaah (uid156848@id-156848.ilkley.irccloud.com)
[02:10:26] *** Joins: kn100 (~kn100@wireguard/tunneler/kn100)
[02:13:35] *** Quits: Seirdy (~Seirdy@sourcehut/user/seirdy) (Quit: exiting 3.3)
[02:14:51] *** Quits: shtirlic (~shtirlic@178.70.138.122) (Ping timeout: 265 seconds)
[02:16:26] *** Quits: mrig (~mrig@user/mrig) (Quit: WeeChat 3.0)
[02:16:28] *** Joins: shtirlic (~shtirlic@95-55-122-103.dynamic.avangarddsl.ru)
[02:16:35] *** Quits: jaca122 (~Thunderbi@89-65-136-254.dynamic.chello.pl) (Read error: Connection reset by peer)
[02:18:12] *** Joins: rickybobby (rickybob@gateway/vpn/protonvpn/rickybob)
[02:19:50] *** Quits: henry40408 (~henry4040@112.104.114.35) (Read error: Connection reset by peer)
[02:20:59] *** Quits: kn100 (~kn100@wireguard/tunneler/kn100) (Quit: https://kn100.me :))
[02:21:35] *** Joins: henry40408 (~henry4040@112-104-114-35.adsl.dynamic.seed.net.tw)
[02:21:45] *** Quits: rickybob (~rickybob@35.143.255.39) (Ping timeout: 256 seconds)
[02:22:28] *** Joins: kn100 (~kn100@wireguard/tunneler/kn100)
[02:25:35] *** Quits: saml (~saml@cpe-74-73-80-162.nyc.res.rr.com) (Quit: Leaving)
[02:30:05] *** Joins: sav (~savio@177.12.48.155)
[02:30:29] *** sav is now known as Guest999
[02:31:24] *** Joins: Mattiaslndstrm (~Mattiasln@c213-103-137-235.bredband.tele2.se)
[02:31:25] *** Quits: mickey8 (~user@user/mickey) (Quit: Ping timeout (120 seconds))
[02:31:35] *** Quits: Mattiaslndstrm (~Mattiasln@c213-103-137-235.bredband.tele2.se) (Client Quit)
[02:31:39] *** Joins: mickey8 (~user@user/mickey)
[02:32:39] *** Joins: khyr0n_ (~khyr0n@2806:2f0:9280:bbf:4d6:3f9b:42a7:9ca0)
[02:35:08] *** Joins: paulgrmn__ (~paulgrmn@user/paulgrmn)
[02:35:52] *** Quits: khyr0n (~khyr0n@2806:2f0:9141:3fe2:bb78:4af:5c64:e531) (Ping timeout: 268 seconds)
[02:40:26] *** Joins: jackneilll (~jackneill@20014C4E1813AE00EA0EEE9F18FD44D5.dsl.pool.telekom.hu)
[02:42:26] *** Quits: jackneill (~jackneill@20014C4E1813AE00725516C168831FC1.dsl.pool.telekom.hu) (Ping timeout: 245 seconds)
[02:43:39] *** Joins: tyson2 (~user@bras-base-toroon0624w-grc-19-70-31-33-162.dsl.bell.ca)
[02:45:05] *** Quits: Guest999 (~savio@177.12.48.155) (Quit: Leaving)
[02:51:21] *** Quits: sdfgsdfg (~sdfgsdfg@user/sdfgsdfg) (Quit: ZzzZ)
[02:55:51] *** wnd-conn is now known as wnd
[02:56:40] *** Quits: fikran (~fikran@user/fikran) (Ping timeout: 264 seconds)
[02:58:15] *** Joins: fikran (~fikran@user/fikran)
[03:00:22] <leitz> For those of us looking to get Go based jobs, is there a good place to ask advice from hiring managers in the field? Not "can I have a job", but things like "how would Situation X present to you, and how could I make it stronger?"
[03:00:58] *** Quits: ventic (ircbouncer@3v.fi) (Quit: ZNC - http://znc.in)
[03:01:26] *** Quits: noord (~noord@user/noord) (Quit: WeeChat 3.3)
[03:02:20] *** Joins: ventic (ircbouncer@3v.fi)
[03:03:17] *** Joins: jaca122 (~Thunderbi@89-65-136-254.dynamic.chello.pl)
[03:03:34] *** Quits: jaca122 (~Thunderbi@89-65-136-254.dynamic.chello.pl) (Client Quit)
[03:04:34] *** Quits: ventic (ircbouncer@3v.fi) (Client Quit)
[03:06:34] *** Quits: rairden (~rairden@2603:9000:de04:9613::1a20) (Quit: rairden)
[03:09:13] *** Quits: NCS_One (~NCS_One@bl11-90-133.dsl.telepac.pt) (Quit: Lost terminal)
[03:16:28] *** Quits: paulgrmn__ (~paulgrmn@user/paulgrmn) (Ping timeout: 264 seconds)
[03:18:21] *** Quits: lazyreader (~lazyreade@user/lazyreader) (Quit: The Lounge - https://thelounge.chat)
[03:19:25] *** Joins: lazyreader (~lazyreade@user/lazyreader)
[03:19:37] *** Quits: danmurf (uid480399@user/danmurf) (Quit: Connection closed for inactivity)
[03:19:58] *** Quits: Gnuman (~gnuman@user/gnuman) (Quit: The number you have dialed is no longer in service..)
[03:19:58] *** Quits: LogicAside (~LogicAsid@user/logicaside) (Quit: That's a thinker...)
[03:21:48] <b0nn> It's luck, it's luck all the way down
[03:22:18] <b0nn> It's about having the right combination of skills at the right level, at the right time
[03:23:05] *** Joins: Gnuman (~gnuman@user/gnuman)
[03:23:50] <leitz> Getting the right skills, and presenting them well, isn't luck. Though I do agree that luck plays a part.
[03:24:09] *** Joins: LogicAside (~LogicAsid@user/logicaside)
[03:24:22] <b0nn> I mean, I've been turned down for Go roles because: Not enough Ruby, Not enough Ruby on Rails, Not enough Java Spring, not enough MySQL, and so on
[03:24:45] <b0nn> Oh, and not enough PHP
[03:24:51] <leitz> I started my career as a manual laborer in a furniture factory, and now I code for a living. I ain't *that* lucky.
[03:25:15] <b0nn> I have an honours degree in Computer Science - I know what I'm talking abouty
[03:25:35] <leitz> True, but you have Go. I have an very small bit of Go, but enough other experience that I can hopefully show value.
[03:25:49] <b0nn> hopefully == luck
[03:28:57] <albertito> leitz: fwiw, I don't think there's anything particularly different about hiring for Go. There's a lot of variation in hiring, between the differences in roles, companies, and people involved; that applies to any language.
[03:29:38] <KirkMcDonald> However, luck does not happen in a vacuum. You can work to encourage the circumstances in which luck can occur: Collect what skills you have, be persistent in in looking for what you want.
[03:29:40] <albertito> leitz: I guess ask some experienced folks you know?
[03:31:35] <leitz> albertito, I am.  :)  Sadly, my work team is small and the really good devs left.
[03:31:59] *** Quits: normen (~normen@p200300d71725d60001ed576a403e10d5.dip0.t-ipconnect.de) (Ping timeout: 268 seconds)
[03:32:13] <KirkMcDonald> s/in in/in/
[03:33:06] *** Quits: smeeagle (~smeeagle@2a00:23c8:9611:e600:2446:13de:20ec:764f) (Quit: smeeagle)
[03:33:22] <albertito> leitz: if you have their personal contacts, reach out? in my experience, usually folks don't mind asking questions, especially from people they know
[03:34:49] <b0nn> The pandemic has killed a lot of networking; no more meetups
[03:36:16] *** Quits: DogHackit (~nathanren@c-76-27-57-63.hsd1.ut.comcast.net) (Ping timeout: 264 seconds)
[03:36:49] *** Joins: GinGin3203 (~GinGin320@188.243.182.177)
[03:37:19] <GinGin3203> join #Schemaverse
[03:40:44] *** Quits: krux02 (~krux02@p200300e8170c11004db6e8013ca32c23.dip0.t-ipconnect.de) (Remote host closed the connection)
[03:40:52] *** Quits: GinGin3203 (~GinGin320@188.243.182.177) (Client Quit)
[03:41:06] *** Joins: GinGin3203 (~GinGin320@188.243.182.177)
[03:42:24] *** Quits: GinGin3203 (~GinGin320@188.243.182.177) (Client Quit)
[03:42:39] *** Joins: GinGin3203 (~GinGin320@188.243.182.177)
[03:43:20] *** Joins: CaryHartline (~CaryHartl@2603-8080-6a0e-8d88-bc7b-beb0-653c-822c.res6.spectrum.com)
[03:47:12] *** Joins: getynge (~getynge@2601:702:80:2fc0::a0a3)
[03:49:00] *** Joins: DogHackit (~nathanren@c-76-27-57-63.hsd1.ut.comcast.net)
[03:49:43] *** Joins: Atque (~Atque@user/atque)
[03:52:44] *** Joins: paulgrmn__ (~paulgrmn@user/paulgrmn)
[03:53:41] *** Quits: DogHackit (~nathanren@c-76-27-57-63.hsd1.ut.comcast.net) (Ping timeout: 252 seconds)
[03:54:49] *** Quits: egy (egy@tilde.team) (Ping timeout: 268 seconds)
[03:55:18] *** Joins: noord (~noord@user/noord)
[03:57:32] *** Quits: arinov (~arinov@213.194.126.155) (Ping timeout: 252 seconds)
[03:58:39] *** Joins: normen (~normen@p200300d71725d60001ed576a403e10d5.dip0.t-ipconnect.de)
[04:06:29] *** Joins: shtirlic_ (~shtirlic@95-55-26-4.dynamic.avangarddsl.ru)
[04:07:21] *** Joins: DogHackit (~nathanren@c-76-27-57-63.hsd1.ut.comcast.net)
[04:07:43] *** Quits: shtirlic (~shtirlic@95-55-122-103.dynamic.avangarddsl.ru) (Ping timeout: 256 seconds)
[04:09:24] *** Joins: saml (~saml@cpe-74-73-80-162.nyc.res.rr.com)
[04:11:27] *** Quits: GinGin3203 (~GinGin320@188.243.182.177) (Quit: WeeChat 3.3)
[04:12:49] *** Quits: adip (~adip@deq245.neoplus.adsl.tpnet.pl) (Ping timeout: 256 seconds)
[04:15:15] <seebs> my favorite silly outcome was a job that declined me for a Go role because I had too much C background
[04:15:38] <seebs> also, leitz, gopher slack has a "jobs-discussion" channel, which is sometimes good
[04:17:33] *** Joins: egy (egy@tilde.team)
[04:20:45] *** Quits: DogHackit (~nathanren@c-76-27-57-63.hsd1.ut.comcast.net) (Ping timeout: 256 seconds)
[04:21:54] *** Quits: lauraaah (uid156848@id-156848.ilkley.irccloud.com) (Quit: Connection closed for inactivity)
[04:23:42] <zsnes> too much C background, wtf?
[04:23:47] <zsnes> how is that ever a downside
[04:24:37] <b0nn> Why people feel the need to gatekeep is beyond me - sure there's a need for coverage of some or most of the stack in use at $company, but I've never seen two companies with the same set of tech in play
[04:24:46] *** Joins: Mattiaslndstrm (~Mattiasln@c213-103-137-235.bredband.tele2.se)
[04:24:55] *** Joins: gcd (gd@104-9-69-236.lightspeed.nsvltn.sbcglobal.net)
[04:25:17] *** Quits: Mattiaslndstrm (~Mattiasln@c213-103-137-235.bredband.tele2.se) (Client Quit)
[04:27:09] <leitz> My main challenge is that I'm coming in from a side-ways career move, and figuring out how to show the related skills are a bonus.
[04:27:27] <leitz> And yeah, I have no idea how "too much C" could be an issue.
[04:27:59] <leitz> They may have had someone else they wanted to hire, but had to go through the motions of interviews.
[04:29:57] *** Joins: orthoplex64 (~crm@70.120.0.94)
[04:31:28] *** Quits: normen (~normen@p200300d71725d60001ed576a403e10d5.dip0.t-ipconnect.de) (Ping timeout: 264 seconds)
[04:32:02] *** Joins: frost (~frost@user/frost)
[04:35:21] *** Joins: DogHackit (~nathanren@c-76-27-57-63.hsd1.ut.comcast.net)
[04:35:40] *** Quits: beholders_eye (~weechat@2804:1b3:70c2:5cd6:3fd9:ddd1:99a3:642) (Ping timeout: 264 seconds)
[04:36:50] <leitz> KirkMcDonald, part of my task is figuring out how to best present my skills to a hiring manager.
[04:37:18] <b0nn> Not the hiring manager.
[04:40:01] *** Quits: DogHackit (~nathanren@c-76-27-57-63.hsd1.ut.comcast.net) (Ping timeout: 256 seconds)
[04:45:41] <leitz> In my case it's usually the hiring manager. I have enough related stuff to get through the recruiter screen. Well, for things I want to do, there are a lot of compsci fields that I don't know anything about and don't try to sell myself in.
[04:45:51] *** Quits: alzgh (~alzgh@user/alzgh) (Remote host closed the connection)
[04:46:02] *** Quits: predmijat (~predmijat@mail.strogopro.com) (Quit: bye)
[04:46:14] <b0nn> Have you ever got a job in CS?
[04:46:29] *** Quits: w1ke (~w1ke@user/w1ke) (Ping timeout: 252 seconds)
[04:47:42] *** Joins: predmijat (~predmijat@mail.strogopro.com)
[04:47:44] *** Joins: w1ke (~w1ke@user/w1ke)
[04:48:17] <leitz> Depends on if you mean academic CS (nope), or with computers in general (yep).
[04:48:22] <b0nn> Most jobs (say 95%) it's recruiter screen -> take home/code in front of another dev -> chat about the code -> culture fit (and that's HR/hiring manager)
[04:48:35] <b0nn> oh god, you want to play games
[04:48:38] <b0nn> best of luck
[04:48:52] <leitz> No, I want to understand the term you're using.
[04:50:11] <leitz> "computer science", as an academic field goes into a lot of math, ML, AI, etc. Being a Linux guy/Programmer is a different, but related, field.
[04:50:21] <b0nn> "Can he follow directions from senior staff" - based on IRC - That's an emphatic No. He just wants to play games
[04:56:22] <noord> leitz: the criterias are simple, does he can do things without supervision, does he can follow directions with little help, is he fluent at least one programming language
[04:56:43] <noord> most of them doesn't care culture fit
[04:56:50] <noord> dont*
[04:58:43] <leitz> noord, I've seen the culture fit go both ways. Some of the larger companies just hire bodies, and you're right; culture fit isn't an issue.
[04:59:03] *** Quits: Atque (~Atque@user/atque) (Quit: ...)
[04:59:39] *** Quits: rickybobby (rickybob@gateway/vpn/protonvpn/rickybob) (Quit: rickybobby)
[04:59:47] <leitz> I've also seen culture fit be the first thing on their minds; it really depends on the team.
[05:00:19] <noord> In the interviews I don't care how nice or kind the candidate is, if some can not implement a simple data structure without help
[05:00:26] <noord> it is a big no
[05:01:15] *** Quits: frost (~frost@user/frost) (Quit: Ping timeout (120 seconds))
[05:02:07] *** Quits: theoceaniscool (~theoceani@119.12.232.133) (Ping timeout: 256 seconds)
[05:04:24] *** Joins: Atque (~Atque@user/atque)
[05:05:13] *** Joins: frost (~frost@user/frost)
[05:05:31] *** Quits: fikran (~fikran@user/fikran) (Ping timeout: 256 seconds)
[05:07:36] *** Joins: fikran (~fikran@user/fikran)
[05:08:33] *** Joins: DogHackit (~nathanren@c-76-27-57-63.hsd1.ut.comcast.net)
[05:11:49] *** Joins: arandomcomrade (~arandomco@user/arandomcomrade)
[05:13:59] *** Quits: lxsameer (~lxsameer@user/lxsameer) (Ping timeout: 252 seconds)
[05:17:27] *** hexology is now known as hexology_
[05:17:51] *** hexology_ is now known as hexology__
[05:18:08] *** hexology__ is now known as hexology`
[05:18:12] *** hexology` is now known as hexology_`
[05:18:57] *** hexology_` is now known as hexology
[05:21:33] *** Joins: burningserenity (~burningse@2603:9001:f01:ad99::100f)
[05:24:37] *** Quits: pepee (~pepee@user/pepee) (Quit: WeeChat 2.8)
[05:27:11] *** Quits: DogHackit (~nathanren@c-76-27-57-63.hsd1.ut.comcast.net) (Ping timeout: 252 seconds)
[05:33:39] *** Joins: normen (~normen@p200300d71725d60001ed576a403e10d5.dip0.t-ipconnect.de)
[05:36:34] *** Joins: Devilirium (~Deviliriu@catv-80-99-193-173.catv.broadband.hu)
[05:40:14] *** Joins: DogHackit (~nathanren@c-76-27-57-63.hsd1.ut.comcast.net)
[05:40:53] <leitz> Night, all.
[05:40:59] *** Quits: leitz (~LeamHall@cpe-173-172-58-72.tx.res.rr.com) (Quit: nappy time)
[05:44:37] *** Quits: DogHackit (~nathanren@c-76-27-57-63.hsd1.ut.comcast.net) (Ping timeout: 256 seconds)
[05:51:57] *** Joins: smeeagle (~smeeagle@host31-48-139-30.range31-48.btcentralplus.com)
[05:54:39] *** Quits: burningserenity (~burningse@2603:9001:f01:ad99::100f) (Quit: ZNC 1.8.2 - https://znc.in)
[05:57:00] *** Quits: getynge (~getynge@2601:702:80:2fc0::a0a3) (Remote host closed the connection)
[06:01:39] *** Quits: victori (~victori@cpe-76-174-179-126.socal.res.rr.com) (Read error: Connection reset by peer)
[06:01:55] *** Joins: victori (~victori@cpe-76-174-179-126.socal.res.rr.com)
[06:03:04] *** Quits: normen (~normen@p200300d71725d60001ed576a403e10d5.dip0.t-ipconnect.de) (Ping timeout: 268 seconds)
[06:05:41] <b0nn> noord: what simple structures do you put in front of candidates
[06:05:45] *** Joins: x88x88x (~cheeg@gateway/vpn/pia/x88x88x)
[06:07:05] <b0nn> I had a job interview once and they expected me to write an A* search in front of them then and there (I politely declined)
[06:07:30] *** Quits: amolith (~amolith@nixnet/founder/amolith) (Quit: o/)
[06:09:55] *** Joins: amolith (d1421e166a@nixnet/founder/amolith)
[06:13:35] *** Joins: DogHackit (~nathanren@c-76-27-57-63.hsd1.ut.comcast.net)
[06:13:43] <Tv_> even extremely simple things cut out a lot of the fluff you really don't need to spend many person-hours interviewing
[06:14:27] <Tv_> like, if your desired position is someone dealing with low-level storage & database issues, custom disk formats, etc, and you can't convert 0x2a to decimal even with pen & paper, yes i am going to recommend no-hire
[06:15:12] <Tv_> same thing if you can't convert binary 00000100 to decimal with pen & paper
[06:15:46] <Tv_> but naturally that depends on the job you apply for, a webdev probably doesn't need that background
[06:19:20] <b0nn> That reminds me: Right now Github, Gitlab, Microsoft (Azure), and IBM/Red Hat are looking for Go devs
[06:19:55] <b0nn> The latter two are looking for people to code for their k8s/cloud management software
[06:20:22] *** launchd is now known as BuddyTheElf
[06:24:37] <Tv_> OpenShift's survival never ceases to amaze me
[06:25:15] <Tv_> like, they'll just apply that name to whatever Enterprise Container Solution(tm) they happen to be selling at the tie
[06:25:16] <Tv_> *time
[06:26:58] *** Joins: pmcnabb (~pmcnabb@user/pmcnabb)
[06:29:32] *** Quits: rockyh (~rockyh@user/rockyh) (Ping timeout: 260 seconds)
[06:32:05] *** Quits: DogHackit (~nathanren@c-76-27-57-63.hsd1.ut.comcast.net) (Ping timeout: 252 seconds)
[06:35:07] *** Joins: motyar (~motyar@2409:4052:4e03:98ed:3415:19a:7b43:1229)
[06:36:12] *** Joins: rockyh (~rockyh@user/rockyh)
[06:36:50] *** Quits: motyar (~motyar@2409:4052:4e03:98ed:3415:19a:7b43:1229) (Client Quit)
[06:41:57] *** Quits: smeeagle (~smeeagle@host31-48-139-30.range31-48.btcentralplus.com) (Quit: smeeagle)
[06:44:39] *** Joins: be3uykpy_ (~be3uykpy@2a00:a040:19a:b060:1ce1:8bdb:cbba:1c0e)
[06:45:44] *** Joins: DogHackit (~nathanren@c-76-27-57-63.hsd1.ut.comcast.net)
[06:48:02] *** Quits: be3uykpy (~be3uykpy@2a00:a040:19a:b060:f1ac:429b:e0b:8fee) (Ping timeout: 252 seconds)
[06:50:04] *** Quits: DogHackit (~nathanren@c-76-27-57-63.hsd1.ut.comcast.net) (Ping timeout: 264 seconds)
[06:56:48] *** Joins: paulgrmn_ (~paulgrmn@user/paulgrmn)
[06:58:28] *** Joins: shtirlic (~shtirlic@95-55-26-4.dynamic.avangarddsl.ru)
[06:59:04] *** Quits: amolith (d1421e166a@nixnet/founder/amolith) (Remote host closed the connection)
[06:59:11] *** Joins: amolith (d1421e166a@nixnet/founder/amolith)
[06:59:59] *** Quits: shtirlic_ (~shtirlic@95-55-26-4.dynamic.avangarddsl.ru) (Ping timeout: 256 seconds)
[07:00:45] *** Quits: amolith (d1421e166a@nixnet/founder/amolith) (Remote host closed the connection)
[07:00:51] *** Joins: amolith (d1421e166a@nixnet/founder/amolith)
[07:01:10] *** Quits: amolith (d1421e166a@nixnet/founder/amolith) (Remote host closed the connection)
[07:01:17] *** Joins: amolith (d1421e166a@nixnet/founder/amolith)
[07:01:27] *** Quits: amolith (d1421e166a@nixnet/founder/amolith) (Remote host closed the connection)
[07:01:33] *** Joins: amolith (d1421e166a@nixnet/founder/amolith)
[07:02:02] *** Quits: andlabs (~andlabs@2a00:79e1:abc:1a12:1c46:a12e:3d70:7b88) (Quit: My MacBook has gone to sleep. ZZZzzz…)
[07:08:23] *** Quits: paulgrmn_ (~paulgrmn@user/paulgrmn) (Ping timeout: 252 seconds)
[07:14:04] *** Quits: paulgrmn__ (~paulgrmn@user/paulgrmn) (Ping timeout: 264 seconds)
[07:14:59] *** Quits: fikran (~fikran@user/fikran) (Ping timeout: 252 seconds)
[07:16:09] *** Quits: wolfdale (~wolfdale@ec2-3-1-90-26.ap-southeast-1.compute.amazonaws.com) (Quit: Ping timeout (120 seconds))
[07:16:27] *** Joins: darkapex_ (~darkapex@user/darkapex)
[07:16:31] *** Joins: wolfdale (~wolfdale@ec2-3-1-90-26.ap-southeast-1.compute.amazonaws.com)
[07:16:57] *** Joins: fikran (~fikran@user/fikran)
[07:17:44] *** Quits: darkapex (~darkapex@user/darkapex) (Ping timeout: 252 seconds)
[07:17:50] *** Joins: DogHackit (~nathanren@c-76-27-57-63.hsd1.ut.comcast.net)
[07:18:41] *** Joins: normen (~normen@p54b3521a.dip0.t-ipconnect.de)
[07:37:28] *** Quits: DogHackit (~nathanren@c-76-27-57-63.hsd1.ut.comcast.net) (Ping timeout: 264 seconds)
[07:38:47] *** Joins: jpw (~jpw@user/jpw)
[07:45:45] *** Quits: nostalgia (~nostalgia@2601:243:c600:95f0:22f1:3efe:9b37:299c) (Remote host closed the connection)
[07:45:52] *** Quits: x88x88x (~cheeg@gateway/vpn/pia/x88x88x) (Ping timeout: 264 seconds)
[07:46:12] *** Joins: andlabs (~andlabs@2604:ca00:178:9b0e:81a6:20a8:5d9f:c8a6)
[07:51:17] *** Quits: normen (~normen@p54b3521a.dip0.t-ipconnect.de) (Ping timeout: 252 seconds)
[07:51:22] *** Joins: andlabs_ (~andlabs@2604:ca00:178:9b0e:843:2efe:6663:657f)
[07:51:28] *** Joins: DogHackit (~nathanren@c-76-27-57-63.hsd1.ut.comcast.net)
[07:54:26] *** Joins: andlabs__ (~andlabs@2604:ca00:178:9b0e:40b3:fbba:cbd8:f993)
[07:54:52] *** Quits: andlabs (~andlabs@2604:ca00:178:9b0e:81a6:20a8:5d9f:c8a6) (Ping timeout: 264 seconds)
[07:56:14] *** Quits: DogHackit (~nathanren@c-76-27-57-63.hsd1.ut.comcast.net) (Ping timeout: 252 seconds)
[07:57:44] *** Joins: andlabs (~andlabs@2604:ca00:178:9b0e:450:7c2b:a61d:d55a)
[07:57:52] *** Quits: andlabs_ (~andlabs@2604:ca00:178:9b0e:843:2efe:6663:657f) (Ping timeout: 264 seconds)
[08:01:08] *** Joins: andlabs_ (~andlabs@2604:ca00:178:9b0e:3477:a2bc:eee4:a104)
[08:01:28] *** Quits: andlabs__ (~andlabs@2604:ca00:178:9b0e:40b3:fbba:cbd8:f993) (Ping timeout: 264 seconds)
[08:05:04] *** Quits: andlabs (~andlabs@2604:ca00:178:9b0e:450:7c2b:a61d:d55a) (Ping timeout: 264 seconds)
[08:05:13] *** Quits: PedroG1 (~android@45.77.216.181) (Quit: Got you)
[08:05:20] *** Joins: andlabs (~andlabs@2604:ca00:178:9b0e:3cda:8d63:3ab1:5043)
[08:05:58] *** Joins: PedroG1 (~android@45.77.216.181)
[08:07:08] *** Joins: andlabs__ (~andlabs@2604:ca00:178:9b0e:615f:2017:6934:bde7)
[08:08:04] *** Quits: andlabs_ (~andlabs@2604:ca00:178:9b0e:3477:a2bc:eee4:a104) (Ping timeout: 264 seconds)
[08:08:21] *** Joins: iateadonut (~dan@121.177.17.154)
[08:08:50] *** Joins: andlabs_ (~andlabs@209.107.190.140)
[08:09:33] *** Quits: andlabs_ (~andlabs@209.107.190.140) (Read error: Connection reset by peer)
[08:09:37] *** Joins: DogHackit (~nathanren@c-76-27-57-63.hsd1.ut.comcast.net)
[08:09:42] *** Joins: andlab___ (~andlabs@2604:ca00:178:9b0e:c1c6:d96d:5ef0:a339)
[08:09:45] *** Quits: jpw (~jpw@user/jpw) (Remote host closed the connection)
[08:11:05] *** Quits: andlabs (~andlabs@2604:ca00:178:9b0e:3cda:8d63:3ab1:5043) (Ping timeout: 264 seconds)
[08:11:07] *** Joins: andlabs_ (~andlabs@2604:ca00:178:9b0e:31f0:f92f:5688:3815)
[08:11:14] *** Joins: jpw (~jpw@user/jpw)
[08:11:40] *** Quits: andlabs__ (~andlabs@2604:ca00:178:9b0e:615f:2017:6934:bde7) (Ping timeout: 264 seconds)
[08:14:56] *** Quits: shtirlic (~shtirlic@95-55-26-4.dynamic.avangarddsl.ru) (Ping timeout: 252 seconds)
[08:15:16] *** Quits: andlab___ (~andlabs@2604:ca00:178:9b0e:c1c6:d96d:5ef0:a339) (Ping timeout: 264 seconds)
[08:15:45] *** Quits: CaryHartline (~CaryHartl@2603-8080-6a0e-8d88-bc7b-beb0-653c-822c.res6.spectrum.com) (Quit: My iMac has gone to sleep. ZZZzzz…)
[08:16:22] *** Joins: shtirlic (~shtirlic@95-55-26-4.dynamic.avangarddsl.ru)
[08:27:16] *** Quits: DogHackit (~nathanren@c-76-27-57-63.hsd1.ut.comcast.net) (Ping timeout: 264 seconds)
[08:28:28] *** Joins: xah37 (~xah37@user/xah37)
[08:31:48] *** Joins: sdfgsdfg (~sdfgsdfg@user/sdfgsdfg)
[08:34:11] *** Quits: mic4ael (~mic4ael@kolodzie-pc.cern.ch) (Ping timeout: 252 seconds)
[08:37:34] *** Quits: saml (~saml@cpe-74-73-80-162.nyc.res.rr.com) (Quit: Leaving)
[08:39:24] *** Joins: DogHackit (~nathanren@c-76-27-57-63.hsd1.ut.comcast.net)
[08:44:15] *** Quits: DogHackit (~nathanren@c-76-27-57-63.hsd1.ut.comcast.net) (Ping timeout: 256 seconds)
[08:45:37] *** Quits: tyson2 (~user@bras-base-toroon0624w-grc-19-70-31-33-162.dsl.bell.ca) (Remote host closed the connection)
[08:45:45] *** Parts: iateadonut (~dan@121.177.17.154) ()
[08:47:07] *** Quits: dsrt^ (~dsrt@68.101.58.90) (Remote host closed the connection)
[08:50:20] *** Quits: mosen (~mosen@159-196-125-15.9fc47d.syd.static.aussiebb.net) (Quit: Textual IRC Client: www.textualapp.com)
[08:50:40] *** Quits: arandomcomrade (~arandomco@user/arandomcomrade) (Quit: Leaving)
[08:56:51] *** Quits: xah37 (~xah37@user/xah37) (Quit: Leaving)
[09:05:02] *** Joins: nrl^ (~nrl@68.101.58.90)
[09:05:50] *** Quits: andlabs_ (~andlabs@2604:ca00:178:9b0e:31f0:f92f:5688:3815) (Quit: My MacBook has gone to sleep. ZZZzzz…)
[09:14:22] *** Joins: DogHackit (~nathanren@c-76-27-57-63.hsd1.ut.comcast.net)
[09:22:52] *** Joins: hjkl (~hjkl@gateway/tor-sasl/hjkl)
[09:22:54] <hjkl> yoo
[09:22:59] <hjkl> sup
[09:23:37] <hjkl> what would you do if your neighbor's giving ya nightmares?
[09:24:23] <hjkl> she's knockin' the f-wall each time i fart :D
[09:24:29] *** Quits: fikran (~fikran@user/fikran) (Ping timeout: 256 seconds)
[09:24:57] <hjkl> that crazy shithead
[09:26:18] *** Joins: fikran (~fikran@user/fikran)
[09:27:49] *** Joins: andlabs (~andlabs@70.107.171.168)
[09:30:51] *** Joins: Guest94 (~Guest94@2409:4072:6e90:f432:58c3:486e:9f69:5201)
[09:31:55] *** Quits: hgl (hgl@67.230.181.248) (Changing host)
[09:31:55] *** Joins: hgl (hgl@user/hgl)
[09:33:16] *** Quits: DogHackit (~nathanren@c-76-27-57-63.hsd1.ut.comcast.net) (Ping timeout: 264 seconds)
[09:40:39] *** Quits: Guest94 (~Guest94@2409:4072:6e90:f432:58c3:486e:9f69:5201) (Quit: Client closed)
[09:45:48] *** Joins: DogHackit (~nathanren@c-76-27-57-63.hsd1.ut.comcast.net)
[09:46:52] *** Joins: alzgh (~alzgh@user/alzgh)
[09:47:01] *** Joins: shka (~herr@83.175.151.96.piasta.pl)
[09:48:41] *** Joins: normen (~normen@p54b3521a.dip0.t-ipconnect.de)
[09:50:40] *** Quits: DogHackit (~nathanren@c-76-27-57-63.hsd1.ut.comcast.net) (Ping timeout: 264 seconds)
[09:52:10] *** Joins: Seirdy (~Seirdy@sourcehut/user/seirdy)
[09:53:09] *** Joins: gspbirel566 (~gspbirel5@c-73-214-199-7.hsd1.pa.comcast.net)
[09:56:23] *** Quits: gspbirel566 (~gspbirel5@c-73-214-199-7.hsd1.pa.comcast.net) (Client Quit)
[09:56:57] *** Quits: be3uykpy_ (~be3uykpy@2a00:a040:19a:b060:1ce1:8bdb:cbba:1c0e) (Quit: Leaving)
[09:58:37] *** darkapex_ is now known as darkapex
[10:01:54] *** Joins: DogHackit (~nathanren@c-76-27-57-63.hsd1.ut.comcast.net)
[10:02:04] *** Quits: sudoforge (~sudoforge@wireguard/tunneler/sudoforge) (Ping timeout: 264 seconds)
[10:03:24] *** Joins: gspbirel566 (~gspbirel5@c-73-214-199-7.hsd1.pa.comcast.net)
[10:04:04] *** Joins: jcajka (~jcajka@89-24-144-111.customers.tmcz.cz)
[10:06:35] *** Quits: DogHackit (~nathanren@c-76-27-57-63.hsd1.ut.comcast.net) (Ping timeout: 252 seconds)
[10:11:43] *** Joins: danmurf (uid480399@user/danmurf)
[10:19:41] *** Joins: DogHackit (~nathanren@c-76-27-57-63.hsd1.ut.comcast.net)
[10:21:16] *** Quits: normen (~normen@p54b3521a.dip0.t-ipconnect.de) (Ping timeout: 264 seconds)
[10:24:22] *** Joins: Mattiaslndstrm (~Mattiasln@c213-103-137-235.bredband.tele2.se)
[10:24:47] *** Quits: Mattiaslndstrm (~Mattiasln@c213-103-137-235.bredband.tele2.se) (Client Quit)
[10:27:30] *** Joins: mic4ael (~mic4ael@kolodzie-pc.cern.ch)
[10:35:29] *** Quits: Tv_ (uid62079@user/tv/x-3144562) (Quit: Connection closed for inactivity)
[10:38:04] *** Quits: DogHackit (~nathanren@c-76-27-57-63.hsd1.ut.comcast.net) (Ping timeout: 264 seconds)
[10:40:28] *** Quits: gspbirel566 (~gspbirel5@c-73-214-199-7.hsd1.pa.comcast.net) (Ping timeout: 264 seconds)
[10:44:27] *** Joins: strubbl891941988 (~strubbl@ipbcc1859d.dynamic.kabel-deutschland.de)
[10:44:55] *** Quits: ethoxy_ (~caretaker@cx21.havox.ru) (Quit: leaving)
[10:45:15] *** Joins: ethoxy (~caretaker@cx21.havox.ru)
[10:45:56] *** Joins: Mattiaslndstrm (~Mattiasln@c213-103-137-235.bredband.tele2.se)
[10:45:57] *** Joins: gspbirel5660 (~gspbirel5@c-73-214-199-7.hsd1.pa.comcast.net)
[10:45:59] *** gspbirel5660 is now known as gspbirel566
[10:49:53] *** Joins: DogHackit (~nathanren@c-76-27-57-63.hsd1.ut.comcast.net)
[10:50:22] *** Joins: jaca122 (~Thunderbi@89-65-136-254.dynamic.chello.pl)
[10:50:53] *** Quits: jpw (~jpw@user/jpw) (Remote host closed the connection)
[10:51:54] *** Quits: jaca122 (~Thunderbi@89-65-136-254.dynamic.chello.pl) (Client Quit)
[10:54:23] *** Quits: Atque (~Atque@user/atque) (Quit: ...)
[10:54:26] *** Quits: DogHackit (~nathanren@c-76-27-57-63.hsd1.ut.comcast.net) (Ping timeout: 252 seconds)
[10:58:28] *** Quits: k0ta (~k0ta@103.108.94.37) (Ping timeout: 268 seconds)
[10:59:03] *** Joins: sord937 (~sord937@gateway/tor-sasl/sord937)
[11:06:23] *** Joins: DM4307842149 (~DM4307@c-73-15-244-129.hsd1.ca.comcast.net)
[11:06:27] *** Joins: fputs3 (~fputs@67.59.83.166)
[11:07:09] *** Quits: DM430784214 (~DM4307@c-73-15-244-129.hsd1.ca.comcast.net) (Read error: Connection reset by peer)
[11:07:09] *** DM4307842149 is now known as DM430784214
[11:07:45] *** Quits: jla (~jordi@64.225.79.195) (Quit: Leaving.)
[11:07:50] *** Joins: DogHackit (~nathanren@c-76-27-57-63.hsd1.ut.comcast.net)
[11:08:04] *** Quits: gspbirel566 (~gspbirel5@c-73-214-199-7.hsd1.pa.comcast.net) (Ping timeout: 264 seconds)
[11:08:11] *** Quits: fputs (~fputs@67.59.83.166) (Ping timeout: 256 seconds)
[11:08:11] *** fputs3 is now known as fputs
[11:08:15] *** Joins: rendar (~rendar@user/rendar)
[11:12:57] *** Joins: gspbirel5660 (~gspbirel5@c-73-214-199-7.hsd1.pa.comcast.net)
[11:13:54] *** Joins: k0ta (~k0ta@103.108.94.37)
[11:20:22] *** Joins: theoceaniscool (~theoceani@119.12.232.133)
[11:22:19] *** Joins: sav_ (~savio@177.12.48.155)
[11:23:03] *** Joins: tesuji (~quassel@2a02:908:180:9500:bc38:c93:1648:e81f)
[11:23:47] *** Joins: alwyn (~alwyn@user/alwyn)
[11:24:08] *** Quits: k0ta (~k0ta@103.108.94.37) (Ping timeout: 252 seconds)
[11:26:30] *** Quits: Mattiaslndstrm (~Mattiasln@c213-103-137-235.bredband.tele2.se) (Quit: My MacBook has gone to sleep. ZZZzzz…)
[11:27:33] *** Quits: sav_ (~savio@177.12.48.155) (Remote host closed the connection)
[11:27:59] *** Joins: sav_ (~savio@177.12.48.155)
[11:28:01] *** Quits: DogHackit (~nathanren@c-76-27-57-63.hsd1.ut.comcast.net) (Ping timeout: 256 seconds)
[11:30:13] <tesuji> "go version" reports "go version go1.17.3 windows/amd64" but "go env" reports "set GOARCH=386". That results in delve reporting that the current architecture is not supported. How is the default value for GOARCH determined? What is the prefered way to set it systemwide to amd64?
[11:31:56] *** Joins: saschagrunert (~saschagru@46.128.124.46)
[11:33:52] *** Quits: fikran (~fikran@user/fikran) (Ping timeout: 264 seconds)
[11:35:39] *** Joins: fikran (~fikran@user/fikran)
[11:40:31] *** Quits: hjkl (~hjkl@gateway/tor-sasl/hjkl) (Quit: hjkl)
[11:43:31] *** Joins: adip (~adip@deq245.neoplus.adsl.tpnet.pl)
[11:43:45] *** Joins: arinov (~arinov@213.194.126.155)
[11:45:48] *** Joins: Mattiaslndstrm (~Mattiasln@c213-103-137-235.bredband.tele2.se)
[11:46:14] *** Quits: sav_ (~savio@177.12.48.155) (Quit: Leaving)
[11:51:45] *** Quits: eti (~eti@2a07:abc4::1:26e) (Quit: byeeeee)
[11:52:19] *** Quits: frost (~frost@user/frost) (Quit: Connection closed)
[11:52:35] *** Joins: frost (~frost@user/frost)
[11:56:06] <sztanpet> https://pkg.go.dev/runtime#hdr-Environment_Variables
[11:57:02] <sztanpet> its the arch that the binary was built-with, if you want to set it, its a simple env var, so just give it a default arch, and by default its the architecture of your OS
[11:58:03] *** Joins: DogHackit (~nathanren@c-76-27-57-63.hsd1.ut.comcast.net)
[12:02:40] *** Quits: DogHackit (~nathanren@c-76-27-57-63.hsd1.ut.comcast.net) (Ping timeout: 264 seconds)
[12:03:12] *** Joins: neurocyte0132889 (~neurocyte@94.46.74.167)
[12:03:12] *** Quits: neurocyte0132889 (~neurocyte@94.46.74.167) (Changing host)
[12:03:12] *** Joins: neurocyte0132889 (~neurocyte@user/neurocyte)
[12:14:28] *** Joins: DogHackit (~nathanren@c-76-27-57-63.hsd1.ut.comcast.net)
[12:18:09] *** Quits: jackneilll (~jackneill@20014C4E1813AE00EA0EEE9F18FD44D5.dsl.pool.telekom.hu) (Read error: Connection reset by peer)
[12:18:32] *** Joins: jackneilll (~jackneill@20014C4E1813AE00B3F0FDA8665D3123.dsl.pool.telekom.hu)
[12:18:53] *** Joins: normen (~normen@p54b3521a.dip0.t-ipconnect.de)
[12:23:21] *** Joins: krux02 (~krux02@194.8.199.29)
[12:24:46] *** Joins: mrig (~AdiIRC@user/mrig)
[12:26:17] *** Joins: rcernin_ (~rcernin@2001:8003:6803:db00:5d22:e824:4395:30a2)
[12:30:51] *** Quits: Mattiaslndstrm (~Mattiasln@c213-103-137-235.bredband.tele2.se) (Quit: My MacBook has gone to sleep. ZZZzzz…)
[12:30:57] *** Quits: rcernin_ (~rcernin@2001:8003:6803:db00:5d22:e824:4395:30a2) (Ping timeout: 268 seconds)
[12:33:11] *** Quits: DogHackit (~nathanren@c-76-27-57-63.hsd1.ut.comcast.net) (Ping timeout: 256 seconds)
[12:34:29] *** Joins: Ergo^ (~ergo@91.238.59.144)
[12:42:28] *** Joins: esro (~esro@nat1.krakowskiinternet.pl)
[12:42:37] <tesuji> sztanpet: thanks a lot
[12:48:58] *** Joins: thickrocks (e46ff6ac16@2604:bf00:561:2000::13d)
[12:51:02] *** Quits: normen (~normen@p54b3521a.dip0.t-ipconnect.de) (Ping timeout: 252 seconds)
[12:51:36] *** Quits: shtirlic (~shtirlic@95-55-26-4.dynamic.avangarddsl.ru) (Ping timeout: 245 seconds)
[12:51:58] *** Joins: lxsameer (~lxsameer@user/lxsameer)
[12:53:15] *** Joins: shtirlic (~shtirlic@178.70.138.28)
[12:59:04] *** Quits: arinov (~arinov@213.194.126.155) (Ping timeout: 264 seconds)
[13:00:10] *** Quits: mikoto-chan (~mikoto-ch@esm-84-240-99-143.netplaza.fi) (Quit: mikoto-chan)
[13:01:25] *** Quits: danmurf (uid480399@user/danmurf) (Quit: Connection closed for inactivity)
[13:02:20] *** Joins: DogHackit (~nathanren@c-76-27-57-63.hsd1.ut.comcast.net)
[13:04:14] *** Quits: jackneilll (~jackneill@20014C4E1813AE00B3F0FDA8665D3123.dsl.pool.telekom.hu) (Ping timeout: 252 seconds)
[13:04:46] *** Joins: jackneilll (~jackneill@20014C4E1813AE00B3F0FDA8665D3123.dsl.pool.telekom.hu)
[13:05:30] *** Joins: jla (~jordi@212.161.114.203)
[13:06:52] *** Quits: DogHackit (~nathanren@c-76-27-57-63.hsd1.ut.comcast.net) (Ping timeout: 264 seconds)
[13:11:57] *** Quits: jla (~jordi@212.161.114.203) (Quit: Leaving.)
[13:14:01] *** Quits: chemsmith (~chemsmith@user/chemsmith) (Ping timeout: 250 seconds)
[13:16:37] *** Joins: arinov (~arinov@178.240.181.140)
[13:19:02] *** Quits: jackneilll (~jackneill@20014C4E1813AE00B3F0FDA8665D3123.dsl.pool.telekom.hu) (Remote host closed the connection)
[13:19:23] *** Joins: jackneilll (~jackneill@20014C4E1813AE00B3F0FDA8665D3123.dsl.pool.telekom.hu)
[13:21:05] *** Joins: chemsmith (~chemsmith@user/chemsmith)
[13:21:27] *** Joins: DogHackit (~nathanren@c-76-27-57-63.hsd1.ut.comcast.net)
[13:23:21] *** Quits: bindu (~bindu@user/bindu) (Remote host closed the connection)
[13:23:36] *** Joins: bindu (~bindu@user/bindu)
[13:25:19] *** Quits: lxsameer (~lxsameer@user/lxsameer) (Ping timeout: 256 seconds)
[13:26:08] *** Quits: zkanda (~zkanda@box.makean.art) (Quit: The Lounge - https://thelounge.chat)
[13:26:30] *** Joins: zkanda (~zkanda@box.makean.art)
[13:31:19] *** Quits: pinpox (~pinpox@v2202101107577140883.nicesrv.de) (Quit: The Lounge - https://thelounge.chat)
[13:32:02] *** Joins: pinpox (~pinpox@v2202101107577140883.nicesrv.de)
[13:38:40] *** Joins: lxsameer (~lxsameer@user/lxsameer)
[13:39:46] *** Joins: normen (~normen@p200300d71725d600f4eab571d3776494.dip0.t-ipconnect.de)
[13:39:52] *** Quits: DogHackit (~nathanren@c-76-27-57-63.hsd1.ut.comcast.net) (Ping timeout: 264 seconds)
[13:41:10] *** Joins: nabromov (~nabromov@92.40.255.115.threembb.co.uk)
[13:41:38] *** Quits: theoceaniscool (~theoceani@119.12.232.133) (Ping timeout: 252 seconds)
[13:43:28] *** Quits: fikran (~fikran@user/fikran) (Ping timeout: 264 seconds)
[13:45:00] *** Joins: fikran (~fikran@user/fikran)
[13:46:10] *** Joins: jaca122 (~Thunderbi@89-65-136-254.dynamic.chello.pl)
[13:47:57] *** Quits: lofiguy (~lofiguy@87-207-104-205.dynamic.chello.pl) (Remote host closed the connection)
[13:52:59] *** Joins: DogHackit (~nathanren@c-76-27-57-63.hsd1.ut.comcast.net)
[13:53:28] *** Quits: jaca122 (~Thunderbi@89-65-136-254.dynamic.chello.pl) (Remote host closed the connection)
[13:53:35] *** Quits: dalan (~dalan@14-202-182-202.tpgi.com.au) (Ping timeout: 268 seconds)
[13:53:55] *** Joins: jaca122 (~Thunderbi@89-65-136-254.dynamic.chello.pl)
[13:57:06] *** Joins: lofiguy (~lofiguy@87-207-104-205.dynamic.chello.pl)
[13:57:35] *** Quits: DogHackit (~nathanren@c-76-27-57-63.hsd1.ut.comcast.net) (Ping timeout: 252 seconds)
[14:04:01] *** Quits: flynn (~mcbloch@user/flynn) (Quit: Ping timeout (120 seconds))
[14:04:07] *** Joins: vxn (benjamin@hackstuff.net)
[14:07:20] *** Quits: flam (~flam@clairlair.xyz) (Ping timeout: 260 seconds)
[14:07:31] *** Joins: theoceaniscool (~theoceani@119.12.232.133)
[14:10:48] *** Joins: DogHackit (~nathanren@c-76-27-57-63.hsd1.ut.comcast.net)
[14:15:01] <mickey8> i have a line such as db.conn.Select("some specific query here") that i re-use in multiple functions in db, such as db.getThis() and db.getThat() that do different things with the results of the query (e.g. one returns json and the other csv, etc.). i'd like to declare the query as a package var so it only needs to be updated once when needed and
[14:15:01] <mickey8> avoid inconsistent results, but i cant var whatever = db.conn... because db is undefined
[14:15:40] <mickey8> how would you approach this?
[14:20:41] <bookworm> mickey8: attach it to a struct that only fetches the data the first time around, sync.Once is useful there
[14:23:51] *** Joins: jla (~jordi@212.161.114.203)
[14:25:47] *** Joins: henry404082 (~henry4040@112-105-247-102.adsl.dynamic.seed.net.tw)
[14:27:04] <mickey8> im not sure how a struct would help here?
[14:27:50] *** Quits: henry40408 (~henry4040@112-104-114-35.adsl.dynamic.seed.net.tw) (Ping timeout: 252 seconds)
[14:27:50] *** henry404082 is now known as henry40408
[14:28:01] <bookworm> because everything else that needs the query simply uses the proxy (the struct), you'll pass that around
[14:28:21] <bookworm> or use methods on an app/server/whatever struct that provides the caching
[14:29:04] *** Joins: whaley (~whaley@2603-6080-a301-33d1-4c2f-0051-868d-a86d.res6.spectrum.com)
[14:29:40] *** Quits: DogHackit (~nathanren@c-76-27-57-63.hsd1.ut.comcast.net) (Ping timeout: 264 seconds)
[14:31:48] <mickey8> so i'll populate that struct on init? how is sync.Once relevant here?
[14:35:13] *** Joins: darkapex_ (~darkapex@user/darkapex)
[14:36:05] *** Quits: darkapex (~darkapex@user/darkapex) (Ping timeout: 252 seconds)
[14:37:50] <mickey8> or you mean var ( query sync.Once ) and then the init would populate the query with the db.conn.Select()? but then how is the struct relevant
[14:38:39] *** Joins: wim (~wim@42.be)
[14:41:21] *** Joins: DogHackit (~nathanren@c-76-27-57-63.hsd1.ut.comcast.net)
[14:41:36] <mickey8> okay its not the last thing, that's not what sync.Once does :q
[14:42:52] *** Quits: normen (~normen@p200300d71725d600f4eab571d3776494.dip0.t-ipconnect.de) (Ping timeout: 264 seconds)
[14:43:14] <bookworm> you generally don't want to have global variables as that's untestable and generally shitty, the usual way around that is to encapsulate the thing somehow, generally with a thing that has some sort of a setup or new function
[14:43:40] <bookworm> in go you tend to use structs for that as that's the thing in the language that allows you to do that
[14:43:50] <bookworm> in python you'd use a class
[14:44:11] <bookworm> you need to get rid of the "just shove it in a global" mindset
[14:44:30] <bookworm> or well, up to you really but you're not helping yourself with that down the road
[14:45:10] *** Joins: llorllale (~llorllale@2607:9880:3a18:69:a155:d417:1815:55b1)
[14:45:36] <mickey8> sure, but im not exactly sure what you meant earlier.
[14:45:59] *** Quits: DogHackit (~nathanren@c-76-27-57-63.hsd1.ut.comcast.net) (Ping timeout: 252 seconds)
[14:47:31] <mickey8> besides im already inside a package, so it's not "global"
[14:48:42] *** Joins: normen (~normen@p200300d71725d600f4eab571d3776494.dip0.t-ipconnect.de)
[14:54:14] *** Quits: normen (~normen@p200300d71725d600f4eab571d3776494.dip0.t-ipconnect.de) (Ping timeout: 252 seconds)
[14:57:21] *** Quits: whaley (~whaley@2603-6080-a301-33d1-4c2f-0051-868d-a86d.res6.spectrum.com) (Quit: WeeChat 3.3)
[14:57:59] *** Joins: whaley (~whaley@2603-6080-a301-33d1-4c2f-0051-868d-a86d.res6.spectrum.com)
[15:01:46] *** Joins: leitz (~LeamHall@cpe-173-172-58-72.tx.res.rr.com)
[15:06:07] *** Quits: esro (~esro@nat1.krakowskiinternet.pl) (Quit: Leaving)
[15:08:14] *** Quits: Nex8192 (~Nex8192@user/nex8192) (Quit: Don't watch me die)
[15:08:36] *** Joins: esro (~esro@nat1.krakowskiinternet.pl)
[15:14:34] *** Joins: DogHackit (~nathanren@c-76-27-57-63.hsd1.ut.comcast.net)
[15:19:46] *** Joins: normen (~normen@p200300d71725d600f4eab571d3776494.dip0.t-ipconnect.de)
[15:28:41] *** Joins: dalan (~dalan@124.168.196.74)
[15:32:49] *** Quits: DogHackit (~nathanren@c-76-27-57-63.hsd1.ut.comcast.net) (Ping timeout: 256 seconds)
[15:33:33] *** Joins: Nex8192 (~Nex8192@user/nex8192)
[15:33:48] *** Quits: vimal (~vimal@ip-213-127-89-120.ip.prioritytelecom.net) (Ping timeout: 265 seconds)
[15:35:19] *** Joins: Atque (~Atque@user/atque)
[15:36:44] *** Joins: vimal (~vimal@2a02:a210:9600:1f00:cf25:5fe2:fd13:9e52)
[15:40:00] *** Joins: Tharro (~Tharro@51.15.91.154)
[15:40:39] *** Quits: sdfgsdfg (~sdfgsdfg@user/sdfgsdfg) (Quit: ZzzZ)
[15:45:18] <arinov> when i use go get with github modules it works fine, but what to do if i cloned repository and changed original files, can i use go get with local directory just like as github paths?
[15:46:28] <bookworm> arinov: replace directives
[15:46:48] *** Joins: espero (~espero@ucitelonline.pedf.cuni.cz)
[15:51:23] *** Quits: lofiguy (~lofiguy@87-207-104-205.dynamic.chello.pl) (Remote host closed the connection)
[15:51:45] *** Joins: lofiguy (~lofiguy@87-207-104-205.dynamic.chello.pl)
[15:52:14] <dostoyevsky2> I think I just realized that out of the box Go doesn't support self-signed p12 files, so I have to construct the correct certificate chain by myself...
[15:52:28] *** Quits: fikran (~fikran@user/fikran) (Ping timeout: 264 seconds)
[15:53:40] *** Quits: normen (~normen@p200300d71725d600f4eab571d3776494.dip0.t-ipconnect.de) (Ping timeout: 264 seconds)
[15:54:21] *** Joins: fikran (~fikran@user/fikran)
[15:55:06] *** Joins: filwisher (2e6936c793@2604:bf00:561:2000::170)
[15:57:30] *** Joins: nabromov1 (~nabromov@92.40.255.115.threembb.co.uk)
[15:58:02] *** Quits: dr0n (~nabromov@94.11.23.235) (Ping timeout: 252 seconds)
[15:58:35] *** Quits: nabromov (~nabromov@92.40.255.115.threembb.co.uk) (Ping timeout: 252 seconds)
[16:00:33] *** Joins: normen (~normen@p200300d71725d600f4eab571d3776494.dip0.t-ipconnect.de)
[16:02:49] *** Joins: DogHackit (~nathanren@c-76-27-57-63.hsd1.ut.comcast.net)
[16:07:23] *** Quits: DogHackit (~nathanren@c-76-27-57-63.hsd1.ut.comcast.net) (Ping timeout: 252 seconds)
[16:14:17] <arinov> bookworm: go: go.mod file not found in current directory or any parent directory seems i can just replace github link to path on my localhost
[16:14:28] <arinov> i cant*
[16:16:31] *** Joins: tyson2 (~user@bras-base-toroon0624w-grc-19-70-31-33-162.dsl.bell.ca)
[16:17:01] *** Joins: Guest4314 (~Guest43@102.157.192.30)
[16:17:51] *** Quits: Guest4314 (~Guest43@102.157.192.30) (Client Quit)
[16:20:02] *** Quits: arinov (~arinov@178.240.181.140) (Ping timeout: 252 seconds)
[16:20:54] *** Quits: jla (~jordi@212.161.114.203) (Quit: Leaving.)
[16:21:16] *** Joins: DogHackit (~nathanren@c-76-27-57-63.hsd1.ut.comcast.net)
[16:21:16] *** Quits: nabromov1 (~nabromov@92.40.255.115.threembb.co.uk) (Ping timeout: 264 seconds)
[16:22:31] *** Quits: johnjay (~pi@192.142.100.50) (Ping timeout: 250 seconds)
[16:24:00] *** Joins: johnjay (~pi@192.142.100.50)
[16:30:27] *** Joins: Mattiaslndstrm (~Mattiasln@c213-103-137-235.bredband.tele2.se)
[16:31:42] *** Quits: Mattiaslndstrm (~Mattiasln@c213-103-137-235.bredband.tele2.se) (Client Quit)
[16:33:42] *** Quits: chripell (~chripell@147.80.76.34.bc.googleusercontent.com) (Quit: Leaving)
[16:36:16] *** Joins: smeeagle (~smeeagle@2a00:23c8:9611:e600:2446:13de:20ec:764f)
[16:37:54] <sztanpet> as bookworm said, look up how to use replace directives
[16:38:28] <sztanpet> if you dont have a go.mod, that means you arent using modules where replace directives work of course
[16:39:32] <sztanpet> in that case you can look at how to do what you want by manipulating the dependencies in GOPATH but that will be global, non-versioned and brittle
[16:39:41] *** Quits: DogHackit (~nathanren@c-76-27-57-63.hsd1.ut.comcast.net) (Ping timeout: 256 seconds)
[16:44:03] *** Joins: fef (~thedawn@user/thedawn)
[16:52:13] *** Joins: finkfox (~finkfox@user/finkfox)
[16:53:20] *** Joins: DogHackit (~nathanren@c-76-27-57-63.hsd1.ut.comcast.net)
[16:54:37] *** Quits: Teckla (~Teckla@user/teckla) (Quit: leaving)
[16:54:49] *** Joins: someuser (~user@197.54.97.208)
[16:55:02] <someuser> hello, i have this dict from python and i want to represent it as a struct in go, how to do this https://pastebin.com/raw/xGqDjQE4, i am confused on how to initalize a []map[string]string for the case part
[16:55:37] *** Joins: getynge (~getynge@2601:702:80:2fc0::a0a3)
[16:56:25] *** Quits: smeeagle (~smeeagle@2a00:23c8:9611:e600:2446:13de:20ec:764f) (Quit: smeeagle)
[16:56:30] <bpalmer> you initialize a []map[string]string like you would for any []T : make([]T, len) or make([]T, len, cap). That fills the slice in with the zero value for that type
[16:56:46] <finkfox> hi there. a go newbie question. given a slice of structs e.g. "people []Person". How can I create a new slice of all peoples firstnames? If possible in one line? Equivalent to ruby "people.map { |p| p.firstname }"
[16:57:10] <bpalmer> the zero value for a map[string]string is nil ; if you want a non-nil map in each, you'll have to go through and initialize that (e.g., using make)
[16:57:15] <bpalmer> or, you can use literals to do the initialization
[16:57:31] <bpalmer> finkfox: go isn't great at loop one-liners.
[16:58:01] <bpalmer> finkfox: instead, your best bet is probably to make a new slice, then write a for loop.
[16:59:30] *** Joins: Teckla (~Teckla@user/teckla)
[17:00:06] <finkfox> bpamler: ok. I guess it might make sense to create a new struct "people" and a method "Firstnames" to keep code less cluttered.
[17:00:20] <bpalmer> (go has a general policy that loops should be spelled out so that it's really clear how much time is being taken)
[17:00:40] <bpalmer> time and space.
[17:00:57] *** Quits: pinpox (~pinpox@v2202101107577140883.nicesrv.de) (Quit: The Lounge - https://thelounge.chat)
[17:01:10] *** Joins: paulgrmn_ (~paulgrmn@user/paulgrmn)
[17:01:38] *** Joins: pinpox (~pinpox@v2202101107577140883.nicesrv.de)
[17:04:34] *** Quits: leitz (~LeamHall@cpe-173-172-58-72.tx.res.rr.com) (Quit: nappy time)
[17:09:32] *** Quits: DogHackit (~nathanren@c-76-27-57-63.hsd1.ut.comcast.net) (Ping timeout: 252 seconds)
[17:12:30] *** Joins: saml (~saml@cpe-74-73-80-162.nyc.res.rr.com)
[17:13:06] *** Quits: frost (~frost@user/frost) (Quit: Connection closed)
[17:13:42] *** Joins: arinov (~arinov@213.194.126.155)
[17:14:17] *** Joins: Mattiaslndstrm (~Mattiasln@c213-103-137-235.bredband.tele2.se)
[17:14:47] *** Joins: smeeagle (~smeeagle@2a00:23c8:9611:e600:2446:13de:20ec:764f)
[17:21:47] *** Joins: DogHackit (~nathanren@c-76-27-57-63.hsd1.ut.comcast.net)
[17:22:16] *** Quits: esro (~esro@nat1.krakowskiinternet.pl) (Quit: Leaving)
[17:24:25] *** Quits: Mattiaslndstrm (~Mattiasln@c213-103-137-235.bredband.tele2.se) (Quit: My MacBook has gone to sleep. ZZZzzz…)
[17:31:07] <someuser> ty bpalmer but how do i add this to a struct :     "age": None
[17:31:23] <someuser> i want to json encode it and get null
[17:33:14] *** Joins: jla (~jordi@212.161.114.203)
[17:34:28] <seebs> you can't
[17:35:19] <seebs> Python's untyped, so everything can be of any type, which would correspond to a Go `map[string]interface{}`, roughly.
[17:35:41] <seebs> If you're doing a map[string]string, there is no "null" or nil or None or anything, there's just "", and no way to distinguish that from an empty string.
[17:36:52] *** Quits: llorllale (~llorllale@2607:9880:3a18:69:a155:d417:1815:55b1) (Ping timeout: 264 seconds)
[17:38:11] <deepy> Do you even need to distinguish that? "" doesn't seem like a valid age so you might not have to worry
[17:39:29] <siXy> storing age as a string seems a poor choice.
[17:40:20] *** Quits: DogHackit (~nathanren@c-76-27-57-63.hsd1.ut.comcast.net) (Ping timeout: 252 seconds)
[17:48:32] <seebs> it does
[17:48:46] *** Joins: Mattiaslndstrm (~Mattiasln@c213-103-137-235.bredband.tele2.se)
[17:48:53] <seebs> the usual correct form would be to make a struct which has individual specific fields and isn't dict-like at all.
[17:55:20] *** Joins: DogHackit (~nathanren@c-76-27-57-63.hsd1.ut.comcast.net)
[17:55:55] *** Joins: burningserenity (~burningse@142-196-178-216.res.spectrum.com)
[17:57:56] *** Quits: lofiguy (~lofiguy@87-207-104-205.dynamic.chello.pl) (Remote host closed the connection)
[17:58:15] *** Joins: lofiguy (~lofiguy@87-207-104-205.dynamic.chello.pl)
[18:02:04] *** Quits: fikran (~fikran@user/fikran) (Ping timeout: 264 seconds)
[18:03:42] *** Joins: fikran (~fikran@user/fikran)
[18:06:42] <noord> b0nn: it varies from linked list, stack, queue
[18:07:21] <noord> to designing heuristic depends on experience
[18:10:59] *** Joins: arcatech (~arcatech@user/arcatech)
[18:17:56] <noord> A* implementation just indicates the addiction of programming contest
[18:20:53] *** Quits: wolfdale (~wolfdale@ec2-3-1-90-26.ap-southeast-1.compute.amazonaws.com) (Read error: Connection reset by peer)
[18:21:05] *** Quits: Mattiaslndstrm (~Mattiasln@c213-103-137-235.bredband.tele2.se) (Quit: My MacBook has gone to sleep. ZZZzzz…)
[18:21:12] *** Joins: wolfdale (~wolfdale@ec2-3-1-90-26.ap-southeast-1.compute.amazonaws.com)
[18:23:54] *** ols is now known as notols
[18:26:49] *** Joins: ols (aea6b2bef1@nixers/ols)
[18:29:06] *** Quits: notols (~ols@nixers/ols) (Remote host closed the connection)
[18:29:18] <bpalmer> Or basic artificial intelligence experience ... or, depending on how many details presented, just implementing a real world] algorithm according to a spec.
[18:38:01] *** Quits: jla (~jordi@212.161.114.203) (Quit: Leaving.)
[18:41:50] *** Joins: azidhaka (~azidhaka@user/azidhaka)
[18:47:48] *** Joins: sudoforge (~sudoforge@wireguard/tunneler/sudoforge)
[18:49:11] *** Joins: gspbirel56601 (~gspbirel5@c-73-214-199-7.hsd1.pa.comcast.net)
[18:49:21] *** Quits: gspbirel5660 (~gspbirel5@c-73-214-199-7.hsd1.pa.comcast.net) (Read error: Connection reset by peer)
[18:49:21] *** gspbirel56601 is now known as gspbirel5660
[18:52:04] *** Quits: ols (aea6b2bef1@nixers/ols) (Remote host closed the connection)
[18:53:09] *** Joins: notols (~notols@nixers/ols)
[18:54:46] *** notols is now known as ols
[18:57:00] <noord> bpalmer: writing simple bfs, dfs traversal without any heuristic totally fine for interviews
[18:59:53] *** Quits: Atque (~Atque@user/atque) (Quit: ...)
[19:00:22] *** Joins: x88x88x (~cheeg@gateway/vpn/pia/x88x88x)
[19:00:42] <bpalmer> I would expect most people I interview to know bfs, dfs traversal off the top of their heads.
[19:01:17] <bpalmer> Coding A*  from a description of it shows something else about how they translate from spec to code.
[19:01:32] <bpalmer> (although I wouldn't ask that myself, I just think it might work as a question given sufficient time)
[19:01:54] <noord> bpalmer: I didn't say I am the luckiest man on the world, the bar here is not high
[19:03:43] <noord> https://blog.codinghorror.com/why-cant-programmers-program/
[19:06:37] *** Quits: tyson2 (~user@bras-base-toroon0624w-grc-19-70-31-33-162.dsl.bell.ca) (Remote host closed the connection)
[19:07:33] *** Joins: foki (~bob@197.0.120.66)
[19:09:11] *** Joins: tane (~tane@dslb-002-201-234-166.002.201.pools.vodafone-ip.de)
[19:09:11] *** Quits: tane (~tane@dslb-002-201-234-166.002.201.pools.vodafone-ip.de) (Changing host)
[19:09:11] *** Joins: tane (~tane@user/tane)
[19:11:36] *** Joins: jla (~jordi@64.225.79.195)
[19:12:55] *** Joins: chripell (~chripell@147.80.76.34.bc.googleusercontent.com)
[19:18:06] *** Joins: Tv_ (uid62079@user/tv/x-3144562)
[19:21:30] *** Parts: jla (~jordi@64.225.79.195) ()
[19:23:13] *** Joins: esro (~esro@nat1.krakowskiinternet.pl)
[19:23:15] <noord> bpalmer: may I send pm? it is going offtopic.
[19:25:58] *** Joins: darkapex (~darkapex@user/darkapex)
[19:26:04] *** Quits: darkapex_ (~darkapex@user/darkapex) (Ping timeout: 264 seconds)
[19:26:58] *** Quits: getynge (~getynge@2601:702:80:2fc0::a0a3) (Quit: Leaving)
[19:28:36] *** Joins: tyson2 (~user@bras-base-toroon0628w-grc-46-142-112-141-177.dsl.bell.ca)
[19:28:55] *** Quits: esro (~esro@nat1.krakowskiinternet.pl) (Remote host closed the connection)
[19:29:43] *** Quits: andlabs (~andlabs@70.107.171.168) (Quit: My MacBook has gone to sleep. ZZZzzz…)
[19:30:36] *** Quits: mooff (mooff@awful.cooking) (Read error: Connection reset by peer)
[19:31:36] *** Joins: mooff (mooff@awful.cooking)
[19:32:30] *** Joins: Mattiaslndstrm (~Mattiasln@c213-103-137-235.bredband.tele2.se)
[19:34:36] *** Joins: getynge (~getynge@2601:702:80:2fc0::a0a3)
[19:36:09] <alwyn> I had my "main.go" (except named after the project, not literally named main.go) in my project root, and just moved it to cmd/project/main.go, what do I need to do to make go build work again? - https://bpa.st/ITIQ
[19:36:51] <alwyn> go build cmd/xymon gives me an error on GOROOT "package cmd/xymon is not in GOROOT (/usr/lib/go/src/cmd/xymon)"
[19:37:20] <alwyn> (I'm a total beginner, apologies for the maybe dumb questions)
[19:37:29] <rewt> try  go build cmd/xymon/*.go
[19:40:14] *** Joins: darkapex_ (~darkapex@user/darkapex)
[19:40:14] *** Quits: darkapex (~darkapex@user/darkapex) (Ping timeout: 252 seconds)
[19:40:36] <alwyn> rewt: hey that works! Is this the recommended approach?
[19:41:01] <rewt> yes
[19:41:29] <alwyn> Thanks!
[19:42:00] <Tv_> alwyn: no, you want `go build ./cmd/xymon`
[19:42:26] <alwyn> Tv_: ah, simple enough!
[19:51:26] *** Parts: bsandro (~bsandro@139.138.197.56) ()
[19:57:15] <alwyn> What folder do people usually build their code to? ./bin?
[19:57:46] <ikke> $PWD
[20:00:27] *** Joins: resamvi (~resamvi@p4ff7768d.dip0.t-ipconnect.de)
[20:00:27] *** Quits: resamvi (~resamvi@p4ff7768d.dip0.t-ipconnect.de) (Changing host)
[20:00:27] *** Joins: resamvi (~resamvi@user/resamvi)
[20:08:40] *** Quits: saschagrunert (~saschagru@46.128.124.46) (Quit: Leaving)
[20:08:56] *** Quits: Mattiaslndstrm (~Mattiasln@c213-103-137-235.bredband.tele2.se) (Quit: My MacBook has gone to sleep. ZZZzzz…)
[20:10:18] *** Quits: shadowchaser (~Shadowcha@liox.eu) (Quit: The Lounge - https://thelounge.chat)
[20:11:03] *** Quits: fikran (~fikran@user/fikran) (Ping timeout: 256 seconds)
[20:11:33] *** Quits: krux02 (~krux02@194.8.199.29) (Remote host closed the connection)
[20:11:45] *** Joins: shadowchaser (~Shadowcha@liox.eu)
[20:11:49] *** Quits: shadowchaser (~Shadowcha@liox.eu) (Client Quit)
[20:11:59] *** Joins: shadowchaser (~Shadowcha@liox.eu)
[20:12:23] *** Joins: Mattiaslndstrm (~Mattiasln@c213-103-137-235.bredband.tele2.se)
[20:12:31] *** Joins: cold__ (cold@user/lost)
[20:12:49] *** Joins: ncopa3 (~ncopa@gbr2-dev1.alpinelinux.org)
[20:13:02] *** Joins: mdel7 (~mdel@user/mdel)
[20:13:03] *** Joins: fikran (~fikran@user/fikran)
[20:13:22] *** Quits: seanBE_ (~seanBE@ec2-34-243-193-160.eu-west-1.compute.amazonaws.com) (Ping timeout: 256 seconds)
[20:13:22] *** Quits: jemaclus (~jemaclus@64.227.108.73) (Ping timeout: 256 seconds)
[20:13:22] *** Quits: crowbar (~crowbar@user/crowbar) (Ping timeout: 256 seconds)
[20:13:29] *** Joins: SDr5 (~SDr@li1189-192.members.linode.com)
[20:13:31] *** Joins: Louis_ (~Louis@my-hostna.me)
[20:13:40] *** Joins: Jmainguy1 (~Jmainguy@phy01.standouthost.com)
[20:13:46] *** Joins: andlabs (~andlabs@2604:ca00:17c:23c0:89ac:5fa4:1bf7:926a)
[20:13:47] *** Joins: nekron (~nekron@noordsee.de)
[20:13:53] *** Joins: seanBE (~seanBE@ec2-34-243-193-160.eu-west-1.compute.amazonaws.com)
[20:13:55] *** Joins: noarb- (~noarb@user/noarb)
[20:13:56] *** Joins: earthbreaker (~earthbrea@li778-229.members.linode.com)
[20:13:56] *** Quits: marlinc_ (~marlinc@user/marlinc) (Ping timeout: 256 seconds)
[20:13:56] *** Quits: SDr (~SDr@user/sdr) (Ping timeout: 256 seconds)
[20:13:56] *** Quits: Jmainguy (~Jmainguy@phy01.standouthost.com) (Ping timeout: 256 seconds)
[20:13:57] *** Joins: belak51 (~belak@user/belak)
[20:13:57] *** Joins: sebito91_ (~sborza@45.55.74.66)
[20:14:04] *** Joins: crowbar (~crowbar@user/crowbar)
[20:14:06] *** Joins: snuck (~sneak@datavi.be)
[20:14:22] *** Joins: harley_l (~quassel@64.225.54.254)
[20:14:29] *** Joins: kai4 (~kai@x50d24799.cust.hiper.dk)
[20:14:30] *** Quits: dtman34 (~dtman34@c-73-62-246-247.hsd1.mn.comcast.net) (Ping timeout: 256 seconds)
[20:14:30] *** Quits: Louis (~Louis@my-hostna.me) (Ping timeout: 256 seconds)
[20:14:30] *** Quits: sebito91 (~sborza@45.55.74.66) (Ping timeout: 256 seconds)
[20:14:30] *** Quits: sneak (~sneak@datavi.be) (Ping timeout: 256 seconds)
[20:14:30] *** Quits: Lost (~spinning@user/lost) (Ping timeout: 256 seconds)
[20:14:30] *** Quits: noarb (~noarb@user/noarb) (Ping timeout: 256 seconds)
[20:14:30] *** Quits: erhandsome (~erhandsom@user/erhandsome) (Ping timeout: 256 seconds)
[20:14:30] *** Quits: bader (~Bader_Lej@freeshell.de) (Ping timeout: 256 seconds)
[20:14:31] *** Quits: naos (~naos@user/naos) (Ping timeout: 256 seconds)
[20:14:31] *** sebito91_ is now known as sebito91
[20:14:32] *** Joins: marlinc (~marlinc@user/marlinc)
[20:14:34] *** Joins: dtman34_ (~dtman34@c-73-62-246-247.hsd1.mn.comcast.net)
[20:14:35] *** cold__ is now known as Lost
[20:15:01] *** Quits: x88x88x (~cheeg@gateway/vpn/pia/x88x88x) (Ping timeout: 256 seconds)
[20:15:04] *** Quits: ncopa (~ncopa@gbr2-dev1.alpinelinux.org) (Ping timeout: 256 seconds)
[20:15:04] *** Quits: jay_wild (~very@138.68.15.221) (Ping timeout: 256 seconds)
[20:15:04] *** Quits: losinggeneration (~quassel@64.225.54.254) (Ping timeout: 256 seconds)
[20:15:04] *** Quits: belak (~belak@user/belak) (Ping timeout: 256 seconds)
[20:15:04] *** Quits: kai (~kai@x50d24799.cust.hiper.dk) (Ping timeout: 256 seconds)
[20:15:04] *** Quits: nekron_ (~nekron@noordsee.de) (Ping timeout: 256 seconds)
[20:15:04] *** Quits: mdel (~mdel@user/mdel) (Ping timeout: 256 seconds)
[20:15:04] *** Quits: Batzy (~quassel@user/batzy) (Ping timeout: 256 seconds)
[20:15:04] *** Quits: faceonkeyboard (~faceonkey@anquietas.harting.hosting) (Ping timeout: 256 seconds)
[20:15:04] *** Quits: mika (~mika@odysseus.grml.info) (Ping timeout: 256 seconds)
[20:15:05] *** Quits: yolo (~xxiao@159.89.184.51) (Ping timeout: 256 seconds)
[20:15:05] *** Quits: earthbre- (~earthbrea@li778-229.members.linode.com) (Ping timeout: 256 seconds)
[20:15:05] *** Quits: caubert (~caubert@136.244.111.235) (Ping timeout: 256 seconds)
[20:15:05] *** mdel7 is now known as mdel
[20:15:40] *** Joins: Batzy (~quassel@user/batzy)
[20:15:53] *** Joins: erhandsome (~erhandsom@user/erhandsome)
[20:15:54] *** Joins: naos (~naos@user/naos)
[20:16:08] *** Joins: mika (~mika@odysseus.grml.info)
[20:16:29] *** Joins: yolo (~xxiao@159.89.184.51)
[20:16:32] *** Joins: jay_wild (~very@138.68.15.221)
[20:16:36] *** Joins: bader (~Bader_Lej@freeshell.de)
[20:16:55] *** Joins: caubert (~caubert@136.244.111.235)
[20:17:28] *** Joins: kai43 (~kai@x50d24799.cust.hiper.dk)
[20:17:41] *** Quits: shadowchaser (~Shadowcha@liox.eu) (Quit: The Lounge - https://thelounge.chat)
[20:17:43] *** Joins: Louis (~Louis@my-hostna.me)
[20:17:43] *** Joins: belak (~belak@user/belak)
[20:17:47] *** Joins: nekron_ (~nekron@noordsee.de)
[20:17:52] *** Joins: sneak (~sneak@datavi.be)
[20:18:01] *** Joins: losinggeneration (~quassel@64.225.54.254)
[20:18:07] *** Joins: shadowchaser (~Shadowcha@liox.eu)
[20:18:22] *** Joins: marlinc_ (~marlinc@user/marlinc)
[20:18:25] *** Quits: nekron (~nekron@noordsee.de) (Ping timeout: 256 seconds)
[20:18:25] *** Quits: Louis_ (~Louis@my-hostna.me) (Ping timeout: 256 seconds)
[20:18:25] *** Joins: dtman34 (~dtman34@c-73-62-246-247.hsd1.mn.comcast.net)
[20:18:59] *** Quits: dtman34_ (~dtman34@c-73-62-246-247.hsd1.mn.comcast.net) (Ping timeout: 256 seconds)
[20:18:59] *** Quits: marlinc (~marlinc@user/marlinc) (Ping timeout: 256 seconds)
[20:18:59] *** Quits: kai4 (~kai@x50d24799.cust.hiper.dk) (Ping timeout: 256 seconds)
[20:18:59] *** Quits: harley_l (~quassel@64.225.54.254) (Ping timeout: 256 seconds)
[20:18:59] *** Quits: snuck (~sneak@datavi.be) (Ping timeout: 256 seconds)
[20:18:59] *** Quits: belak51 (~belak@user/belak) (Ping timeout: 256 seconds)
[20:19:58] *** Joins: jemaclus (~jemaclus@64.227.108.73)
[20:27:21] *** Quits: _lungaro_ (~lungaro@99-117-118-33.lightspeed.sndgca.sbcglobal.net) (Ping timeout: 250 seconds)
[20:27:49] *** Joins: mikoto-chan (~mikoto-ch@esm-84-240-99-143.netplaza.fi)
[20:29:00] *** Joins: faceonkeyboard (~faceonkey@anquietas.harting.hosting)
[20:29:24] *** Joins: andlabs_ (~andlabs@2604:ca00:17c:23c0:ac16:72d4:f19c:20cb)
[20:30:32] *** Quits: fef (~thedawn@user/thedawn) (Quit: Leaving)
[20:31:37] *** Quits: Mattiaslndstrm (~Mattiasln@c213-103-137-235.bredband.tele2.se) (Quit: My MacBook has gone to sleep. ZZZzzz…)
[20:33:16] *** Quits: andlabs (~andlabs@2604:ca00:17c:23c0:89ac:5fa4:1bf7:926a) (Ping timeout: 264 seconds)
[20:34:07] *** Quits: Ergo^ (~ergo@91.238.59.144) (Remote host closed the connection)
[20:44:48] *** Quits: alwyn (~alwyn@user/alwyn) (Quit: ciao)
[20:45:16] *** Quits: andlabs_ (~andlabs@2604:ca00:17c:23c0:ac16:72d4:f19c:20cb) (Ping timeout: 264 seconds)
[20:50:09] *** Quits: lofiguy (~lofiguy@87-207-104-205.dynamic.chello.pl) (Remote host closed the connection)
[20:59:59] *** Quits: zwr (~zwr@2804:d45:b966:fb00:3ac9:5265:a79e:4a2a) (Ping timeout: 252 seconds)
[21:17:34] *** Quits: tyson2 (~user@bras-base-toroon0628w-grc-46-142-112-141-177.dsl.bell.ca) (Remote host closed the connection)
[21:28:07] *** Quits: lxsameer (~lxsameer@user/lxsameer) (Ping timeout: 256 seconds)
[21:30:44] *** Joins: zwr (~zwr@2804:d45:b966:fb00:3e37:1000:411e:c48c)
[21:31:44] *** Quits: kulak (~kulak@user/kulak) (Quit: kulak)
[21:31:52] *** Joins: jpw (~jpw@user/jpw)
[21:32:02] *** Joins: kulak (~kulak@user/kulak)
[21:32:20] *** Quits: kulak (~kulak@user/kulak) (Client Quit)
[21:38:02] <mikoto-chan> https://dpaste.com/3SMVW46RG
[21:38:47] <mikoto-chan> is there a way to make this shorter? what I'm trying to do is run some function on a struct and its children (of the same type) but I'd rather not create a new function for the sole purpose of doing that
[21:39:01] <mikoto-chan> I basically want to avoid repeating myself before I enter the for-loop if possible
[21:43:53] *** Joins: dalek-caan (~Thunderbi@109-252-124-86.nat.spd-mgts.ru)
[21:44:43] <fizzie> There's `for _, v := range append([]*post{t}, t.Children...) {` but it involves creating a new slice, which is inelegant. Go in general doesn't really go (no pun intended) for the sort of shortcuts that help you to stay as DRY as possible.
[21:47:30] *** Joins: andlabs (~andlabs@2a00:79e1:abc:1a0a:89dd:8b71:2032:f8d2)
[21:48:52] <siXy> Could you make your type implement sql.Scanner, so that you can just pass your type in, and have the Scan() function populate t and t.Children?
[21:56:43] *** Quits: andlabs (~andlabs@2a00:79e1:abc:1a0a:89dd:8b71:2032:f8d2) (Quit: My MacBook has gone to sleep. ZZZzzz…)
[21:59:04] *** Quits: neurocyte0132889 (~neurocyte@user/neurocyte) (Ping timeout: 264 seconds)
[22:00:16] *** Quits: orthoplex64 (~crm@70.120.0.94) (Ping timeout: 264 seconds)
[22:00:55] *** Joins: orthoplex64 (~crm@70.120.0.94)
[22:01:23] *** Joins: andlabs (~andlabs@2a00:79e1:abc:1a0a:e40f:d988:aabf:76c)
[22:01:30] *** Quits: mrig (~AdiIRC@user/mrig) (Quit: Going offline, see ya! (www.adiirc.com))
[22:03:09] *** Quits: foki (~bob@197.0.120.66) (Remote host closed the connection)
[22:05:22] <bpalmer> mikoto-chan: remember that  you can define an inner function inside the bigger one:   f := func(p *post) error { ... };  err := f(t); ... for _, v := ranget.Children { err := f(v); ...}
[22:05:23] *** Joins: mrig (~mrig@user/mrig)
[22:05:46] <bpalmer> it still means defining a function but at least you're not messing with user visible code.
[22:07:02] <bpalmer> although without going to the panic well, you still have to handle propagating errors which means you have an if condition after each.
[22:09:05] *** Joins: sav (~savio@177.12.48.155)
[22:09:13] *** Joins: krux02 (~krux02@p200300e8170c11004db6e8013ca32c23.dip0.t-ipconnect.de)
[22:09:29] *** sav is now known as Guest8054
[22:12:20] <mikoto-chan> bpalmer: anonymous functions? of course ... now that I think of it, maps (as in applying a function on all objects in an array) could also come in handy
[22:14:26] *** lvlinux is now known as ruhnet
[22:15:13] *** ruhnet is now known as lvlinux
[22:16:43] *** Joins: jpw_ (~jpw@user/jpw)
[22:17:15] *** Joins: tyson2 (~user@cpe00fc8d34ff03-cm00fc8d34ff00.sdns.net.rogers.com)
[22:19:44] *** Quits: jpw (~jpw@user/jpw) (Ping timeout: 256 seconds)
[22:20:40] *** Quits: fikran (~fikran@user/fikran) (Ping timeout: 264 seconds)
[22:22:24] *** Joins: fikran (~fikran@user/fikran)
[22:23:12] *** Joins: be3uykpy (~be3uykpy@2a00:a040:19a:b060:1ce1:8bdb:cbba:1c0e)
[22:24:35] *** Joins: Mattiaslndstrm (~Mattiasln@c213-103-137-235.bredband.tele2.se)
[22:24:58] *** Quits: Mattiaslndstrm (~Mattiasln@c213-103-137-235.bredband.tele2.se) (Client Quit)
[22:29:28] *** Joins: CaryHartline (~CaryHartl@2603-8080-6a0e-8d88-bc7b-beb0-653c-822c.res6.spectrum.com)
[22:35:21] *** Joins: lofiguy (~lofiguy@87-207-104-205.dynamic.chello.pl)
[22:41:56] <b0nn> mickey8: People were pointing you at a "Seperation of concerns" - typically (direct) Database access is in its own type, the struct that was mentioned, that has functions that do the SQL; they can do the caching for you
[22:48:33] *** Quits: smeeagle (~smeeagle@2a00:23c8:9611:e600:2446:13de:20ec:764f) (Quit: smeeagle)
[22:49:35] *** Quits: Rayke (rayke@user/rayke) (Quit: WeeChat 3.3)
[22:50:57] <b0nn> That struct will have the database Conn, and you either pass it one, or, more likely, create one as you instantiate the type, and /that/ would be protected by a sync.Once
[22:51:49] *** Joins: Rayke (rayke@user/rayke)
[22:52:18] <bpalmer> noord: oh, sure, feel free
[22:52:57] <b0nn> Oh, that reminds me, the A( question was a web dev job, and was a cold "Write an A* search for us"
[22:56:35] *** Quits: resamvi (~resamvi@user/resamvi) (Ping timeout: 252 seconds)
[22:59:12] *** Joins: k0ta (~k0ta@103.108.94.37)
[23:00:43] *** Joins: jpw (~jpw@user/jpw)
[23:02:11] *** Quits: jpw_ (~jpw@user/jpw) (Ping timeout: 256 seconds)
[23:05:39] <noord> b0nn: verbal section of interview also gives much hint about candidates background
[23:06:39] <b0nn> I mean - when I'm interviewing people; the hardest thing (with associates/juniors) is getting them to relax so I /san/ see that
[23:06:46] <b0nn> can*
[23:07:31] <b0nn> Usually they're nervous as hell, beating themselves up over simple mistakes
[23:07:45] <noord> once I have been asked maximum bipartite matching, I simply said dunno
[23:09:27] <b0nn> I mean, we all know tech recruiting is screwed, from both the interviewer's PoV, and the interviewees
[23:10:00] <b0nn> This is why I look at it as alargely a lucky dip (for both parties)
[23:10:13] *** Joins: resamvi (~resamvi@p4ff7768d.dip0.t-ipconnect.de)
[23:10:14] *** Quits: resamvi (~resamvi@p4ff7768d.dip0.t-ipconnect.de) (Changing host)
[23:10:14] *** Joins: resamvi (~resamvi@user/resamvi)
[23:10:44] <b0nn> You're not really looking at how an engineer is going to perform in the job, you're only seeing how they perform in interviews (which are artificial at best)
[23:12:01] <b0nn> Oh, that reminds me of the worst questions I get asked (and it happens a lot) - they're "We recently solved something that had been broken for *months* (meaning we couldn't find a solution for months) - we'd like you to solve it in 15 minutes or less, and for your solution to match ours
[23:12:46] <noord> b0nn: rule I follow, do not break candidates heart
[23:13:18] <noord> and try to ask questions what candidates prepared
[23:14:01] <noord> instead of forcing candidate to algorithm trivia, some narrative or story about question makes them feel relax
[23:14:40] <noord> in instance. I ask `have you ever heard git`?
[23:14:42] *** Quits: resamvi (~resamvi@user/resamvi) (Ping timeout: 256 seconds)
[23:14:50] <noord> candidate says yes
[23:15:17] *** Quits: jcajka (~jcajka@89-24-144-111.customers.tmcz.cz) (Quit: Leaving)
[23:15:21] <noord> then talk about what is merge operation and how it performs
[23:15:48] <noord> then ask real question, If we were linus, how to implement lowest common ancestor
[23:16:34] <noord> it doesn't have to be soulless and cold
[23:19:07] <b0nn> The other thing I do is try to help them with the feedback - "Obviously has covered this stuff before, eg. Data structures, but needs to brush up on them to be more articulate about them in an interview"
[23:23:34] *** Joins: beholders_eye (~weechat@2804:1b3:70c2:6ca7:3ca2:c97d:e473:e816)
[23:24:14] <noord> b0nn: there are strong indicators, toy projects about OS, statistics, interpreters, compilers, graphics, more than one programming language listed on cv and proven
[23:24:52] <noord> I hired lots of candidates that doesn't know the language we use
[23:27:20] *** Joins: spocklogical (~spocklogi@24-113-242-110.wavecable.com)
[23:28:50] *** Joins: rickybobby (rickybob@gateway/vpn/protonvpn/rickybob)
[23:29:09] *** Joins: optic__ (rickybob@gateway/vpn/protonvpn/rickybob)
[23:29:13] *** Quits: optic__ (rickybob@gateway/vpn/protonvpn/rickybob) (Remote host closed the connection)
[23:29:37] *** Quits: lofiguy (~lofiguy@87-207-104-205.dynamic.chello.pl) (Remote host closed the connection)
[23:29:39] *** Quits: ugjka (~ugjka@ugjka.net) (Quit: Rabooting the server https://ugjka.net)
[23:30:01] *** Joins: lofiguy (~lofiguy@87-207-104-205.dynamic.chello.pl)
[23:30:12] *** Joins: ugjka (~ugjka@ugjka.net)
[23:31:12] *** Quits: spocklogical (~spocklogi@24-113-242-110.wavecable.com) (Client Quit)
[23:31:19] *** Quits: dalek-caan (~Thunderbi@109-252-124-86.nat.spd-mgts.ru) (Quit: dalek-caan)
[23:43:48] *** Joins: resamvi (~resamvi@p4ff7768d.dip0.t-ipconnect.de)
[23:43:49] *** Quits: resamvi (~resamvi@p4ff7768d.dip0.t-ipconnect.de) (Changing host)
[23:43:49] *** Joins: resamvi (~resamvi@user/resamvi)
[23:47:16] *** Joins: smeeagle (~smeeagle@2a00:23c8:9611:e600:1401:22a5:674e:d69b)
[23:50:00] *** Quits: monke (~monke@user/monke) (Quit: The Lounge - https://thelounge.chat)
[23:57:16] *** Quits: beholders_eye (~weechat@2804:1b3:70c2:6ca7:3ca2:c97d:e473:e816) (Ping timeout: 264 seconds)
[23:57:53] *** Joins: miasuji (~miasuji@75-166-59-108.hlrn.qwest.net)
[23:59:26] *** Joins: esro (~esro@nat1.krakowskiinternet.pl)
[23:59:40] *** Quits: miasuji (~miasuji@75-166-59-108.hlrn.qwest.net) (Client Quit)
[23:59:42] *** Quits: esro (~esro@nat1.krakowskiinternet.pl) (Read error: Connection reset by peer)
