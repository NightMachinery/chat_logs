[00:08:54] *** Joins: peterhil_ (~peterhil@dsl-hkibng32-54f849-252.dhcp.inet.fi)
[00:09:44] *** Quits: peterhil (~peterhil@dsl-hkibng32-54f849-252.dhcp.inet.fi) (Ping timeout: 258 seconds)
[00:17:06] *** Joins: Quasus (~Quasus@a89-152-209-125.cpe.netcabo.pt)
[00:20:22] *** Quits: shka (~herr@109.231.62.239) (Ping timeout: 252 seconds)
[00:30:13] <Josh_2> Slow day today
[00:30:55] *** Joins: tfb (~tfb@88.98.95.237)
[00:32:44] *** Quits: raeda (~raeda@72.49.219.33) (Ping timeout: 258 seconds)
[00:33:59] *** Quits: derelict (~derelict@user/derelict) (Ping timeout: 244 seconds)
[00:34:15] *** Quits: tfb (~tfb@88.98.95.237) (Client Quit)
[00:38:36] *** Joins: aeth_ (~Michael@user/aeth)
[00:38:56] *** Quits: aeth (~Michael@user/aeth) (Ping timeout: 250 seconds)
[00:39:03] *** aeth_ is now known as aeth
[00:41:09] *** Joins: minion (~minion@common-lisp.net)
[00:41:56] *** Quits: minion (~minion@common-lisp.net) (Remote host closed the connection)
[00:42:10] *** Joins: minion (~minion@common-lisp.net)
[00:44:28] *** Quits: minion (~minion@common-lisp.net) (Remote host closed the connection)
[00:44:43] *** Joins: minion (~minion@common-lisp.net)
[00:45:16] *** Joins: specbot (~specbot@common-lisp.net)
[00:51:04] *** Quits: peterhil_ (~peterhil@dsl-hkibng32-54f849-252.dhcp.inet.fi) (Ping timeout: 250 seconds)
[00:52:41] *** Joins: peterhil (~peterhil@dsl-hkibng32-54f849-252.dhcp.inet.fi)
[00:58:13] *** Quits: specbot (~specbot@common-lisp.net) (Remote host closed the connection)
[00:58:13] *** Quits: minion (~minion@common-lisp.net) (Remote host closed the connection)
[00:59:07] *** Joins: minion (~minion@common-lisp.net)
[00:59:07] *** Quits: minion (~minion@common-lisp.net) (Excess Flood)
[00:59:07] *** Joins: specbot (~specbot@common-lisp.net)
[00:59:07] *** Quits: specbot (~specbot@common-lisp.net) (Remote host closed the connection)
[00:59:48] *** Joins: minion (~minion@common-lisp.net)
[00:59:48] *** Quits: minion (~minion@common-lisp.net) (Excess Flood)
[01:04:14] <jmercouris> sure is
[01:04:21] <jmercouris> hello Josh_2
[01:04:42] *** Joins: j3pic (~user@cpe-174-105-5-165.columbus.res.rr.com)
[01:05:17] <Josh_2> Hey jmercouris
[01:08:47] *** Parts: j3pic (~user@cpe-174-105-5-165.columbus.res.rr.com) ()
[01:08:53] *** Joins: j3pic (~user@cpe-174-105-5-165.columbus.res.rr.com)
[01:14:40] *** Quits: IAmRasputin (~ryan.gann@50-207-73-195-static.hfc.comcastbusiness.net) (Ping timeout: 265 seconds)
[01:15:00] *** Quits: attila_lendvai (~alendvai@catv-213-222-140-172.catv.broadband.hu) (Ping timeout: 252 seconds)
[01:15:32] *** Joins: derelict (~derelict@user/derelict)
[01:15:37] *** Quits: derelict (~derelict@user/derelict) (Client Quit)
[01:17:44] *** Joins: bhaible (~bruno@dslb-088-068-034-084.088.068.pools.vodafone-ip.de)
[01:19:00] *** Quits: remexre (~nathan@user/remexre) (Quit: WeeChat 3.0.1)
[01:19:45] *** Joins: kakuhen (~kakuhen@2600:6c50:103f:f86e:1803:43a0:1ac4:bcb3)
[01:19:45] *** Quits: kakuhen (~kakuhen@2600:6c50:103f:f86e:1803:43a0:1ac4:bcb3) (Changing host)
[01:19:45] *** Joins: kakuhen (~kakuhen@user/kakuhen)
[01:22:06] *** j3pic is now known as VFR
[01:24:32] *** Quits: [deleted] (~livoreno@user/notzmv) (Ping timeout: 252 seconds)
[01:25:40] *** Joins: livoreno (~livoreno@user/notzmv)
[01:28:29] *** Joins: remexre (~nathan@user/remexre)
[01:29:47] *** Quits: cage (~cage@dynamic-adsl-78-15-34-62.clienti.tiscali.it) (Quit: rcirc on GNU Emacs 27.1)
[01:42:41] *** Joins: minion (~minion@common-lisp.net)
[01:42:42] *** Joins: specbot (~specbot@common-lisp.net)
[01:42:42] *** Quits: minion (~minion@common-lisp.net) (Excess Flood)
[01:42:42] *** Quits: specbot (~specbot@common-lisp.net) (Remote host closed the connection)
[01:44:10] *** Quits: aeth (~Michael@user/aeth) (Ping timeout: 246 seconds)
[01:45:42] *** Quits: yitzi (~yitzi@173-27-106-188.client.mchsi.com) (Quit: Leaving)
[01:46:15] *** Joins: aeth (~Michael@user/aeth)
[01:48:54] *** Quits: Inline (~Inline@2a02:908:1252:7a80:c035:deeb:51be:5431) (Quit: Leaving)
[01:50:37] *** Joins: Inline (~Inline@2a02:908:1252:7a80:c035:deeb:51be:5431)
[01:51:27] *** Quits: ec (~ec@gateway/tor-sasl/ec) (Ping timeout: 244 seconds)
[01:51:59] *** Joins: akoana (~ah@user/akoana)
[02:02:23] *** Joins: derelict (~derelict@user/derelict)
[02:03:19] *** Joins: CrashTestDummy2 (~CrashTest@ool-ad02813b.dyn.optonline.net)
[02:04:00] *** Quits: amb007 (~a_bakic@23.184.126.78.rev.sfr.net) (Read error: Connection reset by peer)
[02:04:50] *** Joins: amb007 (~a_bakic@23.184.126.78.rev.sfr.net)
[02:06:32] *** Quits: CrashTestDummy (~CrashTest@ool-ad02813b.dyn.optonline.net) (Ping timeout: 268 seconds)
[02:07:18] *** Joins: minion (~minion@common-lisp.net)
[02:07:58] *** Joins: specbot (~specbot@common-lisp.net)
[02:10:15] *** Joins: erik_ (~erik@94-209-168-105.cable.dynamic.v4.ziggo.nl)
[02:10:19] *** Quits: waleee (~waleee@2001:9b0:216:8200:d457:9189:7843:1dbd) (Ping timeout: 268 seconds)
[02:10:24] <erik_> clhs: load-time-value
[02:10:37] <erik_> specbot, clhs load-time-value
[02:10:48] <erik_> hmm.
[02:10:49] <erik_> ok.
[02:10:56] <erik_> apparently, that's not how it works.
[02:11:36] <^[> ::clhs load-time-value
[02:11:37] <Colleen> Clhs: special operator load-time-value http://www.lispworks.com/documentation/HyperSpec/Body/s_ld_tim.htm
[02:12:12] *** Joins: waleee (~waleee@h-98-128-228-119.NA.cust.bahnhof.se)
[02:12:19] *** Quits: minion (~minion@common-lisp.net) (Remote host closed the connection)
[02:12:19] *** Quits: specbot (~specbot@common-lisp.net) (Remote host closed the connection)
[02:12:42] *** Joins: minion (~minion@common-lisp.net)
[02:13:02] *** Joins: specbot (~specbot@common-lisp.net)
[02:29:39] *** Quits: tyson2 (~user@bras-base-toroon0624w-grc-17-50-101-91-221.dsl.bell.ca) (Ping timeout: 258 seconds)
[02:29:59] *** Joins: ec (~ec@gateway/tor-sasl/ec)
[02:30:44] *** Quits: erik_ (~erik@94-209-168-105.cable.dynamic.v4.ziggo.nl) (Ping timeout: 250 seconds)
[02:31:49] *** Joins: CrashTestDummy3 (~CrashTest@ool-ad02813b.dyn.optonline.net)
[02:33:46] *** Quits: aeth (~Michael@user/aeth) (Ping timeout: 250 seconds)
[02:34:55] *** Quits: akoana (~ah@user/akoana) (Ping timeout: 246 seconds)
[02:34:56] *** Quits: CrashTestDummy2 (~CrashTest@ool-ad02813b.dyn.optonline.net) (Ping timeout: 252 seconds)
[02:35:25] *** Joins: aeth (~Michael@user/aeth)
[02:39:28] *** Quits: derelict (~derelict@user/derelict) (Ping timeout: 246 seconds)
[02:43:11] *** Joins: char (~Srain@c-73-232-118-40.hsd1.tx.comcast.net)
[02:46:15] *** Joins: akoana (~ah@user/akoana)
[02:46:49] *** Joins: akoana_ (~ah@user/akoana)
[02:46:56] *** Joins: gigamonkey (~user@135-180-44-14.fiber.dynamic.sonic.net)
[02:47:55] *** Quits: Duuqnd (~duuqnd@89-253-114-156.customers.ownit.se) (Remote host closed the connection)
[02:48:02] *** Joins: killsushi (~killsushi@user/killsushi)
[02:51:37] <char> what is consensus on using guix to manage common lisp packages?
[02:57:40] *** Quits: peterhil (~peterhil@dsl-hkibng32-54f849-252.dhcp.inet.fi) (Ping timeout: 252 seconds)
[02:57:42] *** Joins: peterhil_ (~peterhil@dsl-hkibng32-54f849-252.dhcp.inet.fi)
[03:01:20] *** Quits: akoana (~ah@user/akoana) (Quit: leaving)
[03:01:20] *** Quits: akoana_ (~ah@user/akoana) (Quit: leaving)
[03:01:56] *** Quits: taiju (~taiju@240b:253:ec40:2400:654f:7566:b735:5f06) (Ping timeout: 250 seconds)
[03:01:57] *** Joins: akoana (~ah@user/akoana)
[03:03:02] *** Quits: frgo (~frgo@p200300deef27d700c4e0c85dcaaf5733.dip0.t-ipconnect.de) (Remote host closed the connection)
[03:03:29] *** Joins: frgo (~frgo@p200300deef27d700c4e0c85dcaaf5733.dip0.t-ipconnect.de)
[03:05:43] *** Quits: char (~Srain@c-73-232-118-40.hsd1.tx.comcast.net) (Ping timeout: 246 seconds)
[03:07:05] *** Joins: taiju (~taiju@m014013236064.v4.enabler.ne.jp)
[03:09:01] *** Joins: selwyn (~selwyn@user/selwyn)
[03:09:13] *** Joins: selwyn_ (~selwyn@user/selwyn)
[03:10:26] *** Joins: CrashTestDummy (~CrashTest@ool-ad02813b.dyn.optonline.net)
[03:12:43] *** Quits: CrashTestDummy3 (~CrashTest@ool-ad02813b.dyn.optonline.net) (Ping timeout: 246 seconds)
[03:15:09] *** Quits: varjag (~user@ti0040a400-5479.bb.online.no) (Quit: ERC (IRC client for Emacs 28.0.50))
[03:15:50] *** Quits: Quasus (~Quasus@a89-152-209-125.cpe.netcabo.pt) (Quit: abiit)
[03:21:02] *** Joins: derelict (~derelict@user/derelict)
[03:24:10] *** Quits: Steeve (~steve@user/steeve) (Quit: end)
[03:24:57] *** Quits: selwyn_ (~selwyn@user/selwyn) (Quit: Leaving)
[03:36:46] *** Quits: random-nick (~random-ni@87.116.183.64) (Ping timeout: 265 seconds)
[03:36:50] *** Joins: IAmRasputin (~ryan.gann@209.6.125.193)
[03:51:11] *** Quits: kevingal (~quassel@2a02:8084:4140:f300:510e:d4f0:a295:1bdb) (Remote host closed the connection)
[03:53:46] *** Quits: amb007 (~a_bakic@23.184.126.78.rev.sfr.net) (Ping timeout: 252 seconds)
[03:55:36] *** Quits: selwyn (~selwyn@user/selwyn) (Read error: Connection reset by peer)
[04:06:04] *** Quits: waleee (~waleee@h-98-128-228-119.NA.cust.bahnhof.se) (Ping timeout: 250 seconds)
[04:06:29] *** Joins: amb007 (~a_bakic@54.104.204.77.rev.sfr.net)
[04:06:29] *** Quits: amb007 (~a_bakic@54.104.204.77.rev.sfr.net) (Read error: Connection reset by peer)
[04:06:43] *** Joins: amb007 (~a_bakic@23.184.126.78.rev.sfr.net)
[04:34:37] *** Quits: gigamonkey (~user@135-180-44-14.fiber.dynamic.sonic.net) (Ping timeout: 246 seconds)
[04:56:24] *** Joins: [deleted] (~livoreno@user/notzmv)
[04:58:30] *** Quits: livoreno (~livoreno@user/notzmv) (Ping timeout: 250 seconds)
[05:05:54] *** Joins: tophullyte (~tophullyt@63.246.255.209)
[05:09:26] *** Quits: akoana (~ah@user/akoana) (Quit: leaving)
[05:12:15] *** Quits: Oddity (Oddity@S01065c76952069d4.no.shawcable.net) (Changing host)
[05:12:15] *** Joins: Oddity (Oddity@user/oddity)
[05:19:14] *** Joins: ivche (~user@89.205.100.51)
[05:20:01] <ivche> hey ppl, so im going through some material, and im trying to make a web server as an exercise
[05:20:23] <ivche> i use sbcl and the resource uses clisp, so socket implementation is different
[05:20:46] <ivche> therefore I cant see where I'm making a mistake
[05:21:01] <ivche> https://ghostbin.co/paste/nezu
[05:21:39] <ivche> here is my code, when I start up the server with the (serve) function, and try to visit the server from my browser
[05:22:45] <ivche>  
[05:22:45] <ivche> #<SB-SYS:FD-STREAM for "socket 127.0.0.1:8820, peer: 127.0.0.1:39478" {100288D503}>:
[05:22:45] <ivche>  
[05:22:45] <ivche>   the octet sequence #(252 3 3 43) cannot be decoded.
[05:22:48] <ivche>    [Condition of type SB-INT:STREAM-DECODING-ERROR]
[05:22:51] <ivche> i get this error
[05:23:02] <ivche> any ideas why that might be the case?
[05:23:03] *** Quits: tophullyte (~tophullyt@63.246.255.209) (Quit: Leaving)
[05:25:00] <kakuhen> depending on what exactly the clisp resource uses, you may be able to get away with using usocket
[05:25:17] <kakuhen> it should give you the relevant sbcl socket calls when using it
[05:26:13] <kakuhen> anyway, assuming your serve function is set up correctly, can you trace the function that gets given that octet sequence
[05:33:04] <pjb> ivche: you don't specify an :element-type to sockets, so it's character by default, therefore it uses an encoding. Since you didn't specify a common :external-format, it's the default one in each process that is used. Probably not the same.
[05:34:13] <pjb> ivche: https://koji-kojiro.github.io/sb-docs/build/html/sb-bsd-sockets/generic-function/SOCKET-MAKE-STREAM.html
[05:34:27] <pjb> Try :element-type '(unsigned-byte 8)
[05:34:47] <ivche> but look
[05:34:48] <ivche>  
[05:34:48] <ivche> CL-USER> sb-ext:*default-external-format*
[05:34:48] <ivche> :UTF-8
[05:35:07] <pjb> How do you know the other process uses utf-8 too?
[05:35:46] <ivche> The default external format is UTF-8. It can be changed via
[05:35:47] <ivche>  
[05:35:47] <ivche> sb-ext:*default-external-format* and sb-ext:*default-c-string-external-format*
[05:35:47] <ivche>  
[05:35:50] <ivche>  
[05:35:56] <ivche> docs
[05:36:08] <ivche> also
[05:36:16] <pjb> ivche: also, 3 is not the ASCII code of a character, but an ASCII control code (for ETX).  So it's not a character stream.
[05:36:24] <ivche> i think i accessed it via https
[05:36:32] <ivche> and that messed it up
[05:36:55] <pjb> Then you'd have to use a TLS library.
[05:37:15] <pjb> ivche: you can try: telnet 127.0.0.1 8820
[05:37:18] <ivche> but when i tried http, i get localhost sent an invalid response
[05:37:33] <ivche> and when i tried to curl it, i got
[05:37:40] <pjb> Does your exercise involves TLS?
[05:37:49] <ivche> * Connected to localhost (127.0.0.1) port 8822 (#0)
[05:37:49] <ivche> > GET /greeting HTTP/1.1
[05:37:49] <ivche> > Host: localhost:8822
[05:37:49] <ivche> > User-Agent: curl/7.77.0
[05:37:52] <ivche> > Accept: */*
[05:37:57] <ivche> >
[05:37:58] <pjb> Sounds good.
[05:38:00] <ivche> * Received HTTP/0.9 when not allowed
[05:38:03] <ivche> * Closing connection 0
[05:38:06] <ivche> no
[05:38:27] <ivche> why cant i GET it tho?
[05:39:31] <ivche> Trying 127.0.0.1...
[05:39:31] <ivche> Connected to 127.0.0.1.
[05:39:31] <ivche> Escape character is '^]'.
[05:39:39] <ivche> this is the telnet output
[05:39:45] <pjb> GET /greeting HTTP/1.1 RET
[05:41:04] <ivche> Trying 127.0.0.1...
[05:41:04] <ivche> Connected to 127.0.0.1.
[05:41:04] <ivche> Escape character is '^]'.
[05:41:04] <ivche> GET /greeting HTTP/1.1 RET
[05:41:09] <ivche>  
[05:41:10] <ivche> Sorry... I don't know that page.Connection closed by foreign host.
[05:41:11] <pjb> Are you witting a server or a client?
[05:41:17] <ivche> omg i actually got a response
[05:41:21] <ivche> server
[05:41:32] <ivche> i sent the code
[05:41:35] <pjb> But it is not correct, it should start with a http status code!
[05:41:36] <ivche> u can skim over it
[05:42:01] <ivche> no but it's a mock server
[05:42:17] <ivche> it doesn't implement all of http
[05:42:24] <pjb> ok
[05:43:09] <ivche> why can't i access it from the browser tho
[05:43:20] <pjb> Anyways, contrarily to the appearances, HTTP is a binary protocol…
[05:43:38] <ivche> okay?
[05:43:43] <pjb> ivche: because you didn't implement HTTP, only a mock version of it.
[05:44:20] <ivche> yeah but the guy in the book gets a response
[05:44:41] <pjb> perhaps he doesn't use the same browser?
[05:44:42] <ivche> can it be that the book is ancient?
[05:45:16] <ivche> i mean 2010
[05:46:21] <pjb> Yes.
[05:54:04] *** Quits: peterhil_ (~peterhil@dsl-hkibng32-54f849-252.dhcp.inet.fi) (Ping timeout: 246 seconds)
[05:54:34] <pjb> ivche: it could help if you flushed the buffers!
[05:55:27] <ivche> it actually works on firefox
[05:55:29] <ivche> W O W
[05:55:56] *** Parts: ivche (~user@89.205.100.51) (ERC (IRC client for Emacs 27.2))
[05:56:52] *** Joins: ivche (~user@89.205.100.51)
[05:57:00] <ivche> killed the buffer
[05:57:02] <ivche> by mistake
[05:57:10] <ivche> i was saying, firefox works
[05:58:12] *** Joins: zacts (~zak@user/zacts)
[05:58:15] *** Quits: zacts (~zak@user/zacts) (Client Quit)
[05:59:09] <ivche> but why does it display this <!DOCTYPE html><html><meta charset="utf-8"><h1>Hello world!</h1></html>
[05:59:15] <ivche> instead rendering the HTML?
[05:59:37] <pjb> Because you didn't return a HTTP header with the content-type.
[06:01:00] <pjb> https://www.w3.org/Protocols/
[06:01:30] <ivche> i see
[06:01:44] <ivche> yeah, a lot has changed
[06:01:56] <pjb> See the example in section 2.1 in https://datatracker.ietf.org/doc/html/rfc7230
[06:02:06] <pjb> (page 7)
[06:15:45] <ivche> https://imgur.com/wQEpxmk
[06:15:49] <ivche> lets gooo
[06:16:02] <ivche> thank you a lot.. With the headers, it works on chrome too
[06:16:07] <ivche> brave*
[06:16:22] <ivche> but that's chrome anyways :D
[06:17:02] *** Quits: hendursa1 (~weechat@user/hendursaga) (Quit: hendursa1)
[06:19:33] *** Joins: hendursaga (~weechat@user/hendursaga)
[06:22:06] *** Joins: ircseeker (~nodebot@185.240.244.157)
[06:36:37] *** Joins: prxq_ (~quassel@x4db915df.dyn.telefonica.de)
[06:40:14] *** Quits: prxq (~quassel@x4db6e134.dyn.telefonica.de) (Ping timeout: 252 seconds)
[06:52:31] *** Parts: ivche (~user@89.205.100.51) (ERC (IRC client for Emacs 27.2))
[07:14:20] *** Quits: ec (~ec@gateway/tor-sasl/ec) (Quit: ec)
[07:32:20] <beach> Good morning everyone!
[07:48:34] <Josh_2> Morning beach
[07:58:15] *** Quits: Posterdati (~posterdat@host-79-12-208-242.retail.telecomitalia.it) (Ping timeout: 265 seconds)
[08:04:32] *** Joins: char (~Srain@c-73-232-118-40.hsd1.tx.comcast.net)
[08:07:29] *** Joins: Posterdati (~posterdat@host-82-49-175-12.retail.telecomitalia.it)
[08:08:25] *** Joins: Lord_of_Life_ (~Lord@user/lord-of-life/x-2819915)
[08:08:36] *** Quits: Lord_of_Life (~Lord@user/lord-of-life/x-2819915) (Ping timeout: 252 seconds)
[08:09:39] *** Lord_of_Life_ is now known as Lord_of_Life
[08:38:26] *** Joins: shka (~herr@109.231.62.239)
[08:39:32] *** Quits: Bike (~Glossina@71.69.170.70) (Quit: Lost terminal)
[08:49:46] <rdrg109> Good evening
[08:51:13] <beach> Hello rdrg109.
[08:58:27] *** Joins: yp (~yp@113.116.20.52)
[08:58:52] *** yp is now known as Guest5592
[09:00:22] *** Joins: CrashTestDummy2 (~CrashTest@ool-ad02813b.dyn.optonline.net)
[09:03:25] *** Quits: CrashTestDummy (~CrashTest@ool-ad02813b.dyn.optonline.net) (Ping timeout: 246 seconds)
[09:06:18] *** Joins: dsk (~dsk@user/dsk)
[09:09:05] *** Quits: srhm (~ascii@user/srhm) (Quit: Konversation terminated!)
[09:15:18] <rdrg109> I'm using SBCL and I'm trying to understand how to use ASDF, so I'm reading this manual https://common-lisp.net/project/asdf-install/tutorial/index-save.html#pre. According to that guide, I can load ASDF-INSTALL by executing (require :asdf-install)
[09:15:23] <rdrg109> However, when I execute that command, I get
[09:15:31] <rdrg109> Don't know how to REQUIRE ASDF-INSTALL.
[09:17:06] <kakuhen> I thought most major CL implementations came with asdf bundled?
[09:17:34] *** Quits: ircseeker (~nodebot@185.240.244.157) (Remote host closed the connection)
[09:17:50] <char> kakuhen: yes but they are not always "available" and must be requred.
[09:18:22] <rdrg109> How should I require asdf-install?
[09:18:27] <char> rdrg109: did you try just (require :asdf)
[09:18:31] <kakuhen> ^
[09:19:14] <rdrg109> (require :asdf) returns nil
[09:19:48] <rdrg109> But when I try to execute (asdf-install:install :cl-ppcre)
[09:19:57] <rdrg109> I get:  Package ASDF-INSTALL does not exist.
[09:20:03] <char> (asdf:load-system :cl-ppcre)
[09:20:45] <rdrg109> Thanks, it works. How can I use asdf:install?
[09:21:30] <kakuhen> this just looks like a really old quicklisp
[09:21:35] <rdrg109> Mmhh, I visited https://www.cliki.net/asdf-install and found the following
[09:21:39] <kakuhen> anyway, the "Installing ASDF-INSTALL" section is relevant for you I think
[09:21:40] <rdrg109> asdf-install completely died more than a decade ago, having been completely superseded by Quicklisp.
[09:21:48] <char> rdrg109: what effect do you want that to have?
[09:21:49] <kakuhen> nice, my intuition was right
[09:22:28] <kakuhen> most people just use quicklisp nowadays, which automatically loads asdf, either the asdf bundled with your implementation, or a custom one supplied by quicklisp itself (if your implementation doesnt offer one)
[09:22:40] <rdrg109> char: As a clisp newbie, I thought that using ASDF-INSTALL was necessary for insatlling packages, but now with the information provided at https://www.cliki.net/asdf-install, I know that it is not necessary and I should use Quicklisp insterad
[09:23:06] <rdrg109> Thanks for the help
[09:23:44] <kakuhen> I strongly recommend you install quicklisp; instructions are here -> https://www.quicklisp.org/beta/
[09:23:48] *** Joins: CrashTestDummy3 (~CrashTest@ool-ad02813b.dyn.optonline.net)
[09:24:24] <char> quicklisp is really super. I'm experimenting with using guix to manage common lisp packages too though.
[09:24:32] <kakuhen> the process looks involved, but essentially you are downloading a lisp file, passing it to sbcl, and then you run (quicklisp-quickstart:install) and (ql:add-to-init-file) so that it loads whenever sbcl runs
[09:24:43] <char> rdrg109: happy to help
[09:26:52] *** Quits: CrashTestDummy2 (~CrashTest@ool-ad02813b.dyn.optonline.net) (Ping timeout: 246 seconds)
[09:26:54] <rdrg109> I'm trying to install this library https://common-lisp.net/project/lisplab/ and it mentions that it needs to be installed through asdf.
[09:27:06] <rdrg109> I want a library for experimenting with matrices so I choosed that one.
[09:28:42] <char> quicklisp uses asdf in the background, so if you quicklisp:quickload it, it will work, granted it is on quicklisp repository
[09:29:02] <White_Flame> it's not, I tried
[09:29:34] <White_Flame> however, it probably really should read "Lisplab is _loaded_ via asdf"
[09:29:53] <char> still good to use quicklisp to automatically get dependencies.
[09:30:01] <kakuhen> ^
[09:30:36] <White_Flame> install quicklisp ( https://www.quicklisp.org/beta/ ), download the code and unzip it under ~/quicklisp/local-projects/, and then you should be able to (ql:quickload "lisplab")
[09:30:48] <White_Flame> *download the lisplab code and unzip it under....
[09:31:17] <White_Flame> however if you're just looking for matrices, it'd be better to grab one that quicklisp supports
[09:31:26] <kakuhen> make sure you install lapack and the other deps too
[09:31:30] <kakuhen> I dont think quicklisp will pull those in
[09:31:42] <kakuhen> lapack is some fortran library iirc so id be surprised if it can somehow install it for you
[09:32:46] <White_Flame> are you looking for general mathematic matrices, or specifically like 3d graphics matrices?
[09:33:01] <rdrg109> general mathematic matrices
[09:34:08] <White_Flame> ok, I know less about that, but there is a linkage to octave: https://www.common-lisp.net/project/cl-octave/
[09:34:36] <rdrg109> White_Flame: How can I get a list of Quicklisp packages. The more information, the better. I only know how to list their names with (ql:system-apropos "")
[09:34:38] <White_Flame> but yeah, maybe lisplab would be the primary one here
[09:35:49] <White_Flame> there was site, quickdocs, but unfortunately the owner shut it down
[09:36:13] <char> rdrg109: there should be system-apropos-list too
[09:40:00] *** Quits: Inline (~Inline@2a02:908:1252:7a80:c035:deeb:51be:5431) (Quit: Leaving)
[09:41:02] <rdrg109> char: I get The function COMMON-LISP-USER::SYSTEM-APROPOS-LIST is undefined.
[09:41:37] <char> It would be ql:system-apropos-list, but my memory may be failing
[09:43:12] <beach> rdrg109: Please don't use "clisp" as an abbreviation for Common Lisp.
[09:43:23] <beach> rdrg109: CLISP is a particular implementation of Common Lisp.
[09:44:12] <beach> rdrg109: If you IRC client doesn't have abbrevs, you can use "CL" to mean Common Lisp.
[09:50:28] <rdrg109> beach: Understood!
[09:50:32] * beach wonders why anyone would write an IRC client without abbrevs, and why anyone would want to use such a client.
[09:51:01] <rdrg109> I'm using weechat. Taking into account weechat's extensibility, there probably is a feature for that.
[09:51:13] * beach also wonders why so few people seem to be interested in saving time by using abbrevs.
[09:51:36] <rdrg109> :o
[09:51:46] <rdrg109> will keep that in mind
[09:53:49] *** Quits: d4ryus (~d4ryus@ppp-188-174-87-234.dynamic.mnet-online.de) (Quit: WeeChat 3.2)
[09:54:03] <moon-child> beach: I think that systemic approaches to typing speed (such as stenography) may be worthwhile, but that my prose is not redundant enough that such a thing would be very helpful
[09:55:14] <beach> moon-child: I am tempted to go to the logs and do a frequency analysis of your utterances. :)
[09:56:55] *** Joins: d4ryus (~d4ryus@ppp-188-174-87-234.dynamic.mnet-online.de)
[09:59:03] *** Joins: ibinderwolf (~irc@81.161.232.13)
[10:01:28] <rdrg109> I moved lisplab to ~/quicklisp/local-projects/lisplab and I was able to execute (ql:quickload "lisplab"). The problem is that I'm getting a ton of errors with the following  format: is 0.0, not a DOUBLE-FLOAT. [Condition of type SIMPLE-TYPE-ERROR] (complete log: http://0x0.st/-9CT.txt)
[10:02:49] <moon-child> beach: http://0x0.st/-9CA.txt for your perusal
[10:02:52] <rdrg109> Is that normal behavior? Are those types of warnings as happen with g++ and big Qt projects?
[10:03:21] <moon-child> (also consider cognitive overhead, because obviously gzip will do a number on it)
[10:04:41] <beach> moon-child: Heh!  How long is that?
[10:05:30] *** Joins: susam_ (~susam_@user/susam)
[10:05:37] *** Quits: susam_ (~susam_@user/susam) (Client Quit)
[10:05:38] <beach> moon-child: It is interesting that the top one is "the", because my fingers are unable to type "the", and I end up with "teh" instead.  So I have an abbrev that corrects that one.
[10:05:47] *** Joins: CrashTestDummy2 (~CrashTest@ool-ad02813b.dyn.optonline.net)
[10:05:51] <moon-child> seems to be 20k unique words, 260k overall over a few years
[10:06:08] <moon-child> I have other logs from a few years before that
[10:06:18] *** Joins: susam_ (~susam_@user/susam)
[10:06:20] <moon-child> 'teh' vs 'the' is interesting; I would think 'the' is easier to spell, because it uses alternating hands!
[10:06:24] <moon-child> s/spell/type/
[10:06:44] <beach> I gave up trying to fix it the finger way.
[10:07:13] <moon-child> right, that's completely fair, I just find it interesting
[10:07:27] <beach> Indeed.
[10:07:39] <susam_> Hello everyone! Good morning!
[10:08:51] <beach> Hello susam_.
[10:09:14] *** Quits: CrashTestDummy3 (~CrashTest@ool-ad02813b.dyn.optonline.net) (Ping timeout: 265 seconds)
[10:09:21] <susam_> Hello beach!
[10:09:40] <susam_> Interesting discussion. I too make mistype "the" as "teh" often but indeed "the" should be easier to type due to alternating hands.
[10:09:49] <susam_> s/make//
[10:13:21] <kakuhen> (defmacro teh (type form) `(the ,type ,form))
[10:13:22] <kakuhen> problem solved
[10:18:45] <beach> Also, a per-word analysis is not quite fair since an abbrev can generate several words, as in "first-class global environments", "(admittedly small) family", "Good morning everyone!", "Common Lisp HyperSpec", "Second Climacs", "(first) Climacs", "my favorite coauthor", "Common Lisp", each of which I have an abbrev for.
[10:19:14] <moon-child> true
[10:36:06] *** Quits: char (~Srain@c-73-232-118-40.hsd1.tx.comcast.net) (Ping timeout: 258 seconds)
[10:38:28] *** Joins: Cymew (~ante@c-e989225c.023-1144-7570702.bbcust.telenor.se)
[10:42:46] *** Joins: unyu (~pyon@user/pyon)
[10:59:50] *** Quits: amb007 (~a_bakic@23.184.126.78.rev.sfr.net) (Ping timeout: 252 seconds)
[11:00:29] *** Joins: amb007 (~a_bakic@54.104.204.77.rev.sfr.net)
[11:01:20] *** Joins: leeb (~leeb@KD111239152196.au-net.ne.jp)
[11:04:28] *** Quits: leeb_ (~leeb@KD111239153068.au-net.ne.jp) (Ping timeout: 258 seconds)
[11:11:00] *** Joins: attila_lendvai (~alendvai@catv-86-101-74-70.catv.broadband.hu)
[11:13:17] *** Joins: peterhil (~peterhil@dsl-hkibng32-54f849-252.dhcp.inet.fi)
[11:24:01] <flip214> ah, that explains half a bit of redundancy
[11:24:09] *** Quits: amb007 (~a_bakic@54.104.204.77.rev.sfr.net) (Ping timeout: 265 seconds)
[11:24:28] *** Joins: amb007 (~a_bakic@21.145.204.77.rev.sfr.net)
[11:24:53] <phoe> I remember that there was a technique for garbage-collecting class objects generated via DEFCLASS. What was required is SETF FIND-CLASS NIL and REMOVE-DIRECT-SUBCLASS but there must be something more because the finalizer on the class object is not firing for me - any ideas what I'm missing?
[11:25:07] *** Joins: Duuqnd (~duuqnd@89-253-114-156.customers.ownit.se)
[11:29:20] <phoe> oh wait, it works
[11:33:08] *** Quits: whosit (~whosit@user/whosit) (Quit: leaving)
[11:41:05] <flip214> phoe: you could also redefine the class to contain no slots anymore... that should call INITIALIZE-INSTANCE
[11:41:31] <phoe> flip214: yes, but the constraint is, I explicitly want the old object to get collected
[11:41:50] <beach> flip214: INITIALIZE-INSTANCE?  Really?
[11:41:51] <phoe> reinitialize-instance will work on the old object and keep it alive instead
[11:41:58] <flip214> ah, sorry, UPDATE-INSTANCE-FOR-REDEFINED-CLASS
[11:42:06] <phoe> woop, this one, yes
[11:42:10] <flip214> http://www.lispworks.com/documentation/HyperSpec/Body/f_upda_1.htm#update-instance-for-redefined-class
[11:42:35] <flip214> there's also a MAKE-INSTANCES-OBSOLETE   http://www.lispworks.com/documentation/HyperSpec/Body/f_mk_i_1.htm#make-instances-obsolete
[11:42:46] <phoe> this one has nothing to do with GC though
[11:48:15] *** Quits: robin (~terpri@user/terpri) (Remote host closed the connection)
[11:51:34] <prxq_> phoe: if you generate many classes often and want to have them GCed regularly, it pays to have them in temporary packages which can just be deleted. Subsequently the classes get GCed as well.
[11:51:41] *** prxq_ is now known as prxq
[11:53:25] <phoe> prxq: actually they don't
[11:53:35] <phoe> the superclass-subclass link will keep them alive
[11:53:36] *** Quits: amb007 (~a_bakic@21.145.204.77.rev.sfr.net) (Ping timeout: 268 seconds)
[11:53:52] *** Joins: amb007 (~a_bakic@167.37.22.93.rev.sfr.net)
[11:53:55] <prxq> you mean from object?
[11:54:17] <phoe> I mean the link between the class object and its superclasses
[11:54:24] <phoe> (and/or subclasses)
[11:55:05] <prxq> even if the only superclass is object?
[11:55:05] *** Quits: amb007 (~a_bakic@167.37.22.93.rev.sfr.net) (Read error: Connection reset by peer)
[11:55:16] *** Joins: amb007 (~a_bakic@167.37.22.93.rev.sfr.net)
[11:55:16] *** Quits: amb007 (~a_bakic@167.37.22.93.rev.sfr.net) (Read error: Connection reset by peer)
[11:55:22] <phoe> what do you mean, is object?
[11:55:33] *** Joins: amb007 (~a_bakic@host.26.88.68.195.rev.coltfrance.com)
[11:55:41] <phoe> every class object has a default superclass of standard-class
[11:55:50] <prxq> what's the superclass of (defclass foo () ())
[11:56:08] <phoe> standard-class
[11:56:10] <prxq> I think it's T, it's object in Python m)
[11:56:24] <phoe> okay, you are right
[11:56:29] <prxq> ok, so if the only superclass is standard-class....
[11:56:35] <phoe> the *direct* superclass of that is standard-class
[11:56:40] <phoe> everything is of class T, by definition
[11:56:59] *** Joins: terpri (~terpri@user/terpri)
[11:58:00] <flip214> phoe: I guess having a UPDATE-INSTANCE-FOR-REDEFINED-CLASS method that runs CHANGE-CLASS on the instances to switch to a slotless (ie empty) class and triggering that via MAKE-INSTANCES-OBSOLETE might not need patching super/subclass relationships
[12:01:22] <phoe> flip214: I have DEFCLASS'd a hundred thousand times and I want these classes to be completely gone from the memory
[12:01:37] <phoe> because nothing uses these classes anymore
[12:08:23] *** Quits: clintm (~user@c-73-83-222-156.hsd1.wa.comcast.net) (Remote host closed the connection)
[12:10:14] *** Quits: White_Flame (~quassel@user/white-flame/x-6930243) (Remote host closed the connection)
[12:11:03] <flip214> well, you could just keep a pool of "free" STANDARD-CLASS instances and recycle them as needed as well ;)
[12:11:28] *** Joins: White_Flame (~quassel@user/white-flame/x-6930243)
[12:12:23] <phoe> we are reinventing manual allocation!
[12:13:50] <flip214> no, a "performance optimization" ;)
[12:18:28] *** Joins: ibinderwolf_ (~irc@81.161.232.13)
[12:19:34] *** Joins: Tomte (~th@p200300db9f18940074846f9423ed0d34.dip0.t-ipconnect.de)
[12:21:14] *** Quits: ibinderwolf (~irc@81.161.232.13) (Ping timeout: 252 seconds)
[12:23:09] *** Quits: kakuhen (~kakuhen@user/kakuhen) (Remote host closed the connection)
[12:23:51] *** Joins: clintm (~user@c-73-83-222-156.hsd1.wa.comcast.net)
[12:25:24] *** Joins: kakuhen (~kakuhen@user/kakuhen)
[12:36:58] *** Joins: hendursa1 (~weechat@user/hendursaga)
[12:39:21] *** Quits: hendursaga (~weechat@user/hendursaga) (Ping timeout: 244 seconds)
[12:42:00] *** Joins: pve (~pve@37-136-149-97.rev.dnainternet.fi)
[12:53:52] *** Quits: amb007 (~a_bakic@host.26.88.68.195.rev.coltfrance.com) (Read error: Connection reset by peer)
[12:54:29] *** Joins: amb007 (~a_bakic@host.26.88.68.195.rev.coltfrance.com)
[12:56:26] *** Quits: amb007 (~a_bakic@host.26.88.68.195.rev.coltfrance.com) (Read error: Connection reset by peer)
[12:56:55] *** Joins: amb007 (~a_bakic@host.26.88.68.195.rev.coltfrance.com)
[13:00:17] <flip214> CFFI pushes symbols in CFFI onto *FEATURES* (not keywords!), that means that such a *FEATURES* list may not be readable in arbitrary other images (because the package isn't available)
[13:14:46] *** Joins: selwyn (~selwyn@user/selwyn)
[13:35:05] *** Joins: zacts (~zak@user/zacts)
[13:50:59] <splittist> Wouldn't that be a highly misleading *features* list anyway?
[13:52:59] *** Quits: ceblan` (~user@94.red-81-40-96.staticip.rima-tde.net) (Read error: Connection reset by peer)
[13:54:20] <flip214> CFFI-FEATURES:FLAT-NAMESPACE CFFI-FEATURES:X86-64 CFFI-FEATURES:UNIX :CFFI CFFI-SYS::FLAT-NAMESPACE
[13:55:05] <flip214> other things use a dot, eg. :ESRAP.CAN-HANDLE-LEFT-RECURSION
[13:55:13] <flip214> perhaps CFFI should migrate
[13:58:30] <splittist> It does make actually using feature expressions more difficult (having other packages)
[14:01:19] <flip214> only if you need to check for these non-keyword features, right? although, if it's in your own packages you can make sure the package exists before testing for them
[14:04:46] *** Quits: zacts (~zak@user/zacts) (Quit: gtg)
[14:24:03] *** Joins: makomo (~makomo@user/makomo)
[14:24:27] *** Joins: tyson2 (~user@bras-base-toroon0624w-grc-17-50-101-91-221.dsl.bell.ca)
[14:26:13] *** Joins: kevingal (~quassel@2a02:8084:4140:f300:5901:169c:618d:74ad)
[14:35:04] *** Quits: IAmRasputin (~ryan.gann@209.6.125.193) (Ping timeout: 252 seconds)
[14:43:17] *** Joins: IAmRasputin (~ryan.gann@209.6.125.193)
[14:47:57] *** Quits: IAmRasputin (~ryan.gann@209.6.125.193) (Ping timeout: 258 seconds)
[14:54:31] *** Quits: prxq (~quassel@x4db915df.dyn.telefonica.de) (Quit: http://quassel-irc.org - Chat comfortably. Anywhere.)
[15:02:05] *** Quits: frgo (~frgo@p200300deef27d700c4e0c85dcaaf5733.dip0.t-ipconnect.de) (Remote host closed the connection)
[15:02:35] *** Joins: frgo (~frgo@p200300deef27d70045b88a0b37e405a7.dip0.t-ipconnect.de)
[15:03:28] *** Joins: ibinderwolf (~irc@81.161.232.13)
[15:04:46] *** Joins: random-nick (~random-ni@87.116.165.220)
[15:06:01] *** Quits: ibinderwolf_ (~irc@81.161.232.13) (Ping timeout: 246 seconds)
[15:06:01] *** Quits: amb007 (~a_bakic@host.26.88.68.195.rev.coltfrance.com) (Read error: Connection reset by peer)
[15:06:30] *** Joins: ibinderwolf_ (~irc@81.161.232.13)
[15:06:34] *** Joins: amb007 (~a_bakic@151.37.22.93.rev.sfr.net)
[15:09:07] *** Joins: ibinderwolf__ (~irc@81.161.232.13)
[15:09:52] *** Quits: ibinderwolf (~irc@81.161.232.13) (Ping timeout: 265 seconds)
[15:10:01] *** Joins: ibinderwolf (~irc@81.161.232.13)
[15:12:47] *** Quits: ibinderwolf_ (~irc@81.161.232.13) (Ping timeout: 268 seconds)
[15:13:34] *** Quits: ibinderwolf__ (~irc@81.161.232.13) (Ping timeout: 252 seconds)
[15:16:08] *** Quits: susam_ (~susam_@user/susam) (Quit: Client closed)
[15:16:09] *** Joins: erik_ (~erik@94-209-168-105.cable.dynamic.v4.ziggo.nl)
[15:20:57] <susam> Inspired by the rainbow-delimiters customization discussion yesterday and phoe's colour scheme for it, I managed to finally customize my rainbow-delimiters today: https://i.imgur.com/9aDbSkL.png . These are darker shades of the colours phoe shared yesterday. Now I have to wait and watch to see if I really like it or if I find the extra colours distracting.
[15:21:57] <phoe> my colors were used with a more grayish background from the zenburn theme; they're gonna look different on a black background
[15:22:14] <phoe> but, well, I like low-contrast themes, and zenburn gives me that
[15:23:11] <susam> Yes, that is what I realized. I have a darker background, so had to make the colours a bit darker to suit my contrast preference.
[15:23:54] *** Quits: amb007 (~a_bakic@151.37.22.93.rev.sfr.net) (Read error: Connection reset by peer)
[15:24:10] *** Joins: amb007 (~a_bakic@host.26.88.68.195.rev.coltfrance.com)
[15:25:09] *** Joins: ibinderwolf_ (~irc@81.161.232.13)
[15:28:14] *** Quits: ibinderwolf (~irc@81.161.232.13) (Ping timeout: 265 seconds)
[15:36:22] *** Quits: derelict (~derelict@user/derelict) (Ping timeout: 250 seconds)
[15:36:34] *** Quits: mortemeur (~mortemeur@pool-173-76-99-163.bstnma.fios.verizon.net) (Remote host closed the connection)
[15:39:41] *** Quits: clintm (~user@c-73-83-222-156.hsd1.wa.comcast.net) (Read error: Connection reset by peer)
[15:40:33] <edgar-rft> susam: if you want a really beautiful emacs I recommend this -> https://www.emacswiki.org/emacs/PinkBliss :-)
[15:41:37] *** Quits: erik_ (~erik@94-209-168-105.cable.dynamic.v4.ziggo.nl) (Ping timeout: 258 seconds)
[15:43:02] <susam> Eh! Too colorful! :) I use wombat + some customizations of mine. I like the muted colours of wombat.
[15:44:01] <edgar-rft> M-x unicorn-mode
[15:48:17] <kakuhen> i use a modified version of monokai in emacs when its night time
[15:48:21] <kakuhen> and rainbow-delimiters makes an actual rainbow
[15:48:27] <kakuhen> which is really nice
[15:51:18] <kakuhen> with that said, good night everybody~
[15:51:20] *** Quits: kakuhen (~kakuhen@user/kakuhen) (Quit: Leaving...)
[15:51:35] *** Joins: clintm (~user@c-73-83-222-156.hsd1.wa.comcast.net)
[15:52:09] *** Joins: derelict (~derelict@user/derelict)
[15:56:25] *** Quits: clintm (~user@c-73-83-222-156.hsd1.wa.comcast.net) (Remote host closed the connection)
[16:03:40] *** Quits: attila_lendvai (~alendvai@catv-86-101-74-70.catv.broadband.hu) (Ping timeout: 250 seconds)
[16:32:57] *** Quits: ibinderwolf_ (~irc@81.161.232.13) (Ping timeout: 268 seconds)
[16:45:54] *** Joins: cage (~cage@dynamic-adsl-78-15-34-62.clienti.tiscali.it)
[17:04:12] *** Quits: makomo (~makomo@user/makomo) (Quit: WeeChat 3.0.1)
[17:04:36] *** Joins: IAmRasputin (~ryan.gann@209.6.125.193)
[17:07:36] *** Quits: amb007 (~a_bakic@host.26.88.68.195.rev.coltfrance.com) (Read error: Connection reset by peer)
[17:07:54] *** Joins: amb007 (~a_bakic@host.26.88.68.195.rev.coltfrance.com)
[17:09:01] *** Quits: IAmRasputin (~ryan.gann@209.6.125.193) (Ping timeout: 258 seconds)
[17:09:58] *** Joins: knobo (~knobo@ti0021q161-1057.bb.online.no)
[17:14:28] *** Quits: aeth (~Michael@user/aeth) (Ping timeout: 246 seconds)
[17:16:16] *** Joins: aeth (~Michael@user/aeth)
[17:20:06] *** Joins: srhm (~ascii@user/srhm)
[17:22:51] *** Quits: unyu (~pyon@user/pyon) (Quit: WeeChat 3.2)
[17:27:27] *** Joins: mayureshkathe (~mayuresh@182.58.251.166)
[17:27:36] <mayureshkathe> hello. :)
[17:28:55] <beach> Hello mayureshkathe.
[17:31:58] <mayureshkathe> hello beach from france. :)
[17:33:55] *** Joins: Bike (~Glossina@71.69.170.70)
[17:33:55] *** ChanServ sets mode: +o Bike
[17:45:25] *** Quits: cage (~cage@dynamic-adsl-78-15-34-62.clienti.tiscali.it) (Remote host closed the connection)
[17:46:42] <mayureshkathe> gotta go now, ttyl.
[17:46:44] *** Quits: mayureshkathe (~mayuresh@182.58.251.166) (Quit: Leaving)
[17:50:35] <beach> Another non-user of abbrevs, apparently.
[17:51:58] <beach> mayureshkathe: y, syl, tc.
[18:01:09] *** Joins: IAmRasputin (~ryan.gann@209.6.125.193)
[18:04:50] *** Quits: Cymew (~ante@c-e989225c.023-1144-7570702.bbcust.telenor.se) (Ping timeout: 268 seconds)
[18:08:54] *** Quits: selwyn (~selwyn@user/selwyn) (Read error: Connection reset by peer)
[18:09:19] *** Joins: selwyn (~selwyn@user/selwyn)
[18:13:48] *** Joins: waleee (~waleee@2001:9b0:216:8200:d457:9189:7843:1dbd)
[18:17:51] *** Quits: amb007 (~a_bakic@host.26.88.68.195.rev.coltfrance.com) (Read error: Connection reset by peer)
[18:19:08] *** Joins: amb007 (~a_bakic@host.26.88.68.195.rev.coltfrance.com)
[18:19:26] *** Joins: Inline (~Inline@2a02:908:1252:7a80:c035:deeb:51be:5431)
[18:19:31] *** Joins: char (~Srain@2601:2c3:867f:e810:d001:caf1:1547:6810)
[18:22:38] *** Joins: djuber (~user@65.79.128.64)
[18:23:34] *** Joins: cage (~cage@dynamic-adsl-78-15-34-62.clienti.tiscali.it)
[18:25:45] *** Joins: peterhil_ (~peterhil@dsl-hkibng32-54f849-252.dhcp.inet.fi)
[18:26:18] <Josh_2> Afternoon :D
[18:26:18] *** Quits: peterhil (~peterhil@dsl-hkibng32-54f849-252.dhcp.inet.fi) (Read error: Connection reset by peer)
[18:27:37] *** Joins: ghard (~user@2a02:a210:23c2:6e00:3617:ebff:fed2:79cd)
[18:35:17] *** Quits: aeth (~Michael@user/aeth) (Ping timeout: 265 seconds)
[18:37:01] *** Joins: aeth (~Michael@user/aeth)
[18:37:18] <Josh_2> Anyone here used the function bknr.datastore:snapshot? Mine keeps failing trying to rename the a file
[18:39:38] <Josh_2> Not sure if its because I'm using relatives paths
[18:43:53] *** Joins: attila_lendvai (~alendvai@catv-86-101-74-70.catv.broadband.hu)
[18:45:49] <pjb> phoe: standard-class is a meta-class. standard-object could be the superclass: (defclass foo () ()) (typep (make-instance 'foo) 'standard-object) #| --> t |#
[18:46:28] <phoe> pjb: yes, that is what was meant - a class object instantiated via DEFCLASS has a direct superclass that is, by default, STANDARD-CLASS
[18:46:29] <pjb> (c2mop:class-direct-superclasses (find-class 'foo)) #| --> (#<standard-class standard-object>) |#
[18:46:45] <pjb> Ok.
[18:46:47] <phoe> or am I mixing things up?...
[18:46:49] * phoe double-checks
[18:47:07] <pjb> (typep (find-class 'foo) 'standard-class) #| --> t |#
[18:47:27] <pjb> (c2mop:class-direct-superclasses (class-of (find-class 'foo))) #| --> (#<standard-class ccl::std-class>) |#
[18:47:52] <beach> phoe: I don't think that's true.
[18:47:57] <pjb> phoe: me careful not to confuse superclasses and metaclasses.
[18:48:07] <phoe> beach: right, I am checking this now
[18:48:25] <phoe> yes, I screwed things up
[18:48:30] <pjb> beach: he's right: class of a class is  the metaclass.
[18:48:31] <phoe> the class is an *instance* of standard-class
[18:48:54] *** Joins: tfb (~tfb@88.98.95.237)
[18:49:07] <pjb> phoe: well, modulo implementations can insert any classes they want in the hierarchy.
[18:49:13] <phoe> yes
[18:49:14] <pjb> such as ccl::std-class in ccl.
[18:49:51] *** Quits: attila_lendvai (~alendvai@catv-86-101-74-70.catv.broadband.hu) (Ping timeout: 268 seconds)
[18:54:24] *** Quits: char (~Srain@2601:2c3:867f:e810:d001:caf1:1547:6810) (Ping timeout: 250 seconds)
[18:54:40] *** Quits: tfb (~tfb@88.98.95.237) (Quit: died)
[18:55:35] *** Joins: char (~Srain@c-73-232-118-40.hsd1.tx.comcast.net)
[19:09:43] <Josh_2> made an issue for bnkr but I do not expect that to get fixed
[19:10:03] <Josh_2> might have no choice but to go back to use postgres :(
[19:34:27] *** Joins: yitzi (~yitzi@173-27-106-188.client.mchsi.com)
[19:41:47] *** Joins: manicennui (uid349235@id-349235.tinside.irccloud.com)
[19:45:25] *** Joins: seanw (spwhitton@debian/spwhitton)
[19:49:14] *** Quits: char (~Srain@c-73-232-118-40.hsd1.tx.comcast.net) (Ping timeout: 265 seconds)
[19:51:14] *** Joins: tfb (~tfb@88.98.95.237)
[19:57:14] <_death> mcclim was useful in making debugging easy today https://adeht.org/dump/vid-2021-06-24T1821.mp4
[19:58:05] <jackdaniel> looks fancy!
[19:58:27] <jackdaniel> and shows that graph layout algorithm needs some work :)
[19:58:43] <_death> thanks, wrote it today to debug some annoying bug ;)
[19:59:05] <Josh_2> Very cool
[19:59:17] <jackdaniel> if you have problems with clipping-to-ellipse being very slow, fret not - it will be faster soon enough
[20:00:27] <_death> well, they're ok if you tweak some settings and the graph isn't too complex.. most serious was, I think, the incremental redisplay doesn't not working well if stuff is in formatting-x.. or I don't understand it well enough
[20:01:31] <jackdaniel> incremental redisplay needs some work (the same could be said about table formatting)
[20:01:50] <jackdaniel> so I wouldn't be surprised if you have hit a bug
[20:04:12] *** Quits: patience_ (~patience@203.129.29.40) (Ping timeout: 258 seconds)
[20:04:13] <_death> but otherwise it's very nice to create such a functional UI in <400 loc
[20:05:27] *** Quits: coat (~coat@user/coat) (*.net *.split)
[20:05:28] *** Quits: _whitelogger (~whitelogg@uruz.whitequark.org) (*.net *.split)
[20:05:28] *** Quits: GreaseMonkey (greaser@user/greasemonkey) (*.net *.split)
[20:05:28] *** Quits: jdz (~jdz@185.23.160.114) (*.net *.split)
[20:05:28] *** Quits: jcowan (sid325434@id-325434.charlton.irccloud.com) (*.net *.split)
[20:05:28] *** Quits: phoe (~phoe@user/phoe) (*.net *.split)
[20:05:28] *** Quits: palter (sid27521@id-27521.brockwell.irccloud.com) (*.net *.split)
[20:05:28] *** Quits: conjunctive (sid433686@id-433686.brockwell.irccloud.com) (*.net *.split)
[20:05:28] *** Quits: zephyr (~alandiper@ec2-34-230-252-114.compute-1.amazonaws.com) (*.net *.split)
[20:05:28] *** Quits: engblom (~foo@user/engblom) (*.net *.split)
[20:05:29] *** Quits: hugo (znc@verdigris.lysator.liu.se) (*.net *.split)
[20:05:29] *** Quits: commandoline (~commandol@ubuntu/member/commandoline) (*.net *.split)
[20:05:29] *** Quits: Xach (~xach@66-63-89-62.static.suscom-maine.net) (*.net *.split)
[20:05:29] *** Quits: Vultyre (~vultyre@user/vultyre) (*.net *.split)
[20:05:37] *** Joins: greaser|q (greaser@antihype.space)
[20:05:37] *** Joins: coat (~coat@user/coat)
[20:05:38] *** Joins: engblom_ (~foo@62-121-47-42.static.lounea.fi)
[20:05:38] *** Joins: Xach (~xach@66-63-89-62.static.suscom-maine.net)
[20:05:38] *** Joins: jcowan_ (sid325434@id-325434.charlton.irccloud.com)
[20:05:39] *** Joins: commandoline (~commandol@ubuntu/member/commandoline)
[20:05:41] *** Joins: jdz (~jdz@185.23.160.114)
[20:05:42] *** Joins: phoe_ (~phoe@2001:19f0:5:689f:5400:2ff:fe77:b1de)
[20:06:28] *** Joins: _whitelogger (~whitelogg@uruz.whitequark.org)
[20:06:41] *** Joins: palter (sid27521@id-27521.brockwell.irccloud.com)
[20:06:45] *** Joins: conjunctive (sid433686@id-433686.brockwell.irccloud.com)
[20:06:46] *** Quits: killsushi (~killsushi@user/killsushi) (Ping timeout: 250 seconds)
[20:07:26] *** Joins: hugo (znc@verdigris.lysator.liu.se)
[20:07:50] *** Joins: Vultyre (~vultyre@user/vultyre)
[20:09:26] *** Quits: selwyn (~selwyn@user/selwyn) (Read error: Connection reset by peer)
[20:10:29] *** Joins: zephyr (~alandiper@ec2-34-230-252-114.compute-1.amazonaws.com)
[20:12:26] *** Joins: azimut_ (~azimut@gateway/tor-sasl/azimut)
[20:12:46] <beach> _death: Nice!  Yes, that's the strength of CLIM.  Not much code is needed to get something useful.
[20:15:03] *** Quits: azimut (~azimut@gateway/tor-sasl/azimut) (Ping timeout: 244 seconds)
[20:16:38] <_death> another CL secret weapon ;)
[20:16:41] *** Quits: waleee (~waleee@2001:9b0:216:8200:d457:9189:7843:1dbd) (Quit: WeeChat 3.2)
[20:17:45] *** Quits: yitzi (~yitzi@173-27-106-188.client.mchsi.com) (Ping timeout: 265 seconds)
[20:18:06] *** Joins: waleee (~waleee@2001:9b0:216:8200:d457:9189:7843:1dbd)
[20:21:01] *** Quits: Tomte (~th@p200300db9f18940074846f9423ed0d34.dip0.t-ipconnect.de) (Quit: Leaving)
[20:21:43] <Josh_2> Whats the method that I can specialize in order to do something when missing a specific method for specific args?
[20:22:30] <beach> ::clhs no-applicable-method
[20:22:31] <Colleen> Clhs: standard generic function no-applicable-method http://www.lispworks.com/documentation/HyperSpec/Body/f_no_app.htm
[20:23:27] <Josh_2> Thanks
[20:23:51] <beach> Pleasure.
[20:41:17] <shka> _death: 400 loc? pretty nice!
[20:43:28] <_death> well cloc says 326 ;)
[20:43:53] *** Joins: Guest63 (~Guest63@45.130.83.185)
[20:44:02] <Guest63> are global functions (defun) considered closures?
[20:44:32] <shka> Guest63: from technical standpoint, i guess? from the practical standpoint not really
[20:44:40] <beach> Guest63: The terminology varies, but they certainly are if they are defined in a non-null environment.
[20:45:01] <tfb> Guest63: they're closures if they are define in a non-empty environment.  Which they almost never are
[20:45:05] <beach> Guest63: Like (let ((x 10)) (defun ff (y) (+ x y))) for instance.
[20:45:07] <Guest63> shka: thanks, yes that's what I thought. I guess they "predated" the idea of closures, but they basically are - since they have lexical scope on the bindings
[20:45:31] <Guest63> tfb: so a top-level defun is not a closure?
[20:45:32] <shka> they can be closures as beach pointed out
[20:45:41] <shka> you can do the following
[20:45:56] <shka> (let ((counter 0)) (defun count () (incf counter)))
[20:45:58] *** Joins: yitzi (~yitzi@173-27-106-188.client.mchsi.com)
[20:46:01] <jackdaniel> a pattern sometimes found in the wild: (flet ((some-local-utility (…) …)) (defun a () … (some-local-utility …)) (defun b () … (some-local-utility) …)))
[20:46:19] <tfb> Guest63: If you define a closure as a function which uses a free lexical binding, then no, but really the distinction is artificial
[20:46:32] <shka> yeah, what jackdaniel presented is probably more practical example
[20:46:32] <beach> Guest63: The terminology varies.  You can say that it's a closure with an empty static environment.  But more often you would then say that it's not a closure.
[20:47:21] <Guest63> thanks all - that makes sense
[20:47:59] <shka> anyway, thing is, 99% of times defun has no outer lexical env of note worthy
[20:49:03] <Guest63> shka: yep, agree. I was just writing some notes and wanted to put "recursion" under closures but it also applies to functions, that got me thinking
[20:49:19] <shka> ah, ok
[20:49:59] <shka> i guess, this is this time when theoretical categorization has limited practical application
[20:50:12] <beach> Right, recursion and closures are orthogonal concepts.
[20:50:50] <tfb> I think really that the whole 'closure' thing is a hangover from the days when you had to explicitly say 'I want to make a closure' rather than what you can do now which is just assume scope & extent work right
[20:51:24] <tfb> (well, Schemey people would say 'mostly right' I suppose)
[20:52:11] <Guest63> beach: agreed, now that I think of it, they are related but don't really have anything to do with each other
[20:52:49] <Guest63> tfb: there is definitely a lot of terminology that is a hangover from older days, it does add a bit of complexity to learning the language
[20:53:01] <beach> How can they both be related and have nothing to do with each other?
[20:53:14] <Guest63> but I guess once you do, you get better at computer science - since the terms are quite exact
[20:53:28] <Guest63> beach: because one would often use recursion in closures :)
[20:53:36] <beach> Nah.
[20:54:03] <shka> there is small overlap :D
[20:54:12] <shka> with scope
[20:54:23] <shka> but i think that that's it
[20:54:25] <beach> Nah.
[20:54:26] <jackdaniel> shka: what do you mean?
[20:54:44] <beach> There is no overlap.
[20:54:51] <beach> They are orthogonal concepts.
[20:56:34] * iisi defenestrates the word "orthogonal", for being used variously to mean: related, not related, intersecting, not intersecting, overlapping, not overlapping, intersecting at a 90 degree angle
[20:56:42] <shka> jackdaniel: when invoking recursive function, function lookup may be performed in the lexical environment, this allows for instance to write weird code like (defun ha ()) (flet ((ha () (ha))) (flet ((ha () (ha))) (ha))
[20:57:20] <shka> but i guess this is stretching it :P
[20:57:25] <jackdaniel> shka: I still don't understand
[20:57:30] <jackdaniel> where was the recursion in there?
[20:58:13] <beach> But this being #commonlisp, the issue has to be debated to death.
[20:58:16] <shka> jackdaniel: i think that there is nothing to understand, i was trying to be contrarian when i really shouldn't be :P
[20:58:48] <jackdaniel> beach: it all connects, the person who broke the silence was _death
[20:59:13] * jackdaniel scribbles something on the wall energetically
[21:00:31] <shka> *bonk* go to the semantics jail
[21:01:39] *** Quits: tfb (~tfb@88.98.95.237) (Quit: died)
[21:03:57] *** Quits: amb007 (~a_bakic@host.26.88.68.195.rev.coltfrance.com) (Read error: Connection reset by peer)
[21:04:18] *** Joins: amb007 (~a_bakic@183.37.22.93.rev.sfr.net)
[21:10:40] *** Joins: varjag (~user@ti0040a400-5479.bb.online.no)
[21:10:53] *** Joins: selwyn (~selwyn@user/selwyn)
[21:29:54] *** Joins: zacts (~zak@user/zacts)
[21:32:42] *** Quits: peterhil_ (~peterhil@dsl-hkibng32-54f849-252.dhcp.inet.fi) (Ping timeout: 252 seconds)
[21:36:36] *** Joins: peterhil (~peterhil@dsl-hkibng32-54f849-252.dhcp.inet.fi)
[21:41:25] *** Joins: char (~Srain@c-73-232-118-40.hsd1.tx.comcast.net)
[21:50:46] *** Quits: aeth (~Michael@user/aeth) (Ping timeout: 258 seconds)
[21:52:41] *** Joins: aeth (~Michael@user/aeth)
[21:53:37] <Josh_2> I like restarts, they are cool :P
[21:59:25] *** Quits: hendursa1 (~weechat@user/hendursaga) (Ping timeout: 244 seconds)
[22:03:52] *** Quits: amb007 (~a_bakic@183.37.22.93.rev.sfr.net) (Ping timeout: 252 seconds)
[22:04:31] *** Joins: amb007 (~a_bakic@23.184.126.78.rev.sfr.net)
[22:05:20] *** Quits: char (~Srain@c-73-232-118-40.hsd1.tx.comcast.net) (Ping timeout: 268 seconds)
[22:07:12] *** Joins: char (~Srain@c-73-232-118-40.hsd1.tx.comcast.net)
[22:14:24] *** Quits: VFR (~user@cpe-174-105-5-165.columbus.res.rr.com) (Read error: Connection reset by peer)
[22:14:41] *** Joins: VFR (~user@cpe-174-105-5-165.columbus.res.rr.com)
[22:15:12] *** Quits: char (~Srain@c-73-232-118-40.hsd1.tx.comcast.net) (Ping timeout: 265 seconds)
[22:19:46] <shka> more importantly... they are useful
[22:20:21] <shka> even if you don't end up defining your own, ability to select what should happen from the debugger is at times such a time saver!
[22:21:47] *** Quits: zacts (~zak@user/zacts) (Quit: gtg)
[22:21:53] *** Joins: erik_ (~erik@94-209-168-105.cable.dynamic.v4.ziggo.nl)
[22:32:48] *** Joins: char (~Srain@2601:2c3:867f:e810:d001:caf1:1547:6810)
[22:37:55] *** Quits: peterhil (~peterhil@dsl-hkibng32-54f849-252.dhcp.inet.fi) (Ping timeout: 258 seconds)
[22:42:03] *** Joins: Quasus (~Quasus@a89-152-209-125.cpe.netcabo.pt)
[22:44:25] *** Quits: char (~Srain@2601:2c3:867f:e810:d001:caf1:1547:6810) (Ping timeout: 256 seconds)
[22:45:32] *** Quits: Guest63 (~Guest63@45.130.83.185) (Quit: Connection closed)
[22:51:50] *** Joins: hendursaga (~weechat@user/hendursaga)
[22:52:50] *** Joins: peterhil (~peterhil@dsl-hkibng32-54f849-252.dhcp.inet.fi)
[22:55:18] *** Quits: selwyn (~selwyn@user/selwyn) (Read error: Connection reset by peer)
[23:06:26] *** Quits: greaser|q (greaser@antihype.space) (Changing host)
[23:06:26] *** Joins: greaser|q (greaser@user/greasemonkey)
[23:06:29] *** greaser|q is now known as GreaseMonkey
[23:12:17] <phantomics> Cool, more orthogonal meaning disputes
[23:36:27] *** Joins: killsushi (~killsushi@2607:fea8:3d40:767:a826:23b7:521c:2d11)
[23:36:27] *** Quits: killsushi (~killsushi@2607:fea8:3d40:767:a826:23b7:521c:2d11) (Changing host)
[23:36:27] *** Joins: killsushi (~killsushi@user/killsushi)
[23:40:17] *** Quits: ggoes (~gregf@user/ggoes) (Quit: WeeChat 2.3)
[23:41:16] *** Quits: [deleted] (~livoreno@user/notzmv) (Ping timeout: 250 seconds)
[23:41:39] *** Quits: sabra (~sabra@99-105-192-94.lightspeed.livnmi.sbcglobal.net) (Quit: Konversation terminated!)
[23:41:59] *** Joins: selwyn (~selwyn@user/selwyn)
[23:42:44] *** Joins: [deleted] (~livoreno@user/notzmv)
[23:44:08] *** Joins: prxq (~quassel@x4db915df.dyn.telefonica.de)
[23:44:27] *** Joins: ggoes (~gregf@user/ggoes)
[23:44:55] *** Joins: peterhil_ (~peterhil@dsl-hkibng32-54f849-252.dhcp.inet.fi)
[23:45:35] *** Quits: peterhil (~peterhil@dsl-hkibng32-54f849-252.dhcp.inet.fi) (Ping timeout: 265 seconds)
[23:53:30] *** Quits: srhm (~ascii@user/srhm) (Ping timeout: 252 seconds)
[23:55:41] *** Quits: peterhil_ (~peterhil@dsl-hkibng32-54f849-252.dhcp.inet.fi) (Quit: Must not waste too much time here...)
[23:55:50] *** Joins: peterhil (~peterhil@dsl-hkibng32-54f849-252.dhcp.inet.fi)
