[01:52:25] <MatthiasVance> So
[01:52:28] <MatthiasVance> dependencies in FP
[01:52:48] <MatthiasVance> This is the topic I circle around to often
[01:53:21] <MatthiasVance> At work we sometimes inject things (like HttpClientFactory) into a small class and then do the rest functionally
[01:54:13] <MatthiasVance> When I read about the other ways (more idiomatic) it seems clean, until you want to use *more than one* concept
[01:55:15] <akronymus[m]> push the dependency as far out as possible
[01:55:20] <akronymus[m]> but no further
[01:55:43] <akronymus[m]> As in, dont pass the dependency but the data you get from it.
[02:10:06] <MatthiasVance> I wish it could all be pure xD
[02:11:50] <akronymus[m]> https://fsharpforfunandprofit.com/posts/dependencies/
[02:11:57] <akronymus[m]> Maybe one of those can fit
[02:12:07] <akronymus[m]> Interpreter pattern or something
[02:13:00] <MatthiasVance> Yeah that is exactly what I was talking about
[02:13:39] <MatthiasVance> At some point those things seem unwieldy to me, maybe that's just my lack of experience though
[03:29:53] *** Joins: jinsun (~quassel@user/jinsun)
[03:30:03] *** Quits: jinsun (~quassel@user/jinsun) (*.net *.split)
[03:32:18] *** Joins: jinsun (~quassel@user/jinsun)
[04:44:11] *** Quits: stenno (~stenno@user/stenno) (Ping timeout: 252 seconds)
[04:46:10] *** Joins: stenno (~stenno@user/stenno)
[05:05:38] *** Quits: _0x1d3 (sid43116@id-43116.tinside.irccloud.com) (Ping timeout: 252 seconds)
[05:06:56] *** Joins: _0x1d3 (sid43116@id-43116.tinside.irccloud.com)
[11:57:00] <MatthiasVance> akronymus[m]: I was looking into Reader monad and free monads but also get the impression (read that on one of the pages) that it's hard to combine with async/task and other CEs and whatnot
[11:57:29] <MatthiasVance> I guess that I like F# as a language but not so much as a concept (yet) xD
[12:21:29] <biberu> MatthiasVance: there's a lot of boilerplate with free monads, haven't found a reason to go that far outside of experiments yet
[12:21:59] <biberu> i usually just use DI same as in c#, and view it as fancy partial application
[12:22:51] *** Joins: kuribas (~user@188.188.219.184)
[12:23:21] <biberu> and if i'm not using that i'll just partially apply the services manually in the root
[12:23:36] <MatthiasVance> biberu: Do you mean you constuct a class but keep it minimal and do the rest in clean F#?
[12:23:56] <MatthiasVance> RE: "same as in C#"
[12:25:02] <biberu> yes
[12:25:41] <biberu> i'll do that in c# too, my classes are *very* small and focused, usually just a single public method to provide the rest of the arguments
[12:27:02] <MatthiasVance> I still see F# as a risk somewhat, since it's not "standard" in the way that C# is
[12:27:06] <MatthiasVance> (from a Microsoft perspective)
[12:27:27] <MatthiasVance> And I'm starting an important project right now, I am still considering if it'll help me or bite me :D
[12:27:52] <MatthiasVance> Like, this time it's my own business that we're talking about so making that choice is pretty important
[12:28:33] <biberu> worth thinking about for sure
[12:39:47] <biberu> i was thinking about applying for a dedicated f# position here before i landed this other thing, it'd have been interesting to see their project
[12:41:21] <MatthiasVance> Yeah indeed, you need reference material in order to be able to make decisions based on this
[12:42:41] *** Quits: kuribas (~user@188.188.219.184) (Ping timeout: 252 seconds)
[13:15:53] *** Joins: kuribas (~user@ip-188-118-57-242.reverse.destiny.be)
[15:57:51] *** Joins: akronymus (~akronymus@217.29.158.240)
[18:40:52] *** Quits: akronymus (~akronymus@217.29.158.240) (Ping timeout: 256 seconds)
[18:58:44] *** Joins: akronymus (~akronymus@217.29.158.240)
[20:45:20] *** Quits: akronymus (~akronymus@217.29.158.240) (Quit: Client closed)
[21:03:14] *** Quits: kuribas (~user@ip-188-118-57-242.reverse.destiny.be) (Remote host closed the connection)
[21:44:15] *** Quits: stenno (~stenno@user/stenno) (Ping timeout: 252 seconds)
[22:03:55] *** Joins: stenno (~stenno@user/stenno)
