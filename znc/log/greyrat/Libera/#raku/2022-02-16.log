[00:08:04] <El_Che> opera just over-raku'd raku: https://www.theverge.com/2022/2/14/22932918/opera-browser-emoji-only-web-addresses-urls-yat
[00:09:26] <[Coke]> with "NFT" in the article, it has lost all meaning.
[00:10:08] <El_Che> very true
[00:26:29] <guifa> So basically, we're at AOL keyword $foo all over again
[00:26:54] <El_Che> yes, but with blockchain
[00:29:23] <guifa> Are we gonna get a fezcoin so we can have NFT blockchain yadda yadda namesquatting for modules?
[00:29:46] * guifa . o O ( yadda is a real Raku thing after all )
[00:30:43] <El_Che> I read somewhere yadda yadda came fron  Lenny Bruce 
[00:33:46] <tonyo> i have 100% of the fezcoins
[00:34:20] <El_Che> rakudo-pkg, now with free fezcoins included
[00:36:06] <[Coke]> rakuoin
[00:37:05] *** Joins: squashable6 (squ-able@2001:41d0:2:5eb5::)
[00:38:13] <El_Che> rakuonion if you're a troll like me :)
[00:39:51] <[Coke]> the most suspicious commits in the moarvm range for me are adding some JIT items. ... oh, I can run my tests without the JIT. Grumble.
[00:41:02] <[Coke]> (retrying with a fresh master.)
[00:41:35] <[Coke]> (should have thought to do that step 1!)
[00:41:51] *** Quits: discord-raku-bot (~RakuIRC@ip5f5ab74b.dynamic.kabel-deutschland.de) (Remote host closed the connection)
[00:42:19] *** Joins: discord-raku-bot (~RakuIRC@ip5f5ab74b.dynamic.kabel-deutschland.de)
[00:48:48] *** Quits: lgtaube (~lgt@45.86.203.25) (Ping timeout: 252 seconds)
[01:03:47] *** Quits: abraxxa-home (~alex@2a01:100:2000:2500::22) (Remote host closed the connection)
[01:27:49] *** Quits: qorg11 (~lain@2605:6400:c022:fa04::666) (Ping timeout: 256 seconds)
[01:46:31] *** Joins: qorg11 (~lain@2605:6400:c022:fa04::666)
[01:49:05] *** Quits: dogbert17 (~dogbert@c83-253-59-194.bredband.tele2.se) (Quit: WeeChat 2.8)
[02:06:57] *** Joins: lgtaube (~lgt@45.86.203.89)
[02:17:46] *** Quits: linkable6 (lin-able@2001:41d0:2:5eb5::) (Remote host closed the connection)
[02:20:04] *** Joins: linkable6 (lin-able@2001:41d0:2:5eb5::)
[02:34:31] <guifa> I get the utility of <?> as an always succeed.  Is there any way to usefully use <!>?  The only way I can think that it might be useful would be if it failed the whole token it was in (even when in alternation in some way)
[02:51:28] *** Quits: linkable6 (lin-able@2001:41d0:2:5eb5::) (*.net *.split)
[02:51:28] *** Quits: squashable6 (squ-able@2001:41d0:2:5eb5::) (*.net *.split)
[02:51:28] *** Quits: reportable6 (rep-able@2001:41d0:2:5eb5::) (*.net *.split)
[02:51:28] *** Quits: evalable6 (eva-able@2001:41d0:2:5eb5::) (*.net *.split)
[02:51:28] *** Quits: shareable6 (sha-able@2001:41d0:2:5eb5::) (*.net *.split)
[02:51:28] *** Quits: statisfiable6 (sta-able@2001:41d0:2:5eb5::) (*.net *.split)
[02:51:28] *** Quits: tellable6 (tel-able@2001:41d0:2:5eb5::) (*.net *.split)
[02:51:28] *** Quits: benchable6 (ben-able@2001:41d0:2:5eb5::) (*.net *.split)
[02:51:28] *** Quits: greppable6 (gre-able@2001:41d0:2:5eb5::) (*.net *.split)
[02:51:28] *** Quits: sourceable6 (sou-able@2001:41d0:2:5eb5::) (*.net *.split)
[02:51:28] *** Quits: nativecallable6 (nat-able@2001:41d0:2:5eb5::) (*.net *.split)
[02:51:28] *** Quits: coverable6 (cov-able@2001:41d0:2:5eb5::) (*.net *.split)
[02:51:28] *** Quits: bloatable6 (blo-able@2001:41d0:2:5eb5::) (*.net *.split)
[02:51:28] *** Quits: bisectable6 (bis-able@2001:41d0:2:5eb5::) (*.net *.split)
[02:51:28] *** Quits: releasable6 (rel-able@2001:41d0:2:5eb5::) (*.net *.split)
[02:51:28] *** Quits: committable6 (com-able@2001:41d0:2:5eb5::) (*.net *.split)
[02:51:28] *** Quits: notable6 (not-able@2001:41d0:2:5eb5::) (*.net *.split)
[02:51:28] *** Quits: unicodable6 (uni-able@2001:41d0:2:5eb5::) (*.net *.split)
[02:51:28] *** Quits: quotable6 (quo-able@2001:41d0:2:5eb5::) (*.net *.split)
[02:51:28] *** Quits: jjatria (~jjatria@68.183.32.235) (*.net *.split)
[02:51:28] *** Quits: [Coke] (~coke@172.58.236.16) (*.net *.split)
[02:51:28] *** Quits: kybr (ky@2600:3c01::f03c:92ff:feb3:476f) (*.net *.split)
[02:51:28] *** Quits: corwin (someone@fosshost/director/corwin) (*.net *.split)
[02:51:28] *** Quits: KotH (~attila@erica.kinali.ch) (*.net *.split)
[02:53:47] *** Joins: linkable6 (lin-able@2001:41d0:2:5eb5::)
[02:53:47] *** Joins: squashable6 (squ-able@2001:41d0:2:5eb5::)
[02:53:47] *** Joins: reportable6 (rep-able@2001:41d0:2:5eb5::)
[02:53:47] *** Joins: evalable6 (eva-able@2001:41d0:2:5eb5::)
[02:53:47] *** Joins: shareable6 (sha-able@2001:41d0:2:5eb5::)
[02:53:47] *** Joins: statisfiable6 (sta-able@2001:41d0:2:5eb5::)
[02:53:47] *** Joins: tellable6 (tel-able@2001:41d0:2:5eb5::)
[02:53:47] *** Joins: benchable6 (ben-able@2001:41d0:2:5eb5::)
[02:53:47] *** Joins: greppable6 (gre-able@2001:41d0:2:5eb5::)
[02:53:47] *** Joins: sourceable6 (sou-able@2001:41d0:2:5eb5::)
[02:53:47] *** Joins: nativecallable6 (nat-able@2001:41d0:2:5eb5::)
[02:53:47] *** Joins: coverable6 (cov-able@2001:41d0:2:5eb5::)
[02:53:47] *** Joins: bloatable6 (blo-able@2001:41d0:2:5eb5::)
[02:53:47] *** Joins: bisectable6 (bis-able@2001:41d0:2:5eb5::)
[02:53:47] *** Joins: releasable6 (rel-able@2001:41d0:2:5eb5::)
[02:53:47] *** Joins: notable6 (not-able@2001:41d0:2:5eb5::)
[02:53:47] *** Joins: committable6 (com-able@2001:41d0:2:5eb5::)
[02:53:47] *** Joins: unicodable6 (uni-able@2001:41d0:2:5eb5::)
[02:53:47] *** Joins: quotable6 (quo-able@2001:41d0:2:5eb5::)
[02:53:47] *** Joins: jjatria (~jjatria@68.183.32.235)
[02:53:47] *** Joins: [Coke] (~coke@172.58.236.16)
[02:53:47] *** Joins: kybr (ky@2600:3c01::f03c:92ff:feb3:476f)
[02:53:47] *** Joins: corwin (someone@fosshost/director/corwin)
[02:53:47] *** Joins: KotH (~attila@erica.kinali.ch)
[03:37:29] *** Quits: reportable6 (rep-able@2001:41d0:2:5eb5::) (Remote host closed the connection)
[03:38:12] *** Joins: reportable6 (rep-able@2001:41d0:2:5eb5::)
[04:02:34] *** Quits: oodani (~oodani@00dani.me) (Quit: ZNC 1.7.5+deb4 - https://znc.in)
[04:04:05] *** Joins: oodani (~oodani@00dani.me)
[04:12:36] *** Joins: mexen (uid495612@user/mexen)
[04:12:39] *** Quits: Geth (~LizBot@ipv4-wenzperl.connected.by.freedominter.net) (Ping timeout: 256 seconds)
[04:22:06] *** Quits: Xliff (~Cliff@pool-71-255-227-73.washdc.east.verizon.net) (Remote host closed the connection)
[05:03:23] <[Coke]> if I click on one of the fosdem 2022 videos, it goes into an infinite load loop on fosdem.org
[05:03:59] <[Coke]> if you have an alternate where you're trying to match something you know isn't right and then die?
[05:04:06] <[Coke]> like a common syntax error you want to be helpful on?
[05:20:04] *** Joins: Merfont (~Kaiepi@156.34.47.253)
[05:20:09] *** Quits: Kaipi (~Kaiepi@156.34.47.253) (Remote host closed the connection)
[06:06:19] *** Joins: frost (~frost@user/frost)
[06:29:05] <guifa> [Coke] that's what I was thinking, but it actually doesn't work unless it's the final chioce in a sequence
[07:01:04] *** Quits: mexen (uid495612@user/mexen) (Quit: Connection closed for inactivity)
[07:08:29] *** Quits: SqrtNegInf (~SqrtNegIn@97-113-30-12.tukw.qwest.net) (Quit: Leaving...)
[07:57:48] *** Quits: frost (~frost@user/frost) (Ping timeout: 252 seconds)
[07:59:09] *** Joins: Darkcoal (~user@user/Darkcoal)
[08:27:24] *** Quits: Darkcoal (~user@user/Darkcoal) (Ping timeout: 240 seconds)
[08:29:31] *** Joins: Darkcoal (~user@user/Darkcoal)
[09:03:52] *** Joins: frost (~frost@user/frost)
[09:16:10] *** Joins: mexen (uid495612@user/mexen)
[09:18:57] *** Quits: jrjsmrtn (~jrjsmrtn@ip-212-239-244-124.dsl.scarlet.be) (Ping timeout: 256 seconds)
[09:20:58] *** Joins: jrjsmrtn (~jrjsmrtn@ip-213-49-42-24.dsl.scarlet.be)
[09:37:25] *** Quits: reportable6 (rep-able@2001:41d0:2:5eb5::) (Remote host closed the connection)
[09:38:27] *** Joins: Sgeo_ (~Sgeo@user/sgeo)
[09:39:33] *** Quits: discord-raku-bot (~RakuIRC@ip5f5ab74b.dynamic.kabel-deutschland.de) (Remote host closed the connection)
[09:39:46] *** Joins: discord-raku-bot (~RakuIRC@ip5f5ab74b.dynamic.kabel-deutschland.de)
[09:39:58] *** Quits: Sgeo (~Sgeo@user/sgeo) (Read error: Connection reset by peer)
[09:48:36] *** Quits: discord-raku-bot (~RakuIRC@ip5f5ab74b.dynamic.kabel-deutschland.de) (Ping timeout: 240 seconds)
[09:48:43] *** Joins: discord-raku-bot (~RakuIRC@ip5f5ab74b.dynamic.kabel-deutschland.de)
[10:25:11] *** Joins: esalebu (~esalebu@95-52-56-195.dynamic.murmansk.dslavangard.ru)
[10:33:58] *** Joins: esalebu1 (~esalebu@95-52-56-195.dynamic.murmansk.dslavangard.ru)
[10:37:04] *** Parts: esalebu1 (~esalebu@95-52-56-195.dynamic.murmansk.dslavangard.ru) ()
[10:37:52] *** Joins: esalebu1 (~esalebu@95-52-56-195.dynamic.murmansk.dslavangard.ru)
[10:38:15] *** Quits: esalebu (~esalebu@95-52-56-195.dynamic.murmansk.dslavangard.ru) (Quit: Leaving)
[10:51:37] *** Joins: abraxxa-home (~alex@2a01:100:2000:2500::22)
[11:08:16] *** Joins: abraxxa (~ahartmai@smtp.hartmaier.priv.at)
[11:08:39] *** Quits: frost (~frost@user/frost) (Ping timeout: 252 seconds)
[11:11:31] *** Joins: jjido (~Denis@2a02:c7f:5c91:e700:2155:642c:a2e:a545)
[11:17:15] <guifa> codesections GO TO BED
[11:18:08] <guifa> (we're both up way too late on reddit haha)
[11:24:34] *** Quits: abraxxa (~ahartmai@smtp.hartmaier.priv.at) (Remote host closed the connection)
[11:28:21] *** Joins: abraxxa (~ahartmai@smtp.hartmaier.priv.at)
[11:30:12] *** Quits: qorg11 (~lain@2605:6400:c022:fa04::666) (Ping timeout: 240 seconds)
[11:32:58] *** Quits: abraxxa (~ahartmai@smtp.hartmaier.priv.at) (Ping timeout: 272 seconds)
[11:33:22] *** Joins: Geth (~LizBot@ipv4-wenzperl.connected.by.freedominter.net)
[11:33:45] *** Joins: abraxxa (~ahartmai@tsa-tc-flod.t-systems.at)
[11:37:40] *** Joins: reportable6 (rep-able@2001:41d0:2:5eb5::)
[11:37:42] <El_Che> isn't codesections not based on Europe? Pretty late if that's the case :)
[11:37:54] *** Quits: Geth (~LizBot@ipv4-wenzperl.connected.by.freedominter.net) (Remote host closed the connection)
[11:38:02] *** Joins: Geth (~LizBot@ipv4-wenzperl.connected.by.freedominter.net)
[11:40:05] *** Joins: qorg11 (~lain@2605:6400:c022:fa04::666)
[11:55:16] *** Quits: Sgeo_ (~Sgeo@user/sgeo) (Read error: Connection reset by peer)
[11:56:40] <guifa> yeah, we're both stateside
[12:00:15] *** Joins: razetime (~quassel@49.207.198.36)
[12:00:55] *** Quits: razetime (~quassel@49.207.198.36) (Client Quit)
[12:06:33] <El_Che> ah, depending on the coast it may be still late :)
[12:12:59] *** Joins: frost (~frost@user/frost)
[12:24:04] *** Joins: achille (~achille@193.240.154.120)
[12:37:46] *** Joins: dakkar (~dakkar@home.thenautilus.net)
[12:39:00] *** Quits: jjido (~Denis@2a02:c7f:5c91:e700:2155:642c:a2e:a545) (Quit: My MacBook Air has gone to sleep. ZZZzzz…)
[12:43:09] *** Quits: frost (~frost@user/frost) (Quit: Connection closed)
[13:01:05] *** Quits: jmcgnh (~jmcgnh@wikipedia/jmcgnh) (Ping timeout: 256 seconds)
[13:01:54] *** Quits: esalebu1 (~esalebu@95-52-56-195.dynamic.murmansk.dslavangard.ru) (Quit: Leaving.)
[13:04:34] *** Joins: esalebu (~esalebu@95-52-56-195.dynamic.murmansk.dslavangard.ru)
[13:09:37] *** Joins: jmcgnh (~jmcgnh@wikipedia/jmcgnh)
[13:40:37] *** Joins: immediate (~immediate@139.179.217.40)
[13:41:47] <immediate> thanks lizmat that's very good to hear!
[14:08:46] *** Quits: Darkcoal (~user@user/Darkcoal) (Ping timeout: 272 seconds)
[14:09:30] *** Parts: esalebu (~esalebu@95-52-56-195.dynamic.murmansk.dslavangard.ru) (Leaving)
[14:10:11] *** Joins: Darkcoal (~user@user/Darkcoal)
[15:10:12] *** Quits: sourceable6 (sou-able@2001:41d0:2:5eb5::) (Remote host closed the connection)
[15:10:12] *** Quits: releasable6 (rel-able@2001:41d0:2:5eb5::) (Read error: Connection reset by peer)
[15:10:12] *** Quits: reportable6 (rep-able@2001:41d0:2:5eb5::) (Read error: Connection reset by peer)
[15:10:12] *** Quits: bloatable6 (blo-able@2001:41d0:2:5eb5::) (Read error: Connection reset by peer)
[15:10:12] *** Quits: benchable6 (ben-able@2001:41d0:2:5eb5::) (Read error: Connection reset by peer)
[15:10:12] *** Quits: quotable6 (quo-able@2001:41d0:2:5eb5::) (Read error: Connection reset by peer)
[15:10:12] *** Quits: nativecallable6 (nat-able@2001:41d0:2:5eb5::) (Read error: Connection reset by peer)
[15:10:12] *** Quits: coverable6 (cov-able@2001:41d0:2:5eb5::) (Read error: Connection reset by peer)
[15:10:12] *** Quits: tellable6 (tel-able@2001:41d0:2:5eb5::) (Read error: Connection reset by peer)
[15:10:12] *** Quits: bisectable6 (bis-able@2001:41d0:2:5eb5::) (Read error: Connection reset by peer)
[15:10:12] *** Quits: evalable6 (eva-able@2001:41d0:2:5eb5::) (Read error: Connection reset by peer)
[15:10:12] *** Quits: unicodable6 (uni-able@2001:41d0:2:5eb5::) (Write error: Connection reset by peer)
[15:10:12] *** Quits: notable6 (not-able@2001:41d0:2:5eb5::) (Write error: Connection reset by peer)
[15:10:12] *** Quits: greppable6 (gre-able@2001:41d0:2:5eb5::) (Write error: Connection reset by peer)
[15:10:12] *** Quits: shareable6 (sha-able@2001:41d0:2:5eb5::) (Write error: Connection reset by peer)
[15:10:12] *** Quits: linkable6 (lin-able@2001:41d0:2:5eb5::) (Write error: Connection reset by peer)
[15:10:12] *** Quits: committable6 (com-able@2001:41d0:2:5eb5::) (Write error: Connection reset by peer)
[15:10:12] *** Quits: statisfiable6 (sta-able@2001:41d0:2:5eb5::) (Write error: Connection reset by peer)
[15:10:12] *** Quits: squashable6 (squ-able@2001:41d0:2:5eb5::) (Write error: Connection reset by peer)
[15:10:28] *** Joins: notable6 (not-able@2001:41d0:2:5eb5::)
[15:11:09] *** Joins: releasable6 (rel-able@2001:41d0:2:5eb5::)
[15:11:14] *** Joins: tellable6 (tel-able@2001:41d0:2:5eb5::)
[15:11:49] *** Joins: linkable6 (lin-able@2001:41d0:2:5eb5::)
[15:11:57] *** Joins: committable6 (com-able@2001:41d0:2:5eb5::)
[15:12:02] *** Joins: whatnext (~whatnext@static.120.96.63.178.clients.your-server.de)
[15:12:23] *** Joins: shareable6 (sha-able@2001:41d0:2:5eb5::)
[15:13:13] <whatnext> Greetings all :)
[15:13:20] *** Joins: greppable6 (gre-able@2001:41d0:2:5eb5::)
[15:13:54] <whatnext> so look
[15:13:59] <whatnext> about this sentence:
[15:14:24] <whatnext> "There is a long term Rakudo
[15:14:25] <whatnext> # based project to develop a new, comprehensive DBI architecture for
[15:14:25] <whatnext> # Perl 6."
[15:14:38] <whatnext> found in the DBIish notes
[15:14:59] <lizmat> afaik that project is almost biologically stable   :-(
[15:15:25] <whatnext> which project is that then?
[15:17:14] <whatnext> i mean - does it have a name and/or documentation? :)
[15:27:02] <lizmat> moritz might still remember
[15:38:25] <whatnext> hm "might still remember" doesn't sound too promising :')
[15:38:43] <whatnext> ok I have another more specific question about DBIish
[15:38:45] *** Joins: reportable6 (rep-able@2001:41d0:2:5eb5::)
[15:39:16] * moritz doesn't remember
[15:43:43] <whatnext> DBIish::mysql in fact: I am seeing "mysql server has gone away" cropping up quite a bit, I am guessing idle connections are getting auto closed(?) - I see Pg has "keepalives" options but I don't see this for mysql. Just wondered if anyone knew an obvious solution for mysql? :)
[15:43:44] *** Quits: immediate (~immediate@139.179.217.40) (Quit: Connection closed)
[15:44:36] <moritz> ping the connection now and then?
[15:44:37] <lizmat> whatnext: that is usually a server side setting
[15:45:14] *** Quits: abraxxa-home (~alex@2a01:100:2000:2500::22) (Remote host closed the connection)
[15:45:41] *** Joins: abraxxa-home (~alex@2a01:100:2000:2500::22)
[15:46:27] <whatnext> hm the same db is being used across multiple applications without that problem
[15:47:34] <whatnext> moritz: I guess this is a possibility - I just thought there might be a setting somewhere
[15:47:41] <whatnext> thanks! :)
[15:59:59] *** Quits: Darkcoal (~user@user/Darkcoal) (Read error: Connection reset by peer)
[16:05:32] *** Joins: Darkcoal (~user@user/Darkcoal)
[16:10:05] *** Quits: whatnext (~whatnext@static.120.96.63.178.clients.your-server.de) (Quit: Connection closed)
[16:10:28] *** Joins: bisectable6 (bis-able@2001:41d0:2:5eb5::)
[16:11:15] *** Joins: benchable6 (ben-able@2001:41d0:2:5eb5::)
[16:11:41] *** Joins: unicodable6 (uni-able@2001:41d0:2:5eb5::)
[16:11:48] *** Quits: Darkcoal (~user@user/Darkcoal) (Ping timeout: 240 seconds)
[16:12:30] *** Joins: sourceable6 (sou-able@2001:41d0:2:5eb5::)
[16:12:59] *** Joins: quotable6 (quo-able@2001:41d0:2:5eb5::)
[16:13:07] *** Joins: statisfiable6 (sta-able@2001:41d0:2:5eb5::)
[16:13:53] *** Joins: Darkcoal (~user@user/Darkcoal)
[16:19:09] *** Quits: jmcgnh (~jmcgnh@wikipedia/jmcgnh) (Remote host closed the connection)
[16:28:30] *** Joins: jmcgnh (~jmcgnh@wikipedia/jmcgnh)
[16:38:33] *** Quits: achille (~achille@193.240.154.120) (Quit: Connection closed)
[16:44:35] *** Quits: Merfont (~Kaiepi@156.34.47.253) (Remote host closed the connection)
[16:44:59] *** Joins: Merfont (~Kaiepi@156.34.47.253)
[17:00:35] *** Joins: rypervenche (~rypervenc@user/rypervenche)
[17:01:38] *** Quits: Merfont (~Kaiepi@156.34.47.253) (Remote host closed the connection)
[17:01:58] *** Joins: Merfont (~Kaiepi@156.34.47.253)
[17:11:05] *** Joins: bloatable6 (blo-able@2001:41d0:2:5eb5::)
[17:12:24] *** Joins: coverable6 (cov-able@2001:41d0:2:5eb5::)
[18:06:43] <leont> I'm observing that a $vow.keep appears to hang, anyone have a clue what could cause that
[18:07:00] *** Quits: camelia (~p6eval@camelia.detonation.org) (Ping timeout: 240 seconds)
[18:07:14] <leont> It has a then handler, it isn't being run
[18:07:45] *** Joins: oodani_ (~oodani@00dani.me)
[18:08:12] *** Quits: rypervenche (~rypervenc@user/rypervenche) (Ping timeout: 240 seconds)
[18:08:12] *** Quits: oodani (~oodani@00dani.me) (Ping timeout: 240 seconds)
[18:08:12] *** Quits: coleman-x (~coleman@2600:1700:13be:9240:d35c:6a4c:5624:9fe5) (Ping timeout: 240 seconds)
[18:09:32] <japhb> Doesn't ring a bell -- can you golf it to something gist-able?
[18:09:49] *** Joins: rypervenche (~rypervenc@user/rypervenche)
[18:10:50] *** Joins: evalable6 (eva-able@2001:41d0:2:5eb5::)
[18:11:12] <leont> It seems it doesn't hang, it throws inside a Supply
[18:11:27] <leont> Supply's done handler, and then the exception gets eaten and something else gets confused
[18:12:33] *** Joins: coleman-x (~coleman@108-92-161-239.lightspeed.tukrga.sbcglobal.net)
[18:13:23] *** Joins: nativecallable6 (nat-able@2001:41d0:2:5eb5::)
[18:14:28] *** Joins: immediate (~immediate@139.179.217.40)
[18:14:28] *** Joins: camelia (~p6eval@camelia.detonation.org)
[18:28:52] *** Quits: Merfont (~Kaiepi@156.34.47.253) (Remote host closed the connection)
[18:28:59] *** Joins: Kaipi (~Kaiepi@156.34.47.253)
[18:35:04] <leont> Apparently Vow.keep does not have a default argument, and that was the problem.
[18:35:21] <leont> But because it was called in a done handler, the exception was swallowed and I was none the wiser
[18:39:09] <japhb> Oof.  Glad you found it though.
[18:45:23] <tbrowder> tonyo: may i see your apache conf entries for the cro app?
[18:46:30] <japhb> tbrowder: --> #cro ?
[18:50:42] *** Joins: curiosa (~curiosa@proxy-out.curie.fr)
[18:51:13] *** Joins: curiosa76 (~curiosa@37.165.29.23)
[18:54:32] <tbrowder> tonyo usually hangs out here, #cro is very quiet
[18:55:15] *** Quits: curiosa (~curiosa@proxy-out.curie.fr) (Ping timeout: 256 seconds)
[18:55:25] <tbrowder> until it isn’t!!! thnx for reminder
[19:03:08] <tbrowder> .ask tonyo may i pos see yr apache conf entrys for yr working cro app?
[19:03:09] <tellable6> tbrowder, I'll pass your message to tonyo
[19:04:01] <curiosa76> Hi, I am searching for a module that allows to evaluate C expressions at compile time and set them in constants, is there already available?
[19:04:16] <curiosa76> something like this:
[19:04:22] <curiosa76> my @*C-INCLUDES = '<fcntl.h>';
[19:04:26] <curiosa76> constant word_size = C::expression::expr "sizeof(int)";
[19:04:33] <curiosa76> constant O_CREAT = C::expression::expr "O_CREAT";
[19:04:57] <curiosa76> it would be useful for portability
[19:05:28] <curiosa76> maybe one can think also of the following shortcuts:
[19:05:30] <curiosa76> constant word_size = C::expression::size "int";
[19:05:38] <curiosa76> constant offset-flock-lstart = C::expression::offset "l_start", "flock"
[19:07:39] <curiosa76> if it's not already there, would people over here find a stuff like this useful?
[19:11:03] <curiosa76> what would be a good name for it, I think C::expression sucks a lot
[19:11:26] <curiosa76> should be findable by the keyword portability, or machine dependency
[19:11:32] <curiosa76> or cpu
[19:11:52] <curiosa76> of course it would require a C compiler installe
[19:11:55] *** Joins: squashable6 (squ-able@2001:41d0:2:5eb5::)
[19:17:30] <japhb> curiosa76: NativeCall has a fair amount of that functionality already, but with a very different syntax and world view.  It knows the size of basic C types, it allows you to define a C struct and map it as a Raku object, and so forth.  Parsing headers and automatically producing the matching Raku code is more in the domain of e.g. GPTrixie.
[19:22:20] <curiosa76> japhb thank you for the answer. I know nativecall
[19:22:49] <curiosa76> principally, the values of #defined constants can change from machine to machine
[19:23:09] <curiosa76> and for that the approach of NativeCall is to use conditionals
[19:23:27] <curiosa76> that I do not want to do
[19:24:14] <curiosa76> I wouldn't parse the headers, I would compile the expression with a C compiler and extract the values from the generated code
[19:26:26] <curiosa76> gptrixie is also faulty in my point of view since it tries to output nativecall code from C headers, that is clearly not generally possible
[19:26:43] <curiosa76> what I need is just for portability
[19:31:28] <curiosa76> japhb: how do you achieve this in NativeCall: constant O_CREAT = C::expression::expr "O_CREAT";
[19:31:30] <curiosa76> ?
[19:34:10] <japhb> curiosa76: That's something for which I would have used e.g. GPTrixie, if I needed to do a lot of it, or hand-edited if I only needed a little.  When I did the OpenGL bindings for Parrot, back in the day, I did it by parsing just the subset of C header syntax needed to extract the constants and function signatures.  (I cheated, in other words.)
[19:34:24] <curiosa76> how do you achieve that with GPTrixie?
[19:34:51] <curiosa76> it seems totally out of scope for me
[19:35:07] * guifa has thought it would be a cool proof of concept to write a codeblock in C and compile at Raku compile-time and auto set up the NativeCall interface.  But not sure if the slangs are quite yet up for it.
[19:35:08] <curiosa76> basically GPTrixie helps you writing that by hand
[19:35:12] *** Joins: Sgeo (~Sgeo@user/sgeo)
[19:36:00] <curiosa76> guifa is aiming too high!
[19:37:23] <curiosa76> japhb what you wouldn't like in the approach I propose?
[19:38:01] <japhb> curiosa76: Run GPTrixie at build time?  It's pretty darn rare to build a Raku module distribution on a different OS/arch than you use it on.
[19:39:04] <japhb> Because if you're doing things at BEGIN time in a module (and thus at build & precomp time when installing that module), you might as well do them using a build script as a BEGIN block.
[19:39:25] <curiosa76> japhb running GPTrixie at build time and parsing the output is no different then compiling the code and parsing the assembler, what I am proposing is a nice interface to that that meld well with the activity to writing a module
[19:39:25] <japhb> And not have to hand-write a whole bunch of code that exists to avoid ... hand-writing a bunch of code.
[19:39:47] <curiosa76> but GPTrixie does not help you with that
[19:40:03] <curiosa76> what guifa wants to achieve would really help
[19:40:12] <curiosa76> that would mean to implement a C compiler in raku
[19:40:29] <japhb> curiosa76: I didn't say parse the output of GPTrixie.  I was saying "just *use* the output of GPTrixie directly".  Let it create a module, use it in your module, pull out the definitions that you cared about.
[19:40:44] <curiosa76> japhb did you ever looked at GPTrixie output?
[19:40:45] <curiosa76> ??
[19:41:05] <japhb> https://github.com/Skarsnik/gptrixie#example
[19:41:12] <curiosa76> there are things in C that are not even possible to express in nativecall
[19:41:32] <curiosa76> like most of the language a part a subset of statments
[19:41:57] <curiosa76> japhb you are really cherry picking
[19:50:35] *** Joins: jjido (~Denis@2a02:c7f:5c91:e700:2155:642c:a2e:a545)
[19:58:26] <tonyo> tbrowder: you just trying to get the reverse proxy working?
[19:58:27] <tellable6> 2022-02-16T15:33:09Z #raku <tbrowder> tonyo may i pos see yr apache conf entrys for yr working cro app?
[19:58:37] <tonyo> if so, what port is your app listening on?
[20:02:23] *** Quits: immediate (~immediate@139.179.217.40) (Ping timeout: 256 seconds)
[20:04:52] *** Joins: curiosa (~curiosa@37.165.29.23)
[20:04:54] *** Joins: dogbert17 (~dogbert@c83-253-59-194.bredband.tele2.se)
[20:06:05] *** Quits: curiosa76 (~curiosa@37.165.29.23) (Ping timeout: 256 seconds)
[20:14:33] <curiosa> let's say that one day there will be a C compiler implemented in Raku, there would be still things to adjust like the way C code interact and intersect with raku code. This can go very far such as when you expand a C macro and you end up with untyped raku code mixed with the code generated by the C macro. Let's say that one manage to cover 99% of
[20:14:34] <curiosa> usage patterns maybe by carefully thinking about runtime support, there would be still incompatibilites due to the fact that C is a compiled language that is well adjusted to the OS binary format while Raku is not.
[20:14:50] *** Quits: jjido (~Denis@2a02:c7f:5c91:e700:2155:642c:a2e:a545) (Quit: My MacBook Air has gone to sleep. ZZZzzz…)
[20:15:19] <curiosa> Even if one really think about everything, you are still inferior by the reality that Raku needs C much more than C needs Raku
[20:15:49] <curiosa> the power unbalance would still be overwhelming
[20:16:45] <curiosa> even Grammars, that are a very strong point of raku, are matched by Bison to a level that is hard to tell which one is better
[20:17:25] <curiosa> one would think that Raku is the child of the love hate relation between Larry and Bison
[20:17:44] <lizmat> curiosa: and your point is?  :-)
[20:17:44] <curiosa> cucked by Java lovers
[20:18:34] <[Coke]> ok, there goes any interest in this as a serious conversation for me.
[20:18:53] <curiosa> lol
[20:19:20] * [Coke] wonders if the radar for use of that word works in a multi-language community or if the super red flags are US only.
[20:19:57] <curiosa> I guess it depends on the cultural background
[20:20:41] <[Coke]> to attempt to address the potentially serious ask of will raku ever be able to dynamically compile C... I don't think that would be core, but I could see something like P5's Inline::C, but even that doesn't sound like it would meet the ask here.
[20:21:12] <curiosa> yep
[20:22:16] <curiosa> I am coming to the realisation that the C language is not a very friendly langauge toward anything that is not C derived
[20:22:18] * [Coke] points to https://modules.raku.org/dist/Inline:cpan:FROGGS
[20:22:42] <[Coke]> last updated 2014.
[20:23:44] <curiosa> when people invented C, they really decided that this is a "ring to rule them all"
[20:24:33] <guifa> I'm pretty sure that's … not what was being thought of when C was made.
[20:24:56] <curiosa> don't underestimate malice, guifa
[20:25:07] <guifa> The history of C is pretty well documented.
[20:25:23] *** Quits: abraxxa (~ahartmai@tsa-tc-flod.t-systems.at) (Remote host closed the connection)
[20:25:33] <curiosa> history is written by the winners
[20:28:25] <curiosa> think about Objective C, their object system and runtime is much more friendly to other languages than C
[20:28:34] <curiosa> still, it is C, because C is C
[20:28:48] <curiosa> wouldn't be C if C wasn't C
[20:29:18] <leont> C is C, because it's the successor of B (and BCPL)
[20:29:29] <guifa> leont++ 
[20:31:02] <curiosa> fine.. I am wondering if one could come up with a language that is based on C but takes all Raku innovations
[20:31:36] <curiosa> something that could just extern 'C', but be raku
[20:33:18] <curiosa> http://prog.vub.ac.be/~tjdhondt/ESL/BCPL_to_Cfront_files/p557-richards.pdf cool stuff
[20:35:31] *** Quits: mexen (uid495612@user/mexen) (Quit: Connection closed for inactivity)
[20:37:13] <curiosa> be university professor, write tool to build other compilers, end up with everyone using that tool as the only compiler
[20:42:32] *** Quits: curiosa (~curiosa@37.165.29.23) (Quit: Client closed)
[20:46:51] <tbrowder> .tell tonyo port 10000 for cro app
[20:46:52] <tellable6> tbrowder, I'll pass your message to tonyo
[20:54:30] *** Quits: abraxxa-home (~alex@2a01:100:2000:2500::22) (Remote host closed the connection)
[21:06:25] *** Quits: dakkar (~dakkar@home.thenautilus.net) (Ping timeout: 256 seconds)
[21:26:46] *** Joins: juanfra__ (~juanfra@user/juanfra)
[21:33:24] <gfldex> weekly: https://news.ycombinator.com/reply?id=30363321&goto=item%3Fid%3D30359309%2330363321
[21:33:24] <notable6> gfldex, Noted! (weekly)
[21:36:53] *** Quits: djerius (~quassel@pool-108-20-43-199.bstnma.fios.verizon.net) (Quit: No Ping reply in 180 seconds.)
[21:37:07] *** Joins: djerius (~quassel@pool-108-20-43-199.bstnma.fios.verizon.net)
[21:38:09] *** Quits: reportable6 (rep-able@2001:41d0:2:5eb5::) (Remote host closed the connection)
[21:38:13] <tonyo> tbrowder: you should have a line like `ProxyPassReverse / http://localhost:10000/` in your virtualhost, that's the simplest reverse proxy with apache.  you may need to enable the module with `a2enmod proxy`
[21:38:15] <tellable6> 2022-02-16T17:16:52Z #raku <tbrowder> tonyo port 10000 for cro app
[21:40:36] *** Joins: reportable6 (rep-able@2001:41d0:2:5eb5::)
[22:40:36] *** Quits: squashable6 (squ-able@2001:41d0:2:5eb5::) (Remote host closed the connection)
[22:40:36] *** Quits: reportable6 (rep-able@2001:41d0:2:5eb5::) (Remote host closed the connection)
[22:40:36] *** Quits: benchable6 (ben-able@2001:41d0:2:5eb5::) (Read error: Connection reset by peer)
[22:40:36] *** Quits: unicodable6 (uni-able@2001:41d0:2:5eb5::) (Read error: Connection reset by peer)
[22:40:36] *** Quits: committable6 (com-able@2001:41d0:2:5eb5::) (Read error: Connection reset by peer)
[22:40:36] *** Quits: bisectable6 (bis-able@2001:41d0:2:5eb5::) (Read error: Connection reset by peer)
[22:40:36] *** Quits: coverable6 (cov-able@2001:41d0:2:5eb5::) (Read error: Connection reset by peer)
[22:40:36] *** Quits: nativecallable6 (nat-able@2001:41d0:2:5eb5::) (Read error: Connection reset by peer)
[22:40:36] *** Quits: releasable6 (rel-able@2001:41d0:2:5eb5::) (Read error: Connection reset by peer)
[22:40:36] *** Quits: statisfiable6 (sta-able@2001:41d0:2:5eb5::) (Read error: Connection reset by peer)
[22:40:36] *** Quits: shareable6 (sha-able@2001:41d0:2:5eb5::) (Read error: Connection reset by peer)
[22:40:36] *** Quits: linkable6 (lin-able@2001:41d0:2:5eb5::) (Read error: Connection reset by peer)
[22:40:36] *** Quits: tellable6 (tel-able@2001:41d0:2:5eb5::) (Read error: Connection reset by peer)
[22:40:37] *** Quits: greppable6 (gre-able@2001:41d0:2:5eb5::) (Write error: Connection reset by peer)
[22:40:37] *** Quits: sourceable6 (sou-able@2001:41d0:2:5eb5::) (Write error: Connection reset by peer)
[22:40:37] *** Quits: bloatable6 (blo-able@2001:41d0:2:5eb5::) (Write error: Connection reset by peer)
[22:40:37] *** Quits: notable6 (not-able@2001:41d0:2:5eb5::) (Write error: Connection reset by peer)
[22:40:37] *** Quits: quotable6 (quo-able@2001:41d0:2:5eb5::) (Write error: Connection reset by peer)
[22:40:37] *** Quits: evalable6 (eva-able@2001:41d0:2:5eb5::) (Write error: Connection reset by peer)
[22:40:54] *** Joins: bloatable6 (blo-able@2001:41d0:2:5eb5::)
[22:40:58] *** Joins: benchable6 (ben-able@2001:41d0:2:5eb5::)
[22:41:42] *** Joins: shareable6 (sha-able@2001:41d0:2:5eb5::)
[22:41:45] *** Joins: coverable6 (cov-able@2001:41d0:2:5eb5::)
[22:42:02] *** Joins: unicodable6 (uni-able@2001:41d0:2:5eb5::)
[22:42:03] *** Joins: statisfiable6 (sta-able@2001:41d0:2:5eb5::)
[22:42:50] *** Joins: nativecallable6 (nat-able@2001:41d0:2:5eb5::)
[22:42:58] *** Joins: squashable6 (squ-able@2001:41d0:2:5eb5::)
[22:43:46] *** Joins: linkable6 (lin-able@2001:41d0:2:5eb5::)
[23:07:59] <tbrowder> ok
[23:09:17] *** Quits: japhb (~geoff@mugs/japhb) (Ping timeout: 240 seconds)
[23:18:52] <tbrowder> .tell tonyo thanks!
[23:36:23] *** Joins: japhb (~geoff@mugs/japhb)
[23:41:06] *** Joins: sourceable6 (sou-able@2001:41d0:2:5eb5::)
[23:41:44] *** Joins: releasable6 (rel-able@2001:41d0:2:5eb5::)
[23:41:44] *** Joins: bisectable6 (bis-able@2001:41d0:2:5eb5::)
[23:41:49] *** Joins: quotable6 (quo-able@2001:41d0:2:5eb5::)
[23:42:55] *** Joins: reportable6 (rep-able@2001:41d0:2:5eb5::)
[23:43:02] *** Joins: evalable6 (eva-able@2001:41d0:2:5eb5::)
[23:43:45] *** Joins: committable6 (com-able@2001:41d0:2:5eb5::)
