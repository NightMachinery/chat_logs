[00:03:34] *** Quits: equil (~u@user/eq) (Ping timeout: 252 seconds)
[00:05:29] *** Joins: ur5us (~ur5us@2406:e002:6c26:e001:60e2:2628:b055:1e94)
[00:05:43] *** Joins: equil (~u@user/eq)
[00:20:56] *** Quits: withershins (~craig@pa49-184-231-82.pa.vic.optusnet.com.au) (Ping timeout: 245 seconds)
[00:36:04] *** Joins: DNH (~DNH@2a02:8108:1100:16d8:90d3:5ed9:9947:2fe2)
[00:41:49] *** Joins: thojanssens (~thojansse@ptr-178-51-153-204.dyn.mobistar.be)
[00:43:22] *** Joins: mooff (mooff@awful.cooking)
[00:52:05] *** Quits: DNH (~DNH@2a02:8108:1100:16d8:90d3:5ed9:9947:2fe2) (Ping timeout: 260 seconds)
[00:54:16] *** Quits: mahmutov_ (~mahmutov@5.176.41.106) (Ping timeout: 245 seconds)
[00:55:21] *** Joins: mooff2 (mooff@awful.cooking)
[00:57:19] *** Quits: mooff (mooff@awful.cooking) (Ping timeout: 252 seconds)
[00:57:19] *** mooff2 is now known as mooff
[01:28:07] *** Quits: thojanssens (~thojansse@ptr-178-51-153-204.dyn.mobistar.be) (Ping timeout: 252 seconds)
[01:28:50] *** Quits: ArctVaulMarsHMPJ (~pjetcetal@2.95.44.252) (Quit: EXIT)
[01:45:56] *** Joins: withershins (~craig@pa49-184-231-82.pa.vic.optusnet.com.au)
[01:56:50] *** Quits: duane (~duane@69-148-45-178.lightspeed.nsvltn.sbcglobal.net) (Ping timeout: 260 seconds)
[01:59:27] <hoppity`> I have a list of structs with different *updated_at* dates. What would be the most efficient way to find the struct within that list that has the latest date?
[02:00:56] *** Quits: silbermm (~silbermm@user/ahappydeath) (Ping timeout: 245 seconds)
[02:03:24] *** Joins: ArctVaulMarsHMPJ (~pjetcetal@2.95.44.252)
[02:03:53] <rawtaz> hoppity`: unless someone else has a better idea, a simple reduce?
[02:04:40] *** Quits: ziggurat_ (~quassel@50.239.20.16) (Ping timeout: 265 seconds)
[02:06:06] *** Joins: odoood (~odoood@2601:c8:c003:a550::3)
[02:08:19] *** Joins: silbermm (~silbermm@user/ahappydeath)
[02:10:01] <hoppity`> rawtaz: That sounds sensible. I should have mentioned this but the list I am referring to is actually a preload for another record.
[02:10:18] <hoppity`> So I am wondering if there is a way to sort preloads in ecto.
[02:10:45] <hoppity`> For now I will try this: https://stackoverflow.com/questions/55252272/ecto-order-by-in-preload
[02:12:36] <rawtaz> aha. i have no clue, sorry
[02:12:40] *** Quits: silbermm (~silbermm@user/ahappydeath) (Ping timeout: 252 seconds)
[02:13:49] *** Joins: silbermm (~silbermm@user/ahappydeath)
[02:14:25] <hoppity`> no worries
[02:14:33] <hoppity`> yo rawtaz, are you German?
[02:15:19] <rawtaz> nope!
[02:15:24] <rawtaz> but i know some german. like "moin"
[02:15:27] <rawtaz> are you?
[02:15:39] <hoppity`> no, Canadian
[02:15:43] <rawtaz> ah. thats nice
[02:15:43] <hoppity`> eh
[02:15:49] <rawtaz> may i ask approx where in canada?
[02:15:56] <hoppity`> Alberta
[02:16:03] <hoppity`> u?
[02:16:22] <rawtaz> im from Venuz but currently located in south of Sweden
[02:16:27] <rawtaz> hm alberat
[02:16:31] * rawtaz checks map
[02:16:48] <hoppity`> Sweeden, nice. I have a friend who used to work at the UN there and really liked the country
[02:17:05] <rawtaz> oh really? they werent from sweden i take it?
[02:17:21] <hoppity`> No, they were actually from Mexico
[02:17:23] <rawtaz> yeah it has a lot of good sides this country. lots of bad ones too but meh, thats how it is everywhere
[02:17:26] <rawtaz> aha
[02:18:13] <hoppity`> I know two people who lived in Sweden one (the UN one) absolutely loved it. The other guy mentioned some racism incidents but I'm not sure how much is true.
[02:18:43] *** Quits: silbermm (~silbermm@user/ahappydeath) (Ping timeout: 252 seconds)
[02:18:49] <rawtaz> well i think sweden isnt very racist, but there's scumbags in every corner of the world. but it's not a country that is racist at all IMO
[02:19:08] <hoppity`> absolutely
[02:22:37] *** Quits: james_lavin (~jameslavi@ool-457981b2.dyn.optonline.net) (Ping timeout: 268 seconds)
[02:25:06] *** Quits: odoood (~odoood@2601:c8:c003:a550::3) (Ping timeout: 245 seconds)
[02:30:52] *** Joins: ziggurat_ (~quassel@50.239.20.16)
[02:32:10] <srfsh> hoppity`: there's Enum.max_by/4, in case you still need it.
[02:32:22] <hoppity`> srfsh: that is awesome thank you very much
[02:32:49] <rawtaz> oh
[02:35:34] <hoppity`> In case anyone is curious, I achieved what I wanted with something like the following:
[02:35:38] <hoppity`> posts = Repo.preload posts, [comments: from(c in Comment, order_by: c.published_at)]
[02:36:10] <hoppity`> Which is an example from here: https://hexdocs.pm/ecto/Ecto.Repo-callback-preload.html#c:preload/3-examples
[02:49:49] *** Joins: silbermm (~silbermm@user/ahappydeath)
[02:50:14] <hoppity`> Is there a way to try to fetch a value from a map but the catch is that the map might not be there and isntead might be nil?
[02:50:36] <hoppity`> I am looking for something that will tolerate the map not existing and return a default value in that case
[02:52:22] *** Quits: brauliobz (~manjaro-u@user/brauliobz) (Ping timeout: 265 seconds)
[02:55:01] *** Quits: silbermm (~silbermm@user/ahappydeath) (Ping timeout: 252 seconds)
[02:56:28] <srfsh> what you are doing is extreamly hacky.  please structure your program better, perhaps with pattern maching.  in the mean time, you can do something like Map.get(var || %{}, :key, "default").  var being the variable that might be nil.
[02:56:45] <hoppity`> thank you
[02:57:25] <hoppity`> your solution works, I used an if in the meantime while I find the perfect solution
[03:06:30] *** Joins: james_lavin (~jameslavi@ool-457981b2.dyn.optonline.net)
[03:09:42] *** Quits: ur5us (~ur5us@2406:e002:6c26:e001:60e2:2628:b055:1e94) (Ping timeout: 268 seconds)
[03:16:26] *** Quits: hoppity` (~user@66.222.130.63) (Remote host closed the connection)
[03:23:49] *** Joins: silbermm (~silbermm@user/ahappydeath)
[03:28:26] *** Quits: silbermm (~silbermm@user/ahappydeath) (Ping timeout: 245 seconds)
[03:43:05] *** Joins: ur5us (~ur5us@2406:e002:6c26:e001:60e2:2628:b055:1e94)
[03:52:35] *** Joins: silbermm (~silbermm@user/ahappydeath)
[03:55:34] *** Quits: gitgooood (~gitgood@80-44-12-204.dynamic.dsl.as9105.com) (Ping timeout: 252 seconds)
[03:59:26] *** Quits: silbermm (~silbermm@user/ahappydeath) (Ping timeout: 268 seconds)
[04:10:53] *** Joins: gitgooood (~gitgood@80-44-12-204.dynamic.dsl.as9105.com)
[04:18:10] *** Joins: Tongir (~tangmang@124-169-97-177.tpgi.com.au)
[04:39:52] *** Joins: silbermm (~silbermm@user/ahappydeath)
[04:45:56] *** Quits: silbermm (~silbermm@user/ahappydeath) (Ping timeout: 245 seconds)
[04:58:32] *** Quits: ziggurat_ (~quassel@50.239.20.16) (Read error: Connection reset by peer)
[04:58:57] *** Joins: ziggurat_ (~quassel@50.239.20.16)
[05:01:04] <benwilson512> you can also `var[:key] || "default"`
[05:01:14] <benwilson512> hoppity: ^
[05:02:27] <hoppity> benwilson512: that solution is excellent, thank you
[05:03:10] <hoppity> Is what I am asking really that "hackish"? I am simply looking at the list of prealods then using List.first() on them which returns either the item I want or nil.
[05:03:31] <hoppity> Ergo why I need to attemp to access the item in question (map) if exists or deal with the nil somehow
[05:07:02] *** Quits: gitgooood (~gitgood@80-44-12-204.dynamic.dsl.as9105.com) (Read error: Connection reset by peer)
[05:22:22] *** Joins: Tlanger (~tangmang@signiq.cust.bdr01.per02.wa.VOCUS.net.au)
[05:25:35] *** Quits: Tongir (~tangmang@124-169-97-177.tpgi.com.au) (Ping timeout: 265 seconds)
[05:26:05] <benwilson512> ah so
[05:26:33] <benwilson512> hoppity: do note that if you're dealing with a list of preloads then what you have is a struct not a simple map, and in that case you need to opt into the [] functionality for it
[05:26:50] *** Joins: bjarno__ (~bjarno@94-226-11-48.access.telenet.be)
[05:27:20] <benwilson512> I think srfsh's comments are maybe a bit overstated IMHO. Particularly when working with database associations that may or may not exist, access chains that work with `nil` are fine
[05:27:21] <benwilson512> eg
[05:29:07] <benwilson512> plan.route[:origin_location] || "None Specified"
[05:29:23] <benwilson512> or rather `plan.route[:origin_location][:name] "N/A"` something of that sort
[05:30:57] *** Quits: bjarno_ (~bjarno@94-226-11-48.access.telenet.be) (Ping timeout: 250 seconds)
[05:35:04] *** Quits: james_lavin (~jameslavi@ool-457981b2.dyn.optonline.net) (Ping timeout: 252 seconds)
[05:40:49] *** Joins: silbermm (~silbermm@user/ahappydeath)
[05:48:26] *** Quits: silbermm (~silbermm@user/ahappydeath) (Ping timeout: 245 seconds)
[05:50:31] <hoppity> benwilson512: thank you very much
[06:14:51] *** Quits: hoppity (~user@user/hoppity) (Remote host closed the connection)
[06:19:25] *** Quits: ahappydeath (~ahappydea@user/ahappydeath) (Ping timeout: 268 seconds)
[06:24:21] *** Joins: silbermm (~silbermm@user/ahappydeath)
[06:29:01] *** Quits: silbermm (~silbermm@user/ahappydeath) (Ping timeout: 252 seconds)
[06:33:18] *** Joins: james_lavin (~jameslavi@ool-457981b2.dyn.optonline.net)
[06:37:46] *** Quits: james_lavin (~jameslavi@ool-457981b2.dyn.optonline.net) (Ping timeout: 252 seconds)
[06:48:25] *** Joins: silbermm (~silbermm@user/ahappydeath)
[06:55:00] *** Quits: silbermm (~silbermm@user/ahappydeath) (Ping timeout: 265 seconds)
[06:58:43] *** Joins: sil (~sil@2406:3003:2003:be:e167:c95d:a778:40ae)
[06:59:52] <sil> hi!
[07:00:31] *** Quits: sil (~sil@2406:3003:2003:be:e167:c95d:a778:40ae) (Client Quit)
[07:14:30] *** Quits: jess (~jess@libera/staff/jess) (Quit: Lost terminal)
[07:15:34] *** Joins: jess (~jess@libera/staff/jess)
[07:16:44] *** Joins: james_lavin (~jameslavi@ool-457981b2.dyn.optonline.net)
[07:21:06] *** Joins: dcz (~dcz@user/dcz)
[08:03:04] *** Quits: ur5us (~ur5us@2406:e002:6c26:e001:60e2:2628:b055:1e94) (Ping timeout: 252 seconds)
[08:05:29] *** Joins: dcz_ (~dcz@user/dcz)
[08:05:49] *** Quits: dcz (~dcz@user/dcz) (Ping timeout: 252 seconds)
[08:16:13] *** Quits: james_lavin (~jameslavi@ool-457981b2.dyn.optonline.net) (Ping timeout: 252 seconds)
[08:20:56] *** Joins: silbermm (~silbermm@user/ahappydeath)
[08:24:05] *** Quits: voegelas (~voegelas@www.andreasvoegele.com) (Remote host closed the connection)
[08:25:52] *** Quits: silbermm (~silbermm@user/ahappydeath) (Ping timeout: 265 seconds)
[08:27:55] *** Joins: voegelas (~voegelas@www.andreasvoegele.com)
[08:36:25] *** Quits: voegelas (~voegelas@www.andreasvoegele.com) (Remote host closed the connection)
[08:39:58] *** Joins: voegelas (~voegelas@www.andreasvoegele.com)
[08:44:04] *** Joins: voltone (~voltone@mailgw3.be-all.com)
[09:10:40] *** Quits: voltone (~voltone@mailgw3.be-all.com) (Ping timeout: 252 seconds)
[09:12:25] *** Joins: james_lavin (~jameslavi@ool-457981b2.dyn.optonline.net)
[09:16:43] *** Quits: james_lavin (~jameslavi@ool-457981b2.dyn.optonline.net) (Ping timeout: 252 seconds)
[09:27:04] *** Quits: mjs2600 (~mjs2600@c-24-91-3-49.hsd1.vt.comcast.net) (Quit: ZNC 1.8.2 - https://znc.in)
[09:27:19] *** Joins: mjs2600 (~mjs2600@c-24-91-3-49.hsd1.vt.comcast.net)
[09:42:30] *** Quits: Sgeo (~Sgeo@user/sgeo) (Read error: Connection reset by peer)
[09:46:25] *** Quits: henry40408 (~henry4040@112-104-97-56.adsl.dynamic.seed.net.tw) (Ping timeout: 252 seconds)
[10:01:49] *** Joins: henry40408 (~henry4040@112-105-246-84.adsl.dynamic.seed.net.tw)
[10:17:08] *** Joins: voltone (~voltone@mailgw3.be-all.com)
[10:18:20] *** Joins: skali (~skali@178.214.251.8)
[10:32:34] <m1dnight> Hi all. On my snippet hosting site (exbin.call-cc.be) I have a random person posting a boatload of http requests. I'm guessing it's to attempt http smuggling, but its failing.
[10:32:42] <m1dnight> I'm talking about a post every minute or so.
[10:32:55] <m1dnight> I tried banning an ip, but then it's a different one afterwards.
[10:33:14] <m1dnight> https://exbin.call-cc.be/ConfiscatingPreoral, https://exbin.call-cc.be/AdjournSops, https://exbin.call-cc.be/AdjournSops <- examples
[10:33:21] <m1dnight> I'm wondering how one would approach this.
[10:33:32] <m1dnight> I'm going to put some rate limiting around the endpoint, but that's probably a partial fix.
[10:33:49] <m1dnight> The other thing I was thinking, maybe allow some user-defined regular expressions to filter content?
[10:34:38] *** Quits: skali (~skali@178.214.251.8) (Quit: My MacBook has gone to sleep. ZZZzzz…)
[10:37:26] <sepow> maybe a lenient captcha?
[10:37:44] <m1dnight> Well, the bad news is that the peson is using the TCP endpoint
[10:37:58] <m1dnight> So you can do something like echo "my content" | nc exbin.call-cc.be 9999
[10:38:00] <sepow> ah
[10:38:02] <m1dnight> so rate limiting in nginx doens't work either
[10:38:34] <m1dnight> I was also thinking, perhaps just at the fail2ban level, but dnno what "real programmers" would do
[10:40:28] <norrland> if the tcp-endpoint is separate from the http-ap
[10:40:33] *** Joins: Bounga (~nico@82-65-32-175.subs.proxad.net)
[10:40:52] <norrland> if the tcp-endpoint is separate from the http-api, I'd try with a rate-limit. Either in the code or with fail2ban as you suggest.
[10:50:31] *** Quits: Gustavo6046 (~Gustavo60@user/gustavo6046) (Ping timeout: 245 seconds)
[10:50:53] *** Joins: Gustavo6046 (~Gustavo60@user/gustavo6046)
[10:58:32] *** Joins: floriann (~Thunderbi@2a02:8106:2e:1300:ea6a:64ff:fe67:369e)
[10:59:08] *** Joins: LostKobrakai_ (~LostKobra@2001:16b8:2d21:df00:192a:99a3:158b:eedd)
[11:05:37] *** Joins: brauliobz (~manjaro-u@user/brauliobz)
[11:13:40] *** Joins: james_lavin (~jameslavi@ool-457981b2.dyn.optonline.net)
[11:18:01] *** Quits: james_lavin (~jameslavi@ool-457981b2.dyn.optonline.net) (Ping timeout: 245 seconds)
[11:19:03] *** Joins: glassofethanol (~ethanmorg@82.16.192.251)
[11:30:15] *** Joins: thojanssens (~thojansse@ptr-178-51-123-101.dyn.mobistar.be)
[11:34:37] *** Joins: ur5us (~ur5us@2406:e002:6c26:e001:60e2:2628:b055:1e94)
[11:37:31] *** Quits: glassofethanol (~ethanmorg@82.16.192.251) (Ping timeout: 252 seconds)
[11:39:48] *** Joins: hendursa1 (~weechat@user/hendursaga)
[11:40:21] *** Quits: hendursaga (~weechat@user/hendursaga) (Ping timeout: 276 seconds)
[11:40:31] *** Joins: silbermm (~silbermm@user/ahappydeath)
[11:45:02] *** Joins: glassofethanol (~ethanmorg@82.16.192.251)
[11:46:55] *** Quits: silbermm (~silbermm@user/ahappydeath) (Ping timeout: 252 seconds)
[11:53:10] *** Quits: floriann (~Thunderbi@2a02:8106:2e:1300:ea6a:64ff:fe67:369e) (Quit: floriann)
[12:16:06] *** Joins: silbermm (~silbermm@user/ahappydeath)
[12:21:15] *** Quits: silbermm (~silbermm@user/ahappydeath) (Ping timeout: 265 seconds)
[12:52:41] *** Joins: phaleth (~phaleth@user/phaleth)
[12:54:38] *** Quits: voltone (~voltone@mailgw3.be-all.com) (Quit: My MacBook has gone to sleep. ZZZzzz…)
[12:57:25] *** Joins: voltone (~voltone@mailgw3.be-all.com)
[13:06:33] *** Quits: brauliobz (~manjaro-u@user/brauliobz) (Read error: No route to host)
[13:07:06] *** Joins: brauliobz (~manjaro-u@user/brauliobz)
[13:07:46] *** Quits: thojanssens (~thojansse@ptr-178-51-123-101.dyn.mobistar.be) (Ping timeout: 252 seconds)
[13:08:19] *** Quits: ur5us (~ur5us@2406:e002:6c26:e001:60e2:2628:b055:1e94) (Ping timeout: 252 seconds)
[13:17:11] *** Quits: Bounga (~nico@82-65-32-175.subs.proxad.net) (Ping timeout: 245 seconds)
[13:22:32] *** Joins: Tongir (~tangmang@124-169-97-177.tpgi.com.au)
[13:24:19] <m1dnight> Ah, I just dropped the endpoint for now. this person kept changing ip./
[13:24:29] <m1dnight> This is why we can't have nice things :D
[13:25:32] *** Quits: Tlanger (~tangmang@signiq.cust.bdr01.per02.wa.VOCUS.net.au) (Ping timeout: 265 seconds)
[13:26:41] <Nicd> this is why I don't have user-generated content
[13:27:05] <m1dnight> user-generated-content applications, you mean?
[13:27:41] <m1dnight> Ah, it was actually something I decided to make when I first learned about phoenix. And over time i tried other stuff in it, because it's small and I nkow the code really well.
[13:27:53] <m1dnight> Other people started using it, and that made me smile, so I keep it online.
[13:27:57] <Nicd> in my own service
[13:28:03] *** Joins: chgr (~ek@nat-91-137-31-13.net.encoline.de)
[13:30:15] <Nicd> and I wouldn't make a service that is based on UGC. too big of a can of worms
[13:38:40] *** Joins: thojanssens (~thojansse@ptr-178-51-123-101.dyn.mobistar.be)
[13:54:01] *** Joins: gorh (~gorh@2405:201:e006:701c:490d:5880:e882:9e21)
[13:54:16] *** Quits: chgr (~ek@nat-91-137-31-13.net.encoline.de) (Quit: WeeChat 3.2)
[13:58:00] *** Quits: gorh (~gorh@2405:201:e006:701c:490d:5880:e882:9e21) (Quit: Quit)
[14:15:47] *** Joins: thojanssens_ (~thojansse@ptr-178-51-123-101.dyn.mobistar.be)
[14:17:44] *** Quits: thojanssens (~thojansse@ptr-178-51-123-101.dyn.mobistar.be) (Ping timeout: 265 seconds)
[14:38:43] *** Quits: voltone (~voltone@mailgw3.be-all.com) (Quit: My MacBook has gone to sleep. ZZZzzz…)
[14:40:19] *** Joins: voltone (~voltone@mailgw3.be-all.com)
[14:40:20] *** Quits: voltone (~voltone@mailgw3.be-all.com) (Client Quit)
[14:44:21] *** Joins: silbermm (~silbermm@user/ahappydeath)
[14:48:58] *** Quits: silbermm (~silbermm@user/ahappydeath) (Ping timeout: 252 seconds)
[14:54:30] *** Joins: james_lavin (~jameslavi@ool-457981b2.dyn.optonline.net)
[14:56:35] *** Joins: thojanssens__ (~thojansse@ptr-178-51-123-101.dyn.mobistar.be)
[14:58:51] *** Quits: thojanssens_ (~thojansse@ptr-178-51-123-101.dyn.mobistar.be) (Ping timeout: 245 seconds)
[15:09:03] *** Joins: thojanssens (~thojansse@ptr-178-51-123-101.dyn.mobistar.be)
[15:11:20] *** Quits: thojanssens__ (~thojansse@ptr-178-51-123-101.dyn.mobistar.be) (Ping timeout: 260 seconds)
[15:18:03] *** Joins: voltone (~voltone@mailgw3.be-all.com)
[15:19:32] *** Joins: silbermm (~silbermm@user/ahappydeath)
[15:26:37] *** Quits: Gustavo6046 (~Gustavo60@user/gustavo6046) (Read error: Connection reset by peer)
[15:29:45] *** Joins: Gustavo6046 (~Gustavo60@user/gustavo6046)
[15:35:44] *** Joins: gitgood (~gitgood@80-44-12-204.dynamic.dsl.as9105.com)
[15:35:46] *** ihabunek1 is now known as ihabunek
[15:40:49] *** Quits: thojanssens (~thojansse@ptr-178-51-123-101.dyn.mobistar.be) (Read error: Connection reset by peer)
[15:41:12] *** Joins: thojanssens (~thojansse@ptr-178-51-123-101.dyn.mobistar.be)
[15:41:58] *** Quits: srfsh (~srfsh@user/srfsh) (Remote host closed the connection)
[15:42:17] *** Joins: srfsh (~srfsh@user/srfsh)
[15:55:24] *** Quits: withershins (~craig@pa49-184-231-82.pa.vic.optusnet.com.au) (Quit: WeeChat 3.3)
[16:00:21] *** Quits: srfsh (~srfsh@user/srfsh) (Ping timeout: 276 seconds)
[16:01:19] *** Joins: srfsh (~srfsh@user/srfsh)
[16:04:24] <joshproehl> m1dnight: I'm not sure off the top of my head if postgres has a high-performing duplicate checker, but if so could use that, or hash all snippets and refuse to create duplicate snippets via the TCP endpoint perhaps. Or add a "ban snippets which match" list to the admin side and let each instance operator keep a list of exact matches to refuse.
[16:08:30] <joshproehl> Could do something sneaky in TCP perhaps and keep their connection open once a match is detected, screw up whatever bot is on the other side? I feel like I've read about that as a technique, but I can't recall where it's used...
[16:09:58] *** Joins: nd__ (~nd@b2b-37-24-67-97.unitymedia.biz)
[16:13:04] *** Quits: james_lavin (~jameslavi@ool-457981b2.dyn.optonline.net) (Ping timeout: 252 seconds)
[16:17:36] *** Joins: james_lavin (~jameslavi@ool-457981b2.dyn.optonline.net)
[16:20:58] *** Joins: bodgix (~bodgix@vps-ae17da44.vps.ovh.net)
[16:22:26] *** Quits: james_lavin (~jameslavi@ool-457981b2.dyn.optonline.net) (Ping timeout: 265 seconds)
[16:25:44] *** Joins: thojanssens_ (~thojansse@ptr-178-51-123-101.dyn.mobistar.be)
[16:28:23] *** Quits: thojanssens (~thojansse@ptr-178-51-123-101.dyn.mobistar.be) (Ping timeout: 265 seconds)
[16:30:08] *** Joins: duane (~duane@75-35-193-117.lightspeed.nsvltn.sbcglobal.net)
[16:33:59] *** Joins: james_lavin (~jameslavi@ool-457981b2.dyn.optonline.net)
[16:40:39] *** Quits: hendursa1 (~weechat@user/hendursaga) (Ping timeout: 276 seconds)
[16:52:15] *** Quits: james_lavin (~jameslavi@ool-457981b2.dyn.optonline.net) (Ping timeout: 260 seconds)
[17:01:15] *** Joins: james_lavin (~jameslavi@ool-457981b2.dyn.optonline.net)
[17:02:10] *** Joins: stepnivlk (uid522743@id-522743.helmsley.irccloud.com)
[17:08:51] *** Joins: hendursa1 (~weechat@user/hendursaga)
[17:18:28] <norrland> sounds a bit like spamtrap that spamd on openbsd does for you (=
[17:31:33] *** Quits: james_lavin (~jameslavi@ool-457981b2.dyn.optonline.net) (Ping timeout: 265 seconds)
[17:31:48] *** Joins: supermariojardel (~supermari@46.196.5.99)
[17:32:36] *** Joins: james_lavin (~jameslavi@ool-457981b2.dyn.optonline.net)
[17:33:45] <supermariojardel> Hi guys, I have a quick question - what is the difference between .heex and .leex template file formats? I thought they were interchangable - my current project gives me an error when i change the file extension from leex to heex. 
[17:44:51] *** Quits: voltone (~voltone@mailgw3.be-all.com) (Quit: My MacBook has gone to sleep. ZZZzzz…)
[17:48:59] <Ankhers> supermariojardel: What version of Phoenix are you using? heex was introduced in 1.6.
[17:49:07] <supermariojardel> 1.6
[17:49:33] <supermariojardel> is there any syntax difference between the two formats?
[17:50:57] <Ankhers> Yes. https://www.phoenixframework.org/blog/phoenix-1.6-released, read the section about heex. Basically you can't use `<%= @foo %>' syntax INSIDE your HTML now. You will need to use `{ @foo }' instead.
[17:57:23] <supermariojardel> thank you very much
[17:58:59] *** Joins: Sgeo (~Sgeo@user/sgeo)
[18:13:54] *** Joins: koevet (~koevet@ip5b4113de.dynamic.kabel-deutschland.de)
[18:20:51] <serafeim> hello friends
[18:21:01] <serafeim> how to make sure that some code is run when my phoenix app starts ?
[18:21:01] <norrland> Morning
[18:21:06] <serafeim> it's evening here :)
[18:22:01] <serafeim> should I put it on application.start ?
[18:36:21] <phaleth> application.ex start yes
[18:43:37] *** Joins: Bounga (~nico@475111022.box.freepro.com)
[18:51:41] *** Joins: drewlander (~drewlande@173-80-249-48.bklycmtk03.res.dyn.suddenlink.net)
[18:54:06] *** LostKobrakai_ is now known as LostKobrakai[awa
[18:54:06] *** Quits: LostKobrakai[awa (~LostKobra@2001:16b8:2d21:df00:192a:99a3:158b:eedd) (Quit: LostKobrakai[awa)
[18:54:52] *** Quits: hendursa1 (~weechat@user/hendursaga) (Quit: hendursa1)
[18:55:31] *** Joins: hendursaga (~weechat@user/hendursaga)
[18:59:12] *** Joins: hoppity (~user@user/hoppity)
[18:59:17] *** Joins: LostKobrakai_ (~LostKobra@2001:16b8:2d21:df00:192a:99a3:158b:eedd)
[19:01:28] <hoppity> Hi guys, I have 4 search boxes in a particular page of my app. I am trying to build a sort of refining search like this: https://ibb.co/Y3gjh2g
[19:02:12] <hoppity> I am finding that starting to type on one of the fields erases the other  ones but not always. It's kinda random, though I have noticed that typing a space will clear the other fields for whatever reason.
[19:03:17] <hoppity> Any idea what may be causing this?
[19:03:37] *** Quits: james_lavin (~jameslavi@ool-457981b2.dyn.optonline.net) (Ping timeout: 252 seconds)
[19:20:48] *** Joins: james_lavin (~jameslavi@ool-457981b2.dyn.optonline.net)
[19:23:55] *** Quits: silbermm (~silbermm@user/ahappydeath) (Ping timeout: 252 seconds)
[19:25:34] *** Quits: Bounga (~nico@475111022.box.freepro.com) (Ping timeout: 252 seconds)
[19:26:01] *** Quits: glassofethanol (~ethanmorg@82.16.192.251) (Quit: leaving)
[19:26:11] *** Quits: koevet (~koevet@ip5b4113de.dynamic.kabel-deutschland.de) (Quit: My MacBook has gone to sleep. ZZZzzz…)
[19:27:30] *** Joins: koevet (~koevet@ip5b4113de.dynamic.kabel-deutschland.de)
[19:29:18] *** Quits: koevet (~koevet@ip5b4113de.dynamic.kabel-deutschland.de) (Client Quit)
[19:30:48] *** Joins: silbermm (~silbermm@user/ahappydeath)
[19:38:50] *** Quits: shiraeeshi[m] (~shiraeesh@2001:470:69fc:105::1:77) (Quit: Bridge terminating on SIGTERM)
[19:38:50] *** Quits: mewfree[m] (~mewfreema@2001:470:69fc:105::c904) (Quit: Bridge terminating on SIGTERM)
[19:38:50] *** Quits: punnie (~punniemat@2001:470:69fc:105::1193) (Quit: Bridge terminating on SIGTERM)
[19:38:51] *** Quits: tcit (~tcit@2001:470:69fc:105::8f) (Quit: Bridge terminating on SIGTERM)
[19:38:51] *** Quits: ServerStatsDisco (~serversta@2001:470:69fc:105::1a) (Quit: Bridge terminating on SIGTERM)
[19:38:51] *** Quits: Zaab1t (~carlbordu@2001:470:69fc:105::78e) (Quit: Bridge terminating on SIGTERM)
[19:38:51] *** Quits: Mayel[m] (~mayelmatr@2001:470:69fc:105::bf92) (Quit: Bridge terminating on SIGTERM)
[19:38:52] *** Quits: marcecoll[m] (~marcecoll@2001:470:69fc:105::1:641) (Quit: Bridge terminating on SIGTERM)
[19:38:52] *** Quits: Hadrien[m] (~lucaskevm@2001:470:69fc:105::1ed8) (Quit: Bridge terminating on SIGTERM)
[19:38:52] *** Quits: voloyev[m] (~voloyevma@2001:470:69fc:105::1:16aa) (Quit: Bridge terminating on SIGTERM)
[19:38:52] *** Quits: Soup[m] (~rktjmpmat@2001:470:69fc:105::cdeb) (Quit: Bridge terminating on SIGTERM)
[19:38:52] *** Quits: arathunku[m] (~arathunku@2001:470:69fc:105::1:746) (Quit: Bridge terminating on SIGTERM)
[19:38:52] *** Quits: wlan0[m] (~wlan0matr@2001:470:69fc:105::f996) (Quit: Bridge terminating on SIGTERM)
[19:38:52] *** Quits: t[m] (~tbhmatrix@2001:470:69fc:105::ffd9) (Quit: Bridge terminating on SIGTERM)
[19:38:52] *** Quits: uhoreg (~uhoreg@2001:470:69fc:105::35f) (Quit: Bridge terminating on SIGTERM)
[19:38:52] *** Quits: me[m] (~metmtrxmi@2001:470:69fc:105::8cc3) (Quit: Bridge terminating on SIGTERM)
[19:38:52] *** Quits: davec[m] (~davec82ma@2001:470:69fc:105::1:751) (Quit: Bridge terminating on SIGTERM)
[19:38:52] *** Quits: PatrikStenmark[m (~patrikste@2001:470:69fc:105::bfa1) (Quit: Bridge terminating on SIGTERM)
[19:38:52] *** Quits: IslandUsurper[m] (~lylemente@2001:470:69fc:105::40f8) (Quit: Bridge terminating on SIGTERM)
[19:38:52] *** Quits: Jared[m] (~jaredbmat@2001:470:69fc:105::bf98) (Quit: Bridge terminating on SIGTERM)
[19:38:52] *** Quits: lemondeer[m] (~lemondeer@2001:470:69fc:105::e2cc) (Quit: Bridge terminating on SIGTERM)
[19:38:52] *** Quits: kshlm (~kshlm@2001:470:69fc:105::b46b) (Quit: Bridge terminating on SIGTERM)
[19:38:52] *** Quits: sickill[m] (~sickillma@2001:470:69fc:105::1:8af) (Quit: Bridge terminating on SIGTERM)
[19:39:53] *** Joins: koevet (~koevet@ip5b4113de.dynamic.kabel-deutschland.de)
[19:41:40] *** Joins: punnie (~punniemat@2001:470:69fc:105::1193)
[19:43:30] <benwilson512> hoppity: is this with live view?
[19:43:43] *** Joins: Hadrien[m] (~lucaskevm@2001:470:69fc:105::1ed8)
[19:43:44] *** Joins: mewfree[m] (~mewfreema@2001:470:69fc:105::c904)
[19:43:44] *** Joins: Mayel[m] (~mayelmatr@2001:470:69fc:105::bf92)
[19:43:44] *** Joins: ServerStatsDisco (~serversta@2001:470:69fc:105::1a)
[19:43:44] *** Joins: Zaab1t (~carlbordu@2001:470:69fc:105::78e)
[19:43:44] *** Joins: shiraeeshi[m] (~shiraeesh@2001:470:69fc:105::1:77)
[19:43:45] *** Joins: tcit (~tcit@2001:470:69fc:105::8f)
[19:43:55] *** Joins: me[m] (~metmtrxmi@2001:470:69fc:105::8cc3)
[19:43:56] *** Joins: sickill[m] (~sickillma@2001:470:69fc:105::1:8af)
[19:43:56] *** Joins: lemondeer[m] (~lemondeer@2001:470:69fc:105::e2cc)
[19:43:56] *** Joins: Soup[m] (~rktjmpmat@2001:470:69fc:105::cdeb)
[19:43:56] *** Joins: marcecoll[m] (~marcecoll@2001:470:69fc:105::1:641)
[19:43:56] *** Joins: IslandUsurper[m] (~lylemente@2001:470:69fc:105::40f8)
[19:43:56] *** Joins: Jared[m] (~jaredbmat@2001:470:69fc:105::bf98)
[19:43:56] *** Joins: PatrikStenmark[m (~patrikste@2001:470:69fc:105::bfa1)
[19:43:57] *** Joins: wlan0[m] (~wlan0matr@2001:470:69fc:105::f996)
[19:43:57] *** Joins: t[m] (~tbhmatrix@2001:470:69fc:105::ffd9)
[19:43:57] *** Joins: davec[m] (~davec82ma@2001:470:69fc:105::1:751)
[19:43:57] *** Joins: voloyev[m] (~voloyevma@2001:470:69fc:105::1:16aa)
[19:43:57] *** Joins: arathunku[m] (~arathunku@2001:470:69fc:105::1:746)
[19:43:58] *** Joins: uhoreg (~uhoreg@2001:470:69fc:105::35f)
[19:43:58] *** Joins: kshlm (~kshlm@2001:470:69fc:105::b46b)
[19:44:30] *** Joins: nd___ (~nd@b2b-37-24-67-97.unitymedia.biz)
[19:46:33] *** Quits: hendursaga (~weechat@user/hendursaga) (Ping timeout: 276 seconds)
[19:46:46] *** Quits: nd__ (~nd@b2b-37-24-67-97.unitymedia.biz) (Ping timeout: 245 seconds)
[19:48:07] *** Quits: koevet (~koevet@ip5b4113de.dynamic.kabel-deutschland.de) (Quit: My MacBook has gone to sleep. ZZZzzz…)
[19:48:34] *** Joins: grundrausch3n (~grundraus@p200300e9ef181000a4a1c4cbeb476322.dip0.t-ipconnect.de)
[19:48:35] *** Joins: koevet (~koevet@ip5b4113de.dynamic.kabel-deutschland.de)
[19:48:39] *** Quits: koevet (~koevet@ip5b4113de.dynamic.kabel-deutschland.de) (Client Quit)
[19:49:19] *** Quits: nd___ (~nd@b2b-37-24-67-97.unitymedia.biz) (Ping timeout: 268 seconds)
[19:51:23] <hoppity> benwilson512: yes it is
[19:51:53] <benwilson512> hoppity: a common mistake w/ a liveview form is to not use `phx-change` to capture changes to the form state
[19:52:03] <benwilson512> cause if anything causes a re-render the form state gets clobbered
[19:53:38] *** Quits: drewlander (~drewlande@173-80-249-48.bklycmtk03.res.dyn.suddenlink.net) (Quit: ZNC 1.7.2+deb3 - https://znc.in)
[19:54:46] *** Quits: james_lavin (~jameslavi@ool-457981b2.dyn.optonline.net) (Ping timeout: 252 seconds)
[19:55:27] *** Joins: drewlander (~drewlande@173-80-249-48.bklycmtk03.res.dyn.suddenlink.net)
[19:56:22] *** Quits: silbermm (~silbermm@user/ahappydeath) (Ping timeout: 252 seconds)
[19:56:28] *** Joins: james_lavin (~jameslavi@ool-457981b2.dyn.optonline.net)
[19:57:05] *** Quits: grundrausch3n (~grundraus@p200300e9ef181000a4a1c4cbeb476322.dip0.t-ipconnect.de) (Quit: My MacBook has gone to sleep. ZZZzzz…)
[19:59:32] <hoppity> benwilson512: Thank you. I am using phx-change though, that is how I am filtering my table.
[19:59:35] <hoppity> I can share the code
[19:59:46] <benwilson512> yeah that'd be good
[19:59:53] <benwilson512> if it totally resets, are you getting errors in your logs?
[19:59:53] *** Joins: grundrausch3n (~grundraus@p200300e9ef181000a4a1c4cbeb476322.dip0.t-ipconnect.de)
[20:00:00] <benwilson512> if the live view crashes that can also cause form reset
[20:00:01] <benwilson512> if the live view crashes that can also cause form resets
[20:00:06] <hoppity> https://dpaste.org/BHPc
[20:00:37] <benwilson512> right but
[20:00:50] <benwilson512> can you show the actual form eex code?
[20:00:57] <hoppity> yes, coming up
[20:01:33] <hoppity> form eex code:  https://dpaste.org/e6ps
[20:03:07] <benwilson512> right so the issue is that the form inputs themselves aren't having their content preserved
[20:03:19] <benwilson512> generally you'd either use a changeset based form or explicitly set `value: @some_assign`
[20:03:29] <benwilson512> and then update that assign whenever inputs change
[20:03:43] <benwilson512> the live view is the source of truth for how the page should look
[20:03:48] <hoppity> thank you i will do that
[20:03:58] <hoppity> gotcha
[20:04:03] <benwilson512> so if you make changes in the browser, like setting form elements, and that isn't reflected in the live view state, it's at risk for getting clobbered
[20:04:32] <hoppity> makes sense
[20:04:41] <hoppity> i really appreciate it
[20:06:51] *** Quits: gitgood (~gitgood@80-44-12-204.dynamic.dsl.as9105.com) (Ping timeout: 265 seconds)
[20:07:12] *** Quits: james_lavin (~jameslavi@ool-457981b2.dyn.optonline.net) (Ping timeout: 268 seconds)
[20:08:07] *** Joins: silbermm (~silbermm@user/ahappydeath)
[20:16:42] <rawtaz> gotta share this here too: https://www.youtube.com/watch?v=CG__N4SS1Fc
[20:21:08] *** Joins: nd__ (~nd@ip-176-199-210-130.hsi06.unitymediagroup.de)
[20:21:36] *** Joins: koevet (~koevet@ip5b4113de.dynamic.kabel-deutschland.de)
[20:28:22] <hoppity> rawtaz: super cool
[20:31:04] *** Joins: thojanssens (~thojansse@ptr-178-51-123-101.dyn.mobistar.be)
[20:31:05] *** Quits: koevet (~koevet@ip5b4113de.dynamic.kabel-deutschland.de) (Quit: My MacBook has gone to sleep. ZZZzzz…)
[20:32:29] *** Quits: thojanssens_ (~thojansse@ptr-178-51-123-101.dyn.mobistar.be) (Ping timeout: 264 seconds)
[20:35:04] *** Joins: gitgood (~gitgood@80-44-12-204.dynamic.dsl.as9105.com)
[20:35:59] <rawtaz> yeah :D
[20:40:50] *** Quits: supermariojardel (~supermari@46.196.5.99) (Quit: Client closed)
[20:47:13] *** Joins: hendursaga (~weechat@user/hendursaga)
[20:56:38] <hoppity> I wonder how big the state of a liveview can be before the communication to the server starts being slow
[20:56:52] *** LostKobrakai_ is now known as LostKobrakai[awa
[20:56:52] *** Quits: LostKobrakai[awa (~LostKobra@2001:16b8:2d21:df00:192a:99a3:158b:eedd) (Quit: LostKobrakai[awa)
[20:57:02] <rawtaz> probably depends a lot on what resources there are
[20:57:06] <Nicd> not really about the state but the diff size
[20:57:12] <rawtaz> the communication format is very slim though
[20:57:44] <hoppity> Nicd: that would only be true for liveview updates wouldn't it?
[20:57:56] <hoppity> What about the first load
[20:58:14] <hoppity> I guess it wouldn't be any slower than a regular page so my question is stupid
[20:58:22] <Nicd> the first load doesn't really differ from a regular HTTP request
[20:58:28] <Nicd> well, it's loaded twice so there's that
[20:58:33] <hoppity> true
[20:59:02] <hoppity> I just have this one page that might load about a thousand records and started wondering.. "can liveview take this"
[20:59:06] <hoppity> but, yes it can
[20:59:48] <Nicd> or don't load a thousand records up front :D
[21:00:15] <hoppity> that's an option too haha
[21:00:28] *** Quits: amk (~amk@109.255.169.126) (Remote host closed the connection)
[21:01:30] *** Joins: amk (~amk@109.255.169.126)
[21:09:00] *** Quits: grundrausch3n (~grundraus@p200300e9ef181000a4a1c4cbeb476322.dip0.t-ipconnect.de) (Quit: My MacBook has gone to sleep. ZZZzzz…)
[21:14:05] *** Joins: LostKobrakai_ (~LostKobra@2001:16b8:2d21:df00:192a:99a3:158b:eedd)
[21:14:15] *** LostKobrakai_ is now known as LostKobrakai[awa
[21:15:15] *** Quits: LostKobrakai[awa (~LostKobra@2001:16b8:2d21:df00:192a:99a3:158b:eedd) (Client Quit)
[21:20:03] *** Joins: koevet (~koevet@ip5b4113de.dynamic.kabel-deutschland.de)
[21:20:24] *** Quits: koevet (~koevet@ip5b4113de.dynamic.kabel-deutschland.de) (Client Quit)
[21:22:36] *** Joins: james_lavin (~jameslavi@ool-457981b2.dyn.optonline.net)
[21:23:15] *** Quits: mooff (mooff@awful.cooking) (Quit: Ping timeout (120 seconds))
[21:23:41] *** Joins: mooff (mooff@awful.cooking)
[21:29:41] *** Quits: thojanssens (~thojansse@ptr-178-51-123-101.dyn.mobistar.be) (Ping timeout: 245 seconds)
[21:32:14] <benwilson512> Nicd: it doesn't need to be twice that
[21:32:31] <benwilson512> you can do things like have the static render just be like "loading..." and then have the live render do the actual rows
[21:32:37] <Nicd> yeah sure
[21:32:43] <benwilson512> and then obviously with live_redirect you can avoid frequent static renders
[21:32:44] <Nicd> I actually do that
[21:35:55] *** Joins: koevet (~koevet@ip5b4113de.dynamic.kabel-deutschland.de)
[21:39:52] *** Joins: chgr (~ek@nat-91-137-31-13.net.encoline.de)
[21:50:17] <m1dnight> Okay, dumb question, but I can't find the docs for heex templates?
[21:51:07] <m1dnight> https://hexdocs.pm/phoenix_live_view/assigns-eex.html this can't be the only thing, right?
[21:51:07] *** Quits: koevet (~koevet@ip5b4113de.dynamic.kabel-deutschland.de) (Quit: My MacBook has gone to sleep. ZZZzzz…)
[21:53:12] <rawtaz> does https://hexdocs.pm/phoenix/views.html help to any extent?
[21:53:36] <m1dnight> god dangit, i missed it again :p
[21:53:47] <rawtaz> i just ducked it
[21:53:54] <rawtaz> my duck-foo is strong today :3
[21:54:00] *** Quits: james_lavin (~jameslavi@ool-457981b2.dyn.optonline.net) (Ping timeout: 265 seconds)
[21:54:07] <m1dnight> I swear to god, I never find anything in these docs. Something must be wrong with the way my brain works :D
[21:54:09] <m1dnight> thanks though <3
[21:54:13] <rawtaz> yw!
[21:54:37] <rawtaz> m1dnight: FWIW i agree that the docs are not very easy to navigate/find stuff in as a newbie
[21:55:34] *** Joins: james_lavin (~jameslavi@ool-457981b2.dyn.optonline.net)
[21:57:07] *** Quits: chgr (~ek@nat-91-137-31-13.net.encoline.de) (Quit: WeeChat 3.2)
[22:00:14] <m1dnight> I don't think they're bad or something per se, I find them wonderful. I just never succeed in finding a good starting point. I don't know why.
[22:02:29] *** Joins: wonko (~wjc@62.115.229.50)
[22:05:53] <joshproehl> I find they're more meant to be read as a book, not a reference manual. I always find something neat when reading, but when I need to know exactly how to do X I too usually have to work a bit to find the starting point.
[22:06:23] <rawtaz> its just hard to get an overview to navigate i think. once youre in teh right place, its pretty fine reading alright
[22:06:33] <rawtaz> but its kind of like you have to know where to go to read about something
[22:06:52] <joshproehl> It works *really* well when I'm in 100% elixir/phoenix mode for a while, but causes some problems when I'm language-switching and trying to remind myself of things.  :-)
[22:07:05] <rawtaz> lol
[22:08:57] <hoppity> benwilson512: your static render + live render trick is exactly what I needed
[22:18:38] *** Joins: thojanssens (~thojansse@ptr-178-51-123-101.dyn.mobistar.be)
[22:19:41] *** Quits: james_lavin (~jameslavi@ool-457981b2.dyn.optonline.net) (Ping timeout: 245 seconds)
[22:40:26] *** Joins: thojanssens_ (~thojansse@ptr-178-51-123-101.dyn.mobistar.be)
[22:41:58] *** Quits: thojanssens (~thojansse@ptr-178-51-123-101.dyn.mobistar.be) (Ping timeout: 252 seconds)
[22:46:40] *** Joins: james_lavin (~jameslavi@ool-457981b2.dyn.optonline.net)
[22:48:42] <benwilson512> hoppity: glad to hear it worked for you!
[22:49:26] <benwilson512> the doc situation has gotten a lot better since hex added full text search though
[22:51:10] *** Joins: Ilyu (~quassel@166.215.82.79.rev.sfr.net)
[23:03:22] *** Quits: brauliobz (~manjaro-u@user/brauliobz) (Ping timeout: 252 seconds)
[23:09:36] *** Quits: phaleth (~phaleth@user/phaleth) (Quit: phaleth)
[23:13:51] *** Quits: dcz_ (~dcz@user/dcz) (Ping timeout: 245 seconds)
[23:25:50] *** Quits: Ilyu (~quassel@166.215.82.79.rev.sfr.net) (Ping timeout: 265 seconds)
[23:26:08] *** Joins: Ilyu (~quassel@212.102.57.87)
[23:27:33] *** Joins: ur5us (~ur5us@2406:e002:6c33:6d01:90c2:1bd2:83db:98)
[23:37:16] *** Quits: james_lavin (~jameslavi@ool-457981b2.dyn.optonline.net) (Ping timeout: 268 seconds)
[23:46:12] *** Quits: hexology (~hexology@user/hexology) (Quit: hex on you ...)
[23:51:04] *** Joins: james_lavin (~jameslavi@ool-457981b2.dyn.optonline.net)
[23:55:37] *** Quits: james_lavin (~jameslavi@ool-457981b2.dyn.optonline.net) (Ping timeout: 252 seconds)
