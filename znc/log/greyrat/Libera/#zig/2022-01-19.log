[00:00:15] <andrewrk> freshcoffee, how did you do the sampling?
[00:00:32] <andrewrk> that seems like a nice trick
[00:00:49] <freshcoffee> by samples I mean just looking at the log files from drone
[00:00:56] <freshcoffee> failures
[00:01:11] <andrewrk> oh. I didn't see that information
[00:02:01] <freshcoffee> (edited to clarify in PR commment)
[00:02:09] <andrewrk> oh! it's up there. I forgot about that
[00:02:43] <andrewrk> ahhh right because it printed "1078 passed; 4 skipped; 1 failed."
[00:02:52] <andrewrk> my goodness. I'm the one who coded this and I forgot how it worked
[00:03:09] <andrewrk> the answer was just in the logs the whole time
[00:03:33] <freshcoffee> also we are a bit lucky. there's a 5 MB log limit with drone. Glad the "download log file" falls within that size; a TODO for me is to find and fix that stupid limit.
[00:03:52] <andrewrk> oh I fixed a related issue recently that made the logs much smaller
[00:06:03] <freshcoffee> yeah for test failures, I pretty much dumb it down to... download log, jump to end, backwards search for FAIL a few times :)
[00:08:25] *** Joins: ur5us (~ur5us@2406:e002:6d58:d101:9d9f:f6f8:55dd:d1e2)
[00:12:57] *** Joins: shimonaga (~shimonaga@199.58.81.203)
[00:12:58] *** Quits: shimonag1 (~shimonaga@199.58.81.203) (Read error: Connection reset by peer)
[00:14:40] <ifreund> it would be nice if the failures were repeated at the end of the run to make them easier to find
[00:16:12] *** Quits: chgr (~ek@nat-91-137-25-18.net.encoline.de) (Quit: WeeChat 3.3)
[00:16:24] *** Quits: andrzejku (~andrzejku@45-11-60-125.ip4.greenlan.pl) (Read error: Connection reset by peer)
[00:17:00] *** Joins: guest256 (~guest256@137-202-39-46.usuarios.innovasur.com)
[00:19:20] *** Joins: rgrinberg (~textual@2806:101e:7:2b:e402:caf0:4534:e84a)
[00:20:59] *** Quits: notzmv (~zmv@user/notzmv) (Ping timeout: 268 seconds)
[00:28:27] *** Quits: guest256 (~guest256@137-202-39-46.usuarios.innovasur.com) (Quit: Client closed)
[00:28:48] *** Joins: guest256 (~guest256@137-202-39-46.usuarios.innovasur.com)
[00:33:26] *** Joins: shimonag1 (~shimonaga@199.58.81.203)
[00:33:26] *** Quits: shimonaga (~shimonaga@199.58.81.203) (Read error: Connection reset by peer)
[00:36:09] *** Joins: andrzejku (~andrzejku@45-11-60-125.ip4.greenlan.pl)
[00:44:30] *** Quits: rgrinberg (~textual@2806:101e:7:2b:e402:caf0:4534:e84a) (Remote host closed the connection)
[00:45:36] *** Joins: rgrinberg (~textual@2806:101e:7:2b:e402:caf0:4534:e84a)
[00:45:39] *** Quits: andrzejku (~andrzejku@45-11-60-125.ip4.greenlan.pl) (Read error: Connection reset by peer)
[00:50:34] *** Joins: frmdstryr (~jrm@172.58.203.56)
[00:54:03] *** Joins: shimonaga (~shimonaga@199.58.81.203)
[00:54:03] *** Quits: shimonag1 (~shimonaga@199.58.81.203) (Read error: Connection reset by peer)
[01:07:12] *** Quits: guest256 (~guest256@137-202-39-46.usuarios.innovasur.com) (Quit: Client closed)
[01:07:37] *** Joins: Kingsquee (~Kingsquee@2001:569:53a3:da00:6a82:c9cc:ce7:ddd6)
[01:10:02] *** Joins: h4ze (~haze@2603-7000-a300-1741-3c35-4a55-177d-d297.res6.spectrum.com)
[01:10:17] *** Quits: haze (~haze@cpe-68-174-143-88.nyc.res.rr.com) (Ping timeout: 240 seconds)
[01:10:17] *** h4ze is now known as haze
[01:13:55] *** Joins: MajorBiscuit (~MajorBisc@2a02:a461:129d:1:6d4c:38a4:18b7:4b48)
[01:32:43] *** Quits: MajorBiscuit (~MajorBisc@2a02:a461:129d:1:6d4c:38a4:18b7:4b48) (Quit: WeeChat 3.3)
[01:34:44] <da_lorax> How do I get tests in included files to run?
[01:36:51] *** Joins: shimonag1 (~shimonaga@199.58.81.203)
[01:36:51] *** Quits: shimonaga (~shimonaga@199.58.81.203) (Read error: Connection reset by peer)
[01:39:01] <freshcoffee> take a peek at lib/std/io.zig bottom `test {}` block. Use `_ = ...;` and either with an import or the const value of another import
[01:39:26] <freshcoffee> s/value/result/
[01:39:52] <Arnavion> or   std.testing.refAllDecls(@This());
[01:46:46] *** Quits: freshcoffee (~fresh@user/freshcoffee) (Quit: WeeChat 3.0.1)
[01:49:29] *** Quits: rgrinberg (~textual@2806:101e:7:2b:e402:caf0:4534:e84a) (Quit: My MacBook has gone to sleep. ZZZzzz…)
[01:52:03] *** Quits: neocron (~NeoCron@p200300c4cf1b4400f695d81d4d068b5c.dip0.t-ipconnect.de) (Quit: Leaving)
[01:52:33] *** Quits: dbe (~dbe@c188-149-52-217.bredband.tele2.se) (Ping timeout: 256 seconds)
[01:53:43] *** Joins: rgrinberg (~textual@2806:101e:7:2b:e402:caf0:4534:e84a)
[01:55:28] *** Joins: shimonaga (~shimonaga@199.58.81.203)
[01:55:28] *** Quits: shimonag1 (~shimonaga@199.58.81.203) (Read error: Connection reset by peer)
[01:56:32] *** Quits: ur5us (~ur5us@2406:e002:6d58:d101:9d9f:f6f8:55dd:d1e2) (Ping timeout: 240 seconds)
[02:05:46] *** Joins: shimonag1 (~shimonaga@199.58.81.203)
[02:05:46] *** Quits: shimonaga (~shimonaga@199.58.81.203) (Write error: Connection reset by peer)
[02:05:46] *** Joins: ur5us (~ur5us@2406:e002:6d58:d101:9d9f:f6f8:55dd:d1e2)
[02:09:31] *** Quits: shimonag1 (~shimonaga@199.58.81.203) (Read error: Connection reset by peer)
[02:10:45] *** Joins: shimonaga (~shimonaga@199.58.81.203)
[02:11:49] *** Quits: rgrinberg (~textual@2806:101e:7:2b:e402:caf0:4534:e84a) (Quit: My MacBook has gone to sleep. ZZZzzz…)
[02:12:31] *** Quits: Swahili (~Swahili@a95-94-208-187.cpe.netcabo.pt) (Quit: Leaving...)
[02:12:46] *** Joins: Swahili (~Swahili@a95-94-208-187.cpe.netcabo.pt)
[02:30:05] *** Joins: notzmv (~zmv@user/notzmv)
[02:31:00] *** Quits: ur5us (~ur5us@2406:e002:6d58:d101:9d9f:f6f8:55dd:d1e2) (Quit: Leaving)
[02:33:40] *** Joins: ur5us (~ur5us@2406:e002:6d58:d101:9d9f:f6f8:55dd:d1e2)
[02:35:15] *** Joins: shimonag1 (~shimonaga@199.58.81.203)
[02:35:15] *** Quits: shimonaga (~shimonaga@199.58.81.203) (Read error: Connection reset by peer)
[02:47:55] *** Quits: xackus_ (~xackus@185.15.0.3) (Ping timeout: 256 seconds)
[03:20:02] *** Quits: noeontheend (~noeonthee@207.237.194.194) (Ping timeout: 240 seconds)
[03:21:30] *** Joins: tsmanner (~tsmanner@pool-100-40-199-193.pghkny.fios.verizon.net)
[03:35:36] *** Joins: shimonaga (~shimonaga@199.58.81.203)
[03:35:37] *** Quits: shimonag1 (~shimonaga@199.58.81.203) (Read error: Connection reset by peer)
[03:48:36] *** Quits: ur5us (~ur5us@2406:e002:6d58:d101:9d9f:f6f8:55dd:d1e2) (Ping timeout: 250 seconds)
[03:52:03] *** Quits: livoreno (~livoreno@user/notzmv) (Read error: Connection reset by peer)
[03:57:06] *** Quits: jjido (~Denis@2a02:c7f:5c91:e700:14be:59d4:43c7:c828) (Quit: My MacBook Air has gone to sleep. ZZZzzz…)
[04:17:14] *** Joins: freshcoffee (~fresh@user/freshcoffee)
[04:19:03] *** Quits: fwg (~fwg@user/fwg) (Quit: .oO( zzZzZzz ...)
[04:29:15] *** Joins: fwg (~fwg@user/fwg)
[04:30:13] *** Joins: squeek502 (~squeek502@user/squeek502)
[04:36:02] *** Quits: waleee-cl (~waleee@2001:9b0:21d:fc00:398f:b003:b90d:acf4) (Ping timeout: 240 seconds)
[04:37:08] *** Quits: HyLian (~meron@48.red-79-147-15.dynamicip.rima-tde.net) (Ping timeout: 250 seconds)
[04:40:21] *** Joins: waleee-cl (~waleee@h-98-128-229-110.NA.cust.bahnhof.se)
[04:46:19] *** Joins: HyLian (~meron@224.red-81-44-84.dynamicip.rima-tde.net)
[04:58:23] *** Joins: qaph (~weechat@user/qaph)
[05:01:05] *** Quits: kron (~weechat@user/qaph) (Ping timeout: 256 seconds)
[05:01:07] *** qaph is now known as kron
[05:01:54] *** Joins: ur5us (~ur5us@203.86.198.200)
[05:05:32] *** Joins: nektro (~meg@75-164-170-164.ptld.qwest.net)
[05:29:55] *** Quits: fwg (~fwg@user/fwg) (Quit: .oO( zzZzZzz ...)
[05:34:48] *** Quits: waleee-cl (~waleee@h-98-128-229-110.NA.cust.bahnhof.se) (Remote host closed the connection)
[05:35:13] *** Joins: waleee-cl (~waleee@2001:9b0:21d:fc00:398f:b003:b90d:acf4)
[05:46:51] *** Joins: penguino (~mrpenguin@user/mrpenguin)
[05:51:32] *** Quits: tsmanner (~tsmanner@pool-100-40-199-193.pghkny.fios.verizon.net) (Quit: tsmanner)
[05:51:55] *** Joins: tsmanner (~tsmanner@pool-100-40-199-193.pghkny.fios.verizon.net)
[05:55:34] *** Quits: neurocyte0917090 (~neurocyte@user/neurocyte) (Ping timeout: 250 seconds)
[05:57:04] *** Quits: waleee-cl (~waleee@2001:9b0:21d:fc00:398f:b003:b90d:acf4) (Ping timeout: 268 seconds)
[05:59:09] *** Joins: rgrinberg (~textual@2806:101e:7:2b:e402:caf0:4534:e84a)
[06:05:36] *** Quits: pretty_dumm_guy (trottel@gateway/vpn/protonvpn/prettydummguy/x-88029655) (Quit: WeeChat 3.4)
[06:06:01] *** Joins: fwg (~fwg@user/fwg)
[06:08:35] *** Quits: rgrinberg (~textual@2806:101e:7:2b:e402:caf0:4534:e84a) (Read error: Connection reset by peer)
[06:10:00] *** Joins: rgrinberg (~textual@2806:101e:7:2b:e402:caf0:4534:e84a)
[06:24:22] *** Quits: Swahili (~Swahili@a95-94-208-187.cpe.netcabo.pt) (Remote host closed the connection)
[06:24:54] *** Joins: Swahili (~Swahili@a95-94-208-187.cpe.netcabo.pt)
[06:27:46] *** Quits: Evo2 (~hastings@aj149242.dynamic.ppp.asahi-net.or.jp) (Remote host closed the connection)
[06:31:56] *** Joins: Evo2 (~hastings@aj149242.dynamic.ppp.asahi-net.or.jp)
[06:34:08] *** Quits: amk (~amk@109.255.169.126) (Ping timeout: 250 seconds)
[06:36:44] *** Joins: amk (~amk@109.255.169.126)
[07:04:47] *** Quits: nyah (~nyah@94.6.71.219) (Ping timeout: 256 seconds)
[07:05:42] *** Quits: fwg (~fwg@user/fwg) (Quit: .oO( zzZzZzz ...)
[07:05:45] *** Quits: nich04 (~nicholaus@2607:fb90:e54c:9133:f8e0:5d8a:0:7ca) (Remote host closed the connection)
[07:09:29] *** Quits: arkurious (~arkurious@user/arkurious) (Quit: Leaving)
[07:35:45] *** Quits: Evo2 (~hastings@aj149242.dynamic.ppp.asahi-net.or.jp) (Remote host closed the connection)
[07:36:07] *** Joins: Evo2 (~hastings@aj149242.dynamic.ppp.asahi-net.or.jp)
[07:44:18] *** Joins: fwg (~fwg@user/fwg)
[07:56:21] *** Joins: postmodern (~postmoder@user/postmodern)
[07:56:49] *** Joins: Gustavo6046 (~Gustavo60@user/gustavo6046)
[07:57:21] <postmodern> hello, i was wondering whether zig supports, or will support, compiling down to C? I saw this issue and some discussion about this feature, but can't find anything else? https://github.com/ziglang/zig/issues/3772
[07:58:49] *** Quits: rgrinberg (~textual@2806:101e:7:2b:e402:caf0:4534:e84a) (Quit: My MacBook has gone to sleep. ZZZzzz…)
[08:09:01] <andrewrk> postmodern, yes, you can try it today with the `-ofmt=c` flag. however, be warned that this backend is failing a majority of behavior tests at the moment, so only very trivial programs will work
[08:11:32] <postmodern> andrewrk, is that a `zig build` or `zig build-lib` option?
[08:12:04] <postmodern> andrewrk, or do i have to install zig from git in order to get that feature?
[08:12:55] *** Quits: terinjokes (~terinjoke@2604:a880:2:d0::227b:f001) (Quit: ZNC 1.8.2 - https://znc.in)
[08:13:31] *** Joins: terinjokes (~terinjoke@2604:a880:2:d0::227b:f001)
[08:14:50] *** Joins: rgrinberg (~textual@2806:101e:7:2b:e402:caf0:4534:e84a)
[08:16:34] <nektro> its a zig-exe/lib/obj feature, but as he mentioned it won't work for most cases as its part of the self hosted compiler which is still being worked on
[08:17:31] <andrewrk> postmodern, `zig build-lib`. looks like there is not yet a `zig build` API to enable it but that's just an oversight. I'll add it now
[08:20:08] <postmodern> hmm yeah, `zig build-lib -ofmt=c src/main.zig` segfaulted 
[08:20:53] <andrewrk> postmodern, to answer your other question, in zig 0.9.0 it was even less further along. if you want to experiment with it, certainly you will want a master build. you can find up-to-date master builds on ziglang.org/download
[08:21:38] <andrewrk> I suggest to start with `export fn empty() void {}` and slowly add things. you will quickly run into the boundaries of what is working.
[08:23:52] <andrewrk> 310/1078 (29%) of the behavior tests are passing today. this number is going up pretty quickly with each passing week however
[08:25:06] <postmodern> cool will keep an eye on this. compiling down to C would allow pure-C projects to transition to Zig in a piece-meal fashion, while still releasing pure-C source tarballs that wouldn't require end-users install the zig compiler.
[08:27:43] <andrewrk> it could possibly help with that use case, however, note that the C code that Zig lowers to is target-dependent
[08:28:06] <andrewrk> for example if you do something like this in zig: `if (@sizeOf(usize) == 4) foo() else bar();`
[08:28:21] <andrewrk> then your C code will contain simply a call to `foo()` or `bar()` and the conditional compilation logic will be gone
[08:28:59] <andrewrk> so your generated .c code would have similar downsides as compiling to machine code directly
[08:42:20] *** Quits: notzmv (~zmv@user/notzmv) (Ping timeout: 268 seconds)
[08:44:03] *** Quits: fwg (~fwg@user/fwg) (Quit: .oO( zzZzZzz ...)
[08:50:45] *** Quits: amk (~amk@109.255.169.126) (Ping timeout: 256 seconds)
[08:51:51] *** Joins: amk (~amk@109.255.169.126)
[08:53:26] *** Quits: ur5us (~ur5us@203.86.198.200) (Ping timeout: 268 seconds)
[09:20:02] *** Joins: anparra[m] (~anparrama@2001:470:69fc:105::1:6826)
[09:20:49] *** Joins: fwg (~fwg@user/fwg)
[09:31:03] *** Joins: phaleth (~user@user/phaleth)
[09:32:35] *** Quits: penguino (~mrpenguin@user/mrpenguin) (Quit: penguino)
[09:50:12] *** Joins: hiljusti (~hiljusti@2601:600:c681:23b0:960b:7cc3:3849:e69b)
[10:20:26] *** Quits: fwg (~fwg@user/fwg) (Quit: .oO( zzZzZzz ...)
[10:23:32] *** Quits: mountaingoat (~mountaing@user/mountaingoat) (Ping timeout: 240 seconds)
[10:24:08] *** Joins: mountaingoat (~mountaing@user/mountaingoat)
[10:29:46] *** Joins: skrzyp (~skrzyp@skrzyp.net)
[10:50:19] *** Joins: chgr (~ek@nat-91-137-25-18.net.encoline.de)
[10:54:23] *** Quits: chgr (~ek@nat-91-137-25-18.net.encoline.de) (Client Quit)
[11:15:21] *** Joins: MajorBiscuit (~MajorBisc@86-88-79-148.fixed.kpn.net)
[11:15:23] *** Quits: MajorBiscuit (~MajorBisc@86-88-79-148.fixed.kpn.net) (Client Quit)
[11:15:39] *** Joins: MajorBiscuit (~MajorBisc@86-88-79-148.fixed.kpn.net)
[11:16:16] *** Joins: notzmv (~zmv@user/notzmv)
[11:21:36] *** Joins: jjido (~Denis@2a02:c7f:5c91:e700:14be:59d4:43c7:c828)
[11:29:50] *** Joins: factor7 (~factor@c-73-68-120-166.hsd1.ma.comcast.net)
[11:31:50] *** Quits: factor (~factor@c-73-68-120-166.hsd1.ma.comcast.net) (Ping timeout: 250 seconds)
[11:31:50] *** factor7 is now known as factor
[11:33:38] *** Joins: ur5us (~ur5us@203.86.198.200)
[11:35:07] *** Quits: rgrinberg (~textual@2806:101e:7:2b:e402:caf0:4534:e84a) (Quit: My MacBook has gone to sleep. ZZZzzz…)
[11:49:09] *** Joins: andrzejku (~andrzejku@45-11-60-125.ip4.greenlan.pl)
[11:55:48] *** Joins: Major_Biscuit (~MajorBisc@c-001-018-021.client.tudelft.eduvpn.nl)
[11:57:49] *** Joins: fwg (~fwg@user/fwg)
[11:58:53] *** Quits: MajorBiscuit (~MajorBisc@86-88-79-148.fixed.kpn.net) (Ping timeout: 256 seconds)
[12:02:17] *** Quits: hiljusti (~hiljusti@2601:600:c681:23b0:960b:7cc3:3849:e69b) (Ping timeout: 240 seconds)
[12:02:37] *** Quits: ur5us (~ur5us@203.86.198.200) (Ping timeout: 240 seconds)
[12:13:29] *** Joins: hiljusti (~hiljusti@2601:600:c681:23b0:960b:7cc3:3849:e69b)
[12:13:32] *** Quits: nektro (~meg@75-164-170-164.ptld.qwest.net) (Ping timeout: 240 seconds)
[12:23:20] <da_lorax> How do I cast a buffer slice to an integer with a potentially non-native endianness? I'm tryna speak a protocol that's receiving a 4 byte header and need to get the second 2 bytes interpreted as a big-endian u16
[12:27:59] <ikskuh> std.mem.{read,write}IntLittle
[12:28:01] <ikskuh> std.mem.{read,write}IntBig
[12:28:25] <ikskuh> same if you have a reader, you can use readIntLittle(u16) to get a 16 bit unsigned integer, little endian byte order
[12:28:48] <Arnavion> or   @as(u16, buf[2]) << 8 | @as(u16, buf[3])
[12:29:11] <ikskuh> Arnavion: please use the readIntLittle functions for this, they convey intent :)
[12:30:11] <Arnavion> If you have a Reader, yes
[12:30:30] <ikskuh> you can just use the functions from std.mem, those take arrays
[12:31:07] <ikskuh> (brb)
[12:32:42] <Arnavion> Yes, though you'll need to construct a new [_]u8{ buf[2], buf[3] } first
[12:33:23] <Arnavion> Ah, readIntSlice removes the need for that
[12:36:19] <da_lorax> sweet thanks :)
[12:36:52] <luuk> Arnavion, you can just do buf[2..4]. When the length is comptime known it creates a pointer to an array. 
[12:38:10] <luuk> So if you dereference that, you'll get exactly what you need: [2]u8
[12:39:16] <Arnavion> Indeed, TIL
[12:51:40] *** Quits: jjido (~Denis@2a02:c7f:5c91:e700:14be:59d4:43c7:c828) (Quit: My MacBook Air has gone to sleep. ZZZzzz…)
[13:21:51] *** Quits: Gustavo6046 (~Gustavo60@user/gustavo6046) (Quit: Leaving)
[13:30:56] *** Quits: hiljusti (~hiljusti@2601:600:c681:23b0:960b:7cc3:3849:e69b) (Ping timeout: 268 seconds)
[13:31:26] *** Joins: nicholaus04 (~nicholaus@2607:fb90:e54c:9133:f8e0:5d8a:0:7ca)
[13:39:32] *** Quits: frmdstryr (~jrm@172.58.203.56) (Ping timeout: 240 seconds)
[13:51:02] *** Joins: pkap (~pkap@185.213.155.252)
[13:55:27] *** Joins: nektro (~meg@75-164-170-164.ptld.qwest.net)
[14:07:27] *** Quits: nektro (~meg@75-164-170-164.ptld.qwest.net) (Quit: WeeChat 3.1)
[14:17:55] *** Quits: Swahili (~Swahili@a95-94-208-187.cpe.netcabo.pt) (Remote host closed the connection)
[14:19:14] *** Joins: Swahili (~Swahili@a95-94-208-187.cpe.netcabo.pt)
[14:21:31] *** Joins: wib_jonas (~wib_jonas@business-37-191-60-209.business.broadband.hu)
[14:24:36] *** Quits: af (~af@awalgarg.me) (Remote host closed the connection)
[14:24:58] *** Joins: af (~af@awalgarg.me)
[14:39:31] *** Quits: Swahili (~Swahili@a95-94-208-187.cpe.netcabo.pt) (Quit: Leaving...)
[14:39:44] *** Joins: Swahili (~Swahili@a95-94-208-187.cpe.netcabo.pt)
[14:47:14] *** Quits: andrzejku (~andrzejku@45-11-60-125.ip4.greenlan.pl) (Read error: Connection reset by peer)
[15:02:16] *** Quits: gxt (~gxt@gateway/tor-sasl/gxt) (Remote host closed the connection)
[15:06:32] *** Joins: gxt (~gxt@gateway/tor-sasl/gxt)
[15:07:43] *** Joins: andrzejku (~andrzejku@45-11-60-125.ip4.greenlan.pl)
[15:17:23] *** Quits: Kingsquee (~Kingsquee@2001:569:53a3:da00:6a82:c9cc:ce7:ddd6) ()
[16:12:41] *** Quits: greyrat (~greyrat@ip202.ip-51-178-215.eu) (Bye)
[16:13:02] *** Joins: greyrat_ (~greyrat@ip202.ip-51-178-215.eu)
[16:13:03] *** Joins: Bonstra_ (~Bonstra@val.bonstra.fr.eu.org)
[16:13:36] *** Joins: rubin55_ (sid175221@id-175221.hampstead.irccloud.com)
[16:14:23] *** Joins: Nixx_ (~quassel@bulbasaur.sjorsgielen.nl)
[16:14:26] *** Joins: jcmoyer_ (~jcmoyer@user/jcmoyer)
[16:14:32] *** Joins: comrad_ (~quassel@holarse/comrad)
[16:14:32] *** Joins: nich04 (~nicholaus@2607:fb90:e54c:9133:f8e0:5d8a:0:7ca)
[16:15:02] *** Joins: rektide_ (~rektide@eldergods.com)
[16:15:04] *** Joins: greaser|q (greaser@antihype.space)
[16:15:06] *** Joins: dostoyev1ky2 (~sck@user/dostoyevsky2)
[16:15:16] *** Joins: noracodes_ (~quassel@2604:a880:2:d0::2299:a001)
[16:15:21] *** Joins: perro_ (~perro@072-191-245-069.res.spectrum.com)
[16:15:23] *** Joins: Pistahh_ (~pistahh@user/pistahh)
[16:15:55] *** Joins: spacehare (~kiedtl@kisslinux/kiedtl)
[16:16:06] *** Quits: Bonstra (~Bonstra@val.bonstra.fr.eu.org) (Ping timeout: 240 seconds)
[16:16:06] *** Quits: lqd (uid15826@id-15826.helmsley.irccloud.com) (Ping timeout: 240 seconds)
[16:16:06] *** Quits: greyrat (~greyrat@ip202.ip-51-178-215.eu) (Ping timeout: 240 seconds)
[16:16:06] *** Quits: errebino (~rbino@rbino.com) (Ping timeout: 240 seconds)
[16:16:06] *** Quits: koolazer (~koo@user/koolazer) (Ping timeout: 240 seconds)
[16:16:06] *** Quits: dostoyevsky2 (~sck@user/dostoyevsky2) (Ping timeout: 240 seconds)
[16:16:06] *** Quits: rektide (~rektide@eldergods.com) (Ping timeout: 240 seconds)
[16:16:06] *** Quits: nicholaus04 (~nicholaus@2607:fb90:e54c:9133:f8e0:5d8a:0:7ca) (Ping timeout: 240 seconds)
[16:16:06] *** Quits: torque (~tachyon@user/torque) (Ping timeout: 240 seconds)
[16:16:06] *** Quits: cr1901 (~cr1901@2601:8d:8600:911:51a1:26ce:1709:19d8) (Ping timeout: 240 seconds)
[16:16:06] *** Quits: lemmi (~lemmi@user/lemmi) (Ping timeout: 240 seconds)
[16:16:07] *** Quits: anthon (~Thunderbi@p2e52aa21.dip0.t-ipconnect.de) (Ping timeout: 240 seconds)
[16:16:07] *** Quits: noracodes (~quassel@2604:a880:2:d0::2299:a001) (Ping timeout: 240 seconds)
[16:16:07] *** Quits: Nixx (~quassel@bulbasaur.sjorsgielen.nl) (Ping timeout: 240 seconds)
[16:16:07] *** Quits: GreaseMonkey (greaser@user/greasemonkey) (Ping timeout: 240 seconds)
[16:16:07] *** Quits: comrad (~quassel@holarse/comrad) (Ping timeout: 240 seconds)
[16:16:07] *** Quits: dbuckley (~dbuckley@2601:182:c77f:c13b:ae1f:6bff:fe6c:d455) (Ping timeout: 240 seconds)
[16:16:07] *** Quits: boardwalk (~boardwalk@2605:a601:aac3:100:f22f:74ff:fe34:3e9b) (Ping timeout: 240 seconds)
[16:16:07] *** Quits: jcmoyer (~jcmoyer@user/jcmoyer) (Ping timeout: 240 seconds)
[16:16:07] *** Quits: rubin55 (sid175221@id-175221.hampstead.irccloud.com) (Ping timeout: 240 seconds)
[16:16:07] *** Quits: Pistahh (~pistahh@user/pistahh) (Ping timeout: 240 seconds)
[16:16:07] *** Quits: kiedtl (~kiedtl@kisslinux/kiedtl) (Ping timeout: 240 seconds)
[16:16:08] *** Quits: nullheroes1 (~nullheroe@168.235.66.22) (Ping timeout: 240 seconds)
[16:16:08] *** Quits: perro (~perro@072-191-245-069.res.spectrum.com) (Ping timeout: 240 seconds)
[16:16:08] *** Quits: FMJz_________ (sid279245@id-279245.lymington.irccloud.com) (Ping timeout: 240 seconds)
[16:16:08] *** Joins: boardwalk (~boardwalk@2605:a601:aac3:100:f22f:74ff:fe34:3e9b)
[16:16:13] *** lqd_ is now known as lqd
[16:16:13] *** anthon1 is now known as anthon
[16:16:15] *** rubin55_ is now known as rubin55
[16:16:21] *** Joins: dbuckley (~dbuckley@2601:182:c77f:c13b:ae1f:6bff:fe6c:d455)
[16:16:24] *** Joins: torque (~tachyon@user/torque)
[16:16:42] *** Joins: koolazer (~koo@user/koolazer)
[16:17:16] *** Joins: lemmi (~lemmi@user/lemmi)
[16:17:34] *** Server sets mode: +nt 
[16:18:55] *** Joins: nyah (~nyah@94.6.71.219)
[16:20:31] *** Quits: rektide_ (~rektide@eldergods.com) (Ping timeout: 256 seconds)
[16:21:23] *** Joins: rektide (~rektide@eldergods.com)
[16:23:01] *** Joins: nullheroes2 (~nullheroe@168.235.66.22)
[16:31:19] *** comrad_ is now known as comrad
[16:40:36] *** Joins: frmdstryr (~jrm@172.58.203.184)
[17:14:42] *** Quits: ofelas (~ofelas@ti0071a400-5026.bb.online.no) (Remote host closed the connection)
[17:18:24] *** cr1901_ is now known as cr1901
[17:22:44] *** Joins: ofelas (~ofelas@ti0071a400-5026.bb.online.no)
[17:26:46] *** Joins: alethkit[m] (~alethkitm@2001:470:69fc:105::1:6fa4)
[17:30:39] *** spacehare is now known as kiedtl
[17:43:21] *** Joins: ntgg (~ntgg@pool-108-52-163-71.phlapa.fios.verizon.net)
[17:44:13] <ntgg> why can't I iterate over an array field of a packed struct?
[17:45:38] <ntgg> it works fine if the struct isn't packed
[17:46:18] <ntgg> for (self.array_field) |element| {...} has an unable to eval constant expr compile error if it is packed
[17:53:42] <dutchie> looks like https://github.com/ziglang/zig/issues/10185. packed structs are a known area that stage1 has a lot of deficiencies in
[17:55:48] <ntgg> cool ty, I tried looking but for some reason i didn't find that one
[18:03:09] *** Quits: ntgg (~ntgg@pool-108-52-163-71.phlapa.fios.verizon.net) (Quit: WeeChat 3.4)
[18:14:21] *** Joins: arkurious (~arkurious@user/arkurious)
[18:22:06] *** Joins: pretty_dumm_guy (trottel@gateway/vpn/protonvpn/prettydummguy/x-88029655)
[18:44:09] *** Joins: noeontheend (~noeonthee@207.237.194.194)
[18:49:30] *** Quits: Sawzall (~Sawzall@96-82-249-149-static.hfc.comcastbusiness.net) (Read error: Connection reset by peer)
[18:49:45] *** Joins: Sawzall (~Sawzall@96-82-249-149-static.hfc.comcastbusiness.net)
[18:52:54] *** Quits: Sawzall (~Sawzall@96-82-249-149-static.hfc.comcastbusiness.net) (Read error: Connection reset by peer)
[18:53:11] *** Joins: Sawzall (~Sawzall@96-82-249-149-static.hfc.comcastbusiness.net)
[19:11:32] *** Quits: cr1901 (~cr1901@2601:8d:8600:911:9d70:8f88:7606:6eed) (Ping timeout: 240 seconds)
[19:11:37] *** Quits: noeontheend (~noeonthee@207.237.194.194) (Ping timeout: 240 seconds)
[19:14:45] *** Joins: petern (~petern@50.233.164.148)
[19:18:39] *** Quits: petern (~petern@50.233.164.148) (Quit: WeeChat 2.8)
[19:18:55] *** Quits: af (~af@awalgarg.me) (Remote host closed the connection)
[19:19:36] *** Joins: af (~af@awalgarg.me)
[19:20:09] *** Quits: pkap (~pkap@185.213.155.252) (Ping timeout: 256 seconds)
[19:24:07] *** Joins: petyer (~dayim@50.233.164.148)
[19:52:53] *** Quits: petyer (~dayim@50.233.164.148) (Quit: WeeChat 2.8)
[20:00:57] *** Joins: geranim0 (~geranim0@modemcable242.171-178-173.mc.videotron.ca)
[20:22:37] *** Joins: cr1901 (~cr1901@2601:8d:8600:911:c11c:2a92:dcdc:271a)
[20:25:51] *** Quits: wib_jonas (~wib_jonas@business-37-191-60-209.business.broadband.hu) (Quit: Client closed)
[20:39:44] *** Quits: nvmd (~nvmd@user/nvmd) (Quit: Later, nerds.)
[20:40:28] *** Joins: tenshi (~red@user/tenshi)
[20:48:41] *** Joins: rgrinberg (~textual@2806:101e:7:2b:e4cc:85d6:c1e8:8785)
[20:50:52] *** dostoyev1ky2 is now known as dostoyevsky2
[20:53:32] *** Quits: tomku (~tomku@user/tomku) (Ping timeout: 240 seconds)
[20:53:55] *** Joins: tomku (~tomku@user/tomku)
[21:06:07] *** Joins: xackus (~xackus@185.15.0.3)
[21:21:27] *** Quits: Major_Biscuit (~MajorBisc@c-001-018-021.client.tudelft.eduvpn.nl) (Ping timeout: 268 seconds)
[21:27:39] *** Joins: jjido (~Denis@2a02:c7f:5c91:e700:14be:59d4:43c7:c828)
[21:29:20] *** Joins: neurocyte0917090 (~neurocyte@user/neurocyte)
[21:44:26] *** Quits: kron (~weechat@user/qaph) (Quit: kron)
[22:32:48] *** Quits: andrzejku (~andrzejku@45-11-60-125.ip4.greenlan.pl) (Read error: Connection reset by peer)
[22:36:17] *** Joins: tcht (~tcht@ip-95-223-71-169.hsi16.unitymediagroup.de)
[22:37:11] *** Joins: chgr (~ek@nat-91-137-25-18.net.encoline.de)
[22:37:55] *** Quits: notzmv (~zmv@user/notzmv) (Ping timeout: 268 seconds)
[23:00:58] *** Joins: nektro (~meg@75-164-170-164.ptld.qwest.net)
[23:07:31] *** Quits: nektro (~meg@75-164-170-164.ptld.qwest.net) (Quit: WeeChat 3.1)
[23:07:51] *** Joins: nektro (~meg@75-164-170-164.ptld.qwest.net)
[23:22:31] *** Joins: ur5us (~ur5us@203.86.198.200)
[23:22:59] *** Quits: greaser|q (greaser@antihype.space) (Changing host)
[23:22:59] *** Joins: greaser|q (greaser@user/greasemonkey)
[23:23:02] *** greaser|q is now known as GreaseMonkey
[23:34:49] *** Joins: tane (~tane@user/tane)
[23:44:07] *** Quits: postmodern (~postmoder@user/postmodern) (Remote host closed the connection)
[23:59:57] *** Quits: phaleth (~user@user/phaleth) (Quit: phaleth)
