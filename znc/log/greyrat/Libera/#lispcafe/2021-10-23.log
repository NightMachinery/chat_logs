[00:03:30] *** Quits: waleee (~waleee@2001:9b0:216:8200:d457:9189:7843:1dbd) (Ping timeout: 258 seconds)
[00:05:37] *** Joins: waleee (~waleee@h-98-128-228-119.NA.cust.bahnhof.se)
[00:05:57] *** Joins: random-nick (~random-ni@87.116.165.220)
[00:07:22] <selwyn> dlisp sounds interesting
[00:17:25] <lisp123> pl: rank #2 on HN 
[00:17:43] <pl> yep
[00:17:51] <pl> a tiny bit of lisp advocacy done :0
[00:17:53] <pl> *:)
[00:18:42] <lisp123> :)
[00:27:04] <shka> https://media.moddb.com/images/members/4/3559/3558094/profile/Announce003.png what home computer is that?
[00:27:29] <selwyn> it looks very much like a bbc micro to me
[00:27:49] <selwyn> uh
[00:27:57] <selwyn> it definitely isnt
[00:28:14] <shka> it has cartridge slot
[00:28:55] *** Quits: makomo (~makomo@user/makomo) (Ping timeout: 265 seconds)
[00:29:07] <shka> my gut feeling was that it is some sort of atari, but it is not either 400 or 800
[00:31:22] <shka> it certainly is from either early 80s or late 70s
[00:32:21] <shka> but that's all i have 
[00:34:20] <pl> It's Tandy CoCo 2 or 3
[00:35:12] <pl> the red key on the keyboard being placed flush with the whites suggests CoCo 2
[00:35:25] <shka> ok, so it is not cartridge slot, but label
[00:35:37] <shka> https://upload.wikimedia.org/wikipedia/commons/7/7c/TRS-80_Color_Computer_2-64K.jpg
[00:35:50] <shka> pl: great, somehow i felt that you will know :P
[00:36:39] <pl> shka: nah, I found it on wikipedia
[00:37:01] <pl> and went first over 6502, then switched fo motorola 6800
[00:37:09] <shka> ok
[00:37:33] <selwyn> reminded of my plans to get ulisp working on the bbc micro
[00:37:38] <selwyn> and to connect it to the internet
[00:37:38] <shka> 1983, later then i would guess
[00:39:00] <shka> well, if commodore can do it
[00:39:44] <selwyn> they built modems for it to connect to 'prestel'
[00:40:41] <selwyn> https://www.youtube.com/watch?v=3Vw1NKuWMDY
[00:40:42] -ixelp- How to use a modem | What is a Modem | Prestel | Four Computer Buffs | 1985 - YouTube
[00:40:43] <selwyn> lol
[00:41:09] <selwyn> educating the people about bbs 
[00:41:34] <selwyn> 'let's log through to that' no-one says that anymore
[00:43:57] <selwyn> excellent 80s nerd cardigan aesthetic on display
[00:44:52] *** Quits: holycow (~rtaylor@69.172.184.139) (Remote host closed the connection)
[00:54:50] *** Quits: shka (~herr@83.175.151.96.piasta.pl) (Ping timeout: 260 seconds)
[01:01:25] *** Quits: manicennui (uid349235@tinside.irccloud.com) (*.net *.split)
[01:01:25] *** Quits: JSharp (sid4580@lymington.irccloud.com) (*.net *.split)
[01:01:26] *** Quits: mfiano (~mfiano@li1282-157.members.linode.com) (*.net *.split)
[01:01:26] *** Quits: sm2n (~sm2n@user/sm2n) (*.net *.split)
[01:01:26] *** Quits: mzan (~quassel@mail.asterisell.com) (*.net *.split)
[01:01:26] *** Quits: Lulu (~meow@vyos/developer/Lulu) (*.net *.split)
[01:01:59] *** Joins: Lulu (~meow@vyos/developer/Lulu)
[01:03:34] *** Joins: sm2n (~sm2n@user/sm2n)
[01:03:39] *** Joins: manicennui (uid349235@id-349235.tinside.irccloud.com)
[01:03:47] *** Joins: mzan (~quassel@mail.asterisell.com)
[01:29:55] *** Quits: vats (~vats@42.111.22.162) (Ping timeout: 260 seconds)
[01:43:49] *** Joins: vats (~vats@103.158.91.165)
[01:47:09] *** Quits: notzmv (~zmv@user/notzmv) (Remote host closed the connection)
[01:51:58] *** Joins: notzmv (~zmv@user/notzmv)
[01:56:52] *** Joins: Qwnavery (~Qwnavery@user/qwnavery)
[01:57:05] *** Quits: ec_ (~ec@gateway/tor-sasl/ec) (Quit: ec_)
[01:58:40] <hayley> https://www.youtube.com/watch?v=1YXu7vRJ5tA
[01:58:40] -ixelp- Pretending To See The Future (Remastered 2003) - YouTube
[02:09:32] *** Quits: Qwnavery (~Qwnavery@user/qwnavery) (Quit: WeeChat 3.3)
[02:13:18] *** Joins: mfiano (~mfiano@li1282-157.members.linode.com)
[02:16:08] *** Quits: lisp123 (~lisp123@5.30.23.247) (Remote host closed the connection)
[02:18:49] <mfiano> Ok it appears I now have a working Emacs config from scratch in 1200loc. I just have to take a day or two to upgrade my Orgmode section, as it is a bit dated, and I haven't been using it effectively because of that :)
[02:19:53] <selwyn> i would like to switch to a custom emacs configuration that i can maintain across all the devices i use
[02:20:08] <selwyn> but it seems like a massive effort
[02:20:50] <selwyn> happy just using portacle for now. i don't think i've ever found it lacking
[02:32:55] *** Mondenkind is now known as moon-child
[03:14:33] <hayley> IMO if someone complains we write slow software which is morally bad, we should complain back saying that writing buggy software which can't be reasoned about is only worse. :^)
[03:15:46] *** Quits: random-nick (~random-ni@87.116.165.220) (Quit: quit)
[03:17:36] *** Quits: vats (~vats@103.158.91.165) (Ping timeout: 265 seconds)
[03:17:45] <selwyn> who says that
[03:19:28] <hayley> This guy for example https://www.reddit.com/r/socialistprogrammers/comments/qdfj46/question_capitalism_made_me_a_programmer_need_an/hhm25pi/
[03:24:22] <hayley> Also I did the pointer meme for CL https://i.redd.it/b6eh7bb6a3v71.png
[03:26:44] <moon-child> 'cons cat' ðŸ¤”
[03:27:15] <hayley> ðŸ¤”
[03:27:55] *** Joins: vats (~vats@103.158.91.182)
[03:27:56] <hayley> When they put Smalltalk on a Xerox Alto (basically wirewrapped 74xx chips in a box) but clearly it was wasting hardware
[03:28:57] <hayley> Smalltalk on a RISC even had like 1/3 the transistors of the first SPARC chip.
[03:30:42] <hayley> It was even smaller than the CPU of the first AVR microcontroller according to https://en.wikipedia.org/wiki/Transistor_count#Microprocessors
[03:37:39] <gilberth> Well, was the RISC code as space efficient as the Alto microcode?
[03:38:31] <gilberth> I mean, the CADR is not particular fast, but is rather efficient on space and could get away with a simple compiler.
[03:38:33] <hayley> I don't know how I'd compare that. But given that the Alto interpreted Smalltalk bytecodes, and Smalltalk is stack-based whereas SOAR is register-based, it might be close.
[03:39:29] <gilberth> Well, my personal opinion is that you don't gain much with being stack based, anyway.
[03:40:20] <hayley> Another problem is that the Alto is 16-bit, and the SOAR 32-bit.
[03:40:47] <gilberth> I mean, you say (setq x (+ x 1)), in three-address code it's add r1, r1, #1, while stack based it's like LOAD SP[n]; CONST 1; ADD; POP SP[n], which is four instructions instead of one.
[03:41:25] <gilberth> hayley: 16-bit including tags?
[03:41:32] <hayley> Yes.
[03:41:47] <hayley> 15-bit fixnums (as specified in the Blue Book?)
[03:42:36] <gilberth> But: With sth register based, you still need to spill and unspill at times. But also that could be space efficient: See ldmia and stmia with ARM.
[03:42:57] <gilberth> hayley: Ouch, so only 32k objects?
[03:43:07] <hayley> Correct again.
[03:43:14] <gilberth> I wonder why so tight.
[03:43:57] <gilberth> But then that are object pointers and not word pointers, right?
[03:44:02] <hayley> Yes.
[03:44:16] <hayley> SOAR also used word pointers and ditched the indirection. More reasons we can't just compare.
[03:44:38] <moon-child> gilberth: 1) mutation is cherry-picked to make stacks look bad; 2) usually you would have a richer instruction set.  E.G. INC instead of CONST 1; ADD
[03:45:05] <moon-child> better argument against stack machines is they are harder to do ilp and harder to generate good code for
[03:45:28] <hayley> In any case, my argument was that they ran Smalltalk on such tiny machines, so they plainly couldn't waste hardware. Try to run Rust or Zig on an Alto.
[03:45:34] <gilberth> moon-child: Also for (setq a (+ b c)), you can't escape naming three addresses here.
[03:47:52] <gilberth> But then with a microcoded approach, there isn't much of a difference. The CADR needs something along the line of 20-30 micro instructions per macro instruction. And as I suppose they wouldn't have had build a parallel decoding for sources and an extra write-back stage, a three address ISA wouldn't be much faster. You win with a pipe line.
[03:48:23] <White_Flame> the 2 things stack machines are good for are 1) ease of implementation, and 2) intermediate forms for compilers
[03:48:32] <hayley> And, further, that self-imposed hardware and language austerity is worse because you make it a pain to prove program behaviour.
[03:49:04] <White_Flame> pretty much everything else about stack machines are downsides
[03:49:28] <gilberth> The CADR has a 1k word fast stack^WPDL, which is spilled and unspilled under microcode control. A bit like paging.
[03:49:30] *** Quits: rogersm (~rogersm@90.166.177.48) (Read error: Connection reset by peer)
[03:50:07] *** Joins: rogersm (~rogersm@90.166.177.48)
[03:50:40] <gilberth> It takes three microcode cycles to read from main memory, but only one to read from that PDL, or the "1k A mememory". Microcode instruction words are three address, and 48-bit wide.
[03:51:30] <gilberth> Those main memory read need to go through the MMU and page faults have to be checked for in microcode.
[03:52:12] <gilberth> It's a strange hybrid of a table and a TLB, reloaded under microcode control.
[03:54:16] <gilberth> White_Flame: HW implementation is not that simple. A five stage (instruction fetch, decode, register read, alu, write back) RISC pipeline isn't more complicated, if not even easier.
[03:56:06] <gilberth> But then the CADR has zero HW support for tagging. It's all in the microcode. It's a glorified byte code interpreter, really. Nothing especially interesting or innovative.
[04:00:34] *** Quits: waleee (~waleee@h-98-128-228-119.NA.cust.bahnhof.se) (Ping timeout: 260 seconds)
[04:01:18] <gilberth> Heh, in theory the CADR could JIT, as the micro code is writable. :-)
[04:01:44] <gilberth> Although there is "only" space for 16k.
[04:06:32] <hayley> idk, I really just could have linked https://plover.com/~mjd/misc/hbaker-archive/letters/CACM-DubiousAchievement.html and left it at that.
[04:06:50] <hayley> "Much more ominous is the current practise of demonstrating high speed on benchmarks with all run-time checks turned off. Because computer hardware (and sometimes software) is sold on the basis of execution speed, it is inevitable that every corner will be cut in achieving the maximum speed on these artificial benchmarks. The customer wants the same code that was benchmarked, so the code is delivered with all run-time checks disabled.
[04:06:50] <hayley> Unfortunately, the costs of recovering from a disaster due to array-bounds or pointer violations usually far exceeds the savings from the slightly increased execution performance."
[04:12:45] <pl> gilberth: pretty sure somewhere between CADR/LM-1/3600 there was support for "microcompilation"
[04:13:27] <gilberth> pl: Was the full Lisp supported?
[04:14:34] <pl> gilberth: I think so. I think it wasn't commonly used due to some subtle differences in resulting runtime behaviour ? or cost
[04:14:38] <pl> (memory etc.)
[04:15:35] <hayley> I'd be sorta worried about GCing microcode. Same problem as the Java code cache.
[04:15:41] *** Quits: Aurora_v_kosmose (~LispyLigh@user/lispylights) (Remote host closed the connection)
[04:16:12] *** Joins: Aurora_v_kosmose (~LispyLigh@user/lispylights)
[04:17:47] <pl> https://tumbleweed.nu/r/lm-3/uv/chinual.html#Compiled-Functions has mention of compiling user code into microcode
[04:46:49] <gilberth> Well, it doesn't say much. I always regarded this as kind of vaporware, as it says in some circumstances.
[04:57:18] <hayley> "SIMD is straightforward." Having tried to re-derive MOVMSKW with heisig, I disagree :)
[05:01:14] <gilberth> hayley: With the CADR this won't be much of a problem. There are no pointers in the instruction stream.
[05:01:30] <pl> hayley: re: GC-ing microcode - CADR gave us the meme of running lisp machines with GC disabled
[05:02:48] <hayley> "Zmacs always interested me, because it could leverage an interpreter and garbage collector for its problem semantics in a really useful way that is far more introspectable and dynamic than Emacs, but that ran on non-Turing/Von Neumann architecture"
[05:03:02] <hayley> Lispms were Von Neumann? What the fuck?
[05:03:11] <gilberth> Well, if you turn it on, while too much in use, it just halts when flipping. It somehow runs out of memory while GCing. This could be some emulator bug, but I doubt it, as it seems to be pretty accurate.
[05:03:47] <gilberth> And when in doubt Brad Parker looked at the schematics judging some of the sparse comments.
[05:04:51] <gilberth> This happens, when I load a 3MB file into ZWEI and then turn GC on.
[05:06:23] <pl> hayley: ummm, yes?
[05:06:35] * hayley doesn't like this guy now
[05:06:47] <pl> gilberth: CADR had shitty GC, yes
[05:06:56] <hayley> s/were/weren't
[05:07:06] <White_Flame> non-(Turing/Von Neumann) or (non-Turing)/Von Neumann?
[05:07:15] <pl> IIRC both LMI Lambda and Symbolics 3600 both had much better GC
[05:08:15] <gilberth> Well, it [the CADR] only can address 2M of RAN, which a 16M virtual address space.
[05:08:21] *** Joins: Qwnavery (~Qwnavery@user/qwnavery)
[05:08:56] <gilberth> pl: With time, I figure out what exactly the problem with the CADR GC is. I mean, it is slow, ok. But at times it also crashes.
[05:09:09] <gilberth> * with a
[05:11:08] <gilberth> Shouldn't be too hard to figure out. The machine halts entirely under microcode control, so one could look at the source code to see why.
[05:13:06] <hayley> lol, they say that if the application passes fuzz testing, then bounds checking isn't necessary.
[05:13:50] <hayley> Testing can prove the presence of bugs, but not the absence, or something.
[05:14:07] <gilberth> Is your university sponsored by the NSA to keep backdoors open?
[05:14:24] <hayley> No, this is that guy from r/socialistprogrammers. The other kind of nutjob there.
[05:15:20] <gilberth> He: Uses 'grep strcpy' and fuzz testing. NSA: Uses data and control flow analysis.
[05:15:49] <gilberth> I wonder, if they have the latter to somehow systematically find holes.
[05:16:07] <hayley> Probably.
[05:17:02] <hayley> That said, clang knows some stuff about memcpy-ing, Ada has SPARK or something, and on the other end, Cyclone imposes region management on C. So it's not like fancy analysis on C programs is new.
[05:17:14] <gilberth> I guess so. I am not particular interested in that topic, but once watched a presentation about following your input bits through the software from machine code even.
[05:17:56] * hayley adds "DFA on C code" to potential university final project list
[05:18:15] <gilberth> on?
[05:18:42] <hayley> Data-flow analysis on C code
[05:18:52] <gilberth> Some bugs also involve signed 32-bit -> unsigned 64-bit conversion.
[05:19:16] <hayley> It's also funny that they mention turning on bounds checks for suspicious code, when it should be the opposite.
[05:19:21] *** Joins: CrashTestDummy2 (~CrashTest@ool-ad02813b.dyn.optonline.net)
[05:19:27] <gilberth> You believe sth being less than zero and it creeps up elsewhere as huge and positive.
[05:19:56] <hayley> I like the culture in Rust where, if you need unsafe { }, then you write an informal proof of why it is safe before the code. But that isn't done too much, and the compiler doesn't yell at you for missing it.
[05:20:46] <gilberth> Well, you admit that we too have (safety 0). Which frankly I don't like.
[05:21:02] <hayley> Yeah, true.
[05:22:03] <hayley> But, say, I don't expect a compiler to prove that a compiled DFA will remain in bounds. Though I do data-flow analysis to eliminate checks myself, and the compiler could also do that...
[05:22:26] *** Quits: CrashTestDummy (~CrashTest@ool-ad02813b.dyn.optonline.net) (Ping timeout: 258 seconds)
[05:22:52] <hayley> SBCL also doesn't recognise hash table probing of the form (logand (1+ i) (1- length)) [where LENGTH is some 2^n, but it doesn't actually affect safety] either, and keeps bounds checks.
[05:24:03] <gilberth> But, we could do: <https://termbin.com/deh3s>
[05:24:26] <gilberth> I once did that because I got strange "bus errors" from CLX.
[05:25:13] <hayley> Still, not proving some code correct is the default, and so runtime checks should be the default, if you get an option.
[05:26:04] <hayley> They also assume that the user won't want to hack their program, which I don't believe.
[05:26:27] <gilberth> I say, they should always be the default, unless the compiler could prove otherwise.
[05:26:59] <semz> What does hack the program mean here?
[05:27:20] <hayley> Modifying it for one's needs, I guess.
[05:27:26] <gilberth> hayley: What shocks me is the sheer amount of security flaws in libpng for example. I mean, that image format is trivial.
[05:28:52] <gilberth> This is why I still feel more comfortable to spawn netpbm or djpeg for image file reading, if I don't have Lisp code for that format. At least it won't crash my application.
[05:29:22] <hayley> gilberth: To some extent, I could imagine that, if I have hacked a RE engine for a year, I could prove some more things about compiled REs than the compiler. But the difference isn't too huge.
[05:29:27] <gilberth> Wasn't the first rooting of the xbox with TTF files?
[05:30:21] <gilberth> hayley: Compilers cannot prove anything, and our Lisp compilers are that good at pulling things out of loops, like say clang or gcc.
[05:30:23] <hayley> Maybe?
[05:30:43] <hayley> They cannot prove anything, but they can prove enough things to be useful.
[05:31:32] <hayley> Same as with analysis of C programs. I told beach about what they said in class and he said it smelled undecidable. Fewer false positives/negatives are still better than none.
[05:31:39] <hayley> s/none/more
[05:31:41] <gilberth> Sure. What is trivial is (ldb (byte 32 0) (+ x y)) will be a 32-bit integer, if x and y are integers.
[05:32:02] <gilberth> And if you really mean modulo arithmetic, then say so.
[05:33:37] <gilberth> Integer overflows are IMHO more nasty and subtle than mere buffer overflows.
[05:34:04] <hayley> I heard a story about TLA+ wherein the engineers were designing the cache coherence protocol for the XBox chip or something, and an intern got bored and wrote a specification, then ran it through the model checker.
[05:34:37] <gilberth> This is because a C hacker is deceived. He writes a + b and means addition, which is not what he gets.
[05:34:51] <White_Flame> the major point of "proof" in a compiler is that one (optimized) form is completely equivalent to the original form of the code in a particular context
[05:34:58] <hayley> There was a bug in the model, which corresponded to a bug in hardware, which would have made them miss releasing the Xbox (how do you capitalise it again?) on M-x mas, or ship a machine which would crash after 5 hours or so. 
[05:36:12] <hayley> https://lamport.azurewebsites.net/tla/industrial-use.html Microsoft section. Apparently Chuck Thacker of Alto fame said that, which is amusing.
[05:36:13] -ixelp- Industrial Use of TLA+
[05:36:38] <gilberth> Well, Intel is kind of famous for HW bugs.
[05:36:56] <White_Flame> 2+2=5, for very large values of 2
[05:37:31] <gilberth> I rather choose rather small values of 5 :)
[05:37:39] <hayley> Also, notably, the IBM (Xbox 360 was still PowerPC) tests wouldn't have found the bug.
[05:42:32] * hayley wonders how she got into the "contradiction" of frequently using CL, one of the most dynamic languages ever made, and a model checker, which produces some of the most static programs ever made.
[05:46:36] <hayley> gilberth: Yeah, integer overflows suck. And e.g. Java and Rust don't actually handle them, despite handling buffer overflow, so it's seen as "too slow" most of the time.
[05:49:56] <gilberth> hayley: This is a hen and egg problem, as long as programmers don't demand fast HW support for overflow trapping, CPU manufacturers will spare those transistors. And does it really matter outside some loops which do say cryptographics or some form of blittering? An area at which you won't have overflows anyway.
[05:50:07] <hayley> Also true, yes.
[05:50:30] <gilberth> Our whole architectures are optimized for bandwidth, not speed.
[05:50:40] <hayley> IMO, like read barriers, they're "fast enough" most of the time. So some people will take the tradeoff and break the cycle.
[05:51:34] *** Quits: manicennui (uid349235@id-349235.tinside.irccloud.com) (Ping timeout: 258 seconds)
[05:51:41] <gilberth> Yep, and that really changed. I bet that on a i386 those read barriers would really hurt. I was surprised and need to update my idea of what is fast and what isn't.
[05:52:26] <hayley> ...though still, I am still designing the GC to avoid compaction most of the time, because having threads scanning all the heap to update references uses up memory bandwidth.
[05:53:15] <gilberth> Yes, and that approach will buy you long term latency.
[05:53:54] <hayley> On average, Immix considers copying 35% of the heap in 20% of GC cycles. Though, as they are "candidate blocks", does it actually move 35% of the heap?
[05:54:03] *** Joins: manicennui (uid349235@id-349235.tinside.irccloud.com)
[05:54:45] *** Quits: Psybur (~Psybur@mobile-166-170-29-82.mycingular.net) (Remote host closed the connection)
[05:55:13] <hayley> Oh, I misread, on average, candidate blocks are only 35% live, but they only present the volume of blocks and not how much of the heap that is.
[05:57:35] *** Quits: vats (~vats@103.158.91.182) (Ping timeout: 265 seconds)
[06:02:04] <hayley> Well, I guess it doesn't do much compacting, but I really need to know the maximum heap size and run length to make any real conclusions.
[06:02:49] *** Quits: manicennui (uid349235@id-349235.tinside.irccloud.com) (Ping timeout: 252 seconds)
[06:03:05] *** Joins: manicennui (uid349235@tinside.irccloud.com)
[06:21:38] *** Quits: Qwnavery (~Qwnavery@user/qwnavery) (Quit: WeeChat 3.3)
[06:35:02] * hayley gets an email "You seem to know a lot about garbage collection..."
[06:35:21] <hayley> "can you help me with a program for maths homework?" Sure, why not. I have been baited and possibly bamboozled.
[06:41:36] *** Joins: vats (~vats@103.158.91.248)
[06:56:09] <hayley> Instead, it has to do with the Python call stack overflowing because some expression parser is recursive. Fun.
[06:59:54] *** Joins: CrashTestDummy3 (~CrashTest@ool-ad02813b.dyn.optonline.net)
[07:03:19] *** Quits: CrashTestDummy2 (~CrashTest@ool-ad02813b.dyn.optonline.net) (Ping timeout: 252 seconds)
[07:07:53] <gilberth> Heah? I thought I knew C. When I say 'for (int k = (1,0); k < 1; (42,k++))' the compiler complains that 'k' might be uninitialized? Why?
[07:09:47] <White_Flame> depending on the revision of C, isn't it ill-defined to have the "int k" declaration inside the for loop?  or am I thinking of something else
[07:10:31] <semz> those were added in C99, but in C89 that wouldn't even compile
[07:10:44] <gilberth> That is "new" syntax for for. It's the same as { int k; for (...); }
[07:11:06] <gilberth> semz: I don't care about a C that is more than 30 years old.
[07:11:13] <semz> same
[07:11:39] <gilberth> But I found the issue, I jump into the body of that loop. My bad.
[07:12:17] <gilberth> So, again, gcc was smarter than I was.
[07:13:05] <semz> I love it when that happens. You're so close to filing a compiler bug and then you suddenly see it.
[07:14:19] <gilberth> I could as well say for (int k = (blah(),0); !k; k = (blup(),1))
[07:16:50] <gilberth> My use is like #define SAVE(x) for (int k = (push(x),0); !k; k=((x)=pop(),1)) You call then say SAVE(x) SAVE(y) <do something>;
[07:19:18] <hayley> Oh, and the expression parser is only used cause it's a damn pain to use the class constructors to make the same model expression.
[07:20:04] <gilberth> A poor man's with_blup(..) { ... } macro. But see: http://clim.rocks/gilbert/dynbind/with_open_file.c and the other examples there.
[07:22:26] *** Joins: semz_ (~none@user/semz)
[07:22:32] <gilberth> http://clim.rocks/gilbert/dynbind/dynbind.h and http://clim.rocks/gilbert/dynbind/fib_trace.c
[07:22:54] <hayley> Lovely, so I can't seem to make TensorFlow run deterministically (I set all the RNG seeds, still nothing). So my commentary in my report could be very wrong on a bad day.
[07:25:52] *** Quits: semz (~none@user/semz) (Ping timeout: 258 seconds)
[07:26:49] <hayley> Seriously, I'm supposed to present results for different neural network designs? It already takes five minutes to train one fucking NN, and I'm supposed to train FIVE? No way.
[07:35:17] * hayley re-reads her network design
[07:35:45] <hayley> Shouldn't be using sigmoid as the final activation for a regression problem, right? I mean, sigmoid is a probability-ish function, and we don't have probabilities.
[07:36:40] <hayley> That said, my results are probably biased towards 0, so maybe it works out.
[07:41:01] *** Quits: vats (~vats@103.158.91.248) (Ping timeout: 265 seconds)
[07:44:46] <hayley> Now, what's the middle name of Emery Berger (yes, I'm citing him too, sadly).
[07:45:05] <hayley> David. How come Google finds it, but I can't find it on any page?
[07:46:20] <gilberth> hayley: What's that with those middle names. Most Germans would be pretty embarrassed, when you would write their middle name.
[07:46:32] <hayley> APA citation format.
[07:46:43] <gilberth> Which is impolite.
[07:48:48] <gilberth> I mean, supposing I had a middle name, I would be pissed to see it anywhere.
[07:50:19] <hayley> Well, I cannot present multiple neural networks, cause it would take too damn long. So I've instead written that, because training is non-deterministic, we can't say that any models are really better than others without even more samples.
[07:53:52] <gilberth> What makes it non-deterministic?
[07:54:59] <hayley> That the training procedure relies on psuedo-randomness in some places. Say, stochastic gradient descent and simulated annealing randomly decide to make a big change or a small change.
[07:56:09] <hayley> Therefore, procedure A might perform better than B with one given seed, but worse with another. The only way to be sure, ironically, is to use statistics and more samples.
[07:58:50] <hayley> And, due to floating point being floating point, one parallel sum on one machine might associate the +s one way, and another sum on another machine associates another way, causing different errors too. This could be magnified if it affects the loss function.
[08:16:00] <gilberth> The CADR has only 4219 interned symbols.
[08:18:51] *** Joins: lisp123 (~lisp123@5.30.23.247)
[08:23:33] *** Quits: lisp123 (~lisp123@5.30.23.247) (Ping timeout: 265 seconds)
[08:37:47] <hayley> "Conclusion: 'Real stupidity beats artificial intelligence every time.'"
[09:18:45] *** Joins: Qwnavery (~Qwnavery@user/qwnavery)
[09:23:02] * hayley gets to write more BNF for the programming assignment. Yay!
[09:50:40] *** Joins: lotuseater (~user@p200300e7871bd300c158d62dc7544d08.dip0.t-ipconnect.de)
[10:08:20] <hayley> lotuseater: do you want to see peak C-nile performance
[10:10:24] *** Joins: waleee (~waleee@2001:9b0:216:8200:d457:9189:7843:1dbd)
[10:33:31] *** Joins: lisp123 (~lisp123@5.30.23.247)
[10:34:34] <lotuseater> Ã¶hm ..
[10:34:44] <lotuseater> sure hayley
[10:35:12] <hayley> https://www.reddit.com/r/socialistprogrammers/comments/qdfj46/question_capitalism_made_me_a_programmer_need_an/hhoyfbw/?context=1
[10:35:13] -ixelp- [Question] Capitalism Made Me a Programmer; Need an Exit Strategy : socialistprogrammers
[10:35:13] <lotuseater> and sorry I wasn't here for some days
[10:35:44] <hayley> "what about bounds checks, shouldn't you prove that it's safe" "nah just fuzz test it m8"
[10:37:06] <lotuseater> your comment makes sense :)
[10:37:12] <lotuseater> haha
[10:37:16] <hayley> lisp123 was looking for you BTW
[10:38:10] *** Quits: lisp123 (~lisp123@5.30.23.247) (Ping timeout: 260 seconds)
[10:39:03] <lotuseater> i can imagine
[10:39:18] <lotuseater> i was just in the other channels with the rotateq nick
[10:39:46] <lotuseater> from the working computer via portacle :)
[10:41:39] *** Joins: shka (~herr@83.175.151.96.piasta.pl)
[10:46:57] * hayley uploaded an image: (3KiB) < https://libera.ems.host/_matrix/media/r0/download/matrix.org/PdGbcyOXTkvmgPilgrwlqYuC/Screenshot_2021-10-02_14-10-11.png >
[10:50:40] <Qwnavery> howdy lotuseater 
[10:51:08] <lotuseater> howdy Qwnavery 
[10:51:32] <Qwnavery> don't pull a spiderman meme on me, I asked first lol
[10:51:50] <lotuseater> can i also download more cpu kernels?
[10:52:13] <hayley> So, with BNF, I have the problem that the language I'm specifying uses ( ) and I want repetition. So I get A ( (B ,)* B ) which looks dumb.
[10:52:14] <Qwnavery> print more ram, the guys with the punch cards did it back in the day :)
[10:52:46] <hayley> Now you're supposed to use quotes, which makes A "(" (B ",")* B ")", but then I use a quote elsewhere. So that looks like """ char+ """ which is also dumb.
[10:53:32] <Qwnavery> discord users i see.
[10:54:53] <hayley> So, for now I have A ( [B ,]* B ) where the () and , are typewriter text, and the others are italic. I guess it works?
[10:57:45] *** Quits: retropikzel (~retropikz@83-245-255-135-nat-p.elisa-mobile.fi) (Read error: Connection reset by peer)
[10:59:13] *** Joins: retropikzel (~retropikz@83-245-255-135-nat-p.elisa-mobile.fi)
[11:00:22] <lotuseater> Qwnavery: my presentation yesterday worked out well btw
[11:15:07] *** Quits: edgar-rft (~edgar-rft@HSI-KBW-109-193-249-223.hsi7.kabel-badenwuerttemberg.de) (Quit: Leaving)
[11:19:00] <gilberth> hayley: I like the version with quotes better.
[11:27:03] *** Joins: kakuhen (~kakuhen@user/kakuhen)
[11:27:17] <kakuhen> hello
[11:27:42] <gilberth> hayley: And I like B ("," B)* better than the other way around ;)
[11:27:54] <gilberth> kakuhen: Hello there!
[11:29:26] *** Joins: dave0 (~davezero@069.d.003.ncl.iprimus.net.au)
[11:29:47] <dave0> maw
[11:32:54] <lotuseater> ohai dave0 
[11:33:05] <dave0> hi lotuseater 
[11:35:38] *** Joins: hendursa1 (~weechat@user/hendursaga)
[11:38:45] *** Quits: hendursaga (~weechat@user/hendursaga) (Ping timeout: 276 seconds)
[11:39:54] *** Quits: hendursa1 (~weechat@user/hendursaga) (Remote host closed the connection)
[11:40:22] *** Joins: hendursa1 (~weechat@user/hendursaga)
[11:41:49] <Qwnavery> lotuseater: :D very good
[11:42:03] <lotuseater> hehe, a LaTeX package for simulating coffee stains :) https://ctan.org/pkg/coffeestains?lang=en
[11:57:24] <Qwnavery> Adding them manually has a lot more depth.
[11:57:45] <Qwnavery> You'd have to have a fancy printer to get a decent effect.
[11:58:32] <ck_> they probably don't taste great either
[11:58:35] <ck_> and such small portions
[11:58:54] *** Quits: retropikzel (~retropikz@83-245-255-135-nat-p.elisa-mobile.fi) (Ping timeout: 260 seconds)
[12:09:55] <lotuseater> :D
[12:11:15] <dave0> espresso is a small portion but so much flavour
[12:14:47] *** Joins: retropikzel (~retropikz@83-245-255-135-nat-p.elisa-mobile.fi)
[12:26:42] *** Quits: chiselfuse (~chiselfus@user/chiselfuse) (Remote host closed the connection)
[12:26:57] *** Joins: dec0d3r (~dec0d3r@2001:8003:480a:e00:e07:e7c3:7efc:ed0f)
[12:27:27] *** Joins: chiselfuse (~chiselfus@user/chiselfuse)
[12:29:27] *** Quits: dec0d3r (~dec0d3r@2001:8003:480a:e00:e07:e7c3:7efc:ed0f) (Remote host closed the connection)
[12:35:09] *** Joins: makomo (~makomo@user/makomo)
[12:38:38] *** Quits: hendursa1 (~weechat@user/hendursaga) (Remote host closed the connection)
[12:39:06] *** Joins: hendursa1 (~weechat@user/hendursaga)
[12:44:13] *** Quits: kakuhen (~kakuhen@user/kakuhen) (Quit: Leaving...)
[12:46:19] <Qwnavery> ck_: lol
[12:52:44] * moon-child wants to punch whomever designed opengl
[12:53:11] *** Quits: notzmv (~zmv@user/notzmv) (Ping timeout: 264 seconds)
[12:53:43] <contrapunctus> moon-child: as someone interested in making 3D games but with no OpenGL experience...why?
[12:54:48] <moon-child> in this case, because gl_FragCoord is not in NDC
[12:55:00] <gilberth> Wasn't it SGI who invented GL?
[12:56:35] *** Joins: random-nick (~random-ni@87.116.165.220)
[12:57:31] <moon-child> also because gl_FragCoord a pixel may have a coordinate like (0.5, 0.5)
[12:57:36] <dave0> hi gilberth !
[12:59:17] <moon-child> also because the origin is in the bottom left
[12:59:37] <moon-child> also because sometimes it uses a 0-1 coordinate system and sometimes a -1-1 coordinate system
[13:02:23] <X-Scale> gilberth: indeed
[13:02:58] <Qwnavery> was just reading the CLiki humor page and saw this: I got a chuckle or two https://www.cliki.net/The%20Dying%20Programmers
[13:03:16] <Qwnavery> Makes me wonder what happens to the python programmers?
[13:05:04] <lotuseater> moon-child: ^^
[13:08:00] <lotuseater> this was fun read
[13:17:11] *** Quits: cross (~cross@spitfire.i.gajendra.net) (Ping timeout: 245 seconds)
[13:17:18] *** Joins: kevingal (~quassel@2a02:8084:4140:f300:531:30e7:48f7:fc54)
[13:19:21] *** Joins: cross (~cross@spitfire.i.gajendra.net)
[13:21:31] *** Quits: kevingal (~quassel@2a02:8084:4140:f300:531:30e7:48f7:fc54) (Remote host closed the connection)
[13:46:29] *** Quits: Qwnavery (~Qwnavery@user/qwnavery) (Quit: WeeChat 3.3)
[13:55:33] *** Joins: makomo_ (~makomo@user/makomo)
[13:57:29] *** Quits: makomo (~makomo@user/makomo) (Ping timeout: 244 seconds)
[14:40:22] *** Quits: X-Scale (~ARM@83.223.233.104) (Ping timeout: 260 seconds)
[14:53:06] *** Joins: dra (~dra@2a04:4540:6413:be00:871:94a5:edea:7eee)
[14:53:10] <dra> Hello!
[15:02:47] *** Joins: notzmv (~zmv@user/notzmv)
[15:14:00] <lotuseater> hey dra
[15:14:32] <dra> Hey lotuseater.
[15:14:43] <pl> lotuseater: they badly handle an error in another thread and hang while looking alive
[15:19:49] <lotuseater> :D
[15:21:10] <lotuseater> dra: someone gave me the game ShenzenIO this week so I can get a bit more into assembly :) it's cool made up
[15:21:17] <SAL9000> they meet an actual python
[15:22:22] <lotuseater> and remember "Don't panic"
[15:23:23] <shka> python programmers don't die because there is no pip module for that
[15:23:40] <SAL9000> https://xkcd.com/353/
[15:23:40] -ixelp- xkcd: Python
[15:23:45] <SAL9000> they die when the antigravity module fails
[15:25:19] <shka> wanna hear me complaining about my job?
[15:25:30] <lotuseater> or when the autobahn module let's them crash in their CARs cause they don't have CDRs
[15:25:45] <lotuseater> shka: of course why not? :)
[15:27:23] <shka> so i am data engineering team lead
[15:27:56] <lotuseater> ok
[15:27:56] <shka> and there is a project to build data set based around Riot API responses
[15:28:04] <shka> which uses json 
[15:28:55] <shka> ML team wants to write it's own parser, and I intervene informing that we are gonna parse those API responses, and store it in the database
[15:29:02] <shka> like a normal person
[15:29:12] <shka> they still want to do it independently 
[15:30:05] <lotuseater> hmm
[15:30:27] <shka> so i explain that they will want to have it in a database anyway because they will likely will want to find matches of selected players, selected LoL champions and the likes, and it is more convenient and efficient to  simply use SQL for that 
[15:30:55] <shka> plus it is easier to interop when everyone uses the same data format
[15:30:58] <shka> so they agree
[15:31:09] <shka> which is great, and i am going on a vacation
[15:31:14] <dra> Oh no.
[15:31:40] <shka> after vacation i return, i see that the database and the API integration is now operational
[15:31:51] <shka> and ML team now writes parser 
[15:31:52] <shka> in C++
[15:32:00] <shka> because "C++ goes fasta!"
[15:32:18] <shka> fuck my job
[15:32:51] <shka> it is like talking to a brick wall
[15:33:52] <dra> lotuseater: Cool, I've never heard of that.
[15:33:59] <dra> lotuseater: Is it worth checking out?
[15:34:00] <lotuseater> i thought ML is as good for writing parsers as Haskell ;)
[15:34:07] <lotuseater> dra: yes it is
[15:34:15] <shka> machine learning, not modeling language :D
[15:34:51] <lotuseater> of course some idealizations but not too far from reality. you design simple circuits and program them with an assembly
[15:34:55] <lotuseater> shka: i know :D
[15:35:03] <shka> anyway, it is frustrating as fuck
[15:35:07] <dra> lotuseater: Ah, it's on gog.com. Very cool.
[15:35:16] <shka> to be in a leadership position, why having no leadership authority 
[15:35:18] <lotuseater> yeah money at a job isn't everything
[15:36:04] <lotuseater> dra: with a manual where it makes sense printing out for having near by (which i did yesterday)
[15:37:51] <dra> shka: Did they back up their "goes fasta" claim with data or are you the poor leader of a disorganized cargo cult? ;)
[15:38:06] <shka> i am not leader of ML team
[15:38:24] <lotuseater> shka: i know how frustrating it is dealing with narrow-minded people
[15:38:39] <shka> and If i could, i would fire all the ml team :P
[15:38:47] <dra> shka: Ah, now I get it.
[15:38:50] <lotuseater> "it doesn't work right, but it's fast!"
[15:38:56] <semz_> maybe that's why they don't listen :-)
[15:39:05] <shka> also
[15:39:11] *** semz_ is now known as semz
[15:39:24] <shka> it surely will make the API response arriving faster
[15:39:39] <shka> because C++ makes even remove APIs go fasta
[15:40:05] <shka> and obviously, whole process will be dominated by CPU time, and not IO wait :P
[15:40:19] <shka> *remote APIs
[15:41:13] <lotuseater> remove APIs :D
[15:41:41] *** Joins: makomo (~makomo@user/makomo)
[15:44:29] *** Joins: vats (~vats@103.158.91.248)
[15:44:37] * dra gets to write Vulkan code at work.
[15:44:47] <dra> Actually something that I enjoy. ;)
[15:46:48] <lotuseater> that's something like OpenGL, right?
[15:47:00] <lotuseater> or explain it to me :)
[15:47:00] <shka> yeah, but lower level
[15:47:17] <lotuseater> uii even more lower level o.O
[15:47:19] <shka> and making a simple triangle is rather complex process :D
[15:47:34] <pl> Vulkan matches the way the actual GPUs talk with the OS
[15:47:41] <lotuseater> cool
[15:47:48] <pl> OpenGL /used to/ match that, in ~1993 on SGI ;)
[15:47:50] <shka> i mean, the currenl API
[15:47:59] <shka> *current GPU
[15:48:19] <dra> Yes, Vulkan is like OpenGL without all the implicit state made explicit.
[15:48:27] <shka> OpenGL was low level in the same sense as C
[15:48:37] <pl> shka: yes, but I have doubts it will change much unless we suddenly end up in a world where GPU is handled by coprocessor instructions 
[15:49:01] <shka> seems unlikely 
[15:49:20] <lotuseater> dra: so perfect for you as i associate you with assembly :) when you told about your lisp in assembly
[15:49:25] <pl> shka: original LibGL and its glBegin/glPoint/etc stuff AFAIK matched the command pipeline of the SGI render hardware
[15:49:32] <shka> yes
[15:49:35] <shka> it did
[15:49:47] <shka> in the same way as C was tailored for PDP
[15:49:49] <pl> Vulkan is very interesting API design though
[15:49:58] <dra> lotuseater: It's at an abstraction level where I feel comfortable, yes.
[15:50:27] <pl> I actually considered mixing up Vulkan and io_uring to make ZFS userland api
[15:50:33] <lotuseater> i admire that
[15:50:48] <pl> ZFS already has channel programs (written in Lua)
[15:51:15] <pl> my idea was to expand what they would be capable of and do async API between them and userland :)
[15:51:47] <pl> to enable things like implementing custom storage on top of ZFS (a'la Lustre does)
[15:52:25] <lotuseater> dra: so something like I have to but on another level :)
[15:53:27] <lotuseater> *too
[15:53:34] <dra> lotuseater: It can be a curse. ;) I can't just take Lisp for granted and _not_ try to understand how it's bootstrapped.
[15:54:29] <lotuseater> oha
[15:55:32] <lotuseater> bootstrapped on von-neumann machines ;)
[15:56:49] <dra> In Lisp in Small Pieces, Queinniec writes "Lisp programmers have an innate urge to bootstrap" or something similar. Hits the nail on the head.
[15:57:09] <shka> l]m
[15:57:11] <shka> uh
[15:57:14] <lotuseater> I would like trying out the "Dyson Sphere Program" but maybe even the newer DELL isn't capable enough
[15:57:23] <dra> lotuseater: Yep, but how can I make my own wafers?
[15:57:23] <shka> lisp attracts people with certain thinking patterns
[15:57:48] <lotuseater> nah one can't make everything on his own :)
[15:59:50] <dra> lotuseater: Too true. :)
[16:00:29] <lotuseater> or discovering/understanding everything, making every physics experiment, proving all known maths theorems etc.
[16:01:32] <dra> "At Aperture Science we do all our science from scratch!" -- Cave Johnson, Portal 2
[16:02:11] <lotuseater> nice
[16:02:40] <lotuseater> https://www.youtube.com/watch?v=6i-nMWgBUp0
[16:02:40] -ixelp- Aperture Investment Opportunity #3: "Turrets" - YouTube
[16:03:11] <lotuseater> so many bullets!
[16:03:25] <SAL9000> "More bullet per bullet!"
[16:03:45] <shka> us military tried that
[16:04:07] <lotuseater> i like his US-american accent :)
[16:04:37] <shka> https://www.youtube.com/watch?v=gO4g8GNXYrY
[16:04:37] -ixelp- Project SALVO: M198 Duplex Ball Ammunition - YouTube
[16:04:50] <shka> here you go, 2 bullets, per bullet
[16:04:55] <shka> which is 100% more bullets
[16:05:00] <shka> or something
[16:05:02] <pl> dra: there's a guy that started making his own ICs in garage :D
[16:05:40] <dra> pl: That's my problem. I don't have a garage!
[16:05:49] <pl> :D
[16:06:52] <lotuseater> or bringing everything to a whole other level and using the silicium for creating life :D
[16:07:30] <dra> M-x butterfly
[16:07:36] <dra> https://xkcd.com/378/
[16:07:36] -ixelp- xkcd: Real Programmers
[16:07:55] <lotuseater> oh that command i just run very rare
[16:09:44] <selwyn> there is a guy building a quantum computer in his garage
[16:09:48] <selwyn> which is a real heroic effort
[16:10:24] <lotuseater> cool thing
[16:10:32] <lotuseater> much comes together
[16:12:03] <selwyn> i am not really sure why, but lisp is used more than one would expect in the qc space
[16:12:57] <shka> perhaps over-represented among brainy programmers
[16:13:21] <lotuseater> dra: there's a newer interview with Donald Knuth and at one sentence he said "when i wrote my first program i didn't know something like assembly existed so i simply wrote in machine language" :D
[16:13:24] <shka> i mean, lisp is
[16:13:54] <lotuseater> selwyn: you don't know why? cause of it's metaprogramming capabilities and flexibility
[16:14:24] <selwyn> metaprogramming capabilities are not immediately transferrable to qc, neither is bootstrapping
[16:14:54] <lotuseater> i didn't say so
[16:15:35] <selwyn> i suppose you could make the argument that you always end up writing a 'quantum compiler' in designing a qc
[16:15:51] <selwyn> and lisp is a good language for compilers. but then, why not ocaml or sth
[16:16:17] <selwyn> lotuseater: ok
[16:16:33] <lotuseater> ask stylewarning about it
[16:16:49] *** Joins: edgar-rft (~edgar-rft@HSI-KBW-109-193-249-223.hsi7.kabel-badenwuerttemberg.de)
[16:18:12] <shka> selwyn: i simply think that QC crowd has a lisp mindset, and so they use lisp
[16:18:45] <shka> perhaps there is no technical reason, simply psychological 
[16:19:29] <hayley> https://www.youtube.com/watch?v=tbHix56qfG8
[16:19:30] -ixelp- The Aircrash Bureau - YouTube
[16:19:33] <lotuseater> I had luck this week and finally good the book "The fractal geometry of nature" by Mandelbrot as a real book for a good price :) so another important one no more necessary reading as pdf
[16:19:46] <lotuseater> it's again about abstractions
[16:20:00] <selwyn> rigetti uses it, d-wave uses it
[16:20:05] * hayley thinks she should frame the comment on using fuzz testing to "prove" that bounds checks are unnecessary.
[16:20:49] <lotuseater> i know
[16:27:14] <shka> selwyn: also, i think that in fresh fields there can be stronger impact of pioneers, and if they happen to use lisp, then everybody in the field may use lisp for a while
[16:27:30] <shka> so this can be simply by chance
[16:27:33] <selwyn> hm
[16:28:00] <selwyn> i suppose
[16:28:09] <selwyn> it's not that everyone in the field uses it though
[16:28:25] *** Joins: X-Scale (~ARM@50.77.166.178.rev.vodafone.pt)
[16:28:26] <selwyn> its more that >10% of people use it despite the difficulties
[16:28:27] <shka> yeah, but not all pioneers are lispers
[16:28:33] <selwyn> compared with 1% for webshit
[16:29:11] <selwyn> good point
[16:32:23] <lotuseater> webshit is the right word :)
[16:33:16] *** Quits: X-Scale (~ARM@50.77.166.178.rev.vodafone.pt) (Quit:  HydraIRC -> http://www.hydrairc.com <- Nine out of ten l33t h4x0rz prefer it)
[16:34:25] <selwyn> https://cdn.discordapp.com/attachments/872369447590035536/901455758959468554/DSC_05441.JPG
[16:35:07] <lotuseater> or what i said some time ago, when samsung writes there are "quantum processors" in their newer TVs
[16:35:18] <shka> snw]at
[16:35:20] <selwyn> oh that lol
[16:35:24] <shka> selwyn: what is it?
[16:35:27] <selwyn> wasn't that just a branding thing
[16:35:31] <lotuseater> apple pieces?
[16:35:39] <selwyn> i am making apple butter today
[16:35:50] <selwyn> those are apple pieces with cinnamon and sugar
[16:35:58] <lotuseater> is it an hommage what you think of apple? :D
[16:35:58] <selwyn> 4kg apples
[16:36:06] <selwyn> lotuseater: hahaha
[16:36:12] <selwyn> boil apple products down to make paste
[16:36:15] <selwyn> only thing they are good for
[16:36:52] <selwyn> iirc samsung actually has quantum rng chips in some phones, which is legit
[16:37:10] <lotuseater> "slice Mr Cook into pieces and bake it in the oven before covering with cinnamon and sugar"!
[16:37:39] <shka> selwyn: damn, that's a one lazy recipe :D
[16:39:12] <selwyn> https://www.samsung.com/my/tvs/qled-tv/technology/ if you mean this thing, then it is somewhat quantum
[16:39:13] -ixelp- Samsung QLED (2020) Technology - Quantum Processor | Samsung MY
[16:39:26] <lotuseater> what a waste of future technology, for reselling people every year the nearly same phones
[16:39:27] <selwyn> thing about tvs is that they are all basically the same
[16:39:48] <lotuseater> selwyn: everything is "somewhat quantum"
[16:40:09] <selwyn> so if you want to differentiate yourself from the crowd you have to be prepared to embrace marketing that is low on substance
[16:40:09] <Alfr> selwyn, 4kg apples? How many of those do you have? I mean two of those would already make 8 kg. And may I have a picture of these? :)
[16:40:38] <selwyn> lotuseater: indeed
[16:40:48] <selwyn> lasers are quantum yet they have been around for a while
[16:41:04] <selwyn> quantum dots belong to the 'second quantum revolution'
[16:41:46] <selwyn> idea is that devices we make that rely on quantum mechanics to explain how they work can be categorised by generation
[16:42:29] <selwyn> alfr: https://cdn.discordapp.com/attachments/872369447590035536/899416148079181864/DSC_0521.JPG
[16:42:41] <hayley> LMAO
[16:42:43] <selwyn> altogether that is over 400kg of apples, as you can see my table is very strong
[16:42:48] <hayley> I've been told that CL is slow because Nyxt ran slow on their laptop.
[16:43:09] <shka> selwyn: lol
[16:43:22] <hayley> Well, Nyxt uses WebKit, and usually the web engine tends to be slowest, and WebKit is written in C++...
[16:43:27] <hayley> So C++ is slow? Got it.
[16:43:31] <shka> yeah, those are like 8~10kgs of apples judged by eye
[16:43:40] <Alfr> selwyn, ... and large. But wait, are there some pears mixed in?
[16:44:02] <shka> Alfr: those are Chernobyl apples :P
[16:44:23] <selwyn> to be specific, the apples in this picture are relatives of the ones that are being turned into apple butter
[16:44:31] <selwyn> these ones are becoming (hard) cider
[16:44:47] <selwyn> i decided not to use the pears for anything, they were way too hard
[16:44:51] <shka> selwyn: "look at the fate of your relatives and DESPAIR"
[16:45:10] <lotuseater> hayley: so when something in assembly is way slower than with fpga this implicates assembly is slow too? :D
[16:45:20] <hayley> Yes.
[16:45:39] <selwyn> 'this is not a place of honour'
[16:46:23] <Alfr> shka, as long as they are apples, all should be well. Tough I'm not sure how pear wine tastes.
[16:46:24] * hayley continues playing https://www.youtube.com/watch?v=PcsumKaIXEs
[16:47:27] *** Quits: edgar-rft (~edgar-rft@HSI-KBW-109-193-249-223.hsi7.kabel-badenwuerttemberg.de) (Quit: Leaving)
[16:47:51] <selwyn> i tried using wine yeast for the cider, but it appears to have died
[16:48:32] <selwyn> i made a trip to a homebrewing shop to get cider yeast which was well worth it, now it is going well
[16:49:17] <shka> oddly picky yeast
[16:49:39] <selwyn> i bought it from a home supplies store
[16:49:40] <shka> it's just sugar you lazy sons-of-bitches
[16:49:47] <selwyn> suspect that they did just not store it that well
[16:49:59] <shka> yeah, this is likely
[16:50:11] <shka> it is not like making bread
[16:50:19] <selwyn> definitely not
[16:50:27] <selwyn> you have to sterilise equipment, which i hate
[16:50:27] <shka> yeast shouldn't be this specific
[16:50:37] <selwyn> i still can't be confident that it won't all spoil before the end
[16:50:49] <shka> for making cider?
[16:51:02] <selwyn> i think the issue is that you have to worry about rival strains of yeast and bacteria infecting the whole thing
[16:51:05] <selwyn> not a concern for bread
[16:51:14] <selwyn> shka: yes
[16:51:24] <shka> uh, i think that such infection is unlikely to be honest
[16:51:31] <shka> but i am not a expert
[16:51:44] <selwyn> did you try it before?
[16:51:58] <shka> no, but yeast multiplies far quicker then bacteria given the right circumstances 
[16:52:59] <shka> so i wouldn't be that concerned with sterilization
[16:53:21] <shka> perhaps just wash carefully the whole damn thing and use hot steam afterwards
[16:53:30] <selwyn> there is quite a thick head of foam over the apple juice/cider by now
[16:53:56] <shka> disclaimer: i never made cider myself
[16:54:10] <selwyn> i tried once when i was 18, with apples from the same tree
[16:54:14] <selwyn> and it all turned to vinegar
[16:54:25] <selwyn> but i took a lot less care with it
[16:57:45] <selwyn> would be nice to make apple brandy but not practical
[17:01:10] *** Quits: dra (~dra@2a04:4540:6413:be00:871:94a5:edea:7eee) (Quit: Leaving)
[17:04:46] <selwyn> live update https://cdn.discordapp.com/attachments/872369447590035536/901463577666400287/DSC_05451.JPG
[17:12:59] <hayley> mfiano: I was told that there aren't drawbacks to using ECS over a vector of objects. But, to make "components", you need to break an object into isolatable components, and user extensions thus are aware of the implementation of entities, which violates modularity, right?
[17:15:32] <mfiano> I don't have time to talk about my thoughts on the flawed ECS model right now. Remind me later, but yes, you are correct. ECS is a very ill-defined paradigm, that looks good on paper, but falls apart completely in implementation.
[17:16:46] <hayley> Thanks, you can watch and laugh from the sidelines then. Dunno if I want to reply with this information, because they aren't owning up to the other misinfo.
[17:19:34] <mfiano> ECS was popularized by some studio that wrote a very hand-wavey article about 15 years ago as the games industry was writing more than a couple hundred lines of code and the "god object" model was not working anymore with the increase in complexity. The "god object" model is an anti-pattern that results from using traditional OOP. Your taxonomies eventually can't be classified and they congregate
[17:19:36] <mfiano> up to the root of the hierarchy, until nearly everything is in a god object
[17:19:40] <hayley> (Hm, well, we document class hierarchies in OO, but components/systems are much closer to "implementation" than "interface" - if there is only one obvious way to walk the component set, then it's exposing a hellalot of information...I think I need to pick this up tomorrow too.)
[17:20:42] <hayley> Seems like you do have time, but I didn't want to make you make up time for it. Sorry.
[17:21:42] <mfiano> I am leaving now, but no worries. I am just in the process of getting ready to go out for the day with the family :) I will be back at some point if you want to talk more about it.
[17:22:47] <hayley> All you need to know is that they think you can fuzz test to prove that bounds checking is unnecessary. So don't bother yourself.
[17:52:25] <pl> dunno, it seems that ECS is doing very well for people
[17:53:03] <hayley> Well, it's not a replacement for OO as some people make it out to be. But clearly this guy only cares about performance.
[17:53:56] <hayley> ...at the cost of maintainability (subjective still), liveliness (most people don't know they want it) and safety (pretty universal).
[17:54:06] <pl> well, it can provide better performance. When you have CLOS, you can also use multiple-inheritance with a bit of MOP magic to get a nicer way to implement things
[17:54:47] <hayley> I'm aware, thanks. But it's still not a clean replacement, which was the original claim.
[17:55:06] <pl> ahh, I haven't seen the original claim
[17:55:26] <hayley> Do you want eye cancer?
[17:55:40] <pl> that said, a lot of ECS implementations I've seen in the wild look somewhat related to CLOS :P
[17:56:04] <pl> ehhh, give it
[17:56:13] <hayley> Someone said EC looked like a hard way to get prototypes in a class based language. I don't agree, but it was funny.
[17:56:40] <pl> it's arguably possible, though there's no relation between ECS and classes/prototypes
[17:56:56] <pl> unless you discard big chunk of what ECS brings
[17:57:05] <hayley> https://old.reddit.com/r/socialistprogrammers/comments/qdfj46/question_capitalism_made_me_a_programmer_need_an/hhqnmxd/
[17:57:05] -ixelp- Conscat comments on [Question] Capitalism Made Me a Programmer; Need an Exit Strategy
[17:57:21] <hayley> I have EC working using the MOP and mixins.
[17:57:34] <hayley> You still bring your own S.
[17:58:13] <hayley> (Also, go up the parent chain for more if you're in too good health.)
[17:58:58] <pl> ehh, SoA/AoS are totally orthogonal, it's just that they are easier to implement in puny languages if you use ECS
[17:59:26] <shka> i feel like the practical merits of ECS are suited to s limited domain
[17:59:50] <hayley> SoA is pretty easy with "only OO" languages like CL and Java. And they're easier to process with SIMD IMO.
[18:00:24] <shka> because in practice, you usually don't need or even want your objects to having dynamically added components 
[18:01:20] <pl> shka: Over time I've seen more and more usecases for that
[18:01:50] <shka> sure, but enough to center your whole design around that?
[18:02:11] <hayley> I got to use stealth mixins in the one-more-re-nightmare compiler. And decentralise2 uses dynamic-mixins too.
[18:02:18] <pl> shka: well, depends on what your language can bring. CLOS with change-class makes it much, much easier
[18:03:13] <pl> I believe Shinmera documented also cases that are normally handled by static behaviours replaced with change-class
[18:03:25] <shka> well, i would personally rather write defgeneric some-method (entity component) then use change-class
[18:03:28] <shka> so here is that
[18:03:28] <pl> where he used one class for "unloaded" data and another for loaded
[18:03:55] <pl> shka: that doesn't work unless you want to define method per entity
[18:04:09] <shka> why?
[18:04:33] <shka> (defmethod some-method ((entity t) (component default-component))) 
[18:04:47] <shka> or something to that ilk
[18:05:07] <shka> what you are getting out of it is the ABILITY to define method per entity
[18:05:11] <hayley> Another thing is that, to win on performance, surely you need to have shared components. I don't know if that's always the case...I guess we have base classes, and those sometimes have slots, but it's not convincing by itself.
[18:05:26] <shka> but not the requirement
[18:05:44] <hayley> (Else, one component per vector degenerates to WORSE than one storage vector per entity.)
[18:06:43] <pl> shka: ECS would match more to (defmethod component-method ((entity behaviour) &rest ...))
[18:06:43] <shka> hayley: video game devs tend to like that design because it removes the requirement for virtual dispatch and improves cache locality 
[18:07:06] <hayley> shka: Again, I'm aware. But it seems less applicable outside games.
[18:07:17] <shka> yeah, that is also my impression
[18:07:18] <pl> shka: it also provides for equivalent of doing change-class with runtime-defined superclass list
[18:07:30] <selwyn> in the trial asset loader?
[18:07:38] <pl> selwyn: yes
[18:08:00] <shka> pl: yeah, got it, actually that's what i am sort off doing in cl-data structures
[18:08:01] <pl> shka: so it makes sense if you have possibly very dynamic set of behaviours to apply
[18:08:05] <hayley> I don't have a bajillion polygons, particles, monsters, etc, maybe 1e3 connections on a bad day and that's it. And generic dispatch, for once, never comes up as hot when I profile my netcode.
[18:08:21] <shka> i have a container, i have operation that modifies container
[18:08:26] <selwyn> yes, with the placeholder assets
[18:08:47] <shka> and position-modification (container operation)
[18:09:24] <selwyn> i remember that took some time to design but i think we are happy with it
[18:09:35] <pl> so with ECS you have <a way to dispatch operation on entity> (can be CLOS generic dispatch, can be pointers to functions that have hardcoded shit), plus a way to get a list of objects that have specific components applied so you can run a function on them (more important if you do not have generic dispatch)
[18:09:39] * hayley uploaded an image: (381KiB) < https://libera.ems.host/_matrix/media/r0/download/matrix.org/fEavLSmIToRLzjqFdoxTytlY/average-dod-fan.png >
[18:09:55] <shka> pl: but oddly enough i don't even do that because of what ECS is usually advertised 
[18:10:35] <pl> shka: in lesser languages or in CL? ::
[18:10:36] <pl> :P
[18:10:44] <shka> in CL
[18:10:51] <pl> well, CL makes certain problems moot
[18:11:08] <pl> though there's still concurrency control performance gains in the query model
[18:11:24] <shka> https://github.com/sirherrbatka/cl-data-structures/blob/42f51982164d5ac6633f5b85afcaafe0676c91ac/src/api/meta.lisp#L275
[18:11:24] -ixelp- cl-data-structures/meta.lisp at 42f51982164d5ac6633f5b85afcaafe0676c91ac Â· sirherrbatka/cl-data-structures Â· GitHub
[18:11:51] <shka> so the whole point of this design, is to have very fine grained, switchable control over stuff like bucket creation
[18:12:24] <pl> so for example there's much less benefit from ECS if your code isn't doing realtime over dynamically updated data, IMHO
[18:12:31] <shka> this way i can implement composable/lazy containers with just a couple of code lines
[18:13:46] <shka> also, functions like update! and update-if! can share almost all of the implementation
[18:13:54] <shka> difference being just alter-bucket! methods
[18:14:22] <shka> but this is not what ECS is advertised for
[18:14:59] <shka> perhaps because using lesser language in such a way would be just such PITA
[18:15:10] <shka> also, i think that must have multiple dispatch to do that
[18:16:41] <shka> hayley: also, such approach in the video games domain solves more then a single problem at once 
[18:16:44] <selwyn> does that big space x launch have a date yet?
[18:16:56] <shka> what is big space x launch?
[18:17:08] <selwyn> the one that is the size of saturn v
[18:18:02] <selwyn> sn20?
[18:18:18] <shka> spacex super heavy or the NASA?
[18:18:23] <shka> ok, super heavy
[18:18:44] <shka> dunno, the last time i checked they were loosing heat tiles during engine test
[18:19:10] <shka> which is, obviously, a problem
[18:20:13] <shka> on the other hand, what about SLS?
[18:20:17] <shka> do they have a date?
[18:20:29] <shka> 12 February 2022
[18:20:33] <shka> L A M E
[18:21:37] <shka> so i guess the closest exiting launch is still the james webb 
[18:22:07] <shka> hopefully it goes well :/
[18:22:18] <selwyn> you don't sound optimistic
[18:22:40] <shka> james webb space telescope seems to be cursed man
[18:23:32] <shka> it goes on for so long that even the rocket that was supposed to fly this thing into space reaches end of service
[18:23:41] <selwyn> development hell
[18:24:25] <shka> https://en.wikipedia.org/wiki/Ariane_6
[18:24:44] <shka> this thing also is delayed, but just for the point
[18:25:01] <shka> james webb will be one of the last things launched on the Ariane 5
[18:25:32] <shka> and when the project started, Ariane 5 was the shiny new design
[18:25:35] *** Quits: Mandus (~aasmundo@0.51-175-33.customer.lyse.net) (Ping timeout: 264 seconds)
[18:27:02] <shka> 13 years of delays
[18:28:28] *** Joins: Mandus (~aasmundo@0.51-175-33.customer.lyse.net)
[18:28:49] <selwyn> named after a nasa administrator
[18:28:51] <selwyn> bit boring
[18:35:57] <selwyn> if spacex is funded by nasa, then their launches are effectively subsidised by the us gov
[18:36:07] <selwyn> so it must be very difficult to compete with them on price
[18:36:13] <selwyn> is this in fact their entire business model?
[18:36:15] <shka> yup, but in a more sensible way
[18:36:33] <shka> selwyn: nah, it is not like that
[18:37:25] <shka> commercial space program changed how launches are payed 
[18:37:56] <shka> it used to be the case that missing deadlines would result into getting more money 
[18:38:04] *** Joins: dra (~dra@2a04:4540:6413:be00:61eb:d823:a9de:d0ed)
[18:38:25] <shka> that's partly why everything NASA does is missing deadlines :P
[18:38:42] <selwyn> i see
[18:38:56] <shka> so i would say that SpaceX is legit business
[18:39:04] <selwyn> i think i understand
[18:39:44] <shka> honestly, quite impressive how far they came 
[18:39:47] <selwyn> well, i would say that they would still be legit even if they were subsidised, but whatever
[18:40:04] <selwyn> then they would be a kind of public utility
[18:40:10] <shka> look at it this way
[18:40:21] <shka> using Falcon9 saves NASA money
[18:40:56] <shka> they are just price competitive, that's it
[18:41:05] <selwyn> i suppose
[18:41:23] <selwyn> honestly, it's very weird for me to look at a public private partnership that works
[18:41:24] <shka> and perhaps Elon is the only paypal founder that actually does something requiring effort :P
[18:43:57] <pl> SpaceX had a huge, huge windfall of DARPA and other military money
[18:44:03] <pl> that other competitors didn't
[18:44:18] <pl> and older commercial providers didn't want to invest much and risk things
[18:44:29] <shka> pl: well, exactly
[18:44:47] <pl> which also shows when you check what is launched on what
[18:44:49] <shka> L/M could spend more money on the R&D
[18:45:01] <shka> but they didn't
[18:45:10] <shka> same for Boeing
[18:45:14] * pl has ... opinions on L-M
[18:45:20] <shka> i know :D
[18:45:35] <pl> Boeing actually does a bunch there, but mostly in the space-side stuff, not much on launchers
[18:45:56] <pl> Northrop is stuck with launcher that is half-classified which does impact their ability to sell
[18:45:59] *** Quits: Mandus (~aasmundo@0.51-175-33.customer.lyse.net) (Ping timeout: 264 seconds)
[18:46:15] <shka> so well, it is almost like space-x was not even considered to be serious competitor 
[18:46:50] <pl> Arguably, the only reason spacex crewed flights happened is because /there was no alternative/
[18:47:13] <pl> all crewed missions in USA are experimental as hell because of regular funding switcheroos
[18:47:23] <shka> well, Boeing is also trying :)
[18:47:41] <pl> Yes. But they were dangled around by congress a bit
[18:48:06] <pl> meanwhile spacex got to use much later program where they got less haggling with congress
[18:48:51] <pl> a lot of delays is not because delay will bring more money, but because every election you end up with funding changes that result in cut-downs and redevelopment
[18:48:58] <shka> i guess having a cheap and a very reliable launch system also improves the position somewhat
[18:49:07] *** Joins: Mandus (~aasmundo@0.51-175-33.customer.lyse.net)
[18:49:42] <pl> arguably it's less about having a cheap launch system and more about "not being on congress-managed project", or at least not as direct
[19:10:47] <selwyn> has boeing survived the 737 max thing then
[19:11:58] *** Quits: waleee (~waleee@2001:9b0:216:8200:d457:9189:7843:1dbd) (Ping timeout: 258 seconds)
[19:13:45] *** Joins: waleee (~waleee@h-98-128-228-119.NA.cust.bahnhof.se)
[19:18:19] *** Quits: chiselfuse (~chiselfus@user/chiselfuse) (Remote host closed the connection)
[19:20:55] *** Joins: chiselfuse (~chiselfus@user/chiselfuse)
[19:41:36] *** Quits: Mandus (~aasmundo@0.51-175-33.customer.lyse.net) (Ping timeout: 244 seconds)
[19:42:19] *** Joins: Mandus (~aasmundo@0.51-175-33.customer.lyse.net)
[19:47:15] <selwyn> til ripping cds is still illegal here
[19:49:06] *** Joins: edgar-rft (~edgar-rft@HSI-KBW-109-193-249-223.hsi7.kabel-badenwuerttemberg.de)
[19:59:05] *** Joins: jeko (~user@ool-18e4d9ae.dyn.optonline.net)
[19:59:09] *** Quits: Mandus (~aasmundo@0.51-175-33.customer.lyse.net) (Ping timeout: 244 seconds)
[19:59:13] *** Quits: jeko (~user@ool-18e4d9ae.dyn.optonline.net) (Remote host closed the connection)
[20:03:55] *** Joins: Mandus (~aasmundo@0.51-175-33.customer.lyse.net)
[20:05:05] <SAL9000> there's a reason SLS is backronym'd to "Senate Launch System"
[20:12:27] *** Quits: edgar-rft (~edgar-rft@HSI-KBW-109-193-249-223.hsi7.kabel-badenwuerttemberg.de) (Quit: Leaving)
[20:13:36] <dave0> nite all
[20:13:40] *** Quits: dave0 (~davezero@069.d.003.ncl.iprimus.net.au) (Quit: dave's not here)
[20:16:07] *** Joins: edgar-rft (~edgar-rft@hsi-kbw-109-193-249-223.hsi7.kabel-badenwuerttemberg.de)
[20:18:10] <shka> selwyn: boeing is not allowed to fall 
[20:18:18] <shka> US gov will not allow that
[20:19:07] <shka> first off, there is the military part
[20:20:08] <shka> F-15 is still important
[20:20:10] *** Joins: CrashTestDummy2 (~CrashTest@ool-ad02813b.dyn.optonline.net)
[20:20:23] <shka> and there are some other weapons produced by boeing
[20:20:48] <shka> even B-52 is important
[20:21:27] <shka> and besides, i would not expect US to loose high-tech aviation company that is the only US presence in the passenger plain business 
[20:22:20] <shka> and although 737 max was a disaster, dreamliner (after the teething issues) seems to be doing fine
[20:22:45] *** Quits: robin (~robin@user/terpri) (Ping timeout: 260 seconds)
[20:22:51] <shka> the main problem being is that they can't crank enough of those to get the market
[20:22:57] *** Joins: robin (~robin@user/terpri)
[20:23:22] *** Quits: CrashTestDummy3 (~CrashTest@ool-ad02813b.dyn.optonline.net) (Ping timeout: 260 seconds)
[20:32:16] <selwyn> i see
[20:33:20] *** Quits: edgar-rft (~edgar-rft@hsi-kbw-109-193-249-223.hsi7.kabel-badenwuerttemberg.de) (Quit: Leaving)
[20:33:41] *** Quits: retropikzel (~retropikz@83-245-255-135-nat-p.elisa-mobile.fi) (Quit: Leaving)
[20:34:49] *** Quits: Mandus (~aasmundo@0.51-175-33.customer.lyse.net) (Ping timeout: 244 seconds)
[20:35:00] *** Joins: edgar-rft (~edgar-rft@hsi-kbw-109-193-249-223.hsi7.kabel-badenwuerttemberg.de)
[20:36:21] <shka> situation at company make me feel like noah from here https://www.youtube.com/watch?v=6MjYtBakc30
[20:36:22] -ixelp- Wielkie Konflikty - odc.15 "Noe vs BÃ³g" - YouTube
[20:38:44] *** Joins: Mandus (~aasmundo@0.51-175-33.customer.lyse.net)
[20:39:14] <selwyn> lol
[20:39:26] <shka> there are subs
[20:39:33] <selwyn> yeah i got them
[20:40:09] <selwyn> i hope noah has that 'fuck you' money
[20:41:38] <shka> fire up that flood
[20:42:11] <shka> this is also gold https://www.youtube.com/watch?v=Cs6OTdU59GE
[20:42:12] -ixelp- Wielkie Konflikty - odc.13 "Hitler vs SÄ…d Ostateczny" - YouTube
[20:43:28] <selwyn> axe skills
[20:45:57] <selwyn> every so often evangelicals try to find noah's ark on mount ararat
[20:49:06] <shka> selwyn: btw, if you are wondering what Satan is doing currently https://www.youtube.com/watch?v=XC7TN3vAbT8
[20:49:06] -ixelp- "PiekÅ‚o 2.0" [Shorty Darwina #4] - YouTube
[20:49:28] <shka> after that Hitler split
[20:54:48] <selwyn> hahaha
[20:54:50] *** Quits: notzmv (~zmv@user/notzmv) (Ping timeout: 260 seconds)
[20:57:52] <selwyn> this apple butter is so sweet it gives me a headache
[20:59:24] <edgar-rft> sweet headache
[21:00:07] <selwyn> web 2.0 was hell 2.0 all along
[21:01:33] <selwyn> idk if i like it that much
[21:01:46] <selwyn> it's not finished yet, maybe its better once its set and cooled
[21:02:10] <selwyn> i think it has to caramelise some more
[21:13:29] *** Joins: retropikzel (~retropikz@83-245-255-135-nat-p.elisa-mobile.fi)
[21:21:42] <ck_> have you thought of a brand name already
[21:24:02] <pl> proposed web3 makes web2.0 a comparable paradise
[21:24:27] <shka> pl: details!
[21:24:29] <shka> now!
[21:24:56] *** Quits: random-nick (~random-ni@87.116.165.220) (Read error: Connection reset by peer)
[21:24:59] <pl> shka: "web3" is what the cryptoidiots are building
[21:25:29] <selwyn> return to w3schools?
[21:25:51] *** Joins: random-nick (~random-ni@87.116.165.220)
[21:25:57] <selwyn> <marquee> s everywhere
[21:25:59] <ck_> but we haven't even done the "semantic" thing yet
[21:26:20] <selwyn> pl: it does sound bad
[21:26:40] <pl> ck_: cryptoidiots don't care, cryptoidiots boil the planet for artificial scarcity to scam people out of worth
[21:27:31] <shka> let's stand to the anthem https://www.youtube.com/watch?v=U-ZJGfA0UxY
[21:27:31] -ixelp- Free Money - YouTube
[21:27:34] <shka> ;-)
[21:27:46] <selwyn> the goal of making data machine readable reminds me a little of xml hype a while back
[21:28:15] <pl> selwyn: well, XML delivered, but was very abused
[21:28:37] <pl> semantic techniques are also very powerful if utilised
[21:28:52] <pl> unfortunately I was just fired from a place that utilised RDF (yay for conflict with line manager!)
[21:29:18] <selwyn> oh dear
[21:29:50] <selwyn> condolences
[21:29:50] <pl> so while looking for a new job, I spend non-trivial amount of time making sure there's no "blockchain", "DeFI", "web3", "NFT" or any other related thing in the job advert and company description
[21:30:23] <shka> dunno, is the web3 really a thing?
[21:30:31] <shka> really
[21:31:04] <dra> Oof.
[21:31:33] <pl> shka: "real" as in "something other than scam"? No. Real as in "some idiots are building it"? Unfortunately true
[21:31:44] <shka> i see
[21:31:56] <ck_> just like most of the rest of that lsit
[21:31:58] <pl> just like you'd like to think NFTs aren't real
[21:32:25] <shka> this would be kinda loved by big media corporations
[21:32:25] <ck_> if you "leverage" "artificial intelligence" and "algorithmic insights" anything is possible
[21:33:01] <shka> if they could force selling some kind of right to view a clip in the internet
[21:33:29] <pl> ck_: don't forget "Quantum AI"
[21:33:36] <shka> but i don't know if this is technically feasible 
[21:33:46] <pl> it's not
[21:33:53] <shka> well, that's that
[21:33:54] <selwyn> shka: don't scare me like that
[21:34:00] <selwyn> :)
[21:34:42] <shka> selwyn: if you are not already scared shitless you are not paying attention. :P
[21:34:56] <pl> Fear is the Mind Killer
[21:35:05] *** Quits: aeth (~aeth@user/aeth) (Ping timeout: 260 seconds)
[21:35:12] <selwyn> perhaps if the internet is ruined i will waste less time on it
[21:35:26] <selwyn> i should watch dune now it is out
[21:35:33] <ck_> depending on what you compare with, it already is
[21:35:33] <shka> it is pretty much ruined already
[21:35:40] <shka> https://www.youtube.com/watch?v=FWqMlTwxcUI
[21:35:40] -ixelp- And Also the Trees - Brother Fear - YouTube
[21:35:46] <selwyn> ok, good point
[21:36:02] <shka> https://www.youtube.com/watch?v=usGQjN87BUA
[21:36:02] <selwyn> we are the proverbial frogs in the pot
[21:36:02] -ixelp- Faith No More - Everything's Ruined (Official Music Video) - YouTube
[21:36:22] <shka> selwyn: yeah, this shit is simply normalized 
[21:36:33] *** Joins: aeth (~aeth@user/aeth)
[21:36:43] <shka> that's how we are dealing with it, psychologically speaking
[21:38:36] <shka> honestly, we are simply living in the cyberpunk future
[21:39:20] <shka> most of the dystopian shit from 80s is the current reality
[21:39:37] <lotuseater> and people get dumber every day
[21:39:42] <shka> minus the cybernetic implants
[21:40:04] <dra> lotuseater: Including me.
[21:40:36] <lotuseater> dra: you? no
[21:40:37] <ck_> oh my god JC, a bomb
[21:41:06] <shka> ck_: https://www.youtube.com/watch?v=zStn70Ot4r0
[21:41:06] -ixelp- Deus Ex - Intro HD - YouTube
[21:41:22] <selwyn> https://www.youtube.com/watch?v=qu5AkyifUow
[21:41:22] -ixelp- British Sea Power - Carrion - YouTube
[21:41:31] <shka> deadly virus? checked 
[21:42:03] <dra> lotuseater: Every time there's a post including Lisp on Hacker News, I can't help but click on the comments and re-read the discussion, which is identical to every other Lisp discussion ever posted.
[21:42:08] <shka> this game is fucking prophetic 
[21:42:16] <lotuseater> :D
[21:42:50] <shka> terrorists, deadly virus, corporate conspiracies?
[21:43:23] <shka> when the shit you pull out of your ass, but in 20 years it seems like the news real
[21:43:30] <ck_> and no world trade center
[21:43:35] <edgar-rft> lotuseater: I started dumb and meanwhile I'm hopelessly gaga
[21:45:22] <lotuseater> edgar-rft: hm but i bet not as much as me
[21:45:31] <shka> ck_: yes
[21:45:39] <selwyn> am reminded of the plot of v for vendetta in which the people turn to fascism after a virus kills 100 000 people
[21:45:51] <shka> just 100 000?
[21:45:54] <selwyn> yet when this happened irl no-one gave much of a shit, so
[21:45:59] <shka> amateurs 
[21:46:08] <ck_> some people gave some amount of it
[21:46:11] <ck_> muh freedom!!!!
[21:46:12] <lotuseater> shka: was thinking the same :D
[21:46:24] <shka> selwyn: capitalist realism
[21:46:32] <selwyn> yeah i guess in 2005 the filmmakers thought that 100k is a big number
[21:46:45] <shka> it is based on a comic iirc
[21:46:54] <selwyn> yes, the comic has a different origin story
[21:47:03] <selwyn> i like the film but it is not that clever
[21:47:20] <selwyn> the graphic novel is great
[21:47:26] <shka> regardless
[21:47:41] <shka> it is easier to imagine end of the world then the end of the capitalism
[21:47:43] <shka> so...
[21:49:40] *** Joins: notzmv (~zmv@user/notzmv)
[21:50:36] <pl> selwyn: remember that cryptoidiots try to ruin the physical world too
[21:50:44] <selwyn> v for vendetta is kind of 80s dystopia as well
[21:50:54] <selwyn> pl: yes :(
[21:51:13] <shka> selwyn: but i am afraid that the cyberpunk was right 
[21:51:15] <selwyn> i boycott them out of principle
[21:51:19] <dra> pl: In what way do you mean?
[21:51:31] <shka> the heck is DeFI anyway?
[21:51:52] <pl> shka: fancy term to hide cryptodiocy behind
[21:52:03] <pl> dra: they need to generate waste to create their artificial scarcity
[21:52:10] <shka> ok
[21:52:11] <selwyn> pl: can the crypto bubble ever burst?
[21:52:45] <pl> selwyn: is a JDAM to cryptominer's "mine" a way of bursting a bubble?
[21:55:02] <dra> That would make them even more scarce.
[21:55:13] <dra> "scarcer"?
[21:55:43] <selwyn> both scarce and scarcer are correct
[21:55:47] <pl> dra: yes, but at certain point there's a convergence between "you can't run cryptoscam without miner's wasting resources" and "miners get shot"
[21:56:06] <dra> selwyn: Thanks.
[21:56:16] <selwyn> china banned them right
[21:56:23] <shka> selwyn: it already had, but only to reemerge 
[21:56:46] <shka> arguably, it only speeds up 
[21:56:52] <pl> They tightened the screws this year, afaik, so a lot of mining stopped in china
[21:57:05] <shka> because after reaching low point, crypto becomes more attractive for investments
[21:57:15] <pl> but then you have things like a bitcoiner "fund" that bought a coal power plant
[21:57:20] <shka> it is the quickest boom-bust cycle ever seen
[22:03:53] <dra> You buy stock, stock tanks, you still own part of a corporation.
[22:04:03] <dra> You buy bitcoin, bitcoin tanks, what do you own?
[22:04:17] <dra> The result of a rather simple arithmetic calculation. ;)
[22:05:57] <pl> Both are gambling bets, but cryptocoins are purer in terms of capitalism 
[22:06:24] <pl> Being further dissociated from physical constraints 
[22:16:41] *** Quits: hendursa1 (~weechat@user/hendursaga) (Quit: hendursa1)
[22:17:22] *** Joins: hendursaga (~weechat@user/hendursaga)
[22:19:01] <shka> simulacra of ownership
[22:21:27] <ck_> well you save cash, inflation happens, what do you own?
[22:23:45] *** Quits: vats (~vats@103.158.91.248) (Remote host closed the connection)
[22:24:29] *** Joins: vats (~vats@103.158.91.248)
[22:36:26] <White_Flame> savings is for short term, investment is for long term
[22:37:12] <White_Flame> but even so, saving at less than inflation can be really good, too, as many things need a chunk of capital larger than what you get from a paycheck
[22:39:18] <White_Flame> and the loss from inflation is usually cheaper than the loss from interest payments from borrowing
[22:43:34] *** Joins: christophergray (~christoph@190.148.52.44)
[22:48:58] *** Parts: fengshaun (~fengshaun@S010680615f0c2c0a.cg.shawcable.net) (Leaving)
[23:00:13] <ck_> I guess what I was saying was that if the system of exchange someone relies upon breaks down, it doesn't matter if you had non-fungible tokens, paper currency or any other "agreed-upon" piece of tokenized value
[23:00:45] <pl> funnily enough the part that fiat money solved was exchangeability
[23:01:00] <ck_> so I'll better go stock up on physical goods, good thing there's no trouble with global supply ch.. oh.
[23:04:55] <dra> ck_: You're right, of course. Nothing is risk free.
[23:08:20] <edgar-rft> totally offtopic, but greatest music video ever -> https://i.imgur.com/mF6GhKt.mp4
[23:13:38] <pjb> edgar-rft: there's nothing really totally offtopic on #lispcafe.
[23:28:28] *** Joins: clothespin (~awolven@c-73-209-95-92.hsd1.il.comcast.net)
[23:30:34] <lotuseater> edgar-rft: excentric :)
[23:31:36] <lotuseater> or that: https://youtu.be/cLmCJKT5ssw?t=62
[23:31:37] -ixelp- Jack Black Performs His Legendary Sax-A-Boom with The Roots - YouTube
[23:32:22] <shka> https://www.youtube.com/watch?v=g5NSvtWirS4
[23:32:22] -ixelp- The 10 most ridiculous Black Metal videos - YouTube
[23:32:57] <lotuseater> this week i had on my headphones "mutter, der mann mit dem koks ist da" from falco :D
[23:36:58] <lotuseater> and i learned playing little britain clips out loud can be not safe for work :D
[23:46:31] <dra> https://www.youtube.com/watch?v=t03Nh0hyBY4
[23:46:32] -ixelp- Die Toten Hosen // â€žEisgekÃ¼hlter Bommerlunderâ€œ [Offizielles Musikvideo] - YouTube
[23:56:53] *** Joins: ec_ (~ec@gateway/tor-sasl/ec)
[23:57:41] *** Joins: jeko (~user@ool-18e4d9ae.dyn.optonline.net)
