[00:04:17] *** Joins: blackout69 (~blackout6@net-109-116-208-45.cust.vodafonedsl.it)
[00:04:39] *** Joins: ovnicraft (~ovnicraft@corp-179-49-44-28.uio.puntonet.ec)
[00:08:14] *** Quits: ovnicraft (~ovnicraft@corp-179-49-44-28.uio.puntonet.ec) (Client Quit)
[00:10:04] *** Joins: rje (~rje@50.54.137.153)
[00:13:58] *** Quits: EvilDMP (~textual@django/moderator/EvilDMP) (Quit: My MacBook has gone to sleep. ZZZzzz…)
[00:14:44] *** Joins: argento (~argent0@168-227-97-29.ptr.westnet.com.ar)
[00:15:28] *** Joins: dudek (~dudek@185.150.236.155)
[00:15:36] *** Joins: EvilDMP (~textual@django/moderator/EvilDMP)
[00:15:36] *** ChanServ sets mode: +v EvilDMP
[00:15:40] *** Joins: ovnicraft (~ovnicraft@179.49.44.28)
[00:17:30] *** Quits: ovnicraft (~ovnicraft@179.49.44.28) (Client Quit)
[00:17:47] *** Joins: LuxuryMode (uid91005@id-91005.charlton.irccloud.com)
[00:18:12] *** Joins: Skyz50 (~Skyz@user/skyz)
[00:21:52] *** Quits: Skyz (~Skyz@user/skyz) (Ping timeout: 246 seconds)
[00:21:57] *** Skyz50 is now known as Skyz
[00:22:15] *** Quits: Skyz (~Skyz@user/skyz) (Client Quit)
[00:22:30] *** Joins: Skyz (~Skyz@user/skyz)
[00:25:38] <GinFuyou> dlam, not sure there is, I usually just define a custom method and use it explicitly. Or you can combine Manager and QuerySet
[00:26:25] <kevr> So, I want a filter that I can use in a {% %} block, is that possible?
[00:27:19] <GinFuyou> kevr, a template filter you mean?
[00:27:42] *** Quits: Skyz (~Skyz@user/skyz) (Quit: Client closed)
[00:28:13] <kevr> Yes.
[00:28:25] <GinFuyou> and it just doesn't work?
[00:28:26] *** Joins: PaulWay[w] (~PaulWay@2001:44b8:1110:f800:4b79:e11c:c2f:5c75)
[00:28:35] <GinFuyou> I can see it works in with tag at least
[00:28:53] <kevr> I'm getting issues assigning to a variable with `with`... I have no clue why.
[00:31:23] *** Joins: bilb_ono (~alexmarsh@ip68-6-69-149.sb.sd.cox.net)
[00:31:40] <GinFuyou> Well, I can't know without details. I just looking at my code and I'm using, presumably successfully
[00:31:54] <GinFuyou> *using it
[00:32:30] *** Quits: slav0nic (slav0nic@python.su) (Ping timeout: 276 seconds)
[00:34:18] *** Joins: slav0nic (slav0nic@python.su)
[00:35:49] <kevr> Hm. I got it. I was just using with incorrectly.
[00:36:30] *** Joins: thiras (~thiras@user/thiras)
[00:38:07] *** Quits: EvilDMP (~textual@django/moderator/EvilDMP) (Quit: My MacBook has gone to sleep. ZZZzzz…)
[00:41:54] *** Quits: rje (~rje@50.54.137.153) (Quit: My computer has gone to sleep. ZZZzzz…)
[00:41:54] *** Quits: HoaxKey (~HoaxKey@79-68-114-140.dynamic.dsl.as9105.com) (Read error: Connection reset by peer)
[00:42:18] <wallbroken> GinFuyou: have you some idea for helping me?
[00:42:31] <wallbroken> i created this function
[00:42:32] <wallbroken> https://dpaste.org/7wjn#L
[00:42:41] <GinFuyou> Yes. And idea is not doing it.
[00:42:42] <wallbroken> i want to use it to pass a value to a template
[00:42:43] *** Joins: ironbeard (~geoffrey@130-45-89-178.dyn.grandenetworks.net)
[00:43:13] <wallbroken> GinFuyou: why?
[00:43:37] <wallbroken> you always helped me
[00:44:37] <nedbat> wallbroken: you are burning bridges.
[00:44:41] <ironbeard> The docstring for django.views.static.serve(request, path, document_root=None, show_indexes=False) says "You must provide the ``document_root`` param" and I'm getting an error for not providing it (based on the website documentations signature of "serve(request, path)". Why is document_root an "option" kwarg in the function signature?
[00:45:11] <ironbeard> **why is it an optional kwarg
[00:46:47] *** Joins: Thanattt (~Thanatos@102.91.4.38)
[00:48:18] *** Quits: thiras (~thiras@user/thiras) (Ping timeout: 255 seconds)
[00:49:51] <wallbroken> nedbat: mind your business please
[00:50:20] *** Quits: ThanatosJ (~Thanatos@197.210.53.15) (Ping timeout: 256 seconds)
[00:50:27] <nedbat> wallbroken: i know you don't like what I am saying, but i'm trying to help you. people are refusing to help you.
[00:55:48] *** Quits: slav0nic (slav0nic@python.su) (Ping timeout: 272 seconds)
[00:56:19] <b-rex> wallbroken: sometimes the best way to help someone is to encourage them to help themself. i think various folks here are at that point now. we have done everything we can. it's now up to you. you'll thank the relevant people later.
[00:56:48] <wallbroken> b-rex: i wrote a function to reach a purpose
[00:57:01] <wallbroken> i have problem with that and i asked for help
[00:57:23] <b-rex> read what i just said. internalize it. even if you don't agree now, you will later. promise.
[00:57:28] <wallbroken> and i came from solving a various hard problem that nobody here was able to solfe
[00:57:37] <wallbroken> so, my effort is enough
[01:02:53] <PaulWay[w]> wallbroken: have you ever heard of the XY problem?
[01:03:49] <PaulWay[w]> wallbroken: what's your problem there exactly?
[01:05:36] <wallbroken> PaulWay[w]: hello
[01:05:51] <wallbroken> well, the problem is that is not clear how to pass to the template the value
[01:06:08] *** Joins: henbruas (~henbruas@ti0003a400-3211.bb.online.no)
[01:06:26] <wallbroken> i can use {{ value }}
[01:06:39] <wallbroken> but the problem is that the view function is a new one
[01:06:52] *** Quits: ST47 (~ST47@user/st47) (Ping timeout: 252 seconds)
[01:06:55] <wallbroken> which must pass data to a template that is using a view class
[01:09:39] <PaulWay[w]> It looks like you're already doing that, by passing a dict to render().
[01:10:08] <djacobs> ironbeard, i suppose that is due to the fact that you're allowed to pass None too
[01:10:17] *** Joins: rje (~rje@50.54.137.153)
[01:10:45] <djacobs> keep in mind that python also allows named arguments, so you are able to skip the document root parameter all together
[01:11:05] <PaulWay[w]> wallbroken: why do you have lines 13 *and* 15?
[01:11:09] <djacobs> just explicitly name the mandetory arguments in that case
[01:11:35] <djacobs> Does that answer your question ironbeard?
[01:12:18] <djacobs> Hey GinFuyou, remember that beer package i promised you?
[01:12:42] <djacobs> would you mind telling me again what kinds of beers you prefer? :d
[01:13:02] <wallbroken> PaulWay[w]: to set that state if the condition happens
[01:13:47] <PaulWay[w]> What conditions do you mean?
[01:14:59] <wallbroken> PaulWay[w]: ok, i got your question
[01:15:01] <wallbroken> ignore that
[01:15:06] <wallbroken> it was a test
[01:15:38] <PaulWay[w]> OK.  What were you trying to test?
[01:17:30] <wallbroken> PaulWay[w]: i have a template
[01:17:43] <wallbroken> i want to add a variable using that logic
[01:18:05] <wallbroken> https://github.com/ClaudioViti/lookbook/blob/multi-user/shoes/views.py#L18
[01:18:13] <kevr> Is there a way to ignore non-model errors when running manage.py? I run into some errors that are caused because it doesn't know yet about a new model.
[01:18:23] <kevr> I just want to make and run migrations for the new guy.
[01:18:28] <wallbroken> this is the view that render the template where i want to add that new variable
[01:19:11] <GinFuyou> djacobs, pretty much anything that tastes like beer, and not like cider, gingerbread or stuff. I prefer fruits in my cider rather than beers.
[01:19:13] <PaulWay[w]> wallbroken: what does 'get_context_data' do?
[01:20:00] <djacobs> so no fruity beers
[01:20:03] <GinFuyou> kevr, than you are doing wrong most likely, you shouldn't not interact with db at module level
[01:20:23] <kevr> GinFuyou: Say what do what? I have to setup custom admin views.
[01:20:29] <djacobs> and regarding strenght? cause i could add some strong beers too (+10%)
[01:20:33] <kevr> All of the tutorials show importing a model there and using it.
[01:20:45] <kevr> But having that in app/admin.py without the migrations run yet cause errors.
[01:20:48] <wallbroken> PaulWay[w]: it passes the context
[01:20:55] <PaulWay[w]> Do you need to rebuild your migrations, or add a new one, kevr?
[01:21:02] <kevr> PaulWay[w]: New one.
[01:21:06] <PaulWay[w]> wallbroken: Yep.  What's the 'context' mean in this case?
[01:21:13] <GinFuyou> kevr, operation should be in some class or function. And again, need details
[01:21:27] <kevr> ...but it's just a decorator.
[01:21:32] <GinFuyou> djacobs, could be good to!
[01:21:40] <wallbroken> oh, are you doing the same as nedbat?
[01:21:50] <kevr> I should import them inside of the class?
[01:21:51] <wallbroken> are you asking me thousand of questions?
[01:22:21] <GinFuyou> No, importing is fine.
[01:22:25] <PaulWay[w]> I'm trying to understand what these views do.
[01:23:00] <wallbroken> PaulWay[w]: ignore that
[01:23:08] <wallbroken> i just want to create a new view function
[01:23:16] <wallbroken> that passes that "state" variable to the template
[01:23:18] <wallbroken> that's all
[01:23:19] <PaulWay[w]> So it seems to me that the context is the data being fed to the form.  But maybe it isn't, and I don't work with class based views, so I want to check.
[01:23:23] <GinFuyou> But if you do something that does a query, it will blow up if django is not initialized yet (since it has to setup DB connection first)
[01:23:24] <kevr> GinFuyou: Okay... so, there still remains an issue. The issue is that the model is being _used_ inside of the admin classes before it is migrated.
[01:23:30] <PaulWay[w]> Sorry, being fed to the template.
[01:23:53] <kevr> GinFuyou: So, I cannot write code related to a model before a migration is run, or?
[01:24:01] <kevr> I'd like it to be a bit more lazy if possible.
[01:24:33] <PaulWay[w]> Are you wanting to run code during the migration?
[01:24:40] <kevr> PaulWay[w]: No.
[01:24:41] <GinFuyou> Code that hits the db - yes you can't.
[01:24:41] <PaulWay[w]> (kevr)
[01:25:01] <GinFuyou> Usually you can just avoid it
[01:25:03] <kevr> None of the code hits the db.
[01:25:13] <kevr> Unless django admin code is doing that in the background.
[01:25:32] <GinFuyou> Well, what is the exact error?
[01:25:34] <PaulWay[w]> I'd put money on it, kevr.
[01:25:56] <kevr> I am literally just running migrate/makemigrations, but the problem is that, the app gets loaded up, and it ends up loading the admin classes that i try to "register" in admin.py, but since it's not migrated yet, there are issues
[01:26:16] <kevr> It's not that I'm using it at all personally yet
[01:26:27] <GinFuyou> It's should not be an issue normally
[01:27:26] <kevr> GinFuyou: "<class 'app.admin.ProjectAdmin'>: (admin.E106) The value of 'app.admin.ProtocolProjectsInline.model' must be a Model." for example.
[01:27:37] <kevr> It is not a model yet, and so that error is correct.
[01:27:44] <kevr> But how am I supposed to make it into a model if I can't migrate?
[01:27:55] <GinFuyou> mm, no it seems like a mistake in your code
[01:28:13] <GinFuyou> Model is always a model. It may not have db representation at all
[01:29:00] <ironbeard> @djaconbs: sorry, was afk and just saw that. Yeah, I think I realize now that "None" is an acceptable input. Because of the error I got when I didn't specify it, I thought it was strange, but the error was because my path didn't exist I suppose
[01:29:46] <kevr> Ahh, yes, indeed, the issue was that there was no back-reference, so it wasn't finding the many-to-many through model
[01:30:03] <kevr> That is why.
[01:30:18] <kevr> Alright.
[01:30:30] *** Joins: EvilDMP (~textual@django/moderator/EvilDMP)
[01:30:30] *** ChanServ sets mode: +v EvilDMP
[01:31:07] <djacobs> no problem ironbeard ;)
[01:31:30] <djacobs> and GinFuyou, it could take an month before i find enough different bottles
[01:31:41] <djacobs> but im getting them from the local breweries!
[01:32:01] <djacobs> And i want to make sure the box is full! :p
[01:32:23] <kevr> GinFuyou: thanks for your patience
[01:32:27] <kevr> i'm sorry to bother.
[01:38:50] <GinFuyou> djacobs, appreciated, but I don't even know how you could send it now... I believe mail doesn't allow alcohol.
[01:39:02] <GinFuyou> kevr, no problem!
[01:40:07] *** Quits: rje (~rje@50.54.137.153) (Quit: My computer has gone to sleep. ZZZzzz…)
[01:43:57] *** Quits: andreas3- (andreas303@ip227.orange.bnc4free.com) (Remote host closed the connection)
[01:48:05] *** Joins: bambanxx (~bambanx@181-163-43-25.baf.movistar.cl)
[01:48:15] *** Quits: Haudegen (~quassel@178.115.237.87.static.drei.at) (Quit: No Ping reply in 180 seconds.)
[01:48:50] *** Parts: blackout69 (~blackout6@net-109-116-208-45.cust.vodafonedsl.it) ()
[01:55:12] *** Joins: blackout69 (~blackout6@net-109-116-208-45.cust.vodafonedsl.it)
[01:56:07] *** Quits: ironbeard (~geoffrey@130-45-89-178.dyn.grandenetworks.net) (Quit: WeeChat 2.3)
[01:58:04] *** Parts: blackout69 (~blackout6@net-109-116-208-45.cust.vodafonedsl.it) ()
[01:58:57] *** Joins: blackout69 (~blackout6@net-109-116-208-45.cust.vodafonedsl.it)
[02:03:18] *** Joins: andreas303 (andreas303@ip227.orange.bnc4free.com)
[02:10:20] *** Joins: rje (~rje@50.54.137.153)
[02:20:55] *** Joins: rje_ (~rje@50.54.137.153)
[02:22:34] *** Quits: rje (~rje@50.54.137.153) (Ping timeout: 272 seconds)
[02:23:39] *** Quits: argento (~argent0@168-227-97-29.ptr.westnet.com.ar) (Ping timeout: 276 seconds)
[02:39:31] *** Quits: rje_ (~rje@50.54.137.153) (Remote host closed the connection)
[02:39:42] *** Quits: knbk (~quassel@84-24-92-123.cable.dynamic.v4.ziggo.nl) (Ping timeout: 256 seconds)
[02:40:06] *** Joins: rje (~rje@50.54.137.153)
[02:44:09] *** Quits: READ10 (~weechat@user/read10) (Quit: WeeChat 3.0.1)
[02:46:52] *** Quits: rje (~rje@50.54.137.153) (Quit: My computer has gone to sleep. ZZZzzz…)
[02:48:35] <PaulWay[w]> Reading about 'get_context_data' - I'm wondering why this would be implemented such that the semi-magical super().get_context_data(**kwargs) is always required.
[02:48:59] *** Quits: bambanxx (~bambanx@181-163-43-25.baf.movistar.cl) (Quit: My MacBook Air has gone to sleep. ZZZzzz…)
[02:50:23] *** Joins: bambanxx (~bambanx@181-163-43-25.baf.movistar.cl)
[02:50:31] <PaulWay[w]> Why doesn't the CBV call a method (say 'get_view_context_data') which normally returns an empty dict, but then does `context.update(get_view_context_data(**kwargs))` ?
[02:52:19] *** Quits: bambanxx (~bambanx@181-163-43-25.baf.movistar.cl) (Client Quit)
[02:54:11] *** Quits: dudek (~dudek@185.150.236.155) (Quit: Leaving)
[02:57:05] *** Quits: LuxuryMode (uid91005@id-91005.charlton.irccloud.com) (Quit: Connection closed for inactivity)
[02:58:20] *** Parts: blackout69 (~blackout6@net-109-116-208-45.cust.vodafonedsl.it) ()
[02:58:30] *** Quits: EvilDMP (~textual@django/moderator/EvilDMP) (Quit: My MacBook has gone to sleep. ZZZzzz…)
[03:04:08] *** Joins: EvilDMP (~textual@django/moderator/EvilDMP)
[03:04:08] *** ChanServ sets mode: +v EvilDMP
[03:04:33] *** Quits: EvilDMP (~textual@django/moderator/EvilDMP) (Client Quit)
[03:07:00] <FunkyBob> PaulWay[w]: ...
[03:07:09] <FunkyBob> why add another method?
[03:07:30] <FunkyBob> you've overriding a super-class method...
[03:08:18] <PaulWay[w]> It's too late now, anyway.
[03:09:02] <PaulWay[w]> That's the point - you shouldn't have to override a super-class method and remember to call super()...
[03:10:28] <FunkyBob> you want to alter how a class behaves
[03:10:38] <FunkyBob> just like that class alters how its parent behaves
[03:11:32] <PaulWay[w]> But I don't want to alter how the class behaves.
[03:11:37] <PaulWay[w]> I want to alter what data it has.
[03:12:33] <PaulWay[w]> And, more usually, I just want to add data to it.
[03:14:49] *** Joins: ovnicraft (~ovnicraft@corp-179-49-44-28.uio.puntonet.ec)
[03:16:53] <PaulWay[w]> So instead of a 'override behaviour' system, I thought it'd be better to have an 'add data' system.
[03:17:51] *** Quits: ovnicraft (~ovnicraft@corp-179-49-44-28.uio.puntonet.ec) (Client Quit)
[03:18:10] *** Joins: bambanxx (~bambanx@181.163.43.25)
[03:18:32] *** Joins: ovnicraft (~ovnicraft@179.49.44.28)
[03:22:11] *** Quits: ovnicraft (~ovnicraft@179.49.44.28) (Client Quit)
[03:23:52] *** Joins: ovnicraft (~ovnicraft@179.49.44.28)
[03:27:17] *** Quits: ovnicraft (~ovnicraft@179.49.44.28) (Client Quit)
[03:28:52] *** Joins: ovnicraft (~ovnicraft@179.49.44.28)
[03:29:52] <wallbroken> FunkyBob: could I ask you for an hint?
[03:30:11] <wallbroken> https://dpaste.org/7wjn#L18
[03:30:17] <wallbroken> i created this function from the scratch
[03:30:33] <wallbroken> it works, in the sense that it set the "state" variable as i want
[03:30:45] <wallbroken> but now, i have problems in passing it to the template
[03:30:49] <wallbroken> i did something wrong?
[03:31:10] <wallbroken> what i want to do is adding {{ state }} into my template
[03:31:23] <PaulWay[w]> wallbroken: we talked about the get_context_data function before.
[03:31:46] <wallbroken> PaulWay[w]: waht?
[03:32:31] <PaulWay[w]> What bit of that didn't you understand?
[03:33:24] *** Quits: bambanxx (~bambanx@181.163.43.25) (Quit: My MacBook Air has gone to sleep. ZZZzzz…)
[03:33:30] <FunkyBob> the view function looks fime to me
[03:34:04] <FunkyBob> wallbroken: what makes  you think there's a problem with it?
[03:34:21] <FunkyBob> PaulWay[w]: I've persistently advised against wallbroken using CBV because they hide what's going on
[03:34:28] <PaulWay[w]> Yes, I agree too.
[03:34:36] <FunkyBob> they have enough trouble as it is understanding things... no point hiding it in inherited functionality
[03:34:46] <PaulWay[w]> Especially these generic views.
[03:34:53] <wallbroken> FunkyBob: well, i'm not sure i did the right thing, but i created an url path
[03:34:54] <wallbroken>     path('shoes/<int:pk>/checkitemstate/', checkItemState, name='checkItemState'),
[03:34:59] <PaulWay[w]> Rewrite that whole thing from scratch.
[03:35:05] <wallbroken> when i access that url i get a blank page
[03:35:12] <wallbroken> i expected the json value
[03:35:41] <wallbroken> FunkyBob: it's clear what my goal is? i want to get the "state" variable from any template
[03:35:44] <PaulWay[w]> What have you done to find out why you're getting a blank page?
[03:35:57] <FunkyBob> wait, back up
[03:36:02] <FunkyBob> your wording makes me suspicious
[03:36:16] <FunkyBob> wait... JSON value?
[03:36:17] <FunkyBob> from what?
[03:36:36] <FunkyBob> if you want JSON, why are you rendering a template?
[03:37:04] <PaulWay[w]> It is technically possible to write JSON from a template... ;-)
[03:37:19] *** Quits: ovnicraft (~ovnicraft@179.49.44.28) (Quit: My MacBook has gone to sleep. ZZZzzz…)
[03:37:21] <wallbroken> FunkyBob: in fact my suspect is about that
[03:37:24] <PaulWay[w]> Not advised, and not good for long term sanity.
[03:37:26] <wallbroken> i don't need to render anything
[03:37:39] <wallbroken> i just want to pass the {{ state }} to the template
[03:37:48] <FunkyBob> ...
[03:37:52] <FunkyBob> what you just said makes no sense
[03:38:01] <wallbroken> ok, one step back
[03:38:04] <FunkyBob> because templates are a server-side toold for rendering content
[03:38:09] <PaulWay[w]> What's the difference, to you wallbroken, between "pass the {{state}} to the template" and "render anything"?
[03:38:14] <FunkyBob> do you mean you want to get 'state' in the browser?
[03:38:22] <FunkyBob> PaulWay[w]: you're diverting... please back off
[03:38:23] <wallbroken> https://github.com/ClaudioViti/lookbook/blob/multi-user/shoes/templates/shoes/shoe_list.html#L349
[03:38:27] <wallbroken> i need to remove this part
[03:38:30] *** Joins: ovnicraft (~ovnicraft@corp-179-49-44-28.uio.puntonet.ec)
[03:38:35] <wallbroken> and fill it with {{ state }}
[03:38:39] <wallbroken> ok?
[03:38:47] <FunkyBob> ok, well, that's that template
[03:38:52] <FunkyBob> why did you write a second view?
[03:39:07] <wallbroken> because you told me to do that
[03:39:12] <FunkyBob> you would need to add that state value into the context for thate template... whatever view is rendering it
[03:39:20] <FunkyBob> I told you to do what?
[03:39:29] <wallbroken> create a new function
[03:39:41] <FunkyBob> for the formset you were working on, yes
[03:39:55] <wallbroken> FunkyBob: i solved that problem by myself in a painful session
[03:39:59] <FunkyBob> it seems like you still don't understand how http works, or how requests map to views
[03:40:05] <wallbroken> the prolem was the template, not the view
[03:40:11] <FunkyBob> or how browser side and server side work are separated
[03:40:30] <FunkyBob> templates are purely on the server... they never reach the browser...
[03:40:37] <wallbroken> FunkyBob: if i add the state to the context
[03:40:43] <wallbroken> i shoud do it for each view
[03:40:50] <PaulWay[w]> FunkyBob: I think we're both confused about what wallbroken is doing and what wallbroken thinks - I'm just trying to not jump to conclusions.
[03:40:50] <FunkyBob> context is "all the data the template has access to"
[03:40:52] <wallbroken> right?
[03:40:57] <FunkyBob> why should you do it for each view?
[03:41:12] *** Quits: ovnicraft (~ovnicraft@corp-179-49-44-28.uio.puntonet.ec) (Client Quit)
[03:41:20] <wallbroken> because i need to add the state also in other templates other than the one I linked you to
[03:42:10] *** Joins: opqpop (~opqpop@154.6.28.93)
[03:42:27] <opqpop> Hi, is there a way to pass additional filters into a QuerySet's bulk_update()? Basically would like to add something like "orig_city_id = 52" into this pk filter that bulk_update uses, because my table is partitioned on orig_city_id and passing the partition filter helps scale up when updating a lot of records:
[03:42:27] <opqpop> https://github.com/django/django/blob/d8c90d4c22cb218f1c170eba086c53d3dff7fbc0/django/db/models/query.py#L569
[03:42:36] <FunkyBob> [oh, also... the logic in your view looks totally broken]
[03:42:50] <wallbroken> which view you're talking about?
[03:42:52] <FunkyBob> this Shoe is ordered if the user has _any_ ordered shoes?
[03:42:56] <FunkyBob> https://dpaste.org/7wjn#L18
[03:42:58] <FunkyBob> this view
[03:43:02] <FunkyBob> the only view you've linked to
[03:43:02] <wallbroken> yes, i need to rafinate that
[03:43:11] <FunkyBob> rafinate?
[03:43:13] <PaulWay[w]> FunkyBob: do you mean 'ordered' as in 'sorted' or ordered as in 'selected for sale'?
[03:43:25] <wallbroken> refine
[03:43:34] *** Joins: ovnicraft (~ovnicraft@corp-179-49-44-28.uio.puntonet.ec)
[03:43:39] <wallbroken> PaulWay[w]: the cases are:
[03:43:54] <wallbroken> the object is "in service"
[03:43:57] <FunkyBob> PaulWay[w]: I mean Ordered as in state = 'Ordered'
[03:44:04] <wallbroken> the object is "ordered by others"
[03:44:10] <wallbroken> the object is "ordered by me"
[03:44:20] <wallbroken> the object is "delivered to others"
[03:44:30] <wallbroken> the object is "delivered to me"
[03:44:32] <wallbroken> so to check that
[03:44:52] <wallbroken> i need to find the current user in delivered_users m2m field
[03:44:54] <wallbroken> and so on
[03:45:04] <wallbroken> but i will fix the logic after
[03:45:14] <wallbroken> now i just want to pass it to the template
[03:45:31] <wallbroken> and this is what i'm asking help about
[03:45:35] <FunkyBob> well, checking if the USER has ordered items doesn't answer "object is ordered by others" at all... so, y eah, needs work
[03:45:54] <wallbroken> no
[03:46:01] <FunkyBob> if you want to pass data to a template for it to use when rendering... put it in the context.
[03:46:18] <Rikem> wallbroken: for the particular view your passing context to a template which doesn't use that context
[03:46:31] <wallbroken> because when you order an object, the view checks if that object has been ordered by other people
[03:46:54] <wallbroken> FunkyBob: the best idea is keeping the function centralized
[03:47:01] <wallbroken> and reference that in each view?
[03:47:13] <wallbroken> when passing the context?
[03:47:57] <FunkyBob> I would have said make it a model method, but it requires both Shoe and User...
[03:48:33] <FunkyBob> you could make a template filter to get the value, or if it's really needed in many (most) templates, use a Context Processor to add it to all contexts
[03:48:48] <wallbroken> let me try
[03:49:03] <wallbroken> FunkyBob: i need to ask you if you know a way to order m2m list
[03:49:25] <wallbroken> i want to order by selected records
[03:49:37] <FunkyBob> same way you order any queryset
[03:49:53] <wallbroken> ok
[03:53:27] <wallbroken> https://dpaste.org/1dw0
[03:53:37] <wallbroken> this is the function referenced in each context
[03:53:46] *** Quits: PaulWay[w] (~PaulWay@2001:44b8:1110:f800:4b79:e11c:c2f:5c75) (Ping timeout: 272 seconds)
[03:54:39] <FunkyBob> but it doesn't really need request, does it?  just user
[03:55:29] <wallbroken> if i remove "request" i get an underline
[03:55:40] <wallbroken> "user" is not defined
[03:56:08] <wallbroken> i added this in the context:
[03:56:09] <wallbroken> context['state'] = checkItemState(self.request, self.pk)
[03:56:13] <FunkyBob> radical idea... but... pass user as an argument, instead of request?
[03:56:51] <FunkyBob> instead of passing the whole request object... just pass the property from it you need
[03:56:57] <FunkyBob> it actually makes the function even more useful
[03:57:25] <wallbroken> ok
[03:57:50] <FunkyBob> not sure why this needs explaining... you write code in other languages, this is not an idiomatic concept
[03:58:45] *** Quits: ovnicraft (~ovnicraft@corp-179-49-44-28.uio.puntonet.ec) (Quit: My MacBook has gone to sleep. ZZZzzz…)
[03:59:17] <wallbroken> 'ShoeListView' object has no attribute 'user'
[03:59:28] <FunkyBob> correct
[04:00:31] <FunkyBob> as always, if you want help, provide details
[04:00:34] <FunkyBob> we're not going to guess
[04:01:25] <wallbroken> https://github.com/ClaudioViti/lookbook/blob/multi-user/shoes/views.py#L53
[04:01:27] <wallbroken> i added this
[04:01:46] <wallbroken> this is the referenced function: https://github.com/ClaudioViti/lookbook/blob/multi-user/shoes/views.py#L53
[04:01:50] <FunkyBob> yes
[04:01:55] <FunkyBob> but self.user has never been a thing
[04:01:56] <wallbroken> https://github.com/ClaudioViti/lookbook/blob/multi-user/shoes/views.py#L595
[04:02:00] <FunkyBob> so why would it magically be one nhow?
[04:02:40] <FunkyBob> user is not an attribute of the view... is it?  it comes from the....?
[04:03:00] <wallbroken> yes, so i need to user = request.user ?
[04:03:07] <FunkyBob> why assign it?
[04:03:29] <FunkyBob> just pass  the value you need.
[04:03:53] <Rikem> FunkyBob has endless patience
[04:04:05] <FunkyBob> Rikem: it's not endless.... it's almost exhausted from today
[04:04:11] *** Joins: dre (~dre@2001:8003:c932:c301:44a6:1427:4d7d:b99a)
[04:04:18] <wallbroken> FunkyBob: context['state'] = checkItemState(self.request.user, self.pk)
[04:04:19] <FunkyBob> because despite wallbroken pasting screenshots of what they claim  to be their day job code
[04:04:30] <wallbroken> this way?
[04:04:41] <FunkyBob> I don't believe they are an employed coder... so many universal, basic aspects of coding escape them
[04:04:46] <FunkyBob> wallbroken: right
[04:04:55] <FunkyBob> wait... self.pk ?
[04:05:02] <FunkyBob> no, that can't be right
[04:05:13] <wallbroken> self.request.pk ?
[04:05:16] <FunkyBob> no
[04:05:23] <FunkyBob> stop guessing, and REASON about it
[04:05:27] <FunkyBob> this is a List view
[04:05:32] <FunkyBob> working on a List of Shoes
[04:05:37] <FunkyBob> so how can you have a single state?
[04:05:50] <wallbroken> yes, let me explain
[04:06:00] <wallbroken> checkItemState returns the state of a single shoe
[04:06:11] <wallbroken> so it needs a pk
[04:06:42] <FunkyBob> so how does what you just did make the slightest bit of sense?
[04:06:48] <FunkyBob> what is it you thought self.pk was?
[04:06:57] <FunkyBob> when did you think get_context_data would be called?
[04:07:05] <FunkyBob> yes... real questions... not rhetorical
[04:07:34] <wallbroken> are you saying that checkItemState shoud pass the state of all the items?
[04:07:48] *** Joins: opqpop4 (~opqpop@154.6.28.93)
[04:07:58] *** Quits: opqpop4 (~opqpop@154.6.28.93) (Client Quit)
[04:08:05] <FunkyBob> i'm asking for you to explain what you thought was happening
[04:08:06] <wallbroken> in that case, it should not have pk as an argument
[04:08:22] <wallbroken> well, i don't know how context was managed
[04:08:34] <FunkyBob> then go back to the tutorial, and start it again
[04:08:50] <FunkyBob> context is generated once in the request, and passed to the template
[04:08:54] <wallbroken> i think that get_context_data should be called when the view class receives the request
[04:08:59] <FunkyBob> the template renders, using values from the context
[04:09:08] <FunkyBob> it's called near the end of the view
[04:09:10] *** Quits: dre (~dre@2001:8003:c932:c301:44a6:1427:4d7d:b99a) (Quit: Leaving)
[04:09:31] <FunkyBob> after all the work is done, as it's about to render the template
[04:10:19] <wallbroken> so, my custom function checkItemState, what should it return?
[04:10:35] <wallbroken> an array of states?
[04:10:43] <FunkyBob> the premise of that function is nonsense currently
[04:10:56] <wallbroken> should i remove that?
[04:10:58] <FunkyBob> trying to join a list of states with a list of objects is a nightmare
[04:11:03] <FunkyBob> you should use a different approach
[04:11:24] <wallbroken> the purpose of that is to not write the same code N times voer the code
[04:11:32] <FunkyBob> yes, that part is fine
[04:11:33] <wallbroken> *around
[04:11:41] *** Quits: slavfox (~slavfox@ipv4-93-158-232-111.net.internetunion.pl) (Ping timeout: 252 seconds)
[04:11:51] <Rikem> You could add the function to the model, which I think FunkyBob has already suggested
[04:11:58] *** Joins: slavfox (~slavfox@93.158.232.111)
[04:11:59] <FunkyBob> you should add it to the model...
[04:12:02] <FunkyBob> the Shoe model
[04:12:04] <wallbroken> ok
[04:12:15] <FunkyBob> but to use it in the template, you will need a filter so you can pass the user to it
[04:12:56] <wallbroken> FunkyBob: wait
[04:13:03] <wallbroken> i moved that function to the model
[04:13:25] <FunkyBob> afk
[04:14:37] *** Joins: dre (~dre@2001:8003:c932:c301:44a6:1427:4d7d:b99a)
[04:15:12] <wallbroken> https://dpaste.org/NGS4#L167
[04:18:30] <Rikem> Are you tracking user orders anywhere? It seems like that would make more sense
[04:19:24] <wallbroken> in the model, i have fields to track the state
[04:19:26] *** Joins: ovnicraft (~ovnicraft@corp-179-49-44-28.uio.puntonet.ec)
[04:19:38] <wallbroken> but what i'm doing is to pass the state to the template
[04:20:31] <Rikem> So just pass model.state?
[04:21:02] <wallbroken> yes, but i need to create that
[04:21:03] <wallbroken> right?
[04:21:13] <Rikem> If you have state in Shoe class why are you making a temporary state variable?
[04:21:24] <Rikem> just change the state in the model, and render the model
[04:21:55] <Rikem> change the state in the instance, and render the instance
[04:22:00] <Rikem> I mean, I think
[04:22:35] <wallbroken> no
[04:22:43] <wallbroken> the state is dinamically calculated
[04:22:52] <wallbroken> checking in each field
[04:23:01] <wallbroken> and that function would do that
[04:23:06] <Rikem> In checkItemState function?
[04:23:09] <wallbroken> yes
[04:23:15] <Rikem> But that doesn't even look at Shoe.state
[04:23:23] <Rikem> So what is the point of having a state variable in the model?
[04:23:37] <wallbroken> who fills state?
[04:23:45] *** Joins: argento (~argent0@168-227-97-29.ptr.westnet.com.ar)
[04:24:13] <Rikem> You should be updating Shoe.state and using that in the template
[04:24:50] *** Quits: argento (~argent0@168-227-97-29.ptr.westnet.com.ar) (Client Quit)
[04:25:48] <wallbroken> "you should" ?
[04:25:52] <wallbroken> what do you mean?
[04:25:58] <wallbroken> that i should do it by hand?
[04:26:02] <Rikem> Oh... that 'state' refers to the physical condition of the item
[04:26:28] <wallbroken> and the state can be automatically calculated using the logic of the algorithm i wrote in "checkItemState"
[04:26:36] <wallbroken> why should i set it manually?
[04:26:53] <wallbroken> i consider it pointless
[04:27:14] <Rikem> so checkItemState has nothing to do with Shoe.state?
[04:28:54] <wallbroken> no
[04:29:37] <FunkyBob> firstly, as a model method the first argument should be 'self'
[04:29:48] <FunkyBob> it will be the instance of the Shoe class
[04:30:52] <wallbroken> {{ shoe.checkItemState() }}
[04:31:01] <Rikem> wallbroken: but you just said, 'in the model i have fields to track the state'
[04:31:15] <Rikem> Why are you not updating those state?
[04:31:15] <FunkyBob> wallbroken: as you know from the tutorial, you can't call methods like that
[04:31:21] <FunkyBob> also, you need to pass in the current user
[04:31:29] <wallbroken> {{ shoe.checkItemState }}
[04:31:34] <wallbroken> i can do this way
[04:31:38] <FunkyBob> so, as I mentioned before, you will need a filter to let you pass an argument to the method
[04:31:50] <wallbroken> yes, i need to pass the current user
[04:33:17] <wallbroken> .filter(user_has=user)
[04:33:19] <wallbroken> something like that
[04:33:38] <FunkyBob> no
[04:33:41] <wallbroken> https://dpaste.org/qr9y
[04:33:48] <wallbroken> this is the current function i put in the model
[04:33:56] <FunkyBob> filter() is for adding WHERE clauses to your SQL
[04:34:14] *** Quits: ovnicraft (~ovnicraft@corp-179-49-44-28.uio.puntonet.ec) (Quit: My MacBook has gone to sleep. ZZZzzz…)
[04:34:21] <FunkyBob> when I said filter before, I meant a Template Filter
[04:34:21] <wallbroken> FunkyBob: what's the point?
[04:34:48] <FunkyBob> of which?
[04:34:58] *** Joins: ovnicraft (~ovnicraft@corp-179-49-44-28.uio.puntonet.ec)
[04:35:47] <wallbroken> 2:03:56 AM - FunkyBob: filter() is for adding WHERE clauses to your SQL
[04:36:05] <FunkyBob> you seemed to be wanting to try to use filter on your queryset to get the user....
[04:36:12] <FunkyBob> I was trying to point out that it can't do that
[04:36:21] <FunkyBob> and that was not the filter I was talking about before
[04:36:34] <FunkyBob> https://docs.djangoproject.com/en/3.2/ref/templates/language/#filters <-- this is the template filter syntax
[04:37:13] <FunkyBob> https://docs.djangoproject.com/en/3.2/howto/custom-template-tags/#writing-custom-template-filters
[04:37:16] <wallbroken> oh, never used this stuff
[04:37:21] *** Joins: opqpop52 (~opqpop@098-148-064-063.res.spectrum.com)
[04:37:37] <FunkyBob> the simplest solution is a filter to let you pass user to that method of your shoe
[04:37:46] <wallbroken> FunkyBob: my goal is to pass the current user to the model function
[04:37:47] <wallbroken> right?
[04:37:50] <FunkyBob> so  it would become something like {{ shoe|currentStatus:user }}
[04:37:54] <FunkyBob> right
[04:37:59] *** Quits: opqpop52 (~opqpop@098-148-064-063.res.spectrum.com) (Client Quit)
[04:38:13] <FunkyBob> breakfast time
[04:38:21] *** Joins: opqpop94 (~opqpop@098-148-064-063.res.spectrum.com)
[04:38:39] *** Quits: opqpop94 (~opqpop@098-148-064-063.res.spectrum.com) (Client Quit)
[04:39:07] *** Quits: ovnicraft (~ovnicraft@corp-179-49-44-28.uio.puntonet.ec) (Client Quit)
[04:39:49] *** Quits: opqpop (~opqpop@154.6.28.93) (Ping timeout: 246 seconds)
[04:40:32] *** Joins: Skyz (~Skyz@user/skyz)
[04:40:47] <wallbroken> well, it's not really clear how to call the function then
[04:42:51] <wallbroken> Invalid filter: 'currentStatus'
[04:45:29] <FunkyBob> by using a custom filter
[04:45:34] <FunkyBob> that  you need to create
[04:45:39] <FunkyBob> and load into your template
[04:45:47] <FunkyBob> by following the documentation I linked you to
[04:48:38] <wallbroken> do you want to scary?
[04:48:39] <wallbroken> https://dpaste.org/Fpcw
[04:49:35] *** Quits: PantelicGR (~PantelicG@user/pantelicgr) (Quit: Leaving)
[04:50:26] <FunkyBob> that looks... absurd
[04:51:03] <Rikem> that's one word for it
[04:52:10] *** Joins: bambanxx (~bambanx@pc-223-49-214-201.cm.vtr.net)
[04:52:18] <wallbroken> {{ shoe|currentStatus:user }}
[04:52:26] <wallbroken> this is like a where in sql
[04:52:52] <wallbroken> so, it's like select user from users where user=currentUser
[04:52:55] <wallbroken> something like that
[04:53:05] <wallbroken> oh no
[04:53:29] <wallbroken>  select * from Shoe where user=currentUser
[04:53:35] <wallbroken> that's right?
[04:53:44] *** Quits: bambanxx (~bambanx@pc-223-49-214-201.cm.vtr.net) (Client Quit)
[04:54:42] <FunkyBob> nop it;'s nothing at all to do with where in sql
[04:54:45] *** Joins: bambanxx (~bambanx@pc-223-49-214-201.cm.vtr.net)
[04:54:52] <FunkyBob> queryset.filter() is like where in SQL
[04:55:03] <Rikem> I wonder if it's a school/college project final or something
[04:55:39] <FunkyBob> Rikem: reputedly it's a project to help a friend's business
[04:56:05] *** Quits: moldy (~rene@user/moldy) (Read error: Connection reset by peer)
[04:56:56] <wallbroken> FunkyBob: https://docs.djangoproject.com/en/3.2/ref/templates/language/#tags
[04:57:00] <wallbroken> should i need to call the function using the "if" clause?
[04:57:01] <Rikem> The best thing would be to help him setup an open source ecommerece platform
[04:57:21] <FunkyBob> Rikem: yeah, except it's not ecommerce, as such
[04:57:25] <FunkyBob> yes, we covered this, Rikem
[04:57:30] <wallbroken> Rikem: it would be nice to have some django skills
[04:57:47] <FunkyBob> wallbroken: no, because you should be writing a custom template filter, NOT a tag
[04:58:53] <wallbroken> https://docs.djangoproject.com/en/3.2/ref/templates/language/#filters
[04:58:56] <wallbroken> i red this
[04:59:03] <wallbroken> but it's just saying how to filter
[04:59:09] <wallbroken> how to apply filtering criteria
[04:59:10] <FunkyBob> yes...
[04:59:11] <FunkyBob> as I said
[04:59:14] <FunkyBob> that's the syntax
[04:59:20] <wallbroken> yes, and i already have it
[04:59:23] <FunkyBob> then I linked you to the docs on how to write your own
[04:59:29] <FunkyBob> alreadyt have whcih "it'?
[04:59:42] <wallbroken> oh ok
[04:59:51] *** Quits: n00bn00b (~N00b@79.184.96.125.ipv4.supernova.orange.pl) (Ping timeout: 255 seconds)
[05:00:54] <wallbroken> https://www.youtube.com/watch?v=dhh21crSohs
[05:00:59] *** ubernost1um is now known as ubernostrum
[05:01:01] <wallbroken> oh sorry, wrong paste
[05:01:06] <FunkyBob> once again you didn't read what I said, and it caused you problems.
[05:01:13] <Rikem> You should run through the tutorials again wallbroken, I mean that template was just bizarre
[05:01:13] <FunkyBob> morning, ubernostrum
[05:01:38] <wallbroken> FunkyBob: yes, i lost the second link
[05:01:40] <FunkyBob> Rikem: that's generous of you, to assume they did the tutorial even once
[05:01:46] <Rikem> lol
[05:02:01] <FunkyBob> wallbroken: the second link... that was on the immediate next line?
[05:02:11] <FunkyBob> Rikem: they've already admitted before to lying about having completed the tutorial
[05:02:17] <wallbroken> FunkyBob: exactly. that.
[05:02:22] <Rikem> FunkyBob: Yeah I remember
[05:02:24] <wallbroken> because i focused on the first one
[05:02:44] <Rikem> I often check in on the FunkyBob wallbroken saga now
[05:02:54] <FunkyBob> ok, breakfast done... time to get back to paying work
[05:03:28] <wallbroken> Rikem: everybody here told me they stopped helping me
[05:04:10] <FunkyBob> yeah, because you lie, and do random and nonsense things
[05:04:16] <FunkyBob> all of which you've directly admitted to
[05:04:23] <Rikem> I think people are just getting frustrated, wallbroken, people here are more than happy to help
[05:04:40] <FunkyBob> you claim to be a paid C# developer, then write code that shows a fundamental lack of understeanding basic coding
[05:05:14] *** Joins: moldy (~rene@user/moldy)
[05:05:26] <wallbroken> FunkyBob: yes, i'm a C# developer
[05:05:56] <FunkyBob> wallbroken: yet you seem to get stumped by things like scope, inheritance, and even basic flow control
[05:06:35] <wallbroken> FunkyBob: the problem is that i haven't understood what the django workflow is
[05:06:36] <FunkyBob> I mean, kudos to you for your dedication... you've stuck at this
[05:06:46] <Rikem> wallbroken, have you used python before?
[05:06:48] <FunkyBob> wallbroken: well, that's why the tutorial is there
[05:06:52] <wallbroken> Rikem: yes
[05:07:00] <FunkyBob> wallbroken: but it goes beyond that
[05:07:14] <FunkyBob> how long have I been telling you to stop using CBV, and use plain functions so you CAN CLEARLY SEE THE WORKFLOW
[05:07:19] <FunkyBob> but you keep pushing back
[05:07:23] <FunkyBob> andrefusing to listen
[05:07:27] <FunkyBob> then wondering why I get frustrated?
[05:07:31] <wallbroken> well, today i created one
[05:07:45] <FunkyBob> yeah, a fucking month after I started  telling you
[05:07:54] <wallbroken> the function i made today is a simple function with get parameters in and returns something out
[05:08:04] <wallbroken> but that's a function
[05:08:06] <wallbroken> not a method
[05:08:16] <wallbroken> the difference is that a method is inside a class
[05:08:28] <wallbroken> and when you create an instance of that class, you can use that method
[05:08:33] <FunkyBob> how have you diverted to talking about methods now?
[05:08:36] <wallbroken> over an object of that class
[05:08:37] <FunkyBob> why?
[05:09:05] <wallbroken> because it's a concept i understand as a function
[05:09:17] <wallbroken> and we can use it inside a class based view
[05:09:26] <FunkyBob> a method is a function bound to a class.
[05:09:33] <FunkyBob> it's still a function, just a special sort of function
[05:09:59] <Rikem> wallbroken: The Mozilla tutorial is also very good if you've not gone through that one
[05:10:11] <FunkyBob> Rikem: their Python tutorial? or django tutorial?
[05:10:16] <Rikem> django
[05:10:25] <FunkyBob> have not read it, so can't recommend it.
[05:10:53] <FunkyBob> do they have it in Italian?
[05:10:59] <Rikem> No :(
[05:11:03] <Rikem> I checked
[05:11:32] <Rikem> Quite a few languages apart from Italian
[05:11:42] <wallbroken> FunkyBob: i'm still stuck at this:
[05:11:43] <wallbroken> https://docs.djangoproject.com/en/3.2/howto/custom-template-tags/#writing-custom-template-filters
[05:11:46] <FunkyBob> yeah... a surprising theme in translated docs, I've noticed
[05:11:54] <FunkyBob> wallbroken: stuck on what, exactly?
[05:12:01] *** Joins: ovnicraft (~ovnicraft@179.49.44.28)
[05:12:29] <wallbroken> well, now i know how to create a template filter, but i don't know how to apply it to define a function to call my shoe function
[05:13:17] <FunkyBob> you've added the method to your Shoe model, yes?  so the filter will act basically as a wrapper of that
[05:13:27] <FunkyBob> to call that method, with the Shoe and User instances you pass it
[05:13:36] <wallbroken> FunkyBob: it would be fine to see some code example
[05:13:45] <FunkyBob> yes, but we all know where that leads
[05:13:52] *** Quits: ovnicraft (~ovnicraft@179.49.44.28) (Client Quit)
[05:13:55] <FunkyBob> to you copying the code, never understanding it, and then complaining that it doesn't work
[05:14:13] <wallbroken> i know what to do
[05:14:18] <FunkyBob> then do it.
[05:14:29] <wallbroken> i need to call that function in the shoe model applying the template filter i create
[05:14:36] <wallbroken> now i want to know how to do it
[05:14:38] <FunkyBob> ... no
[05:14:44] <wallbroken> why no?
[05:14:52] <FunkyBob> you need to write the filter so it will call that model method.
[05:15:01] <wallbroken> we already have a filter
[05:15:05] <FunkyBob> where?
[05:15:26] <wallbroken> the template filter
[05:15:34] <FunkyBob> where?
[05:15:46] <FunkyBob> you write the template filter function? and registered it in a template library?
[05:15:50] <FunkyBob> wrote
[05:15:57] <wallbroken> absolutely not
[05:16:00] <FunkyBob> ...
[05:16:03] <wallbroken> wait
[05:16:06] <FunkyBob> but you say you already have the filter.
[05:16:10] <wallbroken> shoe|currentStatus:user
[05:16:14] <wallbroken> i was referring to this
[05:16:23] <FunkyBob> that was my example of what you will be able to do in your template
[05:16:29] <FunkyBob> after you writ the currentStatus filter
[05:16:36] <wallbroken> ok
[05:17:50] <wallbroken> the filter function must return the shoe model beloging to the current user?
[05:17:59] <FunkyBob> no
[05:18:10] <FunkyBob> all it needs to do is return the result of calling tyour model method
[05:18:27] <FunkyBob> stop _wanting_ this t o be more complicated.
[05:18:57] <FunkyBob> if you really wanted, you could put all the status logic into the filter itself.
[05:19:05] <FunkyBob> and skip the model method entirely
[05:19:54] <wallbroken> https://dpaste.org/pvO3
[05:19:59] <wallbroken> well
[05:20:07] <wallbroken> it's wrong
[05:20:12] <FunkyBob> yes
[05:20:21] <FunkyBob> starting with... why did you pass self?
[05:20:40] <FunkyBob> why did y ou call it 'cut'?  why are the arguments called 'value' and 'arg'?
[05:20:52] <FunkyBob> I know t he answer to the last one... you cut'n'pasted from the docs without understanding
[05:21:35] <wallbroken> https://dpaste.org/7ocP
[05:21:37] <tm007> Mornin
[05:21:43] <FunkyBob> morning, tm007
[05:21:56] <wallbroken> well, you told me that functions in the model needs "self" as an argument
[05:21:59] <FunkyBob> wallbroken: don't just change the code... ANSWER THE QUESTIN
[05:22:09] <FunkyBob> wallbroken: yes, the method declaration needs it
[05:22:18] <FunkyBob> it's implicitly passed to the method... as you should know by now
[05:22:22] <wallbroken> i called "cut" because i copied/pasted the example on the django tutorial
[05:22:25] <FunkyBob> you even asked about that one day
[05:23:04] <FunkyBob> wallbroken: once again... frustratingly.. I find myself having to tell you
[05:23:08] <FunkyBob> NEVER include code you don't understand
[05:23:24] <FunkyBob> "oh, I'll just cut and paste this">... no... don't do that
[05:23:32] <FunkyBob> slow down, spend the time to understand
[05:23:36] <tm007> Read this somwhere: The SQL Language is the leakiest abstraction in software engineering. The optimizer can choose different plans for the same query on the same table leading to drastic IO difference, locking behaviors, waits, blocks and resources consumption. Client is left with utter confusion.
[05:23:47] <tm007> FunkyBob: thoughts?
[05:23:57] <wallbroken> FunkyBob: if i would be honest, if i shouldn't include code i don't understand, 80% of the project would be gone
[05:24:21] <tm007> wallbroken: If you'd keep stacking code you understand
[05:24:30] <FunkyBob> wallbroken: yes... and that's rather telling
[05:24:31] <tm007> You'd be high and dry by now
[05:24:38] <FunkyBob> ^^
[05:25:13] <FunkyBob> tm007: don't see how that makes it leaky...
[05:25:25] <FunkyBob> tm007: biggest problem with SQL is it's a tragedy of a language
[05:25:26] <wallbroken> FunkyBob: for example, that function we created, where should be added?
[05:25:37] <nedbat> wallbroken: do you think you are unable to understand Django?
[05:25:39] <FunkyBob> it fails at implementiong the relational model, it fails at basic language design, it fails at consistency
[05:25:45] <FunkyBob> wallbroken: which function?
[05:25:46] <tm007> Django does have some magic out of the box, I agree
[05:25:54] <wallbroken> the filter function
[05:25:56] <tm007> It can be a bit tricky to understand
[05:26:11] <FunkyBob> wallbroken: the custom filter docs tell you that... albeit, they say where above where I linked you
[05:26:16] <FunkyBob> so, a fair question
[05:26:34] <FunkyBob> https://docs.djangoproject.com/en/3.2/howto/custom-template-tags/#code-layout
[05:27:07] <tm007> wallbroken: admire your perseverance man
[05:27:17] <wallbroken> django/template/defaultfilters.py
[05:27:25] <tm007> tragedy of a language?
[05:27:30] <FunkyBob> tm007: absolutely
[05:27:48] <FunkyBob> tm007: https://www.dcs.warwick.ac.uk/~hugh/TTM/HAVING-A-Blunderful-Time.html
[05:28:38] <FunkyBob> wallbroken: why did you paste that pathname?
[05:29:03] <wallbroken> it looks like the path where i should add the filter function
[05:29:07] <FunkyBob> no
[05:29:10] <FunkyBob> read the docs I linked
[05:29:16] <FunkyBob> 00:13 < FunkyBob> https://docs.djangoproject.com/en/3.2/howto/custom-template-tags/#code-layout
[05:30:12] <FunkyBob> tm007: that article rather assumes  you understand the relational model itself, not as perverted by SQL
[05:31:00] <tm007> I did read the book: designing data intensive application. Have some idea
[05:31:47] *** Joins: ovnicraft (~ovnicraft@corp-179-49-44-28.uio.puntonet.ec)
[05:31:56] <tm007> on the relational model
[05:32:01] *** Quits: ovnicraft (~ovnicraft@corp-179-49-44-28.uio.puntonet.ec) (Client Quit)
[05:32:03] <tm007> Let me read it
[05:32:41] <tm007> Right after graduation, I took a web development course/bootcamp
[05:32:51] <tm007> There was a senior guy a there
[05:33:13] <tm007> He was so desperate to learn to code, but he just couldn't understand it
[05:33:56] <tm007> He had a degree, took courses, did tutorials in native language
[05:34:19] <tm007> He just wasn't made for coding
[05:34:32] <tm007> html and css was his level
[05:34:37] <FunkyBob> tm007: personally, I think wallbroken has far too many assumed notions about how  things work... but when I try to get them to explain their reasoning so we can uncover them... they rarely answer
[05:34:50] <tm007> Yeah
[05:34:53] <FunkyBob> html+css are a form of coding
[05:34:57] <tm007> wallbroken:  is not of that category
[05:35:07] <tm007> FunkyBob: yes
[05:35:12] <tm007> He wanted to go deeper
[05:35:19] <tm007> PHP and Laravel
[05:35:25] <tm007> But he really struggled
[05:35:37] <tm007> I learnt more in 2 weeks than he did for years
[05:35:50] <tm007> You can't go far with HTML CSS tbf
[05:35:57] <tm007> not on the pay cheque count
[05:36:05] <wallbroken> well, as the tutorial says, i create a "templatefilters" folder at the same level of the app name
[05:36:16] <wallbroken> then, inside ov it i created "shoes_extras.py" file
[05:36:36] <FunkyBob> don't forget the __init__.py
[05:36:37] <tm007> It's been over 4 years, I've worked in fancy companies
[05:36:44] <tm007> Think he's without a job :(
[05:36:45] *** Quits: clemente (~Daniel@balticom-142-72-136.balticom.lv) (Ping timeout: 255 seconds)
[05:36:58] <FunkyBob> also
[05:37:00] <FunkyBob> read that again
[05:37:01] <wallbroken> FunkyBob: it's a blank file?
[05:37:06] <FunkyBob> it's "templatetags" not "templatefilters"
[05:37:12] <FunkyBob> yes.. __init__.py is a blank file
[05:37:17] <FunkyBob> Python needs it to know this is a package
[05:37:41] *** Joins: READ10 (~weechat@user/read10)
[05:39:09] <wallbroken> ok. noe i need to understand what to put inside the .py file
[05:39:53] <wallbroken> the tutorial tells to put:
[05:39:54] <wallbroken> from django import template
[05:39:54] <wallbroken> register = template.Library()
[05:39:57] <FunkyBob> yes
[05:40:01] <FunkyBob> start with that
[05:40:51] <wallbroken> done
[05:41:46] <FunkyBob> next write the filter function
[05:43:56] <wallbroken> https://dpaste.org/ewbi#L9
[05:44:01] <wallbroken> user argument is unknown
[05:44:22] <FunkyBob> no surprises there
[05:45:13] <wallbroken> then?
[05:45:25] <FunkyBob> you haven't finished writing your filter function
[05:46:13] <wallbroken> it should not just return my model function?
[05:46:37] <FunkyBob> and here we see why I don't believe you really are a paid programmer
[05:46:45] <FunkyBob> you expect it to magically guess what values to work on?
[05:46:55] <FunkyBob> you don't want the Shoe class... you want the instance from the template
[05:47:06] <FunkyBob> you also need to pass it the user
[05:47:57] <wallbroken> firt problem:
[05:48:01] <wallbroken> how to pass the user?
[05:48:20] <wallbroken> trough the request?
[05:48:22] <FunkyBob> look at the example I showed you of how it will look in the template
[05:48:33] <FunkyBob> and look at the filter writing documentation
[05:48:50] <FunkyBob> the user is automatically added to your template context by a Context Processor.
[05:49:00] <tm007> wallbroken: your day job is as a programmer?
[05:49:11] <wallbroken> tm007: yes
[05:49:22] <tm007> thought this was for your friend
[05:49:26] <FunkyBob> tm007: apparently it's writing DB queries and reports in C#
[05:49:38] <tm007> Nice man!
[05:50:36] <wallbroken> sometimes i write "stored procedures". it's a programmability inside the database
[05:51:23] <wallbroken> so, what do i need to do is pass the template instance?
[05:51:26] <wallbroken> not clear
[05:52:31] <FunkyBob> wallbroken: your filter will be passed the thing it's filtering, and optionally an argument
[05:52:38] <FunkyBob> in your case, you'll require the argument
[05:52:51] <FunkyBob> so your filter function needs to take two arguments -- the shoe, and the user
[05:54:02] *** Quits: dez (uid92154@user/dez) (Quit: Connection closed for inactivity)
[05:55:05] <tm007> wallbroken: man you work on some cool stuff
[05:55:15] <wallbroken> https://dpaste.org/gRz2
[05:55:17] <tm007> what's the longest query you've written
[05:55:25] <tm007> in terms of number of lines?
[05:55:40] <FunkyBob> wallbroken: again, no, not Shoe.. that's the model. you want shoe, the instance
[05:55:58] <FunkyBob> somehow I think the idea of methods still isn't clear to y ou.... or how an instance and a class are related, but different
[05:56:57] <wallbroken> a class could have methods inside of it
[05:57:04] <wallbroken> when you create the instance of a class
[05:57:09] <wallbroken> you will have an object
[05:57:18] <wallbroken> that object will have methods inside
[05:57:22] <FunkyBob> in Python, the class and the instance are objects... but sure,
[05:57:46] <FunkyBob> wallbroken: right... so why are you importing the Shoe class, and calling the method on it?
[05:57:53] <FunkyBob> instead of the shoe instance  you were passed
[05:58:07] <FunkyBob> not rhetorical -- I want an answer
[05:58:30] <tm007> I know the answer
[05:58:41] <tm007> It's because he doesn't have the confidence
[05:59:09] <tm007> wallbroken: it's actually 80% from within your understanding.
[05:59:50] <wallbroken> FunkyBob: well, i'm checking on the view
[06:00:05] <FunkyBob> checking what on the view?
[06:00:14] <wallbroken> to figure out how the shoe instance was made
[06:00:16] <wallbroken>  shoe = get_object_or_404(queryset, pk=pk)
[06:00:21] <FunkyBob> that's irrelevant
[06:00:31] <wallbroken> i don't know how to pass the shoe instance
[06:00:38] <FunkyBob> that's also irrelevant
[06:00:46] <FunkyBob> we're talking _only_ about the filter function now
[06:01:33] <FunkyBob> assume it's been passed a Shoe instance called 'shoe, and a User instance called 'user'
[06:01:40] <wallbroken> ok
[06:01:41] <FunkyBob> how they get there is outside the scope of the function
[06:02:10] *** Quits: Skyz (~Skyz@user/skyz) (Quit: Client closed)
[06:03:32] <wallbroken> https://dpaste.org/x2Jz
[06:06:30] <FunkyBob> much better.
[06:06:42] <FunkyBob> next you need to register this filter with the Library you created
[06:06:48] <FunkyBob> refer to the docs for how to do this
[06:08:35] <wallbroken> it's just needed to add: @register.filter(name='getUserState')
[06:08:40] <wallbroken> before the filter definition
[06:08:41] <wallbroken> right?
[06:08:48] <FunkyBob> right... doesn't even need the name=
[06:09:00] <FunkyBob> if the name of the function is what you want
[06:10:29] <FunkyBob> next, in your template you need to tell it to load that custom tag/filter library
[06:10:39] <FunkyBob> using {% load %}... again, as shown in the docs
[06:10:58] <tm007> FunkyBob: Mr. Miyagi
[06:11:44] *** Joins: PaulWay[w] (~PaulWay@2001:44b8:1110:f800:4b79:e11c:c2f:5c75)
[06:11:58] <wallbroken> 'getUserState' is not a registered tag library
[06:12:06] <FunkyBob> 00:57 < FunkyBob> next, in your template you need to tell it to load that custom tag/filter library
[06:12:07] <wallbroken> {% load getUserState %}
[06:12:16] <FunkyBob> what did  you call the .py file you put the filter in?
[06:12:45] <wallbroken> shoes_extras.py
[06:13:01] <FunkyBob> then that is the name you need to {% load %}
[06:14:24] <wallbroken> {{ shoe|getUserState:user }}
[06:14:28] <wallbroken> that's correct?
[06:14:48] <FunkyBob> yes
[06:14:54] <PaulWay[w]> This seems to be a bit of roundabout way of getting information?
[06:15:28] <wallbroken> 'User' object has no attribute 'available'
[06:15:43] <FunkyBob> well, that's your code...
[06:15:51] <FunkyBob> PaulWay[w]: yeah... but since it needs user
[06:15:57] <FunkyBob> and this is over a list of shoe instances
[06:16:18] <FunkyBob> wallbroken: your method refers to user.available...
[06:16:49] <wallbroken> FunkyBob: yes
[06:17:25] <wallbroken> i should use self. instead?
[06:17:58] <FunkyBob> err... no?
[06:18:10] <FunkyBob> I don't know... what is it supposed to be checking?
[06:18:17] <FunkyBob> did you mean shoe.available ?
[06:18:22] <FunkyBob> if so, then yes- self
[06:18:25] <wallbroken> yes
[06:18:27] <FunkyBob> but that was in your very first function
[06:18:35] <FunkyBob> user.available... even before it was a method
[06:21:05] *** Joins: djapo (~archangel@user/djapo)
[06:21:53] <wallbroken> no. the code is not setting the state
[06:22:01] <wallbroken> print(state) returns nothing
[06:22:20] <FunkyBob> ...
[06:22:33] <FunkyBob> set state where? where did you print?  why are you even printing, since this is all work don in the template?
[06:23:20] <wallbroken> https://github.com/ClaudioViti/lookbook/blob/multi-user/shoes/models.py#L186
[06:23:32] <wallbroken> ops
[06:23:38] <FunkyBob> well, that will only be printed if that's the elif path it takes
[06:23:39] <wallbroken> i put it inside the elif
[06:23:43] <wallbroken> yes, sorry
[06:24:18] *** Quits: iomari891 (~iomari891@105.112.138.38) (Quit: WeeChat 3.0.1)
[06:24:25] <wallbroken> ok, it works
[06:24:27] <wallbroken> thank you
[06:24:39] *** Quits: Rikem (~mike@user/rikem) (Ping timeout: 268 seconds)
[06:30:53] <FunkyBob> wouldn't it be nice if you could use arbitrary methods as filters?  obv security problems, but you can force annotations to allow-list methods as filters
[06:31:15] <FunkyBob> if that were the case, this could have just been a method and done as {{ shoe.currentStats|user }}
[06:31:51] <wallbroken> 'str' object has no attribute 'checkItemState'
[06:31:57] <wallbroken> i came in this problem
[06:32:38] <FunkyBob> ok?
[06:33:53] <wallbroken> https://dpaste.org/rfTB
[06:34:43] <FunkyBob> so whatever you passed to your filter... was a tr
[06:34:48] <FunkyBob> a str
[06:35:22] *** Quits: djapo (~archangel@user/djapo) (Quit: Lost terminal)
[06:35:27] <FunkyBob> and not a shoe instance
[06:36:28] <wallbroken> https://dpaste.org/Db4U#L351
[06:36:38] <wallbroken> oh ok
[06:37:21] <FunkyBob> ok, using it like that again makes no sense at all
[06:37:35] <FunkyBob> because your template does not render a single shoe... it renders a LIST of shoes
[06:37:48] <FunkyBob> so the error comes from there being nothing in the context there called 'shoe'
[06:38:23] <wallbroken>       {% for shoe in object_list %}
[06:38:23] <wallbroken>   content: '{{ shoe|getUserState:user }}';
[06:38:23] <wallbroken>   {% endfor %}
[06:38:27] <wallbroken> i did it this way
[06:38:57] <FunkyBob> but that won't make sense in your CSS then
[06:39:05] <FunkyBob> it can only have one value for content
[06:39:07] <bparker> why are you still helping
[06:39:23] <wallbroken> FunkyBob: looks like it works
[06:39:26] <FunkyBob> bparker: because today they actually made progress
[06:39:45] <FunkyBob> bparker: also, am waiting for a cow-orker to debug their code so I can progress :P
[06:39:56] <wallbroken> you told me that "they" in english is used when the gender is unknown, right?
[06:40:28] <FunkyBob> that's one time, yes
[06:40:36] <FunkyBob> I also use it when gender is irrelevant
[06:40:47] <FunkyBob> [so, most of the time]
[06:40:54] <bparker> is their model still completely broken where an 'order' is logged simply by the user account being in a m2m field on a shoe model
[06:41:12] <FunkyBob> bparker: it's not really an 'order' as such but yes
[06:41:40] <wallbroken> how would you design?
[06:41:52] <bparker> with a separate table to store more state
[06:42:00] <bparker> like at the very least... when this transaction occurred
[06:42:10] <FunkyBob> wallbroken: given what I know of your system, I would have a separate table to indicate a User requseted a Shoe, and the current state of that request
[06:42:13] <wallbroken> an user can order many items, but an item can be bound only to one user
[06:42:17] <FunkyBob> or even a journal table of states for t hat request
[06:42:37] <FunkyBob> if it can only be bound to a single user... then m2m is wrong
[06:42:49] <wallbroken> bparker: my application IS NOT AN ECOMMERCE
[06:42:59] <wallbroken> is an inventory management system for a distribution center
[06:43:02] <bparker> even worse.
[06:43:04] <FunkyBob> if it's more like a Library, tracking who the Shoe is loaned to... then Shoe should have a ForeignKey
[06:43:28] <FunkyBob> but all this code is to be scrapped... because wallbroken assured me this was a proof of concept never t ogo into production
[06:43:35] <bparker> riiight
[06:43:40] <schinckel> Hahaha.
[06:43:45] <wallbroken> a set of stores shares a distribution center. and right now each store must make a call to that to know the state of the merch
[06:43:47] <bparker> famous last words
[06:45:06] <FunkyBob> wallbroken: but there isn't just a single instance of each Shoe, right?  they're ordering stock of shoe models?
[06:45:17] <FunkyBob> so this really does sound like a B2B e-commerce tool
[06:45:41] <wallbroken> each shoe has its own SKU, so you can manage it as a separate entity
[06:45:58] <FunkyBob> each individual shoe?  or each model of shoe?
[06:46:02] <wallbroken> SKU = Stock Keeping Unit
[06:46:09] <wallbroken> each individual shoe
[06:46:10] <FunkyBob> we know what a SKU is
[06:46:25] <FunkyBob> so when I buy a pair of shoes, it has a different SKU to another identical pair of shoes?
[06:46:34] <FunkyBob> sounds like a serial number, not a sku
[06:46:37] <wallbroken> generally speaking, SKU identifies a model of shoe
[06:46:51] <bparker> on top of a SKU you would still have inventory identifying how many of those SKUs you have
[06:46:58] <wallbroken> but a SKU + a progressive number in my model i have, identiies each shoe
[06:46:59] <FunkyBob> so not "each individual shoe"...
[06:47:25] <wallbroken> SKU = model of shoe
[06:47:29] <FunkyBob> again, it's hard to help  you when you contradict yourself like that
[06:47:38] <wallbroken> SKU + counter = each individual shoe
[06:47:46] <wallbroken> now it looks more clear?
[06:47:48] <FunkyBob> yes
[06:47:56] <FunkyBob> that is how everyone else would have interpreted SKU
[06:48:10] <FunkyBob> and since you're ordering stock, there should be quantities, right?
[06:48:21] <FunkyBob> not just "I need one pair of this type of shoe"
[06:49:33] <bparker> this sounds just like several apps I already wrote and are in use by different companies
[06:49:41] <FunkyBob> or, as you have it currently... "I need the pair. The one and only pair."
[06:50:13] <FunkyBob> last I saw each 'store' (aka User) can request each type of shoe once... and that's it.
[06:50:29] <wallbroken> FunkyBob: yes, but "stocks" are very limited amount, so, by design we decided to manage two individual shoes of the same model as a separated entities
[06:50:32] <bparker> keeping track of orders, payments, SKUs, inventory, warehouses, allocations, shipment tracking etc., we do all this same stuff
[06:51:04] <tm007> Are there open source projects for this?
[06:51:09] <FunkyBob> tm007: likely
[06:51:11] <tm007> Oddoo?
[06:51:12] <bparker> probably tons
[06:51:18] <bparker> maybe not django as much but still
[06:51:26] <tm007> Odoo
[06:51:29] <FunkyBob> ERP
[06:51:40] <FunkyBob> really, it's ERP
[06:51:47] <tm007> Yup
[06:52:10] <tm007> Are you guys familiar with Odoo?
[06:52:16] <tm007> Pretty popular I believe
[06:52:18] <FunkyBob> the name rings a bell
[06:52:25] <tm007> It's built on top of Pyramid
[06:52:29] <tm007> framework
[06:52:37] <FunkyBob> that's still a thing? :P
[06:52:49] <tm007> Lol
[06:52:56] <PaulWay[w]> Biting
[06:54:19] *** Joins: iomari891 (~iomari891@105.112.138.38)
[06:54:23] <tm007> Have to check if they still use Pyramid
[06:54:33] <tm007> and if my info is correct lol
[06:54:40] <wallbroken> i really won't belive that making a web application would be that hard
[06:54:54] <wallbroken> it requires to much effort
[06:55:15] <FunkyBob> again, it would have been a lot easier if you'd spent the time to understand the basics first
[06:55:19] <tm007> wallbroken: yeah man
[06:55:23] <tm007> it is a lot of work!
[06:55:30] <tm007> And where are your tests??????
[06:55:36] <FunkyBob> and also stopped using your practice of "do random shit, and complain when it doesn't work"
[06:55:38] <schinckel> I've been working on this one web application for about 14 years.
[06:55:46] <schinckel> And it's still not done.
[06:55:52] <tm007> schinckel: Django?
[06:56:15] <schinckel> For about the last 12 years, yeah. Prior to that it was mod_python...
[06:57:32] <wallbroken> FunkyBob: when you really don't know what you're doing, you have 2 changes: 1) stop it all and start understanding from the scratch 2) try doing random stuff hoping that it will work (and sometimes happens)
[06:57:33] <tm007> How was web2.py?
[06:57:58] <tm007> Doing random stuff is the worst idea.
[06:58:04] <FunkyBob> wallbroken: doing _reasoned_ stuff, sure... but not random bullshit
[06:58:18] <tm007> Note coding is a better idea
[06:58:22] <FunkyBob> basic science...
[06:58:26] <tm007> wallbroken: Have you checked out Odoo?
[06:58:33] <tm007> It's open source I believe
[06:58:36] <FunkyBob> "If this works how I think, then whe I do _this_, it should do _that_"
[06:58:37] <wallbroken> no
[06:58:46] <tm007> It has all the features you ned plus much much more
[06:59:09] <tm007> https://www.odoo.com/app/inventory
[06:59:25] <tm007> Random shit would be better suited to this.
[06:59:32] <tm007> You can just click your way around
[06:59:55] <FunkyBob> wallbroken: worse... after your approach of "doing random shit" kept failing you, you just kept on using it.
[07:00:09] <tm007> Seriously though
[07:00:15] <tm007> Why reinvent the wheel man?
[07:00:25] <tm007> Is someone paying you a lot to do it?
[07:00:32] <tm007> Just use an out of the box solutionn
[07:00:43] <tm007> Come back here and learn some proper stuff man
[07:01:31] <tm007> If you can master SQL, you can do Django too
[07:02:01] <tm007> wallbroken: man seriously try it!
[07:02:25] <tm007> https://hub.docker.com/_/odoo
[07:04:50] *** Quits: READ10 (~weechat@user/read10) (Quit: WeeChat 3.0.1)
[07:09:34] <wallbroken>  elif self.delivered_user.exists():
[07:09:39] <wallbroken> this is not returning true
[07:10:28] <schinckel> > Odoo is the most installed business software in the world.
[07:10:32] <schinckel> That's a pretty bold statement.
[07:11:34] <mattmcc> For what values of 'business software'?
[07:14:45] <schinckel> One could argue that Excel was "business software"
[07:15:48] *** Quits: chiz (~alkjkljkl@cpe-184-153-212-20.twcny.res.rr.com) (Ping timeout: 272 seconds)
[07:16:08] <tm007> did not know that!
[07:16:16] <tm007> Odoo is pretty good
[07:16:46] <tm007> schinckel: was web2.py popular back in the days?
[07:17:17] <schinckel> Never used web2.py. We used a raw mod_python application. It was horrible.
[07:18:03] *** Quits: bambanxx (~bambanx@pc-223-49-214-201.cm.vtr.net) (Quit: My MacBook Air has gone to sleep. ZZZzzz…)
[07:18:04] *** Quits: Xof (~Xof@157-131-136-66.dedicated.static.sonic.net) (Quit: Bye.)
[07:19:43] <FunkyBob> tm007: I worked on a web2py project for a while
[07:19:53] <FunkyBob> there were some good ideas in there... but it was scary full of magics
[07:20:11] <FunkyBob> their error logging/inspection thing was pretty slick
[07:20:42] <FunkyBob> it would pickle the exception and traceback, then provide an admin-like UI for reviewing them
[07:20:52] <hemebond> web2py 🤮
[07:20:53] <schinckel> Wow, looking at my first commit (at least, the first one when we moved to mercurial) I see we started using SQLAlchemy.
[07:21:58] <FunkyBob> not surprising
[07:22:19] <schinckel> Yeah, for some reason I thought that SQLA wasn't around when we started.
[07:22:40] <schinckel> Found my `handler(req)` request handler function.
[07:23:24] <schinckel> Takes a SOAP request, and turns it into a python object, before looking up the relevant function, running it and building a SOAP response.
[07:23:27] <schinckel> Horrid, horrid times.
[07:23:34] <FunkyBob> iirc SQLA pre-dates Django
[07:24:03] <FunkyBob> there was that competing framework built of off-the-shelf tools...
[07:25:36] <FunkyBob> their argument was "why should we put in all the effort to maintain all the parts, instead of focusing on our niche?"
[07:25:39] <FunkyBob> which made a lot of sense
[07:26:35] <FunkyBob> except here we are 15 years later... Django is thriving, and I can't even remember the name of that other framework
[07:27:37] <tm007> FunkyBob: nice!
[07:30:22] *** Joins: bambanxx (~bambanx@pc-223-49-214-201.cm.vtr.net)
[07:35:24] *** Joins: glik22 (~glik22@99-36-164-253.lightspeed.snjsca.sbcglobal.net)
[07:40:11] *** Joins: djapo (~archangel@user/djapo)
[07:43:10] <tm007> My last company had a legacy app in web2.py
[07:43:30] <tm007> didn't get to work much on it
[07:43:40] <tm007> my time there was up
[07:44:04] <tm007> they had variable names in camelCase lol
[07:44:52] *** Quits: audiocat (~audio@2603-8081-1800-00ad-22ac-dc5d-4600-e5df.res6.spectrum.com) (Remote host closed the connection)
[07:45:10] *** Joins: audiocat (~audio@2603-8081-1800-00ad-9a66-7d6f-37d7-ca3f.res6.spectrum.com)
[07:45:13] <FunkyBob> tm007: the one I was working on, some C# people wrapped the web2py ORM... basically killing its utility
[07:45:30] <FunkyBob> and... they didn't seem to understand exceptions, so everytrhing was a method that returned (value, error)
[07:45:58] <tm007> so that's where you get your patience from
[07:46:08] <FunkyBob> nope
[07:46:52] <tm007> c# people doing python
[07:47:09] <FunkyBob> it's odd, as my original Python guru quite loves C#, thinks it's staticlly typed Python
[07:47:15] <tm007> wonder what that's like
[07:47:20] <tm007> Yeah
[07:48:49] <FunkyBob> anyway... the company realised believing Google when they blessed web2py was a huge mistake, and were working to move all new code to flask microservices
[07:49:53] <tm007> sounds like a sound choice
[07:50:27] <FunkyBob> indeed
[07:50:40] <FunkyBob> it was a great and fascinating place to work, full of a lot of very good engineers
[07:51:03] <tm007> in Australia?
[07:51:07] <FunkyBob> hamstrung by, in our teams case, a client who was unwilling to fund sufficient development
[07:51:10] <FunkyBob> yes, in aus
[07:52:00] <FunkyBob> unfortunately, all that tech debt stymied development progress
[07:53:34] <tm007> yeah the usual suspect
[07:55:07] *** Joins: bitdex (~bitdex@gateway/tor-sasl/bitdex)
[07:59:46] *** Joins: majdal (~majdal@bras-base-toroon0954w-grc-63-142-113-216-11.dsl.bell.ca)
[08:02:57] <PaulWay[w]> I like how wallbroken has ignored the obvious pitfall of 'try to understand what you're doing' and gone for 'change things randomly'.
[08:04:24] <tm007> takes a lot of courage
[08:04:29] <tm007> and determination
[08:06:29] <PaulWay[w]> "Baldrick, you are fortunate in that you have not been cursed by the ravages of intelligence."
[08:06:50] <hemebond> 👍
[08:06:51] *** Quits: Thanattt (~Thanatos@102.91.4.38) (Ping timeout: 276 seconds)
[08:07:55] *** Joins: clawh (~clawh@78.10.204.236)
[08:23:40] *** Quits: audiocat (~audio@2603-8081-1800-00ad-9a66-7d6f-37d7-ca3f.res6.spectrum.com) (Ping timeout: 256 seconds)
[08:25:34] *** Quits: majdal (~majdal@bras-base-toroon0954w-grc-63-142-113-216-11.dsl.bell.ca) (Ping timeout: 246 seconds)
[08:26:24] *** Quits: djapo (~archangel@user/djapo) (Ping timeout: 255 seconds)
[08:38:04] *** Joins: majdal (~majdal@bras-base-toroon0954w-grc-63-142-113-216-11.dsl.bell.ca)
[08:41:11] <tm007> 👍
[08:41:51] *** Joins: Elzington_ (~Elzington@static-198-54-128-62.cust.tzulo.com)
[08:45:51] *** Quits: Elzington (~Elzington@104.129.24.124) (Ping timeout: 276 seconds)
[08:49:50] *** Joins: audiocat (~audio@2603-8081-1800-00ad-9f93-c162-db16-790c.res6.spectrum.com)
[09:21:30] *** Quits: bambanxx (~bambanx@pc-223-49-214-201.cm.vtr.net) (Quit: My MacBook Air has gone to sleep. ZZZzzz…)
[09:28:29] <serafeim> hello friends
[09:34:31] *** Quits: majdal (~majdal@bras-base-toroon0954w-grc-63-142-113-216-11.dsl.bell.ca) (Ping timeout: 246 seconds)
[09:39:17] *** Joins: vdamewood (~vdamewood@fedora/vdamewood)
[09:47:29] *** Joins: vinleod (~vdamewood@fedora/vdamewood)
[09:49:39] *** Quits: vdamewood (~vdamewood@fedora/vdamewood) (Ping timeout: 255 seconds)
[09:57:49] *** Quits: Xaldafax (~xaldafax@cpe-198-72-160-101.socal.res.rr.com) (Quit: Bye...)
[09:58:30] *** Quits: serghei (~egrep@user/serghei) (Quit: serghei)
[10:02:34] *** Joins: mihael (~mihael@2001:4454:2c6:b000:d14b:4683:aa80:97c9)
[10:06:43] <dre> is there a way to set a wrap break in a template?
[10:07:29] <dre> I have a template that is showing a URL in a small box ( RML template to make PDFs ) -> the url is too long so it goes onto a new line, but instead I'd like to break the URl at the first '/'
[10:08:50] <dre> well look at that, https://docs.djangoproject.com/en/3.2/ref/templates/builtins/#wordwrap
[10:09:52] *** Joins: rje (~rje@75.104.86.42)
[10:11:55] *** Quits: rje (~rje@75.104.86.42) (Read error: Connection reset by peer)
[10:12:42] *** Joins: rje (~rje@75.104.86.42)
[10:18:01] <PaulWay[w]> Amazing.
[10:18:33] <PaulWay[w]> dre: you can also ellipsize URLs too...
[10:37:58] *** Joins: domhnall (~developer@user/domhnall/x-2887755)
[10:38:50] <dre> PaulWay[w], my method doesn't work, so... ellipsize?
[10:40:59] *** Quits: rje (~rje@75.104.86.42) (Read error: Connection reset by peer)
[10:44:21] *** Joins: rje (~rje@65.141.156.170)
[10:44:24] *** Quits: rje (~rje@65.141.156.170) (Client Quit)
[10:44:33] <PaulWay[w]> dre: I'm just trying to remember from https://docs.djangoproject.com/en/3.2/ref/templates/builtins/
[10:45:07] <PaulWay[w]> Try url|truncatechars:10
[10:46:00] <dre> ah
[10:46:04] <dre> yeah truncate won't work
[10:46:10] <PaulWay[w]> mmm?
[10:46:12] <dre> need the full url but with a linebreak within
[10:46:44] <dre> might have to make a custom filter to just inject a space in. a space works.
[10:47:05] <PaulWay[w]> I assume you're doing this to the text within the <A> tag, not the href property of the A itself...
[10:47:31] <dre> yep
[10:47:43] <PaulWay[w]> Do you need to show the full URL?
[10:47:52] <PaulWay[w]> Could you just describe where it's linking to?
[10:48:13] <dre> and a particular pdf template language, so I don't know if a lot of sensible html/css functions really work
[10:48:44] <PaulWay[w]> Hmmm.
[10:49:15] <dre> nah full url; work for a client. I think I'm just going to have to inject a space, the wordwrap:21 doesn't work for me because it puts in a <br/> which literally doesn't break for some god-forgotten reason
[10:52:55] *** Joins: EvilDMP (~textual@django/moderator/EvilDMP)
[10:52:55] *** ChanServ sets mode: +v EvilDMP
[11:01:34] <dre> now I'm getting mad
[11:02:00] <dre> {{ account_url|url_for_print|wordwrap:10|custom_filter }}
[11:02:21] <dre> I made custom_filter, def custom_filter(value): print(value)
[11:02:36] <dre> and it just prints the url_for_print. wordwrap isn't getting used at all,
[11:05:03] <GinFuyou> why url has words?
[11:06:00] <dre> ok. I looked up a random doc site and it said that it's chars. but actual django docs can be interpreted as words.
[11:06:05] <dre> is there a charwrap ?
[11:08:42] <GinFuyou> Django doc seem pretty clear to me.
[11:09:22] <dre> "Wraps words at specified line length."
[11:09:49] <dre> sure yeah in reflection it makes sense
[11:09:51] <dre> just not what i awnt
[11:09:54] <dre> want *
[11:10:18] <GinFuyou> Yeah, I don't see anything like char wrap
[11:10:51] <dre> I'll just make my own filter, maybe try and put something like the nbsp?
[11:11:32] <dre> or the opposite to nbsp
[11:12:08] <GinFuyou> I'm not sure what your markup requires
[11:12:23] <dre> neither, lemme try
[11:20:27] *** vinleod is now known as vdamewood
[11:27:13] *** Joins: n00bn00b (~N00b@79.184.96.125.ipv4.supernova.orange.pl)
[11:42:49] *** Quits: EvilDMP (~textual@django/moderator/EvilDMP) (Quit: My MacBook has gone to sleep. ZZZzzz…)
[11:44:05] *** Quits: mihael (~mihael@2001:4454:2c6:b000:d14b:4683:aa80:97c9) (Quit: Client closed)
[11:52:27] *** Joins: Guddu (~Guddu@171.79.58.196)
[11:55:49] *** Joins: EvilDMP (~textual@django/moderator/EvilDMP)
[11:55:49] *** ChanServ sets mode: +v EvilDMP
[11:58:49] *** Joins: pycode (~pycode@2001:b07:5d28:551:9fad:223f:22a7:d07c)
[12:00:01] <schinckel> dre: You can use <wbr> tags in HTML.
[12:00:16] <schinckel> That will break there if it needs to.
[12:10:30] *** Joins: rje (~rje@75.104.86.42)
[12:12:06] *** Quits: rje (~rje@75.104.86.42) (Remote host closed the connection)
[12:12:08] <schinckel> I tend to use CSS to wrap/truncate text rather than templates.
[12:12:34] *** Quits: kevr (~kevr@user/kevr) (Ping timeout: 240 seconds)
[12:12:43] *** Joins: rje (~rje@75.104.86.42)
[12:13:27] *** Quits: rje (~rje@75.104.86.42) (Read error: Connection reset by peer)
[12:14:47] *** Joins: rje (~rje@75.104.86.42)
[12:17:59] *** Quits: rje (~rje@75.104.86.42) (Read error: Connection reset by peer)
[12:18:03] *** Joins: kevr (~kevr@user/kevr)
[12:23:36] *** Quits: PaulWay[w] (~PaulWay@2001:44b8:1110:f800:4b79:e11c:c2f:5c75) (Ping timeout: 272 seconds)
[12:27:02] *** Joins: rje (~rje@75.104.86.42)
[12:27:59] *** Quits: rje (~rje@75.104.86.42) (Read error: Connection reset by peer)
[12:29:29] *** Joins: Rikem (~mike@user/rikem)
[12:33:27] *** Joins: rje (~rje@75.104.86.42)
[12:34:10] *** Quits: rje (~rje@75.104.86.42) (Read error: Connection reset by peer)
[12:35:27] *** Joins: rje (~rje@75.104.86.42)
[12:36:09] <schinckel> Hmm. I wonder if I can use https://devblog.kogan.com/blog/custom-relationships-in-django to do a relationship where there is a shared FK, and the date in this model is "contained by" the daterange in the target model...
[12:36:38] <schinckel> Not tonight though...
[12:37:58] *** Quits: rje (~rje@75.104.86.42) (Read error: Connection reset by peer)
[12:43:24] *** Joins: rje (~rje@75.104.86.42)
[12:46:30] *** Quits: rje (~rje@75.104.86.42) (Read error: Connection reset by peer)
[12:49:30] *** Joins: clemente (~Daniel@balticom-142-72-136.balticom.lv)
[12:53:48] *** Joins: rje (~rje@75.104.86.42)
[12:54:16] <FunkyBob> schinckel: keep us posted
[12:55:03] *** Quits: rje (~rje@75.104.86.42) (Read error: Connection reset by peer)
[12:56:33] *** Joins: elmcrest (~elmcrest@static.48.211.217.95.clients.your-server.de)
[12:56:49] <elmcrest> hey everybody. so Freenode is deprecated?
[12:57:10] *** Quits: pycode (~pycode@2001:b07:5d28:551:9fad:223f:22a7:d07c) (Ping timeout: 272 seconds)
[12:57:27] *** Joins: rannnn8888 (~rannnn888@bzq-79-182-123-214.red.bezeqint.net)
[12:57:41] <FunkyBob> elmcrest: they kinda did that to themselves, yeah...
[13:00:45] <elmcrest> yeah I've only scanned some headlines. ok thx for confirming FunkyBob
[13:02:12] <elmcrest> by accident any react heads here? ... struggling a little with redux-toolkit
[13:03:15] <FunkyBob> yeah
[13:03:19] <FunkyBob> burn redux
[13:03:38] <elmcrest> what else for a huuuuuge app?
[13:03:47] *** Joins: knbk (~quassel@84-24-92-123.cable.dynamic.v4.ziggo.nl)
[13:04:06] *** Joins: rje (~rje@75.104.86.42)
[13:04:25] <FunkyBob> react has a lot of it built in these days, with useReducer
[13:04:44] <FunkyBob> however... there was a nice one I saw based on 'atoms' and promises... can never remember the name
[13:05:09] *** Quits: rje (~rje@75.104.86.42) (Read error: Connection reset by peer)
[13:05:20] <elmcrest> ok sure, but useReducer is still redux - at least from the abstraction side of things
[13:05:28] <elmcrest> or the "thought process" if you like - right?
[13:07:44] <FunkyBob> no it's not
[13:07:49] <FunkyBob> useReducer is built into react now
[13:07:58] <FunkyBob> similar idea, yes
[13:08:11] *** Joins: rje (~rje@75.104.86.42)
[13:09:50] *** Quits: rje (~rje@75.104.86.42) (Client Quit)
[13:09:52] *** Joins: Haudegen (~quassel@178.115.237.87.static.drei.at)
[13:12:19] *** Joins: rje (~rje@75.104.86.42)
[13:13:56] *** Quits: rje (~rje@75.104.86.42) (Client Quit)
[13:16:27] *** Joins: rje (~rje@75.104.86.42)
[13:17:48] <elmcrest> ok
[13:18:04] *** Quits: rje (~rje@75.104.86.42) (Client Quit)
[13:20:33] *** Joins: rje (~rje@75.104.86.42)
[13:21:44] *** Quits: rje (~rje@75.104.86.42) (Read error: Connection reset by peer)
[13:22:25] <elmcrest> still when working with multiple teams I can't think of a better solution
[13:24:39] *** Joins: rje (~rje@75.104.86.42)
[13:26:24] *** Joins: ColCrunch (~ColCrunch@pool-100-0-215-56.bstnma.fios.verizon.net)
[13:26:54] *** Quits: rje (~rje@75.104.86.42) (Read error: Connection reset by peer)
[13:33:00] *** Joins: rje (~rje@75.104.86.42)
[13:34:33] *** Quits: rje (~rje@75.104.86.42) (Read error: Connection reset by peer)
[13:41:44] *** Joins: thiras (~thiras@user/thiras)
[13:43:44] *** Joins: rje (~rje@75.104.86.42)
[13:44:28] *** Quits: rje (~rje@75.104.86.42) (Read error: Connection reset by peer)
[13:44:36] <ColCrunch> Hello! I am currently trying to figure out how to properly use django-admin inline forms. Here is my code: https://gist.github.com/colcrunch/5de6dc3af31e5e52ea9021fa6410b24c ... I am trying to figure out why an AuthGroup is not created when I create a Group. I don't get any errors so I have not included a traceback.
[13:45:54] <ColCrunch> I have tried overriding the save_formset function in GroupAdmin, but formset.save() does absolutely nothing despite the form being valid.
[13:46:06] *** Quits: GinFuyou (~GinFuyou@reya.cloud.tilaa.com) (Ping timeout: 256 seconds)
[13:50:07] *** Joins: rje (~rje@75.104.86.42)
[13:50:52] *** Quits: rje (~rje@75.104.86.42) (Read error: Connection reset by peer)
[13:54:03] *** Joins: rje (~rje@75.104.86.42)
[13:54:45] *** Quits: EvilDMP (~textual@django/moderator/EvilDMP) (Quit: My MacBook has gone to sleep. ZZZzzz…)
[13:55:31] *** Quits: rje (~rje@75.104.86.42) (Read error: Connection reset by peer)
[14:02:32] *** Quits: n00bn00b (~N00b@79.184.96.125.ipv4.supernova.orange.pl) (Ping timeout: 256 seconds)
[14:04:09] *** Joins: EvilDMP (~textual@django/moderator/EvilDMP)
[14:04:09] *** ChanServ sets mode: +v EvilDMP
[14:13:50] *** Joins: n00bn00b (~N00b@79.184.96.125.ipv4.supernova.orange.pl)
[14:14:47] *** Quits: n00bn00b (~N00b@79.184.96.125.ipv4.supernova.orange.pl) (Client Quit)
[14:23:23] *** Joins: doev (~doev@p549d7555.dip0.t-ipconnect.de)
[14:26:35] *** Quits: Caterpillar (~caterpill@user/caterpillar) (Ping timeout: 252 seconds)
[14:27:07] *** Joins: brylie (~Thunderbi@88-114-218-113.elisa-laajakaista.fi)
[14:27:25] <doev> I want to create a ModelForm but have problems to import the model. The ModelForm is in ./django/frontend/forms.py and the model in /django/mymodels/mymodel.py
[14:28:22] <doev> from ..mymodel.mymodel import mymodel     <- ValueError: attempted relative import beyond top-level package
[14:30:06] *** Quits: brylie (~Thunderbi@88-114-218-113.elisa-laajakaista.fi) (Client Quit)
[14:37:26] <doev> I renamed my forms.py cause there is a collision with django-internals. I manage to import with "from mymodels.mymodel ..." but how can I tell it to pyCharm? The import is underlined red.
[14:37:54] <FunkyBob> err
[14:38:04] <FunkyBob> why is any of your code inside the django package?
[14:38:25] <doev> there is no code inside the django-package,
[14:38:35] <FunkyBob> well, there is from the paths yhour pasted
[14:38:41] <FunkyBob> s/yhour/you/
[14:38:53] <FunkyBob> also, what is mymodel.py supposed to be?
[14:38:56] <wallbroken> FunkyBob: https://dpaste.org/AiXT#L18
[14:39:01] <wallbroken> what wrong with this endif?
[14:39:03] <wallbroken> endif
[14:39:05] <doev> ok /django was a replacement for this chat. Its /myproject"...
[14:39:14] <wallbroken> Invalid block tag on line 520: 'endif', expected 'endwith'. Did you forget to register or load this tag?
[14:39:21] *** Joins: Thanatos (~Thanatos@197.210.77.171)
[14:39:23] <wallbroken> 520 is line 18
[14:39:30] <wallbroken> it looks correct
[14:39:33] <FunkyBob> wallbroken: on line 16 you have a space between the % and the }
[14:39:38] <FunkyBob> so the if never started
[14:40:08] <FunkyBob> doev: and relative to that where is your manage.py ?
[14:40:42] <doev> when I use "from ..mymodels.mymodel import mymodel" then PyCharm is ok with it, but after runserver I get "ValueError: attempted relative import beyond top-level package"
[14:41:10] <doev> FunkyBob, my manage is in ./myproject
[14:41:31] <FunkyBob> ok... so from now on yhou can leave off that dir... only paths relative to manage.py ok?
[14:42:10] <FunkyBob> doev: next... do you really have a file called mymodels.py ?
[14:42:23] <doev> FunkyBob, I see that I forget to set ./myproject as an source-folder in PyCharm. It works now.
[14:42:39] <FunkyBob> ok
[14:42:43] <wallbroken> FunkyBob: 	
[14:42:43] <wallbroken> Invalid block tag on line 538: 'else', expected 'endwith'. Did you forget to register or load this tag?
[14:42:45] <doev> FunkyBob, no, I replaces the names for this chat.
[14:42:49] <wallbroken> i have endwith
[14:42:59] <FunkyBob> doev: well, stop doing that
[14:43:02] <FunkyBob> it's just messing things up
[14:43:02] <wallbroken> https://dpaste.org/AiXT#L18,44
[14:43:22] <FunkyBob> wallbroken: did you fix line 16 yet?
[14:43:27] <wallbroken> yes
[14:43:54] <doev> FunkyBob, sometimes the names contains some informations you don't want to make public.
[14:43:58] <wallbroken> https://dpaste.org/vCj5
[14:44:40] <FunkyBob> wallbroken: that's a mad mess of if/else and so on... and your irregular indentation isn't helping anyone
[14:45:38] <wallbroken> it's hard to read?
[14:46:00] <schinckel> FunkyBob: Not only did I solve it, I solved it in a generic-ish manner!
[14:46:10] <FunkyBob> schinckel: do I look surprised?
[14:46:30] <FunkyBob> wallbroken: the fact the unbalanced/mismatched tags don't jump out at you... suggests yes
[14:47:32] <wallbroken> FunkyBob: i know that there are many if/else, but they are all needed
[14:49:01] <FunkyBob> but not tidy
[14:49:14] <FunkyBob> and it looks tome like there's an exrta {% else  %}
[14:49:16] *** Quits: clemente (~Daniel@balticom-142-72-136.balticom.lv) (Ping timeout: 272 seconds)
[14:49:29] <FunkyBob> just before {% if shoe.available == False %}
[14:50:02] <wallbroken> ok, i'll check
[14:50:31] <wallbroken> FunkyBob: going back to yesterday's discussion: i taked with the company. they told me that SKU identifies a model, but not the size
[14:51:06] <wallbroken> so, to identify the object itself, you need an extra information
[14:51:21] <FunkyBob> https://dpaste.org/qbO1
[14:51:44] <FunkyBob> wallbroken: sure, but do you need to track individual items? or just quantities of them?
[14:51:46] <wallbroken> sku + size + progressive number (this last one if you have multiple items of the same size)
[14:52:00] <FunkyBob> wait.. size is separate from sku??
[14:52:04] <wallbroken> yes
[14:52:37] <FunkyBob> sounds broken to me
[14:53:09] <FunkyBob> i would have expected (model#, size) to form the SKU
[14:53:20] <elmcrest> yes, I agree, broken
[14:53:25] <wallbroken> it could depend on the factory brand?
[14:53:37] <elmcrest> except it's part of the product to be surprised based on the size :)
[14:53:37] <wallbroken> maybe somebody of them have their own model
[14:54:29] <elmcrest> "I want white sneakers, please!" - "there you go!" ... it's a fast checkout though :D
[14:55:09] *** Joins: clemente (~Daniel@balticom-142-72-136.balticom.lv)
[14:56:06] <FunkyBob> wallbroken: a good ERP system would have supplier order codes separate from their own SKUs
[14:59:19] <dre> wallbroken, https://dpaste.org/vCj5#L8,25,36
[15:02:07] <wallbroken> dre: what?
[15:02:23] <dre> you have an if with 2 else statements
[15:02:26] <dre> that doesn't make sense at all
[15:02:38] <wallbroken> FunkyBob: yes, you are right: Option + size = sku
[15:02:50] <wallbroken> i just checked on the documentation
[15:04:26] <Kim^J> This again?
[15:06:00] *** Quits: audiocat (~audio@2603-8081-1800-00ad-9f93-c162-db16-790c.res6.spectrum.com) (Ping timeout: 255 seconds)
[15:06:29] <wallbroken> FunkyBob: your paste produces the same problem
[15:07:12] <dre> wallbroken, do you get paid for this?
[15:07:14] <dre> can we get paid?
[15:07:37] <dre> nvm im going to sleep nn
[15:07:38] *** Quits: dre (~dre@2001:8003:c932:c301:44a6:1427:4d7d:b99a) (Quit: Leaving)
[15:09:44] <FunkyBob> wallbroken: yes, I didn't fix anything but try to show that cleaner indenting makes the problem more apparent
[15:09:57] <FunkyBob> wallbroken: but dre found the same problem I did
[15:10:01] <FunkyBob> you have an extra else block
[15:11:56] <wallbroken> i think it's a problem i can solve by myself
[15:12:04] <wallbroken> i just need to think
[15:12:09] <wallbroken> and take my time
[15:12:46] <wallbroken> but there is some other little problem
[15:12:48] <wallbroken> elif self.terminated_user.exists():
[15:12:55] <wallbroken> it never enter that condition
[15:13:07] <wallbroken> it's about the function in model i created yesterday
[15:13:45] <wallbroken> maybe .exists() does not do what i need
[15:13:59] <wallbroken> it checks if the current user is in m2m field?
[15:14:10] <FunkyBob> no, that's not what it does
[15:14:22] <FunkyBob> firstly.. what is self at this point?
[15:14:47] <FunkyBob> .exists() tests if _any_ matching records exists... and since you didn't filter, that's _any_ matching records at all
[15:18:33] <wallbroken> 12:44:22 PM - FunkyBob: firstly.. what is self at this point?
[15:18:41] <wallbroken> i didn't get this question
[15:19:24] <FunkyBob> 09:59 < wallbroken> elif self.terminated_user.exists():
[15:19:28] <FunkyBob> what is self?
[15:19:33] <FunkyBob> what class?
[15:19:45] <FunkyBob> which class is this code executing within?
[15:20:31] <wallbroken> https://dpaste.org/005C
[15:21:18] <wallbroken> in "state" i wrote what the condition must do
[15:21:23] <FunkyBob> ... that doesn't tell me the class
[15:21:31] <FunkyBob> but given earlier discussion, I'm guessing Shoe?
[15:21:40] <wallbroken> yes
[15:21:43] <wallbroken> Shoe
[15:22:56] <FunkyBob> so you need to filter for the user... otherwise .exists() is only testing if _any_ user is related
[15:23:16] <FunkyBob> self.terminated_user.filter(pk=user.pk).exists()
[15:23:20] <FunkyBob> something like that
[15:24:15] *** Quits: doev (~doev@p549d7555.dip0.t-ipconnect.de) (Quit: Client closed)
[15:30:38] <wallbroken> ok, thanks. and what about where to put "Shoe" model?
[15:33:21] <FunkyBob> huh?
[15:33:40] <FunkyBob> thatt code is _in_ the Shoe model, isn't it?
[15:39:05] <wallbroken> yes
[15:39:13] <wallbroken> so, self is enough
[15:50:15] *** Quits: bitdex (~bitdex@gateway/tor-sasl/bitdex) (Quit: = "")
[15:52:40] <ColCrunch> Ok, new but related question to my earlier one (updated code link: https://gist.github.com/colcrunch/5de6dc3af31e5e52ea9021fa6410b24c) The AuthGroup model is now being created and saved, but none of the data that is entered into the form is saved. So its basically just creating blank AuthGroup objects. I can go back and edit them just fine with the same form though. Any ideas?
[15:54:25] <ColCrunch> is_valid() returns true on inlineform, but doesn't generate cleaned_data
[16:05:29] *** Joins: Harlin (~DonQixote@2603:300b:663:e800:34e8:d560:f9f:5c42)
[16:05:33] <elmcrest> ColCrunch I don't have much time but from a quick look: in admin.py you import Group and in the class you're using AuthGroup
[16:06:19] <elmcrest> if you've pasted everything as it's for you locally, I would recommend to setup a IDE (visual studio code or pycharm) to catch such errors
[16:06:38] *** Quits: domhnall (~developer@user/domhnall/x-2887755) (Ping timeout: 256 seconds)
[16:07:08] <ColCrunch> It is imported... I actually didn't mean to include that line. Its not the entire file I posted. Just relevant portions
[16:08:03] *** Joins: domhnall (~developer@user/domhnall/x-2887755)
[16:11:24] <ColCrunch> Literally no errors are generated by this
[16:14:14] <Harlin> I notice the errors in Django are mostly useless. Though I have to admit, I kind of don't know what I'm doing.
[16:18:14] *** Joins: pycode (~pycode@2001:b07:5d28:551:b1e0:3484:5b3f:ada)
[16:19:03] <knbk> ColCrunch: it might be because of the has_add_permission, can you try with that changed to True, and without the save_formset method?
[16:21:08] <ColCrunch> knbk: Looks like that worked! Thanks!
[16:23:42] <ColCrunch> Strange that objects could be created at all with that set to false...
[16:28:33] <knbk> they weren't created until you added the save_formset, right? That probably bypasses the permission check somehow, I think that the default of saving the formset doesn't necessarily save all the forms in it as some may be empty
[16:31:24] *** Joins: Elzington__ (~Elzington@static-198-54-128-54.cust.tzulo.com)
[16:31:30] *** Joins: explore (uid233125@id-233125.stonehaven.irccloud.com)
[16:35:09] *** Quits: Elzington_ (~Elzington@static-198-54-128-62.cust.tzulo.com) (Ping timeout: 276 seconds)
[16:47:06] *** Joins: kostkon_ (~androirc@ob21aa.static.otenet.gr)
[17:00:39] *** Joins: WayToDoor (~WayToDoor@user/waytodoor)
[17:02:37] *** Quits: django-ticketbot (~django-ti@django/ops/ticketbot) (Remote host closed the connection)
[17:02:55] *** Joins: django-ticketbot (~django-ti@django/ops/ticketbot)
[17:06:34] *** Joins: kydd (~kydd@212.237.178.212)
[17:09:20] *** Joins: Trieste (T@user/pilgrim)
[17:09:25] <kydd> Hi! I am stuck with a NoReverseMatch, and I simply cannot find the issue. It seems that the correct pattern is found. What is wrong? : https://dpaste.org/fdnO#L5
[17:12:00] *** Joins: GinFuyou (~GinFuyou@reya.cloud.tilaa.com)
[17:13:56] *** Joins: Trieste_ (T@user/pilgrim)
[17:14:35] *** Quits: rannnn8888 (~rannnn888@bzq-79-182-123-214.red.bezeqint.net) (Quit: Client closed)
[17:15:27] *** Quits: Trieste (T@user/pilgrim) (Ping timeout: 276 seconds)
[17:19:30] *** Joins: ajeck (4cab257a@ircip1.mibbit.com)
[17:20:05] <knbk> kydd: '(collections|families)' is also an (unnamed) capturing group. You have to provide a value for that as well -- which means you have to use args instead of kwargs
[17:21:03] <knbk> it might get a default value if you make it a non-capturing group, `(?:collections|families)`, but I'm not sure
[17:26:37] <knbk> nope, that won't work -- might be one of the oldest fixmes still in django: https://github.com/django/django/blob/main/django/utils/regex_helper.py#L86
[17:31:37] <knbk> kydd: tbh I'd seperate it into two patterns (possibly with the same name), one for collections and one for families. If they have the same name and arguments, whichever is last is the default when reversing
[17:37:49] *** Joins: dez (uid92154@user/dez)
[17:39:42] <kydd> knbk: Ah yes! It was the capturing group that caused the problem. Thanks soo much, I would never have found the issue!
[17:51:55] *** Quits: thiras (~thiras@user/thiras) (Remote host closed the connection)
[17:53:50] <frat3rius> guys I'm looking for some nice way to change default loggers (customize message with data from context) from here: https://docs.djangoproject.com/en/3.2/topics/logging/#django-s-logging-extensions any thoughts on how to achieve that?
[17:54:17] *** Joins: thiras (~thiras@user/thiras)
[18:09:01] *** Quits: Guddu (~Guddu@171.79.58.196) (Read error: Connection reset by peer)
[18:09:26] *** Joins: Guddu (~Guddu@171.79.58.196)
[18:14:42] *** Joins: doev (~doev@p549d7555.dip0.t-ipconnect.de)
[18:21:22] *** Joins: serghei (~serghei@user/serghei)
[18:26:09] *** Quits: dlam (~dlam@dlam.me) (Ping timeout: 268 seconds)
[18:32:46] *** Quits: GinFuyou (~GinFuyou@reya.cloud.tilaa.com) (Remote host closed the connection)
[18:33:13] *** Joins: GinFuyou (~GinFuyou@reya.cloud.tilaa.com)
[18:52:18] *** Quits: kostkon_ (~androirc@ob21aa.static.otenet.gr) (Ping timeout: 276 seconds)
[18:52:50] *** Joins: dlam (~dlam@dlam.me)
[18:52:58] *** Joins: _pete_ (~pete@31.132.33.199)
[18:53:57] <_pete_> Hi everyone
[18:54:55] <_pete_> Does anyone know how I can annotate these query to get the Undertaking which is tied to an Allocation? https://dpaste.org/P4yG#L39
[18:57:03] <b-rex> hi _pete_
[18:57:14] <_pete_> Hi b-rex
[18:58:10] *** Quits: mogad0n (~mogad0n@user/mogad0n) (*.net *.split)
[18:58:10] *** Quits: theorangeone (~theorange@2001:470:69fc:105::4eb8) (*.net *.split)
[18:58:10] *** Quits: kanzure (~kanzure@user/kanzure) (*.net *.split)
[18:58:10] *** Quits: wyre (~wyre@user/wyre) (*.net *.split)
[18:58:10] *** Quits: Byteflux (~byte@byteflux.net) (*.net *.split)
[18:58:17] *** Joins: kanzure_ (~kanzure@user/kanzure)
[18:58:28] *** Joins: Byteflux (~byte@byteflux.net)
[18:58:37] *** Joins: wyre_ (~wyre@user/wyre)
[19:00:41] *** Joins: kostkon_ (~androirc@ppp-94-65-184-172.home.otenet.gr)
[19:04:03] *** Quits: mayhew (~jm@hlfxns017vw-47-55-124-51.dhcp-dynamic.fibreop.ns.bellaliant.net) (Quit: Konversation terminated!)
[19:08:14] *** kanzure_ is now known as kanzure
[19:11:15] *** Quits: clemente (~Daniel@balticom-142-72-136.balticom.lv) (Ping timeout: 255 seconds)
[19:17:59] *** Joins: VaniaPy (~VaniaPy@79.103.30.29.dsl.dyn.forthnet.gr)
[19:18:03] <knbk> _pete_: you can't use .get() there as it doesn't return a queryset. With the additional conditions, can there be more than one undertaking per allocation? Which due_date should be annotated in that case?
[19:18:23] <VaniaPy> Hello,how can i pass coordinates as one field in a model?
[19:22:29] *** Joins: Xaldafax (~xaldafax@cpe-198-72-160-101.socal.res.rr.com)
[19:34:17] <pycode> hello
[19:34:32] *** Joins: ovnicraft (~ovnicraft@179.49.44.28)
[19:36:52] <pycode> is it stupid to save giant json into postgres instead of using a simple file? i mean.. for every record in a model i need to create (with a command...every day, at midnight) a json, where i basically aggregate many associated record...i really can do it on-the-fly because it will take around 2 minutes. I need this json on the frontend so basically i use fetch() with javascript and a view reply to this call with that json
[19:37:16] <pycode> now said that, should i create this json inside a folder and then read that file and send it to the user
[19:37:17] <pycode> OR
[19:37:24] <pycode> should i create a field in db with that json ?
[19:37:40] <pycode> i also thought to gzip it, so maybe a file is better in this case
[19:37:54] *** Quits: ovnicraft (~ovnicraft@179.49.44.28) (Client Quit)
[19:44:01] *** Joins: ovnicraft (~ovnicraft@179.49.44.28)
[19:44:20] *** Quits: ajeck (4cab257a@ircip1.mibbit.com) (Quit: https://mibbit.com Online IRC Client)
[19:46:31] *** Quits: ovnicraft (~ovnicraft@179.49.44.28) (Client Quit)
[19:47:26] *** Joins: ovnicraft (~ovnicraft@corp-179-49-44-28.uio.puntonet.ec)
[19:50:05] *** Joins: clemente (~Daniel@balticom-142-72-136.balticom.lv)
[19:50:52] *** Quits: EvilDMP (~textual@django/moderator/EvilDMP) (Quit: My MacBook has gone to sleep. ZZZzzz…)
[19:52:58] <hemebond> pycode: Does it ever change or is it a static file?
[19:53:21] *** Joins: EvilDMP (~textual@django/moderator/EvilDMP)
[19:53:21] *** ChanServ sets mode: +v EvilDMP
[19:54:37] *** Quits: ovnicraft (~ovnicraft@corp-179-49-44-28.uio.puntonet.ec) (Quit: My MacBook has gone to sleep. ZZZzzz…)
[19:55:21] *** Quits: serghei (~serghei@user/serghei) (Ping timeout: 255 seconds)
[20:01:19] *** Joins: ovnicraft (~ovnicraft@179.49.44.28)
[20:02:08] *** Quits: Elzington__ (~Elzington@static-198-54-128-54.cust.tzulo.com) (Ping timeout: 272 seconds)
[20:02:09] *** wyre_ is now known as wyre
[20:04:04] *** Quits: ovnicraft (~ovnicraft@179.49.44.28) (Client Quit)
[20:05:05] <pycode> hemebond, it is static
[20:05:09] <pycode> i mean i update it every day
[20:05:10] <pycode> one time
[20:05:16] <pycode> and then i need to serve it
[20:05:28] <pycode> as i said i aggregate data in this json
[20:05:30] <pycode> for the frontend
[20:05:43] <pycode> and then i have create a view to serve it
[20:13:21] *** Quits: GinFuyou (~GinFuyou@reya.cloud.tilaa.com) (Ping timeout: 255 seconds)
[20:14:44] <pycode> hemebond, any idea?
[20:20:06] *** Quits: Trieste_ (T@user/pilgrim) (Ping timeout: 255 seconds)
[20:21:05] *** Joins: serghei (~serghei@user/serghei)
[20:21:25] *** Quits: Xaldafax (~xaldafax@cpe-198-72-160-101.socal.res.rr.com) (Quit: Bye...)
[20:22:16] *** Joins: Xaldafax (~xaldafax@cpe-198-72-160-101.socal.res.rr.com)
[20:23:24] *** Joins: PantelicGR (~PantelicG@user/pantelicgr)
[20:24:28] *** Quits: pycode (~pycode@2001:b07:5d28:551:b1e0:3484:5b3f:ada) (Ping timeout: 256 seconds)
[20:26:01] *** Quits: serghei (~serghei@user/serghei) (Ping timeout: 265 seconds)
[20:33:11] *** Quits: _pete_ (~pete@31.132.33.199) (Read error: Connection reset by peer)
[20:35:38] *** Joins: serghei (~serghei@user/serghei)
[20:37:08] *** Joins: Skyz (~Skyz@user/skyz)
[20:44:51] *** Quits: pathos (~pathos@169-1-247-122.ip.afrihost.co.za) (Ping timeout: 255 seconds)
[20:46:41] *** Joins: Elzington (~Elzington@static-198-54-128-76.cust.tzulo.com)
[20:48:06] <thiras> is there a way to recursively use the model_to_dict function for relations on the main model instance?
[20:48:52] *** Joins: pathos (~pathos@169-1-247-122.ip.afrihost.co.za)
[20:54:30] *** Quits: pathos (~pathos@169-1-247-122.ip.afrihost.co.za) (Ping timeout: 276 seconds)
[20:56:25] *** Quits: VaniaPy (~VaniaPy@79.103.30.29.dsl.dyn.forthnet.gr) (Quit: Connection closed)
[20:56:55] *** Quits: Skyz (~Skyz@user/skyz) (Quit: Client closed)
[20:58:03] *** Joins: pathos (~pathos@169-1-247-122.ip.afrihost.co.za)
[21:05:24] *** Quits: bilb_ono (~alexmarsh@ip68-6-69-149.sb.sd.cox.net) (Quit: bilb_ono)
[21:05:55] *** Joins: bilb_ono (~alexmarsh@ip68-6-69-149.sb.sd.cox.net)
[21:07:35] *** Joins: ovnicraft (~ovnicraft@179.49.44.28)
[21:13:12] *** Joins: Xof (~Xof@157-131-136-66.dedicated.static.sonic.net)
[21:13:14] *** Quits: doev (~doev@p549d7555.dip0.t-ipconnect.de) (Quit: Client closed)
[21:14:05] *** Quits: ovnicraft (~ovnicraft@179.49.44.28) (Quit: My MacBook has gone to sleep. ZZZzzz…)
[21:17:06] *** Joins: ovnicraft (~ovnicraft@179.49.44.28)
[21:18:32] *** Quits: kostkon_ (~androirc@ppp-94-65-184-172.home.otenet.gr) (Quit: AndroIRC - Android IRC Client ( http://www.androirc.com ))
[21:19:32] *** Joins: Skyz (~Skyz@user/skyz)
[21:21:53] *** Quits: ovnicraft (~ovnicraft@179.49.44.28) (Client Quit)
[21:28:27] *** Joins: bambanxx (~bambanx@pc-223-49-214-201.cm.vtr.net)
[21:29:22] *** Joins: ovnicraft (~ovnicraft@corp-179-49-44-28.uio.puntonet.ec)
[21:30:38] *** Joins: knbk_ (~quassel@84-24-92-123.cable.dynamic.v4.ziggo.nl)
[21:31:12] *** Quits: ovnicraft (~ovnicraft@corp-179-49-44-28.uio.puntonet.ec) (Client Quit)
[21:33:49] *** Quits: vdamewood (~vdamewood@fedora/vdamewood) (Quit: My MacBook Pro has gone to sleep. ZZZzzz…)
[21:33:54] *** Quits: knbk (~quassel@84-24-92-123.cable.dynamic.v4.ziggo.nl) (Ping timeout: 255 seconds)
[21:36:41] *** Quits: EvilDMP (~textual@django/moderator/EvilDMP) (Quit: My MacBook has gone to sleep. ZZZzzz…)
[21:36:59] *** Joins: ovnicraft (~ovnicraft@179.49.44.28)
[21:37:48] *** Quits: bilb_ono (~alexmarsh@ip68-6-69-149.sb.sd.cox.net) (Quit: bilb_ono)
[21:41:17] *** Quits: explore (uid233125@id-233125.stonehaven.irccloud.com) (Quit: Connection closed for inactivity)
[21:42:15] *** Joins: audiocat (~audio@2603-8081-1800-00ad-0f94-2547-14ef-ab6d.res6.spectrum.com)
[21:42:20] *** Quits: ovnicraft (~ovnicraft@179.49.44.28) (Quit: My MacBook has gone to sleep. ZZZzzz…)
[21:42:59] *** Quits: jess (~jess@libera/staff/jess) ()
[21:44:22] *** Joins: ovnicraft (~ovnicraft@179.49.44.28)
[21:48:42] *** Quits: ovnicraft (~ovnicraft@179.49.44.28) (Client Quit)
[21:49:16] *** Joins: ovnicraft (~ovnicraft@179.49.44.28)
[21:51:06] *** Quits: ovnicraft (~ovnicraft@179.49.44.28) (Client Quit)
[21:55:16] *** Joins: EvilDMP (~textual@django/moderator/EvilDMP)
[21:55:16] *** ChanServ sets mode: +v EvilDMP
[22:03:30] *** Joins: knbk (~quassel@84-24-92-123.cable.dynamic.v4.ziggo.nl)
[22:04:12] *** Joins: knbk__ (~quassel@84-24-92-123.cable.dynamic.v4.ziggo.nl)
[22:05:35] *** Quits: EvilDMP (~textual@django/moderator/EvilDMP) (Quit: My MacBook has gone to sleep. ZZZzzz…)
[22:06:04] *** Joins: ovnicraft (~ovnicraft@corp-179-49-44-28.uio.puntonet.ec)
[22:07:12] *** Quits: knbk_ (~quassel@84-24-92-123.cable.dynamic.v4.ziggo.nl) (Ping timeout: 245 seconds)
[22:07:50] *** Quits: knbk (~quassel@84-24-92-123.cable.dynamic.v4.ziggo.nl) (Ping timeout: 252 seconds)
[22:07:54] *** Quits: ovnicraft (~ovnicraft@corp-179-49-44-28.uio.puntonet.ec) (Client Quit)
[22:14:07] *** Joins: ovnicraft (~ovnicraft@179.49.44.28)
[22:16:49] *** Quits: ovnicraft (~ovnicraft@179.49.44.28) (Client Quit)
[22:17:05] *** Quits: bambanxx (~bambanx@pc-223-49-214-201.cm.vtr.net) (Quit: My MacBook Air has gone to sleep. ZZZzzz…)
[22:18:15] *** Joins: EvilDMP (~textual@django/moderator/EvilDMP)
[22:18:15] *** ChanServ sets mode: +v EvilDMP
[22:31:27] *** Joins: Trieste (~T@user/pilgrim)
[22:32:32] *** Joins: bilb_ono (~alexmarsh@ip68-6-69-149.sb.sd.cox.net)
[22:34:06] *** Joins: ras_manny (~ras_manny@196.24.136.255)
[22:46:02] *** Quits: bilb_ono (~alexmarsh@ip68-6-69-149.sb.sd.cox.net) (Quit: bilb_ono)
[22:47:12] *** Quits: Trieste (~T@user/pilgrim) (Ping timeout: 245 seconds)
[22:48:01] *** Joins: Trieste (T@user/pilgrim)
[22:48:02] *** Quits: serghei (~serghei@user/serghei) (Ping timeout: 245 seconds)
[22:54:47] *** Joins: bilb_ono (~alexmarsh@ip68-6-69-149.sb.sd.cox.net)
[22:59:21] *** Quits: EvilDMP (~textual@django/moderator/EvilDMP) (Quit: My MacBook has gone to sleep. ZZZzzz…)
[23:00:58] *** Joins: EvilDMP (~textual@django/moderator/EvilDMP)
[23:00:58] *** ChanServ sets mode: +v EvilDMP
[23:01:39] *** Quits: Thanatos (~Thanatos@197.210.77.171) (Ping timeout: 255 seconds)
[23:02:36] *** Joins: LuxuryMode (uid91005@id-91005.charlton.irccloud.com)
[23:05:24] *** Joins: explore (uid233125@id-233125.stonehaven.irccloud.com)
[23:05:43] *** Quits: pyfisch (~pyfisch@user/pyfisch) (Quit: The Lounge - https://thelounge.chat)
[23:06:12] *** Joins: pyfisch (~pyfisch@ip-95-223-230-181.hsi16.unitymediagroup.de)
[23:10:15] *** Joins: bambanxx (~bambanx@pc-223-49-214-201.cm.vtr.net)
[23:13:04] *** Quits: EvilDMP (~textual@django/moderator/EvilDMP) (Quit: My MacBook has gone to sleep. ZZZzzz…)
[23:13:28] *** Quits: Skyz (~Skyz@user/skyz) (Quit: Client closed)
[23:14:27] *** Joins: serghei (~serghei@user/serghei)
[23:18:02] *** Joins: EvilDMP (~textual@django/moderator/EvilDMP)
[23:18:02] *** ChanServ sets mode: +v EvilDMP
[23:19:12] *** Quits: serghei (~serghei@user/serghei) (Ping timeout: 255 seconds)
[23:20:44] *** Quits: pyfisch (~pyfisch@ip-95-223-230-181.hsi16.unitymediagroup.de) (Quit: The Lounge - https://thelounge.chat)
[23:21:48] *** Joins: pyfisch (~pyfisch@ip-95-223-230-181.hsi16.unitymediagroup.de)
[23:28:06] *** Joins: benbacardi (~benbacard@91.206.0.63)
[23:32:42] *** Quits: bilb_ono (~alexmarsh@ip68-6-69-149.sb.sd.cox.net) (Quit: bilb_ono)
[23:37:10] *** Joins: serghei (~serghei@user/serghei)
[23:38:48] *** Joins: jess (~jess@libera/staff/jess)
[23:39:50] *** Joins: Skyz (~Skyz@user/skyz)
[23:41:42] *** Quits: serghei (~serghei@user/serghei) (Ping timeout: 255 seconds)
[23:47:22] *** Quits: bambanxx (~bambanx@pc-223-49-214-201.cm.vtr.net) (Quit: My MacBook Air has gone to sleep. ZZZzzz…)
[23:48:03] *** Quits: EvilDMP (~textual@django/moderator/EvilDMP) (Quit: My MacBook has gone to sleep. ZZZzzz…)
[23:48:06] *** Joins: bilb_ono (~alexmarsh@ip68-6-69-149.sb.sd.cox.net)
[23:52:55] *** Quits: benbacardi (~benbacard@91.206.0.63) (Quit: Client closed)
[23:53:51] *** Joins: bambanxx (~bambanx@pc-223-49-214-201.cm.vtr.net)
[23:54:34] *** Joins: EvilDMP (~textual@django/moderator/EvilDMP)
[23:54:34] *** ChanServ sets mode: +v EvilDMP
[23:58:28] *** Quits: bambanxx (~bambanx@pc-223-49-214-201.cm.vtr.net) (Client Quit)
