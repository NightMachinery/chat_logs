[00:00:09] <monochrom> But I lied, of course you can always use evil dictionary-reification tricks to institute "local instance declaration".
[00:00:57] <c_wraith> if you're going to do that, use the reflection package though. Rely on someone else to get the fiddly bits right, so all you have to worry about is incoherent logic. :)
[00:02:10] <maerwald> I was kind of expecting someone to have solved this use case... seems rather common if you have a deep ast and want to match on a specific sub-AST? 
[00:02:28] <maerwald> or maybe that use case is not that common after all
[00:04:44] <monochrom> I think it is not common. (I have no data though.)
[00:05:20] <maerwald> then you could do something like "for every (int + int), replace it with whatever"
[00:07:13] *** Joins: segfaultfizzbuzz (~segfaultf@2602:306:cd3c:9350:4091:e9b1:bc9f:dc79)
[00:07:28] <monochrom> I think it is more common (again no data though, just impressions) to require, for example, every instance of MyClass to have consistent and compatible behaviour. Therefore the fact that some instance uses "deriving Generic" and going through "GMyClass" is an implementation detail that GMyClass itself doesn't care about.
[00:08:27] <Guest19> Hello, I would like to ask about traverse and the Writer monad. I want to create a function `test :: (Traversable t, Real a) => (a -> a) -> t a -> (a, t a)` which goes through a traversable, applies the function (a -> a) to each element (but only if it would increase it, otherwise identity) and returns a tuple (<sum of increases over all elements>,
[00:08:28] <Guest19> <the modified Traversable object>): e.g. test (*2) [1, 5, -3]  ~>*  (6, [2, 10, -3]), because only the first 2 elements would increase and 6 = 1 + 5 + 0
[00:09:10] <Guest19> Of course, I can do it using basic Haskell, but I was told, it was possible to do it using Writer monad and traverse. But I am stuck on this for two days and I just can't see what to do.
[00:10:28] <maerwald> monochrom: the idea was that pattern matching on the actual data types is *extremely* verbose... so with generics I was hoping to skip right to the interesting location and only match there, then let the rest be recursive instance jumping
[00:11:03] <c_wraith> Guest19: the first step is that Writer is required to work over a Monoid.  Do you know what Monoid instance would be appropriate for this case?
[00:12:49] <Guest19> I know there is a monoid needed to create the Writer monad, but honestly, I don't know much about it:(  I know what a monoid is from theoretical point of view (algebra)
[00:13:14] *** Quits: mcgroin (~mcgroin@roc37-h01-176-170-197-243.dsl.sta.abo.bbox.fr) (Ping timeout: 246 seconds)
[00:14:02] <Guest19> I guess I need to work on tuples (sum so far, [elements so far])
[00:14:31] <c_wraith> Yes, that's correct.  Writer is just a newtype around a tuple with convenient Applicative/Monad instances
[00:14:43] <monochrom> Numbers under addition and 0 form a monoid.
[00:16:11] *** Quits: zmt00 (~zmt00@user/zmt00) (Ping timeout: 250 seconds)
[00:16:29] *** Joins: mcgroin (~mcgroin@roc37-h01-176-170-197-243.dsl.sta.abo.bbox.fr)
[00:16:32] *** Quits: mon_aaraj (~MonAaraj@user/mon-aaraj/x-4416475) (Ping timeout: 272 seconds)
[00:16:36] <segfaultfizzbuzz> okay so i am failing at self-directing my haskell curriculum. i keep reading theory and definitions and they mostly go in one ear and out the other and i don't learn how to write according to whatever the haskell philosophy is, if there is such a thing
[00:16:52] <Guest19> Ok, say Real a => (a, t a) would be the type of my monoid, what can I do with it? sorry for being so stupid :(
[00:16:56] <segfaultfizzbuzz> the best book i have come across is real world haskell
[00:17:13] <c_wraith> Guest19: oh, you don't need to stuff the data structure into the monoid too.  Just the sum
[00:17:20] <monochrom> But Real a => (a, t a) will not be the type of your monoid. A number type is.
[00:17:24] <c_wraith> Guest19: traverse takes care of preserving the data structure
[00:17:30] <segfaultfizzbuzz> i started trying to write a chess engine as an exercise but got stuck on the simple problem of representing the game state and representing where a queen can go
[00:17:41] <c_wraith> > runWriter $ tell (Sum 2) >> tell 3 >> return "hello" -- Guest19 
[00:17:43] <lambdabot>  ("hello",Sum {getSum = 5})
[00:17:52] <maerwald> segfaultfizzbuzz: there's a haskell game dev channel I think
[00:17:54] *** Joins: mon_aaraj (~MonAaraj@user/mon-aaraj/x-4416475)
[00:18:21] <segfaultfizzbuzz> it's not that i want to do gamedev, it's that i am trying to learn the language
[00:18:54] <monochrom> Choose a much simpler game, for example Nim.
[00:18:54] <segfaultfizzbuzz> there are a lot of low quality and/or impractical haskell guides out there... what is the best stuff
[00:18:54] <maerwald> segfaultfizzbuzz: yes and you can ask people in that channel about design ideas wrt game state?
[00:19:23] <monochrom> And don't be perfectionist about "what is the absolutely most optimized way to store three integers".
[00:19:27] *** Joins: acidjnk (~acidjnk@p200300d0c7049f94e8cdd499a79a3878.dip0.t-ipconnect.de)
[00:19:33] *** Joins: zmt00 (~zmt00@user/zmt00)
[00:19:47] <monochrom> Perfectionism is why people never learn.
[00:19:49] <Guest19> ok, so first you specify u use the Sum monoid and then u add into it using tell - this is what traverse would do for me (using good enough function), wight?
[00:19:56] <monochrom> You would think that they have already learned.
[00:20:30] <Guest19> but how do I say in traverse I want it to traverse on `Sum` monoid?
[00:21:10] <c_wraith> Guest19: traverse doesn't care. the only thing traverse cares about is the data structure being traversed and that you have an Applicative instance
[00:21:48] <c_wraith> Guest19: that's what makes traverse so cool. It completely separates the concerns of rewriting a data structure and doing just about anything else at the same time.
[00:21:56] *** Quits: BlackboardN (~nathan@user/BlackboardN) (Remote host closed the connection)
[00:23:34] <Guest19> well, i would like to write something like runWriter $ traverse (*2) [1,2,3], wouldn't I? Provided that the given function from Real to Real is *2 of course and ignoring the fact I might sometimes not want to apply it for simplicity
[00:23:40] <c_wraith> Guest19: try starting with a function of type  Real a => (a -> a) -> a -> Writer (Sum a) a
[00:24:02] <monochrom> Aim for "t a -> Writer (Sum a) (t a)".  This can be done with the help of traverse and a helper function you write.  It is trivial to go "Writer (Sum a) (t a) -> (a, t a)".
[00:24:06] <c_wraith> Guest19: forget about traversing over the entire data structure.  Just write the pointwise logic
[00:24:11] <Guest19> but this way traverse can never guess what I want to do with the numbers (sum them? multiply them?)
[00:24:23] <c_wraith> Guest19: traverse doesn't *care* what you do with them.
[00:24:33] *** Quits: raehik (~raehik@cpc95906-rdng25-2-0-cust156.15-3.cable.virginm.net) (Ping timeout: 256 seconds)
[00:24:40] <Guest19> ok, i will try to start with the suggested function
[00:24:44] <c_wraith> its logic is entirely independent of what actual transformation you're doing
[00:24:55] <monochrom> Yes obviously you are supposed to replace (* 2) by something smarter, something you code up.
[00:25:41] <monochrom> Not to mention that (* 2) doesn't type-check there.
[00:25:56] <monochrom> This is not your garden variety map (* 2) xs.
[00:28:38] *** Quits: zer0bitz (~zer0bitz@2001:2003:f750:a200:f81b:729b:7ef0:993) (Ping timeout: 260 seconds)
[00:29:30] <Guest19> `testfun f x = if f x > x then pure (f x) else pure x` would this be the correct implementation you wanted from me?:D  i am sorry if it is completely idiotic
[00:29:48] *** Quits: ProfSimm (~ProfSimm@87.227.196.109) (Remote host closed the connection)
[00:30:19] *** Joins: earthy (~arthurvl@2001:984:275b:1:ba27:ebff:fea0:40b0)
[00:30:37] <c_wraith> well, I'd share the value instead of calculating (f x) twice.  But also, I'd include a tell of the amount of increase in the increase case.
[00:31:15] *** Joins: raehik (~raehik@cpc95906-rdng25-2-0-cust156.15-3.cable.virginm.net)
[00:31:24] <c_wraith> that tell is the key part of doing what you want
[00:31:38] *** Joins: dcoutts (~duncan@host213-122-143-81.range213-122.btcentralplus.com)
[00:32:00] *** Quits: _ht (~quassel@231-169-21-31.ftth.glasoperator.nl) (Remote host closed the connection)
[00:32:42] <Guest19> ok, i am starting to get it a bit more now, I was confused where it would figure it out what I actually want to sum up
[00:33:13] <c_wraith> and you can test your function in ghc, making sure it produces Writer values that look right
[00:33:27] *** Quits: Kaiepi (~Kaiepi@156.34.47.253) (Ping timeout: 260 seconds)
[00:33:39] *** Joins: ubert (~Thunderbi@p200300ecdf15888f6cb689ccf87fbbb5.dip0.t-ipconnect.de)
[00:33:41] *** Joins: pavonia (~user@user/siracusa)
[00:33:42] <Guest19> so I would use pure (f x) >> tell $ (f x) - x? i.e. just put `>> tell` after `pure`
[00:34:01] *** Quits: cosimone (~user@93-47-230-184.ip115.fastwebnet.it) (Remote host closed the connection)
[00:34:11] *** Quits: mon_aaraj (~MonAaraj@user/mon-aaraj/x-4416475) (Ping timeout: 256 seconds)
[00:34:33] <Guest19> well, I am completely lost in the syntax:(  ghci won't compile half of my code (for a very good reason obviously), that's why I have to beg you for help
[00:34:36] *** Quits: segfaultfizzbuzz (~segfaultf@2602:306:cd3c:9350:4091:e9b1:bc9f:dc79) (Ping timeout: 240 seconds)
[00:34:49] <c_wraith> nah, the type of >> means that the pure should be after it, not before it
[00:34:52] <c_wraith> :t (>>)
[00:34:53] <lambdabot> Monad m => m a -> m b -> m b
[00:35:07] <Guest19> and i am aware of the duplicate f x, I just wanted to keep it simple for now
[00:36:17] *** Joins: mon_aaraj (~MonAaraj@user/mon-aaraj/x-4416475)
[00:36:19] <c_wraith> You might want to just go full multiline and use do blocks.  It's perfectly fine to write that way if it keeps things clearer
[00:36:37] *** Quits: kenran (~kenran@200116b82bd9b000bb30ac8fe29496f8.dip.versatel-1u1.de) (Ping timeout: 240 seconds)
[00:36:46] *** Joins: segfaultfizzbuzz (~segfaultf@2602:306:cd3c:9350:4091:e9b1:bc9f:dc79)
[00:37:47] *** Joins: kenran (~kenran@200116b82bd9b00070509ad7c63ceb6b.dip.versatel-1u1.de)
[00:38:40] <Guest19> :do notation is super confusing to me right now, I am only able to rewrite it once I get the "verbose" notation right
[00:39:52] <c_wraith> In that case, you might find it clearer to use a multiline definition with a where block, so you can parenthesize a lot fewer expressions.  Make the structure easier to see
[00:39:57] <Guest19> however, it still has some issues with rewriting it the other way round:(  `testfun f x = if f x > x then tell ((f x) - x) >> pure (f x) else tell 0 >> pure x` something about infinite type
[00:40:59] <Guest19> i know what an infinite type is, but I just can't spot it here
[00:42:03] *** Joins: ProfSimm (~ProfSimm@87.227.196.109)
[00:42:07] <c_wraith> You don't need tell 0, fwiw.  The whole point of the Monoid requirement is that the neutral element just exists.
[00:42:38] *** Joins: BlackboardN (~nathan@user/BlackboardN)
[00:42:52] <c_wraith> but that's not an infinite type
[00:44:40] <c_wraith> I'd really recommend replacing the if with a guard or something.  Reduce the complexity per line
[00:45:05] <Guest19> `testfun f x = if diff > 0 then tell diff >> pure (f x) else pure x
[00:45:05] <Guest19>     where diff = f x - x` rewritten for clarity
[00:45:46] *** Joins: yauhsien (~yauhsien@61-231-60-85.dynamic-ip.hinet.net)
[00:45:47] *** Quits: Lord_of_Life (~Lord@user/lord-of-life/x-2819915) (Ping timeout: 246 seconds)
[00:45:47] <Guest19> still, sadly won't compile:
[00:45:47] <Guest19> ```
[00:45:48] <Guest19>  Occurs check: cannot construct the infinite type: a ~ Sum a                                                               arising from a functional dependency between:                                                                             constraint ‘MonadWriter
[00:45:48] <Guest19> a (WriterT (Sum a) Data.Functor.Identity.Identity)’                                                         arising from a use of ‘tell’                                                                                          instance ‘MonadWriter w (WriterT w m)’ at <no location info>
[00:45:49] <Guest19> • In the first argument of ‘(>>)’, namely ‘tell diff’                                                                     In the expression: tell diff >> pure (f x)                                                                              In the expression:
[00:45:49] <Guest19> if diff > 0 then tell diff >> pure (f x) else pure x                                                                • Relevant bindings include                                                                                                 diff :: a (bound at mini6.hs:6:39)
[00:45:50] <Guest19> x :: a (bound at mini6.hs:5:11)                                                                                         f :: a -> a (bound at mini6.hs:5:9)                                                                                     testfun :: (a -> a) -> a -> Writer (Sum a) a
[00:45:50] <Guest19> ```
[00:45:58] *** Joins: Lord_of_Life_ (~Lord@user/lord-of-life/x-2819915)
[00:46:07] <c_wraith> probably should pastebin multiline stuff :)
[00:46:25] <c_wraith> Oh, I see.
[00:46:46] <c_wraith> you need to add an explicit Sum constructor to the value you're passing to tell
[00:46:59] <c_wraith> I was able to avoid that when using literals, because literals are polymorphic
[00:47:03] <Guest19> yup, probably can't add screenshots here :(
[00:47:13] *** Lord_of_Life_ is now known as Lord_of_Life
[00:48:28] <c_wraith> But you're passing values of the same type to tell and pure, which only works if both of Writer's type arguments are the same.  Since one of them is (Sum a) and the other is a, attempting to unify those gives you an infinite type
[00:48:52] *** Quits: briandaed (~root@109.95.142.93.r.toneticgroup.pl) (Remote host closed the connection)
[00:49:17] *** Joins: eggplantade (~Eggplanta@108-201-191-115.lightspeed.sntcca.sbcglobal.net)
[00:49:21] <c_wraith> So you need to throw in an explicit Sum constructor in the tell
[00:51:02] *** Quits: yauhsien (~yauhsien@61-231-60-85.dynamic-ip.hinet.net) (Ping timeout: 246 seconds)
[00:51:21] <Guest19> is there a better way that using pure? to me it is confusing, because I never know which pure it is
[00:51:48] <Guest19> like in this case it apparently accepts Sum as well, but for Writer it seems to crash
[00:51:56] <c_wraith> There's a different way, but it's definitely not *better*
[00:52:24] <c_wraith> pure is really important.
[00:52:51] <c_wraith> It lets you ignore everything except what value you want to produce
[00:53:54] *** Quits: eggplantade (~Eggplanta@108-201-191-115.lightspeed.sntcca.sbcglobal.net) (Ping timeout: 272 seconds)
[00:54:21] <Guest19> i understand it is comfortable to just use pure because i need to somehow magically turn this value into another this particular function needs, but i find it very hard to read :D
[00:54:33] <Guest19> but maybe thats just cause im too new at this
[00:54:55] <c_wraith> I think it's a matter of comfort in letting go.
[00:56:17] *** Quits: mikoto-chan (~mikoto-ch@213.177.151.239) (Ping timeout: 246 seconds)
[00:56:27] *** Joins: alMalsamo (~alMalsamo@gateway/tor-sasl/almalsamo)
[00:57:06] *** alMalsamo is now known as littlebobeep
[00:59:08] <Guest19> anyway, thank you for your help, i think i just needed to finish one exercise of this type (not even by myself) so that i can use it to solve the others and understand it in detail in the process
[01:00:03] <c_wraith> I kind of think the main philosophy of haskell is trusting the compiler to keep track of the fiddly things. The challenge is learning that you can program without focusing on them most of the time.
[01:00:15] *** Quits: neurocyte861 (~neurocyte@user/neurocyte) (Ping timeout: 256 seconds)
[01:00:23] *** Joins: zer0bitz (~zer0bitz@2001:2003:f750:a200:18ec:9063:4133:b132)
[01:00:57] *** Joins: neurocyte8614 (~neurocyte@IP-094016090045.dynamic.medianet-world.de)
[01:00:58] *** Quits: neurocyte8614 (~neurocyte@IP-094016090045.dynamic.medianet-world.de) (Changing host)
[01:00:58] *** Joins: neurocyte8614 (~neurocyte@user/neurocyte)
[01:02:26] *** Joins: merijn (~merijn@c-001-001-001.client.esciencecenter.eduvpn.nl)
[01:03:38] *** Quits: alp (~alp@user/alp) (Ping timeout: 260 seconds)
[01:10:32] *** Joins: coot (~coot@213.134.190.95)
[01:14:41] *** Quits: motherfsck (~motherfsc@user/motherfsck) (Quit: quit)
[01:15:25] *** Joins: ub (~Thunderbi@p548c8d44.dip0.t-ipconnect.de)
[01:15:55] *** Quits: ubert (~Thunderbi@p200300ecdf15888f6cb689ccf87fbbb5.dip0.t-ipconnect.de) (Ping timeout: 260 seconds)
[01:15:56] *** ub is now known as ubert
[01:15:57] *** Quits: fizbin (~fizbin@c-73-33-197-160.hsd1.nj.comcast.net) (Remote host closed the connection)
[01:20:06] *** Joins: yauhsien (~yauhsien@61-231-60-85.dynamic-ip.hinet.net)
[01:21:08] *** Quits: mcgroin (~mcgroin@roc37-h01-176-170-197-243.dsl.sta.abo.bbox.fr) (Ping timeout: 272 seconds)
[01:24:17] *** Quits: yauhsien (~yauhsien@61-231-60-85.dynamic-ip.hinet.net) (Ping timeout: 246 seconds)
[01:24:59] *** Quits: BlackboardN (~nathan@user/BlackboardN) (Ping timeout: 246 seconds)
[01:27:07] *** Quits: mon_aaraj (~MonAaraj@user/mon-aaraj/x-4416475) (Ping timeout: 260 seconds)
[01:27:15] *** Joins: bitmapper (uid464869@id-464869.lymington.irccloud.com)
[01:28:42] *** Quits: arjun (~arjun@user/arjun) (Ping timeout: 260 seconds)
[01:28:53] *** Joins: mon_aaraj (~MonAaraj@user/mon-aaraj/x-4416475)
[01:29:29] *** Quits: Midjak (~Midjak@82.66.147.146) (Quit: This computer has gone to sleep)
[01:33:57] *** Quits: madjestic (~madjestic@88-159-247-120.fixed.kpn.net) (Ping timeout: 260 seconds)
[01:36:27] *** Quits: merijn (~merijn@c-001-001-001.client.esciencecenter.eduvpn.nl) (Ping timeout: 260 seconds)
[01:37:19] *** Quits: kenran (~kenran@200116b82bd9b00070509ad7c63ceb6b.dip.versatel-1u1.de) (Quit: WeeChat info:version)
[01:40:42] *** Joins: mvk (~mvk@2607:fea8:5ce3:8500::3800)
[01:43:57] *** Joins: zeenk (~zeenk@2a02:2f04:a313:d600:8d26:ec9f:3ff6:fc94)
[01:44:52] *** Joins: motherfsck (~motherfsc@user/motherfsck)
[01:45:10] *** Quits: gehmehgeh_ (~user@user/gehmehgeh) (Remote host closed the connection)
[01:45:52] *** Joins: gehmehgeh_ (~user@user/gehmehgeh)
[01:47:21] *** Quits: coot (~coot@213.134.190.95) (Quit: coot)
[01:49:45] *** Joins: eggplantade (~Eggplanta@108-201-191-115.lightspeed.sntcca.sbcglobal.net)
[01:50:51] *** Quits: Guest19 (~Guest19@ip-86-49-182-248.zrnko.net) (Quit: Client closed)
[01:51:15] *** Quits: gurkenglas (~gurkengla@dslb-178-012-018-212.178.012.pools.vodafone-ip.de) (Read error: Connection reset by peer)
[01:53:10] *** Joins: gurkenglas (~gurkengla@dslb-178-012-018-212.178.012.pools.vodafone-ip.de)
[02:03:18] *** Joins: Kaiepi (~Kaiepi@156.34.47.253)
[02:06:14] *** Joins: cosimone (~user@2001:b07:ae5:db26:c24a:d20:4d91:1e20)
[02:08:22] <segfaultfizzbuzz> so people argue about whether umap is a useful analytic technique. i saw the author of umap say something which i am curious to ask about, which is that he said that for all practical purposes any topology you are interested in can be formed by specifying nodes and edges discretely and then reasoning about that
[02:08:44] <segfaultfizzbuzz> so is there anything useful we can say about the fact that "everything can be discrete"
[02:10:04] <geekosaur> not really. it's more or less how we get away with writing programs that do useful things, since digital computers deal in discrete values
[02:10:23] <geekosaur> (as distinct from analog or quantum computers)
[02:10:40] <segfaultfizzbuzz> like in linear algebra some approaches to it are very careful to not deal with the finite dimensional representation of things
[02:11:36] <segfaultfizzbuzz> but... i've never come across a situation whether the finite or non-finite distinction is meaningful 
[02:12:02] <segfaultfizzbuzz> at the end of the day you have to be able to make a graph on paper or draw symbols, and that will always involve some kind of discrete representation,...
[02:12:16] *** Quits: lavaman (~lavaman@c-174-63-118-52.hsd1.ma.comcast.net) (Remote host closed the connection)
[02:12:28] *** Joins: lavaman (~lavaman@c-174-63-118-52.hsd1.ma.comcast.net)
[02:12:40] *** Quits: cosimone (~user@2001:b07:ae5:db26:c24a:d20:4d91:1e20) (Quit: ERC (IRC client for Emacs 27.1))
[02:13:09] <geekosaur> right, but you may only have that at the end.
[02:13:35] *** Quits: wyrd (~wyrd@gateway/tor-sasl/wyrd) (Ping timeout: 240 seconds)
[02:14:07] <monochrom> Pretty sure it is the niche theoretical physicists working on the fundamentals of quantum physics who are really interested in "topologies that matter can be formed from discrete nodes and edges".
[02:14:34] <geekosaur> analog computers still do many things better than digital computers do, since an operation like integration is fundamental. you may have a discrete value at the end, but getting to that end can involve nasty things like multiple integrals that can only be simulated (and that often only when simplified) on a digital computer
[02:15:36] *** Joins: wyrd (~wyrd@gateway/tor-sasl/wyrd)
[02:15:47] <segfaultfizzbuzz> "nearly all" integrals can be trivially discretized. the only examples i can think of which don't fall into this category are integrals of stochastic functions, which can still be discretized but simply require some more compute
[02:16:03] <geekosaur> "simply"
[02:16:10] <hpc> some people like to call analog computers "experiments" :P
[02:16:31] <segfaultfizzbuzz> put another way, from my perspective discretizing an integral is trivial... i suppose at some point the dimensionality of the integral grows to the point that you are studying light transport and need more of an mcmc kind of approach to integrate,...
[02:17:07] <geekosaur> even figuring water flow can be very difficult to compute… yet the water flows anyway
[02:17:46] <geekosaur> most accurate way to model it? duplicate the flow in question. which is an analog computer although we don't call it that
[02:18:02] *** Quits: zer0bitz (~zer0bitz@2001:2003:f750:a200:18ec:9063:4133:b132) (Read error: Connection reset by peer)
[02:18:11] <segfaultfizzbuzz> well hold on there, you have how the water itself moves and then how to compute a theory of that motion. and that theory can always be discretized and calculated is my view (unless i'm wrong here...)
[02:19:39] <geekosaur> oh, it can always be done. the problem is that that calculation can take much, much longer than just observing the bloody system
[02:20:06] <geekosaur> ot to mention that you have to come up with that theory, which is rarely trivial
[02:20:09] <hpc> and what if you don't know the formulas anyway
[02:20:24] <hpc> you're trying to answer "how accurate is this model?"
[02:20:34] <geekosaur> there are still *many* open questions in fields that rely on that
[02:20:37] <hpc> and no amount of testing the model against itself at higher resolution is going to help you there
[02:20:54] <segfaultfizzbuzz> so what i am saying is that if i open any math book or any i don't know civil engineering book or what have you
[02:21:00] <geekosaur> and reformulation of relevant theorues
[02:21:12] <abastro[m]> You: I gotta calculate this fluid movement
[02:21:12] <abastro[m]> Chaos: I am going to ruin this person's career
[02:21:24] <geekosaur> civil engineering is filled with known to be inaccurate but "usually good enough" approximations
[02:21:53] <segfaultfizzbuzz> and i look at any question i can ask about whatever is being discussed, even if the topic looks like it is a very non-discrete thing, you can always find a discretization and work towards computing the answer
[02:21:59] <hpc> a lot of civil engineering is arranging things so you never hit where those approximations aren't good enough anymore
[02:22:07] <geekosaur> that too
[02:22:12] <hpc> also usually the approximations break down at the same time the building does
[02:22:26] <geekosaur> see also the tacoma narrows bridge
[02:22:52] <geekosaur> or recent essentially-repeats involving walking bridges
[02:23:08] <monochrom> Chaos, Crash, Burn, and "mess with the best, die like the rest" etc :)
[02:23:38] *** Quits: gehmehgeh_ (~user@user/gehmehgeh) (Quit: Leaving)
[02:24:29] <geekosaur> also just looking at the formulas doesn't show you any of the "I know it says this but this is what we really do because it comes crashing down if we don't"
[02:24:39] <monochrom> But why are we discussing discreteness in #haskell ?
[02:24:58] <segfaultfizzbuzz> i think it ties a bit into thinking about laziness,
[02:25:01] <maerwald> be water, my friend
[02:25:14] <monochrom> May I remind that #haskell-offtopic exists.
[02:25:20] <segfaultfizzbuzz> haha ok :-)
[02:26:24] <monochrom> But my conclusion is maybe we should ban walking on bridges >:)
[02:26:44] <shapr> there's also #haskell-in-depth for long conversations
[02:27:03] *** Quits: takuan (~takuan@178-116-218-225.access.telenet.be) (Ping timeout: 260 seconds)
[02:27:15] *** Quits: shapr (~user@pool-173-73-44-186.washdc.fios.verizon.net) (Quit: rebooting emacs)
[02:28:56] *** Quits: dhouthoo (~dhouthoo@178-117-36-167.access.telenet.be) (Quit: WeeChat 3.4.1)
[02:31:04] *** Joins: shapr (~user@pool-173-73-44-186.washdc.fios.verizon.net)
[02:40:19] *** Joins: mcgroin (~mcgroin@roc37-h01-176-170-197-243.dsl.sta.abo.bbox.fr)
[02:40:56] *** Quits: __monty__ (~toonn@user/toonn) (Quit: leaving)
[02:47:27] *** Quits: mvk (~mvk@2607:fea8:5ce3:8500::3800) (Ping timeout: 260 seconds)
[02:51:28] *** Quits: whatsupdoc (uid509081@id-509081.hampstead.irccloud.com) (Quit: Connection closed for inactivity)
[02:51:35] *** Quits: bitdex (~bitdex@gateway/tor-sasl/bitdex) (Ping timeout: 240 seconds)
[02:52:40] <abastro[m]> Hm how can I access #haskell-in-depth
[02:52:45] <abastro[m]> From matrix
[02:53:01] *** Joins: fizbin (~fizbin@c-73-33-197-160.hsd1.nj.comcast.net)
[02:54:29] *** Joins: bitdex (~bitdex@gateway/tor-sasl/bitdex)
[02:54:53] <geekosaur> #haskell-in-depth:libera.chat I think
[02:56:47] <abastro[m]> Thank you!!!
[02:57:33] *** Quits: fizbin (~fizbin@c-73-33-197-160.hsd1.nj.comcast.net) (Ping timeout: 256 seconds)
[02:58:44] *** Joins: MajorBiscuit (~MajorBisc@2a02:a461:129d:1:6d4c:38a4:18b7:4b48)
[03:04:54] *** Quits: ProfSimm (~ProfSimm@87.227.196.109) (Remote host closed the connection)
[03:06:17] *** Quits: lavaman (~lavaman@c-174-63-118-52.hsd1.ma.comcast.net) (Remote host closed the connection)
[03:08:13] *** Quits: acidjnk (~acidjnk@p200300d0c7049f94e8cdd499a79a3878.dip0.t-ipconnect.de) (Ping timeout: 240 seconds)
[03:10:15] *** Quits: ec (~ec@gateway/tor-sasl/ec) (Ping timeout: 240 seconds)
[03:12:08] *** Quits: qwedfg (~qwedfg@user/qwedfg) (Read error: Connection reset by peer)
[03:14:22] *** Quits: MajorBiscuit (~MajorBisc@2a02:a461:129d:1:6d4c:38a4:18b7:4b48) (Quit: WeeChat 3.4)
[03:15:31] *** Joins: yauhsien (~yauhsien@61-231-37-33.dynamic-ip.hinet.net)
[03:16:08] *** Joins: qwedfg (~qwedfg@user/qwedfg)
[03:18:26] *** Joins: madjestic (~madjestic@88-159-247-120.fixed.kpn.net)
[03:20:08] *** Quits: yauhsien (~yauhsien@61-231-37-33.dynamic-ip.hinet.net) (Ping timeout: 246 seconds)
[03:30:02] *** Quits: jgeerds (~jgeerds@d5364b87.access.ecotel.net) (Ping timeout: 260 seconds)
[03:30:40] *** Joins: lavaman (~lavaman@c-174-63-118-52.hsd1.ma.comcast.net)
[03:31:55] *** Quits: lavaman (~lavaman@c-174-63-118-52.hsd1.ma.comcast.net) (Remote host closed the connection)
[03:34:48] *** Quits: Tuplanolla (~Tuplanoll@91-159-69-98.elisa-laajakaista.fi) (Quit: Leaving.)
[03:35:00] *** Joins: natechan (~nate@98.45.152.91)
[03:35:11] *** Quits: zyklotomic (~ethan@r4-128-61-95-82.res.gatech.edu) (Ping timeout: 246 seconds)
[03:37:10] *** Joins: zyklotomic (~ethan@res380d-128-61-87-11.res.gatech.edu)
[03:37:19] *** Quits: chomwitt (~chomwitt@ppp-94-67-69-112.home.otenet.gr) (Ping timeout: 260 seconds)
[03:42:00] *** Joins: Guest40 (~Guest40@189.101.232.157)
[03:42:13] *** Quits: Guest40 (~Guest40@189.101.232.157) (Client Quit)
[03:44:38] *** Quits: mcgroin (~mcgroin@roc37-h01-176-170-197-243.dsl.sta.abo.bbox.fr) (Ping timeout: 246 seconds)
[03:51:51] *** Joins: yauhsien (~yauhsien@61-231-37-33.dynamic-ip.hinet.net)
[03:56:27] *** Quits: yauhsien (~yauhsien@61-231-37-33.dynamic-ip.hinet.net) (Ping timeout: 260 seconds)
[04:02:28] *** Joins: lavaman (~lavaman@c-174-63-118-52.hsd1.ma.comcast.net)
[04:07:19] *** Joins: rawley (~rawley@216-197-141-102.nbfr.hsdb.sasknet.sk.ca)
[04:15:08] *** Quits: vicfred (~vicfred@user/vicfred) (Quit: Leaving)
[04:19:49] *** Joins: deadmarshal_ (~deadmarsh@95.38.116.113)
[04:19:57] *** Joins: lainon (~lainon@45-18-156-230.lightspeed.knvltn.sbcglobal.net)
[04:24:18] *** Quits: deadmarshal_ (~deadmarsh@95.38.116.113) (Ping timeout: 260 seconds)
[04:28:29] *** Joins: yauhsien (~yauhsien@61-231-37-33.dynamic-ip.hinet.net)
[04:29:13] *** Quits: geekosaur (~geekosaur@xmonad/geekosaur) (Remote host closed the connection)
[04:31:16] *** Joins: geekosaur (~geekosaur@xmonad/geekosaur)
[04:33:19] *** Quits: yauhsien (~yauhsien@61-231-37-33.dynamic-ip.hinet.net) (Ping timeout: 260 seconds)
[04:35:02] *** Quits: madjestic (~madjestic@88-159-247-120.fixed.kpn.net) (Ping timeout: 246 seconds)
[04:37:50] *** Quits: raehik (~raehik@cpc95906-rdng25-2-0-cust156.15-3.cable.virginm.net) (Ping timeout: 246 seconds)
[04:38:24] *** Joins: BlackboardN (~nathan@user/BlackboardN)
[04:40:19] *** Joins: alp (~alp@user/alp)
[04:41:50] *** Joins: wroathe (~wroathe@206-55-188-8.fttp.usinternet.com)
[04:41:50] *** Quits: wroathe (~wroathe@206-55-188-8.fttp.usinternet.com) (Changing host)
[04:41:50] *** Joins: wroathe (~wroathe@user/wroathe)
[04:45:55] *** Quits: lavaman (~lavaman@c-174-63-118-52.hsd1.ma.comcast.net) (Ping timeout: 260 seconds)
[04:48:13] *** Quits: gurkenglas (~gurkengla@dslb-178-012-018-212.178.012.pools.vodafone-ip.de) (Ping timeout: 260 seconds)
[04:51:24] *** Quits: Kaiepi (~Kaiepi@156.34.47.253) (Ping timeout: 272 seconds)
[04:55:18] *** Quits: califax (~califax@user/califx) (Remote host closed the connection)
[04:58:39] *** Joins: califax (~califax@user/califx)
[04:59:18] *** Quits: segfaultfizzbuzz (~segfaultf@2602:306:cd3c:9350:4091:e9b1:bc9f:dc79) (Ping timeout: 260 seconds)
[05:02:44] *** Quits: lainon (~lainon@45-18-156-230.lightspeed.knvltn.sbcglobal.net) (Quit: lainon)
[05:05:17] *** Joins: yauhsien (~yauhsien@61-231-37-33.dynamic-ip.hinet.net)
[05:09:41] *** Quits: yauhsien (~yauhsien@61-231-37-33.dynamic-ip.hinet.net) (Ping timeout: 246 seconds)
[05:13:35] *** Joins: lavaman (~lavaman@c-174-63-118-52.hsd1.ma.comcast.net)
[05:17:31] *** Joins: Kaiepi (~Kaiepi@156.34.47.253)
[05:19:52] *** Joins: lainon (~lainon@2600:1700:1bb0:1c10::1b)
[05:20:50] *** Quits: lainon (~lainon@2600:1700:1bb0:1c10::1b) (Client Quit)
[05:22:38] *** Joins: abastro (~abab9579@220.75.216.63)
[05:29:36] *** Joins: segfaultfizzbuzz (~segfaultf@2602:306:cd3c:9350:4091:e9b1:bc9f:dc79)
[05:35:50] *** Quits: alp (~alp@user/alp) (Ping timeout: 252 seconds)
[05:36:33] *** Joins: chenqisu1 (~chenqisu1@183.217.200.168)
[05:37:35] *** Quits: zeenk (~zeenk@2a02:2f04:a313:d600:8d26:ec9f:3ff6:fc94) (Quit: Konversation terminated!)
[05:38:16] *** Joins: yauhsien (~yauhsien@61-231-37-33.dynamic-ip.hinet.net)
[05:40:34] *** Quits: albet70 (~xxx@2400:8902::f03c:92ff:fe60:98d8) (Remote host closed the connection)
[05:41:15] *** Joins: frost (~frost@user/frost)
[05:41:17] *** Joins: harveypwca (~harveypwc@2601:246:c180:a570:3828:d8:e523:3f67)
[05:41:53] *** Quits: rawley (~rawley@216-197-141-102.nbfr.hsdb.sasknet.sk.ca) (Ping timeout: 256 seconds)
[05:42:06] *** Quits: ChaiTRex (~ChaiTRex@user/chaitrex) (Remote host closed the connection)
[05:42:29] *** Joins: ChaiTRex (~ChaiTRex@user/chaitrex)
[05:43:20] *** Quits: yauhsien (~yauhsien@61-231-37-33.dynamic-ip.hinet.net) (Ping timeout: 272 seconds)
[05:45:44] *** Quits: BlackboardN (~nathan@user/BlackboardN) (Ping timeout: 246 seconds)
[05:46:40] *** Joins: albet70 (~xxx@2400:8902::f03c:92ff:fe60:98d8)
[05:47:08] *** Quits: lavaman (~lavaman@c-174-63-118-52.hsd1.ma.comcast.net) (Ping timeout: 260 seconds)
[05:48:55] *** Joins: neurocyte86149 (~neurocyte@IP-094046077081.dynamic.medianet-world.de)
[05:48:56] *** Quits: neurocyte86149 (~neurocyte@IP-094046077081.dynamic.medianet-world.de) (Changing host)
[05:48:56] *** Joins: neurocyte86149 (~neurocyte@user/neurocyte)
[05:50:47] *** Quits: neurocyte8614 (~neurocyte@user/neurocyte) (Ping timeout: 260 seconds)
[05:50:48] *** neurocyte86149 is now known as neurocyte8614
[05:57:00] *** Joins: finsternis (~X@23.226.237.192)
[06:05:10] *** Quits: michalz (~michalz@185.246.204.61) (Remote host closed the connection)
[06:06:35] *** Quits: segfaultfizzbuzz (~segfaultf@2602:306:cd3c:9350:4091:e9b1:bc9f:dc79) (Ping timeout: 256 seconds)
[06:14:32] *** Quits: robertm (robertm@lattice.rojoma.com) (Quit: ...)
[06:15:27] *** Quits: hyiltiz (~quassel@31.220.5.250) (Ping timeout: 252 seconds)
[06:16:05] *** Quits: wroathe (~wroathe@user/wroathe) (Quit: Lost terminal)
[06:17:27] *** Joins: robertm (robertm@lattice.rojoma.com)
[06:17:35] *** Quits: cheater (~Username@user/cheater) (Ping timeout: 256 seconds)
[06:20:11] *** Joins: wroathe (~wroathe@206-55-188-8.fttp.usinternet.com)
[06:20:11] *** Quits: wroathe (~wroathe@206-55-188-8.fttp.usinternet.com) (Changing host)
[06:20:11] *** Joins: wroathe (~wroathe@user/wroathe)
[06:21:53] *** Joins: hyiltiz (~quassel@31.220.5.250)
[06:24:36] *** Quits: lbseale (~ep1ctetus@user/ep1ctetus) (Read error: Connection reset by peer)
[06:27:02] *** Quits: Unicorn_Princess (~Unicorn_P@93-103-228-248.dynamic.t-2.net) (Remote host closed the connection)
[06:29:09] *** Joins: yauhsien (~yauhsien@61-231-37-33.dynamic-ip.hinet.net)
[06:29:34] <abastro[m]> I think when we use haskell, we are enjoying advantage of laziness without noticing esp. when we employ abstractions. Am I the only one with this opinion?
[06:32:03] *** Quits: mon_aaraj (~MonAaraj@user/mon-aaraj/x-4416475) (Ping timeout: 260 seconds)
[06:33:26] *** Joins: dsrt^ (~dsrt@c-24-99-107-170.hsd1.ga.comcast.net)
[06:33:27] *** Joins: cheater (~Username@user/cheater)
[06:33:33] *** Joins: mon_aaraj (~MonAaraj@user/mon-aaraj/x-4416475)
[06:34:01] *** Quits: yauhsien (~yauhsien@61-231-37-33.dynamic-ip.hinet.net) (Ping timeout: 256 seconds)
[06:34:40] *** Joins: segfaultfizzbuzz (~segfaultf@2602:306:cd3c:9350:4091:e9b1:bc9f:dc79)
[06:36:42] *** Joins: rawley (~rawley@216-197-141-102.nbfr.hsdb.sasknet.sk.ca)
[06:38:36] *** Quits: segfaultfizzbuzz (~segfaultf@2602:306:cd3c:9350:4091:e9b1:bc9f:dc79) (Ping timeout: 240 seconds)
[06:38:50] *** Quits: robertm (robertm@lattice.rojoma.com) (Quit: WeeChat 3.0)
[06:43:59] <shapr> abastro[m]: I would agree with that
[06:44:43] *** Joins: robertm (robertm@lattice.rojoma.com)
[06:55:05] *** Joins: fizbin (~fizbin@c-73-33-197-160.hsd1.nj.comcast.net)
[06:55:27] *** Joins: AlexNoo_ (~AlexNoo@178.34.161.168)
[06:58:04] *** Quits: AlexZenon (~alzenon@178.34.151.158) (Ping timeout: 272 seconds)
[06:58:04] *** Quits: Alex_test (~al_test@178.34.151.158) (Ping timeout: 272 seconds)
[06:58:37] *** Quits: AlexNoo (~AlexNoo@178.34.151.158) (Ping timeout: 240 seconds)
[06:59:28] *** Quits: motherfsck (~motherfsc@user/motherfsck) (Ping timeout: 260 seconds)
[06:59:49] *** Quits: [itchyjunk] (~itchyjunk@user/itchyjunk/x-7353470) (Ping timeout: 240 seconds)
[06:59:58] *** Quits: fizbin (~fizbin@c-73-33-197-160.hsd1.nj.comcast.net) (Ping timeout: 272 seconds)
[07:01:16] *** Joins: Alex_test (~al_test@178.34.161.168)
[07:01:17] *** Joins: AlexZenon (~alzenon@178.34.161.168)
[07:01:53] *** Joins: yauhsien (~yauhsien@61-231-37-33.dynamic-ip.hinet.net)
[07:04:00] *** Joins: [itchyjunk] (~itchyjunk@user/itchyjunk/x-7353470)
[07:06:35] *** Joins: finn_elija (~finn_elij@user/finn-elija/x-0085643)
[07:06:35] *** Quits: FinnElija (~finn_elij@user/finn-elija/x-0085643) (Killed (NickServ (Forcing logout FinnElija -> finn_elija)))
[07:06:35] *** finn_elija is now known as FinnElija
[07:08:19] *** Joins: segfaultfizzbuzz (~segfaultf@2602:306:cd3c:9350:4091:e9b1:bc9f:dc79)
[07:10:18] *** Quits: abastro (~abab9579@220.75.216.63) (Remote host closed the connection)
[07:10:28] *** Joins: abastro (~abab9579@220.75.216.63)
[07:12:53] *** Quits: segfaultfizzbuzz (~segfaultf@2602:306:cd3c:9350:4091:e9b1:bc9f:dc79) (Ping timeout: 260 seconds)
[07:19:44] *** Joins: cdman (~dcm@user/dmc/x-4369397)
[07:28:09] *** Joins: neightchan (~nate@98.45.152.91)
[07:28:09] *** Quits: Dorkside (~dorkside@208.190.197.222) (Remote host closed the connection)
[07:28:23] *** Joins: Dorkside6 (~dorkside@208.190.197.222)
[07:28:24] *** Quits: Dorkside6 (~dorkside@208.190.197.222) (Remote host closed the connection)
[07:28:36] *** Joins: Dorkside6 (~dorkside@208.190.197.222)
[07:28:36] *** Quits: Dorkside6 (~dorkside@208.190.197.222) (Remote host closed the connection)
[07:28:41] *** Quits: natechan (~nate@98.45.152.91) (Read error: Connection reset by peer)
[07:28:48] *** Joins: Dorkside6 (~dorkside@208.190.197.222)
[07:28:48] *** Quits: Dorkside6 (~dorkside@208.190.197.222) (Remote host closed the connection)
[07:29:01] *** Joins: Dorkside6 (~dorkside@208.190.197.222)
[07:29:01] *** Quits: Dorkside6 (~dorkside@208.190.197.222) (Remote host closed the connection)
[07:29:14] *** Joins: Dorkside6 (~dorkside@208.190.197.222)
[07:29:14] *** Quits: Dorkside6 (~dorkside@208.190.197.222) (Remote host closed the connection)
[07:29:29] *** Joins: Dorkside6 (~dorkside@208.190.197.222)
[07:29:30] *** Quits: Dorkside6 (~dorkside@208.190.197.222) (Remote host closed the connection)
[07:29:41] *** Quits: waleee (~waleee@2001:9b0:213:7200:cc36:a556:b1e8:b340) (Ping timeout: 252 seconds)
[07:29:43] *** Quits: zyklotomic (~ethan@res380d-128-61-87-11.res.gatech.edu) (Ping timeout: 260 seconds)
[07:29:43] *** Joins: Dorkside6 (~dorkside@208.190.197.222)
[07:29:44] *** Quits: Dorkside6 (~dorkside@208.190.197.222) (Remote host closed the connection)
[07:29:56] *** Joins: Dorkside6 (~dorkside@208.190.197.222)
[07:29:57] *** Quits: Dorkside6 (~dorkside@208.190.197.222) (Remote host closed the connection)
[07:30:01] *** Quits: haasn (~nand@haasn.dev) (Quit: ZNC 1.7.5+deb4 - https://znc.in)
[07:30:09] *** Joins: Dorkside6 (~dorkside@208.190.197.222)
[07:30:09] *** Quits: Dorkside6 (~dorkside@208.190.197.222) (Remote host closed the connection)
[07:30:21] *** Joins: Dorkside6 (~dorkside@208.190.197.222)
[07:30:21] *** Quits: Dorkside6 (~dorkside@208.190.197.222) (Remote host closed the connection)
[07:30:34] *** Joins: Dorkside6 (~dorkside@208.190.197.222)
[07:30:35] *** Quits: Dorkside6 (~dorkside@208.190.197.222) (Remote host closed the connection)
[07:30:48] *** Joins: Dorkside6 (~dorkside@208.190.197.222)
[07:30:49] *** Quits: Dorkside6 (~dorkside@208.190.197.222) (Remote host closed the connection)
[07:31:08] *** Joins: Dorkside6 (~dorkside@208.190.197.222)
[07:31:08] *** Quits: Dorkside6 (~dorkside@208.190.197.222) (Remote host closed the connection)
[07:31:11] *** Quits: yaroot (~yaroot@2409:12:ac0:2300:680e:dbff:fe1e:4953) (Ping timeout: 245 seconds)
[07:31:25] *** Joins: haasn (~nand@haasn.dev)
[07:31:27] *** Joins: Dorkside6 (~dorkside@208.190.197.222)
[07:31:28] *** Quits: Dorkside6 (~dorkside@208.190.197.222) (Remote host closed the connection)
[07:31:28] *** Joins: zyklotomic (~ethan@res380d-128-61-87-255.res.gatech.edu)
[07:31:49] *** Joins: Dorkside6 (~dorkside@208.190.197.222)
[07:31:49] *** Quits: Dorkside6 (~dorkside@208.190.197.222) (Remote host closed the connection)
[07:32:01] *** Joins: Dorkside6 (~dorkside@208.190.197.222)
[07:32:02] *** Quits: Dorkside6 (~dorkside@208.190.197.222) (Remote host closed the connection)
[07:32:16] *** Joins: Dorkside6 (~dorkside@208.190.197.222)
[07:32:16] *** Quits: Dorkside6 (~dorkside@208.190.197.222) (Remote host closed the connection)
[07:32:29] *** Joins: Dorkside6 (~dorkside@208.190.197.222)
[07:32:29] *** Quits: Dorkside6 (~dorkside@208.190.197.222) (Remote host closed the connection)
[07:32:42] *** Joins: Dorkside6 (~dorkside@208.190.197.222)
[07:32:42] *** Quits: Dorkside6 (~dorkside@208.190.197.222) (Remote host closed the connection)
[07:33:03] *** Joins: Dorkside6 (~dorkside@208.190.197.222)
[07:33:03] *** Quits: Dorkside6 (~dorkside@208.190.197.222) (Remote host closed the connection)
[07:33:16] *** Joins: Dorkside6 (~dorkside@208.190.197.222)
[07:33:17] *** Quits: Dorkside6 (~dorkside@208.190.197.222) (Remote host closed the connection)
[07:33:30] *** Joins: Dorkside6 (~dorkside@208.190.197.222)
[07:33:31] *** Quits: Dorkside6 (~dorkside@208.190.197.222) (Remote host closed the connection)
[07:33:44] *** Joins: Dorkside6 (~dorkside@208.190.197.222)
[07:33:44] *** Quits: Dorkside6 (~dorkside@208.190.197.222) (Remote host closed the connection)
[07:33:57] *** Joins: Dorkside6 (~dorkside@208.190.197.222)
[07:33:58] *** Quits: Dorkside6 (~dorkside@208.190.197.222) (Remote host closed the connection)
[07:34:11] *** Joins: Dorkside6 (~dorkside@208.190.197.222)
[07:34:12] *** Quits: Dorkside6 (~dorkside@208.190.197.222) (Remote host closed the connection)
[07:34:24] *** Joins: Dorkside6 (~dorkside@208.190.197.222)
[07:34:24] *** Quits: Dorkside6 (~dorkside@208.190.197.222) (Remote host closed the connection)
[07:34:35] *** Quits: FinnElija (~finn_elij@user/finn-elija/x-0085643) (Ping timeout: 240 seconds)
[07:34:36] *** Joins: Dorkside6 (~dorkside@208.190.197.222)
[07:34:36] *** Quits: Dorkside6 (~dorkside@208.190.197.222) (Remote host closed the connection)
[07:34:51] *** Joins: Dorkside6 (~dorkside@208.190.197.222)
[07:34:51] *** Quits: Dorkside6 (~dorkside@208.190.197.222) (Remote host closed the connection)
[07:35:04] *** Joins: Dorkside6 (~dorkside@208.190.197.222)
[07:35:05] *** Quits: Dorkside6 (~dorkside@208.190.197.222) (Remote host closed the connection)
[07:35:17] *** Joins: Dorkside6 (~dorkside@208.190.197.222)
[07:35:17] *** Quits: Dorkside6 (~dorkside@208.190.197.222) (Remote host closed the connection)
[07:35:30] *** Joins: Dorkside6 (~dorkside@208.190.197.222)
[07:35:31] *** Quits: Dorkside6 (~dorkside@208.190.197.222) (Remote host closed the connection)
[07:35:44] *** Joins: Dorkside6 (~dorkside@208.190.197.222)
[07:35:44] *** Quits: Dorkside6 (~dorkside@208.190.197.222) (Remote host closed the connection)
[07:35:47] *** Joins: arjun (~arjun@user/arjun)
[07:35:57] *** Joins: Dorkside6 (~dorkside@208.190.197.222)
[07:35:57] *** Quits: Dorkside6 (~dorkside@208.190.197.222) (Remote host closed the connection)
[07:36:10] *** Joins: Dorkside6 (~dorkside@208.190.197.222)
[07:36:11] *** Quits: Dorkside6 (~dorkside@208.190.197.222) (Remote host closed the connection)
[07:36:24] *** Joins: Dorkside6 (~dorkside@208.190.197.222)
[07:36:25] *** Quits: Dorkside6 (~dorkside@208.190.197.222) (Remote host closed the connection)
[07:36:38] *** Joins: Dorkside6 (~dorkside@208.190.197.222)
[07:36:38] *** Quits: Dorkside6 (~dorkside@208.190.197.222) (Remote host closed the connection)
[07:36:47] *** Joins: FinnElija (~finn_elij@user/finn-elija/x-0085643)
[07:36:51] *** Joins: Dorkside6 (~dorkside@208.190.197.222)
[07:36:51] *** Quits: Dorkside6 (~dorkside@208.190.197.222) (Remote host closed the connection)
[07:37:04] *** Joins: Dorkside6 (~dorkside@208.190.197.222)
[07:37:05] *** Quits: Dorkside6 (~dorkside@208.190.197.222) (Remote host closed the connection)
[07:37:19] *** Joins: Dorkside6 (~dorkside@208.190.197.222)
[07:37:19] *** Quits: Dorkside6 (~dorkside@208.190.197.222) (Remote host closed the connection)
[07:37:21] <shapr> wow, part/join spam is much
[07:37:33] *** Joins: Dorkside6 (~dorkside@208.190.197.222)
[07:37:33] *** Quits: Dorkside6 (~dorkside@208.190.197.222) (Remote host closed the connection)
[07:37:46] *** Joins: Dorkside6 (~dorkside@208.190.197.222)
[07:37:47] *** Quits: Dorkside6 (~dorkside@208.190.197.222) (Remote host closed the connection)
[07:38:00] *** Joins: Dorkside6 (~dorkside@208.190.197.222)
[07:38:00] *** Quits: Dorkside6 (~dorkside@208.190.197.222) (Remote host closed the connection)
[07:38:13] *** Joins: Dorkside6 (~dorkside@208.190.197.222)
[07:38:13] *** Quits: Dorkside6 (~dorkside@208.190.197.222) (Remote host closed the connection)
[07:38:27] *** Joins: Dorkside6 (~dorkside@208.190.197.222)
[07:38:27] *** Quits: Dorkside6 (~dorkside@208.190.197.222) (Remote host closed the connection)
[07:38:40] *** Joins: Dorkside6 (~dorkside@208.190.197.222)
[07:38:41] *** Quits: Dorkside6 (~dorkside@208.190.197.222) (Remote host closed the connection)
[07:38:53] *** Joins: Dorkside6 (~dorkside@208.190.197.222)
[07:38:53] *** Quits: Dorkside6 (~dorkside@208.190.197.222) (Remote host closed the connection)
[07:39:05] *** Joins: Dorkside6 (~dorkside@208.190.197.222)
[07:39:05] *** Quits: Dorkside6 (~dorkside@208.190.197.222) (Remote host closed the connection)
[07:39:06] *** ChanServ sets mode: +o litharge
[07:39:06] *** litharge sets mode: +b *!*@208.190.197.222
[07:39:16] *** litharge sets mode: -o litharge
[07:39:59] *** Joins: motherfsck (~motherfsc@user/motherfsck)
[07:40:46] *** ChanServ sets mode: +o shapr
[07:42:13] *** Joins: gingeh (~gingeh@2001:8003:1c2a:b600:6547:4150:79c1:8a30)
[07:44:29] *** Joins: lavaman (~lavaman@c-174-63-118-52.hsd1.ma.comcast.net)
[07:46:21] *** Quits: mmaruseacph2 (~mihai@198.199.100.72) (Quit: So long and thanks for all the lambdas)
[07:48:28] <gingeh> Hi, I'm fairly new to Haskell. I am writing a very basic interpreter (https://paste.tomsmeding.com/eT561V0J) and want to know if there is a way lines 11 and 12 could be simplified. Perhaps using something like a state monad?
[07:52:35] <dsal> I don't think a State Monad is what you need there.  The structure seems a little odd to me, though.
[07:56:26] *** Joins: Zemyla (~Zemyla@2603-8080-4901-6095-ad10-d42b-e8a2-48d2.res6.spectrum.com)
[07:56:57] <glguy> gingeh: https://paste.tomsmeding.com/RwcJYkCH
[07:57:04] <glguy> dsal: maybe you'll find it interesting, too?
[08:00:01] *** Quits: ChaiTRex (~ChaiTRex@user/chaitrex) (Remote host closed the connection)
[08:00:04] <dsal> Yeah, that's neat.  I still don't think I'd use state for that, though.
[08:00:22] *** Joins: ChaiTRex (~ChaiTRex@user/chaitrex)
[08:00:30] *** Joins: segfaultfizzbuzz (~segfaultf@2602:306:cd3c:9350:4091:e9b1:bc9f:dc79)
[08:00:46] <glguy> it's the same idea as using parser combinators
[08:00:53] *** Quits: zebrag (~chris@user/zebrag) (Quit: Konversation terminated!)
[08:01:08] *** Joins: Codaraxis__ (~Codaraxis@user/codaraxis)
[08:02:03] <monochrom> If you use Haskell's built-in recursion, you no longer use your own stack state.
[08:02:14] *** Joins: Zemyla_ (~ec2-user@ec2-54-80-174-150.compute-1.amazonaws.com)
[08:02:23] *** Quits: Zemyla (~Zemyla@2603-8080-4901-6095-ad10-d42b-e8a2-48d2.res6.spectrum.com) (Quit: Client closed)
[08:02:32] *** Zemyla_ is now known as Zemyla
[08:02:32] *** Quits: Vajb (~Vajb@hag-jnsbng11-58c3a8-176.dhcp.inet.fi) (Read error: Connection reset by peer)
[08:02:40] *** Joins: Vajb (~Vajb@hag-jnsbng11-58c3a8-176.dhcp.inet.fi)
[08:03:35] <monochrom> But you can also choose to limit yourself to tail recursion so you're as close to a low level loop as Haskell allows, and then you maintain your own stack and you can make it your state of the State monad.
[08:04:12] <monochrom> Although, the only state operations are push and pop, so it is not the full power of State either.
[08:04:43] *** Quits: Codaraxis_ (~Codaraxis@user/codaraxis) (Ping timeout: 260 seconds)
[08:04:47] *** Quits: segfaultfizzbuzz (~segfaultf@2602:306:cd3c:9350:4091:e9b1:bc9f:dc79) (Ping timeout: 260 seconds)
[08:04:48] *** Quits: machinedgod (~machinedg@24.105.81.50) (Ping timeout: 260 seconds)
[08:04:51] <monochrom> In this case any or all of Graham Hutton's "calculating a compiler" papers apply.
[08:05:23] *** Quits: yauhsien (~yauhsien@61-231-37-33.dynamic-ip.hinet.net) (Ping timeout: 260 seconds)
[08:06:01] <gingeh> glguy: that looks promising! I'll play around with that to see if it makes things easier.
[08:06:49] *** Joins: yauhsien (~yauhsien@61-231-37-33.dynamic-ip.hinet.net)
[08:07:31] <gingeh> monochrom: "If you use Haskell's built-in recursion, you no longer use your own stack state." What do you mean by that?
[08:08:43] <monochrom> Err nevermind this is a Polish-notation calculator.  So yeah what glguy says about parsing, this is simply parsing Polish notation. And s/stack/input stream/ .
[08:09:07] *** ChanServ sets mode: +o litharge
[08:09:07] *** litharge sets mode: -bo *!*@208.190.197.222 litharge
[08:09:36] <monochrom> It is true that "StateT [Token] Maybe" is poor man's parser monad.
[08:18:13] *** Quits: rawley (~rawley@216-197-141-102.nbfr.hsdb.sasknet.sk.ca) (Remote host closed the connection)
[08:20:44] <dsal> gingeh: Where was that list format specified?  I think that's the part that's thrown me off.  I'd expected to have parsed something into a tree structure that's more natural to evaluate instead of doing the same parsing phase again in the evaluator.
[08:21:03] <dsal> I realized here I'd never actually seen forward polish notation.
[08:21:25] <gingeh> This is just something I made while bored in class
[08:21:35] <gingeh> I didn't put much design thought into it
[08:24:19] <dsal> Ah, OK.  It's a sensible exercise.  In practice, I end up with the expression being more tree-like.  e.g.,  data Expr a = Constant a | Add Expr Expr | Mul Expr Expr    etc...
[08:30:32] *** Quits: abastro (~abab9579@220.75.216.63) (Ping timeout: 272 seconds)
[08:31:10] *** Quits: lavaman (~lavaman@c-174-63-118-52.hsd1.ma.comcast.net) (Ping timeout: 272 seconds)
[08:32:01] *** Joins: deadmarshal_ (~deadmarsh@95.38.116.113)
[08:40:32] *** Quits: sammelweis (~quassel@2601:401:8200:2d4c:bd9:d04c:7f69:eb10) (Quit: https://quassel-irc.org - Chat comfortably. Anywhere.)
[08:46:37] <abastro[m]> Can you backtrack with `StateT [Token] Maybe`?
[08:47:25] <glguy> You'd switch from Maybe to []
[08:48:17] *** Joins: x88x88x (~x88x88x@2001:19f0:5:39a8:5400:3ff:feb6:73cb)
[08:48:50] <abastro[m]> Oh, so that is poor man's parser monad
[08:49:08] <glguy> also
[09:04:55] *** Quits: jao (~jao@cpc103048-sgyl39-2-0-cust502.18-2.cable.virginm.net) (Ping timeout: 260 seconds)
[09:10:08] *** Quits: wroathe (~wroathe@user/wroathe) (Ping timeout: 246 seconds)
[09:10:46] <Zemyla> Do you tokenize before parsing?
[09:15:07] *** Joins: Codaraxis_ (~Codaraxis@user/codaraxis)
[09:15:13] *** Quits: arjun (~arjun@user/arjun) (Quit: Leaving)
[09:15:25] <dsal> Most of the time, I just do everything in one pass with megaparsec.
[09:17:38] <dsal> My current work project is using attoparsec, but similar concept, I built up the final data structure as I'm going.
[09:18:53] *** Quits: Codaraxis__ (~Codaraxis@user/codaraxis) (Ping timeout: 260 seconds)
[09:19:55] <Zemyla> So would tokenizing make things faster or simpler?
[09:25:08] <dsal> I don't have performance or simplicity problems with any of my parsers, so I've not put thought into it.
[09:27:43] *** Quits: yauhsien (~yauhsien@61-231-37-33.dynamic-ip.hinet.net) (Remote host closed the connection)
[09:28:17] *** Joins: yauhsien (~yauhsien@61-231-37-33.dynamic-ip.hinet.net)
[09:30:42] *** Joins: BlackboardN (~nathan@user/BlackboardN)
[09:32:53] *** Quits: deadmarshal_ (~deadmarsh@95.38.116.113) (Ping timeout: 260 seconds)
[09:33:14] *** Quits: yauhsien (~yauhsien@61-231-37-33.dynamic-ip.hinet.net) (Ping timeout: 246 seconds)
[09:35:12] *** Quits: BlackboardN (~nathan@user/BlackboardN) (Ping timeout: 260 seconds)
[09:38:21] *** Joins: merijn (~merijn@c-001-001-001.client.esciencecenter.eduvpn.nl)
[09:38:55] <abastro[m]> Why not do tokenizers tho?
[09:40:30] <dsal> I don't understand what kind of improvements people are suggesting.  Can you be concrete about what needs to be better in a particular parser?
[09:40:35] *** Quits: azimut (~azimut@gateway/tor-sasl/azimut) (Ping timeout: 240 seconds)
[09:41:16] *** Joins: azimut (~azimut@gateway/tor-sasl/azimut)
[09:43:50] <dolio> Parser combinators don't really require factoring out a separate tokenization stage as much as traditional parser designs.
[09:44:24] *** Joins: yauhsien (~yauhsien@61-231-37-33.dynamic-ip.hinet.net)
[09:44:26] <dolio> Getting a token can just be a parser.
[09:46:17] *** Quits: napping (~brandon@65.128.49.110) (Ping timeout: 260 seconds)
[09:46:39] *** Quits: AkechiShiro (~licht@user/akechishiro) (Ping timeout: 252 seconds)
[09:47:31] *** Joins: AkechiShiro (~licht@user/akechishiro)
[09:47:41] *** Parts: jakalx (~jakalx@base.jakalx.net) (Error from remote client)
[09:54:20] *** Joins: mmaruseacph2 (~mihai@198.199.98.239)
[10:02:31] *** Joins: vicfred (~vicfred@user/vicfred)
[10:03:29] *** Joins: takuan (~takuan@178-116-218-225.access.telenet.be)
[10:06:59] *** Joins: vysn (~vysn@user/vysn)
[10:07:27] *** Quits: merijn (~merijn@c-001-001-001.client.esciencecenter.eduvpn.nl) (Ping timeout: 260 seconds)
[10:12:34] *** Joins: sammelweis (~quassel@2601:401:8200:2d4c:bd9:d04c:7f69:eb10)
[10:13:25] *** Joins: jakalx (~jakalx@base.jakalx.net)
[10:15:03] *** Quits: Akiva (~Akiva@user/Akiva) (Ping timeout: 250 seconds)
[10:21:39] *** Joins: acidjnk (~acidjnk@p200300d0c7049f703514052294f74a96.dip0.t-ipconnect.de)
[10:28:26] *** Joins: lavaman (~lavaman@c-174-63-118-52.hsd1.ma.comcast.net)
[10:31:15] *** Quits: vicfred (~vicfred@user/vicfred) (Ping timeout: 260 seconds)
[10:31:28] *** Joins: vicfred (~vicfred@user/vicfred)
[10:38:03] *** Quits: [itchyjunk] (~itchyjunk@user/itchyjunk/x-7353470) (Remote host closed the connection)
[10:48:30] *** Quits: vysn (~vysn@user/vysn) (Remote host closed the connection)
[10:52:13] *** Quits: vicfred (~vicfred@user/vicfred) (Read error: Connection reset by peer)
[10:52:55] *** Joins: vicfred (~vicfred@user/vicfred)
[10:54:20] *** Joins: gurkenglas (~gurkengla@dslb-178-012-018-212.178.012.pools.vodafone-ip.de)
[10:56:38] *** Joins: fizbin (~fizbin@c-73-33-197-160.hsd1.nj.comcast.net)
[11:01:28] *** Joins: vicfred_ (~vicfred@user/vicfred)
[11:01:33] *** Quits: fizbin (~fizbin@c-73-33-197-160.hsd1.nj.comcast.net) (Ping timeout: 260 seconds)
[11:01:52] <abastro[m]> I mean, getting a token would be parser
[11:02:08] *** Quits: vicfred (~vicfred@user/vicfred) (Ping timeout: 260 seconds)
[11:02:38] <abastro[m]> So I was suggesting more like, gathering PC doing lexing together - so that you could distinguish which is interacting with char more easily
[11:02:38] *** Quits: zmt00 (~zmt00@user/zmt00) (Quit: Leaving)
[11:06:45] *** Joins: zmt00 (~zmt00@user/zmt00)
[11:13:12] *** Quits: lavaman (~lavaman@c-174-63-118-52.hsd1.ma.comcast.net) (Ping timeout: 260 seconds)
[11:31:24] *** Joins: gehmehgeh (~user@user/gehmehgeh)
[11:42:51] *** Quits: cyphase (~cyphase@user/cyphase) (Ping timeout: 256 seconds)
[11:45:52] *** Joins: cyphase (~cyphase@user/cyphase)
[11:46:39] *** Quits: zmt00 (~zmt00@user/zmt00) (Quit: Leaving)
[11:48:31] *** Joins: zmt00 (~zmt00@user/zmt00)
[11:50:43] *** Joins: bahamas (~lucian@84.232.140.158)
[11:58:43] *** Parts: jakalx (~jakalx@base.jakalx.net) ()
[11:58:49] *** Joins: jakalx (~jakalx@base.jakalx.net)
[12:00:36] *** Quits: ellie (~ellie@user/ellie) (Quit: The Lounge - https://thelounge.chat)
[12:02:24] *** Joins: Midjak (~Midjak@82.66.147.146)
[12:02:46] *** Joins: coot (~coot@213.134.190.95)
[12:04:25] *** Joins: merijn (~merijn@c-001-001-001.client.esciencecenter.eduvpn.nl)
[12:04:36] *** Quits: Midjak (~Midjak@82.66.147.146) (Client Quit)
[12:18:29] *** Joins: vicfred__ (~vicfred@user/vicfred)
[12:18:47] *** Quits: vicfred_ (~vicfred@user/vicfred) (Ping timeout: 246 seconds)
[12:22:38] *** Quits: bahamas (~lucian@84.232.140.158) (Ping timeout: 246 seconds)
[12:22:51] *** Joins: Midjak (~Midjak@82.66.147.146)
[12:26:45] *** Quits: nek0 (~nek0@nek0.eu) (Quit: The Lounge - https://thelounge.chat)
[12:27:50] *** Joins: madjestic (~madjestic@88-159-247-120.fixed.kpn.net)
[12:37:27] *** Joins: Pickchea (~private@user/pickchea)
[12:38:23] *** Quits: merijn (~merijn@c-001-001-001.client.esciencecenter.eduvpn.nl) (Ping timeout: 260 seconds)
[12:40:30] *** Joins: mikoto-chan (~mikoto-ch@213.177.151.239)
[12:45:27] *** Joins: merijn (~merijn@c-001-001-001.client.esciencecenter.eduvpn.nl)
[12:45:45] *** Joins: kuribas (~user@ptr-25vy0i9ukrx95drquaj.18120a2.ip6.access.telenet.be)
[12:49:09] *** Quits: benin (~benin@183.82.204.110) (Ping timeout: 256 seconds)
[12:49:23] *** Quits: cyphase (~cyphase@user/cyphase) (Ping timeout: 260 seconds)
[12:49:39] *** Joins: mixfix41 (~homefame@user/mixfix41)
[12:53:25] *** Joins: deadmarshal_ (~deadmarsh@95.38.116.113)
[12:54:22] *** Joins: cyphase (~cyphase@user/cyphase)
[12:57:43] *** Joins: daisyc1 (~daisyc4@212.30.36.90)
[13:03:44] *** Joins: Tuplanolla (~Tuplanoll@91-159-69-98.elisa-laajakaista.fi)
[13:06:41] *** Joins: alp (~alp@user/alp)
[13:08:45] *** Quits: Midjak (~Midjak@82.66.147.146) (Read error: Connection reset by peer)
[13:09:27] *** Joins: Midjak (~Midjak@82.66.147.146)
[13:10:42] *** Joins: lavaman (~lavaman@c-174-63-118-52.hsd1.ma.comcast.net)
[13:15:01] *** Quits: jespada (~jespada@cpc121022-nmal24-2-0-cust171.19-2.cable.virginm.net) (Quit: Textual IRC Client: www.textualapp.com)
[13:19:03] *** Joins: ph14nix[m] (~ph14nixma@2001:470:69fc:105::1:ec40)
[13:19:12] *** Parts: ph14nix[m] (~ph14nixma@2001:470:69fc:105::1:ec40) ()
[13:22:49] *** Quits: dsrt^ (~dsrt@c-24-99-107-170.hsd1.ga.comcast.net) (Remote host closed the connection)
[13:27:58] *** Quits: daisyc1 (~daisyc4@212.30.36.90) (Ping timeout: 260 seconds)
[13:30:18] *** Quits: Sgeo (~Sgeo@user/sgeo) (Read error: Connection reset by peer)
[13:30:52] *** Joins: chomwitt (~chomwitt@2a02:587:dc1b:d600:c3a8:b4dc:b642:1f2)
[13:33:50] *** Quits: yauhsien (~yauhsien@61-231-37-33.dynamic-ip.hinet.net) (Remote host closed the connection)
[13:34:25] *** Joins: yauhsien (~yauhsien@61-231-37-33.dynamic-ip.hinet.net)
[13:35:06] *** Joins: mike11 (~Mike@user/mike11)
[13:38:58] *** Quits: eggplantade (~Eggplanta@108-201-191-115.lightspeed.sntcca.sbcglobal.net) (Remote host closed the connection)
[13:39:36] *** Quits: yauhsien (~yauhsien@61-231-37-33.dynamic-ip.hinet.net) (Ping timeout: 272 seconds)
[13:43:08] *** Joins: jespada (~jespada@cpc121022-nmal24-2-0-cust171.19-2.cable.virginm.net)
[13:44:05] *** Quits: tzh (~tzh@c-24-21-73-154.hsd1.or.comcast.net) (Quit: zzz)
[13:48:24] *** Joins: yauhsien (~yauhsien@61-231-37-33.dynamic-ip.hinet.net)
[13:50:50] *** Quits: lavaman (~lavaman@c-174-63-118-52.hsd1.ma.comcast.net) (Ping timeout: 246 seconds)
[13:52:28] *** Quits: mike11 (~Mike@user/mike11) (Ping timeout: 260 seconds)
[13:54:13] *** Quits: acidjnk (~acidjnk@p200300d0c7049f703514052294f74a96.dip0.t-ipconnect.de) (Ping timeout: 260 seconds)
[13:54:50] *** Joins: ProfSimm (~ProfSimm@87.227.196.109)
[13:55:23] *** Quits: zyklotomic (~ethan@res380d-128-61-87-255.res.gatech.edu) (Ping timeout: 260 seconds)
[13:57:19] *** Joins: zyklotomic (~ethan@res388d-128-61-92-112.res.gatech.edu)
[13:57:55] *** Quits: ProfSimm (~ProfSimm@87.227.196.109) (Remote host closed the connection)
[14:02:08] *** Quits: dextaa_ (~dextaa@user/dextaa) (Remote host closed the connection)
[14:05:08] *** Joins: liz (~liz@cpc84585-newc17-2-0-cust60.16-2.cable.virginm.net)
[14:07:48] *** Joins: abastro (~abab9579@220.75.216.63)
[14:07:53] *** AlexNoo_ is now known as AlexNoo
[14:15:20] *** Quits: merijn (~merijn@c-001-001-001.client.esciencecenter.eduvpn.nl) (Ping timeout: 246 seconds)
[14:16:02] *** Quits: mikoto-chan (~mikoto-ch@213.177.151.239) (Ping timeout: 246 seconds)
[14:16:02] *** Quits: Pickchea (~private@user/pickchea) (Ping timeout: 246 seconds)
[14:18:10] *** Joins: mikoto-chan (~mikoto-ch@213.177.151.239)
[14:22:20] *** Joins: zeenk (~zeenk@2a02:2f04:a313:d600:8d26:ec9f:3ff6:fc94)
[14:23:56] *** Joins: acidjnk (~acidjnk@p200300d0c7049f70650b5af7f0466f4b.dip0.t-ipconnect.de)
[14:26:02] *** Joins: jgeerds (~jgeerds@d5364b87.access.ecotel.net)
[14:29:39] *** Joins: Guest43 (~Guest43@176.42.176.37)
[14:31:08] *** Joins: BlackboardN (~nathan@user/BlackboardN)
[14:32:34] *** Joins: hrdl (~hrdl@mail.hrdl.eu)
[14:35:32] *** Joins: dyeplexer (~dyeplexer@user/dyeplexer)
[14:36:03] *** Quits: Guest43 (~Guest43@176.42.176.37) (Quit: Client closed)
[14:36:56] *** Quits: vicfred__ (~vicfred@user/vicfred) (Remote host closed the connection)
[14:37:50] *** Joins: vicfred__ (~vicfred@user/vicfred)
[14:40:05] *** Joins: eggplantade (~Eggplanta@108-201-191-115.lightspeed.sntcca.sbcglobal.net)
[14:41:49] *** Joins: cosimone (~user@93-47-228-79.ip115.fastwebnet.it)
[14:44:23] *** Quits: eggplantade (~Eggplanta@108-201-191-115.lightspeed.sntcca.sbcglobal.net) (Ping timeout: 246 seconds)
[14:47:43] *** Quits: abastro (~abab9579@220.75.216.63) (Remote host closed the connection)
[14:47:54] *** Joins: abastro (~abab9579@220.75.216.63)
[14:53:43] *** Quits: deadmarshal_ (~deadmarsh@95.38.116.113) (Ping timeout: 260 seconds)
[14:55:16] *** Joins: _ht (~quassel@231-169-21-31.ftth.glasoperator.nl)
[14:58:17] *** Joins: fizbin (~fizbin@c-73-33-197-160.hsd1.nj.comcast.net)
[14:58:58] *** Quits: xkuru (~xkuru@user/xkuru) (Ping timeout: 260 seconds)
[15:00:22] *** Quits: frost (~frost@user/frost) (Ping timeout: 250 seconds)
[15:01:35] *** Quits: ChaiTRex (~ChaiTRex@user/chaitrex) (Ping timeout: 240 seconds)
[15:02:51] *** Quits: fizbin (~fizbin@c-73-33-197-160.hsd1.nj.comcast.net) (Ping timeout: 260 seconds)
[15:03:41] *** Joins: ChaiTRex (~ChaiTRex@user/chaitrex)
[15:04:53] *** Joins: cfricke (~cfricke@user/cfricke)
[15:05:43] *** Quits: turlando (~turlando@user/turlando) (Ping timeout: 256 seconds)
[15:06:01] *** Joins: turlando (~turlando@93-42-250-112.ip89.fastwebnet.it)
[15:06:01] *** Quits: turlando (~turlando@93-42-250-112.ip89.fastwebnet.it) (Changing host)
[15:06:01] *** Joins: turlando (~turlando@user/turlando)
[15:06:23] *** Joins: ubert1 (~Thunderbi@p200300ecdf158897cd25ca1c45111265.dip0.t-ipconnect.de)
[15:06:46] *** Joins: xkuru (~xkuru@user/xkuru)
[15:17:05] *** Joins: lavaman (~lavaman@c-174-63-118-52.hsd1.ma.comcast.net)
[15:20:47] *** Quits: acidjnk (~acidjnk@p200300d0c7049f70650b5af7f0466f4b.dip0.t-ipconnect.de) (Ping timeout: 256 seconds)
[15:23:10] *** Joins: deadmarshal_ (~deadmarsh@95.38.116.113)
[15:24:42] *** Quits: econo (uid147250@user/econo) (Quit: Connection closed for inactivity)
[15:25:20] *** Quits: mikoto-chan (~mikoto-ch@213.177.151.239) (Ping timeout: 246 seconds)
[15:27:40] *** Joins: vysn (~vysn@user/vysn)
[15:27:54] *** Quits: deadmarshal_ (~deadmarsh@95.38.116.113) (Ping timeout: 272 seconds)
[15:28:32] *** Quits: geekosaur (~geekosaur@xmonad/geekosaur) (Killed (NickServ (GHOST command used by allbery_b)))
[15:28:32] *** Joins: allbery_b (~geekosaur@xmonad/geekosaur)
[15:28:35] *** allbery_b is now known as geekosaur
[15:29:40] *** Joins: zer0bitz (~zer0bitz@2001:2003:f750:a200:a519:6081:f3da:f296)
[15:30:20] *** Quits: cfricke (~cfricke@user/cfricke) (Quit: WeeChat 3.4.1)
[15:31:41] <abastro> What is the idiomatic way to represent a function `f :: u -> v` where f (a <> b) = f a <> f b?
[15:31:42] *** Quits: BlackboardN (~nathan@user/BlackboardN) (Ping timeout: 272 seconds)
[15:32:05] <abastro> When `u`, `v` are at least semigroup, ofc
[15:32:34] <abastro> (Also `f mempty = mempty` in case of Monoid)
[15:33:11] <abastro> I want a type which denotes that the restriction holds.
[15:35:28] *** Quits: lavaman (~lavaman@c-174-63-118-52.hsd1.ma.comcast.net) (Read error: Connection reset by peer)
[15:35:28] *** Joins: awschnap (~lavaman@c-174-63-118-52.hsd1.ma.comcast.net)
[15:35:41] *** Quits: yauhsien (~yauhsien@61-231-37-33.dynamic-ip.hinet.net) (Remote host closed the connection)
[15:36:16] *** Joins: yauhsien (~yauhsien@61-231-37-33.dynamic-ip.hinet.net)
[15:38:37] *** Joins: mikoto-chan (~mikoto-ch@213.177.151.239)
[15:39:54] *** Joins: Psybur (~Psybur@2601:5c9:4201:3220:19c2:a1cd:6600:38ba)
[15:41:22] *** Quits: xkuru (~xkuru@user/xkuru) (Read error: Connection reset by peer)
[15:41:50] *** Quits: yauhsien (~yauhsien@61-231-37-33.dynamic-ip.hinet.net) (Ping timeout: 272 seconds)
[15:49:22] *** Joins: yauhsien (~yauhsien@61-231-37-33.dynamic-ip.hinet.net)
[15:50:22] *** Quits: Vajb (~Vajb@hag-jnsbng11-58c3a8-176.dhcp.inet.fi) (Read error: Connection reset by peer)
[15:51:34] *** Joins: Vajb (~Vajb@hag-jnsbng11-58c3a8-176.dhcp.inet.fi)
[15:51:51] *** Quits: gurkenglas (~gurkengla@dslb-178-012-018-212.178.012.pools.vodafone-ip.de) (Ping timeout: 260 seconds)
[15:55:47] *** Quits: awschnap (~lavaman@c-174-63-118-52.hsd1.ma.comcast.net) (Ping timeout: 246 seconds)
[15:58:01] *** Joins: machinedgod (~machinedg@24.105.81.50)
[15:58:48] *** Joins: Pickchea (~private@user/pickchea)
[15:58:49] *** Quits: gingeh (~gingeh@2001:8003:1c2a:b600:6547:4150:79c1:8a30) (Read error: Connection reset by peer)
[15:59:38] *** Quits: pooryorick (~pooryoric@87-119-174-173.tll.elisa.ee) (Ping timeout: 260 seconds)
[15:59:52] *** Joins: pooryorick (~pooryoric@87-119-174-173.tll.elisa.ee)
[16:00:22] *** Joins: gingeh (~gingeh@2001:8003:1c2a:b600:79c4:94cc:218e:5ea5)
[16:02:40] *** Quits: yauhsien (~yauhsien@61-231-37-33.dynamic-ip.hinet.net) (Remote host closed the connection)
[16:05:13] *** Joins: acidjnk (~acidjnk@p200300d0c7049f70498c262e6d47c9a7.dip0.t-ipconnect.de)
[16:05:45] *** Joins: yauhsien (~yauhsien@61-231-37-33.dynamic-ip.hinet.net)
[16:10:59] *** Quits: yauhsien (~yauhsien@61-231-37-33.dynamic-ip.hinet.net) (Ping timeout: 260 seconds)
[16:11:56] *** Joins: merijn (~merijn@c-001-001-001.client.esciencecenter.eduvpn.nl)
[16:13:15] *** Joins: yauhsien (~yauhsien@61-231-37-33.dynamic-ip.hinet.net)
[16:15:44] *** Quits: mikoto-chan (~mikoto-ch@213.177.151.239) (Ping timeout: 246 seconds)
[16:18:27] *** Joins: unit73e (~emanuel@2001:818:e8dd:7c00:32b5:c2ff:fe6b:5291)
[16:19:11] <unit73e> hello. looks like the best way to handle packages is just using ghcup. at least in arch.
[16:19:19] <unit73e> avoids all the issues
[16:19:36] <geekosaur> that's generally the recommendation, yes
[16:22:20] *** Joins: mcgroin (~mcgroin@roc37-h01-176-170-197-243.dsl.sta.abo.bbox.fr)
[16:27:06] <Franciman> unit73e: i like that way too ^^
[16:28:22] *** Joins: bahamas (~lucian@84.232.140.158)
[16:34:09] <unit73e> hls now works flawlessly. unfortunately arch packages never really worked very well with haskell.
[16:34:34] <unit73e> not even the static versions
[16:35:46] <unit73e> still on the nobody asked xp3 battle. making args now.
[16:41:17] *** Quits: zer0bitz (~zer0bitz@2001:2003:f750:a200:a519:6081:f3da:f296) ()
[16:46:26] *** Quits: merijn (~merijn@c-001-001-001.client.esciencecenter.eduvpn.nl) (Ping timeout: 272 seconds)
[16:47:35] *** Joins: razetime (~quassel@49.207.199.125)
[16:48:43] <abastro> Anyone knows answer to my question?
[16:50:14] *** Quits: jgeerds (~jgeerds@d5364b87.access.ecotel.net) (Ping timeout: 272 seconds)
[16:51:28] *** Quits: gawen (~gawen@user/gawen) (Quit: cya)
[16:53:00] *** Joins: gawen (~gawen@user/gawen)
[16:54:21] *** Joins: mbuf (~Shakthi@171.61.151.80)
[16:57:20] <abastro> (Is it fine to say it again?)
[16:57:38] <tdammers> it generally won't increase your odds of getting an answer
[16:57:50] <tdammers> maybe if it's been hours
[16:57:50] *** Quits: mcgroin (~mcgroin@roc37-h01-176-170-197-243.dsl.sta.abo.bbox.fr) (Ping timeout: 272 seconds)
[16:58:02] <geekosaur> you might want to ask it on reddit or the discourse too
[16:59:12] *** Joins: mcgroin (~mcgroin@roc37-h01-176-170-197-243.dsl.sta.abo.bbox.fr)
[17:00:52] *** Quits: alp (~alp@user/alp) (Ping timeout: 260 seconds)
[17:04:14] *** Quits: chenqisu1 (~chenqisu1@183.217.200.168) (Quit: Leaving)
[17:06:23] *** Joins: odnes (~odnes@5-203-146-18.pat.nym.cosmote.net)
[17:07:40] *** Quits: bliminse (~bliminse@host86-185-253-73.range86-185.btcentralplus.com) (Quit: leaving)
[17:08:29] *** Quits: yauhsien (~yauhsien@61-231-37-33.dynamic-ip.hinet.net) (Remote host closed the connection)
[17:09:07] *** Joins: yauhsien (~yauhsien@61-231-37-33.dynamic-ip.hinet.net)
[17:10:58] *** Quits: pavonia (~user@user/siracusa) (Quit: Bye!)
[17:12:51] *** Quits: razetime (~quassel@49.207.199.125) (Quit: https://quassel-irc.org - Chat comfortably. Anywhere.)
[17:13:07] *** Joins: razetime (~quassel@49.207.199.125)
[17:13:59] *** Quits: yauhsien (~yauhsien@61-231-37-33.dynamic-ip.hinet.net) (Ping timeout: 260 seconds)
[17:14:49] *** Joins: bliminse (~bliminse@host86-185-253-73.range86-185.btcentralplus.com)
[17:15:20] *** Quits: euandreh (~euandreh@2804:14c:33:9fe5:ac31:7ac1:bab2:710d) (Remote host closed the connection)
[17:15:44] *** Joins: euandreh (~euandreh@2804:14c:33:9fe5:67d2:d391:3f5:bf92)
[17:16:23] <abastro> I see, that could be betteer
[17:16:46] <abastro> Perhaps you mean you do not have an easy answer for this?
[17:17:28] *** Quits: zeenk (~zeenk@2a02:2f04:a313:d600:8d26:ec9f:3ff6:fc94) (Quit: Konversation terminated!)
[17:20:03] *** Joins: mikoto-chan (~mikoto-ch@213.177.151.239)
[17:21:09] <geekosaur> I just mean if you're not getting answers here you might need a wider audience
[17:21:34] <geekosaur> speaking more as a mod than as a Haskell person (sadly, I don't know nearly as much Haskell as I sometimes seem to)
[17:23:08] *** Quits: unit73e (~emanuel@2001:818:e8dd:7c00:32b5:c2ff:fe6b:5291) (Ping timeout: 252 seconds)
[17:23:12] *** Quits: vysn (~vysn@user/vysn) (Quit: WeeChat 3.4)
[17:25:03] *** Joins: nek0 (~nek0@nek0.eu)
[17:25:51] <abastro> Oh, I see. I thought you were master haskeller (and perhaps you really are & suffering imposter syndrome)
[17:28:54] <geekosaur> no, there's quite a lot I don't know yet
[17:29:25] <geekosaur> I think a lot of my rep comes from being the main xmonad maintainer… but 90% of that is twiddling the right X server bits, which I *do* know well
[17:31:05] <geekosaur> but I confused myself (as usual) and possiblky confused someone else last night trying to explain "forall" last night: I understand it in practice but can't describe it properly for the life of me
[17:33:15] <liz> abastro: i'm not sure if there's a type that represents that restriction, but that sort of function is a homomorphism of semigroups
[17:39:11] *** Quits: bahamas (~lucian@84.232.140.158) (Ping timeout: 260 seconds)
[17:39:57] *** Quits: acidjnk (~acidjnk@p200300d0c7049f70498c262e6d47c9a7.dip0.t-ipconnect.de) (Ping timeout: 260 seconds)
[17:42:09] *** Joins: eggplantade (~Eggplanta@108-201-191-115.lightspeed.sntcca.sbcglobal.net)
[17:42:52] *** Quits: AlexZenon (~alzenon@178.34.161.168) (Quit: ;-)
[17:43:02] *** Quits: Alex_test (~al_test@178.34.161.168) (Quit: ;-)
[17:43:08] <abastro> Yep, I want to represent homomorphism of semigroups
[17:43:08] *** Quits: AlexNoo (~AlexNoo@178.34.161.168) (Quit: Leaving)
[17:43:18] <abastro> Feels bad just using function
[17:44:38] *** Quits: madjestic (~madjestic@88-159-247-120.fixed.kpn.net) (Ping timeout: 260 seconds)
[17:46:39] *** Quits: eggplantade (~Eggplanta@108-201-191-115.lightspeed.sntcca.sbcglobal.net) (Ping timeout: 260 seconds)
[17:47:06] *** Joins: AlexNoo (~AlexNoo@178.34.161.168)
[17:47:38] *** Joins: AlexZenon (~alzenon@178.34.161.168)
[17:48:58] *** Joins: Alex_test (~al_test@178.34.161.168)
[17:49:24] *** Quits: Psybur (~Psybur@2601:5c9:4201:3220:19c2:a1cd:6600:38ba) (Ping timeout: 240 seconds)
[17:49:43] *** Quits: mcgroin (~mcgroin@roc37-h01-176-170-197-243.dsl.sta.abo.bbox.fr) (Remote host closed the connection)
[17:50:18] *** Quits: Alex_test (~al_test@178.34.161.168) (Client Quit)
[17:50:26] *** Joins: Psybur (~Psybur@2600:1003:b1ad:503e:b062:f712:8f0b:8adc)
[17:51:10] *** Joins: Alex_test (~al_test@178.34.161.168)
[17:53:29] *** Joins: lavaman (~lavaman@c-174-63-118-52.hsd1.ma.comcast.net)
[17:57:44] *** Joins: raehik (~raehik@cpc95906-rdng25-2-0-cust156.15-3.cable.virginm.net)
[17:57:53] *** Joins: yauhsien (~yauhsien@61-231-37-33.dynamic-ip.hinet.net)
[18:02:08] *** Quits: yauhsien (~yauhsien@61-231-37-33.dynamic-ip.hinet.net) (Ping timeout: 246 seconds)
[18:05:16] <kuribas> albet70: hi
[18:05:18] <kuribas> albet70: do you get RankN types now?
[18:07:49] <abastro> I guess my question is actually more suited for Haskell Discourse. Thank you!
[18:12:33] *** Joins: yauhsien (~yauhsien@61-231-37-33.dynamic-ip.hinet.net)
[18:14:28] *** Joins: __monty__ (~toonn@user/toonn)
[18:16:14] *** Joins: deadmarshal_ (~deadmarsh@95.38.116.113)
[18:21:27] *** Quits: Pickchea (~private@user/pickchea) (Quit: Leaving)
[18:22:06] *** Joins: stevenxl (~stevenxl@c-73-72-2-81.hsd1.il.comcast.net)
[18:22:22] *** Quits: kuribas (~user@ptr-25vy0i9ukrx95drquaj.18120a2.ip6.access.telenet.be) (Remote host closed the connection)
[18:26:39] *** Quits: Psybur (~Psybur@2600:1003:b1ad:503e:b062:f712:8f0b:8adc) (Ping timeout: 256 seconds)
[18:29:21] *** Joins: Psybur (~Psybur@2600:1003:b1a9:25a8:85a:5624:5153:ebdd)
[18:31:12] *** Joins: acidjnk (~acidjnk@p200300d0c7049f70498c262e6d47c9a7.dip0.t-ipconnect.de)
[18:31:33] *** Joins: wroathe (~wroathe@206-55-188-8.fttp.usinternet.com)
[18:31:34] *** Quits: wroathe (~wroathe@206-55-188-8.fttp.usinternet.com) (Changing host)
[18:31:34] *** Joins: wroathe (~wroathe@user/wroathe)
[18:31:56] *** Quits: Vajb (~Vajb@hag-jnsbng11-58c3a8-176.dhcp.inet.fi) (Read error: Connection reset by peer)
[18:32:07] *** Joins: Vajb (~Vajb@2001:999:62:aa00:7f5a:4f10:c894:3813)
[18:32:51] *** Quits: lavaman (~lavaman@c-174-63-118-52.hsd1.ma.comcast.net) (Ping timeout: 260 seconds)
[18:34:23] *** Joins: hololeap (~hololeap@user/hololeap)
[18:42:21] *** Joins: merijn (~merijn@c-001-001-001.client.esciencecenter.eduvpn.nl)
[18:42:55] *** Joins: eggplantade (~Eggplanta@108-201-191-115.lightspeed.sntcca.sbcglobal.net)
[18:45:56] *** Quits: Vajb (~Vajb@2001:999:62:aa00:7f5a:4f10:c894:3813) (Read error: Connection reset by peer)
[18:47:28] *** Joins: Vajb (~Vajb@hag-jnsbng11-58c3a8-176.dhcp.inet.fi)
[18:47:37] *** Quits: eggplantade (~Eggplanta@108-201-191-115.lightspeed.sntcca.sbcglobal.net) (Ping timeout: 260 seconds)
[18:48:15] *** Quits: acidjnk (~acidjnk@p200300d0c7049f70498c262e6d47c9a7.dip0.t-ipconnect.de) (Ping timeout: 260 seconds)
[18:53:44] *** Quits: wroathe (~wroathe@user/wroathe) (Ping timeout: 272 seconds)
[18:53:56] *** Quits: Vajb (~Vajb@hag-jnsbng11-58c3a8-176.dhcp.inet.fi) (Read error: Connection reset by peer)
[18:54:29] *** Joins: Vajb (~Vajb@hag-jnsbng11-58c3a8-176.dhcp.inet.fi)
[18:55:23] *** Joins: BlackboardN (~Blackboar@c-71-231-59-104.hsd1.wa.comcast.net)
[18:55:26] *** Joins: Graham31415 (~Graham@user/Graham31415)
[18:58:10] *** Quits: razetime (~quassel@49.207.199.125) (Ping timeout: 272 seconds)
[18:58:59] *** Quits: BlackboardN (~Blackboar@c-71-231-59-104.hsd1.wa.comcast.net) (Client Quit)
[19:01:17] *** Joins: nsaritzky (~nsaritzky@c-71-231-59-104.hsd1.wa.comcast.net)
[19:01:36] *** Quits: dextaa (~DV@user/dextaa) (Ping timeout: 252 seconds)
[19:02:36] *** Joins: mvk (~mvk@2607:fea8:5ce3:8500::3800)
[19:10:57] *** Quits: Vajb (~Vajb@hag-jnsbng11-58c3a8-176.dhcp.inet.fi) (Ping timeout: 260 seconds)
[19:12:28] *** Joins: Vajb (~Vajb@hag-jnsbng11-58c3a8-176.dhcp.inet.fi)
[19:12:28] *** Joins: zer0bitz (~zer0bitz@2001:2003:f750:a200:d90e:8b62:fe9d:3118)
[19:16:43] *** Quits: x88x88x (~x88x88x@2001:19f0:5:39a8:5400:3ff:feb6:73cb) (Quit: ZNC - https://znc.in)
[19:16:43] *** Quits: merijn (~merijn@c-001-001-001.client.esciencecenter.eduvpn.nl) (Ping timeout: 260 seconds)
[19:18:40] *** Joins: wroathe (~wroathe@206-55-188-8.fttp.usinternet.com)
[19:18:40] *** Quits: wroathe (~wroathe@206-55-188-8.fttp.usinternet.com) (Changing host)
[19:18:40] *** Joins: wroathe (~wroathe@user/wroathe)
[19:27:51] *** Quits: nsaritzky (~nsaritzky@c-71-231-59-104.hsd1.wa.comcast.net) (Quit: ZNC 1.8.2 - https://znc.in)
[19:30:18] *** Joins: nsaritzky (~nsaritzky@c-71-231-59-104.hsd1.wa.comcast.net)
[19:35:35] *** Quits: coot (~coot@213.134.190.95) (Quit: coot)
[19:38:23] *** Quits: machinedgod (~machinedg@24.105.81.50) (Ping timeout: 246 seconds)
[19:44:20] *** Quits: hughjfchen (~hughjfche@vmi556545.contaboserver.net) (Quit: WeeChat 2.8)
[19:45:01] *** Joins: napping (~brandon@65.128.49.110)
[19:45:14] *** Quits: yauhsien (~yauhsien@61-231-37-33.dynamic-ip.hinet.net) (Remote host closed the connection)
[19:45:16] *** Joins: alp (~alp@user/alp)
[19:45:31] *** Joins: [itchyjunk] (~itchyjunk@user/itchyjunk/x-7353470)
[19:45:48] *** Joins: yauhsien (~yauhsien@61-231-37-33.dynamic-ip.hinet.net)
[19:50:33] *** Joins: hughjfchen (~hughjfche@vmi556545.contaboserver.net)
[19:51:51] *** Quits: jrm (~jrm@156.34.173.250) (Quit: ciao)
[19:53:26] *** Joins: jrm (~jrm@156.34.173.250)
[19:56:59] *** Joins: gurkenglas (~gurkengla@dslb-178-012-018-212.178.012.pools.vodafone-ip.de)
[19:58:00] *** Joins: benin (~benin@183.82.204.110)
[20:02:28] *** Joins: kuribas (~user@ptr-25vy0i7mej08atpseum.18120a2.ip6.access.telenet.be)
[20:04:19] *** Quits: liz (~liz@cpc84585-newc17-2-0-cust60.16-2.cable.virginm.net) (Ping timeout: 260 seconds)
[20:06:13] *** Quits: Ram-Z (Ram-Z@2a01:7e01::f03c:91ff:fe57:d2df) (Ping timeout: 240 seconds)
[20:08:00] *** Joins: pretty_dumm_guy (trottel@gateway/vpn/protonvpn/prettydummguy/x-88029655)
[20:08:51] *** Joins: BlackboardN (~nathan@user/BlackboardN)
[20:12:43] *** Joins: econo (uid147250@user/econo)
[20:14:57] *** Joins: Sgeo (~Sgeo@user/sgeo)
[20:17:17] *** Joins: daisyc1 (~daisyc4@212.30.36.24)
[20:20:34] *** Joins: Ram-Z (~Ram-Z@li1814-254.members.linode.com)
[20:26:15] *** Quits: wroathe (~wroathe@user/wroathe) (Ping timeout: 260 seconds)
[20:27:40] *** Joins: boxscape_ (~boxscape_@p4ff0be5f.dip0.t-ipconnect.de)
[20:27:57] <boxscape_> is there a way to tell cabal which ghc binary it should use?
[20:28:07] <maerwald> cabal build -w ghc-8.10.7
[20:28:17] <boxscape_> ah, thanks
[20:28:56] <maerwald> or: ghcup run --ghc 8.10.7 cabal -- build
[20:29:16] <boxscape_> okay
[20:29:41] <maerwald> more useful for vscode and such
[20:29:53] <boxscape_> right, I see
[20:30:07] *** Quits: VanceIsM7[m] (~vanceism7@2001:470:69fc:105::3ad) (Quit: You have been kicked for being idle)
[20:30:12] *** Joins: lavaman (~lavaman@c-174-63-118-52.hsd1.ma.comcast.net)
[20:31:26] *** Joins: odnes_ (~odnes@5-203-146-18.pat.nym.cosmote.net)
[20:31:51] *** Quits: odnes (~odnes@5-203-146-18.pat.nym.cosmote.net) (Ping timeout: 260 seconds)
[20:35:29] <monochrom> Every program evolves towards including an email client and a run command. >:)
[20:35:52] <abastro> Can include ghc-options in `cabal.project` as well
[20:36:14] <abastro> Oh, I meant  `with-compiler: ghc-8.10.7
[20:36:27] <boxscape_> oh, yeah, using cabal.project is a good idea
[20:39:07] *** Joins: vysn (~vysn@user/vysn)
[20:40:15] *** Joins: FragByte_ (~christian@user/fragbyte)
[20:42:11] <maerwald> monochrom: ghcup run --ghc 8.10.7 -- cabal exec stack -- --system-ghc runghc -- --version
[20:42:32] <monochrom> haha
[20:42:46] <maerwald> that actually works (in a project dir)
[20:42:49] <monochrom> Truly the next level of software envelopment.
[20:43:00] *** Quits: Psybur (~Psybur@2600:1003:b1a9:25a8:85a:5624:5153:ebdd) (Ping timeout: 240 seconds)
[20:43:01] *** Quits: FragByte (~christian@user/fragbyte) (Ping timeout: 240 seconds)
[20:43:01] *** FragByte_ is now known as FragByte
[20:43:15] <maerwald> funnilly, specifing stack first doesn't work because it messes with GHC_PACKAGE_PATH
[20:43:28] *** Quits: mbuf (~Shakthi@171.61.151.80) (Quit: Leaving)
[20:43:38] <geekosaur> that's what I was just wondering, cabal exec should as well
[20:43:49] <geekosaur> although you may need to be inside a project for that
[20:44:29] *** Joins: eggplantade (~Eggplanta@108-201-191-115.lightspeed.sntcca.sbcglobal.net)
[20:44:35] *** Joins: Psybur (~Psybur@2600:4040:4022:4000:19c2:a1cd:6600:38ba)
[20:44:40] <maerwald> is just missing a `docker run`
[20:45:28] <monochrom> If specify stack first, perhaps insert a middle shell script that umesses GHC_PACKAGE_PATH
[20:46:25] *** Joins: ec (~ec@gateway/tor-sasl/ec)
[20:46:49] *** Quits: ec (~ec@gateway/tor-sasl/ec) (Client Quit)
[20:48:30] *** Joins: xkuru (~xkuru@user/xkuru)
[20:49:38] *** Quits: eggplantade (~Eggplanta@108-201-191-115.lightspeed.sntcca.sbcglobal.net) (Ping timeout: 272 seconds)
[20:49:39] *** Quits: kaph (~kaph@net-93-67-57-97.cust.vodafonedsl.it) (Read error: Connection reset by peer)
[20:51:38] <maerwald> wrt email, I think https://github.com/soywod/himalaya might actually integrate well with ghcup xD
[20:55:21] *** Quits: boxscape_ (~boxscape_@p4ff0be5f.dip0.t-ipconnect.de) (Quit: Connection closed)
[20:55:27] *** Joins: boxscape_3 (~boxscape_@p4ff0be5f.dip0.t-ipconnect.de)
[20:55:39] *** Joins: kaph (~kaph@net-93-67-57-97.cust.vodafonedsl.it)
[20:55:52] *** boxscape_3 is now known as boxscape_
[20:55:55] *** Joins: tzh (~tzh@c-24-21-73-154.hsd1.or.comcast.net)
[20:56:44] *** Quits: boxscape_ (~boxscape_@p4ff0be5f.dip0.t-ipconnect.de) (Client Quit)
[20:56:57] *** Quits: img (~img@user/img) (Quit: ZNC 1.8.2 - https://znc.in)
[20:57:59] <kuribas> :t foldl
[20:58:00] <lambdabot> Foldable t => (b -> a -> b) -> b -> t a -> b
[20:58:18] *** Joins: img (~img@user/img)
[20:58:21] <kuribas> > foldl f a [b, c]
[20:58:23] <lambdabot>  f (f a b) c
[20:58:50] <kuribas> @src foldl
[20:58:50] <lambdabot> foldl f z []     = z
[20:58:50] <lambdabot> foldl f z (x:xs) = foldl f (f z x) xs
[20:58:57] *** Joins: boxscape_ (~boxscape_@p4ff0be5f.dip0.t-ipconnect.de)
[21:07:02] *** Joins: lbseale (~ep1ctetus@user/ep1ctetus)
[21:07:29] <kuribas> @src foldl'
[21:07:29] <lambdabot> foldl' f a []     = a
[21:07:29] <lambdabot> foldl' f a (x:xs) = let a' = f a x in a' `seq` foldl' f a' xs
[21:08:37] <boxscape_> @src foldl
[21:08:37] <lambdabot> foldl f z []     = z
[21:08:37] <lambdabot> foldl f z (x:xs) = foldl f (f z x) xs
[21:09:41] *** Joins: jao (~jao@cpc103048-sgyl39-2-0-cust502.18-2.cable.virginm.net)
[21:11:29] *** Quits: lavaman (~lavaman@c-174-63-118-52.hsd1.ma.comcast.net) (Ping timeout: 246 seconds)
[21:13:10] *** Joins: merijn (~merijn@c-001-001-001.client.esciencecenter.eduvpn.nl)
[21:18:11] *** Parts: jakalx (~jakalx@base.jakalx.net) (Error from remote client)
[21:18:46] *** Quits: lbseale (~ep1ctetus@user/ep1ctetus) (Ping timeout: 272 seconds)
[21:22:52] *** Joins: razetime (~quassel@49.207.199.125)
[21:25:00] *** Joins: jakalx (~jakalx@base.jakalx.net)
[21:25:08] *** Quits: daisyc1 (~daisyc4@212.30.36.24) (Ping timeout: 246 seconds)
[21:25:29] *** Joins: eggplantade (~Eggplanta@108-201-191-115.lightspeed.sntcca.sbcglobal.net)
[21:29:32] *** Quits: deadmarshal_ (~deadmarsh@95.38.116.113) (Ping timeout: 272 seconds)
[21:32:27] *** Joins: liz (~liz@cpc84585-newc17-2-0-cust60.16-2.cable.virginm.net)
[21:37:15] *** Quits: razetime (~quassel@49.207.199.125) (Quit: https://quassel-irc.org - Chat comfortably. Anywhere.)
[21:38:45] *** Quits: vysn (~vysn@user/vysn) (Ping timeout: 256 seconds)
[21:41:15] *** Quits: motherfsck (~motherfsc@user/motherfsck) (Ping timeout: 256 seconds)
[21:42:38] *** Quits: dyeplexer (~dyeplexer@user/dyeplexer) (Ping timeout: 246 seconds)
[21:45:02] *** Quits: hololeap (~hololeap@user/hololeap) (Remote host closed the connection)
[21:45:36] *** Joins: dyeplexer (~dyeplexer@user/dyeplexer)
[21:46:21] *** Joins: hololeap (~hololeap@user/hololeap)
[21:47:18] *** Quits: merijn (~merijn@c-001-001-001.client.esciencecenter.eduvpn.nl) (Ping timeout: 260 seconds)
[21:51:23] *** Quits: abastro (~abab9579@220.75.216.63) (Ping timeout: 260 seconds)
[21:55:12] *** Joins: jgeerds (~jgeerds@d5364b87.access.ecotel.net)
[21:55:34] *** Joins: x88x88x (~x88x88x@2001:19f0:5:39a8:5400:3ff:feb6:73cb)
[21:56:16] *** Joins: motherfsck (~motherfsc@user/motherfsck)
[22:05:04] *** Joins: deadmarshal_ (~deadmarsh@95.38.116.113)
[22:06:47] *** Quits: stevenxl (~stevenxl@c-73-72-2-81.hsd1.il.comcast.net) (Ping timeout: 246 seconds)
[22:07:33] *** Joins: avpx (~avpx@c-174-61-141-172.hsd1.wa.comcast.net)
[22:08:35] *** Quits: motherfsck (~motherfsc@user/motherfsck) (Ping timeout: 252 seconds)
[22:09:00] *** Joins: motherfsck (~motherfsc@user/motherfsck)
[22:09:04] *** Joins: bahamas (~lucian@84.232.140.158)
[22:09:14] *** Quits: deadmarshal_ (~deadmarsh@95.38.116.113) (Ping timeout: 246 seconds)
[22:09:28] *** Quits: avpx (~avpx@c-174-61-141-172.hsd1.wa.comcast.net) (Client Quit)
[22:09:42] *** Joins: stevenxl (~stevenxl@c-73-72-2-81.hsd1.il.comcast.net)
[22:10:19] *** Quits: jtm (~jtm@user/jtm) (Quit: k byeeee)
[22:10:40] *** Quits: yauhsien (~yauhsien@61-231-37-33.dynamic-ip.hinet.net) (Remote host closed the connection)
[22:11:15] *** Joins: yauhsien (~yauhsien@61-231-37-33.dynamic-ip.hinet.net)
[22:11:24] *** Joins: avpx (~avpx___@c-174-61-141-172.hsd1.wa.comcast.net)
[22:12:43] *** Joins: jtm (~jtm@user/jtm)
[22:13:52] *** Quits: motherfsck (~motherfsc@user/motherfsck) (Ping timeout: 272 seconds)
[22:16:24] *** Quits: yauhsien (~yauhsien@61-231-37-33.dynamic-ip.hinet.net) (Ping timeout: 272 seconds)
[22:18:14] *** Joins: coot (~coot@213.134.190.95)
[22:24:19] *** Quits: zaquest (~notzaques@5.130.79.72) (Ping timeout: 260 seconds)
[22:25:36] *** Joins: Unicorn_Princess (~Unicorn_P@93-103-228-248.dynamic.t-2.net)
[22:28:07] *** Joins: motherfsck (~motherfsc@user/motherfsck)
[22:35:31] *** Quits: stevenxl (~stevenxl@c-73-72-2-81.hsd1.il.comcast.net) (Ping timeout: 260 seconds)
[22:38:48] *** Parts: Digit (~user@user/digit) (i'll be back when i'm haskelling harder.)
[22:38:55] *** Quits: jpds (~jpds@gateway/tor-sasl/jpds) (Ping timeout: 240 seconds)
[22:39:06] *** Quits: kaph (~kaph@net-93-67-57-97.cust.vodafonedsl.it) (Read error: Connection reset by peer)
[22:39:33] *** Joins: yauhsien (~yauhsien@61-231-37-33.dynamic-ip.hinet.net)
[22:41:17] *** Joins: jpds (~jpds@gateway/tor-sasl/jpds)
[22:43:56] *** Quits: Psybur (~Psybur@2600:4040:4022:4000:19c2:a1cd:6600:38ba) (Ping timeout: 260 seconds)
[22:44:22] *** Joins: Psybur (~Psybur@2600:1003:b1a9:25a8:9157:2734:89e6:c88e)
[22:46:23] *** Quits: x88x88x (~x88x88x@2001:19f0:5:39a8:5400:3ff:feb6:73cb) (Quit: ZNC - https://znc.in)
[22:46:45] *** Quits: avpx (~avpx___@c-174-61-141-172.hsd1.wa.comcast.net) (Quit: Leaving)
[22:47:00] *** Quits: TonyStone (~TonyStone@cpe-74-76-51-197.nycap.res.rr.com) (Remote host closed the connection)
[22:51:35] *** Quits: bitdex (~bitdex@gateway/tor-sasl/bitdex) (Ping timeout: 240 seconds)
[22:52:59] *** Quits: boxscape_ (~boxscape_@p4ff0be5f.dip0.t-ipconnect.de) (Ping timeout: 246 seconds)
[22:53:18] *** Quits: cdman (~dcm@user/dmc/x-4369397) (Quit: Leaving)
[22:54:24] *** Quits: jgeerds (~jgeerds@d5364b87.access.ecotel.net) (Ping timeout: 272 seconds)
[22:55:11] *** Joins: zeenk (~zeenk@2a02:2f04:a313:d600:8d26:ec9f:3ff6:fc94)
[23:03:26] *** Quits: vicfred__ (~vicfred@user/vicfred) (Quit: Leaving)
[23:03:59] *** Quits: BlackboardN (~nathan@user/BlackboardN) (Ping timeout: 260 seconds)
[23:07:47] *** Quits: dyeplexer (~dyeplexer@user/dyeplexer) (Remote host closed the connection)
[23:09:17] *** Joins: lavaman (~lavaman@c-174-63-118-52.hsd1.ma.comcast.net)
[23:09:37] *** Quits: califax (~califax@user/califx) (Remote host closed the connection)
[23:09:38] *** Quits: hololeap (~hololeap@user/hololeap) (Remote host closed the connection)
[23:09:38] *** Joins: bitdex (~bitdex@gateway/tor-sasl/bitdex)
[23:09:52] *** Joins: califax (~califax@user/califx)
[23:10:57] *** Joins: hololeap (~hololeap@user/hololeap)
[23:23:05] *** Quits: phma (phma@2001:5b0:211f:57f8:a451:bb44:e55e:abda) (Read error: Connection reset by peer)
[23:24:28] *** Joins: phma (phma@2001:5b0:210f:36e8:e24d:2973:8920:8f2a)
[23:24:59] *** Joins: waleee (~waleee@2001:9b0:213:7200:cc36:a556:b1e8:b340)
[23:26:46] *** Joins: Pickchea (~private@user/pickchea)
[23:33:58] *** Joins: madjestic (~madjestic@88-159-247-120.fixed.kpn.net)
[23:36:51] *** Joins: gamara (~gamara@2607:fea8:1e5f:8df0:b897:10fa:588b:45bc)
[23:39:02] <gamara> Why is this invalid syntax? https://paste.tomsmeding.com/AeEbRie9 How do i write this with where statements?
[23:41:03] <hpc> i would expect that to be an error for using (/) on Ints
[23:41:13] <hpc> is this just going in a file and you're doing like "ghci foo.hs"?
[23:43:16] <gamara> I am using a file
[23:43:37] <gamara> Not much interest in using the interpreter other than for info
[23:43:38] *** Joins: merijn (~merijn@c-001-001-001.client.esciencecenter.eduvpn.nl)
[23:44:02] <hpc> hmm, not sure why it would be failing then
[23:44:30] <hpc> i suspected something like pasting it into ghci, where it misinterprets multiline inputs
[23:44:33] <gamara> I think you are right getting the error No instance for (Fractional Int) arising from a use of ‘/’
[23:44:46] <gamara> changing type to double fixes it
[23:45:07] <gamara> I need to learn to read
[23:45:07] <hpc> oh, cool
[23:45:51] *** Joins: stevenxl (~stevenxl@c-73-72-2-81.hsd1.il.comcast.net)
[23:46:23] <gamara> If I want to use int I would do quot z x y
[23:46:26] *** Joins: x88x88x (~x88x88x@149.28.53.172)
[23:48:12] <gamara> thanks for the help
[23:48:53] <geekosaur> that has an indentation error
[23:49:09] <geekosaur> the let-in needs everything indented properly
[23:49:34] <gamara> it was a copy paste from a textbook
[23:50:39] *** Quits: lavaman (~lavaman@c-174-63-118-52.hsd1.ma.comcast.net) (Ping timeout: 260 seconds)
[23:51:26] *** Quits: stevenxl (~stevenxl@c-73-72-2-81.hsd1.il.comcast.net) (Ping timeout: 246 seconds)
[23:54:06] *** Quits: gawen (~gawen@user/gawen) (Quit: cya)
[23:54:57] *** Quits: Vajb (~Vajb@hag-jnsbng11-58c3a8-176.dhcp.inet.fi) (Read error: Connection reset by peer)
[23:55:26] *** Joins: gawen (~gawen@user/gawen)
[23:56:16] *** Joins: Vajb (~Vajb@hag-jnsbng11-58c3a8-176.dhcp.inet.fi)
