[00:01:07] *** Quits: roadie (~user@2a02:8108:ec0:1427:7907:eaa6:b44b:58bb) (Ping timeout: 240 seconds)
[00:01:27] *** Joins: Liblx (~Alex@ip4d15ff09.dynamic.kabel-deutschland.de)
[00:02:08] *** Joins: rookie101 (~rookie@207.154.204.166)
[00:02:41] *** Quits: lonewulf` (~lonewulf@user/lonewulf) (Quit: leaving)
[00:08:40] *** Joins: rcernin (~rcernin@pa49-182-50-217.pa.qld.optusnet.com.au)
[00:12:45] *** Quits: gh34 (~textual@cpe-184-58-181-106.wi.res.rr.com) (Quit: Textual IRC Client: www.textualapp.com)
[00:13:38] *** Quits: alzgh (~alzgh@user/alzgh) (Remote host closed the connection)
[00:14:00] *** Joins: alzgh (~alzgh@user/alzgh)
[00:14:12] *** Joins: drd (~drd@2001:b07:a70:9f1f:1562:34de:f50f:77d4)
[00:15:31] *** Quits: acegallagher (~Ace@71-218-173-138.hlrn.qwest.net) (Ping timeout: 245 seconds)
[00:18:01] *** Quits: vysn (~vysn@user/vysn) (Ping timeout: 245 seconds)
[00:18:01] *** Quits: mei (~mei@user/mei) (Quit: mei)
[00:20:33] *** Joins: akoana (~ah@user/akoana)
[00:21:04] *** Quits: sublim20 (~sublim20@user/sublim20) (Quit: Leaving)
[00:21:31] *** Quits: aniruddha (uid340443@2a03:5180:f:3::5:31db) (Quit: Connection closed for inactivity)
[00:24:57] *** Joins: acegallagher (~Ace@71-218-173-138.hlrn.qwest.net)
[00:25:24] *** Quits: lavaball (felix@31.204.155.215) (Remote host closed the connection)
[00:25:37] *** Quits: zer0bitz (~zer0bitz@dsl-hkibng31-54fafc-123.dhcp.inet.fi) (Ping timeout: 265 seconds)
[00:26:38] *** Joins: roadie (~user@2a02:8108:ec0:1427:7907:eaa6:b44b:58bb)
[00:30:55] *** Quits: t3nj1n (~t3nj1n@pool-96-246-146-100.nycmny.fios.verizon.net) (Remote host closed the connection)
[00:35:43] *** Quits: Liblx (~Alex@ip4d15ff09.dynamic.kabel-deutschland.de) (Quit: WeeChat 3.2)
[00:37:47] *** Quits: jdltouraine_ (~jdltourai@2a02:a03f:847b:b800:b163:93c1:699b:16ff) (Ping timeout: 240 seconds)
[00:38:53] *** Quits: elena_re (~elena@31.173.82.95) (Read error: Connection reset by peer)
[00:38:55] *** Quits: adac (~adac@213-47-187-80.cable.dynamic.surfer.at) (Ping timeout: 252 seconds)
[00:39:16] *** Quits: roadie (~user@2a02:8108:ec0:1427:7907:eaa6:b44b:58bb) (Ping timeout: 245 seconds)
[00:39:35] *** Joins: ConstantDesc (~textual@cpc158823-hari22-2-0-cust72.20-2.cable.virginm.net)
[00:40:36] *** Quits: ConstantDesc (~textual@cpc158823-hari22-2-0-cust72.20-2.cable.virginm.net) (Client Quit)
[00:40:38] *** Joins: elkalamar (elkalamar@gateway/vpn/airvpn/elkalamar)
[00:43:12] *** Joins: tirnanog (~tirnanog@user/tirnanog)
[00:43:46] *** Joins: Lord_of_Life_ (~Lord@user/lord-of-life/x-2819915)
[00:43:53] *** Joins: sublim20 (~sublim20@user/sublim20)
[00:44:23] *** Quits: rcernin (~rcernin@pa49-182-50-217.pa.qld.optusnet.com.au) (Read error: Connection reset by peer)
[00:44:36] *** Quits: Lord_of_Life (~Lord@user/lord-of-life/x-2819915) (Ping timeout: 265 seconds)
[00:45:07] *** Lord_of_Life_ is now known as Lord_of_Life
[00:49:15] *** Quits: bomb-on (~bomb-on@194.144.47.113) (Quit: aллилѹіа!)
[00:50:08] *** Joins: elena_re (~elena@31.173.82.95)
[00:51:25] *** Quits: drd (~drd@2001:b07:a70:9f1f:1562:34de:f50f:77d4) (Quit: ZNC 1.8.2 - https://znc.in)
[00:51:44] *** Joins: roadie (~user@2a02:8108:ec0:1427:7907:eaa6:b44b:58bb)
[00:53:11] *** Quits: shokohsc8 (~shokohsc@161.88.195.77.rev.sfr.net) (Read error: Connection reset by peer)
[00:53:20] *** Quits: Crescendo (~Crescendo@user/crescendo) (Ping timeout: 252 seconds)
[00:54:35] *** Quits: oldgalileo (~oldgalile@host-212-18-2-82.customer.m-online.net) (Remote host closed the connection)
[00:54:53] *** Joins: oldgalileo (~oldgalile@host-212-18-2-82.customer.m-online.net)
[00:58:39] *** Quits: seninha (~seninha@user/seninha) (Quit: Leaving)
[00:59:25] *** Joins: FreeBDSM (~uzer@user/freebdsm)
[00:59:59] <FreeBDSM> hi. Is there some general advice / best practice for writing scripts that says not to parse commands stderr or some other output?
[01:00:16] *** Quits: sinaowolabi (~SinaOwola@102.134.114.1) (Remote host closed the connection)
[01:00:33] <FreeBDSM> I'm worried about a colleague of mine changing locale for the whole system to ru_RU, I don't know what it might affect negatively
[01:01:05] <FreeBDSM> what if some error text now becomes in russian and some `grep -i 'error' ...` would fail?
[01:01:17] *** Quits: roadie (~user@2a02:8108:ec0:1427:7907:eaa6:b44b:58bb) (Ping timeout: 264 seconds)
[01:01:33] <phogg> if you need to do that kind of thing you can reset the locale in your scripts to something predictable
[01:01:54] <cryptonector> well, I'd advise using the C locale or an English locale, and TZ=, for all production things
[01:02:07] <emanuele6> english locale might not be compiled
[01:02:25] <emanuele6> just use C if you want a predictable locale
[01:02:59] *** Quits: ttyX (~ttyX@user/ttyx) (Quit: Leaving)
[01:03:08] *** Joins: rcernin (~rcernin@pa49-182-50-217.pa.qld.optusnet.com.au)
[01:03:14] <cryptonector> unless all the support staff are fluent in Russian, then maybe use a Russian locale, but, really, if you have a mix of languages, then best stick to English just cause at least that way you get the raw, original messages untranslated
[01:03:39] <cryptonector> you also want all timestamps in UTC or GMT
[01:04:07] <cryptonector> don't want to be confused by daylight savings time changes or any timezone differences
[01:04:24] <FreeBDSM> emanuele6: cryptonector: could you give some good arguments in favor of sticking to C locale?
[01:04:55] <cryptonector> generally stderr output is _not_ an interface, so you shouldn't parse it, and neither are syslog messages, but in practice ops teams have to parse them anyways
[01:05:09] <FreeBDSM> cryptonector: where is said so?
[01:05:18] <emanuele6> i don't have any good argument; you said you want a predictable locale
[01:05:25] <emanuele6> the only predictable locale is C
[01:05:32] *** Joins: mestre (~mestre@191.177.175.57)
[01:05:47] <cryptonector> depends; e.g., Solaris specifically declares all stderr and syslog messages not-an-interface, but each OS/distro, and each app may differ on this
[01:06:14] <cryptonector> in general developers don't work as hard to maintain error/log message stability as other things
[01:06:18] <FreeBDSM> Solaris is out of touch then
[01:06:28] *** Quits: y04nn (~y04nn@193.32.127.238) (Ping timeout: 252 seconds)
[01:06:31] <FreeBDSM> how syslog messages are not an interface?
[01:06:57] <FreeBDSM> logs should be gathered and surely people would like some alerts for some phrases occurrences
[01:07:00] <cryptonector> they're not -- structured syslog messages can be, but formatted text is just hard to parse
[01:07:18] <FreeBDSM> hard, but better than nothing
[01:07:29] <cryptonector> but more importantly, developers tend to feel free to change error and log messages without worrying about backwards compatibility
[01:07:33] <cryptonector> it's a fact of life
[01:08:00] <cryptonector> ops teams have to adjust as log messages change
[01:08:38] <cryptonector> next time some devs change a log message and break your scrapers, see if you can complain about it _and_ get them to put it back or commit to log message stability
[01:08:44] <cryptonector> you probably can't
[01:08:49] *** Quits: INeedAHandle (~INeedAHan@39.124.72.106) (Quit: My MacBook Air has gone to sleep. ZZZzzz…)
[01:09:03] *** Joins: njitramii (~njitramii@144-027-180-159.dynamic.caiway.nl)
[01:09:33] <FreeBDSM> developers of apps produced in the company you work - yes, but developers of most ~universally known, stable apps (like some grep or sponge or jq and so on) - usually keep backwards compatibility in mind and rarely break anything to the point that it would be critical
[01:09:53] *** Quits: fedenix_ (~fedenix@gateway/tor-sasl/fedenix) (Remote host closed the connection)
[01:10:25] <FreeBDSM> do system locales affect (java) applications?
[01:10:43] <tirnanog> absolutely.
[01:10:48] <FreeBDSM> can I have C locale in system and expect the app to work with UTF-8 ru_RU?
[01:11:06] <cryptonector> well, good luck to you with that expectation -- my own expectation is that I can't expect log messages or stderr messages to be stable
[01:11:20] <tirnanog> FreeBDSM: no. tread very carefully indeed.
[01:11:32] *** Quits: kj (~kj@beta.aerisnetwork.net) (Ping timeout: 265 seconds)
[01:11:33] <FreeBDSM> :c
[01:12:17] <tirnanog> for example, if you coerce the C locale in such a way that it also applies to LC_CTYPE, it will affect java.
[01:12:42] <tirnanog> some linux distributions offer a C.UTF-8 locale now. not standard, obviously.
[01:12:43] <cryptonector> you could set LANG=C and LC_CTYPE=en_US.UTF-8
[01:12:53] <tirnanog> yes. or just set LC_MESSAGES, for example.
[01:12:56] <cryptonector> or some other such combo
[01:13:20] <cryptonector> C.UTF-8 should be standard...
[01:13:27] <tirnanog> it would be nice.
[01:13:43] <cryptonector> or at least apps in the C locale ought to at least accept and produce UTF-8
[01:13:54] <twkm> pointless.
[01:13:57] <cryptonector> (they... generally do, by accident mostly)
[01:14:44] *** Joins: rustyshackleford (uid236774@id-236774.helmsley.irccloud.com)
[01:16:31] *** Quits: BSaboia (~bsaboia@45.179.224.249) (Quit: This computer has gone to sleep)
[01:17:08] <FreeBDSM> too many LANG/LC_ envs, hard to understand what exactly they affect in real world
[01:17:48] <cryptonector> they're documented...
[01:17:59] <cryptonector> man setlocale
[01:17:59] <emanuele6> FreeBDSM: huh? in general, each of them affects one thing
[01:18:05] <tirnanog> it's really not that hard to understand.
[01:18:18] <twkm> surely every man page is identical!
[01:18:34] <emanuele6> LC_COLLATE affects lexological ordering, LC_CTYPE affects character classes, etc.
[01:18:37] <cryptonector> twkm: aight, then try the Open Group
[01:19:56] <cryptonector> or a search engine
[01:20:06] <cryptonector> I hear those exist!
[01:20:24] <emanuele6> in duckduckgo, you can use `!posix locale' to search directly on the open group spec
[01:21:19] <FreeBDSM> I wrote my message after trying to read the page on pubs.opengroup.org after using search engine to find that page.
[01:21:19] *** Quits: njitramii (~njitramii@144-027-180-159.dynamic.caiway.nl) (Quit: WeeChat 3.2)
[01:21:28] <FreeBDSM> the info there is kind of vague
[01:22:39] <tirnanog> FreeBDSM: once, a java application in my environment was accidentally allowed to run with LC_CTYPE (effectively) set to C for some time. as a consequence, many files were written whose names were crrupted, by way of substituting code points above U+7F with '?'.
[01:22:56] <tirnanog> in other words, it was conforming with the requirement to encode as us-ascii (lossily).
[01:23:07] <tirnanog> so be careful with that one, in particular.
[01:23:25] <phogg> FreeBDSM: the fact that the content of the stderr strings are generally not specified by the standard is a strong hint that you shouldn't be relying on them
[01:23:54] <earnestly> tirnanog: The beauty of leaving bytes alone
[01:25:05] <cryptonector> the C locale doesn't disallow non-ASCII though
[01:25:07] <FreeBDSM> tirnanog: I think everyone is familiar with '???' instead of text in non-latin chars
[01:25:27] <tirnanog> earnestly: I don't see how that applies in this case. the strings were correctly composed in java. the internal encoding used by the runtime is a mere implementation detail, as it should be. upon touching the filesystem, an encoding boundary is crossed as unix doesn't dictate anything in this regard.
[01:25:48] <earnestly> Treating things like 'strings' is the problem
[01:25:48] <tirnanog> in other words, there were no bytes to leave alone. only codepoints, which have to be encoded to bytes at that juncture.
[01:26:00] <earnestly> If it had just written the bytes as-is, it wouldn't have a problem
[01:26:02] <tirnanog> it wasn't the problem.
[01:26:04] <tirnanog> no, that's not true.
[01:26:14] <cryptonector> it would have been Java that encoded non-ASCII as '?'
[01:26:31] <cryptonector> nothing in the C library would have done that, much less the kernel/VFS/filesystem
[01:26:40] <tirnanog> correct.
[01:26:53] <cryptonector> some JDK dev must have thought that was a good idea
[01:26:57] <earnestly> cryptonector: Yeah it's java because it has this stupid concept known as "strings"
[01:27:13] <earnestly> > String type must die
[01:27:37] <cryptonector> well, and Java also uses UTF-16, which too must die
[01:27:44] <FreeBDSM> earnestly: I'm calling cops on you, sir
[01:28:00] *** Joins: y04nn (~y04nn@193.32.127.238)
[01:28:02] <FreeBDSM> because that's just hate speech
[01:28:16] <cryptonector> UCS-2 and UTF-16 are heavy heavy burdens
[01:29:14] <earnestly> I sometimes feel sorry for Rob Pike
[01:29:34] <earnestly> Imagine having to witness surrogate pairs being added
[01:29:45] *** Quits: tejr (~tejr@user/tejr) (Remote host closed the connection)
[01:30:03] *** Joins: tejr (~tejr@user/tejr)
[01:31:01] <tirnanog> cryptonector: respecting the character set indicated by the locale in the event that the programmer does explicitly encode (as should have happened) doesn't seem unreasonable. encoding lossily without complaint does, though.
[01:31:12] <cryptonector> or Unicode having to be limited to 21 bits instead of 31
[01:31:47] <cryptonector> tirnanog: but is the C locale strictly ASCII?
[01:31:55] <earnestly> tirnanog: explicitly is a nice word, we should use that more
[01:31:58] <cryptonector> I can't recall off the top, but I think "no"
[01:32:53] <earnestly> cryptonector: It more or less defines what you call ASCII, so it is essentially the same
[01:33:17] <earnestly> There is a growning C.UTF-8 locale but it's very fresh (glibc added one a few weeks ago)
[01:33:49] *** Quits: tangy (~tangy@user/tangy) (Quit: Quit)
[01:34:02] *** Quits: jetchisel (jetchisel@user/jetchisel) (Ping timeout: 246 seconds)
[01:34:13] *** Joins: nate_ (~natethegr@2600:1700:8c28:28c0:3263:2646:ac6:1fde)
[01:34:34] <kurahaupo> ifohancroft: There seems to be two conflicting objectives: in order to receive keyboard input, your app would need to open a window and have it become the current input focus; but if one of the things that you want to do is "snapshot the current window" or "snapshot the screen containing the current window", you've just overridden the "current window". (Suggestions to use a terminal one way to achieve "open a window", and it depends on
[01:34:35] <kurahaupo> your window manager being configured to give focus automatically to the newest window.)
[01:34:44] *** Quits: nate_ (~natethegr@2600:1700:8c28:28c0:3263:2646:ac6:1fde) (Read error: Connection reset by peer)
[01:35:22] *** Joins: jetchisel (jetchisel@user/jetchisel)
[01:37:00] *** Joins: kj (~kj@kj.aerisnetwork.net)
[01:37:44] <cryptonector> https://pubs.opengroup.org/onlinepubs/007904875/basedefs/xbd_chap07.html
[01:37:53] <cryptonector> I see nothing there forbidding non-ASCII
[01:38:54] <cryptonector> I don't even see a reference to ISO 646
[01:39:38] *** Quits: kj (~kj@kj.aerisnetwork.net) (Client Quit)
[01:40:01] <cryptonector> now, when people use non-ASCII in their filesystems, they have to agree on codeset and encoding, or else, and the only reasonable choice is UTF-8
[01:40:06] <ifohancroft> kurahaupo: I already fixed it by using sxhkd as a keyboard daemon. It allows you so set a key combo where the last key is one from a list, and if the thing you are calling can get focus, you can pass the key directly to it. If it's not, it lets you pass a parameter to it based on the pressed key
[01:40:10] <ifohancroft> solved it*
[01:40:12] <cryptonector> anyways, we're far afield from bash
[01:40:14] *** Joins: kj (~kj@kj.aerisnetwork.net)
[01:42:31] <earnestly> cryptonector: openbsd made the right choice, pure utf-8.  Also fixed a bunch of tools to only care about utf-8.  Only ssh needs special care when interfacing with inferior encodings
[01:43:11] <earnestly> The 'care' bit is, for example: https://0x0.st/-Y7H.c
[01:43:58] *** Quits: tar_xvf (~tar@c-76-116-112-52.hsd1.nj.comcast.net) (Quit: Textual IRC Client: www.textualapp.com)
[01:45:00] <earnestly> cryptonector: But it shouldn't matter, a filename is a bunch of bytes (terminated with \0).  The encoding doesn't matter when it was written, only how it's decoded
[01:45:13] <earnestly> the problem is lossy conversions without error
[01:45:17] <tirnanog> right.
[01:45:28] <cryptonector> ssh can negotiate locales, oddly
[01:45:41] <cryptonector> well, it can negotiate _language_
[01:45:42] <tirnanog> ASCII is just as much an encoding as UTF-8 is, for that matter. one can have invalid ASCII.
[01:45:49] <earnestly> cryptonector: irc is another case where that happens
[01:46:01] <kurahaupo> cryptonector: TZ= will use a per-host default timezone (from /etc/localtime); if you want UTC in logs then say so: TZ=Z or TZ=UTC
[01:46:04] <cryptonector> tirnanog: yes, but POSIX doesn't say that the C locale is ASCII!
[01:46:08] *** Quits: somlis (~somlis@user/somlis) (Quit: WeeChat 3.3)
[01:46:21] <earnestly> kurahaupo: Hm, is =Z defined?  TIL if so
[01:46:36] <cryptonector> kurahaupo: true, yes, TZ=UTC
[01:46:43] <earnestly> cryptonector: It's the POSIX/C locale, and it defines it
[01:46:57] <cryptonector> earnestly: nope, I linked it
[01:47:15] <cryptonector> https://pubs.opengroup.org/onlinepubs/007904875/basedefs/xbd_chap07.html
[01:47:18] <cryptonector> ^F646
[01:47:20] <cryptonector> nothing
[01:47:30] *** Joins: somlis (~somlis@user/somlis)
[01:47:39] <cryptonector> ^FASCII -> a comment in a localedef, but nothing like normative language
[01:48:02] <cryptonector> it defines character classes, and it clearly copies ASCII, but that's it
[01:48:12] <cryptonector> and it says nothing about invalid byte values
[01:48:16] *** Quits: zro (~zro@user/zro) (Ping timeout: 265 seconds)
[01:48:39] <earnestly> cryptonector: Yeah, it defines C/POSIX.  It wouldn't mention ASCII because it's not relevant
[01:48:46] <earnestly> That's what I meant by 'it', itself
[01:48:58] <cryptonector> ah, sure
[01:49:21] <cryptonector> point is that the C locale allows non-ASCII
[01:49:45] <cryptonector> I agree that all non-UTF-8 locales should be obsoleted and removed
[01:50:05] <earnestly> I can sympathise with SJIS though
[01:50:07] *** Quits: crabbedhaloablut (~crabbedha@user/crabbedhaloablut) (Remote host closed the connection)
[01:50:25] <earnestly> They gain 1 extra byte with UTF-8
[01:50:31] <tirnanog> developed by ASCII. heh.
[01:50:35] *** Joins: crabbedhaloablut (~crabbedha@user/crabbedhaloablut)
[01:50:46] <cryptonector> earnestly: meh
[01:50:58] <earnestly> In reality though, encodings aren't going away, just have to deal with it
[01:51:05] *** Quits: rcernin (~rcernin@pa49-182-50-217.pa.qld.optusnet.com.au) (Ping timeout: 252 seconds)
[01:51:23] <earnestly> But it helps if library developers stop thinking in 'String' types and start thinking in terms of arrays of bytes that can be encoded as a first class
[01:51:42] <earnestly> This is serious, it's the same mentality that got you 'char' in C instead of 'byte', it matters
[01:52:02] <cryptonector> I don't mind if languages have a Unicode string type; but they have to have a byte string type
[01:52:05] <tirnanog> what's wrong with strings that consist of logical ordinals?
[01:52:29] <cryptonector> tirnanog: promotes bad habits
[01:53:05] <tirnanog> such as?
[01:53:25] <earnestly> tirnanog: I'd prefer to see types like 'utf8' rather than string, or encoded string or whatever else.  Haskell sort of fixed this with Text, which makes some sense if you need something that actually represents textual content
[01:53:42] <cryptonector> devs tend to think they can slice strings at arbitrary character offsets, but then they're either slicing at byte offsets (possibly producing garbage) or at codepoint offsets (also possibly producing garbage)
[01:53:49] <earnestly> ('string' as a monoid)
[01:54:21] <cryptonector> the assumption that you can reach the Nth "character" (or do you mean "glyph"?) in a string in O(1) is simply wrong
[01:54:42] <kurahaupo> ifohancroft: that sounds like a much better solution
[01:54:43] <cryptonector> this is why a Unicode string type is useful: to disallow slicing
[01:54:47] *** Quits: acegallagher (~Ace@71-218-173-138.hlrn.qwest.net) (Ping timeout: 240 seconds)
[01:55:10] <tirnanog> what assumption that can reach the Nth "character" in O(1)?
[01:55:10] <earnestly> cryptonector: Or slicing that takes that detail into account
[01:55:30] <cryptonector> tirnanog: people assume that
[01:55:37] <earnestly> Because 'char'
[01:55:48] <earnestly> (Ada has the same problem)
[01:55:51] *** Joins: hesse (~TheHerman@gateway/tor-sasl/thehermann)
[01:56:05] <cryptonector> earnestly: yes, you need a heavy-duty Unicode library to deal with Unicode
[01:56:16] *** Quits: unmanbearpig (~unmanbear@45.76.95.141) (Changing host)
[01:56:16] *** Joins: unmanbearpig (~unmanbear@user/unmanbearpig)
[01:56:49] <cryptonector> you have to handle form-insensitivity / normalization, you have to support decompositions (because not every character has a precomposition), you have to handle complex glyphs
[01:56:54] *** Quits: crabbedhaloablut (~crabbedha@user/crabbedhaloablut) (Ping timeout: 276 seconds)
[01:57:19] <earnestly> Which is made somewhat 'easy' in the form of a giant lookup table lol
[01:57:27] <ifohancroft> kurahaupo: indeed. I thought all keyboard daemons can pass input and I just had to access it differently from Bash but that apparently isn't the case with MATE's own keyboard shortcuts settings software
[01:57:34] *** Quits: TheHermann (~TheHerman@gateway/tor-sasl/thehermann) (Ping timeout: 276 seconds)
[01:57:37] *** Joins: acegallagher (~Ace@71-218-173-138.hlrn.qwest.net)
[01:57:53] <cryptonector> earnestly: not really, those tables should be an internal detail of the libraries
[01:58:06] <cryptonector> in practice you want a string -> character stream interface
[01:58:23] <earnestly> Well yes, the context was your library
[01:58:31] <earnestly> (Or whatever implementation)
[01:59:46] *** Joins: tar_xvf (~tar@c-76-116-112-52.hsd1.nj.comcast.net)
[01:59:46] *** Quits: paulgrmn (~paulgrmn@user/paulgrmn) (Ping timeout: 252 seconds)
[02:00:52] *** Joins: stkrdknmibalz (~test@rrcs-75-87-43-226.sw.biz.rr.com)
[02:01:26] <tirnanog> alright. well, I'm perfectly happy with using a language with first-class unicode support, and where strings are abstracted as ordinal sequences. it certainly simplifies my workload.
[02:02:17] *** Joins: crabbedhaloablut (~crabbedha@user/crabbedhaloablut)
[02:02:39] <cryptonector> tirnanog: á  -- there's two ways to write that, one of which uses TWO Unicode codepoints, and both use more than one byte
[02:02:53] <cryptonector> it gets more complicated than that
[02:03:28] <cryptonector> abstracting Unicode as ordinal sequences is just not possible
[02:03:47] *** Joins: igemnace (~ian@user/igemnace)
[02:03:50] <earnestly> tirnanog: I saw someone ask what the difference is between C and ASCII and the replies were all 'wtf, C is a programming language and ASCII is not'
[02:05:10] <earnestly> cryptonector: To be fair, this is why they convert everything to UTF32 as their internal representation
[02:05:21] <cryptonector> earnestly: who they?
[02:05:26] <earnestly> Haskell, for example
[02:05:28] <cryptonector> anyways, UTF-32 is not a solution
[02:05:29] <earnestly> Rust
[02:05:42] <cryptonector> á is either one or two codepoints
[02:05:51] <cryptonector> so either 32 or 64 bits
[02:06:35] *** Quits: tex (~super@user/dix) (Ping timeout: 246 seconds)
[02:06:44] <cryptonector> if it's decomposed and you cut between the 'a' and the combining acute mark, then you're going to have the wrong character on the left-hand side and garbage on the right-hand side
[02:06:56] <cryptonector> you can't insist on NFC either
[02:07:00] *** Quits: brelod (~me@90.244.150.142) (Quit: leaving)
[02:07:21] <cryptonector> fun fact: HFS+ uses NFD (or very close to it, since they shipped before the UC defined NFD)
[02:07:54] <cryptonector> so if you cut-n-paste a filename with &aacute; in it you'll get NFD
[02:08:00] <cryptonector> (in OS X)
[02:08:38] <cryptonector> there's just no way to hide the complexity with Unicode, and it's not the UC's fault either -- it's humans' fault
[02:10:23] *** Joins: dd_ (dd_@gateway/vpn/protonvpn/dd/x-95652672)
[02:11:49] *** Joins: seninha (~seninha@user/seninha)
[02:13:10] *** Quits: acegallagher (~Ace@71-218-173-138.hlrn.qwest.net) (Quit: ZNC - https://znc.in)
[02:13:11] <earnestly> It's also UC's fault for adding surrogate pairs
[02:13:47] <cryptonector> that's more like Microsoft's and Sun's fault for shipping code that used UCS-2 and then needed a cheap way out of their messes
[02:14:57] *** Quits: Administratorte (~sq@tempest.math.colostate.edu) (Quit: WeeChat 3.3)
[02:15:01] *** Joins: acegallagher (~Ace@71-218-173-138.hlrn.qwest.net)
[02:17:15] *** Joins: moneylotion (~moneyloti@154.3.42.101)
[02:17:43] *** Quits: seninha (~seninha@user/seninha) (Quit: Leaving)
[02:18:11] *** Quits: moneylotion (~moneyloti@154.3.42.101) (Client Quit)
[02:18:24] *** Joins: yuckey2d (~yuckey2d@154.3.42.101)
[02:18:47] *** Joins: dre (~dre@2001:8003:c932:c301:d44a:8295:7928:835)
[02:21:29] *** Joins: mago (~mago@87.125.51.92)
[02:22:31] *** Joins: Elodin (~weechat@user/elodin)
[02:23:43] <GuiToris> am I allowed to use variables in variables? https://bpa.st/raw/KG5Q
[02:24:41] <emanuele6> # timeframe=30 reffile=/tmp/anacfile"$timeframe"; declare -p timeframe reffile
[02:24:43] <shbot> emanuele6: declare -- timeframe="30"
[02:24:43] <shbot> emanuele6: declare -- reffile="/tmp/anacfile30"
[02:25:01] <GuiToris> thank you
[02:26:29] *** Joins: rcernin (~rcernin@10.179-27-211.dynamic.dsl.brs.iprimus.net.au)
[02:28:36] *** Quits: rcernin (~rcernin@10.179-27-211.dynamic.dsl.brs.iprimus.net.au) (Client Quit)
[02:32:27] *** Joins: invra (~invra@mail.aletheianature.es)
[02:33:26] *** Quits: sam4488 (~Android@181.52.66.248) (Ping timeout: 245 seconds)
[02:35:31] *** Quits: Elodin (~weechat@user/elodin) (Ping timeout: 245 seconds)
[02:35:56] *** Joins: sam4488 (~Android@181.52.66.248)
[02:39:55] *** Joins: rcernin (~rcernin@pa49-182-50-217.pa.qld.optusnet.com.au)
[02:40:33] *** Quits: igemnace (~ian@user/igemnace) (Remote host closed the connection)
[02:40:45] <mknod> GuiToris, you are also allowed to try and see for yourself
[02:40:50] *** Quits: trekkie1701c (~trekkie17@user/trekkie1701c) (Quit: :P)
[02:41:05] <GuiToris> it sounds scary
[02:41:32] <GuiToris> the script will automatically remove files
[02:42:01] <mknod> So what? Play with your interactive shell, write a dummy program, be smart.
[02:42:35] *** Quits: mago (~mago@87.125.51.92) (Quit: Client closed)
[02:42:57] <cryptonector> learn
[02:43:03] *** Quits: totenkoph (~scythe@user/totenkoph) (Ping timeout: 276 seconds)
[02:43:05] <GuiToris> how can I 'echo' a 'for' loop to see what the actual command look like?
[02:43:25] <GuiToris> I get syntax errors
[02:44:04] <kurahaupo> GuiToris: don't put anything before the "do"
[02:44:27] <GuiToris> I'll try it once again
[02:45:01] <kurahaupo> GuiToris: for x in list of things ; do echo rm "$x" ; done
[02:46:36] <GuiToris> kurahaupo, won't work: https://bpa.st/raw/HEVQ
[02:46:46] <GuiToris> ./downloadjob: line 15: syntax error near unexpected token `do'
[02:48:28] *** Joins: igemnace (~ian@user/igemnace)
[02:48:50] <kurahaupo> "for", "do" and "done" are keywords not commands; don't put echo in front of them
[02:49:13] <GuiToris> but I don't want the command to run
[02:49:47] <kurahaupo> the only command that you don't want to run is "rm". Your need everything else to run normally to see what would happen
[02:50:00] <GuiToris> no
[02:50:08] <GuiToris> I'd like to check the for loop too
[02:50:26] <GuiToris> shellcheck complains and I'd like to figure out what is wrong with it
[02:50:51] <cryptonector> GuiToris: what's to check?  you see what you're writing...
[02:50:53] <kurahaupo> if you put "echo" in front of "[" that will alter the exit status so that && will always succeed
[02:50:57] <cryptonector> there's also set -vx
[02:51:16] <cryptonector> or just echo $'for x in ...'
[02:51:25] <cryptonector> it's unclear what you're after
[02:51:44] <GuiToris> I'd like to understand this: https://bpa.st/raw/EWHQ
[02:52:05] <GuiToris> I can't see what's wrong with it if it's a variable
[02:52:09] <kurahaupo> GuiToris: echo is not the right tool for checking everything; it's the right tool for suppressing a particular command
[02:52:11] *** Quits: jkwnki (~jkwnki@p4ff31b54.dip0.t-ipconnect.de) (Ping timeout: 245 seconds)
[02:52:31] <kurahaupo> !-x > GuiToris
[02:52:32] <greybot> GuiToris: set -x (or ''bash -x myscript'') makes bash output the exact command that it will run after parsing and expansion. You can put ''set -x'' just before the code you want to debug (turn off with ''set +x''). To add more information, change PS4 first: eg. PS4='+($?) $BASH_SOURCE:$FUNCNAME:$LINENO:'
[02:53:12] <xx> # a=hello; echo "${a^^}"
[02:53:14] <shbot> xx: HELLO
[02:53:16] <cryptonector> GuiToris: SC2066 is saying that there's no point to `for i in one_thing; do ...; done` because you don't need a loop to handle one thing
[02:53:21] <xx> I had no idea this was a thing
[02:53:38] <kurahaupo> GuiToris: you want « for f in "${from_place[@]}" ; do …
[02:53:55] *** Quits: rcernin (~rcernin@pa49-182-50-217.pa.qld.optusnet.com.au) (Read error: Connection reset by peer)
[02:54:05] *** Parts: mestre (~mestre@191.177.175.57) ()
[02:54:12] <GuiToris> thank you, I thought I had to remove the quotes, which was always considered to be a bad idea
[02:54:14] <cryptonector> SC2128 is saying from_place is an array, so "$from_place" is not what you want
[02:54:21] <kurahaupo> if it's an array
[02:54:40] *** Quits: oldgalileo (~oldgalile@host-212-18-2-82.customer.m-online.net) (Remote host closed the connection)
[02:54:50] <cryptonector> "${array_name_here[@]}" -> all the elements of the array, each as if quoted
[02:54:59] *** Joins: oldgalileo (~oldgalile@host-212-18-2-82.customer.m-online.net)
[02:55:15] <GuiToris> from_place=(~/Downloads/!(.firejail-dropzone))
[02:55:25] <GuiToris> I think this is an array
[02:55:29] <kurahaupo> yes
[02:55:45] <GuiToris> thank you once again!
[02:55:46] <cryptonector> # declare -a a=("a b c" d); for i in "${a[@]}"; do echo here is one item: "$i"; done
[02:55:47] <shbot> cryptonector: here is one item: a b c
[02:55:48] <shbot> cryptonector: here is one item: d
[02:56:34] <kurahaupo> GuiToris: If "foo" is an array variable, then "$foo" is NOT the whole array, it's shorthand for "${foo[0]}"
[02:57:01] <GuiToris> I didn't know about it
[02:57:08] <kurahaupo> (one of the crazier design decisions in the Shell)
[02:57:22] <GuiToris> that's why I was trying to see the actual command
[02:57:37] *** Joins: roadie (~user@2a02:8108:ec0:1427:7907:eaa6:b44b:58bb)
[02:57:55] <kurahaupo> GuiToris: yes, and that's why "echo" is not the thing to use
[02:58:07] <GuiToris> now I know
[02:58:11] <GuiToris> better late than never
[02:58:47] <kurahaupo> GuiToris: technically "for" is not a command
[02:59:51] <Strykar> how do get just "0.5.21" from https://bpa.st/AQTA
[03:00:13] <GuiToris> hooray, shellcheck didn't find any further mistakes
[03:00:16] <GuiToris> thanks a lot!
[03:01:58] *** Quits: roadie (~user@2a02:8108:ec0:1427:7907:eaa6:b44b:58bb) (Ping timeout: 252 seconds)
[03:02:58] <kurahaupo> The shell got its variable syntax (using "$name" to get the value of "name") from existing practice in text macro processors, but it's not a simple macro preprocessor; rather it performs variable substitutions after parsing, not before.
[03:03:34] <emanuele6> Strykar: there are many ways to do it
[03:03:42] <emanuele6> for example: ./livepeer -version | head -n 1 | cut -c 24-29
[03:03:47] <emanuele6> but you could also use a regex
[03:04:02] <emanuele6> it depends on how stable the output format is and how it is defined
[03:04:20] <GuiToris> kurahaupo, why can't I test this in the command line? variable=./Screen*; echo "$variable" "${variable[@]}"
[03:04:26] <GuiToris> I got ./Screen* ./Screen*
[03:04:45] <kurahaupo> That's not an array assignment
[03:04:53] <kurahaupo> you need the ()
[03:05:00] <GuiToris> oh, right
[03:05:17] <GuiToris> everything is okay now!
[03:05:44] <GuiToris> Now I see the difference
[03:05:53] <kurahaupo> The reverse is also true: you can use ${var[0]} when var is a scalar variable
[03:07:04] *** Joins: mestre (~mestre@191.177.175.57)
[03:07:21] *** Joins: sam4488_ (~Android@2800:484:3d86:3d4c:a1ba:9f8e:b889:bb18)
[03:08:01] <GuiToris> I actually like this, I can play around with it
[03:08:37] <tirnanog> Strykar: sed -n 's/^Livepeer Node Version: //p'
[03:08:58] <emanuele6> tirnanog: that gets 0.5.21-hash
[03:09:09] <tirnanog> oh, without the commit id. missed that.
[03:09:45] <emanuele6> sed -n 's/^Livepeer Node Version: \([^-]*\).*$/\1/p' would work
[03:09:57] *** Quits: sam4488 (~Android@181.52.66.248) (Ping timeout: 265 seconds)
[03:11:33] <GuiToris> it's about time I left, see you later :)
[03:11:37] *** Quits: GuiToris (~GuiToris@user/guitoris) (Quit: Sieben Acht Gute Nacht!)
[03:14:03] <Strykar> emanuele6: thanks, that works
[03:14:28] *** Parts: mestre (~mestre@191.177.175.57) ()
[03:14:37] *** Joins: trekkie1701c (~trekkie17@user/trekkie1701c)
[03:15:01] *** Quits: pasteban (~pasteban@157.146.251.23.bc.googleusercontent.com) (Remote host closed the connection)
[03:15:40] *** Joins: pasteban (~pasteban@157.146.251.23.bc.googleusercontent.com)
[03:16:12] <emanuele6> you are welcome
[03:20:01] *** Quits: checkbot (~checkbot@157.146.251.23.bc.googleusercontent.com) (Remote host closed the connection)
[03:20:39] *** Joins: checkbot (~checkbot@157.146.251.23.bc.googleusercontent.com)
[03:23:39] *** Joins: zebrag (~chris@user/zebrag)
[03:26:13] *** Joins: herjazz (~herjazz@p6758124-ipngn30801marunouchi.tokyo.ocn.ne.jp)
[03:26:35] *** Joins: travaldo (~travaldo@159.203.88.148)
[03:28:42] *** Joins: CodePoint (~CodePoint@2600:1700:3070:3790:e57a:61d6:58d6:19aa)
[03:29:16] *** Parts: nova (novasenco@user/nova) (♥☺)
[03:30:00] *** Quits: bertptrs (~quassel@user/bertptrs) (Quit: https://quassel-irc.org - Chat comfortably. Anywhere.)
[03:30:31] *** Quits: Bit_MCP (~Bit_MCP@99-22-255-91.lightspeed.frokca.sbcglobal.net) (Ping timeout: 252 seconds)
[03:30:32] *** Joins: bertptrs (~quassel@user/bertptrs)
[03:31:25] <Strykar> emanuele6: one more Q, how do I extract the same version number alone from the url "https://github.com/livepeer/go-livepeer/releases/download/v0.5.21/livepeer-linux-amd64.tar.gz"
[03:31:40] <emanuele6> is that a shell variable?
[03:31:57] <emanuele6> or the output of a command?
[03:34:29] <emanuele6> # url=https://github.com/livepeer/go-livepeer/releases/download/v0.5.21/livepeer-linux-amd64.tar.gz ver=${url%/*} ver=${ver##*/v}; declare -p url ver
[03:34:31] <shbot> emanuele6: declare -- url="https://github.com/livepeer/go-livepeer/releases/download/v0.5.21/livepeer-linux-amd64.tar.gz"
[03:34:31] <shbot> emanuele6: declare -- ver="0.5.21"
[03:35:25] <Strykar> I want to compare the latest version on github vs the installed one before upgrading, the "latest" URL which redirects is "https://github.com/livepeer/go-livepeer/releases/latest/download/livepeer-linux-amd64.tar.gz"
[03:36:32] <Strykar> it's a shell var
[03:36:47] <emanuele6> then ver=${url%/*} ver=${ver##*/v} works
[03:37:32] <emanuele6> !pe > Strykar: learn about shell parameter expansions here
[03:37:32] <greybot> Strykar: learn about shell parameter expansions here: Parameter Expansion expands parameters: "$foo", "$1". You can use it to perform string or array operations: "${file%.mp3}", "${0##*/}", "${files[@]: -4}". They should *always* be quoted. See: http://mywiki.wooledge.org/BashFAQ/073 and "Parameter Expansion" in man bash. Also see http://wiki.bash-hackers.org/syntax/pe.
[03:38:28] *** Quits: unmanbearpig (~unmanbear@user/unmanbearpig) (Ping timeout: 265 seconds)
[03:40:01] *** Quits: hesse (~TheHerman@gateway/tor-sasl/thehermann) (Remote host closed the connection)
[03:40:47] *** Quits: alzgh (~alzgh@user/alzgh) (Remote host closed the connection)
[03:41:08] *** Joins: alzgh (~alzgh@user/alzgh)
[03:42:14] *** Joins: rcernin (~rcernin@pa49-182-50-217.pa.qld.optusnet.com.au)
[03:42:23] *** Quits: extern (~archer@80.246.140.42) (Quit: WeeChat 3.2.1)
[03:43:42] *** Quits: rcernin (~rcernin@pa49-182-50-217.pa.qld.optusnet.com.au) (Client Quit)
[03:44:02] <emanuele6> # url=https://github.com/livepeer/go-livepeer/releases/download/v0.5.21/livepeer-linux-amd64.tar.gz; ver=${url%/*}; echo 'step one: remove last path segment ver=${url%/*}: '"$ver"; ver=${url##*/v}; echo 'step two: remove everything up to the last "/v" ver=${url##*/v}: '"$ver"
[03:44:04] <shbot> emanuele6: step one: remove last path segment ver=${url%/*}: https://github.com/livepeer/go-livepeer/releases/download/v0.5.21
[03:44:04] <shbot> emanuele6: step two: remove everything up to the last "/v" ver=${url##*/v}: 0.5.21/livepeer-linux-amd64.tar.gz
[03:44:09] *** Quits: gxt (~gxt@gateway/tor-sasl/gxt) (Ping timeout: 276 seconds)
[03:44:34] <emanuele6> oops
[03:44:43] *** Joins: gxt (~gxt@gateway/tor-sasl/gxt)
[03:44:44] <emanuele6> # url=https://github.com/livepeer/go-livepeer/releases/download/v0.5.21/livepeer-linux-amd64.tar.gz; ver=${url%/*}; echo 'step one: remove last path segment ver=${url%/*}: '"$ver"; ver=${ver##*/v}; echo 'step two: remove everything up to the last "/v" ver=${ver##*/v}: '"$ver"
[03:44:46] <shbot> emanuele6: step one: remove last path segment ver=${url%/*}: https://github.com/livepeer/go-livepeer/releases/download/v0.5.21
[03:44:46] <shbot> emanuele6: step two: remove everything up to the last "/v" ver=${ver##*/v}: 0.5.21
[03:44:58] <Strykar> # url=https://github.com/livepeer/go-livepeer/releases/latest/download/livepeer-linux-amd64.tar.gz ver=${url%/*} ver=${ver##*/v}; declare -p url ver
[03:45:00] <shbot> Strykar: declare -- url="https://github.com/livepeer/go-livepeer/releases/latest/download/livepeer-linux-amd64.tar.gz"
[03:45:00] <shbot> Strykar: declare -- ver="https://github.com/livepeer/go-livepeer/releases/latest/download"
[03:45:47] <emanuele6> there is no "/v" :)
[03:46:02] <Strykar> # url=https://github.com/livepeer/go-livepeer/releases/latest/download/livepeer-linux-amd64.tar.gz ver=${url%/*} ver=${ver##*}; declare -p url ver
[03:46:04] <shbot> Strykar: declare -- url="https://github.com/livepeer/go-livepeer/releases/latest/download/livepeer-linux-amd64.tar.gz"
[03:46:04] <shbot> Strykar: declare -- ver=""
[03:46:21] <Strykar> oh damn, there is really no "v" :p
[03:46:58] <Strykar> I found https://gist.github.com/steinwaywhw/a4cd19cda655b8249d908261a62687f8 but there seems to be disagreement on the right way to do it :/
[03:47:45] <yitz> !shbot > Strykar
[03:47:45] <greybot> Strykar: shbot runs each session in a new VM as root. Feel free to play with the bot in #evalbot. | Original: http://www.vidarholen.net/contents/evalbot/ | geirha's fork: https://gitlab.com/geirha/shbot | current triggers: /msg shbot triggers
[03:50:18] <Strykar> thanks yitz, i'd tried to install shbot in a vm a long time ago but couldn't, and there were no instructions
[03:51:14] <yitz> There's PM and the #evalbot channel
[03:51:54] <Strykar> emanuele6: the first example works to help me find the "latest" version thanks - https://bpa.st/4JHA
[03:54:02] *** Joins: rcernin (~rcernin@pa49-182-50-217.pa.qld.optusnet.com.au)
[03:54:27] <emanuele6> use `grep -F -e "$_ostype"' and quote `$_curdir/livepeer' (`"$_curdir/livepeer"')
[03:55:12] *** Quits: crabbedhaloablut (~crabbedha@user/crabbedhaloablut) (Ping timeout: 276 seconds)
[03:55:56] *** Joins: crabbedhaloablut (~crabbedha@user/crabbedhaloablut)
[03:56:20] <emanuele6> -F is to match literally and not as regex, -e is to avoid interpreting "$_ostype" as an option, and "$_ostype" and "$_curdir" are substitutions that must be quoted
[03:56:23] <emanuele6> !quotes
[03:56:23] <greybot> https://mywiki.wooledge.org/Quotes
[03:56:50] *** Quits: eem (~eem@user/eem) (Quit: WeeChat 3.3)
[03:58:14] <Strykar> and should I remove the all the "." and subtract to check if github's latest version is newer than mine? like {0521 - 0500}? this feels wrong even to me
[03:58:59] <emanuele6> can't you simply check if they are different?
[04:00:12] <Strykar> just -ne? that's what the guys in that gist are doing
[04:00:16] *** Quits: VoidNoir0 (~VoidNoir0@72.80.203.52) (Quit: Connection closed)
[04:00:23] <emanuele6> -ne is math comparison
[04:00:30] <emanuele6> you need string comparison: !=
[04:00:57] <emanuele6> if [[ $_curver != $_newver ]]; then ...; fi
[04:02:11] *** Joins: tangy (~tangy@user/tangy)
[04:06:56] *** Quits: rigid- (~rigid@user/rigid) (Ping timeout: 252 seconds)
[04:10:12] *** Joins: richardm75_ (~richardm7@2600:8801:c507:2900:6810:aef5:1f9:69c7)
[04:11:30] *** Joins: unmanbearpig (~unmanbear@45.76.95.141)
[04:11:44] *** Joins: rigid (~rigid@user/rigid)
[04:12:11] *** Quits: richardm75 (~richardm7@2600:8801:c507:2900:6810:aef5:1f9:69c7) (Ping timeout: 245 seconds)
[04:18:46] *** Quits: herjazz (~herjazz@p6758124-ipngn30801marunouchi.tokyo.ocn.ne.jp) (Quit: leaving)
[04:20:14] *** Quits: alzgh (~alzgh@user/alzgh) (Remote host closed the connection)
[04:20:45] *** Joins: aaro (~aaro@user/aaro)
[04:23:23] *** Quits: wuseman (wuseman@user/wuseman) (Quit: ZNC 1.8.2+deb2build1 - https://znc.in)
[04:25:07] *** Joins: seninha (~seninha@user/seninha)
[04:28:15] *** Quits: y04nn (~y04nn@193.32.127.238) (Ping timeout: 265 seconds)
[04:30:30] *** Quits: vlm (~vlm@user/vlm) (Quit: "")
[04:30:43] *** Joins: roadie (~user@2a02:8108:ec0:1427:7907:eaa6:b44b:58bb)
[04:31:33] <emanuele6> Strykar: either way, you can remove dots with nodotver=${ver//.}
[04:32:06] <emanuele6> # ver=0.5.21 nodotver=${ver//.}; declare -p nodotver
[04:32:07] <shbot> emanuele6: declare -- nodotver="0521"
[04:32:59] <emanuele6> but afaict, you only need to check if the two versions are different, not which one is greater than the other and you don't need to remove dots for that
[04:33:07] <emanuele6> also beware of octals
[04:33:19] <emanuele6> # echo "$(( 0521 ))"
[04:33:20] <shbot> emanuele6: 337
[04:33:42] *** Joins: mohabaks (~mohabaks@gateway/tor-sasl/mohabaks)
[04:34:16] *** Joins: Atque (~Atque@user/atque)
[04:34:52] *** Quits: elkalamar (elkalamar@gateway/vpn/airvpn/elkalamar) (Ping timeout: 252 seconds)
[04:35:22] <Strykar> emanuele6: thanks a lot, just gonna check if they differ
[04:35:30] *** Joins: vlm (~vlm@user/vlm)
[04:35:38] <Strykar> the GH version isn't going to go lower than mine from the latest/ url
[04:38:24] *** Joins: wuseman (~wuseman@90-227-27-97-no68.tbcn.telia.com)
[04:38:24] *** Quits: wuseman (~wuseman@90-227-27-97-no68.tbcn.telia.com) (Changing host)
[04:38:24] *** Joins: wuseman (~wuseman@user/wuseman)
[04:39:16] *** Joins: greta (uid516789@id-516789.lymington.irccloud.com)
[04:43:55] *** Quits: brettgilio (~brettgili@x-node.gq) (Quit: Leaving...)
[04:44:25] *** Joins: brettgilio (~brettgili@x-node.gq)
[04:44:41] *** Quits: roadie (~user@2a02:8108:ec0:1427:7907:eaa6:b44b:58bb) (Ping timeout: 245 seconds)
[04:46:47] *** Quits: sam4488_ (~Android@2800:484:3d86:3d4c:a1ba:9f8e:b889:bb18) (Quit: -a- Connection Timed Out)
[04:47:04] *** Quits: CodePoint (~CodePoint@2600:1700:3070:3790:e57a:61d6:58d6:19aa) (Quit: CodePoint)
[04:48:40] *** Quits: brettgilio (~brettgili@x-node.gq) (Remote host closed the connection)
[04:49:01] *** Quits: yuckey2d (~yuckey2d@154.3.42.101) (Quit: The Lounge - https://thelounge.chat)
[04:50:47] *** Joins: sam4488 (~Android@181.63.139.95)
[04:51:40] *** Joins: brettgilio (~brettgili@x-node.gq)
[04:51:55] *** Quits: brettgilio (~brettgili@x-node.gq) (Client Quit)
[04:52:22] *** Joins: brettgilio (~brettgili@x-node.gq)
[04:53:38] *** Quits: rustyshackleford (uid236774@id-236774.helmsley.irccloud.com) (Quit: Connection closed for inactivity)
[04:54:32] *** Quits: oldgalileo (~oldgalile@host-212-18-2-82.customer.m-online.net) (Remote host closed the connection)
[04:55:06] *** Joins: oldgalileo (~oldgalile@host-212-18-2-82.customer.m-online.net)
[04:58:49] *** Joins: chenxuezhao (~chenxuezh@106.39.157.10)
[05:02:10] *** Parts: gartt (~gartt@ip72-200-185-13.ri.ri.cox.net) ()
[05:02:19] *** Quits: ChmEarl (~chmearl@user/chmearl) (Quit: Leaving)
[05:08:57] *** Joins: Nact (~l@2a02:a03f:c0b0:f600:3253:5994:1b4f:e854)
[05:13:12] *** Quits: tejr (~tejr@user/tejr) (Ping timeout: 276 seconds)
[05:14:19] *** Joins: ozzzo_work (~ozzzo_wor@h87.s239.verisign.com)
[05:14:36] *** Joins: tejr (~tejr@user/tejr)
[05:22:37] *** Quits: seninha (~seninha@user/seninha) (Quit: Leaving)
[05:28:37] *** Joins: ___nick___ (~quassel@cpc68286-cdif17-2-0-cust533.5-1.cable.virginm.net)
[05:30:50] *** Quits: karakedi (~eAC53C340@user/karakedi) (Remote host closed the connection)
[05:32:17] <xx> while IFS= read -r line; do ...
[05:32:22] <xx> while IFS='' read -r line; do ...
[05:32:32] <xx> which one is more typical or preferred?
[05:33:26] *** Quits: LiftLeft (~LiftLeft@172.98.92.64) (Ping timeout: 245 seconds)
[05:33:30] <emanuele6> they are the same thing
[05:33:31] *** Quits: rcernin (~rcernin@pa49-182-50-217.pa.qld.optusnet.com.au) (Read error: Connection reset by peer)
[05:33:46] <xx> I am aware, but what's better for a human reading it?
[05:34:20] <emanuele6> i can say i use IFS=
[05:34:36] <emanuele6> but one is not preferred to the other
[05:38:50] *** Quits: ozzzo_work (~ozzzo_wor@h87.s239.verisign.com) (Ping timeout: 256 seconds)
[05:43:42] *** Quits: peterrooney (~peter@2604:3d08:1583:7400:dabb:c1ff:fe15:d704) (Quit: new kernel compiled - reboot)
[05:45:40] *** Joins: ozzzo_work (~ozzzo_wor@h87.s239.verisign.com)
[05:47:43] *** Quits: ElPresidente (~ElPreside@2600:1700:3d10:4870:9de6:7cb1:acca:d016) (Read error: Connection reset by peer)
[05:47:44] <phogg> I use IFS= because it is slightly less typing and I am very lazy
[05:48:18] <xx> I too am lazy, but am wondering if I'm shooting myself in the foot by just writing IFS= and not IFS=''
[05:48:43] <emanuele6> they are equivalent...
[05:48:45] <tirnanog> "they are the same thing"
[05:49:17] <tirnanog> # printf '<%s> ' IFS= IFS=''
[05:49:19] <shbot> tirnanog: <IFS=> <IFS=>
[05:49:24] *** Parts: akoana (~ah@user/akoana) (Leaving)
[05:49:36] <emanuele6> # set -x; IFS=; IFS=''
[05:49:38] <shbot> emanuele6: + IFS=
[05:49:38] <shbot> emanuele6: + IFS=
[05:50:25] *** Joins: Pall (~Pall@cpc139184-sprt3-2-0-cust125.17-2.cable.virginm.net)
[05:50:25] <emanuele6> # set -x; IFS= read -r <<< a; IFS='' read -r <<< a
[05:50:33] <shbot> emanuele6: + IFS=
[05:50:33] <shbot> emanuele6: + read -r
[05:50:33] <shbot> emanuele6: etc... ( http://ix.io/3An9 )
[05:53:16] *** Joins: peterrooney (~peter@2604:3d08:1583:7400:dabb:c1ff:fe15:d704)
[05:53:31] *** Quits: earnestly (~earnest@user/earnestly) (Ping timeout: 252 seconds)
[05:57:19] <xx> looks good, thank you
[05:59:21] *** Joins: LiftLeft (~LiftLeft@172.98.92.26)
[06:00:06] *** Quits: arinov (~arinov@213.194.126.155) (Ping timeout: 245 seconds)
[06:00:12] *** Joins: Dotz0cat_ (~Dotz0cat@h27.174.40.162.dynamic.ip.windstream.net)
[06:01:28] *** Quits: Dotz0cat (~Dotz0cat@h171.119.90.75.dynamic.ip.windstream.net) (Ping timeout: 268 seconds)
[06:01:28] *** Dotz0cat_ is now known as Dotz0cat
[06:04:27] <pj> xx: the IFS= is actually not needed there, because if you only specify one variable name (line) then the whole line will go into it anyways.
[06:05:08] <pj> # IFS= read -r line <<<"foo bar baz"; declare -p line
[06:05:10] <shbot> pj: declare -- line="foo bar baz"
[06:05:14] <pj> # read -r line <<<"foo bar baz"; declare -p line
[06:05:16] <shbot> pj: declare -- line="foo bar baz"
[06:06:07] <emanuele6> pj: no
[06:06:15] <xx> # read -r line <<<" foo bar baz"; declare -p line
[06:06:16] <shbot> xx: declare -- line="foo bar baz"
[06:06:20] <xx> see?
[06:06:26] <emanuele6> # IFS= read -r line <<<" foo bar baz"; declare -p line
[06:06:28] <shbot> emanuele6: declare -- line=" foo bar baz"
[06:06:39] <emanuele6> with and without IFS= is different
[06:06:54] <emanuele6> you can only omit IFS= if you don't name the variable and use reply
[06:07:02] <emanuele6> # read -r <<<" foo bar baz"; declare -p REPLY
[06:07:04] <shbot> emanuele6: declare -- REPLY=" foo bar baz"
[06:07:14] <emanuele6> REPLY is bash-only
[06:08:05] <xx> I had no idea REPLY existed, and will probably keep on living happily if I forget about it
[06:08:51] <emanuele6> !REPLY
[06:08:51] <greybot> REPLY is the default variable that read populates, when not supplied with one. The trimming of leading and trailing IFS whitespace does not occur, when used as such. See ''help read'' and http://wiki.bash-hackers.org/commands/builtin/read
[06:09:05] <emanuele6> REPLY is also set by `select'
[06:10:05] <emanuele6> i avoid variables such as REPLY and MAPFILE in functions since they are global and can't be localised, but they are nice outside of functions
[06:10:23] <pj> ahhhh, yep
[06:10:28] *** Joins: Stotteren (~Stotteren@pool-108-20-79-41.bstnma.fios.verizon.net)
[06:11:03] <emanuele6> | while read -r; do [[ $REPLY == *something* ]] && ..; done is also ok because it is run in a subshell
[06:12:06] <xx> on 2nd thought, looks useful
[06:12:25] <pj> I avoid using them when I can name the variable instead, but for some things you can't (eg: BASH_REMATCH), in those cases I either use or copy them right away so I don't have to worry about a function overwriting them.
[06:13:03] *** Joins: thyriaen (~thyriaen@dynamic-089-012-045-073.89.12.pool.telefonica.de)
[06:13:18] <xx> # IFS=0; [ $? = 0 ] && echo foo
[06:13:20] <shbot> xx: no output
[06:13:24] <xx> # IFS=0; [ "$?" = 0 ] && echo foo
[06:13:26] <shbot> xx: foo
[06:13:34] <emanuele6> !qefs
[06:13:34] <greybot> "$Quote" "$Every" "$Fucking" "$Substitution"
[06:13:35] <xx> # IFS=0; [[ $? = 0 ]] && echo foo
[06:13:37] <shbot> xx: foo
[06:14:01] <xx> is it *always*, for all weird edge cases of IFS and whatever, safe to not quote $var in [[ ... ]]
[06:14:18] <xx> including for special vars like $$
[06:14:19] <e36freak> for the left hand side, yes
[06:14:36] <xx> yeah, left hand side is what I mean
[06:15:12] <emanuele6> [[ $? != a ]] is not a substitution
[06:15:15] *** Joins: thyriaen_ (~thyriaen@dynamic-077-013-206-009.77.13.pool.telefonica.de)
[06:15:20] <emanuele6> [ "$?" != a ] is
[06:15:35] <xx> $? $# $$ are the sort of vars that I wouldn't expect to have to quote, but apparently I do because strange things happen
[06:15:47] <emanuele6> why would you not expect that?
[06:16:04] <xx> because they are defined to be always a number
[06:16:11] <xx> hence never contain whitespace
[06:16:17] <xx> or globs
[06:16:42] <emanuele6> IFS and pattern special character matter, not whitespace
[06:17:05] <xx> what's a 'pattern special character'?
[06:17:25] <emanuele6> # IFS= a='something something'; printf <%s> $a
[06:17:27] <shbot> emanuele6: bash: %s: No such file or directory
[06:17:33] <emanuele6> # IFS= a='something something'; printf '<%s>' $a
[06:17:34] <shbot> emanuele6: <something something>
[06:17:38] <emanuele6> # a='something something'; printf '<%s>' $a
[06:17:40] <shbot> emanuele6: <something><something>
[06:17:45] <emanuele6> # IFS=o a='something something'; printf '<%s>' $a
[06:17:52] <shbot> emanuele6: <s><mething s><mething>
[06:17:58] *** Quits: thyriaen (~thyriaen@dynamic-089-012-045-073.89.12.pool.telefonica.de) (Ping timeout: 265 seconds)
[06:18:15] <emanuele6> xx: "?", "*", "[..]"
[06:18:36] <xx> hmm, I call those globs, so I'm probably using the words wrong
[06:18:53] <xx> but that IFS=o is very interesting demonstration, thank you
[06:22:55] <pj> # a=foo; b="f*"; [[ $a == $b ]] && echo "glob match"; [[ $a == "$b" ]] && echo "exact match"
[06:22:56] <shbot> pj: glob match
[06:23:05] <pj> # a=foo; b="foo"; [[ $a == $b ]] && echo "glob match"; [[ $a == "$b" ]] && echo "exact match"
[06:23:07] <shbot> pj: glob match
[06:23:07] <shbot> pj: exact match
[06:23:31] <pj> that's where quoting of the RHS matters ^^^^^^
[06:25:01] <xx> I feel like it would have made a lot of sense if IFS= was default
[06:25:14] <pj> no
[06:25:30] <xx> but I likely have no idea what I'm talking about
[06:25:36] <pj> then standard command line parsing would be broken.
[06:25:47] <xx> some would say it already is
[06:26:32] <pj> # f () { printf '<%s>' "$@"; }; f foo bar baz; IFS=; f foo bar baz
[06:26:34] <shbot> pj: <foo><bar><baz><foo><bar><baz>
[06:26:39] <pj> hrmmmmm
[06:27:34] *** Joins: justsomeguy (~justsomeg@user/justsomeguy)
[06:28:04] *** Quits: jos1 (~jos3@dyndsl-091-096-040-098.ewe-ip-backbone.de) (Ping timeout: 250 seconds)
[06:28:54] <emanuele6> pj: no, IFS has nothing to do with that
[06:29:04] <pj> yeah, I just figured that out
[06:29:08] <emanuele6> only use for ${arr[*]}/$*, wordsplitting and read
[06:29:22] <emanuele6> s/only use/it's only used/
[06:30:43] *** Joins: jonakeys_ (jonathan@gateway/vpn/airvpn/jonakeys)
[06:32:23] <justsomeguy> Is it possible to add a path to "$CDPATH" that contains a ":" in it?
[06:32:48] <xx> sure, but eww
[06:33:22] <justsomeguy> How would you do that -- some sort of escaping using a hex code, or something?
[06:33:42] *** Quits: jonakeys (jonathan@gateway/vpn/airvpn/jonakeys) (Ping timeout: 250 seconds)
[06:34:08] <justsomeguy> Wait, I guess I could just make a symlink, and use that.
[06:34:20] <emanuele6> xx: no, you cannot do that
[06:34:40] <xx> hmm
[06:36:12] *** Quits: tar_xvf (~tar@c-76-116-112-52.hsd1.nj.comcast.net) (Remote host closed the connection)
[06:36:49] *** Joins: rcernin (~rcernin@72.82-26-211.dynamic.dsl.brs.iprimus.net.au)
[06:38:13] <xx> hmm, I guess not, I was wrong
[06:39:11] <justsomeguy> I feel like $PATH and $CDPATH should be arrays, or at least ASCII NUL delimited strings.
[06:39:25] <xx> zsh does something like that, I think
[06:39:35] <emanuele6> PATH can't be an array
[06:39:47] <emanuele6> CDPATH could, but it is better if it is not
[06:39:50] <justsomeguy> Because arrays can't be exported, right?
[06:39:58] *** Joins: tar_xvf (~tar@c-76-116-112-52.hsd1.nj.comcast.net)
[06:40:01] *** Quits: jonakeys_ (jonathan@gateway/vpn/airvpn/jonakeys) (Quit: WeeChat 3.2.1)
[06:40:04] <emanuele6> because then `CDPATH= cd something' wouldn't be possible
[06:40:20] *** Joins: jonakeys (jonathan@gateway/vpn/airvpn/jonakeys)
[06:40:51] *** Joins: roadie (~user@2a02:8108:ec0:1427:7907:eaa6:b44b:58bb)
[06:41:24] *** Joins: jos1 (~jos3@dyndsl-091-248-051-063.ewe-ip-backbone.de)
[06:41:24] *** Quits: Stotteren (~Stotteren@pool-108-20-79-41.bstnma.fios.verizon.net) (Quit: Leaving)
[06:41:26] <emanuele6> justsomeguy: PATH is an os convention and needs to be an environment variable with that format; the reason why i think that CDPATH should be an array, is what you said
[06:41:36] <emanuele6> s/should/should not/
[06:43:06] *** Quits: travaldo (~travaldo@159.203.88.148) (Quit: travaldo)
[06:43:56] *** Joins: Stotteren (~Stotteren@pool-108-20-79-41.bstnma.fios.verizon.net)
[06:45:18] *** Quits: roadie (~user@2a02:8108:ec0:1427:7907:eaa6:b44b:58bb) (Remote host closed the connection)
[06:45:23] *** Joins: roadie` (~user@2a02:8108:ec0:1427:7907:eaa6:b44b:58bb)
[06:45:32] <justsomeguy> Right, that makes sense.
[06:46:42] *** Quits: Gooberpatrol66 (~Gooberpat@user/gooberpatrol66) (Quit: Leaving)
[06:47:25] *** Quits: xx (~xx@user/xx) (Ping timeout: 252 seconds)
[06:49:02] *** Quits: greta (uid516789@id-516789.lymington.irccloud.com) (Quit: Connection closed for inactivity)
[06:50:59] *** Quits: tar_xvf (~tar@c-76-116-112-52.hsd1.nj.comcast.net) (Quit: Buh bye)
[06:51:22] *** Quits: elena_re (~elena@31.173.82.95) (Read error: Connection reset by peer)
[06:52:46] *** Quits: rcernin (~rcernin@72.82-26-211.dynamic.dsl.brs.iprimus.net.au) (Ping timeout: 265 seconds)
[06:53:08] *** Joins: rcernin (~rcernin@pa49-182-50-217.pa.qld.optusnet.com.au)
[06:54:27] *** Quits: anton (anton@tloks.com) (Quit: System config change... be back in a moment)
[06:54:30] *** Quits: oldgalileo (~oldgalile@host-212-18-2-82.customer.m-online.net) (Remote host closed the connection)
[06:54:59] *** Quits: et (~et@user/et) (Quit: ZNC 1.8.0 - https://znc.in)
[06:55:03] *** Joins: anton (anton@tloks.com)
[06:55:10] *** Joins: tar_xvf (~tar@ec2-3-136-243-174.us-east-2.compute.amazonaws.com)
[06:55:14] *** Quits: rcernin (~rcernin@pa49-182-50-217.pa.qld.optusnet.com.au) (Client Quit)
[06:55:15] *** Joins: oldgalileo (~oldgalile@host-212-18-2-82.customer.m-online.net)
[06:55:26] *** Joins: et (~et@user/et)
[06:55:27] *** Joins: rcernin (~rcernin@pa49-182-50-217.pa.qld.optusnet.com.au)
[06:56:59] <pj> I suppose that an interesting way to prevent a directory from being included in PATH would be to put a ":" in the directory name, eg: mkdir /path/to/:mydir
[06:58:22] <cryptonector> pj: that's it, I'm renaming all the directories that arn't bins or on the path to bins
[06:58:34] <pj> hahaha
[06:58:48] <cryptonector> hold my beer
[06:58:50] <pj> I'll start a new trend
[06:58:57] <cryptonector> hmm, some things aren't working so good
[07:01:08] *** Joins: Gooberpatrol66 (~Gooberpat@user/gooberpatrol66)
[07:01:10] <emanuele6> `cd :<tab>' completion is broken
[07:01:18] *** Joins: totenkoph (~scythe@user/totenkoph)
[07:01:26] *** Quits: rcernin (~rcernin@pa49-182-50-217.pa.qld.optusnet.com.au) (Quit: WeeChat 3.3)
[07:01:34] <emanuele6> it works as if the colon is not present
[07:01:43] <emanuele6> also `cd :d<tab>'
[07:01:44] *** Joins: rcernin (~rcernin@pa49-182-50-217.pa.qld.optusnet.com.au)
[07:02:33] <justsomeguy> What if you press Alt-/, instead?
[07:03:02] <pj> I would imagine that would be fixable with complete
[07:03:03] <emanuele6> Alt-\,?
[07:04:16] <emanuele6> # bind -p | grep '\\e-.*,'
[07:04:18] <shbot> emanuele6: no output
[07:04:48] <emanuele6> # set -o vi; bind -p | grep '\\e-.*,'
[07:04:50] <shbot> emanuele6: no output
[07:05:03] <emanuele6> justsomeguy: nothing is bound to meta+, ?
[07:06:04] <justsomeguy> Alt-/ should trigger pathname expansion in readline. If you run bind -p | grep complete-filename, it should come up.
[07:06:11] *** Quits: rcernin (~rcernin@pa49-182-50-217.pa.qld.optusnet.com.au) (Client Quit)
[07:06:14] *** Quits: Gooberpatrol66 (~Gooberpat@user/gooberpatrol66) (Quit: Leaving)
[07:06:28] <justsomeguy> Unless you're using a custom keybinding for that, or are in vi mode.
[07:08:37] <emanuele6> oh Alt-/
[07:08:40] *** Joins: Gooberpatrol66 (~Gooberpat@user/gooberpatrol66)
[07:08:59] <emanuele6> i thought you meant Alt-,
[07:09:26] <emanuele6> meta+/ is the same as tab
[07:09:58] <emanuele6> oh, wait, no
[07:10:05] <emanuele6> meta+/ is not broken
[07:10:15] <justsomeguy> Hmm, ok, I was curious about whether that was a limitation of readline, or just how the completion script was written for cd. Seems like it's the script.
[07:11:11] <emanuele6> but i tried in `bash --norc', i don't think it's a bash-completion script
[07:11:21] <emanuele6> i think it's bash's default tab completion
[07:15:37] *** Joins: n4dir (~user@i577BC8E4.versanet.de)
[07:19:03] *** Joins: e2a5e-yu (~e2a5e@161.81.166.20)
[07:20:33] *** Quits: e2a5e-yu (~e2a5e@161.81.166.20) (Quit: Leaving)
[07:21:07] *** Joins: e2a5e (~e2a5e@161.81.166.20)
[07:22:11] *** Quits: LiftLeft (~LiftLeft@172.98.92.26) (Ping timeout: 252 seconds)
[07:24:26] <justsomeguy> Seems so. I wonder if this should be filed as a bug?
[07:25:11] <cryptonector> just in case you want to rename non-bindirs??
[07:25:13] <cryptonector> :)
[07:26:44] *** Quits: sdu (~doo@185.44.146.64) (Ping timeout: 265 seconds)
[07:29:17] *** Quits: justsomeguy (~justsomeg@user/justsomeguy) (Quit: WeeChat 3.2)
[07:30:19] *** Joins: rcernin (~rcernin@pa49-182-50-217.pa.qld.optusnet.com.au)
[07:31:18] *** Joins: ElPresidente (~ElPreside@2600:1700:3d10:4870:9de6:7cb1:acca:d016)
[07:33:16] *** Quits: nutron (~nutron@66.51.134.122) (Read error: Connection reset by peer)
[07:35:06] *** Quits: mknod (~mknod@user/mknod) (Ping timeout: 245 seconds)
[07:35:49] *** Quits: zebrag (~chris@user/zebrag) (Remote host closed the connection)
[07:37:53] *** Joins: LiftLeft (~LiftLeft@172.98.80.38)
[07:40:05] *** Quits: e2a5e (~e2a5e@161.81.166.20) (Quit: Leaving)
[07:47:56] *** Joins: nutron (~nutron@66.51.134.122)
[07:48:01] *** Quits: Betal (~Betal@user/betal) (Ping timeout: 245 seconds)
[07:49:16] *** Quits: roadie` (~user@2a02:8108:ec0:1427:7907:eaa6:b44b:58bb) (Ping timeout: 245 seconds)
[07:49:31] *** Quits: tirnanog (~tirnanog@user/tirnanog) (Quit: = "")
[07:53:59] *** Joins: ferdna (~ferdna@user/ferdna)
[07:56:17] *** Quits: dermoth (~dermoth@user/dermoth) (Ping timeout: 252 seconds)
[07:56:47] *** Joins: Leoamros (~Leoamros@95.74.3.147)
[07:58:30] *** Quits: EerdAppel (~eerdappel@84-24-184-139.cable.dynamic.v4.ziggo.nl) (Ping timeout: 260 seconds)
[08:00:05] *** Parts: Leoamros (~Leoamros@95.74.3.147) (Leaving)
[08:03:23] *** Joins: EerdAppel (~eerdappel@84-24-184-139.cable.dynamic.v4.ziggo.nl)
[08:03:51] *** Quits: gr33n7007h (~gr33n7007@user/gr33n7007h) (Ping timeout: 245 seconds)
[08:04:39] *** Quits: Stotteren (~Stotteren@pool-108-20-79-41.bstnma.fios.verizon.net) (Quit: Leaving)
[08:05:49] *** Joins: gr33n7007h (~gr33n7007@user/gr33n7007h)
[08:11:39] *** Joins: Stotteren (~Stotteren@pool-108-20-79-41.bstnma.fios.verizon.net)
[08:12:50] *** Quits: vishal (~vishal@fedora/vishal) (Quit: ZNC 1.8.2 - https://znc.in)
[08:14:02] *** Quits: Stotteren (~Stotteren@pool-108-20-79-41.bstnma.fios.verizon.net) (Client Quit)
[08:14:30] *** Joins: Stotteren (~Stotteren@pool-108-20-79-41.bstnma.fios.verizon.net)
[08:15:39] *** Joins: vishal (~vishal@fedora/vishal)
[08:16:00] *** Quits: dkeohane1 (~dkeohane@ec2-18-189-29-140.us-east-2.compute.amazonaws.com) (Ping timeout: 260 seconds)
[08:17:28] *** Quits: rcernin (~rcernin@pa49-182-50-217.pa.qld.optusnet.com.au) (Quit: WeeChat 3.3)
[08:18:13] *** Joins: dkeohane1 (~dkeohane@ec2-18-189-29-140.us-east-2.compute.amazonaws.com)
[08:22:15] *** Joins: roadie` (~user@2a02:8108:ec0:1427:7907:eaa6:b44b:58bb)
[08:22:53] *** Quits: timj (~timj@user/timj) (Ping timeout: 264 seconds)
[08:24:14] *** Joins: tejr_ (~tejr@user/tejr)
[08:24:26] *** Quits: tejr (~tejr@user/tejr) (Remote host closed the connection)
[08:26:18] *** Quits: ryzenda (~ryzenda@pool-74-109-246-70.pitbpa.fios.verizon.net) (Read error: Connection reset by peer)
[08:26:19] *** Quits: ferdna (~ferdna@user/ferdna) (Quit: Leaving)
[08:27:01] *** Quits: roadie` (~user@2a02:8108:ec0:1427:7907:eaa6:b44b:58bb) (Ping timeout: 252 seconds)
[08:30:02] *** Quits: riff-IRC (~riff-IRC@user/riff-irc) (Remote host closed the connection)
[08:31:01] *** Quits: trekkie1701c (~trekkie17@user/trekkie1701c) (Quit: :P)
[08:31:15] *** Joins: riff-IRC (~riff-IRC@user/riff-irc)
[08:32:31] *** Quits: gnoo (cat@user/gnoo) (Ping timeout: 252 seconds)
[08:33:15] *** Joins: roadie` (~user@2a02:8108:ec0:1427:7907:eaa6:b44b:58bb)
[08:33:33] *** Joins: rcernin (~rcernin@207.a.001.mka.iprimus.net.au)
[08:36:15] *** Joins: roadie`` (~user@2a02:8108:ec0:1427:7907:eaa6:b44b:58bb)
[08:36:18] *** Quits: roadie` (~user@2a02:8108:ec0:1427:7907:eaa6:b44b:58bb) (Remote host closed the connection)
[08:37:20] *** Joins: timj (~timj@user/timj)
[08:38:01] *** Quits: rcernin (~rcernin@207.a.001.mka.iprimus.net.au) (Ping timeout: 245 seconds)
[08:41:00] *** Joins: tex (~super@user/dix)
[08:54:36] *** Quits: oldgalileo (~oldgalile@host-212-18-2-82.customer.m-online.net) (Remote host closed the connection)
[08:54:54] *** Joins: oldgalileo (~oldgalile@host-212-18-2-82.customer.m-online.net)
[09:00:55] *** Joins: trinity (~marvin@user/trinity)
[09:04:39] *** Joins: gnoo (gnoo@user/gnoo)
[09:09:51] *** Parts: trinity (~marvin@user/trinity) ()
[09:14:02] *** Quits: keypusher (keypusher@user/keypusher) (Ping timeout: 265 seconds)
[09:16:43] *** Andrew_ is now known as Andrew
[09:16:45] *** Joins: lavaball (felix@31.204.155.215)
[09:18:10] *** Joins: frostwork (~frostwork@user/frostwork)
[09:23:42] *** Quits: Gooberpatrol66 (~Gooberpat@user/gooberpatrol66) (Quit: Leaving)
[09:27:06] *** Joins: Gooberpatrol66 (~Gooberpat@user/gooberpatrol66)
[09:28:09] *** tejr_ is now known as tejr
[09:29:57] *** Quits: mohabaks (~mohabaks@gateway/tor-sasl/mohabaks) (Ping timeout: 276 seconds)
[09:30:57] *** Joins: rendar (~rendar@user/rendar)
[09:36:45] *** Joins: adac (~adac@213-47-187-80.cable.dynamic.surfer.at)
[09:41:20] *** Joins: Tireos (~Tireos@91.223.118.131)
[09:43:33] *** Quits: Nact (~l@2a02:a03f:c0b0:f600:3253:5994:1b4f:e854) (Quit: Konversation terminated!)
[09:44:16] *** Joins: sdu (~doo@185.44.146.178)
[09:52:29] *** Joins: tobybl (~tobybl@31.111.35.255)
[09:52:53] *** Quits: LiftLeft (~LiftLeft@172.98.80.38) (Ping timeout: 252 seconds)
[09:54:05] *** Quits: ozzzo_work (~ozzzo_wor@h87.s239.verisign.com) (Quit: Client closed)
[09:57:08] *** Quits: chenxuezhao (~chenxuezh@106.39.157.10) ()
[09:57:20] *** Quits: Gooberpatrol66 (~Gooberpat@user/gooberpatrol66) (Remote host closed the connection)
[10:04:02] *** Joins: rtjure (~rtjure@dynamic-002-247-249-147.2.247.pool.telefonica.de)
[10:07:08] *** Quits: skapata (~Skapata@user/skapata) (Remote host closed the connection)
[10:09:50] *** Joins: fedenix (~fedenix@gateway/tor-sasl/fedenix)
[10:10:25] *** Joins: vysn (~vysn@user/vysn)
[10:18:38] *** Joins: AquaL1te (~AquaL1te@user/aqual1te)
[10:19:16] *** amosbird_ is now known as amosbird
[10:21:25] *** Quits: dd_ (dd_@gateway/vpn/protonvpn/dd/x-95652672) (Ping timeout: 252 seconds)
[10:27:52] *** Joins: furrymcgee (~devuan@cgn-213-196-210-161.nc.de)
[10:27:56] *** Joins: brelod (~me@90.244.150.142)
[10:30:17] *** Quits: gr33n7007h (~gr33n7007@user/gr33n7007h) (Ping timeout: 252 seconds)
[10:30:31] *** Quits: richardm75_ (~richardm7@2600:8801:c507:2900:6810:aef5:1f9:69c7) (Ping timeout: 245 seconds)
[10:31:05] *** Quits: n4dir (~user@i577BC8E4.versanet.de) (Remote host closed the connection)
[10:34:03] *** Joins: dd_ (dd_@gateway/vpn/protonvpn/dd/x-95652672)
[10:38:32] *** Quits: joo (~joo@fsf/member/joo--) (Ping timeout: 250 seconds)
[10:40:31] *** Quits: sam4488 (~Android@181.63.139.95) (Ping timeout: 245 seconds)
[10:42:48] *** Joins: sam4488 (~Android@181.63.139.95)
[10:43:14] *** Joins: mrhands (~mrhands@user/mrhands)
[10:46:39] *** Joins: scaleww (~scaleww@77-41-20-31.ftth.glasoperator.nl)
[10:52:37] *** Joins: azidhaka (~azidhaka@user/azidhaka)
[10:54:32] *** Quits: oldgalileo (~oldgalile@host-212-18-2-82.customer.m-online.net) (Remote host closed the connection)
[10:55:00] *** Joins: oldgalileo (~oldgalile@host-212-18-2-82.customer.m-online.net)
[11:01:02] *** Quits: furrymcgee (~devuan@cgn-213-196-210-161.nc.de) (Quit: leaving)
[11:03:32] *** Quits: thyriaen_ (~thyriaen@dynamic-077-013-206-009.77.13.pool.telefonica.de) (Remote host closed the connection)
[11:03:55] *** Joins: Gooberpatrol66 (~Gooberpat@user/gooberpatrol66)
[11:07:34] *** Joins: situ (situ@nat-pool-brq-t.redhat.com)
[11:13:03] *** Joins: aniruddha (uid340443@id-340443.ilkley.irccloud.com)
[11:15:49] *** Quits: aead (~aead@user/aead) (Quit: ZNC - https://znc.in)
[11:15:50] *** Quits: randm (~randm@user/randm) (Quit: Leaving.)
[11:16:09] *** Joins: randm (~randm@user/randm)
[11:17:22] *** Joins: aead (~aead@user/aead)
[11:19:14] *** Joins: shad (~shad@user/shad)
[11:20:21] *** Quits: cmc (~methos@gateway/tor-sasl/cmc) (Remote host closed the connection)
[11:20:50] *** Joins: cmc (~methos@gateway/tor-sasl/cmc)
[11:21:59] *** Quits: greknod2 (~grek@ppp121-45-135-247.bri-pow-que-bras31.tpg.internode.on.net) (Ping timeout: 252 seconds)
[11:22:30] *** Joins: furrymcgee (~devuan@cgn-213-196-210-161.nc.de)
[11:26:21] *** Quits: lavaball (felix@31.204.155.215) (Remote host closed the connection)
[11:27:15] *** Joins: lavaball (felix@31.204.155.215)
[11:27:29] *** Quits: rtjure (~rtjure@dynamic-002-247-249-147.2.247.pool.telefonica.de) (Ping timeout: 252 seconds)
[11:30:28] *** Joins: ConstantDesc (~textual@cpc158823-hari22-2-0-cust72.20-2.cable.virginm.net)
[11:32:30] *** Joins: moha (uid506645@id-506645.helmsley.irccloud.com)
[11:36:13] *** Quits: scaleww (~scaleww@77-41-20-31.ftth.glasoperator.nl) (Quit: Leaving)
[11:38:39] *** Quits: lavaball (felix@31.204.155.215) (Remote host closed the connection)
[11:39:43] *** Joins: lavaball (felix@31.204.155.215)
[11:40:40] *** Joins: dermoth (~dermoth@dsl-199-102-159-155.mtl.aei.ca)
[11:41:21] *** Quits: mat001 (~mat001@c-73-223-64-126.hsd1.ca.comcast.net) (Ping timeout: 245 seconds)
[11:42:19] *** Joins: PhilosophicCheck (~Philosoph@46-254-252.adsl.cyta.gr)
[11:42:57] *** Quits: lavaball (felix@31.204.155.215) (Remote host closed the connection)
[11:43:52] *** Joins: earnestly (~earnest@user/earnestly)
[11:44:02] *** Joins: lavaball (felix@31.204.155.215)
[11:45:47] *** Quits: acegallagher (~Ace@71-218-173-138.hlrn.qwest.net) (Ping timeout: 240 seconds)
[11:46:08] *** Quits: lavaball (felix@31.204.155.215) (Client Quit)
[11:47:42] *** Quits: jaskal (jaskal@user/jaskal) (Remote host closed the connection)
[11:47:51] *** Joins: legola (~legola@46.235.100.217)
[11:51:39] *** Quits: Murray7501 (~Murray@89.109-247-180.customer.lyse.net) (Quit: leaving)
[11:52:20] *** Quits: PhilosophicCheck (~Philosoph@46-254-252.adsl.cyta.gr) (Quit: Leaving)
[11:52:51] *** Quits: situ (situ@nat-pool-brq-t.redhat.com) (Quit: Konversation terminated!)
[11:53:03] *** Joins: prifici (~patri@user/prifici)
[11:53:26] *** Quits: zouhair (~zouhair@lnsm1-montreal02-142-119-22-97.internet.virginmobile.ca) (Ping timeout: 245 seconds)
[11:55:31] *** Joins: zouhair (~zouhair@lnsm3-montreal02-142-118-81-154.internet.virginmobile.ca)
[11:55:32] *** Joins: situ (situ@nat-pool-brq-t.redhat.com)
[11:56:58] *** Joins: Bhavuk (~BTaneja@106.220.168.71)
[11:57:22] *** Joins: Bhavuk_ (~BTaneja@103.132.28.42)
[11:58:21] *** Joins: karakedi (~eAC53C340@user/karakedi)
[12:01:16] *** Joins: iomari892 (~iomari891@197.210.53.99)
[12:01:21] *** Quits: Bhavuk (~BTaneja@106.220.168.71) (Ping timeout: 245 seconds)
[12:02:45] *** Quits: ConstantDesc (~textual@cpc158823-hari22-2-0-cust72.20-2.cable.virginm.net) (Quit: My MacBook has gone to sleep. ZZZzzz…)
[12:07:37] *** Joins: jaskal (jaskal@user/jaskal)
[12:08:51] *** Quits: potamides (~amnifiliu@KH105203.karlshof.wh.tu-darmstadt.de) (Ping timeout: 245 seconds)
[12:15:56] *** Quits: sam4488 (~Android@181.63.139.95) (Ping timeout: 245 seconds)
[12:16:19] *** Joins: sam4488 (~Android@181.63.139.95)
[12:16:26] *** Joins: ConstantDesc (~textual@cpc158823-hari22-2-0-cust72.20-2.cable.virginm.net)
[12:19:44] *** Joins: mozgalom (~mozgalom@IPnet-gw.157.157.97.111.simnet.is)
[12:19:59] *** Quits: LuKaRo_ (~LuKaRo@p4fc32cdc.dip0.t-ipconnect.de) (Ping timeout: 265 seconds)
[12:20:31] *** Quits: kurahaupo (~kurahaupo@220-245-23-126.static.tpgi.com.au) (Ping timeout: 245 seconds)
[12:21:46] *** Quits: daidoji (~daidoji@104-52-250-5.lightspeed.gnvlsc.sbcglobal.net) (Ping timeout: 245 seconds)
[12:22:14] *** Joins: LuKaRo (~LuKaRo@p4fc3360e.dip0.t-ipconnect.de)
[12:22:44] *** Joins: lavaball (felix@31.204.155.215)
[12:23:21] *** Quits: mozgalom (~mozgalom@IPnet-gw.157.157.97.111.simnet.is) (Read error: Connection reset by peer)
[12:23:48] *** Joins: mozgalom (~mozgalom@IPnet-gw.157.157.97.111.simnet.is)
[12:25:50] *** Joins: herjazz (~herjazz@p6758124-ipngn30801marunouchi.tokyo.ocn.ne.jp)
[12:25:54] *** Joins: hiya (quassel@user/hiya)
[12:25:55] *** Joins: Mo (~Mo@dynamic-077-003-126-079.77.3.pool.telefonica.de)
[12:26:38] <hiya> can i calculate number of each weekday in current month as it shows with cal command?
[12:28:41] *** Joins: mkopriva (~mkopriva@ip-78-45-72-123.net.upcbroadband.cz)
[12:29:11] <Soliton> you have what input and want to calculate what?
[12:34:15] *** Joins: TomyWork (~TomyLobo@p200300e80f06af0011da0bc281ca8f63.dip0.t-ipconnect.de)
[12:35:03] *** Joins: sinaowolabi (~SinaOwola@102.134.114.1)
[12:35:13] *** Joins: Nact (~l@2a02:a03f:c0b0:f600:3253:5994:1b4f:e854)
[12:35:19] <mkopriva> hi all, when passing a variable that happens to be empty to a cli tool as an argument, the tool breaks when I use double quotes around the var but works without the quotes, i.e. `tool "$a"` breaks; `tool $a` works; can anyone explain to me why the quoted empty var breaks the tool? (note if the var isn't empty the tool works with both quoted and unquoted var as arg)
[12:35:24] *** Quits: zouhair (~zouhair@lnsm3-montreal02-142-118-81-154.internet.virginmobile.ca) (Quit: KVIrc 5.0.1 Aria http://www.kvirc.net/)
[12:36:15] <Soliton> !wordsplitting
[12:36:15] <greybot> echo $foo; rm $foo -- If you leave $foo unquoted, bash will *remove* all whitespace (newlines, spaces, tabs) while expanding it, take each *word* as a separate argument. `echo` prints these words separated by one space and `rm` deletes each word. So ALWAYS *quote* your parameter expansions: echo "$foo" -- http://mywiki.wooledge.org/WordSplitting
[12:36:25] <Soliton> i would not call that breaking, btw.
[12:36:30] <geirha> tool $a  will run tool with no arguments if a is empty
[12:36:42] <Soliton> i would call it a bug if the empty value is not passed to the tool.
[12:37:06] <Soliton> or bad code if the empty value is supposed to not be passed for whatever reason.
[12:38:07] <mkopriva> thank you both
[12:38:16] *** Quits: dre (~dre@2001:8003:c932:c301:d44a:8295:7928:835) (Quit: Leaving)
[12:38:45] *** Joins: standardrat (~standardr@196.30.99.2)
[12:38:49] *** Joins: pa_ (~smuxi@86-95-132-61.fixed.kpn.net)
[12:39:28] *** Joins: pa__ (~smuxi@86-95-132-61.fixed.kpn.net)
[12:41:54] <hiya> Soliton: yes total number of hours, its 6h a day Mon to Fri and 7.5h on Sat/Sun
[12:42:20] <hiya> Soliton: the script should use cal command to calculate total number of hours for current month
[12:42:54] <geirha> could just calculate it from today's date, requiring no external tools or parsing
[12:46:10] *** Joins: zouhair (~zouhair@lnsm3-montreal02-142-118-81-154.internet.virginmobile.ca)
[12:46:15] *** Joins: kurahaupo (~kurahaupo@220-245-23-126.static.tpgi.com.au)
[12:48:25] *** Joins: arinov (~arinov@213.194.126.155)
[12:50:21] <pa__> im stuck in some unexpected (at least to me) behaviour.. i have a bash script that read input via read -p .. i have this script in couple of different dirs.. and when i manually run them they all run fine.. but now im making an script that uses find to find all these scripts, loops through the list and runs them one by one... but instead if getting a user input prompt, it auto files the user input with the next script location from the loop.. even if
[12:50:21] <pa__> i put an exit at the end of the loop...
[12:50:46] <pa__> is their way to force asking for user input?
[12:50:58] *** Joins: UnnamedBeer (~UnnamedBe@117.red-83-46-8.dynamicip.rima-tde.net)
[12:51:46] <llua> use a different fd for your loop
[12:51:51] <hiya> I want a script that can figure out number of Mon, Tues, Wed, Thru, Friday, Sat and Sun in a month
[12:52:06] *** Quits: lavaball (felix@31.204.155.215) (Remote host closed the connection)
[12:52:18] *** Joins: xx (~xx@user/xx)
[12:52:36] <Soliton> or use find -exec
[12:53:18] *** Joins: lavaball (felix@31.204.155.215)
[12:53:34] <geirha> or even find's -ok instead of read -p, assuming it's just a yn prompt
[12:54:16] *** Joins: jdltouraine_ (~jdltourai@2a02:a03f:847b:b800:b163:93c1:699b:16ff)
[12:54:26] <depesz> hiya: which month? any?
[12:54:35] *** Quits: oldgalileo (~oldgalile@host-212-18-2-82.customer.m-online.net) (Remote host closed the connection)
[12:54:41] *** Quits: lavaball (felix@31.204.155.215) (Remote host closed the connection)
[12:55:09] *** Joins: oldgalileo (~oldgalile@host-212-18-2-82.customer.m-online.net)
[12:55:44] *** Joins: lavaball (felix@31.204.155.215)
[12:55:52] <pa__> ahh ya.. so the calling script has the loop with: while IFS= read -r file; do ... so that messes with the read -p in the other script.
[12:56:16] <depesz> hiya: for i in {01..31}; do date -d "2021-10-$i" '+%A' ; done | sort | uniq -c
[12:57:05] <llua> file descriptors are inherited by child processes yes, its how programs can be interacted with after being started with your shell.
[13:02:06] *** Joins: greknod2 (~grek@ppp121-45-135-79.bri-pow-que-bras31.tpg.internode.on.net)
[13:02:20] <hiya> depesz not any, it would do current month only. as per cal command in terminal.
[13:02:38] *** Quits: flous_ (~undervolt@2a02:a213:2901:5c00:891f:ed82:78b7:dad) (Ping timeout: 260 seconds)
[13:02:43] <pa__> oke thanks guys.. got it working..
[13:02:58] <hiya> Cal command shows it in grid design so it must be easy to calculate?
[13:04:45] *** Quits: lavaball (felix@31.204.155.215) (Quit: Spass und Freude.)
[13:05:21] <emanuele6> hiya: get the current month with %+4Y-%m and use that in the format
[13:05:49] <hiya> where to put? date -d ?
[13:06:09] *** Joins: lavaball (felix@31.204.155.215)
[13:06:11] <Soliton> if you have GNU date.
[13:06:25] <earnestly> > in the format
[13:06:31] <emanuele6> # curmonth=$(date +%+4Y-%m); for i in {01..31}; do date -d "$curmonth-$i" '+%A'; done | sort | uniq -c
[13:06:40] <shbot> emanuele6: date: invalid date '%+4Y-09-01'
[13:06:40] <shbot> emanuele6: date: invalid date '%+4Y-09-02'
[13:06:40] <shbot> emanuele6: etc... ( http://ix.io/3AoB )
[13:06:53] <emanuele6> huh?
[13:07:07] <hiya> yes
[13:07:29] <emanuele6> # curmonth=$(date +%Y-%m); for i in {01..31}; do date -d "$curmonth-$i" '+%A'; done | sort | uniq -c
[13:07:37] <shbot> emanuele6: date: invalid date '2021-09-31'
[13:07:37] <shbot> emanuele6:       4 Friday
[13:07:37] <shbot> emanuele6: etc... ( http://ix.io/3AoC )
[13:07:44] <hiya> wowowo
[13:07:55] <earnestly> > assumes all months have 31 days
[13:08:01] <emanuele6> hahaha
[13:08:34] <emanuele6> as geirha said you can probably just use math without all these calls to date
[13:08:55] <earnestly> I would use dateutils
[13:08:58] <emanuele6> depesz: some months have 30 days :-Þ
[13:09:05] <earnestly> It's a worthwhile dependency
[13:09:26] <hiya> now I want to do, Mon to Fri 6h per day and Sat-Sun 7.5h per day and calculate total number of hours for current month
[13:10:20] <llua> # : $(cal); lastday=$_ curmonth=$(date +%Y-%m); for ((i=1;i<=lastday;i++)); do date -d "$curmonth-$i" '+%A'; done | sort | uniq -c
[13:10:22] <shbot> llua: bash: ((: _3_0: syntax error: invalid arithmetic operator (error token is "3_0")
[13:10:35] <emanuele6> $_ only works with newlines
[13:10:41] <hiya> date: invalid date ‘2021-09-31’
[13:10:50] <emanuele6> lastday=$(cal)
[13:11:16] <llua> # : $(cal); lastday=$_; typeset -p lastday
[13:11:18] <shbot> llua: declare -- lastday="_3_0"
[13:11:44] <emanuele6> quotes?
[13:11:47] *** Joins: y04nn (~y04nn@193.32.127.238)
[13:11:50] <emanuele6> oh
[13:12:00] <emanuele6> i see what you are trying to do
[13:12:01] <Soliton> marks the current day special.
[13:13:49] <Soliton> "The standard output shall be used to display the calendar, in an unspecified format." so all bets are off.
[13:15:41] *** Joins: tobybl_ (~tobybl@31.111.35.255)
[13:17:11] *** Joins: DrSlony (~morgan@2.67.222.40.mobile.tre.se)
[13:17:29] *** Joins: ryzenda (~ryzenda@pool-74-109-246-70.pitbpa.fios.verizon.net)
[13:17:56] <emanuele6> # cal | awk 'NR <= 2 { next } NF { tot += 6 * NF } { if (NR == 3) { tot += NF==1?1.5:3 } else if (NF <= 7) { tot += 7-NF*1.5 } } END { print tot }'
[13:17:58] <shbot> emanuele6: 179
[13:18:01] *** Quits: tobybl (~tobybl@31.111.35.255) (Ping timeout: 245 seconds)
[13:18:21] <emanuele6> > "The standard output shall be used to display the calendar, in an unspecified format." so all bets are off.
[13:18:52] <emanuele6> i get 180.5 on my PC and 179 on shbot, so.. yeah, don't parse cal(1)
[13:18:53] <DrSlony> Hey, I have a text file with just one line, and a number is the only content. I want to read that number into a variable. Should I do 'while read -r line; do', or is there a wooledge-approved way of doing this that skips the loop?
[13:19:37] <Soliton> read -r number < file
[13:19:42] <emanuele6> var=$(< file)
[13:20:23] <DrSlony> thank you
[13:20:28] <Soliton> (the latter is special bash syntax.)
[13:20:40] <emanuele6> yes, $(< file) is bash-only
[13:23:02] <emanuele6> <emanuele6 > i get 180.5 on my PC and 179 on shbot, so.. yeah, don't parse cal(1)
[13:23:25] <emanuele6> i get 180.5 because, in my locale, the week starts on monday
[13:23:44] *** Joins: hejux (~hejux@104.224.190.144.16clouds.com)
[13:23:51] <Soliton> also NR<=2 will also ignore first and last week depending.
[13:24:29] <emanuele6> NR <= 2 ignores September 2021 and Mo Tu We Th Fr Sa Su
[13:24:37] <llua> # : $(cal); lastday=${_//[![:digit:]]} curmonth=$(date +%Y-%m); for ((i=1;i<=lastday;i++)); do date -d "$curmonth-$i" '+%A'; done | sort | uniq -c
[13:24:46] <shbot> llua:       4 Friday
[13:24:46] <shbot> llua:       4 Monday
[13:24:46] <shbot> llua: etc... ( http://ix.io/3AoF )
[13:25:26] <emanuele6> llua: just 2> /dev/null the date command :/
[13:26:00] <emanuele6> # curmonth=$(date +%Y-%m); for i in {01..31}; do date -d "$curmonth-$i" '+%A' ; done 2> /dev/null | sort | uniq -c
[13:26:03] <Soliton> emanuele6: if there is just one or two days in a week it will trigger just the same.
[13:26:06] <shbot> emanuele6:       4 Friday
[13:26:06] <shbot> emanuele6:       4 Monday
[13:26:06] <shbot> emanuele6: etc... ( http://ix.io/3AoF )
[13:26:52] <earnestly> dateseq -i %m -f %A --skip sat,sun "$(date +%m)" 1d "$(dateadd -f %m now +1mo)"
[13:27:04] <emanuele6> Soliton: it's NR <= 2, not NF <= 2
[13:27:18] <Soliton> oh, my bad.
[13:27:30] <earnestly> (Would be better to not use -i %m there now that I think about it, so that it can handle wrapping
[13:27:34] <emanuele6> <emanuele6 > NR <= 2 ignores September 2021 and Mo Tu We Th Fr Sa Su
[13:28:10] <earnestly> Use dateutils, this faffing with shitty tooling while making assumptions about how dates work is going to end poorly
[13:28:28] <emanuele6> yes, don't parse cal(1)
[13:28:39] <earnestly> Plus their question seems to have changed.  How many hours in a business day plus hours in a weekend
[13:28:45] <emanuele6> the output format is undefined and it is locale dependant
[13:30:06] *** Joins: njitramii (~njitramii@144-027-180-159.dynamic.caiway.nl)
[13:30:34] *** Quits: iomari892 (~iomari891@197.210.53.99) (Ping timeout: 250 seconds)
[13:30:42] <emanuele6> earnestly: that is what my awk script computes (assuming locale in which weeks start on monday and a predictable cal(1))
[13:31:37] <earnestly> POSIX especially has no good answers for datetime handling, so don't even try
[13:31:46] <earnestly> gnu doesn't offer much better
[13:33:19] *** Quits: quazimodo (~quazimodo@n1-40-133-145.bla1.nsw.optusnet.com.au) (Ping timeout: 252 seconds)
[13:33:36] * emanuele6 notices an ooo mistake in the awk script: `tot += 7-NF*1.5' -> `tot += (7-NF)*1.5'
[13:34:18] <earnestly> Hm
[13:34:53] <emanuele6> oh, it's not even correct
[13:35:49] <emanuele6> else if (NF >= 6) { tot += (NF-5)*1.5 }
[13:36:48] *** Joins: sinaowolabi__ (~SinaOwola@102.134.114.1)
[13:38:01] *** Quits: y04nn (~y04nn@193.32.127.238) (Ping timeout: 268 seconds)
[13:40:09] <emanuele6> earnestly: your dateutils command includes the first day of the next month
[13:41:32] *** Joins: jamer05 (~jamer05@user/jamer05)
[13:43:42] *** Quits: Nact (~l@2a02:a03f:c0b0:f600:3253:5994:1b4f:e854) (Ping timeout: 260 seconds)
[13:44:21] <emanuele6> it could be fixed with `| tail +2', but maybe there is a way to do it directly
[13:45:31] *** Quits: greknod2 (~grek@ppp121-45-135-79.bri-pow-que-bras31.tpg.internode.on.net) (Ping timeout: 245 seconds)
[13:46:46] *** Quits: aidalgol (~aidalgol@user/aidalgol) (Read error: Connection reset by peer)
[13:48:24] *** Joins: jdltouraine__ (~jdltourai@2a02:a03f:847b:b800:b163:93c1:699b:16ff)
[13:48:25] *** Quits: jdltouraine_ (~jdltourai@2a02:a03f:847b:b800:b163:93c1:699b:16ff) (Read error: Connection reset by peer)
[13:49:31] *** Joins: aidalgol (~aidalgol@user/aidalgol)
[13:55:05] <earnestly> emanuele6: I think that may be a bug, I'll make an issue about it anyway.  Smells off-by-one
[13:57:59] *** Quits: DrSlony (~morgan@2.67.222.40.mobile.tre.se) ()
[13:58:38] <emanuele6> i meant one extra day, not the first day of the next month
[13:58:50] <emanuele6> earnestly: mm
[14:01:14] <emanuele6> earnestly: i don't think it's a bug
[14:01:46] <emanuele6> the man page for dateseq(1) says: The values of FIRST and LAST are always inclusive and no date/times before FIRST and no date/times after LAST will be printed.
[14:02:09] <emanuele6> and one example in dateadd(1) is: 2000-03-30 +1mo +1d -> 2000-05-01
[14:03:22] <earnestly> emanuele6: Still making an issue because it's not a useful output
[14:04:02] <emanuele6> you can use 2000-03-30 +1mo -1d instead of 2000-03-30 +1mo
[14:04:16] <emanuele6> but i don't understand why you are using -f %m in dateadd
[14:04:16] *** Joins: SteveR (~SteveR@192.146.154.3)
[14:04:46] <earnestly> emanuele6: Because I used dateseq -i %m
[14:06:03] *** Joins: y04nn (~y04nn@193.32.127.238)
[14:07:16] <earnestly> Anyway, will see what they have to say.  They're usually pretty good
[14:08:39] <earnestly> emanuele6: (Their manpage is definately wrong for %m anyway)
[14:09:04] *** Quits: terrorjack (~terrorjac@static.3.200.12.49.clients.your-server.de) (Read error: Connection reset by peer)
[14:10:43] *** Joins: killown (~killown@user/killown)
[14:11:23] *** Quits: nicoty[m] (~nicoty@user/nicoty) (Quit: Reconnecting)
[14:11:30] *** Quits: stkrdknmibalz (~test@rrcs-75-87-43-226.sw.biz.rr.com) (Quit: WeeChat 3.0.1)
[14:11:48] *** Joins: nicoty[m] (~nicoty@user/nicoty)
[14:12:02] *** nicoty[m] is now known as nicoty
[14:12:03] *** Quits: moha (uid506645@id-506645.helmsley.irccloud.com) (Quit: Connection closed for inactivity)
[14:13:02] *** Quits: kill (~killown@user/killown) (Ping timeout: 252 seconds)
[14:13:26] <emanuele6> oh, `dateseq -i %m 09 1d 10' starts from 2021-08-31
[14:13:36] <emanuele6> that looks like an off-by-one bug yes
[14:14:50] <emanuele6> though i would have expected 2021-09-01 to 2021-10-01, not 2021-09-01 to 2021-09-30
[14:15:39] <earnestly> Yeah it's not helpful even if it's intended
[14:19:42] <emanuele6> $ dateadd -i %m 09 1mo
[14:19:44] <emanuele6> 2021-10-00
[14:19:49] <emanuele6> mmm
[14:21:05] *** Joins: alzgh (~alzgh@user/alzgh)
[14:21:10] <emanuele6> and dateadd -i %m 09 1mo -1d -> 2021-09-29
[14:21:16] <emanuele6> days are off by one
[14:24:06] <earnestly> Yeah, 00 shouldn't be allowed here either
[14:24:16] <earnestly> %F is %m, and %m (strftime) is 01-12
[14:26:11] *** Joins: potamides (~amnifiliu@2003:a:270f:c400:28d8:e046:7d92:3970)
[14:27:06] *** Quits: y04nn (~y04nn@193.32.127.238) (Ping timeout: 265 seconds)
[14:27:29] *** Joins: keypusher (keypusher@user/keypusher)
[14:27:55] <emanuele6> maybe this is somehow intended, dateadd(1) says: %d  The day of the month, 2 digits (range 00 to 31)
[14:29:04] *** Quits: igemnace (~ian@user/igemnace) (Remote host closed the connection)
[14:32:05] <earnestly> 19 though?
[14:32:17] *** Quits: furrymcgee (~devuan@cgn-213-196-210-161.nc.de) (Ping timeout: 252 seconds)
[14:32:38] <earnestly> Besides, it's not useful because nothing else outputs months as 00
[14:35:07] *** Quits: killown (~killown@user/killown) (Quit: Leaving)
[14:35:24] *** Joins: kill (~killown@user/killown)
[14:35:59] *** Joins: koollman (samson_t@sp1.kooll.org)
[14:36:35] *** Quits: legola (~legola@46.235.100.217) (Remote host closed the connection)
[14:37:05] *** Quits: koollman (samson_t@sp1.kooll.org) (Changing host)
[14:37:05] *** Joins: koollman (samson_t@user/koollman)
[14:41:31] *** Joins: y04nn (~y04nn@193.32.127.238)
[14:44:50] *** Quits: shad (~shad@user/shad) (Ping timeout: 260 seconds)
[14:46:08] *** Quits: unmanbearpig (~unmanbear@45.76.95.141) (Quit: unmanbearpig)
[14:47:16] *** Joins: seninha (~seninha@user/seninha)
[14:48:12] *** Quits: kurahaupo (~kurahaupo@220-245-23-126.static.tpgi.com.au) (Read error: Connection reset by peer)
[14:48:29] *** Joins: kurahaupo (~kurahaupo@220-245-23-126.static.tpgi.com.au)
[14:54:17] *** Quits: frostwork (~frostwork@user/frostwork) (Quit: Leaving)
[14:54:31] *** Quits: oldgalileo (~oldgalile@host-212-18-2-82.customer.m-online.net) (Remote host closed the connection)
[14:54:39] *** Quits: Mo (~Mo@dynamic-077-003-126-079.77.3.pool.telefonica.de) (Ping timeout: 265 seconds)
[14:54:46] *** Joins: oldgalileo (~oldgalile@host-212-18-2-82.customer.m-online.net)
[14:55:09] *** Joins: JibStyle (~user@154.21.20.45)
[14:55:18] *** Joins: xiongxin (~quassel@119.123.100.167)
[14:55:35] *** Joins: haroon (~haroon@gw.wmd.de)
[14:57:20] *** Quits: y04nn (~y04nn@193.32.127.238) (Ping timeout: 260 seconds)
[14:59:11] <haroon> Hello I'm working on a bash script, that executes a few functions in parallel and writes it's exit code into a array, so I can print the exit codes at the end of the script. However the array which should contain the exit codes is always empty. Can someone educate me on my mistake? https://pastebin.com/846Znpz0
[14:59:12] <pasteban> Paste is available without ads on https://pastebin.com/raw/846Znpz0
[15:00:19] <Soliton> !subshell
[15:00:19] <greybot> http://mywiki.wooledge.org/SubShell
[15:00:45] <Soliton> you can use wait -n to get the exit status.
[15:01:02] *** Joins: jkwnki (~jkwnki@p4ff31b54.dip0.t-ipconnect.de)
[15:01:46] *** Quits: haroon (~haroon@gw.wmd.de) (Quit: Client closed)
[15:03:41] <bodiccea> haroon, you cannot set a variable in a sub process and have it visible in parent process. A possible solution could be coproc, which links sub/parents processes with pipes.
[15:03:55] <Soliton> (they're gone)
[15:06:43] *** Quits: jkwnki (~jkwnki@p4ff31b54.dip0.t-ipconnect.de) (Read error: Connection reset by peer)
[15:08:03] *** Joins: haroon (~haroon@gw.wmd.de)
[15:08:30] <haroon> Hello I'm working on a bash script, that executes a few functions in parallel and writes it's exit code into a array, so I can print the exit codes at the end of the script. However the array which should contain the exit codes is always empty. Can someone educate me on my mistake? https://pastebin.com/846Znpz0
[15:08:30] <pasteban> Paste is available without ads on https://pastebin.com/raw/846Znpz0
[15:09:04] <Soliton> how often are you going to repeat this?
[15:09:15] *** Joins: eem (~eem@user/eem)
[15:09:41] *** Quits: jamer05 (~jamer05@user/jamer05) (Ping timeout: 252 seconds)
[15:09:56] *** Joins: terrorjack (~terrorjac@static.3.200.12.49.clients.your-server.de)
[15:09:58] <haroon> Sorry, I was disconnected and didn't know if the message was send
[15:10:05] <Soliton> !subshell
[15:10:05] <greybot> http://mywiki.wooledge.org/SubShell
[15:10:08] <Soliton> you can use wait -n to get the exit status.
[15:10:28] *** Joins: BSaboia (~bsaboia@177.37.198.122)
[15:10:30] *** Joins: legola (~legola@46.235.100.217)
[15:10:42] *** Joins: y04nn (~y04nn@193.32.127.238)
[15:11:04] <Soliton> you could also wait for the specific PIDs.
[15:11:07] <bodiccea> haroon, unsure you did read my answer: you cannot set a variable in a sub process and have it visible in parent process. A possible solution could be coproc, which links sub/parents processes with pipes.
[15:11:27] <Soliton> actually i guess you need to do that or you won't know which is which.
[15:11:45] <Soliton> ipc is overkill for this.
[15:12:38] *** Joins: jkwnki (~jkwnki@p4ff31b54.dip0.t-ipconnect.de)
[15:13:27] <haroon> thank you for the suggestions I'll look into both and see, if It works.
[15:14:04] *** Joins: p3hz (~p3hz@ip72-209-166-93.ks.ks.cox.net)
[15:15:45] <Soliton> # { sleep 1 & } 2>/dev/null; pids=($!); { sleep 1 && exit 2 & } 2>/dev/null; pids+=($!); for pid in "${pids[@]}"; do wait "$pid" 2>/dev/null; echo "$pid - $?"; done
[15:15:48] <shbot> Soliton: 51 - 0
[15:15:49] <shbot> Soliton: 52 - 2
[15:16:16] *** Quits: SteveR (~SteveR@192.146.154.3) (Ping timeout: 256 seconds)
[15:16:52] *** Quits: Bhavuk_ (~BTaneja@103.132.28.42) (Quit: Leaving)
[15:17:07] *** Joins: Bhavuk (~BTaneja@103.132.28.42)
[15:17:25] <pj> haroon: you can use wait -n for that, but I would suggest just writing the exit codes to a file instead.
[15:17:26] *** Joins: mei (~mei@user/mei)
[15:17:44] <Soliton> you have no clue which process it was with wait -n.
[15:20:12] <haroon> I tought about writing the codes to a file, but the fs maybe readonly at certain times, thats why I trying to write it to an array. bodiccea would it be possible to declare the array in the parent and fill it in the child processes?
[15:20:33] <pj> you should generally have a tmp filesystem you can always write to
[15:20:35] *** Joins: n4dir (~user@i577BC8E4.versanet.de)
[15:20:45] <pj> you can use mktemp to get a temporary filename.
[15:21:06] <Soliton> i'm confused what seems to be so difficult in just using wait which does exactly what you want.
[15:21:24] <pj> anyways, I have to go.
[15:21:37] *** Quits: arinov (~arinov@213.194.126.155) (Ping timeout: 250 seconds)
[15:21:37] <Soliton> shouldn't be difficult to extend the above example to an assoc array.
[15:22:17] <haroon> the actual processes take an unspecified ammount ot time to finish one may take 15 min the other 1h and in the meantime I get a lot of output in stdout.
[15:22:29] <Soliton> how does that matter?
[15:22:53] *** Quits: kurahaupo (~kurahaupo@220-245-23-126.static.tpgi.com.au) (Ping timeout: 252 seconds)
[15:23:03] <haroon> i don't know what an assoc array is. I will look into it.
[15:24:26] <Soliton> what is statusArray supposed to be in your paste if not an assoc array??
[15:24:28] *** Joins: shad (~shad@user/shad)
[15:25:18] <Soliton> !assoc
[15:25:18] <greybot> Associative Arrays map strings to strings (Bash 4): http://mywiki.wooledge.org/BashGuide/Arrays#Associative_Arrays
[15:25:23] *** Joins: gh34 (~textual@cpe-184-58-181-106.wi.res.rr.com)
[15:25:41] *** Joins: amahl (~amahl@dsl-jklbng12-54fbca-64.dhcp.inet.fi)
[15:25:50] *** Quits: situ (situ@nat-pool-brq-t.redhat.com) (Ping timeout: 250 seconds)
[15:26:26] <haroon> You are correct, it's supposed to be a associative array, I'm was not familiar with the abbreviation assoc.
[15:26:51] <Soliton> note that you need to declare it with declare -A.
[15:27:08] *** Joins: Administratorte (~sq@tempest.math.colostate.edu)
[15:30:02] *** Quits: p3hz (~p3hz@ip72-209-166-93.ks.ks.cox.net) (Ping timeout: 252 seconds)
[15:30:55] *** Joins: p3hz (~p3hz@198.55.124.115.adsl.inet-telecom.org)
[15:31:58] *** Joins: mknod (~mknod@user/mknod)
[15:34:38] *** Joins: kurahaupo (~kurahaupo@220-245-23-126.static.tpgi.com.au)
[15:39:30] *** Quits: alzgh (~alzgh@user/alzgh) (Ping timeout: 256 seconds)
[15:40:25] *** Joins: aurena (~amvara01@57.red-83-40-223.dynamicip.rima-tde.net)
[15:50:31] *** Joins: amvara (~amvara@57.red-83-40-223.dynamicip.rima-tde.net)
[15:55:13] *** Quits: sinaowolabi__ (~SinaOwola@102.134.114.1) (Ping timeout: 252 seconds)
[15:57:00] *** Quits: BSaboia (~bsaboia@177.37.198.122) (Quit: This computer has gone to sleep)
[15:57:27] *** Quits: jdltouraine__ (~jdltourai@2a02:a03f:847b:b800:b163:93c1:699b:16ff) (Ping timeout: 240 seconds)
[15:58:22] <amvara> Good afternoon from Barcelona :-)
[16:00:33] *** Quits: lavaball (felix@31.204.155.215) (Remote host closed the connection)
[16:01:19] *** Joins: sinaowolabi__ (~SinaOwola@102.134.114.1)
[16:04:31] *** Joins: paulgrmn (~paulgrmn@user/paulgrmn)
[16:07:48] *** Joins: INeedAHandle (~INeedAHan@39.124.72.106)
[16:07:56] *** Quits: sinaowolabi__ (~SinaOwola@102.134.114.1) (Read error: No route to host)
[16:10:06] *** Joins: killown (~killown@user/killown)
[16:10:36] *** Joins: joo (~joo@87-49-147-160-mobile.dk.customer.tdc.net)
[16:10:37] *** Quits: joo (~joo@87-49-147-160-mobile.dk.customer.tdc.net) (Changing host)
[16:10:37] *** Joins: joo (~joo@fsf/member/joo--)
[16:11:08] *** Quits: dionys (dionys@user/dionys) (Quit: dionys)
[16:12:03] *** Joins: BSaboia (~bsaboia@177.37.198.122)
[16:12:46] <wwilliam> Hello this is not working within the script: for x in 20210930_*;do (cd "$x" && for y in *.zip;do z="${y%.zip}";unzip -d "$z" "$y";done);done
[16:12:49] *** Quits: kill (~killown@user/killown) (Ping timeout: 252 seconds)
[16:12:50] <wwilliam> I get this:
[16:12:51] <wwilliam> + sleep 10
[16:12:53] <wwilliam> + for x in 'IMGSOAA_PPD_*'
[16:12:54] <wwilliam> + cd IMGSOAA_PPD_20210930
[16:12:56] <wwilliam> + for y in '*.zip'
[16:12:57] <wwilliam> + z='*'
[16:12:59] <wwilliam> + unzip -d '*' '*.zip'
[16:13:00] <wwilliam> unzip:  cannot find or open *.zip, *.zip.zip or *.zip.ZIP.
[16:13:57] *** Joins: mat001 (~mat001@c-73-223-64-126.hsd1.ca.comcast.net)
[16:14:20] *** Quits: humky (~humky@user/humky) (Quit: Leaving)
[16:14:42] *** Joins: sn1tch3r (~sn1tch3r@user/sn1tch3r)
[16:14:55] *** Quits: sn1tch3r (~sn1tch3r@user/sn1tch3r) (Remote host closed the connection)
[16:15:08] <Soliton> so check first.
[16:15:20] *** Joins: sn1tch3r (~sn1tch3r@user/sn1tch3r)
[16:15:23] <Soliton> or perhaps use nullglob.
[16:15:50] *** Quits: roadie`` (~user@2a02:8108:ec0:1427:7907:eaa6:b44b:58bb) (Ping timeout: 260 seconds)
[16:15:59] <wwilliam> I did it outside the script it worked.
[16:16:41] *** Parts: JibStyle (~user@154.21.20.45) (ERC (IRC client for Emacs 27.2))
[16:17:13] *** Joins: hqdruxn08 (~hqdruxn08@cpe-66-68-166-214.austin.res.rr.com)
[16:17:28] <Soliton> it works if there are zip files.
[16:17:44] <Soliton> # echo *.zip
[16:17:47] <shbot> Soliton: *.zip
[16:18:30] *** Joins: sinaowolabi__ (~SinaOwola@102.134.114.1)
[16:19:13] *** Joins: roadie`` (~user@2a02:8108:ec0:1427:7907:eaa6:b44b:58bb)
[16:20:05] <wwilliam> but I went to the dir and did it manually .
[16:20:56] *** Quits: hqdruxn08__ (~hqdruxn08@cpe-66-68-166-214.austin.res.rr.com) (Ping timeout: 245 seconds)
[16:21:15] <Soliton> so there were zip files now...
[16:21:32] <wwilliam> Sorry Soliton I was using:
[16:21:48] <wwilliam> + cd IMGSOAA_PPD_20210930
[16:22:24] <wwilliam> it should have been cd $(date +%Y%m%d)*
[16:22:39] <wwilliam> sorry to waste your time, you know me I am an idiot.
[16:25:37] *** Quits: BSaboia (~bsaboia@177.37.198.122) (Quit: This computer has gone to sleep)
[16:31:17] *** Joins: gordonfish- (~gordonfis@user/gordonfish)
[16:33:19] *** Quits: xiongxin (~quassel@119.123.100.167) (Ping timeout: 252 seconds)
[16:33:51] *** Quits: gordonfish (~gordonfis@user/gordonfish) (Ping timeout: 245 seconds)
[16:36:15] *** Joins: elkalamar (elkalamar@gateway/vpn/airvpn/elkalamar)
[16:36:25] *** Quits: killown (~killown@user/killown) (Read error: Connection reset by peer)
[16:36:40] *** Quits: ayustae (Thunderbir@gateway/vpn/protonvpn/ayustae) (Quit: ayustae)
[16:41:35] *** Quits: elkalamar (elkalamar@gateway/vpn/airvpn/elkalamar) (Ping timeout: 252 seconds)
[16:43:50] *** Quits: The_Blode_ (~Blode@user/the-blode/x-7164444) (Ping timeout: 250 seconds)
[16:46:33] *** Joins: The_Blode (~Blode@user/the-blode/x-7164444)
[16:54:32] *** Quits: oldgalileo (~oldgalile@host-212-18-2-82.customer.m-online.net) (Remote host closed the connection)
[16:54:52] *** Joins: oldgalileo (~oldgalile@host-212-18-2-82.customer.m-online.net)
[16:58:40] *** Quits: mknod (~mknod@user/mknod) (Quit: mknod)
[16:59:41] *** Quits: Tireos (~Tireos@91.223.118.131) (Ping timeout: 245 seconds)
[17:00:43] *** Quits: n4dir (~user@i577BC8E4.versanet.de) (Remote host closed the connection)
[17:01:27] *** Joins: Tireos (~Tireos@94.158.34.36)
[17:06:58] <wwilliam> how to create a var for any date in the format:  date +%Y%m%d
[17:08:27] *** Quits: sn1tch3r (~sn1tch3r@user/sn1tch3r) (Quit: Leaving)
[17:09:03] *** Quits: xizhendu_ (~xizhendu@240e:305:7381:6400:b6be:9004:a525:ceb5) (Remote host closed the connection)
[17:09:16] *** Quits: Tireos (~Tireos@94.158.34.36) (Ping timeout: 245 seconds)
[17:09:36] *** Joins: TheHermann (~TheHerman@gateway/tor-sasl/thehermann)
[17:09:48] *** Joins: Bit_MCP (~Bit_MCP@99-22-255-91.lightspeed.frokca.sbcglobal.net)
[17:09:48] *** Quits: tangy (~tangy@user/tangy) (Quit: Quit)
[17:11:05] *** Quits: aniruddha (uid340443@id-340443.ilkley.irccloud.com) (Quit: Connection closed for inactivity)
[17:12:38] <kurahaupo> # printf -v var '%(%Y%m%d)T' -1; echo "wwilliam: $var"
[17:12:40] <shbot> kurahaupo: wwilliam: 20210930
[17:13:44] *** Joins: xizhendu_ (~xizhendu@106.38.171.198)
[17:13:46] *** Joins: t3nj1n (~t3nj1n@pool-96-246-146-100.nycmny.fios.verizon.net)
[17:13:53] <wwilliam> Thank you kurahaupo
[17:14:16] <wwilliam> but that will work only for the current date.
[17:14:19] <gnoo> wwilliam: use regex '.*20[[:digit:]]{6}_[[:digit:]]{0,3}' with find
[17:14:33] <wwilliam> to create the var?
[17:14:37] <kurahaupo> wwilliam: Where are the dates coming from?
[17:14:52] <wwilliam> file names.
[17:15:15] <kurahaupo> wwilliam: didn't we talk about this yesterday?
[17:15:16] <gnoo> no, you want to find the file names with those dates. use it directly in find's -regex
[17:15:28] *** Quits: karakedi (~eAC53C340@user/karakedi) (Ping timeout: 250 seconds)
[17:15:31] <wwilliam> No kurahaupo this is different now
[17:15:38] *** Quits: Marbug (~Marbug@94-226-144-213.access.telenet.be) (Ping timeout: 252 seconds)
[17:15:42] <wwilliam> I need to create a var for any date
[17:15:50] <wwilliam>  in the format i  mentioned above
[17:16:04] <Soliton> you can put whatever you want in a variable.
[17:16:14] <wwilliam> Yes
[17:16:17] <wwilliam> I know Soliton
[17:16:32] <wwilliam> I just dont know for anydate how it would be.
[17:16:32] <gnoo> wwilliam: a variable stores a specific thing. you want a regex. for date, use .*20[[:digit:]]{6}
[17:16:37] <kurahaupo> for f in 20[0-2][0-9][01][0-9][0-3][0-9]*
[17:16:48] <Soliton> so "create a var for any date" makes little sense.
[17:16:52] <wwilliam> Thanks
[17:17:02] <kurahaupo> gnoo: Why regex rather than glob?
[17:17:19] <gnoo> wwilliam: use kurahaupo's one, it is more robust.
[17:17:21] <wwilliam> Soliton sometimes they dropped files from couple days before with diff dates.
[17:17:27] <kurahaupo> If they're filenames then just use a glob that will match them
[17:17:51] <wwilliam> This was from yesterday that is resolved^^^^^
[17:18:05] *** Joins: iomari891 (~iomari891@105.112.138.38)
[17:18:08] <wwilliam> thank you all
[17:18:55] *** Joins: VoidNoir0 (~VoidNoir0@72.80.203.52)
[17:19:17] <kurahaupo> OR files=( 20[0-2][0-9][01][0-9][0-3][0-9]* ) ; echo "${files[0]:0:8}"
[17:20:08] <wwilliam> Thank you kurahaupo and all will test.
[17:20:56] <FreeBDSM> is there a solution for such a problem? An app is capable of writing logs only to files. The app rotates log files periodically, so log dir gets populated with files with auto-generated names (variable part is datetime). Log files are not needed, what needed instead is that the app would write logs only to stdout. Is there a solution for that problem?
[17:25:30] <djph> FreeBDSM: rewrite your application to not log.
[17:26:19] <cryptonector> FreeBDSM: you could use LD_PREALOD or a debugger perhaps to change how the app logs
[17:26:27] <OMGOMG> ugh
[17:27:10] <gnoo> maybe a fifo file would work if the app appends the output?
[17:27:27] <Soliton> implement a virtual fs driver that converts those log files back to a single stream.
[17:29:21] <FreeBDSM> djph: not mine, it's facebook's
[17:30:09] <cryptonector> on Solaris there's a utility for redirecting the I/O of running processes; idk if there's such a thing for Linux, but there's no reason there couldn't be
[17:30:30] *** Quits: prifici (~patri@user/prifici) (Quit: Off to work or bed.)
[17:31:14] <djph> FreeBDSM: then you're kind of sunk.
[17:32:58] *** Joins: nyex (~Thunderbi@177.84.107.26)
[17:33:25] *** Quits: herjazz (~herjazz@p6758124-ipngn30801marunouchi.tokyo.ocn.ne.jp) (Quit: leaving)
[17:34:05] *** Joins: trekkie1701c (~trekkie17@user/trekkie1701c)
[17:34:41] *** Joins: skapata (~Skapata@2804:14c:87b0:a6f9:c528:3580:c9d3:3c6)
[17:34:41] *** Quits: skapata (~Skapata@2804:14c:87b0:a6f9:c528:3580:c9d3:3c6) (Changing host)
[17:34:41] *** Joins: skapata (~Skapata@user/skapata)
[17:35:07] *** Quits: jkwnki (~jkwnki@p4ff31b54.dip0.t-ipconnect.de) (Ping timeout: 265 seconds)
[17:36:24] *** Joins: aniruddha (uid340443@id-340443.ilkley.irccloud.com)
[17:39:04] *** Joins: elkalamar (elkalamar@gateway/vpn/airvpn/elkalamar)
[17:39:47] <FreeBDSM> well, okay then. thanks.
[17:39:47] *** Quits: sam4488 (~Android@181.63.139.95) (Ping timeout: 240 seconds)
[17:43:06] *** Quits: stwerp (~sjt015@sub137-102.bucknell.edu) (Remote host closed the connection)
[17:43:49] *** Joins: gr33n7007h (~gr33n7007@user/gr33n7007h)
[17:46:47] *** Quits: shad (~shad@user/shad) (Ping timeout: 250 seconds)
[17:48:41] *** Joins: lavaball (felix@31.204.155.215)
[17:49:37] *** Quits: LuKaRo (~LuKaRo@p4fc3360e.dip0.t-ipconnect.de) (Ping timeout: 252 seconds)
[17:49:48] *** Joins: greta (uid516789@id-516789.lymington.irccloud.com)
[17:49:49] *** Joins: LuKaRo_ (~LuKaRo@p4fc32be7.dip0.t-ipconnect.de)
[17:50:31] *** Quits: elkalamar (elkalamar@gateway/vpn/airvpn/elkalamar) (Ping timeout: 245 seconds)
[17:54:34] *** Quits: y04nn (~y04nn@193.32.127.238) (Ping timeout: 252 seconds)
[17:54:51] *** Joins: rtjure (~rtjure@bras-79-132-17-74.comnet.bg)
[17:54:53] *** Joins: LiftLeft (~LiftLeft@172.83.47.139)
[17:59:28] *** Joins: shad (~shad@user/shad)
[17:59:52] *** Quits: Bhavuk (~BTaneja@103.132.28.42) (Read error: Connection reset by peer)
[17:59:52] *** Quits: azidhaka (~azidhaka@user/azidhaka) (Quit: azidhaka)
[17:59:54] *** Joins: yuri6037 (~yuri6037@224.34.76.86.rev.sfr.net)
[18:01:01] *** Quits: trekkie1701c (~trekkie17@user/trekkie1701c) (Quit: :P)
[18:01:54] *** Quits: fedenix (~fedenix@gateway/tor-sasl/fedenix) (Remote host closed the connection)
[18:01:57] *** Joins: fedenix_ (~fedenix@gateway/tor-sasl/fedenix)
[18:02:48] <yuri6037> Hi I have again a problem with bash still related to C++ calling bash but different problem. Bash refuses to evaluate $(mycommand). Ex: ./brun 1 ./transbigbg bash -c "echo $(basename \$1)"
[18:03:47] <yuri6037> bash is called but $(basename) is not run and removed, instead bash just runs echo $1
[18:04:07] <yuri6037> Why is bash removing parts of commands when called from C++?
[18:04:58] <Riviera> i don't understand your question, but i would suggest you assume that it does not do what you think it does.
[18:05:01] <Soliton> !"
[18:05:01] <greybot> "Double quote" every literal that contains spaces/metacharacters and _every_ expansion: "$var", "$(command "$var")", "${array[@]}", "a & b". Use 'single quotes' for code or literal dollar signs: 'Costs $5 US', ssh host 'echo "$HOSTNAME"'. See http://mywiki.wooledge.org/Quotes , http://mywiki.wooledge.org/Arguments and http://wiki.bash-hackers.org/syntax/words .
[18:05:36] <Soliton> who knows what you're actually doing but if those double quotes are real then the caller evaluates that.
[18:06:33] <yuri6037> The thing is bash is breaking the command line before running the C++ program, why is that?
[18:06:50] <yuri6037> the removal part happens before the C++ program has even a chance to receive the command line
[18:07:13] <Soliton> what exactly are you calling from what?
[18:07:15] <yuri6037> why is bash removing parts of commands before calling C++ programs?
[18:07:23] <Soliton> you're just saying nonsense so far.
[18:07:46] <yuri6037> Let me show you this is the command I run: ./brun 1 ./transbigbg bash -c "echo $(basename \$1)"
[18:07:58] <Soliton> so that is a bad command to begin with.
[18:08:03] <Soliton> what is the goal?
[18:08:35] <yuri6037> Normally brun should receive "echo $(basename \$1)" however it does not. It instead receives a broken command echo \$1
[18:08:39] <Soliton> perhaps you mean: ./brun 1 ./transbigbg bash -c 'basename "$1"' bash ...
[18:09:02] <Soliton> of course it does not. that is not how double quotes work.
[18:09:19] <yuri6037> the $() part is essential otherwise it's impossible to use inside of another command
[18:09:35] <Soliton> it's useless in your example but sure whatever.
[18:09:41] <yuri6037> echo is only here for demonstration the idea is echo must be replacable by file for example
[18:10:04] <Soliton> perhaps you mean: ./brun 1 ./transbigbg bash -c 'file "$(basename "$1")"' bash ...
[18:10:51] <Soliton> is your c++ filling in the actual argument?
[18:10:53] <yuri6037> WTF now it works!
[18:11:16] <yuri6037> I don't understand your syntax but it does exactly what its supposed to do
[18:11:40] <Soliton> !quotes
[18:11:40] <greybot> https://mywiki.wooledge.org/Quotes
[18:11:45] <yuri6037> so in bash now you randomly need to apply single quotes and randomly double quotes
[18:11:56] <Soliton> you're really confused.
[18:12:20] <Soliton> if you write bash code in bash... *drum roll* bash interpretes that code.
[18:12:40] <Soliton> if you don't want it to interprete it then you have to quote it accordingly.
[18:12:42] <yuri6037> i was just trying to pass a $(command) as is to the C++ program not interpret it
[18:13:07] <Soliton> why would code magically be passed as is?
[18:13:11] <yuri6037> so that's what bash was doing it was pre-computing the $(basename ) before letting the C++ prog to get it
[18:13:39] <yuri6037> I wanted bash to just give everything in double quotes as is
[18:13:43] <Soliton> it's like you write c++ code and wonder why the compiler processes it.
[18:13:56] <Soliton> that is not how bash works.
[18:14:09] <yuri6037> I used double quotes which I though were supposed to prevent bash from executing any code
[18:14:28] <yuri6037> Double quotes usually means string not code
[18:14:29] <Soliton> that's what single quotes are for.
[18:14:34] *** Joins: ChmEarl (~chmearl@user/chmearl)
[18:14:46] <yuri6037> Bash apparently interprets it as code
[18:15:14] <Soliton> everything is a string in bash. quotes are used to separate words.
[18:15:39] <Soliton> so you can say "foo bar" is one word instead of two for example.
[18:15:43] *** Joins: YaoNai (~YaoNai@user/yaonai)
[18:15:47] *** Joins: ayustae (Thunderbir@gateway/vpn/protonvpn/ayustae)
[18:15:59] <Soliton> you can also write foo" "bar or whatever and it's exactly the same.
[18:17:01] <yuri6037> You don't understand what I mean: string for me is like in C a const char * or just a peace of memory which contains characters NOT code.
[18:17:33] <Soliton> yes, i understand that you have no idea how bash works and are guessing based on other languages.
[18:17:37] <tar_xvf> i don't think there's any special differentiation of types like you say
[18:17:55] <yuri6037> Bash apparently parses what is in double quotes as possible code which is not the usual definition
[18:17:56] <tar_xvf> every line is a program which gets passed arguments as strings (char *)
[18:18:32] <tar_xvf> I thought a grave accent ` was used to replace inline code with the output?
[18:18:40] <yuri6037> You need to use single quotes to tell it that you are passing a raw string
[18:19:11] <Soliton> a double quoted string is not a raw string in c++ either, btw.
[18:19:32] <Soliton> backslash escapes are interpreted.
[18:20:37] <tar_xvf> is there any significance to quote characters in bash? i thought the only purpose was to have an arg with spaces instead of the shell splitting that into two args
[18:21:01] <Soliton> and to disable the meaning of shell meta characters.
[18:21:18] <yuri6037> What I meant is if I do "void my_func() {}" in C/C++ it's not gonna run it
[18:21:20] <Soliton> so you can have "foo;bar" for example
[18:21:22] <emanuele6> bash is just running the code as you wrote it, "string" expands all the expands all the expansions in string before passing it it to the command
[18:21:51] <tar_xvf> ah yes, thanks Soliton
[18:22:05] *** Joins: node1 (~node1@user/node1)
[18:22:31] *** Quits: INeedAHandle (~INeedAHan@39.124.72.106) (Quit: My MacBook Air has gone to sleep. ZZZzzz…)
[18:23:07] <tar_xvf> yuri6037: I think it would be best for you to experiment in a bash shell a bit, to get a better idea of what's going on with strings in bash
[18:23:32] *** Joins: INeedAHandle (~INeedAHan@39.124.72.106)
[18:23:44] <tar_xvf> like, if i write `"echo" "hello"` the first argument in the line, which is "echo" is interpreted, and the enxt is "hello"
[18:24:02] <tar_xvf> but if i type `"echo hello"`, then $0 is "echo hello" and there is no function for that
[18:24:16] *** Quits: shad (~shad@user/shad) (Ping timeout: 252 seconds)
[18:24:32] <emanuele6> # "e"'c'\ho hello
[18:24:34] <shbot> emanuele6: hello
[18:25:57] *** Quits: haroon (~haroon@gw.wmd.de) (Quit: Client closed)
[18:27:49] *** Joins: shad (~shad@user/shad)
[18:28:14] *** Quits: p3hz (~p3hz@198.55.124.115.adsl.inet-telecom.org) (Ping timeout: 252 seconds)
[18:28:42] *** Joins: Liblx (~Alex@2a02:810c:280:59c:3980:376:af62:ed5d)
[18:29:51] *** Quits: node1 (~node1@user/node1) (Quit: Leaving)
[18:30:13] *** Joins: p3hz (~p3hz@ip72-209-166-93.ks.ks.cox.net)
[18:30:48] *** Joins: humky (~humky@user/humky)
[18:32:45] *** Joins: trekkie1701c (~trekkie17@user/trekkie1701c)
[18:32:48] *** Joins: acegallagher (~Ace@71-218-173-138.hlrn.qwest.net)
[18:32:56] *** Quits: gordonfish- (~gordonfis@user/gordonfish) ()
[18:38:27] *** Joins: xiongxin (~quassel@113.116.35.63)
[18:39:38] *** Joins: richardm75_ (~richardm7@2600:8801:c507:2900:2418:a102:f77b:9bf7)
[18:41:20] *** Joins: gordonfish (~gordonfis@user/gordonfish)
[18:42:32] *** Joins: han-solo (~hanish@user/han-solo)
[18:42:34] *** Joins: Marbug (~Marbug@94-226-144-213.access.telenet.be)
[18:43:36] *** Quits: kj (~kj@kj.aerisnetwork.net) (Quit: My MacBook has gone to sleep. ZZZzzz…)
[18:44:22] *** Quits: skapata (~Skapata@user/skapata) (Remote host closed the connection)
[18:48:19] *** Quits: lmat (~Lmat@c-68-58-60-231.hsd1.in.comcast.net) (Quit: leaving)
[18:48:43] *** Joins: skapata (~Skapata@2804:14c:87b0:a6f9:c528:3580:c9d3:3c6)
[18:48:44] *** Quits: skapata (~Skapata@2804:14c:87b0:a6f9:c528:3580:c9d3:3c6) (Changing host)
[18:48:44] *** Joins: skapata (~Skapata@user/skapata)
[18:50:01] *** Joins: meator (~meator@user/meator)
[18:54:33] *** Quits: oldgalileo (~oldgalile@host-212-18-2-82.customer.m-online.net) (Remote host closed the connection)
[18:55:01] *** Joins: oldgalileo (~oldgalile@host-212-18-2-82.customer.m-online.net)
[18:55:39] *** Joins: tirnanog (~tirnanog@user/tirnanog)
[18:59:28] *** Joins: fdan (~fdan@192.146.154.3)
[19:01:26] <fdan> hi there, What is the problem of using Symbolic mode in setting file permission?
[19:02:14] <Riviera> Perhaps ask the one claiming there's a problem?
[19:02:22] *** Quits: daniel-k (~daniel-k@fsf/emeritus/daniel-k) (Quit: bye)
[19:02:38] *** Joins: l4yer (~15F21@159.48.55.9)
[19:02:59] *** Joins: daniel-k (~daniel-k@fsf/emeritus/daniel-k)
[19:08:35] <han-solo> One, it's readable. People tend to not like readability :p # kidding
[19:09:22] *** Quits: shad (~shad@user/shad) (Ping timeout: 265 seconds)
[19:10:41] *** Quits: trekkie1701c (~trekkie17@user/trekkie1701c) (Quit: :P)
[19:11:04] *** Quits: zaz\ (~zaz@poneybl.eu) (Quit: bye)
[19:11:23] *** Joins: kj (~kj@beta.aerisnetwork.net)
[19:11:32] *** Joins: zaz\ (~zaz@poneybl.eu)
[19:12:04] *** Quits: zaz\ (~zaz@poneybl.eu) (Client Quit)
[19:12:32] *** Joins: y04nn (~y04nn@193.32.127.238)
[19:13:12] *** Joins: zaz\ (~zaz@poneybl.eu)
[19:15:29] *** Joins: shad (~shad@user/shad)
[19:17:52] *** Joins: mago (~mago@87.125.51.92)
[19:20:06] *** Quits: legola (~legola@46.235.100.217) (Remote host closed the connection)
[19:20:29] *** Quits: shad (~shad@user/shad) (Ping timeout: 265 seconds)
[19:21:00] *** Joins: shad (~shad@user/shad)
[19:22:30] *** Quits: shbot (~shbot@37.139.2.101) (Read error: Connection reset by peer)
[19:22:36] *** Joins: shbot7 (~shbot@37.139.2.101)
[19:22:45] *** Quits: xiongxin (~quassel@113.116.35.63) (Quit: https://quassel-irc.org - Chat comfortably. Anywhere.)
[19:23:07] <fdan> :)
[19:25:38] <earnestly> There isn't, it's also POSIX
[19:27:53] *** Quits: Liblx (~Alex@2a02:810c:280:59c:3980:376:af62:ed5d) (Quit: WeeChat 3.2)
[19:29:13] <fdan> i see
[19:30:31] *** Joins: drd (~drd@93-42-69-115.ip85.fastwebnet.it)
[19:30:42] *** Joins: elastic_1 (~elastic_d@2a01:118f:822:9c00:f583:aa51:9ad4:d4fb)
[19:30:45] *** Quits: elastic_dog (~elastic_d@2a01:118f:822:9c00:f583:aa51:9ad4:d4fb) (Read error: Connection reset by peer)
[19:32:11] *** Quits: shad (~shad@user/shad) (Ping timeout: 245 seconds)
[19:32:44] <earnestly> fdan: While I tend to like octal notation it does have some problems with GNU chmod as using 0755 won't remove setuid/gid.  So you need an additional 0 or use =, e.g. 00755 or =755
[19:33:24] *** Joins: arinov (~arinov@188.72.127.3)
[19:34:05] <fdan> chmod u-s file, this will be removing and chmod 0755 file will not remove is it?
[19:34:50] *** Joins: elastic_dog (~elastic_d@2a01:118f:822:9c00:f583:aa51:9ad4:d4fb)
[19:35:31] *** Quits: elastic_1 (~elastic_d@2a01:118f:822:9c00:f583:aa51:9ad4:d4fb) (Ping timeout: 245 seconds)
[19:37:08] *** Quits: dob1 (~dob1@user/dob1) (Quit: quit)
[19:37:30] *** Joins: dob1 (~dob1@user/dob1)
[19:39:17] *** Joins: Xaldafax (~xaldafax@cpe-198-72-160-101.socal.res.rr.com)
[19:39:56] <earnestly> GNU chmod won't remove it
[19:40:21] *** Joins: frostwork (~frostwork@user/frostwork)
[19:40:24] <fdan> earnestly when you say GNU chmod? what does it mean?
[19:40:52] <earnestly> fdan: The implementation of chmod that is made by GNU, part of their coreutils project
[19:42:02] *** Quits: TomyWork (~TomyLobo@p200300e80f06af0011da0bc281ca8f63.dip0.t-ipconnect.de) (Remote host closed the connection)
[19:42:24] *** Quits: p3hz (~p3hz@ip72-209-166-93.ks.ks.cox.net) (Remote host closed the connection)
[19:45:14] *** Quits: bn_work (uid268505@id-268505.uxbridge.irccloud.com) (Quit: Connection closed for inactivity)
[19:45:44] *** Joins: ar1nov (~arinov@188.72.127.3)
[19:46:13] *** Quits: hqdruxn08 (~hqdruxn08@cpe-66-68-166-214.austin.res.rr.com) (Ping timeout: 252 seconds)
[19:46:47] *** Joins: arin0v (~arinov@188.72.127.3)
[19:48:27] *** Quits: arinov (~arinov@188.72.127.3) (Ping timeout: 240 seconds)
[19:49:45] *** Joins: ar1n0v (~arinov@188.72.127.3)
[19:50:29] *** Quits: ar1nov (~arinov@188.72.127.3) (Ping timeout: 264 seconds)
[19:52:01] *** Quits: arin0v (~arinov@188.72.127.3) (Ping timeout: 250 seconds)
[19:52:17] *** Quits: han-solo (~hanish@user/han-solo) (Ping timeout: 264 seconds)
[19:55:34] *** Quits: t3nj1n (~t3nj1n@pool-96-246-146-100.nycmny.fios.verizon.net) (Remote host closed the connection)
[19:55:48] *** Joins: karstensrage (~karstensr@user/karstensrage)
[19:55:48] *** Quits: troyt (~troyt@2601:681:4100:d591:44dd:acff:fe85:9c8e) (Ping timeout: 250 seconds)
[19:55:55] <karstensrage> eval "echo Elapsed time: $(date -ud "@$elapsed" +'$((%s/60)) minutes
[19:56:07] <karstensrage> is the $((  something bash ?
[19:56:53] <karstensrage> or is that something date related?
[19:57:11] *** Joins: t3nj1n (~t3nj1n@pool-96-246-146-100.nycmny.fios.verizon.net)
[19:57:17] *** Quits: mago (~mago@87.125.51.92) (Quit: Client closed)
[19:57:35] <llua> its an expansion that bash performs
[19:58:50] *** Quits: ar1n0v (~arinov@188.72.127.3) (Ping timeout: 250 seconds)
[20:01:04] *** Joins: ar1n0v (~arinov@31.142.82.177)
[20:01:12] <karstensrage> why the double ((
[20:01:58] <karstensrage> or is this one of those "do not ask why"
[20:02:09] <koala_man> $( ) was taken
[20:02:14] <llua> its part of the type of expansion
[20:02:50] *** Quits: SpiderPig (~matt@047-132-233-190.res.spectrum.com) (Ping timeout: 252 seconds)
[20:03:39] *** Joins: han-solo (~hanish@178.248.115.54)
[20:03:44] *** Joins: earendel (uid498179@user/earendel)
[20:03:53] *** Quits: han-solo (~hanish@178.248.115.54) (Client Quit)
[20:04:48] *** Joins: han-solo (~hanish@user/han-solo)
[20:05:01] *** Joins: SpiderPig (~matt@047-132-233-190.res.spectrum.com)
[20:07:10] *** Joins: sandb0y (~pirate@user/sandb0y)
[20:08:50] *** Quits: greta (uid516789@id-516789.lymington.irccloud.com) (Quit: Connection closed for inactivity)
[20:10:20] <Soliton> weird piece of code.
[20:10:58] <Soliton> what's the point of date -d if the format is a fixed string.
[20:11:50] <Soliton> and of course eval on top.
[20:11:50] <karstensrage> -d sets the time
[20:11:59] <karstensrage> instead of "now"
[20:12:21] <Soliton> # date -d @1 +hi
[20:12:23] <shbot7> Soliton: hi
[20:12:56] <Soliton> i guess it checks elapsed contains a number.
[20:13:00] *** Quits: seninha (~seninha@user/seninha) (Quit: Leaving)
[20:13:07] *** Joins: mago (~mago@87.125.51.92)
[20:15:30] *** Joins: zro (~zro@user/zro)
[20:17:16] *** Quits: p3rL (~uid0@user/p3rl) (Quit: Ping timeout: 180 seconds)
[20:17:30] *** Joins: p3rL (~uid0@user/p3rl)
[20:18:18] *** Quits: humky (~humky@user/humky) (Remote host closed the connection)
[20:18:37] *** Joins: humky (~humky@user/humky)
[20:18:53] *** Quits: UnnamedBeer (~UnnamedBe@117.red-83-46-8.dynamicip.rima-tde.net) (Ping timeout: 250 seconds)
[20:20:28] *** Joins: trekkie1701c (~trekkie17@user/trekkie1701c)
[20:20:30] *** Joins: flous_ (~undervolt@2a02:a213:2901:5c00:3ca2:52c1:4139:683f)
[20:22:13] *** Joins: darkbit (~db@152.32.99.67)
[20:26:35] *** Quits: irrgit (~irrgit@192.241.175.183) (Remote host closed the connection)
[20:26:46] *** Quits: mago (~mago@87.125.51.92) (Quit: Client closed)
[20:27:24] *** Joins: hqdruxn08 (~hqdruxn08@cpe-66-68-166-214.austin.res.rr.com)
[20:27:37] <earnestly> It's too weird to consider without context
[20:28:11] <earnestly> The quotes aren't even balanced
[20:29:22] *** Quits: zaz\ (~zaz@poneybl.eu) (Quit: bye)
[20:29:47] *** Quits: roadie`` (~user@2a02:8108:ec0:1427:7907:eaa6:b44b:58bb) (Ping timeout: 240 seconds)
[20:30:18] *** Joins: zaz\ (~zaz@poneybl.eu)
[20:31:53] <Soliton> actually the format is in single quotes so i guess the idea is to inject the epoch but then what is in elapsed??
[20:31:57] <tirnanog> a clumsy stab at something along the lines of `start=$EPOCHSECONDS; ...; mins_elapsed=$(( (EPOCHSECONDS - start) / 60 ))` perhaps.
[20:32:12] <tirnanog> hard to say, though.
[20:32:48] <Soliton> is the expectation that -u will change the value in elapsed somehow?
[20:35:30] *** Joins: karakedi (~eAC53C340@user/karakedi)
[20:36:35] <tirnanog> it was supposed to have been presented as: eval "echo Elapsed time: $(date -ud "@$elapsed" +'$((%s/3600/24)) days %H hr %M min %S sec')"
[20:37:49] *** Joins: jinsun__ (~quassel@user/jinsun)
[20:38:01] *** Joins: irrgit (~irrgit@192.241.175.183)
[20:38:06] *** Joins: mat001_ (~mat001@c-73-223-64-126.hsd1.ca.comcast.net)
[20:38:11] *** Joins: Gestotterd (~Stotteren@pool-108-20-79-41.bstnma.fios.verizon.net)
[20:38:14] <Soliton> and elapsed is not an epoch but just the elapsed number of seconds? i suppose that makes a bit more sense.
[20:38:17] *** Joins: lsrtl__ (~lsrtl@user/lsrtl)
[20:38:18] *** Joins: roadie`` (~user@2a02:8108:ec0:1427:7907:eaa6:b44b:58bb)
[20:38:26] *** Joins: N0ZYC_ (~N0ZYC@173-16-166-245.client.mchsi.com)
[20:38:27] *** Joins: unixman_home__ (~unixman2@175-238-4-64.mtawireless.com)
[20:38:27] *** Joins: bodiccea_ (~bodiccea@user/bodiccea)
[20:38:32] *** Joins: tobybl (~tobybl@31.111.35.255)
[20:38:35] *** Joins: sublim21 (~sublim20@pool-108-29-101-104.nycmny.fios.verizon.net)
[20:39:00] *** Joins: waxfire6 (~waxfire@65.119.2.240)
[20:39:11] *** Joins: egrain (felix@31.204.155.215)
[20:39:11] *** Joins: standardrat_ (~standardr@196.30.99.2)
[20:39:15] <Soliton> still gratuitous eval.
[20:39:41] *** Joins: Dotz0cat_ (~Dotz0cat@h27.174.40.162.dynamic.ip.windstream.net)
[20:39:52] *** Joins: daniel-k4 (~daniel-k@fsf/emeritus/daniel-k)
[20:39:58] *** Joins: Murray7501 (~Murray@89.109-247-180.customer.lyse.net)
[20:40:03] *** Joins: themchn (~themachin@user/themachine)
[20:40:05] *** Joins: robobo9 (~robobo@c-e52c524e.015-74-6762675.bbcust.telenor.se)
[20:40:05] *** Joins: lachesis_ (~lachesis@user/lachesis)
[20:40:05] *** Joins: SaadKnight (~NIXKnight@198.98.57.76)
[20:40:08] *** Joins: timj1 (~timj@user/timj)
[20:40:09] *** Joins: td00_ (~td001@172.245.134.58)
[20:40:09] *** Joins: Sayona_ (~Sayona@user/sayona)
[20:40:10] *** Joins: mrkajetanp_ (~mrkajetan@2a01:4b00:ea36:6c00:7994:941c:3f5d:2b88)
[20:40:11] *** Joins: setesat7 (~setesat@94.4.156.220)
[20:40:23] *** Joins: zeamp- (ze@korea.wwwnet.org)
[20:40:25] *** Joins: rigid- (~rigid@user/rigid)
[20:40:25] *** Joins: vlm_ (~vlm@user/vlm)
[20:40:56] *** Joins: dodo__ (~dodo@user/dodo)
[20:40:57] *** Joins: et_ (~et@user/et)
[20:41:01] *** Joins: magyar_ (~magyar@user/magyar)
[20:41:17] *** Joins: vishal_ (~vishal@fedora/vishal)
[20:41:38] *** Joins: chodonne_ (~chodonne@ec2-3-18-56-136.us-east-2.compute.amazonaws.com)
[20:41:44] *** Joins: dix_ (~super@user/dix)
[20:42:05] *** Joins: e2- (e2@sponsored.by.bnc4you.xyz)
[20:42:20] *** Joins: ccl_ (ccl@shell.xshellz.com)
[20:42:20] *** Joins: duffydack (~mongy@user/mongy)
[20:42:22] *** Joins: LuckyRaw1 (~sergiy@203.129.63.205)
[20:42:26] *** Joins: downtrip_ (~downtrip@188.166.151.198)
[20:42:28] *** Joins: erri_ (~meow@ec2-18-218-146-67.us-east-2.compute.amazonaws.com)
[20:42:32] *** Joins: dkeohane2 (~dkeohane@ec2-18-189-29-140.us-east-2.compute.amazonaws.com)
[20:42:36] *** Joins: arinov (~arinov@31.142.82.177)
[20:42:38] *** Joins: JustLand1dOnMars (question@user/question)
[20:42:46] *** Joins: jonakeys_ (jonathan@gateway/vpn/airvpn/jonakeys)
[20:42:49] *** Joins: mooz_ (~none@23.254.112.158)
[20:42:50] *** Joins: invra_ (~invra@mail.aletheianature.es)
[20:42:50] *** Joins: axisys_ (~axisys@ec2-34-225-151-46.compute-1.amazonaws.com)
[20:42:55] *** Joins: rundown (~eb0t@90.199.243.11)
[20:42:56] *** Joins: brelod_ (~me@90.244.150.142)
[20:43:00] *** Joins: hejux_0 (~hejux@104.224.190.144.16clouds.com)
[20:43:36] *** Joins: Hackerpcs_1 (~user@user/hackerpcs)
[20:46:53] *** Joins: Inline (~Inline@2a02:908:1252:7a80:1feb:c0cd:e428:d19f)
[20:47:04] *** Joins: nickodd0 (~nickodd@user/nickodd)
[20:47:36] *** Quits: sandb0y (~pirate@user/sandb0y) (*.net *.split)
[20:47:36] *** Quits: earendel (uid498179@user/earendel) (*.net *.split)
[20:47:36] *** Quits: ar1n0v (~arinov@31.142.82.177) (*.net *.split)
[20:47:36] *** Quits: elastic_dog (~elastic_d@2a01:118f:822:9c00:f583:aa51:9ad4:d4fb) (*.net *.split)
[20:47:36] *** Quits: daniel-k (~daniel-k@fsf/emeritus/daniel-k) (*.net *.split)
[20:47:36] *** Quits: l4yer (~15F21@159.48.55.9) (*.net *.split)
[20:47:36] *** Quits: tirnanog (~tirnanog@user/tirnanog) (*.net *.split)
[20:47:36] *** Quits: ChmEarl (~chmearl@user/chmearl) (*.net *.split)
[20:47:36] *** Quits: lavaball (felix@31.204.155.215) (*.net *.split)
[20:47:36] *** Quits: aniruddha (uid340443@id-340443.ilkley.irccloud.com) (*.net *.split)
[20:47:36] *** Quits: VoidNoir0 (~VoidNoir0@72.80.203.52) (*.net *.split)
[20:47:36] *** Quits: mat001 (~mat001@c-73-223-64-126.hsd1.ca.comcast.net) (*.net *.split)
[20:47:36] *** Quits: kurahaupo (~kurahaupo@220-245-23-126.static.tpgi.com.au) (*.net *.split)
[20:47:36] *** Quits: hejux (~hejux@104.224.190.144.16clouds.com) (*.net *.split)
[20:47:36] *** Quits: tobybl_ (~tobybl@31.111.35.255) (*.net *.split)
[20:47:36] *** Quits: xx (~xx@user/xx) (*.net *.split)
[20:47:36] *** Quits: pa__ (~smuxi@86-95-132-61.fixed.kpn.net) (*.net *.split)
[20:47:36] *** Quits: ConstantDesc (~textual@cpc158823-hari22-2-0-cust72.20-2.cable.virginm.net) (*.net *.split)
[20:47:36] *** Quits: standardrat (~standardr@196.30.99.2) (*.net *.split)
[20:47:36] *** Quits: randm (~randm@user/randm) (*.net *.split)
[20:47:36] *** Quits: Gooberpatrol66 (~Gooberpat@user/gooberpatrol66) (*.net *.split)
[20:47:36] *** Quits: brelod (~me@90.244.150.142) (*.net *.split)
[20:47:36] *** Quits: gnoo (gnoo@user/gnoo) (*.net *.split)
[20:47:36] *** Quits: tex (~super@user/dix) (*.net *.split)
[20:47:36] *** Quits: timj (~timj@user/timj) (*.net *.split)
[20:47:36] *** Quits: dkeohane1 (~dkeohane@ec2-18-189-29-140.us-east-2.compute.amazonaws.com) (*.net *.split)
[20:47:36] *** Quits: vishal (~vishal@fedora/vishal) (*.net *.split)
[20:47:36] *** Quits: Stotteren (~Stotteren@pool-108-20-79-41.bstnma.fios.verizon.net) (*.net *.split)
[20:47:36] *** Quits: ElPresidente (~ElPreside@2600:1700:3d10:4870:9de6:7cb1:acca:d016) (*.net *.split)
[20:47:36] *** Quits: et (~et@user/et) (*.net *.split)
[20:47:36] *** Quits: anton (anton@tloks.com) (*.net *.split)
[20:47:36] *** Quits: jonakeys (jonathan@gateway/vpn/airvpn/jonakeys) (*.net *.split)
[20:47:36] *** Quits: Dotz0cat (~Dotz0cat@h27.174.40.162.dynamic.ip.windstream.net) (*.net *.split)
[20:47:36] *** Quits: peterrooney (~peter@2604:3d08:1583:7400:dabb:c1ff:fe15:d704) (*.net *.split)
[20:47:36] *** Quits: Pall (~Pall@cpc139184-sprt3-2-0-cust125.17-2.cable.virginm.net) (*.net *.split)
[20:47:36] *** Quits: vlm (~vlm@user/vlm) (*.net *.split)
[20:47:36] *** Quits: aaro (~aaro@user/aaro) (*.net *.split)
[20:47:36] *** Quits: rigid (~rigid@user/rigid) (*.net *.split)
[20:47:36] *** Quits: invra (~invra@mail.aletheianature.es) (*.net *.split)
[20:47:36] *** Quits: somlis (~somlis@user/somlis) (*.net *.split)
[20:47:36] *** Quits: sublim20 (~sublim20@user/sublim20) (*.net *.split)
[20:47:36] *** Quits: dodo (~dodo@user/dodo) (*.net *.split)
[20:47:36] *** Quits: Dev0n (~Dev0n@user/dev0n) (*.net *.split)
[20:47:36] *** Quits: magyar (~magyar@user/magyar) (*.net *.split)
[20:47:36] *** Quits: downtrip (~downtrip@188.166.151.198) (*.net *.split)
[20:47:36] *** Quits: mtk (~mtk@2601:185:200:72:44aa:53fe:886b:bee9) (*.net *.split)
[20:47:36] *** Quits: robobo (~robobo@c-e52c524e.015-74-6762675.bbcust.telenor.se) (*.net *.split)
[20:47:36] *** Quits: Night-Shade (~Tim@ip5b403d56.dynamic.kabel-deutschland.de) (*.net *.split)
[20:47:36] *** Quits: reset (~reset@user/reset) (*.net *.split)
[20:47:36] *** Quits: axisys (~axisys@ec2-34-225-151-46.compute-1.amazonaws.com) (*.net *.split)
[20:47:36] *** Quits: LuckyRawApe (~sergiy@203.129.63.205) (*.net *.split)
[20:47:36] *** Quits: MenschZwoNull (~MenschZwo@p200300c85711050069caeca619944502.dip0.t-ipconnect.de) (*.net *.split)
[20:47:36] *** Quits: lachesis (~lachesis@user/lachesis) (*.net *.split)
[20:47:36] *** Quits: unixman_home_ (~unixman2@175-238-4-64.mtawireless.com) (*.net *.split)
[20:47:37] *** Quits: pj (~pj@ghettoforge/pj) (*.net *.split)
[20:47:37] *** Quits: lsrtl_ (~lsrtl@user/lsrtl) (*.net *.split)
[20:47:37] *** Quits: friedrich (~friedrich@aextron.de) (*.net *.split)
[20:47:37] *** Quits: edk (edk@libera/staff/edk) (*.net *.split)
[20:47:37] *** Quits: mongy (~mongy@user/mongy) (*.net *.split)
[20:47:37] *** Quits: defjam (~eb0t@90.199.243.11) (*.net *.split)
[20:47:37] *** Quits: skered (~dereks@user/skered) (*.net *.split)
[20:47:37] *** Quits: CoreISP (~LvH@simplemachines/serverteam/CoreISP) (*.net *.split)
[20:47:37] *** Quits: JanC (~janc@user/janc) (*.net *.split)
[20:47:37] *** Quits: bodiccea (~bodiccea@user/bodiccea) (*.net *.split)
[20:47:37] *** Quits: Oddly (~sacr@mailserver.rshs.nl) (*.net *.split)
[20:47:37] *** Quits: chodonne (~chodonne@ec2-3-18-56-136.us-east-2.compute.amazonaws.com) (*.net *.split)
[20:47:37] *** Quits: Furai (~Furai@cookiehoster.furai.pl) (*.net *.split)
[20:47:37] *** Quits: setesat (~setesat@94.4.156.220) (*.net *.split)
[20:47:37] *** Quits: mooz (~none@23.254.112.158) (*.net *.split)
[20:47:37] *** Quits: kilobyte_ch (~kbch@2a02:168:d80b:50:11:32ff:fe2d:64f5) (*.net *.split)
[20:47:37] *** Quits: mrkajetanp (~mrkajetan@88.98.245.28) (*.net *.split)
[20:47:37] *** Quits: Starfoxxes (~Starfoxxe@2a02:8070:5390:d00:12bf:48ff:feb8:38c8) (*.net *.split)
[20:47:37] *** Quits: s1b1 (~s1b1@user/s1b1) (*.net *.split)
[20:47:37] *** Quits: waxfire (~waxfire@65.119.2.240) (*.net *.split)
[20:47:37] *** Quits: themachine (~themachin@user/themachine) (*.net *.split)
[20:47:37] *** Quits: td001 (~td001@172.245.134.58) (*.net *.split)
[20:47:37] *** Quits: zeamp (ze@korea.wwwnet.org) (*.net *.split)
[20:47:37] *** Quits: N0ZYC (~N0ZYC@173-16-166-245.client.mchsi.com) (*.net *.split)
[20:47:37] *** Quits: son0p (~ff@181.136.122.143) (*.net *.split)
[20:47:37] *** Quits: Sayona (~Sayona@user/sayona) (*.net *.split)
[20:47:37] *** Quits: Rue (~rue@2001-b011-1000-18fe-c1c5-8c34-a15c-8faf.dynamic-ip6.hinet.net) (*.net *.split)
[20:47:37] *** Quits: jinsun (~quassel@user/jinsun) (*.net *.split)
[20:47:37] *** Quits: erri (~meow@ec2-18-218-146-67.us-east-2.compute.amazonaws.com) (*.net *.split)
[20:47:37] *** Quits: nickodd (~nickodd@user/nickodd) (*.net *.split)
[20:47:37] *** Quits: NIXKnight (~NIXKnight@198.98.57.76) (*.net *.split)
[20:47:37] *** Quits: Hackerpcs (~user@user/hackerpcs) (*.net *.split)
[20:47:37] *** Quits: ccl (ccl@shell.xshellz.com) (*.net *.split)
[20:47:37] *** Quits: JustLandedOnMars (question@user/question) (*.net *.split)
[20:47:37] *** Quits: elibrokeit (eschwartz@archlinux/bugwrangler/eschwartz) (*.net *.split)
[20:47:37] *** Quits: e2 (e2@sponsored.by.bnc4you.xyz) (*.net *.split)
[20:47:37] *** Dotz0cat_ is now known as Dotz0cat
[20:47:37] *** lachesis_ is now known as lachesis
[20:47:37] *** waxfire6 is now known as waxfire
[20:47:37] *** zeamp- is now known as zeamp
[20:47:37] *** daniel-k4 is now known as daniel-k
[20:47:37] *** et_ is now known as et
[20:47:37] *** vlm_ is now known as vlm
[20:47:37] *** Sayona_ is now known as Sayona
[20:47:44] *** vishal_ is now known as vishal
[20:47:44] *** robobo9 is now known as robobo
[20:47:44] *** setesat7 is now known as setesat
[20:47:44] *** td00_ is now known as td001
[20:47:50] *** Joins: pa__ (~smuxi@86-95-132-61.fixed.kpn.net)
[20:47:57] *** dodo__ is now known as dodo
[20:48:00] *** Joins: Dev0n (~Dev0n@user/dev0n)
[20:48:06] *** Quits: mozgalom (~mozgalom@IPnet-gw.157.157.97.111.simnet.is) (Quit: SO LONG SUCKERS!)
[20:49:54] *** Joins: JanC (~janc@user/janc)
[20:50:02] *** Joins: swn_ (~sweeney@user/swn)
[20:50:27] *** Joins: remirol (~lorimer@user/lorimer)
[20:50:27] *** Quits: lorimer (~lorimer@user/lorimer) (Killed (NickServ (GHOST command used by remirol)))
[20:50:35] *** nickodd0 is now known as nickodd
[20:50:36] *** remirol is now known as lorimer
[20:50:37] *** Quits: brelod_ (~me@90.244.150.142) (Quit: leaving)
[20:50:48] *** Joins: Bit_MCP234 (~Bit_MCP@99-22-255-91.lightspeed.frokca.sbcglobal.net)
[20:51:05] *** Joins: brelod (~me@90.244.150.142)
[20:51:14] *** Quits: trekkie1701c (~trekkie17@user/trekkie1701c) (Quit: :P)
[20:51:21] *** Quits: frostwork (~frostwork@user/frostwork) (Quit: Leaving)
[20:51:24] *** Quits: Bit_MCP (~Bit_MCP@99-22-255-91.lightspeed.frokca.sbcglobal.net) (Read error: Connection reset by peer)
[20:51:24] *** Quits: robobo (~robobo@c-e52c524e.015-74-6762675.bbcust.telenor.se) (Quit: Ping timeout (120 seconds))
[20:51:40] *** Joins: robobo (~robobo@c-e52c524e.015-74-6762675.bbcust.telenor.se)
[20:51:44] *** Quits: dreinull (~dreinull@static.50.114.119.168.clients.your-server.de) (Quit: Ping timeout (120 seconds))
[20:51:47] *** Joins: r00t^work (~r00t@82-198-216-115.briteline.de)
[20:51:52] *** Joins: pj (~pj@ghettoforge/pj)
[20:51:56] *** Quits: dstein64 (~dstein64@dannyadam.com) (Excess Flood)
[20:52:00] *** Joins: dreinull (~dreinull@static.50.114.119.168.clients.your-server.de)
[20:52:08] *** Joins: sandb0y (~pirate@83.222.185.193)
[20:52:08] *** Joins: Palll (~Pall@cpc139184-sprt3-2-0-cust125.17-2.cable.virginm.net)
[20:52:08] *** Joins: earendel (uid498179@user/earendel)
[20:52:08] *** Joins: elastic_dog (~elastic_d@2a01:118f:822:9c00:f583:aa51:9ad4:d4fb)
[20:52:08] *** Joins: tirnanog (~tirnanog@user/tirnanog)
[20:52:08] *** Joins: aniruddha (uid340443@id-340443.ilkley.irccloud.com)
[20:52:08] *** Joins: randm (~randm@user/randm)
[20:52:08] *** Joins: Gooberpatrol66 (~Gooberpat@user/gooberpatrol66)
[20:52:08] *** Joins: gnoo (gnoo@user/gnoo)
[20:52:08] *** Joins: ElPresidente (~ElPreside@2600:1700:3d10:4870:9de6:7cb1:acca:d016)
[20:52:08] *** Joins: anton (anton@tloks.com)
[20:52:08] *** Joins: peterrooney (~peter@2604:3d08:1583:7400:dabb:c1ff:fe15:d704)
[20:52:08] *** Joins: mtk (~mtk@2601:185:200:72:44aa:53fe:886b:bee9)
[20:52:08] *** Joins: MenschZwoNull (~MenschZwo@p200300c85711050069caeca619944502.dip0.t-ipconnect.de)
[20:52:08] *** Joins: friedrich (~friedrich@aextron.de)
[20:52:08] *** Joins: skered (~dereks@user/skered)
[20:52:08] *** Joins: CoreISP (~LvH@simplemachines/serverteam/CoreISP)
[20:52:08] *** Joins: Furai (~Furai@cookiehoster.furai.pl)
[20:52:08] *** Joins: kilobyte_ch (~kbch@2a02:168:d80b:50:11:32ff:fe2d:64f5)
[20:52:08] *** Joins: Starfoxxes (~Starfoxxe@2a02:8070:5390:d00:12bf:48ff:feb8:38c8)
[20:52:08] *** Joins: Rue (~rue@2001-b011-1000-18fe-c1c5-8c34-a15c-8faf.dynamic-ip6.hinet.net)
[20:52:08] *** Joins: elibrokeit (eschwartz@archlinux/bugwrangler/eschwartz)
[20:52:09] *** Quits: sandb0y (~pirate@83.222.185.193) (Changing host)
[20:52:09] *** Joins: sandb0y (~pirate@user/sandb0y)
[20:52:11] *** Quits: aniruddha (uid340443@id-340443.ilkley.irccloud.com) (Max SendQ exceeded)
[20:52:11] *** Quits: elibrokeit (eschwartz@archlinux/bugwrangler/eschwartz) (Max SendQ exceeded)
[20:52:11] *** Quits: Furai (~Furai@cookiehoster.furai.pl) (Max SendQ exceeded)
[20:52:11] *** Quits: elastic_dog (~elastic_d@2a01:118f:822:9c00:f583:aa51:9ad4:d4fb) (Max SendQ exceeded)
[20:52:19] *** Quits: karakedi (~eAC53C340@user/karakedi) (Ping timeout: 265 seconds)
[20:52:21] *** Joins: elibrokeit (eschwartz@archlinux/bugwrangler/eschwartz)
[20:52:29] *** Joins: Furai (~Furai@cookiehoster.furai.pl)
[20:52:51] *** Joins: dstein64 (~dstein64@dannyadam.com)
[20:53:17] *** Quits: swn (~sweeney@user/swn) (Ping timeout: 265 seconds)
[20:53:25] *** Joins: aniruddha (uid340443@id-340443.ilkley.irccloud.com)
[20:53:26] *** Joins: magla (~gelignite@55d4d08c.access.ecotel.net)
[20:53:32] *** Joins: node1 (~node1@user/node1)
[20:53:57] *** Joins: ChmEarl (~chmearl@user/chmearl)
[20:54:14] *** Joins: edk (edk@libera/staff/edk)
[20:54:17] *** Joins: aaro (~aaro@user/aaro)
[20:54:30] *** Quits: oldgalileo (~oldgalile@host-212-18-2-82.customer.m-online.net) (Remote host closed the connection)
[20:54:32] *** Quits: drd (~drd@93-42-69-115.ip85.fastwebnet.it) (Ping timeout: 252 seconds)
[20:54:33] *** Joins: hqdruxn08_ (~hqdruxn08@cpe-66-68-166-214.austin.res.rr.com)
[20:54:36] *** Joins: l4yer (~15F21@159.48.55.9)
[20:54:40] *** Joins: reset (~reset@user/reset)
[20:54:41] *** Quits: LiftLeft (~LiftLeft@172.83.47.139) (Read error: Connection reset by peer)
[20:54:46] *** Joins: rustyshackleford (uid236774@id-236774.helmsley.irccloud.com)
[20:55:14] *** Joins: oldgalileo (~oldgalile@host-212-18-2-82.customer.m-online.net)
[20:55:47] *** rundown is now known as defjam
[20:56:11] *** Quits: r00t|work (~r00t@82-198-216-115.briteline.de) (Ping timeout: 265 seconds)
[20:56:25] *** Joins: seninha (~seninha@user/seninha)
[20:57:54] *** Joins: elastic_dog (~elastic_d@2a01:118f:822:9c00:f583:aa51:9ad4:d4fb)
[20:58:27] *** Quits: hqdruxn08 (~hqdruxn08@cpe-66-68-166-214.austin.res.rr.com) (Ping timeout: 240 seconds)
[20:58:54] *** Joins: Fozzworth__ (~Fozzworth@68-123-12-205.lightspeed.sntcca.sbcglobal.net)
[20:58:55] *** Joins: maharg101_ (~maharg101@savoy.force9.co.uk)
[20:59:42] *** Quits: yuri6037 (~yuri6037@224.34.76.86.rev.sfr.net) (Remote host closed the connection)
[21:00:28] *** Quits: y04nn (~y04nn@193.32.127.238) (Ping timeout: 252 seconds)
[21:01:49] *** Quits: hqdruxn08_ (~hqdruxn08@cpe-66-68-166-214.austin.res.rr.com) (Quit: Leaving)
[21:01:59] *** Quits: maharg101 (~maharg101@savoy.force9.co.uk) (Ping timeout: 265 seconds)
[21:02:08] *** Joins: hqdruxn08 (~hqdruxn08@cpe-66-68-166-214.austin.res.rr.com)
[21:02:28] *** Quits: Fozzworth_ (~Fozzworth@68-123-12-205.lightspeed.sntcca.sbcglobal.net) (Ping timeout: 265 seconds)
[21:02:30] *** Joins: s1b1 (~s1b1@user/s1b1)
[21:02:40] *** Quits: sinaowolabi__ (~SinaOwola@102.134.114.1) (Ping timeout: 252 seconds)
[21:02:47] *** Quits: sinaowolabi_ (~SinaOwola@102.134.114.1) (Ping timeout: 252 seconds)
[21:02:57] *** Quits: sinaowolabi (~SinaOwola@102.134.114.1) (Ping timeout: 265 seconds)
[21:05:10] *** Quits: roadie`` (~user@2a02:8108:ec0:1427:7907:eaa6:b44b:58bb) (Remote host closed the connection)
[21:05:25] *** Joins: roadie`` (~user@2a02:8108:ec0:1427:285b:2120:1c8b:5e6a)
[21:07:14] *** Joins: darkxploit (~jay@32.209.19.50)
[21:08:17] *** Joins: kurahaupo (~kurahaupo@220-245-23-126.static.tpgi.com.au)
[21:08:24] *** Joins: drd (~drd@2001:b07:a70:9f1f:1562:34de:f50f:77d4)
[21:09:22] *** Joins: LiftLeft (~LiftLeft@154.21.114.169)
[21:09:41] *** Joins: hqdruxn08_ (~hqdruxn08@cpe-66-68-166-214.austin.res.rr.com)
[21:09:59] *** Quits: roadie`` (~user@2a02:8108:ec0:1427:285b:2120:1c8b:5e6a) (Ping timeout: 252 seconds)
[21:10:14] *** Joins: EerdAppel9 (~eerdappel@84-24-184-139.cable.dynamic.v4.ziggo.nl)
[21:10:35] *** Joins: n8chan (~nate@108-233-125-227.lightspeed.sntcca.sbcglobal.net)
[21:10:35] *** Joins: jsrnop1 (~mark@user/jsrnop)
[21:10:52] *** Joins: Caffeina1ed (~Caffeine@user/alexdelarge)
[21:10:57] *** Joins: ^wuseman (~wuseman@90-227-27-97-no68.tbcn.telia.com)
[21:11:21] *** ^wuseman is now known as Guest3499
[21:11:26] *** Quits: node1 (~node1@user/node1) (Quit: Leaving)
[21:11:29] *** Joins: woky_ (~woky@li1651-31.members.linode.com)
[21:11:35] *** Quits: Caffeinated (~Caffeine@user/alexdelarge) (Killed (lead.libera.chat (Nickname regained by services)))
[21:11:35] *** Caffeina1ed is now known as Caffeinated
[21:11:38] *** Joins: compuguy0 (ahall@user/compuguy)
[21:11:44] *** Joins: setesat0 (~setesat@94.4.156.220)
[21:11:45] *** Joins: travisghansen0 (~travisgha@192.74.130.86)
[21:11:46] *** Joins: groscon_ (~groscon@ns3180824.ip-37-187-100.eu)
[21:11:47] *** Joins: pilcrow4 (~pilcrow@45.76.227.43)
[21:11:56] *** Joins: kapil_ (~kapil@2a01:4f9:c010:c9c3::1)
[21:12:11] *** Joins: Quaack (~Quack@185.21.216.169)
[21:12:13] *** Joins: karakedi (~eAC53C340@user/karakedi)
[21:12:28] *** Joins: strungout (znc@mutant.penguin.fyi)
[21:12:32] *** Joins: mooz (~none@23.254.112.158)
[21:12:41] *** Joins: amosbird_ (~amosbird@13.75.119.182)
[21:12:44] *** Joins: noarb- (~noarb@user/noarb)
[21:12:57] *** Joins: bonsaikitten (~purrrr@gentoo/developer/patrick)
[21:13:03] *** Joins: shailangsa_ (~shailangs@host217-39-45-200.range217-39.btcentralplus.com)
[21:13:03] *** Joins: sven_ (~quassel@squint.a-oben.org)
[21:13:16] *** Joins: petemc_ (~pete@vps-80fad31a.vps.ovh.net)
[21:13:23] *** Joins: Exagone313 (exa@irc.moe)
[21:13:27] *** Joins: Spawns_Carpeting (~pi@user/spawns-carpeting/x-6969421)
[21:13:30] *** Joins: djph_ (~dpurgert@cpe-107-10-244-220.neo.res.rr.com)
[21:13:32] *** Joins: BSaboia (~bsaboia@177.37.198.122)
[21:13:49] *** Joins: _val__ (~valentin@82-169-14-137.biz.kpn.net)
[21:13:50] *** Quits: hqdruxn08 (~hqdruxn08@cpe-66-68-166-214.austin.res.rr.com) (Ping timeout: 252 seconds)
[21:13:57] *** Joins: supernov1h (~supernova@mail.ijk.nz)
[21:14:00] *** Joins: f-chymera (~chymera@ns1000526.ip-51-81-46.us)
[21:14:05] *** Quits: seninha (~seninha@user/seninha) (Quit: Leaving)
[21:14:06] *** Joins: rundown (~eb0t@90.199.243.11)
[21:14:06] *** Joins: vishal_ (~vishal@fedora/vishal)
[21:14:14] *** Joins: td00_ (~td001@172.245.134.58)
[21:14:17] *** Joins: nvz_ (~user@nvz.farted.online)
[21:14:18] *** Joins: __nick__ (~quassel@cpc68286-cdif17-2-0-cust533.5-1.cable.virginm.net)
[21:14:18] *** Joins: mrhands_ (~mrhands@user/mrhands)
[21:14:28] *** Quits: vishal (~vishal@fedora/vishal) (Ping timeout: 265 seconds)
[21:14:28] *** Quits: wuseman (~wuseman@user/wuseman) (Ping timeout: 265 seconds)
[21:14:28] *** Quits: shailangsa (~shailangs@host217-39-45-200.range217-39.btcentralplus.com) (Ping timeout: 265 seconds)
[21:14:28] *** Quits: jsrnop (~mark@user/jsrnop) (Read error: Connection reset by peer)
[21:14:28] *** Quits: woky (~woky@li1651-31.members.linode.com) (Ping timeout: 265 seconds)
[21:14:28] *** Quits: Burrr (~Burrr@urmomma-fux0rs-with.burrr.nl) (Ping timeout: 265 seconds)
[21:14:28] *** Quits: kapil (~kapil@o-k.website) (Ping timeout: 265 seconds)
[21:14:29] *** Quits: njitramii (~njitramii@144-027-180-159.dynamic.caiway.nl) (Ping timeout: 265 seconds)
[21:14:29] *** Quits: Spawns_Carpetin- (~pi@user/spawns-carpeting/x-6969421) (Ping timeout: 265 seconds)
[21:14:29] *** Quits: az (az@user/azz) (Ping timeout: 265 seconds)
[21:14:29] *** Quits: suffer (znc@mutant.penguin.fyi) (Ping timeout: 265 seconds)
[21:14:29] *** Quits: Exa (exa@irc.moe) (Ping timeout: 265 seconds)
[21:14:29] *** Quits: petemc (~pete@vps-80fad31a.vps.ovh.net) (Ping timeout: 265 seconds)
[21:14:29] *** Quits: groscon (~groscon@ns3180824.ip-37-187-100.eu) (Ping timeout: 265 seconds)
[21:14:29] *** Quits: mooz_ (~none@23.254.112.158) (Ping timeout: 265 seconds)
[21:14:29] *** Quits: e2- (e2@sponsored.by.bnc4you.xyz) (Ping timeout: 265 seconds)
[21:14:29] *** Quits: anddam (~anddam@user/anddam) (Ping timeout: 265 seconds)
[21:14:29] *** Quits: marlinc (~marlinc@user/marlinc) (Ping timeout: 265 seconds)
[21:14:29] *** Quits: djph (~dpurgert@cpe-107-10-244-220.neo.res.rr.com) (Ping timeout: 265 seconds)
[21:14:29] *** Quits: xiaomiao (~purrrr@gentoo/developer/patrick) (Read error: Connection reset by peer)
[21:14:29] *** Quits: setesat (~setesat@94.4.156.220) (Read error: Connection reset by peer)
[21:14:29] *** Quits: defjam (~eb0t@90.199.243.11) (Ping timeout: 265 seconds)
[21:14:29] *** Quits: erri_ (~meow@ec2-18-218-146-67.us-east-2.compute.amazonaws.com) (Ping timeout: 265 seconds)
[21:14:29] *** Quits: mrhands (~mrhands@user/mrhands) (Ping timeout: 265 seconds)
[21:14:29] *** Quits: EerdAppel (~eerdappel@84-24-184-139.cable.dynamic.v4.ziggo.nl) (Ping timeout: 265 seconds)
[21:14:29] *** Quits: Namarrgon (~Namarrgon@archlinux/op/Namarrgon) (Ping timeout: 265 seconds)
[21:14:29] *** Quits: dka (~code-is-a@ns3059207.ip-193-70-33.eu) (Ping timeout: 265 seconds)
[21:14:29] *** Quits: _val_ (~valentin@82-169-14-137.biz.kpn.net) (Ping timeout: 265 seconds)
[21:14:29] *** Quits: simpl_e (~user@user/simpl-e/x-8589812) (Ping timeout: 265 seconds)
[21:14:29] *** Quits: pilcrow (~pilcrow@45.76.227.43) (Ping timeout: 265 seconds)
[21:14:29] *** Quits: supernovah (~supernova@mail.ijk.nz) (Ping timeout: 265 seconds)
[21:14:29] *** Quits: paddymahoney (~paddymaho@cpe9050ca207f83-cm9050ca207f80.cpe.net.cable.rogers.com) (Ping timeout: 265 seconds)
[21:14:29] *** Quits: neightchan (~nate@108-233-125-227.lightspeed.sntcca.sbcglobal.net) (Ping timeout: 265 seconds)
[21:14:29] *** Quits: sven^ (~quassel@squint.a-oben.org) (Ping timeout: 265 seconds)
[21:14:30] *** Quits: chymera (~chymera@ns1000526.ip-51-81-46.us) (Ping timeout: 265 seconds)
[21:14:30] *** Quits: td001 (~td001@172.245.134.58) (Ping timeout: 265 seconds)
[21:14:30] *** Quits: dd_ (dd_@gateway/vpn/protonvpn/dd/x-95652672) (Ping timeout: 265 seconds)
[21:14:30] *** Quits: amosbird (~amosbird@13.75.119.182) (Ping timeout: 265 seconds)
[21:14:30] *** Quits: edr (~edr@user/edr) (Ping timeout: 265 seconds)
[21:14:30] *** Quits: barjac (~quassel@92.41.102.236.threembb.co.uk) (Ping timeout: 265 seconds)
[21:14:30] *** Quits: Church (~aleph@pool-98-116-232-112.nycmny.fios.verizon.net) (Ping timeout: 265 seconds)
[21:14:30] *** Quits: mw_ (~mw@catv-86-101-13-145.catv.broadband.hu) (Ping timeout: 265 seconds)
[21:14:30] *** Quits: moto (~moto@user/moto) (Ping timeout: 265 seconds)
[21:14:30] *** Quits: nvz (~user@nvz.farted.online) (Ping timeout: 265 seconds)
[21:14:30] *** Quits: Quack (~Quack@185.21.216.169) (Ping timeout: 265 seconds)
[21:14:30] *** Quits: arinov (~arinov@31.142.82.177) (Ping timeout: 265 seconds)
[21:14:30] *** Quits: JustLand1dOnMars (question@user/question) (Ping timeout: 265 seconds)
[21:14:30] *** Quits: LuckyRaw1 (~sergiy@203.129.63.205) (Ping timeout: 265 seconds)
[21:14:30] *** vishal_ is now known as vishal
[21:14:30] *** Quits: dkeohane2 (~dkeohane@ec2-18-189-29-140.us-east-2.compute.amazonaws.com) (Ping timeout: 265 seconds)
[21:14:30] *** Quits: iomari891 (~iomari891@105.112.138.38) (Ping timeout: 265 seconds)
[21:14:30] *** Quits: nutron (~nutron@66.51.134.122) (Ping timeout: 265 seconds)
[21:14:30] *** Quits: ___nick___ (~quassel@cpc68286-cdif17-2-0-cust533.5-1.cable.virginm.net) (Ping timeout: 265 seconds)
[21:14:30] *** Quits: travisghansen (~travisgha@192.74.130.86) (Ping timeout: 265 seconds)
[21:14:30] *** Quits: WinterStar (~IceLight@user/icelight) (Ping timeout: 265 seconds)
[21:14:30] *** Quits: LambdaComplex (~adam@wireguard/tunneler/lambdacomplex) (Ping timeout: 265 seconds)
[21:14:30] *** Quits: mkoskar (~mkoskar@user/mkoskar) (Ping timeout: 265 seconds)
[21:14:30] *** Quits: INeedAHandle (~INeedAHan@39.124.72.106) (Ping timeout: 265 seconds)
[21:14:30] *** Quits: noarb (~noarb@user/noarb) (Ping timeout: 265 seconds)
[21:14:30] *** Quits: compuguy (ahall@user/compuguy) (Ping timeout: 265 seconds)
[21:14:30] *** setesat0 is now known as setesat
[21:14:30] *** pilcrow4 is now known as pilcrow
[21:14:30] *** jsrnop1 is now known as jsrnop
[21:14:30] *** compuguy0 is now known as compuguy
[21:14:30] *** travisghansen0 is now known as travisghansen
[21:14:30] *** EerdAppel9 is now known as EerdAppel
[21:14:33] *** Quits: hsv (~unknown@user/hsv) (Ping timeout: 265 seconds)
[21:14:33] *** Quits: mteo (francis@user/francis) (Ping timeout: 265 seconds)
[21:14:35] *** Joins: moto_ (~moto@user/moto)
[21:14:36] *** Joins: marlinc_ (~marlinc@user/marlinc)
[21:14:37] *** Joins: JustLandedOnMars (question@user/question)
[21:14:38] *** Joins: erri (~meow@ec2-18-218-146-67.us-east-2.compute.amazonaws.com)
[21:14:40] *** Joins: betelgeuse0 (~betelgeus@94-225-47-8.access.telenet.be)
[21:14:48] *** Joins: dka (~code-is-a@ns3059207.ip-193-70-33.eu)
[21:14:49] *** Joins: barjac (~quassel@92.41.102.236.threembb.co.uk)
[21:14:54] *** Joins: WinterStar (~IceLight@user/icelight)
[21:14:55] *** Joins: arinov (~arinov@31.142.82.177)
[21:14:55] *** Quits: betelgeuse (~betelgeus@94-225-47-8.access.telenet.be) (Read error: Connection reset by peer)
[21:14:55] *** betelgeuse0 is now known as betelgeuse
[21:14:57] *** Joins: LuckyRaw1 (~sergiy@203.129.63.205)
[21:15:02] *** Quits: juhop (~anon@192.3.81.147) (Ping timeout: 265 seconds)
[21:15:02] *** Joins: hsv (~unknown@user/hsv)
[21:15:04] *** td00_ is now known as td001
[21:15:08] *** Joins: LambdaComplex (~adam@wireguard/tunneler/lambdacomplex)
[21:15:09] *** Joins: mteo (francis@user/francis)
[21:15:12] *** Joins: nutron (~nutron@66.51.134.122)
[21:15:13] *** f-chymera is now known as chymera
[21:15:26] *** Exagone313 is now known as Exa
[21:15:31] *** Joins: e2 (e2@sponsored.by.bnc4you.xyz)
[21:15:32] *** Joins: Burrr (~Burrr@urmomma-fux0rs-with.burrr.nl)
[21:15:35] *** Joins: az (az@stable.bnc.by.bnc4you.xyz)
[21:15:38] *** Joins: Church (~aleph@pool-98-116-232-112.nycmny.fios.verizon.net)
[21:15:39] *** Joins: dkeohane2 (~dkeohane@ec2-18-189-29-140.us-east-2.compute.amazonaws.com)
[21:15:54] *** Joins: juhop (~anon@192.3.81.147)
[21:15:59] *** az is now known as Guest8372
[21:16:03] *** Joins: edr (~edr@50.116.53.250)
[21:16:04] *** Quits: edr (~edr@50.116.53.250) (Changing host)
[21:16:04] *** Joins: edr (~edr@user/edr)
[21:16:06] *** Joins: mw_ (~mw@catv-86-101-13-145.catv.broadband.hu)
[21:16:09] *** Joins: mkoskar (~mkoskar@user/mkoskar)
[21:16:09] *** Joins: Namarrgon (~Namarrgon@archlinux/op/Namarrgon)
[21:16:14] *** Joins: dd_ (dd_@gateway/vpn/protonvpn/dd/x-95652672)
[21:16:44] *** Joins: iomari891 (~iomari891@105.112.138.38)
[21:16:58] *** Quits: mkopriva (~mkopriva@ip-78-45-72-123.net.upcbroadband.cz) (Ping timeout: 265 seconds)
[21:17:02] *** Quits: lemonsnicks (~lemonsnic@cpc159519-perr18-2-0-cust114.19-1.cable.virginm.net) (Read error: Connection reset by peer)
[21:17:04] *** Joins: lemonsni- (~lemonsnic@cpc159519-perr18-2-0-cust114.19-1.cable.virginm.net)
[21:17:47] *** Joins: elena_re (~elena@178.176.79.2)
[21:18:08] *** Joins: paddymahoney (~paddymaho@cpe9050ca207f83-cm9050ca207f80.cpe.net.cable.rogers.com)
[21:19:13] *** Joins: akoana (~ah@user/akoana)
[21:21:08] *** Joins: hqdruxn08__ (~hqdruxn08@cpe-66-68-166-214.austin.res.rr.com)
[21:24:33] *** Joins: y04nn (~y04nn@193.32.127.238)
[21:25:22] *** Quits: hqdruxn08_ (~hqdruxn08@cpe-66-68-166-214.austin.res.rr.com) (Ping timeout: 252 seconds)
[21:25:43] *** Quits: BSaboia (~bsaboia@177.37.198.122) (Quit: This computer has gone to sleep)
[21:26:29] *** Quits: kurahaupo (~kurahaupo@220-245-23-126.static.tpgi.com.au) (Ping timeout: 264 seconds)
[21:27:23] *** Joins: somlis (~somlis@user/somlis)
[21:29:09] *** Joins: ozzzo_work (~ozzzo_wor@h87.s239.verisign.com)
[21:29:21] *** Joins: anddam (~anddam@user/anddam)
[21:32:49] *** Joins: roadie`` (~user@2a02:8108:ec0:1427:285b:2120:1c8b:5e6a)
[21:34:26] *** Joins: lmat (~Lmat@c-68-58-60-231.hsd1.in.comcast.net)
[21:34:35] *** Quits: darkbit (~db@152.32.99.67) (Ping timeout: 260 seconds)
[21:35:18] *** Joins: kurahaupo (~kurahaupo@220-245-23-126.static.tpgi.com.au)
[21:35:59] *** Quits: egrain (felix@31.204.155.215) (Remote host closed the connection)
[21:36:30] *** Quits: YaoNai (~YaoNai@user/yaonai) (Quit: leaving)
[21:38:11] *** Quits: y04nn (~y04nn@193.32.127.238) (Ping timeout: 250 seconds)
[21:39:45] *** Joins: forgotmynick (uid24625@id-24625.hampstead.irccloud.com)
[21:40:20] *** Quits: tar_xvf (~tar@ec2-3-136-243-174.us-east-2.compute.amazonaws.com) (Remote host closed the connection)
[21:40:38] *** Joins: tar_xvf (~tar@ec2-3-136-243-174.us-east-2.compute.amazonaws.com)
[21:42:24] *** Joins: manjaroi3 (~manjaro-i@162.216.238.51)
[21:42:39] *** Joins: jdltouraine__ (~jdltourai@2a02:a03f:847b:b800:b163:93c1:699b:16ff)
[21:43:18] *** manjaroi3 is now known as oscarpapa
[21:44:31] *** Joins: sinaowolabi (~SinaOwola@102.134.114.1)
[21:47:44] *** Joins: mihaiadrian (~Thunderbi@82.76.223.244)
[21:48:17] *** Parts: rapha (~jrs@user/rapha) (WeeChat 2.3)
[21:49:33] *** Joins: Arlion (~Arlion@user/arlion)
[21:50:59] *** Quits: oscarpapa (~manjaro-i@162.216.238.51) (Quit: leaving)
[21:51:52] *** Quits: Guest3499 (~wuseman@90-227-27-97-no68.tbcn.telia.com) (Quit: ZNC 1.8.2+deb2build1 - https://znc.in)
[21:52:22] *** Quits: roadie`` (~user@2a02:8108:ec0:1427:285b:2120:1c8b:5e6a) (Ping timeout: 268 seconds)
[21:52:52] <Arlion> What am i doing stupid? I'm running the command, eval $( openstack aggregate show h5_8a -c hosts -f shell ), which returns, hosts='['\''nova01'\'', '\''nova02'\'', '\''nova03'\'']. I'm doing for x in ${hosts[@]} ; do echo $x ; done, for x in ${hosts[*]} ; do echo $x ; done and for x in ${hosts} ; do echo $x ; done... all of which return hosts as the whole string... '['\''nova01'\'', '\''nova02'\'',
[21:52:54] <Arlion> '\''nova03'\'']' How do i itterate this?
[21:54:14] <Arlion> When i perform `export`, I get hosts='['\''nova01'\'', '\''nova02'\'', '\''nova03'\'']' os its just not seeing it as an array?
[21:54:59] <koala_man> this is JSON, not bash. you can use jq to convert it from a json array to plain lines, and then use readarray to read it into an array
[21:55:53] *** Quits: drd (~drd@2001:b07:a70:9f1f:1562:34de:f50f:77d4) (Ping timeout: 264 seconds)
[21:56:05] *** Joins: y04nn (~y04nn@193.32.127.238)
[21:57:18] *** Quits: jdltouraine__ (~jdltourai@2a02:a03f:847b:b800:b163:93c1:699b:16ff) (Ping timeout: 268 seconds)
[21:57:20] <koala_man> -f shell wat. maybe they have one that outputs an actual bash array
[21:57:26] <Arlion> Yeah, you're right. As soon as you said it it all makes sense. Except for the part where `-f shell` in the command is supposed to spit out something i can use in bash. idk
[21:57:34] <koala_man> like hosts=(nova01 nova02 nova03)
[21:57:39] <Arlion> yea
[21:57:42] <Arlion> but it don't
[21:58:36] <Arlion> -f {json,shell,table,value,yaml}
[22:00:06] <Arlion> -f value produces the [ 'nova01', 'nova02', .... ] but without the variable prepended to it. idk. I'm just going to use the -f json and convert it with jq
[22:00:18] <Arlion> thanks for sharing the wtfnness for a second
[22:00:41] *** Joins: roadie`` (~user@2a02:8108:ec0:1427:285b:2120:1c8b:5e6a)
[22:00:41] *** Joins: wuseman (~wuseman@90-227-27-97-no68.tbcn.telia.com)
[22:00:42] *** Quits: wuseman (~wuseman@90-227-27-97-no68.tbcn.telia.com) (Changing host)
[22:00:42] *** Joins: wuseman (~wuseman@user/wuseman)
[22:00:55] *** Quits: mihaiadrian (~Thunderbi@82.76.223.244) (Remote host closed the connection)
[22:01:06] *** Quits: aniruddha (uid340443@id-340443.ilkley.irccloud.com) (Quit: Connection closed for inactivity)
[22:01:11] *** Quits: tobybl (~tobybl@31.111.35.255) (Remote host closed the connection)
[22:01:36] *** Joins: mihaiadrian (~Thunderbi@82.76.223.244)
[22:01:41] *** Quits: rundown (~eb0t@90.199.243.11) (Ping timeout: 252 seconds)
[22:02:09] <Arlion> actually im just going write this whole thing in python. f converting json in bash.
[22:03:01] *** Quits: y04nn (~y04nn@193.32.127.238) (Ping timeout: 265 seconds)
[22:03:14] <mihaiadrian> Arlion: can you tell me what you're trying to do?
[22:03:21] *** Joins: rundown (~eb0t@90.202.46.160)
[22:04:05] <Arlion> its alright. im just going to write it in python. i prob should be doin that in the first place
[22:04:10] <phy1729> !graduated
[22:04:10] <greybot> Congratulations! You've graduated to needing to use a real language!
[22:04:36] <mihaiadrian> Arlion: can you just c/p your question?
[22:04:39] <mihaiadrian> i'm curious.
[22:04:55] <Arlion> What am i doing stupid? I'm running the command, eval $( openstack aggregate show h5_8a -c hosts -f shell ), which returns, hosts='['\''nova01'\'', '\''nova02'\'', '\''nova03'\'']. I'm doing for x in ${hosts[@]} ; do echo $x ; done, for x in ${hosts[*]} ; do echo $x ; done and for x in ${hosts} ; do echo $x ; done... all of which return hosts as the whole string... '['\''nova01'\'', '\''nova02'\'',
[22:04:57] <Arlion> '\''nova03'\'']' How do i itterate this?
[22:05:00] <Arlion> When i perform `export`, I get hosts='['\''nova01'\'', '\''nova02'\'', '\''nova03'\'']' os its just not seeing it as an array?
[22:06:12] <Soliton> that is not shell syntax for an array indeed.
[22:06:40] <mihaiadrian> so you're trying to trimm those quotes, right?
[22:07:03] <Soliton> they want a shell array.
[22:07:15] *** Quits: iomari891 (~iomari891@105.112.138.38) (Quit: WeeChat 3.0.1)
[22:07:26] <Arlion> nah, trying to use it as an array and itterate though it. which makes me think it would be possible with tr '\[' '('
[22:08:15] <Arlion> but why am i hacking it into a shell compatabile format when it should be doing that anyway with --format shell ??? im going to open a bug with the openstackclient devs lol
[22:11:30] *** Quits: JanC (~janc@user/janc) (Remote host closed the connection)
[22:11:40] *** Joins: JanC_ (~janc@user/janc)
[22:11:45] *** Quits: rendar (~rendar@user/rendar) (Quit: Leaving)
[22:11:57] *** Quits: dza (~dza@user/dza) (Read error: Connection reset by peer)
[22:12:01] *** Quits: FreeBDSM (~uzer@user/freebdsm) (Ping timeout: 252 seconds)
[22:12:30] *** JanC_ is now known as JanC
[22:12:37] *** Joins: FreeBDSM (~uzer@user/freebdsm)
[22:15:29] *** Joins: remirol (~lorimer@user/lorimer)
[22:15:29] *** Quits: lorimer (~lorimer@user/lorimer) (Killed (NickServ (GHOST command used by remirol)))
[22:15:38] *** remirol is now known as lorimer
[22:15:55] *** Joins: strobelight (~quassel@c-69-180-7-202.hsd1.ga.comcast.net)
[22:16:12] <Soliton> # jq -r '.hosts|@sh "hosts=(\(.))"' <<< '{ "hosts":["foo","bar","baz"] }'
[22:16:14] <shbot7> Soliton: hosts=('foo' 'bar' 'baz')
[22:17:30] *** Quits: tar_xvf (~tar@ec2-3-136-243-174.us-east-2.compute.amazonaws.com) (Quit: ZNC 1.7.5+deb4 - https://znc.in)
[22:18:20] *** Joins: seninha (~seninha@user/seninha)
[22:18:58] <Soliton> since it's hostnames it's probably easier to just get a bunch of words on a line or one per line and get that in an array.
[22:20:10] <acegallagher> I have a weird thing, I'm trying to redirect stderr (via 2>) for an interactive program but it's screwing with stdin
[22:20:16] *** jinsun__ is now known as jinsun
[22:20:20] *** Quits: zro (~zro@user/zro) (Ping timeout: 252 seconds)
[22:20:26] <acegallagher> meaniing the program asks for input but I can't see the line where it displays the request
[22:20:36] <acegallagher> but if I type, then press enter, it receives it
[22:20:36] <cryptonector> beautiful
[22:21:11] <Soliton> presumably it displays the prompt on stderr.
[22:21:22] <Soliton> i doubt it actually has anything to do with stdin.
[22:21:23] *** Quits: elena_re (~elena@178.176.79.2) (Read error: Connection reset by peer)
[22:22:13] <Soliton> won't be much fun to run bash with stderr redirected either.
[22:22:29] *** Joins: tar_xvf (~tar@ec2-3-136-243-174.us-east-2.compute.amazonaws.com)
[22:26:06] *** Quits: fdan (~fdan@192.146.154.3) (Quit: Ping timeout (120 seconds))
[22:31:50] *** Quits: mihaiadrian (~Thunderbi@82.76.223.244) (Ping timeout: 268 seconds)
[22:31:53] *** Joins: mihaiadrian1 (~Thunderbi@92.81.30.221)
[22:32:21] *** Quits: arinov (~arinov@31.142.82.177) (Ping timeout: 250 seconds)
[22:36:13] *** Quits: mihaiadrian1 (~Thunderbi@92.81.30.221) (Ping timeout: 252 seconds)
[22:40:08] <wwilliam> I need a condition,   if the number of files with pattern "foo" is not 2 or more than 2 then;exit  how to do that?
[22:40:40] <pj> !empty
[22:40:41] <greybot> empty is a lightweight alternative to the ''expect'' tool for automating interactive programs: http://empty.sourceforge.net/
[22:40:45] <pj> bleh
[22:40:53] <pj> !faq empty
[22:40:53] <greybot> https://mywiki.wooledge.org/BashFAQ/004 -- How can I check whether a directory is empty or not?  How do I check for any *.mpg files, or count how many there are?
[22:41:00] <pj> wwilliam: ^^^^^
[22:41:11] <wwilliam> Checking....
[22:41:50] *** Quits: han-solo (~hanish@user/han-solo) (Quit: leaving)
[22:43:46] <wwilliam> Thanks pj
[22:43:52] <pj> yw :-)
[22:46:46] *** Joins: mihaiadrian (~Thunderbi@82.76.223.244)
[22:52:55] *** Quits: flying_sausages (~flying_sa@user/flying-sausages/x-2113186) (Quit: You just lost the game. Peace Out.)
[22:54:42] *** Quits: oldgalileo (~oldgalile@host-212-18-2-82.customer.m-online.net) (Remote host closed the connection)
[22:55:15] *** Joins: oldgalileo (~oldgalile@host-212-18-2-82.customer.m-online.net)
[22:55:27] *** Parts: hiya (quassel@user/hiya) (https://quassel-irc.org - Chat comfortably. Anywhere.)
[22:55:31] *** Joins: Pacra (~Pacra@pool-100-11-34-209.phlapa.fios.verizon.net)
[22:56:06] *** Joins: hqdruxn08 (~hqdruxn08@cpe-66-68-166-214.austin.res.rr.com)
[22:56:11] *** Quits: gh34 (~textual@cpe-184-58-181-106.wi.res.rr.com) (Quit: Textual IRC Client: www.textualapp.com)
[22:57:46] *** Joins: arinov (~arinov@213.194.126.155)
[22:58:14] *** Quits: roadie`` (~user@2a02:8108:ec0:1427:285b:2120:1c8b:5e6a) (Ping timeout: 250 seconds)
[22:59:07] *** nvz_ is now known as nvz
[22:59:58] *** Quits: hqdruxn08__ (~hqdruxn08@cpe-66-68-166-214.austin.res.rr.com) (Ping timeout: 250 seconds)
[23:00:20] *** Joins: roadie`` (~user@2a02:8108:ec0:1427:285b:2120:1c8b:5e6a)
[23:00:57] *** Joins: UnnamedBeer (~UnnamedBe@117.red-83-46-8.dynamicip.rima-tde.net)
[23:01:07] *** Quits: JohnML (~JohnML@ip-37-201-129-30.hsi13.unitymediagroup.de) (Remote host closed the connection)
[23:01:44] *** Quits: meator (~meator@user/meator) (Quit: Leaving)
[23:01:45] *** Joins: JohnML (~JohnML@ip-37-201-129-30.hsi13.unitymediagroup.de)
[23:03:09] *** Joins: xx (~xx@user/xx)
[23:04:24] *** Joins: tangy (tangy@user/tangy)
[23:04:49] *** Quits: roadie`` (~user@2a02:8108:ec0:1427:285b:2120:1c8b:5e6a) (Ping timeout: 252 seconds)
[23:05:40] *** Joins: flying_sausages (~flying_sa@83.149.106.219)
[23:05:41] *** Quits: flying_sausages (~flying_sa@83.149.106.219) (Changing host)
[23:05:41] *** Joins: flying_sausages (~flying_sa@user/flying-sausages/x-2113186)
[23:07:21] *** Joins: mago (~mago@87.125.51.92)
[23:11:39] *** Quits: totenkoph (~scythe@user/totenkoph) (Remote host closed the connection)
[23:12:35] *** Quits: Enissay (~Enissay@user/enissay) (Quit: WeeChat 3.0)
[23:13:22] *** Joins: totenkoph (~scythe@user/totenkoph)
[23:13:58] *** Joins: Enissay (~Enissay@user/enissay)
[23:15:49] <earendel> !glob
[23:15:49] <greybot> Globs are shell patterns that can be used for matching strings or expanding pathnames: [[ $name = Bob* ]]; rm -- *.txt; see http://mywiki.wooledge.org/glob
[23:15:53] *** Quits: unixman_home__ (~unixman2@175-238-4-64.mtawireless.com) (Quit: rm -rf /)
[23:16:44] *** Joins: unixman_home (~unixman2@175-238-4-64.mtawireless.com)
[23:17:29] *** Joins: elena_re (~elena@178.176.79.2)
[23:17:56] *** Quits: mags (~mags@097-090-237-145.res.spectrum.com) (Ping timeout: 265 seconds)
[23:20:26] *** Joins: mags (~mags@097-090-237-145.res.spectrum.com)
[23:22:14] *** Quits: mago (~mago@87.125.51.92) (Quit: Client closed)
[23:22:49] *** Joins: hqdruxn08_ (~hqdruxn08@cpe-66-68-166-214.austin.res.rr.com)
[23:24:49] *** Joins: zebrag (~chris@user/zebrag)
[23:25:14] <earendel> how can i use globs to list all files not having an extension?
[23:25:50] <llua> +([!.])
[23:26:25] *** Quits: hqdruxn08_ (~hqdruxn08@cpe-66-68-166-214.austin.res.rr.com) (Remote host closed the connection)
[23:26:29] <emanuele6> !extglob
[23:26:29] <greybot> "Extended globs" (shopt -s extglob) allow you to say things like "all files that do not end in .jpg". See http://mywiki.wooledge.org/glob#extglob
[23:26:44] *** Joins: hqdruxn08_ (~hqdruxn08@cpe-66-68-166-214.austin.res.rr.com)
[23:26:47] *** Joins: _0x5fc3 (~0x5fc3@wireguard/tunneler/-0x5fc3)
[23:26:49] *** Quits: hqdruxn08 (~hqdruxn08@cpe-66-68-166-214.austin.res.rr.com) (Ping timeout: 252 seconds)
[23:28:13] <jetchisel> might at well throw in a nullglob
[23:28:14] <emanuele6> +([!.]) or !(*.*); if you want to count files like .bashrc as files without extension, ?(.)+([!.])
[23:28:26] *** Quits: Inline (~Inline@2a02:908:1252:7a80:1feb:c0cd:e428:d19f) (Ping timeout: 260 seconds)
[23:28:42] <emanuele6> directories will match
[23:28:54] <emanuele6> not just files
[23:28:56] *** Joins: roadie`` (~user@2a02:8108:ec0:1427:285b:2120:1c8b:5e6a)
[23:29:03] <emanuele6> (regular files)
[23:30:50] <earendel> it is not a regular expression in parens.. right?
[23:31:13] *** Quits: mihaiadrian (~Thunderbi@82.76.223.244) (Ping timeout: 252 seconds)
[23:31:15] *** Joins: mihaiadrian1 (~Thunderbi@92.81.30.221)
[23:31:38] *** Quits: shailangsa_ (~shailangs@host217-39-45-200.range217-39.btcentralplus.com) ()
[23:31:52] <llua> correct
[23:32:00] *** Quits: strobelight (~quassel@c-69-180-7-202.hsd1.ga.comcast.net) (Quit: https://quassel-irc.org - Chat comfortably. Anywhere.)
[23:32:44] *** Joins: strobelight (~quassel@c-69-180-7-202.hsd1.ga.comcast.net)
[23:33:29] <earendel> anyway i could exclude directories?
[23:33:31] *** Quits: illuminated (~quassel@107-133-152-77.lightspeed.okcbok.sbcglobal.net) (Remote host closed the connection)
[23:33:33] *** mihaiadrian1 is now known as mihaiadrian
[23:34:02] *** Quits: pwndave (pwndave@2a01:4f8:c17:efa0::4) (Ping timeout: 260 seconds)
[23:34:05] *** Quits: mschiff (~mschiff@gentoo/developer/mschiff) (Ping timeout: 252 seconds)
[23:34:14] *** Quits: damyan (damyan@mail.0x4711.org) (Ping timeout: 246 seconds)
[23:34:22] *** Quits: smorgasbord (buggy@user/smorgasbord) (Ping timeout: 265 seconds)
[23:34:22] *** Quits: Spydar007 (~spydar007@user/spydar007) (Ping timeout: 265 seconds)
[23:34:31] *** Quits: lmv (asmo@user/lmv) (Ping timeout: 252 seconds)
[23:34:31] *** Quits: ifohancroft (~ifo@about/techtavern/ifohancroft) (Ping timeout: 252 seconds)
[23:34:31] *** Quits: tedster (~Tedster@rampage.tedster.net) (Ping timeout: 252 seconds)
[23:34:38] *** Quits: wolfshappen (~waff@irc.furworks.de) (Ping timeout: 252 seconds)
[23:34:38] *** Quits: simplicity (~yti@user/simplicity) (Ping timeout: 252 seconds)
[23:34:38] *** Quits: depesz (~quassel@lana.depesz.com) (Ping timeout: 250 seconds)
[23:34:45] *** Quits: sven_ (~quassel@squint.a-oben.org) (Ping timeout: 260 seconds)
[23:34:45] *** Quits: bonsaikitten (~purrrr@gentoo/developer/patrick) (Ping timeout: 260 seconds)
[23:34:47] *** Quits: koollman (samson_t@user/koollman) (Ping timeout: 240 seconds)
[23:34:51] <tirnanog> test whether each of the expanded words isn't a directory, or whether it's a regular file or whatever it may be that you require exactly.
[23:34:53] *** Quits: Philonous_ (~Philonous@user/philonous) (Ping timeout: 264 seconds)
[23:34:53] *** Quits: sixwheeledbeast (~zem@user/sixwheeledbeast) (Ping timeout: 264 seconds)
[23:34:57] *** Quits: pikapika (~pikapika_@pika.powered.by.lunarbnc.net) (Ping timeout: 268 seconds)
[23:34:58] *** Quits: yano (~yano@ircpuzzles/staff/yano) (Ping timeout: 260 seconds)
[23:35:04] *** Quits: xelra (~xelra@user/xelra) (Ping timeout: 252 seconds)
[23:35:04] *** Quits: sybariten (~jake@157.90.217.120) (Ping timeout: 252 seconds)
[23:35:04] *** Quits: jaskal (jaskal@user/jaskal) (Ping timeout: 250 seconds)
[23:35:06] <earendel> i guess i could do that in a second step. ok.
[23:35:08] <tirnanog> using a for loop, that is.
[23:35:11] *** Quits: nanowire (rob@user/nanowire) (Ping timeout: 252 seconds)
[23:35:12] *** Quits: DLange (~DLange@about/linux/staff/DLange) (Ping timeout: 265 seconds)
[23:35:16] <earendel> thanks.
[23:35:17] <tirnanog> using find might be another option.
[23:35:34] *** Quits: brw (~bas@static.66.39.12.49.clients.your-server.de) (Ping timeout: 268 seconds)
[23:36:01] *** Joins: sixwheeledbeast (~zem@user/sixwheeledbeast)
[23:36:04] *** Joins: shailangsa (~shailangs@host217-39-45-200.range217-39.btcentralplus.com)
[23:36:06] *** Joins: depesz (~quassel@lana.depesz.com)
[23:36:11] *** Joins: smorgasbord (~buggy@thunix.net)
[23:36:14] *** Joins: mschiff (~mschiff@gentoo/developer/mschiff)
[23:36:20] *** Quits: magla (~gelignite@55d4d08c.access.ecotel.net) (Quit: Stay safe!)
[23:36:21] *** Joins: brw (~bas@static.66.39.12.49.clients.your-server.de)
[23:36:33] *** Joins: simplicity (~yti@user/simplicity)
[23:36:36] *** Joins: pikapika (~pikapika_@pika.powered.by.lunarbnc.net)
[23:36:38] *** Joins: sven^ (~quassel@squint.a-oben.org)
[23:36:42] *** Joins: koollman (samson_t@sp1.kooll.org)
[23:36:44] *** Joins: tedster (~Tedster@rampage.tedster.net)
[23:36:48] *** Joins: wolfshappen (~waff@irc.furworks.de)
[23:36:52] *** Joins: Philonous (~Philonous@user/philonous)
[23:36:53] *** Joins: DLange (~DLange@about/linux/staff/DLange)
[23:37:00] *** Joins: xiaomiao (~purrrr@gentoo/developer/patrick)
[23:37:16] <tirnanog> for example, using GNU find, mapfile -td '' notdirs < <(find -maxdepth 1 ! -type d ! -name '*.*' -print0)
[23:37:23] *** Joins: damyan (damyan@mail.0x4711.org)
[23:37:27] <earendel> ls !(*.*) .. seems to give me files with extensions from subdirectories
[23:37:28] *** Joins: yano (~yano@ircpuzzles/staff/yano)
[23:37:37] <tirnanog> yes, because that's what ls does.
[23:37:40] <tirnanog> ls -d wouldn't.
[23:37:42] *** Quits: chiselfuse (~chiselfus@user/chiselfuse) (Remote host closed the connection)
[23:37:42] *** Quits: Asmodee[T] (~Asmodee@gateway/tor-sasl/asmodee) (Remote host closed the connection)
[23:37:42] *** Quits: Atque (~Atque@user/atque) (Remote host closed the connection)
[23:37:42] *** Quits: gxt (~gxt@gateway/tor-sasl/gxt) (Remote host closed the connection)
[23:37:42] *** Quits: crabbedhaloablut (~crabbedha@user/crabbedhaloablut) (Write error: Connection reset by peer)
[23:37:42] *** Quits: TheHermann (~TheHerman@gateway/tor-sasl/thehermann) (Write error: Connection reset by peer)
[23:37:42] *** Quits: milkt (~debian@gateway/tor-sasl/milkt) (Read error: Connection reset by peer)
[23:37:42] *** Quits: tejr (~tejr@user/tejr) (Read error: Connection reset by peer)
[23:37:42] *** Quits: vaio (~gary@user/ghost) (Read error: Connection reset by peer)
[23:37:42] *** Quits: ano (~ano@user/ano) (Read error: Connection reset by peer)
[23:37:42] *** Quits: TheArchitect (~GodMode@user/h4x0r) (Read error: Connection reset by peer)
[23:37:42] *** Quits: fedenix_ (~fedenix@gateway/tor-sasl/fedenix) (Read error: Connection reset by peer)
[23:37:42] *** Quits: cmc (~methos@gateway/tor-sasl/cmc) (Read error: Connection reset by peer)
[23:37:42] *** Quits: totenkoph (~scythe@user/totenkoph) (Ping timeout: 276 seconds)
[23:37:54] <tirnanog> use printf if you want to test globs.
[23:37:56] *** Joins: tejr (~tejr@user/tejr)
[23:37:56] *** Joins: TheArchitect (~GodMode@user/h4x0r)
[23:37:56] *** Joins: gxt (~gxt@gateway/tor-sasl/gxt)
[23:38:00] *** Joins: vaio (~gary@user/ghost)
[23:38:03] *** Joins: crabbedhaloablut (~crabbedha@user/crabbedhaloablut)
[23:38:06] *** Joins: totenkoph (~scythe@user/totenkoph)
[23:38:12] <earendel> let my try to understand why ls does that.
[23:38:29] <tirnanog> surely, you've run ls <directory> in the past.
[23:38:34] <tirnanog> that's the behaviour you're seeing.
[23:38:34] *** Joins: cmc (~methos@gateway/tor-sasl/cmc)
[23:38:41] <earendel> you are correct. i tried to test my glob that way.
[23:38:47] *** Joins: mago (~mago@87.125.51.92)
[23:38:49] <cryptonector> where to ask questions about sed(1)?
[23:38:55] *** Quits: humky (~humky@user/humky) (Read error: Connection reset by peer)
[23:39:03] *** Joins: ano (~ano@user/ano)
[23:39:03] <earendel> tirnanog: ok. thank u
[23:39:06] <tirnanog> cryptonector: it's permitted here, but there's also a #sed channel.
[23:39:08] <cryptonector> how does one reference the 10th, 11th, etc., capture groups in sed?
[23:39:11] <llua> here is fine, there is also #sed if you want more complex stuff
[23:39:18] *** Joins: xelra (~xelra@user/xelra)
[23:39:43] *** Joins: tobybl (~tobybl@31.111.35.255)
[23:40:04] *** Joins: elkalamar (elkalamar@gateway/vpn/airvpn/elkalamar)
[23:40:07] <geirha> you don't
[23:40:17] *** Joins: jaskal (jaskal@user/jaskal)
[23:40:35] *** Joins: sybariten (~jake@157.90.217.120)
[23:40:44] <cryptonector> geirha: that's what I thought
[23:40:46] <cryptonector> bummer
[23:40:59] *** Joins: lavaball (felix@31.204.155.215)
[23:41:03] <cryptonector> thanks
[23:41:07] *** Joins: chiselfuse (~chiselfus@user/chiselfuse)
[23:41:14] *** Joins: lmv (asmo@onyx.moon-station.us)
[23:41:32] <geirha> you might manage to split it up in smaller regexes, or switch to awk or perl
[23:41:35] *** Joins: tobybl_ (~tobybl@31.111.35.255)
[23:41:35] <tirnanog> earendel: you could use printf '%s\n' or, indeed, any format of your choice.
[23:41:40] *** Quits: ayustae (Thunderbir@gateway/vpn/protonvpn/ayustae) (Quit: ayustae)
[23:41:54] *** Joins: Spydar007 (~spydar007@user/spydar007)
[23:42:12] *** Joins: ifo (~ifo@ossnext.trueinstruments.com)
[23:42:12] *** Quits: ifo (~ifo@ossnext.trueinstruments.com) (Changing host)
[23:42:12] *** Joins: ifo (~ifo@about/techtavern/ifohancroft)
[23:42:17] *** Quits: peterrooney (~peter@2604:3d08:1583:7400:dabb:c1ff:fe15:d704) (Quit: new kernel compiled - reboot)
[23:42:32] *** Joins: milkt (~debian@gateway/tor-sasl/milkt)
[23:43:18] *** Parts: ifo (~ifo@about/techtavern/ifohancroft) ()
[23:44:25] *** Quits: tobybl (~tobybl@31.111.35.255) (Ping timeout: 252 seconds)
[23:45:35] *** Quits: mihaiadrian (~Thunderbi@92.81.30.221) (Ping timeout: 250 seconds)
[23:45:47] *** Joins: mihaiadrian (~Thunderbi@82.76.223.244)
[23:46:26] *** Joins: pwndave (pwndave@2a01:4f8:c17:efa0::4)
[23:49:07] *** Quits: bigMouth` (~user@173-163-76-245-cpennsylvania.hfc.comcastbusiness.net) (Read error: Connection reset by peer)
[23:49:20] *** Joins: bigMouth` (~user@173-163-76-245-cpennsylvania.hfc.comcastbusiness.net)
[23:52:18] <earendel> ok. could i use a glob to get all files from subdirectories not having an extension?
[23:53:13] *** Quits: adac (~adac@213-47-187-80.cable.dynamic.surfer.at) (Ping timeout: 252 seconds)
[23:53:20] <tirnanog> not with a glob alone. to be clear, a glob can unambiguously match directories if it ends with the pathname separator but that's as far as it goes in bash.
[23:53:20] *** Quits: Spydar007 (~spydar007@user/spydar007) (Max SendQ exceeded)
[23:53:48] *** Joins: Betal (~Betal@user/betal)
[23:53:52] <tirnanog> for example, */ could only match directories.
[23:53:55] *** Joins: illuminated (~quassel@107-133-152-77.lightspeed.okcbok.sbcglobal.net)
[23:54:04] *** Joins: mihaiadrian1 (~Thunderbi@92.81.30.221)
[23:54:11] *** Quits: mihaiadrian (~Thunderbi@82.76.223.244) (Remote host closed the connection)
[23:54:11] *** Joins: Spydar007 (~spydar007@user/spydar007)
[23:54:12] *** mihaiadrian1 is now known as mihaiadrian
[23:54:55] <tirnanog> if your requirements are more complicated than that, you test each of the resulting words, or use some other tool (as was stated).
[23:55:03] <earendel> i tried to printf  the result of !(**/*.*) .. and in between the results there are some "bash: [: too many arguments"
[23:55:20] <earnestly> lol
[23:55:23] <tirnanog> um
[23:55:23] *** Joins: YuGiOhJCJ (~YuGiOhJCJ@gateway/tor-sasl/yugiohjcj)
[23:55:29] <tirnanog> there's something you're not telling us there.
[23:55:34] <earnestly> Indeed there is
[23:55:40] <earnestly> and it's amusing to me
[23:55:41] <tirnanog> printf - the builtin - can never have too many arguments.
[23:55:57] *** Quits: eem (~eem@user/eem) (Quit: WeeChat 3.3)
[23:56:33] *** Quits: lavaball (felix@31.204.155.215) (Remote host closed the connection)
[23:56:38] <earnestly> I wonder how earendel could lie like that, is it really just a result of not understanding what they've written?
[23:56:59] <earnestly> It seems accidental
[23:57:17] <earendel> exact line: for f in !(**/*.*); do [ ! -d $f ] && printf '%s\n' "$f"; done
[23:57:21] <tirnanog> the charitable interpretation revolve around being oblivious to the fact that remote parties cannot see their terminal.
[23:57:24] *** Quits: mago (~mago@87.125.51.92) (Quit: Client closed)
[23:57:33] *** Joins: y04nn (~y04nn@193.32.127.238)
[23:57:42] <earnestly> earendel: Do you use [ in bash for any particular reason?
[23:57:48] <earendel> shut up earnestly
[23:58:00] <llua> i like the consistent quoting there
[23:58:03] <tirnanog> hear him out.
[23:58:47] *** Quits: ackyshake (~ackyshake@user/ackyshake) (Ping timeout: 268 seconds)
[23:59:12] <tirnanog> consider this. if the value of f is "foo bar", how many arguments is the [ command given in the case of `[ ! -d $f ]`?
[23:59:21] <earendel> does it explain the result?
[23:59:30] <earnestly> Indeed it does
[23:59:32] <tirnanog> it does.
[23:59:38] <tirnanog> ![vs[[
[23:59:39] <greybot> '[', also known as 'test' is the POSIX variant of [[. [ does NOT support ==, =~, &&, ||, glob pattern matching; unquoted > and < will do file redirection instead of comparison, etc. See http://mywiki.wooledge.org/BashFAQ/031
