[00:00:04] *** Quits: Schnouki (~schnouki@user/schnouki) (Ping timeout: 245 seconds)
[00:00:24] *** habnabit is now known as habnabit_
[00:01:55] *** Joins: SebastianM (~seba@user/sebastianm)
[00:03:27] *** Joins: wyclif (~wyclif@user/wyclif)
[00:03:39] *** Quits: {HD} (~{HD}@102.165.16.232) (Ping timeout: 265 seconds)
[00:07:26] *** Quits: pwnd_sfw (~pwnd_sfw@ool-18b88100.dyn.optonline.net) (Read error: Connection reset by peer)
[00:08:00] *** Joins: pwnd_sfw (~pwnd_sfw@ool-18b88100.dyn.optonline.net)
[00:08:33] *** Quits: wyclif (~wyclif@user/wyclif) (Ping timeout: 252 seconds)
[00:08:34] *** Joins: {HD} (~{HD}@102.165.16.142)
[00:11:23] *** Quits: jinsun (~quassel@182.77.87.72) (Ping timeout: 244 seconds)
[00:15:10] *** Quits: SebastianM (~seba@user/sebastianm) (Quit: Bye)
[00:16:50] *** Joins: Midnite (~human@user/midnightlantern)
[00:19:51] *** Quits: seednode (~seednode@user/seednode) (Quit: Nihil supernum.)
[00:20:10] *** Joins: jaboiRush (~tyler@136.32.165.193)
[00:20:30] *** Quits: PantelicGR (~PantelicG@user/pantelicgr) (Quit: Leaving)
[00:20:49] *** Joins: wyclif (~wyclif@user/wyclif)
[00:21:13] *** Joins: PantelicGR (~PantelicG@user/pantelicgr)
[00:21:23] *** Quits: PJBoy (~PJBoy@user/pjboy) (Quit: Ping timeout: 252 seconds)
[00:22:04] *** Quits: PantelicGR (~PantelicG@user/pantelicgr) (Remote host closed the connection)
[00:22:16] *** Quits: jaboiRush (~tyler@136.32.165.193) (Client Quit)
[00:22:27] *** Joins: PJBoy (~PJBoy@user/pjboy)
[00:22:29] *** Joins: greedom (~greedom@2001:16b8:32e1:ca00:b0ec:132b:c35a:f2fa)
[00:22:33] *** Joins: PantelicGR (~PantelicG@user/pantelicgr)
[00:22:37] *** Joins: deviantfero (~deviantfe@190.150.27.58)
[00:22:47] *** Joins: seednode (~seednode@user/seednode)
[00:23:53] *** Quits: fizzizist (~Thunderbi@108.162.133.99) (Quit: Bye Bye)
[00:24:17] *** Joins: node1 (~node1@user/node1)
[00:25:36] *** Quits: wyclif (~wyclif@user/wyclif) (Ping timeout: 252 seconds)
[00:26:26] *** Joins: korros (korros@2600:3c03::f03c:92ff:febf:689a)
[00:28:04] *** Joins: bloodninja (~bloodninj@user/bloodninja)
[00:30:15] *** Joins: LuxuryMode (uid91005@id-91005.charlton.irccloud.com)
[00:31:04] *** Joins: kmh (~kmh@p200300df5f2f6b00b5233d555816360a.dip0.t-ipconnect.de)
[00:32:10] *** Joins: NeilRG (~NeilRG@192.222.196.111)
[00:33:41] *** Quits: seednode (~seednode@user/seednode) (Remote host closed the connection)
[00:34:17] *** Joins: seednode (~seednode@user/seednode)
[00:34:56] *** Quits: Ergo^ (~ergo@91.238.59.144) (Remote host closed the connection)
[00:35:11] <anddam> if I install PySide2 using pip, on Windows I have the Designer and Linguist app inside the package, on Linux I only have the Designer. Linguist seems to be missing although its accessory files are there
[00:35:23] <anddam> could this be a packaging issue?
[00:35:25] *** Joins: Skyz (~Skyz@ool-43538427.dyn.optonline.net)
[00:35:41] *** Quits: amahl (~amahl@dsl-jklbng12-54fbca-64.dhcp.inet.fi) (Ping timeout: 272 seconds)
[00:36:31] *** Quits: powerjungle (~powerjung@h081217087223.dyn.cm.kabsi.at) (Ping timeout: 272 seconds)
[00:37:53] *** Joins: wyclif (~wyclif@user/wyclif)
[00:38:14] *** Joins: gumm (~user@88.163.231.79)
[00:38:19] *** Quits: gumm (~user@88.163.231.79) (Remote host closed the connection)
[00:39:21] *** Quits: agumonke` (~user@88.163.231.79) (Ping timeout: 252 seconds)
[00:39:30] <greedom> you can probably install qt5 via your file manager
[00:39:43] *** Joins: agumonke` (~user@88.163.231.79)
[00:40:38] <graingert> anddam: what about with https://pypi.org/project/PySide6/ /
[00:40:41] <graingert> ?*
[00:40:56] *** Joins: powerjungle (~powerjung@h081217087223.dyn.cm.kabsi.at)
[00:41:21] *** Joins: Guddu (~Guddu@185.240.244.109)
[00:41:50] *** Quits: powerjungle (~powerjung@h081217087223.dyn.cm.kabsi.at) (Client Quit)
[00:42:56] *** Quits: wyclif (~wyclif@user/wyclif) (Ping timeout: 264 seconds)
[00:43:29] *** Quits: magla (~gelignite@55d4f5e7.access.ecotel.net) (Quit: Stay safe!)
[00:46:32] <graingert> nedbat: would you be intested in adding a .pre-commit-hooks.yaml to https://github.com/nedbat/cog ?
[00:46:39] <graingert> so people can use cog with pre-commit.ci ?
[00:47:00] <nedbat> graingert: i know nothing about it.  is there a reason not to?
[00:47:08] <nedbat> graingert: do you use cog?
[00:47:23] <graingert> I saw altendky start using it - it looks cool
[00:47:40] <graingert> I'm tempted to get it working to do mypy annotations for anyio.AsyncFile
[00:47:43] <SnoopJ> it does :)
[00:48:03] <altendky> well, i've create things with it a couple times, but they've never survived to actual merging yet i don't think.
[00:48:27] *** Joins: saml (~saml@cpe-74-73-80-162.nyc.res.rr.com)
[00:48:56] <altendky> anddam: if nothing else, there's qt6-tools.  i haven't dug yet into what pyside tends to (or intends to) include.
[00:49:05] <saml> b'\x04\x8d\x9f' => 0x048d9f (or 298399 base10 int)   how can I convert bytes into hex number (int)?
[00:49:18] *** Joins: badsektor (~badsektor@user/badsektor)
[00:49:30] <altendky> int.from_bytes perhaps
[00:49:33] <habnabit_> saml, int.from_bytes
[00:49:34] <altendky> or struct, depending
[00:49:36] <saml> ah thanks
[00:49:46] <anddam> altendky: what makes me wonder is the fact that on same python version, windows package has the tool
[00:50:41] <altendky> anddam: yeah, it may well be an error.  though i do think that including designer etc for deployed usage of an application isn't obviously good.
[00:51:11] <altendky> having it separated (even if an official package and not mine) seems sensible.
[00:52:01] *** Quits: Jormungandr89 (~brad@136.49.61.2) (Quit: Konversation terminated!)
[00:54:01] *** Joins: wyclif (~wyclif@user/wyclif)
[00:57:47] *** Joins: atrigent (~atrigent@130.44.130.244)
[00:58:02] <atrigent> more weird behavior from the mock module... https://ideone.com/VdEhwS
[00:58:44] *** Joins: feriman (~feriman@188.163.113.127)
[00:59:07] *** Quits: wyclif (~wyclif@user/wyclif) (Ping timeout: 272 seconds)
[00:59:12] *** Quits: habnabit_ (habnabit@python/site-packages/habnabit) (Quit: ZNC - http://znc.sourceforge.net)
[00:59:35] *** Quits: NeilRG (~NeilRG@192.222.196.111) (Remote host closed the connection)
[01:01:21] *** Quits: Vonter (~Vonter@user/vonter) (Ping timeout: 252 seconds)
[01:02:00] *** Joins: aslicedbanjo (~aslicedba@host31-48-146-181.range31-48.btcentralplus.com)
[01:02:35] *** Quits: aslicedbanjo (~aslicedba@host31-48-146-181.range31-48.btcentralplus.com) (Quit: Leaving.)
[01:02:49] *** Quits: bloodninja (~bloodninj@user/bloodninja) (Quit: afk)
[01:03:11] *** Quits: node1 (~node1@user/node1) (Quit: Leaving)
[01:04:14] *** Quits: Wulf (~Wulf@user/wulf) (Ping timeout: 245 seconds)
[01:04:29] <bjs> atrigent: technically the docs say "Attribute access on the mock will return a Mock object [...]. If the mock has an explicit return_value set then calls are not passed to the wrapped object and the return_value is returned instead."
[01:04:55] <bjs> so by accessing the return_value attribute it's creating a new Mock object,  and so future calls use the return_value that is set on the object (the Mock)
[01:04:57] *** Joins: aslicedbanjo (~aslicedba@host31-48-146-181.range31-48.btcentralplus.com)
[01:06:30] <bjs> Maybe Mock(wraps=f) should not try wrap the 'return_value' attribute on read? (if i'm correct in assuming that is what is happening)
[01:06:46] *** Parts: gyr (gyr@libera/sponsor/gyr) ()
[01:07:28] *** Joins: Wulf (~Wulf@user/wulf)
[01:07:44] *** Joins: Ivyy (~Ivyy@2001:a61:13f0:c401:aaad:8747:f950:e29)
[01:08:44] *** Joins: sus (thelounge@user/zeromomentum)
[01:09:25] <atrigent> bjs when it talks about "attribute access on the mock" it is talking about attributes that would want to mock, not its own attributes for accessing information about the mock
[01:09:32] *** Joins: Jormungandr89 (~brad@136.49.61.2)
[01:09:41] <bjs> atrigent: clearly not :)
[01:10:08] <atrigent> what I'm saying is the docs do not justify this behavior
[01:10:13] *** Joins: wyclif (~wyclif@user/wyclif)
[01:10:41] <bjs> atrigent: well,  they do,  i mean it's standard behaviour for a Mock that when you access return_value it creates the Mock that's used for the return
[01:10:45] *** Joins: habnabit_ (~habnabit@python/site-packages/habnabit)
[01:10:57] <bjs> then with wraps=foo it checks that return_value, and if it's set, uses it
[01:11:01] <atrigent> no, it's not standard behavior, like I said, it is NOT talking about its own attributes
[01:11:14] <bjs> atrigent: it is completely standard behaviour.  This happens even without wraps
[01:11:39] <bjs> (that first access to return_value creates a Mock that is used for future returns)
[01:11:47] *** Quits: feriman (~feriman@188.163.113.127) (Ping timeout: 272 seconds)
[01:11:57] *** Joins: octav1a (~quassel@173.195.145.98)
[01:12:01] *** Joins: Flux (~Fluxx@user/fluxx)
[01:12:01] <atrigent> you're wrong.
[01:12:14] <bjs> atrigent: `m = Mock();  ret = m.return_value;  print(m() is ret)`
[01:12:20] *** Joins: Samian (~Samian@2620:10d:c090:400::5:34b3)
[01:12:22] <Samian> if I'm ssh'd into a a gpu cluster, run a python program, but then gets disconnected, what does the python program do? Continue running until completion?
[01:12:24] <atrigent> it's amazing how people can justify things
[01:12:30] <Samian> is "ssh'd" the right word?
[01:12:34] <grym> Samian: probably dies
[01:12:40] <grym> Samian: use tmux or screen to avoid this
[01:12:50] *** Quits: SyntheticClamor (~Synthetic@2a01cb04008a92007da59076e1b0ce8b.ipv6.abo.wanadoo.fr) (Remote host closed the connection)
[01:12:55] <Samian> thanks!
[01:13:08] <SnoopJ> or disown the process (consult your shell's documentation)
[01:13:11] *** Quits: Midnite (~human@user/midnightlantern) (Ping timeout: 244 seconds)
[01:13:11] *** Joins: amahl (~amahl@dsl-jklbng12-54fbca-64.dhcp.inet.fi)
[01:13:23] <bjs> atrigent: I'm not sure what you mean.  Just forget wraps for a second and think about just the normal Mock behaviour.  In _that_ case, first access to return_value creates the Mock object which is used for all later return values
[01:13:27] *** Quits: dyslexicat (~dyslexica@ymir.whatbox.ca) (Ping timeout: 252 seconds)
[01:13:43] *** Joins: teut (~teut@182.69.85.39)
[01:14:17] <bjs> atrigent: + the fact a Mock with wraps=... will check the return_value to decide whether to pass calls to the underlying wrapped function or not.
[01:14:37] <atrigent> bjs why are you trying to justify this obvious bug?
[01:14:52] <nedbat> atrigent: maybe we can separate two possibilities:
[01:15:01] <mcint> hmm, what was the last version of gunicorn to work with python2.
[01:15:16] *** Joins: audiocat (~audio@2603-8081-1800-0062-12fa-dd6b-13e4-1047.res6.spectrum.com)
[01:15:23] <nedbat> atrigent: 1) this isn't what was meant to happen, and 2) this is what is intended, but it would be better if it were different
[01:15:32] *** Quits: wyclif (~wyclif@user/wyclif) (Ping timeout: 272 seconds)
[01:15:42] <atrigent> it's obviously 1
[01:15:44] <bjs> It's (2)
[01:15:45] <atrigent> hence it's bug
[01:15:52] <nedbat> atrigent: calm down a minute
[01:15:54] <atrigent> no.
[01:16:14] <teut> lol
[01:16:18] *** Quits: GeorgeK (~GeorgeK@cpe-70-92-5-228.wi.res.rr.com) (Remote host closed the connection)
[01:16:43] <nedbat> atrigent: ok, come back when you have calmed down.
[01:16:48] *** Quits: Flux (~Fluxx@user/fluxx) (Ping timeout: 272 seconds)
[01:17:16] <atrigent> bjs why are you trying to justify this obvious bug? I am so fascinated by the psychology of this
[01:17:20] *** Joins: salpynx (~salpynx@121.73.84.248)
[01:17:33] <nedbat> atrigent: please
[01:18:29] <bjs> atrigent: who says it's obvious?  and I'm not "justifying" the decisions, just pointing out where the docs could be read to imply this.  I could see (and infact, earlier I personally made) arguments for why the other way would be better
[01:19:04] <atrigent> the docs do not imply it. you are misinterpreting them.
[01:19:17] <bjs> "default behaviour of generating a Mock on first access to return_value coupled with wraps checking for existing of return_value"
[01:19:23] <bjs> atrigent: okay which of the two things do you say the docs don't imply?
[01:20:06] <nedbat> atrigent: you are claiming to know the intentions of the author of the library.
[01:20:30] <nedbat> atrigent: we get it that you don't like it. We can see the point that it would be better if it didn't happen.
[01:20:58] <atrigent> no, I am claiming to have used the library and understand its purpose and have read the code and documentation extensively
[01:20:59] <SnoopJ> it is indeed gross, but I think the reading of the docs is correct
[01:21:13] <SnoopJ> if you're convinced it's a bug, there is perhaps nothing to be done but to file a bug report
[01:21:26] <nedbat> atrigent: how can we help you?
[01:21:42] <bjs> atrigent: so you disagree that Mock objects generally create a Mock object on first access to the return_value attribute?
[01:21:51] *** Quits: cellofellow (~user@166.70.50.58) (Read error: Connection reset by peer)
[01:22:03] <bjs> If you feel the behaviour is wrong, a bpo is best
[01:22:08] *** Joins: tgburrin (~RickDecka@pool-100-12-189-215.nycmny.fios.verizon.net)
[01:23:08] <Guddu> Oracle upon ordering (descending) shows a row with value such as 200710231221 before B20210610010. Isn't that wrong?
[01:23:09] <Guddu> >>> '200710231219'>'B20210610010'
[01:23:10] <Guddu> False
[01:23:39] <bjs> Guddu: maybe Python and Oracle disagree about how to order strings.  There's no universally accepted method
[01:23:46] *** Quits: kosh (~kosh@user/kosh) (Ping timeout: 272 seconds)
[01:24:14] *** Quits: Payam (~Payam@138.106.57.132) (Ping timeout: 250 seconds)
[01:25:07] *** Joins: cellofellow (~user@166.70.50.58)
[01:25:28] *** Quits: jinie (~jimmy@188.114.173.37) (Quit: ZNC 1.8.2 - https://znc.in)
[01:25:35] *** Quits: RickDeckard (~RickDecka@pool-100-12-189-215.nycmny.fios.verizon.net) (Ping timeout: 244 seconds)
[01:25:35] <habnabit_> Guddu, this is known as 'collation' fwiw
[01:25:42] <grawity>  https://docs.oracle.com/cd/B12037_01/server.101/b10749/ch5lings.htm has a whole lot to say about this
[01:26:00] <grawity> I think e.g. in MySQL it would depend on the "collation" that was assigned to the column?
[01:26:45] <SnoopJ> The thing I find confusing is that the docs don't *exactly* make it clear that attributes on the Mock object (not just return_value) aren't passed through to the wrapped thingy
[01:27:03] <bjs> SnoopJ: it's super unclear
[01:27:08] <bjs> and a little contradictory
[01:27:58] *** Quits: Crassus (~Crassus@user/crassus) (Quit: My MacBook has gone to sleep. ZZZzzz…)
[01:28:20] *** Joins: wyclif (~wyclif@user/wyclif)
[01:29:18] <bjs> "so attempting to access an attribute that doesn’t exist will raise an AttributeError" (exist on _what_?)  "created on first access" (always? what counts as access?)
[01:29:24] <SnoopJ> Yea, the existing wording makes it sound like *all* attribute access will hit the wrapped thing, but this is glossing a bit much
[01:29:53] <SnoopJ> and it fails to mention at all that the Mock will raise an AttributeError for dunders
[01:30:05] <graingert> that's for MagicMock right?
[01:30:06] *** Joins: merijn (~merijn@83-160-49-249.ip.xs4all.nl)
[01:30:16] <bjs> graingert: no for Mock(wraps=f)
[01:30:27] <graingert> you can use MagicMock(wraps=f)
[01:30:34] <bjs> graingert: yes but we're not talking about MagicMock :)
[01:30:51] *** Quits: bss (bss@rie.incorporeal.org) (Quit: brb)
[01:31:16] <SnoopJ> graingert, what I mean is that nothing in the documentation of Mock is making it clear that mock.__name__ is unambiguously an AttributeError
[01:31:18] <bjs> and I think MagicMock does the same thing. e.g. doesn't attempt to wrap the Mock's own attributes and instead falls on the default behaviour
[01:31:22] *** Joins: powerjungle (~powerjung@h081217087223.dyn.cm.kabsi.at)
[01:31:23] <Guddu> Thanks graingert habnabit_
[01:31:37] <bjs> for e.g. .return_value and .mock_calls and such
[01:31:39] *** Quits: aslicedbanjo (~aslicedba@host31-48-146-181.range31-48.btcentralplus.com) (Quit: Leaving.)
[01:31:40] <graingert> tbh always use MagicMock over Mock
[01:32:00] <SnoopJ> bjs, it seems like it's a bit more textured than that, even: https://github.com/python/cpython/blob/main/Lib/unittest/mock.py#L630-L636
[01:32:25] *** Joins: Thanatos (~Thanatos@102.89.2.104)
[01:32:42] <bjs> graingert: yes but MagicMock still has the same behaviour in atrigent's example no?
[01:32:52] *** Quits: GreenResponse (~tomek@r-45-155-148-237.gpon.bialnet.pl) (Quit: Leaving)
[01:32:56] <bjs> first access to magic_mock.return_value creates the new (Magic)Mock just like usual
[01:33:07] <bjs> and then future calls use that created return_value
[01:33:20] *** Quits: wyclif (~wyclif@user/wyclif) (Ping timeout: 264 seconds)
[01:33:27] <bjs> The more I read the docs and the more I think the more I'm thinking there was a third option in nedbat's list
[01:33:32] <bjs> (3) this is correct and intended
[01:33:34] <SnoopJ> yes, it has the same behavior (for __name__ and other dunders that aren't one of the enumerated ones, too)
[01:33:41] *** Quits: Akuli (~Akuli@82-203-160-193.bb.dnainternet.fi) (Quit: Leaving)
[01:33:51] <atrigent> HAHAHA
[01:33:56] <bjs> atrigent: haha?
[01:34:44] <nedbat> atrigent: write a bug report, and work it out with the author
[01:34:54] *** Quits: ThanatosJ (~Thanatos@197.210.64.30) (Ping timeout: 252 seconds)
[01:35:18] *** Quits: ali1234 (~al@user/ali1234) (Remote host closed the connection)
[01:35:23] *** Joins: ali12341 (~al@user/ali1234)
[01:36:05] <graingert> also you can do stuff like:
[01:36:05] <graingert> m = mock.MagicMock(wraps=f, **{"ham.spam.return_value": 2})
[01:36:35] <bjs> graingert: yeah we get MagicMocks are great but I think you're not really engaging with the real question
[01:36:37] *** Joins: Meteorhead (~Meteorhea@165.225.21.61)
[01:37:06] *** Joins: wyclif (~wyclif@user/wyclif)
[01:38:13] <graingert> 🤷
[01:38:52] <bjs> well
[01:38:53] <bjs> fair enough
[01:39:09] *** Joins: Midnite (~human@user/midnightlantern)
[01:39:18] <bjs> atrigent:  bugs.python.org/ is the best place to go if you want to get it "fixed"
[01:39:44] <SnoopJ> I think altering the `wraps` documentation to clarify that Mock is aware of its own methods and the general idea of a dunder would make this behavior less confusing
[01:40:21] <atrigent> yall are hilarious
[01:40:25] <bjs> atrigent: what's so funny?
[01:40:30] <SnoopJ> I see what bjs means by `wraps` maybe precluding this, but I think there are cases where you'd want to pass-through attribute access, but not calls
[01:40:41] *** Joins: GeorgeK (~GeorgeK@cpe-70-92-5-228.wi.res.rr.com)
[01:41:18] *** Quits: Guddu (~Guddu@185.240.244.109) (Quit: Leaving)
[01:41:44] <bjs> It's clear that you want _some_ attributes of the Mock you want to not get wrapped or AttributeError, e.g. the assert_* methods and call_count and such
[01:42:04] <bjs> and those attributes should have the standard Mock behaviours (probably)
[01:42:08] *** Quits: wyclif (~wyclif@user/wyclif) (Ping timeout: 252 seconds)
[01:42:34] <bjs> atrigent: I'm still unclear which part of my reasoning you disagree with,  the part about return_value being created on first access or the part about wraps using it if it exists
[01:43:41] *** Quits: Skyz (~Skyz@ool-43538427.dyn.optonline.net) (Quit: Client closed)
[01:44:16] <bjs> atrigent: both of those two things at least are very clear in the docs,  it's only the interaction of how `wraps` interacts with the standard attributes on the Mock object.
[01:44:23] <atrigent> bug has already been reported here: https://bugs.python.org/issue31807
[01:44:31] <bjs> I think Mocks are badly designed to try put all these attributes on the Mocks directly, it causes so many questions like this
[01:45:49] <habnabit_> atrigent, bpo is a graveyard of things nobody cares about fixing
[01:46:07] <atrigent> like all bug databases
[01:47:04] <bjs> atrigent: that seems like a different thing,  where the implementation of autouse doesn't correctly account for the default behaviour of creating a new Mock on first access to return_value and indeed the submitted patch does not change this behaviour
[01:47:06] *** Quits: amahl (~amahl@dsl-jklbng12-54fbca-64.dhcp.inet.fi) (Remote host closed the connection)
[01:47:07] *** Joins: dob1_ (~dob1@user/dob1)
[01:47:23] <atrigent> it's not different and I really don't care to explain why
[01:47:27] <SnoopJ> okay
[01:47:34] *** Quits: dob1_ (~dob1@user/dob1) (Remote host closed the connection)
[01:48:01] <atrigent> they have the same root cause
[01:48:13] <bjs> atrigent: how is it not different?  it's a bug in a different feature caused by the implementation not taking into account the thing you have found, and the submitted patch that fixes it does not change the behaviour of return_value
[01:48:16] <bjs> well
[01:48:38] *** Quits: Bronto22 (~mennoh@84-86-247-193.fixed.kpn.net) (Quit: Konversation terminated!)
[01:49:03] * SnoopJ would file a separate bug
[01:49:22] <bjs> Yes it's a separate bug
[01:49:24] <bjs> "bug"
[01:49:34] <bjs> or at least, it should be considered separately
[01:49:35] <SnoopJ> ticket, I guess
[01:49:50] <atrigent> you are correct that the submitted patch wouldn't fix the code I linked. but that just means the patch isn't sufficient
[01:50:02] <bjs> atrigent: no it fixes the bug in the bpo precisely and totally and completely
[01:50:09] <atrigent> ok dude
[01:50:32] <bjs> atrigent: just make an issue on the tracker
[01:50:34] *** Quits: manti7 (~manti7@176.10.104.94) (Quit: WeeChat 3.1)
[01:50:37] *** Quits: dob1 (~dob1@user/dob1) (Ping timeout: 272 seconds)
[01:52:31] *** Quits: omen (~omen@user/omen) (Quit: Leaving)
[01:53:16] *** Joins: ThanatosJ (~Thanatos@197.210.28.85)
[01:54:10] *** Quits: Wulf (~Wulf@user/wulf) (Ping timeout: 272 seconds)
[01:54:12] *** Quits: teut (~teut@182.69.85.39) (Quit: Connection closed)
[01:54:12] *** Joins: wyclif (~wyclif@user/wyclif)
[01:54:29] <Samian> grym: screen is nice! It's much easier than I remember tmux was when I tried tmux 4 years ago
[01:54:58] <Samian> ctrl + a + d to detach and screen -r to reattach! nniiice and simple!!
[01:55:21] <SnoopJ> it's a much smaller set of functionality, tmux was built to be a super-duper screen
[01:55:31] <FunkyBob> Samian: interesting, given tmux is the newer product supposed to supplant screen :P
[01:55:39] <FunkyBob> yeah
[01:55:40] *** Quits: tgburrin (~RickDecka@pool-100-12-189-215.nycmny.fios.verizon.net) (Quit: Leaving...)
[01:55:45] <Samian> which do you guys prefer?
[01:55:46] <SnoopJ> with a much less ergonomic default leader
[01:55:48] *** Quits: Thanatos (~Thanatos@102.89.2.104) (Ping timeout: 252 seconds)
[01:56:06] <FunkyBob> i use screen because I learned it, before tmux was a thing
[01:56:07] * SnoopJ uses tmux with C-a as the prefix (because of GNU screen)
[01:56:13] <Samian> tmux makes no sense. Why have sub window quadrants when I can have multiple terminal windows?
[01:56:16] <FunkyBob> also, C-a is easier to type :P
[01:56:19] <habnabit_> i use tmux with C-q as the prefix
[01:56:21] <SnoopJ> Samian, tmux can do both
[01:56:25] <habnabit_> C-q is great
[01:56:28] <bjs> have I got #python and #python-offtopic mixed up :P
[01:56:29] <FunkyBob> no doubt
[01:56:46] <Samian> whoops this is not #python-offtopic sorry
[01:57:20] <SnoopJ> as penance for offtopic, grym made me recently aware of libtmux, it's cool! https://libtmux.git-pull.com/index.html
[01:57:30] <grym> you can do all sorts of evil with it
[01:57:31] <grym> i mean
[01:57:32] <grym> uh
[01:57:36] <grym> automate normal behavior
[01:59:08] *** Quits: wyclif (~wyclif@user/wyclif) (Ping timeout: 264 seconds)
[02:00:15] *** PJBoy is now known as Guest3753
[02:00:15] *** Quits: Guest3753 (~PJBoy@user/pjboy) (Killed (tin.libera.chat (Nickname regained by services)))
[02:00:18] *** Quits: lukka5 (~lukka5@246-60-231-201.fibertel.com.ar) (Ping timeout: 268 seconds)
[02:00:24] *** Joins: PJBoy (~PJBoy@user/pjboy)
[02:01:23] *** Quits: Deesl (~bsdboy@redhat/psirt/Deesl) (Quit: My MacBook has gone to sleep. ZZZzzz…)
[02:01:26] <grym> it doesn't support the 3.x tmux series with posframes though
[02:03:32] <voldial> How do I go from PosixPath('/tmp/_byte128/\udc80') to /tmp/_byte128/''$'\200'?  https://bpa.st/BE2A
[02:04:03] *** Quits: merijn (~merijn@83-160-49-249.ip.xs4all.nl) (Ping timeout: 252 seconds)
[02:04:56] *** Joins: ackyshake (~ackyshake@user/ackyshake)
[02:05:27] <habnabit_> voldial, what would it mean to go 'to' that? what is your goal with that path?
[02:05:56] *** Quits: GenTooMan (~cyberman@2601:547:437f:e5c6:21f:5bff:fefe:a883) (Remote host closed the connection)
[02:05:56] *** Joins: bss (bss@rie.incorporeal.org)
[02:06:08] <voldial> habnabit_: I want to print the representation ls shows
[02:06:38] <habnabit_> voldial, and then what? are you generating a .sh file?
[02:06:50] *** Quits: slav0nic (slav0nic@python.su) (Ping timeout: 272 seconds)
[02:07:42] <voldial> habnabit_: no, this is just to learn.
[02:08:01] <voldial> for example, implementing ls.py
[02:08:21] *** Quits: neceve (~quassel@2a02:c7f:607e:d600:a95a:ecd2:e57a:3130) (Ping timeout: 272 seconds)
[02:08:21] *** Joins: superboot (~agentgasm@user/superboot)
[02:08:25] <voldial> (I'm messing with my tool https://github.com/jakeogh/angryfiles )
[02:08:27] <habnabit_> voldial, but what are you intending to learn? it's a very weird format to print anything in and substantially less useful than python's default choice
[02:08:50] <voldial> habnabit_: I want to learn how to reproduce ls's output
[02:10:03] <habnabit_> voldial, ok. it's a weird format and you'll have to generate it yourself. "''$\{:03o}'".format(128) or whatever
[02:10:05] *** Joins: ssbr (~ssbr@c-174-61-157-141.hsd1.wa.comcast.net)
[02:10:34] *** Joins: pretty_dumm_guy (trottel@gateway/vpn/protonvpn/prettydummguy/x-88029655)
[02:10:54] <voldial> habnabit_: thanks, I thought I must be missing some builtin to pathlib, but yea, understood. Much appreciated.
[02:10:59] *** Quits: saml (~saml@cpe-74-73-80-162.nyc.res.rr.com) (Remote host closed the connection)
[02:11:16] *** Joins: disi (~disi@107-131-127-0.lightspeed.sntcca.sbcglobal.net)
[02:11:27] *** Joins: wyclif (~wyclif@user/wyclif)
[02:11:40] <SnoopJ> $'\200' is a shell escape
[02:12:25] <voldial> SnoopJ: yea... and I found "from shlex import quote" but it doesnt do that afict
[02:12:37] *** Quits: wedof (~wedof@2a02:810c:c0:3b98:aaa1:59ff:fe1e:4d38) (Remote host closed the connection)
[02:12:49] *** Joins: wedof (~wedof@2a02:810c:c0:3b98:aaa1:59ff:fe1e:4d38)
[02:13:02] *** Joins: fedenix_ (~fedenix@gateway/tor-sasl/fedenix)
[02:13:19] *** Quits: greedom (~greedom@2001:16b8:32e1:ca00:b0ec:132b:c35a:f2fa) (Remote host closed the connection)
[02:14:27] *** Quits: DragoonAethis (~quassel@2a01:4f8:c2c:3359::1) (Remote host closed the connection)
[02:14:29] *** Quits: luna-is-here (~quassel@2a02:908:f761:2a3c::a) (Remote host closed the connection)
[02:14:30] <habnabit_> shlex chooses a way to quote strings, but it isn't the one you wanted
[02:14:32] <SnoopJ> voldial, why would it? What you want to do is reverse the escaping, I'd expect a function that could to be called unescape()
[02:14:37] *** Joins: ______GOD______ (~GOD@189.174.198.176)
[02:14:39] <habnabit_> SnoopJ, no, it's escaping
[02:15:02] <SnoopJ> it's certainly not quoting, anyway
[02:15:18] *** Joins: Deesl (~bsdboy@redhat/psirt/Deesl)
[02:15:19] <habnabit_> eeehhhh either way
[02:15:25] *** Quits: fedenix (~fedenix@gateway/tor-sasl/fedenix) (Ping timeout: 252 seconds)
[02:15:28] <SnoopJ> I'm not sure there's a unique such representation either
[02:15:29] <habnabit_> i would say it's the same here
[02:15:35] <habnabit_> oh it's definitely not unique
[02:15:37] <voldial> SnoopJ: indeed, just suprised there is no function laying around to do that
[02:15:39] *** Joins: luna-is-here (~quassel@2a02:908:f761:2a3c::a)
[02:15:41] *** Quits: saku (~saku@2a01:4f8:c0c:7d0::2) (Ping timeout: 252 seconds)
[02:15:42] *** Joins: DragoonAethis (~quassel@2a01:4f8:c2c:3359::1)
[02:15:45] <SnoopJ> voldial, in part because of ^
[02:16:12] *** Quits: bss (bss@rie.incorporeal.org) (Quit: brb)
[02:16:28] <voldial> yea, that's my other confusion, ''$'\200' is _also_ a valid file name and is not just byte 128...
[02:16:32] *** Quits: wyclif (~wyclif@user/wyclif) (Ping timeout: 264 seconds)
[02:16:42] *** Quits: wedof (~wedof@2a02:810c:c0:3b98:aaa1:59ff:fe1e:4d38) (Remote host closed the connection)
[02:16:50] *** Quits: gusto (~Augustus@109.255.100.54) (Quit: Textual IRC Client: www.textualapp.com)
[02:17:16] <voldial> so ls, would escape it...
[02:17:19] *** Quits: fbiagent (~fbiagent@user/fbiagent) (Remote host closed the connection)
[02:17:30] <habnabit_> voldial, a file named that would be quoted differently yes
[02:17:47] *** Joins: Nightwing52 (~Nightwing@71-221-234-170.dvnp.qwest.net)
[02:18:01] *** Joins: wedof (~wedof@2a02:810c:c0:3b98:aaa1:59ff:fe1e:4d38)
[02:18:02] <voldial> habnabit_: and that representation would also be a valid name... at some time we hit PATH_MAX... I guess I should try
[02:18:20] <Nightwing52> I am trying to make an animation in Matplotlib and take advantage of blitting, but I suspect I'm not doing it correctly. The code runs, but it runs at the same speed as if it is not blitted. https://pastebin.com/dvmSHTae
[02:18:35] <voldial> ah, hm... so the ls escape of the PATH_MAX would be longer in representation
[02:18:39] <habnabit_> voldial, it's true
[02:18:52] <voldial> ok. that's consistent
[02:19:36] *** Joins: bss (bss@rie.incorporeal.org)
[02:20:00] *** Joins: wyclif (~wyclif@user/wyclif)
[02:21:22] <SnoopJ> I don't think it's correct to say it isn't just byte 128
[02:21:35] <SnoopJ> it's \200 if you `ls -b`
[02:22:24] <SnoopJ> I think this is the behavior of --quoting-style=shell-escape
[02:22:34] *** Quits: Samian (~Samian@2620:10d:c090:400::5:34b3) (Ping timeout: 245 seconds)
[02:22:40] <voldial> SnoopJ: -b neet. hadnt noticed that
[02:24:17] <rockSTONE> anyone have a preference on an easy-to-use async http client lib ? httpx is raising some bizarre ReadError's against sites where requests.get(sameurl) works just fine
[02:24:47] <habnabit_> rockSTONE, i haven't had issues with httpx. what's the error?
[02:24:53] *** Soni is now known as DeathProgarmming
[02:24:56] *** Quits: wyclif (~wyclif@user/wyclif) (Ping timeout: 264 seconds)
[02:25:02] <rockSTONE> httpx.ReadError: Server disconnected while attempting read
[02:25:12] *** DeathProgarmming is now known as Soni
[02:25:15] <rockSTONE> standard httpx.get()
[02:25:48] <rockSTONE> i understand the error in theory, but as i said ... standard requests lib's request.get() works on the same url just fine
[02:25:50] *** Quits: ente_ (~ente@p200300dc5f4037016fbea028d47fea8e.dip0.t-ipconnect.de) (Quit: WeeChat 3.1)
[02:25:58] <rockSTONE> i've tried providing different user-agents and whatnot, no difference
[02:26:04] *** Joins: ente_ (~ente@p200300dc5f4037016fbea028d47fea8e.dip0.t-ipconnect.de)
[02:26:17] *** Quits: ente_ (~ente@p200300dc5f4037016fbea028d47fea8e.dip0.t-ipconnect.de) (Client Quit)
[02:26:17] *** Quits: pwnd_sfw (~pwnd_sfw@ool-18b88100.dyn.optonline.net) (Quit: Ping timeout (120 seconds))
[02:26:27] *** Joins: pwnd_sfw (~pwnd_sfw@ool-18b88100.dyn.optonline.net)
[02:26:31] *** Joins: ente_ (~ente@p200300dc5f4037016fbea028d47fea8e.dip0.t-ipconnect.de)
[02:26:37] <nocko> I've received this error when attempting to reaf a response where there was no content, IIRC.
[02:26:43] *** Quits: pretty_dumm_guy (trottel@gateway/vpn/protonvpn/prettydummguy/x-88029655) (Quit: WeeChat 3.2-rc1)
[02:26:58] <rockSTONE> no content should still return back an http status code of some error or another
[02:27:38] *** Joins: p-i-_ (~Ohmu@node-ojy.pool-118-173.dynamic.totinternet.net)
[02:27:40] <nocko> I was unconditionally reading the body and not checking status_code first...
[02:27:42] <rockSTONE> i don't really want to switch over to aiohttp client because i don't feel like pulling in the entire aiohttp framework (server included) but i will if i have to :/
[02:29:37] *** Quits: Deesl (~bsdboy@redhat/psirt/Deesl) (Quit: My MacBook has gone to sleep. ZZZzzz…)
[02:30:01] <rockSTONE> hrm, httpx.head() works fine on the same url :/
[02:30:10] *** Quits: p-i- (~Ohmu@node-10tj.pool-118-173.dynamic.totinternet.net) (Ping timeout: 244 seconds)
[02:30:32] <rockSTONE> i feel like the remote nginx or whatever web server is not liking the connection and abruptly disconnecting before sending even a status code
[02:30:44] <rockSTONE> maybe even the firewall
[02:30:55] <rockSTONE> regardless, requests.get() works ... standard cmd-line curl works :/
[02:30:56] *** Joins: jazzy (~jaziz@2600:380:4547:d128:81a3:2cb3:d403:ef37)
[02:31:01] <rockSTONE> with content
[02:31:05] <habnabit_> rockSTONE, http or https
[02:31:11] <rockSTONE> http
[02:31:38] <rockSTONE> i can't give the url because it's not public and requires a custom api key param
[02:31:42] <habnabit_> rockSTONE, so you can use tcpdump/wireshark to watch the connection
[02:31:44] *** Joins: Donitz (~Donitz@85-156-203-108.elisa-laajakaista.fi)
[02:31:56] *** Quits: badsektor (~badsektor@user/badsektor) (Remote host closed the connection)
[02:32:01] <nocko> I've seen APIs blackhole requestd that didn't have a required header (e.g. x-api-key).
[02:32:07] <rockSTONE> heh, been a long time since i tried using either of those
[02:32:46] *** Quits: ente_ (~ente@p200300dc5f4037016fbea028d47fea8e.dip0.t-ipconnect.de) (Quit: WeeChat 3.1)
[02:33:11] *** Quits: ratelius (ratelius@gateway/vpn/protonvpn/ratelius) (Quit: WeeChat 3.2-rc1)
[02:33:44] *** Quits: metah4ck3r (~meta@user/metah4ck3r) (Quit: WeeChat 3.1)
[02:35:10] *** Joins: dogverflow (~dogverflo@185.163.110.119)
[02:35:18] *** Quits: Nightwing52 (~Nightwing@71-221-234-170.dvnp.qwest.net) (Quit: Client closed)
[02:35:23] *** Joins: ente_ (~ente@p200300dc5f4037016fbea028d47fea8e.dip0.t-ipconnect.de)
[02:36:15] *** Joins: xrogaan (~xrogaan@user/xrogaan)
[02:36:57] *** Joins: wyclif (~wyclif@user/wyclif)
[02:37:59] *** Quits: KevinX (~KevinX@73.156.245.3) (Ping timeout: 245 seconds)
[02:39:15] *** Quits: fedenix_ (~fedenix@gateway/tor-sasl/fedenix) (Remote host closed the connection)
[02:40:11] <rockSTONE> aiohttp.client gets back 200 with no special headers/whatever setup :/
[02:40:27] *** Joins: lsrtl_ (~lsrtl@user/lsrtl)
[02:41:27] *** Quits: Midnite (~human@user/midnightlantern) (Ping timeout: 252 seconds)
[02:42:11] <graingert> rockSTONE: use httpx instead
[02:42:25] <rockSTONE> heh
[02:42:34] *** Quits: wyclif (~wyclif@user/wyclif) (Ping timeout: 244 seconds)
[02:42:38] *** Joins: Vonter (~Vonter@user/vonter)
[02:42:46] *** Quits: lsrtl__ (~lsrtl@user/lsrtl) (Ping timeout: 244 seconds)
[02:42:46] *** Joins: KevinX (~KevinX@73.156.245.59)
[02:43:07] <graingert> which site failed?
[02:43:07] <rockSTONE> trying to use an http client lib and getting bizarre read errors that require wireshark or equiv to debug... :(
[02:43:31] <graingert> it might be the useragent
[02:44:31] <rockSTONE> i tried several, including duplicating the one curl (successfully) uses
[02:44:47] <graingert> what's the url
[02:45:01] <rockSTONE> can't disclose... private url that requires a private api_key query param
[02:45:09] *** Joins: ham5urg (~ham5urg@p5ddfdd3d.dip0.t-ipconnect.de)
[02:46:14] *** Joins: foobaz212 (~foobaz212@cpc84737-aztw28-2-0-cust8.18-1.cable.virginm.net)
[02:46:46] <SnoopJ> voldial, okay, so this behavior is part of gnulib I think
[02:46:52] *** Joins: lukka5 (~lukka5@246-60-231-201.fibertel.com.ar)
[02:47:06] <rockSTONE> tbh tho, while trying to use httpx i felt like the sync stuff was getting in the way, but i suppose that could just be me
[02:47:08] *** Quits: dogverflow (~dogverflo@185.163.110.119) (Ping timeout: 264 seconds)
[02:47:20] <graingert> rockSTONE: you can just ignore the sync stuff
[02:47:29] <rockSTONE> that's precisely what i was doing
[02:47:30] <SnoopJ> more specifically, it's defined in gnulib/lib/quotearg.h
[02:47:32] <habnabit_> rockSTONE, what happens on the wire after you issue the request?
[02:47:57] <rockSTONE> habnabit_: "the wire" disconnects immediately following the GET request... no status code, no response headers, nada
[02:48:11] <habnabit_> rockSTONE, ok, but which side sends the RST?
[02:48:27] <rockSTONE> dunno, sorry, i'm not going as far as to load up wireshark or tcpdump
[02:48:50] <habnabit_> rockSTONE, that's an unusual stance on debugging
[02:49:01] <graingert> is one doing http2 and the other http1?
[02:49:13] <rockSTONE> graingert: tried http2=True and http2=False... so not sure
[02:49:42] <rockSTONE> habnabit_: uh? my C application just ran out of memory, maybe i should enable kernel debugging?
[02:49:52] *** Quits: dcaro (~dcaro@user/dcaro) (Quit: ZNC 1.8.2 - https://znc.in)
[02:50:06] *** Joins: dcaro (~dcaro@user/dcaro)
[02:50:12] <habnabit_> rockSTONE, a weird analogy. tcpdump is a pretty superficial diagnostic tool
[02:51:24] *** Quits: agumonke` (~user@88.163.231.79) (Read error: Connection reset by peer)
[02:51:55] <rockSTONE> i've been http servers and http server applications on various platforms and many different languages over the last couple of decades ... the *only* time i've had to resort to raw tcp sniffing was when implementing my own actual http protocol in a C application not using any freely available http server libs
[02:51:57] <habnabit_> rockSTONE, it would tell you pretty directly more information about causation and let you compare headers
[02:51:58] *** Joins: agumonke` (~user@88.163.231.79)
[02:51:59] *** Quits: lukka5 (~lukka5@246-60-231-201.fibertel.com.ar) (Ping timeout: 252 seconds)
[02:52:02] <rockSTONE> been *building rather
[02:52:30] <habnabit_> rockSTONE, lucky you? it's something i do regularly
[02:53:58] <nomic> z.z.
[02:54:06] *** Quits: Vonter (~Vonter@user/vonter) (Ping timeout: 252 seconds)
[02:55:41] <graingert> habnabit_: you've changed colour again, an olive green
[02:55:45] *** Joins: wyclif (~wyclif@user/wyclif)
[02:56:05] <adder`> back to purple for me
[02:56:09] <adder`> you're olive green though
[02:56:33] <ham5urg> Is there a visualizer for nurbs-python for, which can rotate and zoom the visualization?
[02:56:39] *** Joins: Deesl (~bsdboy@redhat/psirt/Deesl)
[02:56:39] *** Joins: analognoise (~analognoi@176.113.73.171)
[02:59:02] *** Quits: ______GOD______ (~GOD@189.174.198.176) (Quit: Turning off a portion of this simulation.)
[03:00:56] *** Quits: wyclif (~wyclif@user/wyclif) (Ping timeout: 264 seconds)
[03:01:19] *** Joins: dyslexicat (~dyslexica@212.253.59.190)
[03:02:08] *** Quits: ThanatosJ (~Thanatos@197.210.28.85) (Ping timeout: 264 seconds)
[03:02:36] *** Quits: Smedles (~quassel@2403-5800-5100-f00-aaa1-59ff-fe53-1a69.ip6.aussiebb.net) (Quit: http://quassel-irc.org - Chat comfortably. Anywhere.)
[03:02:54] *** Joins: Smedles (~quassel@2403-5800-5100-f00-aaa1-59ff-fe53-1a69.ip6.aussiebb.net)
[03:04:14] *** Quits: mefistofeles (~mefistofe@user/mefistofeles) (Ping timeout: 245 seconds)
[03:04:51] *** Joins: ayustae (Thunderbir@gateway/vpn/protonvpn/ayustae)
[03:05:14] *** Quits: ayustae (Thunderbir@gateway/vpn/protonvpn/ayustae) (Client Quit)
[03:05:39] *** Quits: dyslexicat (~dyslexica@212.253.59.190) (Ping timeout: 252 seconds)
[03:05:45] *** Quits: Moosadee (~Moosadee@136.32.155.193) (Quit: Leaving)
[03:06:37] *** Joins: ayustae (Thunderbir@gateway/vpn/protonvpn/ayustae)
[03:07:23] *** Quits: foobaz212 (~foobaz212@cpc84737-aztw28-2-0-cust8.18-1.cable.virginm.net) (Quit: Client closed)
[03:07:25] *** Joins: Widdershins (widders@ps.mad.cash)
[03:10:23] *** Joins: dob1 (~dob1@user/dob1)
[03:11:40] *** Quits: ayustae (Thunderbir@gateway/vpn/protonvpn/ayustae) (Quit: ayustae)
[03:12:15] *** Quits: brownan (~brownan@136.56.137.143) (Ping timeout: 252 seconds)
[03:13:45] *** Quits: Seiryuu (~Seiryuu@ip174-103-176-143.adsl2.static.versatel.nl) (Quit: Leaving)
[03:15:52] *** Quits: Deesl (~bsdboy@redhat/psirt/Deesl) (Quit: My MacBook has gone to sleep. ZZZzzz…)
[03:16:32] <voldial> SnoopJ: thank you. interesting.
[03:19:05] <anddam> is there a proper way to get the current 2-letters locale code from env LANG?
[03:19:12] *** Joins: wyclif (~wyclif@user/wyclif)
[03:19:32] *** Joins: abhixec (~abhixec@c-67-169-139-16.hsd1.ca.comcast.net)
[03:19:56] <anddam> oh, locale.getlocale and then I parse the first element anyway
[03:23:15] *** Quits: PantelicGR (~PantelicG@user/pantelicgr) (Quit: Leaving)
[03:24:10] *** Quits: wyclif (~wyclif@user/wyclif) (Ping timeout: 268 seconds)
[03:24:43] *** Quits: cliluw (~cliluw@47.147.80.149) (Quit: Leaving)
[03:24:44] *** Quits: drincruz (~drincruz@ool-44c748be.dyn.optonline.net) (Ping timeout: 272 seconds)
[03:26:48] *** Soni is now known as base128isawesome
[03:27:18] *** Joins: lukka5 (~lukka5@246-60-231-201.fibertel.com.ar)
[03:27:38] *** Quits: abhixec (~abhixec@c-67-169-139-16.hsd1.ca.comcast.net) (Quit: leaving)
[03:27:51] *** Joins: abhixec (~abhixec@c-67-169-139-16.hsd1.ca.comcast.net)
[03:28:22] *** Joins: Deesl (~bsdboy@redhat/psirt/Deesl)
[03:29:40] *** base128isawesome is now known as Soni
[03:30:56] *** Joins: mayhew (~jm@hlfxns017vw-47-55-124-51.dhcp-dynamic.fibreop.ns.bellaliant.net)
[03:33:27] *** Quits: p-i-_ (~Ohmu@node-ojy.pool-118-173.dynamic.totinternet.net) (Remote host closed the connection)
[03:35:20] *** Joins: wyclif (~wyclif@user/wyclif)
[03:35:45] *** Joins: mefistofeles (~mefistofe@user/mefistofeles)
[03:37:00] *** Quits: agumonke` (~user@88.163.231.79) (Ping timeout: 252 seconds)
[03:37:10] <Celelibi> I guess the idea has already been proposed and rejected, but how about a warning when a variable assignment in a function would shadow a global variable?
[03:38:11] <squirrel> Celelibi: IDEs already do that
[03:38:49] <Celelibi> So...?
[03:39:21] <nedbat> Celelibi: pylint will also tell you that.
[03:39:40] *** Joins: Fiji (~Fiji@user/fiji)
[03:40:32] *** Quits: wyclif (~wyclif@user/wyclif) (Ping timeout: 264 seconds)
[03:40:56] <Celelibi> I mean. The scoping rules of python are maybe non-trivial. I struggled with them a few years ago, a friend of mine just got bitten trying to modify a global variable from inside a function.
[03:41:34] <SnoopJ> doing that check on every assignment is not a small amount of additional work
[03:41:39] *** Quits: Norore (~weechat@2a01:e0a:23a:5600:b9d3:ae19:12de:25b) (Quit: WeeChat 3.1)
[03:42:23] <Celelibi> Then maybe only when raising a "referenced before assignment"?
[03:42:36] <SnoopJ> ...?
[03:43:16] <Celelibi> UnboundLocalError: local variable 'x' referenced before assignment
[03:43:21] *** Quits: wedof (~wedof@2a02:810c:c0:3b98:aaa1:59ff:fe1e:4d38) (Remote host closed the connection)
[03:44:55] <KirkMcDonald> Whether a module-level name is being shadowed can be determined statically, at least to within some confidence (excluding shenanigans with dynamically creating module-level names).
[03:45:47] <KirkMcDonald> But you don't know whether you're referencing a local before assignment until runtime.
[03:46:21] *** Quits: PJBoy (~PJBoy@user/pjboy) (Ping timeout: 252 seconds)
[03:46:29] *** Joins: markcerv (~markcerv3@c-24-5-22-21.hsd1.ca.comcast.net)
[03:47:19] *** Joins: GenTooMan (~cyberman@2601:547:437f:e5c6:21f:5bff:fefe:a883)
[03:47:42] <Celelibi> Yeah. So when cpython finds this kind of error. Maybe the message could be more explicit.
[03:48:28] <bjs> Celelibi: you mean, if it also finds a global with the same name to give a helpful message?
[03:48:38] <Celelibi> yup
[03:48:52] <Yhg1s> Celelibi: more explicit than what it already says? It's quite explicit, and easily googleable, and contains all the information Python has.
[03:48:52] <bjs> Celelibi: what would the message be for that case?  it seems a bit too generic
[03:49:32] <Celelibi> Appending a "possible missing 'global' statement" maybe?
[03:49:39] *** Quits: mefistofeles (~mefistofe@user/mefistofeles) (Ping timeout: 252 seconds)
[03:49:45] <Yhg1s> Celelibi: except you can't tell if that's the case, and it might actually be the wrong suggestion.
[03:49:50] *** Quits: jstein (~jstein@gentoo/developer/jstein) (Quit: quit)
[03:49:53] <bjs> Celelibi: when e.g. people come here it's quite often not the right solution
[03:49:57] *** Joins: duso (~duso@pa49-197-12-252.pa.qld.optusnet.com.au)
[03:50:02] *** Joins: gerard (~gerard@user/gerard)
[03:50:52] <bjs> it's been my experience that (for at least, beginner programmers who ask questions here) that the issue is either a missing assignment in a particular branch,  or more commonly: trying to read a global but write a local later on
[03:51:09] <bjs> and our solution is usually "rename the local" rather than "use global",  and the message would be quite long if it said all of that.
[03:51:13] <KirkMcDonald> I would say that the issue with Python's scoping rules is that they are backward compared to basically every other language.
[03:51:37] <Yhg1s> And yet it's usually not people experienced with other languages that encounter this problem.
[03:51:46] *** Joins: hrtk (~hritik@223.226.188.53)
[03:51:49] <KirkMcDonald> In most languages, you declare a variable in the place where they exist. In Python, you declare a variable when it exists somewhere else.
[03:51:53] <hrtk> is there a way in pytest/unittest to stop a test after a certain number of objects of type X have been created ?
[03:51:58] *** Joins: wyclif (~wyclif@user/wyclif)
[03:52:00] <Celelibi> KirkMcDonald, yeah, but python's scoping rules aren't going anywhere.
[03:52:15] <KirkMcDonald> Celelibi: I'm just saying, this tends to be the source of the confusion.
[03:52:42] <bjs> KirkMcDonald: perhaps the error messages should come with links to a page on python.org or something that explains the error message and the common causes
[03:53:09] <bjs> other languages do that,  although I'm not sure people actually ever follow the link and read what it says very often
[03:53:40] <Yhg1s> also, would the link really be better than a google result for the error message? :)
[03:53:48] <Celelibi> Wouldn't this be a first for python? To include a link in an error message?
[03:54:03] <bjs> Yhg1s: depends whether you want a properly written source by someone who knows the language,  or some random stackoverflow answer for Python 2.6
[03:54:04] <bjs> :D
[03:54:15] <Yhg1s> bjs: as long as it's right, don't care :)
[03:54:16] <bjs> (ok in this case it doesn't matter, but still)
[03:54:58] *** Parts: blackout69 (~blackout6@net-109-117-245-193.cust.vodafonedsl.it) ()
[03:56:32] *** Quits: Auron (~Auron956@user/auron) (Remote host closed the connection)
[03:56:59] <nedbat> hrtk: I think you would have to instrument class X to stop after a certain number of objects were created.  Can you tell us more about X and why you want the test to stop?
[03:57:02] *** Quits: wyclif (~wyclif@user/wyclif) (Ping timeout: 272 seconds)
[03:57:34] <nedbat> hrtk: if you can't change class X, you could perhaps patch the class from the test
[03:57:38] *** Roey is now known as JelliedMisery
[03:57:46] *** Joins: bigRoo (~user@131.236.54.84)
[03:57:48] *** Joins: scadman (~scadman@cpc145252-maid8-2-0-cust473.20-1.cable.virginm.net)
[03:57:55] *** JelliedMisery is now known as CongealedHappine
[03:58:07] *** CongealedHappine is now known as CongealedHappins
[03:58:18] *** CongealedHappins is now known as CongealdHappness
[03:59:27] *** Quits: fofoni (~fofoni@user/fofoni) (Quit: Leaving)
[04:00:40] <hrtk> nedbat: The function to be tested scrapes some information from lots of webpages and creates objects of class X. I don't want the function to scrape everything everytime just to run tests. For that, I'll need to make it stop after a certain number of object X are created (ie everything is working properly).
[04:00:43] *** Joins: merijn (~merijn@83-160-49-249.ip.xs4all.nl)
[04:00:48] *** Quits: jdmark (~jdmark@67.8.137.130) (Quit: Leaving)
[04:00:57] <hrtk> I cannot change class X, perhaps I should look into patching
[04:01:06] *** Joins: jdmark (~jdmark@67.8.137.130)
[04:01:15] <nedbat> hrtk: do you want the test to actually scrape the web sites?
[04:01:48] <hrtk> nedbat: Yes. The web pages return some json data. I need to make sure that the data is valid in the test.
[04:02:04] *** Quits: entuland (~entuland@user/entuland) (Quit: Leaving)
[04:02:10] <nedbat> hrtk: you are testing the web pages? or how your code processes the web data?
[04:02:49] <hrtk> The code fetches web data and converts them to objects of class X then proceeds to fill them up in a database.
[04:03:18] *** Quits: Ivyy (~Ivyy@2001:a61:13f0:c401:aaad:8747:f950:e29) (Quit: Leaving)
[04:03:20] *** Quits: tg (~tg@rockylinux/infra/tg) (Quit: tg)
[04:03:33] <nedbat> hrtk: yes, but I'm wondering what part in particular you are testing? Are the tests meant to check that the pages have the right data? Or are they supposed to check that the data is converted into the correct objects?
[04:03:34] *** Joins: Ivyy (~Ivyy@2001:a61:13f0:c401:aaad:8747:f950:e29)
[04:03:58] *** Joins: ponadm_ (pony@gateway/vpn/protonvpn/ponadm)
[04:04:04] <hrtk> nedbat: The tests need to check that the data was successfully converted into X objects.
[04:04:13] <hrtk> Implying that there is no formatting error on the web pages
[04:04:38] *** Joins: p-i- (~Ohmu@node-ojy.pool-118-173.dynamic.totinternet.net)
[04:04:38] *** Quits: odoood (~odoood@2601:c8:c003:a550::2) (Ping timeout: 272 seconds)
[04:04:51] *** Quits: superboot (~agentgasm@user/superboot) (Quit: leaving)
[04:04:54] <nedbat> hrtk: ok, so you might want to avoid actually scraping the web pages entirely, and use mocked responses.  That might also let you control how many "scrapes" happen.
[04:05:02] <nedbat> and will make the tests go faster anyway
[04:05:20] <hrtk> I looked into pytest-timeout which sounded something similar. I thought of timing out the test after a few seconds then check if the objects of class X were created. But pytest-timeout doesn't seem to work in that way.
[04:05:53] <hrtk> nedbat: No. That's the entire point. I cannot mock response. The actual data from the webapage needs to be checked.
[04:06:04] <nedbat> hrtk: why does it need to be actual data?
[04:06:07] *** Quits: Ivyy (~Ivyy@2001:a61:13f0:c401:aaad:8747:f950:e29) (Remote host closed the connection)
[04:06:19] <hrtk> nedbat: Because the upstream changes data format which breaks our function
[04:06:54] *** Joins: cul8r (~cul8r@2601:8c3:4000:b0d0::16bd)
[04:06:54] <nedbat> hrtk: what do you do when the format is the same, but the data has changed?
[04:07:13] <nedbat> hrtk: how do you know what objects should have been created?
[04:07:39] <hrtk> nedbat: There is a particular class type X. If any object of that type was created in that function then the data was good.
[04:08:08] <hrtk> hrtk: If format is same and data has changed, my test doesn't concern itself with that.
[04:08:26] *** Quits: YaknotiS (~YaknotiS@cpc1-cmbg18-2-0-cust87.5-4.cable.virginm.net) (Ping timeout: 272 seconds)
[04:08:34] <nedbat> hrtk: and you don't have a way to call scrape_just_one_page or something?
[04:08:51] *** Quits: p-i- (~Ohmu@node-ojy.pool-118-173.dynamic.totinternet.net) (Ping timeout: 244 seconds)
[04:09:02] <hrtk> nedbat: No. Would have been easier if we had that.
[04:09:10] *** Joins: wyclif (~wyclif@user/wyclif)
[04:09:37] <Yhg1s> hrtk: fetch a subset of the pages through some other means, feed them to your processing tool through a fake.
[04:10:10] <Yhg1s> (I hope you're also writing separate tests for your processing tool, and that this website is okay with you scraping them in tests.)
[04:10:16] <hrtk> Yhg1s: there is not just one function to test. All different function fetch different types of pages with different types of data (but in the end all of them create objects of type X)
[04:10:36] *** Quits: Techcable (~Techcable@168.235.93.147) (Quit: ZNC - https://znc.in)
[04:10:38] <Yhg1s> hrtk: I'm not sure how that changes the problem.
[04:10:40] <hrtk> Yhg1s: Yes. The website is OK with us fetching data.
[04:10:46] *** Quits: Deesl (~bsdboy@redhat/psirt/Deesl) (Quit: Textual IRC Client: www.textualapp.com)
[04:11:09] *** Joins: Techcable (~Techcable@168.235.93.147)
[04:11:37] <hrtk> Yhg1s: The way those pages are fetched is decided by the respective function. So I cannot just fetch a subset.
[04:12:27] <Yhg1s> hrtk: that's separate functionality that you should test separately. If you can't change the code so you can fetch subsets of data, you will have to replicate the fetching of data in a way that *does* let you fetch subsets, and feed that data to the code under test.
[04:13:22] <hrtk> I'm considering two options. Using multithreading to interrupt the test after a few seconds then check if the objects were created. Or, patch my function to stop after a certain number of X objects are created. Not sure about both the approaches though.
[04:13:34] *** Quits: samhain (~samhain@bleedangel.com) (Changing host)
[04:13:34] *** Joins: samhain (~samhain@user/samhain)
[04:13:37] <Yhg1s> hrtk: the former will not work. you can't interrupt a thread.
[04:13:45] <Yhg1s> the latter is pretty much what nedbat already suggested.
[04:13:56] *** Quits: ponadm_ (pony@gateway/vpn/protonvpn/ponadm) (Remote host closed the connection)
[04:14:01] *** Quits: wyclif (~wyclif@user/wyclif) (Ping timeout: 244 seconds)
[04:14:09] <hrtk> Yes, that's where I got the idea.
[04:14:40] <hrtk> Thanks both of you. I'll try and see how it goes.
[04:14:58] *** Joins: mefistofeles (~mefistofe@user/mefistofeles)
[04:15:31] *** Joins: dme86 (~dan@user/dan86)
[04:19:20] *** Joins: dyslexicat (~dyslexica@212.253.59.190)
[04:20:05] *** Quits: FluffyMask (~FluffyMas@user/fluffymask) (Quit: WeeChat 2.9)
[04:20:28] *** Quits: dme86 (~dan@user/dan86) (Ping timeout: 272 seconds)
[04:21:26] *** Quits: zeenk (~zeenk@2a02:2f04:a310:b600:b098:bf18:df4d:4c41) (Quit: Konversation terminated!)
[04:23:19] *** Quits: dyslexicat (~dyslexica@212.253.59.190) (Ping timeout: 244 seconds)
[04:23:57] *** Quits: Techcable (~Techcable@168.235.93.147) (Quit: ZNC - https://znc.in)
[04:25:06] *** Joins: wyclif (~wyclif@user/wyclif)
[04:25:10] *** Quits: CodeMouse92 (~CodeMouse@user/codemouse92) (Quit: Oh freddled gruntbuggly | Thy micturations are to me | As plurdled gabbleblotchits | On a lurgid bee)
[04:25:16] *** Joins: Techcable (~Techcable@168.235.93.147)
[04:28:02] *** Quits: HurricaneHarry (~quassel@2a02-a455-9d06-1-74ad-ad7c-8da2-b706.fixed6.kpn.net) (Ping timeout: 265 seconds)
[04:29:25] *** Quits: ZedHedTed (~ZedHedTed@pool-98-118-47-241.bstnma.fios.verizon.net) (Remote host closed the connection)
[04:33:49] *** Joins: superboot (~agentgasm@user/superboot)
[04:34:08] *** Joins: drincruz (~drincruz@ool-44c748be.dyn.optonline.net)
[04:34:41] *** Quits: merijn (~merijn@83-160-49-249.ip.xs4all.nl) (Ping timeout: 244 seconds)
[04:35:30] *** Joins: re (~re@user/re)
[04:39:51] *** Quits: ackyshake (~ackyshake@user/ackyshake) (Quit: Soupy Twist!)
[04:40:01] *** byzandula1 is now known as byzandula
[04:43:13] *** Quits: scadman (~scadman@cpc145252-maid8-2-0-cust473.20-1.cable.virginm.net) (Quit: Konversation terminated!)
[04:44:00] *** Quits: duso (~duso@pa49-197-12-252.pa.qld.optusnet.com.au) (Quit: leaving)
[04:44:08] *** Quits: wyclif (~wyclif@user/wyclif) (Ping timeout: 264 seconds)
[04:45:38] *** Quits: hrtk (~hritik@223.226.188.53) (Quit: Took the red pill)
[04:45:45] *** Quits: ssbr (~ssbr@c-174-61-157-141.hsd1.wa.comcast.net) (Ping timeout: 252 seconds)
[04:46:01] *** Quits: kenoba (~kenoba@ip68-0-248-40.ri.ri.cox.net) (Quit: The Lounge - https://thelounge.chat)
[04:46:02] *** Quits: predmijat (~predmijat@mail.strogopro.com) (Quit: bye)
[04:46:17] *** Joins: cjb (~cjb@user/cjb)
[04:46:54] *** Joins: kenoba (~kenoba@ip68-0-248-40.ri.ri.cox.net)
[04:47:50] *** Quits: kenoba (~kenoba@ip68-0-248-40.ri.ri.cox.net) (Client Quit)
[04:48:26] *** Joins: kenoba (~kenoba@ip68-0-248-40.ri.ri.cox.net)
[04:49:14] *** Quits: audiocat (~audio@2603-8081-1800-0062-12fa-dd6b-13e4-1047.res6.spectrum.com) (Ping timeout: 245 seconds)
[04:49:40] *** Joins: cdown (~cdown@89.32.122.5)
[04:50:03] *** Joins: i0e (~is0ke3@user/is0ke3)
[04:51:11] <mayhew> is there a way to create an immutable copy of a dataclass from an existing one with some attributes changed? some sort of .copy(**kwargs) or .with(**kwargs)?
[04:51:20] *** Quits: analognoise (~analognoi@176.113.73.171) (Ping timeout: 264 seconds)
[04:54:08] <graingert> mayhew: attr.evolve?
[04:54:46] <graingert> https://docs.python.org/3/library/dataclasses.html#dataclasses.replace
[04:54:56] <SnoopJ> replace() is the dataclasses spelling of evolve(), yep
[04:55:21] *** Joins: audiocat (~audio@2603-8081-1800-0062-81ba-3a10-16bc-8996.res6.spectrum.com)
[04:55:35] *** Joins: wyclif (~wyclif@user/wyclif)
[04:56:36] *** Quits: audiocat (~audio@2603-8081-1800-0062-81ba-3a10-16bc-8996.res6.spectrum.com) (Client Quit)
[04:56:50] *** Joins: audiocat (~audio@2603-8081-1800-0062-5720-3417-6dec-cecd.res6.spectrum.com)
[04:59:03] <mayhew> nice! thanks :)
[04:59:06] *** Quits: bigRoo (~user@131.236.54.84) (Remote host closed the connection)
[04:59:29] *** Quits: frostschutz (~frostschu@2a01:c22:d4cd:b600:c4d8:f383:81c0:a2f6) (Quit: Leaving)
[05:00:36] *** Quits: wyclif (~wyclif@user/wyclif) (Ping timeout: 252 seconds)
[05:06:59] *** Quits: kenoba (~kenoba@ip68-0-248-40.ri.ri.cox.net) (Quit: Ping timeout (120 seconds))
[05:07:24] *** Joins: kenoba (~kenoba@ip68-0-248-40.ri.ri.cox.net)
[05:10:00] *** Joins: Mysteria (~Mysteria@v2202101139540140656.hotsrv.de)
[05:12:19] *** Joins: reset (~reset@user/reset)
[05:12:38] *** Joins: Gerula_ (~Gerula@user/gerula)
[05:12:38] *** Quits: Gerula (~Gerula@user/gerula) (Killed (silver.libera.chat (Nickname regained by services)))
[05:12:38] *** Gerula_ is now known as Gerula
[05:12:40] *** Joins: wyclif (~wyclif@user/wyclif)
[05:13:48] *** Quits: vicfred (~vicfred@user/vicfred) (Ping timeout: 252 seconds)
[05:13:57] *** Quits: drincruz (~drincruz@ool-44c748be.dyn.optonline.net) (Ping timeout: 244 seconds)
[05:15:20] *** Quits: zebrag (~chris@user/zebrag) (Ping timeout: 264 seconds)
[05:16:34] *** Quits: Bardon (~Antoine@user/Bardon) (Quit: ZNC - https://znc.in)
[05:17:05] *** Joins: Bardon (~Bardon@user/Bardon)
[05:18:06] *** Quits: wyclif (~wyclif@user/wyclif) (Ping timeout: 272 seconds)
[05:18:19] *** Quits: Vornicus (~Vornicus@2603-8000-5d07-7ef0-0064-95f0-809d-b2ed.res6.spectrum.com) (Read error: Connection reset by peer)
[05:22:08] *** Joins: leitz (~LeamHall@072-182-158-173.res.spectrum.com)
[05:23:08] *** CongealdHappness is now known as Roey
[05:23:44] *** Quits: superboot (~agentgasm@user/superboot) (Ping timeout: 264 seconds)
[05:26:49] *** Joins: kenoba1 (~kenoba@ip68-0-248-40.ri.ri.cox.net)
[05:28:24] *** Quits: kenoba (~kenoba@ip68-0-248-40.ri.ri.cox.net) (Ping timeout: 245 seconds)
[05:28:24] *** kenoba1 is now known as kenoba
[05:28:36] *** Joins: wyclif (~wyclif@user/wyclif)
[05:28:56] *** Joins: drincruz (~drincruz@ool-44c748be.dyn.optonline.net)
[05:29:45] *** Quits: cthulchu (~Cthulchu@195.66.198.226) (Ping timeout: 252 seconds)
[05:30:30] *** Quits: vlm (~vlm@user/vlm) (Quit: "")
[05:31:26] *** Joins: bigRoo (~user@1.145.60.246)
[05:33:04] *** Quits: wyclif (~wyclif@user/wyclif) (Ping timeout: 244 seconds)
[05:35:05] *** Joins: vlm (~vlm@user/vlm)
[05:37:11] *** Quits: rama (~rama@2601:641:400:423:5d75:c21c:91d3:b3a3) (Remote host closed the connection)
[05:37:27] *** Quits: ham5urg (~ham5urg@p5ddfdd3d.dip0.t-ipconnect.de) (Ping timeout: 252 seconds)
[05:37:51] *** Joins: wyclif (~wyclif@user/wyclif)
[05:40:19] *** Quits: plastico (~plastico@2001:8a0:de6b:1a00:9d14:766e:70a8:dcea) (Quit: WeeChat 3.1)
[05:41:21] *** Joins: cliluw (~cliluw@47.147.80.149)
[05:41:57] *** Quits: paravida (~paravida@user/paravida) (Remote host closed the connection)
[05:49:42] *** Quits: MikZyth (~MikZyth@188.65.243.35) (Quit: WeeChat 3.1)
[05:50:47] *** Joins: longchalk (~user@66.119.118.5)
[05:52:15] <longchalk> for inhouse python libraries: do you/your team maintain misc, independently versioned utilities all under one namespace? -- e.g. myteam.runstats; myteam.archiving, VS myteam_runstats, myteam_archiving
[05:53:13] *** Quits: drincruz (~drincruz@ool-44c748be.dyn.optonline.net) (Ping timeout: 244 seconds)
[05:53:33] *** Quits: nomic (~nomic@2a00:23c6:9910:1201:cdae:ea4b:93a4:1c59) (Quit: Leaving)
[05:56:45] *** Joins: leduyquang753 (~leduyquan@user/leduyquang753)
[05:57:43] *** Quits: audiocat (~audio@2603-8081-1800-0062-5720-3417-6dec-cecd.res6.spectrum.com) (Ping timeout: 268 seconds)
[05:59:53] *** Joins: kikijiki (~Thunderbi@user/kikijiki)
[06:00:26] *** Joins: CanadianOtaku (~CanadianO@172.97.8.182)
[06:01:35] *** Joins: drincruz (~drincruz@ool-44c748be.dyn.optonline.net)
[06:03:34] *** Joins: pbryan (~pbryan@S010600306d111fac.vf.shawcable.net)
[06:03:39] *** Joins: Nact (~l@2a02:a03f:c0b0:f600:3253:5994:1b4f:e854)
[06:05:12] *** Quits: bigRoo (~user@1.145.60.246) (Remote host closed the connection)
[06:06:26] *** Joins: tm007 (uid287041@id-287041.highgate.irccloud.com)
[06:08:11] <SnoopJ> longchalk, at $employer we have stuff that has a single version
[06:10:32] *** Quits: leitz (~LeamHall@072-182-158-173.res.spectrum.com) (Ping timeout: 264 seconds)
[06:12:27] *** Quits: CanadianOtaku (~CanadianO@172.97.8.182) (Quit: Client closed)
[06:14:13] *** Joins: CanadianOtaku (~CanadianO@172.97.8.182)
[06:15:24] *** Joins: tijuco (~tijuco@user/tijuco)
[06:16:08] *** Joins: vimart (~vimart@85.255.234.98)
[06:17:10] *** Joins: leitz (~LeamHall@072-182-158-173.res.spectrum.com)
[06:18:33] *** Quits: ali12341 (~al@user/ali1234) (Remote host closed the connection)
[06:18:59] *** Joins: brizz (~brizz@74.208.85.67)
[06:19:18] *** Joins: dftrace (~dftrace@hopper.lethalbit.com)
[06:19:39] <brizz> async pg has a async for itm in conn.cursor method.  is there anyway to measure and "watch" the progress through the cursor?
[06:21:39] *** Quits: zeden (~zeden@user/zeden) (Quit: WeeChat 3.0.1)
[06:22:43] *** Quits: samhain (~samhain@user/samhain) (Quit: ZNC - https://znc.in)
[06:22:52] *** Joins: sed (~sed@pool-100-7-53-231.rcmdva.fios.verizon.net)
[06:22:59] *** Joins: Gerula_ (~Gerula@user/gerula)
[06:22:59] *** Gerula is now known as Guest4023
[06:23:00] *** Quits: Guest4023 (~Gerula@user/gerula) (Killed (tin.libera.chat (Nickname regained by services)))
[06:23:00] *** Gerula_ is now known as Gerula
[06:23:04] *** Joins: samhain (~samhain@user/samhain)
[06:23:15] *** Quits: sed (~sed@pool-100-7-53-231.rcmdva.fios.verizon.net) (Remote host closed the connection)
[06:23:30] *** Joins: methyl (~methyl@2601:249:100:49:3319:cbba:bee9:fdf9)
[06:23:41] *** Joins: ali1234 (~al@user/ali1234)
[06:24:21] <longchalk> SnoopJ, single version -- you mean team doesn't bump the version when you modify the library?
[06:24:40] *** Joins: sed (~sed@pool-100-7-53-231.rcmdva.fios.verizon.net)
[06:24:45] <SnoopJ> longchalk, we have a separate library for each bit of functionality that has a version.
[06:25:19] *** Quits: sed (~sed@pool-100-7-53-231.rcmdva.fios.verizon.net) (Remote host closed the connection)
[06:31:20] *** Joins: merijn (~merijn@83-160-49-249.ip.xs4all.nl)
[06:33:06] <cul8r> -+9867\54
[06:33:18] <cul8r> woops that was a dog..
[06:34:21] *** Quits: JavaBean (~JavaBean@user/javabean) (Quit: KVIrc 5.0.0 Aria http://www.kvirc.net/)
[06:34:51] *** Joins: p-i- (~Ohmu@node-ojy.pool-118-173.dynamic.totinternet.net)
[06:37:27] *** Quits: CanadianOtaku (~CanadianO@172.97.8.182) (Quit: Client closed)
[06:37:47] *** Joins: Blu-ray (~Blu-ray@user/zapdos)
[06:39:14] *** Quits: p-i- (~Ohmu@node-ojy.pool-118-173.dynamic.totinternet.net) (Ping timeout: 245 seconds)
[06:41:28] *** Quits: qlixed (~qlixed@2800:810:471:2f8::1b7) (Quit: That's all folks!!)
[06:41:40] <longchalk> SnoopJ, thanks -- I'm thinking it's easiest to package/deploy as separate libs.  Do you use an artifact server like Nexus, so you can have like "pip install mylib_for_repeat_bills>=0.31" in requirements.txt?
[06:42:50] <SnoopJ> We don't currently (stuff floats around as wheels), but I think we're going to be wanting an internal devpi instance soon enough
[06:43:06] <longchalk> Thanks
[06:43:32] *** Quits: LuxuryMode (uid91005@id-91005.charlton.irccloud.com) (Quit: Connection closed for inactivity)
[06:44:16] *** Quits: bancroft_ (~bancroft@bras-base-mtrlpq3015w-grc-11-70-55-136-62.dsl.bell.ca) (Quit: #bash)
[06:45:12] *** Joins: justsomeguy (~justsomeg@user/justsomeguy)
[06:45:17] *** Joins: bancroft (~bancroft@bras-base-mtrlpq3015w-grc-11-70-55-136-62.dsl.bell.ca)
[06:45:31] *** Quits: bancroft (~bancroft@bras-base-mtrlpq3015w-grc-11-70-55-136-62.dsl.bell.ca) (Client Quit)
[06:46:19] *** Joins: bancroft (~bancroft@bras-base-mtrlpq3015w-grc-11-70-55-136-62.dsl.bell.ca)
[06:46:26] *** Quits: lukka5 (~lukka5@246-60-231-201.fibertel.com.ar) (Ping timeout: 268 seconds)
[06:46:41] *** Parts: bancroft (~bancroft@bras-base-mtrlpq3015w-grc-11-70-55-136-62.dsl.bell.ca) ()
[06:47:02] *** Joins: dob1_ (~dob1@user/dob1)
[06:47:29] *** Joins: euouae (~user@user/euouae)
[06:48:40] *** Quits: dob1 (~dob1@user/dob1) (Ping timeout: 272 seconds)
[06:49:06] <brizz> https://bpa.st/7A3Q line 9 isn't updating entries in database ..any idea why?  tested manually and sql query is correct
[06:50:02] *** Joins: dob1 (~dob1@user/dob1)
[06:50:26] <euouae> brizz: and you get the print statements?
[06:50:32] <brizz> yep
[06:50:35] <brizz> says its updated
[06:50:39] *** Joins: dob1- (~dob1@user/dob1)
[06:50:45] <brizz> "https://bpa.st/7A3Q"
[06:50:56] <brizz> UPDATE 1 rather
[06:51:42] *** Quits: dob1_ (~dob1@user/dob1) (Ping timeout: 252 seconds)
[06:51:43] <longchalk> do you use it enough to be sure autocommit is on by default in the connection?
[06:52:12] <brizz> dont know
[06:52:34] <longchalk> is there a method ".commit" on the conn object?
[06:52:39] <brizz> sounds like something i could be missing.  what do i need to do
[06:52:48] <brizz> i dont do that anywhere no
[06:52:57] <euouae> You need to commit in the database
[06:53:29] <brizz> AttributeError: 'Connection' object has no attribute 'commit'
[06:53:51] *** Joins: CanadianOtaku (~CanadianO@172.97.8.182)
[06:53:54] <brizz> (im using asyncpg)
[06:54:03] *** Joins: dob1_ (~dob1@user/dob1)
[06:54:34] <brizz> docs says
[06:54:35] <brizz> When not in an explicit transaction block, any changes to the database will be applied immediately. This is also known as auto-commit.
[06:54:58] *** Quits: dob1 (~dob1@user/dob1) (Ping timeout: 265 seconds)
[06:55:22] <longchalk> so when you call it, I think you are in a transaction block, but that seems to imply as soon as it leavees the "with" it should commit
[06:55:33] *** Quits: dob1- (~dob1@user/dob1) (Ping timeout: 252 seconds)
[06:55:49] <longchalk> I don't know async to know if it "leaves the block" tho
[06:56:02] <euouae> Does the code work without async?
[06:56:24] <brizz> do you know how to commit it?  i dont see in docs where it says anything except what i pasted
[06:56:37] *** Quits: srhm (~ascii@user/srhm) (Quit: Konversation terminated!)
[06:56:39] <brizz> i like async so haven't tried w/out  async
[06:56:55] <euouae> Try without async to see if there's an error in the code or if it's the async logic
[06:57:00] <brizz> i dont know how I would write it w/out async..it would involve using something probably not called asyncpg
[06:57:31] <euouae> Oh sorry, you're right
[06:57:32] *** Parts: justsomeguy (~justsomeg@user/justsomeguy) (WeeChat 3.0.1)
[06:57:33] <longchalk> I don't know ... wild guess try for line 4:
[06:57:34] *** Joins: pyeverything (~mona@c-66-31-107-137.hsd1.ma.comcast.net)
[06:57:44] <longchalk> conn = await asyncpg.connect(DATABASE_URL).autocommit=True
[06:58:02] <longchalk> I don't see any docs on a quick search tho
[06:58:27] <pyeverything> could anyone please have a look at the full log of this error https://pastebin.com/raw/0WQw8ktB and help me? I am unsure how to fix this CuDNN problem. Thank you.  I can provide more details
[06:58:47] <brizz> i found more about commit
[06:59:19] <brizz> asyncpg.exceptions._base.InterfaceError: cannot manually commit from within an `async with` block
[07:00:03] <grym> pyeverything: "Loaded runtime CuDNN library: 7.4.2 but source was compiled with: 7.6.4.  CuDNN library major and minor version needs to match or have higher minor version in case of CuDNN 7.0 or later version."
[07:00:07] <grym> pyeverything: so, do that
[07:00:35] <brizz> longchalk,that doesnt seem to work
[07:00:43] <pyeverything> yes I saw that however I am not sure how to :D grym I also don't know how to exactly find my cudnn version from command line or from python. do you know how?
[07:00:50] <brizz> cannot assign to await expression
[07:00:57] <longchalk> okay
[07:01:24] <euouae> pyeverything: how did you install it? Package managers have ways to find it
[07:01:28] <longchalk> other possibility would be on line 5... conn.autocommit=True, but...
[07:01:51] *** re is now known as luci
[07:01:52] *** Joins: Colombo (~jmoravec@uo-uod-staff-09.nat.otago.ac.nz)
[07:01:53] <longchalk> I'm assuming if it's the default behavior except inside a block, you don't want to override it
[07:01:54] <pyeverything> here says 2021-06-10 22:03:03.026965: I tensorflow/stream_executor/platform/default/dso_loader.cc:44] Successfully opened dynamic library libcudnn.so.7 so I am confused how it was successful then? grym
[07:02:10] <grym> pyeverything: it's in /usr/include/cudnn_verison.h
[07:02:19] *** luci is now known as re
[07:02:21] <grym> pyeverything: major version matches, minor and rev don't
[07:02:24] <pyeverything> euouae: I installed tensorflow-gpu 2.2 via pip in native Python (not anaconda)
[07:02:37] <longchalk> maybe in async you could have simultaneous stuff break, so it's supposed to wait until the end of the "with" before applying the changes.
[07:02:43] <grym> pyeverything: if you're managing your cudnn with conda, i don't know
[07:02:51] <pyeverything> cat: /usr/include/cudnn_verison.h: No such file or directory --> grym
[07:03:01] <grym> then i don't know, but you do know what's wrong
[07:03:11] <Colombo> Hi all! I have question regarding pytest. I am confused about parametrizing fixtures. Notably, if I parametrize fixture with some value, then the expected value of test might be different.
[07:03:14] <longchalk> An interesint experiment if you have time to screwaround would be see if you can select the row you just inserted from within the with block
[07:03:20] <brizz> i guess maybe I could wait until it finishes.  i just figured the db would be updating as the commands executed
[07:03:33] <Colombo> Or am I thinking about it too much and this should not be done in fixture but in the test itself?
[07:03:46] *** Joins: tg (~tg@rockylinux/infra/tg)
[07:03:59] <brizz> i appreciate the help everyone
[07:04:05] *** FinnElija is now known as Guest9778
[07:04:05] *** Joins: finn_elija (~finn_elij@user/finn-elija/x-0085643)
[07:04:05] *** Quits: Guest9778 (~finn_elij@user/finn-elija/x-0085643) (Killed (tin.libera.chat (Nickname regained by services)))
[07:04:05] *** finn_elija is now known as FinnElija
[07:04:13] <longchalk> g'luck
[07:04:33] <pyeverything> I cannot see cudnn version here and I am not sure which exact version I should install to work with tensorflow-gpu 2.2 and cuda 10.2. Do you know that? cat: /usr/include/cudnn_verison.h: No such file or directory
[07:04:44] <grym> pyeverything: your error message told you what to install
[07:04:55] <grym> (it's 7.6.4)
[07:05:02] *** Quits: lsrtl_ (~lsrtl@user/lsrtl) (Ping timeout: 244 seconds)
[07:05:02] <grym> (you have 7.4.2)
[07:05:06] <euouae> Colombo: If expected is different, it's a failed unit test
[07:05:12] <pyeverything> thanks a lot grym
[07:05:27] *** Quits: merijn (~merijn@83-160-49-249.ip.xs4all.nl) (Ping timeout: 252 seconds)
[07:05:32] <grym> pyeverything: do what you can to avoid building tensorflow; it sucks
[07:05:36] <grym> takes like 3 hours, too
[07:05:53] <longchalk> brizz -- not about asynch but might give some clue to debug: https://stackoverflow.com/questions/18068901/python-psycopg2-not-inserting-into-postgresql-table
[07:06:36] <CanadianOtaku> i have had only negative expiriences with tensorflow
[07:06:39] <Colombo> euouae: what? How does that relate to my question?
[07:06:44] <CanadianOtaku> why was that in italics
[07:07:59] <euouae> Colombo: I don't understand your question, can you rephrase?
[07:08:05] *** Joins: c4017w (~c4017@209.52.68.8)
[07:08:16] <Colombo> euouae: I will prepare a minimal example that should demonstrate what I mean
[07:08:30] *** Quits: methyl (~methyl@2601:249:100:49:3319:cbba:bee9:fdf9) (Remote host closed the connection)
[07:09:54] *** c4017w is now known as c4017
[07:10:17] *** c4017 is now known as c4017_
[07:10:22] *** c4017_ is now known as c4017w_
[07:10:53] *** c4017w_ is now known as c4017w__
[07:11:01] *** c4017w__ is now known as c4017__
[07:11:05] *** c4017__ is now known as c4017w
[07:11:28] *** Quits: cliluw (~cliluw@47.147.80.149) (Ping timeout: 272 seconds)
[07:11:40] *** Joins: c4017 (~c4017@S010664777dab66f3.vf.shawcable.net)
[07:11:49] *** Quits: jarthur (~jarthur@2603-8080-1540-002d-c864-9e4b-fcd2-85ec.res6.spectrum.com) (Quit: jarthur)
[07:12:12] *** Quits: CanadianOtaku (~CanadianO@172.97.8.182) (Ping timeout: 250 seconds)
[07:12:34] <Colombo> euouae: https://ghostbin.co/paste/gergw
[07:13:10] <Colombo> Basically, as I understand it, fixtures are helper function that create an environment for test, i.e., setup.
[07:13:16] <euouae> Colombo: can you use bpaste?
[07:13:53] <Colombo> euouae: https://bpa.st/7YLA
[07:14:05] <c4017> Anyone used asyncio-mqtt? I'm struggling to understand how I can 'await' inside of a message handler and continue to receive messages at the same time
[07:14:10] <Colombo> I can parametrize fixture, i.e., initialize classes etc. with different parameters.
[07:14:15] *** Quits: Mrokii_ (mrokii@gateway/vpn/airvpn/mrokii) (Ping timeout: 252 seconds)
[07:14:36] <habnabit_> c4017, is it not doing that?
[07:14:38] <Colombo> But how can I test that the classes have different parameters?
[07:14:48] <brizz> it definitely has something to do with the async for and conn.transaction, because removing the cursor and doing a select statement, and then doing for each (I can paste if anyone is curious), entries update
[07:15:13] <c4017> habnabit_, no, doing await in the handler prevents other messages from coming in
[07:15:54] *** Quits: nyah (~nyah@90.221.186.180) (Quit: leaving)
[07:15:56] *** Parts: death916 (~death916@user/death916) (Closing Window)
[07:16:42] <euouae> Colombo: fixtures are 'fixed' data that you can request for your unit tests
[07:17:31] <euouae> Colombo: when you use params=, you are feeding that input to the fixture for the construction of said data; multiple inputs may be fed; data (plural) are produced and fed into whichever unit test is called multiple times
[07:17:31] <c4017> habnabit_, as far as I can tell, the actual MQTT callback pushes to a queue, and the user accessible pat (unfiltered_messages) reads from that queue: https://github.com/sbtinstruments/asyncio-mqtt/blob/master/asyncio_mqtt/client.py#L261
[07:17:40] <c4017> Still trying to wrap my head around it
[07:17:42] <Colombo> euouae: ah, so I should try to make them too dynamic and have a custom setup/teardown function called in the test themselves?
[07:18:21] <euouae> Colombo: https://bpa.st/VEYQ
[07:19:02] <euouae> Colombo: Think of a fixture as a single datum. Instead of writing person1, person2, person3 fixtures, you can use the param= as a 'seed' to construct 3 different persons.
[07:19:46] <Colombo> euouae: yes, but this limits the amount of tests I can do on data.
[07:20:18] <euouae> Colombo: For example, @pytest.fixture(params=["Colombo", "euouae"])    def person(request):    return Person(name=request.param)
[07:20:42] <euouae> Colombo: It's an added feature, it limits what exactly?
[07:21:04] <pyeverything> grym:  thanks a lot. I will now focus on installing cudnn 7.6.4 (I believe university installed something for me --not sure-- but I am also sudo-er on my own machine at the university. Let's see. I will report back.
[07:21:57] <Colombo> euouae: https://bpa.st/HPMQ I just thought that the "obj" in this example can be made into fixture.
[07:22:26] <euouae> Colombo: Looks fine
[07:23:02] <Colombo> euouae: yes, becase this example is working. But I cannot turn the initialized object "obj" into a parametrized fixture because there will be no way to tell test which value is expected.
[07:23:07] <euouae> You want Obj itself to be a fixture? Instead of returning 'request.param', return Obj(request.param)
[07:23:24] <euouae> in fixture2.
[07:23:57] <Colombo> euouae: yes, but then I cannot know what value should I expect because I don't have access to the parameters of the fixture.
[07:24:12] <euouae> You don't test fixtures, fixtures are sanitized data
[07:24:21] <euouae> Honest data that you can trust
[07:24:32] <c4017> aha, the callback inside the library is still receiving new messages. So it's something with the async wrapper that's causing problems
[07:24:57] <euouae> Colombo: Obj would be the fixture itself.
[07:25:32] *** Quits: wyclif (~wyclif@user/wyclif) (Ping timeout: 264 seconds)
[07:25:46] <Colombo> euouae: the reason why I was confused is: https://docs.pytest.org/en/6.2.x/fixture.html#fixture-parametrize where they parametrize the fixture, but all they ever do is to test if the response is a fixed number (250) not some value from parameter
[07:25:51] <euouae> Colombo: if you want to test the Obj constructor, use a fixture that calls Obj(), (empty constructor), and then access the attributes to assign whatever you need
[07:27:27] *** Joins: Mrokii_ (mrokii@gateway/vpn/airvpn/mrokii)
[07:27:33] <euouae> Colombo: I don't understand, can you explain?
[07:27:43] <Colombo> euouae: how is that different from calling the constructor in the test?
[07:27:57] *** Joins: cliluw (~cliluw@47.147.80.149)
[07:28:02] *** Quits: DaNeenjah (~jake@adsl-74-230-10-210.hsv.bellsouth.net) (Quit: WeeChat 3.1)
[07:28:04] <euouae> Colombo: Fixtures are a convenience, they are there to reduce duplicate code in the unit tests.
[07:28:34] *** Quits: cjb (~cjb@user/cjb) (Quit: brb)
[07:29:26] <Colombo> euouae: well yes, but in the case you mentioned it wouldn't save any code
[07:29:35] *** Joins: cjb (~cjb@user/cjb)
[07:29:42] <euouae> so?
[07:30:22] <Colombo> euouae: so I asked how is create fixture with empty object (and then setting the value in the test body) different from just creating the object in the test body itself?
[07:31:20] <euouae> It's not, not in any sense that you mean
[07:31:33] <euouae> Also, I feel like this is the first time that you are asking this question
[07:32:51] <euouae> I feel like you are asking a lot of questions, but it's probably best to take it from the beginning. I think https://docs.pytest.org/en/6.2.x/fixture.html#what-fixtures-are explains fixtures pretty well, you can read that and ask any questions you may have after you are finished
[07:33:46] <Colombo> euouae: I already read the documentation 3x before coming here and asking the question
[07:34:06] *** Joins: lukka5 (~lukka5@246-60-231-201.fibertel.com.ar)
[07:34:21] <euouae> Do you have any questions about the linked paragraph?
[07:34:47] <Colombo> no?
[07:35:16] *** Joins: bigRoo (~user@131.236.141.15)
[07:35:32] *** Quits: gildarts (16abab341f@user/gildarts) (Ping timeout: 272 seconds)
[07:35:34] <euouae> Okay then, so you do see that a unit test is separated into four steps. That's the unit test logic
[07:36:04] <euouae> Before you act (step 2), you need to arrange (step 1). That means, before you call your functions that you want to test, you need to construct the data that you are going to feed to them.
[07:36:42] <Colombo> Yes, I am well aware of that.
[07:36:53] *** Quits: vimart (~vimart@85.255.234.98) (Quit: WeeChat 2.8)
[07:37:03] *** Joins: wyclif (~wyclif@user/wyclif)
[07:37:03] <euouae> Now it happens that different tests require the same data, which may be complicated to construct (such as a tuple with 10 elements, for example). Fixtures are named data that you can pull into different tests.
[07:37:40] <euouae> So fixtures allow the separation of step 1 from step 2 in the code itself; not just mentally
[07:37:55] <Colombo> Sorry, but I feel you are really not listening to me.
[07:38:01] <euouae> Go ahead
[07:38:39] *** Joins: Wulf (~Wulf@user/wulf)
[07:38:42] *** Joins: audiocat (~audio@2603-8081-1800-0062-4ba3-ff83-f695-5246.res6.spectrum.com)
[07:39:11] <Colombo> Just tell me that the moment by data are generated dynamically based on some parameters, fixture might not be a good way to represent them and i should represent this as a helper function in the act state and base it on parametrized test, rather than parametrized fixture.
[07:39:23] *** Quits: lukka5 (~lukka5@246-60-231-201.fibertel.com.ar) (Ping timeout: 272 seconds)
[07:39:29] *** Joins: metah4ck3r (~meta@user/metah4ck3r)
[07:39:30] *** Quits: bigRoo (~user@131.236.141.15) (Read error: Connection reset by peer)
[07:40:42] <euouae> What do you mean by dynamically generated data? Such as random.random()?
[07:40:45] <Colombo> Because while fixtures can be parametrized, they should have the same expected behaviour
[07:40:59] *** Parts: longchalk (~user@66.119.118.5) (rcirc on GNU Emacs 26.3)
[07:40:59] <Colombo> euouae: see the example I posted
[07:41:01] *** Joins: gildarts (16abab341f@user/gildarts)
[07:41:25] <euouae> This? https://bpa.st/HPMQ What about it?
[07:41:30] <Colombo> where instead of creating data with 5 and data with 9, I have parametrized fixture to do so.
[07:41:40] <euouae> Yes you have, and so?
[07:42:04] <Colombo> I feel we already was in this place 2x.
[07:42:58] <euouae> Well the paste is fine. Fixtures work fine like that, I don't know why you say they're not appropriate.
[07:43:25] <Colombo> https://bpa.st/7YLA
[07:43:55] <euouae> You're not testing against magic values, you're testing algorithms when they're fed data
[07:43:56] <euouae> Let me illustrate
[07:44:14] <Colombo> 1. I create dataset. I can create dataset dynamically and deterministically based on parameter.
[07:44:36] <Colombo> 2. Instead of having it as two fixtures with two tests testing these parameters, I parametrize the fixture so that both datasets are represented with a simple fixture and I can have just a single test.
[07:45:17] <Colombo> 3. Because both datasets have different behaviour (value), how can I test them in a single test? How can I inform the test about the particular expected value of the fixture?
[07:45:33] <Colombo> (in a more complex case, I would call some function on the data)
[07:45:57] <euouae> The fixture /is/ the value
[07:46:14] *** Joins: nathanjell (~nathanjel@node-1w7jra246e16cl17bbe5uwzop.ipv6.telus.net)
[07:46:45] <Colombo> euouae: what? No it isn't.
[07:46:52] <Colombo> euouae: you said before that the fixture is the data.
[07:46:57] <euouae> Yes, same thing
[07:47:05] <Colombo> euouae: No, its not the same thing.
[07:47:50] <Colombo> euouae: value is the expected value after I call some function on the fixture.
[07:50:17] <euouae> Does this help? https://bpa.st/W3UA
[07:51:12] *** Quits: leitz (~LeamHall@072-182-158-173.res.spectrum.com) (Quit: nappy time)
[07:51:35] *** Joins: leitz (~LeamHall@072-182-158-173.res.spectrum.com)
[07:51:45] *** Quits: archwizard (~archwizar@2001:470:69fc:105::929) (Ping timeout: 244 seconds)
[07:51:45] *** Quits: artemon (~artemon@2001:470:69fc:105::87c) (Ping timeout: 244 seconds)
[07:51:55] *** Quits: evidlo (~evidlo@2001:470:69fc:105::7fc) (Ping timeout: 264 seconds)
[07:52:15] *** Quits: dontwannatell[m] (~dontwanna@2001:470:69fc:105::c27) (Ping timeout: 244 seconds)
[07:52:15] *** Quits: ubh (~ubh@2001:470:69fc:105::852) (Ping timeout: 244 seconds)
[07:52:15] *** Quits: PantelicGR2 (~pantelicg@user/pantelicgr) (Ping timeout: 244 seconds)
[07:52:24] *** Joins: drincruz_ (~drincruz@ec2-18-235-23-153.compute-1.amazonaws.com)
[07:52:31] *** Quits: codemouse92__ (~codemouse@user/codemouse92) (Ping timeout: 264 seconds)
[07:52:31] *** Quits: bgardner (~bgardner@2001:470:69fc:105::8a8) (Ping timeout: 264 seconds)
[07:52:31] *** Quits: diegov (~diegov@2001:470:69fc:105::103f) (Ping timeout: 264 seconds)
[07:52:31] *** Quits: meain (~meain@2001:470:69fc:105::2db) (Ping timeout: 264 seconds)
[07:52:31] *** Quits: ali1234[m] (~ali1234@user/ali1234) (Ping timeout: 264 seconds)
[07:52:45] *** Quits: mefistofeles (~mefistofe@user/mefistofeles) (Ping timeout: 252 seconds)
[07:54:33] *** Quits: Cygfrydd (~cygfrydd@70.126.127.218) (Quit: ZNC 1.8.2+deb1+focal2 - https://znc.in)
[07:54:38] *** Quits: drincruz (~drincruz@ool-44c748be.dyn.optonline.net) (Ping timeout: 244 seconds)
[07:55:23] <pyeverything> grym:  so I cannot find cudnn 7.6.4 for cuda 10.2 but find it for cuda 10 and 10.1 should I install the one for cuda 10.1 what is your suggestion? https://pastebin.com/raw/XshsbKGY
[07:56:03] <Colombo> euouae: partially. So the only way is to either create a fixture that returns data AND its expected value or just do it in the test stage itself? I.e., create a setup function that will setup the requested data with a particular value? Or create multiple tests/fixtures? What is the best practice? i guess with different types of data, the practices would be different?
[07:57:21] *** Quits: emerent (~quassel@p200300cd5703bbdeba27ebfffed28a59.dip0.t-ipconnect.de) (Ping timeout: 268 seconds)
[07:57:44] *** Joins: emerent (~quassel@p200300cd5703bbc4ba27ebfffed28a59.dip0.t-ipconnect.de)
[07:57:52] <euouae> Colombo: Good luck with the rest!
[07:58:12] *** Joins: pradhvan (~pradhvan@103.94.114.232)
[07:59:21] <Colombo> euouae: thanks
[08:00:56] *** Quits: Lord_of_Life (~Lord@user/lord-of-life/x-2819915) (Ping timeout: 264 seconds)
[08:01:17] *** Quits: abhixec (~abhixec@c-67-169-139-16.hsd1.ca.comcast.net) (Quit: leaving)
[08:01:58] *** Joins: superboot (~agentgasm@user/superboot)
[08:04:47] *** Joins: Vonter (~Vonter@user/vonter)
[08:05:00] *** Joins: Lord_of_Life (~Lord@user/lord-of-life/x-2819915)
[08:05:24] *** Joins: mefistofeles (~mefistofe@user/mefistofeles)
[08:07:10] *** Joins: Midnite (~human@user/midnightlantern)
[08:12:01] *** Joins: matsaman (~matsaman@user/matsaman)
[08:13:33] *** Quits: mike18 (~geri@71-220-52-187.mpls.qwest.net) (Ping timeout: 264 seconds)
[08:14:46] *** Joins: heco (~redrum@user/redrum88)
[08:16:38] *** Joins: jheblu (~user@116.68.98.40)
[08:16:41] *** Joins: p-i- (~Ohmu@node-ojy.pool-118-173.dynamic.totinternet.net)
[08:16:44] *** Quits: drincruz_ (~drincruz@ec2-18-235-23-153.compute-1.amazonaws.com) (Ping timeout: 245 seconds)
[08:21:31] *** Quits: cjb (~cjb@user/cjb) ()
[08:21:32] *** Quits: disi (~disi@107-131-127-0.lightspeed.sntcca.sbcglobal.net) (Ping timeout: 250 seconds)
[08:21:58] *** Quits: ericlee (~ericlee@2601:647:4681:3420::1) (Remote host closed the connection)
[08:25:56] *** Parts: Colombo (~jmoravec@uo-uod-staff-09.nat.otago.ac.nz) ()
[08:28:15] *** Joins: lukka5 (~lukka5@246-60-231-201.fibertel.com.ar)
[08:29:12] *** Quits: leitz (~LeamHall@072-182-158-173.res.spectrum.com) (Quit: nappy time)
[08:30:15] *** Quits: heco (~redrum@user/redrum88) (Quit: Going offline, see ya! (www.adiirc.com))
[08:33:04] *** Quits: lukka5 (~lukka5@246-60-231-201.fibertel.com.ar) (Ping timeout: 244 seconds)
[08:35:21] *** Quits: tijuco (~tijuco@user/tijuco) (Quit: Leaving)
[08:35:29] <pyeverything> I documented my problem with cuDNN, CUDA, and tensorflow-gpu versions here really appreciate if you could have a look https://stackoverflow.com/questions/67931031/tensorflow-gpu-2-2-works-with-cuda-10-2-but-requires-cudnn-7-6-4-which-doesnt-h
[08:36:02] *** Quits: supakeen (~user@python/site-packages/supakeen) (Quit: WeeChat 3.1)
[08:36:17] *** Joins: Leonarbro_ (~Leonet@user/leonarbro)
[08:36:39] *** Joins: supakeen (~user@python/site-packages/supakeen)
[08:36:47] *** Quits: nathanjell (~nathanjel@node-1w7jra246e16cl17bbe5uwzop.ipv6.telus.net) (Quit: Quit)
[08:36:56] *** Quits: thiras_ (~thiras@user/thiras) (Ping timeout: 264 seconds)
[08:37:16] *** Quits: Sheilong (uid293653@id-293653.charlton.irccloud.com) (Quit: Connection closed for inactivity)
[08:39:02] *** Quits: Leonarbro (~Leonet@user/leonarbro) (Ping timeout: 252 seconds)
[08:39:17] *** Quits: deviantfero (~deviantfe@190.150.27.58) (Ping timeout: 268 seconds)
[08:39:33] *** Joins: TJ- (~root@2a01:7e00:e001:ee00:fa75:a4ff:fef3:42b4)
[08:40:08] *** Quits: puadxtub (~rvgzuuqp@gateway/tor-sasl/rvgzuuqp) (Quit: puadxtub)
[08:41:29] *** Joins: librenaut (~librenaut@user/librenaut)
[08:43:15] *** Joins: SebastianM (~seba@user/sebastianm)
[08:44:52] *** Quits: SebastianM (~seba@user/sebastianm) (Client Quit)
[08:45:24] *** Joins: wei2912 (~wei2912@112.199.250.21)
[08:46:55] *** Quits: kmh (~kmh@p200300df5f2f6b00b5233d555816360a.dip0.t-ipconnect.de) (Quit: Leaving)
[08:48:06] <euouae> pyeverything: what are you trying to do? install tensorflow?
[08:50:44] *** Quits: theterg (~theterg@pool-141-155-7-155.nycmny.fios.verizon.net) (Ping timeout: 264 seconds)
[08:52:30] *** Joins: dyslexicat (~dyslexica@212.253.59.190)
[08:52:46] *** Quits: ElPresidente (~ElPreside@2600:1700:3d10:4870:6458:a5ba:9298:c581) (Quit: Leaving)
[08:54:07] *** Quits: Fiji (~Fiji@user/fiji) (Quit: Leaving)
[08:55:18] *** Joins: cjb (~cjb@user/cjb)
[08:56:38] *** Quits: dyslexicat (~dyslexica@212.253.59.190) (Ping timeout: 244 seconds)
[09:00:45] *** Joins: ssbr (~ssbr@c-174-61-157-141.hsd1.wa.comcast.net)
[09:01:59] *** Joins: merijn (~merijn@83-160-49-249.ip.xs4all.nl)
[09:05:22] *** Joins: ackyshake (~ackyshake@user/ackyshake)
[09:09:51] <cul8r> pyeverything: you should be able to use cudnn 7.6.5 no? it has an entry for cuda 10.2 in the archive.
[09:11:08] <c4017> https://bpa.st/VSQQ  Without modifying any of the other code or using ensure_future/create_task, is it possible to modify func() such that it does not block for each message?
[09:11:19] <c4017> Also, why does it throw an exception after the last message?
[09:15:31] *** Quits: matsaman (~matsaman@user/matsaman) (Quit: leaving)
[09:16:13] <pyeverything> euouae: if you read the stackoverflow question, I am not trying to install tensorflow
[09:16:51] <pyeverything> cul8r: so how do you know that cudnn 7.6.5 works? since the error explicitly says it is looking for cudnn 7.6.4
[09:18:52] *** Joins: v01d4lph4 (~v01d4lph4@user/v01d4lph4)
[09:19:06] <cul8r> well it says " or have higher minor version in case of CuDNN 7.0 or later version" and assuming semantic versioning, 7.6.5 is a patch update and should therefore be backwards compatible, and it is the same major and minor versions as 7.6.4
[09:20:27] *** Quits: drew (~drew@user/drew) (Read error: Connection reset by peer)
[09:20:57] *** Joins: drew (~drew@user/drew)
[09:22:24] *** Joins: lukka5 (~lukka5@246-60-231-201.fibertel.com.ar)
[09:25:13] *** Quits: Sasazuka (~Sasazuka@user/sasazuka) (Quit: My MacBook has gone to sleep. ZZZzzz…)
[09:25:43] *** Quits: superboot (~agentgasm@user/superboot) (Quit: leaving)
[09:26:03] <pyeverything> sure cul8r I will try that .. I am now trying the 7.6.4 for 10.1 (I know it's stupid but just giving it a try) and then will try that. Thanks a lot for pointing out :) (rebooting the system now
[09:27:19] *** Quits: lukka5 (~lukka5@246-60-231-201.fibertel.com.ar) (Ping timeout: 244 seconds)
[09:27:20] <cul8r> pyeverything: no prob
[09:27:36] <euouae> How do you implement an object with __enter__ and __exit__ for use with 'with'?
[09:27:55] <euouae> I want to write a database wrapper (with open() as db:...)
[09:28:56] *** Joins: stranac (~stranac@195.29.239.126)
[09:29:28] <c4017> euouae, you can use @contextlib.contextmanager decorator or write them manually. Look up context manager
[09:32:48] *** Quits: derelict (~derelict@user/derelict) (Ping timeout: 244 seconds)
[09:32:57] <euouae> c4017: "[..] for with statement context managers, without needing to create a class [..]". I plan to write my own class, is it still an appropriate suggestion?
[09:34:31] <c4017> euouae, sure you can still use it in a class. Wrap your open() function and follow the 'try, yield, finally' pattern to setup and close the database as needed
[09:34:45] *** Joins: eyepeetee (~aa@096-032-003-075.res.spectrum.com)
[09:34:50] <euouae> Got it, thank you
[09:35:54] *** Quits: merijn (~merijn@83-160-49-249.ip.xs4all.nl) (Ping timeout: 245 seconds)
[09:36:22] <c4017> You can probably even decorate __init__ so that you don't have to instantiate the class before calling 'with db.open() ...'. I'm not too sure about that usage actually
[09:37:56] *** Joins: rama (~rama@2601:641:400:423:5d75:c21c:91d3:b3a3)
[09:40:00] <cul8r> c4017: it throws the error because you are using an infinite loop and the queue is empty. Change line 19 to `while not message_queue.empty():`
[09:42:01] <c4017> cul8r, why does it care that it's empty? Documentation for get() states ' If queue is empty, wait until an item is available.'
[09:42:09] *** Quits: rama (~rama@2601:641:400:423:5d75:c21c:91d3:b3a3) (Ping timeout: 245 seconds)
[09:45:22] *** Quits: mefistofeles (~mefistofe@user/mefistofeles) (Ping timeout: 272 seconds)
[09:47:39] *** Joins: Auron (~Auron956@user/auron)
[09:50:51] *** Joins: mefistofeles (~mefistofe@user/mefistofeles)
[09:52:18] <cul8r> c4017: Ah i was wrong but i figured it out, move your queue creation into main. Otherwise it is outside the event loop
[09:52:40] <cul8r> here is reference https://stackoverflow.com/questions/53724665/using-queues-results-in-asyncio-exception-got-future-future-pending-attached
[09:54:14] *** Quits: Linux77 (~kvirc@186.235.105.225) (Ping timeout: 272 seconds)
[09:54:27] *** Joins: Leonarbro (~Leonet@user/leonarbro)
[09:54:52] <c4017> cul8r, ah nice one. The message queue started its own loop since I started it before main()
[09:55:02] *** Quits: Xaldafax (~xaldafax@cpe-198-72-160-101.socal.res.rr.com) (Quit: Bye...)
[09:55:31] <cul8r> yup yup
[09:58:40] *** Quits: Leonarbro_ (~Leonet@user/leonarbro) (Ping timeout: 272 seconds)
[10:00:43] *** Joins: jinsun (~quassel@182.77.87.72)
[10:03:30] *** Joins: SyntheticClamor (~Synthetic@2a01cb04008a92007da59076e1b0ce8b.ipv6.abo.wanadoo.fr)
[10:04:43] *** Quits: cul8r (~cul8r@2601:8c3:4000:b0d0::16bd) (Quit: abducted by aliens)
[10:05:57] *** Quits: SyntheticClamor (~Synthetic@2a01cb04008a92007da59076e1b0ce8b.ipv6.abo.wanadoo.fr) (Remote host closed the connection)
[10:06:26] *** Joins: SyntheticClamor (~Synthetic@2a01cb04008a92007da59076e1b0ce8b.ipv6.abo.wanadoo.fr)
[10:06:55] *** Joins: dvx (~dvx@185.63.97.64)
[10:07:10] *** Joins: rama (~rama@2601:641:400:423:5d75:c21c:91d3:b3a3)
[10:07:36] <eyepeetee> is what i am doing here to pass along results recursively using the _results variable (since dicts are mutable) bad practice? also, is the exception handler in my read_string_from_file bad practice?
[10:07:38] <eyepeetee> https://pastebin.com/D4MG1qAH
[10:08:41] *** Joins: dyslexicat (~dyslexica@ymir.whatbox.ca)
[10:10:38] *** Joins: CatKiller (~CatKiller@93.107.150.192)
[10:11:02] *** Joins: dme86 (~dan@user/dan86)
[10:12:47] *** Quits: rama (~rama@2601:641:400:423:5d75:c21c:91d3:b3a3) (Ping timeout: 244 seconds)
[10:14:10] *** Joins: agumonke` (~user@88.160.31.174)
[10:15:41] *** Quits: dme86 (~dan@user/dan86) (Ping timeout: 244 seconds)
[10:16:27] <jinsun> eyepeetee:  bare except without giving the type of the excetion is bad usually, if you really want to catch everything `except Exception` is a bit better, because you usually don't want to catch stuff like SystemExit or KeyboardInterrupt
[10:16:34] *** Joins: lukka5 (~lukka5@246-60-231-201.fibertel.com.ar)
[10:17:16] <jinsun> although in this case you want to just catch OSerror or some UnicodeDecodeError only I think, not literally everything
[10:20:40] *** Quits: viktorivan (~ivan@187.223.103.108) (Quit: Leaving.)
[10:21:22] *** Quits: lukka5 (~lukka5@246-60-231-201.fibertel.com.ar) (Ping timeout: 244 seconds)
[10:22:32] *** Joins: SamuelMarks (~samuel@60-241-123-202.static.tpgi.com.au)
[10:22:37] <SamuelMarks> hi
[10:22:54] <SamuelMarks> hi
[10:23:50] <SamuelMarks> 3.7-3.10 works but on 3.6 I get errors with `NameError: name '__all__' is not defined` on `from typing import Any`. Is there a solution here?
[10:24:31] * SamuelMarks replicated in a Dockerfile - https://github.com/SamuelMarks/cdd-python/blob/master/Dockerfile
[10:24:57] <audiocat> can someone eli5 the .loc function in pandas?
[10:28:13] *** Joins: viktorivan (~ivan@187.223.103.108)
[10:28:39] *** Joins: biozz (~biozz@178.57.22.163)
[10:29:04] *** Quits: dyslexicat (~dyslexica@ymir.whatbox.ca) (Ping timeout: 272 seconds)
[10:29:08] *** Quits: yskapell (~yskapell@46.246.229.40.dsl.dyn.forthnet.gr) (Ping timeout: 264 seconds)
[10:29:50] <jinsun> audiocat: it is not a function, df.loc[row_names, column_names] allows you to use the row and columns "names" as index instead of numbers, they just had to define .loc because they use the default getitem for getting columns df[column_names]
[10:30:41] *** Joins: Rob_ (~Rob_@212.71.9.85)
[10:31:19] *** Quits: NoImNotNineVolt (~ninevolt@c-73-248-207-98.hsd1.nj.comcast.net) (Ping timeout: 245 seconds)
[10:31:27] *** Joins: bigRoo (~user@131.236.141.15)
[10:32:32] <jinsun> audiocat: and with df.iloc[row_numbers, columns_numbers] you use the the rows and column numbers, instead of names
[10:32:52] *** Quits: Midnite (~human@user/midnightlantern) (Ping timeout: 272 seconds)
[10:33:43] <audiocat> jinsun, thanks
[10:35:00] *** Quits: mefistofeles (~mefistofe@user/mefistofeles) (Ping timeout: 244 seconds)
[10:40:18] <agronholm> SamuelMarks: can you repro that with a dockerfile that does not depend on your local files?
[10:41:58] *** Joins: blinux (~blinux@pool-108-51-228-58.washdc.fios.verizon.net)
[10:42:28] <blinux> How am I supposed to install python modules with pip using wine on Linux? I tried to install and I keep getting a ton of errors, so maybe I'm not doing it right.
[10:42:58] <agronholm> blinux: what is the use case that requires using pip on wine?
[10:43:29] *** Joins: puadxtub (~rvgzuuqp@gateway/tor-sasl/rvgzuuqp)
[10:43:29] <blinux> I am trying to install pycrypto. Previously I used an installer, but I'm now trying to use pip to install it.
[10:45:03] *** Quits: transhumanist (~hiken@2601:196:8800:35f0:e4d5:97c0:26b2:bbb8) (Read error: Connection reset by peer)
[10:45:07] <blinux> I think I need to do this with Wine specifically because the script is designed to be run on a Windows application data which is installed with Wine. I do not believe running the script in Linux natively will be able to detect this Windows application data intalled with Wine. The script was not made to run that way.
[10:45:56] <agronholm> so how are you trying to run it and what's the output?
[10:46:50] *** Quits: seednode (~seednode@user/seednode) (Quit: Nihil supernum.)
[10:47:29] *** Joins: seednode (~seednode@user/seednode)
[10:47:34] <blinux> It says :ERROR: Command errored out with exit status 1:" in red text followed by pages of red text.
[10:48:37] <blinux> I used an executable to install pycrypto I found at a site before, but the script I'm using now calls python3 and the pycrypto installers I found were for python2.
[10:49:51] <euouae> pycrypto is on pypi, why not install it from pip?
[10:50:23] <jinsun> blinux: https://pypi.org/project/pycrypto seems to be available for MacOS and Linux too, not just Windows
[10:50:34] <euouae> Oh sorry, it seems to have installation instructions on pypi
[10:51:15] *** Quits: dob1_ (~dob1@user/dob1) (Ping timeout: 268 seconds)
[10:51:38] *** Joins: ionface (~ionface@user/ionface)
[10:55:45] <jinsun> blinux: also pycrypto seems super old (2013), probably would be better to use cryptography https://pypi.org/project/cryptography/, depends on what you actually want to do
[10:56:16] <blinux> I see somewhere to use pycryptodome instead and pycrypto is discontinued. That could be why no newer version of installer too.
[10:57:11] <eyepeetee> thank you jinsun, i'll figure out what errors there are for open...the reason i have it is for unexpected encodings though, i am not sure what the exception is, i'll find out though
[10:58:12] *** Quits: boB_K7IQ (~boB_K7IQ@ip98-177-87-213.ph.ph.cox.net) (Ping timeout: 272 seconds)
[11:02:10] *** Quits: slowButPresent (~slowButPr@user/slowbutpresent) (Quit: leaving)
[11:03:12] <eyepeetee> is there a better, more succinct way i could have accomplished this?: https://pastebin.com/9grjzRwW
[11:04:06] <euouae> eyepeetee: what does it do?
[11:05:48] *** Quits: i0e (~is0ke3@user/is0ke3) (Ping timeout: 272 seconds)
[11:06:04] *** Joins: ApostleInTriumph (~Guest23@vpn2.lix.polytechnique.fr)
[11:06:17] <ApostleInTriumph> Hello, I'm unable to install meshplot using conda https://skoch9.github.io/meshplot/
[11:08:05] *** Quits: Leonarbro (~Leonet@user/leonarbro) (Read error: Connection reset by peer)
[11:10:39] *** Joins: lukka5 (~lukka5@246-60-231-201.fibertel.com.ar)
[11:13:57] *** Joins: Hunterkll (~hunterkll@2001:470:8b06:400:215:5dff:fefb:804)
[11:15:11] <eyepeetee> euouae: it does a few things...it removes lines from a file by index, but it does so without copying, moving, or renaming any file, it uses very little memory to run, and it works on files generally of any size, including massive files
[11:15:47] <eyepeetee> but i made it because i had to and could not find a shorter simpler solution
[11:15:56] *** Quits: lukka5 (~lukka5@246-60-231-201.fibertel.com.ar) (Ping timeout: 272 seconds)
[11:16:14] <euouae> c4017: Another option is to use @staticmethod @contextmanager
[11:16:26] *** Joins: Leonarbro (~Leonet@user/leonarbro)
[11:16:32] <euouae> c4017: that way I can call it as "with Foo.open() as db: ..."
[11:18:41] *** Quits: somlis (~somlis@user/somlis) (Read error: Connection reset by peer)
[11:19:01] <c4017> euouae, right I guess that works. I think I prefer the look of 'with Foo(...) as db:' Again, not sure how to do that with the decorator, I've only ever written __enter__ and __exit__ manually
[11:21:20] *** Joins: gusto (~Augustus@109.255.100.54)
[11:21:25] *** Joins: boB_K7IQ (~boB_K7IQ@ip98-177-87-213.ph.ph.cox.net)
[11:22:11] *** Quits: Hackerpcs (~user@user/hackerpcs) (Quit: Hackerpcs)
[11:22:17] *** Joins: gloomy_desktop (~ldorigo@81.161.149.37)
[11:23:28] *** Joins: Hackerpcs (~user@user/hackerpcs)
[11:23:47] *** Joins: mexen (uid495612@user/mexen)
[11:24:54] *** Quits: pyeverything (~mona@c-66-31-107-137.hsd1.ma.comcast.net) (Quit: Leaving.)
[11:25:17] *** Joins: Nine_BAR (~NineBAR@c-68-56-180-29.hsd1.mi.comcast.net)
[11:27:54] *** Joins: i0e (~is0ke3@user/is0ke3)
[11:28:13] *** doc|work is now known as doc
[11:28:32] *** Joins: Seiryuu (~Seiryuu@ip174-103-176-143.adsl2.static.versatel.nl)
[11:28:32] *** Quits: NineBAR (~NineBAR@c-68-56-180-29.hsd1.mi.comcast.net) (Ping timeout: 264 seconds)
[11:28:35] <euouae> c4017: use @contextmanager __new__(cls, ...):
[11:28:42] <euouae> and subclass object
[11:28:52] *** Quits: Seiryuu (~Seiryuu@ip174-103-176-143.adsl2.static.versatel.nl) (Client Quit)
[11:29:42] *** Parts: cjb (~cjb@user/cjb) ()
[11:32:25] *** Joins: P4ddyF (~weechat@p200300def74a010ea82cab51806e6002.dip0.t-ipconnect.de)
[11:32:34] *** Joins: merijn (~merijn@83-160-49-249.ip.xs4all.nl)
[11:32:45] *** Quits: atrigent (~atrigent@130.44.130.244) (Ping timeout: 252 seconds)
[11:33:11] *** Quits: i0e (~is0ke3@user/is0ke3) (Ping timeout: 244 seconds)
[11:34:32] *** Joins: kosh (~kosh@user/kosh)
[11:35:18] *** Joins: i0e (~is0ke3@user/is0ke3)
[11:35:29] <Jimmy2027> hi, I'm trying to verify if a class is a subclass of another with "issubclass", but I get the error "issubclass() arg 1 must be a class" in this example: https://bpa.st/RXJA Does someone know what I'm doing wrong?
[11:36:09] *** Quits: pbryan (~pbryan@S010600306d111fac.vf.shawcable.net) (Quit: pbryan)
[11:38:52] *** Joins: evidlo (~evidlo@2001:470:69fc:105::7fc)
[11:39:11] <euouae> Jimmy2027: a is an instance of a class
[11:39:15] <euouae> not a class
[11:39:45] <Jimmy2027> euouae: oh okay I see
[11:39:50] <Jimmy2027> yeah that makes sense
[11:40:36] <Jimmy2027> hmm but is there a way to check if an instance is a subclass of a class?
[11:40:49] <jinsun> Jimmy2027: isinstance
[11:41:06] *** Quits: evidlo (~evidlo@2001:470:69fc:105::7fc) (Client Quit)
[11:41:24] <Jimmy2027> jinsun: ah great :) thanks!
[11:41:44] *** Quits: audiocat (~audio@2603-8081-1800-0062-4ba3-ff83-f695-5246.res6.spectrum.com) (Ping timeout: 245 seconds)
[11:42:56] *** Quits: puadxtub (~rvgzuuqp@gateway/tor-sasl/rvgzuuqp) (Quit: puadxtub)
[11:43:42] *** Joins: audiocat (~audio@2603-8081-1800-0062-ad7b-86f3-6e7f-113d.res6.spectrum.com)
[11:46:30] *** Quits: Vonter (~Vonter@user/vonter) (Ping timeout: 252 seconds)
[11:46:44] *** Joins: Schnouki (~schnouki@user/schnouki)
[11:46:45] *** Quits: jeho (~jehoshaph@user/jehoshaphat) (Read error: Connection reset by peer)
[11:47:04] *** Joins: jeho (~jehoshaph@user/jehoshaphat)
[11:47:13] *** Joins: rendar (~rendar@user/rendar)
[11:49:29] *** Joins: feriman (~feriman@188.163.113.127)
[11:51:40] *** Quits: pyre (~pyre@crimeboss.nillas-power.com) (Read error: Connection reset by peer)
[11:54:03] *** Quits: SamuelMarks (~samuel@60-241-123-202.static.tpgi.com.au) (Ping timeout: 244 seconds)
[11:54:39] *** Quits: TJ- (~root@2a01:7e00:e001:ee00:fa75:a4ff:fef3:42b4) (Ping timeout: 245 seconds)
[11:58:02] *** Joins: ubh (~ubh@2001:470:69fc:105::852)
[11:58:03] *** Joins: evidlo (~evidlo@2001:470:69fc:105::7fc)
[11:58:03] *** Joins: artemon (~artemon@2001:470:69fc:105::87c)
[11:58:03] *** Joins: ali1234[m] (~ali1234@user/ali1234)
[11:58:03] *** Joins: codemouse92__ (~codemouse@user/codemouse92)
[11:58:03] *** Joins: archwizard (~archwizar@2001:470:69fc:105::929)
[11:58:03] *** Joins: bgardner (~bgardner@2001:470:69fc:105::8a8)
[11:58:03] *** Joins: meain (~meain@2001:470:69fc:105::2db)
[11:58:03] *** Joins: PantelicGR2 (~pantelicg@user/pantelicgr)
[11:58:03] *** Joins: diegov (~diegov@2001:470:69fc:105::103f)
[11:58:17] *** Joins: dontwannatell[m] (~dontwanna@2001:470:69fc:105::c27)
[11:59:01] *** Quits: agumonke` (~user@88.160.31.174) (Ping timeout: 244 seconds)
[12:00:01] *** Joins: p-i-_ (~Ohmu@node-mj1.pool-1-0.dynamic.totinternet.net)
[12:00:16] *** Quits: feriman (~feriman@188.163.113.127) (Quit: WeeChat 3.1)
[12:01:49] *** Quits: bigRoo (~user@131.236.141.15) (Remote host closed the connection)
[12:02:48] *** Joins: neibo (~neibo@143.red-88-5-146.dynamicip.rima-tde.net)
[12:03:26] *** Quits: p-i- (~Ohmu@node-ojy.pool-118-173.dynamic.totinternet.net) (Ping timeout: 272 seconds)
[12:04:46] *** Joins: lukka5 (~lukka5@246-60-231-201.fibertel.com.ar)
[12:05:05] *** Joins: TJ- (~root@2a01:7e00:e001:ee00:fa75:a4ff:fef3:42b4)
[12:05:13] *** Quits: jdmark (~jdmark@67.8.137.130) (Ping timeout: 244 seconds)
[12:06:17] *** Quits: riposte (~finalripo@2403-5800-3200-5c02--310.ip6.aussiebb.net) (Quit: Quitting)
[12:06:23] *** Quits: dfch (~dfch@user/dfch) (Remote host closed the connection)
[12:06:38] *** Quits: ripdog (~quassel@user/ripdog) (Remote host closed the connection)
[12:07:44] *** Joins: simonm (~molzy@user/molzy)
[12:07:53] *** Joins: ExeciN (~ExeciN@user/nicexe)
[12:08:08] *** Joins: chele (~chele@user/chele)
[12:08:10] *** Joins: dfch (~dfch@user/dfch)
[12:08:17] *** Joins: riposte (~finalripo@2403-5800-3200-5c02--310.ip6.aussiebb.net)
[12:09:08] *** Quits: molzy (~molzy@user/molzy) (Ping timeout: 252 seconds)
[12:09:08] *** simonm is now known as molzy
[12:09:52] *** Quits: lukka5 (~lukka5@246-60-231-201.fibertel.com.ar) (Ping timeout: 244 seconds)
[12:10:30] *** Quits: arahael (~arahael@203-206-83-196.tpgi.com.au) (Ping timeout: 264 seconds)
[12:10:43] *** Joins: slav0nic (slav0nic@python.su)
[12:10:55] *** Joins: neceve (~quassel@2a02:c7f:607e:d600:a95a:ecd2:e57a:3130)
[12:11:40] *** Quits: civillian (~nick@ppp118-208-178-29.cbr-trn-nor-bras39.tpg.internode.on.net) (Ping timeout: 272 seconds)
[12:11:53] *** Quits: ApostleInTriumph (~Guest23@vpn2.lix.polytechnique.fr) (Quit: Client closed)
[12:13:28] *** Joins: ripdog (~quassel@user/ripdog)
[12:14:29] *** Joins: especial (~especial@cm-84.214.207.74.getinternet.no)
[12:14:38] *** Joins: Flux (~Fluxx@user/fluxx)
[12:15:09] *** Joins: gr33n7007h (~gr33n7007@user/gr33n7007h)
[12:16:50] *** Joins: zweimer (~Denic@ip-95-222-89-117.hsi15.unitymediagroup.de)
[12:18:32] *** Quits: tg (~tg@rockylinux/infra/tg) (Quit: tg)
[12:18:51] *** Quits: Flux (~Fluxx@user/fluxx) (Remote host closed the connection)
[12:18:58] *** Joins: Mija (~Mija@user/mija)
[12:19:09] *** Joins: brickfat (~brickfat@user/brickfat)
[12:19:53] *** Joins: cedric (~cedric@2a01:cb11:867:c200:f95e:7f54:814f:659b)
[12:20:06] *** Joins: Norore (~weechat@2a01:e0a:23a:5600:b9d3:ae19:12de:25b)
[12:21:47] *** Joins: Julian (~tos9@151.66.53.132)
[12:22:14] *** Quits: P4ddyF (~weechat@p200300def74a010ea82cab51806e6002.dip0.t-ipconnect.de) (Remote host closed the connection)
[12:22:34] *** Joins: teut (~teut@182.69.85.39)
[12:22:48] <teut> Uploaded file: https://uploads.kiwiirc.com/files/2ea0e6283a00f158fdc86ba8fd10ab63/image.png
[12:22:55] <teut> how to junp into this function?
[12:22:55] *** Joins: P4ddyF (~weechat@p200300def74a010ea82cab51806e6002.dip0.t-ipconnect.de)
[12:22:59] <teut> jump
[12:23:23] <teut> that down arrow just jumps to the next line
[12:25:26] *** Joins: doko (~doko@2a02:8106:1a:7600:9e46:fb2:ebcb:17a6)
[12:25:44] *** Quits: doko (~doko@2a02:8106:1a:7600:9e46:fb2:ebcb:17a6) (Remote host closed the connection)
[12:26:13] *** Joins: badsektor (~badsektor@user/badsektor)
[12:27:34] *** Joins: raxor2k (~raxor2k@171.23.6.112)
[12:29:37] *** Quits: gothicserpent (~gothicser@static-198-54-129-78.cust.tzulo.com) (Quit: Leaving)
[12:30:28] *** Joins: dme86 (~dan@user/dan86)
[12:30:31] *** Joins: pwnd_sfw7 (~pwnd_sfw@ool-18b88100.dyn.optonline.net)
[12:31:21] *** Quits: pwnd_sfw (~pwnd_sfw@ool-18b88100.dyn.optonline.net) (Read error: Connection reset by peer)
[12:31:21] *** pwnd_sfw7 is now known as pwnd_sfw
[12:33:24] *** Quits: P4ddyF (~weechat@p200300def74a010ea82cab51806e6002.dip0.t-ipconnect.de) (Remote host closed the connection)
[12:33:51] *** Joins: P4ddyF (~weechat@p200300def74a010ea82cab51806e6002.dip0.t-ipconnect.de)
[12:34:30] *** Quits: Julian (~tos9@151.66.53.132) (Quit: leaving)
[12:34:36] <kosh> teut, I get the same thing with vs code of trying to step into functions from libraries outside of my code
[12:35:11] *** Quits: dme86 (~dan@user/dan86) (Ping timeout: 244 seconds)
[12:35:36] <teut> ok that implies i need to switch to some other ide
[12:35:43] *** Joins: aslicedbanjo (~aslicedba@81.141.54.139)
[12:36:00] <euouae> teut: I hear that pycharm is good
[12:36:23] <teut> problem with pycharm is , for each language download a jetbrains
[12:36:54] <teut> in vscode , just run anything, any language
[12:36:56] *** Quits: hiptobecubic (~john@c-73-55-99-95.hsd1.fl.comcast.net) (Ping timeout: 264 seconds)
[12:37:32] <kosh> probably an option to change it in vscode
[12:37:36] *** Joins: hendursa1 (~weechat@user/hendursaga)
[12:37:37] <kosh> I am checking in something else
[12:37:46] *** Quits: MelMalik (~Ellenor@vice-chairwoman.of.freenode.management) (Quit: Bye Open Projects!)
[12:37:50] <teut> ok
[12:38:59] *** Quits: P4ddyF (~weechat@p200300def74a010ea82cab51806e6002.dip0.t-ipconnect.de) (Remote host closed the connection)
[12:39:40] *** Quits: hendursaga (~weechat@user/hendursaga) (Ping timeout: 252 seconds)
[12:39:48] *** Joins: manti7 (~manti7@176.10.104.94)
[12:40:44] <raxor2k> https://bpa.st/XYHQ   can someone plz tell me what i am doing wrong?
[12:41:54] <kosh> teut: https://code.visualstudio.com/docs/python/debugging   you just need to set justMyCode
[12:42:06] <kosh> teut, the default is just to debug your code only and not into libraries
[12:42:31] <kosh> in vscode you change a config option, in visual studio there is just a checkbox
[12:42:41] *** Joins: P4ddyF (~weechat@p200300def74a010ea82cab51806e6002.dip0.t-ipconnect.de)
[12:44:17] *** Joins: shad (~shad@user/shad)
[12:44:24] <teut> Uploaded file: https://uploads.kiwiirc.com/files/76302d15ea4280545983a3a2bff6b7bb/image.png
[12:44:33] <teut> really this one?,  this says jupyter
[12:46:33] *** Quits: euouae (~user@user/euouae) (Quit: ERC (IRC client for Emacs 26.3))
[12:46:39] *** Joins: gothicserpent (~gothicser@static-198-54-129-78.cust.tzulo.com)
[12:49:12] *** Joins: chowmeined (~chowmeine@user/chowmeined)
[12:49:40] *** Joins: YaknotiS (~YaknotiS@cpc1-cmbg18-2-0-cust87.5-4.cable.virginm.net)
[12:50:33] *** Joins: dob1 (~dob1@user/dob1)
[12:51:05] <teut> didnt work
[12:52:12] *** Joins: dob1_ (~dob1@user/dob1)
[12:52:31] *** Joins: MelMalik (~Ellenor@vice-chairwoman.of.freenode.management)
[12:54:37] <jinsun> teut: you have to create a lunch.json with that option
[12:54:44] <jinsun> *launch.json
[12:54:47] <teut> understood
[12:54:56] <teut> I have that already
[12:55:12] *** Quits: dob1 (~dob1@user/dob1) (Ping timeout: 268 seconds)
[12:55:35] <jinsun> cool, so just add justMyCode: false there
[12:55:36] <teut> actually, there is just seetings.json
[12:55:48] <teut> I ll have to see that
[12:56:29] <teut> reading the docs . ..
[12:56:52] *** Quits: P4ddyF (~weechat@p200300def74a010ea82cab51806e6002.dip0.t-ipconnect.de) (Remote host closed the connection)
[12:57:04] *** Quits: MelMalik (~Ellenor@vice-chairwoman.of.freenode.management) (Quit: Bye Open Projects!)
[12:58:06] <raek> raxor2k: this might be a problem with the docker invocation. have you checked that you mount the files in the right place?
[12:58:51] <raek> this argument looks a bit strange to me: "-v ~/CSV_files:/a_CSV_file.csv"
[12:58:54] *** Joins: lukka5 (~lukka5@246-60-231-201.fibertel.com.ar)
[12:59:08] *** Quits: wyclif (~wyclif@user/wyclif) (Ping timeout: 264 seconds)
[12:59:17] <raxor2k> raek: why does it look strange?
[12:59:36] <raek> the _directory_ named "/a_CSV_file.csv" in the container will be mapped to the directory ~/CSV_files outside teh container
[12:59:39] <raxor2k> I specify the path for my CSV files
[12:59:41] *** Joins: P4ddyF (~weechat@p200300def74a010ea82cab51806e6002.dip0.t-ipconnect.de)
[13:00:06] <raxor2k> raek: ok so i should only use "/CSV:files" then?
[13:00:08] <raek> so the file should end up in /a_CSV_file.csv/a_CSV_file.csv in the container
[13:00:43] <raek> now we're talking about docker rather than python
[13:00:54] *** Joins: PJBoy (~PJBoy@user/pjboy)
[13:02:49] <raek> raxor2k: you need to decide where you want to put the CSV file inside the container. the container has its own file system. if you want to access the file as /files/a_CSV_file.csv inside the container, you need to update the python code to use that path and provide -v ~/CSV_files:/files to docker
[13:03:12] *** Quits: PJBoy (~PJBoy@user/pjboy) (Killed (mercury.libera.chat (Nickname regained by services)))
[13:03:21] *** Joins: PJBoy (~PJBoy@user/pjboy)
[13:03:26] <raek> you can read about how bind mounts work here: https://docs.docker.com/storage/bind-mounts/
[13:03:36] *** Quits: lukka5 (~lukka5@246-60-231-201.fibertel.com.ar) (Ping timeout: 244 seconds)
[13:03:42] <teut> thanks kosh it worked
[13:03:58] <kosh> teut, no problem
[13:04:22] <kosh> teut, what I don't like about vscode is that all of the stuff is configured in text files and you have to know what to put there
[13:04:23] <raxor2k> raek : im confused. Do i need mount as well?
[13:04:56] <teut> ya , its easy to get the json put in the wrong place
[13:05:53] *** Quits: Nact (~l@2a02:a03f:c0b0:f600:3253:5994:1b4f:e854) (Quit: Konversation terminated!)
[13:05:55] *** Joins: vdamewood (~vdamewood@fedora/vdamewood)
[13:06:05] <raxor2k> raek: so i cant have it like this then? https://bpa.st/VAAA
[13:06:19] <raek> raxor2k: what do you mean by "mount as well"? -v performs mounting
[13:07:23] <raek> raxor2k: sorry, this is completely unrelated to python by now. please ask about how to set up docker in a docker channel... :-)
[13:09:29] *** Quits: i0e (~is0ke3@user/is0ke3) (Ping timeout: 244 seconds)
[13:09:48] *** Joins: ham5urg (~ham5urg@p5ddfdd3d.dip0.t-ipconnect.de)
[13:10:19] *** Quits: robot-ch_ (~robot-chi@user/robot-chicken) (Ping timeout: 244 seconds)
[13:11:23] *** Joins: wyclif (~wyclif@user/wyclif)
[13:13:03] *** Joins: i0e (~is0ke3@user/is0ke3)
[13:13:27] *** Joins: dkmueller (~dkmueller@2a01:c22:6e3e:5d00:2f3d:e86b:c2d0:fcf2)
[13:14:14] *** Quits: ionface (~ionface@user/ionface) (Ping timeout: 245 seconds)
[13:15:25] <shad> raxor2k: you should put your csv files in a directory in your host eg "~/my_csv_folder/" and mount that over in docker like "-v ~/my_csv_folder/:/my_csv_folder/". Then from your python code, you `open("/my_csv_folder/some.csv")`
[13:15:54] <shad> assuming your python code runs inside yo docker :o)
[13:16:07] *** Joins: frostschutz (~frostschu@2a01:c22:d4a8:eb00:6137:ef1d:cdb7:87)
[13:16:30] *** Quits: wyclif (~wyclif@user/wyclif) (Ping timeout: 264 seconds)
[13:16:45] *** Quits: badsektor (~badsektor@user/badsektor) (Remote host closed the connection)
[13:17:08] <kosh> teut, part of the reason I prefer using visual studio to visual studio code
[13:17:38] *** Joins: matrixbot_bartab (~matrixbot@155.210.31.93.rev.sfr.net)
[13:18:10] *** Quits: txtsd (~txtsd@user/txtsd) (Ping timeout: 272 seconds)
[13:18:21] <teut> I have tried vs  , but too many buttons on it and no extensions as vscode
[13:20:26] *** Quits: dkmueller (~dkmueller@2a01:c22:6e3e:5d00:2f3d:e86b:c2d0:fcf2) (Quit: WeeChat 3.1)
[13:21:07] *** Quits: Lando-SpacePimp (~Lando@user/lando-spacepimp) (Read error: Connection reset by peer)
[13:21:22] <jinsun> VS is a bit too much for python I think even if the extension were as good, you waste 10-20 gb on your drive instead of 1-2 gb, and looks much uglier too
[13:22:28] *** Joins: dkmueller (~dkmueller@2a01:c22:6e3e:5d00:2f3d:e86b:c2d0:fcf2)
[13:22:43] *** Quits: P4ddyF (~weechat@p200300def74a010ea82cab51806e6002.dip0.t-ipconnect.de) (Ping timeout: 244 seconds)
[13:23:11] <kosh> my visual studio install is about 3.7GB and that include python, c++, cmake, and linux support
[13:23:26] <The-Compiler> coincidentally I'm just working on configuring VS code to work like I want it to :)
[13:24:20] *** Joins: zeenk (~zeenk@2a02:2f04:a310:b600:b098:bf18:df4d:4c41)
[13:24:39] <kosh> most of the time the memory usage and speed is pretty similar between them
[13:24:46] *** Joins: cthulchu (~Cthulchu@195.66.198.226)
[13:24:57] <thinkofher> text editor wars!
[13:24:59] *** Joins: P4ddyF (~weechat@p200300def74a017ed6f7ee150f86f146.dip0.t-ipconnect.de)
[13:25:39] <thinkofher> currently I'm using neovim for all of my coding work, and it works flawlessly
[13:26:10] <thinkofher> especially for python, which is pretty simple language, and doesn't need a lot of whistles and blows
[13:26:31] <The-Compiler> I switched from vim to emacs to VS Code, so I guess I'm as neutral in the editor wars as I can be as someone from Switzerland
[13:26:43] <supakeen> i only write code by hand
[13:26:50] *** Quits: milosz (~milosz@user/milosz) (Remote host closed the connection)
[13:26:50] <supakeen> sometimes i dictate code
[13:27:00] <The-Compiler> supakeen: https://xkcd.com/378/
[13:27:05] <kosh> I don't think we are having a wars
[13:27:24] *** Joins: wyclif (~wyclif@user/wyclif)
[13:27:26] <supakeen> i've contemplated just sucking on an ethernet cable
[13:27:30] <The-Compiler> yeah, let's not turn it into a war :)
[13:27:31] <kosh> actually older vs sucked at lot from 2015 to 2017 to 2019 it is has gotten faster, lower resource usage and gained a lot of useful features
[13:27:56] *** Joins: ionface (~ionface@user/ionface)
[13:28:01] *** Quits: CygniX (~CygniX@2605:6400:30:fdc6:68:f4:4e:78) (Excess Flood)
[13:28:12] <raxor2k> shad: ...
[13:28:16] *** Joins: CygniX (~CygniX@2605:6400:30:fdc6:68:f4:4e:78)
[13:28:55] <kosh> I also think that exactly what you do and how you work will change what type of environment works best for you
[13:29:07] <kosh> VS, VScode, Pycharm, emacs etc all have their place
[13:29:24] <kosh> eclipse also has a place .... with the companion cube
[13:29:57] *** Quits: manti7 (~manti7@176.10.104.94) (Ping timeout: 244 seconds)
[13:30:21] *** Quits: dkmueller (~dkmueller@2a01:c22:6e3e:5d00:2f3d:e86b:c2d0:fcf2) (Ping timeout: 268 seconds)
[13:31:31] *** Joins: Ellenor (~Ellenor@vice-chairwoman.of.freenode.management)
[13:31:48] <Jimmy2027> is it possible to initialise multiple parent classes with a super() call? here for example: https://bpa.st/ON4A how can I correctly pass the init values to both parent classes? or do I have to call their __ini__ functions individually?
[13:32:42] *** Quits: wyclif (~wyclif@user/wyclif) (Ping timeout: 264 seconds)
[13:33:13] *** Ellenor is now known as MelMalik
[13:33:14] *** Joins: lsrtl_ (~lsrtl@user/lsrtl)
[13:34:49] <teut> maybe , I will only understand that when working on bigger projects
[13:35:46] <Marvin> hello. I am puzzled ; if I write sth like `def func(time = now()):` it appears as the content of "time" is set when executing the program, _not_ when calling the function. is this to be expected?
[13:36:39] <teut> yes, that now() is the default value that is assigned to time
[13:37:01] <Marvin> ok thank you
[13:37:56] *** Joins: anandprabhu (~anandprab@87.201.97.214)
[13:38:14] <kosh> Marvin, default args for functions are evaluated at the time the function is created not when it is called
[13:38:40] <kosh> Marvin, normally you would do def func(time=None): if time is None: time  = now()
[13:39:36] *** Quits: cthulchu (~Cthulchu@195.66.198.226) (Ping timeout: 268 seconds)
[13:40:25] <The-Compiler> Marvin: somewhat related: https://docs.python-guide.org/writing/gotchas/#mutable-default-arguments
[13:43:29] <nedbat> Jimmy2027: it's awkward to deal with parents than need different arguments.  Are you sure you want to use multiple inheritance?
[13:44:55] *** Joins: wyclif (~wyclif@user/wyclif)
[13:46:04] *** Joins: fedenix (~fedenix@gateway/tor-sasl/fedenix)
[13:46:18] <Jimmy2027> nedbat: hmm yeah maybe I could find a was by creating more parentclasses that inherit from each other
[13:46:36] <nedbat> Jimmy2027: that's still multiple inheritance, right?
[13:47:59] <Jimmy2027> I guess I could find a way such that every parent class only inherits from one other parent class
[13:49:42] *** Quits: wyclif (~wyclif@user/wyclif) (Ping timeout: 252 seconds)
[13:49:57] *** Quits: zaquest (~notzaques@5.128.210.178) (Quit: Leaving)
[13:50:55] *** Joins: txtsd (~txtsd@user/txtsd)
[13:51:08] <nedbat> Jimmy2027: ok, but let's talk about the eventual child class. how many parents will it have? Where to do the arguments for the parents come from?
[13:51:08] *** Joins: zaquest (~notzaques@5.128.210.178)
[13:52:27] <Jimmy2027> nedbat: hmm let me construct an example that resembles more my use case
[13:53:01] *** Joins: lukka5 (~lukka5@246-60-231-201.fibertel.com.ar)
[13:56:22] *** Joins: n0cto (~n0cto@174.128.227.49)
[13:56:52] *** Joins: dme86 (~dan@user/dan86)
[13:57:04] *** Quits: biozz (~biozz@178.57.22.163) (Remote host closed the connection)
[13:57:42] *** Joins: biozz (~biozz@178.57.22.163)
[13:57:54] <thinkofher> The-Compiler: whoaaa, didn't know that
[13:58:30] *** Quits: lukka5 (~lukka5@246-60-231-201.fibertel.com.ar) (Ping timeout: 264 seconds)
[13:58:32] <raek> Jimmy2027: one approach is to make each parent class consume keyword arguments meant for itself and pass along the rest. that approach works with multiple inheritance: https://rhettinger.wordpress.com/2011/05/26/super-considered-super/
[14:00:02] <raek> perhaps others in this channel can comment on if that approach is considered good these days
[14:00:31] <Jimmy2027> my usecase looks more like this: https://bpa.st/QZYA It works fine but I was wondering if this is the right way to do it
[14:00:39] *** Joins: wyclif (~wyclif@user/wyclif)
[14:01:15] *** Quits: i0e (~is0ke3@user/is0ke3) (Ping timeout: 252 seconds)
[14:01:47] *** Quits: Betal (~Beta@user/betal) (Quit: WeeChat 3.1)
[14:02:06] *** Quits: biozz (~biozz@178.57.22.163) (Ping timeout: 264 seconds)
[14:02:39] <nedbat> raek: that is the best way if you have to do it
[14:03:13] <nedbat> Jimmy2027: consider whether you can use composition instead of inheritance.  what if FlowA didn't inherit from Flow, but had a Flow attribute instead?
[14:03:15] <raek> Jimmy2027: to me it looks like you are sidestepping the Method Resolution Order by manually calling specifc superclass constructors
[14:03:48] *** Joins: i0e (~is0ke3@user/is0ke3)
[14:03:51] <raek> the MRO for FlowA is FlowA, Flow, A, Base, object
[14:03:58] *** Joins: predmijat (~predmijat@mail.strogopro.com)
[14:04:34] <raek> that means that for a FlowA instance, super().some_method() will call the corresponding method in the class next in the MRO
[14:04:35] <Jimmy2027> nedbat: hmm but what if I want to add methods for every class that has the Flow attribute?
[14:05:16] <Jimmy2027> raek: is sidestepping the Method Resolution Order bad in this case?
[14:05:18] <raek> so in Flow, super().__init__() will call A.__init__(), even if Flow does not know about A
[14:05:37] <Jimmy2027> oh I see
[14:05:42] *** Quits: wyclif (~wyclif@user/wyclif) (Ping timeout: 264 seconds)
[14:06:26] <raek> Jimmy2027: I just wanted to point out that the MRO might already do what you want. there might be many valid options.
[14:07:48] <raek> but yeah, there might be a simpler solution than involving inheritance
[14:08:29] *** Quits: aslicedbanjo (~aslicedba@81.141.54.139) (Ping timeout: 252 seconds)
[14:09:13] *** Joins: f1se4 (~f1se4@213.195.98.55)
[14:09:18] <Jimmy2027> yup, probably.. I will try to find something simpler
[14:11:03] *** Quits: vdamewood (~vdamewood@fedora/vdamewood) (Quit: My MacBook Pro has gone to sleep. ZZZzzz…)
[14:11:16] *** Joins: aslicedbanjo (~aslicedba@host31-52-127-233.range31-52.btcentralplus.com)
[14:12:50] *** Quits: kosh (~kosh@user/kosh) (Ping timeout: 244 seconds)
[14:17:42] *** Quits: ionface (~ionface@user/ionface) (Ping timeout: 264 seconds)
[14:17:45] *** Joins: cdown_ (~cdown@89.32.122.5)
[14:18:21] *** Joins: milosz (~milosz@user/milosz)
[14:18:34] *** Joins: wyclif (~wyclif@user/wyclif)
[14:20:52] *** Quits: cdown (~cdown@89.32.122.5) (Ping timeout: 272 seconds)
[14:21:50] *** Joins: kosh (~kosh@user/kosh)
[14:23:15] *** Quits: wyclif (~wyclif@user/wyclif) (Ping timeout: 252 seconds)
[14:27:46] *** Joins: biozz (~biozz@178.57.22.163)
[14:28:13] *** Joins: betuxy (~betuxy@158.181.77.59)
[14:28:25] *** Quits: xkuru (~xkuru@user/xkuru) (Read error: Connection reset by peer)
[14:29:39] *** Quits: audiocat (~audio@2603-8081-1800-0062-ad7b-86f3-6e7f-113d.res6.spectrum.com) (Ping timeout: 245 seconds)
[14:30:14] *** Quits: staticfox (~kvirc@user/blindsight) (Read error: Connection reset by peer)
[14:34:54] *** Joins: wyclif (~wyclif@user/wyclif)
[14:37:26] *** Joins: cthulchu (~Cthulchu@195.66.198.226)
[14:38:39] *** Quits: jvalleroy (~quassel@user/jvalleroy) (Quit: http://quassel-irc.org - Chat comfortably. Anywhere.)
[14:38:49] *** Joins: jvalleroy (~quassel@user/jvalleroy)
[14:39:42] *** Quits: jvalleroy (~quassel@user/jvalleroy) (Client Quit)
[14:39:51] *** Joins: jvalleroy (~quassel@user/jvalleroy)
[14:39:51] *** Quits: jvalleroy (~quassel@user/jvalleroy) (Client Quit)
[14:40:00] *** Joins: jvalleroy (~quassel@user/jvalleroy)
[14:40:14] *** Quits: jvalleroy (~quassel@user/jvalleroy) (Client Quit)
[14:40:23] *** Joins: jvalleroy (~quassel@user/jvalleroy)
[14:40:30] *** Quits: boB_K7IQ (~boB_K7IQ@ip98-177-87-213.ph.ph.cox.net) (Ping timeout: 272 seconds)
[14:40:30] *** Quits: KevinX (~KevinX@73.156.245.59) (Ping timeout: 272 seconds)
[14:40:33] *** Quits: f1se4 (~f1se4@213.195.98.55) (Read error: Connection reset by peer)
[14:41:07] *** Joins: boB_K7IQ (~boB_K7IQ@ip98-177-87-213.ph.ph.cox.net)
[14:41:10] *** Joins: timkofu (~timkofu@user/timkofu)
[14:41:10] *** Joins: entuland (~entuland@user/entuland)
[14:41:12] <timkofu> Hi
[14:41:57] *** Quits: wyclif (~wyclif@user/wyclif) (Ping timeout: 252 seconds)
[14:41:57] *** Joins: KevinX (~KevinX@73.156.247.3)
[14:43:56] *** Joins: dambuster_ (~dambuster@185.193.170.225)
[14:44:14] *** Quits: i0e (~is0ke3@user/is0ke3) (Ping timeout: 252 seconds)
[14:45:37] <drogas> does `dict.items()` make the dictionary iterable?
[14:45:52] *** Joins: feriman (~feriman@188.163.113.127)
[14:46:09] *** Joins: i0e (~is0ke3@user/is0ke3)
[14:46:25] <drogas> I am seeing `for c, n in dict.items()` and I am guessing it will make both the key and the value iterable?
[14:47:09] *** Joins: lukka5 (~lukka5@246-60-231-201.fibertel.com.ar)
[14:49:02] <nedbat> drogas: yes, that iterates over them both, giving you the pairs
[14:49:05] <nedbat> timkofu: hey, what's up?
[14:51:19] *** Joins: pyre (~pyre@crimeboss.nillas-power.com)
[14:51:51] *** Quits: lukka5 (~lukka5@246-60-231-201.fibertel.com.ar) (Ping timeout: 252 seconds)
[14:53:00] <caveman> how to exit an if block early on?
[14:53:43] <teut> return ?
[14:53:58] <teut> or just break
[14:54:01] <caveman> that will return the function.  i just want to exit the block early on and continue to the rest of the function
[14:54:05] *** Joins: wyclif (~wyclif@user/wyclif)
[14:54:17] <caveman> oh break.  neat.
[14:54:31] <teut> or continue
[14:54:41] <caveman> continue is only for loops, no?
[14:54:59] <teut> the difference is only felt if you r in a loop
[14:55:03] <zweimer> Can someone explain to me why this code doesn't work: https://bpa.st/DHSQ  There seems to be a problem with the import parse bit. I am using the same module and method in other projects.
[14:55:06] <teut> otherwise both are same
[14:55:16] <caveman> teut: which one is recommended for a non-looping if statement?
[14:55:42] *** Quits: merijn (~merijn@83-160-49-249.ip.xs4all.nl) (Ping timeout: 272 seconds)
[14:55:51] <teut> you decide what you like and you can understand what it's doing in future
[14:55:59] <drogas>  nedbat thank
[14:56:02] <drogas> you
[14:56:04] <caveman> teut: doesn't work.  gives error 'break outside loop'.
[14:56:47] *** Joins: merijn (~merijn@83-160-49-249.ip.xs4all.nl)
[14:56:52] <teut> can you show your code?
[14:57:13] <caveman> yes.  1min.
[14:57:50] <teut> zweimer  the error  clearly tells it
[14:57:52] <nedbat> caveman: break doesn't end an if statement.
[14:58:01] <caveman> what ends it?
[14:58:11] <nedbat> caveman: nothing ends it.  can you link us to the code you are dealing with?
[14:58:12] <The-Compiler> zweimer: do you have a parse.py in the same folder?
[14:58:14] *** Joins: ThanatosJ (~Thanatos@197.210.64.146)
[14:58:18] <caveman> ok.
[14:58:45] <nedbat> caveman: where you wanted to write `if something: break;; more_stuff` instead write:  `if not something: more_stuff`
[14:59:06] <The-Compiler> zweimer: a print(ps.__file__) right after the import might tell you more about where the import is coming from
[14:59:34] <zweimer> I will try that.
[15:00:59] <teut> is  .search   a @property  zweimer?
[15:01:09] <caveman> nedbat: https://github.com/Al-Caveman/nsapass/blob/dev/nsa#L674
[15:01:32] <zweimer> "\pythonProject\venv\lib\site-packages\parse\__init__.py" is being printed. I do not understand why it apprently can't find the module but then doesn't complaint it can't find it but tells me that a method inside doesn't exists. Doesn't make sence to me.
[15:01:52] <zweimer> https://pypi.org/project/parse/
[15:02:14] <nedbat> caveman: first, this function is getting long, so you might want to consider breaking it into smaller chunks.
[15:02:21] <teut> caveman why not just just push the code underneath inside the block, you can abstract the code underneath to a new function
[15:02:34] <zweimer> teut, it is a function from: https://pypi.org/project/parse/
[15:02:46] <nedbat> caveman: the simple fix for this code is to change line 673 to: if ipc_session(session, sessions):    and then indent the lines under it.
[15:02:55] *** Quits: ThanatosJ (~Thanatos@197.210.64.146) (Ping timeout: 272 seconds)
[15:03:59] *** Quits: hnOsmium0001 (uid453710@id-453710.stonehaven.irccloud.com) (Quit: Connection closed for inactivity)
[15:04:12] <nedbat> caveman: but why not move lines 658-696 into a `def handle_GET` function?
[15:04:13] <caveman> nedbat: will do that, ty.
[15:04:19] *** Joins: cthulchu_ (~Cthulchu@195.66.198.226)
[15:05:36] *** Quits: cthulchu (~Cthulchu@195.66.198.226) (Ping timeout: 252 seconds)
[15:06:22] <caveman> nedbat: ipc_do is currently a draft.  once i add the rest, i'll re-think about how wot optimise it.   but currently the problem is that i want 1st to show printentry(...) (in line 672) before doing ipc_session check, because the ipc_session check will ask if i want to approve the session.  i think it's useful to approve the session after seeing printentry
[15:06:45] <caveman> wot=to*
[15:06:47] *** Quits: merijn (~merijn@83-160-49-249.ip.xs4all.nl) (Ping timeout: 252 seconds)
[15:07:37] <caveman> initially i had printentry early on in the function ipc_do.  but it was sort of not very clear what am i approving, or whether the session is actually about to do what i think it will.
[15:07:38] *** Joins: nyah (~nyah@90.221.186.180)
[15:07:59] <teut> zweimer  , your ps is a class it seems
[15:08:11] <teut> https://github.com/r1chardj0n3s/parse/blob/b7feb75c018ace94b4a58eb8829da0797e06e0f8/parse.py#L808
[15:08:25] *** Joins: merijn (~merijn@83-160-49-249.ip.xs4all.nl)
[15:10:08] <zweimer> teut, I am using the same module in an other project and I just copied some of the code over. It works in the other project just fine.
[15:11:04] <zweimer> I can't understand for the life of me what I have to do to make PyCharm realise that I want to use the parse module which I installed in the venv of the project. This seems low key troll.
[15:11:52] *** Quits: Blu-ray (~Blu-ray@user/zapdos) (Quit: Connection closed)
[15:11:55] *** Quits: raxor2k (~raxor2k@171.23.6.112) ()
[15:12:47] <nedbat> zweimer: what do you mean, "I just copied some of the code over"?  Your code, or the parse code?  How did you install parse?
[15:13:48] *** Quits: merijn (~merijn@83-160-49-249.ip.xs4all.nl) (Ping timeout: 244 seconds)
[15:14:02] *** Joins: merijn (~merijn@83-160-49-249.ip.xs4all.nl)
[15:14:27] *** Joins: tofran (~tofran@37.189.158.134)
[15:14:46] <zweimer> nedbat, I just wanted to verify some behaviour of my project. I created a new one, went to File -> Settings -> Project: xxx -> Python Interpreter and added pandas, numpy and parse to the project.
[15:15:18] <nedbat> zweimer: i don't use pycharm, sorry. when you say, "added", you use a PyCharm action that installs packages from PyPI?
[15:16:00] *** Joins: fabs (~fabs@samba.ethz.ch)
[15:16:13] <zweimer> nedbat, correct. I don't know where the module is actually being located in the end. It installs it apparently in an virtual environment, thus I also didn't touch the parse-code.
[15:18:03] *** Quits: feriman (~feriman@188.163.113.127) (Quit: WeeChat 3.1)
[15:18:15] <nedbat> zweimer: can you open "\pythonProject\venv\lib\site-packages\parse\__init__.py" and see what is in it?  The parse project doesn't seem to be structured like that.
[15:19:10] *** Quits: bitdex (~bitdex@gateway/tor-sasl/bitdex) (Quit: = "")
[15:19:21] *** Quits: merijn (~merijn@83-160-49-249.ip.xs4all.nl) (Ping timeout: 252 seconds)
[15:19:40] *** Joins: wattux (~wattux@212.51.23.106)
[15:19:49] <zweimer> \venv\Lib\site-packages   contains actually a file called parse.py and a folder called parse-1.19.0-py3.8.egg-info (no python files inside)
[15:19:56] *** Joins: merijn (~merijn@83-160-49-249.ip.xs4all.nl)
[15:20:05] <nedbat> zweimer: oh, you mentioned that other file before.
[15:20:58] <zweimer> I did. It was the result from " print(ps.__file__)"
[15:21:01] *** Quits: Nine_BAR (~NineBAR@c-68-56-180-29.hsd1.mi.comcast.net) (Quit: Leaving)
[15:21:15] <nedbat> zweimer: can you give us the link to your file again?
[15:21:32] <nedbat> zweimer: ok, and what is in \pythonProject\venv\lib\site-packages\parse\__init__.py ?
[15:21:38] *** Quits: biozz (~biozz@178.57.22.163) (Remote host closed the connection)
[15:22:06] *** Quits: ham5urg (~ham5urg@p5ddfdd3d.dip0.t-ipconnect.de) (Ping timeout: 252 seconds)
[15:22:12] *** Joins: biozz (~biozz@178.57.22.163)
[15:22:17] <zweimer> The folder parse does not exist. Just "parse-1.19.0-py3.8.egg-info"
[15:22:28] *** Quits: mexen (uid495612@user/mexen) (Quit: Connection closed for inactivity)
[15:22:29] *** Quits: biozz (~biozz@178.57.22.163) (Read error: Connection reset by peer)
[15:22:44] *** Joins: biozz (~biozz@178.57.22.163)
[15:23:02] <zweimer> I might just dump this project and start a new one. Something seems to be not right at all. I might also consider changing the IDE.
[15:23:06] <nedbat> zweimer: something got tangled up if __file__ is referring to a file that doesn't exist.  I would recreate the venv
[15:23:20] <zweimer> Yeah or recreate venv
[15:23:24] <nedbat> zweimer: PyCharm is heavily used, i wouldn't dump it yet if you like it.
[15:23:59] <Yhg1s> I suspect what happened is that you installed a different package from PyPI providing a 'parse' module-package, imported it, and then uninstalled it. If you don't restart the interpreter, the wrong 'parse' module stayed in memory.
[15:24:08] <zweimer> I do not get the concept of venv's. I don't understand why I would want to sandbox every projects environment.
[15:24:29] <nedbat> zweimer: different projects might have conflicting requirements.
[15:24:30] <Yhg1s> zweimer: because Python is used everywhere, and it's very easy to get conflicting modules installed.
[15:25:01] <zweimer> Right. I can see that.
[15:25:05] *** Joins: xkuru (~xkuru@user/xkuru)
[15:25:19] *** Joins: thiras_ (~thiras@user/thiras)
[15:25:28] *** Joins: PantelicGR (~PantelicG@user/pantelicgr)
[15:25:55] *** Quits: thiras_ (~thiras@user/thiras) (Remote host closed the connection)
[15:25:57] *** Joins: Masklin_Gurder (~joel@93.182.183.85)
[15:26:34] *** Joins: SebastianM (~seba@user/sebastianm)
[15:26:48] <zweimer> :D that was the mistake. I just selected the venv of my "old" already working project and it works now too. Thank you guys :-)
[15:27:45] *** Quits: shad (~shad@user/shad) (Ping timeout: 244 seconds)
[15:29:00] *** Quits: iflema (~ian@user/iflema) (Quit: iflema)
[15:30:54] *** Quits: merijn (~merijn@83-160-49-249.ip.xs4all.nl) (Ping timeout: 264 seconds)
[15:31:03] *** Joins: varaindemian (~varaindem@82.76.227.126)
[15:31:23] <varaindemian> anyone know why this script doesn't work in docker? https://pastebin.com/8pRvV4np
[15:31:25] *** Joins: merijn (~merijn@83-160-49-249.ip.xs4all.nl)
[15:32:23] <varaindemian> it gets in a lopp without exit
[15:32:55] <varaindemian> Requirement already satisfied:
[15:33:01] <varaindemian> this is what it keeps saying
[15:33:16] *** Quits: SebastianM (~seba@user/sebastianm) (Quit: Bye)
[15:33:34] *** Joins: thiras (~thiras@user/thiras)
[15:33:45] *** Joins: cdown (~cdown@163.114.131.1)
[15:34:04] *** Quits: teut (~teut@182.69.85.39) (Quit: Connection closed)
[15:34:38] *** Joins: darksun (~darksun@user/darksun)
[15:35:09] *** Quits: kixx (~kixx@user/kixx) (Read error: Connection reset by peer)
[15:35:27] *** Joins: azed (~azed@160.159.122.89)
[15:35:54] <varaindemian> anyone?
[15:36:11] <bjs> varaindemian: your bare `except:` is catching everything that could possibly go wrong and hide what it was
[15:36:24] <bjs> why not catch the specific ImportError's (and print out which wasn't found) so you can debug it
[15:36:34] *** Quits: entuland (~entuland@user/entuland) (Quit: Leaving)
[15:36:46] <varaindemian> bjs: hmm super good point. hoW?
[15:36:56] *** Quits: cdown_ (~cdown@89.32.122.5) (Ping timeout: 264 seconds)
[15:36:58] *** Quits: merijn (~merijn@83-160-49-249.ip.xs4all.nl) (Ping timeout: 265 seconds)
[15:37:05] <bjs> varaindemian: `except ImportError as e: print("import failed", e)` or something ?
[15:37:14] *** Joins: merijn (~merijn@83-160-49-249.ip.xs4all.nl)
[15:37:36] <varaindemian> bjs: https://pastebin.com/C2GXNSVr
[15:37:39] <varaindemian> the errors
[15:38:05] <bjs> varaindemian: I mean none of those are errors
[15:38:08] <bjs> they're just output from pip
[15:38:11] *** Quits: biozz (~biozz@178.57.22.163) (Remote host closed the connection)
[15:38:15] <varaindemian> yeah
[15:38:26] <varaindemian> bjs: it's a fucking loop
[15:38:32] <bjs> varaindemian: yes
[15:38:45] *** Joins: biozz (~biozz@178.57.22.163)
[15:39:25] *** Quits: biozz (~biozz@178.57.22.163) (Remote host closed the connection)
[15:39:41] *** Joins: biozz (~biozz@178.57.22.163)
[15:39:50] *** Joins: Samian (~Samian@2620:10d:c090:400::5:2f74)
[15:40:46] *** Joins: ham5urg (~ham5urg@p5ddfdd3d.dip0.t-ipconnect.de)
[15:41:08] *** Joins: clf59 (~clf59@user/clf59)
[15:41:18] *** Joins: lukka5 (~lukka5@246-60-231-201.fibertel.com.ar)
[15:41:23] <rubin55> hey all, I'm getting some unexpected breakage with Python 3.9.5. The following works with 3.8.5:
[15:41:29] <rubin55> for (_, module_name, _) in iter_modules([Path(__file__).resolve().parent]):
[15:41:50] <rubin55> In 3.9.5 that gives me: AttributeError: 'PosixPath' object has no attribute 'startswith'
[15:42:25] <rubin55> I suspect iter_modules changed? But I can't find any reference to it in the docs
[15:43:00] <rubin55> (https://docs.python.org/3.9/library/pkgutil.html#pkgutil.iter_modules)
[15:43:13] <bjs> rubin55: https://bugs.python.org/issue44061
[15:44:10] <rubin55> bjs: wow! thanks
[15:44:24] *** Joins: entuland (~entuland@user/entuland)
[15:44:29] *** Quits: TJ- (~root@2a01:7e00:e001:ee00:fa75:a4ff:fef3:42b4) (Ping timeout: 244 seconds)
[15:44:50] *** Quits: Lord_of_Life (~Lord@user/lord-of-life/x-2819915) (Excess Flood)
[15:45:36] <varaindemian> removed that try and except and installed the packages before running the script. And now I have this: https://pastebin.com/jBGZwi1F
[15:45:44] *** Joins: Lord_of_Life (~Lord@user/lord-of-life/x-2819915)
[15:46:19] *** Quits: lukka5 (~lukka5@246-60-231-201.fibertel.com.ar) (Ping timeout: 252 seconds)
[15:47:34] *** Joins: IHasFinger (~JJ_@2a02:c7f:fc54:ba00:4da8:f0d9:546b:cae4)
[15:48:46] *** Joins: n00b101 (uid448161@id-448161.tooting.irccloud.com)
[15:48:46] *** Joins: plastico (~plastico@2001:8a0:de6b:1a00:9d14:766e:70a8:dcea)
[15:48:51] <n00b101>  Hello.. I have a raspberry pi, I have designed a switch which with output a 3.3v to pi GPIO input pin, when this signal is received to PI, I need to print "signal received". How should I execute this approach?
[15:49:10] *** Quits: Meteorhead (~Meteorhea@165.225.21.61) (Ping timeout: 250 seconds)
[15:49:46] <bjs> varaindemian: well that heavily implies you didn't install cv2 properly
[15:49:51] <IHasFinger> hi guys you know in javascript you can set it to make a ajax call everything X minutes. I have a non web application with python just a python script. How can I set it to call run a method in a class every 10 seconds? each time it runs the i am storing a few things in a variables so it needs to use it again with each run
[15:50:08] *** Joins: lacrymology (~lacrymolo@static-202-2-25-46.ipcom.comunitel.net)
[15:50:35] <bjs> varaindemian: https://pypi.org/project/opencv-python/ suggests maybe you wanted opencv-python-headless
[15:53:01] <entuland> IHasFinger, I don't know if there is any specific feature to implement such timeouts with basic standalone scripts, probably you just want an idle infinite loop that waits and executes such calls at intervals
[15:53:27] <entuland> with time.sleep() or something
[15:54:02] *** Joins: kixx (~kixx@user/kixx)
[15:57:29] *** Joins: TJ- (~root@2a01:7e00:e001:ee00:ea6f:38ff:fed4:3289)
[15:58:15] *** Joins: euouae (~user@user/euouae)
[15:58:32] <euouae> Hello I have a class with attrs, how should I serialize it to disk to re-read it again?
[15:59:34] *** Joins: teut (~teut@182.69.85.39)
[15:59:35] <entuland> euouae, did you check the Data Persistence section of the docs already? https://docs.python.org/3/library/persistence.html
[16:01:04] *** Joins: wedof (~wedof@2a02:810c:c0:3b98:aaa1:59ff:fe1e:4d38)
[16:01:16] <euouae> entuland: OK I guess there's nothing particular about attrs
[16:01:40] <lacrymology> I'm looking for the best way to wrap, decorate, or subclass a class with some async methods to make them synchronous
[16:01:59] <entuland> sorry, not expert enough to be able to tell for sure, euouae, I guess it's safe to just do it and check if you get all of your data back intact
[16:02:19] <teut> Uploaded file: https://uploads.kiwiirc.com/files/df0c2f3ef58121e69c477c82b3344d8c/image.png
[16:02:34] <euouae> entuland: there seem to be some criticism of pickle with regards to safety too
[16:02:35] <teut> something messed up in my vscode after today's update
[16:02:36] *** Quits: xkuru (~xkuru@user/xkuru) (Remote host closed the connection)
[16:02:54] <entuland> euouae, read that remark again - the point is about unpickling data you don't trust
[16:03:09] <entuland> if you are the one serializing, you should be safe unserializing
[16:03:10] <teut> I m trying to run   , debug django from the "Start debugging"
[16:03:34] <euouae> entuland: I am unserializing from a database
[16:03:34] <teut> Uploaded file: https://uploads.kiwiirc.com/files/b5595a3c4f21370bbfa0ece4f191280a/pasted.txt
[16:03:47] <euouae> entuland: a simple file on the computer. I don't want anything fishy going on
[16:03:57] <teut> I also added launch.json today so probably this mangled it
[16:04:04] <entuland> anything that can read executable data can be a security concern, you should be fine if you are the only one adding data to that database
[16:04:09] <teut> can someone tell the problem?
[16:04:52] <entuland> if you don't like those options you could search for alternative approaches or even likely implement your own persistence facilities
[16:04:54] <euouae> entuland: but I can't guarantee that. the user chooses the database
[16:05:30] *** Quits: clf59 (~clf59@user/clf59) (Quit: Textual IRC Client: www.textualapp.com)
[16:05:32] <entuland> then you may want not to serialize / unserialize, but read the data separately and validate it
[16:05:34] *** Joins: Bronto22 (~mennoh@84-86-247-193.fixed.kpn.net)
[16:06:02] <euouae> entuland: attrs already seems to have a pretty printer
[16:06:07] <euouae> It'd be nice if it had a reader too. I guess not
[16:06:43] <entuland> hard to tell without knowing the kind of data you're dealing with
[16:06:56] <euouae> named tuples. Strings
[16:07:15] <entuland> then you should be fine implementing your own writer / readers
[16:07:16] <euouae> lists and dicts
[16:07:21] <entuland> data seems simple enough
[16:07:24] *** Quits: cedric (~cedric@2a01:cb11:867:c200:f95e:7f54:814f:659b) (Quit: Konversation terminated!)
[16:07:33] <entuland> I mean, if you don't want to trust any existing automated system
[16:08:48] <entuland> you can try googling something like "python serialization ensuring no executable code" or similar queries about ensuring that all of the data you get back is plain strings or the alike
[16:09:18] <entuland> and variations thereof (serialization vs persistence and so forth)
[16:10:06] *** Quits: salpynx (~salpynx@121.73.84.248) (Quit: Connection closed)
[16:10:31] *** Quits: teut (~teut@182.69.85.39) (Quit: Connection closed)
[16:10:57] *** Joins: raxor2k (~raxor2k@171.23.6.112)
[16:12:12] *** Joins: iflema (~ian@user/iflema)
[16:12:49] *** Joins: gloomy (~ldorigo@81.161.149.37)
[16:13:03] *** Joins: ThanatosJ (~Thanatos@197.210.64.146)
[16:13:34] <euouae> entuland: it has an 'attr.asdict()' function that turns a class into a dictionary. Is that enough?
[16:13:34] <gloomy> Hey. What's the same way to get a list of files (in a directory
[16:13:45] <gloomy> Hey. What's the same way to get a list of files (in a directory) filtered by a regex? *
[16:13:45] <euouae> gloomy: You can use Path
[16:14:26] <gloomy>  I'm doing pathlib.Path(dir).glob("*"), then converting to string, and using regex to match the string, but it feels wrong
[16:14:27] <euouae> gloomy: for listing https://docs.python.org/3/library/pathlib.html#basic-use, then you'd use the regex on the results (import re)
[16:14:42] <euouae> What are you converting into a string?
[16:14:48] <gloomy> the path.
[16:15:14] <gloomy> I mean, the resulting paths that .glob gives me.
[16:15:55] <euouae> gloomy: how do you convert? str(p)?
[16:15:56] <gloomy> it works of course - but it feels stupid first doing a glob for one pattern, and then using regex to filter those results again
[16:16:03] <gloomy> that or as_posix
[16:16:26] *** Joins: zebrag (~chris@user/zebrag)
[16:16:36] <euouae> If you don't like how it feels, you can write your own API. Under the hood, you'd be globbing and then applying regexes
[16:17:05] <euouae> Another option is to use a low level directory library to get /all/ the results and then use regexes
[16:17:08] <grawity> why do a glob in the first place then
[16:17:17] <euouae> To get all the files grawity
[16:17:37] <grawity> then I'd use Path(dir).iterdir() or even os.listdir(dir) if you want raw strings anyway
[16:17:38] *** Joins: ExeciN17 (~ExeciN@user/nicexe)
[16:18:01] <euouae> doesn't listdir require you to use it on the subdirectories? it's a tree algorithm
[16:18:03] <euouae> versus a simple glob
[16:18:06] <gloomy> yes that probably maes more sense
[16:18:49] <grawity> euouae: I think you're thinking of os.walk
[16:19:06] <grawity> listdir() just lists the dir
[16:19:19] <euouae> Right, but I imagine that gloomy wants to list the subdirectories as well
[16:19:29] <grawity> but that's not what glob("*") did anyway
[16:19:40] <euouae> Maybe that's not the glob he's globbing for
[16:19:58] <euouae> There's **/*
[16:20:18] *** Joins: badsektor (~badsektor@user/badsektor)
[16:20:23] <entuland> euouae, that may help in converting the attributes into a dictionary but that doesn't guarantee that you won't end up with executable code (as you can put functions as dictionary values, if I'm not mistaken) - that should probably still be safe as long as you're not actively calling such functions, but I'm not a security expert and I can't tell if you need to be more paranoid and validate each datum individually or the alike
[16:20:48] <euouae> entuland: hm. I can write validators for my classes in attrs. I could do that
[16:21:00] <entuland> that's probably for the best
[16:21:14] *** Quits: ExeciN (~ExeciN@user/nicexe) (Ping timeout: 250 seconds)
[16:21:19] <euouae> entuland: how would I read the dict back into my class? class.attr = read_stuff[attr]?
[16:21:57] <entuland> that's the actual serialization step you need to either use an existing library / facility, or implement your own
[16:22:22] <euouae> I'm guessing that Python has no built-in "read a dictionary" right?
[16:22:54] *** Joins: CoderGuy (~CoderGuy@2601:644:101:4f20:532:af2a:e595:c70a)
[16:23:34] <deniska> euouae: read from what?
[16:24:09] <entuland> well, there is a very unsafe and powerful built in which you don't want to use (eval()) - what you want is again either a persistence library (and I pointed out the ones referenced in the docs) or find third party ones or roll your own out
[16:24:18] <euouae> deniska: text representation
[16:24:41] <Yhg1s> euouae: what does the dict contain? JSON is a common format to use.
[16:24:44] <Yhg1s> (but there are others.)
[16:24:59] <euouae> I've heard of ion too
[16:25:28] <euouae> Yhg1s: it's an attr class of attributes: str, Dict and List and combinations thereof
[16:26:08] *** Quits: azed (~azed@160.159.122.89) (Ping timeout: 244 seconds)
[16:26:13] <Yhg1s> euouae: oh, attrs. it has some support to serialise/deserialise to JSON, but again, there's plenty of other formats that you could serialise to.
[16:26:38] *** Parts: CoderGuy (~CoderGuy@2601:644:101:4f20:532:af2a:e595:c70a) (Leaving)
[16:31:54] *** Joins: brownan (~brownan@136.56.137.143)
[16:32:01] *** Joins: pbryan (~pbryan@S010600306d111fac.vf.shawcable.net)
[16:32:47] <graingert> Yhg1s: I thought it converted to "universal datastructures"
[16:33:31] *** Joins: nomic (~nomic@2a00:23c6:9910:1201:cdae:ea4b:93a4:1c59)
[16:34:52] <p-i-_> Des cancelling an asyncio task propagate the cancel to all subtasks?
[16:34:59] <p-i-_> *Does
[16:35:28] *** Joins: lukka5 (~lukka5@246-60-231-201.fibertel.com.ar)
[16:36:02] *** Quits: supakeen (~user@python/site-packages/supakeen) (Quit: WeeChat 3.1)
[16:36:16] *** Quits: srji_ (~srji@static.43.141.203.116.clients.your-server.de) (Quit: leaving)
[16:36:24] *** Joins: srji (~srji@static.43.141.203.116.clients.your-server.de)
[16:36:38] *** Joins: supakeen (~user@python/site-packages/supakeen)
[16:37:17] *** Joins: zeden (~zeden@user/zeden)
[16:37:46] <nomic> z.
[16:39:16] *** Quits: especial (~especial@cm-84.214.207.74.getinternet.no) (Remote host closed the connection)
[16:40:05] *** Quits: lukka5 (~lukka5@246-60-231-201.fibertel.com.ar) (Ping timeout: 244 seconds)
[16:40:12] <IHasFinger> to check if a list is not empty is it a case of doing this  my_list =[] if not my_list:
[16:40:12] <IHasFinger>  print("I am not empty")
[16:40:38] *** Quits: fabs (~fabs@samba.ethz.ch) (Quit: fabs)
[16:41:01] *** Joins: c_89 (~c_89@151.74.185.207)
[16:41:26] *** Joins: fabs (~fabs@samba.ethz.ch)
[16:42:02] <euouae> IHasFinger: yeah
[16:42:24] <euouae> wouldn't it be "I am empty" ?
[16:42:48] <euouae> If you want to do something when the list is not empty, use "if my_list: ..."
[16:42:51] <IHasFinger> i am not check if its empty but the opposite
[16:42:58] *** Quits: c_89 (~c_89@151.74.185.207) (Quit: Connection closed)
[16:42:58] *** Joins: tg (~tg@rockylinux/infra/tg)
[16:43:26] <euouae> "if not my_list" checks that it is empty
[16:44:10] *** Joins: c_89 (~c_89@151.74.185.207)
[16:44:33] <c_89> Hi guys, I need to print this py command in one line:
[16:44:42] <c_89> print('{x}{y}'.format(x=10,y=x/2))
[16:44:54] <IHasFinger> euouae, ta
[16:45:36] <habnabit_> c_89, not a guy, but.. what part of that do you need our help with?
[16:46:04] *** Quits: biozz (~biozz@178.57.22.163) (Remote host closed the connection)
[16:46:39] *** Joins: biozz (~biozz@178.57.22.163)
[16:46:58] <euouae> habnabit_: when I run that line, x=10 is different than the 'x' in y=x/2
[16:47:09] <euouae> It could be the issue c_89 is having
[16:47:49] *** Quits: biozz (~biozz@178.57.22.163) (Remote host closed the connection)
[16:48:04] *** Joins: biozz (~biozz@178.57.22.163)
[16:48:13] <c_89> I know the 'inspect' command exists but I'm not sure if it can be used
[16:48:22] <Yhg1s> c_89: used for what? What are you trying to do?
[16:50:34] <habnabit_> c_89, you can't refer to previous keyword arguments in the same function call if that's what your question is
[16:51:01] <c_89> print('{1}{0}{1}'.format(tmp=' SAMPLE ','#' * round((140-len(tmp))/2)))
[16:51:20] *** Joins: dyslexicat (~dyslexica@ymir.whatbox.ca)
[16:51:21] <bjs> c_89: can you not just assign tmp first to a variable?
[16:51:30] *** Quits: thinkofher (uid503725@user/thinkofher) (Quit: Updating details, brb)
[16:51:45] *** Joins: thinkofher (uid503725@user/thinkofher)
[16:51:58] *** Quits: pradhvan (~pradhvan@103.94.114.232) (Ping timeout: 244 seconds)
[16:51:59] <bjs> c_89: or if you're using 3.7+ you can use := to assign in the expression
[16:52:16] *** Quits: v01d4lph4 (~v01d4lph4@user/v01d4lph4) (Remote host closed the connection)
[16:52:35] <c_89> bjs yes I can do it, I wanted to know if you can do it in a single line
[16:52:38] <habnabit_> (but := assigns variables, not keyword arguments)
[16:52:40] *** Joins: jdmark (~jdmark@172.58.172.72)
[16:52:51] <bjs> c_89: both of my suggestions can be done on 1 line
[16:53:05] <bjs> habnabit_: c_89's actual example doesn't actually have keyword arguments
[16:53:23] <bjs> just positional ones, anyway
[16:53:33] <euouae> (lambda x: print(f'{x}{x/2}'))(10) will do it
[16:53:57] *** Quits: very_sneaky (~very_snea@user/very-sneaky/x-7432109) (Ping timeout: 252 seconds)
[16:54:17] <c_89> @bjs Python 3.8.6
[16:55:02] *** Quits: thinkofher (uid503725@user/thinkofher) (Client Quit)
[16:55:20] *** Joins: thinkofher (uid503725@user/thinkofher)
[16:56:01] *** Joins: very_sneaky (~very_snea@user/very-sneaky/x-7432109)
[16:56:21] <c_89> euouae print 105.0
[16:56:45] <euouae> That looks right
[16:56:50] <bjs> c_89: isn't that what you wanted?
[16:56:58] *** Quits: Nei (~ailin@user/nei) (Quit: killed)
[16:57:09] *** Joins: Nei (~ailin@user/nei)
[16:57:29] *** Joins: somlis (~somlis@user/somlis)
[16:58:17] <c_89> bjs no, my output is: ...################ SAMPLE ################...
[16:58:32] <bjs> c_89: your original example I mean, print('{x}{y}'.format(x=10,y=x/2))
[16:58:47] <bjs> you intended this to print 105.0 no?  and that's what euouae's code does
[16:59:26] <bjs> see also print("{}{}".format(x:=10,x/2))  or x=10;print("{}{}".format(x,x/2))
[17:00:11] *** Quits: Bronto22 (~mennoh@84-86-247-193.fixed.kpn.net) (Quit: Konversation terminated!)
[17:00:17] <c_89> bjs yes, that is a simplified example to know how I can access from the second argument of the format () method to the first argument
[17:00:56] <bjs> c_89: okay,  so your question is solved then?
[17:00:57] *** Quits: molzy (~molzy@user/molzy) (Ping timeout: 244 seconds)
[17:02:21] <c_89> wait..
[17:02:41] <habnabit_> c_89, that's the channel's default state yes
[17:03:33] *** Joins: drincruz_ (~drincruz@ool-44c748be.dyn.optonline.net)
[17:04:44] *** Joins: Adoi (~Adoi@user/adoi)
[17:05:13] *** ExeciN17 is now known as ExeciN
[17:05:26] *** Quits: wattux (~wattux@212.51.23.106) (Ping timeout: 250 seconds)
[17:05:37] *** Joins: shad (~shad@user/shad)
[17:06:52] *** Quits: cdown (~cdown@163.114.131.1) (Ping timeout: 265 seconds)
[17:07:24] *** Quits: euouae (~user@user/euouae) (Quit: ERC (IRC client for Emacs 26.3))
[17:08:04] <p-i-_> try..finally is just syntactic sugar, right?
[17:08:15] <habnabit_> p-i-_, no
[17:08:36] <p-i-_> Can't I just put the finally contents under the try..except?
[17:08:41] <habnabit_> p-i-_, no
[17:08:49] *** Quits: drincruz_ (~drincruz@ool-44c748be.dyn.optonline.net) (Ping timeout: 245 seconds)
[17:09:06] <c_89> bjs if x is a number := it works, but if it's a string it doesn't
[17:09:19] <habnabit_> p-i-_, remember that a try-finally lets exceptions raised propagate
[17:09:19] *** Joins: azed (~azed@160.159.122.89)
[17:09:21] <c_89> `print("{1}{0}{1}".format(x='SAMPLE', y='#' * (140-len(x))*10))`
[17:09:31] <habnabit_> c_89, where's the := there?
[17:09:36] <bjs> c_89: I don't see a :=
[17:10:23] <c_89> bjs `print("{1}{0}{1}".format(x:='SAMPLE', y='#' * (140-len(x))*10))`
[17:10:33] *** Quits: biozz (~biozz@178.57.22.163) (Remote host closed the connection)
[17:10:38] *** Joins: drincruz_ (~drincruz@ool-44c748be.dyn.optonline.net)
[17:11:11] *** Joins: biozz (~biozz@178.57.22.163)
[17:11:13] *** Quits: dyslexicat (~dyslexica@ymir.whatbox.ca) (Ping timeout: 265 seconds)
[17:11:48] <bjs> c_89: what is that y= doing?  You're using 0 and 1 (positional) not keyword
[17:12:56] *** Quits: jdmark (~jdmark@172.58.172.72) (Read error: Connection reset by peer)
[17:12:59] *** Joins: Adois (~Adoi@user/adoi)
[17:13:04] *** Joins: Kingsy (~chris@209.250.224.131)
[17:13:15] *** Quits: P4ddyF (~weechat@p200300def74a017ed6f7ee150f86f146.dip0.t-ipconnect.de) (Quit: WeeChat 3.0.1)
[17:13:39] <Kingsy> how can I make this valid -> https://bpa.st/2BUQ <- does anyone know? I wanted to have a Nested schema but use a dict to describe it
[17:13:46] <Adois> hello, in this paste; https://www.pastebin.cz/raw/jHsPCcL  I cannot pass the "inner" function to the decorated function at the end
[17:14:02] <c_89> @bjs I correct the final expression: `print("{1}{0}{1}".format(x:='SAMPLE', '#' * ((140-len(x))/2)))`
[17:14:18] <bjs> Adois: what do you mean you cannot pass it?
[17:14:24] <habnabit_> c_89, is the reason you want this one line so you can copy-paste it?
[17:14:42] *** Quits: dme86 (~dan@user/dan86) (Ping timeout: 244 seconds)
[17:15:06] <Adois> bjs, the "return" line of the inner function should be piped into the final decorated function, but nothing happens
[17:15:24] *** Quits: biozz (~biozz@178.57.22.163) (Ping timeout: 252 seconds)
[17:15:27] <bjs> Adois: what do you mean piped?
[17:15:36] *** Joins: puadxtub (~rvgzuuqp@gateway/tor-sasl/rvgzuuqp)
[17:15:43] *** Quits: cliluw (~cliluw@47.147.80.149) (Ping timeout: 272 seconds)
[17:15:44] <c_89> @bjs yes, I want as few lines as possible :)
[17:15:49] *** Joins: GiLgAmEzH (~gilgamezh@186.19.69.139)
[17:15:49] <habnabit_> Adois, you're not calling f() at all in main_function. maybe that's the problem
[17:15:49] <Adois> bjs the output of the inner function should be the input of the final function
[17:15:54] <Adois> but it isnt
[17:16:00] <bjs> Adois: what makes you say it isn't?
[17:16:08] <Adois> bjs, the output
[17:16:11] <habnabit_> c_89, maybe it would be easier to define this as a function instead of trying to make it one line
[17:16:13] <bjs> Adois: but why do you say it is not?
[17:16:19] *** Quits: Adoi (~Adoi@user/adoi) (Ping timeout: 245 seconds)
[17:16:20] <habnabit_> Adois, well, show us the output
[17:16:20] <bjs> Adois: I'm very confused, do you have an example call that does the wrong thing
[17:16:25] <bjs> Adois: your example doesn't even call the function with any inputs?
[17:16:26] *** Joins: cliluw (~cliluw@47.147.80.149)
[17:16:34] <grawity> c_89: "SAMPLE".center(140, "#")
[17:17:05] <bjs> grawity: I didn't even know that method existed !
[17:17:13] <varaindemian> bjs: finnaly madeit work in Docker
[17:17:15] <varaindemian> https://pastebin.com/i3ptiSFv
[17:17:18] <varaindemian> but I still get this
[17:17:40] <varaindemian> so the screen is not displayed
[17:17:50] <bjs> varaindemian: screen?
[17:17:51] <grawity> (the original seems to work if you use //2 for integer division, but it doesn't deal well with odd-length strings)
[17:18:26] <Adois> bjs, the example is just an abstract display of the problem. for ex, the inner function has the line "return items" and the decorated function wants "items" as the input like "return item1 + item 2" but no matter what I did, the decorated function could not use "items" that is the output of the inner funcion
[17:18:45] <bjs> Adois: maybe you should show an actual example that actually has the problem you describe
[17:18:58] <varaindemian> bjs: yes, this is the Script I dockeriez : https://pastebin.com/C9psJtJN
[17:18:58] <bjs> Adois: because this "abstract display of the problem" doesn't seem to include the problem you describe
[17:19:04] *** Joins: Guddu (~Guddu@117.222.84.65)
[17:19:28] *** Quits: nomic (~nomic@2a00:23c6:9910:1201:cdae:ea4b:93a4:1c59) (Quit: Leaving)
[17:19:37] <Adois> the original problem is an exercise that I want to be able to solve myself. therefore I abstracted it :
[17:19:39] <varaindemian> bjs: earlier I sent the docker configs + that script
[17:20:00] <bjs> Adois: okay but does your "abstracted" code even have a problem?
[17:20:03] <bjs> I can't see one.
[17:20:10] *** Joins: dme86 (~dan@user/dan86)
[17:20:18] <habnabit_> Adois, turn it into an exercise of making the smallest bit of _runnable_ code that demonstrates the issue
[17:20:23] <bjs> Or rather, I cannot see the problem you describe in the code you pasted
[17:20:42] <Adois> bjs, lets put away the code I pasted. it was just about the problem that I described between inner and decorated functions
[17:20:52] <bjs> Adois: but the code you pasted works fine does it not?
[17:21:04] <bjs> Adois: other_function(42) passes the input 42 to the inner function, which then returns it so the thing outputs 42
[17:21:07] <bjs> exactly like what you asked
[17:21:30] *** Quits: puadxtub (~rvgzuuqp@gateway/tor-sasl/rvgzuuqp) (Remote host closed the connection)
[17:21:32] <Adois> no, but then the decorated function never gets used in the process
[17:21:40] *** Quits: azed (~azed@160.159.122.89) (Read error: Connection reset by peer)
[17:21:44] <bjs> Adois: okay,  well, what do you want to do with the original function?
[17:22:18] *** Joins: puadxtub (~rvgzuuqp@gateway/tor-sasl/rvgzuuqp)
[17:22:41] <Kingsy> don't suppose anyone knows marshmallow and can comment on my issue? there has to be a way.
[17:22:46] *** Joins: ayustae (Thunderbir@gateway/vpn/protonvpn/ayustae)
[17:23:28] <habnabit_> Adois, have you made an SSCCE before?
[17:23:47] *** Joins: Nact (~l@2a02:a03f:c0b0:f600:3253:5994:1b4f:e854)
[17:23:56] *** Joins: feriman (~feriman@188.163.113.127)
[17:24:06] <Adois> habnabit_ since I dont even know what it is, probably I havent :)
[17:24:21] <habnabit_> Adois, http://sscce.org/
[17:24:28] <habnabit_> Adois, it will help a lot
[17:25:25] <Adois> ok, I will create an example code for the problem in a minute :)
[17:25:34] *** Quits: GiLgAmEzH (~gilgamezh@186.19.69.139) (Quit: leaving)
[17:26:00] *** Joins: magla (~gelignite@55d47962.access.ecotel.net)
[17:26:02] <lacrymology> I'm trying to make a wrapper to run async class methods in a sync context. I'm testing my attempt in ipython, and I'm getting errors when I try to get an event loop. The context is not the same as the code would be running in, but I need it to run well in different contexts, and I definitely need it to run in ipython XD. the wrapping code itself might be wrong, too, but I'm having issues with the
[17:26:08] <lacrymology> event loop bit, so don't even know that yet. https://bpa.st/OBAA can someone help me with this?
[17:26:23] <c_89> grawity thanks alot :)  works!
[17:26:29] *** Quits: dme86 (~dan@user/dan86) (Ping timeout: 252 seconds)
[17:26:44] *** Quits: jazzy (~jaziz@2600:380:4547:d128:81a3:2cb3:d403:ef37) (Ping timeout: 245 seconds)
[17:26:45] *** Joins: odoood (~odoood@2601:c8:c003:a550::2)
[17:26:46] *** Quits: stranac (~stranac@195.29.239.126) (Read error: Connection reset by peer)
[17:28:09] *** Joins: biozz (~biozz@178.57.22.163)
[17:28:23] *** Joins: theterg (~theterg@pool-141-155-7-155.nycmny.fios.verizon.net)
[17:28:34] <p-i-_> tx habnabit_
[17:28:49] <Kingsy> meh I'll just use classes.
[17:29:08] *** Quits: shad (~shad@user/shad) (Ping timeout: 264 seconds)
[17:29:21] *** Quits: elastic_dog (~elastic_d@2a01:118f:822:9c00:2132:cd52:1e4a:f46a) (Quit: elastic_dog)
[17:29:36] *** Joins: lukka5 (~lukka5@246-60-231-201.fibertel.com.ar)
[17:30:05] *** Joins: elastic_dog (~elastic_d@2a01:118f:822:9c00:2132:cd52:1e4a:f46a)
[17:30:54] *** Joins: shad (~shad@user/shad)
[17:31:36] *** Joins: logithack (~logithack@p200300cfbf21a1002e19c68949c6f8c4.dip0.t-ipconnect.de)
[17:34:24] *** Quits: PJBoy (~PJBoy@user/pjboy) (Quit: Ping timeout: 252 seconds)
[17:34:39] *** Joins: the-mask (~the-mask@user/the-mask)
[17:35:10] *** Quits: lukka5 (~lukka5@246-60-231-201.fibertel.com.ar) (Ping timeout: 268 seconds)
[17:36:24] *** Quits: neceve (~quassel@2a02:c7f:607e:d600:a95a:ecd2:e57a:3130) (Ping timeout: 244 seconds)
[17:37:53] <logithack> Substituting parameters in SQLite statements is done via the '?' (e.g. cur.execute("UPDATE people SET name = ? WHERE id = ?", ("John", 1))). Is there a way to safely substitute column names, too? I've tried cur.execute("UPDATE people SET ? = ? WHERE id = ?", ("name", "John", 1)) but got an error because "name" is not a value that can be parametrized. Obviously, string formatting would be possible, but that will
[17:37:53] <logithack> bring back the old vulnerability of SQL injections, which is why the '?' method was introduced in the first place.
[17:38:26] <lacrymology> I think the problem is that ipython runs an async loop to allow you to await coros in the REPL, and I'm running that one. Basically, what I want to do is to, blockingly, wait for a coroutine to finish _from a sync function_
[17:38:29] *** Joins: heco (~redrum@user/redrum88)
[17:38:30] <lacrymology> is this even possible/
[17:38:30] <lacrymology> ?
[17:38:47] <grawity> logithack: where does the column name come from?
[17:39:11] *** Joins: Linux77 (~kvirc@186.235.105.225)
[17:41:02] <logithack> grawity: I'd like to be able to have it in an arbitrary data structure in my Python code and then inject it into an SQL statement in a generic way. For example: cur.execute("UPDATE jobs SET ? = ?, ? = ?, ? = ? WHERE job_id = ?", ("errors", 1, "duration", 123, "progress", 85, 2))
[17:41:32] *** Joins: PJBoy (~PJBoy@user/pjboy)
[17:42:10] <graingert> locsmif: use sqlalchemy
[17:42:26] <grawity> hmm feels like that's the job of some existing ORM package
[17:42:41] <habnabit_> logithack, what graingert said
[17:43:33] <grawity> string formatting does bring back the possibility of SQL injections, but it can be guarded against... as long as it's done very carefully (e.g. ensuring that the column name matches ^[a-z_]+$)
[17:43:50] <logithack> graingert: Totally forgotten about that. I'll look right into it, thanks!
[17:44:02] <graingert> lacrymology: you can use run_coroutine_threadsafe
[17:44:17] *** Quits: timkofu (~timkofu@user/timkofu) (Read error: Connection reset by peer)
[17:44:21] <graingert> logithack: also pandas does this
[17:44:44] <graingert> it has a sqlalchemy wrapper that's convenient for pouring a list of dicts into a database
[17:44:48] *** Quits: c_89 (~c_89@151.74.185.207) (Quit: Connection closed)
[17:45:14] <graingert> lacrymology: you then use `await asyncio.to_thread(your_sync_fn)`
[17:45:15] <lacrymology> graingert: but that returns a future, and then.. what? while not future.done(): sleep(1)?
[17:45:22] <graingert> lacrymology: future.result()
[17:45:33] <lacrymology> graingert: I can't await I'm in a non-coro
[17:45:44] <lacrymology> that's the whole problem
[17:45:49] <graingert> lacrymology: show your code
[17:46:12] <lacrymology> graingert: it's a flask app.
[17:46:13] *** Joins: betelgeuse (~john2gb@94-225-47-8.access.telenet.be)
[17:46:14] <pathos> logithack: As far as I'm aware, it's not possible. It's easy to guard against though, just have a list of string of column names for that table, and assert that the table name is in that list of strings.
[17:46:15] <graingert> did you call future.result() yet?
[17:46:27] *** Quits: elastic_dog (~elastic_d@2a01:118f:822:9c00:2132:cd52:1e4a:f46a) (Quit: elastic_dog)
[17:46:31] <graingert> lacrymology: use flask2 and `@asgiref.sync.async_to_sync`
[17:47:17] <lacrymology> yeah, but what I wrote (one of the versions) is basically the same thing, and it'd still have the same issue of not being able to run in ipython
[17:47:19] *** Quits: pacbard (~pacbard@user/pacbard) (Quit: ZNC 1.8.2 - https://znc.in)
[17:47:23] *** Joins: anddt (~anddt@net-5-95-166-4.cust.vodafonedsl.it)
[17:47:29] <graingert> lacrymology: https://flask.palletsprojects.com/en/2.0.x/api/#flask.Flask.async_to_sync
[17:47:37] <varaindemian> bjs any thoughts on this? :D
[17:47:49] <pathos> lacrymology: I don't use ipython much, but does `loop.run_until_complete(future)` work in there?
[17:47:54] <graingert> pathos: n
[17:47:55] <graingert> o
[17:47:59] <bjs> varaindemian: I mean,  it talked about $DISPLAY not having been set
[17:48:00] <bjs> so do that?
[17:48:03] <graingert> pathos: the loop is already running
[17:48:07] *** Quits: txtsd (~txtsd@user/txtsd) (Ping timeout: 268 seconds)
[17:48:07] <lacrymology> pathos: no, it doesn't, that's my point
[17:48:17] <lacrymology> because the loop is already running
[17:48:18] <graingert> lacrymology: show your code and your traceback from flask.Flask.async_to_sync
[17:48:19] <bjs> varaindemian: it seems weird to have a docker container try and do anything that talks about a display or a screen to me, I have no experience there
[17:48:54] <lacrymology> graingert: what I wrote, and what you're proposing will probably work in the context of the app. That's peachy, but it won't run under ipython if I'm just testing out my code
[17:48:55] <varaindemian> bjs: yeah I sent you the entire script
[17:49:01] <varaindemian> https://pastebin.com/C9psJtJN
[17:49:04] <graingert> lacrymology: it should work there too
[17:49:05] *** Quits: magla (~gelignite@55d47962.access.ecotel.net) (Quit: Stay safe!)
[17:49:07] <graingert> did you try it?
[17:49:11] <graingert> show the code!!!!!!!!!!!!!
[17:49:16] <graingert> show the traceback!!!!
[17:49:25] <lacrymology> graingert: yes, give me a while
[17:49:42] <grawity> exclamation marks!!!!!!!!!
[17:50:13] *** Quits: raxor2k (~raxor2k@171.23.6.112) ()
[17:50:15] <lacrymology> anyway, I'm not even sure we're using flask 2, and I cannot upgrade the whole app. It's just not possible. But yeah, give me a mo
[17:50:20] *** Joins: elastic_dog (~elastic_d@2a01:118f:822:9c00:2132:cd52:1e4a:f46a)
[17:50:35] <graingert> lacrymology: asgiref.sync.async_to_sync will work on flask1
[17:50:47] *** Joins: JavaBean (~JavaBean@user/javabean)
[17:50:54] *** Joins: baldr333 (~baldr333@modemcable034.69-70-69.static.videotron.ca)
[17:51:11] <lacrymology> graingert: yes, I know, it's plan B, I was trying to avoid adding a whole new dependency for something that looks pretty straightforward
[17:51:26] <lacrymology> lemme check with asgiref
[17:54:01] <graingert> lacrymology: how are you getting on with that traceback?
[17:54:10] *** Joins: Intruder777 (~Intruder7@ppp-109-104-160-59.wildpark.net)
[17:54:43] *** Joins: deviantfero (~deviantfe@190.150.27.58)
[17:55:32] <lacrymology> graingert: RuntimeError: You cannot use AsyncToSync in the same thread as an async event loop - just await the async function directly.
[17:55:41] <graingert> and the code?
[17:56:02] <lacrymology> as I said. That'll probably work fine in the context of the app, but can't use it in ipython
[17:56:19] <graingert> take a screenshot then?
[17:56:24] <lacrymology> I need something to either run a new event loop, or to add a task to the existing one and wait for it without calling `run_until_complete` and friends
[17:56:36] <lacrymology> sure, give me a sec, will paste the console
[17:57:33] *** Joins: raxor2k (~raxor2k@171.23.6.112)
[17:57:55] *** Joins: mefistofeles (~mefistofe@user/mefistofeles)
[17:58:01] <lacrymology> graingert: https://bpa.st/XGUQ
[17:58:34] <lacrymology> also, this looks weird:
[17:58:35] <lacrymology> In [18]: loop.is_running()
[17:58:39] <lacrymology> Out[18]: False
[17:58:50] <graingert> lacrymology: use await asyncio.to_thread(client.verify)
[17:59:15] *** Joins: vladoski (~vladoski@mail-uk-out.statpro.com)
[17:59:26] *** Joins: dyslexicat (~dyslexica@212.253.59.190)
[17:59:33] <vladoski> how can I tell sqlalchemy to create a NOT EXIST expression?
[17:59:44] *** Quits: jetchisel (jetchisel@user/jetchisel) (Ping timeout: 264 seconds)
[17:59:51] <vladoski> does ~exist() work?
[18:00:00] <graingert> lacrymology: it needs pytthon3.9
[18:00:05] <habnabit_> vladoski, i'm going to guess yes
[18:00:40] <graingert> you can use https://www.irccloud.com/pastebin/JZWyLUvO/verify.py
[18:00:40] *** Joins: azed (~azed@160.159.122.89)
[18:00:42] <graingert> lacrymology: ^
[18:00:50] <vladoski> and if I wanto to use something like select().where().exists()?
[18:00:53] <Intruder777> Hello. What are the differences in python 3.6 and python 3.8 asyncio? For some reason same script runs fine in python 3.6, but in python 3.8 it yields asyncio.exceptions.TimeoutError in "...asyncio/base_events.py", line 616, in run_until_complete (return future.result())
[18:00:54] *** Joins: txtsd (~txtsd@user/txtsd)
[18:01:14] <graingert> Intruder777: loads of stuff changed
[18:01:21] <graingert> Intruder777: show the full traceback and code
[18:01:35] *** Joins: jetchisel (jetchisel@user/jetchisel)
[18:01:39] *** Quits: wedof (~wedof@2a02:810c:c0:3b98:aaa1:59ff:fe1e:4d38) (Remote host closed the connection)
[18:01:39] <lacrymology> omg
[18:01:47] <lacrymology> I can't await, because I'm calling this from a sync context
[18:01:55] <graingert> I can see your terminal
[18:02:20] <graingert> `In [14]: client.verify()` is an async context
[18:02:30] <lacrymology> yeah, because that's ipython
[18:02:35] <lacrymology> but it won't be in the app
[18:02:41] <lacrymology> .....
[18:02:42] <raxor2k> 1. I have made my DB "async".     2. I am also "poking" the DB each 10 minutes      but still if the DB is "idle" for 7hours of more i get this error "2006, MySql server has gone away"(brokenPipeError (32, "proken pipe")       : https://bpa.st/UMWA
[18:02:51] <raxor2k> and now its taking the piss out of me
[18:02:57] <graingert> lacrymology: right it will work in the app too you won't need sync_to_async
[18:03:04] <graingert> lacrymology: show the traceback from the app
[18:03:48] *** Quits: dyslexicat (~dyslexica@212.253.59.190) (Ping timeout: 252 seconds)
[18:04:21] *** Quits: i0e (~is0ke3@user/is0ke3) (Ping timeout: 252 seconds)
[18:04:21] <lacrymology> the function that will call that from the app will not be a coro. Are you running me in circles on purpose?
[18:04:26] <graingert> no
[18:04:34] <graingert> show the traceback from the app
[18:04:44] *** Joins: Thanattt (~Thanatos@197.210.64.146)
[18:04:44] <lacrymology> it's not integrated yet. I'm writing the integration
[18:05:08] <graingert> ok well @asgiref.sync.async_to_sync will ok
[18:05:13] <graingert> work*
[18:05:20] <lacrymology> context: I've got an async API client I wrote for an app, I need to write the same client for a sync app. I'd rather not rewrite the whole thing.
[18:05:26] <graingert> I know your context
[18:06:05] <lacrymology> okay, then, yeah, but I can't test it out in ipython, and I probably just won't be able to run _any_ of that code from ipython, not just the wrapped code directly.
[18:06:12] *** Quits: abraxas (~abraxas@2600:8805:c880:3:c7fe:fc8e:f2cc:8056) (Quit: abraxas)
[18:06:30] <lacrymology> anyway, thanks, I'll go try a few things, maybe write a bit more of the integration so I can test in both contexts. TTYL
[18:06:30] *** Joins: abraxas (~abraxas@ip68-14-53-156.ri.ri.cox.net)
[18:06:30] <graingert> it works in ipython - did you try my snip?
[18:06:33] <rubin55> If a python object creates a thread as part of its initialization, does the thread get cleaned up when the object is dereferenced?
[18:06:36] *** Joins: i0e (~is0ke3@user/is0ke3)
[18:06:39] <graingert> rubin55: no
[18:06:48] <lacrymology> graingert: sorry, missed the paste, no, let me look
[18:06:55] <lacrymology> In [18]: loop.is_running()
[18:06:59] <lacrymology> Out[18]: False
[18:07:03] <graingert> lacrymology: 14:30:40 <graingert> you can use https://www.irccloud.com/pastebin/JZWyLUvO/verify.py
[18:07:03] <lacrymology> sorry, misclicked
[18:07:16] <rubin55> ok, so is there some destructor/standard method like __init__ I could use for that?
[18:07:24] *** Quits: Adois (~Adoi@user/adoi) (Ping timeout: 244 seconds)
[18:07:30] <graingert> rubin55: use __exit__ and __enter__
[18:07:40] <graingert> rubin55: or @contextlib.contextmanager
[18:07:41] *** Joins: lukka5 (~lukka5@246-60-231-201.fibertel.com.ar)
[18:07:48] *** Parts: pyre (~pyre@crimeboss.nillas-power.com) (leaving)
[18:07:55] *** Joins: pyre (~pyre@crimeboss.nillas-power.com)
[18:07:59] <rubin55> Alright, sounds good! thanks.
[18:08:10] *** Joins: PdimH (~pdimh@user/pdimh)
[18:08:11] <lacrymology> okay, that's a workaround
[18:08:19] <graingert> rubin55: even better is to take a `def __init__(..., pool: ThreadPoolExecutor) -> None:`
[18:08:32] <graingert> lacrymology: it's not a workaround it's how these tools are designed to work
[18:08:50] *** Quits: ThanatosJ (~Thanatos@197.210.64.146) (Ping timeout: 252 seconds)
[18:08:56] <graingert> rubin55: then you can `pool.submit(task_nf)`
[18:09:00] <graingert> task_fn*
[18:09:10] *** Joins: dme86 (~dan@user/dan86)
[18:09:53] *** Joins: kek_ (~kek_@net-2001-067c-10ec-574f-8000-0000-0000-0102.v6.ethz.ch)
[18:10:29] <rubin55> graingert: In such a case, your threads would always be connected to that pool object, and not to some random class right?
[18:10:35] <graingert> right
[18:10:47] <rubin55> that sounds wise
[18:10:51] <graingert> and you use `with concurrent.futures.ThreadPoolExecutor() as pool:` to make a pool
[18:11:00] *** Joins: jamesmartinez (~keinbock@37.44.247.165)
[18:11:24] *** enrh_ is now known as enrh
[18:11:25] *** Joins: pacbard (~pacbard@user/pacbard)
[18:11:25] <graingert> rubin55: you can also get the result with `fut = pool.submit(task_fn)`
[18:11:29] <rubin55> Very nice, thanks. I'm reading up; sounds like a neater way to manage threads
[18:11:31] <graingert> and later you call fut.result()
[18:12:09] <graingert> rubin55: I prefer to use `await anyio.to_thread.run_sync(task_fn)`
[18:13:55] <mayhew> what's the recommended way to do backpressure with concurrent.futures.ThreadPoolExecutor? It doesn't seem like there's any capacity for how large the submit queue can grow to.
[18:14:10] <mayhew> any limit for how large*
[18:14:31] <Intruder777> graingert: here is traceback: https://bpa.st/YS2A The code is huge, what I do is create conversation conv and send conv.send_message(...) goes fine while conv.get_response(...) fails with that error inside python internals
[18:14:45] <graingert> mayhew: you can use a semaphore
[18:16:06] *** Joins: argento (~argent0@168-227-96-53.ptr.westnet.com.ar)
[18:17:35] <mayhew> graingert: thanks!
[18:17:55] <graingert> Intruder777: it looks like you should be doing `msg: custom.message.Message = await conv.get_response(message=message))`
[18:19:21] *** Quits: logithack (~logithack@p200300cfbf21a1002e19c68949c6f8c4.dip0.t-ipconnect.de) (Quit: Leaving)
[18:19:22] <graingert> Intruder777: it seems you're calling sync.syncify
[18:19:28] <graingert> Intruder777: you shouldn't do that
[18:19:28] <Intruder777> graingert: nope, telethon/sync.py (syncified) wraps it into run_until_complete. And anyway it works fine in python 3.6
[18:19:48] *** Joins: cth (~Cthulchu@159.65.231.125)
[18:20:53] <Intruder777> graingert: yes, that syncify wraps everything into run_until_complete and let's you use everything in sync mode.
[18:21:02] <graingert> yeah don't do that
[18:21:12] *** Joins: jamea97 (~jamea77@200.68.140.27)
[18:21:16] <jamea97> hi all i creted a python program that use sqlite db my question is: where is saved the file: swItsol.db on Android device? thanks
[18:21:22] <Intruder777> graingert: but why it works fine in python 3.6?
[18:21:31] <graingert> Intruder777: seems like it just timed out
[18:21:36] *** Joins: nomic (~nomic@2a00:23c6:9910:1201:cdae:ea4b:93a4:1c59)
[18:21:43] <IHasFinger> hi guys i need some idea how to handle this. I am getting this error decimal.DivisionByZero: [<class 'decimal.DivisionByZero'>] I know why. It is because result["prev_vol_change"] is 0, it is only zero the first time it runs afterwards it no longer zero.has this is running every 5 minutes. How can I still do this
[18:21:44] <IHasFinger>                 prev_vol_change = 100 * ((decimal.Decimal(f'{result["vol_change"]}') -  decimal.Decimal(f'{result["prev_vol_change"]}')) / decimal.Decimal(f'{result["prev_vol_change"]}'))
[18:21:54] *** Joins: RangerBobVA (~bmaddox@user/rangerbobva)
[18:21:58] *** Joins: qwedfg (~qwedfg@user/qwedfg)
[18:22:01] <habnabit_> IHasFinger, what would you want the result to be?
[18:22:18] <IHasFinger> just trying to work out the percentage
[18:22:31] *** Quits: raxor2k (~raxor2k@171.23.6.112) ()
[18:22:31] *** Quits: n00b101 (uid448161@id-448161.tooting.irccloud.com) (Quit: Connection closed for inactivity)
[18:22:34] <Intruder777> graingert: but the problem is those timeouts happen only when I run it in python 3.8 environment. There is definitely a reply in conversation (so no timeout). In the very same situations running it in python 3.6 works fine
[18:22:55] <habnabit_> IHasFinger, sure. so what's the percent increase if it was previously 0?
[18:22:56] <graingert> what happens if you increase the timeout?
[18:23:06] *** Quits: cthulchu_ (~Cthulchu@195.66.198.226) (Ping timeout: 264 seconds)
[18:23:10] <graingert> Intruder777: what happens if you get rid of the sync.syncify call
[18:23:25] *** Joins: cthulchu_ (~Cthulchu@195.66.198.226)
[18:23:25] <IHasFinger> it will be 0 at first the time the script runs but after it will not be zero
[18:23:34] <Intruder777> graingert: so I'm wondering what can cause such differences between python3.6 and 3.8
[18:23:45] <habnabit_> IHasFinger, so you want prev_vol_change = 0?
[18:23:47] <Intruder777> graingert: it is called automatically by the library
[18:24:31] <Intruder777> graingert: and my code relies on it, so everything is sync
[18:25:14] <kek_> hi i have a 10x10 matrix and a 12x12 matrix and I'd like ot put the 10x10 matrix into the 12x12 matrix starting at position(1,1) using numpy. Is there a function for such merges?
[18:25:23] *** Quits: feriman (~feriman@188.163.113.127) (Quit: WeeChat 3.1)
[18:25:23] <rockSTONE> hm, anyone know of a generic dict transformation lib for Python ... kind of like xslt for xml or the query language of jq for json ?
[18:25:23] <grym> kek_: indexing
[18:25:27] *** Joins: Crassus (~Crassus@user/crassus)
[18:25:31] *** Joins: pavelow (~pavelow@opticalchimp.com)
[18:25:37] *** Quits: Crassus (~Crassus@user/crassus) (Client Quit)
[18:25:39] <rockSTONE> if i have to i'll just use jq on the jsonified dict but i figured i'd try here first
[18:25:51] <graingert> Intruder777: try just calling `anyio.from_thread.run(partial(conv.get_response, message=message)).result()` on just the bits you need it
[18:26:08] <graingert> Intruder777: and call asyncio.run on an `async def main(`
[18:26:33] <IHasFinger> habnabit_, will just use if statement lol
[18:26:46] <habnabit_> IHasFinger, sounds good
[18:26:52] <habnabit_> IHasFinger, i still don't know what you want the result to be
[18:27:06] *** Quits: cth (~Cthulchu@159.65.231.125) (Ping timeout: 265 seconds)
[18:27:22] *** Quits: pavelow (~pavelow@opticalchimp.com) (Quit: Leafing - Like a tree)
[18:27:25] <IHasFinger> it should be "N/A" because prev_vol_change is 0
[18:27:35] <IHasFinger> you cant divide by zero
[18:27:37] *** Joins: Vornicus (~Vornicus@2603-8000-5d07-7ef0-b0e8-82ca-9970-3627.res6.spectrum.com)
[18:27:40] *** Joins: pavelow (~pavelow@opticalchimp.com)
[18:28:06] <grym> kek_: https://bpa.st/CTQA
[18:28:51] <kek_> grym, I used sliced opretaor now :)
[18:28:55] <grym> kek_: me, too
[18:29:00] <kek_> yeah thanks
[18:29:07] <kek_> grym, exactly, didn't think of it. :)
[18:29:17] <SnoopJ> there's also np.block() but indexing into the destination is way better here
[18:29:20] <jamea97> graingert any advice? thanks
[18:29:31] <graingert> jamea97: use trio
[18:29:44] <jamea97> is an app for android?
[18:29:56] <grym> kek_: note that my use of -1 more or less only works becasue i happen to know that 12-1-1 is 10
[18:30:06] <graingert> jamea97: no
[18:30:24] *** Quits: ghost43 (~ghost43@gateway/tor-sasl/ghost43) (Quit: Leaving)
[18:30:31] <graingert> jamea97: https://trio.readthedocs.io/en/stable/tutorial.html
[18:30:35] <Intruder777> graingert: but I don't have any async def main(), it's all sync
[18:30:39] *** Joins: ghost43 (~ghost43@gateway/tor-sasl/ghost43)
[18:30:40] *** Quits: varaindemian (~varaindem@82.76.227.126) (Quit: Client closed)
[18:30:40] <jamea97> much results in google. wich link?
[18:30:44] <jamea97> oo thanks
[18:30:46] <graingert> Intruder777: right just keep the sync bits to the bare minumum
[18:30:58] <kek_> grym, yeah sure, thanks :)
[18:31:17] *** Joins: sudomann (~sudomann@86.106.143.154)
[18:31:17] <jamea97> reading, interesting
[18:31:35] <sudomann> Question related to python on my job application - seeking improvements to my answer: https://bpa.st/WRIQ
[18:31:42] <grym> rockSTONE: glom
[18:31:53] *** Joins: Xaldafax (~xaldafax@cpe-198-72-160-101.socal.res.rr.com)
[18:32:13] *** Joins: LuxuryMode (uid91005@id-91005.charlton.irccloud.com)
[18:32:38] *** Joins: Adoi (~Adoi@user/adoi)
[18:33:05] *** Quits: puadxtub (~rvgzuuqp@gateway/tor-sasl/rvgzuuqp) (Quit: puadxtub)
[18:33:06] <Adoi> ok, this is an example that contains the problem I mean; https://www.pastebin.cz/raw/arPzR2W
[18:33:19] <rockSTONE> grym: hm, looks promising
[18:33:36] <Adoi> the output of the decorated function doesnt appear
[18:34:14] <Intruder777> graingert: that script I'm dealing with is written using telethon.sync, so there are no any async in it at all. telethon.sync converts all library's async internals into a sync interface for user. I'm just wondering why such thing works in python 3.6 and fails with timeouts in python 3.8. Where do I need to increase that timeout?
[18:34:16] *** Quits: gr33n7007h (~gr33n7007@user/gr33n7007h) (Ping timeout: 244 seconds)
[18:34:18] <bjs> Adoi: what do you want the output of the print to be?
[18:35:18] *** Joins: fofoni (~fofoni@user/fofoni)
[18:35:40] *** Joins: Julian (~tos9@151.66.53.132)
[18:38:22] *** Quits: Julian (~tos9@151.66.53.132) (Client Quit)
[18:38:29] *** Quits: diogenese (~diogenese@diogenese.velotech.net) (Quit: Has anybody seen the bridge?)
[18:38:47] *** Joins: diogenese (~diogenese@diogenese.velotech.net)
[18:41:29] <graingert> Intruder777: there's a timeout=timeout call in that Traceback
[18:43:23] *** Joins: Meteorhead (~Meteorhea@165.225.21.61)
[18:44:15] <Adoi> bjs sorry, I corrected it and now it works; https://www.pastebin.cz/raw/621gogg
[18:44:23] <Adoi> it outputs "yes!" that was the idea
[18:44:32] <bjs> Adoi: something looks wrong about returning inside the loop
[18:44:51] <bjs> But yeah you need to call fn() if you want the decorated function to be called
[18:44:58] *** Joins: Luther (~mark@218.88.88.214)
[18:45:11] <Luther> hi, bros
[18:45:16] <Luther> please help with this
[18:45:17] <Luther> https://stackoverflow.com/questions/67938566/modulenotfounderror-no-module-named-psutil-when-import-venvs-psutil-module
[18:45:28] *** Joins: death916 (~death916@user/death916)
[18:45:44] <Adoi> bjs, but still it doesnt reflect my original problem. I will try to adapt it and paste again
[18:46:02] <habnabit_> Luther, if you asked on SO, wait for an answer on SO
[18:46:50] *** Joins: veek (~veek@117.192.20.56)
[18:47:31] *** Quits: anandprabhu (~anandprab@87.201.97.214) (Quit: Leaving)
[18:48:18] *** Quits: badsektor (~badsektor@user/badsektor) (Remote host closed the connection)
[18:48:23] *** Quits: Thanattt (~Thanatos@197.210.64.146) (Ping timeout: 272 seconds)
[18:48:36] <bjs> Adoi: oh
[18:48:39] <bjs> Okay
[18:48:49] <Adoi> bjs, "something looks wrong about returning inside the loop" directly relates to my said problem, it is really this part that I cant get straight
[18:49:01] *** Quits: jamea97 (~jamea77@200.68.140.27) (Ping timeout: 272 seconds)
[18:49:11] <bjs> Adoi: I feel like we're very close to an actual description of a problem! :)
[18:49:15] *** Quits: pavelow (~pavelow@opticalchimp.com) (Quit: Leafing - Like a tree)
[18:49:32] *** Joins: pavelow (~pavelow@opticalchimp.com)
[18:49:32] *** Joins: jess (~jess@libera/staff/jess)
[18:49:34] <Adoi> I eiher get "list index out of range", or the output picks only one input from the loop
[18:49:35] <bjs> so often the hard part is not solving the problem,  but properly defining it
[18:49:36] *** Joins: Sheilong (uid293653@id-293653.charlton.irccloud.com)
[18:49:42] <Intruder777> graingert: hmm, that timeout is for how long to wait for reply message in conversation and it was set to 10 seconds, but the reply comes almost instantly
[18:50:31] *** Quits: betuxy (~betuxy@158.181.77.59) (Quit: Connection closed)
[18:51:55] <Adoi> bjs, for ex, if the loop is "for i in x", when I insert "return fn(x)" inside the loop, I get "list index out of range", and when I instead insert "return fn(i)", then only "i" is taken as input by the decorated function
[18:52:35] <Adoi> whereas I want all the "i"s in "x" to be the input to the decorated function
[18:52:39] <bjs> Adoi: if you actually show code that gives you a index out of range error, that'd be much better than waving your hands like this
[18:52:49] <Adoi> :)
[18:52:52] *** Quits: TJ- (~root@2a01:7e00:e001:ee00:ea6f:38ff:fed4:3289) (Ping timeout: 244 seconds)
[18:53:36] <Adoi> I wanted to solve this with as much of own effort as possible, as I said, but seems it is not easy :)
[18:54:36] *** Joins: Vonter (~Vonter@user/vonter)
[18:54:48] <habnabit_> Adoi, do you know kernighan's law of debugging?
[18:55:12] <Adoi> no, habnabit_ but I debug by inserting "print" whenever it is due
[18:55:24] <habnabit_> Adoi, "Everyone knows that debugging is twice as hard as writing a program in the first place. So if you're as clever as you can be when you write it, how will you ever debug it?"
[18:55:40] <habnabit_> Adoi, it's ok to ask for help
[18:55:41] <Adoi> ah yes, I read that
[18:55:47] *** Quits: Samian (~Samian@2620:10d:c090:400::5:2f74) (Ping timeout: 272 seconds)
[18:56:55] <Adoi> sure it is ok to ask for help, it was just a bit of stubbornish drive to solve it, since I feel so close to it on one hand :)
[18:58:07] *** Joins: TJ- (~root@2a01:7e00:e001:ee00:ea6f:38ff:fed4:3289)
[19:01:04] *** Quits: kikijiki (~Thunderbi@user/kikijiki) (Quit: kikijiki)
[19:01:17] *** Joins: Liblx (~Alex@2a02:810c:280:59c:9572:431f:4e61:ee43)
[19:02:02] *** Joins: n00b101 (uid448161@id-448161.tooting.irccloud.com)
[19:02:11] <Adoi> so bjs, habnabit_  this is it; https://www.pastebin.cz/raw/M6KZLqx
[19:02:38] <bjs> Adoi: so you want name_format to return a list?
[19:03:06] <Adoi> bjs, yes a list of names like shown in the question
[19:03:26] <bjs> Adoi: then shouldn't inner make a list and append() to it and all that?
[19:04:38] <Adoi> bjs, but there is already a list created from inputs (people), no=
[19:04:39] <Adoi> ?
[19:05:25] <Adoi> btw, this is where only the first list item is printed the way the question wants, instead of the whole entries; https://www.pastebin.cz/en/p/of4o9K9
[19:05:30] <n00b101> I've a simple flask socketio chat app. I have one socketio.connect(ip1).. now I can connect and chat with Bob while he's also running the same app. Now I also want to connect with Frank. Yes, I could disconnect existing socketio connection with Bob and then connect with Frank else with 2 connections, message from myself will be reached to 2 users. I don't want that. Now the question is -- is there any solution to connect with Frank
[19:05:30] <n00b101> without disconnecting with Bob but without the message being send to 2 users and only to Bob
[19:06:21] <Adoi> I didnt know how to enable whole list items to be printed that way, or else how to avoid "out of range"
[19:06:22] <bjs> Adoi: I think you're trying to be clever
[19:06:36] <Adoi> bjs, that means..?
[19:06:55] <bjs> Adoi: I mean,  why not just make a list and append() to it with the things you want in the list then return the list
[19:07:06] *** Quits: dude-x (~textual@pool-100-1-141-108.nwrknj.fios.verizon.net) (Read error: Connection reset by peer)
[19:07:46] <Adoi> bjs, you mean without itemgetter?
[19:08:01] *** Joins: dude-x (~textual@pool-100-1-141-108.nwrknj.fios.verizon.net)
[19:08:24] <bjs> Adoi: I mean you're trying to `return f(people)` inside a loop. Why not just `names = []` then inside the loop `names.append(f(person))` then finally `return names`
[19:09:11] *** Joins: puadxtub (~rvgzuuqp@gateway/tor-sasl/rvgzuuqp)
[19:09:11] <Adoi> ah I get what you meant :)
[19:09:33] *** Quits: hendursa1 (~weechat@user/hendursaga) (Quit: hendursa1)
[19:10:20] *** Joins: hendursaga (~weechat@user/hendursaga)
[19:11:16] *** Quits: ayustae (Thunderbir@gateway/vpn/protonvpn/ayustae) (Quit: ayustae)
[19:11:18] *** Quits: Liblx (~Alex@2a02:810c:280:59c:9572:431f:4e61:ee43) (Quit: WeeChat 3.1)
[19:12:35] *** Joins: f1se4 (~f1se4@213.195.98.55)
[19:12:35] *** Joins: sierkov (~sierkov@c89-176.i07-23.onvol.net)
[19:12:39] *** Joins: Liblx (~Alex@2a02:810c:280:59c:9572:431f:4e61:ee43)
[19:12:41] *** sierkov is now known as outsider
[19:14:06] *** Joins: no_gravity (~no_gravit@user/no-gravity/x-5639427)
[19:14:13] <no_gravity> How do I define a single unnamed non-optional argument in argparse?
[19:14:54] *** Quits: Mija (~Mija@user/mija) (Quit: Mija)
[19:14:59] *** Quits: ExeciN (~ExeciN@user/nicexe) (Quit: Client closed)
[19:16:14] *** Joins: cruzr (~cruzr@2604:4300:a:16b::6)
[19:18:09] <SnoopJ> no_gravity, arguments necessarily have a name but you can alter what shows up in usage with `metavar` if that's what you're after
[19:18:12] <Adoi> bjs, not for trying to be clever, but rather for trying to stick to "return func(args)" format that I asked to you about yesterday..though it did seem strange to me that the return was located within the loop. however it didnt ever occur to me that I could use "func(args) as a list item, when it was perfectly possible to do. when I think of it now, it only makes sense. thank you very much!
[19:19:20] <no_gravity> SnoopJ: That are unnamed (positional) arguments. For example this defines a single unnamed optional argument: ap.add_argument('url', nargs='?')
[19:19:33] <no_gravity> SnoopJ: I want this but not optional.
[19:19:36] *** Quits: azed (~azed@160.159.122.89) (Quit: WeeChat 3.1)
[19:19:41] <SnoopJ> no_gravity, they have names in the parser namespace
[19:20:00] <SnoopJ> no_gravity, if you want it to be passed exactly once, pass nargs=1
[19:20:08] <bjs> just remove nargs
[19:20:18] <SnoopJ> or hm, yea
[19:20:23] <SnoopJ> nargs=1 makes a one-long list
[19:20:56] <SnoopJ> "If the nargs keyword argument is not provided, the number of arguments consumed is determined by the action. Generally this means a single command-line argument will be consumed and a single item (not a list) will be produced."
[19:22:46] <no_gravity> SnoopJ: Yeah, I don't want a list. I want a single string just like '?' gives me. But not optional.
[19:22:53] <SnoopJ> no_gravity, then don't pass nargs
[19:23:40] <no_gravity> SnoopJ: SnoopJ: How so?
[19:23:50] <SnoopJ> I don't understand what you mean?
[19:24:10] <no_gravity> SnoopJ: Well, this does not work: ap.add_argument('url')
[19:25:13] <no_gravity> SnoopJ: Oh shit, it works :)
[19:25:18] <SnoopJ> indeed it does
[19:25:43] <no_gravity> How does argparse know it is positional?
[19:25:59] *** Quits: brickfat (~brickfat@user/brickfat) (Quit: Leaving)
[19:26:02] <Yhg1s> by its name.
[19:26:05] <SnoopJ> because it's not a --flag
[19:26:11] <no_gravity> I see. Funky.
[19:26:13] <no_gravity> Thanks a lot!
[19:26:14] <SnoopJ> "When parse_args() is called, optional arguments will be identified by the - prefix, and the remaining arguments will be assumed to be positional:"
[19:26:25] *** Joins: Thanattt (~Thanatos@197.210.64.146)
[19:26:48] <SnoopJ> I think we've recommended click to you in the past, but here's a +1 to reconsider it; it makes this distinction much more formal
[19:27:02] *** Joins: dyslexicat (~dyslexica@212.253.59.190)
[19:28:19] <no_gravity> click?
[19:28:35] <bjs> no_gravity: it's a library for command-line interfaces.  https://click.palletsprojects.com/
[19:28:36] <ammar2> it's a nicer argument parsing library
[19:28:52] <SnoopJ> *much* nicer
[19:28:56] *** Joins: betuxy (~betuxy@158.181.77.59)
[19:28:59] <bjs> no_gravity: some people say it's nicer ;)
[19:29:36] <no_gravity> bjs: argparse works well for me so far.
[19:31:02] <betuxy> Hey guys, i want to retrieve some information from the azure health status page, with requests (as selenium takes so much more resources) when the page opens however the american region is diplayed. I  can't seem to find a solution to resolve this with requests, can anyone help me out? https://status.azure.com/de-de/status
[19:31:10] *** Quits: Meteorhead (~Meteorhea@165.225.21.61) (Quit: Client closed)
[19:31:15] *** Quits: dyslexicat (~dyslexica@212.253.59.190) (Ping timeout: 252 seconds)
[19:31:30] *** Joins: Gudddu (~Guddu@2401:4900:1b2c:1927:68f7:4c58:6ad6:fb02)
[19:32:51] *** Joins: Guddddu (~Guddu@27.56.198.110)
[19:33:00] <shad> betuxy: you're not supposed to load the HTML page with requests, you're supposed to use the API
[19:33:25] <shad> betuxy: probably this https://docs.microsoft.com/en-us/rest/api/azure/devops/status/health/get?view=azure-devops-rest-6.0#get-service-health-for-one-or-more-geographies
[19:33:45] <no_gravity> Someone made a mistake when they decided to call the regular expression library just 're'.
[19:33:59] <grym> too late now, anyway
[19:34:00] <ammar2> lol, why?
[19:34:21] *** Joins: Akuli (~Akuli@82-203-167-237.bb.dnainternet.fi)
[19:34:29] <no_gravity> Because it is hard to search for it, grep for it, google for it etc.
[19:34:41] <grym> not with re! >;)
[19:34:43] *** Quits: TJ- (~root@2a01:7e00:e001:ee00:ea6f:38ff:fed4:3289) (Ping timeout: 244 seconds)
[19:34:48] *** Joins: pretty_dumm_guy (trottel@gateway/vpn/protonvpn/prettydummguy/x-88029655)
[19:34:55] <shad> betuxy: doing a `req = requests.get(the_url); data = req.get_json()` will give you the response in a json object that's much easier to parse and use
[19:34:56] <ammar2> grym: is that the same as "re" ?
[19:35:12] <no_gravity> How do you add modifiers to a regular expression? Like "This is case insensitive"?
[19:35:14] *** Quits: Guddu (~Guddu@117.222.84.65) (Ping timeout: 244 seconds)
[19:35:23] <grym> ammar2: i think which flavor of search engine jank you get is very provider dependent
[19:35:33] *** Quits: f1se4 (~f1se4@213.195.98.55) (Quit: WeeChat 2.8)
[19:35:34] *** Quits: pretty_dumm_guy (trottel@gateway/vpn/protonvpn/prettydummguy/x-88029655) (Client Quit)
[19:35:45] <grym> no_gravity: as arguments to .search or w/e
[19:36:04] <no_gravity> grym: ?
[19:36:18] *** Quits: Gudddu (~Guddu@2401:4900:1b2c:1927:68f7:4c58:6ad6:fb02) (Ping timeout: 264 seconds)
[19:36:29] <grym> no_gravity: it's a flag https://docs.python.org/3/library/re.html#re.search
[19:36:40] <no_gravity> grym: I meant modifiers within the regex.
[19:36:45] <grym> re.IGNORECASE, e.g.
[19:36:45] *** Quits: pathos (~pathos@169-1-247-122.ip.afrihost.co.za) (Ping timeout: 252 seconds)
[19:36:55] <no_gravity> Looks like you have to add them inside (?...) at the end of the regex.
[19:37:06] <grym> i am not sure
[19:37:13] <grym> i tend to use the flags
[19:37:24] <no_gravity> Like this: '^from the beginning I DON'T CARE for CASE(?i)'
[19:37:25] <SnoopJ> You *can* put them inside the pattern, but this is pretty messy
[19:37:28] *** Joins: slowButPresent (~slowButPr@user/slowbutpresent)
[19:37:32] <ammar2> no_gravity: that's another option yes, but the flags argument is much more readable
[19:37:42] <no_gravity> ammar2: I prefer the flags inside the regex.
[19:37:58] <grym> no_gravity: how come?
[19:38:23] <no_gravity> I tend to even write my own regex parser so I can put things like "third match" into the regex itself.
[19:38:27] <ammar2> no_gravity: go with whatever you want, I just find "...(?i)" to be less readable than "flags=re.IGNORECASE"
[19:39:07] <no_gravity> Find the third hello in any case: 'hello(?i):3'
[19:39:20] <ammar2> :3
[19:39:34] <no_gravity> I wrote my own library for this in JS. Will probably do the same in Python.
[19:39:43] <grym> have ... fun ?
[19:39:48] *** Joins: a6a45081-2b83 (~aditya@106.214.237.94)
[19:39:48] *** Joins: gr33n7007h (~gr33n7007@user/gr33n7007h)
[19:39:53] <ammar2> or just re.findall(...) and get the 3rd result
[19:39:55] <grym> best part of beating your head into a brick wall, etc.
[19:40:11] <grym> ("it feels so great when you stop!")
[19:40:15] *** Joins: srhm (~ascii@user/srhm)
[19:40:29] *** Quits: dme86 (~dan@user/dan86) (Ping timeout: 245 seconds)
[19:40:52] <no_gravity> There is a bunch of benefits of having a more capable dialect of regular expressions.
[19:40:57] *** Joins: hamub (~hamub@2c0f:f8f0:c600:26f8:b05d:9108:d541:2d01)
[19:41:09] <grym> no_gravity: i mean, i'm an emacs user, i know that
[19:41:11] <grym> :D
[19:41:25] <no_gravity> For example you can let external developers write expressions instead of giving them the full nuclear power of python code.
[19:41:28] <ammar2> funnily enough I think regular expressions are too capable
[19:41:41] *** Joins: jamea97 (~jamea77@200.68.140.27)
[19:41:48] *** Quits: leduyquang753 (~leduyquan@user/leduyquang753) (Quit: Lost terminal)
[19:41:55] <grym> (regex feels a loooot more natural in a more idempotent language)
[19:42:05] <grym> (they generally rub me the wrong way in python, though)
[19:42:14] <jamea97> hi all, how to get number days from 01/01/Actualyear to now, in this case is 162, any advice?
[19:42:17] <ammar2> grym: idempotent languages?
[19:42:30] <grym> ammar2: i mean i guess elisp counts right
[19:42:32] <no_gravity> Example: The user wants a way to do things like "Always highlight the 2nd mention of the word "end" on a page".
[19:42:54] <grym> ammar2: or am i thinking of the other shiny nickel word ... i probably am
[19:43:04] *** Joins: neceve (~quassel@2a02:c7f:607e:d600:a95a:ecd2:e57a:3130)
[19:43:06] <no_gravity> With my regex dialect, they can just put 'end:2' to express that.
[19:43:39] *** Joins: CanadianOtaku (~CanadianO@172.97.8.182)
[19:43:51] <SnoopJ> idempotent usually means "doing the thingy more than once is identical to doing the thingy once"
[19:43:55] <grym> ammar2: "imagine if eval(repr(anything)) == anything"
[19:44:15] <SnoopJ> i.e. f(f(x)) == f(x)
[19:44:58] <ammar2> jamea97: it's fairly easy using a nice datetime library like pendulum: now = pendulum.now(); days = (now - pendulum.datetime(now.year, 1, 1)).in_days()
[19:45:05] <SnoopJ> always makes me think of projection operators which are idempotent
[19:45:15] *** Quits: no_gravity (~no_gravit@user/no-gravity/x-5639427) (Quit: leaving)
[19:45:42] <grym> ah! homoiconic
[19:45:45] <raek> jamea97: from datetime import date; (date.today() - date(date.today().year, 1, 1).days
[19:45:48] <grym> there's the thingie i meant
[19:46:21] <raek> (oops, should have been an extra ")" before ".days")
[19:46:32] <ammar2> oh, timedelta has days? :D
[19:46:46] <ammar2> for some reason I thought it was only like up to hours
[19:46:48] <grym> " the primary representation of programs is also a data structure in a primitive type of the language itself"
[19:46:51] <grym> there we go
[19:47:07] <ammar2> grym: why do regexs feel more natural there?
[19:47:42] <grym> ammar2: ( SnoopJ is going to punch me , i can tell already) because data is code then, so rummaging around with "the same stuff" with regex feels like a saner thing to do
[19:49:24] <grym> my thoughts on this matter are pretty half-baked though, so we can probalby move on wlog
[19:49:54] *** Joins: qlixed (~qlixed@2800:810:471:2f8::1b7)
[19:50:04] *** Quits: gloomy (~ldorigo@81.161.149.37) (Ping timeout: 245 seconds)
[19:50:13] *** Quits: death916 (~death916@user/death916) (Ping timeout: 268 seconds)
[19:51:47] <jamea97> raek THANKS
[19:51:51] <grym> (and i think i'm kind of just wrong about 'why' :D )
[19:54:20] *** Joins: zware (~zach@python/psf/zware)
[19:54:51] <zware> nedbat: Quick question, did coverage very recently lose the ability to read `.coveragerc` if it's a symlink?
[19:55:37] *** Joins: pretty_dumm_guy (trottel@gateway/vpn/protonvpn/prettydummguy/x-88029655)
[19:56:03] <CanadianOtaku> i tell myself i'm good at python, and then i read questions in this channel and change my mind
[19:56:17] <veek> what module can plot a large class/interface hierarchy (Libreoffice) as a tree. I've tried treelib, graphviz - since there are 1700 classes/methods the generated image is very long/horizontal. The only way seems to be to convert/merge all the leaf nodes into a subgraph. Is there a way to do that easily with some python library(treelib) and then pass that to graphviz for plotting
[19:56:31] <grym> CanadianOtaku: ye olde skill pyramid
[19:56:42] *** Joins: death916 (~death916@user/death916)
[19:56:44] *** Quits: jamea97 (~jamea77@200.68.140.27) (Ping timeout: 245 seconds)
[19:57:16] <veek> (like merge any node with >10 children into a subgraph and print DOT syntax)
[19:59:51] *** Quits: jetchisel (jetchisel@user/jetchisel) (Ping timeout: 252 seconds)
[20:00:29] *** Joins: raxor2k (~raxor2k@ti0315q160-1471.bb.online.no)
[20:02:08] <zware> nedbat: False alarm, sorry.  Someone blew away our monorepo's toplevel `.coveragerc` :(
[20:04:35] *** Quits: a6a45081-2b83 (~aditya@106.214.237.94) (Remote host closed the connection)
[20:08:47] *** Quits: Rob_ (~Rob_@212.71.9.85) (Quit: WeeChat 2.8)
[20:09:58] *** Quits: Thanattt (~Thanatos@197.210.64.146) (Remote host closed the connection)
[20:10:08] *** Quits: locsmif (~none@h31050.upc-h.chello.nl) (Quit: leaving)
[20:10:18] *** Joins: Thanattt (~Thanatos@197.210.64.146)
[20:10:19] *** Joins: f1se4 (~f1se4@213.195.98.55)
[20:10:26] *** Quits: chele (~chele@user/chele) (Remote host closed the connection)
[20:10:27] <n00b101>  I've a simple flask socketio chat app. I have one socketio.connect(ip1).. now I can connect and chat with Bob while he's also running the same app. Now I also want to connect with Frank. Yes, I could disconnect existing socketio connection with Bob and then connect with Frank else with 2 connections, message from myself will be reached to 2 users. I don't want that. Now the question is -- is there any solution to
[20:12:14] <n00b101> Can I have different socketid for each connection?
[20:12:32] *** Joins: SebastianM (~seba@user/sebastianm)
[20:12:32] *** Quits: SebastianM (~seba@user/sebastianm) (Client Quit)
[20:12:32] <supakeen> You'd likely use socketio's namespaces.
[20:14:20] *** Joins: pradhvan (~pradhvan@103.94.114.232)
[20:14:34] <supakeen> Or the rooms, whichever fits better.
[20:15:18] *** Quits: anddt (~anddt@net-5-95-166-4.cust.vodafonedsl.it) (Ping timeout: 264 seconds)
[20:15:49] *** Joins: ChkDigit (~u388mw@207-195-34-73.prna.static.sasknet.sk.ca)
[20:16:26] *** Quits: CanadianOtaku (~CanadianO@172.97.8.182) (Quit: Client closed)
[20:17:11] <n00b101> How names spaces can help? I already tried rooms, .
[20:18:14] <nedbat> zware: phew! :)
[20:18:46] *** Quits: hamub (~hamub@2c0f:f8f0:c600:26f8:b05d:9108:d541:2d01) (Quit: WeeChat 3.1)
[20:19:02] <zware> nedbat: Now we're just left with the disturbing realization that nobody noticed this for 2 weeks, and it made it through review in the first place :)
[20:19:13] *** Joins: hamub (~hamub@2c0f:f8f0:c600:26f8:b05d:9108:d541:2d01)
[20:19:14] <nedbat> zware: !!!
[20:19:25] *** Quits: hamub (~hamub@2c0f:f8f0:c600:26f8:b05d:9108:d541:2d01) (Client Quit)
[20:21:23] *** Joins: Seiryuu (~Seiryuu@ip174-103-176-143.adsl2.static.versatel.nl)
[20:21:56] *** Quits: kek_ (~kek_@net-2001-067c-10ec-574f-8000-0000-0000-0102.v6.ethz.ch) (Quit: Leaving)
[20:27:17] *** Joins: FluffyMask (~FluffyMas@user/fluffymask)
[20:27:25] *** Quits: argento (~argent0@168-227-96-53.ptr.westnet.com.ar) (Ping timeout: 244 seconds)
[20:27:37] *** Quits: merijn (~merijn@83-160-49-249.ip.xs4all.nl) (Ping timeout: 272 seconds)
[20:29:04] *** Joins: SynthClamor (~Synthetic@2a01cb04008a92007da59076e1b0ce8b.ipv6.abo.wanadoo.fr)
[20:29:21] *** Quits: SyntheticClamor (~Synthetic@2a01cb04008a92007da59076e1b0ce8b.ipv6.abo.wanadoo.fr) (Read error: Connection reset by peer)
[20:30:26] *** Quits: stkrdknmibalz (~test@rrcs-75-87-43-226.sw.biz.rr.com) (Read error: Connection reset by peer)
[20:31:12] <n00b101> supakeen: can I do it without having rooms?
[20:31:32] *** Joins: no_gravity (~no_gravit@user/no-gravity/x-5639427)
[20:31:32] *** Quits: shad (~shad@user/shad) (Ping timeout: 264 seconds)
[20:31:49] <supakeen> I am not familiar enough with socketio, I just know that that's two of the ways to have two people talk to eachoter.
[20:31:58] <Adoi> hello again, instantly "sorted (people, key=age)" began to sort people in descending order of age. why could this be happening?
[20:32:08] <grym> Adoi: because you told it to
[20:32:19] *** Quits: veek (~veek@117.192.20.56) (Quit: Leaving)
[20:32:45] <grym> if you want it to sort the other way, pass reverse=True
[20:32:53] <no_gravity> I am trying to dynamically import a module from a subdirectory: parser = importlib.import_module('parsers/parser17.py'). But I get: ModuleNotFoundError: No module named 'parsers/parser17'. Any ideas why?
[20:33:33] *** Joins: shad (~shad@user/shad)
[20:33:50] *** Quits: dambuster_ (~dambuster@185.193.170.225) (Quit: Leaving)
[20:34:12] <no_gravity> Doing it like this seems to get a bit further: parser = importlib.import_module('./parsers/parser17.py')
[20:34:50] <no_gravity> Now I get: TypeError: the 'package' argument is required to perform a relative import for './parsers/parser17' :/
[20:34:53] <grym> Adoi: or redefine what the age function does
[20:35:25] *** Quits: caveman (~caveman@gateway/tor-sasl/caveman) (Ping timeout: 252 seconds)
[20:35:47] <grym> Adoi: e.g., https://bpa.st/IXAQ
[20:35:49] *** Quits: gothicserpent (~gothicser@static-198-54-129-78.cust.tzulo.com) (Read error: Connection reset by peer)
[20:36:34] <grym> er, https://bpa.st/4ENA
[20:37:40] <grym> (note that sort order changes if age is accidentally a string)
[20:37:56] *** Joins: caveman (~caveman@gateway/tor-sasl/caveman)
[20:38:04] <the-mask> hello, is anybody aware of issues between Kitchen Sink/ KivyMD and python 3.8 ? it's like half of the elements I try triggers crash of the script ...cannot explain why ...
[20:39:14] *** Joins: pathos (~pathos@169-1-247-122.ip.afrihost.co.za)
[20:39:35] <grym> the-mask: https://pypi.org/project/KitchenSink/ ?
[20:39:49] *** Joins: dyslexicat (~dyslexica@212.253.59.190)
[20:39:56] *** Quits: f1se4 (~f1se4@213.195.98.55) (Quit: WeeChat 2.8)
[20:40:03] *** Joins: argento (~argent0@168-227-96-53.ptr.westnet.com.ar)
[20:40:23] <no_gravity> Ah, this is how Python wants it: parser = importlib.import_module('parsers.parser17.py')
[20:40:55] *** Quits: vladoski (~vladoski@mail-uk-out.statpro.com) (Remote host closed the connection)
[20:42:54] *** Quits: PJBoy (~PJBoy@user/pjboy) (Ping timeout: 264 seconds)
[20:43:18] *** Joins: drincruz (~drincruz@ec2-18-235-23-153.compute-1.amazonaws.com)
[20:43:49] *** Quits: dyslexicat (~dyslexica@212.253.59.190) (Ping timeout: 245 seconds)
[20:43:49] *** Quits: pathos (~pathos@169-1-247-122.ip.afrihost.co.za) (Ping timeout: 245 seconds)
[20:43:59] <Guddddu> How can i get the python compile from source configure script to use gcc from a software collection on centos?
[20:44:19] *** Joins: Xano (~Xano@2a00:23c4:420c:d700:1e20:a1bd:f776:75a9)
[20:44:29] *** Quits: schumaml (~schumaml@dslb-178-002-190-100.178.002.pools.vodafone-ip.de) (Ping timeout: 268 seconds)
[20:44:44] *** Joins: dme86 (~dan@user/dan86)
[20:45:35] *** Joins: PJBoy (~PJBoy@user/pjboy)
[20:45:46] *** Quits: no_gravity (~no_gravit@user/no-gravity/x-5639427) (Quit: leaving)
[20:46:16] *** Quits: shad (~shad@user/shad) (Quit: WeeChat 2.3)
[20:46:30] *** Quits: drincruz_ (~drincruz@ool-44c748be.dyn.optonline.net) (Ping timeout: 264 seconds)
[20:46:59] <the-mask> grym, no, I don't think is that one ...
[20:47:37] <Adoi> grym, it is about this code that I showed here shortly; https://www.pastebin.cz/raw/uz6p7q5
[20:48:14] <Adoi> what is wrong with "key=age" here so that it doesnt perform ascending order?
[20:48:17] *** Joins: pathos (~pathos@169-1-247-122.ip.afrihost.co.za)
[20:49:07] *** Quits: Thanattt (~Thanatos@197.210.64.146) (Ping timeout: 244 seconds)
[20:49:12] <Guddddu> Ok. I just had to do a scl enable <SCL SET NAME> bash
[20:49:19] <Guddddu> And in the new bash shell do the build.
[20:49:49] <grym> Adoi: what type do you expect `age` to be
[20:49:50] *** Joins: Moosadee (~Moosadee@136.32.155.193)
[20:49:53] <the-mask> grym, It is a script on the demo folder of KivyMD ....
[20:50:20] <grym> Adoi: (i would expect it to be a function)
[20:50:53] <grym> uh, which it is
[20:50:59] <the-mask> grym, Kitchen Sink app shows you all of the different elements that you can use in KivyMD
[20:51:11] <grym> Adoi: show some data.  what's people[0], for example
[20:51:22] *** Joins: SebastianM (~seba@user/sebastianm)
[20:51:23] <Adoi> grym, string?
[20:51:30] *** Quits: SebastianM (~seba@user/sebastianm) (Client Quit)
[20:51:36] <grym> Adoi: strings sort in surprising ways
[20:51:41] *** Joins: derelict (~derelict@user/derelict)
[20:52:16] *** Joins: mns_ (~mns@c-73-119-178-157.hsd1.ma.comcast.net)
[20:52:19] *** Quits: mrgz (~mrgz@187.38.4.190) (Ping timeout: 272 seconds)
[20:52:41] *** Joins: Nei_ (~ailin@user/nei)
[20:54:14] *** Joins: iflema_ (~ian@user/iflema)
[20:54:21] *** Joins: Auron956 (~Auron956@user/auron)
[20:54:24] *** Joins: cmagina_ (~cmagina@user/cmagina)
[20:54:35] *** Joins: KernelPa- (~KernelPan@user/kernelpanic)
[20:54:39] *** Joins: njt_ (~njt@zaph.org)
[20:54:54] *** Joins: nanonyme1 (nanonyme@kapsi.fi)
[20:54:54] *** Joins: eldritch__ (~eldritch@134.209.221.71)
[20:54:56] *** Joins: vbgunz_ (~vbgunz@35.141.71.47)
[20:55:04] *** Joins: jootoi_ (~jootoi@130.61.158.197)
[20:55:23] *** Joins: gr33n7001 (~gr33n7007@user/gr33n7007h)
[20:55:31] *** Joins: nedbat_ (~nedbat@python/psf/nedbat)
[20:55:35] *** Quits: Blupon (blupon@user/blupon) (Quit: WeeChat 3.0)
[20:55:40] *** Quits: strobelight (~quassel@c-69-180-7-202.hsd1.ga.comcast.net) (Quit: https://quassel-irc.org - Chat comfortably. Anywhere.)
[20:55:44] *** Joins: simon8162 (~simon816@ec2-35-178-246-72.eu-west-2.compute.amazonaws.com)
[20:55:56] *** Joins: KirkMcDo1ald (~Kirk@python/site-packages/KirkMcDonald)
[20:56:00] *** Quits: pacbard (~pacbard@user/pacbard) (Quit: ZNC 1.8.2 - https://znc.in)
[20:56:06] *** Joins: AquaL1te_ (~AquaL1te@user/aqual1te)
[20:56:14] *** Joins: zebragg (~chris@user/zebrag)
[20:56:27] *** Joins: mxp_ (~mxp@82.98.30.69)
[20:56:35] *** Joins: SuperL4g (~akulbe@user/superlag)
[20:56:51] *** Joins: Peng__ (~mnordhoff@fin.mattnordhoff.net)
[20:56:52] *** Joins: Vonter_ (~Vonter@user/vonter)
[20:57:06] *** Joins: pretty_d1 (trottel@gateway/vpn/protonvpn/prettydummguy/x-88029655)
[20:57:18] *** Quits: gr33n7007h (~gr33n7007@user/gr33n7007h) (Ping timeout: 264 seconds)
[20:58:17] *** Joins: TJ- (~root@2a01:7e00:e001:ee00:ea6f:38ff:fed4:3289)
[21:00:31] *** Quits: odoood (~odoood@2601:c8:c003:a550::2) (Ping timeout: 268 seconds)
[21:00:51] *** Joins: teut (~teut@182.69.85.39)
[21:01:00] *** Quits: argento (~argent0@168-227-96-53.ptr.westnet.com.ar) (*.net *.split)
[21:01:00] *** Quits: death916 (~death916@user/death916) (*.net *.split)
[21:01:00] *** Quits: pretty_dumm_guy (trottel@gateway/vpn/protonvpn/prettydummguy/x-88029655) (*.net *.split)
[21:01:00] *** Quits: Vonter (~Vonter@user/vonter) (*.net *.split)
[21:01:00] *** Quits: jess (~jess@libera/staff/jess) (*.net *.split)
[21:01:00] *** Quits: Sheilong (uid293653@id-293653.charlton.irccloud.com) (*.net *.split)
[21:01:00] *** Quits: somlis (~somlis@user/somlis) (*.net *.split)
[21:01:00] *** Quits: Nei (~ailin@user/nei) (*.net *.split)
[21:01:00] *** Quits: zebrag (~chris@user/zebrag) (*.net *.split)
[21:01:00] *** Quits: iflema (~ian@user/iflema) (*.net *.split)
[21:01:00] *** Quits: evidlo (~evidlo@2001:470:69fc:105::7fc) (*.net *.split)
[21:01:00] *** Quits: bgardner (~bgardner@2001:470:69fc:105::8a8) (*.net *.split)
[21:01:00] *** Quits: diegov (~diegov@2001:470:69fc:105::103f) (*.net *.split)
[21:01:00] *** Quits: meain (~meain@2001:470:69fc:105::2db) (*.net *.split)
[21:01:00] *** Quits: ali1234[m] (~ali1234@user/ali1234) (*.net *.split)
[21:01:00] *** Quits: Schnouki (~schnouki@user/schnouki) (*.net *.split)
[21:01:00] *** Quits: gusto (~Augustus@109.255.100.54) (*.net *.split)
[21:01:00] *** Quits: viktorivan (~ivan@187.223.103.108) (*.net *.split)
[21:01:00] *** Quits: CatKiller (~CatKiller@93.107.150.192) (*.net *.split)
[21:01:00] *** Quits: Auron (~Auron956@user/auron) (*.net *.split)
[21:01:00] *** Quits: drew (~drew@user/drew) (*.net *.split)
[21:01:00] *** Quits: ackyshake (~ackyshake@user/ackyshake) (*.net *.split)
[21:01:00] *** Quits: gildarts (16abab341f@user/gildarts) (*.net *.split)
[21:01:00] *** Quits: GenTooMan (~cyberman@2601:547:437f:e5c6:21f:5bff:fefe:a883) (*.net *.split)
[21:01:00] *** Quits: dcaro (~dcaro@user/dcaro) (*.net *.split)
[21:01:00] *** Quits: canton7 (canton7@about/csharp/canton7) (*.net *.split)
[21:01:00] *** Quits: mawk (~mawk@wireguard/contributor/mawk) (*.net *.split)
[21:01:00] *** Quits: re (~re@user/re) (*.net *.split)
[21:01:00] *** Quits: eN_Joy (~eN_Joy@wsip-72-213-93-155.ok.ok.cox.net) (*.net *.split)
[21:01:00] *** Quits: KernelPanic (~KernelPan@user/kernelpanic) (*.net *.split)
[21:01:00] *** Quits: chemsmith (~chemsmith@user/chemsmith) (*.net *.split)
[21:01:00] *** Quits: mns (~mns@c-73-119-178-157.hsd1.ma.comcast.net) (*.net *.split)
[21:01:00] *** Quits: mesaboogie (mesaboogie@user/mesaboogie) (*.net *.split)
[21:01:00] *** Quits: nanonyme (nanonyme@kapsi.fi) (*.net *.split)
[21:01:00] *** Quits: gbear605_ (~gbear605@user/gbear605) (*.net *.split)
[21:01:00] *** Quits: mrkz_c (uid503554@user/mrkz-c/x-7247691) (*.net *.split)
[21:01:00] *** Quits: nedbat (~nedbat@python/psf/nedbat) (*.net *.split)
[21:01:00] *** Quits: cmagina (~cmagina@user/cmagina) (*.net *.split)
[21:01:00] *** Quits: dTal (quassel@dragonbox/wizzard/dtal) (*.net *.split)
[21:01:00] *** Quits: jootoi (~jootoi@130.61.158.197) (*.net *.split)
[21:01:00] *** Quits: njt (~njt@zaph.org) (*.net *.split)
[21:01:00] *** Quits: simon816 (~simon816@ec2-35-178-246-72.eu-west-2.compute.amazonaws.com) (*.net *.split)
[21:01:00] *** Quits: nurupo (~nurupo.ga@user/nurupo) (*.net *.split)
[21:01:00] *** Quits: jposer (sid132110@id-132110.highgate.irccloud.com) (*.net *.split)
[21:01:00] *** Quits: josh_h (sid301834@id-301834.brockwell.irccloud.com) (*.net *.split)
[21:01:00] *** Quits: ErgoX (sid219675@id-219675.tinside.irccloud.com) (*.net *.split)
[21:01:00] *** Quits: maxking (~maxking@54.11.83.34.bc.googleusercontent.com) (*.net *.split)
[21:01:00] *** Quits: ntome (~ntome@user/ntome) (*.net *.split)
[21:01:00] *** Quits: cohn (~noone@user/cohn) (*.net *.split)
[21:01:00] *** Quits: Peng (~mnordhoff@fin.mattnordhoff.net) (*.net *.split)
[21:01:00] *** Quits: GreaseMonkey (greaser@user/greasemonkey) (*.net *.split)
[21:01:00] *** Quits: petemc (~pete@vps-80fad31a.vps.ovh.net) (*.net *.split)
[21:01:00] *** Quits: squirrel (~sq@host-2-99-74-45.as13285.net) (*.net *.split)
[21:01:00] *** Quits: SuperLag (~akulbe@user/superlag) (*.net *.split)
[21:01:00] *** Quits: vbgunz (~vbgunz@35.141.71.47) (*.net *.split)
[21:01:00] *** Quits: oddish (~oddish@2a01:4f8:1c1c:a9da::1) (*.net *.split)
[21:01:00] *** Quits: AquaL1te (~AquaL1te@user/aqual1te) (*.net *.split)
[21:01:00] *** Quits: eldritch_ (~eldritch@134.209.221.71) (*.net *.split)
[21:01:00] *** Quits: mxp (~mxp@82.98.30.69) (*.net *.split)
[21:01:00] *** Quits: KirkMcDonald (~Kirk@python/site-packages/KirkMcDonald) (*.net *.split)
[21:01:01] *** Nei_ is now known as Nei
[21:01:01] *** njt_ is now known as njt
[21:01:03] *** cmagina_ is now known as cmagina
[21:01:13] *** Joins: merijn (~merijn@83-160-49-249.ip.xs4all.nl)
[21:02:40] *** Vonter_ is now known as Vonter
[21:02:42] *** Joins: re (~re@user/re)
[21:03:01] *** Joins: Thanattt (~Thanatos@197.210.64.146)
[21:03:06] *** Quits: Mrokii_ (mrokii@gateway/vpn/airvpn/mrokii) (Ping timeout: 252 seconds)
[21:04:39] *** Quits: whaley (~whaley@066-169-090-170.res.spectrum.com) (Quit: My MacBook has gone to sleep. ZZZzzz…)
[21:05:25] *** Joins: blackout69 (~blackout6@net-109-117-245-193.cust.vodafonedsl.it)
[21:06:36] *** Quits: merijn (~merijn@83-160-49-249.ip.xs4all.nl) (Ping timeout: 265 seconds)
[21:07:42] *** Joins: mesaboogie (mesaboogie@user/mesaboogie)
[21:07:44] *** Peng__ is now known as Peng
[21:08:24] *** Joins: chemsmith (~chemsmith@user/chemsmith)
[21:08:32] *** Joins: gloomy (~ldorigo@81.161.149.37)
[21:08:53] *** Joins: viktorivan (~ivan@187.223.103.108)
[21:08:58] *** Quits: drincruz (~drincruz@ec2-18-235-23-153.compute-1.amazonaws.com) (Read error: Connection reset by peer)
[21:09:37] *** Joins: Sheilong (uid293653@id-293653.charlton.irccloud.com)
[21:10:52] *** Joins: cohn (~noone@user/cohn)
[21:11:10] *** Joins: drincruz (~drincruz@ool-44c748be.dyn.optonline.net)
[21:11:20] *** Quits: nomic (~nomic@2a00:23c6:9910:1201:cdae:ea4b:93a4:1c59) (Quit: Leaving)
[21:13:58] *** Joins: Pleiades (~admin@193.254.47.212)
[21:14:07] *** Joins: jess (~jess@libera/staff/jess)
[21:14:11] *** Joins: KevinX_ (~KevinX@c-71-200-222-150.hsd1.fl.comcast.net)
[21:14:35] *** Joins: pacbard (~pacbard@user/pacbard)
[21:16:11] *** Quits: PdimH (~pdimh@user/pdimh) (Quit: PdimH)
[21:17:24] *** Quits: KevinX (~KevinX@73.156.247.3) (Ping timeout: 252 seconds)
[21:18:42] *** Joins: mrkz_c (uid503554@user/mrkz-c/x-7247691)
[21:18:47] *** Joins: nomic (~nomic@2a00:23c6:9910:1201:cdae:ea4b:93a4:1c59)
[21:19:33] <Adoi> can you help me with this please: https://www.pastebin.cz/raw/Wy3zQfV ? it is not properly ordering by "age"...dont know what to do with it. I change it to str, error says str is not ok, then I insert it as "int" then error says "int" is not ok
[21:20:03] <zware> Adoi: your link says "EXPIRED"
[21:20:06] <Adoi> oh
[21:20:08] <Adoi> sorry
[21:20:35] <Adoi> this one, please; https://www.pastebin.cz/raw/GhUVdBE
[21:20:40] *** Quits: humanBird (~humanBird@2603-8001-7003-5966-dd61-bd8d-802f-ce0e.res6.spectrum.com) (Ping timeout: 250 seconds)
[21:20:42] *** Joins: gildarts (16abab341f@user/gildarts)
[21:20:45] *** Joins: dTal (quassel@dragonbox/wizzard/dtal)
[21:20:48] *** Joins: ErgoX (sid219675@id-219675.tinside.irccloud.com)
[21:20:51] *** Joins: josh_h (sid301834@id-301834.brockwell.irccloud.com)
[21:20:54] *** Joins: nurupo (~nurupo.ga@user/nurupo)
[21:20:55] *** Joins: dcaro (~dcaro@user/dcaro)
[21:20:57] *** Joins: jposer (sid132110@id-132110.highgate.irccloud.com)
[21:21:01] *** Joins: Mrokii_ (~mrokii@p5b2df7ee.dip0.t-ipconnect.de)
[21:21:02] *** Joins: canton7 (canton7@about/csharp/canton7)
[21:21:02] *** Joins: gbear605 (~gbear605@user/gbear605)
[21:21:04] *** Joins: ackyshake (~ackyshake@user/ackyshake)
[21:21:07] *** Joins: Schnouki (~schnouki@user/schnouki)
[21:21:07] *** Joins: drew (~drew@user/drew)
[21:21:16] <zware> Adoi: Your code is very dependent on the exact format of the input, so it's hard to help without some example input as well
[21:21:23] <Adoi> ah sure
[21:21:54] *** gr33n7001 is now known as gr33n7007h
[21:22:10] <zware> Adoi: Also, I would suggest to start with some hard-coded input to make sure it works before taking it from `input()`
[21:22:22] *** Joins: ElPresidente (~ElPreside@2600:1700:3d10:4870:c5b1:589:9d9d:3767)
[21:22:23] <Adoi> zware, https://www.pastebin.cz/raw/37CjZvD
[21:22:25] *** Quits: pretty_d1 (trottel@gateway/vpn/protonvpn/prettydummguy/x-88029655) (Quit: WeeChat 3.2-rc1)
[21:22:43] *** Quits: pathos (~pathos@169-1-247-122.ip.afrihost.co.za) (Ping timeout: 272 seconds)
[21:23:23] *** jess is now known as j
[21:23:53] *** Joins: Unode (~Unode@194.94.44.220)
[21:24:11] *** Quits: lukka5 (~lukka5@246-60-231-201.fibertel.com.ar) (Ping timeout: 272 seconds)
[21:25:06] <zware> Adoi: You're trying to sort by age, but age is a string so it will follow string sorting rules which is probably not what you're hoping for.  You'll need to convert each age to an int to get integer sorting
[21:26:48] <Adoi> zware, I tried that, too
[21:26:58] <Adoi> this time "key"arg rejects int
[21:27:07] <grym> Adoi: keys have to be callables
[21:27:18] *** Joins: pathos (~pathos@169-1-247-122.ip.afrihost.co.za)
[21:27:23] <grym> try lambda x: x[the_index_of_the_age_int] or something
[21:27:47] <grym> Adoi: defining the callable properly and using ints were both shown in my paste above
[21:28:04] *** Quits: jinsun (~quassel@182.77.87.72) (Ping timeout: 244 seconds)
[21:28:13] *** Quits: aslicedbanjo (~aslicedba@host31-52-127-233.range31-52.btcentralplus.com) (Quit: Leaving.)
[21:28:59] <zware> Adoi: You need to both get the value from the list, and convert it to an int in your `key` function.  Just `int` or just `itemgetter(2)` won't do it for you, you need one then the other
[21:29:12] *** Joins: stkrdknmibalz (~test@rrcs-75-87-43-226.sw.biz.rr.com)
[21:29:21] *** Quits: Luther (~mark@218.88.88.214) (Quit: This computer has gone to sleep)
[21:29:23] *** Joins: dyslexicat (~dyslexica@212.253.59.190)
[21:29:56] <Adoi> looks like someone had the same problem; https://stackoverflow.com/questions/44535122/sorted-with-lambda-python
[21:29:57] *** Joins: cdown (~cdown@89.32.122.5)
[21:30:12] <dale> OK, I think I'm losing my mind here.  queue.Queue has a max size parameter.  I've set it to three.  I did four put_nowait calls.  All four returned.  queue.Full was never raised.  queue.qsize() returns 3.
[21:30:43] *** Quits: jheblu (~user@116.68.98.40) (Quit: ERC (IRC client for Emacs 27.2))
[21:31:06] <zware> dale: Try 5 `put_nowait`s
[21:31:42] <zware> (Just to see if it's an off-by-one issue somewhere :))
[21:32:18] *** Joins: brickfat (~brickfat@user/brickfat)
[21:32:32] *** Joins: ioxzev1z (~ioxzev1z@user/ioxzev1z)
[21:32:55] *** j is now known as jess
[21:33:03] <zware> dale: Although trying it myself, `q = queue.Queue(3); for i in range(5): q.put_nowait(i)` raises `queue.Full` on the 4th item
[21:33:54] <dale> zware: Want to try running that maybe a couple hundred times?
[21:34:03] <dale> I have to run this test maybe 10-20 times before I see this behavior.
[21:34:30] *** Quits: dyslexicat (~dyslexica@212.253.59.190) (Ping timeout: 264 seconds)
[21:34:34] <dale> I don't *want* to believe that there's a bug here, it's vastly my likely that I've made a mistake...
[21:34:37] <zware> dale: That's the only code you're running, nothing else?
[21:35:08] <dale> zware: There's a fairly large amount of other code running around it, for sure.
[21:35:29] <zware> dale: including something fetching from the queue?
[21:35:44] <dale> zware: It would be, if I didn't have that thread stopped on a lock.
[21:35:45] *** mns_ is now known as mns
[21:35:48] *** Quits: betuxy (~betuxy@158.181.77.59) (Quit: Connection closed)
[21:36:04] *** Quits: mns (~mns@c-73-119-178-157.hsd1.ma.comcast.net) (Quit: Quit)
[21:37:13] <zware> dale: 10000 runs without issue, so I'm betting your lock is not being acquired quite where you think it is :)
[21:37:27] *** Joins: mns (~mns@c-73-119-178-157.hsd1.ma.comcast.net)
[21:37:36] *** Joins: pretty_dumm_guy (trottel@gateway/vpn/protonvpn/prettydummguy/x-88029655)
[21:38:24] *** Joins: vimart (~vimart@85.255.232.97)
[21:39:29] *** Joins: mike18__ (~geri@2001:ac8:22:73:40c::1)
[21:39:47] <mike18__> hi what happens in python if you have a assert in the code?
[21:39:54] <mike18__> will it store the entire program?
[21:40:06] <SnoopJ> huh?
[21:40:22] <mike18__> assert some_parameter > 1.0
[21:40:38] <mike18__> what happens if som_parameter is < 1.0 ?
[21:40:43] <SnoopJ> an AssertionError
[21:40:43] *** Quits: rendar (~rendar@user/rendar) ()
[21:40:48] <mike18__> will it throw an exception?
[21:40:54] <SnoopJ> unless the program was run with -O which turns off assertions
[21:41:06] <raek> mike18__: it is imilar to    if not (some_parameter > 1.0): raise AssetionError()
[21:41:21] <mike18__> yeah i know
[21:41:36] *** Quits: raxor2k (~raxor2k@ti0315q160-1471.bb.online.no) (Ping timeout: 252 seconds)
[21:41:43] <mike18__> is there a way to check if that error is triggered in python unit test?
[21:41:46] <habnabit_> mike18__, it's pretty rare to catch those errors
[21:41:50] *** Quits: neceve (~quassel@2a02:c7f:607e:d600:a95a:ecd2:e57a:3130) (Ping timeout: 268 seconds)
[21:41:59] *** Quits: LuxuryMode (uid91005@id-91005.charlton.irccloud.com) (Quit: Connection closed for inactivity)
[21:42:01] <habnabit_> mike18__, eh? asserts aren't something that you test
[21:42:06] <mike18__> i used something like: with self.assertRaises(Exception) as context: ... function_under_test()
[21:42:11] <mike18__> self.assertTrue('This is broken' in context.exception)
[21:42:15] <habnabit_> mike18__, if you want to test it, make a real if-raise
[21:42:22] *** Joins: gr33n7001 (~gr33n7007@user/gr33n7007h)
[21:42:24] <mike18__> but how to use it for asserterror?
[21:43:13] <habnabit_> mike18__, i mean, AssertionError is an exception type like any other, but i'd strongly discourage testing asserts
[21:44:39] <ammar2> what if you're testing your test runner 🤔
[21:44:59] *** Quits: gr33n7007h (~gr33n7007@user/gr33n7007h) (Ping timeout: 252 seconds)
[21:45:09] <Adoi> grym I dont understand how I should make "age" a function, it is simply a string variable of a list item that is itself part of a list
[21:45:29] *** Quits: pradhvan (~pradhvan@103.94.114.232) (Quit: Leaving)
[21:45:43] *** Quits: derelict (~derelict@user/derelict) (Ping timeout: 272 seconds)
[21:45:58] <mike18__> @habnabit_ i mean that function returns that eerror
[21:46:05] <mike18__> i need to test the func
[21:46:19] <The-Compiler> mike18__: there's no difference between testing for Exception and testing for AssertionError
[21:46:23] <ammar2> mike18__: it's expected to throw an AssertionError as part of it's api?
[21:46:26] <habnabit_> mike18__, the function has `assert some_parameter > 1.0` in it and you want to test that condition?
[21:46:36] <mike18__> yeah
[21:46:37] <zware> Adoi: `age` is a function in your pasted code; `itemgetter(2)` returns a callable object (effectively a function)
[21:46:48] <ammar2> mike18__: generally you use asserts as a quick sanity check rather than the actual API enforcement
[21:46:53] <Adoi> is there no plain vanilla "ordering" function in python without wrestling with keys?
[21:46:58] <habnabit_> mike18__, that is not what asserts are for. do a normal if-raise
[21:47:00] *** Joins: Sasazuka (~Sasazuka@user/sasazuka)
[21:47:19] <zware> mike18__: "assert" is for "this should never ever happen and things should blow up if it does"
[21:47:22] <habnabit_> Adoi, keys are _vastly_ easier to use than a comparison function in most cases
[21:47:41] <ammar2> mike18__: e.g if you want to validate that an incoming number is within a range, raise a ValueError or similar
[21:47:41] <mike18__> if raise exception?
[21:47:42] <habnabit_> Adoi, what comparison function is it you want?
[21:48:04] <ammar2> mike18__: if some_parameter > 1.0: raise ValueError("some_parameter larger than 1")
[21:48:05] <habnabit_> mike18__, if some_parameter <= 1.0: raise ValueError('bad parameter value', some_parameter)
[21:48:17] <ammar2> oh whoops, what habnabit_ said ^
[21:49:13] <dale> zware: I think you are correct.
[21:49:23] <Adoi> habnabit_ to order the items of this list according to their "age" element of each list item; [[0,1,age,3],[a,b,age,d],[alpha,beta,age,gamma]]
[21:49:28] <mike18__> @habnabit_ yeah that makes more sense to me .... ValueError...
[21:49:35] <mike18__> thats an exception right?
[21:49:42] <mike18__> valueError exception
[21:49:49] <habnabit_> Adoi, that's trivial with a key function. `yourlist.sort(key=lambda x: x[2])`
[21:49:51] *** Joins: ali1234[m] (~ali1234@user/ali1234)
[21:50:01] *** Joins: MaxFury (~MaxFury@110.235.228.126)
[21:50:08] *** Parts: MaxFury (~MaxFury@110.235.228.126) ()
[21:50:43] <dale> zware: Thank you for running that test to convince me the rest of the way that I am the problem, not stdlib. :)
[21:51:20] <dale> I never used to hate programming with threads, but then somewhere between Clojure, Go, and the new async APIs, I seem to have lost my taste for it.
[21:51:31] *** Joins: hnOsmium0001 (uid453710@id-453710.stonehaven.irccloud.com)
[21:51:36] *** Joins: Gudddu (~Guddu@117.222.84.65)
[21:52:52] <mike18__> habnabit_: can i do in unit test something like this for ValueError? https://ideone.com/eaMZ6d
[21:53:26] <ammar2> mike18__: if you're using unittest it has assertRaisesRegex to test for error messages
[21:53:28] <habnabit_> mike18__, you normally name the specific exception like ValueError
[21:54:07] <ammar2> mike18__: there's an example here https://docs.python.org/3/library/unittest.html#unittest.TestCase.assertRaisesRegex
[21:54:25] <mike18__> do you put the assertRaisesRegex only around that func you test right?
[21:54:32] <Adoi> habnabit_ do I still need itemgetter beforehand to define "x" in your function?
[21:55:00] <habnabit_> Adoi, it's a lambda, so, no
[21:55:30] *** Quits: Guddddu (~Guddu@27.56.198.110) (Ping timeout: 264 seconds)
[21:55:31] <ammar2> mike18__: yeah, you use the `with` statement around the code that throws the exception
[21:55:38] <dale> You know you're having a good day when you have to while :; do pytest -vx; done
[21:56:05] *** Joins: dagb (~dagb@241.92-220-211.customer.lyse.net)
[21:56:12] <habnabit_> dale, i normally write `while sleep 1` so C-c isn't so fiddly
[21:56:33] <dale> habnabit_: Good call.
[21:56:38] <ammar2> true TDD practitioners
[21:58:00] <dale> zware: You were exactly right, BTW.  5% of the time the Queue.get() thread would apparently be given a time slice before the main thread could fill up the queue, and I was only blocking the get thread *after* it got the first item.
[21:58:03] <teut> anyone knows how to reset keyboard bindings in vscode?
[21:58:03] <dagb> a slightly #nostupidquestions type of question....   does dbus depend on systemd?
[21:59:15] <teut> some stupid extension did something that I cant use the "k"
[22:00:32] *** Joins: evidlo (~evidlo@2001:470:69fc:105::7fc)
[22:00:39] *** Quits: xrogaan (~xrogaan@user/xrogaan) (Quit: Leaving)
[22:00:49] <InPhase> dagb: I'm no expert on it, but my understanding is dbus is a more generalized protocol, but that the popular implementation is one which is integrated heavily with systemd.
[22:00:59] *** Parts: teut (~teut@182.69.85.39) ()
[22:01:16] *** Joins: diegov (~diegov@2001:470:69fc:105::103f)
[22:01:36] <raek> dagb: I think you can have dbus without systemd on a system. also: systemd runs the dbus-daemon, but systemd exposes a dbus API
[22:01:39] <dagb> InPhase: so....  "not really, but actually yes" ?
[22:01:50] <raek> so the deployment is kind of circular?
[22:02:02] <dagb> dasbus.error.DBusError: The name org.freedesktop.hostname1 was not provided by any .service files
[22:02:04] <InPhase> dagb: Sounds fair to me.  :)
[22:02:11] *** Quits: pathos (~pathos@169-1-247-122.ip.afrihost.co.za) (Ping timeout: 272 seconds)
[22:02:38] <dagb> and I wonder why dasbus needs to parse .service files.
[22:02:39] <InPhase> dagb: For one perspective, package dbus in Ubuntu depends on libsystemd0 as an installation requirement.
[22:02:40] *** Joins: BritneySpears14 (~iphone@user/iphone)
[22:02:46] <BritneySpears14> anyone here like to write code?
[22:02:56] <raek> but maybe systemd can boot the computer without dbus? you wouldn't be able to run any systemctl commands though...
[22:03:23] <dagb> BritneySpears14: most of us enjoy that code is written. close, but not quite the same.
[22:03:42] <raek> dagb: are thos actual systemd unit files and not dbus bus-activated services? (which also have some config files)
[22:03:54] <dagb> raek: no clue
[22:04:09] *** Joins: neceve (~quassel@2a02:c7f:607e:d600:a95a:ecd2:e57a:3130)
[22:04:09] *** Quits: Nact (~l@2a02:a03f:c0b0:f600:3253:5994:1b4f:e854) (Quit: Konversation terminated!)
[22:04:24] <dagb> just trying to use a python dbus library to interact with modemmanager via dbus
[22:04:26] <InPhase> BritneySpears14: Why would you ask that in a channel about snakes?
[22:04:49] <dagb> and so far, both of the ones I have tried throws a message like that
[22:04:57] <dagb> and I do not have systemd
[22:05:03] <Adoi> habnabit_, still the order is applied wrong (presumably because x[2] is still a string and not a number denoting age?); https://www.pastebin.cz/raw/B541nzN
[22:05:13] <dagb> looks like I may have to bite the bullet
[22:05:16] <raek> dagb:  https://dbus.freedesktop.org/doc/dbus-specification.html#message-bus-starting-services
[22:05:24] *** BritneySpears14 is now known as iphone
[22:06:06] *** Joins: lukka5 (~lukka5@246-60-231-201.fibertel.com.ar)
[22:06:18] <habnabit_> Adoi, if you want a numerical sort, you have to sort numbers, yes
[22:06:19] *** Joins: pathos (~pathos@169-1-247-122.ip.afrihost.co.za)
[22:06:27] *** Quits: Strom (strom@fedora/strom) ()
[22:06:41] *** Joins: GiLgAmEzH (~gilgamezh@186.19.69.139)
[22:06:45] <habnabit_> Adoi, call int() to turn it into a number
[22:06:49] <dagb> raek: thank you
[22:08:21] <InPhase> Adoi: Perhaps try: people.sort(key=lambda x: int(x[2]))
[22:09:16] <InPhase> Adoi: Although if you're expanding this to anything serious, rather than just learning, you would probably want to store that data in a class or something where the ages are actually stored in their proper integer type.
[22:09:48] *** Quits: RangerBobVA (~bmaddox@user/rangerbobva) (Quit: Leaving)
[22:10:02] *** Joins: stranac (~stranac@78-2-32-42.adsl.net.t-com.hr)
[22:11:16] *** Joins: agumonke` (~user@88.163.231.79)
[22:11:29] *** Quits: dme86 (~dan@user/dan86) (Ping timeout: 272 seconds)
[22:11:47] <Adoi> habnabit_ ah, great, that worked with int(), unlike key arg above, and finally the code works without any errors, thank you very much!
[22:12:10] *** Joins: mrgz (~mrgz@201-42-0-191.dsl.telesp.net.br)
[22:12:24] *** Quits: i0e (~is0ke3@user/is0ke3) (Ping timeout: 252 seconds)
[22:12:41] <mike18__> how to translate something like that to valueError? assert not self.sum_eval.too_high(self.blabla), "Solution does not exist: min data too high"
[22:13:55] <habnabit_> Adoi, you can't sort by the third element of the list without a key function, so you kind of need both
[22:14:02] <InPhase> mike18__: if, then raise.
[22:14:10] <mike18__> the not - is for bool?
[22:14:36] <habnabit_> mike18__, `if self.sum_eval.too_high(self.blabla): raise ..`
[22:14:41] <mike18__> assert not  ..
[22:14:49] <lacrymology> is there a need to close an event loop if I ran something with `loop.run_until_complete(task)`?
[22:14:51] <mike18__> not refers to boolean?
[22:14:51] <iphone> I like to use python
[22:14:54] *** Joins: jdmark (~jdmark@67.8.137.130)
[22:15:01] <zware> dale: Glad you found it :)
[22:15:06] <habnabit_> lacrymology, yes. use asyncio.run
[22:15:10] *** Quits: agumonke` (~user@88.163.231.79) (Remote host closed the connection)
[22:15:14] <lacrymology> habnabit_: that was not the question.
[22:15:18] <lacrymology> but thanks, I'll close it
[22:15:34] <habnabit_> lacrymology, run_until_complete is a misfeature. don't bother with it
[22:15:45] *** Quits: GiLgAmEzH (~gilgamezh@186.19.69.139) (Ping timeout: 268 seconds)
[22:15:50] <Thanattt> Hello everyone
[22:15:50] <lacrymology> habnabit_: you're giving me advice without knowing my context
[22:15:56] <Thanattt> I created a set from a list
[22:16:09] <habnabit_> lacrymology, ok. i don't think that advice needs context. i think run_until_complete is always a bad idea
[22:16:13] *** Joins: averell (~averell@user/averell)
[22:16:23] <Thanattt> I want to know which item in the list were duplicated. The list has 10,000+ items
[22:16:27] <bjs> lacrymology: I mean,  habnabit_ did answer your question right?  They said "yes".
[22:16:31] <zware> habnabit_: I disagree, it was the reasonable way to run an async program before `asyncio.run` was introduced
[22:16:34] <lacrymology> habnabit_: okay, and I'm taking that, the unwarranted bit is "use asyncio.run` because I can't
[22:16:41] *** Joins: Betal (~Beta@user/betal)
[22:16:55] <lacrymology> bjs: yes, I was wondering if using `run_forever` + `stop` once the task is resolved would be the right way
[22:16:56] <habnabit_> zware, asyncio itself wasn't reasonable before asyncio.run was introduced ;)
[22:16:58] <mike18__> habnabit_: i dont understant what the not part does before the assert....
[22:16:59] *** SuperL4g is now known as SuperLag
[22:17:06] <habnabit_> mike18__, it inverts a boolean
[22:17:17] <mike18__> why not use false?
[22:17:22] <habnabit_> mike18__, 'use false'?
[22:17:25] <Thanattt> What's the fastest way to do that instead of iterating through the set and finding which items appear twice in the list
[22:17:38] <habnabit_> Thanattt, use collections.Counter
[22:17:50] <mike18__> assert too_high == False ...
[22:17:56] <bjs> mike18__: why not use not?
[22:18:22] <habnabit_> zware, i don't think asyncio is reasonable even now tbh. i always use/recommend trio
[22:18:22] *** Joins: GeniusMusing (~geniusmus@199.91.225.59)
[22:18:33] <mike18__> can use it too - but if you are not in python its harder to read...
[22:18:35] <lacrymology> habnabit_: I'll give it the benefit of the doubt, and I'll try two things. Maybe I *can* use .run() now. I wasn't able to in a couple of tests I did, but now I'm making a whole new thread, so that might be okay
[22:18:42] *** Quits: brickfat (~brickfat@user/brickfat) (Remote host closed the connection)
[22:18:49] *** Joins: bgardner (~bgardner@2001:470:69fc:105::8a8)
[22:19:01] <bjs> mike18__: I mean... yes.
[22:19:12] <habnabit_> mike18__, what language are you used to?
[22:19:13] <bjs> Python is harder to read if you're not "in python"
[22:19:21] <InPhase> mike18__: It's just more hazardous:  Guess what this will output:  2 > 3 == False    Then try running it.
[22:19:30] <bjs> but also what language doesn't have boolean negation
[22:19:47] *** Joins: i0e (~is0ke3@user/is0ke3)
[22:19:49] *** Joins: gareppa (~gareppa@user/gareppa)
[22:19:54] <InPhase> mike18__: Next try:  not 2 > 3
[22:20:05] <iphone> brainfuck does not have boolean negation bjs
[22:20:16] <raek> dagb: also, check out d-feet if you want to explore what's on the bus: https://wiki.gnome.org/Apps/DFeet
[22:21:13] *** Quits: Thanattt (~Thanatos@197.210.64.146) (Read error: Connection reset by peer)
[22:21:25] *** Joins: Thanatos (~Thanatos@102.89.3.89)
[22:21:28] <Adoi> is lambda little functions that you can insert wherever it comes handy?
[22:21:33] <Adoi> are*
[22:21:38] <InPhase> mike18__: It's best to use structures that force the boolean evaluation context you are looking for.
[22:21:40] <habnabit_> Adoi, yep
[22:21:43] <bjs> Adoi: the `lambda` syntax is just a shorthand for the `def` syntax yes
[22:21:58] *** Quits: olasd (~olasd@noether.olasd.eu) (Changing host)
[22:21:58] *** Joins: olasd (~olasd@softwareheritage/olasd)
[22:21:58] *** Quits: metah4ck3r (~meta@user/metah4ck3r) (Quit: WeeChat 3.1)
[22:22:04] <bjs> they make the same kind of object, and anywhere there's a lambda you can always make a `def` on the previous line instead
[22:22:19] *** Joins: metah4ck3r (~meta@user/metah4ck3r)
[22:22:45] <Adoi> right
[22:23:18] *** Quits: gareppa (~gareppa@user/gareppa) (Remote host closed the connection)
[22:24:03] *** Joins: jpcooper (~user@46.196.80.210)
[22:24:56] <jpcooper> Hello. There's a function in Pandas which takes two columns and another boolean column. It chooses between values of the first two columns based on the corresponding value of the boolean column. What is the name of this function?
[22:25:30] *** Joins: brickfat (~brickfat@user/brickfat)
[22:25:51] <Thanatos> Thanks habnabit_ Counter is excatly what I wanted.
[22:26:18] <InPhase> jpcooper: Do you mean where()?
[22:27:45] *** Joins: GenTooMan (~cyberman@2601:547:437f:e5c6:21f:5bff:fefe:a883)
[22:27:50] <[O-O]> i see np.where example here: https://stackoverflow.com/a/46525290
[22:28:40] <InPhase> jpcooper: https://pandas.pydata.org/docs/reference/api/pandas.DataFrame.where.html
[22:29:28] *** Joins: jinsun (~quassel@182.77.87.72)
[22:30:18] *** Quits: mike18__ (~geri@2001:ac8:22:73:40c::1) (Ping timeout: 264 seconds)
[22:32:22] *** Quits: wei2912 (~wei2912@112.199.250.21) (Quit: Lost terminal)
[22:32:31] *** Quits: n00b101 (uid448161@id-448161.tooting.irccloud.com) (Quit: Connection closed for inactivity)
[22:32:38] *** Quits: jpcooper (~user@46.196.80.210) (Ping timeout: 265 seconds)
[22:32:55] <lacrymology> habnabit_: yeah, can't do. `asyncio.run()` will be called from within a different thread, and it expects a coro, I need to pass in a Task so I can retrieve the result
[22:34:14] *** Quits: gloomy_desktop (~ldorigo@81.161.149.37) (Ping timeout: 272 seconds)
[22:34:52] <habnabit_> lacrymology, it's trivial in trio at least: https://trio.readthedocs.io/en/stable/reference-core.html#getting-back-into-the-trio-thread-from-another-thread
[22:35:05] <bjs> lacrymology: is this a task that was created for a different event loop?
[22:35:07] <habnabit_> lacrymology, i know asyncio's threading API is pretty wonky but there has to be something
[22:35:08] *** Joins: odoood (~odoood@2601:c8:c003:a550::2)
[22:35:39] <habnabit_> lacrymology, https://docs.python.org/3/library/asyncio-task.html#asyncio.run_coroutine_threadsafe
[22:36:01] <lacrymology> bjs: no, I'm passing in the loop and the task, created with run_..threadsafe, the thread sets the loop, runs it. I was using `run_until_complete` and doing thread.join() to wait for it
[22:36:07] <lacrymology> habnabit_: yes, I'm using that
[22:36:23] <habnabit_> lacrymology, but if you're doing that, why would you need run_until_complete?
[22:36:46] <bjs> lacrymology: you're creating an event loop, creating a task, then immediately running the task and then the whole thread waits for it to finish?
[22:36:47] <lacrymology> habnabit_: because that doesn't actually start the loop?
[22:36:58] *** Quits: brickfat (~brickfat@user/brickfat) (Quit: Leaving)
[22:37:44] <lacrymology> bjs: basically, yes. I need to run some async code on a 100% sync codebase, but then again, things may happen. I've had issues when there were more than one event loop running, so running it in a different thread seems to be the only solution
[22:38:04] <bjs> lacrymology: so why can't you use asyncio.run()?  and what is this run threadsafe stuff about
[22:38:13] <bjs> if you're making a new event loop I mean
[22:38:15] *** Quits: Moosadee (~Moosadee@136.32.155.193) (Ping timeout: 252 seconds)
[22:38:23] <lacrymology> bjs: because I have no way to receive the result on the main thread if I do that?
[22:38:23] <bjs> I feel like two ideas got mixed up here
[22:38:28] <lacrymology> at least I haven't figured out how to
[22:38:52] <lacrymology> I create the task outside (for the thread), send it in, then use it to do `task.result()`
[22:39:07] <habnabit_> lacrymology, the main thread calls asyncio.run_coroutine_threadsafe on a loop that's always running in the background
[22:39:09] <lacrymology> that's the step I lose if I use `run` inside the thread
[22:39:23] *** Joins: jstein (~jstein@gentoo/developer/jstein)
[22:40:00] <lacrymology> habnabit_: AFAICT, you need to pass it the loop, and you need to run the loop manually. I've tested it, nothing happens until I do some form of `loop.run()`
[22:40:25] <lacrymology> maybe if the loop's already running in the thread (e.g. with `run_forever()`) it'll work
[22:40:35] <bjs> lacrymology: why can't you get the result out?
[22:40:41] <lacrymology> then I can do something like `while not task.done(): sleep()`
[22:40:47] <lacrymology> bjs: how do I do that?
[22:40:54] <habnabit_> lacrymology, yes, that's what i mean: have a thread always running a loop, then use asyncio.run_coroutine_threadsafe. no need to poll
[22:41:13] <bjs> lacrymology: I'm not even sure what the trouble is here,  you mean how do y ou send back a result to another thread?
[22:41:22] *** Joins: brickfat (~brickfat@user/brickfat)
[22:41:33] <lacrymology> habnabit_: what do you mean "no need to poll"? .run_coroutine_threadsafe is not blocking..
[22:41:40] *** Quits: nomic (~nomic@2a00:23c6:9910:1201:cdae:ea4b:93a4:1c59) (Quit: Leaving)
[22:41:47] <habnabit_> it's not? ugh
[22:41:49] <habnabit_> asyncio is so bad
[22:41:56] <bjs> it returns a future
[22:41:57] *** Joins: nomic (~nomic@2a00:23c6:9910:1201:cdae:ea4b:93a4:1c59)
[22:41:59] <bjs> you can use the Future to wait of course
[22:42:06] <lacrymology> yes
[22:42:11] <lacrymology> but I can't `await` on the main thread
[22:42:15] <lacrymology> that's the main issue here
[22:42:25] <lacrymology> so.. while not task.done(): sleep?
[22:42:36] <bjs> lacrymology: but why do you need to await? the thing run_coro_threadsafe returns is not an awaitable is it
[22:42:43] <lacrymology> it's a task
[22:42:46] <bjs> it is?!
[22:42:53] <bjs> isn't it supposed to be a concurrent.futures Future
[22:42:54] <habnabit_> no, it's a concurrent.futures.Future
[22:42:55] *** Joins: teut (~teut@182.69.85.39)
[22:42:59] <lacrymology> it's a Future, sorry
[22:43:02] <bjs> otherwise it doesn't make any sense
[22:43:08] <bjs> lacrymology: sure, so just get the result from it
[22:43:09] <lacrymology> yes, yes
[22:43:14] <lacrymology> bjs: and.. that's blocking?
[22:43:26] <bjs> lacrymology: ... well how else is it supposed to get the result if not wait for it?
[22:43:27] <lacrymology> I'm sure I tried that and I got a "not ready yet" thing
[22:43:29] <habnabit_> lacrymology, https://docs.python.org/3/library/concurrent.futures.html#concurrent.futures.Future.result
[22:43:35] <bjs> lacrymology: not ready yet?
[22:43:53] <iphone> I have written code in python before
[22:43:56] <lacrymology> InvalidStateError: Result is not set.
[22:43:59] <bjs> IHasFinger: good!
[22:44:01] <bjs> Oops
[22:44:04] <bjs> iphone: good! :)
[22:44:07] *** Quits: gloomy (~ldorigo@81.161.149.37) (Ping timeout: 268 seconds)
[22:44:11] <iphone> bjs are good too
[22:44:13] <iphone> ;)
[22:44:17] <lacrymology> bjs: give me a minute, maybe I'm confusing things.
[22:44:22] <lacrymology> iphone: don't do that
[22:44:28] <lacrymology> keep to the python
[22:44:30] <lacrymology> :)
[22:44:52] <iphone> I all I did were say he is good? What is the problme
[22:45:51] *** Joins: gloomy (~ldorigo@81.161.149.37)
[22:46:54] <lacrymology> bjs, habnabit_: OK, SORRY. I must've gotten Tasks and Futures mixed up at some point
[22:47:13] <bjs> lacrymology: it sounds like you have async futures and threading futures mixed up more like
[22:47:34] <bjs> if you have the background event loop, you can use asyncio.run_coroutine_threadsafe and that should just work fine.
[22:47:44] <lacrymology> yes
[22:47:51] <bjs> If you want to make a new event loop (although I don't see why) then asyncio.run will work fine
[22:48:24] <lacrymology> bjs: my problem using asyncio.run() is that it broke because "you cannot run an event loop when there's a second one running"
[22:48:34] <bjs> lacrymology: in the same thread*
[22:48:52] <bjs> habnabit_: anyway it wouldn't be asyncio without a little inconsistency and confusion about futures :P
[22:48:57] <lacrymology> XD
[22:49:03] <habnabit_> and this is why i use trio
[22:49:04] <lacrymology> I think i got the two futures mixed up, yes
[22:49:27] *** Joins: DaNeenjah (~jake@40.sub-72-106-103.myvzw.com)
[22:49:31] *** Joins: HaMsTeRs (~HaMsTeRs@210.3.201.132)
[22:51:36] <lacrymology> NOW, I was going to move "create a new thread" to "use a threadpool executor", but that kinda breaks if the threads get stuck at `run_forever`, I think..
[22:52:09] *** Joins: derelict (~derelict@user/derelict)
[22:52:27] <lacrymology> maybe then I can use asyncio.run()
[22:53:48] *** Joins: aleph (~aleph@pool-98-116-232-112.nycmny.fios.verizon.net)
[22:53:48] *** Joins: meain (~meain@2001:470:69fc:105::2db)
[22:54:14] *** Joins: omen (~omen@user/omen)
[22:54:31] *** Joins: dme86 (~dan@user/dan86)
[22:55:57] *** Joins: aslicedbanjo (~aslicedba@host31-52-127-233.range31-52.btcentralplus.com)
[22:57:07] <lacrymology> amazing
[22:57:31] <lacrymology> okay, that's great, thank you so much, both of you, and sorry if I got pricky, this was getting me on edge
[22:58:13] <habnabit_> lacrymology, i will point out again that this whole thing is substantially easier with trio instead of asyncio
[22:59:37] *** Quits: dme86 (~dan@user/dan86) (Ping timeout: 272 seconds)
[23:01:54] *** Quits: Xano (~Xano@2a00:23c4:420c:d700:1e20:a1bd:f776:75a9) (Ping timeout: 244 seconds)
[23:02:08] *** Joins: merijn (~merijn@83-160-49-249.ip.xs4all.nl)
[23:03:25] *** Joins: RoadRunner (~kvirc@S010600fc8db51093.vc.shawcable.net)
[23:03:30] *** Quits: meain (~meain@2001:470:69fc:105::2db) (Quit: Reconnecting)
[23:03:48] *** Joins: meain (~meain@2001:470:69fc:105::2db)
[23:05:30] *** Joins: whaley (~whaley@066-169-090-170.res.spectrum.com)
[23:06:22] <lacrymology> habnabit_: and I'll point out that I'm working on a 100k+ codebase together with like 30 engineers, and I cannot just change the library we use
[23:06:30] <lacrymology> I mean, I _wish_ doing that was possible?
[23:06:41] <lacrymology> but once we made a choice, it's hard to stop the beast
[23:06:42] <habnabit_> lacrymology, it sounded like your large codebase was synchronous
[23:06:58] <RoadRunner> is there an official PyCharm channel or can pycharm questions be asked here?
[23:07:21] <SnoopJ> they can be asked here
[23:08:08] <lacrymology> we're actually breaking it down into microservices, the new micros are async, they're already under development, we're migrating a service from the monolyth to the new service, but we're not ready to move every functionality. We want to create any new code (API clients, specifically) for the new system directly, but we want to be able to use them from the sync code while the transition lasts
[23:08:09] *** Joins: ibejohn (~ibejohn@104.4.30.169)
[23:08:12] <RoadRunner> good, how does one change the background color in a PyCharm's color scheme?
[23:09:02] *** Joins: badsektor (~badsektor@user/badsektor)
[23:09:04] <lacrymology> we're working with mail carriers, right now we're doing quoting on the new service, but label printing will remain in the old one for a while, so we want to share code, but we want to write it the "new" way (because the old way is painful to read)
[23:09:22] *** Quits: Thanatos (~Thanatos@102.89.3.89) (Ping timeout: 265 seconds)
[23:10:01] <lacrymology> habnabit_: I'll look into trio, if it's not too incompatible, it might be possible
[23:10:22] <lacrymology> in the meanwhile: is there something akin to `functools.wraps` but for classes?
[23:10:48] <grawity> isn't that basically what a subclass does?
[23:11:20] <jabberwock> is there any difference in functionality between / and // division?
[23:11:36] <habnabit_> jabberwock, what's 1/2, 1//2
[23:11:37] <SnoopJ> jabberwock, yes, the result of the latter with builtins is always an int
[23:11:59] <lacrymology> habnabit_: also, what if any libraries we use use/assume asyncio?
[23:12:09] <jabberwock> SnoopJ: Thank you! That's what I was hoping for :D
[23:12:47] <habnabit_> lacrymology, these days libraries will often support both, but there's still trio_asyncio
[23:13:07] *** Quits: blackout69 (~blackout6@net-109-117-245-193.cust.vodafonedsl.it) (Remote host closed the connection)
[23:19:32] *** Quits: aleph (~aleph@pool-98-116-232-112.nycmny.fios.verizon.net) (Quit: WeeChat info:version)
[23:21:14] *** Joins: acegallagher (~Ace@71-211-253-134.hlrn.qwest.net)
[23:21:39] <acegallagher> hey there. I'm having a weird issue where my site (python -m site) is different if I run python from inside emacs (vterm)
[23:21:48] <acegallagher> and so I can't find packages, etcetc
[23:22:04] <acegallagher> but I can't for the life of me figure out how to debug it... I'm on a linux box
[23:22:08] <bjs> acegallagher: can you pastebin the two different sites?
[23:22:18] <bjs> the output probably has details that hint to what has happened
[23:22:22] <RoadRunner> if someone can suggest a more appropriate channel for custormization of PyCharm color schemes - please suggest it
[23:23:39] *** Joins: dme86 (~dan@user/dan86)
[23:24:05] <acegallagher> bjs: https://bpa.st/3P4Q
[23:24:12] *** Quits: SynthClamor (~Synthetic@2a01cb04008a92007da59076e1b0ce8b.ipv6.abo.wanadoo.fr) (Remote host closed the connection)
[23:24:23] <acegallagher> they're both there. I imagine elpy is taking something over, but this doesn't happen on my laptop. only on this remote server
[23:24:28] <acegallagher> and I use the same emacs config for both
[23:25:05] <bjs> acegallagher: it looks like something called elpy is creating a venv and the execution inside emacs is using that
[23:25:21] <bjs> acegallagher: the "elpy/rpc-venv" seems suggestive :)
[23:25:26] *** Joins: kek_ (~kek_@178.197.226.217)
[23:25:39] <kek_> hey :) what's a good way to remove all items in an list/array which contain some substring?
[23:25:57] <bjs> acegallagher: a quick google gives https://elpy.readthedocs.io/en/latest/concepts.html#virtual-envs which might have some info
[23:28:41] *** KirkMcDo1ald is now known as KirkMcDonald
[23:31:14] *** Quits: abraxas (~abraxas@ip68-14-53-156.ri.ri.cox.net) (Quit: abraxas)
[23:32:03] <teut> https://dpaste.org/FNXT   https://ibb.co/qxrS1TR  what's the differnce between these two syntax that one gives error while other  doesnt , I m referring to  self.kwargs
[23:32:06] *** Quits: brickfat (~brickfat@user/brickfat) (Remote host closed the connection)
[23:32:47] <bjs> teut: why is one a screenshot?  and what is the error?
[23:33:21] <teut> https://dpaste.com/APD5X4SWK
[23:33:22] <bjs> teut: but yes,  some_dict.get("key") is not the same as some_dict["key"]
[23:33:44] <altendky> i feel like i must just be looking in the wrong places.  is there a not-cli option for sphinx's `-W` (warnings as errors) so it can always be on?  including in read the docs builds
[23:34:07] <teut> some_dict.get("key", None)  is different , but that , whats the difference?
[23:34:23] *** Quits: Gudddu (~Guddu@117.222.84.65) (Remote host closed the connection)
[23:34:38] <bjs> teut: have you read the documentation for get() yet?
[23:34:47] *** Joins: Gudddu (~Guddu@117.222.84.65)
[23:34:49] *** Joins: Vision (~Vision@047-034-097-066.res.spectrum.com)
[23:34:52] <teut> I just opened it meanwhile
[23:35:02] <bjs> teut: is that a no?
[23:35:39] <jinsun> RoadRunner: ##programming maybe
[23:36:19] <teut> default None , ok I had misinformation
[23:36:27] <bjs> teut: misinformation?
[23:36:33] *** Quits: merijn (~merijn@83-160-49-249.ip.xs4all.nl) (Ping timeout: 272 seconds)
[23:36:40] <teut> wrong info, whats the word?
[23:36:43] <bjs> teut: you mean, lack of information because you refused to read the docs :)
[23:36:59] *** Quits: PJBoy (~PJBoy@user/pjboy) (Ping timeout: 272 seconds)
[23:37:41] <teut> its not like that anymore more ya , it happens sometimes on long bug fix
[23:37:45] <teut> in*
[23:37:55] *** Quits: zeden (~zeden@user/zeden) (Quit: WeeChat 3.0.1)
[23:38:06] <RoadRunner> is there actually an official PyCharm channel?
[23:38:34] <bjs> teut: it's not like that anymore?
[23:38:50] *** Quits: kek_ (~kek_@178.197.226.217) (Ping timeout: 252 seconds)
[23:40:12] <acegallagher> bjs, I appreciate the help, I went down this hole but didn't get anywhere with it
[23:40:13] *** Joins: no_gravity (~no_gravit@user/no-gravity/x-5639427)
[23:40:19] <acegallagher> because I use the same venv on both
[23:40:22] <acegallagher> but I'll dig some more
[23:40:46] *** Joins: magla (~gelignite@55d4f9ee.access.ecotel.net)
[23:40:59] <no_gravity> Is this the right way to read a file into a string? with open('myfile') as f: text = f.read()
[23:41:17] <bjs> acegallagher: so you installed something like pip outside of emacs (on the remote machine) then inside emacs you run it but it can't find it?
[23:41:24] <bjs> acegallagher: did you try M-x pyvenv-deactivate then try running it?
[23:41:28] <jinsun> is there any alternative to defaultdict that allows function with one argument?
[23:41:30] <bjs> no_gravity: yes
[23:41:43] <grawity> jinsun: defaultdict(lambda: foo(bar))
[23:41:47] <no_gravity> bjs: Thanks. Funny. Why the funky "with" construct?
[23:41:57] <bjs> no_gravity: to close the file once you've finished reading it
[23:42:02] <grawity> no_gravity: automatically closes f when you leave the 'with'
[23:42:44] <jinsun> grawity: well, ok that works if bar is constant, but I want bar = key
[23:42:50] <grawity> (in short scripts I sometimes use `f = open('myfile').read()` and just rely on the GC cleaning up after me, but I guess that's a bad idea in general?)
[23:43:07] <no_gravity> bjs, grawity: I seee. What would happen if I do function read_file(myfile) f=open('myfile'); text=f.read(); return text;
[23:43:16] <habnabit_> grawity, it is a bad idea in general. it emits a warning
[23:43:18] <bjs> no_gravity: then it won't be closed
[23:43:19] <no_gravity> bjs, grawity: Would f be destroed after the return?
[23:43:30] <altendky> grawity: pathlib.Path('myfile').read_text() or such perhaps
[23:43:31] <zware> jinsun: You'll probably have to implement your own dict subclass that has a `__missing__` method
[23:43:31] <no_gravity> bjs: The deconstructor does not close it?
[23:43:32] <grawity> habnabit_: is it a bad idea because of the warning, or something else?
[23:43:34] <bjs> no_gravity: eventually yes
[23:43:42] *** Quits: GeniusMusing (~geniusmus@199.91.225.59) (Quit: Leaving)
[23:43:45] *** Quits: elastic_dog (~elastic_d@2a01:118f:822:9c00:2132:cd52:1e4a:f46a) (Ping timeout: 244 seconds)
[23:43:52] <habnabit_> grawity, the warning is what tells you that your code has a mistake in it
[23:43:58] <Akuli> it gets destroyed before the function returns (because of how reference counting works), but yeah it emits a warning
[23:44:00] <habnabit_> no_gravity, the destructor warns you if you forgot an explicit close
[23:44:13] <no_gravity> habnabit_: OMG
[23:44:20] <bjs> no_gravity: the `with` _guarantees_ it will close it. If you don't use `with` then you only get "eventually probably".
[23:44:27] <grawity> habnabit_: tbh I was hoping for something else than "it's bad because the warning says it's bad"
[23:44:39] <grawity> habnabit_: like, what's the technical reason behind it /being/ bad and emitting a warning?
[23:44:55] <bjs> no_gravity: Python can neatly manage all of its own resources,  but open files are the OS's resources and so it's good practice to give it back once you're done
[23:45:00] <jinsun> zware: ah cool, didn't know about __missing__
[23:45:08] <no_gravity> bjs: ok
[23:45:14] <habnabit_> grawity, it's easy to keep a file around by accident and extend its lifetime
[23:46:25] *** Quits: wyclif (~wyclif@user/wyclif) (Remote host closed the connection)
[23:46:47] <bjs> Yes,  the actual Python data structures aren't so important but inside is a file descriptor the OS gave the process.  When you ask for a file descriptor from the OS you basically make a promise you'll give it back promptly,  the OS doesn't like to hand too many out at once :)
[23:47:06] <grawity> hmm
[23:47:08] <bjs> for the OS has to keep track of _all_ the files that are not-yet-closed in _all_ programs at once
[23:47:11] *** Quits: gr33n7001 (~gr33n7007@user/gr33n7007h) (Quit: WeeChat 3.1)
[23:47:22] <grawity> I get running out of FDs, but I had the impression python's GC was somewhat more aggressive than that
[23:47:54] <grawity> e.g. destroying leftovre objects as soon as you return from the function
[23:47:56] <bjs> grawity: I mean I'm sure you can construct examples where the file would go out of scope and there really wouldn't be any other references around for sure very quickly
[23:48:00] <habnabit_> grawity, which python's gc? ;)
[23:48:12] <zware> grawity: If you're just doing `open('filename').read()` in cpython, reference counting will kill the file object pretty quickly.  It's not something to rely on, though
[23:48:18] <no_gravity> So should I write a helper function like this? def read_file(file) with open(file) as f: return f.read()
[23:48:23] <bjs> grawity: but most code is long and complicated and it's not always immediately obvious *when* things go out of scope
[23:48:34] <habnabit_> no_gravity, that function already exists in pathlib
[23:48:36] <bjs> no_gravity: I'm sure pathlib already has something like that
[23:48:45] <bjs> grawity: so for those you really *do* want `with`
[23:49:05] *** Joins: elastic_dog (~elastic_d@2a01:118f:822:9c00:2132:cd52:1e4a:f46a)
[23:49:10] <bjs> grawity: and then it's just general good practice to just stick to patterns you know work and are good practice, and to try avoid being "clever" in situations where it might not be strictly needed
[23:49:19] *** Joins: somlis (~somlis@user/somlis)
[23:50:46] <no_gravity> habnabit_, bjs: From a quick google journey I get the impression it does not.
[23:51:14] <bjs> no_gravity: did you try a journey in the pathlib docs instead https://docs.python.org/3/library/pathlib.html#pathlib.Path.read_text
[23:51:16] <habnabit_> no_gravity, https://docs.python.org/3/library/pathlib.html#pathlib.Path.read_text
[23:51:45] *** Joins: gr33n7007h (~gr33n7007@user/gr33n7007h)
[23:51:51] <no_gravity> bjs, habnabit_: The shortest I can come up with based on the specs is: text = Path(myfile).read_text()
[23:52:01] <bjs> no_gravity: isn't that exactly what you wanted?
[23:52:16] <no_gravity> bjs: Well, it is about twice the code complexity.
[23:52:24] <bjs> no_gravity: twice the complexity of what?
[23:52:33] <no_gravity> bjs: Of text = read_file(myfile)
[23:52:35] <habnabit_> no_gravity, why isn't your path already a Path?
[23:52:57] <no_gravity> habnabit_: It comes from an entry in a yaml file.
[23:53:07] <bjs> no_gravity: i wouldn't say it's twice the complexity, I'd say it's basically the same _and_ you don't have to make your own read_file thing and can just use the version that exists already
[23:53:18] *** Joins: ganchan (~thomas_w@user/ganchan)
[23:53:32] <habnabit_> no_gravity, ok, so turn it into a Path on deserialization
[23:53:48] *** Quits: gloomy (~ldorigo@81.161.149.37) (Ping timeout: 268 seconds)
[23:53:57] <no_gravity> I will keep the "with open..." construct for now. Seems to be the smallest of all evils.
[23:54:07] <bjs> no_gravity: pathlib isn't evil?
[23:54:27] <habnabit_> no_gravity, i think pathlib is criminally underused
[23:54:34] <bjs> Path(filepath).read_text()  is very clear and concise to me
[23:54:40] <no_gravity> bjs: It is one more import plus the Constructor(filename).functioncall() construct.
[23:55:00] <bjs> no_gravity: to be fair you probably will find using pathlib beneficial anyway
[23:55:05] <habnabit_> no_gravity, you typically put imports at the top of the file instead of every place you use them
[23:55:06] <bjs> even if just for the sanity of constructing the paths
[23:55:26] *** Quits: puadxtub (~rvgzuuqp@gateway/tor-sasl/rvgzuuqp) (Quit: puadxtub)
[23:56:00] *** Joins: ______GOD______ (~GOD@189.174.198.176)
[23:56:16] *** Quits: xsperry (~as@user/xsperry) (Ping timeout: 268 seconds)
[23:57:43] *** Joins: puadxtub (~rvgzuuqp@gateway/tor-sasl/rvgzuuqp)
[23:59:06] <no_gravity> We will see.
[23:59:09] *** Quits: ideopath_ (~ideopathi@99-6-12-70.lightspeed.irvnca.sbcglobal.net) (Ping timeout: 264 seconds)
[23:59:11] <no_gravity> Thanks for now. Have a great day!
[23:59:12] *** Quits: no_gravity (~no_gravit@user/no-gravity/x-5639427) (Quit: leaving)
[23:59:44] *** Joins: Strom (strom@fedora/strom)
