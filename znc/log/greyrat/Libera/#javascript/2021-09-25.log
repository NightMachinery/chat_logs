[00:07:02] *** Quits: Bishop_Bautista (~Bishop_Ba@174-087-246-009.res.spectrum.com) (Quit: My iMac has gone to sleep. ZZZzzz…)
[00:07:04] *** Quits: yaalon_ (~yaalon@rrcs-72-131-195-82.sw.biz.rr.com) (Remote host closed the connection)
[00:07:05] *** Quits: wroathe (~wroathe@user/wroathe) (Ping timeout: 252 seconds)
[00:07:34] *** Quits: grapheti (~grapheti@dynamic42-98-142-74.dobsonteleco.com) (Remote host closed the connection)
[00:08:24] *** Quits: patchie (~patchie@136.228.209.51) (Quit: Client closed)
[00:08:35] *** Quits: sizeof_void34 (~Thunderbi@109.252.124.86) (Quit: sizeof_void34)
[00:11:20] *** Joins: rvgate (uid308852@id-308852.lymington.irccloud.com)
[00:11:42] *** Quits: Booster2ooo (~Booster2o@user/booster2ooo) (Quit: Lost the game...)
[00:11:47] *** Joins: Crash1hd__ (~Crash1hd@S0106a84e3f475583.cg.shawcable.net)
[00:12:02] *** Quits: comatory (~ondrejsyn@217.11.241.69) (Ping timeout: 252 seconds)
[00:12:35] *** Quits: nomic2 (~nomic@185.192.69.192) (Quit: Leaving)
[00:13:37] *** Quits: zeromule (~eric@2601:602:8d80:4e50:989c:b980:7a01:58f0) (Ping timeout: 252 seconds)
[00:13:58] *** Joins: yaalon (~yaalon@rrcs-72-131-195-82.sw.biz.rr.com)
[00:14:00] *** Joins: nomic (~nomic@185.192.69.192)
[00:15:35] *** Joins: Crash1hd_ (~Crash1hd@64.56.153.179)
[00:15:57] *** Joins: wroathe (~wroathe@c-68-54-25-135.hsd1.mn.comcast.net)
[00:15:57] *** Quits: wroathe (~wroathe@c-68-54-25-135.hsd1.mn.comcast.net) (Changing host)
[00:15:57] *** Joins: wroathe (~wroathe@user/wroathe)
[00:16:37] *** Crash1hd_ is now known as Crash1hd
[00:18:38] *** Quits: Crash1hd__ (~Crash1hd@S0106a84e3f475583.cg.shawcable.net) (Ping timeout: 252 seconds)
[00:19:05] *** Joins: Bishop_Bautista (~Bishop_Ba@174-087-246-009.res.spectrum.com)
[00:19:25] *** Joins: Gustavo6046_ (~Gustavo60@user/gustavo6046)
[00:20:13] *** Quits: Gustavo6046 (~Gustavo60@user/gustavo6046) (Ping timeout: 252 seconds)
[00:21:59] *** Gustavo6046_ is now known as Gustavo6046
[00:22:29] *** Quits: dev_ (~moo@ppp-94-67-198-74.home.otenet.gr) (Ping timeout: 252 seconds)
[00:26:33] *** Joins: trevors (~trevors@c-65-96-171-157.hsd1.ma.comcast.net)
[00:27:19] *** Joins: patchie (~patchie@136.228.209.51)
[00:27:57] *** Quits: junktext_ (~junktext@77.247.181.219) (Quit: junktext_)
[00:28:05] *** Joins: junktext_ (~junktext@109.201.152.171)
[00:28:53] *** Quits: junktext_ (~junktext@109.201.152.171) (Remote host closed the connection)
[00:29:09] *** Joins: junktext (~junktext@109.201.152.179)
[00:30:00] *** Joins: night_wulfe_ (~wulfe@cpe-174-103-156-213.cinci.res.rr.com)
[00:30:26] *** Joins: newton (james@user/newton)
[00:32:26] <newton> is there a way I could have HTML elements as keys in an object without them overwriting each other? e.g. https://jsfiddle.net/zq3409v7/
[00:32:48] <newton> wishful thinking maybe
[00:33:08] *** Quits: night_wulfe (~wulfe@cpe-174-103-156-213.cinci.res.rr.com) (Ping timeout: 265 seconds)
[00:33:55] *** Quits: tex (~dee@user/dix) (Ping timeout: 252 seconds)
[00:35:22] *** Quits: rvgate (uid308852@id-308852.lymington.irccloud.com) ()
[00:35:57] *** Quits: yaalon (~yaalon@rrcs-72-131-195-82.sw.biz.rr.com) (Remote host closed the connection)
[00:36:42] <Alexendoo> newton: Object keys (that aren't Symbols) are strings, so what you've got there is {"[object HTMLDivElement]": "testing 2"}. You can use a Map instead of an object, that allows any value as a key
[00:38:04] <austincheney> sheetjs, if you have a few moments would you mind looking over my binary work?  I still can't get this right: https://github.com/prettydiff/share-file-systems/blob/video/lib/terminal/commands/websocket.ts#L35-L84
[00:38:59] <austincheney> when I attempt to send a websocket message I get errors about connection aborted
[00:39:02] <sheetjs> you need to actually write the length parts
[00:39:20] <sheetjs> so if i were you, i'd do something like
[00:39:34] <sheetjs> const frame: Buffer = Buffer.alloc(10); // the most you will need
[00:39:44] <austincheney> the length part is written as websocket.numbBytes(len)
[00:39:50] <austincheney> but my approach may be wrong
[00:40:20] <sheetjs> it needs a width
[00:40:23] *** Quits: nomic (~nomic@185.192.69.192) (Ping timeout: 265 seconds)
[00:40:25] <sheetjs> oh it is there
[00:40:47] <newton> Alexendoo, thank you
[00:41:39] <sheetjs> why is it always writing 1e6 line 60?
[00:42:54] <austincheney> I am fragmenting messages over 1 million bytes and the line 60 is in a recursive function that will continue so long as the message remains larger than 1 million bytes.  You can ignore that, as I commented out the fragmentation logic and it fails just the same.
[00:43:53] <sheetjs> so just focus on the small case (<126 bytes) does that work?
[00:44:03] <austincheney> no :(
[00:44:07] *** Joins: nomic (~nomic@2a00:23c6:9902:2401:c035:9225:35dc:ef3e)
[00:44:10] <sheetjs> can you link the spec again
[00:44:10] *** Quits: junktext (~junktext@109.201.152.179) (Ping timeout: 260 seconds)
[00:44:43] *** Joins: zeromule (~eric@2601:602:8d80:4e50:989c:b980:7a01:58f0)
[00:45:10] *** Joins: rvgate (~rvgate@80-61-80-213.fixed.kpn.net)
[00:47:02] *** Joins: yaalon (~yaalon@rrcs-72-131-195-82.sw.biz.rr.com)
[00:47:24] <austincheney> https://datatracker.ietf.org/doc/html/rfc6455#section-5.2
[00:47:39] <sheetjs> you have the bits flipped in frame[0]
[00:47:40] <austincheney> but I also have the relevant parts in comment in the server function further down the file
[00:47:57] <sheetjs> when you read these diagrams
[00:48:03] <sheetjs> the left is the low bit of the low byte
[00:48:14] <sheetjs> so FIN is frame[0] & 0x01
[00:48:25] <sheetjs> RSV1/2/3 are frame[0] & 0x02 / 0x04/ 0x08 respectively
[00:48:42] <sheetjs> opcode is frame[0] & 0xF0
[00:49:22] *** Quits: zeromule (~eric@2601:602:8d80:4e50:989c:b980:7a01:58f0) (Ping timeout: 252 seconds)
[00:49:30] <sheetjs> so it should be something like typeof data == "string" ? 0x91 : 0xA1
[00:49:40] <austincheney> i probably have that backwards then
[00:49:43] *** Quits: trevors (~trevors@c-65-96-171-157.hsd1.ma.comcast.net) (Quit: My MacBook has gone to sleep. ZZZzzz…)
[00:49:59] <austincheney> so 10000000 === 1 and 00010000 === 8 ?
[00:50:03] <sheetjs> actually wait
[00:50:16] <sheetjs> what exactly is connection close in context?
[00:50:32] <sheetjs> maybe it should be 0x11 or 0x21
[00:51:09] <austincheney> close opcode is 8.  the close message doesn't matter because if you fail to supply a close code it defaults to 1005
[00:51:37] <sheetjs> so test with lines 70:72 using those values (0x11 for text 0x21 for binary)
[00:51:46] <austincheney> ok
[00:56:21] <austincheney> upon further examination I was probably not actually testing messages less than 126 bytes.  that is really tiny.  I am trying to find a way to force it.
[00:57:10] *** Quits: Nimzowitsch (~nimzo@user/nimzowitsch) (Remote host closed the connection)
[00:57:34] *** Quits: patchie (~patchie@136.228.209.51) (Quit: Client closed)
[00:57:47] *** Quits: rvgate (~rvgate@80-61-80-213.fixed.kpn.net) (Changing host)
[00:57:47] *** Joins: rvgate (~rvgate@user/rvgate)
[00:58:25] <sheetjs> generally speaking, it's easiest to focus on one type of message, get it right, then move on to others
[01:01:29] <austincheney> I was able for force a 22 byte message, but the browser fails to receive it with error: "Invalid frame header"
[01:01:36] <austincheney> true
[01:02:14] <sheetjs> can you see the actual bytes of the message you sent? are they the same from your server and in the browser?
[01:02:33] *** Quits: cart_man (~rynot@cpc100914-uddi26-2-0-cust18.20-3.cable.virginm.net) (Quit: Konversation terminated!)
[01:02:57] *** Quits: yaalon (~yaalon@rrcs-72-131-195-82.sw.biz.rr.com) (Remote host closed the connection)
[01:03:53] <austincheney> I can see the actual bytes on the browser
[01:05:37] <sheetjs> so then try to do the process in reverse, look at the bytes and compare to the spec
[01:05:37] <austincheney> in the case of message: heartbeat-status,hello   data is size 22 and frame[0] = 129 and frame[1] = 44 and because the message is less than 126 bytes unmasked those two bytes are the entire header.
[01:06:10] *** Joins: trevors (~trevors@c-65-96-171-157.hsd1.ma.comcast.net)
[01:06:20] <sheetjs> frame[0] looks wrong
[01:06:30] <sheetjs> did you make the change from earlier?
[01:07:00] <austincheney> no, I just noticed it.  I will make that change.
[01:07:20] *** Joins: stenno (~stenno@user/stenno)
[01:09:37] <austincheney> why 0x91 instead of just 1 for opcode?
[01:09:46] *** Joins: yaalon (~yaalon@rrcs-72-131-195-82.sw.biz.rr.com)
[01:10:20] <sheetjs> look at the table again
[01:11:23] <sheetjs> frame[0] = (FIN & 0x01) | ((RSV1 & 0x01) << 1) | ((RSV2 & 0x01) << 2) | ((RSV3 & 0x01) << 3) | ((OPCODE & 0x0F) << 4)
[01:11:55] *** Quits: stenno (~stenno@user/stenno) (Ping timeout: 252 seconds)
[01:11:58] <sheetjs> frame[1] = (MASK & 0x01) | ((PAYLOAD_LEN & 0x7F) << 1)
[01:12:10] *** Joins: bomb_ (~bomb@user/bomb)
[01:12:15] <sheetjs> where PAYLOAD_LEN is that calculation which could be 126 or 127 based on the length
[01:12:33] <austincheney> i am adding these now
[01:12:47] <sheetjs> that's how you are to interpret the table
[01:12:57] <sheetjs> the first 8 bits are laid out as described
[01:13:27] *** Joins: Newbie (~Newbie@108.61.176.5)
[01:14:06] <sheetjs> it should be 0x11 for text / 0x21 for binary
[01:14:24] <sheetjs> the former is opcode 1 (text frame) and the latter is opcode 2 (binary)
[01:15:15] *** Quits: bomb (~bomb@user/bomb) (Ping timeout: 276 seconds)
[01:15:56] <austincheney> if I always need the mask to be off could I just specify:  frame[1] = (PAYLOAD_LEN & 0x7F) << 1;
[01:16:07] <sheetjs> yeah
[01:16:54] <sheetjs> it was just written explicitly to show how each value in the table corresponds to a value in the header
[01:17:14] <sheetjs> since this came up a few days ago
[01:17:29] <sheetjs> https://docs.microsoft.com/en-us/openspecs/office_file_formats/ms-xls/ccbd73f9-ff1d-4069-be31-13d16c074ec4
[01:17:32] *** Joins: soetz (~soetz@2a01:cb14:ab4:6700:c97c:6e38:cb98:8ef0)
[01:17:38] <sheetjs> https://github.com/SheetJS/sheetjs/commit/a4ee0ef05a65f29c2caa96c7bc1ba5c5316a3dfe#diff-8080aec7e6656acc40d02101bf9203b85df1a355b7da0442cfd72e8cb29f7735
[01:17:57] <sheetjs> so here i wanted to grab fields E (fRowSumsBelow) and F (fColSumsRight)
[01:18:17] <sheetjs> looking at the layout, it would be bits 6 and 7 respectively, each 1 bit wide
[01:18:41] <sheetjs> so E would be flags & 0x40 while F would be flags & 0x80
[01:19:05] <sheetjs> normally you'd shift it right by 6/7 bits respectively but the code just needed to test on/off so no need to shift
[01:19:34] *** Quits: wroathe (~wroathe@user/wroathe) (Ping timeout: 252 seconds)
[01:19:37] *** Quits: nomic (~nomic@2a00:23c6:9902:2401:c035:9225:35dc:ef3e) (Ping timeout: 252 seconds)
[01:20:35] *** Quits: yaalon (~yaalon@rrcs-72-131-195-82.sw.biz.rr.com) (Remote host closed the connection)
[01:20:52] *** Joins: sam_1 (~sam_1@87.51.251.118)
[01:22:24] *** Quits: bomb_ (~bomb@user/bomb) (Ping timeout: 276 seconds)
[01:23:00] *** Joins: nomic (~nomic@185.217.117.173)
[01:25:56] *** Quits: nomic (~nomic@185.217.117.173) (Client Quit)
[01:27:09] *** Quits: Newbie (~Newbie@108.61.176.5) (K-Lined)
[01:27:44] <austincheney> how should I read the nomenclature of 0xXX?  I understand that each X is a hex and so the value is 16 bit, but I don't understand how that corresponds to the diagram
[01:28:43] *** Quits: sam_1 (~sam_1@87.51.251.118) (Ping timeout: 265 seconds)
[01:28:54] <sheetjs> 0xHH is 8 bits wide
[01:28:59] *** Joins: Tob1 (~Newbie@62-210-99-213.rev.poneytelecom.eu)
[01:29:06] <sheetjs> 0xH is 4 bits wide
[01:29:08] <sheetjs> 0-15
[01:29:10] <austincheney> oh
[01:29:21] <sheetjs> 0xHH is 8 bits (0 - 255)
[01:29:34] <sheetjs> 0xHHHH is 16 bits (0 - 65535)
[01:29:40] <austincheney> I just have to learn to think in hex instead of dec
[01:30:38] <sheetjs> hex literals and bitwise ops are part of the language, but you don't use it in most JS projects
[01:31:58] *** Quits: i0e (~is0ke3@user/is0ke3) (Quit: WeeChat 3.3)
[01:33:11] *** Quits: trevors (~trevors@c-65-96-171-157.hsd1.ma.comcast.net) (Quit: My MacBook has gone to sleep. ZZZzzz…)
[01:33:56] *** Joins: bomb_ (~bomb@user/bomb)
[01:33:58] *** bomb_ is now known as bomb
[01:34:24] *** Joins: yaalon (~yaalon@rrcs-72-131-195-82.sw.biz.rr.com)
[01:34:36] *** Joins: wroathe (~wroathe@96-88-30-181-static.hfc.comcastbusiness.net)
[01:34:37] *** Quits: wroathe (~wroathe@96-88-30-181-static.hfc.comcastbusiness.net) (Changing host)
[01:34:37] *** Joins: wroathe (~wroathe@user/wroathe)
[01:35:53] *** Quits: Tob1 (~Newbie@62-210-99-213.rev.poneytelecom.eu) (Quit: - nbs-irc 2.39 - www.nbs-irc.net -)
[01:36:20] *** Joins: trevors (~trevors@c-65-96-171-157.hsd1.ma.comcast.net)
[01:36:45] *** Joins: zeromule (~eric@2601:602:8d80:4e50:989c:b980:7a01:58f0)
[01:37:49] *** Joins: Guest90 (~Guest90@62-210-99-213.rev.poneytelecom.eu)
[01:38:04] *** Joins: Tob1 (~Newbie@62-210-99-213.rev.poneytelecom.eu)
[01:38:15] <austincheney> so if (data[0] & 0x02) returns the bit for the RSV1 value (which spans a single bit) then would (data[1] & 0x02) return the LEN even though the LEN spans 7 bits of the second byte?
[01:38:50] <sheetjs> no it would give you the low bit from LEN
[01:38:56] *** Quits: wroathe (~wroathe@user/wroathe) (Ping timeout: 252 seconds)
[01:39:28] <austincheney> so I would have to use something like (data[1] << 1)
[01:39:34] <sheetjs> no
[01:39:43] <sheetjs> well lets take it step by step
[01:39:51] <sheetjs> start from
[01:39:56] <sheetjs> data[1] = (MASK & 0x01) | ((PAYLOAD_LEN & 0x7F) << 1)
[01:40:18] <austincheney> k
[01:40:21] <sheetjs> if you shift that value right by 1 bit
[01:40:39] <sheetjs> (data1>>1) == ((MASK & 0x01) | ((PAYLOAD_LEN & 0x7F) << 1))>>1
[01:40:59] *** Joins: wroathe (~wroathe@user/wroathe)
[01:41:23] <sheetjs> these are all values between 0 and 255
[01:41:28] <austincheney> yeah
[01:41:34] <sheetjs> so in this case
[01:41:55] <sheetjs> (x | y) >> 1 == ((x >> 1) | (y >> 1))
[01:42:24] <austincheney> I am going to have to look at that for a while
[01:42:58] *** Quits: vysn (~vysn@user/vysn) (Ping timeout: 260 seconds)
[01:43:08] <sheetjs> this is a rough extension of the following
[01:43:15] <sheetjs> (x + y) / 2 == x / 2 + y / 2
[01:43:55] <austincheney> ok
[01:43:58] *** Quits: Guest90 (~Guest90@62-210-99-213.rev.poneytelecom.eu) (K-Lined)
[01:43:59] *** Quits: Tob1 (~Newbie@62-210-99-213.rev.poneytelecom.eu) (K-Lined)
[01:44:10] <austincheney> I am copying this into a comment so that I can review it later
[01:44:46] *** Quits: yaalon (~yaalon@rrcs-72-131-195-82.sw.biz.rr.com) (Remote host closed the connection)
[01:44:49] <sheetjs> (data1>>1) == ((MASK & 0x01) | ((PAYLOAD_LEN & 0x7F) << 1))>>1
[01:45:05] <sheetjs> so applying that principle with x = (MASK & 0x01)  and y = ((PAYLOAD_LEN & 0x7F) << 1)
[01:45:26] <sheetjs> you get (data1>>1) == ((MASK & 0x01) >> 1) | (((PAYLOAD_LEN & 0x7F) << 1)>>1)
[01:46:16] <austincheney> brb, I need to drop a pizza in the over for the kiddos
[01:47:11] *** Joins: vysn (~vysn@user/vysn)
[01:47:54] <wroathe> Don't accidentally drop an oven in the pizza. It's a classic rookie mistake.
[01:48:13] *** Joins: sickdyd (~sickd@120.51.82.69.ap.gmobb-fix.jp)
[01:51:56] *** Joins: yaalon (~yaalon@rrcs-72-131-195-82.sw.biz.rr.com)
[01:53:14] *** Quits: sickdyd (~sickd@120.51.82.69.ap.gmobb-fix.jp) (Ping timeout: 252 seconds)
[01:55:36] <sheetjs> are there any timezones that have second or sub-second level offsets today ?
[01:55:40] *** Quits: Gustavo6046 (~Gustavo60@user/gustavo6046) (Ping timeout: 240 seconds)
[01:56:02] *** Joins: Gustavo6046 (~Gustavo60@user/gustavo6046)
[01:56:27] <sheetjs> Asia/Kolkata is +5:30 but it has whole minutes
[01:57:37] *** Joins: nomic (~nomic@185.192.69.180)
[01:58:00] *** Joins: mattf (~mattf@li908-138.members.linode.com)
[01:58:16] <sheetjs> Australia/Eucla is is +8:45 but it has whole minutes
[01:58:42] *** Quits: mogad0n (~mogad0n@user/mogad0n) (Quit: mogad0n)
[01:59:25] <austincheney> i dont think so
[01:59:45] *** Quits: systemdlete (~systemdle@c-73-116-45-116.hsd1.ca.comcast.net) (Quit: Left)
[01:59:46] <austincheney> I remember that india is 10.5 hours ahead of CST
[01:59:54] <sheetjs> yeah that's Asia/Kolkata
[02:00:01] <sheetjs> "IST" indian standard time
[02:00:03] <austincheney> and afghanistan is something like 9.5 hours ahead
[02:00:40] <austincheney> timezones are so confusing.  I think the world would be a better place if there were just a single global time zone.  India and China really got this one right.
[02:00:45] *** Quits: trevors (~trevors@c-65-96-171-157.hsd1.ma.comcast.net) (Quit: My MacBook has gone to sleep. ZZZzzz…)
[02:01:51] <sheetjs> what's best for the computer is not necessarily best for the human
[02:01:59] <sheetjs> and vice versa
[02:02:33] <sheetjs> one of the ideas behind timezones etc is to make certain descriptors like "midnight" feel the same across the globe
[02:04:01] <sheetjs> concerns about days of light/darkness aside, it is generally the case that the earth's rotation positions places away from the sun at 0:00 local time
[02:04:33] <sheetjs> and at 12:00 local time the sun is visible
[02:06:22] <sheetjs> Excel's biggest problem with dates and times is the lack of timezone metadata, and that spills into LibreOffice as well
[02:13:29] *** Quits: Guest2222 (birkoff@birkoff.thunderirc.net) (Quit: ZNC 1.8.2 - https://znc.in)
[02:13:57] <c4017w> how can I simulate a keypress on an `input`? I tried to dispatchEvent(new KeyboardEvent('keydown', {key: 'a'})) as well as 'keyup' but it does not trigger any events on the input
[02:16:00] *** Quits: onizu (uid373383@id-373383.uxbridge.irccloud.com) (Quit: Connection closed for inactivity)
[02:19:11] *** Quits: mannequin (uid453465@id-453465.helmsley.irccloud.com) (Quit: Connection closed for inactivity)
[02:20:19] *** Quits: Gustavo6046 (~Gustavo60@user/gustavo6046) (Quit: ZNC 1.8.2 - https://znc.in)
[02:20:59] *** Joins: Gustavo6046 (~Gustavo60@user/gustavo6046)
[02:24:23] *** Joins: birkoff (birkoff@thunderirc.net)
[02:24:23] *** Quits: birkoff (birkoff@thunderirc.net) (Changing host)
[02:24:23] *** Joins: birkoff (birkoff@user/birkoff)
[02:25:16] *** Quits: vysn (~vysn@user/vysn) (Remote host closed the connection)
[02:25:17] <Svitkona> c4017w, seems to work https://jsfiddle.net/t4Lc62w5/
[02:27:27] <c4017w> Ok, so something with my code. Svitkona, do you know what else is needed for the character to show up in the input (and trigger the 'change' event)?
[02:27:50] <Svitkona> oh, i see what you mean
[02:28:05] <Svitkona> i think you need InputEvent
[02:28:43] *** Joins: Brumaire (~quassel@81-64-14-121.rev.numericable.fr)
[02:29:04] <c4017w> Oh I missed that somehow. I'll try
[02:33:35] <Svitkona> seems to fire the event correctly but it doesn't actually add the text
[02:34:37] *** Quits: irrgit (~irrgit@192.241.175.183) (Remote host closed the connection)
[02:34:43] <sheetjs> https://developer.mozilla.org/en-US/docs/Web/API/KeyboardEvent#example scroll up a little bit
[02:34:56] <sheetjs> Manually firing an event does not generate the default action associated with that event. For example, manually firing a key event does not cause that letter to appear in a focused text input. In the case of UI events, this is important for security reasons, as it prevents scripts from simulating user actions that interact with the browser itself.
[02:35:38] <c4017w> ah that makes sense
[02:36:01] *** Quits: wroathe (~wroathe@user/wroathe) (Ping timeout: 252 seconds)
[02:36:19] <c4017w> Ok, feels like it was a hacky solution anyway. I'll do this a different way
[02:36:23] *** Quits: bomb (~bomb@user/bomb) (Quit: ‏‏‎ ‎)
[02:36:57] <sheetjs> modify the value
[02:38:53] *** Quits: Brumaire (~quassel@81-64-14-121.rev.numericable.fr) (Ping timeout: 252 seconds)
[02:39:13] *** Quits: sheetjs (~sheetjs@user/sheetjs) (Quit: Leaving...)
[02:39:40] *** Quits: Gustavo6046 (~Gustavo60@user/gustavo6046) (Ping timeout: 240 seconds)
[02:41:09] *** Joins: terrorjack (~terrorjac@ec2-35-181-134-114.eu-west-3.compute.amazonaws.com)
[02:43:21] *** Joins: Gustavo6046 (~Gustavo60@user/gustavo6046)
[02:44:00] *** Joins: irrgit (~irrgit@192.241.175.183)
[02:47:05] *** Joins: pizdets (~pizdets@183.182.110.56)
[02:50:27] *** Quits: hassoon (hassoon@user/hassoon) (Read error: Connection reset by peer)
[02:51:10] *** Joins: wroathe (~wroathe@c-68-54-25-135.hsd1.mn.comcast.net)
[02:51:11] *** Quits: wroathe (~wroathe@c-68-54-25-135.hsd1.mn.comcast.net) (Changing host)
[02:51:11] *** Joins: wroathe (~wroathe@user/wroathe)
[02:52:30] *** Quits: xb0o2 (~xb0o2@user/xb0o2) (Quit: Lost terminal)
[02:55:15] *** Quits: Gustavo6046 (~Gustavo60@user/gustavo6046) (Quit: ZNC 1.8.2 - https://znc.in)
[02:55:36] *** Joins: stenno (~stenno@user/stenno)
[02:55:38] *** Joins: Gustavo6046 (~Gustavo60@user/gustavo6046)
[02:59:58] *** Quits: stenno (~stenno@user/stenno) (Ping timeout: 260 seconds)
[03:01:29] *** Quits: cthulchu_ (~Cthulchu@193.194.107.250) (Read error: Connection reset by peer)
[03:01:32] *** Joins: cth (~Cthulchu@193.194.107.250)
[03:04:54] *** Quits: keypusher (keypusher@user/keypusher) (Ping timeout: 265 seconds)
[03:09:58] *** Joins: masber (~masber@213.55.224.30)
[03:10:25] *** Parts: fdauihfu (~irado@177.12.221.62) ()
[03:11:11] *** Joins: sheetjs (~sheetjs@user/sheetjs)
[03:12:21] *** Joins: keypusher (keypusher@user/keypusher)
[03:12:34] *** Quits: soetz (~soetz@2a01:cb14:ab4:6700:c97c:6e38:cb98:8ef0) (Quit: Client closed)
[03:12:58] *** Quits: kmh (~kmh@p200300df5f04ef0001b8ec8105a9b237.dip0.t-ipconnect.de) (Quit: Leaving)
[03:16:55] *** Joins: kmh (~kmh@p200300df5f04ef00e9e24169dc5a56fc.dip0.t-ipconnect.de)
[03:20:40] *** Quits: Gustavo6046 (~Gustavo60@user/gustavo6046) (Remote host closed the connection)
[03:21:23] *** Joins: Gustavo6046 (~Gustavo60@user/gustavo6046)
[03:21:28] *** Joins: jazzy (~jaziz@2600:380:8426:9919:5895:c92b:8b8c:8b81)
[03:22:05] *** Quits: Bishop_Bautista (~Bishop_Ba@174-087-246-009.res.spectrum.com) (Quit: My iMac has gone to sleep. ZZZzzz…)
[03:23:22] *** Quits: kmh (~kmh@p200300df5f04ef00e9e24169dc5a56fc.dip0.t-ipconnect.de) (Remote host closed the connection)
[03:23:33] *** Joins: kmh (~kmh@p200300df5f04ef00e9e24169dc5a56fc.dip0.t-ipconnect.de)
[03:23:49] <KDev> earendel, thank you for explaining all that. so 3/10 is the same as 0.3, just that it rounds?
[03:23:52] *** night_wulfe_ is now known as night_wulfe
[03:24:26] *** Joins: WishBoy (~WishBoy@user/wishboy)
[03:25:17] *** Joins: sam_1 (~sam_1@87.51.251.118)
[03:29:49] *** Quits: sam_1 (~sam_1@87.51.251.118) (Ping timeout: 250 seconds)
[03:30:43] *** Joins: xsperry (~as@user/xsperry)
[03:31:36] *** Quits: nomic (~nomic@185.192.69.180) (Quit: Leaving)
[03:32:19] *** Quits: rewrit3 (~rewrit3@user/rewrit3) (Read error: Connection reset by peer)
[03:32:58] <wroathe> KDev: If you're asking about floating point numbers, 3/10 can't be represented exactly by an IEEE-754 floating point number
[03:33:07] *** Joins: nomic (~nomic@2a00:23c6:9902:2401:dca3:d542:e5e:5df)
[03:33:36] *** Quits: yaalon (~yaalon@rrcs-72-131-195-82.sw.biz.rr.com) (Remote host closed the connection)
[03:33:56] <KDev> yeah I know, its 0.300000011920928955078125
[03:34:30] <KDev> what I'm wondering is why 0.1 + 0.2 shows 0.300000011920928955078125 (which I now know is because its actually 0.100000001490116119384765625 + 0.20000000298023223876953125)
[03:34:43] <KDev> but 3/10 shows 0.3, which is still 0.300000011920928955078125 but why does it shorten it?
[03:34:49] <KDev> while 0.1 + 0.2 does not?
[03:34:55] *** Quits: ArchNoob (~maotora@user/archnoob) (Ping timeout: 252 seconds)
[03:35:46] <wroathe> KDev: Depends on how it's formatted by whatever printer you're using.
[03:36:37] <sheetjs> n> 3/10
[03:36:38] <jellobot> (okay) 0.3
[03:36:51] <sheetjs> n> (3/10).toPrecision(20)
[03:36:52] <jellobot> (okay) '0.29999999999999998890'
[03:37:03] <sheetjs> n> (0.1 + 0.2).toPrecision(20)
[03:37:03] <jellobot> (okay) '0.30000000000000004441'
[03:37:40] <wroathe> ^ I was being lazy and didn't feel like looking up the JS api for that :P
[03:37:46] *** Quits: Crash1hd (~Crash1hd@64.56.153.179) (Ping timeout: 265 seconds)
[03:37:57] <sheetjs> excel is fun
[03:37:59] <wroathe> Also watching PBS Newshour and trying to catch up on the news of the day
[03:38:07] <sheetjs> try setting A1 = 0.3 and A2 = 0.1 + 0.2
[03:38:42] *** Quits: banana_ (~banana_@user/banana/x-2944094) (Ping timeout: 260 seconds)
[03:38:50] <sheetjs> then set the number format to fraction with up to 1 digit
[03:39:34] *** Quits: mat001 (~mat001@c-73-223-64-126.hsd1.ca.comcast.net) (Remote host closed the connection)
[03:40:05] *** Quits: masber (~masber@213.55.224.30) (Quit: Client closed)
[03:40:32] *** Joins: mat001 (~mat001@c-73-223-64-126.hsd1.ca.comcast.net)
[03:45:09] *** Joins: trevors (~trevors@c-65-96-171-157.hsd1.ma.comcast.net)
[03:45:10] *** Joins: sickdyd (~sickd@120.51.82.69.ap.gmobb-fix.jp)
[03:46:26] *** Joins: stkrdknmibalz (~test@rrcs-75-87-43-226.sw.biz.rr.com)
[03:46:54] *** Quits: nomic (~nomic@2a00:23c6:9902:2401:dca3:d542:e5e:5df) (Quit: Leaving)
[03:50:47] *** Joins: banana_ (~banana_@user/banana/x-2944094)
[03:55:54] *** Joins: pkx (~pkx@user/pkx)
[04:00:10] *** Quits: zeromule (~eric@2601:602:8d80:4e50:989c:b980:7a01:58f0) (Ping timeout: 260 seconds)
[04:07:40] *** Joins: nomic (~nomic@185.217.117.173)
[04:08:09] *** Joins: ferdna (~ferdna@user/ferdna)
[04:09:12] *** Joins: comatory (~ondrejsyn@217.11.241.69)
[04:09:35] *** Joins: yaalon (~yaalon@rrcs-72-131-195-82.sw.biz.rr.com)
[04:10:26] *** Joins: systemdlete2 (~systemdle@c-73-116-45-116.hsd1.ca.comcast.net)
[04:11:23] *** Quits: Tobbi (~Tobbi@2a02:8108:1240:48ec:3cc8:7782:84b5:af74) (Quit: My MacBook has gone to sleep. ZZZzzz…)
[04:12:26] <KDev> A1, A2?
[04:12:44] <wroathe> KDev: sheetjs thinks in spreadsheet
[04:12:51] <KDev> ahh
[04:13:34] <KDev> I need an article or something tbh. Gonna try to re-read the floating point numbers
[04:14:01] *** Quits: comatory (~ondrejsyn@217.11.241.69) (Ping timeout: 265 seconds)
[04:14:24] <wroathe> KDev: If you just want a general overview of how they work I recommend the chapter on machine representation in Computer Systems: A Programmer's Perspective
[04:17:42] *** Quits: nomic (~nomic@185.217.117.173) (Remote host closed the connection)
[04:20:38] *** Quits: sheetjs (~sheetjs@user/sheetjs) (Remote host closed the connection)
[04:22:38] *** Joins: stenno (~stenno@user/stenno)
[04:24:07] *** Joins: nomic (~nomic@2a00:23c6:9902:2401:2c67:53a3:7c94:c580)
[04:26:46] *** Quits: banana_ (~banana_@user/banana/x-2944094) (Ping timeout: 260 seconds)
[04:30:27] *** Quits: cth (~Cthulchu@193.194.107.250) (Ping timeout: 265 seconds)
[04:39:44] *** Joins: gggpkm (~gggpkm@111-251-148-94.dynamic-ip.hinet.net)
[04:40:41] *** Joins: sheetjs (~sheetjs@user/sheetjs)
[04:43:07] *** Quits: yaalon (~yaalon@rrcs-72-131-195-82.sw.biz.rr.com) (Remote host closed the connection)
[04:44:40] *** Joins: prime (~prime@173.213.88.248)
[04:44:51] *** Joins: yaalon (~yaalon@rrcs-72-131-195-82.sw.biz.rr.com)
[04:45:00] <sheetjs> there's a famous doc about floating point
[04:45:14] <sheetjs> https://docs.oracle.com/cd/E19957-01/806-3568/ncg_goldberg.html
[04:49:11] *** Joins: ___nick___ (~quassel@cpc68286-cdif17-2-0-cust533.5-1.cable.virginm.net)
[04:49:48] *** Joins: kmh_ (~kmh@p200300df5f32ed00e9e24169dc5a56fc.dip0.t-ipconnect.de)
[04:51:55] *** Quits: kmh (~kmh@p200300df5f04ef00e9e24169dc5a56fc.dip0.t-ipconnect.de) (Ping timeout: 252 seconds)
[05:00:28] *** Quits: sheetjs (~sheetjs@user/sheetjs) (Remote host closed the connection)
[05:02:34] *** Joins: greta (uid516789@id-516789.lymington.irccloud.com)
[05:08:35] *** Quits: nomic (~nomic@2a00:23c6:9902:2401:2c67:53a3:7c94:c580) (Quit: Leaving)
[05:08:59] *** Joins: nomic (~nomic@2a00:23c6:9902:2401:2c67:53a3:7c94:c580)
[05:11:52] *** Quits: prime (~prime@173.213.88.248) (Quit: and then my friend you die)
[05:13:52] *** Quits: keypusher (keypusher@user/keypusher) (Ping timeout: 252 seconds)
[05:16:34] *** Joins: keypusher (keypusher@user/keypusher)
[05:16:45] *** Joins: banana_ (~banana_@user/banana/x-2944094)
[05:25:58] *** Joins: sam_1 (~sam_1@87.51.251.118)
[05:28:35] *** Joins: onr (~onr@user/onr)
[05:30:17] *** Quits: sam_1 (~sam_1@87.51.251.118) (Ping timeout: 250 seconds)
[05:33:21] *** Quits: Naan (~naan@user/naan) (Quit: Leaving)
[05:34:26] *** Joins: sed (~sed@pool-100-7-38-116.rcmdva.fios.verizon.net)
[05:35:15] <earendel> n> var arr=new Float64Array(1); arr[0]=3/10; var b=Buffer.from(arr.buffer); [...b].map(x=>x.toString(2).padStart(8,"0")) // is this the actual representation of the number in binary?
[05:35:16] <jellobot> (okay) [ '00110011', '00110011', '00110011', '00110011', '00110011', '00110011', '11010011', '00111111' ]
[05:36:09] *** Quits: WishBoy (~WishBoy@user/wishboy) ()
[05:38:34] *** Quits: ckdCreations (~ckdCreati@147.55.133.129) (Read error: Connection reset by peer)
[05:38:50] *** Joins: ckdCreations (~ckdCreati@c-24-17-50-149.hsd1.wa.comcast.net)
[05:39:42] <earendel> n> var arr=new Float64Array(1); arr[0]=(0.1+0.2); var b=Buffer.from(arr.buffer); [...b].map(x=>x.toString(2).padStart(8,"0")) // there is a differnce in the result. tho i still cannot exactly determine the way it emerges. my guess is operations with integers are more precise, even resulting in floats. but can't tell exactly why yet. tcsc would know
[05:39:43] <jellobot> (okay) [ '00110100', '00110011', '00110011', '00110011', '00110011', '00110011', '11010011', '00111111' ]
[05:39:54] <tcsc> hm?
[05:40:02] <earendel> hi. :)
[05:40:05] <tcsc> hi
[05:40:42] <earendel> first of all. is that above the binary representation of floats? not sure i done this right. tcsc.
[05:40:50] <tcsc> looks about right
[05:41:36] <earendel> cool. we were wondering how exactly (or close to) 3/10 is differerent than 0.1+0.2
[05:41:51] <tcsc> it's off by 1 ulp
[05:42:04] <tcsc> basically it rounds once, in the wrong direction
[05:42:27] <tcsc> or, something like that anyway
[05:42:49] <tcsc> i think a more accurate way of putting it is that the closest floats to 0.1 and 0.2 dont sum to the closest float to 0.3
[05:43:32] <earendel> hm. ok. it's not some maigc optimization for multiplications with 10^x ?
[05:43:35] <tcsc> no
[05:44:18] <earendel> is the result of an operation with 2 integers eventually more precise?
[05:44:18] <tcsc> decimal floats special case 10, binary floats special case 2. decimal floats are slightly more intuitive, but less precise because 10 is bigger than 2, meaning the difference between two neighboring floats is larger
[05:44:26] <tcsc> what operation?
[05:44:31] <tcsc> oh
[05:44:37] <tcsc> integers are fully precise in floating point
[05:44:39] <tcsc> well
[05:44:46] <tcsc> until you run out of precision anyway.
[05:44:52] <earendel> as each operand would have an error, they could add?
[05:44:57] <earendel> like that.
[05:45:33] <tcsc> i don't fully understand what you mean, but if you're working with integers and doing addition or subtraction or multiplication, if you stay within 53 bits (less than Number.MAX_SAFE_INTEGER) it will be precise
[05:45:38] <tcsc> division obviously can round
[05:45:48] <tcsc> modulo should be fine too
[05:45:56] <tcsc> err, remainder
[05:45:56] <earendel> ok. cool. and else. glad you're still around. best greetings.
[05:46:00] <earendel> oki.
[05:46:15] <tcsc> yeah i made the transition to this server. even though i dont talk here i occasionally read some backlog
[05:46:20] *** Joins: Rockwood (~Rocky@user/rocky)
[05:46:21] <tcsc> very rarely thouhg
[05:46:26] <tcsc> i write rust almost exclusively now
[05:46:50] <tcsc> although i was doing gamedev for a while, and used js (via quickjs) as a scripting language in the game engine. worked well, modulo some bugs in that engine
[05:47:06] <earendel> nice. still for mozilla?
[05:47:10] <earendel> as well?
[05:47:16] <tcsc> no, i was part of the big layoffs like a year ago
[05:47:36] <tcsc> it was solo stuff, and now i'm working for a security startup (https://www.ockam.io/)
[05:50:13] *** Joins: sam_1 (~sam_1@87.51.251.118)
[05:54:27] *** Quits: sam_1 (~sam_1@87.51.251.118) (Ping timeout: 240 seconds)
[05:54:48] *** Joins: mat001_ (~mat001@c-73-223-64-126.hsd1.ca.comcast.net)
[05:56:23] *** Joins: leduyquang753 (~leduyquan@user/leduyquang753)
[05:57:59] *** Quits: mat001 (~mat001@c-73-223-64-126.hsd1.ca.comcast.net) (Ping timeout: 252 seconds)
[05:58:26] *** Quits: yaalon (~yaalon@rrcs-72-131-195-82.sw.biz.rr.com) (Remote host closed the connection)
[05:58:38] *** Joins: yaalon (~yaalon@rrcs-72-131-195-82.sw.biz.rr.com)
[06:01:56] *** Quits: pluri (~pluri@user/pluri) (Quit: My MacBook has gone to sleep. ZZZzzz…)
[06:02:32] *** Joins: pluri (~pluri@user/pluri)
[06:02:46] <tcsc> anyway, just to be clear: the way it works is that the result is the closest representable float to the infinitely precise result. in the case of 0.1 + 0.2 == 0.3, <closest float to 0.1> + <closest float to 0.2> doesnt happen to be closest to <closest float to 0.3>
[06:02:47] <tcsc> however
[06:03:26] <tcsc> for 1.0 + 2.0 == 3.0, the closest float to 1.0 is 1.0, the closest float to 2.0 is 2.0, and so the infinitely precise result is 3.0, which is the same as the closest float to 3.0
[06:03:34] <tcsc> so thats why integer operations work
[06:03:46] <tcsc> hope that clears it up a little
[06:04:16] *** Joins: Crash1hd (~Crash1hd@s0106a84e3f475583.cg.shawcable.net)
[06:04:17] <tcsc> also, not to promote piracy, but the ieee754-2019 spec is available on scihub, if you feel like living on the edge.
[06:04:30] <tcsc> its fairly readable
[06:07:06] *** Quits: yaalon (~yaalon@rrcs-72-131-195-82.sw.biz.rr.com) (Remote host closed the connection)
[06:11:23] <tcsc> (and in truth, i find the focus on 0.1+0.2 != 0.3 annoying — yes, it's bad optics that this is that way, and everybody has an opinion and often they come up with a solution which i far-worse-than the problem... but as soon as it's "what should the correctly rounded result of 0.123423*0.5432-45.222948+0.1532 be" nobody has a clue. which i guess is fair, but also frustrating)
[06:12:06] <tcsc> (anyway, floats are actually good, thats all. they're not perfect, but it's remarkably difficult to do better than them in the same problem sapce)
[06:13:49] *** Joins: Guest65 (~Guest65@p200300c8cf120f0005b7136424d736de.dip0.t-ipconnect.de)
[06:18:40] *** Quits: zebrag (~chris@user/zebrag) (Remote host closed the connection)
[06:18:58] <KDev> tscs where did you learn all this haha
[06:19:02] <earendel> thanks for the hints. actually (0.1*10 +0.2*10)/10 is exactly 3/10 again.
[06:19:16] <KDev> gonna read all this in a bit
[06:19:20] <KDev> seems advanced
[06:19:33] <ezzieyguywuf> is there a place on irc or discord to discuss npm development?
[06:19:34] *** Joins: Gege (~Gege@user/gege)
[06:19:56] <earendel> n> var arr=new Float64Array(1); arr[0]=(0.1); var b=Buffer.from(arr.buffer); [...b].map(x=>x.toString(2).padStart(8,"0"))
[06:19:57] <jellobot> (okay) [ '10011010', '10011001', '10011001', '10011001', '10011001', '10011001', '10111001', '00111111' ]
[06:20:09] <earendel> n> var arr=new Float64Array(1); arr[0]=(0.1*10); var b=Buffer.from(arr.buffer); [...b].map(x=>x.toString(2).padStart(8,"0"))
[06:20:10] <jellobot> (okay) [ '00000000', '00000000', '00000000', '00000000', '00000000', '00000000', '11110000', '00111111' ]
[06:20:59] <earendel> it seems to be clever enough to get rid of the failure. hmhm.
[06:25:24] <ljharb> tcsc: wow, been awhile
[06:25:34] <tcsc> lol yeah
[06:25:37] <ljharb> ezzieyguywuf: #node.js is the best you'll get on irc
[06:26:24] <ezzieyguywuf> ljharb: k
[06:26:39] <tcsc> @KDev college, then did gamedev for a while, then worked on firefox for a while, more recently ive been involved with firming up some of Rusts story around floats, and have read ieee754 several times through
[06:26:59] *** Joins: yaalon (~yaalon@rrcs-72-131-195-82.sw.biz.rr.com)
[06:27:02] <ezzieyguywuf> rust is dope af
[06:27:32] <tcsc> its a good language yeah. integrates nicely with js too.
[06:27:43] <tcsc> via wasm
[06:29:06] *** Quits: Guest65 (~Guest65@p200300c8cf120f0005b7136424d736de.dip0.t-ipconnect.de) (Quit: Client closed)
[06:29:15] <ezzieyguywuf> haven't tried that yet, just finished reading The Book
[06:29:24] <ezzieyguywuf> been meaning to get into wasm
[06:29:39] <ezzieyguywuf> tcsc: so you write mostly in rust at work? y'all hiring?!
[06:30:32] <tcsc> i do. i think the only position we're really hiring for is an applied cryptographer (pm me if that actually is you), but this-week-in-rust.org pretty much always has job listings in it
[06:31:22] <ezzieyguywuf> I'm super new to rust and still trying to land my first programming job - I'm not fresh out of college, I'm 10 years out, but I have not been doing programming, but rather manufacturing stuff
[06:31:33] <ezzieyguywuf> and nah, I'm not dope at cryptography unfortunately :(
[06:32:04] <ezzieyguywuf> bookmarked that website though
[06:32:18] <tcsc> sure. if you're interested in rust there is work, although in truth its still pretty hard to come by and, well, js is a lot easier for jobs at the moment
[06:33:17] <ezzieyguywuf> yea, I'm learning rust for fun, not for the marketability
[06:33:42] <ezzieyguywuf> it's a really cool language though, I like the parts it took from C++ and haskell and how they all meld together
[06:33:52] <ezzieyguywuf> but yea, that's why I'm learning js due to the job market
[06:34:01] <Rockwood> is rust any kind framework?
[06:34:08] <ezzieyguywuf> Rockwood: it's a programming language.
[06:34:23] <tcsc> for sure. i also really like the parts it took from js, e.g. npm and cargo work very similarly (cargo definitely benefits from seeing what kind of stuff didnt work well, but is still very similar)
[06:34:38] <Rockwood> ezzieyguywuf, is it like JS?
[06:34:46] <tcsc> not really at all
[06:34:48] <Rockwood> syntax wise
[06:35:02] <ljharb> most of the people that made rust are/were on TC39
[06:35:10] <ljharb> so i'm sure there's similarities. but i doubt it translates smoothly
[06:35:34] <Rockwood> JS having lots of faces
[06:35:59] <ezzieyguywuf> tcsc: yea, although that could have come from haskell's cabal (which came first?)
[06:36:09] <tcsc> cabal works very differently i think
[06:36:20] *** Quits: trevors (~trevors@c-65-96-171-157.hsd1.ma.comcast.net) (Quit: My MacBook has gone to sleep. ZZZzzz…)
[06:36:41] <tcsc> and there are similarities with js in the design. the dedication to backwards compat is similar, although you can also feel in the design explicitly trying to avoid many of the issues js has
[06:36:42] <ezzieyguywuf> Rockwood: on the one hand - I think most languages are pretty similar with different choices/tradeoffs made between ease-of-use and level-of-control
[06:37:01] <ezzieyguywuf> Rockwood: but like tcsc said they're pretty different syntax-wise. it's closer to c++ in that regard
[06:37:06] <tcsc> rust is much further towards control at the cost of ease of use. it's a fairly hard language to larn
[06:37:23] <tcsc> lots of concepts that arent in other stuff
[06:37:49] <tcsc> like lifetimes and borrowing. and if you havent dealt with low level languages before, ownership and such is very different
[06:37:50] <Rockwood> why lots of others?
[06:38:02] <Rockwood> when JS can do anything
[06:38:07] <ezzieyguywuf> nah cabal is very much in the same vein of npm and cargo
[06:38:35] *** Quits: Crash1hd (~Crash1hd@s0106a84e3f475583.cg.shawcable.net) (Quit: Leaving)
[06:38:41] <tcsc> hm, okay. that wasnt my experience with using it but i havent used it as much as i've used npm or cargo.
[06:39:29] *** Quits: guideX (~guideX@075-142-106-023.res.spectrum.com) (Changing host)
[06:39:29] *** Joins: guideX (~guideX@user/guidex)
[06:39:47] *** Quits: Gege (~Gege@user/gege) (Ping timeout: 252 seconds)
[06:39:55] *** Joins: michigan_ (uid507982@id-507982.ilkley.irccloud.com)
[06:39:58] <ezzieyguywuf> they had a big release semi-recently, like the last year or so, that made things a lot less of a headache
[06:40:01] <tcsc> js can't really do anything, it just can do a lot. in practice you aren't going to write an OS in js, but you could write one in rust. it's that kind of control, e.g. over the processor and the details of how the code is executed that it gives you
[06:40:05] *** Parts: guideX (~guideX@user/guidex) (Leaving)
[06:40:10] <Rockwood> https://play.rust-lang.org/?version=nightly&mode=debug&edition=2021
[06:40:13] <Rockwood> lol
[06:40:32] <ezzieyguywuf> i.e. the feature they used to call 'sandbox' that was sort of a poor mans virtualenv (from python) is now built-in and actually works great (the way npm and cargo will install dependencies in the build dir as needed)
[06:41:33] *** Joins: xiongxin (~quassel@119.123.100.167)
[06:48:14] *** Joins: sheetjs (~sheetjs@user/sheetjs)
[06:48:47] *** Quits: Daniel15 (~daniel@d.sb) (Quit: The Lounge - https://thelounge.chat)
[06:50:34] *** Quits: yaalon (~yaalon@rrcs-72-131-195-82.sw.biz.rr.com) (Remote host closed the connection)
[06:51:49] *** Joins: carlino3 (~carlino3@user/carlino3)
[06:51:59] <carlino3> hi
[06:56:37] *** Joins: Gege (~Gege@115.134.135.90)
[06:56:53] *** Joins: carlino324 (~carlino3@user/carlino3)
[06:56:58] *** Quits: carlino3 (~carlino3@user/carlino3) (Ping timeout: 256 seconds)
[06:57:01] *** Gege is now known as Guest3387
[06:57:05] *** carlino324 is now known as carlino3
[07:00:02] *** Joins: mat001 (~mat001@c-73-223-64-126.hsd1.ca.comcast.net)
[07:00:34] <carlino3> something in my code is causing high CPU usage and i can't realize where it is happening, what is a good way to debug these cases?
[07:01:55] <Rockwood> infinite loops and lots of animation could be cause for that
[07:02:18] *** Quits: ferdna (~ferdna@user/ferdna) (Quit: Leaving)
[07:02:37] <carlino3> yes, that's what i looked for in first place. but no infinite loops found. also, it is not 100% usage but ~40%
[07:02:40] <wroathe> carlino3: If it's long-running there's the "Performance" tab in chrome dev tools. Run it to collect a profile, and you should be able to get an idea of what routines are executing.
[07:02:46] *** Quits: systemdlete2 (~systemdle@c-73-116-45-116.hsd1.ca.comcast.net) (Ping timeout: 252 seconds)
[07:03:17] <Rockwood> carlino3, which browser?
[07:03:19] *** Quits: mat001_ (~mat001@c-73-223-64-126.hsd1.ca.comcast.net) (Ping timeout: 252 seconds)
[07:03:29] *** Joins: systemdlete2 (~systemdle@c-73-116-45-116.hsd1.ca.comcast.net)
[07:03:32] <carlino3> wroathe it is a vue app compiled with webpack, tried the browser debugger but i can't follow my code based on that
[07:03:36] <carlino3> firefox
[07:03:48] <Rockwood> and chrome?
[07:03:59] <carlino3> didn't try
[07:04:04] <Rockwood> try that too
[07:04:08] <wroathe> carlino3: Make sure you're generating sourcemaps
[07:04:16] <carlino3> hmm
[07:04:20] <carlino3> let's see
[07:04:24] <wroathe> carlino3: Otherwise it'll be challenging to map the output of that profile back to your routines.
[07:04:30] <wroathe> Or what you see in that profile, I should say
[07:04:47] <carlino3> yes i think that is the problem, it is not my code what i see but meaningless code generated by webpack
[07:05:26] <Rockwood> ve you tried chrome too?
[07:06:09] <carlino3> no, i don't have chrome right now. downloading it...
[07:06:27] <Rockwood> ok
[07:08:16] *** Quits: systemdlete2 (~systemdle@c-73-116-45-116.hsd1.ca.comcast.net) (Ping timeout: 252 seconds)
[07:10:08] *** Joins: aexijh (~aexijh@bras-vprn-unvlon5573w-lp130-07-174-93-47-157.dsl.bell.ca)
[07:12:07] *** Quits: Guest3387 (~Gege@115.134.135.90) (Ping timeout: 252 seconds)
[07:21:33] *** Joins: systemdlete2 (~systemdle@c-73-116-45-116.hsd1.ca.comcast.net)
[07:21:48] <carlino3> hmm i see that could be related to the hot-reloading feature of development server
[07:21:57] <carlino3> i'll try building a production version
[07:23:22] *** Joins: zeromule (~eric@2601:602:8d80:4e50:989c:b980:7a01:58f0)
[07:29:29] *** Joins: unixlab (unixlab@linuxlab.librient.com)
[07:29:30] <carlino3> production version produces ~5% CPU usage with spikes of ~15% ~30%. is this normal or should i look for a problem?
[07:33:07] *** Quits: z__ (~z_@142-196-189-034.res.spectrum.com) (Quit: Leaving)
[07:38:31] *** Quits: xiongxin (~quassel@119.123.100.167) (Ping timeout: 252 seconds)
[07:38:32] <wroathe> carlino3: Spikes are not normal unless they're expected.
[07:39:07] <wroathe> carlino3: If you're not doing anything on that tab, and there's no periodic events triggering, then it should idle at a consistent load
[07:39:13] *** Joins: xiongxin (~quassel@113.116.32.113)
[07:41:26] <ezzieyguywuf> what is this `return this[_buildDepStep]()`? this seems to be the last line in a function called _buildDepStep, but then that seems recursive to me https://github.com/npm/cli/blob/latest/node_modules/%40npmcli/arborist/lib/arborist/build-ideal-tree.js#L1018
[07:41:48] <ezzieyguywuf> I guess it's intended to be recursive?
[07:41:51] <ezzieyguywuf> yea I guess so
[07:46:42] *** Joins: sumthing1980 (~sumthing1@94.54.64.154)
[07:48:27] <tatiana> i'm learning webpack - i'm trying to establish a build routine. I want 3 directories "my-files", "src" and "dist", "my-files" is same as "src" except that it has my own comments, "src" doesn't get my console.log and certain other comments filtered out by terser. Is this the way to go? If I release something on git, is that the way people do it?
[07:49:56] <wroathe> tatiana: Would the files in my-files be duplicates of the files in src, except for added comments?
[07:50:33] <tatiana> yeah, src has the same files as "my-files" except for my private comments and lines i've put as comments as i'm testing
[07:51:04] <wroathe> tatiana: Well, it's pretty atypical to have another src tree within a project. Especially one with duplicated files.
[07:51:26] <wroathe> tatiana: Generally speaking comments are encouraged and expected to be in the primary source code. No reason to have a separate directory for that.
[07:51:40] <tatiana> as i'm coding, sometimes i want to hold on to code and leave it as comments but don't want it in src
[07:51:43] *** Quits: k162 (~k162@user/k162) (Ping timeout: 252 seconds)
[07:52:36] <wroathe> tatiana: Sure, but then that's just a "docs", or "examples", or "notes" directory, and there's no reason for it to have exact duplicate code as what's in src, and there's no reason for it to have anything to do with webpack
[07:53:10] <wroathe> tatiana: Copying lots of duplicate files within a project is often confusing and misleading for other developers who come on to the project
[07:53:25] *** Joins: k162 (~k162@user/k162)
[07:53:37] *** Quits: grkblood13 (~grkblood1@76.73.249.123) (Read error: Connection reset by peer)
[07:53:48] <tatiana> yeah, that's why i want comments just for me ,  i don't want them to see "my-files" directory, just 'src'
[07:53:57] *** Joins: grkblood13 (~grkblood1@76.73.249.123)
[07:53:59] <wroathe> tatiana: On the webpack side, it's pretty typical to have a src directory that gets mapped to a dist directory for output
[07:54:19] <wroathe> tatiana: Do you use source control?
[07:54:42] <tatiana> git? i'm starting to
[07:55:11] <wroathe> tatiana: Ok. If "my-files" is just your personal notes add it to your .gitignore
[07:55:30] <wroathe> tatiana: That'll make it so git ignores those files when you try to add them to the index before committing
[07:56:29] <tatiana> ok. I was just wondering if it's standard procedure but it seems like it isn't. I have a file my-files/index.js then that same file src/index.js with certain things like certain comments taken out
[07:57:27] <wroathe> No, that's definitely not standard procedure. Of course, there's no rules, but it would be quite jarring to come onto a project where the src directory structure is copied into another arbitrary directory, and all of the files within just have minor modifications or extra commentary.
[07:58:03] <tatiana> no , it goes from 'my-files' to 'src', no one but me sees 'my-files'
[07:58:17] <wroathe> I think most developers would just assume that "my-files" was an accident that the other developer forgot to add to their .gitignore
[07:58:34] <wroathe> Is my-files checked into git?
[07:58:40] <tatiana> no
[07:58:42] *** Quits: Drgonz0 (Drgonz0@107-179-254-222.cpe.teksavvy.com) ()
[07:59:08] <tatiana> no one will see it but me, it's my code then i do a copy to src which is for other people
[07:59:33] <wroathe> Right, then that's fine. Honestly, unless you're going to check it into source control and publish it somewhere it's not even worth asking about
[07:59:46] <wroathe> You can freely have whatever temporary files or directories you want to aid in your development process
[08:00:11] <wroathe> Every developer has their own process and personal preferences for "scratchpad" related stuff
[08:00:14] <tatiana> but u made a good point, rely on version control, i need to think about that
[08:01:38] *** Quits: sumthing1980 (~sumthing1@94.54.64.154) (Quit: Leaving)
[08:02:03] <wroathe> tatiana: If it's not in git, project-wise, it's like it never existed.
[08:02:16] <tatiana> heheh yep
[08:02:21] *** Joins: linguist (~autistic@170.84.57.147)
[08:02:33] <tatiana> the x files
[08:02:57] <wroathe> tatiana: But on the webpack side of your question, yes "src" and "dist" are common choices for the input and output directory names.
[08:03:22] *** Joins: sumthing1980 (~sumthing1@94.54.64.154)
[08:03:34] <tatiana> yeah, my-files is the step before it, my own comments before it goes to other developers with the 'src'
[08:04:00] <wroathe> tatiana: Yup, then stuff like that is not even worth asking about. If it's not something that will ever impact other developers, then whatever
[08:04:16] <tatiana> sure, ok
[08:04:43] *** Quits: Rockwood (~Rocky@user/rocky) (Quit: The Time is Over)
[08:05:15] <tatiana> build procedures are important though
[08:05:28] *** Quits: sumthing1980 (~sumthing1@94.54.64.154) (Client Quit)
[08:05:29] <tatiana> i found out about //* JS doc, that's pretty good
[08:06:34] <tatiana> wroathe: thanks for helping me out, you've helped me before too
[08:07:24] <wroathe> tatiana: Yeah, you're asking two questions here. You're asking what to do about personal note-taking, and you're asking what to do about your build system.
[08:07:46] <wroathe> tatiana: The answer to the first is, "who cares?" and the answer to the second is, "Yes, those are common choices for the input and output directory names"
[08:09:08] <tatiana> if i have 10 lines of code but take it out and replace it with 5 lines, i comment out the 10 lines and have the 5 new lines of code. I don't want to delete the 10 lines for my own eyes but I don't want that to go to 'src'
[08:09:35] <tatiana> i just like to have that 10 lines of code to see what i did before
[08:10:18] <wroathe> tatiana: Yep. What does that have to do with webpack?
[08:10:51] <ljharb> tatiana: i wouldn't suggest keeping your personal files inside the repo tho, even if gitignored - otherwise you could still commit it by accident.
[08:11:52] <ldlework> get a quake-like emacs dropdown window bound to a convienent global keybind, where you can use org-mode :)
[08:12:03] <tatiana> i was just asking if it's common to do this. I'll put it in .gitignore. WHat's it got to do with webpack? don't know yet. I click save, and somehow the files will be copied over to 'src' without those commented lines
[08:12:46] <wroathe> tatiana: Oh, so you're planning on _building_ your src directory from your my-files directory? That's a different story, and also not common
[08:13:02] <ldlework> http://logos.ldlework.com/caps/2021-09-25-04-42-34.mp4
[08:13:07] <wroathe> tatiana: And that raises the question of where you're going to store the webpack configuration to make that first stage of the build happen
[08:14:09] <tatiana> src is a copy of 'my-files' with certain comments stripped out and for no-one else but me
[08:14:29] <wroathe> tatiana: Because it would also be confusing if there was webpack configuration to build files in src from a my-files directory, but that my-files directory wasn't in the source tree anywhere
[08:14:56] <wroathe> tatiana: So you want a two-stage build, then? my-files -> src and src -> dist, where both builds are managed by webpack
[08:15:11] <tatiana> yeah, i think so
[08:15:36] <wroathe> tatiana: What happens if other developers are editing code in the src directory?
[08:15:53] <wroathe> tatiana: And they don't have access to your original my-files directory, or the build configuration to build src from my-files?
[08:16:09] <wroathe> tatiana: Your my-files -> src build would overwrite their changes.
[08:16:37] <tatiana> at the moment i work by myself, so i never thought of that duh
[08:16:59] <tatiana> i'll probably abandon this idea of 'my-files'
[08:17:15] <ljharb> tatiana: it's not common to keep anything uncommitted in the repo directory besides build output
[08:17:15] <tatiana> but don't coders have old code they don't want to get rid of ? i dont know how they manage that
[08:17:23] <ljharb> they put it in a git repo
[08:17:24] <wroathe> tatiana: git
[08:17:30] <wroathe> tatiana: That's the point of git
[08:17:38] <ljharb> there's no excuse for any code not to be in git
[08:17:41] <tatiana> yep , version control , i need it
[08:17:46] <tatiana> ok sure
[08:17:57] <wroathe> tatiana: Git has a whole host of tools to let you query past versions of your source tree and recall old code
[08:18:42] <tatiana> ok, that's what i need
[08:19:29] <wroathe> tatiana: I highly recommend reading the first 3 chapters at least of https://git-scm.com/book/en/v2
[08:20:56] <tatiana> ok, excellent, i'll read it, thanks wroathe, that's another gap in my knowledge , version control
[08:21:48] <wroathe> tatiana: You'd do well to get a strong working knowledge of the basics of version control.
[08:22:10] <ldlework> I recommend chapters 2-7 in ProGit
[08:22:16] <ldlework> great technical writing
[08:22:17] <wroathe> tatiana: It's mandatory for any working software developer
[08:23:06] <wroathe> ldlework: Is there a different "Pro Git"? The book I linked is titled Pro Git.
[08:23:13] <ljharb> tatiana: https://twitter.com/ljharb/status/261888019454386176
[08:23:24] <ldlework> wroathe: that's the one, didn't see your message
[08:23:29] <ljharb> tatiana: and https://t.co/bBhqjvhdbU?amp=1 is the last link
[08:25:19] <tatiana> ljharb, wroathe - thanks, this is what i needed, instead of the way i was thinking of working
[08:25:25] <tatiana> thanks guys
[08:26:20] <wroathe> ldlework: wtf is ##apocalypse?
[08:26:33] <wroathe> ldlework: And why does it have so many users?
[08:28:52] *** Quits: night_wulfe (~wulfe@cpe-174-103-156-213.cinci.res.rr.com) (Read error: Connection reset by peer)
[08:31:47] *** Quits: nomic (~nomic@2a00:23c6:9902:2401:2c67:53a3:7c94:c580) (Quit: Leaving)
[08:32:27] *** Joins: night_wulfe (~wulfe@cpe-174-103-156-213.cinci.res.rr.com)
[08:34:00] *** Joins: xon (~xon@host-192-net-65-160-119.mobilinkinfinity.net.pk)
[08:37:58] *** Quits: zeromule (~eric@2601:602:8d80:4e50:989c:b980:7a01:58f0) (Ping timeout: 252 seconds)
[08:38:24] *** Quits: KDev (~KDev@cpe-98-10-64-75.rochester.res.rr.com) (Ping timeout: 265 seconds)
[08:38:28] *** Quits: xon (~xon@host-192-net-65-160-119.mobilinkinfinity.net.pk) (Ping timeout: 252 seconds)
[08:47:35] *** Quits: sed (~sed@pool-100-7-38-116.rcmdva.fios.verizon.net) (Ping timeout: 265 seconds)
[08:50:12] *** Joins: mei (~mei@user/mei)
[08:51:01] *** Parts: theskillwithin (~theskillw@user/theskillwithin) (Textual IRC Client: www.textualapp.com)
[08:51:14] *** Joins: theskillwithin (~theskillw@user/theskillwithin)
[08:54:38] *** Quits: jazzy (~jaziz@2600:380:8426:9919:5895:c92b:8b8c:8b81) (Ping timeout: 260 seconds)
[09:02:06] *** Quits: banana_ (~banana_@user/banana/x-2944094) (Ping timeout: 260 seconds)
[09:03:41] *** Quits: unixlab (unixlab@linuxlab.librient.com) (Quit: ZNC - https://znc.in)
[09:03:56] <theskillwithin> https://developers.google.com/search/blog/2021/08/update-to-generating-page-titles
[09:07:23] *** Joins: domhnall (~developer@user/domhnall/x-2887755)
[09:09:16] *** Quits: michigan_ (uid507982@id-507982.ilkley.irccloud.com) (Quit: Connection closed for inactivity)
[09:09:53] *** Joins: jmft2 (~jmft2@213.31.248.255)
[09:15:24] *** Joins: zeromule (~eric@2601:602:8d80:4e50:959b:124d:6605:7afb)
[09:15:52] *** Joins: tex (~dee@user/dix)
[09:19:17] *** Quits: wroathe (~wroathe@user/wroathe) (Ping timeout: 252 seconds)
[09:28:37] *** Quits: mrdata (~mrdata@user/mrdata) (Ping timeout: 250 seconds)
[09:30:04] *** Joins: mrdata (~mrdata@135-23-182-185.cpe.pppoe.ca)
[09:30:14] *** Joins: sam_1 (~sam_1@87.51.251.118)
[09:35:48] *** Joins: wroathe (~wroathe@c-68-54-25-135.hsd1.mn.comcast.net)
[09:35:48] *** Quits: wroathe (~wroathe@c-68-54-25-135.hsd1.mn.comcast.net) (Changing host)
[09:35:48] *** Joins: wroathe (~wroathe@user/wroathe)
[09:40:45] *** Quits: wroathe (~wroathe@user/wroathe) (Ping timeout: 265 seconds)
[09:41:17] *** Quits: JohnComputation (~JohnCompu@gateway/tor-sasl/johncomputation) (Remote host closed the connection)
[09:41:18] *** Quits: mrdata (~mrdata@135-23-182-185.cpe.pppoe.ca) (Ping timeout: 260 seconds)
[09:41:18] *** Joins: JohnComputation2 (~JohnCompu@gateway/tor-sasl/johncomputation)
[09:43:07] *** Joins: mrdata (~mrdata@135-23-182-185.cpe.pppoe.ca)
[09:43:25] *** Joins: gggp (~textual@221.219.74.187)
[09:44:57] *** Joins: mrdata_ (~mrdata@135-23-182-185.cpe.pppoe.ca)
[09:46:40] *** Quits: gggpkm (~gggpkm@111-251-148-94.dynamic-ip.hinet.net) (Ping timeout: 252 seconds)
[09:46:59] *** Joins: aniruddha (uid340443@id-340443.ilkley.irccloud.com)
[09:47:46] *** Quits: mrdata (~mrdata@135-23-182-185.cpe.pppoe.ca) (Ping timeout: 252 seconds)
[09:51:38] *** Quits: mei (~mei@user/mei) (Quit: mei)
[09:53:54] *** Joins: unixlab (unixlab@linuxlab.librient.com)
[09:55:11] *** Quits: carlino3 (~carlino3@user/carlino3) (Quit: Ping timeout (120 seconds))
[09:56:42] *** Quits: mat001 (~mat001@c-73-223-64-126.hsd1.ca.comcast.net) (Ping timeout: 260 seconds)
[09:57:43] *** Joins: mat001 (~mat001@c-73-223-64-126.hsd1.ca.comcast.net)
[09:58:35] *** Joins: banana_ (~banana_@user/banana/x-2944094)
[10:01:31] *** Quits: mrdata_ (~mrdata@135-23-182-185.cpe.pppoe.ca) (Ping timeout: 252 seconds)
[10:03:19] *** Joins: mrdata (~mrdata@135-23-182-185.cpe.pppoe.ca)
[10:05:04] *** Joins: kadams (~kadams@cpe-74-136-29-104.kya.res.rr.com)
[10:05:36] *** Joins: comatory (~ondrejsyn@217.11.241.69)
[10:05:48] *** Quits: mrdata (~mrdata@135-23-182-185.cpe.pppoe.ca) (Read error: Connection reset by peer)
[10:05:49] *** Quits: onr (~onr@user/onr) (Quit: Leaving)
[10:06:13] *** Joins: mrdata (~mrdata@135-23-182-185.cpe.pppoe.ca)
[10:08:14] *** Quits: systemdlete2 (~systemdle@c-73-116-45-116.hsd1.ca.comcast.net) (Ping timeout: 252 seconds)
[10:10:14] *** Quits: comatory (~ondrejsyn@217.11.241.69) (Ping timeout: 265 seconds)
[10:11:41] *** Quits: Gustavo6046 (~Gustavo60@user/gustavo6046) (Quit: ZNC 1.8.2 - https://znc.in)
[10:12:23] *** Quits: yosafbridge` (~yosafbrid@static.38.6.217.95.clients.your-server.de) (Quit: Leaving)
[10:14:47] *** Joins: audiofreeze (~audio@2603-8081-1800-b44d-a5a4-5683-9a21-3df2.res6.spectrum.com)
[10:18:27] *** Quits: domhnall (~developer@user/domhnall/x-2887755) (Ping timeout: 265 seconds)
[10:20:45] *** Quits: greta (uid516789@id-516789.lymington.irccloud.com) (Quit: Connection closed for inactivity)
[10:21:54] *** Quits: xiongxin (~quassel@113.116.32.113) (Ping timeout: 260 seconds)
[10:22:20] *** Joins: xiongxin (~quassel@119.123.102.171)
[10:25:11] *** Joins: yosafbridge (~yosafbrid@static.38.6.217.95.clients.your-server.de)
[10:25:33] *** Joins: mrdata_ (~mrdata@135-23-182-185.cpe.pppoe.ca)
[10:26:00] *** Joins: Gustavo6046 (~Gustavo60@user/gustavo6046)
[10:27:55] *** Quits: mrdata (~mrdata@135-23-182-185.cpe.pppoe.ca) (Ping timeout: 252 seconds)
[10:29:45] *** Joins: mrdata__ (~mrdata@135-23-182-185.cpe.pppoe.ca)
[10:31:13] *** Quits: mrdata_ (~mrdata@135-23-182-185.cpe.pppoe.ca) (Ping timeout: 252 seconds)
[10:31:16] <c4017_> I have some obfuscated code that has an array like `const obf = ['value', 'measureText', ...]` and various parts of the code use it like `some_object[obf[123]]`. Is there a tool that can deobfuscate this?
[10:31:27] *** Quits: sam_1 (~sam_1@87.51.251.118) (Ping timeout: 250 seconds)
[10:32:59] <theskillwithin> deobfuscate?
[10:34:00] <c4017_> basically replace all instances of `obf[some_constant]` with the value of the array
[10:35:05] *** Joins: mrdata_ (~mrdata@135-23-182-185.cpe.pppoe.ca)
[10:36:23] <theskillwithin> like obf[1]   is measureText ?
[10:36:29] <theskillwithin> maybe better to make a fiddle
[10:36:50] *** Quits: pulse (~pulse@user/pulse) (Ping timeout: 252 seconds)
[10:38:55] *** Quits: mrdata__ (~mrdata@135-23-182-185.cpe.pppoe.ca) (Ping timeout: 252 seconds)
[10:39:25] *** Quits: jmft2 (~jmft2@213.31.248.255) (Quit: This computer has gone to sleep)
[10:39:55] <c4017_> theskillwithin, well heres a short excerpt: https://jsfiddle.net/jfuxmc2w/  I just want to get rid of the `obfuscation` array for now
[10:40:12] *** Quits: mrdata_ (~mrdata@135-23-182-185.cpe.pppoe.ca) (Ping timeout: 265 seconds)
[10:40:18] *** Joins: mrdata (~mrdata@135-23-182-185.cpe.pppoe.ca)
[10:41:26] *** Joins: xon (~xon@host-110-net-65-160-119.mobilinkinfinity.net.pk)
[10:41:35] <theskillwithin> this might be over my head
[10:42:04] *** Joins: mrdata_ (~mrdata@135-23-182-185.cpe.pppoe.ca)
[10:42:57] *** Joins: salad (~cucumber@86.121.64.41)
[10:44:47] *** Joins: bomb (~bomb@user/bomb)
[10:46:04] *** Quits: mrdata (~mrdata@135-23-182-185.cpe.pppoe.ca) (Ping timeout: 252 seconds)
[10:46:10] *** Joins: mrdata__ (~mrdata@135-23-182-185.cpe.pppoe.ca)
[10:46:51] *** Quits: xon (~xon@host-110-net-65-160-119.mobilinkinfinity.net.pk) (Remote host closed the connection)
[10:47:10] *** Quits: mrdata_ (~mrdata@135-23-182-185.cpe.pppoe.ca) (Ping timeout: 252 seconds)
[10:48:39] *** Quits: sheetjs (~sheetjs@user/sheetjs) (Remote host closed the connection)
[10:48:51] *** Quits: unixlab (unixlab@linuxlab.librient.com) (Changing host)
[10:48:51] *** Joins: unixlab (unixlab@user/nicoz)
[10:49:01] *** unixlab is now known as nicoz-
[10:49:03] *** Joins: onizu (uid373383@id-373383.uxbridge.irccloud.com)
[10:49:22] *** Joins: mat001_ (~mat001@c-73-223-64-126.hsd1.ca.comcast.net)
[10:49:34] *** Joins: mrdata_ (~mrdata@135-23-182-185.cpe.pppoe.ca)
[10:50:14] *** Joins: xon (~xon@host-110-net-65-160-119.mobilinkinfinity.net.pk)
[10:51:19] *** Quits: mrdata__ (~mrdata@135-23-182-185.cpe.pppoe.ca) (Ping timeout: 265 seconds)
[10:52:07] *** Quits: mat001 (~mat001@c-73-223-64-126.hsd1.ca.comcast.net) (Ping timeout: 252 seconds)
[10:53:10] *** Quits: voltage_ (voltage@user/voltage) (Quit: Leaving)
[10:53:13] *** Quits: xon (~xon@host-110-net-65-160-119.mobilinkinfinity.net.pk) (Remote host closed the connection)
[10:53:52] *** Joins: mrdata__ (~mrdata@135-23-182-185.cpe.pppoe.ca)
[10:56:38] *** Quits: mrdata_ (~mrdata@135-23-182-185.cpe.pppoe.ca) (Ping timeout: 265 seconds)
[10:59:54] *** Joins: bobdobbs (~user@2406:5a00:444e:a800:3446:f7d0:d654:d40d)
[11:00:01] *** Quits: mrdata__ (~mrdata@135-23-182-185.cpe.pppoe.ca) (Ping timeout: 265 seconds)
[11:02:29] *** Quits: gxt (~gxt@gateway/tor-sasl/gxt) (Remote host closed the connection)
[11:02:50] *** Joins: gxt (~gxt@gateway/tor-sasl/gxt)
[11:05:35] *** Joins: domhnall (~developer@user/domhnall/x-2887755)
[11:07:45] *** Quits: xiongxin (~quassel@119.123.102.171) (Ping timeout: 265 seconds)
[11:12:02] *** Joins: diophantoz (~diophanto@user/diophantoz)
[11:16:08] *** Quits: hnOsmium0001 (uid453710@id-453710.hampstead.irccloud.com) (Quit: Connection closed for inactivity)
[11:19:36] *** Joins: vysn (~vysn@user/vysn)
[11:22:41] *** Joins: xon (~xon@host-110-net-65-160-119.mobilinkinfinity.net.pk)
[11:24:26] *** Joins: Booster2ooo (~Booster2o@user/booster2ooo)
[11:26:16] *** Quits: rcoote (~rcoote@2a02:908:692:81c0:5d2a:febc:8c4e:bdcb) (Ping timeout: 252 seconds)
[11:27:15] *** Joins: Bishop_Bautista (~Bishop_Ba@174-087-246-009.res.spectrum.com)
[11:27:19] *** Quits: xon (~xon@host-110-net-65-160-119.mobilinkinfinity.net.pk) (Ping timeout: 252 seconds)
[11:32:57] *** Joins: rcoote (~rcoote@ip-176-199-84-50.hsi06.unitymediagroup.de)
[11:37:21] *** Joins: michigan_ (uid507982@id-507982.ilkley.irccloud.com)
[11:39:18] *** Parts: michigan_ (uid507982@id-507982.ilkley.irccloud.com) ()
[11:41:38] *** Joins: sizeof_void34 (~Thunderbi@109-252-124-86.nat.spd-mgts.ru)
[11:41:44] *** Quits: keypusher (keypusher@user/keypusher) (Ping timeout: 252 seconds)
[11:42:19] *** Joins: gxt_ (~gxt@gateway/tor-sasl/gxt)
[11:42:57] *** Quits: Bishop_Bautista (~Bishop_Ba@174-087-246-009.res.spectrum.com) (Quit: My iMac has gone to sleep. ZZZzzz…)
[11:43:21] *** Joins: xiongxin (~quassel@113.116.32.113)
[11:44:01] *** Quits: gxt (~gxt@gateway/tor-sasl/gxt) (Remote host closed the connection)
[11:46:04] *** Quits: qwedfg (~qwedfg@user/qwedfg) (Ping timeout: 252 seconds)
[11:49:33] *** Joins: X-Scale` (~ARM@50.77.166.178.rev.vodafone.pt)
[11:50:25] *** Quits: X-Scale (~ARM@31.22.200.105) (Ping timeout: 252 seconds)
[11:50:56] *** Joins: Tobbi (~Tobbi@2a02:8108:1240:48ec:3c20:f203:97aa:fa0b)
[11:51:08] *** X-Scale` is now known as X-Scale
[11:52:52] *** Joins: CiaoSen (~Jura@p2e5c6ba6.dip0.t-ipconnect.de)
[11:54:38] *** Quits: domhnall (~developer@user/domhnall/x-2887755) (Ping timeout: 265 seconds)
[11:56:47] *** Quits: rcoote (~rcoote@ip-176-199-84-50.hsi06.unitymediagroup.de) (Quit: Konversation terminated!)
[11:57:08] *** Quits: The_Blode (~Blode@user/the-blode/x-7164444) (Ping timeout: 252 seconds)
[12:02:42] *** Quits: banana_ (~banana_@user/banana/x-2944094) (Ping timeout: 260 seconds)
[12:05:11] *** Joins: domhnall (~developer@user/domhnall/x-2887755)
[12:05:44] *** Joins: pulse (~pulse@user/pulse)
[12:05:56] *** Quits: gggp (~textual@221.219.74.187) (Ping timeout: 252 seconds)
[12:07:08] *** Joins: gggp (~textual@60.10.194.42)
[12:09:45] *** Quits: nrl^ (~nrl@12.203.127.82) (Remote host closed the connection)
[12:13:08] *** Joins: qwedfg (~qwedfg@user/qwedfg)
[12:22:22] *** Joins: Brumaire (~quassel@81-64-14-121.rev.numericable.fr)
[12:23:31] *** Quits: Betal (~Betal@user/betal) (Quit: WeeChat 3.2.1)
[12:25:40] *** Quits: zeromule (~eric@2601:602:8d80:4e50:959b:124d:6605:7afb) (Ping timeout: 252 seconds)
[12:28:11] *** Joins: sam_1 (~sam_1@87.51.251.118)
[12:29:52] *** Quits: cmbengue (~Thunderbi@207.191.249.160) (Quit: Thanks, see you later.)
[12:33:39] *** Quits: sam_1 (~sam_1@87.51.251.118) (Ping timeout: 250 seconds)
[12:35:16] *** Joins: thiras (~thiras@user/thiras)
[12:36:07] *** Quits: Tobbi (~Tobbi@2a02:8108:1240:48ec:3c20:f203:97aa:fa0b) (Ping timeout: 252 seconds)
[12:37:16] *** Joins: mat001 (~mat001@c-73-223-64-126.hsd1.ca.comcast.net)
[12:38:04] *** Joins: almost (~almost@bzq-109-66-17-68.red.bezeqint.net)
[12:40:35] *** Quits: mat001_ (~mat001@c-73-223-64-126.hsd1.ca.comcast.net) (Ping timeout: 252 seconds)
[12:46:05] *** Joins: Tobbi (~Tobbi@2a02:8108:1240:48ec:ed74:9c57:cb8f:fb23)
[12:52:23] <bomb> Safari now has WebGL 2 support
[12:53:06] *** Quits: bobdobbs (~user@2406:5a00:444e:a800:3446:f7d0:d654:d40d) (Ping timeout: 260 seconds)
[12:53:20] *** Quits: diophantoz (~diophanto@user/diophantoz) (Quit: Leaving)
[12:53:22] *** Joins: bobdobbs (~user@14.137.23.74)
[12:53:42] *** Joins: daoudr (~daoudr@2a02:1205:c681:1650:2213:cc7f:a040:3a92)
[12:54:50] *** Joins: hassoon (hassoon@user/hassoon)
[12:56:07] <hassoon> 'morning
[12:56:10] <bomb> it took only 10 years!
[12:56:17] <hassoon> for what
[13:01:27] <daoudr> do any companies still use Vanilla JS?
[13:01:44] <thykka> what do you mean by that, exactly?
[13:01:48] <thykka> as opposed to what?
[13:01:53] *** Joins: sam_1 (~sam_1@87.51.251.118)
[13:02:17] <daoudr> js frameworks
[13:02:53] <thykka> well, it would be very rare that a framework doesn't need at least some glue code, which would/could be written in plain js
[13:03:36] <daoudr> so now days there is no way around not using framework, right?
[13:03:54] <thykka> it would be weird to build everything from scratch
[13:04:12] <thykka> and maybe pointless too
[13:04:33] <thykka> but
[13:05:05] *** Joins: mogad0n (~mogad0n@user/mogad0n)
[13:05:12] <thykka> i know that at least some smaller wp mills build their sites "from scratch", as in, they don't necessarily use much else than wordpress as the base, and functionality is custom-built
[13:05:25] <thykka> but then, is wp a framework?
[13:05:46] <daoudr> I do not know. is it?
[13:05:48] <thykka> arguably yes
[13:06:09] <thykka> i mean, it provides a lot more than scaffolding
[13:06:39] *** Quits: sam_1 (~sam_1@87.51.251.118) (Ping timeout: 265 seconds)
[13:06:47] <thykka> but, they might not use a JS framework, such as jQuery, and instead write ES6+
[13:06:58] <daoudr> this is going to take time. I am a 42 years old JS baby as opposed to 20 years old JS somo wrestlers
[13:08:29] <daoudr> so ES6+ is more advanced than vanilla. correct?
[13:08:36] <thykka> no, it's very much vanilla
[13:08:45] <thykka> just, later revisions of vanilla, so to say
[13:08:50] <systemfault> daoudr: There's the language and there's the plaform
[13:08:58] *** Quits: xiongxin (~quassel@113.116.32.113) (Ping timeout: 260 seconds)
[13:09:09] <systemfault> ES6 is a version of  the language(Not even the latest)
[13:09:16] <systemfault> ES2021 is the latest iteration
[13:09:32] <thykka> these iterations give JS more features, syntactic sugar, and such
[13:09:43] <hassoon> daoudr: a solid understanding of vanilla javascript at whole will give you a very strong advantage in your job, you'll be able to learn any frontend framework fast
[13:09:53] <systemfault> Then you have the platform... the 2 main ones are the Browser and NodeJS
[13:10:01] *** Joins: xiongxin (~quassel@113.116.34.58)
[13:10:12] <hassoon> daoudr: vanilla javascript is everywhere, frontend frameworks are based on it
[13:10:50] <thykka> I would say a solid understanding is very important, and will get you in a good place. But, learning plain js won't help with learning frameworks. Learning a framework does.
[13:11:18] <thykka> like, if you learn JS, then learn some Vue, you should be able to pick up react easily
[13:11:30] <hassoon> thykka: nope, learning plain js will give you a deep understanding of the web logic
[13:11:39] <thykka> how so?
[13:12:18] <thykka> js is just a programming language, it's often applied on the web, but since node, it doesn't have to have anything to do with the web
[13:12:56] <daoudr> I am all ears for everyone even If I am not talking
[13:13:06] <thykka> building web projects and browser apis will help with understanding web logic
[13:13:37] <thykka> s/and browser/and using browser
[13:13:55] <bomb> daoudr: vanilla js is still popular
[13:14:19] <systemfault> Well, it's a prerequisite... even you use frameworks.
[13:14:24] <systemfault> Good luck avoiding it.
[13:15:03] <systemfault> But if you _only_ know JS, you'll probably have a more difficult time getting a good job...
[13:15:23] <bomb> he obviously mean building a project with vanilla JS
[13:15:44] <systemfault> As in "Not a web sweatshop where 'web integrators' create 5 pagers for restaurants or similar"
[13:16:14] <thykka> what is very common though, is that even project written in vanilla js, usually have some kind of a build step. This could include stuff like transpiling ES2021 to some earlier version, which is better supported by browsers.
[13:16:39] <bomb> some don't even do that
[13:17:06] <thykka> depends on the scope of the project, i think
[13:17:32] <thykka> for a simple one page brochure site, very little JS is needed in the first place
[13:17:42] <bomb> NPM ecosystem is difficult to tame
[13:18:08] <daoudr> web pages are presentational while web app are interactive hybrid are both
[13:19:18] <bomb> I mean, what does React/Vue offer at its core? componentization of GUI elements
[13:19:19] <thykka> daoudr, do you have previous experience with programming?
[13:19:31] <bomb> if you feel like it, you can implement your custom one concisely
[13:19:43] <daoudr> 2 monthes maybe
[13:20:10] <thykka> in JS, or some other language(s)?
[13:20:39] <bomb> oh, you should definitely get comfortable with JavaScript before jumping on a framework
[13:20:45] <thykka> and your aim is to get into web development? or..
[13:21:43] *** Quits: sickdyd (~sickd@120.51.82.69.ap.gmobb-fix.jp) (Ping timeout: 252 seconds)
[13:24:17] <thykka> if that's the case, I would recommend first getting familiar with javascript core features. Maybe do some codewars excercises, if you have no specific project you want to make. Then there's a very good course on a modern web stack, and on how things fit together @ https://fullstackopen.com/en/
[13:24:58] <thykka> the course expects familiarity with JS, and focuses more on what it takes to make a web app from start to finish
[13:26:07] *** Quits: gggp (~textual@60.10.194.42) (Ping timeout: 252 seconds)
[13:28:28] *** Joins: mat001_ (~mat001@c-73-223-64-126.hsd1.ca.comcast.net)
[13:32:10] *** Quits: mat001 (~mat001@c-73-223-64-126.hsd1.ca.comcast.net) (Ping timeout: 252 seconds)
[13:33:49] *** Joins: mat001 (~mat001@c-73-223-64-126.hsd1.ca.comcast.net)
[13:35:38] <daoudr> thykka:  I was away. this is my progress so far on codewars  https://imgur.com/a/vvuBXvP    on nov I will start this bootcamp https://propulsion.academy/full-stack
[13:36:35] <thykka> that's... a lot to cover in 12 weeks :O
[13:36:56] <daoudr> that is why my heart is pumping in fear
[13:37:14] *** Quits: mat001_ (~mat001@c-73-223-64-126.hsd1.ca.comcast.net) (Ping timeout: 252 seconds)
[13:37:44] <bomb> daoudr: check out the free book Eloquent JS, it's nice
[13:38:15] <thykka> i would try to find someone who has been on that course, and ask if it's any good. The amount of topics in the amount of time seems a bit unrealistic, at least if the point is to actually learn to use these things, and not just know of their existence :P
[13:39:02] <bomb> I'd highly recommend avoiding videos, they're waste of time
[13:39:11] <daoudr> I added your recommended sites to my bookmark
[13:40:05] *** Joins: masber (~masber@213.55.224.30)
[13:40:26] <daoudr> it is available in arabic too. interesting
[13:40:56] <daoudr> thykka I got it paid for free
[13:42:44] *** Quits: xiongxin (~quassel@113.116.34.58) (Ping timeout: 252 seconds)
[13:43:11] *** Joins: xiongxin (~quassel@113.116.32.113)
[13:44:00] *** Joins: mikrosis (~mikrosis@dynamic-046-114-172-015.46.114.pool.telefonica.de)
[13:44:02] <daoudr> so far I have gone through these courses https://pastebin.com/wL859i0R
[13:44:54] <daoudr> and these the katas I managed to solve https://imgur.com/a/vvuBXvP
[13:45:06] <daoudr> I started all this 3 weeks ago
[13:45:07] <thykka> it looks like you're doing well!
[13:46:34] <daoudr> probably you asumed by now that I know html and css
[13:46:47] <daoudr> not really. I am doing a crash course today
[13:48:19] <thykka> daoudr, are you familiar with MDN?
[13:49:33] <thykka> if not, i strongly recommend using it often, at least every time you come across a new thing. It's pretty much the best reference documentation we have, aside from the actual specifications. https://developer.mozilla.org/en-US/docs/Web
[13:50:07] <daoudr> yes I use it. I even watched a lesson on how to use it
[13:50:22] <daoudr> I like this https://fullstackopen.com/en/part0/general_info
[13:50:26] <thykka> there's also https://devdocs.io/ which includes all of MDN's documentation, but also docs for various JS libraries and framewroks https://devdocs.io/
[13:51:00] <daoudr> very handy
[13:51:02] <daoudr> thanks
[13:51:54] *** Quits: xiongxin (~quassel@113.116.32.113) (Ping timeout: 260 seconds)
[14:04:33] *** Joins: Hatari (~Hatari@185.208.183.43)
[14:06:56] *** Joins: comatory (~ondrejsyn@217.11.241.69)
[14:08:02] <bomb> w3schools.... don't
[14:11:08] *** Joins: cth (~Cthulchu@193.194.107.250)
[14:14:19] *** Quits: comatory (~ondrejsyn@217.11.241.69) (Ping timeout: 265 seconds)
[14:14:48] *** Joins: xon (~xon@host-110-net-65-160-119.mobilinkinfinity.net.pk)
[14:14:49] *** Quits: terrorjack (~terrorjac@ec2-35-181-134-114.eu-west-3.compute.amazonaws.com) (Quit: The Lounge - https://thelounge.chat)
[14:15:19] <wez> I like w3c
[14:16:52] * bomb goes to find his axe
[14:17:39] *** Joins: terrorjack (~terrorjac@ec2-35-181-134-114.eu-west-3.compute.amazonaws.com)
[14:19:42] <bomb> > I want to work on someone's web app, npm suddenly downloads the world. Who's actually audited all that? I know I haven't.
[14:20:01] *** Quits: xon (~xon@host-110-net-65-160-119.mobilinkinfinity.net.pk) (Ping timeout: 252 seconds)
[14:21:52] <theskillwithin> dammit starting to get spam pm messages
[14:22:06] <wez> theskillwithin: oh? THat sucks
[14:22:12] <wez> theskillwithin: Can I send some too?
[14:22:17] <daoudr> w3c I heard has some outdated or inaccurate info
[14:22:26] <wez> daoudr: They are old
[14:22:29] <theskillwithin> haha yo u can pm me any time wez <3
[14:22:34] *** Quits: masber (~masber@213.55.224.30) (Quit: Client closed)
[14:24:04] *** Joins: Guest_7788 (~Guest@223.189.39.132)
[14:24:17] *** Joins: xon (~xon@host-110-net-65-160-119.mobilinkinfinity.net.pk)
[14:27:29] <thykka> wez, w3schools has nothing to do with w3c
[14:27:40] <thykka> ..even though w3schools would very much like for people to think so
[14:27:42] <wez> thykka: and?
[14:27:57] <wez> w3c is what I like
[14:28:01] *** Joins: mat001_ (~mat001@c-73-223-64-126.hsd1.ca.comcast.net)
[14:28:28] <thykka> seems a bit.. out of context?
[14:29:18] *** Quits: xon (~xon@host-110-net-65-160-119.mobilinkinfinity.net.pk) (Ping timeout: 265 seconds)
[14:29:29] *** Quits: CiaoSen (~Jura@p2e5c6ba6.dip0.t-ipconnect.de) (Ping timeout: 252 seconds)
[14:31:08] *** Quits: mat001 (~mat001@c-73-223-64-126.hsd1.ca.comcast.net) (Ping timeout: 252 seconds)
[14:32:16] *** Quits: Hatari (~Hatari@185.208.183.43) (K-Lined)
[14:33:47] <wez> thykka: Sounds within topic to me
[14:34:35] *** Joins: night_wulfe_ (~wulfe@cpe-174-103-156-213.cinci.res.rr.com)
[14:35:06] *** Joins: mat001 (~mat001@c-73-223-64-126.hsd1.ca.comcast.net)
[14:35:08] *** Joins: xon (~xon@host-110-net-65-160-119.mobilinkinfinity.net.pk)
[14:35:18] <theskillwithin> anyone by any chance major in like literature or poetry or wtver
[14:36:15] *** Joins: night_wulfe__ (~wulfe@cpe-174-103-156-213.cinci.res.rr.com)
[14:36:25] *** Joins: Hatari (~Hatari@62-210-99-129.rev.poneytelecom.eu)
[14:37:44] *** Quits: night_wulfe (~wulfe@cpe-174-103-156-213.cinci.res.rr.com) (Ping timeout: 252 seconds)
[14:38:50] *** Quits: mat001_ (~mat001@c-73-223-64-126.hsd1.ca.comcast.net) (Ping timeout: 252 seconds)
[14:39:56] *** Quits: night_wulfe_ (~wulfe@cpe-174-103-156-213.cinci.res.rr.com) (Ping timeout: 265 seconds)
[14:39:56] *** Quits: xon (~xon@host-110-net-65-160-119.mobilinkinfinity.net.pk) (Ping timeout: 252 seconds)
[14:40:33] *** Quits: Hatari (~Hatari@62-210-99-129.rev.poneytelecom.eu) (K-Lined)
[14:41:10] *** Quits: Guest_7788 (~Guest@223.189.39.132) (Remote host closed the connection)
[14:43:28] *** Joins: xon (~xon@host-110-net-65-160-119.mobilinkinfinity.net.pk)
[14:44:54] *** Joins: gggp (~textual@60.10.194.42)
[14:48:11] *** Quits: xon (~xon@host-110-net-65-160-119.mobilinkinfinity.net.pk) (Ping timeout: 252 seconds)
[14:49:49] *** Joins: xon (~xon@host-110-net-65-160-119.mobilinkinfinity.net.pk)
[14:52:31] *** Quits: stenno (~stenno@user/stenno) (Ping timeout: 252 seconds)
[14:52:57] *** Joins: xiongxin (~quassel@113.116.34.58)
[14:54:26] *** Quits: xon (~xon@host-110-net-65-160-119.mobilinkinfinity.net.pk) (Ping timeout: 265 seconds)
[14:55:59] *** Quits: gggp (~textual@60.10.194.42) (Quit: My MacBook has gone to sleep. ZZZzzz…)
[14:56:30] *** Joins: i0e (~is0ke3@user/is0ke3)
[14:57:09] *** Joins: gggp (~textual@60.10.194.42)
[14:57:49] *** Joins: xon (~xon@host-110-net-65-160-119.mobilinkinfinity.net.pk)
[15:02:29] *** Quits: xon (~xon@host-110-net-65-160-119.mobilinkinfinity.net.pk) (Ping timeout: 252 seconds)
[15:03:28] *** Quits: gggp (~textual@60.10.194.42) (Ping timeout: 252 seconds)
[15:04:08] *** Quits: aexijh (~aexijh@bras-vprn-unvlon5573w-lp130-07-174-93-47-157.dsl.bell.ca) (Ping timeout: 252 seconds)
[15:05:34] *** Joins: gggp (~textual@221.219.74.187)
[15:10:28] *** Joins: xon (~xon@host-110-net-65-160-119.mobilinkinfinity.net.pk)
[15:13:43] *** Quits: pavonia (~user@user/siracusa) (Quit: Bye!)
[15:15:01] *** Quits: xon (~xon@host-110-net-65-160-119.mobilinkinfinity.net.pk) (Ping timeout: 252 seconds)
[15:15:48] <thykka> my javascript is like poetry, does that count?
[15:17:16] <theskillwithin> it does, but not for what i want
[15:21:16] *** Parts: audiofreeze (~audio@2603-8081-1800-b44d-a5a4-5683-9a21-3df2.res6.spectrum.com) ()
[15:21:16] <thykka> const question = 2*b || !(2*b)
[15:21:36] *** Joins: audio (~audio@2603-8081-1800-b44d-a5a4-5683-9a21-3df2.res6.spectrum.com)
[15:21:47] <theskillwithin> hard to work out words when your in shock of someones death
[15:23:37] <hassoon> thykka: asynchronous code/variale scopes/ajax and/or http requests, all of that is what most of frameworks are about, and mastering that in plain javascript will just make you prepared and open-minded for any other framework
[15:23:57] <hassoon> thykka: ES6 classes as well, modern js you know.. etc
[15:24:26] <hassoon> thykka: only new thing you need to learn about, is the ecosystem of teh framework you're going to use
[15:24:37] <thykka> yes, they're pre-requisites. But it's also of paramount importance to understand what problems the framework itself solves, and how
[15:24:56] <hassoon> thykka: sure that won't be any hard
[15:25:49] <thykka> idk about that.. a person can be very knowledgeable about JS itself, but still have no idea how react works, and why it's used. If this is the case, they won't make anything good with it, despite phenomenal js skills
[15:26:11] <thykka> there's nothing about JS that directly translates to framework knowledge
[15:26:46] <thykka> like, if you have a driving license, it doesn't mean you can just jump into a truck and be an expert in logistics
[15:26:48] <theskillwithin> and visa versa
[15:26:58] <thykka> right, because JS is the requirement for JS frameworks
[15:27:17] <theskillwithin> a respectable react dev, should know dom manipulation like the back of their hand in vanilla js
[15:27:17] *** audio is now known as audiobirb
[15:27:38] <thykka> yes, but dom manipulation is part of web APIs, not javascript itself
[15:28:03] <theskillwithin> and not all react devs are respectable in that manner
[15:28:06] *** Joins: mrdata (~mrdata@user/mrdata)
[15:28:06] <thykka> you can learn javascript without web APIs, but not the other way round
[15:28:36] *** Joins: xon (~xon@host-110-net-65-160-119.mobilinkinfinity.net.pk)
[15:29:10] <hassoon> thykka: i've been using javascript/DOM manipulation/XmlHttpRequest-based ajax code, and doing all of my front-end logic with javascript before learning about angular
[15:29:24] <hassoon> thykka: and then learning angular was a fun and easy task for me
[15:29:51] *** Quits: xon (~xon@host-110-net-65-160-119.mobilinkinfinity.net.pk) (Remote host closed the connection)
[15:30:04] *** Joins: zeromule (~eric@2601:602:8d80:4e50:959b:124d:6605:7afb)
[15:30:06] *** Joins: xon (~xon@host-110-net-65-160-119.mobilinkinfinity.net.pk)
[15:30:15] <hassoon> thykka: others who don't know about javascript would take much longer time to learn angular, and they still won't match the competency of a vanilla javascript developer
[15:30:25] <thykka> no question about it
[15:30:27] <hassoon> thykka: i mean someone good at vanilla javascript
[15:31:04] *** Quits: _xxoxx (~Junxter@222.94.37.114) (Quit: Leaving)
[15:31:12] <hassoon> thykka: it's all about the insight, if you're good at javascript, you'll have a great insight of the web development, far greater than framework users/developers
[15:31:23] <thykka> and that's where I disagree
[15:31:28] *** Joins: Guest3387 (~Guest3387@115.134.135.90)
[15:31:32] <thykka> javascript !== web development
[15:31:36] <hassoon> nah man
[15:31:38] <thykka> even though they often go hand in hand
[15:31:52] <thykka> knowledge
[15:32:02] <thykka> of javascript only, will not help with frameworks
[15:32:07] <hassoon> nope
[15:32:09] <theskillwithin> reverse nirvana fallacy
[15:32:23] <thykka> because the frameworks solve problems that relate to web development, not problems that relate to javascript
[15:32:37] <thykka> if you have no understanding of the problems in web development, no amount of knowledge in javascript will help
[15:33:04] <theskillwithin> you just contradicted yourself
[15:33:39] <thykka> please elaborate
[15:33:46] <hassoon> no bro, javascript is your winning card
[15:33:53] <hassoon> you master javascript ? you own the web
[15:34:00] <hassoon> and you own frameworks as well
[15:34:01] <thykka> javascript is your fundamentals
[15:34:09] <thykka> everything else can be built on that
[15:34:34] *** Quits: audiobirb (~audio@2603-8081-1800-b44d-a5a4-5683-9a21-3df2.res6.spectrum.com) (Ping timeout: 260 seconds)
[15:34:55] <thykka> without it, you cannot build. but it does not follow, that with it you're automatically knowledgeable about frameworks or web development
[15:35:28] <thykka> mastering bricklaying does not make an architect
[15:35:30] *** Quits: zeromule (~eric@2601:602:8d80:4e50:959b:124d:6605:7afb) (Ping timeout: 260 seconds)
[15:35:38] <theskillwithin> i fail to see what the disagreement is
[15:35:45] <hassoon> nah mastering javascript makes you already the architect
[15:36:05] <thykka> i've seen plenty of people who are decent at javascript, but could not architect themselves out of a wet paper bag
[15:36:06] * hassoon pets javascript
[15:36:23] <hassoon> thykka: meh those are not really good :D
[15:36:47] <hassoon> i should say.. mastering the javascript/css/html stack
[15:36:47] <hassoon> :D
[15:36:55] <thykka> well yes, that's entirely different
[15:37:02] *** Quits: i0e (~is0ke3@user/is0ke3) (Quit: WeeChat 3.3)
[15:37:03] <thykka> then you're talking about web dev
[15:37:03] <hassoon> but for the programming logic, it's about javascript
[15:37:05] <thykka> not js
[15:38:12] <hassoon> alright you're thinking that js and web dev are not even related
[15:38:21] <thykka> they are related, but they're not equivalent
[15:38:46] <thykka> webdev is a supercategory, in which JS belongs, amongst other things
[15:38:46] *** Quits: silly (~silly@user/silly) (Read error: Connection reset by peer)
[15:39:11] <hassoon> sure, but js is very important in the web dev, and..very present
[15:39:11] <theskillwithin> i know people who do complex AWS shit in js that you could not even comprehend
[15:39:15] <thykka> and thus, if you strictly focus on JS, you're missing everything else that belongs in webdev
[15:39:32] *** Joins: silly (~silly@user/silly)
[15:39:48] *** Quits: xon (~xon@host-110-net-65-160-119.mobilinkinfinity.net.pk) (Remote host closed the connection)
[15:39:53] <hassoon> js can let you even manipulate CSS and HTML
[15:40:01] <hassoon> using its CSSOM and DOM API's
[15:40:11] <hassoon> and that gives it already a great deal of supremacy
[15:40:17] <hassoon> it's very important in the web dev
[15:40:19] <hassoon> come on ..
[15:40:45] <thykka> yes, it's very important in webdev, that's a given
[15:44:06] <thykka> web APIs are not native to javascript. You said that learning javascript gives a deep understanding of web logic. I think those are two distinct subjects, and that knowledge of web tech does not directly follow of knowledge in JS (the language)
[15:44:40] *** Joins: ArchNoob (~maotora@user/archnoob)
[15:45:26] <thykka> maybe you have 10 years of programming background in C++, you can learn JS and build some functions, but only when you start using web APIs, and look into tech like http, databases, model view controller -systems etc. will you start accumulating knowledge of webdev
[15:48:41] *** Joins: rewrit3 (~rewrit3@user/rewrit3)
[15:49:47] *** Joins: xon (~xon@host-110-net-65-160-119.mobilinkinfinity.net.pk)
[15:50:17] *** Joins: sickdyd (~sickd@120.51.82.69.ap.gmobb-fix.jp)
[15:52:24] *** Joins: mat001_ (~mat001@c-73-223-64-126.hsd1.ca.comcast.net)
[15:53:16] <austincheney> thykka, I wrote this years ago and people seemed to like it.  It seems related to what you are discussing: https://github.com/prettydiff/wisdom/blob/master/Web_Education.md
[15:53:44] *** Joins: sam_1 (~sam_1@87.51.251.118)
[15:54:04] *** Quits: xon (~xon@host-110-net-65-160-119.mobilinkinfinity.net.pk) (Ping timeout: 252 seconds)
[15:55:20] *** Quits: coc0nut (~coc0nut@user/coc0nut) (Ping timeout: 252 seconds)
[15:55:20] <thykka> yes, none of that stuff ^ comes from learning javascript the programming language, but it's essential for web development.
[15:56:02] *** Quits: mat001 (~mat001@c-73-223-64-126.hsd1.ca.comcast.net) (Ping timeout: 260 seconds)
[15:56:10] *** Quits: bomb (~bomb@user/bomb) (Quit: ‏‏‎ ‎)
[15:58:13] *** Joins: xon (~xon@host-110-net-65-160-119.mobilinkinfinity.net.pk)
[15:58:14] *** Quits: sam_1 (~sam_1@87.51.251.118) (Ping timeout: 265 seconds)
[15:58:24] *** Joins: mat001 (~mat001@c-73-223-64-126.hsd1.ca.comcast.net)
[15:58:35] *** Quits: sickdyd (~sickd@120.51.82.69.ap.gmobb-fix.jp) (Ping timeout: 252 seconds)
[16:00:36] *** Quits: Booster2ooo (~Booster2o@user/booster2ooo) (Quit: Lost the game...)
[16:02:06] *** Quits: mat001_ (~mat001@c-73-223-64-126.hsd1.ca.comcast.net) (Ping timeout: 260 seconds)
[16:03:04] *** Quits: xon (~xon@host-110-net-65-160-119.mobilinkinfinity.net.pk) (Ping timeout: 265 seconds)
[16:03:57] *** Joins: banana_ (~banana_@user/banana/x-2944094)
[16:06:49] *** Joins: xon (~xon@host-110-net-65-160-119.mobilinkinfinity.net.pk)
[16:08:02] *** Joins: otisolsen70 (~otisolsen@xd4ed80b5.cust.hiper.dk)
[16:08:29] *** Joins: The_Blode (~Blode@user/the-blode/x-7164444)
[16:08:33] *** Joins: nomic (~nomic@2a00:23c6:9902:2401:2c67:53a3:7c94:c580)
[16:10:17] *** Quits: Axy (~Axy@user/axy) (Ping timeout: 264 seconds)
[16:10:25] *** Joins: Axy (~Axy@user/axy)
[16:11:26] *** Quits: xon (~xon@host-110-net-65-160-119.mobilinkinfinity.net.pk) (Ping timeout: 260 seconds)
[16:13:02] *** Quits: silly (~silly@user/silly) (Read error: Connection reset by peer)
[16:13:33] *** Joins: silly (~silly@user/silly)
[16:15:36] *** Joins: Simplar (~quassel@188.163.92.105)
[16:16:08] <Simplar> Suppose I have a blob url (blob:something-something). How do I convert a blob url contents to File object?
[16:17:34] *** Joins: xon (~xon@host-110-net-65-160-119.mobilinkinfinity.net.pk)
[16:19:24] *** Joins: keypusher (keypusher@user/keypusher)
[16:20:23] <thykka> Simplar, the url itself doesn't contain the data
[16:21:45] *** Joins: mannequin (uid453465@id-453465.helmsley.irccloud.com)
[16:22:24] *** Quits: xon (~xon@host-110-net-65-160-119.mobilinkinfinity.net.pk) (Ping timeout: 265 seconds)
[16:23:01] <thykka> but.. if it's an image, you could use the blob url as the src, then copy the image data with canvas, and turn that into a file object. Of course, this assumes that you also made the blob url, because the url itself is useless without the context it's made in
[16:23:18] <austincheney> Simplar, this is in Node?
[16:25:44] *** Joins: nomic2 (~nomic@85.203.36.16)
[16:25:56] *** Joins: xon (~xon@host-110-net-65-160-119.mobilinkinfinity.net.pk)
[16:26:22] *** Quits: nomic2 (~nomic@85.203.36.16) (Client Quit)
[16:26:24] <Simplar> I used Fetch
[16:26:27] <Simplar> it worked
[16:26:32] <Simplar> in React, npm, yes
[16:28:13] *** Quits: nomic (~nomic@2a00:23c6:9902:2401:2c67:53a3:7c94:c580) (Ping timeout: 252 seconds)
[16:28:50] *** Quits: gggp (~textual@221.219.74.187) (Ping timeout: 252 seconds)
[16:29:15] *** Joins: chenxuezhao (~chenxuezh@120.244.238.3)
[16:30:37] *** Quits: xon (~xon@host-110-net-65-160-119.mobilinkinfinity.net.pk) (Ping timeout: 265 seconds)
[16:31:02] *** Joins: llorllale (~llorllale@2607:9880:3a18:69:c420:6d94:fde4:9ca)
[16:31:37] *** Joins: gggp (~textual@60.10.194.42)
[16:32:22] *** Joins: i0e (~is0ke3@user/is0ke3)
[16:32:56] *** Joins: bomb (~bomb@user/bomb)
[16:34:12] *** Joins: xon (~xon@host-110-net-65-160-119.mobilinkinfinity.net.pk)
[16:35:10] *** Quits: Simplar (~quassel@188.163.92.105) (Quit: https://quassel-irc.org - Chat comfortably. Anywhere.)
[16:35:42] *** Quits: pkx (~pkx@user/pkx) (Ping timeout: 260 seconds)
[16:38:44] *** Quits: xon (~xon@host-110-net-65-160-119.mobilinkinfinity.net.pk) (Ping timeout: 252 seconds)
[16:38:58] *** Joins: nomic (~nomic@85.203.36.16)
[16:39:41] *** Quits: nomic (~nomic@85.203.36.16) (Client Quit)
[16:42:39] *** Joins: The_Blode_ (~Blode@user/the-blode/x-7164444)
[16:44:09] *** Quits: The_Blode (~Blode@user/the-blode/x-7164444) (Ping timeout: 265 seconds)
[16:48:51] *** Joins: Heraes (~Heraes@119.12.203.77.rev.sfr.net)
[16:48:52] *** Quits: Heraes (~Heraes@119.12.203.77.rev.sfr.net) (Changing host)
[16:48:52] *** Joins: Heraes (~Heraes@user/romarain)
[16:50:36] *** Joins: fassl (~fassl@2a02:8388:1987:9380:f065:d411:4557:ccdf)
[16:50:43] *** Quits: gggp (~textual@60.10.194.42) (Ping timeout: 252 seconds)
[16:50:59] *** Joins: xon (~xon@host-110-net-65-160-119.mobilinkinfinity.net.pk)
[16:51:23] *** Joins: xb0o2 (~xb0o2@user/xb0o2)
[16:55:38] *** Joins: fanis30 (~fanis30@adsl-213.37.6.3.tellas.gr)
[16:55:45] *** Quits: xon (~xon@host-110-net-65-160-119.mobilinkinfinity.net.pk) (Ping timeout: 265 seconds)
[16:57:47] <bomb> is WebStorm a good IDE?
[16:58:13] *** Joins: gggpkm (~gggpkm@111-251-148-94.dynamic-ip.hinet.net)
[16:58:13] *** Joins: xon (~xon@host-110-net-65-160-119.mobilinkinfinity.net.pk)
[16:58:35] <thykka> depends
[17:00:04] *** Quits: The_Blode_ (~Blode@user/the-blode/x-7164444) (Ping timeout: 252 seconds)
[17:02:56] *** Quits: xon (~xon@host-110-net-65-160-119.mobilinkinfinity.net.pk) (Ping timeout: 252 seconds)
[17:04:50] *** Joins: Naan (~naan@user/naan)
[17:05:17] *** Joins: trevors (~trevors@c-65-96-171-157.hsd1.ma.comcast.net)
[17:07:10] *** Joins: mat001_ (~mat001@c-73-223-64-126.hsd1.ca.comcast.net)
[17:07:52] *** Joins: CiaoSen (~Jura@p2e5c6ba6.dip0.t-ipconnect.de)
[17:08:19] *** Joins: RLa (~RLa@82.131.24.108.cable.starman.ee)
[17:10:41] *** Joins: xon (~xon@host-110-net-65-160-119.mobilinkinfinity.net.pk)
[17:11:04] *** Quits: mat001 (~mat001@c-73-223-64-126.hsd1.ca.comcast.net) (Ping timeout: 252 seconds)
[17:14:55] *** Quits: xon (~xon@host-110-net-65-160-119.mobilinkinfinity.net.pk) (Ping timeout: 252 seconds)
[17:17:23] *** Quits: chenxuezhao (~chenxuezh@120.244.238.3) (Remote host closed the connection)
[17:17:43] *** Quits: Gustavo6046 (~Gustavo60@user/gustavo6046) (Ping timeout: 252 seconds)
[17:17:56] *** Joins: chenxuezhao (~chenxuezh@120.244.238.3)
[17:18:31] *** Quits: chenxuezhao (~chenxuezh@120.244.238.3) (Remote host closed the connection)
[17:18:43] *** Joins: chenxuezhao (~chenxuezh@120.244.238.3)
[17:20:17] *** Joins: Simplar (~quassel@188.163.92.105)
[17:21:13] *** Quits: pwnd_sfw (~pwnd_sfw@ool-18b88100.dyn.optonline.net) (Quit: Ping timeout (120 seconds))
[17:21:24] *** Joins: pwnd_sfw (~pwnd_sfw@ool-18b88100.dyn.optonline.net)
[17:21:26] <Simplar> A string has multiple dots. Is it optimal to get text after the last dot like this? `const fulltext = "A quick. Brown fox. Jumps over the lazy dog"; const lastpart = fulltext.split('.').pop();` ?
[17:25:20] <theskillwithin> n> const fulltext = "A quick. Brown fox. Jumps over the lazy dog"; const lastpart = fulltext.split('.').pop();
[17:25:21] <jellobot> (okay) undefined
[17:25:25] *** Quits: elastic_dog (~elastic_d@2a01:118f:822:9c00:f583:aa51:9ad4:d4fb) (Ping timeout: 252 seconds)
[17:25:32] *** Joins: xon (~xon@host-110-net-65-160-119.mobilinkinfinity.net.pk)
[17:25:42] <theskillwithin> n> const fulltext = "A quick. Brown fox. Jumps over the lazy dog"; const lastpart = fulltext.split('.').pop(); lastpart
[17:25:42] <jellobot> (okay) ' Jumps over the lazy dog'
[17:26:27] <theskillwithin> Simplar in this case, whats optimal doesn't matter,  whats readable code matters more i think
[17:28:09] <theskillwithin> pre-mature optimization is bad
[17:28:51] <RLa> You could also use lastIndexOf: https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/String/lastIndexOf
[17:29:20] *** Quits: kadams (~kadams@cpe-74-136-29-104.kya.res.rr.com) (Ping timeout: 252 seconds)
[17:29:22] <RLa> I would say it fits better the description of the task
[17:30:26] *** Quits: xon (~xon@host-110-net-65-160-119.mobilinkinfinity.net.pk) (Ping timeout: 252 seconds)
[17:30:28] <RLa> fulltext.split('.').pop(); gives "wrong" answer if there is no dot at all
[17:30:40] *** Joins: codemin (~codemin@69.167.19.187)
[17:30:46] *** Quits: codemin (~codemin@69.167.19.187) (Client Quit)
[17:30:51] <theskillwithin> also it mutates i think
[17:31:03] *** Joins: zeromule (~eric@2601:602:8d80:4e50:959b:124d:6605:7afb)
[17:31:13] <RLa> yeah, fp guys would get triggered by this
[17:31:25] <theskillwithin> hey im fp guy
[17:31:37] <theskillwithin> 😋
[17:31:53] <RLa> that's why you pointed out that issue
[17:32:06] *** Joins: elastic_dog (~elastic_d@2a01:118f:822:9c00:f583:aa51:9ad4:d4fb)
[17:32:50] *** Joins: xon (~xon@host-110-net-65-160-119.mobilinkinfinity.net.pk)
[17:33:08] *** almost is now known as a1most
[17:35:52] *** Quits: zeromule (~eric@2601:602:8d80:4e50:959b:124d:6605:7afb) (Ping timeout: 252 seconds)
[17:37:35] *** Quits: xon (~xon@host-110-net-65-160-119.mobilinkinfinity.net.pk) (Ping timeout: 252 seconds)
[17:39:03] *** Quits: xb0o2 (~xb0o2@user/xb0o2) (Quit: Lost terminal)
[17:39:54] *** Joins: xon (~xon@host-110-net-65-160-119.mobilinkinfinity.net.pk)
[17:43:05] *** Quits: pulse (~pulse@user/pulse) (Ping timeout: 252 seconds)
[17:44:37] *** Quits: xon (~xon@host-110-net-65-160-119.mobilinkinfinity.net.pk) (Ping timeout: 252 seconds)
[17:46:17] *** Joins: xon (~xon@host-110-net-65-160-119.mobilinkinfinity.net.pk)
[17:50:47] *** Quits: xon (~xon@host-110-net-65-160-119.mobilinkinfinity.net.pk) (Ping timeout: 252 seconds)
[17:55:28] *** Joins: sickdyd (~sickd@120.51.82.69.ap.gmobb-fix.jp)
[17:57:41] *** Joins: xon (~xon@host-110-net-65-160-119.mobilinkinfinity.net.pk)
[17:58:57] <thykka> doesn't mutate the string though, just the result of split
[17:59:16] <thykka> sooo.. inconsequential?
[18:00:08] *** Quits: sickdyd (~sickd@120.51.82.69.ap.gmobb-fix.jp) (Ping timeout: 252 seconds)
[18:00:39] <RLa> thykka but
[18:00:44] <RLa> but it still mutates!
[18:02:27] *** Quits: xon (~xon@host-110-net-65-160-119.mobilinkinfinity.net.pk) (Ping timeout: 265 seconds)
[18:05:07] *** Joins: xon (~xon@host-110-net-65-160-119.mobilinkinfinity.net.pk)
[18:05:38] <theskillwithin> funny no one gave right answer
[18:08:38] *** Joins: X-Scale` (~ARM@83.223.233.176)
[18:09:10] <theskillwithin> demonstrate*
[18:09:13] *** Quits: X-Scale (~ARM@50.77.166.178.rev.vodafone.pt) (Ping timeout: 265 seconds)
[18:09:29] *** Quits: xon (~xon@host-110-net-65-160-119.mobilinkinfinity.net.pk) (Ping timeout: 252 seconds)
[18:10:23] *** Quits: stkrdknmibalz (~test@rrcs-75-87-43-226.sw.biz.rr.com) (Quit: WeeChat 3.0.1)
[18:10:38] *** X-Scale` is now known as X-Scale
[18:11:24] *** Joins: comatory (~ondrejsyn@217.11.241.69)
[18:12:03] <thykka> n> 'the quick. brown fox. jumped over the dog'.match(/\.(?<last>[\s\w]+)$/).groups.last.trim()
[18:12:03] <jellobot> (okay) 'jumped over the dog'
[18:13:14] *** Quits: banana_ (~banana_@user/banana/x-2944094) (Ping timeout: 260 seconds)
[18:14:09] <theskillwithin> Simplar 👆
[18:16:28] *** Quits: comatory (~ondrejsyn@217.11.241.69) (Ping timeout: 265 seconds)
[18:16:37] *** Joins: sam_1 (~sam_1@87.51.251.118)
[18:18:55] <theskillwithin> RLa what do you think?
[18:19:26] *** Joins: xon (~xon@host-110-net-65-160-119.mobilinkinfinity.net.pk)
[18:20:05] <RLa> does it also work when the dot is missing?
[18:20:42] <thykka> yes, then it won't select anything
[18:20:47] *** Quits: sam_1 (~sam_1@87.51.251.118) (Ping timeout: 240 seconds)
[18:20:53] <thykka> the requirement was "the text after the last dot"
[18:20:58] <thykka> without a dot, it cannot be fulfilled
[18:21:14] <thykka> here's a better regexp though: /\. (?<last>.[^\.]+)$/
[18:21:32] <thykka> it only forbids periods within the last sentence
[18:21:41] *** Quits: leduyquang753 (~leduyquan@user/leduyquang753) (Quit: Gotta go, see you guys later.)
[18:22:05] <RLa> I guess it works then
[18:22:16] <RLa> but regex is scary sometimes
[18:22:49] <thykka> yeess
[18:22:55] <thykka> regexr.com is a lifesaver
[18:23:40] <theskillwithin> good site
[18:24:12] *** Quits: xon (~xon@host-110-net-65-160-119.mobilinkinfinity.net.pk) (Ping timeout: 265 seconds)
[18:24:13] <theskillwithin> ya i prefer to do without regex if possible.  but sounds like agreement has been made
[18:29:08] *** Joins: yaalon (~yaalon@rrcs-72-131-195-82.sw.biz.rr.com)
[18:29:54] <theskillwithin> i mean consensus *
[18:30:58] *** Joins: wroathe (~wroathe@c-68-54-25-135.hsd1.mn.comcast.net)
[18:30:58] *** Quits: wroathe (~wroathe@c-68-54-25-135.hsd1.mn.comcast.net) (Changing host)
[18:30:58] *** Joins: wroathe (~wroathe@user/wroathe)
[18:34:00] *** Joins: xon (~xon@host-110-net-65-160-119.mobilinkinfinity.net.pk)
[18:35:15] *** Quits: yaalon (~yaalon@rrcs-72-131-195-82.sw.biz.rr.com) (Remote host closed the connection)
[18:35:34] *** Quits: fassl (~fassl@2a02:8388:1987:9380:f065:d411:4557:ccdf) (Quit: Leaving)
[18:35:40] *** Quits: trevors (~trevors@c-65-96-171-157.hsd1.ma.comcast.net) (Quit: My MacBook has gone to sleep. ZZZzzz…)
[18:38:34] *** Quits: xon (~xon@host-110-net-65-160-119.mobilinkinfinity.net.pk) (Ping timeout: 252 seconds)
[18:40:50] *** Quits: ArchNoob (~maotora@user/archnoob) (Ping timeout: 252 seconds)
[18:41:05] *** Joins: xon (~xon@host-110-net-65-160-119.mobilinkinfinity.net.pk)
[18:42:59] *** Joins: sed (~sed@pool-100-7-38-116.rcmdva.fios.verizon.net)
[18:43:05] *** Quits: terrorjack (~terrorjac@ec2-35-181-134-114.eu-west-3.compute.amazonaws.com) (Quit: The Lounge - https://thelounge.chat)
[18:45:32] *** Joins: terrorjack (~terrorjac@ec2-35-181-134-114.eu-west-3.compute.amazonaws.com)
[18:45:54] *** Quits: xon (~xon@host-110-net-65-160-119.mobilinkinfinity.net.pk) (Ping timeout: 260 seconds)
[18:47:51] *** Joins: xon (~xon@host-110-net-65-160-119.mobilinkinfinity.net.pk)
[18:52:04] *** Quits: terrorjack (~terrorjac@ec2-35-181-134-114.eu-west-3.compute.amazonaws.com) (Quit: The Lounge - https://thelounge.chat)
[18:52:43] *** Quits: xon (~xon@host-110-net-65-160-119.mobilinkinfinity.net.pk) (Ping timeout: 265 seconds)
[18:57:10] *** Joins: pkx (~pkx@user/pkx)
[18:57:54] *** Joins: Bishop_Bautista (~Bishop_Ba@174-087-246-009.res.spectrum.com)
[18:58:41] *** Joins: yaalon (~yaalon@rrcs-72-131-195-82.sw.biz.rr.com)
[19:03:46] *** Joins: terrorjack (~terrorjac@ec2-35-181-134-114.eu-west-3.compute.amazonaws.com)
[19:04:06] <Simplar> Guys using React, I have a rather odd question here.
[19:04:12] <Simplar> Here is my fiddle: https://jsfiddle.net/Simplar/vdotgqna/
[19:04:30] <Simplar> When I am doing requestAnimationFrame, seems like it doesn't refresh the state on updates from outside
[19:04:34] <Simplar> Why might it happen?
[19:05:16] *** Quits: fanis30 (~fanis30@adsl-213.37.6.3.tellas.gr) (Quit: WeeChat 3.2.1)
[19:05:33] <Simplar> I'm increasing that counter by a button but nothing happens while it's supposed to flood the console.
[19:05:50] <Simplar> (see the console inside JSFiddle)
[19:06:01] *** Quits: chenxuezhao (~chenxuezh@120.244.238.3) (Remote host closed the connection)
[19:06:33] *** Joins: xon (~xon@host-110-net-65-160-119.mobilinkinfinity.net.pk)
[19:06:37] *** Joins: chenxuezhao (~chenxuezh@120.244.238.3)
[19:10:15] *** Joins: gioyik (~gioyik@gateway/tor-sasl/gioyik)
[19:11:05] *** Quits: xon (~xon@host-110-net-65-160-119.mobilinkinfinity.net.pk) (Ping timeout: 265 seconds)
[19:11:34] *** Quits: chenxuezhao (~chenxuezh@120.244.238.3) (Ping timeout: 265 seconds)
[19:11:43] *** Joins: banana_ (~banana_@user/banana/x-2944094)
[19:12:19] *** Joins: mat001 (~mat001@c-73-223-64-126.hsd1.ca.comcast.net)
[19:13:01] *** Joins: xon (~xon@host-110-net-65-160-119.mobilinkinfinity.net.pk)
[19:13:28] <Simplar> If I am adding useEffect requesting yet another animation frame, it seems to update the state, however...
[19:13:38] <Simplar> ...it doesn't disable old animation frame requester
[19:14:32] *** Joins: trevors (~trevors@c-65-96-171-157.hsd1.ma.comcast.net)
[19:14:47] *** Quits: trevors (~trevors@c-65-96-171-157.hsd1.ma.comcast.net) (Client Quit)
[19:15:01] <domhnall> verdict (fwiw) is VSCode for JS and Node.
[19:15:22] *** Quits: mat001_ (~mat001@c-73-223-64-126.hsd1.ca.comcast.net) (Ping timeout: 252 seconds)
[19:15:38] <domhnall> oops, didn't realize I was replying to something from hrs ago... nevermind.
[19:16:01] <domhnall> bomb: ^
[19:16:29] *** Joins: trevors (~trevors@c-65-96-171-157.hsd1.ma.comcast.net)
[19:17:07] *** Quits: xon (~xon@host-110-net-65-160-119.mobilinkinfinity.net.pk) (Ping timeout: 240 seconds)
[19:17:19] <bomb> domhnall: it's fine :)
[19:17:33] *** Quits: fjmorazan (~quassel@user/fjmorazan) (Quit: fjmorazan)
[19:18:43] *** Quits: terrorjack (~terrorjac@ec2-35-181-134-114.eu-west-3.compute.amazonaws.com) (Quit: The Lounge - https://thelounge.chat)
[19:19:27] *** Joins: xon (~xon@host-110-net-65-160-119.mobilinkinfinity.net.pk)
[19:20:28] *** Joins: hnOsmium0001 (uid453710@id-453710.hampstead.irccloud.com)
[19:24:10] *** Quits: xon (~xon@host-110-net-65-160-119.mobilinkinfinity.net.pk) (Ping timeout: 252 seconds)
[19:26:19] *** Joins: Huitzilopochtli (~ronnie@45.64.220.217)
[19:26:48] *** Joins: xon (~xon@host-110-net-65-160-119.mobilinkinfinity.net.pk)
[19:28:00] *** Quits: keypusher (keypusher@user/keypusher) (Ping timeout: 265 seconds)
[19:29:56] *** Quits: gggpkm (~gggpkm@111-251-148-94.dynamic-ip.hinet.net) (Ping timeout: 265 seconds)
[19:29:58] *** Quits: banana_ (~banana_@user/banana/x-2944094) (Ping timeout: 250 seconds)
[19:31:26] *** Quits: xon (~xon@host-110-net-65-160-119.mobilinkinfinity.net.pk) (Ping timeout: 252 seconds)
[19:31:58] *** Joins: nomic (~nomic@85.203.36.16)
[19:32:19] *** Quits: yaalon (~yaalon@rrcs-72-131-195-82.sw.biz.rr.com) (Remote host closed the connection)
[19:34:04] *** Joins: xon (~xon@host-110-net-65-160-119.mobilinkinfinity.net.pk)
[19:34:07] *** Quits: Guest3387 (~Guest3387@115.134.135.90) (Remote host closed the connection)
[19:34:24] *** Joins: keypusher (keypusher@user/keypusher)
[19:35:06] *** Quits: xiongxin (~quassel@113.116.34.58) (Quit: https://quassel-irc.org - Chat comfortably. Anywhere.)
[19:35:42] *** Joins: fjmorazan (~quassel@user/fjmorazan)
[19:36:06] *** Joins: xb0o2 (~xb0o2@user/xb0o2)
[19:36:56] *** Quits: Huitzilopochtli (~ronnie@45.64.220.217) (Remote host closed the connection)
[19:38:35] *** Quits: xon (~xon@host-110-net-65-160-119.mobilinkinfinity.net.pk) (Ping timeout: 252 seconds)
[19:39:15] *** Quits: nomic (~nomic@85.203.36.16) (Quit: Leaving)
[19:41:38] *** Joins: xon (~xon@host-110-net-65-160-119.mobilinkinfinity.net.pk)
[19:41:59] *** Joins: nomic (~nomic@185.192.69.192)
[19:46:09] *** Joins: Gustavo6046 (~Gustavo60@user/gustavo6046)
[19:46:17] *** Quits: xon (~xon@host-110-net-65-160-119.mobilinkinfinity.net.pk) (Ping timeout: 252 seconds)
[19:48:11] *** Joins: xon (~xon@host-110-net-65-160-119.mobilinkinfinity.net.pk)
[19:51:41] *** Quits: Bishop_Bautista (~Bishop_Ba@174-087-246-009.res.spectrum.com) (Quit: My iMac has gone to sleep. ZZZzzz…)
[19:52:46] *** Quits: xon (~xon@host-110-net-65-160-119.mobilinkinfinity.net.pk) (Ping timeout: 252 seconds)
[19:53:08] *** Joins: banana_ (~banana_@user/banana/x-2944094)
[19:54:58] *** Joins: xon (~xon@host-110-net-65-160-119.mobilinkinfinity.net.pk)
[19:56:21] *** Joins: jazzy (~jaziz@2600:380:854a:af07:5c15:5702:68a5:4b72)
[19:57:05] *** Joins: sickdyd (~sickd@120.51.82.69.ap.gmobb-fix.jp)
[19:58:48] *** Joins: The_Blode (~Blode@user/the-blode/x-7164444)
[19:59:54] *** Quits: xon (~xon@host-110-net-65-160-119.mobilinkinfinity.net.pk) (Ping timeout: 265 seconds)
[20:01:56] *** Joins: Rockwood (~Rocky@user/rocky)
[20:02:19] *** Quits: sickdyd (~sickd@120.51.82.69.ap.gmobb-fix.jp) (Ping timeout: 265 seconds)
[20:02:43] *** Joins: xon (~xon@host-110-net-65-160-119.mobilinkinfinity.net.pk)
[20:04:45] *** Quits: sizeof_void34 (~Thunderbi@109-252-124-86.nat.spd-mgts.ru) (Quit: sizeof_void34)
[20:05:19] *** Joins: xon_ (~xon@host-110-net-65-160-119.mobilinkinfinity.net.pk)
[20:06:11] *** Quits: xb0o2 (~xb0o2@user/xb0o2) (Quit: Lost terminal)
[20:07:07] *** Quits: xon (~xon@host-110-net-65-160-119.mobilinkinfinity.net.pk) (Ping timeout: 252 seconds)
[20:09:08] *** Joins: zeromule (~eric@2601:602:8d80:4e50:959b:124d:6605:7afb)
[20:09:56] *** Quits: xon_ (~xon@host-110-net-65-160-119.mobilinkinfinity.net.pk) (Ping timeout: 252 seconds)
[20:12:43] *** Joins: xon (~xon@host-110-net-65-160-119.mobilinkinfinity.net.pk)
[20:14:26] *** Quits: hax (~hax@user/hax) (Remote host closed the connection)
[20:15:21] *** Joins: gustik (~gustik@2a01:c844:2410:9020:63ab:4bb6:83d2:e11b)
[20:16:35] *** Joins: yaalon (~yaalon@2603-8081-7002-fce2-0543-cf65-18bf-cccc.res6.spectrum.com)
[20:17:10] <Rockwood> hi
[20:17:16] <Rockwood> any active?
[20:17:18] *** Quits: xon (~xon@host-110-net-65-160-119.mobilinkinfinity.net.pk) (Ping timeout: 265 seconds)
[20:17:26] <Rockwood> any where :D
[20:17:41] *** Quits: yaalon (~yaalon@2603-8081-7002-fce2-0543-cf65-18bf-cccc.res6.spectrum.com) (Remote host closed the connection)
[20:19:46] *** Joins: xon (~xon@host-110-net-65-160-119.mobilinkinfinity.net.pk)
[20:20:34] *** Joins: plotinus (~plotinus@122.175.247.240)
[20:22:15] *** Quits: cth (~Cthulchu@193.194.107.250) (Remote host closed the connection)
[20:23:53] *** Joins: xb0o2 (~xb0o2@user/xb0o2)
[20:24:33] *** Quits: xon (~xon@host-110-net-65-160-119.mobilinkinfinity.net.pk) (Ping timeout: 265 seconds)
[20:26:35] *** Joins: Drgonz0 (~Drgonz0@107-179-254-222.cpe.teksavvy.com)
[20:28:13] *** Joins: xon (~xon@host-110-net-65-160-119.mobilinkinfinity.net.pk)
[20:28:15] *** Joins: yaalon (~yaalon@2603-8081-7002-fce2-0543-cf65-18bf-cccc.res6.spectrum.com)
[20:31:19] *** Quits: wroathe (~wroathe@user/wroathe) (Ping timeout: 252 seconds)
[20:31:36] *** Quits: gioyik (~gioyik@gateway/tor-sasl/gioyik) (Ping timeout: 276 seconds)
[20:32:55] *** Quits: xon (~xon@host-110-net-65-160-119.mobilinkinfinity.net.pk) (Ping timeout: 252 seconds)
[20:33:42] <Rockwood> lol
[20:35:38] *** Joins: xon (~xon@host-110-net-65-160-119.mobilinkinfinity.net.pk)
[20:37:40] *** Quits: bob_x1 (~bob_x@gateway/tor-sasl/bobx1/x-26457072) (Remote host closed the connection)
[20:38:00] *** Joins: bob_x1 (~bob_x@gateway/tor-sasl/bobx1/x-26457072)
[20:39:41] <Simplar> Rockwood: me
[20:39:54] *** Joins: bob_x2 (~bob_x@gateway/tor-sasl/bobx1/x-26457072)
[20:40:14] *** Quits: xon (~xon@host-110-net-65-160-119.mobilinkinfinity.net.pk) (Ping timeout: 260 seconds)
[20:40:18] *** Quits: bob_x1 (~bob_x@gateway/tor-sasl/bobx1/x-26457072) (Remote host closed the connection)
[20:41:19] *** Quits: rewrit3 (~rewrit3@user/rewrit3) (Remote host closed the connection)
[20:41:28] *** Quits: CiaoSen (~Jura@p2e5c6ba6.dip0.t-ipconnect.de) (Ping timeout: 265 seconds)
[20:42:44] *** Joins: xon (~xon@host-110-net-65-160-119.mobilinkinfinity.net.pk)
[20:43:27] <Rockwood> sure? :D
[20:45:22] *** Quits: zeromule (~eric@2601:602:8d80:4e50:959b:124d:6605:7afb) (Ping timeout: 250 seconds)
[20:47:14] *** Quits: xon (~xon@host-110-net-65-160-119.mobilinkinfinity.net.pk) (Ping timeout: 260 seconds)
[20:48:07] *** Joins: wroathe (~wroathe@c-68-54-25-135.hsd1.mn.comcast.net)
[20:48:07] *** Quits: wroathe (~wroathe@c-68-54-25-135.hsd1.mn.comcast.net) (Changing host)
[20:48:07] *** Joins: wroathe (~wroathe@user/wroathe)
[20:49:27] *** Joins: xon (~xon@host-110-net-65-160-119.mobilinkinfinity.net.pk)
[20:50:56] *** Quits: silly (~silly@user/silly) (Read error: Connection reset by peer)
[20:53:04] *** Quits: wroathe (~wroathe@user/wroathe) (Ping timeout: 265 seconds)
[20:54:14] *** Quits: xon (~xon@host-110-net-65-160-119.mobilinkinfinity.net.pk) (Ping timeout: 260 seconds)
[20:55:46] *** Joins: xon (~xon@host-110-net-65-160-119.mobilinkinfinity.net.pk)
[21:00:19] *** Quits: xon (~xon@host-110-net-65-160-119.mobilinkinfinity.net.pk) (Ping timeout: 265 seconds)
[21:01:01] *** Joins: justsomeguy (~justsomeg@user/justsomeguy)
[21:01:16] *** Joins: zeromule (~eric@2601:602:8d80:4e50:adcc:9781:24b4:4ff)
[21:01:33] *** Joins: silly (~silly@user/silly)
[21:02:03] *** Joins: xon (~xon@host-110-net-65-160-119.mobilinkinfinity.net.pk)
[21:03:47] *** Joins: gioyik (~gioyik@gateway/tor-sasl/gioyik)
[21:04:34] *** Quits: farmstatejake (~farmstate@user/farmstatejake) (Remote host closed the connection)
[21:05:29] *** Joins: voltage_ (voltage@user/voltage)
[21:06:28] *** Quits: xon (~xon@host-110-net-65-160-119.mobilinkinfinity.net.pk) (Ping timeout: 252 seconds)
[21:06:32] *** Joins: farmstatejake (~farmstate@user/farmstatejake)
[21:07:07] <justsomeguy> Is there a way to query the type signatures (or something that shows the input parameters and output) of different built-in methods, like Array.prototype.push? I was thinking that typescript or some other project would catalog this stuff...
[21:10:36] *** Quits: gioyik (~gioyik@gateway/tor-sasl/gioyik) (Ping timeout: 276 seconds)
[21:11:00] *** Quits: Rockwood (~Rocky@user/rocky) (Quit: The Time is Over)
[21:14:13] *** Quits: elastic_dog (~elastic_d@2a01:118f:822:9c00:f583:aa51:9ad4:d4fb) (Ping timeout: 252 seconds)
[21:18:00] *** Quits: plotinus (~plotinus@122.175.247.240) (Quit: leaving)
[21:20:01] *** Joins: elastic_dog (~elastic_d@2a01:118f:822:9c00:f583:aa51:9ad4:d4fb)
[21:20:21] <justsomeguy> It seems like the answer to my question is "if you want to look up type signatures, install typescript and hover over the method you're interested in vscode".
[21:20:39] *** Quits: yaalon (~yaalon@2603-8081-7002-fce2-0543-cf65-18bf-cccc.res6.spectrum.com) (Remote host closed the connection)
[21:21:01] <justsomeguy> I was hoping that information, or something like it, would be the first line of the mdn docs, or in the ecmascript standard.
[21:22:00] <justsomeguy> ...but I've been having the mind-bending experience of trying to use several very different programming languages at the same time, so my expectations are probably not well grounded...
[21:23:32] *** Joins: stkrdknmibalz (~test@rrcs-75-87-43-226.sw.biz.rr.com)
[21:24:00] *** Quits: \mSg (~mSg@user/msg/x-0285936) (Ping timeout: 265 seconds)
[21:26:07] *** Quits: llorllale (~llorllale@2607:9880:3a18:69:c420:6d94:fde4:9ca) (Ping timeout: 240 seconds)
[21:27:46] *** Joins: yaalon (~yaalon@2603-8081-7002-fce2-0543-cf65-18bf-cccc.res6.spectrum.com)
[21:28:23] *** Quits: Simplar (~quassel@188.163.92.105) (Quit: https://quassel-irc.org - Chat comfortably. Anywhere.)
[21:31:30] <justsomeguy> Oh, it is in the mdn docs, and I'm just an idiot.
[21:31:44] <justsomeguy> figures ^_^
[21:31:53] *** Quits: i0e (~is0ke3@user/is0ke3) (Ping timeout: 252 seconds)
[21:32:10] *** Quits: silly (~silly@user/silly) (Read error: Connection reset by peer)
[21:32:13] <bomb> don't worry I'm probably dumber
[21:32:19] *** Quits: thiras (~thiras@user/thiras) (Ping timeout: 252 seconds)
[21:32:45] *** Joins: sam_1 (~sam_1@87.51.251.118)
[21:33:23] *** Quits: tex (~dee@user/dix) (Quit: Konversation terminated!)
[21:34:19] *** Quits: gustik (~gustik@2a01:c844:2410:9020:63ab:4bb6:83d2:e11b) (Quit: Leaving)
[21:35:37] *** Quits: nomic (~nomic@185.192.69.192) (Quit: Leaving)
[21:37:22] *** Quits: banana_ (~banana_@user/banana/x-2944094) (Ping timeout: 250 seconds)
[21:37:32] *** Quits: sam_1 (~sam_1@87.51.251.118) (Ping timeout: 265 seconds)
[21:37:33] *** Joins: silly (~silly@user/silly)
[21:38:07] *** Joins: silly_ (~silly@user/silly)
[21:39:59] *** Joins: ArchNoob (~maotora@user/archnoob)
[21:42:18] *** Quits: silly (~silly@user/silly) (Ping timeout: 260 seconds)
[21:43:00] *** Quits: justsomeguy (~justsomeg@user/justsomeguy) (Ping timeout: 250 seconds)
[21:43:31] *** Quits: hakeem (~hakeem@user/hakeem) (Quit: Remote host closed the connection)
[21:44:54] *** Joins: i0e (~is0ke3@user/is0ke3)
[21:45:32] *** Joins: hakeem (~hakeem@user/hakeem)
[21:46:05] *** Quits: i0e (~is0ke3@user/is0ke3) (Client Quit)
[21:48:34] *** Joins: pulse (~pulse@user/pulse)
[21:49:34] *** Quits: earendel (uid498179@user/earendel) (Quit: Connection closed for inactivity)
[21:49:39] *** Joins: Northwoods (~Northwood@202.14.122.53)
[21:49:51] *** Joins: nomic (~nomic@2a00:23c6:9902:2401:5149:a5ce:137d:974d)
[21:51:09] *** Joins: Huitzilopochtli (~ronnie@45.64.220.217)
[21:57:02] *** Joins: nomic2 (~nomic@2a00:23c6:9902:2401:5149:a5ce:137d:974d)
[21:58:19] *** Quits: yaalon (~yaalon@2603-8081-7002-fce2-0543-cf65-18bf-cccc.res6.spectrum.com) ()
[21:58:25] *** Quits: Heraes (~Heraes@user/romarain) (Quit: Leaving)
[21:58:42] *** Quits: nomic2 (~nomic@2a00:23c6:9902:2401:5149:a5ce:137d:974d) (Read error: Connection reset by peer)
[21:58:45] *** Joins: sickdyd (~sickd@120.51.82.69.ap.gmobb-fix.jp)
[21:59:01] *** Joins: nomic2 (~nomic@2a00:23c6:9902:2401:5149:a5ce:137d:974d)
[21:59:47] *** Quits: nomic (~nomic@2a00:23c6:9902:2401:5149:a5ce:137d:974d) (Ping timeout: 268 seconds)
[22:00:19] *** Joins: blei (~blei@209.201.38.106)
[22:01:55] <blei> i am running a function that takes a callback. inside the callback i need to run another function until an object property is Success, could take an arbitrarily long time
[22:03:40] *** Quits: sickdyd (~sickd@120.51.82.69.ap.gmobb-fix.jp) (Ping timeout: 252 seconds)
[22:05:19] <ljharb> justache: there's no universal type notation that would really cover that
[22:05:28] <ljharb> justache: mdn has something tho yeah
[22:05:49] <ljharb> justache: you can also look at TS's type defs, but they're pretty overly broad and sometimes broken
[22:06:20] *** Joins: gioyik (~gioyik@gateway/tor-sasl/gioyik)
[22:07:35] *** Joins: Heraes (~Heraes@119.12.203.77.rev.sfr.net)
[22:07:35] *** Quits: Heraes (~Heraes@119.12.203.77.rev.sfr.net) (Changing host)
[22:07:35] *** Joins: Heraes (~Heraes@user/romarain)
[22:09:50] <Ownix> Im getting an error "CloudTables is not a constructor" when inspecting, I see it is actually an object with a function called "default" https://usercontent.irccloud-cdn.com/file/uLn6BbJX/image.png
[22:10:09] <Ownix> Why did the import not import the default here? The library docs show the way I am using it, is supposed to be the correct way.
[22:10:17] *** Joins: han-solo (~hanish@user/han-solo)
[22:10:45] <Ownix> Node version is v15.14.0, I named my file inex.mjs to have node load it as a module so I could use import.
[22:11:42] *** Quits: gioyik (~gioyik@gateway/tor-sasl/gioyik) (Ping timeout: 276 seconds)
[22:12:58] *** Joins: comatory (~ondrejsyn@217.11.241.69)
[22:13:26] <Ownix> Also before anyone points out that there are credentials in my screenshot, its free and does not require an account and I already deleted and re-created those creds.
[22:15:59] *** Joins: yaalon (~yaalon@2603-8081-7002-fce2-0543-cf65-18bf-cccc.res6.spectrum.com)
[22:17:28] *** Quits: comatory (~ondrejsyn@217.11.241.69) (Ping timeout: 252 seconds)
[22:23:31] *** Joins: \mSg (mSg@user/msg/x-0285936)
[22:24:12] *** Joins: cthulchu (~Cthulchu@193.194.107.250)
[22:24:59] *** Quits: Huitzilopochtli (~ronnie@45.64.220.217) (Quit: WeeChat 3.2)
[22:25:29] *** Quits: zeromule (~eric@2601:602:8d80:4e50:adcc:9781:24b4:4ff) (Ping timeout: 250 seconds)
[22:26:36] *** Quits: trevors (~trevors@c-65-96-171-157.hsd1.ma.comcast.net) (Quit: My MacBook has gone to sleep. ZZZzzz…)
[22:27:12] <Ownix> Figured it out, it only works with TypeScript that way
[22:27:23] *** Joins: gioyik (~gioyik@gateway/tor-sasl/gioyik)
[22:29:52] *** Joins: WishBoy (~WishBoy@user/wishboy)
[22:30:43] *** Joins: nomic (~nomic@85.203.36.16)
[22:30:53] *** Quits: nomic2 (~nomic@2a00:23c6:9902:2401:5149:a5ce:137d:974d) (Quit: Leaving)
[22:30:59] *** Quits: nomic (~nomic@85.203.36.16) (Client Quit)
[22:31:05] *** Quits: WishBoy (~WishBoy@user/wishboy) (Client Quit)
[22:32:30] *** Quits: gioyik (~gioyik@gateway/tor-sasl/gioyik) (Ping timeout: 276 seconds)
[22:33:29] *** Joins: nomic (~nomic@85.203.36.16)
[22:36:27] <hassoon> wtf i closed the yt chrome tab and the video is still playing
[22:36:38] <hassoon> i can hear the video sound
[22:36:44] <APic> ;=P
[22:36:53] <bomb> welcome to Linux multimedia :)
[22:36:55] <hassoon> wth is that
[22:37:00] <hassoon> bomb: ya i use linux
[22:37:21] <bomb> kill pulseaudio
[22:37:45] <hassoon> nah not something related to pulseaudio
[22:37:48] <hassoon> but to the browser
[22:38:02] <hassoon> pa just takes care of the machine sound
[22:38:16] <bomb> wat
[22:38:19] <bomb> Chrome uses PA
[22:39:45] <hassoon> doesnt make pa the reason for not stopping the video
[22:39:52] <hassoon> it just plays sound emitted by chrome
[22:40:08] <hassoon> and chrome is what's playing the video for you
[22:40:12] *** Joins: Sven_vB (~sven@user/sven-vb/x-2094958)
[22:40:24] <hassoon> anyway pkilling chrome shutted the whole noise
[22:42:16] <bomb> I'm not interested who was responsible for the mess, I just wanted to help you
[22:42:28] <bomb> silly me. I thought we'd be friends.
[22:42:42] <hassoon> eww cute
[22:42:47] <hassoon> we ccan be freidns no problem
[22:42:52] <hassoon> let's hold hands
[22:42:57] <bomb> okay :)
[22:42:58] <hassoon> * friends *
[22:43:17] *** Quits: blei (~blei@209.201.38.106) (Quit: Client closed)
[22:45:28] *** Quits: Heraes (~Heraes@user/romarain) (Quit: Leaving)
[22:46:07] *** Joins: zeromule (~eric@2601:602:8d80:4e50:3db9:ee1f:981a:8408)
[22:46:18] <bomb> yay
[22:47:00] *** Joins: haniaF_ (~haniaF@79.191.137.89.ipv4.supernova.orange.pl)
[22:47:10] *** Quits: haniaF (~haniaF@83.24.226.252.ipv4.supernova.orange.pl) (Ping timeout: 260 seconds)
[22:48:36] *** Quits: nomic (~nomic@85.203.36.16) (Quit: Leaving)
[22:50:16] *** Joins: sheetjs (~sheetjs@user/sheetjs)
[22:50:54] *** Quits: sed (~sed@pool-100-7-38-116.rcmdva.fios.verizon.net) (Ping timeout: 260 seconds)
[22:52:19] *** Joins: onosendi (~onosendi@user/onosendi)
[22:52:52] *** Joins: CiaoSen (~Jura@p2e5c6ba6.dip0.t-ipconnect.de)
[22:53:30] *** Quits: yaalon (~yaalon@2603-8081-7002-fce2-0543-cf65-18bf-cccc.res6.spectrum.com) (Remote host closed the connection)
[22:56:19] *** Joins: yaalon (~yaalon@2603-8081-7002-fce2-0543-cf65-18bf-cccc.res6.spectrum.com)
[23:00:12] *** Joins: gioyik (~gioyik@gateway/tor-sasl/gioyik)
[23:14:01] *** Joins: jmft2 (~jmft2@213.31.248.255)
[23:14:54] *** Joins: zer0bitz (~zer0bitz@dsl-hkibng31-54fafc-123.dhcp.inet.fi)
[23:20:20] <sheetjs> is svg "green" the same as css green?
[23:21:24] <hassoon> in term of what
[23:21:36] *** Joins: xon (~xon@host-110-net-65-160-119.mobilinkinfinity.net.pk)
[23:26:17] *** Quits: xon (~xon@host-110-net-65-160-119.mobilinkinfinity.net.pk) (Ping timeout: 252 seconds)
[23:26:17] *** Quits: pulse (~pulse@user/pulse) (Ping timeout: 252 seconds)
[23:26:50] *** Quits: Tobbi (~Tobbi@2a02:8108:1240:48ec:ed74:9c57:cb8f:fb23) (Ping timeout: 260 seconds)
[23:27:06] <sheetjs> nvm its coming from elsewhere.  DOT "green".  graphviz -> png is using #00FF00 while graphviz -> svg is using "green" (#008000)
[23:27:50] *** Joins: Tobbi (~Tobbi@2a02:8108:1240:48ec:d8e0:e013:323b:13c9)
[23:29:08] <bomb> I interpret green as weed. deal with it
[23:29:17] *** Quits: salad (~cucumber@86.121.64.41) (Quit: salad)
[23:31:24] *** Joins: KDev (~KDev@cpe-98-10-64-75.rochester.res.rr.com)
[23:31:37] *** Quits: iomari891 (~iomari891@105.112.138.38) (Quit: WeeChat 3.0.1)
[23:38:40] *** Quits: bob_x2 (~bob_x@gateway/tor-sasl/bobx1/x-26457072) (Remote host closed the connection)
[23:39:01] *** Joins: bob_x2 (~bob_x@gateway/tor-sasl/bobx1/x-26457072)
[23:40:09] *** Quits: onosendi (~onosendi@user/onosendi) (Quit: WeeChat 3.2.1)
[23:42:23] *** Quits: RLa (~RLa@82.131.24.108.cable.starman.ee) (Quit: Client closed)
[23:45:18] *** Joins: sed (~sed@pool-100-7-38-116.rcmdva.fios.verizon.net)
[23:45:24] *** Joins: zyweo (~Svew@user/zyweo)
[23:47:17] *** Quits: KDev (~KDev@cpe-98-10-64-75.rochester.res.rr.com) (Quit: Leaving)
[23:47:43] *** Joins: electr0n (~electr0n@about/security/founder/electr0n)
[23:49:22] *** Joins: WishBoy (~WishBoy@user/wishboy)
[23:52:30] *** Quits: Pixi (~Pixi@user/pixi) (Ping timeout: 260 seconds)
[23:53:59] <theskillwithin> join #libera-cloak and say !cloakme to hide your ip
[23:55:58] *** Joins: trevors (~trevors@c-65-96-171-157.hsd1.ma.comcast.net)
[23:57:42] *** Quits: sed (~sed@pool-100-7-38-116.rcmdva.fios.verizon.net) (Ping timeout: 265 seconds)
[23:58:34] *** Quits: zeromule (~eric@2601:602:8d80:4e50:3db9:ee1f:981a:8408) (Ping timeout: 260 seconds)
