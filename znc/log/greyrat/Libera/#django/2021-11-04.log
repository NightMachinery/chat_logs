[00:07:35] *** Quits: kostkon (~kostkon@2a02:587:a115:b544:bb56:c21f:3bea:4fdd) (Ping timeout: 268 seconds)
[00:08:01] *** Joins: kostkon (~kostkon@ppp-94-65-184-168.home.otenet.gr)
[00:15:13] *** Joins: niv (~niv@limbo.cypherpunks.io)
[00:28:51] <dre> I'm not the greatest with django ._.
[00:29:33] <LordKalma> do you have any suggestions/guides on deploying django *safely*
[00:29:41] <LordKalma> particularly with docker
[00:29:53] <LordKalma> I can add https with my apache vhosts in front, no propblem
[00:31:10] *** Quits: gitly (~gitly@85.255.235.111) (Ping timeout: 260 seconds)
[00:33:14] *** Joins: gitly (~gitly@148.252.129.121)
[00:37:48] *** Joins: dor (~erg@78.11.12.207)
[00:38:35] *** Quits: explore (uid233125@id-233125.hampstead.irccloud.com) (Quit: Connection closed for inactivity)
[00:42:59] *** Quits: gitly (~gitly@148.252.129.121) (Ping timeout: 264 seconds)
[00:43:25] *** Quits: dor (~erg@78.11.12.207) (Remote host closed the connection)
[00:43:46] *** Joins: kostkon_ (~kostkon@2a02:587:a103:d978:5295:bed9:537c:26c4)
[00:44:40] *** Joins: gitly (~gitly@148.252.132.132)
[00:44:46] *** Quits: kostkon (~kostkon@ppp-94-65-184-168.home.otenet.gr) (Ping timeout: 260 seconds)
[00:45:48] *** Quits: AnselmoCampanas (~AnselmoCa@190.99.69.41) (Quit: Client closed)
[00:46:10] *** Quits: fikran (~fikran@user/fikran) (Ping timeout: 260 seconds)
[00:47:51] *** Joins: fikran (~fikran@user/fikran)
[00:48:18] *** Joins: rje_ (~rje@65.141.156.170)
[00:50:22] *** Quits: rje (~rje@65.141.156.170) (Ping timeout: 260 seconds)
[00:54:36] *** Joins: pbgc (~textual@a89-152-151-24.cpe.netcabo.pt)
[00:55:07] *** Quits: stdout (~stdout@216.163.21.11) (Quit: Leaving)
[00:55:21] *** Quits: pbgc (~textual@a89-152-151-24.cpe.netcabo.pt) (Client Quit)
[01:00:14] *** Quits: segfaultbanana (~segfaultb@user/segfaultbanana) (Remote host closed the connection)
[01:00:57] *** Joins: Harlin (~DonQixote@75-163-188-12.clsp.qwest.net)
[01:21:11] *** Quits: Tas-sos (~Tas-sos@78-45-241.adsl.cyta.gr) (Quit: Lost terminal)
[01:33:52] *** Joins: segfaultbanana (~segfaultb@user/segfaultbanana)
[01:33:57] *** Joins: The_Jag (~The_Jag@host-79-33-167-46.retail.telecomitalia.it)
[01:35:35] *** Quits: kostkon_ (~kostkon@2a02:587:a103:d978:5295:bed9:537c:26c4) (Read error: Connection reset by peer)
[01:35:54] *** Joins: kostkon_ (~kostkon@2a02:587:a103:d978:5295:bed9:537c:26c4)
[01:49:22] *** Joins: bitdex (~bitdex@gateway/tor-sasl/bitdex)
[01:50:00] *** Joins: AnselmoCampanas (~AnselmoCa@190.99.69.41)
[02:05:03] *** Quits: masta`` (~oyster@user/masta/x-2645138) (Read error: Connection reset by peer)
[02:20:57] *** Quits: Haudegen (~quassel@178.115.237.87.static.drei.at) (Quit: No Ping reply in 180 seconds.)
[02:25:55] <hyper_dave> So I have been working on a project with a model having a timestamp column. I wanted to do something like model.filter(a=1,b=2).order_by('-timestamp').first() and I added index to a b and timestamp. It is still slow.
[02:26:55] *** Quits: Staunch (~Staunch@c-24-7-237-208.hsd1.mn.comcast.net) (Remote host closed the connection)
[02:30:27] <dang`r`us> hyper_dave, "still"?
[02:31:52] <dang`r`us> ah sorry
[02:31:58] <dang`r`us> missed the index part
[02:32:03] <dang`r`us>  what does the query planner say?
[02:34:26] *** Quits: segfaultbanana (~segfaultb@user/segfaultbanana) (Ping timeout: 260 seconds)
[02:35:11] <hyper_dave> Sorting takes too long
[02:36:01] <dang`r`us> what does the query planner say?
[02:36:41] <dang`r`us> aka https://docs.djangoproject.com/en/3.2/ref/models/querysets/#explain
[02:38:32] *** Quits: AnselmoCampanas (~AnselmoCa@190.99.69.41) (Ping timeout: 256 seconds)
[02:39:48] <dang`r`us> you might also need to add an index on (a,b)
[02:45:22] *** Quits: humanBird (~humanBird@2603-8001-7003-5966-7476-bfbe-9dd0-89f5.res6.spectrum.com) (Quit: Client closed)
[02:48:10] *** Joins: segfaultbanana (~segfaultb@user/segfaultbanana)
[02:48:50] *** Quits: knbk (~quassel@84-24-92-123.cable.dynamic.v4.ziggo.nl) (Ping timeout: 260 seconds)
[02:54:41] *** Quits: segfaultbanana (~segfaultb@user/segfaultbanana) (Ping timeout: 268 seconds)
[02:54:41] *** Quits: fikran (~fikran@user/fikran) (Ping timeout: 268 seconds)
[02:56:12] *** Joins: fikran (~fikran@user/fikran)
[02:57:47] <schinckel> Yeah, seems like you'd want to look at the query (and what the planner says), and see what index you can add to improve porfermance.
[03:05:19] *** Quits: Donitz (~Donitz@85-156-203-108.elisa-laajakaista.fi) (Ping timeout: 265 seconds)
[03:07:09] *** Joins: Donitz (~Donitz@88-115-149-152.elisa-laajakaista.fi)
[03:08:16] *** Quits: slav0nic (slav0nic@python.su) (Ping timeout: 268 seconds)
[03:09:54] *** Joins: segfaultbanana (~segfaultb@user/segfaultbanana)
[03:14:26] *** Quits: segfaultbanana (~segfaultb@user/segfaultbanana) (Ping timeout: 268 seconds)
[03:16:23] *** Joins: yuesbeez (uid458354@id-458354.tinside.irccloud.com)
[03:29:14] *** Joins: segfaultbanana (~segfaultb@user/segfaultbanana)
[03:40:27] *** Quits: rpkilby (~rpkilby@c-24-20-208-106.hsd1.or.comcast.net) (Remote host closed the connection)
[03:42:34] *** Quits: rje_ (~rje@65.141.156.170) (Quit: My computer has gone to sleep. ZZZzzz…)
[03:44:36] *** Joins: rpkilby (~rpkilby@c-24-20-208-106.hsd1.or.comcast.net)
[03:46:09] *** Joins: PantelicGR (~PantelicG@user/pantelicgr)
[03:49:06] *** Quits: rpkilby (~rpkilby@c-24-20-208-106.hsd1.or.comcast.net) (Ping timeout: 260 seconds)
[04:08:45] *** Joins: rpkilby (~rpkilby@c-24-20-208-106.hsd1.or.comcast.net)
[04:08:49] *** Quits: rpkilby (~rpkilby@c-24-20-208-106.hsd1.or.comcast.net) (Remote host closed the connection)
[04:10:54] *** Quits: segfaultbanana (~segfaultb@user/segfaultbanana) (Remote host closed the connection)
[04:11:10] *** Joins: segfaultbanana (~segfaultb@user/segfaultbanana)
[04:15:20] *** Quits: Xof (~Xof@157-131-136-66.dedicated.static.sonic.net) (Quit: Bye.)
[04:16:32] *** Joins: rje (~rje@50.35.241.164)
[04:18:39] *** Joins: thiras (~thiras@user/thiras)
[04:32:51] *** Quits: The_Jag (~The_Jag@host-79-33-167-46.retail.telecomitalia.it) (Quit: The_Jag)
[04:33:05] *** Quits: kostkon_ (~kostkon@2a02:587:a103:d978:5295:bed9:537c:26c4) (Remote host closed the connection)
[04:33:35] *** Joins: pmcnabb9 (~pmcnabb@user/pmcnabb)
[04:33:42] *** Joins: kostkon_ (~kostkon@2a02:587:a103:d978:5295:bed9:537c:26c4)
[04:34:35] *** Quits: kostkon_ (~kostkon@2a02:587:a103:d978:5295:bed9:537c:26c4) (Remote host closed the connection)
[04:37:02] *** Quits: pmcnabb (~pmcnabb@user/pmcnabb) (Ping timeout: 252 seconds)
[04:38:47] *** Quits: pmcnabb9 (~pmcnabb@user/pmcnabb) (Ping timeout: 264 seconds)
[04:46:07] *** Quits: PantelicGR (~PantelicG@user/pantelicgr) (Quit: Leaving)
[05:01:52] *** Joins: kostkon_ (~kostkon@athedsl-394300.home.otenet.gr)
[05:02:05] *** kostkon_ is now known as kostkon
[05:04:12] *** Quits: fikran (~fikran@user/fikran) (Ping timeout: 268 seconds)
[05:04:31] *** Joins: yanchai (~yanchai@124.6.141.226)
[05:05:36] *** Joins: fikran (~fikran@user/fikran)
[05:33:31] *** Quits: segfaultbanana (~segfaultb@user/segfaultbanana) (Remote host closed the connection)
[05:41:00] *** Joins: ovnicraft (~ovnicraft@rrcs-208-105-58-61.nyc.biz.rr.com)
[05:43:29] *** Joins: AnselmoCampanas (~AnselmoCa@190.99.69.41)
[05:58:23] *** Joins: rpkilby (~rpkilby@c-24-20-208-106.hsd1.or.comcast.net)
[06:02:22] *** Quits: domhnall (~developer@user/domhnall/x-2887755) (Quit: leaving)
[06:02:47] *** Quits: rpkilby (~rpkilby@c-24-20-208-106.hsd1.or.comcast.net) (Ping timeout: 264 seconds)
[06:03:46] *** Quits: yuesbeez (uid458354@id-458354.tinside.irccloud.com) (Quit: Connection closed for inactivity)
[06:05:51] *** Quits: audiobirb (~audio@user/audio) (Ping timeout: 268 seconds)
[06:07:37] *** Quits: jasonbraganza (~jasonbrag@user/jasonbraganza) (Quit: Au revoir …)
[06:08:00] *** Joins: djapo (~archangel@user/djapo)
[06:09:23] *** Joins: jasonbraganza (jasonbraga@user/jasonbraganza)
[06:10:24] *** Joins: rpkilby (~rpkilby@c-24-20-208-106.hsd1.or.comcast.net)
[06:20:40] *** Quits: rpkilby (~rpkilby@c-24-20-208-106.hsd1.or.comcast.net) (Ping timeout: 268 seconds)
[06:24:21] *** Quits: yanchai (~yanchai@124.6.141.226) (Ping timeout: 268 seconds)
[06:26:13] *** Quits: djapo (~archangel@user/djapo) (Ping timeout: 268 seconds)
[06:36:47] *** Joins: domhnall (~developer@user/domhnall/x-2887755)
[06:38:38] *** Quits: thiras (~thiras@user/thiras) (Quit: Leaving)
[06:47:24] *** Quits: AnselmoCampanas (~AnselmoCa@190.99.69.41) (Quit: Ping timeout (120 seconds))
[06:52:07] *** Joins: djapo (~archangel@user/djapo)
[07:10:09] *** Joins: rpkilby (~rpkilby@c-24-20-208-106.hsd1.or.comcast.net)
[07:11:26] *** Quits: rpkilby (~rpkilby@c-24-20-208-106.hsd1.or.comcast.net) (Remote host closed the connection)
[07:11:43] *** Joins: rpkilby (~rpkilby@c-24-20-208-106.hsd1.or.comcast.net)
[07:13:05] *** Quits: fikran (~fikran@user/fikran) (Ping timeout: 268 seconds)
[07:14:57] *** Joins: fikran (~fikran@user/fikran)
[07:29:46] *** Quits: rpkilby (~rpkilby@c-24-20-208-106.hsd1.or.comcast.net) (Remote host closed the connection)
[07:34:32] *** Joins: segfaultbanana (~segfaultb@user/segfaultbanana)
[07:35:15] *** Quits: ovnicraft (~ovnicraft@rrcs-208-105-58-61.nyc.biz.rr.com) (Quit: My MacBook has gone to sleep. ZZZzzz…)
[07:38:59] *** Quits: segfaultbanana (~segfaultb@user/segfaultbanana) (Ping timeout: 268 seconds)
[07:41:28] *** Joins: rpkilby (~rpkilby@c-24-20-208-106.hsd1.or.comcast.net)
[07:47:18] *** Quits: rpkilby (~rpkilby@c-24-20-208-106.hsd1.or.comcast.net) (Remote host closed the connection)
[07:47:32] *** Joins: rpkilby (~rpkilby@c-24-20-208-106.hsd1.or.comcast.net)
[07:52:05] *** Quits: rpkilby (~rpkilby@c-24-20-208-106.hsd1.or.comcast.net) (Remote host closed the connection)
[07:56:08] *** Joins: Elzington__ (~Elzington@static-68-235-44-37.cust.tzulo.com)
[07:56:43] *** Quits: djapo (~archangel@user/djapo) (Read error: Connection reset by peer)
[07:57:11] *** Joins: djapo (~archangel@user/djapo)
[07:59:19] *** Quits: Elzington_ (~Elzington@static-68-235-44-38.cust.tzulo.com) (Ping timeout: 268 seconds)
[08:06:26] *** Joins: Elzington (~Elzington@68.235.43.12)
[08:06:42] *** Quits: Elzington__ (~Elzington@static-68-235-44-37.cust.tzulo.com) (Ping timeout: 260 seconds)
[08:13:35] *** Joins: yanchai (~yanchai@222.127.97.162)
[08:15:30] *** Quits: PaulWay[w] (~PaulWay@2001:44b8:1110:f800:4b79:e11c:c2f:5c75) (Ping timeout: 260 seconds)
[08:28:25] <FurCoatStarlette> I have a namespace for my host user named "hostuser", it is mapped hostuser:100000:65536
[08:28:38] <FurCoatStarlette> I am creating a container with an unprivileged user named user, uid 300
[08:29:23] <FurCoatStarlette> If I create a user name user on the host, with uid 100300, it should be able to access bind mount files that have user read access permissions, correct?
[08:31:07] <FurCoatStarlette> Sorry I just realised I'm in the Django channel lol :)
[08:35:05] *** Quits: yanchai (~yanchai@222.127.97.162) (Ping timeout: 268 seconds)
[08:50:07] *** Quits: Xaldafax (~xaldafax@cpe-198-72-160-101.socal.res.rr.com) (Quit: Bye...)
[09:04:54] *** Joins: sandeepk (~sandeepk@223.130.30.55)
[09:05:23] *** Quits: sandeepk (~sandeepk@223.130.30.55) (Client Quit)
[09:08:04] *** Joins: yanchai (~yanchai@222.127.97.162)
[09:17:28] *** Joins: dor (~erg@78.11.12.207)
[09:22:34] *** Quits: fikran (~fikran@user/fikran) (Ping timeout: 268 seconds)
[09:24:18] *** Joins: fikran (~fikran@user/fikran)
[09:28:19] *** Quits: FurCoatStarlette (FurCoatSta@159.196.89.115) (Remote host closed the connection)
[09:34:41] *** Joins: mattil (~mattil@helsinki.portalify.com)
[09:55:58] *** Quits: mattil (~mattil@helsinki.portalify.com) (Remote host closed the connection)
[09:56:37] *** Joins: mattil (~mattil@helsinki.portalify.com)
[09:57:43] *** Quits: mattil (~mattil@helsinki.portalify.com) (Remote host closed the connection)
[09:58:57] *** Quits: yanchai (~yanchai@222.127.97.162) (Ping timeout: 268 seconds)
[10:04:27] *** Joins: mattil (~mattil@helsinki.portalify.com)
[10:10:50] *** Quits: djapo (~archangel@user/djapo) (Ping timeout: 260 seconds)
[10:33:21] *** Quits: mattil (~mattil@helsinki.portalify.com) (Remote host closed the connection)
[10:36:42] *** Joins: vdamewood (~vdamewood@fedora/vdamewood)
[11:00:47] *** Joins: VaniaPy (~VaniaPy@46.12.16.19.dsl.dyn.forthnet.gr)
[11:11:20] *** Joins: FurCoatStarlette (FurCoatSta@159.196.89.115)
[11:19:49] *** Joins: pycode (~pycode@2001:b07:5d28:551:4fea:55ec:aa17:a37e)
[11:32:05] *** Quits: fikran (~fikran@user/fikran) (Ping timeout: 268 seconds)
[11:33:39] *** Joins: fikran (~fikran@user/fikran)
[11:38:11] *** Joins: sodimel (~co@21.43.133.77.rev.sfr.net)
[11:42:36] *** Joins: slav0nic (slav0nic@python.su)
[11:42:46] *** Quits: cmbengue (~Thunderbi@207.191.249.160) (Ping timeout: 260 seconds)
[11:50:28] *** Joins: masta`` (~oyster@user/masta/x-2645138)
[12:17:22] *** Joins: jtiai (~jtiai@81-197-45-202.elisa-laajakaista.fi)
[12:19:10] <jtiai> Hello everyone. Is there way to track/list from which files template is rendered from? Like extends and includes?
[12:31:05] *** Joins: shiriru (~shiriru@user/shiriru)
[12:35:07] *** Joins: Ilyu (~quassel@78.202.228.230)
[12:37:46] *** Joins: Haudegen (~quassel@178.115.237.87.static.drei.at)
[12:54:10] *** Joins: krisd (krisd@s0.mydevil.net)
[12:59:08] *** Joins: sreve (~quassel@p4ff44b8e.dip0.t-ipconnect.de)
[13:00:26] *** Quits: krisd (krisd@s0.mydevil.net) (Quit: leaving)
[13:02:03] *** Joins: krisd (krisd@s0.mydevil.net)
[13:11:59] <pycode> hello
[13:16:13] *** Quits: GinFuyou (~GinFuyou@reya.cloud.tilaa.com) (Remote host closed the connection)
[13:20:55] <VaniaPy> Hi,when i'm posting data through request.data should i get them back in Response through serializer?
[13:25:11] <dang`r`us> ?
[13:41:34] *** Quits: fikran (~fikran@user/fikran) (Ping timeout: 268 seconds)
[13:43:00] *** Joins: fikran (~fikran@user/fikran)
[13:44:28] *** Joins: The_Jag (~The_Jag@host-82-54-168-243.retail.telecomitalia.it)
[13:45:26] *** Quits: shiriru (~shiriru@user/shiriru) (Ping timeout: 260 seconds)
[13:47:18] *** Quits: pycode (~pycode@2001:b07:5d28:551:4fea:55ec:aa17:a37e) (Ping timeout: 260 seconds)
[13:49:59] *** Joins: GinFuyou (~GinFuyou@reya.cloud.tilaa.com)
[13:53:34] <FunkyBob> dang`r`us: it's a DRF thing...
[13:53:44] <FunkyBob> even so, it doesn't make sense
[13:54:09] <FunkyBob> jtiai: AIUI DjDT shows that somehow
[13:56:26] *** Joins: Ergo^ (~ergo@91.238.59.144)
[14:03:26] *** Quits: vdamewood (~vdamewood@fedora/vdamewood) (Quit: Life beckons)
[14:13:46] *** Joins: abrantesasf (abrantesas@gateway/vpn/protonvpn/abrantesasf)
[14:31:39] *** Joins: pro_z (~pro_z@37.214.44.138)
[14:32:30] *** Joins: blackout69 (~blackout6@net-31-156-121-187.cust.vodafonedsl.it)
[14:32:42] *** Parts: blackout69 (~blackout6@net-31-156-121-187.cust.vodafonedsl.it) ()
[14:40:00] *** Joins: pycode (~pycode@2001:b07:5d28:551:abb6:a9bc:14:6aa)
[14:54:08] *** Quits: masta`` (~oyster@user/masta/x-2645138) (Read error: Connection reset by peer)
[14:59:19] *** Quits: abrantesasf (abrantesas@gateway/vpn/protonvpn/abrantesasf) (Remote host closed the connection)
[15:05:41] *** Joins: kostkon_ (~androirc@2.142.66.94.static.otenet.gr)
[15:06:46] *** Joins: shiriru (~shiriru@user/shiriru)
[15:10:57] *** Joins: mayhew (~jm@hlfxns017vw-47-55-124-51.dhcp-dynamic.fibreop.ns.bellaliant.net)
[15:13:42] <jtiai> FunkyBob: Oh. Have to check since IIRC it's installed on my venv, not just enabled...
[15:16:06] <jtiai> FunkyBob: And during my latest journeys found this which is quite interesting package: https://docs.iommi.rocks/en/latest/
[15:24:02] *** Joins: mad_moses (~mad_moses@2a02:6d40:2349:6f01:a1bc:3658:f7b9:251)
[15:24:19] <mad_moses> Hi, is it a bad idea to install gunicorn in my virtualenv instead of a system wide installation?
[15:26:02] *** Quits: Ilyu (~quassel@78.202.228.230) (Quit: https://quassel-irc.org - Chat comfortably. Anywhere.)
[15:26:05] *** Quits: shiriru (~shiriru@user/shiriru) (Quit: Leaving)
[15:28:13] <GinFuyou> Installing into venv is recommended by default
[15:29:09] <mad_moses> GinFuyou: https://docs.gunicorn.org/en/latest/install.html#debian-gnu-linux They are saying here something different. Thats why I am asking.
[15:29:09] *** Quits: VaniaPy (~VaniaPy@46.12.16.19.dsl.dyn.forthnet.gr) (Quit: Connection closed)
[15:31:09] *** Joins: DnzAtWrk (~DnzAtWrk@mobile-access-56734f-209.dhcp.inet.fi)
[15:32:10] <dang`r`us> FunkyBob, yeah I got as far as DRF
[15:32:18] <GinFuyou> well, sounds somewhat strage to me, but probably they know better than me?
[15:32:54] <GinFuyou> Still reasons do not suggest it's bad to use venv
[15:33:09] <FunkyBob> personally, i always install into a venv
[15:33:13] <FunkyBob> even in a container
[15:33:35] *** Joins: blackout69 (~blackout6@net-31-156-121-187.cust.vodafonedsl.it)
[15:34:04] <hylje> doesn't gunicorn actually import your wsgi definition to run it?
[15:34:21] <FunkyBob> it's a module... it imports a callable from a module...
[15:34:28] <hylje> which in turn loads your project and all your venv stuff anyway
[15:45:34] *** Joins: masta`` (~oyster@user/masta/x-2645138)
[15:50:27] *** Quits: fikran (~fikran@user/fikran) (Ping timeout: 268 seconds)
[15:52:21] *** Joins: fikran (~fikran@user/fikran)
[15:57:28] *** Quits: bitdex (~bitdex@gateway/tor-sasl/bitdex) (Quit: = "")
[15:59:26] *** Joins: znpy (~znpy@user/znpy)
[16:04:59] *** Joins: thelodger (~thelodger@cpc102380-sgyl38-2-0-cust984.18-2.cable.virginm.net)
[16:08:15] <thelodger> Hey folks, had a weird test situation today. Two separate reverse urls to the same view were each put through separate client.get calls but only the first evaluated. Is there any caching by default on test client by any chance?
[16:09:08] <hylje> yes i believe url resolver implicitly caches
[16:09:34] *** Quits: pycode (~pycode@2001:b07:5d28:551:abb6:a9bc:14:6aa) (Ping timeout: 268 seconds)
[16:14:44] <nedbat> hylje: you mean that it caches the mapping from url to view code, right?  But it shouldn't cache the result of running the view code?
[16:15:47] <hylje> yes, and no the view call itself doesn't get cached (unless you make it so)
[16:21:39] <thelodger> Thanks for info, hylje! Any recommendation on the best way to clear that cache? We tried clear_url_caches but that didn't seem to affect it. The only thing that worked was adding a useless query arg to the reverse url but that feels a bit ... iffy when we want the exact same url twice?
[16:29:36] *** Quits: Throgkt (~Throgkt@user/throgkt) (Quit:  )
[16:29:46] *** Joins: Throgkt (~Throgkt@user/throgkt)
[16:33:44] *** Parts: blackout69 (~blackout6@net-31-156-121-187.cust.vodafonedsl.it) ()
[16:38:04] *** Quits: Haudegen (~quassel@178.115.237.87.static.drei.at) (Quit: Bin weg.)
[16:44:07] *** Quits: jtiai (~jtiai@81-197-45-202.elisa-laajakaista.fi) (Ping timeout: 268 seconds)
[16:57:14] <nedbat> thelodger: the cache hylje is talking about shouldn't cause the behavior you are seeing.
[16:57:51] *** Joins: pmcnabb (~pmcnabb@user/pmcnabb)
[17:00:15] <b-rex> auto-reload is broken in 3.2.9 for me (using StatReloader) any idea where to look to figure out why?
[17:01:02] <b-rex> using linux, no docker, btrfs
[17:02:36] *** Quits: lazzurs (~lazzurs@user/lazzurs) (Ping timeout: 260 seconds)
[17:17:14] *** Joins: ovnicraft (~ovnicraft@rrcs-208-105-58-61.nyc.biz.rr.com)
[17:29:36] *** Joins: mattil (~mattil@helsinki.portalify.com)
[17:33:11] *** Joins: blackout69 (~blackout6@net-31-156-121-187.cust.vodafonedsl.it)
[17:33:12] *** Joins: AnselmoCampanas (~AnselmoCa@190.99.69.41)
[17:34:41] *** Quits: mattil (~mattil@helsinki.portalify.com) (Ping timeout: 268 seconds)
[17:35:28] *** Joins: segfaultbanana (~segfaultb@user/segfaultbanana)
[17:37:08] *** Joins: abrantesasf (abrantesas@gateway/vpn/protonvpn/abrantesasf)
[17:37:22] *** Joins: pycode (~pycode@2001:b07:5d28:551:fb54:a108:ba27:82b7)
[17:38:35] *** Joins: lazzurs (~lazzurs@user/lazzurs)
[17:40:02] *** Quits: segfaultbanana (~segfaultb@user/segfaultbanana) (Ping timeout: 256 seconds)
[17:40:49] *** Quits: DnzAtWrk (~DnzAtWrk@mobile-access-56734f-209.dhcp.inet.fi) (Read error: Connection reset by peer)
[17:41:41] *** Quits: wyre (~wyre@user/wyre) (Quit: ZNC 1.8.2 - https://znc.in)
[17:41:55] *** Joins: wyre (~wyre@user/wyre)
[17:41:58] *** Quits: wyre (~wyre@user/wyre) (Remote host closed the connection)
[17:42:08] *** Joins: DnzAtWrk (~DnzAtWrk@mobile-access-567363-170.dhcp.inet.fi)
[17:44:51] *** Quits: Harlin (~DonQixote@75-163-188-12.clsp.qwest.net) (Quit: Leaving)
[17:48:33] *** Quits: domhnall (~developer@user/domhnall/x-2887755) (Quit: leaving)
[17:52:31] *** Quits: DnzAtWrk (~DnzAtWrk@mobile-access-567363-170.dhcp.inet.fi) (Ping timeout: 256 seconds)
[17:54:24] *** Quits: kostkon_ (~androirc@2.142.66.94.static.otenet.gr) (Ping timeout: 268 seconds)
[17:56:27] *** Joins: kostkon_ (~androirc@2.142.66.94.static.otenet.gr)
[17:59:57] *** Quits: fikran (~fikran@user/fikran) (Ping timeout: 268 seconds)
[18:01:04] *** Quits: AnselmoCampanas (~AnselmoCa@190.99.69.41) (Ping timeout: 256 seconds)
[18:01:43] *** Joins: fikran (~fikran@user/fikran)
[18:04:41] *** Quits: thelodger (~thelodger@cpc102380-sgyl38-2-0-cust984.18-2.cable.virginm.net) (Quit: Client closed)
[18:11:23] *** Joins: wyre (~wyre@user/wyre)
[18:17:02] *** Quits: withered_wolf (~withered_@1437135-v103.1561-static.stchilaa.metronetinc.net) (Read error: Connection reset by peer)
[18:17:14] *** Joins: rapha (~jrs@user/rapha)
[18:17:32] <rapha> hi all
[18:17:37] *** Joins: withered_wolf (~withered_@1437135-v103.1561-static.stchilaa.metronetinc.net)
[18:18:59] <rapha> in a django app i didn't write, how do i figure out how one thing is related to another? there's the tables core_document, core_ocrmodel and lastly, cor_ocrmodeldocument connecting the two. i know how to write the SQL to do it, but what's "proper" django to find out which documents a given ocrmodel belongs to?
[18:19:46] <rapha> (disclaimer: i've never did any django before and just want to add another column to this one HTML table)
[18:20:54] *** Joins: segfaultbanana (~segfaultb@user/segfaultbanana)
[18:21:24] <rapha> also grepping for "class OCRModel" or "class Document" yields nothing helpful :(
[18:21:36] *** Joins: mattil (~mattil@87-92-88-105.bb.dnainternet.fi)
[18:22:30] <GinFuyou> <core>_ is usually an app name
[18:22:40] <GinFuyou> look at core/models(.py)
[18:22:53] <GinFuyou> table name can be overriden in model meta
[18:23:54] <rapha> apps/core/models.py exists and looks good. it does have a "class Document" and also a "class OcrModel"!
[18:24:20] <rapha> is there something like a console where i could play with these without constantly having to reload the page in the browser?
[18:24:48] <GinFuyou> what exactly you mean by "play"?
[18:25:06] <rapha> like, i wanna try some of the things i'm seeing at https://docs.djangoproject.com/en/3.2/topics/db/examples/many_to_many/
[18:25:32] <rapha> it seems Document.objects.filter(...) might be part of what i need
[18:25:50] *** Joins: mrwick (~mrwick@user/mrwick)
[18:25:57] *** Quits: mattil (~mattil@87-92-88-105.bb.dnainternet.fi) (Ping timeout: 256 seconds)
[18:25:57] <GinFuyou> To add change\models you have to run migrations, so it's won't be much easier in console
[18:26:02] <rapha> nono
[18:26:06] <rapha> i don't want to do that
[18:26:06] <GinFuyou> If you mean just playing with ORM
[18:26:18] <GinFuyou> python manage.py shell
[18:26:27] <rapha> i want to find a specific OcrModel and then all Documents attached to that OcrModel
[18:26:37] <GinFuyou> iteractive python shell with your project settings
[18:26:38] <rapha> ah, perfect
[18:27:40] <GinFuyou> https://docs.djangoproject.com/en/3.2/intro/tutorial02/#playing-with-the-api
[18:28:12] <GinFuyou> Also there is a developer CRUD GUI, usually at /admin
[18:28:18] <GinFuyou> It can be disavled though
[18:28:29] <rapha> one would hope that it is
[18:28:40] <rapha> ghasp, it isn't
[18:28:44] <rapha> how do i disable that?
[18:29:07] <GinFuyou> Why though, it's under auth and permissions screen
[18:29:25] <rapha> lest a user finds it and deletes half the data
[18:29:56] <GinFuyou> if user is not marked as staff they can't enter.
[18:30:13] <rapha> oh, wait, nevermind, i _was_ admin user, that's why i was allowed to do so many things there
[18:30:23] <rapha> no matter then
[18:30:52] <rapha> the shell isn't working though ... at least Document and OcrModel don't seem to be known to it
[18:31:11] <GinFuyou> If you wish you can disable it. I don't remember all the steps, probably remove it from urls.py and installed apps
[18:31:49] <GinFuyou> rapha, you have to import all you need, it's just a python console with connected database
[18:31:53] <b-rex> /dev/mapper/vg0-root on / type btrfs (rw,relatime,compress=zstd:3,ssd,space_cache,subvolid=5,subvol=/)
[18:31:59] <b-rex> this looks ok to me
[18:32:17] <GinFuyou> Or there are libraries that do more for you, I don't remember the name though
[18:32:30] *** Quits: segfaultbanana (~segfaultb@user/segfaultbanana) (Remote host closed the connection)
[18:32:39] <b-rex> i was thinking maybe if i had it mounted noatime the StatReloader would fail to pick up changes
[18:32:39] <rapha> aha! "from core import models", and then models.Document ... that seems to do something usefule
[18:34:50] <b-rex> GinFuyou: any idea? https://asciinema.org/a/g9sSS51mnFLxyaCGBcZ5S0kKs
[18:35:27] <b-rex> this is the weirdest thing. i have other django projects that pick up on changes fine on this same machine... this project (a fresh project i just created using django-admin) will not pick up on changes
[18:36:20] <GinFuyou> b-rex, not really, have you checked https://docs.djangoproject.com/en/3.2/ref/django-admin/#runserver
[18:38:35] <b-rex> ahah i think i'm getting closer
[18:38:35] <rapha> models.Document.objects.filter(name__startswith='arberry')[0].name ... cool, starting to get the hang of this
[18:38:52] <b-rex> my other projects (where auto-reloader works) are django 3.1.x. this project is django 3.2.x
[18:39:49] <rapha> and also models.OcrModel.objects.filter()[0].documents.filter()[0]
[18:39:52] <rapha> sweeeeeeeeeeeeet
[18:40:07] *** Quits: fikran (~fikran@user/fikran) (Ping timeout: 256 seconds)
[18:40:18] *** Joins: Staunch (~Staunch@c-24-7-237-208.hsd1.mn.comcast.net)
[18:42:03] *** Joins: fikran (~fikran@user/fikran)
[18:42:08] <GinFuyou> you can use .first() instead of filter()[0]
[18:42:22] <rapha> even sweeter :)
[18:42:30] <rapha> thx for getting me this far, GinFuyou!
[18:44:15] *** Joins: thelodger (~thelodger@cpc102380-sgyl38-2-0-cust984.18-2.cable.virginm.net)
[18:48:21] *** Joins: stdout (~stdout@216.163.21.11)
[18:49:14] *** Joins: thiras (~thiras@user/thiras)
[18:52:19] *** Joins: Xaldafax (~xaldafax@cpe-198-72-160-101.socal.res.rr.com)
[18:52:50] *** Joins: VaniaPy (~VaniaPy@46.12.16.19.dsl.dyn.forthnet.gr)
[18:55:05] <b-rex> wow this is really frustrating. i can't find anybody talking about this. i tried using watchman/pywatchman too... no matter what i do i can't get runserver to auto-reload when files change
[18:55:12] <b-rex> there's nothing in the bug tracker either
[18:55:16] <b-rex> it only affects django 3.2
[18:55:31] <rapha> GinFuyou: okay, so there's a `class DocumentModels` with an attribute `model` on it, which mentions `template_name = "core/models_list/document_models.html"`, which has `{% include 'core/models_list/table.html' %}`, which is where I want to add something, and where things are already being accessed as `model.something`. Unfortunately, creating a new variable `foobar` on that class and then trying to write
[18:55:33] <rapha> `foobar` into the HTML yields nothing. what am i missing?
[18:55:57] *** Joins: segfaultbanana (~segfaultb@user/segfaultbanana)
[18:56:40] <GinFuyou> rapha, can you please use dpaste.de to share more relevant code
[18:57:18] <GinFuyou> what you have and what you are trying to add
[18:57:28] *** Quits: thelodger (~thelodger@cpc102380-sgyl38-2-0-cust984.18-2.cable.virginm.net) (Quit: Client closed)
[18:59:02] *** Joins: Harlin (~DonQixote@75-163-188-12.clsp.qwest.net)
[19:00:16] <rapha> yes, ofc, second
[19:00:38] <GinFuyou> brb, have to boot into another os
[19:01:20] *** Quits: GinFuyou (~GinFuyou@reya.cloud.tilaa.com) (Remote host closed the connection)
[19:02:51] <rapha> er
[19:02:52] <rapha> oh
[19:02:54] <rapha> ah
[19:03:30] *** Joins: GinFuyou (~GinFuyou@reya.cloud.tilaa.com)
[19:04:01] <rapha> GinFuyou: https://dpaste.org/98dO
[19:05:12] <rapha> better; https://dpaste.org/5CKf
[19:05:33] <GinFuyou> aha, I see
[19:06:44] <GinFuyou> first DocumentModels is a view. A controller that processes model = OrcModel to be presented as list of objects. So setting first_document on it, doesn't set it on model
[19:06:57] <rapha> :(
[19:07:08] <rapha> but it _is_ the view belonging to those templates?
[19:07:23] <GinFuyou> so you either do it on model class itself, or just add variable into context
[19:07:34] <rapha> the latter would be better. it doesn't belong on the model.
[19:07:45] <GinFuyou> well, views don't really belong to templates.
[19:07:53] <rapha> well, the other way around
[19:08:26] <GinFuyou> then, https://dpaste.org/98dO#L25 is example adding context (template rendering context) variables
[19:08:58] <GinFuyou> Other way around is also not quite correct, but I get what you mean I think
[19:09:26] <GinFuyou>  template_name = "core/models_list/document_models.html" seem to refer it, yeah
[19:09:33] <rapha> yeah, that's what i meant
[19:09:53] <GinFuyou> but I can't say for 100% sure from what I know
[19:10:00] <rapha> why did you add `# legacy`, GinFuyou ?
[19:10:21] <GinFuyou> erm, sorry?
[19:10:30] <rapha> oh, wait
[19:10:33] <VaniaPy> Is it a redundancy to define the serializer and validate it inside the function? https://dpaste.org/V848
[19:10:35] <GinFuyou> ah old link
[19:10:53] <rapha> aaah you only _highlighted_ line 25 for me
[19:11:26] <rapha> GinFuyou: `context['blah'] = 'foobar'` also doesn't make 'blah' available inside the template
[19:11:34] *** Joins: thelodger (~thelodger@cpc102380-sgyl38-2-0-cust984.18-2.cable.virginm.net)
[19:12:00] <GinFuyou> it should, just {{ blah }}
[19:12:01] *** Quits: django-ticketbot (~django-ti@django/ops/ticketbot) (Remote host closed the connection)
[19:12:18] *** Joins: django-ticketbot (~django-ti@django/ops/ticketbot)
[19:12:28] <GinFuyou> do you see static changes (like empty <td>) ?
[19:13:01] <rapha> yeah, the empty <td> is there alright
[19:13:32] <GinFuyou> all saved and runserver had (auto)reloaded?
[19:13:52] <rapha> yes, autoreload has been happening, i saw it. but maybe let me try to manually restart.
[19:14:23] <GinFuyou> I hope you put it in right place as well
[19:15:08] <rapha> well if i had put it anywhere else, then i wouldn't be seeing that <td title="..."> in just that place
[19:15:53] <rapha> https://docs.djangoproject.com/en/3.2/topics/class-based-views/generic-display/ mentions classes whose name ends in ...View ... perhaps the context needs to be handled there as well?
[19:16:44] <GinFuyou> I meant context part
[19:17:11] <rapha> ah, i added it in that function, right underneath line 25 as pointed out by you, before the return statement
[19:17:45] <rapha> hmm, and this project doesn't have any class with a name ending in `...View` except for `ContactUsView`.
[19:18:17] <rapha> "object" is a rather generic name. i suspect it might be magical here.
[19:18:56] <moldy> VaniaPy: not sure what your serializer's save() is doing
[19:19:00] <GinFuyou> not it shouldn't be
[19:19:07] <moldy> VaniaPy: but in general, that code looks ok to me
[19:19:59] <VaniaPy> moldy isn't supposed to save the serializer if it's valid?
[19:20:10] <moldy> VaniaPy: yes
[19:20:17] *** Quits: rje (~rje@50.35.241.164) (Quit: My computer has gone to sleep. ZZZzzz…)
[19:20:25] <VaniaPy> ok
[19:20:28] <GinFuyou> rapha, are you sure you are viewing right view? add print(f"> {self.__class__.__name__}") to get_context_data() to make sure you run it
[19:20:31] <moldy> VaniaPy: if the serializer is not valid, do you still want to run lines 30-33?
[19:20:46] <GinFuyou> since templates and includes might be shared among views
[19:20:59] <rapha> hmm
[19:21:03] <VaniaPy> moldy yeah
[19:21:13] <moldy> VaniaPy: then it should be fine
[19:21:26] <GinFuyou> you should see prints in runserver console output
[19:21:26] <moldy> VaniaPy: note that you don't give the client any feedback for invalid data though
[19:22:17] <rapha> indeed the message doesn't appear, GinFuyou. seems i have some more searching to do.
[19:22:37] <GinFuyou> check what other views you have
[19:22:59] <VaniaPy> moldy should i return an error level as well then?
[19:23:09] <rapha> it's the correct view. need to find the correct get_context_data() for it.
[19:23:59] <GinFuyou> if it's correct view class, it's get_context_data() will be run
[19:25:02] <GinFuyou> When not sure about prints() I usually add die() call
[19:29:37] <VaniaPy> it returns empty json :(
[19:32:30] <moldy> VaniaPy: serializer.is_valid(raise_exception=True) is often useful
[19:32:59] *** Quits: Xaldafax (~xaldafax@cpe-198-72-160-101.socal.res.rr.com) (Quit: Bye...)
[19:33:31] <VaniaPy> moldy when i'm printing the result i see the value in the console,but it returns an empty json in the Postman
[19:35:51] <moldy> VaniaPy: hmm, no idea, at least not from the code i'm seeing on dpaste
[19:39:05] <moldy> it should return {"res": something}
[19:39:14] <moldy> what's the response status code?
[19:39:55] <VaniaPy> moldy it's 200
[19:40:12] <VaniaPy> but he response body is this {
[19:40:12] <VaniaPy>     "result": {}
[19:40:13] <VaniaPy> }
[19:40:33] <moldy> "result" or "res"?
[19:40:57] <VaniaPy> @mol
[19:41:05] <moldy> ``self.get_serializer(result).data`` is probably empty
[19:41:10] <VaniaPy> moldy i chanded "res" to "result"
[19:41:25] <moldy> you probably want ``serializer.data`` instead
[19:41:45] *** Joins: Xaldafax (~xaldafax@cpe-198-72-160-101.socal.res.rr.com)
[19:42:50] *** Quits: kostkon_ (~androirc@2.142.66.94.static.otenet.gr) (Remote host closed the connection)
[19:43:57] *** Joins: kostkon_ (~androirc@2.142.66.94.static.otenet.gr)
[19:51:18] *** Quits: pycode (~pycode@2001:b07:5d28:551:fb54:a108:ba27:82b7) (Ping timeout: 260 seconds)
[19:54:02] *** Joins: rpkilby (~rpkilby@c-24-20-208-106.hsd1.or.comcast.net)
[19:57:23] <LordKalma> does anybody happen to have/know a git repo with django  + docker I can look at?
[19:57:30] <LordKalma> bonus points for + react :D
[19:57:52] *** Quits: segfaultbanana (~segfaultb@user/segfaultbanana) (Remote host closed the connection)
[19:58:19] *** Quits: rpkilby (~rpkilby@c-24-20-208-106.hsd1.or.comcast.net) (Ping timeout: 256 seconds)
[19:59:57] *** Joins: djapo (~archangel@user/djapo)
[20:00:22] <moldy> you probably don't want to look at mine :p
[20:00:33] <moldy> but if you google "django docker", you should find plenty of inspiration
[20:00:39] <LordKalma> there's a talk from djangocon 19... let's look at it
[20:00:44] <LordKalma> yeah.. too myuch of it hahaha
[20:00:45] *** Joins: rje (~rje@65.141.156.170)
[20:01:33] <moldy> https://pythonspeed.com/docker/ is useful if you want to dive a bit deeper into it
[20:02:23] <LordKalma> damn, thanks
[20:06:24] *** Joins: knbk (~quassel@84-24-92-123.cable.dynamic.v4.ziggo.nl)
[20:06:42] *** Joins: segfaultbanana (~segfaultb@user/segfaultbanana)
[20:19:20] *** Quits: knbk (~quassel@84-24-92-123.cable.dynamic.v4.ziggo.nl) (Ping timeout: 268 seconds)
[20:20:35] *** Quits: blackout69 (~blackout6@net-31-156-121-187.cust.vodafonedsl.it) (Quit: Leaving.)
[20:24:47] *** Quits: segfaultbanana (~segfaultb@user/segfaultbanana) (Remote host closed the connection)
[20:38:12] *** Joins: Xof (~Xof@157-131-136-66.dedicated.static.sonic.net)
[20:40:31] *** Quits: djapo (~archangel@user/djapo) (Read error: Connection reset by peer)
[20:41:18] *** Joins: djapo (~archangel@user/djapo)
[20:43:39] *** Quits: kostkon_ (~androirc@2.142.66.94.static.otenet.gr) (Ping timeout: 256 seconds)
[20:43:59] *** Quits: mrwick (~mrwick@user/mrwick) (Ping timeout: 268 seconds)
[20:48:06] *** Joins: segfaultbanana (~segfaultb@user/segfaultbanana)
[20:49:33] *** Quits: fikran (~fikran@user/fikran) (Ping timeout: 268 seconds)
[20:51:24] *** Joins: fikran (~fikran@user/fikran)
[20:55:03] *** Quits: sodimel (~co@21.43.133.77.rev.sfr.net) (Quit: Konversation terminated!)
[20:55:05] *** Joins: kostkon_ (~androirc@athedsl-394300.home.otenet.gr)
[21:00:01] *** Joins: rpkilby (~rpkilby@c-24-20-208-106.hsd1.or.comcast.net)
[21:15:22] *** Quits: kostkon (~kostkon@athedsl-394300.home.otenet.gr) (Ping timeout: 260 seconds)
[21:15:38] *** Quits: VaniaPy (~VaniaPy@46.12.16.19.dsl.dyn.forthnet.gr) (Quit: Connection closed)
[21:15:57] *** Quits: kostkon_ (~androirc@athedsl-394300.home.otenet.gr) (Ping timeout: 256 seconds)
[21:18:05] *** Quits: mad_moses (~mad_moses@2a02:6d40:2349:6f01:a1bc:3658:f7b9:251) (Remote host closed the connection)
[21:27:26] *** Quits: ovnicraft (~ovnicraft@rrcs-208-105-58-61.nyc.biz.rr.com) (Quit: My MacBook has gone to sleep. ZZZzzz…)
[21:29:31] *** Joins: ovnicraft (~ovnicraft@rrcs-208-105-58-61.nyc.biz.rr.com)
[21:33:31] *** Joins: cmbengue (~Thunderbi@207.191.249.160)
[21:36:25] *** Quits: rje (~rje@65.141.156.170) (Ping timeout: 268 seconds)
[21:44:11] *** Joins: slightlypandaish (~slightlyp@2001:8a0:5613:3b00:92f:cc92:1ff1:3a31)
[22:01:47] *** Joins: rje (~rje@65.141.156.170)
[22:08:38] *** Quits: rje (~rje@65.141.156.170) (Ping timeout: 256 seconds)
[22:21:11] *** Joins: Mukesh (~Mukesh@49.204.117.32)
[22:21:54] <Mukesh> Hi, anyone here have any good ideas on how to set up scheduling in Django?
[22:22:39] <Mukesh> I've reviewed a couple solutions, but they all seem to be outdated or depend on Linux cron
[22:24:42] <dodo> what did you review?
[22:25:14] <Mukesh> This one: https://github.com/Tivix/django-cron which says deprecated
[22:26:18] <Mukesh> One blog I read suggested to just use Linux cron, which is out of the question I guess (I deploy on a WIndows server)
[22:28:14] <Mukesh> Basically I'd like to run a piece of code periodically, which would interact with the database and update a few tables.
[22:31:18] <dodo> hm, there is celery beats.. but if you're not already using celery that's maybe not ideal
[22:34:35] <Mukesh> I guess using celery would be overkill in my case..
[22:34:40] <Mukesh> Anyhow, I found this: https://medium.com/@kevin.michael.horan/scheduling-tasks-in-django-with-the-advanced-python-scheduler-663f17e868e6
[22:34:55] <Mukesh> Seems like it could be helpful. I'll give it a try. Thanks dodo
[22:35:08] *** Quits: Mukesh (~Mukesh@49.204.117.32) (Quit: Client closed)
[22:36:17] *** Quits: ovnicraft (~ovnicraft@rrcs-208-105-58-61.nyc.biz.rr.com) (Quit: My MacBook has gone to sleep. ZZZzzz…)
[22:37:12] *** Joins: ovnicraft (~ovnicraft@rrcs-208-105-58-61.nyc.biz.rr.com)
[22:40:41] *** Joins: Mukesh (~Mukesh@49.204.117.32)
[22:40:46] *** Quits: djapo (~archangel@user/djapo) (Ping timeout: 260 seconds)
[22:41:02] *** Quits: Mukesh (~Mukesh@49.204.117.32) (Client Quit)
[22:41:42] *** Quits: ovnicraft (~ovnicraft@rrcs-208-105-58-61.nyc.biz.rr.com) (Ping timeout: 260 seconds)
[22:41:47] *** Quits: Harlin (~DonQixote@75-163-188-12.clsp.qwest.net) (Remote host closed the connection)
[22:44:18] *** Quits: slightlypandaish (~slightlyp@2001:8a0:5613:3b00:92f:cc92:1ff1:3a31) (Quit: Client closed)
[22:47:48] *** Joins: knbk (~quassel@84-24-92-123.cable.dynamic.v4.ziggo.nl)
[22:56:32] <LordKalma> On guides like
[22:56:32] <LordKalma> https://docs.docker.com/samples/django/
[22:56:41] <LordKalma> are things like - POSTGRES_PASSWORD=postgres supposed to be changed?
[22:59:03] *** Quits: fikran (~fikran@user/fikran) (Ping timeout: 268 seconds)
[23:00:45] *** Joins: fikran (~fikran@user/fikran)
[23:02:25] *** Joins: freiza_ (~freiza@2405:201:a405:ac6d:a17b:255d:797a:867e)
[23:03:41] <freiza_> What is the difference between, collection.featured_product = Product(pk=1)  and collection.featured_product = Product.objects.get(pk=1)
[23:05:01] <GinFuyou> later one gets data from database
[23:05:23] <GinFuyou> (and fails if it doesn't exist)
[23:07:04] *** Quits: pro_z (~pro_z@37.214.44.138) (Ping timeout: 268 seconds)
[23:08:16] *** Quits: segfaultbanana (~segfaultb@user/segfaultbanana) (Remote host closed the connection)
[23:08:56] <freiza_> GinFuyou, thanks
[23:09:24] *** Joins: ovnicraft (~ovnicraft@rrcs-208-105-58-61.nyc.biz.rr.com)
[23:10:26] *** Quits: masta`` (~oyster@user/masta/x-2645138) (Quit: Going offline, see ya! (www.adiirc.com))
[23:18:10] *** Quits: freiza_ (~freiza@2405:201:a405:ac6d:a17b:255d:797a:867e) (Quit: Leaving)
[23:19:41] *** Joins: kostkon (~kostkon@2a02:587:a109:cc9:78e0:6594:e774:f291)
[23:21:20] *** Joins: djapo (~archangel@user/djapo)
[23:25:08] *** Quits: thelodger (~thelodger@cpc102380-sgyl38-2-0-cust984.18-2.cable.virginm.net) (Quit: Leaving.)
[23:39:49] *** Joins: PaulWay[w] (~PaulWay@2001:44b8:1110:f800:4b79:e11c:c2f:5c75)
[23:44:17] *** Joins: Elzington_ (~Elzington@68.235.43.78)
[23:46:32] *** Quits: Elzington (~Elzington@68.235.43.12) (Ping timeout: 268 seconds)
[23:50:11] *** Quits: djapo (~archangel@user/djapo) (Ping timeout: 264 seconds)
[23:57:00] *** Quits: Ergo^ (~ergo@91.238.59.144) (Remote host closed the connection)
