[00:02:03] *** Joins: jrincayc (~Thunderbi@38.70.240.202.sumofiber.net)
[00:06:12] *** Quits: jrincayc (~Thunderbi@38.70.240.202.sumofiber.net) (Ping timeout: 240 seconds)
[00:10:21] *** Quits: Avichi (~Avichi@2a02:a460:7aa6:1:b9d1:2b51:c9a9:d0c6) (Quit: Client closed)
[00:19:48] *** Quits: nalaginrut (~nalaginru@183.11.130.122) (Ping timeout: 240 seconds)
[00:21:19] *** Joins: jeko (~jeko@2a01:e0a:25f:d8f0:2cfb:6788:434e:dddf)
[00:34:43] *** Joins: nalaginrut (~nalaginru@183.11.130.122)
[00:37:57] *** Joins: karlosz (~karlosz@47.180.55.252)
[00:38:31] *** Quits: seninha (~seninha@user/seninha) (Quit: Leaving)
[00:44:24] *** Joins: seninha (~seninha@user/seninha)
[00:55:59] *** Joins: Avichi (~Avichi@2a02:a460:7aa6:1:fe83:b55e:cbe0:41c0)
[01:24:58] *** Joins: jrincayc (~Thunderbi@38.70.240.202.sumofiber.net)
[01:29:36] *** Quits: jrincayc (~Thunderbi@38.70.240.202.sumofiber.net) (Ping timeout: 252 seconds)
[01:42:16] *** Quits: jeko (~jeko@2a01:e0a:25f:d8f0:2cfb:6788:434e:dddf) (Quit: Konversation terminated!)
[01:53:11] *** Joins: sp1ff (~user@c-73-189-25-64.hsd1.ca.comcast.net)
[01:53:35] *** Joins: jrincayc (~Thunderbi@38.70.240.202.sumofiber.net)
[01:55:57] *** Quits: sp1ff` (~user@c-73-189-25-64.hsd1.ca.comcast.net) (Quit: ERC 5.4.1 (IRC client for GNU Emacs 29.0.50))
[01:57:04] *** Quits: aeth (~aeth@user/aeth) (Ping timeout: 272 seconds)
[01:57:38] *** Joins: aeth (~aeth@user/aeth)
[02:11:40] *** Quits: tristero (~nobody@user/tristero) (Quit: WeeChat 3.4)
[02:29:34] *** Quits: wnklmnn (~wnklmnn@2a02:908:4e2:9740:7426:4523:c39a:f795) (Quit: Leaving)
[02:44:13] *** Quits: seninha (~seninha@user/seninha) (Remote host closed the connection)
[02:51:00] *** Quits: masoudd (~masoudd@user/masoudd) (Ping timeout: 240 seconds)
[02:56:02] *** Quits: rgherdt_ (~rgherdt@83.236.30.76) (Remote host closed the connection)
[03:05:40] *** Quits: cjb (~cjb@user/cjb) (Ping timeout: 260 seconds)
[03:18:16] *** Joins: skapata (~Skapata@2804:14c:87b0:9d2e:ad66:4f1c:f9e8:2233)
[03:18:16] *** Quits: skapata (~Skapata@2804:14c:87b0:9d2e:ad66:4f1c:f9e8:2233) (Changing host)
[03:18:16] *** Joins: skapata (~Skapata@user/skapata)
[03:20:25] *** Joins: tristero (~quassel@user/tristero)
[03:33:25] *** Quits: badkins (~badkins@136.56.92.199) (Remote host closed the connection)
[03:34:37] *** Quits: Menchers (Menchers@user/menchers) (Ping timeout: 240 seconds)
[03:35:39] *** Quits: Wezl (Wezl@shell.oddprotocol.org) (Ping timeout: 256 seconds)
[03:45:48] *** Joins: badkins (~badkins@136.56.92.199)
[03:46:13] *** Joins: Wezl (Wezl@2605:6400:30:faa1:41a2:a78d:9e4e:6848)
[03:49:42] *** Joins: seninha (~seninha@user/seninha)
[03:50:12] *** Quits: badkins (~badkins@136.56.92.199) (Ping timeout: 240 seconds)
[03:55:04] *** Joins: Menchers_ (Menchers@user/menchers)
[04:00:19] *** Menchers_ is now known as Menchers
[04:03:44] *** Quits: lagash (lagash@lagash.shelltalk.net) (Ping timeout: 250 seconds)
[04:06:21] *** Quits: civodul (~user@guix/contributor/civodul) (Ping timeout: 252 seconds)
[04:10:09] *** Quits: karlosz (~karlosz@47.180.55.252) (Quit: karlosz)
[04:12:51] *** Joins: alMalsamo (~alMalsamo@gateway/tor-sasl/almalsamo)
[04:13:37] *** Quits: ec (~ec@gateway/tor-sasl/ec) (Quit: ec)
[04:25:27] *** Joins: lagash (lagash@lagash.shelltalk.net)
[04:32:34] *** Joins: m455 (~m455@user/m455)
[04:35:15] *** Joins: cjb (~cjb@user/cjb)
[04:35:29] *** Joins: badkins (~badkins@136.56.92.199)
[04:40:46] *** Quits: badkins (~badkins@136.56.92.199) (Remote host closed the connection)
[04:40:56] *** Joins: badkins (~badkins@136.56.92.199)
[04:52:33] *** Joins: TCZ (~tcz@91.150.178.124)
[05:09:53] *** Quits: drakonis (drakonis@user/drakonis) (Quit: WeeChat 3.1)
[05:10:15] *** Joins: drakonis (~drakonis@user/drakonis)
[05:10:44] *** Quits: m455 (~m455@user/m455) (Quit: WeeChat 3.0)
[05:11:02] *** Joins: m455 (~m455@user/m455)
[05:12:53] *** Joins: badkins_ (~badkins@136.56.92.199)
[05:13:24] *** Quits: badkins (~badkins@136.56.92.199) (Ping timeout: 240 seconds)
[05:14:10] *** Quits: badkins_ (~badkins@136.56.92.199) (Remote host closed the connection)
[05:15:44] *** Quits: seninha (~seninha@user/seninha) (Quit: Leaving)
[05:16:08] *** Joins: badkins (~badkins@136.56.92.199)
[05:29:44] *** Joins: Rue (~rue@2001-b011-1000-17d9-d616-1cce-b758-6ab8.dynamic-ip6.hinet.net)
[05:35:50] *** Quits: TCZ (~tcz@91.150.178.124) (Quit: Leaving)
[05:38:56] *** Quits: xsperry (~xs@user/xsperry) (Remote host closed the connection)
[05:50:34] *** Joins: frost (~frost@user/frost)
[05:57:52] *** Joins: s-liao (~s-liao@101.86.96.21)
[06:03:52] *** Quits: badkins (~badkins@136.56.92.199) (Remote host closed the connection)
[06:07:39] *** Joins: karlosz (~karlosz@47.151.136.69)
[06:28:39] *** Parts: pranavats (3fba1d1b34@2a00:c70:1:178:170:40:189:1) ()
[06:29:04] *** Joins: pranavats (3fba1d1b34@2a00:c70:1:178:170:40:189:1)
[06:36:30] *** Quits: frost (~frost@user/frost) (Ping timeout: 252 seconds)
[06:38:54] *** Quits: jrincayc (~Thunderbi@38.70.240.202.sumofiber.net) (Ping timeout: 272 seconds)
[06:44:44] *** Quits: karlosz (~karlosz@47.151.136.69) (Quit: karlosz)
[06:47:33] *** Quits: s-liao (~s-liao@101.86.96.21) (Quit: Client closed)
[06:47:36] *** Joins: badkins (~badkins@136.56.92.199)
[06:49:35] *** Quits: skapata (~Skapata@user/skapata) (Remote host closed the connection)
[06:51:48] *** Quits: badkins (~badkins@136.56.92.199) (Ping timeout: 240 seconds)
[06:52:18] *** Joins: badkins (~badkins@136.56.92.199)
[06:57:05] *** Quits: badkins (~badkins@136.56.92.199) (Ping timeout: 256 seconds)
[07:05:35] *** Quits: drakonis (~drakonis@user/drakonis) (Quit: WeeChat 3.4)
[07:06:06] *** Joins: drakonis (drakonis@user/drakonis)
[07:06:47] *** Quits: drakonis (drakonis@user/drakonis) (Client Quit)
[07:06:57] *** Joins: drakonis (drakonis@user/drakonis)
[07:07:01] *** Joins: jrincayc (~Thunderbi@38.70.240.202.sumofiber.net)
[07:11:00] *** Quits: jrincayc (~Thunderbi@38.70.240.202.sumofiber.net) (Ping timeout: 240 seconds)
[07:17:31] *** Joins: s-liao (~s-liao@101.86.96.21)
[07:17:56] *** Quits: drakonis (drakonis@user/drakonis) (Quit: WeeChat 3.4)
[07:18:06] *** Joins: drakonis (drakonis@user/drakonis)
[07:18:34] *** Quits: drakonis (drakonis@user/drakonis) (Client Quit)
[07:18:43] *** Joins: drakonis (drakonis@user/drakonis)
[07:31:44] *** Quits: s-liao (~s-liao@101.86.96.21) (Quit: Client closed)
[07:57:35] *** Quits: cjb (~cjb@user/cjb) (Quit: rcirc on GNU Emacs 29.0.50)
[07:59:40] *** Joins: s-liao (~s-liao@101.86.96.21)
[08:26:29] *** Joins: frost (~frost@user/frost)
[08:43:00] *** Quits: lagash (lagash@lagash.shelltalk.net) (Ping timeout: 252 seconds)
[08:43:59] *** Joins: lagash (lagash@lagash.shelltalk.net)
[08:46:28] *** Quits: wyrd (~wyrd@gateway/tor-sasl/wyrd) (Remote host closed the connection)
[08:46:46] *** Joins: wyrd (~wyrd@gateway/tor-sasl/wyrd)
[08:53:12] *** Joins: badkins (~badkins@136.56.92.199)
[08:57:17] *** Quits: badkins (~badkins@136.56.92.199) (Ping timeout: 240 seconds)
[10:20:48] *** Quits: klovett (~klovett@107.127.17.177) (Quit: ZZZzzz…)
[10:23:05] *** Joins: Duns_Scrotus__ (sid262565@id-262565.tinside.irccloud.com)
[10:24:41] *** Joins: karlosz (~karlosz@47.151.136.69)
[10:41:08] *** Quits: s-liao (~s-liao@101.86.96.21) (Quit: Client closed)
[10:48:39] *** Quits: grettke (~grettke@cpe-65-29-228-30.wi.res.rr.com) (Quit: My MacBook has gone to sleep. ZZZzzz…)
[10:49:24] *** Quits: ASau (~user@lmpc.drb.insel.de) (Remote host closed the connection)
[10:49:24] *** Quits: frost (~frost@user/frost) (Ping timeout: 240 seconds)
[10:54:16] *** Joins: badkins (~badkins@136.56.92.199)
[10:58:12] *** Quits: badkins (~badkins@136.56.92.199) (Ping timeout: 240 seconds)
[11:13:57] *** Joins: jdevoo (~jdevoo@178.197.196.190)
[11:24:01] *** Quits: karlosz (~karlosz@47.151.136.69) (Quit: karlosz)
[11:24:58] *** Parts: jdevoo (~jdevoo@178.197.196.190) ()
[11:34:01] *** Joins: grettke (~grettke@cpe-65-29-228-30.wi.res.rr.com)
[11:35:14] *** Quits: Avichi (~Avichi@2a02:a460:7aa6:1:fe83:b55e:cbe0:41c0) (Quit: Client closed)
[11:39:57] *** yagamisa1o is now known as newblue
[12:00:24] *** Quits: malaclyps (~mala@user/malaclyps) (Ping timeout: 250 seconds)
[12:04:38] *** Quits: grettke (~grettke@cpe-65-29-228-30.wi.res.rr.com) (Quit: My MacBook has gone to sleep. ZZZzzz…)
[12:07:22] *** Quits: newblue (~SingSong@120.197.255.246) (Changing host)
[12:07:22] *** Joins: newblue (~SingSong@user/yagamisato)
[12:15:00] *** Quits: aeth (~aeth@user/aeth) (Ping timeout: 240 seconds)
[12:17:13] *** Joins: aeth (~aeth@user/aeth)
[12:18:36] *** Joins: frost (~frost@user/frost)
[12:23:20] *** Joins: Darkcoal (~user@user/Darkcoal)
[12:36:15] *** Joins: Avichi (~Avichi@2a02:a460:7aa6:1:fe83:b55e:cbe0:41c0)
[12:37:59] *** Joins: mala (~mala@user/malaclyps)
[12:38:00] *** Quits: frost (~frost@user/frost) (Ping timeout: 272 seconds)
[12:48:30] *** Quits: m5zs7k (aquares@web10.mydevil.net) (Read error: Connection reset by peer)
[12:48:48] *** Joins: m5zs7k_ (aquares@web10.mydevil.net)
[12:57:46] *** m5zs7k_ is now known as m5zs7k
[13:04:48] *** Quits: Avichi (~Avichi@2a02:a460:7aa6:1:fe83:b55e:cbe0:41c0) (Quit: Client closed)
[13:57:37] *** Quits: notzmv (~zmv@user/notzmv) (Ping timeout: 240 seconds)
[14:27:00] *** Joins: civodul (~user@guix/contributor/civodul)
[14:34:00] *** Joins: gproto23 (~gproto23@user/gproto23)
[14:35:54] *** Joins: ASau (~user@lmpc.drb.insel.de)
[15:00:36] *** Joins: seninha (~seninha@user/seninha)
[15:01:32] *** Joins: skapata (~Skapata@2804:14c:87b0:9d2e:3c70:5798:e730:7b29)
[15:01:32] *** Quits: skapata (~Skapata@2804:14c:87b0:9d2e:3c70:5798:e730:7b29) (Changing host)
[15:01:32] *** Joins: skapata (~Skapata@user/skapata)
[15:16:40] *** Joins: patrice (~patrice@user/patrice)
[15:26:17] *** Quits: zwr (~zwr@2804:d45:b966:fb00:768b:56a2:a787:5841) (Ping timeout: 240 seconds)
[15:27:12] *** Joins: zwr (~zwr@2804:d45:b966:fb00:5d07:4fd9:1d9:2b23)
[15:34:08] *** Joins: Avichi (~Avichi@2a02:a460:7aa6:1:fe83:b55e:cbe0:41c0)
[15:46:36] *** Quits: X-Scale (~ARM@31.22.144.77) (Ping timeout: 240 seconds)
[15:48:42] *** Joins: X-Scale (~ARM@92.250.97.81)
[16:01:54] *** Quits: mon_aaraj (~MonAaraj@user/mon-aaraj/x-4416475) (Ping timeout: 252 seconds)
[16:03:56] *** Joins: mon_aaraj (~MonAaraj@user/mon-aaraj/x-4416475)
[16:12:31] *** Joins: s-liao (~s-liao@101.86.96.21)
[16:24:08] *** Joins: jrincayc (~Thunderbi@38.70.240.202.sumofiber.net)
[16:28:35] *** Quits: s-liao (~s-liao@101.86.96.21) (Ping timeout: 256 seconds)
[16:29:18] *** Joins: notzmv (~zmv@user/notzmv)
[16:31:35] *** Joins: s-liao (~s-liao@101.86.96.21)
[16:48:30] *** Quits: civodul (~user@guix/contributor/civodul) (Remote host closed the connection)
[16:54:58] *** Joins: kayprish (~kayprish@cable-24-135-254-227.dynamic.sbb.rs)
[17:01:48] *** Quits: jrincayc (~Thunderbi@38.70.240.202.sumofiber.net) (Ping timeout: 240 seconds)
[17:02:02] *** Quits: Avichi (~Avichi@2a02:a460:7aa6:1:fe83:b55e:cbe0:41c0) (Quit: Client closed)
[17:13:44] *** Joins: Avichi (~Avichi@2a02:a460:7aa6:1:fe83:b55e:cbe0:41c0)
[17:14:05] *** Quits: patrice (~patrice@user/patrice) (Quit: Leaving)
[17:14:59] *** Quits: s-liao (~s-liao@101.86.96.21) (Quit: Ping timeout (120 seconds))
[17:17:31] *** Joins: s-liao (~s-liao@101.86.96.21)
[17:18:50] *** Quits: s-liao (~s-liao@101.86.96.21) (Client Quit)
[17:19:47] *** Joins: s-liao (~s-liao@101.86.96.21)
[17:19:55] *** Quits: s-liao (~s-liao@101.86.96.21) (Client Quit)
[17:26:01] *** Joins: paul_j (~user@67.26.169.217.in-addr.arpa)
[17:37:17] *** Joins: jdevoo (~jdevoo@0.19.77.83.dynamic.wline.res.cust.swisscom.ch)
[17:42:14] *** Quits: jdevoo (~jdevoo@0.19.77.83.dynamic.wline.res.cust.swisscom.ch) (Quit: leaving)
[17:58:36] *** Joins: klovett (~klovett@107.127.17.177)
[18:24:12] *** Quits: mon_aaraj (~MonAaraj@user/mon-aaraj/x-4416475) (Ping timeout: 240 seconds)
[18:26:29] *** Joins: mon_aaraj (~MonAaraj@user/mon-aaraj/x-4416475)
[18:28:04] *** Joins: civodul (~user@guix/contributor/civodul)
[18:38:19] *** Quits: seninha (~seninha@user/seninha) (Quit: Leaving)
[18:45:46] *** Joins: badkins (~badkins@136.56.92.199)
[18:59:14] *** Quits: livoreno (~livoreno@user/notzmv) (Ping timeout: 260 seconds)
[19:13:49] <ecraven> interesting, using nan-boxing one could store ascii strings up to 6 characters as immediates...
[19:14:12] <leah2> the return of sixbit
[19:16:36] *** Quits: mon_aaraj (~MonAaraj@user/mon-aaraj/x-4416475) (Ping timeout: 240 seconds)
[19:18:50] *** Joins: mon_aaraj (~MonAaraj@user/mon-aaraj/x-4416475)
[19:25:43] <gwatt> without nanboxing you could store up to 7 ascii chars as an immediate string
[19:27:10] <ecraven> yea, but then you have to box doubles, which is not nice for lots of applications
[19:43:06] <sham1> Unboxing
[19:44:27] <sham1> I feel that numeric code should be able to be annotated such that operations can be monomorphised at compile time and values unboxed. I.e. gradual typing
[19:45:13] *** Quits: Guest3567 (~cat@h-98-128-128-173.A351.priv.bahnhof.se) (Quit: Reconnecting)
[19:45:25] *** Joins: sudden (~cat@h-98-128-128-173.A351.priv.bahnhof.se)
[19:45:49] *** sudden is now known as Guest402
[19:46:15] *** Quits: Guest402 (~cat@h-98-128-128-173.A351.priv.bahnhof.se) (Changing host)
[19:46:15] *** Joins: Guest402 (~cat@user/sudden)
[19:58:24] *** Quits: kayprish (~kayprish@cable-24-135-254-227.dynamic.sbb.rs) (Ping timeout: 252 seconds)
[20:00:05] *** Joins: seninha_ (~seninha@user/seninha)
[20:00:14] *** Quits: seninha_ (~seninha@user/seninha) (Remote host closed the connection)
[20:00:26] *** Joins: karlosz (~karlosz@47.151.136.69)
[20:05:40] *** Quits: Avichi (~Avichi@2a02:a460:7aa6:1:fe83:b55e:cbe0:41c0) (Quit: Client closed)
[20:18:19] *** Joins: livoreno (~livoreno@user/notzmv)
[20:31:53] <Zipheir> sham1: Yes1
[20:31:56] <Zipheir> *Yes!
[20:36:54] *** Quits: karlosz (~karlosz@47.151.136.69) (Ping timeout: 252 seconds)
[20:37:13] *** Quits: badkins (~badkins@136.56.92.199) (Remote host closed the connection)
[20:37:15] <jcowan> I find it difficult to believe that anyone is sexually aroused by looking at a Mondrian (unless indeed as a result of a private association of ideas)
[20:42:41] *** Joins: badkins (~badkins@136.56.92.199)
[20:45:23] *** Joins: silasfox (~sbv@p4fe8dbf5.dip0.t-ipconnect.de)
[20:55:18] *** Quits: gproto23 (~gproto23@user/gproto23) (Remote host closed the connection)
[20:57:35] <Zipheir> jcowan: Context??
[20:59:29] <mdhughes> All arousal and other emotions are based on private association of ideas.
[21:00:43] <mdhughes> I grew up with 8-bit and earlier videogames. I see a square with a line & hook sticking out, I believe I'm seeing a knight with a sword. An 8-pixel-wide duck is a mighty dragon.
[21:01:32] <mdhughes> Entirely possible someone sees a few colored boxes as sexy times.
[21:02:13] *** Quits: civodul (~user@guix/contributor/civodul) (Quit: ERC (IRC client for Emacs 27.2))
[21:02:20] *** Quits: paul_j (~user@67.26.169.217.in-addr.arpa) (Quit: Asta la vista)
[21:07:13] <Zipheir> "When correctly viewed, everything is lewd!", said Tom Lehrer
[21:07:47] <sham1> The lewdness depends on the context, ofc
[21:18:45] *** Joins: Avichi (~Avichi@2a02:a460:7aa6:1:4b40:bd4e:6266:bc3a)
[21:18:47] *** Joins: masoudd (~masoudd@user/masoudd)
[21:35:42] <ecraven> does anyone here know of any sort of study or comparison of what "big enough" is for fixnum size? is there an actual difference in practical applications between 50 bit fixnums and 62 bit fixnums, for example?
[21:37:40] *** Joins: civodul (~user@guix/contributor/civodul)
[21:38:51] <sham1> Well more is better
[21:39:17] <sham1> But I don't know of any studies
[21:39:25] <ecraven> of course, but is there any relevant difference between 50 and 62 bit fixnums? in the average application?
[21:39:41] *** Quits: turlando (~turlando@user/turlando) (Ping timeout: 256 seconds)
[21:42:00] *** Joins: turlando (~turlando@93-42-250-112.ip89.fastwebnet.it)
[21:42:00] *** Quits: turlando (~turlando@93-42-250-112.ip89.fastwebnet.it) (Changing host)
[21:42:00] *** Joins: turlando (~turlando@user/turlando)
[21:42:56] *** Quits: badkins (~badkins@136.56.92.199) (Remote host closed the connection)
[21:43:08] *** Joins: badkins (~badkins@136.56.92.199)
[21:43:46] <gwatt> I suspect the hangup with nan-boxing is more the restricted pointer size and less about fixnums.
[21:45:04] <gwatt> It's not an issue for x64 or arm64 since they have 48bits of addressable memory, but it would have been an issue for a 32 bit runtime.
[21:46:17] <ecraven> yea, but if you only target those two, the main question left (imvho) is fixnum size
[21:46:40] <ecraven> and having immediate doubles is really worth a lot, unless you have a compiler that unboxes doubles (which afaiu) most don't
[21:49:01] *** Quits: badkins (~badkins@136.56.92.199) (Remote host closed the connection)
[21:51:56] <Zipheir> It would affect the possible sizes of fixnum-indexed structures.
[21:53:20] *** Quits: mzan (~quassel@mail.asterisell.com) (Quit: No Ping reply in 180 seconds.)
[21:53:23] <Zipheir> I don't know if many Schemes restrict vector indices to the fixnums, but certainly some structures (e.g. radix trees) rely on the assumption of fixnum indices.
[21:53:53] <gwatt> Also it would complicate implementations that want to maintin 32 bit support if they now have to support two different memory representations
[21:53:53] <mdhughes> Well, 52 bits is traditional from JS and other "ints are just floats!" languages.
[21:53:58] <Zipheir> Well, they don't have to, of course.  But I suspect they're not a win with bignums.
[21:54:46] *** Joins: mzan (~quassel@mail.asterisell.com)
[21:55:50] <ASau> As I said previously, "floats" are just specially selected rationals, thus it is just as fine to use only those integers that fit "floats".
[21:58:03] <gwatt> Zipheir: When embedding the length of an indexed data structure, you don't need to limit the length to fit in a fixnum. You could store an entire word if you want
[22:05:44] <Zipheir> That makes sense.
[22:07:36] <sham1> Although indexing with fixnums would be nicer than having to check that your (potentially) bignum is in range
[22:09:48] <gwatt> You still have to range-check with fixnums
[22:10:22] <sham1> True, but it should be simpler
[22:11:25] <jcowan> Zipheir: apparently ww, but referring to the notion that "given a topic, the Internet has porn on that topic"
[22:26:03] *** Parts: pranavats (3fba1d1b34@2a00:c70:1:178:170:40:189:1) ()
[22:34:09] *** Joins: pranavats (3fba1d1b34@2a00:c70:1:178:170:40:189:1)
[22:34:58] *** Joins: ec (~ec@gateway/tor-sasl/ec)
[22:35:00] *** Quits: mon_aaraj (~MonAaraj@user/mon-aaraj/x-4416475) (Ping timeout: 240 seconds)
[22:35:17] <ecraven> Is +nan.0 a signaling NaN in Chez Scheme?
[22:35:39] *** Joins: mon_aaraj (~MonAaraj@user/mon-aaraj/x-4416475)
[22:39:13] <ecraven> it is not, in fact.. I swapped the quiet/signalling values of the most significant significand bit
[22:43:30] *** Joins: badkins (~badkins@136.56.92.199)
[22:47:57] *** Quits: badkins (~badkins@136.56.92.199) (Ping timeout: 256 seconds)
[22:49:18] <Zipheir> OK, I'm convinced I don't really understand finger trees, and I'm not sure anyone else other than the original authors do either.
[22:50:15] <Zipheir> jcowan: Maybe the definition of "abstract art" is "non-rule-34-able".
[22:58:01] <Zipheir> The difficulty is just this weird, "compacting" recursive structure where a tree's trunk subtree is a tree of tuples, and that subtree's trunk is tree of tuples-of-tuples, and so on.  It's tricky to write functions that keep all those "insides" inside.
[22:58:42] <Zipheir> Maybe it's all just a little too clever for us monkeys.
[22:59:14] *** Joins: seninha (~seninha@user/seninha)
[22:59:31] <jcowan> Just about nobody deliberately uses signaling NaNs as NaNs
[23:01:11] <sham1> Probably because signaling NaNs are terrible
[23:01:18] <jcowan> Zipheir: Hiawatha making fur mittens, per Lewis Carroll:  "He, to get the fur side inside / Put the inside, skin side, outside / He, to get the skin side outside / Put the outside, fur side, inside / Thus he turned them inside outside.
[23:02:33] <Zipheir> Excellent. :)
[23:10:32] <Franciman> Zipheir: what's the problem with Finger Trees?
[23:13:04] <Zipheir> Franciman: See above.  They're not too bad until you get to zippering them, but you need that to treat them as sequences.
[23:14:34] <Zipheir> See http://ix.io/3PHN , the section marked "Views & splitting".
[23:15:13] <Franciman> ohhh
[23:15:17] <Franciman> sorry i didn't see the message
[23:15:27] <Franciman> i had half scrolled view
[23:17:41] <dpk> (: pair-or-null? (* --> boolean)) ;; another fine macro from hl-lib
[23:18:38] <Zipheir> There are some CHICKENisms in there, sorry.
[23:19:23] *** Quits: Darkcoal (~user@user/Darkcoal) (Quit: Darkcoal)
[23:23:07] *** Joins: badkins (~badkins@136.56.92.199)
[23:23:18] <sham1> Eugh, CHICKEN bones on my broth
[23:24:30] *** Quits: madage (~madage@user/madage) (Remote host closed the connection)
[23:24:30] *** Quits: adanwan (~adanwan@gateway/tor-sasl/adanwan) (Remote host closed the connection)
[23:24:48] *** Joins: madage (~madage@user/madage)
[23:25:05] <dpk> Zipheir: i found the Haskell definitions in the Hinze/Paterson paper good for keeping the spine in order
[23:25:10] <Zipheir> Making sense of a subtle design in CS sometimes seems like the blind leading the blind.
[23:25:17] <dpk> my Scheme implementation is essentially a translation of it
[23:25:20] *** Joins: ahlk (~user@2600:1700:31c0:3a10::43)
[23:25:23] <Zipheir> dpk: Ditto.
[23:25:32] <Zipheir> dpk: If only they didn't use so many damn typeclasses.
[23:25:38] <dpk> where it's lacking for me, as for you, is trying to understand the relation to strictness
[23:26:03] <dpk> vs laziness
[23:26:43] <dpk> iirc (having not looked at the paper since last Sunday) they imply that the basic deque operations are intended to work strictly, but then you get to the measurement stuff
[23:26:44] <Zipheir> I think I have a good (beginnings of an) approach there.  Always delay trunks; when consing/snocing, always force the trunk in the recursive case before making a new promise.
[23:27:08] *** Quits: clacke (88d96f2df3@knopi.disroot.org) (Read error: Connection reset by peer)
[23:27:37] *** Quits: badkins (~badkins@136.56.92.199) (Ping timeout: 240 seconds)
[23:27:40] <Zipheir> This seems to avoid force cascades (e.g. when the first two cdrs force a promise or two, then the third forces 172 promises.)
[23:27:44] <dpk> i think i could adapt my implementation to do that fairly easily
[23:28:36] <Zipheir> dpk: Is your implementation public?  Maybe we could work together.
[23:28:53] <dpk> https://gitlab.com/dpk/presrfis/-/blob/master/finger-tree/finger-tree.scm, but that doesn't include my measurement implementation yet
[23:29:09] <Zipheir> Thanks, I'll study it.
[23:29:23] <Zipheir> Measurement is what's kicking my butt at the moment.
[23:29:39] <dpk> (which doesn't entirely work. i filled a finger tree with the letters a to z, measured it, and iirc it said there were 9 letters in the alphabet)
[23:29:40] *** Joins: badkins (~badkins@136.56.92.199)
[23:29:55] <Zipheir> That sounds like a very familiar bug.
[23:32:56] <Zipheir> finger-tree-vertebra :)
[23:33:48] *** Quits: badkins (~badkins@136.56.92.199) (Ping timeout: 240 seconds)
[23:35:23] <Zipheir> dpk: I got around that, painfully, by tagging every external element and always giving a length of 1 for those.
[23:35:35] <Zipheir> While nodes have a length of 2 or 3, etc.
[23:36:02] <Zipheir> This means duplicating a lot of functionality for wrapping and non-wrapping forms, unfortunately.
[23:36:44] <Zipheir> Presumably that's what Hinze & Paterson ended up doing as well.
[23:37:30] <Zipheir> Also, the Haskell Data.Sequence source is a terrible reference for implementing these.  It's monstrously long and incomprehensible, I wouldn't trust it to serialize my socks.
[23:43:59] *** Joins: civodul` (~user@guix/contributor/civodul)
[23:44:01] *** Quits: civodul (~user@guix/contributor/civodul) (Read error: Connection reset by peer)
[23:47:35] <dpk> what *would* you trust to serialize your socks?
[23:48:52] *** Joins: badkins (~badkins@136.56.92.199)
[23:52:24] *** Joins: adanwan (~adanwan@gateway/tor-sasl/adanwan)
[23:54:15] *** Quits: badkins (~badkins@136.56.92.199) (Ping timeout: 256 seconds)
[23:54:36] <dpk> > (measure alphabet-ft)
[23:54:36] <dpk> $6 = 10
[23:54:51] <dpk> yeah, so, could be better? *squeaky thumbs up*
[23:56:11] <dpk> Zipheir: i've committed and pushed my broken measurement implementation if you want to look. i decided to make the measurement lazy, which is probably why it's not working
[23:56:45] <dpk> oh, i forgot to add (define sum-measure (make-measure 0 (lambda (x) 1) +)) to the actual file
[23:56:57] <dpk> but that's how i was trying to measure the size of the alphabet
[23:58:10] <dpk> one problem is that i'm using measure both as a noun and a verb, which is not going to confuse anyway
[23:58:13] <dpk> *anyone
[23:58:41] <dpk> i tried to think of an alternative, but 'stick' was a bit too cutesy
[23:58:53] <dpk> (for the name of the record type)
[23:59:22] <Zipheir> dpk: Pulled.
