[00:00:07] <jinsun> Compu-Celebi: that is black's styke, it keep them in same line if the line doesn't cross 88 chars
[00:00:48] <Compu-Celebi> The line length limit should be seventy-nine, not eighty-eight, characters.
[00:01:06] <kenwoodfox> The asyncio docs mention that task exceptions can never be retreived, but how do you work around it? Im using asyncio and i want to restart my program, restart a task or at least, do something when an exception is rasied out of the task but its a bit weird trying to find ways to actually do that. https://docs.python.org/3/library/asyncio-dev.html#detect-never-retrieved-exceptions
[00:01:08] <jinsun> no it should be 88
[00:01:09] <kenwoodfox> or am i just bad at reading :/
[00:01:17] <Compu-Celebi> PEP 8 guidelines concur with me, not you.
[00:01:26] *** Joins: StyXman (~mdione@2a01:e0a:5e5:4790:20d:b9ff:fe52:1a0)
[00:01:38] <jinsun> yes but black styl e is better than pep8
[00:01:47] <bancroft> these are all great points, thank you!
[00:01:47] *** Joins: Ivii (~Ivyy@2001:a61:13eb:f801:abf3:43cd:3a92:af85)
[00:02:01] <jinsun> comma after the last argument is also black style if it decides to explode the arguments into multiple lins
[00:02:03] * deniska tends to use ~70 char line limit because that's the comfortable :vsplit on his screen
[00:02:25] <Compu-Celebi> The line length of most terminals is eighty characters.  That is the reason for PEP 8's stipulation.
[00:02:42] <Compu-Celebi> IDLE's line length is eighty characters.
[00:02:46] <StyXman> what good high level image libraries are there? in particular, I'm looking for one that could do composition functions like SVG's or these: https://tilemill-project.github.io/tilemill/docs/guides/comp-op/
[00:02:49] *** Quits: rpkilby (~rpkilby@ec2-34-252-84-235.eu-west-1.compute.amazonaws.com) (Ping timeout: 252 seconds)
[00:02:54] *** Joins: NeilRG (~NeilRG@192.222.196.111)
[00:03:04] *** Joins: exarkun (~exarkun@user/exarkun)
[00:03:13] <exarkun> How do I write a unicode string to stdout in Python?
[00:03:17] *** Quits: X4 (~X4@x4db55048.dyn.telefonica.de) (Quit: Client closed)
[00:03:22] <Compu-Celebi> Well, the length can be changed by changing the window's width, but people generally do not do that.
[00:03:27] <StyXman> Compu-Celebi: in most _old_ terminals
[00:03:32] <deniska> StyXman: libcairo comes to mind, not sure whether it has good bindings though
[00:03:35] *** dasbootmir is now known as dasbootmir_away
[00:03:35] <Compu-Celebi> I use Linux Mint.
[00:04:10] <jinsun> exarkun: print(your_string) ?
[00:04:24] <StyXman> exarkun: print()? print(unicode_scring.encode())?
[00:04:29] <Compu-Celebi> Its terminal window's default line length is eighty characters.
[00:04:37] <exarkun> jinsun: That fails if stdout encoding can't represent any of the code points in the string.
[00:04:47] <StyXman> Compu-Celebi: which one? if I open a konsole here I get...
[00:04:59] <StyXman> 257 chars with
[00:05:05] <StyXman> 64 lines
[00:05:06] <deniska> there're two kinds of terminal windows on my screen, either maximized, or one I'll close in 10 seconds :)
[00:05:14] <exarkun> StyXman: On Python 3 that prints `b'...'` instead of just the string.
[00:05:15] *** Joins: stormy (~stormy@p57bdef5c.dip0.t-ipconnect.de)
[00:05:18] <Compu-Celebi> StyXman, Linux Mint only features terminal windows of one type.
[00:05:23] <Byteflux> Maybe most terminal emulators have a default of 80, but it's debatable to say that most people are using 80-width.
[00:05:32] *** Quits: vats (~vats@42.111.21.216) (Ping timeout: 252 seconds)
[00:05:41] <Byteflux> Catering to the default at the cost of much needed real estate seems a bit silly.
[00:05:45] <Compu-Celebi> By default, such a window is created by pressing Ctrl+Alt+T.
[00:05:59] <StyXman> Compu-Celebi: I wounldn't call that a rigurous statistic :)
[00:06:16] <StyXman> exarkun: can you paste your code?
[00:07:10] *** Quits: NeilRG (~NeilRG@192.222.196.111) (Ping timeout: 240 seconds)
[00:07:17] <StyXman> In [3]: u="úá"
[00:07:17] <StyXman> In [4]: print(u)
[00:07:17] <StyXman> úá
[00:07:25] <KirkMcDonald> exarkun: If the encoding of stdout can't represent the Unicode string you're attempting to print, what do you expect the output to be?
[00:07:29] *** Joins: Lando-SpacePimp (~Lando@user/lando-spacepimp)
[00:07:41] *** dasbootmir_away is now known as dasbootmir
[00:07:54] <StyXman> exarkun: ah, you're right
[00:07:55] <exarkun> KirkMcDonald: Replacement character?  Or \u... style escape would be okay.
[00:07:55] <StyXman> In [5]: print(u.encode())
[00:07:55] <StyXman> b'\xc3\xba\xc3\xa1'
[00:08:18] <Compu-Celebi> I detest needing to maximize or to other enlarge windows simply people do not sufficiently limit their code's line lengths.
[00:08:21] *** Quits: dasbootmir (~dasbootmi@user/dasbootmir) (Quit: gone to sleep... zzz…)
[00:08:29] <Compu-Celebi> s/simply people/simply because people/
[00:08:37] <StyXman> Compu-Celebi: ehbueh
[00:08:44] *** Joins: ircuser-1 (~Johnny@71.63.241.168)
[00:08:52] *** Joins: dasbootmir (~dasbootmi@user/dasbootmir)
[00:09:05] <Compu-Celebi> "Ehbueh" seems to not be an English word.
[00:09:12] <stormy> \quit
[00:09:14] *** Quits: dasbootmir (~dasbootmi@user/dasbootmir) (Client Quit)
[00:09:15] *** Quits: stormy (~stormy@p57bdef5c.dip0.t-ipconnect.de) (Client Quit)
[00:09:21] <Compu-Celebi> Wiktionary has no entry for it for any language.
[00:09:33] *** Parts: vd (~vd@bras-base-mtrlpq2848w-grc-41-70-53-240-121.dsl.bell.ca) ()
[00:09:38] *** Joins: dasbootmir (~dasbootmi@user/dasbootmir)
[00:09:41] <Byteflux> exarkun: maybe s.encode(errors='replace')
[00:09:59] <KirkMcDonald> exarkun: Well, you can always use sys.stdout.buffer.write() to write bytes directly to stdout.
[00:10:01] <exarkun> Byteflux: Then on Python 3 you get bytes and a `b'...'` wrapper
[00:10:20] <exarkun> KirkMcDonald: I have unicode though, not bytes.
[00:10:23] <Compu-Celebi> I did not know that standard output had any encoding, much less that its encoding could vary.
[00:10:23] *** Quits: rsx (~dummy@ppp-188-174-151-43.dynamic.mnet-online.de) (Quit: rsx)
[00:10:26] *** Joins: p-i- (~Ohmu@223.206.69.159)
[00:10:39] <exarkun> Compu-Celebi: It's a Python-ism
[00:10:49] <StyXman> Compu-Celebi: I really don't know how to translate that, sorry
[00:10:56] <KirkMcDonald> exarkun: Yes. So you will have to encode it yourself, e.g. sys.stdout.buffer.write(s.encode(encoding, "replace"))
[00:10:59] <StyXman> more like :shrug:
[00:11:18] <f8e4> nedbat y here?
[00:11:31] <KirkMcDonald> exarkun: Where `encoding` is whatever the encoding of stdout is; `sys.stdout.encoding` might be useful.
[00:11:40] *** Quits: trace987 (~trace@ip5f5a6a70.dynamic.kabel-deutschland.de) (Remote host closed the connection)
[00:11:49] <Byteflux> exarkun: seems weird, but maybe s.encode().decode(errors='replace')
[00:12:11] <StyXman> exarkun: .encode() should try to encode to the system's encoding. print() does that already
[00:12:16] <exarkun> Byteflux: On Python 2 `s.encode()` is derived from locale so that will fail sometimes too.
[00:12:40] <exarkun> Byteflux: And I think `errors` needs to go with encode
[00:12:40] <Byteflux> I pretend Python 2 doesn't exist :P
[00:12:40] <Compu-Celebi> Ah, I recollect that the value of `sys.stdout` is a file object and that file objects have an encoding property.
[00:12:43] <KirkMcDonald> .encode() defaults to UTF-8, not the system encoding.
[00:12:52] <f8e4> nedbat: there is an nft craze going on with 10k - 100k usd per generated art; since you have some python generated you could list it on open sea and make serious bucks; eg https://opensea.io/collection/art-blocks
[00:12:54] <Byteflux> exarkun: Nope, errors is both on encode and decode
[00:13:09] <StyXman> exarkun: if the locale is wrong, there is not much you can do except the encode/decode+replace KirkMcDonaldsaid
[00:13:09] <Byteflux> When you decode with errors='replace' then you get replacement characters in your decoded string
[00:13:13] <KirkMcDonald> So that round-trip is pointless.
[00:13:20] <Compu-Celebi> At least on my system, the value of `sys.stdout.encoding` is `"utf-8"`.
[00:13:26] *** Joins: chuck_ (~chuck@181.191.142.202)
[00:13:26] *** Quits: Joel (~jjshoe@user/joel) (Quit: ZNC 1.7.5+deb4 - https://znc.in)
[00:13:28] <exarkun> KirkMcDonald: Starting with some Python 3 it defaults to utf-8
[00:13:39] <exarkun> KirkMcDonald: On all Python 2 it varies with LANG and such
[00:13:40] <Byteflux> KirkMcDonald: True, could just encode(errors='replace') and write the bytes with write()
[00:13:56] <Byteflux> Ah that was what you did above.
[00:14:05] <Byteflux> exarkun: You should use KirkMcDonald's example above.
[00:14:14] <KirkMcDonald> exarkun: Python 2 was entirely different where Unicode is concerned, it is true.
[00:14:22] *** Quits: p-i-_ (~Ohmu@223.206.69.159) (Ping timeout: 252 seconds)
[00:14:28] <exarkun> sys.stdout has no buffer on Python 2
[00:14:36] <KirkMcDonald> Also true.
[00:14:43] *** Quits: chuck_ (~chuck@181.191.142.202) (Client Quit)
[00:14:46] <KirkMcDonald> But why is Python 2 still relevant, here?
[00:14:54] <exarkun> Well, I asked about Python, not Python 3.  But I see how that could be unclear, so let me clarify.  How do I do it for Python 2 and Python 3?
[00:15:10] *** Joins: chuck_ (~chuck@181.191.142.202)
[00:15:20] <KirkMcDonald> You should be able to print bytes in Python 2, for one.
[00:15:31] *** Quits: chuck_ (~chuck@181.191.142.202) (Client Quit)
[00:15:32] <exarkun> Sure, but I have unicode.
[00:15:35] <KirkMcDonald> Failing that, sys.stdout.write() operates on bytes in Python 2.
[00:15:53] <KirkMcDonald> Yes. You will still need to encode it yourself in Python 2. *Especially* in Python 2.
[00:16:00] *** Quits: EvilDMP (~textual@django/moderator/EvilDMP) (Quit: My MacBook has gone to sleep. ZZZzzz…)
[00:16:11] <exarkun> It seems like I need to especially encode it myself on Python 3 as well?  Just ... differently.
[00:16:32] *** Quits: jl (~kk@user/jl) (Ping timeout: 252 seconds)
[00:17:30] <exarkun> And write it to a different place depending
[00:17:31] <KirkMcDonald> Sure.
[00:17:31] <Byteflux> If you want replacements, yes sounds like you need to encode it in Python 3 too.
[00:17:31] <exarkun> Does it seem weird that even Python 3 doesn't have a simple API for writing unicode to stdout?
[00:17:31] <Compu-Celebi> Therefore, at least on my system, everything that is outputted into IDLE, for example, is encoded in UTF-8.
[00:17:31] <KirkMcDonald> exarkun: Sure it does. You just print it.
[00:17:31] <jinsun> it is your stdout that is the problem
[00:17:31] <Byteflux> It does, it's called print()
[00:17:31] <exarkun> That raises an exception sometimes
[00:17:31] <Byteflux> And print() is very simple.
[00:17:33] <KirkMcDonald> exarkun: Because in the modern world it's not unreasonable to assume stdout uses UTF-8.
[00:17:36] <StyXman> deniska: any other sugestion?
[00:17:43] <khile> the problem is the locale of your output destination not pythons ability to output unicode
[00:17:52] <StyXman> cairo does not look very straightforward
[00:17:52] <jinsun> just ditch python2 and MS-DOS and switch to modern stuff
[00:18:14] <exarkun> KirkMcDonald: I agree.
[00:18:17] *** Joins: EvilDMP (~textual@django/moderator/EvilDMP)
[00:18:36] *** Quits: Mattiaslndstrm (~Mattiasln@c188-148-207-108.bredband.tele2.se) (Quit: My MacBook has gone to sleep. ZZZzzz…)
[00:18:58] <StyXman> deniska: ooooohhhh, look what I found: https://pypi.org/project/blend-modes/
[00:19:01] <KirkMcDonald> exarkun: "Print it but mangled in this particular way" is sufficiently specific that it isn't built-in to print().
[00:19:21] *** Joins: MaXxer0 (~MaXxer0@i5E86B2DF.versanet.de)
[00:19:37] <exarkun> KirkMcDonald: I just realized answered that question incorrectly, sorry.
[00:19:51] <exarkun> KirkMcDonald: The UTF-8 encoded bytes would also be a fine output.
[00:20:13] <KirkMcDonald> exarkun: Perhaps.
[00:20:44] <kenwoodfox> ERROR:asyncio:Unhandled error in exception handler lol
[00:20:47] <exarkun> (Fine with me, I mean)
[00:21:06] <kenwoodfox> You had one job <3
[00:21:52] <KirkMcDonald> exarkun: If you just want to print *something*, without a lot of care as to exactly what, you can always: print(s.encode("ascii", "replace").decode())
[00:22:22] <KirkMcDonald> Assuming stdout can at least speak ASCII.
[00:22:35] <Byteflux> latin1 also a good choice
[00:22:43] *** Parts: StyXman (~mdione@2a01:e0a:5e5:4790:20d:b9ff:fe52:1a0) (http://quassel-irc.org - Chat comfortably. Anywhere.)
[00:22:49] <exarkun> KirkMcDonald: I certainly want to print non-ASCII.
[00:23:14] <exarkun> KirkMcDonald: And I certainly want it to appear on UTF-8-capable terminals
[00:23:23] <KirkMcDonald> Latin-1 is less good. Not every esoteric 8-bit code page (which, if it isn't UTF-8, stdout will probably be) can speak all of Latin-1.
[00:23:26] *** Joins: vdamewood (~vdamewood@fedora/vdamewood)
[00:23:37] *** Quits: tty14 (~tty14@152.67.7.96) (Ping timeout: 252 seconds)
[00:24:44] *** Quits: rpkilby_ (~rpkilby@c-24-20-208-106.hsd1.or.comcast.net) (Remote host closed the connection)
[00:25:19] *** Joins: rpkilby (~rpkilby@ec2-34-252-84-235.eu-west-1.compute.amazonaws.com)
[00:26:47] <KirkMcDonald> exarkun: In any case this is not a problem that generalizes between Python 2 and 3. But Python 2 is dead, so I'm not overly concerned with inspecting the corpse at this point.
[00:27:43] <kenwoodfox> Im having some trouble with asyncio, im trying to use this as my exception handler https://github.com/FRC-1721/MailBlaster/blob/develop/email_blaster/exception_handler.py, by setting it up here on line 23 https://github.com/FRC-1721/MailBlaster/blob/7e62be5ba66ef4508bac5e1e3eaa25169d916c7c/email_blaster/main.py#L23 using discord.pys event loop, im getting this error though:https://paste.debian.net/1210805/
[00:27:43] <kenwoodfox> I want that emailPassword exception being rasied because im experimenting with being able to catch an exception in that loop, if an exception happens there id like to try and handle it, do a reboot of the program something like that, i still have to press ctrl+c to stop the program and see any uncaught errors witch is my big issue
[00:28:01] <exarkun> https://gist.github.com/exarkun/6fcc2dad22e90e77e8b8a92f9c688615 might be a close approximation
[00:28:36] *** Joins: olbat (~olbat@user/olbat)
[00:28:56] <exarkun> KirkMcDonald: I appreciate that you don't want to think about Python 2.  Python 2 is an integral part of my question though and I _do_ want to think about Python 2 (for good reasons but I doubt you care about but I will share if you want) so I can't just say "whatever".
[00:29:15] *** Quits: LuxuryMode (uid91005@id-91005.ilkley.irccloud.com) (Quit: Connection closed for inactivity)
[00:29:17] *** Quits: sn1tch3r (~sn1tch3r@user/sn1tch3r) (Quit: Leaving)
[00:30:23] *** Quits: blindguard (~blindguar@2a02:908:1864:c200::4433) (Quit: Konversation terminated!)
[00:30:53] *** Joins: Rain4 (~Rain@li958-238.members.linode.com)
[00:31:00] *** Joins: sn1tch3r (~sn1tch3r@user/sn1tch3r)
[00:31:01] <Compu-Celebi> I only ceased programming in versions of Python whose major version number is two approximately one to two years ago.
[00:31:15] <exarkun> KirkMcDonald: So, thanks for your help and I am not upset if you don't want to discuss it further.
[00:31:30] <kenwoodfox> Am i doing something dumb? im sorta not sure where im looking with asyncio still, its a bit for my brain to wrap around
[00:31:52] <kenwoodfox> I thoight i was passing `loop` into my exception handler, why does it need to search for the running loop?
[00:32:12] <foo> grym: yeah, 3.7 is a huge cluster/PITA. I've been dealing with dep issues for hours. And I don't even think I can solve this, some packages require a certain version higher and another package requires a version less
[00:32:19] <Wooble> exarkun: if you need to support both 2 and 3, possibly using click (version 7; they dropped py2 support in 8) and its echo() function is the least painful.
[00:32:57] <KirkMcDonald> There is also six.print_(), but that may not offer the required replacement character behavior.
[00:32:59] <exarkun> Wooble: Thanks.  Probably not though.  It's a large codebase that does not use click.  Switching to click is surely harder than solving this directly.
[00:33:37] <KirkMcDonald> exarkun: I will point out that you're calling a function `print` in Python 2, which will be a syntax error without the needed __future__ import.
[00:33:43] *** Quits: Derailed (~tom@ec2-13-211-184-100.ap-southeast-2.compute.amazonaws.com) (Quit: ZNC - https://znc.in)
[00:33:56] <exarkun> KirkMcDonald: Yes, of course.
[00:34:22] *** Joins: arseru (uid515527@user/arseru)
[00:34:23] <exarkun> Did you think I had a py 2/3 polyglot codebase without all of the __future__ imports already spread out over everything? :)
[00:34:31] <KirkMcDonald> Point.
[00:34:47] <KirkMcDonald> (Also I'm noticing the code already references the builtin exposed by the __future__ import.)
[00:34:48] *** Joins: bfoley (~bfoley@pool-173-48-101-113.bstnma.fios.verizon.net)
[00:34:54] <Wooble> exarkun: it might be possible to just pull echo() out of click as a standalone, although I haven't looked at the implementation and really don't want to. :)
[00:35:01] *** Quits: k162 (~k162@user/k162) (Quit: BitchX: [v0.2.1])
[00:35:08] *** Quits: Linux77 (~Linux7_7@186.233.182.237) (Read error: Connection reset by peer)
[00:35:34] <exarkun> six.print_ _sounds_ like exactly what I was hoping to discover... but it seems like it is about Py3 "softspace" changes and not encoding (at least, it seems to fail the same way as builtin print on Python 2).
[00:35:45] *** Joins: bomb-on (~bomb-on@194.144.47.113)
[00:35:46] <KirkMcDonald> exarkun: Honestly I would not be above just grabbing the source of six's `print_` function wholesale and cramming in the additional behavior you require.
[00:36:19] <KirkMcDonald> https://github.com/benjaminp/six/blob/master/six.py#L757
[00:36:21] <exarkun> I have a six dependency already, too, so I could just import it
[00:36:31] *** Quits: segfaultbanana (~segfaultb@user/segfaultbanana) (Remote host closed the connection)
[00:36:31] <exarkun> Yes ... it has so many lines that talk about encoding!  I wonder why it didn't work.
[00:36:54] <KirkMcDonald> Because it behaves like print() does, and insists on strict encoding.
[00:36:58] <kenwoodfox> Is my question formatted wrong? I can try and use less links
[00:37:27] <Compu-Celebi> How can a Python program determine how much RAM it is using in total?  How can it determine how much RAM it is using to store a value (in a variable, for example)?
[00:37:29] *** Joins: segfaultbanana (~segfaultb@user/segfaultbanana)
[00:37:37] <exarkun> KirkMcDonald: It doesn't behave like Python 3 print.  What do you mean by "strict encoding"?
[00:37:49] <exarkun> Compu-Celebi: Variables aren't where Python stores values, for one thing.
[00:37:51] <KirkMcDonald> exarkun: errors="strict", I mean.
[00:37:59] <exarkun> KirkMcDonald: Aha
[00:38:21] <Compu-Celebi> Are variables not associated with memory locations?
[00:38:22] <KirkMcDonald> Compu-Celebi: This can be an incredibly complex question to answer.
[00:38:29] <KirkMcDonald> Compu-Celebi: A variable refers to an object.
[00:38:43] <Wooble> Compu-Celebi: you need it to be able to introspect, or just need to see the info as the programmer? Use a memory profile if the latter.
[00:38:47] <Wooble> profiler*
[00:39:11] <Compu-Celebi> I am interested in the former.
[00:39:28] <Wooble> for total memory, asking psutil is probably the solution. for an individual object... give up? :)
[00:39:42] <KirkMcDonald> Compu-Celebi: For one thing, any given object can be referred to by multiple other things.
[00:40:13] <KirkMcDonald> Compu-Celebi: So the question, "How much memory can be reached by this variable?" is complicated by the fact that other things can reach that same memory; the question becomes one of definitions.
[00:40:27] <Wooble> Compu-Celebi: applying sys.getsizeof recursively will get you a value that may or may not resemble what the runtime's actually using in memory.
[00:40:33] <Compu-Celebi> I know that `psutil` can be used to ascertain how much RAM all of the computer's processes are using in total.  It can present similar information for individual processes?
[00:40:48] <KirkMcDonald> sys.getsizeof() in particular can be very misleading, in just the way I'm describing.
[00:41:12] <Compu-Celebi> I did not know of that function.
[00:41:17] <Wooble> for sure just don't point getsizeof() at a collection and expect it to mean anything.
[00:41:43] *** Joins: k162 (~k162@user/k162)
[00:42:16] *** Quits: Blackpajamas (~Blackpaja@24-246-42-203.cable.teksavvy.com) (Quit: Blackpajamas)
[00:42:22] *** Quits: Cheaterman (~Cheaterma@user/cheaterman) (Ping timeout: 256 seconds)
[00:43:03] <Compu-Celebi> I did not know of the method `__sizeof__`.
[00:43:06] *** Joins: Linux77 (~Linux7_7@186.233.182.237)
[00:43:13] *** Joins: lastshell (~lastshell@user/lastshell)
[00:43:24] <Wooble> Compu-Celebi: psutil has  Process.memory_info() for individual processes. then you get to decide which of the numbers you get back you meant. :)
[00:43:37] *** Joins: Derailed (~tom@ec2-13-211-184-100.ap-southeast-2.compute.amazonaws.com)
[00:43:38] <Compu-Celebi> It is not mentioned in the official Python documentation's third chapter, "Data model."
[00:44:11] *** Joins: Cheaterman (~Cheaterma@user/cheaterman)
[00:44:19] <KirkMcDonald> It is documented thus: https://docs.python.org/3/library/sys.html#sys.getsizeof
[00:44:20] *** Joins: FatDarrell (~textual@68.91.156.229)
[00:44:22] <jinsun> kenwoodfox: why is your shutdown functon async?
[00:44:26] *** Joins: rama (~rama@c-24-130-92-222.hsd1.ca.comcast.net)
[00:44:36] *** Parts: exarkun (~exarkun@user/exarkun) (WeeChat 2.4)
[00:44:37] *** Quits: Hax0r (~Hax0r@128.127.222.236) (Ping timeout: 252 seconds)
[00:44:43] <kenwoodfox> jinsun: just what the guide i was following suggested, im not very good with async i could try making it not async
[00:44:47] <Compu-Celebi> KirkMcDonald, I was referring to `__sizeof__`, not `sys.getsizeof`.  That documentation is how I discovered `__sizeof__`.
[00:45:03] <KirkMcDonald> Compu-Celebi: Yeah. And that's how __sizeof__ is documented, heh.
[00:45:06] *** Quits: Haxxa (~Haxxa@122.199.45.213) (Quit: Haxxa flies away.)
[00:46:07] <Wooble> "All built-in objects will return correct results" for, you know, some value of "correct results" :)
[00:46:10] <KirkMcDonald> Compu-Celebi: You do not want to define __sizeof__. It exists for extension modules; its only purpose in Python code would be to lie.
[00:46:57] <Compu-Celebi> What does the `rss` property of `psutil.Process.memory_info` return values signify?
[00:47:05] <KirkMcDonald> Resident Set Size
[00:47:11] <Wooble> the stdlib docs linking to an activestate recipe is always a great sign, too! :)
[00:47:29] <Compu-Celebi> Define "resident set" in context.
[00:47:42] <KirkMcDonald> https://en.wikipedia.org/wiki/Resident_set_size
[00:47:57] <KirkMcDonald> "Resident in main memory."
[00:48:02] *** Joins: ham5urg (~ham5urg@149.233.240.203.dynamic-pppoe.dt.ipv4.wtnet.de)
[00:48:05] <jinsun> kenwoodfox: if it is shutting down the existing loop, I don't think you want it to be async, you will have to create a new loop just to run it
[00:48:09] <Wooble> I've read the manpage for top and still couldn't explain it to a 5 year old
[00:48:13] *** Quits: bfoley (~bfoley@pool-173-48-101-113.bstnma.fios.verizon.net) (Quit: My MacBook has gone to sleep. ZZZzzz…)
[00:48:17] *** Joins: Haxxa (~Haxxa@122.199.45.213)
[00:48:19] *** Quits: atrigent (~atrigent@c-73-69-68-26.hsd1.ma.comcast.net) (Quit: My MacBook has gone to sleep. ZZZzzz…)
[00:48:37] <KirkMcDonald> You'll find that a consistent theme with measuring memory usage is that everything is going to be misleading in one way or another.
[00:49:05] *** Joins: atrigent (~atrigent@c-73-69-68-26.hsd1.ma.comcast.net)
[00:49:29] *** Quits: zer0bitz_ (~zer0bitz@dsl-hkibng31-58c384-213.dhcp.inet.fi) (Read error: Connection reset by peer)
[00:49:34] *** Quits: shad (~shad@user/shad) (Ping timeout: 252 seconds)
[00:49:56] <Compu-Celebi> I wondered whether the word "resident" in the phrase was related to its use in "terminate and stay resident."
[00:50:22] <KirkMcDonald> Yes, actually. Both refer to something being "resident" in memory.
[00:50:30] *** Quits: ub (~Thunderbi@77.119.174.203.wireless.dyn.drei.com) (Read error: Connection reset by peer)
[00:50:46] *** Joins: ub (~Thunderbi@77.119.174.203.wireless.dyn.drei.com)
[00:51:16] <Compu-Celebi> I did not know of "proportional set size" or "unique set size," either.
[00:51:24] <KirkMcDonald> TSRs are an ancient concept predating virtual memory.
[00:52:07] <Compu-Celebi> I encountered the concept of TSR's during the 1990 decade or early in the 2000 decade.
[00:52:17] <KirkMcDonald> They're a DOS thing.
[00:52:49] <hodapp> wellll... dunno about that, in so far as virtual memory predates DOS
[00:52:50] <Compu-Celebi> MS-DOS is the only operating system that I knew to support them.
[00:52:57] *** Joins: philipp64|work (~philipp64@174.27.28.163)
[00:53:15] <KirkMcDonald> hodapp: Well, sure. So less "predating virtual memory" as "rendered irrelevant by virtual memory."
[00:53:23] *** Quits: nomic (~nomic@185.192.69.188) (Quit: Leaving)
[00:53:45] <hodapp> they stayed around in DOS long after it had virtual memory of one kind of another
[00:53:54] <hodapp> or, more accurately in DOS, virtual memory of at least 15 kinds
[00:54:12] <hodapp> because DOS memory management was a raging dumpster-fire
[00:54:21] <KirkMcDonald> Yeah, the whole thing with DOS was that virtual memory was layered on top. So TSRs were still *there*.
[00:54:37] *** Quits: shangxiao (~davids@124.187.193.187) (Quit: WeeChat 3.2.1)
[00:54:56] <hodapp> layered on top. and underneath. and on the sides,
[00:54:58] *** Quits: menace (~someone@user/menace) (Quit: menace)
[00:55:01] *** Quits: dulanic (~dulanic@47.187.144.163) (Quit: The Lounge - https://thelounge.chat)
[00:55:05] <KirkMcDonald> Crammed in there somehow, in any case.
[00:55:15] *** Quits: ub (~Thunderbi@77.119.174.203.wireless.dyn.drei.com) (Ping timeout: 260 seconds)
[00:56:07] <Compu-Celebi> The correct word is "antedate," not "predate."
[00:56:17] <Compu-Celebi> To predate is to schedule for an earlier time.
[00:56:30] *** Joins: dulanic (~dulanic@47.187.144.163)
[00:56:37] <Compu-Celebi> "Predate" is the antonym of "postdate."
[00:57:04] *** Joins: rpkilby_ (~rpkilby@c-24-20-208-106.hsd1.or.comcast.net)
[00:57:09] <Compu-Celebi> How do TSR's pertain to virtual memory?
[00:57:22] <KirkMcDonald> Compu-Celebi: I'm more of a descriptivist than that, I suppose.
[00:57:45] <hodapp> this is also at odds with what the dictionary is saying
[00:57:46] <Compu-Celebi> Are you referring to linguistic descriptivism?
[00:58:07] <KirkMcDonald> Compu-Celebi: Yes. The word is used thus; therefore that is correct usage of the word.
[00:58:09] *** Quits: Vornicus (~Vornicus@2603-8000-5d07-7ef0-fdef-e933-acae-0c55.res6.spectrum.com) (Read error: Connection reset by peer)
[00:58:53] <Compu-Celebi> I did not know that "descriptivism" did not have any non-linguistic senses, but Wiktionary confirms that.
[00:59:09] <Compu-Celebi> I am a prescriptivist and a Lojbanist.
[00:59:12] <KirkMcDonald> A TSR operates on the premise that the system has a flat address space: The process runs, puts some stuff in some part of memory, then exits, leaving it there.
[00:59:48] <KirkMcDonald> With virtual memory, each process has its own address space. The idea of a TSR no longer pertains.
[01:00:13] <KirkMcDonald> Unless the kernel sets it up otherwise, I suppose.
[01:00:27] <grym> foo: diamond deps just suck
[01:00:28] <KirkMcDonald> But that starts being an entirely different idea from the DOS notion of a TSR.
[01:00:44] <hodapp> KirkMcDonald: oh, I was interpreting "virtual memory" not as "virtual address space" but as "here's a pile of disk space, present it like it's actual RAM"
[01:00:55] <KirkMcDonald> hodapp: Oh, there is that.
[01:01:05] *** Quits: rpkilby (~rpkilby@ec2-34-252-84-235.eu-west-1.compute.amazonaws.com) (Ping timeout: 260 seconds)
[01:01:25] <Compu-Celebi> I interpreted "virtual memory" as hodapp did and do not recollect "virtual memory" having the former meaning.
[01:01:25] <KirkMcDonald> hodapp: I was thinking of Protected Mode, really.
[01:01:43] *** Quits: Midjak (~Midjak@82-65-111-221.subs.proxad.net) (Quit: This computer has gone to sleep)
[01:02:03] <hodapp> Compu-Celebi: in the land of DOS, it wasn't often used with the former meaning. outside of DOS, the latter meaning is pretty well unheard-of
[01:02:11] <KirkMcDonald> And yes, I really meant "virtual addressing" rather than "virtual memory."
[01:02:24] <foo> grym: thanks for empathizing... I'm back from crying in the bathroom now.
[01:02:29] <foo> grym: pip-compile does seem helpful here.
[01:02:51] <Compu-Celebi> Does Windows not use disk space for effectively additional RAM?
[01:02:52] <KirkMcDonald> But the terms basically mean the same thing these days, so.
[01:03:00] <KirkMcDonald> Compu-Celebi: I mean there is swap space.
[01:03:13] <Compu-Celebi> Is that not the same thing?
[01:03:29] <hodapp> sorta kinda
[01:03:30] <KirkMcDonald> The connotation is somewhat different, compared to what DOS did.
[01:03:46] <Compu-Celebi> GNU/Linux also has swap space, which is stored in a special partition, which is called a "swap partition."
[01:03:48] <KirkMcDonald> Again, having to do with virtual addressing.
[01:04:22] *** Quits: RangerBobVA (~bmaddox@user/rangerbobva) (Quit: Leaving)
[01:04:40] <hodapp> it is virtual addressing + swap space together that allow that sort of overprovisioning of memory, I guess
[01:04:52] <Compu-Celebi> I conjectured that RAM addresses were assigned to every byte of on-disk memory.
[01:05:51] <hodapp> but, of course, you still have a virtual address space in Linux even without swap
[01:06:01] *** Quits: ayustae (Thunderbir@gateway/vpn/protonvpn/ayustae) (Remote host closed the connection)
[01:07:18] *** Joins: LuksNuke (~LuksNuke@2001:7e8:c066:6200:be85:8d95:5d9:f9da)
[01:07:19] *** Joins: ayustae (Thunderbir@gateway/vpn/protonvpn/ayustae)
[01:09:23] <Compu-Celebi> Why is "set" in such terms as "resident set size" and "proportional set size"?  To what does "set" refer?
[01:11:07] *** Joins: ubert (~Thunderbi@77.119.174.203.wireless.dyn.drei.com)
[01:11:13] *** Quits: ayustae (Thunderbir@gateway/vpn/protonvpn/ayustae) (Client Quit)
[01:12:07] *** Quits: LuksNuke (~LuksNuke@2001:7e8:c066:6200:be85:8d95:5d9:f9da) (Ping timeout: 252 seconds)
[01:12:37] *** Quits: FatDarrell (~textual@68.91.156.229) (Quit: My MacBook has gone to sleep. ZZZzzz…)
[01:13:23] <Compu-Celebi> I suppose that it refers to a set of RAM bytes.
[01:13:25] *** Joins: jl (~kk@user/jl)
[01:13:32] *** Joins: zebrag (~chris@user/zebrag)
[01:13:34] *** Joins: FatDarrell (~textual@68.91.156.229)
[01:14:47] <matsaman> https://en.wikipedia.org/wiki/Set_(mathematics)
[01:15:07] *** Quits: GregTheHun (~GregTheHu@2601:300:4500:3d41:9d1f:1512:c7da:4108) (Quit: GregTheHun)
[01:15:11] <Compu-Celebi> It is used in the mathematical sense?
[01:15:21] <greatgatsby> https://en.wikipedia.org/wiki/Proportional_set_size
[01:15:32] <Compu-Celebi> I already read the Wikipedia articles on PSS and USS.
[01:16:09] <hodapp> guessing it's a reference to working set
[01:16:13] <Compu-Celebi> They do not explain the terms' etymologies.
[01:16:36] *** Quits: akspecs (~akspecs@user/akspecs) (Read error: Connection reset by peer)
[01:16:50] <jinsun> maybe https://en.wikipedia.org/wiki/Working_set#Definition
[01:17:07] *** Joins: bfoley (~bfoley@pool-173-48-101-113.bstnma.fios.verizon.net)
[01:17:13] <Compu-Celebi> I also discovered the terms "working set" and "working set size," in the same manner in which I discovered the terms "proportional set size" and "unique set size."
[01:17:43] <Compu-Celebi> All of those terms' articles are in the "See also" section of the article about RSS.
[01:18:00] *** Quits: digilink (~digilink@user/digilink) (Quit: WeeChat 3.2)
[01:18:21] <Compu-Celebi> It seems that "set" refers to a set of memory pages.
[01:18:24] *** Joins: digilink (~digilink@user/digilink)
[01:18:35] <ammar2> Compu-Celebi: hmm it's really ancient, there's mentions of it in this paper on the DEC VAX https://users.soe.ucsc.edu/~sbrandt/221/Papers/Memory/levy-computer82.pdf
[01:18:49] <ammar2> page 3, second last paragraph
[01:19:14] <Compu-Celebi> That is my impression from the article on working sets saying "this is suggested to be an approximation of the set of pages that the process will access in the future."
[01:19:14] *** Quits: fikran (~fikran@user/fikran) (Ping timeout: 252 seconds)
[01:19:18] <ammar2> "As the program executes, pages are loaded into its resident set"
[01:20:08] <Compu-Celebi> ammar2's quotation seems to imply that the resident set is a set of resident memory pages.
[01:20:20] *** Quits: cheater (~Username@user/cheater) (Ping timeout: 252 seconds)
[01:20:21] *** Joins: Guddu (~Guddu@190.84.88.92)
[01:21:01] *** Joins: fikran (~fikran@user/fikran)
[01:21:23] <ammar2> This ancient IBM System/360 paper from 1966 also mentions, "Each program or data set resident in the system"
[01:21:32] <ammar2> http://bitsavers.org/pdf/ibm/360/tss/C20-1647-0_360-67_TSS_Tech.pdf
[01:22:10] *** Joins: mxp (~mxp@82.98.30.69)
[01:22:41] <ammar2> aah yes, the section on "Dynamic Relocation" uses "data sets" to refer to the memory used by programs and how it gets swapped in and out virtually
[01:23:32] <ammar2> and resident in this paper looks like it refers to programs that are on the core
[01:23:40] *** Quits: puff (~user@S0106d4ca6d80a83c.vs.shawcable.net) (Read error: Connection reset by peer)
[01:23:45] <p-i-> Can I relay a generator? Or do I have to do: def foo(): for g in gen(): yield g
[01:23:46] <ammar2> so likely at some point the lingo merged into "resident data set" and then "resident set"
[01:23:47] *** Quits: Skyfire (~pyon@user/pyon) (Quit: brb)
[01:23:50] <Compu-Celebi> I only ever knew of "dataset" being used in a statistical context.
[01:23:53] *** Joins: cheater (~Username@user/cheater)
[01:23:54] *** Joins: puff (~user@S0106d4ca6d80a83c.vs.shawcable.net)
[01:24:00] <hodapp> p-i-: what do you mean, relay it?
[01:24:09] *** Joins: Lord_of_Life_ (~Lord@user/lord-of-life/x-2819915)
[01:24:09] *** Joins: Skyfire (~pyon@user/pyon)
[01:24:14] <Compu-Celebi> I, also, do not know what "relay" means in this context.
[01:24:22] <c4017w> I get a lot of messages like this from asyncio. What does it indicate? 'poll 1000.000 ms took 1016.000 ms: timeout'
[01:24:35] <hodapp> p-i-: is it "yield from" you're looking for?
[01:24:47] <p-i-> I bet it is
[01:24:48] <jinsun> p-i-: from the example it looks like you want `yield from gen()`
[01:25:10] <p-i-> Awesome!
[01:25:12] <catbeard> anyone familiar with paramiko?
[01:26:05] <Compu-Celebi> How can `from` follow `yield`?
[01:26:10] *** Quits: Lord_of_Life (~Lord@user/lord-of-life/x-2819915) (Ping timeout: 240 seconds)
[01:26:10] *** Lord_of_Life_ is now known as Lord_of_Life
[01:26:25] <alexises> ok, I'm a bit ennoyed with this example from pysnmp : https://snmplabs.thola.io/pysnmp/docs/hlapi/asyncio/manager/cmdgen/bulkcmd.html I can't reproduce it due to the yield from that is not available
[01:26:44] <alexises> inside an async function
[01:27:14] <alexises> it's a generator based function, so I can't also use await for
[01:27:23] *** Quits: Akuli (~Akuli@213.216.210.90) (Quit: Leaving)
[01:27:42] <alexises> So, I'm stuck and I don't find a proper way to use it
[01:27:46] <jinsun> Compu-Celebi: https://www.python.org/dev/peps/pep-0380/
[01:28:03] <alexises> (Ho, I'm using python 3.8)
[01:28:19] <Compu-Celebi> I did not know of subgenerators.  Were they introduced in Python 3.8?
[01:28:58] *** Joins: Pickchea (~private@user/pickchea)
[01:30:19] *** Quits: magla (~gelignite@55d44c2f.access.ecotel.net) (Quit: Stay safe!)
[01:31:10] *** Joins: shad (~shad@user/shad)
[01:31:23] *** Quits: EvilDMP (~textual@django/moderator/EvilDMP) (Quit: My MacBook has gone to sleep. ZZZzzz…)
[01:31:28] <jinsun> `yield from` is added in 3.3 according to that PEP, subgenerator is just a generator inside another generator, so no need to "introduce" them, you could do that since the yield statement was added I guess
[01:31:31] *** Quits: acidsys (~LSD@2.lsd.systems) (Excess Flood)
[01:31:55] *** Quits: ubert (~Thunderbi@77.119.174.203.wireless.dyn.drei.com) (Ping timeout: 252 seconds)
[01:32:10] *** Joins: LSD (~LSD@2.lsd.systems)
[01:32:29] <alexises> jinsun: I'm not really understanding your response,
[01:32:37] <alexises> My issue is that I get a
[01:32:42] <alexises> SyntaxError: 'yield from' inside async function
[01:32:47] <jinsun> alexises: it was for Compu-Celebi
[01:32:55] <alexises> ho :D
[01:33:17] <jinsun> alexises: show code?
[01:33:24] *** Joins: Macuser (~Macuser@216.30.159.201)
[01:33:28] <alexises> let me just commit it :)
[01:33:44] <Compu-Celebi> Oh, I did not account for the fact that it was alexises, not jinsun, who said, "(Ho, I'm using Python 3.8.)"
[01:34:02] *** Quits: mxp (~mxp@82.98.30.69) (Quit: leaving)
[01:35:33] <alexises> https://github.com/alexises/prometheus-enhanced-snmp-exporter/blob/master/prometheus_enhanced_snmp_exporter/snmp.py#L187
[01:36:58] <alexises> It's a quite strengtforwoard function :)
[01:37:17] *** Joins: mxp (~mxp@185.16.205.131)
[01:37:25] *** Quits: weibullguy (DRowland@gateway/vpn/protonvpn/weibullguy) (Remote host closed the connection)
[01:37:38] *** Quits: PocketKiller (PacKetIV@user/packetiv) (Excess Flood)
[01:37:54] *** Joins: dumptrucktaco (~dumptruck@pool-108-28-60-86.washdc.fios.verizon.net)
[01:39:28] *** Joins: PocketKiller (PacKetIV@user/packetiv)
[01:40:27] <ammar2> Compu-Celebi: http://denninginstitute.com/pjd/PUBS/bvm.pdf read the section on "Thrashing Solved by The Working Set Model"
[01:42:36] *** Quits: dumptrucktaco (~dumptruck@pool-108-28-60-86.washdc.fios.verizon.net) (Quit: dumptrucktaco)
[01:43:19] *** Quits: FatDarrell (~textual@68.91.156.229) (Quit: My MacBook has gone to sleep. ZZZzzz…)
[01:43:44] *** Quits: somlis (~somlis@user/somlis) (Quit: WeeChat 3.2)
[01:44:00] <jinsun> alexises: hmm, you could wrap that part in a separate def and decorate with asyncio.coroutine like the example in the docs, then await that function inside your async function, but that will stop working in 3.10 it seems
[01:44:57] *** Quits: forgotmynick (uid24625@id-24625.stonehaven.irccloud.com) (Quit: Connection closed for inactivity)
[01:45:17] <alexises> hum grumf
[01:45:23] <alexises> let's try
[01:45:43] *** Joins: IgIgOrzoy (~IgIgOrzoy@user/igigorzoy)
[01:46:57] *** Joins: somlis (~somlis@user/somlis)
[01:48:13] *** Joins: gry_ (~quassel@botters/gry)
[01:48:16] *** Quits: gry (~quassel@botters/gry) (Ping timeout: 252 seconds)
[01:49:55] *** Quits: sunyibo (~dorsch@5.2.75.229) (Quit: ZNC 1.7.2+deb3 - https://znc.in)
[01:50:12] *** Joins: sunyibo (~dorsch@5.2.75.229)
[01:50:43] *** Quits: darksun (~darksun@user/darksun) (Quit: leaving)
[01:51:08] *** Quits: Pickchea (~private@user/pickchea) (Quit: Leaving)
[01:51:33] *** Quits: raxor2k (~raxor2k@78.158.248.158) ()
[01:53:39] *** Joins: lethu (~lethu@user/lethu)
[01:54:30] <alexises> I got a new insult :D
[01:54:55] *** Quits: IgIgOrzoy (~IgIgOrzoy@user/igigorzoy) (Quit: Client closed)
[01:58:32] *** Joins: zln (~zln@c80-217-230-193.bredband.tele2.se)
[01:58:42] <alexises> Compu-Celebi: thanks, it's seen to be not so bad https://github.com/alexises/prometheus-enhanced-snmp-exporter/commit/92b75f0c323de5272ec63cbe7ff89796d4627658
[01:58:50] <alexises> FYI the corresponding diff
[01:59:01] <alexises> it's a bit ugly, but it work ^^
[01:59:13] *** Joins: bilb_ono (~alexmarsh@ip68-6-90-72.sb.sd.cox.net)
[02:00:21] <Compu-Celebi> For what are you thanking me?
[02:01:55] *** Joins: jetchisel (jetchisel@user/jetchisel)
[02:02:12] <alexises> oups :D bad nick yep :D
[02:02:21] <alexises> thnaks jinsun
[02:02:22] <Compu-Celebi> I conjectured that you intended to address someone else.
[02:02:35] <alexises> but simply thanks to have taken a bit of time ^^
[02:03:06] <alexises> I think I have done enough python for today and it's time to go to sleep
[02:03:23] *** Quits: pwnd_sfw (~pwnd_sfw@ool-18b88100.dyn.optonline.net) (Quit: Ping timeout (120 seconds))
[02:03:52] *** Joins: pwnd_sfw (~pwnd_sfw@ool-18b88100.dyn.optonline.net)
[02:04:44] *** Quits: bfoley (~bfoley@pool-173-48-101-113.bstnma.fios.verizon.net) (Quit: My MacBook has gone to sleep. ZZZzzz…)
[02:05:09] *** Quits: Gurkenglas (~Gurkengla@dslb-090-186-104-237.090.186.pools.vodafone-ip.de) (Ping timeout: 265 seconds)
[02:05:13] <jinsun> alexises: np, just be aware it will break when you swtich to 3.10, hope that by that time that library will support async instead of using yield
[02:05:20] *** Joins: jmiehe (~Thunderbi@user/jmiehe)
[02:05:24] *** Quits: gitesh (uid423739@id-423739.ilkley.irccloud.com) (Quit: Connection closed for inactivity)
[02:06:34] *** Quits: odoood (~odoood@2601:c8:c003:a550::7) (Ping timeout: 252 seconds)
[02:06:35] *** Quits: theprophet (~theprophe@85.114.228.184) (Quit: Client closed)
[02:06:52] *** Joins: y1n (~y1n@84-115-64-255.wifi.dynamic.surfer.at)
[02:08:44] *** Joins: blackout69 (~blackout6@net-31-156-75-64.cust.vodafonedsl.it)
[02:08:57] *** Quits: cthulchu (~Cthulchu@193.194.107.250) (Read error: Connection reset by peer)
[02:09:26] *** Quits: KeiraT (~k@lulzsec.co.uk) (Ping timeout: 250 seconds)
[02:09:27] *** Joins: cthulchu (~Cthulchu@193.194.107.250)
[02:09:56] *** Quits: hexology (~hexology@user/hexology) (Quit: hex on you ...)
[02:10:29] <aphysically> huh, this pex is quite a bit slower to start up than my pip-installed-from-source equivalents
[02:10:42] <aphysically> oh well on unix/macos no reason to not install from whl I guess
[02:10:52] *** Quits: Zer0xFF (m-3laxwu@matrix.michaelsasser.org) (Remote host closed the connection)
[02:11:17] <aphysically> windows is more interesting, I'd like to get an .exe there but I also don't really want to mess with setting up a wine environment to run py2exe or such :P
[02:11:53] *** Joins: nomic (~nomic@185.192.69.188)
[02:12:18] *** Quits: jim (~jim@about/linux/staff/jim) (Quit: Leaving)
[02:12:21] *** Quits: winterflaw (~winterfla@gateway/tor-sasl/winterflaw) (Ping timeout: 276 seconds)
[02:12:45] *** Joins: Zer0xFF (m-3laxwu@matrix.michaelsasser.org)
[02:12:52] *** Joins: jim (~jim@about/linux/staff/jim)
[02:13:17] *** Joins: dez (uid92154@user/dez)
[02:13:46] <tk> .close
[02:18:55] *** Quits: upsala (~zcb@185.213.155.160) (Quit: WeeChat 3.2)
[02:18:59] *** Quits: segfaultbanana (~segfaultb@user/segfaultbanana) (Remote host closed the connection)
[02:19:03] *** Joins: srilyk (~wayne@user/waynew)
[02:19:23] *** gry_ is now known as gry
[02:19:35] *** Joins: phonemic (~phonemic@2600:1700:3379:140::47)
[02:20:11] *** Joins: EvilDMP (~textual@django/moderator/EvilDMP)
[02:20:27] *** Quits: waynew (~wayne@user/waynew) (Read error: Connection reset by peer)
[02:20:55] *** Joins: waynew (~wayne@user/waynew)
[02:21:25] *** Quits: Lando-SpacePimp (~Lando@user/lando-spacepimp) (Ping timeout: 252 seconds)
[02:23:14] *** Quits: m1dnight (~christoph@188.ip-51-91-158.eu) (Ping timeout: 256 seconds)
[02:24:27] *** Quits: Ninpo (~Ninpo@leviathan.qap.la) (Ping timeout: 240 seconds)
[02:24:30] *** Quits: srilyk (~wayne@user/waynew) (Ping timeout: 260 seconds)
[02:24:47] *** Joins: m1dnight (~christoph@188.ip-51-91-158.eu)
[02:25:21] *** Quits: hendursaga (~weechat@user/hendursaga) (Ping timeout: 276 seconds)
[02:26:00] *** Quits: crabbedhaloablut (~crabbedha@user/crabbedhaloablut) (Ping timeout: 276 seconds)
[02:26:30] *** Quits: EvilDMP (~textual@django/moderator/EvilDMP) (Quit: My MacBook has gone to sleep. ZZZzzz…)
[02:26:56] *** Joins: hendursaga (~weechat@user/hendursaga)
[02:27:07] *** Joins: crabbedhaloablut (~crabbedha@user/crabbedhaloablut)
[02:27:47] *** Quits: Seiryuu (~Seiryuu@ip174-103-176-143.adsl2.static.versatel.nl) (Quit: Leaving)
[02:27:57] *** Joins: Ninpo (~Ninpo@leviathan.qap.la)
[02:27:57] *** Joins: EvilDMP (~textual@django/moderator/EvilDMP)
[02:30:30] *** Joins: Mattiaslndstrm (~Mattiasln@c188-148-207-108.bredband.tele2.se)
[02:30:36] *** Joins: Joel (~jjshoe@user/joel)
[02:31:15] *** Quits: deepy (deepy@user/deepy) (Ping timeout: 265 seconds)
[02:33:29] *** Quits: freeworld (~vit@chello085216193138.chello.sk) (Ping timeout: 252 seconds)
[02:33:31] *** Quits: shad (~shad@user/shad) (Ping timeout: 252 seconds)
[02:34:59] *** Quits: GreenResponse (~tomek@r-45-155-148-237.gpon.bialnet.pl) (Quit: Leaving)
[02:35:01] *** Quits: Mattiaslndstrm (~Mattiasln@c188-148-207-108.bredband.tele2.se) (Client Quit)
[02:39:09] *** Joins: odoood (~odoood@2601:c8:c003:a550::7)
[02:39:20] *** Joins: strive (~strive@user/strive)
[02:39:52] <c4017w> Any way to force asyncio Tasks to execute in the order they were created?
[02:40:07] *** Joins: Lando-HoloNet (~Lando@user/lando-spacepimp)
[02:41:07] *** Quits: jmiehe (~Thunderbi@user/jmiehe) (Quit: jmiehe)
[02:42:14] *** Joins: fannagoganna (~tanim@c-73-40-72-85.hsd1.va.comcast.net)
[02:43:06] *** Joins: NeilRG (~NeilRG@192.222.196.111)
[02:43:42] *** Quits: akk (~akk@174-28-98-206.albq.qwest.net) (Quit: +++)
[02:43:57] *** Quits: arseru (uid515527@user/arseru) (Quit: Connection closed for inactivity)
[02:45:30] <c4017w> I guess I could just put them in a list and await them one by one
[02:46:00] *** Quits: matsaman (~matsaman@user/matsaman) (Quit: leaving)
[02:46:05] *** Quits: fedenix (~fedenix@gateway/tor-sasl/fedenix) (Remote host closed the connection)
[02:46:22] *** Joins: lalitmee_ (~lalitmee@180.94.32.166)
[02:47:47] *** Quits: NeilRG (~NeilRG@192.222.196.111) (Ping timeout: 252 seconds)
[02:47:58] *** Quits: waynew (~wayne@user/waynew) (Quit: WeeChat 2.9)
[02:48:07] <tk> I am using pyls (python-language-server) and it is doing pycodestyle checks on my code. Is there a way to disable it?
[02:48:36] <tk> I'm aware that this is probably in the documentation somewhere but I seriously don't know where to even start looking for that. I was hoping someone might just know the answer.
[02:48:47] *** Joins: dre (~dre@2001:8003:c932:c301:5cf6:8209:dad6:8a73)
[02:48:53] *** Quits: lalitmee__ (~lalitmee@180.94.32.100) (Ping timeout: 252 seconds)
[02:49:35] *** Quits: y1n (~y1n@84-115-64-255.wifi.dynamic.surfer.at) (Ping timeout: 260 seconds)
[02:49:48] <tk> hmm, actually I think I may have found it
[02:49:52] *** Quits: Auron (~Auron956@user/auron) (Remote host closed the connection)
[02:53:17] <p-i-> c4017w: They might do that anyway. Someone on Trio Gitter would probably know.
[02:55:54] *** Joins: stkrdknmibalz (~test@rrcs-75-87-43-226.sw.biz.rr.com)
[02:57:12] *** Quits: flyback (~flyback@2601:540:8201:1e60:8918:21eb:b633:ee62) (Quit: Leaving)
[02:57:12] *** Quits: Warped (~Warped@user/warped) (Ping timeout: 245 seconds)
[02:57:51] *** Joins: p-i-_ (~Ohmu@223.206.69.159)
[02:59:09] *** Joins: flyback (~flyback@2601:540:8201:1e60:3cb8:7bae:b60:429c)
[03:00:28] *** Joins: KeiraT (~k@lulzsec.co.uk)
[03:01:13] *** Quits: p-i- (~Ohmu@223.206.69.159) (Ping timeout: 265 seconds)
[03:01:59] <tk> okay, it just required setting pyls.plugins.pycodestyle.enabled to false, thanks
[03:02:36] *** Joins: y1n (~y1n@84-115-64-255.wifi.dynamic.surfer.at)
[03:02:40] *** Quits: kosh (~kosh@user/kosh) (Ping timeout: 252 seconds)
[03:02:54] *** Quits: manti7 (~manti7@176.10.104.94) (Quit: WeeChat 3.1)
[03:04:12] <wgwz> does
[03:05:12] <noarb> I'm trying to use pyenv to install python versions on ubuntu 21.04. I can use pyenv commands but attempting `python` gives me Command 'python' not found, did you mean: ...
[03:05:20] <wgwz> does anyone have experience with sending SMS using twilio, and in particular does anyone know how may SMS you can get away with sending through a long-code number?
[03:05:21] <noarb> could this be an issue with .bashrc and .profile?
[03:06:16] <Repiphany> pyenv recently had a change to their recommended initialization command
[03:06:54] *** Quits: plastico (~plastico@neomutt/plastico) (Quit: WeeChat 3.2)
[03:09:17] <c4017w> p-i-_, in my experience they don't necessarily execute in order of creation. And it makes sense. There's no guarantee they will _finish_ in that order (if any of the tasks use `await`), so why bother starting them in the same order
[03:10:22] <noarb> Repiphany: do you mean eval "$(pyenv init --path)" has to be in .profile now? https://github.com/pyenv/pyenv/commit/fadb3f33896991a61348649b350bf9c31b42dd38
[03:10:41] <noarb> what's the fix by moving it there? Testing it now
[03:10:47] *** Joins: shad (~shad@user/shad)
[03:11:05] <Repiphany> It used to be a different command, pyenv init - -- or something
[03:12:02] *** Quits: Leonarbro (~Leonet@user/leonarbro) (Read error: Connection reset by peer)
[03:12:13] <Repiphany> Think it's always meant to have been near the bottom of .bashrc/.profile
[03:12:34] *** Quits: mefistofeles (~mefistofe@user/mefistofeles) (Ping timeout: 252 seconds)
[03:12:59] *** Joins: aum (~aum@202.47.255.123.static.snap.net.nz)
[03:14:24] *** Quits: puff (~user@S0106d4ca6d80a83c.vs.shawcable.net) (Read error: Connection reset by peer)
[03:14:37] *** Joins: puff (~user@S0106d4ca6d80a83c.vs.shawcable.net)
[03:15:19] *** Quits: odoood (~odoood@2601:c8:c003:a550::7) (Ping timeout: 252 seconds)
[03:15:24] *** Joins: chriswells0 (~chriswell@096-032-089-236.res.spectrum.com)
[03:15:58] *** Quits: mrgz (~mrgz@201-42-0-191.dsl.telesp.net.br) (Quit: leaving)
[03:16:57] <aum> in asyncio, how do I catch KeyboardInterrupt when a program is Ctrl-C terminated? The exception gets spat from asyncio/runners.py in run(), in the statement 'return loop.run_until_complete(main)'. I've tried catching KeyboardInterrupt and CancelledError in my outermost call to asyncio.wait(), but my handlers never get reached
[03:17:10] *** Quits: EvilDMP (~textual@django/moderator/EvilDMP) (Quit: My MacBook has gone to sleep. ZZZzzz…)
[03:18:02] *** Quits: goldfish__ (~goldfish@user/goldfish) (Ping timeout: 252 seconds)
[03:19:08] <chriswells0> I'm using openpyxl to insert a row in a spreadsheet, but none of the existing validation gets moved down. Anyone know how to move the validation down with the rows?
[03:20:51] <wgwz> aum: search for roguelynn's blog post about using asyncio
[03:21:53] <cluelessperson> noarb, I think you must configure which version of python is expected to be accessible globally
[03:22:52] <noarb> cluelessperson: I did try 'pyenv global 3.9.7' before attempting to run 'python'
[03:23:07] <aum> wgwz, funny you should mention that - I found it a moment ago and it looks great
[03:23:11] <cluelessperson> I remember getting briefly hung up on something similar as well.
[03:23:21] *** Quits: LucaTM (~LucaTM@user/lucatm) (Quit: Textual IRC Client: www.textualapp.com)
[03:26:17] *** Quits: TranquilEcho (~grom@user/tranquilecho) (Quit: WeeChat 2.8)
[03:26:18] *** Quits: phonemic (~phonemic@2600:1700:3379:140::47) (Quit: WeeChat 3.2)
[03:26:49] *** Quits: rpkilby_ (~rpkilby@c-24-20-208-106.hsd1.or.comcast.net) (Remote host closed the connection)
[03:27:24] *** Joins: rpkilby (~rpkilby@ec2-34-252-84-235.eu-west-1.compute.amazonaws.com)
[03:28:46] *** Quits: fikran (~fikran@user/fikran) (Ping timeout: 265 seconds)
[03:28:47] *** Quits: Cheaterman (~Cheaterma@user/cheaterman) (Ping timeout: 265 seconds)
[03:29:17] *** Joins: Cheaterman (~Cheaterma@user/cheaterman)
[03:29:31] *** Quits: Seirdy (~Seirdy@sourcehut/user/seirdy) (Ping timeout: 252 seconds)
[03:29:55] *** Parts: blackout69 (~blackout6@net-31-156-75-64.cust.vodafonedsl.it) ()
[03:30:22] *** Joins: fikran (~fikran@user/fikran)
[03:31:59] *** Joins: jjasghar (~quassel@user/jjasghar)
[03:32:54] *** Quits: pizdets (~pizdets@183.182.114.81) (Ping timeout: 250 seconds)
[03:33:41] *** Joins: pizdets (~pizdets@183.182.110.162)
[03:34:33] *** Joins: ham5urg_ (~ham5urg@195.123.106.169.dynamic-pppoe.dt.ipv4.wtnet.de)
[03:35:08] <wgwz> aum: it's great. i keep that bookmarked and go back to it nearly any time i'm doing asyncio stuff
[03:35:35] *** Joins: Seirdy (~Seirdy@sourcehut/user/seirdy)
[03:35:43] *** Quits: ham5urg_ (~ham5urg@195.123.106.169.dynamic-pppoe.dt.ipv4.wtnet.de) (Client Quit)
[03:35:46] <aum> @wgwz, I love asyncio, but it's got a few nasty and confusing traps here and there.
[03:35:48] *** Quits: shad (~shad@user/shad) (Quit: WeeChat 3.0)
[03:37:17] *** Quits: ham5urg (~ham5urg@149.233.240.203.dynamic-pppoe.dt.ipv4.wtnet.de) (Ping timeout: 252 seconds)
[03:37:56] <wgwz> aum: yep, that's for sure
[03:39:35] *** Quits: mcglk (~mcglk@131.191.49.120) (Quit: (zzz))
[03:43:47] *** Quits: Myst (~Myst@user/myst) (Ping timeout: 240 seconds)
[03:44:40] *** Quits: madduck (~madduck@user/madduck) (Ping timeout: 240 seconds)
[03:46:56] *** Joins: vicfred (~vicfred@user/vicfred)
[03:47:16] *** Quits: mat001_ (~mat001@c-73-223-64-126.hsd1.ca.comcast.net) (Remote host closed the connection)
[03:47:24] *** Lando-HoloNet is now known as Lando-SpacePimp
[03:47:39] *** Quits: bomb-on (~bomb-on@194.144.47.113) (Quit: aллилѹіа!)
[03:47:55] *** Quits: georgios (~georgios@user/georgios) (Ping timeout: 260 seconds)
[03:47:59] *** Joins: mat001 (~mat001@c-73-223-64-126.hsd1.ca.comcast.net)
[03:48:14] *** Quits: bilb_ono (~alexmarsh@ip68-6-90-72.sb.sd.cox.net) (Quit: bilb_ono)
[03:49:09] <noarb> cluelessperson: did you end up using the new installer? I'm not currently using https://github.com/pyenv/pyenv-installer
[03:49:25] *** Quits: y1n (~y1n@84-115-64-255.wifi.dynamic.surfer.at) (Ping timeout: 252 seconds)
[03:49:30] *** Joins: bilb_ono (~alexmarsh@ip68-6-90-72.sb.sd.cox.net)
[03:49:33] *** Quits: m1dnight (~christoph@188.ip-51-91-158.eu) (Ping timeout: 265 seconds)
[03:49:44] *** Joins: Myst (~Myst@user/myst)
[03:50:09] *** Quits: atrigent (~atrigent@c-73-69-68-26.hsd1.ma.comcast.net) (Read error: Connection reset by peer)
[03:50:10] *** Quits: jpaa (~jpaa@87.118.126.66) (Ping timeout: 240 seconds)
[03:50:48] *** Joins: atrigent (~atrigent@c-73-69-68-26.hsd1.ma.comcast.net)
[03:51:00] *** Joins: m1dnight (~christoph@188.ip-51-91-158.eu)
[03:51:05] *** Joins: jpaa (~jpaa@87.118.126.66)
[03:51:43] *** Joins: madduck (~madduck@user/madduck)
[03:52:21] *** Joins: segfaultbanana (~segfaultb@user/segfaultbanana)
[03:52:34] *** Joins: Leonarbro (~Leonet@user/leonarbro)
[03:52:39] <jinsun> I used the installer sometime back, but I still had to add the init stuff in bashrc
[03:55:26] *** Quits: Elzington_ (~Elzington@68.235.43.28) (Ping timeout: 252 seconds)
[03:56:48] *** Quits: segfaultbanana (~segfaultb@user/segfaultbanana) (Ping timeout: 265 seconds)
[03:57:57] *** Joins: PantelicGR (~PantelicG@user/pantelicgr)
[03:58:44] *** Quits: ferz (~ferz@93-39-142-17.ip76.fastwebnet.it) (Ping timeout: 252 seconds)
[04:00:10] *** Joins: Wulf4 (~Wulf@user/wulf)
[04:00:33] <cluelessperson> noarb, yeah, I setup my own bashrc / profile stuff
[04:01:59] *** Quits: Macuser (~Macuser@216.30.159.201) (Quit: My MacBook has gone to sleep. ZZZzzz…)
[04:02:46] *** Joins: y1n (~y1n@84-115-64-255.wifi.dynamic.surfer.at)
[04:02:57] *** Quits: Wulf (~Wulf@user/wulf) (Ping timeout: 245 seconds)
[04:02:58] *** Wulf4 is now known as Wulf
[04:05:25] *** Quits: qlixed (~qlixed@152.170.36.244) (Ping timeout: 260 seconds)
[04:05:47] *** Parts: raisen (~weechat@cpe-108-185-219-72.socal.res.rr.com) (WeeChat 3.0)
[04:07:32] *** Quits: digilink (~digilink@user/digilink) (Ping timeout: 252 seconds)
[04:08:38] *** Quits: ackyshake (~ackyshake@user/ackyshake) (Ping timeout: 256 seconds)
[04:09:13] *** Quits: PJBoy (~PJBoy@user/pjboy) (Ping timeout: 252 seconds)
[04:09:42] *** Joins: digilink (~digilink@user/digilink)
[04:11:57] *** Joins: ferz (~ferz@93-39-142-17.ip76.fastwebnet.it)
[04:14:48] *** Joins: ackyshake (~ackyshake@user/ackyshake)
[04:15:41] *** Joins: gartt (~gartt@ip72-200-184-133.ri.ri.cox.net)
[04:19:13] *** Joins: iflema (~ian@user/iflema)
[04:21:17] <noarb> eval "$(pyenv init --path)" in my current shell did make the pyenv pythons available to me. The README says I should put some stuff in .profile before .bashrc is sourced "If your ~/.profile sources ~/.bashrc (Debian, Ubuntu, Mint) ... Put these lines into ~/.profile before the part that sources ~/.bashrc". I have the standard ubuntu .profile: https://bpa.st/JNEQ, should that be in the test [ ? Or just
[04:21:23] <noarb> before it
[04:22:06] *** Parts: gartt (~gartt@ip72-200-184-133.ri.ri.cox.net) ()
[04:22:33] *** Quits: PantelicGR (~PantelicG@user/pantelicgr) (Quit: Leaving)
[04:22:46] *** Quits: Compu-Celebi (~Compu-Cel@96-18-74-43.cpe.sparklight.net) (Quit: I am disconnecting from this network.)
[04:24:00] *** Joins: lsrtl__ (~lsrtl@user/lsrtl)
[04:25:10] *** Quits: digilink (~digilink@user/digilink) (Ping timeout: 252 seconds)
[04:25:58] *** Joins: Macuser (~Macuser@216.30.159.201)
[04:26:16] <noarb>           * | digilink quit (Reason: Ping timeout: 252 seconds)
[04:26:48] *** Quits: lsrtl_ (~lsrtl@user/lsrtl) (Ping timeout: 250 seconds)
[04:26:59] *** Joins: digilink (~digilink@user/digilink)
[04:27:41] <noarb> (sorry about that) https://github.com/pyenv/pyenv#basic-github-checkout for bash section has an "automated installation"
[04:28:25] *** Joins: falk689 (~falk689-q@gateway/tor-sasl/falk689)
[04:29:12] *** Quits: emerent (~quassel@p200300cd5701a10fba27ebfffed28a59.dip0.t-ipconnect.de) (Ping timeout: 245 seconds)
[04:29:31] <Repiphany> I only put pyenv stuff in .bashrc, not in .profile
[04:29:55] *** Joins: emerent (~quassel@p200300cd5701a136ba27ebfffed28a59.dip0.t-ipconnect.de)
[04:30:45] *** Joins: herjazz (~herjazz@p6758124-ipngn30801marunouchi.tokyo.ocn.ne.jp)
[04:32:09] <jinsun> sa,e
[04:32:14] <jinsun> same
[04:32:22] *** Quits: zuQe8 (~zuQe8@cpc105068-sgyl40-2-0-cust196.18-2.cable.virginm.net) (Quit: Bye)
[04:33:42] *** Joins: zuQe8 (~zuQe8@cpc105068-sgyl40-2-0-cust196.18-2.cable.virginm.net)
[04:33:51] <noarb> I'm researching more. That's what I had done before, but their stuff says to use .profile
[04:36:17] *** Quits: MikZyth (~MikZyth@188.65.242.220) (Quit: WeeChat 3.1)
[04:37:07] *** Quits: DPA (~DPA@75-128-16-94.static.cable.fcom.ch) (Ping timeout: 252 seconds)
[04:38:56] *** Joins: squirrel (~sq@user/squirrel)
[04:40:38] *** Quits: uuair (~quassel@user/uuair) (Quit: https://quassel-irc.org - Chat comfortably. Anywhere.)
[04:47:46] *** Quits: frostschutz (~frostschu@2a01:c23:78b6:cf00:f930:c80a:d282:3d87) (Remote host closed the connection)
[04:48:02] *** Quits: Linux77 (~Linux7_7@186.233.182.237) (Ping timeout: 265 seconds)
[04:49:23] *** Quits: p-i-_ (~Ohmu@223.206.69.159) (Remote host closed the connection)
[04:49:29] *** Quits: y1n (~y1n@84-115-64-255.wifi.dynamic.surfer.at) (Ping timeout: 265 seconds)
[04:50:27] *** Joins: Wuniu (~Thunderbi@user/wuniu)
[04:50:46] *** Joins: Linux77 (~Linux7_7@186.233.182.237)
[04:51:31] *** Quits: atrigent (~atrigent@c-73-69-68-26.hsd1.ma.comcast.net) (Read error: Connection reset by peer)
[04:51:51] *** Joins: DPA (~DPA@75-128-16-94.static.cable.fcom.ch)
[04:52:08] *** Joins: atrigent (~atrigent@c-73-69-68-26.hsd1.ma.comcast.net)
[04:55:00] *** Quits: zln (~zln@c80-217-230-193.bredband.tele2.se) (Ping timeout: 260 seconds)
[04:56:25] *** Quits: Kvothe (~weechat@user/elodin) (Ping timeout: 252 seconds)
[04:58:21] <cluelessperson> noarb, Repiphany .profile is recommended because it's used by basically for all shells.  .bashrc is specific to bash. :D
[04:58:51] <cluelessperson> is  pyenv init --path  slow for anyone else?
[04:58:58] * cluelessperson isn't sure if that's to blame.
[04:59:22] *** Parts: chriswells0 (~chriswell@096-032-089-236.res.spectrum.com) ()
[04:59:45] *** Joins: qlixed (~qlixed@181.44.129.13)
[05:00:10] *** Quits: Donitz (~Donitz@85-156-203-108.elisa-laajakaista.fi) (Read error: Connection reset by peer)
[05:00:35] *** Joins: stpz (~stpz@240e:341:229d:4a00:35db:95de:a085:4b7a)
[05:00:53] *** Quits: MaXxer0 (~MaXxer0@i5E86B2DF.versanet.de) (Ping timeout: 252 seconds)
[05:01:02] <cluelessperson> it's not, nvm
[05:01:08] *** Joins: MaXxer01 (~MaXxer0@i5E86B2FA.versanet.de)
[05:02:13] *** Joins: y1n (~y1n@84-115-64-229.wifi.dynamic.surfer.at)
[05:02:52] *** Quits: dez (uid92154@user/dez) (Quit: Connection closed for inactivity)
[05:03:20] *** Joins: Donitz (~Donitz@85-156-203-108.elisa-laajakaista.fi)
[05:04:18] *** Joins: NeilRG (~NeilRG@192.222.196.111)
[05:04:42] *** Quits: puff (~user@S0106d4ca6d80a83c.vs.shawcable.net) (Read error: Connection reset by peer)
[05:04:55] *** Joins: puff (~user@S0106d4ca6d80a83c.vs.shawcable.net)
[05:05:38] *** Joins: deepy (deepy@user/deepy)
[05:05:55] *** Quits: stpz (~stpz@240e:341:229d:4a00:35db:95de:a085:4b7a) (Quit: Client closed)
[05:07:58] *** Quits: snalty (~Shhh@user/snalty) (Ping timeout: 252 seconds)
[05:10:04] *** Quits: qlixed (~qlixed@181.44.129.13) (Quit: That's all folks!!)
[05:11:53] *** Quits: amahl (~amahl@dsl-jklbng12-54fbca-64.dhcp.inet.fi) (Ping timeout: 252 seconds)
[05:13:12] *** Quits: Ivii (~Ivyy@2001:a61:13eb:f801:abf3:43cd:3a92:af85) (Remote host closed the connection)
[05:15:06] *** Quits: Wuniu (~Thunderbi@user/wuniu) (Ping timeout: 265 seconds)
[05:15:53] *** Joins: Bakunin (~Lindis@user/lindis)
[05:18:02] *** Joins: snalty (~Shhh@user/snalty)
[05:19:09] *** Quits: herjazz (~herjazz@p6758124-ipngn30801marunouchi.tokyo.ocn.ne.jp) (Quit: leaving)
[05:20:30] *** Joins: p-i- (~Ohmu@mx-ll-223.206.69-159.dynamic.3bb.co.th)
[05:20:45] *** Quits: Sky_Net (~Sky_Net@176.14.213.85) (Read error: Connection reset by peer)
[05:21:03] *** Joins: ttree (~ttree0@c-73-239-62-159.hsd1.wa.comcast.net)
[05:22:46] <p-i-> c4017: That's a poor logic. If you look at what actually occurs when you start async tasks, therein lies the answer. As I understand the first task will execute until it encounters an await. The scheduler then picks the next task to execute.
[05:23:35] <p-i-> I have a hunch that they will execute in the order they are coded. Not sure, but it's surely worth investigating if that's what you require.
[05:23:55] <p-i-> i.e. first figure out if you even _need_ to build out machinery
[05:24:41] *** Quits: bookworm (~bookworm@neomutt/bookworm) ()
[05:25:22] *** Quits: xrogaan (~xrogaan@user/xrogaan) (Quit: Leaving)
[05:27:29] *** Quits: bilb_ono (~alexmarsh@ip68-6-90-72.sb.sd.cox.net) (Quit: bilb_ono)
[05:28:59] *** Quits: rpkilby (~rpkilby@ec2-34-252-84-235.eu-west-1.compute.amazonaws.com) (Remote host closed the connection)
[05:29:36] *** Joins: rpkilby (~rpkilby@ec2-34-252-84-235.eu-west-1.compute.amazonaws.com)
[05:29:36] *** Quits: flokuehn (~flokuehn@mue-88-130-54-028.dsl.tropolys.de) (Ping timeout: 265 seconds)
[05:30:02] *** Quits: cthulchu (~Cthulchu@193.194.107.250) (Ping timeout: 252 seconds)
[05:30:08] *** Joins: bookworm (~bookworm@neomutt/bookworm)
[05:30:19] *** Quits: vlm (~vlm@user/vlm) (Quit: "")
[05:30:25] *** Joins: bilb_ono (~alexmarsh@ip68-6-90-72.sb.sd.cox.net)
[05:31:25] *** Joins: dba (uid502594@id-502594.stonehaven.irccloud.com)
[05:31:35] *** Quits: NeilRG (~NeilRG@192.222.196.111) (Remote host closed the connection)
[05:32:10] *** Joins: NeilRG (~NeilRG@192.222.196.111)
[05:32:55] *** Quits: rpkilby (~rpkilby@ec2-34-252-84-235.eu-west-1.compute.amazonaws.com) (Remote host closed the connection)
[05:33:10] *** Joins: rpkilby (~rpkilby@ec2-34-252-84-235.eu-west-1.compute.amazonaws.com)
[05:33:15] *** Joins: Yugi (~hunterkll@2001:470:8b06:100:2958:1194:aedf:1fa3)
[05:33:16] *** Quits: tgamblin (~tgamblin@2607:fea8:c29d:d7c0:fa88:8bc5:c0d2:27cc) (Remote host closed the connection)
[05:34:18] *** Joins: tgamblin (~tgamblin@2607:fea8:c29d:d7c0:fa88:8bc5:c0d2:27cc)
[05:36:00] *** Joins: penguino (~mrpenguin@user/mrpenguin)
[05:36:07] *** Quits: Seto_Kaiba (~hunterkll@2001:470:8b06:100:2958:1194:aedf:1fa3) (Ping timeout: 252 seconds)
[05:36:34] *** Quits: NeilRG (~NeilRG@192.222.196.111) (Ping timeout: 252 seconds)
[05:38:17] *** Quits: fikran (~fikran@user/fikran) (Ping timeout: 252 seconds)
[05:38:37] *** Joins: FreEm1nD (~freemindm@mail.guarapari.store)
[05:40:08] *** Joins: fikran (~fikran@user/fikran)
[05:41:40] *** Parts: Bakunin (~Lindis@user/lindis) ()
[05:41:45] *** Joins: nbao (~nbao@187.20.16.119)
[05:42:40] *** Quits: morrigan (~m0rr1gan@user/m0rr1gan) (Quit: morrigan)
[05:42:42] *** Quits: strive (~strive@user/strive) (Remote host closed the connection)
[05:43:49] *** Quits: jarthur (~jarthur@2603-8080-1540-002d-b82e-8865-a976-d9c2.res6.spectrum.com) (Ping timeout: 252 seconds)
[05:43:57] *** Joins: fmlatghor (~lcoogan@2601:5cd:8100:2890::1)
[05:44:22] *** Joins: mefistofeles (~mefistofe@user/mefistofeles)
[05:44:31] *** Quits: mefistofeles (~mefistofe@user/mefistofeles) (Client Quit)
[05:44:55] *** Joins: frost (~frost@59.71.240.119)
[05:45:21] *** Joins: mefistofeles (~mefistofe@user/mefistofeles)
[05:45:25] <fmlatghor> I don't know if this is how python works or the script I'm using, except when I'm using a wildcard *.xml , it also runs it on other files that end with *.xml.lz
[05:45:44] <fmlatghor> How do I make it /not/ do this?
[05:46:09] <fmlatghor> there's this: https://docs.python.org/3/library/glob.html
[05:48:27] *** Quits: gry (~quassel@botters/gry) (Ping timeout: 265 seconds)
[05:48:50] <Jonno_FTW> is this bad? python: malloc.c:3099: __libc_malloc: Assertion `!victim || chunk_is_mmapped (mem2chunk (victim)) || ar_ptr == arena_for_chunk (mem2chunk (victim))' failed.
[05:49:03] <rama> fmlatghor: how does it figure out what files it needs to run on?
[05:49:09] *** Joins: gry (~quassel@botters/gry)
[05:49:50] *** Quits: y1n (~y1n@84-115-64-229.wifi.dynamic.surfer.at) (Ping timeout: 260 seconds)
[05:51:20] <fmlatghor> rama: https://paste.centos.org/view/d4992f52
[05:51:52] *** Quits: rpkilby (~rpkilby@ec2-34-252-84-235.eu-west-1.compute.amazonaws.com) (Remote host closed the connection)
[05:52:27] *** Joins: rpkilby (~rpkilby@ec2-34-252-84-235.eu-west-1.compute.amazonaws.com)
[05:55:44] *** Joins: morrigan (~m0rr1gan@user/m0rr1gan)
[05:57:01] *** Quits: rpkilby (~rpkilby@ec2-34-252-84-235.eu-west-1.compute.amazonaws.com) (Ping timeout: 252 seconds)
[05:57:29] <kline> Jonno_FTW, its not good
[05:57:34] <kline> do you have replication steps?
[05:57:56] *** Joins: jarthur (~jarthur@2603-8080-1540-002d-b453-a897-4f94-54c0.res6.spectrum.com)
[05:58:54] *** Quits: kuler (~kulernil@gateway/tor-sasl/kuler) (Remote host closed the connection)
[05:59:28] *** Quits: optimant (prime@user/optimant) (Quit: Quitting)
[05:59:29] *** Joins: kuler (~kulernil@gateway/tor-sasl/kuler)
[06:00:38] *** Quits: c10l (~c10l@89.34.167.207) (Quit: The Lounge - https://thelounge.chat)
[06:01:04] <Jonno_FTW> kline: yeah just run my flask app which launches a separate process to do some backend work
[06:01:11] *** Joins: c10l (~c10l@89.34.167.207)
[06:01:24] <kline> ok let me do that just now
[06:01:26] *** Joins: y1n (~y1n@84-115-64-229.wifi.dynamic.surfer.at)
[06:01:30] <kline> *stares at empty vim*
[06:01:51] <kline> Jonno_FTW, if you can provide a minimum test case that reproduces this that would probably be helpful for anyone who intends to fix it
[06:02:06] <kline> you might need to put some work into this
[06:02:08] <rama> fmlatghor: $d/*.xml I would think $d.xml would limit files that are being input, how does the script handle the input? if you run https://paste.centos.org/view/046ef8bc
[06:02:59] <rama> actually hold up ^ thats wrong.
[06:04:12] <Jonno_FTW> kline: I'm still trying to figure out what does it, sometimes it just happens silently (I think)
[06:04:35] *** Joins: amrooting1 (~amrooting@197.255.10.120)
[06:06:03] <cluelessperson> fmlatghor, I suggest not mixing scripts and programming.   It's probably easier just to do programming?
[06:06:24] <fmlatghor> cluelessperson: no, I want to keep the script how it is
[06:06:31] <fmlatghor> the python one I meant
[06:06:41] <cluelessperson> I mean to say that you're mixing shell scripting with programming language scripting..
[06:07:09] <fmlatghor> and I'm trying to stay I'm using shell script because I don't want to modify the actual script
[06:07:20] *** Quits: amrooting (amrooting@gateway/vpn/protonvpn/amrooting) (Ping timeout: 260 seconds)
[06:07:25] <fmlatghor> I don't want it to be pointing to specific dirs
[06:08:41] <rama> can you share a little about how the script handles the input file?
[06:09:14] <fmlatghor> the script decodes the input file and outputs that to another place ... or will
[06:09:17] *** Joins: a6a45081-2b83 (~aditya@2601:249:4300:1296:88ec:cc73:84d4:1507)
[06:09:39] <cluelessperson> fmlatghor, sure, but you can do that in python as well. :P
[06:09:49] <fmlatghor> cluelessperson: actually, considering this use case that might make more sense actually
[06:10:00] <fmlatghor> there are two reasons I don't want to modify it
[06:10:16] <fmlatghor> 1) I have to update it when it's changed manually
[06:10:37] <fmlatghor> no nevermind actually
[06:10:51] <cluelessperson> fmlatghor, I mean, I'm not saying it won't work.   It's just that instead of running multiple environments and maintaining code in different languages, and fighting them to work nicely together.
[06:11:14] <fmlatghor> cluelessperson: this is the one issue I've had so far. I haven't had much "fighting"
[06:11:28] <cluelessperson> fmlatghor, also.  *.xml in most shells should only give you files ending in .xml I believe. *scratches head*
[06:11:46] <fmlatghor> cluelessperson: in zsh, yes. but when I'm running this script it doesn't
[06:12:00] <rama> alright i got my chips, wheres that script?
[06:12:01] * fmlatghor checks somethnig
[06:12:02] <cluelessperson> fmlatghor, test it manually, without running the decode.py script.
[06:12:10] *** Joins: matsaman (~matsaman@user/matsaman)
[06:13:03] <fmlatghor> rama: you'll need the files to run it on which are part of a game which is proprietary....I may be able to give you just the data but...
[06:13:54] <rama> fmlatghor:  no worries, posting the code is not worth loosing the job over. (if that can happen)
[06:14:05] <fmlatghor> rama: never said it was my game
[06:14:39] <fmlatghor> rama: wait so are you saying the issue lies in the script?
[06:15:23] <rama> fmlatghor: no idea, i would just want to know what the script is doing with the filepath input. if it uses it for pattern matching the issue could lie there.
[06:16:01] <fmlatghor> rama: https://raw.githubusercontent.com/fmlatghor/gt/master/src/scripts/ghost-treader/decode.py
[06:16:33] *** Joins: brabrax_ (~brabrax@user/brabrax)
[06:17:07] *** Quits: brabrax (~brabrax@user/brabrax) (Ping timeout: 245 seconds)
[06:17:07] *** brabrax_ is now known as brabrax
[06:17:15] *** Quits: nyah (~nyah@bcdcb6e3.skybroadband.com) (Ping timeout: 260 seconds)
[06:17:49] *** Joins: NeilRG (~NeilRG@192.222.196.111)
[06:21:50] <rama> block 165 is weird.
[06:22:17] *** Quits: NeilRG (~NeilRG@192.222.196.111) (Ping timeout: 252 seconds)
[06:23:22] *** Joins: saltrocklamp[m] (~elementio@user/hexology)
[06:23:44] *** Quits: vicfred (~vicfred@user/vicfred) (Ping timeout: 265 seconds)
[06:24:18] *** Joins: rpkilby (~rpkilby@ec2-34-252-84-235.eu-west-1.compute.amazonaws.com)
[06:25:08] *** Joins: cdown_ (~cdown@89.32.122.5)
[06:25:17] *** Quits: FluffyMask (~masque@user/fluffymask) (Quit: WeeChat 3.2)
[06:26:38] *** Quits: ttree (~ttree0@c-73-239-62-159.hsd1.wa.comcast.net) (Ping timeout: 265 seconds)
[06:27:22] *** Quits: cdown (~cdown@163.114.131.1) (Ping timeout: 240 seconds)
[06:27:33] *** cdown_ is now known as cdown
[06:30:05] *** Quits: rpkilby (~rpkilby@ec2-34-252-84-235.eu-west-1.compute.amazonaws.com) (Ping timeout: 260 seconds)
[06:30:49] <fmlatghor> this one? >   for root, dirs, files in os.walk(input, topdown=False):
[06:31:02] <fmlatghor> I know you said blocks but I find it hard to know where block 165 would be
[06:31:13] <fmlatghor> unless your editer tells you so
[06:31:18] <fmlatghor> s/editer/editor
[06:31:35] *** Quits: renrelkha (~renrelkha@user/renrelkha) (Quit: bye)
[06:31:42] <rama> whoops, yeah im sorry the block within ln 165
[06:32:00] *** Joins: ttree (~ttree0@c-73-239-62-159.hsd1.wa.comcast.net)
[06:32:03] <rama> it's really the only thing thats adding files to the inputs that get used.
[06:32:57] *** Joins: renrelkha (~renrelkha@user/renrelkha)
[06:33:19] *** Joins: rpkilby (~rpkilby@ec2-34-252-84-235.eu-west-1.compute.amazonaws.com)
[06:33:23] *** Joins: pycurious (~Adium@user/pycurious)
[06:33:52] *** Joins: rpkilby_ (~rpkilby@c-24-20-208-106.hsd1.or.comcast.net)
[06:33:54] *** Joins: gggp (~textual@114.245.105.253)
[06:34:07] *** Joins: tm007 (uid287041@id-287041.highgate.irccloud.com)
[06:34:19] <Jonno_FTW> kline: it happens if I open too many threads that use botocore
[06:34:26] *** Joins: finn_elija (~finn_elij@user/finn-elija/x-0085643)
[06:34:26] *** Quits: FinnElija (~finn_elij@user/finn-elija/x-0085643) (Killed (erbium.libera.chat (Nickname regained by services)))
[06:34:26] *** finn_elija is now known as FinnElija
[06:34:49] <tm007> mornin
[06:35:07] <fmlatghor> tm007: evening
[06:35:18] <Jonno_FTW> it's lunch time
[06:35:30] <fmlatghor> Jonno_FTW: for me it is, true
[06:35:41] <tm007> fmlatghor: Aussie?
[06:35:57] <fmlatghor> tm007: nah, because I don't plan on sleeping tonite
[06:35:59] <Jonno_FTW> time for a pie and a doughnut
[06:36:01] *** Joins: Wuniu (~Thunderbi@user/wuniu)
[06:36:05] <fmlatghor> gimme
[06:36:13] * fmlatghor takes Jonno_FTW's donuts
[06:36:24] *** Quits: nbao (~nbao@187.20.16.119) (Quit: leaving)
[06:36:43] <rama> fmlatghor: print the input array before it starts decoding the files. also print(name) on ln 167 to see what its traversing over.
[06:36:47] *** Joins: nbao (~nbao@187.20.16.119)
[06:37:43] *** Quits: rpkilby (~rpkilby@ec2-34-252-84-235.eu-west-1.compute.amazonaws.com) (Ping timeout: 252 seconds)
[06:38:14] *** Quits: cheater (~Username@user/cheater) (Ping timeout: 265 seconds)
[06:40:07] <fmlatghor> wait
[06:40:23] <fmlatghor> that line
[06:40:27] <fmlatghor> that's what's causing it
[06:40:45] <fmlatghor> for some reason putting a print function around it fixes it
[06:40:55] <rama> ?
[06:41:00] *** Quits: FreEm1nD (~freemindm@mail.guarapari.store) (Remote host closed the connection)
[06:41:06] <fmlatghor> >     print(inputs.append(os.path.join(root, name)))
[06:41:26] *** Quits: gggp (~textual@114.245.105.253) (Quit: My MacBook has gone to sleep. ZZZzzz…)
[06:41:36] *** Joins: cheater (~Username@user/cheater)
[06:41:36] *** Joins: dez (uid92154@user/dez)
[06:41:38] *** Quits: sn1tch3r (~sn1tch3r@user/sn1tch3r) (Quit: Leaving)
[06:42:19] <rama> https://paste.centos.org/view/46989056
[06:42:37] <rama> try running this, i just added 2 print statements,
[06:44:59] <fmlatghor> well now it's not running
[06:45:18] <fmlatghor> wait now it is
[06:45:50] <fmlatghor> it's what I expected to see from what I figured out a second a go
[06:46:07] <fmlatghor> it's running on the right files when it has that print statement in 167
[06:48:20] *** hexeme is now known as ldlework
[06:48:26] *** Joins: hqdruxn08_ (~hqdruxn08@cpe-66-68-166-214.austin.res.rr.com)
[06:49:16] *** Quits: y1n (~y1n@84-115-64-229.wifi.dynamic.surfer.at) (Ping timeout: 252 seconds)
[06:50:40] <fmlatghor> whether this is a good fix or not I will take it
[06:52:24] *** Quits: Macuser (~Macuser@216.30.159.201) (Quit: Textual IRC Client: www.textualapp.com)
[06:52:28] *** Quits: hqdruxn08 (~hqdruxn08@cpe-66-68-166-214.austin.res.rr.com) (Ping timeout: 252 seconds)
[06:53:04] *** Quits: nbao (~nbao@187.20.16.119) (Quit: leaving)
[06:54:29] *** Quits: atrigent (~atrigent@c-73-69-68-26.hsd1.ma.comcast.net) (Read error: Connection reset by peer)
[06:55:03] *** Joins: nbao (~nbao@187.20.16.119)
[06:55:07] *** Joins: atrigent (~atrigent@c-73-69-68-26.hsd1.ma.comcast.net)
[06:55:14] *** Quits: puff (~user@S0106d4ca6d80a83c.vs.shawcable.net) (Read error: Connection reset by peer)
[06:55:15] *** Quits: nbao (~nbao@187.20.16.119) (Client Quit)
[06:55:27] *** Joins: puff (~user@S0106d4ca6d80a83c.vs.shawcable.net)
[06:55:50] *** Quits: mat001 (~mat001@c-73-223-64-126.hsd1.ca.comcast.net) (Ping timeout: 252 seconds)
[06:57:08] *** Quits: rpkilby_ (~rpkilby@c-24-20-208-106.hsd1.or.comcast.net) (Remote host closed the connection)
[06:57:18] *** Joins: FH_thecat (~FH_thecat@75.11.25.212.ftth.as8758.net)
[06:59:15] *** Joins: rpkilby (~rpkilby@c-24-20-208-106.hsd1.or.comcast.net)
[07:01:33] *** Quits: MaXxer01 (~MaXxer0@i5E86B2FA.versanet.de) (Remote host closed the connection)
[07:02:16] *** Quits: FH_thecat (~FH_thecat@75.11.25.212.ftth.as8758.net) (Quit: Leaving)
[07:02:53] *** Joins: y1n (~y1n@84-115-64-229.wifi.dynamic.surfer.at)
[07:03:32] *** Quits: rpkilby (~rpkilby@c-24-20-208-106.hsd1.or.comcast.net) (Ping timeout: 252 seconds)
[07:05:47] *** Quits: frost (~frost@59.71.240.119) (Ping timeout: 265 seconds)
[07:06:27] *** Joins: mcglk (~mcglk@131.191.49.120)
[07:07:37] *** Quits: twobitsprite (~twobitspr@107.13.51.62) (Ping timeout: 245 seconds)
[07:07:52] *** Joins: twobitsprite (~twobitspr@195.181.171.248)
[07:09:15] *** Joins: player1 (~player1@user/player1)
[07:09:23] *** Joins: frost (~frost@59.71.240.119)
[07:09:24] *** Quits: Sheilong (uid293653@id-293653.ilkley.irccloud.com) ()
[07:10:49] *** Joins: cliluw (~cliluw@47.147.80.149)
[07:12:25] *** Quits: player1 (~player1@user/player1) (Client Quit)
[07:17:50] *** Quits: Guddu (~Guddu@190.84.88.92) (Ping timeout: 252 seconds)
[07:22:19] *** Joins: lalilulelo (~lalilulel@2804:14d:7680:8ed4:19e5:c037:5be:1ef8)
[07:26:40] *** Quits: junktext (~junktext@109.201.152.177) (Ping timeout: 252 seconds)
[07:28:11] *** Joins: leduyquang753 (~leduyquan@user/leduyquang753)
[07:30:06] *** Joins: maryo (~Maryo@user/maryo)
[07:30:30] *** Joins: gggp (~textual@114.245.105.253)
[07:31:11] *** Quits: leduyquang753 (~leduyquan@user/leduyquang753) (Client Quit)
[07:32:35] *** Joins: tusko (~yeurt@copyfree/advocate/tusko)
[07:33:05] *** Quits: gggp (~textual@114.245.105.253) (Client Quit)
[07:33:18] *** Joins: mat001 (~mat001@c-73-223-64-126.hsd1.ca.comcast.net)
[07:37:52] <aphysically> well the first windows person I asked to try my pyinstaller+wine created app reports I've infuriated windows antivirus https://i.imgur.com/lr1ZssQ.png
[07:38:36] <aphysically> I wonder if that's just cause of pyinstaller/wine, or windows antivirus doesn't like that I import the subprocess module or something
[07:38:58] <aphysically> ughhhh I'm probably going to have to dig out my old laptop with windows on it
[07:39:28] <meejah> is it signed? (also: I'm alergic to windows too)
[07:39:30] <vvdaiwrw> these windows antivirus debacle is in horrid state, just yet another false positive, it's not uncommon.
[07:39:55] <aphysically> it's not signed, but my understanding is signing doesn't confer immediate windows trust anyway
[07:40:09] <aphysically> (unless you have an already-trusted certificate)
[07:40:58] *** Quits: veegee (~veegee@ipagstaticip-469c2903-2b07-6dc3-3bc2-98748da5ca77.sdsl.bell.ca) (Ping timeout: 252 seconds)
[07:41:22] <aphysically> vvdaiwrw: they said windows deletes the app when they re-enable the antivirus, so I feel like I must be doing something fixable to not make it *that* upset
[07:41:53] *** Joins: node1 (~node1@user/node1)
[07:42:19] *** Joins: sivert (~sivert@69.140.208.98)
[07:42:57] *** Quits: polyrob (~rob@user/polyrob) (Ping timeout: 245 seconds)
[07:44:03] *** Joins: odoood (~odoood@2601:c8:c003:a550::7)
[07:44:45] *** Quits: frost (~frost@59.71.240.119) (Ping timeout: 260 seconds)
[07:45:20] *** Parts: sivert (~sivert@69.140.208.98) (Leaving)
[07:46:30] *** Quits: Ninja3047 (~Ninja3047@3047.ninja) (Quit: bye)
[07:47:05] *** Joins: polyrob (~rob@user/polyrob)
[07:47:19] *** Joins: Ninja3047 (~Ninja3047@3047.ninja)
[07:47:36] <cluelessperson> aphysically, a lot of malware is delivered through similar processes.
[07:47:48] <cluelessperson> Windows is straight up trash.
[07:47:50] <aphysically> pyinstaller?
[07:48:05] *** Quits: fikran (~fikran@user/fikran) (Ping timeout: 252 seconds)
[07:48:25] <cluelessperson> aphysically, yeah, it produces unsigned bundled python scripts basically, no?
[07:48:33] <aphysically> yeah
[07:49:44] *** Quits: y1n (~y1n@84-115-64-229.wifi.dynamic.surfer.at) (Ping timeout: 252 seconds)
[07:49:59] *** Joins: fikran (~fikran@user/fikran)
[07:50:00] <matsaman> most people don't know what to do with package signing anyway, least of all Windows people, who barely have a package manager
[07:50:05] *** Joins: chenxuezhao (~chenxuezh@106.39.157.10)
[07:50:10] *** Quits: sgn (~sgn@user/sgn) (Read error: Connection reset by peer)
[07:50:18] *** Joins: frost (~frost@59.71.240.119)
[07:50:35] *** Quits: lalilulelo (~lalilulel@2804:14d:7680:8ed4:19e5:c037:5be:1ef8) (Ping timeout: 260 seconds)
[07:50:49] *** Joins: sgn (~sgn@user/sgn)
[07:51:21] <cluelessperson> matsaman, not to mention that microsoft by default has to sign everything, and explaining to laymen to install publisher certs is basically... folly.
[07:52:12] *** Quits: jiffe (~jiffe@mail.nsab.us) (Ping timeout: 245 seconds)
[07:54:30] *** Joins: jiffe (~jiffe@mail.nsab.us)
[07:55:41] *** Joins: djapo (~archangel@user/djapo)
[08:01:46] *** Quits: metah4ck3r (~meta@user/metah4ck3r) (Ping timeout: 252 seconds)
[08:01:58] *** Joins: rpkilby (~rpkilby@c-24-20-208-106.hsd1.or.comcast.net)
[08:02:49] *** Joins: y1n (~y1n@84-115-64-14.wifi.dynamic.surfer.at)
[08:03:42] *** Joins: metah4ck3r (~meta@user/metah4ck3r)
[08:03:45] *** Quits: d00gy (~d00gy@user/d00gy) (Quit: WeeChat 2.3)
[08:05:08] *** Quits: Axy (~Axy@user/axy) (Ping timeout: 252 seconds)
[08:06:14] *** Quits: rpkilby (~rpkilby@c-24-20-208-106.hsd1.or.comcast.net) (Ping timeout: 252 seconds)
[08:06:56] *** Joins: Axy (~Axy@user/axy)
[08:07:53] *** Quits: y1n (~y1n@84-115-64-14.wifi.dynamic.surfer.at) (Ping timeout: 252 seconds)
[08:10:38] *** Quits: ttree (~ttree0@c-73-239-62-159.hsd1.wa.comcast.net) (Ping timeout: 252 seconds)
[08:11:22] *** Quits: Atque (~Atque@user/atque) (Quit: ...)
[08:15:09] *** Quits: renrelkha (~renrelkha@user/renrelkha) (Quit: bye)
[08:16:39] *** Quits: Roey (~Roey@user/Roey) (Quit: Client exiting)
[08:17:25] *** Quits: atrigent (~atrigent@c-73-69-68-26.hsd1.ma.comcast.net) (Quit: My MacBook has gone to sleep. ZZZzzz…)
[08:17:31] *** Joins: renrelkha (~renrelkha@user/renrelkha)
[08:22:06] *** Joins: gggp (~textual@111.63.14.116)
[08:22:15] *** Joins: Sky_Net (~Sky_Net@176.14.213.85)
[08:25:53] *** Quits: a6a45081-2b83 (~aditya@2601:249:4300:1296:88ec:cc73:84d4:1507) (Remote host closed the connection)
[08:27:50] <node1> Does anyone using jupyter-console?
[08:28:06] <saltrocklamp[m]> not for python
[08:28:16] <node1> How to open jupyter-console in python3
[08:28:19] *** Joins: veegee (~veegee@ipagstaticip-469c2903-2b07-6dc3-3bc2-98748da5ca77.sdsl.bell.ca)
[08:28:32] <saltrocklamp[m]> you're meant to open it from the command line
[08:28:48] <node1> yes.
[08:29:51] <node1> In general when i use `jupyter-console` it's opening in python 2.7
[08:30:05] <saltrocklamp[m]> how did you install it?
[08:30:24] <node1> using python package manager.
[08:30:50] <saltrocklamp[m]> can you be more specific? and can you tell us what operating system you're using?
[08:31:16] *** Joins: hexology (~hexology@user/hexology)
[08:32:10] <saltrocklamp[m]> in general i recommend using Pipx for installing "standalone" software like jupyter console https://pypa.github.io/pipx/
[08:32:14] *** Joins: freeworld (~vit@chello085216193138.chello.sk)
[08:32:37] *** Joins: amrooting (~amrooting@197.255.10.31)
[08:32:38] <saltrocklamp[m]> normally with jupyter you don't need to care what version of python is running the jupyter frontend, because you can connect to any backend "kernel"
[08:33:26] <saltrocklamp[m]> so you would typically want to do something like create a venv, install `ipykernel` in the venv, and then register the kernel with jupyter using `python -m ipykernel install`
[08:33:35] <saltrocklamp[m]> see https://ipython.readthedocs.io/en/stable/install/kernel_install.html#kernels-for-different-environments
[08:34:19] *** Quits: Wuniu (~Thunderbi@user/wuniu) (Ping timeout: 252 seconds)
[08:35:25] *** Quits: odoood (~odoood@2601:c8:c003:a550::7) (Ping timeout: 252 seconds)
[08:35:25] *** Quits: Fiji (~Fiji@user/fiji) (Ping timeout: 252 seconds)
[08:35:30] *** Quits: amrooting1 (~amrooting@197.255.10.120) (Ping timeout: 260 seconds)
[08:36:01] *** Quits: supakeen (~user@python/site-packages/supakeen) (Quit: WeeChat 3.2.1)
[08:36:02] *** Quits: noarb (~noarb@user/noarb) (Read error: Connection reset by peer)
[08:36:31] *** Joins: supakeen (~user@python/site-packages/supakeen)
[08:36:44] <node1> Do opening of jupyter-console creates venv?
[08:36:46] *** Quits: hexology (~hexology@user/hexology) (Quit: hex on you ...)
[08:37:53] *** Joins: lalitmee__ (~lalitmee@180.94.32.185)
[08:39:09] *** Quits: node1 (~node1@user/node1) (Quit: Leaving)
[08:40:31] *** Quits: lalitmee_ (~lalitmee@180.94.32.166) (Ping timeout: 265 seconds)
[08:41:20] *** Quits: veegee (~veegee@ipagstaticip-469c2903-2b07-6dc3-3bc2-98748da5ca77.sdsl.bell.ca) (Ping timeout: 260 seconds)
[08:41:24] *** Joins: noarb (~noarb@user/noarb)
[08:43:13] *** Quits: alxndr (~alexander@ybti.net) (Remote host closed the connection)
[08:43:48] *** Quits: zebrag (~chris@user/zebrag) (Quit: Konversation terminated!)
[08:43:54] *** Quits: lsrtl__ (~lsrtl@user/lsrtl) (Ping timeout: 265 seconds)
[08:45:05] *** Joins: alxndr (~alexander@ybti.net)
[08:45:33] *** Quits: slowButPresent (~slowButPr@user/slowbutpresent) (Quit: leaving)
[08:45:58] *** Quits: puff (~user@S0106d4ca6d80a83c.vs.shawcable.net) (Remote host closed the connection)
[08:46:11] *** Joins: puff (~user@S0106d4ca6d80a83c.vs.shawcable.net)
[08:46:17] *** Joins: ttree (~ttree0@c-73-239-62-159.hsd1.wa.comcast.net)
[08:46:29] *** Quits: Sky_Net (~Sky_Net@176.14.213.85) (Read error: Connection reset by peer)
[08:49:40] *** Quits: LeLutin (~lelutin@mail.lelutin.ca) (Ping timeout: 240 seconds)
[08:49:58] *** Joins: veegee (~veegee@ipagstaticip-469c2903-2b07-6dc3-3bc2-98748da5ca77.sdsl.bell.ca)
[08:50:36] <saltrocklamp[m]> no, you need to do that yourself
[08:50:55] <saltrocklamp[m]> if you don't want to use a venv, install pipx with your desired python3 installation, and then use pipx to install jupyter console
[08:51:11] *** Quits: dez (uid92154@user/dez) (Quit: Connection closed for inactivity)
[08:53:40] *** Quits: MercilessDeth (~brad@136.49.61.2) (Ping timeout: 240 seconds)
[08:54:05] *** Joins: MercilessDeth (~brad@136.49.61.2)
[08:56:13] *** Joins: bitdex (~bitdex@gateway/tor-sasl/bitdex)
[08:56:19] *** Quits: ttree (~ttree0@c-73-239-62-159.hsd1.wa.comcast.net) (Ping timeout: 252 seconds)
[08:59:37] *** Quits: nomic (~nomic@185.192.69.188) (Quit: Leaving)
[09:02:36] *** Joins: Wuniu (~Thunderbi@user/wuniu)
[09:05:01] *** Quits: pycurious (~Adium@user/pycurious) (Quit: Leaving.)
[09:05:27] *** Quits: tbcr (~tbcr@user/tbcr) (Ping timeout: 240 seconds)
[09:05:45] *** Quits: Asmodee[T] (~Asmodee@gateway/tor-sasl/asmodee) (Ping timeout: 276 seconds)
[09:07:26] *** Joins: Asmodee[T] (~Asmodee@gateway/tor-sasl/asmodee)
[09:08:25] *** Joins: Everything (~Everythin@37.115.210.35)
[09:09:17] <dre> node1
[09:09:24] <dre> aw
[09:11:38] *** Quits: matsaman (~matsaman@user/matsaman) (Quit: leaving)
[09:12:12] *** Joins: Wubull (~Thunderbi@user/wuniu)
[09:13:32] *** Joins: rpkilby (~rpkilby@c-24-20-208-106.hsd1.or.comcast.net)
[09:13:52] *** Quits: Wuniu (~Thunderbi@user/wuniu) (Ping timeout: 265 seconds)
[09:13:53] *** Wubull is now known as Wuniu
[09:14:55] *** Joins: audio (~audio@2603-8081-1801-3bb5-cbd5-2f8b-b6de-5f12.res6.spectrum.com)
[09:17:18] <aphysically> hmmmm
[09:17:52] <aphysically> on windows it seems like having a "executable.exe" works for calling "executable" in subprocess, but I'm not sure what to use to check for executable existing in a platform independent way
[09:18:19] *** Quits: rpkilby (~rpkilby@c-24-20-208-106.hsd1.or.comcast.net) (Ping timeout: 252 seconds)
[09:19:27] <aphysically> oh there's a few options https://stackoverflow.com/questions/11210104/check-if-a-program-exists-from-a-python-script
[09:21:07] *** Quits: Wuniu (~Thunderbi@user/wuniu) (Ping timeout: 265 seconds)
[09:21:26] *** Parts: tusko (~yeurt@copyfree/advocate/tusko) (Byeee)
[09:25:09] <aphysically> gonna go with the shutil.which
[09:31:45] *** Joins: rpkilby (~rpkilby@c-24-20-208-106.hsd1.or.comcast.net)
[09:32:26] *** Joins: stranac (~stranac@195.29.239.126)
[09:33:07] *** Joins: dvx (~dvx@185.63.97.64)
[09:35:16] *** Joins: vats (~vats@42.111.12.107)
[09:36:35] *** Quits: rpkilby (~rpkilby@c-24-20-208-106.hsd1.or.comcast.net) (Ping timeout: 265 seconds)
[09:37:43] *** Joins: ElPresidente (~ElPreside@2600:1700:3d10:4870:353b:afbb:2653:5a75)
[09:38:23] *** Quits: jetchisel (jetchisel@user/jetchisel) (Read error: Connection reset by peer)
[09:38:48] *** Joins: Wuniu (~Thunderbi@user/wuniu)
[09:40:27] *** Quits: squirrel (~sq@user/squirrel) (Quit: Going offline, see ya! (www.adiirc.com))
[09:41:37] *** Joins: ub (~Thunderbi@178.115.77.119.wireless.dyn.drei.com)
[09:42:16] *** Joins: nbao (~nbao@187.20.16.119)
[09:43:12] *** Joins: upsala (~zcb@185.213.155.160)
[09:43:25] *** Quits: ckdCreations (~ckdCreati@147.55.133.142) (Read error: Connection reset by peer)
[09:43:39] *** Joins: ckdCreations (~ckdCreati@c-24-17-50-149.hsd1.wa.comcast.net)
[09:44:08] *** Joins: jetchisel (jetchisel@user/jetchisel)
[09:45:14] *** Quits: Wuniu (~Thunderbi@user/wuniu) (Ping timeout: 252 seconds)
[09:46:49] *** Quits: vvdaiwrw (~rvgzuuqp@gateway/tor-sasl/rvgzuuqp) (Quit: vvdaiwrw)
[09:47:15] *** Quits: djapo (~archangel@user/djapo) (Ping timeout: 260 seconds)
[09:49:22] *** Quits: chenxuezhao (~chenxuezh@106.39.157.10) (Remote host closed the connection)
[09:50:43] *** Quits: gggp (~textual@111.63.14.116) (Quit: My MacBook has gone to sleep. ZZZzzz…)
[09:57:45] *** Quits: fikran (~fikran@user/fikran) (Ping timeout: 260 seconds)
[09:59:22] *** Joins: fikran (~fikran@user/fikran)
[10:00:29] *** Quits: nbao (~nbao@187.20.16.119) (Quit: leaving)
[10:00:53] *** Joins: complexnumber (~complexnu@115-64-7-110.static.tpgi.com.au)
[10:01:00] *** Quits: penguino (~mrpenguin@user/mrpenguin) (Ping timeout: 276 seconds)
[10:01:45] *** Joins: chenxuezhao (~chenxuezh@106.39.157.10)
[10:02:10] <complexnumber> I'm trying to Serialise an object that contains a list of objects. I'm trying pickle. When I read back from the file the list of objects is empty. Do I need to serialise the object list first?
[10:02:22] *** Joins: twofingersneat_ (~twofinger@174-080-036-228.res.spectrum.com)
[10:05:01] *** Joins: AnySomebody (~AnySomebo@p200300c2871c5e497b38f4f62927883a.dip0.t-ipconnect.de)
[10:05:02] *** Joins: gggp (~textual@114.245.107.137)
[10:05:06] <deniska> complexnumber: is it a normal python list? What kind of objects does it contain? Also are you aware about all the problems with pickle?
[10:05:23] *** Quits: Xaldafax (~xaldafax@cpe-198-72-160-101.socal.res.rr.com) (Quit: Bye...)
[10:05:36] *** Joins: Wuniu (~Thunderbi@user/wuniu)
[10:05:38] *** Quits: twofingersneat (~twofinger@174-080-036-228.res.spectrum.com) (Ping timeout: 256 seconds)
[10:06:10] *** Quits: Confusioned (~AnySomebo@p200300c2871c5e415ced088c069ad00e.dip0.t-ipconnect.de) (Ping timeout: 252 seconds)
[10:06:14] *** Joins: rpkilby (~rpkilby@c-24-20-208-106.hsd1.or.comcast.net)
[10:06:17] *** Quits: chenxuezhao (~chenxuezh@106.39.157.10) (Client Quit)
[10:06:34] *** Quits: lmat (~Lmat@c-68-58-60-231.hsd1.in.comcast.net) (Ping timeout: 252 seconds)
[10:06:44] <complexnumber> deniska: it's a normal python list of objects. They are objects I have created. I am aware of the problems. I'm still learning python this is not production code
[10:07:10] <deniska> complexnumber: can you share the code?
[10:07:43] <complexnumber> sure, it's kinda lame though.. I'm writing a budget program to learn to code. hang on i'll paste to a pastebin
[10:08:00] *** Quits: LiftLeft (~LiftLeft@216-26-118-34.dynamic.nelson.airstreamcomm.net) (Ping timeout: 265 seconds)
[10:08:40] <complexnumber> https://bpa.st/VIPQ
[10:10:32] *** Quits: rpkilby (~rpkilby@c-24-20-208-106.hsd1.or.comcast.net) (Ping timeout: 252 seconds)
[10:10:35] <deniska> complexnumber: when you put a definition like `	transactions = []
[10:10:57] <complexnumber> ahh
[10:11:00] <deniska> complexnumber: when you put a definition like `transactions = []` in the class body, you create an object shared between all class instances
[10:11:11] <complexnumber> ok
[10:11:35] <deniska> complexnumber: so when you serialize an instance, `transactions` doesn't get serialized because it doesn't belong to it
[10:11:49] <complexnumber> I think I understand
[10:11:53] <complexnumber> thank you
[10:11:57] <deniska> complexnumber: you probably want to put `self.transactions = []` in __init__ of Account
[10:12:05] <complexnumber> ok
[10:12:08] <complexnumber> thank you
[10:12:13] *** Quits: AlanMD (~AlanMD@193.105.140.131) (Ping timeout: 252 seconds)
[10:12:16] *** Quits: gggp (~textual@114.245.107.137) (Quit: My MacBook has gone to sleep. ZZZzzz…)
[10:12:34] <deniska> complexnumber: same goes for Ledger and accounts
[10:12:37] *** Joins: black_13 (~jjosb@209.221.58.189)
[10:13:42] <complexnumber> yes
[10:13:44] <complexnumber> cool
[10:13:50] <complexnumber> I think I'm good
[10:14:16] *** Joins: Hax0r (~Hax0r@51.252.22.22)
[10:14:40] *** Joins: AlanMD (~AlanMD@188.27.5.247)
[10:14:52] *** Quits: Vonter (~Vonter@user/vonter) (Ping timeout: 252 seconds)
[10:15:44] *** Quits: Thanatos (~Thanatos@ec2-54-148-37-124.us-west-2.compute.amazonaws.com) (Ping timeout: 265 seconds)
[10:15:48] *** Joins: bigRoo (~user@73.181.dsl.syd.iprimus.net.au)
[10:16:53] <complexnumber> perfect. got it working
[10:17:01] <complexnumber> Thank you from a newbie
[10:18:15] *** Joins: Vonter (~Vonter@user/vonter)
[10:20:01] <aphysically> so this is the pyinstaller packaged .exe https://www.virustotal.com/gui/file/e16c5e29aed0542b5dfcf1743fb5901ed73c77be578948aa895659c2bd303f17/detection
[10:21:32] *** Quits: ub (~Thunderbi@178.115.77.119.wireless.dyn.drei.com) (Ping timeout: 265 seconds)
[10:22:38] *** Quits: black_13 (~jjosb@209.221.58.189) (Ping timeout: 252 seconds)
[10:23:51] *** Joins: winterflaw (~winterfla@gateway/tor-sasl/winterflaw)
[10:25:12] <aphysically> I guess I should decide if this route is really less work than trying to explain to someone how to install a .whl in a venv
[10:25:19] *** Quits: baltazar (~baltazar@188-143-71-54.pool.digikabel.hu) (Ping timeout: 252 seconds)
[10:27:22] *** Joins: baltazar (~baltazar@84-236-21-130.pool.digikabel.hu)
[10:28:27] *** Joins: lmat (~Lmat@c-68-58-60-231.hsd1.in.comcast.net)
[10:29:03] <BrenBarn> I see this: https://stackoverflow.com/questions/58010466/bitdefender-detects-my-console-application-as-genvariant-ursu-56053
[10:29:15] *** Quits: Lando-SpacePimp (~Lando@user/lando-spacepimp) (Ping timeout: 260 seconds)
[10:32:17] <aphysically> https://github.com/spesmilo/electrum/commit/1d0f67996e7875091fec253ed68d240403a11a0d I don't know if this is worth it honestly
[10:33:51] *** Joins: chele (~chele@user/chele)
[10:34:03] *** Joins: TFKyle (~kyle@64.201.205.70)
[10:34:22] <aphysically> I guess I only really need to make microsoft's built-in antivirus happy
[10:36:18] *** Quits: puff (~user@S0106d4ca6d80a83c.vs.shawcable.net) (Read error: Connection reset by peer)
[10:36:25] *** Quits: Vonter (~Vonter@user/vonter) (Ping timeout: 252 seconds)
[10:36:31] *** Joins: puff (~user@S0106d4ca6d80a83c.vs.shawcable.net)
[10:38:35] *** Quits: lmat (~Lmat@c-68-58-60-231.hsd1.in.comcast.net) (Ping timeout: 252 seconds)
[10:46:10] *** Quits: Hax0r (~Hax0r@51.252.22.22) (Quit: Leaving)
[10:46:37] *** Quits: seednode (~seednode@user/seednode) (Quit: Nihil supernum.)
[10:46:41] *** Joins: ColdKeyboard (~ColdKeybo@user/coldkeyboard)
[10:47:12] *** Joins: seednode (~seednode@user/seednode)
[10:48:43] *** Quits: ColdKeyboard (~ColdKeybo@user/coldkeyboard) (Remote host closed the connection)
[10:49:18] *** Joins: ColdKeyboard (~ColdKeybo@user/coldkeyboard)
[10:50:44] *** Quits: DerpGusta (~quassel@user/derpgusta) (Ping timeout: 250 seconds)
[10:53:07] *** Joins: DerpGusta (~quassel@user/derpgusta)
[10:53:42] *** Joins: Vonter (~Vonter@user/vonter)
[10:54:30] *** Joins: slavaqq (~slavaqq@sdmail.sdserver.cz)
[10:55:37] *** Joins: lmat (~Lmat@c-68-58-60-231.hsd1.in.comcast.net)
[10:55:59] *** Joins: manti7 (~manti7@176.10.104.94)
[10:56:04] *** Joins: PyT001 (~PyT001@2402:e280:3d22:227:dc75:230e:33ac:fe7b)
[10:56:08] *** Parts: PyT001 (~PyT001@2402:e280:3d22:227:dc75:230e:33ac:fe7b) ()
[10:56:25] *** Joins: PyT001 (~PyT001@2402:e280:3d22:227:dc75:230e:33ac:fe7b)
[10:58:41] *** Joins: FH_thecat (~FH_thecat@75.11.25.212.ftth.as8758.net)
[11:00:30] *** Joins: node1 (~node1@user/node1)
[11:00:58] *** Joins: LiftLeft (~LiftLeft@216-26-118-34.dynamic.nelson.airstreamcomm.net)
[11:01:20] *** Joins: X4 (~X4@x4dbea5ee.dyn.telefonica.de)
[11:04:16] *** Joins: Atque (~Atque@user/atque)
[11:05:19] *** Joins: gusto (~Augustus@109.255.100.54)
[11:13:57] <node1> It looks pydb does not take python3 syntax.
[11:14:54] *** Quits: mattypants (~quassel@66-90-146-141.dyn.grandenetworks.net) (Remote host closed the connection)
[11:15:27] *** Joins: Wubull (~Thunderbi@user/wuniu)
[11:15:59] *** Quits: lmat (~Lmat@c-68-58-60-231.hsd1.in.comcast.net) (Ping timeout: 252 seconds)
[11:16:05] *** Joins: mexen (uid495612@user/mexen)
[11:17:05] *** Quits: Wuniu (~Thunderbi@user/wuniu) (Ping timeout: 252 seconds)
[11:17:06] *** Wubull is now known as Wuniu
[11:18:33] *** Quits: FH_thecat (~FH_thecat@75.11.25.212.ftth.as8758.net) (Quit: Leaving)
[11:18:34] *** Joins: mohabaks (~mohabaks@gateway/tor-sasl/mohabaks)
[11:20:40] *** Quits: TakinOver (~quassel@47.150.196.72) (Ping timeout: 240 seconds)
[11:20:57] *** Joins: segfaultbanana (~segfaultb@user/segfaultbanana)
[11:21:06] *** Joins: TakinOver (~quassel@47.150.196.72)
[11:21:59] *** Joins: tobybl_ (~tobybl@189.192.115.87.dyn.plus.net)
[11:22:26] *** tobybl_ is now known as tobybl
[11:22:57] *** Quits: Madda (~Madda@150.249.9.51.dyn.plus.net) (Ping timeout: 245 seconds)
[11:22:58] *** Joins: lmat (~Lmat@c-68-58-60-231.hsd1.in.comcast.net)
[11:23:13] *** Quits: dhellmann (~dhellmann@097-081-099-073.res.spectrum.com) (Read error: Connection reset by peer)
[11:23:49] *** Joins: dhellmann (~dhellmann@097-081-099-073.res.spectrum.com)
[11:24:14] *** Quits: Wuniu (~Thunderbi@user/wuniu) (Ping timeout: 252 seconds)
[11:24:33] *** Joins: Wuniu (~Thunderbi@user/wuniu)
[11:25:49] *** Quits: segfaultbanana (~segfaultb@user/segfaultbanana) (Ping timeout: 265 seconds)
[11:25:49] *** Quits: LiftLeft (~LiftLeft@216-26-118-34.dynamic.nelson.airstreamcomm.net) (Ping timeout: 265 seconds)
[11:26:46] *** Joins: Madda (~Madda@150.249.9.51.dyn.plus.net)
[11:26:56] *** Joins: roro (~roro@user/roro)
[11:27:19] *** Quits: roro (~roro@user/roro) (Client Quit)
[11:29:21] *** Joins: pycode (~pycode@2001:b07:5d28:551:23f9:efff:6714:714c)
[11:29:27] *** Quits: X4 (~X4@x4dbea5ee.dyn.telefonica.de) (Ping timeout: 256 seconds)
[11:31:00] *** Joins: jazzy2 (~jaziz@172.58.43.80)
[11:31:15] *** jazzy2 is now known as jazzy1
[11:34:13] *** Joins: Makdaam (makdaam@user/makdaam)
[11:34:50] *** Quits: Makdaam_ (makdaam@user/makdaam) (Read error: Connection reset by peer)
[11:35:01] *** Quits: node1 (~node1@user/node1) (Quit: Leaving)
[11:36:56] *** Quits: Wuniu (~Thunderbi@user/wuniu) (Ping timeout: 265 seconds)
[11:40:25] *** Joins: kosh (~kosh@user/kosh)
[11:40:36] *** Joins: zmt00 (~zmt00@user/zmt00)
[11:40:46] *** Quits: audio (~audio@2603-8081-1801-3bb5-cbd5-2f8b-b6de-5f12.res6.spectrum.com) (Ping timeout: 252 seconds)
[11:41:00] *** Quits: bigRoo (~user@73.181.dsl.syd.iprimus.net.au) (Remote host closed the connection)
[11:42:39] *** Joins: Mattiaslndstrm (~Mattiasln@c188-148-207-108.bredband.tele2.se)
[11:43:06] *** Quits: zmt01 (~zmt00@user/zmt00) (Ping timeout: 256 seconds)
[11:43:31] *** Quits: vats (~vats@42.111.12.107) (Ping timeout: 252 seconds)
[11:43:33] *** Joins: zmt01 (~zmt00@user/zmt00)
[11:44:01] *** Joins: theprophet (~theprophe@85.114.228.184)
[11:45:27] *** Quits: kickingvegas (~cchoi@c-24-5-40-20.hsd1.ca.comcast.net) (Quit: leaving)
[11:45:31] *** Quits: dasbootmir (~dasbootmi@user/dasbootmir) (Quit: dasbootmir)
[11:45:43] *** Quits: zmt00 (~zmt00@user/zmt00) (Ping timeout: 252 seconds)
[11:47:43] *** Joins: cjb (~cjb@user/cjb)
[11:50:12] *** Joins: EvilDMP (~textual@django/moderator/EvilDMP)
[11:52:49] *** Joins: Payam (~Payam@138.106.57.131)
[11:52:52] *** Joins: Gurkenglas (~Gurkengla@dslb-002-207-014-195.002.207.pools.vodafone-ip.de)
[11:54:33] *** Joins: trace987 (~trace@ip5f5a6a70.dynamic.kabel-deutschland.de)
[11:55:06] *** Quits: Furai (~Furai@cookiehoster.furai.pl) (Quit: WeeChat 3.2.1)
[11:55:22] *** Joins: scaleww (~scaleww@77-41-20-31.ftth.glasoperator.nl)
[11:55:38] *** Quits: Payam (~Payam@138.106.57.131) (Client Quit)
[11:55:58] *** Joins: computeiro (~Wender@189.37.69.130)
[11:56:17] *** Joins: zln (~zln@c80-217-230-193.bredband.tele2.se)
[11:57:38] *** Joins: y1n (~y1n@84-115-64-216.wifi.dynamic.surfer.at)
[11:57:57] *** Joins: DnzAtWrk (~DnzAtWrk@mobile-access-5673bf-42.dhcp.inet.fi)
[11:57:57] *** Joins: Furai (~Furai@cookiehoster.furai.pl)
[11:58:30] *** Quits: wender (~Wender@189.37.65.224) (Ping timeout: 260 seconds)
[11:58:48] *** Quits: DnzAtWrk (~DnzAtWrk@mobile-access-5673bf-42.dhcp.inet.fi) (Read error: Connection reset by peer)
[11:59:05] *** Quits: ferz (~ferz@93-39-142-17.ip76.fastwebnet.it) (Ping timeout: 260 seconds)
[12:01:47] *** Joins: DnzAtWrk (~DnzAtWrk@mobile-access-5673bf-42.dhcp.inet.fi)
[12:06:33] *** Joins: rendar (~rendar@user/rendar)
[12:06:37] *** Quits: fikran (~fikran@user/fikran) (Ping timeout: 252 seconds)
[12:08:46] *** Joins: fikran (~fikran@user/fikran)
[12:11:15] *** Quits: Mattiaslndstrm (~Mattiasln@c188-148-207-108.bredband.tele2.se) (Ping timeout: 265 seconds)
[12:12:31] *** Quits: Jonno_FTW (~come@user/jonno-ftw/x-0835346) (Ping timeout: 252 seconds)
[12:13:00] *** Quits: pwnd_sfw (~pwnd_sfw@ool-18b88100.dyn.optonline.net) (Quit: Ping timeout (120 seconds))
[12:13:37] *** Joins: ferz (~ferz@93-39-142-17.ip76.fastwebnet.it)
[12:14:53] *** Joins: pwnd_sfw (~pwnd_sfw@ool-18b88100.dyn.optonline.net)
[12:20:19] *** Joins: node1 (~node1@user/node1)
[12:22:11] *** Joins: zmt00 (~zmt00@user/zmt00)
[12:22:32] *** Quits: doc (~doc@user/doc) (Ping timeout: 252 seconds)
[12:23:08] *** Quits: Betal (~Betal@user/betal) (Quit: WeeChat 3.2)
[12:23:45] *** Quits: EvilDMP (~textual@django/moderator/EvilDMP) (Quit: My MacBook has gone to sleep. ZZZzzz…)
[12:23:51] *** Joins: rpkilby (~rpkilby@c-24-20-208-106.hsd1.or.comcast.net)
[12:24:13] *** Quits: zmt01 (~zmt00@user/zmt00) (Ping timeout: 252 seconds)
[12:24:36] *** Joins: zer0bitz (~zer0bitz@dsl-hkibng31-58c384-213.dhcp.inet.fi)
[12:25:00] *** Joins: EvilDMP (~textual@django/moderator/EvilDMP)
[12:26:10] *** Quits: khrbt (~znc@user/khrbt) (Ping timeout: 240 seconds)
[12:26:32] *** Joins: doc (~doc@user/doc)
[12:26:46] *** Quits: puff (~user@S0106d4ca6d80a83c.vs.shawcable.net) (Read error: Connection reset by peer)
[12:26:56] *** Joins: khrbt (~znc@user/khrbt)
[12:27:00] *** Joins: puff (~user@S0106d4ca6d80a83c.vs.shawcable.net)
[12:27:12] *** Quits: KombuchaKip (~kip@192.252.230.5) (Ping timeout: 245 seconds)
[12:27:42] *** Joins: carl- (~carl-@c-138ee555.02-180-73746f39.bbcust.telenor.se)
[12:29:51] *** Joins: twofingersneat__ (~twofinger@174-080-036-228.res.spectrum.com)
[12:30:09] *** Quits: khrbt (~znc@user/khrbt) (Client Quit)
[12:30:22] *** Joins: khrbt (~znc@user/khrbt)
[12:30:31] *** Quits: crabbedhaloablut (~crabbedha@user/crabbedhaloablut) (Ping timeout: 276 seconds)
[12:31:33] *** Quits: rpkilby (~rpkilby@c-24-20-208-106.hsd1.or.comcast.net) (Ping timeout: 265 seconds)
[12:32:20] *** Quits: iomari891 (~iomari891@105.112.138.38) (Quit: WeeChat 3.0.1)
[12:33:01] *** Quits: twofingersneat_ (~twofinger@174-080-036-228.res.spectrum.com) (Ping timeout: 252 seconds)
[12:34:05] *** Quits: jetchisel (jetchisel@user/jetchisel) (Ping timeout: 260 seconds)
[12:35:20] *** Joins: crabbedhaloablut (~crabbedha@user/crabbedhaloablut)
[12:35:31] *** Joins: rsrx (~rsrx@103.225.149.167)
[12:35:51] *** Quits: EvilDMP (~textual@django/moderator/EvilDMP) (Quit: My MacBook has gone to sleep. ZZZzzz…)
[12:36:09] *** Joins: hendursa1 (~weechat@user/hendursaga)
[12:36:42] *** Joins: lalitmee_ (~lalitmee@180.94.32.190)
[12:36:56] *** Joins: Norore (~weechat@balder.ens.fr)
[12:37:25] *** Quits: AlanMD (~AlanMD@188.27.5.247) (Ping timeout: 252 seconds)
[12:38:49] *** Joins: EvilDMP (~textual@django/moderator/EvilDMP)
[12:39:17] *** Quits: lalitmee__ (~lalitmee@180.94.32.185) (Ping timeout: 265 seconds)
[12:39:36] *** Quits: hendursaga (~weechat@user/hendursaga) (Ping timeout: 276 seconds)
[12:39:38] *** Quits: node1 (~node1@user/node1) (Quit: Leaving)
[12:39:48] *** Joins: AlanMD (~AlanMD@193.105.140.131)
[12:42:12] *** Joins: shad (~shad@user/shad)
[12:43:25] *** Joins: lalitmee (~lalitmee@180.94.32.16)
[12:43:26] *** Quits: lalitmee_ (~lalitmee@180.94.32.190) (Ping timeout: 252 seconds)
[12:43:53] *** Joins: amahl (~amahl@dsl-jklbng12-54fbca-64.dhcp.inet.fi)
[12:45:38] *** Quits: y1n (~y1n@84-115-64-216.wifi.dynamic.surfer.at) (Ping timeout: 252 seconds)
[12:46:11] *** Quits: Norore (~weechat@balder.ens.fr) (Ping timeout: 252 seconds)
[12:48:10] *** Quits: jpic (~jpic@82.142.10.6) (Ping timeout: 250 seconds)
[12:49:25] *** Joins: gggp (~textual@114.245.107.137)
[12:49:55] *** Joins: jpic (~jpic@bernadette.objectif-libre.com)
[12:50:25] *** Quits: rsrx (~rsrx@103.225.149.167) (Ping timeout: 265 seconds)
[12:50:29] *** Gerula is now known as Guest1955
[12:50:29] *** Joins: Gerula_ (~Gerula@user/gerula)
[12:50:29] *** Quits: Guest1955 (~Gerula@user/gerula) (Killed (copper.libera.chat (Nickname regained by services)))
[12:50:29] *** Gerula_ is now known as Gerula
[12:52:35] *** Joins: jetchisel (jetchisel@user/jetchisel)
[12:53:56] *** Joins: mIk3_08 (~Thunderbi@user/mik3-08/x-2852566)
[12:56:01] *** Quits: barometz (~dvanb@i117058.upc-i.chello.nl) (Ping timeout: 252 seconds)
[12:56:01] *** Quits: EvilDMP (~textual@django/moderator/EvilDMP) (Quit: My MacBook has gone to sleep. ZZZzzz…)
[12:56:24] *** Quits: semeion (~semeion@user/semeion) (Quit: WeeChat 3.2)
[12:56:30] *** Joins: barometz (~dvanb@i117058.upc-i.chello.nl)
[12:58:13] *** Joins: raxor2k (~raxor2k@78.158.248.158)
[12:58:50] *** Quits: cjb (~cjb@user/cjb) (Quit: cjb)
[12:59:02] <raxor2k> bjs: if you look at line 44-49, i made it work somehow. But i guess you have a better/prettier way of doing it? : https://bpa.st/6RVA
[12:59:13] *** Quits: mIk3_08 (~Thunderbi@user/mik3-08/x-2852566) (Quit: mIk3_08)
[12:59:28] *** Joins: Norore (~weechat@balder.ens.fr)
[12:59:29] *** Joins: freeman_h (~freeman_h@2a02:c7f:fc54:ba00:213c:34e2:70bd:b038)
[12:59:31] *** Joins: cjb (~cjb@user/cjb)
[12:59:34] *** Joins: fdan (~fdan@192.146.154.3)
[13:00:49] *** Quits: vdamewood (~vdamewood@fedora/vdamewood) (Quit: My MacBook Pro has gone to sleep. ZZZzzz…)
[13:01:48] *** Joins: mIk3_08 (~Thunderbi@user/mik3-08/x-2852566)
[13:02:25] *** Joins: tepiloxtl (~tepiloxtl@oml11.internetdsl.tpnet.pl)
[13:03:06] *** Quits: mIk3_08 (~Thunderbi@user/mik3-08/x-2852566) (Client Quit)
[13:04:45] <tepiloxtl> Hey. Is it a good place to ask question about pip? I have an issue, I can't `pip list -o`, becasue it throws exception insode html5lib? https://bpa.st/BBZQ
[13:04:47] *** Joins: mIk3_08 (~Thunderbi@user/mik3-08/x-2852566)
[13:04:53] *** Joins: plastico (~plastico@neomutt/plastico)
[13:04:55] *** Quits: flyback (~flyback@2601:540:8201:1e60:3cb8:7bae:b60:429c) (Ping timeout: 252 seconds)
[13:05:04] <tepiloxtl> Ive tried to install html5lib and upgrade its dependencies but it didn't help
[13:06:09] <tepiloxtl> pip 20.3.4 from /usr/lib/python3/dist-packages/pip (python 3.9)
[13:07:20] *** Joins: twofingersneat_ (~twofinger@174-080-036-228.res.spectrum.com)
[13:07:31] *** Joins: mozgalom (~mozgalom@IPnet-gw.157.157.97.111.simnet.is)
[13:08:12] <tepiloxtl> ...outdated pip, just figured it out. Funnily it would normally yell at me its out of date, but I guess it could not reach its own version in pypi
[13:08:15] *** Joins: iomari891 (~iomari891@105.112.138.38)
[13:08:32] <supakeen> They might've started vendoring the correct version of html5lib in later versions (unsure).
[13:08:39] *** Quits: tepiloxtl (~tepiloxtl@oml11.internetdsl.tpnet.pl) (Quit: Client closed)
[13:08:44] *** Joins: EvilDMP (~textual@django/moderator/EvilDMP)
[13:10:43] *** Quits: twofingersneat__ (~twofinger@174-080-036-228.res.spectrum.com) (Ping timeout: 265 seconds)
[13:14:06] *** Joins: wib_jonas (~wib_jonas@business-37-191-60-209.business.broadband.hu)
[13:15:58] <theprophet> guys is it possible to print a message for only one name in for loop? https://bpa.st/WQBA --- if so can you show me how?
[13:16:52] *** Joins: lsrtl__ (~lsrtl@user/lsrtl)
[13:17:25] <Nei> theprophet: you can use the "break" command to exit a for loop
[13:17:28] *** Quits: jazzy1 (~jaziz@172.58.43.80) (Ping timeout: 265 seconds)
[13:17:56] <theprophet> Nei without breaking?
[13:18:13] *** Joins: flyback (~flyback@2601:540:8201:1e60:3cb8:7bae:b60:429c)
[13:18:48] <Nei> theprophet: what does your code do currently? what would you like it to do instead?
[13:19:34] <theprophet> well it loops trough whole list, but i wanna know if it is possible to loop trough the list and mention only one name
[13:19:54] *** Joins: PJBoy (~PJBoy@user/pjboy)
[13:19:54] <theprophet> and print the message
[13:20:56] *** Joins: varaindemian (uid73404@id-73404.ilkley.irccloud.com)
[13:21:06] <theprophet> to be more specific, this code loops trough the list and informs everyone that they like particular language, but what if i want to pick only one name in list and prin the same message but without breaking the loop
[13:21:28] <Nei> how to pick the name?
[13:21:45] *** Quits: EvilDMP (~textual@django/moderator/EvilDMP) (Quit: My MacBook has gone to sleep. ZZZzzz…)
[13:22:03] <theprophet> just print one name not the whole list
[13:22:18] <theprophet> but in loop
[13:22:23] <theprophet> is it possible or not?
[13:22:44] <theprophet> i know how to do it without loop, but i wanna know if it is possible to do in loop case
[13:23:02] <grawity> in other words, you want the loop to stop at that point?
[13:23:10] <theprophet> no
[13:23:15] <theprophet> i dont want it to stop
[13:23:18] <grawity> so what do you want it to do instead?
[13:23:31] *** Quits: gggp (~textual@114.245.107.137) (Quit: My MacBook has gone to sleep. ZZZzzz…)
[13:23:34] <pycode> hello i have this code: https://bpa.st/X7TQ i should implement another method into Logic (abstract) class BUT...it is not mandatory i mean i would like to put some logic inside and then use it on child classes that need that
[13:23:42] <cluelessperson> theprophet, I'm not clear on the logic you explained
[13:23:46] <Nei> theprophet: anything is possible, but we're not yet clear on what you want to do :)
[13:23:49] <pycode> is that possible or should i create another class like BaseLogic and put that method there?
[13:24:07] <theprophet> so in my case loops go trough list and returns everybody on the list,
[13:24:19] <theprophet> what i want is loop to not stop and pick only one name
[13:24:21] <theprophet> is it possible?
[13:24:44] *** Joins: Yion (~Yion@pd95caa88.dip0.t-ipconnect.de)
[13:24:56] *** Joins: EvilDMP (~textual@django/moderator/EvilDMP)
[13:24:57] <grawity> as in, just change the `if` condition to not look at the list and to check for only that specific name? like `if name == "phil"`?
[13:25:12] *** Quits: jpic (~jpic@bernadette.objectif-libre.com) (Ping timeout: 265 seconds)
[13:25:21] <Yion> Hi. Does anyone know a way of auto-restart a python script that is using wxPython in VSCode?
[13:25:27] <theprophet> grawity yes thats the idea.
[13:25:46] *** Joins: jpic (~jpic@82.142.10.6)
[13:26:01] <grawity> so just use `if name == "phil"` then
[13:26:02] <theprophet> @graw
[13:26:09] <grawity> although I feel that kinda defeats the point of the loop
[13:26:15] <Nei> pycode: abstract classes are often used in 2 ways: to tell some others which methods can be used, or to tell some others which methods must be implemented
[13:26:16] <theprophet> @graw
[13:26:19] <theprophet>  omg
[13:26:25] <theprophet> grawity ok thanks bro
[13:26:39] *** Joins: Ergo^ (~ergo@91.238.59.144)
[13:26:47] <theprophet> @graw
[13:26:49] <theprophet> omggg
[13:27:03] <theprophet> grawity yes it does, but i still wanted to know that.
[13:27:07] <bjs> pycode: like just to make a normal method?
[13:27:08] *** Quits: complexnumber (~complexnu@115-64-7-110.static.tpgi.com.au) (Ping timeout: 265 seconds)
[13:27:47] <pycode> bjs, yes a method of the parent
[13:27:52] <pycode> that the child can use if needed
[13:28:00] <bjs> pycode: sure, you can just do that.
[13:28:00] <pycode> but not "required" (abstract) i mean
[13:28:01] *** Quits: amahl (~amahl@dsl-jklbng12-54fbca-64.dhcp.inet.fi) (Ping timeout: 252 seconds)
[13:28:08] <bjs> pycode: then just don't mark it as an @abstractmethod
[13:28:18] <pycode> Nei, exactly the execute method MUST be implemented
[13:28:26] <theprophet> @graw
[13:28:33] <bjs> theprophet: their nick is grawity not graw
[13:28:39] <pycode> but then i have other method that can be used but not implemented
[13:28:40] <bjs> so they might not be seeing your messages
[13:28:41] <theprophet> grawity this is wonderful, thanks again.
[13:28:50] <bjs> pycode: what do you mean?
[13:28:59] <pycode> bjs, ok but i can leave the ABC ?
[13:29:01] <theprophet> @bjs i know , my keyboard does not work properly
[13:29:08] <bjs> pycode: what?  "leave" it?
[13:29:10] *** Joins: Wuniu (~Thunderbi@user/wuniu)
[13:29:23] <Nei> pycode: you can add non-abstract methods to your ABC
[13:29:37] <Nei> but how to make a good interface and class design is not easy to answer :D
[13:30:14] <pycode> bjs, wait...i have to methods the first one is  execute() this method MUST Be implemented on all the classes that are using Logic base classbut then there are other methods that i need
[13:30:34] <pycode> but i wonder if the ABC Logic(ABC) should be a problem
[13:30:35] <molt> Hey all. Does anyone have any experience with Beautiful Soup?
[13:30:36] <bjs> pycode: yeah, so execute is an abstract method,  implementations of the class must implement it
[13:30:43] <pycode> i mean all the methods but be abstract?
[13:30:45] <bjs> pycode: what kind of problem?
[13:30:46] <bjs> pycode: no
[13:30:52] <bjs> pycode: you can have normal methods too
[13:31:01] <pycode> bjs, i thought that qith ABC all the methods must be abstract
[13:31:03] <pycode> ok ok
[13:31:39] <raxor2k> bjs ?
[13:31:45] <bjs> raxor2k: what
[13:31:54] <raxor2k> did you see the paste? https://bpa.st/6RVA
[13:32:03] <raxor2k> line 44 to 49
[13:32:32] <pycode> so i just need to declare that method without @abstractmethod
[13:32:32] <pycode> ok
[13:32:35] <pycode> thanks bjs
[13:32:38] <bjs> raxor2k: yes
[13:32:48] <bjs> raxor2k: you said it works,  so there's nothing for me to add
[13:33:07] <bjs> pycode: yes, if the method doesn't have @abstractmethod then it's just a normal method
[13:33:38] <raxor2k> bjs: but would you do it in that way ?
[13:33:44] <bjs> raxor2k: no
[13:33:53] <pycode> ok as i wrote i thought that inherithing from ABC all the methods were abstract :D
[13:33:54] <pycode> ok
[13:34:15] <bjs> pycode: see e.g. https://github.com/python/cpython/blob/3.9/Lib/_collections_abc.py for examples of 'real' ABCs,  (take a look at e.g. line 516 `class Set`)
[13:34:19] *** Joins: xrogaan (~xrogaan@user/xrogaan)
[13:35:06] <pycode> yes, thanks!
[13:36:17] <bjs> raxor2k: I mean,  you struggle with the more advanced ways of doing things.  You should just program using the methods and techniques you know and can work with;  a loop with an empty dict and lots of checks is a fine way of doing it even if it's not necessarily written in the way that I would do it.
[13:37:34] <raxor2k> bjs: ok i seer.
[13:37:37] <raxor2k> see
[13:38:33] *** Quits: hnOsmium0001 (uid453710@id-453710.stonehaven.irccloud.com) (Quit: Connection closed for inactivity)
[13:38:58] <raxor2k> bjs: so i should try and follow some of the example you have shown me the last days ?
[13:39:39] <bjs> raxor2k: yes
[13:40:17] <bjs> raxor2k: I will make one point though, that you go `for i in my_plan.values(): for x in merge_avg_exercises_dict.values():`  to try find the average'd dict with the same id
[13:40:49] <bjs> raxor2k: but you can just look it up directly instead of looping. `x = merge_avg_exercises_dict[i["muscle_group_ID"]]`  (and maybe I wouldn't call these `i` and `x` ...
[13:41:23] <raxor2k> bjs: thanks
[13:43:52] *** Joins: hyperknot (~hyperknot@dynamic-046-114-091-011.46.114.pool.telefonica.de)
[13:44:11] <hyperknot> Hi, my pip is stuck at Starting new HTTPS connection (1): pypi.org:443, is there a mirror or something which I could use?
[13:44:44] <hyperknot> It actually works but it's _super_ slow now
[13:44:53] *** Yugi is now known as Hunterkll
[13:45:10] *** Joins: legola (~legola@46.235.100.27)
[13:45:35] <raxor2k> bjs: but the first example you mentioned was somehow same as mine ?
[13:45:47] <bjs> raxor2k: what do you mean?
[13:46:11] <raxor2k> "<bjs> raxor2k: I will make one point though, that you go `for i in my_plan.values(): for x in merge_avg_exercises_dict.values():`  to try find the average'd dict with the same id"
[13:46:21] *** Joins: Thanatos (~Thanatos@ec2-54-148-37-124.us-west-2.compute.amazonaws.com)
[13:46:22] <raxor2k> that was what i was doing in my example ?
[13:46:32] <bjs> raxor2k: yes, that's what i say
[13:46:33] *** Quits: Thanatos (~Thanatos@ec2-54-148-37-124.us-west-2.compute.amazonaws.com) (Read error: Connection reset by peer)
[13:46:39] <bjs> i say "you go <like this>"
[13:46:55] <raxor2k> bjs: aha, so you was basically trying to say "dont do it like this" right ?
[13:47:16] *** Quits: KeiraT (~k@lulzsec.co.uk) (Ping timeout: 252 seconds)
[13:47:22] <bjs> raxor2k: imagine I wrote `for index, list_elem in enumerate(some_list): if index == 5: print(list_elem)`
[13:47:39] <bjs> raxor2k: you would say, this is weird because you can just lookup some_list[5] directly right?
[13:47:42] <grawity> hyperknot: pypi is behind Fastly, so that sounds more like an ISP issue than a service issue
[13:47:47] <raxor2k> bjs: somehow yes
[13:47:53] <grawity> hyperknot: compare `curl -4` and `curl -6` to it?
[13:48:10] <bjs> raxor2k: same for your dict, you're looping through the dict until you find the key you're looking for... when you could just look it up directly
[13:49:16] <raxor2k> bjs: got it
[13:49:33] <raxor2k> thats why i was asking, becasue i was thinking that there is probably easier way..
[13:50:00] <hyperknot> grawity: I only have ipv4
[13:50:20] *** Quits: cebor (~cebor@user/cebor) (Quit: bye!)
[13:50:47] *** Quits: cjb (~cjb@user/cjb) (Quit: cjb)
[13:51:12] *** Joins: cebor (~cebor@user/cebor)
[13:52:01] <hyperknot> very interesting curl -I https://pypi.org/simple/pip/ works instantly
[13:52:12] <hyperknot> while pip install -U pip -vv is taking minutes
[13:52:59] <hyperknot> ok, exactly one minute
[13:54:58] <kushal> hyperknot, Btw, please try to use `python3 -m pip` than just `pip`
[13:55:00] *** Quits: theprophet (~theprophe@85.114.228.184) (Quit: Client closed)
[13:55:17] <hyperknot> it doesn't matter it's from pyenv
[13:56:15] <kushal> Okay
[13:56:28] <rendar> should i use parquet or hdf5? anyone experienced those packages?
[13:56:59] *** Quits: slavaqq (~slavaqq@sdmail.sdserver.cz) (Quit: Client closed)
[13:59:00] *** Joins: Wubull (~Thunderbi@user/wuniu)
[13:59:05] <hyperknot> now it's fast again
[13:59:15] *** Quits: ferz (~ferz@93-39-142-17.ip76.fastwebnet.it) (Ping timeout: 260 seconds)
[13:59:37] *** Quits: freeman_h (~freeman_h@2a02:c7f:fc54:ba00:213c:34e2:70bd:b038) (Ping timeout: 245 seconds)
[13:59:53] *** Quits: Wuniu (~Thunderbi@user/wuniu) (Ping timeout: 252 seconds)
[13:59:53] *** Quits: Ergo^ (~ergo@91.238.59.144) (Ping timeout: 252 seconds)
[13:59:54] *** Wubull is now known as Wuniu
[14:00:10] *** Joins: codificat (~pep@187.red-83-46-128.dynamicip.rima-tde.net)
[14:00:36] *** Joins: Ergo^ (~ergo@91.238.59.144)
[14:01:23] *** Quits: iomari891 (~iomari891@105.112.138.38) (Quit: WeeChat 3.0.1)
[14:01:48] *** Joins: ferz (~ferz@93-39-142-17.ip76.fastwebnet.it)
[14:02:37] *** Joins: gnod (~gnod@user/gnod)
[14:02:53] <fdan> hi there, i have this dictionary https://dpaste.org/O2Nu.. each instance can have an arbitrary number of security groups attached. i want to find the unused security groups and print one per line in alphabetical order. how can i do that
[14:03:48] *** Quits: tg (~tg@rockylinux/infra/tg) (Quit: tg)
[14:03:52] <bjs> fdan: well that's 3 things you want to do: to collect the unused security groups,  to sort them alphabetically, and to print them line-by-line.  Which step are you stuck on right now?
[14:03:57] *** Joins: KeiraT (~k@lulzsec.co.uk)
[14:04:14] <fdan> hmm all the three
[14:04:25] <gnod> Is there a shorter version of "if x: if x[0]: ..."?
[14:04:27] <raxor2k> bjs: you say that i dont need to loop at all? makes no sense
[14:04:33] <bjs> gnod: `if x and x[0]:`
[14:04:38] *** Quits: Yion (~Yion@pd95caa88.dip0.t-ipconnect.de) (Quit: Client closed)
[14:04:58] <bjs> raxor2k: the `for x in merge_avg_exercises_dict.values():` loop you don't need at all yeah
[14:05:18] <raxor2k> but looping at "my_plan" i need?
[14:05:33] <gnod> bjs: Nice, thanks.
[14:05:57] <gnod> In Python, do all strings except the empty string evaluate to TRUE?
[14:06:15] <bjs> fdan: I see,  well,  to find them you'd loop over the all_groups, then for each of those loop over each instance and see if it's in their "SecurityGroups" list, and if you find one where it doesn't appear in any it's "unused" and you can add it to a list or something
[14:06:36] <bjs> fdan: once you have a list, you can .sort() it to make it alphabetical. Then you can loop over the list and print(each_item) to put it on its own line.
[14:06:37] <grawity> just use sets https://paste.rs/4IJ
[14:06:38] <fdan> the problem i have is the loop the inner loops are string
[14:06:49] <molt> Hey all! I am trying to scrape a webpage, but am having issues with Beautiful Soup in Python. First I use the Get Method in the Requests library to save the webpage I want as a variable, then I try to parse the HTML in that variable with Beautiful Soup -- this is where the trouble starts. If I iterate through the variable I created with the webpage via the Requests' Get method all is well (the content that is expected to be there is
[14:06:49] <molt> there). But when I look at the parsed data by Beautiful Soup it is missing a ton of links.
[14:06:51] <bjs> fdan: the inner loops?
[14:07:18] <bjs> gnod: yes (or rather they are considered truthy by `if`)
[14:07:25] <molt> the URL I'm trying to scrape is https://musescore.com/sheetmusic/soundtrack?page=1
[14:07:47] <grawity> you *could* have inner loops, and check each group manually, but sets make it a bit simpler and probably also faster
[14:08:08] <molt> I'm trying to parse out all links that start out like so: https://musescore.com/user/
[14:08:30] <fdan> grawity any snippets to check manually?
[14:08:43] *** Quits: GenTooMan (~cyberman@2601:547:437f:e5c6:21f:5bff:fefe:a883) (Ping timeout: 252 seconds)
[14:08:54] <gnod> bjs: Great
[14:09:31] <molt> if anyone has a moment to help out I would greatly appreciate it. I can paste code on https://pastebin.com/
[14:10:00] *** Quits: thiras (~thiras@user/thiras) (Remote host closed the connection)
[14:10:42] *** Joins: GenTooMan (~cyberman@2601:547:437f:e5c6:21f:5bff:fefe:a883)
[14:10:58] *** Joins: Mattiaslndstrm (~Mattiasln@c188-148-207-108.bredband.tele2.se)
[14:11:25] *** Joins: thiras (~thiras@user/thiras)
[14:11:44] <grawity> fdan: well, for example: https://paste.rs/RP3
[14:11:45] <raxor2k> bjs: one thing for sure, i can not use update at all
[14:11:46] <grawity> it's 3x as much work
[14:11:49] <raxor2k> thats doesnt work
[14:12:31] <bjs> raxor2k: I mean we've had this conversation so many times now;  I use update() in these examples as a trivial/simple/naive "merge" operation. It just takes everything and stuffs it into the dict
[14:12:45] <bjs> you may have a more complicated operation that requires you to create keys and do arithmetic or other things
[14:13:00] <raxor2k> i just find it strange that you say i dont need loops
[14:13:10] <raxor2k> i cant think of other ways than just using loops
[14:13:35] *** Joins: cthulchu (~Cthulchu@193.194.107.250)
[14:13:47] <bjs> raxor2k: I mean,  you don't need to loop over a dict to find the value for a particular key
[14:14:13] *** Quits: gnod (~gnod@user/gnod) (Quit: leaving)
[14:14:33] *** Quits: EvilDMP (~textual@django/moderator/EvilDMP) (Quit: My MacBook has gone to sleep. ZZZzzz…)
[14:14:56] <raxor2k> ok, so the code knows all the values it self ?
[14:15:02] <raxor2k> im blind now
[14:15:09] *** Quits: scaleww (~scaleww@77-41-20-31.ftth.glasoperator.nl) (Quit: Leaving)
[14:15:35] *** Joins: gggp (~textual@60.10.23.169)
[14:15:57] *** Joins: blindguard (~blindguar@2a02:908:1864:c200::4433)
[14:16:01] <bjs> raxor2k: you wouldn't loop over a list to find the element at a particular position(index) right?
[14:16:06] *** Quits: GenTooMan (~cyberman@2601:547:437f:e5c6:21f:5bff:fefe:a883) (Excess Flood)
[14:16:26] *** Quits: fikran (~fikran@user/fikran) (Ping timeout: 265 seconds)
[14:16:33] *** Joins: GenTooMan (~cyberman@2601:547:437f:e5c6:21f:5bff:fefe:a883)
[14:16:36] <raxor2k> if i need to compare and know that particular index, yes ?
[14:16:41] <raxor2k> but we are not talking about lists now
[14:16:44] *** Quits: legola (~legola@46.235.100.27) ()
[14:17:02] *** Quits: gggp (~textual@60.10.23.169) (Client Quit)
[14:17:17] <bjs> raxor2k: ... no you wouldn't;  because you can just look up the value directly.  `the_element = the_list[5]` just gets the element for index 5 (position 6) directly
[14:17:17] *** Quits: puff (~user@S0106d4ca6d80a83c.vs.shawcable.net) (Read error: Connection reset by peer)
[14:17:19] <bjs> without having to loop ?
[14:17:31] *** Joins: puff (~user@S0106d4ca6d80a83c.vs.shawcable.net)
[14:18:09] *** Joins: fikran (~fikran@user/fikran)
[14:18:50] *** Joins: gggp (~textual@123.113.176.46)
[14:19:41] *** Quits: Wuniu (~Thunderbi@user/wuniu) (Ping timeout: 252 seconds)
[14:20:06] *** Joins: Wuniu (~Thunderbi@user/wuniu)
[14:21:05] *** Joins: segfaultbanana (~segfaultb@user/segfaultbanana)
[14:21:10] *** Joins: rpkilby (~rpkilby@c-24-20-208-106.hsd1.or.comcast.net)
[14:21:22] *** Quits: GenTooMan (~cyberman@2601:547:437f:e5c6:21f:5bff:fefe:a883) (Ping timeout: 252 seconds)
[14:22:05] *** Joins: GenTooMan (~cyberman@2601:547:437f:e5c6:21f:5bff:fefe:a883)
[14:22:22] *** Joins: legola (~legola@46.235.100.27)
[14:22:35] *** Quits: rpkilby (~rpkilby@c-24-20-208-106.hsd1.or.comcast.net) (Remote host closed the connection)
[14:22:37] *** Quits: PyT001 (~PyT001@2402:e280:3d22:227:dc75:230e:33ac:fe7b) (Quit: Client closed)
[14:23:11] *** Joins: rpkilby (~rpkilby@c-24-20-208-106.hsd1.or.comcast.net)
[14:24:25] *** Joins: iomari891 (~iomari891@105.112.138.38)
[14:24:28] *** Quits: gggp (~textual@123.113.176.46) (Quit: My MacBook has gone to sleep. ZZZzzz…)
[14:25:10] <raxor2k> bjs: yes so i can use 'print(my_plan[1])' and if gives me the first value
[14:25:13] <raxor2k> but still the point is ?
[14:25:27] <bjs> raxor2k: you can do the same with dicts. `print(my_dict[some_key])` will give you the value for that key
[14:25:27] *** Joins: Wubull (~Thunderbi@user/wuniu)
[14:25:38] <bjs> you don't need to loop over the dict to find the value with that key
[14:25:44] *** Quits: segfaultbanana (~segfaultb@user/segfaultbanana) (Ping timeout: 252 seconds)
[14:26:16] *** Joins: EvilDMP (~textual@django/moderator/EvilDMP)
[14:26:17] <zln> is it possible to use input().isdigit() and assign input to var. if true in one line?
[14:26:21] <raxor2k> bjs: and thats what : 'print(my_plan[1])' does
[14:26:26] <raxor2k> you type in value directly and it prints it
[14:26:40] <raxor2k> but i still need an way to loop to be able to compare the ID from both lists
[14:26:42] <raxor2k> dicts**
[14:26:46] <bjs> raxor2k: yes, but then you loop over the dict to find the one with the right id
[14:26:50] *** Quits: Wuniu (~Thunderbi@user/wuniu) (Ping timeout: 252 seconds)
[14:26:51] *** Wubull is now known as Wuniu
[14:27:15] <bjs> raxor2k: maybe I'm confused by what it's doing
[14:27:40] <bjs> raxor2k: but any time you're looping over a dict to find a value it feels wrong
[14:27:56] *** Quits: rpkilby (~rpkilby@c-24-20-208-106.hsd1.or.comcast.net) (Ping timeout: 252 seconds)
[14:28:00] <bjs> and maybe this is why I shouldn't have brought it up and just let you continue with what you do know how to do rather than confusing you with ideas of how to write it differently
[14:29:03] <raxor2k> bjs: you have brainwashed me to know always use dict ID (1 : {  })   and theres nothing wrong with that
[14:29:10] <raxor2k> but i cant use the same approach as i used before on this
[14:29:21] <bjs> raxor2k: you keep saying "can't" and "doesn't work"
[14:29:49] <Repiphany> raxor2k: The whole point of using dicts that have the exercise_ID as the key is so that you can get those dicts with that number
[14:29:51] <bjs> maybe you should remove those phrases from your vocabulary until you've learned more about what you *can* do and what *does* work before you claim things like that
[14:30:04] <Repiphany> Rather than looping over the values and checking if d['exercise_ID'] matches
[14:30:08] <bjs> raxor2k: I'm not saying you can just edit some words and it'll work, you're asking if I would write this program in the same way as you
[14:30:10] *** Quits: WhizzWr (Whizz@s-o-m-e.h-o-s-t.name) (Ping timeout: 240 seconds)
[14:30:32] *** Quits: djhankb (~djhankb@208.113.164.68) (Read error: Connection reset by peer)
[14:30:41] <bjs> raxor2k: and the answer is no,  here you have a loop that's looping over a dictionary-like structure to find a value for a particular index/key.  I wouldn't do that. I would write it in a way where I could lookup things by key directly.
[14:30:55] <bjs> and it's "obvious" to me that it would work fine, but yes you'd have to re-write your code a bit to make it work.
[14:31:05] *** Joins: djhankb (~djhankb@208.113.164.68)
[14:31:23] <bjs> zln: you didn't say what you want to happen if it's *not* a digit
[14:31:50] <zln> exit or not assign or something like that :)
[14:31:59] <zln> warn maybe
[14:32:02] *** Joins: LucaTM (~LucaTM@user/lucatm)
[14:32:06] <bjs> zln: maybe you want `value = int(input())`
[14:32:33] <bjs> which will put the integer value into `value` and if it wasn't an integer it'll raise an exception
[14:32:41] <zln> bjs: no, cuz if the input is alpha, then input is not right
[14:32:48] <zln> aha
[14:33:00] <bjs> zln: huh?  But then you'd get an exception which would exit the program
[14:33:04] <bjs> just like what you said you wanted
[14:33:08] <bjs> zln: "aha" ?
[14:33:09] <zln> yes that could be nice
[14:33:12] <zln> :)
[14:33:19] <bjs> zln: why smiley face?  Am I missing something
[14:33:27] <bjs> zln: the answer is still, as far as I can see, `value = int(input())`
[14:33:30] <zln> well, int() it is then. I thougt int would convert chars to some int value :D
[14:33:48] <bjs> zln: no, int("23") => 23,  int("abc") => error, int("12.3") => error
[14:33:49] <zln> bjs: yes, you missed that I got your explanation with int
[14:33:51] <zln> :D
[14:34:00] <zln> bjs: thanks
[14:34:26] *** Joins: forgotmynick (uid24625@id-24625.stonehaven.irccloud.com)
[14:34:35] *** Joins: dev0 (~dev0@user/deepspace-link)
[14:36:25] <zln> btw, when reading input without assigning, is that input discarded or is it still accessable somewhere in memory? stdin?
[14:36:49] <bjs> zln: once it's read it's gone from stdin,  stdin is a "stream".
[14:36:52] <bjs> if you don't save it, it's gone.
[14:37:04] *** Quits: hyperknot (~hyperknot@dynamic-046-114-091-011.46.114.pool.telefonica.de) (Quit: Textual IRC Client: www.textualapp.com)
[14:37:08] <zln> I see, thanks
[14:37:56] *** Joins: nattiestnate (~nate@2001:448a:20a0:4134:25e:715f:d637:5263)
[14:38:56] *** Quits: Jigsy (~Jigsy@user/jigsy) (Ping timeout: 252 seconds)
[14:39:21] *** Joins: Jigsy (~Jigsy@user/jigsy)
[14:42:11] *** Quits: Jigsy (~Jigsy@user/jigsy) (Killed (NickServ (GHOST command used by Jigsy`)))
[14:42:18] *** Joins: Jigsy` (~Jigsy@user/jigsy)
[14:43:28] *** Quits: dev0 (~dev0@user/deepspace-link) ()
[14:44:10] *** Jigsy` is now known as Jigsy
[14:52:33] <rendar> there is an asyncio way to load parquet or hdf5 files?
[14:55:12] *** Joins: cidtest (~cidtest@185.156.172.206)
[14:55:22] *** Joins: atrigent (~atrigent@c-73-69-68-26.hsd1.ma.comcast.net)
[14:59:19] *** Quits: Mattiaslndstrm (~Mattiasln@c188-148-207-108.bredband.tele2.se) (Quit: My MacBook has gone to sleep. ZZZzzz…)
[15:00:27] *** Joins: georgios (~georgios@user/georgios)
[15:00:52] <graingert[m]> <rendar> "there is an asyncio way to..." <- anyio.Path.open can give you an async file, but you might as well use a thread for the whole thing
[15:01:10] <rendar> :\
[15:02:09] <bjs> rendar: probably any "asyncio" way would be a library that just makes a thread
[15:02:26] <rendar> bjs, yeah
[15:02:55] <rendar> but i'd prefer a thread created and managed by some library, instead of me
[15:03:46] *** Quits: Jigsy (~Jigsy@user/jigsy) (Killed (NickServ (GHOST command used by Jigsy`)))
[15:03:52] *** Joins: Jigsy` (~Jigsy@user/jigsy)
[15:04:28] *** Quits: realies (~realies@user/realies) (Quit: ~)
[15:04:49] *** Joins: realies (~realies@user/realies)
[15:06:45] *** Quits: Jigsy` (~Jigsy@user/jigsy) (Killed (NickServ (GHOST command used by Jigsy)))
[15:06:45] *** Joins: Jigsy (~Jigsy@user/jigsy)
[15:07:37] *** Joins: waxfire82 (~waxfire@65.119.2.240)
[15:08:19] *** Quits: nattiestnate (~nate@2001:448a:20a0:4134:25e:715f:d637:5263) (Quit: WeeChat 3.2)
[15:08:44] *** Joins: p-i-_ (~Ohmu@mx-ll-223.206.69-159.dynamic.3bb.co.th)
[15:09:40] *** Quits: waxfire8 (~waxfire@65.119.2.240) (Ping timeout: 252 seconds)
[15:09:40] *** waxfire82 is now known as waxfire8
[15:10:57] <p-i-_> https://docs.fabfile.org/en/latest/ <-- Fabric looks like a nice little tool for managing multiple remote linux boxes.
[15:11:30] <p-i-_> I was initially planning to knock everything out in BASH, but it takes so much energy to do a simple thing in BASH.
[15:12:01] *** Quits: p-i- (~Ohmu@mx-ll-223.206.69-159.dynamic.3bb.co.th) (Ping timeout: 265 seconds)
[15:12:34] *** Joins: herjazz (~herjazz@p6758124-ipngn30801marunouchi.tokyo.ocn.ne.jp)
[15:13:55] *** Quits: georgios (~georgios@user/georgios) (Ping timeout: 260 seconds)
[15:13:58] *** Joins: otisolsen70 (~otisolsen@xd4ed80b5.cust.hiper.dk)
[15:14:25] *** Quits: zaz\ (~zaz@poneybl.eu) (Quit: bye)
[15:16:36] *** Joins: zaz\ (~zaz@poneybl.eu)
[15:19:36] *** Joins: goldfish (~goldfish@user/goldfish)
[15:21:40] *** Quits: asd (~noname@user/asd) (Ping timeout: 240 seconds)
[15:23:14] *** Joins: asd (~noname@user/asd)
[15:24:02] *** Joins: NeilRG (~NeilRG@192.222.196.111)
[15:24:02] *** Joins: rpkilby (~rpkilby@c-24-20-208-106.hsd1.or.comcast.net)
[15:24:37] *** Joins: theprophet (~theprophe@85.114.228.184)
[15:27:48] *** Quits: stkrdknmibalz (~test@rrcs-75-87-43-226.sw.biz.rr.com) (Quit: WeeChat 3.0.1)
[15:29:01] *** Quits: rpkilby (~rpkilby@c-24-20-208-106.hsd1.or.comcast.net) (Ping timeout: 252 seconds)
[15:32:45] *** Quits: drogas (~drogas@jump2.jet.uk) (Quit: Connection closed)
[15:33:56] *** Quits: Norore (~weechat@balder.ens.fr) (Ping timeout: 252 seconds)
[15:35:06] *** Joins: lalitmee_ (~lalitmee@180.94.33.15)
[15:37:38] *** Quits: lalitmee (~lalitmee@180.94.32.16) (Ping timeout: 265 seconds)
[15:40:01] *** Quits: shad (~shad@user/shad) (Ping timeout: 252 seconds)
[15:41:05] *** Quits: jetchisel (jetchisel@user/jetchisel) (Ping timeout: 252 seconds)
[15:42:17] *** Joins: dez (uid92154@user/dez)
[15:42:51] *** Joins: czuk_cza (~mist@188.147.96.18.nat.umts.dynamic.t-mobile.pl)
[15:44:10] *** Quits: CrazyEddy (crazyed@2603:300a:1d10:c000:de4a:3eff:fe88:cc5f) (Ping timeout: 240 seconds)
[15:45:06] <cluelessperson> p-i-_, ansible
[15:45:11] *** Joins: vvdaiwrw (~rvgzuuqp@gateway/tor-sasl/rvgzuuqp)
[15:45:34] *** Joins: daoudr (~daoudr@178.197.200.90)
[15:46:57] *** Joins: Norore (~weechat@balder.ens.fr)
[15:47:26] *** Joins: Bronto22 (~mennoh@84-86-247-193.fixed.kpn.net)
[15:48:01] *** Quits: deepy (deepy@user/deepy) (Quit: meow)
[15:48:58] *** Quits: milkt (~debian@gateway/tor-sasl/milkt) (Remote host closed the connection)
[15:49:04] *** Joins: milkt_ (~debian@gateway/tor-sasl/milkt)
[15:49:55] *** Quits: vvdaiwrw (~rvgzuuqp@gateway/tor-sasl/rvgzuuqp) (Client Quit)
[15:50:11] *** Quits: milkt_ (~debian@gateway/tor-sasl/milkt) (Client Quit)
[15:50:26] *** Joins: vvdaiwrw (~rvgzuuqp@gateway/tor-sasl/rvgzuuqp)
[15:50:31] *** Joins: milkt (~debian@gateway/tor-sasl/milkt)
[15:52:57] *** Quits: pycode (~pycode@2001:b07:5d28:551:23f9:efff:6714:714c) (Ping timeout: 245 seconds)
[15:54:32] <raxor2k> i hate, and i repeat, i HATE that guy who made dicts in python
[15:54:38] <raxor2k> im getting mentally ill of this
[15:55:00] *** Quits: digilink (~digilink@user/digilink) (Quit: WeeChat 3.2)
[15:55:09] *** Quits: cidtest (~cidtest@185.156.172.206) (Quit: WeeChat 3.2)
[15:57:55] *** Joins: Warped (~Warped@user/warped)
[15:58:11] *** Joins: GreenResponse (~tomek@r-45-155-148-237.gpon.bialnet.pl)
[15:59:01] <bjs> raxor2k: I think you're blaming dicts for your own inexperience
[15:59:19] <bjs> dicts are a *very* standard dictionary/mapping data structure,  every language has one,  they are very useful.
[16:01:08] *** Joins: digilink (~digilink@user/digilink)
[16:01:44] *** Joins: Covrus (~Covrus@2602:ff16:3:0:1:ec:0:1)
[16:02:05] *** Joins: pycurious (~Adium@user/pycurious)
[16:02:47] *** Quits: bitdex (~bitdex@gateway/tor-sasl/bitdex) (Quit: = "")
[16:03:06] <supakeen> Deja vu.
[16:05:00] *** Quits: promey (~Promeys@gateway/tor-sasl/promey) (Ping timeout: 276 seconds)
[16:05:03] *** Quits: Atque (~Atque@user/atque) (Quit: ...)
[16:07:36] *** Joins: pycode (~pycode@2001:b07:5d28:551:fff5:80fb:c4ae:a0e7)
[16:07:49] *** Quits: puff (~user@S0106d4ca6d80a83c.vs.shawcable.net) (Remote host closed the connection)
[16:08:02] *** Joins: puff (~user@S0106d4ca6d80a83c.vs.shawcable.net)
[16:08:56] *** Quits: ZedHedTed (~ZedHedTed@user/zedhedted) (Remote host closed the connection)
[16:10:07] *** Quits: mrtnt (~Martin@2001:ad0:1:1:da9e:f3ff:fe4a:8dd0) (Quit: WeeChat 2.3)
[16:13:38] *** Joins: LuksNuke (~LuksNuke@2001:7e8:c066:6200:be85:8d95:5d9:f9da)
[16:13:45] *** Joins: gitesh (uid423739@id-423739.ilkley.irccloud.com)
[16:13:59] <raxor2k> bjs: well, i solved it myself :)
[16:14:05] <raxor2k> but still im not happy, im still hating dicts
[16:14:09] <raxor2k> and i forever will
[16:14:18] <bjs> raxor2k: I doubt you "forever will"
[16:14:39] <bjs> I think you're just annoyed at your own abilities and not actually about dicts.
[16:15:45] *** Quits: Wuniu (~Thunderbi@user/wuniu) (Ping timeout: 260 seconds)
[16:16:52] <bjs> it's like students who get annoyed at breaking guitar strings when tuning them -- they're not actually annoyed at the strings they just don't have the experience and knowledge yet to know how to do it
[16:17:09] *** Joins: nyah (~nyah@bcdcb6e3.skybroadband.com)
[16:17:15] *** Joins: gggp (~textual@60.10.23.169)
[16:17:21] <bjs> and obviously having the strings be tight is not a fault or a problem or a design flaw, it's literally how the instrument works :)
[16:17:40] <bjs> same with dicts -- you'll eventually learn that dicts are *literally how Python works*
[16:18:58] *** Joins: ppang (~ppang@user/ppang)
[16:19:29] *** Joins: harpia (~harpia@58.148.205.168.dynamic.vibefibra.com.br)
[16:20:26] *** Joins: Mattiaslndstrm (~Mattiasln@c188-148-207-108.bredband.tele2.se)
[16:20:36] *** Quits: spithash (~spithash@user/spithash) (Ping timeout: 276 seconds)
[16:21:17] *** Quits: gggp (~textual@60.10.23.169) (Client Quit)
[16:21:34] *** Joins: spithash (~spithash@user/spithash)
[16:23:22] *** Quits: FFY00 (~FFY00@archlinux/trusteduser/ffy00) (Ping timeout: 252 seconds)
[16:23:22] *** Quits: death916 (AdiIRC@user/death916) (Ping timeout: 252 seconds)
[16:25:29] *** Quits: fikran (~fikran@user/fikran) (Ping timeout: 265 seconds)
[16:26:43] *** Joins: death916 (~death916@user/death916)
[16:27:31] *** Joins: fikran (~fikran@user/fikran)
[16:27:37] *** Quits: trace987 (~trace@ip5f5a6a70.dynamic.kabel-deutschland.de) (Remote host closed the connection)
[16:27:49] <jean-luc> one day we will all love dicks as much as bjs
[16:27:53] <jean-luc> dicts*
[16:28:00] <jean-luc> (mandatory)
[16:28:03] *** Quits: pycurious (~Adium@user/pycurious) (Quit: Leaving.)
[16:30:38] *** Quits: djhankb (~djhankb@208.113.164.68) (Remote host closed the connection)
[16:31:08] *** Joins: djhankb (~djhankb@208.113.164.68)
[16:32:19] *** Joins: pycurious (~Adium@user/pycurious)
[16:35:54] *** Joins: mathsboy (~user@2001:1c02:2b25:5c00:5420:4472:cd85:2912)
[16:36:01] *** Quits: supakeen (~user@python/site-packages/supakeen) (Quit: WeeChat 3.2.1)
[16:36:30] *** Joins: supakeen (~user@python/site-packages/supakeen)
[16:37:14] *** Joins: c4017w_ (~c4017@209.52.68.8)
[16:39:09] *** Joins: freeman_h (~freeman_h@2a02:c7f:fc54:ba00:d181:1ba9:a239:e1e9)
[16:39:21] <raxor2k> bjs: and i still dont know how you can say you dont need to loop to find the values
[16:39:23] <raxor2k> its so strange
[16:39:43] <bjs> raxor2k: that's the point of a dict,  you set things up such that you can just look them up
[16:40:10] *** Quits: c4017w (~c4017@209.52.68.8) (Ping timeout: 240 seconds)
[16:40:21] <raxor2k> bjs: but not at the merging task
[16:40:23] *** Joins: pathos (~pathos@169-1-247-122.ip.afrihost.co.za)
[16:40:36] <raxor2k> you have to loop to see if values or keys matches each other
[16:40:39] <Gurkenglas> Can I turn def foo(self, other: Foo) -> "Foo": and def bar(self, other: Bar) -> "Bar": into def foobar(self, other:Union[Foo,Bar]) -> "Union[Foo,Bar]": except it's supposed to preserve the information that a Foo results from a Foo?
[16:40:55] *** Joins: Fiji (~Fiji@user/fiji)
[16:41:10] *** Joins: shad (~shad@user/shad)
[16:41:35] <jean-luc> raxor2k: z = x | y
[16:41:41] <jean-luc> thats how you merge two dicts in 3.9
[16:41:44] <jean-luc> https://stackoverflow.com/questions/38987/how-do-i-merge-two-dictionaries-in-a-single-expression-taking-union-of-dictiona
[16:41:54] <jean-luc> you can see how for the other versions here
[16:41:57] *** Quits: frost (~frost@59.71.240.119) (Quit: Connection closed)
[16:44:06] <jinsun> Gurkenglas: you will have to use overloads https://docs.python.org/3/library/typing.html#typing.overload, declare foobar as Foo -> Foo in one overload and Bar -> Bar in another, and have the Unions in the actual implementation
[16:45:42] *** Joins: bfoley (~bfoley@pool-173-48-101-113.bstnma.fios.verizon.net)
[16:48:42] <The-Compiler> jinsun, Gurkenglas: Wouldn't a TypeVar work for this too?
[16:49:23] <jinsun> oh yes, just T -> T will do actually
[16:49:34] <The-Compiler> i.e.   foobar(self, other: T) -> T   with   T = TypeVar(Foo, Bar)   or something
[16:49:52] *** Quits: Fiji (~Fiji@user/fiji) (Ping timeout: 252 seconds)
[16:49:59] <The-Compiler> err, TypeVar('T', Foo, Bar)
[16:50:31] *** Joins: moldorcoder7 (~moldorcod@37.120.143.28)
[16:50:33] <Gurkenglas> will that make inferred types more or less readable?
[16:51:43] *** Joins: tempate (~alpha@user/tempate)
[16:52:08] <tempate> Hello. How can I create a vector of arbitrary length ( u = (u_1, ..., u_n ) ) filled with letters?
[16:52:38] *** Joins: Moosadee (~Moosadee@136.32.155.193)
[16:53:07] <lericson> "".join(random.choice(string.letters + string.digits) for i in range(12))
[16:53:15] <lericson> not actually a vector, tempate
[16:53:26] <lericson> also you probably should assign string.letters + digits to a variable
[16:53:39] *** Joins: Wuniu (~Thunderbi@user/wuniu)
[16:53:41] *** Joins: noctavian_ (~noctavian@gateway/tor-sasl/noctavian)
[16:54:24] *** Quits: noctavian (~noctavian@gateway/tor-sasl/noctavian) (Ping timeout: 276 seconds)
[16:55:06] <jinsun> you mean `string.ascii_letters` probably,  otherwise it is AttributeError: module 'string' has no attribute 'letters'
[16:55:07] <tempate> I was thinking there may be a way to do it with numpy?
[16:55:10] *** Joins: mickey2 (~user@user/mickey)
[16:55:10] <bjs> raxor2k: sigh, it's okay if you don't see what I do I guess
[16:55:21] <bjs> raxor2k: just do what you can do and eventually you'll learn all the things you can do with dicts
[16:55:29] <tempate> I would like to keep it as general as possible
[16:55:39] *** Quits: blddk (~admin@185.233.252.229) (Quit: ZNC 1.8.2 - https://znc.in)
[16:56:31] *** Joins: deepy (deepy@user/deepy)
[16:56:48] <Gurkenglas> jinsun, what if it's Foo -> "Quu" and Bar -> "Qux"?
[16:57:01] *** Quits: thiras (~thiras@user/thiras) (Ping timeout: 252 seconds)
[16:57:39] *** Quits: mickey (~user@user/mickey) (Ping timeout: 276 seconds)
[16:57:40] *** mickey2 is now known as mickey
[16:57:47] <raxor2k> bjs: i know why it happens, but im unsure on how to solve it. Can you help?  https://bpa.st/VUHQ
[16:58:26] *** Joins: blddk (~admin@185.233.252.229)
[16:58:53] *** Moosadee is now known as RachelThePotato
[16:58:54] <jinsun> Gurkenglas: well overload is still possible in that case, with TypeVar not sure, probably not
[17:00:18] <supakeen> jean-luc: please leave inappropriate those jokes out of #python.
[17:01:09] *** Quits: lalitmee_ (~lalitmee@180.94.33.15) (Remote host closed the connection)
[17:01:16] *** Quits: Wu (~wu@158.red-83-50-192.dynamicip.rima-tde.net) (Ping timeout: 252 seconds)
[17:01:34] *** Joins: lalitmee_ (~lalitmee@180.94.33.15)
[17:01:35] *** Quits: Bronto22 (~mennoh@84-86-247-193.fixed.kpn.net) (Quit: Konversation terminated!)
[17:01:59] <bjs> raxor2k: did you want to add them to the current_progress rather than just replacing the current_progress
[17:02:07] *** Quits: EvilDMP (~textual@django/moderator/EvilDMP) (Quit: My MacBook has gone to sleep. ZZZzzz…)
[17:02:15] <raxor2k> bjs: correct
[17:02:28] <bjs> raxor2k: so maybe you should do that
[17:02:31] *** Joins: Meteorhead (~Meteorhea@165.225.21.40)
[17:03:04] *** Quits: asd (~noname@user/asd) (Ping timeout: 252 seconds)
[17:03:25] *** Joins: Wu (~wu@173.red-83-50-192.dynamicip.rima-tde.net)
[17:05:02] *** Joins: asd (~noname@user/asd)
[17:05:20] *** Quits: Wuniu (~Thunderbi@user/wuniu) (Ping timeout: 260 seconds)
[17:05:21] <raxor2k> bjs: maybe add them together first before pushing to "current_progress" ?
[17:05:30] <bjs> raxor2k: yeah,  or use += rather than just =
[17:06:06] *** Parts: tempate (~alpha@user/tempate) ()
[17:06:14] <jinsun> tempate: yes, you can use numpy too for that,  `np.random.choice(list(string.ascii_letters), length)`
[17:06:59] *** Joins: amahl (~amahl@dsl-jklbng12-54fbca-64.dhcp.inet.fi)
[17:07:25] *** Joins: Fiji (~Fiji@user/fiji)
[17:07:35] *** Joins: EvilDMP (~textual@django/moderator/EvilDMP)
[17:08:02] <raxor2k> bjs: its not possible to use += in this case ?
[17:08:22] <bjs> raxor2k: you're using that phrase "not possible",  in what way is it not possible?
[17:08:46] *** Joins: vats (~vats@103.70.83.191)
[17:09:28] <raxor2k> bjs: this is not possible: 'the_ID["current_progress"]+= i["avg_percent_for_this_exercise_so_far"] * the_ID["total_possible_points_to_achieve_during_plan"]'
[17:09:43] <bjs> raxor2k: you keep saying not possible,  why is it not possible?
[17:10:28] *** Quits: ppang (~ppang@user/ppang) (Quit: Leaving)
[17:10:40] <raxor2k> bjs: lol what, not it works??
[17:10:45] <raxor2k> bjs: i got typo error earlier
[17:10:48] <raxor2k> and yesterday
[17:10:49] <raxor2k> wtf..
[17:10:54] <bjs> raxor2k: you were doing it wrong earlier then
[17:10:55] <bjs> and yesterday
[17:10:59] <bjs> I don't know what you want me to say
[17:11:31] <raxor2k> bjs: i swear to god, i did exactly same as i wrote here(several times) and i got error for this
[17:11:33] <raxor2k> wow..
[17:11:36] <raxor2k> incredible
[17:11:50] <bjs> raxor2k: well clearly not,  Python hasn't changed since yesterday
[17:11:50] <supakeen> You clearly didn't. Have you thought about taking a break or something?
[17:11:56] *** Joins: maryo87 (~Maryo@user/maryo)
[17:12:38] <raxor2k> bjs: aah, now i see where i did wrong
[17:13:24] *** Quits: stranac (~stranac@195.29.239.126) (Read error: Connection reset by peer)
[17:13:41] <gitesh> do you understand here --- https://bpa.st/SKVA
[17:13:56] <bjs> gitesh: understand what about it? :)
[17:13:58] <gitesh> what is the use of " else:  return "bored"
[17:14:49] *** Quits: bfoley (~bfoley@pool-173-48-101-113.bstnma.fios.verizon.net) (Quit: My MacBook has gone to sleep. ZZZzzz…)
[17:14:56] <bjs> gitesh: to return "bored" if the above `if`s dont match
[17:15:07] <gitesh> oh i got it
[17:15:08] *** Quits: maryo (~Maryo@user/maryo) (Ping timeout: 252 seconds)
[17:15:39] *** Quits: blddk (~admin@185.233.252.229) (Quit: ZNC 1.8.2 - https://znc.in)
[17:16:07] *** Quits: raxor2k (~raxor2k@78.158.248.158) ()
[17:16:17] *** Quits: Mattiaslndstrm (~Mattiasln@c188-148-207-108.bredband.tele2.se) (Quit: My MacBook has gone to sleep. ZZZzzz…)
[17:17:53] *** Parts: loamranger (~loamrange@user/loamranger) ()
[17:17:54] *** Joins: blddk (~admin@185.233.252.229)
[17:22:03] *** Quits: withered_wolf (~withered_@1437135-v103.1561-static.stchilaa.metronetinc.net) (Ping timeout: 265 seconds)
[17:24:47] <gitesh> so if I have a type `class Pet():` in order to make types of Pet I will need inheritance
[17:25:11] <grym> gitesh: subclasses of Pet would require inheritance
[17:25:12] <bjs> gitesh: it depends whether you want the "types of Pet" to be instances of the Pet class, or other classes themselves
[17:25:25] <grym> gitesh: "things that also act like Pets" does not require inheritance
[17:26:41] *** Joins: Pickchea (~private@user/pickchea)
[17:27:30] *** Joins: rpkilby (~rpkilby@c-24-20-208-106.hsd1.or.comcast.net)
[17:28:16] *** Quits: rpkilby (~rpkilby@c-24-20-208-106.hsd1.or.comcast.net) (Remote host closed the connection)
[17:28:53] *** Joins: rpkilby (~rpkilby@c-24-20-208-106.hsd1.or.comcast.net)
[17:29:07] *** Joins: Wuniu (~Thunderbi@user/wuniu)
[17:29:16] *** Quits: rpkilby (~rpkilby@c-24-20-208-106.hsd1.or.comcast.net) (Remote host closed the connection)
[17:29:31] *** Joins: rpkilby (~rpkilby@c-24-20-208-106.hsd1.or.comcast.net)
[17:30:48] *** Quits: spithash (~spithash@user/spithash) (Ping timeout: 276 seconds)
[17:30:53] *** Quits: rpkilby (~rpkilby@c-24-20-208-106.hsd1.or.comcast.net) (Remote host closed the connection)
[17:31:03] *** Quits: blddk (~admin@185.233.252.229) (Quit: ZNC 1.8.2 - https://znc.in)
[17:31:27] *** Joins: spithash (~spithash@user/spithash)
[17:31:28] *** Joins: rpkilby (~rpkilby@c-24-20-208-106.hsd1.or.comcast.net)
[17:32:41] *** Quits: moldorcoder7 (~moldorcod@37.120.143.28) (Ping timeout: 265 seconds)
[17:33:13] *** Joins: Kvothe (~weechat@user/elodin)
[17:33:17] *** Quits: Wuniu (~Thunderbi@user/wuniu) (Ping timeout: 252 seconds)
[17:33:50] *** Joins: blddk (~admin@185.233.252.229)
[17:34:32] *** Joins: segfaultbanana (~segfaultb@user/segfaultbanana)
[17:36:35] *** Quits: rpkilby (~rpkilby@c-24-20-208-106.hsd1.or.comcast.net) (Ping timeout: 252 seconds)
[17:36:40] *** Joins: wovixo (~wovixo@128.104.205.49)
[17:37:58] *** Joins: moldorcoder7 (~moldorcod@37.120.143.28)
[17:38:35] *** Joins: be3uykpy (~be3uykpy@2a00:a040:19a:b060:684a:caf2:8321:7b3c)
[17:39:44] *** Quits: BillyZane (~BillyZane@91.196.220.173) (Read error: Connection reset by peer)
[17:39:56] *** Joins: gggp (~textual@60.10.23.169)
[17:41:02] *** Joins: BillyZane (~BillyZane@152.89.204.151)
[17:41:53] <pycurious> how do i watch a key for value changes in redis-py?
[17:42:13] *** Joins: Guddu (~Guddu@190.84.88.92)
[17:42:29] *** Joins: sn1tch3r (~sn1tch3r@user/sn1tch3r)
[17:42:47] *** Quits: gggp (~textual@60.10.23.169) (Client Quit)
[17:42:49] *** Quits: Cheaterman (~Cheaterma@user/cheaterman) (Ping timeout: 265 seconds)
[17:42:54] *** Quits: realies (~realies@user/realies) (Read error: Connection reset by peer)
[17:43:19] *** Quits: cheater (~Username@user/cheater) (Ping timeout: 265 seconds)
[17:45:14] *** Quits: lethu (~lethu@user/lethu) (Ping timeout: 265 seconds)
[17:46:00] <supakeen> `.watch(key)`.
[17:46:25] *** Quits: blddk (~admin@185.233.252.229) (Quit: ZNC 1.8.2 - https://znc.in)
[17:47:10] *** Joins: lethu (~lethu@user/lethu)
[17:47:24] <supakeen> There's an example directly in the README.
[17:47:47] <supakeen> Or is that not what you mean?
[17:47:58] *** Joins: Wuniu (~Thunderbi@user/wuniu)
[17:48:14] *** Joins: blddk (~admin@185.233.252.229)
[17:48:52] *** Quits: platta (~platta@pool-71-187-23-254.nwrknj.fios.verizon.net) (Ping timeout: 245 seconds)
[17:48:54] <supakeen> If that's not what you need then you can configure redis to send a pubsub message on change to a key(space) and subscribe to that topic.
[17:50:49] *** Quits: fdan (~fdan@192.146.154.3) (Ping timeout: 256 seconds)
[17:53:48] *** Joins: bilb_ono_ (~alexmarsh@ip68-6-90-72.sb.sd.cox.net)
[17:53:54] *** Joins: octav1a (~quassel@173.195.145.98)
[17:55:03] *** Quits: NeilRG (~NeilRG@192.222.196.111) (Remote host closed the connection)
[17:55:17] *** Quits: bilb_ono (~alexmarsh@ip68-6-90-72.sb.sd.cox.net) (Ping timeout: 252 seconds)
[17:55:18] *** bilb_ono_ is now known as bilb_ono
[17:55:22] *** Quits: EvilDMP (~textual@django/moderator/EvilDMP) (Quit: My MacBook has gone to sleep. ZZZzzz…)
[17:56:43] *** Joins: EvilDMP (~textual@django/moderator/EvilDMP)
[17:57:15] *** Quits: Wuniu (~Thunderbi@user/wuniu) (Ping timeout: 260 seconds)
[17:58:32] *** Quits: puff (~user@S0106d4ca6d80a83c.vs.shawcable.net) (Read error: Connection reset by peer)
[17:58:45] *** Joins: puff (~user@S0106d4ca6d80a83c.vs.shawcable.net)
[18:00:17] *** Quits: segfaultbanana (~segfaultb@user/segfaultbanana) ()
[18:00:34] *** Joins: RangerBobVA (~bmaddox@user/rangerbobva)
[18:00:35] *** Joins: Fulgen (znc@mail.maxmitti.tk)
[18:02:16] *** Joins: Shanzem (~Shanzem@86.31.109.147)
[18:02:28] *** Joins: rpkilby (~rpkilby@c-24-20-208-106.hsd1.or.comcast.net)
[18:02:51] *** jean-luc is now known as space-ghost
[18:03:34] *** Quits: ferz (~ferz@93-39-142-17.ip76.fastwebnet.it) (Ping timeout: 252 seconds)
[18:04:04] <bancroft> I'm having a bad brainfart with asyncio awaiting for my tasks https://bpa.st/YMUQ how can I make sure I wait for all my tasks I create with a list?
[18:04:28] <bancroft> *in a for
[18:06:25] *** Quits: hendursa1 (~weechat@user/hendursaga) (Quit: hendursa1)
[18:06:33] *** Joins: ole_ (~ole_@84.46.68.3)
[18:06:39] *** Quits: nyah (~nyah@bcdcb6e3.skybroadband.com) (Quit: leaving)
[18:07:15] *** Joins: Sheilong (uid293653@id-293653.ilkley.irccloud.com)
[18:08:29] *** Joins: hendursaga (~weechat@user/hendursaga)
[18:08:55] *** Quits: rpkilby (~rpkilby@c-24-20-208-106.hsd1.or.comcast.net) (Ping timeout: 260 seconds)
[18:08:59] *** Joins: cheater (~Username@user/cheater)
[18:09:54] *** Joins: nyah (~nyah@bcdcb6e3.skybroadband.com)
[18:12:51] *** Joins: Vornicus (~Vornicus@2603-8000-5d07-7ef0-fdef-e933-acae-0c55.res6.spectrum.com)
[18:13:20] *** Quits: wib_jonas (~wib_jonas@business-37-191-60-209.business.broadband.hu) (Quit: Client closed)
[18:13:37] *** Quits: forgotmynick (uid24625@id-24625.stonehaven.irccloud.com) (Quit: Connection closed for inactivity)
[18:14:27] <jinsun> append the tasks to a taks list instead of assigning to the same variable
[18:14:52] <jinsun> and asyncio.gather them after the loop
[18:14:52] <pycode> hello everybody, i would like to create some @property in my class, is it possible to avoid additional computation if i call sequentially myclass.my_property myclass.my_property myclass.my_property
[18:14:53] <pycode> etc
[18:15:07] <grym> pycode: functools.lru_cache
[18:15:28] <pycode> that method(property) uses some variable i see into __init__ so there is no other reason to compute the same thing again and again
[18:15:31] <pycode> grym, thank you!
[18:15:54] *** Joins: Wuniu (~Thunderbi@user/wuniu)
[18:15:54] <pycode> so @property and @lru_cache i am going to see how that decorator works, thanks
[18:16:13] *** Quits: herjazz (~herjazz@p6758124-ipngn30801marunouchi.tokyo.ocn.ne.jp) (Quit: leaving)
[18:16:16] *** Joins: TranquilEcho (~grom@user/tranquilecho)
[18:16:53] <deniska> there's also functools.cached_property if your python is fresh enough
[18:17:07] <grym> ooOOo
[18:17:27] <pycode> deniska, 3.8
[18:17:30] <grym> pycode: prefer that, then
[18:17:36] <pycode> perfect
[18:17:37] <pycode> ok
[18:17:37] <grym> "Transform a method of a class into a property whose value is computed once and then cached as a normal attribute for the life of the instance. Similar to property(), with the addition of caching. Useful for expensive computed properties of instances that are otherwise effectively immutable."
[18:17:55] <pycode> that's perfect
[18:18:03] *** Quits: Shanzem (~Shanzem@86.31.109.147) (Quit: sudo Shanzem -lol -updoot -karma -gold >/dev/lies)
[18:18:29] *** Joins: ferz (~ferz@93-39-142-17.ip76.fastwebnet.it)
[18:20:17] *** Joins: withered_wolf (~withered_@1437135-v103.1561-static.stchilaa.metronetinc.net)
[18:20:38] *** Joins: trace987 (~trace@ip5f5a6a70.dynamic.kabel-deutschland.de)
[18:20:55] *** Parts: andi_ (~andi@user/andi/x-3467420) (WeeChat 3.2)
[18:20:58] *** Joins: andi_ (~andi@user/andi/x-3467420)
[18:21:31] *** Quits: blddk (~admin@185.233.252.229) (Quit: ZNC 1.8.2 - https://znc.in)
[18:21:37] *** Quits: dld (~davidlowr@2601:197:600:1210:3d0a:b99:963f:cf07) (Ping timeout: 252 seconds)
[18:22:22] *** Joins: dld (~davidlowr@2601:197:600:1210:a0ae:7339:f00b:dfe6)
[18:22:38] *** Joins: odoood (~odoood@2601:c8:c003:a550::3)
[18:23:38] *** Quits: DnzAtWrk (~DnzAtWrk@mobile-access-5673bf-42.dhcp.inet.fi) (Quit: Leaving)
[18:23:48] <bancroft> jinsun thanks, I've had a typo the whole time too, was using ** on the list to try to pass everything to gather which is why I went in the wrong direction and tried to loop create_task
[18:24:11] <bancroft> a single * will do *facepalm*
[18:24:18] *** Joins: blddk (~admin@185.233.252.229)
[18:24:52] *** Joins: ttree (~ttree0@c-73-239-62-159.hsd1.wa.comcast.net)
[18:27:32] <pycode> grym, is that wrong to (eventually) raise an exception using a property?
[18:27:34] <pycode> https://bpa.st/GDUQ <--
[18:27:43] <pycode> as you can see i import a module and put it into a dictioanry
[18:27:56] <pycode> if there something wrong i need to stop execution, of course
[18:28:00] <pycode> but is that wrong?
[18:28:04] *** Joins: Wubull (~Thunderbi@user/wuniu)
[18:28:57] *** Joins: wib_jonas (~wib_jonas@business-37-191-60-209.business.broadband.hu)
[18:29:23] *** Quits: Wuniu (~Thunderbi@user/wuniu) (Ping timeout: 252 seconds)
[18:29:24] *** Wubull is now known as Wuniu
[18:31:02] *** Joins: pyeverything (~pyeveryth@nat-wireless-guest-reg-153-52.bu.edu)
[18:31:22] <grym> pycode: i would not really think of having my getters do work in that way
[18:31:34] <pycode> grym, why?
[18:31:53] *** Quits: pyeverything (~pyeveryth@nat-wireless-guest-reg-153-52.bu.edu) (Read error: Connection reset by peer)
[18:32:08] *** Joins: pyeverything (~pyeveryth@nat-wireless-guest-reg-153-54.bu.edu)
[18:32:29] <jinsun> better do all that work and assign the result to self.rules
[18:32:36] <grym> pycode: i'm boring and i import stuff at the top of a module
[18:32:37] <jinsun> inside the `__init__`
[18:32:51] <grym> jinsun: "but init shouldn't do work", i hear them cry
[18:33:09] <pycode> should i do the job yes or not? :D
[18:33:13] <pycode> *no
[18:33:42] <jinsun> well then assign self.rules = None in init
[18:34:09] <pycode> jinsun, and put self.rules INSIDE THAT METHOD? and maybe can it i do not know, calculate_rules()
[18:34:10] *** Joins: Xaldafax (~xaldafax@cpe-198-72-160-101.socal.res.rr.com)
[18:34:11] *** Joins: pyevery__ (~pyeveryth@dhcp-wifi-8021x-155-41-114-131.bu.edu)
[18:34:12] <pycode> something like that
[18:34:19] <jinsun> hmm no, then the property will be same
[18:34:28] *** Quits: vvdaiwrw (~rvgzuuqp@gateway/tor-sasl/rvgzuuqp) (Quit: vvdaiwrw)
[18:34:30] <pycode> for that reason i used the property
[18:34:35] *** Joins: rpkilby (~rpkilby@c-24-20-208-106.hsd1.or.comcast.net)
[18:35:01] *** Quits: fikran (~fikran@user/fikran) (Ping timeout: 265 seconds)
[18:35:11] <pycode> whats wrong in my codE? ok i shouldimport at the beginning but it is a kind of dinamic import too long to explain..
[18:35:16] *** Quits: atrigent (~atrigent@c-73-69-68-26.hsd1.ma.comcast.net) (Read error: Connection reset by peer)
[18:35:52] *** Quits: julia (~quassel@user/julia) (Ping timeout: 252 seconds)
[18:36:53] *** Joins: fikran (~fikran@user/fikran)
[18:36:57] *** Quits: blddk (~admin@185.233.252.229) (Quit: ZNC 1.8.2 - https://znc.in)
[18:36:57] <pycode> grym, jinsun ?
[18:37:35] *** Joins: DeadTOm (~deadtom@2001:4b98:dc0:41:216:3eff:fe58:44d0)
[18:37:38] *** Quits: pyeverything (~pyeveryth@nat-wireless-guest-reg-153-54.bu.edu) (Ping timeout: 252 seconds)
[18:37:46] *** Joins: Mattiaslndstrm (~Mattiasln@c188-148-207-108.bredband.tele2.se)
[18:38:13] *** Quits: Wuniu (~Thunderbi@user/wuniu) (Ping timeout: 252 seconds)
[18:38:36] *** Joins: atrigent (~atrigent@c-73-69-68-26.hsd1.ma.comcast.net)
[18:38:45] *** Joins: blddk (~admin@185.233.252.229)
[18:39:02] <jinsun> well, technically you can throw inside cached_property, it won't return anythng so it won't be cached, and if you end your program right there then it doesn't even matter
[18:39:39] <pycode> jinsun, no i need to stop so i need to see the exception
[18:39:42] <pycode> hmm
[18:39:47] <pycode>  i do not know
[18:39:52] *** Quits: mefistofeles (~mefistofe@user/mefistofeles) (Ping timeout: 265 seconds)
[18:39:54] <jinsun> but if it throws then I would prefer it to be a method, usually people don't expect property to throw
[18:40:03] <pycode> if i put self.rules inside that method it is like having a property, so what can i do?
[18:40:12] <pycode> jinsun, exactly
[18:40:27] <pycode> jinsun, the "problem" is that i need to use self.rules on other methods too
[18:40:38] <pycode> so i need to save it in a class attribute
[18:40:47] <jinsun> call self.get_rules() to get it
[18:41:00] *** Quits: Mikaela (~sid12355@Feneas/Mikaela) (Ping timeout: 276 seconds)
[18:41:03] <jinsun> and inside get_rules check if self._rules is None or not
[18:41:24] <jinsun> if None then do the work and assing to self._rules
[18:41:30] <jinsun> something like that
[18:41:35] <pycode> ok
[18:42:30] *** Joins: Mikaela (~sid12355@Feneas/Mikaela)
[18:44:17] *** Joins: NeilRG (~NeilRG@192.222.196.111)
[18:44:45] *** Quits: sharksauce (sharksauce@user/sharksauce) (Quit: WeeChat 2.8)
[18:45:04] <pycode> jinsun, maybe i can use lru_cache only
[18:45:18] <pycode> that way i can return rules and other call to rules will be cached
[18:45:31] <pycode> and... i see that i also can get exception having that decorator
[18:45:40] *** Quits: tobybl (~tobybl@189.192.115.87.dyn.plus.net) (Ping timeout: 265 seconds)
[18:46:21] <pycode> i bit ugly that i need to get rules doing  rules = self.rules()
[18:46:41] *** Joins: jvh (~jvh@user/jvh)
[18:46:43] <pycode> i think self.rules is better...but that way i can get exception
[18:47:29] <jinsun> ya get_rules with @lru_cache(), will also be fine
[18:48:09] <jinsun> self.rules() sounds bad, self.rules property or self.get_rules() method
[18:48:19] *** Joins: tobybl_ (~tobybl@189.192.115.87.dyn.plus.net)
[18:48:22] *** Quits: odoood (~odoood@2601:c8:c003:a550::3) (Ping timeout: 245 seconds)
[18:48:49] <pycode> ok
[18:49:19] <jinsun> you can decide to just throw in the property also, it will work, just the behavior will be a bit weird
[18:49:27] <pycode> jinsun, or load_rules() and inside that method i can save all the rules to self.rules
[18:49:55] <pycode> jinsun, it see that @cached_property will not "show" the exception
[18:51:10] <pycode> maybe the "load_rules() solution" that saved to self.rules sounds more "explicit" :)
[18:51:24] *** Joins: jazzy2 (~jaziz@172.58.43.73)
[18:51:51] <jinsun> yeah but you don't want to store the exception in self.rules do you?
[18:51:57] *** Quits: blddk (~admin@185.233.252.229) (Quit: ZNC 1.8.2 - https://znc.in)
[18:52:18] <jinsun> I thought you will try: self.rules and except the Exception and look at it in the except block
[18:52:25] *** Quits: _SKiTZO (~dark@230.89-11-156.nextgentel.com) (Ping timeout: 252 seconds)
[18:53:02] <pycode> jinsun, inside that method as you have seen there is an import...i am importing a module..so if the module does not exists i need to raise an exception and block everything
[18:53:14] <jinsun> but anyway, load_rules way is better than making the property
[18:54:15] <pycode> jinsun, yes i will use: https://bpa.st/E6TQ
[18:54:36] *** Joins: Wuniu (~Thunderbi@user/wuniu)
[18:54:39] *** Joins: PublicWiFi (~PublicWiF@user/publicwifi)
[18:55:22] <pycode> jinsun, the property is fine to avoid load_rules() and load_a() and load_b() etc etc... class.rules class.a class.b is better because if it hasnt been called it will execute it first, but yes load_thing sounds more explicit
[18:55:56] <pycode> if i forgot to call load_thing() i am stupid so the code must stop me :D
[18:56:22] *** Joins: sharksauce (sharksauce@user/sharksauce)
[18:56:47] *** Quits: Xeago (~Xeago@user/xeago) (Ping timeout: 240 seconds)
[18:57:29] *** Quits: iflema (~ian@user/iflema) (Quit: iflema)
[18:58:20] *** Joins: michelem (~Adium@51.154.167.11)
[18:58:32] *** Quits: czuk_cza (~mist@188.147.96.18.nat.umts.dynamic.t-mobile.pl) (Ping timeout: 252 seconds)
[18:58:42] <PublicWiFi> I'm looking to automate some data scraping and this is going to end up with me having like 50ish variables Ill need to populate
[18:58:53] *** Quits: Mattiaslndstrm (~Mattiasln@c188-148-207-108.bredband.tele2.se) (Quit: My MacBook has gone to sleep. ZZZzzz…)
[18:58:57] <PublicWiFi> would a dictionary be a good idea here with this amount of variables? most are float and some are strings
[18:59:32] <pycode> jinsun, https://bpa.st/RQJQ :D
[18:59:37] *** Quits: rpkilby (~rpkilby@c-24-20-208-106.hsd1.or.comcast.net) (Remote host closed the connection)
[19:00:26] *** Joins: rpkilby (~rpkilby@c-24-20-208-106.hsd1.or.comcast.net)
[19:00:28] *** Joins: bfoley (~bfoley@pool-173-48-101-113.bstnma.fios.verizon.net)
[19:00:52] *** Quits: mIk3_08 (~Thunderbi@user/mik3-08/x-2852566) (Quit: mIk3_08)
[19:00:53] *** Joins: ReversePhase (~ReversePh@206-214-242-170.epikip.net)
[19:02:04] *** Quits: pyevery__ (~pyeveryth@dhcp-wifi-8021x-155-41-114-131.bu.edu) (Remote host closed the connection)
[19:03:02] <ReversePhase> Hey crew.   Im doing a program that has 3 main class's   I have my SpashScreen that starts up my application. it runs a QThread that recive a signal.  I have my MainWindow class that it my main GUI.   currently the signal from QThread gets emited to too my SpashScreen, and then my SpashScreen re-emits the signal to my MainGUI.   is there a way to have the QThread emit directly to the mainGUI,
[19:03:02] <ReversePhase> with out having the MainGUI be the one to start the Qthead task?
[19:03:14] *** Joins: slowButPresent (~slowButPr@user/slowbutpresent)
[19:03:39] *** Joins: pyeverything (~pyeveryth@dhcp-wifi-8021x-155-41-114-131.bu.edu)
[19:03:45] *** Quits: Wuniu (~Thunderbi@user/wuniu) (Ping timeout: 260 seconds)
[19:03:51] *** Quits: pyeverything (~pyeveryth@dhcp-wifi-8021x-155-41-114-131.bu.edu) (Remote host closed the connection)
[19:04:06] *** Joins: pyeveryt_ (~pyeveryth@dhcp-wifi-8021x-155-41-114-131.bu.edu)
[19:05:08] *** Quits: rpkilby (~rpkilby@c-24-20-208-106.hsd1.or.comcast.net) (Ping timeout: 252 seconds)
[19:05:11] *** Quits: michelem (~Adium@51.154.167.11) (Quit: Leaving.)
[19:05:38] <The-Compiler> ReversePhase: you can connect Qt's signals from anywhere, so I don't really understand the question (or rather, what exactly is giving you trouble)
[19:05:44] *** Joins: blddk (~admin@185.233.252.229)
[19:06:55] *** Quits: Fiji (~Fiji@user/fiji) (Remote host closed the connection)
[19:07:41] <ReversePhase> The-Compiler: Well my thead does an self.change_pixmap_signal.emit(cv_img) which the SplashScreen picks up
[19:08:08] <ReversePhase> my spashscreen has live_image = QtCore.pyqtSignal(np.ndarray)
[19:08:25] <ReversePhase> can my MainGUI also pick up the live_image ?
[19:10:13] <ReversePhase> https://bpa.st/MIAQ '
[19:10:18] <ReversePhase> is the code
[19:11:17] <The-Compiler> ReversePhase: I don't see why not
[19:11:33] <andi_> can't i search files with .rglob() something like pathlib.Path('.').rglob('main.c')?
[19:12:08] *** Quits: noctavian_ (~noctavian@gateway/tor-sasl/noctavian) (Remote host closed the connection)
[19:12:15] <The-Compiler> andi_: I don't see why not :D
[19:12:23] *** Joins: noctavian (~noctavian@gateway/tor-sasl/noctavian)
[19:12:27] <TML> ReversePhase: I've never used Qt, but my understanding from reading done many years ago was that a signal sends its value to all the slots connected to it
[19:13:01] <The-Compiler> yep
[19:13:02] <ReversePhase> TML: But how can i connect my Second window too the same slot ?
[19:13:16] <The-Compiler> ReversePhase: just like you connected the first slot
[19:13:49] <nedbat> PublicWiFi: a dict could help, or a class
[19:14:05] <ReversePhase> The-Compiler: so I have self.Videothread.change_pixmap_signal.connect(self.update_image) in my SplashScreen...
[19:14:13] <PublicWiFi> dope, ill loook and see which is a better fit!
[19:14:16] <PublicWiFi> nedbat: ty
[19:14:18] <ReversePhase> if I put self.Videothread.change_pixmap_signal.connect(self.update_image) under KioskGUI: I get an error
[19:14:45] *** Joins: p-i- (~Ohmu@mx-ll-223.206.69-159.dynamic.3bb.co.th)
[19:15:04] *** Quits: LuksNuke (~LuksNuke@2001:7e8:c066:6200:be85:8d95:5d9:f9da) (Ping timeout: 252 seconds)
[19:15:08] <The-Compiler> ReversePhase: well yes, you'll need to store a reference to the video thread somehow, or have another way to access it
[19:15:30] <The-Compiler> ReversePhase: I suppose splash.VideoThread.change_pixmap_signal would work
[19:15:39] <ReversePhase> Thats where im having the issue,  how to i referance the video thread ?
[19:15:58] *** Joins: mrgz (~mrgz@201-42-0-191.dsl.telesp.net.br)
[19:16:34] *** Joins: LuksNuke (~LuksNuke@2001:7e8:c066:6200:be85:8d95:5d9:f9da)
[19:16:43] <ReversePhase> Bingo!
[19:16:52] <ReversePhase>  it was the splash.
[19:16:55] <ReversePhase> that i was missing....
[19:18:20] *** Quits: p-i-_ (~Ohmu@mx-ll-223.206.69-159.dynamic.3bb.co.th) (Ping timeout: 252 seconds)
[19:18:21] <ReversePhase> Thanks guys, i knew i was missing somthing obvious
[19:18:54] <Gurkenglas> Can I say "My Class implements Callable iff its first type argument implements Callable"?
[19:19:29] *** Quits: jazzy2 (~jaziz@172.58.43.73) (Ping timeout: 265 seconds)
[19:19:57] <andi_> The-Compiler: oh my bad, the search was complete, but no files were found :)
[19:21:44] *** Quits: apollo13 (apollo13@django/moderator/apollo13) (Quit: ZNC - http://znc.in)
[19:23:55] *** Joins: apollo13 (apollo13@django/moderator/apollo13)
[19:24:16] *** Joins: Roey (~Roey@user/Roey)
[19:24:24] *** Joins: mefistofeles (~mefistofe@user/mefistofeles)
[19:25:18] <catern> dear lazyirc, is there a nice way to say "these two assertions will either both fail or both pass" in unittest? right now I'm just doing assertEqual on the bools but that doesn't print nice error messages
[19:25:46] <The-Compiler> catern: consider using pytest instead? ;)
[19:25:52] *** Quits: freeman_h (~freeman_h@2a02:c7f:fc54:ba00:d181:1ba9:a239:e1e9) (Ping timeout: 245 seconds)
[19:26:49] <catern> The-Compiler: does pytest print a nice error message for, e.g., assert (x in ["foo", "bar"]) == (y == "baz")
[19:27:10] <bjs> catern: define "nice"
[19:27:26] <catern> bjs: printing the values of x and y at least
[19:27:43] *** Joins: tg (~tg@rockylinux/infra/tg)
[19:27:46] <The-Compiler> catern: sure, it'll print all values which are part of the assert statement
[19:27:58] <ThiefMaster> pypi having any problems atm? i just published a package but the url for that version 503s.. https://pypi.org/project/indico/3.0.1/
[19:28:02] *** Quits: cluelessperson (~cluelessp@user/cluelessperson) (Quit: ZNC - https://znc.in)
[19:28:13] <bjs> catern: sure it'll do that
[19:28:27] *** Joins: cluelessperson (~cluelessp@user/cluelessperson)
[19:29:48] <bjs> catern: e.g. this is what i see with pytest -l https://bpa.st/WWEQ
[19:30:20] *** Joins: freeman_h (~freeman_h@2a02:c7f:fc54:ba00:d181:1ba9:a239:e1e9)
[19:30:32] <bjs> catern: it shows you that the lhs of the == was True, and the rhs was False, and that x was "foo" and that y was "bar".
[19:30:50] *** Joins: pro_z (~pro_z@37.214.61.236)
[19:31:03] <catern> hm, I guess that is kind of compelling, but also I guess unittest could do that too
[19:32:02] <The-Compiler> projects rarely use unittest.py FWIW
[19:32:04] <catern> anyway, I'm not switching to pytest (because I don't want to, please respect my wishes), so some other solution would be nice
[19:32:07] <Gurkenglas> I have classes UnboundLens[S, T, A, B] and BoundLens[T, A, B] and StateFunction[S, T] and I'd like to make them subclasses of Diagram[[S,T],[A,B]] and Diagram[[T],[A,B]] and Diagram[[S,T],[]] respectively. Problem is, StateFunction[S,T] is already a subclass of Callable[[S],T]. Can I also make Diagram[[S,T],[]] a subclass of Callable[[S],T]?
[19:33:18] <nedbat> catern: the way to do it in unittest is probably to write a new helper method:  self.assertTwoAssertsAreTheSame (need a better name)
[19:33:37] *** Joins: LiftLeft (~LiftLeft@216-26-118-34.dynamic.nelson.airstreamcomm.net)
[19:33:45] <The-Compiler> catern: I'll leave you alone after this, but note that pytest should be able to run your existing tests, so there's nothing you need to change in your test code
[19:34:21] <nedbat> The-Compiler: except the assert
[19:34:34] <The-Compiler> nedbat: yes, I mean for other existing test code
[19:34:47] <ThiefMaster> the unpythonic camelCancer in unittest should be reason enough to not use it :D
[19:34:49] <gitesh> when `class` is used?
[19:35:16] <gitesh> when we have attributes i think right
[19:35:54] *** Quits: mexen (uid495612@user/mexen) (Quit: Connection closed for inactivity)
[19:36:19] *** Joins: vvdaiwrw (~rvgzuuqp@gateway/tor-sasl/rvgzuuqp)
[19:36:22] *** Quits: thurs8 (~thurs@ip68-225-209-147.ph.ph.cox.net) (Quit: The Lounge - https://thelounge.chat)
[19:36:40] <grym> gitesh: `class` is used to make classes the way `def` is used to make functions/methods
[19:37:14] *** Quits: seoul_man (~meh@user/seoul-man/x-5066766) (Remote host closed the connection)
[19:37:16] <gitesh> when class is used?
[19:37:19] <catern> nedbat: yeah, hm, just a bit tricky to get a high-quality error message
[19:37:43] <nedbat> catern: the advantage of writing your own helper is you can carefully craft the message
[19:38:12] <catern> nedbat: sure, just thinking about how to do that generically
[19:38:30] <nedbat> catern: do you find you need this style of double assert often?
[19:39:46] *** Joins: lint_coder (~lint_code@2409:4073:4e9b:cb69:998b:560a:7cac:e67d)
[19:39:53] <catern> nedbat: in certain use cases, all the time; in particular I'm testing some code which translates one format into another, and I want to assert that if something is present in the original, then it's present in the translation; and if it's not present in the translation, then it's not present in the original
[19:39:57] *** Joins: Xeago (~Xeago@user/xeago)
[19:40:30] <catern> naturally I could write that out as four lines with if statements, but it's more naturally equality in this domain
[19:40:48] <nedbat> catern: then self.assertSameContainment(needle1, haystack1, needle2, haystack2) might be best.
[19:40:48] <bjs> gitesh: when you want to make your own classes, you use the `class` keyword.
[19:41:26] *** Quits: ttree (~ttree0@c-73-239-62-159.hsd1.wa.comcast.net) (Ping timeout: 252 seconds)
[19:41:38] <bjs> gitesh: you might want to make your own classes when you want to build your own objects, rather than using the built-in ones you might want to put them together into a bigger object,  and so that's when you would use `class`.
[19:42:07] <catern> Gurkenglas: how are you even making your own class like Diagram[list_of_types, list_of_types]? I don't think passing a list of types to a generic is a user-accessible feature, I think you need a mypy plugin (but I'd be happy to hear otherwise)
[19:42:10] *** Joins: ttree (~ttree0@c-73-239-62-159.hsd1.wa.comcast.net)
[19:42:45] <Gurkenglas> i didnt do it yet, i assumed it would be possible, after all Callable exists
[19:43:03] *** Quits: CodeGeek (~codegeek@about/java/CodeGeek) (Quit: Connection reset by beer)
[19:43:15] <catern> Gurkenglas: yeah, tragically Callable is a built-in which you couldn't define yourself - I guess https://www.python.org/dev/peps/pep-0646/ is what you would need
[19:43:41] *** Joins: Wuniu (~Thunderbi@user/wuniu)
[19:43:52] <gitesh> bjs: okok
[19:43:55] <gitesh> thanks
[19:43:56] <catern> Gurkenglas: unless you don't actually need a variable number of type arguments
[19:43:59] *** Joins: CodeGeek (~codegeek@about/java/CodeGeek)
[19:44:29] *** Joins: dumptrucktaco (~dumptruck@pool-108-28-60-86.washdc.fios.verizon.net)
[19:44:38] *** Joins: hnOsmium0001 (uid453710@id-453710.stonehaven.irccloud.com)
[19:45:52] *** Quits: lint_coder (~lint_code@2409:4073:4e9b:cb69:998b:560a:7cac:e67d) (Quit: Leaving)
[19:48:01] <Ennea> using tkinter, i have a frame i put into another frame. i place that child frame via child.place(x=0). querying its x via child.winfo_x() returns 1. am i missing anything?
[19:48:22] *** Parts: homura (root@user/homura) ()
[19:48:32] <Ennea> it's also definitely 0 visually, but winfo_x() always returns the actual x + 1, no matter where exactly i put this thing
[19:52:08] *** Quits: puff (~user@S0106d4ca6d80a83c.vs.shawcable.net) (Read error: Connection reset by peer)
[19:52:22] *** Joins: puff (~user@S0106d4ca6d80a83c.vs.shawcable.net)
[19:55:07] *** Joins: ska (~ska@user/ska)
[19:55:59] <ska> What is the standard way to deal with code coverage? We're using CodeCov in github but its a PITA.
[19:56:22] <nedbat> ska: what is difficult about it?
[19:56:33] *** Joins: qlixed (~qlixed@181.44.129.13)
[19:56:35] <Ennea> ah... my parent frame has a border. i guess _that_ is the reason winfo_x() returns 1 instead of 0
[19:56:37] <ska> nedbat: commercial accounting...
[19:56:49] <nedbat> ska: i don't know what that means?
[19:57:07] <Ennea> i also love how i probably can't ever expect any answers to tkinter questions in here :D
[19:57:13] <ska> nedbat: We don't have enought accounts, and why not just use a standard python utility?
[19:57:30] <nedbat> ska: CodeCov uses coverage.py, which is the standard utility.
[19:57:51] <nedbat> ska: CodeCov provides a web interface, historical data, and delta statistics
[19:58:02] <ska> nedbat: doesn't it make sense to just use coverage.py natively?
[19:58:06] <nedbat> ska: sure.
[19:58:20] <nedbat> ska: i was just trying to understand more about your situation.
[19:59:31] *** Joins: rpkilby (~rpkilby@c-24-20-208-106.hsd1.or.comcast.net)
[19:59:40] <ska> nedbat: we're a small team, and we don't have a commercial license, so we're constantly juggling accounts to stay under the 5-user limit, but I don't think we need all the bells and whistles of CodeCov anyway.. Just my inner zen .
[19:59:51] *** Joins: georgios (~georgios@user/georgios)
[20:00:07] <jjhoo> $$$
[20:00:38] <jjhoo> oops... accidental enter
[20:00:47] <nedbat> ska: ok.  coverage.py can give you local HTML reports.
[20:01:05] *** Quits: Xeago (~Xeago@user/xeago) (Quit: ZNC - https://znc.in)
[20:01:24] *** Joins: jmiehe (~Thunderbi@user/jmiehe)
[20:01:29] <nedbat> (my IRC client underlines coverage.py unless I type it as coverage․py )
[20:01:45] *** Joins: thiras (~thiras@user/thiras)
[20:01:51] *** Joins: Xeago (~Xeago@user/xeago)
[20:02:02] <Ennea> probably thinks it's a link ;)
[20:02:07] *** Quits: LuksNuke (~LuksNuke@2001:7e8:c066:6200:be85:8d95:5d9:f9da) (Ping timeout: 245 seconds)
[20:02:23] <Ennea> hexchat does, too, but only underlines it on hover
[20:02:36] <nedbat> Ennea: indeed, since .py is the country TLD for Paraguay
[20:02:39] *** Quits: harpia (~harpia@58.148.205.168.dynamic.vibefibra.com.br) (Quit: harpia)
[20:02:42] *** Joins: imakestuff (~imakestuf@197.156.111.180)
[20:02:45] <Ennea> well, TIL
[20:03:01] <Ennea> i just expected shoddy link parsing, not a valid TLD :)
[20:03:26] <gitesh> how should I visualize class and subclass , do you have a diagram or graph like thing?
[20:04:01] *** Quits: pycode (~pycode@2001:b07:5d28:551:fff5:80fb:c4ae:a0e7) (Ping timeout: 252 seconds)
[20:04:56] <grym> gitesh: more like a venn diagram than a graph, ideallyh
[20:05:06] <jmiehe> currently working through the Flask tutorial: https://github.com/pallets/flask/tree/main/examples/tutorial/flaskr.
[20:05:06] <jmiehe> the main Flask object is created using flaskr.__init__:create_app. Can I refactor the `def hello()` into e.g. flaskr.hello but still use the @app.route() decorator?
[20:05:59] <jmiehe> or do I need to `from flaskr.hello import hello` and register it manually?
[20:09:22] <bjs> gitesh: visualize how?
[20:09:32] *** Joins: platta (~platta@pool-71-187-23-254.nwrknj.fios.verizon.net)
[20:11:27] *** Joins: white_shadow (~white_sha@user/white-shadow/x-1132694)
[20:11:45] *** Joins: seoul_man (~meh@user/seoul-man/x-5066766)
[20:11:57] *** Joins: blackout69 (~blackout6@net-31-156-75-64.cust.vodafonedsl.it)
[20:12:14] *** Joins: matsaman (~matsaman@user/matsaman)
[20:13:11] *** Joins: LuksNuke (~LuksNuke@2001:7e8:c066:6200:be85:8d95:5d9:f9da)
[20:14:36] *** Joins: Sky_Net (~Sky_Net@176.14.213.85)
[20:17:42] *** Quits: Asmodee[T] (~Asmodee@gateway/tor-sasl/asmodee) (Remote host closed the connection)
[20:17:43] *** Quits: hendursaga (~weechat@user/hendursaga) (Remote host closed the connection)
[20:17:46] *** Quits: jarthur (~jarthur@2603-8080-1540-002d-b453-a897-4f94-54c0.res6.spectrum.com) (Ping timeout: 252 seconds)
[20:18:06] *** Joins: Asmodee[T] (~Asmodee@gateway/tor-sasl/asmodee)
[20:18:07] *** Joins: hendursaga (~weechat@user/hendursaga)
[20:18:56] *** Joins: darksun (~darksun@user/darksun)
[20:19:01] *** Joins: ub (~Thunderbi@178.115.77.119.wireless.dyn.drei.com)
[20:19:43] *** Joins: FFY00 (~FFY00@archlinux/trusteduser/ffy00)
[20:20:39] *** Quits: wib_jonas (~wib_jonas@business-37-191-60-209.business.broadband.hu) (Quit: Client closed)
[20:21:05] *** Joins: jarthur (~jarthur@2603-8080-1540-002d-99ef-1e4e-a8ff-fad3.res6.spectrum.com)
[20:21:05] <gitesh> what inheritance does it inherit all the instance variables and methods
[20:21:42] *** Quits: Wuniu (~Thunderbi@user/wuniu) (Quit: I'm tired, have a good time!)
[20:21:42] <jvh> jmiehe, you could define hello() with the route decorator inside create_app()
[20:21:48] <theprophet> gitesh i explained that to you , you already forgot?
[20:21:51] <grym> gitesh: if Dog is a well-behaved subclass of Animal, then anywhere you currently use Animal in your code, you must also be able to use Dog
[20:22:43] *** ub is now known as ubert
[20:23:14] <grym> (there's a fancy name for that observation, but i don't know if it matters)
[20:23:59] <hodapp> Liskov substitution principle
[20:25:02] <grym> that's the one, yes
[20:25:27] *** Quits: mozgalom (~mozgalom@IPnet-gw.157.157.97.111.simnet.is) (Quit: My MacBook has gone to sleep. ZZZzzz…)
[20:25:32] <bjs> gitesh: you can think of it as copying everything into the sub-class. Like how you can think of an instance as copying all the methods into the instance.  (Although as I've said earlier Python doesn't actually copy,  and that this means things get shared between classes/objects)
[20:26:42] <gitesh> there is no such thing like instance method? there is only class method right?
[20:27:07] *** Quits: cheater (~Username@user/cheater) (Ping timeout: 252 seconds)
[20:27:33] <grym> i like to think of a subclass as a strict superset of its parent(s).  a subclass can do everything its parent(s) can do, as well as probably some other stuff that none of its parent(s) can do.  Where this metaphor breaks down, it is a good time to reexamine your object model and see if you've made some decisions that have lead you astray in how you're modeling your problem with a class inhertiance system
[20:28:06] *** Quits: bfoley (~bfoley@pool-173-48-101-113.bstnma.fios.verizon.net) (Quit: My MacBook has gone to sleep. ZZZzzz…)
[20:28:11] *** Quits: canton7 (canton7@about/csharp/canton7) (Quit: ZNC - http://znc.in)
[20:29:09] <jinsun> gitesh: no, instance method is actually the default, you have to make classmethod explicitly with @classmethod
[20:29:52] *** Quits: jab416171 (~jab416171@c-174-52-53-66.hsd1.ut.comcast.net) (Ping timeout: 252 seconds)
[20:30:52] <gitesh> jinsun: but when an instance method is searched , it is found in class object, isn't it?
[20:31:02] <gitesh> that's why all instance methods are class methods
[20:31:02] *** Joins: canton7 (canton7@about/csharp/canton7)
[20:32:28] *** Joins: gggp (~textual@60.10.23.169)
[20:32:59] <nedbat> gitesh: i see what you are saying, but those terms will be confusing.
[20:33:10] <nedbat> gitesh: you are right: methods are on the class.
[20:33:43] <jinsun> now I am not sure what definitions of "class method" you are using
[20:34:19] <gitesh> jinsun: I'm saying instance method a class method
[20:34:31] <nedbat> gitesh: methods are attributes of the class.  There are two kinds of methods: instance methods (which get passed the instance as self), and classmethods, which get passed the class as cls).
[20:34:43] <gitesh> I don't know yet @classmethod , I ahven't learn that stuff yet jinsun
[20:35:03] *** Joins: jab416171 (~jab416171@c-174-52-53-66.hsd1.ut.comcast.net)
[20:35:05] <theprophet> i dont know if this is neccessary here but, gitesh methods and functions are same thing.
[20:35:22] <bjs> gitesh: @classmethod is something different to what we normally mean when we say "method"
[20:35:25] <gitesh> theprophet: yes i know that
[20:36:33] *** Quits: Meteorhead (~Meteorhea@165.225.21.40) (Quit: Client closed)
[20:37:20] <gitesh> ok so when instance is passed as to self it's instance method and when class is passed (which i don't know that stuff) is called class methods
[20:37:42] <gitesh> thanks nedbat
[20:38:15] <theprophet> gitesh ok so, when you define a method inside the class  and you create object which is using that class method that object is called instance. also self is a object itself. object of the class.
[20:38:40] *** Quits: rama (~rama@c-24-130-92-222.hsd1.ca.comcast.net) (Ping timeout: 252 seconds)
[20:39:03] <gitesh> is instance method also a instance variable?
[20:39:11] <theprophet> yes
[20:39:27] *** Joins: Betal (~Betal@user/betal)
[20:39:35] <gitesh> theprophet: yes
[20:39:46] *** Quits: LuksNuke (~LuksNuke@2001:7e8:c066:6200:be85:8d95:5d9:f9da) (Ping timeout: 252 seconds)
[20:40:02] <theprophet> because that method goes to the object you create out of the class
[20:40:33] <gitesh> theprophet: yes but it doens't go really, that was my objection
[20:40:51] <gitesh> s/really/actually
[20:41:11] <theprophet> what you mean it does not go?
[20:42:33] *** Joins: LuksNuke (~LuksNuke@2001:7e8:c066:6200:be85:8d95:5d9:f9da)
[20:44:01] <gitesh> theprophet: actually it calls method which is in class object that in instance
[20:44:08] <gitesh> *than
[20:44:08] *** Quits: pathos (~pathos@169-1-247-122.ip.afrihost.co.za) (Ping timeout: 252 seconds)
[20:44:11] *** Joins: Alphare (~Alphare@163-172-8-17.rev.poneytelecom.eu)
[20:44:26] <theprophet> everything is object in python bro
[20:44:43] <gitesh> theprophet: class is like a factory class has functions/methods
[20:45:01] <gitesh> theprophet: when you create a class you create a factor in object space
[20:45:05] <gitesh> *factory
[20:45:14] *** Quits: fikran (~fikran@user/fikran) (Ping timeout: 252 seconds)
[20:45:31] <theprophet> gitesh you make this 100x times complicated than it is already xD
[20:45:51] *** Joins: pathos (~pathos@169-1-247-122.ip.afrihost.co.za)
[20:45:54] <Alphare> Hi. The presence of the most basic pyproject.toml to my project break `pip install --global-option --my-option`
[20:46:05] <Alphare> the build option trigger the build for some rust extensions
[20:46:37] <gitesh> I feel like creating subclass of class is creating sub-function of a function
[20:46:41] <Alphare> now it's trying to build a wheel (why? it's supposed to be disabled with build-time options) and it's skipping the rust build altogether
[20:46:56] <theprophet> @gitesh
[20:47:02] *** Joins: bfoley (~bfoley@pool-173-48-101-113.bstnma.fios.verizon.net)
[20:47:04] <theprophet>  thats the idea in iheritance yes
[20:47:06] *** Joins: fikran (~fikran@user/fikran)
[20:47:07] <Alphare> well, not true about the "most basic" part, I have `build-backend = "setuptools.build_meta"`
[20:47:18] <bancroft> I have a problem trying to run the same asyncio code on different platforms https://bpa.st/YT6A so it works on macOS but not on windows and I don't know why
[20:47:40] *** Quits: nickel8448 (~rahulwadh@147.80.76.34.bc.googleusercontent.com) (Ping timeout: 240 seconds)
[20:48:22] <gitesh> theprophet: ok that's good
[20:48:23] <nedbat> theprophet: "everything is an object" is both true, and confusing when trying to explain how classes and objects relate.
[20:48:24] *** Parts: dumptrucktaco (~dumptruck@pool-108-28-60-86.washdc.fios.verizon.net) ()
[20:48:44] *** Joins: cheater (~Username@user/cheater)
[20:48:45] *** Quits: thiras (~thiras@user/thiras) (Ping timeout: 260 seconds)
[20:49:20] <theprophet> nedbat i explained to him how classes work. i also specified the difference between everything is object and the class object. but he clearly does not care about that.
[20:49:46] <gitesh> well, I'm about finishing my study/learning python in like 5-7 days. I want to know how python is less worth than java.
[20:49:53] <nedbat> theprophet: I appreciate that you are helping, i didn't mean for you to stop.
[20:50:20] <nedbat> gitesh: what do you mean, "less worth"?
[20:50:36] <gitesh> nedbat: that it can do less job than java
[20:50:51] <nedbat> gitesh: python is not less powerful than java
[20:50:55] <gitesh> like java does polymorphism, encaspulation and etc
[20:51:06] <gitesh> other than just inheritance
[20:51:13] *** Quits: rpkilby (~rpkilby@c-24-20-208-106.hsd1.or.comcast.net) (Remote host closed the connection)
[20:51:16] <nedbat> gitesh: python does all of those things too.  It just does it more flexibly.
[20:51:29] <theprophet> wow
[20:51:33] <gitesh> and many people also does say  "python is easy, "python is easy"
[20:51:38] <HurricaneHarry> java just sucks
[20:51:38] <nedbat> gitesh: different languages offer different solutions to the same problems.
[20:51:43] <nedbat> HurricaneHarry: no need for that.
[20:51:48] *** Joins: rpkilby (~rpkilby@ec2-34-252-84-235.eu-west-1.compute.amazonaws.com)
[20:51:54] <gitesh> nedbat: ok
[20:52:20] <theprophet> gitesh, everything you said about java python has it.
[20:52:23] *** Joins: FluffyMask (~masque@user/fluffymask)
[20:52:57] *** Quits: Pickchea (~private@user/pickchea) (Remote host closed the connection)
[20:52:58] <gitesh> people say "python is easy" But I'M LEARNING I WANT TO
[20:53:01] *** Joins: mozgalom (~mozgalom@194.144.47.113)
[20:53:04] *** Quits: white_shadow (~white_sha@user/white-shadow/x-1132694) (Quit: Leaving)
[20:53:23] <mathsboy> //sdc
[20:53:25] <theprophet> python is easy compared to other languages like C++
[20:53:34] *** Quits: tm007 (uid287041@id-287041.highgate.irccloud.com) (Quit: Connection closed for inactivity)
[20:54:08] *** Joins: p-i-_ (~Ohmu@223.206.69.159)
[20:54:19] *** Parts: mathsboy (~user@2001:1c02:2b25:5c00:5420:4472:cd85:2912) (ERC (IRC client for Emacs 27.2))
[20:54:56] *** Joins: fengshaun (~fengshaun@S0106bc9b6886e536.cg.shawcable.net)
[20:56:33] <bjs> gitesh: Python has ways to do all the same things, and for some of the things you mentioned Python has the same features too
[20:57:20] *** Quits: p-i- (~Ohmu@mx-ll-223.206.69-159.dynamic.3bb.co.th) (Ping timeout: 252 seconds)
[20:57:31] <bjs> gitesh: e.g. polymorphism and encapsulation Python has too and with pretty much exactly the same features as Java...
[20:58:33] *** Joins: rpkilby_ (~rpkilby@c-24-20-208-106.hsd1.or.comcast.net)
[20:58:47] <gitesh> bjs: ok
[20:59:16] <eb0t> hey is the jupyter environment worth setting up on debian
[20:59:21] <eb0t> or is there something better
[20:59:42] <nedbat> eb0t: it depends what you want to do
[20:59:46] <grym> eb0t: if you like notebooks, that's the one to use; i'd install it in a venv, of course
[20:59:51] <bjs> gitesh: e.g. Java and Python both provide encapsulation with classes,  both languages let you make classes that contain ("encapsulate") other data.
[20:59:55] *** Quits: Norore (~weechat@balder.ens.fr) (Quit: WeeChat 1.9.1)
[21:00:13] <eb0t> im writing a web scraper...and my normal environment is just vim and tmux
[21:00:32] <eb0t> i think there is something called pycharm or jupyter
[21:00:38] <grym> eb0t: i use notebooks/repls for exploratory coding and debugging; when i want to write a program, i don't use them
[21:00:49] <bjs> gitesh: Python and Java both have polymorphism of various kinds, e.g. `def f(animal): animal.make_noise()` works for any animal-like object that supports the "make noise" interface.
[21:00:49] <grym> eb0t: pycharm is an IDE; jupyter is a notebook server protocol
[21:00:59] *** Joins: markb1 (~markb1@2600:1700:eb40:7ecf:c568:8b7d:c93b:5c45)
[21:01:18] <eb0t> ah ok that clarifies things a little
[21:01:20] <eb0t> thanks a lot
[21:01:35] *** Joins: thurs8 (~thurs@ip68-225-209-147.ph.ph.cox.net)
[21:01:37] <grym> cheers
[21:01:57] *** Quits: RachelThePotato (~Moosadee@136.32.155.193) (Ping timeout: 265 seconds)
[21:02:19] *** Quits: rpkilby (~rpkilby@ec2-34-252-84-235.eu-west-1.compute.amazonaws.com) (Ping timeout: 252 seconds)
[21:02:52] *** Quits: gggp (~textual@60.10.23.169) (Ping timeout: 252 seconds)
[21:03:24] *** Joins: zebrag (~chris@user/zebrag)
[21:04:52] *** Quits: fengshaun (~fengshaun@S0106bc9b6886e536.cg.shawcable.net) (Quit: bibi!)
[21:04:56] *** Joins: gggp (~textual@123.113.176.46)
[21:06:33] *** Joins: nomic (~nomic@185.192.69.188)
[21:07:08] *** Quits: thurs8 (~thurs@ip68-225-209-147.ph.ph.cox.net) (Quit: The Lounge - https://thelounge.chat)
[21:08:18] *** Joins: Seiryuu (~Seiryuu@ip174-103-176-143.adsl2.static.versatel.nl)
[21:08:27] *** Quits: DXR (~lyrical@77.49.61.174.dsl.dyn.forthnet.gr) (Ping timeout: 245 seconds)
[21:09:01] *** Quits: imakestuff (~imakestuf@197.156.111.180) (Remote host closed the connection)
[21:10:02] *** Joins: fdan (~fdan@192.146.154.3)
[21:14:25] *** Quits: shad (~shad@user/shad) (Quit: WeeChat 3.0)
[21:15:10] *** Joins: Akuli (~Akuli@87-94-109-224.bb.dnainternet.fi)
[21:15:31] *** Quits: zln (~zln@c80-217-230-193.bredband.tele2.se) (Ping timeout: 252 seconds)
[21:16:41] *** Joins: thurs8 (~thurs@ip68-225-209-147.ph.ph.cox.net)
[21:18:14] *** Quits: deepy (deepy@user/deepy) (Ping timeout: 252 seconds)
[21:19:48] *** Joins: magla (~gelignite@55d4c46b.access.ecotel.net)
[21:19:48] *** Quits: tvm_ (~tom@ip-89-103-96-164.net.upcbroadband.cz) (Quit: Lost terminal)
[21:20:15] *** Quits: freeman_h (~freeman_h@2a02:c7f:fc54:ba00:d181:1ba9:a239:e1e9) (Ping timeout: 260 seconds)
[21:20:34] *** Quits: rany (~rany@user/rany) (Quit: ZNC 1.8.2+deb2+b1 - https://znc.in)
[21:23:25] *** Joins: rany (~rany@user/rany)
[21:26:48] *** Quits: ole_ (~ole_@84.46.68.3) (Quit: Connection closed)
[21:27:08] *** Quits: NeilRG (~NeilRG@192.222.196.111) (Remote host closed the connection)
[21:30:10] *** Quits: wolfgang (~wolfgang@101.174.6.197) (Remote host closed the connection)
[21:30:12] *** Joins: brylie (~Thunderbi@81-197-199-179.elisa-laajakaista.fi)
[21:30:20] *** LSD is now known as acidsys
[21:30:41] *** Quits: djhankb (~djhankb@208.113.164.68) (Read error: Connection reset by peer)
[21:30:42] *** Joins: zamba (~marius@5.226.162.54)
[21:31:16] *** Joins: djhankb (~djhankb@208.113.164.68)
[21:31:34] *** Quits: gggp (~textual@123.113.176.46) (Quit: My MacBook has gone to sleep. ZZZzzz…)
[21:31:54] *** Joins: besnn (~besnn@user/besnn)
[21:32:02] *** Joins: deepy (deepy@user/deepy)
[21:34:11] *** Quits: rany (~rany@user/rany) (Quit: ZNC 1.8.2+deb2+b1 - https://znc.in)
[21:34:59] *** Joins: Lando-SpacePimp (~Lando@user/lando-spacepimp)
[21:36:50] *** Joins: rany (~rany@user/rany)
[21:37:18] *** Quits: EvilDMP (~textual@django/moderator/EvilDMP) (Quit: My MacBook has gone to sleep. ZZZzzz…)
[21:38:04] <theprophet> wow things to know about dictionaries is never ending.
[21:38:39] <mefistofeles> theprophet: plase share what you've learned
[21:38:48] <mefistofeles> *please
[21:39:38] <theprophet> mefistofeles oh wow. well. you can make nest lists, you can nest dictionaries in dictionary. ,,, thats one thing
[21:39:39] *** Quits: puff (~user@S0106d4ca6d80a83c.vs.shawcable.net) (Read error: Connection reset by peer)
[21:39:52] *** Joins: puff (~user@S0106d4ca6d80a83c.vs.shawcable.net)
[21:40:02] *** Quits: damonlynch (~ngaio@2601:245:c700:2c06:7891:42e2:71d2:bf03) (Quit: Leaving)
[21:41:01] *** Quits: FastJack (~fastjack@b2b-78-94-22-14.unitymedia.biz) (Remote host closed the connection)
[21:41:05] <theprophet> another thing is, every thing inside dictionary has this  --> :  <-- means, whats on the left side is key and whats on the right side is value .
[21:41:07] *** Quits: metah4ck3r (~meta@user/metah4ck3r) (Ping timeout: 265 seconds)
[21:41:24] <yitz> A dict can contain *any* object
[21:41:29] <theprophet> for exmaple {key:value}
[21:41:33] <grym> yitz: ... as a value
[21:41:49] <yitz> ... on the RHS of :, yes. It must be hashable on the LHS
[21:42:36] *** Quits: jdmark (~jdmark@67.8.137.130) (Quit: Leaving)
[21:43:00] *** Joins: metah4ck3r (~meta@user/metah4ck3r)
[21:43:02] <theprophet> you can have empty list like this empty_list = [] ,, later make dictionary list and everything inside dict list is possible to nest in list[]
[21:43:54] *** Quits: tobybl_ (~tobybl@189.192.115.87.dyn.plus.net) (Remote host closed the connection)
[21:44:04] <theprophet> well bassicaly everything can be fit in dictionary lists
[21:44:09] <theprophet> lol
[21:44:12] *** Joins: Guest5081 (~Guest50@182.253.132.209)
[21:44:36] *** Joins: pretty_dumm_guy (trottel@gateway/vpn/protonvpn/prettydummguy/x-88029655)
[21:44:47] <Guest5081> Hello
[21:44:48] <phy1729> You can even put a dictionary in itself. d = {}; d['d'] = d     (Though please don't do this.)
[21:44:54] <matsaman> hi Guest5081
[21:45:01] *** Quits: varaindemian (uid73404@id-73404.ilkley.irccloud.com) (Quit: Connection closed for inactivity)
[21:45:04] <matsaman> what's your problem with django
[21:45:12] <theprophet> yea but its possible tho phy1729
[21:45:30] *** Joins: dcaro_ (~dcaro@user/dcaro)
[21:45:50] <Guest5081> I'm trying to create a model for Indonesia address
[21:45:57] *** Quits: Dotz0cat (~Dotz0cat@h119.237.31.71.dynamic.ip.windstream.net) (Ping timeout: 245 seconds)
[21:46:09] <bjs> phy1729: wait till you find out about `d = defaultdict(lambda: d)`
[21:46:19] *** Joins: rama (~rama@c-24-130-92-222.hsd1.ca.comcast.net)
[21:46:29] <theprophet> you can also, make dict list and litteraly print only key part or the value part, whichever you want. or both.
[21:46:43] <Guest5081> The address will be Province > City > District
[21:46:51] <bjs> theprophet: yep,  they're very useful structures with lots of cool features
[21:46:56] <theprophet> you return single elements or multiple elements from dict list
[21:47:00] <theprophet> you can*
[21:47:01] <Guest5081> Sorry let me phrase my question as 1 long question
[21:48:02] <theprophet> should i stop ?  mefistofeles or you want more?
[21:48:13] *** Joins: damonlynch (~ngaio@2601:245:c700:2c06:f9ca:7b49:9cc6:4727)
[21:48:47] *** Quits: dcaro (~dcaro@user/dcaro) (Ping timeout: 245 seconds)
[21:48:47] *** dcaro_ is now known as dcaro
[21:48:51] <bjs> theprophet: well maybe you shouldn't list every neat and useful feature dicts and lists have else we might be here all day :)
[21:49:08] <Guest5081> I'm trying to create a model for Indonesia address, the address will be Province > City > District. Each level will be added through web admin. I want the city to have a choicefield of province, and the district to have a choicefield of city. I've tried using foreign key but it calls all city even from other province. How can I isolate the city i'm
[21:49:08] <Guest5081> trying according to selected province?
[21:49:25] <theprophet> @bjs yea, but since he asked
[21:49:25] *** Quits: besnn (~besnn@user/besnn) (Ping timeout: 260 seconds)
[21:49:40] <Guest5081> I tried doing this provinces = Provinsi.objects.all()
[21:49:41] <Guest5081>     pilihan_kota = []
[21:49:41] <Guest5081>     for a in provinces:
[21:49:42] <Guest5081>         temp = (a,a)
[21:49:42] <Guest5081>         pilihan_kota.append(temp)
[21:49:43] <Guest5081>     pilihan_kota = tuple(pilihan_kota)
[21:49:43] <Guest5081>     kota = models.CharField(max_length=40,choices=pilihan_kota)
[21:50:00] <Guest5081> Is this okay?
[21:50:48] *** Quits: Guddu (~Guddu@190.84.88.92) (Read error: Connection reset by peer)
[21:51:08] <theprophet> well, he left
[21:51:53] *** Quits: rendar (~rendar@user/rendar) (Quit: Leaving)
[21:51:54] *** Joins: Guddu (~Guddu@190.84.88.92)
[21:52:15] *** Guest5081 is now known as Kuluna
[21:52:39] <Kuluna> Is my question too long?
[21:53:04] <matsaman> Kuluna: haven't seen your question, if it was some time ago you can re-send it without violating etiquette
[21:53:11] <matsaman> Kuluna: oh you changed nick =)
[21:53:15] <matsaman> Kuluna: you need to use a pastebin
[21:53:22] <matsaman> Kuluna: there's one in the /topic
[21:53:39] <Kuluna> Oh, i'm sorry
[21:53:42] <matsaman> state problem here, code in pastebin
[21:53:43] <theprophet> Kuluna post your codes here https://bpa.st/
[21:53:59] <theprophet> paste*
[21:55:26] <Kuluna> Okay, thanks matsaman and theprophet
[21:56:02] *** Joins: fedenix (~fedenix@gateway/tor-sasl/fedenix)
[21:56:44] *** Quits: mickey (~user@user/mickey) (Quit: Ping timeout (120 seconds))
[21:57:05] *** Joins: mickey (~user@user/mickey)
[21:57:31] <Kuluna> I keep getting error 500, any idea how to fix this?
[21:58:28] <theprophet> @kuluna https://pastebin.pl/ try this
[21:59:25] *** Joins: reset (~reset@user/reset)
[21:59:40] <Kuluna> Should i repost my question or just the pastebin?
[22:00:31] <bjs> Kuluna: are you Guest5081?
[22:00:35] <theprophet> link of your pastebin. and then ask question.
[22:00:44] <Kuluna> Yeah bjs
[22:00:49] *** Joins: Mattiaslndstrm (~Mattiasln@c188-148-207-108.bredband.tele2.se)
[22:01:23] *** Joins: abhixec (~abhixec@c-67-169-139-16.hsd1.ca.comcast.net)
[22:01:30] <Kuluna> Pastebin: https://pastebin.pl/view/875f75d6
[22:01:30] <Kuluna> I'm trying to create a model for Indonesia address, the address will be Province > City > District. Each level will be added through web admin. I want the city to have a choicefield of province, and the district to have a choicefield of city. I've tried using foreign key but it calls all city even from other province. How can I isolate the city i'm
[22:01:31] <Kuluna> trying according to selected province?
[22:02:11] <grym> Kuluna: https://bpa.st/+python  is a better pastebin, generally
[22:02:48] *** Joins: ice9 (~ice9@user/ice9)
[22:03:26] <Kuluna> grym: I keep getting error 500 when I try to paste there
[22:04:37] *** Quits: daoudr (~daoudr@178.197.200.90) (Quit: Leaving)
[22:06:20] *** Quits: jpic (~jpic@82.142.10.6) (Ping timeout: 260 seconds)
[22:08:02] *** Quits: kn10003 (~kn100@wireguard/tunneler/kn100) (Ping timeout: 250 seconds)
[22:08:04] *** Joins: jpic (~jpic@82.142.24.154)
[22:08:27] *** Quits: bfoley (~bfoley@pool-173-48-101-113.bstnma.fios.verizon.net) (Quit: My MacBook has gone to sleep. ZZZzzz…)
[22:08:32] *** Joins: kn10003 (~kn100@wireguard/tunneler/kn100)
[22:09:32] *** Joins: y1n (~y1n@84-115-65-165.wifi.dynamic.surfer.at)
[22:10:02] *** Joins: NoImNotNineVolt (~fdsa@c-73-248-207-98.hsd1.nj.comcast.net)
[22:10:16] *** Quits: pycurious (~Adium@user/pycurious) (Quit: Leaving.)
[22:14:26] *** Quits: thurs8 (~thurs@ip68-225-209-147.ph.ph.cox.net) (Read error: Connection reset by peer)
[22:14:40] *** Joins: thurs8 (~thurs@ip68-225-209-147.ph.ph.cox.net)
[22:16:21] *** Quits: thurs8 (~thurs@ip68-225-209-147.ph.ph.cox.net) (Read error: Connection reset by peer)
[22:16:31] *** Joins: thurs81 (~thurs@ip68-225-209-147.ph.ph.cox.net)
[22:17:00] *** Quits: rany (~rany@user/rany) (Quit: ZNC 1.8.2+deb2+b1 - https://znc.in)
[22:19:39] *** Joins: rany (~rany@user/rany)
[22:21:20] *** Quits: kofuyu (~kofuyu@user/kofuyu) (Read error: Connection reset by peer)
[22:21:43] *** Joins: kofuyu (~kofuyu@user/kofuyu)
[22:24:53] <p-i-_> Is there some bash trick for recursively looking back thru the pathstring and activating the first .venv that is found?
[22:24:54] *** Joins: abraham (~textual@191.96.121.144)
[22:25:09] *** Joins: CrazyEddy (crazyed@2603:300a:1d10:c000:de4a:3eff:fe88:cc5f)
[22:25:44] *** Quits: kofuyu (~kofuyu@user/kofuyu) (Read error: Connection reset by peer)
[22:26:49] *** Joins: odoood (~odoood@2601:c8:c003:a550::3)
[22:26:55] <grym> p-i-_: direnv.net might be good here
[22:26:59] <matsaman> p-i-_: yes
[22:27:18] *** Quits: brylie (~Thunderbi@81-197-199-179.elisa-laajakaista.fi) (Quit: brylie)
[22:27:22] *** Joins: harpia (~harpia@58.148.205.168.dynamic.vibefibra.com.br)
[22:27:55] *** Joins: kofuyu (~kofuyu@user/kofuyu)
[22:28:36] *** Joins: lalitmee__ (~lalitmee@180.94.33.33)
[22:29:01] *** Quits: rpkilby_ (~rpkilby@c-24-20-208-106.hsd1.or.comcast.net) (Remote host closed the connection)
[22:29:25] *** Quits: resmo_ (~resmo@135-58-239-77.dyn.cable.fcom.ch) (Read error: Connection reset by peer)
[22:29:36] *** Joins: rpkilby (~rpkilby@ec2-34-252-84-235.eu-west-1.compute.amazonaws.com)
[22:31:25] *** Quits: lalitmee_ (~lalitmee@180.94.33.15) (Ping timeout: 260 seconds)
[22:32:22] *** Quits: dhellmann (~dhellmann@097-081-099-073.res.spectrum.com) (Quit: Textual IRC Client: www.textualapp.com)
[22:32:40] <p-i-_> tx
[22:32:44] *** Joins: Macuser (~Macuser@216.30.159.201)
[22:33:39] *** Quits: abhixec (~abhixec@c-67-169-139-16.hsd1.ca.comcast.net) (Remote host closed the connection)
[22:36:16] *** Joins: abhixec (~abhixec@c-67-169-139-16.hsd1.ca.comcast.net)
[22:38:29] *** Joins: ham5urg (~ham5urg@p5ddfcd25.dip0.t-ipconnect.de)
[22:39:30] *** nixture is now known as decartes
[22:39:37] <eb0t> hey i have constructed a url but it has single quotes around it , and i think this is messing with the request
[22:39:38] *** Quits: vvdaiwrw (~rvgzuuqp@gateway/tor-sasl/rvgzuuqp) (Quit: vvdaiwrw)
[22:39:41] <eb0t> how to get rid of them
[22:39:45] *** Quits: abhixec (~abhixec@c-67-169-139-16.hsd1.ca.comcast.net) (Remote host closed the connection)
[22:39:47] *** Joins: pycurious (~Adium@user/pycurious)
[22:40:33] *** Joins: abhixec (~abhixec@c-67-169-139-16.hsd1.ca.comcast.net)
[22:40:55] *** Quits: abraham (~textual@191.96.121.144) (Quit: Textual IRC Client: www.textualapp.com)
[22:41:26] *** Joins: abraham (~abraham@191.96.121.144)
[22:41:33] *** Quits: legola (~legola@46.235.100.27) (Remote host closed the connection)
[22:41:51] <matsaman> eb0t: .strip("'’‘") would be one way
[22:42:05] *** Quits: LuksNuke (~LuksNuke@2001:7e8:c066:6200:be85:8d95:5d9:f9da) (Remote host closed the connection)
[22:42:13] <matsaman> or just .strip("'"), for example
[22:42:19] <nedbat> eb0t: it's possible you don't have single quotes around it. Can you link us to your code and output?
[22:42:41] *** Quits: pyeveryt_ (~pyeveryth@dhcp-wifi-8021x-155-41-114-131.bu.edu) (Remote host closed the connection)
[22:42:46] *** Joins: legola (~legola@46.235.100.27)
[22:42:59] *** Quits: legola (~legola@46.235.100.27) (Read error: Connection reset by peer)
[22:43:18] *** Quits: Macuser (~Macuser@216.30.159.201) (Quit: Textual IRC Client: www.textualapp.com)
[22:45:08] *** Quits: lalitmee__ (~lalitmee@180.94.33.33) (Ping timeout: 252 seconds)
[22:45:23] <grym> usually "i have single quotes" winds up involving repr() in some way that is often confusing at first
[22:46:19] *** Quits: blddk (~admin@185.233.252.229) (Quit: ZNC 1.8.2 - https://znc.in)
[22:46:27] *** Quits: harpia (~harpia@58.148.205.168.dynamic.vibefibra.com.br) (Quit: harpia)
[22:46:36] *** Quits: RangerBobVA (~bmaddox@user/rangerbobva) (Quit: Leaving)
[22:46:39] <nedbat> indeed
[22:47:31] *** Joins: Cleverness (~clevernes@pool-108-54-152-186.nycmny.fios.verizon.net)
[22:47:55] <pycurious> what is the correct way of doing this -> conf.__dict__[conf.name] —> Where conf is a module.
[22:48:24] <eb0t> thanks matsaman and nedbat...the code is not going wrong where i thoguht it was..its further down...ill try and get the code
[22:48:35] <nedbat> pycurious: are you trying to set a global in the module?
[22:48:41] *** Joins: exarkun (~exarkun@user/exarkun)
[22:48:44] <nedbat> pycurious: or get a value?
[22:49:12] *** Joins: justsomeguy (~justsomeg@user/justsomeguy)
[22:49:13] <pycurious> get a value from module+global but the key is in the module.name
[22:49:27] <nedbat> pycurious: getattr(conf, conf.name)
[22:49:34] <exarkun> Hello.  I have print-unicode-to-stdout part 2.  Why does print(some_non_ascii_unicode) on Windows on Python 3 raised `builtins.UnicodeEncodeError: 'charmap' codec can't encode character '\u2551' in position 0: character maps to <undefined>`?
[22:49:56] <nedbat> pycurious: why does the module have a thing called "name" which is the name you want to actually get? Seems unusual.
[22:50:15] <pycurious> nedbat: Thanks ! That worked like a charm.
[22:50:36] <nedbat> exarkun: because windows is probably using cp1252 or something, and U+2551 can't be encoded in that codepage
[22:50:52] <exarkun> nedbat: even though it says "charmap"?
[22:50:52] *** Quits: jess (~jess@libera/staff/jess) ()
[22:51:07] <nedbat> exarkun: cp1252 is a charmap codec
[22:51:30] <nedbat> exarkun: what is sys.stdout.encoding?
[22:51:43] *** Quits: shawwwn (uid6132@id-6132.helmsley.irccloud.com) (Quit: Connection closed for inactivity)
[22:51:46] <exarkun> I don't have Windows computers :/
[22:51:55] <exarkun> I can ask GitHub if you wait 20 minutes
[22:52:05] *** Joins: vdamewood (~vdamewood@fedora/vdamewood)
[22:52:15] *** Quits: Kuluna (~Guest50@182.253.132.209) (Quit: Client closed)
[22:52:17] *** Roey is now known as BefrienderDuck
[22:52:23] *** Quits: moto (~moto@user/moto) (Remote host closed the connection)
[22:52:38] *** Quits: dvx (~dvx@185.63.97.64) (Remote host closed the connection)
[22:52:58] <exarkun> Yesterday I asked about printing non-ascii to stdout in general and the consensus was basically "it's fine on Python 3" but I guess it's not fine on Python 3 on Windows?
[22:53:24] <exarkun> is there something I should do instead of `print(some_non_ascii_unicode)`?  I'm not wed to `print`.
[22:53:40] *** Quits: markb1 (~markb1@2600:1700:eb40:7ecf:c568:8b7d:c93b:5c45) (Quit: Leaving)
[22:53:50] <nedbat> exarkun: the OS controls the encoding being used in the terminal.  you could use  print(something.encode(sys.stdout.encoding, errors="ignore"))
[22:53:59] *** Joins: Narrat (~omnius@p200300df5f01ca1206ea56fffe2e7cdc.dip0.t-ipconnect.de)
[22:54:04] <nedbat> (or maybe there's a way to set that on stdout?)
[22:54:31] *** Quits: fikran (~fikran@user/fikran) (Ping timeout: 252 seconds)
[22:54:41] *** Joins: NeilRG (~NeilRG@modemcable021.9-176-173.mc.videotron.ca)
[22:55:09] *** Joins: junktext (~junktext@77.247.181.219)
[22:55:14] *** BefrienderDuck is now known as DeflatedMouse
[22:55:24] <nedbat> exarkun: you don't care if your box drawing characters are borked?  (bork drawing characters?)
[22:55:31] *** DeflatedMouse is now known as Roey
[22:56:29] *** Joins: fikran (~fikran@user/fikran)
[22:57:02] *** Joins: Hokedli (~lasliedv@gateway/tor-sasl/hokedli)
[22:57:47] <exarkun> nedbat: I have a Python 2 function that safely writes unicode like that.  The axe I was grinding yesterday was that in not having a safe way to write unicode to stdout, Python is being pretty misleading and harmful to a lot of people.  And everyone here was sure that it was fine in Python 3 (so misleading even to some pretty advanced users).
[22:58:41] <exarkun> nedbat: It's not that I don't *care* if output is corrupt, it's that it's 2021 and I know UTF-8 can represent everything in unicode so this seems like a largely unnecessary problem.  Also "raise an exception and abort the entire program" is probably worse than seeing some replacement characters, yes.
[22:59:22] <nedbat> exarkun: ask your users to use "chcp 65001"?
[22:59:48] <nedbat> exarkun: i'm not sure how any program (or programming language) could guarantee simple Unicode printing if the windows terminal isn't using a complete encoding.
[22:59:50] <exarkun> nedbat: yea right, how many normal Windows users can follow that instruction?
[23:00:25] <exarkun> nedbat: If you say "It's a really hard problem", great, I agree and sympathize.
[23:00:35] <exarkun> nedbat: That's not a counterpoint to "it's bad" though.
[23:00:41] <nedbat> exarkun: it's a really hard problem.
[23:00:49] <exarkun> nedbat: I agree and sympathize. :)
[23:02:22] *** Quits: upsala (~zcb@185.213.155.160) (Read error: Connection reset by peer)
[23:02:25] *** Quits: NeilRG (~NeilRG@modemcable021.9-176-173.mc.videotron.ca) (Remote host closed the connection)
[23:02:43] *** Joins: upsala (~zcb@185.213.155.160)
[23:03:00] *** Joins: NeilRG (~NeilRG@modemcable021.9-176-173.mc.videotron.ca)
[23:04:11] *** Joins: wolfgang (~wolfgang@101.174.6.197)
[23:04:15] *** Joins: Elzington (~Elzington@68.235.43.76)
[23:04:57] *** Quits: abhixec (~abhixec@c-67-169-139-16.hsd1.ca.comcast.net) (Quit: leaving)
[23:07:37] *** Quits: NeilRG (~NeilRG@modemcable021.9-176-173.mc.videotron.ca) (Ping timeout: 252 seconds)
[23:07:42] <jinsun> on my windows machine the encoding is actually utf-8 for cmd, but I remember seeing that error in my work computer before
[23:07:49] *** Joins: vicfred (~vicfred@user/vicfred)
[23:08:08] <jinsun> maybe really new versions of windows 10 finally switched to utf-8? or I somehow changed some setting and don't remeber it
[23:09:20] *** Quits: y1n (~y1n@84-115-65-165.wifi.dynamic.surfer.at) (Ping timeout: 252 seconds)
[23:09:28] *** Joins: Deknos (~someone@user/menace)
[23:12:25] *** Joins: FFY00_ (~FFY00@archlinux/trusteduser/ffy00)
[23:13:59] *** Parts: thinkofher (~thinkofhe@user/thinkofher) (Textual IRC Client: www.textualapp.com)
[23:14:19] *** Quits: maryo87 (~Maryo@user/maryo) (Ping timeout: 252 seconds)
[23:14:52] *** Quits: FFY00 (~FFY00@archlinux/trusteduser/ffy00) (Ping timeout: 252 seconds)
[23:15:56] *** Quits: pro_z (~pro_z@37.214.61.236) (Ping timeout: 252 seconds)
[23:17:30] *** Quits: ShorTie (~ShorTie@112.sub-72-108-77.myvzw.com) (Ping timeout: 260 seconds)
[23:18:07] *** Quits: fdan (~fdan@192.146.154.3) (Quit: Client closed)
[23:18:24] *** Joins: ShorTie (~ShorTie@112.sub-72-108-77.myvzw.com)
[23:18:40] *** Quits: ham5urg (~ham5urg@p5ddfcd25.dip0.t-ipconnect.de) (Ping timeout: 260 seconds)
[23:19:47] *** Quits: ttree (~ttree0@c-73-239-62-159.hsd1.wa.comcast.net) (Ping timeout: 252 seconds)
[23:20:32] <Fieldy> is there a sort of "super-comment" string in python 3.7.11? I have a large block of stuff I'd like to remain commented. Normally I'd just start with """ and end with """. However, within this block are numerous chunks where I had placed comments, wrapped in """ pairs. So when I try to comment out this entire mess, the things within it that i had formerly commented are now UNcommented.
[23:21:19] <grym> Fieldy: comments are lines of source code that start with #
[23:21:39] <grym> Fieldy: """foo""" is not a comment, it's a string that probably wasn't assigned a name
[23:21:43] <Fieldy> grym: ok, i thought they were started and ended by """ (one each). that is more useful to me
[23:22:01] <Fieldy> ok i'll clean that concept up. dunno where i got it (noob)
[23:22:01] *** Joins: abhixec (~abhixec@c-67-169-139-16.hsd1.ca.comcast.net)
[23:22:10] *** Joins: EvilDMP (~textual@django/moderator/EvilDMP)
[23:22:16] <grym> (python doesn't have the c-style \* * */ comment-region stuff, basically)
[23:22:21] *** Joins: y1n (~y1n@84-115-65-155.wifi.dynamic.surfer.at)
[23:22:39] <Fieldy> ok
[23:22:44] <Fieldy> thanks!
[23:22:53] *** Quits: abhixec (~abhixec@c-67-169-139-16.hsd1.ca.comcast.net) (Remote host closed the connection)
[23:23:27] <grym> Fieldy: also note that in some cases, strings _can_ be assigned names: if you `def foo():;    """some text"""`, then foo.__doc__ =="some text"
[23:23:35] *** Parts: blackout69 (~blackout6@net-31-156-75-64.cust.vodafonedsl.it) ()
[23:24:12] <grym> https://bpa.st/KTQA  this way
[23:24:17] *** Quits: chele (~chele@user/chele) (Remote host closed the connection)
[23:25:04] <grym> Fieldy: but not always https://bpa.st/T6XA
[23:26:30] <Fieldy> grym: ok. it wasn't what i was trying to do, it was just that until now, the only way i knew of how to comment something out (incorrectly it seems). thanks for the extra info!
[23:26:43] <Fieldy> i'm glad it's # because that's what i'm accustomed to
[23:26:51] <Fieldy> """blah""" felt downright weird
[23:27:12] *** Quits: blindguard (~blindguar@2a02:908:1864:c200::4433) (Quit: Konversation terminated!)
[23:27:23] <grym> yes, it's incorrect ;)
[23:27:28] <grym> not your fault though
[23:27:32] <Fieldy> :>
[23:27:53] <space-ghost> who's fault is it
[23:27:55] <grym> """... is how you add docs to stuff that python understands, which you should prefer over # comments for functions
[23:28:06] <grym> https://www.python.org/dev/peps/pep-0257/
[23:28:09] <grym> is the relevant doc docs
[23:29:20] *** Quits: EvilDMP (~textual@django/moderator/EvilDMP) (Quit: My MacBook has gone to sleep. ZZZzzz…)
[23:29:56] *** Quits: puff (~user@S0106d4ca6d80a83c.vs.shawcable.net) (Read error: Connection reset by peer)
[23:30:04] <saltrocklamp[m]> to be clear, `"""hello"""` is just a string literal
[23:30:09] *** Joins: puff (~user@S0106d4ca6d80a83c.vs.shawcable.net)
[23:30:33] <saltrocklamp[m]> it's not a "comment" or anything handled specially by the parser. the triple quoting just lets you put line breaks inside the string (and you don't need to escape individual instances of `"`)
[23:31:27] <saltrocklamp[m]> python has special handling for when the first statement in a function or class body is a string literal: it uses it as the docstring.
[23:31:52] <saltrocklamp[m]> you could write your docstrings in single quotes, but then you couldn't effectively write detailed docs for lack of space
[23:31:59] *** Quits: gusto (~Augustus@109.255.100.54) (Quit: Textual IRC Client: www.textualapp.com)
[23:33:31] <Fieldy> is there a way to get python "debugging" similar to bash -w (all i really know is bash sorry). i've written something that has no errors and also no output lol
[23:33:53] <Fieldy> typically i have internal debugging stuff later but this is very early
[23:34:06] *** Quits: TranquilEcho (~grom@user/tranquilecho) (Quit: WeeChat 2.8)
[23:34:46] <space-ghost> dont you use print to do debugging
[23:34:47] <space-ghost> :-p
[23:34:54] <space-ghost> its unofficially the number 1 tool
[23:34:58] <space-ghost> https://towardsdatascience.com/5-python-debugging-tools-that-are-better-than-print-1aa02eba35
[23:35:02] <Fieldy> yea i haven't gotten that far yet
[23:35:20] <Fieldy> it's very basic just a few lines... i'm just not sure what's going on yet
[23:35:50] <Fieldy> the previous thing I wrote did have things like that though, this is a rewrite of the same thing, but moving one library "lower" if you will. the one i was using was inadvertantly masking some features i want
[23:36:10] <bjs> Fieldy: what does -w do?
[23:36:22] *** Quits: abraham (~abraham@191.96.121.144) (Quit: My MacBook Air has gone to sleep. ZZZzzz…)
[23:36:31] <grym> Fieldy: no shame in print debugging.  3.8+ supports a nice f-string notation for this: `x = 5; print(f'debugging stuff, got {x=}') prints "debugging stuff, got x=5"
[23:36:39] <Fieldy> bjs: tells bash to print debugging info, quite a bit actually. if i got something similar here, i might see raw input/output strings, files/handles loaded etc
[23:36:54] <grym> Fieldy: but there are actual debuggers available that are all quite nice
[23:36:59] <Fieldy> ah i see
[23:37:19] <Fieldy> well, i'm going to slow down and review what i've done here. most likely human error lol
[23:37:23] *** Joins: ham5urg (~ham5urg@p5ddfcd25.dip0.t-ipconnect.de)
[23:37:35] <grym> pudb, pdb, there's usually tooling in your editor to hook one
[23:37:37] *** Parts: exarkun (~exarkun@user/exarkun) (WeeChat 2.4)
[23:37:40] <bjs> Fieldy: if you share your code probably we can help too :)
[23:38:11] <bjs> Fieldy: I still don't really get what -w does
[23:38:22] *** Joins: bitmega (~bitmega@2605:a601:a93c:4f00:69b2:e79f:cb3e:d5b8)
[23:38:23] *** Joins: abraham (~abraham@191.96.121.144)
[23:38:27] <bjs> I can't find anything about a -w in any bash docs I have
[23:39:17] <phy1729> I'd assume they mean -x
[23:39:27] *** Quits: junktext (~junktext@77.247.181.219) (Quit: junktext)
[23:39:31] <Fieldy> phy1729 may be right
[23:39:33] <bjs> If Fieldy means -x, then Python has trace
[23:39:35] <Fieldy> too much stuff flying around in my head
[23:39:43] <bjs> python3 -m trace --trace file.py  will print out each line as it gets executed
[23:39:43] *** Quits: abraham (~abraham@191.96.121.144) (Client Quit)
[23:40:02] <Fieldy> sec. it appears my term got hosed somehow, something is goofy, output may be disappearing under a cloud of bs
[23:40:42] *** Joins: abraham (~abraham@191.96.121.144)
[23:41:16] <Fieldy> ok, term size was getting lost/goofed somehow... fixed that, no output. i'll check out trace
[23:41:20] <Fieldy> andi'll share in a sec
[23:41:58] <Fieldy> STILL something wrong with my term.... lines overwiting each other etc. the hell is going on here
[23:42:21] *** Joins: Dotz0cat (~Dotz0cat@h176.93.187.173.dynamic.ip.windstream.net)
[23:42:25] *** Quits: abraham (~abraham@191.96.121.144) (Client Quit)
[23:42:27] <Fieldy> now i can't copy-paste.... gonna just blow away that entire term em
[23:42:36] <grym> usually the wise action, yep
[23:42:53] <Soni> can python make symlinks?
[23:43:17] <saltrocklamp[m]> Soni: probably with shutil
[23:43:25] <grym> Soni: if your OS/filesystem supports it, sure https://docs.python.org/3/library/pathlib.html#pathlib.Path.symlink_to
[23:43:49] <Fieldy> anyway. yeah that trace, lol... tooons of output. i'll redirect it to a file and inspect
[23:43:54] *** Quits: webmind (~webmind@user/webmind) (Ping timeout: 256 seconds)
[23:44:11] <Fieldy> hopefully that only goes to stderr
[23:44:22] <Fieldy> nope...
[23:44:51] <Fieldy> is there a way to control trace verbosity? this is wild
[23:45:09] <bjs> Fieldy: did you run python3 -m trace --help yet to see what options it takes
[23:45:53] <Fieldy> ah no, i will. 5.3 million lines lmao
[23:45:58] *** Joins: linux_dream (~isaac@2a01:e0a:7:60e0:bcc4:b32c:9221:831d)
[23:46:17] <bjs> Fieldy: I thought you said it was basic and just a few lines
[23:47:22] *** Joins: abraham (~abraham@191.96.121.37)
[23:47:28] <Fieldy> bjs: it is, but it is trying to pull in a machine learning model file that is not small, so maybe that is driving that output
[23:47:39] <Fieldy> hopefully i can grep for something key
[23:47:49] <grym> 'basic' and 'machine learning model' are not usually found in the same sentence
[23:48:41] <Fieldy> true. it's an early stage rewrite of something else. sorry, i did not know that part would result in a huge increase in trace output. that is some awesome detail :>
[23:48:56] <Fieldy> i'll just post the source so far
[23:50:20] <Fieldy> source: https://bpa.st/22IA
[23:50:24] *** Quits: mohabaks (~mohabaks@gateway/tor-sasl/mohabaks) (Ping timeout: 276 seconds)
[23:50:38] <Fieldy> any suggestions for strings to grep for in the trace output? i'm going to start at the end and see if anything obvious jumps out
[23:51:07] *** Quits: akmod (~akmod@c-24-10-154-68.hsd1.ut.comcast.net) (Ping timeout: 240 seconds)
[23:51:27] *** Joins: akmod (~akmod@c-24-10-154-68.hsd1.ut.comcast.net)
[23:52:08] *** Joins: markb1 (~markb1@2600:1700:eb40:7ecf:54b0:43e6:cce0:83c)
[23:52:10] <Soni> grym: thanks
[23:52:20] <Fieldy> and that is an example (modified a bit) from https://huggingface.co/gpt2?text=A+long+time+ago%2C#how-to-use
[23:54:46] *** Joins: defjam (~eb0t@90.214.8.179)
[23:55:45] *** Quits: abraham (~abraham@191.96.121.37) (Quit: My MacBook Air has gone to sleep. ZZZzzz…)
[23:56:29] *** Joins: abraham (~abraham@191.96.121.37)
[23:56:40] *** Quits: eb0t (~eb0t@90.204.61.71) (Ping timeout: 240 seconds)
[23:56:47] *** Joins: FastJack (~fastjack@b2b-78-94-22-14.unitymedia.biz)
[23:56:58] <Soni> so uh given a cwd like /var/www/git-repos/foo.git/ , how can we go from that to $HOME/.cache/foo.git/gen/ ?
[23:57:36] *** Quits: bitmega (~bitmega@2605:a601:a93c:4f00:69b2:e79f:cb3e:d5b8) (Changing host)
[23:57:36] *** Joins: bitmega (~bitmega@user/bitmega)
[23:57:52] <Soni> well, $HOME/.cache/thing/foo.git/gen/ we guess
[23:59:00] *** Joins: freeman_h (~freeman_h@2a02:c7f:fc54:ba00:5d43:45db:959a:84d6)
[23:59:50] <Fieldy> i do not know myself, sorry
