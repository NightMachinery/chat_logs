[00:00:27] *** Joins: csjp (~csjp@user/csjp)
[00:01:09] *** Quits: rgrinberg (~textual@187.223.250.159) (Read error: Connection reset by peer)
[00:01:50] *** Joins: rgrinberg (~textual@187.223.248.37)
[00:02:11] *** Quits: DeepComa (~PhoenixCo@user/alien-fx-fiend/x-2328408) (Ping timeout: 252 seconds)
[00:05:15] <DPA> https://en.wikipedia.org/wiki/Sequence_point
[00:05:29] *** Joins: mokulus (~mokulus@user/mokulus)
[00:11:26] *** Quits: Libero (~Libero@130.43.23.56.dsl.dyn.forthnet.gr) (Read error: Connection reset by peer)
[00:12:08] *** Joins: jinsun__ (~quassel@user/jinsun)
[00:12:18] *** Joins: Red_ (~Red@97.109-247-81.customer.lyse.net)
[00:12:29] *** Joins: Xgc__ (~Xgc@user/xgc)
[00:12:36] *** Quits: mh3f (~mhowle@cpe-98-25-217-234.sc.res.rr.com) (Remote host closed the connection)
[00:12:37] *** Joins: monkey_ (~user@190.104.116.153)
[00:12:41] *** Joins: fmsd__ (~no@105.157.162.151)
[00:12:49] *** Quits: Red (~Red@97.109-247-81.customer.lyse.net) (Killed (NickServ (GHOST command used by Red_)))
[00:12:52] *** Quits: gproto23 (~gproto23@user/gproto23) (Remote host closed the connection)
[00:12:57] *** Red_ is now known as Red
[00:13:03] *** Joins: gproto23 (~gproto23@user/gproto23)
[00:13:18] *** Joins: mh3f (~mhowle@cpe-98-25-217-234.sc.res.rr.com)
[00:14:36] *** Joins: Telvana2 (~capo@user/telvana)
[00:14:40] *** Quits: pgib (~textual@173.38.117.87) (Ping timeout: 256 seconds)
[00:14:40] *** Quits: elemongw (~elemongw@20.107.36.50) (Ping timeout: 256 seconds)
[00:14:40] *** Quits: xMopx (~xMopx-lib@192.95.23.134) (Ping timeout: 256 seconds)
[00:14:40] *** Quits: Telvana (~capo@user/telvana) (Write error: Connection reset by peer)
[00:14:53] *** Quits: smeso (~smeso@user/smeso) (Ping timeout: 256 seconds)
[00:15:13] *** Quits: pulse (~pulse@user/pulse) (Quit: Join a community of jedi masters at https://indiedevs.net/)
[00:15:27] *** Quits: csjp (~csjp@user/csjp) (Ping timeout: 256 seconds)
[00:15:27] *** Quits: fmsd (~no@105.157.162.151) (Ping timeout: 256 seconds)
[00:15:27] *** Quits: slidercrank (~slidercra@user/slidercrank) (Ping timeout: 256 seconds)
[00:15:27] *** Quits: jinsun (~quassel@user/jinsun) (Ping timeout: 256 seconds)
[00:15:52] *** Joins: slidercrank (~slidercra@user/slidercrank)
[00:16:01] *** Quits: Xgc_ (~Xgc@user/xgc) (Ping timeout: 256 seconds)
[00:16:21] *** Joins: xMopx (~xMopx-lib@192.95.23.134)
[00:16:29] *** Telvana2 is now known as Telvana
[00:16:31] *** Joins: csjp (~csjp@user/csjp)
[00:16:40] *** Joins: smeso (~smeso@user/smeso)
[00:17:10] *** Joins: elemongw (~elemongw@20.107.36.50)
[00:24:07] *** Joins: Libero (~Libero@130.43.23.56.dsl.dyn.forthnet.gr)
[00:24:11] *** Quits: alch (~alch@151.82.155.222) (Ping timeout: 252 seconds)
[00:25:32] *** Joins: tech_exorcist (txrcst@user/tech-exorcist/x-0447479)
[00:26:06] *** Joins: alch (~alch@151.82.129.236)
[00:26:32] *** Quits: Macuser (~Macuser@216.30.159.201) (Quit: My MacBook has gone to sleep. ZZZzzz…)
[00:27:11] *** Quits: monkey_ (~user@190.104.116.153) (Remote host closed the connection)
[00:29:16] *** Quits: tech_exorcist (txrcst@user/tech-exorcist/x-0447479) (Remote host closed the connection)
[00:29:32] *** Joins: tech_exorcist (txrcst@user/tech-exorcist/x-0447479)
[00:31:30] *** jinsun__ is now known as jinsun
[00:31:30] *** Joins: fmsd___ (~no@160.177.26.136)
[00:33:05] *** Quits: Klinda (~superleag@user/klinda) (Ping timeout: 256 seconds)
[00:33:21] *** Quits: fmsd__ (~no@105.157.162.151) (Ping timeout: 252 seconds)
[00:34:09] *** Quits: ___nick___ (~quassel@cpc68286-cdif17-2-0-cust533.5-1.cable.virginm.net) (Ping timeout: 256 seconds)
[00:36:42] *** Joins: fmsd (~no@160.179.0.131)
[00:37:56] *** Quits: fmsd___ (~no@160.177.26.136) (Ping timeout: 252 seconds)
[00:39:14] *** Joins: fmsd__ (~no@41.141.17.247)
[00:40:40] *** Quits: gxt (~gxt@gateway/tor-sasl/gxt) (Remote host closed the connection)
[00:41:06] *** Joins: j-james (~apropos@dhcp-206-87-159-84.ubcsecure.wireless.ubc.ca)
[00:41:12] *** Joins: gxt (~gxt@gateway/tor-sasl/gxt)
[00:41:24] *** Joins: Macuser (~Macuser@216.30.159.201)
[00:41:31] *** Quits: fmsd (~no@160.179.0.131) (Ping timeout: 256 seconds)
[00:41:31] *** Quits: rgrinberg (~textual@187.223.248.37) (Ping timeout: 256 seconds)
[00:42:31] *** Quits: Richard_Cavell (uid165693@id-165693.ilkley.irccloud.com) (Quit: Connection closed for inactivity)
[00:42:53] *** Quits: boB_K7IQ (~boB_K7IQ@152.44.147.180) (Ping timeout: 252 seconds)
[00:43:42] *** Joins: boB_K7IQ (~boB_K7IQ@152.44.147.180)
[00:43:47] *** Quits: fmsd__ (~no@41.141.17.247) (Ping timeout: 256 seconds)
[00:45:07] *** Joins: monkey_ (~user@190.104.116.153)
[00:45:19] *** Joins: [RMS] (~rs@genoce.org)
[00:46:16] *** Quits: [R] (~rs@genoce.org) (Ping timeout: 260 seconds)
[00:46:28] *** Joins: rgrinberg (~textual@187.223.248.37)
[00:52:47] *** Quits: nostar (~nostar@2601:406:4100:34d:8f4:5ea7:30b2:b7e6) (Ping timeout: 252 seconds)
[00:56:31] *** Quits: polyrob (~rob@user/polyrob) (Ping timeout: 250 seconds)
[00:56:52] *** Joins: polyrob (~rob@user/polyrob)
[00:58:31] *** Quits: luizfrds (~Luiz@152.250.243.147) (Ping timeout: 256 seconds)
[01:00:37] *** Joins: nostar (~nostar@68.51.221.108)
[01:05:18] *** Joins: tejr (~tejr@user/tejr)
[01:08:18] *** Joins: Y4knotiS (~YaknotiS@cpc1-cmbg18-2-0-cust87.5-4.cable.virginm.net)
[01:08:27] *** Joins: Klinda (~superleag@user/klinda)
[01:09:06] *** Quits: kenanmarasli (~kenanmara@user/kenanmarasli) (Quit: Leaving)
[01:09:14] *** Joins: arinov (~arinov@213.194.126.155)
[01:10:22] *** Quits: jjido (~Denis@90.213.58.125) (Quit: My MacBook Air has gone to sleep. ZZZzzz…)
[01:11:48] *** Joins: bolovanos_ (~bolovanos@user/bolovanos)
[01:12:25] *** Quits: node1 (~node1@user/node1) (Quit: Client closed)
[01:15:31] *** Quits: bolovanos (~bolovanos@user/bolovanos) (Ping timeout: 252 seconds)
[01:16:17] *** Quits: j-james (~apropos@dhcp-206-87-159-84.ubcsecure.wireless.ubc.ca) (Quit: leaving)
[01:16:26] *** Quits: rgrinberg (~textual@187.223.248.37) (Ping timeout: 252 seconds)
[01:18:23] *** Joins: magla (~gelignite@55d48eca.access.ecotel.net)
[01:19:12] *** Joins: rgrinberg (~textual@187.223.250.159)
[01:21:45] *** Quits: odoood (~odoood@pool-71-251-227-104.rcmdva.fios.verizon.net) (Ping timeout: 252 seconds)
[01:25:22] *** Quits: Narrat (~omnius@p200300df5f3c959d06ea56fffe2e7cdc.dip0.t-ipconnect.de) (Quit: They say a little knowledge is a dangerous thing, but it's not one half so bad as a lot of ignorance.)
[01:25:46] *** Quits: rgrinberg (~textual@187.223.250.159) (Ping timeout: 268 seconds)
[01:27:40] *** Quits: magla (~gelignite@55d48eca.access.ecotel.net) (Quit: Stay safe!)
[01:31:17] *** Joins: rgrinberg (~textual@187.223.250.159)
[01:31:20] *** Quits: cvmn (~caveman@gateway/tor-sasl/caveman) (Quit: i'm the caveman.  worry not for that i'm still around.)
[01:32:00] *** Quits: pretty_dumm_guy (trottel@gateway/vpn/protonvpn/prettydummguy/x-88029655) (Quit: WeeChat 3.3)
[01:35:57] *** Joins: odoood (~odoood@pool-71-251-227-104.rcmdva.fios.verizon.net)
[01:36:42] *** [RMS] is now known as [R]
[01:42:21] *** Joins: ferdna (~ferdna@user/ferdna)
[01:44:42] *** Quits: nrl^ (~nrl@68.101.58.90) (Remote host closed the connection)
[01:46:14] *** Quits: cpuid (~cpuid@user/cpuid) (Quit: ZNC 1.8.2 - https://znc.in)
[01:47:05] *** Joins: cpuid (~cpuid@co5.at)
[01:47:06] *** Quits: cpuid (~cpuid@co5.at) (Changing host)
[01:47:06] *** Joins: cpuid (~cpuid@user/cpuid)
[01:47:47] *** Quits: odoood (~odoood@pool-71-251-227-104.rcmdva.fios.verizon.net) (Ping timeout: 252 seconds)
[01:50:31] *** Quits: aradesh (~aradesh@user/aradesh) (Quit: WeeChat 1.9.1)
[01:51:27] *** Quits: Betal (~Betal@user/betal) (Ping timeout: 252 seconds)
[01:53:22] *** Joins: Betal (~Betal@user/betal)
[01:54:15] *** Joins: Oxfuxxx (~sharky@192.145.80.52)
[01:55:29] *** Quits: CormacAttack (~mac@144.62.50.200) (Ping timeout: 252 seconds)
[01:55:49] *** Joins: eelstrebor (~eelstrebo@198-178-29-136.scb.ne.static.allophone.net)
[01:56:55] *** Quits: Serpent7776 (~Serpent77@90-156-31-193.internetia.net.pl) (Quit: leaving)
[01:59:48] *** Quits: soapsudsxx (~soapsudsx@209.221.40.158) (Remote host closed the connection)
[02:00:36] *** Quits: gproto23 (~gproto23@user/gproto23) (Remote host closed the connection)
[02:00:38] *** Joins: kish` (~sid742412@user/aqua)
[02:00:45] *** Quits: eelstrebor (~eelstrebo@198-178-29-136.scb.ne.static.allophone.net) (Quit: Ex-Chat)
[02:01:00] *** Joins: gproto23 (~gproto23@user/gproto23)
[02:01:53] *** Joins: dsrt^ (~dsrt@68.101.58.90)
[02:03:28] *** Joins: AsenMx (~AsenMx@user/asenmx)
[02:04:52] *** Joins: soapsudsxx (~soapsudsx@209.221.40.158)
[02:08:47] *** Quits: Macuser (~Macuser@216.30.159.201) (Quit: Textual IRC Client: www.textualapp.com)
[02:10:12] *** Joins: Torr (~Torr@user/torr)
[02:11:47] *** Joins: masterbuilder (~user@user/masterbuilder)
[02:12:01] *** Quits: tech_exorcist (txrcst@user/tech-exorcist/x-0447479) (Quit: Goodbye)
[02:12:28] *** Joins: tech_exorcist (txrcst@user/tech-exorcist/x-0447479)
[02:14:19] *** Joins: Lazenca (~lazenca@user/lazenca)
[02:18:24] *** Quits: tech_exorcist (txrcst@user/tech-exorcist/x-0447479) (Remote host closed the connection)
[02:19:25] *** Quits: dogbert2 (~Bill@ip68-105-189-91.lv.lv.cox.net) (Remote host closed the connection)
[02:19:40] *** Joins: dogbert2 (~Bill@ip68-105-189-91.lv.lv.cox.net)
[02:20:19] *** Quits: WilliamLeara (~wdl@cpe-76-185-2-28.tx.res.rr.com) ()
[02:20:32] *** Quits: Akuli (~Akuli@82-203-165-50.bb.dnainternet.fi) (Quit: Akuli)
[02:21:41] *** Joins: eelstrebor (~eelstrebo@198-178-29-136.scb.ne.static.allophone.net)
[02:22:14] *** Quits: halabund (~halabund@192.55.244.3) (Remote host closed the connection)
[02:23:03] *** Quits: eelstrebor (~eelstrebo@198-178-29-136.scb.ne.static.allophone.net) (Remote host closed the connection)
[02:23:32] <kaichiuchu> strange question
[02:24:19] *** Quits: pert (~pert@fsf/member/pert) (Quit: pert)
[02:24:34] <kaichiuchu> if you have something like `int* x = malloc(whatever);` and this allocation fails, `x` should be set to `NULL`, but isn't accessing a NULL pointer undefined behavior?
[02:24:49] *** Quits: bolovanos_ (~bolovanos@user/bolovanos) (Ping timeout: 252 seconds)
[02:24:53] <kaichiuchu> so there'd be no sense in having a "safe malloc" function
[02:26:35] *** Quits: blyat-73 (~hjgkjhgkj@46.235.96.249) (Remote host closed the connection)
[02:26:57] *** Quits: gproto23 (~gproto23@user/gproto23) (Remote host closed the connection)
[02:28:35] <cousteau> kaichiuchu: FOLLOWING a null pointer is UB
[02:28:43] <cousteau> Checking the value of a null pointer is OK
[02:28:48] <cousteau> i.e. checking whether it's noll
[02:28:54] <kaichiuchu> right, that's what I thought
[02:28:55] <kaichiuchu> okay
[02:29:16] *** Joins: blyat-73 (~hjgkjhgkj@46.235.96.249)
[02:29:42] *** Quits: blyat-73 (~hjgkjhgkj@46.235.96.249) (Client Quit)
[02:29:57] *** Joins: blyat-73 (~hjgkjhgkj@46.235.96.249)
[02:30:59] *** Joins: lightningwright_ (~lightning@user/lightningwright)
[02:31:33] *** Quits: rgrinberg (~textual@187.223.250.159) (Read error: Connection reset by peer)
[02:31:57] *** Quits: blyat-73 (~hjgkjhgkj@46.235.96.249) (Remote host closed the connection)
[02:32:24] <cousteau> i.e. `if (*x == 0)` is UB, but `if (x == NULL)` is OK
[02:32:56] *** Quits: ferdna (~ferdna@user/ferdna) (Quit: Leaving)
[02:32:59] *** Quits: lightningwright_ (~lightning@user/lightningwright) (Client Quit)
[02:33:00] *** Quits: pizdets (~pizdets@183.182.114.193) (Ping timeout: 250 seconds)
[02:33:08] *** Joins: rgrinberg (~textual@187.223.250.159)
[02:33:37] *** Quits: lightningwright (lightningw@user/lightningwright) (Ping timeout: 252 seconds)
[02:33:41] *** Joins: pizdets (~pizdets@183.182.111.240)
[02:33:41] *** Joins: blyat-73 (~hjgkjhgkj@46.235.96.249)
[02:44:26] <earnest> Why is == 0 UB?
[02:44:28] *** Joins: CormacAttack (~mac@144.62.50.200)
[02:44:40] <pragma-> it's more the *x
[02:44:54] <earnest> Right, fair enough
[02:46:05] *** Joins: sdfgsdfg (~sdfgsdfg@user/sdfgsdfg)
[02:46:32] *** Joins: TastyWiener95 (~uhhh3@user/tastywiener95)
[02:49:25] *** Joins: phao (~phao@2804:d45:8e7a:de00:5813:3127:e64b:c7e2)
[02:52:59] *** Quits: rgrinberg (~textual@187.223.250.159) (Ping timeout: 256 seconds)
[02:53:14] *** Joins: debdut (~debdut@115.187.40.134)
[02:54:21] *** Quits: tolog (~tolog@89.36.78.90) (Remote host closed the connection)
[02:57:05] *** Quits: mahmutov (~mahmutov@37.155.69.128) (Ping timeout: 252 seconds)
[03:00:43] *** Joins: dohtem (uid524096@user/dohtem)
[03:01:29] *** Quits: Y4knotiS (~YaknotiS@cpc1-cmbg18-2-0-cust87.5-4.cable.virginm.net) (Ping timeout: 252 seconds)
[03:02:04] *** Quits: mrig (~mrig@user/mrig) (Quit: WeeChat 3.0)
[03:04:11] *** Joins: rgrinberg (~textual@187.223.248.37)
[03:05:06] *** Quits: Libero (~Libero@130.43.23.56.dsl.dyn.forthnet.gr) (Read error: Connection reset by peer)
[03:05:25] *** Joins: odoood (~odoood@pool-71-251-227-104.rcmdva.fios.verizon.net)
[03:05:32] *** Joins: freakazoid12345 (~matt@2603:9000:cf0f:80e3:346b:8ef4:4433:cb30)
[03:06:48] *** Quits: debdut (~debdut@115.187.40.134) (Quit: debdut)
[03:08:02] *** Quits: LucaTM (~LucaTM@user/lucatm) (Quit: Textual IRC Client: www.textualapp.com)
[03:08:34] *** Quits: monkey_ (~user@190.104.116.153) (Remote host closed the connection)
[03:08:38] *** Quits: freakazoid343 (~matt@2603-9000-cf0f-80e3-0ca4-2f26-b042-b2f1.inf6.spectrum.com) (Ping timeout: 252 seconds)
[03:12:10] *** Quits: mh3f (~mhowle@cpe-98-25-217-234.sc.res.rr.com) (Read error: Connection reset by peer)
[03:12:30] *** Quits: ss4 (~wootehfoo@user/wootehfoot) (Quit: Leaving)
[03:13:43] *** Joins: kurahaupo_ (~kurahaupo@pa49-195-154-60.pa.nsw.optusnet.com.au)
[03:13:48] *** Joins: mh3f (~mhowle@cpe-98-25-217-234.sc.res.rr.com)
[03:15:21] *** Quits: dutch (~DutchIngr@user/dutch) (Quit: WeeChat 3.3)
[03:15:47] *** Quits: kurahaupo (~kurahaupo@203-194-51-46.static.tpgi.com.au) (Ping timeout: 252 seconds)
[03:15:54] *** Joins: monkey_ (~user@190.104.116.153)
[03:16:13] *** Joins: eelstrebor (~eelstrebo@198-178-29-136.scb.ne.static.allophone.net)
[03:17:21] *** Quits: Torr (~Torr@user/torr) (Ping timeout: 256 seconds)
[03:19:19] *** Joins: seninha (~seninha@user/seninha)
[03:20:44] *** Joins: dutch (~DutchIngr@user/dutch)
[03:23:09] *** Quits: vicfred (~vicfred@user/vicfred) (Quit: Leaving)
[03:23:59] *** Joins: vim_fans (~pi@user/vim-fans/x-3284168)
[03:27:08] *** Joins: paravida (~myChateau@71-208-95-145.ftmy.qwest.net)
[03:29:17] *** Joins: MrFantastik (~f@c-98-210-128-179.hsd1.ca.comcast.net)
[03:30:23] *** Quits: rgrinberg (~textual@187.223.248.37) (Ping timeout: 256 seconds)
[03:30:26] *** Quits: phao (~phao@2804:d45:8e7a:de00:5813:3127:e64b:c7e2) (Quit: Leaving)
[03:30:42] *** Joins: bruda (~bruda@172.58.60.225)
[03:32:03] *** Joins: j-james (~apropos@dhcp-206-87-154-185.ubcsecure.wireless.ubc.ca)
[03:32:16] *** Joins: bruda_ (~bruda@172.58.60.98)
[03:32:45] *** Joins: mahmutov (~mahmutov@37.155.69.128)
[03:33:12] *** Quits: bruda_ (~bruda@172.58.60.98) (Client Quit)
[03:33:51] *** Joins: bruda_ (~bruda@172.58.60.98)
[03:34:36] *** bruda is now known as Guest7673
[03:34:36] *** Quits: Guest7673 (~bruda@172.58.60.225) (Killed (osmium.libera.chat (Nickname regained by services)))
[03:34:36] *** bruda_ is now known as bruda
[03:34:36] <cousteau> earnest: incidentally, `if (x == 0)` would have been perfectly valid, and identical to `if (x == NULL)`
[03:34:51] *** Quits: slidercrank (~slidercra@user/slidercrank) (Ping timeout: 252 seconds)
[03:35:20] *** Quits: wootehfoot (~wootehfoo@user/wootehfoot) (Read error: Connection reset by peer)
[03:37:38] *** Joins: maroloccio (~marolocci@151.53.155.184)
[03:38:13] *** Quits: blindguard (~blindguar@2a02:908:1864:c200:e9df:eeac:1563:f38a) (Quit: Konversation terminated!)
[03:48:26] *** Quits: bruda (~bruda@172.58.60.98) (Quit: restarting terminology)
[03:48:31] *** Quits: mahmutov (~mahmutov@37.155.69.128) (Ping timeout: 256 seconds)
[03:49:03] *** Joins: bruda (~bruda@172.58.60.98)
[03:51:05] *** Quits: strajder (~strajder@user/strajder) (Quit: leaving)
[03:52:41] *** Joins: dec0d3r (~dec0d3r@2001:8003:480a:e00:e07:e7c3:7efc:ed0f)
[03:53:55] *** Quits: Wulf (~Wulf@user/wulf) (Ping timeout: 252 seconds)
[03:54:13] *** Quits: dec0d3r (~dec0d3r@2001:8003:480a:e00:e07:e7c3:7efc:ed0f) (Remote host closed the connection)
[03:55:45] *** Joins: Wulf (~Wulf@user/wulf)
[03:56:03] *** moose` is now known as moose
[03:56:26] *** Joins: Oxfuxxx_ (~sharky@160.238.38.149)
[03:58:19] *** Quits: Oxfuxxx (~sharky@192.145.80.52) (Ping timeout: 252 seconds)
[04:01:22] <caze> if (!x)
[04:02:59] *** Joins: shivesh (~shivesh@user/shivesh)
[04:04:40] <pragma-> if (x) ; else /* code */;
[04:06:04] *** Quits: j-james (~apropos@dhcp-206-87-154-185.ubcsecure.wireless.ubc.ca) (Quit: leaving)
[04:06:41] *** Joins: chenqisu1 (~chenqisu1@183.217.200.156)
[04:07:41] *** Joins: cthi (~cthi@097-082-138-151.res.spectrum.com)
[04:08:35] <fizzie> `switch (!x) case 1: /* code */;`
[04:08:58] *** Joins: Macuser (~Macuser@216.30.159.201)
[04:09:18] <NRK[m]> evil
[04:10:01] <edk> x && (abort(), 0); /* code */;
[04:10:05] <pony> unless (x) { ... }
[04:11:39] *** Quits: CormacAttack (~mac@144.62.50.200) (Ping timeout: 268 seconds)
[04:11:47] *** Quits: superboot (~agentgasm@user/superboot) (Quit: leaving)
[04:11:47] *** Quits: CaryHartline (~CaryHartl@2603-8080-6a0e-8d88-50fd-43b5-7857-81ac.res6.spectrum.com) (Quit: My iMac has gone to sleep. ZZZzzz…)
[04:11:53] *** Quits: Burgundy (~yomon@79.115.213.171) (Ping timeout: 252 seconds)
[04:11:55] *** Joins: Satin (uid193953@id-193953.ilkley.irccloud.com)
[04:12:44] *** Quits: mh3f (~mhowle@cpe-98-25-217-234.sc.res.rr.com) (Remote host closed the connection)
[04:13:06] *** Quits: cousteau (~cousteau@user/cousteau) (Quit: ♫ I can't forget the day I shot that network down ♫)
[04:23:37] *** Quits: alch (~alch@151.82.129.236) (Ping timeout: 252 seconds)
[04:24:56] *** Joins: treble (~treble@75.76.29.142)
[04:25:08] *** Quits: treble (~treble@75.76.29.142) (Changing host)
[04:25:08] *** Joins: treble (~treble@user/treble)
[04:25:23] *** Joins: alch (~alch@151.38.99.108)
[04:33:20] *** Joins: CaryHartline (~CaryHartl@2603-8080-6a0e-8d88-50fd-43b5-7857-81ac.res6.spectrum.com)
[04:37:23] *** Quits: [R] (~rs@genoce.org) (Read error: Connection reset by peer)
[04:37:30] *** Joins: [R] (~rs@genoce.org)
[04:38:14] *** Joins: retro_ (~retro@97e2ba2e.skybroadband.com)
[04:41:52] *** Quits: retroid_ (~retro@97e2ba2e.skybroadband.com) (Ping timeout: 268 seconds)
[04:42:35] *** Joins: retroid_ (~retro@97e2ba2e.skybroadband.com)
[04:43:06] *** Quits: retro_ (~retro@97e2ba2e.skybroadband.com) (Ping timeout: 268 seconds)
[04:43:10] *** Quits: sdfgsdfg (~sdfgsdfg@user/sdfgsdfg) (Quit: ZzzZ)
[04:45:03] *** Joins: Mac (~mac@144.62.50.200)
[04:45:03] *** Mac is now known as CormacAttack
[04:46:54] *** Quits: maroloccio (~marolocci@151.53.155.184) (Quit: WeeChat 3.0)
[04:49:36] *** Joins: maroloccio (~marolocci@151.53.155.184)
[04:49:47] *** Quits: maroloccio (~marolocci@151.53.155.184) (Client Quit)
[04:49:57] *** Quits: Klinda (~superleag@user/klinda) (Quit: Konversation terminated!)
[04:50:08] *** Joins: pretty_dumm_guy (trottel@gateway/vpn/protonvpn/prettydummguy/x-88029655)
[04:50:15] *** Joins: maroloccio (~marolocci@151.53.155.184)
[04:54:40] *** Joins: j-james (~apropos@dhcp-206-87-154-185.ubcsecure.wireless.ubc.ca)
[04:55:31] *** Joins: ProperNoun (~holyShizn@user/propernoun)
[04:55:34] *** Quits: j-james (~apropos@dhcp-206-87-154-185.ubcsecure.wireless.ubc.ca) (Client Quit)
[05:03:10] *** Joins: wootz (~wootz@2806:1000:8000:19e:3d07:445f:a352:1f9a)
[05:03:18] *** Joins: rgrinberg (~textual@187.223.250.159)
[05:07:37] *** Joins: nuxil (~nuxil@141.195.51.213)
[05:07:41] *** Joins: Inline (~Inline@2a02:908:1252:7a80::fb)
[05:08:25] *** Quits: odoood (~odoood@pool-71-251-227-104.rcmdva.fios.verizon.net) (Ping timeout: 256 seconds)
[05:08:43] *** Quits: random-nick (~random-ni@87.116.165.83) (Ping timeout: 252 seconds)
[05:09:59] *** Quits: nuxil (~nuxil@141.195.51.213) (Client Quit)
[05:10:26] *** Joins: nuxil (~nuxil@141.195.51.213)
[05:10:51] *** Quits: Kev_ (~Kev@2a01cb0400149f00d1cae1b430cfeb09.ipv6.abo.wanadoo.fr) (Ping timeout: 268 seconds)
[05:11:19] *** Joins: nuxil_ (~nuxil@141.195.51.213)
[05:13:24] *** Quits: nuxil_ (~nuxil@141.195.51.213) (Client Quit)
[05:13:24] *** Quits: nuxil (~nuxil@141.195.51.213) (Client Quit)
[05:13:38] *** Joins: nuxil (~nuxil@141.195.51.213)
[05:16:21] *** Quits: rgrinberg (~textual@187.223.250.159) (Ping timeout: 256 seconds)
[05:21:37] *** Quits: Oxfuxxx_ (~sharky@160.238.38.149) (Quit: Never underestimate the power of the butt..[]X/O...ON. (Playst...i mean.. Pir@tA$$))
[05:23:55] *** Joins: ferdna (~ferdna@user/ferdna)
[05:24:03] *** Joins: danielcamiel (~danielcam@user/danielcamiel)
[05:28:35] *** Joins: luizfrds (~Luiz@152.250.243.147)
[05:28:58] *** Joins: Oxfuxxx (~sharky@185.128.25.222)
[05:34:09] *** Quits: ProperNoun (~holyShizn@user/propernoun) (Quit: ZNC 1.7.2+deb3 - https://znc.in)
[05:36:59] *** Joins: wroathe (~wroathe@c-68-54-25-135.hsd1.mn.comcast.net)
[05:37:00] *** Quits: wroathe (~wroathe@c-68-54-25-135.hsd1.mn.comcast.net) (Changing host)
[05:37:00] *** Joins: wroathe (~wroathe@user/wroathe)
[05:40:54] *** Joins: ProperNoun (~holyShizn@user/propernoun)
[05:40:59] *** Joins: retro_ (~retro@97e2ba2e.skybroadband.com)
[05:43:59] <pony> why would you call a pointer x
[05:44:00] <pony> that's gross
[05:44:03] <pony> you should call them p
[05:44:26] *** Quits: ProperNoun (~holyShizn@user/propernoun) (Client Quit)
[05:44:46] *** Quits: retroid_ (~retro@97e2ba2e.skybroadband.com) (Ping timeout: 268 seconds)
[05:45:20] <floatcomplex> x is a good variable name for either a scalar x or an array x of length X
[05:45:29] *** Joins: retroid_ (~retro@97e2ba2e.skybroadband.com)
[05:45:41] <floatcomplex> in the latter case, x is likely to be a pointer in most scopes
[05:45:42] <seninha> xp
[05:45:44] <seninha> pointer to x
[05:45:56] <pony> array should be called a
[05:45:58] <pony> length n
[05:46:00] *** Quits: retro_ (~retro@97e2ba2e.skybroadband.com) (Ping timeout: 268 seconds)
[05:46:02] <floatcomplex> gross
[05:46:15] <floatcomplex> n conveys no information about what array it is the length of
[05:46:34] <danielcamiel> cheese and whiskers
[05:46:38] <floatcomplex> i would use xp for a pointer to a scalar x
[05:47:11] *** Joins: ProperNoun (~holyShizn@user/propernoun)
[05:47:35] *** Quits: monkey_ (~user@190.104.116.153) (Ping timeout: 252 seconds)
[05:47:50] <floatcomplex> for (size_t ix = 0; ix < X; ix++) x[ix] = some expression
[05:48:20] <floatcomplex> now the relationships between all of those things are obvious
[05:50:23] *** Joins: monkey_ (~user@190.104.116.153)
[05:52:54] <NRK[m]> for (size_t LoopIndex = 0; LoopIndex < ArrayLength; LoopIndex += 1)
[05:54:19] <seninha> disgusting
[05:54:58] <seninha> i is the only possible name for loop index
[05:55:04] <pony> true
[05:55:22] *** Joins: rgrinberg (~textual@187.223.248.37)
[05:55:46] <pony> a i n p, the only variable names you should use ever
[05:55:50] <NRK[m]> just realized the variable name isn't descriptive enough. it doesn't say what type it is, should be `UnsignedLoopIndex` instead
[06:00:01] <pony> UnsignedLoopIndexInsideACProgram
[06:00:08] <Pentode> lol
[06:00:27] <pony> I'm going to stop trolling now -_-
[06:00:50] <Pentode> i've been using names for my loop variables like that for years. especially with nested ones...
[06:01:44] <Pentode> not obnoxiously long ones but ones like _index, etc. 
[06:02:45] *** Quits: Macuser (~Macuser@216.30.159.201) (Quit: My MacBook has gone to sleep. ZZZzzz…)
[06:02:54] *** Quits: CaryHartline (~CaryHartl@2603-8080-6a0e-8d88-50fd-43b5-7857-81ac.res6.spectrum.com) (Quit: My iMac has gone to sleep. ZZZzzz…)
[06:05:07] *** Quits: seninha (~seninha@user/seninha) (Quit: Leaving)
[06:06:18] *** Joins: seninha (~seninha@user/seninha)
[06:13:33] *** Quits: shivesh (~shivesh@user/shivesh) (Quit: leaving)
[06:14:16] *** Quits: blyat-73 (~hjgkjhgkj@46.235.96.249) (Remote host closed the connection)
[06:14:39] *** Joins: blyat-73 (~hjgkjhgkj@46.235.96.249)
[06:15:12] *** Quits: blyat-73 (~hjgkjhgkj@46.235.96.249) (Remote host closed the connection)
[06:15:27] *** Joins: blyat-73 (~hjgkjhgkj@46.235.96.249)
[06:20:43] *** Joins: nuke_ (~nuke@2804:14d:90bd:8c0c:87ae:425f:8f1a:2417)
[06:20:44] <nitrix> I do i_mesh, i_attribute, i_stuff, sometimes too, when it gets deeply nested. Never liked h,j,k,l.
[06:21:56] *** Quits: pretty_dumm_guy (trottel@gateway/vpn/protonvpn/prettydummguy/x-88029655) (Quit: WeeChat 3.3)
[06:24:19] *** Quits: perrierjouet (~perrier-j@modemcable012.251-130-66.mc.videotron.ca) (Quit: WeeChat 3.3)
[06:24:54] *** Quits: nuke_ (~nuke@2804:14d:90bd:8c0c:87ae:425f:8f1a:2417) (Remote host closed the connection)
[06:24:56] <floatcomplex> characters in variable names are free, time spent debugging is not
[06:25:26] <floatcomplex> x is iterated over by ix and is of length X
[06:25:44] <floatcomplex> i is an imaginary component
[06:25:48] *** Joins: idle_rain (~idle_rain@2804:14d:90bd:8c0c:87ae:425f:8f1a:2417)
[06:28:53] *** Quits: rgrinberg (~textual@187.223.248.37) (Ping timeout: 256 seconds)
[06:29:15] *** Quits: idle_rain (~idle_rain@2804:14d:90bd:8c0c:87ae:425f:8f1a:2417) (Client Quit)
[06:29:53] *** Joins: idle_rain (~idle_rain@2804:14d:90bd:8c0c:87ae:425f:8f1a:2417)
[06:29:57] *** Quits: idle_rain (~idle_rain@2804:14d:90bd:8c0c:87ae:425f:8f1a:2417) (Remote host closed the connection)
[06:31:02] *** Quits: danielcamiel (~danielcam@user/danielcamiel) (Ping timeout: 252 seconds)
[06:31:53] *** Joins: rgrinberg (~textual@187.223.250.159)
[06:32:19] *** Joins: llh (~llh@user/llh)
[06:33:07] *** Quits: karakedi (~eAC53C340@user/karakedi) (Remote host closed the connection)
[06:34:03] *** Quits: banc (banc@gateway/vpn/airvpn/banc) (Ping timeout: 256 seconds)
[06:44:56] *** Joins: CaryHartline (~CaryHartl@2603-8080-6a0e-8d88-50fd-43b5-7857-81ac.res6.spectrum.com)
[06:45:18] *** Quits: maroloccio (~marolocci@151.53.155.184) (Quit: WeeChat 3.0)
[06:47:21] *** Joins: Macuser (~Macuser@216.30.159.201)
[06:48:14] *** Quits: plastico (~plastico@neomutt/plastico) (Quit: WeeChat 3.3)
[06:49:30] *** Joins: dstein64- (~dstein64@dannyadam.com)
[06:50:11] *** Quits: monkey_ (~user@190.104.116.153) (Remote host closed the connection)
[06:50:16] *** Quits: dstein64 (~dstein64@dannyadam.com) (Ping timeout: 260 seconds)
[06:50:32] *** Joins: idle_rain (~idle_rain@2804:14d:90bd:8c0c:87ae:425f:8f1a:2417)
[06:50:41] *** dstein64- is now known as dstein64
[06:52:40] *** Joins: banc (banc@gateway/vpn/airvpn/banc)
[06:54:24] *** Quits: idle_rain (~idle_rain@2804:14d:90bd:8c0c:87ae:425f:8f1a:2417) (Client Quit)
[06:55:47] *** Quits: rgrinberg (~textual@187.223.250.159) (Ping timeout: 252 seconds)
[06:56:53] *** Quits: steve_ (~steve@ool-182c2b80.dyn.optonline.net) (Ping timeout: 252 seconds)
[06:58:00] *** Joins: monkey_ (~user@190.104.116.153)
[07:06:20] *** Joins: ChromaCat248 (~ChromaCat@user/chromacat248)
[07:08:12] *** Quits: e36freak (~e36freak@user/e36freak) (Remote host closed the connection)
[07:10:13] *** Joins: e36freak (~e36freak@user/e36freak)
[07:11:16] *** Quits: masterbuilder (~user@user/masterbuilder) (Remote host closed the connection)
[07:11:35] *** Joins: nightstrike (uid487@id-487.uxbridge.irccloud.com)
[07:12:55] <Thedarkb1> Can you initialise a flexible array member using a compound literal?
[07:13:01] <Thedarkb1> I'm guessing you can't?
[07:13:53] *** Joins: rgrinberg (~textual@187.223.144.204)
[07:17:32] *** Joins: dave0 (~davezero@069.d.003.ncl.iprimus.net.au)
[07:19:33] *** Quits: ChromaCat248 (~ChromaCat@user/chromacat248) (Remote host closed the connection)
[07:20:51] <Thedarkb1> Hm, there's a GCC extension for it.
[07:21:32] <dave0> maw
[07:23:17] *** Quits: chenqisu1 (~chenqisu1@183.217.200.156) (Ping timeout: 256 seconds)
[07:24:49] *** Joins: perrierjouet (~perrier-j@modemcable012.251-130-66.mc.videotron.ca)
[07:25:31] *** Joins: kitsunenokenja (~kitsunech@68.91.220.96)
[07:26:56] *** Quits: seninha (~seninha@user/seninha) (Remote host closed the connection)
[07:27:49] *** Quits: earnest (~earnest@user/earnestly) (Ping timeout: 256 seconds)
[07:32:41] <floatcomplex> Thedarkb1: link?
[07:33:35] <Thedarkb1> https://gcc.gnu.org/onlinedocs/gcc/Zero-Length.html
[07:33:45] *** Joins: sdfgsdfg (~sdfgsdfg@user/sdfgsdfg)
[07:35:08] *** Joins: sunmountain (~sunmounta@206.217.205.57)
[07:36:01] *** Quits: supakeen (~user@python/site-packages/supakeen) (Quit: WeeChat 3.3)
[07:36:31] *** Joins: supakeen (~user@python/site-packages/supakeen)
[07:39:16] *** Joins: ent58 (~ent58@rrcs-97-76-214-244.se.biz.rr.com)
[07:43:49] *** Quits: Macuser (~Macuser@216.30.159.201) (Quit: My MacBook has gone to sleep. ZZZzzz…)
[07:45:48] <fizzie> The GCC extension description also has a funky workaround, which I've always wondered whether it's strictly conforming.
[07:46:12] <fizzie> Used to think it maybe was, but with the recent discussion on FAMs that start "inside" the struct, maybe it isn't.
[07:46:52] *** Quits: Inline (~Inline@2a02:908:1252:7a80::fb) (Ping timeout: 268 seconds)
[07:48:28] *** Quits: ent58 (~ent58@rrcs-97-76-214-244.se.biz.rr.com) (Quit: Client closed)
[07:51:41] <fizzie> Yeah, it's definitely not equivalent.
[07:52:28] *** Joins: ent58 (~ent58@rrcs-97-76-214-244.se.biz.rr.com)
[07:52:41] <fizzie> https://gcc.godbolt.org/z/8EKdYTdnd -- probably technically qualifies as a documentation bug.
[07:52:49] *** Quits: eelstrebor (~eelstrebo@198-178-29-136.scb.ne.static.allophone.net) (Quit: Ex-Chat)
[07:52:59] *** Quits: rgrinberg (~textual@187.223.144.204) (Ping timeout: 252 seconds)
[07:54:01] <fizzie> I think it's probably still fine(-ish) for the purposes of allocating uninitialized space for the FAM in the declaration, but it's not okay for actually initializing its contents.
[07:54:12] <ent58> oh wait that's an interesting one
[07:54:18] <ent58> so that doesn't work as expected?
[07:55:21] <fizzie> Depends on what you expect. ;) But it doesn't work as claimed. The problem is that the position of the `char fam[];` in the first struct is not the same as the position of the `char fam_data[4];` in the wrapper struct.
[07:56:14] *** Joins: rgrinberg (~textual@187.223.248.37)
[07:56:54] <fizzie> Very similar to floatcomplex's example a day or two ago with code along the lines of `struct foo *p = malloc(sizeof *p + len); memcpy(p + sizeof *p, src, len);` which has the same assumption (FAM contents begin "after" the struct) and fails the same way.
[07:57:16] <fizzie> Er, s/p + sizeof \*p/p + 1/ of course.
[08:00:53] <ent58> that's really intruiging
[08:01:17] <ent58> basically is it such that the standard doesn't define the layout of where a FAM goes?
[08:03:59] <ent58> ah. the whole thing is an extension, just needed to read a little
[08:08:45] *** Quits: luizfrds (~Luiz@152.250.243.147) (Ping timeout: 252 seconds)
[08:17:02] <ent58> fizzie: picking your brain a little; is there any purely standard way (without specifying position independent code generation in the compiler) to ensure that a particular function is functionally position independent? Would it be reasonable to expect a function with no references to globals, imported or linked functions, etc would be inherently
[08:17:03] <ent58> position independent? Or is that something that can never be assumed in principle without foreknowledge of the architecture?
[08:18:17] <ent58> I've tried verifying this kind of assumption before and looking around, but maybe someone's encountered this before
[08:19:30] *** Quits: ioxzev1z (~ioxzev1z@user/ioxzev1z) (Quit: Leaving)
[08:19:57] *** Quits: rgrinberg (~textual@187.223.248.37) (Ping timeout: 256 seconds)
[08:21:35] *** Quits: alch (~alch@151.38.99.108) (Read error: Connection reset by peer)
[08:23:40] *** Joins: jmiehe1 (~Thunderbi@user/jmiehe)
[08:25:03] *** Quits: jmiehe (~Thunderbi@user/jmiehe) (Ping timeout: 256 seconds)
[08:25:03] *** jmiehe1 is now known as jmiehe
[08:25:19] *** Quits: CaryHartline (~CaryHartl@2603-8080-6a0e-8d88-50fd-43b5-7857-81ac.res6.spectrum.com) (Remote host closed the connection)
[08:25:46] *** Joins: alch (~alch@151.68.108.145)
[08:26:36] *** Quits: nightstrike (uid487@id-487.uxbridge.irccloud.com) ()
[08:30:45] *** Joins: snickerbockers (sid210497@id-210497.ilkley.irccloud.com)
[08:31:51] *** Quits: johnnyreb (~tth@user/johnnyreb) (Ping timeout: 256 seconds)
[08:33:22] *** Quits: AmR (~AmREiSa@156.199.223.24) (Quit: Konversation terminated!)
[08:34:17] *** Joins: johnnyreb (~tth@user/johnnyreb)
[08:35:05] *** Quits: [R] (~rs@genoce.org) (Remote host closed the connection)
[08:35:12] *** Joins: [R] (~rs@genoce.org)
[08:35:13] *** Joins: rgrinberg (~textual@187.223.250.159)
[08:41:01] *** Quits: paravida (~myChateau@71-208-95-145.ftmy.qwest.net) (Ping timeout: 252 seconds)
[08:47:41] *** Joins: gco (~gco@2601:647:5a00:223:91f0:347:aafc:c5ef)
[08:51:08] *** Joins: nostart (~nostar@68.51.221.108)
[08:52:04] *** Quits: nostar (~nostar@68.51.221.108) (Read error: Connection reset by peer)
[08:52:56] *** Quits: unixpro1970 (~unixpro19@c-73-181-185-205.hsd1.wa.comcast.net) (Ping timeout: 252 seconds)
[08:57:18] *** Quits: kurahaupo_ (~kurahaupo@pa49-195-154-60.pa.nsw.optusnet.com.au) (Read error: Connection reset by peer)
[08:57:33] *** Joins: kurahaupo (~kurahaupo@pa49-195-154-60.pa.nsw.optusnet.com.au)
[08:59:32] *** Quits: rgrinberg (~textual@187.223.250.159) (Ping timeout: 252 seconds)
[09:00:14] *** Joins: bogdomania (bogdomania@2a02:2f01:6713:d900:c2fc:3481:d73e:b4e1)
[09:01:06] *** Quits: bogdomania (bogdomania@2a02:2f01:6713:d900:c2fc:3481:d73e:b4e1) (Changing host)
[09:01:06] *** Joins: bogdomania (bogdomania@user/bogdomania)
[09:02:56] *** Joins: unixpro1970 (~unixpro19@c-73-181-185-205.hsd1.wa.comcast.net)
[09:06:32] <Feuermagier> what exactly is the content of the https://refspecs.linuxfoundation.org/LSB_1.1.0/gLSB/baselib--io-2-1-stdout--.html memory region based on?
[09:06:45] <Feuermagier> I need to guess it for a CTF
[09:06:46] *** Joins: kst (~user@cpe-70-95-182-43.san.res.rr.com)
[09:07:00] <Feuermagier> or more specifically, I need to overwrite it
[09:07:13] *** Joins: rgrinberg (~textual@187.223.250.159)
[09:07:47] *** Quits: kitsunenokenja (~kitsunech@68.91.220.96) (Ping timeout: 252 seconds)
[09:10:52] *** Quits: monkey_ (~user@190.104.116.153) (Remote host closed the connection)
[09:12:39] *** Quits: bruda (~bruda@172.58.60.98) (Ping timeout: 256 seconds)
[09:13:50] *** Quits: CormacAttack (~mac@144.62.50.200) (Quit: WeeChat 3.3)
[09:17:46] *** Joins: chenqisu1 (~chenqisu1@183.217.200.156)
[09:20:42] *** Quits: rgrinberg (~textual@187.223.250.159) (Read error: Connection reset by peer)
[09:21:57] *** Joins: rgrinberg (~textual@187.223.144.204)
[09:21:59] *** Quits: nostart (~nostar@68.51.221.108) (Quit: Leaving)
[09:22:09] *** Quits: harveypwca (~harveypwc@2601:246:c180:a570:3828:d8:e523:3f67) (Quit: Leaving)
[09:26:53] *** Quits: kurahaupo (~kurahaupo@pa49-195-154-60.pa.nsw.optusnet.com.au) (Ping timeout: 256 seconds)
[09:31:26] *** Quits: rgrinberg (~textual@187.223.144.204) (Ping timeout: 252 seconds)
[09:34:20] *** Joins: frost (~frost@user/frost)
[09:40:24] *** Joins: missogra (~missogra@dynamic-095-112-110-174.95.112.pool.telefonica.de)
[09:49:22] *** Joins: Guest22 (~Guest22@213.188.161.32)
[09:49:43] <Guest22> hello
[09:50:04] *** Quits: Zambyte (~Zambyte@cpe-104-228-60-14.nycap.res.rr.com) (Quit: leaving)
[09:52:45] *** Joins: kdc (~kdc@196.211.197.159)
[09:52:46] *** Joins: SGautam (uid286066@id-286066.ilkley.irccloud.com)
[09:53:30] *** Quits: kdc (~kdc@196.211.197.159) (Client Quit)
[09:57:29] *** Joins: nostar (~nostar@103.14.26.142)
[10:01:48] *** Quits: ferdna (~ferdna@user/ferdna) (Quit: Leaving)
[10:03:39] *** Quits: boB_K7IQ (~boB_K7IQ@152.44.147.180) (Ping timeout: 256 seconds)
[10:03:48] *** Joins: karakedi (~eAC53C340@user/karakedi)
[10:04:01] *** Quits: Guest22 (~Guest22@213.188.161.32) (Quit: Client closed)
[10:04:37] *** Quits: wroathe (~wroathe@user/wroathe) (Ping timeout: 252 seconds)
[10:04:43] *** Joins: boB_K7IQ (~boB_K7IQ@152.44.147.180)
[10:06:34] *** Joins: donald1 (~donald@2a01:e0a:95e:7ca0:a8a6:d395:d8a8:8473)
[10:07:54] *** Joins: wwilly (~wwilly@lfbn-str-1-375-81.w86-243.abo.wanadoo.fr)
[10:10:02] <donald1> Hello. I just finished to write my first proof for frama-C in a function. This function is actually in a program of 10 years old and hundreds of files. I was working with eclipse. How to test it?
[10:10:25] *** Joins: vim_fans_ (~pi@user/vim-fans/x-3284168)
[10:10:32] <donald1> I mean I can not use frama-c-gui for a such long program
[10:11:30] *** Quits: hecanjog (~hecanjog@2a01:4f9:6a:5326::2) (Quit: WeeChat 3.0)
[10:12:43] *** Quits: vim_fans (~pi@user/vim-fans/x-3284168) (Ping timeout: 256 seconds)
[10:18:24] *** Quits: shailangsa (~shailangs@host86-162-150-209.range86-162.btcentralplus.com) (Ping timeout: 265 seconds)
[10:19:07] *** Quits: Hexmind (~Hexmind@modemcable049.25-131-66.mc.videotron.ca) (Quit: Leaving)
[10:20:39] *** Quits: Techcable (~Techcable@168.235.93.147) (Ping timeout: 256 seconds)
[10:25:23] *** Quits: Norkle (~norkle@admin.nasa-g0v.com) (Quit: Changing server)
[10:25:29] *** Joins: norkle (~norkle@admin.nasa-g0v.com)
[10:26:04] <donald1> Is it hard?*
[10:26:13] <donald1> I just want to launch it
[10:27:37] *** Joins: rgrinberg (~textual@187.223.250.159)
[10:30:51] *** norkle is now known as Norkle
[10:33:02] *** Joins: node1 (~node1@user/node1)
[10:37:30] *** Quits: node1 (~node1@user/node1) (Client Quit)
[10:37:39] *** Quits: rgrinberg (~textual@187.223.250.159) (Ping timeout: 256 seconds)
[10:37:42] *** Joins: node1 (~node1@user/node1)
[10:37:43] <donald1> Hello. I can not open a new project with the frama-c gui: Frama-C aborted invalid object input. Reverting to previous state. I am not sure if I can open a sngle file.
[10:41:19] *** Joins: shailangsa (~shailangs@host86-186-142-82.range86-186.btcentralplus.com)
[10:42:24] *** Quits: wwilly (~wwilly@lfbn-str-1-375-81.w86-243.abo.wanadoo.fr) (Remote host closed the connection)
[10:42:43] *** Joins: wwilly (~wwilly@lfbn-str-1-375-81.w86-243.abo.wanadoo.fr)
[10:46:52] *** Quits: missogra (~missogra@dynamic-095-112-110-174.95.112.pool.telefonica.de) (Quit: Leaving)
[10:51:57] *** Joins: rgrinberg (~textual@187.223.250.159)
[10:52:16] *** Joins: hecanjog (~hecanjog@2a01:4f9:6a:5326::2)
[10:55:52] <nitrix> No idea what a fragma-c is.
[10:56:27] <nitrix> If you have a question about the C programming language we'll be happy to help.
[10:56:55] *** Quits: nuxil (~nuxil@141.195.51.213) (Ping timeout: 256 seconds)
[10:57:07] <ent58> appears to be a source analyzer
[10:57:29] <ent58> Static analysis of code for correctness I guess
[11:02:57] *** Joins: kurahaupo (~kurahaupo@pa49-195-154-60.pa.nsw.optusnet.com.au)
[11:07:39] *** Quits: fcresende (~quassel@vps35015.publiccloud.com.br) (Quit: No Ping reply in 180 seconds.)
[11:07:59] *** Joins: fcresende (~quassel@vps35015.publiccloud.com.br)
[11:11:09] *** Joins: whatsupdoc (uid509081@id-509081.hampstead.irccloud.com)
[11:13:17] *** Joins: the_lanetly_052_ (~the_lanet@185.30.89.11)
[11:14:31] <caze> ent58: Functions aren't objects, so they don't have "positions".
[11:14:48] *** Quits: sdfgsdfg (~sdfgsdfg@user/sdfgsdfg) (Quit: ZzzZ)
[11:16:47] *** Joins: meator (~meator@user/meator)
[11:17:04] *** Quits: Satin (uid193953@id-193953.ilkley.irccloud.com) (Quit: Connection closed for inactivity)
[11:17:20] *** Quits: node1 (~node1@user/node1) (Ping timeout: 256 seconds)
[11:20:11] <ent58> I'm not sure I understand what you mean...of course the concept that a function can be pointed to means they have a "position" in that sense, but do you mean they they don't have some other attribute?
[11:20:54] *** Quits: dogbert2 (~Bill@ip68-105-189-91.lv.lv.cox.net) (Remote host closed the connection)
[11:21:10] *** Joins: dogbert2 (~Bill@ip68-105-189-91.lv.lv.cox.net)
[11:21:26] <caze> ent58: A function pointer is just an alias. You can't perform pointer arithmetic on a function pointer.
[11:21:55] *** Quits: rgrinberg (~textual@187.223.250.159) (Ping timeout: 256 seconds)
[11:22:13] *** Joins: CatCow (~wtf_over@c-73-96-109-206.hsd1.or.comcast.net)
[11:22:21] <caze> ent58: Functions don't occupy memory, or have a size.
[11:22:41] <ent58> so, essentially...what I'm asking for doesn't even exist as a concept at the level the language is operating, and so there are near zero guarantees about the nature of that code?
[11:23:23] <caze> ent58: Yes. That's why things like Harvard architectures are easy to implement C on.
[11:24:54] *** Joins: rgrinberg (~textual@187.223.250.159)
[11:26:05] <ent58> if you can assume that the underlying machine is von-neumann, is there some set of basic guarantees that hold? or is that also completely up to the implementation?
[11:26:34] <caze> You can't assume the underlying machine is von-neumann.
[11:27:27] <ent58> The way that came across in my head is "we were never at war with Eastasia and it was very funny
[11:27:31] *** Quits: frost (~frost@user/frost) (Ping timeout: 256 seconds)
[11:27:37] <ent58> But I understand
[11:27:57] <ent58> so my question is basically unanswerable
[11:28:35] <caze> ent58: The answer is no.
[11:29:22] *** Joins: Libero (~Libero@130.43.23.56.dsl.dyn.forthnet.gr)
[11:30:02] *** Joins: mokulus_ (~mokulus@user/mokulus)
[11:31:54] *** Joins: fbiagent_ (~fbiagent@user/fbiagent)
[11:32:38] *** Joins: node1 (~node1@user/node1)
[11:34:10] <ent58> then the type of guarantee I'm looking for is only found in a compiler and platform dependent way...and there's really no getting around that
[11:34:19] *** Quits: fbiagent (~fbiagent@user/fbiagent) (Ping timeout: 256 seconds)
[11:34:41] <ent58> That makes it easier to rethink how I want my concept to work, but it is a bit unsatisfying
[11:36:26] <ent58> I appreciate your help caze, thank you
[11:37:48] *** Joins: bookworm_ (~bookworm@thelounge/maintainer/bookworm)
[11:38:21] *** Quits: Xeha (~Xeha@dynamic-82-220-88-142.ftth.solnet.ch) (Ping timeout: 256 seconds)
[11:38:55] *** Quits: the_lanetly_052_ (~the_lanet@185.30.89.11) (Ping timeout: 256 seconds)
[11:38:55] *** Quits: bookworm (~bookworm@thelounge/maintainer/bookworm) (Ping timeout: 256 seconds)
[11:39:59] *** Quits: MrFantastik (~f@c-98-210-128-179.hsd1.ca.comcast.net) (Ping timeout: 256 seconds)
[11:40:14] *** Joins: Xeha (~Xeha@dynamic-82-220-88-142.ftth.solnet.ch)
[11:41:37] <fluter> caze: What is von-neumann?
[11:43:00] <dave0> code and data in the same address space, as opposed to harvard architecture where code and data occupy separate address spaces
[11:43:23] <ent58> "all compilers on one architecture would only transform this code one way" is sort of an engineering guarantee but not a language one
[11:43:31] <ent58> but I don't even think I get that either
[11:43:49] *** Quits: mokulus_ (~mokulus@user/mokulus) (Quit: WeeChat 3.3)
[11:44:45] *** Quits: gco (~gco@2601:647:5a00:223:91f0:347:aafc:c5ef) (Quit: ZZZzzz…)
[11:45:38] *** Quits: blyat-73 (~hjgkjhgkj@46.235.96.249) (Ping timeout: 252 seconds)
[11:46:24] *** Quits: Betal (~Betal@user/betal) (Quit: WeeChat 3.3)
[11:46:26] <dave0> fluter: von neuman architecture lets you for example load machine code from disk into memory and execute it
[11:47:06] <fluter> which one is better? von neumann or harvard?
[11:48:52] <ent58> practically speaking von-neumann is the only type that would allow you to create new programs via a program on that machine
[11:49:03] <ent58> (maybe?)
[11:49:27] <ent58> so, for general purpose computing, von neumann is probably the only thing you're going to see
[11:49:43] <ent58> but systems that are locked down are probably far better off the other way
[11:49:50] *** Joins: mokulus_ (~mokulus@user/mokulus)
[11:50:51] *** Joins: aradesh (~aradesh@user/aradesh)
[11:52:04] <dave0> fluter: harvard means you have a fixed set of tasks and you can't change the code... good for a washing machine or toaster
[11:52:41] <dave0> fluter: von neuman lets you load and unload tasks whenever you like.. good for apps on a phone
[11:53:27] *** Quits: mokulus_ (~mokulus@user/mokulus) (Client Quit)
[11:54:23] <fluter> oh!
[11:54:40] <fluter> so you mean my appliances are harvard machines?
[11:54:48] <fluter> i never thought they are so advanced! xD
[11:54:54] <ent58> lol
[11:58:18] *** Joins: nostoi (~nostoi@178.red-88-19-233.staticip.rima-tde.net)
[12:03:17] *** Quits: nostoi (~nostoi@178.red-88-19-233.staticip.rima-tde.net) (Quit: Leaving...)
[12:03:17] <caze> fluter: Do you mean your sister?
[12:03:33] <ent58> :O
[12:04:21] *** Quits: rgrinberg (~textual@187.223.250.159) (Ping timeout: 256 seconds)
[12:04:32] <fluter> caze: No, I mean I have your sister.
[12:04:55] *** Quits: soapsudsxx (~soapsudsx@209.221.40.158) (Remote host closed the connection)
[12:05:02] <fluter> caze is still a racist after all these years. :O
[12:05:13] *** Quits: skapata (~Skapata@user/skapata) (Remote host closed the connection)
[12:05:14] <ent58> wh-
[12:05:38] *** Joins: Serpent7776 (~Serpent77@90-156-31-193.internetia.net.pl)
[12:07:15] *** Quits: wwilly (~wwilly@lfbn-str-1-375-81.w86-243.abo.wanadoo.fr) (Ping timeout: 256 seconds)
[12:08:15] *** Joins: rgrinberg (~textual@187.223.248.37)
[12:08:47] *** Joins: chenqisu12 (~chenqisu1@183.217.201.63)
[12:11:09] *** Quits: chenqisu1 (~chenqisu1@183.217.200.156) (Ping timeout: 256 seconds)
[12:12:57] *** Quits: rgrinberg (~textual@187.223.248.37) (Ping timeout: 252 seconds)
[12:13:17] *** Joins: sdfgsdfg (~sdfgsdfg@user/sdfgsdfg)
[12:13:53] *** Joins: Burgundy (~yomon@79.115.213.171)
[12:18:04] *** Joins: wwilly (~wwilly@lfbn-str-1-375-81.w86-243.abo.wanadoo.fr)
[12:21:07] <caze> fluter: You are not a race.
[12:21:08] *** Quits: alch (~alch@151.68.108.145) (Read error: Connection reset by peer)
[12:22:16] <ent58> you two know each other?
[12:22:52] <ent58> super spicy if you didn't
[12:26:10] *** Joins: alch (~alch@151.36.120.210)
[12:27:15] *** Joins: LucaTM (~LucaTM@user/lucatm)
[12:28:56] *** Joins: Techcable (~Techcable@168.235.93.147)
[12:29:19] *** Joins: akahs (~Shaka@user/shaka)
[12:30:14] *** Quits: M101donutman[m] (~M101donut@2001:470:69fc:105::d51) (Quit: You have been kicked for being idle)
[12:31:32] *** Quits: SGautam (uid286066@id-286066.ilkley.irccloud.com) (Quit: Connection closed for inactivity)
[12:32:26] *** Parts: akahs (~Shaka@user/shaka) ()
[12:34:35] *** Quits: joedoe47 (~weechat@c-98-254-188-143.hsd1.fl.comcast.net) (Ping timeout: 252 seconds)
[12:35:14] *** Joins: joedoe47 (~weechat@c-98-254-188-143.hsd1.fl.comcast.net)
[12:40:17] <fluter> caze: I'm not as white as you are.
[12:40:46] *** Joins: mahmutov (~mahmutov@37.155.19.7)
[12:43:01] *** Quits: wwilly (~wwilly@lfbn-str-1-375-81.w86-243.abo.wanadoo.fr) (Ping timeout: 252 seconds)
[12:46:55] *** Joins: the_lanetly_052_ (~the_lanet@185.30.89.11)
[12:51:50] *** Joins: earnest (~earnest@user/earnestly)
[12:52:08] *** Joins: mrig (~AdiIRC@user/mrig)
[12:52:11] *** Quits: donald1 (~donald@2a01:e0a:95e:7ca0:a8a6:d395:d8a8:8473) (Ping timeout: 252 seconds)
[12:52:11] *** Quits: mahmutov (~mahmutov@37.155.19.7) (Ping timeout: 252 seconds)
[12:56:36] *** Joins: tech_exorcist (txrcst@user/tech-exorcist/x-0447479)
[13:06:09] *** Joins: slidercrank (~slidercra@user/slidercrank)
[13:08:15] <NRK[m]> o_O what's going down here?
[13:08:58] <ent58> I don't know
[13:09:49] *** Quits: tech_exorcist (txrcst@user/tech-exorcist/x-0447479) (Quit: Goodbye)
[13:10:06] *** Joins: tech_exorcist (txrcst@user/tech-exorcist/x-0447479)
[13:11:43] *** Joins: serbest (~serbest@user/serbest)
[13:12:39] *** Joins: fmsd__ (~no@196.64.32.230)
[13:15:11] *** Joins: wwilly (~wwilly@lfbn-str-1-375-81.w86-243.abo.wanadoo.fr)
[13:18:35] *** Quits: scalablecory (~phrosty@c-73-225-175-19.hsd1.wa.comcast.net) (Ping timeout: 252 seconds)
[13:20:02] *** Quits: overrider (~overrider@user/overrider) (Quit: Goodbye...)
[13:25:19] *** Joins: Smilex (~ian@D470973B.rev.sefiber.dk)
[13:26:29] *** Joins: mahmutov (~mahmutov@37.155.19.7)
[13:26:49] <Smilex> Hey I'm trying to work with timespec, and have included time.h, however I still get this error "error: storage size of ‘g_paint_last_access’ isn’t known", when g_paint_last_access is defined as "struct timespec g_paint_last_access". Anyone here know why?
[13:29:58] <Smilex> turns out it was because I was using C99
[13:30:09] <ent58> that's really odd
[13:30:22] <ent58> what compiler are you using
[13:30:30] <Smilex> gcc
[13:31:01] <ent58> and just a simple #include at the top of your source?
[13:31:04] <Smilex> https://en.cppreference.com/w/c/chrono/timespec - this says it's defined since C11
[13:31:05] <ent58> or is it a bigger project
[13:31:18] <Smilex> I was forcing it to be C99
[13:31:20] <fmsd__> you probably have to include the header where struct timespec exists
[13:31:22] <ent58> oh I see
[13:32:11] <Smilex> error: invalid initializer
[13:32:13] <Smilex>                  struct timespec mtime = st.st_mtime;
[13:32:15] <Smilex>                                          ^~
[13:32:17] <Smilex> now I get this error
[13:32:45] *** Quits: mahmutov (~mahmutov@37.155.19.7) (Ping timeout: 256 seconds)
[13:33:06] *** Quits: whatsupdoc (uid509081@id-509081.hampstead.irccloud.com) (Quit: Connection closed for inactivity)
[13:35:55] <Smilex> nothing makes any sense. "struct timespec mtime; mtime.tv_sec = st.st_mtime;" works. But st.st_mtime is supposed to be a struct timespec since linux 2.6
[13:36:19] <fmsd__> whats the type of st.st_mtime
[13:36:58] <Smilex> don't know
[13:37:21] *** Joins: Lord_of_Life_ (~Lord@user/lord-of-life/x-2819915)
[13:38:23] *** Quits: Lord_of_Life (~Lord@user/lord-of-life/x-2819915) (Ping timeout: 252 seconds)
[13:38:25] <fmsd__> show us the code?
[13:38:35] *** Quits: tech_exorcist (txrcst@user/tech-exorcist/x-0447479) (Remote host closed the connection)
[13:38:52] <Smilex> it's so confusing because the man pages say it's called .st_mtim in the stat structure, but my compiler complains that that doesn't exist
[13:40:11] *** Lord_of_Life_ is now known as Lord_of_Life
[13:40:13] <Smilex> https://pastebin.com/dvPAVbqc - This compiles
[13:40:20] <Smilex> haven't tested it yet, because that's not easy
[13:42:40] *** Quits: arinov (~arinov@213.194.126.155) (Quit: WeeChat 3.3)
[13:46:21] *** Quits: fmsd__ (~no@196.64.32.230) (Ping timeout: 256 seconds)
[13:48:47] *** Joins: kenanmarasli (~kenanmara@user/kenanmarasli)
[13:50:30] *** Joins: magla (~gelignite@55d41880.access.ecotel.net)
[13:52:40] *** Joins: arinov (~arinov@213.194.126.155)
[13:53:55] <kurahaupo> Smilex: Linux has at least 5 different stat syscalls, with different struct stat definitions (because99,99 they're different definitions)
[13:53:59] *** Joins: steve_ (~steve@ool-182c2b80.dyn.optonline.net)
[13:55:09] *** Joins: X-Scale` (~ARM@92.250.96.131)
[13:56:44] <kurahaupo> Some have struct timespec for atime, ctime & mtime; some have time_t for those, some have time_t for the integer seconds plus separate nsec variants for the subsecond components (6 fields in all)
[13:58:15] *** Quits: X-Scale (~ARM@92.250.98.59) (Ping timeout: 256 seconds)
[13:58:15] *** X-Scale` is now known as X-Scale
[13:59:30] *** bookworm_ is now known as bookworm
[13:59:46] <kurahaupo> Smilex: You should use .st_mtime, plus .st_mtime_nsec if available. Those may be emulated using struct timespec st_mtim 
[14:00:00] <kurahaupo> but you shouldn't assume the latter exists
[14:03:21] *** Quits: Zenton (~user@user/zenton) (Ping timeout: 256 seconds)
[14:05:02] *** Quits: ent58 (~ent58@rrcs-97-76-214-244.se.biz.rr.com) (Quit: Client closed)
[14:09:54] <Smilex> kurahaupo: thanks!
[14:10:17] *** Quits: zwr (~zwr@2804:d45:b966:fb00:c634:1c10:a560:ee24) (Ping timeout: 252 seconds)
[14:10:28] *** Joins: Inline (~Inline@2a02:908:1252:7a80::133)
[14:10:46] *** Joins: zwr (~zwr@2804:d45:b966:fb00:ed3f:2af5:12bc:dd1e)
[14:13:07] *** Joins: plastico (~plastico@neomutt/plastico)
[14:13:16] *** Quits: Libero (~Libero@130.43.23.56.dsl.dyn.forthnet.gr) (Remote host closed the connection)
[14:13:44] *** Joins: Libero (~Libero@130.43.23.56.dsl.dyn.forthnet.gr)
[14:17:21] *** Joins: pretty_dumm_guy (trottel@gateway/vpn/protonvpn/prettydummguy/x-88029655)
[14:19:29] *** Quits: gitargy (~gitargy@76.78.94.79) (Remote host closed the connection)
[14:23:02] *** Joins: basedovertime (~basedbase@197.240.2.129)
[14:23:20] *** Joins: the_lanetly_052 (~the_lanet@194.135.154.236)
[14:23:47] *** Quits: sdfgsdfg (~sdfgsdfg@user/sdfgsdfg) (Quit: ZzzZ)
[14:24:01] *** Joins: pulse (~pulse@user/pulse)
[14:24:53] *** Quits: the_lanetly_052_ (~the_lanet@185.30.89.11) (Ping timeout: 256 seconds)
[14:25:14] *** Quits: Starfoxxes (~Starfoxxe@2a02:8070:5390:d00:12bf:48ff:feb8:38c8) (Ping timeout: 268 seconds)
[14:26:05] *** Quits: Libero (~Libero@130.43.23.56.dsl.dyn.forthnet.gr) (Remote host closed the connection)
[14:27:08] *** Joins: Libero (~Libero@130.43.23.56.dsl.dyn.forthnet.gr)
[14:27:20] *** Joins: ioxzev1z (~ioxzev1z@user/ioxzev1z)
[14:30:05] *** Quits: slidercrank (~slidercra@user/slidercrank) (Ping timeout: 252 seconds)
[14:30:14] *** Quits: csrf (~csrf@user/csrf) (Quit: ZNC 1.7.2+deb3 - https://znc.in)
[14:30:45] *** Quits: AbleBacon (~AbleBacon@user/AbleBacon) (Read error: Connection reset by peer)
[14:30:59] *** Joins: csrf (~csrf@user/csrf)
[14:32:05] *** Joins: sdfgsdfg (~sdfgsdfg@user/sdfgsdfg)
[14:33:53] *** Quits: Libero (~Libero@130.43.23.56.dsl.dyn.forthnet.gr) (Remote host closed the connection)
[14:34:23] *** Joins: Libero (~Libero@130.43.23.56.dsl.dyn.forthnet.gr)
[14:36:22] *** Joins: Kev_ (~Kev@2a01cb0400149f0040d78947317a0a93.ipv6.abo.wanadoo.fr)
[14:38:41] *** Joins: jjido (~Denis@90.213.58.125)
[14:39:15] *** Quits: kurahaupo (~kurahaupo@pa49-195-154-60.pa.nsw.optusnet.com.au) (Ping timeout: 252 seconds)
[14:42:59] *** Quits: rkta (~rkta_@2a00:f48:1003:1::8bee:ec40) (Quit: start keylogger)
[14:51:45] *** Quits: Inline (~Inline@2a02:908:1252:7a80::133) (Ping timeout: 268 seconds)
[14:57:11] *** Joins: tech_exorcist (txrcst@user/tech-exorcist/x-0447479)
[14:57:31] *** Joins: Starfoxxes (~Starfoxxe@2a02:8070:5390:d00:12bf:48ff:feb8:38c8)
[14:57:33] *** Joins: zer0bitz (~zer0bitz@dsl-hkibng32-54fbfb-173.dhcp.inet.fi)
[14:59:09] *** Joins: rkta_ (~rkta@2a00:f48:1003:1::8bee:ec40)
[15:00:22] *** Joins: fmsd__ (~no@196.64.32.230)
[15:03:29] *** Xgc__ is now known as Xgc
[15:05:26] *** Joins: Zenton (~user@user/zenton)
[15:07:57] *** Joins: fmsd (~no@160.177.22.32)
[15:09:14] *** Joins: Inline (~Inline@2a02:908:1252:7a80::133)
[15:09:21] *** Joins: fmsd___ (~no@196.65.63.248)
[15:09:41] *** Quits: fmsd__ (~no@196.64.32.230) (Ping timeout: 252 seconds)
[15:10:43] *** Quits: rkta_ (~rkta@2a00:f48:1003:1::8bee:ec40) (Quit: zzz)
[15:11:09] *** Quits: clamiax (~clamiax@net-93-144-125-193.cust.vodafonedsl.it) (Ping timeout: 252 seconds)
[15:12:33] *** Quits: fmsd (~no@160.177.22.32) (Ping timeout: 256 seconds)
[15:14:03] *** Quits: Libero (~Libero@130.43.23.56.dsl.dyn.forthnet.gr) (Quit: Leaving)
[15:16:52] *** Joins: gproto23 (~gproto23@user/gproto23)
[15:21:51] *** Quits: Atque (~Atque@user/atque) (Quit: ...)
[15:23:53] *** Quits: arinov (~arinov@213.194.126.155) (Ping timeout: 256 seconds)
[15:25:05] *** Quits: johnnyreb (~tth@user/johnnyreb) (Ping timeout: 252 seconds)
[15:25:54] *** Joins: johnnyreb (~tth@user/johnnyreb)
[15:27:22] <NRK[m]> this code compiles with gcc but errors on clang https://dpaste.com/G6RTVUAK5 , which one of the compiler is in the wrong here?
[15:27:24] *** Joins: rkta_ (~rkta@2001:4ba0:cafe:eaf::1)
[15:27:35] *** Quits: sdfgsdfg (~sdfgsdfg@user/sdfgsdfg) (Quit: ZzzZ)
[15:33:15] *** Joins: based-overtime (~basedbase@197.240.2.129)
[15:33:22] *** Quits: jmiehe (~Thunderbi@user/jmiehe) (Quit: jmiehe)
[15:34:07] *** Joins: kurahaupo (~kurahaupo@pa49-195-154-60.pa.nsw.optusnet.com.au)
[15:35:42] *** Joins: Libero (~Libero@130.43.23.56.dsl.dyn.forthnet.gr)
[15:36:01] *** Quits: supakeen (~user@python/site-packages/supakeen) (Quit: WeeChat 3.3)
[15:36:31] *** Joins: supakeen (~user@python/site-packages/supakeen)
[15:36:49] *** Quits: basedovertime (~basedbase@197.240.2.129) (Ping timeout: 252 seconds)
[15:37:11] *** Quits: serbest (~serbest@user/serbest) (Ping timeout: 252 seconds)
[15:40:42] *** rkta_ is now known as rkta
[15:46:16] *** Quits: pflanze (~pflanze@5-168-208-80-pool.fiber.fcom.ch) (Remote host closed the connection)
[15:46:39] *** Joins: pflanze (~pflanze@5-168-208-80-pool.fiber.fcom.ch)
[15:49:21] <Wulf> NRK[m]: what's the error?
[15:51:57] *** Joins: bolovanos (~bolovanos@user/bolovanos)
[15:52:29] <pragma-> error: initializer element is not a compile-time constant
[15:52:29] <pragma-> static const struct st arr[] = { a, b };
[15:52:29] <pragma->                                  ^
[15:52:41] <Wulf> looks reasonable
[15:53:15] <pragma-> gcc doesn't error. builds successfully.
[15:53:27] <Wulf> I'd say both are correct and the code is wrong.
[15:53:28] *** Joins: random-nick (~random-ni@87.116.165.83)
[15:55:29] <pragma-> I'd concur. But I'd also say that a and b are well-defined at compile-time and I'd be annoyed by clang refusing to build it, especially if gcc is perfectly willing.
[15:56:05] <kurahaupo> It would help to see the definitions of a & b
[15:56:13] <pragma-> It's right there.
[15:56:13] <Wulf> kurahaupo: it's in the paste
[15:56:38] <pragma-> Oh, kurahaupo joined after the guy linked to it.
[15:56:44] <pragma-> ,recall NRK[m] 
[15:56:44] <candide> [29m22s ago] <N​RK[m]> this code compiles with gcc but errors on clang https://dpaste.com/G6RTVUAK5 , which one of the compiler is in the wrong here?
[15:56:53] <kurahaupo> thanks
[15:58:16] <kurahaupo> We all know the answer to this one, a variable is not a compile time constant, even if it has the "const" attribute
[15:58:35] <pragma-> gcc tolerates it!
[15:58:59] <kurahaupo> ("const" just means that WE are not allowed to change it, not that it cannot change.)
[15:59:11] *** Quits: johnnyreb (~tth@user/johnnyreb) (Ping timeout: 252 seconds)
[15:59:34] <Wulf> candide: const?
[15:59:34] <candide> const is http://publications.gbdirect.co.uk/c_book/chapter8/const_and_volatile.html - see section 8.4.1, http://c-faq.com/ansi/constmismatch.html
[16:00:14] <kurahaupo> It's still a variable, with an address. What we need is true labelled values99,99, like enums but more general.
[16:00:15] * dave0 casts away const.. now it's safe to change it
[16:00:18] *** Joins: night_wulfe_ (~wulfe@cpe-174-103-156-213.cinci.res.rr.com)
[16:00:47] * kurahaupo notices the sound of a ticking bomb coming from dave0's code
[16:01:07] *** Joins: johnnyreb (~tth@user/johnnyreb)
[16:01:08] <dave0> yeah but i didn't get a compiler error!
[16:02:12] <kurahaupo> dave0: Didn't you know that "code compiled successfully" is a diagnostic indicating the possible presence of UB?
[16:03:14] <dave0> nope!
[16:03:35] *** Quits: night_wulfe (~wulfe@cpe-174-103-156-213.cinci.res.rr.com) (Ping timeout: 252 seconds)
[16:03:38] <kurahaupo> The "no" error during compilation means bugs have been detected
[16:04:18] <pragma-> I do not write bugs. There are only undocumented features.
[16:04:40] *** Quits: jjido (~Denis@90.213.58.125) (Quit: My MacBook Air has gone to sleep. ZZZzzz…)
[16:04:51] <pragma-> If you didn't want those features you should have told me!
[16:04:54] <dave0> i read somewhere that end users like core dumps
[16:05:34] <kurahaupo> the "no" error stands for "Novel and Original behaviour"
[16:06:53] <kurahaupo> pragma-: unwanted feature: overflow while using a signed char to count to 300
[16:08:28] * pragma- checks design specs. App is specced for inputs up to 200. Why are you putting in 300? Use the app as it was intended!
[16:09:05] *** Quits: joedoe47 (~weechat@c-98-254-188-143.hsd1.fl.comcast.net) (Ping timeout: 252 seconds)
[16:09:24] *** Joins: joedoe47 (~weechat@c-98-254-188-143.hsd1.fl.comcast.net)
[16:10:46] * pragma- checks under notes for error-checking and error-handling. "Too expensive and slows things down. Our engineers are smart and know what inputs to use, don't worry about it."
[16:12:12] *** Quits: based-overtime (~basedbase@197.240.2.129) (Quit: Leaving)
[16:14:06] *** Joins: simon323 (~simon323@2409:8a34:468:83d0:78df:a3b:54ed:834b)
[16:14:18] *** Joins: Klinda (~superleag@user/klinda)
[16:14:34] *** Quits: ^tinyweasel^ (~weasel@user/tinyweasel/x-0495158) (K-Lined)
[16:16:07] <NRK[m]> i'm aware that const != constant expression, but gcc didn't even generate any warning
[16:17:08] <NRK[m]> and that's with `-Wall -std=c99 -pedantic`
[16:17:48] <pragma-> No -Wextra? 
[16:17:58] *** Joins: Viewday11 (~Viewday@user/viewday)
[16:18:19] <NRK[m]> also i see that you can use address of a static storage duration object in initialization. so that's why i was confused
[16:18:46] <NRK[m]> since the elements of a were a function pointer and an enum
[16:19:15] <NRK[m]> pragma- nop
[16:20:13] *** Joins: blindguard (~blindguar@2a02:908:1864:c200::12)
[16:20:38] <NRK[m]> well, doesn't matter in this case. still no warning even with -Wextra added
[16:21:22] *** Joins: Y4knotiS (~YaknotiS@cpc1-cmbg18-2-0-cust87.5-4.cable.virginm.net)
[16:21:35] *** Quits: alch (~alch@151.36.120.210) (Read error: Connection reset by peer)
[16:22:11] *** Joins: Viewday112 (~Viewday@user/viewday)
[16:24:29] *** Quits: Viewday11 (~Viewday@user/viewday) (Ping timeout: 252 seconds)
[16:24:29] *** Viewday112 is now known as Viewday11
[16:25:28] *** Joins: alch (~alch@151.36.113.104)
[16:25:54] *** Quits: TastyWiener95 (~uhhh3@user/tastywiener95) (Quit: Konversation terminated!)
[16:27:17] *** Joins: cmbengue (~Thunderbi@207.191.249.160)
[16:31:00] *** Quits: cmbengue (~Thunderbi@207.191.249.160) (Client Quit)
[16:32:34] *** Joins: jjido (~Denis@90.213.58.125)
[16:39:50] <macaw> Hi all. Is there a way to force C to treat as if it were another? GCC is angry at me for even trying to cast. I know how unclean it would be; I just need to test some hypothesis in my program.
[16:40:03] *** Joins: Torr (~Torr@user/torr)
[16:40:06] <macaw> s/in my/about my/
[16:40:52] <pragma-> Yes, you need to and then it will work.
[16:41:28] <macaw> DuckDuckGo doesn't help here. Just returns generic C# help... :angry:
[16:41:39] *** Quits: jjido (~Denis@90.213.58.125) (Quit: My MacBook Air has gone to sleep. ZZZzzz…)
[16:42:46] <macaw> Oh, major typo, I'm sorry - "Is there a way to force C to treat one type"*.
[16:43:56] <pragma-> You could `#define char int` or something.
[16:44:20] *** Quits: Lazenca (~lazenca@user/lazenca) (Remote host closed the connection)
[16:44:30] <dave0> use typedef to create an alias
[16:44:42] <pragma-> ,cc typedef char int;
[16:44:44] <candide> pragma-: error: two or more data types in declaration specifiers
[16:44:48] * pragma- stares at dave0
[16:45:05] <dave0> you didn't do it hard enough!
[16:45:18] <pragma-> ,cc TYPEDEF CHAR INT;
[16:45:20] <candide> pragma-: error: unknown type name 'TYPEDEF'
[16:45:23] <dave0> lol
[16:45:27] <macaw> :D
[16:47:22] <macaw> Wouldn't #define and typedef just create an alias?
[16:48:11] <macaw> I'd like to treat a Token* as a Token** for a sec, just to test if that'd fix a problem.
[16:48:36] <pragma-> #define replaces the text.
[16:48:55] <macaw> I realize.
[16:49:14] *** Quits: gproto23 (~gproto23@user/gproto23) (Ping timeout: 252 seconds)
[16:49:51] <pragma-> so if you want to experiment with changing the type signature of a thing in several places without having to edit each place, just put a T in each of those places and then use `#define T Token**` or `#define T Token*` or whatever you want to try out.
[16:51:00] <pragma-> Though I have to mention ,{tias} now.
[16:51:01] <candide> "Try It And See" may work in other languages, but not in C due to the nature of undefined behavior/unportable code. Such coding-by-experimentation often leads to situations such as "But it worked fine earlier!" and/or "But it worked on my machine!". https://ramblings.implicit.net/c/2014/04/20/c-is-not-a-try-it-and-see-language.html
[16:52:48] <macaw> Thanks pragma-, for explaining it so nicely, but I may have explained my problem incorrectly. In one source file, in a single function I need C to treat a `Token *` as a `Token **` and pass it to my function. A cast such as `(const Token **)tokenArray` does not work.
[16:52:56] *** Joins: Viewday119 (~Viewday@user/viewday)
[16:53:38] <macaw> candide: I know, and thanks for that advice. I have gdb attached to the program and rerun it after each compile.
[16:53:47] <candide> That's profoundly intriguing, m​acaw
[16:54:10] <macaw> What am I misunderstanding?
[16:54:11] *** Quits: Viewday11 (~Viewday@user/viewday) (Ping timeout: 252 seconds)
[16:54:12] *** Viewday119 is now known as Viewday11
[16:55:47] <macaw> candide: This is a program for personal use. (Basically, I'm forking a compiler to suit my own use and somethins isn't working as it's supposed to. I want to see if it'd behave as I want it to if it were a variable was a Token** type, but C really doesn't want to let me do that.
[16:55:54] <candide> m​acaw, Forget it!
[16:56:15] *** Quits: CatCow (~wtf_over@c-73-96-109-206.hsd1.or.comcast.net) (Quit: My MacBook Air has gone to sleep. ZZZzzz…)
[16:56:30] <pragma-> You seem to be misunderstanding the C type system and the layout of your data. One does not simply cast a pointer to something into a pointer to a pointer to something. Also, candide is a bot. I invoked it with the ,{} syntax in my message.
[16:56:44] <candide> p​ragma- is a bot!
[16:57:04] <gl> :)
[16:57:36] <macaw> Oh, '_' Now I know.
[16:57:38] <dave0> "one does my simply cast a pointer!"
[16:57:43] <dave0> not
[16:57:49] <dave0> sigh i fucked that up!
[16:57:57] <fcresende> macaw, maybe this?
[16:57:57] <fcresende> Token *foo;
[16:57:57] <fcresende> Token **bar = &foo;
[16:59:56] <macaw> Hm, but then bar would hold a pointer to a pointer of pointers (If my hypothesis is right, that foo is somehow badly mis-typed - as a Token* when it should be a Token**. This is what I'm trying to test.)
[17:00:07] <macaw> fcresende: ^
[17:01:11] <dave0> have you tried &
[17:01:15] <dave0> right
[17:01:39] <macaw> Eh, whatever. I'm just going to do some pointer math to do what I want. Thanks everyone for trying to help! :)
[17:02:06] <macaw> (And yes, I know that pointer math only works on `char *`s. ;) )
[17:02:25] <macaw> s/works/is defined/
[17:03:01] *** Joins: monkey_ (~user@190.104.116.153)
[17:05:15] *** Quits: baltazar (~baltazar@87-97-23-118.pool.digikabel.hu) (Ping timeout: 256 seconds)
[17:06:02] <fmsd___> what is this: (uint32_t)*((unsigned char*)foo)
[17:07:57] <pragma-> macaw: that's not true.
[17:08:10] <fcresende> macao, just `Token **bar = (void*)foo` should work
[17:08:11] <macaw> Is it?
[17:08:31] <macaw> fcresende: I'm going to try that.
[17:08:31] <pragma-> you can do arithmetic with any pointer.
[17:09:12] *** Quits: bolovanos (~bolovanos@user/bolovanos) (Quit: Leaving)
[17:09:21] <pragma-> the reason for using unsigned char * is to access the entire region bytewise
[17:09:42] *** Joins: gproto23 (~gproto23@user/gproto23)
[17:10:01] <pragma-> most of the time it doesn't make sense to access an object from any byte within it.
[17:11:25] <macaw> pragma-: For what I wanted to do here, it does, but yeah, You *should be* right, IIRC.
[17:13:33] <macaw> I don't remember what my deal was with `unsigned char *` in the past, but I remember clearly there was some undefined behavior in case you didn't use it.
[17:13:48] *** Joins: mahmutov (~mahmutov@37.155.19.7)
[17:15:11] *** Quits: vim_fans_ (~pi@user/vim-fans/x-3284168) (Quit: WeeChat 1.9.1)
[17:15:33] <macaw> fcresende: `error: invalid conversion from ‘void*’ to ‘Token**’ [-fpermissive]` :-(
[17:15:46] <macaw> I got my hopes up... :/
[17:16:01] <pragma-> Typically this is used when copying an object or displaying its object representation.
[17:18:13] *** Quits: Sheilong (uid293653@id-293653.ilkley.irccloud.com) (Quit: Connection closed for inactivity)
[17:18:17] *** Quits: chenqisu12 (~chenqisu1@183.217.201.63) (Ping timeout: 256 seconds)
[17:19:39] <NRK[m]> i should probably compile my stuff with clang more
[17:19:45] <NRK[m]> the warnings are much nicer
[17:20:14] <fcresende> well, it worked in a small test I did here...
[17:21:26] <fcresende> I remember seeing something like that before, but maybe I forgot some detail
[17:21:49] <NRK[m]> speaking of warnings, you guys use any static analysis tool?
[17:22:55] <macaw> fcresende: Thank you for trying anyways. I don't know what the deal is with it. I, too, had thought casts from `void *` were basically unprotected, but here you go.
[17:25:07] <fcresende> last try, are you compiling with g++ instead of gcc? I only get this error if I use g++
[17:26:05] *** Quits: sunmountain (~sunmounta@206.217.205.57) (Ping timeout: 252 seconds)
[17:32:56] *** Joins: CatCow (~wtf_over@c-73-96-109-206.hsd1.or.comcast.net)
[17:37:26] *** Joins: shivesh (~shivesh@user/shivesh)
[17:38:22] *** Joins: Satin (uid193953@id-193953.ilkley.irccloud.com)
[17:44:43] *** Joins: kitsunenokenja (~kitsunech@68.91.220.96)
[17:46:06] *** Joins: ugubok (~ugubok@user/ugubok)
[17:46:26] <ugubok> I can't understand what const qualifier means in struct fields
[17:47:28] <pragma-> The same thing.
[17:48:02] <pragma-> const int a = 42; // can't legally change `a` later.     struct { const int a; } thing = { 42 };  // same concept.
[17:50:31] *** Joins: seninha (~seninha@user/seninha)
[17:52:35] <ugubok> Thanks, that was easy, I was confused with answers from google
[17:55:45] *** Quits: Oxfuxxx (~sharky@185.128.25.222) (Ping timeout: 256 seconds)
[17:56:42] *** Quits: Klinda (~superleag@user/klinda) (Quit: Konversation terminated!)
[17:56:44] <Smilex> does anyone here know if there's a X11 community on libera, or if it's ok to ask about it here?
[17:58:13] *** Joins: AmR (~AmREiSa@156.199.223.24)
[17:58:18] *** Quits: vdamewood (~vdamewood@fedora/vdamewood) (Quit: My MacBook Pro has gone to sleep. ZZZzzz…)
[18:00:44] <Wulf> Smilex: /msg alis help
[18:00:46] <pragma-> This channel tends to focus on the C specification rather than any system-specific platform, though POSIX does come up often.
[18:01:05] *** Joins: rgrinberg (~textual@187.223.144.204)
[18:01:25] *** Quits: node1 (~node1@user/node1) (Quit: Client closed)
[18:03:58] <fizzie> Structs with const fields are very awkward when it comes to allocated data, because there's no reasonable way of initializing them. (You can't have an initializer for allocated storage, and you can't assign even the entire structure if one of its fields is const-qualified.)
[18:04:23] *** Joins: Oxfuxxx (~sharky@195.200.221.95)
[18:06:21] *** Quits: dave0 (~davezero@069.d.003.ncl.iprimus.net.au) (Quit: dave's not here)
[18:10:06] *** Joins: blyat-73 (~hjgkjhgkj@46.235.96.249)
[18:12:21] *** Joins: kexec (~kexec@user/kexec)
[18:13:58] *** Quits: mokulus (~mokulus@user/mokulus) (Quit: WeeChat 3.3)
[18:14:07] *** Quits: kitsunenokenja (~kitsunech@68.91.220.96) (Ping timeout: 252 seconds)
[18:14:07] *** Quits: polyrob (~rob@user/polyrob) (Ping timeout: 252 seconds)
[18:15:57] *** Quits: monkey_ (~user@190.104.116.153) (Ping timeout: 252 seconds)
[18:16:10] *** Joins: polyrob (~rob@user/polyrob)
[18:16:37] <kurahaupo> fizzie: memcpy?
[18:18:59] *** Quits: rgrinberg (~textual@187.223.144.204) (Ping timeout: 256 seconds)
[18:22:07] <fizzie> I don't really count that as reasonable, but I guess there's that.
[18:23:56] *** Joins: the_lanetly_052_ (~the_lanet@194.135.166.8)
[18:25:16] *** Quits: treble (~treble@user/treble) (Quit: WeeChat 3.3)
[18:26:17] *** Quits: the_lanetly_052 (~the_lanet@194.135.154.236) (Ping timeout: 256 seconds)
[18:27:29] *** Joins: baltazar (~baltazar@94-21-221-155.pool.digikabel.hu)
[18:29:03] *** Joins: monkey_ (~user@190.104.116.153)
[18:29:18] *** Joins: treble (~treble@user/treble)
[18:33:01] *** Joins: arinov (~arinov@31.142.57.149)
[18:34:20] *** Joins: fmsd__ (~no@160.177.199.94)
[18:35:34] *** Joins: kdc (~kdc@196.211.197.159)
[18:36:14] *** Joins: rgrinberg (~textual@187.223.144.204)
[18:37:07] *** Quits: fmsd___ (~no@196.65.63.248) (Ping timeout: 256 seconds)
[18:37:07] *** Quits: treble (~treble@user/treble) (Quit: WeeChat 3.3)
[18:37:13] *** Joins: perro_ (~perro@072-191-245-069.res.spectrum.com)
[18:38:02] *** Joins: eelstrebor (~eelstrebo@198-178-29-136.scb.ne.static.allophone.net)
[18:38:07] *** Joins: bruda (~bruda@172.58.63.31)
[18:38:47] *** Quits: Senicar (~Senicar@gateway/tor-sasl/senicar) (Quit: The Lounge - https://thelounge.chat)
[18:38:56] *** Quits: gr33n7007h (~gr33n7007@user/gr33n7007h) (Quit: WeeChat 3.3)
[18:39:56] *** Joins: Macuser (~Macuser@216.30.159.201)
[18:40:38] *** Quits: dutch (~DutchIngr@user/dutch) (Quit: WeeChat 3.3)
[18:41:12] <macaw> fcresende: I'm stupid... I indeed was compiling with g++ (the issue occured in code on the C++ side)... >_<
[18:41:23] *** Joins: treble (~treble@user/treble)
[18:42:09] *** Quits: rgrinberg (~textual@187.223.144.204) (Ping timeout: 256 seconds)
[18:42:13] *** Quits: bgs (~bgs@upc.si.94.140.92.241.dc.cable.static.telemach.net) (Ping timeout: 256 seconds)
[18:42:25] *** Joins: kitsunenokenja (~kitsunech@68.91.220.96)
[18:42:33] <macaw> fcresende: I stopped reading #c since before you wrote and just now realized that. I come on #c to tell the tale to other fools, and here you are, saying exactly the solution I just realized.
[18:42:40] *** Joins: Senicar (~Senicar@gateway/tor-sasl/senicar)
[18:42:59] *** Quits: meator (~meator@user/meator) (Quit: Leaving)
[18:44:41] *** Joins: bgs (~bgs@upc.si.94.140.92.241.dc.cable.static.telemach.net)
[18:44:47] <macaw> Mea culpa to the C gods.
[18:47:28] *** Joins: gr33n7007h (~gr33n7007@user/gr33n7007h)
[18:47:51] *** Quits: bruda (~bruda@172.58.63.31) (Ping timeout: 252 seconds)
[18:48:29] *** Quits: monkey_ (~user@190.104.116.153) (Remote host closed the connection)
[18:50:24] *** Joins: tolog (~tolog@89.36.78.180)
[18:50:47] *** Joins: Sheilong (uid293653@id-293653.ilkley.irccloud.com)
[18:52:08] *** Joins: dutch (~DutchIngr@user/dutch)
[18:52:15] *** Quits: arinov (~arinov@31.142.57.149) (Ping timeout: 252 seconds)
[18:52:59] *** Quits: gr33n7007h (~gr33n7007@user/gr33n7007h) (Ping timeout: 256 seconds)
[18:58:02] *** Quits: decartes_ (sid240036@id-240036.helmsley.irccloud.com) (Ping timeout: 240 seconds)
[18:58:40] *** Quits: tech_exorcist (txrcst@user/tech-exorcist/x-0447479) (Quit: bbl)
[18:58:58] *** Quits: wangledorf (sid505185@id-505185.ilkley.irccloud.com) (Ping timeout: 260 seconds)
[18:58:59] *** Joins: pandom79 (~domenico@151.77.245.202)
[18:59:47] *** Quits: LARathbone (~logan@d24-146-53-55.commercial.cgocable.net) (Ping timeout: 256 seconds)
[19:00:04] *** Quits: bindu (~bindu@user/bindu) (Remote host closed the connection)
[19:00:07] *** Joins: wangledorf (sid505185@id-505185.ilkley.irccloud.com)
[19:00:14] <pandom79> I'm trying to create a link to a folder via link() function but it always return -1 code. What am i wronging?
[19:00:34] *** Joins: bindu (~bindu@user/bindu)
[19:00:57] <pandom79> For the files it works but witk a folder no. How can i do that?
[19:01:16] *** Joins: decartes_ (sid240036@id-240036.helmsley.irccloud.com)
[19:01:18] *** Joins: gzj (~GZJ0X@216.24.178.99.16clouds.com)
[19:01:48] <kurahaupo> pandom79: What does perror("") print immediately after that?
[19:02:35] <kurahaupo> pandom79: Hint: you probably want symlink() rather than link() as hard links to directories are not allowed
[19:02:59] *** Joins: tech_exorcist (txrcst@user/tech-exorcist/x-0447479)
[19:04:00] *** Quits: tech_exorcist (txrcst@user/tech-exorcist/x-0447479) (Remote host closed the connection)
[19:04:14] *** Joins: tech_exorcist (txrcst@user/tech-exorcist/x-0447479)
[19:04:25] <kurahaupo> pandom79: If you wonder why it's forbidden, consider the question: If you could make an arbitrary hard link to a directory, which parent should ".." go back to?
[19:04:49] *** Quits: MrAureliusR (~MrAureliu@user/mraureliusr) (Quit: ZNC - https://znc.in)
[19:04:54] *** Quits: Smilex (~ian@D470973B.rev.sefiber.dk) (Quit: WeeChat 2.3)
[19:05:25] <pandom79> kurahaupo: ok, i wanted to try symlink but i can't find that....I included unistd.h
[19:06:04] <pandom79> kurahaupo: sorry, I'm new to C programming
[19:06:12] <kurahaupo> pandom79: For future reference perror is useful to tell you what the error was
[19:06:27] <pandom79> kurahaupo:thanks
[19:07:31] <kurahaupo> This isn't specifically a C problem. You would get the same result in any language that gives you access to the POSIX system calls.
[19:07:42] *** Quits: gzj (~GZJ0X@216.24.178.99.16clouds.com) (Remote host closed the connection)
[19:08:23] *** Joins: rgrinberg (~textual@187.223.144.204)
[19:11:52] *** Quits: Inline (~Inline@2a02:908:1252:7a80::133) (Quit: Leaving)
[19:13:14] *** Joins: ChromaCat248 (~ChromaCat@user/chromacat248)
[19:13:53] *** Quits: rgrinberg (~textual@187.223.144.204) (Ping timeout: 256 seconds)
[19:15:01] *** Quits: Torr (~Torr@user/torr) (Ping timeout: 256 seconds)
[19:16:13] *** Joins: Cleverness (~clevernes@pool-108-54-152-186.nycmny.fios.verizon.net)
[19:18:13] *** Joins: rgrinberg (~textual@187.223.248.37)
[19:19:09] *** Quits: Cleverness (~clevernes@pool-108-54-152-186.nycmny.fios.verizon.net) (Client Quit)
[19:19:45] *** Quits: kish` (~sid742412@user/aqua) (Remote host closed the connection)
[19:20:02] *** Joins: kish` (~sid742412@user/aqua)
[19:20:21] *** Quits: kish` (~sid742412@user/aqua) (Remote host closed the connection)
[19:20:41] *** Joins: kish` (~sid742412@user/aqua)
[19:21:02] *** Quits: HisShadow (~HisShadow@user/hisshadow) (Ping timeout: 252 seconds)
[19:22:47] *** Joins: HisShadow (~HisShadow@user/hisshadow)
[19:23:16] *** Joins: PatchByte (~PatchByte@p200300d8ef064b003664a9fffed44247.dip0.t-ipconnect.de)
[19:23:24] *** A_Dragon is now known as AAAAA_DRAGON
[19:23:29] <PatchByte> Hello!
[19:23:43] <PatchByte> C on top.
[19:23:56] *** Quits: rgrinberg (~textual@187.223.248.37) (Quit: My MacBook has gone to sleep. ZZZzzz…)
[19:24:02] <kurahaupo> PatchByte: What question brings you here?
[19:24:21] <PatchByte> Uhm i kinda just want to talk
[19:25:03] *** Joins: monkey_ (~user@190.104.116.153)
[19:26:04] *** Quits: PatchByte (~PatchByte@p200300d8ef064b003664a9fffed44247.dip0.t-ipconnect.de) (Client Quit)
[19:26:07] *** Quits: bindu (~bindu@user/bindu) (Remote host closed the connection)
[19:27:17] *** Joins: bindu (~bindu@user/bindu)
[19:27:44] *** Joins: voltron (~voltrin_@ip4d16bdc6.dynamic.kabel-deutschland.de)
[19:31:11] *** Quits: joev1 (~joev@user/joev) (Ping timeout: 245 seconds)
[19:31:36] *** Joins: joev1 (~joev@user/joev)
[19:34:33] *** Joins: SymbioticFemale (~Symbiotic@gateway/tor-sasl/symbioticfemale)
[19:35:06] *** Joins: gr33n7007h (~gr33n7007@user/gr33n7007h)
[19:35:22] *** Joins: phrosty (~phrosty@c-73-225-175-19.hsd1.wa.comcast.net)
[19:36:27] *** Joins: scalablecory (~phrosty@c-73-225-175-19.hsd1.wa.comcast.net)
[19:36:39] <SymbioticFemale> if execl isn't C99 compliant, then am i supposed to execute external binaries in windows?
[19:38:32] <SymbioticFemale> wait, nevermind. thats a simple enough thing.
[19:38:38] <pragma-> With the Windows-specific functions, just like execl is a posix-specific function. There's also system().
[19:38:44] <aosync> does windows even support C
[19:38:49] <SymbioticFemale> yeah system()
[19:39:31] *** Quits: phrosty (~phrosty@c-73-225-175-19.hsd1.wa.comcast.net) (Ping timeout: 245 seconds)
[19:39:48] *** Quits: plantman (~plantman@2601:405:4680:1b0::2) (Quit: Leaving)
[19:40:36] <fmsd__> why doesn't windows support posix properly
[19:40:57] <pragma-> aosync: C is a programming language. There are several non-Microsoft C compilers that work well on Windows.
[19:41:19] <pragma-> fmsd__: As far as Microsoft is concerned, Windows is as POSIX compliant as it needs to be.
[19:41:42] <pragma-> In fact, Windows has been POSIX certified.
[19:42:27] <kurahaupo> fmsd__: "not invented here syndrome". But it's gotten a lot better in the last 5 years
[19:43:21] <kurahaupo> pragma-: "getting certified" defines the precise limit of how well it has to support it.
[19:44:14] <kurahaupo> The other answer is "Because POSIX allows too much leeway"
[19:45:13] <pragma-> I would have thought Microsoft would have made a fork() syscall by now, even if it was merely a heavy-weight compatability layer. So many POSIX projects could have been ported to Windows with less effort.
[19:45:30] * pragma- pats cygwin1.dll.
[19:45:40] *** Joins: the_lanetly_052 (~the_lanet@185.30.91.83)
[19:46:19] <kurahaupo> Perl's implementation of fork for Windows is "interesting"
[19:46:49] *** Quits: the_lanetly_052_ (~the_lanet@194.135.166.8) (Ping timeout: 256 seconds)
[19:47:09] *** Joins: rgrinberg (~textual@187.223.248.37)
[19:47:51] *** Joins: slidercrank (~slidercra@user/slidercrank)
[19:53:03] *** Quits: joev1 (~joev@user/joev) (Ping timeout: 256 seconds)
[19:53:56] *** Joins: joev1 (~joev@user/joev)
[19:56:36] *** Quits: rgrinberg (~textual@187.223.248.37) (Ping timeout: 245 seconds)
[19:59:43] *** Quits: the_lanetly_052 (~the_lanet@185.30.91.83) (Ping timeout: 252 seconds)
[20:02:24] *** Joins: ferdna (~ferdna@user/ferdna)
[20:04:43] *** Joins: rgrinberg (~textual@187.223.250.159)
[20:09:24] *** Quits: monkey_ (~user@190.104.116.153) (Remote host closed the connection)
[20:10:21] *** Quits: simon323 (~simon323@2409:8a34:468:83d0:78df:a3b:54ed:834b) (Quit: simon323)
[20:11:58] *** Joins: serbest (~serbest@user/serbest)
[20:12:53] *** Joins: euandreh (~euandreh@2804:14c:33:9fe5:f767:b15a:e5b1:96f0)
[20:13:20] *** Joins: oriba (~oriba@dynamic-078-054-209-177.78.54.pool.telefonica.de)
[20:14:04] *** Joins: pgib (~textual@173.38.117.87)
[20:16:51] *** Quits: kitsunenokenja (~kitsunech@68.91.220.96) (Ping timeout: 256 seconds)
[20:18:37] *** Joins: arinov (~arinov@213.194.126.155)
[20:18:56] *** Joins: monkey_ (~user@190.104.116.153)
[20:21:53] *** Quits: alch (~alch@151.36.113.104) (Read error: Connection reset by peer)
[20:21:59] *** Quits: dogbert2 (~Bill@ip68-105-189-91.lv.lv.cox.net) (Remote host closed the connection)
[20:22:15] *** Joins: dogbert2 (~Bill@ip68-105-189-91.lv.lv.cox.net)
[20:23:33] <ioxzev1z> Windows supports some C but it's in their financial interest to push C++, C#, etc
[20:23:42] *** Quits: kish` (~sid742412@user/aqua) (Remote host closed the connection)
[20:24:08] *** Joins: kish` (~sid742412@user/aqua)
[20:24:29] <ioxzev1z> Visual Studio doesn't support many C99 features, but their C++ compiler is very good iirc
[20:25:49] *** Joins: alch (~alch@pd-18-105-94.service.infuturo.it)
[20:26:03] *** Joins: Torr (~Torr@user/torr)
[20:27:06] <perro_> I'd hear the latest version are farily compatible with 99
[20:27:24] <perro_> sp3elling*
[20:28:12] <Learath2> idk if it got more c99 compliant, but last year they remembered C exists and added C11 and C17 support
[20:28:23] <perro_> huh
[20:28:38] *** Joins: Maaaanu (~manuel@ip5b429007.dynamic.kabel-deutschland.de)
[20:28:49] <Learath2> They just hoped C would just disappear if they ignored for a decade, so they had to catch up when it just wouldn't would be my guess :P
[20:28:52] <milia[m]> Hello all. Do you have any book recommendations on modern C? It's safely to assume that I've already read K&R.
[20:29:01] <milia[m]> s/safely/safe/
[20:29:03] <perro_> 21st entry c
[20:29:09] <perro_> sorry
[20:29:12] <ioxzev1z> milia[m], "Modern C" is good
[20:29:44] <perro_> 21st century c by ben kleens
[20:29:55] <perro_> klemens*
[20:30:00] *** Joins: wroathe (~wroathe@c-68-54-25-135.hsd1.mn.comcast.net)
[20:30:00] *** Quits: wroathe (~wroathe@c-68-54-25-135.hsd1.mn.comcast.net) (Changing host)
[20:30:00] *** Joins: wroathe (~wroathe@user/wroathe)
[20:30:22] <perro_> https://www.oreilly.com/library/view/21st-century-c/9781491904428/
[20:30:40] *** Quits: aosync (~aws@mx1.aosync.me) (Remote host closed the connection)
[20:30:54] <Learath2> Depends on how in-depth you are looking to learn. Effective C is a nice read, but it might be a little too detailed for some people
[20:31:14] <perro_> this is pretty good and mdoern: https://www.amazon.com/Effective-Introduction-Professional-Robert-Seacord/dp/1718501048
[20:31:24] <perro_> oh, that's effective c
[20:31:42] <milia[m]> thank you all, I'll check all 3 books. What do you think of the 'C a Reference manual' by Steele et al ?
[20:32:01] *** Quits: mrig (~AdiIRC@user/mrig) (Quit: Going offline, see ya! (www.adiirc.com))
[20:32:12] <Learath2> ,book
[20:32:12] <candide> See http://www.iso-9899.info/wiki/Books for some useful book recommendations, including free online resources!
[20:32:47] <Learath2> Hm, no one seems to have added it there, nor have I read it myself, so no idea
[20:34:07] *** Joins: the_lanetly_052 (~the_lanet@185.30.91.178)
[20:34:11] *** Quits: mikoto-chan (~mikoto-ch@esm-84-240-99-143.netplaza.fi) (Ping timeout: 252 seconds)
[20:34:29] <DarkUranium> ioxzev1z: Microsoft's C++ compiler is *not* very good. It's shite.
[20:34:49] <DarkUranium> So many issues with it. I believe it still doesn't (and in fact could not, as of VS2017 --- maybe they've fixed it in VS2019) fully support C++11.
[20:34:53] <DarkUranium> Some sort of an internal limitation.-
[20:34:59] *** Joins: mrig (~mrig@user/mrig)
[20:35:00] *** Joins: mikoto-chan (~mikoto-ch@esm-84-240-99-143.netplaza.fi)
[20:35:05] <DarkUranium> Also some hilariously bad bugs involving heap-allocated classes, etc.
[20:35:18] *** Quits: bindu (~bindu@user/bindu) (Ping timeout: 276 seconds)
[20:36:07] *** Quits: rgrinberg (~textual@187.223.250.159) (Quit: My MacBook has gone to sleep. ZZZzzz…)
[20:36:07] <Learath2> FWIW if you already read and completed the exercises in K&R you should be fairly familiar with C. If you just want to update your knowledge to C99/11/17 the standards foreword always includes the major changes
[20:36:31] <milia[m]> thanks all
[20:37:03] *** Joins: Richard_Cavell (uid165693@id-165693.ilkley.irccloud.com)
[20:37:18] *** Joins: bindu (~bindu@user/bindu)
[20:37:22] <Learath2> DarkUranium: One thing I do like is their implementation of the STL. Other than that it's indeed not very pleasant
[20:37:41] <DarkUranium> Learath2: not really familiar with the specifics of that.
[20:38:00] <DarkUranium> What's so nice about it?
[20:38:05] <milia[m]> Alex Stepanov must be a pretty bright fella
[20:38:14] <milia[m]> Learath2:
[20:38:56] <Learath2> DarkUranium: I find it much more readable than the others. Makes debugging much easier
[20:39:34] <DarkUranium> Ah.
[20:39:41] <DarkUranium> Unlike the rest of WinAPI, I guess.
[20:40:05] *** Joins: Senicar2 (~Senicar@gateway/tor-sasl/senicar)
[20:40:33] <Learath2> Well WinAPI is just an api, no implementation so it's an absolute pain to debug anything relating to it
[20:41:10] *** Joins: cm007magnum (~Rheanna@101.91.232.166)
[20:41:11] *** Quits: treble (~treble@user/treble) (Quit: WeeChat 3.3)
[20:41:29] <Learath2> Their STL implementation is opensource and the source is easier to read than others. If you are desparate enough to debug the STL you atleast want to be able to read it :D
[20:42:27] *** Quits: Senicar (~Senicar@gateway/tor-sasl/senicar) (Ping timeout: 276 seconds)
[20:42:28] *** Senicar2 is now known as Senicar
[20:44:57] *** Joins: node1 (~node1@user/node1)
[20:45:00] <DarkUranium> I mean, headers?
[20:45:11] *** Quits: Torr (~Torr@user/torr) (Ping timeout: 252 seconds)
[20:48:01] *** Joins: treble (~treble@user/treble)
[20:48:46] <bparker> 17:04 < DarkUranium> ioxzev1z: Microsoft's C++ compiler is *not* very good. It's shite.
[20:48:49] <bparker> lmao
[20:49:15] *** Joins: tessio (~weechat@141.226.73.109)
[20:49:24] <tessio> is there a known tool to extract the video m3u file is point to online ?
[20:49:40] <bparker> what
[20:50:26] *** Quits: perrierjouet (~perrier-j@modemcable012.251-130-66.mc.videotron.ca) (Quit: WeeChat 3.3)
[20:51:08] *** Quits: monkey_ (~user@190.104.116.153) (Remote host closed the connection)
[20:51:17] <pragma-> Steele is a well-known reference book. It's not a tutorial.
[20:51:20] <pragma-> ,h&s
[20:51:20] <candide> h&s is "C - A Reference Manual" by Harbison & Steele; a reference for C on par with K&R - http://www.amazon.com/Reference-Manual-Samuel-P-Harbison/dp/013089592X
[20:51:23] *** Quits: gr33n7007h (~gr33n7007@user/gr33n7007h) (Quit: WeeChat 3.3)
[20:52:08] *** Quits: magla (~gelignite@55d41880.access.ecotel.net) (Quit: Stay safe!)
[20:57:32] <milia[m]> thx
[20:58:46] *** Joins: perrierjouet (~perrier-j@modemcable012.251-130-66.mc.videotron.ca)
[20:59:07] *** Quits: ugubok (~ugubok@user/ugubok) (Ping timeout: 252 seconds)
[20:59:21] <ioxzev1z> DarkUranium, considering that I haven't used VC++ for over 10 years I can only speak of it by what I've heard
[21:01:08] *** Quits: serbest (~serbest@user/serbest) (Ping timeout: 252 seconds)
[21:01:56] *** Joins: rgrinberg (~textual@187.223.250.159)
[21:06:00] *** Quits: pandom79 (~domenico@151.77.245.202) (Quit: Konversation terminated!)
[21:07:02] *** Quits: eelstrebor (~eelstrebo@198-178-29-136.scb.ne.static.allophone.net) (Quit: Ex-Chat)
[21:07:12] *** Joins: jmiehe (~Thunderbi@user/jmiehe)
[21:09:40] *** Quits: rgrinberg (~textual@187.223.250.159) (Quit: My MacBook has gone to sleep. ZZZzzz…)
[21:10:38] *** Quits: cm007magnum (~Rheanna@101.91.232.166) (Remote host closed the connection)
[21:13:02] *** Joins: cm007magnum (~Rheanna@218.78.67.149)
[21:14:28] *** Joins: Zambyte (~Zambyte@cpe-104-228-60-14.nycap.res.rr.com)
[21:14:32] *** Joins: CaCode (~CaCode@user/cacode)
[21:15:43] *** Joins: gr33n7007h (~gr33n7007@user/gr33n7007h)
[21:16:39] *** Joins: jjido (~Denis@90.213.58.125)
[21:20:24] *** Joins: rgrinberg (~textual@187.223.250.159)
[21:21:47] *** Quits: koo5_ (~quassel@51.140.155.227) (Quit: http://quassel-irc.org - Chat comfortably. Anywhere.)
[21:23:59] *** Joins: koo5_ (~quassel@51.140.155.227)
[21:28:37] *** Joins: Inline (~Inline@2a02:908:1252:7a80::133)
[21:28:58] *** Joins: Akuli (~Akuli@82-203-163-146.bb.dnainternet.fi)
[21:33:59] *** Joins: meator (~meator@user/meator)
[21:36:25] *** Joins: nuxil (~nuxil@141.195.51.213)
[21:37:49] *** perro_ is now known as perro
[21:38:15] *** Joins: iddev5 (~iddev5@2409:4062:2d10:b2c5:d4be:a1b5:7014:c3af)
[21:38:15] *** Quits: deflected (~deflected@user/deflected) (Ping timeout: 250 seconds)
[21:39:09] *** Joins: eelstrebor (~eelstrebo@198-178-29-136.scb.ne.static.allophone.net)
[21:42:20] *** Joins: langley (~liskander@102.184.182.181)
[21:42:31] <langley> ls
[21:44:01] *** Joins: zsoltiv_ (~zsoltiv@fibhost-67-12-35.fibernet.hu)
[21:44:05] *** Quits: node1 (~node1@user/node1) (Quit: Client closed)
[21:44:11] <floatcomplex> .
[21:44:13] <floatcomplex> ..
[21:45:23] <tessio> DarkUranium: where you from ?
[21:45:41] *** Joins: cousteau_ (~cousteau@user/cousteau)
[21:46:51] *** cousteau_ is now known as cousteau
[21:47:34] *** Joins: masticass (~gzc@host-85-201-222-202.dynamic.voo.be)
[21:48:37] *** Joins: soapsudsxx (~soapsudsx@209.221.40.158)
[21:49:06] *** Quits: voltron (~voltrin_@ip4d16bdc6.dynamic.kabel-deutschland.de) (Remote host closed the connection)
[21:49:30] *** Quits: langley (~liskander@102.184.182.181) (Quit: leaving)
[21:50:41] *** Joins: langley (~liskander@102.184.182.181)
[21:51:06] *** Quits: perro (~perro@072-191-245-069.res.spectrum.com) (Read error: Connection reset by peer)
[21:51:14] *** Quits: NEYi (~NEYi@109.251.216.38) (Quit: Leaving)
[21:51:51] *** Joins: perro (~perro@072-191-245-069.res.spectrum.com)
[21:52:40] *** Joins: voltron (~voltrin_@ip4d16bdc6.dynamic.kabel-deutschland.de)
[21:53:00] *** Joins: strajder (~strajder@user/strajder)
[21:56:07] *** Quits: jjido (~Denis@90.213.58.125) (Quit: My MacBook Air has gone to sleep. ZZZzzz…)
[21:56:45] *** Joins: node1 (~node1@user/node1)
[21:57:00] *** Quits: blyat-73 (~hjgkjhgkj@46.235.96.249) (Quit: Leaving)
[21:57:13] *** Joins: blyat-73 (~hjgkjhgkj@46.235.96.249)
[21:57:43] *** Quits: langley (~liskander@102.184.182.181) (Quit: leaving)
[21:58:27] *** Quits: iddev5 (~iddev5@2409:4062:2d10:b2c5:d4be:a1b5:7014:c3af) (Quit: Client closed)
[21:59:21] *** Quits: rgrinberg (~textual@187.223.250.159) (Ping timeout: 256 seconds)
[22:00:10] *** Quits: cm007magnum (~Rheanna@218.78.67.149) (Remote host closed the connection)
[22:01:14] *** Quits: seninha (~seninha@user/seninha) (Quit: Leaving)
[22:01:48] *** Joins: monkey_ (~user@190.104.116.153)
[22:02:31] *** Joins: cm007magnum (~Rheanna@218.78.99.237)
[22:02:35] *** Joins: rgrinberg (~textual@187.223.248.37)
[22:02:40] *** Joins: dhch (~dhch@185.213.154.165)
[22:04:23] *** Quits: The_Blode (~Blode@user/the-blode/x-7164444) (Ping timeout: 252 seconds)
[22:04:50] <SymbioticFemale> what is the best way (preferably utilizing C99 or libevent) to redirect a fork()'s stdout to a buffer? i need the stdout to be buffered so I can put it in a dedicated GTKTextView
[22:06:13] *** Quits: earnest (~earnest@user/earnestly) (Ping timeout: 256 seconds)
[22:08:14] *** Quits: rgrinberg (~textual@187.223.248.37) (Ping timeout: 252 seconds)
[22:08:15] *** Joins: seninha (~seninha@user/seninha)
[22:08:30] *** Joins: earnest (~earnest@user/earnestly)
[22:08:35] *** Joins: The_Blode (~Blode@user/the-blode/x-7164444)
[22:10:06] *** Quits: kexec (~kexec@user/kexec) (Quit: Client closed)
[22:12:41] *** Joins: gareppa (~gareppa@user/gareppa)
[22:13:35] *** Quits: node1 (~node1@user/node1) (Quit: Client closed)
[22:13:42] *** Quits: gareppa (~gareppa@user/gareppa) (Remote host closed the connection)
[22:15:18] *** Quits: fmsd__ (~no@160.177.199.94) (Remote host closed the connection)
[22:15:42] *** Joins: fmsd__ (~no@160.177.199.94)
[22:17:09] *** Quits: kish` (~sid742412@user/aqua) (Remote host closed the connection)
[22:17:18] *** Joins: alioui (~medeva293@197.2.121.174)
[22:17:33] *** Joins: kish` (~sid742412@user/aqua)
[22:18:43] *** Parts: alioui (~medeva293@197.2.121.174) ()
[22:25:41] *** Quits: kish` (~sid742412@user/aqua) (Excess Flood)
[22:27:05] *** Joins: kish` (~sid742412@user/aqua)
[22:29:08] *** Quits: arinov (~arinov@213.194.126.155) (Ping timeout: 252 seconds)
[22:31:13] *** Joins: AbleBacon (~AbleBacon@user/AbleBacon)
[22:34:41] *** Joins: Thedarkb-Desktop (~Thedarkb@2001:bb6:b403:e042:5d6:6adb:6948:3fbd)
[22:34:57] *** Joins: wootehfoot (~wootehfoo@user/wootehfoot)
[22:35:06] <BtbN> Can someone make sense of this static analyzer warning: Casting narrower unsigned "uint32_t" to wider signed type "int64_t" effectively tests its lower bound.
[22:36:07] *** Joins: rgrinberg (~textual@187.223.250.159)
[22:36:13] <tk> BtbN: can you provide context?
[22:36:24] *** Joins: skapata (~Skapata@2804:14c:87b0:a6f9:5086:3896:e0d0:f358)
[22:36:24] *** Quits: skapata (~Skapata@2804:14c:87b0:a6f9:5086:3896:e0d0:f358) (Changing host)
[22:36:24] *** Joins: skapata (~Skapata@user/skapata)
[22:36:51] *** Quits: kish` (~sid742412@user/aqua) (Ping timeout: 276 seconds)
[22:37:49] *** Joins: joilerv (~joilerv@host86-191-93-41.range86-191.btcentralplus.com)
[22:38:40] *** Joins: aosync (~aws@mx1.aosync.me)
[22:39:15] *** Quits: magic_ninja (~sparkie1@ip24-255-219-188.ks.ks.cox.net) (Remote host closed the connection)
[22:39:21] *** Quits: cm007magnum (~Rheanna@218.78.99.237) (K-Lined)
[22:40:21] *** Quits: avar (avar@vm.nix.is) (Quit: Lost terminal)
[22:40:27] <Wulf> web search suggests it's Coverity.
[22:40:31] *** Joins: ss4 (~wootehfoo@user/wootehfoot)
[22:40:42] *** Joins: wwilly_ (~wwilly@lfbn-str-1-375-81.w86-243.abo.wanadoo.fr)
[22:40:48] *** Joins: lllh (~llh@198.48.244.21)
[22:40:55] *** Joins: joilerv_ (~joilerv@host86-191-93-41.range86-191.btcentralplus.com)
[22:40:58] <BtbN> tk, https://i.imgur.com/gaBFGkT.png that's the full analysis
[22:41:06] *** Quits: fmsd__ (~no@160.177.199.94) (Read error: Connection reset by peer)
[22:41:08] *** Quits: aosync (~aws@mx1.aosync.me) (Remote host closed the connection)
[22:41:10] *** Quits: ioxzev1z (~ioxzev1z@user/ioxzev1z) (Remote host closed the connection)
[22:41:12] *** Joins: hgkjhgkjgkj (~hjgkjhgkj@46.235.96.249)
[22:41:17] *** Joins: useretail_ (~useretail@185.132.19.151)
[22:41:23] <BtbN> I have absolutely no clue what it means by that "effectively tests its lower bound" thing
[22:41:25] *** Joins: fmsd__ (~no@160.177.199.94)
[22:41:30] *** Joins: ioxzev1z (~ioxzev1z@user/ioxzev1z)
[22:41:42] *** Quits: _0x5fc3 (~0x5fc3@wireguard/tunneler/-0x5fc3) (Quit: Ping timeout (120 seconds))
[22:41:59] *** Joins: grange_c8 (~grange_c@vps-9763379d.vps.ovh.net)
[22:42:03] *** Joins: _0x5fc3 (~0x5fc3@wireguard/tunneler/-0x5fc3)
[22:42:03] <Wulf> BtbN: what's avio_seek? What type does it return?
[22:42:15] <BtbN> returns just an int, for success/error code
[22:42:23] *** Joins: jjido (~Denis@90.213.58.125)
[22:42:25] *** Quits: bgs (~bgs@upc.si.94.140.92.241.dc.cable.static.telemach.net) (Ping timeout: 256 seconds)
[22:42:25] *** Quits: llh (~llh@user/llh) (Ping timeout: 256 seconds)
[22:42:25] *** Quits: bionade24 (~bionade24@server2.oscloud.info) (Ping timeout: 256 seconds)
[22:42:29] <kaichiuchu> somewhat unrelated question, but I'm curious
[22:42:29] <BtbN> But it's not complaining about that.
[22:42:39] <kaichiuchu> how many people really get C jobs these days?
[22:42:43] *** Quits: Techcable (~Techcable@168.235.93.147) (Quit: ZNC - https://znc.in)
[22:42:49] *** Joins: magic_ninja (~sparkie1@ip24-255-219-188.ks.ks.cox.net)
[22:42:56] *** Joins: Techcable_ (~Techcable@168.235.93.147)
[22:42:59] *** Quits: joilerv (~joilerv@host86-191-93-41.range86-191.btcentralplus.com) (Ping timeout: 256 seconds)
[22:43:05] <Wulf> kaichiuchu: I wrote a few C programs for my job(s).
[22:43:20] <Wulf> BtbN: what line is it complaining about then?
[22:43:25] *** Quits: grange_c (~grange_c@vps-9763379d.vps.ovh.net) (Read error: Connection reset by peer)
[22:43:25] *** grange_c8 is now known as grange_c
[22:43:33] *** Quits: wootehfoot (~wootehfoo@user/wootehfoot) (Ping timeout: 256 seconds)
[22:43:36] <BtbN> Wulf, it's complaining about the second argument to avio_seek.
[22:43:41] <ioxzev1z> Did BtbN link? got DCed
[22:43:42] *** Quits: useretail (~useretail@185.132.19.151) (Read error: Connection reset by peer)
[22:43:45] *** Joins: bionade24 (~bionade24@server2.oscloud.info)
[22:43:58] <SymbioticFemale> kaichiuchu: having employment is overrated
[22:44:03] *** Joins: bgs (~bgs@upc.si.94.140.92.241.dc.cable.static.telemach.net)
[22:44:04] <BtbN> ioxzev1z, https://i.imgur.com/gaBFGkT.png
[22:44:09] *** Joins: aosync (~aws@mx1.aosync.me)
[22:44:18] *** Quits: aosync (~aws@mx1.aosync.me) (Remote host closed the connection)
[22:44:26] *** Quits: blyat-73 (~hjgkjhgkj@46.235.96.249) (Ping timeout: 256 seconds)
[22:44:40] *** Quits: wwilly (~wwilly@lfbn-str-1-375-81.w86-243.abo.wanadoo.fr) (Ping timeout: 256 seconds)
[22:44:40] <Wulf> ioxzev1z: https://i.imgur.com/gaBFGkT.png
[22:44:44] <Wulf> BtbN: okay, what's the full signature of avio_seek? What's table->offset?
[22:44:55] <kaichiuchu> SymbioticFemale: dunno about you but I like the idea of not starving
[22:45:04] *** Quits: Haxxa (~Haxxa@202-130-210-132.ip4.superloop.com) (Quit: Haxxa flies away.)
[22:45:05] <BtbN> table->offset is an uint32_t, and avio_seek takes an int64_t as second arg
[22:45:34] <SymbioticFemale> kaichiuchu: i'm thinking about moving to a developing country to avoid starving
[22:45:46] <ioxzev1z> Not sure I've ever heard of a cast warning going upwards, only down (e.g. 32 to 16)
[22:45:59] <BtbN> Yeah, that's what has me baffled as well
[22:46:28] <Wulf> BtbN: is the source code of avio_seek available somewhere?
[22:46:35] <DarkUranium> tessio: Slovenia, why?
[22:46:39] <ioxzev1z> What analyzer are you using? how does something "test its lower bound"
[22:46:50] *** Quits: Richard_Cavell (uid165693@id-165693.ilkley.irccloud.com) (Quit: Connection closed for inactivity)
[22:46:52] <BtbN> Wulf, sure, but I don't see how it helps in riddling this? It didn't even enter the function for this analysis.
[22:46:55] *** Joins: avar (avar@vm.nix.is)
[22:47:06] *** Quits: gproto23 (~gproto23@user/gproto23) (Remote host closed the connection)
[22:47:09] <ioxzev1z> BtbN, actually that warning makes sense considering you're casting unsigned to signed
[22:47:24] <BtbN> But the unsigned type fits entirely into the bigger signed one?
[22:47:29] *** Joins: gproto23 (~gproto23@user/gproto23)
[22:47:31] *** Joins: Haxxa (~Haxxa@202-130-210-132.ip4.superloop.com)
[22:47:36] <Wulf> BtbN: I'm trying to take a guess
[22:47:38] *** Joins: arinov (~arinov@31.142.57.149)
[22:47:45] *** Joins: aosync (~aws@mx1.aosync.me)
[22:47:57] <ioxzev1z> Right, but is it converted to signed correctly? 1111 unsigned to 00001111 signed, for example
[22:48:03] <Wulf> E.g. if the function contains something like if (offset < 0) {} that might indicate a problem
[22:48:23] *** Joins: magla (~gelignite@55d41880.access.ecotel.net)
[22:48:33] <Wulf> ioxzev1z: C works arithmetically. Yes, the conversion is correct.
[22:48:35] <BtbN> https://github.com/FFmpeg/FFmpeg/blob/master/libavformat/aviobuf.c#L260
[22:48:49] <ioxzev1z> Wulf, ok, then I'm not understanding the warning correctly
[22:49:29] *** Quits: pgib (~textual@173.38.117.87) (Ping timeout: 252 seconds)
[22:49:30] *** Quits: aosync (~aws@mx1.aosync.me) (Remote host closed the connection)
[22:49:45] *** Joins: aosync (~aws@mx1.aosync.me)
[22:49:46] *** Joins: phao (~phao@2804:d45:8e7a:de00:6c10:bcc6:9093:52ad)
[22:50:01] *** Quits: aosync (~aws@mx1.aosync.me) (Remote host closed the connection)
[22:50:57] *** Quits: monkey_ (~user@190.104.116.153) (Ping timeout: 252 seconds)
[22:51:05] *** Joins: moheb2000 (~moheb2000@5.125.5.136)
[22:52:00] *** Quits: moheb2000 (~moheb2000@5.125.5.136) (Client Quit)
[22:52:22] *** Quits: Inline (~Inline@2a02:908:1252:7a80::133) (Quit: Leaving)
[22:54:49] *** Quits: cousteau (~cousteau@user/cousteau) (Quit: ♫ I can't forget the day I shot that network down ♫)
[22:56:31] <Wulf> BtbN: are you able to check custom code too? https://ideone.com/wwBxr3
[22:57:00] <BtbN> No, unfortunately not. We only have 3 free checks per week. And they run automatically on the latest git tree.
[22:57:16] <Wulf> feared as much.
[22:58:30] <BtbN> They are quite notorious for nonsensical or blatant false-positive warnings though sadly
[22:58:30] *** Quits: Cyp (~cyp@213.237.85.9) (Excess Flood)
[22:58:44] <ioxzev1z> BtbN, which analyzer are you using?
[22:58:49] <BtbN> coverity
[22:59:04] *** Joins: cm007magnum (~Rheanna@218.78.105.67)
[22:59:09] <Wulf> Perhaps someone here got access to a licensed Coverity installation and can check my code?
[22:59:11] *** Joins: Cyp (~cyp@213.237.85.9)
[22:59:57] *** Quits: hgkjhgkjgkj (~hjgkjhgkj@46.235.96.249) (Read error: Connection reset by peer)
[23:00:20] *** Joins: hgkjhgkjgkj (~hjgkjhgkj@46.235.96.249)
[23:00:29] *** Quits: rgrinberg (~textual@187.223.250.159) (Ping timeout: 252 seconds)
[23:00:50] <pragma-> does it *have* to be licensed?
[23:01:22] <BtbN> Yes, it's not freely available at all. Only an online service you got to apply for.
[23:01:50] <Wulf> pragma-: I won't tell anyone ;-)
[23:01:54] *** Parts: pony (sid524992@smol/hors) ()
[23:03:30] *** Joins: aighearach (~paris@user/aighearach)
[23:04:29] *** Quits: kdc (~kdc@196.211.197.159) (Quit: Leaving)
[23:07:07] *** Quits: eelstrebor (~eelstrebo@198-178-29-136.scb.ne.static.allophone.net) (Quit: Ex-Chat)
[23:07:34] <tessio> n
[23:07:41] <floatcomplex> kaichiuchu: jobs aren't in a language. jobs require you to be able to use the unix command line without needing your hand held, in support of some specific engineering task. knowing a bit of c and a bit of other languages is useful too
[23:09:14] <floatcomplex> i wouldn't have my current or previous job without c, but writing c is only a part of my day
[23:10:00] *** Joins: CormacAttack (~mac@144.62.50.200)
[23:11:50] <floatcomplex> if you hire someone based on what languages they know and not their problem solving skills you're gonna be disappointed
[23:12:44] *** Joins: Hexmind (~Hexmind@modemcable049.25-131-66.mc.videotron.ca)
[23:12:57] *** Quits: rahl (~rahl@102.114.63.0) (Ping timeout: 252 seconds)
[23:13:53] <floatcomplex> (if they say they know c/c++ then you should ask to see some of their actual c code)
[23:14:35] <floatcomplex> s~c/c++~"c/c++"~
[23:14:45] *** Joins: rahl (~rahl@102.114.49.13)
[23:16:24] * pragma- whacks floatcomplex with a stick
[23:16:47] <pragma-> I write Perl and it still hurt my eyes to read that!
[23:17:16] *** Joins: quartz (~quartz@user/quartz)
[23:18:39] *** Joins: donald1 (~donald@2a01:e0a:95e:7ca0:4d4d:b2e6:7414:759f)
[23:18:44] <donald1> nitrix and ent58: yes it is to replace unit tests
[23:22:03] <pragma-> donald1: where are you coming from?
[23:22:42] <donald1> france and you?
[23:23:00] <pragma-> i mean what channel where you and nitrix/ent58 coming from? :)
[23:25:09] <donald1> ah it is an answer to a post from these from yesterday
[23:25:42] <pragma-> oh
[23:26:56] <donald1> I want to set up frama-c on radare2 project. https://paste.debian.net/1222157 but .h dependencies are not all read. How to specify these with -I 
[23:29:09] <floatcomplex> pragma-: writing perl and reading perl are two different skills :)
[23:29:56] *** Quits: arinov (~arinov@31.142.57.149) (Ping timeout: 245 seconds)
[23:30:02] <wroathe> I think you could generalize that to writing code and reading code generally. I have this problem where I get real clever when I'm in the zone writing code, and then when I return to that code a few months later as a less clever person I have no idea what clever me was thinking. 
[23:30:46] *** Joins: NEYi (~NEYi@109.251.216.38)
[23:31:00] *** Joins: rgrinberg (~textual@187.223.248.37)
[23:31:09] <donald1> floatcomplex wroathe: why are you speaking about perl? I am on frama-c
[23:32:20] <wroathe> donald1: Thanks for the update
[23:33:34] *** Joins: monkey_ (~user@190.104.116.153)
[23:39:55] <sham1> Perl's real problem is that the people who tend to write it don't tend to write it in a particularly readable fashion. The language is fine as far as readability is concerned, but it's just written badly
[23:39:55] *** Quits: cm007magnum (~Rheanna@218.78.105.67) (Remote host closed the connection)
[23:40:14] *** Quits: Kev_ (~Kev@2a01cb0400149f0040d78947317a0a93.ipv6.abo.wanadoo.fr) (Ping timeout: 268 seconds)
[23:41:58] *** Joins: codemin (~codemin@32.209.50.178)
[23:42:57] *** Quits: coolchrome (~cool333@bzq-79-176-139-177.red.bezeqint.net) (Read error: Connection reset by peer)
[23:43:40] <wroathe> pragma-: Yeah, hear that? It's your fault. 
[23:44:31] *** Quits: rgrinberg (~textual@187.223.248.37) (Ping timeout: 245 seconds)
[23:46:29] <pragma-> wroathe: My Perl is the finest artisanal Perl, like velvety pillows for your eyes.
[23:46:46] <floatcomplex> store bought is fine
[23:47:25] <pragma-> That said, I do want to rewrite nearly everything.
[23:48:05] *** Joins: cm007magnum (~Rheanna@61.171.21.169)
[23:48:13] *** Joins: Betal (~Betal@user/betal)
[23:48:19] <wroathe> pragma-: Well, I take that back. I didn't know it was _artisanal_. 
[23:48:32] <sham1> Way too relatable
[23:49:41] <pragma-> I mean, I'm now aware of better constructs for certain paradigms and I want to use them!
[23:50:17] <pragma-> But on the other hand, everything already kinda mostly works okay right now.
[23:50:52] <wroathe> Step 1. Rewrite it in Haskell 
[23:50:53] <pragma-> I really, really ought to rewrite the ,cc framework again.
[23:51:03] <wroathe> There is no step 2
[23:51:25] <pragma-> http://dev.stephendiehl.com/hask/tutorial.pdf
[23:51:44] <pragma-> That's my bath tub reading these days. 
[23:52:08] <wroathe> Don't the pages get moist? 
[23:52:47] <wroathe> I love Haskell, but it always makes me giggle when "intro" texts start with sentences like "At its heart Haskell is a lazy, functional, statically­typed programming language with advanced type system features such as higher­rank, higher­kinded parametric polymorphism, monadic effects, generalized algebraic data types, ad­hoc polymorphism through type classes, associated type families, and more"
[23:52:57] <wroathe> It's like, "Good. Great. Got it."
[23:53:15] <pragma-> But wait, there's more!
[23:53:17] <sham1> jargon jargon jargon jargon
[23:54:37] <sham1> Just like how C at its heart is an eager, imperative, statically typed programming language with semi-weak type system, pointer arithmetic, machine integer types, structured programming and more"
[23:55:35] <floatcomplex> those are definitely words
[23:55:41] <pragma-> I feel like "undefined behavior" should be in there instead of relegated to "and more"
[23:55:49] <sham1> Well it can be added to the list
[23:57:18] *** Quits: ioxzev1z (~ioxzev1z@user/ioxzev1z) (Quit: Leaving)
[23:57:53] <floatcomplex> some of the "correct" answers to questions in cjeopardy make me want to remove the typing fingers of...everyone
