[00:21:05] *** Quits: artchad (~user@public-gprs225103.centertel.pl) (Read error: Connection reset by peer)
[00:35:11] *** Quits: aeth (~aeth@user/aeth) (Ping timeout: 252 seconds)
[00:36:53] *** Joins: aeth (~aeth@user/aeth)
[00:57:43] *** Quits: shidima (~user@84-104-108-90.cable.dynamic.v4.ziggo.nl) (Ping timeout: 250 seconds)
[01:22:14] *** Quits: aeth (~aeth@user/aeth) (Ping timeout: 250 seconds)
[01:23:54] *** Joins: aeth (~aeth@user/aeth)
[01:33:17] *** Quits: aeth (~aeth@user/aeth) (Ping timeout: 240 seconds)
[01:35:20] *** Joins: aeth (~aeth@user/aeth)
[01:42:47] *** Joins: toastiest (~crumpo@user/crumpo)
[01:44:20] *** Quits: crumpy (~crumpo@user/crumpo) (Ping timeout: 250 seconds)
[01:48:11] *** Quits: toastiest (~crumpo@user/crumpo) (Quit: Buh bye)
[02:13:37] *** Joins: crumpo (~crumpo@user/crumpo)
[02:22:28] *** Quits: aeth (~aeth@user/aeth) (Ping timeout: 250 seconds)
[02:24:23] *** Joins: aeth (~aeth@user/aeth)
[02:34:10] *** Quits: aeth (~aeth@user/aeth) (Ping timeout: 250 seconds)
[02:35:52] *** Joins: aeth (~aeth@user/aeth)
[02:42:36] *** Quits: OlCe (~user@amontsouris-654-1-37-13.w92-151.abo.wanadoo.fr) (Ping timeout: 256 seconds)
[02:51:48] *** Quits: zap (~zap@gateway/tor-sasl/zap) (Ping timeout: 276 seconds)
[03:56:28] *** Quits: crumpo (~crumpo@user/crumpo) (Quit: Buh bye)
[04:33:57] *** Quits: aeth (~aeth@user/aeth) (Ping timeout: 240 seconds)
[04:36:08] *** Joins: aeth (~aeth@user/aeth)
[05:29:41] *** Quits: kevingal (~quassel@37.228.202.92) (Remote host closed the connection)
[05:50:44] *** Quits: aeth (~aeth@user/aeth) (Ping timeout: 256 seconds)
[05:52:38] *** Joins: aeth (~aeth@user/aeth)
[07:56:54] *** Joins: Oddity (~Oddity@user/oddity)
[08:55:51] *** Quits: azimut_ (~azimut@gateway/tor-sasl/azimut) (Remote host closed the connection)
[08:56:21] *** Joins: azimut (~azimut@gateway/tor-sasl/azimut)
[09:06:18] *** Joins: artchad (~user@public-gprs233403.centertel.pl)
[09:22:20] <artchad> Fuck it. OpenGL 3.3 it shall be.
[09:22:26] <artchad> D:<
[09:22:34] <artchad> borodust, mfiano you were right
[09:24:01] <artchad> Once I have a solid grasp on the 3.3 Core profile, I can then start worrying about supporting old machines, by learning the differences.
[09:27:44] <|3b|> also consider that anything with full GL that doesn't support 3.3 is probably going to be pretty slow and/or lack features, so might not end up being worth trying to support them at API level anyway
[09:29:13] <artchad> |3b|: I just had this vision of running high quality 2D games on an old IBM thinkpad.
[09:29:46] <artchad> I would optimize the crap out of it, to make that a reality. I was wondering how far I could push graphics for a game that's supposed to run on such a machine.
[09:30:17] <artchad> Such restrictions make very creative.
[09:30:42] <artchad> But I don't even know how to use SDL2 and OpenGL properly, so I will take step by step. :)
[09:30:48] <|3b|> also doesn't help that newer APIs have lots of features that are intended to make using the API more efficient, so not only is the hardware slower, the older API is less efficient, etc
[09:31:02] <|3b|> how old is the thinkpad?
[09:31:23] <|3b|> and what GPU on it?
[09:33:47] <artchad> x200 Intel Core 2 Duo
[09:34:15] <|3b|> also consider whether the restriction is directing the creativity in the direction you intend, if you spend all your time optimizing instead of designing, you end up with a bad game and a bunch of useless optimizations :)
[09:34:18] <artchad> A graphics window that draws 1280x720 pixels at 30 FPS, shouldn't be impossible
[09:34:58] <artchad> |3b|: everything I do it great. hehehehhe
[09:35:09] <artchad> (at least I try to view it that way.)
[09:37:21] * artchad is reading the OpenGL 3.3 spec
[09:40:38] <|3b|> looks like that thinkpad could plausibly do 720p @ 60fps
[09:45:16] <|3b|> using gl 2.1 would be annoying though, particularly if you have any intent to use more modern versions too
[09:45:55] * |3b| doesn't even like using 3.3, too much nice stuff in 4.3+ :)
[09:46:00] <artchad> Yeah, could very well be. I don't know how severe the break from 2.1 to 3.3 was.
[09:46:38] <|3b|> i think there were some changes in how shaders worked at 3 and 3.3, so more work to support both
[09:46:52] <|3b|> but a 3.3 shader works on anything after that
[09:46:53] <artchad> R.I.P.
[09:47:09] *** Quits: alMalsamo (~alMalsamo@gateway/tor-sasl/almalsamo) (Ping timeout: 276 seconds)
[09:47:22] <artchad> Maybe it's not meant to be.
[09:47:55] <artchad> But another cool thing about learning 3.3 Core, is that I can pester mfiano and borodust. (and maybe you)
[09:47:58] <artchad> whahaahahaha
[09:48:16] <mfiano> I think GL versions started matching up with GLSL around 3.0, but I think 3.2 is when immediate mode was deprecated in favor of pre-filling buffers.
[09:48:44] <mfiano> and I would say if your GPU supports that non-immediate mode minimum version, you would have an easier time squeezing more performance out
[09:48:45] * |3b| thought glsl 100 was gl3, and gl 3.3 is when glsl started matching with 330
[09:48:53] <mfiano> and anything higher as |3b| mentioned, would be even easier
[09:49:14] <mfiano> |3b|: maybe, that sounds right. 3.something I'll say :)
[09:49:34] *** Joins: alMalsamo (~alMalsamo@gateway/tor-sasl/almalsamo)
[09:49:50] <mfiano> artchad: what version does you laptop's gpu support?
[09:50:45] <artchad> I think it was 2.1
[09:50:51] <mfiano> Are you on linux?
[09:51:03] <artchad> I'm using another computer right now.
[09:51:10] <mfiano> ssh? :)
[09:51:12] <artchad> my current machine supports ... does glxinfo
[09:51:24] <mfiano> if using glxinfo, pay attention to the line: glxinfo | grep "core profile version string"
[09:53:23] <mfiano> glxinfo | grep "core profile version string" | cut -d ':' -f2 | awk '{print $1}'
[09:53:25] <mfiano> :)
[09:53:29] <mfiano> That should do it
[09:53:34] <|3b|> ah, maybe 3.0 was glsl 130, and 110 and 120 were from 2.x extensions?
[09:53:48] <artchad> https://paste.debian.net/plain/1228792
[09:54:19] <mfiano> artchad: Right, but that doesn't help if your goal is to write a nice looking 2D game on an old laptop
[09:54:31] <mfiano> Wrong machine specs to see if your goal is reachable :)
[09:54:53] <|3b|> old laptop is gl 2.1 (and es2 on linux) according to wikipedia
[09:54:55] <artchad> which machine specs would you need?
[09:54:57] *** Quits: alMalsamo (~alMalsamo@gateway/tor-sasl/almalsamo) (Ping timeout: 276 seconds)
[09:55:06] <mfiano> glxinfo on the old laptop
[09:55:13] <artchad> ye, I remember doing an glxinfo on the thinpad and it showd 2.1 Core
[09:55:18] <artchad> I think
[09:55:21] <artchad> or just 2.1
[09:55:28] <mfiano> How long ago?
[09:55:30] <|3b|> yeah, just 2.1... no core until 3+
[09:55:52] <mfiano> Intel integrated gpu's have gained higher GL version support via Mesa in the last few years
[09:56:10] <artchad> mfiano: Like a year ago. Didn't really use the laptop for a lot of programming since then.
[09:56:19] <mfiano> Ah ok, prob too old then
[09:56:48] <mfiano> I think this was like Haswell or so that was improved a few years ago
[09:56:59] <artchad> It doesn't matter now though. It's better to make a game in 3.3, than not making a game, because of frustrations in learning OpenGL.
[09:58:19] <artchad> Could you give me some more complex sdl2 + OpenGL examples to  study?
[09:58:46] <artchad> the examples in the cl-opengl repo are very basic
[09:59:01] <artchad> and they don't show an interaction with sdl2
[09:59:01] <mfiano> Yeah, I would set that old machine goal aside. You'd be wasting a lot of bandwidth preparing the data
[09:59:21] <|3b|> did you see https://github.com/3b/learnopengl ?
[09:59:33] * |3b| doesn't like it, but it's the best i have at the moment
[09:59:35] <artchad> no way
[09:59:38] <artchad> O . o
[09:59:41] <artchad> in lisp?
[09:59:43] <|3b|> no sdl though
[09:59:44] <mfiano> I don't think reading complex examples is the way to go. I would read the learnopengl.com website in order (or download the free book)
[09:59:44] <artchad> LISP?
[09:59:50] <mfiano> and then follow along with 3b's lisp code
[09:59:52] <artchad> it's Lisp though, right?
[10:00:00] * artchad starts crying
[10:00:01] <|3b|> yeah, cl-opengl
[10:00:08] <artchad> omg, I love you.
[10:00:15] <mfiano> That website is the best learning resource. The specification is too dry to learn how to use it practically, obviously.
[10:00:41] <artchad> Ok, fuck sdl2 for now. I'm doing glut with that repo. It's a godsend gift.
[10:00:51] <artchad> lmao
[10:01:06] <mfiano> I maintain cl-sdl2 if there are any problems. But you really only need it for an OpenGL context.
[10:01:24] <mfiano> glut, I have no experience with, so you're on your own unless you find someone with experience using it.
[10:01:40] <artchad> *cough |3b| cough*
[10:01:45] <mfiano> Most here use cl-sdl2 afaik, except for |3b| because he's an oddball ;)
[10:02:17] * |3b| doesn't like glut either :p
[10:02:20] *** Quits: aeth (~aeth@user/aeth) (Ping timeout: 256 seconds)
[10:02:37] <|3b|> but what i do like doesn't exist, so can't really tell people to use it
[10:04:02] *** Joins: aeth (~aeth@user/aeth)
[10:04:02] <mfiano> glop2, the vaporware that hasn't even been started yet, because sdf is hard :)
[10:04:23] <|3b|> it is sort of started, but only in the sense of poking at a few targets to see how they work
[10:04:53] <mfiano> Ok I'm out, good luck with your learning and whatnot
[10:05:00] <artchad> cheers
[10:29:06] <artchad> |3b|: the examples don't work on my machine. Q . Q 
[10:29:07] <artchad> https://files.catbox.moe/y0izeg.mkv
[10:29:13] <artchad> I even made a little recording. :D
[10:31:39] <|3b|> looks like it is generating a glsl 450 shader, let me check how to fix that, since i don't think it needs it
[10:32:32] * artchad poor glsl 4.3 dude
[10:32:49] <|3b|> try (setf 3bgl-shaders:*default-version*  430) and run it again
[10:33:51] <artchad> roger boss
[10:33:52] <|3b|> my shader compiler is a bit flaky, unfortunately :/
[10:34:06] <artchad> works
[10:34:46] <artchad> (setf 3bgl-shaders:*default-version*  330) works also
[10:37:17] <|3b|> yeah, that's also a reasonable choice :)
[10:37:20] *** Quits: artchad (~user@public-gprs233403.centertel.pl) (Read error: Connection reset by peer)
[10:40:53] *** Joins: artchad (~user@public-gprs233403.centertel.pl)
[10:41:52] <artchad> Ok, I'll be back later. Forgot to mention that.
[10:46:01] *** Quits: artchad (~user@public-gprs233403.centertel.pl) (Read error: Connection reset by peer)
[11:39:59] *** Joins: artchad (~user@public-gprs233403.centertel.pl)
[12:00:51] *** Quits: artchad (~user@public-gprs233403.centertel.pl) (Read error: Connection reset by peer)
[12:03:31] *** Joins: alMalsamo (~alMalsamo@gateway/tor-sasl/almalsamo)
[12:34:51] *** Quits: d4ryus (~d4ryus@ppp-188-174-84-16.dynamic.mnet-online.de) (Quit: WeeChat 3.4)
[13:04:51] *** Joins: d4ryus (~d4ryus@ppp-188-174-84-16.dynamic.mnet-online.de)
[13:33:30] *** Joins: kevingal (~quassel@2a02:8084:4140:f300:e0c2:1cb3:66c2:bea2)
[16:43:15] *** Joins: crumpo (~crumpo@user/crumpo)
[16:48:11] *** Joins: skeemer (~skeemer@h-158-174-23-219.NA.cust.bahnhof.se)
[16:56:41] *** Quits: Oddity (~Oddity@user/oddity) (Ping timeout: 250 seconds)
[17:01:02] *** Joins: artchad (~user@public-gprs233403.centertel.pl)
[17:45:37] *** Quits: mathrick (~mathrick@67.148.61.4) (Ping timeout: 240 seconds)
[18:11:56] *** Quits: rtypo (~alex@user/rtypo) (Ping timeout: 256 seconds)
[19:33:12] *** Joins: domovod (~domovod@176.196.122.197)
[19:39:16] *** Quits: kevingal (~quassel@2a02:8084:4140:f300:e0c2:1cb3:66c2:bea2) (Remote host closed the connection)
[19:43:59] *** Joins: zap (~zap@gateway/tor-sasl/zap)
[19:45:31] *** Quits: zap (~zap@gateway/tor-sasl/zap) (Remote host closed the connection)
[19:45:52] *** Joins: zap (~zap@gateway/tor-sasl/zap)
[19:56:00] *** Joins: treflip (~user@user/treflip)
[20:01:28] *** Joins: mathrick (~mathrick@67.148.61.4)
[20:59:23] *** Quits: crumpo (~crumpo@user/crumpo) (Quit: Buh bye)
[21:41:41] *** Joins: cmack (~charlie@2600:1700:5d51:26ff:ff74:fdb8:a461:6cfa)
[21:49:29] *** Joins: [w] (~w]@2601:8c1:80:70d0::4b06)
[21:55:19] *** Quits: treflip (~user@user/treflip) (Quit: good night!)
[21:58:13] <artchad> Hi, when loading sdl2-ttf, I get an error, because cffi can't find my libffi.so. My version might be too new.
[21:59:44] <artchad> I have libffi.so in /usr/lib, which is a symlink to libffi.so.8, which is a symblink to libffi.so.8.1.0
[21:59:50] <borodust> what library do you use for sdl2 ttf?
[22:00:02] <artchad> Unable to load any of the alternatives:
[22:00:02] <artchad>    ("libffi.so.7" "libffi32.so.7" "libffi.so.6" "libffi32.so.6" "libffi.so.5" "libffi32.so.5")
[22:00:20] <artchad> the one from quicklisp
[22:00:30] <artchad> cl-sdl2-ttf
[22:00:47] <artchad> I think
[22:00:53] <artchad> Let me verify
[22:00:55] <borodust> well, you need to add libffi library to that list (and hope it is compatible, which might not be the case)
[22:01:06] <borodust> *your libffi library
[22:01:50] <borodust> meaning, you need to download cl-sdl2-ttf source and fix it
[22:02:22] <borodust> check quicklisp project description to see where it gets it
[22:02:42] <borodust> https://github.com/quicklisp/quicklisp-projects
[22:02:57] <artchad> how do I check the quicklisp project description?
[22:03:27] <artchad> oh
[22:04:46] <artchad> https://github.com/sharplispers/cl-sdl2-ttf.git
[22:04:49] <artchad> apparently
[22:05:13] <artchad> can I check on my machine from where it was downloaded?
[22:05:20] <borodust> hmm
[22:05:50] <borodust> not sure, there's something in ~/quicklisp/ probably
[22:05:53] <borodust> metadata or smth
[22:06:12] * artchad is looking
[22:06:18] <borodust> (ql:system-apropos "cl-sdl2-ttf")
[22:07:06] <artchad> #<SYSTEM sdl2-ttf / cl-sdl2-ttf-20200925-git / quicklisp 2021-12-30>
[22:08:31] * artchad is visibly confused.
[22:08:37] <artchad> I don't even know what could cause that?
[22:08:52] <borodust> i mean, maybe somehow that will help you locate metadata ;p
[22:09:01] <artchad> didn't really
[22:09:02] <artchad> xD
[22:09:14] <artchad> I'll fix that somehow eventually.
[22:09:18] <artchad> maybe
[22:09:48] <borodust> https://github.com/quicklisp/quicklisp-projects/search?q=cl-sdl2-ttf
[22:09:53] <borodust> or smth like this
[22:10:53] <artchad> I think I need to add an extra element to a list in cl-autowrap
[22:11:09] <artchad> there is this kind of form somewhere ("libffi.so.7" "libffi32.so.7" "libffi.so.6" "libffi32.so.6" "libffi.so.5" "libffi32.so.5")
[22:12:23] <borodust> yup
[22:18:53] <artchad> it was actually inside cffi
[22:18:58] <artchad> not even cl-autowrap
[22:19:10] <artchad> cffi/libffi/libffi.lisp
[22:19:41] <artchad> they should use libffi.so at the front. Don't know why they don't do that.
[22:19:42] <artchad> :/
[22:28:31] <artchad> borodust: What did you mean by "(and hope it is compatible, which might not be the case)"?
[22:29:16] <artchad> yeah, I still have the issue, even after adjusting the one pair inside the #'define-foreign-library to (:unix (:or "libffi.so" "libffi.so.8" "libffi.so.7" "libffi32.so.7" "libffi.so.6" "libffi32.so.6" "libffi.so.5" "libffi32.so.5" "libffi.so.8"))
[22:29:49] * artchad could just render text to an image and blit that. 
[22:39:27] <borodust> artchad: libffi api could have changed and cl-autowrap does not expect that
[22:39:56] <artchad> But that would lead to a different bug, wouldn't it?
[22:40:12] <borodust> yeah, much more subtle one
[22:40:13] <artchad> It tells me that it just can't find the library, which is weird, because it's right there. > . <
[22:40:26] <artchad> Can I force quicklisp to recompile a library?
[22:40:46] <borodust> (asdf:load-system :your-system-name :force t
[22:40:46] <artchad> I mean cffi, cl-autowrap and cl-sdl2-tff?
[22:40:48] <borodust> )
[22:40:56] <artchad> gracias senior
[22:43:25] <artchad> yeah, doesn't help. I even tried specifying an absolute path. T ^T
[22:43:51] <artchad> but at least I learned how to force recompilation of a system.
[22:44:03] <borodust> what did you do exactly
[22:44:22] <borodust> where did you change the list of libraries
[22:44:42] <artchad> in cffi
[22:44:49] <artchad> the libffi/libffi.lisp
[22:45:06] <artchad> under the unix or-form
[22:45:19] <borodust> in (ql:where-is-system :cffi) directory?
[22:45:22] <borodust> err
[22:45:36] <borodust> or cl-autowrap
[22:45:38] <artchad> #P"/home/user/quicklisp/local-projects/nyxt/_build/cffi/"
[22:45:43] *** Quits: domovod (~domovod@176.196.122.197) (Ping timeout: 268 seconds)
[22:45:43] <artchad> lol
[22:45:44] <artchad> ok
[22:45:45] <artchad> rip
[22:45:47] <artchad> that was it
[22:45:59] <artchad> local-projects is dangerous
[22:46:02] <borodust> very
[22:46:08] <artchad> F**K
[22:46:41] <artchad> borodust: Where do you store repositories you want to play around with?
[22:46:55] <artchad> I really should learn asdf...
[22:47:25] <borodust> i keep symlinks in local-projects, but only for i'm working on rn
[22:47:46] <borodust> i'm thinking about moving to clpm once it matures a lil bit more
[22:48:44] <borodust> https://www.clpm.dev/
[22:51:07] <artchad> mfiano is using that right?
[22:51:22] <artchad> Seems stable enough then. quicklisp is also just in beta. :^D
[22:51:30] <borodust> heh
[22:51:54] <borodust> i recommend going with asdf for now
[22:51:57] <borodust> and quicklisp
[22:52:13] <borodust> you don't want to learn one more unstable tech
[22:52:43] <artchad> true
[22:53:20] * artchad mumbles "load path" "load path something" "where is it..."
[22:54:20] <borodust> load path? ;p
[22:54:27] <borodust> like, load lisp file?
[22:55:19] <artchad> yeah, there was a variable asdf uses to keep track of the directories it looks through
[22:57:23] <borodust> this one probably asdf:*central-registry*
[22:57:48] <artchad> yes. :D
[22:57:51] <artchad> thanks
[22:58:32] <artchad> I started to keep track of all the new things I learn inside an org document.
[23:00:44] <edgar-rft> do you also have org documents where you keep track of all the things you learned inside other org documents?
[23:01:59] <artchad> I actually just put everything into a giant monolithic org document with bullet points for different interests.
[23:02:16] <artchad> sdl-ttf loaded successfully.
[23:02:50] <artchad> my statement still holds though. There should be a "libffi.so" at the front of the :unix list in libffi.lisp.
[23:06:26] <borodust> unless libffi says their API is stable forever it's a wrong way to do it
[23:07:01] <borodust> there's a reason libraries has this pesky numbers attached
[23:09:14] <artchad> I didn't think about it that way. I would never dare to break backward compatibility when I wrote a library. I'd do it like the SDL2 folks and make a giant rewrite.
[23:10:17] <borodust> it doesn't matter how you write your library, it's a matter whether libffi dudes guarantee you that their API will never change
[23:10:53] <borodust> if they do that, you can safely put "libffi.so" and ignore every other name
[23:11:52] <borodust> if they don't provide that guarantee, you can't use "libffi.so" because you wouldn't know what API it exports
[23:11:54] <artchad> I understand your point.
[23:25:16] *** Joins: rtypo (~alex@user/rtypo)
[23:29:46] <artchad> interesting. the sld2-ttf examples can load .ttf files, but it could not load the original .otf file specified in the basic-example.
[23:36:31] *** Quits: cmack (~charlie@2600:1700:5d51:26ff:ff74:fdb8:a461:6cfa) (Read error: Connection reset by peer)
[23:39:22] <artchad> Have a good night. Now that I have everything kinda working, I can play around with OpenGL a bit more. That's a good point to call it quits for today.
[23:39:58] <borodust> gn
[23:42:00] *** Quits: artchad (~user@public-gprs233403.centertel.pl) (Read error: Connection reset by peer)
