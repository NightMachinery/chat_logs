[00:04:06] *** Joins: stipa (~stipa@user/stipa)
[00:05:02] *** Joins: specing_ (~specing@user/specing)
[00:06:17] *** Quits: gb73d (gb73d@88-111-137-198.dynamic.dsl.as9105.com) ()
[00:06:30] *** Joins: i0e (~is0ke3@user/is0ke3)
[00:08:10] *** Quits: specing (~specing@user/specing) (Ping timeout: 258 seconds)
[00:08:10] *** specing_ is now known as specing
[00:10:00] *** matt_ is now known as Matt|home
[00:10:46] *** Quits: HisShadow (~HisShadow@188.170.82.102) (Ping timeout: 272 seconds)
[00:10:55] <stipa> is this a typo at 21:24 https://youtu.be/AcxDiesy-nI?t=1304 , shouldn't it be Vd=Ic*Rc-Va instead of Vd=Va-Ic*Kc ? Ok, if i want to rearrange Va-Vd=Ic*Rc to get Vd=... ,i guess i should do it like this, Va-Va-Vd=Ic*Rc-Va, at the left Va cancels out  and i'm left with -Vd=Ic*Rc-Va , right?
[00:11:28] <Matt|home> heh.. play game: true count of like +10 , almost consistently,  and i lose like 5 grand. jesus
[00:15:59] *** Joins: HisShadow (~HisShadow@188.170.86.28)
[00:17:45] <bildramer> cokernel_hacker: exp(ix) = cos(x) + isin(x), then work backwards
[00:18:11] *** Quits: qwedfg (~qwedfg@user/qwedfg) (Quit: ZNC - https://znc.in)
[00:18:29] <bildramer> knowing that cos = x/sqrt(x^2+y^2), and sin the y version
[00:18:29] *** Joins: qwedfg (~qwedfg@user/qwedfg)
[00:21:50] *** Joins: johnkeats6 (~johnkeats@2804:14c:32:a0cc:d8d7:f86a:4716:f61a)
[00:24:21] *** Joins: Julian (~tos9@host-79-13-125-128.retail.telecomitalia.it)
[00:29:44] *** Quits: Julian (~tos9@host-79-13-125-128.retail.telecomitalia.it) (Ping timeout: 268 seconds)
[00:33:14] *** Joins: Maturion (~Maturion@p200300ede7352a0021817a7681ab704b.dip0.t-ipconnect.de)
[00:37:38] *** Parts: savask (~savask@Powder/Developer/savask) ()
[00:38:45] *** Joins: sco1 (~sco1@charon.whatbox.ca)
[00:39:16] <johnkeats6> hi
[00:39:47] *** Joins: Julian (~tos9@host-79-13-125-128.retail.telecomitalia.it)
[00:41:22] <[itchyjunk]> hello
[00:41:55] *** pikhq_ is now known as pikhq
[00:43:02] *** Joins: trace987 (~trace@ip5b429953.dynamic.kabel-deutschland.de)
[00:51:58] <mh_le> heya
[00:55:18] <[itchyjunk]> tolarz, ping. people use basic logics in video games like factorio or such to make crazy things. they `programm` things. is there some low hanging fruit that i can learn so i get better at this stuff?
[00:56:52] <mh_le> Z-module: you around?
[01:00:20] *** Quits: am1985 (~am1985@cpe-76-175-74-129.socal.res.rr.com) (Quit: This computer has gone to sleep)
[01:03:40] *** Joins: PTY (~PTY@pool-108-7-202-72.bstnma.fios.verizon.net)
[01:04:20] *** Joins: glider (~glider@user/glider)
[01:04:21] *** Joins: am1985 (~am1985@cpe-76-175-74-129.socal.res.rr.com)
[01:05:14] *** Quits: DrMax (~DrMax@node-1w7jra94757g0tz1mop8siu1l.ipv6.telus.net) (Ping timeout: 268 seconds)
[01:05:40] *** Quits: Pollion (bombar@zamok.crans.org) (Ping timeout: 250 seconds)
[01:08:33] <Z-module> here
[01:09:25] <mh_le> :D
[01:09:33] <mh_le> query?
[01:10:36] *** Joins: kakuhen (~kakuhen@user/kakuhen)
[01:12:04] *** Quits: ScRamble (~S@na.altplay.net) (Quit: ZNC - http://znc.in)
[01:14:25] *** Quits: am1985 (~am1985@cpe-76-175-74-129.socal.res.rr.com) (Quit: This computer has gone to sleep)
[01:14:39] *** Parts: expix (~1@anice-654-1-60-10.w83-201.abo.wanadoo.fr) ()
[01:14:40] *** Joins: haykam (~haykam@static.100.2.21.65.clients.your-server.de)
[01:17:25] *** Quits: quarterback (~quarterba@user/quarterback) (Read error: Connection reset by peer)
[01:18:27] *** Joins: DrMax (~DrMax@node-1w7jra94757g0pjx462tzabhf.ipv6.telus.net)
[01:18:45] *** Quits: oriba (~oriba@dynamic-078-055-042-149.78.55.pool.telefonica.de) (Quit: https://quassel-irc.org - Chat comfortably. Anywhere.)
[01:19:50] *** Joins: ScRamble (~S@dank.na.altplay.net)
[01:21:41] *** Joins: elf_fortrez (~elf_fortr@adsl-72-50-6-22.prtc.net)
[01:24:20] <tolarz> [itchyjunk]: a first step would be to familiarize oneself with logic gates (and, or gate) and truth tables. I guess you know both, but in a different context. What people do in factorio or Minecraft is the same thing that people do to build CPUs for computers.
[01:24:37] <tolarz> [itchyjunk]: so a low hanging fruit would be to create an adder that adds two 1-bit numbers
[01:25:00] <tolarz> [itchyjunk]: and then an adder that adds two n-bit numbers for some low n (e.g. n = 4)
[01:25:51] *** Quits: Crescendo (~Crescendo@user/crescendo) (Ping timeout: 268 seconds)
[01:25:53] <[itchyjunk]> hmmm
[01:26:07] *** Joins: Crescendo (~Crescendo@user/crescendo)
[01:26:13] <[itchyjunk]> sounds hard :s all i need to know is and/or and truth table to add things?
[01:26:23] <[itchyjunk]> oh right, i think i saw that in my descrete class actually
[01:26:25] <[itchyjunk]> hmmmmmmmmmmmmmm
[01:27:07] <tolarz> to design circuits, (i) build a truth table, (ii) implement that truth table via and/or gates
[01:27:09] <tolarz> and negation
[01:27:17] <tolarz> (this only scales for smallish circuits to do manually)
[01:27:28] <tolarz> for bigger one, you compose multiple smaller circuits usually
[01:27:31] <tolarz> or software does it for you
[01:29:27] <[itchyjunk]> i saw this crazy thing where this guy was using artificial neuron to make and/or gates and then postulating that he can tehn build a cpu out of artificial neurons
[01:29:28] *** Joins: Cr4ft (~jordan@2604:3d09:7179:8a00:8ac8:34a4:e45f:15f6)
[01:29:37] <[itchyjunk]> sounded very interesting
[01:29:41] *** Joins: am1985 (~am1985@cpe-76-175-74-129.socal.res.rr.com)
[01:29:59] <tolarz> what is an artificial neuron?
[01:30:07] <tolarz> another primitive?
[01:30:20] <tolarz> so in my sentences above, i assumed and/or gates to be primitive.
[01:30:27] <[itchyjunk]> it was like a thing with 2 input with some associated weights and it outputted one thing out
[01:30:29] <tolarz> so you're saying they took something else ("artificial neuron")
[01:30:31] <tolarz> ah yeah
[01:32:53] *** Quits: dhil (~dhil@195.213.192.47) (Ping timeout: 258 seconds)
[01:32:58] *** Quits: madage (~madage@user/madage) (Remote host closed the connection)
[01:33:14] *** Joins: madage (~madage@user/madage)
[01:35:35] *** Joins: Pollion (bombar@zamok.crans.org)
[01:36:32] <mh_le> Z-module: query?
[01:37:16] *** Quits: Sheilong (uid293653@id-293653.charlton.irccloud.com) ()
[01:38:56] *** Quits: glaucon (~glaucon@46.109.108.150) (Quit: Lost terminal)
[01:42:45] *** Quits: haykam (~haykam@static.100.2.21.65.clients.your-server.de) (Remote host closed the connection)
[01:45:27] <ronald_mcdonald> [itchyjunk], I don't think it was anything deep
[01:45:57] <ronald_mcdonald> Once you can make a nand and a flip flop you have theoretically proved you can make a cpu
[01:46:12] *** Quits: HisShadow (~HisShadow@188.170.86.28) (Ping timeout: 268 seconds)
[01:47:15] *** Quits: revolve (~u0_a227@82-132-247-166.dab.02.net) (Read error: Connection reset by peer)
[01:48:33] *** Joins: bitdex (~bitdex@gateway/tor-sasl/bitdex)
[01:49:09] *** Joins: haykam1 (~haykam@static.100.2.21.65.clients.your-server.de)
[01:49:16] *** Joins: revolve (~u0_a227@82-132-244-246.dab.02.net)
[01:50:35] *** Quits: takuan (~takuan@178-116-218-225.access.telenet.be) (Remote host closed the connection)
[01:52:22] *** Quits: chomwitt (~Pitsikoko@athedsl-16082.home.otenet.gr) (Ping timeout: 252 seconds)
[01:52:44] *** Quits: jinsun (~quassel@user/jinsun) (Ping timeout: 265 seconds)
[01:52:44] *** Quits: soapsudsxx (~soapsudsx@209.221.40.157) (Remote host closed the connection)
[01:53:58] *** Joins: soapsudsxx (~soapsudsx@209.221.40.157)
[01:54:38] *** Joins: chomwitt (~Pitsikoko@2a02:587:dc0b:0:d8f7:cdfe:4658:bec4)
[02:00:42] *** Quits: elf_fortrez (~elf_fortr@adsl-72-50-6-22.prtc.net) (Quit: Client closed)
[02:01:12] <[itchyjunk]> ronald_mcdonald, i'd like to make an artificial neuron and maybe an adder?
[02:01:23] <[itchyjunk]> i guess i need to chain a bunch of and gates and do binary addition
[02:01:37] <ronald_mcdonald> Neurons are a distraction
[02:01:40] <[itchyjunk]> oh hmm
[02:01:43] <mh_le> tolarz: you into quantum computing?
[02:01:44] <[itchyjunk]> oh really?
[02:01:49] <ronald_mcdonald> You can make an xor with two neurons
[02:01:51] <ronald_mcdonald> and other gates with one
[02:02:01] <ronald_mcdonald> Transistors are everything
[02:02:07] <[itchyjunk]> how do you get into deep learning stuff without neurons?
[02:02:12] <[itchyjunk]> well, now that's physics
[02:02:34] <[itchyjunk]> and i don't have brain capacity to learn electronics stuff there
[02:02:56] <[itchyjunk]> thought i've gone thorough a phy class long time ago that touched on these things porbbaly
[02:03:28] <[itchyjunk]> Im after low hanging fruits ,rather than optimial path to learn
[02:03:29] <tolarz> mh_le: not at all
[02:03:44] <ronald_mcdonald> Deep learning is a different topic
[02:03:58] <mh_le> tolarz: I'm taking a course on it after summer
[02:04:07] <tolarz> i want to quit
[02:04:09] <tolarz> academia
[02:04:11] <tolarz> i guess
[02:04:22] <mh_le> :O
[02:04:26] <[itchyjunk]> well, all topics are quite difficult
[02:05:10] * [itchyjunk] sees no low hanging fruit and curses
[02:05:20] <tolarz> i guess the n-bit adder is low-hanging
[02:05:23] <tolarz> but idk what your goals are
[02:06:03] <[itchyjunk]> being able to use and gates to do binary addition seems like a worthy goal
[02:06:04] <mornfall> if you ignore how transistors work and treat them as logic, it's not very hard
[02:06:06] <stipa> tolarz: being stupid is tough life
[02:06:16] <[itchyjunk]> should i try it on my own or should i be looking at a tutorial?
[02:06:19] <mornfall> or just use gates to simplify a bit further
[02:06:33] <[itchyjunk]> right, i am willing to start with gates
[02:06:37] <[itchyjunk]> i assume they exist for now
[02:06:54] <ronald_mcdonald> Transistors are everything
[02:06:56] <ronald_mcdonald> All else is a lie
[02:07:02] <[itchyjunk]> also, do i get to mix gates for this adder?
[02:07:11] <[itchyjunk]> like throw in some and and some or gates in there
[02:07:11] <ronald_mcdonald> You are thinking too hard
[02:07:13] <stipa> tolarz: my advice would be to crash that academia
[02:07:15] <mornfall> then build a 1 bit adder with a carry output
[02:07:21] <tolarz> [itchyjunk]: yes, mix, yes read lecture notes/tutorial
[02:07:25] <tolarz> stipa: stop trolling
[02:07:26] <ronald_mcdonald> You just need to prepare a simple table of two inputs and two outputs for a half adder
[02:07:33] <ronald_mcdonald> Three inputs and two outputs for a full adder
[02:07:35] <ronald_mcdonald> (of 1 bit)
[02:07:39] <mornfall> if nothing else works, just write down a table with inputs → outputs, write the propositional formula that implements that table
[02:07:45] <[itchyjunk]> mornfall, yes 1 bit adder with a carry sounds great
[02:07:54] <ronald_mcdonald> [itchyjunk], only 8 possible inputs
[02:07:57] <[itchyjunk]> mornfall, oh that's a great starting place
[02:08:01] <ronald_mcdonald> very symmetric formula too
[02:08:24] <mornfall> then wire that formula into a diagram, then wire two of them together
[02:08:35] *** Quits: Maturion (~Maturion@p200300ede7352a0021817a7681ab704b.dip0.t-ipconnect.de) (Ping timeout: 272 seconds)
[02:09:14] <ronald_mcdonald> mornfall, its all trivial. Doing some binary logic on paper is not hard. The implementation is where its interesting.
[02:09:27] <mornfall> ronald_mcdonald: [itchyjunk] was after low-hanging fruit
[02:09:29] <[itchyjunk]> hmm 8 out puts? so i take in 2 bits and out put 1 bit right?
[02:09:29] <ronald_mcdonald> Anybody can create a simple cpu on paper
[02:09:33] <[itchyjunk]> so just 4 cases?
[02:09:45] <ronald_mcdonald> [itchyjunk], there are two inputs and a carry bit
[02:09:49] <stipa> tolarz: yeah right, i'll stop
[02:09:54] <ronald_mcdonald> so 2^3=8 inputs
[02:10:06] <mornfall> [itchyjunk]: well, as ronald_mcdonald says, if you want to chain the things, you need the two operands and carry on the input, and the result bit and carry on the output
[02:10:35] <mornfall> but just the two operands work as a start, then add the carry input
[02:10:48] <[itchyjunk]> ah i think i understand
[02:10:50] <ronald_mcdonald> That would be a half adder
[02:10:53] <[itchyjunk]> right i'll start with 2
[02:10:57] <ronald_mcdonald> Just read a book on digital logic
[02:11:00] <[itchyjunk]> oh that's called half adder, i see!
[02:11:03] <ronald_mcdonald> You are making it harder than it is
[02:11:13] <[itchyjunk]> ronald_mcdonald, i want to learn some digital logic
[02:11:21] <[itchyjunk]> i thought this was the right step towards it :s
[02:11:29] *** Quits: chomwitt (~Pitsikoko@2a02:587:dc0b:0:d8f7:cdfe:4658:bec4) (Ping timeout: 268 seconds)
[02:11:49] * [itchyjunk] would like to understand things like FPGA at some point 
[02:12:04] <ronald_mcdonald> [itchyjunk], the universe is huge
[02:12:05] <mornfall> combinatorial logic is the easy part, i guess
[02:12:30] <ronald_mcdonald> Yes flip flops are what make things interesting
[02:13:22] <mornfall> when you master that, you can start thinking about remembering things :)
[02:13:29] *** Quits: am1985 (~am1985@cpe-76-175-74-129.socal.res.rr.com) (Quit: This computer has gone to sleep)
[02:13:49] <[itchyjunk]> hmm so my table with In and Out almost looks like an and table
[02:14:01] <[itchyjunk]> but the 1 1 gives a 0 with carry 1 is the only difference
[02:14:02] <ronald_mcdonald> Exactly
[02:14:03] <mornfall> how about that carry bit
[02:14:11] <ronald_mcdonald> its actually an xor
[02:14:22] <[itchyjunk]> oh
[02:14:44] <[itchyjunk]> oh right, it is a xor
[02:14:58] <ronald_mcdonald> ab' + a'b
[02:17:14] *** Joins: phillbush (~phillbush@user/phillbush)
[02:20:31] <[itchyjunk]> wait i said it looks like and gate, i should have said look like an or minus the last part making it xor
[02:21:17] <ronald_mcdonald> [itchyjunk], now derive the formula for the carry
[02:21:50] <[itchyjunk]> am i now trying to chain and and or gates to make somethign that spits out the same thing as my truth table?
[02:22:05] <ronald_mcdonald> Compute the carry first
[02:22:16] <ronald_mcdonald> Add another column to your output 'carry'
[02:22:17] <[itchyjunk]> hmm not sure i understand what that means
[02:22:29] <ronald_mcdonald> [itchyjunk], addition can generate a carry
[02:22:32] <mornfall> you know elementary school addition?
[02:22:36] <mornfall> it's that
[02:22:40] <mornfall> just base 2 not base 10
[02:23:00] <mornfall> 5 + 5 is 0, carry 1
[02:23:24] <mornfall> well, (1 + 1)₂ is zero, carry 1
[02:23:24] <[itchyjunk]> oh i made table with 8 entries, the out put looks like 0 0, 0 1, 0 1, 1 0, 0 1, 1 1, 1 1, 0 0
[02:23:38] <ronald_mcdonald> Finish the half adder first before starting a full adder
[02:23:46] *** Quits: notzmv (~zmv@user/notzmv) (Ping timeout: 272 seconds)
[02:23:48] <stipa> [itchyjunk]: you could use some high level language that doesn't deal with binary stuff
[02:23:58] <ronald_mcdonald> Yes
[02:24:02] <ronald_mcdonald> I do the same
[02:24:06] <[itchyjunk]> like use python with if then ?
[02:24:18] <ronald_mcdonald> No, just let the language add numbers
[02:24:25] <ronald_mcdonald> But I think you wanted to make a cpu
[02:24:41] <stipa> [itchyjunk]: python would be a great choice
[02:24:51] <[itchyjunk]> i just wanted to understand some of this stuff.
[02:24:54] <ronald_mcdonald> stipa, python also has bigints
[02:25:13] <[itchyjunk]> hm but what am i trying to do in py? hard code this truth table?
[02:25:18] <ronald_mcdonald> No
[02:25:24] <ronald_mcdonald> You don't write truth tables in python
[02:25:28] *** Quits: Crescendo (~Crescendo@user/crescendo) (Read error: Connection reset by peer)
[02:25:28] <ronald_mcdonald> you just write a=b+c
[02:25:38] <ronald_mcdonald> But finish the half adder first
[02:25:46] *** Joins: Crescendo (~Crescendo@user/crescendo)
[02:26:38] <stipa> [itchyjunk]: there's probably a library that deals with what you want for python
[02:26:51] <ronald_mcdonald> stipa, there is no need: a=b+c
[02:27:10] <stipa> there's not but his goal s much more coplex probably
[02:28:10] *** Joins: alanxoc3_ (~alanxoc3@160-3-172-241.cpe.sparklight.net)
[02:29:11] *** Parts: alanxoc3_ (~alanxoc3@160-3-172-241.cpe.sparklight.net) ()
[02:30:56] <[itchyjunk]> i was trying to put and and or parallel to each other to make  something happen
[02:31:06] <[itchyjunk]> do i assume i also have a xor to begin with?
[02:31:14] <[itchyjunk]> or do i have to make a xor gate with and and or?
[02:31:18] <[itchyjunk]> i guess i should try that
[02:31:33] <stipa> there are logic emulators
[02:31:40] <ronald_mcdonald> That wont work
[02:31:45] <[itchyjunk]> hmmm
[02:32:00] <ronald_mcdonald> You have to first build a half adder, then a full adder then connect them in a chain for the simplest n-bit adder
[02:32:07] <[itchyjunk]> thing is i want 0 when i have 1 and 1
[02:32:18] <[itchyjunk]> but neither and nor or gates give me this
[02:32:19] <ronald_mcdonald> There are other techniques that result in a faster circuit
[02:32:23] <ronald_mcdonald> but those are more complex
[02:32:33] <ronald_mcdonald> [itchyjunk], first compute the carry output
[02:32:46] *** Quits: newpy (~newpy@2602:ffc6:200:ce:cdda:49c3:129a:15ef) (Read error: Connection reset by peer)
[02:32:55] <[itchyjunk]> well its just 0, 0, 0, 1 on the table
[02:33:09] <ronald_mcdonald> First deal with a half adder
[02:33:09] *** Joins: newpy (~newpy@2602:ffc6:200:ce:cdda:49c3:129a:15ef)
[02:33:13] <ronald_mcdonald> Full adder is for later
[02:33:33] <[itchyjunk]> oh i think i know what you mean hmm
[02:34:15] *** Quits: aquijoule_ (~richbridg@213-225-5-235.nat.highway.a1.net) (Remote host closed the connection)
[02:35:51] <[itchyjunk]> oh carry looks like 0 0 -> 0 , 0 1 -> 0, 1 0 -> 0, 1 1 -> 1
[02:35:57] <[itchyjunk]> so carry is done by and gate
[02:35:58] <[itchyjunk]> ?
[02:36:33] <tolarz> yes
[02:36:44] <[itchyjunk]> hmmm
[02:36:48] <tolarz> and sum by xor
[02:37:08] <[itchyjunk]> so i assume xor pre exists also? or do i have to build xor with `and` and `or` ?
[02:37:14] <tolarz> input: bits b, c  output: (b xor c) (the sum), (b and c) (the carry
[02:37:24] <tolarz> xor is easily built with and, or, negation
[02:37:50] <[itchyjunk]> ah
[02:37:56] <[itchyjunk]> maybe good exercise to do that too then
[02:40:33] <ronald_mcdonald> [itchyjunk], a xor b = a'b + ab'
[02:40:47] <ronald_mcdonald> Verify for yourself
[02:41:59] <[itchyjunk]> hmm
[02:42:24] <[itchyjunk]> not sure i understand the notation fully
[02:43:02] <[itchyjunk]> oh a' is not a
[02:43:05] <[itchyjunk]> ?
[02:43:12] *** Quits: LucaTM (~LucaTM@user/lucatm) (Quit: Textual IRC Client: www.textualapp.com)
[02:43:44] <[itchyjunk]> oh right
[02:44:07] <[itchyjunk]> so if a = 0 , a' = 1 and if a = 1, a' = 0
[02:44:15] <[itchyjunk]> that does result in the table
[02:44:23] <[itchyjunk]> this is what was meant by regular math
[02:44:33] <[itchyjunk]> hmm i knew about this i think but i had forgotton
[02:44:52] <[itchyjunk]> Fangs had tried to explain this a long time ago when i was taking descrete math :s
[02:45:26] *** Quits: magla (~gelignite@55d41c60.access.ecotel.net) (Quit: Stay safe!)
[02:46:42] <[itchyjunk]> i have to go but i'll get back to this! this has been fun
[02:46:49] *** Quits: [itchyjunk] (~itchyjunk@user/itchyjunk/x-7353470) (Quit: Leaving)
[02:52:39] *** Quits: Vornicus (~Vornicus@2603-8000-5d07-7ef0-4c6d-f742-f661-daa3.res6.spectrum.com) (Read error: Connection reset by peer)
[02:57:30] *** Quits: krjli (~user@dsl-lprbng12-54f9b9-129.dhcp.inet.fi) (Remote host closed the connection)
[02:58:28] *** Joins: am1985 (~am1985@cpe-76-175-74-129.socal.res.rr.com)
[03:00:06] *** Joins: CryptoDavid (uid14990@id-14990.highgate.irccloud.com)
[03:00:06] *** Quits: CryptoDavid (uid14990@id-14990.highgate.irccloud.com) (Excess Flood)
[03:01:35] *** Quits: zeenk (~zeenk@2a02:2f04:a106:9600:82fb:aed9:ca9:38d3) (Quit: Konversation terminated!)
[03:02:02] *** Quits: scaleww (~scaleww@77-41-20-31.ftth.glasoperator.nl) (Quit: Leaving)
[03:02:08] *** Joins: CryptoDavid (uid14990@id-14990.highgate.irccloud.com)
[03:02:08] *** Quits: CryptoDavid (uid14990@id-14990.highgate.irccloud.com) (Excess Flood)
[03:02:42] *** Quits: Bowserinator (Bowserinat@hellomouse/dev/bowserinator) (Write error: Connection reset by peer)
[03:06:16] *** Joins: Bowserinator (Bowserinat@hellomouse/dev/bowserinator)
[03:07:43] *** Joins: Samizdat (~ambassado@075-141-230-217.res.spectrum.com)
[03:09:57] *** Joins: CryptoDavid (uid14990@id-14990.highgate.irccloud.com)
[03:09:57] *** Quits: CryptoDavid (uid14990@id-14990.highgate.irccloud.com) (Excess Flood)
[03:10:58] *** Joins: CryptoDavid (uid14990@id-14990.highgate.irccloud.com)
[03:13:27] *** Quits: newpy (~newpy@2602:ffc6:200:ce:cdda:49c3:129a:15ef) (Quit: Leaving)
[03:15:23] *** Joins: superz (~superegg@user/superegg)
[03:15:25] *** Parts: superz (~superegg@user/superegg) ()
[03:16:42] *** Quits: Samizdat (~ambassado@075-141-230-217.res.spectrum.com) (Read error: Connection reset by peer)
[03:20:05] *** Quits: dauggy (~dauggy@77.80.69.64) (Read error: Connection reset by peer)
[03:20:06] *** Quits: dauggy_ (~dauggy@77.80.69.64) (Read error: Connection reset by peer)
[03:20:30] *** Quits: amahl (~amahl@dsl-jklbng12-54fbca-64.dhcp.inet.fi) (Remote host closed the connection)
[03:26:38] *** Joins: krjli (~user@dsl-lprbng12-54f9b9-129.dhcp.inet.fi)
[03:29:31] *** Quits: PendulumSwinger (~PendulumS@66-45-137-137-dynamic.midco.net) (Read error: Connection reset by peer)
[03:29:42] *** Joins: richbridger (~richbridg@213-225-5-235.nat.highway.a1.net)
[03:30:02] *** Joins: PendulumSwinger (~PendulumS@66-45-137-137-dynamic.midco.net)
[03:32:46] *** Quits: PendulumSwinger (~PendulumS@66-45-137-137-dynamic.midco.net) (Read error: Connection reset by peer)
[03:33:09] *** Joins: PendulumSwinger (~PendulumS@66-45-137-137-dynamic.midco.net)
[03:34:43] *** Quits: chasmo77 (~chas77@71.63.241.168) (Ping timeout: 265 seconds)
[03:36:27] *** Quits: PendulumSwinger (~PendulumS@66-45-137-137-dynamic.midco.net) (Read error: Connection reset by peer)
[03:36:41] *** Joins: PendulumSwinger (~PendulumS@66-45-137-137-dynamic.midco.net)
[03:36:56] *** Quits: Matt|home (~matt@adsl-74-233-58-90.mia.bellsouth.net) (Quit: Leaving)
[03:42:28] *** Quits: PendulumSwinger (~PendulumS@66-45-137-137-dynamic.midco.net) (Read error: Connection reset by peer)
[03:42:45] *** Joins: PendulumSwinger (~PendulumS@66-45-137-137-dynamic.midco.net)
[03:45:52] *** Quits: PJBoy (~PJBoy@user/pjboy) (Quit: Ping timeout: 252 seconds)
[03:48:37] *** Quits: richbridger (~richbridg@213-225-5-235.nat.highway.a1.net) (Remote host closed the connection)
[03:49:32] *** Quits: slidercrank (~slidercra@user/slidercrank) (Ping timeout: 268 seconds)
[03:50:10] *** Quits: Crescendo (~Crescendo@user/crescendo) (Ping timeout: 268 seconds)
[03:51:25] *** Joins: hyper (uid493485@id-493485.charlton.irccloud.com)
[03:52:00] *** Joins: oxum (~oxum@136.185.148.86)
[03:52:15] *** Quits: PendulumSwinger (~PendulumS@66-45-137-137-dynamic.midco.net) (Quit: The Lounge - https://thelounge.chat)
[03:52:23] *** Quits: TechTest (uid283215@id-283215.tooting.irccloud.com) (Quit: Connection closed for inactivity)
[03:53:11] *** Joins: richbridger (~richbridg@213-225-5-235.nat.highway.a1.net)
[03:54:17] *** Joins: Matt|home (~matt@adsl-74-233-58-90.mia.bellsouth.net)
[03:54:46] *** Joins: oriba (~oriba@dynamic-078-055-042-149.78.55.pool.telefonica.de)
[03:55:04] *** Quits: oriba (~oriba@dynamic-078-055-042-149.78.55.pool.telefonica.de) (Client Quit)
[03:55:25] *** Joins: Crescendo (~Crescendo@user/crescendo)
[03:56:38] *** Quits: oxum (~oxum@136.185.148.86) (Ping timeout: 258 seconds)
[03:58:45] *** Quits: Crescendo (~Crescendo@user/crescendo) (Read error: Connection reset by peer)
[03:58:55] *** Joins: Crescendo (~Crescendo@user/crescendo)
[04:02:32] <mawk> apart from polygamma wizardry, is there a general method to compute series of the form Σ 1/P(n) where P is a quadratic ?
[04:02:41] <mawk> in the case where the partial fraction decomposition isn't nicely telescopic
[04:02:57] <mawk> for instance Σ 1/(2n(2n+1))
[04:03:16] <mawk> the p.f.d. is 1/(2n) - 1/(2n+1)
[04:06:14] *** Quits: Crescendo (~Crescendo@user/crescendo) (Read error: Connection reset by peer)
[04:08:19] *** Joins: Crescendo (~Crescendo@user/crescendo)
[04:12:09] *** Quits: Matt|home (~matt@adsl-74-233-58-90.mia.bellsouth.net) (Quit: Leaving)
[04:14:36] *** Joins: PendulumSwinger (~PendulumS@66-45-137-137-dynamic.midco.net)
[04:18:45] *** Joins: frelleck (~Frelleck@user/frelleck)
[04:25:48] *** Quits: dez (uid92154@user/dez) (Quit: Connection closed for inactivity)
[04:29:57] *** Joins: nate1 (~nate@108-233-125-227.lightspeed.sntcca.sbcglobal.net)
[04:30:08] *** Quits: tk (~tk@ircpuzzles/staff/tk) (Quit: Well, this is unexpected.)
[04:30:32] *** Joins: tk (~tk@ircpuzzles/staff/tk)
[04:31:46] *** Joins: Arcorann_ (~A@159-196-65-46.9fc441.mel.nbn.aussiebb.net)
[04:31:58] *** Quits: krjli (~user@dsl-lprbng12-54f9b9-129.dhcp.inet.fi) (Remote host closed the connection)
[04:33:49] *** Quits: trufas (~trufas@177.240.218.218) (Ping timeout: 258 seconds)
[04:34:50] *** Joins: trufas (~trufas@177.240.218.218)
[04:38:27] *** Joins: notzmv (~zmv@user/notzmv)
[04:40:06] *** Quits: bowlofeg1 (~bowlofegg@fedora/bowlofeggs) (Ping timeout: 268 seconds)
[04:40:49] <biberao> mawk: you and your polygamy
[04:41:01] <mawk> :(
[04:41:12] *** Quits: ionface (~ionface@user/ionface) (Ping timeout: 272 seconds)
[04:41:31] <biberao> mawk: im not giving you snacks anymore
[04:41:32] *** Joins: ionface (~ionface@user/ionface)
[04:41:35] <mawk> why
[04:41:40] *** Joins: bowlofeg1 (~bowlofegg@fedora/bowlofeggs)
[04:41:56] *** Joins: llorllale (~llorllale@2607:9880:3a18:69:4d8e:9dc8:8270:3ec1)
[04:42:12] <biberao> you're taking it other people
[04:43:06] <mawk> :(
[04:47:30] *** Quits: xff0x (~xff0x@2001:1a81:533e:6d00:cffe:3614:284d:42ae) (Ping timeout: 268 seconds)
[04:48:10] *** Joins: xff0x (~xff0x@2001:1a81:533e:6d00:1:e6c4:7154:755f)
[04:48:11] *** Quits: i0e (~is0ke3@user/is0ke3) (Ping timeout: 265 seconds)
[04:49:29] *** Joins: SGautam_ (~SGautam@117.195.244.186)
[04:50:12] *** Joins: i0e (~is0ke3@user/is0ke3)
[04:50:43] *** SGautam_ is now known as SGautam
[04:51:49] *** Joins: metal_egg (~the_egg@pool-72-94-145-43.phlapa.fios.verizon.net)
[04:52:57] *** Quits: Hanii (~textual@2a00:23c5:c587:6d00:c51e:2204:5b0e:2468) (Quit: Textual IRC Client: www.textualapp.com)
[04:53:03] *** Quits: nate1 (~nate@108-233-125-227.lightspeed.sntcca.sbcglobal.net) (Ping timeout: 268 seconds)
[05:00:50] *** Quits: am1985 (~am1985@cpe-76-175-74-129.socal.res.rr.com) (Quit: This computer has gone to sleep)
[05:02:44] *** Quits: oxide (~lambda@user/oxide) (Ping timeout: 272 seconds)
[05:04:27] *** Joins: oxide (~lambda@user/oxide)
[05:05:23] *** Joins: bosspotato (~bosspotat@lnsm2-montreal02-142-116-246-202.internet.virginmobile.ca)
[05:05:23] *** Quits: bosspotato (~bosspotat@lnsm2-montreal02-142-116-246-202.internet.virginmobile.ca) (Changing host)
[05:05:23] *** Joins: bosspotato (~bosspotat@user/bosspotato)
[05:10:58] *** Quits: SGautam (~SGautam@117.195.244.186) (Ping timeout: 272 seconds)
[05:16:29] *** Quits: johnkeats6 (~johnkeats@2804:14c:32:a0cc:d8d7:f86a:4716:f61a) (Ping timeout: 268 seconds)
[05:17:42] *** Quits: ferdna (~ferdna@user/ferdna) (Ping timeout: 252 seconds)
[05:22:08] *** Quits: CryptoDavid (uid14990@id-14990.highgate.irccloud.com) (Quit: Connection closed for inactivity)
[05:24:19] *** Quits: frelleck (~Frelleck@user/frelleck) ()
[05:27:42] *** Joins: frelleck (~frelleck@user/frelleck)
[05:33:08] *** Quits: patchie (~sdf@63.79-160-77.customer.lyse.net) (Ping timeout: 265 seconds)
[05:34:07] *** Joins: patchie (~sdf@63.79-160-77.customer.lyse.net)
[05:35:02] *** Joins: pgimeno (~pgimeno@user/pgimeno)
[05:39:44] *** Quits: Guest5849 (~Guest5849@2603-7000-8101-0cbd-87d9-46cd-2180-7b9a.res6.spectrum.com) (Remote host closed the connection)
[05:40:02] *** Joins: Guest5849 (~Guest5849@2603-7000-8101-0cbd-7cec-1995-c823-a15c.res6.spectrum.com)
[05:40:06] <pgimeno> I'm trying to implement integer division through multiplication by reciprocal. The idea is, to calculate N/d, precompute R=floor(2^32/d) and calculate (N*R)>>32. The problem is that the result is sometimes off, and I can't find any explanation about how to adjust it.
[05:41:36] <pgimeno> ISTR that there was a theorem that said that the result was at most short by 1, but I can't find it. If that's true, I can just compute ((N*R)>>32+1)*d and see if it's >N and I'm done.
[05:42:42] <pgimeno> But I don't know if my recollection is right (that this theorem exists and that this assertion is true). Does anyone know?
[05:46:06] <pgimeno> er, strictly speaking, in C the formula above is wrong, it should be (((N*R)>>32)+1)*d
[05:47:41] *** Joins: am1985 (~am1985@cpe-76-175-74-129.socal.res.rr.com)
[05:48:36] *** Quits: horseface (~horseface@82.221.128.46) (Quit: SPACE IS DONUTS!)
[05:49:57] *** Joins: johnkeats6 (~johnkeats@2804:14c:32:a0cc:a50e:ef9f:1aaa:8f64)
[05:51:41] <ronald_mcdonald> mawk, where did you encounter that sum
[05:51:54] *** Quits: xff0x (~xff0x@2001:1a81:533e:6d00:1:e6c4:7154:755f) (Ping timeout: 272 seconds)
[05:51:56] <PlanckWalk> You can write R as  2^32/d + x  where 0 <= x < 1
[05:52:11] <PlanckWalk> Err, write 2^32/d as R + x
[05:53:03] *** Joins: horseface (~horseface@82.221.128.46)
[05:53:22] *** Joins: xff0x (~xff0x@2001:1a81:537a:a200:2e28:d841:9fa1:9dcc)
[05:54:17] <PlanckWalk> If N < 2^32 then  (N * R) / 2^32 = (N * (2^32/d - x)) / 2^32 = N/d - x*N/2^32 with x*N/2^32 < 1.  You then have another floor on the result, though, so at first glance it looks like it could be more than 1 off
[05:54:35] *** Joins: stiltrumpelskin (~stiltrump@2601:246:5100:215:6129:cb5a:6eeb:c493)
[05:55:25] <pgimeno> PlanckWalk: oh thanks
[05:55:36] *** Joins: thelounge6117 (2386c1e6@67.205.143.82)
[05:55:50] <PlanckWalk> E.g. where N is nearly 2^32, N/d is just a bit more than an integer, and 2^32/d is just below an integer.
[05:56:07] <PlanckWalk> But maybe the errors aren't as independent as they appear
[05:56:52] *** Quits: thelounge6117 (2386c1e6@67.205.143.82) (Client Quit)
[05:56:54] <pgimeno> let's say it's not floor(2^32/d) but round(2^32/d), then -0.5 <= x <= 0.5, would that help?
[05:57:44] *** Quits: emerent (~quassel@p200300cd5703bb10ba27ebfffed28a59.dip0.t-ipconnect.de) (Ping timeout: 250 seconds)
[05:58:22] *** Joins: emerent (~quassel@p200300cd5703bba5ba27ebfffed28a59.dip0.t-ipconnect.de)
[05:59:38] <PlanckWalk> Ah right, but you want floor(N/d) anyway, not actually N/d.
[05:59:46] *** Joins: Brainium (~brainium@user/brainium)
[05:59:47] <pgimeno> right
[06:00:00] <pgimeno> sorry, I should have indicated that
[06:01:29] <PlanckWalk> That makes it more plausible that the result can only be too low by 1
[06:01:52] <pgimeno> thank you
[06:02:45] *** Quits: am1985 (~am1985@cpe-76-175-74-129.socal.res.rr.com) (Quit: This computer has gone to sleep)
[06:05:42] <PlanckWalk> Yep, x < 1 and N < 2^32 guarantees that the result can't be 2 less than the correctly rounded result.
[06:06:06] *** Quits: derelict (~derelict@user/derelict) (Quit: WeeChat 3.2)
[06:06:23] *** Joins: derelict (~derelict@user/derelict)
[06:07:12] <pgimeno> excellent, thanks!
[06:08:19] <pgimeno> that will save me at least one multiplication in search for the correct result
[06:11:18] <pgimeno> thank you very much!
[06:12:14] <PlanckWalk> It also shows that for N << 2^32, errors will be much more uncommon.
[06:12:36] <pgimeno> yes, I expected that too
[06:18:34] *** Joins: SGautam (~SGautam@117.195.244.186)
[06:22:21] *** Quits: Nalt (~Nalt|||@162-239-107-41.lightspeed.rcsntx.sbcglobal.net) (Read error: Connection reset by peer)
[06:22:57] *** Quits: bowlofeg1 (~bowlofegg@fedora/bowlofeggs) (Read error: Connection reset by peer)
[06:23:53] *** Joins: bowlofeg1 (~bowlofegg@fedora/bowlofeggs)
[06:27:07] *** Joins: sheepduck (~sheepduck@user/sheepduck)
[06:28:52] <pgimeno> PlanckWalk: I guess 32 can be replaced by any power without loss of generality, right?
[06:29:09] <PlanckWalk> Right
[06:29:13] *** Joins: Guest53 (~textual@170.250.221.149)
[06:29:19] <pgimeno> of validity, in this case, sorry
[06:29:43] <pgimeno> awesome, thank you so much!
[06:31:56] *** Joins: mefistofeles (~mefistofe@user/mefistofeles)
[06:35:47] *** Quits: Guest53 (~textual@170.250.221.149) (Quit: My MacBook has gone to sleep. ZZZzzz…)
[06:36:45] *** Joins: salpynx (~salpynx@121.73.84.248)
[06:41:17] *** Quits: Crescendo (~Crescendo@user/crescendo) (Ping timeout: 265 seconds)
[06:42:32] *** Quits: dogbert2 (~Bill@ip68-105-189-91.lv.lv.cox.net) (Remote host closed the connection)
[06:42:44] *** Quits: norias (~jaredm@c-98-219-195-163.hsd1.pa.comcast.net) (Ping timeout: 265 seconds)
[06:42:50] *** Joins: dogbert2 (~Bill@ip68-105-189-91.lv.lv.cox.net)
[06:43:30] *** Joins: norias (~jaredm@c-98-219-195-163.hsd1.pa.comcast.net)
[06:48:36] *** Quits: egoist (~egoist@186.235.82.105) (Quit: WeeChat 3.2)
[06:50:28] *** Quits: bosspotato (~bosspotat@user/bosspotato) (Ping timeout: 265 seconds)
[06:53:14] *** Quits: metal_egg (~the_egg@pool-72-94-145-43.phlapa.fios.verizon.net) (Quit: Konversation terminated!)
[07:08:04] *** Quits: madez (~madez@ip-176-198-251-181.hsi05.unitymediagroup.de) (Quit: .)
[07:09:05] *** Joins: aquijoule_ (~richbridg@213-225-32-103.nat.highway.a1.net)
[07:11:48] *** Quits: richbridger (~richbridg@213-225-5-235.nat.highway.a1.net) (Ping timeout: 268 seconds)
[07:12:30] *** Joins: Numeral (~Numeral@2600:100e:b146:e5ac:9e8a:c97c:c0e0:fba3)
[07:13:39] *** Quits: SGautam (~SGautam@117.195.244.186) (Ping timeout: 268 seconds)
[07:18:20] *** Quits: i0e (~is0ke3@user/is0ke3) (Ping timeout: 252 seconds)
[07:19:28] *** Joins: madez (~madez@ip-176-198-251-181.hsi05.unitymediagroup.de)
[07:19:35] *** Joins: anime101 (~anime101@201.150.126.199)
[07:19:44] *** Joins: Crescendo (~Crescendo@user/crescendo)
[07:19:53] <anime101> what I have to learn to know how to write proofs in english?
[07:20:03] <anime101> I'm learning english but I don't know yet how to do it
[07:20:18] <anime101> do you guys have any advice about this?
[07:23:17] *** Joins: i0e (~is0ke3@user/is0ke3)
[07:25:42] *** Quits: Gustavo6046 (~Gustavo60@user/gustavo6046) (Ping timeout: 250 seconds)
[07:27:21] *** Joins: vpw_ (~vpw@122.172.235.130)
[07:27:25] *** Joins: Gustavo6046 (~Gustavo60@user/gustavo6046)
[07:27:50] *** Quits: johnkeats6 (~johnkeats@2804:14c:32:a0cc:a50e:ef9f:1aaa:8f64) (Ping timeout: 268 seconds)
[07:29:56] *** Quits: vpw_ (~vpw@122.172.235.130) (Read error: Connection reset by peer)
[07:30:10] *** Joins: vpw_ (~vpw@122.172.235.130)
[07:30:47] *** Quits: phillbush (~phillbush@user/phillbush) (Quit: Leaving)
[07:31:13] *** Quits: hyper (uid493485@id-493485.charlton.irccloud.com) (Quit: Connection closed for inactivity)
[07:31:24] *** Joins: phillbush (~phillbush@user/phillbush)
[07:32:44] *** Joins: Nalt (~Nalt|||@162-239-107-41.lightspeed.rcsntx.sbcglobal.net)
[07:37:59] <Fangs> int-e: idk if you're still interested, but if you wonder why I decided to try to take the derivation of all the terms from degree 0 to 5 all at the same time, its because I made this computational mistake previously
[07:38:33] <Fangs> [12] -> stuff*[11] + stuff*[2], and somehow I decided that [11] ->stuff [11]
[07:38:50] <Fangs> so I *thought* the derivation operator is not homogenous
[07:38:52] <ronald_mcdonald> Fangs, hi
[07:38:57] <Fangs> ronald_mcdonald: hey
[07:39:53] *** Quits: q-q (uid501539@user/q-q) (Quit: Connection closed for inactivity)
[07:53:16] *** Quits: Brainium (~brainium@user/brainium) (Quit: Konversation terminated!)
[07:55:13] *** Joins: schillingklaus (~schilling@ip2504e07b.dynamic.kabel-deutschland.de)
[07:55:59] *** Quits: tacegory (~tacegory@user/tacegory) (Remote host closed the connection)
[07:59:01] *** Quits: anime101 (~anime101@201.150.126.199) (Quit: Connection closed)
[08:01:57] *** Joins: am1985 (~am1985@cpe-76-175-74-129.socal.res.rr.com)
[08:03:22] *** Joins: jinsun (~quassel@user/jinsun)
[08:10:47] *** Joins: Lord_of_Life_ (~Lord@user/lord-of-life/x-2819915)
[08:12:09] *** Quits: Lord_of_Life (~Lord@user/lord-of-life/x-2819915) (Ping timeout: 265 seconds)
[08:12:09] *** Lord_of_Life_ is now known as Lord_of_Life
[08:12:55] *** Joins: Mangy_Lobster (~Mangy_Lob@035-134-193-230.res.spectrum.com)
[08:13:05] *** Joins: TechTest (uid283215@id-283215.tooting.irccloud.com)
[08:16:32] *** Joins: guy_frm_yogaland (~gourab@2409:4062:2386:142:95a3:1309:3344:513b)
[08:16:34] *** Parts: Mangy_Lobster (~Mangy_Lob@035-134-193-230.res.spectrum.com) (Bye)
[08:17:24] *** Quits: revolve (~u0_a227@82-132-244-246.dab.02.net) (Read error: Connection reset by peer)
[08:18:28] *** Quits: guy_frm_yogaland (~gourab@2409:4062:2386:142:95a3:1309:3344:513b) (Quit: Konversation terminated!)
[08:19:10] *** Joins: revolve (~u0_a227@82-132-247-65.dab.02.net)
[08:20:45] *** Quits: norias (~jaredm@c-98-219-195-163.hsd1.pa.comcast.net) (Ping timeout: 258 seconds)
[08:21:24] *** Joins: guy_frm_yogaland (~gourab@2409:4062:2386:142:95a3:1309:3344:513b)
[08:22:05] *** Joins: mbuf (~Shakthi@122.183.157.206)
[08:25:37] *** Quits: haykam1 (~haykam@static.100.2.21.65.clients.your-server.de) (Remote host closed the connection)
[08:25:50] *** Joins: haykam1 (~haykam@static.100.2.21.65.clients.your-server.de)
[08:29:32] *** Quits: soapsudsxx (~soapsudsx@209.221.40.157) (Remote host closed the connection)
[08:29:46] *** Quits: haykam1 (~haykam@static.100.2.21.65.clients.your-server.de) (Remote host closed the connection)
[08:29:54] *** Joins: soapsudsxx (~soapsudsx@141.193.188.130)
[08:30:01] *** Joins: haykam1 (~haykam@static.100.2.21.65.clients.your-server.de)
[08:30:28] *** Quits: deavmi (~tbk@user/deavmi) (Quit: No Ping reply in 180 seconds.)
[08:33:40] *** Joins: deavmi (~tbk@user/deavmi)
[08:39:42] *** Joins: ______GOD______ (~GOD@user/god/x-9778998)
[08:40:52] *** Joins: Hanii (~textual@2a00:23c5:c587:6d00:4508:678:2ade:48c3)
[08:44:37] *** Quits: Hanii (~textual@2a00:23c5:c587:6d00:4508:678:2ade:48c3) (Client Quit)
[08:47:03] *** Joins: Hanii (~textual@2a00:23c5:c587:6d00:e424:4bc6:3ed8:741a)
[08:49:53] <Fangs> int-e: do you apply matrices from the right?
[08:51:14] <Fangs> [3*n,0;n-1,n;0,n-2] <-- does this have 3 column or 3 rows?
[08:56:21] *** Joins: pavlushka (~pavlushka@user/pavlushka)
[09:01:40] *** eck is now known as saltydog
[09:05:16] *** Quits: vpw_ (~vpw@122.172.235.130) (Quit: Leaving)
[09:07:37] <Arcorann_> If that's Matlab notation then that would have 3 rows
[09:08:29] *** Quits: phillbush (~phillbush@user/phillbush) (Quit: Leaving)
[09:14:17] *** Quits: quartz (~quartz@2603-8001-7700-61a4-0000-0000-0000-0acb.res6.spectrum.com) (Quit: WeeChat 3.1)
[09:18:43] *** Joins: oxum (~oxum@136.185.148.86)
[09:19:04] *** Joins: takuan (~takuan@178-116-218-225.access.telenet.be)
[09:23:46] *** Quits: oxum (~oxum@136.185.148.86) (Ping timeout: 268 seconds)
[09:27:03] *** Quits: Inline (~Inline@2a02:908:1252:7a80:c035:deeb:51be:5431) (Quit: Leaving)
[09:30:54] *** Quits: ______GOD______ (~GOD@user/god/x-9778998) (Quit: Turning off a portion of this simulation.)
[09:39:11] *** Quits: deavmi (~tbk@user/deavmi) (Ping timeout: 268 seconds)
[09:39:48] *** Quits: am1985 (~am1985@cpe-76-175-74-129.socal.res.rr.com) (Quit: This computer has gone to sleep)
[09:42:19] *** Joins: elf_fortrez (~elf_fortr@adsl-72-50-6-18.prtc.net)
[09:42:29] *** Quits: elf_fortrez (~elf_fortr@adsl-72-50-6-18.prtc.net) (Write error: Broken pipe)
[09:43:55] *** Quits: i0e (~is0ke3@user/is0ke3) (Quit: Zzzzzz.....)
[09:47:22] *** Quits: oxide (~lambda@user/oxide) (Ping timeout: 265 seconds)
[09:53:17] *** Joins: deavmi (~tbk@user/deavmi)
[09:58:21] *** Joins: cjb (~cjb@user/cjb)
[09:59:08] *** Joins: Izem (~Izem@bras-base-london1483w-grc-42-65-95-172-41.dsl.bell.ca)
[10:07:46] *** Quits: derelict (~derelict@user/derelict) (Ping timeout: 250 seconds)
[10:09:15] *** Quits: guy_frm_yogaland (~gourab@2409:4062:2386:142:95a3:1309:3344:513b) (Read error: Connection reset by peer)
[10:09:21] *** Parts: Izem (~Izem@bras-base-london1483w-grc-42-65-95-172-41.dsl.bell.ca) ()
[10:14:40] *** Joins: yup (~yess@2405:201:200e:9005:71e4:fb3d:9521:cf2c)
[10:16:00] *** Quits: xff0x (~xff0x@2001:1a81:537a:a200:2e28:d841:9fa1:9dcc) (Ping timeout: 272 seconds)
[10:16:11] <Fangs> yeah, that was a specific question for that person. (It was about their notation)
[10:16:31] *** Joins: xff0x (~xff0x@2001:1a81:537a:a200:fe39:8213:7a70:2cd1)
[10:17:08] *** Joins: oxum (~oxum@136.185.148.86)
[10:17:27] *** Joins: Maturion (~Maturion@p200300ede71e92000b1d861ed8d096be.dip0.t-ipconnect.de)
[10:18:19] *** Quits: oxum (~oxum@136.185.148.86) (Remote host closed the connection)
[10:18:33] *** Joins: derelict (~derelict@user/derelict)
[10:19:59] *** Quits: frelleck (~frelleck@user/frelleck) ()
[10:21:26] *** Quits: schillingklaus (~schilling@ip2504e07b.dynamic.kabel-deutschland.de) (Quit: schillingklaus)
[10:22:53] *** Joins: dauggy (~dauggy@77.80.68.54)
[10:22:54] *** Joins: dauggy_ (~dauggy@77.80.68.54)
[10:23:22] *** Joins: oxum (~oxum@136.185.148.86)
[10:24:48] *** Joins: chomwitt (~Pitsikoko@2a02:587:dc0b:0:d8f7:cdfe:4658:bec4)
[10:25:04] *** Quits: xff0x (~xff0x@2001:1a81:537a:a200:fe39:8213:7a70:2cd1) (Quit: xff0x)
[10:25:36] *** Quits: yup (~yess@2405:201:200e:9005:71e4:fb3d:9521:cf2c) (Quit: Leaving)
[10:26:48] *** Quits: oxum (~oxum@136.185.148.86) (Remote host closed the connection)
[10:28:21] *** Joins: oxum (~oxum@136.185.148.86)
[10:28:59] *** Joins: horseface_ (~horseface@202-65-89-230.ip4.superloop.com)
[10:29:48] *** Quits: average (uid473595@user/average) (Quit: Connection closed for inactivity)
[10:29:54] *** Quits: pavlushka (~pavlushka@user/pavlushka) (Ping timeout: 265 seconds)
[10:33:17] *** Quits: oxum (~oxum@136.185.148.86) (Ping timeout: 265 seconds)
[10:33:27] *** Quits: horseface (~horseface@82.221.128.46) (Ping timeout: 268 seconds)
[10:33:49] *** Joins: xff0x (~xff0x@2001:1a81:537a:a200:78:fec8:4e97:b67d)
[10:38:58] *** Quits: derelict (~derelict@user/derelict) (Ping timeout: 250 seconds)
[10:41:34] *** Quits: sheepduck (~sheepduck@user/sheepduck) (Ping timeout: 272 seconds)
[10:56:45] *** Joins: magla (~gelignite@55d471c8.access.ecotel.net)
[10:59:37] *** Quits: Nalt (~Nalt|||@162-239-107-41.lightspeed.rcsntx.sbcglobal.net) (Quit: Leaving)
[11:05:40] *** Joins: mgrabovs (~mgrabovs@redhat/mgrabovs)
[11:08:39] *** Joins: Guest9778 (~Guest97@64.224.81.27)
[11:09:11] <Guest9778> is there a name for the hyperbolic paraboloid defined as the line or edge created where Steinmetz solids begin to intersect, characterized as an ellipsoid, where I am looking to find an equation that approximates the outline of the cutout formed on one cylinder?
[11:09:22] *** Joins: truthr (user@user/truthr)
[11:09:24] <truthr> test
[11:19:00] *** Joins: Gurkenglas (~Gurkengla@dslb-002-203-144-156.002.203.pools.vodafone-ip.de)
[11:20:14] *** Joins: Fohsap (~Muimi@60.20.219.101)
[11:22:52] <Gurkenglas> The axioms of what algebraic structures can be written as "all diagrams built from these cells commute"? Can this always be reformulated as "all diagrams of these finitely many schemas commute"?
[11:26:54] *** Joins: anovick (~anovick@IGLD-83-130-156-7.inter.net.il)
[11:29:02] *** Joins: zeenk (~zeenk@2a02:2f04:a106:9600:82fb:aed9:ca9:38d3)
[11:29:14] *** Quits: Maturion (~Maturion@p200300ede71e92000b1d861ed8d096be.dip0.t-ipconnect.de) (Ping timeout: 250 seconds)
[11:29:46] <mawk> ronald_mcdonald: in Σ 1/n(4n²-1)
[11:29:50] <mawk> it's the original series
[11:30:07] <int-e> Fangs: "do you apply matrices from the right?" --not really, but the transpose what easier to copy from those notes; ~ transposes a matrix in pari/gp
[11:30:24] <ronald_mcdonald> mawk, how did you encounter this series
[11:30:35] <ronald_mcdonald> Was this a result of solving some larger problem or is this a textbook question?
[11:30:52] *** Joins: derelict (~derelict@user/derelict)
[11:31:12] <mawk> it's a kind of textbook question ronald_mcdonald
[11:31:20] <mawk> a series I found in a youtube video
[11:31:43] *** Joins: tos9_ (~tos9@host-79-13-125-128.retail.telecomitalia.it)
[11:31:44] *** Quits: tos9_ (~tos9@host-79-13-125-128.retail.telecomitalia.it) (Client Quit)
[11:31:50] <ronald_mcdonald> Was it inteded to have a closed sum?
[11:32:19] <ronald_mcdonald> Is a partial fraction decomposition proving of any help?
[11:32:56] <mawk> the partial fraction decomposition isn't telescopic
[11:33:06] <mawk> so it's not very useful
[11:33:08] <mawk> yes I think it has a closed sum, I haven't watched the video yet
[11:33:32] *** Joins: tos9_ (~tos9@host-79-13-125-128.retail.telecomitalia.it)
[11:33:33] <mawk> I tried to define f(x) = Σ x^n/(n(4n²-1)) and then do partial fraction decomposition
[11:33:41] <mawk> and then take lim x → 1, but it doesn't converge
[11:33:41] *** Quits: tos9_ (~tos9@host-79-13-125-128.retail.telecomitalia.it) (Client Quit)
[11:34:06] <tusko> V
[11:34:28] *** Joins: tos9_ (~tos9@host-79-13-125-128.retail.telecomitalia.it)
[11:34:37] <mawk> I get something like ~ -1/2 + ln(x) at x → 1
[11:34:39] <ronald_mcdonald> mawk, can you try to set the finite sum as a differentiation of some binomial?
[11:35:24] *** Quits: tos9_ (~tos9@host-79-13-125-128.retail.telecomitalia.it) (Client Quit)
[11:35:34] <mawk> what do you mean?
[11:35:43] <mawk> differentiate the f(x) above?
[11:36:09] *** Quits: resedare (~rsd@46.37.82.194) (Ping timeout: 244 seconds)
[11:36:21] *** Joins: oxum (~oxum@136.185.148.86)
[11:37:26] <mawk> if I set f(x) = Σ x^(2n+1) / (2n(4n²-1)) then f'''(x) = 1/(1-x²)
[11:37:30] <ronald_mcdonald> mawk, like try to express in terms of C(n,r)x^r and differentiate it
[11:37:35] <mawk> maybe that's useful, but integrating this three times is annoying
[11:37:46] <mawk> ah, let me try that then
[11:37:50] <ronald_mcdonald> tbh that won't work I think
[11:38:49] *** Quits: oxum (~oxum@136.185.148.86) (Remote host closed the connection)
[11:39:10] *** Joins: andreasbuhr (~quassel@p549db92e.dip0.t-ipconnect.de)
[11:39:24] *** Quits: andreasbuhr (~quassel@p549db92e.dip0.t-ipconnect.de) (Remote host closed the connection)
[11:40:20] *** Joins: andreasbuhr (~quassel@p549db92e.dip0.t-ipconnect.de)
[11:41:27] *** Quits: Julian (~tos9@host-79-13-125-128.retail.telecomitalia.it) (Quit: leaving)
[11:41:44] *** Joins: Julian (~tos9@host-79-13-125-128.retail.telecomitalia.it)
[11:42:46] <mawk> despite me calling polygamma "wizardry" I looked a bit at it and it would compute this sum easily
[11:42:59] *** Quits: Julian (~tos9@host-79-13-125-128.retail.telecomitalia.it) (Client Quit)
[11:43:29] <mawk> using ψ(x) = Γ'(x)/Γ(x)
[11:43:34] <mawk> but it feels like cheating
[11:43:39] *** Quits: derelict (~derelict@user/derelict) (Ping timeout: 272 seconds)
[11:43:44] *** Joins: expix (~1@amontpellier-652-1-22-100.w90-57.abo.wanadoo.fr)
[11:44:01] *** Joins: Julian (~tos9@host-79-13-125-128.retail.telecomitalia.it)
[11:46:13] *** Quits: Pollion (bombar@zamok.crans.org) (Changing host)
[11:46:13] *** Joins: Pollion (bombar@crans/pollion)
[11:48:02] <mawk> the summand is almost telescopic but not quite ronald_mcdonald so that's why I thought there'd be a cool trick
[11:48:24] <mawk> the summand is 1/(2n(2n-1)) - 1/(2n(2n+1))
[11:48:39] <mawk>  = (1/(2n-1) - 1/2n) - (1/2n - 1/(2n+1))
[11:48:47] <mawk> but that's not telescopic
[11:52:18] *** Joins: tos9_ (~tos9@host-79-13-125-128.retail.telecomitalia.it)
[11:52:20] *** Quits: tos9_ (~tos9@host-79-13-125-128.retail.telecomitalia.it) (Client Quit)
[11:56:07] *** Joins: trbp (~trbp@user/trbp)
[11:58:13] *** Quits: cjb (~cjb@user/cjb) ()
[12:03:37] *** Joins: oxum (~oxum@136.185.148.86)
[12:04:17] *** Joins: specing_ (~specing@user/specing)
[12:07:32] *** Quits: specing (~specing@user/specing) (Ping timeout: 265 seconds)
[12:07:32] *** specing_ is now known as specing
[12:08:27] *** Quits: oxum (~oxum@136.185.148.86) (Ping timeout: 258 seconds)
[12:08:42] <int-e> mawk: Ah but you can use 1 - 1/2 + 1/3 - 1/4 + ... = ln(2) now?
[12:09:03] *** Quits: Guest9778 (~Guest97@64.224.81.27) (Quit: Client closed)
[12:09:23] <mawk> ah right!
[12:09:25] <mawk> I missed that
[12:10:11] <mawk> thanks
[12:12:11] *** Joins: oxum (~oxum@136.185.148.86)
[12:15:39] <riv> there is nothing wrong with using special functions!
[12:15:54] <mawk> so I suppose there's no general method that doesn't involve ψ or fourier transforms or magic calculus out of a magician's hat
[12:16:38] <mawk> yes I suppose riv
[12:16:44] <int-e> you don't get those ln()s and powers of pi for free
[12:18:59] <mawk> I'd be content with regular calculus tricks
[12:19:47] <mawk> the one I'm referring to is ζ(2) = -4/3 \int_0^1 ln(t)/(1-t²)dt if I remember the coefficient in front right
[12:20:00] <mawk> everytime I see this I wonder how they thought of that
[12:20:43] *** Quits: horseface_ (~horseface@202-65-89-230.ip4.superloop.com) (Quit: SPACE IS DONUTS!)
[12:20:46] <mawk> the basic fact is -\int_0^1 t^n ln(t)\dt = 1/(n+1)² then they sum this integral to obtain ζ(2)
[12:20:50] *** Quits: oxum (~oxum@136.185.148.86) (Remote host closed the connection)
[12:21:00] *** Joins: horseface (~horseface@202-65-89-230.ip4.superloop.com)
[12:21:02] *** Joins: oxum (~oxum@136.185.148.86)
[12:22:07] <mawk> using the odd-numbered series for ζ(2)
[12:27:14] *** Joins: LucaTM (~LucaTM@user/lucatm)
[12:27:17] *** Quits: oxum (~oxum@136.185.148.86) (Remote host closed the connection)
[12:27:26] <mawk> like how would I think to rewrite 1/(2n+1)² as -\int_0^1 t^2n ln(t)dt
[12:28:03] *** Quits: notzmv (~zmv@user/notzmv) (Read error: Connection reset by peer)
[12:28:07] *** Joins: oxum (~oxum@136.185.148.86)
[12:28:28] <riv> i think its done backwards
[12:28:33] <riv> people just expand out every possible integral
[12:28:44] <riv> and then pretend they figured out how to the sum
[12:29:00] <mawk> I see
[12:29:25] *** Quits: riv (~river@tilde.team/user/river) (Quit: Leaving)
[12:30:27] *** Quits: Julian (~tos9@host-79-13-125-128.retail.telecomitalia.it) (Quit: leaving)
[12:30:42] *** Joins: Julian (~tos9@host-79-13-125-128.retail.telecomitalia.it)
[12:33:52] <mawk> but that's not satisfying
[12:33:53] *** Joins: Matt|home (~matt@adsl-74-233-58-90.mia.bellsouth.net)
[12:34:00] <mawk> I can't compute all integrals by myself
[12:34:15] <mawk> isn't there a book with all these integral tricks that someone compiled years ago?
[12:34:56] *** Quits: oxum (~oxum@136.185.148.86) (Ping timeout: 272 seconds)
[12:36:19] *** Joins: hendursaga (~weechat@user/hendursaga)
[12:36:24] *** Joins: amahl (~amahl@dsl-jklbng12-54fbca-64.dhcp.inet.fi)
[12:36:25] *** Quits: salpynx (~salpynx@121.73.84.248) (Quit: Connection closed)
[12:38:38] *** Quits: hendursa1 (~weechat@user/hendursaga) (Ping timeout: 244 seconds)
[12:41:06] *** Quits: chomwitt (~Pitsikoko@2a02:587:dc0b:0:d8f7:cdfe:4658:bec4) (Ping timeout: 268 seconds)
[12:41:59] <int-e> mawk: hmm, f(x) = sum x^(2n+1)/(2n+1)^2 --> f'(x) = sum x^(2n)/(2n+1) --> xf'(x) = sum x^(2n+1)/(2n+1) = -ln(1-x^2)/2 (note that [xf'(x)]' = x/(1-x^2) is easy to integrate) --> f(1) = int_0^1 -ln(1-x^2)/(2x) dx  and if you substitute t = sqrt(1-x^2) (where does that come from) you end up with  f(1) = -\int_0^1 ln(t)/(1-t^2) dt ?
[12:43:02] <int-e> that's still magic, but not *completely* random
[12:43:50] *** Quits: soapsudsxx (~soapsudsx@141.193.188.130) (Remote host closed the connection)
[12:45:09] *** Joins: soapsudsxx (~soapsudsx@141.193.188.137)
[12:46:05] *** Joins: ReedK0_ (~Muimi@60.20.219.101)
[12:46:35] *** Quits: soapsudsxx (~soapsudsx@141.193.188.137) (Remote host closed the connection)
[12:48:37] *** Quits: Fohsap (~Muimi@60.20.219.101) (Ping timeout: 265 seconds)
[12:48:42] *** ReedK0_ is now known as Fohsap
[12:54:15] *** Joins: hanif (~hanif@gateway/tor-sasl/hanif)
[12:55:18] *** Quits: amahl (~amahl@dsl-jklbng12-54fbca-64.dhcp.inet.fi) (Remote host closed the connection)
[12:56:57] *** Quits: magla (~gelignite@55d471c8.access.ecotel.net) (Quit: Stay safe!)
[13:03:51] *** Quits: dauggy (~dauggy@77.80.68.54) (Read error: Connection reset by peer)
[13:04:03] *** Joins: dauggy (~dauggy@77.80.68.54)
[13:04:08] *** Joins: guy_frm_yogaland (~gourab@2409:4062:2386:142:95a3:1309:3344:513b)
[13:05:28] *** Quits: guy_frm_yogaland (~gourab@2409:4062:2386:142:95a3:1309:3344:513b) (Remote host closed the connection)
[13:06:25] *** Joins: Maturion (~Maturion@p200300ede71e92000b1d861ed8d096be.dip0.t-ipconnect.de)
[13:12:35] <mawk> ah yes int-e that's simple enough
[13:17:53] *** Joins: chomwitt (~Pitsikoko@athedsl-16082.home.otenet.gr)
[13:22:52] *** Joins: quarterback (~quarterba@user/quarterback)
[13:23:14] *** Joins: dhil (~dhil@195.213.192.47)
[13:23:42] *** Parts: expix (~1@amontpellier-652-1-22-100.w90-57.abo.wanadoo.fr) ()
[13:24:16] *** Quits: chomwitt (~Pitsikoko@athedsl-16082.home.otenet.gr) (Ping timeout: 268 seconds)
[13:24:25] *** Parts: coat (~coat@user/coat) ()
[13:26:04] *** Joins: drogas (~drogas@jump2.jet.uk)
[13:26:20] *** Joins: gas51627 (uid91066@id-91066.brockwell.irccloud.com)
[13:26:59] *** Parts: pgimeno (~pgimeno@user/pgimeno) (This is the default part message)
[13:30:50] *** Quits: Osares104 (~Osares10@user/osares10) (Quit: The Lounge - https://thelounge.chat)
[13:35:45] *** Joins: Osares104 (~Osares10@user/osares10)
[13:39:39] <int-e> mawk: But ugh, my [xf'(x)]' is wrong, it should be 1/(1-x^2). It's still easy to integrate, but it ends up as f(1) = int_0^1 log((1+x)/(1-x))/(2x) dx. I wonder what I messed up in the substitution :P
[13:49:04] *** Joins: pavlushka (~pavlushka@user/pavlushka)
[13:51:23] *** Joins: SGautam (~SGautam@117.195.244.186)
[13:53:24] *** Quits: zeenk (~zeenk@2a02:2f04:a106:9600:82fb:aed9:ca9:38d3) (Quit: Konversation terminated!)
[13:53:47] *** Quits: Julian (~tos9@host-79-13-125-128.retail.telecomitalia.it) (Changing host)
[13:53:47] *** Joins: Julian (~tos9@python/site-packages/Julian)
[13:56:40] *** Joins: pgp (~pgp@88.157.222.244)
[13:57:28] *** Joins: slidercrank (~slidercra@user/slidercrank)
[13:57:55] *** Joins: PJBoy (~PJBoy@user/pjboy)
[13:59:34] *** Joins: node1 (~node1@user/node1)
[14:01:23] <int-e> Miraculously, t = (1-x)/(1+x) *does* end up with -int_0^1 log(t)/(1-t^2) dt from there. My previous substitution should've ended up with another factor t: -int_0^1 ln(t)t/(1-t^2) dt
[14:01:44] <int-e> I need more calculus practice :P
[14:02:44] *** Quits: SGautam (~SGautam@117.195.244.186) (Quit: Leaving)
[14:03:41] *** Joins: SGautam (~SGautam@117.195.244.186)
[14:04:38] <int-e> mawk: Anyway... *something* works. But t = (1-x)/(1+x) working out nicely for dx/x is stranger to me than t = sqrt(1-x^2) working nicely for dx/x.
[14:07:28] *** Joins: brownorange (~brownoran@154.21.21.213)
[14:08:35] *** Joins: schillingklaus (~schilling@ip2504e07b.dynamic.kabel-deutschland.de)
[14:08:40] *** Quits: horseface (~horseface@202-65-89-230.ip4.superloop.com) (Ping timeout: 268 seconds)
[14:10:44] *** Joins: ReedK0_ (~Muimi@60.20.219.101)
[14:12:01] <brownorange> I will present what youtube info about Godel's theorems comes off like.
[14:12:09] <brownorange> Consider the set all the buildings who's texture is only of their status of having a texture.
[14:12:18] <brownorange> Consider a building who's texture is "This building has no texture", then the texture is wrong.
[14:12:31] <brownorange> But if the building's texture is wrong, then the building's texture isn't of its status.
[14:12:47] <brownorange> Therefore it is impossible for some buildings to accurately texture themselves as not having a texture.
[14:13:02] <brownorange> Further the buildings' with decidably wrong texture demonstrates its actually undecidable but true anyway!
[14:13:13] <brownorange> Thus incompleteness has been shown! Have a good day and tomorrow we'll cover inconsistency.
[14:13:19] <brownorange> QED
[14:13:44] *** Quits: Fohsap (~Muimi@60.20.219.101) (Ping timeout: 272 seconds)
[14:13:51] *** ReedK0_ is now known as Fohsap
[14:14:12] <brownorange> Bonus: here's an impossible image you can perceive because you're actually a powerful mind outside limits of ZFC. https://i.imgur.com/6wK889S.png
[14:15:49] *** Joins: egy (egy@tilde.team)
[14:17:49] <int-e> "youtube info", hmm. Is this a particular video?
[14:19:04] <int-e> In any case, most accounts of Gödel's incompleteness theorem seem to completely ignore the technical machinery involved in constructing a sentence that, after sufficient abstraction, translates to "This sentence can't be proved."
[14:19:23] <mawk> yes t = (1-x)/(1+x) is weird
[14:20:21] <mawk> the gödel encoding thing is pretty weird
[14:20:45] <mawk> it's a bit magic but a bit ugly as well, and probably hard to make people understand
[14:21:47] <int-e> mawk: But without it, you get vague accounts like the experience that brownorange just described.
[14:22:51] <brownorange> https://www.youtube.com/watch?v=O4ndIDcDSGc https://www.youtube.com/watch?v=HeQX2HjkcNo  these are the most detailed while still being for the general public
[14:23:09] <int-e> It's funny... the Halting Problem is so closely related but tends to get significantly better treatment.
[14:23:43] *** Joins: sebatron2 (~sebatron@dhcp-089-098-022-131.chello.nl)
[14:24:24] *** sebatron2 is now known as sebatron
[14:24:54] <brownorange> https://www.youtube.com/watch?v=V9ohtKameio quite good. but even so didn't convince me the magical godel encodings really do what they say
[14:24:58] <int-e> (There's a reason for this... algorithms make some intuitive sense, you just follow a sequence of instructions. Proofs... well, there's the Hurry-Coward isomorphism but to most people they have no operational contents.)
[14:25:35] *** Quits: hanif (~hanif@gateway/tor-sasl/hanif) (Ping timeout: 244 seconds)
[14:26:12] <brownorange> the halting problem i feel i understand better because i can imagine programs that do not quit
[14:26:37] <brownorange> those are easy to make and you don't need fancy knowledge to make a turing machine either
[14:26:40] *** Joins: HisShadow (~HisShadow@188.170.74.8)
[14:28:46] *** Joins: notzmv (~zmv@user/notzmv)
[14:28:46] <int-e> Gödel numbering allows us to implement partial recursive functions in Peano arithmetic. (where to "implement" a function means to write down a predicate P(x,y) that is true if and only if y is the result of applying the function to x)
[14:29:04] <int-e> It's a *ton* of technical work.
[14:30:07] *** Quits: SGautam (~SGautam@117.195.244.186) (Ping timeout: 265 seconds)
[14:30:32] *** Quits: Julian (~tos9@python/site-packages/Julian) (Ping timeout: 268 seconds)
[14:30:44] <brownorange> why isn't it fixable like russel's paradox is? because it seems a lot like it.
[14:31:51] *** Joins: mgrabovs_ (~mgrabovs@redhat/mgrabovs)
[14:32:04] <int-e> You fix up Russel's paradox by giving up the idea that any collection of objects (any predicate) is a set.
[14:32:07] *** Quits: Kol (~Kol@d75-157-122-186.bchsia.telus.net) ()
[14:32:11] <int-e> s/fix up/fix/
[14:32:37] <int-e> You "fix" incompleteness by giving up the idea that every sentence can be proved or disproved.
[14:32:57] <brownorange> but do we get completeness from that fix? i hear not
[14:33:06] <brownorange> it is forever incomplete we are told
[14:33:12] *** Joins: glaucon (~glaucon@46.109.108.150)
[14:33:15] <int-e> brownorange: note the quotation marks
[14:33:39] <int-e> You don't fix it, you accept it as a fact and move on in life.
[14:34:05] <brownorange> but with russel's paradox we do a real fix
[14:34:23] <int-e> But my point was that we do something similar for Russell's paradox... we adjust our expectations of set theory.
[14:34:34] *** Quits: mgrabovs (~mgrabovs@redhat/mgrabovs) (Ping timeout: 268 seconds)
[14:34:52] *** Quits: ChaiTRex (~ChaiTRex@user/chaitrex) (Remote host closed the connection)
[14:34:52] <brownorange> then why not adjust the formal system to match the expectations, thus giving completeness in reach
[14:35:08] *** Joins: hanif (~hanif@gateway/tor-sasl/hanif)
[14:35:11] <int-e> Rather than having the set of all sets that do not contain themselves, we just deny that this is a set.
[14:35:23] *** Joins: ChaiTRex (~ChaiTRex@user/chaitrex)
[14:36:31] <brownorange> if arithmetic is the cause, then that can be fixed or maybe our idea of statements need fixing.
[14:36:41] <int-e> In ZF we go further and don't allow infinite chains of element-ofs (X_1 in X_0, X_2 in X_1, X_3 in X_2, etc.)
[14:37:14] <brownorange> for the hilbert program 2nd problem to be thought over, i just..
[14:37:29] <int-e> brownorange: Sure, you can go intuitionistic/constuctivistic/ultra-finitist
[14:37:57] <int-e> But that's making things even less complete :P
[14:38:12] <schillingklaus> "All statements in this paper are false."
[14:39:07] <int-e> "This chest contains treasure."
[14:40:27] <brownorange> if arithmetic is the cause of the incompleteness, may it needs revision. but it could be the prop-calc or pred-calc is the issue despite their completeness. it's the compatibility
[14:40:30] <int-e> (I know, that's not paradoxical. But it also conveys no useful information if it's just a label on a chest.)
[14:42:10] <brownorange> this is worse than incompleteness. we can't even prove consistency
[14:42:11] <int-e> brownorange: Just accept incompleteness. It makes math more exciting anyway.
[14:42:13] *** Joins: horseface (~horseface@82.221.128.46)
[14:42:56] <mawk> int-e: yes and it's a shame it doesn't get more described, I find it magic that some statement about some a system can be encoded inside the system itself, it's like gödel cheated
[14:43:20] <int-e> Gödel shattered all hopes of having a complete, consistent theory of natural numbers. Math is still around. Evidently that issue isn't too bad in practice.
[14:44:13] <brownorange> i think it's important to draw a distinction between proof system and everything you wish to do with math
[14:45:24] *** Quits: specing (~specing@user/specing) (Ping timeout: 272 seconds)
[14:45:25] <brownorange> definitions and other stuff can get you excitement
[14:45:52] *** Joins: horseface_ (~horseface@37.120.234.252)
[14:45:53] <int-e> That video title, "Math Has a Fatal Flaw", is pure clickbait.
[14:46:25] *** Quits: ChaiTRex (~ChaiTRex@user/chaitrex) (Remote host closed the connection)
[14:46:33] <schillingklaus> that's why hrnz retired from mathematics
[14:46:46] *** Joins: ChaiTRex (~ChaiTRex@user/chaitrex)
[14:47:14] *** Quits: revolve (~u0_a227@82-132-247-65.dab.02.net) (Read error: Connection reset by peer)
[14:47:27] <Fangs> if maths people likes proving things so much they should've just taken p and ~p as one of the axioms
[14:47:34] <Fangs> what fools, you could've proven *everything*
[14:49:02] *** Quits: horseface (~horseface@82.221.128.46) (Ping timeout: 268 seconds)
[14:49:08] <schillingklaus> but also disproven everything
[14:49:12] *** Joins: revolve (~u0_a227@82-132-246-100.dab.02.net)
[14:49:47] <brownorange> i don't think completeness would grant auto-magic proofs for everything
[14:49:54] <Fangs> http://inutile.club/estatis/falso/
[14:50:03] <brownorange> it would just mean whatever was true a or !a, you would know you could find a proof
[14:50:43] *** Joins: SGautam (~SGautam@117.195.244.186)
[14:50:58] <brownorange> it's hard to believe hilbert wanted to make math boring
[14:51:19] <brownorange> with cantor's paradise, what more could you need
[14:52:35] *** Joins: amahl (~amahl@dsl-jklbng12-54fbca-64.dhcp.inet.fi)
[14:54:32] *** Quits: Samian (~Sami@2620:10d:c091:480::1:8d08) (Quit: Textual IRC Client: www.textualapp.com)
[14:54:34] <brownorange> if the statements that add excitement are just ones that are self-referential, i think russel should win, and we endeavor to expel them.
[14:55:10] *** Joins: Samian (~Sami@2620:10d:c091:480::1:8d08)
[14:55:49] *** Quits: amahl (~amahl@dsl-jklbng12-54fbca-64.dhcp.inet.fi) (Remote host closed the connection)
[14:55:51] <int-e> https://en.wikipedia.org/wiki/Goodstein's_theorem
[14:55:58] *** Joins: Koen_ (~Koen@92.167.9.109.rev.sfr.net)
[14:56:17] <int-e> (famously independent of PA (assuming consistency (who doesn't?)))
[14:59:45] <brownorange> that's an example of true about PA, but i'm not convinced PA implies its truth. for example a recipe for doughnuts may not include the "recipe" for how they decay at some temperature.
[15:00:28] *** Quits: anovick (~anovick@IGLD-83-130-156-7.inter.net.il) (Ping timeout: 268 seconds)
[15:01:11] <brownorange> if you could express decay and temperature in terms of doughnuts, maybe it makes sense.
[15:01:57] <brownorange> maybe this goes back to giving proofs numbers.
[15:03:04] <brownorange> by doughnuts i meant like those sugary things people eat
[15:03:19] <brownorange> not like a torus or some other math object
[15:03:52] *** Quits: CombatVet (~c4@user/combatvet) (Remote host closed the connection)
[15:04:22] <brownorange> there could be many math theorems about prop-calc, that doesns't mean prop-calc is incomplete because it doesn't assume axioms to prove those theorems
[15:05:16] *** Joins: CombatVet (~c4@user/combatvet)
[15:05:41] *** Quits: X-Scale (~ARM@175.38.114.89.rev.vodafone.pt) (Ping timeout: 268 seconds)
[15:09:06] *** Quits: HisShadow (~HisShadow@188.170.74.8) (Ping timeout: 268 seconds)
[15:10:02] *** Joins: HisShadow (~HisShadow@188.170.77.228)
[15:12:41] *** Joins: lydianchromatic (~lydianchr@user/zacts)
[15:14:26] <brownorange> ok if goodstein's theorem is a wff in PA, then the fact it can't be proved in PA, that's an argument for incompleteness of PA
[15:15:30] <brownorange> maybe that's wrong. wffs aren't actually guaranteed true/false
[15:16:57] <brownorange> wff is a language thing not a formal system thing
[15:17:00] <tolarz> Fangs | what fools, you could've proven *everything*
[15:17:02] <tolarz> no
[15:17:05] <tolarz> or am misunderstanding things?
[15:17:09] <tolarz> oh
[15:17:11] <tolarz> p and ~p
[15:17:13] <tolarz> not p or ~p
[15:17:15] <tolarz> lol
[15:17:38] *** Quits: pavlushka (~pavlushka@user/pavlushka) (Read error: Connection reset by peer)
[15:19:14] *** Joins: pavlushka (~pavlushka@user/pavlushka)
[15:19:14] <schillingklaus> tolarz is the captain of a cruise ship, going from LA to Acapulco. Some pessengers are covid infected, but the captain does not know yet.
[15:20:53] <schillingklaus> the ship stops in Ensenada, then in Cabo San Lucas, then in Mazatlan, then in Puerto Vallarte. After each stop, the number of infected people doubles.
[15:22:24] <schillingklaus> finally, the ship lies ricked and ready in the harbour of Acapulco, and the captain tests the passengers. All of them are now infected, and Tolarz throws them to the wite sharks, which devour them immediately.
[15:23:12] <schillingklaus> At which point of the journey have half of the passengers been infected?
[15:27:23] *** Quits: pgp (~pgp@88.157.222.244) (Quit: Leaving)
[15:31:13] <int-e> ...just don't make up text problems, schillingklaus
[15:32:49] <truthr> good t-shirt - "mathematicians do it correctly"
[15:33:06] <Fangs> int-e: how did you use pari-gp to solve the matrix kernel btw?
[15:33:11] <Fangs> or I guess, do you know how it does it?
[15:33:21] <Fangs> in matlab I cant think of anything better than "do rref"
[15:33:31] <int-e> Fangs: matker() computes kernels
[15:35:11] <PlanckWalk> brownorange: Correct, PA does not imply Goodstein's theorem.  There are models of PA in which Goodstein's theorem is false.
[15:35:18] <Fangs> I think that's the same as matlab's rref? not entirely sure
[15:35:34] *** Joins: pgp (~pgp@88.157.222.244)
[15:35:40] <Fangs> (up to multiplying the basis by some lowest common factor in the denominator)
[15:35:54] *** Quits: SGautam (~SGautam@117.195.244.186) (Ping timeout: 252 seconds)
[15:36:09] <HisShadow> Fangs: there's only one way to do it, afaik, just solve the system of equations
[15:36:30] *** Quits: kakuhen (~kakuhen@user/kakuhen) (Quit: Leaving...)
[15:37:05] *** Joins: SGautam (~SGautam@117.195.244.186)
[15:37:07] <Fangs> https://www.irccloud.com/pastebin/68ppfApO/
[15:37:37] *** Quits: SGautam (~SGautam@117.195.244.186) (Remote host closed the connection)
[15:37:40] *** Joins: Danishman (~Allan@62-243-156-218-static.dk.customer.tdc.net)
[15:37:51] *** Joins: SGautam (~SGautam@117.195.244.186)
[15:38:19] <brownorange> @PlanckWalk when I hear of things like can be proved in system A to be true, but system B to be the opposite, I am emboldened to think arithmetic and incompleteness are not as linked as claimed
[15:39:14] <Fangs> [- z^2 + 3*z - 2;3*z^2 - 6*z]
[15:39:17] <Fangs> matlab gave me this
[15:39:25] <PlanckWalk> There are arithmetic systems that are complete.
[15:39:27] <Fangs> think its the same thing (off by -1 granted)
[15:39:29] <PlanckWalk> Well, "arithmetic"
[15:39:42] <int-e> Fangs: same thing, multiplied by -1
[15:39:43] *** Quits: bitdex (~bitdex@gateway/tor-sasl/bitdex) (Quit: = "")
[15:39:48] <schillingklaus> those systems are complete(ly useless)
[15:39:49] <PlanckWalk> As in axiom systems for small parts of arithmetic.
[15:39:52] <PlanckWalk> They are
[15:40:21] <Fangs> [3*z^2,     0, -(z - 1)*(z - 2)]; [    0, 3*z^2,      3*z*(z - 2)]
[15:40:21] <Fangs>  
[15:40:40] <brownorange> "The first incompleteness theorem states that no consistent system of axioms whose theorems can be listed by an effective procedure (i.e., an algorithm) is capable of proving all truths about the arithmetic of natural numbers." --wikipedia
[15:40:52] <PlanckWalk> Yes
[15:41:10] <Fangs> I think this was the order of the basis in the domain
[15:41:47] *** Quits: stkrdknmibalz (~test@rrcs-75-87-43-226.sw.biz.rr.com) (Quit: WeeChat 3.0.1)
[15:42:41] <int-e> Fangs: your paste is missing a line
[15:43:36] *** Quits: hanif (~hanif@gateway/tor-sasl/hanif) (Ping timeout: 244 seconds)
[15:43:52] <Fangs> a[111]+b[12]+c[3] .. I'm not sure how to go from that matrix (or even the basis you presented) to 3n(n-2)[12]+3nn[3]+(n-1)*(n-2)[111]
[15:43:53] <int-e> so, hmm, I don't know what [- z^2 + 3*z - 2;3*z^2 - 6*z] is.
[15:43:54] *** Quits: dogbert2 (~Bill@ip68-105-189-91.lv.lv.cox.net) (Remote host closed the connection)
[15:44:09] *** Joins: dogbert2 (~Bill@ip68-105-189-91.lv.lv.cox.net)
[15:44:23] <PlanckWalk> Looks like a column vector of polynomials.
[15:44:39] <Fangs> int-e: its rref(equation)*(lowest common factor in the denominator) of the 2 entries in the matrix
[15:44:52] <int-e> PlanckWalk: it is. there was a third component, 3n^2
[15:45:14] <Fangs> https://www.irccloud.com/pastebin/roE1kXNA/
[15:45:20] <Fangs> thats the missing entry
[15:45:55] <Fangs> int-e: am I stupid?
[15:45:57] <int-e> and the rows correspond the [111], [21], and [3], same order as above
[15:46:02] <brownorange> now "all truths" is  weird. I think when proving completeness the goal should be restricted to the domain of the formal language. It is readily seeable why prop-calc can be complete. But if math can apply to literally everything, what formal systems' incompleteness doesn't it soak up? especially with definitions
[15:46:05] <Fangs> c1**2*(3*d*z + e*(z - 1)) + c2*(e*z + f*(z - 2)) <-- this is the equation
[15:46:19] <PlanckWalk> brownorange: It is restricted to the language
[15:46:28] <Fangs> [11](3*d*z + e*(z - 1)) + [2](e*z + f*(z - 2)) <-- this is the equation in your notation
[15:46:52] <Fangs> so we have a linear map from a[111]+b[12]+c[3] to that, and that should be a 3col 2row matrix
[15:47:06] <Fangs> int-e: I only have "2 solutions" because my matrix is 3x2
[15:47:16] <int-e> so you started with d[111] + e[21] + f[3], and you can take d = n^2-3n+2, e = -3n^2+6n, f = 3n^2.
[15:47:18] <brownorange> logic applies to logic, fine. math to math, we get self-reference
[15:47:29] <Fangs> yeah that much is fine
[15:47:30] *** Joins: krjli (~user@dsl-lprbng12-54f9b9-129.dhcp.inet.fi)
[15:47:44] <Fangs> that agrees with the first computation I did by hand
[15:48:23] <Fangs> I'm just confused about dimensions
[15:48:51] <int-e> Fangs: so what is your question then? The kernel should have vectors of length 3. It's interesting that [- z^2 + 3*z - 2;3*z^2 - 6*z] matches the first two components of the kernel, but I don't know why there is no third entry.
[15:49:03] <PlanckWalk> brownorange: You don't need to go nearly as far as "all math".
[15:49:32] <PlanckWalk> You could just look at extending the axioms of Peano Arithmetic, for example.
[15:49:37] <Fangs> the kernel is not given by rref(A|0)?
[15:49:52] <tolarz> schillingklaus: please don't involve me in covid conversations, thanks
[15:49:54] <int-e> I don't know matlab.
[15:50:24] <tolarz> truthr | good t-shirt - "mathematicians do it correctly"
[15:50:28] <tolarz> "but they cannot verify it"
[15:50:32] <PlanckWalk> There is no extension by finite schemata that yields a system in which every well-formed proposition or its negation is provable.
[15:50:33] <tolarz> (only computer scientists know proof theory enough)
[15:50:34] *** Quits: join_subline (~join_subl@135-23-249-80.cpe.pppoe.ca) (Ping timeout: 252 seconds)
[15:50:43] <PlanckWalk> (Exclusive or there)
[15:50:48] *** Joins: join_subline (~join_subl@135-23-249-80.cpe.pppoe.ca)
[15:51:16] <PlanckWalk> So essentially, you can't do any better than just having an infinite list of all theorems.
[15:51:27] <Fangs> "kernel should have vectors of length 3"... yeah... that makes a lot of sense
[15:51:41] <Fangs>  [(z - 1)*(z - 2); -3*z*(z - 2);3*z^2] using the null(A) function instead
[15:52:15] <Fangs> int-e: I think you can just use the answer you gave me without needing to worry about grobner basis nonsense stuff
[15:52:24] <Fangs> (or I could do that rather)
[15:52:34] <Fangs> is what I was trying to get at too
[15:54:10] <schillingklaus> tolarz is the captain of a cruise ship, and some of the passengers are affected by the contagious morbus hrnz.
[15:54:19] *** ChanServ sets mode: +o int-e
[15:54:21] *** schillingklaus was kicked by int-e (schillingklaus)
[15:54:26] *** int-e sets mode: +b $a:schillingklaus
[15:54:37] *** int-e sets mode: -o int-e
[15:55:40] <brownorange> PlanckWalk, there are wffs who's {a, !a} forms are neither in the formal system, but rather just captured by the language. or is your point the wffs of PA itself, can never all be proven by adding more axioms
[15:56:44] *** Quits: Maturion (~Maturion@p200300ede71e92000b1d861ed8d096be.dip0.t-ipconnect.de) (Ping timeout: 272 seconds)
[15:57:38] <Fangs> rreally wish you could combine programming languages
[15:57:42] <int-e> brownorange: you need to distinguish between formal systems (which, to be useful, need to be semidecidable) and models (where every sentence is either true or false). models aren't systems.
[15:58:26] *** Quits: bowlofeg1 (~bowlofegg@fedora/bowlofeggs) (Ping timeout: 268 seconds)
[15:58:52] *** Joins: mgrabovsky (~mgrabovs@redhat/mgrabovs)
[15:59:46] *** Joins: bowlofeg1 (~bowlofegg@fedora/bowlofeggs)
[15:59:46] <truthr> tolarz: hah
[15:59:49] <int-e> (Of course this line is blurred because we can make a /theory/ from a model by just collecting all the true sentences. But in the case of the natural numbers, that theory isn't semidecidable. So we can't use it.)
[16:00:16] <brownorange> I would claim every sentence including both {a,!a} forms are not guaranteed to be part of the formal system
[16:00:29] *** Quits: truthr (user@user/truthr) (Quit: you're all ive got tonight https://www.youtube.com/watch?v=_YbqNaXbmTs)
[16:01:04] <int-e> "sentence including both {a,!a} forms" makes no sense to me at all
[16:01:20] *** Joins: Crassus (~Crassus@user/crassus)
[16:01:28] *** Quits: mgrabovs_ (~mgrabovs@redhat/mgrabovs) (Ping timeout: 265 seconds)
[16:01:36] <brownorange> any sentence has a form a, but also !a.
[16:01:37] <Fangs> int-e: you could probably be saying the same thing about those c1,...,cn talks
[16:02:10] <brownorange> atleast in the language, but i don't think a formal system is guaranteed either
[16:02:27] <PlanckWalk> brownorange: Formal systems in which every proposition P has a proof of at least one of P or ~P are called complete.
[16:02:58] <brownorange> yes i agree with that
[16:03:35] <brownorange> but i'm not sure all P's of the formal language deserve a proof, rather the formal system's Ps do
[16:05:07] <PlanckWalk> What distinction are you tryng to draw there?
[16:05:43] <PlanckWalk> System = language, here.
[16:06:26] <PlanckWalk> Well, system = language + derivation rules, technically I guess.
[16:07:09] <PlanckWalk> But I don't think that's the distinction you were trying to make
[16:07:23] <tolarz> thanks for kicking, int-e
[16:07:44] <brownorange> if P is some sentence of the formal language, it doesn't matter if P or !P is provable in the system, unless P is part of the system
[16:07:52] <brownorange> i literally see language different than system
[16:08:21] <PlanckWalk> The word "language" is different from "system", if that's what you mean
[16:08:23] *** Joins: i0e (~is0ke3@user/is0ke3)
[16:08:54] <brownorange> example a difference of an axiom controls what is provable obviously. but the language always dicates what's a wff
[16:09:06] <PlanckWalk> brownorange: For example, the Goodstein proposition is a well-formed proposition in PA.
[16:09:37] <brownorange> ah, well i didn't know it was in PA
[16:10:09] *** Quits: Gurkenglas (~Gurkengla@dslb-002-203-144-156.002.203.pools.vodafone-ip.de) (Ping timeout: 268 seconds)
[16:10:14] <PlanckWalk> It's just not *provable* in PA.  Nor is its negation.
[16:10:48] <brownorange> so goodstein's theorem is grammatically correct and part of PA?
[16:11:00] <PlanckWalk> Yes, but I wouldn't call it a "theorem" there.
[16:11:05] <PlanckWalk> Since it's not provable in PA
[16:11:16] <int-e> You have to do quite a bit of work to encode it in PA.
[16:11:20] <PlanckWalk> Yes, you do
[16:11:29] <PlanckWalk> It's a rather large proposition.
[16:11:48] <PlanckWalk> There are many equivalent ways to state it in PA
[16:11:51] <int-e> But it can be done, along the same lines that Gödel used for encoding provability.
[16:11:58] <PlanckWalk> None of them are provable by PA
[16:12:00] *** Quits: SGautam (~SGautam@117.195.244.186) (Ping timeout: 268 seconds)
[16:12:34] <int-e> (A modern account would do all of this in terms of partial recursive functions, which is why I mentioned those earlier.)
[16:13:33] <brownorange> "There is no extension by finite schemata that yields a system in which every well-formed proposition or its negation is provable." this was about PA and goodstein right?
[16:13:52] <int-e> Just about PA
[16:14:04] <int-e> asserting Goodstein's theorem would be a finite extension of PA.
[16:14:23] <int-e> "asserting" meaning adding it as an axiom.
[16:14:41] <brownorange> are finite extentions limited to certain axioms though?
[16:14:45] <PlanckWalk> brownorange: That statement was about anything that meets the criteria of Godel's first incompleteness theorem.
[16:14:53] <PlanckWalk> Which PA does, for example
[16:15:46] <brownorange> "The first incompleteness theorem states that no consistent system of axioms whose theorems can be listed by an effective procedure (i.e., an algorithm) is capable of proving all truths about the arithmetic of natural numbers." --wikipedia
[16:16:16] <int-e> retconned, but yeah
[16:16:54] <brownorange> am i missreading this. is it saying no formal system (that's consistent) can do the job of proving all truths about arithmetic of natural numbers?
[16:17:26] <PlanckWalk> enumerable formal system, but yes
[16:18:22] <int-e> Gödel used quite different words for this and had an additional restriction, so he talked about something like "omega-consistent arithmetic theories"
[16:18:40] <brownorange> to be extra clear, even if arithmetic isn't assumed?
[16:19:11] *** Joins: SGautam (~SGautam@117.195.244.186)
[16:19:15] <brownorange> meaning my proof system if it has no notion of arithmetic, but is consistent, it can never prove all truths of arithmetic ?
[16:19:18] <PlanckWalk> The Wikipedia introduction is highly paraphrased.
[16:19:40] <int-e> Rosser figured out how to lift the restriction of omega-consistency; Kleene and others made the connection between "arithmetic" and partial recursion.
[16:20:31] <PlanckWalk> If you want to talk about "proving truths of arithmetic" you need a lot more foundational machinery.
[16:21:09] <brownorange> https://i.imgur.com/6wK889S.png and by all truths it means ones like this right
[16:21:22] <PlanckWalk> Err what?
[16:21:32] <int-e> The notion of a "standard model" is a bit of a foundational joke.
[16:21:42] <PlanckWalk> That's a picture of some block with writing on it.
[16:22:07] <PlanckWalk> I don't see anything about "arithmetic truths" there
[16:22:14] <int-e> (So you use set theory to make a model. Which model of set theory do you use for that?)
[16:22:15] *** Joins: savask (~savask@Powder/Developer/savask)
[16:22:31] <brownorange> that's' a building textured by the statement it has no texture. there is no building that is textured with a statement that it has no texture, but is correct about having one
[16:22:44] <PlanckWalk> Then no, it is not at all about that.
[16:22:58] <PlanckWalk> Except in the vaguest allusory sense.
[16:23:18] <brownorange> it's sort of a joke image, but these self-reference things are the only obstacle i'm not sure things are as bleak
[16:23:39] <int-e> who's saying that things are bleak?
[16:23:52] *** Joins: Julian (~tos9@python/site-packages/Julian)
[16:24:00] <int-e> <int-e> That video title, "Math Has a Fatal Flaw", is pure clickbait.
[16:24:09] <brownorange> no consistency proof for maths, or even basic arithmetic
[16:24:24] <int-e> it's not a problem
[16:25:12] *** Quits: Julian (~tos9@python/site-packages/Julian) (Client Quit)
[16:26:08] <brownorange> if math is viewed as just logic, we should want one. math is suppose to be about correctness.
[16:26:17] <PlanckWalk> Why would you accept a consistency proof anyway?
[16:26:25] <PlanckWalk> (I mean, even without Godel's 2nd)
[16:27:04] <brownorange> i want math to be consistent and sound
[16:27:31] <PlanckWalk> Wanting something to be true isn't a reason to accept it :)
[16:27:48] <PlanckWalk> Okay, technically it is *a* reason, just not a good reason.
[16:28:36] <PlanckWalk> If some mathematical system could prove that it was consistent, that's only as trustworthy as someone telling you that they aren't a liar, honest.
[16:29:03] <PlanckWalk> If anything, Godel did us a favour by telling us that there are good reasons not to accept such a proof.
[16:29:16] <int-e> It gets better; we have a consistency proof for PA. https://en.wikipedia.org/wiki/Gentzen%27s_consistency_proof
[16:29:40] <int-e> Not in PA, of course.
[16:30:25] <brownorange> if ZFC, which is what is really used, and i know that's not really true because some people may user another or drop axiom of choice or axiom of infinity etc
[16:30:55] *** Joins: rubiksdream (~a@cm61-15-252-242.hkcable.com.hk)
[16:31:26] <brownorange> but if ZFC is the formal system, and with that your proof system, because the point of the formal system is to list everything, we should want consistency because our logic and our truths are all mixed
[16:31:54] <brownorange> wha'ts the point of the axiomatization if you don't accept it's really what you're counting on being correct is the axioms
[16:32:28] <brownorange> we dont' blindly accept axioms, we want to think they are correct. so we should want consistency.
[16:32:36] <brownorange> (and soundness)
[16:32:37] <PlanckWalk> Sure
[16:32:40] *** Quits: Crassus (~Crassus@user/crassus) (Quit: Textual IRC Client: www.textualapp.com)
[16:33:04] <PlanckWalk> But there's no reason to expect that we can prove we have it, without having a circular argument.
[16:33:15] *** Joins: phillbush (~phillbush@user/phillbush)
[16:33:16] <brownorange> ok, why's that?
[16:33:48] <PlanckWalk> Any such proof would have to be made in some system, which then we'd have to prove is sound, etc
[16:33:54] <PlanckWalk> Infinite regress.
[16:34:17] <PlanckWalk> (Because obviously a system proving that it is itself sound can't be trusted)
[16:34:40] <PlanckWalk> Obviously an unsound system can prove that it is sound.
[16:34:54] <PlanckWalk> (If it's sufficiently expressive)
[16:35:43] <brownorange> prop-calc and pred-calc are sound. both are complete.
[16:36:06] <PlanckWalk> If you accept that the systems used to prove that are sound, yes.
[16:36:35] <PlanckWalk> There's always some level of trust required.
[16:37:07] <brownorange> prop-calc also has a consistency theorem
[16:37:12] <PlanckWalk> Yes
[16:37:45] <brownorange> why not bend these prop-calc, and pred-calc into some crazy formal systems that have no theorems for soundness, consistency, completeness
[16:37:48] <rubiksdream> By system used to prove prop-calc / pred-calc is sound, are you saying we are still assuming certain things, e.g. induction for the natural numbers
[16:37:56] <Z-module> I dunno, I blindly accept AC, simply because it leads to such cool phenomena
[16:38:16] <brownorange> am I rubiksdream?
[16:38:32] <rubiksdream> as far as I remember the proofs for soundness/completeness of prop calc hinge on an inductive argument
[16:38:49] <rubiksdream> sorry brownorange i meant to be replying to PlanckWalk
[16:38:55] <PlanckWalk> The systems used to prove propositional logic sound are *much* more complex than propositional logic itself.
[16:39:43] <int-e> I should've stressed that Gentzen's proof is proof-theoretic which sets it apart from just constructing the natural numbers in ZF and showing that the PA axioms hold.
[16:39:45] *** Quits: ionface (~ionface@user/ionface) (Read error: Connection reset by peer)
[16:40:43] <rubiksdream> but what are these systems? to prove propositional logic is sound the argument I know is first assume that Gamma |- phi has a proof of length k, then set P(k) = [Gamma |- phi] => [Gamma |= phi], and induct on k
[16:41:19] <rubiksdream> it seems like what you would need is a system where countable sets exist, and they all have a principle of induction, etc
[16:41:34] <rubiksdream> but in some logic courses the system that this takes place in is never mentioned, or at most referred to as 'meta theory'
[16:41:42] *** Joins: ionface (~ionface@user/ionface)
[16:44:20] <PlanckWalk> I'm certainly not saying that these systems (formally specified or not) are not sound.  Just that belief in their soundness is more to swallow that soundness of bare propositional logic.
[16:44:36] <rubiksdream> ah I see
[16:44:46] <rubiksdream> yes that is true, by virtue of them being more complicated than prop logic
[16:44:56] *** Joins: specing (~specing@user/specing)
[16:44:57] <rubiksdream> if i understand you correctly that is your argument?
[16:45:00] <PlanckWalk> Yes
[16:45:02] <greenbagels> remembering how to do analysis is a fun time
[16:45:26] <int-e> rubiksdream: we can't be too precise about the ambient logic because that would require another logic around it, and we'll never get anywhere
[16:45:42] <PlanckWalk> It's nice that we can use such arguments to prove soundness and completeness of the simpler systems though.  It would be worrying if we couldn't.
[16:45:56] *** Quits: quarterback (~quarterba@user/quarterback) (Ping timeout: 268 seconds)
[16:46:13] <PlanckWalk> Even more worrying if we could prove the negation!
[16:47:45] <rubiksdream> yeah thats true
[16:47:58] *** Joins: hanif (~hanif@gateway/tor-sasl/hanif)
[16:48:02] <rubiksdream> int-e right, infinite regress and all
[16:48:28] <int-e> I said earlier that it isn't a problem but I'm sure this has driven a few people literally insane.
[16:48:46] <rubiksdream> i can imagine.. *cough* godel *cough*
[16:48:58] <int-e> So don't worry too much about the foundations, let's do math. :P
[16:49:15] <brownorange> i was under the impression challenging the foundations of things like a completeness/soundness theorem for basic logic is like challenging if symbolic was ever invented.
[16:49:35] <rubiksdream> i like the term 'mathematics proper' to distinguish it from the foundations
[16:49:53] <brownorange> but if it's the metamathematics story all over again, that's more interesting than the incompleteness theorems
[16:53:27] <rubiksdream> i wonder what came first, covering space theory, or the theory of analytic continuation
[16:53:36] <rubiksdream> they seem to be pretty interconnected
[16:54:18] <rubiksdream> certainly the monodromy theorem is just a theorem of topology, but ive only ever seen it applied in the context of complex analysis
[16:54:27] <brownorange> i would have guessed the proof for the soundness/completeness theorems of logic would be akin to the simplicity of asserting substitution exist. However silly long that proof is it would not be from a complicated formal system
[16:58:47] <brownorange> very curious. i still think we're one refinement away from fixing zfc or what have you
[16:59:08] <rubiksdream> why does it need fixing?
[16:59:55] <rubiksdream> or you mean a proof of consistency?
[17:00:18] <brownorange> we don't its free of contradiction. and on the completeness side of things, it would be nice if we could worry less if something we are pursuing is true but just not provable in our system
[17:00:53] <rubiksdream> i see
[17:01:02] *** Joins: oxide (~lambda@user/oxide)
[17:01:32] <rubiksdream> maybe, i only know basic logic so i wouldnt know of any improvements in those areas
[17:01:50] <rubiksdream> but if we were that close I would think we would know about partial results in those directions by now
[17:02:11] <rubiksdream> unless you think there is someone like andrew wiles who is keeping all of his/her work secret
[17:03:04] <brownorange> To overturn Godel is considered crank work by most.
[17:03:54] <rubiksdream> well, some sort of assignment of probabilities to statements indicating a likelihood of provability is not overturning godel
[17:04:02] <rubiksdream> and fits your criterion of 'worrying less' about it
[17:04:19] <rubiksdream> that being said i have no inkling of whether what I just said is possible
[17:04:22] <rubiksdream> or what it would look like
[17:04:44] <brownorange> i've asked why don't people just compute if a statement is a self-reference statement, and dont' pursue it
[17:05:09] *** Joins: Crassus (~Crassus@user/crassus)
[17:05:12] <brownorange> do whatever trick godel does and just figure out something has the undecidability issue
[17:05:49] <int-e> Rice's theorem will tell you that it can't be done.
[17:06:06] <rubiksdream> but godel didn't come up with a procedure to identify if a statement is undecidable did he?
[17:06:57] <rubiksdream> *unprovable
[17:07:40] <brownorange> i think he did find a solid example to prove his case
[17:07:43] <brownorange> it was finite too
[17:07:47] *** Joins: chomwitt (~Pitsikoko@2a02:587:dc0b:0:d8f7:cdfe:4658:bec4)
[17:07:57] <brownorange> but a general procedure for all? i don't think so
[17:08:27] <brownorange> "In computability theory, Rice's theorem states that all non-trivial, semantic properties of programs are undecidable" is the point here int-e that undecidability is a property
[17:09:29] <brownorange> @rubiksdream unless the youtube mislead me on this too, there is an actual number equal to some formula that is undecidable that Godel found
[17:09:53] <rubiksdream> mmm
[17:10:00] <rubiksdream> but he only identified a particular formula
[17:10:23] <int-e> Yes, there is an actual number that is the Gödel number of a particular formula.
[17:10:24] <Koen_> because he needed a counterexample
[17:10:26] <rubiksdream> he wouldn't know if some other sentence with some other godel number was
[17:10:35] <int-e> undecidability and unprovability are closely related concepts
[17:10:45] <int-e> this discussion is reaching the 3h mark, I'm out.
[17:11:04] *** Quits: haykam1 (~haykam@static.100.2.21.65.clients.your-server.de) (Remote host closed the connection)
[17:11:06] <Koen_> brownorange: I recommend reading "gödel, escher, bach" by douglas hofstadter. I have a feeling you'll love that book
[17:11:06] <rubiksdream> well ,glad i joined during the tail end
[17:11:17] *** Joins: haykam1 (~haykam@static.100.2.21.65.clients.your-server.de)
[17:11:40] <hanif> 'but godel didn't come up with a procedure to identify if a statement is undecidable did he?
[17:12:09] <hanif> ' => wouldn't that be equivalent to asking if turing came up with an algo to determine if a program runs indefinitely?
[17:12:45] <rubiksdream> probably
[17:13:26] <rubiksdream> i was convinced the answer was 'no', i just asked because brownorange claimed you could 'do what godel did' to figure out if something is unprovable/undecidable
[17:13:42] <rubiksdream> so i figured maybe im not understanding 'what godel did'
[17:13:48] <brownorange> rubiksdream my understanding is if a formula embeds a computation who's value is equivalent to the overall formula's number when encoded, then it's possible for some statements to engage in self-reference as part of their own formulation
[17:14:12] <brownorange> but i'm no expert in how it actually works or more importantly arises from the axioms
[17:14:34] *** Quits: SGautam (~SGautam@117.195.244.186) (Ping timeout: 268 seconds)
[17:15:13] <brownorange> you can imagine a compact notation as part of a full formula's string, where the output happens to be equal to value that is the encoding of the string.
[17:15:14] *** Joins: qunzhong_luxian (~qunzhong_@68.235.43.110)
[17:16:24] *** Quits: krjli (~user@dsl-lprbng12-54f9b9-129.dhcp.inet.fi) (Remote host closed the connection)
[17:17:19] *** Joins: expix (~1@amontpellier-652-1-118-205.w90-57.abo.wanadoo.fr)
[17:17:45] <brownorange> a fake example.  given "1+2^2^2=5"  assume that 2^2^2 is equal to the value that is the whole string's "1+2^2^2=5" encoded value. ok interesting but no effect perhaps
[17:18:12] <brownorange> but if you throw in some quantification like forall, you might be able to create a formula that ranges over itself.
[17:18:16] <int-e> 1+2^2^2 equals 17
[17:19:46] *** Quits: mbuf (~Shakthi@122.183.157.206) (Quit: Leaving)
[17:21:11] *** Joins: Nact (~l@host-85-27-126-227.dynamic.voo.be)
[17:21:39] *** Quits: Gustavo6046 (~Gustavo60@user/gustavo6046) (Quit: ZNC 1.8.2 - https://znc.in)
[17:21:55] *** Joins: Gustavo6046 (~Gustavo60@user/gustavo6046)
[17:23:57] <brownorange> not surehow to create a forall example that shows it simply
[17:27:16] <rubiksdream> slight change of topic, i found this question online the other day and it was a fun solve: Let {a_i} be a finite set of positive integers, such that every finite subset has a distinct sum, show that sum_i (1/a_i) < 2
[17:27:43] <rubiksdream> i think it was posed by bollobas
[17:28:28] *** Quits: Gustavo6046 (~Gustavo60@user/gustavo6046) (Ping timeout: 250 seconds)
[17:29:46] *** Quits: cheater (~Username@user/cheater) (Ping timeout: 250 seconds)
[17:30:08] *** Joins: hmmmas (~chenqisu1@183.217.200.246)
[17:30:23] *** Joins: cheater (~Username@user/cheater)
[17:30:53] *** Quits: dk657 (~dk657@68.175.131.91) (Ping timeout: 265 seconds)
[17:31:03] *** Joins: Julian (~tos9@python/site-packages/Julian)
[17:31:07] <PlanckWalk> I guess for infinite such subsets you could still show <= 2
[17:32:16] <int-e> PlanckWalk: well that's an easy corollary
[17:32:35] <PlanckWalk> And not difficult to find an example
[17:32:41] <PlanckWalk> (of = 2 that is)
[17:32:49] <rubiksdream> right
[17:33:19] <int-e> right, 2 is obviously a strict bound
[17:33:28] <int-e> tight, I mean
[17:33:58] *** Joins: SGautam (~SGautam@117.195.244.186)
[17:34:16] <int-e> if it is an upper bound at all... that's the hard part. :P
[17:34:55] *** Quits: qunzhong_luxian (~qunzhong_@68.235.43.110) (Quit: Textual IRC Client: www.textualapp.com)
[17:34:59] *** Quits: Crassus (~Crassus@user/crassus) (Quit: Textual IRC Client: www.textualapp.com)
[17:36:46] *** Joins: Gustavo6046 (~Gustavo60@user/gustavo6046)
[17:37:23] *** Joins: dk657 (~dk657@68.175.131.91)
[17:40:09] *** Quits: bowlofeg1 (~bowlofegg@fedora/bowlofeggs) (Read error: Connection reset by peer)
[17:40:24] *** Joins: Crassus (~Crassus@user/crassus)
[17:41:00] *** Joins: bowlofeg1 (~bowlofegg@fedora/bowlofeggs)
[17:43:48] <Z-module> some random googling led me to this other thing that seems kind of cute: Every positive integer is a sum of terms all of the form 2^a 3^b  but where no term used is divisible by any of the others.
[17:44:13] *** Quits: PTY (~PTY@pool-108-7-202-72.bstnma.fios.verizon.net) (Remote host closed the connection)
[17:44:32] <Z-module> so in particular you can never use 2^0 3^0 = 1 except by itself to get the expression for 1
[17:44:38] *** Quits: cheater (~Username@user/cheater) (Ping timeout: 258 seconds)
[17:45:05] *** Joins: cheater (~Username@user/cheater)
[17:46:18] *** Quits: Gustavo6046 (~Gustavo60@user/gustavo6046) (Ping timeout: 272 seconds)
[17:47:14] *** Joins: Gustavo6046 (~Gustavo60@user/gustavo6046)
[17:47:15] <int-e> Hmm. If the number is even, divide by 2; if it is odd, subtract the largest power of 3 that fits and divide by 2. The same power of 3 can't fit again because 3^k*2 + 3^k = 3^(k+1).
[17:47:18] <int-e> Fun.
[17:48:57] <rubiksdream> i swear i asked that exact question here before
[17:49:01] <rubiksdream> the 2^a3^b thing
[17:49:11] <rubiksdream> and int-e came up with an answer that generalized it somewhat
[17:49:15] *** Quits: HisShadow (~HisShadow@188.170.77.228) (Read error: Connection reset by peer)
[17:49:25] *** Quits: revolve (~u0_a227@82-132-246-100.dab.02.net) (Read error: Connection reset by peer)
[17:49:37] *** Quits: hmmmas (~chenqisu1@183.217.200.246) (Quit: Leaving.)
[17:49:41] <rubiksdream> the key was the ratio 3/2
[17:49:45] <rubiksdream> being less than 2
[17:51:30] <int-e> And 8 + 3 = 11 = 2 + 9 shows that this representation is not unique.
[17:52:07] *** Joins: HisShadow (~HisShadow@188.170.85.97)
[17:53:13] *** Quits: Crassus (~Crassus@user/crassus) (Quit: Textual IRC Client: www.textualapp.com)
[17:53:19] <int-e> rubiksdream: Did I? I don't remember. Maybe you didn't have the constraint that "no term used is divisible by any of the others"?
[17:54:24] <rubiksdream> oh i think you're right
[17:54:27] <rubiksdream> it was without that constraint
[17:54:51] *** Joins: PTY (~PTY@pool-108-7-202-72.bstnma.fios.verizon.net)
[17:54:52] *** Joins: dila (~dila@199.247.9.204)
[17:55:15] <dila> hi
[17:55:37] <dila> can i show that Dih_3 \cong Z/6Z^*
[17:55:44] <brownorange> i may have been wrong. the statements i'm coming up with to show self-reference look like things predicate axioms would forbid
[17:56:05] *** Joins: zetter (~zetter@31.17.252.132)
[17:56:36] *** Quits: Gustavo6046 (~Gustavo60@user/gustavo6046) (Quit: ZNC 1.8.2 - https://znc.in)
[17:56:55] <int-e> dila: doesn't one of those have 6 elements and the other one only 2?
[17:57:08] <rubiksdream> ah wait, im totally wrong, the question i asked before was ' a number is charming if it is equal to 2 or 3^i5^j i,j>=0, prove that every positive integer can be written as a sum of different charming integers'
[17:57:15] *** Joins: johnkeats6 (~johnkeats@2804:14c:32:a0cc:b4de:8b01:2d6a:f810)
[17:57:19] <brownorange> perhaps not
[17:57:53] *** Joins: Gustavo6046 (~Gustavo60@user/gustavo6046)
[17:58:11] *** Joins: Crassus (~Crassus@user/crassus)
[17:58:15] <dila> int-e: thanks. i will try to find out where i went wrong
[17:58:41] <int-e> rubiksdream: there's a strong similarity in that the approach I took was the greedy one
[17:58:58] *** Quits: HisShadow (~HisShadow@188.170.85.97) (Ping timeout: 268 seconds)
[17:59:16] *** Quits: cheater (~Username@user/cheater) (Ping timeout: 252 seconds)
[17:59:39] *** Joins: HisShadow (~HisShadow@188.170.79.148)
[17:59:49] *** Joins: cheater (~Username@user/cheater)
[17:59:57] *** Joins: qunzhong_luxian (~qunzhong_@68.235.43.166)
[17:59:58] <int-e> rubiksdream: Oh wait, I remember, I restricted things to j <= 1. for that one
[18:00:22] <int-e> But being greedy did feature strongly anyway.
[18:02:10] *** Joins: Guest53 (~textual@170.250.221.149)
[18:06:11] <brownorange> Enc(x) means encoding of statement x. Consider "ForAll statements a,b where a xor b is true, then Enc(a)=Enc(b)+7"  if either a,b were the statement considered, the truth would be undecidable. This may just be a failure to use predicate calculus right
[18:06:21] *** Joins: CryptoDavid (uid14990@id-14990.highgate.irccloud.com)
[18:06:26] *** Joins: bosspotato (~bosspotat@lnsm2-montreal02-142-116-246-202.internet.virginmobile.ca)
[18:06:26] *** Quits: bosspotato (~bosspotat@lnsm2-montreal02-142-116-246-202.internet.virginmobile.ca) (Changing host)
[18:06:26] *** Joins: bosspotato (~bosspotat@user/bosspotato)
[18:07:19] *** Quits: Crassus (~Crassus@user/crassus) (Ping timeout: 268 seconds)
[18:07:34] *** Joins: Inline (~Inline@2a02:908:1252:7a80:c035:deeb:51be:5431)
[18:09:17] <int-e> https://en.wikipedia.org/wiki/Tarski%27s_undefinability_theorem
[18:10:35] <brownorange> Trud(x) means truth of statement x to decimal value false to 0, true to 1. Consider "ForAll statements a,b Trud(a)+Trud(b)=2" if either a,b is the statement considered, there is self-reference, thus undecidability.
[18:11:27] <dila> brownorange: for the first question i would look at the pre-image of 7 under the Enc map
[18:11:41] <dila> it "decodes" to some statement
[18:12:46] <int-e> You can't quantify over statements in PA. You can only quantify over their encodings. That's the whole point of encoding statements (into natural numbers) in the first place.
[18:13:45] <dila> int-e: to me?
[18:14:56] <brownorange> "A corollary is that any metalanguage capable of expressing the semantics of some object language must have expressive power exceeding that of the object language. The metalanguage includes primitive notions, axioms, and rules absent from the object language, so that there are theorems provable in the metalanguage not provable in the object language." This appears to support the idea that the soundness/completess theorems for prop-calc were proven
[18:14:57] <brownorange> from something more complex
[18:15:11] <int-e> dila: nope, to brownorange
[18:15:42] <int-e> I'm not sure why I'm bothering though.
[18:15:48] <dila> it sounds like philosophy
[18:16:47] <brownorange> huh. this undefinability theorem appears to have implications about AI
[18:17:16] *** Quits: Guest53 (~textual@170.250.221.149) (Quit: My MacBook has gone to sleep. ZZZzzz…)
[18:18:44] <brownorange> "Informally, the theorem says that given some formal arithmetic, the concept of truth in that arithmetic is not definable using the expressive means that that arithmetic affords. "
[18:19:17] <dila> int-e: my error regarding Dih_3 was that i accidently included the additive identity when counting the elements. the multiplicative group Z/pZ^* has p-1 elements, of course
[18:19:45] *** Joins: derelict (~derelict@user/derelict)
[18:19:54] *** Joins: zwisch (~zwisch@135-23-67-207.cpe.pppoe.ca)
[18:21:24] *** Joins: mbuf (~Shakthi@122.174.164.25)
[18:22:08] *** Quits: Gustavo6046 (~Gustavo60@user/gustavo6046) (Quit: ZNC 1.8.2 - https://znc.in)
[18:22:28] *** Joins: Gustavo6046 (~Gustavo60@user/gustavo6046)
[18:23:00] *** Joins: Bayes (~Bayes@ics177-97.icsincorporated.com)
[18:23:06] *** Quits: Bayes (~Bayes@ics177-97.icsincorporated.com) (Changing host)
[18:23:06] *** Joins: Bayes (~Bayes@user/bayes)
[18:23:27] *** Bayes is now known as WeAreElectricity
[18:26:51] *** Quits: ormaaj (~ormaaj@user/ormaaj) (Quit: Reconnecting)
[18:27:03] *** Quits: gas51627 (uid91066@id-91066.brockwell.irccloud.com) (Quit: Connection closed for inactivity)
[18:27:06] *** Joins: cvmn (~caveman@gateway/tor-sasl/caveman)
[18:29:15] *** Quits: Gustavo6046 (~Gustavo60@user/gustavo6046) (Ping timeout: 268 seconds)
[18:30:03] <dila> possibly a very simple question...
[18:30:06] <brownorange> "ForAll m where m encodes a statement x, and ForAll n where n encodes a statement y: (m < n) iff (x implies y)"   The truth of this statement depends upon itself, and even what it implies and encoding being lesser than another. Surely this accomplishes some undecidability
[18:30:16] <dila> if i want to show that a=b, can i show that a!=b which implies a=b?
[18:30:28] <Z-module> dila, you didn't mean (Z/6Z)^*, did you? That is just {[1], [5]}, cyclic of order two.
[18:30:29] *** Joins: Gustavo6046 (~Gustavo60@user/gustavo6046)
[18:30:48] *** Quits: madage (~madage@user/madage) (Remote host closed the connection)
[18:30:49] *** Joins: ormaaj (~ormaaj@2001:470:69fc:105::35ca)
[18:30:51] <rubiksdream> by the way, a useful hint for the problem i stated earlier is 'think about geometric series'
[18:31:02] *** Joins: madage (~madage@user/madage)
[18:31:08] <Z-module> and of course (Z/nZ)^* is abelian for all n
[18:31:13] <brownorange> dila you mean !(a!=b) -> (a=b)
[18:31:13] <dila> Z-module: i made a mistake in thinking (Z/6Z)^* \cong C_2 x C_3
[18:31:16] <Z-module> which dihedral groups ar not
[18:31:47] <Z-module> aha, right, but  C_6 =~ C_2 x C_3    (in spite of what Cayley once published)
[18:32:21] <Z-module> so in fact (Z/7Z)^* =~ C_6 =~ C_2 x C_3
[18:32:44] <dila> hmm
[18:32:49] <dila> C_6 \cong C_2 x C_3?
[18:32:54] <Z-module> yes
[18:33:04] <Z-module> in general if m, n are coprime, then  C_mn =~ C_m x C_n
[18:33:24] <hanif> brownorange: what do you mean by accomplishing undecidability? don't you only need a counterexample to disprove that?
[18:33:36] <dila> when i think of C_n i think of Z/nZ^+. i suppose you are using Z/nZ^* here
[18:34:01] <Z-module> I'm thinking of any cyclic group of order n.  Your first thing is one such.
[18:34:02] <int-e> brownorange: Truth of that "x implies y" cannot be encoded in PA.
[18:34:10] <brownorange> hanif, true. yeah i should limit it
[18:34:15] <int-e> If you could encode it, the statement would be false.
[18:34:16] <Z-module> (Z/nZ)^* always has order phi(n) which is always < n if n > 1
[18:34:19] <dila> Z/6Z^+ != Z/2Z^+ x Z/3Z^+ i'm fairly sure of that
[18:34:35] <int-e> brownorange: You're seriously out of your depth here.
[18:34:39] <dila> (i use x to mean direct product of groups)
[18:34:52] <brownorange> yeah if i knew pred-calc this would be way easier int-e
[18:34:53] <Z-module> cyclic of order 6 *is* isomorphic to the direct produc (cyclic of order 2) x (cyclic of order 3)
[18:35:04] <int-e> dila: well, you're wrong.
[18:35:12] <dila> yes ok. i see
[18:35:22] <dila> by the FTFAG
[18:35:27] <int-e> dila: looking from the right, you can map (1,0) to 3 and (0,1) to 2
[18:35:28] <Z-module> let g generate C_2, and h generate C_3, and start looking at successive powers of (g,h)
[18:35:53] <Z-module> you can't reach the identity until you get the LCM(|g|,|h|)th power, which is 6 here
[18:35:58] <Z-module> so that element has order 6
[18:36:06] *** Joins: Vornicus (~Vornicus@2603-8000-5d07-7ef0-d575-2704-820a-6f5d.res6.spectrum.com)
[18:36:07] <Z-module> so C_2 x C_3 is cyclic of order 6
[18:36:53] <dila> thanks. i made a basic mistake there
[18:36:53] <int-e> Hmm, I should map (0,1) to 4 so that it becomes a ring homomorphism
[18:37:18] <int-e> (thus examplifying the CRT)
[18:37:47] <dila> it's a shame CRT is difficult to do mentally
[18:39:15] <dila> < brownorange> dila you mean !(a!=b) -> (a=b)
[18:39:48] <dila> thanks for this
[18:40:00] *** Joins: Guest53 (~textual@170.250.221.149)
[18:41:10] <brownorange> i use that as an inference rule in my formal system for proving 2+2=4. i think it makes sense.
[18:42:21] *** Quits: mgrabovsky (~mgrabovs@redhat/mgrabovs) (Quit: Carpe diem)
[18:42:34] *** Quits: lydianchromatic (~lydianchr@user/zacts) (Quit: Client closed)
[18:43:43] <brownorange> if there is no inequality between two things , there must be equality. although some people have different ideas of equality. wouldn't surprise me if intuitionist have some objection to it.
[18:43:47] *** Joins: Gustavo6046_ (~Gustavo60@user/gustavo6046)
[18:44:07] <dila> thanks for taking it seriously :)
[18:44:37] *** Quits: Gustavo6046 (~Gustavo60@user/gustavo6046) (Read error: Connection reset by peer)
[18:45:22] <brownorange> how dare you suggest two things a,b are equal just because they are not not equal.!!
[18:46:03] *** Gustavo6046_ is now known as Gustavo6046
[18:46:17] <brownorange> not not a should not imply a, because what about b!
[18:47:30] <dila> i think i was worried that it seemed sort of inefficient
[18:47:55] <dila> inefficient/redundant
[18:48:41] <dila> i mean you could also show that a=b by showing that !!!(a!=b) i think?
[18:49:45] *** Joins: norias (~jaredm@c-98-219-195-163.hsd1.pa.comcast.net)
[18:52:52] *** Joins: quartz (~quartz@2603-8001-7700-61a4-0000-0000-0000-0acb.res6.spectrum.com)
[18:53:11] <Z-module> Another item from this list I found, not sure can do it yet:  Does there exist a permutation (n_k) of the positive integers so that  k | (n_1 +...+ n_k)  for all k ?
[18:53:12] <int-e> !!P ==> P in classical logic. And usually a != b is just a shorthand for !(a = b)
[18:53:36] <Z-module> (permutation means that every positive integer occurs as n_k for some unique k)
[18:53:50] *** Quits: dld (~davidlowr@2601:197:600:1210:c935:8535:4063:dde3) (Ping timeout: 250 seconds)
[18:54:27] *** Quits: zetter (~zetter@31.17.252.132) ()
[18:54:46] *** Quits: quartz (~quartz@2603-8001-7700-61a4-0000-0000-0000-0acb.res6.spectrum.com) (Client Quit)
[18:55:11] *** Quits: mniip (mniip@libera/staff/mniip) (Quit: This page is intentionally left blank.)
[18:55:45] *** Joins: dld (~davidlowr@2601:197:600:1210:ecb4:116f:408c:2cf4)
[18:56:53] <greenbagels> this probability book uses a cute example to show that monotone functions may have dense sets of discontinuous points
[18:56:53] <int-e> mmm. not really hard, I think
[18:56:59] <brownorange> http://us.metamath.org/mpeuni/df-cleq.html http://us.metamath.org/mpeuni/dfcleq.html dila these are some definitions of equal
[18:57:47] <greenbagels> i wonder if they can construct an example without resorting to an absolutely + uniformly convergent infinite series argument
[18:58:30] <greenbagels> https://i.imgur.com/PdS2Exc.png for reference, here's the example
[18:58:34] *** Joins: tacegory (~tacegory@user/tacegory)
[18:59:19] <savask> brownorange: Rare to see a fellow metamath enjoyer here
[18:59:54] <brownorange> http://us.metamath.org/mpeuni/df-ne.html  inequality definition.
[18:59:59] *** Joins: dez (uid92154@user/dez)
[19:00:01] *** Quits: sqrt2_ (~ben@tunnel330957-pt.tunnel.tserv6.fra1.ipv6.he.net) (Quit: ZNC - http://znc.in)
[19:00:12] *** Joins: sqrt2 (~ben@tunnel330957-pt.tunnel.tserv6.fra1.ipv6.he.net)
[19:00:13] <brownorange> @savask i browse now and again.
[19:00:29] <Z-module> greenbagels: my favorite example of strictly monotone with a dense set of discontinuities is:  First fix an enumeration (q_n) of Q.  The function is  f(x) = SUM_{n : q_n < x} 1/2^n
[19:01:28] <Z-module> This f is continuous at all irrational x, and only left-continuous at rational x.
[19:02:02] <greenbagels> such a weird example man
[19:02:10] <greenbagels> i love it
[19:03:05] <Z-module> you should also know that every monontone function (defined on R or on some interval) has at most countably many discontinuities, and is differentiable almost everywhere.
[19:03:12] *** Quits: Arcorann_ (~A@159-196-65-46.9fc441.mel.nbn.aussiebb.net) (Ping timeout: 265 seconds)
[19:03:41] <Z-module> thus, same proprties hold for a function of bounded variation since these are all a difference of two monotones
[19:04:25] <rubiksdream> greenbagels the idea is to set the jumps at rational points and then use a geometric series
[19:04:39] <Z-module> as I did up there, yeah
[19:05:04] <rubiksdream> right, and by choosing that series you can get a distribution function
[19:05:12] <greenbagels> yeah that's what the example in the text did
[19:05:35] <greenbagels> in fact i think they did exactly what Z-module said now that i think about it
[19:06:01] <greenbagels> just summing over all n and using a "point mass" function to "mask out" the qn > x
[19:06:38] <Z-module> you also often see the  q_n <= x   version of that, which is right-continuous but not left.
[19:06:54] <rubiksdream> there are even distribution functions whose induced probability measures are as far away from the lebesgue measure (all on [0,1]) as possible
[19:07:02] *** Joins: quartz (~quartz@2603-8001-7700-61a4-0000-0000-0000-0acb.res6.spectrum.com)
[19:07:04] <rubiksdream> thats what the cantor distribution achieves
[19:07:15] <greenbagels> ah yes Z-module i think the <= one is the one they used actually
[19:07:16] <rubiksdream> and its even continuous
[19:07:50] <Z-module> of course, you can replace Q with any countable dense set for this
[19:08:06] <greenbagels> Z-module: the text claims countability is sufficient
[19:08:23] <rubiksdream> like naively, you would think a continuous distribution on [0,1] cannot induce a probability measure that is mutually singular to the lebesgue measure on [0,1]
[19:08:31] <greenbagels> but i dont see how density comes out of only something like Z
[19:08:39] <Z-module> it doesn't
[19:08:51] <Z-module> so the book must be really claiming something a bit different
[19:09:14] <rubiksdream> maybe just 'there is a distribution function with countably infinitely many discontinuities'
[19:09:33] <greenbagels> ah you know what
[19:10:11] <greenbagels> in the example they go "the set of discontinuities may even be dense" and then "the argument holds with any countable set, not just Q"
[19:10:26] *** Quits: Guest53 (~textual@170.250.221.149) (Quit: My MacBook has gone to sleep. ZZZzzz…)
[19:10:29] <greenbagels> but i think when they say "argument" they just mean the property they say later that monotone functions may be countably discontinuous
[19:10:37] <greenbagels> not the density property of the example itself
[19:10:43] <greenbagels> just the countably discontinuous part
[19:11:33] *** Joins: cheater1__ (~Username@user/cheater)
[19:11:36] *** Joins: Crassus (~Crassus@user/crassus)
[19:11:54] *** Quits: join_subline (~join_subl@135-23-249-80.cpe.pppoe.ca) (Ping timeout: 265 seconds)
[19:12:20] *** Joins: join_subline (~join_subl@135-23-249-80.cpe.pppoe.ca)
[19:13:18] *** Quits: cheater (~Username@user/cheater) (Ping timeout: 268 seconds)
[19:13:20] *** cheater1__ is now known as cheater
[19:13:45] *** Joins: mniip (mniip@libera/staff/mniip)
[19:14:00] <Z-module> there are lots of fun things having to do with density. Such as:  {p/q : primes p and q, including negatives} is dense in R too.  This is nontrivial.
[19:15:06] <greenbagels> dense in R huh
[19:15:08] <greenbagels> wack
[19:15:37] <Z-module> yeah
[19:15:46] <hanif> 'Does there exist a permutation (n_k) of the positive integers so that  k | (n_1 +...+ n_k)  for all k ?' > i cheated with a greedy program, and found the sequence on oeis https://oeis.org/A019444
[19:16:33] <Z-module> I love OEIS a lot. I should send them a donation.
[19:17:06] <int-e> hanif: hmm, how do you know that this sequence contains all positive integers?
[19:17:24] <int-e> (I don't think you do, but I may be missing something)
[19:17:37] <hanif> good point, i don't, i'm currently reading one of the linked content
[19:18:10] *** Quits: SGautam (~SGautam@117.195.244.186) (Ping timeout: 258 seconds)
[19:18:15] *** Quits: chomwitt (~Pitsikoko@2a02:587:dc0b:0:d8f7:cdfe:4658:bec4) (Ping timeout: 268 seconds)
[19:18:48] *** Joins: SGautam (~SGautam@117.195.244.186)
[19:19:14] <johnkeats6> greenbagels, hows random walks
[19:19:38] *** Joins: sander (~sander@user/sander)
[19:19:45] *** Quits: Miss_Disperse (uid505431@id-505431.stonehaven.irccloud.com) (Quit: Connection closed for inactivity)
[19:21:37] <savask> Z-module: And how do you prove that p/q result? My first "idea" would be to try to approximate a/b by (1+a*n)/(1+b*n) and pick n such that both numerator and denominator are prime, but unfortunately Dirichlet theorem gives us primes in only one sequence, not two :/
[19:22:45] <Z-module> trying to remember.... it's an easy corollary of the PNT
[19:23:06] <Z-module> though maybe one or both Chebyshev inequalities suffices
[19:23:08] <int-e> savask: the prime number theorem gives you ~N/2log(N) primes in [N,2N], and two of those will be at most N/2log(N) apart?
[19:23:21] <int-e> uh
[19:23:37] <int-e> That only gets you arbitrarily close to 1, my bad.
[19:29:19] <int-e> Ah but if you construct sequences of primes p_1=q_1=2, and p_(i+1) = N(p_i), q_(i+1) = q_i if p_i/q_i < t, p_(i+1) = p_1, q_(i+1) = N(q_i), where N computes the next prime...
[19:29:35] <int-e> and you assume that you keep missing the target t by more than epsilon
[19:29:50] <greenbagels> int-e: is that right? doesn't 2N/log(2N) - N/log(N) not simplify like that?
[19:29:51] <int-e> then those will grow exponentially, and that will violate the prime number theorem.
[19:30:09] <int-e> greenbagels: it doesn't, but log(2) is negligible as N grows
[19:30:09] *** Joins: Gurkenglas (~Gurkengla@dslb-002-203-144-156.002.203.pools.vodafone-ip.de)
[19:30:31] <int-e> (I mean the log(2) from log(2N) = log(2) + log(N))
[19:30:39] <greenbagels> right
[19:31:27] *** Quits: cvmn (~caveman@gateway/tor-sasl/caveman) (Ping timeout: 244 seconds)
[19:31:28] *** Joins: lydianchromatic (~lydianchr@user/zacts)
[19:31:30] <greenbagels> wouldn't it even become N/log(N) at that point
[19:31:46] <greenbagels> er uh
[19:34:23] <int-e> mmm I messed up again didn't I.
[19:37:08] <savask> int-e: Maybe use the fact that n-th prime p_n is ~ n log n. Then a/b is a limit of p_(an)/p_(bn)
[19:37:58] <Z-module> hmm, seems to be more complicated than I remember:   https://math.stackexchange.com/questions/1013414/are-fractions-with-prime-numerator-and-denominator-dense
[19:38:19] <greenbagels> int-e: i dunno im still trying to wrap my head over whether there are N/logN or N/2logN primes in [N,2N], to logN order
[19:41:08] <Z-module> aha, no PNT needed, you only need  SUM_{primes p} 1/p = infty, which is elementary.   https://math.stackexchange.com/questions/1013414/are-fractions-with-prime-numerator-and-denominator-dense
[19:41:39] <Z-module> unless they made a mistake
[19:41:59] <greenbagels> Z-module: wrong link?
[19:42:29] <greenbagels> you linked the same answer twice, and it uses PNT
[19:43:00] <Z-module> oops, sorry
[19:43:17] *** Joins: xkuru (~xkuru@user/xkuru)
[19:43:25] <int-e> greenbagels: you have ~ N/(2log N) numbers in [N,2N] and N/(N/(2 log N)) = 2 log N
[19:43:25] <Z-module> I think they have a mistake:   https://mathoverflow.net/questions/2118/density-of-a-subset-of-the-reals
[19:43:34] *** Joins: Guest53 (~textual@170.250.221.149)
[19:45:22] <greenbagels> time for Z-module to felx on the decade-old MO question
[19:45:25] <greenbagels> flex*
[19:45:42] <greenbagels> to be the hero we all need
[19:45:42] *** Joins: zava (~zava@ip5f5bdf0f.dynamic.kabel-deutschland.de)
[19:46:15] <Z-module> https://arxiv.org/pdf/1804.08068.pdf   goes much farther
[19:46:17] <int-e> Some of these results are clearly sufficient... https://en.wikipedia.org/wiki/Bertrand%27s_postulate#Better_results
[19:48:59] <Z-module> pretty neat: for any m and n both >= 2, and any a coprime to m, and b coprime to n the set  {p/q : positive primes p, q where p = a (mod m), q = b (mod n)}  is dense in the positive erals.
[19:50:05] <savask> Positive erals being defined precisely by the quotients of primes
[19:50:25] <int-e> in particular the PNT should be sufficient indeed; it ensures that for sufficiently large N, there's always a prime between N and (1+epsilon)N, and that means we can get within a factor of (1+epsilon) below and above any desired target
[19:51:28] *** Quits: xkuru (~xkuru@user/xkuru) (Quit: Unvirtualizing)
[19:51:30] <Z-module> yeah
[19:51:45] *** Quits: sebatron (~sebatron@dhcp-089-098-022-131.chello.nl) (Quit: Leaving)
[19:52:12] <rubiksdream> what about for positive a,b \in R, we want to find primes p,q s.t. p/q \in (a,b), iff a < p/q < b iff aq < p < bq, i.e. iff primes(aq) < primes(bq) iff 1 < primes(bq)/primes(aq), and then use some estimate for primes(.)
[19:53:03] <rubiksdream> bq/log(bq) * log(aq)/aq = (b/a)[log(aq)/log(bq)], and let q ->infinity
[19:54:50] <em> for any two rational a, b there is always a p/q with a < p/q < b and p and q both prime. Is that the assertion to be proved?
[19:55:11] <rubiksdream> that quotient is log(a) + log(q) / [log(b) + log(q)] , then q->infinity makes it go to one
[19:55:19] <rubiksdream> and (b/a) > 1 by assumpyion
[19:55:23] <rubiksdream> *assumption
[19:55:35] <rubiksdream> em the assertion was that {p/q : p,q prime} is dense in R
[19:55:39] <rubiksdream> which translates to that
[19:56:27] *** Quits: ormaaj (~ormaaj@2001:470:69fc:105::35ca) (Changing host)
[19:56:27] *** Joins: ormaaj (~ormaaj@user/ormaaj)
[19:56:32] *** Joins: revolve (~u0_a227@82-132-246-100.dab.02.net)
[19:57:17] *** Quits: Crassus (~Crassus@user/crassus) (Quit: Textual IRC Client: www.textualapp.com)
[19:59:08] <em> It seems very likey to be true because you can choose a prime q as large as you like so that the distance between aq and bq becomes larger and larger, and it is not possible that there could be arbitrarily long intervals in the reals that don't contain a prime p.
[19:59:36] <em> so just make q big enough so that there will be a aq < p < bq and then divide everything by q.
[20:01:30] *** Joins: midre (~midre@2601:547:901:40b0:abe8:5d35:280b:ed8f)
[20:01:35] *** Quits: brownorange (~brownoran@154.21.21.213) (Quit: Leaving)
[20:01:46] <rubiksdream> hmm
[20:01:53] <rubiksdream> actually yeah
[20:02:00] <rubiksdream> you dont even need primes(x) ~ x/log(x)
[20:02:06] <rubiksdream> cant you just use the infinitude of primes?
[20:02:10] <rubiksdream> and the fact they are at least distance one apart
[20:02:13] <rubiksdream> *two
[20:02:17] <int-e> rubiksdream: the powers of 2 are an infinite set
[20:02:25] <em> It might actually be true that there are 'arbitrarily long intervals in the reals that don't contain a prime" I don't quite mean that. What I mean is, you can definitely make an interval long enough that it must contain a prime, otherwise it would mean you had exhausted the primes greater than aq.
[20:02:37] <rubiksdream> yeah
[20:02:40] <rubiksdream> i get what you mean
[20:02:43] <rubiksdream> with fixed a and b
[20:02:44] <em> I sometimes have a little trouble with using words correctly.
[20:02:46] <rubiksdream> and q -> infinity
[20:02:54] <rubiksdream> eventually [aq,bq] will contain a prime
[20:03:01] <rubiksdream> *(aq,bq)
[20:03:09] <rubiksdream> because it tends to R..
[20:03:12] <int-e> rubiksdream: or, if you want to have the right overall density, you could still do stuff with intervals [2^k...(1+epsilon)2^k] that would miss most target fractions.
[20:03:19] *** Joins: oriba (~oriba@dynamic-078-055-053-193.78.55.pool.telefonica.de)
[20:03:30] <rubiksdream> oh wait no, i have the wrong picture
[20:03:32] <rubiksdream> em that doesnt work
[20:03:37] <int-e> So the full power of the PNT really comes in handy here.
[20:03:41] <rubiksdream> i was imagining aq -> -infinity for some reason
[20:03:53] <bildramer> the halting problem means you can't determine if an arbitrary program halts, but you can take a subset of them and do that no problem
[20:03:53] <rubiksdream> yeah
[20:04:45] <rubiksdream> em you cant just say because the length of [aq,bq] is increasing you are guaranteed to find a prime in it eventually
[20:04:47] <bildramer> some restrictions are better than others for doing that, I assume e.g. "max program length" would be bad, "max 2 nested loops" or something like that would be better
[20:05:08] <bildramer> is there something equivalent for supertasks?
[20:05:32] <em> rubiksdream: isn't it increasing without bound?
[20:05:42] <rubiksdream> em because you will be able to find some countable sequence increasing without bound which it misses
[20:05:50] <rubiksdream> *countable sequence of integers
[20:05:52] <rubiksdream> and for all you know
[20:05:55] <rubiksdream> that sequence could be the primes
[20:06:07] <rubiksdream> so you need to know something more about the spacing of primes
[20:06:12] <rubiksdream> and that comes down to results like PNT
[20:06:35] *** Quits: hanif (~hanif@gateway/tor-sasl/hanif) (Ping timeout: 244 seconds)
[20:07:35] <bildramer> like you have a machine with a "run x forever" ability, and it outputs special states like "output bit kept flipping forever" or something, and you judge that programmatically without needing to run the program
[20:08:28] *** Quits: Gustavo6046 (~Gustavo60@user/gustavo6046) (Quit: ZNC 1.8.2 - https://znc.in)
[20:10:13] <em> I don't seem to understand that.
[20:10:27] <int-e> em: "increasing without bound" isn't strong enough, see the powers of 2 example (which gives you fractions 1, 2, 1/2, 4, 1/4, 8, 1/8, ... and nothing else)
[20:10:59] <int-e> so there's no way to get arbitrarily close to 1/3, say.
[20:11:06] *** Quits: qunzhong_luxian (~qunzhong_@68.235.43.166) (Quit: Textual IRC Client: www.textualapp.com)
[20:14:58] <em> I was thinking you have two positive rational numbers, a, and b where a < b, if we choose a prime q  then d(qa, qb) > d(a,b) right?     And we can make d(qa, qb) as large as we like.
[20:17:12] <greenbagels> em: i'm pretty sure the primes have arbitrarily large gaps
[20:17:23] <em> Since there is an infinite number of primes, there must be some prime p > aq, so just choose q so that d(qa, qb) > d(qa, p)
[20:17:37] <int-e> n!+2 ... n!+n aren't prime for n>=2
[20:18:37] <greenbagels> ~syndeticity~
[20:18:52] <int-e> so that's a gap of length at least n (n-1 consecutive nonprimes) between consecutive primes
[20:19:28] *** Quits: Guest53 (~textual@170.250.221.149) (Quit: My MacBook has gone to sleep. ZZZzzz…)
[20:19:50] <em> It would still be the case that there isn't an N such that n > N then n isn't prime.
[20:20:01] <int-e> em: It's not enough that there are infinitely many primes. If it were, then the same argument should work for powers of 2, and the fractions of powers of 2 are not dense in R.
[20:21:16] <greenbagels> syndetic implies nonzero density right
[20:24:41] <greenbagels> hm no, upper density more like it
[20:25:12] <rubiksdream> em no. your argument just does not work , yes the goal is to find p,q prime s.t. aq < p < bq. Yes the interval [aq,bq] has length -> infinity as q -> infinity. Now argue from here, so what? Why does that mean we can find a prime in that interval
[20:26:02] <rubiksdream> as int-e just said, take [n!+2 , n! + n] for n >=2. This intervals length is growing to infinity as n->infinity. There are no primes in it
[20:27:18] *** Quits: node1 (~node1@user/node1) (Ping timeout: 268 seconds)
[20:27:19] *** Joins: quarterback (~quarterba@user/quarterback)
[20:27:34] *** Joins: Guest53 (~textual@170.250.221.149)
[20:34:20] *** Quits: rubiksdream (~a@cm61-15-252-242.hkcable.com.hk) (Quit: Leaving)
[20:35:48] *** Joins: rubiksdream (~a@cm61-15-252-242.hkcable.com.hk)
[20:38:24] *** Quits: pgp (~pgp@88.157.222.244) (Remote host closed the connection)
[20:41:29] *** Quits: SGautam (~SGautam@117.195.244.186) (Ping timeout: 268 seconds)
[20:44:16] *** Quits: bowlofeg1 (~bowlofegg@fedora/bowlofeggs) (Ping timeout: 272 seconds)
[20:45:33] *** Joins: bowlofeg1 (~bowlofegg@fedora/bowlofeggs)
[20:45:35] *** Joins: Guest9 (~Guest9@103.250.145.230)
[20:45:39] *** Joins: Gustavo6046 (~Gustavo60@user/gustavo6046)
[20:47:09] <mh_le> hey all
[20:48:05] *** Joins: Guest28 (~Guest28@50.38.64.32)
[20:48:24] *** Quits: expix (~1@amontpellier-652-1-118-205.w90-57.abo.wanadoo.fr) (Read error: Connection reset by peer)
[20:48:57] *** Quits: mbuf (~Shakthi@122.174.164.25) (Quit: Leaving)
[20:49:11] *** Joins: Hanii_ (~textual@2a00:23c5:c587:6d00:2d39:ea75:4d3:29de)
[20:49:17] *** Joins: expix (~1@amontpellier-652-1-118-205.w90-57.abo.wanadoo.fr)
[20:49:30] *** Quits: Hanii (~textual@2a00:23c5:c587:6d00:e424:4bc6:3ed8:741a) (Ping timeout: 268 seconds)
[20:54:49] *** Quits: Gustavo6046 (~Gustavo60@user/gustavo6046) (Quit: ZNC 1.8.2 - https://znc.in)
[20:59:23] *** Joins: Nickssen (~Nickssen@pc-25-120-47-190.cm.vtr.net)
[20:59:49] *** Joins: Gustavo6046 (~Gustavo60@user/gustavo6046)
[21:00:44] *** Quits: haykam1 (~haykam@static.100.2.21.65.clients.your-server.de) (Remote host closed the connection)
[21:00:56] *** Joins: haykam1 (~haykam@static.100.2.21.65.clients.your-server.de)
[21:01:41] *** Quits: haykam1 (~haykam@static.100.2.21.65.clients.your-server.de) (Remote host closed the connection)
[21:02:36] <em> rubiksdream: I'm not clinging to the idea that I'm right, but I'd like to continue arguing it so maybe I can see what's wrong with it.
[21:03:06] <em> rubiksdream: Can we agree that for all rational numbers, a, and prime numbers q, there will be a prime number p such that aq < p   ?
[21:03:24] <rubiksdream> yes
[21:03:36] <em> So then let the distance between aq and p be, D, that is d(aq, p) = D
[21:03:53] <em> Now what happens if we choose q such that d(aq, bq) > D ?
[21:05:09] <rubiksdream> so you've fixed q if you are calling d(aq,p) = D?
[21:05:40] <rubiksdream> and then you're asking what happens if we take some other q, call it q', so that d(aq',bq') > d(aq,p) = D?
[21:06:04] <rubiksdream> *some other prime
[21:07:34] <rubiksdream> ?
[21:08:10] <em> I am kind of seeing it as aq being fixed, and then the bq kind of traveling out in search of a p, which it must eventually reach, maybe that's my problem, because every time you pick a different q, aq goes to a different place also.
[21:08:42] <em> You're saying that the aq and bq can always hop around in just the right way so that even though the distance between them grows without bound it always lands in these prime-desert intervals.
[21:09:09] <rubiksdream> em that is exactly your problem
[21:09:13] <rubiksdream> its an easy mistake
[21:09:22] <rubiksdream> and that is what im saying
[21:09:33] <rubiksdream> they aren't really hopping, aq and bq are both moving to the right
[21:09:45] <rubiksdream> its just that you could avoid primes every time you shift the interval to the right
[21:09:47] <rubiksdream> its totally conceivable
[21:09:53] <rubiksdream> and without knowing something more about prime gaps
[21:09:56] <rubiksdream> you won't be able to say that isn
[21:10:00] <rubiksdream> *isnt possible
[21:10:45] *** Quits: revolve (~u0_a227@82-132-246-100.dab.02.net) (Read error: Connection reset by peer)
[21:10:58] *** Joins: chomwitt (~Pitsikoko@athedsl-16082.home.otenet.gr)
[21:11:07] *** Joins: hanif (~hanif@gateway/tor-sasl/hanif)
[21:13:08] *** Joins: humanBird2 (~humanBird@2603-8001-7003-5966-75c9-43c6-fd77-9901.res6.spectrum.com)
[21:13:28] *** humanBird2 is now known as humanbird
[21:13:53] <em> The PNT does say something about the gaps between primes, but it's kind of a probabilistic claim right?
[21:14:06] *** Quits: tusko (~yeurt@user/tusko) (Remote host closed the connection)
[21:14:48] *** Joins: tusko (~yeurt@user/tusko)
[21:16:23] *** Quits: Gustavo6046 (~Gustavo60@user/gustavo6046) (Quit: ZNC 1.8.2 - https://znc.in)
[21:17:40] *** Joins: SGautam (~SGautam@117.195.244.186)
[21:18:07] *** Joins: killsushi (~killsushi@user/killsushi)
[21:18:35] *** Joins: revolve (~u0_a227@82-132-244-113.dab.02.net)
[21:20:38] *** Joins: hyper (uid493485@id-493485.charlton.irccloud.com)
[21:23:18] <Nickssen> I am having a bit of trouble with substitutions with functions and the chain rule in diffeqs...
[21:23:25] *** Quits: xff0x (~xff0x@2001:1a81:537a:a200:78:fec8:4e97:b67d) (Ping timeout: 268 seconds)
[21:23:46] <Nickssen> could anybody help me tackle this a bit:   transform a cauchy euler equation into constant coefficients with the substitution t = ln x
[21:24:09] *** Joins: xff0x (~xff0x@2001:1a81:537a:a200:e696:8622:74d:d095)
[21:24:36] *** Joins: average (uid473595@user/average)
[21:25:57] *** Joins: haykam1 (~haykam@static.100.2.21.65.clients.your-server.de)
[21:25:57] *** Joins: son0p (~ff@181.136.122.143)
[21:28:04] *** Joins: cvmn (~caveman@gateway/tor-sasl/caveman)
[21:28:21] *** Joins: magla (~gelignite@55d471c8.access.ecotel.net)
[21:29:28] *** Quits: HisShadow (~HisShadow@188.170.79.148) (Ping timeout: 272 seconds)
[21:29:38] <susam> We will begin "Introduction to Analytic Number Theory" book club meeting now. Today's reading session is on quadratic residues now. Meeting link is available at https://offbeat.cc/#iant if you are interested to join. Thank you.
[21:29:41] *** Joins: am1985 (~am1985@47.151.133.248)
[21:29:53] *** Joins: HisShadow (~HisShadow@188.170.86.120)
[21:30:17] *** Quits: caveman (~caveman@gateway/tor-sasl/caveman) (Ping timeout: 244 seconds)
[21:30:56] *** Joins: Gustavo6046 (~Gustavo60@user/gustavo6046)
[21:30:59] <susam> Direct meeting link: https://bit.ly/spzoom2
[21:31:13] *** Quits: Samian (~Sami@2620:10d:c091:480::1:8d08) (Read error: Connection reset by peer)
[21:31:20] *** Quits: HisShadow (~HisShadow@188.170.86.120) (Client Quit)
[21:31:35] *** Joins: HisShadow (~HisShadow@188.170.86.120)
[21:32:48] *** Quits: Koen_ (~Koen@92.167.9.109.rev.sfr.net) (Quit: Leaving...)
[21:33:23] *** cvmn is now known as caveman
[21:36:05] *** Joins: cvmn (~caveman@gateway/tor-sasl/caveman)
[21:38:54] *** Joins: foobaz212 (~foobaz212@cpc84737-aztw28-2-0-cust8.18-1.cable.virginm.net)
[21:39:35] *** Quits: caveman (~caveman@gateway/tor-sasl/caveman) (Ping timeout: 244 seconds)
[21:41:44] *** Joins: node1 (~node1@user/node1)
[21:43:21] *** Joins: anovick (~anovick@IGLD-83-130-156-7.inter.net.il)
[21:44:23] <PJBoy> damn that's a sketchy link
[21:44:58] <Z-module> em, yes, it's a limit claim. The fact that, as we have known only for a few years go, that prime gaps of length at most 246 occur infinitely often does not in anyway contradict the PNT.
[21:45:01] *** Joins: Sheilong (uid293653@id-293653.charlton.irccloud.com)
[21:45:07] <Z-module> a few years now*
[21:47:26] *** Quits: HisShadow (~HisShadow@188.170.86.120) (Read error: Connection reset by peer)
[21:48:00] *** Joins: HisShadow (~HisShadow@188.170.87.197)
[21:48:53] *** Quits: Guest28 (~Guest28@50.38.64.32) (Quit: Client closed)
[21:49:32] *** Joins: noobly (~noobly@50.38.64.32)
[21:52:45] *** Joins: riv (~river@tilde.team/user/river)
[21:52:50] <em> Z-module: yeah and I aguess if the Twin Prime conjecture is true that also does not contradict the PNT. I was just wondering how you go from PNT means there is probably a prime in some interval, to there must be a prime in some interval.
[21:53:26] <rubiksdream> em i was using 'gaps' sort of colloquially
[21:53:34] *** Quits: oriba (~oriba@dynamic-078-055-053-193.78.55.pool.telefonica.de) (Quit: https://quassel-irc.org - Chat comfortably. Anywhere.)
[21:53:38] <rubiksdream> i can give you exactly how you go from the PNT to the statement we want to prove
[21:53:57] <em> Okay
[21:54:05] <em> How do you do it?
[21:54:32] <riv> hello
[21:54:40] *** Quits: Julian (~tos9@python/site-packages/Julian) (Quit: leaving)
[21:54:43] <em> riv: hi
[21:54:58] <rubiksdream> let a,b be positive reals, we want to find primes p,q s.t. a < p/q<b which is equivalent to finding p,q s.t. aq < p < bq, i.e. finding q (a prime) so that there is a prime in (aq,bq), let primes(n) = #primes <=n, we need primes(bq) - primes (aq) >=1 , since primes is integer valued this amounts to primes(bq) > primes(aq) iff primes(bq)/primes(aq)4
[21:54:59] *** cvmn is now known as caveman
[21:55:10] <rubiksdream> now, the PNT gives primes(n) ~ n/log(n)
[21:55:22] <rubiksdream> i.e. lim_n (primes(n)) / [n / log(n)] = 1
[21:55:45] *** Joins: Sherin (~Sherin@184.22.66.254)
[21:55:56] <rubiksdream> *iff primes(bq)/primes(aq) >= 1
[21:56:22] <rubiksdream> now using the PNT, its not hard to see lim_{q -> infinity} primes(bq)/primes(aq) = b/a
[21:56:27] <rubiksdream> and b/a is larger than one
[21:56:28] <rubiksdream> so we are done
[21:56:57] *** Joins: arseniiv (~arseniiv@136.169.234.138)
[21:57:27] *** Quits: tusko (~yeurt@user/tusko) (Remote host closed the connection)
[21:58:26] *** Quits: Guest53 (~textual@170.250.221.149) (Quit: My MacBook has gone to sleep. ZZZzzz…)
[21:59:40] *** Joins: tusko (~yeurt@user/tusko)
[22:00:04] *** Quits: Sherin (~Sherin@184.22.66.254) (K-Lined)
[22:00:45] *** Joins: q-q (uid501539@user/q-q)
[22:03:24] *** Joins: neiluj (~neiluj@2a01:e0a:1f2:d960:f4bc:474f:b9b2:b2a8)
[22:04:18] *** Quits: SGautam (~SGautam@117.195.244.186) (Ping timeout: 272 seconds)
[22:08:26] *** Quits: diophantoz (~dz@user/diophantoz) (Quit: leaving)
[22:08:56] *** Joins: DrMax_ (~DrMax@node-1w7jra94757g1xr881diguxjj.ipv6.telus.net)
[22:10:48] <loopspace> #primes could be a good channel
[22:11:26] *** Quits: xff0x (~xff0x@2001:1a81:537a:a200:e696:8622:74d:d095) (Ping timeout: 250 seconds)
[22:11:44] *** Joins: xff0x (~xff0x@185.65.135.235)
[22:12:48] *** Quits: node1 (~node1@user/node1) (Read error: No route to host)
[22:12:57] *** Joins: node1 (~node1@user/node1)
[22:14:30] *** Joins: diophantoz (~dz@user/diophantoz)
[22:15:05] *** Joins: crankslider (~slidercra@user/slidercrank)
[22:15:15] *** Quits: sebastianos (~sebastian@user/sebastianos) (Quit: ZNC 1.8.2 - https://znc.in)
[22:27:01] *** Quits: killsushi (~killsushi@user/killsushi) (Read error: Connection reset by peer)
[22:27:14] <neiluj> Hello! I'm looking for advice to tackle this problem. Say we’re working with 128-bit integers. Given such an integer n, the set of said integers is partitioned in sets B_i for i=0 to 128, such that x\in B_i if 2^i < n xor x <= 2^(i+1).
[22:27:27] <neiluj> I’m trying to find the elements in {B_i}_i which are closest (w.r.t xor metric) to an integer k, by visiting the minimum number of sets B_i.
[22:27:38] <neiluj> So we can compute the set B_j such that y\in B_j and return its elements. But which sets should we then look next?
[22:27:58] <neiluj> I saw someone taking X=n xor k, then alternate between visiting the B_i with i the index of the 1s in X in descending order, and the B_i with i the index of the 0s in X in ascending order. But I don’t see which observation leads to this algorithm.
[22:28:07] *** Joins: killsushi (~killsushi@cpef0f249442b03-cmf0f249442b00.cpe.net.cable.rogers.com)
[22:28:07] *** Quits: killsushi (~killsushi@cpef0f249442b03-cmf0f249442b00.cpe.net.cable.rogers.com) (Changing host)
[22:28:07] *** Joins: killsushi (~killsushi@user/killsushi)
[22:28:08] *** Joins: alystair (~alystair@user/alystair)
[22:30:59] *** Quits: dostoyevsky2 (~sck@user/dostoyevsky2) (Ping timeout: 256 seconds)
[22:31:15] *** Quits: xff0x (~xff0x@185.65.135.235) (Ping timeout: 268 seconds)
[22:31:36] *** Quits: derelict (~derelict@user/derelict) (Ping timeout: 268 seconds)
[22:32:56] *** Joins: xff0x (~xff0x@2001:1a81:537a:a200:e696:8622:74d:d095)
[22:33:11] *** Joins: [itchyjunk] (~itchyjunk@user/itchyjunk/x-7353470)
[22:34:40] *** Quits: foobaz212 (~foobaz212@cpc84737-aztw28-2-0-cust8.18-1.cable.virginm.net) (Quit: Client closed)
[22:38:52] *** Joins: oxum (~oxum@136.185.148.86)
[22:39:57] *** Quits: am1985 (~am1985@47.151.133.248) (Quit: This computer has gone to sleep)
[22:42:29] *** Quits: node1 (~node1@user/node1) (Ping timeout: 258 seconds)
[22:42:59] *** Quits: lydianchromatic (~lydianchr@user/zacts) (Quit: lydianchromatic)
[22:43:01] *** Quits: DrMax_ (~DrMax@node-1w7jra94757g1xr881diguxjj.ipv6.telus.net) (Remote host closed the connection)
[22:43:38] <arseniiv> hi again, do you think one can express this integral: ∫_ℝ gauss(μ, σ, x) sinc(x) dx — in terms of erf and other functions which can be found in NumPy?
[22:43:38] <arseniiv> where gauss(μ, σ, x) = sqrt(2 π σ²) exp(−(x − μ)² / 2 σ²) is the PDF of the normal distribution N[μ, σ] and sinc(x) = lim_(t→x) (sin t / t) is the usual one too
[22:43:38] <arseniiv> wolfram’s CAS can express this thing when μ = 0 but I can’t think of a way to try to do something with the general case, alas my integration skills are very bounded
[22:43:39] *** Quits: hendursaga (~weechat@user/hendursaga) (Ping timeout: 244 seconds)
[22:44:05] *** Quits: oxum (~oxum@136.185.148.86) (Ping timeout: 265 seconds)
[22:44:14] *** Joins: node1 (~node1@user/node1)
[22:45:43] *** Joins: gas51627 (uid91066@id-91066.brockwell.irccloud.com)
[22:49:08] *** Quits: tusko (~yeurt@user/tusko) (Remote host closed the connection)
[22:49:50] *** Joins: tusko (~yeurt@user/tusko)
[22:51:25] *** Joins: taiwanJizhan (~taiwanJiz@2404:0:8231:6f7:cda2:3e21:3cb5:5775)
[22:52:03] <taiwanJizhan> aha long time no see [itchyjunk] Z-module
[22:52:06] *** Joins: SGautam (~SGautam@117.195.244.186)
[22:52:59] *** Joins: Maturion (~Maturion@p200300ede71e92000b1d861ed8d096be.dip0.t-ipconnect.de)
[22:53:24] <rubiksdream> oh its taiwanJizhan!
[22:55:41] *** Quits: Gustavo6046 (~Gustavo60@user/gustavo6046) (Ping timeout: 265 seconds)
[22:55:59] *** Joins: dostoyevsky2 (~sck@user/dostoyevsky2)
[22:56:39] *** Joins: derelict (~derelict@user/derelict)
[22:56:43] <Z-module> hi taiwanJizhan !
[22:56:47] <Z-module> How are you doing?
[22:58:17] *** Joins: taiwanJizhan89 (~taiwanJiz@2404:0:8231:6f7:cda2:3e21:3cb5:5775)
[22:58:39] *** Joins: sebastianos (~sebastian@user/sebastianos)
[22:58:40] *** Quits: taiwanJizhan89 (~taiwanJiz@2404:0:8231:6f7:cda2:3e21:3cb5:5775) (Client Quit)
[22:59:09] *** Joins: taiwanJizhan96 (~taiwanJiz@2404:0:8231:6f7:cda2:3e21:3cb5:5775)
[22:59:20] *** Quits: haykam1 (~haykam@static.100.2.21.65.clients.your-server.de) (Remote host closed the connection)
[22:59:41] <node1>  Any timeseries database related channel anyone knows?
[22:59:47] *** Quits: taiwanJizhan96 (~taiwanJiz@2404:0:8231:6f7:cda2:3e21:3cb5:5775) (Client Quit)
[23:00:00] *** Joins: haykam1 (~haykam@static.100.2.21.65.clients.your-server.de)
[23:00:10] *** Quits: horseface_ (~horseface@37.120.234.252) (Quit: SPACE IS DONUTS!)
[23:00:34] *** Joins: taiwanJizhan25 (~taiwanJiz@2404:0:8231:6f7:cda2:3e21:3cb5:5775)
[23:02:02] *** Joins: Gustavo6046 (~Gustavo60@user/gustavo6046)
[23:02:04] *** Quits: taiwanJizhan (~taiwanJiz@2404:0:8231:6f7:cda2:3e21:3cb5:5775) (Ping timeout: 246 seconds)
[23:02:05] *** Quits: neiluj (~neiluj@2a01:e0a:1f2:d960:f4bc:474f:b9b2:b2a8) (Ping timeout: 268 seconds)
[23:02:20] *** Quits: bowlofeg1 (~bowlofegg@fedora/bowlofeggs) (Ping timeout: 272 seconds)
[23:02:37] *** Quits: Crescendo (~Crescendo@user/crescendo) (Read error: Connection reset by peer)
[23:02:58] *** taiwanJizhan25 is now known as taiwanJizhan
[23:03:57] *** Joins: bowlofeg1 (~bowlofegg@fedora/bowlofeggs)
[23:05:14] *** Joins: horseface (~horseface@82.221.128.46)
[23:05:35] *** Joins: neiluj (~neiluj@2a01:e0a:1f2:d960:4a9d:8d80:518:aa6e)
[23:06:24] *** Quits: taiwanJizhan (~taiwanJiz@2404:0:8231:6f7:cda2:3e21:3cb5:5775) (Quit: Client closed)
[23:06:43] *** Joins: Crescendo (~Crescendo@user/crescendo)
[23:07:01] *** Quits: HisShadow (~HisShadow@188.170.87.197) (Ping timeout: 268 seconds)
[23:08:58] *** Parts: Cr4ft (~jordan@2604:3d09:7179:8a00:8ac8:34a4:e45f:15f6) ()
[23:10:04] *** Joins: taiwanJizhan (~taiwanJiz@2404:0:8231:6f7:cda2:3e21:3cb5:5775)
[23:12:13] *** Joins: hendursaga (~weechat@user/hendursaga)
[23:12:25] *** Quits: Fohsap (~Muimi@60.20.219.101) (Read error: Connection reset by peer)
[23:13:59] *** Quits: quarterback (~quarterba@user/quarterback) (Quit: Leaving)
[23:14:53] *** Joins: Julian (~tos9@python/site-packages/Julian)
[23:15:00] *** Joins: P1RATEZ (piratez@user/p1ratez)
[23:15:22] *** Joins: HisShadow (~HisShadow@188.170.87.162)
[23:16:02] *** Quits: HisShadow (~HisShadow@188.170.87.162) (Client Quit)
[23:16:19] *** Quits: hanif (~hanif@gateway/tor-sasl/hanif) (Quit: quit)
[23:17:58] <taiwanJizhan> Hi. In this Taiwan semester (Feb to now) I spent much time studying Buddhism philosophical treatises. It is really interesting. There are many treatises provide various philosophical arguments to support authors' view on Buddha Dharma; and also are many treatises provide various philosophical arguments to show the mistakes in the opponents' view on Buddha Dharma.
[23:18:06] *** Joins: HisShadow (~HisShadow@188.170.87.162)
[23:18:50] <mh_le> hey Z-module
[23:19:11] *** Parts: savask (~savask@Powder/Developer/savask) ()
[23:19:12] <taiwanJizhan> I like study arguments and proofs. :-)
[23:21:02] *** Quits: tusko (~yeurt@user/tusko) (Remote host closed the connection)
[23:21:10] <em> taiwanJizhan: I do also.
[23:21:49] *** Joins: Samian (~Sami@2620:10d:c091:480::1:8d08)
[23:22:54] *** Joins: krjli (~user@dsl-lprbng12-54f9b9-129.dhcp.inet.fi)
[23:24:09] <rubiksdream> i think its kind of neat that a connected open set in C is simply connected if and only if a branch of the logarithm can be defined on it
[23:24:10] *** Joins: tusko (~yeurt@user/tusko)
[23:24:30] *** Quits: Gustavo6046 (~Gustavo60@user/gustavo6046) (Quit: ZNC 1.8.2 - https://znc.in)
[23:25:00] *** Joins: Gustavo6046 (~Gustavo60@user/gustavo6046)
[23:25:39] *** Quits: HisShadow (~HisShadow@188.170.87.162) (Ping timeout: 265 seconds)
[23:26:02] *** Joins: HisShadow (~HisShadow@188.170.78.239)
[23:26:40] *** Joins: Simplar (~Simplar@188.163.94.95)
[23:26:50] *** Joins: badtuple (~badtuple@185.207.164.170)
[23:27:28] *** Quits: tusko (~yeurt@user/tusko) (Remote host closed the connection)
[23:27:35] <badtuple> In the logic of graphs, if an edge is generated/implied by a rule, is there a name for that type of edge?
[23:27:43] <badtuple> Like a second-order edge or something?
[23:28:19] *** Joins: tusko (~yeurt@user/tusko)
[23:28:58] <mh_le> rubiksdream: :O
[23:30:50] *** Quits: bowlofeg1 (~bowlofegg@fedora/bowlofeggs) (Read error: Connection reset by peer)
[23:31:13] *** Joins: bowlofeg1 (~bowlofegg@fedora/bowlofeggs)
[23:31:30] <rubiksdream> mh_le :O indeed
[23:32:00] <rubiksdream> although there is a proof of this that kind of makes it not so :O and shows that in a way there was nothing special about the logarithm in this result
[23:32:03] *** Quits: tusko (~yeurt@user/tusko) (Remote host closed the connection)
[23:32:24] <mh_le> ah
[23:32:30] <rubiksdream> eh well not exactly
[23:32:38] <rubiksdream> exp being a covering map is relevant to this result
[23:32:44] <rubiksdream> so log is therefore related in a way
[23:32:51] <rubiksdream> but yeah, the essence of the proof is that exp is a covering map
[23:32:53] <em> rubiksdream: It's an interesting proof, the way that something which is true asymptotically squeezes the truth into a statement about (aq,bq).
[23:33:44] <taiwanJizhan> Hey...
[23:33:57] <taiwanJizhan> "Suggest me 2 math books. One you thought was excellent, one you thought was horrible. Don't tell me which is which."
[23:34:21] <em> taiwanJizhan: in the same subject or different subjects?
[23:34:25] <taiwanJizhan> Modified from here https://www.reddit.com/r/suggestmeabook/comments/il9cnu/suggest_me_2_books_one_you_thought_was_excellent/
[23:34:54] <taiwanJizhan> all subjects in math
[23:35:23] <em> There are many people who have failed to do the work of learning math by reading the texts, but very few people have taken the time and the care that I have taken to not read the BEST texts.
[23:36:43] *** Quits: mornfall (~mornfall@user/mornfall) (Excess Flood)
[23:36:51] *** Joins: mornfall (~mornfall@user/mornfall)
[23:36:58] *** Joins: tusko (~yeurt@user/tusko)
[23:37:16] *** Quits: saltydog (~root@user/eck) (Quit: PIRCH98:WIN 95/98/WIN NT:1.0 (build 1.0.1.1190))
[23:37:22] *** Quits: HisShadow (~HisShadow@188.170.78.239) (Read error: Connection reset by peer)
[23:37:29] *** Quits: revolve (~u0_a227@82-132-244-113.dab.02.net) (Read error: Connection reset by peer)
[23:38:29] *** Joins: eck (~root@user/eck)
[23:38:51] *** Quits: Simplar (~Simplar@188.163.94.95) (Quit: Going offline, see ya! (www.adiirc.com))
[23:40:31] *** Quits: riv (~river@tilde.team/user/river) (Quit: Leaving)
[23:40:52] *** Quits: tusko (~yeurt@user/tusko) (Read error: Connection reset by peer)
[23:40:56] *** Quits: anovick (~anovick@IGLD-83-130-156-7.inter.net.il) (Ping timeout: 268 seconds)
[23:41:20] *** Joins: HisShadow (~HisShadow@188.170.82.122)
[23:41:53] *** Quits: Nickssen (~Nickssen@pc-25-120-47-190.cm.vtr.net) (Quit: Client closed)
[23:48:40] *** Joins: ______GOD______ (~GOD@user/god/x-9778998)
[23:51:46] *** Quits: WeAreElectricity (~Bayes@user/bayes) (Quit: Connection closed)
[23:51:57] *** Quits: taiwanJizhan (~taiwanJiz@2404:0:8231:6f7:cda2:3e21:3cb5:5775) (Quit: Leaving)
[23:52:44] *** Quits: pavlushka (~pavlushka@user/pavlushka) (Remote host closed the connection)
[23:58:56] *** Joins: am1985 (~am1985@107.72.96.156)
[23:59:25] *** Joins: zeenk (~zeenk@2a02:2f04:a106:9600:82fb:aed9:ca9:38d3)
