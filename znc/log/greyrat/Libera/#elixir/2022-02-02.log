[00:00:08] *** Quits: Sgeo_ (~Sgeo@user/sgeo) (Ping timeout: 256 seconds)
[00:06:50] *** Quits: rgrinberg (~textual@2806:101e:7:6bed:e15c:b936:df3f:82e6) (Quit: My MacBook has gone to sleep. ZZZzzz…)
[00:19:13] *** Quits: fwg (~fwg@user/fwg) (Quit: .oO( zzZzZzz ...)
[00:23:10] *** Quits: mizi (~mizi@user/mizi) (Ping timeout: 250 seconds)
[00:35:14] *** Quits: ghenry (~ghenry@ghenry.plus.com) (Ping timeout: 268 seconds)
[00:39:15] *** Joins: Sgeo_ (~Sgeo@user/sgeo)
[00:39:56] *** Quits: Sgeo (~Sgeo@user/sgeo) (Ping timeout: 245 seconds)
[00:44:07] *** Joins: rgrinberg (~textual@2806:101e:7:6bed:e15c:b936:df3f:82e6)
[00:47:28] *** Joins: ghenry (~ghenry@ghenry.plus.com)
[00:48:18] *** Quits: sagax (~sagax_nb@user/sagax) (Ping timeout: 260 seconds)
[00:50:07] *** Joins: fwg (~fwg@user/fwg)
[00:56:14] *** Quits: czard_ (~czard@217.146.83.214) (Ping timeout: 256 seconds)
[00:59:17] *** Joins: Sgeo (~Sgeo@user/sgeo)
[01:01:07] *** Quits: Sgeo_ (~Sgeo@user/sgeo) (Ping timeout: 256 seconds)
[01:02:01] *** Joins: oscurochu (~oscurochu@097-096-050-227.res.spectrum.com)
[01:10:46] *** Quits: yassernasc (~yassernas@2804:29b8:505a:f33d:b018:fec8:a7e4:5428) (Remote host closed the connection)
[01:15:57] *** Quits: notapenguin (~ryu@187.3.254.107) (Quit: WeeChat 3.4)
[01:20:00] *** Quits: fwg (~fwg@user/fwg) (Quit: .oO( zzZzZzz ...)
[01:28:32] *** Quits: mahmutov_ (~mahmutov@37.155.27.205) (Ping timeout: 256 seconds)
[01:31:07] *** Quits: oscurochu (~oscurochu@097-096-050-227.res.spectrum.com) (Remote host closed the connection)
[01:35:54] *** Joins: fwg (~fwg@user/fwg)
[01:39:18] *** Joins: yauhsien_ (~yauhsien@118-167-40-21.dynamic-ip.hinet.net)
[01:43:46] *** Quits: yauhsien_ (~yauhsien@118-167-40-21.dynamic-ip.hinet.net) (Ping timeout: 250 seconds)
[01:51:10] *** Quits: fwg (~fwg@user/fwg) (Quit: .oO( zzZzZzz ...)
[02:02:04] *** Joins: odoood (~odoood@2601:c8:c000:c4e0::3)
[02:21:25] *** Quits: brw (~bas@haring.bas.sh) (Read error: Connection reset by peer)
[02:21:31] *** Quits: infinityfye (~infinityf@156.212.9.209) (Quit: Leaving)
[02:21:55] *** Joins: brw (~bas@haring.bas.sh)
[02:24:04] *** Quits: odoood (~odoood@2601:c8:c000:c4e0::3) (Ping timeout: 250 seconds)
[02:24:40] *** Quits: rgrinberg (~textual@2806:101e:7:6bed:e15c:b936:df3f:82e6) (Quit: My MacBook has gone to sleep. ZZZzzz…)
[02:42:16] *** Quits: livoreno (~livoreno@user/notzmv) (Ping timeout: 268 seconds)
[02:45:12] *** Quits: _w1ntermute_ (~sven@ipservice-092-219-123-235.092.219.pools.vodafone-ip.de) (Quit: Konversation terminated!)
[02:55:35] *** Quits: brauliobz (~manjaro-u@user/brauliobz) (Ping timeout: 256 seconds)
[03:04:00] *** Joins: brauliobz (~manjaro-u@user/brauliobz)
[03:14:48] *** Quits: triskite3__ (uid414920@id-414920.uxbridge.irccloud.com) (Quit: Connection closed for inactivity)
[03:19:23] *** Joins: oscurochu (~oscurochu@097-096-050-227.res.spectrum.com)
[03:31:51] *** Quits: trafficjam (~qubes@1.145.225.118) (Ping timeout: 256 seconds)
[03:40:47] *** Joins: trafficjam (~qubes@1.145.225.118)
[03:41:06] *** Joins: yauhsien_ (~yauhsien@118-167-40-21.dynamic-ip.hinet.net)
[03:44:23] *** Joins: fwg (~fwg@user/fwg)
[03:45:40] *** Quits: yauhsien_ (~yauhsien@118-167-40-21.dynamic-ip.hinet.net) (Ping timeout: 256 seconds)
[04:04:51] *** Joins: mmalter (~mmalter@88.126.10.237)
[04:05:08] <mmalter> Hello guys. What is the dot syntax with function calls?
[04:05:37] <rawtaz> https://stackoverflow.com/questions/18011784/why-are-there-two-kinds-of-functions-in-elixir
[04:05:40] <rawtaz> five seconds! :-)
[04:05:44] <mmalter> like this : index = generator.(project, version, Keyword.put(options, :formatter, formatter))
[04:06:02] <mmalter> damn
[04:06:05] <mmalter> you're good
[04:06:08] <mmalter> thanks
[04:06:08] <rawtaz> and the cool thing is that the answer there is by josevalim <3
[04:06:13] <rawtaz> haha just luck, but thanks :)
[04:14:36] *** Quits: damjan (~damjan@user/damjan) (Read error: Connection reset by peer)
[04:15:19] *** Joins: damjan (~damjan@user/damjan)
[04:19:12] *** Quits: srfsh (~srfsh@user/srfsh) (Ping timeout: 276 seconds)
[04:19:48] *** Joins: srfsh (~srfsh@user/srfsh)
[04:25:41] *** Quits: brauliobz (~manjaro-u@user/brauliobz) (Ping timeout: 256 seconds)
[04:37:33] <mmalter> also, how do you specify a particular version for a mix dependency? I have read that you can put a requirement from the Version module but == does not seem supported
[04:37:43] <mmalter> I'm on elixir 10.3
[04:38:00] <mmalter> I mean 1.10.3
[04:44:21] <mmalter> Well, let's not beat around the bush. I use elixir 10.3 yet mix deps.get keeps pulling ex_doc 0.28, a version that is not compatible with my version of elixir.
[04:44:46] <mmalter> I have :ex_doc, "~> 0.24" in my mix.exs
[04:51:06] <mmalter> Well I sort of sorted it by pulling the right tag from git but the behavior is weird no?
[04:52:04] *** Joins: rgrinberg (~textual@2806:101e:7:6bed:e15c:b936:df3f:82e6)
[05:01:57] *** Quits: james_lavin (~jameslavi@ool-457981b2.dyn.optonline.net) (Ping timeout: 256 seconds)
[05:12:09] *** Quits: trafficjam (~qubes@1.145.225.118) (Ping timeout: 256 seconds)
[05:14:10] *** Joins: trafficjam (~qubes@2001:8004:15a0:4c76:a33e:cf0d:3276:86a2)
[05:15:58] *** Joins: yauhsien_ (~yauhsien@118-167-40-21.dynamic-ip.hinet.net)
[05:23:36] <benwilson512> mmalter: just do "0.24.1"
[05:23:39] <benwilson512> or whatever the version is
[05:24:10] <benwilson512> if you specify a bare fully qualified version in the string, it will fetch that exact version and no other
[05:25:33] <benwilson512> mmalter: in your case you could probably just "~> 0.24.0" which will fetch the largest patch release within 0.24
[05:27:05] *** Quits: osp (~osp@84.19.72.107) (Quit: Leaving)
[05:57:25] *** Quits: jpaa (~jpaa@161.97.129.36) (Ping timeout: 240 seconds)
[05:59:02] *** Quits: rgrinberg (~textual@2806:101e:7:6bed:e15c:b936:df3f:82e6) (Quit: My MacBook has gone to sleep. ZZZzzz…)
[05:59:29] *** Joins: jpaa (~jpaa@161.97.129.36)
[06:01:31] *** Joins: rgrinberg (~textual@2806:101e:7:6bed:e15c:b936:df3f:82e6)
[06:07:20] *** Quits: gitgood (~gitgood@cpc104690-belf11-2-0-cust365.2-1.cable.virginm.net) (Quit: Leaving)
[06:16:56] *** Joins: livoreno (~livoreno@user/notzmv)
[06:19:22] *** Quits: yauhsien_ (~yauhsien@118-167-40-21.dynamic-ip.hinet.net) (Ping timeout: 250 seconds)
[06:30:21] *** Quits: Sgeo (~Sgeo@user/sgeo) (Ping timeout: 256 seconds)
[06:30:44] *** Joins: Sgeo (~Sgeo@user/sgeo)
[06:33:14] *** Quits: humbertowoody (~humbertow@187.202.255.156) (Ping timeout: 250 seconds)
[06:35:08] *** Joins: humbertowoody (~humbertow@187.202.255.156)
[06:39:44] *** Quits: humbertowoody (~humbertow@187.202.255.156) (Ping timeout: 250 seconds)
[06:40:54] *** Joins: humbertowoody (~humbertow@187.202.255.156)
[06:45:52] *** Quits: humbertowoody (~humbertow@187.202.255.156) (Ping timeout: 256 seconds)
[06:46:39] *** Joins: humbertowoody (~humbertow@187.202.255.156)
[06:55:51] *** Joins: james_lavin (~jameslavi@ool-457981b2.dyn.optonline.net)
[07:04:45] <mmalter> benwilson512: err idk I might have done something wrong mix does not accept the form "0.24.1"
[07:05:13] <mmalter> and if I use the pathological operator, I get bumped to 0.28, no matter the number I specify
[07:06:41] <mmalter> oh I see, I'm missing the "fully qualified" part
[07:06:51] <mmalter> err It finally clicked, thanks
[07:09:15] *** Joins: gabrielfdev (~gabrielfd@2804:1eb0:c0:f23c:841a:df56:e6cf:ca48)
[07:13:13] *** Quits: gabrielfdev (~gabrielfd@2804:1eb0:c0:f23c:841a:df56:e6cf:ca48) (Client Quit)
[07:18:06] *** Joins: goepsilongo (~goepsilon@cpe-74-73-86-74.nyc.res.rr.com)
[07:20:54] *** Quits: humbertowoody (~humbertow@187.202.255.156) (Ping timeout: 250 seconds)
[07:25:22] <benwilson512> mmalter: glad I could get you unstuck!
[07:35:25] *** Joins: humbertowoody (~humbertow@187.202.198.64)
[07:38:30] *** Quits: ur5us (~ur5us@2406:e002:6d58:d101:23b2:b738:8a21:f7ed) (Ping timeout: 260 seconds)
[07:39:58] *** Quits: humbertowoody (~humbertow@187.202.198.64) (Ping timeout: 250 seconds)
[07:40:45] *** Joins: thojanssens (~thojansse@49.230.65.10)
[07:41:17] *** Quits: thojanssens (~thojansse@49.230.65.10) (Client Quit)
[07:41:33] *** Joins: thojanssens (~thojansse@49.230.65.10)
[07:41:43] *** Quits: thojanssens (~thojansse@49.230.65.10) (Client Quit)
[07:53:04] *** Quits: oscurochu (~oscurochu@097-096-050-227.res.spectrum.com) (Remote host closed the connection)
[07:53:58] *** Joins: z3r0_ (~z3r0@2a02:2f0f:920b:b800:5dc:623a:de8b:3e0e)
[08:11:10] *** Joins: Sgeo_ (~Sgeo@user/sgeo)
[08:12:00] *** Quits: Sgeo (~Sgeo@user/sgeo) (Ping timeout: 256 seconds)
[08:13:19] *** Joins: mahmutov (~mahmutov@37.155.28.181)
[08:25:15] *** Joins: phaleth (~phaleth@user/phaleth)
[08:27:39] *** Quits: mahmutov (~mahmutov@37.155.28.181) (Ping timeout: 256 seconds)
[08:28:32] *** Quits: EdFletcher (~PKD@user/edfletcher) (Quit: Quit.)
[08:30:29] *** Quits: phaleth (~phaleth@user/phaleth) (Ping timeout: 256 seconds)
[08:32:43] *** Joins: phaleth (~phaleth@user/phaleth)
[08:39:01] *** Joins: goepsilongo_ (~goepsilon@cpe-74-73-86-74.nyc.res.rr.com)
[08:41:28] *** Quits: goepsilongo (~goepsilon@cpe-74-73-86-74.nyc.res.rr.com) (Ping timeout: 256 seconds)
[08:43:44] *** Joins: EdFletcher (~PKD@user/edfletcher)
[08:49:09] *** Joins: ur5us (~ur5us@2406:e002:6d58:d101:23b2:b738:8a21:f7ed)
[08:50:28] *** Joins: yauhsien_ (~yauhsien@118-167-40-21.dynamic-ip.hinet.net)
[08:54:56] *** Quits: yauhsien_ (~yauhsien@118-167-40-21.dynamic-ip.hinet.net) (Ping timeout: 250 seconds)
[09:08:12] *** Quits: Sgeo_ (~Sgeo@user/sgeo) (*.net *.split)
[09:08:12] *** Quits: hoppity (~hoppity@user/hoppity) (*.net *.split)
[09:08:12] *** Quits: TheCoffeMaker (~TheCoffeM@user/thecoffemaker) (*.net *.split)
[09:08:12] *** Quits: perrierjouet (~perrier-j@modemcable012.251-130-66.mc.videotron.ca) (*.net *.split)
[09:08:12] *** Quits: aidalgol (~aidalgol@user/aidalgol) (*.net *.split)
[09:08:12] *** Quits: hauleth (~hauleth@2.ip-145-239-81.eu) (*.net *.split)
[09:08:12] *** Quits: SlicerDicer68 (~SlicerDic@107-208-180-225.lightspeed.mdsnwi.sbcglobal.net) (*.net *.split)
[09:08:12] *** Quits: cursey (~cursey@user/cursey) (*.net *.split)
[09:08:13] *** Quits: mmalter (~mmalter@88.126.10.237) (*.net *.split)
[09:08:13] *** Quits: ds (~ds@user/ds) (*.net *.split)
[09:08:13] *** Quits: danieli (~danieli@user/danieli) (*.net *.split)
[09:08:13] *** Quits: sepow (~sepow@139.59.158.83) (*.net *.split)
[09:08:13] *** Quits: kvn (~weechat@user/kvn) (*.net *.split)
[09:08:13] *** Quits: havenwood (~havenwood@about/ruby/havenwood) (*.net *.split)
[09:08:13] *** Quits: beise (~beise@85.17.52.17) (*.net *.split)
[09:08:13] *** Quits: chgr (~chgr@static.152.235.203.116.clients.your-server.de) (*.net *.split)
[09:08:13] *** Quits: MononcQc (~ferd@li1968-139.members.linode.com) (*.net *.split)
[09:08:13] *** Quits: Heuristic (~Heuristic@108.61.216.82) (*.net *.split)
[09:08:13] *** Quits: koollman (~samson_t@user/koollman) (*.net *.split)
[09:08:13] *** Quits: _axx (~axx@static.246.43.203.116.clients.your-server.de) (*.net *.split)
[09:08:13] *** Quits: flynn (~mcbloch@user/flynn) (*.net *.split)
[09:08:13] *** Quits: phaleth (~phaleth@user/phaleth) (*.net *.split)
[09:08:13] *** Quits: z3r0_ (~z3r0@2a02:2f0f:920b:b800:5dc:623a:de8b:3e0e) (*.net *.split)
[09:08:13] *** Quits: james_lavin (~jameslavi@ool-457981b2.dyn.optonline.net) (*.net *.split)
[09:08:13] *** Quits: livoreno (~livoreno@user/notzmv) (*.net *.split)
[09:08:14] *** Quits: msch (sid28472@id-28472.tinside.irccloud.com) (*.net *.split)
[09:08:14] *** Quits: eproxus_____ (sid39465@id-39465.ilkley.irccloud.com) (*.net *.split)
[09:08:14] *** Quits: sa (sid1055@id-1055.tinside.irccloud.com) (*.net *.split)
[09:08:14] *** Quits: wink (fhtagn@user/wink) (*.net *.split)
[09:08:14] *** Quits: blambi (~blambi@c-c11e524e.011-113-67626725.bbcust.telenor.se) (*.net *.split)
[09:08:14] *** Quits: Bretzky (~Bretzky@167.99.239.126) (*.net *.split)
[09:08:14] *** Quits: norrland1 (~norrland@92-33-164-4.customers.ownit.se) (*.net *.split)
[09:08:14] *** Quits: rovanion (~rovanion@h-46-59-13-236.A163.priv.bahnhof.se) (*.net *.split)
[09:08:15] *** Quits: lvlinux (~ruel@150.136.4.160) (*.net *.split)
[09:08:15] *** Quits: lagash (lagash@lagash.shelltalk.net) (*.net *.split)
[09:08:15] *** Quits: sjm (5b6c6c128c@2604:bf00:561:2000::9c) (*.net *.split)
[09:08:15] *** Quits: sm2n (ae95cb1267@user/sm2n) (*.net *.split)
[09:08:15] *** Quits: brown121407 (1fd27a54a7@gnu/webmaster/smarton) (*.net *.split)
[09:08:15] *** Quits: adamcstephens (161730d29b@2604:bf00:561:2000::2d5) (*.net *.split)
[09:08:15] *** Quits: eein (35f97d3dbd@2604:bf00:561:2000::2a6) (*.net *.split)
[09:08:15] *** Quits: hwrd (aa272caead@2604:bf00:561:2000::137) (*.net *.split)
[09:08:15] *** Quits: gjnoonan (cb73e0a324@2604:bf00:561:2000::e) (*.net *.split)
[09:08:15] *** Quits: johnhamelink (3ae947b049@2604:bf00:561:2000::1b) (*.net *.split)
[09:08:15] *** Quits: kuzyn (beea2fef6b@2604:bf00:561:2000::8f) (*.net *.split)
[09:08:15] *** Quits: val (~val@limnoria/val) (*.net *.split)
[09:08:15] *** Quits: slothby (~JoshAshby@irc.isin.space) (*.net *.split)
[09:08:15] *** Quits: krjst (~krjst@2604:a880:800:c1::16b:8001) (*.net *.split)
[09:08:15] *** Quits: kawzeg (kawzeg@2a01:7e01::f03c:92ff:fee2:ec34) (*.net *.split)
[09:08:15] *** Quits: rhbvkleef (rolfscribb@pegasus.vankleef.me) (*.net *.split)
[09:08:15] *** Quits: H4Z3 (~H4ZE@165.227.36.29) (*.net *.split)
[09:08:15] *** Quits: drewolson (~drewolson@user/drewolson) (*.net *.split)
[09:08:15] *** Quits: bind4 (~bind@md-dingen.tilaa.cloud) (*.net *.split)
[09:08:15] *** Quits: dbohdan (~dbohdan@user/dbohdan) (*.net *.split)
[09:08:15] *** Quits: jeregrine (sid16248@id-16248.tinside.irccloud.com) (*.net *.split)
[09:08:15] *** Quits: Net (sid313265@id-313265.lymington.irccloud.com) (*.net *.split)
[09:08:15] *** Quits: bcardarella (sid1539@id-1539.uxbridge.irccloud.com) (*.net *.split)
[09:08:15] *** Quits: ericmj (sid16671@id-16671.tinside.irccloud.com) (*.net *.split)
[09:08:15] *** Quits: brycek (sid153199@id-153199.ilkley.irccloud.com) (*.net *.split)
[09:08:16] *** Quits: equil (~u@user/eq) (*.net *.split)
[09:08:16] *** Quits: waz0wski (~waz0wski@hrothgar.distortion.io) (*.net *.split)
[09:08:16] *** Quits: tristan (~tristan@198.57.4.33) (*.net *.split)
[09:08:16] *** Quits: antranigv (~antranigv@37.252.78.252) (*.net *.split)
[09:08:16] *** Quits: MuffinPimp (~mokou@box.mokou.io) (*.net *.split)
[09:08:16] *** Quits: ajb_ (~ajb@cupid.whatbox.ca) (*.net *.split)
[09:08:16] *** Quits: joshproehl_ (~quassel@user/joshproehl) (*.net *.split)
[09:08:16] *** Quits: niko (~niko@libera/staff/niko) (*.net *.split)
[09:08:16] *** Quits: mjs2600 (~mjs2600@c-24-91-3-49.hsd1.vt.comcast.net) (*.net *.split)
[09:08:16] *** Quits: GLaDER (~GLaDER@h-98-128-172-23.A785.priv.bahnhof.se) (*.net *.split)
[09:08:17] *** Quits: whk (~whk@ec2-13-244-150-184.af-south-1.compute.amazonaws.com) (*.net *.split)
[09:08:17] *** Quits: gamache (~gamache@gunyoki.net) (*.net *.split)
[09:08:17] *** Quits: JSharp (sid4580@id-4580.lymington.irccloud.com) (*.net *.split)
[09:08:17] *** Quits: rnewson (sid29161@couchdb/committer/rnewson) (*.net *.split)
[09:08:17] *** Quits: sasajuric (sid29842@id-29842.ilkley.irccloud.com) (*.net *.split)
[09:08:17] *** Quits: scrogson (sid346312@id-346312.ilkley.irccloud.com) (*.net *.split)
[09:09:02] *** Joins: aus1 (~thelounge@8.21.9.90)
[09:09:40] *** Quits: srfsh (~srfsh@user/srfsh) (Remote host closed the connection)
[09:09:56] *** Joins: srfsh (~srfsh@user/srfsh)
[09:11:32] *** Joins: pyrige (~perry@coffee-break.at)
[09:11:55] *** Quits: Perry (~perry@coffee-break.at) (Read error: Connection reset by peer)
[09:11:55] *** pyrige is now known as Perry
[09:12:25] *** Quits: goepsilongo_ (~goepsilon@cpe-74-73-86-74.nyc.res.rr.com) (Ping timeout: 256 seconds)
[09:12:25] *** Quits: aus (~thelounge@8.21.9.90) (Ping timeout: 256 seconds)
[09:12:25] *** aus1 is now known as aus
[09:13:51] *** Joins: goepsilongo (~goepsilon@2603-7000-ab00-62ed-f079-d115-4870-c583.res6.spectrum.com)
[09:16:56] *** Quits: notzmv (~zmv@user/notzmv) (Ping timeout: 268 seconds)
[09:21:15] *** Joins: tristan (~tristan@198.57.4.33)
[09:21:15] *** Joins: antranigv (~antranigv@37.252.78.252)
[09:21:15] *** Joins: MuffinPimp (~mokou@box.mokou.io)
[09:21:15] *** Joins: ajb_ (~ajb@cupid.whatbox.ca)
[09:21:15] *** Joins: joshproehl_ (~quassel@user/joshproehl)
[09:21:15] *** Joins: niko (~niko@libera/staff/niko)
[09:21:15] *** Joins: mjs2600 (~mjs2600@c-24-91-3-49.hsd1.vt.comcast.net)
[09:21:15] *** Joins: GLaDER (~GLaDER@h-98-128-172-23.A785.priv.bahnhof.se)
[09:21:15] *** Joins: whk (~whk@ec2-13-244-150-184.af-south-1.compute.amazonaws.com)
[09:21:15] *** Joins: gamache (~gamache@gunyoki.net)
[09:22:45] *** Joins: phaleth (~phaleth@user/phaleth)
[09:22:45] *** Joins: livoreno (~livoreno@user/notzmv)
[09:22:45] *** Joins: msch (sid28472@id-28472.tinside.irccloud.com)
[09:22:45] *** Joins: eproxus_____ (sid39465@id-39465.ilkley.irccloud.com)
[09:22:45] *** Joins: sa (sid1055@id-1055.tinside.irccloud.com)
[09:22:45] *** Joins: wink (fhtagn@user/wink)
[09:22:45] *** Joins: blambi (~blambi@c-c11e524e.011-113-67626725.bbcust.telenor.se)
[09:22:45] *** Joins: Bretzky (~Bretzky@167.99.239.126)
[09:22:45] *** Joins: norrland1 (~norrland@92-33-164-4.customers.ownit.se)
[09:22:45] *** Joins: rovanion (~rovanion@h-46-59-13-236.A163.priv.bahnhof.se)
[09:22:45] *** Joins: brown121407 (1fd27a54a7@gnu/webmaster/smarton)
[09:22:45] *** Joins: lvlinux (~ruel@150.136.4.160)
[09:22:45] *** Joins: lagash (lagash@lagash.shelltalk.net)
[09:22:45] *** Joins: sjm (5b6c6c128c@2604:bf00:561:2000::9c)
[09:22:45] *** Joins: sm2n (ae95cb1267@user/sm2n)
[09:22:45] *** Joins: adamcstephens (161730d29b@2604:bf00:561:2000::2d5)
[09:22:45] *** Joins: gjnoonan (cb73e0a324@2604:bf00:561:2000::e)
[09:22:45] *** Joins: hwrd (aa272caead@2604:bf00:561:2000::137)
[09:22:45] *** Joins: eein (35f97d3dbd@2604:bf00:561:2000::2a6)
[09:22:45] *** Joins: kuzyn (beea2fef6b@2604:bf00:561:2000::8f)
[09:22:45] *** Joins: johnhamelink (3ae947b049@2604:bf00:561:2000::1b)
[09:22:45] *** Joins: val (~val@limnoria/val)
[09:22:45] *** Joins: krjst (~krjst@2604:a880:800:c1::16b:8001)
[09:22:45] *** Joins: slothby (~JoshAshby@irc.isin.space)
[09:22:45] *** Joins: kawzeg (kawzeg@2a01:7e01::f03c:92ff:fee2:ec34)
[09:22:45] *** Joins: rhbvkleef (rolfscribb@pegasus.vankleef.me)
[09:22:45] *** Joins: H4Z3 (~H4ZE@165.227.36.29)
[09:22:45] *** Joins: drewolson (~drewolson@user/drewolson)
[09:22:45] *** Joins: bind4 (~bind@md-dingen.tilaa.cloud)
[09:22:45] *** Joins: dbohdan (~dbohdan@user/dbohdan)
[09:22:45] *** Joins: jeregrine (sid16248@id-16248.tinside.irccloud.com)
[09:22:45] *** Joins: Net (sid313265@id-313265.lymington.irccloud.com)
[09:22:45] *** Joins: bcardarella (sid1539@id-1539.uxbridge.irccloud.com)
[09:22:45] *** Joins: ericmj (sid16671@id-16671.tinside.irccloud.com)
[09:22:45] *** Joins: brycek (sid153199@id-153199.ilkley.irccloud.com)
[09:22:45] *** Joins: equil (~u@user/eq)
[09:22:45] *** Joins: waz0wski (~waz0wski@hrothgar.distortion.io)
[09:23:35] *** Joins: Sgeo_ (~Sgeo@user/sgeo)
[09:23:35] *** Joins: mmalter (~mmalter@88.126.10.237)
[09:23:35] *** Joins: hoppity (~hoppity@user/hoppity)
[09:23:35] *** Joins: TheCoffeMaker (~TheCoffeM@user/thecoffemaker)
[09:23:35] *** Joins: perrierjouet (~perrier-j@modemcable012.251-130-66.mc.videotron.ca)
[09:23:35] *** Joins: aidalgol (~aidalgol@user/aidalgol)
[09:23:35] *** Joins: hauleth (~hauleth@2.ip-145-239-81.eu)
[09:23:35] *** Joins: SlicerDicer68 (~SlicerDic@107-208-180-225.lightspeed.mdsnwi.sbcglobal.net)
[09:23:35] *** Joins: cursey (~cursey@user/cursey)
[09:23:35] *** Joins: ds (~ds@user/ds)
[09:23:35] *** Joins: danieli (~danieli@user/danieli)
[09:23:35] *** Joins: sepow (~sepow@139.59.158.83)
[09:23:35] *** Joins: kvn (~weechat@user/kvn)
[09:23:35] *** Joins: havenwood (~havenwood@about/ruby/havenwood)
[09:23:35] *** Joins: beise (~beise@85.17.52.17)
[09:23:35] *** Joins: chgr (~chgr@static.152.235.203.116.clients.your-server.de)
[09:23:35] *** Joins: MononcQc (~ferd@li1968-139.members.linode.com)
[09:23:35] *** Joins: Heuristic (~Heuristic@108.61.216.82)
[09:23:35] *** Joins: koollman (~samson_t@user/koollman)
[09:23:35] *** Joins: _axx (~axx@static.246.43.203.116.clients.your-server.de)
[09:23:35] *** Joins: flynn (~mcbloch@user/flynn)
[09:24:51] *** Joins: JSharp (sid4580@id-4580.lymington.irccloud.com)
[09:24:51] *** Joins: rnewson (sid29161@couchdb/committer/rnewson)
[09:24:51] *** Joins: sasajuric (sid29842@id-29842.ilkley.irccloud.com)
[09:24:51] *** Joins: scrogson (sid346312@id-346312.ilkley.irccloud.com)
[09:27:26] *** Quits: sa (sid1055@id-1055.tinside.irccloud.com) (Ping timeout: 250 seconds)
[09:28:56] *** Joins: sa (sid1055@id-1055.tinside.irccloud.com)
[09:30:25] *** Quits: rgrinberg (~textual@2806:101e:7:6bed:e15c:b936:df3f:82e6) (Quit: My MacBook has gone to sleep. ZZZzzz…)
[09:30:38] *** Joins: Sgeo (~Sgeo@user/sgeo)
[09:31:54] *** Quits: Sgeo_ (~Sgeo@user/sgeo) (Ping timeout: 256 seconds)
[09:32:45] *** Joins: rgrinberg (~textual@2806:101e:7:6bed:e15c:b936:df3f:82e6)
[09:33:03] *** Joins: phaleth_ (~user@user/phaleth)
[09:33:03] *** Quits: phaleth_ (~user@user/phaleth) (Client Quit)
[09:35:32] *** Quits: rgrinberg (~textual@2806:101e:7:6bed:e15c:b936:df3f:82e6) (Client Quit)
[09:35:53] *** Joins: oscurochu (~oscurochu@097-096-050-227.res.spectrum.com)
[09:37:39] *** Joins: rgrinberg (~textual@187.223.115.137)
[09:38:12] *** Quits: rgrinberg (~textual@187.223.115.137) (Client Quit)
[09:42:36] *** Joins: Sgeo_ (~Sgeo@user/sgeo)
[09:43:41] *** Quits: ur5us (~ur5us@2406:e002:6d58:d101:23b2:b738:8a21:f7ed) (Ping timeout: 245 seconds)
[09:45:17] *** Quits: Sgeo (~Sgeo@user/sgeo) (Ping timeout: 256 seconds)
[10:02:06] *** Quits: phaleth (~phaleth@user/phaleth) (Ping timeout: 250 seconds)
[10:04:08] *** Joins: phaleth (~phaleth@user/phaleth)
[10:05:19] *** Quits: phaleth (~phaleth@user/phaleth) (Client Quit)
[10:08:53] *** Joins: notzmv (~zmv@user/notzmv)
[10:09:29] <serafeim> hello friends
[10:10:22] *** Joins: phaleth (~phaleth@user/phaleth)
[10:18:05] *** Quits: phaleth (~phaleth@user/phaleth) (Quit: phaleth)
[10:44:54] *** Quits: oscurochu (~oscurochu@097-096-050-227.res.spectrum.com) (Remote host closed the connection)
[10:45:29] *** Joins: oscurochu (~oscurochu@097-096-050-227.res.spectrum.com)
[10:49:46] *** Quits: oscurochu (~oscurochu@097-096-050-227.res.spectrum.com) (Ping timeout: 250 seconds)
[10:52:17] *** Joins: yauhsien_ (~yauhsien@118-167-40-21.dynamic-ip.hinet.net)
[10:54:31] *** Joins: Ilyu (~quassel@166.215.82.79.rev.sfr.net)
[10:56:31] *** Joins: oscurochu (~oscurochu@097-096-050-227.res.spectrum.com)
[10:59:31] *** Quits: yauhsien_ (~yauhsien@118-167-40-21.dynamic-ip.hinet.net) (Ping timeout: 256 seconds)
[11:08:38] *** Joins: ur5us (~ur5us@203.86.198.200)
[11:12:47] *** Quits: trafficjam (~qubes@2001:8004:15a0:4c76:a33e:cf0d:3276:86a2) (Ping timeout: 252 seconds)
[11:13:39] *** Joins: voltone (~voltone@2a02-a453-5486-1-b454-4f39-2657-5f0e.fixed6.kpn.net)
[11:14:44] *** Joins: infinityfye (~infinityf@156.212.9.209)
[11:17:49] *** Joins: trafficjam (~qubes@1.145.225.118)
[11:19:13] *** Quits: Sgeo_ (~Sgeo@user/sgeo) (Read error: Connection reset by peer)
[11:27:01] *** Quits: goepsilongo (~goepsilon@2603-7000-ab00-62ed-f079-d115-4870-c583.res6.spectrum.com) (Ping timeout: 245 seconds)
[11:30:51] *** Joins: goepsilongo (~goepsilon@2603-7000-ab00-62ed-f079-d115-4870-c583.res6.spectrum.com)
[11:39:14] *** Quits: Tongir68 (~Donger@signiq.cust.bdr01.per02.wa.VOCUS.net.au) (Read error: Connection reset by peer)
[11:53:21] *** Quits: ur5us (~ur5us@203.86.198.200) (Ping timeout: 256 seconds)
[12:00:28] *** Joins: ur5us (~ur5us@2406:e002:6d58:d101:23b2:b738:8a21:f7ed)
[12:06:08] *** Quits: trafficjam (~qubes@1.145.225.118) (Ping timeout: 252 seconds)
[12:06:50] *** Quits: ur5us (~ur5us@2406:e002:6d58:d101:23b2:b738:8a21:f7ed) (Ping timeout: 260 seconds)
[12:08:06] *** Joins: trafficjam (~qubes@2001:8004:15a0:18e4:965f:d2f2:ae86:d7bd)
[12:16:47] *** Joins: gitgood (~gitgood@cpc104690-belf11-2-0-cust365.2-1.cable.virginm.net)
[12:48:13] *** Quits: jmcgnh (~jmcgnh@wikipedia/jmcgnh) (Ping timeout: 240 seconds)
[12:53:05] *** Joins: jmcgnh (~jmcgnh@wikipedia/jmcgnh)
[12:53:52] *** Joins: goepsilongo_ (~goepsilon@2603-7000-ab00-62ed-0577-8cef-87ec-adae.res6.spectrum.com)
[12:55:00] *** Quits: goepsilongo (~goepsilon@2603-7000-ab00-62ed-f079-d115-4870-c583.res6.spectrum.com) (Ping timeout: 250 seconds)
[12:56:59] *** Joins: yauhsien_ (~yauhsien@118-167-40-21.dynamic-ip.hinet.net)
[13:00:36] *** Joins: brauliobz (~manjaro-u@user/brauliobz)
[13:01:41] *** Quits: yauhsien_ (~yauhsien@118-167-40-21.dynamic-ip.hinet.net) (Ping timeout: 250 seconds)
[13:01:56] *** Quits: gitgood (~gitgood@cpc104690-belf11-2-0-cust365.2-1.cable.virginm.net) (Ping timeout: 250 seconds)
[13:05:14] *** Joins: ur5us (~ur5us@2406:e002:6d58:d101:23b2:b738:8a21:f7ed)
[13:13:38] *** Joins: czard (~czard@host-78-150-125-181.as13285.net)
[13:16:24] *** Quits: czard (~czard@host-78-150-125-181.as13285.net) (Client Quit)
[13:23:08] *** Quits: ur5us (~ur5us@2406:e002:6d58:d101:23b2:b738:8a21:f7ed) (Ping timeout: 252 seconds)
[13:39:58] *** Joins: czard (~czard@host-78-150-125-181.as13285.net)
[13:44:52] <serafeim> hello friends
[13:45:20] <serafeim> i'm using heroku ci to run my tests. the tests pass in my local env but when i run them through heroku ci it throws a unique constranti exception
[13:45:27] <serafeim> any idea what's going on >? 
[13:52:27] <czard> serafeim: hi, are you talking to a database at all? 
[13:52:43] <serafeim> yes
[13:53:02] <czard> where is that database running? you got some sort of docker-compose action going on or something? 
[13:53:45] <serafeim> no it's run on heroku ci
[13:54:31] <czard> without logs and codebase it could be a bunch of things :shrug: it could be some firewall / network glitch, you could have different environment variables, or you could have different software / version
[13:55:06] <czard> when you're running your tests locally, do they talk to the same Heroku db? 
[13:57:22] <serafeim> no they don't
[13:57:32] <serafeim> my understanding is that for some reason the db is not cleared between tests
[13:57:44] <serafeim> (on heroku). can i force this somehow ?
[14:03:49] <czard> Repo.cleanup() in your setup_all exit callback? https://stackoverflow.com/a/56835253
[14:06:43] *** Quits: trafficjam (~qubes@2001:8004:15a0:18e4:965f:d2f2:ae86:d7bd) (Quit: trafficjam)
[14:15:59] <serafeim> hm let me try it thanks
[14:16:20] <serafeim> `     ** (UndefinedFunctionError) function Foo.Repo.cleanup/0 is undefined or private`
[14:17:37] <Nicd> there's no such function in Ecto
[14:17:46] <Nicd> I suppose it was just an example
[14:18:01] <Nicd> you should show how you are running things in Heroku and how locally
[14:19:15] <serafeim> is there a way to reset my database to its original state between tests ? 
[14:26:32] <Nicd> your tests should be running in the sandbox -> they should not leave anything behind in the DB, thus no cleanup
[14:26:48] <serafeim> lol then why i get the constraint error in heroku ci  ?
[14:27:04] <Nicd> well you haven't shown any code or any configuration so I can't say
[14:29:30] <serafeim> i can't because that's not from a public probject
[14:31:01] <Nicd> well, you're doing something different on the CI than locally
[14:32:09] <serafeim> no i'm not
[14:32:15] <serafeim> the cfg is the same
[14:33:20] <serafeim> here the test cfg https://dpaste.com/5JAJ894PL
[14:34:00] <serafeim> db is 13.4 for both
[14:34:17] <serafeim> exception is thrown on the first db write of my test. so this test finds something
[14:37:47] <Nicd> how are you running it?
[14:39:42] <czard> can you paste the error message? 
[14:40:49] <serafeim> this is more or less https://dpaste.com/FKVFWUBU6
[14:42:38] <Nicd> are you inserting something with an explicit index (id)?
[14:42:56] *** Quits: oscurochu (~oscurochu@097-096-050-227.res.spectrum.com) (Remote host closed the connection)
[14:43:33] <serafeim> no
[14:44:41] <serafeim> as i said these tests pass normally in my pc
[14:47:58] <czard> what is the value of the DATABASE_URL environment variable? 
[14:48:07] <czard> locally and in your CI env
[14:48:25] <czard> I'm thinking you're actually not talking to the same database in both envs
[14:48:46] *** Quits: m5zs7k (aquares@web10.mydevil.net) (Ping timeout: 260 seconds)
[14:48:56] <serafeim> what do you mean
[14:48:58] <Nicd> how are you running the tests locally and in CI?
[14:49:42] <serafeim> using mix test
[14:49:43] *** Joins: m5zs7k (aquares@web10.mydevil.net)
[14:50:34] <czard> hm
[14:50:54] <czard> I think I'd like to know what is ends up being your db's hostname in your config 
[14:51:02] <czard> what branch of the if else you're getting into
[14:51:13] <czard> what ends up*
[14:51:23] <serafeim> i'm going to te proper branch or else it wouldnt work
[14:51:32] <serafeim> it connets to both dbs properly
[14:51:39] <czard> ok so you've got 2 dbs
[14:51:49] <czard> cool
[14:52:10] <serafeim> yes i've got 1 db for my local tests and another for the heroku isn't this expectd ?
[14:52:47] <Nicd> I meant the literal commands you are running, the env vars you are setting, etc
[14:52:48] <czard> that's completely up to you, and yes I guess it makes sense
[14:53:12] <Nicd> otherwise this is just a guessing game
[14:53:29] *** Joins: notapenguin (~ryu@2804:14d:5685:96c7:8b7a:60f:54fc:4777)
[14:54:13] <czard> serafeim: I guess you're using Postgres? what version are you using locally, and what version is running on Heroku?
[14:54:19] <serafeim> 13 to both cases
[15:01:04] <czard> you need to figure out what constraint you're violating on your Heroku db, and I think you also need to figure out if you've got that constraint at all locally 
[15:01:53] <serafeim> the db is dropped and created again and the migrations are run when tests are started
[15:02:15] <serafeim> i see this output to both my envs
[15:02:25] *** Joins: yassernasc (~yassernas@2804:29b8:505a:f33d:18fd:c3b6:aec4:7a02)
[15:02:34] <czard> it's possible that Heroku's db comes with slightly different configs that the one you spin up locally 
[15:02:46] <czard> you said your tests failed on Heroku, but not locally right?
[15:02:50] <serafeim> yes yes
[15:02:53] <czard> ok
[15:03:08] <serafeim> and only this test, that duplicate value constraint
[15:03:46] <czard> I'd say you've got a unique constraint on a hash index in your Heroku db (not sure what that is), but you don't have that constraint locally, which would explain why your tests fail on Heroku but not locally
[15:04:13] <serafeim> how is that possible? as i said both dbs are dropped and recreated each time tests are run
[15:05:12] <czard> also not sure how you'd get there too 
[15:05:19] <serafeim> and i *see* the output of the migration running
[15:05:33] * czard shrugs
[15:05:44] <serafeim> anyway thanks for the help
[15:05:48] <czard> no worries
[15:05:57] <serafeim> i'll if i can change the tests to avoid the dup values
[15:06:02] <czard> that constraint is applied as part of the migrations?
[15:07:08] <serafeim> yes of course `create unique_index(:transfers, [:hash, :hid], name: :unique_index_for_hash)`
[15:07:27] <czard> ok sorry that's that then 
[15:15:39] *** Joins: oscuroch_ (~oscurochu@097-096-050-227.res.spectrum.com)
[15:17:34] *** Quits: czard (~czard@host-78-150-125-181.as13285.net) (Ping timeout: 250 seconds)
[15:19:18] *** Joins: czard (~czard@host-78-150-125-181.as13285.net)
[15:23:47] <serafeim> what do you mean
[15:31:10] *** Quits: oscuroch_ (~oscurochu@097-096-050-227.res.spectrum.com) (Ping timeout: 256 seconds)
[15:35:57] <serafeim> any friends here using wallaby ? 
[15:36:09] <serafeim> https://github.com/elixir-wallaby/wallaby
[15:36:39] *** Joins: yauhsien_ (~yauhsien@118-167-40-21.dynamic-ip.hinet.net)
[15:46:03] *** Quits: yauhsien_ (~yauhsien@118-167-40-21.dynamic-ip.hinet.net) (Remote host closed the connection)
[15:47:37] *** Joins: yauhsien_ (~yauhsien@118-167-40-21.dynamic-ip.hinet.net)
[15:52:29] *** Quits: yauhsien_ (~yauhsien@118-167-40-21.dynamic-ip.hinet.net) (Ping timeout: 256 seconds)
[16:03:54] *** Joins: oscurochu (~oscurochu@097-096-050-227.res.spectrum.com)
[16:09:29] *** Quits: oscurochu (~oscurochu@097-096-050-227.res.spectrum.com) (Ping timeout: 256 seconds)
[16:18:58] <yassernasc> no, but i am very surprised about this project
[16:19:42] <yassernasc> i tought that only javascript could communicate with the Browser DOM on that way
[16:19:54] <serafeim> yassernasc: it uses the chromedriver and works fine
[16:20:01] <serafeim> thep roblem is that itt doesn't work good with windows
[16:20:04] <serafeim> but on linux it's solid
[16:25:13] <yassernasc> they already had a discussion about this: https://github.com/elixir-wallaby/wallaby/discussions/593
[16:25:32] <yassernasc> and a open issue https://github.com/elixir-wallaby/wallaby/issues/594
[16:25:37] <serafeim> yeas i know
[16:25:42] <serafeim> but no solution
[16:26:39] <yassernasc> sad
[16:28:46] <serafeim> i asked again let's see https://github.com/elixir-wallaby/wallaby/issues/594#issuecomment-1027916014
[16:36:17] *** Joins: humbertowoody (~humbertow@187.202.198.64)
[16:38:03] *** Quits: czard (~czard@host-78-150-125-181.as13285.net) (Ping timeout: 256 seconds)
[16:38:54] *** Joins: james_lavin (~jameslavi@ool-457981b2.dyn.optonline.net)
[16:39:45] *** Joins: czard (~czard@178.238.11.227)
[16:44:27] *** Joins: wootehfoot (~wootehfoo@user/wootehfoot)
[16:45:54] *** Joins: goepsilongo (~goepsilon@cpe-74-73-86-74.nyc.res.rr.com)
[16:48:50] *** Quits: goepsilongo_ (~goepsilon@2603-7000-ab00-62ed-0577-8cef-87ec-adae.res6.spectrum.com) (Ping timeout: 252 seconds)
[17:00:07] *** Joins: Rubyn (~Rubyn@user/rubyn)
[17:08:44] *** Joins: sagax (~sagax_nb@user/sagax)
[17:15:15] *** Quits: el_kevino (~mote@2604:a880:400:d1::901:5001) (Quit: WeeChat 3.4)
[17:18:37] *** Joins: herme5 (~mote@2604:a880:400:d1::901:5001)
[17:20:05] *** Joins: odoood (~odoood@c-71-204-80-147.hsd1.ga.comcast.net)
[17:20:32] *** herme5 is now known as el_kevino
[17:36:35] *** Joins: DNH (~DNH@2a02:8108:1100:16d8:7cff:235a:6ff3:c21a)
[17:37:27] <DNH> Hey there, I am trying to pull out a large amount of rows from the DB and I noticed that getting all of the rows out takes a lot of memory, so before running the query that is how it looks in my iex shell
[17:37:43] <DNH> div(:erlang.memory(:total), 1024 * 1024) 
[17:37:46] <DNH> > 51
[17:38:09] <DNH> After getting the around 277K rows out, I have `1241`
[17:38:59] <DNH> But if I only get one row out and then use `List.duplicate` to duplicate it 277K, `div(:erlang.memory(:total), 1024 * 1024)` only reports 61 
[17:39:12] *** Joins: phaleth (~user@user/phaleth)
[17:39:28] *** Quits: odoood (~odoood@c-71-204-80-147.hsd1.ga.comcast.net) (Remote host closed the connection)
[17:39:42] <DNH> So I am kinda confused why is it so high for getting 277K rows out but when duplicating the same Ecto.Schema struct 277K times it stays so flat and barely has an impact
[17:39:56] <benwilson512> DNH: List.duplicate will literally point to the same spot in memory for each cell
[17:39:57] *** Joins: odoood (~odoood@2601:c8:c000:c4e0::3)
[17:40:07] <DNH> OHHHH
[17:40:08] <benwilson512> so it isn't the same as constructing a list with 277k unique values
[17:41:48] <DNH> Does it still point to the same spot in memory if I map it and update a single field in each struct?
[17:42:16] <benwilson512> not exactly no, although they are still persistent data structures so it won't be 100% the same
[17:42:17] <benwilson512> however
[17:42:42] <benwilson512> I'd start by just using `:erts_debug.size` on one of the real items from the DB
[17:42:51] <benwilson512> do note that that gives you an answer in _words_ not bytes
[17:43:25] <DNH> THanks I did not know about that one
[17:43:34] <DNH> It gives me 491 (words) back
[17:45:46] <DNH> How can I convert words to bytes? 
[17:46:32] <DNH> so on 64bit machine it is 8Bytes 
[17:46:43] <benwilson512> yup
[17:46:46] <benwilson512> just multiply by 8
[17:46:55] <benwilson512> so a given row is ~2.4k
[17:47:53] <DNH> So yeah div(491 * 8 * 277000, 1024 * 1024) gives me around `1040`
[17:48:08] <DNH> okay that makes sense now
[17:48:59] <DNH> Thanks!
[17:49:22] *** Quits: damjan (~damjan@user/damjan) (Quit: bye)
[17:49:40] *** Quits: odoood (~odoood@2601:c8:c000:c4e0::3) (Ping timeout: 250 seconds)
[17:50:07] <benwilson512> yup!
[17:53:40] *** Joins: yauhsien_ (~yauhsien@118-167-40-21.dynamic-ip.hinet.net)
[17:57:54] *** Quits: yauhsien_ (~yauhsien@118-167-40-21.dynamic-ip.hinet.net) (Ping timeout: 250 seconds)
[17:58:24] *** Joins: damjan (~damjan@user/damjan)
[18:03:16] *** Quits: czard (~czard@178.238.11.227) (Ping timeout: 245 seconds)
[18:05:18] *** Joins: czard (~czard@185.169.233.227)
[18:12:42] *** Joins: odoood (odoood@gateway/vpn/protonvpn/odoood)
[18:16:19] *** Quits: phaleth (~user@user/phaleth) (Quit: WeeChat 2.8)
[18:16:43] *** Joins: phaleth (~user@user/phaleth)
[18:19:17] *** Quits: hoppity (~hoppity@user/hoppity) (Remote host closed the connection)
[18:33:01] *** Joins: infinity_fye (~infinityf@156.212.9.209)
[18:33:23] *** Quits: infinity_fye (~infinityf@156.212.9.209) (Client Quit)
[18:36:49] *** Quits: infinityfye (~infinityf@156.212.9.209) (Ping timeout: 256 seconds)
[18:37:43] *** Joins: Sgeo (~Sgeo@user/sgeo)
[18:56:53] *** Joins: hoppity (~hoppity@66.222.130.38)
[18:56:53] *** Quits: hoppity (~hoppity@66.222.130.38) (Changing host)
[18:56:53] *** Joins: hoppity (~hoppity@user/hoppity)
[19:00:08] *** Joins: rgrinberg (~textual@2806:101e:7:6bed:e15c:b936:df3f:82e6)
[19:01:10] *** Quits: hoppity (~hoppity@user/hoppity) (Ping timeout: 250 seconds)
[19:01:39] *** Quits: rnewson (sid29161@couchdb/committer/rnewson) (Ping timeout: 264 seconds)
[19:01:49] *** Quits: guan (sid222713@id-222713.ilkley.irccloud.com) (Ping timeout: 240 seconds)
[19:04:13] *** Quits: gmc (sid58314@id-58314.ilkley.irccloud.com) (Ping timeout: 240 seconds)
[19:08:22] *** Joins: guan (sid222713@ilkley.irccloud.com)
[19:10:08] *** Joins: hoppity (~hoppity@66.222.130.38)
[19:10:08] *** Quits: hoppity (~hoppity@66.222.130.38) (Changing host)
[19:10:08] *** Joins: hoppity (~hoppity@user/hoppity)
[19:10:14] *** Joins: gmc (sid58314@ilkley.irccloud.com)
[19:11:06] *** Joins: ozoned (~odoood@2601:c8:c000:c4e0::3)
[19:11:46] *** Joins: rnewson (sid29161@couchdb/committer/rnewson)
[19:13:50] *** Quits: odoood (odoood@gateway/vpn/protonvpn/odoood) (Ping timeout: 260 seconds)
[19:15:08] *** Joins: mizi (~mizi@user/mizi)
[19:27:44] *** Quits: notapenguin (~ryu@2804:14d:5685:96c7:8b7a:60f:54fc:4777) (Quit: WeeChat 3.4)
[19:30:50] *** Quits: yassernasc (~yassernas@2804:29b8:505a:f33d:18fd:c3b6:aec4:7a02) (Remote host closed the connection)
[19:31:09] *** Joins: yassernasc (~yassernas@2804:29b8:505a:f33d:18fd:c3b6:aec4:7a02)
[19:31:19] *** Joins: oscurochu (~oscurochu@097-096-050-227.res.spectrum.com)
[19:34:55] *** Joins: mahmutov (~mahmutov@37.155.28.181)
[19:35:32] <Ankhers> Would anyone be able to share under which circumstances postgrex connection state, specifically the :postgres key, changes to :transaction? I'm trying to track down an intermittent issue when using the ecto sql sandbox with cockroachdb. It seems to be expecting to be :idle at that point in the call.
[19:35:45] *** Quits: yassernasc (~yassernas@2804:29b8:505a:f33d:18fd:c3b6:aec4:7a02) (Ping timeout: 256 seconds)
[19:35:50] *** Quits: oscurochu (~oscurochu@097-096-050-227.res.spectrum.com) (Ping timeout: 250 seconds)
[19:42:33] *** Quits: wootehfoot (~wootehfoo@user/wootehfoot) (Ping timeout: 256 seconds)
[19:43:44] *** Quits: fwg (~fwg@user/fwg) (Ping timeout: 252 seconds)
[19:44:08] *** Quits: damjan (~damjan@user/damjan) (Quit: bye)
[19:45:36] *** Joins: fwg (~fwg@user/fwg)
[19:54:46] *** Joins: robijntje (~robijntje@054-055-158-163.dynamic.caiway.nl)
[19:55:55] *** Joins: notapenguin (~ryu@187.3.254.107)
[20:01:47] *** Quits: robijntje (~robijntje@054-055-158-163.dynamic.caiway.nl) (Quit: Iridium IRC Client)
[20:02:17] *** Joins: yassernasc (~yassernas@2804:29b8:505a:f33d:18fd:c3b6:aec4:7a02)
[20:04:00] *** Quits: hoppity (~hoppity@user/hoppity) (Remote host closed the connection)
[20:04:59] *** Joins: hoppity (~hoppity@66.222.130.38)
[20:04:59] *** Quits: hoppity (~hoppity@66.222.130.38) (Changing host)
[20:04:59] *** Joins: hoppity (~hoppity@user/hoppity)
[20:06:55] *** Quits: yassernasc (~yassernas@2804:29b8:505a:f33d:18fd:c3b6:aec4:7a02) (Ping timeout: 256 seconds)
[20:07:40] *** Joins: wootehfoot (~wootehfoo@user/wootehfoot)
[20:14:43] *** Joins: damjan (~damjan@user/damjan)
[20:18:43] *** Joins: hoppity_ (~hoppity@66.222.130.38)
[20:18:43] *** Quits: hoppity (~hoppity@user/hoppity) (Read error: Connection reset by peer)
[20:36:11] *** Quits: ozoned (~odoood@2601:c8:c000:c4e0::3) (Ping timeout: 245 seconds)
[20:37:41] *** Joins: yassernasc (~yassernas@177.37.144.34)
[20:42:03] *** Quits: yassernasc (~yassernas@177.37.144.34) (Ping timeout: 256 seconds)
[20:49:25] *** Quits: ghenry (~ghenry@ghenry.plus.com) (Ping timeout: 256 seconds)
[20:51:26] *** Joins: yassernasc (~yassernas@ec2-54-87-145-249.compute-1.amazonaws.com)
[20:54:06] *** Quits: james_lavin (~jameslavi@ool-457981b2.dyn.optonline.net) (Ping timeout: 245 seconds)
[20:57:26] *** Joins: gitgood (~gitgood@cpc104690-belf11-2-0-cust365.2-1.cable.virginm.net)
[20:58:36] <rawtaz> TIL gitignore.io
[21:01:59] *** Quits: rgrinberg (~textual@2806:101e:7:6bed:e15c:b936:df3f:82e6) (Quit: My MacBook has gone to sleep. ZZZzzz…)
[21:02:04] *** Joins: ghenry (~ghenry@ghenry.plus.com)
[21:06:52] *** Joins: _w1ntermute_ (~sven@ip1f12840f.dynamic.kabel-deutschland.de)
[21:11:17] *** Joins: thojanssens (~thojansse@49.230.65.10)
[21:15:04] *** Quits: _w1ntermute_ (~sven@ip1f12840f.dynamic.kabel-deutschland.de) (Ping timeout: 250 seconds)
[21:16:03] *** Quits: yassernasc (~yassernas@ec2-54-87-145-249.compute-1.amazonaws.com) (Ping timeout: 256 seconds)
[21:18:45] <hoppity_> Hey guys, on Ecto's on_delete option, do you use nilify_all or delete_all? It looks to me like nilify_all is the safer option
[21:19:04] *** hoppity_ is now known as hoppity
[21:19:04] *** Quits: hoppity (~hoppity@66.222.130.38) (Changing host)
[21:19:04] *** Joins: hoppity (~hoppity@user/hoppity)
[21:19:35] <Nicd> that totally depends on what you need
[21:24:04] <hoppity> Nicd: I have relations that look like this:  Group -> Group Member -> Group Member Posts.  I would like that if a Group is deleted all its Group Members and Group Member Posts get deleted too.
[21:24:33] <thojanssens> hoppity, define safer. if you're not sure what you're doing, then 'safer' makes sense. otherwise, just do what is appropriate
[21:25:17] <thojanssens> hoppity, then use delete_all?
[21:25:23] <hoppity> thojanssens: by safer I mean that nilifying at least keeps the data in the database where you can go back and just add the _id back in case of disaster. On the other hand delete_all literally deletes the records
[21:25:59] <hoppity> thojanssens: yes I can use delete_all but doesn't nilify kind of achieve the same thing? but without actually deleting the data?
[21:26:09] <thojanssens> hoppity, ok so it's not a question related to Elixir. the question is: soft delete vs hard delete
[21:26:14] <thojanssens> and that's a big debate for some
[21:26:29] <hoppity> yeah so I am asking for opinions
[21:26:38] <hoppity> to influence my own opinion
[21:27:03] <thojanssens> yeah I just want to make sure we're on the same page
[21:27:06] <thojanssens> I tend to hard delete personally
[21:27:35] <hoppity> May I ask why you prefer that option? I imagine to save space?
[21:29:49] <thojanssens> hoppity, you could also inadvertently return deleted entries. so you have additional work to handle soft deletes. not free. in most cases I don't see why I would need to keep the data.
[21:30:03] <thojanssens> I use nilify a lot though, but not for soft deletes
[21:30:19] <hoppity> thanks, fair enough
[21:31:53] <KettleMan> Sometimes, depending on how much data is involved with both storing, deleting, etc. I can go down the route of some sort of 'hard_delete' table to store the back up.
[21:32:19] <hoppity> KettleMan: interesting approach
[21:32:26] <hoppity> I like it
[21:33:00] *** Joins: yauhsien_ (~yauhsien@118-167-40-21.dynamic-ip.hinet.net)
[21:37:35] *** Quits: yauhsien_ (~yauhsien@118-167-40-21.dynamic-ip.hinet.net) (Ping timeout: 256 seconds)
[21:38:09] *** Joins: james_lavin (~jameslavi@ool-457981b2.dyn.optonline.net)
[21:42:24] *** Joins: ozoned (~odoood@2601:c8:c000:c4e0::3)
[21:43:48] *** ozoned is now known as odoood
[21:51:29] *** Quits: DNH (~DNH@2a02:8108:1100:16d8:7cff:235a:6ff3:c21a) (Quit: My MacBook has gone to sleep. ZZZzzz…)
[21:51:45] *** Joins: oscurochu (~oscurochu@097-096-050-227.res.spectrum.com)
[22:05:08] *** Quits: fwg (~fwg@user/fwg) (Quit: .oO( zzZzZzz ...)
[22:10:55] *** Joins: DNH (~DNH@2a02:8108:1100:16d8:7cff:235a:6ff3:c21a)
[22:12:10] *** Joins: rgrinberg (~textual@2806:101e:7:6bed:e15c:b936:df3f:82e6)
[22:15:53] *** Quits: thojanssens (~thojansse@49.230.65.10) (Quit: Leaving)
[22:36:20] *** Quits: hoppity (~hoppity@user/hoppity) (Remote host closed the connection)
[22:42:11] *** Quits: czard (~czard@185.169.233.227) (Ping timeout: 256 seconds)
[22:42:23] *** Joins: czard (~czard@185.169.233.227)
[22:52:25] *** Joins: hoppity (~hoppity@66.222.130.38)
[22:52:25] *** Quits: hoppity (~hoppity@66.222.130.38) (Changing host)
[22:52:25] *** Joins: hoppity (~hoppity@user/hoppity)
[22:53:29] *** Quits: oscurochu (~oscurochu@097-096-050-227.res.spectrum.com) (Ping timeout: 252 seconds)
[22:56:05] *** Joins: james_la1 (~jameslavi@ool-457981b2.dyn.optonline.net)
[22:57:42] *** Quits: hoppity (~hoppity@user/hoppity) (Ping timeout: 256 seconds)
[22:58:37] *** Quits: james_lavin (~jameslavi@ool-457981b2.dyn.optonline.net) (Ping timeout: 256 seconds)
[23:04:09] *** Joins: hoppity (~hoppity@66.222.130.38)
[23:04:09] *** Quits: hoppity (~hoppity@66.222.130.38) (Changing host)
[23:04:09] *** Joins: hoppity (~hoppity@user/hoppity)
[23:07:38] *** Joins: fwg (~fwg@user/fwg)
[23:15:03] *** Quits: Ilyu (~quassel@166.215.82.79.rev.sfr.net) (Ping timeout: 256 seconds)
[23:19:27] *** Joins: Ilyu (~quassel@166.215.82.79.rev.sfr.net)
[23:25:34] *** Joins: ur5us (~ur5us@2406:e002:6d58:d101:2b70:9bf7:d290:b791)
[23:27:06] *** Quits: joshproehl_ (~quassel@user/joshproehl) (Quit: Disappearing act!)
[23:27:18] *** Joins: joshproehl_ (~quassel@user/joshproehl)
[23:30:36] *** Quits: joshproehl_ (~quassel@user/joshproehl) (Client Quit)
[23:30:50] *** Joins: joshproehl (~quassel@user/joshproehl)
[23:31:17] *** Quits: hoppity (~hoppity@user/hoppity) (Remote host closed the connection)
[23:40:10] *** Joins: hoppity (~hoppity@66.222.130.38)
[23:40:10] *** Quits: hoppity (~hoppity@66.222.130.38) (Changing host)
[23:40:10] *** Joins: hoppity (~hoppity@user/hoppity)
[23:45:23] *** Quits: hoppity (~hoppity@user/hoppity) (Remote host closed the connection)
