[00:00:26] <tirnanog> it even seems to respect includes. impressive.
[00:00:56] <Earnestly> I selected it because it was 'official', which hopefully means it's complete
[00:01:09] <Earnestly> There were loads of ad-hoc parsers using shell scripts and one even using zsh
[00:01:55] *** Joins: sublim20 (~sublim20@user/sublim20)
[00:03:32] *** Quits: tobybl (~tobybl@248.195.115.87.dyn.plus.net) (Ping timeout: 240 seconds)
[00:06:27] *** Quits: ano (~ano@user/ano) (Ping timeout: 276 seconds)
[00:09:38] *** Joins: ano (~ano@user/ano)
[00:10:41] <uuidNuni1> Abdullah: you can cp your nginx.conf as nginx.conf.tmp and replace that root path with __rootpath__ , and then when you need to update that , do : sed 's|__rootpath__|somepath|g' nginx.conf.tmp > nginx.conf
[00:11:07] <phy1729> If you're doing that, you should setup config management
[00:12:01] <uuidNuni1> yeah, for dynamic update conf. i always do like that :P
[00:13:47] <uuidNuni1> e.g. : i update dnsmasq.conf.tmp with sed to generate a dnsmasq.conf dynamicly
[00:14:37] <Abdullah> uuidNuni1: so how to replace that root path with __rootpath__?
[00:14:54] <Abdullah> its inside a script...
[00:14:58] *** Quits: NoelFlantier3 (~Hubert@static.189.244.201.195.clients.your-server.de) (Remote host closed the connection)
[00:15:09] <uuidNuni1> you create a tmp file first
[00:15:22] *** Joins: NoelFlantier3 (~Hubert@static.189.244.201.195.clients.your-server.de)
[00:15:32] <uuidNuni1> nginx.conf.template :)
[00:16:42] <Abdullah> cp realfile tmp_file. and then open it with vim ;-(
[00:16:53] <uuidNuni1> replace all the stuff you want to update with some mark : e.g.  __rootpath__ ,  __servername__ , __timeout__ , name it whatever you like
[00:18:06] <uuidNuni1> and update them with sed at once in script: sed 's|mark|repl|g ; s|mark2|repl|g ; ....'
[00:18:23] <FIlystyn> how can I change argument that goes at start ?
[00:18:32] *** Quits: sumaro (~sumaro@88.244.93.37) (Ping timeout: 256 seconds)
[00:18:35] <FIlystyn> $3
[00:18:39] <FIlystyn> possible?
[00:18:41] <uuidNuni1> FIlystyn: shift 2
[00:18:49] <FIlystyn> wut
[00:19:04] <tirnanog> can you rephrase the question? what about $3?
[00:19:13] <FIlystyn> I want to change it's value
[00:19:18] <FIlystyn> 3= ?
[00:19:30] <FIlystyn> Can I even do that ?
[00:19:41] <tirnanog> no. it can't be addressed directly.
[00:19:43] <tirnanog> but ...
[00:20:12] <tirnanog> args=("$@"); args[2]=... could be a possibility. otherwise you would have to some slicing and dicing with the set command.
[00:20:26] *** Joins: mooz (~none@23.254.112.158)
[00:20:31] <tirnanog> might just be simpler to convert to an array first.
[00:21:48] <phy1729> you can arg1=$1 arg2=$2; shift 3; set -- "$arg1" "$arg2" foo "$@"
[00:23:16] *** Quits: zer0bitz (~zer0bitz@2001:2003:f444:a000:310a:887:a8c8:ed35) (Ping timeout: 250 seconds)
[00:23:36] <tirnanog> or set -- "${@:1:2}" foo "${@:4}"
[00:24:19] *** Joins: ouestbillie (~gallup@54.29.90.149.rev.vodafone.pt)
[00:25:16] <uuidNuni1> shift is cleaner
[00:25:42] <phy1729> I wouldn't say cleaner, but it's POSIX
[00:25:53] <tirnanog> depends on what you want.
[00:26:57] <ouestbillie> i have a bunch of scripts written by my boss in my path which I don't understand and i'd like to inspect quickly `cat $(which <script>)` doesnt work when they're actually symlinks. I can see a way to roll out a script to inspect filetype, awk/sed the result and pipe into cat but wouldnt' there be a clean one liner for this?
[00:27:17] *** Quits: thiras (~thiras@user/thiras) (Remote host closed the connection)
[00:27:17] <ouestbillie> I feel like this is something people would have wanted to do since the dawn of time
[00:27:36] *** Joins: thiras (~thiras@user/thiras)
[00:28:43] <uuidNuni1> cat $(realpath script)
[00:28:45] <tirnanog> # set -- 1 2; arg1=$1 arg2=$2; shift 3; set -- "$arg1" "$arg2" foo "$@"; echo "$*"
[00:28:47] <shbot> tirnanog: 1 2 foo 1 2
[00:28:51] <tirnanog> that might be unexpected, for example.
[00:29:55] <ouestbillie> uuidNuni1: hmm `realpath` returns the wrong path... wot
[00:31:05] *** Joins: lsrtl__ (~lsrtl@user/lsrtl)
[00:31:15] *** Joins: mowcat (~mowcat@host86-129-162-211.range86-129.btcentralplus.com)
[00:31:20] *** Quits: bn_work (uid268505@id-268505.uxbridge.irccloud.com) (Quit: Connection closed for inactivity)
[00:31:49] <geirha> well it's not named rightpath
[00:32:14] *** Quits: sublim20 (~sublim20@user/sublim20) (Quit: Leaving)
[00:33:16] <ouestbillie> gdmnit
[00:34:18] *** Joins: Amore (~AmoreFS@user/earendel)
[00:34:38] *** Quits: earendel (uid498179@user/earendel) (Killed (NickServ (GHOST command used by Amore!~AmoreFS@user/earendel)))
[00:34:39] <ouestbillie> lol, i mean realpath returns a path that doesnt exist, i am RTGDMing but can't see why that would happen, i feel like knowing why would be a good thing above my little chore here
[00:35:08] *** Amore is now known as earendel
[00:35:36] <tirnanog> probably because you took a sub-par suggestion without pausing to consider how it might work. as a starting point, try realpath "$(type -P script)" instead.
[00:36:02] <uuidNuni1> ouestbillie: readlink -f script_name
[00:36:12] <tirnanog> (now that we've established you have realpath)
[00:36:23] *** Joins: stonkey2 (~stonkey@user/stonkey)
[00:36:26] *** Quits: earendel (~AmoreFS@user/earendel) (Remote host closed the connection)
[00:37:13] *** Quits: stonkey (~stonkey@user/stonkey) (Ping timeout: 256 seconds)
[00:37:33] *** Joins: Amore (~AmoreFS@user/earendel)
[00:38:12] <uuidNuni1> If a command is
[00:38:13] <uuidNuni1>               hashed, -p and -P print the hashed value, which is not necessarily the file that appears first in PATH.
[00:38:27] <tirnanog> also, you said something about inspecting filetype.
[00:38:32] *** Quits: Amore (~AmoreFS@user/earendel) (Remote host closed the connection)
[00:38:57] <tirnanog> your file command may have an option to follow symlinks already (-L).
[00:39:12] <FIlystyn> thx for help
[00:39:40] <ouestbillie> i meant I could do some silly `if test -L $script` followed by some sed on the output of $(which)
[00:39:54] <tirnanog> what are you actually going to do with the file?
[00:40:04] <tirnanog> the fact that it's a symlink won't matter to cat.
[00:40:15] *** Joins: gr33n7007h (~gr33n7007@user/gr33n7007h)
[00:40:34] <ouestbillie> I dont know the file in advance, im starting with an executable in my path which I know is some sh fuckery
[00:40:34] <tirnanog> nor should it matter to awk or sed.
[00:41:17] <ouestbillie> hence the fact that is a symlink means I can't pipe $(which) to cat just like that, has all the arrows and what not
[00:42:53] <ouestbillie> uuidNuni1: thanks readlink is much cleaner than seding the result of which, it s funny it would do path lookup too, wouldnt have guessed it
[00:43:56] <uuidNuni1> i think readlink follows the link to the end ... while realpath stops at the first one?
[00:44:34] <uuidNuni1> read man pages about the differeces between them
[00:45:24] <tirnanog> a simple cat "$(type -P script)" would do. there's no no need to follow the link for that particular operation. as for, readlink -f, its behaviour is the same as realpath.
[00:45:41] <uuidNuni1> # touch file ; ln -s file file1 ; ln -s file1 file2 ; realpath file2 ; readlink file2
[00:45:42] <shbot> uuidNuni1: /root/file
[00:45:42] <shbot> uuidNuni1: bash: readlink: command not found
[00:45:46] <tirnanog> realpath without options.
[00:46:19] <Earnestly> I'd like to note that most of the time people want readlink -e and not readlink -f.  On GNU, also >  Note realpath(1) is the preferred command to use for canonicalization functionality.
[00:47:25] <uuidNuni1> ^^^ realpath resolves to 'file' , so it looks file
[00:48:02] <uuidNuni1> *fine
[00:48:29] <tirnanog> readlink -f is equivalent to realpath. readlink -e is equivalent to realpath -e.
[00:51:36] <ouestbillie> type -P seems to be the best way to canonicoasdlize this thing, realpath returns weird things, like I launched the script and now its returning its cwd...
[00:52:08] <tirnanog> type -P doesn't canonicalize. you don't need to. that's the whole point.
[00:52:28] <ouestbillie> ah yes yes yes I get what youre saying
[00:52:56] <ouestbillie> if anything I .. dont want to, the behaviour of type is more close to what I want
[00:52:58] <tirnanog> so far you haven't stated any requirement that would require canonicalization. now, if you are going to twiddle with file, there's the -L option to get the type of a symlink target.
[00:53:24] <tirnanog> (you vaguely hinted at maybe, possible, file becoming involved because you mentioned file types)
[00:53:28] <tirnanog> possibly*
[00:54:02] <ouestbillie> yeah thats the thing I didnt want to do, I just mentionned the -L thing cause thats the silly road that came to mind when I saw the output of which, your `cat "$(type -P script)"` works fine
[00:54:07] <tirnanog> ok.
[00:54:09] <tirnanog> cool.
[00:54:15] <ouestbillie> thanks.
[00:55:10] <ouestbillie> still interesting to see how canonicalnaadnvlization gets so messy. the input is an entry in path which is a symlink to a file. would expect it to kind of be simpler i guess
[00:55:21] *** Quits: maledictium (~crux@bl23-232-57.dsl.telepac.pt) (Ping timeout: 256 seconds)
[00:55:34] <tirnanog> at least, on a GNU system, we have realpath.
[00:55:45] <tirnanog> without it, it gets rather tricky.
[00:55:56] *** Joins: maledictium (~crux@bl23-232-57.dsl.telepac.pt)
[00:56:42] *** Joins: cycle5 (~cycle5@c-69-249-113-114.hsd1.pa.comcast.net)
[00:56:55] *** Quits: mtk (~mtk@2601:185:200:70:20c:29ff:fe3e:59e4) (Read error: Connection reset by peer)
[00:58:34] <uuidNuni1> i use realpath "$0" to get the script path and dirname $(realpath "$0") to get the script dir :P
[00:58:37] *** Quits: pj (~pj@ghettoforge/pj) (Ping timeout: 240 seconds)
[00:59:15] *** Quits: unop (~unop@194.154.249.71) (Read error: Connection reset by peer)
[00:59:31] <uuidNuni1> and assign them to "self" and "selfdir" , so i can do whatever i like safely
[00:59:39] <tirnanog> trusting the value of $0 isn't strictly correct but ok. your command substitutions have a habit of lacking quotes, by the way.
[00:59:48] *** Joins: unop (~unop@194.154.249.71)
[01:00:35] <uuidNuni1> selfpath=$(realpath "$0") ; self=${selfpath##*/} ; selfdir=${selfpath%/*}
[01:00:52] <uuidNuni1> that is what i do in every script
[01:00:55] *** Joins: aaro (~aaro@user/aaro)
[01:03:51] *** Joins: earendel (~AmoreFS@user/earendel)
[01:04:04] *** Joins: smrtz (~smrtz@user/smrtz)
[01:05:19] <uuidNuni1> tirnanog: whatever $0 is . realpath is going to find it :) , doesn't it?
[01:06:06] *** Quits: earendel (~AmoreFS@user/earendel) (Remote host closed the connection)
[01:06:10] *** Quits: stonkey2 (~stonkey@user/stonkey) (Ping timeout: 250 seconds)
[01:06:22] <omegatron> you may want to read  http://mywiki.wooledge.org/BashFAQ/028
[01:06:24] <tirnanog> no.
[01:06:52] *** Joins: mtk (~mtk@2601:185:200:70:20c:29ff:fe3e:59e4)
[01:06:53] <tirnanog> for sure, it may work most of the time for what you're using it for. but technically, the value of $0 is under the control of the parent process. it's discussed in the above article.
[01:07:13] *** Joins: earendel (~AmoreFS@user/earendel)
[01:07:32] *** Quits: clime (~clime@78-80-115-5.customers.tmcz.cz) (Ping timeout: 240 seconds)
[01:07:47] <uuidNuni1> omegatron: yes. i read that a month ago. but realpath is special :P
[01:08:27] <omegatron> it's only a suggestion
[01:08:27] *** Quits: earendel (~AmoreFS@user/earendel) (Remote host closed the connection)
[01:10:00] <uuidNuni1> the article suggest using fixed and abosolute path , i get it. that is the safest.
[01:10:41] *** Joins: lavaball (felix@31.204.155.215)
[01:11:38] *** Joins: pj (~pj@ghettoforge/pj)
[01:11:38] *** Joins: earendel (~AmoreFS@user/earendel)
[01:12:32] *** Joins: akoana (~ah@user/akoana)
[01:13:27] <rendar> `while true;` in reality is `while /bin/true;` ?
[01:14:10] <uuidNuni1> rendar: no
[01:14:11] <tirnanog> no.
[01:14:18] <tirnanog> # type true
[01:14:19] <shbot> tirnanog: true is a shell builtin
[01:14:26] <uuidNuni1> true is a keyword?
[01:14:30] *** Joins: ayustae (Thunderbir@gateway/vpn/protonvpn/ayustae)
[01:14:39] <rendar> oh, ok
[01:14:54] <uuidNuni1> you can also  while : ; do
[01:15:25] <rendar> but i remember /bin/true in old systems, even in this linux i have /bin/true, what is the purpose of that? /bin/true was used at the times when 'true' wasn't a bash built-in?
[01:15:53] <tirnanog> maybe you don't use bash at all.
[01:16:19] *** Joins: volga629 (~volga629@72.139.93.26)
[01:16:34] *** Quits: ayustae (Thunderbir@gateway/vpn/protonvpn/ayustae) (Client Quit)
[01:16:42] <tirnanog> in practice, you'd be hard pressed to find any bourne-like shell that doesn't have true as a builtin now but there should still be a true binary.
[01:16:52] <rendar> ok ok, i see
[01:17:02] <omegatron> true and false are programs from the gnu coreutils package
[01:17:10] <rendar> so this /bin/true is for old compatibility, the most
[01:17:20] *** Quits: mspe (~user@tilde.team/user/mspe) (Quit: WeeChat 2.8)
[01:17:23] <rendar> omegatron, nope, they are also bash built-ins
[01:17:38] <tirnanog> both statements are not mutually exclusive.
[01:17:39] <omegatron> I know - I was only talking about the programs
[01:17:43] <rendar> ok
[01:18:06] <omegatron> it was to clarify where they originate from, in case someone wants to inspect their source code
[01:18:08] <rendar> can we say that at the times when 'true' wasn't a bash built-in, `while true` was equivalent to `while /bin/true` ?
[01:18:46] <tirnanog> if it's not built in to the shell then yes, it's going to try to resolve true as an executable, just like any other.
[01:18:59] *** Quits: magla (~gelignite@55d4ed71.access.ecotel.net) (Quit: Stay safe!)
[01:19:28] <tirnanog> you may find other curious things on your system, such as /bin/[
[01:19:28] <rendar> i see
[01:19:35] <rendar> i know [
[01:19:35] <tirnanog> the same reasoning applies.
[01:19:38] <uuidNuni1> while any_command_in_path ;
[01:19:39] <rendar> yeah
[01:19:47] *** Quits: aaro (~aaro@user/aaro) (Quit: Quit)
[01:19:48] <rendar> [[ is the built-in for [
[01:19:55] <tirnanog> not quite
[01:19:57] <tirnanog> # type [[
[01:19:58] <shbot> tirnanog: [[ is a shell keyword
[01:20:04] <tirnanog> it's a keyword. special powers abound.
[01:20:04] <omegatron> you can still do   true () { /usr/bin/true ; }   if you like
[01:20:07] <rendar> oh
[01:20:17] <rendar> omegatron, yes, thanks
[01:20:48] <tirnanog> [ is actually the built-in for [, so to speak.
[01:20:49] *** yoneda is now known as nf
[01:20:53] <tirnanog> or test.
[01:20:53] <uuidNuni1> rendar: [[ is bash only, sh does not have that
[01:21:05] <uuidNuni1> [[ is not test.
[01:21:12] <rendar> now here comes the oddities: if /bin/true is basically `int main(int argc, char** argv) { return 0; }`, it means that `while true` is basically `while "0"`, right?
[01:21:49] <tirnanog> while the given command list yields an exit status of 0.
[01:22:12] *** Quits: moha (uid506645@id-506645.helmsley.irccloud.com) (Quit: Connection closed for inactivity)
[01:22:13] *** Joins: aaro (~aaro@user/aaro)
[01:22:34] <rendar> let's say i don't want to express it with an exit status, but with a string, like `K="0"; while $K; ...`
[01:22:40] <rendar> K should be "0" or "1" ?!
[01:22:44] *** Joins: typ1cal_c0ffxe3 (~typ1cal_c@ppp215-240.static.internode.on.net)
[01:23:00] <tirnanog> well.
[01:23:17] <tirnanog> K=1; while (( K )) would be one way. arithemetic evaluation.
[01:23:25] <rendar> exactly
[01:23:27] <uuidNuni1> [[ is CONDITIONAL EXPRESSIONS in bash , [ is test in bash
[01:23:27] <tirnanog> # (( 1 )); echo $?
[01:23:29] <rendar> what about the other thing?
[01:23:29] <shbot> tirnanog: 0
[01:23:35] <rendar> while, without the ((?
[01:23:47] <tirnanog> won't work. $K will expand and be considered as a command name.
[01:23:49] *** Joins: justsomeguy (~justsomeg@user/justsomeguy)
[01:23:56] <tirnanog> I mean, unless you set K=true or something ;)
[01:23:58] <rendar> oh, ok
[01:24:05] <rendar> it will try to run $PATH/0
[01:24:15] <tirnanog> # K=true; if $K; then echo "yup, it's true"; fi
[01:24:17] <shbot> tirnanog: yup, it's true
[01:24:20] <uuidNuni1> while expects a command :P
[01:24:35] <uuidNuni1> 0 is not a command
[01:24:41] <tirnanog> well, it could be.
[01:24:44] <rendar> i know that 0 is not a command
[01:24:45] <tirnanog> rather unlikely in practice.
[01:24:49] <uuidNuni1> # 0
[01:24:50] <shbot> uuidNuni1: bash: 0: command not found
[01:25:27] <uuidNuni1> # 0 () { true ; } ; 0
[01:25:28] <shbot> uuidNuni1: no output
[01:25:44] <rendar> what about this? `check() { if [[ -z "${shutdown}" ]]; then return 1; else return 0; }      ...       while check; then....`
[01:25:46] <uuidNuni1> # 0 () { true ; } ; while 0 ; do echo yes ; done
[01:25:54] <shbot> uuidNuni1: yes
[01:25:54] <shbot> uuidNuni1: yes
[01:25:54] <shbot> uuidNuni1: etc... ( http://ix.io/gTl )
[01:26:16] <uuidNuni1> oh shit .. i just flooded ix
[01:26:33] <tirnanog> it could be reduced to: check() { [[ $shutdown ]]; }
[01:26:56] <tirnanog> but sure.
[01:27:12] <rendar> tirnanog, interesting solution, thanks
[01:27:22] <uuidNuni1> check() { (( ${#shutdown} )); }
[01:27:31] <rendar> huh?
[01:27:49] <rendar> oh, also that..
[01:28:19] <tirnanog> the point is, as you seem to realise by now, that while expects a command or command list.
[01:28:25] <tirnanog> whatever it may be.
[01:29:18] <rendar> yes yes, that's the point
[01:29:19] <rendar> i got it
[01:29:26] <rendar> or a function
[01:29:40] <uuidNuni1> or a var
[01:29:41] <rendar> which bash clearly sees as a command
[01:29:47] <rendar> a var?
[01:29:56] <uuidNuni1> # var=true ; while $var ; do echo yes ; done
[01:30:04] <shbot> uuidNuni1: yes
[01:30:04] <shbot> uuidNuni1: yes
[01:30:04] <shbot> uuidNuni1: etc... ( http://ix.io/gTl )
[01:30:17] <rendar> uuidNuni1, in such a case that var represent a command (a builtin one)
[01:30:43] <rendar> so it's not that while expects a var, you're passing a var which in turn represent a command (in this case a built-in) but while doesn't know that
[01:30:59] <uuidNuni1> right
[01:31:15] *** Joins: clime (~clime@78-80-115-5.customers.tmcz.cz)
[01:32:47] *** Quits: ||arifaX (~Commodore@user/arifax/x-9857073) (Quit: http://quassel-irc.org - Chat comfortably. Anywhere.)
[01:33:02] *** Quits: l4yer (~l4yer@178.239.168.223) (Ping timeout: 250 seconds)
[01:33:48] *** Joins: Joss (~joss@user/Joss)
[01:34:17] <emanuele6> check () [[ $shutdown ]] also works
[01:34:21] <uuidNuni1> rendar: while expects a command and exame the err status of the command(s)
[01:35:10] <rendar> uuidNuni1, yes we've repeated that at lest 7 times without exaggerating :)
[01:35:26] <rendar> shoot to thrill, dude!
[01:35:30] *** Quits: rendar (~rendar@user/rendar) (Quit: Leaving)
[01:35:40] <uuidNuni1> kill bash
[01:37:02] *** Quits: Csm319_ (~csm3105@static-90-220-24-46.ipcom.comunitel.net) (Ping timeout: 240 seconds)
[01:37:25] *** Quits: volga629 (~volga629@72.139.93.26) (Quit: My MacBook has gone to sleep. ZZZzzz…)
[01:37:54] <emanuele6> # kill bash
[01:37:56] <shbot> emanuele6: bash: kill: bash: arguments must be process or job IDs
[01:38:18] <emanuele6> uuidNuni1: you probably want killall(1), not kill(1)
[01:38:21] <Blondie101010> # pkill -f bash
[01:38:22] <shbot> Blondie101010: bash: pkill: command not found
[01:38:26] <earendel> # kill $$
[01:38:27] <shbot> earendel: no output
[01:38:46] <uuidNuni1> emanuele6: pkill -9ix
[01:39:14] <earendel> # pkill --signal 9 bash
[01:39:15] <shbot> earendel: bash: pkill: command not found
[01:39:29] <Blondie101010> just: pkill -9 bash
[01:39:56] <earendel> why command not found?
[01:39:59] <earendel> sup blondie
[01:40:00] *** Quits: unop (~unop@194.154.249.71) (Remote host closed the connection)
[01:40:07] <Blondie101010> the bot doesn't have it installed
[01:40:37] *** Joins: unop (~unop@194.154.249.71)
[01:40:43] <earendel> can i somehow find out what package installed a binary, for instance?
[01:40:59] *** Joins: Seirdy (~Seirdy@sourcehut/user/seirdy)
[01:41:08] <uuidNuni1> earendel: os specific
[01:41:13] <earendel> (for those which were installed by one)
[01:41:17] <Blondie101010> ask your OS package manager support
[01:41:17] <earendel> debian
[01:41:17] <uuidNuni1> pacman -f command
[01:41:25] <uuidNuni1> pacman -F command
[01:41:39] *** Quits: Joss (~joss@user/Joss) (Quit: Leaving.)
[01:41:45] <earendel> oh im in bash. right
[01:42:01] <uuidNuni1> core/procps-ng
[01:42:04] <earendel> in case you know it. you could tell me anyway.
[01:42:13] <emanuele6> contrary to popular belief, bash is not debian
[01:42:24] <uuidNuni1> apt-file is what you need for that on debian earendel
[01:42:43] <emanuele6> bash is not even the default /bin/sh on debian
[01:42:44] <earendel> thx uuidNuni1 droog
[01:44:13] <uuidNuni1> emanuele6: who cares /bin/sh
[01:44:17] <earendel> yeah. i wonder why /bin/sh is linked to /bin/bash here
[01:44:34] <uuidNuni1> !/usr/bin/bash
[01:45:02] <uuidNuni1> on newer OS, everything is in /usr/bin
[01:45:11] <earendel> how can i verify which shell i'm running?
[01:45:35] <uuidNuni1> sbin -> usr/bin bin -> usr/bin /usr/sbin -> /usr/bin
[01:45:52] *** Joins: aaro1 (aaro@user/aaro)
[01:46:14] <uuidNuni1> earendel: ps $(echo $$)
[01:46:39] *** Joins: l4yer (~l4yer@178.239.168.223)
[01:46:40] <earendel> ok. how to read that arrow?
[01:46:41] *** Joins: stonkey (~stonkey@user/stonkey)
[01:46:42] <uuidNuni1> or just ps $$
[01:47:28] <earendel> is linked? precedes?
[01:47:50] <uuidNuni1> # ps -$$ ; ps $$ ; ps -f $$
[01:47:51] <earendel> it means it's all in /usr/bin?
[01:47:55] <shbot> uuidNuni1:  PID TTY      STAT   TIME COMMAND
[01:47:55] <shbot> uuidNuni1:   44 ttyS0    Ss     0:00 bash -l
[01:47:55] <shbot> uuidNuni1: etc... ( http://ix.io/3Mv4 )
[01:48:23] *** Quits: aaro (~aaro@user/aaro) (Quit: Quit)
[01:48:31] <earendel> ok. that way i see the command. but not how it got resolved.
[01:48:36] <earendel> right?
[01:49:20] <earendel> was that not one of the things that can only be approximated in bash by some workarounds if at all?
[01:49:49] <uuidNuni1> # ps -e -o command -$$
[01:49:54] <shbot> uuidNuni1: COMMAND
[01:49:54] <shbot> uuidNuni1: /bin/bash4 /init irc
[01:49:54] <shbot> uuidNuni1: etc... ( http://ix.io/3Mv6 )
[01:50:18] <uuidNuni1> wtf
[01:50:19] <earendel> wow. here we go. handsome nuni. grazie
[01:52:27] *** aaro1 is now known as aaro
[01:52:59] *** Joins: Ruit (~textual@c-69-248-83-247.hsd1.nj.comcast.net)
[01:53:10] *** Quits: smrtz (~smrtz@user/smrtz) (Ping timeout: 256 seconds)
[01:53:27] *** Quits: Ruit (~textual@c-69-248-83-247.hsd1.nj.comcast.net) (Client Quit)
[01:53:45] *** Joins: you (~ShmoSeph@c-69-248-83-247.hsd1.nj.comcast.net)
[01:54:23] <tirnanog> there's no generally dependable method of knowing which shell you are in. if BASH is set, it's (hopefully) bash. if ZSH_VERSION is set, it's (hopefully) zsh, and so on. otherwise, ps -ocomm= -p $$ might provide a hint.
[01:54:42] *** Joins: dre (~dre@2001:8003:c932:c301:2a14:8300:3b99:1684)
[01:55:26] <uuidNuni1> # ps -o args $$
[01:55:28] <shbot> uuidNuni1: COMMAND
[01:55:28] <shbot> uuidNuni1: bash -l
[01:55:58] <uuidNuni1> no path?
[01:56:17] *** Quits: lavaball (felix@31.204.155.215) (Remote host closed the connection)
[01:56:30] <emanuele6> # exec -a bash dash -c 'ps -o comm= "$$"'
[01:56:31] <shbot> emanuele6: ps
[01:56:31] <shbot> emanuele6: (shell exited with 0)
[01:56:39] <tirnanog> the command name is under the control of the parent process. it can be anything.
[01:56:47] <tirnanog> that's what I tried to explain earlier.
[01:56:48] <uuidNuni1> # ps -o exe,args -p $$
[01:56:52] <shbot> uuidNuni1: error: unknown user-defined format specifier "exe"
[01:56:52] <shbot> uuidNuni1:
[01:56:52] <shbot> uuidNuni1: etc... ( http://ix.io/3Mv8 )
[01:56:57] <Earnestly> Just don't do it
[01:57:07] <emanuele6> # exec -a bash dash -c 'ps -o comm= "$$"' & wait
[01:57:08] <shbot> emanuele6: [1] 51
[01:57:08] <shbot> emanuele6: ps
[01:57:08] <shbot> emanuele6: [1]+  Done                    exec -a bash dash -c 'ps -o comm= "$$"'
[01:57:35] <Earnestly> emanuele6: -p for ps btw, if POSIX
[01:57:43] <Earnestly> ps doesn't take pid as argument
[01:58:04] <emanuele6> ah, right
[01:58:11] <Earnestly> Not sure if that matters here
[01:58:17] <emanuele6> no, it does not
[01:58:24] <uuidNuni1> ps doesn't take pid as argument // not true
[01:58:39] <emanuele6> uuidNuni1: man 1p ps
[01:58:41] *** Joins: loganlee (~Thunderbi@user/loganlee)
[01:58:59] <uuidNuni1> -123   Identical to --pid 123. ;  123    Identical to --pid 123.
[01:59:18] <Earnestly> This is when I remember that reading comprehension statistic
[01:59:23] <tirnanog> not everyone uses procps-ng.
[01:59:28] <uuidNuni1> --pid pidlist
[01:59:29] <uuidNuni1>               Select by process ID.  Identical to -p and p.
[01:59:39] <emanuele6> Earnestly: said "if POSIX"
[02:00:13] <uuidNuni1> oh POSIX
[02:00:20] *** Quits: rgrinberg (~textual@2806:101e:7:2b:a509:6fda:5123:c5ae) (Ping timeout: 250 seconds)
[02:00:24] <tirnanog> Earnestly: what was it?
[02:00:34] <Earnestly> emanuele6: It's just that, ps -o comm= behaves as shbot printed, showing ps rather than name
[02:00:40] *** Quits: zouhair (~zouhair@lnsm3-montreal02-142-117-154-92.internet.virginmobile.ca) (Quit: KVIrc 5.0.1 Aria http://www.kvirc.net/)
[02:00:46] <tirnanog> Earnestly: oh, was it the one about being able to convey the particulars of a recently digested passage in Q and A form?
[02:00:57] *** Quits: pj (~pj@ghettoforge/pj) (Ping timeout: 240 seconds)
[02:00:58] <emanuele6> i am noticing that, yeah
[02:00:59] <Earnestly> tirnanog: Yes I think you were here, it's that one
[02:01:19] <emanuele6> maybe dash is doing some optimisation
[02:01:35] *** Joins: quazimodo (~quazimodo@n1-41-223-188.bla2.nsw.optusnet.com.au)
[02:01:42] <uuidNuni1> which shell is the fastest one
[02:01:45] <emanuele6> no, same behaviour in bash
[02:02:06] <emanuele6> uuidNuni1: it's mostly a matter of startup time
[02:02:08] <Earnestly> emanuele6: It would be based on whatever ps shbot is using, which I assume is procps-ng, which is why I'm confuse
[02:02:10] *** Quits: justsomeguy (~justsomeg@user/justsomeguy) (Quit: WeeChat 3.3)
[02:02:11] <tirnanog> dash. easily. bash is slow.
[02:02:23] <uuidNuni1> emanuele6: i mean running scripts
[02:02:32] <Earnestly> # ps --version
[02:02:33] <shbot> Earnestly: ps from procps-ng 3.3.12
[02:02:38] <Earnestly> Yeah, so it should work
[02:03:01] <emanuele6> if i run `dash -c 'ps -o comm= -p "$$"'' locally i get the same result
[02:03:06] <uuidNuni1> fish ? tirnanog
[02:03:07] <emanuele6> same for `bash -c'
[02:03:25] <uuidNuni1> # builtin ps
[02:03:26] <shbot> uuidNuni1: bash: builtin: ps: not a shell builtin
[02:03:32] <tirnanog> uuidNuni1: I don't know. I only have my experience of writing posix sh scripts and comparing performance between bash and a few other shells to draw upon (mostly dash).
[02:03:59] <uuidNuni1> tirnanog: what OS defaults to dash ?
[02:04:00] <emanuele6> uuidNuni1: http://0x0.st/o-G_.txt
[02:04:10] <emanuele6> it's mostly a matter of startup time
[02:04:15] <tirnanog> uuidNuni1: debian and all its derivatives have dash as sh.
[02:04:25] <Earnestly> It seems like mrsh has come to an end sadly, it does have quite a lot of subtle and not so subtle bugs in much of its completed parts too
[02:04:28] <emanuele6> uuidNuni1: debian uses the Debian Ash SHell as the default /bin/sh
[02:04:29] *** Joins: rcernin (~rcernin@2001:8003:6803:db00:4572:36af:ecb:dc74)
[02:04:39] *** Quits: rcernin (~rcernin@2001:8003:6803:db00:4572:36af:ecb:dc74) (Client Quit)
[02:05:01] <uuidNuni1> holy ! fish is the last?
[02:05:27] <emanuele6> (Debian Almquist SHell, not Ash)
[02:05:36] <Earnestly> emanuele6: But you are measuring startup times, try measuring shell builtins and such (I'm not suggesting you do this now)
[02:05:55] <Earnestly> uuidNuni1: fish is bloated
[02:06:00] *** Quits: crashrep (~crashrep@user/crashrep) (Quit: WeeChat 3.4)
[02:06:01] <emanuele6> uuidNuni1: fish is not even a POSIX compliant shell
[02:06:02] *** Quits: dreamon (~dreamon@p57a4c526.dip0.t-ipconnect.de) (Ping timeout: 240 seconds)
[02:06:05] <uuidNuni1> too much sugar?
[02:06:18] <emanuele6> it does not add sugar, it is not compatible at all
[02:06:24] <emanuele6> it's its own thing
[02:07:06] <Earnestly> I sometimes think about that oil shell.  The author, by and large, groks what a shell is/ought to be with some sillyness
[02:07:27] <Earnestly> But it seems to be stuck to python runtime, quite slow
[02:09:15] *** Joins: rcernin (~rcernin@101.189.141.138)
[02:12:02] *** Quits: jkwnki (~jkwnki@p4fedb70b.dip0.t-ipconnect.de) (Ping timeout: 240 seconds)
[02:13:06] <Earnestly> I.e. "Oil revolves around some controversial architectural decisions, like untyped byte streams as a solid foundation for a modern shell language"
[02:13:17] <Earnestly> They get it
[02:13:29] <tirnanog> oh hey. it's in community.
[02:13:48] <Earnestly> > You can build diverse domain-specific abstractions on top of them. This includes different "algebras" of records, tables, and documents.
[02:13:56] *** Joins: pj (~pj@ghettoforge/pj)
[02:14:00] <Earnestly> This is what I mean, they get it.  "text is the universal language"
[02:16:43] <Earnestly> > PowerShell cmdlets and "second class" external processes creates problems of composition. Several alternative shells share this design, and I'm working hard to avoid it in Oil.
[02:16:54] <tirnanog> good lad.
[02:17:26] *** Quits: furrymcgee (~devuan@cgn-89-1-208-165.nc.de) (Quit: leaving)
[02:21:44] <Earnestly> Yeah just went over https://www.oilshell.org/blog/2021/12/review-arch.html this chap gets it, he understands what a shell is, and this is something I rarely see examples of
[02:25:40] *** Quits: FIlystyn (~piotr@095160035009.warszawa.vectranet.pl) (Quit: Lost terminal)
[02:29:06] *** Quits: freep (~freepppp@62.1.174.38.dsl.dyn.forthnet.gr) (Read error: Connection reset by peer)
[02:31:16] *** Joins: Guest10 (~Guest10@93-50-90-162.ip151.fastwebnet.it)
[02:35:00] *** Parts: Guest10 (~Guest10@93-50-90-162.ip151.fastwebnet.it) ()
[02:43:02] *** Quits: you (~ShmoSeph@c-69-248-83-247.hsd1.nj.comcast.net) (Quit: Textual IRC Client: www.textualapp.com)
[02:47:04] *** Quits: gaude (~gaude@114-39-142-46.pool.kielnet.net) (Quit: Client closed)
[02:48:05] *** Joins: lsrtl_ (~lsrtl@user/lsrtl)
[02:48:25] *** Quits: wurstwasser (~frank.hol@2001:a61:357a:9d01:72cf:ee11:1014:c315) (Remote host closed the connection)
[02:50:57] *** Quits: lsrtl__ (~lsrtl@user/lsrtl) (Ping timeout: 256 seconds)
[02:56:54] *** Quits: fedenix (~fedenix@gateway/tor-sasl/fedenix) (Remote host closed the connection)
[02:57:15] *** Quits: irc_user (uid423822@id-423822.lymington.irccloud.com) (Quit: Connection closed for inactivity)
[03:02:32] *** Quits: Bercik (~Redomen@user/bercik) (Ping timeout: 240 seconds)
[03:03:22] *** Joins: beco (~DrBeco@2804:351c:dd02:b000:fe8b:5fac:6d35:c76)
[03:05:26] *** Quits: beco (~DrBeco@2804:351c:dd02:b000:fe8b:5fac:6d35:c76) (Client Quit)
[03:05:38] *** Joins: beco (~DrBeco@2804:351c:dd02:b000:fe8b:5fac:6d35:c76)
[03:05:41] *** Quits: beco (~DrBeco@2804:351c:dd02:b000:fe8b:5fac:6d35:c76) (Remote host closed the connection)
[03:06:11] *** Joins: beco (~beco@2804:351c:dd02:b000:fe8b:5fac:6d35:c76)
[03:06:17] *** Quits: drd (~drd@2001:b07:6468:1782:1e9c:163f:3faa:8058) (Ping timeout: 240 seconds)
[03:07:27] *** Quits: thebombzen (~thebombze@c-68-41-54-207.hsd1.mi.comcast.net) (Quit: Quit)
[03:10:15] *** Joins: Guest10 (~Guest10@93-50-90-162.ip151.fastwebnet.it)
[03:10:28] *** Parts: Guest10 (~Guest10@93-50-90-162.ip151.fastwebnet.it) ()
[03:11:32] *** Quits: yustin (~yustin@user/yustin) (Ping timeout: 240 seconds)
[03:12:13] *** Joins: herjazz (~herjazz@p6758124-ipngn30801marunouchi.tokyo.ocn.ne.jp)
[03:15:01] *** Quits: pasteban (~pasteban@157.146.251.23.bc.googleusercontent.com) (Remote host closed the connection)
[03:15:38] *** Joins: pasteban (~pasteban@157.146.251.23.bc.googleusercontent.com)
[03:19:42] *** Joins: bomb-on (~bomb-on@194.144.47.113)
[03:20:01] *** Quits: checkbot (~checkbot@157.146.251.23.bc.googleusercontent.com) (Remote host closed the connection)
[03:20:39] *** Joins: checkbot (~checkbot@157.146.251.23.bc.googleusercontent.com)
[03:22:40] *** Quits: ouestbillie (~gallup@54.29.90.149.rev.vodafone.pt) (Ping timeout: 250 seconds)
[03:22:45] *** Quits: apos (~apos@gateway/tor-sasl/apos) (Ping timeout: 276 seconds)
[03:23:34] *** Quits: BSaboia (~bsaboia@177.37.198.83) (Read error: Connection reset by peer)
[03:23:48] *** Joins: BSaboia (~bsaboia@177.37.198.83)
[03:24:54] *** Quits: mowcat (~mowcat@host86-129-162-211.range86-129.btcentralplus.com) (Remote host closed the connection)
[03:27:18] *** Quits: seninha (~seninha@user/seninha) (Quit: Leaving)
[03:27:44] *** Quits: typ1cal_c0ffxe3 (~typ1cal_c@ppp215-240.static.internode.on.net) (Quit: My MacBook has gone to sleep. ZZZzzz…)
[03:28:18] *** Quits: wwilliam (~afernande@user/wwilliam) (Ping timeout: 250 seconds)
[03:29:08] *** Quits: rustyshackleford (uid236774@id-236774.helmsley.irccloud.com) (Quit: Connection closed for inactivity)
[03:30:14] *** Quits: tk (~tk@ircpuzzles/staff/tk) (Quit: Well, this is unexpected.)
[03:30:38] *** Joins: tk (~tk@ircpuzzles/staff/tk)
[03:30:56] *** Joins: apos (~apos@gateway/tor-sasl/apos)
[03:35:38] *** Joins: chenqisu1 (~bhca7d@183.217.201.21)
[03:37:49] *** Joins: zouhair (~zouhair@lnsm3-montreal02-142-117-154-92.internet.virginmobile.ca)
[03:39:21] *** Joins: typ1cal_c0ffxe3 (~typ1cal_c@ppp215-240.static.internode.on.net)
[03:41:19] *** Quits: typ1cal_c0ffxe3 (~typ1cal_c@ppp215-240.static.internode.on.net) (Client Quit)
[03:44:37] *** Joins: typ1cal_c0ffxe3 (~typ1cal_c@ppp215-240.static.internode.on.net)
[03:47:12] *** Joins: Guest3273 (~Guest@host223.190-139-78.telecom.net.ar)
[03:50:19] *** Quits: typ1cal_c0ffxe3 (~typ1cal_c@ppp215-240.static.internode.on.net) (Quit: My MacBook has gone to sleep. ZZZzzz…)
[03:52:35] *** Quits: beco (~beco@2804:351c:dd02:b000:fe8b:5fac:6d35:c76) (Quit: Leaving)
[03:56:10] *** Quits: fatal (~0x00@user/fatal) (Quit: fatal)
[03:56:11] *** Joins: typ1cal_c0ffxe3 (~typ1cal_c@ppp215-240.static.internode.on.net)
[03:58:38] *** Quits: thiras (~thiras@user/thiras) (Ping timeout: 250 seconds)
[04:00:46] *** Quits: sinhue (~mithrin@188-167-233-152.dynamic.chello.sk) (Quit: Leaving)
[04:01:23] *** Quits: aidalgol (~aidalgol@user/aidalgol) (Ping timeout: 256 seconds)
[04:01:57] *** Quits: typ1cal_c0ffxe3 (~typ1cal_c@ppp215-240.static.internode.on.net) (Quit: Textual IRC Client: www.textualapp.com)
[04:03:22] *** Joins: aidalgol (~aidalgol@user/aidalgol)
[04:03:23] *** Joins: smrtz (~smrtz@user/smrtz)
[04:03:24] *** Quits: millido (~millido@84.210.150.128) (Ping timeout: 250 seconds)
[04:06:04] *** Joins: volga629 (~volga629@72.139.93.26)
[04:06:43] *** Joins: millido (~millido@84.210.150.128)
[04:07:25] *** Quits: volga629 (~volga629@72.139.93.26) (Client Quit)
[04:08:35] *** Quits: Everything (~Everythin@37.115.210.35) (Quit: leaving)
[04:08:44] *** Joins: rustyshackleford (uid236774@id-236774.helmsley.irccloud.com)
[04:09:58] *** Quits: Daemoen (~Daemoen@daemoen.ct-unlimited.com) (Quit: WeeChat 2.9)
[04:10:52] *** Quits: Guest3273 (~Guest@host223.190-139-78.telecom.net.ar) (Remote host closed the connection)
[04:12:11] *** Quits: vicecea (~vicecea@gateway/vpn/pia/vicecea) (Remote host closed the connection)
[04:12:29] *** Joins: vicecea (~vicecea@gateway/vpn/pia/vicecea)
[04:13:11] *** Quits: stonkey (~stonkey@user/stonkey) (Remote host closed the connection)
[04:13:17] *** Quits: millido (~millido@84.210.150.128) (Ping timeout: 256 seconds)
[04:14:06] *** Joins: millido (~millido@84.210.150.128)
[04:15:09] *** Joins: Astara (~skraito@user/skraito)
[04:15:25] *** Quits: Astara (~skraito@user/skraito) (K-Lined)
[04:18:50] *** Joins: crashrep (~crashrep@user/crashrep)
[04:19:02] *** Quits: herjazz (~herjazz@p6758124-ipngn30801marunouchi.tokyo.ocn.ne.jp) (Quit: leaving)
[04:21:02] *** Quits: Seirdy (~Seirdy@sourcehut/user/seirdy) (Ping timeout: 240 seconds)
[04:25:32] *** Quits: clime (~clime@78-80-115-5.customers.tmcz.cz) (Ping timeout: 240 seconds)
[04:30:18] *** Quits: XV8 (~XV8@2601:5cb:c001:50:74f2:29a5:c6ca:a36e) (Quit: Textual IRC Client: www.textualapp.com)
[04:32:29] *** Joins: szkl (uid110435@id-110435.uxbridge.irccloud.com)
[04:32:47] *** Joins: Seirdy (~Seirdy@sourcehut/user/seirdy)
[04:34:40] *** Quits: bomb-on (~bomb-on@194.144.47.113) (Quit: aллилѹіа!)
[04:38:36] *** Joins: fatal (~0x00@user/fatal)
[04:40:24] *** Quits: metal_egg (~metal0egg@pool-72-94-145-43.phlapa.fios.verizon.net) (Remote host closed the connection)
[04:50:13] *** Joins: kurahaupo1 (~martin@115.69.27.211)
[04:55:13] *** Joins: richardm75 (~richardm7@2600:8801:c507:b200:79ab:b4c:bb8:341b)
[05:04:22] *** Joins: duderonomy (~duderonom@c-73-158-190-156.hsd1.ca.comcast.net)
[05:04:51] *** Quits: millido (~millido@84.210.150.128) (Ping timeout: 256 seconds)
[05:07:04] *** Joins: millido (~millido@84.210.150.128)
[05:07:07] *** Quits: ka80 (~ka80@111.60.138.34.bc.googleusercontent.com) (Ping timeout: 256 seconds)
[05:08:39] *** Quits: lsrtl_ (~lsrtl@user/lsrtl) (Ping timeout: 256 seconds)
[05:09:10] *** Quits: fatal (~0x00@user/fatal) (Remote host closed the connection)
[05:10:21] *** Joins: zebrag (~chris@user/zebrag)
[05:12:13] *** Quits: nunggu (~q@user/nunggu) (Quit: nunggu)
[05:16:38] *** Quits: BSaboia (~bsaboia@177.37.198.83) (Quit: This computer has gone to sleep)
[05:16:53] *** Joins: fatal (~0x00@user/fatal)
[05:17:15] *** Joins: yac_ (~user@user/yac)
[05:17:17] *** Quits: fatal (~0x00@user/fatal) (Client Quit)
[05:18:04] *** Joins: seninha (~seninha@user/seninha)
[05:18:15] *** Quits: duderonomy (~duderonom@c-73-158-190-156.hsd1.ca.comcast.net) (Quit: My MacBook has gone to sleep. ZZZzzz…)
[05:18:37] *** Joins: fatal (~0x00@user/fatal)
[05:19:18] *** Joins: BSaboia (~bsaboia@177.37.198.83)
[05:23:33] *** Quits: BSaboia (~bsaboia@177.37.198.83) (Client Quit)
[05:30:23] *** Quits: vlm (~vlm@user/vlm) (Quit: "")
[05:30:32] *** Quits: nickdiaz1wag209 (~bjpenn_@98.42.87.100) (Ping timeout: 240 seconds)
[05:30:48] *** Joins: et_ (~et@user/et)
[05:30:56] *** Quits: h_ (rootvegeta@fsf/member/hays) ()
[05:31:32] *** Quits: et (~et@user/et) (Ping timeout: 240 seconds)
[05:31:32] *** et_ is now known as et
[05:31:53] *** Quits: pieguy128 (~pieguy128@bras-base-mtrlpq5031w-grc-43-67-70-144-105.dsl.bell.ca) (Ping timeout: 256 seconds)
[05:33:32] *** Joins: hays (rootvegeta@fsf/member/hays)
[05:36:34] *** Quits: chomwitt (~chomwitt@2a02:587:dc0b:200:12c3:7bff:fe6d:d374) (Ping timeout: 250 seconds)
[05:37:22] *** Joins: Daemoen (~Daemoen@daemoen.ct-unlimited.com)
[05:39:40] *** Joins: pieguy128 (~pieguy128@bras-base-mtrlpq5031w-grc-35-70-24-248-134.dsl.bell.ca)
[05:40:00] *** Joins: wwilliam (~afernande@73.199.0.18)
[05:40:00] *** Quits: wwilliam (~afernande@73.199.0.18) (Changing host)
[05:40:00] *** Joins: wwilliam (~afernande@user/wwilliam)
[05:44:32] *** Quits: pieguy128 (~pieguy128@bras-base-mtrlpq5031w-grc-35-70-24-248-134.dsl.bell.ca) (Ping timeout: 240 seconds)
[05:45:48] *** Joins: pieguy128 (~pieguy128@bras-base-mtrlpq5031w-grc-35-70-24-248-134.dsl.bell.ca)
[05:47:41] *** Parts: earendel (~AmoreFS@user/earendel) (Leaving)
[05:48:32] *** Quits: kurahaupo (~kurahaupo@115.69.27.211) (Ping timeout: 240 seconds)
[05:53:59] *** Quits: seninha (~seninha@user/seninha) (Quit: Leaving)
[05:57:35] *** Quits: tirnanog (~tirnanog@user/tirnanog) (Quit: = "")
[05:58:20] *** Quits: m0viefreak (~asdf@user/m0viefreak) (Remote host closed the connection)
[06:01:17] *** Joins: thebombzen (~thebombze@c-68-41-54-207.hsd1.mi.comcast.net)
[06:05:10] *** Quits: brachamh (~brachamh@user/brachamh) (Ping timeout: 250 seconds)
[06:05:32] *** Quits: goldfish (~goldfish@user/goldfish) (Ping timeout: 240 seconds)
[06:06:31] *** Joins: junebug (~junebug@2600:1700:3db0:2540:47eb:8d98:191c:cbbb)
[06:06:34] *** Quits: smrtz (~smrtz@user/smrtz) (Quit: Client closed)
[06:08:31] *** Joins: Astara (~skraito@user/skraito)
[06:08:45] *** Quits: Astara (~skraito@user/skraito) (K-Lined)
[06:09:30] *** Quits: ryzenda (~ryzenda@pool-74-109-246-70.pitbpa.fios.verizon.net) (Ping timeout: 250 seconds)
[06:12:34] *** Quits: FluffyMask (~masque@user/fluffymask) (Quit: WeeChat 3.4)
[06:17:07] *** Joins: brachamh (~brachamh@user/brachamh)
[06:19:52] *** Quits: Daemoen (~Daemoen@daemoen.ct-unlimited.com) (Quit: WeeChat 2.9)
[06:30:37] *** Quits: xizhendu_ (~xizhendu@240e:305:7380:4300:22a3:ecb5:b567:7739) (Ping timeout: 240 seconds)
[06:31:01] *** Quits: zaz\ (~zaz@poneybl.eu) (Quit: bye)
[06:31:19] *** Quits: junebug (~junebug@2600:1700:3db0:2540:47eb:8d98:191c:cbbb) (Remote host closed the connection)
[06:31:27] *** Joins: zaz\ (~zaz@poneybl.eu)
[06:32:23] *** Joins: junebug (~junebug@2600:1700:3db0:2540:7236:29f5:ad13:7e19)
[06:34:25] *** Quits: willyg_cos (~willyg_co@user/willyg-cos/x-4994202) (Quit: willyg_cos)
[06:34:37] *** Quits: yac (~user@user/yac) (Ping timeout: 240 seconds)
[06:34:47] *** Quits: lemonsni- (~lemonsnic@cpc159519-perr18-2-0-cust114.19-1.cable.virginm.net) (Quit: ZNC 1.8.2 - https://znc.in)
[06:35:32] *** Joins: yac (~user@user/yac)
[06:35:57] *** Quits: Swahili (~Swahili@a95-94-208-187.cpe.netcabo.pt) (Remote host closed the connection)
[06:36:00] *** Joins: volga629 (~volga629@72.139.93.26)
[06:36:29] *** Joins: Swahili (~Swahili@a95-94-208-187.cpe.netcabo.pt)
[06:37:16] *** Joins: trekkie1701c (~trekkie17@user/trekkie1701c)
[06:40:17] *** Joins: kurahaupo (~kurahaupo@115.69.27.211)
[06:47:03] *** Joins: lemonsnicks (~lemonsnic@cpc159519-perr18-2-0-cust114.19-1.cable.virginm.net)
[06:50:39] *** Joins: ouestbillie (~gallup@54.29.90.149.rev.vodafone.pt)
[06:55:52] *** Quits: quazimodo (~quazimodo@n1-41-223-188.bla2.nsw.optusnet.com.au) (Ping timeout: 250 seconds)
[06:56:53] *** Quits: kurahaupo (~kurahaupo@115.69.27.211) (Ping timeout: 256 seconds)
[06:57:50] *** Joins: quazimodo (~quazimodo@n1-40-220-128.bla1.nsw.optusnet.com.au)
[06:58:45] *** Quits: sinaowolabi_ (~SinaOwola@102.134.114.1) (Ping timeout: 256 seconds)
[07:02:59] *** Joins: xx (~xx@user/xx)
[07:05:02] *** Quits: skapata (~Skapata@user/skapata) (Ping timeout: 240 seconds)
[07:06:54] *** Quits: grettke (~grettke@cpe-65-29-228-30.wi.res.rr.com) (Quit: My MacBook has gone to sleep. ZZZzzz…)
[07:07:53] *** Joins: grettke (~grettke@cpe-65-29-228-30.wi.res.rr.com)
[07:11:36] *** Joins: sinaowolabi_ (~SinaOwola@160.152.43.247)
[07:13:53] *** Quits: cdown (~cdown@163.114.131.1) (Ping timeout: 256 seconds)
[07:23:01] *** Joins: rgrinberg (~textual@2806:101e:7:2b:6129:f312:6bd3:a55)
[07:24:32] *** Quits: mithrin (~mithrin@stip-static-62.213-81-207.telecom.sk) (Ping timeout: 240 seconds)
[07:26:12] *** Quits: jos1 (~jos3@dyndsl-091-248-055-181.ewe-ip-backbone.de) (Ping timeout: 250 seconds)
[07:26:26] *** Joins: mithrin (~mithrin@stip-static-62.213-81-207.telecom.sk)
[07:30:17] *** Joins: tsujp (~tsujp@sourcehut/user/tsujp)
[07:30:45] *** Joins: nickdiazswag209 (~bjpenn_@98.42.87.100)
[07:34:02] *** Quits: jonakeys (jonathan@gateway/vpn/airvpn/jonakeys) (Ping timeout: 240 seconds)
[07:35:18] *** Quits: millido (~millido@84.210.150.128) (Ping timeout: 250 seconds)
[07:36:10] *** Joins: jonakeys (jonathan@gateway/vpn/airvpn/jonakeys)
[07:36:30] *** Joins: millido (~millido@84.210.150.128)
[07:39:28] *** Joins: jos1 (~jos3@dyndsl-095-033-175-046.ewe-ip-backbone.de)
[07:39:32] *** Quits: nickdiazswag209 (~bjpenn_@98.42.87.100) (Ping timeout: 240 seconds)
[07:40:01] *** Quits: jonakeys (jonathan@gateway/vpn/airvpn/jonakeys) (Client Quit)
[07:40:18] *** Joins: jonakeys (jonathan@gateway/vpn/airvpn/jonakeys)
[07:44:24] *** Quits: millido (~millido@84.210.150.128) (Ping timeout: 250 seconds)
[07:45:47] *** Quits: Earnestly (~earnest@user/earnestly) (Ping timeout: 256 seconds)
[07:47:26] *** Parts: dngray[m] (~dngray@user/dngray) ()
[07:47:58] *** Parts: avu (~jan@user/avu) ()
[07:48:00] *** Joins: avu (~jan@user/avu)
[07:48:57] *** Quits: junebug (~junebug@2600:1700:3db0:2540:7236:29f5:ad13:7e19) (Ping timeout: 240 seconds)
[07:49:15] *** Joins: skapata (~Skapata@2804:14c:87b0:a6f9:506e:821:1232:2e80)
[07:49:15] *** Quits: skapata (~Skapata@2804:14c:87b0:a6f9:506e:821:1232:2e80) (Changing host)
[07:49:15] *** Joins: skapata (~Skapata@user/skapata)
[07:49:20] *** Joins: millido (~millido@84.210.150.128)
[07:51:26] *** Quits: volga629 (~volga629@72.139.93.26) (Quit: My MacBook has gone to sleep. ZZZzzz…)
[07:57:56] *** Joins: kurahaupo (~kurahaupo@115.69.27.211)
[08:00:48] *** Quits: ChmEarl (~chmearl@user/chmearl) (Quit: Leaving)
[08:01:08] *** Quits: bob_x1 (~bob_x@gateway/tor-sasl/bobx1/x-26457072) (Remote host closed the connection)
[08:01:27] *** Joins: bob_x1 (~bob_x@gateway/tor-sasl/bobx1/x-26457072)
[08:05:02] *** Quits: semigloss (~semigloss@d14-69-6-230.try.wideopenwest.com) (Ping timeout: 240 seconds)
[08:09:25] *** Joins: freep (~freepppp@62.1.174.38.dsl.dyn.forthnet.gr)
[08:10:15] *** Joins: nickdiazswag209 (~bjpenn_@98.42.87.100)
[08:10:18] *** Quits: yac_ (~user@user/yac) (Remote host closed the connection)
[08:10:18] *** Quits: yac (~user@user/yac) (Remote host closed the connection)
[08:12:08] *** Quits: sinaowolabi_ (~SinaOwola@160.152.43.247) (Ping timeout: 250 seconds)
[08:13:43] *** Joins: Jong (~Jong@2620:10d:c090:400::5:44d9)
[08:14:32] *** Quits: nickdiazswag209 (~bjpenn_@98.42.87.100) (Ping timeout: 240 seconds)
[08:15:04] *** Joins: ElPresidenteP (~ElPreside@172-125-150-28.lightspeed.tukrga.sbcglobal.net)
[08:15:07] *** Quits: ElPresidenteP (~ElPreside@172-125-150-28.lightspeed.tukrga.sbcglobal.net) (Read error: Connection reset by peer)
[08:16:13] *** Joins: ElPresidente (~ElPreside@172-125-150-28.lightspeed.tukrga.sbcglobal.net)
[08:19:46] *** Joins: bluedust (~bluedust@117.207.235.4)
[08:20:23] <ormaaj> I was initially optimistic until I started seeing code :/
[08:21:28] *** Quits: grettke (~grettke@cpe-65-29-228-30.wi.res.rr.com) (Quit: My MacBook has gone to sleep. ZZZzzz…)
[08:22:27] *** Quits: chenqisu1 (~bhca7d@183.217.201.21) (Ping timeout: 256 seconds)
[08:24:06] <ormaaj> oil translates shell into a custom nonstandard language. It didn't turn out to be anything like the initial description in the blog.
[08:26:07] *** Joins: yac (~user@user/yac)
[08:26:37] *** Joins: sinaowolabi_ (~SinaOwola@102.134.114.1)
[08:27:34] *** Quits: ferdna (~ferdna@user/ferdna) (Quit: Leaving)
[08:27:37] *** Joins: duderonomy (~duderonom@c-73-158-190-156.hsd1.ca.comcast.net)
[08:33:27] *** Quits: anaveragehuman (~anaverage@user/anaveragehuman) (Ping timeout: 276 seconds)
[08:33:32] *** Quits: mithrin (~mithrin@stip-static-62.213-81-207.telecom.sk) (Read error: Connection reset by peer)
[08:33:39] *** Joins: medard (~mithrin@stip-static-62.213-81-207.telecom.sk)
[08:40:46] *** Quits: skapata (~Skapata@user/skapata) (Remote host closed the connection)
[08:45:53] *** Joins: nickdiazswag209 (~bjpenn_@98.42.87.100)
[08:46:06] *** Quits: ElPresidente (~ElPreside@172-125-150-28.lightspeed.tukrga.sbcglobal.net) (Quit: Leaving)
[08:47:07] <e36freak> ormaaj: because that makes sense
[08:47:46] <ormaaj> it may.
[08:48:22] <ormaaj> the way oil does it isn't particularly useful.
[08:48:25] *** Joins: ElPresidente (~ElPreside@172-125-150-28.lightspeed.tukrga.sbcglobal.net)
[08:50:42] *** Quits: nickdiazswag209 (~bjpenn_@98.42.87.100) (Ping timeout: 250 seconds)
[08:51:41] *** Joins: nickdiazswag209 (~bjpenn_@98.42.87.100)
[08:53:20] <ormaaj> it does have to parse shell and appaently does a decent job. that part may be usefully reusable. but then there are a ton of other parsers out there to borrow from if I were so inclined.
[08:54:21] *** Quits: timj (~timj@user/timj) (Ping timeout: 256 seconds)
[09:01:51] <ormaaj> If you don't like fish, oil isn't a big development. It's like if fish came with a feature to translate your bash scripts. Pointless.
[09:11:01] *** Joins: timj (~timj@user/timj)
[09:12:20] *** Quits: akoana (~ah@user/akoana) (Quit: leaving)
[09:17:57] *** Joins: sudomann (~sudomann@2601:543:100:4fc8:dc64:3ab8:7f09:81e5)
[09:19:51] *** Joins: yac_ (~user@user/yac)
[09:20:11] *** Joins: yac__ (~user@user/yac)
[09:27:16] *** Joins: malina (~malina@user/malina)
[09:30:01] *** Quits: riff-IRC (~riff-IRC@user/riff-irc) (Remote host closed the connection)
[09:31:16] *** Joins: riff-IRC (~riff-IRC@user/riff-irc)
[09:36:24] *** Quits: crashrep (~crashrep@user/crashrep) (Quit: WeeChat 3.4)
[09:47:01] *** Quits: zebrag (~chris@user/zebrag) (Quit: Konversation terminated!)
[09:51:29] <uuidNuni1> https://man.archlinux.org/man/dash.1#Arithmetic_Expansion
[09:51:47] <uuidNuni1> this shell is so simple
[09:52:21] *** Joins: chomwitt (~chomwitt@athedsl-15695.home.otenet.gr)
[09:52:31] <emanuele6> it has its quirks
[09:53:29] <emanuele6> for example, on the same version of dash, [^a] can have different behaviours depending on how dash was compiled
[09:54:16] <emanuele6> on archlinux, [^a] typically matches either '^' or 'a'; while on debian, it typically matches anything but 'a'
[09:56:24] <emanuele6> this is because dash can be compiled to either use the system's fnmatch() or a custom implementation of filename matching. on debian, it is generally compiled to use the system's fnmatch() that has [^a] as an extension.
[09:59:17] *** Joins: Doraemon (~NeoCron@p200300c4cf146c0091a78f8614b30205.dip0.t-ipconnect.de)
[10:00:42] *** Joins: chasmo77 (~chas77@c-71-193-246-4.hsd1.or.comcast.net)
[10:01:21] *** Joins: robobo7 (~robobo@c-e52c524e.015-74-6762675.bbcust.telenor.se)
[10:01:46] *** Quits: NeoCron (~NeoCron@p200300c4cf4baa00766f97a7a0c56948.dip0.t-ipconnect.de) (Ping timeout: 250 seconds)
[10:06:20] *** Joins: irc_user (uid423822@id-423822.lymington.irccloud.com)
[10:08:32] *** Quits: sinaowolabi_ (~SinaOwola@102.134.114.1) (Ping timeout: 240 seconds)
[10:09:21] <uuidNuni1> emanuele6: inconsistent?
[10:11:59] *** Quits: Thanatermesis (~Thanaterm@191.92.148.122) (Ping timeout: 256 seconds)
[10:18:38] *** Joins: fivegruel (~fivegruel@HSI-KBW-095-208-248-017.hsi5.kabel-badenwuerttemberg.de)
[10:20:50] *** Quits: dre (~dre@2001:8003:c932:c301:2a14:8300:3b99:1684) (Ping timeout: 250 seconds)
[10:21:05] *** Joins: sinaowolabi_ (~SinaOwola@160.152.43.247)
[10:30:07] *** Quits: chomwitt (~chomwitt@athedsl-15695.home.otenet.gr) (Ping timeout: 256 seconds)
[10:30:25] *** Quits: lunario_ (~no@vmi455770.contaboserver.net) (Ping timeout: 268 seconds)
[10:33:12] *** Joins: ahammer (~ahammer@157.122.68.240)
[10:33:34] *** Quits: ahammer (~ahammer@157.122.68.240) (Client Quit)
[10:36:26] *** Quits: rgrinberg (~textual@2806:101e:7:2b:6129:f312:6bd3:a55) (Ping timeout: 250 seconds)
[10:38:25] *** Joins: bluepenquin_ (uid536555@id-536555.hampstead.irccloud.com)
[10:38:35] *** Quits: A|an (~Alan@173.218.175.171) (Quit: A|an)
[10:40:17] *** Quits: jonakeys (jonathan@gateway/vpn/airvpn/jonakeys) (Quit: WeeChat 3.4)
[10:41:12] *** Joins: jonakeys (jonathan@gateway/vpn/airvpn/jonakeys)
[10:41:33] *** Joins: euouae (~euouae@user/euouae)
[10:42:05] <euouae> Hello, when I run make I run into this error, https://github.com/FStarLang/kremlin/blob/master/misc/Makefile.basic#L10-L12
[10:43:25] <euouae> when I try `KREMLIN_HOME=...; make` I get an error but if I try `KREMLIN_HOME=... make` it works
[10:43:29] <euouae> what is the difference?
[10:44:35] *** Quits: trekkie1701c (~trekkie17@user/trekkie1701c) (Quit: :P)
[10:44:38] *** Joins: braqy90820 (~bray90820@173.25.193.244)
[10:45:02] <grawity> euouae: normal variable assignments are not exported to the environment by default (unless the variable was marked as 'exported' previously)
[10:45:06] <ormaaj> euouae: one exports the variable to the command
[10:45:35] <grawity> meanwhile assignments in the same command line are *only* exported to that command (but don't persist otherwise)
[10:45:40] *** Joins: jonakeys_ (jonathan@gateway/vpn/airvpn/jonakeys)
[10:46:13] <braqy90820> So i am creating a vereable with the command mime=$(grep -o '"mime_type":"audio/mpeg"}}},"saved_' koolfm.txt | rev | cut -c 13- | rev) how would I use a wildcard in place of mpeg
[10:46:53] <ormaaj> # x=yo; y=jo bash -c 'export -p x y'
[10:46:55] <shbot> ormaaj: no output
[10:48:32] *** Quits: jonakeys (jonathan@gateway/vpn/airvpn/jonakeys) (Ping timeout: 240 seconds)
[10:48:39] <ormaaj> # x=yo; y=jo bash -c 'typeset -xp x y'
[10:48:40] <shbot> ormaaj: bash: line 1: typeset: x: not found
[10:48:40] <shbot> ormaaj: declare -x y="jo"
[10:50:22] <euouae> grawity what is the environment?
[10:51:10] *** Joins: chomwitt (~chomwitt@2a02:587:dc0b:200:12c3:7bff:fe6d:d374)
[10:51:57] *** Quits: karakedi (~eAC53C340@user/karakedi) (Remote host closed the connection)
[10:53:12] <grawity> a list of variable=value assignments that each process has
[10:53:19] <grawity> it's inherited when new processes are spawned
[10:53:39] <euouae> every process is spawned by another process?
[10:53:54] <euouae> That's what `init` does right? OK thank you
[10:54:05] *** Joins: karakedi (~eAC53C340@user/karakedi)
[10:55:43] <grawity> yes
[10:55:47] *** Joins: Mo (~Mo@dynamic-077-000-146-184.77.0.pool.telefonica.de)
[10:55:53] <grawity> the kernel spawns init (pid1), init spawns stuff, etc
[10:56:05] <grawity> when you run `make` from shell, it inherits the shell's environment
[10:56:06] <euouae> braqy90820, wouldn't you just use -E with grep to use regexps?
[10:56:17] *** Joins: Csm319_ (~csm3105@143.red-83-48-84.staticip.rima-tde.net)
[10:56:29] <euouae> grawity, this makes a lot of sense and it's new to me
[10:56:32] *** Joins: bluedust_ (~bluedust@103.161.144.94)
[10:56:35] <braqy90820> I have no idea to be honest
[10:56:51] <euouae> braqy90820 did you write this command yourself or did you find it somewhere?
[10:57:17] <braqy90820> I wrote it a long time ago
[10:57:36] *** Quits: zaz\ (~zaz@poneybl.eu) (Quit: bye)
[10:57:43] *** Joins: gamara (~gamara@cpe9050cade20e3-cm9050cade20e0.cpe.net.cable.rogers.com)
[10:57:51] <gamara> hey anyone know why a script would print % as a last character?
[10:58:01] <braqy90820> I wrote it a long time ago so I don't remember much of how it works
[10:59:29] *** Quits: bkhl (~bkhl@user/bkhl) (Remote host closed the connection)
[10:59:53] *** Joins: zaz\ (~zaz@poneybl.eu)
[10:59:59] *** Quits: unop (~unop@194.154.249.71) (Remote host closed the connection)
[11:00:02] *** Quits: bluedust (~bluedust@117.207.235.4) (Ping timeout: 240 seconds)
[11:00:14] *** Joins: unop (~unop@194.154.249.71)
[11:00:18] <grawity> euouae: to clarify, commands run from the shell are spawned directly by the shell (and things in Makefiles are spawned directly by make); it's mainly services that descend directly from init
[11:02:08] *** Joins: rgrinberg (~textual@2806:101e:7:2b:f4e6:13e8:c8a9:3722)
[11:02:55] <euouae> braqy90820 try mime=$(grep -o -E '"mime_type":"audio/.*"}}},"saved_' koolfm.txt | rev | cut -c 13- | rev)
[11:03:51] <euouae> grawity yeah, and does init have an initial empty environment or not?
[11:03:57] *** Joins: cm315 (~csm3105@143.red-83-48-84.staticip.rima-tde.net)
[11:04:09] *** Quits: zaz\ (~zaz@poneybl.eu) (Client Quit)
[11:04:17] <euouae> I'm guessing that this is a system specific question
[11:04:35] <geirha> ugh, use a json parser to parse json
[11:04:38] *** Joins: zaz\ (~zaz@poneybl.eu)
[11:04:40] *** Quits: zaz\ (~zaz@poneybl.eu) (Remote host closed the connection)
[11:05:09] *** Joins: zaz\ (~zaz@poneybl.eu)
[11:05:14] *** Quits: gamara (~gamara@cpe9050cade20e3-cm9050cade20e0.cpe.net.cable.rogers.com) (Quit: Client closed)
[11:05:33] *** Quits: zaz\ (~zaz@poneybl.eu) (Remote host closed the connection)
[11:06:32] <braqy90820> euouae: That did not seem to work \
[11:06:36] <braqy90820> Empty vareable
[11:06:41] <euouae> geirha ooh that's what this is? yeah you're right. `jq` works for me
[11:07:25] <geirha> mime=$(jq -r '.path.to.mime_type' file)
[11:07:32] *** Quits: Csm319_ (~csm3105@143.red-83-48-84.staticip.rima-tde.net) (Ping timeout: 240 seconds)
[11:07:44] *** Joins: zaz\ (~zaz@poneybl.eu)
[11:08:54] *** Joins: ekathva (~ekathva@88-114-118-220.elisa-laajakaista.fi)
[11:09:18] <braqy90820> geirha: That was meant for me?
[11:09:58] <geirha> yes. jq is a good tool for parsing json, though not standard, so you have to install it first
[11:10:21] <braqy90820> Yeah I don't wanna deal with installing other stuff
[11:10:29] *** Joins: bkhl (~bkhl@user/bkhl)
[11:10:41] <ormaaj> euouae: the posix_spawn and exec variants all take an envp arg. An environment gets passed along explicitly.
[11:10:43] <geirha> simpler than trying to parse json with grep rev and cut
[11:11:01] *** Quits: bkhl (~bkhl@user/bkhl) (Remote host closed the connection)
[11:11:13] <ormaaj> oh whoops that question was a while ago
[11:11:52] <euouae> but that's good to know ormaaj. So there's an environment passing mechanism but it can be arbitrary
[11:12:11] <geirha> python is also an option for parsing json. Comes preinstalled on many OSes
[11:12:24] *** Joins: Bercik (~Redomen@89-73-136-211.dynamic.chello.pl)
[11:12:24] *** Quits: Bercik (~Redomen@89-73-136-211.dynamic.chello.pl) (Changing host)
[11:12:24] *** Joins: Bercik (~Redomen@user/bercik)
[11:12:28] <ormaaj> ya
[11:12:30] <euouae> ormaaj is it the particular exec variant that decides whether the environment is one-off or persistent?
[11:15:03] *** Quits: unop (~unop@194.154.249.71) (Remote host closed the connection)
[11:15:38] *** Joins: unop (~unop@194.154.249.71)
[11:17:51] <ormaaj> not sure what you mean. every process has an environment set up by the parent process or the program that was running in the same process prior to exec. I'm describing the portable wrapper functions for syscalls too. The OS is free to support other things associated with processes. Like windows for example. It has a kind of "global" environment variable.
[11:17:56] *** Joins: fedenix (~fedenix@gateway/tor-sasl/fedenix)
[11:23:08] *** Joins: chenqisu1 (~bhca7d@183.217.201.21)
[11:24:28] *** Joins: lewisje (~lewisje@72.49.207.113)
[11:24:49] <grawity> euouae: IIRC init has a *very* minimal environment at first – though, on Linux, it inherits kernel command line settings as "environment", then cleans them up before spawning things
[11:25:08] *** Joins: jonakeys (jonathan@gateway/vpn/airvpn/jonakeys)
[11:25:16] *** Joins: martinus__ (~martin@127.59.202.77.rev.sfr.net)
[11:25:20] <euouae> OK what I'm thinking is this
[11:25:40] <euouae> If I do `FOO=bar` and then run `program`, does program have FOO or not?
[11:25:52] <euouae> in its environment
[11:25:58] <grawity> in shell? it depends on whether the shell considers FOO as "exported"
[11:26:04] <euouae> OK got it now
[11:26:17] <grawity> if the shell variable FOO was already inherited from environment, it is usually exported automatically
[11:26:24] <grawity> but if not, then you may need to explicitly `export` ot
[11:26:27] <grawity> e.g. export FOO=bar
[11:26:34] <grawity> or `FOO=bar; export FOO` in certain old shells
[11:26:38] <ormaaj> Now you're back to talking about bash specifics.
[11:26:46] <euouae> yay!
[11:27:15] <grawity> ormaaj: AFAIK, Windows doesn't have global environment, it just has a central place from where the environment is initialized upon login, much like /etc/profile on Linux
[11:27:47] <grawity> the environment variable editor also sends a broadcast wm_* message which e.g. Explorer reacts to and refreshes its environment from registry, creating the illusion of "global" environment
[11:27:56] <grawity> I think zsh and fish have something similar
[11:28:02] *** Quits: jonakeys_ (jonathan@gateway/vpn/airvpn/jonakeys) (Ping timeout: 240 seconds)
[11:29:15] <ormaaj> grawity: Yeah I never looked into the details. Haven't looked into WSL yet either.
[11:31:25] <ormaaj> For regular windows processes some of that is probably evolved from whatever the DOS semantics were.
[11:33:07] <grawity> iirc DOS semantics were inspired by Unix anyway
[11:33:17] <grawity> not like VMS "logicals" which can actually be global
[11:35:35] *** Quits: uuidNuni1 (~weechat@193.123.227.17) (Remote host closed the connection)
[11:35:53] *** Joins: infl00p4 (~infl00p@139.162.131.62)
[11:35:57] *** Joins: uuidNuni1 (~weechat@193.123.227.17)
[11:40:43] *** Joins: tobybl (~tobybl@248.195.115.87.dyn.plus.net)
[11:41:01] *** Quits: rgrinberg (~textual@2806:101e:7:2b:f4e6:13e8:c8a9:3722) (Quit: My MacBook has gone to sleep. ZZZzzz…)
[11:41:57] <ormaaj> <grawity> "the environment variable..." <- Ah interesting. So it's more fake explorer sugar. ^^ like "zip folders" and "shortcuts".
[11:42:22] *** Joins: mowcat (~mowcat@2a00:23c5:d190:1901:f22f:74ff:fe77:1e1c)
[11:44:45] <ormaaj> i should get back into studying wine. It's a little simpler than real windows.
[11:46:06] *** Quits: loganlee (~Thunderbi@user/loganlee) (Quit: loganlee)
[11:46:35] <ormaaj> or at least a little more transparent.
[11:46:56] <grawity> ormaaj: just like /dev/tcp lol
[11:47:28] <euouae> Is it possible to set two variables at the same time?
[11:47:32] <grawity> yes
[11:47:34] <ormaaj> right :)
[11:47:40] <euouae> FOO=bar program; works but I want to set up two? Or do I have to use export now
[11:47:46] <grawity> FOO=bar BAZ=qux program
[11:47:49] <euouae> ah nice!
[11:48:11] <euouae> thank you
[11:48:19] *** Joins: lavaball (~Melissa@31.204.155.215)
[11:50:49] *** Joins: razzd777 (~razzd777@2603:9000:2503:5600:83eb:94be:f206:3b50)
[11:51:03] *** Quits: razzd777 (~razzd777@2603:9000:2503:5600:83eb:94be:f206:3b50) (Changing host)
[11:51:03] *** Joins: razzd777 (~razzd777@user/razzd777)
[11:51:11] <uuidNuni1> you can set as many as you want
[11:52:26] *** Joins: iomari891 (~iomari891@197.210.70.203)
[11:52:45] <euouae> Yeah, I had a case where I needed two and I wasn't sure if I could do it without using `export`.
[11:56:38] *** Quits: unop (~unop@194.154.249.71) (Remote host closed the connection)
[11:56:53] *** Joins: unop (~unop@194.154.249.71)
[11:58:13] *** Quits: Betal (~Betal@user/betal) (Quit: WeeChat 3.4)
[11:59:57] *** Joins: MajorBiscuit (~MajorBisc@c-001-020-016.client.tudelft.eduvpn.nl)
[11:59:58] *** Quits: iomari891 (~iomari891@197.210.70.203) (Quit: WeeChat 3.3)
[12:01:12] *** Joins: iomari891 (~iomari891@197.210.71.129)
[12:01:33] *** Joins: TomyWork (~TomyLobo@p200300e80f006700e1760fa81e31a124.dip0.t-ipconnect.de)
[12:01:37] *** Quits: richardm75 (~richardm7@2600:8801:c507:b200:79ab:b4c:bb8:341b) (Ping timeout: 240 seconds)
[12:02:38] *** Joins: yustin (~yustin@user/yustin)
[12:05:09] *** Quits: sinaowolabi_ (~SinaOwola@160.152.43.247) (Ping timeout: 256 seconds)
[12:08:35] *** Joins: aakashi2001 (~aakashi20@user/aakashi2001)
[12:09:03] *** Joins: thiras (~thiras@user/thiras)
[12:09:30] *** Joins: dreamon (~dreamon@ppp-88-217-76-15.dynamic.mnet-online.de)
[12:11:51] *** Quits: aakashi2001 (~aakashi20@user/aakashi2001) (Client Quit)
[12:12:53] *** Joins: rendar (~rendar@user/rendar)
[12:13:32] *** Joins: docmax (~docmax@dynamic-095-112-108-226.95.112.pool.telefonica.de)
[12:13:40] <docmax> hello
[12:13:59] <docmax> how can i send this command to the host?:
[12:14:04] <docmax> snapper rm $(snapper ls | sed -n 4p | cut -d "|" -f 1)
[12:14:22] *** Quits: aidalgol (~aidalgol@user/aidalgol) (Ping timeout: 250 seconds)
[12:14:30] <docmax> ssh root@host "snapper rm $(snapper ls | sed -n 4p | cut -d "|" -f 1)"  doesnt work because $() is not resolved
[12:14:50] *** Quits: braqy90820 (~bray90820@173.25.193.244) (Quit: KVIrc 5.0.0 Aria http://www.kvirc.net/)
[12:15:09] *** Joins: loganlee (~Thunderbi@user/loganlee)
[12:16:52] *** Joins: shad (~shad@user/shad)
[12:18:07] *** Joins: Lantizia (~Lantizia@195.62.201.126)
[12:18:22] *** Joins: aidalgol (~aidalgol@user/aidalgol)
[12:18:54] <Lantizia> if you've got 6 randomly named variables and you want to count how many actually have something in them (but you don't care what is in them... just that they've been set at all)... is there any better way of doing that than a bunch of if statements?
[12:22:10] <osse> tmp=${a:+.}${b:+.}${c:+.}${d:+.}${e:+.}${f:+.}; count=${#tmp}
[12:22:17] <uuidNuni1> ssh "$i" "r=\$(uname -r) ; d=\$(ls /lib/modules | sort -rV | head -n1); echo -e \"runtime: \$r\ninstall: \$d\" ; if [[ \$r != \$d ]] ; then echo -e \"\e[0;31mneeds reboot\e[0m\" ; fi "
[12:22:35] <emanuele6> '
[12:22:44] <uuidNuni1> holy shit
[12:22:57] *** Joins: Earnestly (~earnest@user/earnestly)
[12:23:32] <uuidNuni1> for i in host1 host2 host3 ... ; do above ssh command ; done
[12:24:25] <docmax> ssh root@host "echo $HOSTNAME"
[12:24:43] *** Joins: AquaL1te (~AquaL1te@user/aqual1te)
[12:24:52] <docmax> how can i get the hostname of the host? (not the local host)?
[12:25:12] <uuidNuni1> https://0x0.st/o-k1.txt
[12:25:30] <uuidNuni1> docmax: uname -n
[12:25:38] *** Joins: enoq (~enoq@2a05:1141:1f5:5600:b9c9:721a:599:bfe7)
[12:25:55] *** Joins: _gabriele (~gabriele@host-87-14-108-250.retail.telecomitalia.it)
[12:25:56] *** Quits: _gabriele (~gabriele@host-87-14-108-250.retail.telecomitalia.it) (Changing host)
[12:25:56] *** Joins: _gabriele (~gabriele@user/gabriele)
[12:25:56] *** _gabriele is now known as gabriele
[12:25:59] <uuidNuni1> do not use hostname, is it a third party pkg. just use uname -n , it works on linux and macOS
[12:26:07] <docmax> uuidNuni1, no want exactly the command "echo $HOSTNAME"
[12:26:19] *** Quits: bluedust_ (~bluedust@103.161.144.94) (Remote host closed the connection)
[12:26:20] <uuidNuni1> echo \$HOSTNAME
[12:26:29] <uuidNuni1> escape the $
[12:26:34] <docmax> oh cool works
[12:27:44] <uuidNuni1> docmax: or you can use single quote
[12:28:05] <uuidNuni1> ssh root@host 'echo $HOSTNAME' // this way the $ is expanded remotely
[12:29:30] <euouae> Lantizia you can use the return value of printenv
[12:29:43] <euouae> it's 1 for a set variable and 0 for unset, that's one way, and I think bash has other ways to also do it
[12:29:56] <euouae> oh sorry, it's 0 for set and 1 for unset
[12:30:24] *** Joins: bomb-on (~bomb-on@194.144.47.113)
[12:34:26] <uuidNuni1> # n='' ; for i in BASH TERM ZSH ; do [[ $i ]] && n+=1 ; done ; echo ${#n}
[12:34:27] <shbot> uuidNuni1: 3
[12:34:39] *** Joins: dre (~dre@2001:8003:c932:c301:1533:19c3:8abd:b2d5)
[12:34:48] *** Quits: lavaball (~Melissa@31.204.155.215) (Remote host closed the connection)
[12:34:50] <uuidNuni1> what?
[12:36:13] <uuidNuni1> # n='' ; for i in BASH TERM ZSH ; do typeset -n ref=$i ; [[ ${$ref} ]] && n+=1 ; done ; echo ${#n}
[12:36:14] <shbot> uuidNuni1: bash: ${$ref}: bad substitution
[12:36:31] <uuidNuni1> # n='' ; for i in BASH TERM ZSH ; do typeset -n ref=$i ; [[ $ref ]] && n+=1 ; done ; echo ${#n}
[12:36:33] <shbot> uuidNuni1: 2
[12:36:41] <uuidNuni1> ok ^^^ Lantizia
[12:38:00] *** Quits: N4buc0 (~N4buc0@2804:7f4:348a:c4ae:e20c:8a7d:bfa1:8087) (Remote host closed the connection)
[12:39:10] <osse> # tmp=${BASH:+.}${TERM:+.}${ZSH:+.}; count=${#tmp}; echo $count
[12:39:11] <shbot> osse: 2
[12:39:15] <osse> \o/
[12:39:38] *** Quits: razzd777 (~razzd777@user/razzd777) (Quit: Leaving)
[12:39:47] *** Joins: razzd777_ (~razzd777@user/razzd777)
[12:39:55] *** Joins: sinaowolabi_ (~SinaOwola@160.152.43.247)
[12:39:57] *** Quits: razzd777_ (~razzd777@user/razzd777) (Remote host closed the connection)
[12:40:17] *** Joins: razzd777 (~razzd777@user/razzd777)
[12:41:19] <uuidNuni1> osse: hack
[12:41:35] <osse> hmm?
[12:42:28] <uuidNuni1> yours is simpler have to say
[12:44:49] *** Joins: bluedust (~bluedust@103.161.144.94)
[12:45:42] *** Joins: N4buc0 (~N4buc0@2804:7f4:348a:c4ae:f93b:a580:30af:53b2)
[12:46:27] *** Quits: razzd777 (~razzd777@user/razzd777) (Quit: Leaving)
[12:48:10] *** Quits: shad (~shad@user/shad) (Ping timeout: 250 seconds)
[12:48:15] *** Quits: winstonsmith (~winstonsm@gateway/vpn/pia/winstonsmith) (Remote host closed the connection)
[12:48:38] *** Joins: winstonsmith (~winstonsm@gateway/vpn/pia/winstonsmith)
[12:50:07] *** Joins: stonkey (~stonkey@user/stonkey)
[12:51:11] *** Quits: Atque (~Atque@user/atque) (Quit: ...)
[12:51:40] <uuidNuni1> this also work :
[12:51:51] *** Joins: shad (~shad@user/shad)
[12:51:56] <uuidNuni1> # unset n ; for i in BASH TERM ZSH ; do [[ ${!i} ]] && n+=1 ; done ; echo ${#n}
[12:51:57] <shbot> uuidNuni1: 2
[12:53:18] <Soliton> it sounds like they want to check for set not for non-empty.
[12:53:30] <uuidNuni1> Lantizia: If the first character of parameter is an exclamation point (!), and parameter is not a nameref, it introduces a level of indirection.
[12:54:32] *** Quits: sinaowolabi_ (~SinaOwola@160.152.43.247) (Ping timeout: 240 seconds)
[12:54:59] *** Joins: mithrin (~mithrin@188-167-233-152.dynamic.chello.sk)
[12:55:18] <uuidNuni1> # unset n ; for i in BASH TERM ZSH ; do [[ -v $i ]] && n+=1 ; done ; echo ${#n}
[12:55:19] <shbot> uuidNuni1: 2
[12:55:31] <uuidNuni1> ^^^ that is for set
[12:56:29] *** Joins: gaude (~gaude@114-39-142-46.pool.kielnet.net)
[12:57:06] <uuidNuni1> # BASH='' ; unset TERM ; ZSH='bash' ; unset n ; for i in BASH TERM ZSH ; do [[ -v $i ]] && n+=1 ; done ; echo ${#n}
[12:57:08] <shbot> uuidNuni1: 2
[12:57:54] <uuidNuni1> # BASH='' ; unset TERM ; ZSH='bash' ; unset n ; for i in BASH TERM ZSH ; do [[ ${!i} ]] && n+=1 ; done ; echo ${#n}
[12:57:56] <shbot> uuidNuni1: 1
[12:57:59] <uuidNuni1> binggo
[12:57:59] *** Joins: sinaowolabi_ (~SinaOwola@160.152.43.247)
[12:58:06] <uuidNuni1> that is my bash...
[12:58:25] <euouae> :D
[12:59:47] *** Quits: erhandsome (~erhandsom@user/erhandsome) (Quit: ZNC 1.7.2+deb3 - https://znc.in)
[12:59:57] *** Joins: erhandsome (~erhandsom@user/erhandsome)
[13:05:48] *** Joins: hlauk (~hlauk@176.33.97.244)
[13:06:56] <gaude> is there some way to sed on partially binary strings?  if have some string followed by binary data but when i want to get rid of the binary stuff with sed it does not work like: "string:binarystuff" | sed 's/:.*//'  gives "stringotherbinarystuff"
[13:07:13] <gaude> or some non sed way to get rid of it
[13:07:15] <gaude> ?
[13:08:49] *** Joins: lsrtl_ (~lsrtl@user/lsrtl)
[13:09:00] <emanuele6> is "string:binarystuff" a bash variable?
[13:10:20] <uuidNuni1> # echo "string:binarystuff" | cut -d: -f1
[13:10:21] <shbot> uuidNuni1: string
[13:10:28] <Soliton> use the C locale.
[13:11:08] <emanuele6> it string:binarystuff is a bash variable, you are probably losing data by storing it there.
[13:12:36] <Soliton> if the string is in a variable using sed is silly.
[13:12:56] *** Quits: hlauk (~hlauk@176.33.97.244) (Quit: Leaving)
[13:16:07] *** Joins: n4dir (~user@i5E866656.versanet.de)
[13:16:20] *** Joins: furrymcgee (~devuan@cgn-89-1-208-165.nc.de)
[13:19:24] <Earnestly> gaude: bash will truncate any data after a nul byte
[13:19:29] <Earnestly> In a variable that is
[13:20:25] <Soliton> no, it will remove the NUL bytes.
[13:20:42] <emanuele6> yeah, it will ignore the NUL bytes and print an error message
[13:20:55] <emanuele6> but it succeed and store the rest of the data
[13:21:08] <emanuele6> # a=$(printf 'a\0b'); declare -p a
[13:21:09] <shbot> emanuele6: bash: warning: command substitution: ignored null byte in input
[13:21:09] <shbot> emanuele6: declare -- a="ab"
[13:21:16] <emanuele6> # a=$(printf 'a\0b'); echo "$?"; declare -p a
[13:21:18] <shbot> emanuele6: bash: warning: command substitution: ignored null byte in input
[13:21:18] <shbot> emanuele6: 0
[13:21:18] <shbot> emanuele6: declare -- a="ab"
[13:21:52] *** Parts: euouae (~euouae@user/euouae) ( )
[13:22:02] <emanuele6> (the error message only gets printed once even if there are multiple NUL)
[13:25:01] *** Quits: ElPresidente (~ElPreside@172-125-150-28.lightspeed.tukrga.sbcglobal.net) (Read error: Connection reset by peer)
[13:27:11] *** Joins: ElPresidente (~ElPreside@172-125-150-28.lightspeed.tukrga.sbcglobal.net)
[13:29:36] *** Joins: bluedust_ (~bluedust@117.207.235.4)
[13:30:22] *** Joins: FIlystyn (~piotr@user/filystyn)
[13:30:24] <FIlystyn> hello
[13:30:43] <FIlystyn> I am going to start a longer discussion so I hopy you are ready
[13:30:46] <FIlystyn> because I am not
[13:33:14] *** Quits: bluedust (~bluedust@103.161.144.94) (Ping timeout: 250 seconds)
[13:33:40] *** Quits: quazimodo (~quazimodo@n1-40-220-128.bla1.nsw.optusnet.com.au) (Ping timeout: 250 seconds)
[13:35:15] *** Quits: fivegruel (~fivegruel@HSI-KBW-095-208-248-017.hsi5.kabel-badenwuerttemberg.de) (Ping timeout: 256 seconds)
[13:36:42] *** Quits: bluedust_ (~bluedust@117.207.235.4) (Ping timeout: 250 seconds)
[13:37:33] *** Joins: bluedust (~bluedust@117.207.227.55)
[13:37:36] <FIlystyn> I have a script
[13:37:58] <FIlystyn> Which I expect to take options
[13:38:09] <FIlystyn> for now it just takes stuff in order
[13:38:21] <FIlystyn> so sometimes i write '' '' '' 'option'
[13:38:31] <FIlystyn> which is not very convinient
[13:38:49] <FIlystyn> it's fairly possible to make a mistake
[13:39:28] <FIlystyn> Do we have any tools for setting up, filtering or what ever - options, arguments etc
[13:39:32] *** Quits: mowcat (~mowcat@2a00:23c5:d190:1901:f22f:74ff:fe77:1e1c) (Remote host closed the connection)
[13:39:43] *** Joins: ayustae (Thunderbir@gateway/vpn/protonvpn/ayustae)
[13:39:51] <grawity> I'm not sure what's preferred, but in my scripts I use the builtin `getopts` helper
[13:39:52] <FIlystyn> I had few ideas for a program which would do it for me but maybe possibly trhere is a tool
[13:40:03] <FIlystyn> ok let me man it
[13:40:09] <grawity> it's a bash builtin
[13:40:37] <grawity> it allows handling short options (e.g. -a -b -cde -f file.txt -gh) very easily, can't do --long ones though
[13:41:28] <grawity> the other two methods I've seen were: b) use the similarly named, yet unrelated `getopt` helper from util-linux, or c) roll completely custom --option parsing
[13:41:36] <FIlystyn> i need -a and i need -b + phrase
[13:42:20] <grawity> while getopts ab: OPT; do case $OPT in a) do_the_a_thing=1;; b) the_b_phrase=$OPTARG;; *) exit 2;; esac; done; shift $((OPTIND-1))
[13:42:48] <grawity> the 'ab:' means -a is a simple flag and -b takes a value, like in C getopt()
[13:43:11] <FIlystyn> y
[13:43:36] <Soliton> !faq options
[13:43:36] <greybot> https://mywiki.wooledge.org/BashFAQ/035 -- How can I handle command-line options and arguments in my script easily?
[13:45:03] *** Quits: nickdiazswag209 (~bjpenn_@98.42.87.100) (Ping timeout: 256 seconds)
[13:46:59] <FIlystyn> after looking at man it seems fairly easier than i expected
[13:47:06] <FIlystyn> and covers stuff i neede
[13:47:06] *** Quits: irc_user (uid423822@id-423822.lymington.irccloud.com) (Quit: Connection closed for inactivity)
[13:47:09] <Soliton> !man
[13:47:09] <greybot> bash builtins and keywords do not have separate man-pages, read bash's manual instead or use the help builtin. Rule of thumb: If ''type foo'' says foo is a builtin or keyword, run ''help foo'' or ''man bash'', otherwise try man and/or info.
[13:47:20] <FIlystyn> yeah that is what i did
[13:47:52] <grawity> aw "do not use getopt"
[13:48:09] <FIlystyn> thx for help, I was expecting it to be more problematic
[13:49:13] <grawity> but generally, if I find myself needing long options with Bash's getopts, either I hide them under a short option (e.g. -o this -o that -o foo=bar), like `ssh` does, or I port the entire script to python where I can use argparse
[13:49:20] *** Joins: mowcat (~mowcat@2a00:23c5:d190:1901:f22f:74ff:fe77:1e1c)
[13:49:41] *** Joins: nickdiazswag209 (~bjpenn_@98.42.87.100)
[13:50:20] <FIlystyn> Actualy writing option parser is easy but since it's well designed no need for it
[13:50:48] <grawity> hmm the hard part is replicating all the features and quirks of gnu getopt_long
[13:50:49] *** Quits: Swahili (~Swahili@a95-94-208-187.cpe.netcabo.pt) (Remote host closed the connection)
[13:51:01] *** Joins: Swahili (~Swahili@a95-94-208-187.cpe.netcabo.pt)
[13:51:32] <grawity> if it *looks* like standard getopt_long --long-options, people will expect e.g. that they can use both `--option=value` *and* `--option value`, or that they can shorten --option to --opt
[13:51:42] <grawity> curl's refusal to accept --opt=value annoys me to no end
[13:52:03] <rendar> `echo -e "${0##*/}: ERROR: $@" >&2`    here i should use $* instead of $@, right?
[13:52:32] <grawity> with echo, I think it's almost the same result anyway, but $* would indeed make more sense to me
[13:52:44] *** Quits: jonakeys (jonathan@gateway/vpn/airvpn/jonakeys) (Ping timeout: 250 seconds)
[13:52:52] *** Quits: mowcat (~mowcat@2a00:23c5:d190:1901:f22f:74ff:fe77:1e1c) (Remote host closed the connection)
[13:53:03] <grawity> but if you had something like `printf 'ERROR: %s\n' "$*"` then definitely $*
[13:54:46] *** Joins: jonakeys (jonathan@gateway/vpn/airvpn/jonakeys)
[13:55:20] <Soliton> %b if echo -e was intentional.
[13:57:02] *** Quits: nickdiazswag209 (~bjpenn_@98.42.87.100) (Ping timeout: 240 seconds)
[13:57:34] <rendar> that website which checks bash script gives me $@ as error inside the string, use $* instead
[13:58:00] <grawity> yeah
[13:58:00] <Soliton> !echo-e
[13:58:00] <greybot> echo outputs a string. echo has many portability problems, and should never be used with option flags. Consider printf instead: printf 'name: %s\n' "$name". http://wiki.bash-hackers.org/commands/builtin/echo | http://cfajohnson.com/shell/cus-faq.html#Q0b | http://www.in-ulm.de/~mascheck/various/echo+printf
[13:58:14] <Soliton> use printf as shown. perhaps with %b instead.
[13:58:15] <grawity> it's not strictly an error but it'll indeed have undesired results a lot of the time
[14:00:19] *** Joins: lavaball (felix@31.204.155.215)
[14:01:42] *** Joins: seninha (~seninha@user/seninha)
[14:11:32] *** Quits: Lord_of_Life (~Lord@user/lord-of-life/x-2819915) (Ping timeout: 240 seconds)
[14:12:43] *** Joins: Lord_of_Life (~Lord@user/lord-of-life/x-2819915)
[14:14:25] *** Quits: betamax65 (~betamax65@user/betamax65) (Quit: Don't play, don't give the game away)
[14:14:59] *** Joins: mowcat (~mowcat@2a00:23c5:d190:1901:f22f:74ff:fe77:1e1c)
[14:15:44] *** Quits: loganlee (~Thunderbi@user/loganlee) (Quit: loganlee)
[14:16:08] *** Joins: drd (~drd@93-45-53-200.ip101.fastwebnet.it)
[14:18:49] *** Joins: nickdiazswag209 (~bjpenn_@98.42.87.100)
[14:21:56] <pj> !shbot
[14:21:56] <greybot> shbot runs each session in a new VM as root. Feel free to play with the bot in #evalbot. | Original: http://www.vidarholen.net/contents/evalbot/ | geirha's fork: https://gitlab.com/geirha/shbot | current triggers: /msg shbot triggers
[14:23:30] *** Quits: nickdiazswag209 (~bjpenn_@98.42.87.100) (Ping timeout: 250 seconds)
[14:23:34] *** Quits: bluedust (~bluedust@117.207.227.55) (Remote host closed the connection)
[14:27:48] *** Quits: freep (~freepppp@62.1.174.38.dsl.dyn.forthnet.gr) (Read error: Connection reset by peer)
[14:28:14] *** Joins: freep (~freepppp@62.1.174.38.dsl.dyn.forthnet.gr)
[14:30:17] *** Quits: sinaowolabi_ (~SinaOwola@160.152.43.247) (Remote host closed the connection)
[14:31:18] *** Quits: jinsun (~quassel@user/jinsun) (Ping timeout: 250 seconds)
[14:31:40] *** Joins: nerdwolf (~nerdwolf@103.79.248.148)
[14:31:42] *** Joins: nickdiazswag209 (~bjpenn_@98.42.87.100)
[14:32:22] *** Joins: jinsun (~quassel@user/jinsun)
[14:34:53] *** Quits: jinsun (~quassel@user/jinsun) (Client Quit)
[14:35:08] *** Joins: john_johnk (~Thunderbi@1.59.140.77.rev.sfr.net)
[14:35:52] *** Joins: jinsun (~quassel@user/jinsun)
[14:36:04] *** Quits: nickdiazswag209 (~bjpenn_@98.42.87.100) (Ping timeout: 250 seconds)
[14:36:44] *** Joins: nickdiazswag209 (~bjpenn_@98.42.87.100)
[14:36:58] *** Quits: malina (~malina@user/malina) (Remote host closed the connection)
[14:39:35] *** Quits: fluter (~fluter@user/fluter) (Read error: Connection reset by peer)
[14:40:24] *** Quits: humky (~humky@user/humky) (Ping timeout: 250 seconds)
[14:41:02] *** Quits: nickdiazswag209 (~bjpenn_@98.42.87.100) (Ping timeout: 240 seconds)
[14:42:03] *** Joins: nickdiazswag209 (~bjpenn_@98.42.87.100)
[14:42:11] *** Quits: nerdwolf (~nerdwolf@103.79.248.148) (Remote host closed the connection)
[14:42:44] *** Joins: razzd777 (~razzd777@user/razzd777)
[14:43:01] *** Quits: Gooberpatrol66 (~Gooberpat@user/gooberpatrol66) (Remote host closed the connection)
[14:43:25] *** Joins: Gooberpatrol66 (~Gooberpat@user/gooberpatrol66)
[14:43:57] *** Joins: nerdwolf (~nerdwolf@103.79.248.148)
[14:46:28] *** Quits: nickdiazswag209 (~bjpenn_@98.42.87.100) (Ping timeout: 250 seconds)
[14:48:48] *** Joins: herjazz (~herjazz@p6758124-ipngn30801marunouchi.tokyo.ocn.ne.jp)
[14:50:58] *** Quits: emanuele6 (~emanuele6@user/emanuele6) (Quit: WeeChat 3.4)
[14:52:28] *** Joins: andril (~andril@c-66-229-99-96.hsd1.fl.comcast.net)
[14:53:41] <Earnestly> Anyone ever used or found a use for qrls(1p)?
[14:54:55] <Earnestly> This appears to be quite new, 2017
[14:55:22] <grawity> qrls specifically or the entire "Chapter 3, Batch Environment Services"?
[14:55:25] <Earnestly> Hm, qselect(1p) seems more helpful for explaining general concept
[14:55:45] <grawity> looks somewhat interesting
[14:55:53] <Earnestly> qrls claims to be new, as compliment to qhold.  No idea how old the rest are, never came across before
[14:57:06] <grawity> first time I see this, but it immediately reminds me of when I was reading the SunOS 4 manual earlier
[14:57:10] <grawity> has the same Unix-y feel to it
[14:58:11] <Earnestly> The only context I have is https://github.com/leahneukirchen/nq
[14:58:31] *** Quits: rustyshackleford (uid236774@id-236774.helmsley.irccloud.com) (Quit: Connection closed for inactivity)
[14:59:36] *** Joins: bluedust (~bluedust@117.207.227.55)
[15:01:11] <geirha> They're marked with [OB] Obsolescent though
[15:01:14] <Earnestly> Appears to be related to HPC/cluster stuff
[15:01:26] *** Quits: gr33n7007h (~gr33n7007@user/gr33n7007h) (Quit: WeeChat 3.4)
[15:01:40] *** Quits: unop (~unop@194.154.249.71) (Remote host closed the connection)
[15:01:48] <Earnestly> Oh, I was only looking at the manuals
[15:02:20] *** Joins: unop (~unop@194.154.249.71)
[15:02:45] *** Joins: BSaboia (~bsaboia@177.37.198.83)
[15:03:00] <Earnestly> geirha: I see it now
[15:04:32] *** Joins: gr33n7007h (~gr33n7007@user/gr33n7007h)
[15:06:16] *** Quits: BSaboia (~bsaboia@177.37.198.83) (Client Quit)
[15:09:53] *** Joins: nyex (~Thunderbi@177.84.107.35)
[15:10:50] *** Joins: cdown (~cdown@163.114.131.1)
[15:11:40] *** Quits: kyr (~kyr@167.71.50.12) (Quit: Lost terminal)
[15:11:59] *** Joins: kyr (~kyr@167.71.50.12)
[15:15:48] *** Quits: fatal (~0x00@user/fatal) (Ping timeout: 276 seconds)
[15:17:24] *** Joins: bkhl (~bkhl@user/bkhl)
[15:20:26] *** Joins: Lorem_Ipsum (~LoremIpsu@2a01:4c8:65:cfc4:aadc:6e39:15a9:dd2)
[15:22:43] *** Quits: freep (~freepppp@62.1.174.38.dsl.dyn.forthnet.gr) (Remote host closed the connection)
[15:22:52] *** Quits: Lorem_Ipsum (~LoremIpsu@2a01:4c8:65:cfc4:aadc:6e39:15a9:dd2) (Client Quit)
[15:23:06] *** Joins: freep (~freepppp@62.1.174.38.dsl.dyn.forthnet.gr)
[15:25:20] *** Joins: BSaboia (~bsaboia@177.37.198.83)
[15:25:43] *** Joins: B1uebird (~palenoon@103.100.150.2)
[15:27:26] *** Quits: potamides (~amnifiliu@2003:a:270f:c400:f1d0:51b2:5ac5:6bdb) (Quit: WeeChat 3.4)
[15:29:33] *** Joins: tirnanog (~tirnanog@user/tirnanog)
[15:32:24] *** Quits: B1uebird (~palenoon@103.100.150.2) (Ping timeout: 250 seconds)
[15:32:35] *** Quits: vishal (~vishal@fedora/vishal) (Quit: ZNC 1.8.2 - https://znc.in)
[15:33:20] *** Joins: humky (~humky@user/humky)
[15:33:29] *** Joins: potamides (~amnifiliu@2003:a:270f:c400:28d8:e046:7d92:3970)
[15:34:01] <ormaaj> # eval let "count=$(compgen -vo nospace -P '${' -S ':+1+}' | tr -d \\n)0"; echo "$count"
[15:34:03] <shbot> ormaaj: 52
[15:36:34] *** Joins: vishal (~vishal@fedora/vishal)
[15:37:08] * ormaaj doesn't know how to use every compgen feature properly.
[15:38:23] *** Quits: cycle5 (~cycle5@c-69-249-113-114.hsd1.pa.comcast.net) (Ping timeout: 256 seconds)
[15:39:49] *** Quits: unop (~unop@194.154.249.71) (Remote host closed the connection)
[15:40:04] *** Joins: unop (~unop@194.154.249.71)
[15:40:31] <geirha> counting variables that are not empty?
[15:40:39] <geirha> implies [0] for arrays though
[15:42:06] *** Quits: gaude (~gaude@114-39-142-46.pool.kielnet.net) (Quit: Client closed)
[15:42:48] *** Joins: fatal (~0x00@user/fatal)
[15:43:54] <ormaaj> asked several hours ago. just tried to 1-up osse's `${a:+.}${b:+.}` but turns out I suck at compgen :)
[15:44:38] <ormaaj> there's really have no choice but newline delims?
[15:44:51] *** Joins: mknod (~mknod@user/mknod)
[15:44:56] <osse> osse's brain best codegen
[15:45:04] <ormaaj> s/have//
[15:45:11] *** Quits: john_johnk (~Thunderbi@1.59.140.77.rev.sfr.net) (Ping timeout: 256 seconds)
[15:45:25] <geirha> yeah, sadly. The lack of a -0 makes it useless for filenames
[15:47:17] <geirha> I've been meaning to suggest it get the ability to update COMPREPLY directly
[15:47:20] *** Joins: sinaowolabi_ (~SinaOwola@160.152.43.247)
[15:47:44] <geirha> (or an arbitrary array var)
[15:48:10] <Soliton> yeah, i think updating an array makes most sense.
[15:48:27] <ormaaj> so much effort put into making that feature and probably hacking around that simple limitation ><
[15:49:51] *** Joins: Wanderer_42 (~Wanderer_@dslb-188-109-015-071.188.109.pools.vodafone-ip.de)
[15:51:14] *** Quits: iomari891 (~iomari891@197.210.71.129) (Quit: WeeChat 3.3)
[15:51:21] *** Joins: Filohuhum (~dante@gateway/tor-sasl/filohuhum)
[15:51:25] *** Quits: rcernin (~rcernin@101.189.141.138) (Ping timeout: 256 seconds)
[15:56:13] *** Quits: BSaboia (~bsaboia@177.37.198.83) (Quit: This computer has gone to sleep)
[15:58:28] *** Quits: Filohuhum (~dante@gateway/tor-sasl/filohuhum) (Remote host closed the connection)
[15:58:39] *** Joins: Filohuhum (~dante@gateway/tor-sasl/filohuhum)
[15:59:45] *** Quits: yustin (~yustin@user/yustin) (Ping timeout: 256 seconds)
[16:01:33] *** chilvers1 is now known as chilversc
[16:01:37] *** Quits: shad (~shad@user/shad) (Ping timeout: 256 seconds)
[16:02:54] *** Joins: fluter (~fluter@user/fluter)
[16:03:12] *** Quits: unop (~unop@194.154.249.71) (Remote host closed the connection)
[16:03:51] *** Joins: unop (~unop@194.154.249.71)
[16:04:53] *** Joins: N4buc0- (~N4buc0@187.59.149.196)
[16:06:19] *** Quits: N4buc0 (~N4buc0@2804:7f4:348a:c4ae:f93b:a580:30af:53b2) (Remote host closed the connection)
[16:07:35] *** Joins: igemnace (~ian@user/igemnace)
[16:10:31] *** Joins: teocle (~t@hex.plasm.in)
[16:10:43] *** Quits: mowcat (~mowcat@2a00:23c5:d190:1901:f22f:74ff:fe77:1e1c) (Remote host closed the connection)
[16:11:30] <teocle> is there a better way of deleting array members than this: `array=($(echo ${array[@]/$1}))
[16:12:11] <Soliton> unset 'array[42]'
[16:12:48] <teocle> so that would entail walking the array, determining the index and then unsetting it?
[16:12:58] <Soliton> if you're often going through your array to remove based on value consider using an assoc array instead.
[16:13:17] <teocle> hmm, yeah, that could work too
[16:13:22] <Soliton> what do you think your code does?
[16:13:30] <ormaaj> if you don't want to unset the whole thing yeah
[16:14:16] <teocle> it just prints the entire array and regexp's (maybe?) that part away and saves it under the same variable
[16:14:42] *** Joins: mowcat (~mowcat@2a00:23c5:d190:1901:f22f:74ff:fe77:1e1c)
[16:14:52] <Soliton> !$(echo
[16:14:52] <greybot> $(echo ...) and echo $(...) are both pointless. Drop the echo and $(), just write ...: rm "$(echo myfile)" -> rm myfile --- echo "$(df -h)" -> df -h; http://www.iki.fi/era/unix/award.html#echo
[16:15:10] <jle> is there some clever way to only match one result of /path/file* or /path/file[1234] if there are multiple results?
[16:16:00] <Soliton> assign to an array and pick what you want.
[16:16:02] *** Quits: wwilliam (~afernande@user/wwilliam) (Ping timeout: 240 seconds)
[16:16:34] *** Joins: wwilliam (~afernande@63.240.73.102)
[16:16:34] *** Quits: wwilliam (~afernande@63.240.73.102) (Changing host)
[16:16:34] *** Joins: wwilliam (~afernande@user/wwilliam)
[16:16:36] <teocle> Soliton: cool, I didn't know about the `echo` thing
[16:17:52] <Soliton> your code is still terrible. abusing wordsplitting, presumably unintentionally treating $1 as a pattern...
[16:18:22] <Soliton> depending on what's in the array you get a completely different array afterwards.
[16:18:38] <teocle> yep, it is pretty hacky, but I do know that $1 is always a number (it's a window ID) and they're all unique
[16:18:59] <teocle> I just realized that using an associative array in this case would not work because the element order is important
[16:19:12] <Soliton> unique as in if one window is 123 there is no window id 1234?
[16:19:18] <teocle> so, I suppose looping over the elements and picking the one that matches and then unsetting it would be a cleaner way of doing it
[16:19:29] <jle> Soliton: ah... /tmp/file*[0] works, thx!
[16:19:42] <Soliton> if it's all numbers then you can use a sparse array.
[16:20:05] <Soliton> jle: that makes no sense.
[16:20:09] *** Quits: andril (~andril@c-66-229-99-96.hsd1.fl.comcast.net) (Ping timeout: 256 seconds)
[16:20:20] <teocle> Soliton: I think you may be right about their [non-]uniqueness
[16:20:27] <Soliton> [0] is the same as 0.
[16:20:50] <jle> Soliton: lol.. yeah.. I just noticed that too.. I named the testfiles file0, file1 and so on, so of course it worked.hah
[16:21:40] <jle> so is there some way to extract the array result without filling the array as an extra step?
[16:21:41] <Soliton> teocle: is the order from lower to higher IDs or not related?
[16:22:02] *** Quits: zeraphel (~zeraphel@2a00:a040:1a0:fa5::1) (Remote host closed the connection)
[16:22:10] <Soliton> jle: no.
[16:22:25] <Soliton> you can maybe hack something up with compgen.
[16:22:25] *** Joins: zeraphel (~zeraphel@2a00:a040:1a0:fa5:96de:80ff:fefa:44a)
[16:22:46] <Soliton> if your filenames don't contain newlines.
[16:22:59] *** Joins: BSaboia (~bsaboia@177.37.198.83)
[16:23:05] <teocle> Soliton: unrelated, I think ${[@]/$1} is still okay; here's an example list of array members: https://clbin.com/KOOJY
[16:23:45] <teocle> so all window IDs have the same number of digits
[16:23:46] <Soliton> if they're all the same length, yes.
[16:24:56] *** Joins: eng-guy (~eng-guy@dhcp-math-8.mobile.helsinki.fi)
[16:25:12] *** Quits: eng-guy (~eng-guy@dhcp-math-8.mobile.helsinki.fi) (Client Quit)
[16:26:25] *** Quits: BSaboia (~bsaboia@177.37.198.83) (Client Quit)
[16:26:43] *** Quits: FIlystyn (~piotr@user/filystyn) (Quit: Lost terminal)
[16:28:17] *** Joins: mauz (~mauz@2a01:e0a:994:7ed0:4c25:9571:1c35:3e29)
[16:29:07] *** Joins: BSaboia (~bsaboia@177.37.198.83)
[16:30:48] *** Quits: mongy (~mongy@user/mongy) (Quit: WeeChat 3.4)
[16:31:51] *** Quits: mowcat (~mowcat@2a00:23c5:d190:1901:f22f:74ff:fe77:1e1c) (Remote host closed the connection)
[16:40:33] *** Quits: whaa (~whaa@c-75-67-72-65.hsd1.ma.comcast.net) (Ping timeout: 256 seconds)
[16:44:08] *** Quits: herjazz (~herjazz@p6758124-ipngn30801marunouchi.tokyo.ocn.ne.jp) (Quit: leaving)
[16:44:21] *** Quits: stonkey (~stonkey@user/stonkey) (Remote host closed the connection)
[16:44:25] *** Joins: stonkey2 (~stonkey@user/stonkey)
[16:44:31] *** Joins: shad (~shad@user/shad)
[16:48:28] <pj> teocle: but associative arrays are ordered, they retain the order that you set them in, even when removing an element.
[16:48:41] <Soliton> no.
[16:48:48] <pj> then what am I missing?
[16:48:50] <pj> declare -A ar=([foo]= [bar]= [baz]=); printf %s\\n "${!ar[*]}"; unset ar[bar]; printf %s\\n "${!ar[*]}";
[16:48:56] <pj> # declare -A ar=([foo]= [bar]= [baz]=); printf %s\\n "${!ar[*]}"; unset ar[bar]; printf %s\\n "${!ar[*]}";
[16:48:57] <shbot> pj: foo bar baz
[16:48:57] <shbot> pj: foo baz
[16:49:20] <Soliton> sure, it might appear that way in a single test.
[16:49:36] <pj> okay, I always thought they were for some reason
[16:50:09] *** Quits: n4dir (~user@i5E866656.versanet.de) (Remote host closed the connection)
[16:50:09] *** Quits: aetnaeus (~qpls@cpeb4750e67d202-cmf81d0fad5840.cpe.net.fido.ca) (Ping timeout: 250 seconds)
[16:51:09] *** Joins: hlauk (~hlauk@176.33.97.244)
[16:51:30] <teocle> pj: yeah, I've learned not to rely on that; most programming languages warn against expecting that behavior
[16:51:57] <Soliton> the order is unlikely to change in a single process or perhaps even the next run but there is no guaranteed order.
[16:51:59] *** Quits: fjmorazan (~quassel@user/fjmorazan) (Quit: fjmorazan)
[16:52:30] *** Joins: fjmorazan (~quassel@user/fjmorazan)
[16:53:14] *** Quits: whyglobaleyes (~a@88.97.101.246) (Quit: WeeChat 2.8)
[16:53:54] <teocle> Soliton: here's the script I was working on: https://clbin.com/kOefl
[16:53:58] <teocle> got any pointers?
[16:54:11] <Soliton> !check
[16:54:11] <checkbot> teocle: Line 32: Arrays implicitly concatenate in [[ ]]. Use a loop (or explicit * instead of @). Line 37: Quote to prevent word splitting/globbing, or split robustly with mapfile or read -a. Line 57: Quote this to prevent word splitting. See https://shellcheck.net/?id=cb25851 for all 10 issues.
[16:56:34] <teocle> (that's a smart bot, checking the last link like that)
[16:56:41] <teocle> guess shellcheck it is then :P
[16:58:09] <Soliton> probably ok given that you just handle numbers but you're treating shell like it's some general purpose language.
[16:58:28] * Earnestly rumbles in the distance
[16:58:43] *** Quits: unop (~unop@194.154.249.71) (Remote host closed the connection)
[16:58:53] *** Quits: hlauk (~hlauk@176.33.97.244) (Quit: Leaving)
[16:58:58] *** Joins: unop (~unop@194.154.249.71)
[17:00:30] *** Joins: mowcat (~mowcat@2a00:23c5:d190:1901:f22f:74ff:fe77:1e1c)
[17:00:34] *** Joins: yustin (~yustin@user/yustin)
[17:01:14] *** Quits: kurahaupo (~kurahaupo@115.69.27.211) (Ping timeout: 250 seconds)
[17:02:07] <Soliton> i would at least add some notes that all those missing quotes and dodgy code only work since you work with numbers with fixed length.
[17:03:31] <teocle> yep, I felt pretty smug reading those shellcheck warnings and knowing exactly why it's not really a problem :P
[17:04:59] *** Joins: N4buc0 (~N4buc0@2804:7f4:348a:c4ae:efce:e92e:a54f:2046)
[17:06:26] *** Joins: Feuermagier (~Feuermagi@user/feuermagier)
[17:06:47] *** Quits: N4buc0- (~N4buc0@187.59.149.196) (Ping timeout: 256 seconds)
[17:07:08] *** Joins: Rue_ (~rue@61-231-138-160.dynamic-ip.hinet.net)
[17:08:02] *** Quits: l4yer (~l4yer@178.239.168.223) (Ping timeout: 240 seconds)
[17:08:26] *** Quits: tsujp (~tsujp@sourcehut/user/tsujp) (Quit: Client closed)
[17:09:08] *** Quits: wolfshappen (~waff@irc.furworks.de) (Quit: later)
[17:09:10] *** Joins: fivegruel (~fivegruel@HSI-KBW-095-208-248-017.hsi5.kabel-badenwuerttemberg.de)
[17:10:55] <teocle> Soliton: thanks for the tips!
[17:11:12] *** Quits: kurahaupo1 (~martin@115.69.27.211) (Ping timeout: 250 seconds)
[17:11:33] *** Joins: jinsun__ (~quassel@user/jinsun)
[17:14:10] *** Quits: thebombzen (~thebombze@c-68-41-54-207.hsd1.mi.comcast.net) (Quit: Quit)
[17:14:57] *** Quits: BSaboia (~bsaboia@177.37.198.83) (Quit: This computer has gone to sleep)
[17:15:06] *** Quits: jinsun (~quassel@user/jinsun) (Ping timeout: 250 seconds)
[17:15:46] *** Joins: jiploading (~vjipac@user/vjipac)
[17:17:32] *** Quits: chenqisu1 (~bhca7d@183.217.201.21) (Ping timeout: 240 seconds)
[17:19:01] *** Joins: ShmoSeph_ (uid530989@id-530989.helmsley.irccloud.com)
[17:23:14] *** ShmoSeph_ is now known as LordOfLive
[17:23:17] *** Joins: BSaboia (~bsaboia@177.37.198.83)
[17:23:17] *** Quits: BSaboia (~bsaboia@177.37.198.83) (Client Quit)
[17:23:20] *** Quits: sinaowolabi_ (~SinaOwola@160.152.43.247) (Ping timeout: 250 seconds)
[17:23:42] *** LordOfLive is now known as LordofLive
[17:24:46] <Masklin_Gurder> !soliton
[17:24:47] <greybot> 'The unsung hero of #bash. Patience of an angel. Only intermittently sarcastic.'
[17:27:22] <djph> "intermittently" ?
[17:27:43] *** Quits: jinsun__ (~quassel@user/jinsun) (Quit: No Ping reply in 180 seconds.)
[17:27:57] <LordofLive> Skkkrrttt
[17:29:10] *** Joins: jinsun (~quassel@user/jinsun)
[17:33:20] *** Joins: volga629 (~volga629@72.139.93.26)
[17:33:38] *** Joins: rcernin (~rcernin@2001:8003:6803:db00:a842:39b1:9c76:d089)
[17:35:50] *** Joins: sinaowolabi_ (~SinaOwola@160.152.92.110)
[17:37:18] *** Quits: mauz (~mauz@2a01:e0a:994:7ed0:4c25:9571:1c35:3e29) (Remote host closed the connection)
[17:37:36] *** Joins: mauz (~mauz@2a01:e0a:994:7ed0:4c25:9571:1c35:3e29)
[17:37:57] *** Quits: rcernin (~rcernin@2001:8003:6803:db00:a842:39b1:9c76:d089) (Ping timeout: 240 seconds)
[17:39:39] *** Joins: kurahaupo (~kurahaupo@115.69.27.211)
[17:39:57] *** Quits: edlou (uid413273@id-413273.helmsley.irccloud.com) (Quit: Connection closed for inactivity)
[17:40:22] *** Quits: jiploading (~vjipac@user/vjipac) (Read error: Connection reset by peer)
[17:41:25] *** Quits: jinsun (~quassel@user/jinsun) (Quit: No Ping reply in 180 seconds.)
[17:42:52] *** Joins: jinsun (~quassel@user/jinsun)
[17:45:37] *** Quits: Pall (~Pall@cpc139184-sprt3-2-0-cust125.17-2.cable.virginm.net) (Ping timeout: 240 seconds)
[17:52:42] *** Quits: medard (~mithrin@stip-static-62.213-81-207.telecom.sk) (Read error: Connection reset by peer)
[17:52:49] *** Joins: medard__ (~mithrin@stip-static-62.213-81-207.telecom.sk)
[17:55:36] *** Joins: twinsignal (~twinsigna@static-198-54-134-43.cust.tzulo.com)
[17:57:54] *** Quits: kj (~kj@kj.aerisnetwork.net) (Quit: My MacBook has gone to sleep. ZZZzzz…)
[17:58:37] *** Joins: Kruppt (~Kruppt@50-111-55-116.drhm.nc.frontiernet.net)
[17:58:41] *** Joins: john_johnk (~Thunderbi@1.59.140.77.rev.sfr.net)
[18:06:23] *** Joins: andril (~andril@c-66-229-99-96.hsd1.fl.comcast.net)
[18:09:13] *** Joins: odoood (~odoood@2601:c8:c000:c4e0::4)
[18:12:02] *** Joins: sublim20 (~sublim20@user/sublim20)
[18:12:36] *** Joins: whaa (~whaa@c-75-67-72-65.hsd1.ma.comcast.net)
[18:13:54] *** Joins: ozoned (odoood@gateway/vpn/protonvpn/odoood)
[18:16:17] *** Quits: odoood (~odoood@2601:c8:c000:c4e0::4) (Ping timeout: 240 seconds)
[18:18:01] *** Quits: Dotz0cat (~Dotz0cat@h177.233.31.71.dynamic.ip.windstream.net) (Ping timeout: 256 seconds)
[18:18:27] *** Quits: mauz (~mauz@2a01:e0a:994:7ed0:4c25:9571:1c35:3e29) (Remote host closed the connection)
[18:18:44] *** Joins: mauz (~mauz@2a01:e0a:994:7ed0:4c25:9571:1c35:3e29)
[18:19:24] *** Joins: tsujp (~tsujp@sourcehut/user/tsujp)
[18:21:32] *** Joins: bn_work (uid268505@id-268505.uxbridge.irccloud.com)
[18:21:36] *** Joins: Dotz0cat (~Dotz0cat@h214.238.31.71.dynamic.ip.windstream.net)
[18:22:25] *** Joins: skapata (~Skapata@2804:14c:87b0:a6f9:9048:56ad:c252:2add)
[18:22:25] *** Quits: skapata (~Skapata@2804:14c:87b0:a6f9:9048:56ad:c252:2add) (Changing host)
[18:22:25] *** Joins: skapata (~Skapata@user/skapata)
[18:23:59] *** Joins: wolfshappen (~waff@irc.furworks.de)
[18:24:58] *** Joins: malina (~malina@user/malina)
[18:27:05] *** Quits: Dotz0cat (~Dotz0cat@h214.238.31.71.dynamic.ip.windstream.net) (Ping timeout: 256 seconds)
[18:28:19] *** Joins: Dotz0cat (~Dotz0cat@h214.238.31.71.dynamic.ip.windstream.net)
[18:31:26] *** Joins: trekkie1701c (~trekkie17@user/trekkie1701c)
[18:32:14] *** Quits: ouestbillie (~gallup@54.29.90.149.rev.vodafone.pt) (Ping timeout: 250 seconds)
[18:33:00] *** Joins: cdown_ (~cdown@188.214.11.14)
[18:33:32] *** Quits: ozoned (odoood@gateway/vpn/protonvpn/odoood) (Ping timeout: 250 seconds)
[18:35:32] *** Quits: cdown (~cdown@163.114.131.1) (Ping timeout: 240 seconds)
[18:35:37] *** cdown_ is now known as cdown
[18:35:39] *** Quits: mowcat (~mowcat@2a00:23c5:d190:1901:f22f:74ff:fe77:1e1c) (Remote host closed the connection)
[18:36:00] *** Quits: Filohuhum (~dante@gateway/tor-sasl/filohuhum) (Ping timeout: 276 seconds)
[18:36:02] *** Quits: sinaowolabi_ (~SinaOwola@160.152.92.110) (Ping timeout: 240 seconds)
[18:36:02] *** Quits: ProperNoun (~holyShizn@user/propernoun) (Ping timeout: 240 seconds)
[18:36:25] *** Joins: sky- (~sky@user/sky-)
[18:37:05] *** Joins: ProperNoun (~holyShizn@user/propernoun)
[18:37:21] *** Joins: sinaowolabi_ (~SinaOwola@160.152.92.110)
[18:39:59] *** Quits: sky-6 (~sky@user/sky-) (Ping timeout: 260 seconds)
[18:40:57] *** Quits: ekathva (~ekathva@88-114-118-220.elisa-laajakaista.fi) (Remote host closed the connection)
[18:41:13] *** Quits: volga629 (~volga629@72.139.93.26) (Quit: My MacBook has gone to sleep. ZZZzzz…)
[18:46:54] *** Joins: volga629 (~volga629@72.139.93.26)
[18:49:35] *** Joins: semigloss (~semigloss@d14-69-6-230.try.wideopenwest.com)
[18:50:27] *** Joins: junebug (~junebug@2600:1700:3db0:2540:14c0:3d8e:c030:40e0)
[18:54:46] *** Quits: din0 (~dino@cpe-74-131-247-218.kya.res.rr.com) (Changing host)
[18:54:46] *** Joins: din0 (~dino@user/din0)
[18:55:10] *** Joins: jkwnki (~jkwnki@p4fedb70b.dip0.t-ipconnect.de)
[18:56:30] *** Joins: kj (~kj@beta.aerisnetwork.net)
[18:56:49] *** Joins: ozoned (~odoood@2601:c8:c000:c4e0::4)
[18:57:14] *** Joins: cdown_ (~cdown@163.114.131.1)
[18:59:37] *** Quits: junebug (~junebug@2600:1700:3db0:2540:14c0:3d8e:c030:40e0) (Ping timeout: 240 seconds)
[18:59:41] *** Joins: rairden (~rairden@2603:9000:de04:9613::1a20)
[18:59:50] *** Quits: mpagano (~quassel@gentoo/developer/mpagano) (Quit: No Ping reply in 180 seconds.)
[18:59:58] *** Quits: cdown (~cdown@188.214.11.14) (Ping timeout: 250 seconds)
[19:00:01] *** cdown_ is now known as cdown
[19:00:40] *** Joins: junebug (~junebug@2600:1700:3db0:2540:12aa:2fee:7b0a:8e2a)
[19:01:01] *** Quits: trekkie1701c (~trekkie17@user/trekkie1701c) (Quit: :P)
[19:01:05] *** Quits: wolfshappen (~waff@irc.furworks.de) (Ping timeout: 256 seconds)
[19:02:35] *** Joins: wolfshappen (~waff@irc.furworks.de)
[19:03:37] *** Quits: ozoned (~odoood@2601:c8:c000:c4e0::4) (Ping timeout: 240 seconds)
[19:04:42] *** Quits: Kruppt (~Kruppt@50-111-55-116.drhm.nc.frontiernet.net) (Read error: Connection reset by peer)
[19:05:52] *** Joins: richardm75 (~richardm7@2600:8801:c507:b200:d1e9:9a3b:84c3:19f3)
[19:06:32] *** Quits: yustin (~yustin@user/yustin) (Ping timeout: 240 seconds)
[19:09:50] *** Parts: Wanderer_42 (~Wanderer_@dslb-188-109-015-071.188.109.pools.vodafone-ip.de) (carry on)
[19:10:10] *** Joins: mpagano (~quassel@gentoo/developer/mpagano)
[19:10:28] *** Joins: thebombzen (~thebombze@c-68-41-54-207.hsd1.mi.comcast.net)
[19:13:14] *** Quits: junebug (~junebug@2600:1700:3db0:2540:12aa:2fee:7b0a:8e2a) (Remote host closed the connection)
[19:13:43] *** Quits: andril (~andril@c-66-229-99-96.hsd1.fl.comcast.net) (Ping timeout: 256 seconds)
[19:17:05] *** Quits: Jong (~Jong@2620:10d:c090:400::5:44d9) (Quit: Textual IRC Client: www.textualapp.com)
[19:17:08] *** Joins: NightShadow (~shadow@lnsm3-montreal02-142-119-4-156.internet.virginmobile.ca)
[19:18:10] *** Joins: junebug (~junebug@2600:1700:3db0:2540:fb33:a80c:6390:494)
[19:18:32] *** Joins: clime (~clime@78-80-115-5.customers.tmcz.cz)
[19:20:27] *** Quits: unop (~unop@194.154.249.71) (Remote host closed the connection)
[19:21:02] *** Joins: unop (~unop@194.154.249.71)
[19:21:10] *** Joins: Kruppt (~Kruppt@50-111-55-116.drhm.nc.frontiernet.net)
[19:21:37] *** Quits: hays (rootvegeta@fsf/member/hays) (Ping timeout: 240 seconds)
[19:21:46] *** Joins: rcernin (~rcernin@2001:8003:6803:db00:a842:39b1:9c76:d089)
[19:22:05] *** Joins: MenschZwoNull (~MenschZwo@p3ee0be5a.dip0.t-ipconnect.de)
[19:22:40] *** Joins: Swahili_ (~Swahili@a95-94-208-187.cpe.netcabo.pt)
[19:22:41] *** Quits: humky (~humky@user/humky) (Quit: Leaving)
[19:22:47] *** Quits: Swahili (~Swahili@a95-94-208-187.cpe.netcabo.pt) (Ping timeout: 256 seconds)
[19:22:54] *** Quits: Kruppt (~Kruppt@50-111-55-116.drhm.nc.frontiernet.net) (Client Quit)
[19:24:05] *** Joins: UrsoBranco (~UrsoBranc@200-244-170-200.moratec.net.br)
[19:24:43] *** Joins: hays (~rootveget@fsf/member/hays)
[19:26:26] *** Joins: mowcat (~mowcat@2a00:23c5:d190:1901:f22f:74ff:fe77:1e1c)
[19:26:32] *** Quits: rcernin (~rcernin@2001:8003:6803:db00:a842:39b1:9c76:d089) (Ping timeout: 240 seconds)
[19:27:03] *** Quits: volga629 (~volga629@72.139.93.26) (Quit: My MacBook has gone to sleep. ZZZzzz…)
[19:27:06] *** Quits: mowcat (~mowcat@2a00:23c5:d190:1901:f22f:74ff:fe77:1e1c) (Remote host closed the connection)
[19:32:45] *** Joins: trekkie1701c (~trekkie17@user/trekkie1701c)
[19:34:29] *** Joins: MrCollinsGA (~MrCollins@199.231.255.146)
[19:38:17] *** Joins: Thanatermesis (~Thanaterm@191.92.148.122)
[19:40:03] *** Joins: bluedust_ (~bluedust@185.248.85.41)
[19:40:12] *** Joins: ozoned (~odoood@2601:c8:c000:c4e0::4)
[19:40:22] *** Joins: mongy (~mongy@user/mongy)
[19:41:19] *** Quits: shad (~shad@user/shad) (Ping timeout: 256 seconds)
[19:41:29] *** Quits: hays (~rootveget@fsf/member/hays) (Ping timeout: 256 seconds)
[19:42:17] *** Joins: magla (~gelignite@55d4381b.access.ecotel.net)
[19:43:02] *** Quits: bluedust (~bluedust@117.207.227.55) (Ping timeout: 240 seconds)
[19:47:28] *** Quits: ozoned (~odoood@2601:c8:c000:c4e0::4) (Quit: Leaving)
[19:48:39] *** Quits: junebug (~junebug@2600:1700:3db0:2540:fb33:a80c:6390:494) (Quit: Leaving)
[19:49:02] *** Joins: shirc-fagci-9484 (~shirc-fag@l37-193-172-29.novotelecom.ru)
[19:49:59] *** Quits: shirc-fagci-9484 (~shirc-fag@l37-193-172-29.novotelecom.ru) (Client Quit)
[19:53:05] *** Joins: rgrinberg (~textual@2806:101e:7:2b:f4e6:13e8:c8a9:3722)
[19:54:12] *** Joins: lucerne (~lucerne@ip202.ip-51-178-215.eu)
[19:54:52] *** Quits: NightShadow (~shadow@lnsm3-montreal02-142-119-4-156.internet.virginmobile.ca) (Quit: NightShadow)
[19:56:44] *** Quits: ezzieyguywuf (~Unknown@user/ezzieyguywuf) (Ping timeout: 250 seconds)
[19:58:47] *** Joins: ezzieyguywuf (~Unknown@user/ezzieyguywuf)
[19:59:05] *** Quits: tsujp (~tsujp@sourcehut/user/tsujp) (Quit: Client closed)
[20:00:48] *** Joins: Crassus (~Crassus@user/crassus)
[20:02:47] *** Joins: hays (rootvegeta@fsf/member/hays)
[20:03:37] *** Joins: shad (~shad@user/shad)
[20:03:59] *** Joins: grettke (~grettke@cpe-65-29-228-30.wi.res.rr.com)
[20:05:00] *** Joins: NightShadow (~shadow@lnsm3-montreal02-142-119-4-156.internet.virginmobile.ca)
[20:07:19] *** Quits: Crassus (~Crassus@user/crassus) (Quit: My MacBook has gone to sleep. ZZZzzz…)
[20:09:08] *** Quits: [diablo] (~diablo]@user/diablo/x-9068044) (Quit: The Lounge - https://thelounge.chat)
[20:12:20] *** Quits: mpagano (~quassel@gentoo/developer/mpagano) (Ping timeout: 250 seconds)
[20:12:25] *** Joins: [diablo] (~diablo]@user/diablo/x-9068044)
[20:12:52] *** Joins: mpagano (~quassel@gentoo/developer/mpagano)
[20:21:02] *** Quits: Mo (~Mo@dynamic-077-000-146-184.77.0.pool.telefonica.de) (Ping timeout: 240 seconds)
[20:22:53] *** Quits: bkhl (~bkhl@user/bkhl) (Quit: ZNC - https://znc.in)
[20:23:22] *** Quits: bluedust_ (~bluedust@185.248.85.41) (Remote host closed the connection)
[20:26:59] *** Quits: rgrinberg (~textual@2806:101e:7:2b:f4e6:13e8:c8a9:3722) (Quit: My MacBook has gone to sleep. ZZZzzz…)
[20:27:57] *** Quits: MenschZwoNull (~MenschZwo@p3ee0be5a.dip0.t-ipconnect.de) (Ping timeout: 256 seconds)
[20:28:22] *** Quits: tccki (~tccki@box.webslate.co.nz) (Ping timeout: 250 seconds)
[20:30:58] *** Joins: mowcat (~mowcat@2a00:23c5:d190:1901:f22f:74ff:fe77:1e1c)
[20:31:50] *** Quits: thiras (~thiras@user/thiras) (Ping timeout: 250 seconds)
[20:32:19] *** Quits: dreamon (~dreamon@ppp-88-217-76-15.dynamic.mnet-online.de) (Ping timeout: 256 seconds)
[20:33:42] *** Joins: dextercd (~dexter@2a02:a450:f25d:1:76d4:35ff:fefe:34c)
[20:33:52] *** Joins: p-i- (~Ohmu@2403:6200:8978:2a76:dd5f:304c:a7ec:7c34)
[20:35:06] <p-i-> I have a `#force_color_prompt=yes` line in my `~/.bashrc`. How can I programatically uncomment this line?
[20:35:26] <phy1729> don't, stick it in a conditional
[20:36:16] <uuidNuni1> p-i-: in what cases do you want to enable that option?
[20:36:21] <p-i-> The issue is I automate creation of a fresh box, and it comes with a .bashrc. And I don't want to go in each time to uncomment, as I frequently create/destroy boxes.
[20:36:24] <uuidNuni1> think about that
[20:36:29] <p-i-> I always want it enabled.
[20:36:57] *** Joins: ChmEarl (~chmearl@user/chmearl)
[20:37:13] <Soliton> so uncomment once and you're done.
[20:37:29] <phy1729> would be easier to either unconditionally append the line to .bashrc or put your dotfiles in git or stow or whatever and clone them down
[20:37:48] *** Quits: mtk (~mtk@2601:185:200:70:20c:29ff:fe3e:59e4) (Remote host closed the connection)
[20:38:09] <p-i-> I'd rather tweak the stock .bashrc with my startup script
[20:38:23] <p-i-> I suppose I could _prepend_ `force_color_prompt=yes` to it.
[20:38:52] <phy1729> automating editing a file that isn't really under your control to start with is prone to breaking (the OS package could ship a new version)
[20:39:03] <uuidNuni1> add a line in .bashrc : source ~/.my_bashrc
[20:39:07] <uuidNuni1> :)
[20:39:21] <phy1729> or just write your own .bashrc and replace whatever the OS comes with
[20:39:45] *** Joins: emg (~emg@cpe-70-93-247-186.natsow.res.rr.com)
[20:40:47] *** Joins: A|an (~Alan@173.218.175.171)
[20:40:49] *** Quits: shad (~shad@user/shad) (Quit: WeeChat 3.0)
[20:41:33] <Soliton> what is the advantage of editing a file over and over instead of once and keeping it?
[20:41:35] *** Quits: twinsignal (~twinsigna@static-198-54-134-43.cust.tzulo.com) (Quit: Leaving)
[20:43:01] *** Joins: mtk (~mtk@2601:185:200:70:20c:29ff:fe3e:59e4)
[20:43:02] *** Quits: sinaowolabi_ (~SinaOwola@160.152.92.110) (Ping timeout: 240 seconds)
[20:44:08] *** Quits: nyex (~Thunderbi@177.84.107.35) (Quit: nyex)
[20:44:24] *** Quits: polve (~polve@user/polve) (Ping timeout: 250 seconds)
[20:45:42] <p-i-> Only reason is that the Vultr admins might update the .bashrc, in which case any boxes I spin up I'll be using my (old) cached one. But if I just toggle that flag, I'm (near) guaranteed to always be up to date.
[20:46:10] <p-i-> but yeah, why not? I could keep a local .bashrc and just upload it to replace the stock one.
[20:46:26] <Soliton> ah, so you're hoping that your blind editing will work nicely with random updates outside of your control.
[20:46:30] *** Joins: Atque (~Atque@user/atque)
[20:46:55] <p-i-> well if I just do a string-subsitution to remove the comment from the line, it's benign.
[20:46:55] <Soliton> i guess it makes life more exciting.
[20:46:58] *** Joins: LuksNuke (~LuksNuke@gateway/tor-sasl/luksnuke)
[20:48:02] <Soliton> if you want to do a little less blind edits you could produce a patch and apply that instead.
[20:48:27] <phy1729> Honestly any service that requires their dotfiles is crap.
[20:48:31] *** Quits: NightShadow (~shadow@lnsm3-montreal02-142-119-4-156.internet.virginmobile.ca) (Quit: NightShadow)
[20:49:51] *** Joins: Betal (~Betal@user/betal)
[20:50:57] *** Quits: sudomann (~sudomann@2601:543:100:4fc8:dc64:3ab8:7f09:81e5) (Ping timeout: 240 seconds)
[20:51:19] <Soliton> btw, amazing how terrible the example bashrc is.
[20:51:27] *** Joins: bkhl (~bkhl@user/bkhl)
[20:52:42] *** Quits: TomyWork (~TomyLobo@p200300e80f006700e1760fa81e31a124.dip0.t-ipconnect.de) (Remote host closed the connection)
[20:56:44] *** Quits: bkhl (~bkhl@user/bkhl) (Quit: ZNC - https://znc.in)
[20:57:23] *** Quits: LordofLive (uid530989@id-530989.helmsley.irccloud.com) (Quit: Connection closed for inactivity)
[20:57:32] <e36freak> Soliton: are you really surprised?
[20:58:12] *** Joins: bkhl (~bkhl@user/bkhl)
[20:58:31] *** Quits: stonkey2 (~stonkey@user/stonkey) (Quit: Leaving)
[20:59:31] <Soliton> no idea who wrote it but since it comes with bash i expect a bit better. i guess no one ever looks at it.
[21:01:21] *** Joins: m0viefreak (~asdf@user/m0viefreak)
[21:02:13] *** Quits: vicecea (~vicecea@gateway/vpn/pia/vicecea) (Remote host closed the connection)
[21:02:32] *** Joins: vicecea (~vicecea@gateway/vpn/pia/vicecea)
[21:03:43] *** Quits: shokohsc (~shokohsc@lfbn-idf2-1-431-13.w86-246.abo.wanadoo.fr) (Quit: The Lounge - https://thelounge.chat)
[21:04:50] *** Joins: shokohsc (~shokohsc@lfbn-idf2-1-431-13.w86-246.abo.wanadoo.fr)
[21:07:08] *** Joins: ouestbillie (~gallup@54.29.90.149.rev.vodafone.pt)
[21:08:53] *** Joins: volga629 (~volga629@72.139.93.26)
[21:09:40] *** Joins: bluedust (~bluedust@185.248.85.26)
[21:10:01] *** Joins: rcernin (~rcernin@2001:8003:6803:db00:a842:39b1:9c76:d089)
[21:11:12] *** Quits: enoq (~enoq@2a05:1141:1f5:5600:b9c9:721a:599:bfe7) (Quit: enoq)
[21:11:44] *** Joins: enoq (~enoq@194-208-178-35.lampert.tv)
[21:13:26] *** Quits: john_johnk (~Thunderbi@1.59.140.77.rev.sfr.net) (Ping timeout: 250 seconds)
[21:13:30] *** Quits: seninha (~seninha@user/seninha) (Remote host closed the connection)
[21:13:52] *** Quits: magla (~gelignite@55d4381b.access.ecotel.net) (Ping timeout: 250 seconds)
[21:13:58] *** Joins: geli (~gelignite@55d4fbf8.access.ecotel.net)
[21:14:23] *** Joins: yuesbeez (uid458354@id-458354.tinside.irccloud.com)
[21:14:25] *** Quits: bluedust (~bluedust@185.248.85.26) (Ping timeout: 256 seconds)
[21:14:44] *** Quits: rcernin (~rcernin@2001:8003:6803:db00:a842:39b1:9c76:d089) (Ping timeout: 250 seconds)
[21:19:56] *** Quits: trekkie1701c (~trekkie17@user/trekkie1701c) (Quit: :P)
[21:22:14] *** Quits: shokohsc (~shokohsc@lfbn-idf2-1-431-13.w86-246.abo.wanadoo.fr) (Quit: The Lounge - https://thelounge.chat)
[21:22:14] *** Quits: volga629 (~volga629@72.139.93.26) (Quit: My MacBook has gone to sleep. ZZZzzz…)
[21:24:11] *** Joins: rgrinberg (~textual@2806:101e:7:2b:f4e6:13e8:c8a9:3722)
[21:26:18] *** Quits: bkhl (~bkhl@user/bkhl) (Remote host closed the connection)
[21:26:29] *** Joins: polve (~polve@user/polve)
[21:26:30] *** Quits: Swahili_ (~Swahili@a95-94-208-187.cpe.netcabo.pt) (Quit: Leaving...)
[21:26:55] *** Joins: bluedust (~bluedust@185.248.85.26)
[21:27:48] *** Joins: volga629 (~volga629@72.139.93.26)
[21:27:55] *** Joins: FluffyMask (~masque@user/fluffymask)
[21:28:14] *** Joins: bluedust_ (~bluedust@117.207.227.55)
[21:28:34] *** Joins: frostwork (~frostwork@user/frostwork)
[21:29:43] *** Joins: polve2 (~polve@user/polve)
[21:30:01] *** Joins: utoneq (~utoneq@gateway/tor-sasl/utoneq)
[21:30:26] *** Joins: greycat (~greg@209.142.155.49)
[21:30:50] *** Joins: stonkey (~stonkey@user/stonkey)
[21:31:49] *** Quits: polve (~polve@user/polve) (Ping timeout: 256 seconds)
[21:32:02] *** Quits: bluedust (~bluedust@185.248.85.26) (Ping timeout: 240 seconds)
[21:34:39] *** Quits: polve2 (~polve@user/polve) (Ping timeout: 256 seconds)
[21:35:07] *** Joins: fef (~thedawn@user/thedawn)
[21:35:15] *** Joins: polve (~polve@user/polve)
[21:35:21] *** Quits: frostwork (~frostwork@user/frostwork) (Quit: Leaving)
[21:39:21] *** Quits: jkwnki (~jkwnki@p4fedb70b.dip0.t-ipconnect.de) (Ping timeout: 256 seconds)
[21:40:15] *** Quits: tobybl (~tobybl@248.195.115.87.dyn.plus.net) (Remote host closed the connection)
[21:40:54] *** Joins: sudomann (~sudomann@2601:543:100:4fc8:5c68:5817:cec9:586d)
[21:46:49] *** Quits: robobo7 (~robobo@c-e52c524e.015-74-6762675.bbcust.telenor.se) (Read error: Connection reset by peer)
[21:48:10] *** Quits: enoq (~enoq@194-208-178-35.lampert.tv) (Quit: enoq)
[21:48:24] *** Quits: apos (~apos@gateway/tor-sasl/apos) (Ping timeout: 276 seconds)
[21:48:35] *** Joins: robobo7 (~robobo@c-e52c524e.015-74-6762675.bbcust.telenor.se)
[21:48:54] *** Joins: rustyshackleford (uid236774@id-236774.helmsley.irccloud.com)
[21:50:39] *** Joins: l4yer (~l4yer@178.239.168.223)
[21:51:00] *** Quits: utoneq (~utoneq@gateway/tor-sasl/utoneq) (Ping timeout: 276 seconds)
[21:52:56] *** Joins: dreamon (~dreamon@p57a4c526.dip0.t-ipconnect.de)
[21:52:57] *** Quits: MajorBiscuit (~MajorBisc@c-001-020-016.client.tudelft.eduvpn.nl) (Ping timeout: 240 seconds)
[21:54:45] *** Quits: dsrt^ (~dsrt@wsip-98-188-242-61.mc.at.cox.net) (Remote host closed the connection)
[21:55:37] *** Joins: apos (~apos@gateway/tor-sasl/apos)
[21:55:46] *** Joins: stonkey2 (~stonkey@user/stonkey)
[21:57:05] *** Quits: nerdwolf (~nerdwolf@103.79.248.148) (Remote host closed the connection)
[21:57:16] <kuhilas> how can I delete lines that contain more or less than 5 characters and leave only lines with 5 characters. Maybe with vim?
[21:57:53] *** Quits: stonkey (~stonkey@user/stonkey) (Ping timeout: 256 seconds)
[21:57:58] <greycat> awk 'length == 5'
[21:58:05] <phy1729> What do you want to do after that?
[21:58:10] *** Joins: emanuele6 (~emanuele6@user/emanuele6)
[21:58:23] <greycat> Probably trying to solve Wordle puzzles.
[21:58:26] <phy1729> Save to a new file? Send down a pipeline? Edit in place?
[21:58:33] <kuhilas> save the file. Well I will make all letters uppercase but that's it
[21:58:46] <phy1729> in place?
[21:58:46] <greycat> Start with an all-caps word list.
[21:59:01] <kuhilas> in place or new file both ok
[21:59:23] <greycat> awk 'length == 5' TWL06.txt > 5-letter-words.txt
[21:59:51] <kuhilas> greycat: you are not far off :D Preparing a word list for a clone for another language
[21:59:54] <phy1729> in place use an editor, otherwise  tr a-z A-Z </usr/share/dict/words | awk 'length == 5' > foo
[22:00:03] <kuhilas> wordle clone that is
[22:00:10] <phy1729> oh awk has toupper()
[22:00:24] <greycat> again, start with an all-caps word list
[22:00:36] <greycat> whatever you've got in /usr/share/dict/words is not complete, I promise
[22:00:41] <phy1729> awk 'length == 5 { print toupper($0) }' </usr/share/dict/words
[22:00:57] *** Joins: zebrag (~chris@user/zebrag)
[22:00:59] <phy1729> greycat: it's complete enough for most games
[22:01:12] <greycat> (or maybe you *want* an incomplete list, because some of the words in a full list will be too obscure?)
[22:01:15] <kuhilas> greycat: I'm just modifying a dictionary file from lojban language nothing in that directory
[22:01:32] <phy1729> a lojban wordle?
[22:01:40] * greycat should check to see whether there's a newer file than TWL06.txt
[22:04:03] <kuhilas> awk 'length == 5' TWL06.txt > 5-letter-words.txt  <- this didn't work as I expected. The new file has only lines that are not 5 characters. The lines are like zo'a, zo'e, etc. Words that have apostrophes
[22:04:08] <kuhilas> phy1729: ye
[22:04:19] *** Joins: shokohsc (~shokohsc@lfbn-idf2-1-431-13.w86-246.abo.wanadoo.fr)
[22:04:20] *** Joins: stonkey (~stonkey@user/stonkey)
[22:04:39] *** Joins: seninha (~seninha@user/seninha)
[22:05:00] <greycat> carriage returns, I bet
[22:05:32] *** Joins: dhwohrom^ (~dhwohrom@wsip-98-188-242-61.mc.at.cox.net)
[22:05:45] <kuhilas> yeah, it seems if I do length == 6 it gives me the 5 letter words
[22:05:52] *** Quits: stonkey2 (~stonkey@user/stonkey) (Ping timeout: 250 seconds)
[22:05:56] <greycat> you will want to get rid of the CRs right nwo
[22:06:05] <kuhilas> thanks this will do. I guess all lines have this CR
[22:06:15] <emanuele6> dos2unix
[22:06:26] <greycat> !cr
[22:06:26] <greybot> Carriage Return (ASCII 13). Often represented by ^M or \r. CRs are found just before newlines in text files generated by DOS/Windows apps. You can see them with ''sed -n l''. See http://mywiki.wooledge.org/BashFAQ/052 to get rid of them.
[22:11:09] *** Quits: kurahaupo (~kurahaupo@115.69.27.211) (Quit: Quit)
[22:11:24] *** Joins: kurahaupo (~kurahaupo@115.69.27.211)
[22:11:32] <kuhilas> thanks, done :)
[22:12:03] *** Quits: stonkey (~stonkey@user/stonkey) (Ping timeout: 256 seconds)
[22:15:52] *** Joins: crashrep (~crashrep@user/crashrep)
[22:16:17] *** Joins: john_johnk (~Thunderbi@1.59.140.77.rev.sfr.net)
[22:17:00] *** Joins: aetnaeus (~qpls@cpeb4750e67d202-cmf81d0fad5840.cpe.net.fido.ca)
[22:24:33] *** Joins: hlauk (~hlauk@176.33.97.244)
[22:26:34] *** Joins: ryzenda (~ryzenda@pool-74-109-246-70.pitbpa.fios.verizon.net)
[22:28:40] *** Quits: hlauk (~hlauk@176.33.97.244) (Client Quit)
[22:30:00] *** Quits: apos (~apos@gateway/tor-sasl/apos) (Ping timeout: 276 seconds)
[22:33:46] *** Quits: UrsoBranco (~UrsoBranc@200-244-170-200.moratec.net.br) (Quit: leaving)
[22:35:46] *** Quits: john_johnk (~Thunderbi@1.59.140.77.rev.sfr.net) (Ping timeout: 250 seconds)
[22:36:38] *** Quits: fivegruel (~fivegruel@HSI-KBW-095-208-248-017.hsi5.kabel-badenwuerttemberg.de) (Ping timeout: 250 seconds)
[22:37:20] *** Quits: Seirdy (~Seirdy@sourcehut/user/seirdy) (Quit: exiting 3.3)
[22:37:29] *** Joins: apos (~apos@gateway/tor-sasl/apos)
[22:37:47] *** Joins: Seirdy (~Seirdy@sourcehut/user/seirdy)
[22:39:21] *** Quits: uuidNuni1 (~weechat@193.123.227.17) (Remote host closed the connection)
[22:39:38] *** Joins: uuidNuni1 (~weechat@193.123.227.17)
[22:43:31] *** Joins: Soni (~quassel@autistic.space)
[22:43:47] <Soni> Blondie101010: https://soniex2.autistic.space/git-repos/bashsession.git/browse/commits/2ba539f3685d95e8535dbd3a7d389c69739f1061/tree/README.md
[22:50:30] *** Quits: Sauvin (~sauvin@about/linux/staff/sauvin) (Ping timeout: 250 seconds)
[22:50:50] <rendar> can someone help me to figure out if this error https://bpa.st/4U3A -- is caused by bash or related stuff (awk, grep) or by systemd itself?
[22:51:18] <kurahaupo> kuhilas: If it's only lines with apostrophes that are too short, I would assume that they Unicode typesetting apostrophes that take more than one byte
[22:52:36] <geirha> rendar: it's because awk exits
[22:52:51] <kurahaupo> rendar: If I had to guess, I would say it's processes writing to syslog via a pipe, after shutdown has terminated the syslog process(es)
[22:53:24] <rendar> no shutdown happened in between
[22:53:34] <geirha> use awk to do both things instead of combining grep and awk
[22:53:58] <kurahaupo> ok, the as geirha says, something to the right end if the pipeline exited before the left end
[22:54:05] <rendar> this is where awk is called: https://bpa.st/564Q -- why awk should exit?!
[22:54:23] <rendar> geirha, ok but in command line it worked!
[22:54:40] <Soliton> the exit command in awk surprisingly makes it exit.
[22:54:46] <kurahaupo> rendar: Maybe because there's an "exit" inside the awk script?
[22:55:14] <rendar> people in #awk told me to use `exit 1;`
[22:55:38] <kurahaupo> rendar: so it's doing what you wanted
[22:55:58] <geirha> the same happens on command line too, just that the broken pipe message isn't output; not sure how that is controlled, but grep will get sigpipe either way when awk exits
[22:55:59] <rendar> i had entered `return 1;` but then i got the error "you must use return into a function", then people on #awk told me to use exit
[22:56:02] <rendar> how can i fix this?
[22:56:19] <kurahaupo> rendar: what's to Fix ?
[22:56:38] <rendar> kurahaupo, i don't want to get "broken pipe" on systemd status
[22:56:44] <phy1729> You can fold the grep into awk
[22:56:46] <geirha> awk '/Current DISK READ/ && ( 4 != "0.00" || $10 != "0.00" ) { exit 1 }'
[22:56:47] <kurahaupo> rendar: so house it
[22:56:53] <kurahaupo> Hide it
[22:56:59] <rendar> geirha, ok
[22:57:02] <geirha> err, copypasta left out a $
[22:57:18] <geirha> but now htop might complain about broken pipe instead
[22:57:24] <geirha> *iotop
[22:57:42] <kurahaupo> If it's a bash script, use awk ... < <( iotop ... )
[22:58:18] <rendar> it's a bash script, yes
[22:58:21] *** Joins: rcernin (~rcernin@2001:8003:6803:db00:a842:39b1:9c76:d089)
[22:58:36] <rendar> geirha, yes that's the point!
[22:58:37] <kurahaupo> rendar: Also you don't need \ after | at the end of a line
[22:58:48] <rendar> kurahaupo, ok, good to know
[22:59:04] <rendar> i could get that broken pipe from iotop
[22:59:18] *** Quits: rairden (~rairden@2603:9000:de04:9613::1a20) (Quit: rairden)
[22:59:44] <kurahaupo> nor after && || & | ; ;; ;;& ;& (
[22:59:50] <ash_worksi> part
[22:59:53] *** Parts: ash_worksi (~ash_m@user/ash-m/x-3292451) ()
[23:00:03] <kurahaupo> rendar:  If it's a bash script, use awk ... < <( iotop ... )
[23:01:14] <rendar> kurahaupo, you mean like this? https://bpa.st/GXOA
[23:01:47] <kurahaupo> yes, but please add a line break after <(
[23:01:57] *** Quits: Rue_ (~rue@61-231-138-160.dynamic-ip.hinet.net) (Quit: WeeChat 3.4)
[23:02:15] <rendar> yes ok
[23:02:34] <rendar> in this way i shouldn't get any broken pipe, right?
[23:02:57] *** Quits: rcernin (~rcernin@2001:8003:6803:db00:a842:39b1:9c76:d089) (Ping timeout: 240 seconds)
[23:03:37] <kurahaupo> The idea is simply to make iotop not a reportable process
[23:05:14] *** Joins: vlm (~vlm@user/vlm)
[23:05:15] <rendar> yeah
[23:05:28] *** Joins: The_Loko (~The_Loko@79.116.24.80)
[23:05:45] *** Joins: jkwnki (~jkwnki@p4fedb70b.dip0.t-ipconnect.de)
[23:05:46] <rendar> kurahaupo, can you elaborate on how you define "reportable" here? you mean that its exit code won't affect the final function exit code?
[23:06:14] *** Joins: jkwnki1 (~jkwnki@p4fedb70b.dip0.t-ipconnect.de)
[23:07:16] *** Quits: N4buc0 (~N4buc0@2804:7f4:348a:c4ae:efce:e92e:a54f:2046) (Remote host closed the connection)
[23:07:41] <uuidNuni1> `< (' a space here?
[23:07:59] <rendar> no there shouldn't be a space, its just a typo
[23:08:02] <rendar> thanks for noticing
[23:08:32] *** Quits: jkwnki (~jkwnki@p4fedb70b.dip0.t-ipconnect.de) (Remote host closed the connection)
[23:08:32] *** Quits: jkwnki1 (~jkwnki@p4fedb70b.dip0.t-ipconnect.de) (Remote host closed the connection)
[23:10:29] <greycat> There must be whitespace between the two < < symbols.  There must NOT be whitespace between <( in the process substitution.
[23:10:45] <kurahaupo> rendar: it doesn't affect PIPESTATUS (or $?), and therefore isn't part of the status of any job
[23:10:51] <greycat> The first < is input redirection.  The <( is process substitution.  Two pieces of syntax.
[23:10:59] <rendar> kurahaupo, right
[23:11:15] <rendar> greycat, yes thanks
[23:12:54] * kurahaupo thinks that the syntax was poorly chosen. I'd have preferred $<() for process substitution, and NUM<() for piping into fd NUM (default 0)
[23:13:25] *** Joins: Joss (~joss@user/Joss)
[23:13:48] <uuidNuni1> kurahaupo: which shell uses $<() ?
[23:13:54] *** Joins: dirigible (~dirigible@2602:fe90:100:1e:e5a6:79af:9abe:fae5)
[23:13:59] <kurahaupo> none that I know of
[23:14:24] <kurahaupo> but it could also allow $<WORD
[23:14:54] <uuidNuni1> that break everything
[23:15:09] <kurahaupo> The point would be to use $ for all substitutions
[23:15:10] *** Quits: Joss (~joss@user/Joss) (Client Quit)
[23:16:06] <rendar> if $4 is "43.55" can awk compare that to < "100.0" instead of != "0.00" ?
[23:16:07] <uuidNuni1> # $<(echo broken)
[23:16:08] <shbot> uuidNuni1: bash: $/dev/fd/63: No such file or directory
[23:16:21] <uuidNuni1> # echo $<(echo broken)
[23:16:22] <shbot> uuidNuni1: $/dev/fd/63
[23:16:42] <uuidNuni1> lol, now $ is real $
[23:16:52] <kurahaupo> # echo $
[23:16:53] <shbot> kurahaupo: $
[23:17:07] *** Joins: trekkie1701c (~trekkie17@user/trekkie1701c)
[23:17:45] <uuidNuni1> rendar: you may want to use another tool to get the information you want ...
[23:17:55] *** Quits: dhwohrom^ (~dhwohrom@wsip-98-188-242-61.mc.at.cox.net) (Remote host closed the connection)
[23:17:56] <rendar> for instance?
[23:17:58] <uuidNuni1> the DATA i mean
[23:18:18] <uuidNuni1> what DATA are you trying to get?
[23:18:20] <kurahaupo> rendar: Does iotop have any options for formatting its output?
[23:18:33] *** Joins: irc_user (uid423822@id-423822.lymington.irccloud.com)
[23:19:03] <uuidNuni1> the data before any processing, before any grep awk, the raw data. i mean
[23:19:22] <rendar> it seems it isn't
[23:20:23] <uuidNuni1> i remember the other day i'd like to get ride of 2 columns of ss output ... with awk
[23:20:45] <uuidNuni1> but it turns out the ss output is like shit... after any pipe
[23:21:12] <kurahaupo> what's ss again?
[23:21:24] <uuidNuni1> a replacement of netstat
[23:21:40] <uuidNuni1> /usr/bin/ss is owned by iproute2 5.16.0-1
[23:21:44] *** Quits: Atque (~Atque@user/atque) (Quit: ...)
[23:22:06] <kurahaupo> ss -OH … ?
[23:22:22] <uuidNuni1> no, i use ss -nutlp
[23:22:47] *** Joins: shadow_ (~shadow@lnsm3-montreal02-142-119-4-156.internet.virginmobile.ca)
[23:23:01] <uuidNuni1> so i want to get rid of Recv-Q            Send-Q
[23:23:10] <uuidNuni1> these 2 columns
[23:23:54] <furrymcgee> just do it in bash
[23:24:13] <furrymcgee> while read; do set - $REPLY && [[ "$1 $2 $3" =~ Current DISK READ && ... ]] && exit 1; done
[23:24:35] <kurahaupo> furrymcgee: !umq
[23:24:39] *** Joins: bluedust (~bluedust@89.238.143.233)
[23:24:58] <kurahaupo> furrymcgee: just = not =~
[23:25:04] <geirha> rendar: if you lose the quote it will do arithmetic comparison. $4 < 100
[23:25:23] <kurahaupo> only use =~ when you know you need (and have) a regex. Stick with = the rest of the time
[23:25:43] <uuidNuni1> kurahaupo: use  ==
[23:25:53] <kurahaupo> uuidNuniq: no
[23:26:25] <kurahaupo> uuidNuniq: It's not an equality, is a string glob match
[23:26:27] *** Quits: yac (~user@user/yac) (Ping timeout: 256 seconds)
[23:26:28] *** Quits: yac__ (~user@user/yac) (Ping timeout: 250 seconds)
[23:26:28] *** Quits: yac_ (~user@user/yac) (Ping timeout: 250 seconds)
[23:26:38] <uuidNuni1> i like == =~ !=
[23:27:11] *** Joins: zro (~zro@user/zro)
[23:27:30] <kurahaupo> = is valid in POSIX [ ] but == is an extension that I wish wasnt there
[23:27:32] *** Quits: bluedust_ (~bluedust@117.207.227.55) (Ping timeout: 240 seconds)
[23:27:32] *** Quits: ayustae (Thunderbir@gateway/vpn/protonvpn/ayustae) (Ping timeout: 240 seconds)
[23:28:01] <uuidNuni1> The = operator is equivalent to == // man bash
[23:28:16] <greycat> Yes, this is true *in bash*.
[23:28:21] <kurahaupo> I use == inside (()) for numeric equality, = inside [[ ]] or [ ] for string match
[23:28:21] <rendar> geirha, i see, will it use integer comparison? i mean it will treat 56.33 like 56?
[23:28:46] <geirha> I was assuming you were still using awk. awk only has floats
[23:28:47] *** Joins: YaoNai (~YaoNai@user/yaonai)
[23:28:51] <geirha> while bash only has ints
[23:29:28] <kurahaupo> uuidNuniq: == is not portable to other POSIX shells
[23:30:01] *** Joins: situ (~situ@ip-89-176-145-74.net.upcbroadband.cz)
[23:30:09] *** Joins: superboot (~agentgasm@user/superboot)
[23:30:16] <geirha> sh# [ a == a ]
[23:30:16] <shbot> geirha: sh: 1: [: a: unexpected operator
[23:30:23] * uuidNuni1 does not care portability. first thing to do  command -v bash || exit
[23:31:16] <kurahaupo> uuidNuniq: that's fine for yourself, just don't offer advice to others without checking first whether they likewise don't care
[23:31:27] <uuidNuni1> geirha: what other prefix can we use on the bot, like sh
[23:31:33] <uuidNuni1> bash# echo hi
[23:31:36] <geirha> # triggers
[23:31:36] <shbot> geirha: Available triggers: +# bash-devel; 1# bash-1.14; 2# bash-2.05b; 32# bash-3.2; 3# bash-3.2; 42# bash-4.2; 43# bash-4.3; 44# bash-4.4; 4# bash-4.4; 50# bash-5.0; 51# bash-5.1; 5# bash-5.1; # bash-5.1; d# dash-0.5.9; sh# dash-0.5.9; k# ksh 93u+ 2012-08-01; m# mksh R59 2021/01/24; b# bourne; j# bourne(w/job);
[23:31:54] <kurahaupo> # type -a triggers
[23:31:55] <shbot> kurahaupo: bash: type: triggers: not found
[23:32:09] <kurahaupo> ah, magic, not a command
[23:32:19] <uuidNuni1> geirha: cool thanks!
[23:32:36] <uuidNuni1> let's do a speed test on dash
[23:32:56] <kurahaupo> geirha: How did you get bash 1.14 to compile? I tried and failed miserably
[23:32:56] <uuidNuni1>  sh# is for dash?
[23:32:59] <geirha> I intend to move triggers inside the vm at some point
[23:33:27] *** Joins: yac (~user@user/yac)
[23:33:32] *** Joins: yac_ (~user@user/yac)
[23:33:38] *** Joins: yac__ (~user@user/yac)
[23:33:39] <geirha> kurahaupo: it compiles, but segfaults for pretty much anything you try ^^
[23:33:48] <kurahaupo> b# set +m
[23:33:49] <shbot> kurahaupo: no output
[23:34:25] <uuidNuni1> 1# a=( 1 2 3 4 5) ; echo $a
[23:34:26] <geirha> kurahaupo: https://gitlab.com/geirha/bash/-/commit/d7626b97de726bfff0dc557c90a4bde2b617cb0c
[23:34:27] <shbot> uuidNuni1: /init: line 39:    45 Segmentation fault      setsid bash -login
[23:34:28] <shbot> uuidNuni1: (shell exited with 139)
[23:34:29] <kurahaupo> yeah that was my experience. I got slightly further compiling -m32 or -mx32
[23:34:54] <uuidNuni1> 1# declare -Ag a
[23:34:55] <shbot> uuidNuni1: declare: unknown option: `-A'
[23:35:04] <geirha> ignore the examples/* changes
[23:35:11] <uuidNuni1> d# typeset -Ag a
[23:35:12] <shbot> uuidNuni1: dash: 1: typeset: not found
[23:35:19] <uuidNuni1> d# declare -Ag a
[23:35:20] <shbot> uuidNuni1: dash: 1: declare: not found
[23:35:28] <kurahaupo> typeset is a kshism
[23:35:40] <uuidNuni1> ok, if i can't use ass array, i will not use that shell.
[23:35:41] <geirha> 1# echo "$BASH_VERSION"
[23:35:42] <shbot> geirha: 1.14.7(1)
[23:35:43] <kurahaupo> (which bash adopted)
[23:35:54] <kurahaupo> woohoo, it works!
[23:37:10] <kurahaupo> That reminds me, I need to fill out a few more newer versions of Bash in my suite. Currently it only goes up to 5.1.2p47
[23:38:04] <kurahaupo> Basically I just tried to build every git commit
[23:39:07] *** Joins: bluedust_ (~bluedust@117.207.227.55)
[23:39:08] <kurahaupo> Also it's 23 years past time to remove the old-style C function definitions
[23:42:09] *** Quits: bluedust (~bluedust@89.238.143.233) (Ping timeout: 256 seconds)
[23:42:25] *** Joins: bluedust (~bluedust@86.106.136.217)
[23:42:37] <greycat> You mean pre-C89?  More than 23 years.
[23:43:10] *** Quits: bluedust_ (~bluedust@117.207.227.55) (Remote host closed the connection)
[23:43:22] <greycat> Unless this is a "C99 makes pre-C89 stuff obsolete" thing.
[23:43:43] *** Joins: bluedust_ (~bluedust@117.207.227.55)
[23:44:45] *** Quits: fef (~thedawn@user/thedawn) (Ping timeout: 276 seconds)
[23:44:45] *** Quits: ano (~ano@user/ano) (Ping timeout: 276 seconds)
[23:45:43] *** Quits: MrCollinsGA (~MrCollins@199.231.255.146) (Read error: Connection reset by peer)
[23:46:40] *** samnob_ is now known as samnob
[23:47:17] *** Quits: gabriele (~gabriele@user/gabriele) (Quit: Leaving)
[23:47:32] *** Quits: bluedust (~bluedust@86.106.136.217) (Ping timeout: 240 seconds)
[23:47:54] *** Joins: ano (~ano@user/ano)
[23:50:32] <kurahaupo> greycat: the latter is more or less my line of thinking. Allow one previous version to co exist
[23:54:29] *** Joins: rcernin (~rcernin@2001:8003:6803:db00:a842:39b1:9c76:d089)
[23:54:30] *** Quits: ano (~ano@user/ano) (Ping timeout: 276 seconds)
[23:58:58] *** Quits: rcernin (~rcernin@2001:8003:6803:db00:a842:39b1:9c76:d089) (Ping timeout: 250 seconds)
