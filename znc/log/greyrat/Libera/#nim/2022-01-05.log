[00:07:02] *** Quits: Onionhammer (~onionhamm@23-88-146-29.fttp.usinternet.com) (Quit: The Lounge - https://thelounge.chat)
[00:07:10] <Amun-Ra> I'd go with openFileStream
[00:07:49] *** Joins: Onionhammer (~onionhamm@23-88-146-29.fttp.usinternet.com)
[00:13:39] *** rwb is now known as rb
[00:21:19] *** Joins: noeontheend (~noeonthee@207.237.194.194)
[00:26:49] <nixfreaknim[m]> is is possible to step though a nim program while compiling ?
[00:30:17] <nixfreaknim[m]> s/is/it/
[00:34:14] <FromDiscord> <kaddkaka> Right, I was meaning to ask, is it very annoying for people in bridged chats when I edit my messages in discord?
[00:35:23] <FromDiscord> <hmmm> they hate you silently üòÉ
[00:35:26] <FromDiscord> <leorize> yea, it doesn't translate well to irc
[00:35:46] <FromDiscord> <leorize> one or two edits right after posting should be fine
[00:36:57] <FromDiscord> <kaddkaka> I will try to minimize it, I'm VERY good at typos üòµ‚Äçüí´
[00:38:25] <FromDiscord> <hmmm> tbh I was in the irc camp but I had to swallow the sour pill: discord makes easier to follow conversations. So since they are on the wrong side of history they shouldnt't mind the edits imo üòè
[00:39:18] <FromDiscord> <haxscramper> you can see how your edits look on the IRC side in https://irclogs.nim-lang.org/
[00:52:55] <FromDiscord> <auxym> In reply to @nixfreaknim "is is possible to": do you mean debugging? why "when compiling"? https://nim-lang.org/blog/2017/10/02/documenting-profiling-and-debugging-nim-code.html
[00:56:07] <FromDiscord> <kaddkaka> In reply to @auxym "do you mean debugging?": Since so much can happen at compile time in Nim, I would suspect it makes sense to not just debug exec_runtime but also compile_time
[01:13:25] <FromDiscord> <krisppurg> sent a long message, see http://ix.io/3L2d
[01:19:20] <FromDiscord> <Solitude> In reply to @krisppurg "Hi, I have a": why not make it a single `changes` table that stores tuple or something?
[01:20:24] <FromDiscord> <krisppurg> it's much easier with `before` and `after`.
[01:22:30] <FromDiscord> <krisppurg> sent a code paste, see https://play.nim-lang.org/#ix=3L2f
[01:22:33] *** Quits: PMunch (~PMunch@user/pmunch) (Quit: leaving)
[01:23:54] <FromDiscord> <Solitude> sent a code paste, see https://paste.rs/msf
[01:25:02] <FromDiscord> <krisppurg> well kind of, but it's a bit more shorter with my way
[01:25:25] <FromDiscord> <Solitude> yeah, but its more memory efficient my way
[01:25:52] <FromDiscord> <krisppurg> Benchmark?
[01:26:06] <FromDiscord> <Solitude> ...
[01:26:20] <FromDiscord> <Solitude> and its much easier to get a parseHook going that way
[01:28:36] <FromDiscord> <krisppurg> either ways
[01:32:09] *** Joins: krux02 (~krux02@p200300e81723dd00b48b627b8314596f.dip0.t-ipconnect.de)
[01:51:35] <NimEventer> New thread by Nycto: Look up proc signature from an ident, see https://forum.nim-lang.org/t/8772
[01:56:52] *** Quits: Lord_Nightmare (~Lord_Nigh@user/lord-nightmare/x-3657113) (Read error: Connection reset by peer)
[01:57:09] *** Joins: Lord_Nightmare (Lord_Night@user/lord-nightmare/x-3657113)
[01:58:25] <FromDiscord> <gandalfs_socks> Error: ambiguous call; both system.and(x: bool, y: bool) [proc declared in C:\Users\...\Downloads\nim-1.6.2_x64\nim-1.6.2\lib\system\basic_types.nim(48, 6)] and system.and(x: int32, y: int32) [proc declared in C:\Users\...\Downloads\nim-1.6.2_x64\nim-1.6.2\lib\system\arithmetics.nim(299, 6)] match for: (WINBOOL, bool)
[01:58:39] <FromDiscord> <gandalfs_socks> how can i specify which function to use
[01:59:45] <FromDiscord> <Elegantbeef> convert one to bool or int
[02:24:51] *** Quits: noeontheend (~noeonthee@207.237.194.194) (Remote host closed the connection)
[02:26:33] *** Joins: noeontheend (~noeonthee@207.237.194.194)
[03:00:30] *** Quits: jjido (~Denis@2a02:c7f:5c91:e700:cdd1:fb1a:1d51:220e) (Quit: My MacBook Air has gone to sleep. ZZZzzz‚Ä¶)
[03:00:37] <FromDiscord> <Schelz> Any idea how would be done an web application with buttons, etc. That will be able to communicate with the program ( use the webpage as a control panel )
[03:01:52] <FromDiscord> <Elegantbeef> Wouldnt it just be http requests to your server from your webpage
[03:01:59] <FromDiscord> <Elegantbeef> Alternatively use a webview library
[03:03:46] <FromDiscord> <Schelz> Example of libraries ?
[03:04:14] <FromDiscord> <Elegantbeef> https://nimble.directory/search?query=webview
[03:04:42] <FromDiscord> <Schelz> In reply to @Elegantbeef "Wouldnt it just be": Thats the idea the webpage has to change the program, as a gui.
[03:06:00] <FromDiscord> <Elegantbeef> If it has to be in the browser the webview doesnt work, but the benefit of them would be using web techs to make UI then you can just use whatever IPC you want to communicate between the two programs
[03:07:02] <FromDiscord> <Elegantbeef> Or you could even build the UI with the server, dont know what the program is so dont know the requirements
[03:12:44] <FromDiscord> <Schelz> I went with webgui cause its the closest that works with the needs
[03:12:56] <FromDiscord> <Schelz> Thx for help
[03:22:27] *** Quits: krux02 (~krux02@p200300e81723dd00b48b627b8314596f.dip0.t-ipconnect.de) (Remote host closed the connection)
[03:35:01] *** Quits: noeontheend (~noeonthee@207.237.194.194) (Ping timeout: 240 seconds)
[03:42:06] <FromDiscord> <gogolxdong (liuxiaodong)> Is there any way to tranform xml to json?
[03:58:35] *** Joins: noeontheend (~noeonthee@207.237.194.194)
[04:08:01] *** Quits: vicfred (~vicfred@user/vicfred) (Quit: Leaving)
[04:14:49] <noeontheend> I'm dealing with a fun memory issue. I'm getting a SIGSEGV that only happens in release builds. I've added enough `echo` statements to track it down to one line, but if I check if that variable is nil before using it, `.isNil` returns false. Further, if I add an `echo` on any of the ref object's fields before trying to use it, the SIGSEGV no longer occurs and the program continues as expected.
[04:16:09] <FromDiscord> <Elegantbeef> Code?
[04:18:21] <noeontheend> I'm trying to make a MWE, but the actual program is well over 1000 LOC, so I haven't been able to replicate it in simple form yet.
[04:18:49] <FromDiscord> <Elegantbeef> Is it pure Nim or are you using libraries?
[04:21:32] <noeontheend> My stuff is all pure Nim, and in scanning the dependencies it looks like they're also all Nim.
[04:22:47] <FromDiscord> <Elegantbeef> What's the line?
[04:24:39] <noeontheend> It's actually just from passing the `ref object` to a proc that uses it.
[04:24:59] <FromDiscord> <Elegantbeef> Do you have the code somewhere i can read it?
[04:25:07] <noeontheend> (Sorry, would love to be more concrete, but I also don't want to ask you to dig through the entire codebase to figure this out)
[04:25:20] <noeontheend> I'll put it up if you're interested, one second.
[04:32:02] <noeontheend> Specifically: https://git.sr.ht/~reesmichael1/roman/tree/sigsegv/item/src/romanpkg/main.nim#L81
[04:34:14] <noeontheend> The `displayFeed(feed)` on line 87 is what triggers the SIGSEGV. Here's an example feed that triggers it if running it is useful: https://os.phil-opp.com/rss.xml
[04:34:38] <FromDiscord> <Elegantbeef> Where is Feed defined?
[04:35:09] <noeontheend> https://git.sr.ht/~reesmichael1/roman/tree/sigsegv/item/src/romanpkg/types.nim#L33
[04:37:32] <FromDiscord> <Elegantbeef> Wont change anything but `displayFeed` taking a `var Feed` is suspect
[04:38:22] <noeontheend> You're right, I changed it earlier to just take a `Feed` and it still happens.
[04:38:33] <FromDiscord> <Elegantbeef> What GC are you using?
[04:39:38] <FromDiscord> <Elegantbeef> If not try with `--gc:orc` or `--gc:arc`
[04:41:16] <noeontheend> Interesting! I hadn't tried it without the default `--gc:refc`. `--gc:boehm` also crashes, but `--gc:refAndSweep` works as expected.
[04:42:02] <noeontheend> (It's an older project, I need to update it to compile with `--gc:arc` or `--gc:orc`...as well as to use lots of niceties in modern Nim.)
[04:42:11] <noeontheend> Whoops...`--gc:markAndSweep`, obviously.
[04:42:20] <FromDiscord> <Elegantbeef> Yea
[04:42:34] <FromDiscord> <Elegantbeef> Sounds like it could be an issue with the GC
[04:42:56] <noeontheend> Neat, thanks for the suggestion/your time!
[04:43:12] <FromDiscord> <Elegantbeef> I dont know about a min repo
[04:43:50] <noeontheend> I'll spend some time fixing the older stuff up, that might help it out. Plus I'll see if ARC/ORC works as well once those are usable.
[04:44:34] <FromDiscord> <Elegantbeef> What happens if you remove line 72 and make line 80 `let feed = feeds[0]` and line 89 `let feed = chooseFeed(feeds)`?
[04:44:40] <FromDiscord> <Elegantbeef> Might cause the GC to behave differently
[04:47:02] <noeontheend> Unfortunately not, still crashes with `gc:refc` and works with `gc:markAndSweep`.
[04:47:37] <FromDiscord> <Elegantbeef> I suppose i can always clone this üòÄ
[04:48:47] <FromDiscord> <Elegantbeef> What nim version are you using?
[04:49:49] *** Quits: arkurious (~arkurious@user/arkurious) (Quit: Leaving)
[04:50:18] <noeontheend> I don't think it's relevant, but I'm only building it with `-d:internalRenderer` (which uses https://git.sr.ht/~reesmichael1/nim-html2text, which has been my blocker on the main project for a long time). I don't even have the alternate Python renderer installed on this computer.
[04:50:48] <FromDiscord> <noeontheend> In reply to @Elegantbeef "I suppose i can": Please feel free! üòÄ
[04:51:24] <noeontheend> Nim Compiler Version 1.6.0 [Linux: amd64]
[04:51:25] <noeontheend> Compiled at 2021-10-19
[04:51:25] <noeontheend> Copyright (c) 2006-2021 by Andreas Rumpf
[04:51:25] <noeontheend>  
[04:51:25] <noeontheend> git hash: 727c6378d2464090564dbcd9bc8b9ac648467e38
[04:51:25] <noeontheend> active boot switches: -d:release
[04:53:07] <FromDiscord> <Elegantbeef> Hmm i'm not getting a seg issue
[04:53:12] <FromDiscord> <Elegantbeef> > error rendering HTML to text\: \<class 'ModuleNotFoundError'\>\: No module named 'html2text'
[04:53:29] <noeontheend> Try building it with `-d:internalRenderer`
[04:54:14] <FromDiscord> <Elegantbeef> > error\: while accessing https://os.phil-opp.com/rss.xml: could not create read-posts file
[04:54:54] <noeontheend> Ack, sorry, my bad: https://todo.sr.ht/~reesmichael1/roman/23
[04:55:33] <noeontheend> If you're on Linux, create `~/.local/share/roman/`.
[04:55:43] <FromDiscord> <Elegantbeef> I can read!
[04:57:10] <FromDiscord> <Elegantbeef> After running subscribe on that link i get `error: Invalid enum value: rss`
[04:58:13] <noeontheend> Fascinating...try editing the last field in `~/.config/roman/subscriptions` to "RSS"? I'm guessing it's being written as lowercase, which it obviously shouldn't be....
[04:59:17] <FromDiscord> <Elegantbeef> Where should the crash be?
[05:00:41] <noeontheend> For me, it's on startup, before showing the feed:
[05:00:41] <noeontheend> > michael at pepper in ~/programs/roman on sigsegv [!]
[05:00:41] <noeontheend> > ‚Ü™ ./bin/roman
[05:00:41] <noeontheend> > SIGSEGV: Illegal storage access. (Attempt to read from nil?)
[05:00:41] <noeontheend> > fish: Job 1, './bin/roman' terminated by signal SIGSEGV (Address boundary error)
[05:01:15] <FromDiscord> <Elegantbeef> Ah got it aswell
[05:01:32] <noeontheend> Phew :) 
[05:05:08] <noeontheend> Hmmm, disabling the parallel loading on line 218 of feeds.nim fixes the crash as well.
[05:05:33] <FromDiscord> <Rika> Lol hmmm got pinged
[05:06:23] <noeontheend> Oops, sorry!
[05:08:27] <FromDiscord> <Elegantbeef> If that's the case it sounds like it's GC + heap issue
[05:09:49] <FromDiscord> <Elegantbeef> Thread sharing of this complex object doesnt properly give up ownership from the flowvar and is GC'd is my 100% uninformed guess
[05:12:20] <noeontheend> That makes sense to me.
[05:13:14] <noeontheend> Elegantbeef: Thanks a million for pointing me in the right direction! I have to run soon, but I have plenty to work with now.
[05:13:48] <FromDiscord> <Elegantbeef> The blind leading the blind if you ask me, but hopefully it helps and doesnt make you waste time
[05:14:43] *** Quits: def- (~def-@static.238.114.9.176.clients.your-server.de) (Quit: -)
[05:15:17] *** Joins: def- (~def-@static.238.114.9.176.clients.your-server.de)
[05:26:12] <NimEventer> New thread by Sdmcallister: Column value extraction, see https://forum.nim-lang.org/t/8773
[05:29:18] <FromDiscord> <michaelb> sent a long message, see http://ix.io/3L3d
[05:29:40] <FromDiscord> <Rika> when statement + const?
[05:29:53] <FromDiscord> <michaelb> (edit) "http://ix.io/3L3d" => "http://ix.io/3L3e"
[05:30:11] <FromDiscord> <Elegantbeef> Yep https://nim-lang.org/docs/manual.html#foreign-function-interface-dynlib-pragma-for-import
[05:30:19] <FromDiscord> <Elegantbeef> That's dynlib, whoops
[05:30:44] <FromDiscord> <Rika> oh yeah they have patterns too huh'
[05:31:03] <FromDiscord> <Elegantbeef> Dynlib does, passL probably doesnt
[05:31:35] <FromDiscord> <michaelb> passL also seems to be passing the flags to gcc and not ld... which is not what I expected
[05:31:41] <FromDiscord> <michaelb> but that's another issue
[05:33:48] <FromDiscord> <michaelb> also, `{.dynlib: "libfoo.so.3".}` is working for me.‚Üµ‚Üµit happens that for this library, when I use dynlib (and I am), I also need to use passL, has to do with how the library is built, i.e. it has a libfoo and a libfoo-core and only spec'ing libfoo in dynlib isn't enough, I need to get flags to the linker also
[05:34:20] <FromDiscord> <michaelb> anyway, this is working on macos, where things are usually more weird, so I was surprised when having trouble with it on linux
[05:36:48] <FromDiscord> <Elegantbeef> Yea i've never dealt with system libraries so cant say much
[05:37:31] <FromDiscord> <michaelb> to clarify, what I mean is that I can successfully do `{.dynlib: "libfoo.so.3"}` and `{.passL: "-lfoo -lfoo-core"}`, but I need to make sure that dynlib and ld are going to resolve the same version of libfoo, hence why I'm trying to figure out the version number aspect re: passL
[05:38:34] <FromDiscord> <michaelb> (edit) ""libfoo.so.3"}`" => ""libfoo.so.3".}`" | "-lfoo-core"}`," => "-lfoo-core".}`,"
[05:43:24] <FromDiscord> <Elegantbeef> Correct me if i'm wrong but isnt the static library vendored by you
[05:43:34] <FromDiscord> <Elegantbeef> So it'll always be the "right" version
[05:44:53] <FromDiscord> <michaelb> it's shared, not static
[05:45:03] <FromDiscord> <michaelb> when it's `.so` I mean
[05:45:25] <FromDiscord> <Elegantbeef> Sure but the one you're doing `-lfoo` for is static isnt it?
[05:45:59] <FromDiscord> <michaelb> In reply to @Elegantbeef "Sure but the one": no
[05:46:03] <FromDiscord> <Elegantbeef> Like i said i've never used libraries so i just thing those are static, i'm probably way wrong
[05:46:10] <FromDiscord> <michaelb> okay, found what works: https://stackoverflow.com/a/3840318
[05:46:41] <FromDiscord> <michaelb> `{.passL: "-l:libfoo.so.3 -llibfoo-core.so.3".}`
[05:46:50] <FromDiscord> <michaelb> (edit) "-llibfoo-core.so.3".}`" => "-l:libfoo-core.so.3".}`"
[05:47:13] <FromDiscord> <michaelb> when you use the `-l:` form, you can give the full name and it will look for that
[05:58:17] *** Quits: sagax (~sagax_nb@user/sagax) (Ping timeout: 240 seconds)
[06:03:10] *** Joins: neurocyte09 (~neurocyte@user/neurocyte)
[06:05:01] *** Quits: neurocyte0 (~neurocyte@user/neurocyte) (Ping timeout: 240 seconds)
[06:05:01] *** neurocyte09 is now known as neurocyte0
[06:45:14] *** Quits: xet7 (~xet7@user/xet7) (Quit: Leaving)
[06:57:25] *** Quits: noeontheend (~noeonthee@207.237.194.194) (Ping timeout: 240 seconds)
[07:07:09] <FromDiscord> <ajusa> Is there a way to set a value for an option type without using `some`? Like `var a: Option[int] = 5`?
[07:13:13] <FromDiscord> <Elegantbeef> Converters
[07:15:13] <FromDiscord> <Elegantbeef> Or make an operator
[07:17:29] <FromDiscord> <ajusa> Didn't think about converters, good idea.
[07:17:47] <FromDiscord> <ajusa> I also found https://github.com/nim-lang/Nim/issues/6246
[07:20:24] <FromDiscord> <Elegantbeef> The operator is cleaner
[07:20:29] <FromDiscord> <Elegantbeef> `? 5` for instance
[07:21:06] *** Joins: xet7 (~xet7@user/xet7)
[07:27:38] *** Quits: xet7 (~xet7@user/xet7) (Quit: Leaving)
[07:30:05] *** Joins: xet7 (~xet7@user/xet7)
[07:39:36] *** Quits: rockcavera (~rc@user/rockcavera) (Remote host closed the connection)
[07:53:32] *** Quits: ehmry (~quassel@2a03:3b40:fe:ab::1) (Ping timeout: 268 seconds)
[07:53:48] *** Joins: ehmry (~quassel@2a03:3b40:fe:ab::1)
[08:41:23] <FromDiscord> <sOkam!> Is there an easy way to alias `func` into another word, without making a big mess?
[08:41:42] <FromDiscord> <sOkam!> Was thinking of making a macro for it, but I don't know how and I also don't know if I could just realias just the word and not all of the rest
[08:42:59] <FromDiscord> <sOkam!> (edit) 04removed "just"
[08:46:08] <FromDiscord> <Elegantbeef> `template`
[08:48:31] <FromDiscord> <Rika> You can‚Äôt without making a big mess
[08:48:48] <FromDiscord> <Rika> Using a template would probably need custom syntax
[08:50:33] <FromDiscord> <Elegantbeef> Oh the keyword
[08:50:38] <FromDiscord> <Elegantbeef> No the keyword is static you cannot change it
[08:51:32] <FromDiscord> <sOkam!> just wanted to alias it, so a different word is solved as the proper word when compiling
[08:51:48] <FromDiscord> <sOkam!> without touching the functionality
[08:51:59] <FromDiscord> <Elegantbeef> Could use a source code filter but it's silly
[08:52:48] <FromDiscord> <sOkam!> wdym?
[08:53:07] <FromDiscord> <Elegantbeef> https://nim-lang.org/docs/filters.html
[08:54:58] <FromDiscord> <Rika> It will change everything
[08:55:12] <FromDiscord> <sOkam!> ah i see
[08:55:14] <FromDiscord> <Rika> Including the word ‚Äúfunc‚Äù in a string
[08:55:20] <FromDiscord> <sOkam!> yeah, it would change the whole file
[09:25:03] <FromDiscord> <gogolxdong (liuxiaodong)> Is there a way to construct XMLNode from string literals?
[09:28:43] <FromDiscord> <Elegantbeef> `parseXml`?
[09:30:19] <FromDiscord> <gogolxdong (liuxiaodong)> yes, that's what I'm looking for.
[09:31:07] <FromDiscord> <gogolxdong (liuxiaodong)> I'm using xmltree, it's hard to use.
[10:37:25] *** Quits: Lord_Nightmare (Lord_Night@user/lord-nightmare/x-3657113) (Ping timeout: 240 seconds)
[10:37:38] *** Joins: Lord_Nightmare2 (Lord_Night@user/lord-nightmare/x-3657113)
[10:41:24] *** Lord_Nightmare2 is now known as Lord_Nightmare
[10:43:37] *** Joins: jjido (~Denis@2a02:c7f:5c91:e700:cdd1:fb1a:1d51:220e)
[11:36:50] *** Joins: PMunch (~PMunch@user/pmunch)
[11:52:39] <FromDiscord> <Michal Mar≈°√°lek> I'm trying to understand converters and don't know why this doesn't work. Can someone please explain? https://play.nim-lang.org/#ix=3L4t
[11:53:53] <FromDiscord> <Elegantbeef> Converters dont work to generics
[11:54:07] <FromDiscord> <Elegantbeef> Rather for generics
[11:54:18] <FromDiscord> <Michal Mar≈°√°lek> Hmm, that's a shame
[11:54:23] <FromDiscord> <Michal Mar≈°√°lek> Is there a workaround?
[11:54:42] <FromDiscord> <Elegantbeef> sent a code paste, see https://play.nim-lang.org/#ix=3L4u
[11:55:30] <PMunch> Don't they?
[11:55:50] <FromDiscord> <Michal Mar≈°√°lek> In reply to @PMunch "Don't they?": they do but not if the type needs to be inferred
[11:56:34] <FromDiscord> <Elegantbeef> sent a code paste, see https://play.nim-lang.org/#ix=3L4v
[11:56:45] <FromDiscord> <Elegantbeef> Imo it's easier just to use an operator or keyword
[11:57:01] <PMunch> Ah right, I was about to say that the error was simply that it couldn't infer S
[11:57:42] <PMunch> If you always want to emit types where T = S though it's easy
[11:57:59] <FromDiscord> <Michal Mar≈°√°lek> In reply to @PMunch "If you always want": no T != S
[11:58:12] <PMunch> But what is S?
[11:58:28] <PMunch> You never use it in your example
[11:58:41] <FromDiscord> <Michal Mar≈°√°lek> it is a static in my usecase
[11:58:53] <PMunch> Static what?
[11:58:57] <FromDiscord> <Michal Mar≈°√°lek> should have kept it static in my example ig
[11:59:20] <FromDiscord> <Michal Mar≈°√°lek> static string but i don't think that matters?
[12:00:07] <PMunch> Well if it's always a static string then it does
[12:00:55] <FromDiscord> <Michal Mar≈°√°lek> How?
[12:01:49] *** Quits: arkanoid (~arkanoid@2-238-151-49.ip244.fastwebnet.it) (Ping timeout: 256 seconds)
[12:02:20] *** Joins: arkanoid (~arkanoid@2-238-151-49.ip244.fastwebnet.it)
[12:02:46] <PMunch> Hmm, maybe not
[12:02:51] <PMunch> I'm trying something out
[12:03:00] <FromDiscord> <Michal Mar≈°√°lek> THis doesn't work either: https://play.nim-lang.org/#ix=3L4A
[12:03:04] <FromDiscord> <Michal Mar≈°√°lek> Still cannot infer S
[12:03:20] <PMunch> Yeah, that's normal
[12:03:29] <PMunch> Because calling that with 0 won't give you S
[12:03:56] <FromDiscord> <Michal Mar≈°√°lek> I understand that now
[12:06:02] <PMunch> Hmm, this is close: https://play.nim-lang.org/#ix=3L4B
[12:06:20] <PMunch> But it complains that it can't instantiate `result:type`
[12:07:04] <PMunch> This works though: https://play.nim-lang.org/#ix=3L4C
[12:07:13] <PMunch> But you have to replicate your static string everywhere
[12:07:42] <FromDiscord> <Michal Mar≈°√°lek> @ElegantBeef  how can I achieve this with statics? this doesn't work: https://play.nim-lang.org/#ix=3L4D
[12:08:13] <FromDiscord> <Elegantbeef> sent a code paste, see https://play.nim-lang.org/#ix=3L4E
[12:09:58] <FromDiscord> <Michal Mar≈°√°lek> sent a code paste, see https://play.nim-lang.org/#ix=3L4F
[12:10:03] <FromDiscord> <Michal Mar≈°√°lek> putting constants in place of geenric arguments üòÑ
[12:10:12] <FromDiscord> <Michal Mar≈°√°lek> thanks
[12:10:32] <FromDiscord> <Elegantbeef> sent a code paste, see https://play.nim-lang.org/#ix=3L4G
[12:11:06] <PMunch> @Michal_Mar≈°√°lek, did you see my last paste?
[12:11:31] <FromDiscord> <Michal Mar≈°√°lek> In reply to @PMunch "@Michal_Mar≈°√°lek, did you see": I did it is similar to what I pasted yes? except the noInit? what does it do?
[12:11:49] <FromDiscord> <Michal Mar≈°√°lek> Also it is not really a solution as it is not generic
[12:12:10] <PMunch> Oh, you can remove the noInit
[12:12:13] <PMunch> And it is generic
[12:12:26] <PMunch> Just not for the S parameter, which you can't infer anyways
[12:12:29] <FromDiscord> <Michal Mar≈°√°lek> it is only for "a"
[12:12:45] <FromDiscord> <Michal Mar≈°√°lek> Yes, but that is the original question
[12:13:03] <PMunch> Then the answer is, it's not possible with converters
[12:13:42] *** Joins: Vladar (~Vladar@46.162.2.53)
[12:14:14] <FromDiscord> <Michal Mar≈°√°lek> Thank you guys very much. ‚ù§Ô∏è
[12:14:43] <FromDiscord> <Michal Mar≈°√°lek> I will probably just emit a new converter for every instantiation of S for now.
[12:15:05] <FromDiscord> <Elegantbeef> Have fun!
[12:18:44] <FromDiscord> <Michal Mar≈°√°lek> no
[12:18:49] <FromDiscord> <Michal Mar≈°√°lek> it leads to ambiguous calls
[12:20:03] <FromDiscord> <Michal Mar≈°√°lek> wait
[12:20:25] <FromDiscord> <Michal Mar≈°√°lek> only if the converters have the same name
[12:20:31] <FromDiscord> <Michal Mar≈°√°lek> that's quite annoying
[12:21:02] <FromDiscord> <Elegantbeef> If you never intend on using it directly add `{.genSym.}` to the converter
[12:22:26] *** Quits: jjido (~Denis@2a02:c7f:5c91:e700:cdd1:fb1a:1d51:220e) (Quit: My MacBook Air has gone to sleep. ZZZzzz‚Ä¶)
[12:25:55] <FromDiscord> <Michal Mar≈°√°lek> thank you
[12:32:19] *** Joins: jjido (~Denis@2a02:c7f:5c91:e700:cdd1:fb1a:1d51:220e)
[12:40:28] *** Quits: vicecea (~vicecea@gateway/vpn/pia/vicecea) (Remote host closed the connection)
[12:41:00] *** Joins: vicecea (~vicecea@gateway/vpn/pia/vicecea)
[12:43:40] *** Quits: jjido (~Denis@2a02:c7f:5c91:e700:cdd1:fb1a:1d51:220e) (Quit: My MacBook Air has gone to sleep. ZZZzzz‚Ä¶)
[13:08:32] <FromDiscord> <Michal Mar≈°√°lek> What is the best way to debug "Error: generic instantiation too nested"?
[13:11:57] <FromDiscord> <haxscramper> There is no proper way to debug it right now, except for maybe adding `static: echo` and seeing how things are instantiated
[13:12:26] <FromDiscord> <haxscramper> You might hit this on a perfectly valid code as well, compiler has a hardcoded limit of 50 instantiations
[13:12:47] <FromDiscord> <Michal Mar≈°√°lek> hmm
[13:13:43] *** Joins: badsektor (~badsektor@user/badsektor)
[13:14:01] *** Quits: badsektor (~badsektor@user/badsektor) (Remote host closed the connection)
[13:14:06] <FromDiscord> <SirOlaf> Is it possible to tell --styleCheck:error to only apply to user-code? asyncdispatch is not accepted with it 1.6.2
[13:14:51] <FromDiscord> <SirOlaf> (edit) "Is it possible to tell --styleCheck:error to only apply to user-code? asyncdispatch is not accepted with it ... 1.6.2" 03added "in"
[13:19:04] <FromDiscord> <Michal Mar≈°√°lek> In reply to @haxscramper "You might hit this": no flag to change that?
[13:21:28] <FromDiscord> <haxscramper> no https://github.com/nim-lang/Nim/blob/devel/compiler/seminst.nim#L342
[13:31:57] *** Quits: Vladar (~Vladar@46.162.2.53) (Quit: Leaving)
[13:34:06] <FromDiscord> <Michal Mar≈°√°lek> Is it possible to make something like this work (I know it looks cursed)? https://play.nim-lang.org/#ix=3L52
[13:35:17] <FromDiscord> <Rika> No
[13:35:31] <FromDiscord> <Rika> Because it ‚Äúclobbers‚Äù generic type syntax
[13:35:50] <FromDiscord> <Rika> You can probably use {}
[13:37:17] <FromDiscord> <Michal Mar≈°√°lek> Ha I didn't know `{}` operator! Is it used in stdlib?
[13:39:27] <FromDiscord> <Michal Mar≈°√°lek> Thanks, that is a good tip
[13:39:55] <FromDiscord> <Rika> No it‚Äôs a set of characters that can be used for an operator
[13:40:04] <FromDiscord> <Rika> There‚Äôs one that uses it, in json
[13:40:47] <FromDiscord> <Michal Mar≈°√°lek> In reply to @Rika "There‚Äôs one that uses": Ah true, I've seen that
[13:41:30] <FromDiscord> <Michal Mar≈°√°lek> In reply to @Rika "No it‚Äôs a set": wdym?
[13:41:45] <FromDiscord> <Rika> Nothing, I misread again
[13:45:41] <FromDiscord> <Michal Mar≈°√°lek> how do I say a macro argument should be an untyped ident?
[13:47:28] <FromDiscord> <Michal Mar≈°√°lek> (edit) "how do I say a macro ... argumentis" 03added "should only match if the" | "should be" => "is" | 04removed "untyped"
[13:50:00] <FromDiscord> <Solitude> In reply to @Michal58 "how do I say": `arg: untyped{ident}`
[13:50:20] <FromDiscord> <Michal Mar≈°√°lek> In reply to @Solitude "`arg: untyped{ident}`": Thank you
[13:52:18] <FromDiscord> <Michal Mar≈°√°lek> sent a code paste, see https://play.nim-lang.org/#ix=3L5a
[13:53:04] <FromDiscord> <Solitude> in this exact form, you cant
[13:54:17] *** Quits: nrds (~NimBot@ns501209.ip-142-4-210.net) (Ping timeout: 268 seconds)
[13:54:37] <FromDiscord> <Michal Mar≈°√°lek> I'd have to probably use termrewriting macros and process it all together including the `let a =`?
[13:55:35] <FromDiscord> <Solitude> In reply to @Michal58 "I'd have to probably": does this work for you? https://play.nim-lang.org/#ix=3L5b
[13:58:18] <FromDiscord> <Michal Mar≈°√°lek> Hmm, I thought about that, but unfortunately I need te order
[14:00:13] <FromDiscord> <Michal Mar≈°√°lek> In reply to @Michal58 "Hmm, I thought about": or maybe I don't
[14:11:07] <FromDiscord> <Michal Mar≈°√°lek> @Rika or anyone, why does this not work? https://play.nim-lang.org/#ix=3L5f
[14:22:42] <FromDiscord> <inv> sent a code paste, see https://play.nim-lang.org/#ix=3L5k
[14:23:23] <FromDiscord> <inv> (edit) "https://play.nim-lang.org/#ix=3L5k" => "https://play.nim-lang.org/#ix=3L5l"
[14:35:39] <FromDiscord> <SirOlaf> In reply to @SirOlaf "Is it possible to": I'll just assume it's not possible
[14:36:15] <FromDiscord> <SirOlaf> Nightly has style issues too btw
[14:36:25] <FromDiscord> <SirOlaf> But that's more expected
[14:36:42] <FromDiscord> <SirOlaf> (edit) "has" => "has(had?)"
[14:55:47] <FromDiscord> <SirOlaf> Either way, the way it's going I'll be back with more issues tomorrow üòõ
[14:59:08] *** Quits: ozzz (~oz@46.49.41.80) (Read error: Connection reset by peer)
[14:59:43] <FromDiscord> <SirOlaf> Also, is it expected for stylecheck error to produce output while hint produces nothing when the import is unused
[15:06:29] *** Joins: ozzz (~oz@46.49.41.80)
[15:10:20] <FromDiscord> <demotomohiro> In reply to @Michal58 "<@!259277943275126785> or anyone, why": It seems you cannot use operators in the type section.‚Üµhttps://play.nim-lang.org/#ix=3L5F
[15:10:36] <FromDiscord> <retkid> i did some python stuf
[15:10:38] <FromDiscord> <retkid> (edit) "stuf" => "stuff"
[15:10:45] <FromDiscord> <retkid> I realized i hate pytho
[15:10:48] <FromDiscord> <retkid> (edit) "pytho" => "python"
[15:11:06] <FromDiscord> <retkid> I think its the least expressive language I know
[15:12:32] <FromDiscord> <retkid> Its weird tat people compare Nim and Python because they look alike
[15:12:40] <FromDiscord> <Rika> Wait until you‚Äôre made to learn Go
[15:13:04] <FromDiscord> <retkid> I've almost learned GO
[15:13:09] <FromDiscord> <retkid> but
[15:13:28] <FromDiscord> <retkid> the project i was working on got suddenly closed forever
[15:13:33] <FromDiscord> <retkid> dodged a bullet
[15:14:58] <FromDiscord> <demotomohiro> I hate python when it shows a error like "number of arguments passed to the function is wrong" after running the code for a few minutes.
[15:15:08] <FromDiscord> <congusbongus> did you use python 2 or something; python is fine‚Üµsure it's quite an old language by now and has a lot of cruft, but it has lots of modern features
[15:16:48] <FromDiscord> <retkid> everything was python3
[15:16:54] <FromDiscord> <retkid> like 3.10 currently
[15:17:04] <FromDiscord> <retkid> not my cup of tea
[15:18:59] <PMunch> @demotomohiro, that's why I prefer compiled languages
[15:19:23] <FromDiscord> <retkid> i too prefer compiled langs
[15:19:33] <FromDiscord> <retkid> java's compiler can suck it tho
[15:20:04] <PMunch> @congusbongus, Python is okay, but I was surprised to discover how clunky it felt after having used Nim for a while
[15:20:26] <FromDiscord> <retkid> maybe its that
[15:20:27] <PMunch> @retkid, I mean Java and C# are basically dynamic languages disguised as a compiled language
[15:20:42] <FromDiscord> <retkid> I just dont enjoy it
[15:21:05] <FromDiscord> <retkid> I prefer static typings
[15:21:36] *** Joins: jjido (~Denis@2a02:c7f:5c91:e700:cdd1:fb1a:1d51:220e)
[15:21:37] <PMunch> I've had errors in my C# program because some of my classes didn't have the correct constructor arguments. It didn't tell me of course, just started up and sat there doing nothing because it couldn't find the correct class to run..
[15:21:54] <FromDiscord> <retkid> i missed let/val, var, and const.
[15:22:24] <PMunch> Hmm, are there pre-built Nim installs for raspbian?
[15:22:35] <PMunch> @federico3 ^
[15:22:51] <FromDiscord> <retkid> there are for arm so why not?
[15:22:56] <PMunch> I tried to apt install it but that tried to install 0.19.4 or something
[15:23:13] <PMunch> Where can I get those? Choosenim just told me it wasn't supported..
[15:25:37] <FromDiscord> <Rika> Probably an old Pi?
[15:25:46] <PMunch> 2B
[15:25:52] <PMunch> So yeah, pretty old
[15:28:08] <FromDiscord> <demotomohiro> sent a code paste, see https://play.nim-lang.org/#ix=3L5K
[15:29:38] <FromDiscord> <krisppurg> In reply to @krisppurg "Hi, I have a": @treeform?
[15:30:32] <FromDiscord> <konsumlamm> In reply to @demotomohiro "Nim script works like": because it still is a compiled language, NimScript is just the subset of Nim that runs in the compile-time VM
[15:32:49] <FromDiscord> <Michal Mar≈°√°lek> In reply to @demotomohiro "It seems you cannot": Hmm, that is a shame
[15:33:06] <FromDiscord> <demotomohiro> In reply to @PMunch "Hmm, are there pre-built": There are prebuild binaries for armv7l but I don't know whether it works on raspbian:‚Üµhttps://github.com/nim-lang/nightlies/releases
[15:35:08] <PMunch> @demotomohiro, I know how Nim and NimScript works, that's why I like it :)
[15:36:43] <FromDiscord> <demotomohiro> I use archlinux on my raspberry PI and it provides latest Nim:‚Üµhttps://archlinuxarm.org
[15:36:54] <PMunch> @demotomohiro, oh nice, according to uname it's a armv7l chip
[15:37:28] <PMunch> This is an OpenHAB install, hence why it's running a rasbian-esque distro
[15:38:16] <FromDiscord> <demotomohiro> In reply to @konsumlamm "because it still is": So compiled language != language that produce a executable file.
[15:38:45] <NimEventer> New thread by Kobi: Is computer online?, see https://forum.nim-lang.org/t/8774
[15:42:08] <FromDiscord> <konsumlamm> In reply to @demotomohiro "So compiled language !=": ye, it doesn't necessarily have to produce an executable, it can also produce bytecode for a VM (which is what NimScript, Java, C#, etc. do)
[15:42:26] <FromDiscord> <konsumlamm> the more useful distinction is probably statically typed vs dynamically typed
[15:44:00] <FromDiscord> <demotomohiro> In reply to @konsumlamm "ye, it doesn't necessarily": That makes sense.
[15:46:37] <PMunch> Yes I guess this case is more about statically typed vs. dynamically typed
[15:46:59] <PMunch> Although I would prefer a dynamically typed compiled language to a dynamically typed interpreted language
[15:47:27] <PMunch> I want to know if I've messed up a function call before my crawler script has crawled websites for an hour thank-you-very-much
[15:47:45] <PMunch> Had that happen to me back when I was using Python..
[15:48:55] <PMunch> Crawled information about the local bus system in order to create an app, crawler ran for a couple hours, then failed on writing the result file because I had done the writing part wrong
[15:50:46] <NimEventer> New thread by Kobi: A thought about error messages, see https://forum.nim-lang.org/t/8775
[15:51:59] <FromDiscord> <el__maco> dynamic typing is magnificently horrible. Nothing like the obscure bugs you get when you accidentally write something to a variable which then polymorphs into a different type that doesn't crash the program but works in subtly different ways
[15:52:56] <FromDiscord> <el__maco> moving most bugs from compile time to runtime is such an amazing idea. Sure makes sense why most popular languages are like that
[15:53:06] <FromDiscord> <hmmm> hey what was the compact definition to initialize an array of 100 len
[15:53:29] <PMunch> array[100, int]
[15:53:33] <PMunch> Boom!
[15:53:37] <FromDiscord> <Rika> In reply to @demotomohiro "So compiled language !=": TypeScript is a compiled language
[15:53:37] <FromDiscord> <hmmm> boom!
[15:53:44] <FromDiscord> <hmmm> ty üòÉ
[15:53:57] <PMunch> Wait, that was a joke :P
[15:54:02] <FromDiscord> <hmmm> what
[15:54:10] <FromDiscord> <hmmm> üßê
[15:54:12] <PMunch> That's just how you define an array of size 100
[15:54:20] <PMunch> What have you been doing?
[15:55:37] <FromDiscord> <hmmm> I want something like [1,2,3..] to 100 and didn't want to populate it with loops since I think I've read there is a compact way to do dat
[15:57:17] <FromDiscord> <demotomohiro> In reply to @Rika "TypeScript is a compiled": I don't know much about TypeScript but it generates JavaScript from TypeScript like Nim generates JavaScript from Nim code?
[15:57:37] <FromDiscord> <Rika> In reply to @demotomohiro "I don't know much": Pretty much from what I recall
[15:58:03] <FromDiscord> <demotomohiro> In reply to @Rika "Pretty much from what": ty!
[15:58:48] <NimEventer> New thread by Kobi: A thought about faster iteration, see https://forum.nim-lang.org/t/8776
[16:04:41] <FromDiscord> <hmmm> sent a code paste, see https://play.nim-lang.org/#ix=3L5V
[16:04:45] <FromDiscord> <hmmm> I'm almost sure there is a one liner to do that
[16:05:02] <FromDiscord> <hmmm> I've read it in some tutorials billions of years ago
[16:10:38] <FromDiscord> <evoalg> was it about seq's instead of array's?
[16:12:02] <FromDiscord> <hmmm> I have a small usecase for a proc called napalmdrop that uses exactly 100 elements so I thought it would be cool to use arrays for that for a change
[16:12:05] <FromDiscord> <demotomohiro> sent a code paste, see https://play.nim-lang.org/#ix=3L5Y
[16:13:42] <FromDiscord> <hmmm> ty demo! are we sure we don't have an import arrayutils somewhere? ü§î
[16:14:24] <FromDiscord> <Rika> No we don‚Äôt
[16:14:39] <FromDiscord> <Rika> Why one line? Make a proc if you want ‚Äúone line‚Äù
[16:14:46] <FromDiscord> <Rika> Call it fill or something
[16:15:00] <FromDiscord> <evoalg> one liner: `var a: array[100, string]; for i in 0 .. 99: a[i] = $i`
[16:15:35] <FromDiscord> <hmmm> I'll do that, I was convinced we had it but probably I was thinking about toseq() from demo
[16:17:03] <PMunch> You also have collect
[16:17:14] <PMunch> But I'm not sure if it can make an array
[16:17:21] <FromDiscord> <hmmm> hmm
[16:20:07] <FromDiscord> <Michal Mar≈°√°lek> In reply to @PMunch "But I'm not sure": I don't think it can
[16:20:38] <FromDiscord> <SirOlaf> sent a code paste, see https://play.nim-lang.org/#ix=3L60
[16:21:31] <FromDiscord> <Rika> Yes and it‚Äôs the same name in lowercase, but not allowed in procs since it‚Äôs a compile time thing or so
[16:22:17] <FromDiscord> <SirOlaf> So there is nothing
[16:22:30] <FromDiscord> <SirOlaf> (edit) "So there is nothing ... " 03added "equivalent"
[16:22:45] <FromDiscord> <Solitude> stdlib doesnt use concepts
[16:22:46] <FromDiscord> <demotomohiro> Both `toSeq` and `collect` can create a seq from iterator, but how many times given iterator iterates is not determined at compile time.‚ÜµSo making `toArray` works like `toSeq` might be not so easy.
[16:23:29] <FromDiscord> <SirOlaf> In reply to @Solitude "stdlib doesnt use concepts": Makes sense, concepts haven't been untouched for quite a while as far as I know. My thing also produces lots of hints of T being unused
[16:23:33] <FromDiscord> <SirOlaf> (edit) "haven't" => "have"
[16:23:48] <FromDiscord> <hmmm> I see! well it's not really necessary so we do it the old way
[16:24:01] <FromDiscord> <demotomohiro> In reply to @SirOlaf "Is there something like": There is `iterable[T]` type class: https://nim-lang.org/docs/manual.html#overload-resolution-iterable
[16:24:33] <FromDiscord> <SirOlaf> Rika already said, but I use this concept in procs
[16:25:03] <FromDiscord> <SirOlaf> And wanted to see if there was a replacement because compiling spams my console with the T unused warning
[16:26:47] <FromDiscord> <Rika> Well try it, it might work, but I believe it won‚Äôt work if you use inline iterators of course
[16:27:00] <FromDiscord> <SirOlaf> I tried it, gave me an error
[16:27:03] <FromDiscord> <demotomohiro> You can pass closure iterator to procedure:‚Üµhttps://nim-lang.org/docs/manual.html#iterators-and-the-for-statement-firstminusclass-iterators
[16:30:39] <FromDiscord> <SirOlaf> Can I also get the iterator for say a deque?
[16:30:58] <FromDiscord> <SirOlaf> To pass to a proc that takes an iterator
[16:31:30] <FromDiscord> <Solitude> sent a code paste, see https://play.nim-lang.org/#ix=3L63
[16:32:48] <FromDiscord> <hmmm> sent a code paste, see https://play.nim-lang.org/#ix=3L64
[16:34:18] <FromDiscord> <Rika> In reply to @hmmm "that would be impressive": What don‚Äôt you get
[16:34:32] <FromDiscord> <hmmm> template and static
[16:34:39] <FromDiscord> <hmmm> also untyped
[16:34:51] <FromDiscord> <Rika> Static just means a compile time value
[16:35:08] <FromDiscord> <Rika> Untyped means ‚Äúdunno the type yet you figure it out‚Äù kinda
[16:35:15] <FromDiscord> <Rika> Template is‚Ä¶ template
[16:36:03] <FromDiscord> <hmmm> so with toArray static toseq you are telling that toArray toseq must be done at compiletime?
[16:37:08] <FromDiscord> <Rika> Oh that part
[16:37:17] <FromDiscord> <Rika> The second static means ‚Äúto seq is done in compile time‚Äù
[16:37:31] <FromDiscord> <Rika> Not the array one since it‚Äôs ‚Äúbefore‚Äù
[16:37:36] <FromDiscord> <Rika> Remember command syntax
[16:51:06] *** Quits: jjido (~Denis@2a02:c7f:5c91:e700:cdd1:fb1a:1d51:220e) (Quit: My MacBook Air has gone to sleep. ZZZzzz‚Ä¶)
[17:08:08] *** Joins: rockcavera (~rc@192.12.114.203)
[17:08:08] *** Quits: rockcavera (~rc@192.12.114.203) (Changing host)
[17:08:08] *** Joins: rockcavera (~rc@user/rockcavera)
[17:30:42] *** Joins: arkurious (~arkurious@user/arkurious)
[17:30:55] <FromDiscord> <hmmm> uh
[17:32:03] <FromDiscord> <hmmm> apparently if a symbol is exported in module C and module B imports module C. If I have a module A that imports B it will not see that symbol
[17:32:34] <FromDiscord> <hmmm> that is not what I expected ü§®
[17:33:49] <FromDiscord> <Solitude> export whatever symbol you need from module B
[17:34:59] <FromDiscord> <hmmm> the symbol I need is in module C and I wanted to use it in A. Since A imported B that imported C I assumed the symbol was visible to A
[17:35:17] <FromDiscord> <hmmm> oh can I import only the symbol I need?
[17:35:28] <FromDiscord> <hmmm> what was the syntax from y import thingy?
[17:35:34] <FromDiscord> <Solitude> from y import thingy
[17:36:07] <FromDiscord> <demotomohiro> Here is how to do what @Solitude said: https://nim-lang.org/docs/manual.html#modules-export-statement
[17:36:51] <FromDiscord> <hmmm> is there a reason nim doesn't work as I expected it would work? ü§î
[17:37:05] <FromDiscord> <Solitude> yes, the way you expected it to work is bad
[17:37:06] <FromDiscord> <hmmm> I mean a techincal reason the exports arent' transitive
[17:40:20] <FromDiscord> <hmmm> hmm I couldn't add another e so I added a 3 ü§î
[17:40:31] <FromDiscord> <hmmm> lol
[17:40:33] <FromDiscord> <hmmm> right
[17:43:56] <FromDiscord> <demotomohiro> Module B imports module C now but it might import module D instead of C in future.‚ÜµIf modules importing module B also uses symbols from module C, changing importing module in B is breaking change.
[17:45:04] <NimEventer> New thread by Pietroppeter: Made in Nim 2021 - your favorites?, see https://forum.nim-lang.org/t/8777
[17:47:14] <FromDiscord> <hmmm> demo you are good at explaining things üòä
[17:49:46] <FromDiscord> <demotomohiro> ty!
[18:05:32] *** Joins: badsektor (~badsektor@user/badsektor)
[19:00:13] *** Quits: arkurious (~arkurious@user/arkurious) (*.net *.split)
[19:00:13] *** Quits: rockcavera (~rc@user/rockcavera) (*.net *.split)
[19:00:14] *** Quits: ozzz (~oz@46.49.41.80) (*.net *.split)
[19:00:14] *** Quits: ehmry (~quassel@2a03:3b40:fe:ab::1) (*.net *.split)
[19:00:14] *** Quits: neurocyte0 (~neurocyte@user/neurocyte) (*.net *.split)
[19:00:14] *** Quits: Onionhammer (~onionhamm@23-88-146-29.fttp.usinternet.com) (*.net *.split)
[19:00:14] *** Quits: oddish (~oddish@2a01:4f8:1c1c:a9da::1) (*.net *.split)
[19:00:14] *** Quits: tk (~tk@ircpuzzles/staff/tk) (*.net *.split)
[19:00:14] *** Quits: NimBot (~NimBot@mail.nim-lang.org) (*.net *.split)
[19:00:15] *** Quits: averell (~averell@user/averell) (*.net *.split)
[19:00:15] *** Quits: meowray (MaskRay@2600:3c01::f03c:91ff:fea1:e018) (*.net *.split)
[19:00:15] *** Quits: dv^_^ (~dv@eclipse.oxfordfun.com) (*.net *.split)
[19:00:15] *** Quits: pippin (~pippin@gegl.org) (*.net *.split)
[19:00:16] *** Quits: vicecea (~vicecea@gateway/vpn/pia/vicecea) (*.net *.split)
[19:00:16] *** Quits: Lord_Nightmare (Lord_Night@user/lord-nightmare/x-3657113) (*.net *.split)
[19:00:16] *** Quits: rb (~augh@theguntretort.com) (*.net *.split)
[19:00:16] *** Quits: beshr (~beshr@user/beshr) (*.net *.split)
[19:00:17] *** Quits: jkl1337 (~jkl@user/jkl) (*.net *.split)
[19:00:17] *** Quits: Zevv (~Zevvvvv@185.238.131.12) (*.net *.split)
[19:00:18] *** Quits: robertmeta (sid514@user/robertmeta) (*.net *.split)
[19:00:18] *** Quits: cheer[m] (~cheertchn@2001:470:69fc:105::39de) (*.net *.split)
[19:00:19] *** Quits: toothlessgear (2c15493d69@user/toothlessgear) (*.net *.split)
[19:00:19] *** Quits: blackbeard420 (blackbeard@2600:3c03::f03c:91ff:fe92:3f2a) (*.net *.split)
[19:00:20] *** Quits: zacts (~zacts@user/zacts) (*.net *.split)
[19:00:20] *** Quits: dom96 (~dom@mail.nim-lang.org) (*.net *.split)
[19:00:20] *** Quits: adium (adium@user/adium) (*.net *.split)
[19:00:20] *** Quits: xet7 (~xet7@user/xet7) (*.net *.split)
[19:00:20] *** Quits: dtomato (~dtomato@82-64-189-70.subs.proxad.net) (*.net *.split)
[19:00:20] *** Quits: nixfreaknim[m] (~reversem3@2001:470:69fc:105::33d1) (*.net *.split)
[19:00:21] *** Quits: redj (~quassel@bras-base-bchmpq5707w-grc-11-74-15-230-188.dsl.bell.ca) (*.net *.split)
[19:00:21] *** Quits: GreaseMonkey (greaser@user/greasemonkey) (*.net *.split)
[19:00:21] *** Quits: crem (~crem@2a02:169:160a:1:9b30:962e:76eb:4bb3) (*.net *.split)
[19:00:22] *** Quits: koltrast (~koltrast@h77-53-57-114.cust.a3fiber.se) (*.net *.split)
[19:00:23] *** Quits: notchris (sid181145@id-181145.hampstead.irccloud.com) (*.net *.split)
[19:00:23] *** Quits: Schnouki (e7aa4cfb39@user/schnouki) (*.net *.split)
[19:00:23] *** Quits: gshumway (~gshumway@user/gshumway) (*.net *.split)
[19:00:23] *** Quits: madprops (hj8oijo@user/madprops) (*.net *.split)
[19:00:23] *** Quits: lain (~lain@172.16.254.xxx) (*.net *.split)
[19:00:23] *** Quits: qwr (~qwr@182-83-235-80.dyn.estpak.ee) (*.net *.split)
[19:00:24] *** Quits: djanatyn (~djanatyn@vps-7f49a6b0.vps.ovh.ca) (*.net *.split)
[19:00:24] *** Quits: xiamx (~xiamx@2001:470:69fc:105::1:5692) (*.net *.split)
[19:00:24] *** Quits: happycorsair[m] (~happycors@2001:470:69fc:105::205) (*.net *.split)
[19:00:24] *** Quits: FromDiscord (~FromDisco@mail.nim-lang.org) (*.net *.split)
[19:00:24] *** Quits: mal`` (~mal``@static.38.6.217.95.clients.your-server.de) (*.net *.split)
[19:00:24] *** Quits: anddam (~anddam@user/anddam) (*.net *.split)
[19:00:25] *** Quits: mjsir911 (~bnc@user/mjsir911) (*.net *.split)
[19:00:25] *** Quits: ormiret (sid314108@id-314108.lymington.irccloud.com) (*.net *.split)
[19:00:26] *** Quits: Yardanico (~quassel@user/yardanico) (*.net *.split)
[19:00:26] *** Quits: NimEventer (~NimBot@78.47.140.224) (*.net *.split)
[19:00:26] *** Quits: xiamx[m] (~xiamxmatr@2001:470:69fc:105::1:567b) (*.net *.split)
[19:00:26] *** Quits: Goodbye_Vincent (cyvahl@freakshells.net) (*.net *.split)
[19:00:27] *** Quits: mahlon_ (~mahlon@martini.nu) (*.net *.split)
[19:00:27] *** Quits: rp3 (~rp@cpc77289-basf12-2-0-cust607.12-3.cable.virginm.net) (*.net *.split)
[19:00:27] *** Quits: GnuYawk (~GnuYawk@user/gnuyawk) (*.net *.split)
[19:00:27] *** Quits: ecs (~ecs@user/ecs) (*.net *.split)
[19:00:28] *** Quits: [R] (~rs@genoce.org) (*.net *.split)
[19:00:28] *** Quits: anadahz (~user@gateway/tor-sasl/anadahz) (*.net *.split)
[19:01:12] *** Joins: arkurious (~arkurious@user/arkurious)
[19:01:12] *** Joins: rockcavera (~rc@user/rockcavera)
[19:01:12] *** Joins: ozzz (~oz@46.49.41.80)
[19:01:12] *** Joins: ehmry (~quassel@2a03:3b40:fe:ab::1)
[19:01:12] *** Joins: neurocyte0 (~neurocyte@user/neurocyte)
[19:01:12] *** Joins: Onionhammer (~onionhamm@23-88-146-29.fttp.usinternet.com)
[19:01:12] *** Joins: oddish (~oddish@2a01:4f8:1c1c:a9da::1)
[19:01:12] *** Joins: tk (~tk@ircpuzzles/staff/tk)
[19:01:12] *** Joins: NimBot (~NimBot@mail.nim-lang.org)
[19:01:57] *** Joins: gshumway (~gshumway@user/gshumway)
[19:01:57] *** Joins: notchris (sid181145@id-181145.hampstead.irccloud.com)
[19:01:57] *** Joins: Schnouki (e7aa4cfb39@user/schnouki)
[19:01:57] *** Joins: madprops (hj8oijo@user/madprops)
[19:01:57] *** Joins: lain (~lain@172.16.254.xxx)
[19:01:57] *** Joins: qwr (~qwr@182-83-235-80.dyn.estpak.ee)
[19:01:57] *** Joins: djanatyn (~djanatyn@vps-7f49a6b0.vps.ovh.ca)
[19:02:02] *** Joins: dom96 (~dom@mail.nim-lang.org)
[19:02:02] *** Joins: adium (adium@user/adium)
[19:02:07] *** Joins: xet7 (~xet7@user/xet7)
[19:02:07] *** Joins: dtomato (~dtomato@82-64-189-70.subs.proxad.net)
[19:02:07] *** Joins: nixfreaknim[m] (~reversem3@2001:470:69fc:105::33d1)
[19:02:07] *** Joins: redj (~quassel@bras-base-bchmpq5707w-grc-11-74-15-230-188.dsl.bell.ca)
[19:02:07] *** Joins: GreaseMonkey (greaser@user/greasemonkey)
[19:02:07] *** Joins: crem (~crem@2a02:169:160a:1:9b30:962e:76eb:4bb3)
[19:02:07] *** Joins: koltrast (~koltrast@h77-53-57-114.cust.a3fiber.se)
[19:02:13] *** Joins: xiamx (~xiamx@2001:470:69fc:105::1:5692)
[19:02:13] *** Joins: happycorsair[m] (~happycors@2001:470:69fc:105::205)
[19:02:13] *** Joins: FromDiscord (~FromDisco@mail.nim-lang.org)
[19:02:13] *** Joins: mal`` (~mal``@static.38.6.217.95.clients.your-server.de)
[19:02:13] *** Joins: anddam (~anddam@user/anddam)
[19:02:13] *** Joins: mjsir911 (~bnc@user/mjsir911)
[19:02:13] *** Joins: ormiret (sid314108@id-314108.lymington.irccloud.com)
[19:02:13] *** Joins: Yardanico (~quassel@user/yardanico)
[19:02:13] *** Joins: NimEventer (~NimBot@78.47.140.224)
[19:02:19] *** Joins: cheer[m] (~cheertchn@2001:470:69fc:105::39de)
[19:02:19] *** Joins: zacts (~zacts@user/zacts)
[19:02:19] *** Joins: toothlessgear (2c15493d69@user/toothlessgear)
[19:02:19] *** Joins: blackbeard420 (blackbeard@2600:3c03::f03c:91ff:fe92:3f2a)
[19:02:26] *** Joins: averell (~averell@user/averell)
[19:02:26] *** Joins: pippin (~pippin@gegl.org)
[19:02:26] *** Joins: meowray (MaskRay@2600:3c01::f03c:91ff:fea1:e018)
[19:02:26] *** Joins: dv^_^ (~dv@eclipse.oxfordfun.com)
[19:02:43] *** Joins: anadahz (~user@gateway/tor-sasl/anadahz)
[19:02:48] *** Joins: robertmeta (sid514@user/robertmeta)
[19:02:57] *** Quits: cheer[m] (~cheertchn@2001:470:69fc:105::39de) (Ping timeout: 250 seconds)
[19:03:04] *** Joins: xiamx[m] (~xiamxmatr@2001:470:69fc:105::1:567b)
[19:03:04] *** Joins: Goodbye_Vincent (cyvahl@freakshells.net)
[19:03:04] *** Joins: mahlon_ (~mahlon@martini.nu)
[19:03:04] *** Joins: rp3 (~rp@cpc77289-basf12-2-0-cust607.12-3.cable.virginm.net)
[19:03:04] *** Joins: GnuYawk (~GnuYawk@user/gnuyawk)
[19:03:04] *** Joins: ecs (~ecs@user/ecs)
[19:03:04] *** Joins: [R] (~rs@genoce.org)
[19:03:07] *** Quits: xiamx[m] (~xiamxmatr@2001:470:69fc:105::1:567b) (Ping timeout: 260 seconds)
[19:03:08] *** Joins: vicecea (~vicecea@gateway/vpn/pia/vicecea)
[19:03:08] *** Joins: Lord_Nightmare (Lord_Night@user/lord-nightmare/x-3657113)
[19:03:08] *** Joins: rb (~augh@theguntretort.com)
[19:03:08] *** Joins: beshr (~beshr@user/beshr)
[19:03:08] *** Joins: jkl1337 (~jkl@user/jkl)
[19:03:08] *** Joins: Zevv (~Zevvvvv@185.238.131.12)
[19:03:17] *** Quits: xiamx (~xiamx@2001:470:69fc:105::1:5692) (Ping timeout: 268 seconds)
[19:03:32] *** Quits: nixfreaknim[m] (~reversem3@2001:470:69fc:105::33d1) (Ping timeout: 240 seconds)
[19:03:52] *** Quits: happycorsair[m] (~happycors@2001:470:69fc:105::205) (Ping timeout: 268 seconds)
[19:06:15] *** Quits: vicecea (~vicecea@gateway/vpn/pia/vicecea) (Ping timeout: 256 seconds)
[19:08:21] *** Joins: vicecea (~vicecea@gateway/vpn/pia/vicecea)
[19:09:04] <FromDiscord> <Michal Mar≈°√°lek> Can someone help me understand converters? https://play.nim-lang.org/#ix=3L7f
[19:15:55] <FromDiscord> <SirOlaf> Hope that's a bug
[19:16:02] *** Joins: xiamx[m] (~xiamxmatr@2001:470:69fc:105::1:567b)
[19:16:46] <FromDiscord> <Solitude> In reply to @Michal58 "Can someone help me": math.^ is generic too, not clear which one should have the priority
[19:16:46] <FromDiscord> <SirOlaf> Because that would be bad design
[19:17:29] <FromDiscord> <Solitude> In reply to @SirOlaf "Because that would be": converters are bad design  and they lead to bad design
[19:18:08] *** Joins: cheer[m] (~cheertchn@2001:470:69fc:105::39de)
[19:19:13] <FromDiscord> <Michal Mar≈°√°lek> In reply to @Solitude "math.^ is generic too,": Seems only natural the one without needing for converter call should have priority?
[19:20:08] <FromDiscord> <Solitude> true, you probably could submit an issue
[19:20:47] <FromDiscord> <Solitude> or ask on forum, where araq could maybe see your question
[19:24:33] <FromDiscord> <haxscramper> sent a code paste, see https://paste.rs/4UR
[19:25:10] <FromDiscord> <haxscramper> in first case it calls the conveter implicitly even when it is called explicitly
[19:25:29] <FromDiscord> <haxscramper> I don't think converter is able to properly infer it's argument values
[19:28:44] <FromDiscord> <haxscramper> In reply to @Michal58 "Can someone help me": and yes, try using operator names that are not already in math, for example `!` and `^!`
[19:29:11] <FromDiscord> <haxscramper> this way it actually calls whatever you defined instead of defaulting to things with higher precedence
[19:29:46] <FromDiscord> <haxscramper> any call match that uses converter has the lowest precedence of all calls, so even `SomeInteger  SomeFloat` etc. would fit better
[19:36:44] <FromDiscord> <Michal Mar≈°√°lek> In reply to @haxscramper "any call match that": I dont't understand this
[19:38:56] <FromDiscord> <haxscramper> https://nim-lang.org/docs/manual.html#overload-resolution generics are considered first, then compiler looks for possible calls using converters
[19:39:19] <FromDiscord> <haxscramper> so you can't make converter call win over generic one
[19:41:59] <FromDiscord> <haxscramper> sent a code paste, see https://play.nim-lang.org/#ix=3L7w
[19:42:11] <FromDiscord> <haxscramper> not ambiguous, it calls integer one because calling float would require converter
[19:42:32] <FromDiscord> <Michal Mar≈°√°lek> That is the exact opossite of what I'm complaining about is happening
[19:44:49] <FromDiscord> <Michal Mar≈°√°lek> In my paste, the converter call wins
[19:48:57] <FromDiscord> <SirOlaf> sent a code paste, see https://play.nim-lang.org/#ix=3L7B
[19:48:59] <FromDiscord> <SirOlaf> With rest of code the same
[19:49:22] <FromDiscord> <SirOlaf> Or wait, that's me doing nonsense
[19:50:36] <FromDiscord> <haxscramper> sent a code paste, see https://play.nim-lang.org/#ix=3L7D
[19:50:44] <FromDiscord> <haxscramper> I just got lost in all the unnecessary generics in the original example
[19:50:50] <FromDiscord> <SirOlaf> In reply to @SirOlaf "Or wait, that's me": On this incorrect usage, why is it not checked when it's unused
[19:51:15] <FromDiscord> <SirOlaf> Is it because of generics?
[19:53:01] <FromDiscord> <haxscramper> sent a code paste, see https://play.nim-lang.org/#ix=3L7E
[19:53:32] <FromDiscord> <haxscramper> It must match `^` with `T/Natural` because this call would use two generic matches, which have a higher precedence compared to the converter matches
[19:53:46] <FromDiscord> <haxscramper> Actually wait, that's me being stupid
[19:54:10] <FromDiscord> <haxscramper> `(Generic, Generic)` supposedly is weaker than `(Converter, Literal)`, since literal match has the `#1` precendence
[19:54:13] <FromDiscord> <SirOlaf> Generics seem kinda strange
[19:54:55] <FromDiscord> <haxscramper> In reply to @haxscramper "`(Generic, Generic)` supposedly is": I don't remember sigmatch good enough to say for sure whether this is true, but at least "accoding to spec" it works expectedly
[19:55:15] <FromDiscord> <SirOlaf> sent a code paste, see https://play.nim-lang.org/#ix=3L7H
[19:55:35] <FromDiscord> <SirOlaf> (edit) "https://play.nim-lang.org/#ix=3L7H" => "https://play.nim-lang.org/#ix=3L7I"
[19:55:50] <FromDiscord> <SirOlaf> But only errors when it's used
[19:57:07] <FromDiscord> <haxscramper> there was an RFC for something related, but I"m not sure which one. https://github.com/nim-lang/RFCs/issues/168 and https://github.com/nim-lang/RFCs/issues/416, or rather discussions around them have mentioned this feature from time to time
[19:58:48] *** Joins: happycorsair[m] (~happycors@2001:470:69fc:105::205)
[20:00:58] <FromDiscord> <SirOlaf> sent a code paste, see https://play.nim-lang.org/#ix=3L7O
[20:06:08] <FromDiscord> <Rika> rust has a different type system that is incompatible with what nim does
[20:06:55] <FromDiscord> <SirOlaf> I assume nim emits new procs/types/whatever for generics when instantiated and skips checks for the base construct
[20:07:20] <FromDiscord> <SirOlaf> Don't see why the base construct can't be checked
[20:09:05] <FromDiscord> <SirOlaf> It's also not like nim skips checks for all unused functions
[20:09:07] <FromDiscord> <el__maco> its not clear why should it though
[20:09:41] <FromDiscord> <SirOlaf> Just seems inconsistent as it clearly produces errors for concrete functions that are unused
[20:09:50] <FromDiscord> <Rika> In reply to @SirOlaf "But only errors when": i believe it just plain doesnt check until its used, its the same for regular procs afaik
[20:09:55] <FromDiscord> <Rika> DCE too aggressive i guess?
[20:10:18] <FromDiscord> <SirOlaf> sent a code paste, see https://play.nim-lang.org/#ix=3L7V
[20:10:19] <FromDiscord> <SirOlaf> But not the generic variant
[20:10:22] <FromDiscord> <el__maco> if you have a proc that you don't use, isn't type checking it just extra work for the compiler that slows things down
[20:10:37] <FromDiscord> <SirOlaf> Problem is that the non-generic version actually is checked
[20:11:16] <FromDiscord> <el__maco> its not obvious to me why that matters ü§∑‚Äç‚ôÇÔ∏è
[20:11:41] <FromDiscord> <SirOlaf> It's not some compiler-breaking issue or anything, just inconsistent
[20:15:15] <FromDiscord> <SirOlaf> sent a code paste, see https://play.nim-lang.org/#ix=3L80
[20:15:32] <FromDiscord> <SirOlaf> Is that different from generics or are empty generics just allowed for some reason
[20:16:15] <FromDiscord> <SirOlaf> (edit) "https://play.nim-lang.org/#ix=3L80" => "https://play.nim-lang.org/#ix=3L81"
[20:16:59] <FromDiscord> <SirOlaf> Because it does compile and can be used
[20:23:08] <FromDiscord> <SirOlaf> Guess it is wanted according to grammar
[20:26:58] <FromDiscord> <Patitotective> sent a code paste, see https://play.nim-lang.org/#ix=3L85
[20:27:29] <FromDiscord> <Patitotective> (edit) "https://play.nim-lang.org/#ix=3L85" => "https://play.nim-lang.org/#ix=3L86"
[20:27:51] <FromDiscord> <Patitotective> Should I create my own procedure to achieve it?
[20:28:11] <FromDiscord> <Patitotective> (edit) "Should" => "Or should"
[20:29:57] <FromDiscord> <el__maco> sent a code paste, see https://play.nim-lang.org/#ix=3L89
[20:30:06] *** Joins: xiamx (~xiamx@2001:470:69fc:105::1:5692)
[20:37:39] *** Joins: nixfreaknim[m] (~reversem3@2001:470:69fc:105::33d1)
[20:56:06] <FromDiscord> <Patitotective> sent a code paste, see https://play.nim-lang.org/#ix=3L8k
[20:57:43] <FromDiscord> <Patitotective> sent a code paste, see https://play.nim-lang.org/#ix=3L8o
[20:57:52] <FromDiscord> <Patitotective> (edit) "https://play.nim-lang.org/#ix=3L8o" => "https://play.nim-lang.org/#ix=3L8p"
[20:58:02] <FromDiscord> <Michal Mar≈°√°lek> defined
[20:58:12] <FromDiscord> <Michal Mar≈°√°lek> (edit) "defined" => "`defined`"
[20:58:17] <FromDiscord> <Rika> !eval let a = 0; echo defined a; echo defined b
[20:58:19] <NimBot> false‚Üµfalse
[20:58:24] <FromDiscord> <Rika> ??
[20:59:11] <FromDiscord> <Patitotective> Thanks
[20:59:12] <FromDiscord> <Patitotective> üôÉ
[21:01:04] <FromDiscord> <demotomohiro> !eval let a = 0; echo declared a; echo declared bbbb
[21:01:07] <NimBot> true‚Üµfalse
[21:02:18] <FromDiscord> <demotomohiro> https://nim-lang.org/docs/system.html#declared%2Cuntyped
[21:06:25] <FromDiscord> <demotomohiro> `defined` is not for checking existance of variables.‚Üµhttps://nim-lang.org/docs/system.html#defined,untyped
[21:07:53] <FromDiscord> <Rika> i forgot xd
[21:11:57] *** Joins: Gustavo6046 (~Gustavo60@user/gustavo6046)
[21:13:25] *** Quits: meowray (MaskRay@2600:3c01::f03c:91ff:fea1:e018) (Changing host)
[21:13:25] *** Joins: meowray (MaskRay@user/meowray)
[21:17:07] <FromDiscord> <Michal Mar≈°√°lek> Lol I used it wrongly today then üòÆ
[21:22:15] *** Joins: nrds (~NimBot@ns501209.ip-142-4-210.net)
[21:34:38] *** Joins: noeontheend (~noeonthee@12.205.205.130)
[21:38:39] *** Joins: Figworm (~inoor@user/figworm)
[22:02:40] *** Joins: jjido (~Denis@2a02:c7f:5c91:e700:cdd1:fb1a:1d51:220e)
[22:31:13] *** Joins: vicfred (~vicfred@user/vicfred)
[22:34:19] *** Joins: vicfred_ (~vicfred@user/vicfred)
[22:35:26] *** Joins: Gustavo6046_ (~Gustavo60@user/gustavo6046)
[22:36:57] *** Quits: vicfred (~vicfred@user/vicfred) (Ping timeout: 240 seconds)
[22:37:35] *** Quits: Gustavo6046 (~Gustavo60@user/gustavo6046) (Ping timeout: 252 seconds)
[22:40:15] *** Quits: Gustavo6046_ (~Gustavo60@user/gustavo6046) (Client Quit)
[22:40:29] *** Joins: Gustavo6046 (~Gustavo60@user/gustavo6046)
[22:43:35] *** Quits: jjido (~Denis@2a02:c7f:5c91:e700:cdd1:fb1a:1d51:220e) (Quit: My MacBook Air has gone to sleep. ZZZzzz‚Ä¶)
[22:56:32] <FromDiscord> <DMI-1407> have a question related to nim and mt
[22:57:36] <FromDiscord> <DMI-1407>  https://media.discordapp.net/attachments/371759389889003532/928369158293438524/asd.png
[22:58:04] <FromDiscord> <DMI-1407> does this mean i can not use multithreaded code in dlls ?
[23:00:28] <FromDiscord> <planetis> does anyone knows what this error means\: https://pastebin.com/kRytQG8n
[23:03:32] <FromDiscord> <planetis> not if you use --mm\:arc or orc‚Üµ(@DMI-1407)
[23:28:34] *** Quits: badsektor (~badsektor@user/badsektor) (Quit: Leaving)
[23:33:54] *** Quits: vicfred_ (~vicfred@user/vicfred) (Quit: Leaving)
[23:38:39] *** Joins: jjido (~Denis@2a02:c7f:5c91:e700:cdd1:fb1a:1d51:220e)
[23:52:14] <FromDiscord> <SoicBR> sent a code paste, see https://play.nim-lang.org/#ix=3L9t
[23:53:47] *** Joins: krux02 (~krux02@p200300e81723dd00b48b627b8314596f.dip0.t-ipconnect.de)
[23:56:58] *** Parts: fvs (freevryhei@2600:3c00::f03c:92ff:fe55:ff21) (WeeChat 3.4)
[23:58:10] <FromDiscord> <Rosen> I bet you can just put air at the end and it'll work
[23:58:17] <FromDiscord> <Rosen> Since the error refers to order
