[00:00:16] *** Joins: CryptoDavid (uid14990@id-14990.uxbridge.irccloud.com)
[00:01:17] *** Quits: salad (~cucumber@188.25.234.155) (Quit: salad)
[00:02:31] *** Joins: quazimodo (~quazimodo@n1-41-223-188.bla2.nsw.optusnet.com.au)
[00:03:15] *** Quits: comatory_ (~ondrejsyn@217.11.241.69) (Ping timeout: 256 seconds)
[00:04:17] *** Quits: corgi (~corgi@user/corgi) (Ping timeout: 240 seconds)
[00:06:47] <mauz> I ended up using String.replace() it does the job as I only 2 token to replace :)
[00:08:23] <mauz> ljharb: I like codegen especially to generate a typescript type set from a remote API or Schemas
[00:09:41] *** Joins: Tobbi (~Tobbi@2a02:8108:1240:48ec:91c7:2a85:731c:7bf8)
[00:11:01] *** Quits: colordrops (~erahhal@cpe-142-129-123-225.socal.res.rr.com) (Quit: WeeChat 3.1)
[00:12:26] *** Quits: mauz (~mauz@2a01:e0a:994:7ed0:447d:90ef:1d3a:2ae0) (Remote host closed the connection)
[00:12:36] *** Joins: mauz (~mauz@2a01:e0a:994:7ed0:447d:90ef:1d3a:2ae0)
[00:13:25] *** Quits: panella32 (~panella32@154.6.16.6) (Ping timeout: 240 seconds)
[00:13:34] *** Joins: cmbengue (~Thunderbi@207.191.249.160)
[00:15:51] *** Joins: Anonamy (~Anonamy@node-1w7jr9qsmpnqx5s3vo4msg2dy.ipv6.telus.net)
[00:15:52] *** Joins: vdamewood (~vdamewood@fedora/vdamewood)
[00:16:13] *** Joins: BaggersIO (~BaggersIO@2a02:810d:983f:b088:f5bd:b9cb:8667:df40)
[00:17:16] *** Joins: xall (~xall@2600:8800:8c02:3600:1173:a052:4798:9101)
[00:18:51] *** Joins: davlefou (~davlefou@5.183.214.3)
[00:19:04] *** Joins: corgi (~corgi@2620:1b2:c40:3000:23d5:834:546c:ee7d)
[00:19:05] *** Quits: corgi (~corgi@2620:1b2:c40:3000:23d5:834:546c:ee7d) (Changing host)
[00:19:05] *** Joins: corgi (~corgi@user/corgi)
[00:22:17] *** Quits: BaggersIO (~BaggersIO@2a02:810d:983f:b088:f5bd:b9cb:8667:df40) (Ping timeout: 240 seconds)
[00:22:37] *** Quits: renlo (~Renlo_Ren@pool-108-14-112-182.nycmny.east.verizon.net) (Ping timeout: 240 seconds)
[00:22:38] *** Quits: zwei (~Zweihande@znc.ext.zweihander.me) (Quit: ZNC - https://znc.in)
[00:23:01] *** Quits: DrowningElysium (uid190788@user/drowningelysium) (Quit: Connection closed for inactivity)
[00:23:33] *** Joins: enoq_ (~enoq@194-208-178-35.lampert.tv)
[00:24:18] *** Quits: enoq_ (~enoq@194-208-178-35.lampert.tv) (Client Quit)
[00:24:21] *** Joins: renlo (~Renlo_Ren@pool-108-14-112-182.nycmny.east.verizon.net)
[00:24:30] *** Quits: kogepan (~kogepan@user/kogepan) (Read error: Connection reset by peer)
[00:24:43] *** Joins: kogepan (~kogepan@user/kogepan)
[00:24:43] *** Quits: corgi (~corgi@user/corgi) (Ping timeout: 268 seconds)
[00:25:40] *** Joins: Zweihander (~Zweihande@znc.ext.zweihander.me)
[00:26:32] *** Joins: voltage (voltage@user/voltage)
[00:27:49] *** Quits: voltage_ (voltage@user/voltage) (Ping timeout: 240 seconds)
[00:28:39] <ThePendulum> I guess postgraphile could count as code gen
[00:29:34] *** Joins: sharperguy (~sharpergu@89.244.120.152)
[00:30:14] *** Joins: corgi (~corgi@2620:1b2:c40:3000:23d5:834:546c:ee7d)
[00:30:14] *** Quits: corgi (~corgi@2620:1b2:c40:3000:23d5:834:546c:ee7d) (Changing host)
[00:30:14] *** Joins: corgi (~corgi@user/corgi)
[00:34:13] *** Quits: ___nick___ (~quassel@cpc68286-cdif17-2-0-cust533.5-1.cable.virginm.net) (Ping timeout: 240 seconds)
[00:34:59] *** Quits: renlo (~Renlo_Ren@pool-108-14-112-182.nycmny.east.verizon.net) (Ping timeout: 256 seconds)
[00:37:24] *** Quits: sheetjs (~sheetjs@user/sheetjs) (Ping timeout: 256 seconds)
[00:38:43] *** Quits: Tobbi (~Tobbi@2a02:8108:1240:48ec:91c7:2a85:731c:7bf8) (Quit: My MacBook has gone to sleep. ZZZzzzâ€¦)
[00:38:46] *** Joins: mknod (~mknod@user/mknod)
[00:39:37] *** voltage is now known as voltage_
[00:39:59] *** Quits: Zweihander (~Zweihande@znc.ext.zweihander.me) (Read error: Connection reset by peer)
[00:40:00] <mknod> Hello. Does JavaScript have anything that resemble Perl's do block? A block that returns something.
[00:40:52] <mknod> console.log('some text' + // return something based on some logic here + 'some more text')
[00:40:59] <mknod> I don't wish to use the ternary operator.
[00:41:33] <systemfault> mknod: string interpolation could do the trick I believe
[00:41:57] <systemfault> n> console.log(`Hello, 2 + 2 is ${ 2 + 2 }`)
[00:41:58] <jellobot> (okay) Hello, 2 + 2 is 4
[00:42:01] *** Joins: sheetjs (~sheetjs@user/sheetjs)
[00:42:28] <systemfault> But it's only for expressions
[00:43:42] <mknod> I need to put statements in there.
[00:44:09] <mknod> But it's interesting nonetheless, thank you for this.
[00:44:46] <systemfault> There's a proposal for "do blocks" but it's nowhere near ready to be added to the language...
[00:45:08] *** Joins: Zweihander (~Zweihande@znc.ext.zweihander.me)
[00:45:34] <mknod> I just had an idea...
[00:45:54] <systemfault> You can use a IIFE.... if you really want
[00:46:33] <hassoon> iife's remind me of portabe programs
[00:46:33] <systemfault> n> console.log(`Hello, 2 + 2 is ${ (() => { let a = 10; return a })()}`)
[00:46:34] <jellobot> (okay) Hello, 2 + 2 is 10
[00:47:24] <mknod> n> console.log('some text' + [''].map(function(_) { if (true) return ' test ' } ) + 'some more text')
[00:47:25] <jellobot> (okay) some text test some more text
[00:47:47] <mknod> I was close. :)
[00:47:59] *** Joins: renlo (~Renlo_Ren@pool-108-14-112-182.nycmny.east.verizon.net)
[00:49:19] <mknod> systemfault, how is the argument list of a IIFE fed exactly?
[00:49:28] <mknod> It will do the job.
[00:49:36] *** Quits: mauz (~mauz@2a01:e0a:994:7ed0:447d:90ef:1d3a:2ae0) (Remote host closed the connection)
[00:50:03] <systemfault> Like any other function?
[00:50:22] <systemfault> All I'm doing is declaring a function and calling it "in place"
[00:50:47] <mknod> How do I call it with an argument?
[00:50:47] <systemfault> n> ((a, b) => { return a + b})(2, 4)
[00:50:48] <jellobot> (okay) 6
[00:50:58] <systemfault> You pass it an argument?
[00:50:59] <mknod> Ah... That simple.
[00:51:23] <mknod> It wasn't obvious from the look of it.
[00:51:41] <systemfault> Seems a bit useless since in JS you have access to variables of outer scopes
[00:51:52] <systemfault> But it depends on what you need to do
[00:51:52] *** Quits: Zweihander (~Zweihande@znc.ext.zweihander.me) (Quit: ZNC - https://znc.in)
[00:52:55] <mknod> systemfault, true, but in this case it just makes more sense to me.
[00:54:29] *** Joins: audiobirb (~audio@user/audio)
[00:54:45] *** Joins: mauz (~mauz@2a01:e0a:994:7ed0:447d:90ef:1d3a:2ae0)
[00:59:20] *** Quits: src (~src@user/src) (Quit: Leaving)
[00:59:32] *** Quits: ryzendapgh (~ryzenda@pool-74-109-246-70.pitbpa.fios.verizon.net) (Read error: Connection reset by peer)
[01:00:21] *** Joins: ryzenda (~ryzenda@pool-74-109-246-70.pitbpa.fios.verizon.net)
[01:00:38] *** Quits: renlo (~Renlo_Ren@pool-108-14-112-182.nycmny.east.verizon.net) (Ping timeout: 256 seconds)
[01:01:19] *** Joins: junebug (~junebug@2600:1700:3db0:2540:4fef:79d4:11d2:3ba7)
[01:02:54] *** Joins: nwulfe (~wulfe@cpe-174-103-156-213.cinci.res.rr.com)
[01:06:09] *** Quits: night_wulfe (~wulfe@cpe-174-103-156-213.cinci.res.rr.com) (Ping timeout: 256 seconds)
[01:07:13] <ljharb> mknod: IIFEs are obsolete now that module systems exist.
[01:08:13] <twiclo> I can't for the life of me get my website to see the changes I'm making to my JS file. I'm serving it over a simple python web server and have cache disabled in the network tab
[01:09:06] <gehn> twiclo, are you bundling? do you have cache disabled?
[01:09:22] <gehn> oh, right you claim to have cache disabled. so, are you bundling?
[01:09:36] <gehn> by "simple python web server" do you mean `python -m SimpleHTTPServer` ?
[01:09:38] <twiclo> Oh good catch. I just switched off bundling and didn't point my index.html to the non-bundling script
[01:10:44] *** Joins: random-jellyfish (~random-je@user/random-jellyfish)
[01:12:32] *** Quits: pmercado (~pmercado@186.107.48.62) (Ping timeout: 256 seconds)
[01:15:03] *** Joins: wroathe (~wroathe@206-55-188-8.fttp.usinternet.com)
[01:15:03] *** Quits: wroathe (~wroathe@206-55-188-8.fttp.usinternet.com) (Changing host)
[01:15:03] *** Joins: wroathe (~wroathe@user/wroathe)
[01:15:49] *** Quits: trevors (~trevors@user/trevors) (Quit: trevors)
[01:17:21] *** Joins: trevors (~trevors@user/trevors)
[01:17:44] *** Quits: GreenResponse (~tomek@r-45-155-148-237.gpon.bialnet.pl) (Quit: Leaving)
[01:21:39] *** Joins: ccapndave (~ccapndave@217-162-124-46.dynamic.hispeed.ch)
[01:22:50] <ccapndave> Hey!  I'm looking for a command line `npm` package that will serve up a page and live reload the page whenever the source html or any files referenced in <script> or <link> tags change.  Is there a package for that?
[01:26:25] *** Joins: Brett[Air] (~Brett@124.148.79.4)
[01:26:49] <ThePhilgrim> Salutations, I'm about to start working on a project (as a beginner; for learning purposes) where I'm going to have different mini-tools (think calculator, magic-8 ball or whatever) in the same webapp. So basically a non-scoll page with a background and a dashboard on one side. I would like to load in the html onto this "template" dynamically. I would like to do this to the largest extent possible without frameworks like React (
[01:27:02] <ThePhilgrim> non-scroll*
[01:29:59] *** Joins: hrob (~hrob@31-209-221-88.dsl.dynamic.simnet.is)
[01:30:04] <junebug> ThePhilgrim, whats the question? How do you build the whole thing? I don't think you'll find people willing to answer that.
[01:30:19] <ThePhilgrim> "What would be the best way to load in html dynamically with JS"
[01:30:22] <varrg> ThePhilgrim, https://developer.mozilla.org/en-US/docs/Web/API/Element/replaceWith
[01:31:00] <matsaman> it could be that by 'html' you mean a variety of things, though
[01:31:01] <ThePhilgrim> instead of coding each html file statically, I'd like to have 1 html file with the background and the dashboard, and then depending on what tool the user chooses, the html of that tool is loaded in dynamically
[01:31:41] <junebug> You can edit the document and it's various elements
[01:31:52] <varrg> ThePhilgrim, I would have a <template> hold the tool, could enforce it quite a bit with shadowDOM, then inject it using replaceWith or similar
[01:31:55] *** Quits: enoq (~enoq@2a05:1141:1f5:5600:b9c9:721a:599:bfe7) (Quit: enoq)
[01:32:58] *** Joins: src (~src@user/src)
[01:33:05] <ThePhilgrim> varrg: So that way I could have only one html file for the background and dashboard, and depending on url, I could replaceWith different tools to display them?
[01:33:25] <varrg> yes
[01:33:29] <ThePhilgrim> Cool
[01:33:36] <varrg> when javascript updates the document, changes are immediate
[01:33:47] <varrg> just like it was there when you first loaded the document
[01:33:54] <ThePhilgrim> Great, okay!
[01:34:15] <varrg> good luck
[01:34:18] <ThePhilgrim> And if I were to start learning a framework, would React be a good option for something like this?
[01:34:27] <ThePhilgrim> (Basically just to understand the purpose of React)
[01:34:30] *** Quits: ccapndave (~ccapndave@217-162-124-46.dynamic.hispeed.ch) (Quit: Textual IRC Client: www.textualapp.com)
[01:34:38] <ThePhilgrim> I'm planning to do it vanilla
[01:35:01] *** Quits: stagas (~stagas@2a02:587:c421:9272:79ff:ab38:984:fc2c) (Ping timeout: 268 seconds)
[01:35:05] <varrg> yes
[01:35:14] <ThePhilgrim> Okay, thank you for the help
[01:35:23] <varrg> react is mostly for SPA's which is what you're striving to achieve
[01:35:34] <ThePhilgrim> SPA?
[01:35:38] *** Joins: stagas (~stagas@2a02:587:c429:f47f:e63a:11cf:6272:6c16)
[01:35:39] <ThePhilgrim> Ah, single page app
[01:35:40] <ThePhilgrim> got it
[01:36:03] <varrg> it's a good learning project, you'll face a lot of problems that will be educating to solve
[01:36:10] <ThePhilgrim> I would say it makes more sense to get good with fundamentals before starting with a framework though, wouldn't you say?
[01:36:16] <ThePhilgrim> Yeah, that's my plan
[01:36:30] <varrg> yes, knowing react without knowing javascript will harm you in the long run
[01:36:31] *** Joins: renlo (~Renlo_Ren@pool-108-14-112-182.nycmny.east.verizon.net)
[01:36:33] <ThePhilgrim> I want to build a full stack app solely for learning to solve problems better
[01:36:48] <ThePhilgrim> Okay, so I'm thinking the right way then :)
[01:36:49] <ThePhilgrim> Thanks
[01:37:03] *** Quits: qswz (~caub@89-80-20-125.abo.bbox.fr) (Quit: leaving)
[01:37:10] *** Quits: junebug (~junebug@2600:1700:3db0:2540:4fef:79d4:11d2:3ba7) (Quit: Leaving)
[01:37:43] <varrg> a quick tip: use the dev console to try different approaches, it's faster than editing the source -> save -> reload page. The dev console is interactive, so it remembers whatever you did before
[01:37:53] *** Quits: Y4knotiS (~YaknotiS@cpc1-cmbg18-2-0-cust87.5-4.cable.virginm.net) (Ping timeout: 256 seconds)
[01:38:30] <ThePhilgrim> Ah right! Thanks
[01:38:48] <ThePhilgrim> I'm also planning to learn webpack while doing this. Would you say that on top of that, Docker would make sense as well?
[01:38:53] <ThePhilgrim> Or is it getting too much? xD
[01:39:13] <varrg> too much, learn new tools as you go, not all at once
[01:39:42] <ThePhilgrim> Okay!
[01:39:45] <ThePhilgrim> Thank you again
[01:40:04] <varrg> no problem. have fun
[01:40:14] <ThePhilgrim> :D
[01:40:37] *** Quits: Inst (~delicacie@c-98-208-218-119.hsd1.fl.comcast.net) (Ping timeout: 240 seconds)
[01:41:18] *** Quits: hrob (~hrob@31-209-221-88.dsl.dynamic.simnet.is) (Quit: Client closed)
[01:43:10] *** Joins: pileatedx (~textual@cpe-67-241-68-204.twcny.res.rr.com)
[01:44:31] *** Quits: dmaislin (~dmaislin@047-233-046-055.res.spectrum.com) (Quit: My MacBook has gone to sleep. ZZZzzzâ€¦)
[01:45:58] *** Quits: renlo (~Renlo_Ren@pool-108-14-112-182.nycmny.east.verizon.net) (Ping timeout: 256 seconds)
[01:46:02] *** Joins: sickdyd (~sickd@120.51.82.69.ap.gmobb-fix.jp)
[01:50:30] *** Quits: sickdyd (~sickd@120.51.82.69.ap.gmobb-fix.jp) (Ping timeout: 256 seconds)
[02:00:02] *** Joins: colordrops (~erahhal@cpe-142-129-123-225.socal.res.rr.com)
[02:00:09] *** Joins: kakashiAL (~kakashi@ip-37-201-198-9.hsi13.unitymediagroup.de)
[02:04:06] *** Joins: dodobrain (~dodobrain@user/dodobrain)
[02:04:17] *** Joins: summersault (~summersau@179.221.251.36)
[02:06:00] *** Joins: Akiva (~Akiva@user/Akiva)
[02:06:42] *** Quits: summersault (~summersau@179.221.251.36) (Remote host closed the connection)
[02:07:01] *** Quits: vysn (~vysn@user/vysn) (Ping timeout: 240 seconds)
[02:10:13] *** Quits: dodobrain (~dodobrain@user/dodobrain) (Remote host closed the connection)
[02:10:43] *** Joins: dodobrain (~dodobrain@user/dodobrain)
[02:10:47] *** Joins: renlo (~Renlo_Ren@pool-108-14-112-182.nycmny.east.verizon.net)
[02:15:08] *** Joins: summersault (~summersau@179.221.251.36)
[02:15:42] *** Quits: rewrit3 (~rewrit3@user/rewrit3) (Read error: Connection reset by peer)
[02:16:34] *** Quits: sheetjs (~sheetjs@user/sheetjs) (Ping timeout: 256 seconds)
[02:18:41] *** Quits: varrg (~varrg@h-176-10-198-245.A351.priv.bahnhof.se) (Quit: Leaving)
[02:18:50] *** Quits: renlo (~Renlo_Ren@pool-108-14-112-182.nycmny.east.verizon.net) (Ping timeout: 256 seconds)
[02:21:02] *** Joins: sheetjs (~sheetjs@user/sheetjs)
[02:21:11] *** Quits: Naan (~Naan@user/naan) (Quit: Leaving)
[02:21:23] *** Joins: Naan (~naan@user/naan)
[02:21:31] *** Quits: gproto23 (~gproto23@user/gproto23) (Ping timeout: 256 seconds)
[02:23:56] *** Quits: onosendi (~onosendi@user/onosendi) (Ping timeout: 256 seconds)
[02:24:18] *** Joins: ruzui (~ruzu@107-179-252-71.cpe.teksavvy.com)
[02:29:49] *** Quits: maret (~maret@nat-88-212-37-89.antik.sk) (Quit: maret)
[02:29:58] *** Joins: gehn1 (~gehn@user/gehn)
[02:30:02] *** Quits: Sven_vB (~sven@user/sven-vb/x-2094958) (Remote host closed the connection)
[02:30:18] *** Quits: summersault (~summersau@179.221.251.36) (Remote host closed the connection)
[02:30:31] *** Joins: Sven_vB (~sven@user/sven-vb/x-2094958)
[02:30:43] *** Joins: pluri (~pluri@user/pluri)
[02:30:54] *** Joins: sickdyd (~sickd@120.51.82.69.ap.gmobb-fix.jp)
[02:31:25] *** Quits: csmiga (~Thunderbi@ec2-52-207-160-196.compute-1.amazonaws.com) (Quit: csmiga)
[02:32:51] *** Quits: gehn (~gehn@user/gehn) (Ping timeout: 256 seconds)
[02:33:01] *** Quits: pizdets (~pizdets@183.182.111.169) (Ping timeout: 240 seconds)
[02:33:55] *** Joins: pizdets (~pizdets@183.182.115.239)
[02:34:06] *** Joins: renlo (~Renlo_Ren@pool-108-14-112-182.nycmny.east.verizon.net)
[02:35:50] *** Quits: ThePhilgrim (~ThePhilgr@78-69-18-227-no49.tbcn.telia.com) (Remote host closed the connection)
[02:37:23] *** Joins: fweht (uid404746@id-404746.lymington.irccloud.com)
[02:37:26] *** Quits: reallymemorable (~reallymem@70.107.110.8) (Remote host closed the connection)
[02:37:32] *** Quits: colordrops (~erahhal@cpe-142-129-123-225.socal.res.rr.com) (Ping timeout: 256 seconds)
[02:38:41] *** Joins: summersault (~summersau@179.221.251.36)
[02:39:03] <FightingFalcon> if there are 10 divs in a parent div, and i assign a click event to parent div, can i learn what child was clicked? nth child
[02:39:22] *** Joins: colordrops (~erahhal@69.53.245.255)
[02:41:19] *** Joins: reallymemorable (~reallymem@70.107.110.8)
[02:43:41] *** Quits: summersault (~summersau@179.221.251.36) (Remote host closed the connection)
[02:44:16] *** Quits: random-jellyfish (~random-je@user/random-jellyfish) (Quit: Client closed)
[02:44:20] *** Quits: spinningCat (~spinningC@about/web/muscles) (Ping timeout: 256 seconds)
[02:44:39] <Alexendoo> FightingFalcon: The event will have a target property
[02:44:45] *** Quits: wroathe (~wroathe@user/wroathe) (Ping timeout: 256 seconds)
[02:44:46] *** Joins: summersault (~summersau@179.221.251.36)
[02:45:07] <Alexendoo> And path, if more appropriate
[02:45:19] *** Quits: renlo (~Renlo_Ren@pool-108-14-112-182.nycmny.east.verizon.net) (Ping timeout: 256 seconds)
[02:45:59] *** gehn1 is now known as gehn
[02:47:29] *** Joins: ensyde (~ensyde@99-185-235-117.lightspeed.chrlnc.sbcglobal.net)
[02:48:53] *** Quits: sheetjs (~sheetjs@user/sheetjs) (Remote host closed the connection)
[02:49:25] *** Quits: CiaoSen (~Jura@p200300c957347b002a3a4dfffe84dbd5.dip0.t-ipconnect.de) (Ping timeout: 240 seconds)
[02:53:03] *** Quits: JohnComputation (~JohnCompu@gateway/tor-sasl/johncomputation) (Ping timeout: 276 seconds)
[02:53:05] *** Joins: wroathe (~wroathe@206-55-188-8.fttp.usinternet.com)
[02:53:05] *** Quits: wroathe (~wroathe@206-55-188-8.fttp.usinternet.com) (Changing host)
[02:53:05] *** Joins: wroathe (~wroathe@user/wroathe)
[02:53:15] *** Quits: davlefou (~davlefou@5.183.214.3) (Ping timeout: 256 seconds)
[02:53:24] *** Quits: trevors (~trevors@user/trevors) (Quit: trevors)
[02:54:21] *** Quits: summersault (~summersau@179.221.251.36) (Remote host closed the connection)
[02:54:30] *** Joins: trevors (~trevors@user/trevors)
[02:55:29] *** Joins: maret (~maret@nat-88-212-37-89.antik.sk)
[02:55:33] *** Joins: summersault (~summersau@179.221.251.36)
[02:56:12] *** Joins: JohnComputation (~JohnCompu@gateway/tor-sasl/johncomputation)
[02:57:47] *** Quits: wroathe (~wroathe@user/wroathe) (Ping timeout: 256 seconds)
[02:57:56] *** Quits: brentaarnold (~brentaarn@24.112.58.14) (Ping timeout: 256 seconds)
[03:00:46] *** Quits: maret (~maret@nat-88-212-37-89.antik.sk) (Ping timeout: 256 seconds)
[03:03:46] *** Joins: onosendi (~onosendi@user/onosendi)
[03:04:17] *** Quits: kakashiAL (~kakashi@ip-37-201-198-9.hsi13.unitymediagroup.de) (Ping timeout: 240 seconds)
[03:06:57] *** Joins: davlefou (~davlefou@5.183.212.217)
[03:08:37] *** Quits: corgi (~corgi@user/corgi) (Ping timeout: 240 seconds)
[03:09:33] <onosendi> FightingFalcon: https://gist.github.com/onosendi/9fa391026b9934777da1ed6ff8679592
[03:13:37] *** Quits: onosendi (~onosendi@user/onosendi) (Quit: WeeChat 3.3)
[03:13:45] <FightingFalcon> thanks
[03:15:05] *** Quits: ensyde (~ensyde@99-185-235-117.lightspeed.chrlnc.sbcglobal.net) (Quit: Leaving)
[03:15:35] *** Joins: ensyde (~ensyde@99-185-235-117.lightspeed.chrlnc.sbcglobal.net)
[03:16:43] *** Quits: ensyde (~ensyde@99-185-235-117.lightspeed.chrlnc.sbcglobal.net) (Client Quit)
[03:17:00] *** Joins: ensyde (~ensyde@99-185-235-117.lightspeed.chrlnc.sbcglobal.net)
[03:17:28] *** Joins: kakashiAL (~kakashi@ip-37-201-198-9.hsi13.unitymediagroup.de)
[03:19:48] *** Joins: dimino (~dimino@user/dimino)
[03:20:24] <dimino> dumb question but what's the preferred method for importing from the same dir?  I see `from "./index"` in a few places and I feel like that's not quite right.
[03:20:37] *** Quits: summersault (~summersau@179.221.251.36) (Ping timeout: 240 seconds)
[03:20:54] <dimino> does `from "./"` make more or less sense? heh
[03:22:17] *** Joins: colordro1 (~erahhal@cpe-142-129-123-225.socal.res.rr.com)
[03:23:28] <Slade> try catch does weird scope things. its why my timeout was misbehaving
[03:24:37] *** Quits: colordrops (~erahhal@69.53.245.255) (Ping timeout: 240 seconds)
[03:26:10] *** Quits: colordro1 (~erahhal@cpe-142-129-123-225.socal.res.rr.com) (Client Quit)
[03:26:57] *** Joins: colordrops (~erahhal@cpe-142-129-123-225.socal.res.rr.com)
[03:28:37] *** Joins: N4buc0 (~N4buc0@2804:7f4:348a:16c8:b4b9:1d36:c752:b3ce)
[03:28:43] *** Quits: dpuerto (~dpuerto@136-27-83-52.cab.webpass.net) (Remote host closed the connection)
[03:29:34] *** Joins: summersault (~summersau@179.221.251.36)
[03:29:38] *** Joins: onosendi (~onosendi@user/onosendi)
[03:30:32] *** Joins: dpuerto (~dpuerto@136-27-83-52.cab.webpass.net)
[03:32:06] *** Quits: N4buc0 (~N4buc0@2804:7f4:348a:16c8:b4b9:1d36:c752:b3ce) (Remote host closed the connection)
[03:32:47] *** Quits: CryptoDavid (uid14990@id-14990.uxbridge.irccloud.com) (Quit: Connection closed for inactivity)
[03:33:54] *** Quits: prawnsalad (~prawnsala@82-71-13-185.dsl.in-addr.zen.co.uk) (Read error: Connection reset by peer)
[03:34:03] *** Quits: summersault (~summersau@179.221.251.36) (Ping timeout: 256 seconds)
[03:34:29] *** Quits: OnkelTem (~OnkelTem@user/onkeltem) (Quit: WeeChat 2.8)
[03:34:37] *** Quits: sickdyd (~sickd@120.51.82.69.ap.gmobb-fix.jp) (Ping timeout: 256 seconds)
[03:34:59] *** Joins: z_lehinsun (~lehinsun@188.113.178.220)
[03:35:11] *** Quits: dpuerto (~dpuerto@136-27-83-52.cab.webpass.net) (Ping timeout: 256 seconds)
[03:35:14] *** Joins: prawnsalad (~prawnsala@82-71-13-185.dsl.in-addr.zen.co.uk)
[03:36:09] *** Joins: N4buc0 (~N4buc0@200.146.13.23.dynamic.dialup.gvt.net.br)
[03:37:44] *** Quits: trevors (~trevors@user/trevors) (Quit: trevors)
[03:40:24] *** Joins: dpuerto (~dpuerto@136-27-83-52.cab.webpass.net)
[03:43:16] *** Quits: colordrops (~erahhal@cpe-142-129-123-225.socal.res.rr.com) (Ping timeout: 256 seconds)
[03:44:06] *** Joins: falafel (~falafel@2603-8000-d800-688c-54f8-65c3-409b-d4a1.res6.spectrum.com)
[03:45:17] *** Joins: colordrops (~erahhal@69.53.245.255)
[03:47:49] *** Quits: thiras (~thiras@user/thiras) (Ping timeout: 240 seconds)
[03:48:40] *** Quits: bobdobbs (~user@116.251.149.196) (Remote host closed the connection)
[03:48:47] *** Quits: MrBlue (~MrBlue@146.70.75.86) (Ping timeout: 256 seconds)
[03:51:00] *** Joins: summersault (~summersau@179.221.251.36)
[03:51:25] *** Quits: pileatedx (~textual@cpe-67-241-68-204.twcny.res.rr.com) (Quit: Buh-bye)
[03:52:19] *** Joins: trevors (~trevors@user/trevors)
[03:54:01] *** Joins: corgi (~corgi@c-71-202-47-75.hsd1.ca.comcast.net)
[03:54:01] *** Quits: corgi (~corgi@c-71-202-47-75.hsd1.ca.comcast.net) (Changing host)
[03:54:01] *** Joins: corgi (~corgi@user/corgi)
[03:54:48] *** Joins: ferdna (~ferdna@user/ferdna)
[03:58:37] *** Quits: quazimodo (~quazimodo@n1-41-223-188.bla2.nsw.optusnet.com.au) (Ping timeout: 240 seconds)
[03:59:01] *** Quits: ryzenda (~ryzenda@pool-74-109-246-70.pitbpa.fios.verizon.net) (Read error: Connection reset by peer)
[03:59:20] *** Quits: gehn (~gehn@user/gehn) (Quit: Leaving)
[04:00:42] *** Joins: ryzenda (~ryzenda@pool-74-109-246-70.pitbpa.fios.verizon.net)
[04:01:03] *** Quits: z_lehinsun (~lehinsun@188.113.178.220) (Quit: Leaving)
[04:01:14] *** Joins: brentaarnold (~brentaarn@24.112.58.14)
[04:01:51] *** Joins: chenqisu1 (~bhca7d@183.217.201.21)
[04:02:04] *** Quits: shokohsc (~shokohsc@lfbn-idf2-1-630-171.w86-246.abo.wanadoo.fr) (Quit: The Lounge - https://thelounge.chat)
[04:02:23] <Nnavd> what exactly is going on here? mozilla has this page https://developer.mozilla.org/en-US/docs/Tools/Network_Monitor/Inspecting_web_sockets but they also have this bug https://bugzilla.mozilla.org/show_bug.cgi?id=885508 - as far as I can tell trying it myself, firefox does not support frame inspection
[04:02:38] *** Joins: Inst (~delicacie@2601:6c4:4080:3f80:35fa:dcbe:dd4e:5a43)
[04:02:42] *** Joins: Betal (~Betal@user/betal)
[04:03:06] <Nnavd> 9 year long ticket for adding websocket frame support im dying hahah
[04:03:31] *** Quits: corgi (~corgi@user/corgi) (Ping timeout: 256 seconds)
[04:08:15] *** Joins: z_lehinsun_ (~lehinsun@188.113.178.220)
[04:09:53] *** Joins: wroathe (~wroathe@206-55-188-8.fttp.usinternet.com)
[04:09:53] *** Quits: wroathe (~wroathe@206-55-188-8.fttp.usinternet.com) (Changing host)
[04:09:53] *** Joins: wroathe (~wroathe@user/wroathe)
[04:10:07] *** Joins: jazzy (~jaziz@user/jaziz)
[04:10:17] *** Quits: dodobrain (~dodobrain@user/dodobrain) (Remote host closed the connection)
[04:10:48] *** Joins: dodobrain (~dodobrain@user/dodobrain)
[04:11:02] *** Quits: brentaarnold (~brentaarn@24.112.58.14) (Ping timeout: 256 seconds)
[04:14:47] *** Joins: banana_ (~banana_@user/banana/x-2944094)
[04:18:10] *** Quits: trevors (~trevors@user/trevors) (Quit: trevors)
[04:20:16] *** Quits: voltage_ (voltage@user/voltage) (Quit: Leaving)
[04:21:01] *** Quits: summersault (~summersau@179.221.251.36) (Ping timeout: 240 seconds)
[04:24:04] *** Joins: sickdyd (~sickd@120.51.82.69.ap.gmobb-fix.jp)
[04:29:32] *** Quits: TonyStone (~TonyStone@2603-7080-8607-c36a-9cdb-69bc-753b-1e50.res6.spectrum.com) (Read error: Connection reset by peer)
[04:30:03] <ljharb> dimino: yes, use `./`
[04:30:07] <ljharb> dimino: always avoid hardcoding index
[04:30:32] <dimino> okay yeah that was my instinct, just straight avoid "index"
[04:30:58] *** Quits: ryzenda (~ryzenda@pool-74-109-246-70.pitbpa.fios.verizon.net) (Read error: Connection reset by peer)
[04:31:25] <ljharb> also never hardcode `node_modules`, also avoid including the extension for code.
[04:31:44] *** Joins: ryzenda (~ryzenda@pool-74-109-246-70.pitbpa.fios.verizon.net)
[04:32:09] *** Quits: vdamewood (~vdamewood@fedora/vdamewood) (Quit: My MacBook Pro has gone to sleep. ZZZzzzâ€¦)
[04:32:38] *** Joins: bobdobbs (~user@116.251.149.196)
[04:32:40] *** Joins: summersault (~summersau@179.221.251.36)
[04:34:52] <bobdobbs> Hi all. I'm used to using gulp for  my projects. Specifically I use it for concatenating/compressing js files, generating sourcemaps, running a server that updates the browser when I make changes... etc... But I keep getting told that gulp is old hat.
[04:35:45] <bobdobbs> Also I want to use *something* to include es6 modules from node libraries.
[04:36:37] <bobdobbs> It seems like the obvious choice for this is webpack. But honestly, webpack confuses the f** out of me. And every time I've trued to get it to work I hit the Wall Of Massive Complexity
[04:37:34] <bobdobbs> It's like trying to move from a horse-powered carriage that just works to the cockpit of a UFO made for aliens with two heads and 6 arms.
[04:38:31] <bobdobbs> So, other than webpack, what are the alternatives to gulp for preparing js/css?
[04:38:48] <bobdobbs> (and maybe things like React projects as well)
[04:39:49] *** Quits: mauz (~mauz@2a01:e0a:994:7ed0:447d:90ef:1d3a:2ae0) (Quit: Leaving...)
[04:41:25] *** Joins: bprompt (~default@207.98.72.211)
[04:41:28] *** Parts: bprompt (~default@207.98.72.211) ()
[04:42:57] *** Quits: falafel (~falafel@2603-8000-d800-688c-54f8-65c3-409b-d4a1.res6.spectrum.com) (Ping timeout: 240 seconds)
[04:43:54] *** Quits: Gurkenglas (~Gurkengla@dslb-002-203-144-204.002.203.pools.vodafone-ip.de) (Ping timeout: 256 seconds)
[04:44:37] *** Quits: audiobirb (~audio@user/audio) (Ping timeout: 240 seconds)
[04:46:10] *** Quits: Haxxa (~Haxxa@89nnjg0xckz9ggn6r5xm.ip6.superloop.com) (Quit: Haxxa flies away.)
[04:47:45] *** Joins: bkool (~bkool@c-73-8-91-229.hsd1.il.comcast.net)
[04:47:46] *** Joins: falafel (~falafel@2603-8000-d800-688c-54f8-65c3-409b-d4a1.res6.spectrum.com)
[04:49:11] *** Quits: chowmeined (~chowmeine@user/chowmeined) (Read error: Connection reset by peer)
[04:49:20] *** Joins: BaggersIO (~BaggersIO@2a02:810d:983f:b088:f5bd:b9cb:8667:df40)
[04:50:33] *** Quits: cotko (~cotko@188-230-251-153.dynamic.t-2.net) (Ping timeout: 256 seconds)
[04:52:55] <KevinX> I use Laravel Mix sometimes which might be good for you
[04:53:36] *** Joins: maret (~maret@nat-88-212-37-89.antik.sk)
[04:53:38] <KevinX> https://laravel-mix.com/
[04:54:26] <KevinX> bobdobbs just saw they have video tutorials too
[04:54:49] *** Quits: BaggersIO (~BaggersIO@2a02:810d:983f:b088:f5bd:b9cb:8667:df40) (Ping timeout: 268 seconds)
[04:55:15] <KevinX> If you want to use a build tool from the future you can try https://swc.rs/
[04:57:33] *** Joins: pmercado (~pmercado@186.107.48.62)
[04:57:37] *** Quits: falafel (~falafel@2603-8000-d800-688c-54f8-65c3-409b-d4a1.res6.spectrum.com) (Ping timeout: 240 seconds)
[04:58:37] *** Quits: maret (~maret@nat-88-212-37-89.antik.sk) (Ping timeout: 240 seconds)
[04:59:01] *** Quits: yte3 (~0@151.31.174.113) (Ping timeout: 240 seconds)
[05:00:46] *** Quits: ProfSimm (~ProfSimm@87.227.196.109) (Ping timeout: 256 seconds)
[05:03:01] *** Quits: ruzui (~ruzu@107-179-252-71.cpe.teksavvy.com) (Ping timeout: 256 seconds)
[05:05:17] *** Quits: summersault (~summersau@179.221.251.36) (Ping timeout: 256 seconds)
[05:05:17] *** Quits: Inst (~delicacie@2601:6c4:4080:3f80:35fa:dcbe:dd4e:5a43) (Ping timeout: 240 seconds)
[05:07:11] *** Joins: Inst (~delicacie@c-98-208-218-119.hsd1.fl.comcast.net)
[05:08:45] *** Joins: ruzui (~ruzu@107-179-252-71.cpe.teksavvy.com)
[05:09:06] *** Joins: Zweihander (~Zweihande@znc.ext.zweihander.me)
[05:09:32] *** Joins: sam_1 (~sam_1@87.51.251.118)
[05:09:36] *** Quits: Zweihander (~Zweihande@znc.ext.zweihander.me) (Remote host closed the connection)
[05:09:58] *** Quits: xsperry (~xs@user/xsperry) (Ping timeout: 256 seconds)
[05:10:36] *** Joins: nomic2 (~nomic@85.203.36.80)
[05:12:05] *** Quits: dsrt^ (~dsrt@wsip-98-188-246-242.mc.at.cox.net) (Ping timeout: 256 seconds)
[05:13:01] *** Quits: nomic (~nomic@185.192.69.25) (Ping timeout: 240 seconds)
[05:14:38] *** Joins: brentaarnold (~brentaarn@24.112.58.14)
[05:14:55] *** Quits: sam_1 (~sam_1@87.51.251.118) (Ping timeout: 256 seconds)
[05:21:52] *** Quits: z_lehinsun_ (~lehinsun@188.113.178.220) (Ping timeout: 256 seconds)
[05:23:44] *** Joins: Haxxa (~Haxxa@89nnjg0xckz9ggn6r5xm.ip6.superloop.com)
[05:24:33] *** Joins: summersault (~summersau@179.221.251.36)
[05:24:37] *** Joins: bprompt (~default@207.98.72.211)
[05:25:32] *** Quits: bprompt (~default@207.98.72.211) (Client Quit)
[05:31:44] <ThePendulum> should I bother keeping up with web3?
[05:32:39] *** Joins: Rockwood (~Rocky@user/rocky)
[05:36:57] *** Joins: TonyStone (~TonyStone@2603-7080-8607-c36a-9cdb-69bc-753b-1e50.res6.spectrum.com)
[05:40:48] *** Joins: trevors (~trevors@user/trevors)
[05:40:53] *** Quits: reallymemorable (~reallymem@70.107.110.8) (Remote host closed the connection)
[05:41:00] *** Joins: renlo (~Renlo_Ren@pool-173-68-108-120.nycmny.fios.verizon.net)
[05:41:30] *** Joins: reallymemorable (~reallymem@70.107.110.8)
[05:43:24] *** Quits: sharperguy (~sharpergu@89.244.120.152) (Ping timeout: 256 seconds)
[05:43:58] *** Quits: wroathe (~wroathe@user/wroathe) (Ping timeout: 256 seconds)
[05:45:08] *** Joins: sharperguy (~sharpergu@88.130.218.121)
[05:45:23] *** Quits: dimino (~dimino@user/dimino) (Quit: Leaving...)
[05:45:40] *** Quits: ruzui (~ruzu@107-179-252-71.cpe.teksavvy.com) (Ping timeout: 256 seconds)
[05:45:49] *** Quits: reallymemorable (~reallymem@70.107.110.8) (Ping timeout: 240 seconds)
[05:47:17] <KevinX> Sure, some of the tech might survive the fad
[05:47:22] *** Joins: reallymemorable (~reallymem@70.107.110.8)
[05:47:24] <systemfault> The idea of giving version numbers to the web sounds so ridiculous to me...
[05:47:49] <systemfault> The web is like the HTML.. a living standard
[05:47:58] <systemfault> It evolves with time... and that's it.
[05:48:00] <KevinX> Historically 1 and 2 were pretty big milestones
[05:48:19] <KevinX> It's ridiculous to preemptively number it though
[05:49:19] *** Quits: summersault (~summersau@179.221.251.36) (Remote host closed the connection)
[05:50:24] *** Quits: yagamilito (~yagamilit@2601:642:4600:34b0:3476:8e2b:2b96:b474) (Quit: Client closed)
[05:50:33] *** Joins: summersault (~summersau@179.221.251.36)
[05:51:54] *** Quits: reallymemorable (~reallymem@70.107.110.8) (Ping timeout: 256 seconds)
[05:52:13] *** Joins: wroathe (~wroathe@206-55-188-8.fttp.usinternet.com)
[05:52:14] *** Quits: wroathe (~wroathe@206-55-188-8.fttp.usinternet.com) (Changing host)
[05:52:14] *** Joins: wroathe (~wroathe@user/wroathe)
[05:53:08] *** Joins: reallymemorable (~reallymem@70.107.110.8)
[05:54:31] *** Quits: summersault (~summersau@179.221.251.36) (Remote host closed the connection)
[05:57:37] *** Quits: reallymemorable (~reallymem@70.107.110.8) (Ping timeout: 240 seconds)
[05:58:48] *** Quits: dodobrain (~dodobrain@user/dodobrain) (Ping timeout: 260 seconds)
[05:58:53] *** Joins: reallymemorable (~reallymem@70.107.110.8)
[05:59:16] *** Quits: wroathe (~wroathe@user/wroathe) (Ping timeout: 256 seconds)
[05:59:32] <mknod> Let's say I have a table as 2d array. The table is indexed by row and then by column. The first column holds a unique key for the row.
[05:59:48] <mknod> rows = [['key1', 'value1', ..., 'valueN'], ['key2', 'value1', ..., 'valueN'], ['key3', 'value1', ..., 'valueN']]
[06:00:37] <mknod> I want to turn it into something that'll allow me to get an arbitrary row by its key.
[06:01:08] <mknod> If I do: rowsByKey = { 'key1': rows[0], 'key2': rows[1], 'key3': rows[2] }
[06:01:30] *** Joins: leduyquang753 (~leduyquan@user/leduyquang753)
[06:01:30] <mknod> The actual data are not copied in memory right?
[06:03:01] *** Quits: Rockwood (~Rocky@user/rocky) (Read error: Connection reset by peer)
[06:03:05] <mknod> n> var foo = [1, 2, 3]; var bar = foo; bar[1] = 'x'; console.log(foo);
[06:03:05] <jellobot> (okay) [ 1, 'x', 3 ]
[06:03:12] *** Joins: wroathe (~wroathe@206-55-188-8.fttp.usinternet.com)
[06:03:12] *** Quits: wroathe (~wroathe@206-55-188-8.fttp.usinternet.com) (Changing host)
[06:03:12] *** Joins: wroathe (~wroathe@user/wroathe)
[06:03:24] <mknod> Just like bar isn't a copy of foo here?
[06:05:04] <mknod> How is this called in JS and how can I get full control over this?
[06:05:33] <leduyquang753> References are passed by value.
[06:06:00] <leduyquang753> So you are copying a reference to array from `foo` to `bar`.
[06:06:13] *** Quits: renlo (~Renlo_Ren@pool-173-68-108-120.nycmny.fios.verizon.net) (Ping timeout: 240 seconds)
[06:07:06] <mknod> What's the cleanest method for duplicating an array?
[06:07:44] <leduyquang753> `[...foo]`.
[06:09:24] *** Joins: summersault (~summersau@179.221.251.36)
[06:09:34] <bobdobbs> KevinX: sorry, I just got back to terminal. Looing at swc now
[06:09:47] <ljharb> no
[06:09:50] <ljharb> mknod: `arr.slice()`.
[06:09:54] *** Quits: onosendi (~onosendi@user/onosendi) (Quit: WeeChat 3.3)
[06:09:54] <ljharb> avoid the spread operator if you can.
[06:10:04] <ljharb> !pass by value @ mknod
[06:10:04] <jellobot> mknod, JavaScript has call-by-value semantics in which references to objects are considered to be a type of value. Direct assignment to an argument will never be visible outside of a function. For a detailed explanation, see: https://web.archive.org/web/20161005155047/http://www.jon-carlos.com/2013/is-javascript-call-by-value-or-call-by-reference/
[06:11:46] <mknod> ljharb, why so?
[06:11:46] <leduyquang753> ljharb `[...foo]` is what popped up in MDN when I looked at Array's page.
[06:11:57] <leduyquang753> Was looking for a `copy` method.
[06:12:09] <ljharb> `.slice()` is that.
[06:12:11] *** Quits: summersault (~summersau@179.221.251.36) (Remote host closed the connection)
[06:12:21] <ljharb> mknod: because spread invokes the iterator protocol, which is slow, and unnecessary in this case.
[06:13:21] <mknod> I thought of .slice() but it looked a bit hacky.
[06:13:21] *** Joins: xsperry (~xs@user/xsperry)
[06:13:26] *** Quits: Akiva (~Akiva@user/Akiva) (Ping timeout: 256 seconds)
[06:13:32] <leduyquang753> Yeah the name isn't very clear.
[06:15:13] <ljharb> it's idiomatic at this point.
[06:16:06] <KevinX> Benchmark: https://jsben.ch/lO6C5
[06:16:06] *** Quits: cmbengue (~Thunderbi@207.191.249.160) (Quit: Thanks, see you later.)
[06:16:25] <mknod> What will happen if I want to turn my table into a Map instead of an object.
[06:16:37] <mknod> I'll initialize the Map with something like: rows.map((row) => [row[0], row])
[06:16:45] <KevinX> What's the fastest way to shallow copy an object?
[06:18:21] <mknod> I'm not sure what will be passed by reference or by value here. Maybe because it's 3:50am, or maybe not.
[06:18:49] *** Quits: Naan (~naan@user/naan) (Read error: Connection reset by peer)
[06:19:03] <KevinX> passed by copy of a reference ;-)
[06:19:15] <ljharb> mknod: everything is always only passed by value in JS
[06:19:16] <ljharb> no exceptions
[06:19:27] <ljharb> mknod: read the article i linked above
[06:19:36] *** Quits: buu (~buu@70-142-48-147.lightspeed.austtx.sbcglobal.net) (Remote host closed the connection)
[06:20:48] *** Quits: reallymemorable (~reallymem@70.107.110.8) (Ping timeout: 256 seconds)
[06:21:14] *** Joins: dodobrain (~dodobrain@user/dodobrain)
[06:22:14] <mknod> ljharb, I have started reading it but it's not very clear: "your functions only ever receive a copy of the original references"
[06:22:24] <mknod> It's still a reference at the end of the day. Isn't it?
[06:22:32] *** Joins: z1haze (~z1haze@ip24-251-237-210.ph.ph.cox.net)
[06:22:32] *** Quits: z1haze (~z1haze@ip24-251-237-210.ph.ph.cox.net) (Changing host)
[06:22:32] *** Joins: z1haze (~z1haze@user/z1haze)
[06:22:54] <z1haze> what would cause `console.log(myVar) to log nothing, but console.log(JSON.stringify(myVar)) to log what I'd expect
[06:23:36] *** Joins: reallymemorable (~reallymem@70.107.110.8)
[06:25:25] *** Quits: colordrops (~erahhal@69.53.245.255) (Ping timeout: 240 seconds)
[06:25:38] <KevinX> mknod it's a copy of the reference value. A minor distinction but important to understand
[06:25:49] <KevinX> z1haze what is the value you're expecting?
[06:26:33] <mknod> KevinX, I do understand it, but then the array itself is not passed by value.
[06:26:42] *** Joins: sheetjs (~sheetjs@user/sheetjs)
[06:27:09] <mknod> I'm still unsure what would the following imply:
[06:27:11] <mknod> var rowsByKey = new Map(rows.map((row) => [row[0], row]));
[06:27:20] *** Joins: buu (~buu@70-142-48-147.lightspeed.austtx.sbcglobal.net)
[06:30:06] <mknod> Will have a deeper look after some sleep. Thanks.
[06:30:17] <KevinX> Not sure what you're asking
[06:30:19] <ljharb> mknod: it's a reference you can't avoid dereferencing
[06:33:50] *** Quits: MINIMAN10000 (~quassel@c-73-225-3-123.hsd1.wa.comcast.net) (Ping timeout: 256 seconds)
[06:33:57] *** Joins: Lazenca (~lazenca@user/lazenca)
[06:35:24] *** Quits: z1haze (~z1haze@user/z1haze) (Quit: Leaving)
[06:36:13] *** Quits: dodobrain (~dodobrain@user/dodobrain) (Ping timeout: 250 seconds)
[06:39:23] *** Joins: audiobirb (~audio@user/audio)
[06:52:51] *** nomic2 is now known as nomic
[06:53:18] *** Quits: nomic (~nomic@85.203.36.80) (Quit: Leaving)
[06:54:07] *** Quits: henry40408 (~henry4040@175.181.188.127) (Remote host closed the connection)
[06:54:37] *** Joins: henry40408 (~henry4040@175.181.188.127)
[06:56:46] *** Quits: fweht (uid404746@id-404746.lymington.irccloud.com) (Quit: Connection closed for inactivity)
[07:02:27] *** Joins: dodobrain (~dodobrain@user/dodobrain)
[07:04:12] *** Quits: dodobrain (~dodobrain@user/dodobrain) (Remote host closed the connection)
[07:04:33] *** Joins: dodobrain (~dodobrain@user/dodobrain)
[07:10:47] *** Joins: onosendi (~onosendi@user/onosendi)
[07:11:55] *** Quits: dodobrain (~dodobrain@user/dodobrain) (Quit: switching networks)
[07:12:47] *** Joins: dodobrain (~dodobrain@user/dodobrain)
[07:14:57] *** Joins: monkey_ (~user@190.104.116.153)
[07:15:05] *** Quits: reallymemorable (~reallymem@70.107.110.8) (Remote host closed the connection)
[07:15:12] *** Quits: terrorjack (~terrorjac@2a01:4f8:1c1e:509a::1) (Quit: The Lounge - https://thelounge.chat)
[07:16:58] *** Joins: terrorjack (~terrorjac@2a01:4f8:1c1e:509a::1)
[07:16:59] *** Joins: buu_ (~buu@70-142-48-147.lightspeed.austtx.sbcglobal.net)
[07:18:46] *** Quits: Bish (~arne@b2b-37-24-1-41.unitymedia.biz) (Ping timeout: 260 seconds)
[07:19:11] *** Quits: buu_ (~buu@70-142-48-147.lightspeed.austtx.sbcglobal.net) (Client Quit)
[07:20:17] *** Joins: Bish (~arne@b2b-37-24-1-41.unitymedia.biz)
[07:24:07] *** Joins: z_lehinsun (~lehinsun@188.113.178.220)
[07:24:17] *** Quits: banana_ (~banana_@user/banana/x-2944094) (Ping timeout: 240 seconds)
[07:25:46] *** Quits: mknod (~mknod@user/mknod) (Quit: mknod)
[07:35:29] *** Joins: renlo (~Renlo_Ren@pool-173-68-108-120.nycmny.fios.verizon.net)
[07:37:51] *** Joins: maret (~maret@nat-88-212-37-89.antik.sk)
[07:38:47] *** Joins: BaggersIO (~BaggersIO@2a02:810d:983f:b088:f5bd:b9cb:8667:df40)
[07:40:08] *** Quits: renlo (~Renlo_Ren@pool-173-68-108-120.nycmny.fios.verizon.net) (Ping timeout: 256 seconds)
[07:42:57] *** Quits: BaggersIO (~BaggersIO@2a02:810d:983f:b088:f5bd:b9cb:8667:df40) (Ping timeout: 240 seconds)
[07:43:01] *** Quits: pmercado (~pmercado@186.107.48.62) (Ping timeout: 240 seconds)
[07:43:15] *** Quits: ckdCreations (~ckdCreati@147.55.133.137) (Read error: Connection reset by peer)
[07:43:23] *** Quits: maret (~maret@nat-88-212-37-89.antik.sk) (Ping timeout: 256 seconds)
[07:48:37] *** Joins: ckdCreations (~ckdCreati@147.55.133.138)
[07:48:48] *** Joins: dave0 (~davezero@069.d.003.ncl.iprimus.net.au)
[07:50:49] *** Joins: Zweihander (~Zweihande@znc.ext.zweihander.me)
[07:51:31] *** Quits: Zweihander (~Zweihande@znc.ext.zweihander.me) (Remote host closed the connection)
[07:53:15] *** Joins: reallymemorable (~reallymem@70.107.110.8)
[07:55:53] *** Joins: robyndrake (~robyndrak@154.16.118.240)
[07:56:02] *** Quits: robyndrake (~robyndrak@154.16.118.240) (Changing host)
[07:56:02] *** Joins: robyndrake (~robyndrak@user/robyndrake)
[07:56:28] *** Quits: trevors (~trevors@user/trevors) (Quit: trevors)
[07:58:46] *** Quits: reallymemorable (~reallymem@70.107.110.8) (Remote host closed the connection)
[07:59:03] *** Joins: reallymemorable (~reallymem@70.107.110.8)
[07:59:07] *** Quits: reallymemorable (~reallymem@70.107.110.8) (Remote host closed the connection)
[08:02:27] *** Quits: de-facto (~de-facto@user/de-facto) (Ping timeout: 276 seconds)
[08:03:17] *** Quits: stagas (~stagas@2a02:587:c429:f47f:e63a:11cf:6272:6c16) (Ping timeout: 240 seconds)
[08:03:48] *** Joins: trevors (~trevors@user/trevors)
[08:05:39] *** Quits: src (~src@user/src) (Quit: Leaving)
[08:07:13] *** Joins: de-facto (~de-facto@user/de-facto)
[08:09:25] *** Quits: monkey_ (~user@190.104.116.153) (Ping timeout: 240 seconds)
[08:10:33] *** Quits: onosendi (~onosendi@user/onosendi) (Quit: WeeChat 3.3)
[08:13:50] *** Joins: comatory_ (~ondrejsyn@8.152.broadband3.iol.cz)
[08:15:34] <bobdobbs> Does anyone here use laravel mix? I'd like to see what a working config looks like
[08:17:36] *** Quits: mexen (uid495612@user/mexen) (Quit: Connection closed for inactivity)
[08:18:17] *** Quits: comatory_ (~ondrejsyn@8.152.broadband3.iol.cz) (Ping timeout: 240 seconds)
[08:18:28] *** Joins: perrierjouet (~perrier-j@modemcable012.251-130-66.mc.videotron.ca)
[08:20:07] *** Quits: ferdna (~ferdna@user/ferdna) (Quit: Leaving)
[08:28:52] *** Quits: bkool (~bkool@c-73-8-91-229.hsd1.il.comcast.net) (Ping timeout: 256 seconds)
[08:29:04] *** Quits: dirigible (~dirigible@2607:9000:0:3:36a4:cf80:2f7b:6990) (Quit: Leaving)
[08:31:22] *** Joins: pavonia (~user@user/siracusa)
[08:35:01] *** Quits: bobdobbs (~user@116.251.149.196) (Ping timeout: 240 seconds)
[08:35:32] *** Quits: pulse (~pulse@user/pulse) (Quit: pulse)
[08:39:30] *** Joins: mexen (uid495612@user/mexen)
[08:40:17] *** Quits: ensyde (~ensyde@99-185-235-117.lightspeed.chrlnc.sbcglobal.net) (Ping timeout: 240 seconds)
[08:40:52] *** Quits: dpuerto (~dpuerto@136-27-83-52.cab.webpass.net) (Remote host closed the connection)
[08:41:26] *** Joins: Guest19 (~Guest19@2601:647:5280:2a50:410:b257:d310:4a8f)
[08:42:01] *** Joins: dpuerto (~dpuerto@136-27-83-52.cab.webpass.net)
[08:43:49] *** Joins: noarb- (~noarb@user/noarb)
[08:44:35] *** Quits: noarb (~noarb@user/noarb) (Ping timeout: 256 seconds)
[08:45:18] *** Quits: dante443 (~dante443@99-88-166-99.lightspeed.milwwi.sbcglobal.net) (Ping timeout: 256 seconds)
[08:45:57] *** Joins: quazimodo (~quazimodo@n1-41-223-188.bla2.nsw.optusnet.com.au)
[08:46:17] *** Quits: dpuerto (~dpuerto@136-27-83-52.cab.webpass.net) (Ping timeout: 256 seconds)
[08:47:01] *** Quits: wroathe (~wroathe@user/wroathe) (Ping timeout: 240 seconds)
[08:51:25] *** Quits: perrierjouet (~perrier-j@modemcable012.251-130-66.mc.videotron.ca) (Quit: WeeChat 3.4)
[08:53:33] *** Joins: noarb (~noarb@user/noarb)
[08:54:22] *** Quits: noarb- (~noarb@user/noarb) (Ping timeout: 256 seconds)
[08:54:58] *** Joins: perrierjouet (~perrier-j@modemcable012.251-130-66.mc.videotron.ca)
[08:55:10] *** Joins: wroathe (~wroathe@206-55-188-8.fttp.usinternet.com)
[08:55:10] *** Quits: wroathe (~wroathe@206-55-188-8.fttp.usinternet.com) (Changing host)
[08:55:10] *** Joins: wroathe (~wroathe@user/wroathe)
[08:56:38] *** Quits: cthulchu (~Cthulchu@ool-18e454e1.dyn.optonline.net) (Ping timeout: 256 seconds)
[08:59:42] <gde35> n>a=[1,2,3];b=function(x){x.pop()}; b(a);a
[08:59:43] <jellobot> (okay) [ 1, 2 ]
[08:59:53] *** Quits: wroathe (~wroathe@user/wroathe) (Ping timeout: 256 seconds)
[09:00:04] <gde35> ljharb: ?
[09:01:17] *** Quits: junktext (~junktext@gateway/vpn/pia/junktext) (Ping timeout: 240 seconds)
[09:01:17] <leduyquang753> Reference to the array is passed by value to `x`, so `x` points to the same array.
[09:01:58] <gde35> <@ljharb> mknod: everything is always only passed by value in JS
[09:02:25] <gde35> does he mean practically?
[09:02:34] *** Joins: stagas (~stagas@2a02:587:c429:f47f:3e7b:1cf1:8cd1:226c)
[09:02:47] <leduyquang753> In that code you posted it's still passing by value, but the value is the reference.
[09:03:11] <leduyquang753> When you assign something else to `x` in the function, mutating it won't affect the original array anymore.
[09:03:17] <gde35> then what is the difference between pass by value and pass by reference?
[09:03:30] <gde35> ahhh ok
[09:03:43] *** Joins: paule32 (~paul@nat-91-137-20-20.net.encoline.de)
[09:03:43] *** Quits: paule32 (~paul@nat-91-137-20-20.net.encoline.de) (Changing host)
[09:03:43] *** Joins: paule32 (~paul@user/paule32)
[09:03:54] *** Quits: paule32 (~paul@user/paule32) (Client Quit)
[09:03:55] <gde35> n>a=[1,2,3];b=function(x){x=x.pop()}; b(a);a
[09:03:56] <jellobot> (okay) [ 1, 2 ]
[09:03:58] <leduyquang753> "Pass by reference" in languages like C++ means passing the reference to the variable itself, assigning it has the same effect as assigning to the original variable.
[09:04:07] *** Quits: dodobrain (~dodobrain@user/dodobrain) (Remote host closed the connection)
[09:04:13] <gde35> ic
[09:04:25] *** Joins: dodobrain (~dodobrain@user/dodobrain)
[09:04:30] <gde35> so terminology fails appart there
[09:04:51] <leduyquang753> If you are familiar with the concept of pointers, in JS it's basically passing around those pointers by value, and they are automatically dereferenced.
[09:04:55] <Decker> only if you consider reference from a C++ specification view
[09:04:59] <Decker> pass by pointer
[09:05:50] <gde35> js is a circus, every show continues to surprise me
[09:06:16] *** Quits: perrierjouet (~perrier-j@modemcable012.251-130-66.mc.videotron.ca) (Ping timeout: 256 seconds)
[09:06:42] <leduyquang753> It's the same concept in Java, C#, Python,...
[09:07:01] <gde35> n>a=[1,2,3];b=function(x){f=x; f.pop()}; b(a);a
[09:07:02] <jellobot> (okay) [ 1, 2 ]
[09:09:47] *** Joins: maret (~maret@nat-88-212-37-89.antik.sk)
[09:10:32] <Decker> leduyquang753 then explain pass by value in a C# context as relavent to JS
[09:11:10] <leduyquang753> ?
[09:11:52] <Decker> well you're certainly not passing objects by value
[09:12:02] *** Joins: dpuerto (~dpuerto@136-27-83-52.cab.webpass.net)
[09:12:23] <ljharb> gde35: no i mean actually
[09:12:35] <ljharb> Guest19: you need to auth with nickserv for non-ops to see what you say; see the last link in the topic
[09:12:45] <ljharb> Decker: yes, every single thing in JS is always only passed by value
[09:12:50] <ljharb> !pass by value @ Decker
[09:12:50] <jellobot> Decker, JavaScript has call-by-value semantics in which references to objects are considered to be a type of value. Direct assignment to an argument will never be visible outside of a function. For a detailed explanation, see: https://web.archive.org/web/20161005155047/http://www.jon-carlos.com/2013/is-javascript-call-by-value-or-call-by-reference/
[09:13:00] <ljharb> unless you meant in C#, in which case i withdraw my comment
[09:13:07] <Decker> passed by pointer maybe unless it's a primitive like a number
[09:13:12] <ljharb> no, passed by value
[09:13:16] <Decker> which was the whole point.
[09:13:18] <ljharb> the value for an object happens to be *like* a pointer
[09:13:21] <ljharb> one you can't avoid dereferencing
[09:13:22] <gde35> ljharb: makes sense
[09:13:32] <ljharb> but "pass by reference" has a very objective and strict definition
[09:13:43] <Decker> so does pass by value
[09:13:51] <ljharb> which is why that's what JS has.
[09:14:01] <ljharb> pass by reference means you can *assign* to an argument inside the function, and it's visible from the caller
[09:14:05] <ljharb> not mutate, assign
[09:14:15] <ljharb> read the article i linked, it explains it quite correctly.
[09:14:17] *** Quits: maret (~maret@nat-88-212-37-89.antik.sk) (Ping timeout: 240 seconds)
[09:14:51] <gde35> n>a=[1];b=function(x){x.pop();x.foo="bananas"}; b(a);a
[09:14:52] <jellobot> (okay) [ foo: 'bananas' ]
[09:15:06] <ljharb> gde35: `x.foo =` is mutating x, not assigning to x.
[09:15:15] <gde35> indeed
[09:15:17] <ljharb> gde35: assigning would be `x = something`, and having the caller see the something
[09:15:37] <gde35> I just wondered if it would continue to be an array
[09:15:57] *** Quits: dpuerto (~dpuerto@136-27-83-52.cab.webpass.net) (Ping timeout: 240 seconds)
[09:15:59] <ljharb> oh sure, altho the only time arrays with expando properties are not "horrifically bad code" is when it's regex match objects
[09:16:07] *** Joins: banana_ (~banana_@user/banana/x-2944094)
[09:22:17] <gde35> n>a=[1];a["1"]="bananas";a
[09:22:18] <jellobot> (okay) [ 1, 'bananas' ]
[09:25:32] <gde35> n>a=[9];a[1,2,3,4]="bananas";a // what is going on here?
[09:25:33] <jellobot> (okay) [ 9, <3 empty items>, 'bananas' ]
[09:25:55] *** Joins: maret (~maret@nat-88-212-37-89.antik.sk)
[09:26:33] *** Quits: xall (~xall@2600:8800:8c02:3600:1173:a052:4798:9101) (Quit: Client closed)
[09:28:19] <leduyquang753> Comma operator returns the latter operand.
[09:28:28] <leduyquang753> So it's just `a[4] = "bananas"`.
[09:29:02] *** Parts: evulish (~evulish@cpe-72-231-26-248.nyc.res.rr.com) ()
[09:29:03] *** Joins: evulish (~evulish@cpe-72-231-26-248.nyc.res.rr.com)
[09:29:30] *** Joins: vysn (~vysn@user/vysn)
[09:29:38] *** Joins: chowmeined (~chowmeine@user/chowmeined)
[09:30:04] *** Quits: Codaraxis_ (~Codaraxis@user/codaraxis) (Ping timeout: 256 seconds)
[09:31:15] *** Quits: Brett[Air] (~Brett@124.148.79.4) (Read error: Connection reset by peer)
[09:31:39] *** Joins: Brett[Air] (~Brett@124.148.79.4)
[09:33:57] *** Joins: dirigible (~dirigible@2602:fe90:100:1e:e5a6:79af:9abe:fae5)
[09:35:24] *** Joins: night_wulfe (~wulfe@cpe-174-103-156-213.cinci.res.rr.com)
[09:35:35] *** Quits: Inst (~delicacie@c-98-208-218-119.hsd1.fl.comcast.net) (Ping timeout: 256 seconds)
[09:36:16] *** Quits: evulish (~evulish@cpe-72-231-26-248.nyc.res.rr.com) (Quit: Reconnecting)
[09:36:28] *** Joins: evulish (~evulish@cpe-72-231-26-248.nyc.res.rr.com)
[09:37:10] *** Joins: perrierjouet (~perrier-j@modemcable012.251-130-66.mc.videotron.ca)
[09:38:25] *** Quits: nwulfe (~wulfe@cpe-174-103-156-213.cinci.res.rr.com) (Ping timeout: 256 seconds)
[09:39:17] *** Quits: audiobirb (~audio@user/audio) (Ping timeout: 240 seconds)
[09:49:44] *** Quits: Anonamy (~Anonamy@node-1w7jr9qsmpnqx5s3vo4msg2dy.ipv6.telus.net) (Remote host closed the connection)
[09:52:36] *** Joins: Anonamy (~Anonamy@node-1w7jr9qsmpnqx5s3vo4msg2dy.ipv6.telus.net)
[09:53:14] <ljharb> evulish: you need to auth with nickserv so non-ops can see what you say; see the last link in the topic
[09:56:16] *** Joins: Zweihander (~Zweihande@znc.ext.zweihander.me)
[09:58:58] *** Quits: \mSg_mini (mSg@user/msg/x-0285936) (Ping timeout: 256 seconds)
[10:01:03] *** Zweihander is now known as zwei
[10:04:22] *** Quits: pluri (~pluri@user/pluri) (Quit: My MacBook has gone to sleep. ZZZzzzâ€¦)
[10:06:16] *** Joins: \mSg (mSg@user/msg/x-0285936)
[10:11:25] *** Quits: \mSg (mSg@user/msg/x-0285936) (Ping timeout: 240 seconds)
[10:13:42] *** Joins: sam_1 (~sam_1@87.51.251.118)
[10:14:35] *** Joins: \mSg (mSg@user/msg/x-0285936)
[10:18:20] *** Quits: sam_1 (~sam_1@87.51.251.118) (Ping timeout: 252 seconds)
[10:20:15] *** Joins: sam_1 (~sam_1@87.51.251.118)
[10:22:57] *** Quits: hassoon (hassoon@user/hassoon) (Ping timeout: 240 seconds)
[10:23:44] *** Joins: hassoon (hassoon@grape.ircnow.org)
[10:26:16] *** Joins: Tobbi (~Tobbi@2a02:8108:1240:48ec:7dc8:1477:cf9c:6f84)
[10:27:36] *** Joins: comatory_ (~ondrejsyn@217.11.241.69)
[10:27:51] *** Quits: FlorianBad (~FlorianBa@cpe-67-49-107-16.dc.res.rr.com) (Quit: Client closed)
[10:30:37] *** Quits: stenno (~stenno@user/stenno) (Ping timeout: 240 seconds)
[10:33:27] *** Joins: stenno (~stenno@user/stenno)
[10:34:29] *** Joins: otisolsen70 (~otisolsen@xd4ed80b5.cust.hiper.dk)
[10:35:21] *** Quits: otisolsen70 (~otisolsen@xd4ed80b5.cust.hiper.dk) (Remote host closed the connection)
[10:35:46] *** Joins: otisolsen70 (~otisolsen@xd4ed80b5.cust.hiper.dk)
[10:38:09] *** Joins: BaggersIO (~BaggersIO@62.96.248.182)
[10:39:02] *** Joins: lovezrs (~lovezrs@101.64.0.72)
[10:42:02] *** Quits: comatory_ (~ondrejsyn@217.11.241.69) (Ping timeout: 256 seconds)
[10:42:13] *** Quits: quazimodo (~quazimodo@n1-41-223-188.bla2.nsw.optusnet.com.au) (Ping timeout: 240 seconds)
[10:44:06] *** Joins: comatory_ (~ondrejsyn@217.11.241.69)
[10:46:57] *** Quits: Tobbi (~Tobbi@2a02:8108:1240:48ec:7dc8:1477:cf9c:6f84) (Ping timeout: 240 seconds)
[10:57:42] *** Quits: Betal (~Betal@user/betal) (Quit: WeeChat 3.4)
[11:04:31] *** Joins: dpuerto (~dpuerto@136-27-83-52.cab.webpass.net)
[11:08:37] *** Quits: dpuerto (~dpuerto@136-27-83-52.cab.webpass.net) (Ping timeout: 240 seconds)
[11:10:23] *** Joins: cotko (~cotko@188-230-251-153.dynamic.t-2.net)
[11:14:22] *** Joins: colordrops (~erahhal@69.53.245.255)
[11:14:50] *** Joins: colordro1 (~erahhal@cpe-142-129-123-225.socal.res.rr.com)
[11:18:00] *** Joins: oscuroch_ (~oscurochu@37.120.215.102)
[11:18:37] *** Quits: colordrops (~erahhal@69.53.245.255) (Ping timeout: 240 seconds)
[11:19:51] *** Quits: oscurochu (~oscurochu@37.120.215.101) (Ping timeout: 256 seconds)
[11:21:51] *** Joins: Akiva (~Akiva@user/Akiva)
[11:25:04] *** Joins: pluri (~pluri@user/pluri)
[11:26:10] *** Quits: colordro1 (~erahhal@cpe-142-129-123-225.socal.res.rr.com) (Quit: WeeChat 3.1)
[11:27:17] <cornfeedhobo> how come setting a var and then two forEach loops deep is unable to mutate the variable?
[11:27:36] *** Joins: colordrops (~erahhal@cpe-142-129-123-225.socal.res.rr.com)
[11:28:02] <sheetjs> n> var x = 0; [1,2,3].forEach(y => { [4,5,6].forEach(z => x = y+z); }); x
[11:28:03] <jellobot> (okay) 9
[11:28:20] <cornfeedhobo> hmmm
[11:28:21] <sheetjs> cornfeedhobo: did you possibly declare the same variable name in either forEach body?
[11:28:29] <cornfeedhobo> no
[11:28:35] <sheetjs> n> var x = 0; [1,2,3].forEach(x => { [4,5,6].forEach(z => x = x+z); }); x
[11:28:36] <jellobot> (okay) 0
[11:28:47] <sheetjs> the argument in the first forEach shadows the outside var
[11:29:22] <cornfeedhobo> yeah, but this is definitely not a case of clobbering
[11:29:30] <sheetjs> that shadowing also applies if you declare the var within the first forEach body, as the nested forEach argument, or in the nested forEach body
[11:29:48] <cornfeedhobo> the variable attempting to be mutated is a long special name
[11:30:37] *** Joins: D4mned (~D1mned@212.101.251.154)
[11:31:18] <rick123> How and when is this property set https://developer.mozilla.org/en-US/docs/Web/API/Request/destination ? I'm using it in service workers but if I had to directly use new Request() how/when would it be set ?
[11:31:33] *** Joins: Tobbi (~Tobbi@2a02:8108:1240:48ec:40f5:2114:f40e:465b)
[11:32:16] *** Joins: Booster2ooo (~Booster2o@user/booster2ooo)
[11:33:00] *** Joins: fef (~thedawn@user/thedawn)
[11:33:48] *** Joins: aniruddha (uid340443@id-340443.ilkley.irccloud.com)
[11:35:36] <cornfeedhobo> sheetjs: does this matter if strict is set?
[11:35:52] <cornfeedhobo> nvm. not the cause
[11:36:19] <sheetjs> if you're trying to debug
[11:37:29] <sheetjs> are you assigning to the variable only in the inner loop, or do you also assign from the outer loop?
[11:38:04] <sheetjs> console.log debugging is the modern printf, so you could log whenever you change values from the inner loop and log the values from the outer loop
[11:38:06] <cornfeedhobo> var foobar = []; fs.readdir('/path/to/dir', function(err, files) { foobar.push('foobar') }); console.log(foobar);
[11:38:15] <sheetjs> oh that's very different
[11:38:19] <cornfeedhobo> this doesn't seem to mutate foobar
[11:38:23] <sheetjs> cornfeedhobo: its like setTimeout
[11:38:38] *** Joins: pizdets_ (~pizdets@183.182.115.239)
[11:38:39] <sheetjs> n> var x = 0; setTimeout(() => {x = 1}, 1000); x
[11:38:40] <cornfeedhobo> ?
[11:38:41] <jellobot> (okay) 0
[11:38:43] *** Quits: pizdets (~pizdets@183.182.115.239) (Read error: Connection reset by peer)
[11:38:45] <sheetjs> why is that 0?
[11:38:56] <cornfeedhobo> i have no idea
[11:39:33] <silly> !async
[11:39:33] <jellobot> silly, Promises are placeholders for values that'll be provided in the future. They allow composing asynchronous operations like synchronous ones. See http://robotlolita.me/2015/11/15/how-do-promises-work.html and https://blog.domenic.me/youre-missing-the-point-of-promises/. Contrast with !cps & see https://bevacqua.github.io/promisees/. Another guide: http://www.javascriptkit.com/javatutors/javascriptpromises.shtml
[11:39:35] <sheetjs> fs.readdir does not block the javascript event loop
[11:39:39] <sheetjs> neither does setTimeout
[11:39:52] <cornfeedhobo> ooof course
[11:39:58] <sheetjs> so in practice your code does something like
[11:40:09] <cornfeedhobo> yea i follow
[11:40:21] <sheetjs> you can use readdirSync to simplify
[11:40:36] <sheetjs> var foobar = fs.readdirSync('/path/to/dir')
[11:40:47] <sheetjs> the `err` parameter can be recovered if you put the thing in a try-catch block
[11:41:06] <cornfeedhobo> okay, brb. thanks!
[11:45:49] *** Quits: colordrops (~erahhal@cpe-142-129-123-225.socal.res.rr.com) (Ping timeout: 240 seconds)
[11:53:05] *** Quits: matsaman (~matsaman@user/matsaman) (Quit: leaving)
[11:53:57] *** Quits: banana_ (~banana_@user/banana/x-2944094) (Ping timeout: 240 seconds)
[11:54:20] *** Joins: banana__ (~banana_@2603-6000-b500-9ce3-4470-142e-73b8-97ef.res6.spectrum.com)
[12:01:04] *** Joins: ___nick___ (~quassel@cpc68286-cdif17-2-0-cust533.5-1.cable.virginm.net)
[12:10:20] *** Joins: iomari891 (~iomari891@102.91.5.198)
[12:10:26] *** Quits: sharperguy (~sharpergu@88.130.218.121) (Ping timeout: 256 seconds)
[12:10:40] *** Joins: sharperguy (~sharpergu@fnord.cryptophone.de)
[12:12:53] *** Quits: ___nick___ (~quassel@cpc68286-cdif17-2-0-cust533.5-1.cable.virginm.net) (Quit: https://quassel-irc.org - Chat comfortably. Anywhere.)
[12:14:26] *** Joins: ___nick___ (~quassel@cpc68286-cdif17-2-0-cust533.5-1.cable.virginm.net)
[12:14:46] *** Quits: ___nick___ (~quassel@cpc68286-cdif17-2-0-cust533.5-1.cable.virginm.net) (Client Quit)
[12:16:20] *** Quits: dodobrain (~dodobrain@user/dodobrain) (Ping timeout: 260 seconds)
[12:16:21] *** Joins: ___nick___ (~quassel@cpc68286-cdif17-2-0-cust533.5-1.cable.virginm.net)
[12:19:17] *** Joins: jazzy2 (~jaziz@user/jaziz)
[12:19:57] *** Quits: jazzy (~jaziz@user/jaziz) (Ping timeout: 240 seconds)
[12:20:59] *** Quits: morgabra (sid500580@user/morgabra) (Ping timeout: 252 seconds)
[12:22:45] *** Quits: pluri (~pluri@user/pluri) (Ping timeout: 256 seconds)
[12:23:39] *** Joins: morgabra (sid500580@user/morgabra)
[12:25:56] *** Joins: pluri (~pluri@user/pluri)
[12:27:37] *** Quits: banana__ (~banana_@2603-6000-b500-9ce3-4470-142e-73b8-97ef.res6.spectrum.com) (Ping timeout: 240 seconds)
[12:30:57] *** Quits: iomari891 (~iomari891@102.91.5.198) (Ping timeout: 240 seconds)
[12:32:20] *** Joins: nwulfe (~wulfe@cpe-174-103-156-213.cinci.res.rr.com)
[12:32:41] *** Joins: voltage_ (voltage@user/voltage)
[12:34:12] *** Quits: trevors (~trevors@user/trevors) (Quit: trevors)
[12:35:21] *** Joins: iomari891 (~iomari891@197.210.71.172)
[12:35:22] *** Quits: night_wulfe (~wulfe@cpe-174-103-156-213.cinci.res.rr.com) (Ping timeout: 256 seconds)
[12:35:35] <since_> https://www.bleepingcomputer.com/news/security/dev-corrupts-npm-libs-colors-and-faker-breaking-thousands-of-apps/
[12:39:21] *** Joins: enoq (~enoq@2a05:1141:1f5:5600:b9c9:721a:599:bfe7)
[12:53:49] *** Quits: otisolsen70 (~otisolsen@xd4ed80b5.cust.hiper.dk) (Quit: Leaving)
[12:56:41] *** Joins: banana__ (~banana_@2603-6000-b500-9ce3-4470-142e-73b8-97ef.res6.spectrum.com)
[12:57:05] *** Joins: Y4knotiS (~YaknotiS@cpc1-cmbg18-2-0-cust87.5-4.cable.virginm.net)
[12:58:06] *** Joins: rcoote (~rcoote@2a02:908:690:a140:e79c:da85:5a01:9cdc)
[12:59:10] *** Joins: jim87 (~quassel@93.55.249.30)
[12:59:10] *** Quits: jim87 (~quassel@93.55.249.30) (Client Quit)
[13:08:01] *** Joins: shokohsc (~shokohsc@lfbn-idf2-1-630-171.w86-246.abo.wanadoo.fr)
[13:20:13] *** Quits: Akiva (~Akiva@user/Akiva) (Ping timeout: 240 seconds)
[13:28:04] *** Quits: iomari891 (~iomari891@197.210.71.172) (Ping timeout: 256 seconds)
[13:29:11] *** Joins: iomari891 (~iomari891@197.210.70.107)
[13:35:51] *** Quits: iomari891 (~iomari891@197.210.70.107) (Ping timeout: 256 seconds)
[13:36:09] *** Quits: Cyp (~cyp@213.237.85.9) (Remote host closed the connection)
[13:36:33] *** Joins: Cyp (~cyp@213.237.85.9)
[13:36:50] *** Joins: nomic (~nomic@185.198.243.30)
[13:39:26] *** Quits: Cyp (~cyp@213.237.85.9) (Read error: Connection reset by peer)
[13:40:02] *** Joins: maroloccio (~marolocci@151.75.59.229)
[13:41:28] *** Joins: Cyp (~cyp@213.237.85.9)
[13:46:03] *** Quits: Cyp (~cyp@213.237.85.9) (Read error: Connection reset by peer)
[13:47:38] *** Joins: Cyp (~cyp@213.237.85.9)
[13:47:55] *** jazzy2 is now known as jazzy
[13:48:19] *** Joins: Gurkenglas (~Gurkengla@dslb-002-203-144-204.002.203.pools.vodafone-ip.de)
[13:48:57] *** Quits: banana__ (~banana_@2603-6000-b500-9ce3-4470-142e-73b8-97ef.res6.spectrum.com) (Ping timeout: 240 seconds)
[13:51:22] *** Joins: spinningCat (~spinningC@94.54.210.37)
[13:51:56] *** Quits: spinningCat (~spinningC@94.54.210.37) (Changing host)
[13:51:56] *** Joins: spinningCat (~spinningC@about/web/muscles)
[13:57:46] *** Quits: rustyshackleford (uid236774@id-236774.helmsley.irccloud.com) (Quit: Connection closed for inactivity)
[14:00:48] *** Joins: iomari891 (~iomari891@197.210.71.172)
[14:04:35] *** Quits: g2anj (~v@58.228.230.4) (Quit: .)
[14:05:53] *** Quits: sickdyd (~sickd@120.51.82.69.ap.gmobb-fix.jp) (Ping timeout: 256 seconds)
[14:09:33] *** Quits: Cyp (~cyp@213.237.85.9) (Excess Flood)
[14:10:05] *** Joins: Cyp (~cyp@213.237.85.9)
[14:18:59] *** Joins: g2anj (~v@58.228.230.4)
[14:20:54] *** Joins: keepsmile_ (~keepsmile@109.86.171.193)
[14:24:41] *** Quits: keepsmile_ (~keepsmile@109.86.171.193) (Read error: Connection reset by peer)
[14:28:42] *** Quits: iomari891 (~iomari891@197.210.71.172) (Ping timeout: 256 seconds)
[14:30:34] *** Joins: dpuerto (~dpuerto@136-27-83-52.cab.webpass.net)
[14:31:17] *** Joins: duch_kazatel (~robert0@c-76-114-62-229.hsd1.ca.comcast.net)
[14:32:06] *** Quits: robertmaxrees (~robert0@c-76-114-62-229.hsd1.ca.comcast.net) (Ping timeout: 256 seconds)
[14:32:15] *** Joins: keepsmile (~keepsmile@109.86.171.193)
[14:32:23] *** Quits: keepsmile (~keepsmile@109.86.171.193) (Client Quit)
[14:32:47] *** Joins: keepsmile (~keepsmile@109.86.171.193)
[14:33:24] *** Quits: keepsmile (~keepsmile@109.86.171.193) (Client Quit)
[14:33:48] *** Joins: Joss_ (~keepsmile@109.86.171.193)
[14:34:22] *** Quits: Joss_ (~keepsmile@109.86.171.193) (Client Quit)
[14:34:40] *** Joins: michaelis (~michaelis@193.183.209.17)
[14:34:47] *** Quits: dpuerto (~dpuerto@136-27-83-52.cab.webpass.net) (Ping timeout: 256 seconds)
[14:35:48] *** Quits: maroloccio (~marolocci@151.75.59.229) (Quit: WeeChat 3.0)
[14:46:48] *** Joins: gproto23 (~gproto23@user/gproto23)
[14:47:25] *** Quits: PowaBanga (~PowaBanga@user/powabanga) (Ping timeout: 240 seconds)
[14:47:42] *** Quits: oscuroch_ (~oscurochu@37.120.215.102) (Remote host closed the connection)
[14:49:02] *** Joins: nateh1ggers (~t@46.235.96.58)
[14:49:34] *** Quits: doji (~doji@user/doji) (Ping timeout: 260 seconds)
[14:51:10] *** Quits: nateh1ggers (~t@46.235.96.58) (Client Quit)
[14:53:03] *** Joins: PowaBanga (~PowaBanga@user/powabanga)
[14:53:37] *** Quits: aniruddha (uid340443@id-340443.ilkley.irccloud.com) (Quit: Connection closed for inactivity)
[14:53:44] *** Quits: sheetjs (~sheetjs@user/sheetjs) (Remote host closed the connection)
[14:56:20] *** Joins: aniruddha (uid340443@id-340443.ilkley.irccloud.com)
[14:57:27] *** Quits: BaggersIO (~BaggersIO@62.96.248.182) (Ping timeout: 256 seconds)
[14:57:45] *** robyndrake is now known as robyn
[14:58:33] *** Joins: sickdyd (~sickd@120.51.82.69.ap.gmobb-fix.jp)
[14:59:00] *** Joins: panella32 (~panella32@89.46.114.155)
[14:59:09] *** Joins: Naan (~Naan@user/naan)
[14:59:11] *** Joins: BaggersIO (~BaggersIO@62.96.248.182)
[14:59:53] *** Quits: panella32 (~panella32@89.46.114.155) (Client Quit)
[15:01:42] *** Quits: fef (~thedawn@user/thedawn) (Ping timeout: 276 seconds)
[15:03:01] *** Quits: sickdyd (~sickd@120.51.82.69.ap.gmobb-fix.jp) (Ping timeout: 240 seconds)
[15:04:49] *** Quits: BaggersIO (~BaggersIO@62.96.248.182) (Ping timeout: 256 seconds)
[15:09:20] *** Quits: whatsupdoc (uid509081@id-509081.hampstead.irccloud.com) (Quit: Connection closed for inactivity)
[15:10:02] *** Joins: oscurochu (~oscurochu@37.120.215.101)
[15:10:28] *** Quits: Lazenca (~lazenca@user/lazenca) (Remote host closed the connection)
[15:11:32] *** Joins: jazzy2 (~jaziz@user/jaziz)
[15:12:15] *** Joins: Alex8532 (~Alex8532@user/alex8532)
[15:13:25] *** Joins: fef (~thedawn@user/thedawn)
[15:13:57] *** Quits: oscurochu (~oscurochu@37.120.215.101) (Remote host closed the connection)
[15:14:17] *** Quits: jazzy (~jaziz@user/jaziz) (Ping timeout: 240 seconds)
[15:14:24] *** jazzy2 is now known as jazzy
[15:17:17] *** Quits: robyn (~robyndrak@user/robyndrake) (Quit: WeeChat 3.4)
[15:17:33] *** Quits: pluri (~pluri@user/pluri) (Quit: My MacBook has gone to sleep. ZZZzzzâ€¦)
[15:20:56] <Alex8532> Hello friends, long time.
[15:21:01] <Alex8532> I am in the market of finding a library that does incremental database migrations.  I plan to use Postgresql.  What are my options?  sequelize, Knex, or something else?
[15:24:33] *** Joins: trafficjam (~qubes@118.127.126.178)
[15:24:46] <trafficjam> hey lads
[15:25:37] *** Quits: perrierjouet (~perrier-j@modemcable012.251-130-66.mc.videotron.ca) (Quit: WeeChat 3.4)
[15:25:46] *** Joins: pileatedx (~textual@cpe-67-241-68-204.twcny.res.rr.com)
[15:25:50] <D4mned> go for sequelize
[15:25:57] <D4mned> my preference
[15:26:04] <D4mned> hey trafficjam
[15:26:13] *** Joins: pmercado (~pmercado@186.107.48.62)
[15:27:01] <trafficjam> i'm wondering, if i make a curl reqeust to a next.js, it's not going to load any async data right?
[15:27:07] *** Joins: dmaislin (~dmaislin@047-233-046-055.res.spectrum.com)
[15:28:09] *** Quits: vbgunz_ (~vbgunz@35.141.71.47) (Ping timeout: 268 seconds)
[15:29:15] *** Joins: vbgunz (~vbgunz@35.141.71.47)
[15:32:43] <jaawerth> trafficjam: what do you mean? a curl request, from a server's perpsective, is no different from any other http request (notwithstanding the default headers and such)
[15:33:30] *** Joins: mauz (~mauz@2a01:e0a:994:7ed0:2012:4dbd:2b9f:eaeb)
[15:34:51] *** Quits: chenqisu1 (~bhca7d@183.217.201.21) (Ping timeout: 256 seconds)
[15:37:27] <trafficjam> jaawerth: right, with a traditional multi page app (which im used to building), a curl request to the app url would actually interact with the (backend) web framework, however if a next.js app loads data via an api, then curl wouldn't hit the api would it?
[15:37:42] <trafficjam> im saying you would need a headless browser or something to actually hit the api
[15:37:55] *** Joins: BaggersIO (~BaggersIO@62.96.248.182)
[15:39:44] <jaawerth> oh. well, nextjs is often used for static site generation or even simple isomorphic stuffs, so the fact that you're using nextjs isn't enough to say that on its own ;-)
[15:39:51] *** Quits: rcoote (~rcoote@2a02:908:690:a140:e79c:da85:5a01:9cdc) (Quit: Konversation terminated!)
[15:40:13] <jaawerth> if you're only using it as a single page app, it isn't so much going to do anything asynchronously as it will do nothing at all, since curl doesn't run client-side js. it'll just fetch your static pages and call it good
[15:42:07] <trafficjam> yeah that's what i'm saying, i'm used to http requests fetching the whole page but api-connected next apps don't work like that i have to remind myself
[15:44:38] *** Quits: BaggersIO (~BaggersIO@62.96.248.182) (Ping timeout: 256 seconds)
[15:44:56] *** Joins: oscurochu (~oscurochu@37.120.215.102)
[15:45:57] <Alex8532> D4mned: Thanks for your opinion.
[15:48:15] <D4mned> yeah i believe sequalize got the most support out there
[15:48:52] *** Joins: perrierjouet (~perrier-j@modemcable012.251-130-66.mc.videotron.ca)
[15:49:44] *** Quits: oscurochu (~oscurochu@37.120.215.102) (Ping timeout: 256 seconds)
[15:50:33] <Alex8532> D4mned: I like, I like... https://sequelize.org/master/manual/migrations.html
[15:52:05] *** Quits: Unfixed (~Jake@64.31.33.140) (Ping timeout: 250 seconds)
[15:56:31] *** Joins: robyndrake (~robyndrak@154.16.118.240)
[15:56:36] *** Quits: robyndrake (~robyndrak@154.16.118.240) (Changing host)
[15:56:36] *** Joins: robyndrake (~robyndrak@user/robyndrake)
[15:57:05] *** Joins: BaggersIO (~BaggersIO@62.96.248.182)
[15:57:06] *** Joins: trevors (~trevors@user/trevors)
[16:03:20] *** Quits: BaggersIO (~BaggersIO@62.96.248.182) (Ping timeout: 256 seconds)
[16:04:09] *** Joins: iomari891 (~iomari891@105.112.138.38)
[16:04:27] *** Joins: BaggersIO (~BaggersIO@62.96.248.182)
[16:04:52] <jaawerth> trafficjam: that isn't necessarily the case though https://nextjs.org/docs/basic-features/pages#server-side-rendering
[16:05:10] <jaawerth> if you want it to work that way (and it's often a good idea to support at least a bit of both), nextjs gives some tools for it
[16:05:30] <trafficjam> jaawerth: yeah i know it's possible but i don't have it set up
[16:05:35] *** Quits: gxt (~gxt@gateway/tor-sasl/gxt) (Remote host closed the connection)
[16:05:53] <jaawerth> ah ok
[16:05:56] *** Joins: gxt (~gxt@gateway/tor-sasl/gxt)
[16:08:17] *** Joins: Joss (~Joss@128-124-132-57.mobile.vf-ua.net)
[16:08:17] *** Quits: Joss (~Joss@128-124-132-57.mobile.vf-ua.net) (Changing host)
[16:08:17] *** Joins: Joss (~Joss@user/Joss)
[16:08:17] *** Quits: D4mned (~D1mned@212.101.251.154) (Read error: Connection reset by peer)
[16:09:00] *** Quits: spinningCat (~spinningC@about/web/muscles) (Ping timeout: 256 seconds)
[16:10:01] *** Joins: D4mned (~D1mned@212.101.234.166)
[16:10:39] *** Joins: brentaarnold_ (~brentaarn@24.112.58.14)
[16:10:53] *** Quits: Joss (~Joss@user/Joss) (Client Quit)
[16:11:50] *** Quits: brentaarnold (~brentaarn@24.112.58.14) (Ping timeout: 256 seconds)
[16:11:50] *** brentaarnold_ is now known as brentaarnold
[16:18:37] *** Quits: Brett[Air] (~Brett@124.148.79.4) (Ping timeout: 240 seconds)
[16:21:33] *** Joins: oscurochu (~oscurochu@37.120.215.102)
[16:22:29] *** Joins: MrBlue (~MrBlue@139.28.218.212)
[16:22:57] *** Quits: iomari891 (~iomari891@105.112.138.38) (Ping timeout: 240 seconds)
[16:25:05] *** Joins: iomari891 (~iomari891@105.112.138.38)
[16:25:33] *** Joins: DrowningElysium (uid190788@user/drowningelysium)
[16:25:37] *** Joins: cmbengue (~Thunderbi@207.191.249.160)
[16:25:44] *** Joins: dpuerto (~dpuerto@136-27-83-52.cab.webpass.net)
[16:27:02] *** Quits: remolej (~kenoba@user/kenoba) (Quit: The Lounge - https://thelounge.chat)
[16:27:43] *** Joins: remolej (~kenoba@user/kenoba)
[16:29:49] *** Quits: dpuerto (~dpuerto@136-27-83-52.cab.webpass.net) (Ping timeout: 240 seconds)
[16:32:58] *** Quits: remolej (~kenoba@user/kenoba) (Quit: The Lounge - https://thelounge.chat)
[16:33:52] *** Joins: remolej (~kenoba@user/kenoba)
[16:40:10] *** Quits: iomari891 (~iomari891@105.112.138.38) (Ping timeout: 256 seconds)
[16:41:51] *** Joins: iomari891 (~iomari891@105.112.138.38)
[16:50:22] *** Quits: iomari891 (~iomari891@105.112.138.38) (Ping timeout: 256 seconds)
[16:50:52] *** Quits: MrBlue (~MrBlue@139.28.218.212) (Quit: Leaving)
[16:54:50] *** Joins: CiaoSen (~Jura@p200300c957347b002a3a4dfffe84dbd5.dip0.t-ipconnect.de)
[16:59:39] *** Quits: mauz (~mauz@2a01:e0a:994:7ed0:2012:4dbd:2b9f:eaeb) (Quit: Leaving...)
[17:01:44] *** Joins: Inst (~delicacie@c-98-208-218-119.hsd1.fl.comcast.net)
[17:02:11] *** robyndrake is now known as robyn
[17:02:17] *** Quits: jazzy (~jaziz@user/jaziz) (Ping timeout: 240 seconds)
[17:03:49] *** Quits: N4buc0 (~N4buc0@200.146.13.23.dynamic.dialup.gvt.net.br) (Ping timeout: 256 seconds)
[17:08:08] *** Quits: D4mned (~D1mned@212.101.234.166) (Quit: Leaving)
[17:16:58] *** Joins: tmm88 (~tmm88@user/tmm88)
[17:24:21] *** Joins: iomari891 (~iomari891@105.112.138.38)
[17:24:41] *** Joins: MrBlue (~MrBlue@5.181.233.205)
[17:27:03] *** Quits: Gurkenglas (~Gurkengla@dslb-002-203-144-204.002.203.pools.vodafone-ip.de) (Ping timeout: 256 seconds)
[17:27:42] *** Joins: rewrit3 (~rewrit3@user/rewrit3)
[17:28:50] *** Joins: polyrob_ (~rob@user/polyrob)
[17:29:49] *** Quits: tmm88 (~tmm88@user/tmm88) (Ping timeout: 240 seconds)
[17:29:53] *** Quits: polyrob (~rob@user/polyrob) (Ping timeout: 256 seconds)
[17:29:55] *** polyrob_ is now known as polyrob
[17:31:18] *** Joins: DnzAtWrk (~DnzAtWrk@mobile-access-6df0d8-5.dhcp.inet.fi)
[17:40:05] *** Quits: oscurochu (~oscurochu@37.120.215.102) (Ping timeout: 256 seconds)
[17:40:16] *** Joins: onosendi (~onosendi@user/onosendi)
[17:41:13] *** Quits: iomari891 (~iomari891@105.112.138.38) (Ping timeout: 256 seconds)
[17:41:31] *** Joins: iomari891 (~iomari891@105.112.138.38)
[17:41:44] *** Joins: federico_it (~textual@151.51.84.71)
[17:43:37] *** Quits: aniruddha (uid340443@id-340443.ilkley.irccloud.com) (Quit: Connection closed for inactivity)
[17:44:22] *** Joins: sickdyd (~sickd@120.51.82.69.ap.gmobb-fix.jp)
[17:45:23] *** Joins: morte_ (~user@190.104.116.153)
[17:47:06] *** Joins: doji (~doji@user/doji)
[17:49:37] *** Quits: sickdyd (~sickd@120.51.82.69.ap.gmobb-fix.jp) (Ping timeout: 240 seconds)
[17:52:36] *** Joins: tmm88 (~tmm88@bl22-240-102.dsl.telepac.pt)
[17:52:42] *** Quits: iomari891 (~iomari891@105.112.138.38) (Ping timeout: 256 seconds)
[17:53:56] *** Joins: pulse (~pulse@user/pulse)
[17:54:56] *** Joins: iomari891 (~iomari891@105.112.138.38)
[17:59:07] *** Joins: varaindemian (uid73404@id-73404.ilkley.irccloud.com)
[17:59:52] *** Quits: dave0 (~davezero@069.d.003.ncl.iprimus.net.au) (Quit: dave's not here)
[18:00:56] *** Joins: Guest8535 (~Guest85@105.112.44.91)
[18:04:33] *** Quits: Guest8535 (~Guest85@105.112.44.91) (Client Quit)
[18:04:46] *** Joins: netameta (~netameta@2a00:a040:193:50fe:7859:e7d0:9a61:3c76)
[18:07:52] *** Joins: wroathe (~wroathe@206-55-188-8.fttp.usinternet.com)
[18:07:52] *** Quits: wroathe (~wroathe@206-55-188-8.fttp.usinternet.com) (Changing host)
[18:07:52] *** Joins: wroathe (~wroathe@user/wroathe)
[18:07:57] *** Quits: iomari891 (~iomari891@105.112.138.38) (Ping timeout: 240 seconds)
[18:08:46] *** Joins: obimod (~obimod@gateway/vpn/pia/obimod)
[18:09:10] *** Quits: cmbengue (~Thunderbi@207.191.249.160) (Remote host closed the connection)
[18:10:14] *** Joins: iomari891 (~iomari891@105.112.138.38)
[18:10:52] *** Quits: leduyquang753 (~leduyquan@user/leduyquang753) (Quit: Gotta go, see you guys later.)
[18:16:52] *** Joins: montybanksnyc (~montybank@108.50.135.21)
[18:17:06] *** Quits: vysn (~vysn@user/vysn) (Ping timeout: 268 seconds)
[18:20:28] *** Quits: iomari891 (~iomari891@105.112.138.38) (Ping timeout: 256 seconds)
[18:20:46] *** Joins: iomari891 (~iomari891@105.112.138.38)
[18:24:24] <hax> can anyone recommend an alternative to passportjs with docs that don't suck so bad
[18:24:37] *** Quits: sam_1 (~sam_1@87.51.251.118) (Ping timeout: 240 seconds)
[18:25:34] *** Joins: sam_1 (~sam_1@87.51.251.118)
[18:27:46] *** Joins: rustyshackleford (uid236774@id-236774.helmsley.irccloud.com)
[18:32:00] *** Joins: reallymemorable (~reallymem@70.107.110.8)
[18:32:50] *** Quits: DnzAtWrk (~DnzAtWrk@mobile-access-6df0d8-5.dhcp.inet.fi) (Read error: Connection reset by peer)
[18:33:30] *** Quits: iomari891 (~iomari891@105.112.138.38) (Ping timeout: 256 seconds)
[18:34:18] *** Joins: DnzAtWrk (~DnzAtWrk@1408.pc.puv.fi)
[18:34:35] *** Joins: Gurkenglas (~Gurkengla@dslb-002-203-144-204.002.203.pools.vodafone-ip.de)
[18:35:00] *** Joins: iomari891 (~iomari891@105.112.138.38)
[18:35:22] *** Joins: junktext (~junktext@gateway/vpn/pia/junktext)
[18:37:25] *** Quits: wroathe (~wroathe@user/wroathe) (Ping timeout: 240 seconds)
[18:41:05] <ThePendulum> do you need oauth to other services?
[18:41:46] *** Joins: cmbengue (~Thunderbi@207.191.249.160)
[18:42:22] <ezzieyguywuf> so, I've run `curl -H "Content-Type: image/jpeg" -T myfile.jpg https://some.api/endpoint` and it works like a charm. However, I've tried replicating this in javascript with `fetch("https:/some.api/endpoint", {method: "PUT", headers: {'Content-Type': 'image/jpeg'}, body: fileFromForm})` and I get a 403 error with a message "CORS Preflight Did Not Succeed"
[18:42:28] <ezzieyguywuf> am I doing something wrong with the fetch API?
[18:42:37] *** Quits: iomari891 (~iomari891@105.112.138.38) (Ping timeout: 240 seconds)
[18:43:21] *** Joins: iomari891 (~iomari891@105.112.138.38)
[18:44:09] <ThePendulum> could try mode: 'cors'
[18:44:13] <hax> ThePendulum, not really. I chose passport originally just in case that would be needed
[18:44:26] *** Joins: mauz (~mauz@2a01:e0a:994:7ed0:2012:4dbd:2b9f:eaeb)
[18:44:29] <ezzieyguywuf> ThePendulum: so, I thought of that. I think it's the default, but when I add it I get an altogether different error
[18:44:34] <ezzieyguywuf> let me see, just a sec
[18:44:47] <hax> seems it'd be easier to just DIY than trying to make sense of the docs
[18:45:06] <ezzieyguywuf> ahh, it's a typescript error, lol
[18:45:10] <ezzieyguywuf> let me see if I can figure that out
[18:45:17] <ThePendulum> hax: ah, well if you have your own database and express I would just use express-session and node's crypto module with the scrypt algo to start with
[18:46:18] <ezzieyguywuf> k, with mode: 'cors', some 403 and same message
[18:46:26] *** Joins: wroathe (~wroathe@206-55-188-8.fttp.usinternet.com)
[18:46:27] *** Quits: wroathe (~wroathe@206-55-188-8.fttp.usinternet.com) (Changing host)
[18:46:27] *** Joins: wroathe (~wroathe@user/wroathe)
[18:48:02] *** Quits: sam_1 (~sam_1@87.51.251.118) (Ping timeout: 240 seconds)
[18:48:15] <ezzieyguywuf> ahh I think I need credentials: 'include'
[18:49:07] *** Joins: sam_1 (~sam_1@87.51.251.118)
[18:49:30] <ezzieyguywuf> nope that's not it
[18:50:47] *** Quits: ryzenda (~ryzenda@pool-74-109-246-70.pitbpa.fios.verizon.net) (Read error: Connection reset by peer)
[18:51:04] *** Quits: wroathe (~wroathe@user/wroathe) (Ping timeout: 256 seconds)
[18:52:05] *** Quits: cotko (~cotko@188-230-251-153.dynamic.t-2.net) (Quit: Konversation terminated!)
[18:52:09] *** Joins: Snyp (~Snyp@49.207.207.174)
[18:52:46] *** Quits: kakashiAL (~kakashi@ip-37-201-198-9.hsi13.unitymediagroup.de) (Ping timeout: 256 seconds)
[18:54:12] *** Joins: cotko (~cotko@188-230-251-153.dynamic.t-2.net)
[18:54:22] *** Joins: Arisco (~ckmptnml@201-24-225-211.user3p.brasiltelecom.net.br)
[18:55:39] *** Quits: cotko (~cotko@188-230-251-153.dynamic.t-2.net) (Remote host closed the connection)
[18:56:58] *** Joins: cotko (~cotko@188-230-251-153.dynamic.t-2.net)
[18:57:52] *** Quits: iomari891 (~iomari891@105.112.138.38) (Ping timeout: 256 seconds)
[18:58:17] *** Quits: Arisc (~ckmptnml@201-24-225-211.user3p.brasiltelecom.net.br) (Ping timeout: 256 seconds)
[18:58:49] <ThePendulum> not sure if you might need a proxy
[18:59:59] *** Joins: iomari891 (~iomari891@105.112.138.38)
[19:01:14] <systemfault> Wtf is that API... servers don't care about pre-flight requests, clients do...
[19:01:38] <stenno> server is not properly configured
[19:01:39] <systemfault> Ah... nevermind
[19:03:29] <ezzieyguywuf> stenno: so I need to fix my server?
[19:03:36] <ezzieyguywuf> I assumed it was set up correctly since the curl command worked properly
[19:03:59] <systemfault> ezzieyguywuf: curl doesn't need the same security features than a browser..
[19:04:25] <ezzieyguywuf> hm, I see
[19:04:25] *** Joins: oscurochu (~oscurochu@37.120.215.101)
[19:04:31] <stenno> what is access-allow-control-origin header of the backend?
[19:04:39] <stenno> access-control-allow-origin lol
[19:04:40] <ezzieyguywuf> I'll read up on this it seems to contain information that I should know https://developer.mozilla.org/en-US/docs/Web/HTTP/CORS
[19:04:45] <systemfault> ezzieyguywuf: Your server must be able to handle preflight requests (the OPTIONS http verbs and send back the access-allow-control-origin header)
[19:05:02] <ezzieyguywuf> ahhh I _don't_ have that OPTIONS thingy set up
[19:05:34] <ezzieyguywuf> `access-control-allow-origin: *` in the response from the server
[19:05:50] <stenno> hm h,
[19:05:54] <stenno> server seems good then
[19:06:56] <ezzieyguywuf> stenno: I have to ad the OPTION verb like systemfault said
[19:06:58] *** Joins: lenarhoyt (~lenarhoyt@p200300c24f035f017da1451e09e4bf13.dip0.t-ipconnect.de)
[19:08:23] <ezzieyguywuf> awwwww yea that did it
[19:08:25] <ezzieyguywuf> thanks y'all :)
[19:09:47] <stenno> you handle cors stuff manually in your backend?
[19:09:52] *** Joins: zer0bitz (~zer0bitz@2001:2003:f444:a000:2d06:fff0:d105:7c1)
[19:10:08] <stenno> or where did you 'add the OPTION verb'?
[19:11:19] <ezzieyguywuf> stenno: it's aws API Gateway, I just had to click on "enable CORS" in the gui
[19:11:25] <ezzieyguywuf> and then it added the OPTION thing
[19:11:26] <stenno> aah!
[19:11:28] <stenno> nice
[19:11:44] <ezzieyguywuf> I'm learning so much about the internet working on this silly website, lol
[19:12:09] <silly> yea :/ me too
[19:12:39] <silly> on a sidenote, i'm back to react-bootstrap
[19:12:47] *** Joins: cthulchu (~Cthulchu@ool-18e454e1.dyn.optonline.net)
[19:13:02] <silly> yuckiyuk
[19:13:17] <stenno> sounds terrible
[19:13:26] <ezzieyguywuf> I'm using regular react
[19:13:40] <silly> it sounds like lucky luke, but it isn't
[19:13:50] <ezzieyguywuf> I wanted to do it using just raw javascript, or maybe svelte (svelte is so nice!) but at the time I was looking for a job and it seemed like every job posting mentioned react
[19:14:37] *** Quits: sam_1 (~sam_1@87.51.251.118) (Ping timeout: 240 seconds)
[19:19:56] *** Joins: Rockwood (~Rocky@user/rocky)
[19:20:37] *** Quits: iomari891 (~iomari891@105.112.138.38) (Ping timeout: 240 seconds)
[19:24:12] *** Quits: Harlin_ (~DonQixote@63-230-76-242.clsp.qwest.net) (Quit: Leaving)
[19:24:29] *** Joins: Harlin (~DonQixote@63-230-76-242.clsp.qwest.net)
[19:25:58] *** Joins: iomari891 (~iomari891@105.112.138.38)
[19:27:18] *** Joins: salad (~cucumber@188.25.234.155)
[19:27:30] <ljharb> svelte isnâ€™t real js
[19:27:36] <ljharb> stick to react
[19:28:23] <systemfault> lol
[19:29:31] <systemfault> I don't personally believe anyone should use Svelte and that it's just going to "go away"... but I'm not sure about the "real js" argument...
[19:29:57] <stenno> systemfault: did you tell me about immer?
[19:30:15] <stenno> its really fun
[19:30:26] <stenno> and easy to use
[19:30:33] <Rockwood> o/
[19:30:36] *** Quits: DnzAtWrk (~DnzAtWrk@1408.pc.puv.fi) (Read error: Connection reset by peer)
[19:30:40] <systemfault> stenno: Possibly... not sure.
[19:30:44] <stenno> so if it was you, thanks for the recommend
[19:30:49] <systemfault> Better than ImmutableJS for sure..
[19:32:38] *** Joins: kevindank (~kevindank@c-76-99-182-66.hsd1.de.comcast.net)
[19:34:13] *** Quits: iomari891 (~iomari891@105.112.138.38) (Ping timeout: 240 seconds)
[19:34:54] *** Joins: iomari891 (~iomari891@105.112.138.38)
[19:38:32] *** Quits: lenarhoyt (~lenarhoyt@p200300c24f035f017da1451e09e4bf13.dip0.t-ipconnect.de) (Ping timeout: 256 seconds)
[19:38:48] *** Quits: sunny93 (~sunny93@wireguard/tunneler/sunny93) (Quit: The Lounge - https://thelounge.chat)
[19:39:17] *** Joins: enoq_ (~enoq@194-208-178-35.lampert.tv)
[19:40:01] *** Joins: Eugen80 (~eugen@ipb21aae17.dynamic.kabel-deutschland.de)
[19:43:27] <ljharb> systemfault: it has macros and changes the way labels work from "noop" to "has semantics"
[19:43:28] *** Quits: ckdCreations (~ckdCreati@147.55.133.138) (Read error: Connection reset by peer)
[19:43:31] <ljharb> systemfault: so it's objectively not real js
[19:43:44] *** Joins: ckdCreations (~ckdCreati@c-73-140-151-116.hsd1.wa.comcast.net)
[19:44:11] *** Quits: enoq_ (~enoq@194-208-178-35.lampert.tv) (Ping timeout: 256 seconds)
[19:44:20] *** Quits: obimod (~obimod@gateway/vpn/pia/obimod) (Ping timeout: 256 seconds)
[19:45:12] <systemfault> I understand your idea... but when is JSX getting standardized by the TC39 again? </troll>
[19:45:17] *** Joins: obimod (~obimod@gateway/vpn/pia/obimod)
[19:45:17] *** Quits: obimod (~obimod@gateway/vpn/pia/obimod) (Client Quit)
[19:46:09] <ljharb> (there's no "the")
[19:46:12] <ljharb> and lol yes true
[19:46:46] *** Joins: sickdyd (~sickd@120.51.82.69.ap.gmobb-fix.jp)
[19:46:56] <systemfault> Hmm, it sounds weird without the "the" :(
[19:47:42] *** Joins: sunny93 (~sunny93@wireguard/tunneler/sunny93)
[19:48:18] *** Quits: ckdCreations (~ckdCreati@c-73-140-151-116.hsd1.wa.comcast.net) (Ping timeout: 256 seconds)
[19:48:32] <Eugen80> I have in a js file this style of code: https://pastebin.com/CGgXgd3H can you tell me, is it compatible with IE11?
[19:48:52] <systemfault> Oh, a time machine
[19:49:02] *** Joins: ckdCreations (~ckdCreati@147.55.133.140)
[19:49:25] <systemfault> You need a AMD module loader
[19:49:25] *** Quits: iomari891 (~iomari891@105.112.138.38) (Ping timeout: 240 seconds)
[19:49:47] <systemfault> Should work on everything
[19:50:45] <systemfault> Back in the days, we used things like require.js to deal with those
[19:50:55] <Eugen80> website is using requirejs
[19:51:01] *** Quits: sickdyd (~sickd@120.51.82.69.ap.gmobb-fix.jp) (Ping timeout: 240 seconds)
[19:51:32] *** Joins: iomari891 (~iomari891@105.112.138.38)
[19:51:37] *** Quits: sunny93 (~sunny93@wireguard/tunneler/sunny93) (Client Quit)
[19:51:39] <Eugen80> ok.. it is ie6+ compatible
[19:51:40] *** Joins: ryzenda (~ryzenda@pool-74-109-246-70.pitbpa.fios.verizon.net)
[19:52:19] *** Joins: sunny93 (~sunny93@wireguard/tunneler/sunny93)
[19:52:31] <ljharb> requirejs is very obsolete
[19:57:48] *** Joins: dpuerto (~dpuerto@136-27-83-52.cab.webpass.net)
[19:58:50] *** Joins: kakashiAL (~kakashi@37.85.18.55)
[20:02:00] *** Quits: Rockwood (~Rocky@user/rocky) (Quit: The Time is Over)
[20:04:37] *** Quits: iomari891 (~iomari891@105.112.138.38) (Ping timeout: 240 seconds)
[20:06:51] *** Joins: iomari891 (~iomari891@105.112.138.38)
[20:08:48] *** Quits: Snyp (~Snyp@49.207.207.174) (Quit: Textual IRC Client: www.textualapp.com)
[20:10:37] *** Quits: BaggersIO (~BaggersIO@62.96.248.182) (Ping timeout: 240 seconds)
[20:10:50] *** Joins: sam_1 (~sam_1@87.51.251.118)
[20:11:25] *** Quits: Eugen80 (~eugen@ipb21aae17.dynamic.kabel-deutschland.de) (Quit: Konversation terminated!)
[20:14:40] *** Quits: kevindank (~kevindank@c-76-99-182-66.hsd1.de.comcast.net) (Quit: Client closed)
[20:15:21] *** Quits: sam_1 (~sam_1@87.51.251.118) (Ping timeout: 256 seconds)
[20:16:04] *** Quits: oscurochu (~oscurochu@37.120.215.101) (Ping timeout: 256 seconds)
[20:16:56] *** Quits: kmh (~kmh@2a00:6020:5004:6800:c006:a6d3:5f30:2560) (Quit: Leaving)
[20:19:19] *** Quits: iomari891 (~iomari891@105.112.138.38) (Ping timeout: 256 seconds)
[20:21:08] *** Joins: iomari891 (~iomari891@105.112.138.38)
[20:21:40] *** Quits: CiaoSen (~Jura@p200300c957347b002a3a4dfffe84dbd5.dip0.t-ipconnect.de) (Ping timeout: 268 seconds)
[20:22:43] *** Quits: trafficjam (~qubes@118.127.126.178) (Ping timeout: 256 seconds)
[20:24:06] *** Joins: ThePhilgrim (~ThePhilgr@78-69-18-227-no49.tbcn.telia.com)
[20:26:16] *** Quits: enoq (~enoq@2a05:1141:1f5:5600:b9c9:721a:599:bfe7) (Quit: enoq)
[20:26:50] *** Quits: ryzenda (~ryzenda@pool-74-109-246-70.pitbpa.fios.verizon.net) (Ping timeout: 256 seconds)
[20:27:20] *** Joins: sam_1 (~sam_1@87.51.251.118)
[20:27:28] *** Quits: dpuerto (~dpuerto@136-27-83-52.cab.webpass.net) (Remote host closed the connection)
[20:28:26] *** duch_kazatel is now known as robertmaxrees
[20:29:29] *** Joins: lenarhoyt (~lenarhoyt@pd9fc84e9.dip0.t-ipconnect.de)
[20:32:39] *** Quits: sam_1 (~sam_1@87.51.251.118) (Ping timeout: 250 seconds)
[20:33:19] *** Joins: varrg (~varrg@h-176-10-198-245.A351.priv.bahnhof.se)
[20:35:21] *** Joins: renlo (~Renlo_Ren@pool-173-68-108-120.nycmny.fios.verizon.net)
[20:35:40] *** Joins: GreenResponse (~tomek@r-45-155-148-237.gpon.bialnet.pl)
[20:35:41] *** Quits: Arisco (~ckmptnml@201-24-225-211.user3p.brasiltelecom.net.br) (Read error: Connection reset by peer)
[20:36:15] *** Quits: rewrit3 (~rewrit3@user/rewrit3) (Remote host closed the connection)
[20:36:20] *** Joins: Arisc (~ckmptnml@201-24-225-211.user3p.brasiltelecom.net.br)
[20:36:35] *** Joins: rewrit3 (~rewrit3@user/rewrit3)
[20:39:10] *** Joins: ryzenda (~ryzenda@pool-74-109-246-70.pitbpa.fios.verizon.net)
[20:39:14] *** Joins: kevindank (~kevindank@c-76-99-182-66.hsd1.de.comcast.net)
[20:40:17] *** Quits: iomari891 (~iomari891@105.112.138.38) (Ping timeout: 240 seconds)
[20:40:37] *** Joins: iomari891 (~iomari891@105.112.138.38)
[20:42:34] *** Joins: oscurochu (~oscurochu@37.120.215.102)
[20:46:06] *** Quits: iomari891 (~iomari891@105.112.138.38) (Ping timeout: 256 seconds)
[20:46:17] *** Joins: sam_1 (~sam_1@87.51.251.118)
[20:46:33] *** Joins: jw_dungeon (~jw@2601:44:4380:4a10:9c0:1948:7472:cb5d)
[20:47:22] *** Joins: FlorianBad (~FlorianBa@cpe-67-49-107-16.dc.res.rr.com)
[20:48:26] *** Joins: Akiva (~Akiva@user/Akiva)
[20:48:28] *** Joins: iomari891 (~iomari891@105.112.138.38)
[20:48:31] *** Quits: ThePhilgrim (~ThePhilgr@78-69-18-227-no49.tbcn.telia.com) (Remote host closed the connection)
[20:48:34] *** Joins: xall (~xall@2600:8800:8c02:3600:1173:a052:4798:9101)
[20:48:35] *** Joins: ZeroWalker (~ZeroWalke@2001:9b1:28f8:8300:7164:4c68:eefc:f59d)
[20:48:50] *** Joins: ThePhilgrim (~ThePhilgr@78-69-18-227-no49.tbcn.telia.com)
[20:49:42] <FlorianBad> I'm having some issues with Chrome because of some "push" requests I made. My page constantly has a pending request (for 30s) that takes care of the "push" request. Then it also has other requests (whatever the user does, like sending an object, getting one, etc). In some cases Chrome seems to timeout and I suspect it is because of the simultaneous
[20:49:42] <FlorianBad> pending "push" request. It might wait to reuse the same connection or something like this.
[20:50:27] <FlorianBad> Now, to do this I used XMLHttpRequest, and some people told me it was a bad idea. Could it fix the problem if I use the other alternative? (forgot what it was)
[20:50:32] *** Quits: sam_1 (~sam_1@87.51.251.118) (Ping timeout: 240 seconds)
[20:50:43] <xall> using javascript, you can't open a new tab and execute javascript on a different domain, right? can you do it through a chrome extension though?
[20:51:01] *** Quits: kakashiAL (~kakashi@37.85.18.55) (Ping timeout: 240 seconds)
[20:51:54] <systemfault> Imagine the security implications..
[20:52:21] <xall> of course, i'm just wondering if there is some solution for scripting purposes
[20:52:56] *** Joins: dpuerto (~dpuerto@136-27-83-52.cab.webpass.net)
[20:53:12] <systemfault> Not that I personally know but I'm fairly clueless when it comes to browser extensions
[20:53:16] *** Quits: reallymemorable (~reallymem@70.107.110.8) (Remote host closed the connection)
[20:53:52] *** Joins: reallymemorable (~reallymem@70.107.110.8)
[20:57:30] *** Quits: mexen (uid495612@user/mexen) (Quit: Connection closed for inactivity)
[20:58:02] <xall> i have a userscript that watches a page for updates and sends notifications. i'd like to be able to trigger opening new tabs that execute js to query dom and nav the page.
[20:58:12] *** Joins: CiaoSen (~Jura@p200300c957347b002a3a4dfffe84dbd5.dip0.t-ipconnect.de)
[20:58:25] <xall> i can do that using applescript. it's just i have to trigger it manually
[20:58:59] *** Quits: reallymemorable (~reallymem@70.107.110.8) (Ping timeout: 256 seconds)
[20:59:17] *** Joins: KlobberTobby (~KlobberTo@193.180.57.75)
[21:00:07] *** Quits: iomari891 (~iomari891@105.112.138.38) (Ping timeout: 256 seconds)
[21:00:50] *** Joins: reallymemorable (~reallymem@70.107.110.8)
[21:01:18] *** Joins: hanaan (~naan@user/naan)
[21:01:43] *** Joins: iomari891 (~iomari891@105.112.138.38)
[21:02:03] *** Quits: salad (~cucumber@188.25.234.155) (Quit: salad)
[21:02:03] *** Quits: Naan (~Naan@user/naan) (Quit: Leaving)
[21:02:07] *** hanaan is now known as Naan
[21:03:05] *** CuriousErnestBro is now known as fuckgrym
[21:03:18] *** fuckgrym is now known as CuriousErnestBro
[21:05:01] *** Quits: Haxxa (~Haxxa@89nnjg0xckz9ggn6r5xm.ip6.superloop.com) (Ping timeout: 240 seconds)
[21:05:52] *** Joins: corgi (~corgi@c-71-202-47-75.hsd1.ca.comcast.net)
[21:05:53] *** Quits: corgi (~corgi@c-71-202-47-75.hsd1.ca.comcast.net) (Changing host)
[21:05:53] *** Joins: corgi (~corgi@user/corgi)
[21:07:37] *** Joins: Betal (~Betal@user/betal)
[21:07:37] *** Joins: panella32 (~panella32@89.46.114.44)
[21:10:28] *** Quits: reallymemorable (~reallymem@70.107.110.8) (Ping timeout: 256 seconds)
[21:11:48] *** Joins: colordrops (~erahhal@2603-8001-9600-7b60-0010-0100-0001-b071.res6.spectrum.com)
[21:14:18] *** Joins: Unfixed (~Jake@64.31.33.140)
[21:17:47] *** Joins: reallymemorable (~reallymem@70.107.110.8)
[21:17:49] *** Joins: wroathe (~wroathe@206-55-188-8.fttp.usinternet.com)
[21:17:50] *** Quits: wroathe (~wroathe@206-55-188-8.fttp.usinternet.com) (Changing host)
[21:17:50] *** Joins: wroathe (~wroathe@user/wroathe)
[21:18:21] *** Quits: reallymemorable (~reallymem@70.107.110.8) (Remote host closed the connection)
[21:18:49] *** Quits: iomari891 (~iomari891@105.112.138.38) (Ping timeout: 256 seconds)
[21:18:58] *** Joins: Haxxa (~Haxxa@202-144-174-197.ip4.superloop.com)
[21:19:20] *** Joins: iomari891 (~iomari891@105.112.138.38)
[21:19:34] *** Joins: reallymemorable (~reallymem@70.107.110.8)
[21:21:49] *** Quits: voltage_ (voltage@user/voltage) (Quit: Leaving)
[21:21:52] *** Joins: kakashiAL (~kakashi@ip-37-201-198-9.hsi13.unitymediagroup.de)
[21:23:15] *** Quits: dpuerto (~dpuerto@136-27-83-52.cab.webpass.net) (Remote host closed the connection)
[21:23:15] *** Quits: corgi (~corgi@user/corgi) (Quit: o_O)
[21:24:33] *** Joins: dpuerto (~dpuerto@136-27-83-52.cab.webpass.net)
[21:26:54] *** Quits: reallymemorable (~reallymem@70.107.110.8) (Ping timeout: 256 seconds)
[21:27:28] *** Quits: renlo (~Renlo_Ren@pool-173-68-108-120.nycmny.fios.verizon.net) (Ping timeout: 256 seconds)
[21:28:49] *** Joins: dalek-caan (~Thunderbi@109.252.124.86)
[21:29:10] *** Quits: dpuerto (~dpuerto@136-27-83-52.cab.webpass.net) (Ping timeout: 256 seconds)
[21:29:44] *** Quits: wroathe (~wroathe@user/wroathe) (Ping timeout: 256 seconds)
[21:30:37] *** Quits: henry40408 (~henry4040@175.181.188.127) (Remote host closed the connection)
[21:31:09] *** Joins: henry40408 (~henry4040@175.181.188.127)
[21:31:19] *** Joins: corgi (~corgi@c-71-202-47-75.hsd1.ca.comcast.net)
[21:31:19] *** Quits: corgi (~corgi@c-71-202-47-75.hsd1.ca.comcast.net) (Changing host)
[21:31:19] *** Joins: corgi (~corgi@user/corgi)
[21:35:03] *** Joins: rcoote (~rcoote@2a02:908:690:a140:8c44:f579:dbaf:36b5)
[21:36:37] *** Quits: oscurochu (~oscurochu@37.120.215.102) (Ping timeout: 240 seconds)
[21:37:47] *** Joins: wroathe (~wroathe@206-55-188-8.fttp.usinternet.com)
[21:37:47] *** Quits: wroathe (~wroathe@206-55-188-8.fttp.usinternet.com) (Changing host)
[21:37:47] *** Joins: wroathe (~wroathe@user/wroathe)
[21:37:51] *** Joins: dpuerto (~dpuerto@136-27-83-52.cab.webpass.net)
[21:41:05] *** CuriousErnestBro is now known as fuckrickyrick
[21:41:34] *** fuckrickyrick is now known as CuriousErnestBro
[21:42:12] *** Quits: wroathe (~wroathe@user/wroathe) (Ping timeout: 256 seconds)
[21:42:27] *** Joins: voltage_ (voltage@user/voltage)
[21:44:39] *** Square is now known as Sqaure
[21:46:05] <lf94> CSRF: why am I using this again
[21:46:12] <lf94> "cross site request forgery"
[21:46:15] *** Quits: pileatedx (~textual@cpe-67-241-68-204.twcny.res.rr.com) (Quit: I have gone to sleep. ZZZzzzâ€¦)
[21:46:21] <lf94> this is all can recall of this, and some token
[21:46:40] <lf94> csrf token is to prevent malicious javascript from invoking the form?
[21:46:51] <lf94> literally just trying to remember from memory
[21:47:06] <lf94> it's been like 2 years since i had to use them
[21:49:05] *** Joins: vysn (~vysn@user/vysn)
[21:53:07] *** Joins: renlo (~Renlo_Ren@pool-173-68-108-120.nycmny.fios.verizon.net)
[21:54:40] *** Quits: pulse (~pulse@user/pulse) (Ping timeout: 256 seconds)
[21:55:39] *** Quits: lenarhoyt (~lenarhoyt@pd9fc84e9.dip0.t-ipconnect.de) (Ping timeout: 256 seconds)
[21:58:53] *** Quits: varaindemian (uid73404@id-73404.ilkley.irccloud.com) (Quit: Connection closed for inactivity)
[22:00:10] <ljharb> lf94: if site X doesn't use CSRF, then if you visit my site, i can do whatever i want on site X with images/iframes/etc
[22:00:38] <ljharb> lf94: iow, without CSRF a malicious website can do anything you can do on a website you're logged into
[22:00:57] *** Quits: trevors (~trevors@user/trevors) (Quit: trevors)
[22:01:18] *** Quits: onosendi (~onosendi@user/onosendi) (Quit: WeeChat 3.3)
[22:02:15] *** Joins: pulse (~pulse@user/pulse)
[22:02:16] <lf94> what's particularly wrong with loading site X inside of my site Y and controlling X in the embedded window
[22:02:34] <lf94> Can Y arbitrarily access parts of X?
[22:05:55] <Alex8532> ljharb: Dad!  Your sonny boy is back :))))))))))))))!
[22:07:40] <ljharb> Alex8532: that's insanely creepy
[22:07:50] *** Joins: victor (uid208353@user/victor)
[22:07:54] <Alex8532> ;)
[22:07:59] <ljharb> lf94: it means if your bank doesn't use CSRF, and you visit my site, i can steal all of your money
[22:08:44] <lf94> What if you just disallow iframes
[22:08:46] <ljharb> lf94: if you don't think there's anything wrong with that then i accept all forms of currency, send away
[22:08:48] <lf94> being iframed
[22:08:53] <ljharb> lf94: no, because you can still make requests to any URL
[22:09:02] <ljharb> lf94: using `new Image()` for example, or ajax
[22:09:09] <ljharb> lf94: same-origin only prevents me from getting a response
[22:09:19] *** Quits: dalek-caan (~Thunderbi@109.252.124.86) (Quit: dalek-caan)
[22:09:20] <lf94> right, so if I set that I should be ok
[22:09:36] <lf94> everything is from our origin
[22:09:49] <lf94> but regardless I see csrf is pretty much necessary
[22:10:03] <lf94> so...*sigh* fricken web. i'll add a csrf token.
[22:10:11] <ljharb> lf94: yes, CSRF is always necessary
[22:10:24] *** Joins: dalek-caan (~Thunderbi@109.252.124.86)
[22:13:16] *** Quits: colordrops (~erahhal@2603-8001-9600-7b60-0010-0100-0001-b071.res6.spectrum.com) (Quit: WeeChat 3.1)
[22:15:22] *** Joins: colordrops (~erahhal@2603-8001-9600-7b60-0010-0100-0001-b071.res6.spectrum.com)
[22:16:00] *** Quits: dpuerto (~dpuerto@136-27-83-52.cab.webpass.net) (Remote host closed the connection)
[22:16:03] *** Quits: mishiranu (~mishiranu@78.129.171.229) (Ping timeout: 256 seconds)
[22:16:05] *** Joins: mishiran- (~mishiranu@78.129.171.229)
[22:18:19] *** Joins: dpuerto (~dpuerto@136-27-83-52.cab.webpass.net)
[22:18:28] *** Quits: renlo (~Renlo_Ren@pool-173-68-108-120.nycmny.fios.verizon.net) (Ping timeout: 256 seconds)
[22:20:35] *** Quits: iomari891 (~iomari891@105.112.138.38) (Ping timeout: 256 seconds)
[22:21:36] *** Joins: iomari891 (~iomari891@105.112.138.38)
[22:25:11] *** Joins: renlo (~Renlo_Ren@pool-173-68-108-120.nycmny.fios.verizon.net)
[22:26:30] *** Joins: onosendi (~onosendi@user/onosendi)
[22:26:57] *** Quits: gxt (~gxt@gateway/tor-sasl/gxt) (Ping timeout: 276 seconds)
[22:27:40] *** Joins: gxt (~gxt@gateway/tor-sasl/gxt)
[22:28:37] *** Quits: iomari891 (~iomari891@105.112.138.38) (Ping timeout: 240 seconds)
[22:32:13] *** Quits: vysn (~vysn@user/vysn) (Ping timeout: 240 seconds)
[22:38:44] *** Joins: comatory (~ondrejsyn@217.11.241.69)
[22:39:45] *** Joins: trevors (~trevors@user/trevors)
[22:41:33] *** Quits: comatory_ (~ondrejsyn@217.11.241.69) (Ping timeout: 256 seconds)
[22:43:53] *** Joins: kmh (~kmh@2a00:6020:5004:6800:155e:f714:239e:56bd)
[22:45:04] *** Quits: Haxxa (~Haxxa@202-144-174-197.ip4.superloop.com) (Quit: Haxxa flies away.)
[22:47:12] *** Joins: Haxxa (~Haxxa@202-144-174-197.ip4.superloop.com)
[22:48:14] *** Joins: audiobirb (~audio@user/audio)
[22:54:08] *** Quits: bliminse (~bliminse@host86-186-17-7.range86-186.btcentralplus.com) (Quit: leaving)
[22:54:38] *** Joins: sam_1 (~sam_1@87.51.251.118)
[22:57:12] *** Joins: mexen (uid495612@user/mexen)
[22:59:01] *** Quits: sam_1 (~sam_1@87.51.251.118) (Ping timeout: 240 seconds)
[23:00:45] *** Quits: fef (~thedawn@user/thedawn) (Ping timeout: 276 seconds)
[23:03:11] *** Joins: crised (~crised@200.112.228.40)
[23:03:54] <crised> In a fetch call, When it goes to catch block, How do I get the HTTP status code?
[23:04:22] <ljharb> crised: look at the rejection value
[23:04:23] *** Joins: Swayze (~gryster@user/swayze)
[23:04:36] <Swayze> https://github.com/windowjs/windowjs
[23:04:43] <Swayze> this looks good
[23:05:12] *** Joins: sheetjs (~sheetjs@user/sheetjs)
[23:05:19] <ljharb> "good"?
[23:05:24] <ljharb> windowed interfaces aren't better imo
[23:05:33] <ljharb> ah it's for desktop, not web
[23:05:40] <crised> ljharb: How do I get that rejection value?
[23:05:49] *** Quits: comatory (~ondrejsyn@217.11.241.69) (Ping timeout: 240 seconds)
[23:05:51] <crised> How do I do something like `err.status`
[23:05:53] *** Joins: haslo (uid390999@id-390999.uxbridge.irccloud.com)
[23:06:00] <ljharb> Swayze: interesting
[23:06:10] <ljharb> crised: what do you mean, it's a catch block
[23:06:13] <ljharb> crised: `catch (e) {`
[23:06:14] *** Joins: bliminse (~bliminse@host86-186-17-7.range86-186.btcentralplus.com)
[23:06:48] <crised> ljharb: yes, as of now I'm getting this when console.log(err.message) `Request failed with status code 400`
[23:07:13] <crised> ljharb: How do I get that status code? I don't want to get the entire message. Hopefully, there is a way of doing this without splitting the error message string.
[23:08:04] <ljharb> crised: `err.code`?
[23:08:12] <ljharb> crised: have you tried logging `err` and seeing what's on it
[23:08:18] *** wahpanda is now known as Room-Wah
[23:08:29] *** Room-Wah is now known as wahpanda
[23:08:58] <Swayze> ljharb: not a single screenshot to be found :/
[23:09:52] *** Joins: dante443 (~dante443@99-88-166-99.lightspeed.milwwi.sbcglobal.net)
[23:11:25] *** Joins: OnkelTem (~OnkelTem@user/onkeltem)
[23:12:40] <OnkelTem> Hi. I came to complain
[23:13:58] <OnkelTem> This is not on javascript, it's about OpenAPI. I just hope that maybe some of you guys use it for your js projects.
[23:14:20] <OnkelTem> I wonder is there a way to express that all properties of all objects in API spec ARE required?
[23:14:47] <ljharb> i'm sure some people that use it might be in every channel, doesn't make it on topic :-)
[23:15:11] <OnkelTem> right. Maybe on #linux too
[23:16:25] <Swayze> 21:46 [libera] -alis(alis@services.libera.chat)- #openapi
[23:16:35] <Swayze> so OnkelTem i type /msg alis list openapi
[23:16:37] <Swayze> and it tells me that
[23:16:41] <Swayze> check it out perhaps
[23:17:51] *** Joins: `2jt (~jtomas@10.red-83-58-228.dynamicip.rima-tde.net)
[23:18:11] *** Joins: wroathe (~wroathe@206-55-188-8.fttp.usinternet.com)
[23:18:11] *** Quits: wroathe (~wroathe@206-55-188-8.fttp.usinternet.com) (Changing host)
[23:18:11] *** Joins: wroathe (~wroathe@user/wroathe)
[23:18:21] <sheetjs> is there an attribute for HTML IMG tags that hides the image in screen readers?
[23:18:35] <sheetjs> not merely an empty alt text
[23:19:20] <Swayze> have u tried #html
[23:19:20] <OnkelTem> Swayze: I know that channel, there are as many three people there. Most likely they will help!
[23:19:30] <Swayze> lol ok OnkelTem
[23:20:01] <OnkelTem> yeah. #swagger was a little better on #freenode, dunno how it's now
[23:20:16] <sheetjs> hmm actually aria-hidden="true" feels like the equivalent concept
[23:20:27] *** Quits: robertmaxrees (~robert0@c-76-114-62-229.hsd1.ca.comcast.net) ()
[23:20:35] <OnkelTem> Some people say that TS is JS that we deserved. But I think it's not true. I love TS. But OpenAPI...
[23:20:46] <sheetjs> Excel has a feature "Mark as decorative" which is defined as "Content marked as decorative will not expose a description to screen readers"
[23:20:51] <OnkelTem> seems to be that thing, what we deserved
[23:21:02] <`2jt> Hi, it should be that URLs can only have certain characters from the standard 128 character ASCII set, however I can enter a url such as: example.com?param=hello+world and then retrieve the param in javasript. So + did not have to encoded to work.
[23:21:03] <OnkelTem> An API on YAML. What can be "better?
[23:21:15] <sheetjs> does that sound closer to the aria role "presentation" or to aria hidden?
[23:22:51] <Swayze> monologue central i guess
[23:23:01] *** Joins: banana_ (~banana_@user/banana/x-2944094)
[23:23:25] <evulish> can you hear me now?
[23:23:31] <banana_> yeah
[23:23:33] <sheetjs> evulish: no
[23:23:46] <banana_> you you read sign language
[23:24:02] <banana_> or text
[23:24:09] <banana_> *can you
[23:24:13] <evulish> what's the mode i'm looking for to see if i can talk? +Z?
[23:25:02] <banana_> @evulish what if someone replies to your message
[23:25:11] <banana_> would that confirm anything?
[23:25:18] <evulish> it could just be coincidence
[23:25:29] <banana_> lol
[23:25:39] <banana_> like I'm talking to myself and not really talking to you
[23:25:47] <ljharb> evulish: you can `/whois` yourself, and see if you're authed
[23:25:59] <banana_> see I was just about to say ask ljharb
[23:26:21] <sheetjs> does libera allow unregistered users to message?
[23:26:36] <Swayze> its a user mode setting
[23:26:38] <Swayze> always has been
[23:26:46] <evulish> i'm pretty sure i had cert authentication set up with nickserv so i dunno why i lose auth sometimes
[23:26:52] <Swayze> you can decide if you dont want msgs from unreg users or not
[23:26:53] <evulish> maybe it expired or something
[23:27:36] <ljharb> sheetjs: by default yes
[23:27:42] <ljharb> sheetjs: but this and the node channels don't
[23:28:19] <evulish> i'm surprised i haven't been spam bombed on libera yet i don't think
[23:28:25] *** Quits: dalek-caan (~Thunderbi@109.252.124.86) (Quit: dalek-caan)
[23:32:13] *** Quits: Booster2ooo (~Booster2o@user/booster2ooo) (Read error: Connection reset by peer)
[23:32:42] *** Quits: onosendi (~onosendi@user/onosendi) (Ping timeout: 256 seconds)
[23:32:46] *** Joins: robertmaxrees (~robert0@c-76-114-62-229.hsd1.ca.comcast.net)
[23:40:19] *** Joins: onosendi (~onosendi@user/onosendi)
[23:48:25] *** Quits: wroathe (~wroathe@user/wroathe) (Ping timeout: 256 seconds)
[23:49:03] *** Joins: sickdyd (~sickd@120.51.82.69.ap.gmobb-fix.jp)
[23:49:04] *** Quits: jonifen (~jonifen@user/jonifen) (Quit: Bye everyone)
[23:49:17] *** Joins: jonifen (~jonifen@user/jonifen)
[23:50:05] *** Joins: teut (~teut@2401:4900:1c68:6b85:dd24:2947:a394:79e4)
[23:51:48] *** Quits: dpuerto (~dpuerto@136-27-83-52.cab.webpass.net) (Remote host closed the connection)
[23:51:58] *** lockdown_ is now known as lockdown
[23:52:08] *** Joins: whatsupdoc (uid509081@id-509081.hampstead.irccloud.com)
[23:52:39] *** Quits: zacts (~zacts@user/zacts) (Ping timeout: 250 seconds)
[23:52:58] *** Joins: dpuerto (~dpuerto@136-27-83-52.cab.webpass.net)
[23:54:48] *** Quits: sickdyd (~sickd@120.51.82.69.ap.gmobb-fix.jp) (Ping timeout: 256 seconds)
[23:56:05] *** Joins: wroathe (~wroathe@206-55-188-8.fttp.usinternet.com)
[23:56:05] *** Quits: wroathe (~wroathe@206-55-188-8.fttp.usinternet.com) (Changing host)
[23:56:05] *** Joins: wroathe (~wroathe@user/wroathe)
[23:57:38] *** Quits: dpuerto (~dpuerto@136-27-83-52.cab.webpass.net) (Ping timeout: 256 seconds)
