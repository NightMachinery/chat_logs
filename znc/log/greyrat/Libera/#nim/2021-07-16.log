[00:22:08] <FromDiscord> <iffy (Matt Haggard)> How do I build choosenim on Windows so I can test some changes to choosenim? I'm getting `pkg.version in data` LibArchive v3.4.3 not found as the current error while doing `nimble build`
[00:36:02] *** Quits: neceve (~quassel@2a02:c7f:607e:d600:f762:20dd:304e:4b1f) (Ping timeout: 250 seconds)
[00:57:45] <FromDiscord> <dom96> @iffy sadly last time I tried I haven't even been able to build it :/
[00:58:02] <FromDiscord> <dom96> best point of call is the CI, I'll likely end up gutting the libarchive out of there though eventually
[01:00:05] <FromDiscord> <iffy (Matt Haggard)> oh rats \:) k, I'll figure something out. I'm running into this issue again and trying to figure out what's going on\: [dom96/choosenim#251](https://github.com/dom96/choosenim/issues/251)
[01:00:18] <FromDiscord> <iffy (Matt Haggard)> @\_discord\_132595483838251008\:t2bot.io ^
[01:13:21] <fn> <11ForumUpdaterBot99> New question by SLWW: Using Nim to generate a DLL for use in C#/VB6, see https://stackoverflow.com/questions/68400536/using-nim-to-generate-a-dll-for-use-in-c-vb6
[01:19:52] <FromDiscord> <Ayy Lmao> Is there some way other than `echo` to print messages for debugging purposes? I've purposefully used `proc` instead of `func` for everything since `echo` apparently causes side effects.
[01:20:44] <FromDiscord> <Hi02Hi> `system.debugEcho`
[01:21:29] <FromDiscord> <Ayy Lmao> Ah cool, thanks!
[01:27:05] *** Quits: max22- (~maxime@2a01cb0883359800d17eb309a6e03d03.ipv6.abo.wanadoo.fr) (Remote host closed the connection)
[01:27:23] *** Joins: max22- (~maxime@2a01cb088335980057358503736eb2f5.ipv6.abo.wanadoo.fr)
[01:31:07] <FromDiscord> <dom96> @iffy: thanks for looking into it 🙂
[01:36:36] <FromDiscord> <iffy (Matt Haggard)> @dom96 for sure! At this point, I can't do much looking without being to build a custom choosenim. I submitted an untested PR that adds more debugging output to perhaps shed light going forward
[01:42:47] <FromDiscord> <dom96> oh we only have travis there :/
[01:45:27] <FromDiscord> <System64 ~ Flandre Scarlet> when I interop with C source code do I need the header file too?
[02:18:59] *** Quits: max22- (~maxime@2a01cb088335980057358503736eb2f5.ipv6.abo.wanadoo.fr) (Quit: Leaving)
[02:27:59] *** Quits: Lord_Nightmare (Lord_Night@user/lord-nightmare/x-3657113) (Quit: ZNC - http://znc.in)
[02:32:12] *** Joins: Lord_Nightmare (Lord_Night@user/lord-nightmare/x-3657113)
[02:32:51] <FromDiscord> <Ayy Lmao> In reply to @System64 "when I interop with": I believe so, I think the FFI code you do in Nim is just so Nim can check your work
[02:34:12] <FromDiscord> <Ayy Lmao> I could be wrong though, I haven't gotten too deep into FFI yet
[02:52:54] <FromDiscord> <exelotl> You don't usually need the header, unless it has `inline` functions and funky preprocessor macros that you want to use as-is from Nim.
[02:52:57] <FromDiscord> <System64 ~ Flandre Scarlet> I should try tomorrow
[02:53:27] <FromDiscord> <System64 ~ Flandre Scarlet> wait let me send what I want to interop with
[02:53:52] <FromDiscord> <System64 ~ Flandre Scarlet> https://github.com/dmitrysmagin/a2t_play↵That
[02:57:27] *** Quits: Vladar (~Vladar@46.162.2.53) (Quit: Leaving)
[03:08:11] *** Quits: mst (~matthewt@vps-6c71e929.vps.ovh.net) (Ping timeout: 258 seconds)
[03:08:53] *** Joins: mst (~matthewt@vps-6c71e929.vps.ovh.net)
[03:17:31] <FromDiscord> <exelotl> @System64 ~ Flandre Scarlet ah right my bad, I guess the headers are necessary because the C code #includes it
[03:18:47] <FromDiscord> <exelotl> if you had a precompiled version of the library (static lib, DLL or similar) then you wouldn't need the headers, because they just have simple function declarations and some integer #defines - once you translate that to Nim, the header becomes redundant, as the Nim module has all the same declarations
[03:21:18] <FromDiscord> <exelotl> but for this kind of library I guess it's best to keep the source with the .h and .c files, and use the {.compile.} pragma to ensure the C files get compiled and linked into your project
[04:34:38] <FromDiscord> <ajusa> Are there any fast lock free queue implementations in Nim? I think there is the new std/channels and a package called lockfreequeues, are those recommended?
[05:09:47] <FromDiscord> <Hi02Hi> I'm not an expert, but I think there are different considerations for a multithreaded queue. For example, if you can guarantee only 1 thread will dequeue, you can also garuntee there will never be worries there. The terminology is Multiple Producers, Single Consumer (MPSC). Similarly, there are SCMP, MPMP, and SPSC (the single threaded queue).
[05:16:21] <FromDiscord> <ajusa> Hm yeah, what I'd be looking for is a SPSC queue then
[06:48:56] *** Quits: aeverr (~deodex@ai126162145141.56.access-internet.ne.jp) (Ping timeout: 255 seconds)
[07:06:07] <fn> <11ForumUpdaterBot99> New thread by Geohuz: How can I run a procedure with specified time interval, see https://forum.nim-lang.org/t/8235
[07:23:46] *** Joins: pro1 (~pro@user/pro)
[07:26:56] *** Quits: pro (~pro@user/pro) (Ping timeout: 272 seconds)
[07:38:31] <FromDiscord> <Ænigma> `"nim c -o:'game.exe' --out:'bin' -r"` I feel like a derp, what am I doing wrong? xD
[07:40:19] <FromDiscord> <ElegantBeef> not giving a file to compiler
[07:40:22] <FromDiscord> <ElegantBeef> (edit) "compiler" => "compile"
[07:42:19] <FromDiscord> <Ænigma> Hah! Derping for sure, I got it working, but it's ignoring the --out flag
[07:42:43] <FromDiscord> <ElegantBeef> `-o` is the same as `--out`
[07:42:49] <FromDiscord> <ElegantBeef> you want `--outDir`
[07:44:54] <FromDiscord> <Ænigma> Oh thanks, that worked 🙂
[08:13:52] *** Quits: arkurious (~arkurious@user/arkurious) (Quit: Leaving)
[08:18:50] <FromDiscord> <Ænigma> Could someone tell me what I'm doing wrong? 😦 https://media.discordapp.net/attachments/371759389889003532/865439809505984542/Screenshot_2.png
[08:21:13] <FromDiscord> <ElegantBeef> ~~Aside from writing nim like it's python~~ 😛↵What's in component.nim
[08:21:23] <FromDiscord> <ElegantBeef> I feel like you didnt do `Component`
[08:21:48] *** Quits: rockcavera (~rc@user/rockcavera) (Remote host closed the connection)
[08:22:15] <FromDiscord> <Ænigma> Haha. And yeah actually I think you're right. I derped.
[08:22:24] <FromDiscord> <Ænigma> I haven't been awake very long. e.e
[08:22:54] <FromDiscord> <Ænigma> I'm porting a prototype I was working on with Ruby and Gosu over to Nim.
[08:23:09] <FromDiscord> <Ænigma> Decided I didn't like Ruby.
[08:24:09] <FromDiscord> <ElegantBeef> Also you have a folder named ECS but are making an EC setup 😛
[08:25:39] <FromDiscord> <Ænigma> How so? Entities will contain components, components contain data, systems will process the entities depending on their components?
[08:25:43] <FromDiscord> <Ænigma> Though granted I am new to the ECS idea.
[08:26:25] <FromDiscord> <ElegantBeef> Well you're using inheritance which makes ECS less useful
[08:26:50] <FromDiscord> <ElegantBeef> One big benefit of ECS is that components are cache aligned
[08:27:23] <FromDiscord> <Ænigma> Hmm..how else would I store all my components in a single list/array/whatever without polymorphism? :Thonk:
[08:27:39] <FromDiscord> <ElegantBeef> Polymorph and similar ECS libraries do as such
[08:28:45] <FromDiscord> <Ænigma> So what would you recommend doing besides inheritance then?
[08:28:59] <FromDiscord> <ElegantBeef> Basically if you know the stride of an entity in a list you can rather easily fetch components based off that
[08:29:10] <FromDiscord> <ElegantBeef> Well if you want ECS i'd suggest polymorph
[08:29:46] <FromDiscord> <ElegantBeef> If you want your own ECS(that's designed to benefit from ECS) i'd suggest the PDF from flecs
[08:30:00] <FromDiscord> <ElegantBeef> If you dont care if it's designed to benefit from the ECS process carry on as is
[08:30:40] <FromDiscord> <Ænigma> Hmm..at this point I'm trying to learn. I suppose some more batteries included would help, but I also kind of wanted to do it myself even if it was terrible. 😄
[08:30:56] <FromDiscord> <Ænigma> I mean I'm not new to gamedev just new to some of these newer ideas like ECS and Nim itself.
[08:31:07] <FromDiscord> <ElegantBeef> Well https://github.com/SanderMertens/flecs_not_for_dummies/blob/master/flecs_not_for_dummies.pdf is a good resource
[08:31:54] <FromDiscord> <Ænigma> By the way, I also noticed that Nim can compile for Nintendo Switch? Would something like Nico work with that? I'm assuming the raylib bindings don't.
[08:32:10] <FromDiscord> <ElegantBeef> If sdl2 works with the switch yea probably
[08:32:29] <FromDiscord> <ElegantBeef> I dont have a switch devkit so cannot say anything about what works there(and even if i could i couldnt :P)
[08:32:40] <FromDiscord> <Ænigma> Yeah, true. I don't have one either.
[08:33:02] <FromDiscord> <Ænigma> But I'm getting serious about gamedev and nintedo switch is my goal. I've released 2 games now with countless failed ones.
[08:33:45] <FromDiscord> <ElegantBeef> Countless failed ones is just gamedev
[08:34:12] <FromDiscord> <Ænigma> Yeah, been a long time though.
[08:34:33] <FromDiscord> <Ænigma> Probably 10 years. But I finally said screw this I'm gonna make something and finish it, and that was December and Feburary.
[08:34:42] <FromDiscord> <Ænigma> I finished them I mean.
[08:34:51] <FromDiscord> <ElegantBeef> Also unless you really like/need the ECS paradigm there isnt really any purpose in using it
[08:36:02] *** Quits: supakeen (~user@python/site-packages/supakeen) (Quit: WeeChat 3.2)
[08:36:37] *** Joins: supakeen (~user@python/site-packages/supakeen)
[08:36:54] <FromDiscord> <ElegantBeef> Also there are many ECS implementations you could look at for reference on how to avoid using polymorphism https://github.com/search?q=language%3Anim+ecs
[08:38:49] <FromDiscord> <Ænigma> Looks like generics or something.
[08:38:57] <FromDiscord> <Ænigma> That's a programming concept I don't really know. 😄
[08:41:03] <FromDiscord> <Ænigma> `proc addComponent[T](w: World, eid: EntityId, component: T) =`
[08:43:24] <FromDiscord> <Ænigma> I think I'll forego the ECS paradigm for now.
[08:45:52] <FromDiscord> <ElegantBeef> sorry to dissuade you
[08:46:50] <FromDiscord> <ElegantBeef> Worth noting that this is basically what you were going to end up with https://github.com/enthus1ast/ecs/blob/master/src/ecs.nim
[08:47:00] <FromDiscord> <ElegantBeef> Not very cache efficient due to using ref objects
[09:31:56] <fn> <11ForumUpdaterBot99> New Nimble package! latinize - Convert accents (diacritics) from strings to latin characters., see https://github.com/AmanoTeam/Latinize
[09:31:57] <fn> <12R2D299> 4GitHub: 7"Latinize is a library and CLI tool written in Nim, it's indeed to convert accents (diacritics) from strings to latin characters."
[09:39:23] <FromDiscord> <Ænigma> @ElegantBeef WHat's the difference between `thing = object` and `thing = ref object of RootObj`
[09:40:40] <FromDiscord> <ElegantBeef> `ref` is a managed pointer, so it's a ref allocated object instead of stack allocated
[09:41:04] <FromDiscord> <Ænigma> Why would you want an object to be a pointer? :Thonk:
[09:41:14] <FromDiscord> <Ænigma> I mean I know Rust and C++ so I know what a pointer is.
[09:41:20] <FromDiscord> <Ænigma> I just don't understand the practical use.
[09:41:29] <FromDiscord> <ElegantBeef> Reference semantics
[09:41:40] <FromDiscord> <ElegantBeef> So oop like C#/Java
[09:42:06] <FromDiscord> <Ænigma> Oh so if you pass it, it passes the reference, and doesn't copy?
[09:42:31] <FromDiscord> <ElegantBeef> Well nim does do pass by reference for large objects as an optimization, but it's not something you need to worry about
[09:42:48] <FromDiscord> <Ænigma> Okay then so basically I don't understand. xD
[09:42:53] <FromDiscord> <ElegantBeef> Lol
[09:43:10] <FromDiscord> <Ænigma> I guess I should ask
[09:43:12] <FromDiscord> <Ænigma> WHen should I do which
[09:45:55] <FromDiscord> <ElegantBeef> Well references are useful for when you have an object that references a the same object, like a tree or linked list
[09:46:19] <FromDiscord> <Ænigma> Okay so basically it's just a reference then.
[09:46:23] <FromDiscord> <ElegantBeef> Nim's references are just managed pointers
[09:46:23] <FromDiscord> <Ænigma> So...
[09:46:30] <FromDiscord> <Ænigma> That means there can only be 1 of them?
[09:46:33] <FromDiscord> <Ænigma> Of that type
[09:46:34] <FromDiscord> <Ænigma> ?
[09:46:41] <FromDiscord> <ElegantBeef> No?
[09:46:44] <FromDiscord> <Ænigma> :Thonk:
[09:47:11] <FromDiscord> <Ænigma> I guess what I'm not understanding is, what is the point, can you not take a `thing = object` and do something like `doAThing(&thing)`?
[09:47:29] <FromDiscord> <ElegantBeef> I dont know what `&thing` does
[09:47:35] <FromDiscord> <Ænigma> In C++ that's a reference.
[09:48:28] <FromDiscord> <ElegantBeef> That's a reference to `thing`?
[09:48:32] <FromDiscord> <Ænigma> Yes
[09:48:37] <FromDiscord> <Ænigma> So I guess mabe in nim it wouldbe like
[09:48:45] <FromDiscord> <Ænigma> `doAThing(ref thing)`?
[09:48:50] <FromDiscord> <ElegantBeef> Well you can do that with pointers in Nim, but you cannot make a stack allocated object a `ref` magically
[09:49:04] <FromDiscord> <ElegantBeef> References in nim are managed which means they work with the GC
[09:49:12] <FromDiscord> <Ænigma> So..
[09:49:27] <FromDiscord> <Ænigma> Okay I think I get it.
[09:49:40] <FromDiscord> <ElegantBeef> So you cannot create a reference like that you'd either use `.addr` or have the `proc doThing(a: var Thing)`
[09:50:21] <FromDiscord> <Ænigma> Okay.
[09:50:26] <FromDiscord> <Ænigma> Now I'm actually wondering the opposite.
[09:50:33] <FromDiscord> <Ænigma> Why you would want to do `thing = object`
[09:50:34] <FromDiscord> <Ænigma> xD
[09:50:50] <FromDiscord> <ElegantBeef> Cause you dont often need heap allocated objects
[09:50:58] <FromDiscord> <ElegantBeef> If you dont need references you dont use them
[09:51:29] <FromDiscord> <Ænigma> But if I do need a reference, I can just do `thing.addr`?
[09:51:33] <FromDiscord> <ElegantBeef> no
[09:51:35] <FromDiscord> <Ænigma> o.o
[09:51:37] <FromDiscord> <ElegantBeef> that's for a pointer
[09:51:47] <FromDiscord> <Ænigma> :Thonk:
[09:51:56] <FromDiscord> <Ænigma> Oh wait
[09:52:05] <FromDiscord> <Ænigma> THat's to dereference the pointer
[09:52:14] <FromDiscord> <Ænigma> ?
[09:52:27] <FromDiscord> <ElegantBeef> Nim has `ptr T` `pointer` and `ref`s the first two are unmanaged pointers, and the latter is a managed one
[09:52:35] <FromDiscord> <ElegantBeef> No nim's dereference operator is `[]`
[09:52:41] <FromDiscord> <ElegantBeef> `.addr` gets a `ptr T`
[09:53:03] <FromDiscord> <Ænigma> Okay so basicaly what you're saying is
[09:53:56] <FromDiscord> <Ænigma> If I do the ref of RootObj I can just pass the thing around and always reference the same thing in memory, but if I do the other thing I have to use managed pointers if I want to pass it by reference like in C++ I hafta keep track of it?
[09:54:09] <FromDiscord> <ElegantBeef> Nope
[09:54:26] <FromDiscord> <ElegantBeef> Nim has `var T` for proc parameters which lets you pass as a reference
[09:54:37] <FromDiscord> <ElegantBeef> It's a mutable reference
[09:54:40] <FromDiscord> <Ænigma> Ah
[09:55:13] <FromDiscord> <Ænigma> Okay I think I get it.
[09:55:17] <FromDiscord> <Ænigma> Maybe.
[09:55:18] <FromDiscord> <Ænigma> xD
[09:55:41] <FromDiscord> <ElegantBeef> sent a code paste, see https://play.nim-lang.org/#ix=3t8m
[09:56:31] <FromDiscord> <Ænigma> Wait
[09:56:33] <FromDiscord> <Ænigma> Is that a method?
[09:56:43] <FromDiscord> <Ænigma> I haven't found those yet in the manual.
[09:56:51] <FromDiscord> <ElegantBeef> Nim has UFCS so procs can be used like a method or like C style
[09:56:56] <FromDiscord> <Ænigma> That's whats up
[09:57:11] <FromDiscord> <ElegantBeef> `proc` and `func` are statically dispatched, and `method` is dynamically dispatched
[09:57:35] <FromDiscord> <Ænigma> I have no idea waht that means.
[09:57:50] <FromDiscord> <ElegantBeef> It means there is no runtime logic to decide what procedure to call
[09:58:03] <FromDiscord> <Ænigma> I guess I should clarify I'm not really a programmer, I'm a game developer, most of the computer science stuff goes over my head xD
[09:58:27] <FromDiscord> <Ænigma> That kind of makes sense.
[09:58:43] <FromDiscord> <ElegantBeef> `new T` makes a reference of T
[09:58:44] <FromDiscord> <ElegantBeef> sent a code paste, see https://play.nim-lang.org/#ix=3t8n
[09:58:53] <FromDiscord> <ElegantBeef> Yea i'm a game dev as well
[09:59:30] <FromDiscord> <Ænigma> Ah yeah okay.
[10:00:47] <FromDiscord> <Ænigma> I actually dropped C++ and Rust because it was a little too complex for my liking. I guess rather C++ wasn't that complex really overall (aside from the metaprogramming black magic) but it's just I prefer to google or ask in discord how to do something, and I don't know if what I'm googling is the right answer when there's like 30x different ways to do something because of all the legacy, and most c++ people I've met in discord are elist 
[10:00:58] <FromDiscord> <Ænigma> (edit) "elist" => "elitist"
[10:02:50] <FromDiscord> <linux user> is execCmd() depened on shell??
[10:08:59] <FromDiscord> <Rika> By default yes
[10:09:08] <FromDiscord> <Rika> (AFAIK)
[10:09:21] <FromDiscord> <Rika> In reply to @Ænigma "I actually dropped C++": Why did you drop rust though?
[10:09:28] <FromDiscord> <linux user> does it open a new shell or the existing?
[10:09:40] <FromDiscord> <Rika> I can see how some C++ programmers can be asshats
[10:09:53] <FromDiscord> <linux user> so you sure it will work in windoze?
[10:10:02] <FromDiscord> <Rika> In reply to @richard stallmen(crazy GNU guy) "does it open a": Not a detail I know (it probably opens a new one?), better off reading the code
[10:10:11] <FromDiscord> <Rika> Rather
[10:10:35] <FromDiscord> <Rika> Okay I don’t really know the details
[10:10:37] <FromDiscord> <linux user> i used execProcess , but the process cant use stdin
[10:10:39] <FromDiscord> <Rika> Best to read the code
[10:10:43] <FromDiscord> <Rika> Ah
[10:10:45] <FromDiscord> <linux user> ok
[10:11:10] <FromDiscord> <Rika> That’s because the in and out of the process is separate from the main ones
[10:11:28] <FromDiscord> <linux user>  https://media.discordapp.net/attachments/371759389889003532/865468151755177994/Screenshot_2021-07-16-11-11-19.jpeg
[10:11:35] <FromDiscord> <linux user> smol
[10:12:40] <FromDiscord> <Rika> I mean read the code of the exec command proc
[10:12:43] <FromDiscord> <Ænigma> In reply to @Rika "Why did you drop": Because it was a little too Verbose for my liking, and there it seemed the more deeer I dove into gamedev with it the more I had to learn or there was always a "gotcha" moment and I would just drop it.
[10:12:44] <FromDiscord> <ElegantBeef> osproc has the abillity to share streams
[10:12:55] <FromDiscord> <Rika> In reply to @Ænigma "Because it was a": I see
[10:13:28] <FromDiscord> <Rika> I’m not very confident that Nim would be as easy as you think it is
[10:15:37] <FromDiscord> <ElegantBeef> Uh oh bung is typing, i was never here
[10:15:37] <FromDiscord> <Bung> In reply to @richard stallmen(crazy GNU guy) "": exec apis means run and exit , for osproc module you need startProcess
[10:15:56] <FromDiscord> <Bung> dont worry , not the nimscripter thing haha
[10:16:08] <FromDiscord> <haxscramper> With poUserParentStreams flag enabled
[10:16:23] <FromDiscord> <haxscramper> I think it is called this way
[10:16:29] <FromDiscord> <haxscramper> [Edit](https://discord.com/channels/371759389889003530/371759389889003532/865469331747504149): With poUseParentStreams flag enabled
[10:17:23] <FromDiscord> <Bung> you can also use https://github.com/cheatfate/asynctools
[10:17:26] <fn> <12R2D299> 4GitHub: 7"Various asynchronous tools for Nim language"
[10:17:50] <FromDiscord> <generic linux user> In reply to @Bung "exec* apis means run": i was asking about passing stdin options, mpv reads from stdin for example p for pause...
[10:18:57] <FromDiscord> <Bung> oh that should do as hax just described
[10:19:10] *** Quits: beshr (~beshr@user/beshr) (Remote host closed the connection)
[10:23:01] <FromDiscord> <generic linux user> yes mate
[10:26:14] <FromDiscord> <generic linux user> sent a code paste, see https://paste.rs/k50
[10:28:08] <FromDiscord> <Rika> Prolly needs osprocs?
[10:28:19] <FromDiscord> <ElegantBeef> `poUseParentStreams`
[10:30:43] <FromDiscord> <generic linux user> oops
[10:31:33] <FromDiscord> <generic linux user> it coming again, but did you guys meant startProcess() or execProcess()?
[10:35:08] <FromDiscord> <generic linux user>  https://media.discordapp.net/attachments/371759389889003532/865474107133657094/Screenshot_2021-07-16-11-34-59.jpeg
[10:35:14] <FromDiscord> <generic linux user> bruhbruhbruhbruh
[10:36:39] <FromDiscord> <Bung> that depends whether you need intergrate with the sub process
[10:39:02] <FromDiscord> <generic linux user> sent a code paste, see https://play.nim-lang.org/#ix=3t8A
[10:39:13] <FromDiscord> <generic linux user> it sends the process to bwckground and exits
[10:45:45] <FromDiscord> <haxscramper> You either fully share processes or use existing ones
[10:46:04] <FromDiscord> <haxscramper> You can also pipe data to process's stdin in loop
[10:46:49] <FromDiscord> <haxscramper> `process.inputStream().write(stdin.readLine())`
[10:57:36] <FromDiscord> <generic linux user> how do i know what the process is then
[10:57:56] <FromDiscord> <generic linux user> i typed PLAYER , it says error  returns string ,
[10:58:10] <FromDiscord> <Rika> What do you mean? You store the process in a variable how would you lose it
[10:58:52] <FromDiscord> <generic linux user> sorry i discarded it
[11:03:57] <FromDiscord> <generic linux user> sent a code paste, see https://play.nim-lang.org/#ix=3t8I
[11:04:05] <FromDiscord> <generic linux user> (edit) 
[11:04:11] <FromDiscord> <generic linux user> (edit) 
[11:04:26] *** Joins: PMunch (~PMunch@178.74.36.198)
[11:04:43] <FromDiscord> <Rika> So does it work
[11:05:49] <FromDiscord> <generic linux user> nope
[11:06:11] <FromDiscord> <generic linux user> sent a code paste, see https://play.nim-lang.org/#ix=3t8J
[11:06:42] <FromDiscord> <generic linux user> why did i name it brr
[11:06:46] <FromDiscord> <generic linux user> 😳
[11:06:50] <FromDiscord> <generic linux user> (edit) "https://play.nim-lang.org/#ix=3t8J" => "https://play.nim-lang.org/#ix=3t8K"
[11:07:08] <FromDiscord> <Rika> Eeh tainted string means you have taint mode on?
[11:07:36] <FromDiscord> <Rika> Wait why is it a different value name?
[11:07:42] <FromDiscord> <Rika> I mean variable name
[11:09:47] <FromDiscord> <generic linux user> i didnt turn it on tho
[11:12:40] <FromDiscord> <ElegantBeef> Exec process doesnt return the process it returns a string
[11:13:01] <FromDiscord> <ElegantBeef> > A convenience procedure that executes command with startProcess and returns its output as a string.
[11:14:19] <FromDiscord> <generic linux user> startProcess
[11:16:11] <FromDiscord> <generic linux user> confilcts upon stream and file
[11:20:15] *** Joins: max22- (~maxime@2a01cb08833598007e610c9fca351148.ipv6.abo.wanadoo.fr)
[11:22:41] *** pro1 is now known as pro
[11:24:17] <FromDiscord> <generic linux user> seems i cant skip using shell↵https://github.com/nim-lang/Nim/issues/8153
[11:32:02] <FromDiscord> <generic linux user> sent a code paste, see https://play.nim-lang.org/#ix=3t8W
[11:32:08] <FromDiscord> <generic linux user> works just like execCmd , a bit sus
[11:40:25] *** Joins: neceve (~quassel@2a02:c7f:607e:d600:f762:20dd:304e:4b1f)
[12:01:53] <FromDiscord> <enthus1ast> @generic linux user\:  btw mpv is every easy to embden, and the nim wrapper is good
[12:02:25] <FromDiscord> <generic linux user> there is?
[12:03:00] <FromDiscord> <enthus1ast> https://github.com/daniel-j/nim-mpv
[12:03:02] <fn> <12R2D299> 4GitHub: 7"Nim bindings for libmpv using Nimterop"
[12:03:59] <FromDiscord> <enthus1ast> And there I use it\: https://github.com/enthus1ast/muk
[12:04:01] <fn> <12R2D299> 4GitHub: 7"crossplattform terminal music player. Inspired by moc and mpd."
[12:05:51] <FromDiscord> <generic linux user> yepp, linker errors
[12:06:13] <FromDiscord> <enthus1ast> Sure you must link to libmpv ;)
[12:06:26] <FromDiscord> <enthus1ast> And download it for your os
[12:06:46] <FromDiscord> <enthus1ast> If on linux it should find it, though
[12:08:18] <FromDiscord> <enthus1ast> https://github.com/enthus1ast/muk/blob/master/src/muk.nims
[12:14:48] <FromDiscord> <generic linux user> i tried -lmpv tho
[12:14:49] <FromDiscord> <willyboar> I like illwill a lot. I was checked it a couple of months ago to build a tui static site generator
[12:16:09] <FromDiscord> <enthus1ast> Have the libmpv library next to your executable?↵(@generic linux user)
[12:16:25] <FromDiscord> <generic linux user> libmpv.a?
[12:16:31] <FromDiscord> <generic linux user> or the header files?
[12:16:46] <FromDiscord> <enthus1ast> Libmpv.a
[12:17:49] <FromDiscord> <enthus1ast> Or help the c compiler find it by -L
[12:18:33] <FromDiscord> <generic linux user> oki
[12:19:27] <FromDiscord> <generic linux user>  https://media.discordapp.net/attachments/371759389889003532/865500358859554827/Screenshot_2021-07-16-13-19-16.jpeg
[12:20:18] <FromDiscord> <generic linux user> -lmpv
[12:20:24] <FromDiscord> <enthus1ast> Illwill misses the unicode support, I've a half finished prototype lying around but it's not yet usable, so only really usable for english input↵(@willyboar)
[12:26:32] <FromDiscord> <enthus1ast> Have not tested muk with clang, so you yound a dragon \:)↵(@generic linux user)
[12:27:45] <FromDiscord> <enthus1ast> But muk is a complex example. When you just want to embed mpv for playing and controlling video, then I would use a simpler example
[12:29:02] <FromDiscord> <enthus1ast> https://github.com/daniel-j/nim-mpv/blob/master/examples/simple.nim
[12:30:08] *** Quits: Schnouki (~schnouki@user/schnouki) (Ping timeout: 252 seconds)
[12:31:55] *** Joins: Schnouki (~schnouki@user/schnouki)
[12:39:50] <FromDiscord> <Bung> @ElegantBeef the rest part you get idea in your mind ?
[12:42:46] <FromDiscord> <ElegantBeef> I actually dont know how to do the Nim -> nimscript part atm, since i assume i need to make an object with all the proper symbols
[12:45:48] <FromDiscord> <Bung> variable -> pnode -> string -> pnode does not work?
[12:45:48] <FromDiscord> <haxscramper> Is this still about nimscripter?
[12:46:08] <FromDiscord> <haxscramper> I can write more robust POC implementation, but it would rely on hnimast
[12:46:18] <FromDiscord> <haxscramper> For passing data around
[12:46:29] <FromDiscord> <Bung> yeah, beef done some nims -> nim part
[12:47:01] <FromDiscord> <Bung> nim -> nims part havn't yet, so I can't pass variable to nims proc
[12:47:13] <FromDiscord> <generic linux user> Thanks guys, seems to work
[12:48:09] <FromDiscord> <generic linux user> In reply to @enthus1ast "https://github.com/daniel-j/nim-mpv/blob/master/exa": since i qm developing in termux , and in thevpast i have tried to compile libmpv.a , it failed↵android is linux , but dies stuff a bit on its own way
[12:48:19] <FromDiscord> <generic linux user> (edit) "dies" => "does"
[12:48:25] <FromDiscord> <generic linux user> (edit) "qm" => "am"
[12:48:30] <FromDiscord> <generic linux user> (edit) "thevpast" => "the past"
[12:49:18] *** Quits: Schnouki (~schnouki@user/schnouki) (Ping timeout: 265 seconds)
[12:50:27] <FromDiscord> <Bung> @haxscramper that would help me and beef out, you can use my forked small repo https://github.com/bung87/nimscripter
[12:50:30] <fn> <12R2D299> 4GitHub: 7"Quick and easy Nim <-> Nimscript interop"
[12:50:40] *** Joins: Vladar (~Vladar@46.162.2.53)
[12:51:14] *** Joins: Schnouki (~schnouki@user/schnouki)
[12:51:14] <FromDiscord> <haxscramper> What I'm mostly asking is - you ok with addition hnimast dependency?
[12:51:26] <FromDiscord> <ElegantBeef> Well it doesnt compile on devel 😄
[12:51:34] <FromDiscord> <ElegantBeef> Forgot to make the issue
[12:52:28] <FromDiscord> <haxscramper> I will look into this
[12:52:57] <FromDiscord> <Bung> guess better strip out nimble
[12:53:30] <FromDiscord> <Bung> since them both use compiler package, depends on compiler package is fine
[12:54:17] <FromDiscord> <Bung> my fork version will also remove compiler package as dependency.
[12:54:51] <FromDiscord> <haxscramper> so much for optional dependnecies
[12:55:14] <FromDiscord> <haxscramper> this garbage is so annoying
[12:55:28] *** Quits: neceve (~quassel@2a02:c7f:607e:d600:f762:20dd:304e:4b1f) (Ping timeout: 246 seconds)
[12:56:05] <FromDiscord> <haxscramper> I will look into that as well
[12:56:54] <FromDiscord> <Bung> you can update your nim version every commit then you will find your package depends on compiler package has much more compatible issue : )
[12:58:33] <FromDiscord> <haxscramper> I don't usually develop against devel
[12:58:48] <FromDiscord> <haxscramper> I have things to do instead of playing catch-up game with moving target
[12:59:10] <FromDiscord> <ElegantBeef> Yea but sadly i have PR in devel that fixes `std/` imports in VM
[12:59:23] <FromDiscord> <haxscramper> They are broken?
[12:59:32] <FromDiscord> <ElegantBeef> They were for me 😄
[13:01:49] <FromDiscord> <haxscramper> Can you link the issue?
[13:02:17] <FromDiscord> <ElegantBeef> No cause that'd involve there being one
[13:03:32] <FromDiscord> <ElegantBeef> https://github.com/nim-lang/Nim/commit/d96469037ecc1ee7982b420cbe6ce34e91d18b01 my PR for it
[13:33:55] *** Quits: pro (~pro@user/pro) (Quit: WeeChat 3.2)
[13:36:51] *** Joins: pro (~pro@user/pro)
[14:04:48] *** Quits: Schnouki (~schnouki@user/schnouki) (Ping timeout: 255 seconds)
[14:04:59] <FromDiscord> <Tuatarian> I have a bit of a weird situation
[14:05:26] <FromDiscord> <Tuatarian> I have been using nim + raylib for a game development project, and for some reason, kaspersky seems to think my binaries are malware?
[14:05:38] <FromDiscord> <Tuatarian> uds winshell exploit or something like that
[14:05:45] <FromDiscord> <Tuatarian> I've been using it for a while, I doubt it's malware
[14:06:03] <FromDiscord> <Tuatarian> and it only seems to complain a few hours after running & closing the binaries
[14:06:05] <FromDiscord> <Tuatarian> which is even stranger
[14:06:07] <FromDiscord> <Tuatarian> any ideas?
[14:06:45] <FromDiscord> <ElegantBeef> Since around Nim 1.4.6(maybe even earlier) is a false positive for a virus by a lot of anti-virus vendors
[14:12:11] <FromDiscord> <enthus1ast> Report it as a false positive
[14:45:52] *** Joins: maxime_ (~maxime@2a01cb088335980076555acacb01bc03.ipv6.abo.wanadoo.fr)
[14:47:15] *** Quits: max22- (~maxime@2a01cb08833598007e610c9fca351148.ipv6.abo.wanadoo.fr) (Ping timeout: 268 seconds)
[14:49:21] *** Quits: maxime_ (~maxime@2a01cb088335980076555acacb01bc03.ipv6.abo.wanadoo.fr) (Remote host closed the connection)
[14:49:44] *** Joins: maxime_ (~maxime@2a01cb08833598006f2f9c748a22d8b7.ipv6.abo.wanadoo.fr)
[14:56:06] *** Quits: pro (~pro@user/pro) (Ping timeout: 255 seconds)
[14:57:44] *** Quits: maxime_ (~maxime@2a01cb08833598006f2f9c748a22d8b7.ipv6.abo.wanadoo.fr) (Ping timeout: 268 seconds)
[15:28:00] <FromDiscord> <JH> what the easiest/best way to remove characters at the end of a string in nim?
[15:30:03] <FromDiscord> <haxscramper> https://nim-lang.org/docs/strutils.html#delete%2Cstring%2Cint%2Cint
[15:34:50] *** Joins: maxime_ (~maxime@2a01cb088335980076555acacb01bc03.ipv6.abo.wanadoo.fr)
[15:42:45] *** Joins: g42x (~g42x@37.165.245.128)
[15:51:29] <FromDiscord> <enthus1ast> also strip() for some usecases\: https://nim-lang.org/docs/strutils.html#strip%2Cstring%2Cset%5Bchar%5D
[15:55:42] <FromDiscord> <JH> perfect! thanks guys
[16:03:56] <arkanoid> what's the advantage of using nlvm instead of clang?
[16:23:25] *** Quits: xet7 (~xet7@user/xet7) (Remote host closed the connection)
[16:24:13] <FromDiscord> <haxscramper> How can I get subtype name at runtime?
[16:24:44] <FromDiscord> <haxscramper> I've seen mentions of `typeinfo` being deprecated with ARC/ORC - is there any solution that would still work
[16:25:24] *** Joins: xet7 (~xet7@user/xet7)
[16:27:46] *** Quits: maxime_ (~maxime@2a01cb088335980076555acacb01bc03.ipv6.abo.wanadoo.fr) (Ping timeout: 268 seconds)
[16:36:02] *** Quits: supakeen (~user@python/site-packages/supakeen) (Quit: WeeChat 3.2)
[16:36:37] *** Joins: supakeen (~user@python/site-packages/supakeen)
[16:37:07] *** Quits: g42x (~g42x@37.165.245.128) (Quit: Client closed)
[16:58:46] *** Joins: g42x (~g42x@37.165.245.128)
[17:13:09] *** Joins: rockcavera (~rc@192.12.112.196)
[17:13:09] *** Quits: rockcavera (~rc@192.12.112.196) (Changing host)
[17:13:09] *** Joins: rockcavera (~rc@user/rockcavera)
[17:19:43] *** Joins: maxime_ (~maxime@2a01cb0883359800a1120e6f150f166c.ipv6.abo.wanadoo.fr)
[17:42:49] *** Joins: Lord_Nightmare2 (Lord_Night@user/lord-nightmare/x-3657113)
[17:44:49] *** Joins: fputs_ (~fputs@137.220.33.212)
[17:48:34] *** Joins: mahlon_ (~mahlon@martini.nu)
[17:48:48] *** Quits: xet7 (~xet7@user/xet7) (*.net *.split)
[17:48:48] *** Quits: Lord_Nightmare (Lord_Night@user/lord-nightmare/x-3657113) (*.net *.split)
[17:48:48] *** Quits: stkrdknmibalz (~test@rrcs-75-87-43-226.sw.biz.rr.com) (*.net *.split)
[17:48:48] *** Quits: fn (~NimBot@ns501209.ip-142-4-210.net) (*.net *.split)
[17:48:49] *** Quits: mahlon (~mahlon@martini.nu) (*.net *.split)
[17:48:49] *** Quits: fputs (~fputs@137.220.33.212) (*.net *.split)
[17:48:49] *** Quits: Amun-Ra (~amun-ra@retro.rocks) (*.net *.split)
[17:48:49] *** Lord_Nightmare2 is now known as Lord_Nightmare
[17:52:44] *** Joins: fn (~NimBot@ns501209.ip-142-4-210.net)
[17:53:57] <FromDiscord> <arnetheduck> In reply to @arkanoid "what's the advantage of": each transformation step is lossy which means missed optimisation opportunities and takes time - `nim -> clang -> llvm -> ...` is a longer, slower and more lossy pipeline than `nlvm -> llvm -> ...` - ie faster and better codegen, but you lose some C FFI capabilities
[17:55:45] <FromDiscord> <arnetheduck> there are things you cannot express in C either - memory and stack layout for the GC, debug information, certain forms of trampolines for callbacks, certain forms of constants etc
[17:55:45] *** Joins: Amun-Ra (~amun-ra@retro.rocks)
[17:56:15] *** Joins: xet7 (~xet7@user/xet7)
[18:10:08] *** Quits: maxime_ (~maxime@2a01cb0883359800a1120e6f150f166c.ipv6.abo.wanadoo.fr) (Ping timeout: 268 seconds)
[18:11:58] *** Joins: arkurious (~arkurious@user/arkurious)
[18:15:58] *** Quits: g42x (~g42x@37.165.245.128) (Quit: Client closed)
[18:54:42] *** Joins: g42x (~g42x@37.165.245.128)
[19:06:46] *** Quits: Vladar (~Vladar@46.162.2.53) (Ping timeout: 252 seconds)
[19:09:46] *** Joins: Vladar (~Vladar@46.162.2.53)
[19:19:27] *** Quits: g42x (~g42x@37.165.245.128) (Quit: Client closed)
[19:20:58] *** Joins: maxime_ (~maxime@2a01cb0883359800e24430043e68c132.ipv6.abo.wanadoo.fr)
[19:22:50] <FromDiscord> <Yinisiki> Please Please... i need help.. I did everything i could do to install nim... but it keeps failing... here are my efforts... i just want to install nim! https://media.discordapp.net/attachments/371759389889003532/865606906533249124/nim.mp4
[19:26:18] <FromDiscord> <juan_carlos> Nim compiler has no GUI, looks installed?, open a terminal window like powershell or cmd.exe and run nim --help
[19:26:43] <FromDiscord> <generic linux user> ofc i have never seen a compiler eith ui
[19:26:49] <FromDiscord> <generic linux user> 👀
[19:27:27] <FromDiscord> <Yinisiki> ya the command ran well
[19:27:38] <FromDiscord> <juan_carlos> Done then, thats nim
[19:27:39] <FromDiscord> <generic linux user> installation ok
[19:27:45] <FromDiscord> <generic linux user> look for nimble
[19:28:07] <FromDiscord> <generic linux user> wait  , if you tyoe nim then it will print the std help
[19:28:12] <FromDiscord> <generic linux user> but try to compile one
[19:28:19] <FromDiscord> <Yinisiki> yes, even nimble command worked
[19:28:20] <FromDiscord> <generic linux user> maybe if the libs arent installed?
[19:28:46] <FromDiscord> <Kermithos> sent a code paste, see https://paste.rs/6aW
[19:31:54] *** Joins: g42x (~g42x@37.165.245.128)
[19:32:04] <FromDiscord> <Yinisiki> just ran it... there is a helloWorld.exe created on my desktop but it closes as soon as i open it https://media.discordapp.net/attachments/371759389889003532/865609232367616020/unknown.png
[19:32:18] <FromDiscord> <Kermithos> In reply to @Yinisiki "just ran it... there": open it via your cmd
[19:32:31] <FromDiscord> <Kermithos> or add -r as command
[19:33:08] <FromDiscord> <Kermithos> https://nim-lang.org/docs/nimc.html
[19:34:03] <FromDiscord> <juan_carlos> `nim r helloWorld.nim` from the cmd.exe
[19:34:29] <FromDiscord> <generic linux user> he didnt even execute it
[19:34:33] <FromDiscord> <generic linux user> .\Helo.exe
[19:34:35] <FromDiscord> <generic linux user> bruh
[19:34:52] <FromDiscord> <generic linux user> i cant undertsnad whats with the --run option, from go?
[19:34:54] <FromDiscord> <Yinisiki> wow it just printed hello world....
[19:34:58] <FromDiscord> <generic linux user> yes
[19:35:02] <FromDiscord> <SolitudeSF> holy...
[19:35:02] <FromDiscord> <generic linux user> 😐
[19:35:06] <FromDiscord> <Yinisiki> SUCCESS!!
[19:36:11] <FromDiscord> <Yinisiki> i THOUGHT i COULD RUN iT LikE PyTHON...
[19:36:14] <FromDiscord> <generic linux user> you said it aldready
[19:36:17] <FromDiscord> <Clonkk> Now you get to do some reading about what a compiler is and the difference between source code and binary.
[19:36:23] <FromDiscord> <generic linux user> In reply to @Yinisiki "i THOUGHT i COULD": thats what -r
[19:38:06] <FromDiscord> <Yinisiki> Thanks a lot guys... this is really a friendly community.. i will continue with the docs from here!!
[19:38:17] <FromDiscord> <Rika> gl
[19:39:16] <FromDiscord> <juan_carlos> Everything starts with a Hello World
[19:39:24] <FromDiscord> <juan_carlos> ...Then you learn to add Bugs to it.
[19:39:44] <FromDiscord> <dom96> In reply to @Yinisiki "Thanks a lot guys...": if anyone ever gives you shit for not knowing something then let me know, we all gotta start somewhere 🙂
[19:40:12] <FromDiscord> <dom96> (me or one of the other `@Moderator`'s that is)
[19:42:23] <FromDiscord> <Yinisiki> In reply to @dom96 "if anyone ever gives": Thats really kind of you dom!!
[19:43:18] <FromDiscord> <generic linux user> dommomom
[19:43:21] <FromDiscord> <Clonkk> It actually is a friendly community. But you're asking question about OS usage not about Nim. There really is no need to be dramatic, noone was mean to you. You just need to learn about what a compiler is (in opposition to a scripting language such as Python) and about console usage.↵(@Yinisiki)
[19:43:30] <FromDiscord> <generic linux user> (edit) "dommomom" => "dommoomoom"
[19:43:49] <FromDiscord> <generic linux user> yes , console is 🙂
[19:43:57] <FromDiscord> <Clonkk> There is nothing insulting in saying you need to learn about the tools you want to use
[19:44:33] <FromDiscord> <SolitudeSF> i dont think he was sarcastic
[19:44:34] <FromDiscord> <dom96> huh, interesting. I didn't take what Yinisiki said sarcastically
[19:44:58] <FromDiscord> <Rika> me neither
[19:44:58] <FromDiscord> <dom96> I still don't think it was meant to be sarcastic
[19:46:03] <FromDiscord> <Clonkk> Oh, well  my bad then. carry on
[19:46:03] <FromDiscord> <Clonkk> I thought it was sarcasm, I guess the `...` threw me off
[19:52:10] <FromDiscord> <generic linux user> ...?
[19:57:55] <FromDiscord> <Ayy Lmao> How do you launch a program from NimScript? Like a .exe on Windows for example
[19:58:40] <FromDiscord> <juan_carlos> gorgeEx
[20:02:22] <FromDiscord> <Ayy Lmao> Awesome, that works. Thanks!
[20:06:48] <FromDiscord> <generic linux user> nimscript?
[20:07:02] <FromDiscord> <generic linux user> icant see the usage , like why !python?
[20:08:27] <FromDiscord> <SolitudeSF> ?
[20:08:53] <FromDiscord> <Rika> it is useful to run external programs in nimscript, the usual usecase is to run something within a nimble task
[20:10:00] <FromDiscord> <generic linux user> 🆘 but 🆗
[20:13:01] <FromDiscord> <juan_carlos> NimScript because Windows BAT is ugly (?).
[20:13:39] <FromDiscord> <haxscramper> I'm getting segmentation faults when I switch to `ORC`, but things work fine with default refc. But other part of an application crashes when I have refc enabled, and I need to switch to orc to fix that
[20:13:55] <FromDiscord> <haxscramper> On top of that - when I use orc segmentation fault has no stacktrace
[20:13:56] <FromDiscord> <generic linux user> wierd
[20:13:57] <FromDiscord> <Rika> already tried valgrind and friends?
[20:14:11] <FromDiscord> <Rika> or asan?
[20:14:18] <FromDiscord> <Rika> not sure if asan works well with nim actually
[20:14:24] <FromDiscord> <haxscramper> I'm like 99.9% sure that the bug is due to `nil` dereferencing
[20:14:31] <FromDiscord> <haxscramper> And I can get stacktrace from GDB as well
[20:14:39] <FromDiscord> <haxscramper> But nim's stracktrace is completely empty
[20:14:50] <FromDiscord> <Rika> might be some weird internal function
[20:14:56] <FromDiscord> <haxscramper> Running with valgrind will take million years, but I will try now
[20:15:16] <FromDiscord> <haxscramper> sent a code paste, see https://play.nim-lang.org/#ix=3tbl
[20:15:28] <FromDiscord> <haxscramper> I add to sequence somewhere and it segfaults
[20:16:47] <FromDiscord> <Rika> is this threaded code?
[20:17:09] <FromDiscord> <haxscramper> no
[20:17:38] <FromDiscord> <haxscramper> Single-threaded, C backed, no release
[20:18:33] <FromDiscord> <haxscramper> For some reason things are literally falling apart with haxdoc - constant random crashes even for parts of the code
[20:19:12] <FromDiscord> <hamidb80> hey
[20:19:18] <FromDiscord> <generic linux user> helo
[20:19:33] <FromDiscord> <hamidb80> can someone explain me `noconv` pragma ?
[20:20:16] <FromDiscord> <Rika> its a calling convention i believe
[20:20:25] <FromDiscord> <Rika> In reply to @haxscramper "For some reason things": thats really strange
[20:20:29] <FromDiscord> <Rika> i dont know how to help
[20:20:57] <FromDiscord> <hamidb80> what is calling convention?
[20:21:26] <FromDiscord> <juan_carlos> how function call code is emitted.
[20:22:29] <FromDiscord> <Rika> well its a bit difficult to explain further
[20:22:32] <FromDiscord> <haxscramper> Valigrind reports `Invalid read of size 8` for ORC
[20:23:11] <FromDiscord> <Rika> https://en.wikipedia.org/wiki/X86_calling_conventions
[20:23:34] <FromDiscord> <haxscramper> And a lot of `Use of uninitialised value of size 8` for refc
[20:23:51] <FromDiscord> <haxscramper> But that one comes from `incRefAT1eRuflKWyTTBdLjEDZbgsystem`
[20:23:56] <FromDiscord> <Rika> it's a kinda low level concept, you kinda need to know how memory and asm works and stuff
[20:25:41] <FromDiscord> <hamidb80> In reply to @Rika "it's a kinda low": i just forked https://github.com/hamidb80/coverage/blob/master/cibuild.sh and have no idea why yglukhov is doing this
[20:25:52] <FromDiscord> <hamidb80> (edit) "https://github.com/hamidb80/coverage/blob/master/cibuild.sh" => "https://github.com/hamidb80/coverage/"
[20:26:24] <FromDiscord> <Rika> https://nim-lang.org/docs/manual.html#types-procedural-type
[20:26:33] <FromDiscord> <Rika> if you want specifically what noconv means
[20:26:57] <FromDiscord> <hamidb80> thanks
[20:27:47] <FromDiscord> <Rika> i just checked the usage
[20:27:50] <FromDiscord> <Rika> i dont know why either
[20:27:56] <FromDiscord> <Rika> maybe its best to ask him directly
[20:36:52] <FromDiscord> <Ayy Lmao> I'm trying to use NimScript to move a .dll file on Windows and keep getting `access is denied`. Does anyone know how to deal with this? Launching the terminal as admin doesn't seem to work
[20:37:35] <FromDiscord> <juan_carlos> Windows can lock DDLs silently, try copying it.
[20:37:48] <FromDiscord> <Ayy Lmao> Copying seems to give the same issue
[20:39:56] <fn> <06Prestige99> must have to do with the destination?
[20:40:21] <fn> <06Prestige99> can you copy it to your desktop?
[20:40:34] <FromDiscord> <Ayy Lmao> I've tried multiple destinations to check that, as well as my desktop
[20:40:43] <fn> <11ForumUpdaterBot99> New Nimble package! xom - Transform XML trees into performant JavaScript DOM calls at compile-time., see https://github.com/schneiderfelipe/xom
[20:40:43] <fn> <12R2D299> 4GitHub: 7"Transform XML trees into performant JavaScript DOM calls at compile-time using Nim code."
[20:41:41] <fn> <06Prestige99> Then it seems you don't even have read permissions on the dll (I would think) which seems odd
[20:41:54] <fn> <06Prestige99> But I don't use Windows so 🤷
[20:43:18] <FromDiscord> <hamidb80> i'm on the Windows
[20:43:18] <FromDiscord> <Ayy Lmao> I seem to be able to get the .dll to be where I need it to be by using `"--outdir:"` in the compiler when I build it. I guess that works for me
[20:43:21] <FromDiscord> <hamidb80> send your code
[20:44:43] <FromDiscord> <Ayy Lmao> In reply to @hamidb80 "send your code": It's just calling `mvFile` or `cpFile` on a .dll in NimScript
[20:49:26] <FromDiscord> <hamidb80> 😐 https://media.discordapp.net/attachments/371759389889003532/865628703668830218/unknown.png
[20:50:13] <FromDiscord> <generic linux user> due to security reasons
[20:50:21] <FromDiscord> <generic linux user> file managemnrt disabled in javascript
[20:50:36] <FromDiscord> <generic linux user> you dont want a website writing files to your disk
[20:50:52] <FromDiscord> <hamidb80> In reply to @richard stallmen(crazy GNU guy) "you dont want a": what about nimscript?
[20:50:58] <FromDiscord> <hamidb80>  https://media.discordapp.net/attachments/371759389889003532/865629091133653061/unknown.png
[20:51:01] <FromDiscord> <generic linux user> i dont know that much
[20:51:08] <FromDiscord> <juan_carlos> For NimScript it is cpFile
[20:51:44] <FromDiscord> <hamidb80> In reply to @juan_carlos "For NimScript it is": where is it documented?
[20:52:27] <FromDiscord> <juan_carlos> https://nim-lang.github.io/Nim/nimscript.html#cpFile%2Cstring%2Cstring
[21:22:59] <FromDiscord> <kaushalmodi> In reply to @hamidb80 "where is it documented?": I find it useful to bookmark this page: https://nim-lang.github.io/Nim/theindex.html↵↵Just Ctrl+F "cpFile" on there.
[21:24:02] <FromDiscord> <aleclarson> is step debugging nim code possible in vscode?
[21:24:27] <FromDiscord> <aleclarson> or rather, is it implemented by a plugin?
[21:24:40] <arkanoid> arnetheduck, late thanks for your answer (and for your effort on nlvm)
[21:26:10] <arkanoid> is {.noSideEffect.} and {.raises: [].} and {.experimental: "strictFuncs".} sufficient to enforce a pure function?
[21:26:24] <FromDiscord> <aleclarson> In reply to @aleclarson "is step debugging nim": oh i found this. has anyone tried it?↵https://github.com/jasonprogrammer/nim-debug-example
[21:26:26] <fn> <12R2D299> 4GitHub: 7"A walkthrough for setting up debugging of Nim code in VSCode"
[21:30:26] *** Joins: ozzz (~oz@46.49.41.80)
[21:39:03] <FromDiscord> <Rika> In reply to @arkanoid "is {.noSideEffect.} and {.raises:": enforce to the best the nim compiler can yes, but it is still circumventable if you mean that
[21:46:13] *** Joins: stkrdknmibalz (~test@rrcs-75-87-43-226.sw.biz.rr.com)
[21:57:17] *** Quits: rockcavera (~rc@user/rockcavera) (Remote host closed the connection)
[22:13:37] <arkanoid> Rika, sure, I'm not expecting nim to be haskell. Thanks for the feedback
[22:13:53] <FromDiscord> <Rika> i dont remember what i said
[22:14:01] <FromDiscord> <Rika> oh you mean the thing i just said
[22:14:01] <FromDiscord> <Rika> okay
[22:14:20] <FromDiscord> <Rika> actually maybe gcsafe too would help
[22:22:24] <FromDiscord> <cynahc> Is there a pragma to selectively disable bounds checks  by proc?
[22:27:17] <FromDiscord> <haxscramper> No, bound checks are placed in implementations of `[]` & other `seq` procs
[22:28:01] <FromDiscord> <haxscramper> I've seen example of casting `seq` to underlying implementation
[22:28:16] <FromDiscord> <haxscramper> sent a code paste, see https://play.nim-lang.org/#ix=3tbX
[22:28:44] <FromDiscord> <haxscramper> IIRC it is different for new and old runtime
[22:28:54] <FromDiscord> <haxscramper> Why do you want to disable them/
[22:30:35] <FromDiscord> <cynahc> I was playing around with benchmarking some different memory alignment options in the ECS fashion. I know there's the compiler flags to disable them. I also found `{.push boundChecks:on.}` in the tests.
[22:48:42] *** Joins: pro1 (~pro@user/pro)
[22:52:27] *** pro1 is now known as pro
[22:56:46] *** Quits: maxime_ (~maxime@2a01cb0883359800e24430043e68c132.ipv6.abo.wanadoo.fr) (Ping timeout: 250 seconds)
[23:24:57] *** Joins: maxime_ (~maxime@2a01cb0883359800f69fed5c65f9e937.ipv6.abo.wanadoo.fr)
[23:52:12] *** Quits: g42x (~g42x@37.165.245.128) (Quit: Client closed)
