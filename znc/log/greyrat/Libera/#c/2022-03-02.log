[00:00:09] <ChoHag> They're just stack machines.
[00:00:22] <apotheon> jeebus
[00:00:32] <apotheon> People are kinda bitchy here, today.
[00:00:44] <ChoHag> They are?
[00:00:53] <apotheon> 13:20 < ChoHag> O0c: I was playing dopewars while you were still swimming around in a testicle.
[00:00:56] <apotheon> yes
[00:00:57] <apotheon> you are
[00:01:13] <ChoHag> Well I was.
[00:01:23] <ChoHag> That's not bitchy. That's what we call a fact.
[00:01:34] <apotheon> Bitchy is how you say it, and why you say it.
[00:01:52] <ChoHag> Winston, chill.
[00:02:01] *** Joins: Darkcoal (~user@user/Darkcoal)
[00:02:34] <ChoHag> Shit's been chill here. No-one's stressing but you.
[00:02:35] <apotheon> Criminy, O0c even left Libera after leaving this channel.
[00:02:46] <apotheon> probably afraid to reappear with the same username
[00:02:48] <greeb> godspeed O0c. I think they'll come around when they realize it's not like people pop out of the womb knowing how to write a Dopewars clone.
[00:03:57] <constxd> i remember somebody leaving in that exact same manner a while ago
[00:04:32] *** Quits: sord937 (~sord937@gateway/tor-sasl/sord937) (Quit: sord937)
[00:05:07] <ChoHag> Eh the narcissism was strong with that one.
[00:06:08] *** Joins: AStorm (astralstor@bc01n02.hswaw.net)
[00:06:26] *** Joins: Atque (~Atque@user/atque)
[00:06:58] *** Joins: luke-jr (~luke-jr@user/luke-jr)
[00:07:37] <phryk> ChoHag: You talking about yourself? ðŸ¤”
[00:07:53] <ChoHag> I have other traits.
[00:07:54] *** Joins: CaryHartline (~CaryHartl@2603-8080-6a0e-8d88-bd2b-5293-8c83-b4c5.res6.spectrum.com)
[00:09:17] *** Quits: KimK (~KimK@2600:8803:740b:4700:4a5b:39ff:fe0b:57d2) (Ping timeout: 240 seconds)
[00:09:40] <phryk> Honestly, if this is how things always go with newcomers, I am not surprised about most new programmers avoiding C.
[00:11:03] <constxd> lmao
[00:11:06] *** Quits: tech_exorcist (txrcst@user/tech-exorcist/x-0447479) (Quit: Disconnecting)
[00:11:24] <constxd> idk about that
[00:12:15] *** Quits: cvmn (~caveman@gateway/tor-sasl/caveman) (Ping timeout: 240 seconds)
[00:12:16] <constxd> too many cooks to some extent but that's better than going into an IRC channel to ask for help and being with radio silence
[00:12:35] <constxd> people here are excited to help, that's not bad
[00:12:37] <ChoHag> Kid claimed to be 21.
[00:12:55] <ChoHag> If you can't cope with people taking to you at 21 you've got some learning to do.
[00:14:11] <strajder> when I took interest in programming, I didn't ask for anyone's opinion to decide what to do, I just experimented the hell out of it
[00:14:47] <strajder> asking for opinion about everything goes with being born post-2000 I guess
[00:15:17] <slact[m]> well, there are a lot more choices now than back in the old days
[00:15:18] <edk> i'm not convinced
[00:16:01] *** Quits: t3nj1n_ (~t3nj1n@pool-173-52-219-149.nycmny.fios.verizon.net) (Remote host closed the connection)
[00:16:01] *** Quits: t3nj1n (~t3nj1n@pool-173-52-219-149.nycmny.fios.verizon.net) (Remote host closed the connection)
[00:16:15] <ChoHag> About what?
[00:16:36] *** Quits: alch (~alch@151.44.80.228) (Ping timeout: 252 seconds)
[00:16:45] <edk> that asking for opinions goes with being born post-2000
[00:16:54] <edk> (or with anything in particular)
[00:17:07] *** Quits: freakazoid333 (~matt@2603:9000:cf03:86c3:49ba:4576:8008:625c) (Read error: Connection reset by peer)
[00:17:15] <oldlaptop> Deciding "hm, this place has too many assholes in it, perhaps I'll go somewhere with fewer assholes" hardly seems like "can't cope" to me.
[00:17:20] <edk> yeah
[00:17:28] *** Joins: jjido (~Denis@94.4.149.217)
[00:17:38] <phryk> Asking more experienced people for recommendations is a smart move IMO.
[00:17:38] <ChoHag> No that's literally its definition.
[00:17:41] *** Joins: Guest71 (~Guest71@2a02:2488:4211:3400:9757:fce7:dee0:8d0e)
[00:17:47] *** Joins: freakazoid333 (~matt@2603:9000:cf03:86c3:49ba:4576:8008:625c)
[00:17:53] <ChoHag> If you can't cope with assholes then you fail at life.
[00:17:55] <slact[m]> gruq want to ask unga what rock most good, but unga think gruq should know what rock good
[00:18:08] <phryk> ChoHag: Getting assholes out of your life *is* coping.
[00:18:12] <edk> i think you should stop blaming other people for the consequences of your douchiness
[00:18:18] <slact[m]> try all rock, say unga
[00:18:21] <ChoHag> Good luck with that.
[00:18:28] <ChoHag> By the way have you met the government?
[00:18:32] <ChoHag> Or the phone company?
[00:18:55] <ChoHag> Arseholes are part of your life. Deal with it.
[00:19:07] <edk> if you insist
[00:19:08] *** ChanServ sets mode: +o edk
[00:19:13] <slact[m]> guys can't we al just get along and bitch about preprocessor evaluation rules in unison?
[00:19:14] *** edk sets mode: +q-o *!*@81.187.183.71 edk
[00:19:30] *** Parts: ChoHag (~mking@81.187.183.71) ()
[00:20:03] *** Joins: xa0s (~xa0s@mab.sdf.org)
[00:20:18] <phryk> edk: Not completely sure if that was necessary, but I think you probably had more contact with them than me. Thanks for not doing nothing.
[00:20:32] *** Quits: Alhazred (~Alhazred@45.129.56.151) (Ping timeout: 240 seconds)
[00:20:49] <oldlaptop> Pretty much in-character, I'd say.
[00:20:52] <constxd> cringe
[00:20:53] *** Quits: Atque (~Atque@user/atque) (Quit: ...)
[00:21:42] <meator> How has the web gone from <html>Hello world!</html> to being a way to distribute cross-platform "programs"?
[00:22:03] <strajder> .com
[00:22:10] <edk> this isn't the first time, or the first person who thinks they're allowed to be a bully because "arseholes are part of life"
[00:22:14] *** Quits: Guest71 (~Guest71@2a02:2488:4211:3400:9757:fce7:dee0:8d0e) (Client Quit)
[00:22:47] <constxd> that doesn't justify being a bully, but were they even being a bully lmao
[00:22:51] *** Joins: rgrinberg (~textual@2806:101e:7:70b6:8cd0:c4fb:a59b:d470)
[00:23:02] <constxd> softest bullying i've ever seen on the internet
[00:23:26] <constxd> but that won't stop the jannies
[00:23:33] <phryk> They were at least berating O0c.
[00:24:08] <oldlaptop> meator: The most dangerous way possible: gradually
[00:24:14] *** Joins: fapple (~user@92.60.40.199)
[00:24:45] <edk> meator: other programs are hard to install, break your computer if you install them wrong, usually have ridiculous levels of access by default for desktop setups
[00:25:24] <edk> web apps "just" require an internet connection, a massive excess of computing power and a user who doesn't care too much what code they're running where
[00:25:45] <edk> all of those are abundant today. seems like a no-brainer
[00:26:38] *** Quits: tejr (~tejr@user/tejr) (Remote host closed the connection)
[00:26:54] *** Joins: tejr (~tejr@user/tejr)
[00:28:33] *** Quits: merrinx (~merrinx@ti0028a400-3686.bb.online.no) (Quit: WeeChat 3.3)
[00:30:00] *** Joins: kenanmarasli (~kenanmara@user/kenanmarasli)
[00:31:37] *** Joins: Maaaanu (~manuel@ip5b429007.dynamic.kabel-deutschland.de)
[00:34:18] *** Joins: phrosty (~phrosty@c-73-225-175-19.hsd1.wa.comcast.net)
[00:34:58] <meator> I have always wondered how is this possible.
[00:35:07] *** Quits: Juliu (~Juliu@2a02:810b:c640:3ec0:350b:c716:fa56:ddbc) (Quit: Quit)
[00:36:41] *** Quits: meator (~meator@user/meator) (Quit: Leaving)
[00:37:04] *** Quits: tiotags (~tiotags@user/tiotags) (Quit: Leaving)
[00:37:05] *** Quits: pooryorick (~pooryoric@87-119-174-173.tll.elisa.ee) (Ping timeout: 256 seconds)
[00:38:53] *** Quits: gproto23 (~gproto23@user/gproto23) (Remote host closed the connection)
[00:39:00] *** Joins: pooryorick (~pooryoric@87-119-174-173.tll.elisa.ee)
[00:39:49] *** Joins: KevinX (~KevinX@user/KevinX)
[00:40:57] <goodfella> ,kr 1-19
[00:40:57] <candide> Chapter 1: A Tutorial Introduction; Exercise 1-19. Write a function reverse(s) that reverses the character string s. Use it to write a program that reverses its input a line at a time.
[00:41:10] <goodfella> so far my favourite
[00:41:27] *** Quits: CaryHartline (~CaryHartl@2603-8080-6a0e-8d88-bd2b-5293-8c83-b4c5.res6.spectrum.com) (Quit: Textual IRC Client: www.textualapp.com)
[00:41:50] <goodfella> oops not that
[00:41:53] <goodfella> ,kr 1-18
[00:41:54] <candide> Chapter 1: A Tutorial Introduction; Exercise 1-18. Write a program to remove trailing blanks and tabs from each line of input, and to delete entirely blank lines.
[00:41:56] <goodfella> that
[00:41:59] *** smlavine__ is now known as smlavine
[00:42:37] <edk> i really liked the stringy state machine exercises
[00:43:54] *** Quits: motherfsck (~motherfsc@user/motherfsck) (Ping timeout: 250 seconds)
[00:44:29] *** Joins: sweetsymph (uid509475@id-509475.lymington.irccloud.com)
[00:44:51] *** Joins: nuxil_ (~nuxil@141.195.51.213)
[00:45:41] <goodfella> the exercises are great but a bit ambiguous
[00:46:48] *** Quits: clamiax (~clamiax@net-93-147-242-222.cust.vodafonedsl.it) (Remote host closed the connection)
[00:46:58] <goodfella> for example exercise 1-18 although interesting, it forces you to introduce concept not yet learned
[00:47:02] *** Quits: nuxil (~nuxil@141.195.51.213) (Ping timeout: 240 seconds)
[00:47:18] <goodfella> but that might be a 'feature'
[00:48:03] *** Quits: crashrep (~crashrep@user/crashrep) (Quit: WeeChat 3.4)
[00:48:07] *** Quits: slidercrank (~slidercra@user/slidercrank) (Ping timeout: 256 seconds)
[00:48:18] <goodfella> or it also might be that i didn't find the more correct way to accomplish
[00:49:13] *** Quits: ekathva (~ekathva@2001:999:51:19b8:30eb:aab6:8fa5:4db8) (Remote host closed the connection)
[00:49:19] <constxd> goodfella: post code
[00:49:49] <goodfella> constxd: im getting protective here ..
[00:50:00] <constxd> why
[00:51:28] *** Quits: blindguard (~blindguar@2a02:908:1864:c200::ef3c) (Quit: Konversation terminated!)
[00:52:02] <SaltHilStroller_> Is there a good/typical way of implementing a header struct? I.e. I have various event structs, and want to prepend each of them a header struct. I basically see 2 options: flexible-array-member, or a union. Both have drawbacks
[00:52:26] <SaltHilStroller_> flexible-array-member drawbacks: No way of instantiating the struct on the stack
[00:52:51] *** Joins: shibboleth (~shibbolet@user/shibboleth)
[00:52:54] <SaltHilStroller_> union drawbacks: Makes accessing the internal parameters more challenging
[00:53:08] <SaltHilStroller_> (+ typical drawback of allocating more memory than required for smaller union members)
[00:53:10] *** Joins: clamiax (~clamiax@net-93-147-242-222.cust.vodafonedsl.it)
[00:53:26] <SaltHilStroller_> Is there a one I should lean towards over the other?
[00:54:00] *** Quits: SoF (~skius@user/skius) (Ping timeout: 252 seconds)
[00:54:12] *** Quits: TheCoffeMaker (~TheCoffeM@user/thecoffemaker) (Ping timeout: 272 seconds)
[00:54:27] *** Quits: fapple (~user@92.60.40.199) (Quit: leaving)
[00:54:29] *** Joins: SoF (~skius@user/skius)
[00:54:30] *** Joins: vicfred (~vicfred@user/vicfred)
[00:55:05] <constxd> why would you use a FAM
[00:55:22] <constxd> just have a bunch of structs with a common prefix
[00:56:21] <constxd> also how does the union make accessing internal parameters more challenging
[00:57:35] *** Quits: bch (~bch@S01069050ca2cbf63.ok.shawcable.net) (Quit: quitter)
[00:58:04] <SaltHilStroller_> constxd: I'm writing a library to store arbritrary date. To store the data, I need to perform an expensive function call, so I'd like to avoid having to do it twice to write the header then data
[00:58:23] *** Joins: alch (~alch@151.44.80.228)
[00:58:29] <ioxzev1z> Can't see it being so inefficient that you can't just use multiple structs
[00:58:31] <SaltHilStroller_> But ideally the clients of the library shouldn't have to worry about populating their assosciated header
[00:58:36] <ioxzev1z> Define "expensive function call"
[00:58:53] <ioxzev1z> s/define/elaborate on the term/
[00:59:09] *** Joins: andro (~andro@user/andro)
[00:59:44] *** Quits: cosimone (~user@93-47-229-38.ip115.fastwebnet.it) (Quit: ERC (IRC client for Emacs 27.1))
[00:59:48] *** Joins: TheCoffeMaker (~TheCoffeM@user/thecoffemaker)
[01:00:21] *** Quits: sh0ne (~sh0ne@2a06:5b00:6fb:2a00:6938:5d7:7e7:1023) (Quit: Textual IRC Client: www.textualapp.com)
[01:00:41] <SaltHilStroller_> ioxzev1z, I.e. the function call enters invokes the service handler, triggering a context switch to priviledged state, disabling interrupts, etc. Also on a single core chip
[01:00:50] <bnchs> does isalpha or any ctype function use the ASCII locale regardless of whatever the locale is set to
[01:01:02] <constxd> what does this function call have to do with which approach you take here?
[01:01:24] <twkm> no.  though if you don't call setlocale there's really only 2 possibilities.
[01:01:27] <SaltHilStroller_> The function call writes a void*. Ideally the memory I'm writing is contiguous, allowing only 1 function call
[01:01:34] <constxd> it's contiguous in either case
[01:02:05] <constxd> you either have a tagged union where all variants have the same size, or you have different structs with different sizes but which share a common prefix
[01:02:14] <SaltHilStroller_> Oh, right, oops. So I guess the function call doesn't effect which one I use. Just looking for guidance on which I should use
[01:02:17] <bnchs> twkm: really?
[01:02:31] <constxd> depends if you want to have contiguous *arrays* of them
[01:03:07] <constxd> idk they're both good for different things
[01:03:10] <SaltHilStroller_> Uh, well not an actual array. But they will be serialized to a FIFO. But the header struct could maintain the actual length
[01:03:24] <twkm> if you are on a system with char as an int or long you might always have something other than ascii or ebcdic, though they have lots of other gotchas.
[01:03:33] *** Quits: pucara (~i@host14.181-1-101.telecom.net.ar) (Quit: Lost terminal)
[01:03:55] <constxd> SDL uses different structs for different event types for example
[01:04:18] <bnchs> this has to do with parsing text that requires to be alphabetic characters
[01:04:34] <constxd> and you cast between pointer types based on the type in the header
[01:04:35] <bnchs> since ascii is just a encoding, should i not give a shit?
[01:04:41] <twkm> the locale almost always matters for that.
[01:05:01] <bnchs> yes
[01:05:08] <goodfella> constxd: SDL huh ...
[01:05:41] <twkm> if you call setlocale then isalpha will honor the locale's notion of alphabetics.
[01:05:44] <goodfella> not something im going to touch soon
[01:05:59] <goodfella> i prefer X11
[01:06:04] <bnchs> all i need is to check alphabetic latin characters
[01:06:11] <constxd> based X11 chad
[01:06:13] <SaltHilStroller_> constxd: I'm just trying to facilitate making the library extensible as easily as possible. I wouldn't want a future developer to try and add a struct without realizing it MUST contain the header struct. Hence trying to wrap arbritrary structs
[01:06:15] <goodfella> although they obviously different things
[01:06:43] <bnchs> constxd: you really use X11?
[01:06:46] *** Quits: Rynn (~rynn@216.30.158.198) (Quit: My MacBook has gone to sleep. ZZZzzzâ€¦)
[01:06:54] <bnchs> just render to a framebuffer
[01:07:09] <twkm> latin, sigh.
[01:07:14] *** Joins: orestarod (~orestarod@2a02:2149:8b20:700:2b9d:7f86:7169:61c0)
[01:08:15] *** Quits: Torr (~Torr@user/torr) (Quit: leaving)
[01:08:26] <twkm> if locale means nothing, as it sounds, don't call setlocale then isalpa will ignore the locale definition of alphabetic.
[01:08:28] *** goodfella is now known as chad
[01:09:01] <constxd> SaltHilStroller_: well if you use the union approach you end up with a bunch of padding and stuff -- does that matter to you?
[01:09:24] *** Quits: cherrry9 (~jan@ded246.neoplus.adsl.tpnet.pl) (Ping timeout: 272 seconds)
[01:09:38] <constxd> like do you care about the size of the serialized events
[01:09:43] *** chad is now known as FatAlbert
[01:10:05] <constxd> i like doing this: http://paste.pr0.tips/9F
[01:10:06] <twkm> the serializer should know the guts.
[01:10:26] <bnchs> twkm, thanks, i'm sorry if i'm retarded
[01:10:57] <constxd> don't worry everyone is retarded in twkm's eyes
[01:11:25] <twkm> you just don't care about any latin derived alphabet.  many do not.  or don't care about any but their own.
[01:11:52] *** Quits: strajder (~strajder@user/strajder) (Quit: leaving)
[01:12:44] <bnchs> this is for a parser anyway
[01:13:08] <bnchs> don't want any unintended behavior on systems with different locales and encoding
[01:13:41] *** Quits: nuxil_ (~nuxil@141.195.51.213) (Ping timeout: 245 seconds)
[01:13:59] <shibboleth> anyone mind taking a quick peek at a gdb backtrace and help me work out a c segfault? code is supposedly working fine on deb wheezy, jessie, stretch but apparently something borks on recent gcc (buster/bullseye)...
[01:14:09] <shibboleth> https://paste.debian.net/1232686/
[01:14:18] <shibboleth> https://github.com/macm00v/vmcam
[01:14:19] <candide> Title of shibboleth's link: GitHub - macm00v/vmcam
[01:14:33] <twkm> some would be annoyed if they can't supply (for example) utf8 encoded data.
[01:14:40] *** Quits: mahmutov (~mahmutov@37.155.12.201) (Ping timeout: 250 seconds)
[01:14:41] <shibboleth> apparently the program isn't able to read a var in its own memory?
[01:14:54] *** Joins: rampart (~rampart@2.sub-174-250-16.myvzw.com)
[01:15:03] <twkm> it likely reads outside of its memory, e.g., due to a free.
[01:15:17] <shibboleth> also weird, i've actually had it start/work exactly once
[01:15:29] <twkm> have you tried a memory debugger like mempatrol, purify, or valgrind?
[01:15:58] <twkm> works once is a halmark of undefined behavior, and often of free'd allocations.
[01:16:06] <Jong> What is it called when you change a value's type in a way that the value's bit representation changes versus when you want the bits to be exactly the same but just want the variable to be viewed as a different type?
[01:16:18] <shibboleth> well, those are plans c,d,e etc. asked here in case something stood out
[01:16:28] <twkm> type punning.
[01:16:45] <shibboleth>         pass = 0x555555000000 <error: Cannot access memory at address 0x555555000000>
[01:16:50] <Jong> type punning? let me search that
[01:17:14] <twkm> that looks very like data, so a buffer overrun is likely.
[01:17:25] <ioxzev1z> SaltHilStroller_, IMO I would avoid the union. If you want the library to be extensible then note the needed containing of the header struct. I assume someone extending your library will read the documentation
[01:18:16] <shibboleth> well, that memadress is kinda odd/even compared to the rest of the vars. if anyone has a minute or to to look at the code i'd be grateful
[01:18:21] <Jong> over running the buffer sounds like illegal hacker activity
[01:18:38] <twkm> a mistake many make.
[01:18:41] <Jong> kidding, sort of not kidding
[01:19:23] <bnchs> i'm sorry i probably didn't give you enough info, this is a URL parser and this is only for the scheme part
[01:20:03] *** Quits: rgrinberg (~textual@2806:101e:7:70b6:8cd0:c4fb:a59b:d470) (Quit: My MacBook has gone to sleep. ZZZzzzâ€¦)
[01:20:08] <Jong> Good thing the powerful OS will come save the day by exiting with a segmentation fault exception. All hail the powerful Operation System!
[01:20:49] <twkm> shibboleth: that the fault is in malloc suggests the allocation data (usually adjacent to the space returned) was written over causing malloc to do something wrong.
[01:21:14] <shibboleth> well, that and "p = <optimized out>"
[01:21:44] <twkm> that just means its likely in a register, or another variable found to be an allias.
[01:21:47] <Jong> The OS, the gatekeeper of memory address space. The ruler of process control blocks.  The enforcer of interrupts.  The protector of the kernel
[01:21:57] <bnchs> Jong: it's more than that
[01:22:05] <bnchs> it's more like you write in the wrong memory, you get shot
[01:22:17] *** Joins: dec0d3r (~dec0d3r@2001:8003:480a:e00:e07:e7c3:7efc:ed0f)
[01:22:20] <Jong> I'm being too anthropomorphic
[01:22:20] <shibboleth> well, p is an alias for pass(word), which tracks with the other error
[01:22:27] <shibboleth> but i'm over my head here, so :)
[01:22:36] <bnchs> it's like being in the wrong hood
[01:22:41] <shibboleth> heh
[01:22:49] <Jong> bnchs what OS are you on? I'm getting Windows 10
[01:23:13] <bnchs> GNU/Linux
[01:23:32] *** Quits: jjido (~Denis@94.4.149.217) (Quit: My MacBook Air has gone to sleep. ZZZzzzâ€¦)
[01:23:43] <twkm> bnchs: if you are parsing only standard schemes (do you fetch the list?) then you won't reach anything that's possibly locale based so not using setlocale should be fine.  beyond the scheme and you are in trouble.
[01:24:05] <bnchs> twkm: no standard schemes, it's a generic parser
[01:24:12] <constxd> shibboleth: valgrind should be plan a
[01:24:31] <constxd> i love valgrind
[01:24:46] <twkm> then might there be a locale-based name used?  if so you need setlocale.  if not then not.
[01:25:07] *** Quits: Serpent7776 (~Serpent77@90-156-31-193.internetia.net.pl) (Quit: leaving)
[01:25:52] <twkm> strcspn(p,":")
[01:26:13] <bnchs> twkm: no
[01:26:23] <Jong> Threads to Kernel: Captain Kernel. An access violation has just occurred in Ukraine!   Kernel to threads:  raise an exception immediately! Terminate the Russian virus and cease access to the restricted area
[01:26:23] *** Joins: jjido (~Denis@2a02:c7f:5c91:e700:e4e8:d997:3422:7c95)
[01:26:41] <twkm> if locale characters are present technically it is possible for a ':' to be present but it isn't actually a colon due to an mbcs.
[01:27:13] <Jong> Has anyone here seriously used a union in a real program? I never have.
[01:27:23] <twkm> many times.
[01:27:30] <Jong> Unions have always been an academic play toy to me
[01:27:41] <Jong> A "look what cool trick I can do"
[01:27:53] <twkm> but then i've programmed small parts (and large, and in-between).
[01:27:53] <Jong> but seriously, is there a need for unions? It's not like you're low on memory space
[01:28:00] <bnchs> i used union for host struct
[01:28:19] <twkm> you might not be low.  your tv remote might be.
[01:28:25] <Jong> bnchs  what's that? Something very low level?
[01:28:42] <Jong> so you guys are working on small devices then?
[01:28:49] <Jong> microcontrollers or something?
[01:28:51] <bnchs> struct that stores ipv4/ipv6/DNS hostname
[01:29:06] <twkm> e.g., 16 bytes and 256 bytes, though neithe is conforming.
[01:29:30] <Jong> Don't you need to be sure that you don't need both variables you're storing in the same memory space at the same time?
[01:30:00] <bnchs> #define struct union
[01:30:03] <Jong> You're basically using a single placeholder to hold more than a single number. It's like musical chairs. Only one can take a seat at a time.
[01:30:04] <twkm> most are surprised by dns names, at leas the possible length and composition.
[01:30:10] <constxd> bro what
[01:30:27] <twkm> grr, at least the ...
[01:30:40] *** Quits: Maaaanu (~manuel@ip5b429007.dynamic.kabel-deutschland.de) (Quit: leaving)
[01:30:44] *** Quits: jjido (~Denis@2a02:c7f:5c91:e700:e4e8:d997:3422:7c95) (Client Quit)
[01:31:17] <constxd> Jong: regardless of how much memory you have, union is often what maps more closely to whatever you're modeling
[01:31:35] *** Quits: noteness (~noteness@user/noteness) (Ping timeout: 240 seconds)
[01:31:48] <Jong> constxd I don't understand what you mean by that. "maps more closely "? Example?
[01:31:56] <twkm> a tagged union, i.e., in a struct that describes which union member was last written.
[01:32:17] <constxd> if i have a RubyValue it could be a RubyString or RubyArray -- it's not both, so why would I want the members of both of them to be readable at the same time?
[01:32:20] <twkm> see bnchs' example.
[01:32:21] *** Joins: noteness (~noteness@user/noteness)
[01:33:00] <control> hello, how can i generate random 256bit number?
[01:33:09] <constxd> based
[01:33:15] <twkm> get a well known generator.
[01:33:18] <bnchs> hmmm
[01:33:22] <Jong> constxd  oh I got it
[01:33:56] <bnchs> make an array of 8 (16-bit) shorts
[01:34:01] <Jong> like a char * array and some other string type would be a good candidate for unions
[01:34:04] <bnchs> and run rand() on all of them
[01:34:16] <twkm> there are no string types.
[01:34:28] <twkm> a string is data formatting.
[01:34:35] <control> humm
[01:34:44] <Jong> twkm constxd  just said "RubyString or RubyArray"
[01:34:55] <twkm> *shrug*
[01:36:47] <bnchs> oh i understand ctype just checks the value of int and compares it to ASCII shit
[01:36:47] *** Joins: Tangent-Man (~Tang3nt-M@cpc145602-basl14-2-0-cust33.20-1.cable.virginm.net)
[01:36:49] <constxd> control: char buffer[32]; getrandom(buffer, 256 / CHAR_BIT, 0);
[01:37:10] <bnchs> it doesn't guaranate that the int is some other encoding
[01:37:17] <twkm> compares it to the execution character set, which is likely ascii unless setlocale was called.
[01:38:01] <bnchs> ok maybe my memory is read-only today
[01:39:26] *** Quits: gh34 (~textual@cpe-184-58-181-106.wi.res.rr.com) (Quit: Textual IRC Client: www.textualapp.com)
[01:42:20] *** Quits: alch (~alch@151.44.80.228) (Ping timeout: 272 seconds)
[01:43:29] *** Joins: alch (~alch@151.44.63.69)
[01:43:33] <control> lol https://www.cpunk.de/images/randomness.png
[01:44:02] <twkm> every byte of a ubcs is a character.  each byte of an mbcs is merely one of many needed to compose a character.  considering one byte when an mbcs is present might seem like it is an 'x' when in fact due to the previous bytes it turns out to be part of what makes up an arrow character.
[01:44:52] <bnchs> random numbers must come from somewhere
[01:44:59] *** Quits: Darkcoal (~user@user/Darkcoal) (Quit: Darkcoal)
[01:46:46] <twkm> natural sources are best, though not always so they often just seed or perturb a prng.
[01:47:28] <twkm> imo, getrandom(buffer, sizeof buffer, 0).
[01:48:17] *** Joins: lukedashjr (~luke-jr@user/luke-jr)
[01:48:43] <twkm> else 256/CHAR_BIT should have been used to specify buffer's size, and even there i'd use a macro or enumeration constant.
[01:49:08] <control> constxd: could you please give me a working example?
[01:50:37] <twkm> on some systems that does work.
[01:50:55] <twkm> it is non-standard so not very portable.
[01:51:01] *** Quits: luke-jr (~luke-jr@user/luke-jr) (Ping timeout: 256 seconds)
[01:51:17] *** lukedashjr is now known as luke-jr
[01:53:23] *** Quits: aradesh (~aradesh@user/aradesh) (Quit: WeeChat 1.9.1)
[02:00:13] *** nmi is now known as deflected
[02:02:49] *** Quits: Guest3867 (~Guest@host129.190-139-78.telecom.net.ar) (Remote host closed the connection)
[02:03:14] *** Quits: pretty_dumm_guy (trottel@gateway/vpn/protonvpn/prettydummguy/x-88029655) (Quit: WeeChat 3.4)
[02:03:52] *** Quits: constxd (~brad@142.134.79.191) (Ping timeout: 272 seconds)
[02:05:09] *** Joins: AverageJoe (~AverageJo@user/AverageJoe)
[02:06:07] *** Quits: brad_mssw (~bhouse@2601:344:4100:b490:b061:f420:602:ebda) (Quit: Leaving)
[02:10:53] *** Joins: hashfunc133c (~user@2601:5c0:c280:7090:8c1e:afa3:b36b:39be)
[02:11:54] *** Quits: jkotra (~jkotra@122.169.141.242) (Quit: ZNC 1.8.2+deb2 - https://znc.in)
[02:12:10] <SaltHilStroller_> ioxzev1z: How terrible is this: https://onlinegdb.com/OP5buLZvk
[02:12:43] *** Joins: jkotra (~jkotra@122.169.141.242)
[02:12:56] <SaltHilStroller_> All I need is anonymous structs :D
[02:16:36] *** Joins: kurahaupo (~kurahaupo@115.69.27.211)
[02:16:49] <twkm> ahh, the urge for oo.
[02:18:00] *** Joins: seninha (~chatzilla@user/seninha)
[02:18:01] *** Joins: acidtonic_ (~acidtonic@162-17-146-153-static.hfc.comcastbusiness.net)
[02:18:31] *** Joins: TVH7677 (~TVH7@containerhost01.de01-nbg01.dev.ti-more.net)
[02:18:34] *** Joins: mormue1 (~mormue@static.29.186.130.94.clients.your-server.de)
[02:18:34] *** Joins: teroshan0 (~teroshan@static.28.181.130.94.clients.your-server.de)
[02:18:41] *** Joins: Viewday114 (~Viewday@user/viewday)
[02:18:44] *** Joins: noonien5 (~noonien@user/noonien)
[02:18:54] *** Joins: suss` (~user@user/suss)
[02:18:58] *** Joins: abraham2 (~abraham@143.244.185.86)
[02:19:05] *** Quits: sebito91 (~sborza@45.55.74.66) (Ping timeout: 256 seconds)
[02:19:05] *** Quits: kurfen_ (~kurfen@213.152.188.7) (Ping timeout: 256 seconds)
[02:19:05] *** Quits: dustinm (~dustinm@static.38.6.217.95.clients.your-server.de) (Ping timeout: 256 seconds)
[02:19:09] *** Joins: flynn8 (~mcbloch@user/flynn)
[02:19:16] *** Joins: blackbeard420_ (blackbeard@2600:3c03::f03c:91ff:fe92:3f2a)
[02:19:34] *** Joins: kurfen (~kurfen@213.152.188.7)
[02:19:35] *** Joins: banc- (banc@gateway/vpn/airvpn/banc)
[02:19:37] *** Joins: les (znc@user/les)
[02:19:37] *** Joins: sebito91 (~sborza@45.55.74.66)
[02:19:39] *** Quits: finalsummer (~finalsumm@user/finalsummer) (Ping timeout: 256 seconds)
[02:19:39] *** Quits: les_ (~whome@user/les) (Ping timeout: 256 seconds)
[02:19:46] *** Joins: gtlsgamr_ (~gtlsgamr@user/gtlsgamr)
[02:19:47] *** Joins: coc0nut_ (~coc0nut@user/coc0nut)
[02:19:51] *** Joins: lowin_ (~lowin@user/lowin)
[02:20:01] <ioxzev1z> SaltHilStroller_, so you always want int type/size, and then after that you want differing structs with their own members?
[02:20:13] *** Quits: mrgz (~mrgz@201-42-0-191.dsl.telesp.net.br) (Ping timeout: 256 seconds)
[02:20:13] *** Quits: Myth (~pi@173.233.125.203) (Ping timeout: 256 seconds)
[02:20:13] *** Quits: mrec (~markus@sundtek.de) (Ping timeout: 256 seconds)
[02:20:13] *** Quits: overrider (~overrider@user/overrider) (Ping timeout: 256 seconds)
[02:20:13] *** Quits: shachaf (~shachaf@user/shachaf) (Ping timeout: 256 seconds)
[02:20:13] *** Quits: corelax (~corelax@user/corelax) (Ping timeout: 256 seconds)
[02:20:13] *** Quits: Norkle (~norkle@admin.nasa-g0v.com) (Ping timeout: 256 seconds)
[02:20:41] *** Joins: corelax (~corelax@user/corelax)
[02:20:47] *** Quits: sidy (~sidy@user/sidy) (Ping timeout: 256 seconds)
[02:20:47] *** Quits: banc (banc@gateway/vpn/airvpn/banc) (Ping timeout: 256 seconds)
[02:20:47] *** Quits: Viewday11 (~Viewday@user/viewday) (Ping timeout: 256 seconds)
[02:20:47] *** Quits: suss (~user@user/suss) (Ping timeout: 256 seconds)
[02:20:47] *** Quits: Praise (~Fat@user/praise) (Ping timeout: 256 seconds)
[02:20:47] *** Quits: brdb (~alarm@24.61.226.255) (Ping timeout: 256 seconds)
[02:20:47] *** Quits: noonien (~noonien@user/noonien) (Ping timeout: 256 seconds)
[02:20:47] *** Quits: Church (~aleph@68.161.207.188) (Ping timeout: 256 seconds)
[02:20:47] *** Quits: manx (xuew@p57b5c023.dip0.t-ipconnect.de) (Ping timeout: 256 seconds)
[02:20:47] *** Quits: cross (~cross@spitfire.i.gajendra.net) (Ping timeout: 256 seconds)
[02:20:47] *** Quits: mormue (~mormue@static.29.186.130.94.clients.your-server.de) (Ping timeout: 256 seconds)
[02:20:47] *** Quits: silky (~silkworks@ctrl-c.club) (Ping timeout: 256 seconds)
[02:20:47] *** Quits: keur2 (~keur@segfault.fun) (Ping timeout: 256 seconds)
[02:20:47] *** Quits: kkd (~kkd@255.205.154.104.bc.googleusercontent.com) (Ping timeout: 256 seconds)
[02:20:47] *** Quits: teroshan (~teroshan@static.28.181.130.94.clients.your-server.de) (Ping timeout: 256 seconds)
[02:20:47] *** Quits: Forty-Bot (~kvirc@pool-108-18-137-133.washdc.fios.verizon.net) (Ping timeout: 256 seconds)
[02:20:47] *** Quits: abraham (~abraham@143.244.185.86) (Ping timeout: 256 seconds)
[02:20:47] *** Quits: blackbeard420 (~blackbear@45.33.85.133) (Ping timeout: 256 seconds)
[02:20:47] *** Quits: lowin (~lowin@user/lowin) (Ping timeout: 256 seconds)
[02:20:47] *** Quits: TVH767 (~TVH7@containerhost01.de01-nbg01.dev.ti-more.net) (Ping timeout: 256 seconds)
[02:20:47] *** Quits: cehteh (~ct@git.pipapo.org) (Ping timeout: 256 seconds)
[02:20:47] *** Quits: coc0nut (~coc0nut@user/coc0nut) (Ping timeout: 256 seconds)
[02:20:47] *** Quits: blinky42 (~quassel@user/blinky42) (Ping timeout: 256 seconds)
[02:20:47] *** Quits: oldtopman (~oldtopman@c-71-205-4-123.hsd1.co.comcast.net) (Ping timeout: 256 seconds)
[02:20:47] *** Quits: acidtonic (~acidtonic@162-17-146-153-static.hfc.comcastbusiness.net) (Ping timeout: 256 seconds)
[02:20:47] *** Quits: n1000 (~n1000@user/n1000) (Ping timeout: 256 seconds)
[02:20:47] *** Quits: andjjj23_ (~irc@107.170.228.47) (Ping timeout: 256 seconds)
[02:20:47] *** Quits: gtlsgamr (~gtlsgamr@user/gtlsgamr) (Ping timeout: 256 seconds)
[02:20:47] *** mormue1 is now known as mormue
[02:20:47] *** Quits: ntdll_ (~ntdll@shion.saiban.me) (Ping timeout: 256 seconds)
[02:20:47] *** Quits: koollman (~samson_t@user/koollman) (Ping timeout: 256 seconds)
[02:20:47] *** Quits: eeerik8 (~eeerik8@95.179.149.48) (Ping timeout: 256 seconds)
[02:20:47] *** Quits: Fish (~Fish@cartwheel.9grid.fr) (Ping timeout: 256 seconds)
[02:20:47] *** TVH7677 is now known as TVH767
[02:20:47] *** Quits: flynn (~mcbloch@user/flynn) (Ping timeout: 256 seconds)
[02:20:51] *** Viewday114 is now known as Viewday11
[02:20:51] *** noonien5 is now known as noonien
[02:20:51] *** teroshan0 is now known as teroshan
[02:20:51] *** abraham2 is now known as abraham
[02:20:51] *** flynn8 is now known as flynn
[02:20:53] *** Joins: blinky43 (~quassel@jabber.blinkylight.net)
[02:20:56] *** Joins: Praise- (~Fat@user/praise)
[02:21:02] *** Joins: manx (xuew@p200300e18f3aa800022215fffe03cf97.dip0.t-ipconnect.de)
[02:21:38] *** Joins: shachaf (~shachaf@user/shachaf)
[02:21:45] *** Joins: MrMobius_ (~MrMobius@pool-108-31-243-125.washdc.fios.verizon.net)
[02:21:54] *** Joins: sidy (~sidy@user/sidy)
[02:21:57] *** Joins: mrec (~markus@sundtek.de)
[02:22:01] *** Joins: Myth (~pi@173.233.125.203)
[02:22:03] *** Joins: Norkle (~norkle@admin.nasa-g0v.com)
[02:22:05] *** Joins: overrider (~overrider@user/overrider)
[02:22:07] *** Joins: eeerik8 (~eeerik8@95.179.149.48)
[02:22:08] *** Joins: silky (~silkworks@ctrl-c.club)
[02:22:10] *** Joins: cehteh (~ct@git.pipapo.org)
[02:22:21] *** Joins: koollman (samson_t@sp1.kooll.org)
[02:22:26] *** Joins: dustinm (~dustinm@static.38.6.217.95.clients.your-server.de)
[02:22:34] *** Joins: cross (~cross@spitfire.i.gajendra.net)
[02:22:34] *** Quits: Phil-Work (~phil@62.3.100.20) (Read error: Connection reset by peer)
[02:22:46] *** Joins: brdb (~alarm@24.61.226.255)
[02:22:57] *** Joins: whup_dup (~whupdup@pool-173-76-128-81.bstnma.fios.verizon.net)
[02:22:57] *** Joins: keur2 (~keur@segfault.fun)
[02:23:05] *** Quits: koollman (samson_t@sp1.kooll.org) (Changing host)
[02:23:05] *** Joins: koollman (samson_t@user/koollman)
[02:23:23] <SaltHilStroller_> ioxzev1z: yep
[02:23:33] <ioxzev1z> struct base { int type; int size; }; struct foo { struct base base; int a; int b; }; struct bar { struct base base; int x; int y; };
[02:24:01] <SaltHilStroller_> ioxzev1z: Yeah, I came to the same conclusion https://onlinegdb.com/VwJfH8dGN
[02:24:08] *** Joins: ntdll_ (~ntdll@user/ntdll)
[02:24:17] *** Joins: finalsummer (~finalsumm@user/finalsummer)
[02:24:33] <ioxzev1z> I don't personally see any problem with that as long as you document the code
[02:24:51] <ioxzev1z> struct foo foo = { 0 }; foo.base.type = x; etc
[02:25:24] *** Quits: MrMobius (~MrMobius@pool-108-31-243-125.washdc.fios.verizon.net) (Ping timeout: 272 seconds)
[02:25:57] *** MrMobius_ is now known as MrMobius
[02:25:58] <ioxzev1z> Maybe make struct base init_base(int type, int size) { struct base base = { .type = type; .size = size; }; return base; }
[02:26:02] *** Quits: whupdup (~whupdup@pool-173-76-128-81.bstnma.fios.verizon.net) (Ping timeout: 272 seconds)
[02:26:05] *** whup_dup is now known as whupdup
[02:26:17] <ioxzev1z> Then just struct foo foo; foo.base = init_base(...)
[02:26:18] *** Joins: n1000 (~n1000@user/n1000)
[02:26:25] <ioxzev1z> Or w/e
[02:27:19] *** Quits: sidy (~sidy@user/sidy) (Ping timeout: 272 seconds)
[02:27:25] *** Joins: Fish (~Fish@cartwheel.9grid.fr)
[02:27:37] *** Joins: sidy (~sidy@user/sidy)
[02:28:37] <ioxzev1z> Assuming you add enough members to base to make it worth writing an init function
[02:28:38] *** Joins: poprocks (~logan@user/poprocks)
[02:29:26] <SaltHilStroller_> ioxzev1z: yeah, I was thinking something similar. Is it possible to define data in a declaration?
[02:29:35] *** Quits: FatAlbert (~archer@user/tessio) (Quit: WeeChat 3.4)
[02:29:54] <SaltHilStroller_> struct base { int type }; struct foo { struct base base = { .type = 72 }; int a };
[02:30:03] <ioxzev1z> struct foo { int a; int b; }; struct foo foo = { .a = 1; .b = 2; };
[02:30:12] <ioxzev1z> ,cc struct foo { int a; int b; }; struct foo foo = { .a = 1; .b = 2; };
[02:30:13] <candide> ioxzev1z: error: expected '}' before ';' token
[02:30:29] <sham1> Comma Vs semicolon
[02:30:40] <ioxzev1z> ,cc struct foo { int a; int b; }; struct foo foo = { .a = 1, .b = 2 };
[02:30:42] <candide> ioxzev1z: no output: foo = {a = 1, b = 2}
[02:31:05] <ioxzev1z> ,cc struct foo { int a; int b; }; struct foo foo = { 1, 2 };
[02:31:07] <candide> ioxzev1z: Same output.
[02:31:24] <SaltHilStroller_> ,cc struct base { int type; }; struct foo { struct base base = { .type = 72 }; int a; };
[02:31:25] <candide> SaltHilStroller_: error: expected ':', ',', ';', '}' or '__attribute__' before '=' token
[02:31:34] <ioxzev1z> SaltHilStroller_, that won't work
[02:31:50] <SaltHilStroller_> ,cc struct base { int type; }; struct foo { static const struct base base = { .type = 72 }; int a; };
[02:31:51] <candide> SaltHilStroller_: error: expected specifier-qualifier-list before 'static'
[02:32:06] <SaltHilStroller_> Dang, that would have been nice
[02:33:05] *** Quits: kaph (~kaph@net-109-116-124-149.cust.vodafonedsl.it) (Read error: Connection reset by peer)
[02:33:05] *** Joins: oldtopman (~oldtopman@c-71-205-4-123.hsd1.co.comcast.net)
[02:33:29] <SaltHilStroller_> Okay thinking about that more, duh static would not work. Would be nice if you could *always* partially initialize a struct
[02:33:46] *** Joins: pizdets_ (~pizdets@183.182.111.173)
[02:33:56] *** Joins: Forty-Bot (~kvirc@pool-108-18-137-133.washdc.fios.verizon.net)
[02:34:04] *** Joins: andjjj23_ (~irc@107.170.228.47)
[02:34:06] *** Joins: Church (~aleph@68.161.207.188)
[02:34:23] *** Joins: kkd (~kkd@255.205.154.104.bc.googleusercontent.com)
[02:34:26] *** Quits: pizdets (~pizdets@183.182.111.139) (Ping timeout: 265 seconds)
[02:34:58] <ioxzev1z> ,cc struct foo { int a; } foo_default = { 1 }; typedef struct foo foo_s; foo_s f = foo_default;
[02:35:00] <candide> ioxzev1z: no output: foo_default = {a = 1}; f = {a = 1}
[02:35:11] <ioxzev1z> Found via SO
[02:35:42] *** Quits: blackbeard420_ (blackbeard@2600:3c03::f03c:91ff:fe92:3f2a) (Quit: ZNC 1.8.2 - https://znc.in)
[02:35:53] *** Joins: blackbeard420 (blackbeard@2600:3c03::f03c:91ff:fe92:3f2a)
[02:36:08] *** Joins: analognoise (~analognoi@ip98-176-154-48.sd.sd.cox.net)
[02:36:12] <ioxzev1z> SaltHilStroller_, So you basically just make a default value struct, then when you create new ones just assign from the default as above
[02:37:28] <ioxzev1z> ,cc struct base { int type; } base_default = { 72 }; typedef struct base base_d; base_d b = base_default;
[02:37:30] <candide> ioxzev1z: no output: base_default = {type = 72}; b = {type = 72}
[02:37:45] <ioxzev1z> Don't actually need the typedef
[02:37:58] <ioxzev1z> ,cc struct base { int type; } base_default = { 72 }; struct base b = base_default;
[02:38:00] <candide> ioxzev1z: Same output.
[02:40:19] *** Quits: kitsunenokenja (~kitsunech@68.91.220.96) (Ping timeout: 256 seconds)
[02:41:13] *** Joins: hiroshi_ (~freedom@151.35.86.188)
[02:41:35] <SaltHilStroller_> Wow, pretty cool!
[02:42:31] <ioxzev1z> It's a shame that C doesn't allow = in struct declarations
[02:42:46] *** Quits: mrig (~mrig@user/mrig) (Quit: WeeChat 2.8)
[02:43:41] <SaltHilStroller_> True
[02:44:08] <SaltHilStroller_> Getting dangerously close to C++ struct constructors
[02:44:44] <ioxzev1z> C++ does have some good stuff
[02:44:47] *** Joins: Betal (~Betal@user/betal)
[02:45:08] <SaltHilStroller_> agreed
[02:47:55] <nomagno> I'm kinda in favour of making macros for designated initializers
[02:48:29] *** Quits: shivesh (~shivesh@user/shivesh) (Quit: leaving)
[02:48:55] *** Quits: Myth (~pi@173.233.125.203) (Quit: WeeChat 3.0)
[02:48:57] <ioxzev1z> #define base_init { 2 }\n struct base b = base_init ?
[02:49:08] <nomagno> Yeah
[02:49:32] <nomagno> Though all caps because naming conventions, and I'd add the explicit cast
[02:49:57] <fizzie> Pet peeve: a compound literal ain't a cast.
[02:51:39] <nomagno> I mean, (struct base){ 2 }
[02:51:50] <nomagno> Looks awfully like a cast to be.
[02:51:54] <ioxzev1z> nomagno, not needed
[02:51:55] <fizzie> It's not, though.
[02:52:00] <fizzie> It's a compound literal, not a cast.
[02:52:02] *** Quits: bebyx (~Thunderbi@user/bebyx) (Ping timeout: 240 seconds)
[02:52:06] <nomagno> Its not yeah
[02:52:10] <nomagno> But that's nitpicky
[02:52:15] <ioxzev1z> struct base b = (struct base) { 2 }; doesn't really make sense
[02:52:17] <fizzie> Like I said, pet peeve.
[02:52:34] <nomagno> ioxzev1z its needed for assignment outside of declaration
[02:52:43] *** Joins: soapsudsxx (~soapsudsx@209.221.40.142)
[02:52:47] <ioxzev1z> Ah, forgot
[02:53:34] *** Quits: oriba (~oriba@dynamic-078-055-220-151.78.55.pool.telefonica.de) (Quit: https://quassel-irc.org - Chat comfortably. Anywhere.)
[02:54:29] <SaltHilStroller_> struct base { int type; int size; }; struct foo { struct base base; int a; int b; }; struct bar { struct base base; int x; int y; };
[02:54:54] <SaltHilStroller_> The one downside to this^, is all child structs must ensure not only that they have the header struct, but that it's also called header
[02:55:43] <ioxzev1z> Which is something you note in the documentation. From what I recall you want someone to extend your library, meaning they would have to read the docs to even begin
[02:55:59] <SaltHilStroller_> True. It's just unfortunately error prone
[02:57:44] *** Quits: rampart (~rampart@2.sub-174-250-16.myvzw.com) (Remote host closed the connection)
[02:58:02] <fizzie> If your functions require a `struct base *` argument, it's not like they could provide that from their extension types if they didn't have a `struct base` subobject in them.
[02:58:30] *** Quits: poprocks (~logan@user/poprocks) (Read error: No route to host)
[02:59:31] *** Joins: rampart (~rampart@2.sub-174-250-20.myvzw.com)
[02:59:42] <SaltHilStroller_> fizzie: True. But my function is basically void write(void* data);
[03:00:03] <ioxzev1z> SaltHilStroller_, any way to explain how that specific function works?
[03:00:22] *** Joins: ferdna (~ferdna@user/ferdna)
[03:00:27] <fizzie> Wondering why's it declared like that, if it only takes structures that must contain a `struct base *`.
[03:00:33] *** Joins: poprocks (~logan@user/poprocks)
[03:00:39] <SaltHilStroller_> ioxzev1z: Err, it also takes a size param
[03:00:53] <SaltHilStroller_> fizzie: It's a generic IPC transfer function that I'm utilizing for my library
[03:02:25] <ioxzev1z> SaltHilStroller_, is your code on github?
[03:02:35] *** Quits: plastico (~plastico@neomutt/plastico) (Quit: WeeChat 3.4)
[03:02:41] <SaltHilStroller_> Unfortunately nope
[03:04:17] *** Quits: cursey (~cursey@user/cursey) (Quit: bye)
[03:04:36] *** Joins: cursey (~cursey@user/cursey)
[03:06:32] *** Quits: LucaTM (~LucaTM@user/lucatm) (Quit: Textual IRC Client: www.textualapp.com)
[03:07:01] *** Joins: kitsunenokenja (~kitsunech@68.91.220.96)
[03:08:39] *** Joins: Zambyte (~Zambyte@cpe-104-228-60-14.nycap.res.rr.com)
[03:11:32] *** Joins: kaph (~kaph@net-109-116-124-149.cust.vodafonedsl.it)
[03:12:43] *** Joins: Nadalle (~elladan@user/elladan)
[03:13:32] *** Quits: Elladan (~elladan@user/elladan) (Ping timeout: 240 seconds)
[03:13:32] *** Nadalle is now known as Elladan
[03:13:49] <ioxzev1z> Difficult to help without seeing the code or design
[03:15:24] *** Joins: motherfsck (~motherfsc@user/motherfsck)
[03:15:32] *** Quits: bnchs (~bnchs@160.177.15.129) (Ping timeout: 240 seconds)
[03:17:40] *** Quits: Akuli (~Akuli@82-203-164-13.bb.dnainternet.fi) (Quit: Akuli)
[03:17:47] *** Joins: chasmo77 (~chas77@c-71-193-246-4.hsd1.or.comcast.net)
[03:18:17] *** Quits: Elladan (~elladan@user/elladan) (Ping timeout: 256 seconds)
[03:18:22] *** Joins: Nadalle (~elladan@user/elladan)
[03:18:34] *** Quits: hashfunc133c (~user@2601:5c0:c280:7090:8c1e:afa3:b36b:39be) (Ping timeout: 260 seconds)
[03:18:47] *** Nadalle is now known as Elladan
[03:19:07] *** Quits: ferdna (~ferdna@user/ferdna) (Quit: Leaving)
[03:20:33] *** Quits: Techcable (~Techcable@168.235.93.147) (Ping timeout: 256 seconds)
[03:21:14] *** Quits: cthi (~cthi@097-082-138-151.res.spectrum.com) (Remote host closed the connection)
[03:22:30] *** Quits: motherfsck (~motherfsc@user/motherfsck) (Quit: quit)
[03:23:40] *** Quits: clamiax (~clamiax@net-93-147-242-222.cust.vodafonedsl.it) (Ping timeout: 272 seconds)
[03:24:20] *** Joins: cthi (~cthi@097-082-138-151.res.spectrum.com)
[03:26:18] *** Joins: ferdna (~ferdna@user/ferdna)
[03:26:23] *** Quits: whupdup (~whupdup@pool-173-76-128-81.bstnma.fios.verizon.net) (Quit: Going offline, see ya! (www.adiirc.com))
[03:27:00] *** Quits: ioxzev1z (~ioxzev1z@user/ioxzev1z) (Quit: Leaving)
[03:28:34] *** Joins: masoudd (~masoudd@user/masoudd)
[03:32:27] *** Quits: Burgundy (~NA@86.121.143.206) (Ping timeout: 256 seconds)
[03:32:30] *** Quits: APic (apic@apic.name) (Quit: [TLS] Client upgrade)
[03:32:58] *** Joins: APic (apic@apic.name)
[03:35:15] *** Quits: pulse (~pulse@user/pulse) (Ping timeout: 250 seconds)
[03:35:35] *** Quits: hiroshi_ (~freedom@151.35.86.188) (Quit: hiroshi_)
[03:37:25] *** Quits: AmR (~AmREiSa@156.199.192.24) (Ping timeout: 250 seconds)
[03:38:14] *** Quits: Wulf (~Wulf@user/wulf) (Ping timeout: 272 seconds)
[03:39:31] *** Joins: Guest8452 (~Guest@host129.190-139-78.telecom.net.ar)
[03:39:39] *** Joins: Wulf (~Wulf@user/wulf)
[03:46:11] *** Quits: orestarod (~orestarod@2a02:2149:8b20:700:2b9d:7f86:7169:61c0) (Ping timeout: 245 seconds)
[03:48:12] *** Quits: cart_ (~cart@host-78-144-125-214.as13285.net) (Quit: Konversation terminated!)
[03:52:45] *** Quits: freakazoid333 (~matt@2603:9000:cf03:86c3:49ba:4576:8008:625c) (Read error: Connection reset by peer)
[03:53:23] *** Joins: freakazoid333 (~matt@2603:9000:cf03:86c3:49ba:4576:8008:625c)
[03:53:37] *** Quits: Y4knotiS (~YaknotiS@cpc1-cmbg18-2-0-cust87.5-4.cable.virginm.net) (Ping timeout: 240 seconds)
[03:56:18] *** Quits: kenanmarasli (~kenanmara@user/kenanmarasli) (Quit: Leaving)
[04:00:20] *** Quits: vicfred (~vicfred@user/vicfred) (Quit: Leaving)
[04:01:31] *** Joins: kurahaupo_ (~kurahaupo@pa49-197-107-54.pa.qld.optusnet.com.au)
[04:02:07] *** Quits: kurahaupo (~kurahaupo@115.69.27.211) (Ping timeout: 250 seconds)
[04:04:21] *** Joins: whupdup (~whupdup@pool-173-76-128-81.bstnma.fios.verizon.net)
[04:04:55] *** Joins: constxd (~brad@142.134.79.191)
[04:04:56] *** Quits: Rounin (~david@84.212.130.215) (Ping timeout: 245 seconds)
[04:10:05] *** Joins: xiongxin (~Thunderbi@117.136.39.218)
[04:10:49] *** Quits: kaph (~kaph@net-109-116-124-149.cust.vodafonedsl.it) (Read error: Connection reset by peer)
[04:11:23] *** Quits: jmiehe (~Thunderbi@user/jmiehe) (Quit: jmiehe)
[04:11:48] *** Quits: Maxdamantus (~Maxdamant@user/maxdamantus) (Ping timeout: 240 seconds)
[04:13:38] *** Quits: acerbic (~acerbic@cs-xdata-50-86-53-91.cspire.com) (Read error: Connection reset by peer)
[04:19:33] *** Joins: trinityyy[m] (~trinityyy@2001:470:69fc:105::1:cefa)
[04:19:54] *** Quits: rampart (~rampart@2.sub-174-250-20.myvzw.com) (Remote host closed the connection)
[04:20:35] *** Joins: rampart (~rampart@2.sub-174-250-20.myvzw.com)
[04:20:50] *** Joins: Viewday116 (~Viewday@user/viewday)
[04:21:36] *** Quits: andro (~andro@user/andro) (Ping timeout: 245 seconds)
[04:23:12] *** Quits: Viewday11 (~Viewday@user/viewday) (Ping timeout: 272 seconds)
[04:23:13] *** Viewday116 is now known as Viewday11
[04:24:26] *** Quits: dogbert2 (~Bill@ip70-170-79-7.lv.lv.cox.net) (Remote host closed the connection)
[04:24:44] *** Joins: dogbert2 (~Bill@ip70-170-79-7.lv.lv.cox.net)
[04:26:38] *** Quits: Klinda (~superleag@user/klinda) (Quit: Konversation terminated!)
[04:26:58] *** Joins: Maxdamantus (~Maxdamant@user/maxdamantus)
[04:27:21] <SaltHilStroller_> Valid
[04:27:41] <SaltHilStroller_> Pretty happy with how it turned out in the end though! Much cleaner than the union I was using beforew
[04:30:52] <SaltHilStroller_> Basically like this: https://onlinegdb.com/H-_vR0kxr
[04:30:56] *** Quits: freep (~freepppp@193.92.35.32.dsl.dyn.forthnet.gr) (Read error: Connection reset by peer)
[04:32:04] *** Joins: acerbic (~acerbic@cs-xdata-50-86-53-91.cspire.com)
[04:36:45] *** Quits: zeenk (~zeenk@2a02:2f04:a30d:1300:51a3:bcfc:6cda:9fc5) (Quit: Konversation terminated!)
[04:37:11] *** Quits: whupdup (~whupdup@pool-173-76-128-81.bstnma.fios.verizon.net) (Quit: Going offline, see ya! (www.adiirc.com))
[04:37:19] *** Joins: danielcamiel (~danielcam@user/danielcamiel)
[04:38:12] *** Quits: random-nick (~random-ni@87.116.176.196) (Ping timeout: 240 seconds)
[04:39:10] *** Quits: geranim0 (~geranim0@modemcable242.171-178-173.mc.videotron.ca) (Remote host closed the connection)
[04:44:04] *** Joins: andro (~andro@user/andro)
[04:45:04] <SaltHilStroller_> Also ran into an issue with the default struct mentioned above. Unfortunately cannot be used to assign to a static struct. I instead just replaced it with a macro for a compound literal
[04:45:37] *** Quits: Satin (uid193953@user/Seten) (Quit: Connection closed for inactivity)
[04:46:37] *** Quits: skapata (~Skapata@user/skapata) (Remote host closed the connection)
[04:47:16] *** Joins: mniip (mniip@libera/staff/mniip)
[04:47:49] *** Quits: zlg (~zlg@user/zlg) (Ping timeout: 256 seconds)
[04:52:12] *** Joins: Satin (uid193953@user/Seten)
[04:52:23] *** Quits: Tangent-Man (~Tang3nt-M@cpc145602-basl14-2-0-cust33.20-1.cable.virginm.net) (Quit: Leaving)
[04:52:53] *** Quits: FluffyMask (~masque@user/fluffymask) (Quit: WeeChat 3.4)
[04:53:57] *** Quits: Maxdamantus (~Maxdamant@user/maxdamantus) (Ping timeout: 240 seconds)
[04:56:07] *** Joins: Maxdamantus (~Maxdamant@user/maxdamantus)
[04:57:24] *** Quits: manjaroi3 (~manjaro-i@125.131.131.26) (Ping timeout: 272 seconds)
[04:57:42] *** Joins: loganlee[gnu] (~Thunderbi@user/loganlee)
[05:02:21] *** Joins: Alhazred (~Alhazred@45.129.56.151)
[05:03:18] <constxd> kings
[05:04:33] *** Quits: b1101 (~b1101@pool-100-33-96-155.nycmny.fios.verizon.net) (Quit: b1101)
[05:07:05] *** Quits: loganlee[gnu] (~Thunderbi@user/loganlee) (Quit: loganlee[gnu])
[05:08:17] *** Quits: danielcamiel (~danielcam@user/danielcamiel) (Ping timeout: 240 seconds)
[05:09:49] *** Quits: kts (~kts@103.73.237.49) (Ping timeout: 240 seconds)
[05:10:11] *** Joins: Techcable (~Techcable@168.235.93.147)
[05:11:37] *** Quits: adip_ (~adip@den37.neoplus.adsl.tpnet.pl) (Ping timeout: 256 seconds)
[05:11:37] *** Quits: adip (~adip@den37.neoplus.adsl.tpnet.pl) (Ping timeout: 256 seconds)
[05:13:19] *** Quits: boB_K7IQ (~boB_K7IQ@184-98-165-139.phnx.qwest.net) ()
[05:13:53] *** Quits: xiongxin (~Thunderbi@117.136.39.218) (Ping timeout: 256 seconds)
[05:18:39] *** Joins: FlipFlop (~FlipFlop@user/fl1pfl0p)
[05:18:56] *** Quits: Guest8452 (~Guest@host129.190-139-78.telecom.net.ar) (Remote host closed the connection)
[05:19:46] *** Quits: seninha (~chatzilla@user/seninha) (Quit: ChatZilla 0.9.93 [SeaMonkey 2.53.10.2/20220226204633])
[05:21:13] *** Joins: jmiehe (~Thunderbi@user/jmiehe)
[05:21:40] *** Joins: oxfuxxx (~oxfuxxx@217.138.213.30)
[05:24:03] *** Joins: CatCow (~wtf_over@c-73-96-109-206.hsd1.or.comcast.net)
[05:28:48] *** Joins: xiongxin (~Thunderbi@117.136.39.218)
[05:30:13] *** Quits: freakazoid333 (~matt@2603:9000:cf03:86c3:49ba:4576:8008:625c) (Read error: Connection reset by peer)
[05:30:45] *** Joins: MsPoop (~MsPoop@S01069050ca4e3573.cg.shawcable.net)
[05:30:53] *** Joins: freakazoid333 (~matt@2603:9000:cf03:86c3:49ba:4576:8008:625c)
[05:31:48] *** Joins: zlg (~zlg@user/zlg)
[05:31:59] *** Quits: Maxdamantus (~Maxdamant@user/maxdamantus) (Ping timeout: 268 seconds)
[05:32:28] *** Quits: MsPoop (~MsPoop@S01069050ca4e3573.cg.shawcable.net) (Client Quit)
[05:33:25] *** Joins: Maxdamantus (~Maxdamant@user/maxdamantus)
[05:33:35] *** Joins: AverageJoe_ (~AverageJo@user/AverageJoe)
[05:35:17] *** Quits: oxfuxxx (~oxfuxxx@217.138.213.30) (Ping timeout: 240 seconds)
[05:36:08] *** Quits: AverageJoe (~AverageJo@user/AverageJoe) (Ping timeout: 252 seconds)
[05:37:14] *** Joins: Maxdaman1us (~Maxdamant@user/maxdamantus)
[05:40:13] *** Quits: Maxdamantus (~Maxdamant@user/maxdamantus) (Ping timeout: 240 seconds)
[05:41:44] *** Quits: alch (~alch@151.44.63.69) (Ping timeout: 272 seconds)
[05:42:58] *** Joins: alch (~alch@151.44.89.96)
[05:44:19] *** Joins: adip (~adip@den37.neoplus.adsl.tpnet.pl)
[05:44:21] *** Joins: adip_ (~adip@den37.neoplus.adsl.tpnet.pl)
[05:45:00] *** Joins: MsPoop (~MsPoop@S01069050ca4e3573.cg.shawcable.net)
[05:46:22] *** Joins: freddietilley (~freddieti@2a02-a454-7f89-1-88e6-aff5-2f6f-14b8.fixed6.kpn.net)
[05:48:41] *** Joins: oxfuxxx (~oxfuxxx@217.138.213.30)
[05:51:08] *** Quits: freddietilley (~freddieti@2a02-a454-7f89-1-88e6-aff5-2f6f-14b8.fixed6.kpn.net) (Ping timeout: 250 seconds)
[05:57:51] *** Quits: acerbic (~acerbic@cs-xdata-50-86-53-91.cspire.com) (Ping timeout: 256 seconds)
[05:58:05] *** Quits: jmiehe (~Thunderbi@user/jmiehe) (Quit: jmiehe)
[06:08:51] *** Quits: oxfuxxx (~oxfuxxx@217.138.213.30) (Ping timeout: 256 seconds)
[06:11:04] *** Quits: justAstache (~justache@user/justache) (Read error: Connection reset by peer)
[06:11:43] *** Joins: justAstache (~justache@user/justache)
[06:12:00] *** Quits: andro (~andro@user/andro) (Remote host closed the connection)
[06:12:21] *** Joins: andro (~andro@user/andro)
[06:13:05] *** Joins: KimK (~KimK@2600:8803:740b:4700:4a5b:39ff:fe0b:57d2)
[06:15:16] *** Joins: oxfuxxx (~oxfuxxx@217.138.213.30)
[06:17:01] *** Quits: ferdna (~ferdna@user/ferdna) (Quit: Leaving)
[06:18:46] *** Joins: hashfunc133c (~user@2601:5c0:c280:7090:8c1e:afa3:b36b:39be)
[06:19:20] *** Joins: Inline__ (~Inline@p200300cd470a8800e4003c5147c7d559.dip0.t-ipconnect.de)
[06:19:37] *** Quits: oxfuxxx (~oxfuxxx@217.138.213.30) (Ping timeout: 256 seconds)
[06:20:25] *** Quits: CatCow (~wtf_over@c-73-96-109-206.hsd1.or.comcast.net) (Quit: Textual IRC Client: www.textualapp.com)
[06:20:57] *** Joins: Viewday115 (~Viewday@user/viewday)
[06:21:48] *** Quits: SaltHilStroller_ (~SaltHillS@206.223.160.26) (Ping timeout: 240 seconds)
[06:21:54] *** Quits: Inline (~Inline@p200300cd470d31009f2917ead5869a68.dip0.t-ipconnect.de) (Ping timeout: 250 seconds)
[06:22:28] *** Joins: nostart (~nostar@45.14.195.237)
[06:22:30] *** Quits: Viewday11 (~Viewday@user/viewday) (Read error: Connection reset by peer)
[06:22:30] *** Viewday115 is now known as Viewday11
[06:23:49] *** Quits: nostart (~nostar@45.14.195.237) (Client Quit)
[06:24:36] *** Quits: nostar (~nostar@2601:406:4100:34d:8f4:5ea7:30b2:b7e6) (Ping timeout: 240 seconds)
[06:24:43] *** Quits: constxd (~brad@142.134.79.191) (Ping timeout: 256 seconds)
[06:27:19] *** Joins: oxfuxxx (~oxfuxxx@217.138.213.28)
[06:27:34] *** Joins: dave0 (~davezero@069.d.003.ncl.iprimus.net.au)
[06:27:43] *** Joins: ironman (~ironman@2405:201:1010:b033:bad0:8910:44c9:da61)
[06:31:42] *** Quits: oxfuxxx (~oxfuxxx@217.138.213.28) (Ping timeout: 252 seconds)
[06:34:08] *** Joins: eelstrebor (~eelstrebo@198-178-29-136.scb.ne.static.allophone.net)
[06:34:56] *** Quits: banc- (banc@gateway/vpn/airvpn/banc) (Ping timeout: 272 seconds)
[06:35:30] *** Quits: Alhazred (~Alhazred@45.129.56.151) (Ping timeout: 268 seconds)
[06:36:56] *** Joins: Alhazred (~Alhazred@86.106.74.43)
[06:37:56] *** Quits: retroid_ (~retro@2e40edd9.skybroadband.com) (Ping timeout: 250 seconds)
[06:39:00] *** Joins: oxfuxxx (~oxfuxxx@217.138.213.29)
[06:39:25] *** Quits: rampart (~rampart@2.sub-174-250-20.myvzw.com) (Ping timeout: 240 seconds)
[06:41:50] *** Joins: geowiesnot (~user@5-51-190-244.abo.bbox.fr)
[06:44:33] *** Quits: joev (~joev@user/joev) (Ping timeout: 256 seconds)
[06:45:03] *** Quits: xiongxin (~Thunderbi@117.136.39.218) (Quit: xiongxin)
[06:45:38] *** Joins: joev (~joev@user/joev)
[06:51:24] *** Quits: oxfuxxx (~oxfuxxx@217.138.213.29) (Ping timeout: 272 seconds)
[06:52:18] *** Joins: banc (banc@gateway/vpn/airvpn/banc)
[06:55:01] *** Joins: CatCow (~wtf_over@c-73-96-109-206.hsd1.or.comcast.net)
[06:58:19] *** Joins: oxfuxxx (~oxfuxxx@217.138.213.30)
[06:58:50] *** Joins: zer0x_ (~zer0x@58.186.65.98)
[06:59:10] *** Quits: geowiesnot (~user@5-51-190-244.abo.bbox.fr) (Ping timeout: 250 seconds)
[06:59:37] *** Quits: Maxdaman1us (~Maxdamant@user/maxdamantus) (Ping timeout: 256 seconds)
[07:01:27] *** Joins: Maxdamantus (~Maxdamant@user/maxdamantus)
[07:03:11] *** Joins: retroid_ (~retro@2e40edd9.skybroadband.com)
[07:04:12] *** Quits: FlipFlop (~FlipFlop@user/fl1pfl0p) (Ping timeout: 240 seconds)
[07:04:56] *** Quits: eelstrebor (~eelstrebo@198-178-29-136.scb.ne.static.allophone.net) (Quit: Ex-Chat)
[07:05:58] *** Quits: oxfuxxx (~oxfuxxx@217.138.213.30) (Ping timeout: 272 seconds)
[07:07:23] *** Joins: Emet-Selch (~haise01@user/haise01)
[07:10:26] *** Quits: phrosty (~phrosty@c-73-225-175-19.hsd1.wa.comcast.net) (Ping timeout: 250 seconds)
[07:10:32] *** Quits: Azem (~haise01@user/haise01) (Ping timeout: 240 seconds)
[07:11:38] *** Quits: MsPoop (~MsPoop@S01069050ca4e3573.cg.shawcable.net) (Quit: Client closed)
[07:12:18] *** Joins: groundboi (~groundboi@user/groundboi)
[07:13:41] *** Joins: oxfuxxx (~oxfuxxx@217.138.213.29)
[07:16:17] *** Quits: mendel_munkis_ (~mendel_mu@ool-ae2cb229.dyn.optonline.net) (Ping timeout: 256 seconds)
[07:18:33] *** Joins: munkis (~mendel_mu@ool-ae2cb229.dyn.optonline.net)
[07:20:46] *** Quits: oxfuxxx (~oxfuxxx@217.138.213.29) (Ping timeout: 260 seconds)
[07:27:08] *** Joins: b1101 (~b1101@pool-100-33-96-155.nycmny.fios.verizon.net)
[07:27:36] *** Joins: oxfuxxx (~oxfuxxx@217.138.213.29)
[07:30:47] *** Quits: freakazoid333 (~matt@2603:9000:cf03:86c3:49ba:4576:8008:625c) (Remote host closed the connection)
[07:31:22] *** Joins: freakazoid333 (~matt@2603:9000:cf03:86c3:49ba:4576:8008:625c)
[07:34:17] *** Joins: Inline (~Inline@p200300cd4710a900587aa636b2d58f82.dip0.t-ipconnect.de)
[07:36:00] *** Quits: Inline__ (~Inline@p200300cd470a8800e4003c5147c7d559.dip0.t-ipconnect.de) (Ping timeout: 250 seconds)
[07:36:02] *** Quits: supakeen (~user@python/site-packages/supakeen) (Quit: WeeChat 3.4)
[07:36:05] *** Quits: AverageJoe_ (~AverageJo@user/AverageJoe) (Read error: Connection reset by peer)
[07:36:32] *** Joins: supakeen (~user@python/site-packages/supakeen)
[07:37:18] *** Quits: kitsunenokenja (~kitsunech@68.91.220.96) (Ping timeout: 250 seconds)
[07:37:41] *** Joins: wroathe (~wroathe@206-55-188-8.fttp.usinternet.com)
[07:37:41] *** Quits: wroathe (~wroathe@206-55-188-8.fttp.usinternet.com) (Changing host)
[07:37:41] *** Joins: wroathe (~wroathe@user/wroathe)
[07:38:13] *** Quits: dec0d3r (~dec0d3r@2001:8003:480a:e00:e07:e7c3:7efc:ed0f) (Quit: Leaving)
[07:49:09] *** Quits: oxfuxxx (~oxfuxxx@217.138.213.29) (Ping timeout: 256 seconds)
[07:49:53] *** Joins: freddietilley (~freddieti@2a02-a454-7f89-1-88e6-aff5-2f6f-14b8.fixed6.kpn.net)
[07:50:37] *** Quits: hashfunc133c (~user@2601:5c0:c280:7090:8c1e:afa3:b36b:39be) (Ping timeout: 240 seconds)
[07:55:00] *** Quits: freddietilley (~freddieti@2a02-a454-7f89-1-88e6-aff5-2f6f-14b8.fixed6.kpn.net) (Ping timeout: 240 seconds)
[07:55:14] *** Quits: shibboleth (~shibbolet@user/shibboleth) (Quit: shibboleth)
[07:56:13] *** Joins: oxfuxxx (~oxfuxxx@217.138.213.28)
[07:58:38] *** Joins: hinata (~hinata@2409:4042:d16:67df:70f2:2fcd:8fb8:2811)
[08:01:03] *** Quits: oxfuxxx (~oxfuxxx@217.138.213.28) (Ping timeout: 256 seconds)
[08:05:36] *** Joins: boB_K7IQ (~boB_K7IQ@184-98-165-139.phnx.qwest.net)
[08:09:17] *** Quits: Maxdamantus (~Maxdamant@user/maxdamantus) (Ping timeout: 240 seconds)
[08:11:18] *** Joins: Maxdamantus (~Maxdamant@user/maxdamantus)
[08:13:51] *** Joins: Maven009 (~Maven009@123.118.154.236)
[08:20:58] *** Joins: Viewday118 (~Viewday@user/viewday)
[08:21:50] *** gtlsgamr_ is now known as gtlsgamr
[08:22:35] *** Quits: Viewday11 (~Viewday@user/viewday) (Ping timeout: 256 seconds)
[08:22:35] *** Viewday118 is now known as Viewday11
[08:23:33] *** Joins: oxfuxxx (~oxfuxxx@217.138.213.28)
[08:23:35] *** Quits: alex11 (~alex11@user/alex11) (Read error: Connection reset by peer)
[08:24:01] *** Quits: Akiva (~Akiva@user/Akiva) (Ping timeout: 256 seconds)
[08:24:38] *** Joins: Akiva (~Akiva@user/Akiva)
[08:28:07] *** Quits: Maven009 (~Maven009@123.118.154.236) (Quit: Going offline, see ya! (www.adiirc.com))
[08:28:15] *** Quits: oxfuxxx (~oxfuxxx@217.138.213.28) (Ping timeout: 256 seconds)
[08:28:24] *** Quits: Zambyte (~Zambyte@cpe-104-228-60-14.nycap.res.rr.com) (Quit: leaving)
[08:29:54] *** Joins: freakazoid343 (~matt@2603:9000:cf03:86c3:9bd:2376:50d7:5ec0)
[08:33:07] *** Quits: freakazoid333 (~matt@2603:9000:cf03:86c3:49ba:4576:8008:625c) (Ping timeout: 256 seconds)
[08:34:38] *** Quits: cryptonector (~nico@24.28.108.183) (Remote host closed the connection)
[08:35:19] *** Quits: CatCow (~wtf_over@c-73-96-109-206.hsd1.or.comcast.net) (Quit: Textual IRC Client: www.textualapp.com)
[08:35:35] *** Quits: nuh^ (~nuh@207.243.108.170) (Remote host closed the connection)
[08:36:42] *** Joins: geowiesnot (~user@5-51-190-244.abo.bbox.fr)
[08:39:29] *** Joins: cryptonector (~nico@24.28.108.183)
[08:39:48] *** Quits: joev (~joev@user/joev) (Ping timeout: 240 seconds)
[08:40:23] *** Joins: dasrael (~rabbit@user/dasrael)
[08:40:57] *** Joins: joev (~joev@user/joev)
[08:44:23] *** Joins: tmpm697 (~tmpm697@171.224.179.36)
[08:48:05] *** Quits: wroathe (~wroathe@user/wroathe) (Ping timeout: 256 seconds)
[08:49:57] *** Joins: vysn (~vysn@user/vysn)
[08:51:47] *** Quits: Xgc (~Xgc@user/xgc) (Ping timeout: 256 seconds)
[08:53:28] *** Joins: phrosty (~phrosty@c-73-225-175-19.hsd1.wa.comcast.net)
[08:55:07] *** Joins: Xgc (~Xgc@user/xgc)
[09:08:44] *** Joins: kts (~kts@103.73.237.255)
[09:21:16] *** Joins: vicfred (~vicfred@user/vicfred)
[09:22:40] *** Joins: alex11 (~alex11@user/alex11)
[09:24:27] *** Quits: soapsudsxx (~soapsudsx@209.221.40.142) (Remote host closed the connection)
[09:24:57] *** Quits: Alhazred (~Alhazred@86.106.74.43) (Ping timeout: 252 seconds)
[09:25:18] *** Quits: phrosty (~phrosty@c-73-225-175-19.hsd1.wa.comcast.net) (Ping timeout: 272 seconds)
[09:26:12] *** Joins: loganlee[gnu] (~Thunderbi@user/loganlee)
[09:26:48] *** Joins: Alhazred (~Alhazred@s91904425.blix.com)
[09:26:52] *** Joins: savolla (~quassel@84.44.28.28)
[09:27:57] *** Quits: loganlee[gnu] (~Thunderbi@user/loganlee) (Client Quit)
[09:28:49] *** Joins: fe23 (~fe23@2409:8a34:462:2ab0:5089:282b:531b:5aca)
[09:31:25] *** Quits: kts (~kts@103.73.237.255) (Quit: Konversation terminated!)
[09:31:42] *** Joins: HaMsTeRs (~Thunderbi@210.3.213.4)
[09:32:07] *** Joins: bzng (~bzng4@188-23-202-239.adsl.highway.telekom.at)
[09:35:07] *** Quits: geowiesnot (~user@5-51-190-244.abo.bbox.fr) (Ping timeout: 256 seconds)
[09:39:25] *** suss` is now known as suss
[09:39:38] *** Quits: savolla (~quassel@84.44.28.28) (Remote host closed the connection)
[09:39:54] *** Quits: alch (~alch@151.44.89.96) (Read error: Connection reset by peer)
[09:43:15] *** Joins: alch (~alch@151.44.13.189)
[09:46:10] *** Quits: soul-d (~uknown@user/soul-d) (Read error: Connection reset by peer)
[09:51:39] *** Quits: koo5_ (~quassel@51.140.155.227) (Quit: http://quassel-irc.org - Chat comfortably. Anywhere.)
[09:52:33] *** Joins: koo5_ (~quassel@51.140.155.227)
[09:53:15] *** Quits: knusbaum (~knusbaum@23.249.37.254) (Ping timeout: 256 seconds)
[09:54:12] *** Quits: mixfix41 (~homefame@user/mixfix41) (Ping timeout: 240 seconds)
[09:56:10] *** Joins: knusbaum (~knusbaum@23.249.37.254)
[09:58:05] *** Joins: frost (~frost@user/frost)
[10:00:03] *** Quits: Alhazred (~Alhazred@s91904425.blix.com) (Ping timeout: 256 seconds)
[10:00:46] *** Quits: adip_ (~adip@den37.neoplus.adsl.tpnet.pl) (Ping timeout: 272 seconds)
[10:01:24] *** Quits: adip (~adip@den37.neoplus.adsl.tpnet.pl) (Ping timeout: 272 seconds)
[10:01:26] *** Joins: Alhazred (~Alhazred@45.129.56.151)
[10:04:23] *** Joins: soul-d (~uknown@user/soul-d)
[10:05:01] *** Quits: vysn (~vysn@user/vysn) (Ping timeout: 240 seconds)
[10:06:41] *** Joins: mixfix41 (~homefame@user/mixfix41)
[10:07:07] *** Joins: t3nj1n (~t3nj1n@pool-173-52-219-149.nycmny.fios.verizon.net)
[10:07:10] *** Joins: t3nj1n_ (~t3nj1n@pool-173-52-219-149.nycmny.fios.verizon.net)
[10:11:36] *** Quits: freakazoid343 (~matt@2603:9000:cf03:86c3:9bd:2376:50d7:5ec0) (Read error: Connection reset by peer)
[10:11:37] *** Joins: adip (~adip@den37.neoplus.adsl.tpnet.pl)
[10:11:39] *** Joins: adip_ (~adip@den37.neoplus.adsl.tpnet.pl)
[10:12:16] *** Joins: freakazoid343 (~matt@2603:9000:cf03:86c3:9bd:2376:50d7:5ec0)
[10:14:54] *** Quits: vdamewood (~vdamewood@fedora/vdamewood) (Read error: Connection reset by peer)
[10:16:36] *** Quits: joev (~joev@user/joev) (Ping timeout: 272 seconds)
[10:16:39] *** Joins: vdamewood (~vdamewood@fedora/vdamewood)
[10:16:54] *** Joins: slidercrank (~slidercra@user/slidercrank)
[10:17:16] *** Joins: joev (~joev@user/joev)
[10:19:47] *** Quits: somlis (~somlis@user/somlis) (Ping timeout: 250 seconds)
[10:20:43] *** Joins: Viewday111 (~Viewday@user/viewday)
[10:21:21] *** Joins: cherrry9 (~jan@ded246.neoplus.adsl.tpnet.pl)
[10:22:09] *** Quits: Giovanni (~Giovanni@176.67.166.45) (Ping timeout: 252 seconds)
[10:22:13] *** Quits: Viewday11 (~Viewday@user/viewday) (Read error: Connection reset by peer)
[10:22:13] *** Viewday111 is now known as Viewday11
[10:22:58] *** Joins: Giovanni (~Giovanni@31.206.54.14)
[10:24:08] *** Joins: Serpent7776 (~Serpent77@90-156-31-193.internetia.net.pl)
[10:25:12] *** Joins: mahmutov (~mahmutov@37.155.74.96)
[10:27:28] *** Joins: goodfella (~archer@user/tessio)
[10:27:33] <goodfella> it's amazing in how many ways you can solve
[10:27:37] <goodfella> ,kr 1-18
[10:27:37] <candide> Chapter 1: A Tutorial Introduction; Exercise 1-18. Write a program to remove trailing blanks and tabs from each line of input, and to delete entirely blank lines.
[10:27:38] <goodfella> !
[10:28:13] <goodfella> any exercise can be done without knowledge about topics not yet covered
[10:29:28] *** goodfella is now known as FatAlbert
[10:31:11] *** Joins: sord937 (~sord937@gateway/tor-sasl/sord937)
[10:33:17] *** Quits: zer0x_ (~zer0x@58.186.65.98) (Ping timeout: 240 seconds)
[10:37:32] *** Joins: vysn (~vysn@user/vysn)
[10:43:24] *** Quits: freakazoid343 (~matt@2603:9000:cf03:86c3:9bd:2376:50d7:5ec0) (Read error: Connection reset by peer)
[10:43:54] *** Joins: freakazoid343 (~matt@2603:9000:cf03:86c3:9bd:2376:50d7:5ec0)
[10:44:19] *** Joins: kts (~kts@103.73.237.255)
[10:44:59] *** Quits: kts (~kts@103.73.237.255) (Client Quit)
[10:45:01] *** Quits: Giovanni (~Giovanni@31.206.54.14) (Remote host closed the connection)
[10:45:06] *** Quits: digilink (~digilink@user/digilink) (Ping timeout: 272 seconds)
[10:46:26] *** Joins: digilink (~digilink@user/digilink)
[10:46:56] *** Joins: mrig (~mrig@user/mrig)
[10:48:39] *** Joins: Darkcoal (~user@user/Darkcoal)
[10:48:42] *** Parts: cherrry9 (~jan@ded246.neoplus.adsl.tpnet.pl) ()
[10:51:00] *** Joins: Kawazaki (~Kawazaki@user/Kawazaki)
[10:52:46] *** Joins: oxfuxxx (~oxfuxxx@104.200.132.103)
[10:52:58] *** Quits: noteness (~noteness@user/noteness) (Remote host closed the connection)
[10:53:21] *** Joins: noteness (~noteness@user/noteness)
[10:53:40] *** Joins: analognoise1 (~analognoi@91.196.220.75)
[10:56:41] *** Quits: Darkcoal (~user@user/Darkcoal) (Remote host closed the connection)
[10:56:43] *** Quits: analognoise (~analognoi@ip98-176-154-48.sd.sd.cox.net) (Ping timeout: 256 seconds)
[10:56:58] *** Joins: Darkcoal (~user@user/Darkcoal)
[10:57:57] *** Quits: catern (~sbaugh@2604:2000:8fc0:b:a9c7:866a:bf36:3407) (Ping timeout: 240 seconds)
[10:59:51] *** Quits: frostygoth (~frostygot@li1566-163.members.linode.com) (Ping timeout: 256 seconds)
[11:01:22] *** Joins: frostygoth (~frostygot@li1566-163.members.linode.com)
[11:02:04] *** Joins: iomari891 (~iomari891@105.112.138.38)
[11:02:23] *** Quits: flooded (flooded@gateway/vpn/protonvpn/flood/x-43489060) (Ping timeout: 256 seconds)
[11:02:30] *** Joins: test_ (flooded@gateway/vpn/protonvpn/flood/x-43489060)
[11:02:42] *** Quits: ironman (~ironman@2405:201:1010:b033:bad0:8910:44c9:da61) (Ping timeout: 250 seconds)
[11:04:29] *** Joins: jjido (~Denis@2a02:c7f:5c91:e700:e4e8:d997:3422:7c95)
[11:04:44] *** Joins: Rounin (~david@84.212.130.215)
[11:06:46] *** Joins: freddietilley (~freddieti@217.119.232.174)
[11:09:26] *** Joins: danielcamiel (~danielcam@user/danielcamiel)
[11:13:43] *** Quits: Ragnor (~Ragnor@user/ragnor) (Quit: leaving)
[11:13:58] *** Joins: Ragnor (~Ragnor@user/ragnor)
[11:14:29] *** Quits: freddietilley (~freddieti@217.119.232.174) (Quit: WeeChat 3.4)
[11:14:41] *** Joins: freddietilley (~freddieti@217.119.232.174)
[11:14:49] *** Joins: zer0x_ (~zer0x@58.186.65.98)
[11:14:50] *** Quits: vysn (~vysn@user/vysn) (Ping timeout: 250 seconds)
[11:15:53] *** Quits: freddietilley (~freddieti@217.119.232.174) (Client Quit)
[11:15:55] *** Joins: MajorBiscuit (~MajorBisc@c-001-019-045.client.tudelft.eduvpn.nl)
[11:16:57] *** Quits: milkt (~debian@gateway/tor-sasl/milkt) (Remote host closed the connection)
[11:17:23] *** Joins: milkt (~debian@gateway/tor-sasl/milkt)
[11:19:01] *** Joins: eddybilley (~freddieti@217.119.232.174)
[11:20:21] *** Quits: elastic_dog (~elastic_d@2a01:118f:822:9c00:f583:aa51:9ad4:d4fb) (Ping timeout: 245 seconds)
[11:20:34] *** Quits: Jong (~Jong@163.114.132.1) (Ping timeout: 272 seconds)
[11:25:17] *** Quits: danielcamiel (~danielcam@user/danielcamiel) (Ping timeout: 240 seconds)
[11:25:30] *** Quits: dogbert2 (~Bill@ip70-170-79-7.lv.lv.cox.net) (Remote host closed the connection)
[11:25:47] *** Joins: dogbert2 (~Bill@ip70-170-79-7.lv.lv.cox.net)
[11:25:55] *** Joins: elastic_dog (~elastic_d@2a01:118f:822:9c00:f583:aa51:9ad4:d4fb)
[11:26:46] *** Quits: ckdCreations (~ckdCreati@147.55.130.38) (Read error: Connection reset by peer)
[11:28:08] *** Quits: Betal (~Betal@user/betal) (Quit: WeeChat 3.4)
[11:28:35] *** Joins: ckdCreations (~ckdCreati@147.55.133.141)
[11:30:15] *** Joins: kenanmarasli (~kenanmara@user/kenanmarasli)
[11:31:05] *** Joins: semeion (~semeion@user/semeion)
[11:31:24] *** Quits: Darkcoal (~user@user/Darkcoal) (Ping timeout: 240 seconds)
[11:31:37] *** Joins: aradesh (~aradesh@user/aradesh)
[11:33:26] *** Joins: Darkcoal (~user@user/Darkcoal)
[11:36:22] *** Joins: Jong (~Jong@2620:10d:c090:400::5:f783)
[11:38:32] *** Quits: Darkcoal (~user@user/Darkcoal) (Ping timeout: 240 seconds)
[11:40:39] *** Joins: Darkcoal (~user@user/Darkcoal)
[11:42:31] *** Joins: ironman (~ironman@2405:201:1010:b033:bad0:8910:44c9:da61)
[11:49:06] *** Joins: nyah (~nyah@05453449.skybroadband.com)
[11:51:01] *** Quits: tmpm697 (~tmpm697@171.224.179.36) (Quit: Lost terminal)
[11:53:09] *** Quits: Darkcoal (~user@user/Darkcoal) (Ping timeout: 256 seconds)
[11:53:11] *** Joins: arinov_ (~arinov@213.194.126.155)
[11:53:19] *** Quits: jjido (~Denis@2a02:c7f:5c91:e700:e4e8:d997:3422:7c95) (Quit: My MacBook Air has gone to sleep. ZZZzzzâ€¦)
[11:53:38] *** Joins: freep (~freepppp@193.92.35.32.dsl.dyn.forthnet.gr)
[11:54:31] *** Joins: |7| (~seachdamh@user/seachdamh)
[11:54:38] *** Quits: freep (~freepppp@193.92.35.32.dsl.dyn.forthnet.gr) (Remote host closed the connection)
[11:54:53] *** Joins: Darkcoal (~user@user/Darkcoal)
[11:55:01] *** Joins: freep (~freepppp@193.92.35.32.dsl.dyn.forthnet.gr)
[11:55:34] *** Joins: kts (~kts@103.73.237.255)
[11:56:10] *** Quits: night_wulfe (~wulfe@cpe-174-103-156-213.cinci.res.rr.com) (Read error: Connection reset by peer)
[11:56:29] *** Joins: jjido (~Denis@2a02:c7f:5c91:e700:e4e8:d997:3422:7c95)
[11:57:05] *** Joins: clamiax (~clamiax@net-93-147-243-107.cust.vodafonedsl.it)
[12:00:35] *** Quits: hinata (~hinata@2409:4042:d16:67df:70f2:2fcd:8fb8:2811) (Quit: Leaving)
[12:09:40] *** Joins: gr33n7007h (~gr33n7007@user/gr33n7007h)
[12:12:55] *** Joins: boreas (~heiner@94.31.81.196)
[12:18:08] *** Joins: LucaTM (~LucaTM@user/lucatm)
[12:20:19] *** Joins: zeenk (~zeenk@2a02:2f04:a30d:1300:51a3:bcfc:6cda:9fc5)
[12:20:51] *** Joins: Viewday110 (~Viewday@user/viewday)
[12:22:11] *** Joins: somlis (~somlis@user/somlis)
[12:22:25] *** Quits: Viewday11 (~Viewday@user/viewday) (Read error: Connection reset by peer)
[12:22:25] *** Viewday110 is now known as Viewday11
[12:24:14] *** trav81787 is now known as travankor
[12:24:50] *** Joins: pretty_dumm_guy (trottel@gateway/vpn/protonvpn/prettydummguy/x-88029655)
[12:25:43] *** Joins: bebyx (~Thunderbi@user/bebyx)
[12:30:13] *** Quits: bebyx (~Thunderbi@user/bebyx) (Ping timeout: 256 seconds)
[12:32:41] *** Joins: blindguard (~blindguar@2a02:908:1864:c200::ef3c)
[12:35:14] *** Quits: carrar (~tim@osburn.jp) (Ping timeout: 252 seconds)
[12:35:27] *** Joins: carrar (~tim@osburn.jp)
[12:43:05] *** Quits: analognoise1 (~analognoi@91.196.220.75) (Read error: Connection reset by peer)
[12:43:17] *** Quits: AbleBacon (~AbleBacon@user/AbleBacon) (Read error: Connection reset by peer)
[12:48:59] *** Joins: lleo (~lleo@188-206-67-249.mobile.kpn.net)
[12:53:48] *** Quits: fe23 (~fe23@2409:8a34:462:2ab0:5089:282b:531b:5aca) (Ping timeout: 240 seconds)
[12:57:40] *** Joins: hinata (~hinata@2409:4042:230e:f604:70f2:2fcd:8fb8:2811)
[12:59:34] *** Joins: phrosty (~phrosty@c-73-225-175-19.hsd1.wa.comcast.net)
[13:01:12] *** Quits: goepsilongo (~goepsilon@2603-7000-ab00-62ed-84bf-264a-925c-29aa.res6.spectrum.com) (Quit: Textual IRC Client: www.textualapp.com)
[13:04:47] *** Quits: Akiva (~Akiva@user/Akiva) (Ping timeout: 256 seconds)
[13:12:37] *** Quits: oxfuxxx (~oxfuxxx@104.200.132.103) (Ping timeout: 240 seconds)
[13:13:28] *** Quits: duckpunch (~duckpunch@d28-23-90-26.dim.wideopenwest.com) (Remote host closed the connection)
[13:13:50] *** Joins: Y4knotiS (~YaknotiS@cpc1-cmbg18-2-0-cust87.5-4.cable.virginm.net)
[13:15:24] *** Quits: mrig (~mrig@user/mrig) (Quit: WeeChat 2.8)
[13:17:48] *** Joins: cosimone (~user@93-47-229-38.ip115.fastwebnet.it)
[13:20:02] *** Quits: elastic_dog (~elastic_d@2a01:118f:822:9c00:f583:aa51:9ad4:d4fb) (Ping timeout: 240 seconds)
[13:20:15] *** Joins: oxfuxxx (~oxfuxxx@104.200.132.103)
[13:22:04] *** Quits: teepee (~teepee@openscad/teepee) (Remote host closed the connection)
[13:23:21] *** Joins: teepee (~teepee@openscad/teepee)
[13:24:36] *** Quits: oxfuxxx (~oxfuxxx@104.200.132.103) (Ping timeout: 240 seconds)
[13:25:15] *** Joins: elastic_dog (~elastic_d@2a01:118f:822:9c00:f583:aa51:9ad4:d4fb)
[13:26:17] *** Quits: arinov_ (~arinov@213.194.126.155) (Ping timeout: 240 seconds)
[13:27:00] *** Joins: tmpm697 (~tmpm697@171.224.179.36)
[13:32:13] *** Quits: bliminse (~bliminse@host109-152-150-162.range109-152.btcentralplus.com) (Quit: leaving)
[13:33:02] *** Quits: HaMsTeRs (~Thunderbi@210.3.213.4) (Quit: HaMsTeRs)
[13:33:20] *** Joins: constxd (~brad@142.134.79.191)
[13:33:37] <constxd> morning kings
[13:34:33] <dave0> king? the only card i need is the ace of spades
[13:35:30] *** Joins: angelacrust (~angelacru@182.64.88.197)
[13:35:52] *** Joins: pulse (~pulse@user/pulse)
[13:36:29] *** Quits: jfsimon1981 (~jfsimon19@218.96.128.77.rev.sfr.net) (Read error: Connection reset by peer)
[13:36:55] *** Joins: jfsimon1981 (~jfsimon19@218.96.128.77.rev.sfr.net)
[13:38:42] *** Quits: Furai (~Furai@furai.pl) (Quit: WeeChat 3.4)
[13:41:12] *** Joins: Furai (~Furai@furai.pl)
[13:41:44] *** Quits: alch (~alch@151.44.13.189) (Ping timeout: 250 seconds)
[13:43:24] *** Joins: rampart (~rampart@3.sub-174-250-48.myvzw.com)
[13:43:35] *** Joins: alch (~alch@151.44.24.59)
[13:44:52] *** Quits: rampart (~rampart@3.sub-174-250-48.myvzw.com) (Client Quit)
[13:45:12] *** Joins: cytokine` (~user@2409:4065:d06:730f:1010:3aff:fe87:1e29)
[13:45:42] *** Quits: zsoltiv_ (~zsoltiv@85-235-95-111.naracom.hu) (Quit: Left)
[13:46:10] *** Quits: cytokine` (~user@2409:4065:d06:730f:1010:3aff:fe87:1e29) (Client Quit)
[13:46:25] *** Joins: whupdup (~whupdup@pool-173-76-128-81.bstnma.fios.verizon.net)
[13:46:37] *** Joins: cytokine` (~user@2409:4065:d06:730f:1010:3aff:fe87:1e29)
[13:46:39] *** Quits: cytokine` (~user@2409:4065:d06:730f:1010:3aff:fe87:1e29) (Client Quit)
[13:46:39] *** Joins: zsoltiv_ (~zsoltiv@85-235-95-111.naracom.hu)
[13:46:54] *** Quits: whupdup (~whupdup@pool-173-76-128-81.bstnma.fios.verizon.net) (Remote host closed the connection)
[13:53:12] *** Quits: Alhazred (~Alhazred@45.129.56.151) (Ping timeout: 272 seconds)
[13:53:23] *** Joins: Alhazred (~Alhazred@45.129.56.151)
[13:54:06] *** Joins: akuma (~i.am@user/marlboro)
[13:54:11] <apotheon> Ace of Spades is a good song.
[13:54:54] <FatAlbert> dave0: gambling is for fools
[13:55:15] *** Joins: M-blaise (~M-blaise@105.112.138.38)
[13:55:56] <FatAlbert> dave0: how you doing :) ?
[13:56:04] <dave0> https:/youtu.be/3mbvWn1EY6g
[13:56:09] <dave0> FatAlbert: good, you?
[13:56:27] <FatAlbert> fine thanks
[13:56:46] <FatAlbert> i can't remember when i first heard the ace of spadees .. but it's a nice song indeed
[13:57:09] <dave0> old-school metal
[14:01:14] *** Quits: kts (~kts@103.73.237.255) (Quit: Konversation terminated!)
[14:03:28] *** Joins: fe23 (~fe23@2409:8a34:462:2ab0:5509:72d1:28c1:4b0f)
[14:03:44] *** Joins: kts (~kts@103.73.237.246)
[14:03:46] *** Joins: gargus (~user@27-32-195-30.static.tpgi.com.au)
[14:04:49] *** Quits: jjido (~Denis@2a02:c7f:5c91:e700:e4e8:d997:3422:7c95) (Quit: My MacBook Air has gone to sleep. ZZZzzzâ€¦)
[14:08:55] <constxd> ,cc int c = 'king';
[14:08:57] <candide> constxd: [warning: multi-character character constant [-Wmultichar]] no output: c = 1802071655
[14:09:49] *** Joins: whupdup (~whupdup@pool-173-76-128-81.bstnma.fios.verizon.net)
[14:11:00] *** Joins: bliminse (~bliminse@host109-152-150-162.range109-152.btcentralplus.com)
[14:13:12] *** Joins: kaph (~kaph@net-109-116-124-149.cust.vodafonedsl.it)
[14:14:17] *** Joins: jellie (~luv_panda@user/jellie)
[14:14:40] *** Joins: the_lanetly_052 (~the_lanet@194.135.169.126)
[14:17:09] *** Joins: bebyx (~Thunderbi@user/bebyx)
[14:17:50] <FatAlbert> constxd: how you doing lad ?
[14:18:37] <sham1> ,cc unsigned int c = 'avc1'; printf("%x", c);
[14:18:39] <candide> sham1: [warning: multi-character character constant [-Wmultichar]] 61766331
[14:18:40] <constxd> not too bad
[14:18:53] <constxd> what are you up to today FatAlbert
[14:20:21] <FatAlbert> i need to review some topics in networking for my course ...
[14:20:43] <FatAlbert> im no a ccnp track
[14:20:50] <FatAlbert> on
[14:21:29] <FatAlbert> but im doing my best to do both C as well
[14:23:54] <constxd> based
[14:24:24] <constxd> C will make u a chad
[14:25:07] <keinbock> a chad?
[14:26:12] *** Quits: Alhazred (~Alhazred@45.129.56.151) (Ping timeout: 240 seconds)
[14:26:17] *** Joins: singularity00 (~singulari@236.lan-hi1-2.static.rozabg.com)
[14:27:29] <constxd> yes
[14:28:00] *** Joins: Alhazred (~Alhazred@45.129.56.151)
[14:28:15] <angelacrust> Nice
[14:28:21] *** Quits: andro (~andro@user/andro) (Quit: Leaving)
[14:29:23] *** Joins: Burgundy (~NA@86.121.143.206)
[14:29:53] *** Joins: geowiesnot (~user@5-51-190-244.abo.bbox.fr)
[14:31:07] *** Joins: andro (~andro@li1311-17.members.linode.com)
[14:31:35] *** Quits: tmpm697 (~tmpm697@171.224.179.36) (Quit: Lost terminal)
[14:32:10] *** Quits: andro (~andro@li1311-17.members.linode.com) (Client Quit)
[14:32:25] *** Joins: andro (~andro@user/andro)
[14:34:55] *** Joins: shivesh (~shivesh@user/shivesh)
[14:35:52] *** Joins: crashrep (~crashrep@user/crashrep)
[14:37:07] *** Quits: bebyx (~Thunderbi@user/bebyx) (Ping timeout: 268 seconds)
[14:54:00] *** Quits: semeion (~semeion@user/semeion) (Ping timeout: 272 seconds)
[14:55:37] *** Quits: Satin (uid193953@user/Seten) (Quit: Connection closed for inactivity)
[14:55:45] <high_ground> lo
[14:55:46] <high_ground> l
[14:56:41] *** Joins: Klinda (~superleag@user/klinda)
[14:58:37] *** Quits: jellie (~luv_panda@user/jellie) (Ping timeout: 240 seconds)
[14:59:49] *** Joins: smallvil_ (~smallvill@cpe-172-193-72-46.qld.foxtel.net.au)
[15:00:52] *** Joins: jellie (~luv_panda@user/jellie)
[15:02:01] *** Quits: munkis (~mendel_mu@ool-ae2cb229.dyn.optonline.net) (Ping timeout: 245 seconds)
[15:02:11] *** Joins: munkis (~mendel_mu@ool-ae2cb229.dyn.optonline.net)
[15:02:42] *** Joins: bebyx (~Thunderbi@user/bebyx)
[15:03:31] *** Quits: smallville7123 (~smallvill@cpe-172-193-72-46.qld.foxtel.net.au) (Ping timeout: 256 seconds)
[15:05:04] *** Joins: jjido (~Denis@2a02:c7f:5c91:e700:e4e8:d997:3422:7c95)
[15:06:45] *** Joins: semeion (~semeion@user/semeion)
[15:06:58] *** Quits: hinata (~hinata@2409:4042:230e:f604:70f2:2fcd:8fb8:2811) (Remote host closed the connection)
[15:07:11] *** Quits: bebyx (~Thunderbi@user/bebyx) (Ping timeout: 256 seconds)
[15:07:38] *** Joins: hinata (~hinata@2409:4042:230e:f604:70f2:2fcd:8fb8:2811)
[15:08:50] *** Quits: Alhazred (~Alhazred@45.129.56.151) (Ping timeout: 250 seconds)
[15:10:55] *** Joins: random-nick (~random-ni@87.116.167.125)
[15:12:58] *** Joins: tech_exorcist (txrcst@user/tech-exorcist/x-0447479)
[15:17:57] *** Quits: phrosty (~phrosty@c-73-225-175-19.hsd1.wa.comcast.net) (Ping timeout: 256 seconds)
[15:18:46] *** Joins: gproto23 (~gproto23@user/gproto23)
[15:19:25] *** Joins: ioxzev1z (~ioxzev1z@user/ioxzev1z)
[15:19:32] *** Quits: Enitin (~Enitin@82.180.145.230) (Ping timeout: 240 seconds)
[15:20:18] *** Joins: tmpm697 (~tmpm697@171.224.179.36)
[15:20:34] *** Joins: ekathva (~ekathva@2001:999:51:19b8:865d:874e:7a83:9797)
[15:21:13] *** Joins: tolot (~tolot@dynamic-093-131-139-250.93.131.pool.telefonica.de)
[15:21:52] *** Quits: tmpm697 (~tmpm697@171.224.179.36) (Client Quit)
[15:22:39] *** Joins: bebyx (~Thunderbi@user/bebyx)
[15:27:52] *** Joins: Atque (~Atque@user/atque)
[15:28:54] *** Joins: Enitin (~Enitin@82.180.145.230)
[15:30:17] *** Quits: csrf (~csrf@user/csrf) (Quit: ZNC 1.7.2+deb3 - https://znc.in)
[15:30:43] *** Joins: bnchs (~bnchs@160.177.15.129)
[15:30:45] *** Quits: gxt (~gxt@gateway/tor-sasl/gxt) (Remote host closed the connection)
[15:31:02] *** Quits: vdamewood (~vdamewood@fedora/vdamewood) (Read error: Connection reset by peer)
[15:31:04] *** Joins: csrf (~csrf@user/csrf)
[15:31:06] *** Joins: gxt (~gxt@gateway/tor-sasl/gxt)
[15:31:17] *** Quits: hinata (~hinata@2409:4042:230e:f604:70f2:2fcd:8fb8:2811) (Ping timeout: 240 seconds)
[15:31:46] *** Joins: hinata (~hinata@2409:4042:d16:67df:70f2:2fcd:8fb8:2811)
[15:31:54] *** Joins: cadmio (~cadmio@151.19.250.57)
[15:31:56] *** Joins: vdamewood (~vdamewood@fedora/vdamewood)
[15:32:07] <cadmio> valgrind give all these errors https://paste.gnome.org/pannz7p4i
[15:32:14] <cadmio> *gives
[15:34:10] <sham1> Yeah?
[15:34:55] <cadmio> but I think it's the API's fault
[15:35:37] <sham1> It is
[15:36:01] *** Quits: supakeen (~user@python/site-packages/supakeen) (Quit: WeeChat 3.4)
[15:36:30] *** Joins: supakeen (~user@python/site-packages/supakeen)
[15:38:40] *** Joins: tmpm697 (~tmpm697@171.224.179.36)
[15:40:18] *** Joins: bbju (~bbju@203-69-187-77.hinet-ip.hinet.net)
[15:45:52] *** Joins: cart_ (~cart@host-78-144-125-214.as13285.net)
[15:50:50] *** Quits: bebyx (~Thunderbi@user/bebyx) (Ping timeout: 260 seconds)
[15:51:57] *** Quits: constxd (~brad@142.134.79.191) (Ping timeout: 256 seconds)
[15:53:00] <fizzie> There's some pre-made suppression files for using Valgrind on a GTK/GLib programs.
[15:53:13] <fizzie> See https://wiki.gnome.org/Valgrind
[15:53:54] *** Joins: int (~int@0x4.cx)
[15:53:54] *** Quits: bzng (~bzng4@188-23-202-239.adsl.highway.telekom.at) (Ping timeout: 250 seconds)
[15:54:46] *** Quits: Ox4 (~int@0x4.cx) (Ping timeout: 250 seconds)
[15:55:04] *** Quits: jjido (~Denis@2a02:c7f:5c91:e700:e4e8:d997:3422:7c95) (Quit: My MacBook Air has gone to sleep. ZZZzzzâ€¦)
[15:55:05] *** Joins: strajder (~strajder@user/strajder)
[15:59:07] *** Joins: dec0d3r (~dec0d3r@2001:8003:480a:e00:e07:e7c3:7efc:ed0f)
[15:59:24] *** Quits: angelacrust (~angelacru@182.64.88.197) (Quit: Client closed)
[16:00:40] *** Joins: katp32 (~katp32@S010680ea96e8dbba.vc.shawcable.net)
[16:01:39] <katp32> heyo, is therea way to do htons() with a compile-time macro? (so that I can make a sockaddr_in6 structure const; the port number has to be network endian obviously)
[16:03:08] *** Joins: jjido (~Denis@2a02:c7f:5c91:e700:e4e8:d997:3422:7c95)
[16:04:33] *** Quits: freakazoid343 (~matt@2603:9000:cf03:86c3:9bd:2376:50d7:5ec0) (Read error: Connection reset by peer)
[16:05:06] *** Joins: bebyx (~Thunderbi@user/bebyx)
[16:05:14] *** Joins: freakazoid343 (~matt@2603-9000-cf03-86c3-09bd-2376-50d7-5ec0.inf6.spectrum.com)
[16:05:47] <bnchs> katp32 you mean swap the port number in compile-time
[16:05:58] *** Quits: bebyx (~Thunderbi@user/bebyx) (Read error: Connection reset by peer)
[16:06:07] <BtbN> Won't htons() resolve to a compiler built-in, which can then be easily optimized if it's given a constant number?
[16:06:16] *** Joins: bebyx (~Thunderbi@user/bebyx)
[16:06:37] <fizzie> It might, but that doesn't make it an integer constant expression, which would be required to (say) initialize a `static const` variable.
[16:06:51] *** Joins: chr1 (~chr@mail.alfaorigo.dk)
[16:07:15] <katp32> yeah, with gcc/libc at least htons is not a constant expression
[16:07:20] <katp32> *gcc/glibc
[16:07:32] <fizzie> ,cc #include <arpa/inet.h> #include <netinet/in.h> static const in_port_t default_port = htons(12345);
[16:07:33] <candide> fizzie: error: initializer element is not constant
[16:07:55] *** Quits: crashrep (~crashrep@user/crashrep) (Ping timeout: 240 seconds)
[16:08:25] <fizzie> I don't imagine there's a compile-time way without knowing the host endianness, and there's no standard way to know that, though as a GNU extension GCC (and probably Clang as well) do predefine some macros for it.
[16:09:01] <bnchs> fizzie: but programs are compiled for a specific host endian
[16:09:05] <bnchs> like ppc64le
[16:09:36] <fizzie> I'm not debating that.
[16:09:53] *** Joins: bzng (~bzng4@188-23-202-239.adsl.highway.telekom.at)
[16:09:54] <katp32> the point is just that there's no macro described by the C standard for it
[16:10:02] <katp32> so you rely on nonstandard compiler extensions
[16:10:47] <bnchs> or just convert it in the source file
[16:11:34] <katp32> but again, there's no standard macro for the host endianness, so you can't know in the source file
[16:11:37] *** Quits: singularity00 (~singulari@236.lan-hi1-2.static.rozabg.com) (Ping timeout: 240 seconds)
[16:12:11] <bnchs> well ok
[16:12:19] *** Quits: chr1 (~chr@mail.alfaorigo.dk) (Quit: Leaving)
[16:13:09] <katp32> that being said, it should be possible to write a host-endianness-independent implementation of htons() by casting to a char array no?
[16:13:49] <bnchs> well, if the host endian is big
[16:13:55] <bnchs> then there's no need to swap bytes
[16:14:11] <fizzie> You can't *literally* cast to an array, but it's definitely possible to write `htons` in a way that works without having to know what the host byte order is.
[16:14:13] <katp32> I'm just looking at this stackoverflow post: ((uint32_t)np[0] << 24) | ((uint32_t)np[1] << 16) | ((uint32_t)np[2] << 8) | (uint32_t)np[3]
[16:14:17] <katp32> ack wrong paste
[16:14:24] <katp32> sorry, https://stackoverflow.com/a/2100549
[16:14:39] <katp32> I'm not sure I follow this logic though
[16:14:41] <bnchs> katp32: uint32_t?
[16:14:49] <bnchs> what about it being a char?
[16:15:00] <katp32> ignore that, like I said, wrong paste
[16:15:08] <bnchs> oh ok
[16:17:13] <fizzie> It's possible to write an endian-independent htons, sure; the part where you run into trouble is making it an integer constant expression.
[16:17:20] *** Quits: Atque (~Atque@user/atque) (Quit: ...)
[16:17:22] <katp32> right, yeah
[16:17:26] *** Joins: seninha (~chatzilla@user/seninha)
[16:17:47] <katp32> in any case it doesn't really matter, I can just make my structure not constant, although it's slightly annoying
[16:19:40] *** Parts: cadmio (~cadmio@151.19.250.57) (WeeChat 3.0)
[16:21:00] *** Joins: Viewday115 (~Viewday@user/viewday)
[16:21:02] <dave0> ,predef
[16:21:02] <candide> predef is http://predef.sourceforge.net/ -- the Pre-defined C/C++ Compiler Macros project
[16:21:19] <dave0> i believe predef defines endian macros
[16:21:25] *** Quits: lleo (~lleo@188-206-67-249.mobile.kpn.net) (Ping timeout: 256 seconds)
[16:22:55] *** Quits: Viewday11 (~Viewday@user/viewday) (Read error: Connection reset by peer)
[16:22:56] *** Viewday115 is now known as Viewday11
[16:23:14] <bnchs> does it do it at preproccessor time
[16:23:21] <bnchs> if that's possible
[16:23:35] <katp32> quickly skimming through it, it looks like it only does it at runtime, at compile time it uses nonstandard macros provided by the compiler
[16:23:43] *** Joins: crashrep (~crashrep@user/crashrep)
[16:23:44] <dave0> https://sourceforge.net/p/predef/wiki/Endianness/
[16:23:49] <dave0> yes preprocessor
[16:23:57] *** Quits: vdamewood (~vdamewood@fedora/vdamewood) (Read error: Connection reset by peer)
[16:24:00] <katp32> but again, only using macros provided by the compiler
[16:24:39] *** Joins: vdamewood (~vdamewood@fedora/vdamewood)
[16:25:08] <fizzie> https://gcc.gnu.org/onlinedocs/cpp/Common-Predefined-Macros.html documents the GNU auto-predefined macros (__BYTE_ORDER__, which is either __ORDER_LITTLE_ENDIAN__, __ORDER_BIG_ENDIAN__ or __ORDER_PDP_ENDIAN__) but yeah, they're nonstandard.
[16:26:10] *** Quits: gproto23 (~gproto23@user/gproto23) (Read error: Connection reset by peer)
[16:26:54] *** test_ is now known as _flood
[16:27:01] *** Joins: gproto23 (~gproto23@user/gproto23)
[16:27:07] *** Quits: semeion (~semeion@user/semeion) (Quit: WeeChat 3.4)
[16:27:09] <dave0> depending on endianness is already nonstandard
[16:27:23] <dave0> how far do you want to go to have a const ip?
[16:27:50] <dave0> oh it was a port number
[16:27:53] <bnchs> it's a microoptimization
[16:28:15] *** Quits: crashrep (~crashrep@user/crashrep) (Ping timeout: 240 seconds)
[16:29:08] <katp32> I already said it doesn't really matter, in the span of this conversation I've already just made it not constant and moved on :P
[16:29:24] <dave0> it's easy enough to do a byte swap with a cpp macro... wrap it in a   #if __BYTE_ORDER__ == __ORDER_BIG_ENDIAN__   #define port(x) x   #else   #define port(x) (x >> 8 & 0xff | x << 8 & 0xff00)
[16:29:25] *** Quits: kaph (~kaph@net-109-116-124-149.cust.vodafonedsl.it) (Read error: Connection reset by peer)
[16:29:41] <dave0> oh ok
[16:30:32] *** Joins: brad_mssw (~bhouse@c-76-106-206-149.hsd1.fl.comcast.net)
[16:30:46] *** Joins: crashrep (~crashrep@user/crashrep)
[16:31:53] *** Quits: ironman (~ironman@2405:201:1010:b033:bad0:8910:44c9:da61) (Quit: Leaving)
[16:34:02] *** Joins: constxd (~brad@142.134.79.191)
[16:34:55] *** Quits: crashrep (~crashrep@user/crashrep) (Ping timeout: 240 seconds)
[16:36:31] *** Quits: mcleuder_ (~mcleuder@gateway/tor-sasl/mcleuder) (Quit: WeeChat 3.3)
[16:37:20] *** Joins: merrinx (~merrinx@ti0028a400-3686.bb.online.no)
[16:37:32] <bnchs> ,cc int main () { char *str = "testt"; char *p = str; p += 2; if (p - str == 2) return 0; }
[16:37:34] <candide> bnchs: no output: str = 0x403033 "testt"; p = 0x403035 "stt"
[16:37:43] *** Joins: crashrep (~crashrep@user/crashrep)
[16:38:33] <dave0> in general i prefer array-style []'s to pointer arithmetic
[16:39:02] <sham1> I like them for different things
[16:39:30] <sham1> Pointer arithmetic for stuff like advancing an iterator pointer, while subscripting is for accessing elements relative to current position
[16:39:47] <dave0> a lot of the time it ends up the same machine code
[16:40:01] <sham1> Well you'd hope so, considering that a[b] == *(a + b)
[16:42:10] *** Quits: bnchs (~bnchs@160.177.15.129) (Ping timeout: 260 seconds)
[16:42:56] *** Joins: acerbic (~acerbic@cs-xdata-50-86-54-251.cspire.com)
[16:44:32] *** Quits: elastic_dog (~elastic_d@2a01:118f:822:9c00:f583:aa51:9ad4:d4fb) (Ping timeout: 240 seconds)
[16:47:46] *** Joins: admal (~admal@gateway/tor-sasl/admal)
[16:47:47] *** Joins: Juliu (~Juliu@2a02:810b:c640:3ec0:a5e0:1373:74cf:b4e8)
[16:48:20] *** Joins: Timmie (~Timmie@144-39-144-85.ftth.glasoperator.nl)
[16:49:38] *** Parts: katp32 (~katp32@S010680ea96e8dbba.vc.shawcable.net) ()
[16:49:49] *** Quits: kts (~kts@103.73.237.246) (Quit: Konversation terminated!)
[16:50:05] *** Joins: elastic_dog (~elastic_d@2a01:118f:822:9c00:f583:aa51:9ad4:d4fb)
[16:51:27] *** Quits: pounce (~pounce@facebook/engineering/pounce) (Ping timeout: 256 seconds)
[16:51:50] *** Quits: ZedHedTed (~ZedHedTed@user/zedhedted) (Remote host closed the connection)
[16:52:06] *** Joins: ZedHedTed (~ZedHedTed@user/zedhedted)
[16:52:41] *** Joins: gildasio (~gildasio@gateway/tor-sasl/gildasio)
[16:53:04] *** Quits: hinata (~hinata@2409:4042:d16:67df:70f2:2fcd:8fb8:2811) (Quit: Leaving)
[16:53:50] *** Quits: pulse (~pulse@user/pulse) (Ping timeout: 260 seconds)
[16:54:28] *** Joins: kaph (~kaph@net-109-116-124-149.cust.vodafonedsl.it)
[16:55:57] *** Joins: mlaogd^ (~mlaogd@207.243.108.170)
[16:56:12] *** Quits: constxd (~brad@142.134.79.191) (Ping timeout: 240 seconds)
[16:56:22] *** Joins: manjaroi3 (~manjaro-i@125.131.131.26)
[17:06:21] *** Quits: jellie (~luv_panda@user/jellie) (Ping timeout: 268 seconds)
[17:08:07] <FatAlbert> ls
[17:08:16] *** Joins: pulse (~pulse@user/pulse)
[17:08:35] *** Joins: singularity00 (~singulari@236.lan-hi1-2.static.rozabg.com)
[17:08:41] <FatAlbert> im jealous
[17:09:24] <sham1> Of ls?
[17:10:14] *** Joins: mikoto-chan (~mikoto-ch@213.177.151.239)
[17:16:06] *** Joins: skapata (~Skapata@2804:14c:87b0:9d2e:54dd:1262:7c05:5499)
[17:16:06] *** Quits: skapata (~Skapata@2804:14c:87b0:9d2e:54dd:1262:7c05:5499) (Changing host)
[17:16:06] *** Joins: skapata (~Skapata@user/skapata)
[17:17:28] <FatAlbert> sham1: are you satisfied with your terminal look ?
[17:18:09] *** Quits: gargus (~user@27-32-195-30.static.tpgi.com.au) (Quit: Leaving)
[17:18:12] <FatAlbert> check this out ..
[17:20:20] <FatAlbert> https://i.imgur.com/LkraZpv.png
[17:20:55] *** Quits: crashrep (~crashrep@user/crashrep) (Ping timeout: 240 seconds)
[17:21:06] <FatAlbert> pretty cool huh ?
[17:21:08] *** Joins: kts (~kts@103.73.237.133)
[17:21:20] <FatAlbert> sham1: now shom me yours
[17:21:30] *** Quits: brad_mssw (~bhouse@c-76-106-206-149.hsd1.fl.comcast.net) (Quit: This computer has gone to sleep)
[17:21:45] <sham1> I'm currently not home
[17:21:53] <FatAlbert> gotcha
[17:21:57] *** Quits: slidercrank (~slidercra@user/slidercrank) (Read error: Connection reset by peer)
[17:22:01] <sham1> Besides, my shell setup is pretty utilitarian
[17:22:49] <FatAlbert> sham1: use onedark i love it !
[17:23:16] *** Quits: dave0 (~davezero@069.d.003.ncl.iprimus.net.au) (Quit: dave's not here)
[17:24:13] <nomagno> I'm using raw xterm with black background and white background right now methinks
[17:24:27] <nomagno> White foreground*
[17:24:45] *** Joins: brad_mssw (~bhouse@c-76-106-206-149.hsd1.fl.comcast.net)
[17:25:34] *** Quits: vdamewood (~vdamewood@fedora/vdamewood) (Read error: Connection reset by peer)
[17:25:46] *** Joins: slidercrank (~slidercra@user/slidercrank)
[17:25:57] * FatAlbert --(*nomagno_hax0r_points)
[17:26:47] *** Joins: vdamewood (~vdamewood@fedora/vdamewood)
[17:27:12] <sham1> Same, although I use gray foreground. White is a bit too bright
[17:28:21] *** Joins: Dean (~Dean@user/De4n-Whit3/x-9385125)
[17:28:23] <Dean> hello
[17:30:44] <FatAlbert> Dean: hi
[17:31:13] <FatAlbert> Hey hey hey, it's nice seeing you today
[17:31:21] *** Joins: oakyy (~oaky@2001:6b0:1:1041:8dbf:51a5:3a71:b61e)
[17:31:34] *** Quits: oakyy (~oaky@2001:6b0:1:1041:8dbf:51a5:3a71:b61e) (Remote host closed the connection)
[17:34:27] *** Joins: oxfuxxx (~oxfuxxx@217.138.213.30)
[17:34:52] *** Joins: gh34 (~textual@cpe-184-58-181-106.wi.res.rr.com)
[17:36:13] *** Quits: geowiesnot (~user@5-51-190-244.abo.bbox.fr) (Ping timeout: 256 seconds)
[17:38:01] *** Quits: |7| (~seachdamh@user/seachdamh) (Quit: KVIrc 5.0.0 Aria http://www.kvirc.net/)
[17:39:25] *** Joins: crashrep (~crashrep@user/crashrep)
[17:39:31] *** Joins: six666 (~six666@117.175.116.227)
[17:39:57] *** Quits: Dean (~Dean@user/De4n-Whit3/x-9385125) (Ping timeout: 256 seconds)
[17:40:32] *** Quits: qorg11 (~lain@user/qorg) (Ping timeout: 240 seconds)
[17:40:50] *** Joins: beepbooptheory (~mik-wsl@50.216.98.94)
[17:41:19] *** Quits: alch (~alch@151.44.24.59) (Ping timeout: 256 seconds)
[17:41:19] *** Quits: sweetsymph (uid509475@id-509475.lymington.irccloud.com) (Quit: Connection closed for inactivity)
[17:41:58] *** Joins: qorg11 (~lain@user/qorg)
[17:42:23] *** Joins: eelstrebor (~eelstrebo@198-178-29-136.scb.ne.static.allophone.net)
[17:42:55] *** Joins: alch (~alch@151.44.38.189)
[17:43:35] *** Quits: crashrep (~crashrep@user/crashrep) (Ping timeout: 240 seconds)
[17:44:43] *** Quits: frost (~frost@user/frost) (Ping timeout: 256 seconds)
[17:45:45] *** Joins: crashrep (~crashrep@user/crashrep)
[17:46:31] *** Quits: eelstrebor (~eelstrebo@198-178-29-136.scb.ne.static.allophone.net) (Client Quit)
[17:48:19] *** Joins: eelstrebor (~eelstrebo@198-178-29-136.scb.ne.static.allophone.net)
[17:49:19] *** Joins: rdg (~rdg@user/rdg)
[17:49:55] *** Quits: crashrep (~crashrep@user/crashrep) (Ping timeout: 240 seconds)
[17:51:24] *** Quits: eelstrebor (~eelstrebo@198-178-29-136.scb.ne.static.allophone.net) (Client Quit)
[17:54:14] *** Quits: justAstache (~justache@user/justache) (Remote host closed the connection)
[17:54:18] *** Joins: mrig (~mrig@user/mrig)
[17:54:37] *** Quits: FatAlbert (~archer@user/tessio) (Ping timeout: 240 seconds)
[17:54:52] *** Joins: justAstache (~justache@user/justache)
[17:57:45] *** Quits: mahmutov (~mahmutov@37.155.74.96) (Ping timeout: 256 seconds)
[17:58:21] *** Joins: iink[m] (~iinkunred@2001:470:69fc:105::1:cf6f)
[17:58:53] *** Joins: crashrep (~crashrep@user/crashrep)
[18:01:13] *** Joins: geowiesnot (~user@5-51-190-244.abo.bbox.fr)
[18:01:29] *** Quits: oxfuxxx (~oxfuxxx@217.138.213.30) (Ping timeout: 256 seconds)
[18:01:41] *** Quits: wovixo (~wovixo@128.104.205.49) (Read error: Connection reset by peer)
[18:05:49] *** Joins: Dean (~Dean@165-73-119-36.ip.afrihost.capetown)
[18:06:08] *** Joins: wovixo (~wovixo@128.104.205.49)
[18:11:32] *** Quits: freakazoid343 (~matt@2603-9000-cf03-86c3-09bd-2376-50d7-5ec0.inf6.spectrum.com) (Ping timeout: 240 seconds)
[18:12:57] *** Joins: freakazoid333 (~matt@2603:9000:cf03:86c3:b86a:2c62:17f3:bfd1)
[18:15:00] *** Quits: byteskeptical (~amnesia@user/byteskeptical) (Quit: Lost terminal)
[18:17:01] *** Joins: wroathe (~wroathe@206-55-188-8.fttp.usinternet.com)
[18:17:01] *** Quits: wroathe (~wroathe@206-55-188-8.fttp.usinternet.com) (Changing host)
[18:17:01] *** Joins: wroathe (~wroathe@user/wroathe)
[18:20:28] *** Quits: bebyx (~Thunderbi@user/bebyx) (Ping timeout: 272 seconds)
[18:20:35] *** Joins: X-Scale` (~ARM@135.232.28.37.rev.vodafone.pt)
[18:20:43] *** Joins: Viewday113 (~Viewday@user/viewday)
[18:21:18] *** Quits: mikoto-chan (~mikoto-ch@213.177.151.239) (Quit: mikoto-chan)
[18:21:55] *** Quits: crashrep (~crashrep@user/crashrep) (Ping timeout: 240 seconds)
[18:22:14] *** Joins: mahmutov (~mahmutov@37.155.74.96)
[18:22:28] *** Quits: Viewday11 (~Viewday@user/viewday) (Read error: Connection reset by peer)
[18:22:29] *** Viewday113 is now known as Viewday11
[18:23:22] *** Joins: smallville7123 (~smallvill@cpe-172-193-72-46.qld.foxtel.net.au)
[18:24:16] *** Quits: X-Scale (~ARM@83.223.232.175) (Ping timeout: 272 seconds)
[18:24:18] *** X-Scale` is now known as X-Scale
[18:24:34] *** Joins: crashrep (~crashrep@user/crashrep)
[18:25:15] *** Quits: smallvil_ (~smallvill@cpe-172-193-72-46.qld.foxtel.net.au) (Ping timeout: 256 seconds)
[18:26:19] *** Joins: dogverflow (~dogverflo@ip1f10d710.dynamic.kabel-deutschland.de)
[18:26:33] *** Quits: dogbert2 (~Bill@ip70-170-79-7.lv.lv.cox.net) (Remote host closed the connection)
[18:26:36] *** Joins: night_wulfe (~wulfe@cpe-174-103-156-213.cinci.res.rr.com)
[18:26:39] *** Quits: wroathe (~wroathe@user/wroathe) (Ping timeout: 256 seconds)
[18:26:50] *** Joins: dogbert2 (~Bill@ip70-170-79-7.lv.lv.cox.net)
[18:27:34] *** Joins: meator (~meator@user/meator)
[18:28:55] *** Quits: crashrep (~crashrep@user/crashrep) (Ping timeout: 240 seconds)
[18:29:56] *** Joins: crashrep (~crashrep@user/crashrep)
[18:30:18] *** Joins: Tangent-Man (~Tang3nt-M@cpc145602-basl14-2-0-cust33.20-1.cable.virginm.net)
[18:30:34] *** Joins: winstreak (~winstreak@dslb-094-218-009-104.094.218.pools.vodafone-ip.de)
[18:31:03] *** Joins: the_lanetly_052_ (~the_lanet@185.30.88.133)
[18:32:34] *** Quits: mh3f (~mdhowle@cpe-98-25-217-234.sc.res.rr.com) (Remote host closed the connection)
[18:32:35] *** Quits: bzng (~bzng4@188-23-202-239.adsl.highway.telekom.at) (Read error: Connection reset by peer)
[18:32:53] *** Quits: bbju (~bbju@203-69-187-77.hinet-ip.hinet.net) (Ping timeout: 256 seconds)
[18:33:07] *** Joins: c2f00 (~dogverflo@ip1f10d710.dynamic.kabel-deutschland.de)
[18:33:42] *** Quits: the_lanetly_052 (~the_lanet@194.135.169.126) (Ping timeout: 260 seconds)
[18:34:52] *** Joins: bebyx (~Thunderbi@user/bebyx)
[18:35:46] *** Quits: dogverflow (~dogverflo@ip1f10d710.dynamic.kabel-deutschland.de) (Ping timeout: 268 seconds)
[18:35:58] *** Quits: akuma (~i.am@user/marlboro) (Quit: a pentium 100 "running" windows 11 trying to play Last of Us II at ps4emu... that's my brain trying understand 0->R->R->R/2R->0)
[18:37:29] *** Joins: AmR (~AmREiSa@197.42.112.70)
[18:38:51] *** Quits: winstreak (~winstreak@dslb-094-218-009-104.094.218.pools.vodafone-ip.de) (Ping timeout: 268 seconds)
[18:39:17] *** Quits: kaph (~kaph@net-109-116-124-149.cust.vodafonedsl.it) (Ping timeout: 240 seconds)
[18:39:52] *** Joins: dogverflow (~dogverflo@ip1f10d710.dynamic.kabel-deutschland.de)
[18:40:09] *** Joins: ramzy_ (~ramzy@102.44.102.37)
[18:40:44] <ramzy_> ok i got the classic 'how do i learn C' kind of question
[18:41:09] <ramzy_> first of all what's a nonbloated C compiler
[18:42:19] <ramzy_> also how can i turn the binaries to .exe , .apk or anything else
[18:44:17] *** Joins: kaph (~kaph@net-109-116-124-149.cust.vodafonedsl.it)
[18:44:24] *** Quits: meator (~meator@user/meator) (Ping timeout: 268 seconds)
[18:45:08] <nomagno> namzy_: I have found the best balance between being light and being useful in tcc (tiny C compiler), though you might want to stick to the two good ol' GNU C open source compilers: GCC and Clang. These have the best debugging and optimization capabilities, however they're bloated by every reasonable metric
[18:45:22] <pragma-> what do you consider to be bloat?
[18:45:54] <nomagno> pragma-: if they're using the word bloat, I'd say the two biggest compilers are probably bloat.
[18:46:44] <ramzy_> pragma-: more space, memory usage...etc with no benifet or optimisation
[18:47:18] <pragma-> that space and memory usage is useful to somebody.
[18:47:23] *** Joins: SaltHilStroller_ (~SaltHillS@206.223.160.26)
[18:47:37] <ramzy_> then not bloat
[18:47:57] <nomagno> namzy_: The binaries are produced in .exe format on Windows already, so that question is weird. To "turn a C program into a .apk binary" can't be done, because .apk isn't really a binary format. An Android .apk package contains a main java program and plain Linux binaries, so you need (mostly, not getting into the weird edge cases) to write Java if you want the ".apk to be installable", to put it some way
[18:48:05] <pragma-> it's "bloat" to those for whom the space and memory usage isn't useful.
[18:49:36] <ramzy_> nomagno: any articles about the apk?
[18:49:45] <pragma-> use the android ndk
[18:50:35] <ramzy_> thx pragma- nomagno
[18:50:50] <nomagno> pragma-: the android ndk produces android binaries, which are just Linux binaries that run on Android. You still need to write Java
[18:51:31] <pragma-> you don't need to.
[18:51:31] <ramzy_> they just change them to arm right? nomagno
[18:51:57] <nomagno> There is a way to write C for the Android app main loop and graphics (raw OpenGL), its insanely quirky but I've actually used it, let me look for the link
[18:52:12] <fizzie> Most of the time, it produces shared libraries rather than binaries. And you don't have to *write* Java; there's a convenience activity included that does the bare minimum that you can declare to use.
[18:52:34] <nomagno> Well, I meant "run Java"
[18:52:36] <fizzie> It's not even "insanely quirky", it's just https://developer.android.com/reference/android/app/NativeActivity + https://github.com/android/ndk-samples/tree/master/native-activity
[18:52:37] <candide> Title of fizzie's link: ndk-samples/native-activity at master Â· android/ndk-samples Â· GitHub
[18:52:42] <nomagno> https://github.com/cnlohr/rawdrawandroid
[18:53:27] <nomagno> This allows you to make .apk installable archives that don't run any Java, they only link with the stub Android SDK interface ^
[18:53:36] <nomagno> I'm unsure how it works low-level, but I've tried it and it surprisingly works
[18:53:40] *** Joins: nostar (~nostar@68.51.221.108)
[18:53:50] <nomagno> And with actual graphics
[18:54:59] <ramzy_> sinci everything ive written is CLI only i have no idea how basic graphics even work
[18:55:03] <nomagno> <jni.h>
[18:55:44] *** Quits: six666 (~six666@117.175.116.227) (Quit: Client closed)
[18:56:01] <nomagno> ramzy_: There are two approaches: you draw the UI internally and then copy the pixels (slow but hey), or you use raw instructions meant for the GPU to draw lines around
[18:58:00] <ramzy_> so those are supposed to go into the code
[18:58:27] <ramzy_> and if a 'button' is clicked it changes it changes a variable for example...
[19:06:35] *** Joins: mrgz (~mrgz@201-42-0-191.dsl.telesp.net.br)
[19:09:39] *** Quits: dec0d3r (~dec0d3r@2001:8003:480a:e00:e07:e7c3:7efc:ed0f) (Quit: Leaving)
[19:09:54] *** Quits: jjido (~Denis@2a02:c7f:5c91:e700:e4e8:d997:3422:7c95) (Quit: My MacBook Air has gone to sleep. ZZZzzzâ€¦)
[19:16:06] *** Joins: FluffyMask (~masque@user/fluffymask)
[19:17:34] *** Joins: constxd (~brad@142.134.79.191)
[19:18:13] *** Quits: dogverflow (~dogverflo@ip1f10d710.dynamic.kabel-deutschland.de) (Remote host closed the connection)
[19:18:16] *** Quits: kaph (~kaph@net-109-116-124-149.cust.vodafonedsl.it) (Ping timeout: 245 seconds)
[19:22:55] *** Joins: freakazoid343 (~matt@2603-9000-cf03-86c3-b86a-2c62-17f3-bfd1.inf6.spectrum.com)
[19:23:33] *** Joins: wresinski (~wresinski@213.173.35.225)
[19:24:12] *** Joins: motherfsck (~motherfsc@user/motherfsck)
[19:24:32] *** Joins: bnchs (~bnchs@160.177.15.129)
[19:24:56] *** Quits: freakazoid333 (~matt@2603:9000:cf03:86c3:b86a:2c62:17f3:bfd1) (Ping timeout: 245 seconds)
[19:25:53] <bnchs> does subtracting a pointer with another pointer (for string processing functions) work or will there be problems on CPUs with addresses bigger than how much the CPU can handle?
[19:25:55] *** Quits: crashrep (~crashrep@user/crashrep) (Ping timeout: 240 seconds)
[19:26:25] *** Joins: Rynn (~rynn@216.30.158.198)
[19:26:26] <bnchs> like 16 GB on a 32-bit computer
[19:27:39] <fizzie> If you can have the string in memory in the first place, you can do pointer arithmetic on it (with the usual constraints, like you can only subtract two pointers if they point to elements of the same array).
[19:28:25] *** Joins: LordJohn (~lordjohn@l37-194-102-53.novotelecom.ru)
[19:29:03] <bnchs> oh
[19:29:11] <xiaomiao> bnchs: 16GB on a 32bit machine forces you to do horrible things like PAE
[19:29:41] <bnchs> yes i knew about PAE
[19:29:45] *** Joins: crashrep (~crashrep@user/crashrep)
[19:29:47] <bnchs> i wonder how is it possible
[19:30:04] <xiaomiao> segmented
[19:30:11] *** Quits: brindaberg[m] (~brindaber@2001:470:69fc:105::1:873e) (Quit: You have been kicked for being idle)
[19:30:18] <xiaomiao> similar to how it used to be done on 8 and 16bit machines
[19:30:32] *** Joins: brindaberg[m] (~brindaber@2001:470:69fc:105::1:873e)
[19:30:56] <xiaomiao> also means that you need more than native pointer length (or reduced address granularity)
[19:31:11] <xiaomiao> (see for example JVM's compressed object pointers)
[19:31:12] <fizzie> I guess it *is* technically allowed for `ptrdiff_t` (the type of the result of subtracting two pointers) to be insufficient to represent all valid differences though. But I think typically it tends to be the same size as `size_t`, which already puts a limit on how much memory you could allocate. And any implementation-specific things like special qualifiers for pointers to different address spaces would
[19:31:14] <fizzie> be out of scope.
[19:31:14] *** Parts: brindaberg[m] (~brindaber@2001:470:69fc:105::1:873e) ()
[19:31:24] *** Quits: bebyx (~Thunderbi@user/bebyx) (Ping timeout: 272 seconds)
[19:32:42] *** Quits: chiselfuse (~chiselfus@user/chiselfuse) (Remote host closed the connection)
[19:33:11] <xiaomiao> afaik you can't leverage PAE on e.g. linux to have a single process address more than 4GB RAM (actually a bit less, ~3.8GB)
[19:33:18] *** Joins: chiselfuse (~chiselfus@user/chiselfuse)
[19:33:19] <SaltHilStroller_> I have a very basic header file very similar to this: https://onlinegdb.com/uBXpJhLK0a . It compiles fine on onlinegdb, but with my compiler I'm getting: `error: expected â€˜;â€™, identifier or â€˜(â€™ before â€˜enumâ€™`
[19:33:34] *** Joins: byteskeptical (~amnesia@user/byteskeptical)
[19:33:55] *** Quits: crashrep (~crashrep@user/crashrep) (Ping timeout: 240 seconds)
[19:34:32] *** Quits: gproto23 (~gproto23@user/gproto23) (Remote host closed the connection)
[19:35:04] <trenka> virtual address is 32bits on PAE machine
[19:35:20] <SaltHilStroller_> OOPS just kidding. I was missing a semi-colon in a different header file that was causing this error
[19:35:50] *** Quits: ramzy_ (~ramzy@102.44.102.37) (Read error: Connection reset by peer)
[19:35:59] *** Quits: Dean (~Dean@165-73-119-36.ip.afrihost.capetown) (Ping timeout: 252 seconds)
[19:36:08] *** Joins: ramzy (~ramzy@102.44.102.37)
[19:36:32] *** Joins: jmiehe (~Thunderbi@user/jmiehe)
[19:37:42] *** Joins: mikoto-chan (~mikoto-ch@213.177.151.239)
[19:38:51] *** Quits: tejr (~tejr@user/tejr) (Remote host closed the connection)
[19:39:14] *** Joins: tejr (~tejr@user/tejr)
[19:42:19] *** Quits: msk (~Thunderbi@89.205.124.39) (Quit: msk)
[19:42:35] *** Quits: gildasio (~gildasio@gateway/tor-sasl/gildasio) (Ping timeout: 240 seconds)
[19:42:36] *** Joins: msk (~Thunderbi@89.205.124.59)
[19:42:57] *** Joins: kaph (~kaph@rm-19-62-210.service.infuturo.it)
[19:44:51] *** Quits: eddybilley (~freddieti@217.119.232.174) (Ping timeout: 256 seconds)
[19:47:18] *** Joins: oxfuxxx (~oxfuxxx@104.200.132.103)
[19:48:25] *** Joins: crashrep (~crashrep@user/crashrep)
[19:49:08] *** Quits: dogbert2 (~Bill@ip70-170-79-7.lv.lv.cox.net) (Ping timeout: 272 seconds)
[19:49:40] *** Joins: bebyx (~Thunderbi@user/bebyx)
[19:51:20] *** Quits: LordJohn (~lordjohn@l37-194-102-53.novotelecom.ru) (Read error: Connection reset by peer)
[19:52:55] *** Quits: crashrep (~crashrep@user/crashrep) (Ping timeout: 240 seconds)
[19:53:04] *** Joins: FatAlbert (~archer@user/tessio)
[19:54:09] *** Quits: oxfuxxx (~oxfuxxx@104.200.132.103) (Ping timeout: 252 seconds)
[19:54:10] *** Quits: FatAlbert (~archer@user/tessio) (Client Quit)
[19:55:12] *** Joins: cheakoirccloud (uid293319@id-293319.ilkley.irccloud.com)
[19:55:19] *** kurahaupo_ is now known as kurahaupo
[19:55:47] *** Joins: crashrep (~crashrep@user/crashrep)
[20:00:15] *** Quits: crashrep (~crashrep@user/crashrep) (Ping timeout: 240 seconds)
[20:01:26] *** Joins: oxfuxxx (~oxfuxxx@104.200.132.103)
[20:01:30] *** Joins: jellie (~luv_panda@user/jellie)
[20:02:00] *** Quits: wresinski (~wresinski@213.173.35.225) (Quit: Client closed)
[20:05:07] *** Joins: crashrep (~crashrep@user/crashrep)
[20:05:49] *** Quits: oxfuxxx (~oxfuxxx@104.200.132.103) (Ping timeout: 256 seconds)
[20:10:41] *** Quits: ramzy (~ramzy@102.44.102.37) (Ping timeout: 256 seconds)
[20:11:06] *** Joins: gildasio (~gildasio@gateway/tor-sasl/gildasio)
[20:12:12] *** Joins: oxfuxxx (~oxfuxxx@104.200.132.103)
[20:12:19] *** Quits: tmpm697 (~tmpm697@171.224.179.36) (Remote host closed the connection)
[20:13:33] *** Joins: bnchs__ (~bnchs@105.155.77.102)
[20:15:48] *** Quits: bnchs (~bnchs@160.177.15.129) (Ping timeout: 240 seconds)
[20:20:50] *** Joins: Viewday112 (~Viewday@user/viewday)
[20:22:12] *** Quits: Viewday11 (~Viewday@user/viewday) (Ping timeout: 240 seconds)
[20:22:13] *** Viewday112 is now known as Viewday11
[20:22:49] *** Quits: zer0x_ (~zer0x@58.186.65.98) (Ping timeout: 256 seconds)
[20:25:04] *** Joins: AbleBacon (~AbleBacon@user/AbleBacon)
[20:25:22] *** Joins: bnchs (~bnchs@105.155.77.102)
[20:25:42] *** Quits: bnchs__ (~bnchs@105.155.77.102) (Read error: Connection reset by peer)
[20:26:15] *** Quits: coruja (~coruja@user/coruja) (Quit: WeeChat 3.4)
[20:27:03] *** Joins: coruja (~coruja@user/coruja)
[20:28:22] *** Joins: ramzy (~ramzy@102.44.102.37)
[20:30:37] *** Quits: kaph (~kaph@rm-19-62-210.service.infuturo.it) (Ping timeout: 240 seconds)
[20:30:42] *** Joins: effexzi (uid474242@id-474242.ilkley.irccloud.com)
[20:31:04] *** Quits: Emet-Selch (~haise01@user/haise01) (Read error: Connection reset by peer)
[20:31:28] *** Quits: kts (~kts@103.73.237.133) (Quit: Konversation terminated!)
[20:32:19] *** Joins: eddybilley (~freddieti@2a02-a454-7f89-1-6d53-ac5e-7f4b-6114.fixed6.kpn.net)
[20:33:27] *** Quits: joomla9 (uid543104@id-543104.lymington.irccloud.com) ()
[20:33:38] *** Quits: jellie (~luv_panda@user/jellie) (Ping timeout: 260 seconds)
[20:35:12] *** Joins: jellie (~luv_panda@user/jellie)
[20:35:57] *** Joins: cvmn (~caveman@gateway/tor-sasl/caveman)
[20:36:53] *** Quits: Timmie (~Timmie@144-39-144-85.ftth.glasoperator.nl) (Remote host closed the connection)
[20:37:19] *** Quits: eddybilley (~freddieti@2a02-a454-7f89-1-6d53-ac5e-7f4b-6114.fixed6.kpn.net) (Ping timeout: 256 seconds)
[20:39:24] *** Quits: cursey (~cursey@user/cursey) (Quit: bye)
[20:39:43] *** Joins: cursey (~cursey@user/cursey)
[20:46:29] *** Quits: fe23 (~fe23@2409:8a34:462:2ab0:5509:72d1:28c1:4b0f) (Quit: fe23)
[20:47:11] *** Quits: pretty_dumm_guy (trottel@gateway/vpn/protonvpn/prettydummguy/x-88029655) (Ping timeout: 256 seconds)
[20:47:46] *** Joins: kts (~kts@103.73.237.133)
[20:48:55] *** Joins: dyeplexer (~dyeplexer@user/dyeplexer)
[20:49:59] *** Joins: pretty_dumm_guy (trottel@gateway/vpn/protonvpn/prettydummguy/x-88029655)
[20:53:24] *** Joins: terminalpusher (~terminalp@2a01:586:8ebf:1:61de:4bc4:bbfb:5388)
[20:53:25] *** Quits: seninha (~chatzilla@user/seninha) (Quit: ChatZilla 0.9.93 [SeaMonkey 2.53.10.2/20220226204633])
[20:53:56] *** Joins: kaph (~kaph@151.47.2.1)
[20:55:55] *** Quits: crashrep (~crashrep@user/crashrep) (Ping timeout: 240 seconds)
[20:55:56] *** Quits: beepbooptheory (~mik-wsl@50.216.98.94) (Ping timeout: 250 seconds)
[20:56:51] *** Joins: joomla9 (uid543104@id-543104.lymington.irccloud.com)
[20:58:48] *** Quits: kaph (~kaph@151.47.2.1) (Ping timeout: 272 seconds)
[21:00:14] *** Quits: vicfred (~vicfred@user/vicfred) (Quit: Leaving)
[21:00:15] *** Quits: cvmn (~caveman@gateway/tor-sasl/caveman) (Ping timeout: 240 seconds)
[21:03:10] *** Joins: rgrinberg (~textual@2806:101e:7:8d89:9c57:a6ef:9411:5b4d)
[21:04:22] *** Quits: magic_ninja (~sparkie1@2600:1700:3ab0:e9f0:489b:ff0a:dcf5:4c60) (Remote host closed the connection)
[21:04:37] *** Quits: oxfuxxx (~oxfuxxx@104.200.132.103) (Ping timeout: 240 seconds)
[21:05:20] *** Joins: Red_ (~Red@41.92-221-233.customer.lyse.net)
[21:05:39] *** Joins: magic_ninja (~sparkie1@2600:1700:3ab0:e9f0::49)
[21:06:58] *** Joins: nmi (~deflected@user/deflected)
[21:07:17] *** Quits: CygniX (~CygniX@2a01:8740:1:727:4e:80:7f:2d) (Excess Flood)
[21:07:22] *** Quits: marshmallow (~marshmall@user/marshmallow) (Quit: ZNC 1.9.x-git-170-9be0cae1 - https://znc.in)
[21:07:25] *** Quits: kurfen (~kurfen@213.152.188.7) (Quit: ZNC 1.8.2 - https://znc.in)
[21:07:26] *** Quits: lowin_ (~lowin@user/lowin) (Quit: Quit)
[21:07:35] *** Joins: CygniX (~CygniX@2a01:8740:1:727:4e:80:7f:2d)
[21:07:42] *** Joins: placeb0 (uid283215@id-283215.lymington.irccloud.com)
[21:07:49] *** Quits: kts (~kts@103.73.237.133) (Remote host closed the connection)
[21:07:52] *** Joins: lowin (~lowin@user/lowin)
[21:08:12] *** Quits: Red (~Red@41.92-221-233.customer.lyse.net) (Ping timeout: 240 seconds)
[21:08:43] *** Joins: marshmallow (~marshmall@94.177.224.11)
[21:08:46] *** Joins: kurfen (~kurfen@213.152.188.7)
[21:08:57] *** Quits: novns (~novns@user/novns) (Ping timeout: 272 seconds)
[21:09:01] *** Joins: phrosty (~phrosty@c-73-225-175-19.hsd1.wa.comcast.net)
[21:09:51] *** Quits: esselfe (~steph@user/esselfe) (Ping timeout: 256 seconds)
[21:10:25] *** Quits: deflected (~deflected@user/deflected) (Ping timeout: 256 seconds)
[21:10:32] *** Joins: neverfindme (~hayden@158.123.160.43)
[21:11:18] *** Joins: oxfuxxx (~oxfuxxx@104.200.132.103)
[21:11:28] *** Quits: the_lanetly_052_ (~the_lanet@185.30.88.133) (Ping timeout: 272 seconds)
[21:12:27] *** Joins: crashrep (~crashrep@user/crashrep)
[21:14:30] *** Joins: esselfe (~steph@user/esselfe)
[21:16:35] *** Quits: crashrep (~crashrep@user/crashrep) (Ping timeout: 240 seconds)
[21:17:33] *** Quits: unlink2 (~unlink@p200300ebcf3e190012b7094ba83de7f3.dip0.t-ipconnect.de) (Remote host closed the connection)
[21:17:38] *** Joins: the_lanetly_052_ (~the_lanet@194.135.152.253)
[21:17:58] *** Quits: neverfindme (~hayden@158.123.160.43) (Ping timeout: 260 seconds)
[21:18:13] *** Quits: oxfuxxx (~oxfuxxx@104.200.132.103) (Ping timeout: 250 seconds)
[21:19:49] *** Joins: Akiva (~Akiva@user/Akiva)
[21:20:03] *** Quits: jellie (~luv_panda@user/jellie) (Ping timeout: 256 seconds)
[21:20:35] *** Joins: jjido (~Denis@2a02:c7f:5c91:e700:e4e8:d997:3422:7c95)
[21:22:03] *** Joins: jellie (~luv_panda@user/jellie)
[21:25:01] *** Joins: oxfuxxx (~oxfuxxx@104.200.132.103)
[21:27:00] *** Red_ is now known as Red
[21:29:13] *** Joins: sweetsymph (uid509475@id-509475.lymington.irccloud.com)
[21:30:01] *** Quits: ns12 (~ns12@user/ns12) (Quit: bye)
[21:30:53] *** Joins: ns12 (~ns12@user/ns12)
[21:31:15] *** Joins: crashrep (~crashrep@user/crashrep)
[21:31:37] *** Quits: oxfuxxx (~oxfuxxx@104.200.132.103) (Ping timeout: 240 seconds)
[21:33:59] *** Quits: mahmutov (~mahmutov@37.155.74.96) (Ping timeout: 268 seconds)
[21:34:41] *** Joins: bnchs__ (~bnchs@105.155.77.102)
[21:35:08] *** Quits: bnchs (~bnchs@105.155.77.102) (Read error: Connection reset by peer)
[21:35:35] *** Quits: crashrep (~crashrep@user/crashrep) (Ping timeout: 240 seconds)
[21:36:16] *** Quits: rgrinberg (~textual@2806:101e:7:8d89:9c57:a6ef:9411:5b4d) (Quit: My MacBook has gone to sleep. ZZZzzzâ€¦)
[21:37:24] *** Joins: mahmutov (~mahmutov@37.155.31.79)
[21:38:55] *** Joins: oxfuxxx (~oxfuxxx@104.200.132.103)
[21:38:55] *** Quits: alch (~alch@151.44.38.189) (Read error: Connection reset by peer)
[21:40:50] *** Quits: jmiehe (~Thunderbi@user/jmiehe) (Quit: jmiehe)
[21:42:42] *** Joins: pendarsoheil (~pendarsoh@173-255-243-214.ip.linodeusercontent.com)
[21:43:18] *** Joins: alch (~alch@151.44.46.246)
[21:43:38] <pendarsoheil> why does adding ptr++ and then *ptr = 1 set the value at ptr[1] to be 1 but a subsequent call to ptr[1] after the addition operation still point to the value 1?
[21:46:48] *** Joins: kaph (~kaph@net-109-116-124-149.cust.vodafonedsl.it)
[21:47:12] *** Joins: ___nick___ (~quassel@cpc68286-cdif17-2-0-cust533.5-1.cable.virginm.net)
[21:48:28] <koollman> pendarsoheil: maybe initially prt[2] == 1, too.
[21:48:40] *** Quits: jjido (~Denis@2a02:c7f:5c91:e700:e4e8:d997:3422:7c95) (Quit: My MacBook Air has gone to sleep. ZZZzzzâ€¦)
[21:48:43] <koollman> without a code example, it is hard to guess
[21:49:28] *** Quits: oxfuxxx (~oxfuxxx@104.200.132.103) (Ping timeout: 272 seconds)
[21:50:45] <pendarsoheil> well my question simply is... if I increment a pointer by an integer 2... pointer is now address 0x2 should pointer[i] not be... *(pointer + i) which points to 0x2 instead of 0x1?
[21:51:58] *** Joins: tiotags (~tiotags@user/tiotags)
[21:53:25] *** Quits: burakcank (~burakcank@has.arrived.and.is.ready-to.party) (Ping timeout: 240 seconds)
[21:53:31] <NRK> what do think happens when you add an integer to a pointer?
[21:53:35] <pragma-> there's no such thing as just "a pointer". what exists is "pointer to T" where T is a type such as char or int or whatever.
[21:53:35] <fizzie> Question is quite unclear. For example, the "*ptr = 1 set the value at ptr[1] to be 1" part just isn't right. `*ptr = 1` is entirely equivalent to `ptr[0] = 1`.
[21:54:07] <pendarsoheil> https://pastebin.com/RmE1xDbd
[21:54:21] <pendarsoheil> expecting ptr[2], ptr[3], and ptr[4] to be value 5
[21:54:22] <pragma-> pointer to float, of all things.
[21:54:39] <pendarsoheil> sorry
[21:54:40] <pendarsoheil> oops
[21:55:03] *** Joins: antropez (~antropez@d216-121-208-163.home3.cgocable.net)
[21:55:12] <pendarsoheil> https://pastebin.com/rqjKLHtf
[21:55:22] *** Quits: sidy (~sidy@user/sidy) (Quit: Leaving)
[21:55:45] <antropez> hello.
[21:56:31] <pendarsoheil> NRK, the value of the address the pointer points to jumps by 128 bits
[21:56:42] <pragma-> 128 bits
[21:57:09] *** Joins: oxfuxxx (~oxfuxxx@104.200.132.103)
[21:57:11] *** Joins: kapil (~kapil@2a01:4f9:c010:c9c3::1)
[21:57:18] <NRK> pendarsoheil: ur going out of bound on your example
[21:57:21] <pendarsoheil> NRK, 64
[21:57:29] *** Quits: ___nick___ (~quassel@cpc68286-cdif17-2-0-cust533.5-1.cable.virginm.net) (Quit: https://quassel-irc.org - Chat comfortably. Anywhere.)
[21:57:32] *** Quits: Natch (~natch@c-4db8e255.014-297-73746f25.bbcust.telenor.se) (Remote host closed the connection)
[21:57:56] <twkm> overflow anyway.
[21:58:14] <NRK> you incremented the pointer by 2, but didn't decrement it back before those printf calls
[21:58:20] <pendarsoheil> Ah, I see.
[21:58:25] <pendarsoheil> Thanks
[21:58:50] <NRK> also, both 128bit and 64bit was wrong answer
[21:59:12] <pendarsoheil> 8 bytes*
[21:59:19] <pendarsoheil> for each increment
[21:59:24] <pendarsoheil> on a 64 bit machine haha
[21:59:24] *** Joins: ___nick___ (~quassel@cpc68286-cdif17-2-0-cust533.5-1.cable.virginm.net)
[21:59:25] <twkm> sigh.
[21:59:25] <pendarsoheil> thanks
[21:59:34] <NRK> ,cc char *p = 0; printf("%p", p+1);
[21:59:36] <candide> NRK: 0x1
[21:59:54] <NRK> where is the 8 byte increment?
[22:00:11] <NRK> ,cc int *p = 0; printf("%p", p+1);
[22:00:13] <candide> NRK: [warning: format '%p' expects argument of type 'void *', but argument 2 has type 'int *' [-Wformat=]] 0x4
[22:00:50] <NRK> do you see what's going on?
[22:01:01] <pendarsoheil> Well there's an error
[22:01:12] <antropez> cast it to a void pointer.
[22:01:24] *** Quits: oxfuxxx (~oxfuxxx@104.200.132.103) (Ping timeout: 240 seconds)
[22:01:30] <antropez> printf("%p", (void*) p + 1);
[22:01:33] <NRK> ,cc int *p = 0; printf("%p", (void *)(p+1));
[22:01:35] <candide> NRK: 0x4
[22:01:52] *** Quits: ___nick___ (~quassel@cpc68286-cdif17-2-0-cust533.5-1.cable.virginm.net) (Client Quit)
[22:01:57] <pendarsoheil> Oh, right.
[22:02:05] <NRK> ,cc short *p = 0; printf("%p", (void *)(p+1));
[22:02:08] <candide> NRK: 0x2
[22:02:09] <pendarsoheil> yea got it
[22:02:09] <antropez> who needs type safety when you can just not have type safety.
[22:02:16] <pendarsoheil> it's laid out like an array
[22:02:22] <pendarsoheil> sorry if my vernacular isn't up to par
[22:02:28] *** Joins: Natch (~natch@c-4db8e255.014-297-73746f25.bbcust.telenor.se)
[22:02:32] *** Quits: geowiesnot (~user@5-51-190-244.abo.bbox.fr) (Ping timeout: 240 seconds)
[22:02:48] <NRK> when you add an integer to a pointer, it increments it to the next element
[22:03:02] <NRK> not by any fixed amount
[22:03:15] <pendarsoheil> not by any fixed amount?
[22:03:19] *** Joins: magla (~gelignite@55d4a4ec.access.ecotel.net)
[22:03:20] <pendarsoheil> Isn't it by the type of the pointer?
[22:03:24] *** Quits: mikoto-chan (~mikoto-ch@213.177.151.239) (Ping timeout: 240 seconds)
[22:03:26] <antropez> yeah, it adds it based off the size of the type in bytes.
[22:03:36] *** Joins: ___nick___ (~quassel@cpc68286-cdif17-2-0-cust533.5-1.cable.virginm.net)
[22:03:52] <antropez> the offset is not the same for each type.
[22:04:09] <pendarsoheil> kk. thanks. Going to go get some coffee in my mug now :)
[22:04:19] <antropez> have fun haha.
[22:06:02] *** Quits: constxd (~brad@142.134.79.191) (Ping timeout: 260 seconds)
[22:06:31] *** Joins: Akuli (~Akuli@87-94-109-214.bb.dnainternet.fi)
[22:07:50] *** Quits: antropez (~antropez@d216-121-208-163.home3.cgocable.net) (Quit: leaving)
[22:07:54] *** Quits: jellie (~luv_panda@user/jellie) (Ping timeout: 268 seconds)
[22:07:55] *** Quits: zeenk (~zeenk@2a02:2f04:a30d:1300:51a3:bcfc:6cda:9fc5) (Quit: Konversation terminated!)
[22:09:22] *** Joins: meator (~meator@user/meator)
[22:09:24] *** Joins: antropez (~antropez@d216-121-208-163.home3.cgocable.net)
[22:09:35] *** Joins: jellie (~luv_panda@user/jellie)
[22:10:57] *** Joins: rgrinberg (~textual@2806:101e:7:70b6:e06b:7369:9241:49f9)
[22:11:11] *** Joins: novns (~novns@user/novns)
[22:11:57] *** Joins: szkl (uid110435@id-110435.uxbridge.irccloud.com)
[22:14:50] *** Joins: Phil-Work (~phil@62.3.100.20)
[22:15:11] *** Quits: terminalpusher (~terminalp@2a01:586:8ebf:1:61de:4bc4:bbfb:5388) (Remote host closed the connection)
[22:15:46] *** Quits: dyeplexer (~dyeplexer@user/dyeplexer) (Ping timeout: 245 seconds)
[22:16:50] *** Joins: Juliu_ (~Juliu@2a02:810b:c640:3ec0:a5e0:1373:74cf:b4e8)
[22:17:01] *** Joins: scoobydoob (~scooby@user/scoobydoo)
[22:19:33] *** Quits: scoobydoo (~scooby@user/scoobydoo) (Ping timeout: 256 seconds)
[22:19:39] *** scoobydoob is now known as scoobydoo
[22:19:48] *** Quits: Juliu (~Juliu@2a02:810b:c640:3ec0:a5e0:1373:74cf:b4e8) (Ping timeout: 240 seconds)
[22:21:08] *** Joins: Viewday118 (~Viewday@user/viewday)
[22:21:35] *** Quits: pendarsoheil (~pendarsoh@173-255-243-214.ip.linodeusercontent.com) (Quit: Leaving)
[22:22:06] *** Quits: bebyx (~Thunderbi@user/bebyx) (Ping timeout: 252 seconds)
[22:23:25] *** Joins: ramzy_ (~ramzy@102.44.102.37)
[22:23:28] *** Quits: dupl0x (~duplox@137.220.127.235) (Ping timeout: 250 seconds)
[22:23:32] *** Quits: freakazoid343 (~matt@2603-9000-cf03-86c3-b86a-2c62-17f3-bfd1.inf6.spectrum.com) (Read error: Connection reset by peer)
[22:23:40] *** Quits: ramzy (~ramzy@102.44.102.37) (Read error: Connection reset by peer)
[22:23:40] *** Quits: Viewday11 (~Viewday@user/viewday) (Ping timeout: 272 seconds)
[22:23:41] *** Viewday118 is now known as Viewday11
[22:23:50] *** Quits: control (~v1@user/control) (Quit: leaving)
[22:24:13] *** Joins: freakazoid343 (~matt@2603:9000:cf03:86c3:b86a:2c62:17f3:bfd1)
[22:26:06] *** Quits: phrosty (~phrosty@c-73-225-175-19.hsd1.wa.comcast.net) (Ping timeout: 260 seconds)
[22:30:10] *** Joins: duplox (~duplox@137.220.127.235)
[22:30:33] *** Joins: crashrep (~crashrep@user/crashrep)
[22:31:24] *** Quits: wlemuel (~wlemuel@210.22.124.110) (Read error: Connection reset by peer)
[22:32:22] *** Joins: phrosty (~phrosty@c-73-225-175-19.hsd1.wa.comcast.net)
[22:32:51] *** Joins: Guest69 (~Guest69@182.64.88.197)
[22:32:52] *** Quits: duplox (~duplox@137.220.127.235) (Client Quit)
[22:33:38] <Guest69> Why is this program not printing the correct output? https://bpa.st/6Q4A
[22:33:54] <Guest69> I'm getting `0` in `...it is now 0`
[22:34:35] *** Quits: crashrep (~crashrep@user/crashrep) (Ping timeout: 240 seconds)
[22:36:04] *** Joins: wlemuel (~wlemuel@210.22.124.110)
[22:36:26] *** Joins: crashrep (~crashrep@user/crashrep)
[22:37:20] *** Joins: neverfindme (~hayden@158.123.160.43)
[22:38:00] *** Quits: vdamewood (~vdamewood@fedora/vdamewood) (Read error: Connection reset by peer)
[22:39:12] <Maxdamantus> Guest69: `idx[p - 1]` refers to the same thing as `idx[p++]` beforehand.
[22:39:15] *** Joins: vdamewood (~vdamewood@fedora/vdamewood)
[22:39:30] *** Quits: iomari891 (~iomari891@105.112.138.38) (Ping timeout: 272 seconds)
[22:40:35] *** Quits: crashrep (~crashrep@user/crashrep) (Ping timeout: 240 seconds)
[22:40:51] *** Quits: neverfindme (~hayden@158.123.160.43) (Client Quit)
[22:40:58] <Guest69> yes, but in each loop, it's printing zero instead of `pairs[i].loser` Maxdamantus
[22:41:24] <Guest69> p is initialized to 0
[22:42:05] <Maxdamantus> Then `pairs[i].loser` is probably 0. Your code snippet doesn't include enough to indicate what it should be.
[22:43:02] <Guest69> The output is correct for `pairs[i].loser` I'm getting correct values for the first part. It's only the second part of line 5 that's printing 0
[22:44:39] <Maxdamantus> Maybe you're using the wrong types.
[22:45:03] <Maxdamantus> %d should take an `int`. if you're passing `long` values instead, that could very likely cause that issue.
[22:45:04] *** Quits: Haxxa (~Haxxa@203-123-96-204.ip4.superloop.com) (Quit: Haxxa flies away.)
[22:45:22] <Guest69> I'm only dealing with `int` at the moment
[22:46:01] <Maxdamantus> That's not clear from the paste, because it's too limited.
[22:46:21] <Guest69> `loser 1 added. it is now 0` .. `loser 2 added. it is now 0`
[22:46:28] <Guest69> why aren't the two equal?
[22:47:11] <Maxdamantus> You need to show more code. I'd say the most likely cause is that `pairs[i].loser` is not an `int` but something bigger.
[22:47:52] <Guest69> There are over 330 loc in this file...
[22:48:08] *** Joins: Haxxa (~Haxxa@203-123-96-204.ip4.superloop.com)
[22:48:27] <Guest69> https://bpa.st/HEIQ
[22:51:13] *** Joins: crashrep (~crashrep@user/crashrep)
[22:51:37] *** Joins: constxd (~brad@142.134.79.191)
[22:51:43] <fizzie> Likely unrelated to your actual issue, but with no initializer the initial value of `idx` is indeterminate, so you can't just start using it.
[22:52:14] <fizzie> If you want it to be initially full of zeroes, it needs an `= {0}` in the declaration.
[22:52:50] <Guest69> I tried doing that but it reports an error, "You cannot initialize variable-sized objects"
[22:52:57] <Guest69> So I'm using `calloc()` now
[22:55:15] *** Quits: crashrep (~crashrep@user/crashrep) (Ping timeout: 240 seconds)
[22:58:02] <Maxdamantus> ,cc long long a = 42; printf("%d, %d", a, a);
[22:58:04] <candide> Maxdamantus: [warning: format '%d' expects argument of type 'int', but argument 2 has type 'long long int' [-Wformat=]  warning: format '%d' expects argument of type 'int', but argument 3 has type 'long long int' [-Wformat=]] 42, 42
[22:58:09] *** Joins: SGautam (uid286066@id-286066.ilkley.irccloud.com)
[22:58:28] <Maxdamantus> on 32-bit x86, that will normally print "42, 0"
[22:58:49] <Maxdamantus> Where is `pairs` defined?
[22:59:08] <Guest69> It's a global declaration
[22:59:17] <Maxdamantus> I can see that.
[22:59:29] <Guest69> `pair pairs[n * (n - 1) / 2]`
[22:59:35] *** Quits: kenanmarasli (~kenanmara@user/kenanmarasli) (Quit: Leaving)
[22:59:41] <Maxdamantus> Okay, and what is `pair` defined as?
[23:00:00] <Guest69> It is a struct, with two `int` -- winner and loser
[23:00:56] *** Joins: FatAlbert (~archer@user/tessio)
[23:01:02] <Guest69> Ohh. I just realized I'm using an online IDE
[23:01:05] <FatAlbert> ahalan wasahalan
[23:01:36] <Guest69> Could be the case that the website is using 32-bit systems.
[23:03:31] <Guest69> Also, I think initializing the array to zero would not be a great choice because I need to check for `0` values in this program, and that wouldn't be possible if the array is initialized to 0
[23:04:41] *** Quits: sord937 (~sord937@gateway/tor-sasl/sord937) (Quit: sord937)
[23:04:47] *** Joins: extropiator (~admin@user/extropiator)
[23:06:17] *** Joins: crashrep (~crashrep@user/crashrep)
[23:08:32] *** Quits: Guest69 (~Guest69@182.64.88.197) (Quit: Client closed)
[23:08:49] *** Quits: extropiator (~admin@user/extropiator) (Quit: leaving)
[23:09:04] *** Joins: extropiator (~admin@user/extropiator)
[23:09:16] *** Quits: jellie (~luv_panda@user/jellie) (Ping timeout: 272 seconds)
[23:09:57] *** Joins: gproto23 (~gproto23@user/gproto23)
[23:10:06] <fizzie> Uh. Leaving it uninitialised is still... oh, they're gone.
[23:10:35] *** Quits: crashrep (~crashrep@user/crashrep) (Ping timeout: 240 seconds)
[23:11:02] *** Quits: constxd (~brad@142.134.79.191) (Quit: WeeChat 3.3)
[23:11:40] <sham1> I hate when that happens
[23:13:20] *** Joins: oxfuxxx (~oxfuxxx@37.19.212.98)
[23:13:37] *** Joins: plastico (~plastico@neomutt/plastico)
[23:14:30] *** Quits: oxfuxxx (~oxfuxxx@37.19.212.98) (Client Quit)
[23:15:32] *** Quits: DarthGandalf (user@znc/developer/DarthGandalf) (Quit: Bye)
[23:16:01] *** Joins: crashrep (~crashrep@user/crashrep)
[23:16:10] *** Joins: DarthGandalf (user@znc/developer/DarthGandalf)
[23:19:05] *** Joins: jjido (~Denis@2a02:c7f:5c91:e700:e4e8:d997:3422:7c95)
[23:21:29] *** Joins: jellie (~luv_panda@user/jellie)
[23:21:35] *** Quits: crashrep (~crashrep@user/crashrep) (Ping timeout: 240 seconds)
[23:21:57] *** Joins: ramzy (~ramzy@154.187.202.3)
[23:22:07] *** Joins: Lord_of_Life_ (~Lord@user/lord-of-life/x-2819915)
[23:22:32] *** Quits: xa0s (~xa0s@mab.sdf.org) (Quit: leaving)
[23:22:34] *** Quits: Lord_of_Life (~Lord@user/lord-of-life/x-2819915) (Ping timeout: 272 seconds)
[23:23:13] <SaltHilStroller_> Looking to map a series of close to sequential memories addresses to a small hash table. Recommendations on a high performant, simple hash function?
[23:24:12] *** Quits: ramzy_ (~ramzy@102.44.102.37) (Ping timeout: 240 seconds)
[23:24:22] <SaltHilStroller_> I was looking at Knuths variant as something trivial to implement
[23:24:55] *** Lord_of_Life_ is now known as Lord_of_Life
[23:25:03] <yolo> size_t s; const char *p1="xyz"; const char *p2=p1+2; s = p2 - p1; -- "-Wsign-conversion" triggered. how to silence it? using uintptr_t? p1 and p2 are both default to intptr_t it seems?
[23:25:14] *** Joins: HackerSmacker (~HackerSma@92.119.18.92)
[23:25:24] *** Quits: mahmutov (~mahmutov@37.155.31.79) (Ping timeout: 240 seconds)
[23:25:37] *** Joins: crashrep (~crashrep@user/crashrep)
[23:26:53] *** Quits: ckdCreations (~ckdCreati@147.55.133.141) (Read error: Connection reset by peer)
[23:26:55] <fizzie> No, p1 and p2 are just pointers.
[23:26:56] *** Joins: bch (~bch@S01069050ca2cbf63.ok.shawcable.net)
[23:27:05] <fizzie> The result of *subtracting* them is a `ptrdiff_t`.
[23:27:27] <yolo> so I have to do a cast here as ptrdiff_t is signed?
[23:28:09] <fizzie> If you need it in a context where you need to (say) compare it against some `size_t`s, sure. If you can just keep it a ptrdiff_t, that's maybe an option too.
[23:28:59] <yolo> thanks, it's to be used with a size_t argument passed in via function-args, so I will just cast, everything cast makes me nervous
[23:29:38] <nitrix> I wonder what flags you're compiling with to get this warning. Both GCC and Clang should've been okay with it.
[23:30:33] <yolo> -Wsign-conversion is the flag, memccpy(d,s,c,count), I use pointer to calculate count here
[23:30:46] <yolo> without -Wsign-conversion no problem
[23:32:02] <nitrix> Signed conversions are fine though. They can be indicate of problems but not always.
[23:32:30] *** Joins: ramzy_ (~ramzy@102.44.102.37)
[23:32:42] <nitrix> Your value is positive and ought to fit a size_t.
[23:34:31] *** Quits: karakedi (~eAC53C340@user/karakedi) (Remote host closed the connection)
[23:34:36] *** Quits: mkf9 (~wm@cloud9p.org) (Ping timeout: 272 seconds)
[23:34:37] *** Quits: ramzy (~ramzy@154.187.202.3) (Ping timeout: 240 seconds)
[23:34:52] <nitrix> If two members of an array were to be more than size_t appart, the array itself would need to be larger than size_t, which can't happen.
[23:35:31] <fizzie> I imagine there's a reason the conversion warnings aren't enabled by the "generic" flags (-Wall, -Wextra).
[23:36:56] *** Quits: placeb0 (uid283215@id-283215.lymington.irccloud.com) (Quit: Connection closed for inactivity)
[23:38:34] *** Parts: HackerSmacker (~HackerSma@92.119.18.92) ()
[23:39:33] *** Quits: gproto23 (~gproto23@user/gproto23) (Remote host closed the connection)
[23:40:37] *** Joins: bebyx (~Thunderbi@user/bebyx)
[23:44:20] <yolo> maybe i need turn off Wsign-conversion after all, it's indeed noisy, but, that kind of bug is hard to find if not
[23:44:38] *** Joins: Guest7398 (~Guest@host28.190-137-37.telecom.net.ar)
[23:44:59] *** Joins: kitsunenokenja (~kitsunech@68.91.220.96)
[23:45:09] *** Quits: MajorBiscuit (~MajorBisc@c-001-019-045.client.tudelft.eduvpn.nl) (Ping timeout: 252 seconds)
[23:45:27] <nitrix> The casts that you've probably littered the codebase with to silence the warnings are a lot more dangerous.
[23:45:45] <nitrix> One change to any of those types and now you have a really hard to find bug.
[23:48:31] *** Joins: HackerSmacker (~HackerSma@92.119.18.92)
[23:49:02] <yolo> sigh
[23:50:15] <nitrix> -Wno-sigh
[23:50:55] <antropez> actually, i usually have -Wconversion on to catch implicit type casts that might cause problems. is that even worth it to have?
[23:51:17] <pragma-> Maxdamantus: you can prove that with the -m32 flag
[23:51:35] <pragma-> maybe.
[23:51:55] *** Quits: vdamewood (~vdamewood@fedora/vdamewood) (Read error: Connection reset by peer)
[23:52:42] *** Joins: vdamewood (~vdamewood@fedora/vdamewood)
[23:53:32] *** Quits: Viewday11 (~Viewday@user/viewday) (Read error: Connection reset by peer)
[23:53:58] <pragma-> ,cc -m32 long long a = 42; printf("%d, %d", a, a);
[23:53:59] <candide> pragma-: 42, 0
[23:55:42] *** Joins: Viewday11 (~Viewday@user/viewday)
[23:56:12] *** Quits: Posterdati (~posterdat@host-87-20-238-140.retail.telecomitalia.it) (Changing host)
[23:56:12] *** Joins: Posterdati (~posterdat@user/Posterdati)
[23:57:09] *** Joins: vysn (~vysn@user/vysn)
