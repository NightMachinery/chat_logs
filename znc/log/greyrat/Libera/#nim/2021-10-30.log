[00:00:07] <FromDiscord> <Imperatorn> That's a good decision model
[00:00:22] *** Quits: PMunch (~PMunch@c01F28BC3.dhcp.as2116.net) (Quit: leaving)
[00:00:24] <FromDiscord> <Rika> that isnt to say that nim can get really close to rust wrt bugs but its not there yet
[00:00:25] <FromDiscord> <Elegantbeef> Nim is memory safe, though has nil, which requires either `wrapnils` `option` or memory that things are nilable üòÄ
[00:00:29] <FromDiscord> <Rika> (edit) "can" => "cant"
[00:00:45] <FromDiscord> <Imperatorn> In general I value time over safety
[00:00:54] <FromDiscord> <Elegantbeef> Yea i mean we have subrange types which allow you to catch other bugs
[00:00:57] <FromDiscord> <Imperatorn> I'm used to null so no biggie
[00:01:11] <FromDiscord> <Imperatorn> What safety features does Nim have?
[00:01:27] <FromDiscord> <Imperatorn> Like for example in D there's the @safe attribute
[00:01:32] <FromDiscord> <Rika> im still waiting on defaults+init fixes
[00:01:41] <FromDiscord> <Rika> In reply to @Imperatorn "Like for example in": which does what
[00:02:49] <FromDiscord> <Imperatorn> sent a long message, see http://ix.io/3DiY
[00:03:04] <FromDiscord> <Rika> let me see
[00:03:45] <FromDiscord> <Rika> nim unsafe features are basically just `cast` and `addr`/`unsafeAddr` (both are unsafe even if one doesnt say it is)
[00:03:56] <FromDiscord> <Rika> i guess also `ptr`/`pointer` of course
[00:04:30] <FromDiscord> <Rika> so no matter what, you can consider any usage of cast and others as unsafe
[00:04:41] <FromDiscord> <Rika> so its really simple to disallow it
[00:04:56] <FromDiscord> <Imperatorn> gshared means traditional global basically
[00:05:13] <FromDiscord> <Elegantbeef> Yea that keyword really just seems to be "our semantics are difficult to follow, so we need a keyword"
[00:05:17] <FromDiscord> <Rika> globals arent considered "unsafe" but they are considered "gc unsafe"
[00:05:33] <FromDiscord> <Rika> what is a void initialiser
[00:05:34] <FromDiscord> <Imperatorn> The weird name is because you shouldn't use it basically üòÖ
[00:05:38] <FromDiscord> <Rika> oh yeah
[00:05:55] <FromDiscord> <Imperatorn> void init is uninitialized memory
[00:05:57] <FromDiscord> <Rika> okay six unsafe stuff, the ones listed above PLUS `emit` i guess
[00:06:10] <FromDiscord> <Imperatorn> By default all variables in D has default values
[00:06:25] <FromDiscord> <Rika> same with nim, but currently it is just zeroed memory]
[00:06:34] <FromDiscord> <Rika> waiting on the RFCs for default
[00:06:40] <FromDiscord> <Imperatorn> üëå
[00:06:56] <FromDiscord> <Rika> `When indexing or slicing an array, an out of bounds access will cause a runtime error.` is default on -d:release
[00:07:21] <FromDiscord> <Rika> `No inline assembler` can be grepped with `asm`
[00:07:36] <FromDiscord> <Rika> `No catching of exceptions that are not derived from class Exception.` completely impossible in nim afaik?
[00:07:43] <FromDiscord> <Imperatorn> So, Nim is a bit "safe" by default?
[00:07:46] <FromDiscord> <Rika> `Calling any System Functions.` what does this even mean?
[00:08:06] <FromDiscord> <Elegantbeef> Yea rika i dont think s
[00:08:08] <FromDiscord> <Rika> `No pointer arithmetic (including pointer indexing).` impossible by default in nim without importing a (third party afaik) module
[00:08:37] <FromDiscord> <Rika> unions are still unsafe in nim so eh
[00:08:49] <FromDiscord> <Rika> i guess theres a lot to grep to check for unsafe features in nim
[00:08:52] <FromDiscord> <Elegantbeef> Well unions are inherently unsafe
[00:08:57] <FromDiscord> <Rika> but its not "we need a new keyword" level
[00:09:00] <FromDiscord> <Elegantbeef> So dont use unions, use tagged unions
[00:09:21] <FromDiscord> <Imperatorn> Sorry, safe is an attribute as well
[00:09:34] <FromDiscord> <Imperatorn> sent a long message, see http://ix.io/3DiZ
[00:10:39] <FromDiscord> <Imperatorn> (edit) "safe" => "system"
[00:11:53] <FromDiscord> <Rika> i still have no idea what those are
[00:11:59] <FromDiscord> <Rika> is that like
[00:12:09] <FromDiscord> <Rika> poor mans effect tracking
[00:12:30] <FromDiscord> <Elegantbeef> It seems like it, poormans strict effects/funcs
[00:12:34] <FromDiscord> <Imperatorn> https://dlang.org/spec/function.html#system-functions
[00:12:37] <FromDiscord> <Rika> nim has effect tracking so you can check if it raises
[00:12:45] <FromDiscord> <Rika> or if it uses stdout/in/err
[00:12:59] <FromDiscord> <Rika> (well not precisely, that was just an example)
[00:14:07] <FromDiscord> <Rika> i guess there should be an effect for unsafe stuff like `cast` `asm` `emit` etc
[00:14:13] <FromDiscord> <Rika> might be nice
[00:14:17] <FromDiscord> <Rika> or useful too
[00:14:25] <FromDiscord> <Rika> i have to go, its like 6 am right now
[00:14:29] <FromDiscord> <Imperatorn> PR coming üòç
[00:14:33] <FromDiscord> <Imperatorn> Oh damn
[00:14:34] <FromDiscord> <Imperatorn> Sleep
[00:14:49] <FromDiscord> <Imperatorn> Thanks for your time!
[00:15:45] <FromDiscord> <Rika> beef go take over
[00:16:08] <FromDiscord> <Elegantbeef> Uhh Rust bad, use Nim
[00:16:12] <FromDiscord> <Elegantbeef> Did i do it right?
[00:16:47] <FromDiscord> <Recruit_main707> nailed it
[00:17:38] <FromDiscord> <Imperatorn> Just a quick anecdote.‚Üµ‚ÜµSome time ago I tried like 50 languages. Wanted to do a simple rest-client thing. Json. It was the only language of those about 40-50 that just worked tm. And I actually understood what I was doing. And was fast
[00:18:28] <FromDiscord> <Imperatorn> So my and Nim already have a past. But I need to go from friends with benefits to something more
[00:20:30] <FromDiscord> <Imperatorn> I don't know where I should start. Is there a "Nim tour" or something?‚Üµ‚ÜµI want to skip the most basic stuff, but not jump right into thousand-dimensional self-modifying metamorphic self healing code
[00:21:28] <mst> I read through the language spec (because I like doing that) and my next step is probably going to be reading the source code to nitter since I probably understand the domain decently
[00:23:52] <FromDiscord> <Rika> Reading source code is okay until you read the fucked ones
[00:24:00] <FromDiscord> <Rika> Not gonna name any names
[00:24:06] <FromDiscord> <Imperatorn> Lol, yeah
[00:24:24] <FromDiscord> <Imperatorn> I want to learn right from the beginning
[00:24:26] <FromDiscord> <Rika> Not just because rude but also because I don‚Äôt know who the fuck I would name either
[00:24:32] <FromDiscord> <Rika> There‚Äôs a book
[00:24:36] <FromDiscord> <Rika> It‚Äôs on manning
[00:24:38] <FromDiscord> <Rika> I think
[00:24:56] <FromDiscord> <Imperatorn> I'll take a look, thanks
[00:25:12] <mst> Rika, I do a lot of reading source code to learn stuff and I can absolutely confirm that sometimes what I learn from a given thing's source code is a whole list of things to never inflict on other developers ever :D
[00:25:42] <FromDiscord> <Imperatorn> Let's put it like this
[00:26:16] <FromDiscord> <Imperatorn> Can you point me to some well written medium-sized Nim project(s)?
[00:26:52] <FromDiscord> <Rika> Anything with a few tens of stars should do
[00:27:41] <nrds> <06Prestige99> not sure if it would help but have you seen nep1? 
[00:40:11] *** Joins: stkrdknmibalz (~test@rrcs-75-87-43-226.sw.biz.rr.com)
[00:48:17] <FromDiscord> <exelotl> In reply to @Imperatorn "I don't know where": personally I like Nim By Example the most: https://nim-by-example.github.io/getting_started/
[00:53:15] <FromDiscord> <exelotl> on the flipside, I absolutely hate Learn Nim in Y Minutes  xD
[00:53:48] <FromDiscord> <Recruit_main707> sent a code paste, see https://play.nim-lang.org/#ix=3Djj
[00:55:20] <FromDiscord> <Elegantbeef> No it cannot tried solving that for prestige and just ended up making a proc that unpacks it to the type
[00:55:33] <FromDiscord> <Elegantbeef> Cant even cast it to work afaik
[00:56:35] <FromDiscord> <Recruit_main707> that sucks :(‚Üµ‚Üµi guess methods would do for most cases, but i am passing the function pointers to c++ and i dont even want to get into that hole
[00:57:14] <FromDiscord> <Elegantbeef> So the best thing to do is just make a template to make a lambda that unpacks it
[00:57:55] <FromDiscord> <Recruit_main707> im sorry but im gonna need an example to understand that üòÖ
[01:01:35] <FromDiscord> <Elegantbeef> https://play.nim-lang.org/#ix=3Djm
[01:01:43] <FromDiscord> <exelotl> it seems I never run into this issue with my vtable system because I {.exportc.} the procs and {.emit.} the tables containing the procs, and C just allows it.
[01:01:48] <FromDiscord> <Elegantbeef> Prestige you might want to look at that aswell, might be a cleaner solution to your problem
[01:02:42] <FromDiscord> <Recruit_main707> does that work when you are doing it in different files?
[01:03:00] <FromDiscord> <Elegantbeef> I dont see why it wouldnt
[01:03:07] <FromDiscord> <Elegantbeef> templates are pasted at their callsite
[01:03:21] <FromDiscord> <Recruit_main707> i meant exelotl's solution
[01:03:42] <FromDiscord> <Elegantbeef> Remember C/C++ is just making one long file
[01:04:20] <FromDiscord> <exelotl> oh, mine is a pain to make work across files, but I got there eventually
[01:04:31] <FromDiscord> <Recruit_main707> the problem with what i did before was that certain types were defined in one file, and then even though i import them on the nim side, the c++ side doesnt (or something like that i am going crazy of staring at the generated code)
[01:04:37] <FromDiscord> <exelotl> https://forum.nim-lang.org/t/7827
[01:05:24] <FromDiscord> <Elegantbeef> You can still use the macro cache to get around it i think exelotl üòÄ
[01:06:46] <FromDiscord> <exelotl> I don't think macrocache can solve this, right? https://media.discordapp.net/attachments/371759389889003532/903759289208934410/unknown.png
[01:07:22] <FromDiscord> <Elegantbeef> Well you add the symbols to the table and access them from other modules, so as long as they're added first it doesnt matter since the symbols are looked up
[01:07:36] <nrds> <06Prestige99> I missed it, what beef?
[01:07:47] <FromDiscord> <Elegantbeef> https://play.nim-lang.org/#ix=3Djm this solution
[01:07:57] <FromDiscord> <Elegantbeef> I might misunderstand the issue and like using macro cache for all my solutions üòÄ
[01:10:45] <nrds> <06Prestige99> ah yes, interesting
[01:10:49] <nrds> <06Prestige99> that looks like it'll work
[01:11:00] <FromDiscord> <Elegantbeef> Less macro heavy and more auditable
[01:12:01] <nrds> <06Prestige99> Thanks for keeping an eye out, this looks nice
[01:13:49] <FromDiscord> <Elegantbeef> Yea it's better than what i had üòõ
[01:14:33] <FromDiscord> <Recruit_main707> thanks for the help btw beef, looking into it rn
[01:31:05] <FromDiscord> <leorize> [haxscramper](https://matrix.to/#/@haxscramper:matrix.org)\: I found the issue with union, `A` and `B` have `sameType()` evaluated to true
[01:32:01] <FromDiscord> <leorize> so I'm just gonna add a hack by evaluating deduplication of generic params by comparing symbols
[01:32:21] <FromDiscord> <leorize> just another day with Nim's typed macros
[01:39:05] <FromDiscord> <Elegantbeef> Yea macrocache does not help that issue exelotl üòÄ
[01:46:10] <FromDiscord> <Recruit_main707> xd made the compiler segfault
[01:48:33] <FromDiscord> <Recruit_main707> oh, made it compile, now pray it works
[01:50:48] <FromDiscord> <Recruit_main707> nvm im so dumb lol
[02:02:57] *** Quits: Vladar (~Vladar@46.162.2.53) (Quit: Leaving)
[03:01:27] *** Quits: stkrdknmibalz (~test@rrcs-75-87-43-226.sw.biz.rr.com) (Ping timeout: 260 seconds)
[03:02:35] <FromDiscord> <no name fits> In reply to @Rika "Reading source code is": I felt a disturbance
[03:02:57] <FromDiscord> <no name fits> My excuse right now is, it's for a gamejam
[03:30:03] *** Quits: mahlon (~mahlon@martini.nu) (*.net *.split)
[03:30:03] *** Quits: neurocyte0132889 (~neurocyte@user/neurocyte) (*.net *.split)
[03:30:03] *** Quits: tk (~tk@ircpuzzles/staff/tk) (*.net *.split)
[03:30:03] *** Quits: Mister_Magister (~Mister_Ma@user/mister-magister/x-2636733) (*.net *.split)
[03:30:03] *** Quits: meowray (~MaskRay@user/meowray) (*.net *.split)
[03:30:03] *** Quits: Yardanico_ (~quassel@2a01:4f8:c2c:df22::2) (*.net *.split)
[03:30:03] *** Quits: euantorano (sid180289@helmsley.irccloud.com) (*.net *.split)
[03:30:04] *** Quits: syl (~z@user/syl) (*.net *.split)
[03:30:18] *** Joins: meowray (~MaskRay@li683-166.members.linode.com)
[03:30:19] *** Joins: Yardanico (~quassel@2a01:4f8:c2c:df22::2)
[03:30:41] *** Joins: mahlon (~mahlon@martini.nu)
[03:30:59] *** Joins: neurocyte0132889 (~neurocyte@46.243.81.22)
[03:31:06] *** Joins: euantorano (sid180289@id-180289.helmsley.irccloud.com)
[03:31:37] *** Quits: neurocyte0132889 (~neurocyte@46.243.81.22) (Changing host)
[03:31:37] *** Joins: neurocyte0132889 (~neurocyte@user/neurocyte)
[03:32:37] *** Joins: Mister_Magister (~Mister_Ma@user/mister-magister/x-2636733)
[03:32:37] *** Joins: syl (~z@user/syl)
[03:32:41] *** Joins: tk (~tk@ircpuzzles/staff/tk)
[03:34:06] <FromDiscord> <geekrelief> On nim playground is there a way to import from github?  I want to import a specific branch commit.
[03:37:17] <FromDiscord> <geekrelief> nevermind.. I thought there might be some hidden feature.
[03:37:29] *** Quits: vicfred (~vicfred@user/vicfred) (Quit: Leaving)
[03:39:18] *** Quits: meowray (~MaskRay@li683-166.members.linode.com) (Changing host)
[03:39:18] *** Joins: meowray (~MaskRay@user/meowray)
[03:51:13] <FromDiscord> <Ricky Spanish> Is there any nimble packages for embedding files into my binary and reading back the embedded bytes?
[03:51:35] <FromDiscord> <Elegantbeef> You dont need a package for that
[03:51:46] <FromDiscord> <Elegantbeef> `const yourData = staticRead("somefile")`
[04:22:36] <FromDiscord> <evoalg> I'm a noob trying to understand object and tuple types, and I can do: "type Test = tuple" or I can do "type Test = object" ... and in both can have eg "data: seq[int]" etc, so when I do "var test: Test" I can then do eg "test.data.add 3" and they seem exactly the same, and I read they are pretty much the same. When would I use one over the other?
[04:23:22] <FromDiscord> <Elegantbeef> Tuples allow you to unpack them and are not distinct
[04:24:17] <FromDiscord> <Elegantbeef> sent a code paste, see https://play.nim-lang.org/#ix=3Dk1
[04:24:33] <FromDiscord> <Elegantbeef> Tuple definitions are just aliases for tuples, so they're not distinct types
[04:25:04] <FromDiscord> <Elegantbeef> sent a code paste, see https://play.nim-lang.org/#ix=3Dk2
[04:26:42] <FromDiscord> <evoalg> oh thanks ... so "A = (int, int)" is another way of defining a tuple ... I didn't know that
[04:26:55] <FromDiscord> <Elegantbeef> It's not defining a tuple
[04:26:59] <FromDiscord> <Elegantbeef> It's an alias to `(int, int)`
[04:27:21] <FromDiscord> <Elegantbeef> Tuples are not considered type safe, if the fields match it's the other type
[04:33:06] <FromDiscord> <evoalg> ok that makes sense from what I read. I'm just trying to understand "var a: A = B((10, 20))". So instead of doing the usual "var a:A = (10, 20)" it's using B instead of A. I haven't see that double parentheses syntax before ... what is it?
[04:33:35] <FromDiscord> <Elegantbeef> It's just a type conversion of a tuple
[04:33:45] <FromDiscord> <Elegantbeef> `(10,20)` is a tuple
[04:34:05] <FromDiscord> <Elegantbeef> `B((10, 20)` converts it to `B`, but then it implictly converts to A on assignment
[04:34:38] <FromDiscord> <evoalg> ohhhh ok ... thanks for you help! I have to read up on type conversions.
[04:35:31] <FromDiscord> <evoalg> btw to paste short snippets of code on here like you do, are you using three back-ticks or something?
[04:36:43] <FromDiscord> <Elegantbeef> Yes
[04:40:04] <FromDiscord> <evoalg> Thank you, you've helped me a lot several times (we have be closer in time zone as you're always active when I am) ... thank you Elegantbeef
[04:40:24] <FromDiscord> <Elegantbeef> Eh i'm always around so that's probably not the case
[04:40:33] <FromDiscord> <Elegantbeef> No problem though, glad to help
[04:41:45] <FromDiscord> <evoalg> lol you must not sleep then hehe
[04:42:08] <FromDiscord> <Elegantbeef> Well i'm in Canada if you do want to play the timezone check
[04:42:57] <FromDiscord> <evoalg> oh I'm in New Zealand
[04:43:30] <FromDiscord> <Elegantbeef> See told you üòõ
[04:44:22] <FromDiscord> <evoalg> You're right hehe ... I find Canadians very smart, you must have good schooling over there
[04:44:58] *** Quits: neurocyte0132889 (~neurocyte@user/neurocyte) (Ping timeout: 268 seconds)
[04:45:07] <FromDiscord> <Elegantbeef> no comment
[04:45:20] <FromDiscord> <Elegantbeef> Let's just say i live in rural Canada so i see the opposite üòõ
[04:47:07] <FromDiscord> <evoalg> hehe, oh but yea that could be a real drag
[04:54:03] *** Joins: vicfred (~vicfred@user/vicfred)
[05:37:49] <FromDiscord> <huantian> sent a code paste, see https://play.nim-lang.org/#ix=3Dkh
[05:37:55] <FromDiscord> <huantian> (edit) "https://play.nim-lang.org/#ix=3Dkh" => "https://play.nim-lang.org/#ix=3Dki"
[05:38:40] <FromDiscord> <huantian> that, makes sense
[05:38:41] <FromDiscord> <Elegantbeef> Of course you can do an alias for that range
[05:38:42] <FromDiscord> <Elegantbeef> sent a code paste, see https://play.nim-lang.org/#ix=3Dkj
[05:38:52] <FromDiscord> <huantian> alias?
[05:39:26] <FromDiscord> <Elegantbeef> sent a code paste, see https://play.nim-lang.org/#ix=3Dkk
[05:39:35] <FromDiscord> <huantian> ah
[06:13:12] *** Quits: arkurious (~arkurious@user/arkurious) (Quit: Leaving)
[07:36:02] *** Quits: supakeen (~user@python/site-packages/supakeen) (Quit: WeeChat 3.3)
[07:36:31] *** Joins: supakeen (~user@python/site-packages/supakeen)
[07:44:21] *** Quits: rockcavera (~rc@user/rockcavera) (Remote host closed the connection)
[07:48:48] <FromDiscord> <evoalg> I had make sure I could declare a tuple in 5 different ways so that I could get it right in my brain before continuing with the tutorials: https://play.nim-lang.org/#ix=3DkS
[09:01:22] <FromDiscord> <evoalg> oh, "var test: (float, float) = (5.0, 5.0)" creates a tuple with a float's, but just doing the simple "var test = (5.0, 5.0)" (so the type is implied) I get a tuple with float64's ... will that break things for me later on or is it generally ok to do it like that? I don't know enough to know if the float64's will be automatically treated the same as floats everywhere?
[09:11:41] <FromDiscord> <Elegantbeef> those are float literals which default to `float` which is an alias to float64
[09:11:58] <FromDiscord> <Elegantbeef> if you want 32bit floats you can do `5.0f` or `5.0f32`
[09:12:14] <FromDiscord> <Elegantbeef> If you want to be explicit about 64bit you can do `5.0d or 5.0f64`
[09:13:05] <FromDiscord> <Rika> The d one I don‚Äôt think works
[09:13:15] <FromDiscord> <Gumber> `5.0f` = 64 bit float
[09:13:24] <FromDiscord> <Gumber> `5.0'f32` = 32 bit float
[09:13:28] <FromDiscord> <Elegantbeef> !eval echo 5.0f
[09:13:31] <FromDiscord> <Gumber> or `5.0f32`
[09:13:32] <NimBot> 5.0
[09:13:41] <FromDiscord> <Elegantbeef> !eval echo typeof(5.0f)
[09:13:41] <FromDiscord> <Gumber> !eval echo sizeof(5.0f)
[09:13:46] <NimBot> float32
[09:13:46] <NimBot> 4
[09:13:53] <FromDiscord> <Gumber> oh
[09:14:01] <FromDiscord> <Gumber> whyyyyyyyyyyyyyyyyy
[09:14:31] <FromDiscord> <Gumber> I guess f64 exists too but f defaulting to 32 is weired
[09:14:36] <FromDiscord> <Gumber> (edit) "weired" => "weird"
[09:14:49] <FromDiscord> <Elegantbeef> !eval echo typeof(5.0d)
[09:14:49] <FromDiscord> <Gumber> considering `float` defaults to 64 bits
[09:14:52] <NimBot> float64
[09:15:00] <FromDiscord> <Gumber> ugh
[09:15:16] <FromDiscord> <Gumber> seems very silly
[09:18:00] <FromDiscord> <Elegantbeef> Yea probably is, but atleast literals arent really often a problem
[09:18:22] <FromDiscord> <Elegantbeef> Since floats generally dont care in their operations iirc
[09:18:52] <FromDiscord> <Gumber> well it definitely matters in graphics programming
[09:19:13] <FromDiscord> <Gumber> and when you're doing financial calculations
[09:21:06] <FromDiscord> <Elegantbeef> Eh i think in most calculations converts to the bigger one, but idk not looking at the VM impl üòÄ
[10:19:13] *** Quits: vicfred (~vicfred@user/vicfred) (Quit: Leaving)
[10:34:33] *** Quits: nrds (~NimBot@ns501209.ip-142-4-210.net) (Remote host closed the connection)
[11:06:29] <FromDiscord> <Bung> In reply to @Elegantbeef "Eh i think in": ‚ÄúVM impl‚Äù
[11:11:30] <FromDiscord> <Elegantbeef> What?
[11:32:51] <FromDiscord> <blashyrk> Hi, is the Nim forum set for manual approval of new users? I just made my first post but it's invisible since I'm "moderated" üòÑ
[11:43:43] *** Quits: arkanoid (~arkanoid@2-238-151-49.ip244.fastwebnet.it) (Ping timeout: 265 seconds)
[11:49:37] <FromDiscord> <Rika> Yes
[11:50:24] <NimEventer> New thread by Benob: Arraymancer: dot/matmul equivalent for higher-dim tensors, see https://forum.nim-lang.org/t/8565
[11:56:24] <NimEventer> New thread by Puruneko: The default value of an argument may take priority over the argument given at the time of the call, see https://forum.nim-lang.org/t/8566
[12:06:25] <NimEventer> New thread by Seves: Asyncdispatch on android, see https://forum.nim-lang.org/t/8567
[13:55:56] <FromDiscord> <hmmm> boys how do I invert the matrix of a seq of seqs? I need to exchange rows with columns
[13:57:18] <FromDiscord> <hmmm> I think I should use dataframes but it's known I'm a lazy bum
[14:01:24] <FromDiscord> <Rika> manually
[14:01:39] <FromDiscord> <Rika> https://nim-lang.org/docs/system.html#swap%2CT%2CT
[14:02:05] <FromDiscord> <hmmm> jeesus
[14:02:10] <FromDiscord> <hmmm> this looks painful
[14:04:12] <FromDiscord> <Rika> doubt
[14:04:24] <FromDiscord> <Rika> prolly just two for loops and that swap proc
[14:20:50] <FromDiscord> <Imperatorn> Surely there is a transpose function somewhere, no?
[14:27:34] <FromDiscord> <haxscramper> no, unlikely
[14:27:38] <FromDiscord> <Imperatorn> Or take a peek into Neo I guess‚Üµhttps://github.com/andreaferretti/neo
[14:27:43] <FromDiscord> <haxscramper> of course matrix library would have it, but not stdlib
[14:31:31] <FromDiscord> <evoalg> for this simple case, two for loops and t[i][j] = s[j][i] works for me
[14:41:57] <FromDiscord> <Rika> In reply to @Rika "prolly just two for": Yeah I eluded to that here
[14:44:16] <FromDiscord> <evoalg> ahh I suppose swap would only work on square "matrices"
[15:01:29] <FromDiscord> <hmmm> why round doesn't work the way I expect it to
[15:01:34] <FromDiscord> <hmmm> https://play.nim-lang.org/#ix=3DmD
[15:02:28] <FromDiscord> <hmmm> I hate floats
[15:03:37] <FromDiscord> <haxscramper> just use strformat
[15:03:57] <FromDiscord> <haxscramper> nobody should print raw floats anyway, compiler can't read your mind and figure out what precision you need
[15:04:12] <FromDiscord> <Rika> That‚Äôs just how rounding works for floats
[15:04:16] <FromDiscord> <hmmm> I guess I'll have to, but why float are so nasty ffs
[15:04:27] <FromDiscord> <haxscramper> because they are made this way
[15:04:46] <FromDiscord> <Rika> Because exponents and mantissas are represented in powers of two which doesn‚Äôt map cleanly for powers of ten
[15:05:02] <FromDiscord> <haxscramper> and you just happened to hit the wrong spot
[15:06:11] <FromDiscord> <Rika> Even if they were using powers of ten you would probably hit other bugs
[15:06:15] <FromDiscord> <Rika> Not rounding ones though
[15:07:13] <FromDiscord> <haxscramper> I think you would need to use base-10 computer for that to work
[15:07:32] <FromDiscord> <haxscramper> or not
[15:07:42] <FromDiscord> <Rika> Lol no need, just needs a lot of roundabout and expensive hardware
[15:07:52] <FromDiscord> <Rika> There are better solutions I guess
[15:08:01] <FromDiscord> <haxscramper> like using strformat
[15:08:41] <FromDiscord> <Rika> What other use cases does rounding have other than printing actually
[15:09:14] <FromDiscord> <hmmm> heeeeeeeeeeeey
[15:09:19] <FromDiscord> <hmmm> python does it correctly
[15:09:24] <FromDiscord> <hmmm> W H Y
[15:10:07] <FromDiscord> <Rika> It does because it internally uses string formatting when you print  it
[15:10:12] <FromDiscord> <hmmm> oh
[15:10:21] <FromDiscord> <Rika> In nim it must be explicit
[15:10:29] <FromDiscord> <hmmm> I see
[15:12:06] <FromDiscord> <hmmm> well if python cheats we should cheat too, I like roundy numbers
[15:13:08] <FromDiscord> <haxscramper> 0.1 + 0.2‚Üµ(@hmmm)
[15:13:10] <FromDiscord> <Rika> It incurs a possibly significant cost in processing
[15:13:10] <FromDiscord> <haxscramper> try it
[15:13:34] <FromDiscord> <Rika> Ah the classic .1 + .2
[15:13:35] <FromDiscord> <haxscramper> sent a code paste, see https://play.nim-lang.org/#ix=3DmI
[15:13:43] <FromDiscord> <haxscramper> it just fails on different spots, probably they have some expensive heuristics
[15:13:49] <FromDiscord> <haxscramper> IIRC nim 1.6.0 uses dragonbox for floating as well
[15:14:04] <FromDiscord> <haxscramper> ah, no, this had to be enabled with `--previewRandomBullshit` degeneracy
[15:14:18] <FromDiscord> <haxscramper> `--previewFloatRoundTrip` I think
[15:14:32] <FromDiscord> <Rika> Haha
[15:14:37] <FromDiscord> <haxscramper> https://github.com/nim-lang/Nim/blob/version-1-6/changelogs/changelog_1_6_0.md#round-trip-float-to-string
[15:14:39] <FromDiscord> <Rika> -d:nimPreview
[15:14:40] <FromDiscord> <haxscramper> I hate this crap
[15:14:41] <FromDiscord> <Rika> Etc etc
[15:14:44] <FromDiscord> <Rika> Kinda weird
[15:14:50] <FromDiscord> <haxscramper> nobody will enable them anyway
[15:15:07] <FromDiscord> <haxscramper> `-d:nimLegacyMacrosCollapseSymChoice`
[15:15:11] <FromDiscord> <haxscramper> just kill me
[15:15:14] <FromDiscord> <haxscramper> who the hell needs this
[15:15:23] <FromDiscord> <haxscramper> can't you like make options for `treeRepr` maybe?
[15:15:34] <FromDiscord> <haxscramper> `collapsesymChoice: bool = true`
[15:15:41] <FromDiscord> <haxscramper> instead global project-wide configuration
[15:15:47] <FromDiscord> <xflywind> it was discussed and became a policy
[15:16:03] <FromDiscord> <xflywind> https://github.com/nim-lang/Nim/pull/18541
[15:16:04] <FromDiscord> <haxscramper> yes sure
[15:16:18] <FromDiscord> <haxscramper> does not mean that it makes sense to me
[15:16:30] <FromDiscord> <xflywind> https://github.com/nim-lang/Nim/pull/18479
[15:16:35] <FromDiscord> <xflywind> In reply to @haxscramper "does not mean that": yeah
[15:16:55] <FromDiscord> <haxscramper> like I can understand the reasoning
[15:16:57] <FromDiscord> <haxscramper> but let's face it
[15:17:03] <FromDiscord> <haxscramper> until it is a default nobody will use it
[15:17:27] <FromDiscord> <xflywind> and here https://github.com/nim-lang/Nim/pull/18711#discussion_r695650857
[15:17:33] <FromDiscord> <haxscramper> people are wary of preview/experimental things
[15:18:48] <FromDiscord> <haxscramper> also adds another dimension to matrix tensting
[15:18:48] <FromDiscord> <haxscramper> with/without "random preview"‚Üµwith/without "another language dialect"
[15:18:54] <FromDiscord> <Rika> Don‚Äôt we already have {.experimental anyway
[15:18:59] <FromDiscord> <haxscramper> `treeRepr` for nim node is very limited anyway
[15:19:21] <FromDiscord> <haxscramper> `{.experimental`, `--experimental`, `-d:nimPreview`, `-d:nimLegacy`‚Üµ(@Rika)
[15:19:26] <FromDiscord> <Rika> Jesus
[15:19:29] <FromDiscord> <Rika> Why again
[15:19:49] <FromDiscord> <haxscramper> who knows
[15:21:14] <FromDiscord> <haxscramper> preview is guaratneed to be enabled later
[15:21:35] <FromDiscord> <haxscramper> so you can treat it as 1.6.2 features that for some reason got put in the 1.6.0 changelog
[15:21:43] <FromDiscord> <haxscramper> people who want to preview things use devel anyway
[15:22:06] <FromDiscord> <Rika> Good point
[15:22:12] <FromDiscord> <haxscramper> "nimLegacy" can be treated as unwillingness to add more arguments to preserve older behaviour
[15:22:14] <FromDiscord> <Rika> Most people on stable are there for stable shit‚Ä¶
[15:22:35] <FromDiscord> <haxscramper> because adding arguments to `treeRepr` will make it a liability
[15:22:52] <FromDiscord> <Rika> I can somewhat understand the legacy switch, having more arguments to use new behaviour can be annoying and cumbersome
[15:22:58] <FromDiscord> <Rika> I‚Äôm the future
[15:23:00] <FromDiscord> <haxscramper> this one I don't understand
[15:23:01] <FromDiscord> <haxscramper> klike
[15:23:02] <FromDiscord> <haxscramper> sent a long message, see http://ix.io/3DmL
[15:23:03] <FromDiscord> <haxscramper> like
[15:23:05] <FromDiscord> <haxscramper> for fuck's sake
[15:23:07] <FromDiscord> <haxscramper> really
[15:23:08] <FromDiscord> <Rika> I‚Äôm -> in
[15:23:15] <FromDiscord> <haxscramper> I need to preview `delete` to work correctly?\>
[15:23:56] <FromDiscord> <Rika> For the strict delete one it should have been new behaviour and switch for old I guess
[15:24:09] <FromDiscord> <haxscramper> this deletes
[15:24:10] <FromDiscord> <haxscramper> sent a code paste, see https://play.nim-lang.org/#ix=3DmM
[15:24:14] <FromDiscord> <haxscramper> I mean sure 123123 should delete 5
[15:24:18] <FromDiscord> <haxscramper> makes sense
[15:24:19] <FromDiscord> <haxscramper> right
[15:25:46] <FromDiscord> <haxscramper> `treeRepr` should have tons of flags anyway
[15:34:41] <FromDiscord> <hmmm> "your code might depend on this quirky behaviour"
[15:34:55] <FromDiscord> <hmmm> well we must break their code then :3
[15:35:08] <FromDiscord> <tandy> `if 10000 <= number <= 30000:` is this possible in nim like in python?
[15:35:24] <FromDiscord> <Rika> Not without a macro
[15:35:27] <FromDiscord> <Rika> Afaik
[15:35:57] <FromDiscord> <tandy> hnmm
[15:36:02] *** Quits: supakeen (~user@python/site-packages/supakeen) (Quit: WeeChat 3.3)
[15:36:33] *** Joins: supakeen (~user@python/site-packages/supakeen)
[15:42:11] <FromDiscord> <tandy> image.png https://media.discordapp.net/attachments/371759389889003532/903979593017466910/image.png
[15:43:08] <FromDiscord> <tandy> im using this code to check im clicking within the bounds of a tictactoe box, and placing a cross -‚Üµis there a more efficient way to do bound checks? this is one row for tictactoe, but im imagining if im trying to do checkers this could get massive fast
[15:45:39] <FromDiscord> <tandy> image.png https://media.discordapp.net/attachments/371759389889003532/903980467542442034/image.png
[15:45:50] <FromDiscord> <tandy> this works, i thought itd slow down a lot but its okay
[16:17:24] <FromDiscord> <ajusa> Are there any packages to stream the contents of a tar.gz? zippy dumps the entire thing to memory
[16:21:46] <FromDiscord> <ajusa> In reply to @ajusa "Are there any packages": Looks like dom has untar, I'll use that
[16:28:24] <FromDiscord> <hotdog> In reply to @tandy "im using this code": Modulo the position to get grid coords
[16:57:26] *** Joins: arkurious (~arkurious@user/arkurious)
[17:16:34] <FromDiscord> <tandy> wat do u mean by this‚Üµ(@hotdog)
[17:36:49] <FromDiscord> <pointystick> tandy, if your board squares are 32 pixels each, you can divide each mouse x,y by 32 to get the array index value (0, 1, 2 - any other value is presumably out of bounds).  It looks like you'll need to subtract 16 first as you have an offset - so something like "var gridCoords = ((pos[0] - 16) div 32, (pos[1] - 16) div 32)"
[17:40:12] <FromDiscord> <tandy> oh this sounds kinda mad, il see if it works‚Üµ(@pointystick)
[17:42:19] <FromDiscord> <pointystick> You can think of it as translating coordinate systems (from pixel/screen coordinates to tile coordinates, or whatever).  You start with the logic "each square takes blah pixels... so it's mapping from 0 ..< blah into 0 ..< numberOfXValues.  But before doing anything else, you have to translate so the screen pos starts at 0, 0 or things will mess (hence the subtraction to move from 16 .. 112 into 0 .. 96
[17:43:18] <FromDiscord> <pointystick> (edit) "pixels..." => "pixels..."" | "mess" => "get messy" | "96" => "96)"
[17:46:38] <FromDiscord> <acek7> hows the nim community?
[17:47:59] <FromDiscord> <tandy> damn this is kinda amazing, thank you so much!‚Üµ(@pointystick)
[17:48:13] <FromDiscord> <Rika> In reply to @acek7 "hows the nim community?": seems fine
[17:48:20] <FromDiscord> <tandy> now i just need to figure out why im getting an illegal storage error
[17:50:05] <FromDiscord> <Rika> full error please, maybe we can help
[17:57:27] <FromDiscord> <tandy> il try, but it just says sigsegv‚Üµ(@Rika)
[17:57:53] <FromDiscord> <Rika> ah, run without -d:release or danger it should give you a stacktrace
[17:59:51] <FromDiscord> <tandy> sent a code paste, see https://play.nim-lang.org/#ix=3Dnq
[17:59:55] <FromDiscord> <tandy> ahh value error
[18:00:04] *** Joins: Vladar (~Vladar@46.162.2.53)
[18:09:49] <FromDiscord> <tandy> fixed \:))
[18:16:42] *** Quits: Vladar (~Vladar@46.162.2.53) (Remote host closed the connection)
[18:39:36] *** Joins: neurocyte0132889 (~neurocyte@185.117.69.128)
[18:39:36] *** Quits: neurocyte0132889 (~neurocyte@185.117.69.128) (Changing host)
[18:39:36] *** Joins: neurocyte0132889 (~neurocyte@user/neurocyte)
[18:41:36] *** Joins: rockcavera (~rc@192.12.114.204)
[18:41:36] *** Quits: rockcavera (~rc@192.12.114.204) (Changing host)
[18:41:36] *** Joins: rockcavera (~rc@user/rockcavera)
[18:59:42] <FromDiscord> <IsaacPaul> sent a code paste, see https://play.nim-lang.org/#ix=3DnQ
[19:03:14] <FromDiscord> <IsaacPaul> Just a suggestion.. Comment what your code is doing as you're writing it, and when it works and when you have time then turn those comments into procedures. So instead of reading comments you're reading the names of procedures/functions.
[19:50:21] <FromDiscord> <tandy> i see, yeah the current code is a lot more sane, thank you for the example too, i just implemented a proc like that‚Üµ(@IsaacPaul)
[19:50:47] <FromDiscord> <tandy> yea i try to do this but when ur working on a project with so many moving parts i seem to forget to lol‚Üµ(@IsaacPaul)
[19:51:16] <FromDiscord> <IsaacPaul> Trueee
[20:01:17] *** Quits: sagax (~sagax_nb@user/sagax) (Ping timeout: 264 seconds)
[20:16:01] *** Joins: sagax (~sagax_nb@user/sagax)
[20:36:45] <FromDiscord> <Koldran> Hello, I am new to Nim and would like to find a library like playSound in python in order to play an mp3 file via code. So I looked a bit on the internet but I didn't find much. I have tried libraries like Nimbass but like I said I'm new and don't know how to use it. Does anyone know of a library?
[21:22:13] <FromDiscord> <impl Nickname for Dou {}> sent a code paste, see https://play.nim-lang.org/#ix=3Dor
[21:24:09] <FromDiscord> <Solitude> you need to import tables in module where error occurs
[21:26:22] <FromDiscord> <impl Nickname for Dou {}> I am stupid thank you so much
[21:31:43] <FromDiscord> <geekrelief> In reply to @Koldran "Hello, I am new": Have you checked out this? https://github.com/yglukhov/sound There's also the sdl bindings https://github.com/nim-lang/sdl2 which I assume has audio playback.
[21:32:25] <FromDiscord> <geekrelief> I haven't tried either though.
[21:57:54] <NimEventer> New thread by SunnyCorleone: Nested Tables, see https://forum.nim-lang.org/t/8568
[22:05:49] *** Joins: Vladar (~Vladar@46.162.2.53)
[22:35:54] *** Joins: vicfred (~vicfred@user/vicfred)
[22:38:19] <FromDiscord> <Schelz> Hi, fast question is c function calling in nim the same for cpp ?
[22:40:05] <FromDiscord> <Schelz> And if anyone know how to get imgui for nim working
[22:48:19] <FromDiscord> <haxscramper> you mean calling convention? Yes, it is a `{.cdecl.}` in both cases
[22:55:44] <FromDiscord> <Schelz> Yeah like calling void or other fuctions from a cpp file
[23:00:47] <FromDiscord> <Goat> Any good tutorials on Nim's db modules?
