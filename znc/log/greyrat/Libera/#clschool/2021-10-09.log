[00:04:56] *** Quits: tyson2 (~user@bras-base-toroon0628w-grc-46-142-112-141-177.dsl.bell.ca) (Ping timeout: 265 seconds)
[00:06:28] *** Joins: tyson2 (~user@bras-base-toroon0628w-grc-46-142-112-141-177.dsl.bell.ca)
[00:06:56] *** Quits: tyson2 (~user@bras-base-toroon0628w-grc-46-142-112-141-177.dsl.bell.ca) (Remote host closed the connection)
[00:07:14] *** Joins: tyson2 (~user@bras-base-toroon0628w-grc-46-142-112-141-177.dsl.bell.ca)
[00:08:39] *** Quits: waleee (~waleee@h-98-128-228-119.NA.cust.bahnhof.se) (Ping timeout: 245 seconds)
[00:16:28] *** Joins: lisp123 (~lisp123@5.30.23.247)
[00:19:25] *** Quits: tyson2 (~user@bras-base-toroon0628w-grc-46-142-112-141-177.dsl.bell.ca) (Quit: ERC (IRC client for Emacs 27.2))
[00:20:16] *** Joins: waleee (~waleee@2001:9b0:216:8200:d457:9189:7843:1dbd)
[00:20:58] *** Quits: lisp123 (~lisp123@5.30.23.247) (Ping timeout: 252 seconds)
[00:22:24] *** Quits: shka (~herr@83.175.151.96.piasta.pl) (Ping timeout: 245 seconds)
[00:38:53] *** Quits: CptKirk (~CptKirk@70-57-27-195.hlrn.qwest.net) (Quit: Client closed)
[00:58:13] *** Joins: lisp123 (~lisp123@5.30.23.247)
[01:05:31] *** Quits: lisp123 (~lisp123@5.30.23.247) (Ping timeout: 245 seconds)
[01:19:44] *** Joins: winning-luser (~wl@2601:8c1:181:1340::1b9c)
[01:36:59] *** Quits: st_iron (uid370243@id-370243.uxbridge.irccloud.com) (Quit: Connection closed for inactivity)
[01:39:26] *** Joins: lisp123 (~lisp123@5.30.23.247)
[01:45:07] *** Quits: lisp123 (~lisp123@5.30.23.247) (Ping timeout: 252 seconds)
[02:14:41] *** Joins: jjonah (~jjonah@p200300d5d7058900dea632fffeb3342f.dip0.t-ipconnect.de)
[02:15:18] *** Joins: tyson2 (~user@bras-base-toroon0624w-grc-19-70-31-33-162.dsl.bell.ca)
[02:19:19] *** Quits: selwyn_ (~selwyn@user/selwyn) (Read error: Connection reset by peer)
[02:34:43] *** Quits: jjonah (~jjonah@p200300d5d7058900dea632fffeb3342f.dip0.t-ipconnect.de) (Remote host closed the connection)
[02:39:29] *** Joins: hendursaga (~weechat@user/hendursaga)
[02:42:06] *** Quits: hendursa1 (~weechat@user/hendursaga) (Ping timeout: 276 seconds)
[03:24:07] *** Quits: makomo_ (~makomo@user/makomo) (Ping timeout: 252 seconds)
[03:24:54] *** Quits: makomo (~makomo@user/makomo) (Ping timeout: 245 seconds)
[03:37:57] *** Quits: winning-luser (~wl@2601:8c1:181:1340::1b9c) (Quit: Leaving)
[03:44:36] *** Joins: lisp123 (~lisp123@5.30.23.247)
[03:53:33] *** Quits: lisp123 (~lisp123@5.30.23.247) (Ping timeout: 265 seconds)
[03:57:41] *** Joins: Qwnavery (~Qwnavery@user/qwnavery)
[04:24:54] *** Quits: random-nick (~random-ni@87.116.183.117) (Ping timeout: 245 seconds)
[04:52:57] *** Quits: tyson2 (~user@bras-base-toroon0624w-grc-19-70-31-33-162.dsl.bell.ca) (Quit: ERC (IRC client for Emacs 27.2))
[04:53:12] *** Joins: tyson2 (~user@70.31.33.162)
[05:33:09] *** Joins: donovanquixote (~Donovan@c-98-246-129-179.hsd1.or.comcast.net)
[05:46:38] *** Quits: Psybur (~Psybur@mobile-166-170-32-197.mycingular.net) (Remote host closed the connection)
[06:05:59] *** Quits: sts-q (~sts-q@212.53.219.151) (Ping timeout: 265 seconds)
[06:06:38] *** Quits: travv0 (sid293381@user/travv0) (Ping timeout: 260 seconds)
[06:07:34] *** Quits: sgithens (sid10659@id-10659.helmsley.irccloud.com) (Ping timeout: 260 seconds)
[06:09:22] *** Joins: sgithens (sid10659@helmsley.irccloud.com)
[06:09:28] *** Joins: travv0 (sid293381@user/travv0)
[06:10:43] *** Joins: sts-q (~sts-q@212.53.219.231)
[06:52:50] *** Quits: waleee (~waleee@2001:9b0:216:8200:d457:9189:7843:1dbd) (Ping timeout: 260 seconds)
[06:54:06] *** Quits: tyson2 (~user@70.31.33.162) (Remote host closed the connection)
[07:28:10] *** Joins: lisp123 (~lisp123@5.30.23.247)
[07:33:16] *** Quits: lisp123 (~lisp123@5.30.23.247) (Ping timeout: 252 seconds)
[08:05:26] *** Joins: CrashTestDummy2 (~CrashTest@ool-ad02813b.dyn.optonline.net)
[08:08:26] *** Quits: CrashTestDummy3 (~CrashTest@ool-ad02813b.dyn.optonline.net) (Ping timeout: 260 seconds)
[08:32:43] *** Joins: lisp123 (~lisp123@5.30.23.247)
[08:37:07] *** Quits: lisp123 (~lisp123@5.30.23.247) (Ping timeout: 252 seconds)
[08:46:46] *** Joins: lisp123 (~lisp123@5.30.23.247)
[09:03:00] *** Quits: ec (~ec@gateway/tor-sasl/ec) (Ping timeout: 276 seconds)
[09:33:09] *** Joins: st_iron (uid370243@id-370243.uxbridge.irccloud.com)
[10:38:03] *** Joins: selwyn (~selwyn@user/selwyn)
[10:38:48] *** Quits: selwyn (~selwyn@user/selwyn) (Remote host closed the connection)
[10:39:12] *** Joins: selwyn (~selwyn@user/selwyn)
[10:48:49] *** Joins: shka (~herr@83.175.151.96.piasta.pl)
[11:25:43] *** Quits: lisp123 (~lisp123@5.30.23.247) (Remote host closed the connection)
[11:36:44] *** Joins: hendursa1 (~weechat@user/hendursaga)
[11:40:18] *** Quits: hendursaga (~weechat@user/hendursaga) (Ping timeout: 276 seconds)
[12:02:00] *** Joins: lisp123 (~lisp123@5.30.23.247)
[12:19:34] *** Joins: makomo (~makomo@user/makomo)
[12:22:55] *** Quits: st_iron (uid370243@id-370243.uxbridge.irccloud.com) (Quit: Connection closed for inactivity)
[12:51:17] *** Quits: lisp123 (~lisp123@5.30.23.247) (Remote host closed the connection)
[12:52:34] *** Joins: lisp123 (~lisp123@5.30.23.247)
[13:35:47] *** Joins: random-nick (~random-ni@87.116.183.117)
[13:42:25] *** Quits: selwyn (~selwyn@user/selwyn) (Read error: Connection reset by peer)
[13:53:55] *** Joins: selwyn (~selwyn@user/selwyn)
[14:01:56] *** Joins: jjonah (~jjonah@p200300d5d7058900dea632fffeb3342f.dip0.t-ipconnect.de)
[14:11:38] *** Quits: lisp123 (~lisp123@5.30.23.247) (Remote host closed the connection)
[14:49:42] *** Joins: lisp123 (~lisp123@5.30.23.247)
[14:51:26] *** Quits: jjonah (~jjonah@p200300d5d7058900dea632fffeb3342f.dip0.t-ipconnect.de) (Remote host closed the connection)
[14:53:44] *** Quits: White_Flame (~quassel@user/white-flame/x-6930243) (Remote host closed the connection)
[14:54:57] *** Joins: White_Flame (~quassel@user/white-flame/x-6930243)
[14:57:14] *** Quits: lisp123 (~lisp123@5.30.23.247) (Ping timeout: 260 seconds)
[15:33:58] *** Joins: lisp123 (~lisp123@5.30.23.247)
[15:36:52] *** Joins: Cymew (~ante@c-e989225c.023-1144-7570702.bbcust.telenor.se)
[15:46:05] *** Joins: tyson2 (~user@bras-base-toroon0624w-grc-19-70-31-33-162.dsl.bell.ca)
[16:06:59] *** Quits: Cymew (~ante@c-e989225c.023-1144-7570702.bbcust.telenor.se) (Ping timeout: 245 seconds)
[16:26:17] *** Quits: lisp123 (~lisp123@5.30.23.247) (Remote host closed the connection)
[16:26:28] *** Joins: selwyn_ (~selwyn@user/selwyn)
[16:29:04] *** Quits: selwyn (~selwyn@user/selwyn) (Ping timeout: 245 seconds)
[16:31:21] *** Joins: lisp123 (~lisp123@5.30.23.247)
[16:31:34] *** Quits: lisp123 (~lisp123@5.30.23.247) (Remote host closed the connection)
[16:50:25] *** Quits: Qwnavery (~Qwnavery@user/qwnavery) (Quit: WeeChat 3.3)
[17:09:10] *** Joins: lisp123 (~lisp123@5.30.23.247)
[17:19:34] *** Quits: lisp123 (~lisp123@5.30.23.247) (Ping timeout: 252 seconds)
[17:39:22] *** Quits: tyson2 (~user@bras-base-toroon0624w-grc-19-70-31-33-162.dsl.bell.ca) (Quit: ERC (IRC client for Emacs 27.2))
[17:51:13] *** Joins: lisp123 (~lisp123@5.30.23.247)
[17:59:42] *** Quits: lisp123 (~lisp123@5.30.23.247) (Ping timeout: 260 seconds)
[18:01:55] *** Joins: thrig (~thrig@70.97.65.251)
[18:13:08] *** Joins: jeffrey (~jeffrey@2001:1c00:b11:8800:399c:16c5:8a3c:727e)
[18:17:16] *** Joins: waleee (~waleee@2001:9b0:216:8200:d457:9189:7843:1dbd)
[18:22:32] *** Joins: rain3 (~rain3___@2a02:2f09:d003:5800:b41c:c37:1705:91bc)
[18:31:54] *** Quits: waleee (~waleee@2001:9b0:216:8200:d457:9189:7843:1dbd) (Ping timeout: 260 seconds)
[18:33:47] *** Joins: waleee (~waleee@h-98-128-228-119.NA.cust.bahnhof.se)
[18:51:51] *** Joins: CrashTestDummy3 (~CrashTest@ool-ad02813b.dyn.optonline.net)
[18:52:24] *** Quits: waleee (~waleee@h-98-128-228-119.NA.cust.bahnhof.se) (Ping timeout: 245 seconds)
[18:55:14] *** Quits: CrashTestDummy2 (~CrashTest@ool-ad02813b.dyn.optonline.net) (Ping timeout: 260 seconds)
[19:17:34] <jeffrey> I'm trying to write a function that merges the keyworded arguments with some other :arg-key arg-value to a function that requires keyworded arguments, how can I reapply them without turning the arguments into a list
[19:20:37] <jeffrey> Found it: (apply) does the job
[19:26:27] *** Quits: thrig (~thrig@70.97.65.251) (Remote host closed the connection)
[19:38:01] *** Joins: thrig (~thrig@65.113.153.50)
[19:55:58] *** Joins: waleee (~waleee@2001:9b0:216:8200:d457:9189:7843:1dbd)
[19:58:45] *** Joins: lisp123 (~lisp123@5.30.23.247)
[20:06:13] *** Quits: lisp123 (~lisp123@5.30.23.247) (Ping timeout: 252 seconds)
[20:09:43] <pjb> jeffrey: indeed.
[20:10:11] <thrig> some life lessons are harder to APPLY than others
[20:11:14] *** Quits: selwyn_ (~selwyn@user/selwyn) (Read error: Connection reset by peer)
[20:45:09] *** Joins: lisp123 (~lisp123@5.30.23.247)
[20:46:35] *** Quits: hendursa1 (~weechat@user/hendursaga) (Quit: hendursa1)
[20:49:28] *** Joins: hendursaga (~weechat@user/hendursaga)
[20:52:00] *** Joins: selwyn (~selwyn@user/selwyn)
[20:52:45] *** Quits: selwyn (~selwyn@user/selwyn) (Remote host closed the connection)
[20:53:09] *** Joins: selwyn (~selwyn@user/selwyn)
[21:00:16] *** Quits: lisp123 (~lisp123@5.30.23.247) (Remote host closed the connection)
[21:01:35] *** Parts: Arcsech (~arcsechma@2001:470:69fc:105::1:797) ()
[21:15:52] *** Joins: CrashTestDummy2 (~CrashTest@ool-ad02813b.dyn.optonline.net)
[21:19:29] *** Quits: CrashTestDummy3 (~CrashTest@ool-ad02813b.dyn.optonline.net) (Ping timeout: 265 seconds)
[21:21:26] *** Joins: selwyn_ (~selwyn@user/selwyn)
[21:23:39] *** Quits: selwyn (~selwyn@user/selwyn) (Ping timeout: 245 seconds)
[21:28:55] *** Joins: lisp123 (~lisp123@5.30.23.247)
[21:29:26] *** Quits: hendursaga (~weechat@user/hendursaga) (Remote host closed the connection)
[21:29:58] *** Quits: selwyn_ (~selwyn@user/selwyn) (Read error: Connection reset by peer)
[21:57:58] *** Joins: etimmons (~etimmons@2001:470:69fc:105::5d5)
[21:58:17] *** Quits: derwolf (~DerWolf@static.143.125.47.78.clients.your-server.de) (Quit: Bye)
[21:58:36] *** Joins: derwolf (~DerWolf@2a01:4f8:c0c:554a::1)
[22:04:40] *** Joins: johnjay (~pi@192.142.100.50)
[22:05:18] <johnjay> once i install something in quicklisp how do i use it
[22:05:37] <johnjay> i see some .asd files in the quicklisp subdir but not sure how to interpret it
[22:06:57] <thrig> what commands are you trying from https://www.quicklisp.org/beta/ to load things?
[22:07:48] <johnjay> i did (ql:quickload "minilem") and that installed it
[22:07:53] *** Quits: lisp123 (~lisp123@5.30.23.247) (Remote host closed the connection)
[22:08:01] <johnjay> but i don't know how to find the package or load it. i'm looking at the .lisp files in the quicklisp hierarchy
[22:08:05] <johnjay> but not sure what to look for
[22:08:45] <johnjay> could (defpackage :lem-lisp-mode be significant?
[22:09:24] *** Joins: lisp123 (~lisp123@5.30.23.247)
[22:10:49] <lisp123> johnjay: Did you figure it out?
[22:11:17] <johnjay> figure what out
[22:12:53] <thrig> presumably the quickload command loads the system
[22:13:14] <johnjay> yes but then how do I start it
[22:13:32] <johnjay> for example. how do i find what new functions are available in the package ?
[22:13:46] <thrig> consult the documentation (or source, lacking that) for the package
[22:13:53] <johnjay> that doesn't make any sense
[22:14:03] <johnjay> if i loaded something i should be able to ls or dir or something
[22:14:10] <johnjay> or display a help. something
[22:15:01] <johnjay> do i have to preface the package name with :?
[22:19:50] *** Joins: jjonah (~jjonah@p200300d5d7058900dea632fffeb3342f.dip0.t-ipconnect.de)
[22:21:41] <etimmons> (ql:quickload "minilem") will load the minilem system and all of its dependencies. It will also install them if necessary.
[22:22:05] <etimmons> Each system can define any number of packages
[22:22:28] <thrig> the number is probably finite, though
[22:22:36] <etimmons> If you want to see all the packages currently loaded into your system, you can evaluate (list-all-packages)
[22:23:01] *** Quits: rain3 (~rain3___@2a02:2f09:d003:5800:b41c:c37:1705:91bc) (Ping timeout: 245 seconds)
[22:23:04] <etimmons> thrig: Ha, presumably
[22:23:37] <etimmons> s/loaded into your system/loaded into your image/
[22:24:22] *** Quits: donovanquixote (~Donovan@c-98-246-129-179.hsd1.or.comcast.net) (Remote host closed the connection)
[22:26:09] <etimmons> You can then do things like (describe (find-package :lem)). On SBCL at least, that'll tell you the exported symbols.
[22:27:01] <etimmons> You can then use DESCRIBE or DOCUMENTATION on those symbols to further inspect the package and its interface
[22:30:30] <etimmons> I'll be honest, this minilem you're trying to use sketches me out.
[22:31:15] <etimmons> Readme is next to useless, is a fork that is way behind upstream, and decided to keep the original package names instead of renaming them
[22:31:41] <thrig> some programmers aren't as good as others at documenting things
[22:42:33] *** Quits: jjonah (~jjonah@p200300d5d7058900dea632fffeb3342f.dip0.t-ipconnect.de) (Remote host closed the connection)
[22:42:52] <johnjay> i found a git issue describing the esrap problem
[22:43:04] <johnjay> https://www.reddit.com/r/Common_Lisp/comments/pxnbzs/lem_anyone_here_using_the_lem_text_editor/
[22:44:31] <johnjay> etimmons: ah thanks viewing the exported symbols is very helpful
[22:44:48] <johnjay> yes i don't know what minilem is exactly i'm just trying to use lem
[22:45:06] <johnjay> but it's not in quicklisp and ros fails to install it because it fails to build sbcl
[22:45:18] *** Joins: hendursaga (~weechat@user/hendursaga)
[22:45:20] <johnjay> so i'm just sort of trying random guessing at this point
[22:46:05] <etimmons> If you clone lem's repo to your ~/quicklisp/local-projects/ folder, then QL will be able to find it
[22:47:07] <johnjay> wouldn't that still lead to the esrap problem?
[22:47:11] <johnjay> or am i not understanding it
[22:47:56] <etimmons> You said you have SBCL 2.1.1 installed on your system. If you use that instead of Roswell's SBCL version I don't think there will be any issues
[22:48:24] <etimmons> But if there are, you can also clone esrap to that folder since the fixes are already committed (they just haven't made it into QL yet)
[22:48:37] <johnjay> yes but i don't know how to do that
[22:49:09] <johnjay> meaning... if i clone the repo to quicklisp it will itself build it properly?
[22:50:05] <johnjay> i see esrap in dists/quicklisp/software already. would putting it in local-projects overwride?
[22:50:08] <johnjay> *override
[22:51:12] <etimmons> Yes, systems in local-projects are loaded in preference to systems installed under dists/
[22:51:41] <etimmons> You probably want this comment on the reddit thread you linked: https://www.reddit.com/r/Common_Lisp/comments/pxnbzs/comment/her5j44/
[22:51:49] <johnjay> oh i see that's the purpose of local-projects dir
[22:51:55] <etimmons> yep!
[22:53:32] *** Joins: tyson2 (~user@24.114.73.249)
[22:53:43] <johnjay> ah nice that did work and the ncurses window came up
[22:54:03] <johnjay> so why was roswell failing due to the esrap bug and what is roswell for to beginw ith
[22:54:15] <johnjay> why was it trying to download and compile sbcl? o_o
[22:54:16] <pjb> Hi! I added a few problems to the common-lisp-exercises repository: https://gitlab.com/common-lisp-exercises/common-lisp-exercises/-/blob/master/README.org notably, a Startrek Door system ;-)
[22:55:41] <thrig> pretty sure those doors were human powered
[22:57:26] <etimmons> Roswell is an implementation manager (it tries to make it easy to install multiple CL implementations, even different versions of the same implementation, simultaneously). It also manages a QL install for you, and tries to make it easier to write CL scripts and make executables.
[22:57:53] <etimmons> I personally think it does too much and that makes it feel like a walled garden.
[22:58:07] <johnjay> i have no clue why any of that would be useful
[22:58:10] <thrig> do they take a 30% cut of profits?
[22:58:14] <johnjay> but as to the esrap bug
[22:58:35] <johnjay> is the reason you said because ros is using an older sbcl version?
[22:58:39] <etimmons> I also don't recommend that newbies start with it, because when there are issues they can be difficult to debug (and much of the time it's Roswell's fault)
[22:58:50] <etimmons> no, ros uses the newest sbcl version by default
[22:58:51] <johnjay> yes i just used it because the readme on the lem project page says to do it
[22:59:03] <etimmons> That's why it built SBCL 2.1.9 for you
[22:59:19] <johnjay> oh ok. so my installed debian version is 2.1.1 which is behind
[22:59:34] <johnjay> but in this case using the latest 2.1.9 was the cause of the problem
[22:59:38] <johnjay> since the latest esrap had a bug?
[23:00:21] *** Quits: thrig (~thrig@65.113.153.50) (Remote host closed the connection)
[23:01:04] <etimmons> More like SBCL's behavior changed in 2.1.9. There are some underspecified pieces of the CL spec and esrap was relying on SBCL specific behavior
[23:01:23] <etimmons> SBCL changed, which means that esrap's assumptions were broken
[23:01:34] <etimmons> So that latest commit to esrap fixes that
[23:02:47] <etimmons> And the version of esrap that Quicklisp distributes doesn't have those fixes (yet)
[23:03:13] <etimmons> which is why you had to clone the latest version of esrap to local-projects
[23:14:09] *** Joins: ec (~ec@gateway/tor-sasl/ec)
[23:18:03] <johnjay> i didn't end up having tod o that
[23:18:14] <johnjay> just cloned lem itself and quicklisp built it fine. this is bullseyes
[23:18:54] <etimmons> Great. I should have said you would have had to do that if using SBCL 2.1.9 (from Roswell or your system)
[23:20:15] <etimmons> But anyways, hopefully you have a better handle on systems, packages, the defacto dependency manager, and exploration of packages/symbols in CL now
[23:21:31] <johnjay> yes a little bit
[23:21:45] <johnjay> honestly the CL world seems to have problems with this stuff, idk
[23:21:55] <johnjay> it feels a lot simpler to download packages like in emacs or even just in debian
[23:39:38] <etimmons> Oh, it definitely does. I (and I suspect others) would be happy to chat about that (and efforts to improve the situation). #commonlisp is probably the best place for that kind of discussion.
[23:39:48] <etimmons> I just redirected you here because it seemed like there was some basic terminology and intro CL stuff we had to work through first.
[23:40:31] <johnjay> yes
[23:40:33] <johnjay> thanks!
[23:41:24] *** Quits: jeffrey (~jeffrey@2001:1c00:b11:8800:399c:16c5:8a3c:727e) (Quit: Client quit)
[23:41:49] <etimmons> yw!
[23:43:27] <johnjay> this might be related
[23:43:34] <johnjay> but why are there so few gui applications in common lisp
[23:43:37] <johnjay> that i know of anyway
[23:43:54] <johnjay> i can't say definitively that's wrong or you should do things my way
[23:43:59] <johnjay> but it feels like a red flag
[23:45:53] <etimmons> I'm far from an expert in this, but from my perspective I think there are a few factors
[23:46:02] <etimmons> many Lispers are totally happy just working at a REPL
[23:46:25] <johnjay> right. you can get a lot of pseudo-gui functionality just from emacs
[23:46:56] <johnjay> there was a game called sucle but i started it and it crashed right away. lol
[23:47:03] <etimmons> Most GUI toolkits require interfacing with C code. Those toolkits can move quickly and the portion of CL community using each is small enough that it's hard to keep up
[23:47:49] <johnjay> i thought things like gtk and qt were highly stable
[23:47:53] <etimmons> And web-based UIs tend to be easier and more portable across OSes
[23:47:54] <johnjay> because as you say otherwise nobody could use them
[23:48:07] <johnjay> because they'd be changing constantly
[23:48:29] <etimmons> My impression could be totally wrong there (I'm a REPL/web guy myself)
[23:48:59] <johnjay> what's an example of a "web gui"
[23:49:06] <etimmons> But we also do have McCLIM, which doesn't look the best, but is extremely powerful
[23:49:08] <johnjay> like using common lisp. some react or node thing?
[23:49:22] *** Quits: tyson2 (~user@24.114.73.249) (Quit: ERC (IRC client for Emacs 27.2))
[23:49:26] <johnjay> i've heard of mcclim. dunno how it works though
[23:49:46] <johnjay> i assume that you would need gtk-like things like windows, scrollbars, menus, all that stuff
[23:50:22] *** Quits: ryanbw (~ryanbw@mab.sdf.org) (Ping timeout: 250 seconds)
[23:51:15] *** Joins: ryanbw (~ryanbw@mab.sdf.org)
[23:51:46] <etimmons> You could use react or similar for the frontend. But there are CL solutions like Weblocks or CLOG that (as far as I know) require writing barely any JS code
[23:53:25] <etimmons> I definitely recommend checking out McCLIM. I'm starting to use it more myself and have been loving it so far
[23:57:37] <johnjay> mcclim on the web you mean
[23:57:41] <johnjay> or like, for the desktop
[23:57:46] <etimmons> desktop
[23:57:58] <etimmons> Although there are some efforts to get it on the web I believe
[23:58:36] <johnjay> web dev is such a huge industry but personally i'm hesitant to get into it
[23:58:48] <johnjay> maybe this is a tired meme but javascript bad, C++ good
