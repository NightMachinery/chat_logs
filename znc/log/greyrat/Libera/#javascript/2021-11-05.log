[00:04:52] *** Joins: yaalon (~yaalon@cpe-70-121-160-255.satx.res.rr.com)
[00:05:06] <eqw> why this code does nothing? https://jsfiddle.net/6txgdha0/
[00:05:53] *** Quits: incognito (~relativit@user/incognito) (Quit: Going offline, see ya! (www.adiirc.com))
[00:07:42] <gehn> I've been having weird spotty network issues all day today, more than average
[00:07:56] *** Joins: pulse (~pulse@user/pulse)
[00:07:58] <gehn> could be something going wonky with The Grid, who knows, russian hackers maybe?
[00:09:15] *** Joins: pavonia (~user@user/siracusa)
[00:11:32] <systemfault> eqw: Missing curly braces in your new Promise?
[00:12:19] <systemfault> eqw: I'll be honest with you, the code doesn't make much sense..
[00:14:01] <systemfault> eqw: https://jsfiddle.net/hczr0jtg/
[00:14:10] <jaawerth> eqw: because the Promise constructor takes a single callback, which in turn takes resolve/reject callbacks that invokes when stuff is done. you're passing `cb => setTimeout(cb, 1000 * sec)`, which shadows the cb in the sleep args, which means `new Promise` is doing just passing resolve to that - so it will resolve after sec seconds but totally ignores the outer callback
[00:16:01] <jaawerth> but yeah systemfault's suggestion is good (though I'd probably either make line 2 be a multi-liner or get rid of the curly braces around setTimeout, but that's personal taste)
[00:18:25] *** Quits: Nimzowitsch (~nimzo@user/nimzowitsch) (Ping timeout: 256 seconds)
[00:18:38] *** Quits: voltage_ (voltage@user/voltage) (Remote host closed the connection)
[00:19:12] *** Quits: silly (~silly@user/silly) (Ping timeout: 268 seconds)
[00:20:14] *** Joins: voltage_ (voltage@user/voltage)
[00:22:13] *** Joins: dpuerto (~dpuerto@136-27-83-52.cab.webpass.net)
[00:22:41] *** Joins: wildo (~lain6141@119.224.72.222)
[00:24:59] *** Quits: zeromule (~eric@2601:602:8d80:4e50:d1b3:9aed:31d:c2c9) (Ping timeout: 264 seconds)
[00:25:12] *** Quits: nomic (~nomic@185.192.69.69) (Quit: Leaving)
[00:25:25] <eqw> Thank you! Thank you!
[00:25:29] *** Joins: nomic (~nomic@185.192.69.69)
[00:27:13] *** Quits: dpuerto (~dpuerto@136-27-83-52.cab.webpass.net) (Ping timeout: 268 seconds)
[00:27:42] *** Joins: humanBird (~humanBird@2603-8001-7003-5966-0902-3789-4a79-f643.res6.spectrum.com)
[00:29:22] *** Joins: gaqwas (~john@dynamic-077-009-126-017.77.9.pool.telefonica.de)
[00:31:46] *** Quits: bmomjian (~bruce@momjian.us) (Ping timeout: 260 seconds)
[00:34:38] *** Quits: ___nick___ (~quassel@cpc68286-cdif17-2-0-cust533.5-1.cable.virginm.net) (Ping timeout: 268 seconds)
[00:35:14] *** Joins: incognito (~relativit@user/incognito)
[00:35:54] *** Joins: dsrt^ (~dsrt@wsip-98-188-242-6.mc.at.cox.net)
[00:37:19] *** Joins: masber (~masber@213.55.224.99)
[00:38:25] *** Joins: voltage (voltage@user/voltage)
[00:38:44] *** Quits: voltage_ (voltage@user/voltage) (Killed (NickServ (GHOST command used by voltage)))
[00:38:47] *** voltage is now known as voltage_
[00:39:49] <kalen> ljharb, i liked your idea of breaking down my node script with command-line options into a series of "plugins" of sorts, so that it's easily extendable and such. i have it now reading from a plugins directory of .js files, where each js file manages one or more related command-line options. the issue, though, is that i'd like a few UNrelated options to use some code in a separate library. where do you suggest that code should live? not sure if a
[00:39:49] <kalen> lib directory with a mish-mash of libraries is in the spirit of a fully extendable plugin system
[00:41:05] *** Quits: i0e (~is0ke3@user/is0ke3) (Ping timeout: 256 seconds)
[00:41:34] *** Joins: audiobirb (~audio@user/audio)
[00:43:08] *** Joins: i0e (~is0ke3@user/is0ke3)
[00:43:22] *** Quits: Deneb (~johnch@117.111.189.80.dyn.plus.net) (Quit: Leaving)
[00:44:07] *** Joins: Ilyu (~quassel@166.215.82.79.rev.sfr.net)
[00:48:27] *** Quits: kakashiAL (~kakashi@ip-37-201-199-21.hsi13.unitymediagroup.de) (Ping timeout: 256 seconds)
[00:49:48] *** Joins: zeromule (~eric@2601:602:8d80:4e50:d1b3:9aed:31d:c2c9)
[00:50:58] *** Quits: gehn (~gehn@user/gehn) (Quit: Leaving)
[00:51:51] *** Quits: i0e (~is0ke3@user/is0ke3) (Ping timeout: 256 seconds)
[00:53:41] *** Joins: comatory (~ondrejsyn@217.11.241.69)
[00:54:41] *** Quits: voltage_ (voltage@user/voltage) (Ping timeout: 256 seconds)
[00:55:22] *** Joins: junktext_ (~junktext@gateway/vpn/pia/junktext)
[00:56:29] *** Parts: Sircle (~Sircle@88.246.75.14) ()
[00:57:31] *** Quits: junktext (~junktext@gateway/vpn/pia/junktext) (Ping timeout: 256 seconds)
[00:58:08] *** Quits: stewie925 (~stewie925@2600:1702:44f0:35c0:5cec:41b3:fa14:d1ad) (Ping timeout: 256 seconds)
[00:58:14] *** Joins: spronkey (~spronkey@2406:e000:68a4:fa01:f5ac:4c05:c62e:3266)
[00:58:41] *** Quits: comatory (~ondrejsyn@217.11.241.69) (Ping timeout: 268 seconds)
[00:59:06] *** Quits: masber (~masber@213.55.224.99) (Quit: Client closed)
[00:59:18] *** Quits: pmercado (~pmercado@186.107.54.176) (Ping timeout: 268 seconds)
[01:00:44] *** Joins: salad1 (~cucumber@86.121.64.41)
[01:00:44] *** Quits: salad (~cucumber@86.121.64.41) (Read error: Connection reset by peer)
[01:13:10] *** Quits: yaalon (~yaalon@cpe-70-121-160-255.satx.res.rr.com) (Remote host closed the connection)
[01:14:12] *** Joins: yaalon (~yaalon@cpe-70-121-160-255.satx.res.rr.com)
[01:15:28] *** Joins: stewie925 (~stewie925@2600:1702:44f0:35c0:5cec:41b3:fa14:d1ad)
[01:19:03] *** Quits: yaalon (~yaalon@cpe-70-121-160-255.satx.res.rr.com) (Ping timeout: 256 seconds)
[01:21:40] *** Quits: lind{at}yahoo (uid486956@id-486956.tinside.irccloud.com) (Quit: Connection closed for inactivity)
[01:21:55] *** Joins: sam_1 (~sam_1@87.51.251.118)
[01:24:13] *** Joins: bmomjian (~bruce@momjian.us)
[01:24:33] *** Quits: humanBird (~humanBird@2603-8001-7003-5966-0902-3789-4a79-f643.res6.spectrum.com) (Quit: Client closed)
[01:26:36] *** Quits: sam_1 (~sam_1@87.51.251.118) (Ping timeout: 260 seconds)
[01:27:20] *** Joins: yaalon (~yaalon@cpe-70-121-160-255.satx.res.rr.com)
[01:28:54] *** Quits: Tobbi (~Tobbi@2a02:8108:1240:48ec:748a:7e70:37c6:8b18) (Ping timeout: 268 seconds)
[01:31:37] <qswz> need help
[01:31:39] *** Quits: arthur_melo (~IRC@user/arthur-melo/x-6822691) (Quit: arthur_melo)
[01:32:38] <qswz> n> mock=v=>new Proxy({}, {get: (_, k)=>(typeof k!=='string' ||k=='then') ? ()=>v : ()=>mock(v)}); await mock('foo').get()
[01:32:40] <jellobot> (okay)
[01:32:48] *** Joins: Tobbi (~Tobbi@2a02:8108:1240:48ec:748a:7e70:37c6:8b18)
[01:32:53] <qswz> why it doesn't return anything
[01:33:14] <qswz> n> mock=v=>new Proxy({}, {get: (_, k)=>(typeof k!=='string' ||k=='then') ? ()=>v : ()=>mock(v)}); await mock('foo').get().then()
[01:33:15] <jellobot> (okay) 'foo'
[01:33:19] <qswz> wors with then()
[01:35:32] <qswz> n> mock=v=>new Proxy({}, {get(_, k){console.log('get', k); return (typeof k!=='string' ||k=='then') ? ()=>v : ()=>mock(v);}}); await mock('foo').get()
[01:35:33] <jellobot> (okay) get get get then
[01:35:38] <qswz> look at this
[01:35:44] <ljharb> qswz: restricting line width is a really crappy way to avoiding complexity
[01:35:49] <qswz> n> mock=v=>new Proxy({}, {get(_, k){console.log('_get', k); return (typeof k!=='string' ||k=='then') ? ()=>v : ()=>mock(v);}}); await mock('foo').get()
[01:35:50] <jellobot> (okay) _get get _get then
[01:35:50] <ljharb> qswz: lines should be able to be any length
[01:36:08] <qswz> ljharb: yes agreed
[01:36:14] <ljharb> kalen: ideally as much as possible lives in a separate npm-installed project and repo
[01:36:32] *** Joins: ThePhilgrim2 (~ThePhilgr@151.41.8.149)
[01:37:14] <qswz> I don't get it
[01:37:31] <ljharb> get what
[01:37:32] <devslash> I have a web app written in Angular. I currently uses an http basic auth in my reverse proxy that prompts for a username and password before you can access the webapp. Is it possible in JS or in Angular to get the credentials provided in basic auth, possible from the headers
[01:37:35] <qswz> it's not an infinite loop but it returns nothing
[01:37:46] <ljharb> devslash: prompts using http basic auth? O.o that's a terrible idea
[01:37:57] <ljharb> devslash: like, having basic auth at all. it's wildly insecure. and no, there's no way to access it from js.
[01:38:01] <qswz> n> mock=v=>new Proxy({}, {get(_, k){console.log('_get', k); return (typeof k!=='string' ||k=='then') ? ()=>v : ()=>mock(v);}}); const x = await mock('foo').get(); [x, x===null, x===undefined]
[01:38:02] <jellobot> (okay) _get get _get then
[01:38:08] *** Quits: Tobbi (~Tobbi@2a02:8108:1240:48ec:748a:7e70:37c6:8b18) (Ping timeout: 268 seconds)
[01:38:10] <ljharb> qswz: what do you mean returns nothing
[01:38:11] <qswz> what is that lo
[01:38:21] <qswz> ljharb: look the output above
[01:38:25] <devslash> why do you think its insecure ?
[01:38:34] <qswz> it literally abort
[01:38:36] <ljharb> qswz: because your `then` function isn't valid
[01:38:42] <ljharb> qswz: so awaiting it never fulfills.
[01:38:48] <qswz> hmm
[01:38:53] <qswz> oh I see
[01:38:58] <qswz> then needs a callbck
[01:38:59] <qswz> ok
[01:39:01] <ljharb> yes
[01:39:03] <ljharb> one that's invoked
[01:39:04] <qswz> thanks
[01:39:23] *** Quits: ThePhilgrim (~ThePhilgr@151.41.8.149) (Ping timeout: 268 seconds)
[01:39:25] *** Joins: Tobbi (~Tobbi@2a02:8108:1240:48ec:d4a4:3a4e:9c43:a43)
[01:39:29] <ljharb> devslash: i don't think, it's widely known to be insecure for decades, which is why some browsers don't even support it anymore, and why neither do websites
[01:39:36] <ljharb> devslash: because passwords are sent in the clear, for one
[01:39:47] *** Quits: salad1 (~cucumber@86.121.64.41) (Quit: salad1)
[01:39:51] *** Joins: kalen- (~kalen@gateway/vpn/pia/kalen)
[01:39:55] <ljharb> devslash: http basic auth was a subpar practice more than a decade ago, it's just that now it's also an insecure practice
[01:39:58] <devslash> does it matter that the site is https ?
[01:40:07] <ljharb> devslash: nope
[01:40:12] <ljharb> devslash: don't use basic auth, ever.
[01:40:20] *** Quits: harpia (~harpia@2804:2aec:205:1400:1a8b:e47a:9188:7f77) (Quit: harpia)
[01:40:49] <devslash> what method is recommended ?
[01:41:11] <ljharb> devslash: an actual login form, like every other website
[01:41:21] *** Joins: vysn (~vysn@user/vysn)
[01:41:38] <ljharb> devslash: https://stackoverflow.com/questions/549/the-definitive-guide-to-form-based-website-authentication
[01:41:50] <devslash> how is that different ?
[01:41:55] *** Joins: voltage_ (voltage@user/voltage)
[01:42:01] <devslash> the credentials are still submitted in plain text anyways
[01:42:04] <ljharb> devslash: because it's not the http basic auth protocol, which is specifically bad
[01:42:17] <ljharb> devslash: no, because of https, the form data is protected.
[01:42:30] <ljharb> devslash: basic auth on https is the same as on http, it's separate from the TLS because it's part of the URL
[01:42:45] <ljharb> iow ssl only kicks in after basic auth is done
[01:43:06] <ljharb> that's my understanding anyways; the recommendation is valid even if my explanation isn't exactly right. you're welcome to google it.
[01:44:49] <devslash> ljharb so I run multiple web apps I've developed and they run behind a reverse proxy.If i do implement another form of auth
[01:45:03] <devslash> Id like it to be something that I can easily add to any app
[01:46:01] <devslash> im not sure if that matters at all but the reverse proxy handles the auth using a rule similar to this: - "traefik.http.middlewares.auth.basicauth.users=test:$$2y$$12$$ci.4U63YX83CwkyUrjqxAucnmi2xXOIlEF6T/KdP9824f1Rf1iyNG"
[01:46:46] *** Quits: kalen- (~kalen@gateway/vpn/pia/kalen) (Ping timeout: 268 seconds)
[01:52:57] <kalen> ljharb, ah, interesting. so instead of isolating it in a libs folder, isolate it in a completely separate npm repository. hmm, trying to think if that would be overkill here. do you have a general rule-of-thumb on when to create a totally separate repo? i mean, in theory, practically anything can live in its own repo. where do you draw the line?
[01:54:33] *** Parts: bmomjian (~bruce@momjian.us) ()
[01:55:02] *** Joins: sheetjs (~sheetjs@user/sheetjs)
[01:55:21] *** Quits: yaalon (~yaalon@cpe-70-121-160-255.satx.res.rr.com) (Remote host closed the connection)
[01:59:02] *** Quits: fassl (~fassl@2a02:8388:1987:9380:794e:20f7:59de:860c) (Ping timeout: 260 seconds)
[01:59:23] *** Joins: derjanni (~textual@ip-88-153-100-48.hsi04.unitymediagroup.de)
[01:59:52] *** Joins: yaalon (~yaalon@cpe-70-121-160-255.satx.res.rr.com)
[02:00:01] *** Parts: paule32 (~paule32@user/paule32) (Leaving)
[02:00:21] *** Quits: Icedream (~icedream@hzn-b.serverkomplex.de) (Ping timeout: 268 seconds)
[02:00:46] *** Joins: spuz (~spuz@95.150.9.30)
[02:01:12] <devslash> ljharb, are you familiar with Authelia?
[02:03:13] *** Joins: Icedream (~icedream@hzn-b.serverkomplex.de)
[02:04:42] *** Quits: incognito (~relativit@user/incognito) (Quit: Going offline, see ya! (www.adiirc.com))
[02:09:04] <theskillwithin> i've never heard of it before, but if I was in the meeting where they came up with the name, I would have voted for a different name
[02:10:19] <wez> :)
[02:13:18] *** Quits: kogepan (~kogepan@user/kogepan) (Ping timeout: 268 seconds)
[02:13:47] *** Joins: gggp (~gggp@111-251-142-222.dynamic-ip.hinet.net)
[02:18:39] *** Quits: gggp (~gggp@111-251-142-222.dynamic-ip.hinet.net) (Quit: My MacBook has gone to sleep. ZZZzzz…)
[02:19:33] <ljharb> devslash: no
[02:19:49] <ljharb> devslash: to your earlier question, why would the reverse proxy have any auth at ll
[02:19:53] <ljharb> devslash: the point of the proxy is to be invisible
[02:20:16] <ljharb> devslash: if it's handling auth than it's not actually a proxy. that's what an actual auth service should be doing
[02:20:27] <devslash> well its basic auth
[02:20:36] <ljharb> kalen: i don't think it's ever overkill, but even if they live in the same repo, you should be pretending they're isolated, and designing them as such
[02:20:42] <devslash> but Authelia is an open source auth service that I am looking into
[02:21:07] <ljharb> devslash: right but basic auth is how kids protect their websites when they're learning html. it's not a real pro thing, even separate from the massive security problems it has
[02:21:24] <ljharb> devslash: usually i'd just suggest passport, since you're presumably using express already
[02:21:39] <devslash> im not familiar with that
[02:22:05] <devslash> Authelia integrates with Traefik, Nginx to redirect sites to a secure login page
[02:22:33] <ljharb> devslash: the site *itself* should handle auth. passport is a way for it to do that.
[02:22:59] <ljharb> devslash: you don't actually want a completely unprotected site, behind some barrier, so that once you're in you have full access to something unequipped to protect itself
[02:23:35] <devslash> that looks nice but it wouldnt work for all of my apps
[02:23:38] *** Quits: gaqwas (~john@dynamic-077-009-126-017.77.9.pool.telefonica.de) (Ping timeout: 256 seconds)
[02:23:46] <devslash> because not all of them use Node on the backend
[02:23:53] <devslash> I mean Node w/Express
[02:25:12] <ljharb> devslash: ok so then you should run one node auth server, have it handle all the auth, and have all those other sites talk to it to confirm authentication
[02:25:26] <ljharb> devslash: your auth server doesn't have to be written in node ofc
[02:25:35] <devslash> yea
[02:25:41] <devslash> thats what Authelia basically does
[02:25:45] <ljharb> devslash: but then each site, in its own idiomatic way for whatever lang it's written in, handles auth, but delegates authority to the auth server
[02:26:17] <devslash> its one Docker container handles the Auth part and you just add a rule in the compose for each container to tell it to use the Authelia middleware
[02:30:04] *** Quits: Sven_vB (~sven@user/sven-vb/x-2094958) (Remote host closed the connection)
[02:31:14] *** Joins: Sven_vB (~sven@user/sven-vb/x-2094958)
[02:34:25] *** Quits: zsoc (~zsoc@cpe-24-168-59-34.hvc.res.rr.com) (Ping timeout: 256 seconds)
[02:35:33] *** Joins: electrostatic (~electrost@2601:600:8600:5a1:3da1:26b5:1dd9:b9f)
[02:35:38] *** Joins: lind{at}yahoo (uid486956@id-486956.tinside.irccloud.com)
[02:37:43] *** Joins: Nimzowitsch (~nimzo@user/nimzowitsch)
[02:38:22] *** Quits: CryptoDavid (uid14990@id-14990.uxbridge.irccloud.com) (Quit: Connection closed for inactivity)
[02:39:47] <austincheney> anybody needing a super high visibility pull request to pad out their resume?  The popular NPM package "ws" is limited to 2.1gb streams because they are using Node's readUInt32BE and writeUInt32BE methods which are limited to 32 numbers.
[02:40:22] <austincheney> if you swap that for readUIntBE and writeUIntBE methods you can push that up to 281tb streams (48 bit number)
[02:41:46] <austincheney> web sockets supports 63 length payloads, but JS's largest supported number is 53bits long, so 48 bits is the best you can get directly using Node methods
[02:43:44] *** Quits: voltage_ (voltage@user/voltage) (Quit: Leaving)
[02:45:17] *** Joins: Y4knotiS (~YaknotiS@cpc1-cmbg18-2-0-cust87.5-4.cable.virginm.net)
[02:49:52] *** Joins: pizdets (~pizdets@183.182.115.116)
[02:50:06] <ljharb> qswz: any chance you could upgrade cheerio to latest in this same PR, since you're testing it?
[02:50:09] *** Quits: src (~src@user/src) (Quit: Leaving)
[02:50:27] *** Joins: incognito (~relativit@user/incognito)
[02:51:40] *** Joins: voltage_ (voltage@user/voltage)
[02:52:16] <theskillwithin> !mdn accent-color
[02:52:18] <jellobot> https://mdn.io/accent-color - Failed to extract mdn text
[02:53:17] *** Quits: yaalon (~yaalon@cpe-70-121-160-255.satx.res.rr.com) (Remote host closed the connection)
[02:53:21] *** Joins: sam_1 (~sam_1@87.51.251.118)
[02:53:29] <theskillwithin> the extracting title text hasn't worked for a long time anyways,  i think duckduckgo blocks it somehow so nothing can do about it
[02:56:06] *** Joins: yaalon (~yaalon@cpe-70-121-160-255.satx.res.rr.com)
[02:57:44] <qswz> ljharb: ok
[02:57:50] *** Quits: sam_1 (~sam_1@87.51.251.118) (Ping timeout: 260 seconds)
[02:58:21] <qswz> not sure we need to mock requests, but I did in case
[02:58:25] *** Quits: The_Jag (~The_Jag@host-82-54-168-243.retail.telecomitalia.it) (Quit: The_Jag)
[02:58:46] *** Quits: DnzAtWrk (~DnzAtWrk@88-115-149-152.elisa-laajakaista.fi) (Ping timeout: 260 seconds)
[02:58:47] *** Quits: abirkill (snoopy@d172-218-198-90.bchsia.telus.net) (Quit: Let us prepare to grapple with the ineffable itself, and see if we may not eff it after all.)
[02:58:50] *** Quits: spuz (~spuz@95.150.9.30) (Quit: Client closed)
[02:59:28] <qswz> cheerio                                                      0.22.0          0.22.0  1.0.0-rc.10
[02:59:42] <theskillwithin> well it worked when i made the fixRedirect function like musta been years ago now,  but stopped working
[02:59:42] <qswz> it's alreaydy latest stable
[02:59:54] <theskillwithin> in mdnPlugin
[02:59:54] <qswz> unless you want a rc version?
[02:59:55] <ljharb> qswz: yeah i meant the latest v1
[02:59:57] <ljharb> yes
[02:59:58] *** Quits: yaalon (~yaalon@cpe-70-121-160-255.satx.res.rr.com) (Remote host closed the connection)
[03:00:03] <qswz> ok
[03:00:03] <ljharb> if possible
[03:00:35] *** Joins: sam_1 (~sam_1@87.51.251.118)
[03:02:11] *** Joins: sickdyd (~sickd@FL1-122-135-172-49.tky.mesh.ad.jp)
[03:03:47] <qswz> doe, gotta sleep
[03:03:55] <qswz> night
[03:04:01] *** Quits: qswz (~caub@89-80-20-125.abo.bbox.fr) (Quit: leaving)
[03:04:36] <lind{at}yahoo> organization to tackle the Defense Innovation Unit's Space Visualization Challenge: we're focusing on helping managing space junk - http://junkwerx.space <-- looking for collaborators, SMEs and partners
[03:06:26] <theskillwithin> haha something like that sounds like it deff needs SME's
[03:07:37] <ljharb> people still use yahoo email?
[03:07:45] <lind{at}yahoo> yeah for sure theskillwithin, we got 5 pretty good ones on our LinkedIn chat group (link on the site)
[03:08:17] <lind{at}yahoo> ljharb: I actually pay $13 a year so it forwards to my O365, four char at yahoo is pretty impressive
[03:08:56] <lind{at}yahoo> you have no idea how many compliments I get on it. People always try to give me their email address and I'm just like "yeah mines simpler, email me at lind@yahoo.com"
[03:09:56] <ljharb> ha, fair
[03:10:13] <ljharb> mine's 6 chars but i have the same one on gmail ¯\_(ツ)_/¯
[03:10:42] <ljharb> wait what's SME stand for? probably not small/medium enterprise
[03:11:46] <lind{at}yahoo> subject matter expert
[03:11:55] *** Joins: wroathe (~wroathe@c-68-54-25-135.hsd1.mn.comcast.net)
[03:11:55] *** Quits: wroathe (~wroathe@c-68-54-25-135.hsd1.mn.comcast.net) (Changing host)
[03:11:55] *** Joins: wroathe (~wroathe@user/wroathe)
[03:12:37] <lind{at}yahoo> if gmail's min char requirement wasn't 5 char's I would have gotten lind@gmail.com, I could have gotten jlind@gmail.com but I went with jason.lind@gmail.com for some reason
[03:12:44] <lind{at}yahoo> that also forwards to my O365
[03:13:37] <lind{at}yahoo> interestingly "." is ignored on gmail. so jasonlind@gmail.com or j.a.s.o.n.l.i.n.d@gmail.com go to the same address
[03:13:44] *** Quits: ThePhilgrim2 (~ThePhilgr@151.41.8.149) (Ping timeout: 268 seconds)
[03:14:28] *** Joins: ferdna (~ferdna@user/ferdna)
[03:14:53] *** Joins: ThePhilgrim2 (~ThePhilgr@151.41.8.149)
[03:16:02] *** Quits: Y4knotiS (~YaknotiS@cpc1-cmbg18-2-0-cust87.5-4.cable.virginm.net) (Ping timeout: 260 seconds)
[03:16:03] <ljharb> lind{at}yahoo: sure, that's been the case for awhile. also `jasonlind+whateveryouwant@gmail.com`
[03:16:37] <lind{at}yahoo> O365 uses + for "plus addressing" which is some kind of integrating routing scheme meant for distribution lists
[03:17:25] <lind{at}yahoo> I read an update about it, but never really dug into it
[03:19:42] <devslash> yes
[03:22:03] *** Joins: quazimodo (~quazimodo@n1-40-235-47.bla1.nsw.optusnet.com.au)
[03:26:45] <theskillwithin> idk if shorter is always better
[03:27:04] *** Joins: i0e (~is0ke3@user/is0ke3)
[03:27:18] <theskillwithin> like if you score just your first name, well you will prob get a lot of extra spam
[03:28:07] *** Joins: poiqwepoiqwe (~poiqwepoi@120.18.204.49)
[03:28:37] <theskillwithin> wtf github has a command pallet now
[03:29:20] <theskillwithin> and hit . on a repo you get vscode in the browser.   github is turning into vscode
[03:30:54] *** Quits: Swahili (~Swahili@cpc153693-lewi20-2-0-cust508.2-4.cable.virginm.net) (Quit: Leaving...)
[03:31:40] *** Joins: kalen- (~kalen@gateway/vpn/pia/kalen)
[03:34:32] *** Quits: stewie925 (~stewie925@2600:1702:44f0:35c0:5cec:41b3:fa14:d1ad) (Ping timeout: 256 seconds)
[03:35:46] *** Joins: humanBird (~humanBird@2603-8001-7003-5966-9c6b-1d3a-8352-69e9.res6.spectrum.com)
[03:36:03] *** Quits: Naan (~Naan@user/naan) (Quit: Leaving)
[03:36:16] *** Joins: Naan (~naan@user/naan)
[03:39:01] *** Quits: kalen- (~kalen@gateway/vpn/pia/kalen) (Ping timeout: 268 seconds)
[03:40:31] *** Joins: Samian (~s@user/samian)
[03:40:37] <Samian>  Does this chart make sense to anyone? https://imgur.com/a/7KtJpcL (https://docs.nvidia.com/deeplearning/cudnn/api/index.html#cudnnSetSeqDataDescriptor).   I can't tell if contiguous storage is following the arrow trail, or the traditional left to right, next row and repeat.
[03:43:18] *** Joins: z1haze (~z1haze@184.103.69.239)
[03:43:19] *** Quits: z1haze (~z1haze@184.103.69.239) (Changing host)
[03:43:19] *** Joins: z1haze (~z1haze@user/z1haze)
[03:43:47] <z1haze> I have not really used fetch in the browser before, but fetch(url).then(response)) should not be pending, right?
[03:43:58] *** Joins: gggpkm (~gggpkm@114.245.104.132)
[03:44:30] *** Quits: ZeroWalker (~ZeroWalke@2001:9b1:28f8:8300:258d:265d:a9e1:9dc0) (Ping timeout: 260 seconds)
[03:44:44] <z1haze> more specifically, doing something like this fetch(form.action, {method: 'POST'}).then(goToConfirmation); and the param passed into goToConfirmation is showing as pending ..
[03:45:03] *** Quits: federico_it (~textual@151.95.125.195) (Quit: Textual IRC Client: www.textualapp.com)
[03:45:45] *** Quits: gggpkm (~gggpkm@114.245.104.132) (Remote host closed the connection)
[03:47:18] *** Joins: fassl (~fassl@2a02:8388:1987:9380:794e:20f7:59de:860c)
[03:47:32] *** Quits: fassl (~fassl@2a02:8388:1987:9380:794e:20f7:59de:860c) (Remote host closed the connection)
[03:48:14] *** Joins: monoxane0 (~monoxane@user/monoxane)
[03:50:05] <z1haze> actually nvm. i just realized that .json() returns a promise pending too.. ugh
[03:50:10] *** Quits: monoxane (~monoxane@user/monoxane) (Ping timeout: 260 seconds)
[03:50:11] *** monoxane0 is now known as monoxane
[03:50:12] <Samian> hello javascript kiddies
[03:50:22] <Samian> okay sorry. I don't want to break the rules.
[03:50:38] <poiqwepoiqwe> Samian: the arrow trail ... left to right is bound to time so a batch containing 3 beams of 2 vectors each is read top to bottom as per the arrows which is still left to right
[03:51:11] <Samian> many elite dudes code in javascript. To start name calling was highly immature of me. I'm really sorry. I distributed the flow the channel. I probably pissed people off. I'm really sorry. I will shutup now.
[03:51:34] <poiqwepoiqwe> then the next "column" is another batch in the following time slice
[03:51:40] <Samian> thanks poiqwepoiqwe !
[03:51:44] <poiqwepoiqwe> nw
[03:51:53] *** Quits: humanBird (~humanBird@2603-8001-7003-5966-9c6b-1d3a-8352-69e9.res6.spectrum.com) (Quit: Client closed)
[03:53:40] <poiqwepoiqwe> Samian you can also bank on the size of a batch as it will be padded to achieve const ... is what im reading
[03:56:35] *** Quits: pulse (~pulse@user/pulse) (Ping timeout: 256 seconds)
[03:58:18] *** Quits: z1haze (~z1haze@user/z1haze) (Quit: Leaving)
[04:04:18] *** Quits: sam_1 (~sam_1@87.51.251.118) (Ping timeout: 268 seconds)
[04:09:18] *** Quits: Nimzowitsch (~nimzo@user/nimzowitsch) (Remote host closed the connection)
[04:11:30] *** Quits: nomic (~nomic@185.192.69.69) (Quit: Leaving)
[04:15:51] <kalen> samian, lol
[04:16:55] <ThePendulum> my god, I stumbled upon this javascript 101 (barely) quiz, and managed to cock it up. somehow selected <javascript> instead of <script> lol. I have never accidentally written that in my life, weird fucking it up when you do it in reverse
[04:19:41] *** Joins: blur (~blur@76.92.20.41)
[04:25:04] <blur> Is there any way to access the constructor function of a type within a static method without resorting to hardcoding the name of the type?
[04:25:53] *** Quits: ThePhilgrim2 (~ThePhilgr@151.41.8.149) (Ping timeout: 268 seconds)
[04:27:44] *** Quits: cthulchu (~Cthulchu@193.194.107.250) (Ping timeout: 256 seconds)
[04:27:45] *** Quits: cthulchu_ (~Cthulchu@193.194.107.250) (Ping timeout: 256 seconds)
[04:28:22] *** Quits: electrostatic (~electrost@2601:600:8600:5a1:3da1:26b5:1dd9:b9f) (Ping timeout: 260 seconds)
[04:28:55] *** Quits: tar_xvf (~tar_xvf@ec2-3-136-243-174.us-east-2.compute.amazonaws.com) (Quit: ZNC 1.7.5+deb4 - https://znc.in)
[04:30:40] *** Joins: Crash1hd (~Crash1hd@64.56.153.179)
[04:31:26] *** Joins: leduyquang753 (~leduyquan@user/leduyquang753)
[04:31:35] <Crash1hd> Can anyone share if there is a speed difference between .forEach and .find or .filter? I know .map is slightly faster but is there actually a difference like is there any reason to use .forEach when I want to do a find?
[04:31:53] <Crash1hd> Hoping for a link that proves that there is no difference so to speak :)
[04:32:56] *** Joins: pulse (~pulse@user/pulse)
[04:33:18] *** Joins: tar_xvf (~tar_xvf@ec2-3-136-243-174.us-east-2.compute.amazonaws.com)
[04:35:20] <Crash1hd> I mean unless there is a noticeable difference.
[04:35:52] <blur> Probably depends the type of data and how much of it there is.
[04:36:01] <blur> Seems like a micro-optimization
[04:36:38] *** Joins: nomic (~nomic@185.192.69.69)
[04:37:36] <poiqwepoiqwe> Crash1hd all are O(n)
[04:37:48] <Crash1hd> Thats what I figured. but lets say you have a large array of objects and you want to filter or find a specific object based on an ID is there going to be a difference between them
[04:38:16] <Crash1hd> 0(n) as in its irrelevant? cause 0 * anything is 0?
[04:38:23] *** Quits: ferdna (~ferdna@user/ferdna) (Quit: Leaving)
[04:39:00] <blur> The find method executes the callbackFn function once for each index of the array until the callbackFn returns a truthy value. If so, find immediately returns the value of that element. Otherwise, find returns undefined.
[04:39:03] <blur> From MDN
[04:39:19] <blur> So find may return faster
[04:39:26] <blur> Depends on where in the list your object is
[04:39:39] <Crash1hd> Right.
[04:39:49] <poiqwepoiqwe> some may return differently but the worst case is O(n)
[04:39:55] <blur> Yes
[04:40:38] <Crash1hd> ok I guess then the next question would be if someone where to use forEach to turn the array into a set to use instead of just calling the find (if you are only doing a find once then adding the data to a set is kinda useless and overkill right?
[04:40:41] <blur> I would prefer the one which leads to more readable code until profiling leads me to believe that one method or the other is a hotspot.
[04:43:09] *** Quits: wroathe (~wroathe@user/wroathe) (Ping timeout: 268 seconds)
[04:43:17] <blur> If you need to find many items, then forEach would be better.  Using find in that manner could be much worse.
[04:43:30] <Crash1hd> blur, makes sense.
[04:44:10] *** Quits: nomic (~nomic@185.192.69.69) (Quit: Leaving)
[04:44:12] <poiqwepoiqwe> yeah if you are calling find for each item then you are exponentially increasing your time complexity
[04:44:19] <blur> :)
[04:44:51] <Crash1hd> so if I have to do many finds then run a forEach and then use a get from Map to get the data would be more efficient than just .find
[04:45:22] <poiqwepoiqwe> are you still iterating over the entire dataset using find?
[04:45:30] <blur> Maybe define a new function findAll(array, predicate) => array
[04:46:19] <Crash1hd> poiqwepoiqwe, technically I am not iterating over the entire dataset unless the data is the last item in the dataset
[04:46:51] <Crash1hd> but what I thought would be more efficient would be to do a single forEach to turn the array of objects to a Map and then I can do a find way faster
[04:48:02] <blur> No need to turn the list into a map if you're just trying to find things in the list.  Just collect the things you want from the list as you iterate over it.
[04:48:50] <poiqwepoiqwe> order can yield faster results but ordering can be taxing ...
[04:49:11] <Crash1hd> ok but if its iterate over the list each time to do a find vs iterating over it once to create a map is the question
[04:49:30] <blur> Why not iterate over it once and find all the things?
[04:49:43] <blur> Do you know what you're looking for before you loop?
[04:50:04] <Crash1hd> no
[04:50:07] <blur> Ah
[04:50:14] <blur> Then foreach is no faster than find
[04:50:27] <Crash1hd> its more of a function calls the forEach then later another function calls the find
[04:50:38] <Crash1hd> ok did not think so
[04:50:46] <Crash1hd> The code I wrote did not quiet work the way I wanted so I redid it but they had me redo it using only forEach loops and now its ugly as hell (it works but dang) it ugly
[04:50:55] <Crash1hd> https://imgur.com/a/POfPq9H <-- this is the working rewrite code
[04:51:19] <Crash1hd> I am sure I could have cleaned it up using find and had an easier time reading this garbage
[04:52:16] <Crash1hd> Also I was always under the impression that doing a forEach within a forEach is bad form.
[04:53:00] <blur> That's a lot of nesting
[04:53:52] <Crash1hd> yeah it was frustratingly annoying
[04:55:12] *** Joins: comatory (~ondrejsyn@217.11.241.69)
[04:57:57] <poiqwepoiqwe> Crash1hd forEach within forEach isn't inherently bad form ... nested for is common practice
[04:58:36] <blur> But maybe like break them into smaller functions
[04:58:38] *** Joins: mrdata (~mrdata@user/mrdata)
[04:58:54] <Crash1hd> poiqwepoiqwe, ahh I always thought it was bad because every for loop on the inside has to run through every for loop on the outside
[04:59:28] <poiqwepoiqwe> sure. but dimensionality drives the requirement
[04:59:36] <blur> If you have to check all the data, you have a to check all the data.
[04:59:50] <Crash1hd> True :)
[04:59:56] *** Joins: wroathe (~wroathe@c-68-54-25-135.hsd1.mn.comcast.net)
[04:59:56] *** Quits: wroathe (~wroathe@c-68-54-25-135.hsd1.mn.comcast.net) (Changing host)
[04:59:56] *** Joins: wroathe (~wroathe@user/wroathe)
[05:00:24] *** Quits: comatory (~ondrejsyn@217.11.241.69) (Ping timeout: 268 seconds)
[05:01:10] <Crash1hd> This is what I had code wise... really would appreciate the critique (also keep in mind this code does not work).https://www.typescriptlang.org/play?#code/LAKAxg9gdgzgLgAgLYEMCWU4FMoqmLAZSzgFcAHAERThQQF4EBtUBNhAb1fZ4CJIk5aDji8AXAl6EAnvCxJeAGm482vCOSwAnGmmgoANgElsSGOOYrVPLiGv32-ABZ4jAEwsAmAIwAGX8p2Dva8aKYWvACyKAAeCAAKWlgwMKRJSlbBjgBmpPhwelAR0TG8mfYAvoFZbLY1qs6uHhI+ngDs1fWOYfLFsQgASjRYGUFdkrn5hX2l5dYVcwgAulZVVnUhAkJQIhEAYgakaG4IAKJQHp3W6po6BfrGpuYSLGP
[05:01:10] <Crash1hd> BG+ONUO5e3p4BiwcoXCEl48VIggQe1OCAAEhA0uYrl1eJMwPciqDTgYUOQYFgPID2Gs3g4PiiwC5vs0EK1vMj6sDeqDwZDoQhCHAtBAANbJUbjNRojERbG4-GE0mVBn2cmMylNX7-GVZJkKUEANUMADcsAgAGQcrA0OEIrRIonXYXTLE4vEEspS+Yq1RympfH4tP70y0NHrqyRagy6g1GmgwBAAFQgtAMHK5vP5LqB1ugortEsd9RJ9TdqoV1KVAKdwTVEXiKDAPIwAHNTYiBYLUXl0TbJGL7ZLs8n2HnSwXPbTvT3rv7y5Xq1A69HY-HuXyLSWUy2RbbxQ7fTman2gQOaa1i4LJGPQYRyFpa-XzY3PqnMe2Mxul8SR5xfXw90qfc-RyDJGeLynKMY0MOdE0XI9mymNM107LMai3LId02KlBwPV8+BPSR4kOKdtCvCCmz
[05:01:11] <Crash1hd> vdN1y7BDX2Q65Py9HwMO6P8wVwmt8JnUDOXnJN3xyFc214DtM03RYlhdXh8S0bU0AIEx5GeSwfzfeS+FSAAjABhCBBGETAInIJj8O8G8UQ0bRdAeaSzAsV4jxsLj81Q-c-kPazf2ZQMdT1eEGzo1ViNggTFOlWzXSC3d7K-bzSyw3ggxDVi43Y8DDOcoUeJgh9SPg5zEOsyiKTCminOS+jXKkY1EE868IuXaD7z4x8yKyqrexClDFRo78iswhjiHDYDZwShckuSqDWzSuqMpathsqPXL5XyodlUmv0GIrKtLwqwjOomVLav4p8iumwVZvdaiFo6rbjxWidLzisDBqaq0dpIuClsO8ZjrstqFsKzqy1Pc91rNTbft89KXoC50lo+-t5rpB7lpKgCbpA+KE3upa+FB8bwYO+HodCr70Ix4qA0YvJmK0AihuckbVzB-zcah4
[05:01:16] <Crash1hd> m1FOuHmcukqcPJliUbuziIdLLG9oa6yFgFlZ5Le4KBdE0g1I07ZdlBXTucpzxqdLYy7kKQxzNkqzkvx1rCwK+GupKmKPKBjXIKF+rMtFvH2Y9BzaOdqLLb6ti0f5i7tpq56GeSqXc2d1nHLNkmIh68rrcjlKA78-bg6dgWCZNs74450mY4jW6Bt9i7ad44WHaPEPtzD2GI-dq61qAjabaIp6k5F8vU79l3wtrznrqA-OfeBori7G0vXo7ovw8WtOQiipGG7j527Ymmeponrau-arO-v-AH+95guh+G5ecZTpnV4aKefuHqKubwynG+3k+g8a8-O6n86N9vvTKYHjij5ps-ZOWUgoS27L6aGst5aaR2NpZWP8EAAGYm7XC1qZXAjwZKWTfpPau09O4e3clTJ+Ld6bAMdjgjeH9t6EODHqP+iUSGJzIW3QUFckJV0JjXC+5
[05:01:21] <Crash1hd> sc5lWIUvUh2MX4UIvkbKieDP6-TnmVPOB9B4oJREA1h4x2HvE4RnImPCo4sj7nWR+gjmHCPIe3Shv1qE91JqtSc055H-0UYyZRZc2Hr3MXg6+w055730YvbRCdRq7XtuPMxw8LF+OztHbxXtUb2KYQEwOJiXEhOGlfGhK0EEGPCSPQJK9GZiI0WhYcljywIIYejLJTjXqgMEiWMBL51iLH4ArLSogsRTgwCMESYkJJSSeNg+SkDTreG8B0IKO9eCeAAKy+CvEacSklOljIwNgcShgIgAE5-BbOcZDAZYyhkjIiuM6ZMyKpzJ6YsmWyztDajWaCbwAAOLZ-gdmqDUYM+awzRlXIYn4fwsziDzIIA47omAbl3MkIggAbM83wryeDvP2Z8w5SyGL-H+WcwFFyQVqGuasgwEQ2jou2ZuCiSKvpfKOVFRBWyAU3IWTi48YL8UR
[05:01:26] <Crash1hd> D8E8558L6l7Jlgc75kEooABZaWYvpcCqlzLbkEvuQKoVHLSUQPJRnSlqKSowoxWac5DLxUrMlREHwaqSWSzJTy5FfKmxRT+eqtImqxVLIlRC3g0LYVwvldyyCvKqW-OJXSoFlz+X2qlZIAViDiUvJqQ4Opa8GkliaTApWkhIw6FgEgNAKRphdNFVgPW-TQ4mq4fg81aKrWUyxVqu1OqHVErlUahVebNHcP5QxdlPrsXavBYGiZDz2VhslkJVYoAJagEgLARAqBrm4HwEQWg2AGByRsjGrYLTo6yHCCJNBGJdZ9JeLWxtJUSgJCSCkNIfqmyStICMCQ6yoWTPaK63Nu7Sb7qGNgRlvAz0XoQAKzwDzJk-vDfYSNCBsp9ljYrOBkgDhHBOOcS4jT1060wRZbdbrC2cwhOQKEMJMmQXfV4GliCBXrLvZXH5aG2QwkPq+3DEh
[05:01:33] <Crash1hd> EGIIeZ4L93hiMcNI6TT2hoY4CJltR2k+HCPMfUaxiI7GwxwDkf1BRRyeO0fo4xgTZIVVWL0VxnDhhz14d8ARojNaUOfFvspsphdPjSbowxnw8nZSKciYBHxXkxk8c8Hx7T4DdMoi8TZ6JfMAGlhM7J8zOn72oasRk3xqnDgfsc5p-jAWSMPpKarTzlGpNqY-TJszTHe21K6XLdScbMD6x3U2FSuWwOtMkCre+CADJHPg2ZLdc7DbFM1EQ7DRcHNOeCfkrJtDYp2MYc7Xz6XOtFXEQjPhJpWsb3a1F5zZ8usEO6rIxLkmBspYsGluTF81EKe63XGxKm2trZaB1rbrib57eRhJ2Jq3wvrdM5tvJI2mu7w85N3602tPDca7txGUTDPebC+pmj93-OPe+wtzmIW7NZI+9FsHzlRu8Pi5V-7jKgSDYe8HapMWWOQWK802BZXeA
[05:01:38] <blur> My internet just broke
[05:01:38] <Crash1hd> VYprSV9tWMHZuQ09n7bGWuhcO7d47M2vsI+e9FIhqPt4Y9B3NmnEPxux2h53WHs3X7zaLjI3qXObtA6QSDjL8Ocrs+sYDYXjO5eRc+6d5JNN9P11sVd-rMOjvy784rvn4PJfdSiW94eovWfK9p9Zy73trsm6Z2bobOuJdf3SQlu3w0Hc+-59byHCWZce7lxt3nIDxYWesJA-HeWick-wsgmrtx0GbqwdTq3fuLb0-V1N03Wu4eW7Z875rdDlvu5F6bmPFvxeh4L4Lg7JfPdl7F6Ilv0jFvS76+U+vnvG+O5mir5TgeabB6V+Pqv2EDOD6M+9hvCux9HXZ-PWzlVZcRZO7Pjf8+pB-aXwD09q-zfr-eirqHO+o975ZyH-Pffw8o9P2jkIPOm+i2x9mPtbxgNGlF1CdRR2kdgNZRJM0qcGtccgs9VpkW0y0ZYkgx0oBawLA
[05:01:43] <Crash1hd> Hl1lCMYUE9pY4tQQTlEDbVkD5B0A0CpwLARksCr1fBcD518DJBLUiCT1PgUCyD0CaNJlqCcCcdBMGCJlhUNVS1iDII2CMAOCEA2hvBuDaDeCdt+CaVi0bUWCUQxDyCaxKDfA2gZC6DmohNQRZVTkhDM1X01CJDvBg0dC5DLN9DJADVmDTDSDxCKCvQuDsDZCXNAs9NflnkHCjkzCXCkEuCrDPDYs4D7lvURVfVHDUCJDg1pD3D-1rBANACF0Cd41eBE08AYAU0000wM1fVoCDZYDvCSp0U-CxkAiNCJABVMDr1v8HBEVbDeBm0ojW1KinD1CvAoVsDJkGjKh-8EUB1QAh1oAYAIADAsAAA6AwCAGsAAClQOwAnQIGIDICoBoBQEUGQDIOWLwFWOnSwAAEoABuEY8AMY0dXYnAfYogEgCgaIDDRgHYAAdwQEePmNONGJHR
[05:01:45] <blur> :)
[05:01:48] <Crash1hd> 2PHVuM5GGEeNnVePeNxE+LOJAG+PgAQApxzzMEeIkDwGkGBKwDeI+K+IuJ+O6QWT1gRIQCRJRLRLBIxKhMQGYjgEIBy3SPy1nXmIgGUgACtESoBpAjjmTkT6AAA+BSHgNAbIBAeYgAQgAHlGSsB0QpiXAYBhSXioBEgtY4BpApiwBDADA6TGTtiAByZPRWMTTUo4o4nk+wJIMgLQKATgCoCEoYyEt4YdaEnUlpIE541E0E8gcE84ngekhkqYh0wnGAKY7ICALQU4SsJweY+YlSUUpk-Elkw0rkxYJYm4ydNYh43EH0kgCMuWKMn0qklPbYvsWExDGACQSMxkgAfimMLL1hdAqCOKsBJLeBNLSHNN9JEEeIhMtPOIAHouyEBVIkhhhQS-jkz7jyBHjQBEyVi7j1jqBaAAygyQzKRwyvT2S4zOSrBJz-jRzHj0y4B1TvTgC
[05:01:50] <poiqwepoiqwe> youll need to shorten that one ;)
[05:01:53] <Crash1hd> RB8zFgqyngJAvSKzTyZIXRsTekZJzzyz0zCingbzczStiyEByTKToF3z9yjjkRazQAGyey+yByZ1ohhyDjATcQJzripyATsB5zgzQzlzGTVyGB1y3hNzkzDidz8Q9yvTlTqS4BjySwryzAHyGTLys8N0iybyoCzyYTHzbys0XzVg6yQBgLez+yyo9RhSaKENcSYKQBsKoLsAdzAzkKlz9z2Tti+RpASyuRaw1yjS2ALzKyBK6sZIKzJLFywy6S0B0KuTVLVByKYA8KMyIA0AKz-RSKHBDzMAJB5KXR31zzrKpj30ayMSEUMTayITQAQK7SJjpjZiFjNTRKp1oLyAJBNTtiIqEKsBHiuLQLeLlChLyBYLILIrxK0zdKUKZKYzpA5KsAFKEB4AbMVLbB1KWK9YdKFz8qYBDLCrKqrAaqngLK9zGqbLTA7L2AHK4AnKSrkQq
[05:02:00] <Crash1hd> iSz3KqiALfLJr-KQBAqxjgqZi5j5jtSGKZI8TYqyqVr4TcRkqABBNwE4OgaIRASMFAZSSYhAWcugQgM0AgMqiABAMIBAFU805SPUcYrQWgM66Y0khANwTY9k2dDgX4sFeC3CmgE6r6y666tIAgCQDgCoIDaayYxAOAQQfikyWivWKMgGxgJgJYCE5GhAVG8gYQ1imSbGwq2dPG6akCniwciC80narQHQZEiAfkqMzKkGrc9YiS+q6S+K0cimpE4q0q8q5SjCkyu0lGtGxkna2dAW9YqM6ijGwSp4Cs1AN0ukzSynJ4IW2MiW+Y3KKY42syqM18Y2jSlWrSra8gKY8krWq2nW8mxkqY-0f830ECi2+KsGjK+SECtgO2jM+Sji+of2hAZW7Wa2mAHSjANweYj23sngeYrAAwJAIy7klOpAV20wBgRgU2l2-0BO9gd2ksQCt
[05:02:05] <Crash1hd> 4Bs3k-k+Y4mqMnaw0vsGu7WuE6Uxkqm30C2mu2W8242xux25us2oSK04kD09gPkgU3uyOp2swKM+uxYIKyYhasKie7PIsim9a5ezG3Wxk7y4em0ngHsg+w+o+4+k+0+s+8+i+y+nsketgKWommWhkgAIXlrgu5ooCVqfIuVqqmI1vDLaudujKRJUsNvbuNv-uno1NAc-pxParTPtvAZbu9LdtfE9uNu9qiqLoDvtuDswfDugbvLMBjouHjr9sTvYGTtTvToQEzuzvkFzo2ufIAdoaQFwZLsaJDuLumsrvHofsftnpLGJtJqxtbtxo7t4e2LEZJs2sQfxv7T3tHqrsEekZnpMp4HnpCsWs1KUcYYgejPXsECEa3oZJ3qmlAD8vOPUcXqWpQBsZiu2O0a-qMYxKAA
[05:02:10] <Crash1hd> gah sorry
[05:02:10] <leduyquang753> What the hack dude.
[05:02:12] <Crash1hd> tinyurl.com/notsolong1
[05:02:14] <Crash1hd> yes haha
[05:02:16] <Crash1hd> why does it make such a long url haha
[05:02:24] <leduyquang753> You just pasted the whole code, just in encoded form.
[05:02:34] <blur> Style points
[05:02:40] <Crash1hd> oh geeze lol
[05:02:54] <Crash1hd> leduyquang753, sorry
[05:03:07] <Crash1hd> wish I could retract it lol
[05:03:09] <leduyquang753> Paste on a proper pastebin next time.
[05:03:27] *** Quits: peteyboy1 (~peteyboy1@95.169.232.161) (Ping timeout: 256 seconds)
[05:03:40] <Crash1hd> leduyquang753, pastebin works but is not runable. I will just remember to tinyurl it in the future :)
[05:03:58] *** Quits: rewrit3 (~rewrit3@user/rewrit3) (Remote host closed the connection)
[05:04:33] <Crash1hd> blur, poiqwepoiqwe so the reason mine does not work is that it does not work with subComponents the nested version does.
[05:04:35] *** Quits: wroathe (~wroathe@user/wroathe) (Ping timeout: 256 seconds)
[05:05:08] *** Quits: trevors_ (~trevors@c-65-96-171-157.hsd1.ma.comcast.net) (Quit: My MacBook has gone to sleep. ZZZzzz…)
[05:05:25] <Crash1hd> There first question to me was why so many Maps
[05:05:41] <Crash1hd> I thought it was for readability mostly
[05:07:39] <poiqwepoiqwe> so your receiving two datasets from what im assuming is a vehicle obd (or something similar)  ... first set is whether or not the second sets subcomponent values are "due for maintenance" ...
[05:08:07] <poiqwepoiqwe> you want to combine these two into a single set
[05:08:39] <Crash1hd> 100%
[05:08:54] <Crash1hd> basically, I just need to move the value from one to the other
[05:09:13] <Crash1hd> same for remaining
[05:09:42] <poiqwepoiqwe> can you cheat and assume that all subcomponents of set 1 exist in set 2
[05:10:22] <Crash1hd> what do you mean?
[05:11:58] *** Joins: x-x (~x@user/x-x)
[05:11:58] <Crash1hd> So what you will notice is that maintenanceSetupData has opItems and serviceItems they will always match up with the same in maintState what is different though is that there is a possibility at anytime for either the opItems or serviceItems to have subComponent containing more of the same.bsaically
[05:13:44] <theskillwithin> Crash1hd on typescriptlang play  if you go to publics, search for   Link Shortener by gillchristian   and check that
[05:13:57] <theskillwithin> plugins*
[05:16:00] <theskillwithin> Crash1hd https://imgur.com/a/5NMcnfi
[05:16:13] <Crash1hd> theskillwithin, thankyou thats awesome some really cool plugins too.
[05:16:58] <Crash1hd> theskillwithin, https://tsplay.dev/N7KBrN <-- awesome :) thanks again
[05:17:05] <theskillwithin> =]
[05:17:29] <Crash1hd> I turned on a few others too like prettier :)
[05:18:10] *** Joins: nomic (~nomic@185.192.69.69)
[05:18:28] <theskillwithin> as per your question tho,  I am a TS noob,  so I can't answer your question
[05:18:56] <sheetjs> TheSkillwithin has TS in the name
[05:19:04] <theskillwithin> haha
[05:19:17] <Crash1hd> lol all good, I find ts is basically js with structure :)
[05:19:59] <theskillwithin> you use 'any' a lot there, which is prob sac-religouse to some people
[05:20:45] <Crash1hd> very haha and to me as well, but I use it when testing
[05:20:46] *** Quits: junktext_ (~junktext@gateway/vpn/pia/junktext) (Ping timeout: 268 seconds)
[05:21:05] <Crash1hd> then go back and set it properly when I know it works and then validate I did not break it
[05:22:30] *** Quits: zeromule (~eric@2601:602:8d80:4e50:d1b3:9aed:31d:c2c9) (Ping timeout: 260 seconds)
[05:23:09] *** Quits: Tobbi (~Tobbi@2a02:8108:1240:48ec:d4a4:3a4e:9c43:a43) (Quit: My MacBook has gone to sleep. ZZZzzz…)
[05:25:04] *** Quits: thiras (~thiras@user/thiras) (Ping timeout: 268 seconds)
[05:25:25] <systemfault> "any" is a cancer ;)
[05:25:53] <Crash1hd> very much so and honestly defeats the point of typescript lol
[05:26:15] <poiqwepoiqwe> the nesting is the same between both sets at all levels the count of elements remains the same. you could covert to a list/array and pass over one set and use the current index to access the other ... perhaps this would be faster
[05:28:00] *** Joins: Crash1hd_ (~Crash1hd@S0106a84e3f475583.cg.shawcable.net)
[05:28:10] *** Quits: vysn (~vysn@user/vysn) (Ping timeout: 268 seconds)
[05:29:33] *** Quits: Crash1hd (~Crash1hd@64.56.153.179) (Killed (strontium.libera.chat (Nickname regained by services)))
[05:29:33] *** Crash1hd_ is now known as Crash1hd
[05:29:58] <Crash1hd> poiqwepoiqwe, is it the same?
[05:30:12] <Crash1hd> cause the one i loop 6 times this one looks like to max 2 times per?
[05:31:29] <systemfault> If your dataset is as small as in the example, even the slower way to do what you want would be enough
[05:31:56] <systemfault> If your data is much bigger... then you don't need "Map"s, you need a database ;)
[05:31:59] *** Joins: justsomeguy (~justsomeg@user/justsomeguy)
[05:32:00] <poiqwepoiqwe> apart from the deepest level its the same? but they are the values you want to merge
[05:32:15] *** Quits: Naan (~naan@user/naan) (Quit: Leaving)
[05:32:37] <Crash1hd> yes.
[05:32:59] <poiqwepoiqwe> so accessing an element in an array is O(1)
[05:33:04] <Crash1hd> poiqwepoiqwe, so am I best to just work with the code that works and rewrite in the finds where I could instead of the forEachs that are finds?
[05:33:37] <poiqwepoiqwe> thats what i meant by can you cheat
[05:33:55] <Crash1hd> yeah, ok that makes sense.
[05:34:28] <Crash1hd> I work with 2 other seniors one absolutely loves reduce and the other likes using Map so its hard to know which one I should use and when
[05:35:12] <poiqwepoiqwe> should be significantly faster ... as your dataset grows youll see increasing returns on performance
[05:35:38] *** Joins: CryptoDavid (uid14990@id-14990.uxbridge.irccloud.com)
[05:35:39] <Crash1hd> poiqwepoiqwe, sorry which one would be faster?
[05:35:46] <Crash1hd> the first one in the pic or the code one?
[05:36:13] <blur> I think he's talking about just walking over the data and using the index of one to check the other
[05:36:20] <poiqwepoiqwe> yup
[05:36:28] <blur> Yeah, I agree.  That would be way nicer
[05:36:42] <Crash1hd> Ahh
[05:36:48] <blur> Faster.  Easier to understand.
[05:38:18] <Crash1hd> hmm not sure I fully follow.
[05:38:50] *** Quits: i0e (~is0ke3@user/is0ke3) (Quit: WeeChat 3.3)
[05:38:53] <Crash1hd> how can I use the index of one if I cant guarantee the two are always going to be the same?
[05:41:13] *** Joins: wroathe (~wroathe@c-68-54-25-135.hsd1.mn.comcast.net)
[05:41:13] *** Quits: wroathe (~wroathe@c-68-54-25-135.hsd1.mn.comcast.net) (Changing host)
[05:41:13] *** Joins: wroathe (~wroathe@user/wroathe)
[05:41:19] <blur> Would it help if you flattened maintenanceSetupData into an array of items that look like { component, chanId, item, function }?
[05:41:52] <blur> Looks like you're keying off of "item"?
[05:41:58] <blur> and "component"
[05:42:08] *** Quits: leduyquang753 (~leduyquan@user/leduyquang753) (Quit: Lost terminal)
[05:42:20] *** Joins: i0e (~is0ke3@user/is0ke3)
[05:44:15] *** Quits: Crash1hd (~Crash1hd@S0106a84e3f475583.cg.shawcable.net) (Ping timeout: 256 seconds)
[05:46:01] *** Joins: Crash1hd (~Crash1hd@S0106a84e3f475583.cg.shawcable.net)
[05:46:11] *** Joins: JohnComputation2 (~JohnCompu@gateway/tor-sasl/johncomputation)
[05:47:23] *** Quits: fkm (~fkm@user/fkm) (Remote host closed the connection)
[05:47:34] *** Joins: fkm (~fkm@user/fkm)
[05:47:59] *** Quits: JohnComputation (~JohnCompu@gateway/tor-sasl/johncomputation) (Quit: ZNC 1.8.1 - https://znc.in :: Raspberry Pi 4 B)
[05:48:36] <poiqwepoiqwe> Crash1hd the two sets your provided ... the subComponents are the same order at the same depth. the operationalItems are also same depth, same order ...
[05:49:27] *** Quits: calcmandan (~quassel@user/calcmandan) (Quit: No Ping reply in 180 seconds.)
[05:50:15] *** Quits: Donitz (~Donitz@88-115-149-152.elisa-laajakaista.fi) (Remote host closed the connection)
[05:50:28] *** Quits: Crash1hd (~Crash1hd@S0106a84e3f475583.cg.shawcable.net) (Ping timeout: 256 seconds)
[05:50:45] *** Joins: calcmandan (~quassel@user/calcmandan)
[05:52:24] *** Joins: leduyquang753 (~leduyquan@user/leduyquang753)
[05:52:30] *** Joins: Gumshoe (~whoa@cpe-107-184-42-236.socal.res.rr.com)
[05:54:52] *** Joins: silly (~silly@user/silly)
[05:55:50] *** Joins: Donitz (~Donitz@88-115-149-152.elisa-laajakaista.fi)
[05:55:51] *** Quits: DPA (~DPA@75-128-16-94.static.cable.fcom.ch) (Quit: ZNC 1.8.2+deb2~bpo10+1 - https://znc.in)
[05:56:10] *** Quits: med (~median@user/median) (Ping timeout: 260 seconds)
[05:56:58] *** Joins: med (~median@user/median)
[05:57:06] *** Joins: Crash1hd (~Crash1hd@S0106a84e3f475583.cg.shawcable.net)
[05:57:15] *** Quits: Donitz (~Donitz@88-115-149-152.elisa-laajakaista.fi) (Remote host closed the connection)
[05:57:28] <Crash1hd> sorry was bumped from the net ugh lol
[05:57:39] <Crash1hd> anything said after my last message was missed
[05:57:56] *** Joins: zeromule (~eric@2601:602:8d80:4e50:d1b3:9aed:31d:c2c9)
[05:58:04] *** Joins: NoiseEee7 (~NoiseEee@178.128.153.219)
[05:58:17] <poiqwepoiqwe> Crash1hd the two sets your provided ... the subComponents are the same order at the same depth. the operationalItems are also same depth, same order ...
[05:58:29] <theskillwithin> ^ that was last thing heard
[05:58:57] <poiqwepoiqwe> perhaps the datasets you receive share this as an intrinsic property that you could take advantage of
[05:59:13] *** Joins: DPA (~DPA@75-128-16-94.static.cable.fcom.ch)
[05:59:29] <Crash1hd> Ahh so what you where saying is if they are always the same (I would have to check) then you could use the index of one on the other.
[05:59:54] *** Quits: NoiseEee (~NoiseEee@178.128.153.219) (Ping timeout: 260 seconds)
[05:59:59] <poiqwepoiqwe> yes ... and that you would see a massive performance gain if it holds true
[06:00:20] *** NoiseEee7 is now known as NoiseEee
[06:00:22] *** Quits: b0nn (~shane@user/b0nn) (Ping timeout: 260 seconds)
[06:00:31] <Crash1hd> if not then the nested hell is still best?
[06:00:34] *** Joins: sam_1 (~sam_1@87.51.251.118)
[06:01:10] *** Quits: DPA (~DPA@75-128-16-94.static.cable.fcom.ch) (Client Quit)
[06:01:18] <poiqwepoiqwe> if not the least amount of times you walk the better and assume that find, filter, map etc are a walk
[06:01:28] *** Joins: DPA (~DPA@2a05:41c0:b:db04::a3c:10d)
[06:01:39] <Crash1hd> :)
[06:01:50] *** Joins: b0nn (~shane@user/b0nn)
[06:02:04] *** Quits: x-x (~x@user/x-x) (Quit: leaving)
[06:02:15] *** Quits: WishBoy (~WishBoy@user/wishboy) ()
[06:02:27] <Crash1hd> thankyou all for the assist now to find out why my internet keeps dieing
[06:02:53] <theskillwithin> haha is that why ur nick starts with crash
[06:04:20] *** Joins: Hanii (~textual@2a00:23c5:c587:6d00:d558:b250:bcbb:4255)
[06:05:12] *** Quits: sam_1 (~sam_1@87.51.251.118) (Ping timeout: 260 seconds)
[06:05:43] *** Quits: Geronimo (~Geronimo@user/geronimo) (Quit: I am away)
[06:05:43] *** Joins: NoiseEee9 (~NoiseEee@178.128.153.219)
[06:06:15] *** Joins: Geronimo (~Geronimo@user/geronimo)
[06:07:22] *** Quits: NoiseEee (~NoiseEee@178.128.153.219) (Ping timeout: 260 seconds)
[06:07:22] *** NoiseEee9 is now known as NoiseEee
[06:07:55] <Crash1hd> theskillwithin, haha lol yep
[06:08:04] <blur> Crash1hd: this is what I mean.  You could flatten your objects into something like this: https://rentry.co/scwqf
[06:08:54] <Crash1hd> blur, ohh thankyou :) will have a look
[06:09:50] <Crash1hd> flatten modify then unflatten?
[06:10:21] <blur> yep
[06:10:56] *** Quits: Jaran (~mail@user/jaran) (Remote host closed the connection)
[06:11:05] <blur> sometimes it helps to transform the data before you work with it
[06:11:39] *** Joins: Jaran (~mail@p2e515106.dip0.t-ipconnect.de)
[06:11:39] *** Quits: Jaran (~mail@p2e515106.dip0.t-ipconnect.de) (Changing host)
[06:11:39] *** Joins: Jaran (~mail@user/jaran)
[06:12:06] <Crash1hd> ;) right. makes sense
[06:12:21] *** Quits: voltage_ (voltage@user/voltage) (Quit: Leaving)
[06:12:40] <blur> here's the code I used to do that. https://rentry.co/9i57q
[06:14:17] <Crash1hd> ;0 awesome very much appreciated
[06:15:14] <theskillwithin> blur the lack of indentation is cringe, why not just use a gist where u can have code highlighting
[06:15:15] *** Joins: phantomotap (~phantomot@c-68-35-28-201.hsd1.al.comcast.net)
[06:16:19] <blur> haha
[06:16:20] <blur> I know it's so bad
[06:16:33] <blur> I just searched for the 1st pastebin I could find
[06:17:20] <theskillwithin> i think gist has to be the best
[06:17:34] <theskillwithin> !paste
[06:17:35] <jellobot> theskillwithin, Please paste your code to a site like https://gist.github.com or https://dpaste.org/ (NOT pastebin.com or hastebin), or create a running example: see !fiddle. See also !badpastebin !hastebin !nopaste and !mcve
[06:17:57] <Crash1hd> still very much appreciated  all the same
[06:19:04] <theskillwithin> yes
[06:23:07] *** Quits: Drgonz0 (~Drgonz0@107-179-254-222.cpe.teksavvy.com) ()
[06:23:25] *** Quits: justsomeguy (~justsomeg@user/justsomeguy) (Quit: WeeChat 3.2)
[06:23:47] *** Parts: blur (~blur@76.92.20.41) (turning into a pumpkin)
[06:24:32] *** Joins: dpuerto (~dpuerto@136-27-83-52.cab.webpass.net)
[06:25:46] *** Joins: pulse_ (~pulse@user/pulse)
[06:26:14] *** Quits: phantomotap (~phantomot@c-68-35-28-201.hsd1.al.comcast.net) (Quit: Leaving)
[06:27:52] *** Quits: Crash1hd (~Crash1hd@S0106a84e3f475583.cg.shawcable.net) (Ping timeout: 256 seconds)
[06:29:01] *** Quits: pulse (~pulse@user/pulse) (Ping timeout: 256 seconds)
[06:29:13] *** Quits: dpuerto (~dpuerto@136-27-83-52.cab.webpass.net) (Ping timeout: 268 seconds)
[06:29:35] *** Quits: Ilyu (~quassel@166.215.82.79.rev.sfr.net) (Ping timeout: 256 seconds)
[06:29:49] *** Joins: Crash1hd (~Crash1hd@S0106a84e3f475583.cg.shawcable.net)
[06:30:02] *** Joins: Ilyu (~quassel@166.215.82.79.rev.sfr.net)
[06:30:04] *** pulse_ is now known as pulse
[06:32:49] *** Quits: silly (~silly@user/silly) (Read error: Connection reset by peer)
[06:33:25] *** Joins: silly (~silly@user/silly)
[06:34:09] *** Quits: i0e (~is0ke3@user/is0ke3) (Ping timeout: 268 seconds)
[06:35:26] *** Joins: Rockwood (~Rocky@user/rocky)
[06:35:46] *** Joins: i0e (~is0ke3@user/is0ke3)
[06:36:23] *** Quits: ckdCreations (~ckdCreati@147.55.133.142) (Read error: Connection reset by peer)
[06:36:38] *** Joins: ckdCreations (~ckdCreati@c-24-17-50-149.hsd1.wa.comcast.net)
[06:37:03] *** Joins: yaalon (~yaalon@cpe-70-121-160-255.satx.res.rr.com)
[06:39:22] *** Joins: Crash1hd_ (~Crash1hd@S0106a84e3f475583.cg.shawcable.net)
[06:41:22] *** Quits: Crash1hd (~Crash1hd@S0106a84e3f475583.cg.shawcable.net) (Ping timeout: 260 seconds)
[06:41:33] *** Quits: ckdCreations (~ckdCreati@c-24-17-50-149.hsd1.wa.comcast.net) (Ping timeout: 268 seconds)
[06:42:27] *** Joins: ckdCreations (~ckdCreati@147.55.133.134)
[06:44:46] *** Joins: poiqwepoiqwe_ (uid525840@id-525840.hampstead.irccloud.com)
[06:46:29] *** Quits: Crash1hd_ (~Crash1hd@S0106a84e3f475583.cg.shawcable.net) (Ping timeout: 268 seconds)
[06:52:38] *** Quits: zeromule (~eric@2601:602:8d80:4e50:d1b3:9aed:31d:c2c9) (Ping timeout: 268 seconds)
[06:58:51] *** Quits: yaalon (~yaalon@cpe-70-121-160-255.satx.res.rr.com) ()
[07:01:26] *** Joins: Crash1hd (~Crash1hd@S0106a84e3f475583.cg.shawcable.net)
[07:05:33] *** Quits: tar_xvf (~tar_xvf@ec2-3-136-243-174.us-east-2.compute.amazonaws.com) (Quit: ZNC 1.7.5+deb4 - https://znc.in)
[07:05:51] *** Joins: tar_xvf (~tar_xvf@ec2-3-136-243-174.us-east-2.compute.amazonaws.com)
[07:12:13] *** Quits: nomic (~nomic@185.192.69.69) (Quit: Leaving)
[07:14:07] *** Joins: tar_xvf_ (~tar_xvf@ec2-3-136-243-174.us-east-2.compute.amazonaws.com)
[07:14:14] *** Quits: tar_xvf (~tar_xvf@ec2-3-136-243-174.us-east-2.compute.amazonaws.com) (Ping timeout: 268 seconds)
[07:14:56] *** Quits: wroathe (~wroathe@user/wroathe) (Quit: Lost terminal)
[07:17:31] *** Joins: gggpkm (~gggpkm@111.63.14.119)
[07:19:35] *** Quits: audiobirb (~audio@user/audio) (Ping timeout: 264 seconds)
[07:22:59] *** Joins: zeromule (~eric@2601:602:8d80:4e50:d1b3:9aed:31d:c2c9)
[07:24:06] *** Quits: Crash1hd (~Crash1hd@S0106a84e3f475583.cg.shawcable.net) (Ping timeout: 268 seconds)
[07:31:32] *** Joins: Crash1hd (~Crash1hd@S0106a84e3f475583.cg.shawcable.net)
[07:37:03] *** Joins: Crash1hd_ (~Crash1hd@S0106a84e3f475583.cg.shawcable.net)
[07:38:09] *** Quits: i0e (~is0ke3@user/is0ke3) (Ping timeout: 256 seconds)
[07:39:31] *** Quits: Crash1hd (~Crash1hd@S0106a84e3f475583.cg.shawcable.net) (Ping timeout: 268 seconds)
[07:39:31] *** Quits: gggpkm (~gggpkm@111.63.14.119) (Ping timeout: 268 seconds)
[07:40:08] *** Joins: i0e (~is0ke3@user/is0ke3)
[07:42:47] *** Joins: kakashiAL (~kakashi@ip-37-201-199-21.hsi13.unitymediagroup.de)
[07:43:53] *** Joins: tar_xvf (~tar_xvf@ec2-3-136-243-174.us-east-2.compute.amazonaws.com)
[07:44:27] *** Quits: tar_xvf_ (~tar_xvf@ec2-3-136-243-174.us-east-2.compute.amazonaws.com) (Ping timeout: 268 seconds)
[07:56:12] *** Joins: tar_xvf_ (~tar_xvf@ec2-3-136-243-174.us-east-2.compute.amazonaws.com)
[07:56:30] *** Joins: Crash1hd (~Crash1hd@S0106a84e3f475583.cg.shawcable.net)
[07:56:47] *** Quits: tar_xvf (~tar_xvf@ec2-3-136-243-174.us-east-2.compute.amazonaws.com) (Ping timeout: 268 seconds)
[07:56:51] *** Quits: Crash1hd_ (~Crash1hd@S0106a84e3f475583.cg.shawcable.net) (Ping timeout: 256 seconds)
[08:02:06] *** Joins: dimi1947 (~dimi1947@2a02:1388:2082:ab01:a9f5:b181:b922:6a92)
[08:03:03] <dimi1947> amy help on where setObjectPrototype differs from extends?
[08:06:38] *** Quits: zeromule (~eric@2601:602:8d80:4e50:d1b3:9aed:31d:c2c9) (Ping timeout: 268 seconds)
[08:09:35] *** Quits: zebrag (~chris@user/zebrag) (Quit: Konversation terminated!)
[08:10:47] <Rockwood> theskillwithin, o/
[08:13:21] *** Joins: Crash1hd_ (~Crash1hd@S0106a84e3f475583.cg.shawcable.net)
[08:16:30] *** Quits: Crash1hd (~Crash1hd@S0106a84e3f475583.cg.shawcable.net) (Ping timeout: 268 seconds)
[08:19:35] *** Quits: Crash1hd_ (~Crash1hd@S0106a84e3f475583.cg.shawcable.net) (Ping timeout: 268 seconds)
[08:21:24] *** Joins: Crash1hd (~Crash1hd@S0106a84e3f475583.cg.shawcable.net)
[08:22:04] *** Quits: machinehum (~machinehu@2604:3d08:937e:d600::4da2) (Ping timeout: 268 seconds)
[08:23:11] *** Joins: Crash1hd_ (~Crash1hd@64.56.153.179)
[08:23:41] *** Joins: machinehum (~machinehu@193.19.109.13)
[08:26:24] *** Joins: zeromule (~eric@2601:602:8d80:4e50:d1b3:9aed:31d:c2c9)
[08:26:59] *** Quits: Crash1hd (~Crash1hd@S0106a84e3f475583.cg.shawcable.net) (Ping timeout: 268 seconds)
[08:28:44] *** Joins: stewie925 (~stewie925@2600:1702:44f0:35c0:5cec:41b3:fa14:d1ad)
[08:43:56] *** Joins: EdFletcher (~ubuntu@user/edfletcher)
[08:44:44] *** Quits: de-facto (~de-facto@user/de-facto) (Remote host closed the connection)
[08:45:08] *** Joins: de-facto (~de-facto@user/de-facto)
[08:49:20] *** Joins: mexen (uid495612@user/mexen)
[08:50:06] *** Quits: The_Blode (~Blode@user/the-blode/x-7164444) (Ping timeout: 256 seconds)
[08:52:36] *** Crash1hd_ is now known as Crash1hd
[08:55:21] *** Quits: derjanni (~textual@ip-88-153-100-48.hsi04.unitymediagroup.de) (Ping timeout: 268 seconds)
[08:56:47] *** Joins: comatory (~ondrejsyn@217.11.241.69)
[08:57:42] *** Quits: Kdev (~KDev@cpe-98-10-64-75.rochester.res.rr.com) (Ping timeout: 260 seconds)
[08:58:20] *** Quits: Rockwood (~Rocky@user/rocky) (Quit: The Time is Over)
[09:00:12] <dimi1947> Ι think I am close getting it...it seemms extend affects "prototype" while object.setPrototypeOf affects [[prototype]]
[09:00:46] <ljharb> dimi1947: `.prototype` is just a normal property on non-functions
[09:00:48] *** Joins: dpuerto (~dpuerto@136-27-83-52.cab.webpass.net)
[09:01:01] <ljharb> dimi1947: i missed your original question tho
[09:01:09] <ljharb> dimi1947: there's no standard "extends" so i'm not sure what you mean
[09:01:21] <dimi1947> give me second
[09:01:27] *** Quits: comatory (~ondrejsyn@217.11.241.69) (Ping timeout: 256 seconds)
[09:01:52] *** Joins: sam_1 (~sam_1@87.51.251.118)
[09:01:55] <dimi1947> https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Classes/extends
[09:02:53] <ljharb> dimi1947: that's `class extends` syntax, which is very different
[09:03:20] <ljharb> dimi1947: `class Parent extends Child` sets the `[[Prototype]]` of the constructor function, and also `.prototype` of it, and also determines the `[[Prototype]]` of the instances
[09:03:58] <ljharb> dimi1947: if you're doing inheritance, `class extends` is the only way you should do it
[09:04:28] *** Joins: The_Blode (~Blode@user/the-blode/x-7164444)
[09:05:24] *** Quits: dpuerto (~dpuerto@136-27-83-52.cab.webpass.net) (Ping timeout: 256 seconds)
[09:06:30] *** Quits: sam_1 (~sam_1@87.51.251.118) (Ping timeout: 260 seconds)
[09:07:22] <dimi1947> object.setPrototypeOf also sets the [[prototype]] of a constructor function....is the diff between them that the latter DOES NOT SFFECT .prototype?
[09:08:19] *** Quits: Ilyu (~quassel@166.215.82.79.rev.sfr.net) (Ping timeout: 268 seconds)
[09:10:28] <ljharb> dimi1947: yes
[09:10:38] <dimi1947> hmmm...
[09:10:42] <ljharb> dimi1947: also tho, only `class extends` and `super()` will set up internal slots and private fields properly.
[09:12:02] <dimi1947> i want to work some examples to see these details....will get back if necessary..thx
[09:14:28] *** Joins: dpuerto (~dpuerto@136-27-83-52.cab.webpass.net)
[09:16:46] *** Joins: Crash1hd_ (~Crash1hd@S0106a84e3f475583.cg.shawcable.net)
[09:20:43] *** Quits: Crash1hd (~Crash1hd@64.56.153.179) (Ping timeout: 256 seconds)
[09:21:53] *** Quits: tar_xvf_ (~tar_xvf@ec2-3-136-243-174.us-east-2.compute.amazonaws.com) (Ping timeout: 268 seconds)
[09:23:30] *** Joins: onizu (uid373383@2a03:5180:f:5::5:b287)
[09:26:46] *** Joins: tar_xvf (~tar_xvf@ec2-3-136-243-174.us-east-2.compute.amazonaws.com)
[09:32:41] *** Quits: CryptoDavid (uid14990@id-14990.uxbridge.irccloud.com) (Quit: Connection closed for inactivity)
[09:35:12] <onizu> google chrome's icons have become red in colour when I opened it today - anyone else facing this?
[09:36:05] <theskillwithin> only happens once a month
[09:36:15] <tar_xvf> nice
[09:36:38] <ljharb> theskillwithin: inapprops
[09:36:43] <ljharb> onizu: no
[09:37:00] <onizu> ok
[09:37:17] <onizu> wonder if chrome's compromised
[09:38:30] <ljharb> lol no
[09:38:32] <theskillwithin> onizu could you take a screenshot?
[09:38:37] <ljharb> if someone compromised chrome they wouldn't just discolor an icon
[09:39:07] <theskillwithin> onizu what OS are you using?
[09:39:18] <theskillwithin> onizu when was the last time you updated chrome?
[09:39:19] <onizu> screenshot: https://pasteboard.co/5VAnjetEls8J.png
[09:39:46] <theskillwithin> haha
[09:40:03] <onizu> screenshot 2: https://pasteboard.co/1j2wOjMpmDCK.png
[09:40:14] <theskillwithin> i misread and thought you said icon, but you said icons
[09:40:19] <onizu> windows 10
[09:40:24] <theskillwithin> ya thats just theme your using on chrome
[09:40:44] <onizu> but I never installed such a theme and never chose "red"
[09:41:14] *** Quits: Sven_vB (~sven@user/sven-vb/x-2094958) (Remote host closed the connection)
[09:41:25] <theskillwithin> hmm, not sure could be windows setting
[09:41:38] <onizu> will check the installed themes though
[09:41:51] <theskillwithin> i use mac so i wouldn't know anything about windows themeing of apps
[09:42:19] *** Joins: Sven_vB (~sven@user/sven-vb/x-2094958)
[09:43:04] <theskillwithin> the taking of a screenshot rules out it being a problem with your monitor, so it has to be some sort of windows or chrome setting
[09:44:07] <onizu> it's only in chrome - so not a windows setting. I checked and there's no theme installed in chrome ...
[09:44:25] *** Quits: de-facto (~de-facto@user/de-facto) (Remote host closed the connection)
[09:44:33] <theskillwithin> do you use a chrome profile?
[09:44:53] *** Joins: de-facto (~de-facto@user/de-facto)
[09:45:42] <theskillwithin> maybe an extension
[09:46:35] *** Quits: Samian (~s@user/samian) (Ping timeout: 264 seconds)
[09:46:51] <theskillwithin> or some sort of high contrast thing got applied
[09:47:34] <onizu> yes, I signed into to chrome (if that's using a profile)
[09:48:16] <onizu> just to check - I installed a new theme and then did a reset - the icons are still red
[09:48:41] <theskillwithin> odd
[09:49:01] <theskillwithin> icons in other browsers like edge or firefox still the same?
[09:50:43] <theskillwithin> might want to try re-installing chrome
[09:51:44] *** Joins: Crash1hd__ (~Crash1hd@64.56.153.179)
[09:54:36] <onizu> yes, in other browsers (and apps) it's all fine
[09:55:11] *** Quits: Crash1hd_ (~Crash1hd@S0106a84e3f475583.cg.shawcable.net) (Ping timeout: 268 seconds)
[09:55:45] <theskillwithin> uninstall and reinstall
[09:56:00] <onizu> yep
[09:56:13] <theskillwithin> uv tried restarting of course?
[09:56:24] <onizu> no
[09:56:41] <theskillwithin> well try that,  then try uninstall and reinstall of chrome
[09:56:43] <onizu> I tried logout/login chrome profile - didn't help
[09:56:51] <onizu> yeah, will do that
[09:59:36] <theskillwithin> its super rare, but shit from space can flip bits, and cause problems
[10:01:27] <theskillwithin> my guess tho is, after you reset your computer will be back to normal
[10:04:59] *** Joins: leptone (~leptone@2603-8000-b203-0038-096e-1757-66a6-262e.res6.spectrum.com)
[10:08:58] <onizu> Restart didn't help
[10:09:23] <onizu> But I understood what was going on:   It's the developer edition of google chrome that's giving red icons now https://www.google.com/chrome/dev/
[10:09:41] <onizu> I installed the normal google chrome and it showed the icons fine
[10:09:57] <onizu> then again tried dev edition and it gives red icons
[10:11:14] <theskillwithin> odd I didn't know about that
[10:11:45] <theskillwithin> I have chrome canary as well installed, didn't know about chrome dev
[10:12:59] <onizu> any difference in UI in canary?
[10:13:29] <theskillwithin> no, just the icon for chrome canary is gold
[10:13:40] <onizu> yea
[10:13:47] <onizu> try installed chrome-dev
[10:13:50] <onizu> installing*
[10:14:34] <theskillwithin> yep
[10:14:39] *** Joins: ThePhilgrim (~ThePhilgr@151.41.8.149)
[10:14:48] <theskillwithin> icons are red
[10:16:15] <onizu> ok
[10:16:33] <onizu> it happened today :) was all normal earlier
[10:17:01] <theskillwithin> i guess firefox has a developer version, why not chrome.  but dang i never heard of this before in chrome
[10:17:30] <ThePhilgrim> Hi, I have an array called "storyWords", and another array called "unnecessaryWords". I am trying to used filter() to make a new array called "betterWords", which includes all words from "storyWords" that are not in "unnecessaryWords". However, I am getting back an empty array. Please can you explain why following does not work as intended: let betterWords = storyWords.filter(word => !word in unnecessaryWords).
[10:17:33] <ThePhilgrim> Thank you!
[10:17:42] <onizu> I don't like the red icons though.. very high contrast
[10:18:02] <onizu> and looks "erroneous"
[10:18:15] <theskillwithin> just use regular chrome instead of chrome dev then
[10:19:53] *** Quits: shoky_ (uuuggg@141.226.193.67) ()
[10:20:39] <Svitkona> ThePhilgrim, you can't use in like that
[10:20:44] <Svitkona> n> ("one" in ["one"])
[10:20:45] <jellobot> (okay) false
[10:21:08] <ThePhilgrim> I come from Python, where you can do "if 'foo' not in bar"
[10:21:36] <ThePhilgrim> How is in used in JS?
[10:22:21] <Svitkona> it's an operator that checks if an object has a key matching the 2nd operand
[10:22:34] <theskillwithin> ThePhilgrim https://jsfiddle.net/theskillwithin/vmL9q3jr/
[10:22:47] <Svitkona> n> ("one" in { one: "asdf", two: "asdf" })
[10:22:48] <jellobot> (okay) true
[10:23:06] <ThePhilgrim> Ah, in is only used for objects?
[10:23:34] *** Quits: zuQe8 (~zuQe8@cpc105068-sgyl40-2-0-cust196.18-2.cable.virginm.net) (Ping timeout: 260 seconds)
[10:24:31] <ThePhilgrim> theskillwithin, Thanks! Yeah, I know that I can use includes(). Found it on MDN. I just wanted to understand how to use "!" an "in" in JS
[10:27:07] *** Joins: gaqwas (~john@dynamic-095-118-130-057.95.118.pool.telefonica.de)
[10:28:21] <theskillwithin> using 'in' isn't really commonly used.  so using ! with in, idk if theres a satisfying answer
[10:29:51] *** Joins: derjanni (~textual@ip-88-153-100-48.hsi04.unitymediagroup.de)
[10:30:19] <theskillwithin> syntactically it just doesn't work with !
[10:30:30] <theskillwithin> i think
[10:36:26] *** Crash1hd__ is now known as Crash1hd
[10:36:42] *** Quits: stewie925 (~stewie925@2600:1702:44f0:35c0:5cec:41b3:fa14:d1ad) (Ping timeout: 256 seconds)
[10:38:40] *** Quits: Gumshoe (~whoa@cpe-107-184-42-236.socal.res.rr.com) (Quit: My MacBook has gone to sleep. ZZZzzz…)
[10:40:29] <theskillwithin> ThePhilgrim i guess my advice boils down to, forget about using 'in' in js.
[10:40:39] <ThePhilgrim> Got it! Thanks!
[10:41:02] *** Joins: zuQe8 (~zuQe8@cpc105068-sgyl40-2-0-cust196.18-2.cable.virginm.net)
[10:43:22] *** Joins: comatory (~ondrejsyn@217.11.241.69)
[10:50:38] *** Quits: Hexmind (~Hexmind@modemcable049.25-131-66.mc.videotron.ca) (Quit: Leaving)
[10:51:09] *** Quits: vqueiroz (uid340368@id-340368.hampstead.irccloud.com) (Quit: Connection closed for inactivity)
[10:58:43] *** Joins: Samian (~s@user/samian)
[11:00:38] *** Joins: ZeroWalker (~ZeroWalke@2001:9b1:28f8:8300:a8e8:69ff:37f6:228c)
[11:19:55] *** Joins: vysn (~vysn@user/vysn)
[11:25:43] *** Joins: Tobbi (~Tobbi@2a02:8108:1240:48ec:29e4:7e50:3693:f0d7)
[11:32:21] *** Joins: szutt (~szutt@116.37.2.145)
[11:35:14] *** Joins: hendursa1 (~weechat@user/hendursaga)
[11:38:45] *** Quits: hendursaga (~weechat@user/hendursaga) (Ping timeout: 276 seconds)
[11:40:43] *** Joins: jazzy2 (~jaziz@user/jaziz)
[11:41:20] *** Joins: Booster2ooo (~Booster2o@user/booster2ooo)
[11:42:01] *** Joins: Duikb00t (~wardkenne@d54c71612.static.telenet.be)
[11:42:02] <Duikb00t> o/
[11:42:23] *** Quits: mat001 (~mat001@c-71-202-208-251.hsd1.ca.comcast.net) (Ping timeout: 256 seconds)
[11:42:29] *** Quits: Crash1hd (~Crash1hd@64.56.153.179) (Ping timeout: 268 seconds)
[11:42:30] <Duikb00t> Are there people here working on their js component starting from a 'Storybook' thing?
[11:43:35] *** Quits: jazzy (~jaziz@user/jaziz) (Ping timeout: 264 seconds)
[11:43:41] *** jazzy2 is now known as jazzy
[11:44:03] *** Joins: DnzAtWrk (~DnzAtWrk@mobile-access-56734f-209.dhcp.inet.fi)
[11:45:42] <stenno\OK> spent 10 minutes troubleshooting why vscode couldn't connect to my remote vm
[11:45:54] <stenno\OK> turns out my remote vm is not running
[11:45:57] <stenno\OK> that explains it
[11:49:30] *** Quits: hendursa1 (~weechat@user/hendursaga) (Remote host closed the connection)
[11:49:59] *** Joins: hendursa1 (~weechat@user/hendursaga)
[11:50:19] *** Joins: Photic (~Photic@user/photic)
[11:51:55] *** Quits: dimi1947 (~dimi1947@2a02:1388:2082:ab01:a9f5:b181:b922:6a92) (Quit: Leaving)
[11:53:37] *** Quits: spronkey (~spronkey@2406:e000:68a4:fa01:f5ac:4c05:c62e:3266) (Quit: you are feeeling very sleeeeeepyy......)
[11:55:28] <Photic> Is there a lib for modular arithmetic? iirc Diffie-Hellman key exchange protocol would have the right set of math
[11:55:44] *** Joins: interop_madness (~interop_m@user/interop-madness/x-0950004)
[11:57:20] <stenno\OK> not sure what 'modular arithmetic' entails but you can use modulo just fine
[11:57:50] <Photic> it entails doing 3 to the power of massive numbers mod large_prime_number
[11:58:02] <stenno\OK> lets try!
[11:58:33] <Photic> utilizes Fermat's little theorem (iirc) to resolve the power in a reasonable time
[11:59:02] <stenno\OK> n> 3n**20000000n % (2n**31n-1n)
[11:59:05] <jellobot> (okay) 601608143n
[11:59:14] <stenno\OK> oh hm
[11:59:33] *** Quits: duds- (~duds-@gateway/tor-sasl/duds) (Ping timeout: 276 seconds)
[12:00:12] <stenno\OK> i guess % is not modulo but remainder
[12:00:26] <Photic> isn't it the same
[12:00:37] <stenno\OK> no
[12:00:51] <stenno\OK> why do you need to implement diffie-hellmann, out of interest?
[12:01:36] *** Quits: gaqwas (~john@dynamic-095-118-130-057.95.118.pool.telefonica.de) (Ping timeout: 268 seconds)
[12:02:04] <stenno\OK> Photic: https://stackoverflow.com/questions/13683563/whats-the-difference-between-mod-and-remainder
[12:02:38] <Photic> oh right, the negative numbers play differently
[12:02:50] <stenno\OK> i guess in this case its the same because you are dealing with positive numbers
[12:03:04] <stenno\OK> but idk if javascript is smart about it
[12:03:09] <stenno\OK> probably an implementation detail?
[12:03:26] *** Quits: jazzy (~jaziz@user/jaziz) (Ping timeout: 268 seconds)
[12:03:49] <stenno\OK> the line above is what i can give you out of the box
[12:03:56] <stenno\OK> anything else would need more research
[12:04:31] <stenno\OK> if you really want backend performance with number juggling, maybe js is not the best choice
[12:06:40] <Photic> As for why: I was trying to do something with Shamir's three-pass protocol (couldn't find a proper lib for this), but now that I think of it, DH does the math with a generator g instead of message m
[12:08:26] <stenno\OK> isn't g basically just a long number?
[12:08:37] <hassoon> 'morning
[12:08:50] <Photic> g can be a very short one
[12:08:59] <stenno\OK> oh well
[12:09:06] <stenno\OK> oh right its the '3' in your example right
[12:09:07] *** Joins: re (~user@user/re)
[12:09:46] <Photic> Yeah
[12:16:29] *** Quits: skillbot (~skillbot@user/skillbot) (Remote host closed the connection)
[12:16:36] *** Joins: skillbot1 (~skillbot@li1200-69.members.linode.com)
[12:16:36] *** Quits: skillbot1 (~skillbot@li1200-69.members.linode.com) (Changing host)
[12:16:36] *** Joins: skillbot1 (~skillbot@user/skillbot)
[12:16:36] *** ChanServ sets mode: +v skillbot1
[12:19:18] *** Quits: jellobot (~jellobot@li334-26.members.linode.com) (Remote host closed the connection)
[12:19:23] *** Joins: jellobot1 (~jellobot@li334-26.members.linode.com)
[12:19:23] *** ChanServ sets mode: +v jellobot1
[12:19:23] *** jellobot1 is now known as jellobot
[12:27:43] *** Quits: dpuerto (~dpuerto@136-27-83-52.cab.webpass.net) (Remote host closed the connection)
[12:28:18] *** Quits: shokohsc8 (~shokohsc@161.88.195.77.rev.sfr.net) (Read error: Connection reset by peer)
[12:29:38] *** Joins: shokohsc8 (~shokohsc@161.88.195.77.rev.sfr.net)
[12:38:50] *** Quits: leptone (~leptone@2603-8000-b203-0038-096e-1757-66a6-262e.res6.spectrum.com) (Remote host closed the connection)
[12:40:44] *** Joins: earendel (uid498179@user/earendel)
[12:41:40] *** Quits: sickdyd (~sickd@FL1-122-135-172-49.tky.mesh.ad.jp) (Ping timeout: 268 seconds)
[12:43:58] *** Quits: zeromule (~eric@2601:602:8d80:4e50:d1b3:9aed:31d:c2c9) (Ping timeout: 260 seconds)
[12:49:41] *** Joins: salad (~cucumber@86.121.64.41)
[12:51:23] <poiqwepoiqwe> why is js so shit when it comes to dealing with numbers ... like how can something gain so much traction but fail so hard with something that should be such a breeze. i get there are libraries to make things more kosher but without the aid of lib nuance its just plain shite. im doing a simple compounding interest calc that calcs the rate based on
[12:51:23] <poiqwepoiqwe> compounding interval, time and principal + interest and my lower bound results in an ever so slightly negative rate ><
[12:51:37] *** Joins: vdamewood (~vdamewood@fedora/vdamewood)
[12:52:50] *** Quits: mexen (uid495612@user/mexen) (Ping timeout: 260 seconds)
[12:53:23] *** Quits: machinehum (~machinehu@193.19.109.13) (Ping timeout: 268 seconds)
[12:54:07] *** Joins: machinehum (~machinehu@193.19.109.13)
[12:54:19] *** Joins: mexen (uid495612@user/mexen)
[12:54:42] *** Quits: onizu (uid373383@2a03:5180:f:5::5:b287) (Ping timeout: 260 seconds)
[12:55:31] *** Quits: austincheney (~austinche@2600:1700:1220:76c8:ac3b:abe7:9928:835c) (Read error: Connection reset by peer)
[12:55:40] *** Joins: austincheney (~austinche@2600:1700:1220:76c8:f982:507a:283b:3df9)
[12:56:17] *** Quits: trewq_ (~trewq@li70-4.members.linode.com) (Ping timeout: 265 seconds)
[12:56:29] *** Joins: trewq (~trewq@li70-4.members.linode.com)
[12:56:46] *** Joins: ruel (~ruel@150.136.4.160)
[12:56:54] *** Quits: sheetjs (~sheetjs@user/sheetjs) (Remote host closed the connection)
[12:57:08] *** Quits: lvlinux (~ruel@150.136.4.160) (Ping timeout: 246 seconds)
[12:57:15] *** Quits: flameboi (dgw@user/flameboi) (Ping timeout: 265 seconds)
[12:57:35] *** Joins: flameboi (dgw@user/flameboi)
[12:57:58] *** Quits: lind{at}yahoo (uid486956@id-486956.tinside.irccloud.com) (Ping timeout: 260 seconds)
[12:58:07] <eqw> what is the simplest way to raise an exception? (well, except creating it manually) I tried console.log(1/0) but my chromium just printed "Infinity"
[12:58:16] *** Joins: onizu (uid373383@id-373383.uxbridge.irccloud.com)
[12:59:37] <hamess> throw?
[13:00:01] *** Joins: lind{at}yahoo (uid486956@id-486956.tinside.irccloud.com)
[13:00:37] <stenno\OK> n> throw
[13:00:39] <jellobot> (fail) SyntaxError: Unexpected end of input
[13:00:42] <stenno\OK> n> throw 'foo'
[13:00:43] <jellobot> (fail) foo
[13:00:46] *** Joins: gggp (~gggp@111-251-142-222.dynamic-ip.hinet.net)
[13:01:03] <stenno\OK> eqw: 1/0 is +Infinity as per IEEE 754
[13:01:16] *** Quits: gggp (~gggp@111-251-142-222.dynamic-ip.hinet.net) (Client Quit)
[13:03:09] <theskillwithin> n> 1/0
[13:03:10] <jellobot> (okay) Infinity
[13:03:39] *** Joins: sam_1 (~sam_1@87.51.251.118)
[13:04:08] <stenno\OK> throw is the best way as hamess suggested
[13:07:00] <theskillwithin> throw Object.assign(new Error(message), { data: { yayyyyy } })
[13:08:09] <theskillwithin> “Too bad! Same old story! Once you’ve finished building your house you notice you’ve accidentally learned something that you really should have known—before you started.”  – Friedrich Nietzsche, Beyond Good and Evil
[13:11:05] *** Joins: zeromule (~eric@2601:602:8d80:4e50:d1b3:9aed:31d:c2c9)
[13:12:31] *** Quits: sam_1 (~sam_1@87.51.251.118) (Ping timeout: 268 seconds)
[13:13:56] *** Quits: DnzAtWrk (~DnzAtWrk@mobile-access-56734f-209.dhcp.inet.fi) (Read error: Connection reset by peer)
[13:14:46] *** Quits: pulse (~pulse@user/pulse) (Ping timeout: 260 seconds)
[13:14:50] *** Quits: shuvarek (~shuvarek@staticline-31-182-169-28.toya.net.pl) (Remote host closed the connection)
[13:15:02] *** Joins: DnzAtWrk (~DnzAtWrk@mobile-access-567363-170.dhcp.inet.fi)
[13:16:21] *** Quits: vdamewood (~vdamewood@fedora/vdamewood) (Quit: My MacBook Pro has gone to sleep. ZZZzzz…)
[13:16:50] *** Quits: Codaraxis (~Codaraxis@user/codaraxis) (Ping timeout: 268 seconds)
[13:24:34] *** Quits: zeromule (~eric@2601:602:8d80:4e50:d1b3:9aed:31d:c2c9) (Ping timeout: 260 seconds)
[13:25:27] *** Quits: quazimodo (~quazimodo@n1-40-235-47.bla1.nsw.optusnet.com.au) (Ping timeout: 268 seconds)
[13:27:00] *** Joins: kogepan (~kogepan@user/kogepan)
[13:30:02] *** Joins: shuvarek (~shuvarek@staticline-31-182-169-28.toya.net.pl)
[13:31:10] *** Joins: nomic (~nomic@185.192.69.211)
[13:32:50] *** Joins: peteyboy1 (~peteyboy1@95.169.232.161)
[13:36:34] <hassoon> what does ! do after the name of a class property definition ? such as heroes$!: Observable<Hero[]>  ?
[13:36:44] <hassoon> later in the code heroes$ is used
[13:36:52] <hassoon> when i remove !, typescript reports that Property 'heroes$' has no initializer and is not definitely assigned in the constructor
[13:38:10] *** Quits: monoxane (~monoxane@user/monoxane) (Remote host closed the connection)
[13:40:09] *** Joins: monoxane (~monoxane@user/monoxane)
[13:42:45] *** Joins: sickdyd (~sickd@120.51.82.69.ap.gmobb-fix.jp)
[13:43:37] *** Quits: dsrt^ (~dsrt@wsip-98-188-242-6.mc.at.cox.net) (Remote host closed the connection)
[13:44:12] *** Joins: gggp (~gggp@111-251-142-222.dynamic-ip.hinet.net)
[13:44:13] *** Quits: gggp (~gggp@111-251-142-222.dynamic-ip.hinet.net) (Client Quit)
[13:45:49] *** Quits: ThePhilgrim (~ThePhilgr@151.41.8.149) (Ping timeout: 268 seconds)
[13:47:37] *** Quits: sickdyd (~sickd@120.51.82.69.ap.gmobb-fix.jp) (Ping timeout: 256 seconds)
[13:49:29] *** Quits: derjanni (~textual@ip-88-153-100-48.hsi04.unitymediagroup.de) (Read error: Connection reset by peer)
[13:50:12] *** Quits: wildo (~lain6141@119.224.72.222) (Quit: leaving)
[13:51:55] *** Joins: zeromule (~eric@2601:602:8d80:4e50:d1b3:9aed:31d:c2c9)
[13:52:46] *** Joins: bluehoney (~bluehoney@cpe-75-81-204-188.mi.res.rr.com)
[13:54:40] *** Joins: duds- (~duds-@gateway/tor-sasl/duds)
[13:59:58] *** Quits: nomic (~nomic@185.192.69.211) (Quit: Leaving)
[14:00:14] *** Joins: sam_1 (~sam_1@87.51.251.118)
[14:04:56] *** Quits: sam_1 (~sam_1@87.51.251.118) (Ping timeout: 260 seconds)
[14:05:59] <Cork> hassoon: that is a typescript specific syntax
[14:10:17] <hassoon> Cork: seems like it tells typescript to accept undefined/nullvalues as well
[14:10:25] *** Quits: incognito (~relativit@user/incognito) (Quit: Going offline, see ya! (www.adiirc.com))
[14:10:25] <hassoon> * undefined/null values *
[14:11:00] <Cork> => #typescript
[14:13:21] <hassoon> Cork: meh
[14:13:42] <efdee> hassoon: it does pretty much what you describe. you say it's a non-undefined value (Observable<Hero[]>), typescript says "but you're not initializing it so it COULD be undefined), and then your ! tells typescript "shhhhhhhht everything's going to be all right, just drink this"
[14:14:25] <hassoon> efdee: ya ahah
[14:14:37] <hassoon> efdee: i used to do whatever as type, until i saw it
[14:15:15] <efdee> it's a dangerous tool though because it basically says _you_ will ensure that it's not undefined
[14:15:54] <hassoon> ya pretty good for small use cases where you're totally sure of your data
[14:16:39] *** Quits: zeromule (~eric@2601:602:8d80:4e50:d1b3:9aed:31d:c2c9) (Ping timeout: 268 seconds)
[14:17:28] *** Joins: incognito (~relativit@user/incognito)
[14:17:43] <since_> https://github.com/advisories/GHSA-73qr-pfmq-6rp8
[14:19:59] *** Quits: whatsupdoc (uid509081@id-509081.hampstead.irccloud.com) (Quit: Connection closed for inactivity)
[14:20:20] *** Joins: gitesh (uid423739@id-423739.ilkley.irccloud.com)
[14:27:17] *** Joins: Drgonz0 (~Drgonz0@107-179-254-222.cpe.teksavvy.com)
[14:30:50] *** Quits: bluehoney (~bluehoney@cpe-75-81-204-188.mi.res.rr.com) (Ping timeout: 260 seconds)
[14:32:36] *** Joins: jim87 (~quassel@93.55.249.30)
[14:32:36] *** Quits: jim87 (~quassel@93.55.249.30) (Client Quit)
[14:33:36] <silly> i feel like i'm back in 1999 and using a windows pc
[14:33:52] <silly> (╯°□°)╯︵ ┻━┻
[14:35:14] *** Joins: cthulchu (~Cthulchu@193.194.107.250)
[14:35:14] *** Joins: cthulchu_ (~Cthulchu@193.194.107.250)
[14:38:05] <prussian> it was inevitable.
[14:38:05] <hassoon> why
[14:38:48] <silly> b/c fate's a bitch
[14:38:53] <prussian> because you're randomly downloading crap off the internet that is effectively executed with the ambient powers of your user in your gross insecure os?
[14:39:19] <prussian> this isn't NPM specific problem of course.
[14:39:24] <hassoon> insecure os ? nah i use linux
[14:39:29] <silly> lol
[14:39:36] <joepie91> it wasn't really inevitable though
[14:39:40] <joepie91> this one, at least
[14:40:00] <joepie91> had npm made 2FA mandatory for popular packages and just mailed out free yubikeys to their maintainers, this would very likely not have happened
[14:40:03] <prussian> hassoon: whoa...
[14:40:09] <hassoon> unless silly is literally using a windows machine and forced to do so, by e.g their boss or whatever their circumstances are dictating
[14:40:15] <joepie91> couple thousand bucks and most of the problem is solved
[14:40:21] <silly> eww
[14:40:28] <hassoon> isn't it silly ..
[14:40:50] <silly> i wouldn't work with a windows pc
[14:41:03] <silly> probably not even with a mac
[14:42:27] <hassoon> ^ linux
[14:42:46] <silly> isn't this like a software yubikey for free? https://play.google.com/store/apps/details?id=com.google.android.apps.authenticator2
[14:42:48] <prussian> joepie91: I don't see how that solves it.
[14:42:51] <prussian> honestly
[14:43:09] <prussian> I mean, we're assuming coa's maintainer wasn't paid to look the other way
[14:43:31] <silly> it even has "dark theme available" in its feature list
[14:43:41] <prussian> in the future, it would just be "my key was stolen"
[14:43:54] *** Quits: Praise (~Fat@user/praise) (Ping timeout: 260 seconds)
[14:43:56] <joepie91> prussian: I realize that 'trust' is an unpopular theme in programmer land :) but in reality, most people are pretty trustworthy, and especially maintainers of popular packages are unlikely to 'go rogue' unless they have a very good reason
[14:43:57] <prussian> or "oops, our HSM was stolen and hacked" or whatever at Yubico
[14:44:05] <joepie91> prussian: fallout from ua-parser is far, far more likely
[14:44:23] <joepie91> ie. the credential theft worm thing
[14:44:24] <prussian> I realize that.
[14:44:39] <prussian> but honestly, I don't see how Webauthn or 2fa or anything is going to help
[14:44:52] <joepie91> silly: (well-designed) hardware keys are more secure because they are a deliberately isolated environment that no other software can run in, thereby avoiding the malware problem
[14:45:16] <joepie91> and they work with basically any existing environment, and quite conveniently too
[14:45:23] <joepie91> so they are an obvious option to mail out
[14:45:47] <joepie91> you can use TOTP apps but then you need to rely on the user making sure they don't run the app in the same environment that they login from
[14:45:52] <joepie91> and it is still a less secure environments
[14:45:55] <joepie91> environment*
[14:46:06] <joepie91> and hell, plenty of people don't even have a smartphone to run this on, only a workstation
[14:46:23] <silly> but you connect it to a potentially compromised device
[14:46:29] <joepie91> prussian: 2FA prevents that form of credential theft, which is a very low-cost and high-impact attack
[14:46:41] <joepie91> silly: yes, but the better security keys are designed to work under those circumstances
[14:46:52] <joepie91> eg. by having a physical button you need to touch to confirm
[14:47:11] <joepie91> so the key material is inaccessible from the host device
[14:47:29] <silly> i don't get it
[14:47:30] <joepie91> and the host device can't generate 2FA codes unless you provide a physical confirmation
[14:48:19] <silly> has anybody thought of 3FA yet?
[14:48:21] <joepie91> silly: TOTP works with a private key in your TOTP device/app/whatever, that is used to generate 2FA codes on demand, based on the current time. if someone gets hold of that private key ("key material"), they can generate arbitrary 2FA codes, and this means that it is no longer effective at preventing logins with stolen credentials
[14:48:48] <prussian> I guess.
[14:48:49] *** Quits: rustyshackleford (uid236774@id-236774.helmsley.irccloud.com) (Quit: Connection closed for inactivity)
[14:48:53] <prussian> silly: this..
[14:48:56] <prussian> the future...
[14:49:00] <silly> "Time-based One-time Password (TOTP) is a computer algorithm that generates a one-time password (OTP) that uses the current time as a source of uniqueness."
[14:49:01] *** Joins: llorllale (~llorllale@2607:9880:3a18:69:fc9d:2ed5:b7a1:e098)
[14:49:30] <joepie91> silly: so a good TOTP system will a) prevent a compromised system from accessing the key material, and b) prevent the compromised system from being able to automatically obtain new 2FA codes from the TOTP system
[14:49:31] <joepie91> without user confirmation
[14:49:31] <joepie91> a physical key on the TOTP device is the most reliable approach to point B, and almost any physical TOTP device like a yubikey will satisfy point A
[14:49:40] *** Joins: zeromule (~eric@2601:602:8d80:4e50:d1b3:9aed:31d:c2c9)
[14:50:11] <silly> oh, they just block my yubi if they believe it might be compromised?
[14:50:27] <silly> that would be npm in this case?
[14:50:38] <silly> others would still accept it?
[14:50:50] <joepie91> your yubikey will almost certainly not be 'compromised' on a technical level, because it is not a general-purpose computer. if you lose it, then you can simply remove it from your account yourself
[14:51:12] <silly> can anybody else remove it from my account?
[14:51:27] <stenno\OK> yubi yubi
[14:51:27] <joepie91> you can think of a yubikey as a tiny little computer whose only purpose is to generate a cryptographical signature when you press a button
[14:51:28] <silly> or does it happen?
[14:51:38] <joepie91> silly: only if they can login to your account, which should be impossible without that 2FA code
[14:51:46] <joepie91> or if they somehow convince npm staff to do it
[14:52:24] <joepie91> most sites will require that you're not only logged in, but also generate a second 2FA code to confirm the removal of your 2FA
[14:52:37] <joepie91> to avoid trickery like 'browser extension waits for you to log in and removes 2FA'
[14:52:46] <joepie91> I'm not sure whether npm requires this
[14:53:26] <joepie91> but the general idea is that, in a good 2FA implementation, you cannot detach a 2FA device from an account if you don't already have the device in your hands physically
[14:54:04] <joepie91> and you cannot login or do any privileged things unless you have the device in your possession either
[14:54:05] <silly> interesting
[14:54:41] <silly> how come yubikeys are so expensive?
[14:54:47] *** Joins: dimi1947 (~dimi1947@2a02:1388:2082:ab01:a9f5:b181:b922:6a92)
[14:55:05] <silly> i'd certainly have a few if they were $5
[14:55:15] <joepie91> note that 2FA is still useful even if you don't use a dedicated device like a yubikey, it's just not quite as secure. hence why I'm arguing for sending people yubikeys here, because npm should care about protecting popular packages as much as possible
[14:55:24] <joepie91> silly: honestly, probably because they can charge it
[14:55:32] <joepie91> historically such devices have been popular mostly in enterprise environments
[14:55:36] <joepie91> and enterprises will pay basically whatever you charge
[14:55:41] <joepie91> there are also cheaper options like nitrokeys
[14:56:13] <joepie91> and I think that those things that google sent out to people were a bunch cheaper still
[14:56:27] <joepie91> forgot the name, some chinese company iirc
[14:58:28] <dimi1947> Am i correct to say that setObjectprototypeOf DOES NOT WORK with constructors?
[14:58:40] <dimi1947> ...only w objects
[14:59:50] *** Joins: x-x (~x@user/x-x)
[15:00:58] *** Joins: otisolsen70 (~otisolsen@80.80.4.2)
[15:01:28] *** Quits: x-x (~x@user/x-x) (Client Quit)
[15:02:32] *** Joins: netameta_ (~netameta@2a00:a040:193:50fe:592f:45de:294d:887c)
[15:04:45] *** Quits: netameta (~netameta@2a00:a040:193:50fe:c951:2321:c249:9bc1) (Ping timeout: 268 seconds)
[15:07:11] *** Quits: DnzAtWrk (~DnzAtWrk@mobile-access-567363-170.dhcp.inet.fi) (Quit: Leaving)
[15:07:12] *** Quits: comatory (~ondrejsyn@217.11.241.69) (Ping timeout: 268 seconds)
[15:16:20] *** Joins: bluehoney (~bluehoney@cpe-75-81-204-188.mi.res.rr.com)
[15:17:04] *** Quits: jetchisel (jetchisel@user/jetchisel) (Ping timeout: 268 seconds)
[15:17:59] *** Joins: comatory (~ondrejsyn@217.11.241.69)
[15:19:12] *** Joins: jetchisel (jetchisel@user/jetchisel)
[15:19:25] *** Quits: Sven_vB (~sven@user/sven-vb/x-2094958) (Killed (NickServ (GHOST command used by Sven_vB_)))
[15:19:28] *** Joins: Sven_vB_ (~sven@user/sven-vb/x-2094958)
[15:24:02] *** Quits: zeromule (~eric@2601:602:8d80:4e50:d1b3:9aed:31d:c2c9) (Ping timeout: 260 seconds)
[15:24:20] *** Joins: D4mned (~Dmnd@212.101.251.149)
[15:37:18] *** Quits: duds- (~duds-@gateway/tor-sasl/duds) (Ping timeout: 276 seconds)
[15:43:16] *** Quits: onizu (uid373383@id-373383.uxbridge.irccloud.com) (Quit: Connection closed for inactivity)
[15:48:59] <fakuve> Hi guys , What is the best practice nowadays in JavaScript to execute certain line of code or not if a property is defined?
[15:50:11] <fakuve> I reckon you do an if statement such as `if (varName == null) {//execute this code} } else {//excute this other code }`
[15:52:18] *** Quits: Icedream (~icedream@hzn-b.serverkomplex.de) (Quit: A lol made me boom.)
[15:52:23] <fakuve> ok it would be something like `if (typeof myVar !== 'undefined') {
[15:52:39] *** Joins: zeromule (~eric@2601:602:8d80:4e50:d1b3:9aed:31d:c2c9)
[15:54:06] <wez> fakuve: can't you just if (myVar !== undefined) ?
[15:54:30] <wez> fakuve: or  doSomething ?? somethingElseIfUndefinedOrNull
[15:54:33] *** Quits: bluehoney (~bluehoney@cpe-75-81-204-188.mi.res.rr.com) (Ping timeout: 256 seconds)
[15:54:41] *** Joins: Icedream (~icedream@hzn-b.serverkomplex.de)
[15:54:59] *** Quits: otisolsen70 (~otisolsen@80.80.4.2) (Quit: Leaving)
[15:55:15] <jaawerth> if it's a variable and not an object property, best to use typeof because that will work even if it's a possibly-undefined global and you're in strict mode (which for `foo != null` would throw an error but `typeof foo !== 'undefined'` would not)
[15:55:24] <fakuve> wez:ok that is simpler I'm gonna try that
[15:55:40] *** Joins: duds- (~duds-@gateway/tor-sasl/duds)
[15:56:06] <wez> fakuve: That will work if you're using nodejs or babel and some type of builder / webpack
[15:57:36] <jaawerth> for object properties you could use ?? or ?. etc, sure. or `key in obj`/Reflect.has(obj, key) to see if the key exists on the object (including on the prototype chain), or  `obj.hasOwnProperty(key)` (only own properties, no inherited ones)
[15:58:06] <wez> jaawerth: Yeah there is more than one way :)
[15:58:18] <jaawerth> right, but each one has a slightly difference usecase, hence why I list them all
[15:58:30] <wez> I find if (typeof myVar !== 'undefined') very Netscape navigator 4
[15:58:40] <wez> thnx jaawerth
[15:59:04] <jaawerth> lol well if you have to check whether a variable has been defined then you are already not in the ideal situation
[15:59:18] <jaawerth> and it was more common to have globals all over the place in the netscape days
[15:59:38] *** Joins: thiras (~thiras@user/thiras)
[16:00:01] <jaawerth> in modern js you'd *usually* avoid globals whenever possible and for regular variables you can see in your own code whether you defined it/use a linter to catch those mistakes before you run the code
[16:00:10] <earendel> typeof was/is the only built in u could use on declared variables without throwing an exception
[16:00:13] <jaawerth> but... sometimes you aren't in the ideal situation
[16:00:14] *** Quits: xsperry (~xs@user/xsperry) ()
[16:00:42] *** Quits: duds- (~duds-@gateway/tor-sasl/duds) (Ping timeout: 276 seconds)
[16:01:01] *** Joins: night_wulfe_ (~wulfe@cpe-174-103-156-213.cinci.res.rr.com)
[16:02:14] <jaawerth> legacy codebases, having to edit something in an externally-managed platform, etc
[16:02:50] <fakuve> Yeah I will try typeof , thanks guys
[16:04:33] *** Quits: night_wulfe (~wulfe@cpe-174-103-156-213.cinci.res.rr.com) (Ping timeout: 268 seconds)
[16:05:24] <earendel> var window = window || blah; //sth like this worked too, since window would be declared before assignment
[16:05:50] *** Joins: AnselmoCampanas (~AnselmoCa@190.99.69.41)
[16:09:29] *** Quits: llorllale (~llorllale@2607:9880:3a18:69:fc9d:2ed5:b7a1:e098) (Ping timeout: 268 seconds)
[16:12:10] *** Joins: mat001 (~mat001@c-71-202-208-251.hsd1.ca.comcast.net)
[16:12:45] *** Joins: daoudr_ (~daoudr@gateway/vpn/pia/daoudr)
[16:15:40] *** Quits: daoudr (~daoudr@2a02:1205:c690:ca10:3d58:ccf6:72f8:5c4a) (Ping timeout: 268 seconds)
[16:18:45] *** Joins: ggnoredo (~user@212.98.236.50)
[16:20:49] *** Joins: daoudr__ (~daoudr@2a02:1205:c690:ca10:cc28:1113:28f4:cbb8)
[16:23:47] *** Quits: daoudr_ (~daoudr@gateway/vpn/pia/daoudr) (Ping timeout: 264 seconds)
[16:24:54] *** Joins: arthur_melo (~IRC@user/arthur-melo/x-6822691)
[16:24:56] *** Quits: incognito (~relativit@user/incognito) (Quit: Going offline, see ya! (www.adiirc.com))
[16:25:20] *** Joins: onizu (uid373383@id-373383.uxbridge.irccloud.com)
[16:29:31] *** Joins: Nimzowitsch (~nimzo@user/nimzowitsch)
[16:31:14] *** Joins: derjanni (~textual@p5ddafd7f.dip0.t-ipconnect.de)
[16:35:45] *** Quits: D4mned (~Dmnd@212.101.251.149) (Read error: Connection reset by peer)
[16:36:26] *** Joins: Crash1hd (~Crash1hd@S0106a84e3f475583.cg.shawcable.net)
[16:37:15] *** Quits: kakashiAL (~kakashi@ip-37-201-199-21.hsi13.unitymediagroup.de) (Ping timeout: 268 seconds)
[16:40:56] *** Quits: mat001 (~mat001@c-71-202-208-251.hsd1.ca.comcast.net) (Ping timeout: 268 seconds)
[16:42:03] *** Quits: Sven_vB_ (~sven@user/sven-vb/x-2094958) (Remote host closed the connection)
[16:42:18] *** Joins: Sven_vB (~sven@user/sven-vb/x-2094958)
[16:44:06] *** Joins: han-solo (~hanish@user/han-solo)
[16:50:24] *** Joins: fcjsx (~fcjsx@2800:a4:83a:6f00:bed:7899:84a2:6b69)
[16:50:30] *** Quits: fcjsx (~fcjsx@2800:a4:83a:6f00:bed:7899:84a2:6b69) (Remote host closed the connection)
[16:50:44] *** Quits: JohnDoe2 (~johndoe2@2001:470:1f07:89::dead:bead) (Quit: bye)
[16:53:36] *** Joins: JohnDoe2 (~johndoe2@2001:470:1f07:89::dead:bead)
[16:54:06] *** Quits: zeromule (~eric@2601:602:8d80:4e50:d1b3:9aed:31d:c2c9) (Ping timeout: 260 seconds)
[16:55:23] *** Joins: zsoc (~zsoc@cpe-24-168-59-34.hvc.res.rr.com)
[16:56:15] *** Joins: pmercado (~pmercado@186.107.54.176)
[16:56:32] *** Quits: JohnDoe2 (~johndoe2@2001:470:1f07:89::dead:bead) (Client Quit)
[16:58:13] *** Joins: JohnDoe2 (~johndoe2@2001:470:1f07:89::dead:bead)
[16:58:23] *** Joins: yaalon (~yaalon@cpe-70-121-160-255.satx.res.rr.com)
[17:01:29] *** Quits: jess (~jess@libera/staff/jess) ()
[17:02:07] *** Joins: nomic (~nomic@185.192.69.211)
[17:03:20] *** Joins: kakashiAL (~kakashi@ip-37-201-199-21.hsi13.unitymediagroup.de)
[17:06:04] *** Joins: wardkennes (~wardkenne@d54c71612.static.telenet.be)
[17:08:04] *** Quits: kakashiAL (~kakashi@ip-37-201-199-21.hsi13.unitymediagroup.de) (Ping timeout: 268 seconds)
[17:09:18] *** Quits: Duikb00t (~wardkenne@d54c71612.static.telenet.be) (Ping timeout: 268 seconds)
[17:10:29] *** Quits: Crash1hd (~Crash1hd@S0106a84e3f475583.cg.shawcable.net) (Ping timeout: 256 seconds)
[17:14:22] *** Joins: ThePhilgrim (~ThePhilgr@151.41.4.252)
[17:16:58] *** Quits: CrazyEddy (crazyed@2603:300a:1d10:c000:de4a:3eff:fe88:cc5f) (Ping timeout: 260 seconds)
[17:17:26] <ThePhilgrim> Hi, I have a function that returns true if the elements of an array sums up to 10, and returns false if the sum is not 10. I have a nested array containing all of these arrays. If I want to filter the arrays that sum up to 10 I can do let newArray = nestedArray.filter(callbackfunction) . However, in my case I want to filter out the arrays that returns FALSE. How can I do that?
[17:17:47] <ThePhilgrim> I tried .filter(!callbackfunction), but that doesn't work xD
[17:19:44] <earendel> .filter(x=>!callbackfunctiion(x))
[17:19:54] <daoudr__> https://imgur.com/hJXuYvj.png   may you rephrase the highlighted sentence with an example
[17:20:15] <daoudr__> https://eloquentjavascript.net/06_object.html
[17:21:18] <ThePhilgrim> earendel, would you care to explain what I'm looking at here?
[17:21:47] <ThePhilgrim> You're creating a new shorthand function as a .filter parameter?
[17:22:07] <earendel> ThePhilgrim: an anonmous function that would revert the result of your callback
[17:22:16] *** Quits: dimi1947 (~dimi1947@2a02:1388:2082:ab01:a9f5:b181:b922:6a92) (Ping timeout: 268 seconds)
[17:22:42] <ThePhilgrim> brain overload here
[17:22:43] <ThePhilgrim> lol
[17:22:59] <earendel> ThePhilgrim: .filter expects a function as a parameter .. not a boolean.
[17:23:16] *** Joins: X-Scale` (~ARM@165.201.137.78.rev.vodafone.pt)
[17:23:29] *** Quits: X-Scale (~ARM@83.223.227.196) (Ping timeout: 268 seconds)
[17:23:34] <earendel> the predicate function returns a boolean.
[17:24:00] <ThePhilgrim> hmm.. I can do something like arrayFullofNumbers.filter(X => X > 10), correct?
[17:24:09] <earendel> that's why !functionname wouldn't work.
[17:24:20] <ThePhilgrim> hmm okay
[17:25:07] <earendel> but x=>!functionname() would, because it's a function returning a boolean value (true/false)
[17:25:15] <ThePhilgrim> So, here you do what I just did, but you take X (an array) => return reversed boolean from calling the function with X as parameter
[17:25:19] <earendel> damn pass the x to functionname as well.
[17:26:04] <ThePhilgrim> I think I manage to wrap my head around that.. even though I wouldn't be able to solve that myself
[17:26:07] <earendel> x stands for the next element in the array.
[17:26:10] *** Joins: zeromule (~eric@2601:602:8d80:4e50:d1b3:9aed:31d:c2c9)
[17:26:27] <ThePhilgrim> Yeah, but in my case the element is an array in a nested array
[17:27:05] <earendel> the predicate function takes the next element, and tells wheather it will pass the filter.
[17:27:28] *** Joins: incognito (~relativit@user/incognito)
[17:27:46] *** Quits: derjanni (~textual@p5ddafd7f.dip0.t-ipconnect.de) (Quit: Textual IRC Client: www.textualapp.com)
[17:27:47] <earendel> doesn't matter. your callbackfunction will check wheather the next element is an array with 10 elements.
[17:28:07] <ThePhilgrim> right, okay! It worked, thanks
[17:28:23] <ThePhilgrim> Coding is such a headache when you understand 40% of what you're doing :D
[17:29:11] *** Quits: X-Scale` (~ARM@165.201.137.78.rev.vodafone.pt) (Ping timeout: 256 seconds)
[17:29:12] <earendel> do understand what that function is doing now?
[17:29:20] <earendel> you
[17:29:34] *** Joins: X-Scale (~ARM@83.223.240.168)
[17:31:01] <ThePhilgrim> Yeah, I get what you have been saying!
[17:31:14] <ThePhilgrim> Thank you
[17:31:40] <earendel> when you have collections of similar elements, you should generally write functions that would handle a single element. and then use .filter and .map to do whatever needed on the whole collection of elements
[17:32:00] <earendel> you'll get used to it quickly
[17:33:34] <earendel> n> var arr=[]; arr[2]=1; arr.length
[17:33:35] <jellobot> (okay) 3
[17:33:41] <ThePhilgrim> Here is my code: https://dpaste.com/DC5CZWLBW
[17:33:44] *** Joins: Trieste_ (T@user/pilgrim)
[17:33:57] <earendel> length will lie on sparsed arrays.
[17:34:36] *** Quits: Trieste (T@user/pilgrim) (Ping timeout: 268 seconds)
[17:35:58] *** Joins: dimi1947 (~dimi1947@2a02:1388:2093:2a29:c1d3:dde7:8324:e31c)
[17:41:12] *** Joins: otisolsen70 (~otisolsen@xd4ed80b5.cust.hiper.dk)
[17:49:45] *** Joins: kakashiAL (~kakashi@ip-37-201-199-21.hsi13.unitymediagroup.de)
[17:54:20] *** Quits: kakashiAL (~kakashi@ip-37-201-199-21.hsi13.unitymediagroup.de) (Ping timeout: 268 seconds)
[17:57:09] *** Joins: CrazyEddy (crazyed@2603:300a:1d10:c000:de4a:3eff:fe88:cc5f)
[17:57:27] *** Joins: voltage_ (voltage@user/voltage)
[18:02:00] *** Joins: sam_1 (~sam_1@87.51.251.118)
[18:03:00] *** Quits: Swant (~swant@libera/staff/swant) (Quit: gone to IKEA)
[18:03:48] *** Quits: AnselmoCampanas (~AnselmoCa@190.99.69.41) (Ping timeout: 256 seconds)
[18:05:52] *** Joins: Swant (~swant@libera/staff/swant)
[18:06:39] *** Quits: zeromule (~eric@2601:602:8d80:4e50:d1b3:9aed:31d:c2c9) (Ping timeout: 268 seconds)
[18:06:40] *** Quits: sam_1 (~sam_1@87.51.251.118) (Ping timeout: 260 seconds)
[18:07:00] *** Joins: kakashiAL (~kakashi@ip-37-201-199-21.hsi13.unitymediagroup.de)
[18:09:27] *** Joins: kogepan_ (~kogepan@user/kogepan)
[18:11:35] *** Quits: kakashiAL (~kakashi@ip-37-201-199-21.hsi13.unitymediagroup.de) (Ping timeout: 268 seconds)
[18:12:19] *** Joins: rustyshackleford (uid236774@id-236774.helmsley.irccloud.com)
[18:14:11] *** Quits: azizLIGHT (~azizLIGHT@user/azizlight) (Ping timeout: 264 seconds)
[18:18:37] *** Joins: otisolsen70_ (~otisolsen@xd4ed80b5.cust.hiper.dk)
[18:20:33] *** Joins: Praise (~Fat@user/praise)
[18:22:27] *** Quits: otisolsen70 (~otisolsen@xd4ed80b5.cust.hiper.dk) (Ping timeout: 256 seconds)
[18:24:02] *** Quits: nomic (~nomic@185.192.69.211) (Quit: Leaving)
[18:25:25] *** Quits: otisolsen70_ (~otisolsen@xd4ed80b5.cust.hiper.dk) (Remote host closed the connection)
[18:25:43] *** Joins: otisolsen70 (~otisolsen@xd4ed80b5.cust.hiper.dk)
[18:30:34] *** Joins: Crash1hd (~Crash1hd@S0106a84e3f475583.cg.shawcable.net)
[18:32:03] *** Joins: federico_it (~textual@151.95.125.195)
[18:32:07] *** Quits: leduyquang753 (~leduyquan@user/leduyquang753) (Quit: Gotta go, see you guys later.)
[18:32:19] *** Quits: yaalon (~yaalon@cpe-70-121-160-255.satx.res.rr.com) (Remote host closed the connection)
[18:33:58] *** Joins: pulse (~pulse@user/pulse)
[18:36:34] *** Quits: ckdCreations (~ckdCreati@147.55.133.134) (Read error: Connection reset by peer)
[18:41:33] *** Joins: ckdCreations (~ckdCreati@147.55.133.131)
[18:43:15] *** Quits: ggnoredo (~user@212.98.236.50) (Read error: Connection reset by peer)
[18:47:09] *** Joins: yaalon (~yaalon@cpe-70-121-160-255.satx.res.rr.com)
[18:49:44] <paulcarroty> heh, replit is a really stupid service. have spend 15 minutes to upgrade node, no success yet
[18:53:07] *** Quits: dimi1947 (~dimi1947@2a02:1388:2093:2a29:c1d3:dde7:8324:e31c) (Quit: Leaving)
[18:54:18] *** Quits: Nimzowitsch (~nimzo@user/nimzowitsch) (Quit: Cya soon!)
[18:54:39] *** Joins: Nimzowitsch (~nimzo@user/nimzowitsch)
[18:55:18] *** Joins: Crash1hd_ (~Crash1hd@64.56.153.179)
[18:57:01] *** Quits: wardkennes (~wardkenne@d54c71612.static.telenet.be) (Ping timeout: 256 seconds)
[18:58:31] *** Joins: AnselmoCampanas (~AnselmoCa@190.99.69.41)
[18:58:43] *** Quits: Crash1hd (~Crash1hd@S0106a84e3f475583.cg.shawcable.net) (Ping timeout: 256 seconds)
[18:59:04] *** Quits: Nimzowitsch (~nimzo@user/nimzowitsch) (Ping timeout: 268 seconds)
[19:01:39] <devslash> ljharb, I thought about what you said since I didnt know that basic auth was insecure over https so I implemented a proper authentication service
[19:02:35] *** Joins: kakashiAL (~kakashi@ip-37-201-199-21.hsi13.unitymediagroup.de)
[19:04:46] *** Quits: interop_madness (~interop_m@user/interop-madness/x-0950004) (Quit: Leaving)
[19:07:43] *** Quits: kakashiAL (~kakashi@ip-37-201-199-21.hsi13.unitymediagroup.de) (Ping timeout: 268 seconds)
[19:08:05] *** Joins: Nimzowitsch (~nimzo@user/nimzowitsch)
[19:09:55] *** Joins: dimi1947 (~dimi1947@2a02:1388:2093:2a29:c1d3:dde7:8324:e31c)
[19:11:03] *** Joins: dalek-caan (~Thunderbi@109-252-124-86.nat.spd-mgts.ru)
[19:13:39] *** Quits: yaalon (~yaalon@cpe-70-121-160-255.satx.res.rr.com) (Remote host closed the connection)
[19:15:37] <ljharb> devslash: you rolled it yourself? o.O
[19:15:56] <devslash> no i implemented authelia
[19:16:06] <ljharb> paulcarroty: upgrade node? Doesn’t it just give you a prebuilt machine with node on it?
[19:16:11] <ljharb> devslash: ah k, good
[19:16:23] <ljharb> earendel: the length isn’t a lie. The holes are the lie.
[19:19:37] <paulcarroty> ljharb v12.22.6 preinstalled, not enough for optional chaining & coalescing operator
[19:21:28] <ljharb> paulcarroty: there’s a node 16 template
[19:21:33] *** Joins: yaalon (~yaalon@cpe-70-121-160-255.satx.res.rr.com)
[19:21:35] <ljharb> https://replit.com/@RoBlockHead/NodeJS-16?v=1
[19:22:18] *** Quits: yaalon (~yaalon@cpe-70-121-160-255.satx.res.rr.com) (Remote host closed the connection)
[19:24:56] *** Quits: pavonia (~user@user/siracusa) (Quit: Bye!)
[19:25:21] *** Quits: machinehum (~machinehu@193.19.109.13) (Ping timeout: 256 seconds)
[19:26:29] *** Joins: machinehum (~machinehu@193.19.109.13)
[19:28:27] <paulcarroty> ljharb thx, forked it and got v16. Alternative for any version: https://github.com/RLX-OP/node.js-v16-replit
[19:32:15] *** Joins: yaalon (~yaalon@cpe-70-121-160-255.satx.res.rr.com)
[19:33:54] *** Quits: AnselmoCampanas (~AnselmoCa@190.99.69.41) (Ping timeout: 256 seconds)
[19:33:58] *** Joins: kakashiAL (~kakashi@ip-37-201-199-21.hsi13.unitymediagroup.de)
[19:38:54] *** Quits: kakashiAL (~kakashi@ip-37-201-199-21.hsi13.unitymediagroup.de) (Ping timeout: 260 seconds)
[19:41:13] *** Quits: kogepan_ (~kogepan@user/kogepan) (Ping timeout: 256 seconds)
[19:44:29] *** Joins: azizLIGHT (~azizLIGHT@user/azizlight)
[19:45:52] *** Joins: mickey8 (~user@user/mickey)
[19:46:57] <mickey8> hello everyone. i have some object that i convert into a csv with one-liner like Object.keys(dict).map(function(k){return dict[k];}).join(',');, but i want to let the user "download" that generated csv as if it was a file on the server
[19:47:08] *** Joins: Crash1hd__ (~Crash1hd@S0106a84e3f475583.cg.shawcable.net)
[19:47:09] <mickey8> how do i go about doing that?
[19:48:21] *** Quits: szutt (~szutt@116.37.2.145) (Quit: Client closed)
[19:48:43] <dimi1947> can you apply inheritance without resorting to extends,setObjectProtoypeOf etc? it seems you can..asking to be certain though
[19:50:30] <ljharb> mickey8: you can use the download attribute but it's FAR better to actually have the server serve it as a download
[19:50:39] <ljharb> dimi1947: you can, but you shouldn't
[19:50:50] <ljharb> dimi1947: inheritance is terrible anyways, but the only non-bad way to do it in JS is with `class`
[19:51:01] <mickey8> ljharb why is it better if the user already has the data locally? it's a redundant request to the api, database, etc
[19:51:25] *** Quits: Crash1hd_ (~Crash1hd@64.56.153.179) (Ping timeout: 256 seconds)
[19:53:45] *** Joins: Hexmind (~Hexmind@modemcable049.25-131-66.mc.videotron.ca)
[19:54:14] *** Quits: comatory (~ondrejsyn@217.11.241.69) (Ping timeout: 260 seconds)
[19:55:12] *** Quits: Crash1hd__ (~Crash1hd@S0106a84e3f475583.cg.shawcable.net) (Ping timeout: 268 seconds)
[19:56:17] <ljharb> mickey8: it's better because the headers will be set properly. presumably the data came from the server in the first placae
[19:56:24] <ljharb> mickey8: also btw, `Object.values(dict).join(',')`
[19:56:33] <ljharb> mickey8: which is a very cheap operation to run
[19:57:30] *** Joins: Crash1hd__ (~Crash1hd@S0106a84e3f475583.cg.shawcable.net)
[19:58:24] *** Joins: mat001 (~mat001@c-71-202-208-251.hsd1.ca.comcast.net)
[19:58:50] *** Joins: dpuerto (~dpuerto@136-27-83-52.cab.webpass.net)
[19:59:20] *** Joins: Crash1hd_ (~Crash1hd@64.56.153.179)
[20:02:45] *** Quits: Crash1hd__ (~Crash1hd@S0106a84e3f475583.cg.shawcable.net) (Ping timeout: 256 seconds)
[20:02:48] *** Joins: junktext_ (~junktext@gateway/vpn/pia/junktext)
[20:02:59] *** Quits: mickey8 (~user@user/mickey) (Quit: Ping timeout (120 seconds))
[20:03:18] *** Joins: zeromule (~eric@2601:602:8d80:4e50:d1b3:9aed:31d:c2c9)
[20:05:28] *** Joins: mickey8 (~user@user/mickey)
[20:05:52] *** Parts: Puyo (sid500577@user/puyo) ()
[20:07:42] *** Joins: kakashiAL (~kakashi@ip-37-201-199-21.hsi13.unitymediagroup.de)
[20:09:12] *** Quits: w0ng (~w0ng@103.1.212.100) (Ping timeout: 260 seconds)
[20:12:08] <dimi1947> ljharb:does terrible means very confusing?
[20:12:11] *** Joins: electrostatic (~electrost@2601:600:8600:5a1:603b:a2f3:5522:1ff2)
[20:12:27] *** Quits: kakashiAL (~kakashi@ip-37-201-199-21.hsi13.unitymediagroup.de) (Ping timeout: 268 seconds)
[20:15:01] *** Quits: mickey8 (~user@user/mickey) (Quit: Ping timeout (120 seconds))
[20:15:16] *** Joins: mickey8 (~user@user/mickey)
[20:16:35] *** Quits: electrostatic (~electrost@2601:600:8600:5a1:603b:a2f3:5522:1ff2) (Ping timeout: 264 seconds)
[20:18:42] *** Quits: poiqwepoiqwe (~poiqwepoi@120.18.204.49) (Quit: Client closed)
[20:18:42] *** poiqwepoiqwe_ is now known as poiqwepoiqwe
[20:19:37] *** Joins: zebrag (~chris@user/zebrag)
[20:19:51] *** Joins: stewie925 (~stewie925@2600:1702:44f0:35c0:3dfe:56d8:f73a:2910)
[20:21:33] <hexology> is there some known interaction between express, apollo, and the node debugger that prevents the `debugger` statement from having any effect when running with `node --inspect`?
[20:21:38] <hexology> specifically i am running: `npx cross-env NODE_ENV=development node --inspect src/index.js`
[20:22:00] <ljharb> dimi1947: it means bad, broken, confusing
[20:22:07] <hexology> i am not really a node expert, but it seems like this application somehow attaches an apollo graphql server to an express server
[20:22:10] <ljharb> !classes @ dimi1947
[20:22:11] <jellobot> dimi1947, Class hierarchies? Don't do that! http://raganwald.com/2014/03/31/class-hierarchies-dont-do-that.html (See also, !inheritance)
[20:22:34] <hexology> also, console.log() appears to have no effect either. does one or both of those frameworks swallow stdout?
[20:26:20] <prussian> wut
[20:26:23] <prussian> oops
[20:26:27] <prussian> wrong window focus...
[20:27:42] *** Quits: mexen (uid495612@user/mexen) (Quit: Connection closed for inactivity)
[20:28:38] *** Quits: dpuerto (~dpuerto@136-27-83-52.cab.webpass.net) (Remote host closed the connection)
[20:29:04] *** Joins: knstn (~knstn@ppp-94-66-57-119.home.otenet.gr)
[20:29:10] *** Joins: vagrant1 (~vagrant@c-73-82-49-38.hsd1.ga.comcast.net)
[20:29:20] *** Quits: kmh (~kmh@2a00:6020:5004:6800:bdaa:9635:9966:ac85) (Quit: Leaving)
[20:31:30] *** Quits: Booster2ooo (~Booster2o@user/booster2ooo) (Quit: KVIrc 4.2.0 Equilibrium http://www.kvirc.net/)
[20:32:01] *** Quits: federico_it (~textual@151.95.125.195) (Quit: Textual IRC Client: www.textualapp.com)
[20:35:05] *** Joins: Swahili (~Swahili@cpc153693-lewi20-2-0-cust508.2-4.cable.virginm.net)
[20:39:18] *** Joins: stkrdknmibalz (~test@rrcs-75-87-43-226.sw.biz.rr.com)
[20:40:57] *** Quits: Sven_vB (~sven@user/sven-vb/x-2094958) (Killed (NickServ (GHOST command used by Sven_vB_)))
[20:41:00] *** Joins: Sven_vB_ (~sven@user/sven-vb/x-2094958)
[20:41:08] *** Joins: kmh (~kmh@2a00:6020:5004:6800:4f37:dee:2cfd:c127)
[20:46:06] *** Quits: Photic (~Photic@user/photic) (Quit: Client closed)
[20:47:00] *** Joins: qswz (~caub@89-80-20-125.abo.bbox.fr)
[20:48:42] <qswz> who else have done this? const Frag = ({ children }) => children? because React's Fragment is stupid, it complains when you pass other props
[20:49:22] <qswz> (in some place, the component name is dynamic, can be Fragment, and props are passed)
[20:49:39] *** vagrant1 is now known as jaykelly450
[20:52:28] <qswz> well, I'm doing it wrong
[20:53:10] *** Quits: yaalon (~yaalon@cpe-70-121-160-255.satx.res.rr.com) (Remote host closed the connection)
[20:53:29] *** Joins: yaalon (~yaalon@cpe-70-121-160-255.satx.res.rr.com)
[20:54:01] *** Quits: yaalon (~yaalon@cpe-70-121-160-255.satx.res.rr.com) (Remote host closed the connection)
[20:54:38] <qswz> fixed the X issue
[20:54:59] *** Quits: zeromule (~eric@2601:602:8d80:4e50:d1b3:9aed:31d:c2c9) (Ping timeout: 264 seconds)
[20:57:47] *** Joins: src (~src@user/src)
[20:57:51] <qswz> <Foo as={Fragment} ..
[20:58:53] <qswz> with function Foo({as: C = DefaultC, ...}) {} ..  DefaultC=({children})=><dl className="...">{children}</dl>
[20:58:56] <qswz> you get the idea
[20:59:10] *** Joins: dpuerto (~dpuerto@136-27-83-52.cab.webpass.net)
[20:59:18] *** Joins: yaalon (~yaalon@cpe-70-121-160-255.satx.res.rr.com)
[21:01:53] *** Quits: yaalon (~yaalon@cpe-70-121-160-255.satx.res.rr.com) (Remote host closed the connection)
[21:02:08] *** Joins: yaalon (~yaalon@cpe-70-121-160-255.satx.res.rr.com)
[21:02:27] *** Parts: knstn (~knstn@ppp-94-66-57-119.home.otenet.gr) ()
[21:03:50] *** Quits: dpuerto (~dpuerto@136-27-83-52.cab.webpass.net) (Ping timeout: 260 seconds)
[21:04:08] *** Joins: Kdev (~KDev@cpe-98-10-64-75.rochester.res.rr.com)
[21:05:09] *** Joins: ___nick___ (~quassel@cpc68286-cdif17-2-0-cust533.5-1.cable.virginm.net)
[21:06:08] *** Quits: i0e (~is0ke3@user/is0ke3) (Quit: WeeChat 3.3)
[21:09:23] *** Joins: WishBoy (~WishBoy@user/wishboy)
[21:10:50] *** Quits: machinehum (~machinehu@193.19.109.13) (Ping timeout: 260 seconds)
[21:11:06] <qswz> why do I spend most my time choosing a fucking way to do shit
[21:12:49] *** Joins: machinehum (~machinehu@2604:3d08:937e:d600::4da2)
[21:12:52] *** Joins: Booster2ooo (~Booster2o@user/booster2ooo)
[21:13:35] *** Joins: bynx (~bynx@fw.rry.vaskywire.net)
[21:19:59] *** Quits: yaalon (~yaalon@cpe-70-121-160-255.satx.res.rr.com) (Remote host closed the connection)
[21:20:18] *** Quits: ThePhilgrim (~ThePhilgr@151.41.4.252) (Ping timeout: 268 seconds)
[21:20:39] *** Joins: yaalon (~yaalon@cpe-70-121-160-255.satx.res.rr.com)
[21:22:28] *** Quits: salad (~cucumber@86.121.64.41) (Quit: salad)
[21:23:04] <qswz> overengineering shit
[21:24:36] *** Quits: thiras (~thiras@user/thiras) (Ping timeout: 268 seconds)
[21:27:42] *** Quits: yaalon (~yaalon@cpe-70-121-160-255.satx.res.rr.com) (Ping timeout: 268 seconds)
[21:28:07] *** Quits: dimi1947 (~dimi1947@2a02:1388:2093:2a29:c1d3:dde7:8324:e31c) (Read error: Connection reset by peer)
[21:31:13] *** Joins: whatsupdoc (uid509081@id-509081.hampstead.irccloud.com)
[21:33:24] *** Quits: han-solo (~hanish@user/han-solo) (Quit: leaving)
[21:36:49] *** Quits: Crash1hd_ (~Crash1hd@64.56.153.179) (Ping timeout: 256 seconds)
[21:41:50] *** Joins: pez (~pez@user/pez)
[21:42:09] *** Quits: ___nick___ (~quassel@cpc68286-cdif17-2-0-cust533.5-1.cable.virginm.net) (Quit: https://quassel-irc.org - Chat comfortably. Anywhere.)
[21:42:34] <ljharb> qswz: why would you be passing other props ever
[21:43:03] <ljharb> qswz: you shouldn't be dynamically passing props to a dynamic component name, that's sloppy
[21:43:35] *** Joins: ___nick___ (~quassel@cpc68286-cdif17-2-0-cust533.5-1.cable.virginm.net)
[21:43:50] <pez> Hi! Trying to create an object with the key being a variable, but JS uses the variable name literally.  (i.e.: {varname: value} will render as {varname: 15}
[21:43:57] *** Quits: ___nick___ (~quassel@cpc68286-cdif17-2-0-cust533.5-1.cable.virginm.net) (Client Quit)
[21:45:19] *** Joins: ___nick___ (~quassel@cpc68286-cdif17-2-0-cust533.5-1.cable.virginm.net)
[21:45:35] <pez> i can just use an intermediate step too build the final object, but i thought there might be a better way
[21:45:51] <qswz> ljharb: yea I fixe dit
[21:45:58] <qswz> fixed it*
[21:46:16] *** Joins: ThePhilgrim (~ThePhilgr@151.41.4.252)
[21:46:31] <qswz> but yea I know your convention of not passing all props
[21:46:57] <silly> pez, computed property names is what you want
[21:47:03] <qswz> that 's not related here
[21:47:24] *** Joins: nomic (~nomic@185.198.243.6)
[21:47:50] <qswz> const Foo = ({as: C = DefaultC, foo}) => <C ...>..</C>
[21:47:52] <silly> n> const x = 'abc'; ({[x]: 1})
[21:47:53] <jellobot> (okay) { abc: 1 }
[21:48:06] <pez> silly: ahhh yes that looks like it's exactly what i need! cheers! :)
[21:49:42] *** Quits: stewie925 (~stewie925@2600:1702:44f0:35c0:3dfe:56d8:f73a:2910) (Quit: Client closed)
[21:50:59] *** Quits: ThePhilgrim (~ThePhilgr@151.41.4.252) (Ping timeout: 256 seconds)
[21:51:14] *** Joins: comatory (~ondrejsyn@217.11.241.69)
[21:55:23] *** Joins: sheetjs (~sheetjs@user/sheetjs)
[21:55:29] <qswz> ljharb: what I meanthttps://dpaste.org/bhzN
[21:56:05] *** Joins: vqueiroz (uid340368@id-340368.hampstead.irccloud.com)
[21:56:34] *** Quits: comatory (~ondrejsyn@217.11.241.69) (Ping timeout: 260 seconds)
[22:00:45] *** Joins: dpuerto (~dpuerto@136-27-83-52.cab.webpass.net)
[22:02:18] *** Joins: Danishman (~Danishman@2-104-144-110-cable.dk.customer.tdc.net)
[22:03:06] *** Joins: binary01 (~binary01@192.110.171.216)
[22:03:46] *** Joins: sam_1 (~sam_1@87.51.251.118)
[22:05:09] *** Quits: dpuerto (~dpuerto@136-27-83-52.cab.webpass.net) (Ping timeout: 256 seconds)
[22:05:49] *** Joins: stewie925 (~stewie925@2600:1702:44f0:35c0:3dfe:56d8:f73a:2910)
[22:06:50] *** Quits: binary01 (~binary01@192.110.171.216) (Client Quit)
[22:07:54] *** Quits: Swahili (~Swahili@cpc153693-lewi20-2-0-cust508.2-4.cable.virginm.net) (Quit: Leaving...)
[22:11:29] *** Quits: sam_1 (~sam_1@87.51.251.118) (Ping timeout: 268 seconds)
[22:13:44] *** Joins: Crash1hd_ (~Crash1hd@S0106a84e3f475583.cg.shawcable.net)
[22:15:04] *** Joins: Crash1hd__ (~Crash1hd@64.56.153.179)
[22:16:00] *** Quits: arthur_melo (~IRC@user/arthur-melo/x-6822691) (Quit: arthur_melo)
[22:17:24] *** Joins: electrostatic (~electrost@2601:600:8600:5a1:b9b6:ba61:b86a:9d31)
[22:18:52] *** Quits: earendel (uid498179@user/earendel) (Quit: Connection closed for inactivity)
[22:18:52] *** Quits: Crash1hd_ (~Crash1hd@S0106a84e3f475583.cg.shawcable.net) (Ping timeout: 268 seconds)
[22:19:49] *** Joins: ThePhilgrim (~ThePhilgr@151.41.4.252)
[22:20:00] *** Joins: zeromule (~eric@2601:602:8d80:4e50:d1b3:9aed:31d:c2c9)
[22:21:57] *** Quits: Nimzowitsch (~nimzo@user/nimzowitsch) (Ping timeout: 268 seconds)
[22:24:34] *** Quits: ThePhilgrim (~ThePhilgr@151.41.4.252) (Ping timeout: 260 seconds)
[22:28:07] *** Quits: electrostatic (~electrost@2601:600:8600:5a1:b9b6:ba61:b86a:9d31) (Ping timeout: 268 seconds)
[22:28:46] *** Quits: zer0bitz (~zer0bitz@dsl-hkibng31-54fae3-116.dhcp.inet.fi) (Ping timeout: 260 seconds)
[22:33:16] *** Quits: onizu (uid373383@id-373383.uxbridge.irccloud.com) (Quit: Connection closed for inactivity)
[22:35:06] *** Quits: themaxdavitt_ (sid433050@hampstead.irccloud.com) (Ping timeout: 245 seconds)
[22:35:06] *** Quits: ljharb (sid43720@user/ljharb) (Ping timeout: 245 seconds)
[22:35:06] *** Quits: morgabra (sid500580@user/morgabra) (Ping timeout: 245 seconds)
[22:35:13] *** Quits: shokohsc8 (~shokohsc@161.88.195.77.rev.sfr.net) (Quit: The Lounge - https://thelounge.chat)
[22:35:33] *** Joins: morgabra (sid500580@user/morgabra)
[22:35:35] *** Joins: ljharb (sid43720@user/ljharb)
[22:35:38] *** Joins: themaxdavitt_ (sid433050@id-433050.hampstead.irccloud.com)
[22:40:38] *** Joins: phantomotap (~phantomot@c-68-35-28-201.hsd1.al.comcast.net)
[22:43:20] *** Joins: shokohsc8 (~shokohsc@161.88.195.77.rev.sfr.net)
[22:47:45] *** Joins: yaalon (~yaalon@cpe-70-121-160-255.satx.res.rr.com)
[22:47:57] *** Joins: voltage (voltage@user/voltage)
[22:49:26] *** Quits: kmh (~kmh@2a00:6020:5004:6800:4f37:dee:2cfd:c127) (Quit: Leaving)
[22:50:27] *** Joins: voltage__ (voltage@user/voltage)
[22:50:31] *** Joins: Sven_vB (~sven@user/sven-vb/x-2094958)
[22:50:38] *** Quits: voltage (voltage@user/voltage) (Killed (NickServ (GHOST command used by voltage__)))
[22:50:40] *** Quits: voltage_ (voltage@user/voltage) (Killed (NickServ (GHOST command used by voltage__)))
[22:50:44] *** voltage__ is now known as voltage_
[22:50:50] *** Quits: stewie925 (~stewie925@2600:1702:44f0:35c0:3dfe:56d8:f73a:2910) (Quit: Client closed)
[22:51:03] *** Joins: harpia (~harpia@2804:2aec:205:1400:1a8b:e47a:9188:7f77)
[22:51:30] *** Quits: Sven_vB_ (~sven@user/sven-vb/x-2094958) (Ping timeout: 276 seconds)
[22:53:13] *** Joins: Guest4615 (~Guest46@pool-108-7-37-172.bstnma.fios.verizon.net)
[22:53:24] *** Quits: dostoyevsky2 (~sck@user/dostoyevsky2) (Ping timeout: 268 seconds)
[22:54:55] *** Joins: dostoyevsky2 (~sck@user/dostoyevsky2)
[22:55:59] *** Joins: kakashiAL (~kakashi@ip-37-201-199-21.hsi13.unitymediagroup.de)
[22:57:21] *** Quits: gxt (~gxt@gateway/tor-sasl/gxt) (Ping timeout: 276 seconds)
[22:58:20] *** Joins: stewie925 (~stewie925@2600:1702:44f0:35c0:3dfe:56d8:f73a:2910)
[22:59:18] *** Joins: gxt (~gxt@gateway/tor-sasl/gxt)
[23:00:11] *** Joins: zer0bitz (~zer0bitz@dsl-hkibng31-54fae3-116.dhcp.inet.fi)
[23:02:03] *** Quits: yaalon (~yaalon@cpe-70-121-160-255.satx.res.rr.com) (Remote host closed the connection)
[23:03:31] *** Joins: Naan (~naan@user/naan)
[23:05:47] *** Quits: stenno\OK (~stenno@user/stenno) (Ping timeout: 264 seconds)
[23:09:22] *** Joins: yaalon (~yaalon@cpe-70-121-160-255.satx.res.rr.com)
[23:10:15] *** Joins: mikey__ (~mikey__@user/mikey/x-6463285)
[23:13:08] *** Quits: Crash1hd__ (~Crash1hd@64.56.153.179) (Ping timeout: 268 seconds)
[23:13:10] <ttys000> how do i post formdata as json without a framework, without jquery, etc.
[23:13:15] *** Joins: stenno\OK (~stenno@user/stenno)
[23:13:25] <ttys000> when i use fetch + new FormData ...
[23:13:36] <ttys000> it sends it as a multipart form data
[23:13:38] <ttys000> not as json
[23:14:13] *** Quits: pizdets (~pizdets@183.182.115.116) (Ping timeout: 250 seconds)
[23:14:46] <ljharb> qswz: bah put spaces around links
[23:15:00] <ljharb> qswz: so i see what you mean; i'm saying i think that's an antipattern
[23:15:04] *** Joins: pizdets (~pizdets@183.182.111.233)
[23:15:25] <ljharb> qswz: dynamically passing props or a component is sketchy enough, dynamically doing both is almost certainly a problem
[23:15:44] *** Joins: Crash1hd__ (~Crash1hd@S0106a84e3f475583.cg.shawcable.net)
[23:16:58] *** Quits: incognito (~relativit@user/incognito) (Quit: Going offline, see ya! (www.adiirc.com))
[23:17:04] *** Joins: Crash1hd_ (~Crash1hd@64.56.153.179)
[23:17:18] *** Quits: shokohsc8 (~shokohsc@161.88.195.77.rev.sfr.net) (Quit: The Lounge - https://thelounge.chat)
[23:17:49] *** Joins: mickey81 (~user@user/mickey)
[23:18:05] *** Quits: Hanii (~textual@2a00:23c5:c587:6d00:d558:b250:bcbb:4255) (Quit: Textual IRC Client: www.textualapp.com)
[23:18:46] *** Joins: incognito (~relativit@user/incognito)
[23:19:20] <qswz> ljharb: ok I see
[23:19:58] <qswz> you don't like the as prop (popularized with styled-components, emotion, ..)
[23:20:20] <qswz> react-router has element prop
[23:20:30] *** Quits: Crash1hd__ (~Crash1hd@S0106a84e3f475583.cg.shawcable.net) (Ping timeout: 260 seconds)
[23:20:45] *** Quits: mickey8 (~user@user/mickey) (Ping timeout: 276 seconds)
[23:20:46] *** mickey81 is now known as mickey8
[23:20:56] *** Quits: mikey__ (~mikey__@user/mikey/x-6463285) (Remote host closed the connection)
[23:21:21] *** Joins: mikey__ (~mikey__@user/mikey/x-6463285)
[23:21:42] <qswz> https://reactrouter.com/docs/en/v6/api#routes-and-route
[23:22:06] <ttys000> ok guys, take a look at this tiny bit of code please: http://ix.io/3E8O
[23:22:13] <qswz> well element is for the children, different
[23:22:15] <ttys000> i am trying to take a form, and post it as json.
[23:22:29] <ljharb> qswz: i think if you want to render an element you should
[23:22:36] <ttys000> it seems crazy that javascript has a built in FormData method to fetch the values of the form.
[23:22:37] <ljharb> qswz: asking another component to render one for you makes no sense
[23:22:41] <ljharb> ttys000: it doesn't
[23:22:46] <ljharb> ttys000: that's the Web, not JS
[23:22:50] <qswz> ttys000: fetch handle form data automatically
[23:22:57] <ttys000> but i have to manually loop through this object and convert it to json?
[23:23:00] <qswz> don't even set the header
[23:23:35] <qswz> fetch(url, {method, body: formData})
[23:23:37] *** Quits: zeromule (~eric@2601:602:8d80:4e50:d1b3:9aed:31d:c2c9) (Ping timeout: 268 seconds)
[23:23:43] <ttys000> that sends it not as json
[23:23:49] <ttys000> that sends it as multipart form data
[23:23:58] <qswz> ttys000: so why did you use FormData?
[23:24:00] <jaawerth> ttys000: for one thing, I think the ! before response.ok is the problem there - you probably want to reject if response.ok is false
[23:24:08] <ljharb> ttys000: iterate. not loop
[23:24:13] <ttys000> qswz i just want to get the contents of a form and post it to a backend.
[23:24:18] <jaawerth> oh wait no I see
[23:24:24] <ljharb> ttys000: why is your backend so incomplete that it can't accept form data?
[23:24:25] <qswz> there's form.elements
[23:24:45] <ttys000> lol blaming the backend is nice.
[23:24:58] <qswz> for (const el of form.elements) console.log(el.name, el.value)
[23:24:58] <jaawerth> I guess that would make sense if the response sends, like, 400 messages that also have a json payload, so ignore me
[23:24:59] <ttys000> i should call up the backend dev and blame him. i'm sure that will go over well.
[23:25:17] <ljharb> ttys000: considering the backend's SOLE purpose is to cater to the frontend
[23:25:34] <ljharb> ttys000: a browser is the most important client, browsers use forms
[23:25:37] <ttys000> you guys crack me up. what happens when you meet an api in public that only allows json posts?
[23:25:40] <ttys000> you just don't use it?
[23:25:44] <ljharb> yep, i find a better api
[23:25:47] <ttys000> LOL
[23:26:02] *** Joins: Crash1hd__ (~Crash1hd@S0106a84e3f475583.cg.shawcable.net)
[23:26:05] <ljharb> but there's tons of libraries that can convert form data to json
[23:26:21] <ttys000> but not with the built in FormData
[23:26:30] <qswz> do you read?
[23:27:06] <qswz> but yea you need to construct the json
[23:27:19] <ttys000> ok. so what i'm doing is the way to do it?
[23:27:36] <jaawerth> I mean, I agree that the DOM api should have a built-in for the simple conversion case, but that isn't not JS itself/tc39, that is the DOM/whatwg.
[23:27:41] <qswz> there's nothing simpler than Object.fromEntries(form.elements.map(el => [el.name, el.value])
[23:27:50] <ljharb> ^ that's pretty easy
[23:28:10] <jaawerth> ^ that'll do it. or you can build it up with forEach if you prefer but I like the above better
[23:28:18] <qswz> I asked whatWG for a native HTML json form submit
[23:28:31] <systemfault> Maybe before 2050
[23:28:41] <qswz> https://github.com/whatwg/html/issues/1667
[23:28:45] <qswz> I didn't but someone did
[23:28:54] *** Quits: Crash1hd_ (~Crash1hd@64.56.153.179) (Ping timeout: 260 seconds)
[23:29:27] *** Joins: ThePhilgrim (~ThePhilgr@151.41.4.252)
[23:29:43] <ttys000> ok thanks.
[23:30:49] <systemfault> The WHATWG hasn't, yet, added builtin support for a pattern that absolutely NOBODY uses: Event delegation.... because it's too new
[23:30:58] <jaawerth> actuallly it's even cleaner with FOrmData - JSON.stringify(Object.fromEntries(formData))
[23:31:29] <jaawerth> that will just work, since Symbol.iterator is the same as formData.entries(), and all Object.fromEntries needs is an iterable of k/v pairs
[23:31:50] <systemfault> That's fun, forgot that forData was iterable
[23:31:59] <systemfault> *FormData even
[23:32:01] <ttys000> ok. nice!
[23:32:48] <qswz> oh correct
[23:33:33] <jaawerth> granted this assumes either modernish browsers or the presence of a DOM polyfill - stuff like formData.entries() doesn't work on e.g. IE11 out of teh box iirc
[23:33:43] <jaawerth> !ciu FormData.entries
[23:33:57] *** Joins: jazzy3 (~jaziz@user/jaziz)
[23:34:12] <jaawerth> thanos-fine-ill-do-it-myself.gif https://caniuse.com/mdn-api_formdata_entries
[23:35:01] *** Quits: yaalon (~yaalon@cpe-70-121-160-255.satx.res.rr.com) (Read error: Connection reset by peer)
[23:35:02] *** Joins: yaalon_ (~yaalon@cpe-70-121-160-255.satx.res.rr.com)
[23:38:16] *** Joins: mickey89 (~user@user/mickey)
[23:38:39] *** Quits: mickey8 (~user@user/mickey) (Remote host closed the connection)
[23:38:39] *** mickey89 is now known as mickey8
[23:38:44] <silly> !ciu FormData.entries
[23:39:46] *** Joins: EgonX_ (~EgonX@2601:2c6:47f:879e:cdc8:2b47:7cb6:5714)
[23:39:52] *** Quits: ThePhilgrim (~ThePhilgr@151.41.4.252) (Quit: Leaving)
[23:40:06] *** Quits: EgonX (~EgonX@2601:2c6:47f:879e:384b:7065:9079:1df8) (Ping timeout: 245 seconds)
[23:40:11] *** Joins: ThePhilgrim (~ThePhilgr@151.41.4.252)
[23:40:31] *** Joins: kmh (~kmh@2a00:6020:5004:6800:1ed:56cf:ba48:c904)
[23:41:46] *** Quits: Icedream (~icedream@hzn-b.serverkomplex.de) (Quit: A lol made me boom.)
[23:42:13] *** jazzy3 is now known as jazzy
[23:43:04] *** Joins: Icedream (~icedream@hzn-b.serverkomplex.de)
[23:44:23] *** Joins: AnselmoCampanas (~AnselmoCa@190.99.69.41)
[23:45:01] *** Joins: wildo (~lain6141@119.224.72.222)
[23:46:36] *** Joins: jazzy4 (~jaziz@user/jaziz)
[23:48:24] *** Joins: shokohsc8 (~shokohsc@161.88.195.77.rev.sfr.net)
[23:49:35] *** Quits: jazzy (~jaziz@user/jaziz) (Ping timeout: 264 seconds)
[23:49:44] *** jazzy4 is now known as jazzy
[23:52:01] *** Quits: kogepan (~kogepan@user/kogepan) (Remote host closed the connection)
[23:52:13] *** Quits: incognito (~relativit@user/incognito) (Quit: Going offline, see ya! (www.adiirc.com))
[23:54:07] *** Quits: AnselmoCampanas (~AnselmoCa@190.99.69.41) (Quit: Client closed)
[23:58:36] *** Joins: kogepan (~kogepan@user/kogepan)
