[00:00:28] <mat001> hmm, it's this test: https://github.com/optimizely/python-sdk/blob/4470ca9b61f35951f54a2b953c55cbfb3a7b1b98/tests/test_decision_service.py#L1284-L1291
[00:00:58] <whatsupdoc> Is it possible to convert a Counter() object back into a list?
[00:01:12] <mat001> Wooble: BEfore I refactored the code the etst tests, the memory address of the Experiment obects was the same. Now it's diff.
[00:01:59] <whatsupdoc> [1,1,1,3,2] = {1:3, 3:1, 2:1} => [1,1,1,3,2]
[00:02:16] <Wooble> mat001: that could be a sign you're copying things, which might waste memory but is probably fine functionally.
[00:02:17] <whatsupdoc> list({1:3, 3:1, 2:1}) = [1,3,2]
[00:02:19] *** Quits: Hunterkll (~hunterkll@2001:470:8b06:100:2958:1194:aedf:1fa3) (Ping timeout: 252 seconds)
[00:02:24] <mat001> Wooble: I think I need to find out if the object needs to be the same. I'm not sure atm. I'm also not sure if diff mem address means there's a bug...
[00:02:45] <mat001> Wooble: interesting, yes I do copy
[00:02:56] <Wooble> whatsupdoc: list(counter.elements())  but you'll lose the order.
[00:03:27] <Repiphany> Counters keep insertion order like dicts
[00:03:30] *** Joins: stormdancer (~stormdanc@185.245.86.121)
[00:03:38] <sartan> dumb question when would a Counter() object not return range(max(counter()) [pseudo] ?
[00:03:52] <Wooble> Repiphany: ok it will work in that case but like [1,2,3,1,2,3] won't come out the same.
[00:04:11] <Repiphany> Come out the same as what
[00:04:24] <Wooble> Repiphany: when it goes into a Counter and back out as a list.
[00:04:46] <Wooble> Repiphany: (I don't know if this matters but whatsupdoc's earlier examples might suggest it does.)
[00:04:50] <Repiphany> I mean there isn't any expectation of order from my understanding of the original question
[00:05:31] *** Joins: CaryHartline (~CaryHartl@2603-8080-6a0e-8d88-fce5-8f43-3546-c881.res6.spectrum.com)
[00:05:38] <whatsupdoc> I wanna learn both I guess
[00:05:40] <Wooble> blei: YAML?
[00:05:49] <Repiphany> The information of order in [1,2,3,1,2,3] is obviously lost when you go to a counter
[00:06:21] <Wooble> whatsupdoc: if you need the order, Counter becomes a less good solution to your original problem. :)
[00:06:23] <blei> any alternative ways (ie 3rd party modules) to express nested dicts /lists
[00:06:43] *** Quits: sandb0y (~pirate@user/sandb0y) (Ping timeout: 252 seconds)
[00:06:59] *** Quits: Haxxa (~Haxxa@122.199.45.48) (Quit: Haxxa flies away.)
[00:07:10] *** Quits: Bode_Cleu (~Code_Bleu@user/code-bleu/x-6939963) (Ping timeout: 258 seconds)
[00:07:56] *** Quits: stormdancer (~stormdanc@185.245.86.121) (Ping timeout: 258 seconds)
[00:08:48] *** Joins: djapo (~archangel@user/djapo)
[00:08:50] *** Joins: Haxxa (~Haxxa@89nnjg0xckz9ggn6r5xm.ip6.superloop.com)
[00:09:02] <whatsupdoc> Can you rely on dictionaries to retain order?
[00:09:17] <blei> from collections import OrderedDict
[00:09:40] <kosh> that is obsolete now, dictionaries maintain order
[00:09:45] <whatsupdoc> but what about dict()
[00:10:17] <blei> https://docs.python.org/3/library/collections.html#collections.OrderedDict
[00:10:26] <Wooble> whatsupdoc: the Counter retains insertion order, but by its nature each element is inserted exactly once and more copies just go to the same place the first one was...
[00:10:30] <blei> don't rely on order in dict()
[00:10:41] *** Joins: jetchisel (jetchisel@user/jetchisel)
[00:10:52] <Repiphany> Insertion order is part of the language standard
[00:11:16] <SnoopJ> but interpreters that predate this behavior are still around
[00:11:37] <Wooble> OTOH, probably stop using them by now :P
[00:11:43] *** Joins: Kharon (uid511277@user/cypris)
[00:11:58] <SnoopJ> Two months left on 3.6 by the life cycle's ruler, which probably means several more years of it :)
[00:12:03] <kosh> 3.5 and above maintains insertion order as of 3.7 that is a language feature
[00:12:14] <SnoopJ> kosh, the property was introduced in 3.6
[00:12:15] <Wooble> I thought it was guaranteed as of 3.6
[00:12:21] <SnoopJ> 3.7 is when it becomes a guarantee
[00:12:25] <blei> if you are the only user of your code, go for it; but otherwise, you must check the version of python and bail
[00:12:28] <SnoopJ> it's a CPython implementataion detail in 3.6
[00:12:33] <kosh> I thought it was added in 3.5 and became a feature in 3.7
[00:12:42] <blei> otoh, OrderedDict is ancient
[00:13:05] <kosh> or just set the minimum python versino for your packaged to 3.7 or higher
[00:13:07] <SnoopJ> kosh, nope: https://docs.python.org/3/whatsnew/3.6.html#new-dict-implementation
[00:13:12] <kosh> ah ok
[00:13:56] *** Quits: darksun (~darksun@user/darksun) (Quit: leaving)
[00:15:26] *** Quits: Kharon (uid511277@user/cypris) (Client Quit)
[00:15:37] *** Joins: Kharon (uid511277@user/cypris)
[00:19:49] *** Quits: kosh (~kosh@user/kosh) (Ping timeout: 258 seconds)
[00:19:52] *** Joins: Bode_Cleu (~Code_Bleu@user/code-bleu/x-6939963)
[00:21:37] *** Quits: ali12341 (~al@user/ali1234) (Remote host closed the connection)
[00:21:56] *** Joins: lucasb (uid333435@id-333435.hampstead.irccloud.com)
[00:22:07] *** Joins: ali1234 (~al@user/ali1234)
[00:23:16] *** Quits: fikran (~fikran@user/fikran) (Ping timeout: 258 seconds)
[00:23:20] *** Quits: Barones (~Barones@2804:48dc:8500:0:5635:5e6d:7349:856) (Remote host closed the connection)
[00:23:34] *** Joins: rpkilby (~rpkilby@c-24-20-208-106.hsd1.or.comcast.net)
[00:25:19] *** Joins: fikran (~fikran@user/fikran)
[00:26:32] *** Quits: Bronto22 (~mennoh@84-86-247-193.fixed.kpn.net) (Quit: Konversation terminated!)
[00:26:40] *** Joins: jay-m1262 (~jay-m@129.0.204.218)
[00:27:08] *** Quits: bilb_ono (~alexmarsh@ip184-189-224-55.sb.sd.cox.net) (Quit: bilb_ono)
[00:28:57] *** Joins: Barones (~Barones@2804:48dc:8500:0:5635:5e6d:7349:856)
[00:29:13] *** Joins: bilb_ono (~alexmarsh@ip184-189-224-55.sb.sd.cox.net)
[00:29:17] *** Quits: src (~src@user/src) (Quit: Leaving)
[00:29:21] <mat001> Wooble: dir-s of Experiment objects in py3.5.5 are also identical. I'll keep digging...
[00:30:09] *** Quits: Barones (~Barones@2804:48dc:8500:0:5635:5e6d:7349:856) (Remote host closed the connection)
[00:30:31] *** Joins: Barones (~Barones@2804:48dc:8500:0:5635:5e6d:7349:856)
[00:30:36] *** Joins: zln (~zln@c80-217-230-193.bredband.tele2.se)
[00:31:37] *** Joins: jamiejackson (~jamiejack@207.172.87.34)
[00:31:39] *** Quits: Barones (~Barones@2804:48dc:8500:0:5635:5e6d:7349:856) (Remote host closed the connection)
[00:31:42] *** Quits: carl- (~carl-@c-138ee555.02-180-73746f39.bbcust.telenor.se) (Ping timeout: 258 seconds)
[00:31:57] *** Joins: Barones (~Barones@2804:48dc:8500:0:5635:5e6d:7349:856)
[00:32:00] *** Joins: greknod28 (~grek@120.88.171.98)
[00:33:26] <jamiejackson> what's the proper syntax for coercing a function to create an exception in the context of unit test mocking? i've been struggling for an hour to try to adapt examples to my use case.
[00:33:35] <jamiejackson> here's the pseudocode i've got: https://gist.github.com/jamiejackson/4a812d299ca739b04826acdfe5e813d6
[00:33:57] *** Quits: blindguard (~blindguar@2a02:908:1864:c200::2612) (Quit: Konversation terminated!)
[00:34:53] *** Quits: Moyst (~moyst@user/moyst) (Ping timeout: 264 seconds)
[00:35:50] *** Quits: grooverman (~grooverma@177.102.119.49) (Read error: Connection reset by peer)
[00:37:52] *** Quits: aniruddha (uid340443@id-340443.ilkley.irccloud.com) (Quit: Connection closed for inactivity)
[00:38:13] *** Joins: Moyst (~moyst@user/moyst)
[00:38:41] *** Quits: urth (~urth@geertswei.nl) (Quit: urth)
[00:39:30] *** Quits: otisolsen70 (~otisolsen@xd4ed80b5.cust.hiper.dk) (Quit: Leaving)
[00:39:58] *** Quits: horseface (~horseface@user/horseface) (Ping timeout: 260 seconds)
[00:40:49] *** Quits: Haxxa (~Haxxa@89nnjg0xckz9ggn6r5xm.ip6.superloop.com) (Quit: Haxxa flies away.)
[00:41:29] *** Joins: merijn (~merijn@83-160-49-249.ip.xs4all.nl)
[00:41:31] *** Joins: Haxxa (~Haxxa@122.199.45.48)
[00:42:23] *** Quits: arinov (~arinov@213.194.126.155) (Ping timeout: 264 seconds)
[00:42:34] *** Kharon is now known as curiosity
[00:42:52] <Macuser> works in the interpreter but not in my while loop
[00:44:15] *** Joins: NeoCore (~neocore@37.120.204.252)
[00:47:11] *** Quits: manti7 (~manti7@176.10.104.94) (Quit: WeeChat 3.3)
[00:47:11] *** Quits: Haxxa (~Haxxa@122.199.45.48) (Ping timeout: 264 seconds)
[00:47:17] *** Joins: nomic (~nomic@185.217.117.204)
[00:47:21] *** Quits: CaryHartline (~CaryHartl@2603-8080-6a0e-8d88-fce5-8f43-3546-c881.res6.spectrum.com) (Quit: My iMac has gone to sleep. ZZZzzzâ€¦)
[00:47:31] *** Joins: adiKt (uid472628@id-472628.tinside.irccloud.com)
[00:47:54] <CrtxReavr> Hey CodeMouse92.
[00:49:35] *** Joins: asdf` (~asdf@trewq.pl)
[00:49:35] *** Quits: Gurkenglas (~Gurkengla@dslb-002-203-144-204.002.203.pools.vodafone-ip.de) (Ping timeout: 264 seconds)
[00:51:25] *** Seto_Kaiba is now known as Hunterkll
[00:52:11] *** Parts: asdf` (~asdf@trewq.pl) ()
[00:52:42] *** Joins: horseface (~horseface@user/horseface)
[00:54:19] *** Quits: molt (~molt@178-222-245-206.static.isp.telekom.rs) (Ping timeout: 258 seconds)
[00:54:56] *** Quits: marcello42 (~mp@p200300dfaf0e520178b80e9c76b5e17e.dip0.t-ipconnect.de) (Remote host closed the connection)
[00:55:10] *** Joins: PortableDave (~portabled@194-193-148-202.tpgi.com.au)
[00:55:16] *** Joins: marcello42 (~mp@p200300dfaf0e520178b80e9c76b5e17e.dip0.t-ipconnect.de)
[00:56:14] *** Quits: elastic_dog (~elastic_d@2a01:118f:822:9c00:f583:aa51:9ad4:d4fb) (Ping timeout: 258 seconds)
[00:56:40] *** Joins: elastic_dog (~elastic_d@2a01:118f:822:9c00:f583:aa51:9ad4:d4fb)
[00:58:47] *** Quits: PortableDave (~portabled@194-193-148-202.tpgi.com.au) (Client Quit)
[01:01:45] *** Quits: ckdCreations (~ckdCreati@147.55.133.139) (Read error: Connection reset by peer)
[01:01:45] *** Joins: tartley (~tartley@131.93.49.255)
[01:02:00] *** Joins: ckdCreations (~ckdCreati@c-24-17-50-149.hsd1.wa.comcast.net)
[01:02:30] *** Joins: urth (~urth@geertswei.nl)
[01:02:35] *** Joins: raxor2k (~raxor2k@78.158.254.247)
[01:02:47] <raxor2k> is there an way to send post request without having to wait for response?
[01:03:02] <grym> raxor2k: what's the point?
[01:03:12] *** Quits: c10l (~c10l@user/c10l) (Quit: The Lounge - https://thelounge.chat)
[01:03:40] <madprops> maybe you want to send some data and do nothing with the response
[01:03:46] *** Joins: c10l (~c10l@user/c10l)
[01:04:03] <raxor2k> grym: im just sending a list with large amount of data from an api1 to api2(api2 will take care of the data)
[01:04:12] <raxor2k> there is no need for api1 to know what api2 will do with the data
[01:04:21] <grym> so api2 should return fast, then
[01:04:52] <grym> i have endpoints like this, where clients post a small amount of data, 2-12 hours pass, and then the answer is available.
[01:04:52] <raxor2k> grym: and what it api2 is going to push around 200++ data to a DB?
[01:04:54] <raxor2k> i mean come on
[01:05:42] <grym> raxor2k: i return immediately with a uuid4 ticket that's a key into an in-memory store.  "we got your data and we're working on it; if you want to know more, hit /poll/{ticket}"
[01:06:21] *** Quits: ckdCreations (~ckdCreati@c-24-17-50-149.hsd1.wa.comcast.net) (Ping timeout: 245 seconds)
[01:06:30] *** Joins: ckdCreations (~ckdCreati@147.55.133.140)
[01:06:32] <grym> so yeah the job takes literally hours to run, but you get your ticket in 50 ms or whatever
[01:06:58] <raxor2k> grym: i repeat: i dont need anything in return
[01:07:10] <grym> raxor2k: not even 200? :)
[01:07:13] <grym> maybe the server's offline
[01:07:23] <grym> maybe the dog ate your wifi modem
[01:07:26] <raxor2k> grym: nothing
[01:07:29] <raxor2k> absolutely nothing
[01:07:36] <grym> great; i don't know or care, glhf
[01:08:25] *** Joins: Haxxa (~Haxxa@122.199.45.48)
[01:08:31] *** Quits: snalty (~Shhh@user/snalty) (Ping timeout: 265 seconds)
[01:08:35] <raxor2k> thats it ?
[01:09:16] <blei> my code has a lot of configuration boilerplate expressed as nested dicts/lists and i am looking for a better way to do that
[01:09:17] <blei>  in python via a 3rd party module probably
[01:09:18] <grym> i mean, i don't think it's possible, and so i'm not interested any more
[01:09:32] <Macuser> why tf would a while loop change the way this function executes
[01:09:34] *** Quits: upsala (~zcb@185.213.155.160) (Quit: WeeChat 3.3)
[01:10:04] <raxor2k> grym: why did you bother to ask then?
[01:10:10] <grym> blei: marshalling configurations to/from text to nested classes is fairly normal; things like pydantic or attrs/desert are good at this
[01:10:51] *** Quits: stdout (~stdout@216.163.21.11) (Quit: Leaving)
[01:11:10] *** Quits: Moosadee (~Moosadee@136.32.155.193) (Remote host closed the connection)
[01:11:12] *** Joins: Alex123 (~Adium@2603-8000-d141-2a00-a572-5d4a-e107-a0e4.res6.spectrum.com)
[01:11:40] <Stench> raxor2k: they were trying to help you. Being so hostile to volunteer helpers is not a good way to get more people to volunteer to help you. :P
[01:12:04] *** Joins: Moosadee (~Moosadee@136.32.155.193)
[01:12:26] <blei> grym tx
[01:13:05] *** Quits: Sheilong (uid293653@id-293653.ilkley.irccloud.com) (Quit: Connection closed for inactivity)
[01:13:13] <grym> blei: iirc you're working in weirdo-python land, right?  i forget if either of those are pure python or not, but i think they ought to be
[01:13:14] *** Quits: gitesh (uid423739@id-423739.ilkley.irccloud.com) (Quit: Connection closed for inactivity)
[01:13:42] *** Quits: tartley (~tartley@131.93.49.255) (Quit: Leaving)
[01:14:00] *** Joins: PantelicGR (~PantelicG@user/pantelicgr)
[01:14:02] *** Joins: snalty (~Shhh@user/snalty)
[01:14:43] <SnoopJ> blei, what are you doing with these nested structures? building? accessing?
[01:14:50] *** Parts: adhawkins (~adhawkins@user/adhawkins) (The Lounge - https://thelounge.chat)
[01:14:55] <SnoopJ> oh, you said it's configuration
[01:15:01] *** Quits: merijn (~merijn@83-160-49-249.ip.xs4all.nl) (Ping timeout: 258 seconds)
[01:15:07] *** Joins: soltys (soltys@user/soltys)
[01:15:11] *** Parts: soltys (soltys@user/soltys) (WeeChat 3.4-dev)
[01:15:16] <blei> they are getting sent over the internet as json
[01:15:33] <SnoopJ> blei, okay. what don't you like about how you're doing it now?
[01:16:08] <grym> blei: do you have something like a jsonschema or swagger thing to accompany this data?
[01:16:11] <blei> just exploring other options; i am perfectly fluent with nested lists / dicts in emacs but it is a lot of boilerplate actually
[01:16:37] *** Quits: seabass (~seabass@user/seabass) (Quit: leaving)
[01:17:05] <blei> no i am hitting live APIs, I construct param dicts, cache results and use trial / error
[01:17:25] *** Quits: Alex123 (~Adium@2603-8000-d141-2a00-a572-5d4a-e107-a0e4.res6.spectrum.com) (Quit: Leaving.)
[01:17:47] *** Joins: Alex123 (~Adium@2603-8000-d141-2a00-a572-5d4a-e107-a0e4.res6.spectrum.com)
[01:17:53] <SnoopJ> blei, tell us more about what makes it "boilerplate." It isn't obvious from the whiff of the structures you've given us (these are both perfectly good structures for arranging configuration data in general) what is bothering you
[01:18:14] <SnoopJ> And "better" depends on the view of the problem from where you're standing
[01:18:25] <blei> that means that my first implementation was 1k lines, and now, on my 5th, i'm down to 300-400 lines, mostly nested lists / dicts that i am progressively hiding
[01:18:39] *** Quits: BlueSky (~BlueSky@user/bluesky) (Quit: Leaving)
[01:18:50] <blei> IaC has pretty verbose APIs
[01:19:52] *** Quits: Gustavo6046 (~Gustavo60@user/gustavo6046) (Ping timeout: 252 seconds)
[01:21:49] <donald1> FYI I finally use WinProcess as attribute instead of inherit it :) it works !
[01:22:20] <donald1> ChrisWarrick: see my last post
[01:22:32] <ChrisWarrick> donald1: great!
[01:22:37] <SnoopJ> blei, are your objects basically replicas of each other with variations?
[01:22:50] <SnoopJ> whatever's being configured?
[01:22:58] <aphysically> jinsun: I found something fun to do
[01:23:05] <blei> a fair amount, actually
[01:23:05] <aphysically> one of the wrappers in rich was severely mistyped
[01:23:08] <aphysically> (a class wrapper)
[01:23:19] *** Joins: PortableDave (~portabled@194-193-148-202.tpgi.com.au)
[01:23:22] *** Joins: Gustavo6046 (~Gustavo60@user/gustavo6046)
[01:23:27] *** Quits: djapo (~archangel@user/djapo) (Ping timeout: 258 seconds)
[01:23:50] *** Joins: mekhami (~ldv@2605:a601:aaf2:ef00:383f:a991:12f0:4f28)
[01:24:11] <mekhami> https://gist.github.com/mekhami/ce539b738e5af31d4db3dab4a19a4905  what's an efficient way to solve this problem, as far as cpu cycles and memory usage
[01:24:12] *** Quits: ubert (~Thunderbi@91.141.50.28.wireless.dyn.drei.com) (Remote host closed the connection)
[01:24:22] *** Joins: Mindscape (~Lindis@user/lindis)
[01:24:30] *** Quits: Haxxa (~Haxxa@122.199.45.48) (Quit: Haxxa flies away.)
[01:25:10] *** Joins: Haxxa (~Haxxa@122.199.45.48)
[01:25:22] <blei> construct a reverse index using a dictionary comprehension
[01:25:42] *** Quits: Lando-SpacePimp (~Lando-Spa@user/lando-spacepimp) (Ping timeout: 260 seconds)
[01:26:09] *** Quits: raxor2k (~raxor2k@78.158.254.247) ()
[01:27:53] <mekhami> yeah i was trying to figure out how to do that but i think i got it
[01:27:59] <mekhami> i've been removed from python for too long
[01:27:59] *** Quits: fedenix_ (~fedenix@gateway/tor-sasl/fedenix) (Remote host closed the connection)
[01:28:12] *** Quits: marcello42 (~mp@p200300dfaf0e520178b80e9c76b5e17e.dip0.t-ipconnect.de) (Quit: Konversation terminated!)
[01:28:35] *** Joins: vladoski (~vladoski@93-47-225-6.ip114.fastwebnet.it)
[01:29:09] *** Quits: winterflaw (~winterfla@gateway/tor-sasl/winterflaw) (Ping timeout: 276 seconds)
[01:30:38] *** Quits: Barones (~Barones@2804:48dc:8500:0:5635:5e6d:7349:856) (Quit: Leaving)
[01:30:40] *** Quits: Midjak (~Midjak@82-65-111-221.subs.proxad.net) (Quit: This computer has gone to sleep)
[01:30:45] *** Quits: jess (~jess@libera/staff/jess) (Quit: Lost terminal)
[01:30:51] *** Joins: merijn (~merijn@83-160-49-249.ip.xs4all.nl)
[01:30:52] *** Quits: jay-m1262 (~jay-m@129.0.204.218) (Ping timeout: 252 seconds)
[01:31:09] *** Joins: jess (~jess@libera/staff/jess)
[01:32:14] *** Joins: CaryHartline (~CaryHartl@2603-8080-6a0e-8d88-fce5-8f43-3546-c881.res6.spectrum.com)
[01:32:20] *** Joins: xrogaan (~xrogaan@user/xrogaan)
[01:34:19] *** Quits: trashbird (~trashbird@user/trashbird) (Quit: what)
[01:35:21] *** Quits: CodeMouse92 (~CodeMouse@user/codemouse92) (Quit: Oh freddled gruntbuggly | Thy micturations are to me | As plurdled gabbleblotchits | On a lurgid bee)
[01:37:02] *** Quits: merijn (~merijn@83-160-49-249.ip.xs4all.nl) (Ping timeout: 265 seconds)
[01:37:07] *** Joins: trashbird (~trashbird@user/trashbird)
[01:37:54] *** Quits: LucaTM (~LucaTM@user/lucatm) (Quit: Textual IRC Client: www.textualapp.com)
[01:38:20] <jamiejackson> can a function, which isn't part of a class, be mocked during testing?
[01:38:31] <SnoopJ> jamiejackson, sure
[01:39:00] *** Quits: ayustae (Thunderbir@gateway/vpn/protonvpn/ayustae) (Quit: ayustae)
[01:39:44] *** Quits: crabbedhaloablut (~crabbedha@user/crabbedhaloablut) (Remote host closed the connection)
[01:39:48] *** Quits: sgt_chuckles (~sgt_chuck@pool-71-190-209-205.nycmny.fios.verizon.net) (Quit: Client closed)
[01:39:51] <jamiejackson> SnoopJ, is there a different syntax than mock.patch('app.setup_logging') (where app is my module, and setup_logging is a loose function in it?) because i'm getting...
[01:39:53] <jamiejackson> AttributeError: <module 'app' (namespace)> does not have the attribute 'setup_logging'
[01:39:58] *** Joins: crabbedhaloablut (~crabbedha@user/crabbedhaloablut)
[01:40:17] *** Quits: mickey8 (~user@user/mickey) (Quit: Ping timeout (120 seconds))
[01:40:24] *** Quits: arseru (uid515527@user/arseru) (Quit: Connection closed for inactivity)
[01:40:42] *** Joins: mickey8 (~user@user/mickey)
[01:41:00] *** Joins: ph88 (~ph88@2a02:8109:9e00:7e5c::3d56)
[01:41:31] <bjs> jamiejackson: you have an app directory? what is `setup_logging`
[01:42:13] <jamiejackson> bjs, i've got a file, `app/app.py`, which has a function in it called `setup_logging`
[01:42:25] *** Quits: snalty (~Shhh@user/snalty) (Read error: Connection reset by peer)
[01:42:25] <bjs> jamiejackson: did you mean to patch 'app.app.setup_logging' then?
[01:42:39] *** Joins: snalty (~Shhh@user/snalty)
[01:43:01] <bjs> or what is this app/ directory about?
[01:43:02] <jamiejackson> maybe? the top of my test file has `from app import app` , for what it's worth. not sure if that changes anything.
[01:43:13] *** Joins: scindmape (~Lindis@user/lindis)
[01:43:13] *** Quits: Mindscape (~Lindis@user/lindis) (Killed (NickServ (GHOST command used by scindmape)))
[01:43:18] *** scindmape is now known as Mindscape
[01:43:24] <bjs> jamiejackson: well if you're importing app.app (which is what that line means) then yes you want to mock app.app.setup_logging
[01:43:37] <jamiejackson> hmm, maybe that's my only problem then. checking....
[01:44:47] *** Quits: freeworld (~vit@chello085216193138.chello.sk) (Ping timeout: 264 seconds)
[01:45:03] <jamiejackson> bjs, i think that's it. i'm finally past that problem. i'll see where this leads, thanks.
[01:46:22] *** Joins: Lando-SpacePimp (~Lando-Spa@user/lando-spacepimp)
[01:46:40] *** Quits: veegee (~veegee@ipagstaticip-469c2903-2b07-6dc3-3bc2-98748da5ca77.sdsl.bell.ca) (Quit: Textual IRC Client: www.textualapp.com)
[01:46:55] *** Quits: GreenResponse (~tomek@r-45-155-148-237.gpon.bialnet.pl) (Quit: Leaving)
[01:50:17] *** Quits: emerent (~quassel@p200300cd57485550ba27ebfffed28a59.dip0.t-ipconnect.de) (Ping timeout: 258 seconds)
[01:50:32] <aphysically> ooo this is a weird mypy bug https://mypy-play.net/?mypy=latest&python=3.10&gist=c422a6478274d762a9bcc049051b8304
[01:50:49] *** Joins: emerent (~quassel@p200300cd57485500ba27ebfffed28a59.dip0.t-ipconnect.de)
[01:50:52] <aphysically> they probably just didn't anticipate this kind of usage
[01:51:37] *** Quits: gitly (~gitly@85.255.234.27) (Quit: WeeChat 3.2.1)
[01:52:12] *** Quits: waynew (~wayne@user/waynew) (Quit: WeeChat 2.9)
[01:52:21] *** Quits: Allegretto (~allegrett@85-238-68-1.pool.digikabel.hu) (Ping timeout: 250 seconds)
[01:52:35] *** Quits: slav0nic (slav0nic@python.su) (Ping timeout: 264 seconds)
[01:52:47] <bjs> aphysically: the error seems less like bug and more like design decision,  or perhaps overzealous check
[01:52:57] *** Quits: matsaman (~matsaman@user/matsaman) (Quit: leaving)
[01:54:14] *** Quits: plastico (~plastico@neomutt/plastico) (Quit: WeeChat 3.2)
[01:54:17] <aphysically> I came across it while fixing the typing in rich's code that does monkey patching for "rich" class representations
[01:54:30] *** Quits: Klinda (~superleag@user/klinda) (Quit: Konversation terminated!)
[01:54:54] <aphysically> the monkey patching lines are obviously type errors but everything else should type fine
[01:55:11] <sartan> how could it inspect self.__init__ when __init__ hasn't run yet during inspection?
[01:55:36] <bjs> sartan: what do you mean?
[01:55:41] <sartan> i mean mypy's inspection
[01:55:44] <sartan> not the inspect lib
[01:55:48] <bjs> sartan: mypy doesn't run the code at all
[01:55:51] <bjs> so I'm not sure what you mean?
[01:56:05] <sartan> that's what i mean, yeah it doesn't run the code, i'm wondering if this error is because it can't dereference what self.__init__ could be
[01:56:12] <bjs> no that's not the error
[01:56:14] *** Joins: jonaskabrink (~jonaskabr@i577BC80A.versanet.de)
[01:56:19] *** Quits: hrob (~hrob@31-209-221-88.dsl.dynamic.simnet.is) (Quit: Client closed)
[01:56:22] *** Quits: Cheaterman (~Cheaterma@user/cheaterman) (Ping timeout: 265 seconds)
[01:56:25] <bjs> mypy specifically disallows writing self.__init__
[01:56:30] *** Joins: Cheaterman (~Cheaterma@user/cheaterman)
[01:57:02] <sartan> More fundemental than that; I'm thinking because it's not possible for mypy to _understand_ __init__
[01:57:21] <aphysically> maybe I could open a bug for "maybe reconsider this" but I can imagine being told this is a correct case to ignore the type error
[01:57:51] <bjs> sartan: why can't it understand __init__ ?
[01:58:50] *** Joins: Julian (~tos9@python/site-packages/Julian)
[01:58:52] <bjs> aphysically: I think the worry is a case like `self.function_with_callback(self.__init__)` or other "escapes" that'd let you call __init__
[01:59:06] *** Joins: dakudos (~dakudos@c-73-229-175-50.hsd1.co.comcast.net)
[02:00:38] *** Joins: veegee (~veegee@ipagstaticip-469c2903-2b07-6dc3-3bc2-98748da5ca77.sdsl.bell.ca)
[02:01:30] *** Quits: jonaskabrink (~jonaskabr@i577BC80A.versanet.de) (Quit: Client closed)
[02:02:36] *** Quits: palasso (~palasso@user/palasso) (Remote host closed the connection)
[02:03:28] *** Joins: Midjak (~Midjak@82-65-111-221.subs.proxad.net)
[02:04:19] *** Quits: Midjak (~Midjak@82-65-111-221.subs.proxad.net) (Read error: Connection reset by peer)
[02:05:07] *** Joins: Allegretto (~allegrett@84-236-85-171.pool.digikabel.hu)
[02:05:41] *** Quits: NeoCore (~neocore@37.120.204.252) (Quit: Leaving)
[02:05:56] <bjs> I can't think of a good reason *why* it needs this check, the reason is because https://github.com/python/mypy/issues/89  but i don't understand the point made
[02:06:06] *** Joins: ElPresidente (~ElPreside@2600:1700:3d10:4870:9815:b867:1c3c:f13d)
[02:06:16] <bjs> maybe this is moot these days with the proper subclass consistency checks that mypy does?
[02:06:35] <BillyZane> hi, i'd like to store a token on my computer, but i want the file to be encrypted with a passphrase
[02:06:35] *** Quits: bloodninja (~bloodninj@user/bloodninja) (Remote host closed the connection)
[02:06:43] <BillyZane> any recommendations as to the best practice in this casE?
[02:07:28] *** Joins: bloodninja (~bloodninj@user/bloodninja)
[02:07:45] <BillyZane> i was thinking i could have a file named user.token, and i could write a function that prompts for a passphrase
[02:07:50] *** Quits: bloodninja (~bloodninj@user/bloodninja) (Read error: Connection reset by peer)
[02:08:02] *** Joins: jonaskabrink (~jonaskabr@i577BC80A.versanet.de)
[02:08:11] *** Joins: clarkk (~clarkk@host31-53-69-254.range31-53.btcentralplus.com)
[02:08:12] <sartan> are you importing into python?
[02:09:24] <sartan> if it's just standalone file encryption you're after, i suggest just `openssl enc`
[02:09:41] *** Parts: jonaskabrink (~jonaskabr@i577BC80A.versanet.de) ()
[02:10:04] *** Joins: jonaskabrink (~jonaskabr@i577BC80A.versanet.de)
[02:10:31] <BillyZane> sartan, yeah i was importing in to python the token for use
[02:10:45] <BillyZane> sartan, google keeps telling me to use a package called 'cryptography'
[02:10:54] <BillyZane> https://cryptography.io/en/latest/fernet/#using-passwords-with-fernet
[02:11:02] <BillyZane> this looks like a description of how to use it
[02:11:51] *** Quits: Akuli (~Akuli@82-203-164-141.bb.dnainternet.fi) (Quit: Leaving)
[02:11:53] *** Quits: bomb-on (~bomb-on@194.144.47.113) (Quit: aÐ»Ð»Ð¸Ð»Ñ¹Ñ–Ð°!)
[02:11:54] <BillyZane> sartan, i would prefer if the file content is kept encrypted and minimally exposed so the only way the content is accessed is within the python application and with a passphrase
[02:12:34] *** Parts: jonaskabrink (~jonaskabr@i577BC80A.versanet.de) ()
[02:12:47] *** Joins: merijn (~merijn@83-160-49-249.ip.xs4all.nl)
[02:12:51] *** Quits: pretty_dumm_guy (trottel@gateway/vpn/protonvpn/prettydummguy/x-88029655) (Quit: WeeChat 3.3)
[02:14:19] <meejah> BillyZane: yes, "cryptography" is an often-recommended python crypto library. A "nacl" SecretBox would be another good choice
[02:14:30] *** Quits: Gustavo6046 (~Gustavo60@user/gustavo6046) (Remote host closed the connection)
[02:14:40] <meejah> (it's a C library, but there are python bindings)
[02:15:18] <aphysically> okay I think I fixed the rich repr monkey patcher https://bpa.st/ZZXQ
[02:15:25] *** Quits: Alex123 (~Adium@2603-8000-d141-2a00-a572-5d4a-e107-a0e4.res6.spectrum.com) (Quit: Leaving.)
[02:15:34] *** Quits: vladoski (~vladoski@93-47-225-6.ip114.fastwebnet.it) (Quit: My MacBook has gone to sleep. ZZZzzzâ€¦)
[02:15:35] <aphysically> no more Any, typing now correct, removed all the unneeded ignores that were only there case the typing was wrong
[02:16:03] *** Joins: vladoski (~vladoski@2001:b07:add:d406:1470:bdec:f79c:c789)
[02:16:25] *** Joins: Gustavo6046 (~Gustavo60@user/gustavo6046)
[02:17:47] *** Quits: merijn (~merijn@83-160-49-249.ip.xs4all.nl) (Ping timeout: 264 seconds)
[02:17:53] *** Quits: causa_sui (~causasui@c-68-60-125-136.hsd1.mi.comcast.net) (Ping timeout: 258 seconds)
[02:18:04] *** Quits: Yasumoto (~Yasumoto@136.152.37.118) (Quit: leaving)
[02:18:05] <BillyZane> meejah, i see
[02:18:20] *** Joins: vicfred (~vicfred@user/vicfred)
[02:19:20] *** Quits: Julian (~tos9@python/site-packages/Julian) (Quit: leaving)
[02:20:02] *** Joins: Spawns_Carpeting (~Spawns_Ca@user/spawns-carpeting/x-6969421)
[02:20:18] *** Quits: codeswhite (~codeswhit@user/codeswhite) (Ping timeout: 260 seconds)
[02:20:20] *** Quits: rinzewind (~rinzewind@user/rinzewind) (Quit: leaving)
[02:20:53] *** Quits: roxfan (roxfan@11.121-64-87.adsl-dyn.isp.belgacom.be) (Remote host closed the connection)
[02:21:06] <jazz-o-lantern> why no bst in python?
[02:21:18] *** Joins: causasui (~causasui@c-68-60-125-136.hsd1.mi.comcast.net)
[02:21:32] <KirkMcDonald> British Summer Time?
[02:21:38] <jazz-o-lantern> binary search tree
[02:22:04] <nedbat> jazz-o-lantern: would a dict work?
[02:22:05] <KirkMcDonald> The standard library doesn't have one, but there are third-party implementations.
[02:22:10] *** Quits: semeion (~semeion@user/semeion) (Ping timeout: 260 seconds)
[02:22:19] *** Quits: blei (~blei@209.201.38.106) (Quit: Client closed)
[02:22:49] <jazz-o-lantern> nedbat, not working on anything in particular right now, just wondering
[02:23:00] <bjs> jazz-o-lantern: bsts tend to be used more for implementing other things than existing as a data type all of their own and Python doesn't use bsts to implement any of its primary data types
[02:23:10] <bjs> it uses arrays and hashmaps and things of that nature
[02:23:14] <jazz-o-lantern> it's got arrays, hash tables, heaps, even a binary search, but no bst
[02:23:39] <nedbat> jazz-o-lantern: what does bst do well that the other things don't do well?
[02:23:57] <KirkMcDonald> I mean, maintain a collection in sorted order.
[02:24:08] *** Joins: roxfan (roxfan@11.121-64-87.adsl-dyn.isp.belgacom.be)
[02:24:14] <jazz-o-lantern> pretty much that
[02:24:26] *** Joins: voldial (~user@user/voldial)
[02:24:27] <jazz-o-lantern> if everything sorted already it has binary search in there
[02:24:30] <voldial> Is there a cli app to manage/merge/edit/export contacts? I found vobject, and a nice calendar cli app https://lostpackets.de/khal/index.html but nothing for just managing contacts...
[02:24:35] <jazz-o-lantern> plus not hard to implement as needed
[02:25:10] <jazz-o-lantern> just find it a little strange, every other big language has found a need for it
[02:25:16] <jazz-o-lantern> maybe not *every*, but lots
[02:28:37] *** Quits: beaky (~beaky@198.211.118.219) (Ping timeout: 252 seconds)
[02:28:52] *** Joins: Laibsch (~leggewie@93.152.184.249)
[02:29:00] *** Quits: supakeen (~user@python/site-packages/supakeen) (Ping timeout: 258 seconds)
[02:29:05] *** Quits: Fossil (~Fossil@2a03:b0c0:0:1010::398:b001) (Ping timeout: 246 seconds)
[02:29:07] *** Quits: dodo (~dodo@user/dodo) (Ping timeout: 252 seconds)
[02:29:28] *** Quits: de-facto (~de-facto@user/de-facto) (Quit: See you around. ðŸ’¤)
[02:29:31] *** Quits: kgz (~kragniz@nyaa.kragniz.eu) (Ping timeout: 268 seconds)
[02:30:17] *** Joins: de-facto (~de-facto@user/de-facto)
[02:31:20] *** Quits: Seirdy (~Seirdy@sourcehut/user/seirdy) (Quit: exiting 3.2)
[02:31:56] *** Joins: Seirdy (~Seirdy@sourcehut/user/seirdy)
[02:32:11] *** Quits: grys (~quassel@botters/gry) (Ping timeout: 264 seconds)
[02:32:35] *** Quits: mxp_ (~mxp@185.16.205.131) (Ping timeout: 246 seconds)
[02:32:50] *** Quits: fikran (~fikran@user/fikran) (Ping timeout: 258 seconds)
[02:32:57] *** Joins: grys (~quassel@botters/gry)
[02:34:30] *** Quits: zebrag (~chris@user/zebrag) (Quit: Konversation terminated!)
[02:34:40] *** Joins: fikran (~fikran@user/fikran)
[02:35:26] *** Joins: semeion (~semeion@user/semeion)
[02:35:54] *** Joins: jonaskabrink (~jonaskabr@i577BC80A.versanet.de)
[02:38:15] *** Quits: Auron (~Auron956@user/auron) (Remote host closed the connection)
[02:38:26] *** Quits: Gustavo6046 (~Gustavo60@user/gustavo6046) (Ping timeout: 245 seconds)
[02:38:50] *** Joins: Gustavo6046 (~Gustavo60@user/gustavo6046)
[02:39:37] *** Quits: alzgh (~alzgh@user/alzgh) (Remote host closed the connection)
[02:39:57] *** Joins: alzgh (~alzgh@user/alzgh)
[02:40:22] *** Quits: horseface (~horseface@user/horseface) (Ping timeout: 260 seconds)
[02:40:28] *** Quits: bob_x1 (~bob_x@gateway/tor-sasl/bobx1/x-26457072) (Remote host closed the connection)
[02:41:05] *** Joins: bob_x1 (~bob_x@gateway/tor-sasl/bobx1/x-26457072)
[02:42:56] *** Joins: stormdancer (~stormdanc@185.245.86.121)
[02:44:57] *** Joins: causa_sui (~causasui@c-68-60-125-136.hsd1.mi.comcast.net)
[02:45:14] *** Quits: Hunterkll (~hunterkll@2001:470:8b06:100:2958:1194:aedf:1fa3) (Remote host closed the connection)
[02:46:06] *** Quits: clarkk (~clarkk@host31-53-69-254.range31-53.btcentralplus.com) (Read error: Connection reset by peer)
[02:46:24] *** Joins: clarkk (~clarkk@host31-53-69-254.range31-53.btcentralplus.com)
[02:46:38] *** Quits: rakoon (~rakoon@2001:985:f4c6:1:9dc6:306d:758f:4554) (Ping timeout: 258 seconds)
[02:47:06] *** Joins: kexec (~kexec@user/kexec)
[02:47:09] *** Quits: bob_x1 (~bob_x@gateway/tor-sasl/bobx1/x-26457072) (Ping timeout: 276 seconds)
[02:48:45] *** Joins: Gustavo6046_ (~Gustavo60@user/gustavo6046)
[02:48:58] *** Quits: Gustavo6046 (~Gustavo60@user/gustavo6046) (Ping timeout: 252 seconds)
[02:50:38] *** Quits: causa_sui (~causasui@c-68-60-125-136.hsd1.mi.comcast.net) (Ping timeout: 260 seconds)
[02:51:48] *** Gustavo6046_ is now known as Gustavo6046
[02:52:29] *** Joins: bob_x1 (~bob_x@gateway/tor-sasl/bobx1/x-26457072)
[02:52:45] *** Quits: clarkk (~clarkk@host31-53-69-254.range31-53.btcentralplus.com) (Read error: Connection reset by peer)
[02:55:19] *** Quits: c10l (~c10l@user/c10l) (Quit: The Lounge - https://thelounge.chat)
[02:55:34] <aphysically> oh no codecov didn't like that I didn't add a test to cover the line "..." :^(
[02:55:47] <voldial> (found it) https://github.com/scheibler/khard/
[02:56:14] <aphysically> I blame black for not moving ... to the same line when possible by default
[02:56:27] *** Joins: c10l (~c10l@user/c10l)
[02:56:35] <aphysically> would make complicated overload signatures take up less room in a lot of codebases
[02:57:16] *** Quits: Wulf (~Wulf@user/wulf) (Ping timeout: 265 seconds)
[02:57:35] *** Joins: dodo (~dodo@user/dodo)
[02:58:07] *** Joins: Fossil (~Fossil@95.85.23.165)
[02:58:15] *** Quits: vladoski (~vladoski@2001:b07:add:d406:1470:bdec:f79c:c789) (Quit: Textual IRC Client: www.textualapp.com)
[02:58:59] *** Joins: Wulf (~Wulf@user/wulf)
[02:59:44] <meejah> codecov is "often just wrong" IME
[02:59:59] *** Quits: PortableDave (~portabled@194-193-148-202.tpgi.com.au) (Quit: My MacBook has gone to sleep. ZZZzzzâ€¦)
[03:00:11] *** Joins: jmiehe (~Thunderbi@user/jmiehe)
[03:01:46] *** Quits: Laibsch (~leggewie@93.152.184.249) (Ping timeout: 245 seconds)
[03:02:06] *** Joins: codeswhite (~codeswhit@user/codeswhite)
[03:02:52] *** Joins: Hunterkll (~hunterkll@2001:470:8b06:100:2958:1194:aedf:1fa3)
[03:03:50] *** Joins: Sheilong (uid293653@id-293653.ilkley.irccloud.com)
[03:05:03] *** Joins: herjazz (~herjazz@p6758124-ipngn30801marunouchi.tokyo.ocn.ne.jp)
[03:06:44] *** Quits: omegatron (~some@p5b056a70.dip0.t-ipconnect.de) (Ping timeout: 268 seconds)
[03:06:44] *** Joins: supakeen (~user@python/site-packages/supakeen)
[03:08:01] *** Joins: kgz (~kragniz@nyaa.kragniz.eu)
[03:08:40] <nedbat> aphysically: i don't think it's codecov making that judgement
[03:09:32] <aphysically> about whether or not to error on ...?
[03:09:32] *** Quits: brelod (~me@90.244.150.142) (Quit: leaving)
[03:09:50] *** Quits: rundown (~eb0t@90.196.142.168) (Read error: Connection reset by peer)
[03:09:57] <aphysically> or warn about it or whatever
[03:12:10] *** Joins: beaky (~beaky@2a03:b0c0:0:1010::1e:a001)
[03:13:02] *** Quits: Haxxa (~Haxxa@122.199.45.48) (Ping timeout: 260 seconds)
[03:13:55] <nedbat> aphysically: are you talking about the "..." being marked as not covered by tests?
[03:14:34] <aphysically> yeah, it was a "..." in a protocol; and I was saying I blame black for not putting the ... on the same line as the def :)
[03:14:37] *** Quits: Dotz0cat (~Dotz0cat@h112.238.31.71.dynamic.ip.windstream.net) (Ping timeout: 258 seconds)
[03:15:49] *** Joins: rundown (~eb0t@90.199.166.206)
[03:16:18] <aphysically> https://github.com/willmcgugan/rich/blob/2f0f53af057016c2b2666ca402a41d2a3777b05c/rich/repr.py#L35 I just added a pragma no cover since that's what it looked like they were doing for protocols in the rest of the codebase
[03:17:34] *** Quits: jmiehe (~Thunderbi@user/jmiehe) (Quit: jmiehe)
[03:17:51] <nedbat> aphysically: yup, that's coverage.py deciding about the line. codecov just displays the result
[03:18:16] *** Joins: PortableDave (~portabled@194-193-148-202.tpgi.com.au)
[03:18:17] *** Joins: clarkk (~clarkk@host31-53-69-254.range31-53.btcentralplus.com)
[03:18:35] <meejah> it seems twine silently ignores .asc files you tell it to upload now :(
[03:18:47] <meejah> (version 1.15.0)
[03:18:49] *** Joins: bitdex (~bitdex@gateway/tor-sasl/bitdex)
[03:19:14] <meejah> ...but it still mentions them in the --help .. any clues?
[03:19:36] *** Joins: dark279_ (~totallych@2601:18b:8200:c1e:a1e0:77e4:7943:e9a1)
[03:19:37] *** Joins: pragma- (~chaos@user/pragmatic-chaos)
[03:19:43] *** Joins: Viewday9 (~Viewday@user/viewday)
[03:20:30] <aphysically> nedbat: yeah for protocols it's a bit silly but I'm sure it would be complicated to special case so eh it's not the worst in the world
[03:20:34] <meejah> oh, haha cute! it just doesn't show uploading-status for them. fun!
[03:21:38] *** Joins: zeden (~zeden@user/zeden)
[03:21:54] *** Quits: Viewday (~Viewday@user/viewday) (Ping timeout: 258 seconds)
[03:21:54] *** Viewday9 is now known as Viewday
[03:22:13] <NoImNotNineVolt> so i was interested in working with ansi color codes from python and i found https://www.lihaoyi.com/post/BuildyourownCommandLinewithANSIescapecodes.html
[03:22:54] <NoImNotNineVolt> just figured i'd share. seems like a fun guide for messing with ansi codes to do interesting things.
[03:23:53] <nedbat> aphysically: well, you can configure coverage.py to always exclude "..." lines
[03:24:06] *** Quits: pragma- (~chaos@user/pragmatic-chaos) (Client Quit)
[03:24:17] <nedbat> aphysically: but you have to be careful: the setting is a regex, so if you use "...", you're excluding all lines with three or more characters :)
[03:24:54] <SnoopJ> You can limit that configuration to just part of a codebase too, right?
[03:25:35] *** Joins: pragma- (~chaos@user/pragmatic-chaos)
[03:25:36] <nedbat> SnoopJ: no, it's global
[03:26:08] *** Joins: Dotz0cat (~Dotz0cat@h227.29.188.173.dynamic.ip.windstream.net)
[03:26:55] <SnoopJ> Darn, my memory failed me.
[03:27:43] <SnoopJ> I guess you could invoke it multiple times to do this if you wanted granularity
[03:29:10] *** Quits: clarkk (~clarkk@host31-53-69-254.range31-53.btcentralplus.com) (Ping timeout: 265 seconds)
[03:29:22] *** Quits: mat001 (~mat001@213.143.69.121) (Remote host closed the connection)
[03:31:22] *** Joins: clarkk (~clarkk@84.247.50.42)
[03:31:37] *** Joins: y1n (~y1n@91.141.38.31.wireless.dyn.drei.com)
[03:33:41] <nedbat> SnoopJ: i wonder why you'd want different exclusion patterns in different parts of your code
[03:33:48] *** Quits: brookesy66 (~will@123-243-15-48.tpgi.com.au) (Quit: WeeChat 3.3)
[03:36:00] <SnoopJ> nedbat, the thing that occurred to me was something that's providing annotations, but I guess you'd usually have those in stubs that aren't getting coverage tested at all?
[03:37:01] <nedbat> i have no experience with stubs
[03:37:09] <SnoopJ> nedbat, perhaps if a module has been dragged in from somewhere and gets special exclusion rules because it's being kept to a different standard, or something? I can't really think of obvious use-cases
[03:37:22] <nedbat> hmm, that's interesting
[03:37:43] <SnoopJ> AIUI stubs are not being executed basically ever, they're just enough syntax to hang the annotations on
[03:38:03] *** Quits: adiKt (uid472628@id-472628.tinside.irccloud.com) (Quit: Connection closed for inactivity)
[03:38:25] *** Quits: abhixec (~abhixec@c-67-169-139-16.hsd1.ca.comcast.net) (Quit: leaving)
[03:38:26] <SnoopJ> `...` specifically being the pattern here is what got me thinking about it: I'd hate to exclude other uses of the literal that aren't the ones I'd want to exclude I guess.
[03:39:05] *** Joins: phantomotap (~phantomot@c-68-35-28-201.hsd1.al.comcast.net)
[03:40:00] <SnoopJ> I might be misunderstanding how the existing feature works, though, I've never used it :)
[03:41:40] *** Quits: CoolerX (~CoolerX@user/coolerx) (Quit: Leaving)
[03:41:41] *** Quits: lucasb (uid333435@id-333435.hampstead.irccloud.com) (Quit: Connection closed for inactivity)
[03:41:41] *** Quits: bitdex (~bitdex@gateway/tor-sasl/bitdex) (Remote host closed the connection)
[03:42:37] *** Joins: bitdex (~bitdex@gateway/tor-sasl/bitdex)
[03:43:10] <nedbat> SnoopJ: for example, line 49 here: https://nedbat.github.io/coverage-reports/reports/20211019_afe6cf34d0/htmlcov/d_56e48acd472f6ae7_debug_py.html#t49  the __repr__ is excluded by a regex pattern
[03:43:35] *** Quits: Lord_of_Life (~Lord@user/lord-of-life/x-2819915) (Ping timeout: 264 seconds)
[03:43:41] *** Joins: Lord_of_Life_ (~Lord@user/lord-of-life/x-2819915)
[03:44:03] <SnoopJ> ahh, that's handy
[03:44:59] *** Lord_of_Life_ is now known as Lord_of_Life
[03:45:38] *** Quits: emf (~emf@2620:10d:c090:400::5:c0de) (Quit: emf)
[03:46:01] *** Quits: moose (~moose@user/moose) (Quit: The system has requested shutdown(INIT(1): task_erase_system_sec))
[03:46:45] *** Joins: causa_sui (~causasui@c-68-60-125-136.hsd1.mi.comcast.net)
[03:47:47] *** Joins: jmiehe (~Thunderbi@user/jmiehe)
[03:49:48] *** Joins: Haxxa (~Haxxa@122.199.46.64)
[03:50:26] <jmiehe> Hi. I'm trying to match a sem_ver using regex. This is my function: https://bpa.st/6YNQ For some reasons, this also matches "0.0.0alpha" which I don't want. What's wrong?
[03:50:52] *** Joins: clarkk1 (~clarkk@82.102.22.94)
[03:50:54] *** Quits: Axy (~Axy@user/axy) (Read error: Connection reset by peer)
[03:50:59] *** Quits: vvdaiwrw (~rvgzuuqp@gateway/tor-sasl/rvgzuuqp) (Quit: vvdaiwrw)
[03:51:23] *** Quits: causa_sui (~causasui@c-68-60-125-136.hsd1.mi.comcast.net) (Ping timeout: 264 seconds)
[03:51:45] <jmiehe> nevermind, found it, the culprit is "|"
[03:52:36] *** Quits: clarkk (~clarkk@84.247.50.42) (Ping timeout: 245 seconds)
[03:53:47] *** Joins: Axy (~Axy@user/axy)
[03:54:28] <jmiehe> so regex should be '^([0-9]|[1-9][0-9]*)(\.([0-9]|[1-9][0-9]*)(\.([0-9]|[1-9][0-9]*))?)?$' instead
[03:55:31] *** Joins: snalty_ (~Shhh@user/snalty)
[03:55:38] *** Quits: snalty (~Shhh@user/snalty) (Ping timeout: 258 seconds)
[03:58:51] <nedbat> jmiehe: i wonder if there's an easier way to do this
[03:59:26] *** Joins: BSaboia (~bsaboia@187.19.138.198)
[03:59:49] *** Joins: horseface (~horseface@user/horseface)
[03:59:50] *** Quits: horseface (~horseface@user/horseface) (Remote host closed the connection)
[04:00:08] <jmiehe> nedbat: I actually put the '([0-9]|[1-9][0-9]*)' part into its own variable, it's not too bad, but I'll appreciate ;)
[04:00:37] <InPhase> jmiehe: As a start at simplification, ^(0|[1-9][0-9]*)(\.(0|[1-9][0-9]*)(\.(0|[1-9][0-9]*))?)?$
[04:00:46] *** Joins: Dotz0cat_ (~Dotz0cat@h11.46.90.75.dynamic.ip.windstream.net)
[04:01:09] <InPhase> Don't need that redundant matching.
[04:01:34] *** Quits: Dotz0cat (~Dotz0cat@h227.29.188.173.dynamic.ip.windstream.net) (Ping timeout: 260 seconds)
[04:01:36] *** Dotz0cat_ is now known as Dotz0cat
[04:02:00] <nedbat> jmiehe: i might just use:  map(int, s.split("."))  and catch the exception.
[04:02:16] *** Joins: snalty (~Shhh@user/snalty)
[04:02:46] <jmiehe> nedbat: neat, but if I manage to do it in a RE, I can drop the whole function :)
[04:02:55] *** Quits: snalty_ (~Shhh@user/snalty) (Ping timeout: 258 seconds)
[04:03:06] <jmiehe> I just reintroduced it because I noticed the RE not behaving
[04:03:18] <nedbat> jmiehe: you should keep the function, whichever way you want
[04:03:24] <nedbat> *way you go
[04:04:24] <jmiehe> It's baked into a `pydantic.constr` now, which essentially will replicate that function
[04:05:07] <nedbat> jmiehe: if you keep the validator in a function, you can unit-test it
[04:05:08] <SnoopJ> '|' is one of the things that was highlighted in a paper about regex bugs that I skimmed recently
[04:05:10] *** Quits: kexec (~kexec@user/kexec) (Quit: Client closed)
[04:05:21] <SnoopJ> (the topic was specifically developer beliefs about portability and universality of regex)
[04:05:45] <grym> "ha ha ha good joke"?
[04:06:03] <SnoopJ> https://dl.acm.org/doi/abs/10.1145/3338906.3338909
[04:06:56] *** Joins: Disposeable-Nick (~Ident@user/disposeable-nick)
[04:08:15] <InPhase> SnoopJ: Hahah.  "The most frequent reason to re-use a regex was to meet a common use case, e.g., matching emails."  And what's the most famous thing that regexes are known to fail at?  Matching email addresses...
[04:08:52] <SnoopJ> hmm, maybe it was a different paper from a collection of a few
[04:09:08] <SnoopJ> InPhase, people should probably just stop doing anything more than [before]@[after] heh
[04:09:49] *** Quits: donald1 (~donald@2a01:e0a:95e:7ca0:e9e4:b21b:95a3:3cbf) (Ping timeout: 258 seconds)
[04:10:39] *** Joins: fluffyballoon (~user@131.93.208.196)
[04:11:54] *** Joins: causa_sui (~causasui@c-68-60-125-136.hsd1.mi.comcast.net)
[04:12:53] <Disposeable-Nick> Hi, I'm failing to see what the problem is, but basically anything after the ' if "433" in text: ' section gives me a SyntaxError: invalid syntax, but everything after it is actually fine and works, but when I remove that section, the script runs as normal... https://dpaste.com/AP2SCJNWY
[04:13:07] *** Quits: aphysically (~aphysical@user/aphysically) (Ping timeout: 268 seconds)
[04:13:49] *** Joins: Rikem (~mike@user/rikem)
[04:14:09] *** Joins: merijn (~merijn@83-160-49-249.ip.xs4all.nl)
[04:14:34] *** Joins: aphysically (~aphysical@user/aphysically)
[04:15:06] *** Quits: PJBoy (~PJBoy@user/pjboy) (Ping timeout: 245 seconds)
[04:16:35] *** Quits: causa_sui (~causasui@c-68-60-125-136.hsd1.mi.comcast.net) (Ping timeout: 264 seconds)
[04:16:54] <Disposeable-Nick> grawity, sorry to bug you, but you have been a massive help in the past, but basically my script is essentially the same as before, but I've add that if in use bit and now everything it that worked before no longer works due to synxtax error...
[04:18:03] <Disposeable-Nick> everything that worked before *
[04:18:15] <Disposeable-Nick> added *
[04:19:18] *** Quits: fikran (~fikran@user/fikran) (Ping timeout: 260 seconds)
[04:19:37] *** Joins: chenqisu12 (~xirndc@183.217.203.91)
[04:19:56] *** Joins: ttree (~ttree0@c-73-239-62-159.hsd1.wa.comcast.net)
[04:20:46] <nedbat> Disposeable-Nick: your last line there needs another close-paren
[04:21:01] *** Joins: fikran (~fikran@user/fikran)
[04:21:15] <Disposeable-Nick> Jesus Christ :(((
[04:21:25] <Disposeable-Nick> I feel silly, it looked correct :(((
[04:23:59] *** Joins: Gustavo6046_ (~Gustavo60@user/gustavo6046)
[04:24:36] *** Joins: Belxjander (~Belxjande@p1575007-ipoe.ipoe.ocn.ne.jp)
[04:24:40] *** Quits: Gustavo6046 (~Gustavo60@user/gustavo6046) (Ping timeout: 252 seconds)
[04:25:50] *** Quits: nyah (~nyah@bcdcb6e3.skybroadband.com) (Ping timeout: 260 seconds)
[04:26:10] *** Quits: roxfan (roxfan@11.121-64-87.adsl-dyn.isp.belgacom.be) (Remote host closed the connection)
[04:26:46] *** Gustavo6046_ is now known as Gustavo6046
[04:26:46] *** Joins: roxfan (roxfan@11.121-64-87.adsl-dyn.isp.belgacom.be)
[04:27:57] <Disposeable-Nick> Now, I get: TypeError: Can't convert 'bytes' object to str implicitly | So, I added str into that initial bracket on the last line, nedbat, and I get the same error :( | But thank you for pointing out the close bracket though, nedbat.
[04:28:19] *** Joins: vd62 (~vd@bras-base-mtrlpq2848w-grc-41-70-53-240-121.dsl.bell.ca)
[04:30:02] *** Joins: PJBoy (~PJBoy@user/pjboy)
[04:30:31] *** Quits: flokuehn (~flokuehn@mue-88-130-54-069.dsl.tropolys.de) (Ping timeout: 258 seconds)
[04:30:31] *** Quits: vlm (~vlm@user/vlm) (Quit: "")
[04:31:35] <Disposeable-Nick> Should I change irc.send to ircwrite? | def ircwrite(message): global irc irc.send(str(message).encode('utf-8') < that is indented correctly, just to mention, as wanted it on one line for explanation sake. nedbat?
[04:31:39] *** Quits: vd (~vd@bras-base-mtrlpq2848w-grc-41-70-53-240-121.dsl.bell.ca) (Ping timeout: 256 seconds)
[04:32:21] *** Joins: flokuehn (~flokuehn@i577BC677.versanet.de)
[04:34:07] *** Quits: FireFish5000 (~FireFish5@user/firefish5000) (Remote host closed the connection)
[04:34:11] <Disposeable-Nick> Oh, and I should mention that: irc = socket.socket(socket.AF_INET, socket.SOCK_STREAM) | Just to be absolutely clear on what everything means.
[04:34:46] <phy1729> I'd assume ideally the method takes a list of strings and does the encoding itself (and checks no strings but the last contains a space, and none but the last begins with a colon
[04:35:06] *** Joins: vlm (~vlm@user/vlm)
[04:35:16] *** Joins: FireFish5000 (~FireFish5@user/firefish5000)
[04:35:38] *** Quits: jazz-o-lantern (~jaziz@user/jaziz) (Ping timeout: 260 seconds)
[04:36:00] *** Quits: urth (~urth@geertswei.nl) (Quit: urth)
[04:36:55] *** Quits: alzgh (~alzgh@user/alzgh) (Remote host closed the connection)
[04:37:11] <Disposeable-Nick> I'm not sure I understand correctly what you're saying, phy1729.  Forgive me.
[04:37:52] *** Joins: jazzy (~jaziz@user/jaziz)
[04:38:26] *** Quits: PJBoy (~PJBoy@user/pjboy) (Ping timeout: 260 seconds)
[04:38:44] *** Joins: alzgh (~alzgh@user/alzgh)
[04:38:58] <phy1729> I'm saying rather irc.send('PRIVMSG #python :calling irc.send like this') you should irc.send(['PRIVMSG', '#python', 'call it like this'])
[04:39:59] *** Quits: jonaskabrink (~jonaskabr@i577BC80A.versanet.de) (Ping timeout: 264 seconds)
[04:43:13] <phy1729> And when handling a recieved line, you should split it into a sender, any tags, and the command and args then just compare with the command. if "PING" in text:  would match PRIVMSG #python :Shouting about PING
[04:43:23] *** Quits: BSaboia (~bsaboia@187.19.138.198) (Quit: This computer has gone to sleep)
[04:44:26] *** Quits: Fiji (~Fiji@user/fiji) (Quit: Leaving)
[04:44:28] *** Joins: McDonaldsWiFi (~PublicWiF@user/publicwifi)
[04:44:57] *** Quits: alzgh (~alzgh@user/alzgh) (Remote host closed the connection)
[04:45:25] *** Joins: BSaboia (~bsaboia@187.19.138.198)
[04:45:58] *** Quits: jmiehe (~Thunderbi@user/jmiehe) (Quit: jmiehe)
[04:46:21] *** Quits: PublicWifi (~PublicWiF@user/publicwifi) (Quit: WeeChat 3.3)
[04:46:25] *** Joins: Gustavo6046_ (~Gustavo60@user/gustavo6046)
[04:47:06] *** Quits: akk (~akk@75.161.146.115) (Quit: +++)
[04:47:11] *** Quits: Gustavo6046 (~Gustavo60@user/gustavo6046) (Ping timeout: 245 seconds)
[04:47:26] *** Joins: nortoh (~nortoh@bishop.xerrero.com)
[04:47:46] *** Quits: merijn (~merijn@83-160-49-249.ip.xs4all.nl) (Ping timeout: 258 seconds)
[04:48:19] *** Quits: McDonaldsWiFi (~PublicWiF@user/publicwifi) (Client Quit)
[04:48:40] *** Quits: BSaboia (~bsaboia@187.19.138.198) (Client Quit)
[04:49:26] *** Gustavo6046_ is now known as Gustavo6046
[04:51:34] *** Joins: m1k7 (~m1k3@ip98-161-149-99.ph.ph.cox.net)
[04:52:38] *** Joins: PublicWifi (~PublicWiF@user/publicwifi)
[04:53:58] *** Joins: urth (~urth@geertswei.nl)
[04:54:15] <fluter> hi, any guidelines on how to name unit test files?
[04:54:29] <fluter> module.py have module_test.py or test_module.py?
[04:54:41] *** Joins: BSaboia (~bsaboia@187.19.138.198)
[04:55:28] *** Quits: de-facto (~de-facto@user/de-facto) (Quit: See you around. ðŸ’¤)
[04:55:42] *** Joins: Yasumoto (~Yasumoto@136.152.37.118)
[04:55:59] *** Joins: de-facto (~de-facto@user/de-facto)
[04:56:29] *** Quits: Sheilong (uid293653@id-293653.ilkley.irccloud.com) ()
[04:58:16] *** Joins: brabrax_ (~brabrax@user/brabrax)
[04:59:47] *** Quits: brabrax (~brabrax@user/brabrax) (Ping timeout: 264 seconds)
[04:59:47] *** brabrax_ is now known as brabrax
[05:00:37] *** Quits: de-facto (~de-facto@user/de-facto) (Remote host closed the connection)
[05:00:53] *** Joins: de-facto (~de-facto@user/de-facto)
[05:02:37] *** Quits: BSaboia (~bsaboia@187.19.138.198) (Quit: This computer has gone to sleep)
[05:06:03] *** Quits: phantomotap (~phantomot@c-68-35-28-201.hsd1.al.comcast.net) (Quit: Leaving)
[05:09:39] <voldial> CanI get stderr out of sh.Command() after it's executed? https://bpa.st/XAHQ
[05:09:46] *** Quits: Gustavo6046 (~Gustavo60@user/gustavo6046) (Ping timeout: 252 seconds)
[05:10:41] *** Joins: Gustavo6046 (~Gustavo60@user/gustavo6046)
[05:10:43] *** Quits: Ninja3047 (~Ninja3047@3047.ninja) (Quit: bye)
[05:10:43] *** Quits: Seiryuu (~Seiryuu@ip174-103-176-143.adsl2.static.versatel.nl) (Quit: Leaving)
[05:11:24] *** Joins: causa_sui (~causasui@c-68-60-125-136.hsd1.mi.comcast.net)
[05:11:28] *** Joins: Ninja3047 (~Ninja3047@3047.ninja)
[05:11:59] *** Quits: Vornicus (~Vornicus@2603-8000-5d07-7ef0-593d-53d2-7210-2f1a.res6.spectrum.com) (Read error: Connection reset by peer)
[05:14:15] *** Joins: gggp (~gggp@li870-78.members.linode.com)
[05:14:59] *** Quits: PublicWifi (~PublicWiF@user/publicwifi) (Ping timeout: 258 seconds)
[05:15:12] *** Quits: The_Jag_ (~The_Jag@host-95-252-246-6.retail.telecomitalia.it) (Read error: Connection reset by peer)
[05:15:51] *** Quits: gggp (~gggp@li870-78.members.linode.com) (Remote host closed the connection)
[05:15:59] *** Quits: causa_sui (~causasui@c-68-60-125-136.hsd1.mi.comcast.net) (Ping timeout: 264 seconds)
[05:16:17] *** Quits: bilb_ono (~alexmarsh@ip184-189-224-55.sb.sd.cox.net) (Quit: bilb_ono)
[05:16:55] *** Joins: The_Jag (~The_Jag@host-95-252-246-6.retail.telecomitalia.it)
[05:17:43] *** Quits: clarkk1 (~clarkk@82.102.22.94) (Quit: Leaving)
[05:19:12] *** Quits: PortableDave (~portabled@194-193-148-202.tpgi.com.au) (Quit: My MacBook has gone to sleep. ZZZzzzâ€¦)
[05:19:13] *** Quits: dez (uid92154@user/dez) (Quit: Connection closed for inactivity)
[05:20:34] *** Quits: _xor (~xor@72.49.199.147) (Read error: Connection reset by peer)
[05:20:47] *** Quits: Bode_Cleu (~Code_Bleu@user/code-bleu/x-6939963) (Ping timeout: 264 seconds)
[05:22:17] <bancroft> say I have a dictionary in utils/__init__.py, and then I import that same dictionary in project_a, and project_b. Is there a way that if I add values to that imported dictionary from utils that I could see all the values added to it in both project_a, and project_b?
[05:22:23] *** Joins: _xor (~xor@72.49.199.147)
[05:24:04] <bancroft> basically make the dictionary global somehow
[05:25:16] <KirkMcDonald> bancroft: If it's all referencing the same dict, then mutating the dict will be seen by anything that has a reference to it.
[05:27:43] *** Joins: frost (~frost@59.71.244.189)
[05:27:51] *** Quits: akmod (~akmod@c-73-228-115-212.hsd1.ut.comcast.net) (Remote host closed the connection)
[05:28:03] *** Joins: The_Jag_ (~The_Jag@host-87-21-77-193.retail.telecomitalia.it)
[05:29:33] *** Joins: PortableDave (~portabled@194-193-148-202.tpgi.com.au)
[05:29:51] *** Quits: Cleverness (~clevernes@pool-108-54-152-186.nycmny.fios.verizon.net) (Quit: Leaving)
[05:30:38] <bancroft> KirkMcDonald: I trust you but that's not what i'm seeing unless i'm doing it wrong (which I probably am?) https://bpa.st/NEUQ The dictionary on the signal is always empty
[05:30:42] *** Quits: driib (~driib@185.195.233.168) (Read error: Connection reset by peer)
[05:30:58] *** Joins: driib (~driib@185.195.233.168)
[05:30:59] *** Quits: The_Jag (~The_Jag@host-95-252-246-6.retail.telecomitalia.it) (Ping timeout: 264 seconds)
[05:31:10] *** Quits: djhankb (~djhankb@208.113.164.68) (Read error: Connection reset by peer)
[05:33:28] <bancroft> KirkMcDonald: if I place the dictionary in the task.py files then it works for that specific app (which could be more desirable if I wanted to split the workers some more?
[05:33:30] <bancroft> )
[05:33:57] *** Joins: PublicWifi (~PublicWiF@user/publicwifi)
[05:34:33] <fluter> hi, in the unit test code how can i use the application code in unit test files?
[05:34:39] <fluter> the source is under src/
[05:34:43] <grym> fluter: import it
[05:34:46] <fluter> but i dn't wanna to do import src
[05:34:50] *** Quits: mindlesstux (sid18072@lymington.irccloud.com) (Changing host)
[05:34:50] *** Joins: mindlesstux (sid18072@user/mindlesstux)
[05:35:08] <fluter> grym: when i import mymodule, it says ModuleNotFoundError: No module named mymodule
[05:35:11] *** Joins: Bode_Cleu (~Code_Bleu@user/code-bleu/x-6939963)
[05:35:12] <fluter> because it is in src
[05:35:36] <grym> fluter: are you running tests and your project's package in a venv?
[05:35:38] <fluter> grym: how to let pytest know that src in the files being tested
[05:35:48] <grym> fluter: have you installed your package in that venv?
[05:36:04] <fluter> grym: hmm, in virtualenv yes, but i didn't install it
[05:36:12] <fluter> because there is no setup.py
[05:36:37] <grym> fluter: yet :)
[05:36:54] <fluter> heh right :)
[05:39:14] *** Quits: rpkilby (~rpkilby@c-24-20-208-106.hsd1.or.comcast.net) (Remote host closed the connection)
[05:39:14] *** Joins: junktext_ (~junktext@gateway/vpn/pia/junktext)
[05:40:12] <KirkMcDonald> bancroft: This smells like an order-of-initialization thing. When are these `task` modules imported?
[05:42:12] *** Quits: fluffyballoon (~user@131.93.208.196) (Ping timeout: 258 seconds)
[05:42:34] <bancroft> KirkMcDonald: Ah ok well i'm not really importing them because they're supposed to be celery tasks. I'm registering them so I can make a 1-to-1 with a django model and then I have another model for every time they're executed
[05:42:43] <bancroft> That entirely makes sense
[05:43:21] <bancroft> I can just create the registered_tasks instsance in the task.py files and import that, it worked so I should have stuck with that
[05:43:24] <bancroft> Thank you!
[05:43:57] *** Joins: leduyquang753 (~leduyquan@user/leduyquang753)
[05:44:22] *** Quits: Gustavo6046 (~Gustavo60@user/gustavo6046) (Read error: Connection reset by peer)
[05:46:55] *** Quits: fannagoganna (uid110488@id-110488.tinside.irccloud.com) (Quit: Connection closed for inactivity)
[05:47:02] *** Joins: Gustavo6046 (~Gustavo60@user/gustavo6046)
[05:49:05] *** Quits: reset (~reset@user/reset) (Quit: reset)
[05:50:49] <altendky> not sure if something else has popped up in the meantime, but here's a "nice" read on the "don't run setup.py directly" topic.  https://blog.ganssle.io/articles/2021/10/setup-py-deprecated.html
[05:51:05] *** Joins: mindlesstux[m] (~mindlesst@user/mindlesstux)
[05:53:37] *** Quits: winlundn (nick@2600:3c01::f03c:92ff:fef3:7260) (Quit: WeeChat 2.8)
[05:56:23] *** Quits: Moosadee (~Moosadee@136.32.155.193) (Ping timeout: 258 seconds)
[05:56:45] *** Quits: thurs8060 (~thurs@ip68-225-209-147.ph.ph.cox.net) (Quit: The Lounge - https://thelounge.chat)
[05:59:03] *** Joins: thurs8060 (~thurs@ip68-225-209-147.ph.ph.cox.net)
[06:00:25] *** Joins: Barones (~Barones@2804:7f3:8988:165f:64f7:6679:568d:1fd9)
[06:05:35] *** Joins: Moosadee (~Moosadee@136.32.155.193)
[06:06:03] *** Quits: bitdex (~bitdex@gateway/tor-sasl/bitdex) (Ping timeout: 276 seconds)
[06:06:07] *** Quits: nomic (~nomic@185.217.117.204) (Quit: Leaving)
[06:06:26] *** Joins: nomic (~nomic@185.217.117.204)
[06:06:55] *** Quits: junktext_ (~junktext@gateway/vpn/pia/junktext) (Quit: junktext_)
[06:07:06] *** Joins: junktext_ (~junktext@gateway/vpn/pia/junktext)
[06:07:29] *** Joins: bitdex (~bitdex@gateway/tor-sasl/bitdex)
[06:08:38] *** Joins: CodeMouse92 (~CodeMouse@user/codemouse92)
[06:09:13] *** Quits: Zweimer (~Zweimer@2a02:908:d20:26e0:79eb:ea87:6f38:cccf) (Quit: Client closed)
[06:11:16] <voldial> Anyone use sh (subprocess replacement)? I get stderr out of sh.Command() after it's executed? https://bpa.st/XAHQ I know I can specify _err= and _out= but it now also has _tee=True, and the _tee docs reference "internal buffers" as the destination.. how to I access them?
[06:11:29] <voldial> I -> "
[06:11:32] <voldial> Can I"
[06:13:05] *** Quits: bitdex (~bitdex@gateway/tor-sasl/bitdex) (Remote host closed the connection)
[06:13:54] *** Joins: bitdex (~bitdex@gateway/tor-sasl/bitdex)
[06:14:12] <voldial> reading... https://github.com/amoffat/sh/blob/develop/sh.py
[06:15:10] *** Quits: CodeMouse92 (~CodeMouse@user/codemouse92) (Quit: Oh freddled gruntbuggly | Thy micturations are to me | As plurdled gabbleblotchits | On a lurgid bee)
[06:15:58] *** Quits: FinnElija (~finn_elij@user/finn-elija/x-0085643) (Ping timeout: 260 seconds)
[06:16:22] *** Joins: joyce72 (~joyce72@101.100.162.247)
[06:17:54] *** Joins: FinnElija (~finn_elij@user/finn-elija/x-0085643)
[06:17:56] *** Joins: Pandadub (~Barones@2804:214:8190:af5e:92ea:8e84:ec61:a8a9)
[06:18:29] <joyce72> Hi, I am trying to quickly edit some python code that gets values from an API in JSON format, and then is supposed to take the values, reformat the data and then return a JSON response to a React.JS front end
[06:19:10] <joyce72> I do not understand why I am being thrown a syntax error in this snippet: https://hastebin.com/ocexexadal.rb
[06:19:11] <infobob> https://bpaste.net/F73A (repasted for joyce72)
[06:19:40] *** Quits: nicode (~nic@2607:f2c0:93bd:8400:4271:da28:1b07:4ce8) (Ping timeout: 260 seconds)
[06:19:41] *** Quits: Barones (~Barones@2804:7f3:8988:165f:64f7:6679:568d:1fd9) (Ping timeout: 245 seconds)
[06:20:08] <phy1729> You're missing braces (presumably all_article is a list of dicts
[06:20:23] <Jonno_FTW> joyce72: all_articles.append({
[06:20:30] <Jonno_FTW> and put a brace before the last )
[06:20:43] <voldial> oops. user error as usual. fixed demo: https://bpa.st/KT5Q
[06:21:37] <phy1729> Though pythonically That'd look more like all_articles = [{'id_article': item['id'], ...} for item in response.json()]
[06:22:15] <Jonno_FTW> that's true
[06:22:15] <phy1729> Also presumably jsonResponse is a list, so drop the parens
[06:22:30] *** Joins: jonaskabrink (~jonaskabr@i5E8666AB.versanet.de)
[06:25:40] *** Quits: ST47 (~ST47@wikimedia/st47) (Ping timeout: 252 seconds)
[06:26:44] *** Joins: ST47 (~ST47@wikimedia/st47)
[06:27:18] *** Joins: freeworld (~vit@chello085216193138.chello.sk)
[06:27:51] *** Quits: Gustavo6046 (~Gustavo60@user/gustavo6046) (Read error: Connection reset by peer)
[06:28:34] *** Quits: fikran (~fikran@user/fikran) (Ping timeout: 260 seconds)
[06:28:40] *** Joins: Gustavo6046 (~Gustavo60@user/gustavo6046)
[06:28:59] *** Quits: p-i-_ (~Ohmu@223.206.147.206) (Read error: Connection reset by peer)
[06:29:35] *** Joins: p-i- (~Ohmu@mx-ll-223.206.147-206.dynamic.3bb.co.th)
[06:30:00] *** Joins: reset (~reset@user/reset)
[06:30:09] *** Quits: subopt (~subopt@2603-8081-2302-459a-dd29-6d14-ef1f-cf55.res6.spectrum.com) (Quit: My MacBook has gone to sleep. ZZZzzzâ€¦)
[06:30:22] *** Joins: fikran (~fikran@user/fikran)
[06:30:58] *** Joins: djhankb (~djhankb@208.113.164.68)
[06:31:07] *** Joins: Viewday5 (~Viewday@user/viewday)
[06:31:56] *** Joins: gggp (~gggp@li870-78.members.linode.com)
[06:32:18] <joyce72> oops I missed the braces
[06:32:27] <joyce72> that fixed it
[06:33:01] *** Quits: redrum88 (~redrum88@user/redrum88) (Quit: Going offline, see ya! (www.adiirc.com))
[06:33:19] *** Quits: Viewday (~Viewday@user/viewday) (Ping timeout: 265 seconds)
[06:33:20] *** Viewday5 is now known as Viewday
[06:39:35] *** Joins: ST47_ (~ST47@wikimedia/st47)
[06:39:37] *** Quits: freeworld (~vit@chello085216193138.chello.sk) (Quit: Konversation terminated!)
[06:39:39] *** Quits: FluffyMask (~masque@user/fluffymask) (Quit: WeeChat 3.3)
[06:39:54] *** Joins: freeworld (~vit@chello085216193138.chello.sk)
[06:40:05] *** Quits: ST47 (~ST47@wikimedia/st47) (Ping timeout: 258 seconds)
[06:40:14] *** Quits: mrgz (~mrgz@201-42-0-191.dsl.telesp.net.br) (Remote host closed the connection)
[06:44:14] *** Joins: merijn (~merijn@83-160-49-249.ip.xs4all.nl)
[06:44:42] *** Quits: Pandadub (~Barones@2804:214:8190:af5e:92ea:8e84:ec61:a8a9) (Quit: Leaving)
[06:45:49] *** Quits: gggp (~gggp@li870-78.members.linode.com) (Quit: My MacBook has gone to sleep. ZZZzzzâ€¦)
[06:47:50] *** Quits: masta`` (~oyster@user/masta/x-2645138) (Remote host closed the connection)
[06:48:18] *** Joins: Saxtheowl (~roro@78.192.226.182)
[06:48:35] *** Quits: iflema (~ian@user/iflema) (Quit: iflema)
[06:49:05] <Saxtheowl> I dont understand this condition "0 <= isbn.find('X') < len(isbn) - 1" is there another way to write it
[06:49:34] *** Quits: PublicWifi (~PublicWiF@user/publicwifi) (Ping timeout: 260 seconds)
[06:49:47] <BrenBarn> it's the same as `"0 <= isbn.find('X') and isbn.find('X') < len(isbn) - 1`
[06:50:04] <BrenBarn> s/"//
[06:51:11] <Saxtheowl> okay
[06:52:21] *** Quits: ST47_ (~ST47@wikimedia/st47) (Ping timeout: 258 seconds)
[06:52:50] *** Joins: iflema (~ian@user/iflema)
[06:54:14] <voldial> what's the builtin to get ValueError out of a instance of "class SomeValueError(ValueError): pass"? it's like a higher level of "type"
[06:55:26] <KirkMcDonald> type(foo).__bases__
[06:55:31] *** Quits: semeion (~semeion@user/semeion) (Ping timeout: 245 seconds)
[06:56:30] *** Quits: stormdancer (~stormdanc@185.245.86.121) (Remote host closed the connection)
[06:56:42] <voldial> KirkMcDonald: aaah. I hadnt figured out it it's a type(), that worked.
[06:56:42] *** Quits: Macuser (~Macuser@216.30.159.201) (Quit: Textual IRC Client: www.textualapp.com)
[06:57:25] <Saxtheowl> Why does I have a syntax error here "if len(isbn) != 10 and len(isbn) != 13 or 'X' in isbn and isbn.find('X') <= 0 and isbn.find('X' < len(isbn) - 1 \
[06:57:29] <Saxtheowl>     or len(isbn) == 13 and isbn.find('X'):
[06:57:30] <Saxtheowl> "
[06:59:41] *** Joins: gggp (~gggp@li870-78.members.linode.com)
[06:59:58] *** Quits: gggp (~gggp@li870-78.members.linode.com) (Client Quit)
[07:00:54] *** Joins: yeirr (~yeirr@user/yeirr)
[07:01:32] *** Joins: gggp (~gggp@li870-78.members.linode.com)
[07:01:44] *** Quits: gggp (~gggp@li870-78.members.linode.com) (Client Quit)
[07:02:08] *** Joins: gggp (~gggp@li870-78.members.linode.com)
[07:02:13] <Saxtheowl> whoops I forget a )
[07:02:52] *** Quits: gggp (~gggp@li870-78.members.linode.com) (Client Quit)
[07:02:58] <junktext_> Saxtheowl, I'm about to go to bed, but I'd recommend using https://bpa.st/+python to paste your code, and then mention the link to that in this channel.
[07:03:04] *** Joins: PublicWifi (~PublicWiF@user/publicwifi)
[07:06:17] *** Joins: ST47 (~ST47@wikimedia/st47)
[07:08:17] *** Joins: semeion (~semeion@user/semeion)
[07:08:46] <Saxtheowl> okay
[07:09:21] *** Quits: Gustavo6046 (~Gustavo60@user/gustavo6046) (Remote host closed the connection)
[07:09:56] *** Joins: Gustavo6046 (~Gustavo60@user/gustavo6046)
[07:10:11] <Disposeable-Nick> Hi, could someone help me fix syntax on this, making my brain hurt: if text.find('%s' % (master)' PRIVMSG #Python :!quit') != -1:
[07:10:11] <Disposeable-Nick>         ircwrite('QUIT :python bot\r\n')
[07:10:53] <Disposeable-Nick> master = Nick!~Ident@host
[07:12:17] *** Quits: junktext_ (~junktext@gateway/vpn/pia/junktext) (Ping timeout: 258 seconds)
[07:13:00] <Disposeable-Nick> Basically if bot's master says in the channel !quit, then it quit, but only if the Nick!~Ident@Host (master) matches of course.
[07:14:11] *** Quits: ST47 (~ST47@wikimedia/st47) (Ping timeout: 264 seconds)
[07:14:22] <Disposeable-Nick> Any suggestions to fix syntax?
[07:15:05] *** Quits: zeden (~zeden@user/zeden) (Quit: WeeChat 3.3)
[07:16:13] *** Joins: gggp (~gggp@li870-78.members.linode.com)
[07:16:30] *** Quits: Lando-SpacePimp (~Lando-Spa@user/lando-spacepimp) (Ping timeout: 258 seconds)
[07:16:53] *** Quits: semeion (~semeion@user/semeion) (Ping timeout: 258 seconds)
[07:17:02] *** Quits: gggp (~gggp@li870-78.members.linode.com) (Client Quit)
[07:18:58] *** Quits: merijn (~merijn@83-160-49-249.ip.xs4all.nl) (Ping timeout: 260 seconds)
[07:19:07] *** Joins: Seto_Kaiba (~hunterkll@remote.kisaracorporation.com)
[07:21:18] *** Quits: greknod28 (~grek@120.88.171.98) (Ping timeout: 260 seconds)
[07:21:35] *** Joins: elkclone (~elkclone@user/elkclone)
[07:21:51] *** Quits: RoyK (~roy@user/royk) (Remote host closed the connection)
[07:22:19] *** Quits: Hunterkll (~hunterkll@2001:470:8b06:100:2958:1194:aedf:1fa3) (Ping timeout: 252 seconds)
[07:25:57] <queue[m]> base by nick!ident@host and cctp version, never tell anyone you use version for htis
[07:26:04] <queue[m]> its a trick we use on the backend
[07:27:02] *** Joins: ST47 (~ST47@wikimedia/st47)
[07:27:05] *** Joins: RoyK (~roy@user/royk)
[07:29:39] *** Joins: semeion (~semeion@user/semeion)
[07:29:43] *** Joins: stormdancer (~stormdanc@185.245.86.121)
[07:29:59] <OMGOMG> closed circuit telepathy
[07:30:51] *** Quits: djhankb (~djhankb@208.113.164.68) (Read error: Connection reset by peer)
[07:31:22] *** Joins: djhankb (~djhankb@208.113.164.68)
[07:31:33] *** Quits: bloody (~bloody@user/bloody) (Quit: Always focus on how far you've come, rather than how far you have left to go)
[07:32:00] <Mindscape> the thoughforms are coming from INSIDE the SUBNET!
[07:32:19] *** Quits: pycurious (~Adium@user/pycurious) (Quit: Leaving.)
[07:34:22] *** Quits: stormdancer (~stormdanc@185.245.86.121) (Ping timeout: 260 seconds)
[07:35:11] *** Joins: Gudddu (~Guddu@200-90-226-22.baf.movistar.cl)
[07:36:02] *** Quits: supakeen (~user@python/site-packages/supakeen) (Quit: WeeChat 3.3)
[07:36:31] *** Joins: supakeen (~user@python/site-packages/supakeen)
[07:38:21] *** Quits: Guddu (~Guddu@200-90-224-92.baf.movistar.cl) (Ping timeout: 258 seconds)
[07:39:58] *** Quits: LiftLeft (~LiftLeft@216-26-118-34.dynamic.nelson.airstreamcomm.net) (Ping timeout: 260 seconds)
[07:41:40] *** Quits: llh (~llh@user/llh) (Read error: Connection reset by peer)
[07:43:56] <Disposeable-Nick> queue[m], not sure what you mean?
[07:44:06] *** Quits: Linux77 (~Linux7_7@186.233.182.226) (Ping timeout: 258 seconds)
[07:44:39] <queue[m]> for irf rfc, nevermind man
[07:47:32] *** Joins: adiKt (uid472628@id-472628.tinside.irccloud.com)
[07:47:54] *** Quits: Moosadee (~Moosadee@136.32.155.193) (Ping timeout: 260 seconds)
[07:48:45] <Disposeable-Nick> Been around 30 mins, just wondering if anyone had a syntax fix for me, for the above command?
[07:48:51] <Disposeable-Nick> Please and thank you.
[07:54:29] *** Joins: gggpkm (~gggpkm@114.245.104.31)
[07:55:57] *** Quits: jeho (~jehoshaph@user/jehoshaphat) (Quit: Leaving)
[07:55:59] *** Quits: cmbengue (~Thunderbi@207.191.249.160) (Quit: Thanks, see you later.)
[07:59:21] <grawity> Disposeable-Nick: "%s PRIVMSG #python etc" % master
[08:00:12] *** Quits: y1n (~y1n@91.141.38.31.wireless.dyn.drei.com) (Ping timeout: 258 seconds)
[08:00:19] *** Joins: carl- (~carl-@185.103.188.130)
[08:02:22] *** Joins: carl-- (~carl-@c-138ee555.02-180-73746f39.bbcust.telenor.se)
[08:03:24] *** Joins: LiftLeft (~LiftLeft@216-26-118-34.dynamic.nelson.airstreamcomm.net)
[08:04:48] *** Quits: carl- (~carl-@185.103.188.130) (Ping timeout: 258 seconds)
[08:06:08] *** Joins: saroy (~Sandipan@45.249.73.204)
[08:13:06] *** Quits: Gustavo6046 (~Gustavo60@user/gustavo6046) (Read error: Connection reset by peer)
[08:14:08] <Disposeable-Nick> grawity, you absolute legend! Here to save the day again.  Just know, I do appreciate all the help very much.  And I apologise for however rudimentary the help may seem; but so know that I am very appreciative either way.
[08:14:52] <Disposeable-Nick> but just so you know*
[08:16:12] *** Joins: Gustavo6046 (~Gustavo60@user/gustavo6046)
[08:18:33] *** Joins: sandb0y (~pirate@user/sandb0y)
[08:24:36] *** Quits: semeion (~semeion@user/semeion) (Quit: WeeChat 3.3)
[08:27:34] *** Quits: pankid (~quassel@pankid.club) (Quit: https://quassel-irc.org - Chat comfortably. Anywhere.)
[08:28:28] *** Joins: pankid (~quassel@pankid.club)
[08:29:38] <Disposeable-Nick> By the way, I'm not sureif can be done, but in mIRC, you can wildcard $chan; meaning any channel you're doing a thing in, and $nick, meaning it will type out the actual nick/s of the person/s involved in the thing - something similar be done for my Python bot?
[08:29:49] *** Joins: QuaternionsRock (~Quaternio@2601:197:a7f:79d6:6151:4e5d:e75a:321)
[08:30:03] <QuaternionsRock> Something is seriously wrong with numpy.moveaxis lol
[08:30:43] <grawity> Disposeable-Nick: you actually have to do what mIRC internally does, that is, parse the input line into components
[08:30:48] <QuaternionsRock> `timeit.timeit('x.transpose((0, 2, 3, 1)).reshape(-1)', 'import numpy as np\nx=np.zeros((4, 3, 6, 7))')` comes in at around 1.85 seconds on my system
[08:30:52] *** Quits: djhankb (~djhankb@208.113.164.68) (Read error: Connection reset by peer)
[08:31:24] *** Joins: djhankb (~djhankb@208.113.164.68)
[08:31:27] <QuaternionsRock> `timeit.timeit('np.moveaxis(x, (1,), (3,)).reshape(-1)', 'import numpy as np\nx=np.zeros((4, 3, 6, 7))')` comes in at ~6.2 seconds
[08:31:53] <rb> you can make an IRC parser that 90% works in about 50 lines with a simple state machine
[08:32:02] *** Quits: nomic (~nomic@185.217.117.204) (Quit: Leaving)
[08:32:16] <grawity> Disposeable-Nick: once you turn it into a list of words, like [":foo", "PRIVMSG", "#python", "Hello there"], then the channel is always parameter 1 of PRIVMSG, etc
[08:32:16] <QuaternionsRock> Since `moveaxis` uses `transpose` internally it's definitely something in the implementation itself
[08:32:57] <Disposeable-Nick> Anything I can read or search up to learn how to implement such a thing?
[08:33:02] <rb> Disposeable-Nick: read the RFC
[08:33:06] *** Quits: Hexmind (~Hexmind@modemcable049.25-131-66.mc.videotron.ca) (Quit: It)
[08:33:24] <rb> https://www.irchelp.org/protocol/rfc/
[08:33:54] *** Joins: stranac (~stranac@195.29.239.126)
[08:35:33] <grawity> and after reading the RFC and trying to implement it, get told that it no longer accurately reflects reality and the "real" spec is https://modern.ircdocs.horse/
[08:35:52] <Disposeable-Nick> https://dpaste.com/95S4ES6G2 | this is slightly old as I have fixed some commented out stuff as I got help to fix it in here, but this is my progress with my bot that I am writing so far.
[08:35:53] *** Quits: stranac (~stranac@195.29.239.126) (Read error: Connection reset by peer)
[08:36:10] <grawity> tbh you can make an IRC parser that 100% works in about 40 lines with *no* state machine
[08:36:22] *** Joins: stranac (~stranac@195.29.239.126)
[08:36:41] <evidlo> does it really make sense to adapt all the functions in a library with normally take str filenames to take pathlib.Path filenames?  It's kind of lame that ducktyping is failing here
[08:37:19] <grawity> Disposeable-Nick: so mIRC internally does something along these lines https://github.com/grawity/code/blob/master/lib/python/nullroute/irc/__init__.py#L1-L40
[08:37:46] *** Quits: fikran (~fikran@user/fikran) (Ping timeout: 258 seconds)
[08:37:56] <grawity> Disposeable-Nick: though over time it does end up getting more complex, like this https://github.com/grawity/code/blob/master/lib/python/nullroute/irc/parse.py
[08:39:43] *** Joins: fikran (~fikran@user/fikran)
[08:39:43] *** Joins: whatsupdoc26 (~whatsupdo@148.64.20.57)
[08:41:06] *** Quits: LiftLeft (~LiftLeft@216-26-118-34.dynamic.nelson.airstreamcomm.net) (Ping timeout: 260 seconds)
[08:42:13] <aphysically> okay this patch manages to remove 6 # type: ignore from the codebase B)
[08:42:28] <grawity> hmm though honestly a lot of that could be replaced with 1-line regex match if I didn't care about some extremely edge cases
[08:42:47] *** Quits: sandb0y (~pirate@user/sandb0y) (Quit: Time for another great escape)
[08:42:53] <QuaternionsRock> evidlo what are you doing that doesn't allow duck typing, exactly?
[08:42:53] <aphysically> ooo the PEP 505 thread on python-dev suddenly got activity the past couple days
[08:43:08] *** Quits: seoul_man (~meh@user/seoul-man/x-5066766) (Ping timeout: 258 seconds)
[08:43:45] <Disposeable-Nick> Honestly, I'll the most basic and rudimentary way of doing things for now as I'm still learning - and am not trying to run before I can crawl, I only started to learn this a few days ago...
[08:43:55] <Disposeable-Nick> Before that, I had zero Python knowledge
[08:44:36] <Disposeable-Nick> I'll take*
[08:49:15] *** Joins: vd626 (~vd62@bras-base-mtrlpq2848w-grc-41-70-53-240-121.dsl.bell.ca)
[08:52:16] *** Joins: Moyst_ (~moyst@user/moyst)
[08:52:23] *** Joins: horseface (~horseface@user/horseface)
[08:52:53] *** Quits: vd62 (~vd@bras-base-mtrlpq2848w-grc-41-70-53-240-121.dsl.bell.ca) (Ping timeout: 256 seconds)
[08:54:43] *** Quits: Moyst (~moyst@user/moyst) (Ping timeout: 252 seconds)
[08:57:10] *** Quits: elkclone (~elkclone@user/elkclone) (Quit: Leaving)
[08:58:36] *** Quits: faceface (~faceface@user/faceface) (Remote host closed the connection)
[08:59:24] *** Joins: mumixam (james@user/mumixam)
[08:59:31] <p-i-> https://github.com/Lnk2past/copperhead/issues/12 < pity that Copperhead falls flat on its face on my mac. It's a great looking tool. Just doesn't work :(
[09:01:08] <aphysically> only one # type: ignore I couldn't get rid of in the rich repr monkey patching metaprogramming file ;^(
[09:01:14] <aphysically> down from eight type ignores to one though
[09:03:13] <p-i-> zomg now `ImportError: Numba needs NumPy 1.20 or less` :(((
[09:04:44] <Disposeable-Nick> grawity, cheers for the help! I will be back at a later time to try learn how to implement the above, but I also need an alternative for if when someone says: PONG, 433, 372, 376 and 396, lol.  If only they couldn't be setof by others, I have all my timing down and perfected, heh.
[09:05:11] <Disposeable-Nick> set off*
[09:05:28] *** Quits: whatsupdoc (uid509081@id-509081.hampstead.irccloud.com) (Quit: Connection closed for inactivity)
[09:07:19] *** Joins: bilb_ono (~alexmarsh@ip184-189-224-55.sb.sd.cox.net)
[09:07:57] *** Joins: FH_thecat (~FH_thecat@75.11.25.212.ftth.as8758.net)
[09:08:10] *** Quits: remexre (~nathan@user/remexre) (Quit: WeeChat 3.1)
[09:08:10] *** Quits: yeirr (~yeirr@user/yeirr) (Ping timeout: 260 seconds)
[09:09:33] *** Joins: remexre (~remexre@user/remexre)
[09:10:34] *** Joins: merijn (~merijn@83-160-49-249.ip.xs4all.nl)
[09:10:39] *** Joins: gggp (~gggp@li870-78.members.linode.com)
[09:10:44] *** Quits: gggp (~gggp@li870-78.members.linode.com) (Client Quit)
[09:12:43] *** Joins: mexen (uid495612@user/mexen)
[09:13:30] *** Joins: parv (~quass@user/parv)
[09:15:10] *** Quits: merijn (~merijn@83-160-49-249.ip.xs4all.nl) (Ping timeout: 260 seconds)
[09:15:36] *** Joins: upsala (~zcb@185.213.155.160)
[09:17:37] <grawity> Disposeable-Nick: if you want to start simple, here's the minimal version of the earlier example https://paste.rs/zOU, and here's how you'd use it https://paste.rs/L1W
[09:18:23] *** Quits: whatsupdoc26 (~whatsupdo@148.64.20.57) (Ping timeout: 256 seconds)
[09:19:08] *** Joins: manti7 (~manti7@176.10.104.94)
[09:19:43] *** Joins: vd62657 (~vd626@bras-base-mtrlpq2848w-grc-41-70-53-240-121.dsl.bell.ca)
[09:20:45] *** Joins: whatsupdoc (~whatsupdo@148.64.18.57)
[09:21:57] *** Quits: QuaternionsRock (~Quaternio@2601:197:a7f:79d6:6151:4e5d:e75a:321) (Quit: Client closed)
[09:22:10] *** Quits: jazzy (~jaziz@user/jaziz) (Ping timeout: 260 seconds)
[09:23:29] *** Quits: vd626 (~vd62@bras-base-mtrlpq2848w-grc-41-70-53-240-121.dsl.bell.ca) (Ping timeout: 256 seconds)
[09:25:56] *** Joins: mei (~mei@user/mei)
[09:26:55] <Disposeable-Nick> Pretty immaculate stuff, grawity!  I will drop this in script tomorrow, but will make a backup in case, and I'll try it out - I really appreciate all of your help, mate.
[09:26:55] *** Joins: yeirr (~yeirr@user/yeirr)
[09:27:22] *** Quits: vd62657 (~vd626@bras-base-mtrlpq2848w-grc-41-70-53-240-121.dsl.bell.ca) (Quit: Client closed)
[09:27:42] <Disposeable-Nick> Take care all.
[09:28:01] *** Quits: Disposeable-Nick (~Ident@user/disposeable-nick) (Quit: Leaving)
[09:28:03] *** Joins: vd62657 (~vd62657@bras-base-mtrlpq2848w-grc-41-70-53-240-121.dsl.bell.ca)
[09:28:45] *** Quits: horseface (~horseface@user/horseface) (Ping timeout: 258 seconds)
[09:30:35] *** Quits: djhankb (~djhankb@208.113.164.68) (Read error: Connection reset by peer)
[09:30:52] *** Joins: Gurkenglas (~Gurkengla@dslb-002-203-144-204.002.203.pools.vodafone-ip.de)
[09:31:09] *** Joins: djhankb (~djhankb@208.113.164.68)
[09:31:35] *** Quits: Spawns_Carpeting (~Spawns_Ca@user/spawns-carpeting/x-6969421) (Ping timeout: 264 seconds)
[09:31:57] *** Joins: gggp (~gggp@li870-78.members.linode.com)
[09:32:05] *** Quits: gggp (~gggp@li870-78.members.linode.com) (Client Quit)
[09:32:08] *** Quits: Mindscape (~Lindis@user/lindis) (Quit: if you can read this THE BITCH FELL OFF)
[09:34:16] *** Quits: ihristov (~ihristov@85.187.46.226) (Quit: Connection closed)
[09:35:43] *** Quits: upsala (~zcb@185.213.155.160) (Quit: WeeChat 3.3)
[09:36:32] *** Joins: palasso (~palasso@user/palasso)
[09:36:35] *** Joins: rendar (~rendar@user/rendar)
[09:36:54] *** Joins: vd626576 (~vd62657@bras-base-mtrlpq2848w-grc-41-70-53-240-121.dsl.bell.ca)
[09:37:03] *** Joins: de-facto_ (~de-facto@user/de-facto)
[09:37:57] *** Quits: de-facto (~de-facto@user/de-facto) (Ping timeout: 276 seconds)
[09:39:55] *** de-facto_ is now known as de-facto
[09:40:29] *** Quits: vd62657 (~vd62657@bras-base-mtrlpq2848w-grc-41-70-53-240-121.dsl.bell.ca) (Ping timeout: 256 seconds)
[09:40:46] *** Joins: jmiehe (~Thunderbi@user/jmiehe)
[09:42:42] *** Quits: gggpkm (~gggpkm@114.245.104.31) (Ping timeout: 260 seconds)
[09:42:46] <ksynwa> In GitHub's API documentation, they say that if the rate limit is exceeded, you get a JSON response with a "message" key telling you about it. Anyone knows how I can catch this message using urllib? From what I understand, when I try to do `urllib.request.urlopen(...)`, it will just raise a HTTPError exception. So I am not sure how to read this message in this case.
[09:42:54] <ksynwa> Link to documentation I just mentioned: https://docs.github.com/en/rest/overview/resources-in-the-rest-api#rate-limiting
[09:43:17] *** Joins: merijn (~merijn@83-160-49-249.ip.xs4all.nl)
[09:43:33] <jmiehe> Currently reading more about "click". About their "complex example" in the repo, file https://github.com/pallets/click/blob/main/examples/complex/complex/cli.py, line 42 â€¦ what does the ["cli"] parameter to __import__ actually change? I tried putting in random stuff and it still works.
[09:43:37] *** Quits: slowButPresent (~slowButPr@user/slowbutpresent) (Quit: leaving)
[09:44:18] *** Quits: vd626576 (~vd62657@bras-base-mtrlpq2848w-grc-41-70-53-240-121.dsl.bell.ca) (Quit: Client closed)
[09:45:04] *** Joins: ihristov (~ihristov@85.187.46.226)
[09:45:20] *** Joins: moose (~moose@user/moose)
[09:46:37] *** Quits: seednode4 (~seednode@user/seednode) (Quit: Nihil supernum.)
[09:46:49] *** Quits: SallyAhaj (~SallyAhaj@user/sallyahaj) (Quit: Leaving)
[09:47:18] *** Joins: seednode4 (~seednode@user/seednode)
[09:48:06] *** Quits: merijn (~merijn@83-160-49-249.ip.xs4all.nl) (Ping timeout: 265 seconds)
[09:49:35] *** Quits: ihristov (~ihristov@85.187.46.226) (Client Quit)
[09:50:50] <parv> ksynwa, Looks like you would catch the HTTPError; in the that "except" block, check if it is 403 error & the response is JSON kind, with the key of interest.
[09:50:55] *** Quits: FH_thecat (~FH_thecat@75.11.25.212.ftth.as8758.net) (Quit: Leaving)
[09:51:19] <ksynwa> parv: Will try that. Thanks.
[09:51:59] <parv> ksynwa, A slightly better way would be to identity 403 error from HTTPError or urllib, if there is such support to begin with
[09:53:08] *** Joins: gusto (~Augustus@109.255.100.54)
[09:53:54] *** Quits: sbrown (~sbrown@66.44.16.44) (Quit: Leavingâ€¦)
[09:54:06] *** Joins: dvx (~dvx@185.63.97.64)
[09:54:18] *** Joins: ExeciN (~ExeciN@user/nicexe)
[09:54:31] <parv> ( I personally do not like having to look for substrings in an exception object (above & IOError e.g) but sometimes there is just not enough granularity :-| )
[09:54:39] *** Joins: kosh (~kosh@user/kosh)
[09:54:52] <parv> s/identity/identify/
[09:56:52] *** Quits: tgamblin (~tgamblin@2607:fea8:c29d:d7c0:fa88:8bc5:c0d2:27cc) (Remote host closed the connection)
[09:57:38] *** Joins: tgamblin (~tgamblin@2607:fea8:c29d:d7c0:fa88:8bc5:c0d2:27cc)
[09:59:16] *** Quits: AquaL1te (~AquaL1te@user/aqual1te) (Ping timeout: 245 seconds)
[10:00:32] *** Joins: NeoCore (~neocore@37.120.204.252)
[10:04:56] *** Quits: jmiehe (~Thunderbi@user/jmiehe) (Quit: jmiehe)
[10:05:27] *** Quits: ElPresidente (~ElPreside@2600:1700:3d10:4870:9815:b867:1c3c:f13d) (Quit: Leaving)
[10:06:33] *** Quits: redgloboli (~redglobol@user/redgloboli) (Quit: ...enter the matrix...)
[10:07:18] *** Quits: adiKt (uid472628@id-472628.tinside.irccloud.com) (Quit: Connection closed for inactivity)
[10:08:04] *** Joins: rakoon (~rakoon@2001:985:f4c6:1:7740:fe8d:fb8b:b914)
[10:10:33] <parv> .oO( geeks for geeks [.] org is: useless drivel; copy-pasted from elsewhere; low-density information )
[10:12:00] <parv> Where does one find __import__ documented, outside of PEPs & release notes (https://www.python.org/search/?q=__import__&submit=) ?
[10:16:05] *** Joins: winterflaw (~winterfla@gateway/tor-sasl/winterflaw)
[10:16:13] <hexnewbie> help(__import__) does return a bit of documentation that has been useful enough before importlib (I think) became a thing, though I did have to guess some things
[10:17:15] <hexnewbie> And the online documentation for importlib does link to the full documentation for __import__ too
[10:17:17] *** Joins: Lazenca (Lazenca@user/lazenca)
[10:17:22] *** Quits: PortableDave (~portabled@194-193-148-202.tpgi.com.au) (Quit: My MacBook has gone to sleep. ZZZzzzâ€¦)
[10:17:40] *** Joins: vdamewood (~vdamewood@fedora/vdamewood)
[10:19:10] <parv> hexnewbie, Thanks; will check importlib.
[10:20:41] *** Joins: Mattiaslndstrm (~Mattiasln@c213-103-137-235.bredband.tele2.se)
[10:21:01] *** Joins: jeho (~jehoshaph@user/jehoshaphat)
[10:22:25] *** Quits: ttree (~ttree0@c-73-239-62-159.hsd1.wa.comcast.net) (Ping timeout: 258 seconds)
[10:26:38] *** Joins: FFY00_ (~FFY00@archlinux/trusteduser/ffy00)
[10:26:42] *** Joins: lifefir31 (~lifefir3@152.37.120.101)
[10:27:07] *** Joins: WayToDoor8 (~WayToDoor@user/waytodoor)
[10:27:11] *** Quits: jeho (~jehoshaph@user/jehoshaphat) (Quit: Leaving)
[10:27:30] *** Joins: phylaz0 (~phylaz@219.92-221-176.customer.lyse.net)
[10:27:47] *** Joins: kiska6 (james@user/kiska)
[10:28:04] *** Joins: cache (~cache@user/cacheyourdreams)
[10:28:04] *** Joins: seanBE_ (~seanBE@ec2-34-243-193-160.eu-west-1.compute.amazonaws.com)
[10:28:06] *** Joins: jootoi_ (~jootoi@130.61.158.197)
[10:28:22] *** Joins: henbruas_ (~henbruas@ti0003a400-3211.bb.online.no)
[10:28:23] *** Quits: mei (~mei@user/mei) (Read error: Connection reset by peer)
[10:28:24] *** Joins: CrypticSquared (~CrypticS_@user/crypticsquared)
[10:28:27] *** Joins: brentaarnold_ (~brentaarn@32.132.115.46)
[10:28:36] *** Joins: EGH_z (~EGH@185.25.195.104)
[10:28:46] *** Joins: _Ev (~ev@user/ev/x-8999918)
[10:28:49] *** Joins: Exagone313 (exa@irc.moe)
[10:29:10] *** Joins: mei (~mei@user/mei)
[10:29:27] *** Joins: aluria_ (~aluria@canonical/aluria)
[10:29:41] *** Quits: whatsupdoc (~whatsupdo@148.64.18.57) (Quit: Client closed)
[10:29:46] *** Joins: ZeroKnight_ (zeroknight@dimensionzero.net)
[10:30:05] *** Joins: bdeshi- (~bdeshi@bdeshi.space)
[10:30:12] *** Joins: lericson_ (~lericson@user/lericson)
[10:30:23] *** Joins: anorthall_ (~anorthall@user/anorthall)
[10:30:29] *** Joins: Sir_Burns (~japa@ec2-13-48-124-121.eu-north-1.compute.amazonaws.com)
[10:30:33] *** Joins: ouemt_ (~quassel@user/ouemt)
[10:30:46] *** Joins: opashley (~opashley@70.138.105.34.bc.googleusercontent.com)
[10:30:54] *** Joins: jessicar1 (~shirogits@user/jessicara)
[10:30:59] *** Quits: djhankb (~djhankb@208.113.164.68) (Read error: Connection reset by peer)
[10:31:00] *** Joins: alxndr_ (~alexander@ybti.net)
[10:31:30] *** Joins: djhankb (~djhankb@208.113.164.68)
[10:33:36] *** Joins: arash- (arash@thinks.life.is-a.beauty)
[10:37:31] *** Joins: aniruddha (uid340443@id-340443.ilkley.irccloud.com)
[10:38:08] *** Quits: jetchisel (jetchisel@user/jetchisel) (Ping timeout: 258 seconds)
[10:39:40] *** Joins: jetchisel (jetchisel@user/jetchisel)
[10:39:50] *** Quits: Hanii (~textual@2a00:23c5:c587:6d00:a5f6:b502:565b:9aff) (Ping timeout: 260 seconds)
[10:39:50] *** Quits: CrypticS_ (~CrypticS_@user/crypticsquared) (Ping timeout: 260 seconds)
[10:39:50] *** Quits: CapnKernel (foobar@gromit.mixdown.ca) (Ping timeout: 260 seconds)
[10:39:50] *** Quits: olbat (~olbat@user/olbat) (Ping timeout: 260 seconds)
[10:39:50] *** Quits: bdeshi (~bdeshi@bdeshi.space) (Ping timeout: 260 seconds)
[10:39:50] *** Quits: seanBE (~seanBE@ec2-34-243-193-160.eu-west-1.compute.amazonaws.com) (Ping timeout: 260 seconds)
[10:39:50] *** Quits: Exa (exa@irc.moe) (Ping timeout: 260 seconds)
[10:39:50] *** Quits: cacheyourdreams (~cache@user/cacheyourdreams) (Ping timeout: 260 seconds)
[10:39:50] *** Quits: Adrixan (~Adrixan@218.72.75.34.bc.googleusercontent.com) (Ping timeout: 260 seconds)
[10:39:50] *** Quits: noyb (~noyb@user/noyb) (Ping timeout: 260 seconds)
[10:39:50] *** Quits: lifefir3 (~lifefir3@152.37.120.101) (Ping timeout: 260 seconds)
[10:39:50] *** Quits: brentaarnold (~brentaarn@24.112.61.90) (Ping timeout: 260 seconds)
[10:39:50] *** Quits: ronny (~ronny@2001:470:69fc:105::b57) (Ping timeout: 260 seconds)
[10:39:50] *** Quits: meain (~meain@2001:470:69fc:105::2db) (Ping timeout: 260 seconds)
[10:39:50] *** Quits: kiska (james@user/kiska) (Ping timeout: 260 seconds)
[10:39:50] *** Exagone313 is now known as Exa
[10:39:50] *** Quits: OliverUK (~opashley@70.138.105.34.bc.googleusercontent.com) (Ping timeout: 260 seconds)
[10:39:50] *** Quits: voldial (~user@user/voldial) (Ping timeout: 260 seconds)
[10:39:50] *** Quits: obiwahn (~heini@user/obiwahn) (Ping timeout: 260 seconds)
[10:39:50] *** Quits: Jackal-o-lantern (~quassel@173.195.145.98) (Ping timeout: 260 seconds)
[10:39:50] *** Quits: jootoi (~jootoi@130.61.158.197) (Ping timeout: 260 seconds)
[10:39:50] *** Quits: ChrisWarrick (kwpolska@user/kwpolska) (Ping timeout: 260 seconds)
[10:39:50] *** Quits: anorthall (~anorthall@user/anorthall) (Ping timeout: 260 seconds)
[10:39:50] *** Quits: MrBurns (~japa@ec2-13-48-124-121.eu-north-1.compute.amazonaws.com) (Ping timeout: 260 seconds)
[10:39:50] *** Quits: ZeroKnight (zeroknight@dimensionzero.net) (Ping timeout: 260 seconds)
[10:39:50] *** Quits: fructose (~fructose@user/fructose) (Ping timeout: 260 seconds)
[10:39:50] *** Quits: fartyfoam (~fartyfoam@178-118-118-2.access.telenet.be) (Ping timeout: 260 seconds)
[10:39:50] *** Quits: EGH (~EGH@185.25.195.104) (Ping timeout: 260 seconds)
[10:39:50] *** Quits: spai (~spai@user/spai) (Ping timeout: 260 seconds)
[10:39:50] *** Quits: peterandre (peterandre@2605:6400:c847:1524::4251) (Ping timeout: 260 seconds)
[10:39:50] *** Quits: henbruas (~henbruas@ti0003a400-3211.bb.online.no) (Ping timeout: 260 seconds)
[10:39:50] *** Quits: alxndr (~alexander@ybti.net) (Ping timeout: 260 seconds)
[10:39:50] *** Quits: Hash (~weechat@thestonedapes.com) (Ping timeout: 260 seconds)
[10:39:50] *** Quits: ouemt (~quassel@user/ouemt) (Ping timeout: 260 seconds)
[10:39:50] *** Quits: phylaz (~phylaz@219.92-221-176.customer.lyse.net) (Ping timeout: 260 seconds)
[10:39:50] *** Quits: Buliarous (~gypsydang@185.207.166.57) (Ping timeout: 260 seconds)
[10:39:50] *** Quits: FFY00 (~FFY00@archlinux/trusteduser/ffy00) (Ping timeout: 260 seconds)
[10:39:50] *** Quits: Masklin_Gurder (~joel@h-155-4-23-152.A230.priv.bahnhof.se) (Ping timeout: 260 seconds)
[10:39:50] *** Quits: lericson (~lericson@user/lericson) (Ping timeout: 260 seconds)
[10:39:50] *** Quits: WayToDoor (~WayToDoor@user/waytodoor) (Ping timeout: 260 seconds)
[10:39:50] *** Quits: arash (arash@thinks.life.is-a.beauty) (Ping timeout: 260 seconds)
[10:39:50] *** Quits: jessicara (~shirogits@user/jessicara) (Ping timeout: 260 seconds)
[10:39:50] *** Quits: aluria (~aluria@canonical/aluria) (Ping timeout: 260 seconds)
[10:39:50] *** Quits: hexa- (~hexa-@juno.lossy.network) (Ping timeout: 260 seconds)
[10:39:50] *** Quits: niko (~niko@libera/staff/niko) (Ping timeout: 615 seconds)
[10:39:50] *** bdeshi- is now known as bdeshi
[10:39:50] *** brentaarnold_ is now known as brentaarnold
[10:39:50] *** lifefir31 is now known as lifefir3
[10:39:50] *** ZeroKnight_ is now known as ZeroKnight
[10:39:50] *** kiska6 is now known as kiska
[10:39:51] *** phylaz0 is now known as phylaz
[10:39:51] *** henbruas_ is now known as henbruas
[10:39:51] *** WayToDoor8 is now known as WayToDoor
[10:40:20] *** Joins: Masklin_Gurder (~joel@h-155-4-23-152.A230.priv.bahnhof.se)
[10:41:04] *** Quits: jonaskabrink (~jonaskabr@i5E8666AB.versanet.de) (Quit: jonaskabrink)
[10:41:19] *** Joins: ChrisWarrick (kwpolska@user/kwpolska)
[10:41:21] *** Joins: hexa- (~hexa-@juno.lossy.network)
[10:41:31] *** Joins: jonaskabrink (~jonaskabr@i5E8666AB.versanet.de)
[10:41:43] *** Joins: obiwahn (~heini@user/obiwahn)
[10:41:45] *** Joins: niko (~niko@libera/staff/niko)
[10:41:58] *** Quits: grys (~quassel@botters/gry) (Ping timeout: 258 seconds)
[10:42:02] *** Joins: ubert (~Thunderbi@91.141.37.135.wireless.dyn.drei.com)
[10:42:27] *** Joins: gggpkm (~gggpkm@114.245.104.31)
[10:42:38] *** Quits: shokohsc8 (~shokohsc@161.88.195.77.rev.sfr.net) (Read error: Connection reset by peer)
[10:43:09] *** Joins: fbiagent__ (~fbiagent@user/fbiagent)
[10:43:22] *** Quits: fbiagent_ (~fbiagent@user/fbiagent) (Ping timeout: 260 seconds)
[10:43:38] *** Quits: ttys000 (~ttys000@user/ttys000) (Ping timeout: 246 seconds)
[10:44:29] *** arash- is now known as arash
[10:44:39] *** Joins: shokohsc8 (~shokohsc@161.88.195.77.rev.sfr.net)
[10:45:14] *** Quits: jonaskabrink (~jonaskabr@i5E8666AB.versanet.de) (Client Quit)
[10:45:38] *** Joins: Bronto22 (~mennoh@84-86-247-193.fixed.kpn.net)
[10:45:39] *** Joins: ronny (~ronny@2001:470:69fc:105::b57)
[10:45:58] *** Joins: meain (~meain@2001:470:69fc:105::2db)
[10:47:06] *** Quits: fikran (~fikran@user/fikran) (Ping timeout: 260 seconds)
[10:47:29] *** Joins: pizdets (~pizdets@183.182.111.121)
[10:48:05] *** Joins: PortableDave (~portabled@194-193-148-202.tpgi.com.au)
[10:48:40] *** Quits: PortableDave (~portabled@194-193-148-202.tpgi.com.au) (Client Quit)
[10:48:49] *** Joins: spai (~spai@user/spai)
[10:49:04] *** Joins: fikran (~fikran@user/fikran)
[10:49:07] *** Joins: wender (~Wender@189.37.68.196)
[10:50:22] *** Quits: gggpkm (~gggpkm@114.245.104.31) (Ping timeout: 260 seconds)
[10:52:34] *** Atque is now known as Atque[m]
[10:52:42] *** Quits: computeiro (~Wender@189.37.65.61) (Ping timeout: 258 seconds)
[10:54:19] *** Joins: chele (~chele@user/chele)
[10:55:22] *** Joins: fweht (uid404746@id-404746.lymington.irccloud.com)
[10:58:35] *** Quits: flyback (~flyback@2601:540:8201:1e60::5706) (Ping timeout: 264 seconds)
[10:58:53] *** Quits: m1k7 (~m1k3@ip98-161-149-99.ph.ph.cox.net) (Remote host closed the connection)
[10:59:00] *** Quits: howdoi (uid224@id-224.lymington.irccloud.com) (Quit: Connection closed for inactivity)
[10:59:31] *** Quits: berong91 (~noob4ever@d75-154-235-153.bchsia.telus.net) (Ping timeout: 252 seconds)
[11:00:16] *** Joins: berong91 (~noob4ever@d75-154-235-153.bchsia.telus.net)
[11:00:37] *** Joins: rpkilby (~rpkilby@c-24-20-208-106.hsd1.or.comcast.net)
[11:01:27] *** Joins: ElPresidente (~ElPreside@2600:1700:3d10:4870:9815:b867:1c3c:f13d)
[11:02:49] *** Joins: arinov (~arinov@213.194.126.155)
[11:03:02] *** Joins: spetrosi (~spetrosi@2a02:8308:b:ec00:637b:7e28:3899:e5c1)
[11:03:35] *** Joins: gitesh (uid423739@id-423739.ilkley.irccloud.com)
[11:03:54] *** Joins: grys (~quassel@botters/gry)
[11:05:18] *** Quits: rpkilby (~rpkilby@c-24-20-208-106.hsd1.or.comcast.net) (Ping timeout: 260 seconds)
[11:07:15] *** Quits: Bronto22 (~mennoh@84-86-247-193.fixed.kpn.net) (Quit: Konversation terminated!)
[11:07:55] *** Quits: vicfred (~vicfred@user/vicfred) (Quit: Leaving)
[11:08:01] <neolem> matin
[11:10:55] *** Joins: flyback (~flyback@2601:540:8201:1e60::953d)
[11:11:06] <baltazar> hi! how do I use the record_class parameter of asyncpg's fetch* functions? what will my class's __init__ get?
[11:11:50] *** Joins: Alex123 (~Adium@2603-8000-f640-d482-71ee-3212-8cbc-69c2.res6.spectrum.com)
[11:12:51] *** Quits: Atque[m] (~Atque@user/atque) (Ping timeout: 276 seconds)
[11:12:54] *** Joins: AquaL1te (~AquaL1te@user/aqual1te)
[11:16:03] *** Joins: SallyAhaj (~SallyAhaj@user/sallyahaj)
[11:17:49] *** Joins: merijn (~merijn@83-160-49-249.ip.xs4all.nl)
[11:18:23] <hexnewbie> baltazar: The documentation states that it must be a subclass of Record, without giving Record.__init__ signature (in fact, implicitly stating that Record can't be created from Python code). I think that heavily implies you need to have: def __init__(self, *a, **kw): super().__init__(*a, **kw)
[11:19:04] <hexnewbie> Though with the given wording, I would go as far as testing if this __init__ method is called at all.
[11:19:13] <fluter> hi, i have a class in its __init__ function it does some os related work, how can I mock it so that i can test other methods
[11:19:22] <fluter> the methods that does not requrie os related stuff
[11:19:27] *** Quits: Bode_Cleu (~Code_Bleu@user/code-bleu/x-6939963) (Ping timeout: 265 seconds)
[11:19:36] <fluter> how can i unit test this without create the os related stuff
[11:20:28] *** Quits: de-facto (~de-facto@user/de-facto) (Remote host closed the connection)
[11:20:37] *** Joins: whatsupdoc (~whatsupdo@148.64.18.87)
[11:20:59] *** Joins: de-facto (~de-facto@user/de-facto)
[11:22:38] *** Quits: reset (~reset@user/reset) (Quit: reset)
[11:25:18] *** Joins: Atque (~Atque@user/atque)
[11:26:37] *** Joins: jonaskabrink (~jonaskabr@i5E8666AB.versanet.de)
[11:28:24] *** Quits: Alex123 (~Adium@2603-8000-f640-d482-71ee-3212-8cbc-69c2.res6.spectrum.com) (Quit: Leaving.)
[11:28:40] *** Joins: Alex123 (~Adium@2603-8000-f640-d482-71ee-3212-8cbc-69c2.res6.spectrum.com)
[11:28:40] *** Quits: Alex123 (~Adium@2603-8000-f640-d482-71ee-3212-8cbc-69c2.res6.spectrum.com) (Client Quit)
[11:28:53] *** Joins: Alex123 (~Adium@2603-8000-f640-d482-71ee-3212-8cbc-69c2.res6.spectrum.com)
[11:29:26] *** Quits: Alex123 (~Adium@2603-8000-f640-d482-71ee-3212-8cbc-69c2.res6.spectrum.com) (Client Quit)
[11:29:34] *** Quits: codeswhite (~codeswhit@user/codeswhite) (Quit: Quit)
[11:29:39] *** dcaro_away is now known as dcaro
[11:30:57] *** Quits: winterflaw (~winterfla@gateway/tor-sasl/winterflaw) (Remote host closed the connection)
[11:31:00] *** Quits: djhankb (~djhankb@208.113.164.68) (Read error: Connection reset by peer)
[11:31:10] *** Quits: BillyZane (~BillyZane@91.196.220.174) (Read error: Connection reset by peer)
[11:31:27] *** Quits: whatsupdoc (~whatsupdo@148.64.18.87) (Quit: Client closed)
[11:31:29] *** Joins: BillyZane (~BillyZane@91.196.220.174)
[11:31:29] *** Joins: djhankb (~djhankb@208.113.164.68)
[11:31:40] *** Parts: fweht (uid404746@id-404746.lymington.irccloud.com) ()
[11:31:45] *** Joins: Bode_Cleu (~Code_Bleu@user/code-bleu/x-6939963)
[11:32:03] *** Joins: akmod (~akmod@c-73-228-115-212.hsd1.ut.comcast.net)
[11:33:09] *** Joins: Alex123 (~Adium@2603-8000-f640-d482-999e-af7c-adbf-8f31.res6.spectrum.com)
[11:33:49] *** Joins: e2m4n (~ezman@user/e2m4n)
[11:35:13] *** Joins: PortableDave (~portabled@194-193-148-202.tpgi.com.au)
[11:35:48] *** Quits: PortableDave (~portabled@194-193-148-202.tpgi.com.au) (Client Quit)
[11:37:02] <rendar> why in this little example https://bpa.st/ZFRQ -- the task.cancelled() returns False ?!
[11:37:06] *** Joins: gitly (~gitly@85.255.232.146)
[11:37:22] *** Joins: ayustae (Thunderbir@gateway/vpn/protonvpn/ayustae)
[11:38:45] *** Quits: AquaL1te (~AquaL1te@user/aqual1te) (Ping timeout: 260 seconds)
[11:39:17] *** Joins: hendursa1 (~weechat@user/hendursaga)
[11:39:32] *** Joins: mxp (~mxp@185.16.205.131)
[11:40:08] *** Joins: AquaL1te (~AquaL1te@user/aqual1te)
[11:40:16] *** Joins: upsala (~zcb@185.213.155.160)
[11:41:05] <fluter> how can i mock the __init__ method of a class?
[11:42:45] *** Quits: hendursaga (~weechat@user/hendursaga) (Ping timeout: 276 seconds)
[11:43:16] *** Quits: johncs (~johncs@2604:a880:2:d0::216b:f001) (Quit: bye)
[11:43:33] <fakenullie> fluter: why do you want to mock it?
[11:43:51] <fluter> fakenullie: i have a class in its __init__ function it does some os related work, how can I mock it so that i can test other methods?
[11:44:19] *** Joins: DnzAtWrk (~DnzAtWrk@mobile-access-567377-189.dhcp.inet.fi)
[11:44:41] <fluter> fakenullie: because it can't be run in unit test
[11:44:56] *** Joins: johncs (~johncs@2604:a880:2:d0::216b:f001)
[11:45:22] <fakenullie> fluter: I guess then not much can be done. If you own the class better refactor it
[11:45:39] <fluter> ummm,
[11:45:42] <fakenullie> fluter: if you don't, I guess you could mock os relate calls
[11:45:58] <fluter> can i just mock the __init__()?
[11:47:21] <hexnewbie> fluter: You can create an object of a given type without executing its init, by manually creating the object (or testing a subclass which does not call the __init__ of super()), but if it's not your class, that can have side-effects when the author refactors, or you refactor without thinking about, that can also lead to unit test failure
[11:47:58] <fluter> how can i manually create the object?
[11:48:01] <hexnewbie> Not that big an issue for a unit test, simply instantiate without calling the __init__, or remove the __init__ while testing
[11:48:13] <fluter> you always create object by obj = Class() right?
[11:48:31] <fluter> how to instantiate without calling the __init__, or remove the __init__ while testing?
[11:49:02] <hexnewbie> fluter: Well, you can Class.__new__(Class, *args, **kwargs) or object.__new__(Class, *args, **kwargs) - the latter wouldn't call __new__() either (and I might have errors in the invocation, since I've done that like once)
[11:49:19] *** Joins: jmiehe (~Thunderbi@user/jmiehe)
[11:49:30] <fluter> oh ok
[11:49:37] <fluter> this is new to me, let me try that
[11:50:14] <hexnewbie> fluter: del Class.__init__; or Class.__init__ = lambda self, *a, **kw: None
[11:50:19] *** Joins: mat001 (~mat001@213.143.69.121)
[11:51:40] *** Joins: mat001_ (~mat001@213.143.69.121)
[11:52:26] *** Joins: LucaTM (~LucaTM@user/lucatm)
[11:53:47] *** Joins: Laibsch (~leggewie@93.152.184.249)
[11:54:46] *** Quits: mat001 (~mat001@213.143.69.121) (Ping timeout: 260 seconds)
[11:58:14] *** Joins: gggpkm (~gggpkm@114.245.104.31)
[11:58:38] *** Quits: gitly (~gitly@85.255.232.146) (Ping timeout: 258 seconds)
[11:58:44] <jmiehe> I think I understand how this works https://bpa.st/WXNQ â€¦ but is there a way to also make the inner function execute only once (without making it global)?
[11:58:48] *** Joins: FastJack (~fastjack@b2b-78-94-22-14.unitymedia.biz)
[11:59:36] *** Joins: enoq (~enoq@2a05:1141:1f5:5600:b9c9:721a:599:bfe7)
[12:00:27] *** Joins: gitly (~gitly@85.255.236.129)
[12:01:53] <hexnewbie> jmiehe: You either need to make it global function taking two arguments (instead of a closure on i), or add cache to fun_outer to cache the closures on the value of i. I'd avoid the latter option, since caching functions seems too much (and albeit the code is shared, stuff like the function __dict__ is not)
[12:03:03] <baltazar> hexnewbie: (for earlier) I see, thanks
[12:04:03] *** Quits: mei (~mei@user/mei) (Read error: Connection reset by peer)
[12:04:12] <jmiehe> hexnewbie: OK. I found a better solution for my problem anyway, so I was just wondering
[12:05:52] *** Joins: mozgalom (~mozgalom@IPnet-gw.157.157.97.111.simnet.is)
[12:07:17] *** Joins: PortableDave (~portabled@194-193-148-202.tpgi.com.au)
[12:07:33] *** Quits: newpy (~newpy@2601:280:4381:1390:d8a2:4368:1fe2:a8e3) (Read error: Connection reset by peer)
[12:08:16] *** Quits: Teacup (~teacup@user/teacup) (Ping timeout: 265 seconds)
[12:08:22] *** Quits: PortableDave (~portabled@194-193-148-202.tpgi.com.au) (Client Quit)
[12:09:53] *** Joins: shad (~shad@user/shad)
[12:10:38] *** Quits: merijn (~merijn@83-160-49-249.ip.xs4all.nl) (Ping timeout: 260 seconds)
[12:11:46] *** Quits: flyback (~flyback@2601:540:8201:1e60::953d) (Ping timeout: 245 seconds)
[12:11:51] *** Joins: plastico (~plastico@neomutt/plastico)
[12:12:14] *** Joins: brelod (~me@90.244.150.142)
[12:12:31] *** Joins: indigogo (~ryan@191.227.220.203.dial.dynamic.acc01-comm-mtg.comindico.com.au)
[12:13:25] *** Joins: merijn (~merijn@83-160-49-249.ip.xs4all.nl)
[12:14:33] *** Joins: Teacup (~teacup@user/teacup)
[12:15:01] *** Quits: Proxysna (~Proxysna@62.119.254.142) (Remote host closed the connection)
[12:15:34] *** Joins: marcello42 (~mp@p200300dfaf066e01e1016cd4a9290a16.dip0.t-ipconnect.de)
[12:17:36] *** Quits: DnzAtWrk (~DnzAtWrk@mobile-access-567377-189.dhcp.inet.fi) (Read error: Connection reset by peer)
[12:17:59] *** Joins: blindguard (~blindguar@2a02:908:1864:c200::2612)
[12:19:02] *** Quits: merijn (~merijn@83-160-49-249.ip.xs4all.nl) (Ping timeout: 260 seconds)
[12:22:44] *** Joins: zitter (~danilodim@93-57-35-194.ip162.fastwebnet.it)
[12:22:47] *** Quits: palasso (~palasso@user/palasso) (Ping timeout: 258 seconds)
[12:23:10] *** Quits: indigogo (~ryan@191.227.220.203.dial.dynamic.acc01-comm-mtg.comindico.com.au) (Quit: leaving)
[12:23:49] *** Joins: PJBoy (~PJBoy@user/pjboy)
[12:23:56] *** Joins: DnzAtWrk (~DnzAtWrk@mobile-access-567377-189.dhcp.inet.fi)
[12:24:55] *** Joins: winterflaw (~winterfla@gateway/tor-sasl/winterflaw)
[12:27:23] *** Joins: wolfgang (~wolfgang@101.174.167.116)
[12:28:55] *** Quits: Laibsch (~leggewie@93.152.184.249) (Ping timeout: 260 seconds)
[12:30:34] *** Quits: zaquest (~notzaques@5.128.210.178) (Remote host closed the connection)
[12:31:00] *** Quits: djhankb (~djhankb@208.113.164.68) (Read error: Connection reset by peer)
[12:31:32] *** Joins: djhankb (~djhankb@208.113.164.68)
[12:31:38] *** Quits: Lazenca (Lazenca@user/lazenca) (Remote host closed the connection)
[12:32:35] *** Joins: gr33n7007h (~gr33n7007@user/gr33n7007h)
[12:32:39] *** Joins: zaquest (~notzaques@5.128.210.178)
[12:33:01] *** Quits: moto (~moto@user/moto) (Read error: Connection reset by peer)
[12:33:16] *** Joins: moto (~moto@user/moto)
[12:34:48] *** Joins: AutomatedTester (uid395371@selenium/developer/AutomatedTester)
[12:34:52] *** Joins: ham5urg (~ham5urg@p200300d1671129009c939152b8edc509.dip0.t-ipconnect.de)
[12:35:39] *** Joins: Laibsch (~leggewie@93.152.184.249)
[12:36:41] *** Quits: PantelicGR (~PantelicG@user/pantelicgr) (Read error: Connection reset by peer)
[12:36:52] *** Joins: moose` (~moose@user/moose)
[12:37:00] *** Joins: cthulchu_ (~Cthulchu@193.194.107.250)
[12:37:05] *** Joins: NeoCore_ (~neocore@37.120.204.252)
[12:37:26] *** Joins: strywgr (~none@101.53.224.196)
[12:38:38] <ham5urg> Maybe a bit C++-ish but is it possible to create "locale" modules, a way to create a module without import? Python modules are in a way similar to C++-namespaces. I would like to define in-file namespaces for better separating.
[12:39:51] *** Joins: PortableDave (~portabled@194-193-148-202.tpgi.com.au)
[12:40:02] *** Quits: DnzAtWrk (~DnzAtWrk@mobile-access-567377-189.dhcp.inet.fi) (Ping timeout: 260 seconds)
[12:40:02] *** Quits: moose (~moose@user/moose) (Ping timeout: 260 seconds)
[12:40:02] *** Quits: Axy (~Axy@user/axy) (Ping timeout: 260 seconds)
[12:40:02] *** Quits: ckdCreations (~ckdCreati@147.55.133.140) (Ping timeout: 260 seconds)
[12:40:02] *** Quits: cthulchu (~Cthulchu@193.194.107.250) (Ping timeout: 260 seconds)
[12:40:14] *** Joins: MetalSutton (~MetalSutt@101.100.152.253)
[12:40:16] *** Quits: zitter (~danilodim@93-57-35-194.ip162.fastwebnet.it) (Quit: Leaving)
[12:40:19] *** Quits: strywgr (~none@101.53.224.196) (Remote host closed the connection)
[12:40:26] *** Joins: Axy (~Axy@user/axy)
[12:40:30] *** Quits: NeoCore (~neocore@37.120.204.252) (Ping timeout: 260 seconds)
[12:40:56] *** Quits: PortableDave (~portabled@194-193-148-202.tpgi.com.au) (Client Quit)
[12:41:00] *** Joins: ckdCreations (~ckdCreati@147.55.133.140)
[12:41:33] <deniska> ham5urg: there's no good way, if you want things live in a separate namespace, make a module (aka a file) or a package (aka a directory)
[12:42:26] *** jessicar1 is now known as jessicara
[12:43:52] *** Quits: winterflaw (~winterfla@gateway/tor-sasl/winterflaw) (Remote host closed the connection)
[12:46:00] *** Joins: merijn (~merijn@83-160-49-249.ip.xs4all.nl)
[12:47:03] *** Joins: clarkk (~clarkk@host31-53-69-254.range31-53.btcentralplus.com)
[12:47:30] *** Quits: clarkk (~clarkk@host31-53-69-254.range31-53.btcentralplus.com) (Client Quit)
[12:48:10] *** Quits: bob_x1 (~bob_x@gateway/tor-sasl/bobx1/x-26457072) (Remote host closed the connection)
[12:48:30] *** Joins: Hash (~weechat@thestonedapes.com)
[12:50:46] *** Quits: merijn (~merijn@83-160-49-249.ip.xs4all.nl) (Ping timeout: 258 seconds)
[12:52:15] *** Joins: stormdancer (~stormdanc@185.245.86.121)
[12:53:01] <ham5urg> deniska, ok, thanks for the info.
[12:53:49] <deniska> ham5urg: I've seen people use classes full of static/classmethods to simulate local namespaces. Or nest things which shouldn't be nested. Don't do that :)
[12:55:31] *** Joins: saribro (~swinnenb@user/swinnenb)
[12:56:20] *** Quits: fikran (~fikran@user/fikran) (Ping timeout: 260 seconds)
[12:56:25] <ham5urg> Yes, for an glimpse of an eye, I wanted to abuse static methods but went away from that.
[12:58:06] *** Joins: Klinda (~superleag@user/klinda)
[12:58:25] *** Joins: fikran (~fikran@user/fikran)
[12:58:55] *** Quits: swinnenb (~swinnenb@user/swinnenb) (Ping timeout: 252 seconds)
[12:59:11] *** Joins: Rana_Ans (~Rana_Ans@39.45.63.215)
[12:59:25] <Rana_Ans> Hi can anyone tell me if we can check using Python that a system has just started up?
[13:00:17] <grawity> as opposed to?
[13:00:37] <deniska> Rana_Ans: "just started up" is hard to define. You can ask your system to launch a specific script on startup. Or you can check the uptime of the system. Whatever your goal
[13:00:39] <grawity> I mean, please describe what you're trying to do with that, and also on which OS
[13:00:50] *** Joins: vvdaiwrw (~rvgzuuqp@gateway/tor-sasl/rvgzuuqp)
[13:01:15] <grawity> and do you actually want to *check* whether the system has "just" started up vs whether it has started up "long long ago", or do you want the system itself to *run* your script when it starts up?
[13:01:20] *** lericson_ is now known as lericson
[13:01:21] <Rana_Ans> ok how can we check the uptime of the system. OS: Windows
[13:01:38] *** Quits: ayustae (Thunderbir@gateway/vpn/protonvpn/ayustae) (Quit: ayustae)
[13:01:55] *** Joins: merijn (~merijn@83-160-49-249.ip.xs4all.nl)
[13:02:01] *** Quits: ckdCreations (~ckdCreati@147.55.133.140) (Read error: Connection reset by peer)
[13:02:20] *** Joins: ckdCreations (~ckdCreati@c-24-17-50-149.hsd1.wa.comcast.net)
[13:02:53] *** Joins: bob_x1 (~bob_x@gateway/tor-sasl/bobx1/x-26457072)
[13:02:59] <grawity> Windows means dealing with WMI, so I guess the wmi module from pypi, and wmi.WMI().Win32_OperatingSystem().LastBootUpTime?
[13:03:35] <Rana_Ans> ok I will read doc on pypi, thanks
[13:03:40] <grawity> might be easier to call powershell through subprocess >_>
[13:04:11] *** Quits: Laibsch (~leggewie@93.152.184.249) (Ping timeout: 258 seconds)
[13:04:36] <deniska> https://github.com/Cairnarvon/uptime there's this one, but it hasn't been updated in a while, not sure if it still works
[13:04:47] *** Joins: Zweimer (~Zweimer@2a02:908:d20:26e0:79eb:ea87:6f38:cccf)
[13:04:56] <Rana_Ans> alright
[13:05:06] <deniska> I also see snippets calling to ctypes.windll.kernel32.GetTickCount64()
[13:05:15] <deniska> not too familiar with windows to know whether it's a right solution
[13:05:40] *** Joins: lucad111 (~lucad111@51-148-40-1.dsl.zen.co.uk)
[13:05:50] <deniska> Rana_Ans: an alternative would be to schedule a python script to run on a startup, that way you pretty much know that a system just started :)
[13:06:20] <grawity> yeah that might also work, although not sure if that's zeroed out when Windows boots, or if it's literally just RDTSC from the CPU
[13:06:38] *** Quits: ckdCreations (~ckdCreati@c-24-17-50-149.hsd1.wa.comcast.net) (Ping timeout: 260 seconds)
[13:06:50] *** Quits: merijn (~merijn@83-160-49-249.ip.xs4all.nl) (Ping timeout: 260 seconds)
[13:06:57] <grawity> I remember making Windows services with the win32svc module from PyWin32, it was relatively easy
[13:07:09] <Rana_Ans> scheduling a python script through windows task scehduler, right?
[13:07:17] *** Joins: ckdCreations (~ckdCreati@147.55.130.35)
[13:07:27] <deniska> Rana_Ans: for example, yes
[13:07:45] <Rana_Ans> alright
[13:08:07] *** Joins: mathsboy (~user@2001:1c02:2b38:1400:a899:864a:8dd6:e454)
[13:10:31] *** Joins: cvmn (~caveman@gateway/tor-sasl/caveman)
[13:11:14] *** Joins: Seiryuu (~Seiryuu@ip174-103-176-143.adsl2.static.versatel.nl)
[13:12:14] *** Quits: arinov (~arinov@213.194.126.155) (Ping timeout: 258 seconds)
[13:12:43] <mathsboy> quick question... I have a directory with some utility py files, and I want to make them accessible to my venv, so I can access them from anywhere I want. Is it possible to just add __init__.py and copy the whole dir into the venv directory somewhere? I'm happy if I can move them from where they are now.
[13:12:49] *** Joins: ayustae (Thunderbir@gateway/vpn/protonvpn/ayustae)
[13:13:04] *** Quits: michele_ (~eraser@user/michele) (Quit: restart)
[13:13:24] *** Joins: michele (~eraser@user/michele)
[13:15:53] <deniska> mathsboy: you probably want to write setup.py for this utility folder and make it an installable package
[13:16:00] <deniska> mathsboy: then you can pip install it to your venvs
[13:16:38] <deniska> (Is it still setup.py? Each time I look at python packaging, I feel like I see a new thing)
[13:16:50] *** Quits: summonner (~summonner@79.119.114.132) (Ping timeout: 258 seconds)
[13:17:20] <mathsboy> ok great, thanks for that... I never wrote a setup.py before, so this should be interesting :)
[13:17:35] *** Joins: henistein (~henistein@2001:8a0:fc8f:9501:bbed:17e8:c623:1af2)
[13:19:22] *** Joins: cthulchu (~Cthulchu@193.194.107.250)
[13:19:36] *** Quits: cthulchu (~Cthulchu@193.194.107.250) (Read error: Connection reset by peer)
[13:20:00] *** Joins: cthulchu (~Cthulchu@193.194.107.250)
[13:20:49] *** Quits: Rana_Ans (~Rana_Ans@39.45.63.215) (Quit: Client closed)
[13:20:53] *** Quits: moose` (~moose@user/moose) (Quit: System has requested shutdown (Shutdown))
[13:21:06] *** Quits: cthulchu_ (~Cthulchu@193.194.107.250) (Ping timeout: 260 seconds)
[13:23:35] *** Parts: _Ev (~ev@user/ev/x-8999918) ()
[13:24:08] <parv> On getting time up from Windows : https://twitter.com/michaeldexter/status/1445527562722025475
[13:25:26] *** Joins: p-i-_ (~Ohmu@223.206.147.206)
[13:25:34] <Masklin_Gurder> Are if-checks expensive? Is it worthwhile to write some sophisticated dictionary code to replace if-checks in a loop?
[13:25:46] <Masklin_Gurder> Please say no :>
[13:26:14] *** Quits: gggpkm (~gggpkm@114.245.104.31) (Ping timeout: 260 seconds)
[13:26:47] *** Parts: henistein (~henistein@2001:8a0:fc8f:9501:bbed:17e8:c623:1af2) ()
[13:26:54] <Zweimer> Has anyone here used the importlib (import_module()) before to build a plugin system? Did it still work when making an execute out of the main program (obviously without --one-file)?
[13:27:14] *** Joins: legola (~legola@46.235.101.181)
[13:27:36] <Zweimer> I was wondering if the plugin would still have access to the functions of the program's functions?
[13:28:11] <parv> Masklin_Gurder, I do not know about speed but if there are "too many", I would prefer a map use
[13:28:33] <parv> of course, profile to be usre
[13:29:06] *** Quits: p-i- (~Ohmu@mx-ll-223.206.147-206.dynamic.3bb.co.th) (Ping timeout: 258 seconds)
[13:30:50] *** Joins: arinov (~arinov@31.142.50.8)
[13:31:04] *** Quits: henbruas (~henbruas@ti0003a400-3211.bb.online.no) (Quit: ZNC 1.8.2 - https://znc.in)
[13:31:04] *** Quits: djhankb (~djhankb@208.113.164.68) (Read error: Connection reset by peer)
[13:31:23] *** Joins: henbruas (~henbruas@ti0003a400-3211.bb.online.no)
[13:31:36] *** Joins: djhankb (~djhankb@208.113.164.68)
[13:31:46] *** Quits: cthulchu (~Cthulchu@193.194.107.250) (Ping timeout: 245 seconds)
[13:32:12] *** Joins: summonner (~summonner@79.119.114.87)
[13:33:24] *** Quits: gusto (~Augustus@109.255.100.54) (Quit: Textual IRC Client: www.textualapp.com)
[13:33:41] *** Quits: Yamakaja (~yamakaja@user/yamakaja) (Ping timeout: 264 seconds)
[13:33:42] *** Quits: causasui (~causasui@c-68-60-125-136.hsd1.mi.comcast.net) (Ping timeout: 258 seconds)
[13:33:58] *** Joins: arseru (uid515527@user/arseru)
[13:34:53] *** Joins: Rana_Ans (~Rana_Ans@39.45.63.215)
[13:35:51] *** Quits: marcello42 (~mp@p200300dfaf066e01e1016cd4a9290a16.dip0.t-ipconnect.de) (Remote host closed the connection)
[13:36:18] <Rana_Ans> Hi again, I tried the WMI, heres the output I get, but Idk how do I get that specific element value out of this dictionary in the list.
[13:36:22] <Rana_Ans> OUTPUT: https://pastebin.pl/view/a7f426ae
[13:38:17] *** Joins: PortableDave (~portabled@194-193-148-202.tpgi.com.au)
[13:38:28] <Rana_Ans> and also the LastBootUpTime, is it in nanoseconds?
[13:38:38] <parv> Rana_Ans, https://twitter.com/pmalenfa/status/1445747434483699716
[13:38:56] *** Quits: PortableDave (~portabled@194-193-148-202.tpgi.com.au) (Client Quit)
[13:39:55] *** Quits: mavhq (~quassel@mapp-14-b2-v4wan-161519-cust401.vm15.cable.virginm.net) (Quit: http://quassel-irc.org - Chat comfortably. Anywhere.)
[13:40:00] <Rana_Ans> parv: thats in Powershell?
[13:40:43] <parv> someone else confirms that be so
[13:41:01] <lericson> tangential, but PowerShell is such a bad name :p
[13:41:10] *** Quits: stormdancer (~stormdanc@185.245.86.121) (Remote host closed the connection)
[13:41:18] *** Joins: bkida (~bkida@user-31-175-158-252.play-internet.pl)
[13:41:43] <Rana_Ans> could you please tell me how that would work in Python?
[13:41:45] <Jong> I want to get all combinations of a,b,c,d  where a=[1,2,3], b=[1,2,3], c=[["foo",1],  ["foo",2], ["foo",3], ["foo",4],  d=[["bar",1],  ["bar",2], ["bar",3], ["bar",4]]..    An example would be (1,1,["foo",1],["bar",1]).  I remember there was an itertools trick to this.
[13:41:53] *** Parts: bkida (~bkida@user-31-175-158-252.play-internet.pl) ()
[13:42:05] <lericson> Jong: product or combinations of itertools
[13:42:14] <lericson> probably product
[13:42:23] <parv> Rana_Ans, suprocess()?
[13:42:29] <Jong> Also, is there a way I can have c = {} c["foo"] = [1,2,3,4]. instead of c=[["foo",1],  ["foo",2], ["foo",3], ["foo",4]]
[13:42:34] <Jong> thanks lericson
[13:42:35] <lericson> product('ab', range(3)) --> ('a',0) ('a',1) ('a',2) ('b',0) ('b',1) ('b',2)
[13:42:43] <parv> s/suprocess/subprocess/
[13:42:43] *** Joins: Yamakaja (~yamakaja@user/yamakaja)
[13:43:03] *** Quits: bob_x1 (~bob_x@gateway/tor-sasl/bobx1/x-26457072) (Remote host closed the connection)
[13:43:14] <Rana_Ans> parv: I have no idea how to do that
[13:43:21] <Jong> lericson  any idea regarding my second question?
[13:43:31] <Jong> c["foo"] = [1,2,3,4]. instead of c=[["foo",1],  ["foo",2], ["foo",3], ["foo",4]]
[13:43:38] <lericson> Jong: didn't understand what you mean
[13:43:42] *** Joins: bob_x1 (~bob_x@gateway/tor-sasl/bobx1/x-26457072)
[13:43:45] <ham5urg> How to unpack a argument list for a function with some keyworded arguments (e.g. b and c) like my_func(a, b=b, c=c)? I would like to do something like my_func(a_func_which_returns_a_argument_list())
[13:44:03] <parv> ham5urg, *list
[13:44:07] <lericson> ham5urg: my_func(*a_func())
[13:44:16] <Yhg1s> ham5urg: 'b=b' can't be in a list, though.
[13:44:29] <Yhg1s> ham5urg: perhaps you want a dict?
[13:44:29] <lericson> for the keywords you use **mapping
[13:44:32] *** Quits: Mattiaslndstrm (~Mattiasln@c213-103-137-235.bredband.tele2.se) (Quit: My MacBook has gone to sleep. ZZZzzzâ€¦)
[13:44:44] <ham5urg> lericson, can you link an example?
[13:44:48] <Jong> lericson  I'm trying to generate all long list of CLI arguments to test a program.  When the first argument is foo, I want the second to be 1,2,3, or 4. But if the first argument is bar, I want the second to be 5,6,7,8
[13:45:00] <Yhg1s> ham5urg: section 4.7 of the tutorial at docs.python.org/tutorial has a number of examples.
[13:45:03] *** Joins: cedric (~cedric@2a01:cb11:821:7c00:1b9d:4c8d:f219:3247)
[13:45:39] <Jong> myprog.py foo 1;  myprog.py foo 2;  myprog.py foo 3;  myprog.py foo 4;  myprog.py bar 5;  myprog.py bar 6;
[13:45:49] <Jong> like that
[13:46:56] *** Quits: parv (~quass@user/parv) (Quit: parv)
[13:47:08] <lericson> not with products, no
[13:47:16] <lericson> it is a cartesian product
[13:47:18] <Jong> reminds me of iterating a tree where foo and bar and one level up and the second argument is under
[13:47:55] <lericson> honestly just write out the loops instead at this point
[13:47:59] <lericson> not very hard
[13:48:18] <Jong> cool. thanks for your help
[13:48:42] <lericson> np
[13:49:51] *** Joins: olspookishmagus (~pookie@snf-137798.vm.okeanos.grnet.gr)
[13:51:19] *** Joins: mIk3_08 (~Thunderbi@user/mik3-08/x-2852566)
[13:52:33] *** Joins: Linux77 (~Linux7_7@186.233.183.48)
[13:52:50] *** Quits: Oddity (Oddity@user/oddity) (Ping timeout: 260 seconds)
[13:55:01] *** Joins: gusto (~Augustus@109.255.100.54)
[13:55:24] <Jong> lericson  probably you don't care, but this is the solution that does what I want: list(product(["foo"],[1,2,3,4])) + list( product(["bar"],[5,6,7,8,])
[13:55:52] <Jong> the configs are a crap ton to write out.  I simplified the problem for the sake of communicating it
[13:56:27] <lericson> interesting abuse of product :P
[13:56:50] <lericson> you can even chain() instead of list() + list()
[13:57:30] <Jong> product is a nice way to pair a single item with every item of another another!
[13:57:33] <lericson> that's an interesting idea actually
[13:57:34] <Jong> I didn't realize that until now
[13:57:45] <lericson> i mean yeah that is what it does :p
[13:58:11] <Jong> there isn't a more pythonic way to do it though? hmm I could have sworn there was
[13:58:26] *** Joins: vladoski (~vladoski@2001:b07:add:d406:d9a9:5cb7:5e3c:a917)
[13:58:42] <lericson> i think that looks decently clear
[13:58:57] <Rana_Ans> @parv
[13:59:15] <Rana_Ans> OUTPUT: https://pastebin.pl/view/ef580033
[13:59:28] <Rana_Ans> how do I change this long integer to actual datetime
[14:01:39] *** Joins: Oddity (Oddity@user/oddity)
[14:02:12] <Rana_Ans> nvm
[14:02:15] *** Quits: Rana_Ans (~Rana_Ans@39.45.63.215) (Quit: Client closed)
[14:04:12] *** Sir_Burns is now known as MrBurns
[14:04:48] *** Joins: peterandre (peterandre@2605:6400:c847:1524::4251)
[14:06:40] *** Quits: slavfox (~slavfox@93.158.232.111) (Ping timeout: 258 seconds)
[14:07:51] *** dcaro is now known as dcaro_lunch
[14:08:47] *** Quits: FFY00_ (~FFY00@archlinux/trusteduser/ffy00) (Ping timeout: 264 seconds)
[14:09:36] *** Joins: winterflaw (~winterfla@gateway/tor-sasl/winterflaw)
[14:12:02] *** Parts: arseru (uid515527@user/arseru) ()
[14:12:30] *** Joins: slavfox (~slavfox@ipv4-93-158-232-111.net.internetunion.pl)
[14:13:31] *** Joins: cthulchu (~Cthulchu@193.194.107.250)
[14:13:33] *** Quits: cvmn (~caveman@gateway/tor-sasl/caveman) (Ping timeout: 276 seconds)
[14:14:21] *** Joins: mavhq (~quassel@mapp-14-b2-v4wan-161519-cust401.vm15.cable.virginm.net)
[14:14:42] *** Quits: MetalSutton (~MetalSutt@101.100.152.253) (Remote host closed the connection)
[14:15:27] *** Joins: darksun (~darksun@user/darksun)
[14:16:50] *** Quits: slavfox (~slavfox@ipv4-93-158-232-111.net.internetunion.pl) (Ping timeout: 260 seconds)
[14:18:49] *** Joins: slavfox (~slavfox@ipv4-93-158-232-111.net.internetunion.pl)
[14:19:32] *** Quits: enoq (~enoq@2a05:1141:1f5:5600:b9c9:721a:599:bfe7) (Quit: enoq)
[14:23:10] *** Quits: slavfox (~slavfox@ipv4-93-158-232-111.net.internetunion.pl) (Ping timeout: 260 seconds)
[14:25:19] *** Joins: olbat__ (~olbat@user/olbat)
[14:26:10] *** Quits: winterflaw (~winterfla@gateway/tor-sasl/winterflaw) (Remote host closed the connection)
[14:27:57] *** Joins: BSaboia (~bsaboia@187.19.138.198)
[14:28:57] *** Joins: marcello42 (~mp@p200300dfaf066e01e1016cd4a9290a16.dip0.t-ipconnect.de)
[14:29:03] *** Joins: mav`rik (~unknown@ec2-54-171-126-99.eu-west-1.compute.amazonaws.com)
[14:30:22] *** Joins: y1n (~y1n@178.115.71.98.wireless.dyn.drei.com)
[14:30:31] *** Quits: djhankb (~djhankb@208.113.164.68) (Remote host closed the connection)
[14:30:56] <mav`rik> With pydantic validators is it possible to skip an item rather than raising a validation error? If I had x: list[SomeItem] and I didn't want SomeItem to be present if one of the parsed items had None in a given field for example?
[14:31:06] *** Joins: slavfox (~slavfox@ipv4-93-158-232-111.net.internetunion.pl)
[14:31:07] *** Joins: djhankb (~djhankb@208.113.164.68)
[14:32:10] *** Joins: winterflaw (~winterfla@gateway/tor-sasl/winterflaw)
[14:33:18] *** Joins: stormdancer (~stormdanc@185.245.86.122)
[14:34:07] *** Quits: p-i-_ (~Ohmu@223.206.147.206) (Remote host closed the connection)
[14:34:34] *** Joins: mrwick (~mrwick@user/mrwick)
[14:34:43] *** Joins: p-i- (~Ohmu@mx-ll-223.206.147-206.dynamic.3bb.co.th)
[14:35:27] *** Joins: Bronto22 (~mennoh@84-86-247-193.fixed.kpn.net)
[14:36:05] *** Quits: slavfox (~slavfox@ipv4-93-158-232-111.net.internetunion.pl) (Ping timeout: 260 seconds)
[14:37:09] *** Joins: slavfox (~slavfox@ipv4-93-158-232-111.net.internetunion.pl)
[14:37:46] *** Joins: cvmn (~caveman@gateway/tor-sasl/caveman)
[14:38:34] *** Quits: stormdancer (~stormdanc@185.245.86.122) (Ping timeout: 260 seconds)
[14:40:56] *** Quits: arinov (~arinov@31.142.50.8) (Ping timeout: 245 seconds)
[14:40:58] *** Joins: Vonter (~Vonter@user/vonter)
[14:41:05] *** Quits: Alex123 (~Adium@2603-8000-f640-d482-999e-af7c-adbf-8f31.res6.spectrum.com) (Quit: Leaving.)
[14:41:20] *** Joins: Alex123 (~Adium@2603-8000-f640-d482-999e-af7c-adbf-8f31.res6.spectrum.com)
[14:41:51] *** Quits: Alex123 (~Adium@2603-8000-f640-d482-999e-af7c-adbf-8f31.res6.spectrum.com) (Client Quit)
[14:42:36] *** Quits: vladoski (~vladoski@2001:b07:add:d406:d9a9:5cb7:5e3c:a917) (Remote host closed the connection)
[14:43:28] *** Quits: shad (~shad@user/shad) (Ping timeout: 258 seconds)
[14:45:23] *** Quits: Vonter (~Vonter@user/vonter) (Ping timeout: 258 seconds)
[14:46:02] *** Joins: alzgh (~alzgh@user/alzgh)
[14:46:42] *** Quits: caveman (~caveman@gateway/tor-sasl/caveman) (Ping timeout: 276 seconds)
[14:47:46] *** Quits: jmft2 (~JMFT@82.3.54.26) (Ping timeout: 265 seconds)
[14:48:38] *** Joins: caveman (~caveman@gateway/tor-sasl/caveman)
[14:50:03] *** Joins: merijn (~merijn@83-160-49-249.ip.xs4all.nl)
[14:52:23] *** Quits: Throgkt (~Throgkt@user/throgkt) (Quit:  )
[14:54:34] *** Quits: AutomatedTester (uid395371@selenium/developer/AutomatedTester) (Quit: Connection closed for inactivity)
[14:54:35] *** Joins: AnimalFarmPig (~quassel@catv-176-63-2-129.catv.broadband.hu)
[14:54:45] *** Quits: mavhq (~quassel@mapp-14-b2-v4wan-161519-cust401.vm15.cable.virginm.net) (Ping timeout: 260 seconds)
[14:55:48] *** Quits: cvmn (~caveman@gateway/tor-sasl/caveman) (Ping timeout: 276 seconds)
[14:57:18] *** Joins: jiehuan (~jiehuan@39.190.193.221)
[14:57:41] *** Quits: wender (~Wender@189.37.68.196) (Remote host closed the connection)
[14:58:36] <AnimalFarmPig> want to see a funny trick? https://bpa.st/K5FA  <--- try it on Python2 (or PyPy), and then try it on Python3 (or PyPy3)
[14:59:22] <mav`rik> AnimalFarmPig: range is a generator in Python3 and results in a list in 2.x, that behaviour is expected.
[14:59:31] <mav`rik> Well... generator-ish-thing
[14:59:32] <AnimalFarmPig> mav`rik: works the same coerced to list
[14:59:45] *** Joins: rinzewind (~rinzewind@user/rinzewind)
[14:59:51] <AnimalFarmPig> that's not the change/difference
[15:00:18] <AnimalFarmPig> well, not "works the same", but "bug is the same"
[15:01:48] <AnimalFarmPig> this manifests the same bug in 3: https://bpa.st/CI3A
[15:03:03] <AnimalFarmPig> or could just have easily done `n = [1, 2]` or `n = ['a', 'b']` or `n = {'foo': 'bar'}` or whatever
[15:03:24] *** Quits: AquaL1te (~AquaL1te@user/aqual1te) (Ping timeout: 258 seconds)
[15:03:29] *** Joins: masta`` (~oyster@user/masta/x-2645138)
[15:04:17] *** Joins: pycurious (~Adium@user/pycurious)
[15:05:17] *** Joins: AquaL1te (~AquaL1te@user/aqual1te)
[15:05:45] *** Joins: nyah (~nyah@bcdcb6e3.skybroadband.com)
[15:05:47] *** Quits: fikran (~fikran@user/fikran) (Ping timeout: 264 seconds)
[15:07:45] *** Joins: fikran (~fikran@user/fikran)
[15:08:45] *** Quits: pycurious (~Adium@user/pycurious) (Ping timeout: 260 seconds)
[15:09:49] *** Joins: cvmn (~caveman@gateway/tor-sasl/caveman)
[15:10:42] *** Quits: Belxjander (~Belxjande@p1575007-ipoe.ipoe.ocn.ne.jp) (Quit: AmigaOS PPC 4.1 +E +U1 // AmIRC 68K)
[15:11:56] *** Joins: jamer05 (~jamer05@user/jamer05)
[15:15:45] *** Quits: y1n (~y1n@178.115.71.98.wireless.dyn.drei.com) (Ping timeout: 260 seconds)
[15:15:55] <mat001_> Anyone knows if dict view object on which you can call d.items(), d.keys(), d.values() reflect the order of keys, values, items in the dict?
[15:15:55] <mav`rik> AnimalFarmPig: I _think_ it might be because (since somewhere in 3.x) comprehensions got their own scope, so the `locals` scope is semi-meaningless. I don't have a good reference to hand for this though.
[15:16:09] *** Joins: pycurious (~Adium@user/pycurious)
[15:16:35] *** Quits: yeirr (~yeirr@user/yeirr) (Ping timeout: 264 seconds)
[15:16:40] <mat001_> It seems to be so in newer Py versions, but not in Py 3.5
[15:17:40] <mav`rik> mat001_: 3.6 introduced insertion order as iteration order in the builtin dict, before that you had to use collections.OrderedDict I think
[15:17:52] <jamer05> is anyone tried to setup perfectly the geckodriver ?
[15:18:51] *** Joins: PantelicGR (~PantelicG@user/pantelicgr)
[15:19:08] <mat001_> mav`rik: ooooh, thx. my unit tests fail on py 3.5 because of that, but pass on newer versions. That's super helpful to know. I wonder what could I use to satisfy both py 3.5 and 3.9
[15:19:33] <raek> yes, dict order is officially guaranteed since 3.7, but this was actually implemented in 3.6.
[15:19:34] <mat001_> collections.OrderedDict still in use (tolerated) in py 3.9?
[15:20:09] *** Quits: chenqisu12 (~xirndc@183.217.203.91) (Remote host closed the connection)
[15:20:19] <mav`rik> mat001_: https://docs.python.org/3/whatsnew/3.6.html#new-dict-implementation - and yes, OrderedDict still works in 3.6+
[15:20:21] <raek> yeah, you can still use collections.OrderedDict for compatibility with older version
[15:21:02] *** Joins: bilb_ono_ (~alexmarsh@ip184-189-224-55.sb.sd.cox.net)
[15:21:17] <AnimalFarmPig> mav`rik: if I pass through two variables as locals in the nested comprehension, the variable used for the "outer" part of the nesting is looked up correctly from locals, but the look-up fails for the variable referenced in the (newly created) "inner" scope of the nested comprehension. I hope that makes sense. If you pass through instrumented dicts that log calls to __getitem__, you can easily see the behaviour.
[15:21:52] <mat001_> mav`rik: raek thx gys, that's super helpful, I'm about to fix tis usse now
[15:22:26] *** Quits: bilb_ono (~alexmarsh@ip184-189-224-55.sb.sd.cox.net) (Ping timeout: 260 seconds)
[15:22:26] *** bilb_ono_ is now known as bilb_ono
[15:22:55] *** jamer05 is now known as Karatsuba
[15:23:23] <mav`rik> AnimalFarmPig: do you have sufficient versions of Python available (or are you willing) to test when this behavioural change occured? Is this behaviour an issue for code you have in use?
[15:23:25] *** Quits: Karatsuba (~jamer05@user/jamer05) (Changing host)
[15:23:25] *** Joins: Karatsuba (~jamer05@user/karatsuba)
[15:25:31] <AnimalFarmPig> mav`rik: Sadly, I don't have sufficient versions available locally. I actually ran into this a year or two ago in code that I did have to use. iirc, this was on 3.6. I was able to work around it at the time. I was just reminded of it today, so I thought I would bring it up
[15:26:03] <mav`rik> It's interesting, but sadly I don't have the time available to dig further on it, sorry.
[15:26:15] <AnimalFarmPig> yeah, no worries. I should probably file a bug ticket
[15:26:36] *** Joins: yeirr (~yeirr@user/yeirr)
[15:27:11] *** Joins: stormdancer (~stormdanc@185.245.86.122)
[15:27:21] *** Joins: Laibsch (~leggewie@93.152.184.249)
[15:29:11] *** Joins: shad (~shad@user/shad)
[15:29:34] *** Joins: matrixise (~matrixise@python/psf/matrixise)
[15:30:21] *** dcaro_lunch is now known as dcaro
[15:30:40] *** Quits: djhankb (~djhankb@208.113.164.68) (Remote host closed the connection)
[15:30:57] *** Quits: cvmn (~caveman@gateway/tor-sasl/caveman) (Remote host closed the connection)
[15:31:11] *** Joins: djhankb (~djhankb@208.113.164.68)
[15:32:05] *** Quits: Laibsch (~leggewie@93.152.184.249) (Ping timeout: 260 seconds)
[15:32:05] *** Quits: stormdancer (~stormdanc@185.245.86.122) (Ping timeout: 260 seconds)
[15:33:06] <mav`rik> With pydantic is it possible to skip a particular validation failure so as to result in no entry for a given list[ItemType] during parsing/submission?
[15:33:11] *** Quits: masta`` (~oyster@user/masta/x-2645138) (Read error: Connection reset by peer)
[15:34:09] *** Quits: bob_x1 (~bob_x@gateway/tor-sasl/bobx1/x-26457072) (Ping timeout: 276 seconds)
[15:34:10] *** Quits: thrillgore (~ZugZug@69-225-55-100.lightspeed.nsvltn.sbcglobal.net) (Ping timeout: 265 seconds)
[15:34:52] <mat001_> mav`rik: raek I need to order dict items based on the insertion order - meaning if the dict comes in a certain order that is not alphabetical, I need to get the vaues out in that same order. It should not order alphabetically
[15:35:25] *** Joins: Laibsch (~leggewie@93.152.184.249)
[15:35:26] <mat001_> using orderedDict won't just sort, it will preserve the original order whatever it is, correct?
[15:35:31] *** Joins: zeden (~zeden@user/zeden)
[15:35:35] <Jong> is there an easy way to show stdout in realtime for a subprocess.call call?
[15:35:57] <Yhg1s> Jong: sure: don't redirect stdout.
[15:36:01] *** Quits: supakeen (~user@python/site-packages/supakeen) (Quit: WeeChat 3.3)
[15:36:17] *** Joins: thrillgore (~ZugZug@69-225-55-100.lightspeed.nsvltn.sbcglobal.net)
[15:36:24] *** Joins: bob_x1 (~bob_x@gateway/tor-sasl/bobx1/x-26457072)
[15:36:55] *** Joins: supakeen (~user@python/site-packages/supakeen)
[15:36:58] <mav`rik> mat001_: from the docs: OrderedDict
[15:37:00] <mav`rik> dict subclass that remembers the order entries were added
[15:37:08] *** Joins: Barones (~Barones@2804:7f3:8988:173a:cbba:dcbe:a5ee:808d)
[15:38:12] *** Quits: pycurious (~Adium@user/pycurious) (Quit: Leaving.)
[15:38:38] <mat001_> mav`rik: got it. I See it in the docs now too, thx
[15:39:05] *** Quits: AquaL1te (~AquaL1te@user/aqual1te) (Ping timeout: 260 seconds)
[15:39:29] *** Joins: wib_jonas (~wib_jonas@business-37-191-60-209.business.broadband.hu)
[15:40:03] *** Joins: pycurious (~Adium@user/pycurious)
[15:40:37] *** Joins: AquaL1te (~AquaL1te@user/aqual1te)
[15:40:54] *** Quits: curiosity (uid511277@user/cypris) (Killed (NickServ (GHOST command used by curiosity_!uid507362@id-507362.tinside.irccloud.com)))
[15:41:46] *** shrug[a] is now known as neil
[15:43:23] <Jong> Yhg1s  there isn't a way to both capture the stdout and to show it live in the terminal?
[15:44:13] *** Joins: carlio (~carlio@static.37.64.203.116.clients.your-server.de)
[15:44:34] *** Quits: Pi-sistance (~kvirc@cpc94050-newt37-2-0-cust176.19-3.cable.virginm.net) (Quit: happy math or coding)
[15:50:06] *** Quits: bob_x1 (~bob_x@gateway/tor-sasl/bobx1/x-26457072) (Remote host closed the connection)
[15:50:30] *** Joins: bob_x1 (~bob_x@gateway/tor-sasl/bobx1/x-26457072)
[15:50:52] *** Quits: Bronto22 (~mennoh@84-86-247-193.fixed.kpn.net) (Quit: Konversation terminated!)
[15:52:32] <Yhg1s> Jong: there are ways, but it's tricky. Buffering happens at multiple levels, and you usually have to attach the process to a pseudo-terminal to convince it not to buffer.
[15:56:02] *** Quits: thrillgore (~ZugZug@69-225-55-100.lightspeed.nsvltn.sbcglobal.net) (Ping timeout: 260 seconds)
[15:56:13] *** Joins: gareppa (~gareppa@user/gareppa)
[15:56:48] *** Joins: maharshipatel (~maharship@43.250.165.53)
[15:57:40] *** Quits: gareppa (~gareppa@user/gareppa) (Remote host closed the connection)
[15:58:13] *** Quits: merijn (~merijn@83-160-49-249.ip.xs4all.nl) (Ping timeout: 258 seconds)
[15:58:43] *** Quits: dbristow (~dbristow@user/dbristow) (Ping timeout: 252 seconds)
[16:00:19] *** Joins: Throgkt (~Throgkt@user/throgkt)
[16:05:18] *** Joins: fdan (~fdan@103.215.168.1)
[16:05:55] *** Quits: jiehuan (~jiehuan@39.190.193.221) (Ping timeout: 260 seconds)
[16:07:31] *** Joins: dbristow (~dbristow@user/dbristow)
[16:08:17] *** Joins: Vonter (~Vonter@user/vonter)
[16:10:11] *** Joins: vladoski (~vladoski@2001:b07:add:d406:529c:fc30:3400:1219)
[16:10:33] *** Joins: xiongxin (~quassel@119.123.103.160)
[16:11:07] *** Quits: BSaboia (~bsaboia@187.19.138.198) (Quit: Leaving)
[16:11:31] *** Quits: ExeciN (~ExeciN@user/nicexe) (Remote host closed the connection)
[16:11:51] *** Quits: CombatVet (~c4@user/combatvet) (Ping timeout: 276 seconds)
[16:11:51] *** Joins: ExeciN (~ExeciN@user/nicexe)
[16:12:43] *** Joins: CombatVet (~c4@user/combatvet)
[16:12:47] *** Quits: Vonter (~Vonter@user/vonter) (Ping timeout: 258 seconds)
[16:13:33] *** Quits: jetchisel (jetchisel@user/jetchisel) (Quit: Unfortunately time is always against us -- [Morpheus])
[16:13:49] *** Joins: slee (~slee@user/slee)
[16:14:47] *** Quits: pycurious (~Adium@user/pycurious) (Quit: Leaving.)
[16:15:06] <slee> hi, trying to to get a response header from a  requests.head(url)...but i'm not seeing the first header it responds with which is the redirect to the new url...would this be a cookie issue?
[16:15:58] <supakeen> slee: it's likely automatically following the redirect; try `requests.head(url, follow_redirects=False).headers["Location"]`
[16:16:03] <slee> loading the url in a browser and viewing it in web dev tools, i see the first response header(302) with the new 'location: go there'
[16:16:06] <supakeen> Err, `allow_redirects=False`.
[16:16:14] <slee> ok
[16:16:17] *** Joins: cmbengue (~Thunderbi@207.191.249.160)
[16:16:18] *** Joins: BSaboia (~bsaboia@187.19.138.198)
[16:17:00] *** Quits: xiongxin (~quassel@119.123.103.160) (Read error: Connection reset by peer)
[16:17:02] *** Joins: zodd (~zodd@84-106-80-107.cable.dynamic.v4.ziggo.nl)
[16:18:04] *** Joins: xiongxin (~quassel@119.123.100.49)
[16:18:15] *** Quits: BSaboia (~bsaboia@187.19.138.198) (Client Quit)
[16:18:45] *** Quits: Laibsch (~leggewie@93.152.184.249) (Ping timeout: 260 seconds)
[16:18:56] *** Quits: vladoski (~vladoski@2001:b07:add:d406:529c:fc30:3400:1219) (Remote host closed the connection)
[16:20:13] *** Quits: Atque (~Atque@user/atque) (Remote host closed the connection)
[16:20:33] *** Joins: vladoski (~vladoski@2001:b07:add:d406:a4d3:a7d2:8b67:49e)
[16:20:43] <slee> supakeen, still fails to print the first response
[16:20:52] <slee> i get the same response as before
[16:20:54] <supakeen> Then you should show some code :)
[16:21:24] *** Quits: TonyStone (~TonyStone@2603-7080-8607-c36a-9cdb-69bc-753b-1e50.res6.spectrum.com) (Ping timeout: 268 seconds)
[16:21:34] <slee> response = requests.head('https://www.leagueofgraphs.com/search/' + grab, allow_redirects=False) > to get entire dictionary
[16:21:37] *** Joins: Atque (~Atque@user/atque)
[16:21:46] *** Quits: kolcon (~kolcon@v.kolouch.org) (Ping timeout: 245 seconds)
[16:21:51] *** Joins: Mattiaslndstrm (~Mattiasln@c213-103-137-235.bredband.tele2.se)
[16:23:16] <slee> where 'grab' is a username
[16:23:20] <supakeen> That page is returning a 403.
[16:23:27] <supakeen> What response code are you getting?
[16:23:29] *** Joins: forgotmynick (uid24625@id-24625.hampstead.irccloud.com)
[16:23:33] <slee> https://www.leagueofgraphs.com/summoner/na/dummythrust
[16:24:02] *** Quits: PublicWifi (~PublicWiF@user/publicwifi) (Quit: WeeChat 3.0)
[16:24:04] *** Joins: merijn (~merijn@83-160-49-249.ip.xs4all.nl)
[16:24:04] <slee> return header: {'date': 'Wed, 20 Oct 2021 12:50:12 GMT', 'x-frame-options': 'SAMEORIGIN', 'fid': 'www-4', 'cv': 'CV-MKx4KXflDKfy', 'content-type': 'text/html; charset=UTF-8'}
[16:24:19] <supakeen> No, what response code, e.g. the `.status_code` attribute.
[16:24:43] *** Joins: PublicWifi (~PublicWiF@user/publicwifi)
[16:25:19] *** Joins: kolcon (~kolcon@v.kolouch.org)
[16:25:33] <supakeen> Ok, they're just blocking any requests with a blocked User-Agent, e.g. this works:
[16:25:35] <supakeen> >>> requests.head("https://www.leagueofgraphs.com/search/dummythrust", headers={"User-Agent": "None"}, allow_redirects=False).headers["Location"]
[16:25:35] *** Quits: legola (~legola@46.235.101.181) (Remote host closed the connection)
[16:25:38] <supakeen> '/summoner/na/dummythrust'
[16:25:51] <supakeen> Note that there will be no redirect if multiple things match the search.
[16:25:59] <slee> aah, 403
[16:26:09] *** Quits: de-facto (~de-facto@user/de-facto) (Ping timeout: 276 seconds)
[16:26:16] *** Quits: vladoski (~vladoski@2001:b07:add:d406:a4d3:a7d2:8b67:49e) (Ping timeout: 252 seconds)
[16:28:30] *** Joins: de-facto (~de-facto@user/de-facto)
[16:28:39] <slee> supakeen, thanks, that did the trick
[16:29:19] *** Joins: bomb-on (~bomb-on@194.144.47.113)
[16:30:06] *** Quits: sfields (~sfields@2603-8090-1605-d7f3-1017-8ef5-a6b6-4f0d.res6.spectrum.com) (Ping timeout: 245 seconds)
[16:30:14] *** Quits: stranac (~stranac@195.29.239.126) (Read error: Connection reset by peer)
[16:30:16] *** Joins: Naan (~Naan@user/naan)
[16:30:29] *** Joins: vladoski (~vladoski@2001:b07:add:d406:88e2:44c2:a529:99eb)
[16:31:11] *** Quits: djhankb (~djhankb@208.113.164.68) (Read error: Connection reset by peer)
[16:31:23] *** Quits: maharshipatel (~maharship@43.250.165.53) (Quit: Client closed)
[16:31:23] <vladoski> what's the best way to implement pagination?
[16:31:35] <vladoski> i need to make a query with lots of records but I need to paginate them
[16:31:39] <vladoski> i'm using sqlalchemy
[16:31:43] *** Joins: djhankb (~djhankb@208.113.164.68)
[16:32:16] <slee> i recall seeing a 'paginate' module
[16:32:36] *** Joins: bloody (~bloody@user/bloody)
[16:32:53] <deniska> lazy way is whatever translates to limit+offset, but that's not really recommended on bigger sets
[16:33:18] <deniska> the better way is limit and id>the_biggest_id_from_the_previous_page
[16:34:19] *** Joins: TonyStone (~TonyStone@2603-7080-8607-c36a-9cdb-69bc-753b-1e50.res6.spectrum.com)
[16:34:56] *** Joins: stormdancer (~stormdanc@185.245.86.123)
[16:35:47] *** Quits: Gurkenglas (~Gurkengla@dslb-002-203-144-204.002.203.pools.vodafone-ip.de) (Ping timeout: 258 seconds)
[16:36:53] *** Joins: mei (~mei@user/mei)
[16:37:34] <vladoski> oh nice that might work
[16:37:45] <vladoski> slee, I don't see paginate on sqlalchemy
[16:37:50] <vladoski> there's something on flask-sqlalchemy
[16:37:56] <vladoski> i'm not using flask though
[16:37:58] *** Joins: varaindemian (uid73404@id-73404.ilkley.irccloud.com)
[16:39:20] *** Joins: thrillgore (~ZugZug@69-225-55-100.lightspeed.nsvltn.sbcglobal.net)
[16:39:26] *** Quits: stormdancer (~stormdanc@185.245.86.123) (Ping timeout: 260 seconds)
[16:39:39] *** Joins: thiras (~thiras@user/thiras)
[16:39:57] *** Joins: clarkk (~clarkk@host31-53-69-254.range31-53.btcentralplus.com)
[16:40:09] *** Quits: clarkk (~clarkk@host31-53-69-254.range31-53.btcentralplus.com) (Remote host closed the connection)
[16:40:43] *** Joins: pycurious (~Adium@user/pycurious)
[16:41:27] *** Joins: BSaboia (~bsaboia@187.19.138.198)
[16:41:42] <jmiehe> Problem: I got a bunch of $click_ commands which share some args. So let's say 'foo cmd1 bar' ... 'foo cmd9 bar' are all valid. I want to avoid defining the "bar" argument every time (it would also have the same hint)
[16:42:28] *** Joins: clarkk (~clarkk@host31-53-69-254.range31-53.btcentralplus.com)
[16:42:40] *** Quits: Barones (~Barones@2804:7f3:8988:173a:cbba:dcbe:a5ee:808d) (Ping timeout: 260 seconds)
[16:43:17] *** Joins: yotsuba (~yotsuba@93-172-241-53.bb.netvision.net.il)
[16:44:38] <vladoski> deniska, in that way though, i need to progressively request the pages
[16:44:42] *** Quits: slee (~slee@user/slee) (Quit: Leaving)
[16:44:58] <vladoski> so if I want the 4th I need to scroll 1,2 and 3rd
[16:46:22] <deniska> vladoski: well, it's either you, or the database which has to scroll through the results
[16:46:26] *** Quits: nfc_ (nfc@tilde.institute) (Ping timeout: 260 seconds)
[16:46:33] *** Joins: hurley (~svgsponer@2a02:168:6f92:0:ef5f:4af3:1e56:2577)
[16:46:49] <deniska> vladoski: how many items total are we talking about?
[16:47:11] *** Parts: Tuor (~quassel@user/tuor) (https://quassel-irc.org - Chat comfortably. Anywhere.)
[16:48:42] *** Joins: mrgz (~mrgz@201-42-0-191.dsl.telesp.net.br)
[16:49:21] *** Joins: DeaDSouL (~DeaDSouL@45.130.136.155)
[16:50:24] *** Quits: joyce72 (~joyce72@101.100.162.247) (Quit: Leaving)
[16:50:43] *** Joins: Barones (~Barones@2804:214:8190:af5e:92ea:8e84:ec61:a8a9)
[16:51:15] *** Joins: src (~src@user/src)
[16:51:50] <vladoski> deniska, 50k
[16:52:20] <deniska> vladoski: that's not a big amount, limit+offset will be fiiine
[16:53:49] *** Joins: coraxx (~coraxx@mail.8-pm.com)
[16:56:03] *** Joins: wovixo (~wovixo@128.104.205.49)
[16:56:54] *** Joins: markb1 (~markb1@2600:1700:eb40:7ecf:6cbd:2839:d27a:fdfe)
[16:57:48] *** Joins: Pandadub (~Barones@2804:7f3:8987:f315:742:565:99a9:9dc)
[16:58:12] *** Quits: vladoski (~vladoski@2001:b07:add:d406:88e2:44c2:a529:99eb) (Read error: Connection reset by peer)
[16:58:41] *** Joins: vladoski (~vladoski@2001:b07:add:d406:88e2:44c2:a529:99eb)
[16:59:02] *** Quits: de-facto (~de-facto@user/de-facto) (Remote host closed the connection)
[16:59:04] *** Quits: bomb-on (~bomb-on@194.144.47.113) (Quit: aÐ»Ð»Ð¸Ð»Ñ¹Ñ–Ð°!)
[16:59:16] *** Quits: Karatsuba (~jamer05@user/karatsuba) (Ping timeout: 245 seconds)
[17:00:04] *** Joins: de-facto (~de-facto@user/de-facto)
[17:00:28] <vladoski> deniska, okay thanks. can I ask you how much's the benefit of using id?
[17:00:45] *** Quits: Barones (~Barones@2804:214:8190:af5e:92ea:8e84:ec61:a8a9) (Ping timeout: 260 seconds)
[17:01:19] <deniska> vladoski: offset 500 limit 100 means that a database has to calculate 600 rows
[17:01:53] <deniska> vladoski: now I didn't find too detailed of descriptions what it means "to calculate" in this context
[17:02:13] *** Quits: fdan (~fdan@103.215.168.1) (Quit: Client closed)
[17:02:45] *** Quits: Mattiaslndstrm (~Mattiasln@c213-103-137-235.bredband.tele2.se) (Quit: My MacBook has gone to sleep. ZZZzzzâ€¦)
[17:03:07] *** Quits: de-facto (~de-facto@user/de-facto) (Remote host closed the connection)
[17:03:38] <deniska> vladoski: with explicitly specifying id>some_known_value limit 100, database now has to work only on 100 rows (assuming there's an index present it can use)
[17:03:43] *** Joins: Laibsch (~leggewie@93.152.184.249)
[17:04:54] <deniska> fwiw postgres docs recommend against using offset with big values, and I've seen this recommendation in some other places
[17:05:02] *** Joins: semeion (~semeion@user/semeion)
[17:05:06] <avu> depending on the order, a simple offset+limit can also cause you to get duplicate results if new rows are added between queries
[17:05:28] *** Joins: zer0bitz (~zer0bitz@dsl-hkibng31-54fae3-116.dhcp.inet.fi)
[17:07:47] *** Quits: mei (~mei@user/mei) (Read error: Connection reset by peer)
[17:08:11] *** Quits: Laibsch (~leggewie@93.152.184.249) (Ping timeout: 264 seconds)
[17:08:25] <fluter> hi, so a class has an attribute like this: class CT: SEC=somemod.getRemoteSeconds(..) def__init__(self)...
[17:08:52] *** Joins: otisolsen70 (~otisolsen@xd4ed80b5.cust.hiper.dk)
[17:09:00] <fluter> this SEC= code is run when import, not construction, how can i mock/patch somemod so that I can return a fixed value for getRemoteSeconds() in my unit test code?
[17:09:34] <fluter> I tried to do p = patch.object(somemod, 'getRmoteSeconds', lambda x: return 123) in file scope
[17:09:36] <deniska> fluter: you can just put the new value on CT directly: CT.SEC = 7
[17:09:46] <fluter> oh!
[17:09:49] <fluter> is that simple?!
[17:09:51] <deniska> fluter: if that's exactly what you've tried, you have a typo
[17:10:01] *** Joins: Laibsch (~leggewie@93.152.184.249)
[17:10:03] <fluter> what typo?
[17:10:08] <deniska> getRmoteSeconds
[17:10:45] <fluter> typo in irc,
[17:10:57] *** Quits: herjazz (~herjazz@p6758124-ipngn30801marunouchi.tokyo.ocn.ne.jp) (Quit: leaving)
[17:11:47] *** Quits: CrypticSquared (~CrypticS_@user/crypticsquared) (Ping timeout: 264 seconds)
[17:11:59] <fluter> thanks
[17:12:09] <fluter> but would using mock patch be better?
[17:12:12] <ham5urg> How do you group your classes? I've found this https://stackoverflow.com/questions/17663862/how-to-visually-group-class-methods-into-sections but would like to have more examples.
[17:12:39] <deniska> fluter: not sure, I'm slightly allergic to mocking :)
[17:12:55] <fluter> heh ok :)
[17:13:27] *** Joins: nfc_ (nfc@tilde.institute)
[17:13:59] <fluter> hmm sorry actually i mispelled the issue
[17:14:00] <deniska> ham5urg: if a class feels big enough to require grouping, maybe it should be multiple classes instead?
[17:14:25] <fluter> the issue is SEC=somemod.getRemoteSeconds is run right when it is imported and it will throw an exception in the test environment
[17:14:33] <CrtxReavr> This discussion is classless.
[17:14:45] <deniska> fluter: well, then your only choice is to patch somemod
[17:14:58] <fluter> so is there a way to mock away somemod.getRemoteSeconds
[17:14:59] <deniska> fluter: or remove that line from the class body :)
[17:15:10] <fluter> deniska: yes , but how should I put the patch
[17:15:11] *** Quits: fikran (~fikran@user/fikran) (Ping timeout: 265 seconds)
[17:15:21] <fluter> i put it in file scope , it didn't take effect
[17:15:23] *** Joins: greknod28 (~grek@120.88.171.98)
[17:16:06] <fluter> in in test.py: import somemod , p = patch.object(somemod, 'getRmoteSeconds', my_func)
[17:16:20] <fluter> it looks this is not in use in def test_foo()
[17:16:25] *** Quits: xiongxin (~quassel@119.123.100.49) (Quit: https://quassel-irc.org - Chat comfortably. Anywhere.)
[17:16:45] *** Joins: indigogo (~ryan@191.227.220.203.dial.dynamic.acc01-comm-mtg.comindico.com.au)
[17:16:49] <deniska> fluter: do you really intend to miss `e` in getRmoteSeconds?
[17:17:06] *** Joins: fikran (~fikran@user/fikran)
[17:17:12] <fluter> sorry typo in irc, my code was no typo ;-P
[17:17:39] <avu> fluter: using copy&paste saves lifes! ;)
[17:17:50] <fluter> ok :)
[17:18:00] <deniska> fluter: well, there's always a nuclear option of doing `import somemod; somemode.getRemoteSeconds = lambda: 11` and ensuring to do that before imports of whatever uses it
[17:18:16] <fluter> deniska: ah ok
[17:18:17] <deniska> but that's fragile
[17:18:23] <fluter> no need to mock or patch?
[17:18:36] <deniska> in general if it's hard to test, it might be worth it to refactor whatever you're trying to test
[17:19:31] <fluter> ok, that make sense
[17:20:02] *** Quits: frost (~frost@59.71.244.189) (Quit: Connection closed)
[17:20:16] *** Quits: upsala (~zcb@185.213.155.160) (Quit: WeeChat 3.3)
[17:20:55] *** Seto_Kaiba is now known as Hunterkll
[17:22:00] *** Quits: indigogo (~ryan@191.227.220.203.dial.dynamic.acc01-comm-mtg.comindico.com.au) (Quit: Lost terminal)
[17:24:08] *** Quits: PublicWifi (~PublicWiF@user/publicwifi) (Quit: WeeChat 3.0)
[17:24:13] *** Quits: DeaDSouL (~DeaDSouL@45.130.136.155) (Quit: leaving)
[17:24:32] *** Joins: mei (~mei@user/mei)
[17:24:57] *** Joins: jetchisel (jetchisel@user/jetchisel)
[17:25:27] *** Joins: DeaDSouL (~DeaDSouL@45.86.203.25)
[17:26:10] *** Joins: PublicWifi (~PublicWiF@user/publicwifi)
[17:26:39] <deniska> fluter: mocks are there to help you construct "fake" objects and functions, to check how they were used by the code being tested, and to ensure these objects get restored if any test doesn't want to have mocks
[17:27:08] *** saribro is now known as swinnenb
[17:27:49] *** Quits: DeaDSouL (~DeaDSouL@45.86.203.25) (Client Quit)
[17:27:51] *** Joins: pro_z_ (~pro_z@37.214.46.4)
[17:28:46] <deniska> fluter: here you want to patch something before any test is actually run
[17:29:00] <fluter> right
[17:30:25] *** Joins: grooverman (~grooverma@177.95.12.14)
[17:30:48] *** Joins: Vornicus (~Vornicus@2603-8000-5d07-7ef0-9587-7f48-310e-0534.res6.spectrum.com)
[17:30:48] *** Quits: djhankb (~djhankb@208.113.164.68) (Read error: Connection reset by peer)
[17:31:07] *** Quits: PublicWifi (~PublicWiF@user/publicwifi) (Quit: WeeChat 3.0)
[17:31:19] *** Joins: djhankb (~djhankb@208.113.164.68)
[17:32:23] *** Joins: PublicWifi (~PublicWiF@user/publicwifi)
[17:33:47] *** Quits: aniruddha (uid340443@id-340443.ilkley.irccloud.com) (Quit: Connection closed for inactivity)
[17:34:04] <fluter> so i'm running unit test with this: python3.8 -s -m pytest --junitxml rpg-reports/xunit/pytest.xml --cov=. --cov-report xml:cobertura-coverage/python-coverage.xml -p no:celery
[17:34:40] <fluter> the coverage report is strange: it only shows coverage of the test_*.py itself, it doesn't show anything for the modules i'm testing
[17:34:51] <fluter> is there anything wrong with this command?
[17:35:12] <fluter> obviously i don't need coerage of the test files...
[17:35:59] <sco1> You do: https://nedbatchelder.com/blog/202008/you_should_include_your_tests_in_coverage.html
[17:36:02] <bjs> fluter: "obviously"?   you write . there, what directory are you running that command from anyway?
[17:36:06] *** Joins: kenwoodfox (~quassel@user/kenwoodfox)
[17:36:25] <jmiehe> any $click_ enthusiasts online? I think I'd like to inherit click.Command to create an argument by default
[17:36:28] *** Quits: AquaL1te (~AquaL1te@user/aqual1te) (Quit: leaving)
[17:36:43] <fluter> bjs: in the project root folder, where there is src/ and tests/
[17:37:12] <fluter> sco1: ok, but the problem is module code coverage is missing
[17:37:43] <sco1> Yes, but I'm not going to ask the same question bjs is
[17:37:49] *** Joins: Gurkenglas (~Gurkengla@dslb-002-203-144-204.002.203.pools.vodafone-ip.de)
[17:38:05] *** Quits: mickey8 (~user@user/mickey) (Quit: Ping timeout (120 seconds))
[17:38:29] *** Quits: Hash (~weechat@thestonedapes.com) (Quit: WeeChat 3.3)
[17:38:44] *** Joins: mickey8 (~user@user/mickey)
[17:39:04] <nedbat> i have some very well-trained minions in this channel :)
[17:39:22] *** Joins: p-i-_ (~Ohmu@mx-ll-223.206.147-206.dynamic.3bb.co.th)
[17:41:00] *** Quits: Laibsch (~leggewie@93.152.184.249) (Quit: Leaving.)
[17:41:00] *** Joins: d3sync (~d3sync@62.1.63.20.dsl.dyn.forthnet.gr)
[17:41:19] <bjs> fluter: try --cov=   (i.e. blank) to get coverage of everything  or --cov=src/
[17:41:20] <avu> nedbat: well, links to articles in your blog just are the best answer to many questions frequently asked here :)
[17:41:46] *** Joins: Hash (~weechat@protect.yourself.with.hashsecurity.org)
[17:41:49] <nedbat> avu: :)
[17:41:55] <bjs> (coverage of everything is almost never what you want but might be useful just to check whether it's the filter or something else...)
[17:42:00] <nedbat> this channel is where i find questions to answer!
[17:42:00] *** Joins: Laibsch (~leggewie@93.152.184.249)
[17:42:18] <sco1> Too bad you've already answered all of them :D
[17:42:54] <nedbat> fluter: if you run that same command with COVERAGE_DEBUG=trace environment variable, you will get details of each decision coverage.py made about whether to trace a file or not.
[17:43:15] *** Quits: p-i- (~Ohmu@mx-ll-223.206.147-206.dynamic.3bb.co.th) (Ping timeout: 258 seconds)
[17:43:34] *** Joins: stormdancer (~stormdanc@185.245.86.122)
[17:44:08] <fluter> hmm, i think i found the issue, --cov= points to the source files, but when i do import mymod, it is from installed, it does not use files in src/ directly
[17:44:21] <fluter> so pip install the project, run pytest
[17:44:24] <bjs> fluter: ah,  you can install using -e
[17:44:32] <fluter> is this the right thing to do?
[17:44:33] <bjs> to use the actual files rather than copying them over
[17:44:34] *** Joins: sonny (~sonny@bras-base-london1483w-grc-31-74-12-158-68.dsl.bell.ca)
[17:44:38] <fluter> pip install -e?
[17:44:43] <Zweimer> Did anyone here implement a plugin-system before (importlib.import_module) and used pyInstaller on the main program? I wonder how reliable this would work.
[17:44:47] <bjs> fluter: yes, like   pip install -e .
[17:44:59] *** Quits: Pandadub (~Barones@2804:7f3:8987:f315:742:565:99a9:9dc) (Remote host closed the connection)
[17:45:10] <fluter> hmm, but this command is invoked by jenkins ci server, :(
[17:45:11] <bjs> installs the packages from the current directory, but doesn't copy the files over it uses the ones actually in the directory
[17:45:17] <fluter> this is not an issue in my dev machine
[17:46:07] *** Quits: sonny (~sonny@bras-base-london1483w-grc-31-74-12-158-68.dsl.bell.ca) (Quit: Client closed)
[17:46:20] <Zweimer> I reckon one could also handle the .pyc files rather than the .py files, since __import__ would look for a pyc file first anyway?
[17:46:35] *** Joins: causa_sui (~causasui@c-68-60-125-136.hsd1.mi.comcast.net)
[17:46:51] <SnoopJ> Zweimer, it's usually best to let the implementation worry about bytecode
[17:47:01] *** Joins: hqdruxn08_ (~hqdruxn08@cpe-66-68-166-214.austin.res.rr.com)
[17:47:21] <SnoopJ> I'm not sure where it ends up with PyInstaller, probably in the temporary directory it creates
[17:48:00] *** Quits: stormdancer (~stormdanc@185.245.86.122) (Ping timeout: 260 seconds)
[17:48:54] <Zweimer> SnoopJ, so you think it could work to implement a importlib.import_module-loader in a program, generate an execute of it (not --one-file obviously) and distribute .pyc files as plugins?
[17:50:08] *** Joins: white_shadow (~white_sha@user/white-shadow/x-1132694)
[17:50:13] *** Joins: white_pie (~white_sha@user/white-shadow/x-1132694)
[17:50:22] *** Quits: ubert (~Thunderbi@91.141.37.135.wireless.dyn.drei.com) (Remote host closed the connection)
[17:50:55] *** Quits: hqdruxn08 (~hqdruxn08@cpe-66-68-166-214.austin.res.rr.com) (Ping timeout: 252 seconds)
[17:51:30] *** Quits: forgotmynick (uid24625@id-24625.hampstead.irccloud.com) (Ping timeout: 260 seconds)
[17:51:31] *** Quits: mexen (uid495612@user/mexen) (Ping timeout: 252 seconds)
[17:51:41] *** Quits: bitdex (~bitdex@gateway/tor-sasl/bitdex) (Quit: = "")
[17:51:59] *** Quits: r0bby (r0bby@user/r0bby) (Ping timeout: 264 seconds)
[17:52:11] *** Quits: gitesh (uid423739@id-423739.ilkley.irccloud.com) (Ping timeout: 245 seconds)
[17:52:11] *** Quits: KnownSyntax (sid233169@user/knownsyntax) (Ping timeout: 245 seconds)
[17:52:11] *** Quits: joel135 (sid136450@id-136450.hampstead.irccloud.com) (Ping timeout: 245 seconds)
[17:52:18] *** Quits: CaryHartline (~CaryHartl@2603-8080-6a0e-8d88-fce5-8f43-3546-c881.res6.spectrum.com) (Quit: Textual IRC Client: www.textualapp.com)
[17:52:35] *** Quits: LyndsySimon (sid34452@id-34452.lymington.irccloud.com) (Ping timeout: 264 seconds)
[17:52:35] *** Quits: Memory (sid459764@user/memory) (Ping timeout: 264 seconds)
[17:53:13] *** Quits: cyberpear (uid364019@fedora/cyberpear) (Ping timeout: 258 seconds)
[17:53:30] *** Joins: CodeMouse92 (~CodeMouse@user/codemouse92)
[17:53:53] *** Joins: r0bby (r0bby@user/r0bby)
[17:53:54] *** Joins: joel135 (sid136450@hampstead.irccloud.com)
[17:53:54] *** Quits: winterflaw (~winterfla@gateway/tor-sasl/winterflaw) (Ping timeout: 276 seconds)
[17:53:58] *** Joins: gitesh (uid423739@ilkley.irccloud.com)
[17:54:00] *** Joins: KnownSyntax (sid233169@user/knownsyntax)
[17:54:04] <Zweimer> Guess I will have to try it :)
[17:54:06] *** Joins: mexen (uid495612@user/mexen)
[17:54:09] *** Joins: forgotmynick (uid24625@hampstead.irccloud.com)
[17:54:19] *** Joins: Memory (sid459764@user/memory)
[17:54:21] *** Joins: LyndsySimon (sid34452@id-34452.lymington.irccloud.com)
[17:54:48] *** Joins: cyberpear (uid364019@fedora/cyberpear)
[17:56:07] *** Joins: DeaDSouL (~DeaDSouL@85.203.34.67)
[17:56:11] *** Joins: ub (~Thunderbi@91.141.37.135.wireless.dyn.drei.com)
[17:57:52] *** Quits: DeaDSouL (~DeaDSouL@85.203.34.67) (Client Quit)
[17:58:27] *** Joins: CaryHartline (~CaryHartl@2603-8080-6a0e-8d88-c9f6-05fd-7a87-ea36.res6.spectrum.com)
[18:00:27] *** Joins: subopt (~subopt@2603-8081-2302-459a-556b-93a8-c732-d8f8.res6.spectrum.com)
[18:00:32] *** subopt is now known as _subopt
[18:00:41] *** Joins: flyback (~flyback@2601:540:8201:1e60::c2d6)
[18:00:53] *** Quits: twobitsprite (~twobitspr@107.13.51.62) (Ping timeout: 258 seconds)
[18:01:18] *** Joins: Barones (~Barones@2804:7f3:8987:f411:a5a5:30be:b120:e93f)
[18:02:35] *** Joins: twobitsprite (~twobitspr@66.115.154.150)
[18:04:22] <SnoopJ> Zweimer, that is pretty much the exactly opposite of what I said: don't distribute .pyc, distribute .py (or .zip containing .py)
[18:04:27] *** Joins: dkdkns (~dkdkns@178.49.152.42)
[18:04:46] <dkdkns> is there a better way to write `flds=tuple(map(lambda x: x.strip(),z.rsplit(b': ',1)))`?
[18:04:51] <SnoopJ> Zweimer, I have done a very simple extension system that loads .zip files, but I haven't combined it with PyInstaller
[18:05:15] *** Quits: vladoski (~vladoski@2001:b07:add:d406:88e2:44c2:a529:99eb) (Remote host closed the connection)
[18:07:06] *** Quits: freeworld (~vit@chello085216193138.chello.sk) (Quit: Konversation terminated!)
[18:07:09] <Zweimer> SnoopJ, right. Thank you for the hint. I am currently reading about the differences of "module_from_spec" and "import_module". Which function were you using?
[18:07:11] *** Joins: sonny (~sonny@bras-base-london1483w-grc-30-74-12-157-200.dsl.bell.ca)
[18:07:15] *** Parts: sonny (~sonny@bras-base-london1483w-grc-30-74-12-157-200.dsl.bell.ca) ()
[18:07:25] *** Joins: freeworld (~vit@chello085216193138.chello.sk)
[18:07:54] *** Parts: Laibsch (~leggewie@93.152.184.249) ()
[18:08:40] *** Quits: vvdaiwrw (~rvgzuuqp@gateway/tor-sasl/rvgzuuqp) (Remote host closed the connection)
[18:09:07] *** Quits: freeworld (~vit@chello085216193138.chello.sk) (Client Quit)
[18:09:25] *** Joins: freeworld (~vit@chello085216193138.chello.sk)
[18:09:37] *** Joins: vvdaiwrw (~rvgzuuqp@gateway/tor-sasl/rvgzuuqp)
[18:10:12] *** Joins: vladoski (~vladoski@2001:b07:add:d406:c17f:5b7:3242:b307)
[18:10:40] <nedbat> dkdkns: flds = tuple(x.strip() for x in z.rsplit(b': ', 1))
[18:11:14] <nedbat> dkdkns: does it really need to be a tuple?
[18:11:36] <dkdkns> no, I have to use tuple because map is not indexable
[18:12:09] <nedbat> dkdkns: why not a list?
[18:12:19] <nedbat> dkdkns: [x.strip() for x in z.rsplit(b': ', 1)]
[18:12:24] <dkdkns> is there a difference?
[18:12:47] <nedbat> dkdkns: it's easier to read the list comprehension than the tuple(...) thing
[18:13:08] *** _subopt is now known as subopt
[18:13:09] <hexology> also, semantically tuples are more like a "record" (like a row in a database) than an arbitrary-length sequence
[18:13:40] <hexology> actually in this case maybe a tuple is the right choice, if these are field names for some data set or protocol
[18:14:37] *** Quits: elkalamar_ (elkalamar@gateway/vpn/airvpn/elkalamar) (Ping timeout: 252 seconds)
[18:15:04] *** Quits: white_pie (~white_sha@user/white-shadow/x-1132694) (Ping timeout: 258 seconds)
[18:15:04] *** Quits: white_shadow (~white_sha@user/white-shadow/x-1132694) (Ping timeout: 258 seconds)
[18:15:07] <nedbat> tuple(...) is awkward enough that i would only use it if i really needed a tuple
[18:17:51] *** Joins: paul424 (~tom@ip-5-172-238-29.multi.internet.cyfrowypolsat.pl)
[18:18:08] *** Joins: stormdancer (~stormdanc@185.245.86.121)
[18:18:54] <mav`rik> since it's a split on bytes, does strip work on the result? Is this Python 2?
[18:19:33] *** Quits: hendursa1 (~weechat@user/hendursaga) (Quit: hendursa1)
[18:19:55] <supakeen> .strip works on bytes.
[18:20:05] *** Quits: ub (~Thunderbi@91.141.37.135.wireless.dyn.drei.com) (Ping timeout: 260 seconds)
[18:20:45] *** Joins: hendursaga (~weechat@user/hendursaga)
[18:22:01] <supakeen> https://docs.python.org/3/library/stdtypes.html#bytes.strip
[18:22:03] <deniska> I was kinda surprised that int() works on bytes
[18:22:18] <deniska> for some reason I thought it wouldn't
[18:22:57] <supakeen> It does but you'd likely want to use int.from_bytes :)
[18:23:02] *** Joins: aselman4 (~aselman4@136.2.33.162)
[18:23:04] *** Joins: CrypticSquared (~CrypticS_@user/crypticsquared)
[18:23:16] <supakeen> You know, depending on what you want.
[18:23:26] <deniska> sure, I mean, actually having b'123'
[18:23:29] <supakeen> Yea.
[18:23:31] <supakeen> Sorry :)
[18:24:16] <aselman4> Hello all. why doesnt dt -= timedelta(days=1) always work as you'd expect (data continuously decreased by 1 day)?
[18:24:19] *** Joins: DeaDSouL (~DeaDSouL@45.86.201.164)
[18:25:16] *** Joins: white_pie (~white_sha@user/white-shadow/x-1132694)
[18:25:16] *** Joins: white_shadow (~white_sha@user/white-shadow/x-1132694)
[18:25:28] <grym> aselman4: one day is not a constant amount of time
[18:26:00] <SnoopJ> aselman4, you want `datetime.date` if you're interested in calendar dates
[18:26:07] <CodeMouse92> grym: Can you elaborate, because that just hurt *my* brain
[18:26:09] <deniska> timedelta's idea of a day is 24 hours, which is not calendar's idea of the day
[18:26:23] <SnoopJ> CodeMouse92, the length of a sidereal day and the length of a calendar day are not necessarily the same.
[18:26:27] <deniska> CodeMouse92: consider DST and leap seconds
[18:26:34] <CodeMouse92> aha
[18:26:40] <SnoopJ> yea those are the most important examples
[18:26:45] <supakeen> I'd probably want to know what the actual behaviour is that's "wrong" in this case :)
[18:26:56] * SnoopJ guesses that datetime is being used where date is more appropriate
[18:27:25] <dkdkns> is there a good way to bisect a list into sublists, or recursion is better?
[18:27:28] <grym> heh, i hadn't even thought of dst :P
[18:27:37] <grym> dkdkns: well, there's the bisect module :)
[18:28:22] *** Joins: qlixed (~qlixed@181.44.129.13)
[18:28:29] <aselman4> https://stackoverflow.com/a/441152/506185 is this answer incorrect then?
[18:28:45] <dkdkns> no, I mean [[a b c d]] ->[[a b] [c d]] -> [[a] ... [d]]
[18:28:55] <SnoopJ> aselman4, the question is confusing the concept of "datetime" and "date" which are different types.
[18:29:10] <SnoopJ> aselman4, if you are interested in the number on the calendar, you want the type datetime.date
[18:29:20] <supakeen> I'm still interested in the actual results.
[18:29:25] <supakeen> Versus the expected results.
[18:29:27] <aselman4> makes sense, thank you
[18:29:46] <phy1729> dkdkns: https://docs.python.org/3/library/itertools.html#itertools.combinations
[18:29:59] <SnoopJ> a datetime object represents a point in time, a date object represents an entire calendar day
[18:30:15] <SnoopJ> and the distinction between the two is useful because time turns out to be very complicated :)
[18:30:44] *** Quits: djhankb (~djhankb@208.113.164.68) (Read error: Connection reset by peer)
[18:30:52] <dkdkns> i need spans, not combinations
[18:31:17] *** Quits: white_shadow (~white_sha@user/white-shadow/x-1132694) (Remote host closed the connection)
[18:31:17] *** Quits: white_pie (~white_sha@user/white-shadow/x-1132694) (Remote host closed the connection)
[18:31:19] *** Joins: djhankb (~djhankb@208.113.164.68)
[18:31:33] <SnoopJ> dkdkns, what should `[a, b, c]` be turned into?
[18:31:47] <phy1729> So the end would be [[[a], [b]], [[c], [d]]] ?
[18:33:07] *** Quits: mIk3_08 (~Thunderbi@user/mik3-08/x-2852566) (Quit: mIk3_08)
[18:33:08] *** Joins: alkino (~quassel@user/alkino)
[18:33:13] *** Quits: forgotmynick (uid24625@hampstead.irccloud.com) (Quit: Connection closed for inactivity)
[18:33:18] <alkino> hi o/ is there a place to ask questions about pybind11 ?
[18:34:16] *** Joins: nomic (~nomic@185.217.117.49)
[18:35:07] <SnoopJ> alkino, it's topical here
[18:35:09] *** Quits: Zweimer (~Zweimer@2a02:908:d20:26e0:79eb:ea87:6f38:cccf) (Quit: Client closed)
[18:36:34] *** Quits: stormdancer (~stormdanc@185.245.86.121) (Ping timeout: 260 seconds)
[18:36:54] *** Joins: de-facto (~de-facto@user/de-facto)
[18:37:19] <alkino> ok, so I got a huge (> 100GB) c++ std::vector<std::pair<uint32_t, uint64_t>>, I expose it with def_readonly, and it is transform to List<Tuple<int, int>> and so copied ^^ is there a way to avoid the copy, as it is readonly
[18:37:43] *** Quits: connor_goodwolf (~connor@user/connor-goodwolf/x-2615606) (Ping timeout: 252 seconds)
[18:37:49] *** Quits: aselman4 (~aselman4@136.2.33.162) (Quit: Client closed)
[18:38:04] <dkdkns> SnoopJ [a] [b,c] or [a,b] [c]
[18:38:18] *** Quits: ExeciN (~ExeciN@user/nicexe) (Remote host closed the connection)
[18:38:32] <dkdkns> no, the list should be flat
[18:38:57] *** Quits: vladoski (~vladoski@2001:b07:add:d406:c17f:5b7:3242:b307) (Remote host closed the connection)
[18:39:11] *** Joins: vladoski (~vladoski@2001:b07:add:d406:c17f:5b7:3242:b307)
[18:39:15] <mav`rik> dkdkns: is the same true for any odd-length list?
[18:39:38] <dkdkns> yes, just separate it roughly in two
[18:40:13] <phy1729> I had assumed  length = len(data); if length < 2: return data; return [foo(data[:length//2]), foo(data[length//2:])]   but not sure what you mean by flat
[18:40:29] *** Joins: junktext_ (~junktext@gateway/vpn/pia/junktext)
[18:40:33] *** Joins: FluffyMask (~masque@user/fluffymask)
[18:41:13] <dkdkns> [[a] [b] [c] [d]]
[18:41:46] *** Joins: connor_goodwolf (~connor@user/connor-goodwolf/x-2615606)
[18:41:57] <SnoopJ> dkdkns, well, you could slice to the midpoint as phy1729 is suggesting, but the "or" there makes me uneasy
[18:42:23] <phy1729> why not [a] [b] [c]?
[18:42:42] <SnoopJ> phy1729, probably because 1/3 << 1/2
[18:43:19] <phy1729> [[x] for x in data] is really simple though :p
[18:45:02] *** Joins: rpkilby (~rpkilby@c-24-20-208-106.hsd1.or.comcast.net)
[18:45:26] <SnoopJ> phy1729, there are a great many simple solutions to other problems :P
[18:47:04] *** Joins: mike18 (~geri@217-149-167-230.nat.highway.telekom.at)
[18:47:07] <mike18> hi
[18:47:26] <mike18> do you know an online compiler for python where i can install a lib like deepdiff?
[18:47:32] <mike18> using pip
[18:47:33] <grym> mike18: probably repl.it
[18:47:39] <SnoopJ> alkino, that sounds like you want a view over this data. numpy might be a fairly natural way to do it
[18:47:41] <mike18> can run pip install there
[18:47:44] <grym> mike18: yes
[18:47:45] <mike18> @grym
[18:47:49] <mike18> you can?
[18:47:52] <grym> yes
[18:47:59] <alkino> SnoopJ: yes ;), we are on that way, but how?
[18:48:07] <InPhase> mike18: Typically just import and it auto-pips if it wants to.
[18:48:15] <jmiehe> to the click experts, is this clean enough to add default Arguments/Options to Commands? https://bpa.st/EXJA
[18:48:21] <mike18> i get SyntaxError: invalid syntax when entering pip install deepdiff
[18:48:29] <grym> mike18: in a .py file, sure
[18:48:36] <grym> but repl.it doesn't just give you an editor
[18:48:38] *** Joins: tsujp (~tsujp@sourcehut/user/tsujp)
[18:48:41] <mike18> @InPhase the terminal on that page
[18:49:09] <InPhase> mike18: That's a python terminal.  But instead, try just importing in the code and see what happens.
[18:49:27] *** Quits: leduyquang753 (~leduyquan@user/leduyquang753) (Quit: Gotta go, see you guys later.)
[18:49:33] <InPhase> mike18: There are auto-detects for common enough imports.
[18:49:33] <SnoopJ> alkino, have you read the relevant section of the documentation? https://pybind11.readthedocs.io/en/stable/advanced/pycpp/numpy.html#memory-view
[18:49:50] <alkino> yes, numpy need to have both the same type, right?
[18:49:53] <alkino> this is our point
[18:50:06] <SnoopJ> no
[18:50:07] *** ouemt_ is now known as ouemt
[18:50:22] <SnoopJ> https://numpy.org/doc/stable/user/basics.rec.html#structured-arrays
[18:51:02] *** Joins: y1n (~y1n@178.115.39.211.wireless.dyn.drei.com)
[18:51:04] *** Quits: Barones (~Barones@2804:7f3:8987:f411:a5a5:30be:b120:e93f) (Quit: Leaving)
[18:51:27] <mike18> InPhase: deepdiff not common enough?
[18:51:33] <Soni> can we put patreon links on pypi?
[18:51:35] <InPhase> mike18: Did you try it?
[18:51:39] <mike18> yeah
[18:52:23] <grym> you can also list deps in pyproject.toml, iirc
[18:52:25] <grym> on repl.it
[18:52:33] <grym> i haven't used it in a while
[18:53:14] *** Joins: raxor2k (~raxor2k@78.158.254.247)
[18:53:29] <raxor2k> Ive come to the point where i decided to stop using SqlAlchemy.. its all hype and vibe
[18:53:41] <raxor2k> im going back to pymysql.. much better
[18:53:44] <raxor2k> and faster
[18:54:00] <InPhase> mike18: This is disrecommended for production, but since you're not in production, you can try import pip, and then something like:  pip.main(['install', 'deepdiff'])
[18:54:12] <mike18> i know - just testing :)
[18:54:25] <InPhase> mike18: Depending on version you might need pip._internal.main(['install', 'deepdiff'])
[18:54:29] <SnoopJ> Soni, that sounds like a better question for #pypa
[18:54:40] <mike18> InPhase: i get: NameError: name 'pip' is not defined
[18:54:43] <mike18> hm
[18:54:46] <InPhase> mike18: import pip
[18:56:06] <mike18> ERROR: Could not find a version that satisfies the requirement deepdiff (from versions: none)
[18:56:13] <mike18> ModuleNotFoundError: No module named 'deepdiff'
[18:56:33] <mike18> i have a: from deepdiff import DeepDiff
[18:56:36] <mike18> after that
[18:56:55] <grym> mike18: are you running a modern python
[18:56:57] *** Joins: LiftLeft (~LiftLeft@216-26-118-34.dynamic.nelson.airstreamcomm.net)
[18:57:11] <mike18> i run https://replit.com/languages/python3
[18:57:30] <InPhase> This might not be in the list of approved packages.
[18:57:40] <mike18> i see
[18:57:57] <alkino> SnoopJ: ok, interesting, thanks, memoryview only has examples with single type
[18:59:00] *** Joins: p3lim7 (~p3lim@ti0006q161-0896.bb.online.no)
[18:59:08] *** Joins: cul8r (~cul8r@76.113.95.199)
[18:59:34] <InPhase> mike18: To avoid chaos on a free server, it is reasonable that they restrict it.  I suspect you'll find that pattern in different flavors in any online python interpreter.
[18:59:55] <mike18> but deepdiff is not a dangerous package :)
[19:00:07] <InPhase> mike18: They most likely opt-in rather than opt-out.
[19:00:15] *** Joins: anonymeowo (~anonymeow@5.34.180.230)
[19:00:18] <sco1> It installs fine on repl.it
[19:00:26] *** Joins: hrob (~hrob@157-157-18-250.ip.simnet.is)
[19:00:36] <mike18> sco1: what did you try?
[19:00:42] <sco1> pip install deepdiff
[19:00:54] <mike18> sco1: on here https://replit.com/languages/python3 ?
[19:00:55] *** Quits: p3lim (~p3lim@ti0006q161-0896.bb.online.no) (Ping timeout: 252 seconds)
[19:00:55] *** p3lim7 is now known as p3lim
[19:00:59] <sco1> Yes.
[19:01:05] <SnoopJ> alkino, yes, you'll have to fill in the blanks a little bit and possibly get into the Numpy C-API documentation to do what you're interested in.
[19:01:07] <mike18> sco1: are you registered with that page btw?
[19:01:30] <InPhase> sco1: With a logged in account by any chance?  Not sure if it's different for that.
[19:01:36] <alkino> SnoopJ: ok
[19:01:40] <sco1> Yes, with a logged in account
[19:01:58] <mike18> oh ok
[19:02:42] *** Quits: BSaboia (~bsaboia@187.19.138.198) (Quit: This computer has gone to sleep)
[19:03:10] <SnoopJ> alkino, I'm not sure about the std::pair<> part of it, actually, that could make doing it with numpy complicated if it affects the pointer arithmetic because of pair's implementation details.
[19:04:21] *** Joins: stormdancer (~stormdanc@185.245.86.123)
[19:05:02] <SnoopJ> IIRC you don't really get any guarantees about layout from std::pair/std::tuple
[19:05:09] <WhizzWr> hey folks
[19:05:52] <alkino> ok
[19:06:02] *** Joins: kickingvegas (~cchoi@c-24-5-40-20.hsd1.ca.comcast.net)
[19:06:21] <WhizzWr> probably stupid question, but how to make numpy generates array of [[0,0],[1,0],[2,0], ... [m,n]]?
[19:06:28] <SnoopJ> alkino, is there any possibility for change in the code you're binding? having two distinct vectors likely be simpler
[19:06:39] <InPhase> WhizzWr: What does [0, 0, 0, ... n] look like to you?
[19:06:46] *** Quits: Lewky_ (~Lewky@146.70.50.90) (Ping timeout: 245 seconds)
[19:07:01] <SnoopJ> WhizzWr, if you want every combination of the two, meshgrid() might be what you want
[19:07:19] <grym> mgrid/meshgrid is how i'd do that too
[19:07:32] <WhizzWr> InPhase: I tried reading meshgri, but it creates two output
[19:07:44] <InPhase> WhizzWr: I'm just saying that's not a sequence unless n is 0.
[19:08:01] <SnoopJ> WhizzWr, you can index the underlying data with the output of np.mgrid[:m, :n] maybe?
[19:08:04] <InPhase> WhizzWr: You probably meant something you didn't say.
[19:08:37] *** Quits: mozgalom (~mozgalom@IPnet-gw.157.157.97.111.simnet.is) (Quit: SO LONG SUCKERS!)
[19:09:05] *** Quits: stormdancer (~stormdanc@185.245.86.123) (Ping timeout: 260 seconds)
[19:10:45] <InPhase> mike18: I dug out my login information out of curiosity.  And yes, I confirm sco1's result that as soon as you log in, you can do this install.
[19:10:59] <mike18> ok - see the same now - working
[19:11:03] <mike18> thanks guys
[19:11:31] <InPhase> This different pypi access for login or not appears to be a new feature, so a useful learned bit of information.
[19:11:44] <grym> InPhase: gotta lock 'em in somehow
[19:12:18] *** Quits: ayustae (Thunderbir@gateway/vpn/protonvpn/ayustae) (Quit: ayustae)
[19:12:18] <InPhase> It makes sense.  Like everyone else offering free computational services, they're probably fighting against bitcoin miners abusing it.
[19:12:47] <WhizzWr> InPhase: yeah maybe I said it wrong, but I want it to have let say m =1000, n =1200 [[0,0],[1,0],[2,0], ... [1000,0], [0,1], [1,1] ... [1000,1], .... [1000, 1200]]
[19:13:10] <InPhase> WhizzWr: Oh, combinations.
[19:13:51] <WhizzWr> it's 2D coordinate grid actualy, from top left, to bottom right
[19:14:02] <mav`rik> Given a typing var: Union[X, Y, Z] is there a way for me to (at runtime) get the Union and iterate over the types X through Z?
[19:14:03] *** Joins: eN_Joy (~eN_Joy@wsip-72-213-93-155.ok.ok.cox.net)
[19:14:42] <InPhase> WhizzWr: list(itertools.product(range(5), range(6)))
[19:15:06] *** Joins: forgotmynick (uid24625@id-24625.hampstead.irccloud.com)
[19:15:13] *** Joins: slowButPresent (~slowButPr@user/slowbutpresent)
[19:15:41] <InPhase> Ah, and you said numpy.  One moment.
[19:16:08] <mike18> question to float compare in python. looks like deepdiff does almost equal compare. i currently use: math_epsilon=0.00001 ... should that be sufficient to compare 2 floats for almost equal?
[19:16:39] <bjs> mike18: depends how close the floats have to be for you to consider them "almost equal"
[19:16:51] <deniska> also depends on how large the floats aree
[19:16:53] <mike18> yeah
[19:17:03] <mike18> max 100.xxxxxx
[19:18:02] <mike18> where x is full precision i get in python
[19:19:37] *** Joins: upsala (~zcb@185.213.155.160)
[19:19:56] <grym> mike18: can you tell deepdiff how to compare? (like, can you pass it math.isclose and specify relative and absolute tolerances
[19:20:25] *** Quits: p-i-_ (~Ohmu@mx-ll-223.206.147-206.dynamic.3bb.co.th) (Remote host closed the connection)
[19:21:01] *** Joins: p-i- (~Ohmu@223.206.147.206)
[19:21:14] *** Joins: Nact (~l@2a02:2788:11c4:6e6:cebc:f487:efd8:173)
[19:21:53] <InPhase> WhizzWr: a = np.zeros((5,6)); a[:] = np.arange(6); c = np.zeros((2, 5*6)); c[0] = a.ravel(); c[1] = np.repeat(np.arange(5), 6); c = c.T; print(c)
[19:22:06] <InPhase> WhizzWr: So, doable.  There is probably a simpler method, but that's a start.
[19:22:37] <mav`rik> grym: sadly doesn't look like it - https://zepworks.com/deepdiff/5.6.0/diff.html - maybe with subclassing, but... urgh!
[19:22:43] *** Joins: BSaboia (~bsaboia@187.19.138.198)
[19:23:18] <mav`rik> grym: https://zepworks.com/deepdiff/5.6.0/numbers.html
[19:23:24] <grym> boooo
[19:24:14] *** Quits: Gustavo6046 (~Gustavo60@user/gustavo6046) (Remote host closed the connection)
[19:24:15] *** Joins: Gustavo6046_ (~Gustavo60@user/gustavo6046)
[19:24:27] *** Quits: fikran (~fikran@user/fikran) (Ping timeout: 258 seconds)
[19:25:08] <alkino> SnoopJ: not so much
[19:25:22] *** Quits: wib_jonas (~wib_jonas@business-37-191-60-209.business.broadband.hu) (Quit: Client closed)
[19:25:25] <WhizzWr> InPhase:ah yeah it works, actually would be simpler to convert those tupple from itertools to numpy array
[19:25:52] <WhizzWr> np.array(list(product(range(5), range(6))))
[19:25:58] <WhizzWr> unless I missed somethig
[19:26:27] *** Joins: fikran (~fikran@user/fikran)
[19:26:42] <WhizzWr> ah
[19:26:48] <InPhase> WhizzWr: np.array([np.repeat(np.arange(6), 5).reshape((6, 5)).T.ravel(), np.repeat(np.arange(5), 6)]).T  This also works, and is a little cleaner.
[19:26:52] *** Gustavo6046_ is now known as Gustavo6046
[19:27:08] <WhizzWr> but the range do it like [0,0], [0,1] ...
[19:27:15] <SnoopJ> alkino, bummer. What are the target tasks for this structure like on the Python side? An iterator or accessor class might be helpful if you don't need all of the data at once (but both would likely copy as they go)
[19:27:27] <InPhase> WhizzWr: In that last one, just switch the order in the list.
[19:27:29] *** Joins: Moosadee (~Moosadee@136.32.155.193)
[19:27:41] <WhizzWr> instead of [0,0], [1.0]
[19:28:05] *** Joins: emf (~emf@2620:10d:c090:400::5:7558)
[19:29:00] <WhizzWr> the numpy solution is OK
[19:29:05] <WhizzWr> thans InPhase
[19:29:11] <WhizzWr> *thanks
[19:29:32] *** Joins: vd (~vd@bras-base-mtrlpq2848w-grc-41-70-53-240-121.dsl.bell.ca)
[19:29:44] <mike18> grym: math_epsilon=0.00001 and also pass math.isclose?
[19:29:54] <grym> mike18: it might not be possible
[19:30:09] <mike18> isnt a math_epsilon=0.00001  enough?
[19:30:31] *** Quits: djhankb (~djhankb@208.113.164.68) (Read error: Connection reset by peer)
[19:30:44] <mike18> means the first 4 digits after comma must be equal?
[19:31:04] <grym> mike18: that's really up to you and your application
[19:31:05] *** Joins: djhankb (~djhankb@208.113.164.68)
[19:31:07] *** Joins: Ergo^ (~ergo@91.238.59.144)
[19:31:15] *** Quits: wolfgang (~wolfgang@101.174.167.116) (Remote host closed the connection)
[19:32:30] *** Joins: cousteau (~cousteau@user/cousteau)
[19:33:37] *** Joins: mxp_ (~mxp@185.16.205.131)
[19:33:57] *** Quits: mav`rik (~unknown@ec2-54-171-126-99.eu-west-1.compute.amazonaws.com) (Quit: leaving)
[19:35:50] <cousteau> I have a Python executable without a file extension that has `#!/usr/bin/env python` as the first line.  This script simply adds a dir to sys.path, imports a module, and calls its main().
[19:35:55] *** Quits: mxp (~mxp@185.16.205.131) (Ping timeout: 260 seconds)
[19:36:52] <Omega037> Why can I use .year on a pandas column of type np.datetime64 but not on a directly created value like np.datetime64("2019-01-01")?
[19:37:59] <InPhase> Omega037: Because it's the pandas Timestamp class.
[19:38:13] <Omega037> ok
[19:38:16] <InPhase> Omega037: print out .__class__ for it.
[19:38:24] *** Joins: winterflaw (~winterfla@gateway/tor-sasl/winterflaw)
[19:38:32] <cousteau> Now, this module has `#!/usr/bin/env python3` in it, however my system's `python` executable is likely python2 because it's a really old machine.  But maybe this file happens to be compatible with every Python.  What are some red flags I can check for?
[19:38:35] <Omega037> alright, that makes sense
[19:38:47] <Omega037> ill need to update my type hints and tests for that, I guess
[19:38:50] <Omega037> thanks
[19:39:19] <SnoopJ> cousteau, check sys.version_info
[19:39:26] <cousteau> (if I'm not sure, I think I'll add the missing 3 in the extensionless executable just in case, and maybe send a pull request to the author)
[19:39:45] <SnoopJ> or if you want to run on both, use `six`
[19:39:47] *** Quits: AlanMD (~AlanMD@193.105.140.131) (Ping timeout: 258 seconds)
[19:39:55] <SnoopJ> (but probably don't do that, Python 2 is well past EOL)
[19:40:05] *** Joins: stormdancer (~stormdanc@185.245.86.122)
[19:40:47] <cousteau> SnoopJ: the script doesn't do that
[19:41:23] <SnoopJ> cousteau, if you are not asking about possible modifications of the script, I do not know what you are asking about.
[19:41:37] <cousteau> SnoopJ: it's not code I wrote myself.  My concern is that, even though Python 2 is EOL'd, plenty of systems still symlink python to python2
[19:41:49] *** Atque is now known as ATQUE
[19:41:56] <SnoopJ> cousteau, what is your question?
[19:41:58] <InPhase> Omega037: Note that you can convert with pd.Timestamp(...), or vice versa with .to_numpy()
[19:42:00] *** Quits: tsujp (~tsujp@sourcehut/user/tsujp) (Quit: Client closed)
[19:42:35] *** Joins: legola (~legola@46.235.101.181)
[19:42:40] *** Quits: legola (~legola@46.235.101.181) (Remote host closed the connection)
[19:42:54] *** Joins: AlanMD (~AlanMD@86.121.179.183)
[19:43:00] *** Joins: mozgalom (~mozgalom@194.144.47.113)
[19:43:05] *** Quits: cp- (~cp-@b157153.ppp.asahi-net.or.jp) (Ping timeout: 265 seconds)
[19:43:09] <cousteau> SnoopJ: I was asking about how to figure out if the script will fail in Python2 without running it, or if it might work; i.e. which are the typical things that will work in py3 but fail in 2
[19:43:25] <cousteau> ...maybe I should just fix the code and call it a day
[19:44:16] *** Joins: superboot (~agentgasm@user/superboot)
[19:44:17] <SnoopJ> even if you don't plan to use `six`, it is a good source of information about compatibility problems
[19:44:18] <cousteau> (can confirm that python is 2.7.5 in this machine)
[19:44:22] <SnoopJ> yikes
[19:44:38] <cousteau> Hey at least it's not 2.6
[19:44:38] *** Quits: berong91 (~noob4ever@d75-154-235-153.bchsia.telus.net) (Remote host closed the connection)
[19:44:41] <InPhase> cousteau: It's best to add the 3 if you don't know the target system and aren't going to be setting up an environment at install.
[19:44:42] *** Joins: stormdan_ (~stormdanc@185.245.86.121)
[19:44:42] *** Quits: stormdancer (~stormdanc@185.245.86.122) (Ping timeout: 260 seconds)
[19:44:43] <cousteau> Or 2.2
[19:44:58] <InPhase> cousteau: The exception to that is if it's very short and simple and you know it runs on both.
[19:45:05] *** Joins: Barones (~Barones@2804:48dc:8500:0:5635:5e6d:7349:856)
[19:45:05] <superboot> Hi all. While using pyenv set to a non "system" version, does "pip install" install packages to the non "system" version as well? I don't want to corrupt my system installation.
[19:45:05] <SnoopJ> yes, python3 is what you ought to use if you intend for Python 3.x to be the target
[19:45:15] *** Quits: merijn (~merijn@83-160-49-249.ip.xs4all.nl) (Ping timeout: 260 seconds)
[19:45:38] <InPhase> But it's not worth effort to continue targetting python2 as a support target.  Anyone still relying on it is mostly "doing it wrong" by this point.
[19:45:42] *** Quits: hendursaga (~weechat@user/hendursaga) (Ping timeout: 276 seconds)
[19:45:58] <cousteau> Another of the scripts in here seems to be "python 2 but with 3 compatibility"
[19:46:15] *** Joins: merijn (~merijn@83-160-49-249.ip.xs4all.nl)
[19:46:22] <SnoopJ> superboot, pip installs for whatever interpreter it's running in. `pip` is generally a short entrypoint, I recommend always invoking it as `python3 -m pip` instead, and you can be sure that whatever `python3` points at will get the package(s)
[19:46:33] *** Joins: Auron (~Auron956@user/auron)
[19:46:35] <SnoopJ> https://snarky.ca/why-you-should-use-python-m-pip/
[19:46:56] *** Quits: metaace_ (~metaace@user/metaace) (Remote host closed the connection)
[19:46:57] <superboot> SnoopJ: Oh cool. Thank you.
[19:47:06] <SnoopJ> (sometimes `python3` and `pip` will be run in different interpreters, and this is a huge headache)
[19:47:12] *** Joins: berong91 (~noob4ever@d75-154-235-153.bchsia.telus.net)
[19:47:12] <cousteau> SnoopJ: not familiar with six.  Is it another name for 2to3?
[19:47:23] *** Joins: metaace (~metaace@user/metaace)
[19:47:23] *** Joins: hendursaga (~weechat@user/hendursaga)
[19:47:24] <SnoopJ> cousteau, no, it is not. https://pypi.org/project/six/
[19:47:30] <SnoopJ> It's a compatibility library
[19:47:44] <cousteau> Oh, cool!
[19:47:47] <cousteau> Thanks
[19:48:00] <SnoopJ> I can't really recommend strongly enough against targeting a 2.7 that is old even by 2.7 standards, though.
[19:48:16] *** Joins: sharperguy (~sharpergu@fnord.cryptophone.de)
[19:48:30] <SnoopJ> but if you are targeting that one, be aware of all the fixes you're missing through 2.7.18
[19:48:52] <hrob> Im struggling a little with pydantic types, I created a type  class Names(Dict[str,str]):   it works and my validators work, however the example documentation from pydantic for openapi are emtpy just "{}"
[19:49:17] <SnoopJ> hrob, why are you subclassing Dict instad of BaseModel?
[19:49:23] <SnoopJ> instead*
[19:49:38] *** Joins: yaalon (~yaalon@2600:1700:9450:2d30:bd09:78c:fb00:de4)
[19:49:57] <hrob> SnoopJ,  Im adding a validator to make sure the key is only 2 char long
[19:50:16] <hrob> I found this idea here https://github.com/samuelcolvin/pydantic/issues/1277
[19:50:40] <hrob> maybe I need __init__  call super()
[19:50:42] <sharperguy> Hi, I'm trying to use the unittest module. I noticed that when I use TestLoader().loadTestsFromNames() it returns a testsuite containing a list of testsuites, each with one testcase class. What I expected was a single testsuite containing all test clase classes. Is there a way to achieve this?
[19:50:46] <SnoopJ> hrob, I don't know what it means to add a validator to something that isn't a model
[19:51:35] *** Joins: node1 (~Guest1@user/node1)
[19:51:40] *** Quits: merijn (~merijn@83-160-49-249.ip.xs4all.nl) (Ping timeout: 258 seconds)
[19:51:46] <node1> Hi
[19:51:47] <hrob> SnoopJ  yeah, hm... I need probably something deriving from pydantic BaseModel   this just derives from types
[19:51:47] <SnoopJ> oh, defining __get_validators__ I guess
[19:52:00] *** Joins: ttys000 (~ttys000@user/ttys000)
[19:52:01] *** Joins: merijn (~merijn@83-160-49-249.ip.xs4all.nl)
[19:52:13] <SnoopJ> hrob, yea, I would stick to BaseModel as close as possible in general. Otherwise you're going to want to implement all the machinery that sample is *not* implementing
[19:52:14] <hrob> SnoopJ yeah the validators worked for me.... just the docs are empty
[19:52:19] *** Quits: vladoski (~vladoski@2001:b07:add:d406:c17f:5b7:3242:b307) (Remote host closed the connection)
[19:53:39] <hrob> SnoopJ  yeah I guessed it must be some feature that is missing there.
[19:53:59] *** Joins: ub (~Thunderbi@91.141.37.135.wireless.dyn.drei.com)
[19:54:30] <node1> What does it mean " Build a simple service.. that will accept a URL as an argument over a REST API .... and it's  like API only version of that." ?
[19:54:40] *** Quits: briian (uid321220@uxbridge.irccloud.com) (Quit: Connection closed for inactivity)
[19:55:04] <cousteau> ...you know what?  I'm not touching any file.  I'll just call the executable as `python3 theprogram` instead of `./theprogram`.  I don't feel like debugging someone else's code today
[19:55:21] <node1> Could anyone helps me to understand what does "API only version" meant?
[19:55:47] *** Quits: ponyofdeath (~vladi@2606:6000:cfc0:2b:9cf9:caf8:f20d:1053) (Quit: WeeChat 3.3)
[19:55:55] <node1> A sort of REST API rapper on the top of `simple service`?
[19:56:02] *** Quits: mike18 (~geri@217-149-167-230.nat.highway.telekom.at) (Remote host closed the connection)
[19:57:06] *** ub is now known as ubert
[19:57:07] <node1> Could anyone who is good in REST API and building  microservices in python? please helps me to understand
[19:57:10] *** Quits: CaryHartline (~CaryHartl@2603-8080-6a0e-8d88-c9f6-05fd-7a87-ea36.res6.spectrum.com) (Quit: My iMac has gone to sleep. ZZZzzzâ€¦)
[19:57:18] *** Quits: merijn (~merijn@83-160-49-249.ip.xs4all.nl) (Ping timeout: 260 seconds)
[19:57:29] <hrob> API only version of that.... is gibberish
[19:57:29] *** Joins: ubert1 (~Thunderbi@91.141.37.135.wireless.dyn.drei.com)
[19:57:36] <hrob> or some grammar mistake there
[19:57:54] <SnoopJ> cousteau, that's a very safe option, yea.
[19:58:02] *** Joins: merijn (~merijn@83-160-49-249.ip.xs4all.nl)
[19:58:19] <dkdkns> what is "that"?
[19:58:34] *** Quits: ubert (~Thunderbi@91.141.37.135.wireless.dyn.drei.com) (Remote host closed the connection)
[19:58:34] *** ubert1 is now known as ubert
[19:58:47] <node1> hrob So what could you interpret from this statement ? `Build a simple service.. that will accept a URL as an argument over a REST API .... and it's  like API only version of that.`
[19:58:48] <SnoopJ> dkdkns, invoking as `python3 file.py` instead of counting on the shebang
[19:58:55] <SnoopJ> and worrying about where `python` points
[19:58:59] *** Quits: shad (~shad@user/shad) (Quit: WeeChat 3.0)
[19:59:35] <hrob> node1  follow this tutorial for example...  https://flask.palletsprojects.com/en/2.0.x/quickstart/
[20:00:02] <dkdkns> was there any prior discussion node1?
[20:00:23] <hrob> mydomain.com/myapiendpoint?url="some url... eg http://google.com"
[20:00:29] <node1> hrob this is just a python written web framework.
[20:00:34] <hrob> sounds like they want that in your project
[20:01:08] <hrob> node1  just fast for you to do it with that.... can chose something else
[20:01:19] <hrob> sounds like a problem sheet from shool anyway
[20:01:22] <hrob> *school
[20:01:50] <node1> Here i need to build a simple URL shortner
[20:01:51] *** Quits: Naan (~Naan@user/naan) (Read error: Connection reset by peer)
[20:01:53] <SnoopJ> oh, different "that"
[20:02:02] <dkdkns> school problems are usually complete sentences :)
[20:03:10] <node1> But i'm unable to understand few things here what it meant by " ..argument over a REST API and API only version of that
[20:03:22] *** Joins: CaryHartline (~CaryHartl@2603-8080-6a0e-8d88-c9f6-05fd-7a87-ea36.res6.spectrum.com)
[20:03:22] *** Quits: merijn (~merijn@83-160-49-249.ip.xs4all.nl) (Ping timeout: 260 seconds)
[20:03:42] *** Joins: merijn (~merijn@83-160-49-249.ip.xs4all.nl)
[20:04:01] <dav1d> node1, maybe you should ask the one who wrote the sentence
[20:04:12] <dav1d> as hrob already said, this is gibberish or a grammar mistake
[20:04:22] *** Joins: mav`rik (~unknown@ec2-54-171-126-99.eu-west-1.compute.amazonaws.com)
[20:04:37] <node1> Build a simple URL shortener service that will accept a URL as an argument over a REST API, and it should be like an API
[20:04:38] <node1> only version of that.
[20:05:05] <nedbat> node1: that means, "build a URL shortener service with a REST API, and don't bother building a UI for it."
[20:05:15] <lucidreamachine> Hey I have some data from an Ethereum Price API. The 'time' returns the dates in 24 hour increments, since crypto is apparently traded 24/7. The timestamp is data I cannot decipher. The first few "dates" returned from the API are the following: https://bpa.st/QJFA. "Googling" returns horrible results.
[20:05:24] <hrob> maybe autotranslated from chinese
[20:05:30] <node1> ` argument over a REST API` means? In general URL shortner take url as argument.
[20:05:35] *** Quits: CaryHartline (~CaryHartl@2603-8080-6a0e-8d88-c9f6-05fd-7a87-ea36.res6.spectrum.com) (Client Quit)
[20:06:16] *** Joins: CaryHartline (~CaryHartl@2603-8080-6a0e-8d88-c9f6-05fd-7a87-ea36.res6.spectrum.com)
[20:06:17] *** Quits: mxp_ (~mxp@185.16.205.131) (Ping timeout: 265 seconds)
[20:06:23] <node1> Now it's clear
[20:06:40] <node1> Thank you nedbat
[20:06:44] <lucidreamachine> There's also nothing in the CryptoCompare documentation about using the date package and how to convert into a legible, 2020-07-25, formart
[20:06:50] *** ATQUE is now known as Atque
[20:06:51] *** Quits: hrob (~hrob@157-157-18-250.ip.simnet.is) (Quit: Client closed)
[20:08:05] <nedbat> lucidreamachine: do you know what those times should represent (roughly)?
[20:08:48] <nedbat> lucidreamachine: could the first one in your paste be April 29th 2016?
[20:08:51] *** Quits: paul424 (~tom@ip-5-172-238-29.multi.internet.cyfrowypolsat.pl) (Quit: GG)
[20:08:57] *** Joins: nomic2 (~nomic@185.198.243.184)
[20:09:16] <lucidreamachine> nedbat: The price is pretty low, so I would imagine a few years back based on the Ethereum chart.
[20:09:38] <nedbat> lucidreamachine: import time; time.gmtime(1461974400.0) --> april 30th 2016
[20:09:43] <lucidreamachine> nedbat: I think you're correct. Any idea how to convert it to a year-month-day format
[20:09:56] <lucidreamachine> nedbat: i love you
[20:10:20] <jamwil> Oh, to have kept that Ether from 2016...
[20:10:59] <nedbat> not a fan of crytocurrencies, but glad to have helped
[20:11:00] <lucidreamachine> jamwil: seriously. who would of known. I would imagine we'll be saying to have kept that Ether from 2021 too.
[20:11:30] *** Quits: nomic (~nomic@185.217.117.49) (Ping timeout: 260 seconds)
[20:11:44] <lucidreamachine> nedbat: why not? I'm interested to know. I have a degree in Finance and like to code, so I'm kind of have to.
[20:12:27] <mav`rik> lucidreamachine: for the format you care about, datetime.datetime.utcfromtimestamp(1461974400.0).isoformat() is probably what you're after (or something close to it - datetime.datetime.utcfromtimestamp(1461974400.0).isoformat(sep=' ') == '2016-04-30 00:00:00')
[20:12:28] <nedbat> lucidreamachine: it seems to be an environmental nightmare and a haven for bad actors
[20:12:28] <jamwil> lucidreamachine: Yep.
[20:13:14] <jamwil> nedbat: 'tis the wild west I'll agree with you there.
[20:13:24] *** Quits: node1 (~Guest1@user/node1) (Quit: Client closed)
[20:13:26] <lucidreamachine> nedbat: I'm a good guy attempting to profit. I understanding what your point, however. Bad actors also use cash for most transactions.The bad guys always find a way.
[20:13:47] <nedbat> lucidreamachine: and the energy cost?
[20:13:50] *** Quits: merijn (~merijn@83-160-49-249.ip.xs4all.nl) (Ping timeout: 260 seconds)
[20:14:23] *** Quits: mickey8 (~user@user/mickey) (Quit: Ping timeout (120 seconds))
[20:14:27] <lucidreamachine> nedbat: I'm not mining, but hope to set up a full node one day. We'll see. I wonder how much those Tesla's eat up every day.
[20:14:51] *** Joins: mickey8 (~user@user/mickey)
[20:14:53] *** Quits: WhyNotHugo (sid269118@hampstead.irccloud.com) ()
[20:15:03] *** Quits: xrogaan (~xrogaan@user/xrogaan) (Quit: Leaving)
[20:15:06] <lucidreamachine> mav'rik: Appreciate it bruddha
[20:15:08] *** Joins: merijn (~merijn@83-160-49-249.ip.xs4all.nl)
[20:15:26] *** Quits: jdmark (~jdmark@097-102-095-007.res.spectrum.com) (Quit: Leaving)
[20:15:43] <mav`rik> lucidreamachine: Since they always look to be dates (86400s apart on midnight UTC) then datetime.datetime.utcfromtimestamp(1461974400.0).date().isoformat() will give you exactly what you asked for I think
[20:15:56] *** Quits: alzgh (~alzgh@user/alzgh) (Remote host closed the connection)
[20:16:04] <SnoopJ> lucidreamachine, as someone with an understanding of finance, you probably also understand that your actions can be indirect incentives for other behaviors. This has put me off the field as well.
[20:16:15] *** Roey is now known as BotMitzvah
[20:16:16] *** Joins: alzgh (~alzgh@user/alzgh)
[20:16:36] *** Quits: CaryHartline (~CaryHartl@2603-8080-6a0e-8d88-c9f6-05fd-7a87-ea36.res6.spectrum.com) (Quit: My iMac has gone to sleep. ZZZzzzâ€¦)
[20:17:05] <SnoopJ> (but perhaps this is #python-offtopic material)
[20:17:15] *** Joins: CaryHartline (~CaryHartl@2603-8080-6a0e-8d88-c9f6-05fd-7a87-ea36.res6.spectrum.com)
[20:18:09] *** Joins: ponyofdeath (~vladi@2606:6000:cfc0:2b:9cf9:caf8:f20d:1053)
[20:18:24] <lucidreamachine> Snoopj:Yikes. I promise I won't do anything too bad. I appreciate the help guys. Let's make a crypto for the good guys.
[20:18:48] * SnoopJ doesn't see a way towards anything like that from present
[20:18:56] <nedbat> i knew i shouldn't have said anything
[20:19:00] <SnoopJ> sorry
[20:19:25] <nedbat> and by that I mean, i would be disappointed in the outcome (not that others would say things too)
[20:20:50] *** Quits: merijn (~merijn@83-160-49-249.ip.xs4all.nl) (Ping timeout: 260 seconds)
[20:21:00] *** dcaro is now known as dcaro_ooo
[20:21:16] *** Joins: merijn (~merijn@83-160-49-249.ip.xs4all.nl)
[20:21:25] *** Quits: KevinX (~KevinX@c-71-200-222-150.hsd1.fl.comcast.net) (Ping timeout: 265 seconds)
[20:21:44] *** Joins: x4rchimedes (~archimed3@88-104-53-45.dynamic.dsl.as9105.com)
[20:21:57] *** Quits: e2m4n (~ezman@user/e2m4n) (Ping timeout: 258 seconds)
[20:22:15] *** Quits: Nact (~l@2a02:2788:11c4:6e6:cebc:f487:efd8:173) (Remote host closed the connection)
[20:22:23] *** Joins: KevinX (~KevinX@94.140.11.217)
[20:22:35] *** Joins: Nact (~l@2a02:2788:11c4:6e6:cebc:f487:efd8:173)
[20:22:59] *** Joins: mxp (~mxp@185.16.205.131)
[20:23:50] *** Joins: elkalamar (elkalamar@gateway/vpn/airvpn/elkalamar)
[20:24:03] <x4rchimedes> say i have an numpy array containing 7 numbers [1, 3, 5, 7, 14, 15, 19], and I have 7 variables named x1, x2... x7, how can I cycle through each of these variables and assign the relevant value from the numpy array to them
[20:24:18] <x4rchimedes> e.g. x1 = 1, x2 = 3, x7 = 19 ?
[20:24:35] <grym> x4rchimedes: x1, x2 = np.array([1,2]); assert x1==1
[20:24:36] <SnoopJ> x4rchimedes, you can do `x1, x2, ..., x7 = iterable`
[20:24:42] *** Quits: flay1 (~flay@user/flay) (Quit: WeeChat 2.3)
[20:24:57] *** Joins: bolnav[m] (~bolnavm]@2001:470:69fc:105::1683)
[20:25:47] *** Quits: mekhami (~ldv@2605:a601:aaf2:ef00:383f:a991:12f0:4f28) (Ping timeout: 258 seconds)
[20:25:59] *** Joins: Vonter (~Vonter@user/vonter)
[20:26:01] *** Quits: SallyAhaj (~SallyAhaj@user/sallyahaj) (Quit: Leaving)
[20:26:22] *** Quits: spetrosi (~spetrosi@2a02:8308:b:ec00:637b:7e28:3899:e5c1) (Quit: Leaving)
[20:26:44] <mav`rik> In pydantic is there something akin to `parse_obj_as` but that works in the same way as `validate_model`, so I can pass it an acceptable pydantic type (like Union[A,B,C]) and get back either an A, B, or C instance (or errors representing the attempt)? validate_model appears to require a sincle model class
[20:28:11] <bolnav[m]> How to do something like `pandas_series.loc[k1:k2] = range(k1, k2 + 1)` ? It raises, but this works instead `series.loc[key] = value`
[20:30:18] *** Joins: fedenix (~fedenix@gateway/tor-sasl/fedenix)
[20:30:45] *** Quits: Vonter (~Vonter@user/vonter) (Ping timeout: 260 seconds)
[20:32:30] *** Quits: merijn (~merijn@83-160-49-249.ip.xs4all.nl) (Ping timeout: 260 seconds)
[20:33:43] *** Joins: merijn (~merijn@83-160-49-249.ip.xs4all.nl)
[20:34:38] *** Quits: yeirr (~yeirr@user/yeirr) (Quit: yeirr)
[20:34:41] *** Quits: chele (~chele@user/chele) (Remote host closed the connection)
[20:35:07] *** Quits: fedenix (~fedenix@gateway/tor-sasl/fedenix) (Remote host closed the connection)
[20:35:47] *** Quits: mrwick (~mrwick@user/mrwick) (Ping timeout: 264 seconds)
[20:35:57] *** Joins: zebrag (~chris@user/zebrag)
[20:36:36] *** Joins: whatsupdoc (~whatsupdo@148.64.18.114)
[20:36:47] <aphysically> I think I need to stop avoiding addressing the pygments typing errors in rich; they look like they could be real bugs, but also it's going to require a bit of a deep dive to make sure they're not typeshed errors
[20:36:53] *** Quits: yaalon (~yaalon@2600:1700:9450:2d30:bd09:78c:fb00:de4) (Remote host closed the connection)
[20:37:14] *** Joins: GreenResponse (~tomek@r-45-155-148-237.gpon.bialnet.pl)
[20:37:20] *** Quits: CaryHartline (~CaryHartl@2603-8080-6a0e-8d88-c9f6-05fd-7a87-ea36.res6.spectrum.com) (Quit: My iMac has gone to sleep. ZZZzzzâ€¦)
[20:37:28] *** Joins: yaalon (~yaalon@2600:1700:9450:2d30:bd09:78c:fb00:de4)
[20:37:34] *** Joins: fedenix (~fedenix@gateway/tor-sasl/fedenix)
[20:37:59] <whatsupdoc> Which is better/faster: for key in dictionary: ____or_____ for for key in dictionary.keys():
[20:38:43] <aphysically> https://bpa.st/NNNQ -> pyright throws the same errors. The last two are Optional because they're marked as such in the typeshed, but the pygments documentation itself doesn't seem to suggest they could be None -> I need to check the pygments code
[20:38:44] *** Joins: ub (~Thunderbi@91.141.37.135.wireless.dyn.drei.com)
[20:39:13] *** Quits: dkdkns (~dkdkns@178.49.152.42) (Quit: Client closed)
[20:39:14] <aphysically> the second one is weird, the pygments documentation suggests it should be returning the same type of object as the last two
[20:39:18] *** Quits: merijn (~merijn@83-160-49-249.ip.xs4all.nl) (Ping timeout: 260 seconds)
[20:39:23] <aphysically> and the first error I haven't looked into yet
[20:39:59] <mav`rik> whatsupdoc: have you considered testing them? However, it's not necessarily about speed, but about expected form, and the first is what most people expect I believe. However, why do you just want the keys?
[20:40:10] *** Joins: merijn (~merijn@83-160-49-249.ip.xs4all.nl)
[20:40:11] <whatsupdoc> Nvm found my answer https://stackoverflow.com/questions/29314269/
[20:40:34] *** Quits: yaalon (~yaalon@2600:1700:9450:2d30:bd09:78c:fb00:de4) (Remote host closed the connection)
[20:40:35] <whatsupdoc> mav`rik you should still vbe able to access the dictionary with key indirectly in either for loop
[20:40:36] <cousteau> whatsupdoc: why not: for (key, value) in dictionary.items():
[20:40:48] <whatsupdoc> cousteau: maybe you just need keys?
[20:41:00] <whatsupdoc> tldr: don't use keys()
[20:41:11] <whatsupdoc> keys() is slower
[20:41:25] <InPhase> list(d.keys()) is sometimes handy though.
[20:41:40] <whatsupdoc> list(d) does the same though?
[20:41:56] *** Joins: yaalon (~yaalon@2600:1700:9450:2d30:bd09:78c:fb00:de4)
[20:42:02] <SnoopJ> .keys() is not particularly expensive
[20:42:04] <InPhase> Fair point.
[20:42:10] <mav`rik> whatsupdoc: the SO link you shared isn't about for loops though, it's about testing whether a _particular_ key exists in a dict
[20:42:29] <whatsupdoc> mav`rik true, but i can extrapolate
[20:42:49] <cousteau> whatsupdoc: note that that StackOverflow post is about checking whether a dict has a key, not about iterating through all keys with a for loop
[20:42:57] *** Parts: bolnav[m] (~bolnavm]@2001:470:69fc:105::1683) ()
[20:43:39] *** Joins: leitz (~LeamHall@cpe-173-172-58-72.tx.res.rr.com)
[20:43:42] *** Quits: mexen (uid495612@user/mexen) (Quit: Connection closed for inactivity)
[20:44:10] <whatsupdoc> meh i'll be lazy and assume it applies to both
[20:44:15] <cousteau> Oops, mav`rik types faster than me
[20:44:36] <bjs> whatsupdoc: you can use .keys() everywhere, but it's more common not to
[20:44:54] <cousteau> Anyway, for key in D is faster because you have to type less :)
[20:45:06] <bjs> in Python 2 it used to matter, but these days it makes no real difference except for clarity
[20:45:17] <cousteau> I would assume that if it's allowed it's because you're supposed to use it
[20:45:20] *** Quits: merijn (~merijn@83-160-49-249.ip.xs4all.nl) (Ping timeout: 260 seconds)
[20:45:48] <cousteau> bjs: how did it matter?  Because it returned a list instead of an iterator or something like that?
[20:45:49] <phy1729> map and lambdas are allowed, but you're supposed to use comprehensions
[20:45:52] <bjs> as a related note, I asked this before but nobody seemed to know: the FAQ documents dict.keys() as being "atomic" https://docs.python.org/3/faq/library.html#what-kinds-of-global-value-mutation-are-thread-safe  but I do not understand
[20:45:53] <bjs> cousteau: yes
[20:46:05] <whatsupdoc> cousteau: tell that to the fact that dictionaries are ordered
[20:46:20] <whatsupdoc> cousteau: and people still stay don't rely on ordering of dictionary itesm
[20:46:22] <bjs> whatsupdoc: i mean that doesn't affect .keys() or not
[20:46:25] <cousteau> phy1729: OK let me rephrase.  If it's allowed AND it looks easier...
[20:46:25] *** Joins: merijn (~merijn@83-160-49-249.ip.xs4all.nl)
[20:46:49] <cousteau> Which is probably why the lambda syntax is so awkward
[20:46:51] *** Joins: dkdkns (~dkdkns@178.49.152.42)
[20:46:51] <bjs> whatsupdoc: well the order is a bit weird because the iteration order is preserved but it's not true to say the dictionary is "ordered"
[20:47:05] <bjs> whatsupdoc: e.g. {"x": 1, "y": 2} == {"y": 2, "x": 1} even though the elements are in a different order
[20:47:08] *** Quits: ubert (~Thunderbi@91.141.37.135.wireless.dyn.drei.com) (Remote host closed the connection)
[20:47:25] <bjs> so they are equal, but iterating them gives different answers!
[20:47:33] <whatsupdoc> phy1729: is filter() also bad? i use that one with lambda functions
[20:47:35] <mav`rik> bjs: "atomic" in that particular case probably means "retains the GIL for the duration of the call"
[20:47:52] <bjs> mav`rik: yes I know that,  but it's not clear what the consequence of that is and why it's documented
[20:48:25] <cousteau> Dicts are "internally ordered, and guaranteed to preserve the order", but do not quite behave ordered structures because of that == thing
[20:48:32] *** Joins: Lando-SpacePimp (~Lando-Spa@user/lando-spacepimp)
[20:48:41] <cousteau> Well, I think that makes sense at least
[20:48:42] <whatsupdoc> technicality
[20:48:49] *** Joins: aztec (~Felipe@2804:2238:781:2500:803a:9090:869c:71ee)
[20:48:49] <bjs> whatsupdoc: technicality?
[20:49:00] <SnoopJ> cousteau, they're only ordered since 3.7
[20:49:15] <cousteau> So late?  I thought that had happened earlier
[20:49:26] <aztec> Hello, when a version with support for win7 will be released?
[20:49:27] <SnoopJ> CPython 3.6 preserves insertion order, but it's an implementation detail.
[20:49:29] <cousteau> ...wair, current python is 3.10 nvm
[20:49:30] *** BotMitzvah is now known as Roey
[20:49:33] <SnoopJ> It was added to the language in 3.7
[20:49:34] <mav`rik> bjs: people concerned they may otherwise need to wrap locks around those functions when doing things with dicts/lists in a multithreaded program?
[20:49:55] <bjs> mav`rik: but .keys() in Python 3 does not do any work so whether the keys call is atomic or not is kind of irrelevant
[20:49:57] <cousteau> aztec: isn't that already EOL'd?
[20:50:06] *** Quits: schumaml (~schumaml@p200300e2ef0b030053c1821a43d17d29.dip0.t-ipconnect.de) (Ping timeout: 245 seconds)
[20:50:08] <mav`rik> SnoopJ: 3.6 added it iirc, 3.7 formalised it as an expected standard
[20:50:18] <bjs> mav`rik: and what exactly it means, it doesn't give you a view of the keys at the time you called .keys or anything
[20:50:19] *** Quits: ub (~Thunderbi@91.141.37.135.wireless.dyn.drei.com) (Ping timeout: 258 seconds)
[20:50:21] <SnoopJ> mav`rik, *CPython* 3.6.
[20:50:28] *** Quits: rpkilby (~rpkilby@c-24-20-208-106.hsd1.or.comcast.net) (Remote host closed the connection)
[20:50:28] <mav`rik> SnoopJ: fair point
[20:50:33] <SnoopJ> mav`rik, i.e. it's a detail of a particular version of a particular implementation.
[20:50:36] <grym> aztec: 3.8 and lower will run on win7
[20:51:03] *** Joins: rpkilby (~rpkilby@ec2-34-252-84-235.eu-west-1.compute.amazonaws.com)
[20:51:06] <SnoopJ> anybody cares about the order should probably still be using OrderedDict until 3.6 falls off the face of the planet :)
[20:51:16] <SnoopJ> (and I imagine that will take a good few years)
[20:51:35] <SnoopJ> or make your software explicitly fail on <3.7
[20:51:42] <whatsupdoc> How do you make mutliple constructors/initializers in Python? I can't do __init__
[20:51:50] <bjs> whatsupdoc: you can rely on the iteration order of a dictionary being in the order things were inserted,  for recent enough versions.  Whether relying on that ordering makes your code fragile or makes you more likely to have unexpected bugs because of the operations that do not respect orderings is a diffferent question
[20:51:50] <whatsupdoc> I can't overload __init__
[20:51:54] *** Quits: merijn (~merijn@83-160-49-249.ip.xs4all.nl) (Ping timeout: 260 seconds)
[20:52:01] <mav`rik> bjs: Maybe it's just a holdover that needs updating to avoid confusion from 2.x? https://docs.python.org/2/faq/library.html#what-kinds-of-global-value-mutation-are-thread-safe
[20:52:06] <aztec> grym - cousteau - only 3.8.10 release from may 2021, no 3.10 release for win7
[20:52:07] <cousteau> SnoopJ: I was just asking about what happens if python defaults to python2 so yeah
[20:52:18] <grym> aztec: right.  https://www.python.org/downloads/windows/ has the deprecation list
[20:52:27] *** Joins: merijn (~merijn@83-160-49-249.ip.xs4all.nl)
[20:52:34] <bjs> whatsupdoc: the simple answer is you cannot,  there is no overloading like that in Python.  However,  Python functions can accept arbitrary arguments (e.g. `def __init__(self, *args)`) so you can have 1 function accept many different sets of arguments
[20:52:36] <SnoopJ> whatsupdoc, you can't "overload" anything, the language doesn't have that feature. Usually you do type checking (manually, written by you) on your args and dispatch to some other method. Defining a @classmethod is also a common pattern.
[20:52:48] <bjs> whatsupdoc: more commonly people just write different functions,  as @classmethod's to be "alternate" constructors
[20:52:49] <SnoopJ> i.e. `Foo.from_bar(...)`
[20:53:01] <cousteau> What do you mean you can't?
[20:53:04] <aztec> grym - i know.
[20:53:11] <cousteau> Er, whatsupdoc
[20:53:12] <whatsupdoc> ok
[20:53:13] <whatsupdoc> thanks
[20:53:33] *** Joins: blackout69 (~blackout6@net-31-156-121-187.cust.vodafonedsl.it)
[20:53:36] <grym> aztec: ok.  you'd asked about it at :19
[20:53:47] *** Quits: x4rchimedes (~archimed3@88-104-53-45.dynamic.dsl.as9105.com) (Ping timeout: 264 seconds)
[20:54:02] <whatsupdoc> bjs: classmethod sounds better than *args
[20:54:03] <cousteau> whatsupdoc: you can make another class inherit from that class, I guess
[20:54:12] *** Quits: dvx (~dvx@185.63.97.64) (Read error: Connection reset by peer)
[20:54:12] <SnoopJ> classmethod is nice, yea
[20:54:14] *** Quits: carl-- (~carl-@c-138ee555.02-180-73746f39.bbcust.telenor.se) (Ping timeout: 260 seconds)
[20:54:22] <SnoopJ> less guessing, more users telling you explicitly what they want
[20:54:23] <aztec> grym - nope, i asked when a version with support for win7 would be released. ;)
[20:54:27] <bjs> whatsupdoc: I think I agree :)
[20:54:40] *** Quits: Lando-SpacePimp (~Lando-Spa@user/lando-spacepimp) (Ping timeout: 252 seconds)
[20:54:40] *** Quits: qlixed (~qlixed@181.44.129.13) (Ping timeout: 260 seconds)
[20:55:12] <grym> aztec: for which version of python
[20:55:17] <cousteau> Oh, I see what you meant.  Yeah, variable argument functions is done with *args (and named with **kwargs)
[20:55:31] <aztec> 3.10
[20:55:32] *** Joins: esro (~esro@2a02:120b:2c3a:4620:7595:4d55:7cbf:b183)
[20:55:33] <grym> aztec: never
[20:55:38] <grym> which is why i linked you that page
[20:56:11] *** Joins: Spawns_Carpeting (~Spawns_Ca@user/spawns-carpeting/x-6969421)
[20:57:25] *** Joins: masta`` (~oyster@user/masta/x-2645138)
[20:57:46] *** Joins: han-solo (~hanish@user/han-solo)
[20:57:54] <cousteau> "Note that Python 3.9.{0,1,2,3...} cannot be used on Windows 7 or earlier."
[20:58:04] *** Joins: Lando-SpacePimp (~Lando-Spa@user/lando-spacepimp)
[20:58:10] *** Quits: merijn (~merijn@83-160-49-249.ip.xs4all.nl) (Ping timeout: 260 seconds)
[20:58:23] <cousteau> You might get a newer Python 3.8.x release with support for Win 7 though
[20:58:31] <grym> yep, 3.8 is as high as you can go
[20:58:50] *** Joins: merijn (~merijn@83-160-49-249.ip.xs4all.nl)
[20:58:57] *** Quits: alzgh (~alzgh@user/alzgh) (Remote host closed the connection)
[20:59:17] *** Joins: alzgh (~alzgh@user/alzgh)
[20:59:23] <cousteau> Latest 3.8 was released less than 2 months ago, is that not new enough?
[20:59:39] <grym> well, it's featureset not security patches, i'd imaging
[20:59:41] <grym> imagine*
[20:59:52] <aphysically> rich/syntax.py:185: error: Incompatible types in assignment (expression has type "_TokenType", variable has type "_TokenType")  [assignment]
[20:59:54] <grym> no version of 3.8 will be new enough if you want match
[20:59:58] <aphysically> :thinking:
[21:00:17] *** Quits: AlanMD (~AlanMD@86.121.179.183) (Ping timeout: 258 seconds)
[21:00:56] <Swayze> windows 10 is not bad (well no worse than win 7 +-)
[21:02:10] <cousteau> Well I remember a ton of incompatibility issues when all the PCs at the lab decided to automatically upgrade to 10
[21:02:22] *** Joins: AlanMD (~AlanMD@193.105.140.131)
[21:02:23] <mav`rik> aphysically: same named type from different modules?
[21:02:50] <aphysically> maybe? trying to figure it out now
[21:02:53] *** Quits: tgamblin (~tgamblin@2607:fea8:c29d:d7c0:fa88:8bc5:c0d2:27cc) (Read error: Connection reset by peer)
[21:02:58] *** Quits: roxfan (roxfan@11.121-64-87.adsl-dyn.isp.belgacom.be) (Remote host closed the connection)
[21:03:12] *** Quits: grooverman (~grooverma@177.95.12.14) (Remote host closed the connection)
[21:03:56] *** Joins: tgamblin (~tgamblin@2607:fea8:c29d:d7c0::60cb)
[21:04:07] *** Quits: merijn (~merijn@83-160-49-249.ip.xs4all.nl) (Ping timeout: 258 seconds)
[21:04:10] *** Joins: grooverman (~grooverma@177.102.119.40)
[21:04:20] *** Quits: de-facto (~de-facto@user/de-facto) (Remote host closed the connection)
[21:04:22] <cousteau> I had a similar error message once when connecting to a gaming server.  "Error: incompatible version; you're using version (very long version number) but the server is using (exactly the same version number)"
[21:04:28] *** Quits: raxor2k (~raxor2k@78.158.254.247) ()
[21:04:46] <cousteau> I spent way too long comparing the version numbers char by char
[21:04:51] <aphysically> maybe there's an optino for mypy to displayt he module stuff is ocming from
[21:04:56] *** Joins: merijn (~merijn@83-160-49-249.ip.xs4all.nl)
[21:04:58] *** Joins: de-facto (~de-facto@user/de-facto)
[21:04:59] <cousteau> "...is it a space?"
[21:05:01] *** Quits: Lartza (lartza@user/lartza) (Quit: Quit)
[21:08:09] <aphysically> I don't see one ;[
[21:09:06] *** Joins: wolfgang (~wolfgang@101.174.167.116)
[21:09:08] <mav`rik> aphysically: is show_error_context enabled in mypy? Likewise maybe increasing verbosity from 0?
[21:09:51] *** Quits: Klinda (~superleag@user/klinda) (Quit: Konversation terminated!)
[21:09:59] *** Joins: jazzy (~jaziz@user/jaziz)
[21:10:06] *** Quits: merijn (~merijn@83-160-49-249.ip.xs4all.nl) (Ping timeout: 260 seconds)
[21:10:21] <aphysically> yeah show error context isn't helpful, I'll try verbosity
[21:10:59] *** Joins: paul424 (~tom@ip-5-172-238-24.multi.internet.cyfrowypolsat.pl)
[21:11:07] *** Joins: merijn (~merijn@83-160-49-249.ip.xs4all.nl)
[21:11:18] *** Quits: Aminda (~sid12355@Feneas/Mikaela) (Remote host closed the connection)
[21:12:10] *** Joins: CaryHartline (~CaryHartl@2603-8080-6a0e-8d88-c9f6-05fd-7a87-ea36.res6.spectrum.com)
[21:12:15] *** Joins: Mikaela (~sid12355@Feneas/Mikaela)
[21:13:25] <pycurious> I want to convert an IP to which country its coming from. Any suggestions what library I should be using for this? (I need roughly 100 per day queries)
[21:13:26] *** Quits: bilb_ono (~alexmarsh@ip184-189-224-55.sb.sd.cox.net) (Quit: bilb_ono)
[21:14:27] <CrtxReavr> By IANA info or by GeoIP info?
[21:14:31] *** Joins: p-i-_ (~Ohmu@223.206.147.206)
[21:14:46] *** Quits: alzgh (~alzgh@user/alzgh) (Remote host closed the connection)
[21:14:57] *** Quits: dkdkns (~dkdkns@178.49.152.42) (Quit: Client closed)
[21:15:05] *** Joins: alzgh (~alzgh@user/alzgh)
[21:15:07] <mav`rik> aphysically: So instead of rich's earlier `TokenType = Tuple[str, ...]` you're now using pygments _TokenType?
[21:15:09] <tdsmith> maxmind is probably the default option and you should fit in their free tier; they have a python package https://geoip2.readthedocs.io/en/latest/
[21:15:20] *** Joins: fannagoganna (uid110488@id-110488.tinside.irccloud.com)
[21:15:40] <aphysically> mav`rik: I was trying that out yeah; rich has several mypy errors that are only hidden because the CI doesn't have the types-pygments package installed
[21:15:58] <aphysically> some of the functions being called aren't in their public API and use the internal _TokenType
[21:16:09] <aphysically> which was causing an error
[21:16:19] *** Joins: Narrat (~omnius@p200300df5f0ec4d206ea56fffe2e7cdc.dip0.t-ipconnect.de)
[21:16:26] *** Joins: Macuser (~Macuser@216.30.159.201)
[21:16:30] <mav`rik> aphysically: if instead you used generic types to guarantee that all the values are of _the same_ type, would that have a better outcome?
[21:16:49] *** Joins: roxfan (roxfan@11.121-64-87.adsl-dyn.isp.belgacom.be)
[21:16:50] *** Quits: merijn (~merijn@83-160-49-249.ip.xs4all.nl) (Ping timeout: 260 seconds)
[21:16:54] *** Quits: _xor (~xor@72.49.199.147) (Read error: Connection reset by peer)
[21:16:57] *** Joins: b_jonas (~x@catv-176-63-3-240.catv.broadband.hu)
[21:17:25] *** Quits: p-i- (~Ohmu@223.206.147.206) (Ping timeout: 260 seconds)
[21:17:31] *** Joins: kurfen (~kurfen@37.120.204.67)
[21:17:34] *** Joins: merijn (~merijn@83-160-49-249.ip.xs4all.nl)
[21:17:56] <rapha> hi all
[21:17:56] *** Joins: analoq (~yashi@user/dies)
[21:18:12] <rapha> i'm looking for a fellow arch user to guide me with regard to jupyter
[21:18:42] <rapha> would like to get it running with my system-python, no anaconda, etc. ... but there's _so_ many packages in the repos having to do with jupyter ... which one is the right one?
[21:19:19] <mav`rik> aphysically: or, I guess, you define a protocol?
[21:19:38] *** Quits: yotsuba (~yotsuba@93-172-241-53.bb.netvision.net.il) (Remote host closed the connection)
[21:19:57] *** Joins: yotsuba (~yotsuba@93-172-241-53.bb.netvision.net.il)
[21:20:37] <whatsupdoc> Why would you want to define a class within a class? is there a term for this?
[21:20:38] *** Joins: Amnesia (~Amnesia@user/amnesia)
[21:20:43] <SnoopJ> rapha, the `jupyter` metapackage is the one you probably want: https://pypi.org/project/jupyter/
[21:20:48] <whatsupdoc> I assume scope?
[21:20:53] <aphysically> hmmm, maybe let me look at it and think about it; I think it's a genuine type error maybe
[21:21:00] <Amnesia> any freelancers here? if so; mind if I pm you, to ask some questions regarding acquisition ?
[21:21:05] *** Joins: _xor (~xor@72.49.199.147)
[21:21:09] <SnoopJ> whatsupdoc, it's a nested class, and there are a few reasons you might want to do it. A class that is responsible for building classes is a relatively common one.
[21:21:25] <SnoopJ> it's not unlike a function defined within a function
[21:21:55] <whatsupdoc> How does it get instantiated?
[21:21:58] <whatsupdoc> Only within that class?
[21:22:12] *** nomic2 is now known as nomic
[21:22:43] *** Quits: luva (~luva@5.180.62.230) (Ping timeout: 252 seconds)
[21:22:44] <aphysically> _TokenType is a sublcass of tuple[str]; rich code is doing tuple() of a _TokenType instance in order to make it immutable I think
[21:23:06] <aphysically> maybe I can fix it by replacing tuple() with copy.copy
[21:23:17] *** Parts: aztec (~Felipe@2804:2238:781:2500:803a:9090:869c:71ee) (Leaving)
[21:23:23] <SnoopJ> whatsupdoc, it gets instantiated if anyone calls the class object to make an instance. This can happen outside of the class if something in the outer class returns the inner class as an object, or if someone accesses it like `BaseClass.InnerClass` if it's defined as a class attribute.
[21:23:29] *** Joins: zer0bitz_ (~zer0bitz@dsl-hkibng31-54fae3-116.dhcp.inet.fi)
[21:23:36] <aphysically> ahah
[21:23:38] <rapha> SnoopJ: i see, so you wouldn't use the distro's package manager at all. lemme try.
[21:23:41] <aphysically> that gives an even more amusing error
[21:23:47] *** Quits: y1n (~y1n@178.115.39.211.wireless.dyn.drei.com) (Ping timeout: 264 seconds)
[21:23:48] <whatsupdoc> abstract class?
[21:23:48] <mav`rik> aphysically: oh?
[21:23:53] *** Joins: luva (~luva@5.180.62.231)
[21:23:58] <aphysically> the same one, but on a more illuminating line
[21:24:00] <aphysically> rich/syntax.py:187: error: Incompatible types in assignment (expression has type "_TokenType", variable has type "_TokenType")  [assignment]
[21:24:09] <whatsupdoc> doesn't apply to a class you instantiate?
[21:24:15] <aphysically> this is line 187: token = token[:-1]
[21:24:30] *** Joins: omegatron (~some@p5484903d.dip0.t-ipconnect.de)
[21:24:35] <SnoopJ> rapha, that's a matter of some contentious debate, but I much prefer to go with Jupyter's packages, personally. You might want to ask #archlinux re: distribution packages
[21:24:40] <SnoopJ> whatsupdoc, I have no idea what your questions are
[21:24:43] <whatsupdoc> Damn this stuff gets complicated. You can write an if-statement with a class declaration? like what the heck
[21:25:04] <mav`rik> aphysically: Oh, ick.
[21:25:55] <aphysically> I'm not completely sure what's going on now; and actually I'd probably need to play with subclassing a tuple to even figure it out
[21:25:55] <SnoopJ> a class definition is "just" executable code, and classes are "just" objects, so you can do most things that go with those two ideas (like passing classes around, only executing a class definition in some branches, etc.)
[21:26:00] *** Joins: Hanii (~textual@2a00:23c5:c587:6d00:1879:cbeb:476f:d1d6)
[21:26:00] <rapha> SnoopJ: i'm happy to use pip. lots of things are not packaged anyways.
[21:26:11] *** Quits: zer0bitz (~zer0bitz@dsl-hkibng31-54fae3-116.dhcp.inet.fi) (Ping timeout: 264 seconds)
[21:26:33] <whatsupdoc> SnoopJ: that's what i'm getting out of this, thanks, kinda weird
[21:26:48] <aphysically> mav`rik: https://github.com/willmcgugan/rich/blob/eb673d1204340738d3084ebc2e4c789a35a4e49b/rich/syntax.py#L184 -> and you can see where it was tuple()'d above this
[21:27:13] <aphysically> token_type is reused later, so I'm fairly certain the tuple() was just a hack to copy.copy it
[21:27:13] *** Joins: zweimer (~zweimer@2a02:908:d20:26e0:79eb:ea87:6f38:cccf)
[21:28:31] <SnoopJ> whatsupdoc, it's definitely different than other languages might do it, but it has its perks too
[21:28:34] <aphysically> but I'm not completely* sure how it works with it being a subclass of tuple so maybe tuple()ing it is really needed and the correct thing to do is to cast token to _TokenType on line 180 which will complain if I leave the code as-is
[21:28:38] *** Quits: fedenix (~fedenix@gateway/tor-sasl/fedenix) (Remote host closed the connection)
[21:28:54] *** Joins: fedenix (~fedenix@gateway/tor-sasl/fedenix)
[21:28:58] <mav`rik> aphysically: 177, token isn't really a token, it's a name (or it should be since otherwise the call in the while to https://github.com/pygments/pygments/blob/cfaa45dcc4103da8cf1700fd0d3e5708d894337b/pygments/styles/__init__.py#L58 would be weird, unless I'm misreading?
[21:29:38] <mav`rik> aphysically: ignore me, I completely misread this :/
[21:29:54] <aphysically> no problem it's a confusing bit of code
[21:30:47] *** Joins: molt (~molt@178-222-245-206.static.isp.telekom.rs)
[21:31:34] <aphysically> it's only a subclass of tuple in the typeshed to be clear
[21:31:41] <aphysically> :D
[21:32:21] <aphysically> oh no, it's really a subclass of tuple
[21:34:01] *** Quits: fikran (~fikran@user/fikran) (Ping timeout: 258 seconds)
[21:34:01] *** Quits: darksun (~darksun@user/darksun) (Read error: Connection reset by peer)
[21:34:16] *** Quits: nomic (~nomic@185.198.243.184) (Quit: Leaving)
[21:34:22] *** Joins: darksun (~darksun@user/darksun)
[21:34:44] <aphysically> I guess I am going to need to try to understand how this TokenType object really works re: subclassing tuple or work around it with the cast() I mentioned
[21:35:02] *** Quits: grooverman (~grooverma@177.102.119.40) (Read error: Connection reset by peer)
[21:35:22] *** Quits: markb1 (~markb1@2600:1700:eb40:7ecf:6cbd:2839:d27a:fdfe) (Read error: Connection reset by peer)
[21:35:24] <aphysically> for what it's worth pyright throws no errors with the copy.copy code
[21:35:48] *** Joins: fikran (~fikran@user/fikran)
[21:36:02] *** Quits: Skyfire (~pyon@user/pyon) (Quit: WeeChat 3.3)
[21:36:14] *** Joins: grooverman (~grooverma@177.95.12.14)
[21:36:45] *** Quits: anonymeowo (~anonymeow@5.34.180.230) (Quit: Konversation terminated!)
[21:36:58] <mav`rik> aphysically: And again, forgive me for the possibly completely wrong question, but I see there's `_TokenType.split()` should iterating over that be used rather than the tuple slicing (or can you not because you have other things that aren't pygments Tokens)?
[21:37:04] *** Joins: anonymeowo (~anonymeow@5.34.180.230)
[21:37:37] <aphysically> I'm looking at it now yeah
[21:38:10] <mav`rik> aphysically: like how they do here - https://github.com/pygments/pygments/blob/cfaa45dcc4103da8cf1700fd0d3e5708d894337b/pygments/style.py#L84
[21:38:31] <aphysically> I'm not the maintainer so I'm learning the code at the same time when trying to address the errors so I have to take a bit to make sure I understand what rich intends to be doing
[21:39:36] *** Joins: mekhami (~ldv@2605:a601:aaf2:ef00:383f:a991:12f0:4f28)
[21:39:57] <aphysically> yeah I don't see why we can't be doing that
[21:40:23] *** Joins: mcon (~Thunderbi@host-79-55-229-90.retail.telecomitalia.it)
[21:42:28] *** Joins: e2m4n (~ezman@user/e2m4n)
[21:43:27] *** Quits: yaalon (~yaalon@2600:1700:9450:2d30:bd09:78c:fb00:de4) ()
[21:43:40] *** Quits: paul424 (~tom@ip-5-172-238-24.multi.internet.cyfrowypolsat.pl) (Ping timeout: 260 seconds)
[21:44:02] *** Joins: ubert (~Thunderbi@91.141.37.135.wireless.dyn.drei.com)
[21:44:30] *** Quits: Gustavo6046 (~Gustavo60@user/gustavo6046) (Remote host closed the connection)
[21:44:34] <Gudddu> What is a better way to write this code?
[21:44:35] <Gudddu> https://dpaste.com/8X9F6TELC
[21:44:38] *** Joins: Gustavo6046_ (~Gustavo60@user/gustavo6046)
[21:45:24] *** Quits: vd (~vd@bras-base-mtrlpq2848w-grc-41-70-53-240-121.dsl.bell.ca) (Quit: Client closed)
[21:45:45] <Togra> I think your "else" and "if not" blocks can be combined?
[21:45:47] *** Joins: vd (~vd@bras-base-mtrlpq2848w-grc-41-70-53-240-121.dsl.bell.ca)
[21:45:51] <Togra> oh wait
[21:45:55] <Togra> no nevermind I didn't look closely enough
[21:46:15] <grym> Gudddu: are those filters lazily executed?
[21:46:24] <sartan> can the filter take multiple 'or' arguments?
[21:46:37] <sartan> what framework is that? it looks like django databases
[21:46:43] <analoq> Togra: why cant they be combined :?
[21:47:07] <Togra> the "else" block possibly turns cinema_complex into something, which means that the "if not" block still needs to check before being run
[21:47:45] *** Quits: merijn (~merijn@83-160-49-249.ip.xs4all.nl) (Ping timeout: 260 seconds)
[21:47:46] <analoq> isnt it guaranteed that it turns it into 'something'?
[21:47:53] *** Gustavo6046_ is now known as Gustavo6046
[21:48:03] <analoq> well i guess not~
[21:48:04] <Togra> dunno, not familiar with the filter method
[21:48:09] <Togra> yeah I'd assume not
[21:48:17] <whatsupdoc> Can anyone explain line 7? https://dpaste.org/xFZX#L7
[21:48:20] <analoq> yeah otherwise the extra if wouldnt make much sense
[21:48:31] *** Joins: linux_dream (~isaac@2a01:e0a:7:60e0:bcc4:b32c:9221:831d)
[21:48:32] <analoq> to many cinemas for my taste :P
[21:48:34] <sartan> next(iter(CinemaComplex.objects.filter(Q(code=excel_complex_name)|Q(code__endswith=excel_complex_name)|Q(code_icontains=excel_complex_name)),None)
[21:48:59] *** Quits: lucad111 (~lucad111@51-148-40-1.dsl.zen.co.uk) (Quit: Leaving)
[21:49:02] <whatsupdoc> Is it creating a new object from a class?
[21:49:12] <sartan> from django.db.models import Q
[21:49:19] <sartan> (assuming it's django, which it appears to be)
[21:49:26] <aphysically> mav`rik: since rich code is only calling pygments internal API at one point, maybe it's better that we cast the rich tuple into a tokentype at the point we call the internal API
[21:49:38] <mav`rik> sartan: CinemaComplex.objects.filter(Q(code=excel_complex_name)|Q(code__endswith=excel_complex_name)|Q(code_icontains=excel_complex_name)).first() (assuming Django 1.6+) also works I think
[21:49:39] *** Joins: rsx (~dummy@ppp-188-174-147-17.dynamic.mnet-online.de)
[21:50:00] <sartan> .first() will return None instead of an error? yeah in that case.. first is good
[21:50:19] <aphysically> I would construct a proper _TokenType object instead but I don't see the correct way to do that
[21:50:43] <mav`rik> sartan: does Q guarantee that the items ordered would come preferentially (so ==, endswith, icontains)?
[21:50:53] <aphysically> maybe I can look in pygments code
[21:50:56] <sartan> yeah i believe so mav`rik
[21:51:56] *** Joins: computeiro (~Wender@189.37.65.130)
[21:52:03] <grym> Gudddu: sudomething like https://bpa.st/CR3A maybe?
[21:52:12] <grym> something*
[21:52:28] *** Quits: esro (~esro@2a02:120b:2c3a:4620:7595:4d55:7cbf:b183) (Quit: My MacBook has gone to sleep. ZZZzzzâ€¦)
[21:53:47] *** Quits: CaryHartline (~CaryHartl@2603-8080-6a0e-8d88-c9f6-05fd-7a87-ea36.res6.spectrum.com) (Quit: My iMac has gone to sleep. ZZZzzzâ€¦)
[21:54:21] <sartan> grym: the best way to do this is use the ORM to do it for us
[21:54:27] <sartan> and walrus is really nice =)
[21:54:42] <grym> sartan: if this is from an ORM, yes, make the query do it
[21:54:52] <grym> otherwise, yeah, this is exactly what walrus is for
[21:54:54] <sartan> it looks like django models
[21:55:32] <grym> db's gonna be faster too, most likely
[21:55:48] <grym> and/or if it isn't, fixing that is easier than speeding up multiple queries
[21:56:00] *** Quits: sgn (~sgn@user/sgn) (Ping timeout: 265 seconds)
[21:56:03] <mav`rik> better than round-tripping up to 3 times, assuming `first` implies a limit
[21:57:12] <mav`rik> looks like django ORM is smart enough to be VERY lazy, so the limit occurs automatically
[21:57:12] <sartan> it does imply a weak schema in the first place if we have to be so defensive on how this index should be used
[21:57:33] <sartan> this is a workaround for a design issue imo
[21:59:05] <sartan> in the case of the Q|Q|Q the lazy evaluation is up to the sql db too
[21:59:25] *** Joins: slav0nic (slav0nic@python.su)
[22:00:22] <mcon> I have a background program (non-python) emitting strings and I need to periodically read and clear output. I think I need to `pr=subprocess.Popen([prog], stdout=subprocess.PIPE, stderr=subprocess.STDOUT)` it, but it's unclear to me how to read `pr.stdout ` without waiting and avoid to read the same data next time.
[22:01:30] <sartan> mcon: this is fairly complex, https://stackoverflow.com/questions/17190221/subprocess-popen-cloning-stdout-and-stderr-both-to-terminal-and-variables
[22:02:04] <sartan> i have a really old recipie i can find that also clones file descriptors using fcntl
[22:03:11] <sleepingforest> is there a way to get the inner most annotation arguments? say x: A[B[C[X, Y]]]
[22:04:20] *** Joins: CaryHartline (~CaryHartl@cpe-76-185-112-162.tx.res.rr.com)
[22:04:42] *** Quits: saroy (~Sandipan@45.249.73.204) (Ping timeout: 265 seconds)
[22:04:52] *** Joins: Midjak (~Midjak@82-65-111-221.subs.proxad.net)
[22:06:39] *** Joins: adiKt (uid472628@id-472628.tinside.irccloud.com)
[22:07:13] <aphysically> mav`rik: the only way I see to access the internal TokenType really is to use https://github.com/python/typeshed/blob/191aac3b0e7f720714510076d78776ae5198d108/stubs/Pygments/pygments/token.pyi#L31 str_to_tokentype
[22:07:42] <aphysically> that is I just replace get_style(token) with get_style(string_to_tokentype(".".join(token)))
[22:08:26] <Gudddu> grym, Thanks. Thats an eye opener.
[22:08:46] <sartan> Gudddu: if this is django, start with the Q| stuff.
[22:08:47] *** Quits: rsx (~dummy@ppp-188-174-147-17.dynamic.mnet-online.de) (Quit: rsx)
[22:08:59] <sartan> if it's not, or your orm doesn't support 'or' syntax, use gryms' approach, it should be a last resort
[22:09:30] <sartan> and finally why is your schema so inconsistent that you need to defend against this? focus a bit on input validation maybe?
[22:09:44] *** Joins: esro (~esro@2a02:120b:2c3a:4620:7595:4d55:7cbf:b183)
[22:10:18] <Gudddu> sartan, Agree. The input is a bit standard. This python script is meant to refine the data and load it in the DB.
[22:10:24] <mcon> sartan: Uhmm... I don't think I need that complexity. I have only one stream (stderr is folded into stdout) and I don't need to split it to multiple outputs. All I need is to be able to `chunk=pr.stdout.read()` with two conditions: it should never block (`chunk` may be empty) and whatever is successfully read should be gone from stream (I assume this should be default behavior)
[22:10:25] <Gudddu> *a bit not standard
[22:11:30] *** Quits: Nact (~l@2a02:2788:11c4:6e6:cebc:f487:efd8:173) (Remote host closed the connection)
[22:11:50] *** Joins: Nact (~l@2a02:2788:11c4:6e6:cebc:f487:efd8:173)
[22:11:55] *** Parts: cousteau (~cousteau@user/cousteau) (Leaving)
[22:11:59] <mcon> sartan: additional requirement, obviously, is no data is lost even for reasonably long (i.e.: ~1MB) outputs between polls.
[22:13:00] <mcon> sartan: I do not need to "react immediately" buffering is desired.
[22:13:34] <Roey> sartan spotted
[22:13:53] <Roey> sartan: heya, so they let you out of ##security once in a while?
[22:14:01] <sartan> I'm around a few places =)
[22:14:03] <Roey> #security, rather
[22:14:04] <Roey> heh :)
[22:14:22] *** Quits: zer0bitz_ (~zer0bitz@dsl-hkibng31-54fae3-116.dhcp.inet.fi) (Read error: Connection reset by peer)
[22:14:37] *** Joins: wender (~Wender@189.41.172.8)
[22:15:25] *** Joins: Akuli (~Akuli@87-94-111-26.bb.dnainternet.fi)
[22:16:19] *** Quits: Milos (~Milos@user/milos) (Quit: ZNC 1.8.2 - https://znc.in)
[22:16:33] *** Joins: Milos (~Milos@user/milos)
[22:17:03] *** Joins: rpkilby_ (~rpkilby@c-24-20-208-106.hsd1.or.comcast.net)
[22:17:20] *** Quits: computeiro (~Wender@189.37.65.130) (Ping timeout: 258 seconds)
[22:18:41] <grym> Gudddu: the pattern there is called "a dispatch dict", and one of the powerful things you can do there is plonk functions in as values
[22:18:41] *** Quits: anonymeowo (~anonymeow@5.34.180.230) (Read error: Connection reset by peer)
[22:18:58] *** Joins: anonymeowo (~anonymeow@5.34.180.230)
[22:19:04] <mav`rik> aphysically: all of the tokens already look to be pygments ones, so split _should_ work. If you replaced the loop with https://bpa.st/RAFQ does it do the right thing?
[22:19:12] <Gudddu> grym, Thanks. That's a nice bit of code.
[22:20:28] *** Quits: rpkilby (~rpkilby@ec2-34-252-84-235.eu-west-1.compute.amazonaws.com) (Ping timeout: 252 seconds)
[22:20:28] *** Quits: Gerula (~Gerula@user/gerula) (Ping timeout: 252 seconds)
[22:21:48] *** Joins: Hexmind (~Hexmind@modemcable049.25-131-66.mc.videotron.ca)
[22:23:34] *** Joins: EgonX_ (~EgonX@2601:2c6:47f:879e:f867:2049:3671:7766)
[22:23:40] *** Joins: grandrew (~grandrew@c-73-71-100-231.hsd1.ca.comcast.net)
[22:26:06] *** Joins: EgonX__ (~EgonX@2601:2c6:47f:879e:49fa:15b7:cc4d:9145)
[22:26:08] *** Quits: EgonX__ (~EgonX@2601:2c6:47f:879e:49fa:15b7:cc4d:9145) (Client Quit)
[22:26:44] *** Joins: parv (~quass@user/parv)
[22:27:17] *** Quits: Milos (~Milos@user/milos) (Quit: ZNC 1.8.2 - https://znc.in)
[22:27:32] *** Joins: Milos (~Milos@user/milos)
[22:27:41] <aphysically> mm I"ll look in a bit I think I'll wait for my other patches to get merged
[22:28:35] *** Quits: EgonX_ (~EgonX@2601:2c6:47f:879e:f867:2049:3671:7766) (Ping timeout: 264 seconds)
[22:29:30] *** Joins: seoul_man (~meh@user/seoul-man/x-5066766)
[22:29:54] *** Joins: reset (~reset@user/reset)
[22:32:22] *** Joins: control (~v1@user/control)
[22:33:13] *** Quits: forgotmynick (uid24625@id-24625.hampstead.irccloud.com) (Quit: Connection closed for inactivity)
[22:33:55] *** Joins: white_magic (~white_mag@91.196.220.164)
[22:35:15] <han-solo> mcon: https://termbin.com/tb9ll # does that help. Stolen from https://www.dabeaz.com/generators-uk/GeneratorsUK.pdf
[22:35:29] <white_magic> Does anyone here use pyenv? I just got it installed on Windows and I'm a bit confused why I don't see the 'real' Python 3.10 available for installation. Instead of seeing '3.10.0' as an option, I see a large number of '3.10.0a*' and '3.10.0b', which stand for alpha and beta versions of Python 3.10. Does pyenv lag behind the real versions of Python
[22:35:30] <white_magic> that have been released?
[22:36:52] *** Quits: clarkk (~clarkk@host31-53-69-254.range31-53.btcentralplus.com) (Quit: Leaving)
[22:36:55] <grym> white_magic: you may need to `pyenv update`
[22:37:03] <grym> white_magic: how this works on windows, i don't know exactly
[22:37:42] *** stormdan_ is now known as StormDancer
[22:37:43] <grym> but my pyenv install -list | grep 3.01  shows 3.10.0 and 3.10-dev
[22:37:50] <white_magic> let me try the update cmd
[22:40:19] *** Quits: gusto (~Augustus@109.255.100.54) (Quit: Textual IRC Client: www.textualapp.com)
[22:42:13] *** Joins: hrob (~hrob@31-209-221-88.dsl.dynamic.simnet.is)
[22:42:24] <white_magic> grym: 'pyenv update' did the trick. I had to run it more than once due to a timeout but it could have been a local network issue. Thanks!
[22:42:33] <grym> white_magic: cheers!1
[22:42:43] <grym> ... remind me to clean my '1' key
[22:43:13] <white_magic> haha, do that if it will help. My keyboard(s) are clean and I can't type correctly to save my life. Except in this message. No mistakes.. here.. I think
[22:43:27] *** Joins: Ilyu (~quassel@166.215.82.79.rev.sfr.net)
[22:44:25] *** Quits: linux_dream (~isaac@2a01:e0a:7:60e0:bcc4:b32c:9221:831d) (Quit: WeeChat 3.3)
[22:44:29] <grym> white_magic: muphry's law
[22:44:54] <Roey> white_magic: from the grand muphry of python himself
[22:45:07] *** Quits: Haxxa (~Haxxa@122.199.46.64) (Quit: Haxxa flies away.)
[22:45:16] *** Joins: anheath (~andyheath@cpe-71-77-6-180.nc.res.rr.com)
[22:45:49] <grym> that should do it
[22:46:22] *** Quits: mozgalom (~mozgalom@194.144.47.113) (Quit: SO LONG SUCKERS!)
[22:46:37] *** Joins: magla (~gelignite@55d45526.access.ecotel.net)
[22:47:23] * aphysically peeks in on the PEP 505 discussion
[22:47:34] <aphysically> new steering council message on the ML too
[22:47:50] *** Quits: Lando-SpacePimp (~Lando-Spa@user/lando-spacepimp) (Ping timeout: 260 seconds)
[22:48:06] *** Joins: Haxxa (~Haxxa@89nnjg0xckz9ggn6r5xm.ip6.superloop.com)
[22:48:11] * Roey looks up PEP 505...
[22:48:42] <Roey> oh.  None-Aware Operators.  Good luck with that!
[22:49:00] *** Quits: CombatVet (~c4@user/combatvet) (Ping timeout: 276 seconds)
[22:51:05] *** Joins: Lando-SpacePimp (~Lando-Spa@user/lando-spacepimp)
[22:51:19] <Yhg1s> ooh, a steering council message...
[22:51:20] *** Joins: qlixed (~qlixed@152.170.36.244)
[22:53:26] *** Joins: SallyAhaj (~SallyAhaj@user/sallyahaj)
[22:53:29] *** Joins: stdout (~stdout@216.163.21.11)
[22:53:33] *** Quits: whatsupdoc (~whatsupdo@148.64.18.114) (Quit: Client closed)
[22:53:41] *** Quits: SallyAhaj (~SallyAhaj@user/sallyahaj) (Remote host closed the connection)
[22:53:55] *** Parts: blackout69 (~blackout6@net-31-156-121-187.cust.vodafonedsl.it) ()
[22:53:57] *** Quits: Pixi (~Pixi@user/pixi) (Quit: Leaving)
[22:54:05] *** Joins: SallyAhaj (~SallyAhaj@user/sallyahaj)
[22:54:38] *** Joins: CombatVet (~c4@user/combatvet)
[22:58:58] *** Quits: Macuser (~Macuser@216.30.159.201) (Quit: Textual IRC Client: www.textualapp.com)
[22:59:07] *** Joins: mosh3k21 (~mosh3k21@213.51-174-78.customer.lyse.net)
[23:00:40] *** Joins: Mattiaslndstrm (~Mattiasln@c213-103-137-235.bredband.tele2.se)
[23:00:44] *** Quits: vd (~vd@bras-base-mtrlpq2848w-grc-41-70-53-240-121.dsl.bell.ca) (Quit: Client closed)
[23:00:56] *** Joins: whatsupdoc (~whatsupdo@148.64.18.114)
[23:01:05] *** Joins: vd (~vd@bras-base-mtrlpq2848w-grc-41-70-53-240-121.dsl.bell.ca)
[23:04:58] *** Quits: cmbengue (~Thunderbi@207.191.249.160) (Remote host closed the connection)
[23:05:16] *** Joins: cmbengue (~Thunderbi@207.191.249.160)
[23:05:55] *** Quits: cedric (~cedric@2a01:cb11:821:7c00:1b9d:4c8d:f219:3247) (Quit: Konversation terminated!)
[23:06:02] *** Joins: Pixi (~Pixi@user/pixi)
[23:09:26] *** Joins: schumaml (~schumaml@dslb-092-074-000-199.092.074.pools.vodafone-ip.de)
[23:11:18] *** Joins: mortn (~Guest39@81-234-122-230-no158.tbcn.telia.com)
[23:12:03] *** Quits: BSaboia (~bsaboia@187.19.138.198) (Quit: This computer has gone to sleep)
[23:12:31] *** Quits: white_magic (~white_mag@91.196.220.164) (Ping timeout: 256 seconds)
[23:12:58] *** Quits: Mattiaslndstrm (~Mattiasln@c213-103-137-235.bredband.tele2.se) (Quit: My MacBook has gone to sleep. ZZZzzzâ€¦)
[23:13:01] *** Joins: BSaboia (~bsaboia@187.19.138.198)
[23:13:17] *** Quits: esro (~esro@2a02:120b:2c3a:4620:7595:4d55:7cbf:b183) (Quit: Textual IRC Client: www.textualapp.com)
[23:13:49] *** Quits: mei (~mei@user/mei) (Ping timeout: 252 seconds)
[23:14:28] *** Joins: yotsuba-chan (~yotsuba@93-172-241-53.bb.netvision.net.il)
[23:15:06] *** Quits: mosh3k21 (~mosh3k21@213.51-174-78.customer.lyse.net) (Changing host)
[23:15:06] *** Joins: mosh3k21 (~mosh3k21@user/mosh3k21)
[23:15:18] *** Joins: Alex123 (~Adium@2603-8000-f640-d482-ad4d-399b-cc09-0575.res6.spectrum.com)
[23:17:00] *** Quits: yotsuba (~yotsuba@93-172-241-53.bb.netvision.net.il) (Ping timeout: 260 seconds)
[23:17:43] *** Joins: Lartza (lartza@user/lartza)
[23:17:50] <aphysically> jinsun: okay that complicated rich function where we added a False is just equivalent to A ?? bool(B) if null aware operators are added
[23:17:55] <aphysically> or A ?? B ?? False I guess
[23:18:22] *** Quits: Ergo^ (~ergo@91.238.59.144) (Remote host closed the connection)
[23:18:24] *** Quits: BSaboia (~bsaboia@187.19.138.198) (Quit: This computer has gone to sleep)
[23:18:53] *** Joins: willow (~willow@bay.systems)
[23:19:15] *** Quits: rpkilby_ (~rpkilby@c-24-20-208-106.hsd1.or.comcast.net) (Remote host closed the connection)
[23:19:43] *** Joins: BSaboia (~bsaboia@187.19.138.198)
[23:19:51] *** Joins: rpkilby (~rpkilby@ec2-34-252-84-235.eu-west-1.compute.amazonaws.com)
[23:20:24] *** Quits: Ilyu (~quassel@166.215.82.79.rev.sfr.net) (Quit: https://quassel-irc.org - Chat comfortably. Anywhere.)
[23:20:59] <jinsun> aphysically: which one? the one with loop that returned first not None or bool(None)?
[23:21:06] <aphysically> yep
[23:21:20] *** Quits: yotsuba-chan (~yotsuba@93-172-241-53.bb.netvision.net.il) (Quit: Leaving)
[23:21:26] <aphysically> it's only ever used with two arguments in the code base, and even if it was used with more it's still just chaining the ?? operator
[23:22:09] <jinsun> if there are arbitrary amount of items then you can't chain ?? right? have to use next
[23:24:01] *** Joins: yotsuba (~yotsuba@93-172-241-53.bb.netvision.net.il)
[23:24:16] <aphysically> I was looking at the PEP chaining is fine
[23:24:20] <jinsun> if you know it is just two items then A ?? bool(B) should be fine yeah
[23:24:56] *** Quits: e2m4n (~ezman@user/e2m4n) (Ping timeout: 265 seconds)
[23:25:03] *** Quits: han-solo (~hanish@user/han-solo) (Quit: leaving)
[23:25:27] *** Quits: DeaDSouL (~DeaDSouL@45.86.201.164) (Quit: leaving)
[23:25:44] *** mortn is now known as hest
[23:26:50] *** Quits: pro_z_ (~pro_z@37.214.46.4) (Ping timeout: 260 seconds)
[23:27:25] *** Joins: mortn__ (~mortn@81-234-122-230-no158.tbcn.telia.com)
[23:27:45] *** Quits: tgamblin (~tgamblin@2607:fea8:c29d:d7c0::60cb) (Quit: Leaving)
[23:31:30] *** Quits: mortn__ (~mortn@81-234-122-230-no158.tbcn.telia.com) (Quit: Leaving)
[23:34:34] *** Joins: nomic (~nomic@185.198.243.184)
[23:34:51] *** Joins: mortn (~mortn@81-234-122-230-no158.tbcn.telia.com)
[23:35:29] *** Quits: zodd (~zodd@84-106-80-107.cable.dynamic.v4.ziggo.nl) (Remote host closed the connection)
[23:36:18] *** Quits: kurfen (~kurfen@37.120.204.67) (Quit: WeeChat 2.3)
[23:36:35] *** Quits: armin (~armin@unix.porn) (Quit: Lost terminal)
[23:38:23] *** Quits: magla (~gelignite@55d45526.access.ecotel.net) (Quit: Stay safe!)
[23:38:26] *** Quits: BSaboia (~bsaboia@187.19.138.198) (Quit: This computer has gone to sleep)
[23:38:44] *** Joins: BSaboia (~bsaboia@187.19.138.198)
[23:39:04] <altendky> other than the obvious option of not using `concurrent.futures`/`multiprocessing` which may still end up the relevant solution either short or long term...  is there a sensible and not too terribly involved way to terminate a `concurrent.futures.ProcessPoolExecutor()`?  we asked it to do something and subsequently decided we would rather quit instead but don't want to wait for the task to finish (60 seconds maybe?) nor leave it floating
[23:39:04] <altendky> around in the background.  i started looking at `ProcessPoolExecutor._processes` which gets -1 for being private on a complicated-threading-related-object and another -1 because the naive `os.kill(pid, signal.SIGINT)` annoys `concurrent.futures` into printing tracebacks.  https://replit.com/@altendky/ZanyFruitfulSystem-2#main.py
[23:39:41] *** Joins: DeaDSouL (~DeaDSouL@45.130.136.155)
[23:40:19] <mcon> han-solo: Sorry for the late answer (dinnertime for me ;) ) Your answer seems to do exactly the opposite of what I need: it loops in the generator until some output is available; i need to leave the output accumulate up to a certain point (possibly becoming quite large, up to megabyte range) and then slurp whatever available, IFF available. Essentially I need to be sure read() buffer is large enough and read() itself is not blocki
[23:40:30] *** Joins: et_ (~et@user/et)
[23:41:15] <altendky> stdin is out, a full on socket ain't simple.  i guess there's the file system.  create a temp file.  worker watches for it to go away and terminates then.  *shrug*
[23:41:16] *** Quits: et (~et@user/et) (Ping timeout: 252 seconds)
[23:41:16] *** et_ is now known as et
[23:42:44] <parv> Could reading from a named pipe be non-blocking?
[23:43:18] *** Quits: fikran (~fikran@user/fikran) (Ping timeout: 265 seconds)
[23:44:54] *** Quits: hest (~Guest39@81-234-122-230-no158.tbcn.telia.com) (Quit: Client closed)
[23:45:05] *** Quits: Barones (~Barones@2804:48dc:8500:0:5635:5e6d:7349:856) (Remote host closed the connection)
[23:45:10] *** Joins: fikran (~fikran@user/fikran)
[23:45:49] *** Quits: control (~v1@user/control) (Quit: leaving)
[23:46:04] *** Joins: fartyfoam (~fartyfoam@178-118-118-2.access.telenet.be)
[23:46:17] *** Mikaela is now known as Aminda
[23:47:03] <parv> Never mind
[23:49:41] *** Quits: anheath (~andyheath@cpe-71-77-6-180.nc.res.rr.com) (Quit: Long days and pleasant nights.)
[23:49:41] *** Joins: LenarHoyt (~LenarHoyt@p4ff75e33.dip0.t-ipconnect.de)
[23:51:34] *** Quits: twobitsprite (~twobitspr@66.115.154.150) (Ping timeout: 260 seconds)
[23:53:05] *** Quits: upsala (~zcb@185.213.155.160) (Quit: WeeChat 3.3)
[23:53:13] *** Joins: twobitsprite (~twobitspr@195.181.171.227)
[23:54:00] *** Joins: Barones (~Barones@2804:48dc:8500:0:5635:5e6d:7349:856)
[23:55:45] *** Joins: de-facto_ (~de-facto@user/de-facto)
[23:59:16] *** Quits: solo (~solo@c-73-219-147-223.hsd1.ct.comcast.net) (Ping timeout: 245 seconds)
[23:59:51] *** Quits: de-facto (~de-facto@user/de-facto) (Ping timeout: 276 seconds)
