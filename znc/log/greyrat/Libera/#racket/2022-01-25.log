[00:26:13] *** Quits: vats (~vats@180.149.226.25) (Ping timeout: 256 seconds)
[00:27:20] *** Joins: johnjaye (~pi@173.209.65.233)
[00:27:20] *** Quits: gproto23 (~gproto23@user/gproto23) (Ping timeout: 250 seconds)
[01:19:15] *** Joins: sonny (~sonny@bras-base-london1483w-grc-28-70-48-35-151.dsl.bell.ca)
[01:19:52] *** Joins: apg (~apg@97-120-110-243.ptld.qwest.net)
[01:26:17] *** Quits: mon_aaraj (~MonAaraj@user/mon-aaraj/x-4416475) (Ping timeout: 256 seconds)
[01:28:08] *** Joins: mon_aaraj (~MonAaraj@user/mon-aaraj/x-4416475)
[01:30:51] *** Joins: Algernon69 (~Algernon6@2a01:e0a:511:6ce0:d9fd:fa02:c3dd:fc1c)
[01:32:09] *** Parts: sonny (~sonny@bras-base-london1483w-grc-28-70-48-35-151.dsl.bell.ca) ()
[01:38:33] *** Joins: FreeFull (~freefull@user-5-173-152-46.play-internet.pl)
[02:12:44] *** Quits: szkl (uid110435@id-110435.uxbridge.irccloud.com) (Quit: Connection closed for inactivity)
[02:29:13] *** mon_aaraj is now known as mon
[02:29:44] *** mon is now known as mon_aaraj
[02:31:50] *** Quits: Algernon69 (~Algernon6@2a01:e0a:511:6ce0:d9fd:fa02:c3dd:fc1c) (Ping timeout: 268 seconds)
[02:53:08] *** Quits: capfredf (~capfredf@c-68-50-14-206.hsd1.in.comcast.net) (Remote host closed the connection)
[02:53:26] *** Joins: capfredf (~capfredf@c-68-50-14-206.hsd1.in.comcast.net)
[03:07:27] *** Quits: capfredf (~capfredf@c-68-50-14-206.hsd1.in.comcast.net) (Remote host closed the connection)
[03:16:17] *** Quits: cwebber (~user@user/cwebber) (Ping timeout: 240 seconds)
[03:24:17] *** Quits: ur5us (~ur5us@2406:e002:6d58:d101:23b2:b738:8a21:f7ed) (Ping timeout: 240 seconds)
[03:54:11] *** Quits: Avichi (~Avichi@2001:980:1b5c:1:8f2a:6c48:c345:6afd) (Ping timeout: 256 seconds)
[04:15:02] *** Quits: notzmv (~zmv@user/notzmv) (Ping timeout: 240 seconds)
[04:29:29] *** Joins: ur5us (~ur5us@2406:e002:6d58:d101:c082:65ff:58b7:9270)
[04:38:52] *** Quits: mon_aaraj (~MonAaraj@user/mon-aaraj/x-4416475) (Ping timeout: 268 seconds)
[04:40:19] *** Joins: mon_aaraj (~MonAaraj@user/mon-aaraj/x-4416475)
[04:50:01] *** Joins: s-liao (~s-liao@101.86.96.21)
[04:58:10] *** Joins: notzmv (~zmv@user/notzmv)
[05:06:09] *** Joins: tonyg3 (~tonyg@81-204-26-33.fixed.kpn.net)
[05:07:42] *** Quits: tonyg (~tonyg@81-204-26-33.fixed.kpn.net) (Ping timeout: 250 seconds)
[05:07:42] *** tonyg3 is now known as tonyg
[05:12:32] *** Quits: FreeFull (~freefull@user-5-173-152-46.play-internet.pl) ()
[05:24:28] <ns12> sonny: Look up "peek-byte" and "peek-char".
[05:32:46] *** Joins: capfredf (~capfredf@c-68-50-14-206.hsd1.in.comcast.net)
[05:36:57] *** Quits: capfredf (~capfredf@c-68-50-14-206.hsd1.in.comcast.net) (Ping timeout: 240 seconds)
[06:07:38] *** Joins: justsomeguy (~justsomeg@user/justsomeguy)
[06:31:20] *** Quits: mon_aaraj (~MonAaraj@user/mon-aaraj/x-4416475) (Ping timeout: 250 seconds)
[06:33:35] *** Joins: mon_aaraj (~MonAaraj@user/mon-aaraj/x-4416475)
[06:48:55] *** Parts: justsomeguy (~justsomeg@user/justsomeguy) (WeeChat 3.3)
[06:52:34] *** Quits: ermo (~ermo@user/ermo) (Read error: Connection reset by peer)
[07:08:06] *** Quits: mon_aaraj (~MonAaraj@user/mon-aaraj/x-4416475) (Ping timeout: 268 seconds)
[07:09:58] *** Joins: mon_aaraj (~MonAaraj@user/mon-aaraj/x-4416475)
[07:11:04] *** Joins: ermo (~ermo@user/ermo)
[07:32:45] *** Quits: ermo (~ermo@user/ermo) (Read error: Connection reset by peer)
[07:32:59] *** Joins: ermo (~ermo@user/ermo)
[07:38:47] *** Quits: mon_aaraj (~MonAaraj@user/mon-aaraj/x-4416475) (Ping timeout: 256 seconds)
[07:40:43] *** Joins: mon_aaraj (~MonAaraj@user/mon-aaraj/x-4416475)
[07:54:00] *** Joins: monkey_ (~user@190.104.116.153)
[08:03:09] *** Quits: codingquark (~quassel@user/codingquark) (Ping timeout: 256 seconds)
[08:04:17] *** Quits: ur5us (~ur5us@2406:e002:6d58:d101:c082:65ff:58b7:9270) (Ping timeout: 240 seconds)
[08:04:24] *** Quits: s-liao (~s-liao@101.86.96.21) (Quit: Client closed)
[08:20:41] *** Joins: cwebber (~user@user/cwebber)
[08:27:49] *** Joins: s-liao (~s-liao@101.86.96.21)
[08:28:53] *** Quits: monkey_ (~user@190.104.116.153) (Remote host closed the connection)
[08:31:39] *** Joins: rekahsoft (~rekahsoft@cpe0008a20f982f-cm64777d666260.cpe.net.cable.rogers.com)
[08:43:39] *** Joins: codingquark (~quassel@user/codingquark)
[09:12:50] *** Joins: capfredf (~capfredf@c-68-50-14-206.hsd1.in.comcast.net)
[09:18:10] *** Quits: capfredf (~capfredf@c-68-50-14-206.hsd1.in.comcast.net) (Ping timeout: 250 seconds)
[09:27:01] *** Quits: johnjaye (~pi@173.209.65.233) (Ping timeout: 256 seconds)
[09:28:59] *** Joins: johnjaye (~pi@173.209.65.233)
[09:39:55] *** Quits: s-liao (~s-liao@101.86.96.21) (Quit: Client closed)
[09:49:37] *** Quits: skapata (~Skapata@user/skapata) (Ping timeout: 240 seconds)
[10:02:24] *** Joins: skapata (~Skapata@user/skapata)
[10:20:57] *** Quits: mon_aaraj (~MonAaraj@user/mon-aaraj/x-4416475) (Ping timeout: 240 seconds)
[10:23:15] *** Joins: mon_aaraj (~MonAaraj@user/mon-aaraj/x-4416475)
[10:40:17] *** Joins: s-liao (~s-liao@101.86.96.21)
[10:59:39] *** Quits: winny (~weechat@user/winny) (Ping timeout: 276 seconds)
[11:00:48] *** Joins: winny (~weechat@user/winny)
[11:01:27] *** Quits: s-liao (~s-liao@101.86.96.21) (Ping timeout: 256 seconds)
[11:03:13] *** Joins: capfredf (~capfredf@c-68-50-14-206.hsd1.in.comcast.net)
[11:07:17] *** Quits: capfredf (~capfredf@c-68-50-14-206.hsd1.in.comcast.net) (Ping timeout: 240 seconds)
[11:30:49] *** Quits: skapata (~Skapata@user/skapata) (Read error: Connection reset by peer)
[11:44:05] *** Joins: s-liao (~s-liao@101.86.96.21)
[11:56:25] *** Joins: ur5us (~ur5us@2406:e002:6d58:d101:23b2:b738:8a21:f7ed)
[12:04:08] *** Quits: johnjaye (~pi@173.209.65.233) (Ping timeout: 250 seconds)
[12:42:20] *** Quits: vraid (~vraid@c188-148-15-182.bredband.tele2.se) (Ping timeout: 268 seconds)
[12:43:31] *** Quits: cynomys (~cynomys@user/cynomys) (Remote host closed the connection)
[12:47:09] *** Joins: Algernon69 (~Algernon6@2a04:cec0:10b2:4cc6:9099:c899:e6dc:2839)
[13:12:12] *** Quits: codingquark (~quassel@user/codingquark) (Read error: Connection reset by peer)
[13:14:13] *** Joins: codingquark (~quassel@user/codingquark)
[13:15:37] *** Joins: szkl (uid110435@id-110435.uxbridge.irccloud.com)
[13:31:17] *** Quits: ur5us (~ur5us@2406:e002:6d58:d101:23b2:b738:8a21:f7ed) (Ping timeout: 240 seconds)
[13:38:33] *** Quits: bremner (~bremner@notmuch/developer/bremner) (Remote host closed the connection)
[13:38:47] *** Joins: bremner (~bremner@notmuch/developer/bremner)
[13:52:01] *** Quits: s-liao (~s-liao@101.86.96.21) (Ping timeout: 256 seconds)
[14:06:33] *** Joins: s-liao (~s-liao@101.86.96.21)
[14:09:04] *** Quits: codingquark (~quassel@user/codingquark) (Read error: Connection reset by peer)
[14:09:17] *** Quits: Algernon69 (~Algernon6@2a04:cec0:10b2:4cc6:9099:c899:e6dc:2839) (Ping timeout: 268 seconds)
[14:09:31] *** Joins: codingquark (~quassel@user/codingquark)
[14:20:55] *** Quits: s-liao (~s-liao@101.86.96.21) (Ping timeout: 256 seconds)
[14:26:55] *** Joins: Avichi (~Avichi@2001:980:1b5c:1:1b25:34ec:9efa:48b5)
[14:40:06] *** Joins: klf (~klf@66.220.205.98)
[14:41:05] <klf> So I just learned about call/cc (and the concept of continuation) here  https://en.wikipedia.org/wiki/Continuation#Examples
[14:43:56] <klf> I have sort of a weird question.  This first-class continuations (as implemented using the call/cc operator in racket) wouldn't be something that's easier implemented/supported in C, would it?
[14:45:44] <klf> You basically need to have a way to capture the state/environment in any particular point (and store it in a struct or something) in order to implement it.
[14:46:04] <klf> s/easier/easy/
[14:48:43] <klf> well..., in the example https://en.wikipedia.org/wiki/Continuation#Examples, the variables (just 'i' in this case) are local.   I guess it's not too hard  to manage.
[15:02:03] <klf> suppose there is a global variable k=10;  Is k=10 recorded and passed as part of the continuation k at the time '(call/cc (lambda (k) (set! the-continuation k)))' is called?
[15:04:47] *** Quits: mon_aaraj (~MonAaraj@user/mon-aaraj/x-4416475) (Ping timeout: 268 seconds)
[15:05:34] *** Joins: mon_aaraj (~MonAaraj@user/mon-aaraj/x-4416475)
[15:06:41] *** Joins: johnjaye (~pi@173.209.65.233)
[15:33:37] *** Quits: johnjaye (~pi@173.209.65.233) (Ping timeout: 240 seconds)
[15:37:38] *** Quits: Vaelatern (~Vaelatern@voidlinux/maintainer/Vaelatern) (Ping timeout: 260 seconds)
[15:41:24] *** Joins: vats (~vats@180.149.226.242)
[15:42:27] *** Joins: Vaelatern (~Vaelatern@cpe-76-183-97-243.tx.res.rr.com)
[15:42:27] *** Quits: Vaelatern (~Vaelatern@cpe-76-183-97-243.tx.res.rr.com) (Changing host)
[15:42:27] *** Joins: Vaelatern (~Vaelatern@voidlinux/maintainer/Vaelatern)
[15:44:16] *** Quits: mon_aaraj (~MonAaraj@user/mon-aaraj/x-4416475) (Ping timeout: 250 seconds)
[15:46:17] *** Joins: mon_aaraj (~MonAaraj@user/mon-aaraj/x-4416475)
[15:51:39] *** Joins: s-liao (~s-liao@101.86.96.21)
[16:05:14] *** Joins: gproto23 (~gproto23@user/gproto23)
[16:12:01] *** Joins: Algernon69 (~Algernon6@2a04:cec0:10b2:4cc6:64f3:cef2:5b2f:1a09)
[16:23:19] *** Quits: s-liao (~s-liao@101.86.96.21) (Ping timeout: 256 seconds)
[16:27:07] *** Joins: s-liao (~s-liao@101.86.96.21)
[16:30:35] *** Joins: capfredf (~capfredf@c-68-50-14-206.hsd1.in.comcast.net)
[16:34:42] <ns12> klf: If you don't get an answer to your question, try asking in #scheme instead. That channel is more active.
[16:34:58] *** Quits: capfredf (~capfredf@c-68-50-14-206.hsd1.in.comcast.net) (Ping timeout: 250 seconds)
[16:38:15] *** Quits: vats (~vats@180.149.226.242) (Ping timeout: 256 seconds)
[16:40:22] *** Quits: Algernon69 (~Algernon6@2a04:cec0:10b2:4cc6:64f3:cef2:5b2f:1a09) (Ping timeout: 268 seconds)
[16:48:49] *** Quits: s-liao (~s-liao@101.86.96.21) (Ping timeout: 256 seconds)
[16:53:20] <klf> ok
[17:00:58] *** Joins: Algernon69 (~Algernon6@2a04:cec0:10b2:4cc6:64f3:cef2:5b2f:1a09)
[17:22:30] <ns12> klf: Plenty of Scheme implementers in that channel too. That's a good place to ask about the implementation of Scheme continuations. Some people might be able to point you to reading resources.
[17:22:40] *** Joins: s-liao (~s-liao@101.86.96.21)
[17:25:36] *** Quits: s-liao (~s-liao@101.86.96.21) (Client Quit)
[17:31:57] *** Quits: mon_aaraj (~MonAaraj@user/mon-aaraj/x-4416475) (Ping timeout: 240 seconds)
[17:34:09] *** Joins: mon_aaraj (~MonAaraj@user/mon-aaraj/x-4416475)
[17:46:50] *** Quits: ec (~ec@gateway/tor-sasl/ec) (Remote host closed the connection)
[17:47:27] *** Joins: ec (~ec@gateway/tor-sasl/ec)
[17:54:37] *** Quits: gproto23 (~gproto23@user/gproto23) (Ping timeout: 240 seconds)
[17:55:38] *** Quits: Algernon69 (~Algernon6@2a04:cec0:10b2:4cc6:64f3:cef2:5b2f:1a09) (Read error: Connection reset by peer)
[17:56:03] *** Joins: Algernon69 (~Algernon6@2a04:cec0:10b2:4cc6:64f3:cef2:5b2f:1a09)
[18:00:28] *** Quits: klf (~klf@66.220.205.98) (Quit: Leaving)
[18:10:36] *** Quits: ec (~ec@gateway/tor-sasl/ec) (Ping timeout: 276 seconds)
[18:11:06] *** Joins: ec (~ec@gateway/tor-sasl/ec)
[18:26:37] *** Quits: cwebber (~user@user/cwebber) (Ping timeout: 240 seconds)
[18:29:44] *** Joins: vraid (~vraid@c188-148-15-182.bredband.tele2.se)
[18:32:52] *** Joins: gproto23 (~gproto23@user/gproto23)
[18:46:03] *** Quits: gproto23 (~gproto23@user/gproto23) (Remote host closed the connection)
[18:46:57] *** Quits: winny (~weechat@user/winny) (Remote host closed the connection)
[18:48:33] *** Joins: gproto23 (~gproto23@user/gproto23)
[18:53:20] *** Joins: winny (~weechat@user/winny)
[19:00:27] *** Quits: Algernon69 (~Algernon6@2a04:cec0:10b2:4cc6:64f3:cef2:5b2f:1a09) (Read error: No route to host)
[19:04:36] *** Joins: Algernon69 (~Algernon6@2a04:cec0:10b2:4cc6:64f3:cef2:5b2f:1a09)
[19:09:45] *** Quits: winny (~weechat@user/winny) (Ping timeout: 276 seconds)
[19:11:13] *** Joins: winny (~weechat@user/winny)
[19:13:39] *** Quits: ec (~ec@gateway/tor-sasl/ec) (Ping timeout: 276 seconds)
[19:19:01] *** Joins: ec (~ec@gateway/tor-sasl/ec)
[19:35:18] *** Quits: szkl (uid110435@id-110435.uxbridge.irccloud.com) (Quit: Connection closed for inactivity)
[19:55:15] *** Quits: ec (~ec@gateway/tor-sasl/ec) (Ping timeout: 276 seconds)
[19:55:45] *** Joins: capfredf (~capfredf@c-68-50-14-206.hsd1.in.comcast.net)
[20:01:41] *** Quits: capfredf (~capfredf@c-68-50-14-206.hsd1.in.comcast.net) (Ping timeout: 256 seconds)
[20:02:57] *** Joins: skapata (~Skapata@2804:14c:87b0:9d2e:fcf8:6040:f413:fda1)
[20:02:57] *** Quits: skapata (~Skapata@2804:14c:87b0:9d2e:fcf8:6040:f413:fda1) (Changing host)
[20:02:57] *** Joins: skapata (~Skapata@user/skapata)
[20:04:43] *** Joins: Algernon91 (~Algernon6@2a04:cec0:10b2:4cc6:1587:3049:52bb:efee)
[20:05:03] *** Quits: Algernon69 (~Algernon6@2a04:cec0:10b2:4cc6:64f3:cef2:5b2f:1a09) (Read error: No route to host)
[20:17:42] *** Quits: mon_aaraj (~MonAaraj@user/mon-aaraj/x-4416475) (Ping timeout: 250 seconds)
[20:24:47] *** Joins: mon_aaraj (~MonAaraj@user/mon-aaraj/x-4416475)
[20:29:32] *** Quits: mon_aaraj (~MonAaraj@user/mon-aaraj/x-4416475) (Ping timeout: 240 seconds)
[20:31:10] *** Joins: mon_aaraj (~MonAaraj@user/mon-aaraj/x-4416475)
[20:33:55] *** Joins: capfredf (~capfredf@c-68-50-14-206.hsd1.in.comcast.net)
[20:34:00] *** Joins: ec (~ec@gateway/tor-sasl/ec)
[20:36:56] *** Quits: Algernon91 (~Algernon6@2a04:cec0:10b2:4cc6:1587:3049:52bb:efee) (Read error: Connection reset by peer)
[20:51:27] *** Quits: capfredf (~capfredf@c-68-50-14-206.hsd1.in.comcast.net) (Remote host closed the connection)
[20:51:59] *** Joins: capfredf (~capfredf@c-68-50-14-206.hsd1.in.comcast.net)
[20:52:57] *** Quits: rekahsoft (~rekahsoft@cpe0008a20f982f-cm64777d666260.cpe.net.cable.rogers.com) (Ping timeout: 240 seconds)
[20:57:47] *** Quits: capfredf (~capfredf@c-68-50-14-206.hsd1.in.comcast.net) (Ping timeout: 256 seconds)
[21:15:27] *** Quits: ermo (~ermo@user/ermo) (Quit: ZNC 1.8.2 - https://znc.in)
[21:18:47] *** Joins: ermo (~ermo@user/ermo)
[21:20:26] *** Joins: countvajhula (~user@2601:643:867e:f90:fdd0:aea9:535d:122b)
[21:23:43] <countvajhula> does anyone have any thoughts on the considerations in using (require "relative/path.rkt") vs (require absolute/path) in library code?
[21:25:59] <countvajhula> that is, in library code we could either use the absolute path to the module that's provided in the same collection, or the relative path since we know that it's in the current directory in a subfolder. Is there any practical difference between using either in this case?
[21:26:11] <countvajhula> just wondering
[21:28:47] <bremner> Well, not much of an answer, but I really only understand the former case
[21:30:25] <countvajhula> for example, in a package that provides the "coolgraph" top level collection (e.g. (require coolgraph))
[21:30:52] <countvajhula> say there are two modules graph.rkt and util.rkt
[21:31:10] <countvajhula> in graph.rkt, we could either say (require "util.rkt") or (require coolgraph/util)
[21:31:24] <countvajhula> i'm wondering whether there's a reason to favor one of these?
[21:34:18] *** Joins: vats (~vats@180.149.226.242)
[21:34:32] <bremner> yeah, I just meant I (still) don't really understand collections
[21:34:49] <countvajhula> and for instance, I think in Sage Gerard's Denxi, the relative path is preferred since it would not guarantee the global collection path (just because you're providing a coolgraph library doesn't mean it will necessarily always be at the path (require coolgraph). I was wondering whether raco might have a preference here and what the reasons for that might be
[21:35:02] <countvajhula> ah okay, yeah no worries!
[21:35:25] <countvajhula> part of the reason I'm asking is I'm writing a blog post about collections in racket
[21:35:43] <countvajhula> specifically in connection with setting up the lib/test/doc structure for libraries
[21:36:24] <countvajhula> and trying to make sure I understand first :)
[21:58:57] *** Joins: Algernon91 (~Algernon6@2a01:e0a:511:6ce0:f190:fe95:722d:f13c)
[21:59:16] *** Joins: szkl (uid110435@id-110435.uxbridge.irccloud.com)
[22:04:32] *** Quits: countvajhula (~user@2601:643:867e:f90:fdd0:aea9:535d:122b) (Ping timeout: 240 seconds)
[22:04:41] <winny> One tradeoff to consider is renaming or forking. If internal library stuff is using the symbol specifier that could cause a bit of effort to adjust
[22:15:13] *** Quits: Algernon91 (~Algernon6@2a01:e0a:511:6ce0:f190:fe95:722d:f13c) (Ping timeout: 268 seconds)
[22:22:07] *** Joins: Algernon91 (~Algernon6@2a01:e0a:511:6ce0:f190:fe95:722d:f13c)
[22:29:25] *** Joins: countvajhula (~user@2601:643:867e:f90:fdd0:aea9:535d:122b)
[22:33:06] *** Quits: Algernon91 (~Algernon6@2a01:e0a:511:6ce0:f190:fe95:722d:f13c) (Ping timeout: 268 seconds)
[22:43:57] *** Quits: countvajhula (~user@2601:643:867e:f90:fdd0:aea9:535d:122b) (Ping timeout: 240 seconds)
[22:48:53] *** Quits: bremner (~bremner@notmuch/developer/bremner) (Quit: Coyote finally caught me)
[22:49:53] *** Joins: bremner (~bremner@notmuch/developer/bremner)
[22:51:34] *** Joins: cwebber (~user@user/cwebber)
[22:56:17] *** Quits: mon_aaraj (~MonAaraj@user/mon-aaraj/x-4416475) (Ping timeout: 240 seconds)
[22:58:31] *** Joins: mon_aaraj (~MonAaraj@user/mon-aaraj/x-4416475)
[23:14:48] *** Joins: countvajhula (~user@2601:643:867e:f90:fdd0:aea9:535d:122b)
[23:17:40] <samth> countvajhula: I would suggest using the relative paths internal to a library, unless it's something using a public API
[23:19:42] *** Quits: countvajhula (~user@2601:643:867e:f90:fdd0:aea9:535d:122b) (Ping timeout: 250 seconds)
[23:21:08] *** Joins: countvajhula (~user@2601:643:867e:f90:fdd0:aea9:535d:122b)
[23:26:13] *** Joins: capfredf (~capfredf@c-68-50-14-206.hsd1.in.comcast.net)
[23:31:50] *** Quits: capfredf (~capfredf@c-68-50-14-206.hsd1.in.comcast.net) (Ping timeout: 250 seconds)
[23:33:27] *** Joins: ur5us (~ur5us@2406:e002:6d58:d101:23b2:b738:8a21:f7ed)
[23:44:57] *** Joins: morte_ (~user@190.104.116.153)
[23:51:28] *** Quits: ur5us (~ur5us@2406:e002:6d58:d101:23b2:b738:8a21:f7ed) (Quit: Leaving)
[23:52:02] *** Quits: mon_aaraj (~MonAaraj@user/mon-aaraj/x-4416475) (Ping timeout: 268 seconds)
[23:53:56] *** Joins: mon_aaraj (~MonAaraj@user/mon-aaraj/x-4416475)
[23:55:44] *** Quits: cwebber (~user@user/cwebber) (Ping timeout: 268 seconds)
[23:56:29] *** Joins: ur5us (~ur5us@2406:e002:6d58:d101:2b70:9bf7:d290:b791)
