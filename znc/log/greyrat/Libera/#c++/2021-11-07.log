[00:02:42] *** Quits: pretty_dumm_guy (trottel@gateway/vpn/protonvpn/prettydummguy/x-88029655) (Ping timeout: 260 seconds)
[00:14:01] *** Joins: magla (~gelignite@55d4f5a2.access.ecotel.net)
[00:16:44] *** Joins: earnestly (~earnest@user/earnestly)
[00:17:10] *** Joins: pretty_dumm_guy (trottel@gateway/vpn/protonvpn/prettydummguy/x-88029655)
[00:22:44] *** Quits: Enitin (~Enitin@82.102.22.86) (Ping timeout: 268 seconds)
[00:30:22] *** Joins: Enitin (~Enitin@82.102.22.85)
[00:31:28] <CarloWood> Using C++20, how do I write a concept to test if A<T> exist?
[00:31:55] <CarloWood> template<typename T> concept ConceptHasAT = ..somethingwith A<T>..
[00:33:26] <CarloWood> template<typename T> concept ConceptHasAT = requires A<T>;
[00:33:27] <CarloWood> ?
[00:34:39] *** Quits: ___nick___ (~quassel@cpc68286-cdif17-2-0-cust533.5-1.cable.virginm.net) (Ping timeout: 256 seconds)
[00:35:10] <CarloWood> Sigh, I guess that hardly makes sense :?
[00:36:06] <traxex> so it's a concept for T, and A is fixed? what is A?
[00:37:16] <CarloWood> It is for vulkan, I want a concept for vulkan handles. Those are rather random types though. They are based on opaque C types, for example:
[00:37:52] <CarloWood> class DeviceMemory { public: using CType      = VkDeviceMemory; ...
[00:38:10] *** Quits: pretty_dumm_guy (trottel@gateway/vpn/protonvpn/prettydummguy/x-88029655) (Ping timeout: 260 seconds)
[00:38:13] <CarloWood> where VkDeviceMemory is defined as:  struct VkDeviceMemory_T*
[00:38:25] <CarloWood> (and struct VkDeviceMemory_T doesn't even exist).
[00:38:37] <CarloWood> However, for each handle they define:
[00:39:05] <CarloWood> using UniqueDeviceMemory = UniqueHandle<DeviceMemory, VULKAN_HPP_DEFAULT_DISPATCHER_TYPE>;
[00:39:08] *** Joins: elkalamar (elkalamar@gateway/vpn/airvpn/elkalamar)
[00:39:36] <CarloWood> So, I thought to be smart and test if UniqueHandle<T, VULKAN_HPP_DEFAULT_DISPATCHER_TYPE> exists, then T is a handle.
[00:40:01] <CarloWood> But I don't think I can test it like that... "exists" should be "has a type defined".
[00:40:21] *** Joins: pretty_dumm_guy (trottel@gateway/vpn/protonvpn/prettydummguy/x-88029655)
[00:40:24] <CarloWood> But all you can test is if UniqueHandle<T> instantiates, and I guess it might do that for non-handles too.
[00:41:01] <traxex> does this type have a default constructor? could you use something like (..., true) as an expression where ... uses T to do something?
[00:41:04] <traxex> just guessing
[00:41:15] <traxex> not familiar with vulkan at all
[00:41:38] <CarloWood> I can't think of anything
[00:42:01] <CarloWood> I think the only sure way would be to exhaustively overload some template with all existing handles.
[00:42:17] <traxex> just (A<T>(), true) if A<T> has a default constructor for example
[00:43:49] *** Quits: darkstardevx (~darkstard@50.39.114.152) (Read error: Connection reset by peer)
[00:43:55] *** Joins: EdFletcher (~ubuntu@user/edfletcher)
[00:44:26] *** Joins: smallville7123 (~smallvill@cpe-172-193-72-46.qld.foxtel.net.au)
[00:45:15] <CarloWood> HA! I found it :)
[00:45:22] <CarloWood> It already exist:
[00:45:24] <CarloWood> /usr/include/vulkan/vulkan_handles.hpp:4930:  struct isVulkanHandleType<VULKAN_HPP_NAMESPACE::DeviceMemory>
[00:45:39] <traxex> nice :)
[00:47:59] <LiaoTao> CarloWood, What are you doing that requires this exactly? Is there some operation common to vulkan handles?
[00:48:10] <LiaoTao> Just out of curiosity
[00:48:31] <CarloWood> Good question... I'm guessing here namely.
[00:48:42] <CarloWood> I think those are the only ones that you can set a debug name for.
[00:49:12] <LiaoTao> Aha
[00:49:14] *** Quits: smallville7123 (~smallvill@cpe-172-193-72-46.qld.foxtel.net.au) (Read error: Connection reset by peer)
[00:49:41] <CarloWood> I wrote some stuff to ease setting debug names (for the validation layers) and want to add an overload for UniqueHandle vs Handle.
[00:49:49] <RandomReader> for the original scenario, since it's a template, all possible specializations "exist"
[00:50:07] <RandomReader> so you'd want to test something else entirely
[00:50:20] <CarloWood> RandomReader: yes I realized that here: <CarloWood> Sigh, I guess that hardly makes sense
[00:51:23] *** Quits: Enitin (~Enitin@82.102.22.85) (Ping timeout: 264 seconds)
[00:51:41] *** Joins: Enitin (Enitin@gateway/vpn/protonvpn/enitin)
[00:52:32] *** Joins: darkstardevx (~darkstard@50.39.114.152)
[00:52:55] <RandomReader> ah
[00:53:28] *** Quits: darkstardevx (~darkstard@50.39.114.152) (Remote host closed the connection)
[00:53:55] *** Joins: darkstardevx (~darkstard@50.39.114.152)
[00:54:53] *** Quits: LiaoTao (~LiaoTao@gateway/tor-sasl/liaotao) (Remote host closed the connection)
[00:55:14] *** Joins: LiaoTao (~LiaoTao@gateway/tor-sasl/liaotao)
[00:55:38] *** Joins: ARoxdale (~ARoxdale@109.78.38.164)
[01:00:49] *** Quits: SorinK (~SK@79.117.201.205) (Remote host closed the connection)
[01:01:01] *** Quits: rendar (~rendar@user/rendar) (Quit: Leaving)
[01:02:13] *** Quits: froggy (~froggy@2.235.241.212) (Read error: Connection reset by peer)
[01:02:25] *** Joins: froggy (~froggy@2.235.241.212)
[01:04:02] <CarloWood> Ok, so I have ConceptVulkanHandle now.
[01:05:20] <CarloWood> Now I want a concept that tests that T is of the form vk::UniqueHandle<H, VULKAN_HPP_DEFAULT_DISPATCHER_TYPE> where H is a ConceptVulkanHandle
[01:05:26] <CarloWood> How would I do that?
[01:07:22] *** Joins: zmt01 (~zmt00@user/zmt00)
[01:07:51] *** Quits: Linux77 (~7Linux7@2804:d45:8c02:b300:76d0:2bff:fe7a:f3a4) (Remote host closed the connection)
[01:08:01] *** Quits: zmt00 (~zmt00@user/zmt00) (Ping timeout: 245 seconds)
[01:08:05] *** Joins: Linux77 (~7Linux7@2804:d45:8c02:b300:76d0:2bff:fe7a:f3a4)
[01:08:47] *** Quits: triad (~triad@user/triad) (Ping timeout: 264 seconds)
[01:09:50] *** Quits: Linux77 (~7Linux7@2804:d45:8c02:b300:76d0:2bff:fe7a:f3a4) (Remote host closed the connection)
[01:10:03] *** Joins: Linux77 (~7Linux7@2804:d45:8c02:b300:76d0:2bff:fe7a:f3a4)
[01:10:55] *** Quits: sedeki (~textual@user/sedeki) (Quit: Textual IRC Client: www.textualapp.com)
[01:13:35] *** Quits: zmt01 (~zmt00@user/zmt00) (Ping timeout: 264 seconds)
[01:17:26] *** Joins: varioust (~varioust@cpe-108-167-11-88.neb.res.rr.com)
[01:18:17] *** Joins: elkalamar_ (elkalamar@gateway/vpn/airvpn/elkalamar)
[01:21:07] *** Quits: elkalamar (elkalamar@gateway/vpn/airvpn/elkalamar) (Ping timeout: 256 seconds)
[01:24:39] *** Joins: Yruama (~Yruama@2a01:cb15:8139:9400:8634:97ff:fe6e:86ac)
[01:25:12] *** Quits: sa02irc (~mbax@155-079-043-212.ip-addr.inexio.net) (Remote host closed the connection)
[01:30:26] *** Quits: elkalamar_ (elkalamar@gateway/vpn/airvpn/elkalamar) (Ping timeout: 260 seconds)
[01:30:29] *** Joins: Viewday5 (~Viewday@user/viewday)
[01:32:27] *** Quits: Viewday (~Viewday@user/viewday) (Ping timeout: 256 seconds)
[01:32:27] *** Viewday5 is now known as Viewday
[01:34:30] *** Quits: robod34 (Username@79.113.195.239) (Quit: Goe offline! ( http://marius.sucan.ro/ ))
[01:35:29] *** Joins: JakeSays_ (~jake@c-67-182-197-230.hsd1.ut.comcast.net)
[01:35:54] *** Quits: qwedfg (~qwedfg@user/qwedfg) (Remote host closed the connection)
[01:36:40] *** Quits: JakeSays (~jake@c-67-182-197-230.hsd1.ut.comcast.net) (Ping timeout: 260 seconds)
[01:36:56] *** Joins: sa02irc (~mbax@155-079-043-212.ip-addr.inexio.net)
[01:37:40] *** Quits: npaperbot (~npaperbot@dodecahedron.m-ou.se) (Remote host closed the connection)
[01:37:48] *** Joins: npaperbot (~npaperbot@dodecahedron.m-ou.se)
[01:37:48] *** ChanServ sets mode: +v npaperbot
[01:39:03] *** Joins: qwedfg (~qwedfg@user/qwedfg)
[01:40:23] *** Quits: AmR (~AmREiSa@156.199.218.104) (Ping timeout: 256 seconds)
[01:40:41] *** Quits: EdFletcher (~ubuntu@user/edfletcher) (Quit: leaving)
[01:41:16] *** Joins: zmt00 (~zmt00@user/zmt00)
[01:41:59] <CarloWood> ugh, still stuck
[01:42:17] *** Parts: earnestly (~earnest@user/earnestly) (WeeChat 3.3)
[01:42:25] <CarloWood> how the hell can I write a concept that checks if T is of the form A<H>?
[01:50:28] *** Quits: bluap (~bluap@cpc156931-stav19-2-0-cust147.17-3.cable.virginm.net) (Quit: bluap)
[01:56:31] *** Joins: CaCode (~CaCode@user/cacode)
[01:56:40] <m_ben> CarloWood: write a type trait
[01:57:56] *** Quits: sa02irc (~mbax@155-079-043-212.ip-addr.inexio.net) (Remote host closed the connection)
[01:58:13] *** Quits: m_ben (~m_ben@user/m-ben/x-7429725) (Quit: WeeChat 3.3)
[01:59:34] *** Joins: EdFletcher (~ubuntu@user/edfletcher)
[02:01:07] *** Joins: Fault (~Fault@152.70.112.168)
[02:03:45] *** Joins: emerent_ (~quassel@p200300cd5748552fba27ebfffed28a59.dip0.t-ipconnect.de)
[02:03:45] *** Quits: emerent (~quassel@p200300cd5748556aba27ebfffed28a59.dip0.t-ipconnect.de) (Killed (calcium.libera.chat (Nickname regained by services)))
[02:03:46] *** emerent_ is now known as emerent
[02:06:40] *** JakeSays_ is now known as JakeSays
[02:06:46] *** Quits: Ronalds_Mazitis_ (~Ronalds_M@46.109.76.104) (Quit: Connection closed)
[02:08:40] *** Quits: varioust (~varioust@cpe-108-167-11-88.neb.res.rr.com) (Quit: varioust)
[02:11:06] *** Joins: lkor (~lionkor@beammp/staff/lionkor)
[02:11:26] *** Quits: lionkor (~lionkor@beammp/staff/lionkor) (Ping timeout: 260 seconds)
[02:12:05] *** Joins: varioust (~varioust@cpe-108-167-11-88.neb.res.rr.com)
[02:19:50] *** Joins: rgrinberg (~textual@190.113.102.153)
[02:21:30] <CarloWood> It costed me my sanity (I type this while being taken away in a straight jacket), but I got something working at last: https://wandbox.org/permlink/GLFynlE4B0Hv6PGB
[02:22:56] *** Quits: Serpent7776 (~Serpent77@90-156-31-193.internetia.net.pl) (Quit: leaving)
[02:24:39] *** Quits: Fault (~Fault@152.70.112.168) (Remote host closed the connection)
[02:25:25] *** Joins: Fault (~Fault@152.70.112.168)
[02:29:20] *** Quits: LucaTM (~LucaTM@user/lucatm) (Quit: Textual IRC Client: www.textualapp.com)
[02:33:33] *** Quits: Fault (~Fault@152.70.112.168) (Remote host closed the connection)
[02:33:39] *** Quits: pizdets_ (~pizdets@183.182.110.19) (Ping timeout: 256 seconds)
[02:33:45] *** Joins: pizdets (~pizdets@183.182.111.35)
[02:39:25] *** Quits: vvdaiwrw (~rvgzuuqp@gateway/tor-sasl/rvgzuuqp) (Ping timeout: 276 seconds)
[02:41:38] *** Quits: Inline (~Inline@2a02:908:1252:7a80:da94:668f:b78c:97b1) (Remote host closed the connection)
[02:41:56] *** Joins: Inline (~Inline@2a02:908:1252:7a80:d6e1:9cdb:c2c:75e6)
[02:42:49] *** Quits: rgrinberg (~textual@190.113.102.153) (Quit: My MacBook has gone to sleep. ZZZzzz…)
[02:45:00] *** Quits: GreenResponse (~tomek@r-45-155-148-237.gpon.bialnet.pl) (Quit: Leaving)
[02:47:45] *** Joins: Fault (~Fault@152.70.112.168)
[02:48:56] *** Quits: Brewster (~Brewster@185.145.156.241) (Remote host closed the connection)
[02:49:27] *** Quits: Tobbi (~Tobbi@2a02:8108:1240:48ec:58e:15a4:a761:e873) (Quit: My MacBook has gone to sleep. ZZZzzz…)
[02:51:45] *** Joins: vvdaiwrw (~rvgzuuqp@gateway/tor-sasl/rvgzuuqp)
[02:52:22] *** Quits: LunarJetman (~LunarJetm@user/zogatribe) (Read error: Connection reset by peer)
[02:53:02] *** Quits: ac_slater (~ac_slater@c-73-221-75-91.hsd1.wa.comcast.net) (Ping timeout: 260 seconds)
[02:53:03] *** Joins: LunarJetman (~LunarJetm@user/zogatribe)
[02:54:02] *** Quits: ashafq (~ashafq@pool-96-237-238-252.bstnma.fios.verizon.net) (Remote host closed the connection)
[02:54:08] *** Quits: lkor (~lionkor@beammp/staff/lionkor) (Ping timeout: 260 seconds)
[02:56:46] *** Joins: zmt01 (~zmt00@user/zmt00)
[02:58:27] *** Quits: varioust (~varioust@cpe-108-167-11-88.neb.res.rr.com) (Quit: varioust)
[02:58:54] *** Quits: zmt01 (~zmt00@user/zmt00) (Client Quit)
[02:59:13] *** Joins: zmt01 (~zmt00@user/zmt00)
[02:59:41] *** Quits: zmt00 (~zmt00@user/zmt00) (Ping timeout: 245 seconds)
[03:01:22] *** Joins: Brewster (~Brewster@185.145.156.241)
[03:01:48] *** Quits: Brewster (~Brewster@185.145.156.241) (Changing host)
[03:01:48] *** Joins: Brewster (~Brewster@user/brewster)
[03:04:51] *** Joins: rgrinberg (~textual@190.113.102.153)
[03:05:27] *** Joins: darkstarx (~darkstard@185.226.144.76)
[03:07:21] *** Quits: forgotmynick (uid24625@id-24625.hampstead.irccloud.com) (Quit: Connection closed for inactivity)
[03:07:58] *** Quits: darkstardevx (~darkstard@50.39.114.152) (Ping timeout: 260 seconds)
[03:10:29] *** Joins: darkstardev13 (~darkstard@176.113.72.221)
[03:13:02] *** Quits: darkstarx (~darkstard@185.226.144.76) (Ping timeout: 260 seconds)
[03:17:18] *** Joins: vdamewood (~vdamewood@fedora/vdamewood)
[03:18:27] *** Joins: darkstarx (~darkstard@50.39.114.152)
[03:19:19] *** Quits: Fault (~Fault@152.70.112.168) (Remote host closed the connection)
[03:20:56] *** Quits: darkstardev13 (~darkstard@176.113.72.221) (Ping timeout: 245 seconds)
[03:22:23] *** Quits: froggy (~froggy@2.235.241.212) (Ping timeout: 256 seconds)
[03:26:02] *** Joins: jess (~jess@libera/staff/jess)
[03:30:06] *** Joins: Fault (~Fault@152.70.112.168)
[03:30:19] *** Quits: LunarJetman (~LunarJetm@user/zogatribe) (Ping timeout: 256 seconds)
[03:30:29] *** Quits: RoKenn (~RoKenn@user/rokenn) (Quit: NSA proxy service interrupted)
[03:31:37] *** Quits: Brewster (~Brewster@user/brewster) (Remote host closed the connection)
[03:35:01] *** Quits: riksteri (riksteri@gateway/vpn/airvpn/riksteri) (Quit: riksteri)
[03:35:38] *** Quits: Fault (~Fault@152.70.112.168) (Quit: Quit.)
[03:38:31] *** Joins: Fault (~Fault@152.70.112.168)
[03:38:38] *** Joins: Brewster (~Brewster@185.145.156.241)
[03:38:39] *** Joins: wasd (~wasd@user/axis)
[03:40:02] *** Joins: darkstardev13 (~darkstard@89.47.234.174)
[03:40:04] *** Quits: Fault (~Fault@152.70.112.168) (Client Quit)
[03:40:12] *** Joins: LunarJetman (~LunarJetm@user/zogatribe)
[03:41:58] *** Quits: geeknix (~pi@2001:e68:5432:c96:3ce2:cddf:6be2:8763) (Ping timeout: 260 seconds)
[03:42:26] *** Quits: darkstarx (~darkstard@50.39.114.152) (Ping timeout: 260 seconds)
[03:44:17] *** Joins: Fault (~Fault@152.70.112.168)
[03:47:13] *** Quits: LiaoTao (~LiaoTao@gateway/tor-sasl/liaotao) (Remote host closed the connection)
[03:47:29] *** Joins: LiaoTao (~LiaoTao@gateway/tor-sasl/liaotao)
[03:49:04] *** Quits: vdamewood (~vdamewood@fedora/vdamewood) (Quit: My MacBook Pro has gone to sleep. ZZZzzz…)
[03:54:59] *** Quits: Brewster (~Brewster@185.145.156.241) (Remote host closed the connection)
[03:55:09] *** Joins: geeknix (~pi@2001:e68:5432:ee80:f8c7:29cb:a70c:cc82)
[03:57:54] *** Joins: Brewster (~Brewster@185.145.156.241)
[03:57:54] *** Quits: Brewster (~Brewster@185.145.156.241) (Changing host)
[03:57:54] *** Joins: Brewster (~Brewster@user/brewster)
[04:01:44] *** Quits: magla (~gelignite@55d4f5a2.access.ecotel.net) (Quit: Stay safe!)
[04:03:38] *** Quits: Fault (~Fault@152.70.112.168) (Quit: Quit.)
[04:04:42] *** Joins: Fault (~Fault@152.70.112.168)
[04:05:11] *** Quits: rgrinberg (~textual@190.113.102.153) (Quit: My MacBook has gone to sleep. ZZZzzz…)
[04:06:25] *** Joins: gargus (~user@203.220.68.182)
[04:07:06] *** Joins: Inst (~Inst@2601:6c4:4080:3f80:40a:9f91:8f3e:4f02)
[04:07:08] <Inst> hi
[04:07:09] <Inst> curious
[04:07:27] <Inst> i'm running a mixed C and C++ program right now, I'm wondering if it's possible to move header files to a main file?
[04:09:28] *** Joins: rgrinberg (~textual@190.113.102.153)
[04:09:36] *** Quits: Atque_ (~Atque@user/atque) (Remote host closed the connection)
[04:12:34] *** Joins: Atque (~Atque@user/atque)
[04:13:50] *** Joins: dld (~dld@98.217.187.57)
[04:14:57] *** Quits: LunarJetman (~LunarJetm@user/zogatribe) (Read error: Connection reset by peer)
[04:17:11] *** Quits: slidercrank (~slidercra@user/slidercrank) (Ping timeout: 245 seconds)
[04:17:15] *** Quits: ferdna (~ferdna@user/ferdna) (Quit: Leaving)
[04:24:22] *** Quits: lionheart (~lionheart@user/lionheart) (Quit: My MacBook has gone to sleep. ZZZzzz…)
[04:26:33] *** Quits: ARoxdale (~ARoxdale@109.78.38.164) (Remote host closed the connection)
[04:30:36] *** Quits: pretty_dumm_guy (trottel@gateway/vpn/protonvpn/prettydummguy/x-88029655) (Quit: WeeChat 3.3)
[04:32:36] *** Quits: proller (~p@80.240.216.69) (Ping timeout: 245 seconds)
[04:33:42] *** Joins: Guest7775 (~Guest77@024-180-135-094.res.spectrum.com)
[04:35:18] *** Quits: AbleBacon (~AbleBacon@user/AbleBacon) (Read error: Connection reset by peer)
[04:35:36] *** Quits: Guest7775 (~Guest77@024-180-135-094.res.spectrum.com) (Client Quit)
[04:36:03] *** Joins: ARoxdale (~ARoxdale@109.78.38.164)
[04:37:14] *** Quits: rgrinberg (~textual@190.113.102.153) (Read error: Connection reset by peer)
[04:38:24] *** Joins: rgrinberg (~textual@190.113.102.153)
[04:45:54] *** Quits: mad_enz (~mad_enz@cpe00508b114c3e-cm788df7e75290.cpe.net.fido.ca) (Ping timeout: 260 seconds)
[04:46:16] *** Joins: proller (~p@2002:50f0:d845:10:4a51:b7ff:fe43:6e30)
[04:49:32] *** Quits: wootehfoot (~wootehfoo@user/wootehfoot) (Quit: Leaving)
[04:52:36] *** Quits: Burgundy (~yomon@86.127.194.72) (Ping timeout: 245 seconds)
[04:55:53] *** Joins: elkalamar (elkalamar@gateway/vpn/airvpn/elkalamar)
[04:56:16] *** Joins: froggy (~froggy@2.235.241.212)
[04:57:25] *** Joins: mad_enz (~mad_enz@2605:8d80:6a0:15d6:7c33:c2b1:86ec:ff1d)
[05:00:27] *** Joins: Carbonflux (~Carbonflu@c-66-235-54-179.sea.wa.customer.broadstripe.net)
[05:02:02] *** Joins: elkalamar_ (elkalamar@gateway/vpn/airvpn/elkalamar)
[05:02:18] *** Quits: elkalamar (elkalamar@gateway/vpn/airvpn/elkalamar) (Ping timeout: 260 seconds)
[05:02:54] *** Quits: froggy (~froggy@2.235.241.212) (Quit: ZNC 1.8.2 - https://znc.in)
[05:03:08] *** Joins: froggy (~froggy@2.235.241.212)
[05:04:26] *** Quits: ARoxdale (~ARoxdale@109.78.38.164) (Remote host closed the connection)
[05:06:06] *** Joins: ARoxdale (~ARoxdale@109.78.38.164)
[05:11:06] *** Quits: PJBoy (~PJBoy@user/pjboy) (Ping timeout: 260 seconds)
[05:11:38] *** Quits: froggy (~froggy@2.235.241.212) (Ping timeout: 260 seconds)
[05:11:58] *** Quits: ARoxdale (~ARoxdale@109.78.38.164) (Remote host closed the connection)
[05:18:01] *** Quits: mad_enz (~mad_enz@2605:8d80:6a0:15d6:7c33:c2b1:86ec:ff1d) (Ping timeout: 245 seconds)
[05:18:48] *** Joins: ac_slater (~ac_slater@c-73-221-67-64.hsd1.wa.comcast.net)
[05:18:55] *** Joins: froggy (~froggy@2.235.241.212)
[05:19:23] *** Quits: N4buc0 (~N4buc0@186.212.203.26) (Remote host closed the connection)
[05:22:13] *** Quits: froggy (~froggy@2.235.241.212) (Client Quit)
[05:22:33] *** Joins: froggy (~froggy@2.235.241.212)
[05:23:26] *** Joins: darkstarx (~darkstard@gateway/vpn/pia/darkstardevx)
[05:25:55] *** Quits: darkstardev13 (~darkstard@89.47.234.174) (Ping timeout: 256 seconds)
[05:31:18] *** Joins: mad_enz (~mad_enz@cpe00508b114c3e-cm788df7e75290.cpe.net.fido.ca)
[05:32:16] *** Joins: CaCode_ (~CaCode@user/cacode)
[05:35:11] *** Quits: CaCode (~CaCode@user/cacode) (Ping timeout: 264 seconds)
[05:36:23] *** Joins: ARoxdale (~ARoxdale@109.78.38.164)
[05:37:40] *** Quits: npaperbot (~npaperbot@dodecahedron.m-ou.se) (Remote host closed the connection)
[05:37:46] *** Quits: elkalamar_ (elkalamar@gateway/vpn/airvpn/elkalamar) (Ping timeout: 260 seconds)
[05:37:48] *** Joins: npaperbot (~npaperbot@dodecahedron.m-ou.se)
[05:37:48] *** ChanServ sets mode: +v npaperbot
[05:39:35] *** Quits: NEYi (~NEYi@109.251.216.38) (Read error: Connection reset by peer)
[05:44:18] *** Quits: lxsameer (~lxsameer@user/lxsameer) (Ping timeout: 260 seconds)
[05:46:10] *** Quits: zer0bitz (~zer0bitz@dsl-hkibng31-54fae3-116.dhcp.inet.fi) (Ping timeout: 260 seconds)
[05:48:01] *** Quits: ac_slater (~ac_slater@c-73-221-67-64.hsd1.wa.comcast.net) (Ping timeout: 256 seconds)
[05:48:48] *** Joins: leduyquang753 (~leduyquan@user/leduyquang753)
[05:48:58] *** Quits: darkstarx (~darkstard@gateway/vpn/pia/darkstardevx) (Remote host closed the connection)
[05:49:26] *** Joins: darkstarx (~darkstard@gateway/vpn/pia/darkstardevx)
[05:51:09] *** Joins: elkalamar_ (elkalamar@gateway/vpn/airvpn/elkalamar)
[05:54:43] *** Joins: whatsupdoc (uid509081@id-509081.hampstead.irccloud.com)
[05:58:02] *** Quits: nostar (~nostar@2601:406:4100:34d:8f4:5ea7:30b2:b7e6) (Quit: Leaving)
[05:58:44] *** Joins: hypo7r7 (~hypo7r7@uwyo-129-72-151-5.uwyo.edu)
[06:02:22] *** Joins: elkalamar (elkalamar@gateway/vpn/airvpn/elkalamar)
[06:04:59] *** Quits: elkalamar_ (elkalamar@gateway/vpn/airvpn/elkalamar) (Ping timeout: 268 seconds)
[06:06:43] *** Quits: elkalamar (elkalamar@gateway/vpn/airvpn/elkalamar) (Ping timeout: 256 seconds)
[06:09:16] *** Quits: Inline (~Inline@2a02:908:1252:7a80:d6e1:9cdb:c2c:75e6) (Ping timeout: 245 seconds)
[06:09:41] *** Parts: hypo7r7 (~hypo7r7@uwyo-129-72-151-5.uwyo.edu) ()
[06:10:20] *** Joins: elkalamar (elkalamar@gateway/vpn/airvpn/elkalamar)
[06:21:01] *** Quits: nshire (~Neal@user/nshire) (Ping timeout: 268 seconds)
[06:21:54] *** Joins: smallville7123 (~smallvill@cpe-172-193-72-46.qld.foxtel.net.au)
[06:22:43] *** Quits: karakedi (~eAC53C340@user/karakedi) (Remote host closed the connection)
[06:26:22] *** Quits: Fault (~Fault@152.70.112.168) (Quit: Quit.)
[06:26:53] *** Joins: Fault (~Fault@152.70.112.168)
[06:30:31] *** Quits: ARoxdale (~ARoxdale@109.78.38.164) (Ping timeout: 256 seconds)
[06:31:46] *** Joins: ElectronApps (~ElectronA@user/electronapps)
[06:33:07] *** Quits: vvdaiwrw (~rvgzuuqp@gateway/tor-sasl/rvgzuuqp) (Quit: vvdaiwrw)
[06:34:10] *** Quits: eelstrebor (~eelstrebo@198-178-29-136.scb.ne.static.allophone.net) (Quit: Ex-Chat)
[06:40:59] *** Joins: great_taste (~great_tas@190.32.235.20)
[06:45:22] *** Joins: ac_slater (~ac_slater@c-71-231-45-179.hsd1.wa.comcast.net)
[06:46:32] *** Joins: elkalamar_ (elkalamar@gateway/vpn/airvpn/elkalamar)
[06:48:28] *** Joins: varioust (~varioust@cpe-108-167-11-88.neb.res.rr.com)
[06:49:10] *** Quits: elkalamar (elkalamar@gateway/vpn/airvpn/elkalamar) (Ping timeout: 260 seconds)
[06:49:30] *** Quits: Yruama (~Yruama@2a01:cb15:8139:9400:8634:97ff:fe6e:86ac) (Quit: Leaving)
[07:02:15] *** Quits: plastico (~plastico@neomutt/plastico) (Quit: WeeChat 3.3)
[07:02:31] *** Joins: ferdna (~ferdna@user/ferdna)
[07:08:38] *** Quits: shailangsa (~shailangs@host86-185-98-19.range86-185.btcentralplus.com) ()
[07:16:20] *** Parts: varioust (~varioust@cpe-108-167-11-88.neb.res.rr.com) ()
[07:26:38] *** Quits: Brainium (~brainium@user/brainium) (Quit: Konversation terminated!)
[07:40:28] *** Joins: frost (~frost@user/frost)
[07:42:11] *** Joins: shailangsa (~shailangs@host86-185-98-19.range86-185.btcentralplus.com)
[07:47:29] *** Joins: nshire (~Neal@user/nshire)
[07:51:49] *** Quits: Tempesta (~Tempesta@user/tempesta) (Quit: See ya!)
[07:58:36] *** Quits: Fault (~Fault@152.70.112.168) (Quit: Quit.)
[08:07:06] *** Quits: CaCode_ (~CaCode@user/cacode) (Ping timeout: 260 seconds)
[08:08:59] *** Joins: Fault (~Fault@152.70.112.168)
[08:09:38] *** Quits: rvalue (~rvalue@user/rvalue) (Quit: ZNC - https://znc.in)
[08:11:56] *** Joins: rvalue (~rvalue@user/rvalue)
[08:14:11] *** Quits: froggy (~froggy@2.235.241.212) (Read error: Connection reset by peer)
[08:14:15] *** Joins: froggy_ (~froggy@2.235.241.212)
[08:15:55] *** Quits: elkalamar_ (elkalamar@gateway/vpn/airvpn/elkalamar) (Ping timeout: 256 seconds)
[08:16:26] *** Quits: indy (~indy@dsl-static-104.213-160-167.telecom.sk) (Ping timeout: 260 seconds)
[08:16:47] *** Quits: froggy_ (~froggy@2.235.241.212) (Read error: Connection reset by peer)
[08:16:56] *** Joins: froggy (~froggy@2.235.241.212)
[08:20:37] *** Quits: froggy (~froggy@2.235.241.212) (Read error: Connection reset by peer)
[08:20:53] *** Joins: froggy (~froggy@2.235.241.212)
[08:26:57] *** Joins: indy (~indy@dsl-static-104.213-160-167.telecom.sk)
[08:32:57] *** Joins: froggy_ (~froggy@2.235.241.212)
[08:33:27] *** Quits: froggy (~froggy@2.235.241.212) (Read error: Connection reset by peer)
[08:38:36] *** Quits: great_taste (~great_tas@190.32.235.20) (Quit: Client closed)
[08:53:46] *** Joins: Tempesta (Tempesta@user/tempesta)
[08:53:48] *** Quits: Tempesta (Tempesta@user/tempesta) (Excess Flood)
[08:54:07] *** Joins: Tempesta (Tempesta@183.98.39.112)
[08:54:07] *** Quits: Tempesta (Tempesta@183.98.39.112) (Changing host)
[08:54:07] *** Joins: Tempesta (Tempesta@user/tempesta)
[08:54:08] *** Quits: Tempesta (Tempesta@user/tempesta) (Excess Flood)
[08:54:27] *** Joins: Tempesta (Tempesta@183.98.39.112)
[08:54:27] *** Quits: Tempesta (Tempesta@183.98.39.112) (Changing host)
[08:54:27] *** Joins: Tempesta (Tempesta@user/tempesta)
[08:54:28] *** Quits: Tempesta (Tempesta@user/tempesta) (Excess Flood)
[08:54:52] *** Joins: Tempesta (Tempesta@183.98.39.112)
[08:54:52] *** Quits: Tempesta (Tempesta@183.98.39.112) (Changing host)
[08:54:52] *** Joins: Tempesta (Tempesta@user/tempesta)
[08:54:53] *** Quits: Tempesta (Tempesta@user/tempesta) (Excess Flood)
[08:55:35] *** Quits: pulse (~pulse@user/pulse) (Ping timeout: 256 seconds)
[08:56:02] *** Joins: Tempesta (Tempesta@183.98.39.112)
[08:56:02] *** Quits: Tempesta (Tempesta@183.98.39.112) (Changing host)
[08:56:02] *** Joins: Tempesta (Tempesta@user/tempesta)
[08:56:03] *** Quits: Tempesta (Tempesta@user/tempesta) (Excess Flood)
[09:04:30] *** Joins: andreasbuhr (~quassel@p548dde89.dip0.t-ipconnect.de)
[09:10:26] *** Quits: ferdna (~ferdna@user/ferdna) (Quit: Leaving)
[09:11:00] *** Joins: sa02irc (~mbax@155-079-043-212.ip-addr.inexio.net)
[09:11:26] *** Quits: proller (~p@2002:50f0:d845:10:4a51:b7ff:fe43:6e30) (Ping timeout: 260 seconds)
[09:21:35] *** Quits: LiaoTao (~LiaoTao@gateway/tor-sasl/liaotao) (Remote host closed the connection)
[09:21:56] *** Joins: LiaoTao (~LiaoTao@gateway/tor-sasl/liaotao)
[09:25:18] *** Quits: skapata (~Skapata@user/skapata) (Quit: Ĝis.)
[09:32:21] *** Quits: Fault (~Fault@152.70.112.168) (Quit: Quit.)
[09:33:02] *** Joins: Fault (~Fault@152.70.112.168)
[09:36:24] *** Quits: chozorho (~chozorho@2601:146:300:c30::b683) (Quit: thank you! good night!)
[09:37:41] *** Quits: npaperbot (~npaperbot@dodecahedron.m-ou.se) (Remote host closed the connection)
[09:37:50] *** Joins: npaperbot (~npaperbot@dodecahedron.m-ou.se)
[09:37:50] *** ChanServ sets mode: +v npaperbot
[09:42:29] <drew> how do I actually paste on wandbox.org? I can paste my code and run it but where do I get the url for what I wrote
[09:42:41] <drew> oh wait I found it
[09:43:32] <drew> https://wandbox.org/permlink/wuivb43ztz72vq9N I am trying to create a virtual function in this 'parent' class so that classes that inherit it must implement an action function, but I don't want to constrain the number or type of arguments, just "make sure the inheriting classes have an action(...) func"
[09:45:47] <RandomReader> that isn't something that makes sense in C++ .. or in classic OOP for that matter
[09:47:14] <RandomReader> the premise of having a virtual function in a Base is to make it part of the Base interface, meaning callers that deal only with Base can use it, regardless of what else (e.g. Derived or more) the object actually is
[09:48:02] <RandomReader> but it's only useful as a specific, concrete thing, since it has to be part of the Base interface .. there's no notion of something open-ended or unknown, since then it wouldn't be part of the interface and/or wouldn't be known to be implemented by Derived things
[09:48:20] <drew> ok that makes sense
[09:48:28] <RandomReader> in C++ terms, a template is not concrete, it's a recipe for generating code (member functions in this case)
[09:49:04] <RandomReader> in general, templates and virtual are considered "opposite" ways of doing polymorphism, so it's rare to mix them .. and in this case it just doesn't work
[09:49:39] <drew> okay, I'm going to have to rethink my approach it seems
[09:51:48] <RandomReader> if action() is really a universal concept, you'll need a way to provide similarly universal/generic arguments, so that it doesn't depend on any Derived information
[09:52:28] <RandomReader> on the other hand if all uses of action() have to provide something that's specific to each Derived, then it's not really a universal concept, since the caller would have to know about the Derived anyway .. and you just wouldn't put it in Role
[09:53:14] <RandomReader> or maybe you don't use this hierarchy at all, have some entirely separate/free action(T) function that each Derived author would provide an overload for
[09:53:52] <RandomReader> as in, not a member function, it's like std::sort or something and you just call it independently
[09:55:04] <RandomReader> depends on what you're doing obviously, but maybe that'll help spark some ideas
[09:55:51] *** Quits: Fault (~Fault@152.70.112.168) (Quit: Quit.)
[09:56:58] *** Joins: Fault (~Fault@152.70.112.168)
[09:59:00] <drew> thanks RandomReader
[10:00:31] *** Quits: froggy_ (~froggy@2.235.241.212) (Ping timeout: 245 seconds)
[10:01:02] *** Joins: AbleBacon (~AbleBacon@user/AbleBacon)
[10:05:00] *** Quits: ElectronApps (~ElectronA@user/electronapps) (Remote host closed the connection)
[10:07:13] *** Joins: cm007magnum (~Rheanna@112.29.212.29)
[10:07:58] *** Quits: cm007magnum (~Rheanna@112.29.212.29) (Remote host closed the connection)
[10:09:11] *** Joins: cm007magnum (~Rheanna@112.29.212.29)
[10:09:42] *** Quits: cm007magnum (~Rheanna@112.29.212.29) (Remote host closed the connection)
[10:10:28] *** Joins: cm007magnum (~Rheanna@112.29.212.29)
[10:10:55] *** Quits: cm007magnum (~Rheanna@112.29.212.29) (Remote host closed the connection)
[10:11:37] *** Joins: cm007magnum (~Rheanna@112.29.212.29)
[10:12:12] *** Joins: Hax0r (~Hax0r@93.169.49.84)
[10:12:40] *** Quits: cm007magnum (~Rheanna@112.29.212.29) (Remote host closed the connection)
[10:13:33] *** Joins: cm007magnum (~Rheanna@112.29.212.29)
[10:14:02] *** Quits: cm007magnum (~Rheanna@112.29.212.29) (Remote host closed the connection)
[10:14:53] *** Joins: cm007magnum (~Rheanna@112.29.212.29)
[10:15:15] *** Quits: cm007magnum (~Rheanna@112.29.212.29) (Remote host closed the connection)
[10:15:57] *** Joins: cm007magnum (~Rheanna@112.29.212.29)
[10:16:19] *** Quits: cm007magnum (~Rheanna@112.29.212.29) (Remote host closed the connection)
[10:16:50] *** Quits: Fault (~Fault@152.70.112.168) (Quit: Quit.)
[10:16:55] *** Joins: cm007magnum (~Rheanna@112.29.212.29)
[10:17:10] *** Joins: Fault (~Fault@152.70.112.168)
[10:17:30] *** Quits: cm007magnum (~Rheanna@112.29.212.29) (Remote host closed the connection)
[10:18:16] *** Joins: cm007magnum (~Rheanna@112.29.212.29)
[10:18:38] *** Quits: cm007magnum (~Rheanna@112.29.212.29) (Remote host closed the connection)
[10:19:05] *** Joins: cm007magnum (~Rheanna@61.174.60.56)
[10:20:15] *** Quits: cm007magnum (~Rheanna@61.174.60.56) (Remote host closed the connection)
[10:20:51] *** Joins: cm007magnum (~Rheanna@61.174.60.56)
[10:21:42] *** Quits: cm007magnum (~Rheanna@61.174.60.56) (Remote host closed the connection)
[10:22:46] *** Joins: cm007magnum (~Rheanna@112.29.212.29)
[10:23:08] *** Quits: cm007magnum (~Rheanna@112.29.212.29) (Remote host closed the connection)
[10:24:06] *** Joins: cm007magnum (~Rheanna@61.174.60.56)
[10:24:53] *** Quits: cm007magnum (~Rheanna@61.174.60.56) (Remote host closed the connection)
[10:25:55] *** Joins: cm007magnum (~Rheanna@112.29.212.29)
[10:26:04] *** Joins: froggy (~froggy@2.235.241.212)
[10:26:22] *** Quits: cm007magnum (~Rheanna@112.29.212.29) (Remote host closed the connection)
[10:27:15] *** Joins: cm007magnum (~Rheanna@112.29.212.29)
[10:27:42] *** Quits: rgrinberg (~textual@190.113.102.153) (Quit: My MacBook has gone to sleep. ZZZzzz…)
[10:27:57] *** Quits: cm007magnum (~Rheanna@112.29.212.29) (Remote host closed the connection)
[10:28:31] *** Joins: cm007magnum (~Rheanna@61.174.60.56)
[10:29:24] *** Quits: cm007magnum (~Rheanna@61.174.60.56) (Remote host closed the connection)
[10:29:57] *** Joins: cm007magnum (~Rheanna@112.29.212.29)
[10:30:18] *** Quits: cm007magnum (~Rheanna@112.29.212.29) (Remote host closed the connection)
[10:30:41] *** Joins: elkalamar (elkalamar@gateway/vpn/airvpn/elkalamar)
[10:30:51] *** Joins: cm007magnum (~Rheanna@112.29.212.29)
[10:31:17] *** Quits: cm007magnum (~Rheanna@112.29.212.29) (Remote host closed the connection)
[10:32:19] *** Joins: cm007magnum (~Rheanna@112.29.212.29)
[10:32:47] *** Quits: cm007magnum (~Rheanna@112.29.212.29) (Remote host closed the connection)
[10:33:16] *** Joins: cm007magnum (~Rheanna@112.29.212.29)
[10:33:37] *** Quits: cm007magnum (~Rheanna@112.29.212.29) (Remote host closed the connection)
[10:34:17] *** Joins: cm007magnum (~Rheanna@112.29.212.29)
[10:34:22] *** Quits: Fault (~Fault@152.70.112.168) (Quit: Quit.)
[10:35:00] *** Quits: cm007magnum (~Rheanna@112.29.212.29) (Remote host closed the connection)
[10:35:15] *** Joins: Fault (~Fault@152.70.112.168)
[10:35:44] *** Joins: cm007magnum (~Rheanna@61.174.60.56)
[10:36:40] *** Quits: cm007magnum (~Rheanna@61.174.60.56) (Remote host closed the connection)
[10:37:10] *** Joins: cm007magnum (~Rheanna@61.174.60.56)
[10:37:51] *** Quits: cm007magnum (~Rheanna@61.174.60.56) (Remote host closed the connection)
[10:38:01] *** Joins: netpipe (~netpipe@user/netpipe)
[10:38:32] <netpipe> anyone want a 120 dollar quick buffer porting job ? i need fluidlite to work with alsa or sdl
[10:38:42] <netpipe> https://www.freelancer.com/projects/cplusplus-programming/alsa-sdl-buffer-importer/details
[10:38:53] *** Joins: cm007magnum (~Rheanna@61.174.60.56)
[10:38:53] <netpipe> i can pay through paypal if needed
[10:40:26] *** ChanServ sets mode: +o ville
[10:40:35] *** netpipe was kicked by ville (wrong channel)
[10:40:48] *** ville sets mode: -o ville
[10:41:14] *** Joins: netpipe (~netpipe@user/netpipe)
[10:41:19] <netpipe> oops
[10:41:43] *** Quits: cm007magnum (~Rheanna@61.174.60.56) (Remote host closed the connection)
[10:41:53] <netpipe> i have another question then, using enum i cannot get the maps to use the same name
[10:42:00] <netpipe> brb i'll get link
[10:42:25] <netpipe> https://netpipe.ca/?p=5762
[10:42:40] *** Joins: cm007magnum (~Rheanna@61.174.60.56)
[10:43:34] <netpipe> i tried "using enum eparamx;" but it did not work
[10:43:59] *** Quits: cm007magnum (~Rheanna@61.174.60.56) (Remote host closed the connection)
[10:44:33] *** Joins: cm007magnum (~Rheanna@112.29.212.29)
[10:45:11] *** Quits: cm007magnum (~Rheanna@112.29.212.29) (Remote host closed the connection)
[10:45:40] *** Joins: cm007magnum (~Rheanna@112.29.212.29)
[10:46:14] *** Quits: cm007magnum (~Rheanna@112.29.212.29) (Remote host closed the connection)
[10:46:31] <netpipe> https://github.com/netpipe/Luna/blob/master/Scripting/PyFunctions.h just before initkeys
[10:46:40] <netpipe> i cant seem to use the same enum names like init
[10:47:09] *** Joins: cm007magnum (~Rheanna@112.29.212.29)
[10:47:30] *** Quits: cm007magnum (~Rheanna@112.29.212.29) (Remote host closed the connection)
[10:47:34] <netpipe> its strange having to remap all my enums too there should be something for that too
[10:48:04] *** Joins: rgrinberg (~textual@190.113.102.153)
[10:48:17] *** Joins: cm007magnum (~Rheanna@112.29.212.29)
[10:48:23] *** Joins: hypo7r7 (~hypo7r7@uwyo-129-72-151-5.uwyo.edu)
[10:48:39] *** Quits: cm007magnum (~Rheanna@112.29.212.29) (Remote host closed the connection)
[10:49:05] *** Joins: cm007magnum (~Rheanna@61.174.60.56)
[10:50:04] *** Quits: cm007magnum (~Rheanna@61.174.60.56) (Remote host closed the connection)
[10:50:27] *** Quits: rgrinberg (~textual@190.113.102.153) (Client Quit)
[10:50:35] *** Joins: cm007magnum (~Rheanna@61.174.60.56)
[10:51:14] *** Joins: rgrinberg (~textual@190.113.102.153)
[10:51:28] *** Quits: Hello71 (~Hello71@wireguard/contributor/hello71) (Remote host closed the connection)
[10:51:40] <ville> case labels are integral values, you appear to try a function call?
[10:51:54] *** Joins: Hello71 (~Hello71@wireguard/contributor/hello71)
[10:52:24] *** Quits: cm007magnum (~Rheanna@61.174.60.56) (Remote host closed the connection)
[10:52:43] <leduyquang753> You can only put constant expressions into case label values.
[10:52:56] <leduyquang753> C++ has nothing to fix about this.
[10:53:32] *** Joins: cm007magnum (~Rheanna@112.29.212.29)
[10:53:53] *** Quits: cm007magnum (~Rheanna@112.29.212.29) (Remote host closed the connection)
[10:54:36] *** Joins: cm007magnum (~Rheanna@61.174.60.56)
[10:55:41] *** Quits: cm007magnum (~Rheanna@61.174.60.56) (Remote host closed the connection)
[10:56:30] *** Quits: Hax0r (~Hax0r@93.169.49.84) (Remote host closed the connection)
[10:56:40] *** Joins: cm007magnum (~Rheanna@112.29.212.29)
[10:56:54] *** Joins: Hax0r (~Hax0r@93.169.49.84)
[10:57:09] *** Quits: cm007magnum (~Rheanna@112.29.212.29) (Remote host closed the connection)
[10:59:29] *** Quits: Fault (~Fault@152.70.112.168) (Quit: Quit.)
[10:59:30] <netpipe> if i put them in a function call then i have to initialize more than once
[10:59:36] <netpipe> seems like a waste
[10:59:56] *** Joins: Fault (~Fault@152.70.112.168)
[11:01:52] <leduyquang753> Putting the function result into a variable and then putting the variable as case value doesn't fix it either.
[11:02:00] <leduyquang753> You can only put values that are known at compile time.
[11:02:26] <leduyquang753> You can choose to use if instead.
[11:04:22] *** Joins: cm007magnum (~Rheanna@101.68.251.194)
[11:09:23] <netpipe> i think c++ should be intuitive and easy to use. you should be able to feel like superman and do anything
[11:09:39] *** Joins: triad (~triad@user/triad)
[11:09:43] <leduyquang753> It is easy to me.
[11:09:53] <leduyquang753> And can be easy for you too if you know the rules.
[11:09:55] <netpipe> not everyone is computer science major
[11:10:24] <leduyquang753> There are other languages that try to be easy to use but still none has been seen by everyone as easy.
[11:10:34] <netpipe> its supposed to supersede c in all its defficiency's
[11:10:44] <netpipe> d++ was suposed to be better but i doubt it is
[11:11:23] <netpipe> the only thing ide fix is those enums sofar
[11:11:30] <netpipe> they need gcc work
[11:11:41] <netpipe> g++ too
[11:11:53] *** Joins: spaceangel (~spaceange@ip-89-176-181-220.net.upcbroadband.cz)
[11:12:40] *** Joins: lh_mouse (~lh_mouse@mingw-w64/developer/lhmouse)
[11:17:14] *** Joins: rendar (~rendar@user/rendar)
[11:22:27] *** Joins: ElectronApps (~ElectronA@user/electronapps)
[11:26:30] *** Joins: pingpongball (~pingpongb@103.94.252.87)
[11:27:40] *** Quits: pingpongball (~pingpongb@103.94.252.87) (Client Quit)
[11:28:56] *** Joins: Hercules (~Hercules@user/hercules)
[11:29:09] *** Quits: rahl (~rahl@102.114.5.255) (Ping timeout: 256 seconds)
[11:30:52] *** Joins: rahl (~rahl@102.114.41.136)
[11:31:36] *** Joins: supernova (~quassel@2405:9800:ba11:6207:1881:c0da:3434:7f39)
[11:34:39] *** Quits: hypo7r7 (~hypo7r7@uwyo-129-72-151-5.uwyo.edu) (Quit: leaving)
[11:36:38] *** Joins: saohh (~saohh@ip-78-45-135-51.net.upcbroadband.cz)
[11:39:59] *** Quits: andreasbuhr (~quassel@p548dde89.dip0.t-ipconnect.de) (Quit: https://quassel-irc.org - Chat comfortably. Anywhere.)
[11:47:13] *** Joins: Serpent7776 (~Serpent77@90-156-31-193.internetia.net.pl)
[11:48:22] *** Joins: riksteri (riksteri@gateway/vpn/airvpn/riksteri)
[11:50:48] *** Quits: saohh (~saohh@ip-78-45-135-51.net.upcbroadband.cz) (Quit: Leaving)
[11:51:12] *** Joins: saohh (~saohh@ip-78-45-135-51.net.upcbroadband.cz)
[11:51:13] *** Quits: saohh (~saohh@ip-78-45-135-51.net.upcbroadband.cz) (Remote host closed the connection)
[11:53:02] *** Joins: saohh (~saohh@ip-78-45-135-51.net.upcbroadband.cz)
[11:53:39] *** Quits: saohh (~saohh@ip-78-45-135-51.net.upcbroadband.cz) (Client Quit)
[11:59:45] *** Quits: rvalue (~rvalue@user/rvalue) (Ping timeout: 256 seconds)
[11:59:50] *** Joins: rvalue- (~rvalue@user/rvalue)
[12:01:12] *** rvalue- is now known as rvalue
[12:02:21] <ville> netpipe: you seem to have rather unrealistic expectations of what "c++ is supposed to be"
[12:08:57] *** Joins: kts (~kts@103.73.237.151)
[12:10:01] <netpipe> its so programmers can feel like superman without bumping into things like enum not being solvable
[12:10:10] <ville> not at all
[12:10:31] <netpipe> bash is for superman too
[12:10:58] <netpipe> python is probably next best thing
[12:11:50] *** Joins: CaCode (~CaCode@user/cacode)
[12:13:44] *** Quits: CaCode (~CaCode@user/cacode) (Remote host closed the connection)
[12:14:03] *** Joins: CaCode (~CaCode@user/cacode)
[12:14:03] *** CaCode is now known as netester
[12:14:22] *** Quits: netester (~CaCode@user/cacode) (Remote host closed the connection)
[12:14:52] *** Joins: netester (~CaCode@user/cacode)
[12:15:05] <ville> netpipe: c++ is a very complex language by every measure. the document that defines it is 1500+ pages. three times as large as the document that defines c.
[12:16:16] <netpipe> comparable to any high level language but with more oop
[12:17:14] *** Quits: elkalamar (elkalamar@gateway/vpn/airvpn/elkalamar) (Ping timeout: 260 seconds)
[12:18:33] <netpipe> where i find it gets complex is in polymorphism , inheritance and inline assembly and shift operations
[12:18:49] <netpipe> otherwise its close to visualbasic
[12:19:33] <netpipe> which is close to basic
[12:19:45] *** Joins: lxsameer (~lxsameer@user/lxsameer)
[12:19:58] *** Joins: elkalamar (elkalamar@gateway/vpn/airvpn/elkalamar)
[12:20:00] <netpipe> so not much different than any other
[12:23:11] *** Quits: emerent (~quassel@p200300cd5748552fba27ebfffed28a59.dip0.t-ipconnect.de) (Read error: Connection reset by peer)
[12:24:25] *** Joins: emerent (~quassel@p200300cd5748552fba27ebfffed28a59.dip0.t-ipconnect.de)
[12:25:19] *** Joins: vmcs (~vmcs@194.135.153.44)
[12:27:26] <fluter> hi, what is the purpose of unamaed default parameters? e.g. int func(int = 3) { ... }
[12:27:34] <fluter> this is legal c++ code, but for what?
[12:27:42] *** Joins: robod34 (Username@79.113.195.239)
[12:29:12] *** Quits: kts (~kts@103.73.237.151) (Quit: Konversation terminated!)
[12:30:04] *** Joins: Tobbi (~Tobbi@2a02:8108:1240:48ec:7025:e670:e56f:f750)
[12:30:09] <Atque> fluter: It is useful for defining increment and decrement operators, conforming to function signatures in libraries and implementing virtual classes from a base class when you do not intend to use the parameter.
[12:31:23] <fluter> ah ok
[12:31:26] <RandomReader> since you're asking about a definition, I think the answer is more because it would be a special case to *disallow* it
[12:31:55] *** Joins: kts (~kts@103.73.237.151)
[12:32:03] <RandomReader> default parameters apply to declarations, because they're used by the caller (as if it were just text substitution -- that's not quite accurate but close), not by the function itself
[12:32:23] <RandomReader> a function definition is basically just a declaration followed by a { body } instead of a semicolon
[12:32:47] <RandomReader> the declaration doesn't need a parameter name (since the caller doesn't care), so...
[12:33:07] *** Quits: kts (~kts@103.73.237.151) (Client Quit)
[12:34:52] *** Quits: ElectronApps (~ElectronA@user/electronapps) (Remote host closed the connection)
[12:35:24] *** Joins: kts (~kts@103.73.237.151)
[12:37:24] *** Quits: kts (~kts@103.73.237.151) (Client Quit)
[12:38:00] *** Joins: LucaTM (~LucaTM@user/lucatm)
[12:39:17] *** Quits: netpipe (~netpipe@user/netpipe) (Quit: Client closed)
[12:39:46] *** Joins: kts (~kts@103.73.237.151)
[12:41:25] *** Quits: kts (~kts@103.73.237.151) (Client Quit)
[12:43:42] *** Joins: kts (~kts@103.73.237.151)
[12:45:15] *** Quits: kts (~kts@103.73.237.151) (Client Quit)
[12:46:13] <fluter> is it the same for non type template parameters?
[12:46:35] *** Quits: elkalamar (elkalamar@gateway/vpn/airvpn/elkalamar) (Ping timeout: 264 seconds)
[12:46:47] *** Joins: kts (~kts@103.73.237.151)
[12:46:55] *** Quits: kts (~kts@103.73.237.151) (Client Quit)
[12:48:11] <RandomReader> hmm .. templates don't really have declarations, so not quite the same, but in terms of the parameter structure it's pretty similar
[12:48:56] <RandomReader> although for templates the type form is commonly used for SFINAE via enable_if or similar
[12:49:17] <RandomReader> I can't think of an analogous pattern for non-type at the moment
[12:49:25] *** Joins: kts (~kts@103.73.237.151)
[12:51:23] *** Quits: Hax0r (~Hax0r@93.169.49.84) (Remote host closed the connection)
[12:51:54] *** Joins: elkalamar (elkalamar@gateway/vpn/airvpn/elkalamar)
[12:51:54] <RandomReader> oh, it makes sense for specialization actually .. e.g. the primary template may not have a use for the param *and* not want the caller to have to provide it, but some specializations are for specific values
[12:53:32] *** Joins: elkalamar_ (elkalamar@gateway/vpn/airvpn/elkalamar)
[12:55:44] *** Quits: kts (~kts@103.73.237.151) (Quit: Konversation terminated!)
[12:55:56] *** Quits: elkalamar (elkalamar@gateway/vpn/airvpn/elkalamar) (Ping timeout: 245 seconds)
[12:55:58] *** Quits: vqueiroz (uid340368@id-340368.hampstead.irccloud.com) (Quit: Connection closed for inactivity)
[12:59:15] *** Joins: lionheart (~lionheart@user/lionheart)
[13:00:46] *** netester is now known as CaCode
[13:02:08] *** Quits: AbleBacon (~AbleBacon@user/AbleBacon) (Read error: Connection reset by peer)
[13:04:45] <Atque> fluter: It's not the same. Function prototypes originated in C89. Templates are much newer I guess. The semantics and historic substitution models would have been quite different.
[13:05:27] <Atque> fluter: The prototype semantics came from days when compilers and computers in general had very limited resources available.
[13:07:41] *** Quits: spaceangel (~spaceange@ip-89-176-181-220.net.upcbroadband.cz) (Remote host closed the connection)
[13:09:32] *** Quits: Dizidentu (~aresg@modemcable105.134-19-135.mc.videotron.ca) (Read error: Connection reset by peer)
[13:17:23] *** Quits: elkalamar_ (elkalamar@gateway/vpn/airvpn/elkalamar) (Ping timeout: 256 seconds)
[13:17:59] *** Joins: elkalamar (elkalamar@gateway/vpn/airvpn/elkalamar)
[13:19:32] *** Joins: elkalamar_ (elkalamar@gateway/vpn/airvpn/elkalamar)
[13:21:09] *** Jmtrix- is now known as Jmtrix
[13:21:09] *** Quits: Jmtrix (~qed@168.235.89.81) (Changing host)
[13:21:09] *** Joins: Jmtrix (~qed@user/jmtrix)
[13:22:34] *** Quits: elkalamar (elkalamar@gateway/vpn/airvpn/elkalamar) (Ping timeout: 260 seconds)
[13:28:47] *** Joins: pretty_dumm_guy (trottel@gateway/vpn/protonvpn/prettydummguy/x-88029655)
[13:29:48] *** Joins: trainlag1602 (~saroa@user/trainlag1602)
[13:32:22] *** Quits: lionheart (~lionheart@user/lionheart) (Quit: Textual IRC Client: www.textualapp.com)
[13:36:38] *** Joins: Burgundy (~yomon@86.127.194.72)
[13:37:41] *** Quits: npaperbot (~npaperbot@dodecahedron.m-ou.se) (Remote host closed the connection)
[13:37:49] *** Joins: npaperbot (~npaperbot@dodecahedron.m-ou.se)
[13:37:49] *** ChanServ sets mode: +v npaperbot
[13:37:50] *** Joins: YetAnohterone (~kmph@2a02:a317:223a:8180:bc78:ae37:102e:8dc5)
[13:41:49] *** Quits: gargus (~user@203.220.68.182) (Quit: Leaving)
[13:42:30] *** Joins: PJBoy (~PJBoy@2a00:23c7:8302:b301:c50c:fd46:7acb:c529)
[13:42:30] *** Quits: PJBoy (~PJBoy@2a00:23c7:8302:b301:c50c:fd46:7acb:c529) (Changing host)
[13:42:30] *** Joins: PJBoy (~PJBoy@user/pjboy)
[13:44:55] *** Quits: PJBoy (~PJBoy@user/pjboy) (Killed (strontium.libera.chat (Nickname regained by services)))
[13:44:57] *** Joins: PJBoy (~PJBoy@user/pjboy)
[13:48:16] *** Joins: kts (~kts@103.73.237.110)
[13:51:00] *** Quits: kts (~kts@103.73.237.110) (Client Quit)
[13:52:05] *** Quits: YetAnohterone (~kmph@2a02:a317:223a:8180:bc78:ae37:102e:8dc5) (Quit: Client closed)
[13:55:49] *** Joins: vmcs_ (~vmcs@185.30.88.65)
[13:58:35] *** Quits: vmcs (~vmcs@194.135.153.44) (Ping timeout: 264 seconds)
[14:13:22] *** Quits: whatsupdoc (uid509081@id-509081.hampstead.irccloud.com) (Quit: Connection closed for inactivity)
[14:14:28] *** Joins: plastico (~plastico@neomutt/plastico)
[14:16:51] *** Quits: Hercules (~Hercules@user/hercules) (Quit: Leaving)
[14:18:41] *** Joins: Hercules (~Hercules@user/hercules)
[14:20:59] *** Joins: Tempesta (Tempesta@user/tempesta)
[14:21:02] *** Quits: Tempesta (Tempesta@user/tempesta) (Excess Flood)
[14:21:21] *** Joins: Tempesta (Tempesta@183.98.39.112)
[14:21:21] *** Quits: Tempesta (Tempesta@183.98.39.112) (Changing host)
[14:21:21] *** Joins: Tempesta (Tempesta@user/tempesta)
[14:21:22] *** Quits: Tempesta (Tempesta@user/tempesta) (Excess Flood)
[14:21:45] *** Joins: demon1 (~demon@116.pool85-57-77.dynamic.orange.es)
[14:26:48] *** Quits: demon1 (~demon@116.pool85-57-77.dynamic.orange.es) (Quit: ShellHosting Script www.ShellHosting.org)
[14:33:05] *** Joins: vvdaiwrw (~rvgzuuqp@gateway/tor-sasl/rvgzuuqp)
[14:37:08] *** Joins: sn0wdrone (~snowdrone@user/snowdrone)
[14:39:16] *** Quits: zmt01 (~zmt00@user/zmt00) (Ping timeout: 245 seconds)
[14:39:20] *** Quits: snowdrone (~snowdrone@user/snowdrone) (Ping timeout: 260 seconds)
[14:43:21] *** Joins: nshire_ (~Neal@47.146.41.156)
[14:46:04] *** Quits: nshire (~Neal@user/nshire) (Ping timeout: 268 seconds)
[14:46:47] *** Joins: anjali (~anjali@42.111.17.17)
[14:55:00] *** Joins: eeee (~eeee@user/eeee)
[14:55:50] *** Quits: betelgeuse (~betelgeus@94-225-47-8.access.telenet.be) (Ping timeout: 260 seconds)
[14:56:36] *** Joins: cart_man (~rynot@host-78-144-127-199.as13285.net)
[14:56:39] *** Joins: snowdrone (~snowdrone@user/snowdrone)
[14:58:15] *** Quits: triad (~triad@user/triad) (Ping timeout: 256 seconds)
[14:59:22] *** Quits: sn0wdrone (~snowdrone@user/snowdrone) (Ping timeout: 260 seconds)
[14:59:37] *** Joins: AmR (~AmREiSa@156.199.218.104)
[15:00:59] *** Quits: eeee (~eeee@user/eeee) (Ping timeout: 264 seconds)
[15:01:45] *** Joins: TheHermann (~TheHerman@gateway/tor-sasl/thehermann)
[15:03:34] *** Joins: eeee (~eeee@user/eeee)
[15:04:18] *** Quits: Carbonflux (~Carbonflu@c-66-235-54-179.sea.wa.customer.broadstripe.net) (Quit: When all you have are solutions, everything is a problem.)
[15:05:03] *** Quits: vmcs_ (~vmcs@185.30.88.65) (Ping timeout: 256 seconds)
[15:05:37] *** Joins: sn0wdrone (~snowdrone@user/snowdrone)
[15:08:07] *** Quits: snowdrone (~snowdrone@user/snowdrone) (Ping timeout: 260 seconds)
[15:11:11] *** Quits: eeee (~eeee@user/eeee) (Ping timeout: 264 seconds)
[15:13:31] *** Joins: NEYi (~NEYi@109.251.216.38)
[15:14:51] *** Joins: chris64 (~chris@user/chris64)
[15:16:42] *** Quits: grep_xtrange (~x@ac255238.ppp.asahi-net.or.jp) (Quit: Quitting)
[15:17:00] *** Joins: z8z (~x@ac255238.ppp.asahi-net.or.jp)
[15:20:01] *** Quits: trainlag1602 (~saroa@user/trainlag1602) (Quit: Leaving.)
[15:29:34] *** Joins: blackout69 (~blackout6@net-31-156-121-187.cust.vodafonedsl.it)
[15:30:37] *** Joins: slidercrank (~slidercra@user/slidercrank)
[15:37:11] *** Quits: blackout69 (~blackout6@net-31-156-121-187.cust.vodafonedsl.it) (Quit: Leaving.)
[15:39:41] *** Quits: anjali (~anjali@42.111.17.17) (Ping timeout: 245 seconds)
[15:43:38] *** Quits: rgrinberg (~textual@190.113.102.153) (Quit: My MacBook has gone to sleep. ZZZzzz…)
[15:46:04] *** Joins: ElectronApps (~ElectronA@user/electronapps)
[15:51:03] *** Joins: sedeki (~textual@user/sedeki)
[15:55:43] *** Quits: supernova (~quassel@2405:9800:ba11:6207:1881:c0da:3434:7f39) (Quit: No Ping reply in 180 seconds.)
[15:56:51] *** Joins: supernova (~quassel@2405:9800:ba11:6207:68db:61c8:5764:c870)
[16:10:35] *** Quits: elkalamar_ (elkalamar@gateway/vpn/airvpn/elkalamar) (Ping timeout: 264 seconds)
[16:10:47] *** Joins: elkalamar (elkalamar@gateway/vpn/airvpn/elkalamar)
[16:12:04] *** Quits: sedeki (~textual@user/sedeki) (Quit: Textual IRC Client: www.textualapp.com)
[16:15:30] *** Quits: elkalamar (elkalamar@gateway/vpn/airvpn/elkalamar) (Ping timeout: 268 seconds)
[16:16:01] *** Joins: elkalamar (elkalamar@gateway/vpn/airvpn/elkalamar)
[16:16:57] *** Joins: anderson_ (~anderson@176.106.245.151)
[16:17:07] <anderson_> Hello!
[16:18:05] *** Quits: reset (~reset@user/reset) (Quit: reset)
[16:20:00] *** Quits: cart_man (~rynot@host-78-144-127-199.as13285.net) (Quit: Konversation terminated!)
[16:20:54] *** Joins: anjali (~anjali@42.111.17.17)
[16:20:56] *** Quits: supernova (~quassel@2405:9800:ba11:6207:68db:61c8:5764:c870) (Ping timeout: 245 seconds)
[16:23:08] *** Joins: m_ben (~m_ben@user/m-ben/x-7429725)
[16:25:11] *** Joins: TonyStone31 (~TonyStone@2603-7080-8607-c36a-9cdb-69bc-753b-1e50.res6.spectrum.com)
[16:26:05] *** Quits: elkalamar (elkalamar@gateway/vpn/airvpn/elkalamar) (Ping timeout: 256 seconds)
[16:26:14] *** Joins: anderson__ (~anderson@176.106.245.151)
[16:26:35] *** Quits: anderson_ (~anderson@176.106.245.151) (Ping timeout: 268 seconds)
[16:29:51] *** Joins: elkalamar (elkalamar@gateway/vpn/airvpn/elkalamar)
[16:30:30] *** Joins: anderson_ (~anderson@176.106.245.151)
[16:31:08] *** Joins: supernova (~quassel@2405:9800:ba11:6207:bc5f:dbea:c2f1:8c3b)
[16:31:11] *** Quits: anderson__ (~anderson@176.106.245.151) (Ping timeout: 256 seconds)
[16:33:26] *** Quits: elkalamar (elkalamar@gateway/vpn/airvpn/elkalamar) (Client Quit)
[16:33:36] *** Joins: snowdrone (~snowdrone@user/snowdrone)
[16:36:12] *** Quits: sn0wdrone (~snowdrone@user/snowdrone) (Ping timeout: 260 seconds)
[16:37:06] *** Joins: sn0wdrone (~snowdrone@user/snowdrone)
[16:38:20] *** Quits: Linux77 (~7Linux7@2804:d45:8c02:b300:76d0:2bff:fe7a:f3a4) (Remote host closed the connection)
[16:38:34] *** Joins: Linux77 (~7Linux7@2804:d45:8c02:b300:76d0:2bff:fe7a:f3a4)
[16:39:42] *** Quits: snowdrone (~snowdrone@user/snowdrone) (Ping timeout: 260 seconds)
[16:42:39] *** Joins: neure (~TimoSuora@dzpbdx0kyyyyyyyyyyyyt-3.rev.dnainternet.fi)
[16:44:29] *** Quits: chris64 (~chris@user/chris64) (Quit: leaving)
[16:51:12] *** Joins: malloy (~jimery@120.235.172.205)
[16:55:51] *** Joins: dg_dg (~dg_dg@gateway/vpn/pia/dgdg/x-00698222)
[16:57:54] *** Quits: malloy (~jimery@120.235.172.205) (Quit: WeeChat 3.0)
[17:03:17] <veverak> is there something like clear implementation of std::vector ? (so one can study what is necessary to do properly static_vector)
[17:03:47] <veverak> technically I can read impl of std::vector in my library, but contains a lot of "if C++ ver is ..." code around and that is noisy
[17:05:14] *** Joins: whupdup (~whupdup@pool-173-76-128-81.bstnma.fios.verizon.net)
[17:05:19] <Raziel> I guess you can try to find an older one, but generally stdlib implementations are not known for being clear or easy to read
[17:05:34] <veverak> exactly
[17:08:30] <m_ben> veverak: you could take a look at https://github.com/electronicarts/EASTL
[17:10:14] <m_ben> there are a few static_vector implementations on github, just use the github search engine
[17:10:24] <veverak> interesting, thanks
[17:10:52] <veverak> m_ben: eeeh, I avoid reading any random repo, the fact that somebody wrote osmething and put it on github does not imply that it is any good
[17:11:23] <ville> veverak: http://www.open-std.org/jtc1/sc22/wg21/docs/papers/2020/p0593r6.html
[17:11:25] *** Quits: anderson_ (~anderson@176.106.245.151) (Ping timeout: 256 seconds)
[17:11:42] <ville> http://www.open-std.org/jtc1/sc22/wg21/docs/papers/2020/p0593r6.html#dynamic-construction-of-arrays
[17:12:13] <veverak> interesting, thanks
[17:12:31] <Raziel> sometimes the most random of repos hold the best of code
[17:12:35] <Raziel> become a github treasure hunter today!
[17:12:54] <ville> veverak: they did DR changes in this paper
[17:13:37] <ville> language changes. we still don't have the thing (provisionally std::bless) in the library
[17:13:44] <Raziel> the worst part is when you find something half-decent that you could use and improve, but it's GPL
[17:14:18] <ville> Raziel: perhaps get over the fact that your code isn't special so you might as well GPL it as well
[17:14:53] <Raziel> ville, I doubt my boss would find that acceptable
[17:15:20] *** Quits: Linux77 (~7Linux7@2804:d45:8c02:b300:76d0:2bff:fe7a:f3a4) (Remote host closed the connection)
[17:15:27] *** Joins: pulse (~pulse@user/pulse)
[17:15:33] *** Joins: Linux77 (~7Linux7@2804:d45:8c02:b300:76d0:2bff:fe7a:f3a4)
[17:16:08] <m_ben> veverak: iirc facebook's folly library and LLVM both have a small_vector implementation
[17:16:33] <Raziel> boost does too
[17:16:56] <m_ben> s/small_vector/static_vector
[17:17:27] <Raziel> they do have that one too
[17:17:30] <Raziel> lol
[17:22:40] *** Quits: froggy (~froggy@2.235.241.212) (Read error: Connection reset by peer)
[17:22:44] *** Joins: froggy_ (~froggy@2.235.241.212)
[17:23:43] *** Quits: froggy_ (~froggy@2.235.241.212) (Client Quit)
[17:24:41] *** Joins: froggy (~froggy@2.235.241.212)
[17:25:48] *** Joins: ARoxdale (~ARoxdale@109.78.38.164)
[17:31:42] *** Joins: snowdrone (~snowdrone@user/snowdrone)
[17:33:57] *** Quits: sn0wdrone (~snowdrone@user/snowdrone) (Ping timeout: 260 seconds)
[17:34:21] *** Joins: karakedi (~eAC53C340@user/karakedi)
[17:37:42] *** Quits: npaperbot (~npaperbot@dodecahedron.m-ou.se) (Remote host closed the connection)
[17:37:49] *** Joins: npaperbot (~npaperbot@dodecahedron.m-ou.se)
[17:37:49] *** ChanServ sets mode: +v npaperbot
[17:38:36] *** Joins: sn0wdrone (~snowdrone@user/snowdrone)
[17:40:57] *** Quits: snowdrone (~snowdrone@user/snowdrone) (Ping timeout: 260 seconds)
[17:45:18] *** Quits: Tokamak (~Tokamak@172.58.191.92) (Ping timeout: 260 seconds)
[17:47:20] *** Quits: Linux77 (~7Linux7@2804:d45:8c02:b300:76d0:2bff:fe7a:f3a4) (Read error: Connection reset by peer)
[17:47:32] *** Joins: Linux77 (~7Linux7@2804:d45:8c02:b300:76d0:2bff:fe7a:f3a4)
[17:48:28] *** Quits: froggy (~froggy@2.235.241.212) (Quit: ZNC 1.8.2 - https://znc.in)
[17:48:53] *** Quits: Linux77 (~7Linux7@2804:d45:8c02:b300:76d0:2bff:fe7a:f3a4) (Read error: Connection reset by peer)
[17:49:20] *** Joins: froggy (~froggy@2.235.241.212)
[17:50:15] *** Quits: froggy (~froggy@2.235.241.212) (Read error: Connection reset by peer)
[17:50:25] *** Joins: Linux77 (~7Linux7@2804:d45:8c02:b300:76d0:2bff:fe7a:f3a4)
[17:57:15] *** Quits: ARoxdale (~ARoxdale@109.78.38.164) (Ping timeout: 268 seconds)
[17:57:42] *** Joins: snowdrone (~snowdrone@user/snowdrone)
[18:00:13] *** Quits: sn0wdrone (~snowdrone@user/snowdrone) (Ping timeout: 260 seconds)
[18:05:43] *** Joins: X-Scale` (~ARM@165.201.137.78.rev.vodafone.pt)
[18:05:50] *** Quits: Linux77 (~7Linux7@2804:d45:8c02:b300:76d0:2bff:fe7a:f3a4) (Remote host closed the connection)
[18:06:03] *** Joins: Linux77 (~7Linux7@2804:d45:8c02:b300:76d0:2bff:fe7a:f3a4)
[18:06:14] *** Quits: X-Scale (~ARM@31.22.160.27) (Ping timeout: 260 seconds)
[18:06:33] *** Joins: anderson_ (~anderson@176.106.245.151)
[18:07:55] *** X-Scale` is now known as X-Scale
[18:08:25] *** Joins: phyto (~phyto@host-198-114.txbrags.bryan.tx.us.clients.pavlovmedia.net)
[18:10:34] *** Joins: adlternative (~adl@117.32.216.79)
[18:10:39] *** Joins: bitmask (~bitmask@2601:84:c702:6650:cc07:22f3:ae04:aaf9)
[18:11:23] *** Quits: bitmask (~bitmask@2601:84:c702:6650:cc07:22f3:ae04:aaf9) (Client Quit)
[18:11:26] *** Quits: anjali (~anjali@42.111.17.17) (Ping timeout: 268 seconds)
[18:11:54] *** Joins: froggy (~froggy@2.235.241.212)
[18:15:35] *** Quits: froggy (~froggy@2.235.241.212) (Read error: Connection reset by peer)
[18:16:01] *** Quits: msk (~msk@185.124.240.174) (Ping timeout: 256 seconds)
[18:17:19] *** Parts: phyto (~phyto@host-198-114.txbrags.bryan.tx.us.clients.pavlovmedia.net) (WeeChat 3.3)
[18:17:40] *** Quits: adlternative (~adl@117.32.216.79) (Quit: Konversation terminated!)
[18:18:08] *** Joins: sn0wdrone (~snowdrone@user/snowdrone)
[18:19:55] *** Quits: Albright (~Albright@2001:19f0:8001:ca4:c02b:c826:8dec:a35d) (Quit: ZNC 1.8.2 - https://znc.in)
[18:20:07] *** Joins: Albright (~Albright@149.28.13.173)
[18:20:11] *** Quits: anderson_ (~anderson@176.106.245.151) (Ping timeout: 264 seconds)
[18:20:25] *** Joins: msk (~msk@185.124.240.174)
[18:20:37] *** Quits: snowdrone (~snowdrone@user/snowdrone) (Ping timeout: 260 seconds)
[18:21:04] *** Joins: froggy (~froggy@2.235.241.212)
[18:22:15] *** sn0wdrone is now known as snowdrone
[18:23:22] *** Joins: Inline (~Inline@2a02:908:1252:7a80:89e7:f55a:92fd:8abb)
[18:23:29] *** Quits: TheHermann (~TheHerman@gateway/tor-sasl/thehermann) (Remote host closed the connection)
[18:24:08] *** Quits: leduyquang753 (~leduyquan@user/leduyquang753) (Quit: Gotta go, see you guys later.)
[18:24:21] *** Joins: TheHermann (~TheHerman@gateway/tor-sasl/thehermann)
[18:25:46] *** Joins: sn0wdrone (~snowdrone@user/snowdrone)
[18:25:47] *** Quits: frost (~frost@user/frost) (Quit: Connection closed)
[18:27:25] *** Joins: sprout (~quassel@2a02:a467:ccd6:1:907f:6d38:50a3:cb6a)
[18:28:47] *** Quits: snowdrone (~snowdrone@user/snowdrone) (Ping timeout: 260 seconds)
[18:31:10] *** Quits: sprout_ (~quassel@2a02:a467:ccd6:1:49b2:5c3a:dea0:5ca1) (Ping timeout: 268 seconds)
[18:31:45] *** Joins: snowdrone (~snowdrone@user/snowdrone)
[18:32:17] *** Quits: snowdrone (~snowdrone@user/snowdrone) (Client Quit)
[18:33:00] *** Joins: snowdrone (~snowdrone@user/snowdrone)
[18:33:46] *** Quits: sn0wdrone (~snowdrone@user/snowdrone) (Ping timeout: 250 seconds)
[18:35:15] *** Quits: Inline (~Inline@2a02:908:1252:7a80:89e7:f55a:92fd:8abb) (Quit: Leaving)
[18:38:50] *** Quits: lh_mouse (~lh_mouse@mingw-w64/developer/lhmouse) (Read error: Connection reset by peer)
[18:40:14] *** Joins: Inline (~Inline@2a02:908:1252:7a80:fbbe:75e0:a944:53e0)
[18:45:23] *** Quits: alkino (~quassel@user/alkino) (Ping timeout: 264 seconds)
[18:49:03] *** Joins: GreenResponse (~tomek@r-45-155-148-237.gpon.bialnet.pl)
[18:49:12] *** Joins: lkor (~lionkor@beammp/staff/lionkor)
[18:49:12] *** Quits: TheHermann (~TheHerman@gateway/tor-sasl/thehermann) (Ping timeout: 276 seconds)
[19:01:12] *** Quits: whupdup (~whupdup@pool-173-76-128-81.bstnma.fios.verizon.net) (Quit: Going offline, see ya! (www.adiirc.com))
[19:11:07] *** Joins: vqueiroz (uid340368@id-340368.hampstead.irccloud.com)
[19:22:32] *** Joins: varioust (~varioust@72-46-56-102.lnk.ne.static.allophone.net)
[19:23:36] *** Joins: lionkor (~lionkor@beammp/staff/lionkor)
[19:24:17] *** Joins: skapata (~Skapata@2804:14c:87b0:a6f9:48e0:406d:e67c:af6)
[19:24:17] *** Quits: skapata (~Skapata@2804:14c:87b0:a6f9:48e0:406d:e67c:af6) (Changing host)
[19:24:17] *** Joins: skapata (~Skapata@user/skapata)
[19:24:49] *** Quits: lkor (~lionkor@beammp/staff/lionkor) (Ping timeout: 268 seconds)
[19:25:58] *** Joins: RoKenn (~RoKenn@2001:a61:3505:d101:c2f7:8e7f:1dd4:38f0)
[19:25:58] *** Quits: RoKenn (~RoKenn@2001:a61:3505:d101:c2f7:8e7f:1dd4:38f0) (Changing host)
[19:25:58] *** Joins: RoKenn (~RoKenn@user/rokenn)
[19:29:10] *** Joins: triad (~triad@user/triad)
[19:33:33] *** Joins: anderson_ (~anderson@176.106.245.151)
[19:33:52] *** Joins: magla (~gelignite@55d4a5c9.access.ecotel.net)
[19:33:56] *** Joins: nostar (~nostar@2601:406:4100:34d:8f4:5ea7:30b2:b7e6)
[19:36:44] *** Joins: SorinK (~SK@79.117.198.179)
[19:40:47] *** Quits: ElectronApps (~ElectronA@user/electronapps) (Remote host closed the connection)
[19:41:14] *** Joins: pingpongball (~pingpongb@103.94.252.84)
[19:41:35] *** Joins: blackout69 (~blackout6@net-31-156-121-187.cust.vodafonedsl.it)
[19:46:33] *** Joins: chozorho (~chozorho@2601:146:300:c30::9cc7)
[19:50:18] *** Quits: Brocker (~NoBody@user/brocker) (Ping timeout: 260 seconds)
[19:50:48] *** Quits: pingpongball (~pingpongb@103.94.252.84) (Quit: Client closed)
[19:56:16] *** Quits: anderson_ (~anderson@176.106.245.151) (Ping timeout: 268 seconds)
[19:56:29] *** Joins: Tempesta (Tempesta@user/tempesta)
[19:56:31] *** Quits: Tempesta (Tempesta@user/tempesta) (Excess Flood)
[19:56:36] *** Quits: Sadale (~Sadale@user/sadale) (Ping timeout: 260 seconds)
[19:56:46] *** Joins: zmt00 (~zmt00@user/zmt00)
[19:57:29] *** Quits: ville (~ville@178-75-128-81.bb.dnainternet.fi) (Ping timeout: 268 seconds)
[19:59:22] *** Joins: whupdup (~whupdup@pool-173-76-128-81.bstnma.fios.verizon.net)
[20:01:10] <NyB> hmm... let's say I want a function to be available only for certain parameter values of a class template. Is there a more concise way than creative use of conditional class inheritance?
[20:01:21] *** Joins: Sadale (~Sadale@user/sadale)
[20:01:47] <NyB> std::enable_if still requires a version of the function to always be available in some way...
[20:02:18] *** Quits: Serpent7776 (~Serpent77@90-156-31-193.internetia.net.pl) (Read error: Connection reset by peer)
[20:02:41] *** Joins: rgrinberg (~textual@200.5.63.76)
[20:02:54] <NyB> (or at least, so it seems to me, when using the trivial std::enable_if_t<..., RetType> foo() { ... } approach)
[20:07:20] *** Joins: Serpent7776 (~Serpent77@90-156-31-193.internetia.net.pl)
[20:08:44] *** Quits: Enitin (Enitin@gateway/vpn/protonvpn/enitin) (Remote host closed the connection)
[20:09:09] *** Joins: Enitin (~Enitin@82.102.22.86)
[20:10:12] *** Joins: sprout_ (~quassel@2a02:a467:ccd6:1:e9:abf1:b887:13fa)
[20:12:55] *** Quits: sprout (~quassel@2a02:a467:ccd6:1:907f:6d38:50a3:cb6a) (Ping timeout: 268 seconds)
[20:17:47] *** Quits: llh (~llh@user/llh) (Quit: :::: ( UPP ) ::::)
[20:26:21] <lxsameer> hey folks, is it safe to assume that static variables live till the end of execution of a program?
[20:26:36] *** Quits: Inline (~Inline@2a02:908:1252:7a80:fbbe:75e0:a944:53e0) (Remote host closed the connection)
[20:26:48] *** Quits: msk (~msk@185.124.240.174) (Read error: Connection reset by peer)
[20:26:59] *** Joins: Inline (~Inline@2a02:908:1252:7a80:a4ba:4eba:916d:1ed0)
[20:27:11] *** Joins: msk (~msk@185.124.240.174)
[20:28:39] *** Joins: spaceangel (~spaceange@ip-89-176-181-220.net.upcbroadband.cz)
[20:30:58] *** Quits: neure (~TimoSuora@dzpbdx0kyyyyyyyyyyyyt-3.rev.dnainternet.fi) (Quit: Leaving)
[20:33:38] <CarloWood> Till the end of main() yes.
[20:34:07] <CarloWood> After that they are destructed in random order, so you can't assume they still exist (unless they are POD types, then they do)
[20:34:21] <sprout_> that's the usual definition of static,  but nothing prevents you from desiigning a language with different semantics
[20:35:13] <lxsameer> thanks folks
[20:35:57] <CarloWood> lxsameer: took me a few decades, but now I settled on NEVER using a global or static variable that has a constructor (or destructor). Only POD types.
[20:36:09] <CarloWood> Because otherwise you will run into problems.
[20:37:06] <sprout_> my interpreter just doesn't have globals
[20:37:28] <lxsameer> CarloWood: I'm trying to debug a code, that copies a vector from a static var, but for some reason the copied verctor return a big number as the size which is like it never got initialized
[20:37:47] <CarloWood> Instead you can use int main() { Application application; ... }  and put all the "global/static" variables in Application (not being static now). Then pass application around and make sure *everything* is destructed at the moment you leave main().
[20:38:48] <sprout_> unless you absolutely need the speed,  there's no reason to use globals.  well.  not in OO languages.
[20:39:15] <sprout_> in imperative languages like C it can be more annoying to pass a global state around.
[20:39:22] <sprout_> depends
[20:40:19] <CarloWood> lxsameer: if that happens after main then it is more likely that that static std::vector already was destructed.
[20:40:35] *** Quits: pretty_dumm_guy (trottel@gateway/vpn/protonvpn/prettydummguy/x-88029655) (Ping timeout: 264 seconds)
[20:40:53] <lxsameer> CarloWood: hmmm, but since it's a copy using std::copy it shouldn't matter
[20:40:55] <lxsameer> right?
[20:41:09] <CarloWood> You can put an object right after the vector and add a break point to its destructor to see when/where the vector is destructed.
[20:41:29] <CarloWood> // global
[20:41:38] <CarloWood> std::vector<int> v;
[20:41:49] <CarloWood> MyDetector detector;
[20:42:02] <CarloWood> then break on MyDetector::~MyDetector()
[20:42:19] <lxsameer> make sense
[20:42:24] <CarloWood> Same if they are static
[20:43:39] *** Joins: Moosadee (~Moosadee@136.32.155.193)
[20:45:11] <Alipha> NyB: I'm not sure what you mean by "std::enable_if still requires a version of the function to always be available in some way..." Can you pastebin an example?
[20:46:32] *** Quits: smallville7123 (~smallvill@cpe-172-193-72-46.qld.foxtel.net.au) (Read error: Connection reset by peer)
[20:47:00] *** Joins: tdoirc (~tdoirc@2001:470:1d:13f::10:8b84)
[20:49:25] <tdoirc> so I'm making a function for sorting columns based on what is clicked on in a table, trying to come up with a better way than switch (column) { case 0: if (ascending) sortthisway(); else sortthatway()...it seems like something that could be better served by templates though, I'm just not sure how I would go about it...
[20:50:51] <tdoirc> the various columns are members of a struct
[20:51:15] *** Joins: anderson_ (~anderson@176.106.245.151)
[20:51:47] *** Quits: rb (~augh@theguntretort.com) (Quit: ZNC - https://znc.in)
[20:52:15] <tdoirc> i'm not even sure what google search phrase would yield something close to what I'm looking for
[20:52:55] *** Joins: alkino (~quassel@user/alkino)
[20:53:37] *** Joins: rwb (~augh@theguntretort.com)
[20:55:07] *** Quits: m_ben (~m_ben@user/m-ben/x-7429725) (Quit: WeeChat 3.3)
[20:57:25] *** Quits: Inline (~Inline@2a02:908:1252:7a80:a4ba:4eba:916d:1ed0) (Read error: Connection reset by peer)
[20:57:57] *** Joins: StormGlass (~CraigDurh@2604:2d80:af07:5300:accd:fbab:7513:2aa0)
[21:01:01] *** Quits: lionkor (~lionkor@beammp/staff/lionkor) (Ping timeout: 268 seconds)
[21:01:35] *** Quits: varioust (~varioust@72-46-56-102.lnk.ne.static.allophone.net) (Ping timeout: 264 seconds)
[21:03:43] *** Quits: EdFletcher (~ubuntu@user/edfletcher) (Quit: leaving)
[21:04:13] *** Joins: ville (~ville@178-75-128-81.bb.dnainternet.fi)
[21:05:56] *** Quits: Moosadee (~Moosadee@136.32.155.193) (Quit: Leaving)
[21:06:54] <Alipha> tdoirc: what does `sortthisway` look like? Is the code identical for each column?
[21:07:26] *** Joins: Moosadee (~Moosadee@136.32.155.193)
[21:08:26] <tdoirc> sortthisway is std::sort(items.begin(), items.end(), [](const struct& a, const struct& b) { return a.member < b.member; }); and sortthatway is the same but > instead of <. member changes for every column though
[21:08:36] <tdoirc> and member can be int, double or std::string
[21:10:01] <tdoirc> it's just a lot of repetition with only small differences, but I'm not sure if templates can solve the fact it's operating on different members
[21:11:30] *** Quits: pa (~pah@user/pah) (Ping timeout: 268 seconds)
[21:11:38] *** Joins: g0zart (~g0zart@gateway/vpn/pia/g0zart)
[21:12:43] *** Joins: pah (~pah@user/pah)
[21:13:47] *** rwb is now known as rb
[21:15:16] *** Joins: Inline (~Inline@2a02:908:1252:7a80:a4ba:4eba:916d:1ed0)
[21:15:37] *** Joins: MirrorGate (~CraigDurh@2604:2d80:af07:5300:accd:fbab:7513:2aa0)
[21:17:58] *** Quits: msk (~msk@185.124.240.174) (Ping timeout: 260 seconds)
[21:18:22] <Alipha> tdoirc: I assume the types of the members are different?
[21:18:24] <tdoirc> yep
[21:18:53] <Alipha> If you're on c++17, you can use auto template parameters and member function pointers:
[21:18:59] *** Quits: StormGlass (~CraigDurh@2604:2d80:af07:5300:accd:fbab:7513:2aa0) (Ping timeout: 264 seconds)
[21:19:04] <Alipha> { Foo f{2, 3.4}; print<&Foo::x>(f); print<&Foo::y>(f); } struct Foo { int x; double y; }; template<auto MPtr> void print(Foo f) { cout << f.*MPtr << ' '; }
[21:19:05] <geordi> 2 3.4
[21:19:06] *** Quits: Fault (~Fault@152.70.112.168) (Quit: Quit.)
[21:19:20] <Alipha> That's probably hard to read
[21:19:23] <tdoirc> on c++14 at the moment, so not an option, but I'll look into it for the future
[21:19:24] *** Joins: Fault (~Fault@152.70.112.168)
[21:19:44] *** Quits: pah (~pah@user/pah) (Ping timeout: 244 seconds)
[21:20:15] *** Joins: dsrt^ (~dsrt@h50.174.139.63.static.ip.windstream.net)
[21:20:18] <Alipha> { Foo f{2, 3.4}; print<int, &Foo::x>(f); print<double, &Foo::y>(f); } struct Foo { int x; double y; }; template<typename T, T Foo::*MPtr> void print(Foo f) { cout << f.*MPtr << ' '; }
[21:20:18] <geordi> 2 3.4
[21:20:19] *** Quits: Inline (~Inline@2a02:908:1252:7a80:a4ba:4eba:916d:1ed0) (Read error: Connection reset by peer)
[21:20:23] *** Joins: Inline_ (~Inline@2a02:908:1252:7a80:a4ba:4eba:916d:1ed0)
[21:20:33] *** Joins: pah (~pah@user/pah)
[21:20:41] *** Quits: MirrorGate (~CraigDurh@2604:2d80:af07:5300:accd:fbab:7513:2aa0) (Quit: Konversation terminated!)
[21:20:51] <Alipha> tdoirc: works on c++14, but now you have to specify the member's type ^
[21:21:35] *** Quits: Inline_ (~Inline@2a02:908:1252:7a80:a4ba:4eba:916d:1ed0) (Remote host closed the connection)
[21:22:01] *** Joins: elkalamar (elkalamar@gateway/vpn/airvpn/elkalamar)
[21:22:07] <tdoirc> ok let me figure out how to apply it to my specific case :) thanks
[21:22:10] *** Joins: msk (~msk@185.124.240.174)
[21:22:34] <Alipha> So I would still have the switch statement, but each case would be simply: case 0: do_sort<int, &Foo::x>(ascending); break;
[21:23:19] <Alipha> Could also use macros *hides*
[21:23:36] <tdoirc> I could probably also just pass operator> or operator< as a function pointer too, no?
[21:23:52] <tdoirc> are operators on primitives defined as functions?
[21:23:58] *** Joins: Inline (~Inline@2a02:908:1252:7a80:a4ba:4eba:916d:1ed0)
[21:24:22] <Oxyd> No. But there are std::less and std::greater.
[21:24:24] <Alipha> tdoirc: no, but there's std::less
[21:24:45] <tdoirc> that's true :)
[21:24:47] <tdoirc> thanks
[21:29:33] *** Quits: pah (~pah@user/pah) (Ping timeout: 244 seconds)
[21:31:19] *** Joins: pah (~pah@user/pah)
[21:36:00] *** Joins: lucido (~lucido@p200300de0f1f0f2c6169ad16d5ca803e.dip0.t-ipconnect.de)
[21:37:42] *** Quits: npaperbot (~npaperbot@dodecahedron.m-ou.se) (Remote host closed the connection)
[21:37:45] *** Quits: Moosadee (~Moosadee@136.32.155.193) (Ping timeout: 256 seconds)
[21:37:52] *** Joins: npaperbot (~npaperbot@dodecahedron.m-ou.se)
[21:37:52] *** ChanServ sets mode: +v npaperbot
[21:38:50] *** Joins: lionkor (~lionkor@beammp/staff/lionkor)
[21:43:10] *** Joins: Hax0r (~Hax0r@128.127.222.243)
[21:44:31] *** Joins: pncl1 (~Hax0r@128.127.222.243)
[21:45:05] *** Quits: pncl1 (~Hax0r@128.127.222.243) (Remote host closed the connection)
[21:45:20] *** Joins: great_taste (~great_tas@190.32.235.20)
[21:45:57] *** Joins: Moosadee (~Moosadee@136.32.155.193)
[21:46:36] *** Quits: pah (~pah@user/pah) (Ping timeout: 244 seconds)
[21:47:15] <NyB> Alipha: I meant something like this: https://wandbox.org/permlink/Nk6hM3YIOxBV8uNi
[21:48:09] <NyB> I can probably make the existence of a method conditional using std::conditional and inheritance, but it would be quite painful...
[21:48:22] <Oxyd> Why would you want anything like that, though? Normally you disable functions using enable_if because you have several overloads and you don't want the wrong overload to be selected.
[21:48:22] <NyB> s/probably//
[21:48:29] *** Joins: pah (~pah@user/pah)
[21:49:19] <lxsameer> sb
[21:49:52] <NyB> it is a versatile class, and some of the methods would not make sense for some settings
[21:50:15] *** Joins: lkor (~lionkor@beammp/staff/lionkor)
[21:50:20] <Oxyd> “Versatile class” sounds like the root of your issue.
[21:50:38] *** Quits: Fault (~Fault@152.70.112.168) (Quit: Quit.)
[21:51:08] <Oxyd> Anyway, you could just if constexpr the body of the function to only do whatever it needs to do when it makes sense, and do something trivial (like return 0;) when it doesn't.
[21:51:18] *** Joins: Fault (~Fault@152.70.112.168)
[21:51:35] *** Quits: lionkor (~lionkor@beammp/staff/lionkor) (Ping timeout: 268 seconds)
[21:51:57] *** Joins: whatsupdoc (uid509081@id-509081.hampstead.irccloud.com)
[21:52:04] *** Quits: Fault (~Fault@152.70.112.168) (Client Quit)
[21:52:14] *** Quits: Hax0r (~Hax0r@128.127.222.243) (Remote host closed the connection)
[21:53:26] *** Quits: Moosadee (~Moosadee@136.32.155.193) (Ping timeout: 245 seconds)
[21:56:25] <NyB> it does just one thing... but there's a parameter controlling the number of dimensions it should track, and not all methods work for the lower dimension counts
[21:56:44] <NyB> the constexpr-if is what I'm using now
[21:57:11] <Alipha> NyB: eh, that's a quirk of how sfinae works. Let me paste something that compiles, just a sec
[21:59:39] *** Quits: blackout69 (~blackout6@net-31-156-121-187.cust.vodafonedsl.it) (Quit: Leaving.)
[21:59:45] <Alipha> NyB: https://wandbox.org/permlink/0reMk8z9a16McRj0
[22:02:57] <Alipha> NyB: you have to make the function templated so that the template argument substitution is delayed until the function is attempted to be called. since add_bloat is a class template parameter, as soon as you do `Stuff<false>`, the compiler knows what add_bloat is, and so it tries to instantiate `std::enable_if_t<add_bloat, int> bloat()` which std::enable_if_t intentionally causes the compiler error
[22:03:10] *** Joins: Hokedli (~lasliedv@gateway/tor-sasl/hokedli)
[22:04:33] *** Joins: eelstrebor (~eelstrebo@198-178-29-136.scb.ne.static.allophone.net)
[22:06:16] *** Joins: Tokamak (~Tokamak@172.58.188.16)
[22:11:33] *** Joins: Guest41 (~Guest41@eth-west-pareq2-46-193-4-100.wb.wifirst.net)
[22:12:13] *** Joins: Fault (~Fault@152.70.112.168)
[22:16:36] *** Quits: Fault (~Fault@152.70.112.168) (Client Quit)
[22:16:54] *** Joins: Fault (~Fault@152.70.112.168)
[22:18:33] *** Quits: pah (~pah@user/pah) (Ping timeout: 256 seconds)
[22:18:38] *** Quits: anderson_ (~anderson@176.106.245.151) (Ping timeout: 244 seconds)
[22:20:07] *** Joins: anderson_ (~anderson@176.106.245.151)
[22:21:49] *** Joins: pah (~pah@user/pah)
[22:21:55] *** Telvana is now known as Rob
[22:23:39] *** Quits: msk (~msk@185.124.240.174) (Ping timeout: 256 seconds)
[22:23:47] *** Quits: lucido (~lucido@p200300de0f1f0f2c6169ad16d5ca803e.dip0.t-ipconnect.de) (Ping timeout: 264 seconds)
[22:27:02] *** Joins: betelgeuse (~betelgeus@94-225-47-8.access.telenet.be)
[22:27:33] *** Quits: Tokamak (~Tokamak@172.58.188.16) (Read error: Connection reset by peer)
[22:27:46] *** Quits: Hokedli (~lasliedv@gateway/tor-sasl/hokedli) (Quit: Konversation terminated!)
[22:28:36] *** Joins: msk (~msk@185.124.240.174)
[22:32:45] *** Joins: Tokamak (~Tokamak@172.58.188.16)
[22:33:51] *** Quits: pah (~pah@user/pah) (Ping timeout: 256 seconds)
[22:35:16] *** Quits: Fault (~Fault@152.70.112.168) (Quit: Quit.)
[22:35:22] *** Joins: pah (~pah@user/pah)
[22:36:11] *** Joins: elkalamar_ (elkalamar@gateway/vpn/airvpn/elkalamar)
[22:36:13] *** Joins: Fault (~Fault@152.70.112.168)
[22:37:31] *** Quits: rgrinberg (~textual@200.5.63.76) (Quit: My MacBook has gone to sleep. ZZZzzz…)
[22:37:50] *** Quits: Inline (~Inline@2a02:908:1252:7a80:a4ba:4eba:916d:1ed0) (Remote host closed the connection)
[22:38:08] *** Joins: Inline (~Inline@2a02:908:1252:7a80:2315:e7f0:55c7:7d49)
[22:38:13] *** Joins: elkalamar__ (elkalamar@gateway/vpn/airvpn/elkalamar)
[22:38:57] *** Quits: elkalamar (elkalamar@gateway/vpn/airvpn/elkalamar) (Ping timeout: 256 seconds)
[22:39:32] *** Quits: elkalamar__ (elkalamar@gateway/vpn/airvpn/elkalamar) (Max SendQ exceeded)
[22:40:01] *** Joins: elkalamar__ (elkalamar@gateway/vpn/airvpn/elkalamar)
[22:41:11] *** Quits: rendar (~rendar@user/rendar) (Quit: Leaving)
[22:41:13] *** Quits: elkalamar_ (elkalamar@gateway/vpn/airvpn/elkalamar) (Ping timeout: 256 seconds)
[22:41:39] *** Joins: Inline_ (~Inline@2a02:908:1252:7a80:7e94:3856:5140:4361)
[22:42:31] *** Quits: Inline_ (~Inline@2a02:908:1252:7a80:7e94:3856:5140:4361) (Remote host closed the connection)
[22:42:58] *** Joins: Inline_ (~Inline@2a02:908:1252:7a80:7e94:3856:5140:4361)
[22:45:14] *** Quits: Inline (~Inline@2a02:908:1252:7a80:2315:e7f0:55c7:7d49) (Ping timeout: 268 seconds)
[22:49:23] *** Joins: hypo7r7 (~hypo7r7@uwyo-129-72-151-5.uwyo.edu)
[22:50:41] *** Joins: elkalamar_ (elkalamar@gateway/vpn/airvpn/elkalamar)
[22:50:53] *** Quits: whupdup (~whupdup@pool-173-76-128-81.bstnma.fios.verizon.net) (Quit: Going offline, see ya! (www.adiirc.com))
[22:51:44] *** Quits: g0zart (~g0zart@gateway/vpn/pia/g0zart) (Quit: Leaving)
[22:52:06] *** Quits: elkalamar_ (elkalamar@gateway/vpn/airvpn/elkalamar) (Max SendQ exceeded)
[22:52:36] *** Joins: elkalamar_ (elkalamar@gateway/vpn/airvpn/elkalamar)
[22:52:57] *** Quits: Tokamak (~Tokamak@172.58.188.16) (Read error: Connection reset by peer)
[22:53:15] *** Quits: elkalamar__ (elkalamar@gateway/vpn/airvpn/elkalamar) (Ping timeout: 268 seconds)
[22:54:48] *** Quits: pah (~pah@user/pah) (Ping timeout: 244 seconds)
[22:55:41] *** Joins: pah (~pah@user/pah)
[22:56:15] *** Joins: elkalamar (elkalamar@gateway/vpn/airvpn/elkalamar)
[22:56:20] *** Parts: hypo7r7 (~hypo7r7@uwyo-129-72-151-5.uwyo.edu) ()
[22:57:23] *** Quits: elkalamar_ (elkalamar@gateway/vpn/airvpn/elkalamar) (Ping timeout: 244 seconds)
[22:57:31] *** Quits: elkalamar (elkalamar@gateway/vpn/airvpn/elkalamar) (Max SendQ exceeded)
[22:57:55] *** Quits: Fault (~Fault@152.70.112.168) (Quit: Quit.)
[22:57:59] *** Joins: elkalamar (elkalamar@gateway/vpn/airvpn/elkalamar)
[22:58:12] *** Joins: Fault (~Fault@152.70.112.168)
[22:59:45] *** Joins: elkalamar_ (elkalamar@gateway/vpn/airvpn/elkalamar)
[23:02:45] *** Quits: elkalamar (elkalamar@gateway/vpn/airvpn/elkalamar) (Ping timeout: 256 seconds)
[23:09:25] *** Joins: andreasbuhr (~quassel@p548dde89.dip0.t-ipconnect.de)
[23:09:51] *** Joins: reset (~reset@user/reset)
[23:13:35] *** Quits: betelgeuse (~betelgeus@94-225-47-8.access.telenet.be) (Ping timeout: 268 seconds)
[23:15:54] *** Joins: sedeki (~textual@user/sedeki)
[23:17:27] *** Quits: sedeki (~textual@user/sedeki) (Client Quit)
[23:19:17] *** Quits: elkalamar_ (elkalamar@gateway/vpn/airvpn/elkalamar) (Read error: Connection reset by peer)
[23:22:00] *** Joins: elkalamar (elkalamar@gateway/vpn/airvpn/elkalamar)
[23:22:15] *** Quits: elkalamar (elkalamar@gateway/vpn/airvpn/elkalamar) (Remote host closed the connection)
[23:23:13] *** Quits: pah (~pah@user/pah) (Ping timeout: 244 seconds)
[23:24:31] *** Joins: pah (~pah@user/pah)
[23:30:14] *** Quits: pah (~pah@user/pah) (Ping timeout: 268 seconds)
[23:31:43] *** Joins: pah (~pah@user/pah)
[23:33:51] *** Quits: supernova (~quassel@2405:9800:ba11:6207:bc5f:dbea:c2f1:8c3b) (Ping timeout: 245 seconds)
[23:34:53] *** Joins: AbleBacon (~AbleBacon@user/AbleBacon)
[23:36:39] *** Quits: pah (~pah@user/pah) (Ping timeout: 244 seconds)
[23:39:57] *** Quits: Rob (~capo@user/telvana) (Quit: ZNC 1.9.x-git-156-ac57c0e5 - https://znc.in)
[23:56:46] *** Quits: micronn (~micronn@user/micronn) (Quit: brb)
[23:57:16] *** Joins: micronn (~micronn@user/micronn)
[23:58:04] *** Joins: preisi_svr (~preisi@boron.tpreisner.de)
[23:59:55] *** Quits: preisi_svr (~preisi@boron.tpreisner.de) (Client Quit)
