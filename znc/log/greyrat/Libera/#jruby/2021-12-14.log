[04:45:14] *** Quits: subbu (~subbu@user/subbu) (Quit: Leaving)
[13:08:35] *** Quits: greyrat_ (~greyrat@ip202.ip-51-178-215.eu) (Bye)
[13:08:55] *** Joins: greyrat (~greyrat@ip202.ip-51-178-215.eu)
[13:11:36] *** Server sets mode: +nt 
[13:16:45] *** Quits: greyrat_ (~greyrat@ip202.ip-51-178-215.eu) (*.net *.split)
[13:24:42] *** Quits: drbobbeaty (~drbob@c-24-14-127-107.hsd1.il.comcast.net) (Quit: Textual IRC Client: www.textualapp.com)
[13:53:09] *** Joins: drbobbeaty (~drbob@c-24-14-127-107.hsd1.il.comcast.net)
[17:42:00] *** Joins: enebo[m] (~enebo@2001:470:69fc:105::e6)
[17:42:01] <enebo[m]> ahorek: how are you benchmarking Rails?
[17:43:10] <enebo[m]> ahorek: Small hashes could be from lots of kwarg calls perhaps.  There is an activity for you if you are up for it
[17:44:29] <enebo[m]> Although maybe we should figure out how you are getting your hotspot to see what the hash is
[17:45:19] <enebo[m]> In Ruby 3 we will know if the hash is literal kwargs and so we realized we can make a LiteralHash in addition to Hash where the Literal Hash will just store the cached Hash rather than make it
[17:46:10] <enebo[m]> This could still be helpful for Ruby 2.x but it would require that we internall call clone once.  This may still be faster than running that helper (hard to say)
[17:47:53] <enebo[m]> puritylake: I was on vacation last week
[17:48:45] <enebo[m]> puritylake: I just restarted the last CI run and it appears to be updated
[17:51:11] <puritylake[m]> Cool, rather sick atm so Iâ€™ll get back to you in a few days
[17:57:29] <enebo[m]> puritylake: ok.  get well soon
[18:23:08] <headius> good morning
[18:24:01] <headius> ahorek: yeah I am curious what you are benchmarking too... generally we should be at least on par with MRI
[18:26:19] <headius> anything that much slower and I would assume we are failing to JIT some hot code
[18:28:51] <enebo[m]> Or maybe some excessive exceptions
[18:29:16] <enebo[m]> we were not even 8x slower cold last time I benchmarked
[18:29:17] <headius> Yeah another one to look for
[18:29:32] <headius> Right, seems like something is broken
[19:02:42] <headius> enebo: so welcome back, what's on your plate this week
[19:05:04] <enebo[m]> headius: what are you working on?  I am looking at 3 spec runs
[19:05:46] <enebo[m]> I restarted your last CI job this morning so the jnr stuff was updated
[19:21:56] <headius> Well I think we need to prioritize getting the keyword argument stuff working so I will probably spend time on that. I think my Christmas project will be finishing m1 support in JFFI
[19:22:28] <headius> The JNR releases took a really long time to propagate last week, I'm not sure why
[19:23:59] <enebo[m]> Some recent changes broke what I am guessing is zsuper
[19:24:06] <enebo[m]> looks like Symbol.getBytes -> null
[19:28:33] *** Joins: subbu (~subbu@user/subbu)
[19:33:11] <headius> Hmm
[19:34:27] <enebo[m]> spec:compiler hits it
[19:34:38] <enebo[m]> KW_REST_ARG_DUMMY 
[19:34:44] <enebo[m]> very likely seeing this
[19:39:42] <headius> I haven't merged my kwarg changes yet
[19:39:56] <headius> They won't fix as much as they break though right now
[19:41:54] <enebo[m]> ok
[19:50:35] <headius> Probably need to take a step back and isolate what we have for Ruby 2 compatibility and duplicate that logic to be modified for Ruby 3
[20:28:58] <edipofederle[m]> Hi, quick help, 
[20:28:58] <edipofederle[m]> At `RubyHash` I'm trying to add a new entry to the hash with:
[20:28:58] <edipofederle[m]> `op_aset(context, newKeySym, value);`
[20:28:58] <edipofederle[m]> The think is the value should be a IRubyObject, there is a way to convert any type (string, int, long, etc) to a IRubyObject? or I'm looking into wrong direction here?
[20:37:47] <enebo[m]> edipo.federle: JavaUtil.convertJavaToRuby
[20:38:14] <enebo[m]> If you know then you should just do the right thing (aka runtime.getFixnum(int))
[20:40:38] <edipofederle[m]> enebo: I see, I was looking into this one, let me try
[20:41:45] <enebo[m]> All java objects when we script Java as Ruby uses this method
[20:41:58] <enebo[m]> for all returning java objects
[20:42:14] <enebo[m]> So it does more than just find the right core type
[20:48:40] <edipofederle[m]> great. Thx!
