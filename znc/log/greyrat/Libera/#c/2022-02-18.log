[00:02:19] <ZedHedTed> tinkering is half the fun
[00:04:52] *** Quits: libc (~archer@user/tessio) (Quit: WeeChat 3.4)
[00:05:20] *** Joins: Miles2Go (~Miles2Go@104.254.216.216)
[00:05:34] <jgart> How can I take a hexdump of an empty folder (directory)?
[00:06:37] <ChoHag> cat dir | hexdump
[00:06:49] *** Joins: llh (~llh@user/llh)
[00:06:58] <nuxil> thats not C :p
[00:07:20] <jamesmartinez> C.
[00:07:30] <nuxil> perhaps look into dirent
[00:07:38] <jgart> cat and hexdump are C...
[00:07:41] <ChoHag> execve(MAKE_AN_ARRAY("sh -c 'cat dir | hexdump -C'"));
[00:07:56] *** Joins: MrFantastik (~f@2607:f598:bbda:220:cdfc:6eb1:6de:d87a)
[00:08:21] <caze> jgart: No, they are not.
[00:09:18] *** Quits: reset (~reset@user/reset) (Quit: reset)
[00:09:45] <jgart> nuxil, thanks for sharing dirent
[00:10:03] <jgart> I wasn't aware of that lib
[00:10:42] <nuxil> well if your platform is posix then dirent might be your choice. but if your on win.. you might use FindFirstFile, FindNextFile
[00:11:14] <jgart> I'm on GNU Linux (void glibc)
[00:11:49] <jgart> void linux I meant
[00:12:13] *** Joins: reset (~reset@user/reset)
[00:13:20] *** Quits: luke-jr (~luke-jr@user/luke-jr) (Quit: ZNC - http://znc.sourceforge.net)
[00:13:22] *** Quits: Miles2Go (~Miles2Go@104.254.216.216) (Quit: Leaving)
[00:13:48] *** Joins: cuppajoe (~joe@ip70-171-93-122.no.no.cox.net)
[00:14:36] *** Joins: luke-jr (~luke-jr@user/luke-jr)
[00:14:41] *** Joins: joaofukuda (~joaofukuk@2804:431:c7f4:a77a:575:562:5f94:3a18)
[00:16:56] <meator> My C book (K&R 2nd edition) recommends directly open()ing the direcroty and calling read() on it. Is it portable? Should it be used?
[00:17:26] <meator> s/direcroty/directory/
[00:17:46] <ChoHag> No.
[00:18:01] <apotheon> "What OS do you use?"  "Void GLibc."
[00:18:04] <apotheon> fun times
[00:18:23] *** Quits: Inline (~Inline@2a02:908:1252:7a80::1aa) (Quit: Leaving)
[00:18:31] *** Quits: kurahaupo (~kurahaupo@115.69.27.211) (Read error: Connection reset by peer)
[00:18:34] *** Joins: szkl (uid110435@id-110435.uxbridge.irccloud.com)
[00:18:41] <apotheon> or maybe the C should be capitalized, too
[00:18:47] *** Joins: kurahaupo (~kurahaupo@115.69.27.211)
[00:19:05] <meator> It's in K&R. They probably knew what they were doing.
[00:20:37] *** Quits: crankslider (~slidercra@user/slidercrank) (Read error: Connection reset by peer)
[00:20:46] *** Quits: motherfsck (~motherfsc@user/motherfsck) (Ping timeout: 272 seconds)
[00:23:01] *** Joins: motherfsck (~motherfsc@user/motherfsck)
[00:23:58] <meator> Why did they use this way?
[00:24:20] <ChoHag> They did not.
[00:24:27] <ChoHag> They were making it up as they went along.
[00:24:45] <jgart> apotheon, I'm hosting an oasis linux install party on 20:00 UTC Feb 25: https://github.com/oasislinux/oasis
[00:24:51] <jgart> cproc, qbe, fun times
[00:25:00] <ChoHag> What's a linux install party?
[00:25:10] <jgart> oasis linux install party
[00:25:26] <jgart> we install oasis linux on a debian server somewhere together over tmate
[00:25:44] <jgart> i.e. we convert a debian server to oasis linux
[00:25:45] <caze> meator: That chapter talks specifically about UNIX.
[00:25:50] <ChoHag> Oh...
[00:26:16] <jgart> more info at #oasis
[00:26:21] <jgart> on libera
[00:26:32] <meator> caze: So I should use open() and read() to read directories on UNIX-like systems?
[00:26:50] <Red> jgart, #c-offtopic
[00:27:07] *** Quits: strajder (~strajder@user/strajder) (Quit: leaving)
[00:27:14] *** test_ is now known as _flood
[00:27:16] <jgart> Red, thanks for the channel rec. Didn't know about that one
[00:27:17] <Earnestly> meator: plan9 would work like that, unix has readdir and crud
[00:28:02] <caze> meator: Learn about the POSIX standard.
[00:28:09] <Red> don't forget the ever so awesome (n)ftw:-)
[00:29:17] *** Quits: luke-jr (~luke-jr@user/luke-jr) (Quit: ZNC - http://znc.sourceforge.net)
[00:29:18] *** Quits: meator (~meator@user/meator) (Read error: Connection reset by peer)
[00:29:45] *** Joins: meator (~meator@user/meator)
[00:30:33] <meator> caze: Do you mean that this chapter talks about non-POSIX UNIX systems?
[00:31:07] *** Joins: luke-jr (~luke-jr@user/luke-jr)
[00:33:07] <apotheon> jgart: I'm not really interested.  I use OpenBSD.  Thanks, anyway.
[00:34:20] *** Quits: johnnyreb (~tth@user/johnnyreb) (Ping timeout: 250 seconds)
[00:34:35] *** Quits: ___nick___ (~quassel@cpc68286-cdif17-2-0-cust533.5-1.cable.virginm.net) (Ping timeout: 256 seconds)
[00:34:37] <jgart> Ah the OpenBSD meme. jk :)
[00:37:08] <apotheon> swhat
[00:38:10] <jgart> I was tring to make a reference to the "I use Arch BTW" meme
[00:38:30] *** Joins: johnnyreb (~tth@user/johnnyreb)
[00:38:50] <jgart> "I use OpenBSD.  Thanks, anyway." is the openbsd one
[00:39:11] <jgart> anyways, sorry for more offtopic
[00:43:07] * APic laughs magically.
[00:43:22] <APic> Hail to the funny looking Fish!
[00:43:50] <sham1> ><>
[00:44:34] *** Joins: sutang (~sutang@106.118.184.159)
[00:46:29] *** Quits: sutang (~sutang@106.118.184.159) (Quit: 离开)
[00:46:52] *** Quits: pucara (~i@host14.181-1-101.telecom.net.ar) (Quit: Lost terminal)
[00:48:28] *** Joins: wroathe (~wroathe@206-55-188-8.fttp.usinternet.com)
[00:48:28] *** Quits: wroathe (~wroathe@206-55-188-8.fttp.usinternet.com) (Changing host)
[00:48:28] *** Joins: wroathe (~wroathe@user/wroathe)
[00:49:37] *** Joins: reedrichards (~f@2607:f598:bbda:220:b422:9f63:ee5d:e3ad)
[00:49:43] *** Quits: MrFantastik (~f@2607:f598:bbda:220:cdfc:6eb1:6de:d87a) (Remote host closed the connection)
[00:51:06] <meator> Well now I know that I can't fully trust K&R. I'll of course use dirent for handling directories.
[00:51:12] <meator> I have to leave now.
[00:51:31] <joev> You can trust K&R if you're writing C for the PDP-11.
[00:51:45] * APic once trusted DJB
[00:51:52] <APic> Even donated Money for his writing Fund
[00:52:01] <APic> Then qmail got pwnd, and he denied the Claim
[00:52:24] *** Quits: meator (~meator@user/meator) (Quit: Leaving)
[00:52:25] *** Quits: admal (~admal@gateway/tor-sasl/admal) (Quit: leaving)
[00:52:37] <APic> https://cr.yp.to/qmail/guarantee.html
[00:52:39] <APic> *sigh*
[00:53:57] *** Joins: lukedashjr (~luke-jr@user/luke-jr)
[00:54:06] *** Quits: luke-jr (~luke-jr@user/luke-jr) (Ping timeout: 252 seconds)
[00:54:15] *** Quits: mh3f (~mdhowle@cpe-98-25-217-234.sc.res.rr.com) (Remote host closed the connection)
[00:55:24] *** Joins: mh3f (~mdhowle@cpe-98-25-217-234.sc.res.rr.com)
[00:55:40] *** lukedashjr is now known as luke-jr
[00:56:45] *** Quits: mh3f (~mdhowle@cpe-98-25-217-234.sc.res.rr.com) (Remote host closed the connection)
[00:57:17] *** Joins: mh3f (~mdhowle@cpe-98-25-217-234.sc.res.rr.com)
[00:58:10] *** Quits: cuppajoe (~joe@ip70-171-93-122.no.no.cox.net) (Quit: WeeChat 3.4)
[00:59:31] *** Joins: kitsunenokenja (~kitsunech@68.91.220.96)
[01:02:33] *** Quits: pulse (~pulse@user/pulse) (Remote host closed the connection)
[01:02:53] *** Joins: pulse (~pulse@user/pulse)
[01:03:00] *** Quits: TallonRain (sid214799@user/tallonrain) (Ping timeout: 240 seconds)
[01:03:06] *** Joins: indiana-bones (~indignant@94.140.8.133)
[01:03:24] *** Quits: subvisor (sid502026@id-502026.helmsley.irccloud.com) (Ping timeout: 240 seconds)
[01:03:24] *** Quits: ullbeking_ (sid5364@id-5364.ilkley.irccloud.com) (Ping timeout: 240 seconds)
[01:03:24] *** Quits: Olfodr (sid535265@user/Olfodr) (Ping timeout: 240 seconds)
[01:04:09] *** Quits: varaindemian (uid73404@id-73404.ilkley.irccloud.com) (Quit: Connection closed for inactivity)
[01:04:12] *** Quits: whatsupdoc (uid509081@id-509081.hampstead.irccloud.com) (Ping timeout: 240 seconds)
[01:04:12] *** Quits: zx2c4 (sid204921@gentoo/developer/zx2c4) (Ping timeout: 240 seconds)
[01:04:21] *** Quits: indiana-bones (~indignant@94.140.8.133) (Remote host closed the connection)
[01:04:36] *** Quits: szkl (uid110435@id-110435.uxbridge.irccloud.com) (Ping timeout: 240 seconds)
[01:04:45] *** Joins: indiana-bones (~indignant@94.140.8.133)
[01:05:00] *** Quits: Manouchehri (sid384576@id-384576.hampstead.irccloud.com) (Ping timeout: 240 seconds)
[01:05:36] *** Joins: subvisor (sid502026@id-502026.helmsley.irccloud.com)
[01:05:36] *** Joins: TallonRain (sid214799@user/tallonrain)
[01:05:37] *** Joins: whatsupdoc (uid509081@id-509081.hampstead.irccloud.com)
[01:05:37] *** Joins: Olfodr (sid535265@user/Olfodr)
[01:05:39] *** Joins: Manouchehri (sid384576@id-384576.hampstead.irccloud.com)
[01:05:51] *** Joins: zx2c4 (sid204921@gentoo/developer/zx2c4)
[01:05:58] *** Joins: szkl (uid110435@id-110435.uxbridge.irccloud.com)
[01:06:11] *** Joins: ullbeking_ (sid5364@id-5364.ilkley.irccloud.com)
[01:09:18] *** Quits: Serpent7776 (~Serpent77@90-156-31-193.internetia.net.pl) (Quit: leaving)
[01:09:25] *** Quits: ZedHedTed (~ZedHedTed@user/zedhedted) (Remote host closed the connection)
[01:09:41] *** Joins: ZedHedTed (~ZedHedTed@user/zedhedted)
[01:11:37] *** Joins: rgrinberg (~textual@2806:101e:7:5da4:65d3:f1ae:4dc5:b40a)
[01:16:23] *** Quits: mven (~mven@ip68-104-39-54.lv.lv.cox.net) (Quit: Goodbye.)
[01:19:02] *** Quits: wroathe (~wroathe@user/wroathe) (Ping timeout: 272 seconds)
[01:20:45] *** Joins: abf (~abf@user/abf)
[01:21:48] *** Quits: jjido (~Denis@2a02:c7f:5c91:e700:2155:642c:a2e:a545) (Quit: Textual IRC Client: www.textualapp.com)
[01:22:27] *** Quits: karakedi (~eAC53C340@user/karakedi) (Ping timeout: 256 seconds)
[01:22:57] *** Quits: kilolympus (~kilolympu@vpn-fn-230.net.ed.ac.uk) (Ping timeout: 240 seconds)
[01:23:13] *** Joins: kilolympus (~kilolympu@vpn-fn-230.net.ed.ac.uk)
[01:24:49] *** Joins: wroathe (~wroathe@user/wroathe)
[01:24:51] *** Quits: acerbic (~acerbic@cs-xdata-50-86-55-163.cspire.com) (Read error: Connection reset by peer)
[01:29:02] *** Joins: hashfunc1316 (~user@162.254.115.155)
[01:29:37] *** Quits: wroathe (~wroathe@user/wroathe) (Ping timeout: 240 seconds)
[01:30:11] *** Joins: karakedi (~eAC53C340@user/karakedi)
[01:30:18] *** Quits: hashfunc1316 (~user@162.254.115.155) (Remote host closed the connection)
[01:30:35] *** Joins: hashfunc107 (~user@162.254.115.155)
[01:31:48] *** Quits: gh34 (~textual@cpe-184-58-181-106.wi.res.rr.com) (Quit: Textual IRC Client: www.textualapp.com)
[01:32:36] *** Quits: kitsunenokenja (~kitsunech@68.91.220.96) (Ping timeout: 240 seconds)
[01:32:54] *** Joins: synaps3 (~void@user/synaps3)
[01:33:58] *** Joins: mven (~mven@ip68-104-39-54.lv.lv.cox.net)
[01:35:42] *** Joins: AbleBacon (~AbleBacon@user/AbleBacon)
[01:39:29] *** Quits: Juliu (~Juliu@2a02:810b:c640:3ec0:a131:11ab:1111:d3c5) (Read error: Connection reset by peer)
[01:39:51] *** Joins: Juliu (~Juliu@2a02:810b:c640:3ec0:a131:11ab:1111:d3c5)
[01:41:51] *** Quits: kurahaupo (~kurahaupo@115.69.27.211) (Ping timeout: 272 seconds)
[01:42:32] *** Joins: z4kpi (~z4kpi@user/zacts)
[01:43:57] *** Joins: Inline (~Inline@2a02:908:1252:7a80::1aa)
[01:44:45] *** Joins: Richard_Cavell (uid165693@id-165693.ilkley.irccloud.com)
[01:49:29] *** Joins: kurahaupo (~kurahaupo@115.69.27.211)
[01:50:57] *** Quits: Dean (~Dean@user/De4n-Whit3/x-9385125) (Quit: Lost terminal)
[01:53:58] *** Quits: cosimone (~user@93-47-231-171.ip115.fastwebnet.it) (Quit: stay out of trouble you crazy kids, and don't hop on the NICE BOAT)
[01:58:56] *** Quits: brad_mssw (~bhouse@c-76-106-206-149.hsd1.fl.comcast.net) (Ping timeout: 272 seconds)
[01:59:42] *** Quits: tech_exorcist (txrcst@user/tech-exorcist/x-0447479) (Quit: Disconnecting)
[02:00:37] *** Quits: magla (~gelignite@55d4275f.access.ecotel.net) (Quit: Stay safe!)
[02:00:45] *** Quits: alch (~alch@151.38.14.92) (Read error: Connection reset by peer)
[02:02:07] *** Quits: hashfunc107 (~user@162.254.115.155) (Ping timeout: 256 seconds)
[02:02:27] *** Quits: motherfsck (~motherfsc@user/motherfsck) (Quit: quit)
[02:03:47] *** Joins: alch (~alch@151.36.30.3)
[02:04:57] *** Joins: oxfuxxx (~oxfuxxx@37.19.212.98)
[02:07:19] *** Quits: reedrichards (~f@2607:f598:bbda:220:b422:9f63:ee5d:e3ad) (Quit: Leaving)
[02:08:50] *** Joins: dave0 (~davezero@069.d.003.ncl.iprimus.net.au)
[02:10:42] *** Joins: henistein (~henistein@2001:8a0:c18a:f601:c8c5:50fc:6367:1c36)
[02:10:58] *** Parts: henistein (~henistein@2001:8a0:c18a:f601:c8c5:50fc:6367:1c36) ()
[02:11:47] *** Joins: Atque (~Atque@user/atque)
[02:12:26] *** Quits: Atque (~Atque@user/atque) (Client Quit)
[02:12:37] *** Quits: AlbertoGP (~AlbertoGP@p57a9ade3.dip0.t-ipconnect.de) (Quit: Leaving)
[02:13:55] *** Joins: brad_mssw (~bhouse@2601:344:4100:b490:4121:b7be:b788:95d6)
[02:19:17] *** Joins: alphabeta (~kilolympu@vpn-fn-230.net.ed.ac.uk)
[02:19:25] *** Quits: kilolympus (~kilolympu@vpn-fn-230.net.ed.ac.uk) (Ping timeout: 256 seconds)
[02:19:35] *** Quits: floatcomplex (~floatcomp@wireguard/tunneler/floatcomplex) (Read error: Connection reset by peer)
[02:19:57] *** Joins: salty_hermes[m] (~saltyherm@2001:470:69fc:105::1:76a4)
[02:21:23] *** Joins: floatcomplex (~floatcomp@wireguard/tunneler/floatcomplex)
[02:21:36] *** Quits: aradesh (~aradesh@user/aradesh) (Quit: WeeChat 1.9.1)
[02:24:53] <Earnestly> APic: Which?
[02:25:14] *** Quits: Akuli (~Akuli@82-203-164-188.bb.dnainternet.fi) (Quit: Akuli)
[02:26:54] <Earnestly> APic: Is there a link to to this qmail exploit?
[02:28:58] *** Quits: mrig (~mrig@user/mrig) (Quit: WeeChat 2.8)
[02:32:13] *** Quits: kenanmarasli (~kenanmara@user/kenanmarasli) (Quit: Leaving)
[02:33:24] *** Quits: pizdets (~pizdets@183.182.110.81) (Ping timeout: 240 seconds)
[02:33:53] *** Joins: pizdets_ (~pizdets@183.182.110.76)
[02:39:48] *** Quits: joev (~joev@user/joev) (Ping timeout: 240 seconds)
[02:40:06] *** Quits: bebyx (~Thunderbi@user/bebyx) (Ping timeout: 272 seconds)
[02:40:21] *** Joins: auk (auk@gateway/vpn/protonvpn/auk)
[02:40:35] *** Quits: mven (~mven@ip68-104-39-54.lv.lv.cox.net) (Quit: Goodbye.)
[02:41:02] *** Joins: joev (~joev@user/joev)
[02:42:04] *** Joins: mven (~mven@ip68-104-39-54.lv.lv.cox.net)
[02:42:38] *** Quits: brad_mssw (~bhouse@2601:344:4100:b490:4121:b7be:b788:95d6) (Quit: Leaving)
[02:44:37] *** Quits: finalsummer (~finalsumm@user/finalsummer) (Ping timeout: 240 seconds)
[02:44:45] *** Joins: acerbic (~acerbic@cs-xdata-50-86-53-119.cspire.com)
[02:45:01] <leah2> https://www.qualys.com/2020/05/19/cve-2005-1513/remote-code-execution-qmail.txt
[02:45:34] <leah2> just the usual "djb doesnt use size_t" fuckup
[02:46:00] *** Quits: mven (~mven@ip68-104-39-54.lv.lv.cox.net) (Client Quit)
[02:46:26] *** Quits: Devinn (~Devinn@searspoint.nvidia.com) (Ping timeout: 272 seconds)
[02:46:37] *** Quits: mniip (mniip@libera/staff/mniip) (Ping timeout: 606 seconds)
[02:46:45] *** Joins: pulse_ (~pulse@user/pulse)
[02:48:50] *** Joins: mven (~mven@ip68-104-39-54.lv.lv.cox.net)
[02:49:48] *** Quits: pulse (~pulse@user/pulse) (Ping timeout: 240 seconds)
[02:50:30] *** Joins: finalsummer (~finalsumm@user/finalsummer)
[02:51:00] *** Quits: joev (~joev@user/joev) (Ping timeout: 240 seconds)
[02:51:29] <Earnestly> Oh so this is the venema thing?
[02:52:00] *** Quits: LucaTM (~LucaTM@user/lucatm) (Quit: Textual IRC Client: www.textualapp.com)
[02:52:21] *** Joins: joev (~joev@user/joev)
[02:52:50] <Earnestly> Ah, no it can do ACE, nice
[02:54:25] *** Joins: mniip (mniip@libera/staff/mniip)
[02:56:43] *** Joins: Guest57 (~Guest57@eduroam-external-69.leeds.ac.uk)
[02:56:49] *** Joins: soapsudsxx (~soapsudsx@141.193.188.140)
[02:57:15] *** Quits: z4kpi (~z4kpi@user/zacts) (Quit: Client closed)
[02:57:34] <Earnestly> It's kind of them to include a patch
[02:58:21] *** Quits: figrita (~figrita@2603-7080-9801-332f-5813-eeaf-976d-830a.res6.spectrum.com) (Remote host closed the connection)
[02:58:31] *** Quits: mahmutov (~mahmutov@5.176.3.157) (Ping timeout: 256 seconds)
[02:59:19] *** Quits: Guest57 (~Guest57@eduroam-external-69.leeds.ac.uk) (Client Quit)
[02:59:27] <oscurochu> im learning how to use make. i have foo.c and bar.c i want to make foobar.o. then i want to link foobar.o and baz.o to make foodbarbaz.o
[02:59:49] <oscurochu> how do i do i link two object files to make a new objec file?
[03:00:50] <Earnestly> You wouldn't change the name of the .o file from the .c/.h files.  Try ##workingset though
[03:01:24] <Earnestly> And perhaps the old oreilly book on 'managing projects with gnu make' since it explains make in general in the beginning
[03:01:27] <fizzie> Also, linking several object files together into a new object file (rather than an executable, or bundling them into a library) is an uncommon thing to do, Make or not.
[03:01:44] <fizzie> (*Possible*, but uncommon.)
[03:02:06] *** Quits: whupdup (~whupdup@pool-173-76-128-81.bstnma.fios.verizon.net) (Quit: Going offline, see ya! (www.adiirc.com))
[03:02:24] <oscurochu> true
[03:02:48] *** Quits: plastico (~plastico@neomutt/plastico) (Quit: WeeChat 3.4)
[03:02:59] *** Joins: Nutcrawler (~sergio@217-180-232-30.sycmilaa.metronetinc.net)
[03:03:03] <synaps3> what is easy to use graphics library for C ?
[03:03:10] <synaps3> or is C bad choice for graphics ?
[03:03:29] <fizzie> Anyway, in the abstract you'd do it the same you do any other thing with Make: list the target (foobarbaz.o), its prerequisites (foobar.o, baz.o) and the recipe to make the former from the latter.
[03:03:38] <dave0> synaps3: sdl2
[03:04:00] <dave0> synaps3: https://libsdl.org/
[03:04:01] <candide> Title of dave0's link: Simple DirectMedia Layer - Homepage
[03:04:08] *** Joins: figrita (~figrita@2603-7080-9801-332f-5813-eeaf-976d-830a.res6.spectrum.com)
[03:04:23] <oscurochu> well i mostly dont know what im doing. this is all purely for learning
[03:04:35] *** Quits: _mikey (~mikey@user/mikey/x-4335048) (Ping timeout: 240 seconds)
[03:04:56] *** Joins: constxd_ (~brad@142.134.79.191)
[03:05:18] <oscurochu> so what i did was a made a c file for each function. i have a header file to  declare all of the functions ahead of time, which is share by most of the c files.
[03:05:29] *** Quits: Betal (~Betal@user/betal) (Quit: WeeChat 3.4)
[03:05:49] <oscurochu> then i used make to compile each c file individually
[03:06:19] <floatcomplex> don't do that
[03:06:38] <oscurochu> what should i do?
[03:06:45] <floatcomplex> you should have one .h file per .c file except for the .c file that has main() in it
[03:07:00] <floatcomplex> don't divide functions up into different files for the hell of it
[03:07:36] <floatcomplex> divide things up by what logically must be used together vs what may be used separately
[03:08:43] *** Joins: _mikey (~mikey@user/mikey/x-4335048)
[03:09:52] <oscurochu> well at this point im really glad i learned how to use git branch haha
[03:10:31] <oscurochu> i started out with every function being in only one file
[03:10:33] <dave0> oscurochu: here's a simple makefile along the lines of what i use... https://termbin.com/pmo6
[03:10:41] *** Quits: indiana-bones (~indignant@94.140.8.133) (Ping timeout: 256 seconds)
[03:11:36] *** Quits: merrinx (~merrinx@ti0028a400-1685.bb.online.no) (Quit: WeeChat 3.3)
[03:11:38] *** Joins: Betal (~Betal@user/betal)
[03:13:14] *** Quits: ioxzev1z (~ioxzev1z@user/ioxzev1z) (Quit: Leaving)
[03:14:18] *** Quits: adip (~adip@dia24.neoplus.adsl.tpnet.pl) (Ping timeout: 272 seconds)
[03:14:56] *** Quits: adip_ (~adip@dia24.neoplus.adsl.tpnet.pl) (Ping timeout: 272 seconds)
[03:17:44] <synaps3> ok sdl2 it is then
[03:17:54] *** Joins: z4kpi (~z4kpi@user/zacts)
[03:21:14] *** Quits: blindguard (~blindguar@2a02:908:1864:c200::ef3c) (Quit: Konversation terminated!)
[03:23:16] *** Joins: lukedashjr (~luke-jr@user/luke-jr)
[03:23:42] *** Quits: oxfuxxx (~oxfuxxx@37.19.212.98) (Quit: Yankies Motherfh@ckers C0[k Astroboys)
[03:24:23] *** Joins: oxfuxxx (~oxfuxxx@217.138.213.30)
[03:25:09] *** Quits: luke-jr (~luke-jr@user/luke-jr) (Ping timeout: 256 seconds)
[03:25:31] *** lukedashjr is now known as luke-jr
[03:25:59] <masoudd> synaps3, Depends. If you want immediate mode, raylib + raygui works. Otherwise GTK
[03:27:24] <synaps3> i wanna do graphics animations
[03:27:31] <synaps3> something like processing but for C
[03:27:43] <synaps3> now SDL2 looks a bit hard but i think it will pay off
[03:27:52] <synaps3> i never got raylib to work tbh
[03:29:31] <masoudd> raylib is so simple though
[03:31:53] <oscurochu> So if i have one .h file per .c file, does that also mean that some files i may have to #include multiple .h files?
[03:32:21] <dave0> synaps3: https://paste.c-net.org/SalesmenPsycho
[03:33:51] <dave0> oscurochu: that's the usual way .. if you have foo.c and foo.h and you want to call a function from bar.c usually you put #include "foo.h" in bar.c
[03:34:05] <oscurochu> ok cool
[03:34:20] <oscurochu> so why is it bad to have one file per function?
[03:35:04] <oscurochu> i've adopted that rule with other languages and it has worked well for me. of course though, c is not "other languages"
[03:35:06] <dave0> it's no worse than putting everything in one file
[03:35:32] <dave0> you end up with lots of files
[03:36:35] <oscurochu> someone said this: "don't divide functions up into different files for the hell of it"
[03:37:01] <oscurochu> but why not? i feel like its more organized that way.
[03:37:01] *** Quits: Betal (~Betal@user/betal) (Quit: WeeChat 3.4)
[03:37:17] <dave0> use whatever is easiest for you
[03:37:44] <dave0> i usually group related functions in a single file, but i don't let them get too large
[03:37:56] <dave0> i don't write large programs though
[03:38:02] *** Quits: masoudd (~masoudd@user/masoudd) (Remote host closed the connection)
[03:38:31] <synaps3> hm this allegro looks nice
[03:39:30] *** Joins: Betal (~Betal@user/betal)
[03:39:42] *** Quits: luke-jr (~luke-jr@user/luke-jr) (Quit: ZNC - http://znc.sourceforge.net)
[03:40:04] *** Joins: ferdna (~ferdna@user/ferdna)
[03:40:39] *** Joins: Zambyte (~Zambyte@cpe-104-228-60-14.nycap.res.rr.com)
[03:41:29] *** Joins: luke-jr (~luke-jr@user/luke-jr)
[03:42:58] <dave0> synaps3: i think glfw was one of the smaller and simpler libraries to use
[03:43:23] <dave0> sdl2 has lots of features
[03:48:23] *** Quits: constxd_ (~brad@142.134.79.191) (Ping timeout: 256 seconds)
[03:50:43] *** pulse_ is now known as pulse
[03:51:40] *** Quits: Wulf (~Wulf@user/wulf) (Ping timeout: 272 seconds)
[03:52:40] *** Quits: dave0 (~davezero@069.d.003.ncl.iprimus.net.au) (Quit: dave's not here)
[03:52:46] *** Joins: Wulf (~Wulf@user/wulf)
[03:54:08] *** Joins: crashrep (~crashrep@user/crashrep)
[03:59:16] *** Quits: Burgundy (~NA@86.121.143.206) (Ping timeout: 272 seconds)
[04:00:24] *** Quits: Klinda (~superleag@user/klinda) (Quit: Konversation terminated!)
[04:04:28] *** Quits: zeenk (~zeenk@2a02:2f04:a30d:1300:51a3:bcfc:6cda:9fc5) (Quit: Konversation terminated!)
[04:05:10] *** Quits: vicfred (~vicfred@user/vicfred) (Quit: Leaving)
[04:06:52] *** Joins: fengdaolong (~fengdaolo@171.43.210.93)
[04:09:03] *** Quits: kurahaupo (~kurahaupo@115.69.27.211) (Ping timeout: 256 seconds)
[04:10:41] *** Quits: z4kpi (~z4kpi@user/zacts) (Quit: Client closed)
[04:15:01] *** Quits: steve__ (~steve@ool-182c2b80.dyn.optonline.net) (Ping timeout: 256 seconds)
[04:15:15] *** Joins: kurahaupo (~kurahaupo@115.69.27.211)
[04:15:24] *** Quits: rgrinberg (~textual@2806:101e:7:5da4:65d3:f1ae:4dc5:b40a) (Ping timeout: 252 seconds)
[04:16:11] *** Joins: wroathe (~wroathe@206-55-188-8.fttp.usinternet.com)
[04:16:11] *** Quits: wroathe (~wroathe@206-55-188-8.fttp.usinternet.com) (Changing host)
[04:16:11] *** Joins: wroathe (~wroathe@user/wroathe)
[04:17:12] *** Quits: figrita (~figrita@2603-7080-9801-332f-5813-eeaf-976d-830a.res6.spectrum.com) (Remote host closed the connection)
[04:23:00] *** Quits: oscurochu (~oscurochu@2603:9000:c202:1034:5991:474:8074:a98a) (Ping timeout: 240 seconds)
[04:27:26] *** Quits: freep (~freepppp@193.92.35.32.dsl.dyn.forthnet.gr) (Read error: Connection reset by peer)
[04:30:31] *** Quits: seninha (~seninha@user/seninha) (Quit: Leaving)
[04:32:01] *** Quits: random-nick (~random-ni@87.116.167.125) (Ping timeout: 256 seconds)
[04:33:32] *** Joins: CatCow (~wtf_over@c-73-96-109-206.hsd1.or.comcast.net)
[04:41:16] *** Quits: dogbert2 (~Bill@ip68-227-25-62.lv.lv.cox.net) (Remote host closed the connection)
[04:41:21] *** Quits: joev (~joev@user/joev) (Ping timeout: 256 seconds)
[04:41:32] *** Joins: dogbert2 (~Bill@ip68-227-25-62.lv.lv.cox.net)
[04:42:19] *** Joins: joev (~joev@user/joev)
[04:42:49] *** Quits: pretty_dumm_guy (trottel@gateway/vpn/protonvpn/prettydummguy/x-88029655) (Quit: WeeChat 3.4)
[04:45:21] *** Joins: chenqisu1 (~chenqisu1@183.217.200.249)
[04:45:22] *** Joins: z4kpi (~z4kpi@user/zacts)
[04:46:23] *** Joins: catern (~sbaugh@2604:2000:8fc0:b:a9c7:866a:bf36:3407)
[04:46:58] <catern> const int const * is the same thing as const int * or int const * right?
[04:47:35] <caze> Yes.
[04:48:06] *** Joins: seninha (~chatzilla@user/seninha)
[04:52:25] *** Quits: doorzan (~doorzan@user/doorzan) (Quit: Leaving)
[04:54:36] *** Quits: joev (~joev@user/joev) (Ping timeout: 240 seconds)
[04:55:01] *** Joins: joev (~joev@user/joev)
[04:55:40] <floatcomplex> should be a compiler warning though
[04:57:47] *** Joins: evanextreme (~evan@2604:4080:1000:8150:e023:d964:d20f:a5e5)
[04:58:07] *** Quits: ckdCreations (~ckdCreati@147.55.133.137) (Read error: Connection reset by peer)
[04:58:26] *** Joins: ckdCreations (~ckdCreati@c-73-140-151-116.hsd1.wa.comcast.net)
[05:04:01] *** Quits: Charadon (~Charadon@155.138.164.183) (Ping timeout: 256 seconds)
[05:10:59] *** Joins: VoidSync (~sync@user/voidsync)
[05:13:50] *** Joins: MsMary (~MsMary@S01069050ca4e3573.cg.shawcable.net)
[05:16:18] <floatcomplex> synaps3: on the pi zero with the minimal inage, no x11, with an hdmi tv you can literally just mmap /dev/fb0 and treat it as a 1920x1080 array of uint16_t's. kinda like a vic 20. can't get much lower level than that on linux
[05:16:33] <floatcomplex> but you should probably use sdl
[05:20:45] *** Quits: abf (~abf@user/abf) (Quit: Leaving)
[05:22:16] <synaps3> floatcomplex, i don't think you can write directly to frame buffer
[05:23:57] *** Quits: Richard_Cavell (uid165693@id-165693.ilkley.irccloud.com) (Quit: Connection closed for inactivity)
[05:29:42] <MsMary> wow
[05:29:49] <MsMary> ive been banned from the main #programming channel
[05:29:52] <MsMary> !ops
[05:29:53] <MsMary> !alert
[05:29:57] <MsMary> !ops
[05:30:14] <MsMary> this is absurd and a miscarriage of justice
[05:30:19] <MsMary> and an tragedy for everyone
[05:31:23] <wroathe> Thank you for making me aware. I'll make sure this feedback goes right to the top.
[05:31:58] *** Joins: hanzo (uid532183@user/hanzo)
[05:33:53] <fizzie> There's no such thing as #programming on this network; or rather, it's just a forwarder into ##programming.
[05:34:29] <caze> I thought they got rid of ##
[05:34:52] <MsMary> wroathe thank you so much
[05:34:54] <caze> (in general)
[05:34:59] <MsMary> I've always respected you
[05:35:05] <fizzie> No, they just added a third category which I think most communities went for instead.
[05:35:13] <MsMary> I actually have no idea why they banned me?
[05:35:49] *** Quits: SaltHillStroller (~SaltHillS@206.223.160.26) (Ping timeout: 256 seconds)
[05:36:02] <fizzie> In addition to single-# project channels and double-## informal channels, they added single-# community channels.
[05:37:02] <wroathe> MsMary: Most channels have a corresponding -ops or -appeals channel where you can ask the ops such questions
[05:37:11] <wroathe> Instead of complaining in #c
[05:38:26] <wroathe> Also, I just got off the phone with Biden. He doesn't care that you were banned from #programmming.
[05:39:47] <MsMary> wroathe: how do i find the appropriate ops channel for any given channel is there a convention like channels-ops?
[05:40:19] *** Quits: AbleBacon (~AbleBacon@user/AbleBacon) (Read error: Connection reset by peer)
[05:40:43] *** Joins: AbleBacon (~AbleBacon@user/AbleBacon)
[05:40:44] <floatcomplex> synaps3: maybe you can't when x11 is involved but you definitely can when it's just a console
[05:41:04] <floatcomplex> can literally cat /dev/urandom to it
[05:41:06] <floatcomplex> try it
[05:41:08] <wroathe> MsMary: /msg alis list programming
[05:42:31] <synaps3> floatcomplex, can i ctrl+c if i cat random to it
[05:44:12] *** Quits: vin (~vin@user/crash) (Ping timeout: 240 seconds)
[05:44:28] <kurahaupo> synaps3: ctrl-C is a function of the controlling terminal of a process group, so unless you've set a shell trap to ignore SIGINT, there's no reason why cat shouldn't die when you hit ctrl-C
[05:45:04] <synaps3> cat: write error: No space left on device
[05:45:08] <synaps3> dang
[05:45:18] *** Joins: vin (~vin@user/crash)
[05:45:30] <floatcomplex> synaps3: just press enter
[05:45:37] <floatcomplex> or type reset
[05:45:59] <floatcomplex> you can avoid the no space left on device error (which is just an annoyance) by dd'ing exactly the right number of bytes to it
[05:46:02] <synaps3> still the same
[05:46:09] <floatcomplex> is it drawing anything?
[05:46:15] <synaps3> nope
[05:46:21] <synaps3> just exits
[05:46:41] <floatcomplex> that's the expected behaviour but it should also draw
[05:46:48] <floatcomplex> in what context are you doing this
[05:47:05] *** Quits: Y4knotiS (~YaknotiS@cpc1-cmbg18-2-0-cust87.5-4.cable.virginm.net) (Ping timeout: 256 seconds)
[05:47:12] <synaps3> from terminal
[05:47:17] <synaps3> mate DE
[05:47:21] <synaps3> mate terminal
[05:50:36] *** Joins: figrita (~figrita@2603-7080-9801-332f-5813-eeaf-976d-830a.res6.spectrum.com)
[05:54:48] *** Quits: drbeco (~beco@2804:351c:dd01:6600:e4a2:7a5d:e23f:1fd8) (Quit: Leaving)
[05:56:43] *** Joins: SaltHillStroller (~SaltHillS@206.223.160.26)
[05:58:58] *** Quits: ka80 (~ka80@user/ka80) (Ping timeout: 272 seconds)
[06:00:12] *** Quits: Rounin (~david@84.212.130.215) (Ping timeout: 240 seconds)
[06:02:46] *** Quits: alch (~alch@151.36.30.3) (Ping timeout: 272 seconds)
[06:03:00] *** Joins: ka80 (~ka80@user/ka80)
[06:04:04] *** Quits: justGhost (~justache@user/justache) (Read error: Connection reset by peer)
[06:04:10] *** Joins: alch (~alch@151.36.92.227)
[06:04:44] *** Joins: justGhost (~justache@user/justache)
[06:06:05] *** Joins: slidercrank (~slidercra@user/slidercrank)
[06:06:34] *** A_Dragon is now known as NotRegistered
[06:06:48] *** NotRegistered is now known as A_Dragon
[06:06:52] *** Joins: ironman (~ironman@2405:201:1010:b033:bad0:8910:44c9:da61)
[06:09:09] *** evanextreme is now known as evanextreme[away
[06:09:23] *** Joins: mh3f_ (~mdhowle@cpe-98-25-217-234.sc.res.rr.com)
[06:11:24] *** Quits: mh3f (~mdhowle@cpe-98-25-217-234.sc.res.rr.com) (Ping timeout: 240 seconds)
[06:13:52] *** Quits: Torr (~Torr@user/torr) ()
[06:13:56] <floatcomplex> synaps3: yeah you need to be in a non graphical environment entirely
[06:13:58] <floatcomplex> not mate
[06:15:38] <caze> It'd be funny if he were trying this over an ssh session on a headless server.
[06:18:20] *** Quits: Myth (~pi@173.233.125.203) (Quit: WeeChat 3.0)
[06:18:26] *** Quits: floatcomplex (~floatcomp@wireguard/tunneler/floatcomplex) (Quit: problems)
[06:19:23] *** Joins: floatcomplex (~floatcomp@wireguard/tunneler/floatcomplex)
[06:21:31] <synaps3> who knows
[06:21:36] <synaps3> maybe i am haha
[06:23:32] *** Quits: epony (epony@user/epony) (Ping timeout: 240 seconds)
[06:24:02] *** Quits: evanextreme[away (~evan@2604:4080:1000:8150:e023:d964:d20f:a5e5) (Quit: My laptop has gone to sleep. Bye!)
[06:24:30] <floatcomplex> hence me preceding everything i said with "if you are on a raspberry pi with an hdmi monitor and not in x11"
[06:24:54] <floatcomplex> probably in other scenarios too but that's the one i'm currently doing, and it works fine
[06:27:25] <fizzie> I used to spend most of my time in a framebuffer console on a Matrox graphics card, which MPlayer had a pretty cool hardware-accelerated (well, just colorspace conversion and scaling, not decoding) video driver (`mga`) for.
[06:27:59] <fizzie> Feels like fbdev usage has kind of gone out of fashion though. I think DirectFB got abandoned too?
[06:28:23] <floatcomplex> fbdev works fine
[06:28:33] <floatcomplex> directfb is definitely bitrotted and doesn't work
[06:29:31] <floatcomplex> using kmsdrm directly also works fine and is the recommended upgrade path from fbdev, it's just a bit needlessly harder to set up
[06:29:45] <floatcomplex> but is still only like 120 lines of boilerplate c to get you to where fbdev gets you
[06:30:01] *** Quits: crashrep (~crashrep@user/crashrep) (Quit: WeeChat 3.4)
[06:30:19] <floatcomplex> regular people should use sdl
[06:30:41] *** Joins: pnbeast (~pnbeast@2601:140:4280:6ce0::3)
[06:31:33] *** Quits: NEYi_ (~NEYi@109.251.216.38) (Read error: Connection reset by peer)
[06:31:38] <floatcomplex> if you write new code in 2022 that requires x11 then i will pry off your ctrl key and throw it in the sea
[06:32:03] <wroathe> my ctrl key is sea-proof
[06:32:54] *** Quits: unixpro1970 (~unixpro19@c-73-181-185-205.hsd1.wa.comcast.net) (Remote host closed the connection)
[06:33:10] <rcf> fbdev is somewhat out of fashion, but drm hasn't properly replaced it
[06:33:30] *** Joins: eddybilley (~freddieti@2a02-a454-7f89-1-68e0-f069-c585-f35.fixed6.kpn.net)
[06:33:49] *** Joins: geowiesnot (~user@5-51-190-244.abo.bbox.fr)
[06:34:05] <floatcomplex> i mean if your goal is to mmap a screen buffer and draw stuff into it, both of those things get you to the same place
[06:34:07] *** Quits: banc (banc@gateway/vpn/airvpn/banc) (Ping timeout: 256 seconds)
[06:34:26] *** Quits: SaltHillStroller (~SaltHillS@206.223.160.26) (Ping timeout: 272 seconds)
[06:35:34] <rcf> Which is to say, it is not straightforward to convert an fbdev driver to a proper drm driver, much less satisfy the demands of modern applications well enough to make it worthwhile to maintain the old drm drivers
[06:36:10] *** Joins: unixpro1970 (~unixpro19@c-73-181-185-205.hsd1.wa.comcast.net)
[06:37:11] *** Joins: Charadon (~Charadon@155.138.164.183)
[06:37:29] <rcf> So if fbdev will suffice it is the best choice if maximum compatibility is your concern, and always will be.
[06:37:45] *** Quits: jerware (~jerware@c-107-3-54-201.hsd1.ct.comcast.net) (Quit: Lost terminal)
[06:37:56] <floatcomplex> given linux, yeah
[06:37:57] *** Quits: eddybilley (~freddieti@2a02-a454-7f89-1-68e0-f069-c585-f35.fixed6.kpn.net) (Ping timeout: 240 seconds)
[06:37:59] <floatcomplex> regular people should use sdl
[06:39:11] *** Joins: SaltHillStroller (~SaltHillS@206.223.160.26)
[06:41:13] *** Quits: wroathe (~wroathe@user/wroathe) (Ping timeout: 256 seconds)
[06:41:35] *** Joins: AbleBacon_ (~AbleBacon@user/AbleBacon)
[06:41:56] *** Quits: FluffyMask (~masque@user/fluffymask) (Quit: WeeChat 3.4)
[06:44:34] *** Quits: AbleBacon (~AbleBacon@user/AbleBacon) (Ping timeout: 272 seconds)
[06:48:35] *** Quits: oakyy (~oaky@h-155-4-161-203.A518.priv.bahnhof.se) (Ping timeout: 256 seconds)
[06:52:22] *** Joins: banc (banc@gateway/vpn/airvpn/banc)
[06:55:02] *** Joins: fe23 (~fe23@2409:8a34:46c:f80:49d0:c74b:eb53:b161)
[07:01:35] *** Joins: eelstrebor (~eelstrebo@198-178-29-136.scb.ne.static.allophone.net)
[07:01:47] *** Quits: eelstrebor (~eelstrebo@198-178-29-136.scb.ne.static.allophone.net) (Client Quit)
[07:05:19] *** Joins: pounce (~pounce@facebook/engineering/pounce)
[07:07:16] *** Joins: Emet-Selch (~haise01@user/haise01)
[07:07:35] <caze> floatcomplex: Not a breadboard?
[07:10:41] *** Quits: Azem (~haise01@user/haise01) (Ping timeout: 256 seconds)
[07:11:12] *** Joins: eelstrebor (~eelstrebo@198-178-29-136.scb.ne.static.allophone.net)
[07:11:41] *** Joins: saribro (~swinnenb@user/swinnenb)
[07:15:10] *** Quits: swinnenb (~swinnenb@user/swinnenb) (Ping timeout: 250 seconds)
[07:16:48] *** Quits: seninha (~chatzilla@user/seninha) (Quit: ChatZilla 0.9.93 [SeaMonkey 2.53.10.2/20220211225827])
[07:18:37] *** Quits: Charadon (~Charadon@155.138.164.183) (Ping timeout: 256 seconds)
[07:22:57] *** Joins: dave0 (~davezero@069.d.003.ncl.iprimus.net.au)
[07:23:16] *** Joins: wroathe (~wroathe@206-55-188-8.fttp.usinternet.com)
[07:23:16] *** Quits: wroathe (~wroathe@206-55-188-8.fttp.usinternet.com) (Changing host)
[07:23:16] *** Joins: wroathe (~wroathe@user/wroathe)
[07:23:25] *** Joins: adip (~adip@dia24.neoplus.adsl.tpnet.pl)
[07:23:28] *** Joins: adip_ (~adip@dia24.neoplus.adsl.tpnet.pl)
[07:27:48] *** Quits: wroathe (~wroathe@user/wroathe) (Ping timeout: 240 seconds)
[07:30:50] *** Quits: TonyStone (~TonyStone@2603-7080-8607-c36a-4424-fc06-167e-bc32.res6.spectrum.com) (Read error: Connection reset by peer)
[07:31:48] *** Quits: geowiesnot (~user@5-51-190-244.abo.bbox.fr) (Ping timeout: 240 seconds)
[07:32:23] *** Joins: TonyStone (~TonyStone@cpe-74-76-51-197.nycap.res.rr.com)
[07:33:05] *** Quits: TonyStone (~TonyStone@cpe-74-76-51-197.nycap.res.rr.com) (Remote host closed the connection)
[07:33:09] *** Joins: pucara (~i@host14.181-1-101.telecom.net.ar)
[07:33:19] *** Quits: Nex8192 (~Nex8192@user/nex8192) (Quit: Don't watch me die)
[07:33:34] *** Joins: Nex8192 (~Nex8192@user/nex8192)
[07:36:01] *** Quits: supakeen (~user@python/site-packages/supakeen) (Quit: WeeChat 3.4)
[07:36:32] *** Joins: supakeen (~user@python/site-packages/supakeen)
[07:42:33] *** Joins: wroathe (~wroathe@206-55-188-8.fttp.usinternet.com)
[07:42:33] *** Quits: wroathe (~wroathe@206-55-188-8.fttp.usinternet.com) (Changing host)
[07:42:33] *** Joins: wroathe (~wroathe@user/wroathe)
[07:46:05] *** Joins: drbeco (~beco@2804:351c:dd01:6600:e4a2:7a5d:e23f:1fd8)
[07:46:23] *** Quits: zsoltiv_ (~zsoltiv@fibhost-67-12-35.fibernet.hu) (Ping timeout: 256 seconds)
[07:49:42] *** Joins: bladerunner1 (~bladerunn@42.106.215.127)
[07:51:40] *** Quits: z4kpi (~z4kpi@user/zacts) (Quit: Client closed)
[07:52:13] <bladerunner1> I have a code about command-line arguments from a 2008 book, which no longer works in uhh present? The Linux distro was provided with the book, the code works on that, just not my host machine
[07:55:44] <pnbeast> That's very surprising.
[07:56:37] <bladerunner1> Yeah, I'll put it on a paste service, a sec
[07:59:34] <bladerunner1> https://bpa.st/NBTQ
[08:00:20] *** Joins: hinata (~hinata@152.57.165.236)
[08:00:42] <bladerunner1> well, was it sarcasm, when you said, "That's very surprising"
[08:01:05] <dave0> the paste lost the final }
[08:01:13] <fizzie> Works fine for me, with the missing #include <stdlib.h> and the final } added.
[08:01:20] <dave0> yep yep stdlib.h
[08:02:02] <bladerunner1> Wait what
[08:02:03] *** Joins: dnih^ (~dnih@12.163.216.98)
[08:02:27] <fizzie> https://0x0.st/o8yJ.txt and so on. Though that could *really* do with some indentation.
[08:02:45] <MsMary> omg
[08:02:52] <MsMary> dave0: are you the dave0?
[08:03:19] <dave0> nah it's a different dave0
[08:03:19] <bladerunner1> stdlib.h? Is that what's changed?
[08:03:39] <MsMary> david oh: https://www.youtube.com/watch?v=d2FGgYp6mdk
[08:03:39] <bladerunner1> Because, on the 2008 CD it works without that
[08:04:07] <MsMary> very famous american living in Japan
[08:04:16] <fizzie> It's not *changed*; `exit` and `atoi` have always been declared in <stdlib.h>. But compilers may have gotten pickier since then. And the default standard versions they use have also changed.
[08:04:17] *** Quits: boB_K7IQ (~boB_K7IQ@152.44.147.180) (Ping timeout: 240 seconds)
[08:04:18] <MsMary> david kuhn 0 (david oh)
[08:04:41] <dave0> his last name is the number zero?
[08:04:57] *** Joins: boB_K7IQ (~boB_K7IQ@174-26-254-41.phnx.qwest.net)
[08:04:57] <MsMary> yes
[08:05:04] <fizzie> (In C89 function declarations before calling them were optional; in C99 and later, not.)
[08:05:19] <dave0> MsMary: lol this aint me :-p
[08:05:30] *** Quits: dnih^ (~dnih@12.163.216.98) (Remote host closed the connection)
[08:05:53] <bladerunner1> hmm, I see
[08:06:16] *** Quits: eelstrebor (~eelstrebo@198-178-29-136.scb.ne.static.allophone.net) (Ping timeout: 272 seconds)
[08:07:09] <dave0> i'm dave0 because dave1 was taken :-p
[08:07:21] *** Quits: wroathe (~wroathe@user/wroathe) (Ping timeout: 256 seconds)
[08:07:55] <MsMary> i see, sorry
[08:08:08] <dave0> having a last name of `0` he might have everyday problems like that guy whose last name is `null`
[08:13:36] *** Joins: wroathe (~wroathe@user/wroathe)
[08:13:45] <MsMary> true
[08:13:53] <dave0> https://www.wired.com/2015/11/null/
[08:13:55] <candide> Title of dave0's link: Hello, I'm Mr. Null. My Name Makes Me Invisible to Computers | WIRED
[08:16:12] *** Quits: bladerunner1 (~bladerunn@42.106.215.127) (Ping timeout: 240 seconds)
[08:17:47] *** Quits: drbeco (~beco@2804:351c:dd01:6600:e4a2:7a5d:e23f:1fd8) (Quit: Leaving)
[08:17:48] *** Quits: wroathe (~wroathe@user/wroathe) (Ping timeout: 240 seconds)
[08:19:52] *** Joins: eelstrebor (~eelstrebo@198-178-29-136.scb.ne.static.allophone.net)
[08:21:41] *** Quits: eelstrebor (~eelstrebo@198-178-29-136.scb.ne.static.allophone.net) (Client Quit)
[08:22:52] *** Quits: acerbic (~acerbic@cs-xdata-50-86-53-119.cspire.com) (Read error: Connection reset by peer)
[08:23:57] *** Joins: varad (~varad@45.249.86.162)
[08:24:15] *** Quits: varad (~varad@45.249.86.162) (Client Quit)
[08:24:30] *** Joins: varad (~varad@45.249.86.162)
[08:24:36] *** Quits: kurahaupo (~kurahaupo@115.69.27.211) (Ping timeout: 240 seconds)
[08:26:55] <jamesmartinez> dave0: maw
[08:27:16] <dave0> maw jamesmartinez
[08:27:30] <dave0> sup?
[08:29:08] <jamesmartinez> dave0: playing Doom II
[08:29:15] <jamesmartinez> & drinking tea
[08:29:28] <dave0> nice
[08:29:37] <dave0> i should put the kettle on
[08:29:42] *** Quits: varad (~varad@45.249.86.162) (Ping timeout: 272 seconds)
[08:30:41] *** Joins: vdamewood (~vdamewood@fedora/vdamewood)
[08:31:36] *** Joins: kurahaupo (~kurahaupo@115.69.27.211)
[08:31:41] *** Quits: hanzo (uid532183@user/hanzo) (Quit: Connection closed for inactivity)
[08:32:22] *** Joins: vinleod (~vdamewood@fedora/vdamewood)
[08:33:48] <jamesmartinez> dave0: drinking tea change my life, made me less anxious, more relaxed
[08:34:03] *** Quits: vdamewood (~vdamewood@fedora/vdamewood) (Killed (molybdenum.libera.chat (Nickname regained by services)))
[08:34:03] *** vinleod is now known as vdamewood
[08:34:09] <dave0> cool
[08:34:26] <dave0> and not many calories
[08:37:59] <jamesmartinez> yes
[08:38:40] *** Quits: ferdna (~ferdna@user/ferdna) (Quit: Leaving)
[08:40:14] *** Joins: hanzo (uid532183@user/hanzo)
[08:40:14] *** Joins: acerbic (~acerbic@cs-xdata-50-86-53-119.cspire.com)
[08:41:52] *** Quits: skapata (~Skapata@user/skapata) (Read error: Connection reset by peer)
[08:44:05] *** Quits: pucara (~i@host14.181-1-101.telecom.net.ar) (Quit: Lost terminal)
[08:44:54] *** Quits: luke-jr (~luke-jr@user/luke-jr) (Quit: ZNC - http://znc.sourceforge.net)
[08:45:41] *** Joins: luke-jr (~luke-jr@user/luke-jr)
[08:49:01] *** Joins: the_lanetly_052 (~the_lanet@194.135.154.213)
[08:49:47] *** Quits: the_lanetly_052 (~the_lanet@194.135.154.213) (Max SendQ exceeded)
[08:50:17] *** Joins: the_lanetly_052 (~the_lanet@194.135.154.213)
[08:50:21] <MsMary> jamesmartinez: ever had psychidelic tea?
[08:51:01] *** Quits: the_lanetly_052 (~the_lanet@194.135.154.213) (Max SendQ exceeded)
[08:51:30] *** Joins: the_lanetly_052 (~the_lanet@194.135.154.213)
[08:51:53] *** Quits: eroux (~eroux@102-65-81-186.ftth.web.africa) (Quit: My MacBook has gone to sleep. ZZZzzz…)
[08:52:18] *** Quits: the_lanetly_052 (~the_lanet@194.135.154.213) (Max SendQ exceeded)
[08:52:43] *** Quits: AmR (~AmREiSa@156.199.14.65) (Quit: Konversation terminated!)
[08:52:46] *** Joins: the_lanetly_052 (~the_lanet@185.30.90.117)
[08:53:38] *** Quits: the_lanetly_052 (~the_lanet@185.30.90.117) (Max SendQ exceeded)
[08:54:07] *** Joins: the_lanetly_052 (~the_lanet@194.135.154.213)
[08:55:19] *** Quits: the_lanetly_052 (~the_lanet@194.135.154.213) (Max SendQ exceeded)
[08:55:53] *** Joins: the_lanetly_052 (~the_lanet@194.135.154.213)
[08:57:00] *** Quits: the_lanetly_052 (~the_lanet@194.135.154.213) (Max SendQ exceeded)
[08:57:22] *** Joins: oscurochu (~oscurochu@2603:9000:c202:1034:5991:474:8074:a98a)
[08:58:16] *** Joins: the_lanetly_052 (~the_lanet@194.135.154.213)
[09:05:05] *** Joins: c209e6dc-4d76-47 (~aditya@2601:249:4300:1296:195:dac6:592c:a55a)
[09:05:17] *** Quits: Zambyte (~Zambyte@cpe-104-228-60-14.nycap.res.rr.com) (Quit: leaving)
[09:06:06] <c209e6dc-4d76-47> can anyone help how can I pass variable arguments from one function to another?
[09:06:29] <c209e6dc-4d76-47> I have create_srtf(a, b, c, d, ...) and I need to call create(a,b,c, ...) inside it and then use the value d...
[09:06:53] <ChoHag> c209e6dc-4d76-47: va_start(3).
[09:10:26] <jamesmartinez> MsMary: never, my psyche is delicate
[09:12:21] <c209e6dc-4d76-47> ChoHag: something like this? https://bpa.st/UAXQ
[09:13:40] <ChoHag> args is a plain variable.
[09:13:51] <ChoHag> The function it's passed to accepts a va_list type argument.
[09:14:02] *** Joins: zsoltiv_ (~zsoltiv@fibhost-67-12-35.fibernet.hu)
[09:14:43] <c209e6dc-4d76-47> so what should I do instead?
[09:14:54] <c209e6dc-4d76-47> sorry if I'm sounding stupid...
[09:16:00] *** Quits: ironman (~ironman@2405:201:1010:b033:bad0:8910:44c9:da61) (Quit: Leaving)
[09:16:11] <ChoHag> The va_list effectively changes your "..." into a normal variable which can be passed to other functions.
[09:16:30] *** Joins: dnih^ (~dnih@12.163.216.98)
[09:16:35] <c209e6dc-4d76-47> hmm, i don't think I can change the create function, so that's an issue
[09:16:46] <c209e6dc-4d76-47> my current solution was to copy it in create_srtf
[09:16:58] <dave0> ,cc void foo(char *fmt, ...) { va_list ap; va_start(ap, fmt); vprintf(fmt, ap); va_end(ap); } int main(void) { foo("%s %s ", "hello", "world"); }
[09:17:00] <candide> dave0: hello world
[09:17:25] <dave0> that is foo() passing along the arguments to vprintf
[09:17:54] <dave0> the next part is writing   void bar(char *fmt, va_list ap)
[09:18:45] *** Quits: zsoltiv_ (~zsoltiv@fibhost-67-12-35.fibernet.hu) (Ping timeout: 256 seconds)
[09:24:12] *** Quits: constxd (~brad@142.134.79.191) (Ping timeout: 240 seconds)
[09:26:46] *** Joins: constxd_ (~brad@142.134.79.191)
[09:28:32] *** Quits: soapsudsxx (~soapsudsx@141.193.188.140) (Remote host closed the connection)
[09:33:49] *** Joins: pizzapants184 (~zachary@umc-178145.dhcp.missouri.edu)
[09:35:15] *** Quits: SymbioticFemale (~Symbiotic@user/SymbioticFemale) (Ping timeout: 240 seconds)
[09:35:49] *** Quits: auk (auk@gateway/vpn/protonvpn/auk) (Quit: Leaving)
[09:36:28] *** Quits: malloy (~jimery@116.30.220.175) (Ping timeout: 250 seconds)
[09:38:27] *** Joins: malloy (~jimery@116.30.220.175)
[09:39:08] *** Quits: pizzapants184 (~zachary@umc-178145.dhcp.missouri.edu) (Quit: Leaving.)
[09:39:40] *** Joins: pizzapants184 (~zachary@umc-178145.dhcp.missouri.edu)
[09:41:48] *** Quits: asdflkj_sh (asdflkj@bsdforall.org) (Ping timeout: 240 seconds)
[09:42:54] *** Joins: asdflkj_sh (asdflkj@bsdforall.org)
[09:44:18] *** Quits: paulo (paulo@user/paulo/x-9032687) (Ping timeout: 252 seconds)
[09:45:07] *** Joins: meator (~meator@user/meator)
[09:45:24] *** Quits: gnoo (gnoo@user/gnoo) (Ping timeout: 252 seconds)
[09:45:33] *** Joins: paulo (paulo@user/paulo/x-9032687)
[09:48:32] *** Joins: z4kpi (~z4kpi@user/zacts)
[09:50:35] *** Quits: Lyude (~lyudess@pool-96-230-100-15.bstnma.fios.verizon.net) (Quit: WeeChat 3.4)
[09:51:00] *** Joins: jesseg (~jesseg@64.146.180.172)
[09:52:02] *** Joins: Lyude (~lyudess@pool-96-230-100-15.bstnma.fios.verizon.net)
[09:52:04] <jesseg> Are ENUMs macros or do they have more runtime dynamic properties than a macro?
[09:52:06] *** Joins: eroux (~eroux@102-65-81-186.ftth.web.africa)
[09:52:08] *** Joins: gnoo (gnoo@user/gnoo)
[09:53:18] *** Joins: Atque (~Atque@user/atque)
[09:53:45] <dave0> they are identifiers, known to the compiler but not the preprocessor
[09:53:48] *** Quits: malloy (~jimery@116.30.220.175) (Ping timeout: 250 seconds)
[09:54:05] <dave0> you can use them as named integer constants
[09:54:23] <dave0> enum { ARRAYSIZE = 99 }; int array[ARRAYSIZE];
[09:54:31] <dave0> ,cc enum { ARRAYSIZE = 99 }; int array[ARRAYSIZE];
[09:54:33] *** Parts: floatcomplex (~floatcomp@wireguard/tunneler/floatcomplex) ()
[09:54:33] <candide> dave0: no output: ARRAYSIZE = ARRAYSIZE; array = {0 <repeats 20 times>, 11, 0, -143360166, 32767, 0, 0, -120, -1, 12, 0, 4317520, 0, 281, 0, -143787972, 32767, -7520, 32767, -142196122, 32767, -6247, 32767, 0, 0, 2, 0 <repeats 41 times>, -143362917, 32767, 4317584, 0, 0, 0, 0, 0, 0, 0, 0, 0, 4096}
[09:54:55] <dave0> thank you robot
[09:55:38] <dave0> i prefer them to  #define ARRAYSIZE 99
[09:55:47] *** Joins: malloy (~jimery@116.30.220.175)
[09:56:13] <jesseg> dave0, Thanks! So basically the compiler knows about them, but at runtime the code would simply see the hard-coded integer 99 and would have no "awareness" that there was ever the word ARRAYSIZE and no awareness that there was also other associated siblings to ARRAYSIZE within the enum?
[09:56:32] <dave0> jesseg: yep
[09:57:02] <jesseg> Oh, does enum scope differently than #defines?
[09:58:33] <jesseg> I think vaguely I was under the impression that #defines are scoped at all locations physically following the statement, while enums were scoped more like variables, but had the advantage that you can use them for array sizes.
[09:58:35] <dave0> i don't know the scope of enum.. defines or preprocessor macros are text subtitutions, no such thing as scope for it
[10:00:16] *** Quits: SaltHillStroller (~SaltHillS@206.223.160.26) (Ping timeout: 272 seconds)
[10:00:32] <dave0> ,cc void foo(void) { enum { FOO=42 }; printf("%d ", FOO); } void bar(void) { enum { FOO=69 }; printf("%d ", FOO); } int main(void) { foo(); bar(); }
[10:00:34] <candide> dave0: 42 69
[10:00:40] <dave0> seems to work
[10:01:01] <dave0> i only ever make them global
[10:01:39] *** Joins: joaofukuda_ (~joaofukuk@2804:431:c7f4:a77a:a70f:b80e:1d75:ee1f)
[10:02:01] *** Quits: vdamewood (~vdamewood@fedora/vdamewood) (Quit: My MacBook Pro has gone to sleep. ZZZzzz…)
[10:02:20] <jesseg> May I try ,cc or do I need to be an approved user?
[10:02:52] <dave0> anyone can, and it works in PM   /msg candide ,cc puts("hello world ");
[10:03:07] <jesseg> thanks!
[10:03:21] <dave0> no worries
[10:03:26] *** Quits: alch (~alch@151.36.92.227) (Ping timeout: 272 seconds)
[10:03:33] *** Quits: joaofukuda (~joaofukuk@2804:431:c7f4:a77a:575:562:5f94:3a18) (Ping timeout: 252 seconds)
[10:04:11] *** Quits: joaofukuda_ (~joaofukuk@2804:431:c7f4:a77a:a70f:b80e:1d75:ee1f) (Read error: Connection reset by peer)
[10:04:33] *** Joins: ekathva (~ekathva@n3k05vuqs1ol74l3j-1.v6.elisa-mobile.fi)
[10:04:35] *** Joins: alch (~alch@151.36.83.122)
[10:05:00] *** Quits: constxd_ (~brad@142.134.79.191) (Ping timeout: 240 seconds)
[10:05:19] <jesseg> ok yeah, it looks like enum works like a scopable define for numeric values lol
[10:05:53] <jesseg> Thanks!
[10:06:06] *** Joins: joaofukuda_ (~joaofukuk@2804:431:c7f4:a77a:a70f:b80e:1d75:ee1f)
[10:07:13] *** Joins: sord937 (~sord937@gateway/tor-sasl/sord937)
[10:07:39] <jesseg> There's not an inverse to enum is there - uses a numeric input and produces a pointer to a null terminated string?
[10:07:51] <jesseg> or is that a function of enum I never knew about?
[10:08:19] *** Joins: bzng (~bzng4@91-115-30-192.adsl.highway.telekom.at)
[10:09:51] *** Joins: retr0 (~retr0@cpc138958-jarr14-2-0-cust34.16-2.cable.virginm.net)
[10:10:16] *** Quits: malloy (~jimery@116.30.220.175) (Ping timeout: 250 seconds)
[10:12:06] *** Joins: malloy (~jimery@116.30.220.175)
[10:13:50] *** Quits: retr0 (~retr0@cpc138958-jarr14-2-0-cust34.16-2.cable.virginm.net) (Client Quit)
[10:14:28] *** Quits: c209e6dc-4d76-47 (~aditya@2601:249:4300:1296:195:dac6:592c:a55a) (Quit: Konversation terminated!)
[10:14:37] *** Quits: Inoperable (~PLAYER_1@fancydata.science) (Quit: All your buffer are belong to us!)
[10:16:13] *** Joins: Darkcoal (~user@user/Darkcoal)
[10:18:13] *** Quits: z4kpi (~z4kpi@user/zacts) (Quit: Client closed)
[10:19:41] *** Quits: synaps3 (~void@user/synaps3) (Quit: Leaving)
[10:23:36] *** Joins: Inoperable (~PLAYER_1@fancydata.science)
[10:25:59] *** Joins: chomwitt (~chomwitt@2a02:587:dc15:800:87d7:2f36:90bc:5b10)
[10:27:10] *** Quits: malloy (~jimery@116.30.220.175) (Ping timeout: 250 seconds)
[10:29:26] *** Joins: malloy (~jimery@116.30.220.175)
[10:29:39] <mcf> one difference between enums and #defines is that enum constants always have type int, which may not always be what you want
[10:30:20] <jesseg> mcf, understood. Thanks!
[10:30:52] *** Quits: dnih^ (~dnih@12.163.216.98) (Remote host closed the connection)
[10:34:22] *** Quits: Atque (~Atque@user/atque) (Quit: ...)
[10:35:02] *** Joins: Viewday113 (~Viewday@user/viewday)
[10:35:24] *** Quits: kurahaupo (~kurahaupo@115.69.27.211) (Ping timeout: 240 seconds)
[10:35:38] *** Quits: Viewday11 (~Viewday@user/viewday) (Read error: Connection reset by peer)
[10:35:38] *** Viewday113 is now known as Viewday11
[10:42:29] *** Joins: vicfred (~vicfred@user/vicfred)
[10:43:41] *** Joins: vicfred_ (~vicfred@user/vicfred)
[10:44:01] *** Quits: vicfred_ (~vicfred@user/vicfred) (Remote host closed the connection)
[10:45:00] *** Quits: Darkcoal (~user@user/Darkcoal) (Ping timeout: 240 seconds)
[10:45:26] *** Joins: Darkcoal (~user@user/Darkcoal)
[10:45:54] *** Quits: JanC (~janc@user/janc) (Remote host closed the connection)
[10:46:08] *** Joins: JanC (~janc@user/janc)
[10:47:09] *** Quits: vicfred (~vicfred@user/vicfred) (Ping timeout: 256 seconds)
[10:47:11] *** Joins: off^ (~off@12.163.216.98)
[10:47:49] *** Joins: oakyy (~oaky@h-155-4-161-203.A518.priv.bahnhof.se)
[10:48:12] *** Quits: Enitin (~Enitin@82.102.22.86) (Ping timeout: 240 seconds)
[10:53:00] *** Joins: Serpent7776 (~Serpent77@90-156-31-193.internetia.net.pl)
[10:53:40] *** Quits: pulse (~pulse@user/pulse) (Quit: Look behind you, a three headed monkey!)
[10:53:51] *** Joins: zeenk (~zeenk@2a02:2f04:a30d:1300:51a3:bcfc:6cda:9fc5)
[10:55:38] *** Joins: Enitin (~Enitin@82.102.22.84)
[10:55:49] *** Quits: pizzapants184 (~zachary@umc-178145.dhcp.missouri.edu) (Quit: Leaving.)
[10:57:15] *** Joins: kenanmarasli (~kenanmara@user/kenanmarasli)
[10:58:00] *** Joins: varad (~varad@45.249.86.162)
[10:59:01] *** Joins: strajder (~strajder@user/strajder)
[11:00:42] *** Joins: z4kpi (~z4kpi@user/zacts)
[11:00:47] *** Joins: kurahaupo (~kurahaupo@115.69.27.211)
[11:02:58] *** Quits: _mikey (~mikey@user/mikey/x-4335048) (Quit: WeeChat 3.4)
[11:02:58] *** Quits: oxfuxxx (~oxfuxxx@217.138.213.30) (Ping timeout: 272 seconds)
[11:05:01] *** Joins: iomari891 (~iomari891@105.112.138.38)
[11:05:42] *** Joins: qiduo (~qiduo@115.204.209.122)
[11:08:12] *** Quits: varad (~varad@45.249.86.162) (Ping timeout: 240 seconds)
[11:20:33] *** Joins: panda88kazag (~RadimPavl@176-74-132-138.netdatacomm.cz)
[11:26:11] *** Quits: MsMary (~MsMary@S01069050ca4e3573.cg.shawcable.net) (Quit: Client closed)
[11:29:47] *** Joins: rcoote (~rcoote@2a02:908:690:a140:b528:b260:6e74:a0c4)
[11:31:41] *** Quits: hanzo (uid532183@user/hanzo) (Quit: Connection closed for inactivity)
[11:31:55] *** Joins: pizzapants184 (~zachary@umc-178145.dhcp.missouri.edu)
[11:38:45] *** Quits: alip (~alip@exherbo/developer/alip) (Read error: Connection reset by peer)
[11:39:18] *** Joins: alip (~alip@exherbo/developer/alip)
[11:39:30] *** Joins: MajorBiscuit (~MajorBisc@86-88-79-148.fixed.kpn.net)
[11:40:17] *** Joins: NovumDXW (~NovumDXW@2409:8a28:361c:d160:f997:1e25:38ff:d600)
[11:42:19] *** Quits: dogbert2 (~Bill@ip68-227-25-62.lv.lv.cox.net) (Remote host closed the connection)
[11:42:27] *** Joins: Major_Biscuit (~MajorBisc@c-001-017-054.client.tudelft.eduvpn.nl)
[11:42:36] *** Joins: dogbert2 (~Bill@ip68-227-25-62.lv.lv.cox.net)
[11:42:37] *** Quits: Nitrousoxide_ (~msdos@user/nitrousoxide) (Ping timeout: 240 seconds)
[11:43:05] *** Joins: freep (~freepppp@193.92.35.32.dsl.dyn.forthnet.gr)
[11:43:29] *** Quits: freep (~freepppp@193.92.35.32.dsl.dyn.forthnet.gr) (Remote host closed the connection)
[11:43:53] *** Joins: freep (~freepppp@193.92.35.32.dsl.dyn.forthnet.gr)
[11:44:55] *** Quits: sord937 (~sord937@gateway/tor-sasl/sord937) (Ping timeout: 240 seconds)
[11:45:03] *** Joins: sord937_ (~sord937@gateway/tor-sasl/sord937)
[11:45:13] *** Quits: MajorBiscuit (~MajorBisc@86-88-79-148.fixed.kpn.net) (Ping timeout: 256 seconds)
[11:45:21] *** Joins: aradesh (~aradesh@user/aradesh)
[11:45:30] *** Quits: Furai (~Furai@furai.pl) (Quit: WeeChat 3.4)
[11:46:40] *** Quits: immibis_ (~hexchat@dynamic-089-204-139-245.89.204.139.pool.telefonica.de) (Ping timeout: 272 seconds)
[11:46:49] *** Joins: masoudd (~masoudd@user/masoudd)
[11:49:14] *** Joins: Rounin (~david@84.212.130.215)
[11:49:57] *** Joins: Furai (~Furai@furai.pl)
[11:51:02] *** Joins: danielcamiel (~danielcam@user/danielcamiel)
[11:52:00] *** Joins: ___nick___ (~quassel@cpc68286-cdif17-2-0-cust533.5-1.cable.virginm.net)
[11:56:02] *** Quits: llh (~llh@user/llh) (Quit: :::: ( UPP ) ::::)
[11:58:14] *** Quits: Tempesta (~Tempesta@user/tempesta) (Quit: See ya!)
[11:59:11] *** Joins: SGautam (uid286066@id-286066.ilkley.irccloud.com)
[11:59:15] <clarity> meow.
[11:59:24] *** Quits: Akiva (~Akiva@user/Akiva) (Ping timeout: 240 seconds)
[12:00:08] *** Joins: mrig (~mrig@user/mrig)
[12:01:00] *** Quits: kurahaupo (~kurahaupo@115.69.27.211) (Ping timeout: 240 seconds)
[12:01:52] <masoudd> :]
[12:02:21] *** Joins: Tempesta (~Tempesta@user/tempesta)
[12:03:23] *** Joins: kurahaupo (~kurahaupo@115.69.27.211)
[12:03:46] *** Quits: Enitin (~Enitin@82.102.22.84) (Ping timeout: 272 seconds)
[12:04:39] *** Joins: Enitin (~Enitin@82.102.22.84)
[12:07:57] *** Joins: varad (~varad@45.249.86.162)
[12:11:36] *** Joins: yo (~ayu@2405:201:5502:83a:2205:4da7:8c0a:818a)
[12:12:48] *** Joins: ironman (~ironman@2405:201:1010:b033:bad0:8910:44c9:da61)
[12:13:21] *** Quits: Enitin (~Enitin@82.102.22.84) (Ping timeout: 252 seconds)
[12:13:51] *** Quits: the_lanetly_052 (~the_lanet@194.135.154.213) (Ping timeout: 256 seconds)
[12:14:00] *** Joins: LucaTM (~LucaTM@user/lucatm)
[12:14:14] *** Joins: bug2000 (~bug@user/bug)
[12:14:28] <bug2000> Hi. Any opinions about threads.h ?
[12:14:36] *** Quits: Nutcrawler (~sergio@217-180-232-30.sycmilaa.metronetinc.net) (Read error: Connection reset by peer)
[12:15:04] *** Joins: Nutcrawler (~sergio@217-180-232-30.sycmilaa.metronetinc.net)
[12:15:24] <sham1> Underpowered
[12:15:45] *** Quits: zeenk (~zeenk@2a02:2f04:a30d:1300:51a3:bcfc:6cda:9fc5) (Quit: Konversation terminated!)
[12:15:48] *** Quits: Darkcoal (~user@user/Darkcoal) (Ping timeout: 240 seconds)
[12:16:01] <sham1> It doesn't hold a candle to the native APIs like pthreads and whatever WinAPI does (I dunno, I just use pthreads)
[12:16:16] *** Joins: merrinx (~merrinx@ti0028a400-1685.bb.online.no)
[12:17:04] <dave0> pity c threads aren't cooperative, i'd love to see coroutines in c
[12:17:21] <dave0> and leave pre-emptive threads to posix
[12:17:52] <bug2000> dave0, I don't think it's possible. Since it'll break TSO.
[12:18:06] *** Joins: Darkcoal (~user@user/Darkcoal)
[12:18:07] <dave0> what's tso?
[12:18:16] <bug2000> TLS* sorry
[12:18:20] <bug2000> Thread Local Storage.
[12:18:41] <dave0> i thought that was a posix thing too?
[12:19:00] <clarity> I don't think coroutines would need tls, that could be left for real threads?
[12:19:22] <bug2000> The question is if coroutines can be moved between threads.
[12:19:29] <bug2000> Because then the context of what the TLS is changes.
[12:19:59] <dave0> coroutines is basically exposing the stack to c
[12:20:17] <dave0> it doesn't change TLS
[12:21:40] <dave0> a coroutine yeild is just swapping the stack pointer and instruction pointer
[12:21:50] <bug2000> I'm not versed, in go, but aren't the coroutines there capable of running on different kernel threads?
[12:22:14] <dave0> i believe go threads are pre-emptive so more similar to pthreads than coroutines
[12:22:21] <bug2000> That means access to TLS variable isn't statically computed, since you can move to different threads between accesses.
[12:22:27] <sham1> I for one like having _Thread_local but a lot of the other parts of the C11 threads and atomics and such feel lackluster for the reasons I iterated above
[12:22:53] <sham1> Goroutines are cooperative concurrency
[12:23:02] <bug2000> sham1, Yeah. I understand. That's why I'm torn about it.
[12:23:20] <bug2000> But pthreads doesn't provide the happens-before for the atomics. So mix and match sounds bad.
[12:23:21] <sham1> They only switch when one begins to block, although you can have m coroutines spread over n threads
[12:23:35] *** Joins: Satin (uid193953@user/Seten)
[12:24:07] *** Joins: Enitin (~Enitin@82.102.22.85)
[12:24:57] <bug2000> In that case. You can still _Thread_local int x, y; then int x = a; b = readFromHdd(); y = b;
[12:25:00] <bug2000> It'll still switch under you.
[12:26:44] *** Quits: Juliu (~Juliu@2a02:810b:c640:3ec0:a131:11ab:1111:d3c5) (Quit: Quit)
[12:27:01] *** Joins: Juliu (~Juliu@2a02:810b:c640:3ec0:a131:11ab:1111:d3c5)
[12:28:52] <masoudd> I think goroutines do get preempted, don't they?
[12:29:16] *** Quits: danielcamiel (~danielcam@user/danielcamiel) (Remote host closed the connection)
[12:29:44] *** Quits: iomari891 (~iomari891@105.112.138.38) (Ping timeout: 272 seconds)
[12:29:56] <sham1> Apparently. I thought they were only co-operative but it would make sense for them to be pre-empted by the runtime as well
[12:30:06] *** Quits: atulu (~atulum]@2001:470:69fc:105::d50c) (Quit: You have been kicked for being idle)
[12:30:52] <dave0> i read that preempting a pthread requires kernel support, but coroutines can run on the tiniest microcontrollers
[12:31:11] <dave0> maybe not PIC because they have a hardware stack :-p
[12:31:27] <nomagno> dave0: Cooperative multitasking/coroutines sure
[12:31:28] <nomagno> Preempting...
[12:31:31] <nomagno> I'm not so sure
[12:32:00] <masoudd> Imagine a computer with one cpu core. You wouldn't want the rest of your program to freeze when you do "go func()" until it finishes. there is a scheduler in go somewhere which preempts goroutines
[12:33:58] <nomagno> masoudd: Well "you wouldn't want to" is a bit context-dependant, it's completely fine as a software architecture approach
[12:34:46] <dave0> coroutines for c and pthreads for posix just seems like a nice fit... you get the benefits of cooperative multitasking in c on little embedded things and the pre-emptive threads on posix ... no duplication of features
[12:35:21] *** Quits: merrinx (~merrinx@ti0028a400-1685.bb.online.no) (Quit: WeeChat 3.3)
[12:36:09] *** Joins: merrinx (~merrinx@ti0028a400-1685.bb.online.no)
[12:37:30] *** Quits: meator (~meator@user/meator) (Quit: Leaving)
[12:40:29] <clarity> To be fair, you can implement stack switching in a few lines of inline assembly
[12:40:38] *** Joins: Nitrousoxide (~msdos@user/nitrousoxide)
[12:40:57] *** Quits: Darkcoal (~user@user/Darkcoal) (Ping timeout: 240 seconds)
[12:41:05] *** Joins: immibis (~hexchat@dynamic-089-204-139-245.89.204.139.pool.telefonica.de)
[12:41:13] <clarity> So idk if there's that much value to having it built-in.  If anything, you might want to have full control over exactly how it works.
[12:43:05] *** Joins: Darkcoal (~user@user/Darkcoal)
[12:45:04] *** Quits: Juliu (~Juliu@2a02:810b:c640:3ec0:a131:11ab:1111:d3c5) (Quit: Quit)
[12:45:22] *** Joins: Juliu (~Juliu@2a02:810b:c640:3ec0:a131:11ab:1111:d3c5)
[12:48:45] *** Quits: Enitin (~Enitin@82.102.22.85) (Ping timeout: 272 seconds)
[12:49:04] *** Quits: Juliu (~Juliu@2a02:810b:c640:3ec0:a131:11ab:1111:d3c5) (Client Quit)
[12:49:21] *** Joins: Juliu (~Juliu@2a02:810b:c640:3ec0:a131:11ab:1111:d3c5)
[12:51:55] <bug2000> Anyway, thanks. I'm still on the fence about it.
[12:52:04] *** Quits: Juliu (~Juliu@2a02:810b:c640:3ec0:a131:11ab:1111:d3c5) (Client Quit)
[12:52:21] *** Joins: Juliu (~Juliu@2a02:810b:c640:3ec0:a131:11ab:1111:d3c5)
[12:52:37] *** Parts: jesseg (~jesseg@64.146.180.172) (Leaving)
[12:53:11] *** Joins: iomari891 (~iomari891@105.112.138.38)
[12:54:51] *** Joins: Enitin (~Enitin@82.102.22.84)
[12:56:57] *** Quits: Fl0pFl1p (~FlipFlop@user/fl1pfl0p) (Ping timeout: 240 seconds)
[12:57:05] *** Joins: FlipFlop (~FlipFlop@user/fl1pfl0p)
[12:57:21] *** Joins: meator (~meator@user/meator)
[12:59:11] *** Quits: lilibyte (lilibyte@gateway/vpn/protonvpn/lilibyte) (Ping timeout: 256 seconds)
[12:59:32] <meator> Hello. Why doesn't execv() take const char * const []? Can execv() modify these arguments?
[13:00:44] *** Quits: Juliu (~Juliu@2a02:810b:c640:3ec0:a131:11ab:1111:d3c5) (Quit: Quit)
[13:01:00] *** Quits: slidercrank (~slidercra@user/slidercrank) (Ping timeout: 240 seconds)
[13:01:32] *** Joins: malina (~malina@user/malina)
[13:02:04] *** Quits: z4kpi (~z4kpi@user/zacts) (Quit: Client closed)
[13:03:21] *** Joins: pretty_dumm_guy (trottel@gateway/vpn/protonvpn/prettydummguy/x-88029655)
[13:04:38] <sham1> meator: that's described in the POSIX standard: https://pubs.opengroup.org/onlinepubs/9699919799/functions/exec.html
[13:04:55] <sham1> "The statement about argv[] and envp[] being constants is included to make explicit to future writers of language bindings that these objects are completely constant. Due to a limitation of the ISO C standard, it is not possible to state that idea in standard C. Specifying two levels of const- qualification for the argv[] and envp[] parameters for the exec functions may seem to be the natural choice,
[13:04:57] <sham1> given that these functions do not modify either the array of pointers or the characters to which the function points, but this would disallow existing correct code. Instead, only the array of pointers is noted as constant. The table of assignment compatibility for dst= src derived from the ISO C standard summarizes the compatibility"
[13:05:25] <sham1> And the table is under that paragraph in the page
[13:06:12] *** Joins: cosimone (~user@2001:b07:ae5:db26:c24a:d20:4d91:1e20)
[13:09:24] *** Quits: imm_ (~imm_@user/imm/x-3405860) (Ping timeout: 240 seconds)
[13:10:23] *** Joins: Y4knotiS (~YaknotiS@cpc1-cmbg18-2-0-cust87.5-4.cable.virginm.net)
[13:10:28] *** Joins: whupdup (~whupdup@pool-173-76-128-81.bstnma.fios.verizon.net)
[13:11:18] *** Joins: imm_ (~imm_@user/imm/x-3405860)
[13:11:22] <meator> Ok. I'll have to malloc() space for string literals and copy it.
[13:11:25] <meator> Thanks!
[13:11:51] *** Joins: plastico (~plastico@neomutt/plastico)
[13:12:48] <Beastie> sham1: the array of pointers is constant because it is allocated in the stack, previous to the call to main() also happens to the character arrays for the command line parameters,  but argc itself and argv (the double pointer) don't require to be const because they are local to main.
[13:13:02] <Beastie> at least this is how all unices implement the call to main().
[13:13:40] *** Joins: Burgundy (~NA@86.121.143.206)
[13:13:40] <Beastie> indeed, in all unices there's a third parameter to main that stores the environment, envp.
[13:20:17] *** Quits: varad (~varad@45.249.86.162) (Remote host closed the connection)
[13:20:33] *** Joins: varad (~varad@45.249.86.162)
[13:24:46] *** Quits: CatCow (~wtf_over@c-73-96-109-206.hsd1.or.comcast.net) (Quit: Textual IRC Client: www.textualapp.com)
[13:24:53] *** Joins: Masklin_Gurder (~joel@h-5-150-226-94.A230.priv.bahnhof.se)
[13:26:33] *** Joins: hayaliali (~alip@exherbo/developer/alip)
[13:26:41] *** Quits: alip (~alip@exherbo/developer/alip) (Read error: Connection reset by peer)
[13:26:46] *** Joins: noteness (~noteness@user/noteness)
[13:28:39] *** Quits: Darkcoal (~user@user/Darkcoal) (Ping timeout: 256 seconds)
[13:28:39] *** hayaliali is now known as alip
[13:30:40] *** Joins: Darkcoal (~user@user/Darkcoal)
[13:32:22] *** Joins: cvmn (~caveman@gateway/tor-sasl/caveman)
[13:34:58] *** Quits: varad (~varad@45.249.86.162) (Ping timeout: 272 seconds)
[13:37:58] *** Quits: qiduo (~qiduo@115.204.209.122) (Quit: WeeChat 3.3)
[13:38:00] *** Quits: Jck_true (~jcktrue@user/jck-true/x-0200799) (Quit: The Lounge - https://thelounge.chat)
[13:38:01] *** Quits: szkl (uid110435@id-110435.uxbridge.irccloud.com) (Quit: Connection closed for inactivity)
[13:38:13] *** Joins: Jck_true (~jcktrue@user/jck-true/x-0200799)
[13:38:55] *** Quits: Betal (~Betal@user/betal) (Quit: WeeChat 3.4)
[13:42:19] *** Joins: varad (~varad@45.249.86.162)
[13:42:21] *** Quits: wingsorc (~wingsorc@user/wingsorc) (Quit: Leaving)
[13:43:25] *** Quits: ormaaj (~ormaaj@user/ormaaj) (Quit: Bridge terminating on SIGTERM)
[13:43:25] *** Quits: Vsg21\[m] (~vtrollmat@2001:470:69fc:105::17a8) (Quit: Bridge terminating on SIGTERM)
[13:43:25] *** Quits: archdark[m] (~ryonagana@2001:470:69fc:105::fd27) (Quit: Bridge terminating on SIGTERM)
[13:43:25] *** Quits: jinsun_ (~jinsun@user/jinsun) (Quit: Bridge terminating on SIGTERM)
[13:43:26] *** Quits: Akawama[m] (~akawama@user/akawama) (Quit: Bridge terminating on SIGTERM)
[13:43:26] *** Quits: hussam (~hussam@user/hussam) (Quit: Bridge terminating on SIGTERM)
[13:43:26] *** Quits: spokojni[m] (~spokojnio@2001:470:69fc:105::1:3fb2) (Quit: Bridge terminating on SIGTERM)
[13:43:26] *** Quits: euphrates[m] (~euphrates@2001:470:69fc:105::fbb5) (Quit: Bridge terminating on SIGTERM)
[13:43:26] *** Quits: Irvise (~irvise@2001:470:69fc:105::84c) (Quit: Bridge terminating on SIGTERM)
[13:43:26] *** Quits: skyeto[m] (~skyetosky@2001:470:69fc:105::c2fe) (Quit: Bridge terminating on SIGTERM)
[13:43:26] *** Quits: nopenope[m] (~repmovsb@2001:470:69fc:105::1:274e) (Quit: Bridge terminating on SIGTERM)
[13:43:26] *** Quits: SupremePolitical (~notarobot@2001:470:69fc:105::dd37) (Quit: Bridge terminating on SIGTERM)
[13:43:26] *** Quits: go4godvin (~go4godvin@user/go4godvin) (Quit: Bridge terminating on SIGTERM)
[13:43:26] *** Quits: anomalous_creato (~anomalous@2001:470:69fc:105::6ed1) (Quit: Bridge terminating on SIGTERM)
[13:43:26] *** Quits: Neui[m] (~neuimatri@2001:470:69fc:105::745) (Quit: Bridge terminating on SIGTERM)
[13:43:26] *** Quits: salty_hermes[m] (~saltyherm@2001:470:69fc:105::1:76a4) (Quit: Bridge terminating on SIGTERM)
[13:43:26] *** Quits: dlozeve[m] (~dlozevema@2001:470:69fc:105::1:1c58) (Quit: Bridge terminating on SIGTERM)
[13:43:26] *** Quits: james[m]1 (~jamesjame@2001:470:69fc:105::1:5aa1) (Quit: Bridge terminating on SIGTERM)
[13:43:26] *** Quits: aura[m] (~aurabindo@2001:470:69fc:105::4204) (Quit: Bridge terminating on SIGTERM)
[13:43:26] *** Quits: drflashd[m] (~flashdmat@2001:470:69fc:105::1:3d0b) (Quit: Bridge terminating on SIGTERM)
[13:43:26] *** Quits: silkut42[m] (~silkutmat@2001:470:69fc:105::1:6530) (Quit: Bridge terminating on SIGTERM)
[13:43:27] *** Quits: deekej[m] (~deekej@2001:470:69fc:105::a6c) (Quit: Bridge terminating on SIGTERM)
[13:43:27] *** Quits: zdctg[m] (~zdctgmatr@2001:470:69fc:105::1:8a86) (Quit: Bridge terminating on SIGTERM)
[13:43:28] *** Quits: nmat[m] (~nmatm]@2001:470:69fc:105::1:5553) (Quit: Bridge terminating on SIGTERM)
[13:43:28] *** Quits: Hansuke[m] (~hansukema@2001:470:69fc:105::1:86bb) (Quit: Bridge terminating on SIGTERM)
[13:43:28] *** Quits: dalz (~dalz@2001:470:69fc:105::2ea) (Quit: Bridge terminating on SIGTERM)
[13:43:29] *** Quits: M101donutman[m] (~M101donut@2001:470:69fc:105::d51) (Quit: Bridge terminating on SIGTERM)
[13:43:29] *** Quits: randy408[m] (~randy408m@2001:470:69fc:105::2f5e) (Quit: Bridge terminating on SIGTERM)
[13:43:29] *** Quits: carrot98[m] (~carrot98m@2001:470:69fc:105::1:5fcc) (Quit: Bridge terminating on SIGTERM)
[13:43:29] *** Quits: jaavv[m] (~jaavvmatr@2001:470:69fc:105::1:37b1) (Quit: Bridge terminating on SIGTERM)
[13:43:29] *** Quits: brindaberg[m] (~brindaber@2001:470:69fc:105::1:873e) (Quit: Bridge terminating on SIGTERM)
[13:43:30] *** Quits: hsiktas[m] (~hsiktasm]@2001:470:69fc:105::30d4) (Quit: Bridge terminating on SIGTERM)
[13:43:30] *** Quits: explosion-mental (~explosion@2001:470:69fc:105::dac2) (Quit: Bridge terminating on SIGTERM)
[13:43:30] *** Quits: Roman[m] (~wrongt@2001:470:69fc:105::341e) (Quit: Bridge terminating on SIGTERM)
[13:43:30] *** Quits: kolmogorov[m] (~kolmogoro@2001:470:69fc:105::e03b) (Quit: Bridge terminating on SIGTERM)
[13:43:30] *** Quits: Bazsalanszky[m] (~bazsalans@2001:470:69fc:105::6fe) (Quit: Bridge terminating on SIGTERM)
[13:43:30] *** Quits: slact[m] (~slact@2001:470:69fc:105::1:5ee3) (Quit: Bridge terminating on SIGTERM)
[13:43:30] *** Quits: psydroid (~psydroid@user/psydroid) (Quit: Bridge terminating on SIGTERM)
[13:43:30] *** Quits: NRK (~nrkmatrix@2001:470:69fc:105::4e30) (Quit: Bridge terminating on SIGTERM)
[13:43:31] *** Quits: nomagno (~nomagno@2001:470:69fc:105::c1f0) (Quit: Bridge terminating on SIGTERM)
[13:44:36] *** Quits: Enitin (~Enitin@82.102.22.84) (Ping timeout: 240 seconds)
[13:46:47] *** Quits: Matt|home (~matt@adsl-74-233-58-26.mia.bellsouth.net) (Ping timeout: 256 seconds)
[13:47:35] *** Quits: cvmn (~caveman@gateway/tor-sasl/caveman) (Ping timeout: 240 seconds)
[13:47:49] *** Joins: archdark[m] (~ryonagana@2001:470:69fc:105::fd27)
[13:48:57] *** Quits: Darkcoal (~user@user/Darkcoal) (Ping timeout: 240 seconds)
[13:50:32] *** Quits: VoidSync (~sync@user/voidsync) ()
[13:50:49] *** Joins: VoidSync (~sync@user/voidsync)
[13:51:16] *** Joins: Darkcoal (~user@user/Darkcoal)
[13:54:07] *** Joins: seninha (~chatzilla@user/seninha)
[13:54:29] <fizzie> meator: Sounds like you missed the point of the quoted POSIX bit. You *don't* have to make a copy, and execv does *not* modify the arguments. Passing it string literals directly is fine. The parameter is just not declared `const char *const argv[]` because then C would not allow passing a `char **` to it without a cast, breaking existing programs.
[13:54:47] *** Joins: skyeto[m] (~skyetosky@2001:470:69fc:105::c2fe)
[13:54:47] *** Joins: aura[m] (~aurabindo@2001:470:69fc:105::4204)
[13:55:03] *** Joins: dalz (~dalz@2001:470:69fc:105::2ea)
[13:55:10] *** Joins: hussam (~hussam@user/hussam)
[13:55:21] *** Joins: gproto23 (~gproto23@user/gproto23)
[13:55:32] *** Quits: VoidSync (~sync@user/voidsync) (Remote host closed the connection)
[13:55:40] *** Joins: james[m]1 (~jamesjame@2001:470:69fc:105::1:5aa1)
[13:55:41] *** Joins: NRK (~nrkmatrix@2001:470:69fc:105::4e30)
[13:55:41] *** Joins: psydroid (~psydroid@user/psydroid)
[13:55:42] *** Joins: Neui[m] (~neuimatri@2001:470:69fc:105::745)
[13:55:56] *** Joins: anomalous_creato (~anomalous@2001:470:69fc:105::6ed1)
[13:55:56] *** Joins: hsiktas[m] (~hsiktasm]@2001:470:69fc:105::30d4)
[13:55:56] *** Joins: ormaaj (~ormaaj@user/ormaaj)
[13:55:58] *** Joins: VoidSync (~sync@user/voidsync)
[13:56:10] *** Joins: kolmogorov[m] (~kolmogoro@2001:470:69fc:105::e03b)
[13:56:10] *** Joins: randy408[m] (~randy408m@2001:470:69fc:105::2f5e)
[13:56:10] *** Joins: dlozeve[m] (~dlozevema@2001:470:69fc:105::1:1c58)
[13:56:10] *** Joins: drflashd[m] (~flashdmat@2001:470:69fc:105::1:3d0b)
[13:56:11] *** Joins: Bazsalanszky[m] (~bazsalans@2001:470:69fc:105::6fe)
[13:56:11] *** Joins: jinsun_ (~jinsun@user/jinsun)
[13:56:11] *** Joins: spokojni[m] (~spokojnio@2001:470:69fc:105::1:3fb2)
[13:56:11] *** Joins: nomagno (~nomagno@2001:470:69fc:105::c1f0)
[13:56:11] *** Joins: Roman[m] (~wrongt@2001:470:69fc:105::341e)
[13:56:11] *** Joins: nopenope[m] (~repmovsb@2001:470:69fc:105::1:274e)
[13:56:25] *** Joins: explosion-mental (~explosion@2001:470:69fc:105::dac2)
[13:56:25] *** Joins: slact[m] (~slact@2001:470:69fc:105::1:5ee3)
[13:56:25] *** Joins: carrot98[m] (~carrot98m@2001:470:69fc:105::1:5fcc)
[13:56:30] *** Quits: varad (~varad@45.249.86.162) (Ping timeout: 272 seconds)
[13:56:37] *** Joins: salty_hermes[m] (~saltyherm@2001:470:69fc:105::1:76a4)
[13:56:37] *** Joins: silkut42[m] (~silkutmat@2001:470:69fc:105::1:6530)
[13:56:52] *** Joins: nmat[m] (~nmatm]@2001:470:69fc:105::1:5553)
[13:56:52] *** Joins: Hansuke[m] (~hansukema@2001:470:69fc:105::1:86bb)
[13:56:52] *** Joins: zdctg[m] (~zdctgmatr@2001:470:69fc:105::1:8a86)
[13:56:53] *** Joins: Irvise (~irvise@2001:470:69fc:105::84c)
[13:56:53] *** Joins: Akawama[m] (~akawama@user/akawama)
[13:56:53] *** Joins: go4godvin (~go4godvin@user/go4godvin)
[13:57:05] *** Joins: OpenBased[m] (~notarobot@2001:470:69fc:105::dd37)
[13:57:18] *** Joins: M101donutman[m] (~M101donut@2001:470:69fc:105::d51)
[13:57:33] *** Joins: jaavv[m] (~jaavvmatr@2001:470:69fc:105::1:37b1)
[13:57:33] *** Joins: Vsg21\[m] (~vtrollmat@2001:470:69fc:105::17a8)
[13:57:33] *** Joins: euphrates[m] (~euphrates@2001:470:69fc:105::fbb5)
[13:57:33] *** Joins: brindaberg[m] (~brindaber@2001:470:69fc:105::1:873e)
[13:57:33] *** Joins: deekej[m] (~deekej@2001:470:69fc:105::a6c)
[13:58:34] *** Joins: nightrider (~nightride@31.187.110.131)
[14:01:01] <meator> But that is against the C type system. I can't (shouldn't) assign a const value to a non-const pointer. Gcc would get angry at me.
[14:01:48] *** Quits: alch (~alch@151.36.83.122) (Ping timeout: 240 seconds)
[14:03:21] <sham1> Cast my lad
[14:03:49] <fizzie> String literals aren't even `const`-qualified.
[14:03:52] *** Joins: alch (~alch@151.34.6.63)
[14:04:43] *** Joins: varad (~varad@45.249.86.162)
[14:05:35] <meator> fizzie: But I can't (shouldn't) modify them, am I right?
[14:05:54] <meator> I didn't know that. Gcc then doesn't get angry at me.
[14:06:01] *** Quits: ironman (~ironman@2405:201:1010:b033:bad0:8910:44c9:da61) (Quit: Leaving)
[14:06:08] <dave0> meator: correct, don't try to modify string literals
[14:06:30] <dave0> they /should/ be const but, you know, backwards compatibility
[14:07:14] <fizzie> Yes, you shouldn't modify them, but the function explicitly doesn't.
[14:07:43] <fizzie> "-- given that these functions do not modify either the array of pointers or the characters to which the function points --"
[14:07:55] <fizzie> ("These functions" being the exec* family.)
[14:08:00] *** Joins: xa0s (~xa0s@mab.sdf.org)
[14:08:00] <meator> Interesting.
[14:09:45] <fizzie> The point is just that *if* the parameters were declared as `const char *const[]`, it would make the following, perfectly valid code (which passes *modifiable* pointers to a function that doesn't modify them) illegal: `char **args = malloc(...); args[0] = malloc(...); args[1] = malloc(...); args[2] = NULL; execv("...", args);`
[14:10:03] <fizzie> Because C does not allow an implicit conversion of `char **` to a `const char *const *`.
[14:10:26] *** Quits: gildasio (~gildasio@gateway/tor-sasl/gildasio) (Remote host closed the connection)
[14:10:51] <ChoHag> Worth noting that AFAIK C compilers don't really do a lot about const except complain.
[14:11:08] <sham1> It's mostly for the benefit of humans
[14:11:13] <sham1> And I like that, being a human
[14:11:24] <fizzie> Well, const-qualified objects with static storage duration do tend to end up actually read-only. But that's a different kettle of fish.
[14:12:29] *** Joins: blindguard (~blindguar@2a02:908:1864:c200::ef3c)
[14:12:39] <meator> I'll hope exec won't break promises when they aren't enforced.
[14:13:39] *** Joins: zer0bitz (~zer0bitz@2001:2003:f74d:b800:252f:1c34:e1bf:7de2)
[14:13:48] *** Quits: chomwitt (~chomwitt@2a02:587:dc15:800:87d7:2f36:90bc:5b10) (Ping timeout: 252 seconds)
[14:14:35] <meator> Thanks!
[14:15:51] <dave0> is modifying a string literal valid for backwards compatibility?
[14:16:32] <dave0> if not, why not make them const?
[14:17:11] <fizzie> Because a lot of existing code (that doesn't *modify* them) assigns them to `char *` variables, or passes them to functions accepting `char *` arguments.
[14:17:14] <dave0> if it was never legal to modify the string literal, who cares if there's a spurious message about const?
[14:17:15] <Luke> Hi I'm having a really weird linker error - `Undefined reference to foo_bar`. foo_bar is a function defined in foo.c, that definitely gets compiled to foo.c.o, but when I have a look with nm or objdump, I can't see the function foo_bar in the output. If I have a look at a similar file providing a different set of functions, I can see the functions
[14:17:15] <Luke> it defined in the objdump output
[14:17:52] <sham1> Luke: does foo_bar happen to be static?
[14:18:02] <dave0> fizzie: why not warn about that? blast some noise for dodgy code?
[14:18:28] *** Joins: oxfuxxx (~oxfuxxx@195.47.194.46)
[14:18:40] <NRK> you can enable -Wwrite-stings
[14:18:44] <Luke> sham1: it's not static no. It's part of a (3rd party's) SDK so is intended to be called from other source files
[14:18:48] <NRK> which will treat string literals as `const char[]`
[14:18:58] *** Joins: gildasio (~gildasio@gateway/tor-sasl/gildasio)
[14:19:01] <dave0> NRK: oh that's nicer
[14:20:05] <Luke> the whole file is wrapped in an #if MODULE_FOO_ENABLED, but it is enabled and if I put an #error inside the #if I see the error immediately in compiling, so it's definitely reaching that stage of the compiliation
[14:20:50] *** Joins: bilbo (~bilbo@host-37-191-190-173.lynet.no)
[14:20:59] *** Quits: pnbeast (~pnbeast@2601:140:4280:6ce0::3) (Quit: WeeChat 2.7.1)
[14:21:00] <dave0> someone named their function  foo_bar  ?
[14:21:13] <Luke> it's an example
[14:21:33] <dave0> help us out and paste the exact message
[14:23:33] *** Quits: malloy (~jimery@116.30.220.175) (Quit: WeeChat 3.0)
[14:24:13] <Luke> https://bpa.st/EX7Q
[14:24:24] *** Quits: bzng (~bzng4@91-115-30-192.adsl.highway.telekom.at) (Quit: Leaving)
[14:25:36] <dave0> i can't handle the internet anymore
[14:25:49] <fizzie> The standard doesn't say that attempting to assign a `const char *` to `char *` is "just a warning". It's just a constraint violation. And I imagine they're treating changing things so that previously strictly conforming programs would no longer be such would be considered a breaking change.
[14:25:50] <dave0> i'm gonna go to china and spend my days making clay pots
[14:27:05] <fizzie> (Okay, it does kind of say that's "just a warning" in that it requires "a conforming implementation [to] produce at least one diagnostic message -- if a -- translation unit contains a violation of any syntax rule or constraint". But that's just because it doesn't define *anything* to be an "error" except for the #error preprocessing directive.)
[14:27:07] <Rounin> Hmmmmmmm going to China to escape drama might not be the best thing right no~w, but... I see what you mean
[14:27:27] <Rounin> I mean, there's Malaysia
[14:27:38] <roxlu> hi, I'm testing an app and it seems that the app is "frozen" / stale and I'm wondering if there might be a way to get some info about where the app might be hanging (on linux) ?
[14:28:27] <dave0> fizzie: complaining about old code that does it would still be profitable, because it would teach people who write new code to be mindful of const
[14:28:38] *** Quits: hinata (~hinata@152.57.165.236) (Quit: Leaving)
[14:28:39] *** Quits: VoidSync (~sync@user/voidsync) (Remote host closed the connection)
[14:29:13] <Rounin> roxlu: If it's compiled with debug symbols or you could compile it with debug symbols, then a debugger would presumably be the standard advice
[14:29:31] <Rounin> I don't know how well a debugger works without them, but it might do something useful as well
[14:29:54] <roxlu> Rounin: yeah that would work, but I'm curious if there might be a way to inspect a running app w/o debug symbols
[14:30:10] <ChoHag> Exactly the same way, except everything is a number.
[14:30:54] <fizzie> Well, sure, it'd be a reasonable choice for an *implementation* to make. But the standard can't really "complain about old code", at least without introducing an entirely new thing of "allowed but requires some kind of a warning".
[14:31:12] <fizzie> ...well, I guess given C23 `nodiscard` attribute, it wouldn't be exactly novel.
[14:31:42] *** Quits: varad (~varad@45.249.86.162) (Quit: Leaving)
[14:32:22] <fizzie> (N2731 6.7.11.2p4: "[Recommended practice:] Evaluation of a nodiscard call as void expression is discouraged unless explicitly cast to `void`. Implementations are encouraged to issue a diagnostic in such cases.")
[14:33:08] <dave0> oh i must google nodiscard
[14:33:16] *** Quits: Satin (uid193953@user/Seten) (Quit: Connection closed for inactivity)
[14:34:28] *** Joins: joedoe47_ (~weechat@c-98-254-188-143.hsd1.fl.comcast.net)
[14:34:30] *** Quits: joedoe47 (~weechat@c-98-254-188-143.hsd1.fl.comcast.net) (Ping timeout: 272 seconds)
[14:35:00] *** Quits: off^ (~off@12.163.216.98) (Ping timeout: 240 seconds)
[14:35:03] *** Quits: fengdaolong (~fengdaolo@171.43.210.93) (Quit: WeeChat 2.8)
[14:35:49] <dave0> it just means you have to check the return code
[14:35:58] <dave0> doesn't lint already do that?
[14:36:55] <fizzie> It's just a way of designating the return values of specific functions as particularly important.
[14:37:11] <fizzie> A portable equivalent of the GNU `__attribute__ ((warn_unused_result))`, basically.
[14:37:30] *** Joins: off^ (~off@12.163.216.98)
[14:38:05] <fizzie> All the four standard attributes that are in the current C23 draft (deprecated, fallthrough, maybe_unused and nodiscard) are just about recommending particular diagnostics for potentially dodgy things.
[14:38:57] <dave0> they left out complaining about whitespace
[14:39:37] <fizzie> Not sure where you'd stick an attribute related to that.
[14:39:38] <dave0> -Wmisleading-indentation
[14:40:11] <fizzie> There was something I was hoping they'd add an attribute for now that they're introducing the standard syntax for attributes, but I've forgotten what it was.
[14:40:17] <dave0> pick something arbitrary and make it undefined behaviour if you use it wrong
[14:41:27] <dave0> if you really wanted to fix dodgy things you'd make integers wrap
[14:42:09] <dave0> take a break on adding more features and remove some undefined behaviour
[14:42:51] *** Joins: bebyx (~Thunderbi@user/bebyx)
[14:44:02] <NRK> i think it would've been better if switch statements were auto break and u can use `continue` as explicit fallthrough
[14:44:27] <NRK> i think instead they added some fallthrough attribute...
[14:44:36] <sham1> Autobreak? Absolutely. Using continue? Eh, break is already annoying if one has a switch within a loop
[14:44:54] <sham1> I'm personally partial towards [[fallthrough]]
[14:45:06] <dave0> if you use fallthrough outside a switch statement is it undefined?
[14:45:10] <fizzie> `goto case X;` would be another option as the explicit fallthrough.
[14:45:16] <NRK> i like /* fall through */ better ;)
[14:45:24] <sham1> eugh, semantic comments
[14:45:26] <NRK> silences the compiler warnings
[14:45:37] <dave0> comments having an effect on the code is `magic` ;-)
[14:45:45] <fizzie> It's a constraint violation to use it outside of a switch, yes.
[14:45:50] <NRK> it doesn't have effect on "code"
[14:45:52] <fizzie> Well, will be, it's not final yet.
[14:45:53] <NRK> only warning
[14:46:07] <sham1> Magic that isn't even checked probably
[14:46:16] *** Quits: malina (~malina@user/malina) (Quit: malina)
[14:46:17] <sham1> So yeah, I'll rather take [[fallthrough]] thanks
[14:46:33] <sham1> Even if the C++11 attribute style that was borrowed is not my favourite
[14:46:50] <fizzie> N2731 6.7.11.5p1: "A fallthrough declaration may only appear within an enclosing `switch` statement. The next block item that would be encountered after a fallthrough declaration shall be a `case` label or a `default` label associated with the smallest enclosing `switch` statement."
[14:47:28] <fizzie> (Not exactly sure how you'd have a `case` label or a `default` label that's *not* associated with the smallest enclosing switch statement.)
[14:48:04] <dave0> ah cool i was hoping that if you put some code after fallthrough that's not a label, it would be undefined
[14:50:42] *** Joins: joaofukuda__ (~joaofukuk@189-47-30-112.dsl.telesp.net.br)
[14:51:16] <dave0> but thanks for the warning if i missed the break
[14:52:37] *** Quits: joaofukuda_ (~joaofukuk@2804:431:c7f4:a77a:a70f:b80e:1d75:ee1f) (Ping timeout: 240 seconds)
[15:02:38] *** Joins: VoidSync (~sync@user/voidsync)
[15:03:32] *** Joins: szkl (uid110435@id-110435.uxbridge.irccloud.com)
[15:03:40] *** Joins: Atque (~Atque@user/atque)
[15:06:16] *** Joins: hinata (~hinata@2409:4042:2c17:28ca:ec08:fae2:de0d:5276)
[15:10:12] *** Quits: NovumDXW (~NovumDXW@2409:8a28:361c:d160:f997:1e25:38ff:d600) (Ping timeout: 240 seconds)
[15:11:26] *** Joins: shivesh (~shivesh@user/shivesh)
[15:14:53] *** Quits: nightrider (~nightride@31.187.110.131) (Quit: nightrider)
[15:18:12] *** Quits: kurahaupo (~kurahaupo@115.69.27.211) (Ping timeout: 272 seconds)
[15:20:14] *** Joins: kts (~kts@103.73.237.192)
[15:21:05] *** Joins: z4kpi (~z4kpi@user/zacts)
[15:27:00] *** Joins: elastic_dog (~elastic_d@2a01:118f:822:9c00:f583:aa51:9ad4:d4fb)
[15:27:09] *** Joins: Enitin (~Enitin@82.102.22.84)
[15:30:16] *** Quits: csrf (~csrf@user/csrf) (Quit: ZNC 1.7.2+deb3 - https://znc.in)
[15:31:03] *** Joins: csrf (~csrf@user/csrf)
[15:31:33] *** Joins: snortie (~snortie@2a02:8308:386:b900:f881:7773:c6f5:7fb8)
[15:31:37] *** Quits: Enitin (~Enitin@82.102.22.84) (Ping timeout: 256 seconds)
[15:32:21] *** Quits: VoidSync (~sync@user/voidsync) (Remote host closed the connection)
[15:32:33] *** Joins: NovumDXW (~NovumDXW@2409:8a28:361c:d160:b5c2:c146:3d16:3e5f)
[15:36:01] *** Quits: supakeen (~user@python/site-packages/supakeen) (Quit: WeeChat 3.4)
[15:36:30] *** Joins: supakeen (~user@python/site-packages/supakeen)
[15:37:00] *** Quits: snortie (~snortie@2a02:8308:386:b900:f881:7773:c6f5:7fb8) (Ping timeout: 240 seconds)
[15:39:13] *** Joins: Enitin (~Enitin@82.102.22.85)
[15:41:26] *** Quits: kts (~kts@103.73.237.192) (Quit: Konversation terminated!)
[15:42:09] *** Joins: random-nick (~random-ni@87.116.179.129)
[15:45:00] *** Joins: gr33n7007h (~gr33n7007@user/gr33n7007h)
[15:47:04] *** Joins: absentia (~absentia@user/absentia)
[15:51:08] *** Quits: koffeinfriedhof (~koffeinfr@ubuntuusers/moderation/koffeinfriedhof) (Quit: WeeChat 3.4)
[15:51:46] *** Quits: AbleBacon_ (~AbleBacon@user/AbleBacon) (Read error: Connection reset by peer)
[15:52:09] *** Joins: koffeinfriedhof (~koffeinfr@ubuntuusers/moderation/koffeinfriedhof)
[15:55:07] *** Quits: merrinx (~merrinx@ti0028a400-1685.bb.online.no) (Quit: WeeChat 3.3)
[15:57:23] *** Joins: Klinda (~superleag@user/klinda)
[15:59:27] *** Quits: raym (~raym@user/raym) (Remote host closed the connection)
[16:01:29] *** Joins: kurahaupo (~kurahaupo@115.69.27.211)
[16:01:59] *** Joins: malina (~malina@user/malina)
[16:04:03] *** Quits: eroux (~eroux@102-65-81-186.ftth.web.africa) (Quit: My MacBook has gone to sleep. ZZZzzz…)
[16:04:29] *** Joins: raym (~raym@user/raym)
[16:05:01] <chiselfuse> fizzie: thanks for the help with htonl(INADDR_ANY) the other day
[16:07:17] *** Quits: oscurochu (~oscurochu@2603:9000:c202:1034:5991:474:8074:a98a) (Ping timeout: 240 seconds)
[16:08:15] *** Quits: Syroth (~Syroth@pool-96-244-212-50.bltmmd.fios.verizon.net) (Quit: Leaving)
[16:09:53] *** Joins: SaltHillStroller (~SaltHillS@206.223.160.26)
[16:10:16] *** Joins: tech_exorcist (txrcst@user/tech-exorcist/x-0447479)
[16:20:01] *** Joins: epony (epony@user/epony)
[16:21:15] *** Quits: Darkcoal (~user@user/Darkcoal) (Ping timeout: 256 seconds)
[16:22:05] *** Quits: Sadale (~Sadale@user/sadale) (Quit: tawa pona!)
[16:23:03] *** Quits: chenqisu1 (~chenqisu1@183.217.200.249) (Remote host closed the connection)
[16:23:03] *** Joins: Sadale (~Sadale@user/sadale)
[16:23:22] *** Joins: Darkcoal (~user@user/Darkcoal)
[16:33:29] *** Joins: nightrider (~nightride@31.187.110.131)
[16:34:52] *** Joins: eroux (~eroux@102-65-81-186.ftth.web.africa)
[16:44:11] *** Joins: brad_mssw (~bhouse@c-76-106-206-149.hsd1.fl.comcast.net)
[16:47:34] *** Quits: kish` (~aqua@user/aqua) (Remote host closed the connection)
[16:47:58] *** Joins: ioxzev1z (~ioxzev1z@user/ioxzev1z)
[16:57:52] *** Quits: hinata (~hinata@2409:4042:2c17:28ca:ec08:fae2:de0d:5276) (Quit: Leaving)
[16:58:22] *** Quits: ZedHedTed (~ZedHedTed@user/zedhedted) (Remote host closed the connection)
[16:58:37] *** Joins: ZedHedTed (~ZedHedTed@user/zedhedted)
[16:59:03] *** Joins: snortie (~snortie@2a02:970:1186:1800:f881:7773:c6f5:7fb8)
[16:59:28] *** Joins: zeenk (~zeenk@2a02:2f04:a30d:1300:51a3:bcfc:6cda:9fc5)
[17:03:00] *** Quits: Inoperable (~PLAYER_1@fancydata.science) (Read error: Connection reset by peer)
[17:03:24] *** Joins: kish` (~aqua@user/aqua)
[17:06:15] *** Joins: drbeco (~beco@2804:351c:dd03:4500:a332:d74e:8d17:e625)
[17:06:34] *** Joins: sheb (~sheb@31.223.228.71)
[17:07:18] *** Quits: sheb (~sheb@31.223.228.71) (Remote host closed the connection)
[17:08:39] *** Joins: qiduo (~qiduo@117.147.41.81)
[17:08:40] *** Quits: SGautam (uid286066@id-286066.ilkley.irccloud.com) (Quit: Connection closed for inactivity)
[17:09:00] *** Joins: skapata (~Skapata@2804:14c:87b0:9d2e:e029:79e4:6493:91cc)
[17:09:00] *** Quits: skapata (~Skapata@2804:14c:87b0:9d2e:e029:79e4:6493:91cc) (Changing host)
[17:09:00] *** Joins: skapata (~Skapata@user/skapata)
[17:09:16] *** Quits: qiduo (~qiduo@117.147.41.81) (Client Quit)
[17:11:20] *** Joins: admal (~admal@gateway/tor-sasl/admal)
[17:11:25] *** Joins: Inoperable (~PLAYER_1@fancydata.science)
[17:16:00] *** Quits: Inoperable (~PLAYER_1@fancydata.science) (Ping timeout: 272 seconds)
[17:18:53] *** Quits: dave0 (~davezero@069.d.003.ncl.iprimus.net.au) (Quit: dave's not here)
[17:19:47] *** Joins: gh34 (~textual@cpe-184-58-181-106.wi.res.rr.com)
[17:27:24] *** Quits: ekathva (~ekathva@n3k05vuqs1ol74l3j-1.v6.elisa-mobile.fi) (Remote host closed the connection)
[17:28:49] *** Joins: cart_ (~cart@185.191.86.4)
[17:29:49] *** Joins: chomwitt (~chomwitt@2a02:587:dc15:800:4308:c5a2:39b7:2fb7)
[17:36:27] *** Joins: nyah (~nyah@05453449.skybroadband.com)
[17:36:45] *** Quits: Haxxa (~Haxxa@125-253-30-213.ip4.superloop.com) (Ping timeout: 252 seconds)
[17:39:49] *** Joins: Inoperable (~PLAYER_1@fancydata.science)
[17:43:51] *** Joins: oscurochu (~oscurochu@2603:9000:c202:1034:5991:474:8074:a98a)
[17:45:29] *** Joins: Haxxa (~Haxxa@122-199-59-132.ip4.superloop.com)
[17:45:33] *** Quits: joev (~joev@user/joev) (Ping timeout: 252 seconds)
[17:45:58] *** Joins: joev (~joev@user/joev)
[17:45:59] *** Joins: llh (~llh@user/llh)
[17:50:50] *** Quits: teepee (~teepee@openscad/teepee) (Remote host closed the connection)
[17:51:37] *** Joins: teepee (~teepee@openscad/teepee)
[17:53:12] *** Quits: luke-jr (~luke-jr@user/luke-jr) (Quit: ZNC - http://znc.sourceforge.net)
[17:53:58] *** Joins: luke-jr (~luke-jr@user/luke-jr)
[18:00:22] *** Quits: alch (~alch@151.34.6.63) (Read error: Connection reset by peer)
[18:01:51] *** Joins: kts (~kts@103.73.237.19)
[18:02:41] *** Quits: gproto23 (~gproto23@user/gproto23) (Read error: Connection reset by peer)
[18:04:11] *** Joins: alch (~alch@151.68.49.77)
[18:06:16] *** Quits: cart_ (~cart@185.191.86.4) (Quit: Konversation terminated!)
[18:09:08] *** Quits: NovumDXW (~NovumDXW@2409:8a28:361c:d160:b5c2:c146:3d16:3e5f) (Read error: Connection reset by peer)
[18:12:06] *** Quits: Rynn (rynn@gateway/vpn/protonvpn/rynn) (Quit: My MacBook has gone to sleep. ZZZzzz…)
[18:12:18] *** Joins: cuppajoe (~joe@ip70-171-93-122.no.no.cox.net)
[18:12:51] *** Quits: seninha (~chatzilla@user/seninha) (Ping timeout: 245 seconds)
[18:16:38] *** Joins: cart_ (~cart@185.191.86.4)
[18:17:24] *** Quits: alch (~alch@151.68.49.77) (Read error: Connection reset by peer)
[18:18:42] *** Joins: wroathe (~wroathe@206-55-188-8.fttp.usinternet.com)
[18:18:42] *** Quits: wroathe (~wroathe@206-55-188-8.fttp.usinternet.com) (Changing host)
[18:18:42] *** Joins: wroathe (~wroathe@user/wroathe)
[18:19:40] *** Joins: seninha (~chatzilla@user/seninha)
[18:21:24] *** Joins: alch (~alch@151.68.85.132)
[18:21:28] *** Quits: cuppajoe (~joe@ip70-171-93-122.no.no.cox.net) (Quit: WeeChat 3.4)
[18:21:39] *** Quits: off^ (~off@12.163.216.98) (Remote host closed the connection)
[18:22:05] *** Joins: off^ (~off@12.163.216.98)
[18:22:20] *** Joins: cuppajoe (~joe@ip70-171-93-122.no.no.cox.net)
[18:24:12] *** Quits: arinov_ (~arinov@213.194.126.155) (Ping timeout: 240 seconds)
[18:24:55] *** Quits: luizfrds (~Luiz@152.250.243.147) (Quit: Leaving)
[18:25:58] *** Quits: chomwitt (~chomwitt@2a02:587:dc15:800:4308:c5a2:39b7:2fb7) (Ping timeout: 250 seconds)
[18:33:15] *** Joins: X-Scale` (~ARM@135.232.28.37.rev.vodafone.pt)
[18:34:11] *** Joins: markb1 (~markb1@2600:1700:eb40:7ecf:8bd6:62f1:1b52:da20)
[18:35:39] *** Quits: cuppajoe (~joe@ip70-171-93-122.no.no.cox.net) (Quit: WeeChat 3.4)
[18:35:48] *** Quits: X-Scale (~ARM@92.250.101.104) (Ping timeout: 272 seconds)
[18:35:49] *** X-Scale` is now known as X-Scale
[18:38:25] *** Joins: jusski (~user@78-63-85-123.static.zebra.lt)
[18:39:55] <Xeroine> can anyone recommend a way to monitor memory usage of my C program? I tried ps but I think it's measured in kilobytes and that's too large I think.
[18:40:10] *** Joins: NEYi (~NEYi@109.251.216.38)
[18:40:12] <clarity> First you'd have to define memory usage..
[18:40:46] <clarity> If you have a system with ps, you have a system that most likely isn't handing pages any less than a few kilobytes
[18:41:08] <clarity> That's before we consider what might be happening in the allocator
[18:41:08] <Xeroine> ah
[18:41:10] <clarity> Or how the image is mapped
[18:41:15] <clarity> Or any libraries that you might link to
[18:42:25] *** Joins: eelstrebor (~eelstrebo@198-178-29-136.scb.ne.static.allophone.net)
[18:43:23] *** Quits: dogbert2 (~Bill@ip68-227-25-62.lv.lv.cox.net) (Remote host closed the connection)
[18:43:38] *** Joins: dogbert2 (~Bill@ip68-227-25-62.lv.lv.cox.net)
[18:44:22] <NRK> memory profiling is tricky
[18:45:08] *** Joins: X-Scale` (~ARM@31.22.160.17)
[18:46:14] *** Joins: crashrep (~crashrep@user/crashrep)
[18:47:12] *** Quits: X-Scale (~ARM@135.232.28.37.rev.vodafone.pt) (Ping timeout: 272 seconds)
[18:47:13] *** X-Scale` is now known as X-Scale
[18:47:17] *** Joins: merrinx (~merrinx@ti0028a400-1685.bb.online.no)
[18:47:23] *** Quits: wroathe (~wroathe@user/wroathe) (Ping timeout: 256 seconds)
[18:47:28] <NRK> if all you want to know is how much you're explicitly allocating, a simple malloc shim would do.
[18:47:39] *** Quits: merrinx (~merrinx@ti0028a400-1685.bb.online.no) (Client Quit)
[18:48:12] <NRK> but that doesn't represent how much memory your program is _actually_ using, due to some of the stuff clarity mentioned
[18:48:26] *** Joins: merrinx (~merrinx@ti0028a400-1685.bb.online.no)
[18:49:18] <fizzie> Inside the program, your allocator may also provide those statistics via some nonstandard mechanism. Like the glibc https://www.gnu.org/software/libc/manual/html_node/Statistics-of-Malloc.html
[18:49:20] <fizzie> (Same caveats apply re how that maps to "actual use" as far as impact on the rest of the system is considered.)
[18:49:24] <NRK> Xeroine: anyhow, checkout `malloc_info()` , valgrind also has some memory profiling tool i hear.
[18:50:32] *** Joins: vilhelmbergsoe (~vilhelmbe@2-104-79-222-cable.dk.customer.tdc.net)
[18:51:08] *** Parts: vilhelmbergsoe (~vilhelmbe@2-104-79-222-cable.dk.customer.tdc.net) ()
[18:51:28] <fizzie> If you want to get fancier there's tooling like https://gperftools.github.io/gperftools/heapprofile.html (as long as you can hold your nose to get past the C++ bias).
[18:53:25] *** Joins: wroathe (~wroathe@206-55-188-8.fttp.usinternet.com)
[18:53:26] *** Quits: wroathe (~wroathe@206-55-188-8.fttp.usinternet.com) (Changing host)
[18:53:26] *** Joins: wroathe (~wroathe@user/wroathe)
[18:53:56] *** Quits: ioxzev1z (~ioxzev1z@user/ioxzev1z) (Quit: Leaving)
[18:54:29] <Xeroine> thanks everyone
[18:55:13] *** Joins: Guest5883 (~Guest@host110.181-14-187.telecom.net.ar)
[18:56:10] <clarity> Speaking of which, does someone have a malloc benchmark handy?
[18:56:19] <clarity> One into which you could easily substitute your own allocator
[18:57:19] *** Quits: Xeroine (~Xeroine@user/xeroine) (Quit: leaving)
[18:57:41] *** Joins: Xeroine (~Xeroine@user/xeroine)
[18:58:36] *** Quits: wroathe (~wroathe@user/wroathe) (Ping timeout: 272 seconds)
[19:00:12] *** Quits: TallonRain (sid214799@user/tallonrain) (Ping timeout: 240 seconds)
[19:00:36] *** Quits: Manouchehri (sid384576@id-384576.hampstead.irccloud.com) (Ping timeout: 240 seconds)
[19:01:00] *** Quits: zx2c4 (sid204921@gentoo/developer/zx2c4) (Ping timeout: 240 seconds)
[19:01:18] *** Joins: TallonRain (sid214799@user/tallonrain)
[19:02:23] *** Joins: zx2c4 (sid204921@gentoo/developer/zx2c4)
[19:02:34] *** Joins: Manouchehri (sid384576@id-384576.hampstead.irccloud.com)
[19:03:10] *** Quits: KevinX (~KevinX@user/KevinX) (Quit: Textual IRC Client: www.textualapp.com)
[19:03:11] *** Joins: ioxzev1z (~ioxzev1z@user/ioxzev1z)
[19:04:49] *** Joins: the_lanetly_052 (~the_lanet@185.30.90.117)
[19:05:13] *** Joins: byteskeptical (~amnesia@user/byteskeptical)
[19:07:01] *** Quits: z4kpi (~z4kpi@user/zacts) (Quit: Client closed)
[19:07:06] *** Quits: rcoote (~rcoote@2a02:908:690:a140:b528:b260:6e74:a0c4) (Quit: Konversation terminated!)
[19:09:11] *** Joins: z4kpi (~z4kpi@user/zacts)
[19:11:54] *** Quits: joev (~joev@user/joev) (Ping timeout: 272 seconds)
[19:11:54] *** Quits: oxfuxxx (~oxfuxxx@195.47.194.46) (Ping timeout: 272 seconds)
[19:12:17] *** Joins: joev (~joev@user/joev)
[19:12:36] *** Quits: asdflkj_sh (asdflkj@bsdforall.org) (Ping timeout: 240 seconds)
[19:13:34] *** Quits: ArthurStrong (~ArthurStr@2a01:4f9:6a:15af::2) (Remote host closed the connection)
[19:13:38] *** Joins: asdflkj_sh (asdflkj@bsdforall.org)
[19:16:51] *** Quits: zwr (~zwr@2804:d45:b966:fb00:2d7c:db02:239b:d206) (Ping timeout: 252 seconds)
[19:17:20] *** Joins: zwr (~zwr@2804:d45:b966:fb00:b63f:5fd6:7c74:2962)
[19:19:34] *** Quits: ckdCreations (~ckdCreati@c-73-140-151-116.hsd1.wa.comcast.net) (Read error: Connection reset by peer)
[19:20:20] *** Quits: off^ (~off@12.163.216.98) (Remote host closed the connection)
[19:21:55] *** Joins: pulse (~pulse@user/pulse)
[19:23:26] *** Joins: carlavilla (~carlavill@188.26.219.45)
[19:25:16] *** Joins: arcadiancomp (~anon626@96-91-245-193-static.hfc.comcastbusiness.net)
[19:27:33] *** Quits: Atque (~Atque@user/atque) (Quit: ...)
[19:35:03] *** Joins: rgrinberg (~textual@2806:101e:7:70b6:f469:9f71:28b3:5d2a)
[19:36:50] <clarity> where are all the newbs
[19:36:57] *** Joins: ckdCreations (~ckdCreati@c-73-140-151-116.hsd1.wa.comcast.net)
[19:37:02] <clarity> it's been a boring fryday :<
[19:38:50] *** Quits: Y4knotiS (~YaknotiS@cpc1-cmbg18-2-0-cust87.5-4.cable.virginm.net) (Read error: Connection reset by peer)
[19:39:03] *** Joins: constxd (~brad@142.134.79.191)
[19:40:39] *** Quits: eroux (~eroux@102-65-81-186.ftth.web.africa) (Quit: My MacBook has gone to sleep. ZZZzzz…)
[19:40:42] *** Joins: lilibyte (lilibyte@gateway/vpn/protonvpn/lilibyte)
[19:41:15] *** Quits: crashrep (~crashrep@user/crashrep) (Ping timeout: 240 seconds)
[19:42:17] *** Quits: koffeinfriedhof (~koffeinfr@ubuntuusers/moderation/koffeinfriedhof) (Ping timeout: 240 seconds)
[19:42:44] *** Quits: Cienisty (Cienisty@user/cienisty) (Quit: Error 606 | Demon not found)
[19:43:31] *** Joins: Cienisty (Cienisty@user/cienisty)
[19:44:27] *** Joins: koffeinfriedhof (~koffeinfr@ubuntuusers/moderation/koffeinfriedhof)
[19:48:15] <ioxzev1z> clarity, I'm a newb
[19:48:21] <clarity> meow
[19:48:22] * ioxzev1z _top_ _kek_
[19:48:36] *** Quits: TallonRain (sid214799@user/tallonrain) (Ping timeout: 240 seconds)
[19:49:24] *** Quits: zx2c4 (sid204921@gentoo/developer/zx2c4) (Ping timeout: 240 seconds)
[19:49:28] <ioxzev1z> clarity, what're you working on right now?
[19:50:37] *** Joins: TallonRain (sid214799@user/tallonrain)
[19:51:04] *** Joins: zx2c4 (sid204921@gentoo/developer/zx2c4)
[19:51:58] *** Quits: z4kpi (~z4kpi@user/zacts) (Quit: Client closed)
[19:52:12] *** Quits: panda88kazag (~RadimPavl@176-74-132-138.netdatacomm.cz) (Ping timeout: 240 seconds)
[19:52:20] *** Quits: unlink2 (~unlink@p200300ebcf12830011a7c6fae7585651.dip0.t-ipconnect.de) (Remote host closed the connection)
[19:53:12] *** Joins: slidercrank (~slidercra@user/slidercrank)
[19:56:36] *** Quits: meator (~meator@user/meator) (Ping timeout: 240 seconds)
[19:58:23] *** Quits: the_lanetly_052 (~the_lanet@185.30.90.117) (Remote host closed the connection)
[19:58:50] *** Joins: meator (~meator@user/meator)
[19:59:55] *** Quits: kish` (~aqua@user/aqua) (Ping timeout: 240 seconds)
[20:01:19] *** Quits: TallonRain (sid214799@user/tallonrain) (Read error: Connection reset by peer)
[20:01:20] *** Quits: zx2c4 (sid204921@gentoo/developer/zx2c4) (Read error: Connection reset by peer)
[20:01:28] *** Joins: TallonRain (sid214799@user/tallonrain)
[20:01:47] *** Joins: Y4knotiS (~YaknotiS@cpc1-cmbg18-2-0-cust87.5-4.cable.virginm.net)
[20:02:02] *** Joins: zx2c4 (sid204921@gentoo/developer/zx2c4)
[20:02:09] *** Joins: the_lanetly_052 (~the_lanet@185.30.90.117)
[20:02:52] *** Joins: huseyn (~huseyn@78.186.251.134)
[20:03:21] *** Quits: huseyn (~huseyn@78.186.251.134) (Client Quit)
[20:03:43] <clarity> ioxzev1z: kernel
[20:03:46] *** Quits: rgrinberg (~textual@2806:101e:7:70b6:f469:9f71:28b3:5d2a) (Quit: My MacBook has gone to sleep. ZZZzzz…)
[20:04:12] *** Quits: SaltHillStroller (~SaltHillS@206.223.160.26) (Ping timeout: 240 seconds)
[20:04:17] <pragma-> kernel is a pretty broad system
[20:04:20] <clarity> There's some clock that gets disabled and freezes the system at boot, I'm figuring out which clock it is
[20:04:35] <clarity> And then I'm trying to get pcie going
[20:06:23] <pragma-> i've been playing around with installing freebsd on a sparc64 (in qemu)
[20:07:06] <pragma-> oh this isn't #tendra, i thought this was #tendra
[20:08:58] <clarity> :)
[20:09:27] <apotheon> Is TenDRA still a thing?
[20:09:39] <apotheon> Last I checked, it was at least temporarily dead.
[20:09:45] <pragma-> i want to support freebsd-sparc64 in ,cc but it uses 100% cpu just sitting idle doing nothing and that's no good
[20:10:13] *** Joins: kish` (~aqua@user/aqua)
[20:10:27] <pragma-> but loadvm seems to be fast enough... maybe i can make a snapshot and leave the system off and just bring it up whenever anybody requests it via ,cc -vm=freebsd-sparc64
[20:10:30] *** Quits: kish` (~aqua@user/aqua) (Remote host closed the connection)
[20:10:34] <pragma-> ,cc -vm=foo sh echo hi
[20:10:35] <candide> pragma-: Unknown machine 'foo'; available machines are: fedora-amd64, test
[20:10:47] <pragma-> I am so excited about supporting multiple platforms with -cc
[20:10:52] *** Joins: kish` (~aqua@user/aqua)
[20:10:59] <kurahaupo> woohoo!
[20:11:29] *** Quits: strajder (~strajder@user/strajder) (Quit: leaving)
[20:12:12] <pragma-> apotheon: I don't know about the compiler, but the channel is a bit of a hangout
[20:12:15] <clarity> apotheon: it's kinda quiet but there in a way.  https://github.com/tendra/tendra/commits/main
[20:13:13] <apotheon> wow
[20:13:31] <pragma-> I expected better commit messages
[20:13:50] <apotheon> I had a commit in TenDRA, once upon a time.
[20:14:00] <apotheon> It probably got lost.
[20:14:06] <clarity> :<
[20:14:48] <NRK> what's that?
[20:14:57] *** Quits: tech_exorcist (txrcst@user/tech-exorcist/x-0447479) (Remote host closed the connection)
[20:15:00] <apotheon> A long, long time ago a joke I made about lightbulbs ended up in the TenDRA channel's /topic, too.
[20:15:03] <pragma-> a neat c compiler with error messages that are quotations of the C standard
[20:15:18] <NRK> pog
[20:15:22] *** Joins: tech_exorcist (txrcst@user/tech-exorcist/x-0447479)
[20:15:24] <NRK> i'll install it
[20:15:25] *** Joins: Akuli (~Akuli@87-94-111-102.bb.dnainternet.fi)
[20:15:32] <pragma-> good luck
[20:15:40] <NRK> not in my distro's repo :c
[20:15:57] <NRK> pragma-: is it hard to build or smth?
[20:15:59] <pragma-> it used to be on candide's vm
[20:16:20] <NRK> why "used to"
[20:16:50] <apotheon> If TenDRA is in any package management system these days, I'd expect it to be FreeBSD, I guess.
[20:17:03] <NRK> also why a C compiler and not a static analyzer?
[20:17:04] <pragma-> i rebuilt the vm and i installed only stuff in the package manager and i couldn't be arsed to download and compile tendra and now i've forgotten the steps
[20:18:38] <apotheon> a common situation with niche software
[20:18:59] <apotheon> There's a growing need for something like TenDRA again, since the LLVM relicensing.
[20:19:36] *** Joins: rgrinberg (~textual@2806:101e:7:7728:2daa:98a5:3fd0:1781)
[20:20:14] *** Quits: carlavilla (~carlavill@188.26.219.45) (Remote host closed the connection)
[20:20:56] <NRK> what happened to llvm?
[20:21:50] <apotheon> It switched to AL2, sorta.
[20:22:17] <apotheon> I think the jury may still be out on whether that's even legally possible, but it looks like the project is getting away with it.
[20:23:16] <apotheon> It's kinda old news at this point, but the use of AL2 imposes some license incompatibilities on it, which means there's need for a copyfree licensed compiler again.
[20:23:16] *** Quits: acerbic (~acerbic@cs-xdata-50-86-53-119.cspire.com) (Read error: Connection reset by peer)
[20:23:41] *** Quits: kts (~kts@103.73.237.19) (Quit: Konversation terminated!)
[20:24:33] *** Joins: carlavilla (~carlavill@188.26.219.45)
[20:24:33] *** Quits: useretail (~useretail@185.132.19.151) (Remote host closed the connection)
[20:24:42] <NRK> never heard of AL2, QRD on it?
[20:24:50] *** Joins: useretail (~useretail@185.132.19.151)
[20:25:06] <apotheon> Apache License version 2
[20:25:12] <apotheon> You've heard of it.
[20:25:15] <apotheon> pretty sure
[20:25:43] <NRK> ah, yes that i know. first time seeing it called AL2
[20:26:05] <NRK> most of the time, i see it called apache2
[20:26:47] *** Joins: mark (~mark@user/mark)
[20:27:00] <sham1> I tend to just call it the Apache license because I don't think anyone really uses Apache license version 1 anymore
[20:27:12] <apotheon> AL2 is short.
[20:27:55] <mark> hello, i'm compiling a pam module with: gcc -fPIC -c pam.c ; ld -x --shared -lconfig -o /usr/lib/x86_64-linux-gnu/security/pam_tid2.so pam.o     but when it executes i get: "pam_tid2.so: undefined symbol: stat"   i have the correct includes and if i break the code out of a pam module and run it standalone it works normally
[20:28:10] <mark> would appreciate any suggestions as i don't really understand why it's failing to find libc functions
[20:28:37] <kfv> Greetings, everyone. I am about to write something on which I request your opinions. I need to constantly read a log file inside all jails in a FreeBSD box and do something (which I don't think is important to elaborate, but I can do if it's required.)
[20:28:42] <kfv> What I have in mind, is checking for all jails and pushing/popping them once started/removed to and from a vector or some similar data structure, and fire a new thread to read the corresponding log file and etc.
[20:28:50] <kfv> I think what I have in mind not only is poor in design and so much dirty, but is also not performant at all. I appreciate it if anyone educates me on a proper way to achieve something like this.
[20:31:19] *** Joins: the_lanetly_052_ (~the_lanet@194.135.166.105)
[20:33:28] *** Joins: DeaDSouL[m] (~deadsoulm@2001:470:69fc:105::1:c0de)
[20:33:55] *** Quits: the_lanetly_052 (~the_lanet@185.30.90.117) (Ping timeout: 256 seconds)
[20:37:41] *** Joins: Dean (~Dean@user/De4n-Whit3/x-9385125)
[20:39:34] *** Quits: Dean (~Dean@user/De4n-Whit3/x-9385125) (Client Quit)
[20:39:48] *** Quits: zx2c4 (sid204921@gentoo/developer/zx2c4) (Ping timeout: 240 seconds)
[20:40:53] *** Joins: zx2c4 (sid204921@gentoo/developer/zx2c4)
[20:40:59] *** Joins: acerbic (~acerbic@cs-xdata-50-86-53-119.cspire.com)
[20:44:35] *** Joins: jjido (~Denis@2a02:c7f:5c91:e700:852c:c89f:7cdd:a935)
[20:45:02] *** Joins: crashrep (~crashrep@user/crashrep)
[20:45:48] *** Joins: KevinX (~KevinX@user/KevinX)
[20:49:48] <Akuli> kfv: how many log files are there? 10 or 100 or 1000?
[20:52:50] <kfv> If there are 10 active, 10 log files to read, and if 1000 running jails, 1000.
[20:52:59] <Akuli> so how many jails do you expect to have?
[20:53:40] <kfv> Maximum 250 on a box at present - but could theoretically have way more.
[20:54:05] <Akuli> the approach seems good overall, and if the 250 changes in the future, you can then rewrite it to use something like select() instead of one thread per jail
[20:54:37] <Akuli> the only weirdness to me is the vector, i don't see why you need it if you just start a new thread when a jail is launched (and make sure the threads eventually stop)
[20:55:13] <kfv> Makes sense, lovely. And for getting jail lists, is it just fine to check for jails in a while loop? I mean, is it not too expensive?
[20:55:37] <kfv> Ah, nice! Yes, no need for the vector, right.
[20:55:40] <Akuli> try it and see :) in my experience 250 isn't too bad, even with a somewhat inefficient algorithm
[20:55:51] <kfv> But one question, how should I remove the thread once the jail stops?
[20:56:01] *** Quits: alphabeta (~kilolympu@vpn-fn-230.net.ed.ac.uk) (Ping timeout: 256 seconds)
[20:56:17] <Akuli> how do you know whether it has stopped? maybe you need a mapping from whatever identifies the jails to the thread objects
[20:56:31] <Akuli> i have written loops that draw every pixel of a 800x600 window... 60 times per second :D
[20:56:58] <kfv> The loop which checks for a list of running jails will change if a jail is no more running.
[20:57:49] <Akuli> that seems like it will work, you could alternatively have the threads check if their own jail is still running
[20:58:07] <Akuli> but then they have to read from the file in a way where they periodically get to do that check, e.g. with 1 second timeout
[20:58:16] <kfv> In other words, 1. I need to get a list of all running jails, 2. keep on reading new entries to the log file, 3. stop the thread once the jail is no more running
[20:58:27] <Akuli> yeah
[20:58:50] *** Joins: inlight (~thomas@157.35.66.52)
[20:58:50] *** Quits: inlight (~thomas@157.35.66.52) (Changing host)
[20:58:50] *** Joins: inlight (~thomas@user/inlight)
[20:59:11] <Akuli> usually stopping threads is easier said than done, but maybe the reading just stops if you close the file and you could do it that way
[20:59:38] <kfv> Ah I see, good. What if I fire two threads per jail (one to check if it's still running, and the other to read)?
[20:59:41] *** Joins: kilolympus (~kilolympu@vpn-fn-230.net.ed.ac.uk)
[20:59:59] <Akuli> you still have to stop the reading thread somehow :)
[21:00:30] <kfv> The reading is going to be like `tail -f', and I must keep on reading as long as the jail is in use.
[21:00:36] <Akuli> nowadays i tend to avoid having more threads, if i can make do with one thread it seems to make avoiding race conditions easier
[21:01:04] <Akuli> i think "tail -f" style reading involves waiting for more data with a sleep anyway
[21:01:06] *** Quits: yamchah2 (~yamchah2@user/yamchah2) (Remote host closed the connection)
[21:01:21] *** Joins: yamchah2 (~yamchah2@user/yamchah2)
[21:01:30] *** Quits: joaofukuda__ (~joaofukuk@189-47-30-112.dsl.telesp.net.br) (Remote host closed the connection)
[21:01:35] <Akuli> something like (in pseudo code):      while(1) { line = readline(); if (line is empty) sleep(0.05); else process line; }
[21:01:54] *** Quits: rgrinberg (~textual@2806:101e:7:7728:2daa:98a5:3fd0:1781) (Quit: My MacBook has gone to sleep. ZZZzzz…)
[21:02:07] <Akuli> so before that sleep, you could check if the jail still exists
[21:02:28] <kfv> I see, brilliant. So I can check for the running state in the middle of each read.
[21:02:34] <kfv> Yeah, lovely.
[21:02:42] <kfv> Thank you so much ;-)
[21:02:44] <Akuli> :)
[21:04:39] *** Joins: rgrinberg (~textual@2806:101e:7:7728:2daa:98a5:3fd0:1781)
[21:07:49] *** Quits: ka80 (~ka80@user/ka80) (Quit: Leaving)
[21:07:55] *** Joins: dyeplexer (~dyeplexer@user/dyeplexer)
[21:09:23] *** Joins: euandreh (~euandreh@2804:14c:33:9fe5:a0be:91d2:ac63:61de)
[21:13:11] *** Joins: immibis_ (~hexchat@dynamic-089-204-138-049.89.204.138.pool.telefonica.de)
[21:15:35] *** Quits: immibis (~hexchat@dynamic-089-204-139-245.89.204.139.pool.telefonica.de) (Ping timeout: 256 seconds)
[21:15:48] *** Quits: jjido (~Denis@2a02:c7f:5c91:e700:852c:c89f:7cdd:a935) (Quit: My MacBook Air has gone to sleep. ZZZzzz…)
[21:16:29] *** Quits: rgrinberg (~textual@2806:101e:7:7728:2daa:98a5:3fd0:1781) (Remote host closed the connection)
[21:17:33] *** Joins: mahmutov (~mahmutov@37.155.14.255)
[21:17:46] *** Joins: rgrinberg (~textual@2806:101e:7:7728:2daa:98a5:3fd0:1781)
[21:19:30] *** Joins: jjido (~Denis@2a02:c7f:5c91:e700:852c:c89f:7cdd:a935)
[21:20:09] *** Joins: trriplex (~trriplex@user/trriplex)
[21:21:41] <meator> Hello. https://bpa.st/TXLA. When I run this and rm the watched file, nothing happens, the program is still waiting for input from inotify. Why?
[21:21:53] *** Joins: AmR (~AmREiSa@156.199.14.65)
[21:22:42] *** Joins: SaltHillStroller (~SaltHillS@2605:8d80:6e2:5b65:2486:c388:ffa9:1695)
[21:23:31] *** Quits: malina (~malina@user/malina) (Ping timeout: 256 seconds)
[21:26:32] *** Joins: SaltHilStroller_ (~SaltHillS@searspoint.nvidia.com)
[21:26:44] *** Quits: whatsupdoc (uid509081@id-509081.hampstead.irccloud.com) (Quit: Connection closed for inactivity)
[21:29:00] *** Quits: SaltHillStroller (~SaltHillS@2605:8d80:6e2:5b65:2486:c388:ffa9:1695) (Ping timeout: 240 seconds)
[21:29:38] *** Quits: rany (~rany@user/rany) (Quit: The Lounge - https://thelounge.chat)
[21:29:52] *** Joins: rany (~rany@user/rany)
[21:30:01] *** Quits: ns12 (~ns12@user/ns12) (Quit: bye)
[21:30:20] *** Joins: SymbioticFemale (~Symbiotic@user/SymbioticFemale)
[21:30:50] *** Quits: iomari891 (~iomari891@105.112.138.38) (Quit: WeeChat 3.3)
[21:30:58] *** Joins: ns12 (~ns12@user/ns12)
[21:31:40] *** Quits: bilbo (~bilbo@host-37-191-190-173.lynet.no) (Quit: Client closed)
[21:32:32] *** Joins: FluffyMask (~masque@user/fluffymask)
[21:32:51] <Xgc> meator: Why did you create that temporary file?  It's not used.
[21:33:08] <Xgc> meator: Which file are you deleting?
[21:33:21] *** Joins: brad_mssw|mac (~bhouse@2601:344:4100:b490:4035:ae46:8d90:7cb5)
[21:33:23] <meator> This is minimal reproducible example. My actual program uses it.
[21:33:32] *** Joins: moog_ (~moog@107.77.244.156)
[21:33:46] <Xgc> meator: The minimal example would have deleted those lines.
[21:33:46] *** Quits: brad_mssw (~bhouse@c-76-106-206-149.hsd1.fl.comcast.net) (Ping timeout: 272 seconds)
[21:33:48] *** Quits: inlight (~thomas@user/inlight) (Quit: WeeChat 3.3)
[21:34:00] <Xgc> meator: Otherwise, it distracts.
[21:34:03] *** Joins: wroathe (~wroathe@206-55-188-8.fttp.usinternet.com)
[21:34:03] *** Quits: wroathe (~wroathe@206-55-188-8.fttp.usinternet.com) (Changing host)
[21:34:03] *** Joins: wroathe (~wroathe@user/wroathe)
[21:34:11] <meator> I'd like to delete sourcename.
[21:34:27] *** Quits: trriplex (~trriplex@user/trriplex) (Quit: Leaving)
[21:34:27] <meator> Xgc: It isn't reproducible without it.
[21:34:46] <Xgc> meator: What?  That actually matters?  That's odd.
[21:34:49] <meator> As far as I know.
[21:36:10] <ioxzev1z> meator, assuming linux the rm will unlink the file but while an fd is open it can be used as normal
[21:36:18] *** Quits: moog (~moog@107.77.244.68) (Ping timeout: 272 seconds)
[21:36:30] <ioxzev1z> Once you have unlinked the file and closed any fds it will be unaccessible
[21:37:30] *** Quits: cart_ (~cart@185.191.86.4) (Quit: Konversation terminated!)
[21:38:32] <meator> But I need access to the file.
[21:38:49] <ioxzev1z> Then you need to either not unlink the file or keep any fds to it open after an unlink.
[21:39:05] *** Quits: wroathe (~wroathe@user/wroathe) (Ping timeout: 256 seconds)
[21:44:37] *** Joins: zop911 (~zop9114@37.151.233.131)
[21:45:10] *** Quits: SaltHilStroller_ (~SaltHillS@searspoint.nvidia.com) (Ping timeout: 272 seconds)
[21:46:51] <zop911>  C Programming Language Ritchie is outdated?
[21:47:22] *** Parts: mark (~mark@user/mark) ()
[21:47:43] *** Quits: Sadale (~Sadale@user/sadale) (Ping timeout: 272 seconds)
[21:47:53] <NRK> 1st edition, yes.
[21:48:03] *** Joins: Sadale (~Sadale@user/sadale)
[21:48:08] <NRK> 2nd edition is good.
[21:48:43] *** Quits: Major_Biscuit (~MajorBisc@c-001-017-054.client.tudelft.eduvpn.nl) (Ping timeout: 256 seconds)
[21:48:47] <zop911> what book do you recommend?
[21:49:15] <tusko> k&r
[21:49:46] <ioxzev1z> zop911, Modern C
[21:49:51] <ioxzev1z> K&R is hyped
[21:49:59] <tusko> Modern C after k&r
[21:51:38] <Akuli> a friend tried those two books in the opposite order, first modern c and then k&r, didn't work for him :D
[21:51:49] *** Joins: alphabeta (~kilolympu@31.205.200.235)
[21:51:53] <blueagain> Yeah, Modern C is awesome.
[21:52:06] <zop911> thx
[21:52:07] *** Quits: kilolympus (~kilolympu@vpn-fn-230.net.ed.ac.uk) (Ping timeout: 256 seconds)
[21:52:09] <Akuli> well, k&r worked, but he was mostly confused about modern c
[21:52:47] <zop911> pratta c programming is good?
[21:54:02] <Xgc> meator: Also, you can monitor a directory to identify files deleted within that directory.  If you monitor the file directly, that might prevent the actual deletion until your reference to the file is closed.
[21:54:04] <Earnestly> Do people mean k&r, or do they mean the ansi version?
[21:55:25] *** Quits: fe23 (~fe23@2409:8a34:46c:f80:49d0:c74b:eb53:b161) (Quit: fe23)
[21:57:01] *** Quits: AdmiralBumbleBee (~AdmiralBu@47.203.174.105) (Quit: I'm out.)
[21:57:22] *** Quits: zop911 (~zop9114@37.151.233.131) (Quit: Leaving)
[21:57:45] <Xgc> meator: Try monitoring "." instead.  Then delete the file.
[21:58:04] <meator> So inotify can't directly monitor files that are open?
[21:58:54] <Xgc> meator: Well, inotify will hold a reference to that file, preventing deletion.  So if you want to monitor deletions, try monitoring the containing directory.
[22:00:45] *** Joins: zop911 (~zop9114@37.151.233.131)
[22:01:19] *** Quits: dyeplexer (~dyeplexer@user/dyeplexer) (Remote host closed the connection)
[22:03:11] <meator> My actual program also doesn't catch IN_MODIFY on a file. My program opens up a text editor on that file and it doesn't do anything when I save that file in the text editor. Do you think this has the same solution?
[22:05:21] <meator> And thanks for your answer! I didn't know that there is a difference from monitoring a file directly and monitoring the directory it is in (apart from it monitoring other files in the directory).
[22:08:54] *** Joins: smoke (~smoke@user/smoke)
[22:11:57] *** Quits: oscurochu (~oscurochu@2603:9000:c202:1034:5991:474:8074:a98a) (Ping timeout: 240 seconds)
[22:12:48] *** Quits: nightrider (~nightride@31.187.110.131) (Quit: nightrider)
[22:18:07] <Xgc> meator: IN_MODIFY is also solved with this approach.
[22:19:53] *** Quits: alch (~alch@151.68.85.132) (Ping timeout: 256 seconds)
[22:21:44] *** Joins: alch (~alch@151.68.13.255)
[22:25:38] *** Quits: smoke (~smoke@user/smoke) (Remote host closed the connection)
[22:25:57] *** Joins: smoke (~smoke@user/smoke)
[22:27:06] *** Quits: sord937_ (~sord937@gateway/tor-sasl/sord937) (Quit: sord937_)
[22:32:59] *** Quits: Earnestly (~earnest@user/earnestly) (Ping timeout: 256 seconds)
[22:33:54] *** Parts: zop911 (~zop9114@37.151.233.131) (Leaving)
[22:34:07] *** Joins: tiotags (~tiotags@user/tiotags)
[22:34:15] *** Quits: bebyx (~Thunderbi@user/bebyx) (Remote host closed the connection)
[22:35:41] *** Joins: hanzo (uid532183@user/hanzo)
[22:36:13] *** Joins: bebyx (~Thunderbi@user/bebyx)
[22:39:51] *** Joins: ArthurStrong (~ArthurStr@2a01:4f9:6a:15af::2)
[22:47:52] *** Quits: ckdCreations (~ckdCreati@c-73-140-151-116.hsd1.wa.comcast.net) (Ping timeout: 272 seconds)
[22:48:38] *** Joins: ckdCreations (~ckdCreati@147.55.133.142)
[22:49:19] *** Quits: Guest5883 (~Guest@host110.181-14-187.telecom.net.ar) (Remote host closed the connection)
[22:51:00] *** Joins: kitsunenokenja (~kitsunech@68.91.220.96)
[22:51:03] *** Quits: ncrowl (~ncrowl@83-233-50-49.cust.bredband2.com) (Ping timeout: 256 seconds)
[22:52:42] *** Joins: ncrowl (~ncrowl@94-255-226-55.cust.bredband2.com)
[22:55:37] *** Quits: szkl (uid110435@id-110435.uxbridge.irccloud.com) (Quit: Connection closed for inactivity)
[22:58:18] *** Joins: cuppajoe (~joe@ip70-171-93-122.no.no.cox.net)
[22:59:23] *** Quits: eelstrebor (~eelstrebo@198-178-29-136.scb.ne.static.allophone.net) (Quit: Ex-Chat)
[23:02:23] *** Quits: the_lanetly_052_ (~the_lanet@194.135.166.105) (Remote host closed the connection)
[23:03:02] *** Quits: rgrinberg (~textual@2806:101e:7:7728:2daa:98a5:3fd0:1781) (Quit: My MacBook has gone to sleep. ZZZzzz…)
[23:03:42] *** Quits: moog_ (~moog@107.77.244.156) (Ping timeout: 272 seconds)
[23:04:12] *** Quits: cuppajoe (~joe@ip70-171-93-122.no.no.cox.net) (Quit: WeeChat 3.4)
[23:05:02] *** Quits: teepee (~teepee@openscad/teepee) (Remote host closed the connection)
[23:06:35] <pragma-> Many parts of the 2nd edition of K&R are quite outdated. But many other parts of K&R are still relevant. So it's a very mixed bag.
[23:07:00] *** Quits: Klinda (~superleag@user/klinda) (Ping timeout: 240 seconds)
[23:07:25] *** Joins: Klinda (~superleag@user/klinda)
[23:07:42] <pragma-> I personally have stopped recommended K&R2 because having to explain that implicit int and other things no longer exists and having to remind them to find and keep the huge errata open while reading K&R2 is just absurd in 2022.
[23:07:45] *** Joins: teepee (~teepee@openscad/teepee)
[23:08:10] *** Joins: DavidMilestone (~DavidMile@182.64.13.254)
[23:10:02] *** Quits: Whatshisface (~jon@user/Whatshisface) (Ping timeout: 272 seconds)
[23:10:08] <pragma-> I can't recall, but does K&R2 write 7 or 8 lines of variable declarations at the top of every function? Imagine doing that in C11+ in 2022.
[23:10:21] <ioxzev1z> I think K&R did the job well but it's time to move on to something more recent
[23:12:32] *** Joins: Lord_of_Life_ (~Lord@user/lord-of-life/x-2819915)
[23:13:44] *** Joins: moog (~moog@107.126.48.23)
[23:13:49] *** Joins: AbleBacon (~AbleBacon@user/AbleBacon)
[23:13:51] *** Quits: Lord_of_Life (~Lord@user/lord-of-life/x-2819915) (Ping timeout: 272 seconds)
[23:15:16] *** Lord_of_Life_ is now known as Lord_of_Life
[23:17:00] *** Joins: orestarod (~orestarod@2a02:2149:8b20:700:2b9d:7f86:7169:61c0)
[23:17:59] *** Joins: alefir (~alefir@rrcs-24-43-248-58.west.biz.rr.com)
[23:18:09] *** Joins: sokan_ (~sokan@2a02:587:9e19:4700:227:eff:fe16:865d)
[23:18:51] *** Quits: sokan (~sokan@athedsl-303940.home.otenet.gr) (Ping timeout: 252 seconds)
[23:18:51] *** sokan_ is now known as sokan
[23:18:51] *** Joins: evanextreme (~evan@2604:4080:1000:8150:913b:c4e3:4b44:3850)
[23:20:29] <novns> years will pass and people will start declaring variables at the top again
[23:20:38] <novns> because it's wise and good
[23:20:59] *** Quits: smoke (~smoke@user/smoke) (Quit: Leaving)
[23:21:08] <novns> and K&R book is going to be relevant again
[23:21:41] *** Joins: noarb- (~noarb@user/noarb)
[23:21:54] *** Quits: noarb (~noarb@user/noarb) (Ping timeout: 260 seconds)
[23:22:54] *** Quits: shivesh (~shivesh@user/shivesh) (Quit: leaving)
[23:25:15] *** Quits: SymbioticFemale (~Symbiotic@user/SymbioticFemale) (Ping timeout: 240 seconds)
[23:25:28] *** Joins: phrix (~phrix@185.76.176.47)
[23:25:54] <ioxzev1z> tbh declaring at top is great because you see the big-variable-picture in one go
[23:26:05] <ioxzev1z> Not some random int x = 0; 60 lines into some function
[23:26:11] <NRK> declaring variables on top is nice. i like that style alot.
[23:26:28] *** Joins: CaryHartline (~CaryHartl@2603-8080-6a0e-8d88-1d0c-49f9-d027-bee6.res6.spectrum.com)
[23:26:37] *** Quits: shailangsa (~shailangs@host86-186-127-164.range86-186.btcentralplus.com) (Remote host closed the connection)
[23:27:18] *** Joins: SymbioticFemale (~Symbiotic@user/SymbioticFemale)
[23:27:34] *** Joins: noarb (~noarb@user/noarb)
[23:28:04] <novns> if fact, all variables should be declared globally at the very top of the whole project
[23:28:30] <ioxzev1z> novns, actually you should just declare a single static variable and modify the value whenever you need it.
[23:28:36] *** Quits: noarb- (~noarb@user/noarb) (Ping timeout: 240 seconds)
[23:28:41] <novns> ioxzev1z, nice idea
[23:29:20] *** Joins: strajder (~strajder@user/strajder)
[23:30:04] <novns> ioxzev1z, let's go deeper and declare a single static variable for all running programs
[23:30:15] <novns> use a CPU register or something
[23:30:23] <rkta> declaring at the top of what? scope?
[23:30:27] <novns> and no stacking
[23:30:43] <novns> rkta, at the top ow the world
[23:30:47] <novns> *of
[23:30:54] *** Joins: gareppa (~gareppa@user/gareppa)
[23:31:12] <rkta> novns: if this is the definition, i have to disagree ;)
[23:34:21] *** Quits: DavidMilestone (~DavidMile@182.64.13.254) (Quit: Client closed)
[23:35:15] *** Joins: Betal (~Betal@user/betal)
[23:36:19] <rkta> I like to declare everything this is valid during the scope of a function at top of that specific function. But also use 'for (int i...)' because the scope of 'i' is more narrow. What's the value of declaring a variable in the middle of a function?
[23:36:58] <ioxzev1z> rkta, block declarations are fine, e.g. void foo(void) { int x = 0; { int y = 1; /* use y */ } }
[23:37:22] <ioxzev1z> The problem comes from having random declarations within a function, e.g. random variable declarations in the middle
[23:37:34] <ioxzev1z> Can be surprising to see some big variable declared randomly
[23:37:39] <rkta> ioxzev1z: that's my definition of 'top'
[23:38:04] <ioxzev1z> rkta, right, that comment was in agreement with your for(int i...) comment
[23:38:36] <masoudd> What if you don't know how much memory you'll need to malloc until middle of a function? just declare a pointer at the top and leave it unintialized for half of the function? why not declare variables when you know their initial value?
[23:38:48] <ioxzev1z> The value of using middle-function declarations is possibly about readability, e.g. int x = 10; while(x...)
[23:39:14] <ioxzev1z> masoudd, you would probably int *p = NULL; so you see it declared but don't use it until needed
[23:39:49] <rkta> ioxzev1z: Can't you just make a for loop out of this while?
[23:40:03] <ioxzev1z> rkta, yeah but that was an example where you might declare mid-function
[23:40:07] *** Quits: gareppa (~gareppa@user/gareppa) (Quit: Leaving)
[23:40:17] <ChoHag> masoudd: You may not know how much but you will know what it's for.
[23:40:25] <ioxzev1z> Let me rephrase to: int x = 0; for(; x < 10; x++)
[23:40:45] <ioxzev1z> Anyway there are times to declare mid-function but top-declaring is very readable
[23:40:58] <ChoHag> There are almost no times to declare in the middle of a block.
[23:41:13] <ChoHag> A for loop starts a new block so it gets a pass.
[23:41:25] <ioxzev1z> ChoHag, right, that is the consensus so far
[23:41:26] <rkta> ioxzev1z: feels wrong, but I guess your are not the person to argue with here. :)
[23:41:45] <ChoHag> Personally I prefer to keep all my declarations at the top of the function/file.
[23:42:46] <rkta> if I need x outside the for loop, it might be the better idea to give it a real name and declare it at top of the scope.
[23:43:12] <ChoHag> C is not the right place to be using magic.
[23:44:24] <ioxzev1z> If you need to declare a variable but don't actually need it for the entire function you can wrap it and its usage in {}
[23:44:40] <ChoHag> In that case your function's probably too big.
[23:44:49] <ioxzev1z> Not necessarily
[23:44:55] <ChoHag> "probably"
[23:45:04] <rkta> yes, depends
[23:46:33] <rkta> I always feel bad if I create a function that is only called once. Using {} to limit the scope might be the better solution.
[23:46:56] <ChoHag> Functions aren't for the computer's benefit. They're for yours.
[23:47:23] *** Quits: karakedi (~eAC53C340@user/karakedi) (Remote host closed the connection)
[23:47:24] <ChoHag> First and foremost their purpose is to name a block of code, but what's in a name?
[23:48:01] *** Quits: jusski (~user@78-63-85-123.static.zebra.lt) (Ping timeout: 256 seconds)
[23:48:05] <ioxzev1z> rkta, I have at times created init_x(...) functions with a couple of lines of code just for readability, even if used once
[23:49:17] *** Joins: oscurochu (~oscurochu@2603:9000:c202:1034:5991:474:8074:a98a)
[23:49:56] <rkta> ioxzev1z: I get that. Readability is the point here - and that's a personal judgement. Do whatever is readable.
[23:50:28] <ChoHag> Write in such a way that your future self will not wish for a time machine.
[23:50:35] <rkta> But having a lot of small functions can make the code less readable.
[23:51:01] <apotheon> Write your code as though the next person who maintains it is a violent psychopath who knows where you live.
[23:51:04] * rkta is thinking of some "clean code"
[23:51:10] *** Joins: karakedi (~eAC53C340@user/karakedi)
[23:51:20] *** Quits: teepee (~teepee@openscad/teepee) (Remote host closed the connection)
[23:51:23] <ioxzev1z> But for example with windows networking, no problem having int main(void) { { ret = WSAStartup(...); if(ret ...) ... } } seeing as you don't actually need anything returned from that function after the call
[23:51:35] <ioxzev1z> So you can just let it go after the anonymous block
[23:51:41] *** Quits: meator (~meator@user/meator) (Remote host closed the connection)
[23:52:00] *** Joins: meator (~meator@user/meator)
[23:52:53] *** Joins: shailangsa (~shailangs@host86-186-127-164.range86-186.btcentralplus.com)
[23:54:35] *** Joins: goblin (~jaa@yatima.uukgoblin.net)
[23:54:50] *** Joins: SamuelMarks (~samuel@user/samuelmarks)
[23:54:50] <SamuelMarks> hi
[23:55:12] <rkta> I'd argue that having WSAStartup not being a function is just a case of knowing your editor. And I it's obvious, that is only used in one place. But it's a case of personal taste, no need to start a war.
[23:55:21] <SamuelMarks> I think my `strlen` is running against a non-null-terminated `char*`. How do I test this?
[23:55:30] <ioxzev1z> SamuelMarks, what do you mean?
[23:55:37] <ChoHag> Look for null.
[23:55:59] <masoudd> !strlen
[23:56:00] <ChoHag> If it's not there, you're right.
[23:56:05] *** Joins: hashfunc1e68 (~user@162.254.115.155)
[23:56:23] *** Joins: magla (~gelignite@55d44f7e.access.ecotel.net)
[23:56:25] *** Joins: nuxil_ (~nuxil@141.195.51.213)
[23:56:34] *** Joins: Charadon (~Charadon@155.138.164.183)
[23:57:17] <SamuelMarks> ioxzev1z - So I've reworked https://curl.se/libcurl/c/getinmemory.html into this, and on this line I think ASans is complaining: https://github.com/SamuelMarks/curl-simple-https/blob/985f2e0/libcurl-simple-https/curl_simple_https.c#L110
[23:57:35] <ioxzev1z> SamuelMarks, determining whether strlen will or won't work on a string is down to the programmer, who needs to know if it's null-terminated. It cannot possibly know when looping a string where it should stop, unless it finds null
[23:57:38] *** Quits: p0g0 (~p0g0@23.252.182.13) (Quit: p0g0)
[23:57:56] *** Quits: Teukka (~teukka@user/Teukka) (Read error: Connection reset by peer)
[23:58:13] <SamuelMarks> ioxzev1z - Yeah that's what I was afraid of. Hmm
[23:58:13] *** Quits: nuxil (~nuxil@141.195.51.213) (Ping timeout: 256 seconds)
[23:58:43] <ioxzev1z> The only way to use strlen correctly is to know whether the string is null-terminated before the call
[23:59:06] <rkta> isn't a string by definition null terminated?
[23:59:18] <ioxzev1z> rkta, no
[23:59:24] <ChoHag> Think of strlen as nothing to do with strings but "how many bytes between <here> and the next null?".
[23:59:38] <ioxzev1z> char x = ['a', 'b', 'c', 'd']; strlen(x) is not terminated
[23:59:43] <ioxzev1z> uh, char x[4]
