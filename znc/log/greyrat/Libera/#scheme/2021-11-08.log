[00:12:15] *** Quits: ec_ (~ec@gateway/tor-sasl/ec) (Ping timeout: 276 seconds)
[00:13:44] *** Parts: pranavats (3fba1d1b34@jabberfr.org) ()
[00:16:38] *** Joins: ec_ (~ec@gateway/tor-sasl/ec)
[00:17:29] *** Joins: civodul (~user@guix/contributor/civodul)
[00:18:56] *** Quits: xgqtd (~user@static62133140007.ostnet.pl) (Remote host closed the connection)
[00:19:09] *** Joins: xgqtd (~user@static62133140007.ostnet.pl)
[00:24:05] *** Quits: brettgilio (~brettgili@x-node.gq) (Quit: Leaving...)
[00:26:34] *** Quits: zwr (~zwr@2804:d45:b966:fb00:4dcf:a637:9af2:74cd) (Ping timeout: 260 seconds)
[00:27:24] *** Joins: zwr (~zwr@2804:d45:b966:fb00:32fc:7d91:84d3:8a74)
[00:30:27] *** Joins: brettgilio (~brettgili@x-node.gq)
[00:40:51] *** Quits: ec_ (~ec@gateway/tor-sasl/ec) (Ping timeout: 276 seconds)
[00:41:54] *** Quits: xgqtd (~user@static62133140007.ostnet.pl) (Remote host closed the connection)
[00:43:04] *** Inline_ is now known as Inline
[00:44:37] *** Joins: xgqtd (~user@static62133140007.ostnet.pl)
[00:46:09] *** Quits: hendursaga (~weechat@user/hendursaga) (Remote host closed the connection)
[00:46:14] *** Joins: hendursaga (~weechat@user/hendursaga)
[00:48:53] <amazigh> I can use grep, markov chains use a weighted random strategy
[00:50:07] <amazigh> they pick randomly words according to their frequency.
[00:50:07] <amazigh> I can NOT use grep. Sorry!
[00:51:18] <pony> what are some good books on implementing a small scheme or lisp?
[00:51:24] *** Quits: xlei (znc@pool-68-129-84-118.nycmny.fios.verizon.net) (Read error: Connection reset by peer)
[00:52:18] <pony> I see people recommending Lisp in Small Pieces
[00:52:53] *** Joins: cjb (~cjbayliss@user/cjb)
[00:55:52] <edgar-rft> pony: you answer your question faster than I can google the book title. Yes, "Lisp in Small Pieces" is the most-often recommended book. But I myself have never implemented a scheme, so what do I know...
[00:56:12] <pony> :)
[00:57:33] *** Joins: xlei (~akans@pool-68-129-84-118.nycmny.fios.verizon.net)
[00:58:04] *** Quits: cjb (~cjbayliss@user/cjb) ()
[01:01:03] *** Joins: cjb (~cjbayliss@user/cjb)
[01:24:24] *** Joins: sdu (~doo@185.44.146.165)
[01:35:06] *** Quits: choas (~lars@ppp-188-174-52-206.dynamic.mnet-online.de) (Ping timeout: 245 seconds)
[01:53:19] <amazigh> pony: I glimpsed over the second edition of LiSP, i did not like it.
[01:54:45] <amazigh> I think it is best to start from more recent material, pick a scheme in you favorite programming language e.g. scheme, and go through the implementation of scheme (meta) interpreter, then a compiler, then read https://unsyntax.org code for macrology stuff
[01:55:32] <amazigh> LiSP is interesting as history book; it is not current it terms of algorithms..
[01:55:46] <amazigh> rapid scheme is a R7RS implemented in R7RS
[01:56:09] <amazigh> I never went through the code (https://gitlab.com/nieper/rapid-scheme)
[01:56:55] <amazigh> I implemented a small subset of scheme, I basically put together what I read along the path with the help of imagination;
[01:57:37] <amazigh> I reckon it's better to start with an existing implementation that you find readable to learn faster and avoid some mistakes, possibly improve upon what you read.
[01:58:33] <amazigh> It is an investment for me to read code; but I am not used to read code. 
[01:58:35] <amazigh> In the long run, it is better to invest in code-reading skills.
[01:59:33] <amazigh> unlike my that invested into imagination...
[02:02:10] <amazigh> Look into https://github.com/kanaka/mal
[02:02:36] <amazigh> I remember about a book about writing interpreter for lisp, but i do not remember the url.
[02:02:45] <amazigh> the website is green on black;
[02:05:03] <amazigh> Here is it https://www.t3x.org/s9book/index.html
[02:05:12] <amazigh> I have no xp with that book
[02:06:51] <Zipheir> I found SICP more informative than LiSP for implementing interpreters/compilers.
[02:07:59] <Zipheir> It's a very large topic, and it might be more useful to look for papers and books about certain kinds of implementations.  There are good resources on 1st-class procedure compilation, GCs, etc., etc..
[02:10:50] <Zipheir> Maybe 90% of the books that cover compilers and interpreters ignore the major task of building a full, production language implementation, and I'm inclined to be OK with that.
[02:11:46] <Zipheir> To add another book to the discussion, though, check out Jones's _Implementation of Functional Programming Languages_ https://www.microsoft.com/en-us/research/wp-content/uploads/1987/01/slpj-book-1987-small.pdf
[02:15:14] *** Joins: lagash (lagash@lagash.freeirc.org)
[02:17:24] *** Quits: rgherdt (~rgherdt@2a02:8109:86c0:d8d:5:5375:e160:e4a4) (Ping timeout: 260 seconds)
[02:18:59] <pony> amazigh: Zipheir: thank you :)
[02:19:23] *** Quits: gproto23 (~gproto23@user/gproto23) (Ping timeout: 256 seconds)
[02:33:33] *** Quits: seninha (~seninha@user/seninha) (Ping timeout: 256 seconds)
[02:57:46] *** Quits: hendursaga (~weechat@user/hendursaga) (Quit: hendursaga)
[03:18:34] *** Joins: seninha (~seninha@user/seninha)
[03:22:26] *** Joins: s-liao (~s-liao@101.86.103.113)
[03:37:05] *** Joins: sonny (~sonny@8.6.144.238)
[04:06:23] *** Quits: taiju (~taiju@M014013236064.v4.enabler.ne.jp) (Ping timeout: 264 seconds)
[04:09:36] *** Quits: Inline (~Inline@2a02:908:1252:7a80:7e94:3856:5140:4361) (Ping timeout: 268 seconds)
[04:19:18] *** Joins: livoreno (~livoreno@user/notzmv)
[04:20:42] *** Quits: notzmv (~zmv@user/notzmv) (Ping timeout: 268 seconds)
[04:22:19] *** Joins: taiju (~taiju@240b:253:ec40:2400:2cdc:1f32:d88a:fa10)
[04:31:42] *** Joins: notzmv (~zmv@user/notzmv)
[05:08:16] *** Quits: sonny (~sonny@8.6.144.238) (Quit: Going offline, see ya! (www.adiirc.com))
[05:28:41] *** Quits: seninha (~seninha@user/seninha) (Remote host closed the connection)
[05:30:27] *** Joins: opalvaults (~user@75-172-38-229.tukw.qwest.net)
[05:37:02] *** Joins: choas (~lars@ppp-188-174-58-126.dynamic.mnet-online.de)
[05:44:16] *** Quits: taiju (~taiju@240b:253:ec40:2400:2cdc:1f32:d88a:fa10) (Ping timeout: 245 seconds)
[05:50:30] *** Joins: kronicmage (user72429@neotame.csclub.uwaterloo.ca)
[05:53:09] *** Parts: pony (sid524992@smol/hors) ()
[06:09:59] *** Quits: rickbutton (sid410078@id-410078.helmsley.irccloud.com) (Ping timeout: 264 seconds)
[06:09:59] *** Quits: theruran (uid11305@2a03:5180:f:4::2c29) (Ping timeout: 264 seconds)
[06:10:28] *** Quits: Balooga (sid407689@id-407689.lymington.irccloud.com) (Ping timeout: 268 seconds)
[06:10:35] *** Quits: rubin55 (sid175221@2a03:5180:f:4::2:ac75) (Ping timeout: 264 seconds)
[06:10:35] *** Quits: buhman (sid411355@user/buhman) (Ping timeout: 264 seconds)
[06:11:04] *** Quits: dnm (sid401311@2a03:5180:f:2::6:1f9f) (Ping timeout: 268 seconds)
[06:11:05] *** Quits: vito (sid1962@user/vito) (Ping timeout: 268 seconds)
[06:11:41] *** Quits: nrr_ (sid20938@id-20938.lymington.irccloud.com) (Ping timeout: 268 seconds)
[06:11:42] *** Quits: ullbeking (sid5364@user/ullbeking) (Ping timeout: 268 seconds)
[06:12:19] *** Quits: elderK (uid205007@id-205007.helmsley.irccloud.com) (Ping timeout: 268 seconds)
[06:12:20] *** Parts: samph_ (~quassel@li1210-9.members.linode.com) ()
[06:12:22] *** Joins: ullbeking (sid5364@user/ullbeking)
[06:12:25] *** Joins: buhman (sid411355@user/buhman)
[06:12:56] *** Joins: nrr_ (sid20938@lymington.irccloud.com)
[06:13:17] *** Joins: samph (~quassel@li1210-9.members.linode.com)
[06:13:24] *** Joins: rubin55 (sid175221@hampstead.irccloud.com)
[06:13:29] *** Joins: vito (sid1962@user/vito)
[06:14:03] *** Joins: dnm (sid401311@lymington.irccloud.com)
[06:14:34] *** Joins: theruran (uid11305@hampstead.irccloud.com)
[06:16:40] *** Joins: elderK (uid205007@helmsley.irccloud.com)
[06:17:18] *** Joins: Balooga (sid407689@lymington.irccloud.com)
[06:20:25] *** Quits: samth (sid14502@ilkley.irccloud.com) (Read error: Connection reset by peer)
[06:21:04] *** Quits: jcowan (sid325434@ilkley.irccloud.com) (Read error: Connection reset by peer)
[06:22:03] *** Joins: pranavats (3fba1d1b34@jabberfr.org)
[06:23:03] *** Quits: ullbeking (sid5364@user/ullbeking) (Ping timeout: 256 seconds)
[06:25:40] *** Joins: rickbutton (sid410078@helmsley.irccloud.com)
[06:28:09] *** Quits: dbohdan3 (~dbohdan@user/dbohdan) (Read error: Connection reset by peer)
[06:29:14] *** Joins: dbohdan (~dbohdan@user/dbohdan)
[06:34:07] *** Joins: poselyqualityles (~poselyqua@user/poselyqualityles)
[06:34:49] *** Joins: samth (sid14502@id-14502.ilkley.irccloud.com)
[06:35:10] *** Joins: ullbeking (sid5364@user/ullbeking)
[06:36:55] *** Joins: jcowan (sid325434@id-325434.ilkley.irccloud.com)
[06:48:05] *** Quits: jcowan (sid325434@id-325434.ilkley.irccloud.com) (Ping timeout: 268 seconds)
[06:48:41] *** Quits: ullbeking (sid5364@user/ullbeking) (Ping timeout: 268 seconds)
[06:49:35] *** Quits: samth (sid14502@id-14502.ilkley.irccloud.com) (Ping timeout: 264 seconds)
[06:49:51] *** Joins: ullbeking (sid5364@user/ullbeking)
[06:50:33] *** Joins: samth (sid14502@ilkley.irccloud.com)
[06:51:30] *** Joins: jcowan (sid325434@ilkley.irccloud.com)
[07:00:27] *** Joins: taiju (~taiju@240b:253:ec40:2400:2cdc:1f32:d88a:fa10)
[07:17:47] *** Quits: taiju (~taiju@240b:253:ec40:2400:2cdc:1f32:d88a:fa10) (Ping timeout: 264 seconds)
[07:22:34] *** Joins: taiju (~taiju@M014013236064.v4.enabler.ne.jp)
[07:31:59] *** Quits: elderK (uid205007@helmsley.irccloud.com) (Ping timeout: 244 seconds)
[07:31:59] *** Quits: dnm (sid401311@lymington.irccloud.com) (Ping timeout: 244 seconds)
[07:31:59] *** Quits: rubin55 (sid175221@hampstead.irccloud.com) (Ping timeout: 244 seconds)
[07:32:11] *** Quits: conjunctive (sid433686@helmsley.irccloud.com) (Ping timeout: 245 seconds)
[07:32:11] *** Quits: rickbutton (sid410078@helmsley.irccloud.com) (Ping timeout: 256 seconds)
[07:32:11] *** Quits: theruran (uid11305@hampstead.irccloud.com) (Ping timeout: 256 seconds)
[07:32:11] *** Quits: vito (sid1962@user/vito) (Ping timeout: 256 seconds)
[07:32:28] *** Quits: jcowan (sid325434@ilkley.irccloud.com) (Ping timeout: 268 seconds)
[07:32:28] *** Quits: samth (sid14502@ilkley.irccloud.com) (Ping timeout: 268 seconds)
[07:32:46] *** Joins: dnm (sid401311@lymington.irccloud.com)
[07:32:51] *** Joins: vito (sid1962@user/vito)
[07:32:57] *** Joins: rickbutton (sid410078@id-410078.helmsley.irccloud.com)
[07:33:05] *** Quits: ullbeking (sid5364@user/ullbeking) (Ping timeout: 268 seconds)
[07:33:07] *** Joins: theruran (uid11305@id-11305.hampstead.irccloud.com)
[07:33:28] *** Joins: conjunctive (sid433686@id-433686.helmsley.irccloud.com)
[07:33:51] *** Joins: elderK (uid205007@id-205007.helmsley.irccloud.com)
[07:33:53] *** Quits: buhman (sid411355@user/buhman) (Ping timeout: 256 seconds)
[07:33:53] *** Quits: d_run (sid83858@hampstead.irccloud.com) (Ping timeout: 256 seconds)
[07:33:55] *** Joins: rubin55 (sid175221@2a03:5180:f:4::2:ac75)
[07:34:06] *** Quits: nrr_ (sid20938@lymington.irccloud.com) (Ping timeout: 260 seconds)
[07:34:30] *** Joins: ullbeking (sid5364@user/ullbeking)
[07:34:36] *** Joins: buhman (sid411355@user/buhman)
[07:34:37] *** Joins: nrr_ (sid20938@id-20938.lymington.irccloud.com)
[07:34:41] *** Joins: samth (sid14502@id-14502.ilkley.irccloud.com)
[07:34:45] *** Joins: d_run (sid83858@id-83858.hampstead.irccloud.com)
[07:34:45] *** Joins: jcowan (sid325434@id-325434.ilkley.irccloud.com)
[07:35:05] *** Quits: opalvaults (~user@75-172-38-229.tukw.qwest.net) (Ping timeout: 244 seconds)
[08:11:15] *** Joins: ramrunner (~dsp@78.141.218.152)
[08:15:18] *** Quits: s-liao (~s-liao@101.86.103.113) (Ping timeout: 256 seconds)
[08:15:27] *** Quits: cjb (~cjbayliss@user/cjb) ()
[08:25:57] *** Joins: winning-luser (~wl@2601:8c1:80:70d0::32f3)
[08:36:58] *** Joins: s-liao (~s-liao@101.86.103.113)
[09:25:03] *** Joins: ZombieChicken (~weechat@user/zombiechicken)
[09:34:59] *** Quits: elflng (~elflng@5.28.137.182) (*.net *.split)
[09:35:29] *** Joins: elflng (~elflng@5.28.137.182)
[09:36:00] *** Quits: ZombieChicken (~weechat@user/zombiechicken) (Quit: WeeChat 3.3)
[09:42:53] *** Quits: klu (~klu@user/klu) (*.net *.split)
[09:42:53] *** Quits: DeeEff_ (~deeeff@user/deeeff) (*.net *.split)
[09:42:53] *** Quits: ormaaj (~ormaaj@user/ormaaj) (*.net *.split)
[09:42:54] *** Quits: light (~light@user/light) (*.net *.split)
[09:42:54] *** Quits: topoi (~topoi@user/topoi) (*.net *.split)
[09:43:05] *** Joins: light (~light@user/light)
[09:43:13] *** Joins: klu (~klu@98.247.231.39)
[09:43:24] *** Joins: topoi (~topoi@user/topoi)
[09:43:45] *** Quits: klu (~klu@98.247.231.39) (Changing host)
[09:43:45] *** Joins: klu (~klu@user/klu)
[09:45:08] *** Joins: ormaaj (~ormaaj@user/ormaaj)
[09:45:14] *** Joins: DeeEff_ (~deeeff@user/deeeff)
[09:55:32] *** Quits: jao (~jao@cpc103048-sgyl39-2-0-cust502.18-2.cable.virginm.net) (Ping timeout: 268 seconds)
[10:12:06] *** Quits: civodul (~user@guix/contributor/civodul) (Remote host closed the connection)
[10:24:32] *** Quits: ASau (~user@lmpc.drb.insel.de) (Read error: Connection reset by peer)
[10:24:58] *** Joins: ASau (~user@lmpc.drb.insel.de)
[10:37:01] *** Quits: malaclyps (~mala@user/malaclyps) (Quit: ZNC 1.6.1 - http://znc.in)
[10:39:41] *** Quits: skapata (~Skapata@user/skapata) (Remote host closed the connection)
[10:54:39] *** Joins: mala (~mala@user/malaclyps)
[11:12:17] *** Joins: rgherdt (~rgherdt@2a02:8109:86c0:d8d:5:5375:e160:e4a4)
[11:20:52] *** Joins: AndrewYu (~andrew@user/andrewyu)
[11:26:30] *** Joins: Avichi (~Avichi@pppoe.178-66-158-238.dynamic.avangarddsl.ru)
[11:44:05] *** Quits: notzmv (~zmv@user/notzmv) (Ping timeout: 268 seconds)
[11:44:10] *** Quits: livoreno (~livoreno@user/notzmv) (Ping timeout: 260 seconds)
[12:00:11] *** Quits: ASau (~user@lmpc.drb.insel.de) (Read error: Connection reset by peer)
[12:00:43] *** Joins: ASau (~user@lmpc.drb.insel.de)
[12:20:17] *** Joins: zap (~zap@gateway/tor-sasl/zap)
[12:38:48] *** Quits: Avichi (~Avichi@pppoe.178-66-158-238.dynamic.avangarddsl.ru) (Ping timeout: 256 seconds)
[13:10:22] *** Joins: gproto23 (~gproto23@user/gproto23)
[13:32:06] *** Quits: poselyqualityles (~poselyqua@user/poselyqualityles) (Ping timeout: 244 seconds)
[13:44:29] *** Quits: ASau (~user@lmpc.drb.insel.de) (Read error: Connection reset by peer)
[13:45:33] *** Joins: ASau (~user@194.31.92.26)
[13:52:05] *** Joins: pull (~tcz@91.150.165.88)
[13:52:21] *** Joins: notzmv (~zmv@user/notzmv)
[13:58:57] *** Joins: civodul (~user@guix/contributor/civodul)
[14:25:36] *** Quits: s-liao (~s-liao@101.86.103.113) (Quit: Client closed)
[14:27:06] *** Joins: s-liao (~s-liao@101.86.103.113)
[14:37:10] *** Quits: s-liao (~s-liao@101.86.103.113) (Quit: Client closed)
[14:56:19] *** Quits: terrorjack (~terrorjac@2a01:4f8:1c1e:509a::1) (Quit: The Lounge - https://thelounge.chat)
[14:58:15] *** Joins: terrorjack (~terrorjac@static.3.200.12.49.clients.your-server.de)
[14:59:26] *** Quits: terrorjack (~terrorjac@static.3.200.12.49.clients.your-server.de) (Client Quit)
[15:01:37] *** Joins: terrorjack (~terrorjac@2a01:4f8:1c1e:509a::1)
[15:27:42] *** Quits: pull (~tcz@91.150.165.88) (Quit: Czesc)
[15:28:02] *** Joins: pull (~tcz@91.150.165.88)
[15:49:13] *** Parts: pranavats (3fba1d1b34@jabberfr.org) ()
[15:49:40] *** Joins: pranavats (3fba1d1b34@jabberfr.org)
[15:55:01] *** Quits: hiruji (~hiruji@user/hiruji) (Quit: ZNC 1.8.2 - https://znc.in)
[15:55:33] *** Joins: hiruji (~hiruji@user/hiruji)
[15:55:33] *** Quits: hiruji (~hiruji@user/hiruji) (Remote host closed the connection)
[15:55:50] *** Joins: hiruji (~hiruji@user/hiruji)
[16:11:05] *** Quits: hiruji (~hiruji@user/hiruji) (Ping timeout: 268 seconds)
[16:25:54] *** Joins: poselyqualityles (poselyqual@user/poselyqualityles)
[16:40:36] *** Joins: wnklmnn (~wnklmnn@2a02:908:4e2:9740:8677:5fd8:e800:4c41)
[16:43:45] *** Joins: s-liao (~s-liao@101.86.103.113)
[16:46:40] *** Joins: Avichi (~Avichi@95.161.222.58)
[17:00:11] *** Quits: pull (~tcz@91.150.165.88) (Quit: Czesc)
[17:01:39] *** Quits: kjak (~kjak@pool-108-45-56-21.washdc.fios.verizon.net) (Ping timeout: 268 seconds)
[17:09:58] *** Joins: seninha (~seninha@user/seninha)
[17:13:34] *** Joins: s-liao33 (~s-liao@101.86.103.113)
[17:13:38] *** Quits: s-liao33 (~s-liao@101.86.103.113) (Client Quit)
[17:13:56] *** Joins: s-liao61 (~s-liao@101.86.103.113)
[17:14:36] *** Quits: s-liao61 (~s-liao@101.86.103.113) (Client Quit)
[17:14:46] *** Quits: s-liao (~s-liao@101.86.103.113) (Ping timeout: 256 seconds)
[17:14:57] *** Joins: s-liao (~s-liao@101.86.103.113)
[17:16:20] *** Quits: poselyqualityles (poselyqual@user/poselyqualityles) (Ping timeout: 244 seconds)
[17:33:04] *** Quits: edgar-rft (~edgar-rft@HSI-KBW-109-193-249-223.hsi7.kabel-badenwuerttemberg.de) (Quit: Leaving)
[17:45:22] *** Quits: Avichi (~Avichi@95.161.222.58) (Ping timeout: 256 seconds)
[17:54:39] *** Joins: Avichi (~Avichi@95.161.222.58)
[17:55:32] *** Quits: gproto23 (~gproto23@user/gproto23) (Ping timeout: 240 seconds)
[17:58:24] *** Quits: s-liao (~s-liao@101.86.103.113) (Ping timeout: 256 seconds)
[18:00:56] *** Joins: s-liao (~s-liao@101.86.103.113)
[18:07:18] *** Joins: Inline (~Inline@2a02:908:1252:7a80:c5a4:eaf2:add7:ad94)
[18:08:41] *** Quits: s-liao (~s-liao@101.86.103.113) (Quit: Client closed)
[18:15:58] *** Quits: Avichi (~Avichi@95.161.222.58) (Ping timeout: 256 seconds)
[18:23:00] *** noa_ is now known as noa
[18:24:39] *** Joins: klovett (~klovett@c-73-231-102-38.hsd1.ca.comcast.net)
[18:28:21] *** Joins: gproto23 (~gproto23@user/gproto23)
[18:36:47] *** Joins: skapata (~Skapata@2804:14c:87b0:a6f9:d18c:8b69:3306:9a69)
[18:36:47] *** Quits: skapata (~Skapata@2804:14c:87b0:a6f9:d18c:8b69:3306:9a69) (Changing host)
[18:36:47] *** Joins: skapata (~Skapata@user/skapata)
[18:39:42] *** Parts: noa (~twee@142.93.153.223) ()
[18:55:43] *** Joins: edgar-rft (~edgar-rft@hsi-kbw-109-193-249-223.hsi7.kabel-badenwuerttemberg.de)
[19:14:51] *** Quits: dnm (sid401311@lymington.irccloud.com) (Ping timeout: 256 seconds)
[19:18:03] *** Joins: dnm (sid401311@id-401311.lymington.irccloud.com)
[19:28:09] *** Joins: seninha_ (~seninha@user/seninha)
[19:29:23] *** Joins: poselyqualityles (poselyqual@user/poselyqualityles)
[19:31:02] *** Quits: seninha (~seninha@user/seninha) (Ping timeout: 240 seconds)
[19:33:14] *** Quits: X-Scale (~ARM@165.201.137.78.rev.vodafone.pt) (Ping timeout: 260 seconds)
[19:34:32] *** Joins: gnomon (~gnomon@cpe1c872c7063d0-cm00fc8d8fbe70.cpe.net.cable.rogers.com)
[19:34:44] *** Joins: X-Scale` (~ARM@46.50.3.203)
[19:35:17] *** X-Scale` is now known as X-Scale
[19:38:53] *** Quits: poselyqualityles (poselyqual@user/poselyqualityles) (Ping timeout: 250 seconds)
[20:02:39] *** Quits: seninha_ (~seninha@user/seninha) (Quit: Leaving)
[20:02:43] *** Quits: gproto23 (~gproto23@user/gproto23) (Ping timeout: 250 seconds)
[20:12:56] *** Joins: seninha (~seninha@user/seninha)
[20:18:43] *** Quits: civodul (~user@guix/contributor/civodul) (Ping timeout: 244 seconds)
[20:39:42] *** Joins: gproto23 (~gproto23@user/gproto23)
[20:43:43] *** Quits: Inline (~Inline@2a02:908:1252:7a80:c5a4:eaf2:add7:ad94) (Remote host closed the connection)
[20:44:45] *** Joins: Inline (~Inline@2a02:908:1252:7a80:2e5d:c24e:9b07:51fd)
[20:46:53] *** Quits: seninha (~seninha@user/seninha) (Quit: Leaving)
[20:52:42] *** Joins: jao (~jao@cpc103048-sgyl39-2-0-cust502.18-2.cable.virginm.net)
[21:09:07] *** Joins: livoreno (~livoreno@user/notzmv)
[21:37:44] <pi0> anyone here avail for a scheme question?
[21:42:45] *** Joins: hexteex (~hexteex@gateway/tor-sasl/hexteex)
[21:46:20] <amazigh> pi0: yes, do not ask to ask plzzzzzzzzzz
[21:46:22] <amazigh> :D
[21:46:42] <amazigh> pi0: what scheme implementation did you pick?
[21:51:36] *** Quits: hexteex (~hexteex@gateway/tor-sasl/hexteex) (Ping timeout: 276 seconds)
[21:54:21] *** Quits: livoreno (~livoreno@user/notzmv) (Read error: Connection reset by peer)
[21:54:45] *** Joins: livoreno (~livoreno@user/notzmv)
[22:02:35] *** Joins: hexteex (~hexteex@gateway/tor-sasl/hexteex)
[22:03:58] <pi0> https://aggie.io/yv6tekbgsv
[22:04:03] <pi0> here is the questions
[22:04:21] <pi0> oof 
[22:06:03] <pi0> amazigh: to answer your question, i am not sure
[22:06:13] <pi0> i am barely starting out and read chapter 1
[22:10:34] <Zipheir> Oof, that is the most JS-heavy pastebin I've ever seen.
[22:10:41] <Zipheir> pi0: What is your question?
[22:11:47] *** Joins: poselyqualityles (~poselyqua@user/poselyqualityles)
[22:11:53] <pi0> with my little schemer book not sure were to start
[22:11:57] <pi0> opps sorry about that
[22:12:37] <pi0> i cannot seem to find " define" either
[22:12:43] <pi0> as a syntax on my book
[22:13:21] <Zipheir> `define` is standard Scheme; any implementation should provide it.
[22:16:54] <pi0> hmm
[22:16:55] <Zipheir> pi0: Have you tried to solve these yet?
[22:18:15] *** Quits: zap (~zap@gateway/tor-sasl/zap) (Ping timeout: 276 seconds)
[22:19:38] <pi0> i am trying
[22:19:43] <pi0> but not exactly sure how to start
[22:20:16] <pi0> i mean the function is (AddAnd42)
[22:22:08] * amazigh looks at the aggie.io link
[22:22:13] * amazigh put face on the table
[22:22:28] <pi0> i am there
[22:22:32] <amazigh> we are into a long way, I guess  that is the way
[22:22:55] <pi0> i am on aggie
[22:23:13] <amazigh> usually, it is better to paste the on textual bin such as https://dpaste.com/ or paste.gnome.org or debian paste or something. 
[22:23:40] <amazigh> Aggie.io
[22:23:42] <amazigh> A collaborative painting application
[22:23:48] <amazigh> hmm.. i understand now. 
[22:23:58] <pi0> are you able to see what i did on aggie?
[22:24:28] <amazigh> IIRC repl.it has something like aggie.io for code, see https://replit.com/
[22:24:48] <pi0> if i remember correctly are they charing now?
[22:25:22] <amazigh> the '42 should be just 42
[22:25:43] <pi0> hmm
[22:26:04] <amazigh> the 3rd response is wrong, you do not need to do (car '(peanut-butter)) that is eq? to 'peanut-butter
[22:26:41] <amazigh> that is not your doing but scheme use kebab-case... 
[22:26:57] <amazigh> Not CamelCase.
[22:27:07] <amazigh> So AddAnd42 should be  named add-and-42
[22:27:26] <amazigh> c2f should be centigrade->fahrenheit
[22:27:39] <amazigh> pb should be peanut-butter
[22:27:46] <lampilelo> product is a result of multiplication, not addition
[22:28:02] <Zipheir> amazigh: That's all a matter of style.  I think pi0 is trying to learn Scheme fundamentals.
[22:28:10] <amazigh> Zipheir: yes sure
[22:29:37] <Zipheir> pi0: It's instructive to see why you can write a much simpler version of `pb`.  (car LIST) evaluates to the first element of LIST, so the value of (car '(X)) is strictly equivalent to X.
[22:30:19] <amazigh> 'X
[22:30:27] <Zipheir> Yes.
[22:30:48] <Zipheir> Quotation can be annoying for writing examples.
[22:31:50] <Zipheir> Because of Lisp notation, I can never write a list like (x y z) and assume people know what I mean.
[22:32:00] <amazigh> agreed
[22:33:10] <pi0> allow me to see if i can get that replit
[22:35:04] <pi0> https://replit.com/@pizero/DeterminedAdventurousServer
[22:35:07] <pi0> got it!
[22:35:24] <pi0> https://replit.com/join/ivoecqupnn-pizero
[22:35:26] <pi0> or this one
[22:37:16] <Zipheir> That's weird.  "Running Scheme is no longer supported."
[22:37:17] <pi0> are you guys able to join that session
[22:37:42] <Zipheir> I don't have an account with them.
[22:38:01] <Zipheir> But we're not talking about long programs, in any case.
[22:39:45] <pi0> gotcha, can we start with #1
[22:40:12] <Zipheir> It looks like you've solved that one.
[22:40:54] <Zipheir> Except that you don't need to quote 42, as amazigh wrote; numbers evaluate to themselves.
[22:40:58] <pi0> wait is number 2 and 3 already answered
[22:41:56] *** Quits: grettke (~grettke@cpe-65-29-228-30.wi.res.rr.com) (Quit: Textual IRC Client: www.textualapp.com)
[22:42:49] <pi0> oof i hate being this unaware 
[22:43:01] <pi0> i feel like i am barely learning java
[22:43:07] <pi0> and they toss this in the mix
[22:45:13] <Zipheir> Java is far more complex than Scheme.
[22:45:47] <Zipheir> pi0: If you have any specific questions, feel free to ask them.
[22:46:07] <pi0> well i wouldnt even know how to create a function in scheme
[22:46:10] <pi0> but i can in java
[22:47:17] <Zipheir> pi0: Didn't you just write (define (pb) (car '(peanut-butter))), etc.?
[22:54:52] <pi0> i actually did not write that, that was part of my assignment
[22:55:01] <pi0> i am not sure if the professor also provided the answer as well
[22:55:09] <pi0> which now i am more confused as to why 
[22:56:09] <Zipheir> You provided both the questions and some answers to them, then.
[22:57:34] *** Joins: hiruji (~hiruji@user/hiruji)
[22:57:54] <Zipheir> It's therefore not clear to me what we can help you with.
[22:58:22] *** Quits: gproto23 (~gproto23@user/gproto23) (Ping timeout: 244 seconds)
[23:00:36] <pi0> i am about to join office hours with my prof right now
[23:00:41] <pi0> hopefully he will be there
[23:05:43] <mdhughes> Well, making a function is like the first chapter in SICP, TSPL, or any other Scheme text…
[23:06:25] <mdhughes> Of course Abelson, Dybvig, and such will tell you the "correct" way to assign it, (define pb (lambda () ...)) rather than the shorthand.
[23:08:34] <gwatt> Do you always use the long form? I only use it when defining curried functions, and even then not always
[23:09:15] <Zipheir> I'm not aware of many Dybvig Disciples...
[23:09:27] <mdhughes> In practice, about 75% shorthand, 25% long form, especially when I know I'm gonna replace it with case-lambda (which I have macro'd as λ*)
[23:11:18] <pi0> phew, looks like the prof gave us the answers along with the questions
[23:11:34] <pi0> just confirmed during office hours
[23:11:59] <pi0> however i did notice this question, he said to work on it, but i did not see the actual question in it
[23:12:02] <pi0> By the way, the easiest way to return your comments is to make them into a string by surrounding them with double quotes. For example, try typing "This is a
[23:12:05] <pi0> string." at a Scheme promp
[23:12:09] <mdhughes> Also if I'm assigning a name to some proc that I might replace during runtime, (define foo-handler (λ () ...)) is more obvious.
[23:13:26] <Zipheir> mdhughes: Yes, as a placeholder for case-lambda is my standard use-case for Ronakian procedure definitions.
[23:14:22] <Zipheir> pi0: What do you think "return your comments" means?
[23:15:28] <gwatt> when did scheme gain the (define (func ...) ...) shorthand?
[23:17:43] *** Joins: gproto23 (~gproto23@user/gproto23)
[23:17:43] <jcowan> r1rs, which is to say 1978.
[23:18:37] <pi0> when you say it like that i am thinking perhaps a void print function
[23:18:42] <pi0> but i could be mistaken?
[23:20:17] <Zipheir> pi0: I don't know what your professor means, but I do know that "this is a string" evaluates to "this is a string".
[23:20:21] <mdhughes> Oh, weird, R1RS allows (DEFINE <identifier> (<identifier list>) <form list>)
[23:21:07] <pi0> how do i print something in scheme
[23:21:41] <Zipheir> pi0: (display SOMETHING)
[23:21:51] <mdhughes> display, newline are the standard ones. Your scheme might have more functions.
[23:25:05] *** Joins: seninha (~seninha@user/seninha)
[23:25:31] <jcowan> Yes.  In R2RS that was gone, but (define ((foo bar) baz zam) ...) was allowed.  It disappeared in R3RS but is in SRFI 219 and may return in R7RS-large depending the current vote.
[23:25:47] <jcowan> By the way, if you haven't voted, go vote!  
[23:26:23] <jcowan> Your vote may determine the fate of explicit renaming.
[23:27:36] <mdhughes> I did, I want syntax-case of course.
[23:27:48] <Zipheir> jcowan: Wow, why was it dropped?
[23:28:02] <mdhughes> Or just wild west low-level macros. I ain't skirred.
[23:28:22] <ecraven> the voting period still extends for some time, right?
[23:28:30] <jcowan> You'd have to dig through the scheme editors mailing list to find out.
[23:29:10] <jcowan> ecraven: Noon on February 1st, UTC.  Plenty of time.
[23:29:10] <mdhughes> I like having fewer cases to regex-search for to find functions.
[23:29:19] <ecraven> so much to read and understand ;)
[23:29:50] <mdhughes> ^ then introduces custom macros to make that search harder.
[23:30:59] <jcowan> True.  But as I pointed out to MN-W, no decision strategy  whether democratic, aristocratic, or monarchic has ever depended on the decision-makers being fully informed.  In fact, no one is ever *fully* informed.
[23:31:03] <mdhughes> Scheme isn't the *worst* language for finding functions I know. Javascript has function, ()=> with and without {}, class functions which are just name(){} , etc.
[23:31:53] <jcowan> $EMPLOYER has standardized on function, fortunately
[23:31:55] <mdhughes> { foo: function() { ... }, }
[23:34:57] <pi0> https://dpaste.org/RJXk
[23:34:58] <pi0> ?
[23:35:03] *** Quits: livoreno (~livoreno@user/notzmv) (Ping timeout: 250 seconds)
[23:35:33] <pi0> does x need to have "" or '' ?
[23:37:14] <jcowan> pi0: Your problem is that you are comparing x against the values of the (non-existent) variables name, partners, and comments.  You want to compare against symbols, so you must write 'name, 'partners, and 'comments.
[23:37:52] <jcowan> Note that ' means the next thing (normally a symbol or a list) is a literal value; it is never paired.
[23:38:06] <pi0> https://dpaste.org/3rsv#L8
[23:38:10] <pi0> like this 
[23:39:15] <jcowan> Yes.  Since 'name is always exactly the same object, you can use eq? instead of equal?.
[23:39:41] <jcowan> eq? is Java/C# ==, JavaScript ===, etc.
