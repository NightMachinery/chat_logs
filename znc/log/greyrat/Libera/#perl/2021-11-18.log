[00:04:06] *** Quits: FastJack (~fastjack@b2b-78-94-22-14.unitymedia.biz) (Ping timeout: 256 seconds)
[00:05:47] *** Joins: FastJack (~fastjack@b2b-78-94-22-14.unitymedia.biz)
[00:08:05] *** Quits: zhmylove (~zhmylove@178.252.127.211) (Ping timeout: 265 seconds)
[00:12:23] *** Quits: proller (~p@2a02:6b8:b081:7209::1:1e) (Ping timeout: 264 seconds)
[00:13:45] *** Joins: hethw (~heth@46.238.32.56)
[00:23:04] *** Joins: Penguin666 (~Penguin66@217.138.205.135)
[00:25:38] *** Joins: proller (~p@80.240.216.69)
[00:26:01] <gordonfish> Re: <ilmari> because brexit means EU card fee limits no longer apply, so Visa hiked their fees in the UK (from 0.3% to 1.5%, ISTR someone claim)
[00:26:13] *** Quits: Guest17 (~Guest17@eth-west-pareq2-46-193-4-100.wb.wifirst.net) (Quit: Client closed)
[00:26:22] <gordonfish> That looks like flat about abuse? Doesn't the UK have their own laws about fair business practices?
[00:26:27] *** Quits: Penguin666x (~Penguin66@217.138.205.135) (Ping timeout: 265 seconds)
[00:27:03] *** Joins: kitsunenokenja (~kitsunech@68.91.220.96)
[00:27:05] <hethw> ok, that took some time: 
[00:27:08] <hethw> do you see this? https://l.perl.bot/p/8ypg55
[00:27:09] <Paperbot> Link title(s): [ Perlbot Pastebin ]
[00:27:15] <gordonfish> I mean that's a 500% increase
[00:28:00] *** Quits: ugjka (~ugjka@ugjka.net) (Quit: Rabooting the server https://ugjka.net)
[00:28:20] <gordonfish> And how did they not realize that doing that would result in them losing business to Master and others?
[00:28:34] *** Joins: ugjka (~ugjka@ugjka.net)
[00:28:42] <ehuelsmann[m]> gordonfish: I'm sure they can come up with lots of reasons why brexit caused them a 499% cost increase.
[00:28:49] *** Joins: dextercd (~dexter@2a02-a450-f25d-1-76d4-35ff-fefe-34c.fixed6.kpn.net)
[00:29:57] <gordonfish> ehuelsmann[m]: I'd like to see them defend it when other companies didn't
[00:30:10] <hethw> ok, pasted again here https://pastebin.com/7WALpHsz why is find producing different results if the UTF8 flag is up? this is super strange and crazy 
[00:30:11] <Paperbot> Link title(s): [ #!/usr/bin/perl#y@y ~/src/perl $ tree find/#find/#├── fffd#│   └── f - Pastebin.com ]
[00:30:12] <Repaster> Repasted text from hethw: http://perl.bot/p/y3dam2
[00:30:18] <gordonfish> (didn't need to do that, that is)
[00:30:29] <simcop2387> gordonfish: 500% yes but it's in line with us fees
[00:31:02] <gordonfish> simcop2387: Yeah but we're talking about the UK, where it appears the standard was different
[00:31:34] *** Quits: Falconer_ (~ronnyma@227.84-48-191.nextgentel.com) (Quit: leaving)
[00:31:42] <simcop2387> gordonfish: not quite.  you're talking about the eu before.  what were they before the uk joined
[00:31:45] *** Joins: Falconer_ (~ronnyma@227.84-48-191.nextgentel.com)
[00:31:52] <gordonfish> { Re: <hethw> do you see this? https://l.perl.bot/p/8ypg55 } Looks blank to me
[00:31:52] <Paperbot> Link title(s): [ Perlbot Pastebin ]
[00:31:53] <ilmari_> gordonfish: no, Brexit means cutting Brussels red tape! Freedom! Juche Britannia!
[00:32:02] <simcop2387> the situation is a clusterfuck
[00:32:16] <gordonfish> Not helped by politics, that's for certain
[00:32:55] *** Joins: hudo__ (~hudo@62.68.19.39)
[00:33:24] <ilmari_> See also various mobile phone operators introducing roaming charges
[00:34:05] <gordonfish> hethw: http://perl.bot/p/y3dam2 shows up for me (perlbot's interception of your pastebin.com link (and why TF are you using pastebin.com... eww))
[00:34:06] <Paperbot> Link title(s): [ Perlbot Pastebin ]
[00:35:09] *** Quits: tejr (~tejr@user/tejr) (Remote host closed the connection)
[00:35:50] *** Quits: hudo_ (~hudo@62.68.19.39) (Ping timeout: 256 seconds)
[00:36:09] *** Falconer_ is now known as Falconer
[00:36:39] <tkr> gordonfish: I would use pastebin.com, if I didn't have a better idea. It's the most common one!
[00:37:46] <gordonfish> tkr: If you must, please paste the link for the 'raw' paste
[00:38:30] <simcop2387> rust now supports mips64 windows nt 4.0.  we're running behind.
[00:38:41] <simcop2387> genio: any luck with sp?
[00:39:13] <genio> Haven't gotten back to it due to some personal stuff going on
[00:39:27] <simcop2387> dang.  looking forward to it
[00:41:00] <gordonfish> simcop2387: I wonder how many active mips64 based windows machines currently exist
[00:41:08] <gordonfish> (nt 4.0 or otherwise)
[00:41:36] <simcop2387> gordonfish: statistically speaking 0
[00:41:56] <gordonfish> (Also I don't remember NT 4.x or 2000 having any 64-bit support, I thought XP was the first?)
[00:42:12] <gordonfish> XP/2003
[00:45:55] *** Joins: whynot (~whynot@46.96.180.218)
[00:48:41] *** Quits: proller (~p@80.240.216.69) (Ping timeout: 265 seconds)
[00:49:03] *** Joins: proller (~p@2a02:6b8:b081:1210::1:1d)
[00:49:20] <simcop2387> gordonfish: mips64 was special, first 64bit microprocessors i believe
[00:50:37] *** Quits: Pixi (~Pixi@user/pixi) (Ping timeout: 265 seconds)
[00:50:38] <gordonfish> Well no doubt that would have been a very specialized build of windows
[00:52:02] *** Joins: tejr (~tejr@user/tejr)
[00:52:35] <gordonfish> I think I found a slight mistake in https://metacpan.org/pod/JSONY#JSONY-SYNTAX, under 'Strings with spaces can use single or double quotes:', where the result of 'foo bar' is shown as "foo bar " instead of "foo bar" (errant trailing space.)
[00:52:37] <Paperbot> Link title(s): [ JSONY - metacpan.org ]
[00:53:22] <gordonfish> Assuming I'm not going crazy and thus seeing things, I can go make a quick PR
[00:55:35] *** Quits: miojo (~fu@187.32.234.131) (Ping timeout: 250 seconds)
[00:57:16] *** Joins: miojo (~fu@187.32.234.131)
[01:01:01] <gordonfish> https://github.com/ingydotnet/jsony-pm/pull/6
[01:01:02] <Paperbot> Link title(s): [ Removed errant trailing space from example result by gordon-fish · Pull Request #6 · ingydotnet/j... ]
[01:03:53] *** Joins: Pixi (~Pixi@user/pixi)
[01:06:39] * GumbyPAN CPAN Upload: Net-SAML2-0.45 by TIMLEGGE https://metacpan.org/release/TIMLEGGE/Net-SAML2-0.45
[01:07:32] *** Quits: miojo (~fu@187.32.234.131) (Ping timeout: 265 seconds)
[01:09:07] *** Joins: miojo (~fu@191.253.152.133)
[01:09:12] <zgu> didn't some version of NT run on alpha?
[01:11:25] <gordonfish> zgu: I think so, that does ring a bell
[01:12:56] <mst> I don't recall if it ever actually got -released- but it was definitely ported
[01:13:27] <mst> https://devblogs.microsoft.com/oldnewthing/20170807-00/?p=96766
[01:13:28] <Paperbot> Link title(s): [ The Alpha AXP, part 1: Initial plunge - The Old New Thing ]
[01:23:16] <gordonfish> [Path::Tiny] Noticed something interesting. When using ->slurp_utf8 on a file that starts with a utf8 bom (\xef\xbb in my case), the bom is left in. Not quite sure if that is correct behavior?
[01:24:07] <gordonfish> I noticed this when adding a bom to a JSONY-based config file that I was testing, which resulted in a 'Error parsing Pegex document' message, since it saw that utf-8 bom.
[01:24:38] <mst> the thing is, you'd break roundtripping if you did anything else
[01:25:02] <mst> so I think basically "boms are satan, this is the least worst option" applies
[01:25:09] <gordonfish> I've worked with utf-8 files before but don't ever recall having to manually remove the bom (though then again most files and data are often bom less, or other modules deal with it on their own perhaps.)
[01:25:30] <gordonfish> mst: So best to leave it bom-less then?
[01:25:39] <Grinnz> it's very rare for files to have them, and mostly only in file formats that would necessitate removing them
[01:25:48] <Grinnz> if it's just plaintext, there's nothing that makes it special
[01:26:20] <mst> gordonfish: yeah, they're a theoretically nice idea that I've never seen solving problems rather than causing them in practice
[01:26:45] <gordonfish> I still would have thought that ->slurp_utf8 would remove it from the buffer it emits, as it is only needed for know what the byte order and shouldn't be needed after everything has been read (which is what slurp'ing is for.)
[01:27:07] <Grinnz> it's part of the contents
[01:27:23] <Grinnz> unfortunately it's not metadata, like it should be
[01:27:37] <Grinnz> anything that wants to care needs special handling at that level
[01:27:47] *** Quits: jabberwok (~wlindley@75.105.20.104) (Quit: Leaving.)
[01:28:29] <Grinnz> slurp_utf8 would similarly be incorrect if it unicode-normalized the characters for you, even though that ostensibly doesn't change the text either
[01:28:36] <gordonfish> Come to think of it, is there any point to bom in utf-8? I know in utf-16 and -32 you need to know what order it's in, but utf-8 is bytes, so where, if anywhere, does byte order come into play (if at all, I'd image the utf-8 specific sequences? )
[01:28:45] <Grinnz> there usually isn't
[01:28:55] <Grinnz> and it's not for byte order when it is useful
[01:29:08] <Grinnz> it's usually a way to declare encoding if anything
[01:29:19] <Grinnz> but it's not consistently used for that so it's not really useful
[01:29:20] <gordonfish> Oh
[01:29:48] <Grinnz> you might see it in CSV files though for isntance which is why Text::CSV has special handling for it
[01:30:59] * gordonfish wonders if it might make sense if ->slurp_utf8 has a list-context usage where it returned ($bom, $content) (and just $content in scalar like currently.)
[01:31:10] <Grinnz> dear god no
[01:31:22] <Botje> UTF8 with BOMs?
[01:31:25] <gordonfish> (That is, in scalar context, the full, unsplit, content.)
[01:31:26] <Botje> not in my lifetime
[01:31:43] <Grinnz> you've just introduced the context sensitivity bug, first of all
[01:31:49] <mst> gordonfish: http://trout.me.uk/bunny.jpg
[01:31:54] <mst> gordonfish: http://trout.me.uk/mstcat3.jpg
[01:31:56] <Grinnz> foo => $file->slurp_utf8, # oops
[01:31:57] <gordonfish> Grinnz: Ok there would be that
[01:32:00] <mst> gordonfish: http://trout.me.uk/augh.jpg
[01:32:13] <revhippie> ->slurp_utf8_keep_your_damn_dirty_bom_out_of_my_string
[01:32:14] <Grinnz> second of all, this still isn't Path::Tiny's job
[01:32:14] <mst> gordonfish: http://trout.me.uk/noxface.jpg
[01:33:08] <Grinnz> $contents =~ s/^\N{U+FEFF}//;
[01:33:17] *** Quits: miojo (~fu@191.253.152.133) (Ping timeout: 250 seconds)
[01:33:23] <Botje> just about the only one that's not usable there is vague.jpg
[01:33:35] <mst> Grinnz: someone set us up the BOM
[01:34:02] <gordonfish> Took long enough for that joke to be made ;p
[01:34:11] <gordonfish> Go bom-less, for great justice
[01:34:50] <gordonfish> So how should one deal with bom, like when one doesn't control the file to be read. Just check for any valid bom and if so, substr past it? I'm going to go bom-less, but it'd be good to know what the best practice is considered to be.
[01:34:54] <mst> gordonfish: yes, well, I was busy spamming you with images because you traumatised me with list context
[01:35:38] * gordonfish goes bom-less - checks for cops - looks left - looks right - drops bom in bin and strolls off, casually whistling
[01:35:47] <Grinnz> there's no general solution because it is a valid unicode character
[01:35:57] <revhippie> oh god, really?
[01:35:57] <gordonfish> mst: Yes I see why list context for that was a terrible terrible idea
[01:35:59] <Grinnz> you have to know whether your source would use it or not, and remove it if so
[01:36:10] <revhippie> so it's metadata that you need metadata to know if it's there
[01:36:16] <Grinnz> perlbot: utf8 U+FEFF
[01:36:17] <perlbot> Grinnz: U+FEFF (ef bb bf): ZERO WIDTH NO-BREAK SPACE [﻿] 
[01:36:32] <Grinnz> it's certainly *uncommon* in text, but perfectly valid
[01:37:21] <Grinnz> the best is getting them pasted in web forms and ending up in the database
[01:37:47] <gordonfish> That's FEFF, the sequence I see is ef bb in xdd
[01:37:56] <gordonfish> s/xdd/xxd/
[01:38:02] <Grinnz> yes, one is a unicode character and one is a byte sequence
[01:38:14] <Grinnz> that's the point of BOM, the bytes it translates to tells you the encoding and byte order
[01:38:28] <gordonfish> Oh I didn't realize it was three, not two, bytes long
[01:38:59] <gordonfish> I so indeed see 'efbb bf' in xdd, followed by the main content
[01:39:10] <gordonfish> s/I \Kso/do/
[01:39:36] <Grinnz> sweval: use Encode::Simple 'encode'; [map { encode $_, "\N{U+FEFF}" } qw(UTF-8 UTF-16LE UTF-16BE)]
[01:39:39] <perlbot> Grinnz: ["\357\273\277","\377\376","\376\377"]
[01:39:52] <Grinnz> sweval: use Encode::Simple 'encode'; [map { sprintf '%vX', encode $_, "\N{U+FEFF}" } qw(UTF-8 UTF-16LE UTF-16BE)]
[01:39:53] <perlbot> Grinnz: ["EF.BB.BF","FF.FE","FE.FF"]
[01:40:01] <gordonfish> Dear DD, why are you so obsessed with octal??!!
[01:40:19] <Grinnz> it's really weird, nothing wants octal debugging output
[01:40:33] *** Joins: randir_ (~randir@212.237.210.82)
[01:41:32] <Botje> it's nice for when you're toggling dip swi...i'll get me coat.
[01:41:34] *** Quits: martinus__ (~martin@53.31.201.77.rev.sfr.net) (Ping timeout: 256 seconds)
[01:43:02] <gordonfish> I have a good mind to make a PR for DD with a $Data::Dumper::Nooct variable that forces hex to be used.
[01:43:15] *** Quits: randir (~randir@95-25-138-85.broadband.corbina.ru) (Ping timeout: 250 seconds)
[01:43:48] <revhippie> $Data::Dumper::sprintf_format = '%vX'
[01:46:42] * GumbyPAN CPAN Upload: App-Phoebe-4.03_01 by SCHROEDER https://metacpan.org/release/SCHROEDER/App-Phoebe-4.03_01
[01:47:01] *** Quits: bmeneg_ (~bmeneg@2001:1284:f016:6b8b:c598:4952:2800:7afe) (Remote host closed the connection)
[01:55:39] *** Quits: ProperNoun (~sanko@172-2-59-65.lightspeed.clmasc.sbcglobal.net) (Quit: Konversation terminated!)
[01:56:00] *** Joins: ProperNoun (~ProperNou@2600:1700:eb30:a2c0::45)
[02:03:51] *** Quits: SergeiZhmylev (~zhmylove@178.252.127.211) (Read error: Connection reset by peer)
[02:22:22] *** Quits: kitsunenokenja (~kitsunech@68.91.220.96) (Ping timeout: 256 seconds)
[02:32:11] *** Quits: quernd (~quernd@boethin.uberspace.de) (Quit: Ping timeout (120 seconds))
[02:32:25] *** Joins: quernd (~quernd@boethin.uberspace.de)
[02:33:57] *** Joins: pizdets (~pizdets@183.182.115.203)
[02:34:24] *** Quits: pizdets_ (~pizdets@183.182.111.21) (Ping timeout: 268 seconds)
[02:55:18] *** mjh4386_ is now known as mjh4386
[02:56:27] *** Quits: djerius (~quassel@pool-108-20-43-199.bstnma.fios.verizon.net) (Quit: No Ping reply in 180 seconds.)
[02:56:47] *** Joins: djerius (~quassel@pool-108-20-43-199.bstnma.fios.verizon.net)
[02:57:00] *** Quits: dextercd (~dexter@2a02-a450-f25d-1-76d4-35ff-fefe-34c.fixed6.kpn.net) (Quit: WeeChat 3.3)
[03:06:26] *** Quits: G_SabinoMullane (~G_SabinoM@pool-72-94-251-236.phlapa.fios.verizon.net) (Ping timeout: 265 seconds)
[03:08:28] *** Joins: bahua (~bahua@c-174-63-46-143.hsd1.ma.comcast.net)
[03:11:55] *** Parts: bahua (~bahua@c-174-63-46-143.hsd1.ma.comcast.net) ()
[03:13:12] *** Joins: rgrinberg (~textual@201.192.183.100)
[03:19:00] *** Quits: hudo__ (~hudo@62.68.19.39) (Ping timeout: 265 seconds)
[03:19:00] *** Quits: jetchisel (jetchisel@user/jetchisel) (Ping timeout: 265 seconds)
[03:19:00] *** Joins: lesihctej (jetchisel@user/jetchisel)
[03:29:10] *** Quits: haj1 (~haj@ip5f5bf913.dynamic.kabel-deutschland.de) (Quit: Leaving.)
[03:29:54] *** Quits: brunoramoslu (~brunoramo@94.252.121.225) (Ping timeout: 268 seconds)
[03:32:04] *** Quits: gast0n (~g4570n@user/gast0n) (Ping timeout: 256 seconds)
[03:36:12] <aquanight> LeoNerd: right now my biggest question is something along the lines of "how do I determine from the optree if a given sub argument is a constant" (i.e. something that could be constant-folded)
[03:43:35] *** Joins: brunoramoslu (~brunoramo@94.252.121.151)
[03:45:06] *** Quits: whynot (~whynot@46.96.180.218) (Ping timeout: 256 seconds)
[03:46:37] *** Quits: rgrinberg (~textual@201.192.183.100) (Quit: My MacBook has gone to sleep. ZZZzzz…)
[03:46:49] *** Joins: whynot (~whynot@46.96.180.218)
[03:54:50] *** Joins: rgrinberg (~textual@201.192.183.100)
[03:58:30] *** Quits: R2robot (~R2robot@user/r2robot) (Quit: Pull the lever, Kronk.  Wrong leverrrrrrr!)
[03:58:54] *** Quits: defjam (~eb0t@90.209.246.132) (Ping timeout: 260 seconds)
[04:00:35] *** Joins: defjam (~eb0t@90.197.82.19)
[04:01:09] *** Joins: R2robot (~R2robot@user/r2robot)
[04:02:33] <v`> cowboy bebop and the wheel of time tomorrow
[04:05:36] *** Quits: u4ia (~u4ia@27-235-83-45.connected.by.freedominter.net) (Ping timeout: 260 seconds)
[04:08:51] *** Quits: defjam (~eb0t@90.197.82.19) (Ping timeout: 250 seconds)
[04:10:39] *** Quits: tejr (~tejr@user/tejr) (Remote host closed the connection)
[04:10:53] *** Joins: defjam (~eb0t@90.203.122.187)
[04:10:54] *** Joins: tejr (~tejr@user/tejr)
[04:19:40] *** Quits: gizmomathboy (~gizmomath@206.127.53.107) (Ping timeout: 256 seconds)
[04:20:26] *** Quits: whynot (~whynot@46.96.180.218) (Quit: leaving)
[04:23:30] *** Joins: G_SabinoMullane (~G_SabinoM@pool-72-94-251-236.phlapa.fios.verizon.net)
[04:31:34] *** Joins: u4ia (~u4ia@2a10:3781:18fd:1:53d4:805b:c8e3:1629)
[04:32:03] <aquanight> perlbot: sweval { use O 'Concise'; sub foo {} print foo 1..5; }
[04:32:05] <perlbot> aquanight: 1
[04:32:29] <aquanight> perlbot: basheval perl -MO=Concise -E 'sub foo {} print foo 1..5;'
[04:32:31] <perlbot> aquanight: -e syntax OK␤a  <@> leave[1 ref] vKP/REFC ->(end)␤1     <0> enter v ->2␤2     <;> nextstate(main 4 -e:1) v:%,us,{,fea=15 ->3␤9     <@> print vK ->a␤3        <0> pushmark s ->4␤8        <1> entersub lKS ->9␤-           <1> ex-list lK ->8␤4              <0> pushmark s ->5␤6              <1> rv2av lKPM/1 ->7␤5                 <$> const(AV ARRAY) s ->6... [Output truncated. Use `more` to read more]
[04:34:13] *** Quits: TweetiePooh (~richard@cpc75386-sotn16-2-0-cust456.15-1.cable.virginm.net) (Quit: Konversation terminated!)
[04:35:44] <aquanight> perlbot: basheval perl -MO=Terse -E 'sub foo {} print foo 1..5;'
[04:35:45] <perlbot> aquanight: -e syntax OK␤LISTOP (0x555c42f71160) leave [1] ␤    OP (0x555c42d2db20) enter ␤    COP (0x555c42f711a0) nextstate ␤    LISTOP (0x555c42d2db58) print ␤        OP (0x555c42d2dae8) pushmark ␤        UNOP (0x555c42f71238) entersub ␤            UNOP (0x555c42f71270) null [158] ␤                OP (0x555c42f712b0) pushmark ␤                UNOP (0x555c42... [Output truncated. Use `more` to read more]
[04:35:58] <aquanight> how did that end up worse than Concise
[04:36:32] <aquanight> perlbot: basheval perl -MO=Deparse -E 'sub foo {} print foo 1..5;'
[04:36:34] <perlbot> aquanight: -e syntax OK␤use feature 'current_sub', 'bitwise', 'evalbytes', 'fc', 'postderef_qq', 'say', 'state', 'unicode_strings', 'unicode_eval';␤sub foo {␤    ␤}␤print foo(1..5);␤
[04:39:41] <aquanight> looks like deparse only concerns itself with rv2av > const\
[04:39:59] <aquanight> but how does it know it is rv2av > const(AV) and not rv2av > const("thing")
[04:40:36] <aquanight> it doesn't even bother to check
[04:40:52] <aquanight> perlbot: basheval perl -MO=Deparse -E 'sub foo  {} print foo @"hello";'
[04:40:53] <perlbot> aquanight: Bareword found where operator expected at -e line 1, near "@"hello"␤	(Missing operator before hello?)␤String found where operator expected at -e line 1, at end of line␤	(Missing semicolon on previous line?)␤syntax error at -e line 1, near "@"hello"␤Can't find string terminator '"' anywhere before EOF at -e line 1.␤use feature 'current_sub', 'bitwis... [Output truncated. Use `more` to read more]
[04:41:10] <aquanight> perlbot: basheval perl -MO=Deparse -E 'sub foo  {} print foo @{"hello"};'
[04:41:12] <perlbot> aquanight: -e syntax OK␤use feature 'current_sub', 'bitwise', 'evalbytes', 'fc', 'postderef_qq', 'say', 'state', 'unicode_strings', 'unicode_eval';␤sub foo {␤    ␤}␤print foo(@{'hello';});␤
[04:42:01] * GumbyPAN CPAN Upload: WebService-YTSearch-0.0301 by GENE https://metacpan.org/release/GENE/WebService-YTSearch-0.0301
[04:42:05] <aquanight> that comes out as rv2av > scope > const
[04:42:07] <aquanight> so maybe that's why
[04:42:50] <ilmari_> perlbot: basheval perl -MO=Terse -E 'sub foo  {} print foo @{"hello"};'
[04:42:51] <perlbot> ilmari_: -e syntax OK␤LISTOP (0x55d1b0278158) leave [1] ␤    OP (0x55d1b0278128) enter ␤    COP (0x55d1b0278198) nextstate ␤    LISTOP (0x55d1b02781f8) print ␤        OP (0x55d1b0278238) pushmark ␤        UNOP (0x55d1b0278268) entersub ␤            UNOP (0x55d1b02782a0) null [158] ␤                OP (0x55d1b0033ac8) pushmark ␤                UNOP (0x55d1b0... [Output truncated. Use `more` to read more]
[04:42:57] <aquanight> and @{hello} is just @hello which of course is rv2av > gv
[04:43:26] <aquanight> if one could make =Terse remove that (0x....) bullshit it'd be fine
[04:44:55] <aquanight> perlbot: basheval perl -MO=Terse -E 'sub foo {} print foo @{"hello"};' | perl -pe 's/0x[[:xdigit:]]+//g'
[04:44:57] <perlbot> aquanight: -e syntax OK␤LISTOP () leave [1] ␤    OP () enter ␤    COP () nextstate ␤    LISTOP () print ␤        OP () pushmark ␤        UNOP () entersub ␤            UNOP () null [158] ␤                OP () pushmark ␤                UNOP () rv2av [1] ␤                    LISTOP () scope ␤                        COP () null [195] ␤                        SVO... [Output truncated. Use `more` to read m
[04:45:18] <aquanight> perlbot: basheval perl -MO=Terse -E 'sub foo {} print foo @{"hello"};' | perl -pe 's/0x[[:xdigit:]]+//g; s/^\s+//;'
[04:45:19] <perlbot> aquanight: -e syntax OK␤LISTOP () leave [1] ␤OP () enter ␤COP () nextstate ␤LISTOP () print ␤OP () pushmark ␤UNOP () entersub ␤UNOP () null [158] ␤OP () pushmark ␤UNOP () rv2av [1] ␤LISTOP () scope ␤COP () null [195] ␤SVOP () const  PV () "hello" ␤UNOP () null [16] ␤SVOP () gv  IV () \&main::foo ␤
[04:45:42] *** Quits: Colt (~Colt@user/colt) (Quit: Leaving)
[04:45:57] *** Joins: Colt (~Colt@user/colt)
[04:47:11] *** Quits: Pali (~pali@user/pali) (Ping timeout: 264 seconds)
[04:47:35] *** Joins: troller (~p@80.240.216.69)
[04:48:32] *** Joins: gizmomathboy (~gizmomath@206.127.53.107)
[04:50:50] *** Quits: proller (~p@2a02:6b8:b081:1210::1:1d) (Ping timeout: 265 seconds)
[04:51:57] <aquanight> so looking at Deparse, it only acknowledges const and rv2av > const as representing constants. I think I can work with that.
[04:52:32] *** Quits: troller (~p@80.240.216.69) (Ping timeout: 268 seconds)
[04:52:59] *** Joins: lucs (~lucs@user/lucs)
[04:53:18] <lucs> Just heard of dha's passing.
[04:53:22] <lucs> RIP friend
[04:53:48] *** ChanServ sets mode: +o mst
[04:54:02] *** mst changes topic to 'RIP dha | No pasting, paste to https://l.perl.bot/#perl | perl-5.34.0 released! https://bit.ly/342Xxw8 | https://perl7faq.grinnz.com | Channel rules (diff mgmt): https://bit.ly/3fxtuDv | Docs: https://perldoc.perl.org | Module Search: https://metacpan.org | TPRC 2021 https://youtube.com/playlist?list=PLA9_Hq3zhoFzMAS-IYBS8aLyfCh0k9hej'
[04:54:07] *** mst sets mode: -o mst
[04:54:13] *** Quits: defjam (~eb0t@90.203.122.187) (Ping timeout: 265 seconds)
[04:54:16] <mst> not sure why I didn't set that sooner
[04:55:09] <aquanight> ?
[04:55:44] <mst> aquanight: 'dha' aka 'frobisher' is a perl community stalwart who is now dead
[04:56:11] *** Joins: defjam (~eb0t@90.194.39.133)
[04:56:17] <aquanight> oh yikes. Don't think I know that name though?
[04:56:39] <mst> he was a big part of the -social- run but not somebody you'd've heard of via cpan
[04:56:57] <daemon> aquanight, https://www.reddit.com/r/perl/comments/qvxdun/dha_rip/
[04:56:59] <Paperbot> Link title(s): [ DHA RIP : perl ]
[04:57:39] <mst> aquanight: so your not knowing the name is entirely understandable but lots of us will miss him nonetheless
[04:58:03] <aquanight> fair enough
[04:58:24] <mst> also like even posthumously he's better at causing niceness to exist in the world than I will ever be
[04:58:27] <mst> https://twitter.com/shadowcat_mst/status/1461100480512335872
[04:58:28] <Paperbot> Matt S "perl sensitive sunglasses" Trout (@shadowcat_mst) 2h54m ago: In the process of digging out the addresses for my contacts at @linode to inform them once again they were down a user, I noticed I'd never replied to the email telling me about their (very quick) decision to switch their freenode sponsorship to https://libera.chat/ ...
[04:58:57] <daemon> mst, you have the ability to cause niceness?
[05:00:28] <aquanight> 18:29:43/C5491 -!- Irssi: 14 new messages in awaylog: ## 9 of which are perlbot from the last 20 minutes. Looks like I have another irssi script to write.
[05:00:38] <aquanight> "oops"
[05:00:48] <daemon> aquanight, every project of anything above medium size has an army of unsung heros supporting it :|
[05:01:32] <aquanight> ok here's a wild and crazy new XS question
[05:01:47] <aquanight> supposedly if I have an SV* such as the one I dig out of an OP_CONST
[05:01:56] <aquanight> I can go: XPUSHs(sv) and put that SV on the stack
[05:02:04] <aquanight> but is that safe to do if it should turn out that SV* is really an AV* ?
[05:02:42] <aquanight> I suppose I would assume that OP_CONST is producing a *reference* to an array constant, which is why it's built as rv2av > const
[05:03:11] <aquanight> hmmm. If it works that way, theoretically can I just... call pp_rv2av straight up?
[05:03:15] <gordonfish> aquanight: Wouldn't that be a 'reference to an array' (AV*) ?
[05:03:41] <aquanight> gordonfish: I'm honestly not sure. I think in the optree scenario I'm looking at it would indeed be a reference to array
[05:03:46] <gordonfish> That is, SV* is a scalar
[05:03:55] <aquanight> but at the same time
[05:04:08] <aquanight> I have seen perl C code wantonly cast between SV* AV* CV* and GV* without a god damned care in the world
[05:04:15] * gordonfish looks at the new /topic
[05:04:30] <aquanight> wontonly*
[05:04:44] <aquanight> that still doesn't look right
[05:04:48] <aquanight> whatever.
[05:05:16] *** Joins: troller (~p@2a02:6b8:b081:16::1:5)
[05:05:25] <gordonfish> RIP dha. I didn't know you, but I'm sure your work and contributions resignate through the perl and related halls.
[05:06:45] <gordonfish> aquanight: If you mean random CPAN modules, I would say tread with caution, as not all XS modules are necessarily written well.
[05:07:11] <daemon> gordonfish, you mean most of them are written terrible and likely need re-doing entirely :P
[05:08:45] <aquanight> gordonfish: some of it is in perl core itself
[05:08:57] <aquanight> for example
[05:09:07] <aquanight> static OP* ck_pure_sub(pTHX_ OP* entersub, GV* namegv, SV* protosv) <- this is a callback for the callchecker
[05:09:19] <aquanight> but if you use certain API, namegv is not necessarily actually a GV*
[05:09:33] <xenu> AV, HV* *are* SVs but it's illegal to push them on stack because it doesn't make sense in perl
[05:09:50] <aquanight> ok
[05:10:09] <aquanight> well
[05:10:37] <aquanight> given all pp_const does is XPUSHs(cSVOP_sv) I don't think I really need to be worried
[05:10:38] <xenu> i guess you could get away with it if it was for consumption of another XS function which expect thats but that's still weird
[05:10:49] <xenu> expects that*
[05:11:29] <aquanight> I think I can safely assume perl will not build an optree that will do "weird things"
[05:12:03] * GumbyPAN CPAN Upload: Cookie-v0.1.1 by JDEGUEST https://metacpan.org/release/JDEGUEST/Cookie-v0.1.1
[05:12:50] * gordonfish . o O ( Do opseeds exist? )
[05:12:59] *** Quits: u4ia (~u4ia@2a10:3781:18fd:1:53d4:805b:c8e3:1629) (Ping timeout: 264 seconds)
[05:14:18] <xenu> well some ops do weird things 
[05:14:31] <xenu> and pp_pop for example *does* expect AV on the stack
[05:16:16] *** Quits: rgrinberg (~textual@201.192.183.100) (Quit: My MacBook has gone to sleep. ZZZzzz…)
[05:16:50] <xenu> maybe i should've said that it's illegal if it leaks to perl code
[05:17:04] * GumbyPAN CPAN Upload: Module-Generic-v0.17.2 by JDEGUEST https://metacpan.org/release/JDEGUEST/Module-Generic-v0.17.2
[05:17:27] <aquanight> ugh I keep catching myself breaking C89
[05:17:55] *** Joins: willthechill (~willthech@2600:1700:8c61:3ed0:e119:8159:ccc4:5b47)
[05:18:18] <aquanight> I *hate* C89.
[05:18:23] <xenu> if you're writing a module there were no good reasons not to use c89 for many years now
[05:18:37] <aquanight> eh?
[05:18:38] <xenu> even in core, c99 is allowed in blead now
[05:18:48] <xenu> er
[05:18:49] <aquanight> is that true in 5.30?
[05:18:50] <xenu> not to use c99*
[05:18:58] <aquanight> it's like
[05:19:09] <aquanight> all the XS examples I look at seem to stick to C89
[05:19:14] <aquanight> so I sorta assumed there was a reason for that
[05:19:25] <xenu> leonerd's modules are c99 for example
[05:19:52] <aquanight> I suppose it's not helped by the XS parts using K&R decls for some strange reason
[05:20:09] <aquanight> so I just assumed xsubpp was built for old-as-fuck C
[05:20:39] <xenu> i *really* should finish my xs preprocessor
[05:20:52] <aquanight> but I suppose that needn't apply to the actual *truly C* parts of the thing
[05:21:06] <xenu> iirc there's nothing in xsubpp that prevents you from using c99
[05:21:06] <aquanight> and I can do whatever the fuck I want
[05:22:27] *** Joins: u4ia (~u4ia@2a10:3781:18fd:1:53d4:805b:c8e3:1629)
[05:25:17] *** Joins: rgrinberg (~textual@201.192.183.100)
[05:26:37] <aquanight> well
[05:26:47] *** Quits: lesihctej (jetchisel@user/jetchisel) (Ping timeout: 264 seconds)
[05:26:56] <aquanight> now I just need to figure out the rv2av > const(AV) setup.
[05:27:50] <aquanight> I'm assuming the SV* I get from const is an RV and will get me the AV* in question, but then I need to basically pour it out onto the stack. Basically, I need to do what pp_rv2av does. Would even be great if I could just *call* pp_rv2av
[05:28:00] <aquanight> but nope friggin static symbol pain in my ass
[05:28:47] *** Joins: mattil (~mattil@87-92-104-118.bb.dnainternet.fi)
[05:29:05] <aquanight> wait are they though
[05:29:11] <aquanight> they're in opcode.h... maybe...?
[05:33:20] *** Quits: mattil (~mattil@87-92-104-118.bb.dnainternet.fi) (Ping timeout: 256 seconds)
[05:33:51] *** Quits: defjam (~eb0t@90.194.39.133) (Ping timeout: 265 seconds)
[05:34:05] <aquanight> ah it's only for core... looks like I would need to go at it through... PL_pp_addr I think?
[05:35:29] *** Joins: defjam (~eb0t@90.197.82.195)
[05:40:47] <aquanight> https://perldoc.pl/perlguts#Compile-pass-1:-check-routines
[05:40:49] <Paperbot> Link title(s): [ perlguts - Introduction to the Perl API - Perldoc Browser ]
[05:40:58] <aquanight> callcheckers run before constant folding
[05:41:12] <aquanight> well fuck
[05:41:19] <mst> right, PL_check then PL_peeps
[05:43:19] *** Quits: Su-Shee (~Susanne@p5089416e.dip0.t-ipconnect.de) (Ping timeout: 250 seconds)
[05:44:45] *** Quits: rgrinberg (~textual@201.192.183.100) (Quit: My MacBook has gone to sleep. ZZZzzz…)
[05:45:03] *** Joins: Su-Shee (~Susanne@p4ffc7ec7.dip0.t-ipconnect.de)
[05:45:06] <aquanight> hell depending on the order of things the opcodes I'm looking at may have themselves not yet been PL_checked
[05:45:53] <aquanight> as I think the call checker basically happens during the entersub op checker
[05:46:15] *** Joins: rgrinberg (~textual@201.192.183.100)
[05:50:36] *** Joins: geli (~gelignite@55d4e1d7.access.ecotel.net)
[05:53:40] *** Quits: magla (~gelignite@55d4d6da.access.ecotel.net) (Ping timeout: 265 seconds)
[05:54:08] <mst> aquanight: remember how Devel::Declare was an insane thing? that was me hijacking bits of PL_check to fuck with *the parser*
[05:54:26] <aquanight> yeah
[05:54:32] <aquanight> vaguely
[05:54:58] <mst> aquanight: so yeah it's ... not trivial
[05:55:09] <mst> PL_check gets run as the op gets -finalized-
[05:55:22] <mst> then the peeps stuff gets run as an -optree- gets finalized
[05:55:23] <aquanight> I don't really want to super-fuck with the parser. if anything I want the parser to mostly do its normal job but then I want to sneak in and turn a call like foo(1, 2, 3, 4, 5) into whatever that returns
[05:55:39] <aquanight> mst: right so
[05:55:43] <aquanight> when entersub gets checked
[05:55:47] <mst> I'm not suggesting you do, I'm suggesting I did something even more insane
[05:55:52] <mst> and being sympathetic
[05:55:53] <aquanight> what condition can expect its argument list to be in
[05:56:06] <aquanight> have they been checked? constant folded? I'm not expecting peepholes.
[05:56:48] <mst> I dunno, I'd check the entersub PL_check to find out
[05:57:19] <mst> this is not at all a public API so you're into mst levels of crazy here ;)
[05:59:08] <aquanight> hmmm wait
[05:59:12] <aquanight> if I'm reading perlguts right
[05:59:21] <aquanight> checkers run from "bottom up"?
[05:59:32] <mst> PL_check runs whenever the C code decides
[05:59:36] <mst> it's not a public API
[05:59:41] <mst> just RTFS
[05:59:47] <aquanight> I've been doing that
[05:59:52] <mst> anything else will cause more pain in the long run, sorry
[05:59:59] <mst> note: I'
[06:00:06] <mst> note: I'm not referring to the docs here
[06:00:14] <mst> I'm referring to "what happened when I did it"
[06:02:51] <aquanight> ok from quick RTFS it looks like all the various and sundry newTHINGOP will do an OPCHECK before returning it
[06:04:00] <mst> generally, yeah
[06:06:22] <aquanight> newBINOP even calls fold_constants() which I'm going to guess does exactly what it says on the tin
[06:07:33] <aquanight> ok
[06:07:46] <aquanight> I think I can conclude from this that the entersub arguments have been checked and constant folded
[06:10:52] *** Joins: kitsunenokenja (~kitsunech@68.91.220.96)
[06:13:11] <aquanight> hmmmm
[06:13:24] <aquanight> PL_runops...
[06:16:37] *** Quits: gizmomathboy (~gizmomath@206.127.53.107) (Quit: Leaving)
[06:17:10] * GumbyPAN CPAN Upload: Cookie-v0.1.2 by JDEGUEST https://metacpan.org/release/JDEGUEST/Cookie-v0.1.2
[06:18:13] *** Quits: BSaboia (~bsaboia@177.37.198.227) (Quit: This computer has gone to sleep)
[06:19:17] *** Quits: Su-Shee (~Susanne@p4ffc7ec7.dip0.t-ipconnect.de) (Ping timeout: 265 seconds)
[06:20:39] *** Joins: Su-Shee (~Susanne@p4ffc799b.dip0.t-ipconnect.de)
[06:25:01] *** Quits: geli (~gelignite@55d4e1d7.access.ecotel.net) (Quit: Stay safe!)
[06:25:59] *** Joins: BSaboia (~bsaboia@177.37.198.227)
[06:28:31] *** Quits: Affliction (affliction@idlerpg/player/affliction) (Remote host closed the connection)
[06:28:43] *** Quits: BSaboia (~bsaboia@177.37.198.227) (Client Quit)
[06:29:06] *** Joins: Affliction (affliction@idlerpg/player/affliction)
[06:57:52] *** Quits: FinnElija (~finn_elij@user/finn-elija/x-0085643) (Killed (NickServ (Forcing logout FinnElija -> finn_elija)))
[06:57:53] *** Joins: finn_elija (~finn_elij@user/finn-elija/x-0085643)
[06:57:53] *** finn_elija is now known as FinnElija
[07:07:23] <aquanight> ooooh shit. it's possible I don't know what context ENTERSUB is running in.
[07:08:37] <aquanight> that's a problem :(
[07:12:15] * GumbyPAN CPAN Upload: Crypt-Perl-0.35 by FELIPE https://metacpan.org/release/FELIPE/Crypt-Perl-0.35
[07:14:02] *** Quits: pucara (~i@181.95.204.204) (Quit: Lost terminal)
[07:17:16] * GumbyPAN CPAN Upload: Crypt-Perl-0.36 by FELIPE https://metacpan.org/release/FELIPE/Crypt-Perl-0.36
[07:27:26] *** Quits: kitsunenokenja (~kitsunech@68.91.220.96) (Ping timeout: 265 seconds)
[07:28:48] <mst> aquanight: context only exists at runtime
[07:30:49] *** Quits: troller (~p@2a02:6b8:b081:16::1:5) (Ping timeout: 265 seconds)
[07:45:30] *** Joins: BSaboia (~bsaboia@177.37.198.227)
[07:48:42] *** Quits: rgrinberg (~textual@201.192.183.100) (Ping timeout: 265 seconds)
[07:49:51] *** Quits: BSaboia (~bsaboia@177.37.198.227) (Client Quit)
[07:52:53] *** Quits: Martchus (~martchus@2a01:c23:b9b5:f700:d250:99ff:fe49:3cce) (Ping timeout: 250 seconds)
[07:53:08] *** Joins: Martchus (~martchus@2a01:c22:7212:de00:d250:99ff:fe49:3cce)
[08:11:57] *** Quits: willthechill (~willthech@2600:1700:8c61:3ed0:e119:8159:ccc4:5b47) (Ping timeout: 250 seconds)
[08:37:05] *** Quits: G_SabinoMullane (~G_SabinoM@pool-72-94-251-236.phlapa.fios.verizon.net) (Ping timeout: 250 seconds)
[08:41:25] * GumbyPAN CPAN Upload: Getopt-EX-Hashed-1.02 by UTASHIRO https://metacpan.org/release/UTASHIRO/Getopt-EX-Hashed-1.02
[08:44:48] *** Joins: deadmarshal (~deadmarsh@95.38.117.166)
[08:49:05] *** Joins: rindolf (~shlomif@2a0d:6fc2:4bb1:500:6b1e:2524:3d70:36ec)
[09:08:17] *** Quits: deadmarshal (~deadmarsh@95.38.117.166) (Ping timeout: 250 seconds)
[09:12:11] *** Quits: phenom_ (~primus@user/phenom) (Ping timeout: 246 seconds)
[09:13:12] *** Quits: PapaChub (~PapaChub@vzw-54.parabon.com) (Ping timeout: 256 seconds)
[09:13:17] *** Quits: swaggboi (~swaggboi@slackware.uk/supporter/swaggboi) (Ping timeout: 265 seconds)
[09:21:18] *** Joins: deadmarshal (~deadmarsh@95.38.117.166)
[09:22:21] *** Joins: phenom (~primus@user/phenom)
[09:24:37] *** Joins: PapaChub (~PapaChub@vzw-54.parabon.com)
[09:25:29] *** Joins: hudo__ (~hudo@62.68.19.39)
[09:26:25] *** Joins: swaggboi (~swaggboi@slackware.uk/supporter/swaggboi)
[09:26:31] *** Joins: mattil (~mattil@d1cth-9lnc2ks5kz-d4-4.rev.dnainternet.fi)
[09:27:23] *** Quits: slowButPresent (~slowButPr@user/slowbutpresent) (Quit: leaving)
[09:27:26] *** Quits: mattil (~mattil@d1cth-9lnc2ks5kz-d4-4.rev.dnainternet.fi) (Remote host closed the connection)
[09:31:24] *** Joins: zkrd (~xdg@2a02:587:de00:6d00:f4ab:2db4:2d71:c63e)
[09:32:35] *** Quits: ProperNoun (~ProperNou@2600:1700:eb30:a2c0::45) (Quit: Konversation terminated!)
[09:32:48] *** Joins: ProperNoun (~ProperNou@2600:1700:eb30:a2c0::45)
[09:34:06] *** Quits: djerius (~quassel@pool-108-20-43-199.bstnma.fios.verizon.net) (Quit: https://quassel-irc.org - Chat comfortably. Anywhere.)
[09:34:22] *** Joins: djerius (~quassel@pool-108-20-43-199.bstnma.fios.verizon.net)
[09:37:28] *** Joins: mattil (~mattil@d1cth-9lnc2ks5kz-d4-4.rev.dnainternet.fi)
[09:37:34] *** Joins: kensanata (~user@user/kensanata)
[09:39:04] *** Joins: mattil_ (~mattil@helsinki.portalify.com)
[09:42:59] *** Quits: mattil (~mattil@d1cth-9lnc2ks5kz-d4-4.rev.dnainternet.fi) (Ping timeout: 264 seconds)
[09:44:41] *** Quits: hudo__ (~hudo@62.68.19.39) (Ping timeout: 250 seconds)
[09:53:08] *** Joins: japh (~japh@195-198-186-122.customer.telia.com)
[09:54:17] *** Quits: Hexmind (~Hexmind@modemcable049.25-131-66.mc.videotron.ca) (Quit: Leaving)
[09:57:18] *** Quits: mst (~matthewt@perl/shadowcat-mst/chainsaw-wielder) (Ping timeout: 260 seconds)
[09:57:23] *** Quits: ether (~ether@perl/cpan-druid/ether) (Ping timeout: 264 seconds)
[09:57:29] *** Quits: japh (~japh@195-198-186-122.customer.telia.com) (Client Quit)
[10:01:07] *** Joins: disconnect_me (~marcin@gl92-41.master.pl)
[10:01:08] *** Parts: disconnect_me (~marcin@gl92-41.master.pl) ()
[10:01:23] *** Joins: disconnect_me (~marcin@gl92-41.master.pl)
[10:02:42] *** Joins: Sauvin (~sauvin@about/linux/staff/sauvin)
[10:16:07] *** Quits: defjam (~eb0t@90.197.82.195) (Ping timeout: 265 seconds)
[10:17:48] *** Joins: defjam (~eb0t@90.210.88.222)
[10:21:25] *** Joins: jplesnik (jplesnik@nat-pool-brq-t.redhat.com)
[10:21:56] *** Quits: diskin (~diskin@ec2-18-158-74-148.eu-central-1.compute.amazonaws.com) (Read error: Connection reset by peer)
[10:22:21] *** Joins: diskin (~diskin@ec2-18-158-74-148.eu-central-1.compute.amazonaws.com)
[10:25:10] *** Quits: Su-Shee (~Susanne@p4ffc799b.dip0.t-ipconnect.de) (Ping timeout: 256 seconds)
[10:26:51] *** Joins: Su-Shee (~Susanne@p4ffc711e.dip0.t-ipconnect.de)
[10:32:21] *** Quits: ProperNoun (~ProperNou@2600:1700:eb30:a2c0::45) (Ping timeout: 250 seconds)
[10:36:38] *** Quits: deadmarshal (~deadmarsh@95.38.117.166) (Ping timeout: 268 seconds)
[10:39:42] *** Joins: deadmarshal (~deadmarsh@95.38.117.166)
[10:53:02] *** Joins: Kimmono (~Kimmono@195-159-198-100.customer.powertech.no)
[10:53:14] *** Joins: parv (~quass@user/parv)
[10:54:54] *** Joins: jetchisel (jetchisel@user/jetchisel)
[10:56:30] *** Joins: haj1 (~haj@ip5f5bf913.dynamic.kabel-deutschland.de)
[11:16:35] *** Quits: CrazyEddy (crazyed@2603:300a:1d10:c000:de4a:3eff:fe88:cc5f) (Ping timeout: 264 seconds)
[11:17:36] *** Joins: martinus__ (~martin@95.31.201.77.rev.sfr.net)
[11:18:41] <hethw> anyone got any clues? https://perl.bot/p/y3dam2
[11:18:41] <Paperbot> Link title(s): [ Perlbot Pastebin ]
[11:21:31] *** Joins: CrazyEddy (crazyed@2603:300a:1d10:c000:de4a:3eff:fe88:cc5f)
[11:26:53] <haj1> hethw: You seem to be using a non-ASCII literal in "my $search = 'ффф';" but you haven't "use utf8;"
[11:33:31] *** Quits: randir_ (~randir@212.237.210.82) (Remote host closed the connection)
[11:35:26] *** Quits: defjam (~eb0t@90.210.88.222) (Ping timeout: 256 seconds)
[11:36:06] *** Joins: tobybl (~tobybl@213.31.134.235)
[11:36:24] <hethw> haj1, that's indended basename returns bytes
[11:37:06] *** Joins: defjam (~eb0t@90.210.94.131)
[11:38:27] *** Quits: Linux77 (~Linux7_7@2804:d45:8c02:b300:a12c:8838:4db4:91c9) (Remote host closed the connection)
[11:38:40] *** Joins: Linux77 (~Linux7_7@2804:d45:8c02:b300:a12c:8838:4db4:91c9)
[11:40:42] *** Quits: ircuser-1 (~Johnny@71.63.241.168) (Ping timeout: 265 seconds)
[11:43:18] *** Joins: ircuser-1 (~Johnny@71.63.241.168)
[11:43:35] *** Joins: randir (~randir@93.159.239.42)
[11:44:14] *** Joins: randir_ (~randir@212.237.210.82)
[11:44:55] <rindolf> hethw: did you try one of https://metacpan.org/pod/Path::Iterator::Rule#SEE-ALSO ?
[11:44:55] <Paperbot> Link title(s): [ Path::Iterator::Rule - Iterative, recursive file finder - metacpan.org ]
[11:47:19] *** Quits: defjam (~eb0t@90.210.94.131) (Ping timeout: 250 seconds)
[11:47:54] <hethw> rindolf, I'm more interested what the UTF8 flag on a ascii string actually does so this strange behaviour happens
[11:48:10] *** Quits: randir (~randir@93.159.239.42) (Ping timeout: 268 seconds)
[11:49:24] *** Joins: defjam (~eb0t@90.197.82.230)
[11:49:52] <rindolf> hethw: i see
[11:50:04] <rindolf> perlbot: unicode
[11:50:15] <rindolf> perlbot: perl unicode
[11:50:15] <perlbot> rindolf: No factoid found. Did you mean one of these: [perlunicode] [perl env] [perl win] [perl meme] [perl null] [perl humor] [perl myths] [perlunifaq] [perlunitut] [perl humour]
[11:50:23] <rindolf> perlbot: perlunicode
[11:50:24] <perlbot> rindolf: Unicode support in Perl - https://perldoc.pl/perlunicode
[12:01:50] <hethw> I've read it
[12:02:01] <hethw> what are you implying
[12:02:47] *** Quits: deadmarshal (~deadmarsh@95.38.117.166) (Ping timeout: 264 seconds)
[12:03:01] *** Joins: art1 (~romeyke@p200300ccdf0aa300a392274383c4b3f6.dip0.t-ipconnect.de)
[12:03:13] *** Joins: randir (~randir@212.237.210.82)
[12:06:03] *** Quits: randir_ (~randir@212.237.210.82) (Ping timeout: 268 seconds)
[12:07:34] <rindolf> hethw: unicode filenames are a can of worms
[12:08:08] <hethw> did you notice I'm only changing the UTF8 flag of a ascii string? no unicode there
[12:08:13] <xenu> hethw: i don't know what exactly is happening but you have to keep in mind two things
[12:08:30] <xenu> 1. the result of concatenation of upgraded and non-upgraded string will be upgraded
[12:09:05] <xenu> 2. file operations unfortunately still suffer from the unicode bug and operate on internal representation of the string
[12:10:14] <xenu> s/file operations/syscalls/
[12:10:34] <xenu> from time to time there are discussions on p5p about fixing that but it's not easy
[12:10:39] <xenu> hopefully it will happen at some point
[12:11:09] *** Quits: kensanata (~user@user/kensanata) (Ping timeout: 265 seconds)
[12:12:05] *** Joins: deadmarshal (~deadmarsh@95.38.117.166)
[12:12:42] <xenu> so while *in theory* it shouldn't matter, it does, so it's better to never pass upgraded strings to syscalls
[12:14:29] <hethw> the funny thing is that'sthe only way find actually provides the proper results, by passing upgraded strings
[12:14:52] <hethw> else I wrapped most fs functions with encode/decode
[12:17:18] <xenu> wait, why is upgraded result proper, you seem to have 6 files with 'ффф' in their name
[12:17:33] <xenu> and according to your comment, they're being found only when it isn't upgraded
[12:18:44] <hethw> you're right
[12:19:26] *** Joins: randir_ (~randir@93.159.239.42)
[12:20:57] <hethw> in my main codebase this is the opposite behaviour
[12:21:10] <hethw> in my example it's reversed.
[12:21:29] <hethw> for some reason it's connected with the no_chdir flag
[12:21:41] <hethw> the differences are exaclty as it's flipped
[12:22:15] <hethw> any why it's reversed I have no idea either, probably something silly on my end
[12:23:02] *** Quits: randir (~randir@212.237.210.82) (Ping timeout: 256 seconds)
[12:25:47] *** Quits: haj1 (~haj@ip5f5bf913.dynamic.kabel-deutschland.de) (Ping timeout: 268 seconds)
[12:27:11] *** Quits: deadmarshal (~deadmarsh@95.38.117.166) (Ping timeout: 250 seconds)
[12:29:07] *** Joins: deadmarshal (~deadmarsh@95.38.117.166)
[12:31:39] *** Joins: Manderson_ (manderson@gateway/vpn/protonvpn/manderson)
[12:34:21] *** Quits: Manderson (manderson@gateway/vpn/protonvpn/manderson) (Ping timeout: 265 seconds)
[12:41:27] *** Joins: haj1 (~haj@ip5f5bf913.dynamic.kabel-deutschland.de)
[12:57:01] *** Quits: rindolf (~shlomif@2a0d:6fc2:4bb1:500:6b1e:2524:3d70:36ec) (Read error: Connection reset by peer)
[13:01:02] *** Joins: choroba (~E.Choroba@89-101-243-80.cust.centrio.cz)
[13:01:22] *** Joins: rindolf (~shlomif@2a0d:6fc2:4bb1:500:6b1e:2524:3d70:36ec)
[13:03:08] *** Joins: TweetiePooh (~richard@cpc75386-sotn16-2-0-cust456.15-1.cable.virginm.net)
[13:06:33] *** Joins: choroba_ (~E.Choroba@89-101-243-80.cust.centrio.cz)
[13:06:34] *** Quits: choroba_ (~E.Choroba@89-101-243-80.cust.centrio.cz) (Remote host closed the connection)
[13:09:22] *** Quits: WinterStar (~IceLight@user/icelight) (Read error: Connection reset by peer)
[13:17:52] *** Joins: CatCow (~wtf_over@c-73-96-109-206.hsd1.or.comcast.net)
[13:19:42] *** Quits: defjam (~eb0t@90.197.82.230) (Ping timeout: 256 seconds)
[13:20:43] *** Joins: defjam (~eb0t@90.202.44.78)
[13:27:06] *** Joins: WinterStar (~IceLight@user/icelight)
[13:27:09] *** Joins: Pali (~pali@user/pali)
[13:31:23] *** Quits: jetchisel (jetchisel@user/jetchisel) (Ping timeout: 265 seconds)
[13:31:55] * GumbyPAN CPAN Upload: DNS-LDNS-0.63 by ERIKOEST https://metacpan.org/release/ERIKOEST/DNS-LDNS-0.63
[13:36:24] *** Joins: jetchisel (~jetchisel@user/jetchisel)
[13:36:31] *** Quits: deadmarshal (~deadmarsh@95.38.117.166) (Ping timeout: 250 seconds)
[13:45:35] *** Joins: deadmarshal (~deadmarsh@95.38.117.166)
[13:48:23] <haj1> hethw: I set up a demo what happens in File::Find at https://l.perl.bot/p/h6c7u7
[13:48:24] <Paperbot> Link title(s): [ Perlbot Pastebin ]
[13:50:03] *** Joins: BSaboia (~bsaboia@177.37.198.227)
[13:54:44] <hethw> haj1, so internally find concatenates . utf8 char + bytes and they get upgraded?
[13:57:12] <haj1> That seems to be the case.  And since the contatenation isn't seen as a directory, File::Find does not dive into it
[13:57:36] <hethw> this is twisted
[13:58:12] <haj1> Without "no_chdir => 1", File::Find switches to the directory (no concatenation involved), and then checks the directory (no concatenation either)
[14:10:01] <hethw> do I understand correctly from the docs that no_chdir => 1 gives only results from current dir (no subdirs)
[14:11:11] *** Quits: WinterStar (~IceLight@user/icelight) (Ping timeout: 250 seconds)
[14:13:53] *** Joins: WinterStar (~IceLight@user/icelight)
[14:13:57] *** Joins: PlayerOne (~PlayerOne@user/playerone)
[14:14:35] <PlayerOne> Hey all ^^ It appears Perl returns 0 in both cases either capture found or not
[14:15:05] <PlayerOne> Is it possible to somehow set it to exit fail if no capture match found?
[14:15:45] <Botje> _what_ returns 0?
[14:15:50] <Botje> can you show a code snippet?
[14:16:17] <PlayerOne> Currently, it requires two commands to get a value: if matchRegex(value) && extractRegex(value, variable)
[14:16:55] <Botje> surely you can do both in one go?
[14:16:59] <PlayerOne> Where extractRegex is something like: perl -pe 's/([a-z]\-[0-9]).*/\1/'
[14:17:23] <Botje> Can you please show the full code you're working on, because I see antipattern after antipattern 
[14:17:35] <PlayerOne> What is the pattern?
[14:17:47] <Botje> s/.../\1/ is an antipattern.
[14:17:58] <PlayerOne> I'm sorry?
[14:18:17] <haj1> hethw: No.  It doesn't give subdirs in your case because it doesn't detect them.  It will always recurse unless you prune it in your wanted function
[14:18:20] <PlayerOne> Oh, you mean you would remove everything except instead?
[14:18:44] <Botje> no, I would match what I need and use that in the rest of the pipeline.
[14:18:47] *** Joins: miojo (~fu@191.253.152.133)
[14:18:52] <PlayerOne> How would you do that?
[14:19:04] <Botje> But it is hard to explain in your case without seeing the full example you're working
[14:19:07] <PlayerOne> The mission is to set a variable to that value and check if anything found
[14:19:12] *** Quits: defjam (~eb0t@90.202.44.78) (Ping timeout: 256 seconds)
[14:19:46] <Botje> Please be less vague and show code.
[14:19:48] <PlayerOne> I'm sorry, but I don't know how to send an example since it's a part of script which has a quite of dependecies
[14:20:06] *** Joins: defjam (~eb0t@90.204.62.61)
[14:20:32] <PlayerOne> Imagine you have two variables. It's required to set the second variable the required pattern and check if anything found.
[14:21:00] <PlayerOne> For example, the first var is something like 0123abc123. It's required to setthe second to abc.
[14:21:01] <Botje> perl -ple 'exit 1 unless ($abc, $def) = /([a-z])-([0-9])/; # do something with $abc and $def here'
[14:21:28] <PlayerOne> I see. The vars are outside of Perl.
[14:21:28] *** Quits: deadmarshal (~deadmarsh@95.38.117.166) (Ping timeout: 256 seconds)
[14:21:42] <PlayerOne> Would you print the required variable to stdout?
[14:21:43] <Botje> AND THIS IS WHY I ASKED FOR A CONCRETE EXAMPLE
[14:21:51] <PlayerOne> Or set an environment variable instead?
[14:22:21] <PlayerOne> I don't have the code. I'm not at workplace.
[14:22:26] <Botje> then make something up
[14:22:30] <PlayerOne> That's why abstract.
[14:22:36] <Botje> a process cannot set variables in its parent's environment.
[14:23:02] <PlayerOne> Indeed
[14:23:21] <Botje> I suppose you could do var=$(perl -ple '... as above ...') and use a combination of `set -e` and `set -o pipefail` to stop executing there.
[14:23:27] <Botje> Or you can check $? after the facts.
[14:23:34] *** Quits: jetchisel (~jetchisel@user/jetchisel) (Ping timeout: 268 seconds)
[14:24:18] <PlayerOne> Thank you very much. I'll try to check out what's set -o pipefail
[14:24:35] <Botje> not even sure it's applicable here, but it tends to be used in conjunction with set -e.
[14:25:03] <PlayerOne> Is it possible to tell Perl to not output anything if no capture found?
[14:25:24] <PlayerOne> Oh. I assumed antipattern, butyou told it's incorrect, right? Thus, nevermind.
[14:25:45] *** Joins: jetchisel (jetchisel@user/jetchisel)
[14:25:46] <Botje> the -p flag always prints.
[14:25:51] <Botje> did you mean to use -n ?
[14:26:05] <Botje> which has the same "eat every line and do something" behavior without printing.
[14:26:16] <Botje> again, a small example would have immensely simplified this discussion
[14:26:52] <PlayerOne> The antipattern s/([a-z]).*/\1/ prints in both cases: found - the captured. Not found - everything.
[14:26:58] *** Quits: miojo (~fu@191.253.152.133) (Ping timeout: 265 seconds)
[14:27:02] <Botje> no, it actually does not.
[14:27:11] <Botje> -p is responsible for printing after every expression.
[14:27:57] <Botje> idiomatic Perl _matches_ rather than _replaces_
[14:28:35] *** Joins: miojo (~fu@187.32.234.131)
[14:28:43] <PlayerOne> > echo a12:23c123 | perl -pe 's/^(([a-f]{2}:){2}).*$/\1/'
[14:29:00] <Botje> right.
[14:29:03] <PlayerOne> > echo 12:23:c123 | perl -pe 's/^(([a-f]{2}:){2}).*$/\1/'
[14:29:09] <Botje> write that instead as:
[14:29:37] <Botje> perl -ne 'print $1 if /^(([a-f]{2}:){2})/'
[14:30:54] <hethw> haj1, so what's the purpose of no_chdir?
[14:31:48] <haj1> Look at the examples for the wanted function: the value of $_ is different
[14:32:25] <haj1> https://metacpan.org/pod/File::Find#The-wanted-function
[14:32:28] <Paperbot> Link title(s): [ File::Find - Traverse a directory tree. - metacpan.org ]
[14:33:38] <PlayerOne> Thank you very much, Botje! Genius!
[14:33:57] *** Joins: G_SabinoMullane (~G_SabinoM@pool-72-94-251-236.phlapa.fios.verizon.net)
[14:34:11] *** Quits: csrf1 (~csrf@ip72-199-118-215.sd.sd.cox.net) (Quit: ZNC 1.7.2+deb3 - https://znc.in)
[14:34:56] *** Joins: csrf (~csrf@user/csrf)
[14:37:12] <aquanight> mst: well... dammit. That's a bit of a problem considering I nnod to know what context to run the sub in.
[14:37:28] <aquanight> hmm
[14:37:43] <aquanight> sweval: use constant TEST => 1..5; [ TEST ]
[14:37:44] <perlbot> aquanight: [1,2,3,4,5]
[14:37:53] <aquanight> sweval: use constant TEST => 11..15; [ TEST ]
[14:37:55] <perlbot> aquanight: [11,12,13,14,15]
[14:37:57] <aquanight> sweval: use constant TEST => 11..15; [ scalar TEST ]
[14:37:59] <perlbot> aquanight: [5]
[14:38:39] <aquanight> sweval: use constant TEST => (2, 3, 5, 8, 13, 21); [ scalar TEST ]
[14:38:40] <perlbot> aquanight: [6]
[14:38:46] <aquanight> sweval: use constant TEST => (2, 3, 5, 8, 13, 21); [ TEST ]
[14:38:48] <perlbot> aquanight: [2,3,5,8,13,21]
[14:39:55] <PlayerOne> > echo 12:13:31c123 | perl -ne '( print $1 && exit 1 ) if /^((?:[0-9]{2}:){2}[0-9]{2})/'
[14:40:21] <PlayerOne> I'm trying to do something like: echo 12:13:31c123 | perl -ne '( print $1 && exit 0 ) if /^((?:[0-9]{2}:){2}[0-9]{2})/; exit 1;'
[14:40:43] <PlayerOne> exit 1 if nothing found, exit 0 - found
[14:41:07] <PlayerOne> I believe ( comm && comm ) is incorrect, but {} doesn't work too inline
[14:41:28] <PlayerOne> I'm trying to Google multiple inline commands in Perl though
[14:41:41] <rindolf> PlayerOne: use if(){}else{}
[14:42:16] <PlayerOne> I see. Just curious, is it possible to tell it to run two commands in the above syntax?
[14:42:50] <rindolf> PlayerOne: there is do{...}
[14:43:00] <rindolf> perlbot: -f do
[14:43:00] <perlbot> rindolf: https://perldoc.perl.org/functions/do
[14:43:02] <PlayerOne> I see. Thank you very much ^^
[14:43:16] <rindolf> PlayerOne: you're welcome 
[14:43:38] <PlayerOne> Perl is a magnificent solution....
[14:45:29] <PlayerOne> echo 12:23:34123 | perl -ne 'if (/^((?:[0-9]{2}:){2}[0-9]{3})/) { print $1; exit 0 }; exit 1;'
[14:47:10] <LeoNerd> aquanight: I'd have a look at the bit of the perl core which does constant-folding, to see how it asks that question
[14:47:14] <PlayerOne> echo 12:23:34123 | perl -ne 'if (!/^((?:[0-9]{2}:){2}[0-9]{3})/) { exit 1 }; print $1; exit 0;'
[14:47:32] <PlayerOne> What do you think. What option is better?
[14:48:06] <xenu> PlayerOne: the only reason why perl -ne '( print $1 && exit 0 ) if /^((?:[0-9]{2}:){2}[0-9]{2})/; exit 1;' didn't work is because you neeed parens around $1
[14:48:32] <xenu> basheval: perl -MO=Deparse,-p -e '( print $1 && exit 0 ) if /^((?:[0-9]{2}:){2}[0-9]{2})/; exit 1;'
[14:48:33] <perlbot> xenu: -e syntax OK␤(/^((?:[0-9]{2}:){2}[0-9]{2})/ and print(($1 && exit(0))));␤exit(1);␤
[14:48:49] <xenu> as you can see it's being parsed as print($1 && exit(0))
[14:50:14] <PlayerOne> Marvelous, xenu! Thank you very!
[14:50:18] <aquanight> LeoNerd: funny enough, I actually did find S_fold_constants already. In fact I pretty much had to rip off of it for actually evaluating the sub call. Problem of course, is that fold_constants doesn't bother putting any context on the op
[14:50:51] <aquanight> which I can only guess is because either there's already a context normally, or because since fold_constants only acts on scalar constants, it doesn't matter
[14:51:22] <PlayerOne> basheval: perl -MO=Deparse,-p -e '( print ($1) && exit 0 ) if /^((?:[0-9]{2}:){2}[0-9]{2})/; exit 1;'
[14:51:23] <perlbot> PlayerOne: -e syntax OK␤(/^((?:[0-9]{2}:){2}[0-9]{2})/ and (print($1) and exit(0)));␤exit(1);␤
[14:52:41] <aquanight> by way of example, I Concise'd a call like test 1..5, 9..14; It produces two rv2av>const pairs instead of folding them into one. I'm not sure "list constants" even have anything like constant folding.
[14:53:03] <LeoNerd> Yeah they're not very well supported
[14:53:27] <LeoNerd> It might make sense to consider an OP_CONSTLIST op that can do it
[14:53:43] <LeoNerd> I've never really liked the rv2av[const] hack
[14:53:57] <LeoNerd> It works and it's convenient but. eh... it's messy
[14:54:19] <aquanight> I mean, I think the alternative is LIST>(CONST,CONST,CONST,CONST,...)
[14:54:54] <aquanight> or or NULL>FLOP>FLIP>RANGE>(CONST,CONST)
[14:55:29] *** Quits: defjam (~eb0t@90.204.62.61) (Ping timeout: 265 seconds)
[14:55:30] <aquanight> I *still* find that construction weird.
[14:56:08] <aquanight> even if it has to be done that way because context isn't know when the op is built up, surely peepholing can just kill the flop/flip operators when it's known to be list context?
[14:57:24] *** Joins: defjam (~eb0t@90.202.47.175)
[14:58:33] *** Joins: magla (~gelignite@55d4e1d7.access.ecotel.net)
[15:05:23] *** Quits: parv (~quass@user/parv) (Quit: parv)
[15:05:48] *** Joins: deadmarshal (~deadmarsh@95.38.117.166)
[15:07:37] <aquanight> LeoNerd: so I'm thinking what I'll have to do is have :pure decide on a context. Just seems problematic though because it means a call may run in a different context depending on whether it's "pure"-called or called normally.
[15:08:00] <aquanight> in a hypothetical pure function, this shouldn't ever matter.
[15:08:28] <aquanight> but people are ultimately free to do whatever they want in the sub itself. It'll be no different than calling it in a use constant pragma.
[15:10:33] <aquanight> (except the part that at least in use constant, it'll have a normal context)
[15:14:49] *** Quits: defjam (~eb0t@90.202.47.175) (Ping timeout: 265 seconds)
[15:16:42] *** Joins: defjam (~eb0t@90.210.93.250)
[15:18:08] *** Quits: diskin (~diskin@ec2-18-158-74-148.eu-central-1.compute.amazonaws.com) (Ping timeout: 256 seconds)
[15:50:26] *** Quits: deadmarshal (~deadmarsh@95.38.117.166) (Ping timeout: 256 seconds)
[15:51:08] *** Quits: G_SabinoMullane (~G_SabinoM@pool-72-94-251-236.phlapa.fios.verizon.net) (Ping timeout: 268 seconds)
[15:55:29] *** Joins: deadmarshal (~deadmarsh@95.38.117.166)
[16:01:02] *** Joins: bmeneg (~bmeneg@2001:1284:f016:6b8b:c598:4952:2800:7afe)
[16:07:17] *** Quits: tobybl (~tobybl@213.31.134.235) (Remote host closed the connection)
[16:12:11] * GumbyPAN CPAN Upload: Math-MPFR-4.18 by SISYPHUS https://metacpan.org/release/SISYPHUS/Math-MPFR-4.18
[16:17:38] *** Quits: X-Scale (~ARM@83.223.235.65) (Ping timeout: 256 seconds)
[16:17:41] *** Joins: troller (~p@2a02:6b8:0:40c:7e64:ec22:cf47:ca1a)
[16:18:31] *** Joins: X-Scale` (~ARM@165.201.137.78.rev.vodafone.pt)
[16:19:15] *** X-Scale` is now known as X-Scale
[16:19:23] *** Joins: jabberwok (~wlindley@75.105.20.104)
[16:21:34] *** Quits: magla (~gelignite@55d4e1d7.access.ecotel.net) (Quit: Stay safe!)
[16:25:37] *** Joins: GeekRuthie (GeekRuthie@2600:3c00::f03c:92ff:fee2:9bf3)
[16:30:18] *** Joins: sleetdrop (~sleetdrop@61.135.152.248)
[16:34:43] *** Quits: sleetdrop (~sleetdrop@61.135.152.248) (Quit: My MacBook has gone to sleep. ZZZzzz…)
[16:36:50] *** Joins: zer0bitz (~zer0bitz@2001:2003:f6e3:7400:d15f:a494:a911:62f8)
[16:39:23] *** Quits: gamo (~Thunderbi@cm-93-156-61-102.telecable.es) (Remote host closed the connection)
[16:39:38] *** Joins: gamo (~Thunderbi@cm-93-156-61-102.telecable.es)
[16:45:01] *** Quits: BSaboia (~bsaboia@177.37.198.227) (Quit: This computer has gone to sleep)
[16:45:02] *** Quits: todd (~todd@gateway/tor-sasl/toddf) (Remote host closed the connection)
[16:46:58] *** Joins: BSaboia (~bsaboia@177.37.198.227)
[16:48:47] *** Quits: GeekRuthie (GeekRuthie@2600:3c00::f03c:92ff:fee2:9bf3) (Remote host closed the connection)
[16:51:20] *** Joins: todd (~todd@gateway/tor-sasl/toddf)
[17:02:34] *** Joins: slowButPresent (~slowButPr@user/slowbutpresent)
[17:03:41] *** Joins: G_SabinoMullane (~G_SabinoM@pool-72-94-251-236.phlapa.fios.verizon.net)
[17:05:37] *** Joins: tobybl (~tobybl@213.31.134.235)
[17:08:59] *** Quits: seoul_man (~meh@user/seoul-man/x-5066766) (Remote host closed the connection)
[17:09:22] *** Quits: BSaboia (~bsaboia@177.37.198.227) (Quit: This computer has gone to sleep)
[17:09:22] *** Quits: rindolf (~shlomif@2a0d:6fc2:4bb1:500:6b1e:2524:3d70:36ec) (Read error: Connection reset by peer)
[17:09:45] *** Joins: rindolf (~shlomif@2a0d:6fc2:4bb1:500:6b1e:2524:3d70:36ec)
[17:09:52] *** Joins: BSaboia (~bsaboia@177.37.198.227)
[17:11:17] * GumbyPAN CPAN Upload: Games-Axmud-1.3.019 by ASLEWIS https://metacpan.org/release/ASLEWIS/Games-Axmud-1.3.019
[17:13:08] *** Quits: Colt (~Colt@user/colt) (Quit: Leaving)
[17:17:12] *** Joins: diskin (~diskin@31.23.50.140)
[17:18:21] *** Joins: gordonfish- (~gordonfis@user/gordonfish)
[17:19:41] *** Quits: gordonfish (~gordonfis@user/gordonfish) (Ping timeout: 250 seconds)
[17:21:13] *** Joins: diskin_ (~diskin@ec2-3-124-171-230.eu-central-1.compute.amazonaws.com)
[17:21:13] *** Quits: diskin (~diskin@31.23.50.140) (Killed (sodium.libera.chat (Nickname regained by services)))
[17:21:13] *** diskin_ is now known as diskin
[17:30:05] *** Quits: mattil_ (~mattil@helsinki.portalify.com) (Remote host closed the connection)
[17:30:41] *** Joins: mattil (~mattil@helsinki.portalify.com)
[17:36:02] *** Quits: mattil (~mattil@helsinki.portalify.com) (Ping timeout: 260 seconds)
[17:39:59] *** Quits: disconnect_me (~marcin@gl92-41.master.pl) (Ping timeout: 264 seconds)
[17:44:21] *** TitanOfOld|work is now known as TitanOfOld
[17:44:23] *** Quits: Manderson_ (manderson@gateway/vpn/protonvpn/manderson) (Remote host closed the connection)
[17:44:47] *** Joins: Manderson_ (manderson@gateway/vpn/protonvpn/manderson)
[17:47:01] *** Joins: disconnect_me (~marcin@gl92-41.master.pl)
[17:51:50] *** Quits: zkrd (~xdg@2a02:587:de00:6d00:f4ab:2db4:2d71:c63e) (Read error: Connection reset by peer)
[17:58:15] *** Joins: rgrinberg (~textual@201.192.183.100)
[18:01:44] *** Joins: ProperNoun (~ProperNou@2600:1700:eb30:a2c0::45)
[18:05:54] *** Joins: leitz (~LeamHall@cpe-173-172-58-72.tx.res.rr.com)
[18:08:08] *** Quits: deadmarshal (~deadmarsh@95.38.117.166) (Ping timeout: 256 seconds)
[18:08:42] *** Quits: diskin (~diskin@ec2-3-124-171-230.eu-central-1.compute.amazonaws.com) (Ping timeout: 260 seconds)
[18:19:50] *** Joins: magla (~gelignite@55d4e1d7.access.ecotel.net)
[18:21:15] *** Joins: ProperN[out] (~holyShizn@2600:1700:eb30:a2c0::48)
[18:22:19] *** Quits: ProperNoun (~ProperNou@2600:1700:eb30:a2c0::45) (Quit: Konversation terminated!)
[18:27:37] *** Quits: ProperN[out] (~holyShizn@2600:1700:eb30:a2c0::48) (Changing host)
[18:27:37] *** Joins: ProperN[out] (~holyShizn@user/propernoun)
[18:27:53] *** ProperN[out] is now known as ProperNoun
[18:30:43] *** Parts: disconnect_me (~marcin@gl92-41.master.pl) ()
[18:36:45] *** Joins: jess (~jess@libera/staff/jess)
[18:37:53] *** Quits: CatCow (~wtf_over@c-73-96-109-206.hsd1.or.comcast.net) (Quit: Textual IRC Client: www.textualapp.com)
[18:42:17] <hethw> unicode mantra
[18:43:16] *** Quits: defjam (~eb0t@90.210.93.250) (Ping timeout: 256 seconds)
[18:44:29] <choroba> hare uni, hare uni, uni uni, hare hare!
[18:44:53] <lopid> fenton, no
[18:45:08] *** Joins: defjam (~eb0t@90.210.95.134)
[18:45:41] <Altreus> hare today ...
[18:46:23] *** Joins: deadmarshal (~deadmarsh@95.38.117.166)
[18:47:38] *** Joins: willthechill (~willthech@2600:1700:8c61:3ed0:e119:8159:ccc4:5b47)
[18:48:41] <jabberwok> shh!, be vewwy quiet
[18:49:23] *** Quits: defjam (~eb0t@90.210.95.134) (Read error: Connection reset by peer)
[18:53:42] <ilmari> perlbot: unicode mantra?
[18:53:42] <perlbot> ilmari: U+006D (6d): LATIN SMALL LETTER M [m] U+0061 (61): LATIN SMALL LETTER A [a] U+006E (6e): LATIN SMALL LETTER N [n] U+0074 (74): LATIN SMALL LETTER T [t] U+0072 (72): LATIN SMALL LETTER R [r] U+0061 (61): LATIN SMALL LETTER A [a] U+003F (3f): QUESTION MARK [?] 
[18:53:48] <ilmari> perlbot: encoding mantra?
[18:53:48] <perlbot> ilmari: decode goes from BYTES to UNICODE CHARACTERS. encode goes from UNICODE CHARACTERS to BYTES. decode bytes to unicode characters as soon as possible, work with unicode characters, and encode to bytes as late as possible.
[18:55:26] *** Joins: defjam (~eb0t@90.213.43.181)
[19:00:08] *** Joins: tg (~tg@rockylinux/infra/tg)
[19:04:48] *** Quits: deadmarshal (~deadmarsh@95.38.117.166) (Ping timeout: 256 seconds)
[19:06:29] * GumbyPAN CPAN Upload: Hash-Util-Exists-Tiny-0.01 by AAHAZRED https://metacpan.org/release/AAHAZRED/Hash-Util-Exists-Tiny-0.01
[19:06:29] * GumbyPAN CPAN Upload: Dyn-0.02 by SANKO https://metacpan.org/release/SANKO/Dyn-0.02
[19:06:34] *** Quits: roflbot (~hoydand@195.181.139.135) (Ping timeout: 260 seconds)
[19:14:27] <graham> is it valid to use WIFEXITED / WEXITSTATUS / WIFSIGNALED / WIFTERMSIG on $CHILD_ERROR or just $^CHILD_ERROR_NATIVE?
[19:15:26] <genio> wife exited and child error were the first things that jumped out at me. sheesh I need coffee
[19:15:41] <leitz> Rough home life?
[19:15:59] *** Joins: roflbot (~hoydand@195.181.139.135)
[19:17:29] <Altreus> sounds like a dodged bullet to me
[19:17:50] <graham> and what is the data type of $^CHILD_ERROR_NATIVE? I'm curious about the range of values it can have
[19:21:32] <gordonfish-> WIFEXITED? How does it detect that? Web cam? ;p (sorry)
[19:22:38] <vague> It's a typo. Should be WIFEXCITED
[19:23:28] <Altreus> gordonfish-: with the tracer tag obviously
[19:23:45] *** Joins: diskin (~diskin@ec2-3-124-171-230.eu-central-1.compute.amazonaws.com)
[19:23:45] *** gordonfish- is now known as gordonfish
[19:23:54] *** Joins: parv (~quass@user/parv)
[19:26:31] * GumbyPAN CPAN Upload: WebService-YTSearch-0.0302 by GENE https://metacpan.org/release/GENE/WebService-YTSearch-0.0302
[19:27:47] *** Joins: kensanata (~user@user/kensanata)
[19:31:32] * GumbyPAN CPAN Upload: Hash-Util-Exists-Tiny-0.02 by AAHAZRED https://metacpan.org/release/AAHAZRED/Hash-Util-Exists-Tiny-0.02
[19:33:23] *** Quits: rgrinberg (~textual@201.192.183.100) (Quit: My MacBook has gone to sleep. ZZZzzz…)
[19:34:43] *** Joins: rgrinberg (~textual@201.192.183.100)
[19:36:50] <gordonfish> [OT] I've seen some strange and silly TV adverts before, though I can't say that I ever thought I'd see a major credit card company (Discover in this case) use Sir Mixalot's Baby Got Back in one...
[19:37:34] *** Joins: seoul_man (~meh@user/seoul-man/x-5066766)
[19:38:14] <Altreus> they're desperate because millennials have realised getting into debt is a bad idea
[19:40:53] *** Quits: parv (~quass@user/parv) (Quit: parv)
[19:41:09] *** Quits: defjam (~eb0t@90.213.43.181) (Ping timeout: 268 seconds)
[19:42:00] *** Quits: jplesnik (jplesnik@nat-pool-brq-t.redhat.com) (Quit: Leaving)
[19:42:28] <gordonfish> Altreus: college debt probably hasn't helped that at all
[19:42:45] *** Joins: defjam (~eb0t@90.210.91.65)
[19:46:33] *** Joins: hudo__ (~hudo@62.68.19.39)
[19:46:38] <rindolf> gordonfish: link?
[19:54:06] *** Quits: Charadon[m] (~charadon@2001:470:69fc:105::d56f) (K-Lined)
[19:54:06] *** Quits: enick_519 (~mercvrivs@2001:470:69fc:105::2ee6) (K-Lined)
[19:54:08] *** Quits: latk (~latk@2001:470:69fc:105::255) (K-Lined)
[19:54:09] *** Quits: hussam (~hussam@user/hussam) (K-Lined)
[19:54:11] *** Quits: Michael[m] (~mbuddemat@2001:470:69fc:105::1:16a9) (K-Lined)
[19:54:13] *** Quits: MikeGeorge[m] (~onesuitsa@2001:470:69fc:105::1f88) (K-Lined)
[19:54:15] *** Quits: demostanis[m] (~demostani@2001:470:69fc:105::2c2) (K-Lined)
[19:54:15] *** Quits: gordonfish[m] (~gordonfis@user/gordonfish) (K-Lined)
[19:54:15] *** Quits: ehuelsmann[m] (~ehuelsman@2001:470:69fc:105::169a) (K-Lined)
[19:54:15] *** Quits: NoGare[m] (~nogaremat@2001:470:69fc:105::35f2) (K-Lined)
[19:54:17] *** Quits: sergiotarxz[m] (~sergiotar@2001:470:69fc:105::1:15f2) (K-Lined)
[19:54:17] *** Quits: graham (~gchristen@user/gchristensen) (K-Lined)
[19:54:19] *** Quits: ilmari_ (~ilmari@user/ilmari) (K-Lined)
[19:54:21] *** Quits: Kate[m]12 (~katewecab@2001:470:69fc:105::1:2b2) (K-Lined)
[19:55:43] *** Quits: BSaboia (~bsaboia@177.37.198.227) (Quit: This computer has gone to sleep)
[19:57:36] <zgu> bye bye matrix
[19:59:39] *** Quits: mogad0n (~mogad0n@user/mogad0n) (Ping timeout: 268 seconds)
[20:00:30] *** Joins: mogad0n (~mogad0n@user/mogad0n)
[20:01:28] *** Quits: defjam (~eb0t@90.210.91.65) (Ping timeout: 256 seconds)
[20:02:04] *** Joins: defjam (~eb0t@90.199.243.99)
[20:02:37] *** Quits: magla (~gelignite@55d4e1d7.access.ecotel.net) (Quit: Stay safe!)
[20:04:17] *** Quits: Sauvin (~sauvin@about/linux/staff/sauvin) (Read error: Connection reset by peer)
[20:04:20] *** Quits: randir_ (~randir@93.159.239.42) (Remote host closed the connection)
[20:04:27] *** Joins: Sauvin (~sauvin@about/linux/staff/sauvin)
[20:04:54] *** Quits: rgrinberg (~textual@201.192.183.100) (Ping timeout: 260 seconds)
[20:04:54] *** Quits: bigpresh (~bigpresh@libera/staff/bigpresh) (Quit: Life?  Outside IRC?  A curious idea, I must investigate.)
[20:05:25] *** Quits: ology (~gene@user/ology) (Ping timeout: 250 seconds)
[20:05:29] *** Quits: liam_ (sid7517@helmsley.irccloud.com) (Ping timeout: 264 seconds)
[20:05:29] *** Quits: Bodger1234_ (sid503511@uxbridge.irccloud.com) (Ping timeout: 264 seconds)
[20:05:29] *** Quits: buu (~buu@70-142-48-147.lightspeed.austtx.sbcglobal.net) (Ping timeout: 264 seconds)
[20:05:51] *** Joins: bigpresh (~bigpresh@libera/staff/bigpresh)
[20:06:31] *** Joins: ilmari_ (~ilmari@user/ilmari)
[20:06:51] *** Quits: chronon (~chronon@user/chronon) (Ping timeout: 244 seconds)
[20:07:34] *** Joins: buu (~buu@70-142-48-147.lightspeed.austtx.sbcglobal.net)
[20:07:41] *** Joins: chronon (~chronon@user/chronon)
[20:08:03] *** Joins: ology (~gene@user/ology)
[20:09:02] *** Quits: sa (sid1055@tinside.irccloud.com) (Ping timeout: 240 seconds)
[20:09:02] *** Quits: timeless (sid4015@ilkley.irccloud.com) (Ping timeout: 240 seconds)
[20:09:02] *** Quits: celphi (sid97751@user/celphi) (Ping timeout: 240 seconds)
[20:09:21] *** Joins: KnoP (~KnoP@p57b21d87.dip0.t-ipconnect.de)
[20:09:24] *** Quits: mstevens (sid285816@tinside.irccloud.com) (Ping timeout: 256 seconds)
[20:09:24] *** Quits: perigrin (sid218253@lymington.irccloud.com) (Ping timeout: 256 seconds)
[20:09:31] *** Quits: Mithaldu_ (sid27181@hampstead.irccloud.com) (Ping timeout: 268 seconds)
[20:09:32] *** Quits: BlueShark (sid10311@user/blueshark) (Ping timeout: 240 seconds)
[20:09:33] *** Quits: patterner_ (sid212303@ilkley.irccloud.com) (Ping timeout: 250 seconds)
[20:09:33] *** Quits: odc (sid197788@helmsley.irccloud.com) (Ping timeout: 250 seconds)
[20:09:33] *** Quits: bn_work (uid268505@uxbridge.irccloud.com) (Ping timeout: 250 seconds)
[20:09:39] *** Quits: Exodist (sid433366@hampstead.irccloud.com) (Ping timeout: 265 seconds)
[20:09:52] *** Quits: neilb___ (sid492745@ilkley.irccloud.com) (Read error: Connection reset by peer)
[20:09:53] *** Quits: mruszczyk (sid160336@tinside.irccloud.com) (Read error: Connection reset by peer)
[20:09:54] *** Quits: ranguard (sid496095@lymington.irccloud.com) (Read error: Connection reset by peer)
[20:09:54] *** Quits: leont (sid489095@uxbridge.irccloud.com) (Read error: Connection reset by peer)
[20:09:55] *** Quits: skaji (sid178483@tinside.irccloud.com) (Read error: Connection reset by peer)
[20:09:58] *** Quits: stephen87 (sid33834@user/stephen87) (Read error: Connection reset by peer)
[20:09:58] *** Quits: TBSliver (sid321952@hampstead.irccloud.com) (Read error: Connection reset by peer)
[20:09:59] *** Quits: pwillard (sid136981@hampstead.irccloud.com) (Ping timeout: 250 seconds)
[20:09:59] *** Quits: kiwiroy (sid374179@lymington.irccloud.com) (Ping timeout: 250 seconds)
[20:10:00] *** Quits: tag (sid271787@lymington.irccloud.com) (Read error: Connection reset by peer)
[20:10:00] *** Quits: mjgardner (sid182628@ilkley.irccloud.com) (Read error: Connection reset by peer)
[20:10:01] *** Quits: ggherdov (sid11402@helmsley.irccloud.com) (Read error: Connection reset by peer)
[20:10:02] *** Quits: integral (sid296274@user/integral) (Read error: Connection reset by peer)
[20:10:02] *** Quits: nrr__ (sid20938@lymington.irccloud.com) (Read error: Connection reset by peer)
[20:10:02] *** Quits: kawaii_ (sid345572@hampstead.irccloud.com) (Write error: Connection reset by peer)
[20:10:04] *** Quits: kraih (sid17075@mojo/destroy-all-humans/kraih) (Read error: Connection reset by peer)
[20:10:04] *** Quits: Yaakov (sid19863@user/Yaakov) (Read error: Connection reset by peer)
[20:10:04] *** Quits: pjlsergeant (sid143467@hampstead.irccloud.com) (Read error: Connection reset by peer)
[20:11:13] <ilmari> just a bridge restart, I reckon
[20:11:25] *** Joins: latk (~latk@2001:470:69fc:105::255)
[20:11:25] *** Joins: Guest4443 (~mercvrivs@2001:470:69fc:105::2ee6)
[20:11:25] *** Joins: NoGare[m] (~nogaremat@2001:470:69fc:105::35f2)
[20:11:25] *** Joins: ehuelsmann[m] (~ehuelsman@2001:470:69fc:105::169a)
[20:11:25] *** Joins: sergiotarxz[m] (~sergiotar@2001:470:69fc:105::1:15f2)
[20:11:25] *** Joins: gordonfish[m] (~gordonfis@user/gordonfish)
[20:11:25] *** Joins: MikeGeorge[m] (~onesuitsa@2001:470:69fc:105::1f88)
[20:11:25] *** Joins: Charadon[m] (~charadon@2001:470:69fc:105::d56f)
[20:11:26] *** Joins: hussam (~hussam@user/hussam)
[20:11:26] *** Joins: Michael[m] (~mbuddemat@2001:470:69fc:105::1:16a9)
[20:11:26] *** Joins: demostanis[m] (~demostani@2001:470:69fc:105::2c2)
[20:11:43] *** Joins: Kate[m]1 (~katewecab@2001:470:69fc:105::1:2b2)
[20:11:44] *** Joins: graham (~gchristen@user/gchristensen)
[20:11:45] *** Joins: kraih (sid17075@mojo/destroy-all-humans/kraih)
[20:11:46] *** Joins: pjlsergeant (sid143467@hampstead.irccloud.com)
[20:11:49] *** Joins: tag (sid271787@lymington.irccloud.com)
[20:12:01] *** Joins: timeless (sid4015@ilkley.irccloud.com)
[20:12:05] *** Quits: PotatoGim (sid99505@lymington.irccloud.com) (Ping timeout: 264 seconds)
[20:12:06] *** Joins: leont (sid489095@uxbridge.irccloud.com)
[20:12:14] *** Joins: mruszczyk (sid160336@tinside.irccloud.com)
[20:12:25] *** Joins: kiwiroy (sid374179@lymington.irccloud.com)
[20:12:30] *** Joins: mjgardner (sid182628@ilkley.irccloud.com)
[20:12:42] *** Joins: patterner_ (sid212303@ilkley.irccloud.com)
[20:12:48] *** Joins: liam_ (sid7517@helmsley.irccloud.com)
[20:12:57] *** Joins: integral (sid296274@user/integral)
[20:13:25] *** Joins: kawaii_ (sid345572@hampstead.irccloud.com)
[20:13:41] *** Joins: perigrin (sid218253@lymington.irccloud.com)
[20:13:42] *** Joins: ranguard (sid496095@lymington.irccloud.com)
[20:13:42] *** Joins: Mithaldu_ (sid27181@hampstead.irccloud.com)
[20:13:44] *** Joins: Bodger1234_ (sid503511@uxbridge.irccloud.com)
[20:14:04] *** Joins: BlueShark (sid10311@user/blueshark)
[20:14:10] *** Joins: stephen87 (sid33834@user/stephen87)
[20:14:12] *** Joins: Exodist (sid433366@hampstead.irccloud.com)
[20:14:13] *** Joins: mstevens (sid285816@tinside.irccloud.com)
[20:14:14] *** Joins: PotatoGim (sid99505@lymington.irccloud.com)
[20:14:24] *** Joins: sa (sid1055@tinside.irccloud.com)
[20:14:41] *** Joins: TBSliver (sid321952@hampstead.irccloud.com)
[20:14:41] *** Joins: neilb___ (sid492745@ilkley.irccloud.com)
[20:14:45] *** Joins: skaji (sid178483@tinside.irccloud.com)
[20:14:58] *** Joins: bn_work (uid268505@uxbridge.irccloud.com)
[20:15:22] *** Joins: Yaakov (sid19863@user/Yaakov)
[20:15:52] *** Joins: rgrinberg (~textual@201.192.183.100)
[20:18:52] *** Joins: odc (sid197788@helmsley.irccloud.com)
[20:19:28] *** Joins: ggherdov (sid11402@helmsley.irccloud.com)
[20:19:35] *** Quits: defjam (~eb0t@90.199.243.99) (Ping timeout: 264 seconds)
[20:20:16] *** Joins: celphi (sid97751@user/celphi)
[20:20:45] *** Joins: nrr__ (sid20938@lymington.irccloud.com)
[20:20:57] *** Joins: pwillard (sid136981@hampstead.irccloud.com)
[20:21:24] *** Joins: defjam (~eb0t@90.210.93.143)
[20:21:36] * GumbyPAN CPAN Upload: Mojolicious-Plugin-ToolkitRenderer-1.11 by GRYPHON https://metacpan.org/release/GRYPHON/Mojolicious-Plugin-ToolkitRenderer-1.11
[20:21:37] * GumbyPAN CPAN Upload: Bible-OBML-1.17 by GRYPHON https://metacpan.org/release/GRYPHON/Bible-OBML-1.17
[20:22:59] *** Quits: PlayerOne (~PlayerOne@user/playerone) (Quit: Client closed)
[20:27:23] *** Quits: mogad0n (~mogad0n@user/mogad0n) (Ping timeout: 264 seconds)
[20:28:18] *** Joins: mogad0n (~mogad0n@user/mogad0n)
[20:28:52] *** Quits: ircuser-1 (~Johnny@71.63.241.168) (Quit: because)
[20:29:24] *** Quits: NoGare[m] (~nogaremat@2001:470:69fc:105::35f2) (Quit: Client limit exceeded: 20000)
[20:30:00] *** Quits: latk (~latk@2001:470:69fc:105::255) (Quit: Client limit exceeded: 20000)
[20:30:01] *** Quits: Guest4443 (~mercvrivs@2001:470:69fc:105::2ee6) (Quit: Client limit exceeded: 20000)
[20:30:04] *** Quits: hussam (~hussam@user/hussam) (Quit: Client limit exceeded: 20000)
[20:30:16] *** Quits: gordonfish[m] (~gordonfis@user/gordonfish) (Quit: Client limit exceeded: 20000)
[20:30:31] *** Joins: ircuser-1 (~Johnny@71.63.241.168)
[20:31:06] *** Quits: ehuelsmann[m] (~ehuelsman@2001:470:69fc:105::169a) (Quit: Client limit exceeded: 20000)
[20:31:34] *** Quits: Charadon[m] (~charadon@2001:470:69fc:105::d56f) (Quit: Client limit exceeded: 20000)
[20:31:52] *** Joins: enick_958 (~mercvrivs@2001:470:69fc:105::2ee6)
[20:31:52] *** Joins: NoGare[m] (~nogaremat@2001:470:69fc:105::35f2)
[20:31:53] *** Joins: gordonfish[m] (~gordonfis@user/gordonfish)
[20:31:53] *** Joins: hussam (~hussam@user/hussam)
[20:31:59] *** Joins: Charadon[m] (~charadon@2001:470:69fc:105::d56f)
[20:32:00] *** Joins: ehuelsmann[m] (~ehuelsman@2001:470:69fc:105::169a)
[20:32:06] *** Joins: latk (~latk@2001:470:69fc:105::255)
[20:32:06] *** Quits: Michael[m] (~mbuddemat@2001:470:69fc:105::1:16a9) (Quit: Client limit exceeded: 20000)
[20:36:18] *** Quits: tejr (~tejr@user/tejr) (Ping timeout: 276 seconds)
[20:36:23] *** Joins: Adoi (~Adoi@user/adoi)
[20:36:38] * GumbyPAN CPAN Upload: CallBackery-0.39.7 by OETIKER https://metacpan.org/release/OETIKER/CallBackery-0.39.7
[20:37:00] *** Joins: Michael[m] (~mbuddemat@2001:470:69fc:105::1:16a9)
[20:37:39] *** Joins: tejr (~tejr@user/tejr)
[20:38:57] *** Joins: randir (~randir@95-25-138-85.broadband.corbina.ru)
[20:46:39] * GumbyPAN CPAN Upload: DBIx-Query-1.13 by GRYPHON https://metacpan.org/release/GRYPHON/DBIx-Query-1.13
[20:48:45] *** Quits: bmeneg (~bmeneg@2001:1284:f016:6b8b:c598:4952:2800:7afe) (Remote host closed the connection)
[21:00:48] *** Quits: rgrinberg (~textual@201.192.183.100) (Quit: My MacBook has gone to sleep. ZZZzzz…)
[21:05:39] *** Quits: KnoP (~KnoP@p57b21d87.dip0.t-ipconnect.de) (Ping timeout: 250 seconds)
[21:06:07] *** Joins: magla (~gelignite@55d4e1d7.access.ecotel.net)
[21:10:37] *** Quits: tobybl (~tobybl@213.31.134.235) (Remote host closed the connection)
[21:11:41] * GumbyPAN CPAN Upload: Test2-Harness-1.000082 by EXODIST https://metacpan.org/release/EXODIST/Test2-Harness-1.000082
[21:11:47] *** Quits: troller (~p@2a02:6b8:0:40c:7e64:ec22:cf47:ca1a) (Ping timeout: 264 seconds)
[21:14:44] *** Quits: voegelas (~voegelas@www.andreasvoegele.com) (Remote host closed the connection)
[21:18:04] *** Quits: rindolf (~shlomif@2a0d:6fc2:4bb1:500:6b1e:2524:3d70:36ec) (Read error: Connection reset by peer)
[21:18:25] *** Joins: voegelas (~voegelas@www.andreasvoegele.com)
[21:22:41] *** Joins: EGD (~egd@user/egd)
[21:23:03] *** Joins: rindolf (~shlomif@2a0d:6fc2:4bb1:500:6b1e:2524:3d70:36ec)
[21:36:02] *** Quits: Adoi (~Adoi@user/adoi) (Ping timeout: 240 seconds)
[21:40:27] *** Parts: Charadon[m] (~charadon@2001:470:69fc:105::d56f) ()
[21:42:56] *** Quits: EGD (~egd@user/egd) ()
[21:47:54] *** Quits: tomaw (tom@libera/staff/tomaw) (Quit: Quitting)
[21:49:42] *** Joins: ether (~ether@vps-6c71e929.vps.ovh.net)
[21:49:43] *** Quits: ether (~ether@vps-6c71e929.vps.ovh.net) (Changing host)
[21:49:43] *** Joins: ether (~ether@perl/cpan-druid/ether)
[21:51:43] *** Joins: tomaw (tom@libera/staff/tomaw)
[22:00:32] *** Quits: defjam (~eb0t@90.210.93.143) (Ping timeout: 240 seconds)
[22:02:42] *** Joins: defjam (~eb0t@90.198.60.224)
[22:05:18] *** Quits: rindolf (~shlomif@2a0d:6fc2:4bb1:500:6b1e:2524:3d70:36ec) (Quit: Shlomi Fish ("Rindolf") has left the server. “Chuck Norris was challenged to fight the world, and accepted. He bet on himself, won, and collected the bet money.”)
[22:11:48] *** Joins: dextercd (~dexter@2a02-a450-f25d-1-76d4-35ff-fefe-34c.fixed6.kpn.net)
[22:13:29] *** Joins: troller (~p@80.240.216.69)
[22:14:47] *** Joins: darkstardevx (~darkstard@50.39.115.145)
[22:15:50] *** Joins: gizmomathboy (~gizmomath@206.127.53.107)
[22:15:59] *** Quits: darkstardev13 (~darkstard@50.39.114.152) (Ping timeout: 264 seconds)
[22:17:46] *** Joins: XV8 (~XV8@2601:5cb:c001:50:ec08:9207:968c:7455)
[22:26:25] *** Quits: miojo (~fu@187.32.234.131) (Ping timeout: 268 seconds)
[22:28:07] *** Joins: miojo (~fu@186.231.92.60)
[22:30:48] *** Parts: art1 (~romeyke@p200300ccdf0aa300a392274383c4b3f6.dip0.t-ipconnect.de) ()
[22:32:02] *** choroba is now known as choroba_
[22:32:26] *** Joins: choroba (~E_Choroba@89-101-243-80.cust.centrio.cz)
[22:32:36] *** Quits: choroba_ (~E.Choroba@89-101-243-80.cust.centrio.cz) (Quit: Leaving)
[22:38:11] *** Quits: X-Scale (~ARM@165.201.137.78.rev.vodafone.pt) (Ping timeout: 264 seconds)
[22:40:53] *** Joins: X-Scale (~ARM@46.50.7.119)
[22:41:51] * GumbyPAN CPAN Upload: XS-libpanda-1.5.7 by SYBER https://metacpan.org/release/SYBER/XS-libpanda-1.5.7
[22:46:51] * GumbyPAN CPAN Upload: UniEvent-1.2.8 by SYBER https://metacpan.org/release/SYBER/UniEvent-1.2.8
[22:47:52] *** Quits: leitz (~LeamHall@cpe-173-172-58-72.tx.res.rr.com) (Quit: nappy time)
[22:49:34] *** Joins: pucara (~i@181.93.164.73)
[22:49:49] *** Quits: Sauvin (~sauvin@about/linux/staff/sauvin) (Read error: Connection reset by peer)
[22:51:52] * GumbyPAN CPAN Upload: UniEvent-HTTP-1.1.0 by SYBER https://metacpan.org/release/SYBER/UniEvent-HTTP-1.1.0
[22:57:05] *** Quits: mmlj4 (~mmlj4@ip174-69-109-162.no.no.cox.net) (Remote host closed the connection)
[22:57:34] <gordonfish> Is there something in perl similar to C's sigqueue that allows one to send a signal (say, USR1) and with it, a value of some kind?
[22:57:52] *** Quits: zer0bitz (~zer0bitz@2001:2003:f6e3:7400:d15f:a494:a911:62f8) (Ping timeout: 268 seconds)
[23:02:52] *** Joins: KnoP (~KnoP@p57b21d87.dip0.t-ipconnect.de)
[23:03:40] <Grinnz> https://metacpan.org/pod/POSIX::RT::Signal
[23:03:40] <Paperbot> Link title(s): [ POSIX::RT::Signal - POSIX Real-time signal handling functions - metacpan.org ]
[23:05:32] <Grinnz> the easiest way to find something in perl similar to something in C is to find a wrapper of the C thing :P
[23:13:39] <gordonfish> Grinnz: Ug, I some how missed that one when searching metacpan.org. Thanks.
[23:22:42] <gordonfish> Grinnz: I did a test, sending (sigqueue pid, q{USR1}, 123;) to a test perl program with $SIG{USR1} = sub { say "[SIG:USR1:@_]" }; which prints [SIG:USR1:USR1], but the value is not present.
[23:23:06] <gordonfish> (I also assume that only numbers can be sent as a value via signals?)
[23:24:07] <Grinnz> i doubt the core signal handler mechanism supports receiving values
[23:24:29] <Grinnz> the other process probably needs to use sigwaitinfo from that same module
[23:24:37] <Grinnz> which does specify the value is an integer
[23:29:21] <gordonfish> Hmm. It sort of works. I'm using:
[23:29:24] <gordonfish> $SIG{USR1} = sub { my $info = sigwaitinfo $_[0]; say "[SIG:USR1:@_:".Dumper($info)."]" };
[23:29:50] <gordonfish> And the first time I send the signal from the command line, it doesn't fire, but the second time, it does.
[23:30:10] *** Joins: mmlj4 (~mmlj4@ip174-69-109-162.no.no.cox.net)
[23:30:15] <gordonfish> Third time, I see nothing. Fourth, it fires once again. It's like it works every-other time.
[23:31:30] <gordonfish> I'm thinking maybe I should use some sort of IPC or so, to send info to the main program?
[23:31:39] <gordonfish> (Rather than messing around with signals.)
[23:32:33] <gloin> I've forgotten a basic syntax thing: $var =~ s/foo/bar/g; $var =~ s/and/or/g; but as a one-liner
[23:33:18] <gordonfish> That is a one-liner.
[23:33:32] <gloin> hah
[23:33:39] <gloin> I meant in a single assignment operation
[23:34:10] <gordonfish> You could do $var =~ s/foo/bar/gr =~ s/and/or/g;
[23:34:30] <gloin> Right, that's what I had forgotten.
[23:34:46] <gloin> Thanks
[23:34:52] <Grinnz> gordonfish: sigwaitinfo is *instead* of the signal handler not inside it
[23:35:04] <Grinnz> so you've set up a signal handler that then waits for another signal
[23:35:51] <Grinnz> this means you have to block to wait for signals so it may not be useful for your task
[23:35:58] <gordonfish> Grinnz: Looks like that doesn't work the same sort of way as %SIG handlers though, as it appears to block, and doesn't take a callback.
[23:36:32] <gloin> actually that's not working, can't modify substitution in substitution
[23:36:45] <gordonfish> Oops, left the r off the last one
[23:36:56] * GumbyPAN CPAN Upload: UniEvent-HTTP-1.1.1 by SYBER https://metacpan.org/release/SYBER/UniEvent-HTTP-1.1.1
[23:38:30] <gordonfish> $var = $var =~ s/foo/bar/gr =~ s/and/or/gr;
[23:38:57] <gordonfish> Or perhaps s/foo/bar/gr, s/and/or/gr for $var;
[23:39:40] <gordonfish> Err, should be: s/foo/bar/g, s/and/or/g for $var;
[23:41:57] * GumbyPAN CPAN Upload: UniEvent-HTTP-Manager-1.1.0 by SYBER https://metacpan.org/release/SYBER/UniEvent-HTTP-Manager-1.1.0
[23:41:57] * GumbyPAN CPAN Upload: Alien-uPB-Core-0.18 by MBARBON https://metacpan.org/release/MBARBON/Alien-uPB-Core-0.18
[23:42:00] * GumbyPAN CPAN Upload: Google-ProtocolBuffers-Dynamic-0.33 by MBARBON https://metacpan.org/release/MBARBON/Google-ProtocolBuffers-Dynamic-0.33
[23:43:41] *** Quits: XV8 (~XV8@2601:5cb:c001:50:ec08:9207:968c:7455) (Quit: Textual IRC Client: www.textualapp.com)
[23:58:58] *** Joins: deadmarshal (~deadmarsh@95.38.117.166)
