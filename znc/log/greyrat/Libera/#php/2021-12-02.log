[00:03:44] <hans> actually the command `find -iname "*.php" -print0 | xargs -0 php -l 2>&1 | wc -l` returns 11
[00:04:05] <hans> i expected over 17,000
[00:05:24] <noord> hans: xfiles=$(find . -iname "*.php") && php -l $xfiles ?
[00:05:25] <__adrian> php -l doesn't take multiple <file> arguments
[00:06:00] <hans> derpppp thanks
[00:06:14] <physikoi> hans: try something like this https://hastepaste.com/view/ObeQ2mknUU
[00:06:40] <__adrian> try with  xargs -0 -n1 php -l
[00:07:21] <hans> yeah that works, thanks
[00:10:37] <hans> don't suppose -l has a switch to suppress the `No syntax errors detected in` message? eg only print errors
[00:11:29] <relipse> cant you write a script to take that out?
[00:11:36] <hans> i can indeed
[00:14:40] <hans> > find -iname "*.php" -print0 | xargs -0 -n 1 php -l  | grep -v -E 'No syntax errors detected in*'
[00:15:11] <relipse> well done
[00:15:13] <hans> ... won't work properly for filepaths containing newlines, but in the real world, only malicious code use those anyway..
[00:15:34] <relipse> i just used your command in my own bash script, thanks :)
[00:16:23] <hans> ..sometimes i wonder if allowing newlines in filepaths was a mistake (maybe newlines should have been disallowed the same way null bytes are disallowed)
[00:17:55] <relipse> i think that would have been smart
[00:19:25] <hans> relipse, btw my actual command is going to look more complex than that.. its going to look something like >find '/var/www' -regex '.*\.\(php\)' -not -regex '\(.*/docroot/external_libs/.*\|.*/docroot/phpmyadmin/.*\|.*/vendor/.*\|.*/data/vitec/.*\|.*/docroot/js/highcharts/.*\|.*/hotpatch_backups/.*\)' -print0 |  (...l)
[00:19:45] *** Quits: guido (~guido@host-87-7-185-158.retail.telecomitalia.it) (Quit: WeeChat 3.3)
[00:20:08] <relipse> https://www.irccloud.com/pastebin/E4FQDaHb/
[00:20:12] <hans> relipse: wouldn't surprise me if you too want some version of -not -regex .*vendor.*
[00:20:13] <relipse> that is my script
[00:20:59] <relipse> i like to do that before I commit or something
[00:21:07] *** Joins: axisys (~axisys@ec2-34-225-151-46.compute-1.amazonaws.com)
[00:21:17] <hans> yeah, but do you really want to waste time running all the vendor/composer stuff through that?
[00:21:55] *** Joins: Alex123 (~Adium@cpe-76-89-231-189.socal.res.rr.com)
[00:22:07] *** Parts: axisys (~axisys@ec2-34-225-151-46.compute-1.amazonaws.com) ()
[00:22:13] * __adrian whispers
[00:22:18] <__adrian> ~ static analysis ~
[00:23:38] <relipse> i currently don't use any vendor composer stuff on this pc
[00:23:44] <hans> oh kk
[00:25:27] *** Quits: wovixo (~wovixo@128.104.205.49) (Quit: Leaving)
[00:26:45] <relipse> i think i have "i must build it myself" syndrome
[00:27:01] <relipse> just kidding there are a lot of good libraries out there
[00:27:06] <hans> word of advice, seriously, "life is too short for that"
[00:27:08] <relipse> but I do tend to reinvent the wheel
[00:27:48] <relipse> i'll never forget the project in college where i wasted the majority of the time developing a library for command line arguments
[00:27:58] <relipse> and wasted it :(
[00:28:13] <relipse> instead of actually coding the project
[00:28:54] <relipse> c++ is nice though
[00:29:48] <hans> relipse: "If you think C++ is not overly complicated, just what is a protected abstract virtual base pure virtual private destructor and when was the last time you needed one?"  — Tom Cargill
[00:30:30] <relipse> half of me wishes I could have gotten a c++ job instead of PHP
[00:30:34] <relipse> webdev is nice
[00:31:00] <hans> but.. compared to C, i kindof agree, it has significantly more quality-of-life builtins than C.. at least C++ has a string class lel
[00:31:18] <relipse> string is part of the stl, its not native in c++
[00:31:44] <relipse> std::string
[00:32:19] <physikoi> relipse: /exit
[00:32:21] *** Quits: physikoi (~physikoi@user/physikoi) (Quit: leaving)
[00:32:29] <hans> dafuq
[00:34:02] <hans> >Any sufficiently complicated C or Fortran program contains an ad hoc, informally-specified, bug-ridden, slow implementation of half of C̶o̶m̶m̶o̶n̶ ̶L̶i̶s̶p̶.    - c++
[00:34:43] <hans> (the php interpreter is written in C btw :P )
[00:35:04] *** Quits: bobdobbs (~user@116.251.164.13) (Read error: Connection reset by peer)
[00:35:55] <relipse> yep i think they do that for the speed, rather than c++ that is
[00:36:01] <relipse> no need for objects
[00:36:53] <hans> i don't think PHP is written in C-instead-of-c++ for speed, but i do believe php would've been slower if written in c++ , not that it matters
[00:37:58] <hans> anyway from what i've heard, C++ compilers were horribly slow, and produced slow code to boot, back in 1995/php1
[00:40:56] <relipse> c++ is fast
[00:40:59] <relipse> but c is faster
[00:41:13] <hans> and.. c++ often makes it too easy to fall into performance pitfalls... just like void f(std::string str){} - every time you call that, you make a full copy of the string.. due to some difficult-to-understand-internal-stuff, C++ does not allow implicit cow-strings
[00:42:07] <hans> (many ways to fix it tho.. &str, const &str, std::string_view ~, but its very easy to make mistakes like that where c++ does relatively expensive copy operations behind the scene )
[00:42:13] *** Joins: physikoi (~physikoi@user/physikoi)
[00:42:22] <hans> (or malloc allocations, behind innocent-looking code)
[00:43:32] *** Joins: bobdobbs (~user@116.251.164.13)
[00:44:37] <relipse> yep good programmers use const string&
[00:44:47] <relipse> so it doesn't make a full copy each function pass
[00:45:52] <hans> .. which is why i think php is faster for being in C: C simply has significantly less performance pitfalls.
[00:45:59] *** Joins: night_wulfe_ (~wulfe@cpe-174-103-156-213.cinci.res.rr.com)
[00:47:31] *** Quits: Alex123 (~Adium@cpe-76-89-231-189.socal.res.rr.com) (Quit: Leaving.)
[00:48:41] *** Quits: night_wulfe (~wulfe@cpe-174-103-156-213.cinci.res.rr.com) (Ping timeout: 252 seconds)
[00:50:27] <relipse> this is the longest off-topic conversation I've had in this channel
[00:51:32] <hans> a much more interesting question is how would PHP be if written in Rust.. no more exploits like https://github.com/cfreal/exploits/blob/master/php-SplDoublyLinkedList-offsetUnset/exploit.php
[00:51:51] <hans> that sure is some interesting code..
[00:52:24] <physikoi> What is The Right Way to set permissions on an sqlite database file? Which user should own the file? Is this the recommended perms? "-rw-r--r--"?
[00:52:26] <physikoi> ty
[00:52:27] <__adrian> omg what will i do with all my billions of projects that rely on spldoublelinkedlist
[00:54:40] *** Joins: Alex123 (~Adium@cpe-76-89-231-189.socal.res.rr.com)
[00:55:03] <relipse> never experimented with rust
[00:55:12] <hans> __adrian: its worse than that tho; someone can poison a composer project you're using, to use that spldoublelinkedlist exploit to get root access on your system from php-fpm (or get php-fpm access, and php-fpm usually use root)
[00:55:24] <physikoi> darn, gotta go. nvm. gn
[00:55:26] *** Quits: physikoi (~physikoi@user/physikoi) (Quit: leaving)
[00:55:51] <hans> .. im not sure if php-fpm actually requires root, or if its just common.. it needs to be able to change the euid of other processes i think, soo
[00:56:49] <hans> that code is from this bug btw https://bugs.php.net/bug.php?id=81026
[00:58:21] <relipse> that code is above my head
[00:59:45] <hans> same. i think it use some black magic to get php to write raw data into shared memory of php-fpm, into a location fpm executes... or something
[01:01:41] *** Joins: guenhael1 (Thunderbir@gateway/vpn/protonvpn/guenhael)
[01:02:00] <relipse> that's the thing with composer, you have no idea what code you are getting
[01:02:13] <relipse> someone could put a virus or a file reader or something in there
[01:03:47] *** Quits: BadAdviceCat (~BadAdvice@user/badadvicecat) (Remote host closed the connection)
[01:03:50] <hans> that root-exploit has been present all the way from php5.3.0 to 8.alpha tho.. its been there from 2009-2020
[01:04:05] *** Joins: ash_worksi (~ash_m@user/ash-m/x-3292451)
[01:04:10] *** Joins: BadAdviceCat (~BadAdvice@user/badadvicecat)
[01:04:44] <ash_worksi> do webservers translate http requests into something else to communicate with PHP-FPM ?
[01:05:08] <relipse> i'm leaving, talk to you all later, nice conversation hans
[01:05:27] <hans> ash_worksi: yeah, more like wraps the http request in a pfm-protocol
[01:05:33] *** Quits: guenhael (Thunderbir@gateway/vpn/protonvpn/guenhael) (Ping timeout: 252 seconds)
[01:05:34] *** guenhael1 is now known as guenhael
[01:05:42] <ash_worksi> hans: I see, thanks
[01:15:10] *** Parts: ash_worksi (~ash_m@user/ash-m/x-3292451) ()
[01:16:54] *** Joins: jr007 (~jr007@204.10.207.70)
[01:31:04] *** Quits: Alex123 (~Adium@cpe-76-89-231-189.socal.res.rr.com) (Quit: Leaving.)
[01:47:06] *** Joins: smeeagle (~smeeagle@2a00:23c8:9611:e600:1401:22a5:674e:d69b)
[02:05:44] *** Quits: pmercado_ (~pmercado@186.107.61.96) (Ping timeout: 256 seconds)
[02:21:52] <CoJaBo> Is there any decent examples on how to use FFI? I have a function that returns a pointer and an int value by reference, which seems like a simple thing, but every example I can find just does printf :/
[02:23:04] *** Quits: LucaTM (~LucaTM@user/lucatm) (Quit: Textual IRC Client: www.textualapp.com)
[02:24:09] <__adrian> ircmaxell did some stuff with it a couple years ago. not sure where it ended up.
[02:24:30] <__adrian> what this generates might be interesting  https://github.com/ircmaxell/FFIMe
[02:25:32] <__adrian> if you mean you actually want a pointer in php, i don't think that will be possible - pretty sure it would still need to be wrapped up in your C implementation.
[02:26:50] <CoJaBo> __adrian: The pointer just needs to be passed to another function that in turn returns another int. Is that possible at least?
[02:27:11] <CoJaBo> I really hate writing C :/
[02:29:22] <__adrian> tl;dr: via php, i kinda doubt it. ffi is about accessing your C (other language) functions in php - it means you're writing _more_ C, not less.
[02:43:16] <CoJaBo> __adrian: yeh, I was hoping I could just use the existing lib as-is :/
[02:43:54] <CoJaBo> __adrian: Is it possible to pass values by-ref at all then? I'm still not sure how to get data out of C even if I do write more C
[02:44:04] <__adrian> are you trying to pass this pointer from one ffi function to another in the same library? or between libraries / actually _into_ php?
[02:44:52] <Sammitch> perhaps show the specific thing you're trying to do, rather than describing how you're attempting to do it
[02:45:22] <__adrian> i was inerested in ffi, but honestly never actually did anything and don't know a ton about it.
[02:45:24] <CoJaBo> __adrian: It's all in the same lib
[02:45:41] <__adrian> i'd guess that ^ is possible
[02:46:01] <__adrian> but i don't know how. you might find an answer/hint in that library i linked above.
[02:47:54] <CoJaBo> Sammitch: I have basically void* init(stuff, morestuff, int* error); as a first step to see if the lib even works at all, I need to get the value of "error"
[02:50:57] <CoJaBo> Sammitch: This lib is mostly just using PCRE, but in a way that I can't use PHP's built-in PCRE. So I could even port the whole thing to PHP if I could use FFI to wrap PCRE itself, tho I suspect that might be harder. I hit the same roadblock in trying; the first PCRE function I have to call is pcre2_compile, which has almost exactly the same signature as my init function, so I hit the same roadblock there lol.
[02:51:58] <CoJaBo> I've also considered just hacking the whole thing into an extension, tho I think FFI may be more portable especially with it now being builtin..
[03:05:22] *** Joins: luigibu1 (~luigibu@80.30.201.209)
[03:06:04] *** Joins: night_wulfe (~wulfe@cpe-174-103-156-213.cinci.res.rr.com)
[03:08:45] *** Quits: night_wulfe_ (~wulfe@cpe-174-103-156-213.cinci.res.rr.com) (Ping timeout: 252 seconds)
[03:10:02] *** Quits: luigibu1 (~luigibu@80.30.201.209) (Ping timeout: 252 seconds)
[03:12:51] *** Quits: The_Jag (~The_Jag@host-79-36-38-58.retail.telecomitalia.it) (Quit: The_Jag)
[03:34:11] <CoJaBo> i got an error =====D
[03:37:54] <CoJaBo> and i can read that error into a string. this is progress
[03:38:47] *** Joins: guenhael1 (Thunderbir@gateway/vpn/protonvpn/guenhael)
[03:41:23] *** Quits: guenhael (Thunderbir@gateway/vpn/protonvpn/guenhael) (Ping timeout: 252 seconds)
[03:41:23] *** guenhael1 is now known as guenhael
[03:45:01] *** Quits: Smeef (~deathonat@user/smeef) (Read error: Connection reset by peer)
[03:46:00] *** Joins: ash_worksi (~ash_m@user/ash-m/x-3292451)
[03:47:26] <CoJaBo> The pointers seem to pass just fine too, at least in PCRE. My lib tho, just segfaults at that point. Fun times..
[03:47:42] *** Joins: TheJ0nix (~manjaro-g@p549addea.dip0.t-ipconnect.de)
[03:48:06] <TheJ0nix> Hello, I have an question. I compile php8 in a custom docker image - all its working correctly - but composer missing ext-dom. When I show in php -i xml is active. How is the extension dom build into php? Which source is used for it? Or is it a php embedded lib?
[03:48:53] *** Joins: guenhael1 (Thunderbir@gateway/vpn/protonvpn/guenhael)
[03:52:23] *** Quits: guenhael (Thunderbir@gateway/vpn/protonvpn/guenhael) (Ping timeout: 252 seconds)
[03:52:23] *** guenhael1 is now known as guenhael
[03:54:15] *** Joins: Xavier7 (~ircap@179.6.137.60)
[03:58:27] *** Quits: luva (~luva@45.141.152.44) (Ping timeout: 256 seconds)
[04:01:28] *** Joins: luva (~luva@45.141.152.44)
[04:05:01] *** Joins: luigibu1 (~luigibu@80.30.201.209)
[04:05:22] <dag> are there any native php devices for doing css selector stuff on html?
[04:09:19] *** Quits: ms49434 (~ms49434@user/ms49434) (Quit: Leaving)
[04:10:17] <ss23> "native PHP" meaning built in core, or native PHP as in projects written in PHP code?
[04:10:50] <dag> i mean something that doesnt require 3rdparty dep
[04:11:38] <__adrian> css is just text output so far as php is concerned
[04:11:39] <dag> e.g. DOMDocument looks nice. but id rather not learn xpath :P
[04:11:57] <__adrian> dom has nothing to do with css
[04:12:10] <Blondie101010> TheJ0nix:  please show the full error message
[04:12:18] <__adrian> oh, you mean css-style html selectors.
[04:12:22] <__adrian> you mean xpath
[04:12:31] <__adrian> learn xpath  ;p
[04:12:59] <dag> yes jquery-style. i call them css-selector, maybe it has a better name
[04:13:03] *** Quits: led_belly (~led_belly@5.180.62.139) (Remote host closed the connection)
[04:13:22] <__adrian> np. "css selector" just made me think you were talking about css.
[04:13:39] <__adrian> to your specific question, no. xpath is the closest you'll get in core (and it IS worth learning).
[04:13:45] *** Quits: luigibu1 (~luigibu@80.30.201.209) (Ping timeout: 256 seconds)
[04:14:08] <__adrian> there are some choices with libraries, though.
[04:14:15] <__adrian> and you also should not be afraid of libraries.
[04:16:58] <TheJ0nix> Blondie101010: It has no error message - the problem describtion shows only that ext-dom is missing and in php -i is no dom extension only the xml extension. But when I unterstood ./configure right then it php-dom enabled by default. I have put a extra --enable-dom - can i compile dom in some way shared so that i can verify that an dom.so is created?
[04:17:35] <dag> thanks __adrian. ill look into xpath. might as well
[04:17:52] <Blondie101010> TheJ0nix:  show your FULL output please
[04:19:07] <TheJ0nix> Blondie101010: from composer?
[04:19:23] <__adrian> (use a paste site)
[04:19:35] <Albright> https://devhints.io/xpath
[04:20:12] <Albright> Xpath is like regex. It's daunting at first but once you learn it your life is improved and you catapult into the top 90% of developers.
[04:20:22] <Albright> So if you know both, you are like in the top 99%.
[04:20:40] <Albright> Er, wait. I have those percentages backwards.
[04:21:07] <dag> i want to join the top 0.1%
[04:21:34] <Albright> I think I'm pretty close in most ways except income
[04:22:28] *** Joins: the-count (~weston@172-1-66-81.lightspeed.frokca.sbcglobal.net)
[04:22:38] *** Quits: freeworld (~vit@chello085216193138.chello.sk) (Ping timeout: 252 seconds)
[04:22:38] <Albright> Anyway, that cheatsheet shows you how to "translate" some jQuery-like syntax to Xpath.
[04:23:33] *** Quits: tex (~super@user/dix) (Ping timeout: 252 seconds)
[04:24:30] *** Joins: luigibu1 (~luigibu@80.30.201.209)
[04:24:38] <the-count> Hello! I am using Apache2 on Alpine Linux and just switched over to php-fpm. Everything seems to work except for one site where I get the following error:
[04:24:59] <the-count> [Wed Dec 01 16:51:19.140820 2021] [proxy_fcgi:error] [pid 16927] [client 192.168.1.120:56014] AH01071: Got error 'PHP message: PHP Fatal error:  Uncaught Exception: Unable to open database: unable to open database file in /var/www/sites/parts/header.php:2\nStack trace:\n#0 /var/www/sites/parts/header.php(2): SQLite3->__construct()\n#1 /var/www/sites/parts/router.php(5): require('...')\n#2 {main}\n  thrown
[04:25:01] <Albright> And note that if you just want to get elements that match a tag name, or get all child elements of a certain element, there are DOMNode methods/properties to do that directly (`getElementsByTagName()` and `childNodes` respectively), so you might not need to use Xpath as much as you might think
[04:25:05] <the-count> in /var/www/sites/parts/header.php on line 2'
[04:25:26] <Albright> And since Xpath is slower than just those methods/properties it's actually best to avoid it where sensible.
[04:26:05] <Albright> the-count: The most likely reason is that the database was readable by the user account that Apache runs as, but isn't readable by the user account that php-fpm runs as.
[04:26:16] <the-count> Oh duh... I had the wrong file permissions
[04:26:36] <Albright> Note that if you want to do writes, both the database file and the directory that the database file is stored in needs to be writable too.
[04:27:36] <TheJ0nix> Blondie101010: https://pastebin.com/iNS7egEs
[04:27:37] <the-count> It looks like it is running under user 'nobody' which is a little odd
[04:30:34] <Albright> You might need to specify a more correct user in php-fpm.ini, though ideally your OS/package manager would have already handled that stuff for you.
[04:30:39] *** Quits: smeeagle (~smeeagle@2a00:23c8:9611:e600:1401:22a5:674e:d69b) (Quit: smeeagle)
[04:31:23] <Albright> Or you could yolo and 777 the database file. Up to you I guess
[04:33:04] *** Quits: luigibu1 (~luigibu@80.30.201.209) (Ping timeout: 256 seconds)
[04:33:19] *** Joins: physikoi (~physikoi@user/physikoi)
[04:33:53] <the-count> lol... I'm not in favor of that unless I'm testing :D
[04:34:05] <physikoi> hi #php. For this kind of error -- "During inheritance of ArrayAccess: Uncaught ErrorException: Return type of flight\util\Collection::offsetExists($offset) should either be compatible with ArrayAccess::offsetExists(mixed $offset): bool, or the #[\ReturnTypeWillChange] attribute should be used to temporarily suppress the notice in ..." - is it possible to suppress it when the issue with with a composer
[04:34:05] <physikoi> library?
[04:34:25] <physikoi> i'm on 8.1
[04:35:14] <Albright> physikoi: Do you understand the error message?
[04:35:40] <physikoi> No
[04:35:42] <physikoi> tbh
[04:37:24] <physikoi> Albright: the troublesome line from the library is this: `class Collection implements \ArrayAccess, \Iterator, \Countable, \JsonSerializable {`
[04:40:36] <__adrian> physikoi: when you implement in interface, you must preserve the method signature (that's the whole point, really)
[04:40:58] <__adrian> your method needs to return bool
[04:41:48] <physikoi> *nods* I'm going to a code fix to the author, but the underlying issue is that I jumped the gun for this project, so downgrading is the way to go.
[04:42:21] <Blondie101010> TheJ0nix:  you do have various problems...    start by moving or removing the lock file
[04:42:44] <Blondie101010> then read the error messages that remain and look at composer.json to explain it
[04:44:28] <the-count> Albright: Thanks and have a good evening!
[04:44:34] *** Parts: physikoi (~physikoi@user/physikoi) (ty)
[04:45:01] <TheJ0nix> Blondie101010: There is no composer lock file.
[04:45:26] <__adrian> crap he left
[04:45:38] <__adrian> i actually don't see that error  https://3v4l.org/ImDmR
[04:45:43] <__adrian> wonder what was going on
[04:50:03] *** Parts: the-count (~weston@172-1-66-81.lightspeed.frokca.sbcglobal.net) ()
[04:53:12] <Blondie101010> TheJ0nix:  how did your php installation get so messed up?  look for the libraries reported missing by `php -i` and/or uninstall and reinstall everything through your OS' package manager
[04:54:58] <TheJ0nix> Blondie101010: In the pastebin is my php -i output embedded - XML/Dom extension is active. But it is staticly compiled into php - That php is compiled from source.
[04:56:20] <Blondie101010> PHP Warning:  PHP Startup: Unable to load dynamic library 'dom' (tried: /opt/ddv/php/lib/php/extensions/dom (Error loading shared library /opt/ddv/php/lib/php/extensions/dom: No such file or directory), /opt/ddv/php/lib/php/extensions/dom.so (Error loading shared library /opt/ddv/php/lib/php/extensions/dom.so: No such file or directory)) in Unknown on line 0
[04:56:22] <Blondie101010> read!
[04:56:47] <Blondie101010> you have a broken php installation
[04:57:15] <TheJ0nix> Yes its only because i tried to extra put an extension=dom in a config - but this is not as shared lib in lib folder.
[04:57:16] <Blondie101010> you are strongly advised to use a package manager to handle it
[04:59:33] <TheJ0nix> The question was how is the dom extension build - i like to build it as shared so
[05:02:45] <Blondie101010> TheJ0nix: show: php -m
[05:03:09] *** Quits: DaNeenjah (~jake@adsl-74-230-8-177.hsv.bellsouth.net) (Quit: WeeChat 3.3)
[05:04:26] *** Quits: BadAdviceCat (~BadAdvice@user/badadvicecat) (Ping timeout: 252 seconds)
[05:05:09] *** Joins: luigibu1 (~luigibu@80.30.201.209)
[05:05:38] <TheJ0nix> https://pastebin.com/yydGQrLV
[05:07:19] <Blondie101010> that shows that you have both dom and xml active
[05:08:03] <Blondie101010> so it points to another composer error
[05:08:37] <Blondie101010> is composer calling a different php?
[05:09:09] <TheJ0nix> No from same php - it is only one php in that container.
[05:09:45] *** Quits: luigibu1 (~luigibu@80.30.201.209) (Ping timeout: 252 seconds)
[05:10:32] <Blondie101010> can you: composer update phpunit/phpunit
[05:15:56] <TheJ0nix> I get an error: Cannot update only a partial set of packages without a log file ist present.
[05:17:12] <TheJ0nix> I try an composer install only - now
[05:17:42] <TheJ0nix> Results in the same error with embed
[05:26:00] *** Joins: ferdna (~ferdna@user/ferdna)
[05:33:58] *** Joins: BadAdviceCat (~BadAdvice@user/badadvicecat)
[05:35:46] *** Quits: jeffrey (~jeffrey@2001:1c00:b11:8800:399c:16c5:8a3c:727e) (Ping timeout: 268 seconds)
[05:37:20] <Blondie101010> TheJ0nix:  why are you not using a pre-build php docker image or at least use the in-container package manager
[05:37:22] <Blondie101010> ?
[05:39:41] <TheJ0nix> It has varios reasons - it is a big and complex image which is specially adapted
[05:42:02] <Blondie101010> does the exact same composer.json work on a regular OS?
[05:44:17] *** Quits: onichomp666 (~onichomp@2806:264:4404:82be:b1e6:8d1e:bcf7:973c) (Read error: Connection reset by peer)
[05:44:56] *** Joins: onichomp666 (~onichomp@2806:264:4404:82be:b1e6:8d1e:bcf7:973c)
[05:45:30] *** Quits: onichomp666 (~onichomp@2806:264:4404:82be:b1e6:8d1e:bcf7:973c) (Read error: Connection reset by peer)
[05:48:18] *** Joins: onichomp (~onichomp@2806:264:4404:82be:1140:cc0f:73d8:c226)
[05:49:49] <Blondie101010> if you say it does, I'll set up a VM with the same PHP version to test it
[05:50:36] <Blondie101010> well I'd obviously need to see the composer.json
[05:50:45] <Blondie101010> either way
[05:50:45] <TheJ0nix> I try it currently - but it seems so.
[05:51:12] <TheJ0nix> but i have a older patch version of php on my pc running v8.0.11
[05:51:12] *** Joins: Hiccup (cHoy@user/hiccup)
[05:51:30] <Blondie101010> can you show composer.json ?
[05:51:58] <TheJ0nix> The composer.json is not working outside, because it used private composer packages.
[05:52:22] <TheJ0nix> Also composer update on my pc is working.
[05:53:02] <Blondie101010> well you should test everything outside and if it works, compare
[05:53:57] <Blondie101010> you seem to have conflicting constraints in it though
[05:54:51] <TheJ0nix> i think the problem is that the dom extension is not build as shared lib.
[05:57:09] <TheJ0nix> ok i see that the php homebrew build on mac is with static extensions too - in php wiki from dom extensions is noted that this extensions is enabled by default - i think the problem is that a package don't support the php 8.0.22
[05:58:35] *** Joins: catbeard (~noise@user/catbeard)
[05:59:04] <catbeard> hey all, using vscode with intelephense to do some cleanup to a WordPress MU plugin
[05:59:30] <catbeard> is there a plugin or hotkey to do a code cleanup based on PHPCS detected problems
[06:00:50] <catbeard> e.g replace tabs with spaces, remove spaces from after function parens, put { on it's own line after a method declaration
[06:09:45] <__adrian> can't answer about vsc, but https://packagist.org/packages/friendsofphp/php-cs-fixer
[06:22:22] <catbeard> noice
[06:27:25] *** Joins: WishBoy (~WishBoy@user/wishboy)
[06:29:23] *** Joins: Rockwood (~Rocky@user/rocky)
[06:29:51] <Rockwood> o/
[06:30:10] <WishBoy> \o
[06:30:17] <Rockwood> \o/
[06:30:18] *** Quits: WishBoy (~WishBoy@user/wishboy) (Client Quit)
[06:35:02] *** Joins: luigibu1 (~luigibu@80.30.201.209)
[06:35:10] <Rockwood> BadAdviceCat, o/
[06:35:20] <Rockwood> __adrian, hi how are you sir?
[06:39:57] *** Quits: luigibu1 (~luigibu@80.30.201.209) (Ping timeout: 256 seconds)
[06:43:36] *** Joins: puff (~user@S0106d4ca6d80a83c.vs.shawcable.net)
[06:51:00] *** Joins: paule32_ (~paule32@user/paule32)
[06:52:25] *** Joins: paule32__ (~paule32@user/paule32)
[06:54:21] *** Quits: ialokin (znc@user/ialokin) (Ping timeout: 250 seconds)
[06:54:53] *** Quits: paule32 (~paule32@user/paule32) (Ping timeout: 265 seconds)
[06:55:52] *** Quits: paule32_ (~paule32@user/paule32) (Ping timeout: 256 seconds)
[06:56:37] *** Joins: ialokin (znc@user/ialokin)
[06:57:14] *** Joins: paule32 (~paule32@user/paule32)
[06:59:01] *** Quits: paule32__ (~paule32@user/paule32) (Ping timeout: 252 seconds)
[07:07:05] *** Quits: BadAdviceCat (~BadAdvice@user/badadvicecat) (Ping timeout: 252 seconds)
[07:19:11] *** Quits: Northwoods (~Northwood@202.14.122.53) (Ping timeout: 252 seconds)
[07:20:50] *** Joins: BadAdviceCat (~BadAdvice@user/badadvicecat)
[07:30:42] *** Joins: bandit_za (~bandit@192.145.144.127)
[07:41:14] *** MelMalik is now known as AmyMalik
[07:51:17] *** Quits: Xavier7 (~ircap@179.6.137.60) (Quit:  IRcap  8.72 )
[07:54:59] *** Quits: fstd (~fstd@xdsl-87-79-98-69.nc.de) (Ping timeout: 265 seconds)
[07:56:30] <TheJ0nix> Blondie101010: I did some more debuggig: composer show --platforms don't list the same dependencies as php -m - many are missed. I check the code how composer get this information - it uses get_loaded_extensions() - so i print out the array from that - and it has all extensions like php -m . Why composer don't see the same dependencies? A fix is to ignore the platform deps on composer, but it is not very beautyfull.
[08:02:20] *** Joins: overrider (~overrider@user/overrider)
[08:03:28] *** Joins: led_belly (~led_belly@5.180.62.222)
[08:05:23] *** Joins: luigibu1 (~luigibu@80.30.201.209)
[08:05:59] *** Quits: overrider (~overrider@user/overrider) (Quit: leaving)
[08:10:07] *** Quits: luigibu1 (~luigibu@80.30.201.209) (Ping timeout: 256 seconds)
[08:12:33] *** Joins: guenhael1 (Thunderbir@gateway/vpn/protonvpn/guenhael)
[08:16:23] *** Quits: guenhael (Thunderbir@gateway/vpn/protonvpn/guenhael) (Ping timeout: 252 seconds)
[08:16:23] *** guenhael1 is now known as guenhael
[08:33:48] *** Joins: guenhael1 (Thunderbir@gateway/vpn/protonvpn/guenhael)
[08:35:49] *** Quits: guenhael (Thunderbir@gateway/vpn/protonvpn/guenhael) (Ping timeout: 252 seconds)
[08:35:50] *** guenhael1 is now known as guenhael
[08:39:17] *** Joins: mIk3_08 (~Thunderbi@user/mik3-08/x-2852566)
[08:47:13] *** Quits: Rockwood (~Rocky@user/rocky) (Quit: The Time is Over)
[08:47:55] *** Quits: onichomp (~onichomp@2806:264:4404:82be:1140:cc0f:73d8:c226) (Ping timeout: 252 seconds)
[08:55:05] *** Joins: elf (~elf@user/elf)
[08:55:09] *** Parts: elf (~elf@user/elf) (Leaving)
[08:57:41] <CoJaBo> I like how when optimizing PHP code, the obvious heavy and/or naïve sections are almost never the culpret of the massive slowdown and/or memory bloat =D
[09:07:11] *** Joins: Northwoods (~Northwood@202.14.122.53)
[09:08:39] *** Joins: fahrradToken (~fahrradTo@2a02:810b:149f:f0f4::c481)
[09:18:07] *** Quits: Northwoods (~Northwood@202.14.122.53) (Ping timeout: 256 seconds)
[09:19:22] *** Joins: velix (~velix@user/velix)
[09:19:39] <velix> Does PHP 8.0 have a function to merge two arrays with overwriting keys or do I need to build my own?
[09:20:04] <CoJaBo> There's a comparison of merge functions in the docs somewhere
[09:20:42] <velix> oh dear, array_merge() overwrites keys... I am stupid.
[09:20:44] <velix> Thanks a lot.
[09:21:38] <grawity> you can just use the "merge without overwriting" function backwards, no?
[09:22:38] <velix> grawity: Which one? Sorry, just woke up and wanted to write down an idea I had in dream ;D
[09:23:13] <grawity> i.e. array_merge($a, $b) with overwriting, vs ($b + $a) without overwriting
[09:23:26] <grawity> though I don't remember if there are any weird caveats with array+array in PHP
[09:24:01] <velix> grawity: got it. interesting idea.
[09:24:46] <velix> We chould have `egrem_yarra()` ;)
[09:25:04] <grawity> I also expected [...$a, ...$b] to work but it doesn't work with string keys :(
[09:25:12] <grawity> or I guess that's a 8.1 feature?
[09:25:15] <velix> 8.1 yeah
[09:25:28] <velix> They didn't have consense in 8.0
[09:25:30] <CoJaBo> I have only one client that's supporting 8.1
[09:25:41] <CoJaBo> Everything else is 7.2 :/
[09:25:47] <velix> CoJaBo: I'm compatible so far for 8.1, since all my code is 8.0
[09:25:50] <velix> \o/
[09:25:52] <grawity> random thought, does the interpreter accept […$a, …$b] or only the ASCII one
[09:26:08] <CoJaBo> velix: I had to port several apps to 8.1 just for them lol
[09:26:24] <velix> grawity: There have been some security issues about unicode characters in the past (not in PHP)
[09:26:33] <CoJaBo> I would describe the experiance as "not quite as awful as I'd expected".
[09:26:44] <velix> grawity: Those right-to-left stuff and hidden characters messed up some editors and interpreters.
[09:27:25] <skyroveRR> Hey guys, what is the prevailing good practice for storing IP addresses and dates in a non-privacy oriented environment? I mean,  in a privacy-oriented environment, you would convert IP addresses into one time irreversible hash. But  in a non-privacy environment, would ip2long and long2ip suffice? And for dates, time since epoch should suffice?
[09:27:28] <velix> Most of the password protected websites are stripping out those unicode hacks and allow ascii passwords only :(
[09:27:29] *** Joins: overrider (~overrider@user/overrider)
[09:27:47] <grawity> why not just store IP addresses as strings
[09:27:54] <grawity> varchar(63) or something
[09:28:17] <skyroveRR> grawity: that's the prevailing practice?
[09:28:30] <Hash> IPS are unique.
[09:28:34] <Hash> You don't need to hash them.
[09:28:41] <Hash> Store as strings as they are.
[09:28:42] <grawity> I feel like ip2long is how you get into "we can't deploy IPv6 because our webapp crashes if we do"
[09:29:25] <skyroveRR> Ok.
[09:29:43] *** Quits: TheJ0nix (~manjaro-g@p549addea.dip0.t-ipconnect.de) (Ping timeout: 252 seconds)
[09:29:50] <CoJaBo> skyroveRR: Hashing doesn't really protect privacy in IPs either. You can iterate the space easily
[09:30:19] <skyroveRR> CoJaBo: that's what I've heard too.
[09:30:38] <Hash> Because you still need to store somehow the origianl ip in string, hash it, and compare.
[09:30:44] <Hash> Needless IMHO.
[09:31:33] <CoJaBo> Asym encryption works tho if you need it to be secure, e.g., for logging; but that would mean you can't compare it either if your app logic needed it
[09:31:56] <Hash> You can incorporate the symm key from env var
[09:32:06] <Hash> And have the app decrypt data on the fly
[09:32:16] <Hash> If it's just IP stuff, won't be too taxing.
[09:32:21] <CoJaBo> Depends on who you're hiding it from lol
[09:32:25] <grawity> though if you wanted the IP address field to occupy less space than a string, then inet_pton / inet_ntop would be IPv6-compatible (gives you a binary(16) in mysql terms, I think?) but usually that's not necessary
[09:32:26] <Hash> True
[09:32:42] <CoJaBo> Many of our apps need to not leak user data even if the server is pwned.
[09:36:11] *** Joins: tercaL (~tercaL@user/tercal)
[09:36:19] *** Quits: tercaL (~tercaL@user/tercal) (Changing host)
[09:36:19] *** Joins: tercaL (~tercaL@user/deksar)
[09:36:28] <skyroveRR> Well like I mentioned earlier, I intend to store IPs in a non-privacy environment. So was looking for a no-nonsensical way to do it. :)
[09:38:27] *** Joins: freeworld (~vit@chello085216193138.chello.sk)
[09:45:09] *** Quits: Xaldafax (~xaldafax@cpe-198-72-160-101.socal.res.rr.com) (Quit: Bye...)
[09:45:54] <CoJaBo> skyroveRR: Who or what needs to access them once they are stored?
[09:46:05] <TinoDidriksen> Use inet_pton and binary(16). Remember to map IPv4 addresses to the equivalent IPv6 one: https://tinodidriksen.com/2018/02/php-expand-ipv4-to-ipv6/
[09:46:15] <skyroveRR> CoJaBo: Only I need to.
[09:46:59] <BadAdviceCat> CoJaBo, do y'all encrypt email addresses too? O_O
[09:47:11] <skyroveRR> CoJaBo: it's gonna be part of my small hobby project where I provide frontends to common networking utils like ping, traceroute, dig and stuff.
[09:47:25] <CoJaBo> skyroveRR: If it's just for logging, encrypt them with your public key; no compromise of the server could then compromise them. This admittedly may be overkill, but overkill is fun :P
[09:48:11] <skyroveRR> CoJaBo: heh. I don't need too much overkill. PKS is too much :D
[09:48:50] *** Quits: freeworld (~vit@chello085216193138.chello.sk) (Quit: Konversation terminated!)
[09:49:03] <CoJaBo> BadAdviceCat: Sometimes. We also encrypt password hashes in some cases, something that once gave a client's auditor a cerebral infarction =D
[09:49:11] *** Joins: vit (~vit@chello085216193138.chello.sk)
[09:49:23] <CoJaBo> They actually failed the audit for that lol
[09:49:34] *** vit is now known as Guest5351
[09:49:38] <BadAdviceCat> CoJaBo, Then how would y'all go about decrypting email address? How is the decryption key stored (and also, where exactly?)
[09:51:12] <CoJaBo> BadAdviceCat: I don't know if we specifically do that with emails, but we probably could, as at least some of our sites don't even send routine emails.
[09:52:59] <BadAdviceCat> Because it would be nice to notify users a change occurred. Or for something like password reset confirmation.
[09:55:36] <BadAdviceCat> I can only think of a setup that uses 2 servers. Public key in 1, private key in other server. Where the first server sends encrypted content/commands to the second server.
[09:55:57] <BadAdviceCat> First server stores encrypted stuff like email. Then second server does the actual sending of email.
[09:57:05] <CoJaBo> BadAdviceCat: Yeh, in this setup, we could easily send notices via the secure server. Our secure backends are often fully and utterly inaccessible from the frontend. This is a nightmare to code for tho =D
[09:58:58] <BadAdviceCat> As for password hashes, is it really that big of a deal to encrypt? O_O
[09:59:56] <BadAdviceCat> I can only imagine someone using a dictionary word for a password, lol.
[10:00:33] <CoJaBo> BadAdviceCat: I imagine the auditor had a line-item for "[ ] Passwords must NOT be encrypted"
[10:00:41] <CoJaBo> And just followed that blindly lol
[10:00:56] <BadAdviceCat> Nowadays, email services are reasonably secure enough. Where even if the attacker has the correct password/username combination, they still can not login because they are not logging in from a specific device that is authorized.
[10:00:57] <TinoDidriksen> Per-account salted hash is all you need. But yeah, it was probably confused for encrypted plain passwords.
[10:00:58] *** Guest5351 is now known as freeworld
[10:02:09] <BadAdviceCat> I wish more websites would adopt the use of webauthn.
[10:03:47] <CoJaBo> TinoDidriksen: Yeh, we have the salted hash, and then we encrypt it. They failed the audit for that, which was hilarious.
[10:04:01] <BadAdviceCat> I plan to do this sometime in the future: https://paste.gg/p/anonymous/f46dbcffd5164ad2a9f53f41a8321452
[10:10:06] *** Quits: daimbag (~bagdarrel@2607:5300:60:21b::1) (Remote host closed the connection)
[10:24:27] *** Joins: kamesuke42 (~Guest3@fs98a572bc.tkyc202.ap.nuro.jp)
[10:41:10] *** Joins: Northwoods (~Northwood@202.14.122.53)
[10:43:03] *** Quits: guenhael (Thunderbir@gateway/vpn/protonvpn/guenhael) (Ping timeout: 256 seconds)
[10:47:03] *** Joins: onichomp (~onichomp@2806:264:4404:82be:949d:66d5:b6c8:7384)
[10:47:06] *** Quits: kamesuke42 (~Guest3@fs98a572bc.tkyc202.ap.nuro.jp) (Quit: Client closed)
[10:48:54] *** Joins: guenhael (Thunderbir@gateway/vpn/protonvpn/guenhael)
[10:52:33] *** Quits: onichomp (~onichomp@2806:264:4404:82be:949d:66d5:b6c8:7384) (Read error: Connection reset by peer)
[10:54:38] *** Quits: ferdna (~ferdna@user/ferdna) (Quit: Leaving)
[10:56:36] *** Joins: luigibu (~luigi@80.30.201.209)
[10:57:43] *** Quits: guenhael (Thunderbir@gateway/vpn/protonvpn/guenhael) (Ping timeout: 252 seconds)
[10:59:11] *** Joins: guenhael (Thunderbir@gateway/vpn/protonvpn/guenhael)
[11:05:03] *** Joins: luigibu1 (~luigibu@80.30.201.209)
[11:09:18] *** Joins: otisolsen70 (~otisolsen@xd4ed80b5.cust.hiper.dk)
[11:12:56] *** Quits: luigibu1 (~luigibu@80.30.201.209) (Ping timeout: 252 seconds)
[11:14:01] *** Joins: guido (~guido@2001:b07:6455:ac4f:3641:5dff:fe55:2a8f)
[11:17:36] *** Joins: ms49434 (~ms49434@user/ms49434)
[11:20:14] <hans> have a problem with php7.4, this flag combination does not produce a php with DOMDocument, why? pretty sure --with-libxml was supposed to fix that: ./configure --disable-all --disable-cgi --enable-cli --with-curl --with-libxml
[11:20:49] <hans> >Fatal error: Uncaught Error: Class 'DOMDocument' not found
[11:21:40] <hans> the repo was cloned with > git clone -b 'PHP-7.4' --depth 1 https://github.com/php/php-src.git
[11:23:58] *** Joins: tex (~super@user/dix)
[11:24:58] *** Joins: luigibu1 (~luigibu@80.30.201.209)
[11:25:10] *** Joins: Deuchnord (~deuchnord@user/deuchnord)
[11:30:21] *** Quits: luigibu1 (~luigibu@80.30.201.209) (Ping timeout: 252 seconds)
[11:34:32] *** Joins: luigibu1 (~luigibu@80.30.201.209)
[11:35:15] <hans> asked on SO with extra info, https://stackoverflow.com/questions/70195898/how-to-get-domdocument-when-compiling-php7-4-from-source
[11:39:43] *** Quits: luigibu1 (~luigibu@80.30.201.209) (Ping timeout: 256 seconds)
[11:41:13] *** Joins: Naktibalda (~Naktibald@88.135.22.17)
[11:41:14] *** Quits: Hiccup (cHoy@user/hiccup) (Read error: Connection reset by peer)
[11:41:28] *** Quits: mishehu (~mishehu@mira001.eyepeeveesicks.shavedgoats.net) (Ping timeout: 268 seconds)
[11:44:50] *** Quits: stenno (~stenno@user/stenno) (Ping timeout: 252 seconds)
[11:51:42] *** Joins: jeffrey (~jeffrey@2001:1c00:b11:8800:399c:16c5:8a3c:727e)
[11:51:50] *** Joins: mishehu (~mishehu@mira001.eyepeeveesicks.shavedgoats.net)
[11:58:28] *** Joins: DevAntoine (~DevAntoin@pop.92-184-112-3.mobile.abo.orange.fr)
[12:10:44] *** Joins: operateur (~operateur@91.143.220.230)
[12:17:07] *** Quits: mIk3_08 (~Thunderbi@user/mik3-08/x-2852566) (Ping timeout: 256 seconds)
[12:17:38] <skyroveRR> hans: which OS is it?
[12:18:16] <hans> Amazon Linux 2 (i think it's based on some old RHEL)
[12:18:42] <skyroveRR> hans: anything of significance in config.log?
[12:18:44] <hans> An AWS EC2 thing
[12:19:21] <hans> I can't check right now, I'll get back to that within 10 minutes
[12:22:09] *** Joins: stenno (~stenno@user/stenno)
[12:23:01] *** Joins: WishBoy (~WishBoy@user/wishboy)
[12:26:32] <hans> skyroveRR: config.log: https://termbin.com/18i8
[12:27:05] *** Quits: stenno (~stenno@user/stenno) (Ping timeout: 268 seconds)
[12:28:28] <hans> meanwhile on SO: Body is limited to 30000 characters; you entered 628554.
[12:29:10] *** Joins: sudorm (~sudorm@abordeaux-654-1-97-61.w92-162.abo.wanadoo.fr)
[12:29:14] <sudorm> Hi there
[12:29:31] <skyroveRR> hans: ok, the config.log does look fine. libxml2 is picked up.
[12:29:42] <sudorm> Let's say I have /img/abc.jpg and many similar images in this directory
[12:29:59] <hans> sudorm: I have /img/abc.jpg and many similar images in this directory.
[12:30:09] <sudorm> haha :)
[12:30:10] <skyroveRR> lol
[12:30:13] <biberu> hans: did you check if the .so is built?
[12:30:28] <sudorm> Is there a simple PHP way to do this:   /img/abc!100.jpg  automatically serves a 100px-width version of the same image rescaled?
[12:30:32] <hans> biberu: no, but the actual sapi/cli/php is built..
[12:30:48] <sudorm> if already cached, serve it. If not, write the rescaled image to a cache
[12:30:55] <biberu> can you check if the file exists? or search for it in the build log?
[12:31:04] <hans> sudorm: php *can* do that, but often times its easier to just tell CSS to resize it.. are you trying to save loadtime/bandwidth, or just trying to scale the image?
[12:31:15] <sudorm> This would end once for all the burden of "Which size to choose for this image"
[12:31:24] <sudorm> hans, yes saving bandwidth.
[12:31:49] <sudorm> Not only for me, but above all for end user. If the page has only 2000x2000 px photos, it will be slow for them
[12:31:53] <hans> biberu: 0 results for `find -iname "*.so*" ` - what is it supposed to look like?
[12:32:09] <sudorm> hans, so CSS resizing is not really an option here
[12:32:26] <biberu> hans: don't remember, can check in a while
[12:32:46] <sudorm> What I did in the past: I resize to the size "I hoped that it will ok" with Photoshop. But eventually 1 year later, I think: it would be better with a size 20% larger
[12:33:03] <sudorm> so I have to redo the export from the original image with photoshop etc.
[12:33:37] <sudorm> hans: That's why I was thinking: I upload the top quality version 4000x4000 jpg on my server (never served to users! too big, would be too slow!)
[12:34:17] <sudorm> and then on my website I only use /img/abc!1000.jpg    / if 1 year later I prefer 1200px, I just have to change the img src to "abc!1200.jpg". What do you think?
[12:36:41] <skyroveRR> hans: how ancient is this Amazon Linux 2 of yours? RHEL 6? 5?
[12:37:25] <hans> sudorm: try https://paste.debian.net/plain/1221612
[12:38:30] <hans> skyroveRR: dunno, Amazon forked Amazon Linux 2 from RHEL in 2017, thats all i know
[12:38:42] <hans> its a fully up to date "Amazon Linux 2", though
[12:38:46] <skyroveRR> hans: google keeps saying you need php-xml, but since this is a custom compile, few of its suggestions can be heeded heh.
[12:39:07] <sudorm> hans, why do you do it with ffmpeg and not PHP image rescaling functions?   also vf scale=320:240 is for fixed size?
[12:39:07] <skyroveRR> php-xml/php-7.0-xml....
[12:39:13] *** Quits: operateur (~operateur@91.143.220.230) (Ping timeout: 256 seconds)
[12:40:16] <hans> sudorm: i find ffmpeg easier to deal with than the imagegd-or-imagemagick-or-whatever apis, but sure you can use those too if you prefer. and yeah for fixed size.
[12:40:45] <sudorm> ok I'll try this
[12:40:47] <hans> sudorm: you can make a php router that resize the images on demand, but that's way more complex
[12:40:56] *** Quits: jeffrey (~jeffrey@2001:1c00:b11:8800:399c:16c5:8a3c:727e) (Ping timeout: 252 seconds)
[12:40:58] <hans> not to mention, potentially slower..
[12:41:25] <sudorm> hans, i'll do it on demand if not cached yet, and serve the cached file if any
[12:41:52] <biberu> sudorm: careful that you don't leave it open for users to request arbitrary sizes, it can consume a lot of resources for you
[12:42:05] <sudorm> biberu, yes, that's right!
[12:42:15] <sudorm> if someone does abc!1000000000000.jpg lol
[12:42:16] <biberu> sudorm: would e.g. sign or restrict the parameters
[12:42:22] <sudorm> it would crash the server :)
[12:42:43] <biberu> yes, or if somone does foo!1 foo!2 foo!3 foo!... foo!100000000000
[12:43:00] <skyroveRR> sudorm: how many photos per page are you going to display at the most?
[12:43:28] <skyroveRR> Or will it be user-adjustable?
[12:43:49] <skyroveRR> I mean is it an album or just a single page?
[12:44:36] <sudorm> biberu, yes!
[12:44:48] <sudorm> skyroveRR, not user ajdustable
[12:47:34] *** Joins: LucaTM (~LucaTM@user/lucatm)
[12:48:10] *** Joins: operateur (~operateur@91.143.220.230)
[12:50:03] *** Quits: Northwoods (~Northwood@202.14.122.53) (Ping timeout: 256 seconds)
[12:53:02] *** Quits: guenhael (Thunderbir@gateway/vpn/protonvpn/guenhael) (Ping timeout: 252 seconds)
[12:59:17] *** Joins: Northwoods (~Northwood@202.14.122.53)
[13:01:03] *** Joins: stenno (~stenno@user/stenno)
[13:03:44] <sudorm> hans biberu skyroveRR: here is something simple and working: https://paste.debian.net/plain/1221616
[13:03:45] *** Joins: smeeagle (~smeeagle@2a00:23c8:9611:e600:1401:22a5:674e:d69b)
[13:04:11] <sudorm> With .htaccess if the file abc!500.jpg already exists it is served. If not it is redirected to this PHP file which writes it once for all.
[13:04:36] <sudorm> The next time we do the request it will be served from cached file
[13:04:37] *** Joins: Hiccup (cHoy@user/hiccup)
[13:05:10] <sudorm> Do you see some things to improve security-wise?  or to avoid foo!1 foo!2 foo!...!1000000000 things biberu?
[13:07:33] *** Quits: BadAdviceCat (~BadAdvice@user/badadvicecat) (Ping timeout: 256 seconds)
[13:10:10] *** Joins: guenhael (Thunderbir@gateway/vpn/protonvpn/guenhael)
[13:18:29] <TinoDidriksen> Superfluous ?>
[13:19:27] <TinoDidriksen> Does the .htaccess validate that the filename has exactly 1 ! and 1 . ?
[13:19:43] <TinoDidriksen> And the order of ! and .
[13:20:46] <TinoDidriksen> You should not need urldecode() there.
[13:21:37] <biberu> there's no restriction on the sizes that can be requested
[13:21:55] <biberu> you can request invalid sizes
[13:22:20] <biberu> e.g. negative numbers or things that'll just be coerced to a number
[13:23:01] <biberu> you mighr be able to abuse that behavior to force the server to re-render files if urls and generated files don't match
[13:23:16] <biberu> no access checks on the file itself
[13:23:44] <biberu> sudorm ^
[13:24:16] <TinoDidriksen> preg_match() with capture pattern ^([a-z]+)!(\d+)\.([a-z]+)$ would be much stricter.
[13:25:33] <biberu> i'd sign the requests, so that you know the links were generated by a system you trust, that'll prevent anyone from tampering with the parameters while making it easy for you to be flexible in what you want
[13:26:13] <biberu> i'd also just use regular query strings instead of that custom format, then validate those as usual
[13:26:50] <biberu> what if you wanted to extend that with another option? easy with a regular query string
[13:28:22] <biberu> then i'd map the user submitted parameters to something that exactly describes the processing you want, fingerprint that, check if the fingerprint exists in cache, it it does serve that, otherwise generate it
[13:28:48] <sudorm> biberu, TinoDidriksen I was busy posting this in the meantime: https://codereview.stackexchange.com/questions/270607/serve-rescaled-jpg-images-on-demand-with-myphoto500-jpg-syntax-here-500px-widt
[13:29:03] <biberu> there you might also want to handle that *many* users request the same image at once, before it exists in the cache, depending on what kind of site it is you might want to create a queue that ensures no duplicate jobs are processed
[13:29:09] <sudorm> until I saw your answers! Feel free to post them there (if you want)
[13:29:19] <biberu> i'm posting here :)
[13:29:38] <sudorm> thank you for this, your adivce is useful!
[13:30:35] <biberu> then, if there are no special access rights to handle, i'd cache the images in a reverse proxy so that requests for which a result already exist can be served from that, you can do that in e.g. your httpd or tools like varnish
[13:30:57] <sudorm> TinoDidriksen, I did urldecode because of URLs like:     P11402%205_2013(3).jpg
[13:30:58] <biberu> would not reinvent caching in .htaccess, it'll be insufficient and perform poorly
[13:32:18] <sudorm> TinoDidriksen, without urldecode, it would fail to find the file "P11402 5_2013(3).jpg"
[13:32:23] *** Quits: smeeagle (~smeeagle@2a00:23c8:9611:e600:1401:22a5:674e:d69b) (Quit: smeeagle)
[13:32:29] <sudorm> TinoDidriksen, so I think urldecode is required, right?
[13:33:13] <biberu> sudorm: re. the many simultaneous requests issue, that might occur if you e.g. publish a new post on a popular site and a lot of users open the page at the same time, everyone then requests the same image processing jobs, none of which are cached yet, possibly overloading the server
[13:34:00] <sudorm> biberu, if I create a post, I will see it myself at least once and check it's ok before sharing the link
[13:34:00] <TinoDidriksen> Ah, right, $_SERVER is not decoded for you. Only $_REQUEST and the split ones are.
[13:34:42] <sudorm> biberu, so it will be cached once already when other people will see it
[13:35:08] <biberu> that's your call ofc, these are just points that might be worth considering depending on your exact situation :)
[13:36:00] <sudorm> biberu, sure!
[13:36:53] <sudorm> biberu, TinoDidriksen, how would you validate that there is only one ! and one .  and only jpg or JPG or jpeg or JPEG or png or PNG etc.   htaccess? php?
[13:37:10] <biberu> like i said, i wouldn't use that format at all
[13:37:16] <TinoDidriksen> I showed how.
[13:37:39] <sudorm> TinoDidriksen, with the preg_match? where would you do it?
[13:37:50] <biberu> i'd use a query string, e.g. /foo/image.jpg?size=123&signature=abc
[13:37:56] <TinoDidriksen> Why would you allow .JPG? Don't allow upper case suffixes.
[13:39:12] <TinoDidriksen> I would use preg_match() instead of the explodes.
[13:39:55] <biberu> then you load that into an object like {file:image.jpg,size:123}, and check that SIGN(parameters) equals the signature the user provided
[13:41:03] <TinoDidriksen> And I mostly agree that using query params is better, but other tools may get that wrong and it wouldn't show the size in the filename when saving.
[13:41:24] <biberu> you can provide that in a content-disposition header
[13:41:36] <TinoDidriksen> True
[13:41:38] <sudorm> biberu, I initially wanted to avoid query string because:
[13:42:08] <sudorm> if "image.jpg" already exists as a file, it will be simply served as a file (see htaccess here: https://codereview.stackexchange.com/questions/270607/serve-rescaled-jpg-images-on-demand-with-myphoto500-jpg-syntax-here-500px-widt)
[13:42:34] <biberu> yeah, i wouldn't use htaccess for that either
[13:42:38] <sudorm> so "image.jpg?size=123"  would serve the file without passing it to PHP with the current htaccess
[13:42:56] <sudorm> TinoDidriksen > other tools may get that wrong and it wouldn't show the size in the filename when saving.
[13:43:13] *** Joins: guenhael1 (~Thunderbi@193.52.208.98)
[13:43:34] <sudorm> TinoDidriksen, can you give more details? What would be the problem with    image.jpg?size=123 , why wouldn't it get the right size? (file size or image pixel size?)
[13:44:11] <TinoDidriksen> Tools that don't respect Content-Disposition would same them all as image.jpg
[13:44:14] <TinoDidriksen> *save
[13:44:22] <TinoDidriksen> Server would serve the correct size.
[13:45:01] *** Quits: guenhael (Thunderbir@gateway/vpn/protonvpn/guenhael) (Ping timeout: 256 seconds)
[13:45:01] *** guenhael1 is now known as guenhael
[13:46:08] <sudorm> TinoDidriksen, yes I prefer having a real filename so that when we save it, it's image!500.jpg instead of image.jpg?size=500 that would be saved into image.jpg
[13:46:22] <sudorm> and possibly overwrite another version with same size
[13:46:58] <TinoDidriksen> Server would save it as whatever. This is purely a client-side issue, for tools like wget or curl.
[13:47:14] <TinoDidriksen> Also, ! is not a filename safe character.
[13:47:33] <sudorm> TinoDidriksen, yes this is when client want to save, eg. right click Save as
[13:47:44] <sudorm> Why not safe with ! ?
[13:47:51] <biberu> another concern, it looks like you're saving all the cached files to the same directory?
[13:49:27] <biberu> how does your filesystem perform once you have many thousands of files in that dir? you might get to high numbers sooner than you expect with multiple requests per image
[13:49:36] <sudorm> biberu, yes, so that I can do example.com/img/myphoto.jpg   and example.com/img/myphoto!500.jpg  without having to change the dir
[13:51:58] <TinoDidriksen> Request and actual location don't have to match.
[13:52:03] <biberu> as a simple alternative you could e.g. hash the parameters and use prefixes from that to find it on disk, e.g. file.jpg => 91a721b7244245b40e368346edc97c311439a0260e4d51f60023eb1bc86d7238 => 91/a7/21/..., or use some dedicated storage for this
[13:53:21] <sudorm> TinoDidriksen, that's right, but I wanted to start with a KISS version, because it's for a small website with < 100 images
[13:53:31] <sudorm> with no user-submitted content, all images are mine
[13:53:47] <sudorm> biberu, right for a bigger website it would be a good solution indeed
[13:53:47] <biberu> note that htaccess prevents you from getting clever with e.g. caching
[13:53:59] <sudorm> biberu, what do you mean?
[13:54:10] <biberu> how would you do the step i just described with htaccess?
[13:54:31] <biberu> how would you serve previous responses from memory instead of disk?
[13:54:50] *** Joins: Atlas (~atlas@user/atlas)
[13:54:59] <biberu> it'll hamper both your performance and ability to implement proper solutions
[13:55:49] <sudorm> biberu, yes that's right. I would need to go away from a htaccess solution for this
[13:56:29] <sudorm> but about memory caching: if myimage!500.jpg is often served as a file from apache, it will be kept in OS disk cache, won't it?
[13:56:43] <sudorm> or would it read it from disk, each time?
[13:58:02] <biberu> your os and/or disk might be able to help with that, but if you used a reverse proxy instead you'd be in control of it
[13:58:52] <biberu> apache has e.g. mod_cache, there's also tools like varnish
[14:03:01] *** Quits: guenhael (~Thunderbi@193.52.208.98) (Remote host closed the connection)
[14:03:34] *** Joins: guenhael (~Thunderbi@193.52.208.98)
[14:13:17] *** Quits: otisolsen70 (~otisolsen@xd4ed80b5.cust.hiper.dk) (Ping timeout: 256 seconds)
[14:18:21] *** Joins: jeffrey (~jeffrey@145.107.161.215)
[14:21:03] *** Joins: g0d0h932 (~doe@184-75-138-166.resi.cgocable.ca)
[14:21:33] <g0d0h932> hi
[14:22:43] <g0d0h932> damn.. maybe this is covid related.. who knows.. this dude uses a RF scanner and finds bio tech scanning himself https://www.youtube.com/watch?v=E1ZqRhe4lZE
[14:22:53] <g0d0h932> oups sorry wrong chan
[14:22:56] *** Quits: g0d0h932 (~doe@184-75-138-166.resi.cgocable.ca) (K-Lined)
[14:29:58] *** Quits: DevAntoine (~DevAntoin@pop.92-184-112-3.mobile.abo.orange.fr) (Remote host closed the connection)
[14:30:23] *** Quits: sudorm (~sudorm@abordeaux-654-1-97-61.w92-162.abo.wanadoo.fr) (Ping timeout: 252 seconds)
[14:30:33] *** Joins: DevAntoine (~DevAntoin@pop.92-184-112-3.mobile.abo.orange.fr)
[14:34:49] *** Quits: DevAntoine (~DevAntoin@pop.92-184-112-3.mobile.abo.orange.fr) (Ping timeout: 256 seconds)
[14:55:49] *** Joins: chazy (~chazy@85.31.134.174)
[14:58:16] *** Joins: mIk3_08 (~Thunderbi@user/mik3-08/x-2852566)
[15:02:29] *** Quits: Hiccup (cHoy@user/hiccup) (Remote host closed the connection)
[15:05:13] *** Quits: Deuchnord (~deuchnord@user/deuchnord) (Ping timeout: 252 seconds)
[15:08:20] *** Quits: jeffrey (~jeffrey@145.107.161.215) (Quit: Client quit)
[15:08:53] *** Quits: guenhael (~Thunderbi@193.52.208.98) (Ping timeout: 252 seconds)
[15:11:29] <TinoDidriksen> I recommend mode +b $a:g0g0do for that spambot. It's also hit other channels and networks.
[15:20:15] *** Quits: WishBoy (~WishBoy@user/wishboy) ()
[15:21:12] *** Joins: svartoyg (~fenris@dynamic-078-055-057-105.78.55.pool.telefonica.de)
[15:23:30] <svartoyg> greetings. in CGI mode, when returning a file (offering a download), as described at https://stackoverflow.com/questions/6175533/how-to-return-a-file-in-php, it seems PHP prepends a line feed character (x0A) to the body or at least the client always adds it. any ideas what could be the problem?
[15:24:24] *** Quits: guido (~guido@2001:b07:6455:ac4f:3641:5dff:fe55:2a8f) (Quit: WeeChat 3.3)
[15:24:34] *** Joins: guenhael (~Thunderbi@aaubervilliers-652-1-290-168.w82-121.abo.wanadoo.fr)
[15:24:41] *** Quits: Northwoods (~Northwood@202.14.122.53) (Ping timeout: 256 seconds)
[15:25:05] <Byteflux> svartoyg: Perhaps you have a LF before your opening <?php tag.
[15:25:23] <Byteflux> Or after your closing ?> tag if you use one.
[15:25:55] <Naktibalda> who uses CGI mode?
[15:27:08] <Naktibalda> if your code include some other files, they could have linebreak outside php tags too
[15:27:17] <svartoyg> i meant: in contrast do using PHP on the command line
[15:27:36] <svartoyg> yeah, that sounds like it could be the problem. let me check …
[15:27:44] <Byteflux> I'm assuming when you say CGI, you really mean FastCGI, in particular with PHP FPM
[15:27:53] <Byteflux> Plain CGI would be... concerning
[15:28:08] <chazy> how do i get the current date and time in UTC? i'm trying to use setTimezone() and new DateTimeZone() but it's not working when i want to use diff()
[15:28:28] <Naktibalda> !+gmdate
[15:28:29] <php-bot> string gmdate(string format [, long timestamp]) - Format a GMT date/time - http://php.net/gmdate
[15:29:03] <jwpapi> <?php if(function_exists('jw_isRmbInOrderInCheckout') && jw_isRmbInOrderInCheckout($order)) : ?>
[15:29:24] <jwpapi> This way my program won’t break if the function doesn’t exist right?
[15:29:38] <Naktibalda> jwpapi: that's right
[15:29:52] <jwpapi> is it an accepted way to do that Naktibalda ?
[15:30:26] <Naktibalda> using functions much isn't the best way
[15:31:22] *** Joins: vonStinger (ceres@gateway/vpn/protonvpn/vonstinger)
[15:31:45] <svartoyg> Byteflux: Naktibalda: that was the reason indeed… thx!
[15:31:46] <Naktibalda> but there is nothing wrong with using function_exists or method_exists
[15:33:55] <Byteflux> chazy: A UNIX timestamp is by definition in UTC.
[15:34:36] *** Joins: DevAntoine (~DevAntoin@pop.92-184-112-181.mobile.abo.orange.fr)
[15:34:47] *** Joins: Deuchnord (~deuchnord@user/deuchnord)
[15:44:07] *** Quits: fjmorazan (~quassel@user/fjmorazan) (Quit: fjmorazan)
[15:44:44] *** Joins: fjmorazan (~quassel@user/fjmorazan)
[15:46:45] *** Joins: sudorm (~sudorm@abordeaux-654-1-97-61.w92-162.abo.wanadoo.fr)
[15:53:35] *** Joins: stefan_ (~vistefan@185.63.217.124)
[15:54:13] *** Quits: guenhael (~Thunderbi@aaubervilliers-652-1-290-168.w82-121.abo.wanadoo.fr) (Ping timeout: 256 seconds)
[15:54:39] <stefan_> Hi! I'm trying to do `composer update` with latest composer and see this
[15:54:48] <stefan_>  [Composer\Downloader\TransportException]
[15:54:48] <stefan_>   curl error 60 while downloading https://asset-packagist.org/packages.json: SSL certificate problem: certificate has expired
[15:55:54] *** Quits: sudorm (~sudorm@abordeaux-654-1-97-61.w92-162.abo.wanadoo.fr) (Quit: Leaving)
[15:56:09] <Naktibalda> stefan_: what's the date on your computer?
[15:57:05] <TinoDidriksen> It may be you're on a distro with an old ca_certificates package that doesn't know LE's new root.
[15:57:25] <stefan_> Naktibalda: it is runned in docker, docker container gives this:
[15:57:27] <stefan_> Thu Dec  2 12:26:28 UTC 2021
[15:57:53] <TinoDidriksen> What distro?
[15:57:53] <biberu> stefan: what distro are you running in the container?
[15:58:46] <stefan_> this is FROM php:7-fpm-jessie, so debian i think
[15:58:55] <biberu> did you install ca-certificates?
[15:59:12] <TinoDidriksen> Jessie? That's EOL
[15:59:14] <Naktibalda> do you get an error if you run  curl -v https://asset-packagist.org/packages.json ?
[15:59:16] <biberu> and jessie is old
[15:59:58] <Byteflux> It is indeed using LE and that probably is LE's new root
[16:00:07] <TinoDidriksen> Jessie is Debian 8. Oldest Debian you should be using is Buster (10).
[16:00:19] <biberu> for context jessie is from 2015
[16:00:40] <stefan_> no, i never installed ca-certs
[16:00:58] <stefan_> root@php-fpm:/var/www/html# curl -v https://asset-packagist.org/packages.json
[16:00:58] <stefan_> * Hostname was NOT found in DNS cache
[16:00:58] <stefan_> *   Trying 185.162.86.36...
[16:00:58] <stefan_> * Connected to asset-packagist.org (185.162.86.36) port 443 (#0)
[16:00:58] <stefan_> * successfully set certificate verify locations:
[16:00:58] <php-bot> Muting stefan_ for 20 seconds to prevent them from flooding
[16:00:59] <stefan_> *   CAfile: none
[16:01:01] <stefan_>   CApath: /etc/ssl/certs
[16:01:03] <stefan_> * SSLv3, TLS handshake, Client hello (1):
[16:01:05] <stefan_> * SSLv3, TLS handshake, Server hello (2):
[16:01:07] <stefan_> * SSLv3, TLS handshake, CERT (11):
[16:01:09] <stefan_> * SSLv3, TLS alert, Server hello (2):
[16:01:11] <stefan_> * SSL certificate problem: certificate has expired
[16:01:13] <stefan_> * Closing connection 0
[16:01:14] <TinoDidriksen> Don't paste into the channel...
[16:01:15] <stefan_> * SSLv3, TLS alert, Client hello (1):
[16:01:17] <stefan_> curl: (60) SSL certificate problem: certificate has expired
[16:01:19] <stefan_> More details here: http://curl.haxx.se/docs/sslcerts.html
[16:01:20] <biberu> oh my
[16:01:21] <stefan_> sorry
[16:01:42] <TinoDidriksen> You're using an unsupported base distro. Upgrade.
[16:02:02] <biberu> it's good to do that once every 7 (!) years or so ;)
[16:03:26] <Byteflux> Indeed, the answer is simple. FROM php:7-fpm-jessie -> FROM php:7-fpm-bullseye, or better yet, if you are locking your version, it should be php:7.4-fpm-bullseye for best practices.
[16:04:20] <biberu> if the os is that old the code might not have been tested on 7.4
[16:04:27] <biberu> stefan_: what php version are you actually running?
[16:04:33] <stefan_> biberu: 7
[16:04:36] <Byteflux> '7' should be pointing to 7.4
[16:04:37] <biberu> 7 what?
[16:04:50] <biberu> Byteflux: now yes, but it may have been something else before
[16:05:03] <biberu> Byteflux: tags change, better to use specific ones
[16:05:08] <Byteflux> Possibly, yes. Depending on how old the image is.
[16:05:18] <Byteflux> But yes that was exactly my point, of course. You should be locking to the specific minor version
[16:05:24] <biberu> yeah
[16:05:29] <Byteflux> Whether that's 7.4 or 7.3 or whatever. Not just '7'
[16:06:09] <stefan_> I'm just don't feel good to use any docker images for php-fpm from other vendors nor official php dockerhub
[16:06:29] <stefan_> so i dound tag called php-7-fpm-bullseye, trying to deploy
[16:06:41] <Byteflux> Well, we're talking about the official Docker images for PHP
[16:06:49] <biberu> stefan_: https://hub.docker.com/_/php?tab=tags
[16:07:06] <Byteflux> You should find out what version of 7 you are actually using and specify the exact minor version such as 7.4, 7.3, 7.2 or whatever.
[16:07:33] <Byteflux> Since there can be compatibility issues between different releases of PHP 7.
[16:07:57] <stefan_> even in minor versions? 0_o
[16:08:07] <TinoDidriksen> Yes
[16:08:12] *** Parts: svartoyg (~fenris@dynamic-078-055-057-105.78.55.pool.telefonica.de) ()
[16:08:17] <stefan_> fantastic. Is this one up to date? versions? 0_o
[16:08:27] <stefan_> https://hub.docker.com/layers/php/library/php/7.4-fpm-bullseye/images/sha256-0b2a118376d7b5209cbc48546c181c603cd2411424ea903e4521fdad8404342f?context=explore
[16:08:31] <TinoDidriksen> Only patch release promise they won't break anything.
[16:08:33] <biberu> stefan_: yes, features can be added in minor versions, you might inadvertently start relying on something new, or be unable to reproduce bugs, and break prod because of it
[16:08:38] *** Joins: smeeagle (~smeeagle@2a00:23c8:9611:e600:2446:13de:20ec:764f)
[16:08:56] *** Joins: pmercado_ (~pmercado@186.107.61.96)
[16:09:47] <Byteflux> The way the tags work for the official image (and with a lot, if not most images in general) is that for example 7 points to the latest stable release of 7.x (in PHP's case, that's 7.4), and 7.4 points to the latest stable release of 7.4.x.
[16:09:51] <biberu> docker run --rm php:7-fpm-jessie -version says 7.1.12 for that image right now
[16:10:26] <biberu> for docker run --rm php:7-fpm-bullseye -version it's 7.4
[16:10:28] <stefan_> well, I user 7.4-fpm-bullseye
[16:10:36] <Byteflux> The jessie image probably hasn't been part of the builds for a long time now, I guess.
[16:10:41] <biberu> probably
[16:10:49] <TinoDidriksen> One should hope so.
[16:11:02] <biberu> stefan_: note that your php version changed now
[16:12:13] <Byteflux> Looks like the oldest maintained version in the official images is 7.3
[16:14:25] *** Quits: fahrradToken (~fahrradTo@2a02:810b:149f:f0f4::c481) (Remote host closed the connection)
[16:15:48] <stefan_> should docker-php-ext-install script work in this image (7.4-fpm-bullseye)? Looks like I don't have deps
[16:16:22] <stefan_> libzip is required, and googling for debian bullseye libzip gave libzip4 package name, but istalling it didn't fixed the trouble
[16:16:55] <TinoDidriksen> For building you need the -dev packages.
[16:17:23] <TinoDidriksen> But I actually assume it's not building. Just install the php-zip package?
[16:18:36] <TinoDidriksen> Hm, I have no idea how the official PHP images are constructed. They seem so superfluous when Debian has everything you need as proper packages.
[16:19:43] *** Quits: vonStinger (ceres@gateway/vpn/protonvpn/vonstinger) (Ping timeout: 256 seconds)
[16:20:00] <stefan_> official images builds manually and have script for bundling extensionf from sources, but their requirements should be manually satisfied
[16:20:21] <TinoDidriksen> What a weird mix.
[16:20:27] <biberu> note that "offical" doesn't mean maintained and published by the php team btw
[16:20:44] <TinoDidriksen> Anyway, you want libzip-dev
[16:20:44] <remolej> anyone uses sessions without ext-session? why cant I just generate unique cookie token and store in redis myself - why do i need ext-session?
[16:20:50] <biberu> the php one is maintained by the community
[16:20:50] <stefan_> well, who publishes php images on dockerhub? Not php team?
[16:20:57] <biberu> no, they don't
[16:21:09] <biberu> https://hub.docker.com/_/php
[16:21:10] <TinoDidriksen> remolej, you can do that.
[16:21:21] <biberu> it says so right there
[16:21:29] *** Joins: vonStinger (ceres@gateway/vpn/protonvpn/vonstinger)
[16:21:48] <TinoDidriksen> remolej, ext-session will automatically manage $_SESSION, but if you just want to do things yourself then there's nothing magic about session storage or cookies.
[16:22:04] <biberu> stefan_: you need to decide if you trust the publishers, same as with any other image you find on docker hub, or with package management in general
[16:22:54] <stefan_> biberu: sure
[16:22:54] <TinoDidriksen> If the Docker image isn't even by PHP, then why would anyone bother with it over plain Debian? Weird stuff.
[16:22:58] <remolej> TinoDidriksen yeah - its just $_SESSION doesnt play well with openswoole/swoole - so im looking into better ways... Probably just gonna setup  a middleware for that
[16:23:22] <stefan_> TinoDidriksen: official debian repo doesn't have needed versions of php
[16:23:31] <biberu> TinoDidriksen: speed, i guess, i don't use them
[16:23:59] <TinoDidriksen> Debian 11 has 7.4.
[16:24:30] <biberu> that's several versions behind
[16:24:30] <stefan_> TinoDidriksen: no diea then, but I see in log it builds froum source, if i'm not wrong
[16:25:07] <TinoDidriksen> And if one wants specific versions, there's the unofficial but still same person repo.
[16:25:16] <TinoDidriksen> No need to build from source.
[16:26:22] *** Joins: guenhael (~Thunderbi@193.52.208.98)
[16:27:29] <stefan_> thank you, guys, that helped to make composer work
[16:27:39] <stefan_> very supportive community, respect
[16:27:58] <stefan_> Sadly, libera.chat still don't have a bridge to matrix
[16:28:56] <TinoDidriksen> Yes it does.
[16:29:54] <stefan_> how to pass nickserv then?
[16:30:17] <velix> ljharb: Are you here?
[16:30:19] <TinoDidriksen> https://libera.chat/guides/faq#can-i-connect-with-matrix
[16:32:49] <velix> Our new frontend developer is sending "multipart/form-data" via POST with multiple times the same name (abc=1, abc=2 etc.). Since this might be valid, PHP can't get along with it. "php://input" isn't working here, since this isn't set for "multipart/form-data". Anyone with a magic solution here? I told him just to send an array (abc[]=1, abc[]=2), but he doesn't want to, since he says, it's valid for POST.
[16:33:45] <Naktibalda> replace frontend developer
[16:33:49] <biberu> sounds like a team player
[16:33:54] *** Joins: kerouac (~kerouacma@2001:470:69fc:105::4e36)
[16:34:37] *** Joins: guido (~guido@host-82-51-187-207.retail.telecomitalia.it)
[16:34:55] <TinoDidriksen> While strictly valid, tell him to send what you need instead of what he wants.
[16:36:21] <velix> Naktibalda: I tried, either he's read-only or I don't have permissions.
[16:36:24] <TinoDidriksen> Just because it's valid POST doesn't make it a valid payload for your backend. Lots of things are valid POST but won't make any sense to anyone.
[16:36:40] <velix> TinoDidriksen: I told him to send an array. He says: PHP is cut down Perl. Don't use it.
[16:36:50] *** Quits: kerouac (~kerouacma@2001:470:69fc:105::4e36) (Quit: Reconnecting)
[16:37:26] <velix> "PHP is crippled Perl" fits better (sorry, I'm not native).
[16:37:42] <Naktibalda> make him send JSON :)
[16:37:57] <velix> Naktibalda: Guess what was the first thing I told him when he started working for us 2 months ago.
[16:38:05] <velix> Naktibalda: I told him: JUST SEND ME JSON!
[16:38:13] <velix> All the encoding problems etc. gone.
[16:38:41] <velix> Then he suddenly started with crazy POST stuff and now that ;)
[16:38:50] <biberu> velix: tell us again why you're using this guy
[16:39:09] <velix> biberu: True reason?
[16:39:26] <biberu> well, i was joking, but this sounds like story time
[16:40:34] <velix> biberu: The professor hired him because he was cheap.
[16:40:42] <velix> Don't ask, please.
[16:40:44] <velix> please.
[16:41:06] <velix> But I'm curious: Is there really no way for PHP to parse this "valid input"?
[16:41:26] <velix> That's the only limitation I'm having with PHP for ~ 19 years now :D
[16:41:50] <biberu> you could parse the input stream manually, there might be some package for it, but you shouldn't have to if you all just played nicely with each other
[16:42:26] <biberu> whatever money your professor is saving on him is now costing him extra here
[16:42:45] <velix> biberu: But how? php://input doesn't get it.
[16:42:48] *** Quits: stefan_ (~vistefan@185.63.217.124) (Quit: Leaving)
[16:42:53] <velix> Is there another way of raw capturing?
[16:43:18] <biberu> hm, i might be mistaken, don't know then, it's been a while since i did php
[16:43:32] <__adrian> velix: trying to understand your situation - php://input always exists
[16:43:39] <velix> __adrian: Not according to docs.
[16:43:44] <AllenJB> Handling of duplicate field names in multipart form data is undefined: https://datatracker.ietf.org/doc/html/rfc2388#section-5.5
[16:44:05] <velix> __adrian: php://input isn't set with "multipart/form-data"
[16:44:07] <__adrian> well, for http requests
[16:44:15] <__adrian> "set with" ?
[16:44:22] <velix> sorry, I'm not native.
[16:44:35] <velix> When sending HTML forms with encoding "multipart/form-data", php/input is empty.
[16:44:50] <velix> AllenJB: Interesting. I tried to find this, thanks.
[16:45:50] <velix> __adrian: php://input is a read-only stream that allows you to read raw data from the request body. php://input is not available with enctype="multipart/form-data".
[16:45:51] <__adrian> hm. interesting.
[16:46:00] <__adrian> i don't see why that would be, but ...so it says
[16:46:17] *** Quits: Miles8of9 (~obrien@93-34-146-223.ip50.fastwebnet.it) (Ping timeout: 256 seconds)
[16:46:18] <velix> __adrian: Yeah, I also was like this  ->  :o
[16:46:34] <__adrian> have you tried php://stdin ?
[16:46:46] <velix> for php-fpm? no. let me try.
[16:49:21] <velix> __adrian: empty string :(
[16:49:33] <biberu> i guess you'll have to use perl then
[16:49:46] <biberu> just rewrite the entire backend and tell the professor how much money he'll save now
[16:50:08] *** Joins: kerouac (~kerouac@2001:470:69fc:105::4e36)
[16:51:35] <velix> ;)
[16:52:24] <velix> But I'm really interested why this is limited in PHP. Just because it's undefined. I'll go through code + mailinglist. Just because I'm interested :D
[16:52:55] <biberu> yeah, it's interesting
[16:53:51] <kerouac> <velix> "TinoDidriksen: I told him to..." <- I barely believe you could work on the same project. Do you have an employer? Tell him
[16:53:55] <__adrian> php doesn't use duplicate names because it already has another syntax for arrays (which, btw, is also valid for the spec, and is _not_ reliant on undefined behavior).
[16:54:18] <__adrian> and i'm pretty sure dup keys work, they just overwrite each other like any other repeat assignment in php
[16:54:27] <velix> __adrian: That's what I told him. I changed his code then to send 'abc[]' and it worked immediately.
[16:54:32] <velix> He got angry and changed it back.
[16:54:44] <biberu> lol
[16:54:54] <biberu> is your professor actually a kindergarten teacher?
[16:55:06] <velix> biberu: Nah, but doesn't have a clue about programming.
[16:55:20] <velix> biberu: I went to toilet then and didn't return to the work computer ;)
[16:55:23] <biberu> i mean the social interactions are just...
[16:55:30] <__adrian> just poking around a bit, i'm guessing php://input isn't available because there's an expectation that it's mixed with binary data (file uploads).
[16:55:55] <__adrian> which... not really an issue, but suppose it's an explanation
[16:55:57] <kerouac> velix: can you see this duplicating headers in raw request?
[16:56:36] <velix> kerouac: Sure, I also can reproduce it in curl. But I cannot see them from PHP.
[16:57:09] <velix> __adrian: I'd expect a logic here to split the mixed data into an array? Just guessing ;)
[16:57:23] <__adrian> ah... nope. it's because php://input is read-once.
[16:58:32] <__adrian> hack hinted here: https://bugs.php.net/bug.php?id=74611
[16:59:01] <__adrian> see the comment by requinix. don't know what other implications this would have, though.
[17:01:12] <biberu> if we're not considering sane solutions (i.e. send it in a format that php understands) you could run it through a proxy that either reformats the body or replaces the content type header
[17:01:35] <__adrian> better ^
[17:02:32] <velix> meeeh :D
[17:03:22] <AllenJB> Note that you can't blindly replace all multipart forms w/ non-multipart (url-encoded) - multipart forms are required for file uploads
[17:04:02] <biberu> and it's extra infrastructure that you have to deploy and maintain
[17:04:20] <velix> I'll just keep on hating him.
[17:04:49] <biberu> negotiate
[17:05:08] <kerouac> velix: just use Perl )
[17:06:42] <AllenJB> You could try to discuss it as a problem solving exercise: "Here's what I'd need to do to work around this from my end. What's the limitation on solving it on your end? Maybe we can solve that problem more easily"
[17:07:28] <biberu> he might just be feeling insecure or threatened or something, maybe you can get him to see your side of the situation
[17:07:43] <velix> AllenJB: Sure, I tried this. I told him: Just send me an array because it's not possible to process in PHP.
[17:08:07] <velix> AllenJB: But then he started to complain about PHP.
[17:08:33] <biberu> "php! don't know! scary! response: taunt and humiliate!"
[17:09:46] <AllenJB> My response to that might be "well PHP is what we use here, and have used since long before your time. Sometimes you have to learn how to work with other tech / languages / libraries in your work life"
[17:11:24] <vonStinger> in our team, our frontend developers would not care a bit: whatever the back-end needs...
[17:12:02] <velix> AllenJB: yeah.
[17:12:15] <Byteflux> That is most teams, but I don't think we're talking about a professional team here. People who complain on the job and disrupt productivity don't typically last very long in this career.
[17:12:41] <velix> Byteflux: he NEVER worked in a team before. He doesn't like git.
[17:12:59] <velix> It's so annyoing to force him to push his changes.
[17:13:20] <velix> and often, he didn't even commit his local changes.
[17:13:30] <velix> So for 2 weeks, there's no progress in git.
[17:13:30] <biberu> velix: is he making those kinds of responses about git too?
[17:13:42] <velix> biberu: true answer?
[17:13:48] <velix> biberu: Get popcorn first.
[17:13:52] <biberu> i'm not sure it's helpful otherwise
[17:14:06] <Byteflux> I work with awful code everyday, like it's really bad. The one thing I don't do is complain about how awful it is.
[17:14:16] <velix> biberu: He says, git is blocking his creativity.
[17:14:48] <biberu> velix: definitely sounds like he's feeling insecure to me
[17:15:02] <velix> biberu: And he is embarrassed when others see his intermediate steps or comments.
[17:15:18] <vonStinger> i would discuss this your superiour/manager as he seems unfit for the job
[17:15:32] <velix> vonStinger: I did on the 3rd day of his work ;)
[17:15:44] <biberu> velix: if he admitted that php or git were useful tools he'd also have to face that he isn't familiar with them, and that might be hard for some people, especially when they're on a new job surrounded by people they don't know
[17:15:56] <vonStinger> Wondering then how he got hired :)
[17:16:07] <velix> vonStinger: $$$
[17:16:08] <paladox> Hi, i'm wondering if anyone can tell me how i can debug why php 7.4 OOM? It doesn't happen with php 7.3 so i'm finding this strange.
[17:16:09] <biberu> velix: it might work to just build some trust
[17:16:31] <Byteflux> Professionalism is like 90% about soft skills, not hard skills. Doesn't even matter how good or bad your technical skills are.
[17:16:38] <biberu> velix: take him out for a beer or whatever you do where you are?
[17:16:45] <velix> biberu: he said, he's into web app developing for xx years...
[17:16:52] <Byteflux> As long as the person had the right attitude and capable of learning, most of the time they could fit into the role.
[17:16:59] <biberu> velix: sure, boosting is own self esteem
[17:17:12] <biberu> velix: that sounds like insecurity too
[17:17:16] <velix> biberu: doesn't work. we've never met in person and university office is closed because of covid.
[17:17:18] <velix> biberu: Germany here.
[17:17:23] <biberu> bier then
[17:17:32] <velix> biberu: I've a brand new SSD on my desk... I'm not allowed to enter my office :D
[17:17:48] <biberu> anyway, i'd look for social solutions
[17:17:49] <velix> and there's some coke in the freezer :(
[17:17:53] <Naktibalda> paladox: Do you mean that your PHP process is killed by operatin system?
[17:17:59] <paladox> yeh
[17:18:02] <velix> biberu: Actually, I don't really want to have to do anything with him. But I can try.
[17:18:19] <paladox> i can see it's using more memory then php7.3 did in systemd (and also can see it in grafana)
[17:18:19] *** Parts: vonStinger (ceres@gateway/vpn/protonvpn/vonstinger) (WeeChat 3.3)
[17:18:21] <velix> biberu: I've got relationships to all other workers. But he's a veeer annoying person.
[17:18:30] <velix> Oh, let's stop offtopic ;)
[17:18:30] <biberu> velix: sure, that's understandable, but a working relationship might be easiest for both of you
[17:18:41] <paladox> happens with MediaWiki
[17:18:52] <velix> to all: Thanks for help debugging the PHP problem. Now I need to debug the social problem
[17:19:13] <biberu> welcome to psychologists helping psychologists
[17:19:39] <paladox> https://usercontent.irccloud-cdn.com/file/EEEXqV7O/Screenshot%202021-12-02%20at%2013.49.11.png
[17:22:25] *** Quits: LucaTM (~LucaTM@user/lucatm) (Ping timeout: 265 seconds)
[17:24:11] <arash> Hello, What is the best way to add a excel file to mysql?
[17:24:32] *** l-x_ is now known as l-x
[17:24:47] *** Joins: LucaTM (~LucaTM@user/lucatm)
[17:27:17] *** Quits: mIk3_08 (~Thunderbi@user/mik3-08/x-2852566) (Quit: mIk3_08)
[17:37:05] *** Joins: DaNeenjah (~jake@adsl-74-230-8-177.hsv.bellsouth.net)
[17:51:05] <Naktibalda> arash: store it in a BLOB field?
[17:51:40] <AllenJB> arash: Assuming you want to import the rows into MySQL so you can work with them there you'd need to create a script that reads in the file and then runs the SQL queries to insert / update rows.
[17:51:41] <AllenJB> There are libraries for both reading Excel files, or often it's simpler to export from Excel in CSV format, then have the script handle that (this is also more flexible in allowing files from tools other than Excel)
[17:58:33] *** Joins: Simplar (~quassel@188.163.93.76)
[18:12:29] *** Quits: tercaL (~tercaL@user/deksar) (Quit: enter the Tekken!)
[18:15:04] *** Quits: stkrdknmibalz (~test@rrcs-75-87-43-226.sw.biz.rr.com) (Quit: WeeChat 3.0.1)
[18:18:22] *** Joins: Xaldafax (~xaldafax@cpe-198-72-160-101.socal.res.rr.com)
[18:27:40] *** Joins: junktext_ (~junktext@gateway/vpn/pia/junktext)
[18:28:32] *** Quits: junktext__ (~junktext@gateway/vpn/pia/junktext) (Remote host closed the connection)
[18:29:09] <arash> I'm using PDO exec method to load a csv into mysql, the problem is it added only 1 line of csv to mysql. I tried \r\n and \\r\\n and \n as line terminator, but it didn't fix the problem. here is the code https://0bin.net/paste/S-fg9JBr#R1gbbQS96Jnc43ihlcw8IkOVzmFvVGaYxIrRI72rk8z
[18:30:06] <arash> any idea how to solve it? I think the problem is with line terminator, I open csv file via notepad++ and it look likes lines terminated by \r\n
[18:32:47] <Naktibalda> ask #mysql about LOAD DATA statement, but print it after and don't show any PHP code
[18:33:22] <Naktibalda> print it first :)
[18:36:21] *** Joins: thiras (~thiras@user/thiras)
[18:38:12] *** Quits: thiras (~thiras@user/thiras) (Remote host closed the connection)
[18:38:31] *** Joins: thiras (~thiras@user/thiras)
[18:39:33] *** Joins: smallfoot- (~smallfoot@user/smallfoot-)
[18:40:13] <smallfoot-> Is there any benefit or advantage over using str_split($string, 10) over str_split($string) ?
[18:42:06] <biberu> smallfoot-: do you need chunks of up to that length?
[18:43:45] <TinoDidriksen> Why are you splitting the string in the first place?
[18:44:40] <Naktibalda> are you asking about benefit of 10 byte strings over 1 byte strings?
[18:48:27] <smallfoot-> biberu, well, I am fine with maybe splitting just 10 or 20 times, I don't need split it 9999999 times
[18:48:50] <biberu> not following
[18:49:08] <smallfoot-> TinoDidriksen, because i have a space-separated string, and need to check if certain word is inside that string
[18:49:55] <smallfoot-> Naktibalda, no, I am asking if there is any performance benefit or security/safety benefit of explicitly declaring a limit to the number of times a string gets split
[18:50:03] <biberu> it sounds like you were looking for explode(), but maybe actually want strpos?
[18:50:05] <TinoDidriksen> str_split() will split in the middle of words based on bye offsets, so I don't see how that has any utility wrt. space separation.
[18:50:10] <TinoDidriksen> *byte
[18:50:13] *** Joins: vonStinger (ceres@gateway/vpn/protonvpn/vonstinger)
[18:50:22] <TinoDidriksen> Yeah, sounds like you want explode() or preg_split()
[18:50:55] <biberu> except you don't actually need to split it into an array to check if the word is there
[18:51:25] <stenno> str_contains should be enough here
[18:51:41] <stenno> hmm
[18:51:53] <biberu> on its own it might find words that are part of others
[18:52:23] <biberu> but you could look for " foo " (note space) if you pad the ends
[18:52:27] <TinoDidriksen> Or preg_match() with \b\Q$word\E\b and modifiers u and possibly i
[18:52:37] <Naktibalda> smallfoot-: str_split doesn't take a number of chunks, it takes a length of chunk
[18:52:39] <stenno> yeah preg_match sounds more sensible here
[18:52:43] <Naktibalda> !+str_split
[18:52:44] <php-bot> array str_split(string str [, int split_length])  - Convert a string to an array. If split_length is specified, break the string down into chunks each split_length characters long. - http://php.net/str_split
[18:53:09] <stenno> str_contains with " foo " wont work if foo is first or last word
[18:53:22] <biberu> that's why you need to pad it
[18:54:03] <biberu> anyway, plenty of ways to do this, just not str_split
[18:54:23] <stenno> preg_match must be the 'best' answer here
[18:55:04] <stenno> i assume you can do (negative) lookahead/lookbehind just fine?
[18:55:15] <stenno> yep
[18:55:35] <TinoDidriksen> \b is already a word boundary.
[18:55:54] *** Joins: Northwoods (~Northwood@202.14.122.53)
[18:56:08] <biberu> can the words include other boundary characters?
[18:56:11] *** Joins: junktext__ (~junktext@gateway/vpn/pia/junktext)
[18:56:28] <stenno> what \Q ?
[18:56:29] <TinoDidriksen> Can use (?:^|\s)\Q$word\E(?:\s|$) to be absolutely sure.
[18:56:42] <TinoDidriksen> \Q\E escapes the parts in between.
[18:56:48] <stenno> i see
[18:56:53] <stenno> thx
[18:57:13] <smallfoot-> biberu, my bad, I want to do explode(), not str_split()
[18:57:18] *** Joins: hh (~g@37.214.48.176)
[18:57:26] <smallfoot-> TinoDidriksen, my bad, I want to do explode(), not str_split()
[18:57:28] <TinoDidriksen> I prefer \Q\E over preg_quote() because the latter needs you to repeat and know the delimiter, while \Q\E inherently knows it.
[18:57:51] *** Quits: operateur (~operateur@91.143.220.230) (Ping timeout: 245 seconds)
[18:58:01] <smallfoot-> Naktibalda, my bad, I want explode()
[18:58:03] *** Quits: junktext_ (~junktext@gateway/vpn/pia/junktext) (Ping timeout: 252 seconds)
[18:58:11] <arash> Naktibalda, mysql query is working "LOAD DATA LOCAL INFILE "C:\\Users\\arash\\Desktop\\test.csv" INTO TABLE `test` CHARACTER SET utf8 FIELDS TERMINATED BY "," LINES TERMINATED BY "\r\n""
[18:58:23] <TinoDidriksen> smallfoot-, you don't need to ping everyone. We all see all lines.
[18:58:25] <smallfoot-> Is there any benefit or advantage of using explode($string, 10) over explode($string) ?
[18:58:38] <arash> I tested it in heidisql, I think something is wrong with pdo
[18:59:08] <Naktibalda> arash: did you get it by printing query in PHP script?
[18:59:21] <Naktibalda> smallfoot-: you have no idea what does explode do
[18:59:28] <arash> Naktibalda, yes.
[18:59:35] <TinoDidriksen> You should use / instead of \\ in paths.
[19:00:04] <arash> TinoDidriksen, it reads the file, the problem is it only import 1 line.
[19:00:23] *** Quits: junktext__ (~junktext@gateway/vpn/pia/junktext) (Remote host closed the connection)
[19:00:35] <TinoDidriksen> For PDO you need PDO::MYSQL_ATTR_LOCAL_INFILE
[19:00:40] *** Joins: junktext__ (~junktext@gateway/vpn/pia/junktext)
[19:01:16] <smallfoot-> Naktibalda, I meant explode(' ', $text, 10)
[19:01:37] <TinoDidriksen> smallfoot-, if you just need to determine if a word is in a text, you don't want explode()
[19:02:19] <arash> this function don't execute multi_query
[19:02:20] <arash> . look like exec don't do multi query.
[19:02:31] <Naktibalda> smallfoot-: if you do that with long string, the last item will contain many words
[19:02:40] <smallfoot-> TinoDidriksen, but I don't want to use str_contains() because then he catches "poop" when I search for word "poo"
[19:02:54] <TinoDidriksen> smallfoot-, I gave a solution for that.
[19:02:59] <biberu> we're typing too fast
[19:03:03] <smallfoot-> Naktibalda, yes, I know
[19:03:05] <biberu> xD
[19:03:33] <smallfoot-> Naktibalda, but I was thinking if its not in the first 10 words, then I don't care
[19:04:15] <smallfoot-> Naktibalda, but if there is no advantage to specify a $limit param to explode() then I am fine with that too, I Was just wondering if its best practice to maybe specify a $limit
[19:07:51] <TinoDidriksen> smallfoot-, https://3v4l.org/g3SZu
[19:08:14] <arash> Naktibalda, fixed. something was wrong with that query.
[19:08:34] <smallfoot-> TinoDidriksen, is this preg_match better than explode() and check if array has that string?
[19:08:58] <TinoDidriksen> It checks that a string contains a word. No arrays involved.
[19:09:16] <TinoDidriksen> Yes, it's much better than creating arrays.
[19:09:55] <TML> smallfoot-: Is checking the temperature of your food to see if it's safe to eat yet a better solution than eating it to see whether you get sick?
[19:10:13] <smallfoot-> TinoDidriksen, I see, because I heard regex can be slow
[19:10:34] <smallfoot-> TML, I don't know
[19:11:03] <TinoDidriksen> Regex can be slow. But splitting a string is almost certainly going to be much slower, especially for such a simple regex.
[19:11:10] <TML> smallfoot-: Sure, regex can be slow. But didn't anyone also tell you breaking strings into arrays is slow? Didn't anyone tell you memory allocation for a bazillion array entries will be even slower, and cause more CPU and RAM pressure?
[19:11:24] <TML> smallfoot-: -_-
[19:11:58] *** Joins: operateur (~operateur@91.143.220.230)
[19:11:59] *** Quits: pmercado_ (~pmercado@186.107.61.96) (Ping timeout: 252 seconds)
[19:12:46] <TML> smallfoot-: Let me try it a different way: What's a better way of testing your food for poison? Eating it and waiting to see whether you die, or testing it for poison using a tool built for testing it for poison?
[19:13:13] *** Quits: chazy (~chazy@85.31.134.174) (Quit: WeeChat 3.3)
[19:14:14] *** Quits: Simplar (~quassel@188.163.93.76) (Quit: https://quassel-irc.org - Chat comfortably. Anywhere.)
[19:14:24] <smallfoot-> TinoDidriksen, alright, thanks
[19:14:33] *** Quits: Northwoods (~Northwood@202.14.122.53) (Ping timeout: 252 seconds)
[19:14:57] <smallfoot-> TML, I see, thanks, I didn't know splitting string into array was slow
[19:15:10] <smallfoot-> TML, testing food for poison using a tool built for testing poison
[19:15:27] <TML> regex is a tool specifically designed for testing strings for patterns
[19:15:49] <TinoDidriksen> The icase version is more complex, but same added complexity as testing every split string icase, so overall doesn't change the equation.
[19:16:02] <TML> Also, regex is not inherently slow; people write bad regex and then blame it for being slow.
[19:16:24] <smallfoot-> I see
[19:17:47] <TinoDidriksen> That is certainly also true. Regex is based on one of the fastest techs we have: finite state machines. You can ruin it, but it optimizes most cases really well.
[19:21:09] *** Joins: junktext_ (~junktext@gateway/vpn/pia/junktext)
[19:22:59] *** Quits: mishehu (~mishehu@mira001.eyepeeveesicks.shavedgoats.net) (Ping timeout: 252 seconds)
[19:23:09] *** Joins: mishehu (~mishehu@mira001.eyepeeveesicks.shavedgoats.net)
[19:23:19] *** Quits: junktext__ (~junktext@gateway/vpn/pia/junktext) (Ping timeout: 256 seconds)
[19:28:21] *** Quits: guenhael (~Thunderbi@193.52.208.98) (Ping timeout: 256 seconds)
[19:28:55] *** Quits: junktext_ (~junktext@gateway/vpn/pia/junktext) (Ping timeout: 256 seconds)
[19:30:59] *** Quits: smallfoot- (~smallfoot@user/smallfoot-) (Quit: Leaving)
[19:33:09] *** Joins: junktext (~junktext@gateway/vpn/pia/junktext)
[19:33:57] *** Quits: vonStinger (ceres@gateway/vpn/protonvpn/vonstinger) (Quit: WeeChat 3.3)
[19:35:35] *** Quits: Deuchnord (~deuchnord@user/deuchnord) (Remote host closed the connection)
[19:42:42] *** Joins: easyme (~easyme@user/easyme)
[19:42:57] <easyme> Hello
[19:43:19] <easyme> How can I get source code of move_uploaded_file()?
[19:44:01] <__adrian> https://github.com/php/php-src
[19:44:38] <easyme> which folder contains that code?
[19:44:44] <easyme> specific folder?
[19:45:04] <__adrian> i didn't check. search for the function name.
[19:45:55] *** Quits: luigibu (~luigi@80.30.201.209) (Ping timeout: 256 seconds)
[19:50:30] <judah> Mostly because I was curious, easyme if you have not already found it - https://github.com/php/php-src/blob/90b7bde61507cee1c6b37f153909d72f5b203b8c/ext/standard/basic_functions.c#L2428-L2481
[19:53:14] *** Quits: operateur (~operateur@91.143.220.230) (Ping timeout: 252 seconds)
[19:55:50] <easyme> Actually how it works internally?
[19:56:03] <easyme> suppose you need to upload binary file
[19:56:18] <__adrian> that's not what the function does
[19:56:36] <__adrian> move_uploaded_file() takes a file that was uploaded and moves it to a permanent location
[19:56:52] <__adrian> (else the temporary uploaded file will be deleted when the request ends)
[20:10:18] <__adrian> regarding binary file uploads, they're not different
[20:30:58] *** Quits: freeworld (~vit@chello085216193138.chello.sk) (Quit: Konversation terminated!)
[20:31:54] *** Parts: easyme (~easyme@user/easyme) ()
[20:32:50] *** Joins: Northwoods (~Northwood@202.14.122.53)
[20:34:33] *** Parts: skyroveRR (~skyroveRR@user/skyroverr) (WeeChat 2.5)
[20:35:47] *** Joins: onichomp (~onichomp@2806:264:4404:8181:2144:a58a:44f6:3327)
[20:57:07] *** Joins: BadAdviceCat (~BadAdvice@user/badadvicecat)
[21:04:45] *** Joins: luigibu1 (~luigibu@80.30.201.209)
[21:05:34] *** Quits: Atlas (~atlas@user/atlas) (Quit: Textual IRC Client: www.textualapp.com)
[21:08:05] *** Joins: PenguinMan98 (~PenguinMa@65.153.38.250)
[21:09:17] *** Quits: luigibu1 (~luigibu@80.30.201.209) (Ping timeout: 256 seconds)
[21:15:27] *** Quits: The_Blode (~Blode@user/the-blode/x-7164444) (Ping timeout: 256 seconds)
[21:19:30] *** Joins: The_Blode (~Blode@user/the-blode/x-7164444)
[21:22:15] *** Quits: paule32 (~paule32@user/paule32) (Ping timeout: 256 seconds)
[21:29:47] *** Joins: jeffrey (~jeffrey@80-115-60-193.cable.dynamic.v4.ziggo.nl)
[21:35:16] *** Quits: belak (~belak@user/belak) (Quit: ZNC 1.8.2 - https://znc.in)
[21:35:32] *** Joins: belak (~belak@user/belak)
[21:36:36] *** Joins: luigibu1 (~luigibu@80.30.201.209)
[21:38:42] *** Joins: guenhael (~Thunderbi@aaubervilliers-652-1-290-168.w82-121.abo.wanadoo.fr)
[21:41:13] *** Quits: luigibu1 (~luigibu@80.30.201.209) (Ping timeout: 252 seconds)
[21:52:06] *** Quits: de-facto (~de-facto@user/de-facto) (Ping timeout: 276 seconds)
[22:00:22] *** Quits: thiras (~thiras@user/thiras) (Read error: Connection reset by peer)
[22:04:19] *** Quits: DevAntoine (~DevAntoin@pop.92-184-112-181.mobile.abo.orange.fr) (Ping timeout: 252 seconds)
[22:13:38] *** Quits: onichomp (~onichomp@2806:264:4404:8181:2144:a58a:44f6:3327) (Read error: Connection reset by peer)
[22:14:16] *** Joins: onichomp (~onichomp@2806:264:4404:8181:2144:a58a:44f6:3327)
[22:19:43] *** Quits: jgrim6669 (~jgrim@d60-65-99-197.col.wideopenwest.com) (Quit: Buh bye!)
[22:20:41] *** Quits: jeffrey (~jeffrey@80-115-60-193.cable.dynamic.v4.ziggo.nl) (Ping timeout: 256 seconds)
[22:20:49] *** Joins: jgrim6669 (~jgrim@d60-65-99-197.col.wideopenwest.com)
[22:27:54] *** Quits: jgrim6669 (~jgrim@d60-65-99-197.col.wideopenwest.com) (Quit: Buh bye!)
[22:29:13] *** Joins: luigibu1 (~luigibu@80.30.201.209)
[22:31:29] *** Joins: jgrim6669 (~jgrim@d60-65-99-197.col.wideopenwest.com)
[22:33:39] *** Quits: luigibu1 (~luigibu@80.30.201.209) (Ping timeout: 256 seconds)
[22:37:11] <judah> I keep telling myself that the more I use Magento and start to understand why things are done the way they are, that ill enjoy it more
[22:37:16] <judah> oh boy
[22:38:22] <judah> The more I learn about it and the reasons why it does things the way it does... the less I want to use it
[22:40:17] <judah> At this point I would take WordPress over it. At least WordPress, the walking security disaster that lives in a burning dumpster, has a clear API. In Magento you are just told "go interact with a method that does not exist on a class that is dynamically generated at call time, good luck!"
[22:45:33] *** Quits: guenhael (~Thunderbi@aaubervilliers-652-1-290-168.w82-121.abo.wanadoo.fr) (Ping timeout: 256 seconds)
[22:50:33] *** Joins: CyberCr33p (~chris@bnc.cretaforce.gr)
[22:54:36] *** Quits: PenguinMan98 (~PenguinMa@65.153.38.250) (Quit: Client closed)
[22:54:53] *** Joins: PenguinMan98 (~PenguinMa@65.153.38.250)
[22:59:48] *** Quits: PenguinMan98 (~PenguinMa@65.153.38.250) (Quit: Client closed)
[22:59:56] *** Quits: smeeagle (~smeeagle@2a00:23c8:9611:e600:2446:13de:20ec:764f) (Quit: smeeagle)
[23:01:15] *** Joins: de-facto (~de-facto@user/de-facto)
[23:02:04] *** bytestream2 is now known as bytestream
[23:03:52] *** Joins: luigibu1 (~luigibu@80.30.201.209)
[23:09:55] *** Quits: luigibu1 (~luigibu@80.30.201.209) (Ping timeout: 256 seconds)
[23:11:21] <CoJaBo> judah: Ah yes, the life of a PHP coder.
[23:14:14] *** Joins: tercaL (~tercaL@user/tercal)
[23:17:59] *** Joins: DevAntoine (~DevAntoin@pop.92-184-100-171.mobile.abo.orange.fr)
[23:18:05] <judah> Nothing against the Magento ecosystem, to each their own. Myself, I am about 150 hours into the official training and assorted manuals, and still have no idea what is going on
[23:18:51] <judah> With Laravel I sat down with a book and had it down in an afternoon. Symfony took about a week. CakePHP took me about two days. Magento? Its been weeks...
[23:19:36] <judah> Full time training mind you, not like something I am doing on the side. 6:30 in the morning to 4:00 in the afternoon, for weeks
[23:20:04] <__adrian> comparing to symfony or laravel or even cake isn't really valid. magento is an end-user product - it's meant for the masses to use, not for devs to casually tinker with.
[23:20:42] <Albright> Do you *have* to use Magento?
[23:20:42] <judah> That must be the difference
[23:21:01] <judah> Yeah, im working with a Magento-specific shop
[23:21:27] *** Joins: paule32 (~paule32@user/paule32)
[23:23:09] *** Quits: DevAntoine (~DevAntoin@pop.92-184-100-171.mobile.abo.orange.fr) (Ping timeout: 252 seconds)
[23:24:02] <Albright> Sorry about that.
[23:24:29] <stenno> so glad that i am done with this kind of agency stuff
[23:24:48] *** Quits: hh (~g@37.214.48.176) (Remote host closed the connection)
[23:25:07] <judah> Its all good. A job is a job, and in this job market im lucky to have it. Gotta look on the bright side.
[23:26:02] <__adrian> esp now that you basically have to have something of a systems background to run it  ;)
[23:26:04] <stenno> sure, no disrespect
[23:28:09] <Togra> does file_put_contents struggle when given a path with spaces in it? do I need to escape the spaces? I haven't turned on debug so I don't have all the information, but figured I'd ask here first if that method is known to be a little.. weird
[23:30:10] <Naktibalda> it should be unnecessary
[23:31:10] <Naktibalda> file_put_contents('foo bar.txt', 'test'); works fine to me
[23:32:04] *** Quits: Naktibalda (~Naktibald@88.135.22.17) (Quit: Some folks are wise, and some otherwise.)
[23:32:47] <Albright> If you're trying to do a web request for the created file, you'll need to escape the space in the URL.
[23:34:27] *** Joins: pmercado (~pmercado@186.107.58.17)
[23:43:16] <Togra> it's just for writing a json file that the php script uses to keep track of some stuff, it file_put_contents() it there get file_get_contents() later, but I never see the json file show up
[23:43:31] <Togra> it works fine without spaces. I'm betting it's very likely that I've goofed something up, and something else in the code is messing up the spaces
[23:46:31] <biberu> Togra: did you check that it's the same kind of space?
[23:46:47] <Togra> for put and get? I think so
[23:47:20] <biberu> verify :(
[23:47:22] <Togra> yeah, both get the filepath from the same variable, and it's rawurldecode'd too
[23:47:22] <biberu> :)
[23:47:43] <Togra> but since it's failing on _put_, the _get_ will never get anything anyway
[23:47:49] <Togra> so both could be wrong with a space
[23:48:05] <biberu> what if you hard code it?
[23:48:29] <Togra> oooo
[23:48:31] <Togra> yeah I'll try that
