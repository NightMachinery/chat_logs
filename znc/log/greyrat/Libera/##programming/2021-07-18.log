[00:01:44] <beaky> yes i tihnk it is a good idea
[00:02:06] <beaky> i remember leetcode has alot of problems like this
[00:03:53] *** Quits: merijn (~merijn@83-160-49-249.ip.xs4all.nl) (Ping timeout: 265 seconds)
[00:04:26] <GeDaMo> pyzozord: wouldn't each section have the same number of bits set?
[00:05:32] <beaky> yes that is another thing you can use to test the search i think
[00:05:42] <pyzozord> GeDaMo: yeah same number of bits, but that's not enough, bits need to be in the same places (ignoring leading zeros)
[00:05:51] *** Joins: tiggilyboo (~tiggilybo@82-197-202-43.dsl.cambrium.nl)
[00:06:09] <GeDaMo> I'm just thinking that if you count the total number of bits then each section has 1/3
[00:06:39] *** Quits: Crescendo (~Crescendo@user/crescendo) (Read error: Connection reset by peer)
[00:06:51] <pyzozord> and from there adjust the leading zeros somehow?
[00:07:12] <GeDaMo> The last section should tell you how many zeroes are on the least significant end
[00:07:56] <pyzozord> meaning if we have first part 00100 and second part 00100 then moving the left divider is meaningful, because it effectively shifts bits of the first part
[00:09:29] *** Quits: tiggilyboo (~tiggilybo@82-197-202-43.dsl.cambrium.nl) (Client Quit)
[00:09:40] <pyzozord> GeDaMo: not sure what do you mean by the last part. I would just count all ones. Divide by three. Then linear scan that many from left. This would give me the first part. Then linear scan another that many and that would give me parts two and three
[00:10:11] <pyzozord> now I may run into problems I mentioned above with shifts on left size and leading zero in right side, so that would need to be adjusted
[00:10:16] *** Quits: salitos (~salitos@197.156.190.134) (Quit: Leaving)
[00:10:19] *** Joins: jhulten (~jhulten@c-67-185-71-124.hsd1.wa.comcast.net)
[00:10:21] <pyzozord> is that what you mean?
[00:10:40] <pyzozord> sorry, communication, hard, enlish hard, compters, hard
[00:10:57] *** Quits: mcfrdy (~mcfrdy@user/mcfrdy) (Ping timeout: 255 seconds)
[00:11:38] <GeDaMo> [0,1,0,1,0,0,0,1,0,1,0,0,0,1,0,1,0,0] 6 total bits, counting from the right there are two lower zeros
[00:12:04] <GeDaMo> After you count the three bits from the right, you're looking for two zeroes and a one
[00:12:18] <GeDaMo> Any zeroes before that are leading eroes
[00:12:29] <GeDaMo> ^zeroes
[00:12:52] <GeDaMo> There's probably some clever fast way of doing it though
[00:14:06] <pyzozord> ooh so you start from the right because then you can safely ignore any leading zeros
[00:14:44] <pyzozord> so you literally just count the number of 1, then draw a line and move on to the next section, and you start new section by ignoring any leading zeros
[00:14:57] *** Joins: mcfrdy (~mcfrdy@45.67.96.77)
[00:14:57] *** Quits: mcfrdy (~mcfrdy@45.67.96.77) (Changing host)
[00:14:57] *** Joins: mcfrdy (~mcfrdy@user/mcfrdy)
[00:15:02] <pyzozord> is that what you mean?
[00:15:18] <GeDaMo> After you hit the second section from the right you know the number of leading and trailing zeroes
[00:15:53] <pyzozord> How do I know that?
[00:17:13] <GeDaMo>         [0,1,0,1,0,0,0,1,0,1,0,0,0,1,0,1,0,0]
[00:17:13] <GeDaMo> least significant 1 of 2nd ^   ^ 3 zeroes  ^ two trailing zeroes
[00:17:31] <GeDaMo> Leading zeroes = 3 - 2 trailing = 1
[00:18:01] *** Joins: eyynet4 (~0x100@32.211.211.39)
[00:18:05] <pyzozord> ooh so after you count all 1 you need you keep going with zeros to find out the trailing zeros
[00:18:26] <pyzozord> I see I thought you start second section at 0, but you start it at 1
[00:19:09] <GeDaMo> Count all the 1s; from the right count trailing zeroes; count (total/3) 1s; count zeroes until next 1
[00:19:12] *** Joins: soulisson_ (~soulisson@105.156.250.37)
[00:19:17] *** Joins: Crescendo (~Crescendo@user/crescendo)
[00:19:28] <pyzozord> so just go through, count the 1s and 0s, that gives you the only possible configuration, then check if the binary values are equal, that's it?
[00:19:38] <GeDaMo> You shouldn't have to check
[00:20:22] *** Quits: soulisson (~soulisson@user/soulisson) (Read error: Connection reset by peer)
[00:20:27] <GeDaMo> Actually, I suppose you can count the leading zeroes on the left
[00:21:37] <pyzozord> I don't see why I don't need to check after I walked through everything
[00:21:56] *** Joins: nekobyte (~nekoIsAL@user/nekobit)
[00:22:48] <GeDaMo> Ah, right, it's possible that the values are not the same
[00:24:03] <GeDaMo> If the number of bits isn't divisible by 3, that's an error too
[00:24:06] <pyzozord> ok, that's a doubly clever idea. I thought my idea was clever, but my idea was brute-force clever, this one is clever-clever
[00:24:17] <GeDaMo> I don't think it's clever :|
[00:24:59] <pyzozord> I wouldn't have thought about counting ones. I went ahead and build a whole prefix with actual decimal values at each position etc
[00:25:08] *** Quits: Hanii (~textual@2a00:23c5:c587:6d00:140d:ed4:314d:e507) (Quit: Textual IRC Client: www.textualapp.com)
[00:25:15] <pyzozord> also no idea why my code doesn't work :(
[00:25:27] <pyzozord> GeDaMo: thanks for taking the time to help me :)
[00:25:39] <GeDaMo> You don't have to do all the shifting either, once you have the start positions of the three segments, you can just compare them
[00:26:10] <GeDaMo> Compare the list slices, that is
[00:27:05] *** Quits: mrig (~mrig@user/mrig) (Ping timeout: 265 seconds)
[00:28:09] *** Joins: lunarkitty (uid501895@user/pyra)
[00:28:44] *** Joins: mrig (~mrig@user/mrig)
[00:29:45] *** Quits: Crescendo (~Crescendo@user/crescendo) (Read error: Connection reset by peer)
[00:30:08] <beaky> yes i think it is big endian but if you do it from the right then you wont have to deal with leading zeroes
[00:30:28] <beaky> just find the next leading one and then compare
[00:30:52] <pyzozord> Yeah got it, count leading zeros from the right, then count total_ones/3 of ones, then first next one, that position - leading_zeros is your right cut off line, repeat for the left cut off line. Once you have three slices combare decimal values. done
[00:31:37] <GeDaMo> You don't need to convert to decimal
[00:31:49] <beaky> yes from the right its great because the zeroes already get nice and factored in
[00:31:54] <GeDaMo> Unless that would be faster than just comparing the list slices
[00:31:56] *** Joins: soapsudsxx (~soapsudsx@209.221.40.138)
[00:32:03] <beaky> (tho if the problem used little endian then it would've been from the left)
[00:32:19] <pyzozord> GeDaMo: oh right, true forgot those aren't actual bits
[00:33:22] <GeDaMo> I'm not sure why it asks you to return two numbers when the question is really 'how big is each section?'
[00:33:29] <GeDaMo> They'd all be the same size
[00:34:48] <beaky> i thought the sizes will be different if they had extra zeroes on the left
[00:35:05] <GeDaMo> Can there be extra zeroes?
[00:35:17] <GeDaMo> I thought if it matched all the sections were the same
[00:35:56] <GeDaMo> Well, that makes it a little more complex, not much though
[00:36:45] *** Quits: trace987 (~trace@ip5b429888.dynamic.kabel-deutschland.de) (Remote host closed the connection)
[00:36:59] *** Joins: merijn (~merijn@83-160-49-249.ip.xs4all.nl)
[00:37:18] <pyzozord> GeDaMo: I think it doesn't have to be the same size, if you have many zeros on the right
[00:37:31] <GeDaMo> Left
[00:37:46] *** Quits: eXistenZ (~biskit@bzq-109-67-145-67.red.bezeqint.net) (Ping timeout: 252 seconds)
[00:37:48] <pyzozord> Left
[00:37:59] *** Quits: jaysicks (~jaysicks@178-164-134-154.pool.digikabel.hu) (Remote host closed the connection)
[00:38:15] <pyzozord> left is most significant therefore leading zeros on the less are meaningless
[00:38:32] <GeDaMo> Yeah
[00:38:32] *** Joins: jaysicks (~jaysicks@178-164-134-154.pool.digikabel.hu)
[00:38:46] *** blinky43 is now known as blinky42
[00:38:47] <pyzozord> "leading" zeros on the right, are meaningful, they are more like bitshifts
[00:38:50] *** Quits: blinky42 (~quassel@jabber.blinkylight.net) (Changing host)
[00:38:50] *** Joins: blinky42 (~quassel@user/blinky42)
[00:39:01] *** Joins: Crescendo (~Crescendo@user/crescendo)
[00:39:01] <pyzozord> well confusing comparisons, they are like zeros in 100
[00:39:27] <pyzozord> or zeros in 123000, those are meaningful zeros
[00:39:33] <eyynet4> digits on left can inform you of the type's hardware limitations
[00:40:00] *** Quits: jhulten (~jhulten@c-67-185-71-124.hsd1.wa.comcast.net) (Remote host closed the connection)
[00:40:01] <GeDaMo> Significant digits
[00:40:12] <beaky> yes this is why litte endian is superior
[00:40:40] <pyzozord> so least significant zeros are meaningful, because they are suffix
[00:40:56] <pyzozord> most significant zeros are meaningless because they are prefix and they don't affect decimal value
[00:41:04] <pulse> https://i.imgur.com/ld6hgMU.jpg
[00:41:48] *** Quits: merijn (~merijn@83-160-49-249.ip.xs4all.nl) (Ping timeout: 252 seconds)
[00:41:48] <pyzozord> pulse: that is... funy and disturbing :D
[00:41:54] <pulse> :-)
[00:42:33] *** Quits: audiofreeze (~audio@2603-8081-1800-00ad-e214-c535-fca5-6da6.res6.spectrum.com) (Remote host closed the connection)
[00:42:51] *** Joins: audiofreeze (~audio@2603-8081-1800-00ad-2c60-39da-53f7-ed3e.res6.spectrum.com)
[00:46:27] *** Quits: enoq (~enoq@194-208-146-143.lampert.tv) (Quit: enoq)
[00:47:15] *** Quits: brickfat (~brickfat@user/brickfat) (Quit: Leaving)
[00:50:33] *** Quits: Guest9 (~Guest9@43.242.116.127) (Quit: Connection closed)
[00:51:38] *** Quits: art_vandelay (~art_vande@bras-base-toroon63x9w-grc-21-174-89-102-174.dsl.bell.ca) (Quit: Textual IRC Client: www.textualapp.com)
[00:54:13] *** Joins: kenthurley (~quassel@acah25.neoplus.adsl.tpnet.pl)
[00:56:47] *** Quits: Crescendo (~Crescendo@user/crescendo) (Ping timeout: 268 seconds)
[00:58:09] *** Quits: gitesh (uid423739@id-423739.charlton.irccloud.com) (Quit: Connection closed for inactivity)
[01:00:29] *** Quits: Inhahe (inhahe@107-213-219-122.lightspeed.miamfl.sbcglobal.net) (Read error: Connection reset by peer)
[01:00:46] *** Joins: Inhahe (inhahe@107-213-219-122.lightspeed.miamfl.sbcglobal.net)
[01:04:26] *** Joins: Crescendo (~Crescendo@user/crescendo)
[01:05:34] *** Quits: TechTest (uid283215@id-283215.tooting.irccloud.com) (Quit: Connection closed for inactivity)
[01:08:00] *** Joins: moodi (~moodi@mobile-access-bceeca-98.dhcp.inet.fi)
[01:10:59] *** Joins: vicfred (~vicfred@user/vicfred)
[01:11:36] *** Joins: jhulten (~jhulten@c-67-185-71-124.hsd1.wa.comcast.net)
[01:11:38] *** Quits: jhulten (~jhulten@c-67-185-71-124.hsd1.wa.comcast.net) (Remote host closed the connection)
[01:12:02] *** VT220 is now known as Telvana
[01:15:27] *** Quits: GeDaMo (~GeDaMo@user/gedamo) (Quit: Leaving.)
[01:19:58] *** Quits: audiofreeze (~audio@2603-8081-1800-00ad-2c60-39da-53f7-ed3e.res6.spectrum.com) (Remote host closed the connection)
[01:20:16] *** Joins: audiofreeze (~audio@2603-8081-1800-00ad-3e0a-b712-75b1-c653.res6.spectrum.com)
[01:21:20] *** Quits: src (~src@user/src) (Ping timeout: 255 seconds)
[01:21:41] *** Quits: Null_A (~null_a@2601:645:8700:2290:b55a:33c2:1e1d:f229) (Remote host closed the connection)
[01:22:08] *** Quits: elnavigator (~elnavigat@105.196.63.39) (Ping timeout: 252 seconds)
[01:24:29] *** Quits: moodi (~moodi@mobile-access-bceeca-98.dhcp.inet.fi) (Quit: Leaving)
[01:27:49] *** Joins: elnavigator (~elnavigat@105.196.63.39)
[01:29:39] *** Joins: Null_A (~null_a@2601:645:8700:2290:b55a:33c2:1e1d:f229)
[01:32:33] *** Quits: elnavigator (~elnavigat@105.196.63.39) (Ping timeout: 268 seconds)
[01:34:30] *** Joins: anovick__ (~anovick@IGLD-83-130-153-93.inter.net.il)
[01:34:47] *** Joins: m8wzx8_ (~m8wzx8@user/m8wzx8)
[01:35:16] *** Joins: elnavigator (~elnavigat@105.196.63.39)
[01:35:48] *** Quits: m8wzx8 (~m8wzx8@user/m8wzx8) (Remote host closed the connection)
[01:36:05] *** Joins: twomoon (~twomoon@ip72-199-58-150.sd.sd.cox.net)
[01:36:31] <Mangy_Dog> https://imgur.com/a/vC77k0h  Ok need a little advice... As you can see i have the spear grow out. Its just a point primitive with an increasing radius. What i want to do is make the  point markers appear as the points radius passes them.  What i need help with is figuring out how to check if the point is within the radius of that point. the coordinates of the markers are in XY in pixels
[01:36:31] <Mangy_Dog> (+ the offset of the mini display frame) Any ideas?
[01:36:49] <Mangy_Dog> if you reply say my name so i get pinged :D
[01:37:19] *** Quits: anovick_ (~anovick@IGLD-83-130-153-93.inter.net.il) (Ping timeout: 258 seconds)
[01:37:40] *** Joins: mjs2600 (~mjs2600@c-24-91-3-49.hsd1.vt.comcast.net)
[01:37:52] *** Joins: art_vandelay (~art_vande@bras-base-toroon63x9w-grc-21-174-89-102-174.dsl.bell.ca)
[01:37:59] *** Joins: Florens (~Florens@5072A344.static.ziggozakelijk.nl)
[01:38:05] *** Quits: nekonibble (~nekonIsL@user/nekobit) (Quit: free(neko);)
[01:38:42] *** Joins: nekonibble (~nekonIsL@user/nekobit)
[01:41:11] *** Quits: elnavigator (~elnavigat@105.196.63.39) (Ping timeout: 268 seconds)
[01:41:50] <beaky> nice blinking lights
[01:41:52] <pulse> Mangy_Dog, what is that thing? looks awesome
[01:42:14] <Mangy_Dog> tricorder prop :)
[01:42:27] <beaky> yes this is the most impressive thing ive seen in a while
[01:42:43] <pulse> Mangy_Dog, and the solution to your problem is simply to measure distance from those points to your circle's center, and then compare that to the the current radius
[01:45:30] *** Quits: kenthurley (~quassel@acah25.neoplus.adsl.tpnet.pl) (Ping timeout: 268 seconds)
[01:46:15] <Mangy_Dog> som eone gave me the forumlar also some one else showed me this https://www.geeksforgeeks.org/check-whether-a-point-lies-inside-a-sphere-or-not/
[01:46:18] <Mangy_Dog> seems about right
[01:47:06] *** Joins: elnavigator (~elnavigat@105.196.63.39)
[01:47:16] <pulse> wait, a sphere is 3D
[01:47:33] * pulse raises eyebrow
[01:48:00] <pulse> and that looks very much 2D to me
[01:48:27] <Mangy_Dog> na 2d
[01:49:28] <pulse> if it's 2D you can just check if your current radius is within distance-delta, distance+delta
[01:49:42] <pulse> where distance is the distance between your expanding circle's center and the point of interest
[01:49:47] *** Quits: aradesh (~aradesh@user/aradesh) (Quit: WeeChat 1.9.1)
[01:50:02] <pulse> and delta is some arbitrary number
[01:50:12] <pulse> used because typically these things aren't 100% precise
[01:50:19] <pulse> esp. if you're using floats
[01:51:04] <pulse> if it is, activate point (and make sure it doesn't activate again)
[01:54:36] *** Joins: chomwitt (~Pitsikoko@athedsl-32487.home.otenet.gr)
[01:55:23] *** Joins: snake (~snake@user/snake)
[01:58:13] *** Joins: trevors (~trevors@catv-89-132-207-129.catv.broadband.hu)
[01:58:27] <WarauSalesman> it's the same problem with circle or sphere
[01:58:55] <pulse> actually if all you need is checking if the point is inside a circle it's then just radius > distance(P1,P2)
[01:59:05] <pulse> or rather radius >= dist(P1,P2)
[01:59:14] <pulse> P1 being center of the expanding circle
[01:59:36] <WarauSalesman> radius > euclidean_distance(center,P)
[01:59:47] <WarauSalesman> :)
[02:00:42] <WarauSalesman> doesn't matter for circle, sphere or a multidimensional "rounded object" :D
[02:01:03] <pulse> yeah sphere is just one extra dimension
[02:01:08] <pulse> would be different for oval though
[02:01:17] <WarauSalesman> ellipse, you mean?
[02:01:28] <pulse> yeah, that
[02:01:30] <WarauSalesman> that's a fun problem :)
[02:01:37] <WarauSalesman> get's more annoying with 3D
[02:02:01] *** Quits: eyynet4 (~0x100@32.211.211.39) (Remote host closed the connection)
[02:02:13] *** Joins: eyynet4 (~0x100@32.211.211.39)
[02:02:30] <pulse> for circle it's trivial because the radius always represents the border
[02:02:45] <pulse> for oval you need a somewhat long equation
[02:02:51] <WarauSalesman> ellipse you have you use an INEQUATION
[02:02:58] <pulse> eh, i mean elipse
[02:02:58] <pulse> lol
[02:03:07] <pulse> ellipse*
[02:03:43] <WarauSalesman> you get the parametric equation of the ellipse and turn it into an inequation for the test point
[02:03:54] <pulse> hmm
[02:04:05] <WarauSalesman> quickly google it and you will see it
[02:04:21] *** Quits: nekonibble (~nekonIsL@user/nekobit) (Ping timeout: 255 seconds)
[02:04:30] <WarauSalesman> assuming you are familiar with inequations and parametric equations
[02:05:01] <WarauSalesman> that was barely covered by my primary school math classes, but I have a degree in engineering, so I had a REFRESH :D
[02:05:28] <WarauSalesman> calculus, linear algebra and everything else which comes in the math package for engineers
[02:06:20] *** Joins: nekonibble (~nekonIsL@user/nekobit)
[02:07:03] *** Quits: mcfrdy (~mcfrdy@user/mcfrdy) (Ping timeout: 255 seconds)
[02:07:14] *** Quits: nekobyte (~nekoIsAL@user/nekobit) (Ping timeout: 255 seconds)
[02:07:24] *** Joins: mcfrdy (~mcfrdy@45.67.96.175)
[02:07:24] *** Quits: mcfrdy (~mcfrdy@45.67.96.175) (Changing host)
[02:07:24] *** Joins: mcfrdy (~mcfrdy@user/mcfrdy)
[02:07:34] <pulse> differential equations :p
[02:08:32] *** Quits: mrig (~mrig@user/mrig) (Quit: WeeChat 3.2)
[02:08:38] <pyzozord> cool, but not a big deal, just geometry stuff
[02:09:32] <pyzozord> the cool stuff is that if that's actually camera on a bigger plane he should use some kind of space indexing for the points so he doesn't check every single point every single frame
[02:10:07] *** Quits: Serpent7776 (~Serpent77@90-156-31-193.internetia.net.pl) (Quit: leaving)
[02:10:11] *** Quits: mathAndRhetoric (~mathAndRh@ip-86-49-255-184.net.upcbroadband.cz) (Read error: No route to host)
[02:10:23] *** Joins: mathAndRhetoric (~mathAndRh@ip-86-49-255-184.net.upcbroadband.cz)
[02:10:31] *** Quits: mnrmnaugh (~mnrmnaugh@pool-96-252-87-182.bstnma.fios.verizon.net) (Quit: Leaving)
[02:11:49] <pyzozord> this projects looks like either a cool arcade game or a military project undercover of a cool arcade game
[02:12:01] *** Quits: todda7 (~torstein@static-qvn-qvu-160026.business.bouyguestelecom.com) (Ping timeout: 268 seconds)
[02:14:35] *** Joins: todda7 (~torstein@static-qvn-qvu-160026.business.bouyguestelecom.com)
[02:15:00] *** Joins: mathAndRhetorics (~mathAndRh@ip-86-49-255-184.net.upcbroadband.cz)
[02:15:00] *** Quits: mathAndRhetoric (~mathAndRh@ip-86-49-255-184.net.upcbroadband.cz) (Read error: Connection reset by peer)
[02:15:06] *** mathAndRhetorics is now known as mathAndRhetoric
[02:15:34] *** Joins: smallville7123 (~smallvill@cpe-172-193-72-46.qld.foxtel.net.au)
[02:16:07] *** Quits: vysn (~vysn@user/vysn) (Remote host closed the connection)
[02:16:48] *** Joins: mathAndRhetorics (~mathAndRh@2a02:8308:302:fe00:1117:e482:21e4:5679)
[02:16:48] *** Quits: mathAndRhetoric (~mathAndRh@ip-86-49-255-184.net.upcbroadband.cz) (Read error: Connection reset by peer)
[02:16:55] *** mathAndRhetorics is now known as mathAndRhetoric
[02:18:43] *** Quits: silverwhitefish (~hidden@47.202.102.10) (Ping timeout: 258 seconds)
[02:19:08] *** Quits: Florens (~Florens@5072A344.static.ziggozakelijk.nl) (Quit: Leaving)
[02:23:53] *** Quits: elnavigator (~elnavigat@105.196.63.39) (Ping timeout: 255 seconds)
[02:24:04] *** Quits: Null_A (~null_a@2601:645:8700:2290:b55a:33c2:1e1d:f229) (Remote host closed the connection)
[02:24:11] *** Joins: elnavigator (~elnavigat@105.196.63.39)
[02:24:40] *** Joins: Null_A (~null_a@2601:645:8700:2290:b55a:33c2:1e1d:f229)
[02:27:15] *** Quits: furrymcgee (~devuan@31.179.186.66) (Quit: leaving)
[02:29:07] *** Quits: Null_A (~null_a@2601:645:8700:2290:b55a:33c2:1e1d:f229) (Ping timeout: 246 seconds)
[02:34:29] *** Joins: kariosfox (~kariosfox@89.229.173.37)
[02:34:38] <pyzozord> I do need to really refresh elementary math and study up to calculus. I had to look up what inequations were
[02:35:31] *** Quits: m8wzx8_ (~m8wzx8@user/m8wzx8) (Quit: Leaving)
[02:35:43] *** Joins: ixil (~ixil@82.197.178.137)
[02:35:45] *** Joins: m8wzx8_ (~m8wzx8@user/m8wzx8)
[02:35:51] *** Quits: elnavigator (~elnavigat@105.196.63.39) (Ping timeout: 255 seconds)
[02:35:58] <W> What's the cleanest functional construct for converting a list(like) to a boolean that is true if all elements are equal? In Java's stream API the best I have come up with is .map(Optional::of).reduce((a,b)->a.equalTo(b)?a:empty()).get(), but this is clunky, and Java might or might not have something better, but what do more pure functional languages do?
[02:36:54] *** Quits: m8wzx8_ (~m8wzx8@user/m8wzx8) (Client Quit)
[02:36:55] <W> sorry. .isPresent(), not .get()
[02:37:41] *** Joins: nekobyte (~nekoIsAL@user/nekobit)
[02:37:47] *** Joins: merijn (~merijn@83-160-49-249.ip.xs4all.nl)
[02:37:48] <eyynet4> yeah that's hideous
[02:38:32] *** Joins: m8wzx8 (~m8wzx8@user/m8wzx8)
[02:38:49] <eyynet4> why not just iterate the list?
[02:38:51] <pyzozord> W: in js we have .some() and .every()
[02:38:53] *** Joins: smultron (~smultron@c-73-239-231-28.hsd1.wa.comcast.net)
[02:39:10] *** Quits: zeedo (~zeedo@cpc157903-grth13-2-0-cust152.16-4.cable.virginm.net) (Read error: Connection reset by peer)
[02:39:30] *** Quits: nekobyte (~nekoIsAL@user/nekobit) (Client Quit)
[02:39:32] <W> pyzozord, those sounds like they might take predicates on elements, not pair of elements?
[02:39:49] <pyzozord> oh true
[02:40:07] <W> I mean, you can slice off the first element and compare the rest to it, but that seems clunky too
[02:40:22] <pyzozord> but you could do ar.every(el => el == ar[0])
[02:40:26] *** Joins: Rounin (~david@cm-84.212.130.215.getinternet.no)
[02:40:53] <eyynet4> you don't have to slice off an element, just compare with the next elem
[02:40:54] <pyzozord> check if each element is equal to first element will also confirm that all elements are equal
[02:41:00] *** Quits: freakazoid333 (~freakazoi@72.168.176.202) (Read error: Connection reset by peer)
[02:41:05] <W> pyzozord, well, that'd work in the case of arrays
[02:41:07] <eyynet4> oh special case when count=1
[02:41:11] *** Joins: CodePoint (~BitShift@47.186.145.58)
[02:41:38] <xsperry> in a lazy functional language, like haskell, you can just call foldr (reduce) with && function:  allTrue = foldr (&&) True
[02:41:42] *** Joins: freakazoid333 (~freakazoi@72.168.176.202)
[02:41:50] <W> xsperry, excellent, thanks
[02:42:13] <xsperry> it will stop once the first element is False
[02:42:16] <W> That was my real question, truly. Even if I can't find a Java equivalent to that, I know what to model a convenience function on
[02:42:22] <eyynet4> what if there are no elements
[02:42:23] <edk> xsperry: haven't you jsut implemented all?
[02:42:28] <W> xsperry, oh, that's not what I asked for
[02:42:34] <edk> what if there are 0 elements or 1 elements?
[02:42:44] <xsperry> edk, it returns True (second argument of foldr)
[02:42:52] <xsperry> W, oh, sorry, I misread
[02:42:54] <edk> i'm asking about the function W wants
[02:43:07] <W> edk, both true
[02:43:30] <W> more accurately I guess I should say "returns false if there are two differing elements"
[02:44:06] <W> (I mean true is fine too, a negation is not ugly here if the rest is elegant)
[02:44:08] <davve_> ideally you want to stop iterating then too
[02:44:26] <davve_> javascript has every and some for these occasions
[02:44:31] <davve_> quite handy actually
[02:45:04] *** Joins: jazzy (~jaziz@2600:380:c07e:8a82:f5ec:dd60:1223:a3c0)
[02:45:18] <davve_> https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Array/every https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Array/some
[02:45:26] <W> what specifically the Java solution gives you is parallelizability - not a hard requirement, but it's convenient when it's a pure reduce
[02:49:10] * W looks for actual functional code that does this to draw from as example
[02:49:49] *** Joins: hexfive (~eric@50.35.83.177)
[02:51:41] *** Joins: lars8 (~bc817c21@217.29.117.252)
[02:52:55] <W> seems like the common solution is a groupby
[02:53:11] <lars8> W does your java code handle empty list?
[02:54:18] <W> lars8, sort of, I simplified it a bit. Reduce itself returns an optional, so it's even uglier than what I showed. The outer optional is empty if the stream is empty
[02:55:02] *** Quits: jaysicks (~jaysicks@178-164-134-154.pool.digikabel.hu) (Remote host closed the connection)
[02:55:33] <W> (so you get e.g. Optional<Optional<ElementType>>)
[02:55:42] *** Joins: elnavigator (~elnavigat@105.196.63.39)
[03:00:18] *** Quits: fweht (uid404746@id-404746.tooting.irccloud.com) (Quit: Connection closed for inactivity)
[03:00:25] <lars8> assuming you're not going for a one liner, this works: https://paste.tomsmeding.com/ZRSdUe2z
[03:01:17] <lars8> definition of and is what xsperry posted above, foldr (&&) True, so you can write it like that as well
[03:02:07] <lars8> so: allEqual (x:xs) = foldr (&&) True (map (==x) xs)
[03:02:28] <lars8> writing out the type is optional, but it is allEqual :: Eq a => [a] -> Bool
[03:02:37] *** Quits: magla (~gelignite@55d4b6dc.access.ecotel.net) (Quit: Stay safe!)
[03:02:57] *** Joins: blahboybaz (~blahboyba@c-67-183-225-44.hsd1.wa.comcast.net)
[03:03:48] *** Joins: kenthurley (~quassel@acai167.neoplus.adsl.tpnet.pl)
[03:04:03] <beaky> nice i like haskell
[03:05:08] *** Joins: TheAceOfHearts (~TheAceOfH@24.41.239.76)
[03:07:04] *** Quits: trevors (~trevors@catv-89-132-207-129.catv.broadband.hu) (Quit: My MacBook has gone to sleep. ZZZzzz…)
[03:07:06] <W> it looks a lot cleaner in Haskell than Java, that's for sure, but I kind of still don't like it. But thanks for providing what I asked after, regardless
[03:08:15] *** Joins: trevors (~trevors@catv-89-132-207-129.catv.broadband.hu)
[03:09:01] *** Quits: nekonibble (~nekonIsL@user/nekobit) (Ping timeout: 246 seconds)
[03:09:14] <blahboybaz> I guess my code is blowing up the interpreter but I can't figure out why. Why Why Why???!!!  :)   Everything looks in order. At first I thought it was the paste site I was using but an other paste site (and locally) give the same result.  It looks like it's executing every control block without regard to the conditions.
[03:09:18] <beaky> yes the foldr is the most natural approach it builds the value from the list
[03:09:38] *** Quits: Akuli (~Akuli@87-94-109-15.bb.dnainternet.fi) (Remote host closed the connection)
[03:10:23] <beaky> foldr the ultimate structure-preserving transformation
[03:10:27] *** Joins: mathAndRhetorics (~mathAndRh@2a02:8308:302:fe00:a19c:ef00:a89f:f497)
[03:10:30] <W> also, I guess there's a conflict of interest between parallelizability and short-circuiting on knowing the conclusion halfway through; at least if you want both, you would need a coordinating mechanism to cancel pending comparisons, which might just be more expensive than what you gain
[03:11:54] *** Quits: mikoto-chan (~mikoto-ch@ip-213-49-189-31.dsl.scarlet.be) (Ping timeout: 265 seconds)
[03:12:00] *** Quits: merijn (~merijn@83-160-49-249.ip.xs4all.nl) (Ping timeout: 258 seconds)
[03:12:23] <lars8> indeed
[03:13:35] <pyzozord> W: you could do some chunking, having more "threads" than cpu threads would be counter productive anway, so it will be split up into 2..64 chunks, not that many chunks
[03:14:33] *** Quits: mathAndRhetoric (~mathAndRh@2a02:8308:302:fe00:1117:e482:21e4:5679) (Ping timeout: 255 seconds)
[03:14:35] *** mathAndRhetorics is now known as mathAndRhetoric
[03:15:37] <blahboybaz> if(condition) {...} else {...}  Is there any scenario in which both blcoks could be executed?
[03:15:47] <W> pyzozord, I mean, the Java implementation does do that, just without any way to cancel if you have the answer after a chunk. It creates n*2 threads, iirc
[03:16:15] <W> blahboybaz, depends on language; e.g. one with goto or equivalent could do it
[03:16:24] <WarauSalesman> W: just use .allMatch()
[03:16:31] <lars8> I think pyzozord meant to split the list into chunks, then process each chunk on its own, in parallel
[03:16:35] <W> much more likely you just got the syntax wrong though, some nested if you missed
[03:16:59] *** Joins: gitgood (~gitgood@80-44-9-45.dynamic.dsl.as9105.com)
[03:17:01] <lars8> ideally, number of elements in a chunk would equal the number of CPU threads
[03:17:06] <pyzozord> lars8: yes that's what I meant, I had the impression that W understood that the same way as well
[03:17:46] <W> I meant n*2 where n=number of cores
[03:18:04] <blahboybaz> W: Node (javascript).
[03:18:10] <eyynet4> blahboybaz, perhaps in the sense that a compiler might optimize the branch out if they both do exactly the same thing, also branch preditction will run both
[03:18:22] <pyzozord> lars8: I meant more of number of chunks equal to number of CPU threads to be honest. Then each cpu can do just a linear scan. The first one to find a missmatch needs to inform other threads they can stop
[03:18:54] <W> blahboybaz, then no, not that I can think of. Like I said, if it looks like it does, probably something else wrong and the code doesn't mean what you think it does
[03:19:18] <beaky> yes can you paste the rest of the code
[03:19:30] <blahboybaz> This is what I have: https://onecompiler.com/nodejs/3x5g9r9uk  - and -  https://www.tutorialspoint.com/execute_nodejs_online.php
[03:19:37] <blahboybaz> I can't figure it out
[03:19:44] <blahboybaz> The code looks fine to me
[03:20:01] <lars8> pyzozord, that complicates the code though. and adds synchronization overhead.
[03:20:27] <pyzozord> yeah that's true, insert a sync check ever 100 elements for example or so
[03:20:37] <pyzozord> I've made it way too complex
[03:20:45] <pyzozord> Ok it's time for me to go
[03:21:09] <pyzozord> W: I tried to hepl but I'm "punching up" here so sorry if I wasnt too helpful ;)
[03:21:10] *** Joins: Joanna (uid57472@id-57472.tooting.irccloud.com)
[03:21:48] *** Quits: eyynet4 (~0x100@32.211.211.39) (Remote host closed the connection)
[03:22:05] *** Joins: eyynet4 (~0x100@32.211.211.39)
[03:22:13] *** Joins: swl (~scott@c-73-136-178-185.hsd1.tx.comcast.net)
[03:22:39] <pyzozord> "punching up" in the sense of "trying to help someone more experience than me"
[03:23:09] *** Quits: Auron (~Auron956@user/auron) (Remote host closed the connection)
[03:23:16] <swl> I'm using Zig and am trying to read user input. What's the ideomatic way to handle an input that's bigger than my buffer (preferably without @panic)?
[03:23:54] <swl> Right now, I'm using an arena allocator and .alloc(u8, 100), but that can only accept 98-99 chars
[03:23:55] <eyynet4> usually line by line
[03:23:55] *** Joins: Ox151 (~user@user/ox151)
[03:24:13] <beaky> blahboybaz: i think the +> in line 16 should be => but which part of the program's output seems incorrect?
[03:24:33] <Ox151> hello, how can i remove commits from github, not local git
[03:24:37] *** Quits: kenthurley (~quassel@acai167.neoplus.adsl.tpnet.pl) (Read error: Connection reset by peer)
[03:24:46] <swl> eyynet4: line by line? I'm only reading one line (simple rock-paper-scissors game)
[03:24:57] <W> It was an idle side thought anyway. I've decided on `.collect(groupingBy(identity())).size()<=1`, which is cleaner than what I had, and doesn't need to extract an element from the stream, or use foreach or an explicit loop or anything like that
[03:24:59] <Ox151> i have tried git reset --hard [hash] and then git push -f origin master but the push says everything is already up to date
[03:25:23] <eyynet4> so you would load one line into your buffer
[03:25:32] <eyynet4> and then discard it when done
[03:25:50] <swl> I only have one line I need to read, though
[03:26:34] <swl> And it feels wrong to panic on an input that's too long
[03:26:55] <eyynet4> only one round of RPS? blaphsemy!
[03:27:15] <eyynet4> someone always wants a "2 out of 3"
[03:27:20] <swl> I can call it in a loop, no problem there
[03:27:20] *** craftxbox is now known as snep
[03:28:39] <swl> I suppose I'll just truncate it at 99 chars and go from there
[03:28:40] <blahboybaz> beaky: I saw that - it is not that way in the other places it was me making a change to try and see what was going on and making that mistake - you caught that in exactly the 15 seconds it was like that.
[03:28:52] <eyynet4> what are you truncating?
[03:28:53] <blahboybaz> With that corrected the problem I'be been dealing with is revealed
[03:29:15] <eyynet4> why is the input anywhere near 90 chars
[03:29:16] *** Quits: soulisson_ (~soulisson@105.156.250.37) (Remote host closed the connection)
[03:29:30] *** Joins: soulisson (~soulisson@105.156.250.37)
[03:29:31] <blahboybaz> in the other paste site I mean - The prolem underlies that typo though
[03:29:43] *** Quits: trevors (~trevors@catv-89-132-207-129.catv.broadband.hu) (Quit: My MacBook has gone to sleep. ZZZzzz…)
[03:29:48] *** Quits: furrykef (~furrykef@ip68-229-199-137.ok.ok.cox.net) (Quit: computer throwing a tantrum)
[03:29:52] <eyynet4> your maximum line length should be the buffer size
[03:29:57] <swl> Right
[03:30:25] *** Quits: Joanna (uid57472@id-57472.tooting.irccloud.com) ()
[03:31:43] <swl> Well that seems to work
[03:31:46] <eyynet4> if you're not seeing a newline then you will have to keep reading until you get to the new line
[03:33:00] <swl> This is all my code, if that helps https://0x0.st/-V8j.zig\
[03:33:18] <swl> ingore the trailing backslash (typo)
[03:35:14] <eyynet4> "readUntilDelimiterOrEof" but what about "end of buffer"  ?
[03:35:39] *** Quits: Crescendo (~Crescendo@user/crescendo) (Read error: Connection reset by peer)
[03:35:44] <swl> It'll throw a StreamTooLong if it doesn't fit
[03:35:49] <lars8> what language is that?
[03:36:02] <eyynet4> hopefully they are storing length in "var buf"
[03:36:05] <eyynet4> zig
[03:38:48] *** Joins: Crescendo (~Crescendo@user/crescendo)
[03:39:45] *** Quits: tonsofpcs (~tonsofpcs@cpe-67-251-117-244.stny.res.rr.com) (Ping timeout: 255 seconds)
[03:43:17] *** Quits: Crescendo (~Crescendo@user/crescendo) (Read error: Connection reset by peer)
[03:43:57] <eyynet4> s/length/size/
[03:44:59] *** Joins: furrykef (~furrykef@ip68-229-199-137.ok.ok.cox.net)
[03:46:25] *** Quits: eyynet4 (~0x100@32.211.211.39) (Remote host closed the connection)
[03:46:32] *** Joins: jmcantrell (~weechat@user/jmcantrell)
[03:46:59] *** Quits: CodePoint (~BitShift@47.186.145.58) (Ping timeout: 268 seconds)
[03:47:51] *** Quits: night_wulfe (~wulfe@cpe-174-103-156-213.cinci.res.rr.com) (Ping timeout: 255 seconds)
[03:52:27] *** Joins: night_wulfe (~wulfe@cpe-174-103-156-213.cinci.res.rr.com)
[03:52:51] *** Joins: inky_ (~inky@46.71.131.226)
[03:52:59] *** Joins: silverwhitefish (~hidden@47.202.102.10)
[03:55:42] *** Joins: exvicesindaco (~exvicio@user/exvicesindaco)
[03:56:44] *** Quits: lunarkitty (uid501895@user/pyra) (Quit: Connection closed for inactivity)
[03:57:52] *** Joins: hposca (~hposca@node-1w7jr9phoke2t1sm518y8klap.ipv6.telus.net)
[03:59:48] *** Joins: __jmcantrell__ (~weechat@user/jmcantrell)
[04:00:25] *** Joins: jmcantre1 (~weechat@user/jmcantrell)
[04:00:33] *** Joins: Fluxx (~Fluxx@user/fluxx)
[04:01:14] *** Joins: sav (~sav@177.12.45.64)
[04:01:47] *** Joins: amigojapan (uid86330@id-86330.brockwell.irccloud.com)
[04:01:50] *** Quits: srikavin (~srikavin@user/srikavin) (Ping timeout: 252 seconds)
[04:02:24] *** Quits: mcfrdy (~mcfrdy@user/mcfrdy) (Ping timeout: 268 seconds)
[04:02:59] *** Quits: jmcantrell (~weechat@user/jmcantrell) (Ping timeout: 258 seconds)
[04:03:07] *** Quits: ixil (~ixil@82.197.178.137) (Remote host closed the connection)
[04:04:20] *** Joins: Joanna (uid57472@id-57472.tooting.irccloud.com)
[04:04:31] *** Quits: __jmcantrell__ (~weechat@user/jmcantrell) (Ping timeout: 258 seconds)
[04:05:15] *** Quits: kariosfox (~kariosfox@89.229.173.37) (Remote host closed the connection)
[04:07:05] *** Joins: mcfrdy (~mcfrdy@45.67.96.175)
[04:07:05] *** Quits: mcfrdy (~mcfrdy@45.67.96.175) (Changing host)
[04:07:05] *** Joins: mcfrdy (~mcfrdy@user/mcfrdy)
[04:09:15] *** Joins: merijn (~merijn@83-160-49-249.ip.xs4all.nl)
[04:11:15] *** Quits: SGautam (~SGautam@59.90.3.1) (Ping timeout: 255 seconds)
[04:11:53] *** Quits: Fluxx (~Fluxx@user/fluxx) (Quit: Leaving)
[04:11:56] *** Quits: beelzebuzz (~rasputin@gateway/tor-sasl/beelzebuzz) (Remote host closed the connection)
[04:14:07] *** Quits: merijn (~merijn@83-160-49-249.ip.xs4all.nl) (Ping timeout: 268 seconds)
[04:14:52] *** Quits: jmcantre1 (~weechat@user/jmcantrell) (Ping timeout: 258 seconds)
[04:17:09] *** Joins: beelzebuzz (~rasputin@gateway/tor-sasl/beelzebuzz)
[04:18:55] *** tarsier is now known as paulo_
[04:20:03] *** Joins: Crescendo (~Crescendo@user/crescendo)
[04:20:03] *** Joins: vin (~vin@user/crash)
[04:20:36] <vin> Hi, I am looking for a good external sort implementations in C/cpp. STXXL seems promising, I am also considering MCSTL. Any other libraries/implementations I can use?
[04:20:50] *** Quits: Crescendo (~Crescendo@user/crescendo) (Read error: Connection reset by peer)
[04:22:28] *** Joins: Crescendo (~Crescendo@user/crescendo)
[04:22:40] *** Joins: tonsofpcs (~tonsofpcs@cpe-67-251-117-244.stny.res.rr.com)
[04:24:56] *** Quits: audiofreeze (~audio@2603-8081-1800-00ad-3e0a-b712-75b1-c653.res6.spectrum.com) (Ping timeout: 255 seconds)
[04:26:15] <arahael> Do we have any real-world psuedo-standards about representing a point in time that attempts to cope with...  Varying calendars, varying degrees of accuracy, and weasley words such as "about", "approx", "estimated", and "before" or "after"?
[04:26:55] *** Joins: Null_A (~null_a@2601:645:8700:2290:b55a:33c2:1e1d:f229)
[04:28:40] *** Quits: entuland (~entuland@user/entuland) (Quit: Leaving)
[04:29:38] *** Joins: iftheraincomes (~iftherain@2804:14d:5c54:8fc4:96eb:4f3:66f:c1de)
[04:31:26] <arahael> I'm sort of just munging them into psuedo-iso8601, giving them a "calendar name", and a modifier word such as "approx".
[04:31:43] <arahael> (Ie, sorta-iso 8601, but definitely not iso 8601)
[04:40:03] *** Quits: lockywolf (~lockywolf@vultr-seoul-openbsd.lockywolf.net) (Quit: ZNC 1.8.2 - https://znc.in)
[04:40:19] *** Joins: lockywolf (~lockywolf@vultr-seoul-openbsd.lockywolf.net)
[04:41:08] *** Quits: shibboleth (~shibbolet@gateway/tor-sasl/shibboleth) (Quit: shibboleth)
[04:42:21] *** Quits: exvicesindaco (~exvicio@user/exvicesindaco) (Remote host closed the connection)
[04:48:17] *** Quits: danielrparks (~quassel@2600:1700:3f7b:20f:e7b9:fbe0:b49a:c432) (Quit: No Ping reply in 180 seconds.)
[04:48:36] *** Quits: blahboybaz (~blahboyba@c-67-183-225-44.hsd1.wa.comcast.net) (Ping timeout: 258 seconds)
[04:49:32] *** Joins: danielrparks (~quassel@2600:1700:3f7b:20f:abd8:3f5b:ead0:6c5a)
[04:50:15] *** Quits: img (~img@user/img) (Quit: ZNC 1.8.2 - https://znc.in)
[04:50:42] *** Joins: audiofreeze (~audio@2603-8081-1800-00ad-109e-c2ff-682c-e36f.res6.spectrum.com)
[04:53:27] *** Quits: soulisson (~soulisson@105.156.250.37) (Quit: Leaving)
[04:55:37] *** Quits: TheAceOfHearts (~TheAceOfH@24.41.239.76) (Quit: So long, and thanks for all the fish!)
[04:55:59] <paulo_> I'm bored
[04:56:04] <paulo_> suggest a programming project
[04:56:35] <arahael> paulo_: Define a date standard that accurately defines all human dates.
[04:56:46] *** Joins: lunarkitty (uid501895@user/pyra)
[04:57:34] <pulse> a pacman tetris hybrid where you control both games with the same keybinds
[05:02:12] *** Quits: Null_A (~null_a@2601:645:8700:2290:b55a:33c2:1e1d:f229) (Remote host closed the connection)
[05:02:18] <furrykef> Help me with my Old English dictionary
[05:04:34] *** Parts: vin (~vin@user/crash) (WeeChat 2.8)
[05:05:29] *** Joins: linext_ (~linext@pool-108-53-128-199.nwrknj.fios.verizon.net)
[05:05:43] *** Joins: img (~img@user/img)
[05:05:46] <linext_> i wrote a basic soduku solver
[05:05:50] <linext_> https://ibb.co/1mJ68Tm
[05:05:57] <linext_> https://paste.debian.net/1204725/
[05:06:49] <paulo_> linext_: cool, I don't liek sudoko though
[05:08:29] <linext_> any -1 is treated as an empty number box
[05:10:07] *** Quits: hposca (~hposca@node-1w7jr9phoke2t1sm518y8klap.ipv6.telus.net) (Ping timeout: 246 seconds)
[05:15:14] *** Joins: SGautam (~SGautam@59.90.3.1)
[05:19:20] *** Quits: mathAndRhetoric (~mathAndRh@2a02:8308:302:fe00:a19c:ef00:a89f:f497) (Quit: Going offline, see ya! (www.adiirc.com))
[05:21:14] *** Joins: SGautam_ (~SGautam@27.59.149.237)
[05:23:02] *** Joins: jmcantre1 (~weechat@user/jmcantrell)
[05:23:30] *** Joins: SGautam__ (~SGautam@59.90.3.1)
[05:24:15] *** Quits: Mangy_Dog (Mange@user/mangy-dog/x-7397214) (Ping timeout: 258 seconds)
[05:25:02] *** Quits: SGautam (~SGautam@59.90.3.1) (Ping timeout: 268 seconds)
[05:27:30] *** Quits: SGautam_ (~SGautam@27.59.149.237) (Ping timeout: 268 seconds)
[05:27:45] <paulo_> what's it like working in FacezonGoogAppFLIX?
[05:29:01] *** Quits: Inari (~Pinkishu@p4fd95cd6.dip0.t-ipconnect.de) (Quit: KVIrc 5.0.0 Aria http://www.kvirc.net/)
[05:35:37] *** Joins: pete443 (~pete@user/pete443)
[05:37:17] *** Quits: pete443_ (~pete@user/pete443) (Ping timeout: 258 seconds)
[05:42:09] *** Quits: anovick__ (~anovick@IGLD-83-130-153-93.inter.net.il) (Ping timeout: 255 seconds)
[05:42:34] *** Quits: NEYi (~NEYi@109.251.216.38) (Read error: Connection reset by peer)
[05:47:35] *** Joins: Null_A (~null_a@2601:645:8700:2290:b55a:33c2:1e1d:f229)
[05:48:09] *** paulo_ is now known as ugotserved
[05:49:42] *** Quits: jmcantre1 (~weechat@user/jmcantrell) (Ping timeout: 268 seconds)
[05:49:51] *** Quits: ugotserved (tarsier@user/paulo/x-9032687) (Remote host closed the connection)
[05:51:20] *** Joins: jmcantre1 (~weechat@user/jmcantrell)
[05:51:42] *** Joins: xff0x_ (~xff0x@2001:1a81:525b:ea00:2ecf:bd12:9251:d3e)
[05:54:28] *** Joins: vicfred_ (~vicfred@206.217.205.37)
[05:54:55] *** Quits: xff0x (~xff0x@port-92-193-131-10.dynamic.as20676.net) (Ping timeout: 250 seconds)
[05:55:13] *** Quits: pulse (~pulse@user/pulse) (Quit: pulse)
[05:56:58] *** Quits: audiofreeze (~audio@2603-8081-1800-00ad-109e-c2ff-682c-e36f.res6.spectrum.com) (Ping timeout: 256 seconds)
[05:58:20] *** Quits: vicfred (~vicfred@user/vicfred) (Ping timeout: 268 seconds)
[06:00:18] *** Joins: Izem (~rcg@bras-base-london1483w-grc-42-65-95-172-41.dsl.bell.ca)
[06:00:25] *** Joins: jmcantrell (~weechat@user/jmcantrell)
[06:00:54] *** Joins: mcfrdy- (~mcfrdy@45.67.96.175)
[06:01:30] *** Quits: mcfrdy (~mcfrdy@user/mcfrdy) (Ping timeout: 255 seconds)
[06:01:37] *** Quits: snake (~snake@user/snake) (Quit: Leaving)
[06:01:47] *** Quits: BrianG61UK (~BrianG61U@2a02:8010:66b7:dddd:656c:bc30:37c8:e4fe) (Quit: Leaving)
[06:02:20] *** Joins: brabrax_ (~brabrax@user/brabrax)
[06:02:57] *** Quits: freakazoid333 (~freakazoi@72.168.176.202) (Remote host closed the connection)
[06:03:19] *** Quits: brabrax (~brabrax@user/brabrax) (Ping timeout: 246 seconds)
[06:03:19] *** brabrax_ is now known as brabrax
[06:03:29] *** Quits: jmcantre1 (~weechat@user/jmcantrell) (Ping timeout: 255 seconds)
[06:06:07] *** Quits: Thedarkb-Desktop (~beno@2001:bb6:b404:188f:6ceb:4140:95d5:d5c1) (Ping timeout: 246 seconds)
[06:07:23] *** Quits: plastico (~plastico@2001:8a0:de6b:1a00:9d14:766e:70a8:dcea) (Quit: WeeChat 3.2)
[06:09:26] *** Joins: merijn (~merijn@83-160-49-249.ip.xs4all.nl)
[06:15:31] *** Joins: BrianG61UK (~BrianG61U@2a02:8010:66b7:dddd:1994:7817:5443:e753)
[06:17:20] *** rf` is now known as envex
[06:18:33] *** Joins: Silver_Golden (~Silver_Go@static.34.165.202.116.clients.your-server.de)
[06:19:19] <Izem> Wow the early unix manuals used to be a page for each program.
[06:19:48] *** Quits: Silver_Golden (~Silver_Go@static.34.165.202.116.clients.your-server.de) (Client Quit)
[06:20:05] *** Joins: Silver_Golden (~Silver_Go@static.34.165.202.116.clients.your-server.de)
[06:21:04] *** Joins: freakazoid333 (~freakazoi@72.168.176.62)
[06:21:20] *** Quits: Silver_Golden (~Silver_Go@static.34.165.202.116.clients.your-server.de) (Client Quit)
[06:21:37] *** Joins: Silver_Golden (~Silver_Go@static.34.165.202.116.clients.your-server.de)
[06:22:46] <nitrix> Aka "man page".
[06:22:51] *** Quits: Silver_Golden (~Silver_Go@static.34.165.202.116.clients.your-server.de) (Client Quit)
[06:23:05] *** Quits: DrMax (~DrMax@node-1w7jra94757fyzd6z78koagjd.ipv6.telus.net) (Ping timeout: 252 seconds)
[06:23:07] *** Joins: Silver_Golden (~Silver_Go@static.34.165.202.116.clients.your-server.de)
[06:24:23] *** Quits: Silver_Golden (~Silver_Go@static.34.165.202.116.clients.your-server.de) (Client Quit)
[06:24:39] *** Joins: Silver_Golden (~Silver_Go@static.34.165.202.116.clients.your-server.de)
[06:25:56] *** Quits: Silver_Golden (~Silver_Go@static.34.165.202.116.clients.your-server.de) (Client Quit)
[06:26:13] *** Joins: Silver_Golden (~Silver_Go@static.34.165.202.116.clients.your-server.de)
[06:27:27] *** Quits: Silver_Golden (~Silver_Go@static.34.165.202.116.clients.your-server.de) (Client Quit)
[06:27:43] *** Joins: Silver_Golden (~Silver_Go@static.34.165.202.116.clients.your-server.de)
[06:28:30] *** Joins: Xaldafax (~xaldafax@cpe-198-72-160-101.socal.res.rr.com)
[06:28:59] *** Quits: Silver_Golden (~Silver_Go@static.34.165.202.116.clients.your-server.de) (Client Quit)
[06:29:15] *** Joins: Silver_Golden (~Silver_Go@static.34.165.202.116.clients.your-server.de)
[06:30:30] *** Quits: Silver_Golden (~Silver_Go@static.34.165.202.116.clients.your-server.de) (Client Quit)
[06:30:47] *** Joins: Silver_Golden (~Silver_Go@static.34.165.202.116.clients.your-server.de)
[06:32:02] *** Quits: Silver_Golden (~Silver_Go@static.34.165.202.116.clients.your-server.de) (Client Quit)
[06:32:18] *** Joins: Silver_Golden (~Silver_Go@static.34.165.202.116.clients.your-server.de)
[06:33:18] *** Joins: guest9473 (~user@2001:5b0:2a1a:988:90aa:359a:add1:1f12)
[06:33:33] *** Quits: Silver_Golden (~Silver_Go@static.34.165.202.116.clients.your-server.de) (Client Quit)
[06:33:50] *** Joins: Silver_Golden (~Silver_Go@static.34.165.202.116.clients.your-server.de)
[06:35:05] *** Quits: Silver_Golden (~Silver_Go@static.34.165.202.116.clients.your-server.de) (Client Quit)
[06:35:21] *** Joins: Silver_Golden (~Silver_Go@static.34.165.202.116.clients.your-server.de)
[06:36:29] *** Joins: DrMax (~DrMax@node-1w7jra94757g1wxw6u3ydmzl1.ipv6.telus.net)
[06:36:36] *** Quits: Silver_Golden (~Silver_Go@static.34.165.202.116.clients.your-server.de) (Client Quit)
[06:36:52] *** Joins: Silver_Golden (~Silver_Go@static.34.165.202.116.clients.your-server.de)
[06:38:08] *** Quits: Silver_Golden (~Silver_Go@static.34.165.202.116.clients.your-server.de) (Client Quit)
[06:38:24] *** Joins: Silver_Golden (~Silver_Go@static.34.165.202.116.clients.your-server.de)
[06:39:39] *** Quits: Silver_Golden (~Silver_Go@static.34.165.202.116.clients.your-server.de) (Client Quit)
[06:39:55] *** Joins: Silver_Golden (~Silver_Go@static.34.165.202.116.clients.your-server.de)
[06:40:21] *** Quits: amigojapan (uid86330@id-86330.brockwell.irccloud.com) (Quit: Connection closed for inactivity)
[06:40:24] *** Joins: audiofreeze (~audio@2603-8081-1800-00ad-c317-cfad-189f-bca9.res6.spectrum.com)
[06:41:11] *** Quits: Silver_Golden (~Silver_Go@static.34.165.202.116.clients.your-server.de) (Client Quit)
[06:41:26] *** Joins: Silver_Golden (~Silver_Go@static.34.165.202.116.clients.your-server.de)
[06:41:46] *** Joins: amigojapan (uid86330@id-86330.brockwell.irccloud.com)
[06:42:42] *** Quits: Silver_Golden (~Silver_Go@static.34.165.202.116.clients.your-server.de) (Client Quit)
[06:42:58] *** Joins: Silver_Golden (~Silver_Go@static.34.165.202.116.clients.your-server.de)
[06:43:36] *** Quits: merijn (~merijn@83-160-49-249.ip.xs4all.nl) (Ping timeout: 258 seconds)
[06:44:11] <Izem> Is a user going to configure a MTA to use mail? Or should everthing I need be in mail(1)?
[06:44:14] *** Quits: Silver_Golden (~Silver_Go@static.34.165.202.116.clients.your-server.de) (Client Quit)
[06:44:31] *** Joins: Silver_Golden (~Silver_Go@static.34.165.202.116.clients.your-server.de)
[06:45:46] *** Quits: Silver_Golden (~Silver_Go@static.34.165.202.116.clients.your-server.de) (Client Quit)
[06:46:01] *** Joins: vdamewood (~vdamewood@fedora/vdamewood)
[06:46:01] *** Joins: Silver_Golden (~Silver_Go@static.34.165.202.116.clients.your-server.de)
[06:47:17] *** Quits: Silver_Golden (~Silver_Go@static.34.165.202.116.clients.your-server.de) (Client Quit)
[06:47:33] *** Joins: Silver_Golden (~Silver_Go@static.34.165.202.116.clients.your-server.de)
[06:48:34] *** Quits: rustyshackleford (uid236774@id-236774.brockwell.irccloud.com) (Quit: Connection closed for inactivity)
[06:48:48] *** Quits: Silver_Golden (~Silver_Go@static.34.165.202.116.clients.your-server.de) (Client Quit)
[06:49:04] *** Joins: Silver_Golden (~Silver_Go@static.34.165.202.116.clients.your-server.de)
[06:49:41] *** Joins: __jmcantrell__ (~weechat@user/jmcantrell)
[06:50:10] *** Joins: vinleod (~vdamewood@fedora/vdamewood)
[06:50:20] *** Quits: Silver_Golden (~Silver_Go@static.34.165.202.116.clients.your-server.de) (Client Quit)
[06:50:35] *** Joins: Silver_Golden (~Silver_Go@static.34.165.202.116.clients.your-server.de)
[06:51:00] *** Quits: vdamewood (~vdamewood@fedora/vdamewood) (Ping timeout: 255 seconds)
[06:51:51] *** Quits: Silver_Golden (~Silver_Go@static.34.165.202.116.clients.your-server.de) (Client Quit)
[06:52:07] *** Joins: Silver_Golden (~Silver_Go@static.34.165.202.116.clients.your-server.de)
[06:52:59] *** Quits: jmcantrell (~weechat@user/jmcantrell) (Ping timeout: 255 seconds)
[06:53:23] *** Quits: Silver_Golden (~Silver_Go@static.34.165.202.116.clients.your-server.de) (Client Quit)
[06:53:38] *** Joins: Silver_Golden (~Silver_Go@static.34.165.202.116.clients.your-server.de)
[06:54:54] *** Quits: Silver_Golden (~Silver_Go@static.34.165.202.116.clients.your-server.de) (Client Quit)
[06:55:11] *** Joins: Silver_Golden (~Silver_Go@static.34.165.202.116.clients.your-server.de)
[06:55:51] *** Joins: pandakekok9 (~job@wikimedia-commons/pandakekok9)
[06:56:26] *** Quits: Silver_Golden (~Silver_Go@static.34.165.202.116.clients.your-server.de) (Client Quit)
[06:56:42] *** Joins: Silver_Golden (~Silver_Go@static.34.165.202.116.clients.your-server.de)
[06:56:43] *** Joins: pizdets (~pizdets@183.182.111.100)
[06:56:55] *** Quits: pizdets_ (~pizdets@183.182.110.194) (Ping timeout: 268 seconds)
[06:57:38] *** Joins: trevors (~trevors@catv-89-132-207-129.catv.broadband.hu)
[06:57:57] *** Quits: Silver_Golden (~Silver_Go@static.34.165.202.116.clients.your-server.de) (Client Quit)
[06:58:01] <Izem> yeah, just mail(1)
[06:58:10] <Izem> MTA is for server side
[06:58:13] *** Joins: Silver_Golden (~Silver_Go@static.34.165.202.116.clients.your-server.de)
[06:59:06] *** Quits: zoey (~zoey@2a02:8084:a080:9e00:7c8c:4b88:b1b8:70e1) (Ping timeout: 255 seconds)
[06:59:16] <guest9473> what's a good alternative to Qt/Qt creator that's 1) cross platform 2) completely free (no licensing)
[06:59:23] *** Quits: Rounin (~david@cm-84.212.130.215.getinternet.no) (Ping timeout: 268 seconds)
[06:59:29] *** Quits: Silver_Golden (~Silver_Go@static.34.165.202.116.clients.your-server.de) (Client Quit)
[06:59:45] *** Joins: Silver_Golden (~Silver_Go@static.34.165.202.116.clients.your-server.de)
[06:59:51] *** Quits: m8wzx8 (~m8wzx8@user/m8wzx8) (Quit: Leaving)
[07:01:00] *** Quits: Silver_Golden (~Silver_Go@static.34.165.202.116.clients.your-server.de) (Client Quit)
[07:01:05] *** Joins: m8wzx8 (~m8wzx8@user/m8wzx8)
[07:01:15] <nisstyre> guest9473: DearImgui
[07:01:15] *** Joins: Silver_Golden (~Silver_Go@static.34.165.202.116.clients.your-server.de)
[07:01:44] <guest9473> thanks. ill look at it
[07:01:51] <nisstyre> np
[07:02:09] <nisstyre> oh it does have a license
[07:02:11] <nisstyre> MIT license
[07:02:15] <nisstyre> but that's a very permissive license
[07:02:24] *** Quits: trevors (~trevors@catv-89-132-207-129.catv.broadband.hu) (Ping timeout: 252 seconds)
[07:02:32] *** Quits: Silver_Golden (~Silver_Go@static.34.165.202.116.clients.your-server.de) (Client Quit)
[07:02:47] *** Joins: Silver_Golden (~Silver_Go@static.34.165.202.116.clients.your-server.de)
[07:02:47] <nisstyre> you can basically do whatever you want as long as you don't try to change the license
[07:02:53] *** Quits: kwilczynski (sid379192@user/kwilczynski) ()
[07:03:37] *** Quits: m8wzx8 (~m8wzx8@user/m8wzx8) (Client Quit)
[07:03:42] <guest9473> MIT = BSD ?
[07:03:48] <nisstyre> no, different things
[07:04:03] *** Quits: Silver_Golden (~Silver_Go@static.34.165.202.116.clients.your-server.de) (Client Quit)
[07:04:20] *** Joins: Silver_Golden (~Silver_Go@static.34.165.202.116.clients.your-server.de)
[07:05:35] *** Quits: Silver_Golden (~Silver_Go@static.34.165.202.116.clients.your-server.de) (Client Quit)
[07:05:35] <arahael> Keep in mind that there are several different versions of MIT and BSD licenses.  Always check.
[07:05:50] *** Joins: Silver_Golden (~Silver_Go@static.34.165.202.116.clients.your-server.de)
[07:06:44] *** Quits: lunarkitty (uid501895@user/pyra) (Quit: Connection closed for inactivity)
[07:07:06] *** Quits: Silver_Golden (~Silver_Go@static.34.165.202.116.clients.your-server.de) (Client Quit)
[07:07:22] *** Joins: Silver_Golden (~Silver_Go@static.34.165.202.116.clients.your-server.de)
[07:08:11] *** Joins: m3wzx5 (~m3wzx5@gateway/tor-sasl/m3wzx5)
[07:08:24] *** Quits: m3wzx5 (~m3wzx5@gateway/tor-sasl/m3wzx5) (Changing host)
[07:08:24] *** Joins: m3wzx5 (~m3wzx5@user/m3wzx5)
[07:08:38] *** Quits: Silver_Golden (~Silver_Go@static.34.165.202.116.clients.your-server.de) (Client Quit)
[07:08:44] *** Joins: bkool (~bkool@c-73-8-91-229.hsd1.il.comcast.net)
[07:08:54] *** Joins: Silver_Golden (~Silver_Go@static.34.165.202.116.clients.your-server.de)
[07:10:09] *** Quits: Silver_Golden (~Silver_Go@static.34.165.202.116.clients.your-server.de) (Client Quit)
[07:10:26] *** Joins: Silver_Golden (~Silver_Go@static.34.165.202.116.clients.your-server.de)
[07:10:59] *** Quits: Twipply (~Twipply@user/twipply) (Quit: Leaving)
[07:11:41] *** Quits: Silver_Golden (~Silver_Go@static.34.165.202.116.clients.your-server.de) (Client Quit)
[07:11:56] *** Joins: Silver_Golden (~Silver_Go@static.34.165.202.116.clients.your-server.de)
[07:13:12] *** Quits: Silver_Golden (~Silver_Go@static.34.165.202.116.clients.your-server.de) (Client Quit)
[07:13:28] *** Joins: Silver_Golden (~Silver_Go@static.34.165.202.116.clients.your-server.de)
[07:14:44] *** Quits: Silver_Golden (~Silver_Go@static.34.165.202.116.clients.your-server.de) (Client Quit)
[07:14:59] *** Joins: Silver_Golden (~Silver_Go@static.34.165.202.116.clients.your-server.de)
[07:15:51] *** Quits: guest9473 (~user@2001:5b0:2a1a:988:90aa:359a:add1:1f12) (Read error: Connection reset by peer)
[07:16:15] *** Quits: Silver_Golden (~Silver_Go@static.34.165.202.116.clients.your-server.de) (Client Quit)
[07:16:31] *** Joins: Silver_Golden (~Silver_Go@static.34.165.202.116.clients.your-server.de)
[07:16:53] *** Quits: bkool (~bkool@c-73-8-91-229.hsd1.il.comcast.net) (Read error: No route to host)
[07:16:55] *** Joins: bkool_ (~bkool@c-73-8-91-229.hsd1.il.comcast.net)
[07:17:06] *** Quits: bkool_ (~bkool@c-73-8-91-229.hsd1.il.comcast.net) (Client Quit)
[07:17:47] *** Quits: Silver_Golden (~Silver_Go@static.34.165.202.116.clients.your-server.de) (Client Quit)
[07:18:02] *** Joins: Silver_Golden (~Silver_Go@static.34.165.202.116.clients.your-server.de)
[07:19:18] *** Quits: Silver_Golden (~Silver_Go@static.34.165.202.116.clients.your-server.de) (Client Quit)
[07:19:34] *** Joins: Silver_Golden (~Silver_Go@static.34.165.202.116.clients.your-server.de)
[07:20:50] *** Quits: Silver_Golden (~Silver_Go@static.34.165.202.116.clients.your-server.de) (Client Quit)
[07:21:06] *** Joins: Silver_Golden (~Silver_Go@static.34.165.202.116.clients.your-server.de)
[07:21:55] *** Quits: Crescendo (~Crescendo@user/crescendo) (Read error: Connection reset by peer)
[07:22:21] *** Quits: Silver_Golden (~Silver_Go@static.34.165.202.116.clients.your-server.de) (Client Quit)
[07:22:32] *** Joins: Crescendo (~Crescendo@user/crescendo)
[07:22:38] *** Joins: Silver_Golden (~Silver_Go@static.34.165.202.116.clients.your-server.de)
[07:22:48] *** Quits: Crescendo (~Crescendo@user/crescendo) (Read error: Connection reset by peer)
[07:23:53] *** Quits: Silver_Golden (~Silver_Go@static.34.165.202.116.clients.your-server.de) (Client Quit)
[07:24:09] *** Joins: Silver_Golden (~Silver_Go@static.34.165.202.116.clients.your-server.de)
[07:25:01] *** Quits: vicfred_ (~vicfred@206.217.205.37) (Quit: Leaving)
[07:25:13] *** Joins: vicfred (~vicfred@user/vicfred)
[07:25:24] *** Quits: Silver_Golden (~Silver_Go@static.34.165.202.116.clients.your-server.de) (Client Quit)
[07:25:40] *** Joins: Silver_Golden (~Silver_Go@static.34.165.202.116.clients.your-server.de)
[07:26:56] *** Quits: Silver_Golden (~Silver_Go@static.34.165.202.116.clients.your-server.de) (Client Quit)
[07:27:13] *** Joins: Silver_Golden (~Silver_Go@static.34.165.202.116.clients.your-server.de)
[07:28:27] *** Quits: Silver_Golden (~Silver_Go@static.34.165.202.116.clients.your-server.de) (Client Quit)
[07:28:39] *** Joins: Crescendo (~Crescendo@user/crescendo)
[07:28:43] *** Joins: Silver_Golden (~Silver_Go@static.34.165.202.116.clients.your-server.de)
[07:29:45] *** Quits: Crescendo (~Crescendo@user/crescendo) (Read error: Connection reset by peer)
[07:29:59] *** Quits: Silver_Golden (~Silver_Go@static.34.165.202.116.clients.your-server.de) (Client Quit)
[07:30:16] *** Joins: Silver_Golden (~Silver_Go@static.34.165.202.116.clients.your-server.de)
[07:31:31] *** Quits: Silver_Golden (~Silver_Go@static.34.165.202.116.clients.your-server.de) (Client Quit)
[07:31:46] *** Joins: Silver_Golden (~Silver_Go@static.34.165.202.116.clients.your-server.de)
[07:32:51] *** Quits: LiftLeft (~LiftLeft@216-26-118-34.dynamic.nelson.airstreamcomm.net) (Ping timeout: 255 seconds)
[07:33:02] *** Quits: Silver_Golden (~Silver_Go@static.34.165.202.116.clients.your-server.de) (Client Quit)
[07:33:18] *** Joins: Silver_Golden (~Silver_Go@static.34.165.202.116.clients.your-server.de)
[07:34:34] *** Quits: Silver_Golden (~Silver_Go@static.34.165.202.116.clients.your-server.de) (Client Quit)
[07:34:50] *** Joins: Silver_Golden (~Silver_Go@static.34.165.202.116.clients.your-server.de)
[07:35:27] *** Quits: lucf117 (~lucf117@user/lucf117) (Quit: Leaving)
[07:36:06] *** Quits: Silver_Golden (~Silver_Go@static.34.165.202.116.clients.your-server.de) (Client Quit)
[07:36:21] *** Joins: Silver_Golden (~Silver_Go@static.34.165.202.116.clients.your-server.de)
[07:37:37] *** Quits: Silver_Golden (~Silver_Go@static.34.165.202.116.clients.your-server.de) (Client Quit)
[07:37:53] *** Joins: Silver_Golden (~Silver_Go@static.34.165.202.116.clients.your-server.de)
[07:38:15] *** Joins: Crescendo (~Crescendo@user/crescendo)
[07:39:04] *** Quits: gitgood (~gitgood@80-44-9-45.dynamic.dsl.as9105.com) (Ping timeout: 252 seconds)
[07:39:09] *** Quits: Silver_Golden (~Silver_Go@static.34.165.202.116.clients.your-server.de) (Client Quit)
[07:39:16] *** Joins: nekobyte (~nekoIsAL@user/nekobit)
[07:39:25] *** Joins: Silver_Golden (~Silver_Go@static.34.165.202.116.clients.your-server.de)
[07:40:40] *** Quits: Silver_Golden (~Silver_Go@static.34.165.202.116.clients.your-server.de) (Client Quit)
[07:40:56] *** Joins: Silver_Golden (~Silver_Go@static.34.165.202.116.clients.your-server.de)
[07:42:12] *** Quits: Silver_Golden (~Silver_Go@static.34.165.202.116.clients.your-server.de) (Client Quit)
[07:42:27] *** Joins: Silver_Golden (~Silver_Go@static.34.165.202.116.clients.your-server.de)
[07:42:57] *** Joins: arcatech (~arcatech@user/arcatech)
[07:43:14] *** Quits: dld (~davidlowr@73.61.8.96) (Ping timeout: 250 seconds)
[07:43:44] *** Quits: Silver_Golden (~Silver_Go@static.34.165.202.116.clients.your-server.de) (Client Quit)
[07:44:00] *** Joins: Silver_Golden (~Silver_Go@static.34.165.202.116.clients.your-server.de)
[07:45:15] *** Quits: Silver_Golden (~Silver_Go@static.34.165.202.116.clients.your-server.de) (Client Quit)
[07:45:24] *** Joins: dld (~davidlowr@2601:197:600:1210:9957:7449:5ffc:ef4d)
[07:45:31] *** Joins: Silver_Golden (~Silver_Go@static.34.165.202.116.clients.your-server.de)
[07:45:45] *** Joins: LiftLeft (~LiftLeft@154.21.114.207)
[07:46:25] *** Joins: leduyquang753 (~leduyquan@user/leduyquang753)
[07:46:38] *** Joins: liluzer (~zenix@118.69.128.37)
[07:46:47] *** Quits: Silver_Golden (~Silver_Go@static.34.165.202.116.clients.your-server.de) (Client Quit)
[07:47:02] *** Joins: Silver_Golden (~Silver_Go@static.34.165.202.116.clients.your-server.de)
[07:48:19] *** Quits: Silver_Golden (~Silver_Go@static.34.165.202.116.clients.your-server.de) (Client Quit)
[07:48:35] *** Joins: Silver_Golden (~Silver_Go@static.34.165.202.116.clients.your-server.de)
[07:48:49] *** Quits: beelzebuzz (~rasputin@gateway/tor-sasl/beelzebuzz) (Ping timeout: 244 seconds)
[07:49:50] *** Quits: Silver_Golden (~Silver_Go@static.34.165.202.116.clients.your-server.de) (Client Quit)
[07:50:07] *** Joins: Silver_Golden (~Silver_Go@static.34.165.202.116.clients.your-server.de)
[07:51:22] *** Quits: Silver_Golden (~Silver_Go@static.34.165.202.116.clients.your-server.de) (Client Quit)
[07:51:38] *** Joins: Silver_Golden (~Silver_Go@static.34.165.202.116.clients.your-server.de)
[07:52:54] *** Quits: Silver_Golden (~Silver_Go@static.34.165.202.116.clients.your-server.de) (Client Quit)
[07:53:12] *** Joins: Silver_Golden (~Silver_Go@static.34.165.202.116.clients.your-server.de)
[07:53:50] *** Quits: nekobyte (~nekoIsAL@user/nekobit) (Quit: don't forget, you're here forever :3)
[07:54:26] *** Quits: Silver_Golden (~Silver_Go@static.34.165.202.116.clients.your-server.de) (Client Quit)
[07:54:42] *** Joins: Silver_Golden (~Silver_Go@static.34.165.202.116.clients.your-server.de)
[07:55:28] *** Joins: nekonibble (~nekonIsL@user/nekobit)
[07:55:58] *** Quits: Silver_Golden (~Silver_Go@static.34.165.202.116.clients.your-server.de) (Client Quit)
[07:56:14] *** Joins: Silver_Golden (~Silver_Go@static.34.165.202.116.clients.your-server.de)
[07:57:29] *** Quits: Silver_Golden (~Silver_Go@static.34.165.202.116.clients.your-server.de) (Client Quit)
[07:57:44] *** Joins: Silver_Golden (~Silver_Go@static.34.165.202.116.clients.your-server.de)
[07:59:00] *** Quits: Silver_Golden (~Silver_Go@static.34.165.202.116.clients.your-server.de) (Client Quit)
[07:59:16] *** Joins: Silver_Golden (~Silver_Go@static.34.165.202.116.clients.your-server.de)
[07:59:17] *** Quits: nekonibble (~nekonIsL@user/nekobit) (Read error: Connection reset by peer)
[07:59:27] *** Joins: nekonibble (~nekonIsL@user/nekobit)
[07:59:30] *** Joins: mcfrdy (~mcfrdy@45.67.96.175)
[07:59:30] *** Quits: mcfrdy (~mcfrdy@45.67.96.175) (Changing host)
[07:59:30] *** Joins: mcfrdy (~mcfrdy@user/mcfrdy)
[07:59:45] *** Joins: TechTest (uid283215@id-283215.tooting.irccloud.com)
[08:00:00] *** Joins: beelzebuzz (~rasputin@gateway/tor-sasl/beelzebuzz)
[08:00:27] *** Quits: mcfrdy- (~mcfrdy@45.67.96.175) (Ping timeout: 265 seconds)
[08:00:32] *** Quits: Silver_Golden (~Silver_Go@static.34.165.202.116.clients.your-server.de) (Client Quit)
[08:00:37] *** ChanServ sets mode: +o InPhase
[08:00:46] *** Quits: img (~img@user/img) (Quit: ZNC 1.8.2 - https://znc.in)
[08:00:48] *** Joins: Silver_Golden (~Silver_Go@static.34.165.202.116.clients.your-server.de)
[08:00:49] *** InPhase sets mode: +b Silver_Golden!*@*
[08:01:29] <InPhase> Silver_Golden: Fix the chronic bouncing and drop a note in ##programming-ops to get -b.  Thanks.
[08:01:45] *** InPhase sets mode: -o InPhase
[08:02:04] *** Quits: Silver_Golden (~Silver_Go@static.34.165.202.116.clients.your-server.de) (Client Quit)
[08:02:52] *** Joins: guy_frm_yogaland (~gourab@2409:4062:2d00:1eb7:b6cb:47af:7cf2:b4dd)
[08:05:23] *** Quits: iftheraincomes (~iftherain@2804:14d:5c54:8fc4:96eb:4f3:66f:c1de) (Quit: iftheraincomes)
[08:05:58] *** Quits: nekonibble (~nekonIsL@user/nekobit) (Remote host closed the connection)
[08:06:11] *** Joins: nekonibble (~nekonIsL@user/nekobit)
[08:06:26] *** Joins: vysn (~vysn@user/vysn)
[08:10:59] <guy_frm_yogaland> hello every1
[08:11:07] <guy_frm_yogaland>  I need to create a shell script on ubuntu which would download and install a particular software automatically when run the script
[08:11:15] <guy_frm_yogaland>  there is a github repo url used with api.github.com, I need to search and download a particular version and platform build of that software, how can I do that?
[08:11:25] <guy_frm_yogaland> I tried with wget
[08:12:03] <InPhase> wget is reasonable if you know exactly what to grab.
[08:12:27] <InPhase> If you need to parse data and then make a decision about what to grab, abandon bash immediately, and write this in Python.
[08:12:29] <guy_frm_yogaland> i have the url link say this one
[08:12:43] <guy_frm_yogaland> https://api.github.com/repos/VSCodium/vscodium/releases/latest
[08:13:07] *** __jmcantrell__ is now known as jmcantrell
[08:13:23] <guy_frm_yogaland> from this site I want to install amd64 version for ubuntu
[08:13:33] <guy_frm_yogaland> sry download
[08:13:58] *** Quits: arcatech (~arcatech@user/arcatech) (Quit: Bye.)
[08:15:14] *** Joins: img (~img@user/img)
[08:16:50] *** Quits: Crescendo (~Crescendo@user/crescendo) (Read error: Connection reset by peer)
[08:18:16] *** Quits: beelzebuzz (~rasputin@gateway/tor-sasl/beelzebuzz) (Ping timeout: 244 seconds)
[08:19:18] *** Joins: hoochmonger (~hoochmong@user/hoochmonger)
[08:19:57] <InPhase> guy_frm_yogaland: Here's a starter hint.  Clean it up of course:  d = json.loads(urllib.request.urlopen('https://api.github.com/repos/VSCodium/vscodium/releases/latest').read());  L = [d['assets'][i]['browser_download_url'] for i in range(len(d['assets']))]
[08:20:14] <InPhase> guy_frm_yogaland: Needs import json and import urllib
[08:20:24] <guy_frm_yogaland> ok, let me try it
[08:21:56] <InPhase> guy_frm_yogaland: A second filtering list comprehension, and you'll have the amd64 url.
[08:22:27] *** Joins: herjazz (~herjazz@p6758124-ipngn30801marunouchi.tokyo.ocn.ne.jp)
[08:22:32] <InPhase> Then you decide if you want to move the whole thing into Python, or just farm out this url extracting portion and do the primary in bash.
[08:22:38] *** Quits: Trashlord (~trash@user/trashlord) (Quit: ZNC 1.8.2 - https://znc.in)
[08:22:54] <guy_frm_yogaland> ok
[08:24:02] *** Joins: beelzebuzz (~rasputin@gateway/tor-sasl/beelzebuzz)
[08:24:37] *** Joins: Trashlord (~trash@user/trashlord)
[08:29:38] *** Quits: beelzebuzz (~rasputin@gateway/tor-sasl/beelzebuzz) (Ping timeout: 244 seconds)
[08:32:21] *** Quits: Quietwalker (~X@24.162.16.145) (Ping timeout: 265 seconds)
[08:36:31] *** Joins: wei2912 (~wei2912@112.199.250.21)
[08:38:03] *** Joins: Crescendo (~Crescendo@user/crescendo)
[08:38:19] *** Quits: sav (~sav@177.12.45.64) (Quit: .)
[08:40:03] *** Joins: merijn (~merijn@83-160-49-249.ip.xs4all.nl)
[08:43:31] <sunny93> What's definition of "procedure call"?
[08:43:57] *** Quits: hoochmonger (~hoochmong@user/hoochmonger) (Ping timeout: 255 seconds)
[08:47:02] *** Quits: scabby (~scabby@user/scabootssca) (Ping timeout: 258 seconds)
[08:48:34] *** Quits: elkalamar_ (elkalamar@gateway/vpn/airvpn/elkalamar) (Ping timeout: 258 seconds)
[08:50:31] <Izem> invoking a subroutine?
[08:51:14] *** Joins: yaboiburner (~yaboiburn@c-69-180-160-103.hsd1.mn.comcast.net)
[08:52:10] *** Quits: elnavigator (~elnavigat@105.196.63.39) (Ping timeout: 265 seconds)
[08:53:20] *** Quits: a-a (uid506782@id-506782.tooting.irccloud.com) (Quit: Connection closed for inactivity)
[08:54:13] <beaky> hello what is the most efficient way to implement an array in a purely functional programming language
[08:54:21] *** Joins: rustyshackleford (uid236774@id-236774.brockwell.irccloud.com)
[08:55:23] <Izem> depends on the language
[08:55:24] <beaky> inefficient ways are like using a list and using lambda encoding of a map
[08:55:48] *** Quits: AbleBacon (~AbleBacon@user/AbleBacon) (Read error: Connection reset by peer)
[08:55:57] <Izem> does any give you memory access? :P
[08:56:05] <beaky> what is memory access
[08:56:40] <Izem> like allocating memory
[08:56:47] <beaky> memory access is cheating because the memory is like a primitive kind of array
[08:57:00] *** Quits: nekonibble (~nekonIsL@user/nekobit) (Quit: free(neko);)
[08:57:11] *** Quits: mcfrdy (~mcfrdy@user/mcfrdy) (Ping timeout: 255 seconds)
[08:57:43] *** Joins: elnavigator (~elnavigat@105.196.63.39)
[08:57:47] <jeaye> beaky: https://hypirion.com/musings/understanding-persistent-vector-pt-1
[08:58:09] <jeaye> "in a purely ..." or "for a purely ..."
[08:58:30] <jeaye> I can see how someone might say the first and want the second.
[08:58:38] <jeaye> If so, that link is a good place to start.
[08:59:10] <beaky> nice i think clojures vectors are a good approach
[09:01:03] *** Joins: TheAceOfHearts (~TheAceOfH@24.41.239.76)
[09:01:33] <lars8> a bit more than you asked for, but.. https://www.researchgate.net/publication/221241312_Regular_Shape-polymorphic_Parallel_Arrays_in_Haskell
[09:01:38] <beaky> the copy-on-write tree approach
[09:02:35] <pikapika> beaky, hi
[09:02:43] *** Quits: elnavigator (~elnavigat@105.196.63.39) (Ping timeout: 268 seconds)
[09:03:00] <beaky> hello im beaky
[09:04:01] <beaky> nice i like the repa approach though i think its also cheating by using ghc primitive unboxed array types
[09:05:33] <beaky> whereas the clojure vector approach in theory does not rely on primitive unboxed arrays i think
[09:06:13] *** Joins: beelzebuzz (~rasputin@gateway/tor-sasl/beelzebuzz)
[09:07:31] *** Joins: elnavigator (~elnavigat@105.196.63.39)
[09:07:38] *** swn_ is now known as swn
[09:10:09] *** Joins: src (~src@user/src)
[09:11:59] *** Quits: LiftLeft (~LiftLeft@154.21.114.207) (Ping timeout: 265 seconds)
[09:14:23] *** Joins: elkalamar_ (elkalamar@gateway/vpn/airvpn/elkalamar)
[09:14:26] *** Quits: merijn (~merijn@83-160-49-249.ip.xs4all.nl) (Ping timeout: 268 seconds)
[09:18:05] *** Quits: hv99 (~hv99@wireguard/tunneler/hv99) (Ping timeout: 258 seconds)
[09:24:57] <nitrix> beaky, It seems to me like asking for the most efficient way to implement an integer. It should really be a primitive, otherwise you're stuck emulating it with church encoding or in the array case, a very large product types, or worse, a tree.
[09:26:17] <nitrix> beaky, Does your pure functional language allows controlled mutation (maybe an effect system or similar)?
[09:26:52] <beaky> yes i think trees are the worst case (its how integers are implemented in coq)
[09:27:47] <beaky> tho coq very recently now has primitive arrays
[09:27:59] <beaky> (but not primitive ints lol)
[09:28:42] <beaky> no effects in coq its hardcore
[09:29:17] <nitrix> Without effects, the only way to modify an immutable value is by creating a new one, which means O(n) for every modification of an element of an array. Technically you could amortize the cost and collect the changes into some sort of "diff list", but then you're just piling diff lists onto diff lists, until it degenerates to O(n^2).
[09:29:50] *** Quits: soapsudsxx (~soapsudsx@209.221.40.138) (Remote host closed the connection)
[09:30:02] *** Quits: riff-IRC (~riff-IRC@user/riff-irc) (Remote host closed the connection)
[09:31:02] <nitrix> For immutable trees it's nicer. You can get to O(log n) where you're creating newer nodes when a leaf changes.
[09:31:21] <nitrix> I guess the key can be the array index, so there you go, O(log n) arrays.
[09:31:38] *** Joins: soapsudsxx (~soapsudsx@209.221.40.138)
[09:31:46] <beaky> yes that is how they implemented arrays for compcert
[09:32:12] <beaky> indexed by positive binary numbers
[09:32:34] <nitrix> I don't think you can get anything better for a pure language without effects.
[09:34:18] <beaky> i think the clojure vector approach is more efficient but the one they used is probably easier to prove things about https://github.com/AbsInt/CompCert/blob/04f499c632a76e460560fc9ec4e14d8216e7fc18/lib/Maps.v#L184
[09:34:19] <nitrix> I worked myself in a corner like that years ago in Haskell and ended up inventing what Rust calls today "interior mutability", but that was only possible because Haskell had unsafePerformIO as an escape hatch.
[09:34:41] <beaky> nice i like rust
[09:34:58] <nitrix> That's why I bring it up :)
[09:36:09] <nitrix> You need effects though, otherwise you're stuck with the logarithmic mutations.
[09:36:41] <beaky> how does hardware get away with not being logarithmic
[09:37:23] *** Quits: guy_frm_yogaland (~gourab@2409:4062:2d00:1eb7:b6cb:47af:7cf2:b4dd) (Read error: Connection reset by peer)
[09:37:35] <nitrix> Because it gets rid of the unnecessary restrictive abstraction that was added.
[09:39:58] <beaky> but even in hardware isn't there like a logarithmic (but constant since the width is fixed) propagation delay
[09:42:54] *** Quits: elkalamar_ (elkalamar@gateway/vpn/airvpn/elkalamar) (Ping timeout: 255 seconds)
[09:43:03] <nitrix> Language semantics don't usually have "propagation delay" to worry about, until you're doing functional reactive programming, then you could cause what they call a "glitch".
[09:43:50] <beaky> nice i gotta try functoal reactive programming someday
[09:47:33] <nitrix> Todays hardware allows random access (RAM as opposed to tapes) and mutation (as opposed to ROM). Both took a lot of time and engineering to make them fast (caches), safe (virtual memory) and durable (ecc).
[09:47:44] *** Joins: LiftLeft (~LiftLeft@154.21.28.74)
[09:48:05] <nitrix> The language you're describing to me, pure, functional, effect-free and without arrays, seems like it's going backwards on all of those things.
[09:50:49] <beaky> yes what if we could come up with the vulkan of modern machines
[09:53:56] *** Joins: hv99 (~hv99@wireguard/tunneler/hv99)
[09:55:07] <nitrix> I don't think tea databases care that much.
[09:55:44] <nitrix> It would be a good way to keep a bunch of bored engineers busy though.
[09:57:12] *** Quits: ITD4004 (~ITD4004@187.61.233.248) (Remote host closed the connection)
[10:04:01] *** Joins: hoochmonger (~hoochmong@user/hoochmonger)
[10:05:01] *** Joins: elkalamar_ (elkalamar@gateway/vpn/airvpn/elkalamar)
[10:05:20] *** Joins: jmcgnh (~jmcgnh@wikipedia/jmcgnh)
[10:05:21] *** Quits: Joanna (uid57472@id-57472.tooting.irccloud.com) (Quit: Connection closed for inactivity)
[10:09:08] *** Quits: elkalamar_ (elkalamar@gateway/vpn/airvpn/elkalamar) (Max SendQ exceeded)
[10:13:40] *** Quits: liluzer (~zenix@118.69.128.37) (Ping timeout: 258 seconds)
[10:14:55] *** Quits: rany (~rany@user/rany) (Quit: ZNC 1.8.2+deb2+b1 - https://znc.in)
[10:15:07] *** Joins: rany (~rany@user/rany)
[10:17:28] *** Quits: hv99 (~hv99@wireguard/tunneler/hv99) (Ping timeout: 252 seconds)
[10:21:39] *** Joins: hv99 (~hv99@wireguard/tunneler/hv99)
[10:22:23] *** Joins: mnrmnaugh (~mnrmnaugh@pool-96-252-87-182.bstnma.fios.verizon.net)
[10:27:12] *** Quits: elnavigator (~elnavigat@105.196.63.39) (Ping timeout: 268 seconds)
[10:30:08] *** Quits: soapsudsxx (~soapsudsx@209.221.40.138) (Remote host closed the connection)
[10:31:25] <beaky> how to write a tsdb (time-series database, not tea storage database unfortunately) from scratch the trick is to use sick sequential writes for maximum performance https://nakabonne.dev/posts/write-tsdb-from-scratch/
[10:31:57] *** Joins: jaysicks (~jaysicks@178-164-134-154.pool.digikabel.hu)
[10:34:01] *** Quits: jaysicks (~jaysicks@178-164-134-154.pool.digikabel.hu) (Remote host closed the connection)
[10:34:47] *** Joins: jaysicks (~jaysicks@178-164-134-154.pool.digikabel.hu)
[10:40:04] *** Quits: jaysicks (~jaysicks@178-164-134-154.pool.digikabel.hu) (Quit: Leaving)
[10:43:14] *** Quits: LiftLeft (~LiftLeft@154.21.28.74) (Ping timeout: 268 seconds)
[10:43:31] *** Joins: liluzer (~zenix@118.69.128.37)
[10:48:09] *** Quits: Null_A (~null_a@2601:645:8700:2290:b55a:33c2:1e1d:f229) (Ping timeout: 255 seconds)
[10:49:33] *** Quits: liluzer (~zenix@118.69.128.37) (Quit: Leaving)
[10:58:20] *** Joins: GeDaMo (~GeDaMo@82-69-2-253.dsl.in-addr.zen.co.uk)
[10:58:20] *** Quits: GeDaMo (~GeDaMo@82-69-2-253.dsl.in-addr.zen.co.uk) (Changing host)
[10:58:20] *** Joins: GeDaMo (~GeDaMo@user/gedamo)
[11:00:08] *** Parts: Ox151 (~user@user/ox151) (ERC (IRC client for Emacs 27.2))
[11:09:22] *** Joins: Thedarkb2 (~beno@86-42-5-248-dynamic.agg3.kny.prp-wtd.eircom.net)
[11:09:50] *** Quits: Thedarkb1 (~beno@2001:bb6:b404:188f:1ba6:37d:9e2b:30e8) (Read error: Connection reset by peer)
[11:11:01] *** Joins: merijn (~merijn@83-160-49-249.ip.xs4all.nl)
[11:18:39] *** Joins: mrig (~mrig@user/mrig)
[11:19:02] *** Joins: Rashad (~Rashad@213.139.41.247)
[11:22:07] *** Joins: Guest9 (~Guest9@103.250.137.213)
[11:22:37] *** Quits: Xaldafax (~xaldafax@cpe-198-72-160-101.socal.res.rr.com) (Quit: Bye...)
[11:24:24] <Guest9> i am looking for ways how to achieve this functionality: I have list of labels-A &  labels-B. I want user to pick=select & drag labels from B & drop in between two sub-sequent labels-of-A.
[11:25:54] <Guest9> in web-app
[11:27:33] <PlanckWalk> Sounds like handling drag and drop events in javascript
[11:28:55] *** Joins: furrymcgee (~devuan@31.179.186.66)
[11:29:25] <PlanckWalk> There are quite a few options for how to do that based on how you want to UI to behave
[11:29:40] *** Joins: mcfrdy_ (uid507892@user/mcfrdy)
[11:29:59] <PlanckWalk> E.g. do you want list A to "make room" for the B item while still in progress?
[11:30:27] <PlanckWalk> Are you allowing consecutive B items within list A, or must they always have an A item before and after?  These sorts of questions.
[11:32:03] <PlanckWalk> If you do have behaviour distinctions between A and B items in list A, then you probably want an appearance distinction between them.
[11:39:27] *** Quits: hoochmonger (~hoochmong@user/hoochmonger) (Ping timeout: 255 seconds)
[11:39:58] *** Joins: trevors (~trevors@catv-89-132-207-129.catv.broadband.hu)
[11:40:16] <Guest9> https://aggie.io/wuhaym2e17
[11:40:25] <Guest9> PlanckWalk i have rough sketch here
[11:40:29] <Guest9> how i want
[11:40:40] <Guest9> drag and drop action is shown by different color
[11:41:10] <Guest9> any lable from B can be dropped 0 or more times in between labels of A
[11:42:16] *** Joins: aradesh (~aradesh@user/aradesh)
[11:42:35] <Guest9> yes, room =space is required dynamically when label B is dropped in between label A
[11:43:19] <Guest9> is it clear enough?
[11:44:27] <GeDaMo> Wouldn't standard GUI widgits support that already?
[11:44:44] *** Quits: trevors (~trevors@catv-89-132-207-129.catv.broadband.hu) (Ping timeout: 252 seconds)
[11:45:04] <PlanckWalk> Depends which frameworks you're using
[11:45:17] *** Quits: merijn (~merijn@83-160-49-249.ip.xs4all.nl) (Ping timeout: 258 seconds)
[11:45:21] <PlanckWalk> (And whether the assumptions made by the standard widgets match what you in particular need)
[11:50:33] *** vinleod is now known as vdamewood
[11:52:02] <Guest9> i cant find drag and drop kind of stuff on anvil components UI
[11:53:10] <Guest9> https://anvil.works/docs/overview
[11:53:38] *** Joins: Serpent7776 (~Serpent77@90-156-31-193.internetia.net.pl)
[11:58:57] *** Quits: trufas (~trufas@177.240.218.218) (Ping timeout: 276 seconds)
[11:59:49] *** Joins: trufas (~trufas@177.240.218.218)
[12:00:33] *** Joins: trevors (~trevors@catv-89-132-207-129.catv.broadband.hu)
[12:00:36] *** Quits: Thedarkb2 (~beno@86-42-5-248-dynamic.agg3.kny.prp-wtd.eircom.net) (Ping timeout: 255 seconds)
[12:00:55] *** Quits: trevors (~trevors@catv-89-132-207-129.catv.broadband.hu) (Read error: Connection reset by peer)
[12:01:23] *** Joins: trevors (~trevors@catv-89-132-207-129.catv.broadband.hu)
[12:01:29] *** Joins: Thedarkb (~beno@2001:bb6:b404:188f:1ba6:37d:9e2b:30e8)
[12:08:50] *** Quits: pandakekok9 (~job@wikimedia-commons/pandakekok9) (Ping timeout: 245 seconds)
[12:12:58] *** Quits: Izem (~rcg@bras-base-london1483w-grc-42-65-95-172-41.dsl.bell.ca) (Quit: leaving)
[12:13:06] *** Quits: pavonia (~user@user/siracusa) (Quit: Bye!)
[12:18:46] <nitrix> Unpopular opinion, I prefered when websites were just HTML, CSS, templates and some jQuery.
[12:19:19] *** Joins: lunarkitty (uid501895@user/pyra)
[12:20:02] <GeDaMo> I preferred when websites were just HTML :P
[12:20:11] <nitrix> It wasn't always pretty but at least people knew how to build things with it.
[12:20:29] *** Joins: srikavin (~srikavin@user/srikavin)
[12:20:38] * psydroid prefers when Gemini sites are just Gemdocs
[12:21:52] <xeno> nitrix: in some ways I did too - not because it was good in any way (it wasn't), but because the future looked brighter than what it turned out to be
[12:23:11] <beaky> hello the lambda cube is a structure that lets us visualize various generalizations of the lambda calculus. there is the untyped lambda calculus (lisp), various typed lambda calculi with different generalizations like type abstraction or higher kinded types (haskell) or dependent types (LF), with the most general one being the calculus of constructions (coq)
[12:23:13] <beaky> https://en.wikipedia.org/wiki/Lambda_cube but what programming language do the other corners of hte cube correspond to like λP2 or System Fω ?
[12:23:56] *** Quits: Guest9 (~Guest9@103.250.137.213) (Quit: Connection closed)
[12:27:50] <nitrix> xeno, If you've ever observed how a carpenter works, it's a handful of tools, measure twice, cut once, chisel until perfection. Very laborious, but they get into that flow state doing the motions relentlessly until the impeccable final result.
[12:28:20] *** Quits: penguino (~mrpenguin@user/mrpenguin) (Ping timeout: 244 seconds)
[12:29:21] <nitrix> xeno, Some languages and libraries let me get that flow state where I'm just given the tools, the raw materials and I work the rest, while others are trying to be insanely complicated all-in-one machinery that you have to turn the right knobs, press the right buttons, but then it does it all for you.
[12:30:06] <nitrix> I much prefer the artisanal approach :/
[12:30:31] <xeno> nitrix: well, HTML is just a fail design, javascript was a failed design, the browser stack a horrible design, and jQuery was a horrible patchwork to make it somewhat usable
[12:31:06] <beaky> yes what if instead we had alan kay's dream of the ultimate application vm environment
[12:31:07] <xeno> I agree that I prefer simple and good tools, but those tools weren't good. It was doing carpetry with a failed prototype for a swiss pocket knife
[12:31:56] <nitrix> beaky, Kind like wasm?
[12:33:49] <GeDaMo> I feel like wasm is just shovelling more shit on top of the pile we already have
[12:33:50] <beaky> unlike wasm more like if the web was smalltalk
[12:34:18] <xeno> GeDaMo: it could have been good, but they seem to aim for that yes :/
[12:34:35] <arahael> I preferred it when websites were smaller than a compressed copy of the original DOOM.
[12:34:42] <beaky> (instead of having apps being shoehrond into the web and its document model)
[12:37:02] <smallville7123> how do i tile render vertex and index data?
[12:38:18] <GeDaMo> I recognise all of those words :|
[12:38:38] <smallville7123> haha
[12:39:09] <beaky> yes more like alan kay's croquet project https://en.wikipedia.org/wiki/Croquet_Project
[12:41:01] <beaky> the future of programming
[12:42:48] *** Quits: Pseudocrat (~sudo@user/pseudocrat) (Quit: WeeChat 3.3-dev)
[12:43:30] <vdamewood> arahael: No doubt they were more accessible when they were little more than rich-text documents.
[12:43:34] *** Stryykert is now known as Stryyker
[12:43:40] <arahael> vdamewood: Indeed.
[12:44:24] <vdamewood> arahael: Now, click on the pictures of homicidal dolls to prove you're not a robot.
[12:44:46] <arahael> vdamewood: Ah, yep.
[12:44:48] <beaky> whereas something like wasm provides for like islands of applications, alan kay's vm idea thing is for providing a truly distributed and collaborative software environment
[12:44:53] * arahael taps on the traffic lights.
[12:45:13] <vdamewood> arahael: That proves you'rre not a robot. Robots follow directions.
[12:46:57] *** Quits: trevors (~trevors@catv-89-132-207-129.catv.broadband.hu) (Quit: My MacBook has gone to sleep. ZZZzzz…)
[12:47:14] <beaky> alan kay's vm was also like a distributed database operating on a 'teatime' protocol for updates
[12:47:33] <beaky> a tea-oriented database
[12:47:35] *** Quits: jmcantrell (~weechat@user/jmcantrell) (Ping timeout: 255 seconds)
[12:48:00] <vdamewood> beaky: You should make a tea-oriented programming languag, where everything is a tea.
[12:48:38] <beaky> yes i must revive alan kay's tea protocol
[12:48:52] * vdamewood hands beaky an error 418.
[12:49:00] <beaky> formalize it in coq and implement it in my tea database
[12:49:15] <beaky> it will be the synchronization primitive
[12:49:51] <beaky> but which part of the lambda cube will it sit on
[12:51:30] *** Quits: todda7 (~torstein@static-qvn-qvu-160026.business.bouyguestelecom.com) (Ping timeout: 268 seconds)
[12:51:38] <beaky> plus they could have gemini in it
[12:51:41] <GeDaMo> Can it be in the middle? :P
[12:51:46] <beaky> lol
[12:52:14] <beaky> yes it will have not-quite dependent types like how in c++ templates are not-quite generics
[12:52:32] *** Joins: Crassus (~Crassus@user/crassus)
[12:52:38] <beaky> and sorta-higher kinded types but i dont know what that would look like
[12:53:05] <beaky> invented as philip wadler would say
[12:53:34] <GeDaMo> Lambda hypercube! :P
[12:53:37] *** Joins: mikoto-chan (~mikoto-ch@ip-213-49-189-31.dsl.scarlet.be)
[12:54:21] <beaky> yes with cubical type theory i think they will have to update the lambda cube thing to support hypercubes
[12:54:24] *** Joins: gitesh (uid423739@id-423739.charlton.irccloud.com)
[12:56:09] *** Quits: twomoon (~twomoon@ip72-199-58-150.sd.sd.cox.net) (Quit: Leaving)
[12:56:35] <beaky> because now there are more primitives like 'intervals' and 'path types' (which are not types proper i think)
[12:57:13] <beaky> the higher dimensions will be when you have types that have those
[12:57:21] *** Joins: Lord_of_Life_ (~Lord@user/lord-of-life/x-2819915)
[12:58:43] *** Joins: NEYi (~NEYi@109.251.216.38)
[13:00:11] *** Joins: merijn (~merijn@83-160-49-249.ip.xs4all.nl)
[13:00:36] *** Quits: Lord_of_Life (~Lord@user/lord-of-life/x-2819915) (Ping timeout: 265 seconds)
[13:00:38] *** Lord_of_Life_ is now known as Lord_of_Life
[13:01:26] <pyzozord> very interesting discussion
[13:01:46] * vdamewood pats pyzozord on the head.
[13:01:49] *** Joins: zeenk (~zeenk@2a02:2f04:a106:9600:82fb:aed9:ca9:38d3)
[13:02:18] <pyzozord> damn it I've put myself in so much opportunities to learn that I can't keep up and I'm not sure which one to chase
[13:03:33] <pyzozord> regarding the truly distributed vm, the etherum vm is like that, that's why I was interested in it for a while
[13:04:02] <pyzozord> but it's just too tied up with the mon(k)ey business
[13:04:14] *** Quits: xff0x_ (~xff0x@2001:1a81:525b:ea00:2ecf:bd12:9251:d3e) (Ping timeout: 255 seconds)
[13:04:52] *** Joins: xff0x_ (~xff0x@2001:1a81:525b:ea00:61de:d55d:7965:91a3)
[13:05:19] *** Joins: meleoron (~meleoron@117.222.68.212)
[13:07:01] <GeDaMo> There was a notion a while back about mobile agents: code that you would send out to collect data for you
[13:07:15] <GeDaMo> I suppose we have that with JS in browsers :|
[13:07:17] <beaky> yes alan kay's dream was like to have that distributed vm, but instead of being oriented towards currency or digital ownership (which i think ethereum is about) was more about douglas englebart style 'augmenting human intellect' things to make collaborative computing possible and accessible
[13:07:37] <GeDaMo> https://en.wikipedia.org/wiki/Mobile_agent
[13:08:27] <GeDaMo> https://en.wikipedia.org/wiki/Code_mobility
[13:08:41] *** Joins: snake (~snake@user/snake)
[13:08:44] *** Quits: snake (~snake@user/snake) (Remote host closed the connection)
[13:08:44] <beaky> nice the dream would be for me to have mobile agents to handle database things on the go
[13:09:19] *** Joins: snake (~snake@user/snake)
[13:12:14] <pyzozord> So viruses are mobile agents? Is an agent that replicates itself to a new host without leaving the old host mobile as well, or does it have to be strictly in one place at one time?
[13:13:38] <beaky> yes like viruses but more general purpose i think
[13:14:08] <beaky> the original vision for the cloud
[13:14:29] <pyzozord> oh it's a very interesting concept with code mobility, programs tend to be infinitly smaller than the data sets. Have programs move around, kind of "dock" to a data store, do it's job and move on. While freaking ship tons of data to each small program
[13:14:59] <pyzozord> s/While/Why/
[13:15:44] <GeDaMo> Meanwhile: all the data has to be transferred from memory to the CPU to be processed :P
[13:16:31] <psydroid> the real cloud will come into existence when the pseudocloud has been exposed for the impostor it is
[13:16:46] <pyzozord> that could be it, maybe the path forward is cpus with build in memory banks and cpu/ram chips as single units
[13:17:55] <GeDaMo> You're still going to have to move a lot of data about
[13:18:30] <GeDaMo> Even something as simple as an add takes two parameters, can you guarantee they're both going to be in the same memory shard?
[13:19:04] <pyzozord> yeah I suppose that's true. Same on the macro level, what if I want to corelate covid data with say weather data
[13:19:57] *** Quits: Crassus (~Crassus@user/crassus) (Quit: Textual IRC Client: www.textualapp.com)
[13:20:29] *** Quits: lockywolf (~lockywolf@vultr-seoul-openbsd.lockywolf.net) (Quit: ZNC 1.8.2 - https://znc.in)
[13:21:14] *** Quits: TheAceOfHearts (~TheAceOfH@24.41.239.76) (Quit: So long, and thanks for all the fish!)
[13:22:18] *** Joins: lockywolf (~lockywolf@vultr-seoul-openbsd.lockywolf.net)
[13:22:26] <mrig> Good morning.
[13:22:41] <GeDaMo> Hi mrig :)
[13:22:48] <mrig> Hello GeDaMo :)
[13:22:50] <GeDaMo> pyzozord: did you get your bit list thing working?
[13:23:27] <mrig> Ah well at least if I go into the dev settings and turn off JS then anything written on medium.com does not run my batteries down :)
[13:24:04] <mrig> Perhaps there is a simple switch in the browser apps that does this so that I dont need to rummage in the settings.
[13:24:16] <pyzozord> GeDaMo: no I tried the algorithm you suggested but it failes for [0,0,0,0,0]. My version returns [4,5] but expected is [1,4]. I'm having another stab at this in a moment
[13:24:36] <GeDaMo> Ah, I hadn't considered all zeroes :/
[13:24:37] <pyzozord> GeDaMo: not the algorithm fails, I think my implementation does
[13:25:10] <mrig> I am starting to consider making a database erp type app with html now, that must mean that something is sinking in I suppose :)
[13:25:24] <mrig> html being the interface I mean.
[13:26:25] <mrig> I'd like to write a teminal module that makes it simple to plug in either to an html browser or a terminal, would be great to do gemini too.
[13:26:38] <pyzozord> mrig: I recommend uBlock Origin with setting to turn of all scripts, images above 50kb and fonts by default and only whitelist the sites you like
[13:27:04] <mrig> yes I use that amongst others, the defaults are generally pretty good.
[13:27:09] <pyzozord> mrig: works very well, annyoing thing is that just browsing web and visitng links people share is kind of impaired
[13:27:43] <mrig> Yes, I have to slowly allow things until which ever site it is that I'm trying to explore starts to work.
[13:27:54] <mrig> It's a pain in the ass.
[13:28:18] <mrig> But still there is good info on the web and it is an amazing thing.
[13:28:25] <pyzozord> I started judging sites by how well they work without js/fonts/big images
[13:28:38] <pyzozord> I have to say, some sites are just white backgrounds...
[13:28:55] <mrig> I've high hopes for some sort of AI filter that just removes all the cruft for me.
[13:29:10] <pyzozord> huh, cool idea
[13:29:17] <mrig> That would be great. The antipathy of the targeted add.
[13:29:29] <furrymcgee> a text based browser will do
[13:29:39] <mrig> yes it does for most things
[13:29:51] <mrig> would be nice to be able to interact with a database too though.
[13:30:08] <GeDaMo> I also use the adblocker for removing cosmetic things which annoy me
[13:30:22] <mrig> That said, this could be the point in the timeline where it all started to get messy :)
[13:31:01] *** Joins: trevors (~trevors@catv-89-132-207-129.catv.broadband.hu)
[13:31:34] <mrig> automated targeted JS removal, prune your search results list and send your results to some massive blacklist database of offenisve JS use.
[13:32:14] <GeDaMo> I wondered if something like baysian filtering used for email would work on website elements
[13:32:39] <mrig> Within search results?
[13:32:54] * mrig scurries off to look up baysian filtering
[13:33:28] *** Joins: pandakekok9 (~job@wikimedia-commons/pandakekok9)
[13:33:40] <GeDaMo> It's used for email spam filters
[13:34:06] <GeDaMo> I downloaded a book on it which I haven't read :/
[13:34:16] <mrig> Oh that looks really interesting, some sort of accumulation of data feeding a vector of 'respectability'
[13:35:02] <mrig> Oh books are read at the right time, I have to wait for them to call me when I'm ready to read them; Nothing goes in otherwise.
[13:36:24] <mrig> oh yes Bayesian Statistics, right yes I've come across this before, it is interesting stuff.
[13:36:32] <GeDaMo> https://greenteapress.com/wp/think-bayes/
[13:36:49] <GeDaMo> Ah, there's a new version
[13:37:00] <mrig> proofs that Newtonian scientists hate to accept.
[13:37:30] <mrig> oh that looks great
[13:38:13] <mrig> I'm still working on my basic algebra and calculus at the moment, bet this will be useful eventually though.
[13:38:15] *** Quits: Inhahe (inhahe@107-213-219-122.lightspeed.miamfl.sbcglobal.net) (Ping timeout: 255 seconds)
[13:39:56] <mrig> Oh I did come across what was to my mind the best advertising on the web that I've ever seen.
[13:40:10] <mrig> I actually sat and watched the add :D
[13:40:10] <mercenary> The trick is to get the bayesian/AI filter to run in smaller battery envelope than the filtered cruft
[13:40:14] *** Joins: Belxjander (~Belxjande@p1575007-ipoe.ipoe.ocn.ne.jp)
[13:40:21] *** Quits: amigojapan (uid86330@id-86330.brockwell.irccloud.com) (Quit: Connection closed for inactivity)
[13:40:59] <mrig> mercenary: right yes, you dont want to be burning up fuel to stop the monster, cache and blacklist would sort that though.
[13:41:42] <mrig> so long as you dont end up needing servers the size of a google farm to store the list of cruft.
[13:42:22] *** Quits: trevors (~trevors@catv-89-132-207-129.catv.broadband.hu) (Quit: My MacBook has gone to sleep. ZZZzzz…)
[13:42:53] *** Joins: LucaTM (~LucaTM@user/lucatm)
[13:42:57] <mrig> https://youtu.be/RFLqlHFoI3M?t=410 <- watchable advert warning.
[13:43:17] <mrig> no objection to stuff that is as clever as that.
[13:47:59] *** Joins: jaysicks (~jaysicks@178-164-134-154.pool.digikabel.hu)
[13:48:01] *** Quits: jaysicks (~jaysicks@178-164-134-154.pool.digikabel.hu) (Remote host closed the connection)
[13:49:19] *** Quits: TechTest (uid283215@id-283215.tooting.irccloud.com) (Quit: Connection closed for inactivity)
[13:55:16] *** Quits: inky_ (~inky@46.71.131.226) (Ping timeout: 252 seconds)
[13:56:10] *** Joins: exvicesindaco (~exvicio@user/exvicesindaco)
[14:02:01] *** Quits: lars8 (~bc817c21@217.29.117.252) (Quit: http://www.okay.uz/ (Session timeout))
[14:03:21] *** Joins: gitgood (~gitgood@80-44-9-45.dynamic.dsl.as9105.com)
[14:03:54] *** Quits: merijn (~merijn@83-160-49-249.ip.xs4all.nl) (Ping timeout: 255 seconds)
[14:05:25] *** Joins: plastico (~plastico@2001:8a0:de6b:1a00:9d14:766e:70a8:dcea)
[14:07:37] *** Joins: a-a (uid506782@id-506782.tooting.irccloud.com)
[14:08:12] *** Joins: Guest77 (~Guest77@2402:e280:2117:297:ecf8:f374:8704:f843)
[14:10:21] *** Joins: pete443_ (~pete@user/pete443)
[14:11:03] *** Quits: pete443 (~pete@user/pete443) (Ping timeout: 268 seconds)
[14:11:52] *** Joins: amigojapan (uid86330@id-86330.brockwell.irccloud.com)
[14:14:15] *** Quits: pandakekok9 (~job@wikimedia-commons/pandakekok9) (Ping timeout: 245 seconds)
[14:14:16] *** Quits: smultron (~smultron@c-73-239-231-28.hsd1.wa.comcast.net) (Remote host closed the connection)
[14:16:37] *** Quits: mcfrdy_ (uid507892@user/mcfrdy) (Quit: Connection closed for inactivity)
[14:20:06] <pyzozord> GeDaMo: I short circuted the zeros with early return. The code is very messy, but we got 100% faster thanb all other submissions on leetcode :)
[14:20:40] <pyzozord> here is my code if you are curious, extremly ugly https://ideone.com/E3ocyQ
[14:21:42] <pyzozord> the part with comparing the three parts actually have me a lot of trouble, first you need to get rid of the leading zeros, then it's a threeway comparison
[14:22:22] <pyzozord> and we are 100% even though I do extra dumb stuff like arr.slice uncessarily really
[14:22:33] <GeDaMo> :)
[14:24:08] *** Quits: Thedarkb (~beno@2001:bb6:b404:188f:1ba6:37d:9e2b:30e8) (Ping timeout: 256 seconds)
[14:24:41] <pyzozord> https://imgur.com/a/UDZOfIP
[14:24:59] *** Joins: node1 (~node1@user/node1)
[14:25:52] <pyzozord> now I need to study my original brute-force clever idea and see if that was also failure at executing the idea or if the idea is flawed
[14:26:30] *** Joins: pulse (~pulse@user/pulse)
[14:27:03] <pyzozord> also fresh mind makes all the difference in these kinds of problems
[14:27:21] *** Joins: Thedarkb (~beno@2001:bb6:b404:188f:1ba6:37d:9e2b:30e8)
[14:27:49] *** Joins: trevors (~trevors@catv-89-132-207-129.catv.broadband.hu)
[14:28:01] <GeDaMo> Nobody else managed to solve that? :|
[14:28:28] <pyzozord> no, it's just our solution is the in the 100% percentail of the fastest js solutions
[14:28:40] *** Joins: gggpkm (~gggpkm@123.113.178.180)
[14:29:01] *** Quits: trevors (~trevors@catv-89-132-207-129.catv.broadband.hu) (Client Quit)
[14:30:55] <pikapika> pyzozord, hi
[14:31:20] <pyzozord> pikapika: hello
[14:31:32] *** Quits: chomwitt (~Pitsikoko@athedsl-32487.home.otenet.gr) (Ping timeout: 255 seconds)
[14:32:30] <pyzozord> GeDaMo: it doesn't say how many submissions there are, but we are not even on the graph, so I assume the two columns on the right make for >10k submissions
[14:32:33] <pyzozord> https://imgur.com/a/dMGeqDj
[14:32:36] *** Joins: roent (~roent@user/roent)
[14:34:21] <beaky> bancstar a real programming language used in production that is even less ergonomic than many esolangs https://github.com/jloughry/BANCStar
[14:34:48] <pikapika> beaky, hi
[14:35:47] <beaky> hello im beaky
[14:36:05] <node1> In python when we print object without defining __str__() we received something ` <__main__.Test object at 0x7f1817a53828>` I would likes to know what does __main__.Test here refers
[14:36:56] <GeDaMo> Test is the name of the object and __main__ is the current module(?)
[14:37:36] <GeDaMo> https://docs.python.org/3.8/library/__main__.html
[14:38:42] *** Joins: gggpkm_ (~gggpkm@60.10.194.48)
[14:39:05] *** Quits: Haxxa (~Haxxa@122-199-59-136.ip4.superloop.com) (Quit: Haxxa flies away.)
[14:39:21] <node1> So it must be referring the  Test calss here :)
[14:39:41] <node1> Test class*
[14:40:28] *** Joins: frdy (~mcfrdy@user/mcfrdy)
[14:40:30] *** Joins: Rounin (~david@cm-84.212.130.215.getinternet.no)
[14:40:47] *** Quits: node1 (~node1@user/node1) (Remote host closed the connection)
[14:41:16] *** Quits: gggpkm (~gggpkm@123.113.178.180) (Ping timeout: 268 seconds)
[14:43:11] *** Joins: node1 (~node1@user/node1)
[14:43:57] *** Joins: gggpkm (~gggpkm@60.10.194.48)
[14:44:24] *** Quits: gggpkm_ (~gggpkm@60.10.194.48) (Ping timeout: 255 seconds)
[14:47:21] *** Joins: gggpkm_ (~gggpkm@123.113.178.180)
[14:48:57] *** Quits: wei2912 (~wei2912@112.199.250.21) (Remote host closed the connection)
[14:51:00] *** Quits: gggpkm (~gggpkm@60.10.194.48) (Ping timeout: 252 seconds)
[14:51:35] *** Joins: inky_ (~inky@46.71.131.226)
[14:52:19] *** Joins: Haxxa (~Haxxa@122-199-44-120.ip4.superloop.com)
[14:52:59] *** Joins: wei2912 (~wei2912@112.199.250.21)
[14:54:20] *** Joins: entuland (~entuland@user/entuland)
[14:54:58] *** Joins: Joanna (uid57472@id-57472.tooting.irccloud.com)
[14:55:00] *** Joins: Mangy_Dog (Mange@user/mangy-dog/x-7397214)
[14:55:51] *** Joins: mathAndRhetoric (~mathAndRh@ip-86-49-241-228.net.upcbroadband.cz)
[14:58:49] *** Quits: node1 (~node1@user/node1) (Quit: Leaving)
[14:59:04] *** Quits: kmh (~kmh@p200300df5f3d230035b7f5463ee68434.dip0.t-ipconnect.de) (Quit: Leaving)
[14:59:31] *** Quits: inky_ (~inky@46.71.131.226) (Remote host closed the connection)
[14:59:59] *** Joins: inky_ (~inky@46.71.131.226)
[15:01:54] <snake> anyone know how i can repeat a page load in firefox with ipv4
[15:02:10] <snake> with curl you can do -4 or -6 to choose which ip protocol to use, but i dont see that option in firefox
[15:02:48] <GeDaMo> Could you use the ipv4 address instead of the domain name?
[15:03:52] <snake> GeDaMo, it says direct ip access is not allowed on cloudfare
[15:03:56] <snake> good idea though
[15:04:05] <snake> this is the site http://ifconfig.co/
[15:06:46] *** Quits: inky_ (~inky@46.71.131.226) (Ping timeout: 252 seconds)
[15:07:22] *** Joins: inky_ (~inky@5.77.209.148)
[15:08:24] *** Quits: gggpkm_ (~gggpkm@123.113.178.180) (Ping timeout: 268 seconds)
[15:09:08] *** Quits: lunarkitty (uid501895@user/pyra) (Quit: Connection closed for inactivity)
[15:10:40] *** Quits: roent (~roent@user/roent) (Quit: My client has gone to sleep. ZZZzzz…)
[15:10:55] <menace> is there also some tool when i want to reach a certain ip through which ASNs it is routed? would be interesting :D
[15:11:17] *** Joins: nekobyte (~nekoIsAL@user/nekobit)
[15:11:53] <GeDaMo> You mean like traceroute?
[15:12:00] *** nekobyte is now known as nekodesu
[15:13:25] *** Joins: Inari (~Pinkishu@p4fd95559.dip0.t-ipconnect.de)
[15:13:49] <GeDaMo> Or mtr
[15:14:09] *** Joins: roent (~roent@user/roent)
[15:16:03] *** Joins: Booster2ooo (~Booster2o@user/booster2ooo)
[15:16:23] <CuriousErnestBro> how much gb or ram do I need to run a couple of discord bots, a website and znc?
[15:17:22] <smallville7123> CuriousErnestBro: probably much less than 1 gb
[15:17:48] <dodo> depends. is your website facebook?
[15:17:54] <smallville7123> dodo: XD
[15:18:00] <CuriousErnestBro> just a personal blog
[15:18:27] <CuriousErnestBro> I'm gonna experiment with jekyll
[15:20:01] <pulse> careful not to let it turn into mr. hyde
[15:20:06] <pyzozord> CuriousErnestBro: you _should_ be able to fit in 256mb or less, but depending on your software choices you might even need 2GB :P
[15:20:31] <pyzozord> frankly this should be doable in 1mb
[15:20:42] <CuriousErnestBro> actually I plan on using R with the bookdown package
[15:20:49] <CuriousErnestBro> https://bookdown.org/yihui/blogdown/
[15:21:17] *** Quits: roent (~roent@user/roent) (Quit: My client has gone to sleep. ZZZzzz…)
[15:23:04] <CuriousErnestBro> sigh... most of my time is spent learning infra instead of programming
[15:23:08] <CuriousErnestBro> is this what life is in 2021?
[15:23:49] <CuriousErnestBro> I'm not really complaining, I find it interesting
[15:24:04] <GeDaMo> "infra"?
[15:24:53] *** Joins: gggpkm (~gggpkm@221.219.66.135)
[15:25:15] *** Joins: ZenixOwler (~zenix@118.69.128.37)
[15:25:50] <CuriousErnestBro> yeah, now I want to learn how to create a website locally, and on push that it gets updated automatically
[15:25:56] <CuriousErnestBro> so I'll be reading up on github actions this afternoon
[15:26:07] <arahael> CuriousErnestBro: I just push from my local machine when I make changes.
[15:26:32] <arahael> CuriousErnestBro: I wrote a simple static site generator that 1) Generates the website, and 2) Pushes automatically, and 3) Updates the CDN.
[15:27:05] *** Joins: Guest9 (~Guest9@103.250.137.212)
[15:27:12] <CuriousErnestBro> what do you mean by "Pushes automatically", is it a bash script that uses rsync or scp or something?
[15:27:31] * CuriousErnestBro uses "push" exclusively in git(hub) contexts
[15:28:48] <arahael> CuriousErnestBro: It's a script, yes, and since my static website is in AWS S3, it use the AWS S3 api.
[15:29:26] <CuriousErnestBro> what do you mean, your website is in aws s3? I thought s3 didn't do hosting and you'd have to use lightsail or ec2
[15:29:55] <CuriousErnestBro> as far as I understand, s3 is "object storage" (idk what objects are in this context btw)
[15:30:35] *** Joins: kmh (~kmh@p200300df5f3d2300852dc21772644f53.dip0.t-ipconnect.de)
[15:30:38] <CuriousErnestBro> arahael or is your website served through a "lambda"?
[15:31:01] <arahael> CuriousErnestBro: S3 can also serve static websites.
[15:31:26] <CuriousErnestBro> interesting...
[15:33:54] *** Quits: SGautam__ (~SGautam@59.90.3.1) (Ping timeout: 252 seconds)
[15:34:59] *** Joins: SGautam (~SGautam@59.90.2.157)
[15:36:14] *** Joins: Thedarkb1 (~beno@2001:bb6:b404:188f:1ba6:37d:9e2b:30e8)
[15:36:37] *** Quits: Thedarkb (~beno@2001:bb6:b404:188f:1ba6:37d:9e2b:30e8) (Remote host closed the connection)
[15:36:45] *** Joins: SGautam_ (~SGautam@27.59.178.85)
[15:37:06] *** Joins: trace987 (~trace@ip5b429888.dynamic.kabel-deutschland.de)
[15:37:44] *** Joins: Pickchea (~private@user/pickchea)
[15:37:51] *** Joins: riff-IRC (~riff-IRC@user/riff-irc)
[15:38:00] *** Quits: mikoto-chan (~mikoto-ch@ip-213-49-189-31.dsl.scarlet.be) (Ping timeout: 268 seconds)
[15:38:33] *** Joins: shokohsc (~shokohsc@161.88.195.77.rev.sfr.net)
[15:39:08] *** Joins: mikoto-chan (~mikoto-ch@ip-213-49-189-31.dsl.scarlet.be)
[15:39:34] <amanr> CuriousErnestBro: Checkout Hugo too. I compiles faster than jekyll (I can definitely {not} notice the different in the 2 blogs I have posted).
[15:40:28] *** Quits: SGautam (~SGautam@59.90.2.157) (Ping timeout: 268 seconds)
[15:40:36] *** Joins: SGautam__ (~SGautam@117.195.240.234)
[15:40:56] <CuriousErnestBro> amanr blogdown uses Hugo under the hood. I'm using Rmarkdown for ease-of-use, and it gives plot and equation rendering
[15:42:00] *** Quits: SGautam_ (~SGautam@27.59.178.85) (Ping timeout: 255 seconds)
[15:42:35] <CuriousErnestBro> amanr, I plan on using this theme, which looks amazing in my opinion: https://rstudio.github.io/tufte/
[15:43:58] <rannnn8888> how extrct the rnews text bs4 https://bpa.st/F5VQ
[15:44:45] <GeDaMo> CuriousErnestBro: that's nice and it seems to work without JS
[15:44:48] <amanr> CuriousErnestBro: The theme looks so ... creamy. I love it
[15:46:33] <amanr> CuriousErnestBro: I'd suggest changing the code font to something better imo. FiraCode looks pretty nice. I was disappoined to see how bad Pragmata Pro looked in my blog
[15:46:54] <GeDaMo> Looks like it uses JS for some highlighting but it's not really noticeable without it
[15:47:23] <CuriousErnestBro> yeah I use fira code wherever I can't use Menlo
[15:47:32] <CuriousErnestBro> to be honest, all code fonts look the same to me
[15:48:04] <CuriousErnestBro> GeDaMo I think it uses mathjax.js for the LaTeX rendering
[15:48:23] <GeDaMo> Yeah, makes sense
[15:48:24] <CuriousErnestBro> (that site doesn't have it, but mine will)
[15:48:42] <amanr> I use KaTeX instead of MathJax.
[15:48:48] <amanr> I literally removed it from the theme
[15:48:57] *** Quits: danielrparks (~quassel@2600:1700:3f7b:20f:abd8:3f5b:ead0:6c5a) (Quit: No Ping reply in 180 seconds.)
[15:48:58] <amanr> and replaced it by KaTeX.
[15:48:59] <CuriousErnestBro> I wonder why nobody implemented a static site generator that produces svg instead of shipping mathjax etc.
[15:49:20] <CuriousErnestBro> are svg's particularly big in filesize?
[15:50:12] *** Joins: danielrparks (~quassel@2600:1700:3f7b:20f:1730:d0b1:1b4a:bc52)
[15:52:16] *** Quits: Guest9 (~Guest9@103.250.137.212) (Quit: Connection closed)
[15:52:28] *** Quits: menace (~someone@user/menace) (Ping timeout: 250 seconds)
[15:52:48] *** Quits: audiofreeze (~audio@2603-8081-1800-00ad-c317-cfad-189f-bca9.res6.spectrum.com) (Ping timeout: 255 seconds)
[15:53:29] *** Quits: ZenixOwler (~zenix@118.69.128.37) (Quit: Leaving)
[15:53:29] *** Quits: mathAndRhetoric (~mathAndRh@ip-86-49-241-228.net.upcbroadband.cz) (Read error: Connection reset by peer)
[15:53:34] *** Joins: mathAndRhetorics (~mathAndRh@ip-86-49-241-228.net.upcbroadband.cz)
[15:53:34] *** mathAndRhetorics is now known as mathAndRhetoric
[15:55:03] *** Joins: greyrat_ (~greyrat@ip202.ip-51-178-215.eu)
[15:55:15] *** Server sets mode: +CFcnt 
[15:55:16] *** Quits: henbruas (~henbruas@ti0003a400-3211.bb.online.no) (Quit: ZNC 1.8.2 - https://znc.in)
[15:55:35] *** Joins: henbruas (~henbruas@ti0003a400-3211.bb.online.no)
[15:56:34] *** Quits: greyrat (~greyrat@ip202.ip-51-178-215.eu) (Ping timeout: 240 seconds)
[15:57:43] <GeDaMo> They probably compress well enough but it would still be bigger than something like MathJax, I'd assume
[15:57:55] <GeDaMo> How big is the MathJax library?
[16:00:16] <CuriousErnestBro> that would remove the limit of using arbitrary packages
[16:00:18] *** Joins: merijn (~merijn@83-160-49-249.ip.xs4all.nl)
[16:00:34] <GeDaMo> Looks like 170K
[16:01:17] <GeDaMo> That must be the compressed size
[16:01:44] <GeDaMo> 790K uncompressed
[16:01:52] *** Joins: audiofreeze (~audio@2603-8081-1800-00ad-2b3f-66a3-f0a1-fdca.res6.spectrum.com)
[16:01:56] <GeDaMo> That seems like a lot :|
[16:02:08] <CuriousErnestBro> 5.3kb for mathjax, and then a "polyfill" library
[16:02:26] *** Joins: CatCow (~wtf_over@c-73-96-109-206.hsd1.or.comcast.net)
[16:02:34] <CuriousErnestBro> so only the code that is needed is requested I suppose
[16:02:39] <CuriousErnestBro> from that 1mb
[16:02:46] <GeDaMo> Ah
[16:10:30] *** Quits: Codaraxis (~Codaraxis@user/codaraxis) (Remote host closed the connection)
[16:10:53] *** Joins: Codaraxis (~Codaraxis@user/codaraxis)
[16:11:33] *** Joins: Twipply (~Twipply@user/twipply)
[16:17:08] *** Quits: snake (~snake@user/snake) (Quit: Leaving)
[16:17:31] *** Joins: snake (~snake@user/snake)
[16:21:55] *** Quits: novns (~novns@user/novns) (Quit: ZNC 1.8.2 - https://znc.in)
[16:22:18] *** SGautam__ is now known as SGautam
[16:22:24] *** Joins: novns (~novns@user/novns)
[16:27:22] *** Joins: trevors (~trevors@catv-89-132-207-129.catv.broadband.hu)
[16:28:46] *** Quits: trevors (~trevors@catv-89-132-207-129.catv.broadband.hu) (Client Quit)
[16:32:12] *** Joins: TechTest (uid283215@id-283215.tooting.irccloud.com)
[16:34:43] *** Quits: merijn (~merijn@83-160-49-249.ip.xs4all.nl) (Ping timeout: 265 seconds)
[16:35:48] *** Quits: hexfive (~eric@50.35.83.177) (Quit: WeeChat 3.0)
[16:37:12] *** Quits: meleoron (~meleoron@117.222.68.212) (Ping timeout: 268 seconds)
[16:38:15] *** Quits: xff0x_ (~xff0x@2001:1a81:525b:ea00:61de:d55d:7965:91a3) (Ping timeout: 255 seconds)
[16:38:33] *** Joins: xff0x_ (~xff0x@185.65.135.235)
[16:40:01] *** Joins: Thedarkb (~beno@2001:bb6:b404:188f:1ba6:37d:9e2b:30e8)
[16:41:16] *** Quits: Thedarkb1 (~beno@2001:bb6:b404:188f:1ba6:37d:9e2b:30e8) (Ping timeout: 256 seconds)
[16:46:08] *** Pajus is now known as DramaQueen
[16:46:13] *** DramaQueen is now known as Pajus
[16:48:29] <pikapika> GeDaMo, hey
[16:49:08] <pikapika> CuriousErnestBro, are js libraries able to decompress on the fly?
[16:49:23] <pikapika> Or do they depend on the server sending compressed data
[16:49:50] <CuriousErnestBro> I have no idea
[16:50:03] <pikapika> Apparently apache has a gzip mode
[16:50:06] <CuriousErnestBro> that is a good question
[16:50:10] *** Joins: gitgoood (~gitgood@80-44-9-45.dynamic.dsl.as9105.com)
[16:50:22] <pikapika> 'mod_deflate'
[16:50:26] <CuriousErnestBro> nginx too https://docs.nginx.com/nginx/admin-guide/web-server/compression/
[16:50:37] *** Joins: MrMobius_ (~MrMobius@208.58.206.154)
[16:51:06] <CuriousErnestBro> compression is done on the fly though
[16:51:32] <pikapika> This is probably the client side feature that supports it https://developer.mozilla.org/en-US/docs/Web/HTTP/Headers/Content-Encoding
[16:52:07] <pulse> pikapika, all webservers transparently gzip on the fly afaik
[16:52:21] <pulse> i think you can turn it off but it's on by default
[16:53:52] *** Quits: gitgood (~gitgood@80-44-9-45.dynamic.dsl.as9105.com) (Ping timeout: 268 seconds)
[16:53:52] *** Quits: MrMobius (~MrMobius@208.58.206.154) (Ping timeout: 268 seconds)
[16:54:50] <CuriousErnestBro> express doesn't http://expressjs.com/en/resources/middleware/compression.html
[16:55:22] *** Quits: audiofreeze (~audio@2603-8081-1800-00ad-2b3f-66a3-f0a1-fdca.res6.spectrum.com) (Ping timeout: 246 seconds)
[16:56:46] *** Quits: xff0x_ (~xff0x@185.65.135.235) (Ping timeout: 252 seconds)
[16:57:01] *** Joins: scabby (~scabby@user/scabootssca)
[16:58:46] *** Joins: xff0x_ (~xff0x@2001:1a81:525b:ea00:8ac3:8abd:f864:c680)
[16:59:08] *** Quits: vdamewood (~vdamewood@fedora/vdamewood) (Quit: Life beckons)
[17:02:41] *** Joins: roent (~roent@user/roent)
[17:06:04] *** Joins: anovick (~anovick@IGLD-83-130-153-93.inter.net.il)
[17:06:40] *** Quits: Mangy_Dog (Mange@user/mangy-dog/x-7397214) (Ping timeout: 252 seconds)
[17:08:05] *** Quits: rustyshackleford (uid236774@id-236774.brockwell.irccloud.com) (Quit: Connection closed for inactivity)
[17:08:35] *** Quits: adanwan (~adanwan@gateway/tor-sasl/adanwan) (Remote host closed the connection)
[17:08:49] *** Joins: adanwan (~adanwan@gateway/tor-sasl/adanwan)
[17:11:06] *** Quits: Pickchea (~private@user/pickchea) (Ping timeout: 255 seconds)
[17:13:00] *** Quits: anovick (~anovick@IGLD-83-130-153-93.inter.net.il) (Ping timeout: 256 seconds)
[17:15:21] *** Joins: gggpkm_ (~gggpkm@123.113.189.203)
[17:15:59] *** Quits: roent (~roent@user/roent) (Quit: My client has gone to sleep. ZZZzzz…)
[17:18:01] *** Quits: gggpkm (~gggpkm@221.219.66.135) (Ping timeout: 258 seconds)
[17:19:00] *** Joins: anovick (~anovick@IGLD-83-130-153-93.inter.net.il)
[17:32:47] *** Quits: entuland (~entuland@user/entuland) (Read error: Connection reset by peer)
[17:32:52] *** Joins: entuland_ (~entuland@user/entuland)
[17:32:58] *** Joins: freakazoid334 (~freakazoi@72.168.176.62)
[17:35:29] *** Quits: mikoto-chan (~mikoto-ch@ip-213-49-189-31.dsl.scarlet.be) (Quit: mikoto-chan)
[17:36:22] *** Quits: freakazoid333 (~freakazoi@72.168.176.62) (Ping timeout: 252 seconds)
[17:38:32] *** Joins: chemical-X (~whatsupbo@user/scobydoo)
[17:39:18] *** Joins: Hrmmm (~Hrmmm@198-27-172-195.fiber.dynamic.sonic.net)
[17:42:34] *** Quits: exvicesindaco (~exvicio@user/exvicesindaco) (Remote host closed the connection)
[17:44:08] <pyzozord> GeDaMo: RE: "cpu shards" and data commutativity of data, https://www.anandtech.com/show/16805/amd-threadripper-pro-review-an-upgrade-over-regular-threadripper/10. This already is a problem right now
[17:49:04] *** Joins: roent (~roent@user/roent)
[17:51:20] *** Quits: snake (~snake@user/snake) (Ping timeout: 255 seconds)
[17:52:02] *** Joins: Izem (~rcg@bras-base-london1483w-grc-42-65-95-172-41.dsl.bell.ca)
[17:53:33] *** Joins: zillion (~zillion@59.88.25.165)
[17:53:51] *** Quits: zillion (~zillion@59.88.25.165) (Client Quit)
[17:54:16] *** Joins: zillion (~zillion@59.88.25.165)
[17:55:55] *** Quits: gggpkm_ (~gggpkm@123.113.189.203) (Ping timeout: 265 seconds)
[17:56:39] *** Joins: zoey (~zoey@2a02:8084:a080:9e00:7c8c:4b88:b1b8:70e1)
[17:58:44] <zillion> which JavaScript front-end framework should i choose if i want to make a website on my own?
[17:59:24] <pyzozord> zillion: what kind of website?
[18:00:42] *** Joins: chomwitt (~Pitsikoko@athedsl-32487.home.otenet.gr)
[18:01:52] *** Quits: inky_ (~inky@5.77.209.148) (Ping timeout: 246 seconds)
[18:02:24] *** Joins: inky_ (~inky@5.77.209.148)
[18:02:49] *** Quits: Hrmmm (~Hrmmm@198-27-172-195.fiber.dynamic.sonic.net) (Quit: Hrmmm)
[18:04:50] *** Joins: snake (~snake@user/snake)
[18:10:10] *** entuland_ is now known as entuland
[18:10:40] *** Joins: spike_spiegel (~spike_spi@static.200.4.251.148.clients.your-server.de)
[18:11:20] *** Quits: Izem (~rcg@bras-base-london1483w-grc-42-65-95-172-41.dsl.bell.ca) (Quit: leaving)
[18:12:20] *** Quits: herjazz (~herjazz@p6758124-ipngn30801marunouchi.tokyo.ocn.ne.jp) (Quit: leaving)
[18:15:29] *** Joins: amahl (~amahl@dsl-jklbng12-54fbca-64.dhcp.inet.fi)
[18:19:09] *** Joins: Inhahe (~inhahe@107-213-219-122.lightspeed.miamfl.sbcglobal.net)
[18:22:29] *** Joins: merijn (~merijn@83-160-49-249.ip.xs4all.nl)
[18:23:23] *** Quits: myon98 (~myon98@user/myon98) (Quit: Bouncer maintainance...)
[18:24:14] *** Joins: jhulten (~jhulten@c-67-185-71-124.hsd1.wa.comcast.net)
[18:24:30] *** Quits: t3nj1n (~t3nj1n@172-79-155-71.nrwc.ny.frontiernet.net) (Ping timeout: 268 seconds)
[18:28:57] *** Quits: jhulten (~jhulten@c-67-185-71-124.hsd1.wa.comcast.net) (Ping timeout: 255 seconds)
[18:32:19] *** Joins: myon98 (~myon98@user/myon98)
[18:33:00] *** Joins: audiofreeze (~audio@2603-8081-1800-00ad-392c-f4fb-e8af-046a.res6.spectrum.com)
[18:33:11] *** Quits: Inline (~Inline@2a02:908:1252:7a80:c035:deeb:51be:5431) (Quit: Leaving)
[18:33:47] *** Joins: TheAceOfHearts (~TheAceOfH@24.41.239.76)
[18:34:09] <GeDaMo> pyzozord: some cores are more equal than others :P
[18:35:19] <pyzozord> :]
[18:35:57] <GeDaMo> https://en.wikipedia.org/wiki/Non-uniform_memory_access
[18:38:38] *** Joins: Inline (~Inline@2a02:908:1252:7a80:c035:deeb:51be:5431)
[18:41:58] *** MrMobius_ is now known as MrMobius
[18:42:05] *** Quits: amahl (~amahl@dsl-jklbng12-54fbca-64.dhcp.inet.fi) (Read error: Connection reset by peer)
[18:42:19] *** Joins: amahl (~amahl@dsl-jklbng12-54fbca-64.dhcp.inet.fi)
[18:42:22] *** Quits: zeenk (~zeenk@2a02:2f04:a106:9600:82fb:aed9:ca9:38d3) (Quit: Konversation terminated!)
[18:44:15] *** Quits: jazzy (~jaziz@2600:380:c07e:8a82:f5ec:dd60:1223:a3c0) (Ping timeout: 255 seconds)
[18:55:16] *** Joins: elnavigator (~elnavigat@105.196.63.39)
[18:56:35] *** Quits: merijn (~merijn@83-160-49-249.ip.xs4all.nl) (Ping timeout: 255 seconds)
[18:58:25] *** Quits: smallville7123 (~smallvill@cpe-172-193-72-46.qld.foxtel.net.au) (Ping timeout: 268 seconds)
[19:02:03] *** Joins: t3nj1n (~t3nj1n@172-79-155-71.nrwc.ny.frontiernet.net)
[19:08:17] *** Quits: roent (~roent@user/roent) (Quit: Bye)
[19:11:19] *** Joins: arcatech (~arcatech@user/arcatech)
[19:23:43] <Donitz> I know you aren't supposed to use zip ties on cable installations
[19:23:46] <Donitz> but what about cable storage
[19:23:58] <Donitz> I have hundreds of cables rolled up with zip ties and stored in a large box
[19:24:27] <Donitz> so many usb cables
[19:25:20] *** Joins: LiftLeft (~LiftLeft@154.21.23.108)
[19:25:32] *** Joins: moose` (~moose@user/moose)
[19:26:41] <JavaBean> i use zipties in lots of "cable installs"... tripled up with bits of cardboard
[19:26:46] *** Quits: leduyquang753 (~leduyquan@user/leduyquang753) (Quit: Gotta go, see you guys later.)
[19:27:23] <Donitz> I read on reddit about people being fired for using zipties on network cables
[19:27:27] <Donitz> since they are too rough basically
[19:27:31] <Donitz> squeezing the cable
[19:27:34] <Donitz> ruins the signal
[19:27:49] <Donitz> difficult to remove
[19:27:54] *** Quits: moose (~moose@user/moose) (Ping timeout: 255 seconds)
[19:27:58] <Donitz> though when storing things, I don't squeeze them very tight
[19:28:09] <Donitz> just enough to keep the cable from unrolling
[19:29:53] <Rashad> There are these wires inside plastic that you can twist around the cables
[19:29:58] <Rashad> I don't know if they have a name
[19:30:11] <Rashad> But getting fired for damaging a cable?
[19:30:11] <Donitz> twisty something
[19:30:18] <Donitz> I mean, imagine it
[19:30:19] <JavaBean> basically... in my case, just enough to keep the bundle from moving, keep the wires going straight, mark where the cable goes... don't use to bundle
[19:30:25] <Donitz> you have a huge datacenter, thousands of network cables
[19:30:27] *** Joins: rsx (~dummy@ppp-188-174-149-162.dynamic.mnet-online.de)
[19:30:34] <Donitz> and you went and used something which ruins the signal on all of them
[19:30:38] <Donitz> I could see that being an issue
[19:30:38] <Rashad> ah
[19:30:46] <Rashad> I thought just an employee at their desk doing it
[19:30:50] <Donitz> naw
[19:34:38] *** Quits: nulleip (~luiz@179.215.124.48) (Ping timeout: 272 seconds)
[19:35:11] *** Quits: swl (~scott@c-73-136-178-185.hsd1.tx.comcast.net) (Quit: leaving)
[19:36:22] *** Joins: nulleip (~luiz@179.215.124.48)
[19:39:39] *** Joins: Null_A (~null_a@2601:645:8700:2290:a961:38e5:e25d:7cd0)
[19:43:31] *** Quits: Rashad (~Rashad@213.139.41.247) (Quit: Client closed)
[19:46:36] *** Joins: AMG (ghebo@user/amg)
[19:50:32] <GeDaMo> "Do Low-level Optimizations Matter?" https://cantrip.org/sortfast.html
[19:51:20] *** Joins: ITD4004 (~ITD4004@187.61.233.248)
[19:51:56] *** Quits: elnavigator (~elnavigat@105.196.63.39) (Ping timeout: 255 seconds)
[19:53:50] *** Joins: Pickchea (~private@user/pickchea)
[19:56:50] <pikapika> GeDaMo, hi
[19:57:00] <GeDaMo> Hi pikapika :)
[19:57:12] *** Quits: sandman13 (sandman13@user/sandman13) (Remote host closed the connection)
[19:57:54] *** Joins: _derpy_ (~quassel@dslb-178-009-133-033.178.009.pools.vodafone-ip.de)
[19:58:19] *** Joins: soapsudsxx (~soapsudsx@209.221.40.138)
[19:59:00] *** Quits: derpy (~quassel@dslb-002-203-130-218.002.203.pools.vodafone-ip.de) (Ping timeout: 252 seconds)
[19:59:44] <pikapika> GeDaMo, apparently astronomers of old used to prepare charts of stars based on their position while crossing the meridian
[20:00:50] <GeDaMo> Uh ... OK?
[20:01:28] <pikapika> GeDaMo, I was looking at brahes room
[20:01:48] <pikapika> Unfortunately a king of his times had the building destroyed
[20:06:19] *** Joins: Guest9 (~Guest9@103.240.169.111)
[20:06:51] *** RemiYuko is now known as AkechiShiro
[20:06:58] <Guest9> Non-UTF-8 code starting with '\xe0' i am getting this error, while playing text
[20:07:06] <Guest9> how to identify which word/character is causing from a text is causing this error?
[20:07:37] *** Quits: wei2912 (~wei2912@112.199.250.21) (Quit: Lost terminal)
[20:07:55] <pyzozord> Wow. "Nowadays, they use a neural net to identify such patterns; the branch prediction cache holds sets of coefficients for the neural net." I had no idea
[20:08:37] <GeDaMo> Guest9: look at a hexdump, check for 0xe0
[20:08:56] *** Joins: elnavigator (~elnavigat@105.196.63.39)
[20:08:57] *** Quits: arcatech (~arcatech@user/arcatech) (Quit: Bye.)
[20:08:58] <InPhase> Guest9: Python:  b'foo\xe0waeraw'.decode()  -->  UnicodeDecodeError: 'utf-8' codec can't decode byte 0xe0 in position 3: invalid continuation byte
[20:09:35] <Guest9> Python:  b'foo\xe0waeraw'.decode()
[20:09:38] <InPhase> Guest9: So if you can load it as bytes, and call decode, you get the first problem point.
[20:10:59] <InPhase> Guest9: If you want every problem point, this will require some more careful looping, and some arbitrary choices.  Failing out at the first issue is the common behavior.
[20:11:19] <Guest9> GeDaMo how ot check hexdump in python?
[20:11:37] <Guest9> or is it feature of IDE-vscode?
[20:12:15] *** Joins: user51 (~user51@77.124.42.70)
[20:12:25] <Guest9> is there any way to skip those character/words which are causing this issue?
[20:12:40] <Guest9> '\xe0
[20:13:42] <GeDaMo> 'hexdump' is a term for displaying data bytes in hexadecimal
[20:13:55] <InPhase> Guest9: b'foo\xe0waeraw\xe0'.decode(errors='ignore')  -->  'foowaeraw'
[20:14:16] *** Joins: sandman13 (sandman13@user/sandman13)
[20:14:19] <ornxka> is there a service that i can pay for that will notify me if my email server gets blacklisted
[20:14:37] <ornxka> i want to host my own but im worried that my emails will silently go to spam folder
[20:14:38] <InPhase> Guest9: b'foo\xe0waeraw\xe0'.decode(errors='replace')  --> 'foo�waeraw�'
[20:14:43] <pyzozord> If new your city has 1 million buildings, and modern cpu core has 0.5 bilion, then one modern cpu core has topology of 500 new yourks
[20:14:52] *** Joins: Guest1719 (~Guest17@2601:404:d300:5a0:2927:d9a4:6db3:4fab)
[20:14:52] <GeDaMo> I'm sure there are public blacklists that you can check
[20:15:34] <ornxka> i was assuming that eg google have their own thing which isnt public, i dont know if thats the case though
[20:15:59] *** Joins: arcatech (~arcatech@user/arcatech)
[20:16:12] <InPhase> ornxka: https://mxtoolbox.com/blacklists.aspx
[20:16:29] <InPhase> ornxka: Also, keep a gmail account, and send it email once in a while to make sure it goes through.  :)
[20:16:52] <GeDaMo> https://emailanalytics.com/email-blacklist/
[20:18:49] <Guest9> https://stackoverflow.com/questions/39818922/errno-13-permission-denied-file-mp3-python
[20:18:56] *** Quits: xff0x_ (~xff0x@2001:1a81:525b:ea00:8ac3:8abd:f864:c680) (Ping timeout: 255 seconds)
[20:18:57] <Guest9> InPhase i am using first answer
[20:19:21] <Guest9> how to modify script so that it can ignore all \xe0 errors
[20:19:39] *** Quits: arcatech (~arcatech@user/arcatech) (Client Quit)
[20:19:54] <ornxka> i guess it really is as simple as just keeping your own gmail/yahoo/whatever account and making sure your stuff gets through, in addition to keeping off ip blacklists
[20:19:57] *** Joins: xff0x_ (~xff0x@2001:1a81:525b:ea00:e4bc:612d:f531:cac7)
[20:20:28] *** Quits: Guest1719 (~Guest17@2601:404:d300:5a0:2927:d9a4:6db3:4fab) (Ping timeout: 246 seconds)
[20:21:54] *** Quits: stkrdknmibalz (~test@rrcs-75-87-43-226.sw.biz.rr.com) (Quit: WeeChat 3.0.1)
[20:25:14] <user51> as far as programming is concerned, what category does stack machine belong to? it doesn't seem like a data structure and doesn't feel like an algorithm either
[20:25:20] <user51> s/stack/state
[20:25:28] *** Quits: chomwitt (~Pitsikoko@athedsl-32487.home.otenet.gr) (Ping timeout: 258 seconds)
[20:26:36] *** Quits: quippy (~quippy@47-220-146-143.gtwncmkt04.res.dyn.suddenlink.net) (Ping timeout: 268 seconds)
[20:26:46] <GeDaMo> https://en.wikipedia.org/wiki/Finite-state_machine "is a mathematical model of computation."
[20:30:43] *** Quits: Crescendo (~Crescendo@user/crescendo) (Read error: Connection reset by peer)
[20:31:49] *** Joins: elkalamar (elkalamar@gateway/vpn/airvpn/elkalamar)
[20:32:56] *** Joins: Crescendo (~Crescendo@user/crescendo)
[20:33:05] *** Quits: Joanna (uid57472@id-57472.tooting.irccloud.com) ()
[20:33:54] *** Quits: Guest9 (~Guest9@103.240.169.111) (Ping timeout: 258 seconds)
[20:34:05] *** Joins: stkrdknmibalz (~test@rrcs-75-87-43-226.sw.biz.rr.com)
[20:34:11] *** Joins: jmcantrell (~weechat@user/jmcantrell)
[20:34:16] <user51> that's closer to a data structure
[20:35:58] <user51> well, i could settle for ROM
[20:38:03] <GeDaMo> "The Gray-1, a homebrew CPU exclusively composed of memory" http://web.archive.org/web/20170203220739/http://2x-1.net/ob/gray1/
[20:40:10] *** Quits: inky_ (~inky@5.77.209.148) (Ping timeout: 268 seconds)
[20:40:15] *** Quits: elnavigator (~elnavigat@105.196.63.39) (Ping timeout: 265 seconds)
[20:40:25] *** Joins: Cleverness (~clevernes@pool-108-54-152-186.nycmny.fios.verizon.net)
[20:43:55] *** Joins: elnavigator (~elnavigat@105.196.63.39)
[20:44:08] *** Quits: Pickchea (~private@user/pickchea) (Ping timeout: 255 seconds)
[20:49:12] *** Joins: nekonibble (~nekonIsL@user/nekobit)
[20:49:56] *** Quits: nekodesu (~nekoIsAL@user/nekobit) (Quit: don't forget, you're here forever :3)
[20:52:26] *** Joins: Guest9 (~Guest9@103.250.139.40)
[20:53:05] *** Joins: merijn (~merijn@83-160-49-249.ip.xs4all.nl)
[20:56:25] <pyzozord> it's very interesting if you dig deep enough, no instructions are needed, just movs, no cpus are needed just memory... It looks like computations can be performed on virtually anything and in any way. All you need is to make a nand somehow
[20:56:28] *** Joins: rustyshackleford (uid236774@id-236774.brockwell.irccloud.com)
[20:58:27] <user51> interesting in what way?
[20:58:29] <pyzozord> kind of reminds me of the domino cpus https://www.youtube.com/watch?v=OpLU__bhu2w
[20:59:21] <GeDaMo> "Intro to Rod Logic" http://www.halfbakedmaker.org/blog/58
[20:59:24] <pyzozord> user51: seems that it has big potential
[20:59:25] <user51> can it do something my x86 can't?
[21:00:40] *** Quits: BUSY (~BUSY@user/busy) (Read error: Connection reset by peer)
[21:01:09] *** Joins: BUSY (~BUSY@user/busy)
[21:01:59] *** Quits: BUSY (~BUSY@user/busy) (Max SendQ exceeded)
[21:02:29] *** Joins: BUSY (~BUSY@user/busy)
[21:05:27] *** Quits: t3nj1n (~t3nj1n@172-79-155-71.nrwc.ny.frontiernet.net) (Ping timeout: 268 seconds)
[21:05:37] <pyzozord> I'm not sure but I think a Stack Machine is an "implementation" of Turing Machine. And State Machine is a much simpler system in the same tree. So it's Stack Machine < Turing Machine < State Machine order in the sense of how concrete/sepcific abstract the idea is
[21:05:47] *** Quits: BUSY (~BUSY@user/busy) (Remote host closed the connection)
[21:06:14] <pyzozord> ignore "concrete/specific"
[21:07:23] *** Quits: geonic (~geonic@user/geonic) (Quit: Ping timeout (120 seconds))
[21:07:40] *** Joins: geonic (~geonic@144.202.104.101)
[21:07:40] *** Quits: geonic (~geonic@144.202.104.101) (Changing host)
[21:07:40] *** Joins: geonic (~geonic@user/geonic)
[21:07:55] *** Quits: elnavigator (~elnavigat@105.196.63.39) (Ping timeout: 268 seconds)
[21:08:10] *** Joins: Auron (~Auron956@user/auron)
[21:09:10] <pyzozord> well nevermind, I just need to actually study some theory of computation
[21:09:51] *** Joins: arcatech (~arcatech@user/arcatech)
[21:10:48] <|smlckz|> search term for you: chomsky hierarchy
[21:11:09] *** Parts: chemical-X (~whatsupbo@user/scobydoo) (WeeChat 2.8)
[21:12:07] <user51> all this language stuff was really boring for me.
[21:12:19] <pyzozord> |smlckz|: thanks
[21:12:27] *** Joins: nekobyte (~nekoIsAL@user/nekobit)
[21:12:36] *** Joins: whatsupboy (~whatsupbo@user/scobydoo)
[21:12:53] <|smlckz|> user51: how [much] boring?
[21:13:10] <user51> good question
[21:13:10] <|smlckz|> pyzozord: np
[21:13:23] <user51> around 85% boring 15% interesting
[21:13:45] *** nekobyte is now known as nekodesu
[21:14:11] *** Quits: arcatech (~arcatech@user/arcatech) (Client Quit)
[21:14:25] <|smlckz|> user51: what's the 15% interesting thing?
[21:14:41] <user51> i was interested in how a parser generator worked
[21:14:44] *** Joins: srikavin5 (~srikavin@user/srikavin)
[21:14:55] <pyzozord> I don't know how it is when you go to uni, never been in one. But I suspect there is a certain degree of being forced to learn things that aren't interesting to you
[21:15:42] <InPhase> pyzozord: I think that applies to most of life.
[21:16:42] *** Quits: Null_A (~null_a@2601:645:8700:2290:a961:38e5:e25d:7cd0) (Read error: Connection reset by peer)
[21:16:47] <pyzozord> Also that's another assumption but I'm guessing if I went through a uni grinder I'd come out the other end much less interested in learning more. Or at least there is a chance for that.
[21:17:04] <GeDaMo> A grammar can be seen as a program with rules being functions which match strings and call other rules
[21:17:06] *** Joins: magla (~gelignite@55d4e6f7.access.ecotel.net)
[21:17:10] *** Quits: srikavin (~srikavin@user/srikavin) (Ping timeout: 268 seconds)
[21:17:10] *** srikavin5 is now known as srikavin
[21:17:17] *** Joins: Null_A (~null_a@2601:645:8700:2290:a961:38e5:e25d:7cd0)
[21:17:26] <GeDaMo> When I was at uni, I learned more in the library than I did in class :P
[21:17:37] <user51> yeah i spend a lot of time reading
[21:17:47] <pyzozord> Trying to make a point that maybe not going to uni is what allowed me to keep my curiosity now. At least it would be a compelling story for not being educated :P
[21:18:00] <user51> i dont have any uni education either
[21:18:14] <InPhase> pyzozord: Everyone enters with a different personality, but that wasn't my experience at all.  I sure sat through classes I didn't enjoy much as part of the process.  But overall, my university experiences broadened my curiosity in a lot of areas that I wouldn't have gotten breadth in without this.
[21:19:02] *** Joins: FoodMan (~FoodMan@cpc104776-belf12-2-0-cust417.2-1.cable.virginm.net)
[21:19:19] <pyzozord> InPhase: yeah that makes sense, I don't know but I always feel like that is what the name university comes from. Sounds that way.
[21:19:53] <pyzozord> But from people's stories it sounds like you need to learn by yourself even when you go there
[21:20:27] <|smlckz|> if you come out as less interested, then it could be the you had chosen the wrong subject, or you got bad educators/environment or both
[21:20:29] <user51> i signed up for the open uni. let's see how that goes.
[21:21:04] <pyzozord> cool, good luck
[21:21:16] <zillion> pyzozord: a simple enough website, say an online flashcard service.
[21:21:18] <InPhase> Donitz: On cable ties, the best ones are velcro cable ties.  They're soft enough to not damage anything, and unlike the rigid plastic ones, you can very easily remove, readd, and adjust them.  This gives you both organization and flexibility without ending up crimping anything down.
[21:21:33] <pyzozord> although at my situation I am not sure how benefitial it would be to go through uni now
[21:22:09] <pyzozord> people would look at me weird for being too old
[21:22:22] <user51> how old are you
[21:22:24] <GeDaMo> I went at 28
[21:22:25] <user51> 54?
[21:22:36] <InPhase> Donitz: Just don't wrap anything up tight enough to violate the bending limits of high speed cables.  :)
[21:22:37] <pyzozord> Just turned 30 this month
[21:23:05] <user51> 3 years older than me
[21:23:09] *** Joins: elnavigator (~elnavigat@105.196.63.39)
[21:23:29] <pyzozord> I don't look it, I could pass for 28. Also very immature. Hmm maybe I would fit in with the uni crowd
[21:23:35] <user51> i'm still not really sure if i'll stay for more than a year - let's see how that goes
[21:23:47] <user51> the math lessons might be worth it
[21:24:38] *** Joins: Izem (~Izem@bras-base-london1483w-grc-42-65-95-172-41.dsl.bell.ca)
[21:24:49] <GeDaMo> I learned calculus at school, I learned it again at uni and I've forgotten it all :/
[21:24:56] <InPhase> pyzozord: On "learn by yourself", it's a mistake to think any formal education program is complete enough for what a person needs to know.  There is a lot of stuff covered in an undergraduate curriculum, and most of that is very hard for people to learn on their own.  (It's sure possible.  But certainly most people who try to learn the equivalent on their own do not succeed at it.)  But there is
[21:25:02] <InPhase> just so much more to learn, that the good software engineers are out there learning a lot of other stuff on projects done outside of class as well.
[21:25:29] <zillion> which JavaScript front-end framework should i choose if i want to make a website on my own?
[21:25:42] <InPhase> pyzozord: So both are true, that a degree is hugely beneficial, and not enough on its own.
[21:26:13] *** Joins: chomwitt (~Pitsikoko@athedsl-32487.home.otenet.gr)
[21:26:43] <pyzozord> GeDaMo: lol :D
[21:26:53] <user51> InPhase: i still don't know what software engineering is, and what it's not
[21:27:11] *** Quits: merijn (~merijn@83-160-49-249.ip.xs4all.nl) (Ping timeout: 258 seconds)
[21:27:12] <mathAndRhetoric> I'm looking for an algorithm or Java class that acts like a write buffer. It lets you append in it until a timeout. When it timeouts, the buffer needs to be sent via a socket. The timeout may be as low as 1 millisecond. How would you code it?
[21:27:13] <pyzozord> InPhase: I see, so you would still suggested me to go despite my any doubts?
[21:27:26] <pyzozord> zillion: depends on what kind of website
[21:28:17] <zillion> pyzozord: a simple enough website, say an online flashcard service.
[21:28:28] *** Quits: SGautam (~SGautam@117.195.240.234) (Ping timeout: 252 seconds)
[21:28:28] *** Joins: __jmcantrell__ (~weechat@user/jmcantrell)
[21:28:47] <InPhase> user51: Software engineering is programming done with more intention and steps on design, requirements, testing, architecture, planning, performance, and component interactions, which become increasingly important as programs and systems become larger and more complicated.
[21:28:49] <user51> thing is, sometimes i wonder if software engineering is just a fancy term for 'organized common sense'
[21:29:22] <Izem> It's engineering if it uses engineering methods imo
[21:29:50] <m3wzx5> nail random stuff together while getting arbitrary deadlines with no regard to safety or the end users is not engineering to me
[21:30:11] <user51> InPhase: yeah, i suppose i do it informally. but there's a funny paradox where at the start i didn't really know much, but now i can sometimes notice how the thing actually would work, the relevant data structures, etc
[21:30:18] <zillion> pyzozord: do you program in JavaScript?
[21:30:20] <pyzozord> zillion: flashcard service?
[21:30:25] <Izem> engineering methods are like planning and getting permits and stuff
[21:30:48] <pyzozord> zillion: yes, my daily job is frontend web developer
[21:31:22] <Izem> mathAndRhetoric: what happens when the buffer is full?
[21:31:23] *** Quits: jmcantrell (~weechat@user/jmcantrell) (Ping timeout: 255 seconds)
[21:31:30] *** Joins: BUSY (~BUSY@user/busy)
[21:32:09] <zillion> pyzozord: i'm trying to learn how to build a website. i might make a simple flashcard app as a PWA. regardless, which framework do you suggest i should learn? i'm well versed in programming in C and Perl.
[21:32:36] <Izem> react and angular are popular
[21:32:44] <mathAndRhetoric> Izem the same as on timeout. The content is sent via socket to empty the buffer.
[21:32:53] <zillion> Izem: do you use them?
[21:33:10] <Izem> zillion not yet, but I have contemplated learning react many times :P
[21:33:20] <Izem> I'm reading about JavaScript right now
[21:33:28] <mathAndRhetoric> Izem and of course a new instance of the buffer is used to batch multiple messages until the deadline. (the deadline can be currentTime + 1 ms)
[21:34:35] <Izem> mathAndRhetoric: well it sounds like you know what to do. All you need is to handle time
[21:34:49] <mathAndRhetoric> Izem maybe I'd check buffer.size() prior to adding a new message
[21:35:03] *** Quits: elnavigator (~elnavigat@105.196.63.39) (Ping timeout: 268 seconds)
[21:35:26] <pyzozord> zillion: ok then whatever you prefer. I like React. It's more functional and it's not a framework, it's a view library, most react projects look different. They use different libraries for state management, api communication or form handling etc. You can choose Angular, it's all-in-one opinionated framework, complete with dependency injection and everything. Or something in between those two, Vue.
[21:35:32] <pyzozord> Lastly you can just do stuff in jQuery, or focus on writing native html/js with things like Web Components and other browser apis
[21:35:53] <mathAndRhetoric> Izem "all you need is to handle time" - how?
[21:35:59] <Izem> currentTime + 1ms looks like time.Now() + 1 in code, or something to that effect
[21:36:03] <GeDaMo> mathAndRhetoric: something like https://docs.oracle.com/javase/8/docs/api/java/util/Timer.html ?
[21:36:32] <furrymcgee> zillion: there are different perl frameworks as well
[21:36:53] <Izem> why perl if it's a PWA?
[21:37:20] <zillion> furrymcgee: i'm trying to learn JavaScript as i'd have to do front-end programming anyway.
[21:37:56] <mathAndRhetoric> GeDaMo I need to see the code of a buffer that implements such a timeout (for performance reasons)
[21:38:12] <mathAndRhetoric> GeDaMo or, I need to hear the name of such an algorithm (if it has a name)
[21:38:30] <zillion> i also keep hearing of TypeScript. are there any advantages to using it?
[21:38:31] <Donitz> jquery has almost entirely been replaced by ES6
[21:39:11] <mathAndRhetoric> GeDaMo java.util.timer is a Thread that uses synchronized() and Object.wait() Object.notify()
[21:39:24] <Donitz> pros: you get types, cons: yet another toolchain to work with
[21:39:50] <Donitz> but I'm biased towards using vanilla js
[21:39:59] <zillion> Donitz: why?
[21:40:03] <Izem> Donitz: How well is ES6 supported?
[21:40:12] <Donitz> because you understand how everything works down to the engine level
[21:40:14] <Donitz> no bloated deps
[21:40:21] <Donitz> you understand every part of your code
[21:40:32] <zillion> Donitz: is it easy to build a PWA out of vanilla JavaScript?
[21:40:41] <Izem> Yeah
[21:40:41] <Donitz> I'd argue creating anything with vanilla js is easy
[21:40:51] *** Joins: elnavigator (~elnavigat@105.196.63.39)
[21:40:59] <Square> JavaScript takes a way all fun with programming. Also makes future dark.
[21:41:02] <Izem> What makes it a PWA is the app manifest right?
[21:41:37] <Donitz> and serve workers apparently
[21:41:44] <GeDaMo> mathAndRhetoric: it reminds me of https://en.wikipedia.org/wiki/Nagle's_algorithm
[21:41:46] <Donitz> both the manifest file and service workers are super easy to use in vanilla js
[21:42:00] <ITD4004> sooooooooooo
[21:42:04] <Donitz> service*
[21:42:09] <ITD4004> here's my ADPCM encoding script everyone
[21:42:11] <ITD4004> https://bpa.st/VFOFEVD4FZ55OBGV6FXR7CUUIY
[21:42:45] <|smlckz|> Square:
[21:42:50] <Donitz> fairly certain some of those things can be made into loops
[21:42:54] <zillion> Donitz: i meant to ask, is it easy to create moderately complicated web apps in vanilla JavaScript? while i too like to err on the side of simplicity, if vanilla JavaScript is all we need, why are there so many frameworks?
[21:43:08] <DPA> Izem: It should also have a service worker. I think that's the much more important but also more difficult thing needed.
[21:43:12] <Donitz> yes it's easy. in a web app, a large part of the actual app is just html + css
[21:43:20] <|smlckz|> what might make future bright, you think?
[21:43:20] <Donitz> here's an example of something I made in js
[21:43:31] <pulse> zillion, because user interface isn't generalized well enough without them
[21:43:34] <Donitz> https://img2map3d.herokuapp.com
[21:44:00] <Donitz> and
[21:44:10] <Donitz> http://nanite-os.herokuapp.com/index.html
[21:44:43] <mathAndRhetoric> GeDaMo it's a bit similar, except the work with time is not in Nagle's. The required concept is possibly a Bounded Buffer with Timeout
[21:44:48] <DPA> Service porkers are wicked. Make the wromg mistake and it can't be fixed anymore.
[21:44:53] <DPA> *workers
[21:45:04] <Donitz> how do you mean?
[21:45:13] <Square> Smlckz: well designed languages with statical typing and lazy eval
[21:45:14] <mathAndRhetoric> GeDaMo it needs to enqueue (batch) messages until the deadline, and then I want to send the batch via socket
[21:45:33] <Izem> I'll admit I'm not a fan of web documents trying to look like applications, but the future looks bright to me, esp cause of all this open hardware
[21:45:35] <Donitz> well, service workers are kinda a pain to update
[21:45:43] <Donitz> web workers on the other hand are much simpler
[21:45:48] <Donitz> I like web workers more
[21:46:08] <|smlckz|> someone make a web framework built right into the browser itself, and make it so that people can actually use it...
[21:46:27] <|smlckz|> Square: what's lazy eval?
[21:46:46] <Izem> Square there's been a lot of languages like that
[21:47:01] <zillion> Donitz: these look good enough.
[21:48:07] <Donitz> https://www.dropbox.com/s/ocbu5u13znhagfn/vector.020.png?raw=1
[21:48:12] <Donitz> something else I've been working on
[21:48:13] <zillion> i'm heavily biased in favour of type-safety as it is provided in Haskell. is the type-safety provided by TypeScript worth the toolchain it requires to run?
[21:48:16] <Square> Smlckz: Google "lazy evaluation"
[21:48:18] <Donitz> the entire interface is basically just css
[21:48:21] *** Joins: trevors (~trevors@catv-89-132-207-129.catv.broadband.hu)
[21:48:31] <Square> (On phone)
[21:48:36] <Donitz> except for the editor window
[21:48:38] <Izem> zillion people sure think so
[21:48:50] <Donitz> type safety is ALWAYS superior
[21:48:55] <Donitz> but sometimes you just don't have it
[21:48:58] <Donitz> so you bite the bullet
[21:48:59] <Izem> it will not be as nice as HM though
[21:50:00] *** Joins: elkalamar_ (elkalamar@gateway/vpn/airvpn/elkalamar)
[21:50:24] <Square> It's sad the biggest programming language was rushed together by 1 dude at netscape
[21:50:26] <Izem> It's more to protect the programmer than give you some strong guarantee of safety
[21:50:56] <Izem> Maybe if helps the compiler too, but it seems that typescript is a transpiler?
[21:51:10] <DPA> |smlckz|: lazy eval is when things are calculated only when they are attempted to be used. So, like, you say x = y(), but you execute, or continue to execute y, when x or x[i] is accessed.
[21:51:10] <DPA> Some things may never really need to be executed, or fully calculated.
[21:51:32] <Donitz> type safety makes code much better at being self-documenting
[21:52:18] <Izem> lazy eval makes no sense in JS
[21:52:21] *** Quits: elkalamar (elkalamar@gateway/vpn/airvpn/elkalamar) (Ping timeout: 255 seconds)
[21:52:49] <Donitz> it makes sense if frameworks which uses data bindings
[21:52:50] *** pikapika is now known as antichrist
[21:52:55] <Donitz> such as in django
[21:53:02] <Donitz> which ofc is python
[21:53:25] <Izem> in general JS just goes over the network, it's now being interpreted as it's being downloaded
[21:53:49] <Izem> the mistake was making JS bigger than what it was supposed to be
[21:54:00] <zillion> i shall try to get used to JavaScript or TypeScript and see how cumbersome it is to create a website using vanilla JavaScript. if it works, there would be no need for a framework.
[21:54:02] <Izem> not something you can fault the author for
[21:54:03] <Donitz> come on, the web has become more amazing than ever
[21:54:09] *** Quits: Null_A (~null_a@2601:645:8700:2290:a961:38e5:e25d:7cd0) (Ping timeout: 255 seconds)
[21:54:10] <Square> JS could be pure, why not
[21:54:10] <Donitz> even though it's often misused by shitty news websites
[21:54:31] *** Joins: elkalamar__ (elkalamar@gateway/vpn/airvpn/elkalamar)
[21:54:32] <Izem> Square yes I agree
[21:54:51] <Izem> but it seems they did not have enough time to think of that (it's research anyways)
[21:55:18] *** Joins: Intelo (~Intelo@88.244.92.35)
[21:55:49] *** Joins: inky (~inky@37.252.68.206)
[21:55:50] <|smlckz|> whatever you do, or have nice things [abstractions], no problems; when your function call to do some "simple" task has >1M instructions away from the syscall making it a reality, *weep*
[21:56:25] <Izem> JS is not be be making syscalls, or doing any IO
[21:56:43] <Izem> being pure would've been neat, but it's too late now
[21:57:15] *** Quits: elkalamar_ (elkalamar@gateway/vpn/airvpn/elkalamar) (Ping timeout: 268 seconds)
[21:57:20] <Square> Networking? DOM manipulation?
[21:57:59] <Izem> networking is supposed to be transparent isn't it?
[21:58:32] <Izem> and yeah, I guess the DOM is IO but I think that's much easier to reason about.
[21:58:37] <Square> Just mean it is IO
[21:58:40] <Izem> networking idk
[21:59:06] <Izem> sure, but that's not what I mean
[21:59:12] *** Quits: zillion (~zillion@59.88.25.165) (Quit: leaving)
[21:59:17] <Izem> IO is not in ecmascript
[21:59:29] *** Parts: Izem (~Izem@bras-base-london1483w-grc-42-65-95-172-41.dsl.bell.ca) ()
[21:59:34] *** Joins: Izem (~Izem@bras-base-london1483w-grc-42-65-95-172-41.dsl.bell.ca)
[22:01:13] *** Joins: CodeSpelunker (~CodeSpelu@user/codespelunker)
[22:01:42] <Izem> In JS all functions are objects, that's pretty cool. I take it that was the same thing in smalltalk?
[22:01:46] *** Joins: Akuli (~Akuli@82-203-164-218.bb.dnainternet.fi)
[22:02:03] *** Quits: rsx (~dummy@ppp-188-174-149-162.dynamic.mnet-online.de) (Quit: rsx)
[22:04:53] <pulse> guess what [,,,] evaluates to in JS
[22:05:01] <GeDaMo> 6
[22:05:13] <pulse> *wrong answer buzzer*
[22:05:37] <pulse> it's either a) empty array of length 3 or b) empty array of length 4 or c) syntax error
[22:05:49] * pulse starts the countdown
[22:05:52] <Izem> c ?
[22:05:58] <pulse> *wrong answer buzzer*
[22:06:15] <GeDaMo> How can it be an empty array and also have a length? :|
[22:06:29] <pulse> sorry i misworded that
[22:06:35] <pulse> array of empty items :D
[22:06:44] *** Joins: jmcantrell (~weechat@user/jmcantrell)
[22:06:46] <pulse> a) array of length 3 or b) array of length 4
[22:07:02] *** Quits: Crescendo (~Crescendo@user/crescendo) (Read error: Connection reset by peer)
[22:07:06] <Izem> pulse that has to be null objects?
[22:07:10] <GeDaMo> 4
[22:07:24] <Izem> empty array with members?!
[22:07:28] <pulse> wrong, and wrong
[22:07:37] *** Quits: mnrmnaugh (~mnrmnaugh@pool-96-252-87-182.bstnma.fios.verizon.net) (Quit: Leaving)
[22:07:51] <pulse> [,,,] evaluates to an array [empty x 3] due to the fact the last comma is a trailing comma ( https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Trailing_commas )
[22:08:18] <pulse> which makes [,,,].length equal to 3
[22:08:44] <kzootech> http://www.jsfuck.com/
[22:09:10] <pulse> lol that eval statement
[22:09:13] <pulse> that seems.. safe
[22:09:44] *** Quits: __jmcantrell__ (~weechat@user/jmcantrell) (Ping timeout: 258 seconds)
[22:10:23] *** antichrist is now known as pikapika
[22:10:33] <kzootech> i like how it take difficult to understand javascript and makes it easier to understand by just using 6 characters instead of like.... 50 or whatever
[22:10:35] <pulse> i still don't understand why []+[] is a string
[22:10:44] <Izem> guess the obfuscated javascript contest would be pretty easy
[22:10:54] *** Joins: Crescendo (~Crescendo@user/crescendo)
[22:13:11] *** Quits: NEYi (~NEYi@109.251.216.38) (Quit: Leaving)
[22:13:37] *** Quits: Crescendo (~Crescendo@user/crescendo) (Read error: Connection reset by peer)
[22:14:35] <kzootech> i think jsfuck is what crockford was talking about in "javascript, the good parts"
[22:14:57] <pulse> JS is actually great, but you have to be aware of the pitfalls
[22:15:13] <kzootech> oh i agree
[22:15:38] <kzootech> if you understand its functional nature its quite great
[22:15:46] <pulse> if something takes me an hour to do in C++, it typically takes me a few minutes in JS
[22:15:56] *** Quits: jmcantrell (~weechat@user/jmcantrell) (Ping timeout: 255 seconds)
[22:15:58] <pulse> everything it just very rapidly available
[22:16:03] *** Joins: arcatech (~arcatech@user/arcatech)
[22:16:36] <kzootech> its easy to get to qualit output too with the browser being right there (ignoring node)
[22:17:01] *** Quits: trevors (~trevors@catv-89-132-207-129.catv.broadband.hu) (Quit: My MacBook has gone to sleep. ZZZzzz…)
[22:17:03] <pulse> the downside of JS, for me, is that the vagueness of the language leads to a lot of ambiguity in code. it's hard to scale for that reason
[22:17:10] <pulse> not impossible, just much harder than with traditional languages
[22:17:22] <pulse> i guess that's why we have TS
[22:17:29] <pulse> somewhat less vague
[22:18:59] <kzootech> i think the problem with JS for me (besides some of its general weirdness around == and ===, etc) is that i just program for the hell of it and javascript has a lot of equally interesting ways to do things
[22:19:20] <kzootech> so i often dont finish stuff because it was more just exploring the language than trying to actually do something practical
[22:20:07] *** Joins: AbleBacon (~AbleBacon@user/AbleBacon)
[22:20:49] <kzootech> then again, when yo dont have any real goals or deadlines that can happen with most languages
[22:21:02] *** Quits: Izem (~Izem@bras-base-london1483w-grc-42-65-95-172-41.dsl.bell.ca) (Quit: Connection closed)
[22:21:14] <deniska> pulse: isn't JS a traditional language at this point? :P
[22:21:22] *** Joins: Stefan26 (~Stefan26@78-67-218-242-no207.tbcn.telia.com)
[22:21:52] <pulse> idk, when i hear traditional i think Pascal and C
[22:23:03] <deniska> ah, so 50 years old as opposed to 25 years old
[22:25:19] <pyzozord> funny that our field is less then 100 years old and there is already too much of it to learn all of it
[22:25:45] *** Joins: Crescendo (~Crescendo@user/crescendo)
[22:26:59] *** Quits: elnavigator (~elnavigat@105.196.63.39) (Ping timeout: 258 seconds)
[22:27:30] <JavaBean> that is a quitters attitude
[22:28:06] *** Joins: BrianG61UK__ (~BrianG61U@2a02:8010:66b7:dddd:3c7f:828b:5efb:666d)
[22:28:17] *** Joins: elnavigator (~elnavigat@105.196.63.39)
[22:28:28] *** Joins: jmcantrell (~weechat@user/jmcantrell)
[22:29:29] *** Joins: meleoron (~meleoron@59.88.25.165)
[22:30:13] *** Quits: daegalus (~yulian@user/daegalus) (Read error: Connection reset by peer)
[22:30:40] *** Joins: daegalus (~yulian@user/daegalus)
[22:30:50] *** Quits: CodeSpelunker (~CodeSpelu@user/codespelunker) (Quit: CodeSpelunker)
[22:31:14] <whatsupboy> 100years old?
[22:31:16] <kzootech> pyzozord: thats why im learning all of music instead
[22:31:30] *** Quits: BrianG61UK_ (~BrianG61U@2a02:8010:66b7:dddd:a4bd:7fef:a8ad:1123) (Ping timeout: 255 seconds)
[22:31:40] *** Quits: arcatech (~arcatech@user/arcatech) (Quit: Bye.)
[22:32:09] <kzootech> every collective human intellectual adventure will last as long as there are humans to adventure those relms
[22:32:31] <kzootech> every topic is bigger than you could learn in a lifetime
[22:32:33] *** Quits: Crescendo (~Crescendo@user/crescendo) (Read error: Connection reset by peer)
[22:32:48] <meleoron> if there is a function in C which takes a pointer as an argument, for example `void f(char *s, char *t) { ... }`, there can be no way that it could "allocate" memory for `to`. so, if i'm passing `to` and `from` to the function, i have to take care of the memory allocation myself in every single case. am i correct?
[22:33:20] <kzootech> meleoron: you can allocate a pointer anywhere
[22:33:32] <kzootech> i mean malloc() allocates an external pointer... thats its job
[22:33:45] <kzootech> you need to keep track of your pointer and make sure to free() it
[22:34:32] <kzootech> its, generally a better practice to "t=malloc(sizeof(things)); f(s,t); free(t);" usually
[22:34:52] *** Quits: jmcantrell (~weechat@user/jmcantrell) (Ping timeout: 268 seconds)
[22:36:22] *** Quits: Guest77 (~Guest77@2402:e280:2117:297:ecf8:f374:8704:f843) (Quit: Client closed)
[22:36:26] <meleoron> kzootech: imagine i encounter a function `char *f(char *s)` in some library which promises to provide me some string in `s`, say the current working directory, etc. there can be no case under which i pass an unallocated pointer `s` to `f` and expect it to allocate the space for the pointer and fill in the value because to allocate space for the pointer, `f` would need access to `&s`. right?
[22:36:43] *** Quits: inky (~inky@37.252.68.206) (Ping timeout: 265 seconds)
[22:36:44] *** Joins: jmcantrell (~weechat@user/jmcantrell)
[22:38:46] <kzootech> meleoron: if it were char **s it could work
[22:38:55] <kzootech> but generally that kind of thing is frowned upon
[22:39:11] *** Quits: elkalamar__ (elkalamar@gateway/vpn/airvpn/elkalamar) (Ping timeout: 268 seconds)
[22:39:24] <kzootech> char *f(char *s) makes me neverous because there is no string length denoted
[22:39:40] <meleoron> kzootech: it's an example.
[22:39:45] <kzootech> so there could be a buffer overrun in your future
[22:40:07] *** Quits: furrymcgee (~devuan@31.179.186.66) (Quit: leaving)
[22:40:11] <kzootech> the char* that the fucntion is returning could point to memory allocated during the function call
[22:40:32] <kzootech> which is likely how you would want to do it
[22:40:49] <kzootech> idk the examples are a bit to vanilla to say "do it this way"
[22:41:32] *** Joins: kedamono (~kedamono@2600:1016:b014:fdfe:4591:9308:3173:f0ac)
[22:41:39] <kzootech> but generally when i get into spots where i find myself wanting to allocate inside a function without free()ing i pause for a bit and consider the overall structure of the program
[22:41:56] <meleoron> kzootech: i'm seeing many functions in the GNU libc which have the form `char *f(char *to, char *from) { ... }` where the return value is equal to the value which f set to `to`. which is more conventional: returning values from a function or setting value in one of the parameters?
[22:42:04] *** Quits: kedamono (~kedamono@2600:1016:b014:fdfe:4591:9308:3173:f0ac) (Remote host closed the connection)
[22:42:10] <kzootech> give an example
[22:42:10] *** Quits: nekodesu (~nekoIsAL@user/nekobit) (Quit: don't forget, you're here forever :3)
[22:42:23] <meleoron> kzootech: void * memcpy (void *restrict to, const void *restrict from, size_t size)
[22:42:27] <kzootech> like the strcpy() functions?
[22:42:29] <meleoron> kzootech:            The value returned by memcpy is the value of to.
[22:42:40] <meleoron> kzootech: yes.
[22:42:47] <kzootech> yeah so a) check out that size_t!
[22:43:01] <meleoron> kzootech: but i'm asking in general as a convention.
[22:43:03] <kzootech> memcpy does no allocation
[22:43:09] <meleoron> kzootech: i know.
[22:43:28] <meleoron> kzootech: i think there is a misunderstanding. i was asking a hypothetical.
[22:44:06] <kzootech> meleoron: it would be "bad form" to have memcpy do an alloc() that it didnt free()
[22:44:24] <kzootech> as much as possible you want functions to be "side-effect free"
[22:44:41] <kzootech> and malloc() is a side-effect
[22:44:41] *** Quits: BrianG61UK__ (~BrianG61U@2a02:8010:66b7:dddd:3c7f:828b:5efb:666d) (Quit: Leaving)
[22:44:52] <meleoron> kzootech: what i asked was, a function like `memcpy` couldn't *do* any allocation for `to` and `from` if i provide just `char *to` and `char *from` as arguments.
[22:45:00] <meleoron> kzootech: right?
[22:45:05] *** Joins: BrianG61UK_ (~BrianG61U@2a02:8010:66b7:dddd:3c7f:828b:5efb:666d)
[22:45:52] <kzootech> well you could still do something like from = malloc(...);
[22:46:04] *** Quits: jmcantrell (~weechat@user/jmcantrell) (Ping timeout: 246 seconds)
[22:46:06] <kzootech> but you are working with a copy of the pointer value
[22:46:12] <meleoron> kzootech: i could do it outside the function.
[22:46:13] <kzootech> so that from will work inside the function
[22:46:14] *** Joins: nekobyte (~nekoIsAL@user/nekobit)
[22:46:24] <pyzozord> meleoron: you cannod do an "allocation at address", when you allocate memory you get new address
[22:46:30] <kzootech> but when you return from the function, that value from value isnt coming with you
[22:46:50] <kzootech> so you will lose control of a pointer
[22:47:02] <meleoron> i think there is a misunderstanding. will you allow me to write a message to clarify my situation?
[22:47:05] <kzootech> which is the first (and sort of only) step in a memory leak
[22:47:09] *** Quits: yaboiburner (~yaboiburn@c-69-180-160-103.hsd1.mn.comcast.net) (Remote host closed the connection)
[22:47:31] <meleoron> ?
[22:47:48] *** Joins: eyynet4 (~0x100@32.211.211.39)
[22:47:58] <kzootech> you woud need void *memcpy(void *to, void **from, size_t size);
[22:48:20] <kzootech> when you call memcpy it is your job to provide it with the memories it needs
[22:48:24] <meleoron> okay, let me completely describe the situation before attempting to answer. i will signal EOF when my message ends. my client doesn't allow indefinite messages.
[22:48:39] <kzootech> >> EOF
[22:48:55] <meleoron> kzootech: cat << EOF, so here it goes :)
[22:49:09] *** Quits: nekobyte (~nekoIsAL@user/nekobit) (Client Quit)
[22:49:27] *** Joins: yaboiburner (~yaboiburn@c-69-180-160-103.hsd1.mn.comcast.net)
[22:49:49] <meleoron> whenever i see a function in C, i see there are many ways to return a value.
[22:50:33] <meleoron> two are commonly encountered, some functions either return an automatic value or a pointer, and some functions ask for a pointer and set the value to the location that the pointer represents.
[22:52:13] <meleoron> since i'm still learning C, i was always confused about where you are supposed to allocate the memory for the pointer before passing it to the function. should i *always* allocate memory for a pointer which i'm passing as an argument? should i allocate memory for the variable i would be using to get the return value? should i decide on a case by case basis by reading the manual. such questions
[22:52:19] <meleoron> plagued my mind.
[22:52:39] <DPA> void do_something(void*from, void*ptr, void(*callback)(void*ptr, void*to)){ char x[] = "123"; callback(ptr, x); }
[22:53:37] <InPhase> meleoron: It depends on the specification for the function and what it expects.  Some you can allocate, some can be a local variable, some you can leave NULL.  Others you leave NULL and it crashes the whole program.  So you have to check and know for every call.
[22:53:39] <pyzozord> meleoron: just read manual, they will tell what the function expects
[22:53:44] <meleoron> now, i think i've got it. RULE 1: no function could allocate memory *to* a pointer `int *p` if i pass just `p` to the argument as i am passing the copy, so ALWAYS declare memory for a pointer before passing it as an argument if you want it to be filled.
[22:53:59] *** Quits: nekonibble (~nekonIsL@user/nekobit) (Ping timeout: 268 seconds)
[22:54:06] <kzootech> EOF
[22:54:08] <meleoron> RULE 2: if a function returns, just declare the pointer like `int *p` and take the return value.
[22:54:11] <meleoron> EOF
[22:54:18] *** Joins: nekonibble (~nekonIsL@user/nekobit)
[22:54:28] <meleoron> now, am i correct?
[22:54:34] <glguy> meleoron, your question makes me think you're just misunderstanding something about pointers
[22:55:03] <glguy> to pass a pointer as an argument of a function it has to point at something already
[22:55:38] <meleoron> glguy: only if i expect it to be filled.
[22:56:01] <InPhase> meleoron: Some functions take a pointer and return a pointer which might or might not be the same as the original pointer.  Some functions return a pointer which might be the same as the original pointer indicating success and no move, might be a new pointer indicating a reallocation happened internally, and might be NULL indicating an error happened and the original pointer is not reallocated,
[22:56:02] <kzootech> well lets look at memcpy() at bit https://github.com/openbsd/src/blob/master/lib/libc/string/memcpy.c
[22:56:04] <glguy> If you don't want to point to something you'd use NULL
[22:56:07] <InPhase> meaning you have to save the original pointer to deallocate it yourself.  All sorts of these varieties happen, and you have to handle whichever one is specified.  That's how C rolls.  When you get tired of the mess, switch to C++ and enjoy the piece of self-managing objects with value semantics.  :)
[22:56:15] <GeDaMo> You can't pass a pointer and have it set to newly allocated memory, it would have to be a pointer to a pointer
[22:56:32] <InPhase> s/piece/peace/
[22:57:01] <kzootech> in C everything is called "pass-by-value"
[22:57:43] <kzootech> a point is just basically like an int (dont hurt me for saying that people :|), its just a number, a memory address
[22:58:00] <kzootech> so when you pass a pointer, to a function you are passing a COPY of that number to the function
[22:58:03] <meleoron> glguy: i'm posing hypotheticals here. i could certainly do something like, `int *p = NULL; f(p)` if the behaviour of `f` is based on checking `NULL`.
[22:58:31] <glguy> meleoron, yup, you can either pass a pointer that points to some allocated memory, or NULL
[22:58:44] <kzootech> like in assembly language memcpy function call would look like "push dst0; push src0; push length"
[22:58:58] <kzootech> so those are all stack-allocated values now, when you are talking about them within memcpy()
[22:59:15] <kzootech> can you change them? yes but at the end of the function call it goes "pop pop pop"
[22:59:19] <kzootech> and those values are gone
[22:59:20] <meleoron> GeDaMo: thanks.
[22:59:28] <meleoron> GeDaMo: that's what i was thinking.
[22:59:35] <meleoron> GeDaMo: it's because of call-by-value.
[22:59:46] <meleoron> GeDaMo: i just wanted to hear it from experts.
[22:59:54] <kzootech> i think its confusing because memcpy returns a pointer too
[23:00:23] *** Quits: digilink (~digilink@user/digilink) (Quit: WeeChat 3.2)
[23:00:23] <kzootech> but its not returning a "new pointer", its literally just returning dst0 that you passed in
[23:00:38] <kzootech> for convience only
[23:00:39] <InPhase> meleoron: If you want to see that peak chaos case, look at the standard and important C function realloc.  It takes a pointer or NULL, it returns the same pointer, or a new pointer, or NULL.  Returning NULL is either an indication of an error, or an indication that you requested a size of 0.  errno is set to ENOMEM if the return was NULL and the size requested was not 0.
[23:01:20] <kzootech> InPhase: yeah i was just going to find a good example of maybe a string function that can return a pointer that isnt actually one of the ones you passed in
[23:01:27] <meleoron> thanks for all the answers but it's not helping.
[23:01:34] <eyynet4> C can pass parameters by pointer behind the scenes on you, dependin on calling convention+architecture
[23:02:17] <InPhase> meleoron: The real answer is that there's not one approach, there are very many, and they are highly varied.
[23:02:33] <kzootech> eyynet4: im sure some compilers can also optimize out the push/pop of a function call based on context
[23:02:37] <meleoron> whenever i ask a question on convention here, people keep telling me the language semantics.
[23:02:50] <kzootech> and end up with an "inlined" function call
[23:03:05] <InPhase> meleoron: For more concrete answers, you have to move out of hypothetical to specific cases of existing functions, or ask about best practice for a particular use case.  There's no one best practice for all use cases in C.
[23:03:25] <meleoron> InPhase: ok.
[23:03:44] <InPhase> meleoron: Understand we weren't trying to give you a hard time.  That's just how it rolls in C.  :)
[23:03:54] <kzootech> meleoron: a lot of being a good program is knowing how to work idomatically, you write things certains because it helps you produce correct code the first time
[23:04:22] <kzootech> c is pretty simple language really, but if you are coming from a higher level language you might feel like it lacks a few things
[23:04:36] <kzootech> that make other languages "easier"
[23:04:38] <InPhase> kzootech: Like 50 years of languag evolution...
[23:04:44] <InPhase> language
[23:05:19] <meleoron> InPhase: you're not helping. first of all you reply before EOF. then you're just being hardcore. i'm trying to learn the good practices. looks like there's no good place on IRC to ask questions about C. folks at ##c only know how to mock and folks here assume that anyone asking questions in C still hasn't read K&R.
[23:05:26] <kzootech> InPhase: 49 years, but whos counting
[23:05:28] <meleoron> anyway, thanks for nothing.
[23:05:30] <meleoron> i'll leave.
[23:05:53] *** Quits: meleoron (~meleoron@59.88.25.165) (Quit: leaving)
[23:05:56] <kzootech> meleoron: i think there was some good information here
[23:05:59] <eyynet4> looooooool
[23:06:04] <kzootech> ah fuck it, nvm
[23:07:17] <kzootech> idk i feel like with programming you have to hear the same information 10 times and make the same mistake 100 times before you really get it
[23:07:33] <kzootech> and then you will still screw up sometimes
[23:09:01] *** Joins: digilink (~digilink@user/digilink)
[23:09:28] <pyzozord> yeah he'll get there, he just has some model in his head that doesn't fit C and is hard to get rid of, probably few more deeper rooted assumptions will need to be reexamined
[23:09:35] *** Joins: lucf117 (~lucf117@user/lucf117)
[23:10:05] <InPhase> I've been accused of many things, but hardcore replies before EOF?  That one is a new entry for the trophy case.
[23:10:05] *** Joins: Crescendo (~Crescendo@user/crescendo)
[23:10:41] <kzootech> C is a great language to learn how computers actually work at the programming level
[23:10:56] <pyzozord> what's strange is that he did mention he read K&R
[23:10:57] <Jck_true> kzootech++ :)
[23:11:04] *** Joins: b1101 (~b1101@ool-44c01641.dyn.optonline.net)
[23:11:08] <pyzozord> maybe read it but did not do the exercises
[23:11:18] <InPhase> pyzozord: Well K&R teaches syntax, but not necessarily how to program well.
[23:11:26] * kzootech hasn't read k&r :\
[23:11:32] <eyynet4> me either
[23:11:56] <kzootech> which is sort of silly because ive C is my favorite language and ive probably written more lines of C than anything else
[23:11:56] <eyynet4> k and r C, the original style was gross looking too, IMO
[23:12:00] <kzootech> and i have lots of books
[23:12:18] <pyzozord> InPhase: true, but I feel like the question he was asking about allocating memory into pointers that are function arguments is invalid if syntax is understood
[23:12:26] <kzootech> eyynet4: i actually appreciate the original way function call were declared
[23:12:38] <eyynet4> ewwwwwwww! :P
[23:12:44] <kzootech> int food(a,b) int a; float b; { ... }
[23:13:04] <Jck_true> Where are all the good open source modelling tools? I've used Enterprise Architect at work. Years ago I used ArgoUML but that is no longer supported... I'm looking for a desktop application, not some markup language and a tool that process it into a diagram... Bonus if it does code export to C#...
[23:13:15] <kzootech> to me that give a bit more of a clear idea of where memory is actualy allocated for passed-in parameters
[23:13:35] *** Quits: digilink (~digilink@user/digilink) (Client Quit)
[23:14:09] <InPhase> pyzozord: The exact question intended was unclear to me from the phrasing of that section.  But meleoron didn't get around to the portion of clarifying for a specific use case, so we may never know.
[23:14:54] <pyzozord> InPhase: same here, it seemed like he was constructing synthetic example to help him understand something deeper
[23:15:12] <InPhase> pyzozord: Probably.
[23:15:26] <kzootech> idk i think i also feel like C is one of those languages where when you learn how it actually works you go through the 7 states of grief
[23:15:32] <kzootech> step 1 is denial
[23:15:34] <pyzozord> but imo was looking for patterns in rules in the wrong place
[23:15:40] <DPA> It's kind of annoying the old style won't work anymore. The new one has some shortcomings. Like "void f(int x, int y[x]){}" works. "void f(int y[x], int x){}" doesn't. "void f(y,x) int x; int y[x]; {}" isn't valid anymore...
[23:16:15] <pulse> C is the programming language equivalent of the one ring
[23:16:25] <Jck_true> DPA: What about Go's reversed order where you have the name first followed by the type...?
[23:16:25] <pulse> one language to rule them all and in the darkness bind them
[23:17:18] <DPA> Jck_true: I think it's less readable, but doesn't matter all that much in the end.
[23:17:24] <Jck_true> pulse: Well... all the C code I write is in the office at work brightly lit and everything...
[23:18:27] *** Joins: digilink (~digilink@user/digilink)
[23:19:30] *** Quits: eyynet4 (~0x100@32.211.211.39) (Remote host closed the connection)
[23:19:42] *** Joins: eyynet4 (~0x100@32.211.211.39)
[23:20:21] *** Quits: amigojapan (uid86330@id-86330.brockwell.irccloud.com) (Quit: Connection closed for inactivity)
[23:20:42] *** Joins: inky (~inky@188.115.236.177)
[23:20:56] * kzootech writes all his code in a dark room as not to overexpose it
[23:23:41] *** Joins: merijn (~merijn@83-160-49-249.ip.xs4all.nl)
[23:24:03] *** Joins: con3 (~con3@143.198.53.32)
[23:24:44] *** Quits: mjs2600 (~mjs2600@c-24-91-3-49.hsd1.vt.comcast.net) (Read error: Connection reset by peer)
[23:25:12] *** Joins: mjs2600 (~mjs2600@c-24-91-3-49.hsd1.vt.comcast.net)
[23:27:13] *** Quits: yaboiburner (~yaboiburn@c-69-180-160-103.hsd1.mn.comcast.net) (Remote host closed the connection)
[23:27:18] *** Quits: audiofreeze (~audio@2603-8081-1800-00ad-392c-f4fb-e8af-046a.res6.spectrum.com) (Ping timeout: 255 seconds)
[23:33:05] *** Joins: enoq (~enoq@194-208-146-143.lampert.tv)
[23:33:46] * edgar-rft writes all his code in a dark room while doing other kinky things...
[23:35:49] *** Joins: Pickchea (~private@user/pickchea)
[23:35:53] *** Joins: Null_A (~null_a@2601:645:8700:2290:a961:38e5:e25d:7cd0)
[23:36:04] <pulse> i like coding when it's raining
[23:36:15] <pulse> peak atmosphere
[23:36:47] <DPA> I like coding while listening to music or watching movies
[23:37:13] <pulse> i really don't like listening to music while coding
[23:37:17] <pulse> idk why
[23:37:39] <pulse> seems too distracting, i like the feeling of becoming one with the code
[23:37:50] <pyzozord> I tried solving leetcode problems while watching youtube on the other screen. Completly counterproductive. Leetcode demands full attention from me.
[23:38:19] <pyzozord> But I think I could be watching a tv show while doing most of the work stuff.
[23:38:39] <pyzozord> Make a button, remove a button.
[23:38:55] <pulse> still slower
[23:39:23] <pulse> in my view you have two options. evade menial work by distracting yourself and prolonging the experience
[23:39:34] <pulse> or just go in with full attention and be done with it much faster
[23:40:02] <pyzozord> Agree! I prefer the former by far
[23:40:43] <pyzozord> Although the youtube while leetcode thing I think that was the result of me really struggling with leetcode and not enjoying it
[23:40:51] <pyzozord> It got a bit better recently
[23:43:07] *** Quits: Guest9 (~Guest9@103.250.139.40) (Quit: Connection closed)
[23:44:40] *** Quits: Cleverness (~clevernes@pool-108-54-152-186.nycmny.fios.verizon.net) (Remote host closed the connection)
[23:45:48] *** Joins: arcatech (~arcatech@user/arcatech)
[23:47:33] *** Quits: enoq (~enoq@194-208-146-143.lampert.tv) (Ping timeout: 255 seconds)
[23:48:09] <kzootech> usually when im starting i cant listen to music but once im "into" it i can turn on some background music
[23:50:51] *** Quits: Crescendo (~Crescendo@user/crescendo) (Read error: Connection reset by peer)
[23:51:25] <pulse> low ambient or nature sounds are acceptable for me
[23:51:33] *** Joins: kariosfox (~kariosfox@89.229.173.37)
[23:51:51] <pulse> i rarely listen to anything though
[23:53:07] <pyzozord> I've been experimenting with no music at all over the last year, it's pretty cool. I certainly feel much less tired at the end of the day
[23:53:10] <user51> divide and conquer, somewhat unintuitively, does not work well on your attention span :)
[23:53:44] <user51> otoh, i've also noticed that i can get some work done most of the time, but it's kinda.. meh?
[23:53:51] <kzootech> i like jazz, classical, and electronic music when coding
[23:54:02] <kzootech> i tend to need to be already familiar with the music to code with it on
[23:54:48] <user51> i've had days i'm kinda totally off, as well
[23:55:10] <user51> not sure how it really works. just that on some days i can spend more time reading
[23:55:12] <DPA> A lot of code is nothing I need to think about, but there tends to be a lot of that. A slight distraction is great to not think about the amount of code still to be written, but just write it instead.
[23:55:25] <GeDaMo> Biolerplate
[23:56:08] * DPA Watches the bugs on the plate
[23:56:59] <user51> sometimes i wonder how many bugs the brain has
[23:58:07] *** Quits: merijn (~merijn@83-160-49-249.ip.xs4all.nl) (Ping timeout: 268 seconds)
[23:59:38] <pyzozord> DPA: I find that vi key bindings help, it makes typing more interesting, almost like a game. Also when you get good enough at it it really does make you faster
[23:59:46] *** Quits: arcatech (~arcatech@user/arcatech) (Quit: Bye.)
[23:59:58] <pyzozord> I guess something similiar can be said for emacs key bindings
