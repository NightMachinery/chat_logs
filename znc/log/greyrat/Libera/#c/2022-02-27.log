[00:00:04] *** Joins: orestarod (~orestarod@2a02:2149:8b20:700:2b9d:7f86:7169:61c0)
[00:01:40] *** Quits: bebyx (~Thunderbi@user/bebyx) (Ping timeout: 272 seconds)
[00:04:31] *** Quits: wroathe (~wroathe@user/wroathe) (Ping timeout: 256 seconds)
[00:06:17] *** Quits: rgrinberg (~textual@2806:101e:7:79ba:dc50:f4f5:8b68:5890) (Ping timeout: 240 seconds)
[00:06:35] *** Quits: gxt (~gxt@gateway/tor-sasl/gxt) (Ping timeout: 240 seconds)
[00:06:50] *** Joins: Cleverness (~Clevernes@pool-108-54-152-186.nycmny.fios.verizon.net)
[00:08:38] *** Quits: kurahaupo (~kurahaupo@115.69.27.211) (Ping timeout: 272 seconds)
[00:08:52] *** Joins: gxt (~gxt@gateway/tor-sasl/gxt)
[00:09:25] *** Quits: xa0s (~xa0s@mab.sdf.org) (Quit: leaving)
[00:09:40] *** Quits: Grell (~john@ool-4579c605.dyn.optonline.net) (Remote host closed the connection)
[00:10:01] *** Joins: Grell (~john@ool-4579c605.dyn.optonline.net)
[00:10:36] *** Joins: wroathe (~wroathe@206-55-188-8.fttp.usinternet.com)
[00:10:36] *** Quits: wroathe (~wroathe@206-55-188-8.fttp.usinternet.com) (Changing host)
[00:10:36] *** Joins: wroathe (~wroathe@user/wroathe)
[00:12:43] *** Joins: kenanmarasli (~kenanmara@user/kenanmarasli)
[00:12:45] *** Quits: Grell (~john@ool-4579c605.dyn.optonline.net) (Remote host closed the connection)
[00:14:17] *** Joins: eelstrebor (~eelstrebo@198-178-29-136.scb.ne.static.allophone.net)
[00:14:57] *** Quits: wroathe (~wroathe@user/wroathe) (Ping timeout: 240 seconds)
[00:21:39] *** Joins: Grell (~john@ool-4579c605.dyn.optonline.net)
[00:22:27] *** Quits: cart_ (~cart@213.205.194.4) (Read error: Connection reset by peer)
[00:23:38] *** Joins: rgrinberg (~textual@200.68.171.127)
[00:24:31] *** Joins: wroathe (~wroathe@206-55-188-8.fttp.usinternet.com)
[00:24:31] *** Quits: wroathe (~wroathe@206-55-188-8.fttp.usinternet.com) (Changing host)
[00:24:31] *** Joins: wroathe (~wroathe@user/wroathe)
[00:25:11] *** Quits: harveypwca (~harveypwc@2601:246:c180:a570:3828:d8:e523:3f67) (Quit: Leaving)
[00:27:50] *** Joins: cart_ (~cart@2a01:4c8:1064:2578:4b51:e5a9:dfd4:73b1)
[00:29:47] <chiselfuse> ChoHag: are you there?
[00:31:31] *** Joins: kurahaupo (~kurahaupo@115.69.27.211)
[00:31:39] *** Quits: savolla (~quassel@95.10.207.236) (Remote host closed the connection)
[00:32:33] *** Quits: ioxzev1z (~ioxzev1z@user/ioxzev1z) (Quit: Leaving)
[00:34:33] *** Quits: ___nick___ (~quassel@cpc68286-cdif17-2-0-cust533.5-1.cable.virginm.net) (Ping timeout: 256 seconds)
[00:35:14] *** Quits: wroathe (~wroathe@user/wroathe) (Ping timeout: 272 seconds)
[00:37:09] <chiselfuse> < dave0> along the lines of    struct inline int in16le(const unsigned ptr[2]) { return ptr[0] << 8 | ptr[1]; }
[00:37:35] <chiselfuse> oh nvm he's not here...
[00:39:48] <bnchs___> would you be able to write a ipv4 in a 16-bit interger
[00:41:01] <goodfella> ipv4 address by definition is 32 bit
[00:41:13] <goodfella> integer
[00:41:21] <bnchs___> yes
[00:41:28] *** Joins: wroathe (~wroathe@206-55-188-8.fttp.usinternet.com)
[00:41:28] *** Quits: wroathe (~wroathe@206-55-188-8.fttp.usinternet.com) (Changing host)
[00:41:28] *** Joins: wroathe (~wroathe@user/wroathe)
[00:41:39] <bnchs___> but how would you use it with a implementation of BSD sockets
[00:42:35] <goodfella> BSD sockets doesn't have to follow ipv4 addressing
[00:42:45] *** Quits: kurahaupo (~kurahaupo@115.69.27.211) (Ping timeout: 256 seconds)
[00:43:12] *** Joins: kurahaupo (~kurahaupo@115.69.27.211)
[00:44:27] <goodfella> the same way as unix domain sockets doesn't use TCP as the STREAM AF_NET
[00:44:58] <bnchs___> just like how we have to use a 8-byte char array for ipv6
[00:45:04] <bnchs___> can you use a 4-byte char for ipv4
[00:46:11] <goodfella> oh it's trolling time.
[00:46:22] <bnchs___> no wait
[00:46:29] *** Quits: wroathe (~wroathe@user/wroathe) (Ping timeout: 256 seconds)
[00:48:21] <bnchs___> in modern implementations, inet_addr is simply a 32-bit integer now
[00:48:59] *** Quits: kurahaupo (~kurahaupo@115.69.27.211) (Ping timeout: 256 seconds)
[00:50:27] *** Quits: cart_ (~cart@2a01:4c8:1064:2578:4b51:e5a9:dfd4:73b1) (Ping timeout: 256 seconds)
[00:50:27] *** Quits: cosimone (~user@2001:b07:ae5:db26:c24a:d20:4d91:1e20) (Quit: ERC (IRC client for Emacs 27.1))
[00:53:00] *** Quits: Andrm (~Andrm@190.244.62.157) (Quit: Client closed)
[00:53:11] <chiselfuse> bnchs___: i don't understand the quesiont
[00:53:28] <bnchs___> how would you use ipv4 in a 16-bit computer
[00:53:30] *** Joins: kurahaupo (~kurahaupo@115.69.27.211)
[00:53:48] <chiselfuse> assign two 16-bit registers for each address?
[00:54:24] *** Quits: Maaaanu (~manuel@ip5b429007.dynamic.kabel-deutschland.de) (Quit: leaving)
[00:54:30] <chiselfuse> < bnchs___> can you use a 4-byte char for ipv4
[00:54:36] <chiselfuse> i guess
[00:55:01] <chiselfuse> but it'd be probably stored the exact same way
[00:55:22] <chiselfuse> you could cast a 32 bit int ip address to a 4-byte char
[00:56:01] *** Joins: jjido (~Denis@2a02:c7f:5c91:e700:d0d7:ba7d:5a5a:630f)
[00:56:07] <goodfella> ./◊ï◊ü◊ê
[00:56:08] <bnchs___> well i guess thanks
[00:56:08] *** Quits: iomari891 (~iomari891@105.112.138.38) (Ping timeout: 272 seconds)
[00:56:09] *** Quits: goodfella (~archer@user/tessio) (Quit: WeeChat 3.4)
[00:56:24] <chiselfuse> yw
[00:56:42] *** Joins: goodfella (~archer@user/tessio)
[00:58:05] <fizzie> (You need 16 bytes for IPv6, not 8.)
[00:58:38] <bnchs___> yes miscalculation
[00:58:42] <bnchs___> 8 is for 64-bt
[00:59:39] *** Quits: CatCow (~wtf_over@c-73-96-109-206.hsd1.or.comcast.net) (Quit: My MacBook Air has gone to sleep. ZZZzzz‚Ä¶)
[01:00:54] *** Quits: euandreh (~euandreh@2804:14c:33:9fe5:a81a:aef8:4653:fe6c) (Ping timeout: 250 seconds)
[01:02:04] *** Joins: euandreh (~euandreh@2804:14c:33:9fe5:e14b:875c:3570:34de)
[01:02:59] *** Joins: hashfunc750 (~user@2601:5c0:c280:7090:78e9:5f82:1899:8c96)
[01:03:11] *** Quits: mcleuder (~mcleuder@gateway/tor-sasl/mcleuder) (Quit: WeeChat 3.3)
[01:04:22] *** Quits: teepee (~teepee@openscad/teepee) (Remote host closed the connection)
[01:05:09] *** Quits: eelstrebor (~eelstrebo@198-178-29-136.scb.ne.static.allophone.net) (Quit: Ex-Chat)
[01:05:11] *** Joins: teepee (~teepee@openscad/teepee)
[01:07:25] *** Joins: oriba (~oriba@dynamic-077-011-123-082.77.11.pool.telefonica.de)
[01:14:29] *** Quits: adip (~adip@den37.neoplus.adsl.tpnet.pl) (Ping timeout: 256 seconds)
[01:15:08] *** Quits: adip_ (~adip@den37.neoplus.adsl.tpnet.pl) (Ping timeout: 272 seconds)
[01:17:11] *** Quits: owensjrw (~owensjrw1@2600:1700:b5b0:6380::41) (Quit: Leaving)
[01:18:14] <constxd> kings
[01:18:28] <goodfella> of
[01:18:49] <constxd> leon
[01:20:08] <pragma-> the
[01:20:47] <chiselfuse> great
[01:21:00] <goodfella> khali
[01:23:45] <constxd> anyone good at front end web dev
[01:23:47] *** Quits: smallville7123 (~smallvill@cpe-172-193-72-46.qld.foxtel.net.au) (Read error: Connection reset by peer)
[01:24:58] <bnchs___> no
[01:25:23] <constxd> need some work done will pay in LINK
[01:25:34] *** Joins: korg815 (~korg815@user/korg815)
[01:25:40] <bnchs___> link to what
[01:26:10] <bnchs___> i'll need 1 link per bit
[01:26:16] <bnchs___> written
[01:26:18] *** Quits: zer0bitz (~zer0bitz@2001:2003:f74d:b800:4d3e:ae3:d6a0:1183) (Read error: Connection reset by peer)
[01:26:22] <constxd> that is absurd
[01:26:52] <bnchs___> how about 1 link per byte
[01:26:56] <constxd> should only be about one day of work, will pay 15 LINK
[01:27:19] <goodfella> constxd: PME
[01:27:30] <bnchs___> link to what again?
[01:28:10] <constxd> ,google 1 LINK to USD
[01:28:11] <candide> constxd: (5,840,000,000 results) Chainlink to USD Chart (LINK/USD) | CoinGecko: <https://www.coingecko.com/en/coins/chainlink/usd> -- Chainlink price today, LINK to USD live, marketcap and chart ...: <https://coinmarketcap.com/currencies/chainlink/> -- 1 LINK to USD - Exchange - How much US Dollar (USD) is 1 ...: <https://walletinvestor.com/converter/chainlink/usd/1>
[01:28:25] <bnchs___> oh so it's a crypto meme
[01:28:38] <constxd> it's a cryptocurrency yes
[01:29:28] <bnchs___> c is not front-end
[01:29:44] <goodfella> bnchs___: what is it ?
[01:29:56] <bnchs___> it's uhhhhh a language?
[01:30:05] <bnchs___> that can be compiled or interpreted
[01:30:13] <bnchs___> to any shape or form?
[01:30:14] <goodfella> it's a front start
[01:32:28] <constxd> no c is not front end
[01:32:37] <bnchs___> besides i don't want to sell myself for money
[01:32:47] <constxd> but this channel has a below average concentration of retards than most on the network
[01:33:01] <bnchs___> yeah that is true
[01:33:11] <bnchs___> maybe because it doesn't abstract memory and shit
[01:34:07] <constxd> it helps that the ops and most of the regulars are based
[01:34:18] *** Joins: jellie (~luv_panda@user/jellie)
[01:36:23] <bnchs___> whats wrong with javascript people
[01:36:48] <constxd> well nothing per se
[01:37:00] <constxd> i don't need any javascript for this though
[01:37:15] <bnchs___> good
[01:37:25] <bnchs___> people don't need another bloated website
[01:38:05] *** Quits: tech_exorcist (txrcst@user/tech-exorcist/x-0447479) (Quit: Disconnecting)
[01:38:47] *** Joins: sudoer (~username@c-73-4-114-202.hsd1.ma.comcast.net)
[01:39:02] <kurahaupo> bnchs___: would you consider selling yourself for alcohol instead of money?
[01:39:15] <bnchs___> no
[01:39:25] <kurahaupo> ü§™
[01:39:59] <bnchs___> sorry i don't support whatever you just tried to send
[01:40:04] <bnchs___> i'm using a old ass terminal
[01:40:51] *** Quits: alch (~alch@151.46.37.244) (Ping timeout: 256 seconds)
[01:41:25] <goodfella> kurahaupo: what fonts you use ?
[01:41:31] <goodfella> i can't render this
[01:41:36] <goodfella> and i use noto fonts and sauce code pro
[01:42:05] <kurahaupo> goodfella: hang on, I'll check
[01:42:10] <goodfella> i think noto fonts have all the unicodes implemented
[01:42:30] <fizzie> I don't have fonts either, I just look the character names from the UCD (U+1F92A GRINNING FACE WITH ONE LARGE AND ONE SMALL EYE) and use the limitless power of my imagination.
[01:42:51] *** Joins: alch (~alch@151.44.25.54)
[01:42:51] *** Quits: milkt (~debian@gateway/tor-sasl/milkt) (Remote host closed the connection)
[01:42:55] <bnchs___> its a unicode 10
[01:42:58] <bnchs___> bruh
[01:43:05] <kurahaupo> Apparently something just called "Sans" on Android
[01:43:19] *** Joins: milkt (~debian@gateway/tor-sasl/milkt)
[01:43:54] *** Quits: hashfunc750 (~user@2601:5c0:c280:7090:78e9:5f82:1899:8c96) (Remote host closed the connection)
[01:44:09] <kurahaupo> goodfella: I didn't choose the font, it was the default used by this client
[01:44:21] *** Quits: noteness (~noteness@user/noteness) (Remote host closed the connection)
[01:44:41] <goodfella> fizzie: yeah i konw how to copy it to firefox and display it, i just want to see it in my terminal
[01:44:49] <goodfella> which i can't
[01:45:01] *** Joins: oxfuxxx (~oxfuxxx@217.138.213.29)
[01:45:03] <bnchs___> you shouldn't need to
[01:45:04] *** Joins: noteness (~noteness@user/noteness)
[01:45:20] <goodfella> at least the warning sign of clangd is there ...
[01:45:43] <goodfella> im going to sleep in a few minutes
[01:47:26] *** Joins: jmiehe (~Thunderbi@user/jmiehe)
[01:49:20] *** Quits: jellie (~luv_panda@user/jellie) (Ping timeout: 272 seconds)
[01:50:25] *** Quits: magla (~gelignite@55d47826.access.ecotel.net) (Quit: Stay safe!)
[01:51:34] *** Quits: goodfella (~archer@user/tessio) (Quit: CyA)
[01:51:53] *** Quits: oxfuxxx (~oxfuxxx@217.138.213.29) (Ping timeout: 256 seconds)
[01:51:55] *** Joins: akuma (~i.am@user/marlboro)
[01:54:52] *** Joins: joomla9 (uid543104@id-543104.lymington.irccloud.com)
[01:56:34] *** Joins: marlboro (~i.am@user/marlboro)
[01:56:53] *** akuma is now known as argv[]]
[01:57:13] *** Quits: argv[]] (~i.am@user/marlboro) (Quit: a pentium 100 "running" windows 11 trying to play Last of Us II at ps4emu... that's my brain trying understand 0->R->R/2R->0)
[01:57:29] *** marlboro is now known as argv[]]
[01:57:47] <joomla9> why does `struct c {};` create a new data type called `s`, but `int a;` doesn't create. new data type.
[01:59:13] <bnchs___> what?
[01:59:27] <bnchs___> struct c creates a new data type called c
[01:59:38] <bnchs___> int a is simply a data with int data type
[01:59:40] <joomla9> my bad,
[02:00:41] <constxd> joomla9: because that's just how the language works
[02:00:42] <joomla9> so struct, union and enums create new data types, but int, char, long ,float double  don't
[02:01:14] <joomla9> so is a `struct` called a data type as well? which creates new data types?
[02:01:34] <constxd> struct is not a data type
[02:01:47] <constxd> `struct foo` is a data type
[02:02:00] <joomla9> struct is just called a struct, nothing else?
[02:02:08] <constxd> no it's just a keyword in the language
[02:02:30] <joomla9> make sense, thanks
[02:02:47] <bnchs___> does it help in disamubigity
[02:02:53] <bnchs___> like "struct foo" and "union foo"
[02:02:55] <bnchs___> at the same time
[02:03:49] <joomla9> They are in different scopes I guess right? thats why its ok to do so
[02:03:57] <joomla9> struct and unions with same name
[02:03:58] <constxd> when `struct foo` is followed by {, you define the type `struct foo`. when it's followed by ;, you declare the type `struct foo` but don't define it. when it's followed by an identifier, you declare an object of type `struct foo`.
[02:04:27] <constxd> that's just how the language is defined it's not that deep
[02:05:19] <constxd> yes struct types have their own namespace
[02:06:24] <joomla9> hmm just tried `struct a{};union a{};` and it says `redefinition of 'a'`
[02:08:16] <constxd> yeah i think union types also share that namespace actually
[02:08:33] <joomla9> i guess its only ok if an instance of them has the same name i.e this `struct a{};union b{};  union a {};`
[02:08:54] <constxd> what?
[02:09:06] <constxd> that would be an error
[02:09:19] <joomla9> https://www.irccloud.com/pastebin/jGk7UQbE/
[02:09:22] <constxd> ,cc struct a { int x; } union a { int x, y; }
[02:09:24] <candide> constxd: error: expected ';', identifier or '(' before 'union'
[02:09:36] <constxd> ,cc struct a { int x; }; union a { int x, y; };
[02:09:37] <candide> constxd: error: 'a' defined as wrong kind of tÔªøag
[02:10:12] <constxd> `union a{};` is not an instance of anything
[02:10:13] *** Quits: beepbooptheory (~mik@c-73-13-112-194.hsd1.pa.comcast.net) (Ping timeout: 240 seconds)
[02:10:16] <constxd> you're defining a new type
[02:10:53] *** Quits: rcf (~rcf@sdf.org) (Ping timeout: 256 seconds)
[02:13:16] <joomla9> my bad, struct a{};
[02:13:16] <joomla9> union b{};
[02:13:16] <joomla9> int main(){
[02:13:17] <joomla9>  struct a b = {};
[02:13:17] <joomla9>  return 0;
[02:13:17] *** ChanServ sets mode: +o candide
[02:13:17] *** candide sets mode: +b *!uid543104@*.irccloud.com
[02:14:03] *** Joins: wroathe (~wroathe@206-55-188-8.fttp.usinternet.com)
[02:14:03] *** Quits: wroathe (~wroathe@206-55-188-8.fttp.usinternet.com) (Changing host)
[02:14:03] *** Joins: wroathe (~wroathe@user/wroathe)
[02:14:28] *** candide sets mode: -b *!uid543104@*.irccloud.com
[02:16:21] <bnchs___> who's that
[02:16:26] <kurahaupo> joomla9: if you have "struct c", "c" isn't a type - that only happens in C++
[02:16:27] <bnchs___> who got banned
[02:17:01] <kurahaupo> joomla9: Rather, "c" is a struct tag
[02:18:27] <kurahaupo> joomla9: What creates a new type is the open brace after struct. That's kinda the point of struct
[02:18:40] <constxd> bnchs___: joomla9
[02:18:47] <constxd> for multiline pasting
[02:19:35] *** Quits: Akuli (~Akuli@213.216.208.110) (Quit: Akuli)
[02:20:05] <fizzie> Yes, tags (of structs, unions and enums) have just one name space.
[02:21:21] *** Joins: cthi (~cthi@097-082-138-151.res.spectrum.com)
[02:21:42] <joomla9> `if you have "struct c", "c" isn't a type - that only happens in C++`, what do you mean by that? i thought `struct c;` is a forward declaration in c or c++
[02:22:50] <fizzie> In C, only `struct c` can be used to refer to the type (unless you add a typedef). In C++, plain `c` can also be used to refer to it.
[02:23:22] <joomla9> ah that, right now I underestand.
[02:23:33] <joomla9> goto refer to the struct namespace in c manually
[02:23:55] <constxd> based
[02:23:56] <joomla9> which I honestly like. I'm not a fan of c++, too much is going on in there
[02:24:13] <constxd> very based take
[02:24:31] *** Quits: aradesh (~aradesh@user/aradesh) (Quit: WeeChat 1.9.1)
[02:25:48] <bnchs___> i don't use goto
[02:26:24] <bnchs___> i use jmp assembly instruction
[02:28:12] *** Quits: wroathe (~wroathe@user/wroathe) (Ping timeout: 240 seconds)
[02:29:55] *** Quits: rgrinberg (~textual@200.68.171.127) (Quit: My MacBook has gone to sleep. ZZZzzz‚Ä¶)
[02:32:12] *** Quits: mahmutov (~mahmutov@37.155.58.102) (Ping timeout: 240 seconds)
[02:33:24] *** Quits: pizdets_ (~pizdets@183.182.115.3) (Ping timeout: 240 seconds)
[02:33:59] *** Joins: pizdets (~pizdets@183.182.114.101)
[02:34:53] *** Joins: wroathe (~wroathe@206-55-188-8.fttp.usinternet.com)
[02:34:53] *** Quits: wroathe (~wroathe@206-55-188-8.fttp.usinternet.com) (Changing host)
[02:34:53] *** Joins: wroathe (~wroathe@user/wroathe)
[02:36:32] *** Quits: pretty_dumm_guy (trottel@gateway/vpn/protonvpn/prettydummguy/x-88029655) (Ping timeout: 240 seconds)
[02:36:42] *** Quits: blindguard (~blindguar@2a02:908:1864:c200::ef3c) (Quit: Konversation terminated!)
[02:38:38] *** Quits: Torr (~Torr@user/torr) ()
[02:39:13] *** Quits: seninha (~chatzilla@user/seninha) (Quit: ChatZilla 0.9.93 [SeaMonkey 2.53.10.2/20220219201334])
[02:39:13] *** Joins: Torr (~Torr@user/torr)
[02:39:24] *** Quits: wroathe (~wroathe@user/wroathe) (Ping timeout: 240 seconds)
[02:41:47] *** Joins: goepsilongo (~goepsilon@2603-7000-ab00-62ed-e428-cc41-f578-ae14.res6.spectrum.com)
[02:42:34] *** Quits: perrierjouet (~perrier-j@modemcable012.251-130-66.mc.videotron.ca) (Quit: WeeChat 3.4)
[02:43:15] *** Joins: constxd_ (~brad@142.134.79.191)
[02:43:39] *** Joins: perrierjouet (~perrier-j@modemcable012.251-130-66.mc.videotron.ca)
[02:44:12] *** Quits: goepsilongo_ (~goepsilon@2603-7000-ab00-62ed-708c-1d1a-7204-62e1.res6.spectrum.com) (Ping timeout: 240 seconds)
[02:44:54] *** Quits: jjido (~Denis@2a02:c7f:5c91:e700:d0d7:ba7d:5a5a:630f) (Quit: My MacBook Air has gone to sleep. ZZZzzz‚Ä¶)
[02:47:07] *** Joins: CatCow (~wtf_over@c-73-96-109-206.hsd1.or.comcast.net)
[02:49:34] *** Quits: strajder (~strajder@user/strajder) (Quit: gn)
[02:53:21] *** Quits: MsPoop (~MsPoop@S01069050ca4e3573.cg.shawcable.net) (Quit: Client closed)
[03:00:07] *** Joins: eelstrebor (~eelstrebo@198-178-29-136.scb.ne.static.allophone.net)
[03:00:16] *** Quits: Xeroine (~Xeroine@user/xeroine) (Ping timeout: 272 seconds)
[03:00:36] *** Joins: Xeroine (~Xeroine@user/xeroine)
[03:01:10] *** Joins: pretty_dumm_guy (trottel@gateway/vpn/protonvpn/prettydummguy/x-88029655)
[03:01:13] *** Quits: ben_ (~ben@135.125.147.53) (Changing host)
[03:01:13] *** Joins: ben_ (~ben@user/nb-ben)
[03:01:16] *** ben_ is now known as nb-ben
[03:01:56] *** Parts: nb-ben (~ben@user/nb-ben) ()
[03:04:40] *** Joins: oxfuxxx (~oxfuxxx@185.216.32.156)
[03:09:17] *** Quits: orthoplex64 (~crm@70.120.0.94) (Ping timeout: 240 seconds)
[03:09:18] *** Joins: crm (~crm@70.120.0.94)
[03:09:51] *** Joins: rgrinberg (~textual@2806:101e:7:70b6:9d42:51ae:9407:db15)
[03:13:50] *** Quits: mrig (~mrig@user/mrig) (Quit: WeeChat 2.8)
[03:14:16] *** Quits: LucaTM (~LucaTM@user/lucatm) (Quit: Textual IRC Client: www.textualapp.com)
[03:18:13] *** Joins: orthoplex64 (~crm@70.120.0.94)
[03:19:53] *** Joins: smallville7123 (~smallvill@cpe-172-193-72-46.qld.foxtel.net.au)
[03:19:54] *** Quits: crm (~crm@70.120.0.94) (Ping timeout: 272 seconds)
[03:24:38] *** Quits: smallville7123 (~smallvill@cpe-172-193-72-46.qld.foxtel.net.au) (Read error: Connection reset by peer)
[03:29:05] *** Quits: eelstrebor (~eelstrebo@198-178-29-136.scb.ne.static.allophone.net) (Quit: Ex-Chat)
[03:29:42] *** Joins: hiroshi_ (~freedom@151.35.217.24)
[03:29:55] *** Quits: Tangent-Man (~Tang3nt-M@cpc145602-basl14-2-0-cust33.20-1.cable.virginm.net) (Ping timeout: 256 seconds)
[03:31:03] *** Quits: sudoer (~username@c-73-4-114-202.hsd1.ma.comcast.net) (Ping timeout: 256 seconds)
[03:33:03] *** Joins: noteness_ (~noteness@user/noteness)
[03:35:03] *** Quits: oriba (~oriba@dynamic-077-011-123-082.77.11.pool.telefonica.de) (Quit: https://quassel-irc.org - Chat comfortably. Anywhere.)
[03:35:18] *** Joins: andro (~stupidfox@user/stupidfox)
[03:35:21] *** Quits: noteness (~noteness@user/noteness) (Remote host closed the connection)
[03:36:09] *** Quits: Telvana (~capo@user/telvana) (Ping timeout: 256 seconds)
[03:36:09] <andro> im trying some ways to shorten my code, how does this look? https://bpa.st/BYQA
[03:37:44] <nitrix> Unless the pointer needs to represent an optional value, resetting the pointer to NULL when cleaning up isn't very useful, especially if you're about to terminal the application.
[03:38:41] <BtbN> Won't it be optimized out anyway, if nothing afterwards accesses the variable anymore?
[03:38:41] <nitrix> I imagine you also have a #define FREE(ptr) (free(ptr), (ptr) = NULL) macro?
[03:38:43] *** Quits: YellowSuB (~YellowSuB@user/yellowsub) (Ping timeout: 256 seconds)
[03:39:02] *** Joins: sudoer (~username@c-73-4-114-202.hsd1.ma.comcast.net)
[03:39:06] <andro> nitrix: I don't have that, but you just made me consider it
[03:39:53] <nitrix> Hilarious.
[03:40:11] <andro> oh, is that terrible?
[03:40:22] *** Joins: Telvana (~capo@user/telvana)
[03:40:32] *** Joins: YellowSuB (~YellowSuB@user/yellowsub)
[03:40:46] *** Quits: dld (~davidlowr@73.61.8.214) (Ping timeout: 245 seconds)
[03:41:30] *** Quits: Y4knotiS (~YaknotiS@cpc1-cmbg18-2-0-cust87.5-4.cable.virginm.net) (Ping timeout: 260 seconds)
[03:41:49] *** Quits: Wulf (~Wulf@user/wulf) (Ping timeout: 256 seconds)
[03:42:49] *** Joins: dld (~davidlowr@2601:197:600:1210:88cb:4d48:189:f8f8)
[03:43:40] *** Joins: Wulf (~Wulf@user/wulf)
[03:43:49] *** Joins: ominionx (~ominionx@3.sub-174-250-16.myvzw.com)
[03:44:05] *** Quits: oxfuxxx (~oxfuxxx@185.216.32.156) (Ping timeout: 256 seconds)
[03:44:31] <andro> i'm open to constructive comments
[03:44:57] *** Quits: kaph (~kaph@net-109-116-124-149.cust.vodafonedsl.it) (Ping timeout: 256 seconds)
[03:46:41] *** Joins: cvmn (~caveman@gateway/tor-sasl/caveman)
[03:46:52] <nitrix> The desire not to repeat yourself is going to consume you at some point. The approach you took is a common one, where the pointers are all initialized at the beginning if if anything goes wrong, you jump to a cleanup section that conditionally cleans up what had been initialized. It's problematic.
[03:47:41] <nitrix> Initialization code isn't always stack-like. You can have functions create objects and transfer their ownership to other objects, that then become responsible for cleaning up.
[03:49:00] *** Quits: bnchs___ (~bnchs@105.157.19.247) (Ping timeout: 240 seconds)
[03:49:50] *** Joins: oxfuxxx (~oxfuxxx@185.216.32.157)
[03:51:41] <andro> i don't understand how it could be problematic
[03:51:48] <nitrix> Different errors along the way can have slight differences in how you want to recover from the error or even communicate the problem (a quit packet on an active network connection, etc).
[03:52:49] <nitrix> You'll find out. I'm just warning you because at that point you'll be loving your macros so much that you'll attempt to shoehorn hacks into them to not deviate from your DRY paradigm.
[03:54:24] <andro> do i necessarily have to learn the hard way
[03:55:28] *** Quits: velgin (~velgin@pool-96-237-105-119.bstnma.fios.verizon.net) (Read error: Connection reset by peer)
[03:55:43] *** Joins: seninha (~chatzilla@user/seninha)
[03:55:44] <andro> so what's the alternative here?
[03:57:11] *** Joins: Techcable (~Techcable@168.235.93.147)
[03:57:11] *** Joins: dfghjk (~asdfghjkl@2001:871:23a:2ac8:3759:5214:cdd8:8e36)
[03:57:47] *** Joins: kaph (~kaph@net-109-116-124-149.cust.vodafonedsl.it)
[03:57:50] *** Quits: merrinx (~merrinx@ti0028a400-3686.bb.online.no) (Quit: WeeChat 3.3)
[03:58:44] <nitrix> As for the problem with resetting pointers is that you create the invariant in your codebase that if something isn't NULL, then it must be alive, and you'll re-enforce that thinking by having NULL checks everywhere and one day, someone will get the lifetime of the pointer wrong, reset it to NULL when it shouldn't be, and a pleathora of code that was supposed to run, wont. You also wont have any indication of what went wrong, nor where, because you've
[03:58:44] <nitrix> intentionally cleared the only hint that you had to track the "use after free".
[04:00:25] <andro> wow i had never seen it that way
[04:00:43] <andro> that makes sense
[04:00:50] <nitrix> Segmentation faults are there to help you find out the problem. If you intentionally silence it, you have a program that continues to work but is misbehaving without you knowing.
[04:01:47] <nitrix> This doesn't apply just to C. I'm of the opinion that defensive programming is making applications more brittle (by not crashing), not more robust (by forcing you to fix the problem).
[04:03:20] <nitrix> C also came a long way. We now have sanitizers like -fsanitize=undefined,address to run on debug builds / test suites to catch undefined behaviors and invalid memory operations.
[04:03:23] <nitrix> Anyway.
[04:03:43] *** Quits: AbleBacon (~AbleBacon@user/AbleBacon) (Read error: Connection reset by peer)
[04:04:49] *** Joins: ymwm (~yingmanwu@117.26.69.135)
[04:04:49] *** Quits: ymwm (~yingmanwu@117.26.69.135) (Client Quit)
[04:04:51] <andro> "The approach you took is a common one, where the pointers are all initialized at the beginning if if anything goes wrong, you jump to a cleanup section that conditionally cleans up what had been initialized. It's problematic." >>> what's an alternative to this?
[04:07:57] <nitrix> It's fine, it'll work 99% of the time. I didn't want to scare you. When you'll bang your head on handling complicated failure modes tied to one another, we can have a fun conversation :P
[04:11:16] <andro> oh, okay. I was thinking that the only alternative is (https://bpa.st/UM4Q) and it makes me uncomfortable
[04:11:38] *** Joins: X-Scale` (~ARM@31.22.162.17)
[04:11:46] *** Quits: Klinda (~superleag@user/klinda) (Quit: Konversation terminated!)
[04:13:24] *** Quits: X-Scale (~ARM@135.232.28.37.rev.vodafone.pt) (Ping timeout: 240 seconds)
[04:13:25] *** X-Scale` is now known as X-Scale
[04:13:25] *** candide sets mode: -o candide
[04:14:43] *** Quits: ominionx (~ominionx@3.sub-174-250-16.myvzw.com) (Quit: Leaving)
[04:15:48] *** Quits: Jong (~Jong@184-99-74-148.boid.qwest.net) (Quit: Textual IRC Client: www.textualapp.com)
[04:16:14] <nitrix> It ends up looking like that, yeah, but they all have slightly different cleanup. You assume every failure to do anything necessarily leads to terminating the application, but there are plenty of programs that will attempt to do operations and keep working if they fail. A text editor loading a file, a video game loading a 3D model, etc.
[04:18:14] <nitrix> Like, okay, you couldn't read the textures files for your 3D model, so you don't need the PNG/JPG parser anymore, but you might want to still use the mesh that you were capable to load and just use a plain pink texture instead as replacement.
[04:18:50] <nitrix> Now some scenarios upon failure cleans up resources while ALSO loading new resources and now you've got a pretty serious challenge for your macros.
[04:19:28] *** Quits: oxfuxxx (~oxfuxxx@185.216.32.157) (Quit: Yankies Motherfh@ckers C0[k Astroboys)
[04:20:03] <nitrix> I'm probably wording this very poorly.
[04:21:25] *** Joins: hashfunc1fa5 (~user@2601:5c0:c280:7090:78e9:5f82:1899:8c96)
[04:21:44] <andro> lol, I get it. sometimes DRY can lead you into very inflexible solutions that end up being a PITA when complexity grows
[04:29:50] *** Quits: hiroshi_ (~freedom@151.35.217.24) (Quit: hiroshi_)
[04:29:56] *** Quits: nyah (~nyah@05453449.skybroadband.com) (Ping timeout: 245 seconds)
[04:32:05] *** Quits: freep (~freepppp@193.92.35.32.dsl.dyn.forthnet.gr) (Read error: Connection reset by peer)
[04:34:36] *** Quits: kilobyte_ch (~kbch@77.109.171.85) (Ping timeout: 240 seconds)
[04:35:23] <andro> nitrix: since we're on the topic of defensive programming, could you tell me your opinion on null assertions? for example, a function expects a non-null pointer `ptr` parameter. do you think there should be an assertion `assert (ptr)`?
[04:35:46] *** Quits: dfghjk (~asdfghjkl@2001:871:23a:2ac8:3759:5214:cdd8:8e36) (Ping timeout: 245 seconds)
[04:36:12] *** Quits: random-nick (~random-ni@87.116.176.196) (Ping timeout: 240 seconds)
[04:36:33] *** Quits: off^ (~off@50-202-219-146-static.hfc.comcastbusiness.net) (Remote host closed the connection)
[04:44:29] *** Joins: nehsou^ (~nehsou@50-202-219-146-static.hfc.comcastbusiness.net)
[04:45:36] <nitrix> I guess. In practice, those don't seem to catch up many problems very often, but maybe they help you.
[04:46:22] *** Joins: wroathe (~wroathe@206-55-188-8.fttp.usinternet.com)
[04:46:22] *** Quits: wroathe (~wroathe@206-55-188-8.fttp.usinternet.com) (Changing host)
[04:46:22] *** Joins: wroathe (~wroathe@user/wroathe)
[04:46:33] <oldlaptop> The usual suggestion is that assert(exp) means that you think it is *impossible* for exp to be false, and the assertion documents that belief.
[04:47:14] *** Joins: SGautam (uid286066@id-286066.ilkley.irccloud.com)
[04:49:41] *** Joins: kilobyte_ch (~kbch@77.109.171.24)
[04:52:05] <zwr> Chaser: chiselfuse: Are you guys still playing with the internet checksum? I wrote 2 implementations and a test, the test is a program that checksums its arguments and prints their sums, there's also a 3rd implementation copypasted from OpenBSD to check that the others match its output: https://godbolt.org/z/G8hcdT7Yn
[04:52:35] *** Quits: cvmn (~caveman@gateway/tor-sasl/caveman) (Ping timeout: 240 seconds)
[04:53:38] <zwr> god damn I tried lots of different outputs and didn't spot a difference but now I pasted that godbolt link into the test and one of mine gave a different result
[04:54:08] <zwr> the sum is 29c7, my 2nd impl is saying 26ca
[04:56:20] <andro> oldlaptop: so how should i deal with null pointers being passed into my function, when they obviously shouldnt be there?
[04:56:27] *** Joins: tolot (~tolot@dslb-088-064-152-098.088.064.pools.vodafone-ip.de)
[04:56:42] <nitrix> By not passing NULL pointers to functions that don't expect them.
[04:56:57] <andro> ah
[04:57:22] <oldlaptop> You could check it, and return an error value of some kind.
[04:57:41] <masoudd> what about if (!ptr) { /* return error */ }
[04:58:08] <oldlaptop> You could provide your own panic mechanism, of some kind, although I'd suggest that's usually not a very useful approach
[04:58:58] <oldlaptop> Or, you could decide that you believe it's totally impossible that the function will ever be passed a null pointer in your program, and document that belief with an assertion.
[04:59:16] *** Quits: kenanmarasli (~kenanmara@user/kenanmarasli) (Quit: Leaving)
[05:01:58] *** Joins: gargus (~user@27-32-195-30.static.tpgi.com.au)
[05:04:11] *** Quits: Neutron7 (~monopolys@96.73.191.185) (Remote host closed the connection)
[05:05:18] *** Quits: vdamewood (~vdamewood@fedora/vdamewood) (Quit: My MacBook Pro has gone to sleep. ZZZzzz‚Ä¶)
[05:05:19] *** Quits: moose (~moose@user/moose) (Quit: Leaving)
[05:06:26] *** Quits: FluffyMask (~masque@user/fluffymask) (Quit: WeeChat 3.4)
[05:08:15] *** Quits: kurahaupo (~kurahaupo@115.69.27.211) (Ping timeout: 256 seconds)
[05:08:29] *** Joins: Guest8467 (~Guest@host115.181-14-187.telecom.net.ar)
[05:10:21] *** Quits: pretty_dumm_guy (trottel@gateway/vpn/protonvpn/prettydummguy/x-88029655) (Quit: WeeChat 3.4)
[05:13:18] *** Quits: joomla9 (uid543104@id-543104.lymington.irccloud.com) ()
[05:13:43] *** Quits: dogbert2 (~Bill@ip70-170-79-7.lv.lv.cox.net) (Remote host closed the connection)
[05:13:59] *** Joins: dogbert2 (~Bill@ip70-170-79-7.lv.lv.cox.net)
[05:14:00] *** Quits: tolot (~tolot@dslb-088-064-152-098.088.064.pools.vodafone-ip.de) (Quit: Leaving)
[05:15:51] *** Quits: cthi (~cthi@097-082-138-151.res.spectrum.com) (Quit: leaving)
[05:18:53] <zwr> here's why I didn't notice the bug in my implementation: the bug only triggers if the length of the buffer is odd
[05:19:15] <zwr> that's going to be a pain to debug...
[05:21:24] <koollman> off by one or something divided by 2 ? :)
[05:31:32] *** Quits: nightstrike (uid487@id-487.uxbridge.irccloud.com) (Quit: Connection closed for inactivity)
[05:31:54] *** Joins: smallville7123 (~smallvill@cpe-172-193-72-46.qld.foxtel.net.au)
[05:33:30] *** Quits: Torr (~Torr@user/torr) (Quit: leaving)
[05:33:32] *** Quits: phrosty (~phrosty@c-73-225-175-19.hsd1.wa.comcast.net) (Ping timeout: 272 seconds)
[05:38:36] *** Quits: haniaF (~haniaF@83.24.216.182.ipv4.supernova.orange.pl) (Ping timeout: 272 seconds)
[05:38:37] *** Quits: alch (~alch@151.44.25.54) (Read error: Connection reset by peer)
[05:38:45] *** Joins: haniaF_ (~haniaF@83.24.224.152.ipv4.supernova.orange.pl)
[05:42:50] *** Quits: soapsudsxx (~soapsudsx@209.221.40.142) (Remote host closed the connection)
[05:43:12] *** Joins: alch (~alch@151.46.53.73)
[05:44:11] *** Joins: soapsudsxx (~soapsudsx@209.221.40.142)
[05:47:59] *** Joins: zer0x_ (~zer0x@58.186.58.26)
[05:50:27] *** Joins: Jong (~Jong@2620:10d:c090:400::5:8bc7)
[05:53:10] *** Quits: seninha (~chatzilla@user/seninha) (Ping timeout: 272 seconds)
[05:53:50] *** Joins: cthi (~cthi@097-082-138-151.res.spectrum.com)
[05:59:45] *** Quits: Jong (~Jong@2620:10d:c090:400::5:8bc7) (Quit: Textual IRC Client: www.textualapp.com)
[06:00:17] *** Quits: orestarod (~orestarod@2a02:2149:8b20:700:2b9d:7f86:7169:61c0) (Ping timeout: 240 seconds)
[06:05:13] *** Joins: Jong (~Jong@2620:10d:c090:400::5:8bc7)
[06:06:17] *** Quits: Posterdati (~posterdat@host-87-19-166-231.retail.telecomitalia.it) (Ping timeout: 240 seconds)
[06:09:17] *** Quits: justAstache (~justache@user/justache) (Remote host closed the connection)
[06:09:55] *** Joins: justAstache (~justache@user/justache)
[06:10:40] *** Joins: kurahaupo (~kurahaupo@115.69.27.211)
[06:17:54] *** Quits: Cleverness (~Clevernes@pool-108-54-152-186.nycmny.fios.verizon.net) (Quit: Leaving)
[06:19:24] *** Quits: plastico (~plastico@neomutt/plastico) (Quit: WeeChat 3.4)
[06:20:20] *** Joins: Posterdati (~posterdat@host-87-20-238-140.retail.telecomitalia.it)
[06:22:00] *** Quits: highrate (~presonic@111-22-237-24.gci.net) (Changing host)
[06:22:00] *** Joins: highrate (~presonic@user/highrate)
[06:23:23] *** Joins: slidercrank (~slidercra@user/slidercrank)
[06:23:35] *** Joins: phrosty (~phrosty@c-73-225-175-19.hsd1.wa.comcast.net)
[06:24:53] *** Joins: fe23 (~fe23@2409:8a34:46c:f80:6c56:6835:2f6b:32d5)
[06:26:34] *** Joins: frost (~frost@user/frost)
[06:26:39] *** Joins: kurahaupo_ (~kurahaupo@pa49-197-101-189.pa.qld.optusnet.com.au)
[06:28:12] *** Quits: kurahaupo (~kurahaupo@115.69.27.211) (Ping timeout: 240 seconds)
[06:28:14] *** Quits: newpy (~newpy@206.168.231.90) (Quit: Leaving)
[06:33:49] *** Quits: banc (banc@gateway/vpn/airvpn/banc) (Ping timeout: 256 seconds)
[06:37:01] *** Quits: gargus (~user@27-32-195-30.static.tpgi.com.au) (Quit: Leaving)
[06:37:17] *** Quits: wroathe (~wroathe@user/wroathe) (Quit: leaving)
[06:42:35] *** Quits: sudoer (~username@c-73-4-114-202.hsd1.ma.comcast.net) (Ping timeout: 256 seconds)
[06:48:01] *** Quits: freakazoid12345 (~matt@2603:9000:cf03:86c3:c55:f913:c8d2:48f1) (Remote host closed the connection)
[06:48:37] *** Joins: freakazoid12345 (~matt@2603:9000:cf03:86c3:c55:f913:c8d2:48f1)
[06:50:20] <dogbert2> ,botsnack
[06:50:20] * candide messily inhales its bran muffin.
[06:52:36] *** Joins: banc (banc@gateway/vpn/airvpn/banc)
[06:54:04] *** Quits: absentia (~absentia@user/absentia) (K-Lined)
[06:59:37] *** Joins: wroathe (~wroathe@206-55-188-8.fttp.usinternet.com)
[06:59:57] *** Quits: wroathe (~wroathe@206-55-188-8.fttp.usinternet.com) (Client Quit)
[07:00:35] *** Joins: wroathe (~wroathe@206-55-188-8.fttp.usinternet.com)
[07:04:59] *** Quits: kurahaupo_ (~kurahaupo@pa49-197-101-189.pa.qld.optusnet.com.au) (Ping timeout: 256 seconds)
[07:05:59] *** Joins: dave0 (~davezero@069.d.003.ncl.iprimus.net.au)
[07:07:31] *** Joins: joomla9 (uid543104@id-543104.lymington.irccloud.com)
[07:07:44] *** Joins: Azem (~haise01@user/haise01)
[07:09:10] *** Quits: constxd_ (~brad@142.134.79.191) (Ping timeout: 272 seconds)
[07:10:55] *** Quits: Emet-Selch (~haise01@user/haise01) (Ping timeout: 256 seconds)
[07:14:51] *** Joins: Juliu (~Juliu@2a02:810b:c640:3ec0:350b:c716:fa56:ddbc)
[07:15:30] *** Quits: Rounin (~david@84.212.130.215) (Ping timeout: 272 seconds)
[07:16:26] *** Joins: kurahaupo (~kurahaupo@pa49-182-36-101.pa.qld.optusnet.com.au)
[07:17:56] *** Quits: wroathe (~wroathe@206-55-188-8.fttp.usinternet.com) (Quit: leaving)
[07:18:00] *** Joins: danielcamiel (~danielcam@user/danielcamiel)
[07:20:00] *** Joins: wroathe (~wroathe@206-55-188-8.fttp.usinternet.com)
[07:20:00] *** Quits: wroathe (~wroathe@206-55-188-8.fttp.usinternet.com) (Changing host)
[07:20:00] *** Joins: wroathe (~wroathe@user/wroathe)
[07:24:19] *** Quits: Guest8467 (~Guest@host115.181-14-187.telecom.net.ar) (Remote host closed the connection)
[07:30:49] *** Joins: steve__ (~steve@ool-182c2b80.dyn.optonline.net)
[07:36:01] *** Quits: supakeen (~user@python/site-packages/supakeen) (Quit: WeeChat 3.4)
[07:36:31] *** Joins: supakeen (~user@python/site-packages/supakeen)
[07:37:03] *** Joins: jmiehe1 (~Thunderbi@user/jmiehe)
[07:37:10] *** Quits: jmiehe (~Thunderbi@user/jmiehe) (Ping timeout: 260 seconds)
[07:37:10] *** jmiehe1 is now known as jmiehe
[07:41:56] *** Quits: rgrinberg (~textual@2806:101e:7:70b6:9d42:51ae:9407:db15) (Quit: My MacBook has gone to sleep. ZZZzzz‚Ä¶)
[07:42:16] *** Quits: skapata (~Skapata@user/skapata) (Remote host closed the connection)
[07:42:36] *** Quits: korg815 (~korg815@user/korg815) (Ping timeout: 240 seconds)
[07:46:43] *** Joins: rcf (rcf@sdf.org)
[07:47:09] *** Joins: rgrinberg (~textual@2806:101e:7:70b6:9d42:51ae:9407:db15)
[07:47:45] *** Quits: Alhazred (~Alhazred@ool-18b829c5.dyn.optonline.net) (Ping timeout: 256 seconds)
[07:47:55] *** Joins: Alhazred (~Alhazred@86.106.74.42)
[07:48:19] *** Quits: fe23 (~fe23@2409:8a34:46c:f80:6c56:6835:2f6b:32d5) (Quit: fe23)
[07:49:33] *** Joins: malina (~malina@user/malina)
[07:58:32] *** Quits: suss (~user@user/suss) (Remote host closed the connection)
[07:59:05] *** Joins: suss (~user@user/suss)
[08:08:04] *** Quits: andro (~stupidfox@user/stupidfox) (Ping timeout: 272 seconds)
[08:08:12] *** Quits: rgrinberg (~textual@2806:101e:7:70b6:9d42:51ae:9407:db15) (Quit: My MacBook has gone to sleep. ZZZzzz‚Ä¶)
[08:09:00] *** Joins: sudoer (~username@c-73-4-114-202.hsd1.ma.comcast.net)
[08:10:13] *** Quits: argv[]] (~i.am@user/marlboro) (Remote host closed the connection)
[08:12:56] *** Joins: nightstrike (uid487@id-487.uxbridge.irccloud.com)
[08:19:16] *** Joins: korg815 (~korg815@user/korg815)
[08:19:42] *** Joins: kts (~kts@103.73.237.194)
[08:20:09] *** Joins: ekathva (~ekathva@n2gvphjzi3l3fwqfx-1.v6.elisa-mobile.fi)
[08:24:00] *** Quits: Juliu (~Juliu@2a02:810b:c640:3ec0:350b:c716:fa56:ddbc) (Quit: Quit)
[08:28:33] *** Quits: korg815 (~korg815@user/korg815) (Ping timeout: 256 seconds)
[08:29:01] *** Quits: freakazoid12345 (~matt@2603:9000:cf03:86c3:c55:f913:c8d2:48f1) (Ping timeout: 240 seconds)
[08:41:48] *** Quits: danielcamiel (~danielcam@user/danielcamiel) (Ping timeout: 240 seconds)
[08:46:36] *** Quits: mrgz (~mrgz@201-42-0-191.dsl.telesp.net.br) (Ping timeout: 240 seconds)
[08:48:07] <chiselfuse> < zwr> here's why I didn't notice the bug in my implementation: the bug only triggers if the length of the buffer is odd
[08:49:31] <chiselfuse> asking for experience: you mean the length of thing that is to be checksum'ed?
[08:49:49] <chiselfuse> the odd byte and whatnot?
[08:50:57] <chiselfuse> that's a pretty standard case to check for now don't get me worried about ghost cases :PP
[08:54:32] *** Quits: SGautam (uid286066@id-286066.ilkley.irccloud.com) (Quit: Connection closed for inactivity)
[08:55:29] *** Quits: zer0x_ (~zer0x@58.186.58.26) (Ping timeout: 256 seconds)
[08:59:00] *** Quits: figrita (~figrita@2603-7080-9801-332f-5813-eeaf-976d-830a.res6.spectrum.com) (Ping timeout: 240 seconds)
[09:04:26] *** Joins: pavlushka (~pavlushka@user/pavlushka)
[09:07:12] *** Joins: figrita (~figrita@98.3.29.100)
[09:07:23] *** Joins: rampart (~rampart@3.sub-174-250-16.myvzw.com)
[09:10:45] *** Quits: wroathe (~wroathe@user/wroathe) (Quit: Lost terminal)
[09:13:42] *** Joins: LordJohn (~lordjohn@l37-194-102-53.novotelecom.ru)
[09:14:46] *** Quits: kts (~kts@103.73.237.194) (Remote host closed the connection)
[09:17:45] *** Joins: rgrinberg (~textual@2806:101e:7:70b6:9d42:51ae:9407:db15)
[09:18:37] *** Quits: hashfunc1fa5 (~user@2601:5c0:c280:7090:78e9:5f82:1899:8c96) (Ping timeout: 240 seconds)
[09:21:59] *** Joins: geowiesnot (~user@5-51-190-244.abo.bbox.fr)
[09:29:17] *** Quits: joev (~joev@user/joev) (Ping timeout: 240 seconds)
[09:30:33] *** Joins: joev (~joev@user/joev)
[09:32:12] *** Joins: moose (~moose@user/moose)
[09:35:52] <zwr> I'm not quite sure it has to do with the odd byte because not all odd inputs cause it either, it's more of a byproduct of me writing weird code using gcc extensions to see if it produces better assembly
[09:37:06] *** Quits: pulse (~pulse@user/pulse) (Quit: Look behind you, a three headed monkey!)
[09:40:50] *** Quits: Zambyte (~Zambyte@cpe-104-228-60-14.nycap.res.rr.com) (Quit: leaving)
[09:40:54] *** Quits: alch (~alch@151.46.53.73) (Ping timeout: 250 seconds)
[09:42:12] *** Quits: Jong (~Jong@2620:10d:c090:400::5:8bc7) (Ping timeout: 240 seconds)
[09:42:36] *** Joins: alch (~alch@151.44.28.152)
[09:43:48] *** Quits: phrosty (~phrosty@c-73-225-175-19.hsd1.wa.comcast.net) (Ping timeout: 240 seconds)
[09:49:13] *** Joins: Jong (~Jong@163.114.132.1)
[09:50:12] *** Quits: geowiesnot (~user@5-51-190-244.abo.bbox.fr) (Ping timeout: 240 seconds)
[09:58:17] *** Quits: LordJohn (~lordjohn@l37-194-102-53.novotelecom.ru) (Read error: Connection reset by peer)
[09:58:38] *** Quits: kurahaupo (~kurahaupo@pa49-182-36-101.pa.qld.optusnet.com.au) (Read error: Connection reset by peer)
[10:01:27] *** Joins: kurahaupo (~kurahaupo@115.69.27.211)
[10:04:36] *** Quits: sudoer (~username@c-73-4-114-202.hsd1.ma.comcast.net) (Ping timeout: 272 seconds)
[10:10:36] <zwr> this is the kind of thing that would be most easily done in assembly with an add with carry instruction, otherwise half the register goes more or less unused just accumulating carries
[10:10:56] *** Quits: pavlushka (~pavlushka@user/pavlushka) (Ping timeout: 272 seconds)
[10:13:57] *** Quits: kurahaupo (~kurahaupo@115.69.27.211) (Ping timeout: 256 seconds)
[10:13:59] <dave0> x86 certainly has an add-with-carry instruction, i think arm does, i think riscv doesnt
[10:14:38] *** Joins: mcleuder (~mcleuder@gateway/tor-sasl/mcleuder)
[10:18:29] *** Quits: malina (~malina@user/malina) (Ping timeout: 256 seconds)
[10:18:42] *** Joins: analognoise (~analognoi@ip98-176-154-48.sd.sd.cox.net)
[10:18:45] *** Joins: kurahaupo (~kurahaupo@115.69.27.211)
[10:20:11] *** Quits: rampart (~rampart@3.sub-174-250-16.myvzw.com) (Quit: Leaving)
[10:20:40] *** Joins: rampart (~rampart@2.sub-174-250-16.myvzw.com)
[10:21:09] *** Joins: goodfella (~archer@user/tessio)
[10:24:49] *** Quits: noarb (~noarb@user/noarb) (Quit: ZNC 1.8.2 - https://znc.in)
[10:25:55] <goodfella> ,knr 1-18
[10:25:56] <candide> Chapter 1: A Tutorial Introduction; Exercise 1-18. Write a program to remove trailing blanks and tabs from each line of input, and to delete entirely blank lines.
[10:26:00] <goodfella> http://ix.io/3QTa
[10:26:13] <goodfella> seems good ..
[10:26:42] *** Joins: danielcamiel (~danielcam@user/danielcamiel)
[10:27:19] <ChoHag> From a glance you can see from the question that in the most general case you're going to need some sort of dynamic storage, which there isn't.
[10:27:47] *** Joins: geowiesnot (~user@5-51-190-244.abo.bbox.fr)
[10:27:50] <ChoHag> Unlike the previous question in this case you could potentially have to buffer an entire line.
[10:28:57] *** Joins: noarb (~noarb@user/noarb)
[10:29:17] <goodfella> also EOF prints lines, which i don't like
[10:29:58] <goodfella> or the buffer rather
[10:30:06] <goodfella> first i want to try  to avoiid this
[10:32:33] *** Joins: noarb- (~noarb@user/noarb)
[10:32:57] *** Quits: Alhazred (~Alhazred@86.106.74.42) (Ping timeout: 256 seconds)
[10:34:05] *** Quits: noarb (~noarb@user/noarb) (Ping timeout: 256 seconds)
[10:34:42] <ChoHag> The EOF thing can be dealt with by making the loop header more explicit: while (1) { c = getchar(); if (c == EOF) { special-stuff(); break; } rest-of-loop; }
[10:34:51] *** Joins: Alhazred (~Alhazred@ool-18b829c5.dyn.optonline.net)
[10:35:43] <goodfella> or like that ?
[10:35:48] <ChoHag> The header as-is has a lot packed into a tight place which means it can't be easily adapted.
[10:35:59] <goodfella> http://ix.io/3QTf
[10:36:31] <goodfella> just added additional check of EOF in column == LE
[10:36:32] <goodfella> N
[10:38:48] <goodfella> ChoHag: are you here ?
[10:39:49] <ChoHag> Not entirely all here, no.
[10:41:04] <masoudd> why are you mixing tabs and spaces for indentation
[10:41:09] <goodfella> i think yours is more the general solution yeah
[10:42:46] <goodfella> even if i succeed fixing something it apparent to be bad solution, is this common with new programmers ?
[10:45:11] <masoudd> column += column <= LEN;
[10:45:18] <masoudd> What do you think this does
[10:45:56] <goodfella> increment column by 1 whenever column is less then or equal to LEN
[10:46:22] <goodfella> but that's not the point
[10:47:39] <masoudd> you're chaining so many if else things why not put this conditional operation in another if
[10:51:00] <goodfella> there is also one else in the code
[10:51:09] <goodfella> s/also/only
[10:53:00] *** Quits: kurahaupo (~kurahaupo@115.69.27.211) (Ping timeout: 240 seconds)
[10:53:19] *** Joins: mcleuder_ (~mcleuder@gateway/tor-sasl/mcleuder)
[10:53:23] *** Quits: elastic_dog (~elastic_d@2a01:118f:822:9c00:f583:aa51:9ad4:d4fb) (Ping timeout: 256 seconds)
[10:53:46] <goodfella> still trying to debug ChoHag solution "while (1) { c = getchar(); if (c == EOF) {" it still prints the buffer upon EOF
[10:56:11] *** Quits: danielcamiel (~danielcam@user/danielcamiel) (Ping timeout: 256 seconds)
[10:56:35] *** Quits: mcleuder (~mcleuder@gateway/tor-sasl/mcleuder) (Ping timeout: 240 seconds)
[10:56:42] *** Joins: elastic_dog (~elastic_d@2a01:118f:822:9c00:f583:aa51:9ad4:d4fb)
[10:58:43] *** Quits: Dotz0cat (~Dotz0cat@h246.117.90.75.dynamic.ip.windstream.net) (Ping timeout: 256 seconds)
[10:59:53] <ChoHag> Yes you're supposed to fill in the blanks.
[11:00:31] <ChoHag> I didn't read your code yes I just responded to you saying EOF does something wrong; that gives you access to the points necessary to fix it, whatever it is.
[11:00:39] <ChoHag> s/yes/yet/
[11:02:15] <ChoHag> Your whitespace is all over the shop.
[11:02:29] *** Joins: oxfuxxx (~oxfuxxx@217.138.213.30)
[11:02:46] <goodfella> i don't use whitespace
[11:02:49] <ChoHag> Sloppy code == sloppy thinking.
[11:03:09] <goodfella> cat -vA shows no whitespace other than those after '{' and the code
[11:04:01] <ChoHag> That's ... not what that means.
[11:04:10] <goodfella> ok so how to fix this
[11:04:31] *** Quits: crashrep (~crashrep@user/crashrep) (Quit: WeeChat 3.4)
[11:05:11] <goodfella> probably it don't like my tabstop=2 option
[11:05:18] <goodfella> in vim
[11:05:54] *** mcleuder_ is now known as mcleuder
[11:06:19] <masoudd> you are using tabs on some lines and 2 spaces as a tab on some other lines
[11:06:37] *** Joins: kurahaupo (~kurahaupo@115.69.27.211)
[11:06:47] <masoudd> tabstop=2 is ok but you need to always indent with tab
[11:07:13] *** Quits: slidercrank (~slidercra@user/slidercrank) (Ping timeout: 256 seconds)
[11:08:40] <goodfella> masoudd: how did you confirmed this  ?
[11:09:05] <masoudd> I opened http://ix.io/3QTf and looked
[11:09:41] <goodfella> how do you know  there is 2 spaces ?
[11:09:56] <masoudd> line 11 has 4 spaces before it and line 10 has 1 tab.
[11:10:41] <masoudd> line 11 should have 2 tabs. 4 / 2 = 2. You are using 2 spaces for a tab
[11:11:14] <goodfella> not according to cat -vA ...
[11:11:28] <masoudd> I don't care what cat -vA says. That's what you pasted
[11:11:45] <masoudd> do you think I am cat -vA?
[11:11:55] <goodfella> i think you are an asshole
[11:12:13] <masoudd> I see
[11:12:22] *** Quits: oxfuxxx (~oxfuxxx@217.138.213.30) (Ping timeout: 272 seconds)
[11:12:25] <goodfella> good, do something about it
[11:12:49] <masoudd> I will by not bothering you anymore
[11:14:03] <goodfella> excellent idea
[11:18:05] *** Joins: oxfuxxx (~oxfuxxx@217.138.213.28)
[11:22:41] *** Joins: meator (~meator@user/meator)
[11:23:39] *** Quits: noarb- (~noarb@user/noarb) (Ping timeout: 256 seconds)
[11:25:27] *** Joins: pavlushka (~pavlushka@user/pavlushka)
[11:25:29] *** Joins: noarb (~noarb@user/noarb)
[11:26:37] *** Joins: aradesh (~aradesh@user/aradesh)
[11:27:49] <goodfella> ok it seems like EOF is releasing the buffer when it's not the first character in terminal
[11:27:56] <goodfella> not the program problem per se
[11:29:01] *** Joins: kts (~kts@103.73.237.194)
[11:29:05] *** Joins: noarb- (~noarb@user/noarb)
[11:30:30] *** Quits: noarb (~noarb@user/noarb) (Ping timeout: 260 seconds)
[11:31:59] *** Joins: fbiagent_ (~fbiagent@user/fbiagent)
[11:34:13] *** Quits: fbiagent (~fbiagent@user/fbiagent) (Ping timeout: 240 seconds)
[11:36:26] *** Quits: pavlushka (~pavlushka@user/pavlushka) (Ping timeout: 272 seconds)
[11:37:53] *** Joins: phrosty (~phrosty@c-73-225-175-19.hsd1.wa.comcast.net)
[11:38:20] *** Quits: oxfuxxx (~oxfuxxx@217.138.213.28) (Ping timeout: 272 seconds)
[11:40:44] *** Quits: soapsudsxx (~soapsudsx@209.221.40.142) (Remote host closed the connection)
[11:40:52] *** Quits: perrierjouet (~perrier-j@modemcable012.251-130-66.mc.videotron.ca) (Quit: WeeChat 3.4)
[11:44:40] *** Joins: noarb (~noarb@user/noarb)
[11:44:51] *** Joins: oxfuxxx (~oxfuxxx@217.138.213.28)
[11:45:45] *** Quits: noarb- (~noarb@user/noarb) (Ping timeout: 256 seconds)
[11:51:09] *** Joins: the_lanetly_052 (~the_lanet@194.135.154.101)
[11:52:14] *** Quits: meator (~meator@user/meator) (Quit: Leaving)
[11:58:30] *** Quits: gr33n7007h (~gr33n7007@user/gr33n7007h) (Ping timeout: 260 seconds)
[12:00:26] *** Joins: gr33n7007h (~gr33n7007@user/gr33n7007h)
[12:00:49] *** Joins: jjido (~Denis@2a02:c7f:5c91:e700:d0d7:ba7d:5a5a:630f)
[12:01:05] *** Joins: bnchs (~bnchs@105.157.19.247)
[12:07:17] *** Quits: kurahaupo (~kurahaupo@115.69.27.211) (Ping timeout: 256 seconds)
[12:08:07] *** Joins: Juliu (~Juliu@2a02:810b:c640:3ec0:350b:c716:fa56:ddbc)
[12:11:17] *** Joins: zer0x_ (~zer0x@58.186.58.26)
[12:13:00] *** Quits: oxfuxxx (~oxfuxxx@217.138.213.28) (Ping timeout: 240 seconds)
[12:14:46] *** Quits: dogbert2 (~Bill@ip70-170-79-7.lv.lv.cox.net) (Remote host closed the connection)
[12:15:02] *** Joins: dogbert2 (~Bill@ip70-170-79-7.lv.lv.cox.net)
[12:19:02] *** Joins: kurahaupo (~kurahaupo@115.69.27.211)
[12:21:05] *** Joins: adip (~adip@den37.neoplus.adsl.tpnet.pl)
[12:21:06] *** Joins: adip_ (~adip@den37.neoplus.adsl.tpnet.pl)
[12:23:00] *** Quits: kurahaupo (~kurahaupo@115.69.27.211) (Ping timeout: 240 seconds)
[12:26:01] *** Joins: freep (~freepppp@193.92.35.32.dsl.dyn.forthnet.gr)
[12:27:33] *** Quits: rkta (~rkta@2001:4ba0:cafe:eaf::1) (Quit: nyaa~)
[12:30:13] *** Quits: M101donutman[m] (~M101donut@2001:470:69fc:105::d51) (Quit: You have been kicked for being idle)
[12:30:46] *** Quits: nuxil_ (~nuxil@141.195.51.213) (Ping timeout: 250 seconds)
[12:31:25] *** Joins: rkta_ (~rkta@2001:4ba0:cafe:eaf::1)
[12:31:40] *** rkta_ is now known as rkta
[12:31:44] *** Joins: mrig (~mrig@user/mrig)
[12:32:00] *** Quits: analognoise (~analognoi@ip98-176-154-48.sd.sd.cox.net) (Quit: Leaving)
[12:32:08] *** Joins: noteness (~noteness@user/noteness)
[12:32:35] *** Quits: noteness_ (~noteness@user/noteness) (Ping timeout: 240 seconds)
[12:33:39] *** Joins: nuxil (~nuxil@141.195.51.213)
[12:33:56] *** cp--- is now known as cp-
[12:34:36] *** Joins: milkt_ (~debian@gateway/tor-sasl/milkt)
[12:34:39] *** Joins: Akiva (~Akiva@user/Akiva)
[12:35:47] *** Joins: random-jellyfish (~random-je@user/random-jellyfish)
[12:36:15] *** Quits: milkt (~debian@gateway/tor-sasl/milkt) (Ping timeout: 240 seconds)
[12:37:42] *** Joins: ___nick___ (~quassel@cpc68286-cdif17-2-0-cust533.5-1.cable.virginm.net)
[12:45:36] *** Joins: pretty_dumm_guy (trottel@gateway/vpn/protonvpn/prettydummguy/x-88029655)
[12:48:05] *** Joins: kurahaupo (~kurahaupo@115.69.27.211)
[12:50:27] *** Joins: oxfuxxx (~oxfuxxx@217.138.213.28)
[12:51:16] *** Joins: bebyx (~Thunderbi@user/bebyx)
[12:58:12] *** Quits: rgrinberg (~textual@2806:101e:7:70b6:9d42:51ae:9407:db15) (Quit: My MacBook has gone to sleep. ZZZzzz‚Ä¶)
[13:05:48] *** Quits: Akiva (~Akiva@user/Akiva) (Ping timeout: 240 seconds)
[13:09:18] *** Quits: jjido (~Denis@2a02:c7f:5c91:e700:d0d7:ba7d:5a5a:630f) (Quit: My MacBook Air has gone to sleep. ZZZzzz‚Ä¶)
[13:11:20] *** Joins: Atque (~Atque@user/atque)
[13:14:35] *** Quits: oxfuxxx (~oxfuxxx@217.138.213.28) (Ping timeout: 252 seconds)
[13:17:56] *** Joins: andro (~stupidfox@user/stupidfox)
[13:22:27] *** Joins: dfghjk (~asdfghjkl@2001:871:23a:2ac8:a707:a23c:188e:f142)
[13:30:26] *** Quits: kts (~kts@103.73.237.194) (Ping timeout: 260 seconds)
[13:30:28] *** Joins: kts_ (~kts@103.73.237.32)
[13:32:12] *** Joins: magla (~gelignite@d5364c1c.access.ecotel.net)
[13:33:57] *** Joins: merrinx (~merrinx@ti0028a400-3686.bb.online.no)
[13:36:11] *** Quits: kts_ (~kts@103.73.237.32) (Quit: Konversation terminated!)
[13:39:08] *** Joins: kts (~kts@103.73.237.32)
[13:39:50] *** Quits: jkotra (~jkotra@122.169.141.242) (Quit: ZNC 1.8.2+deb2 - https://znc.in)
[13:40:37] *** Joins: cherrry9 (~jan@ded246.neoplus.adsl.tpnet.pl)
[13:41:05] *** Quits: alch (~alch@151.44.28.152) (Ping timeout: 256 seconds)
[13:41:11] *** Joins: jkotra (~jkotra@122.169.141.242)
[13:43:02] *** Joins: alch (~alch@151.46.34.243)
[13:47:35] *** Quits: kurahaupo (~kurahaupo@115.69.27.211) (Ping timeout: 252 seconds)
[13:55:30] *** Quits: jkotra (~jkotra@122.169.141.242) (Quit: ZNC 1.8.2+deb2 - https://znc.in)
[13:55:49] *** Joins: jkotra (~jkotra@122.169.141.242)
[13:59:35] *** Quits: Atque (~Atque@user/atque) (Quit: ...)
[13:59:38] *** Joins: strajder (~strajder@user/strajder)
[14:00:41] *** Joins: xa0s (~xa0s@mab.sdf.org)
[14:05:58] *** Joins: blindguard (~blindguar@2a02:908:1864:c200::ef3c)
[14:06:34] *** Joins: kenanmarasli (~kenanmara@user/kenanmarasli)
[14:09:12] *** Quits: Betal (~Betal@user/betal) (Quit: WeeChat 3.4)
[14:18:56] *** Quits: dfghjk (~asdfghjkl@2001:871:23a:2ac8:a707:a23c:188e:f142) (Ping timeout: 252 seconds)
[14:23:31] *** Quits: jkotra (~jkotra@122.169.141.242) (Quit: ZNC 1.8.2+deb2 - https://znc.in)
[14:23:56] *** Joins: jkotra (~jkotra@122.169.141.242)
[14:25:29] *** Joins: arinov (~arinov@213.194.126.155)
[14:28:42] *** Quits: Alhazred (~Alhazred@ool-18b829c5.dyn.optonline.net) (Ping timeout: 272 seconds)
[14:28:49] *** Joins: mcleuder_ (~mcleuder@gateway/tor-sasl/mcleuder)
[14:28:52] *** Joins: Alhazred (~Alhazred@86.106.74.43)
[14:31:55] *** Quits: mcleuder (~mcleuder@gateway/tor-sasl/mcleuder) (Ping timeout: 240 seconds)
[14:32:45] *** Joins: LucaTM (~LucaTM@user/lucatm)
[14:33:41] *** Joins: tech_exorcist (txrcst@user/tech-exorcist/x-0447479)
[14:37:31] *** Joins: pavlushka (~pavlushka@user/pavlushka)
[14:38:32] *** Joins: kurahaupo (~kurahaupo@115.69.27.211)
[14:40:19] *** Joins: atulu (~atulum]@2001:470:69fc:105::d50c)
[14:42:12] *** Joins: nyah (~nyah@05453449.skybroadband.com)
[14:44:30] *** Joins: duckpunch (~duckpunch@103.sub-174-240-115.myvzw.com)
[14:44:41] *** Parts: duckpunch (~duckpunch@103.sub-174-240-115.myvzw.com) ()
[14:44:54] *** Quits: ___nick___ (~quassel@cpc68286-cdif17-2-0-cust533.5-1.cable.virginm.net) (Quit: https://quassel-irc.org - Chat comfortably. Anywhere.)
[14:46:05] *** Quits: kts (~kts@103.73.237.32) (Quit: Konversation terminated!)
[14:46:28] *** Joins: ___nick___ (~quassel@cpc68286-cdif17-2-0-cust533.5-1.cable.virginm.net)
[14:46:47] *** Quits: ___nick___ (~quassel@cpc68286-cdif17-2-0-cust533.5-1.cable.virginm.net) (Client Quit)
[14:48:28] *** Joins: ___nick___ (~quassel@cpc68286-cdif17-2-0-cust533.5-1.cable.virginm.net)
[14:49:12] *** Joins: freepp (~freepppp@193.92.35.32.dsl.dyn.forthnet.gr)
[14:49:42] *** Quits: freepp (~freepppp@193.92.35.32.dsl.dyn.forthnet.gr) (Remote host closed the connection)
[14:50:37] *** Joins: Y4knotiS (~YaknotiS@cpc1-cmbg18-2-0-cust87.5-4.cable.virginm.net)
[14:51:55] *** Joins: anshupatia (uid29854@id-29854.helmsley.irccloud.com)
[14:52:19] *** Quits: Thedarkb (~Thedarkb@82.3.80.190) (Remote host closed the connection)
[14:52:44] *** Joins: Thedarkb (~Thedarkb@82.3.80.190)
[14:53:10] *** Quits: dave0 (~davezero@069.d.003.ncl.iprimus.net.au) (Quit: dave's not here)
[14:53:23] *** Joins: bnchs__ (~bnchs@105.157.19.247)
[14:53:37] *** Quits: bnchs (~bnchs@105.157.19.247) (Ping timeout: 256 seconds)
[14:54:40] *** Joins: notouchpad (~notouchpa@2.70.96.95.mobile.tre.se)
[14:56:08] *** Quits: notouchpad (~notouchpa@2.70.96.95.mobile.tre.se) (Client Quit)
[14:56:23] *** Joins: notouchpad (~notouchpa@2.70.96.95.mobile.tre.se)
[14:56:23] *** Joins: Atque (~Atque@user/atque)
[15:00:12] *** Quits: pavlushka (~pavlushka@user/pavlushka) (Ping timeout: 240 seconds)
[15:01:48] *** Quits: arinov (~arinov@213.194.126.155) (Ping timeout: 240 seconds)
[15:02:13] *** Quits: andro (~stupidfox@user/stupidfox) (Read error: Connection reset by peer)
[15:03:17] *** Quits: notouchpad (~notouchpa@2.70.96.95.mobile.tre.se) (Read error: Connection reset by peer)
[15:03:50] *** Joins: andro (~stupidfox@user/stupidfox)
[15:04:14] *** Joins: Rounin (~david@84.212.130.215)
[15:04:14] *** Joins: kaji (~kajiryoji@2001:470:69fc:105::405b)
[15:04:56] <kaji> Hi, I was wondering if anyone could tell me how to subsitude dynamic symbol in binaries?
[15:04:57] *** Quits: constxd (~brad@142.134.79.191) (Ping timeout: 240 seconds)
[15:05:41] <kaji> I have some program linked against (dynamic) `pthread_yield`, which is removed in glibc 2.34. As I have binary blobs that require the function, some programs can no longer compile
[15:07:00] *** Quits: joev (~joev@user/joev) (Ping timeout: 240 seconds)
[15:08:12] *** Joins: joev (~joev@user/joev)
[15:12:06] *** Quits: jkotra (~jkotra@122.169.141.242) (Quit: ZNC 1.8.2+deb2 - https://znc.in)
[15:12:56] *** Joins: jkotra (~jkotra@122.169.141.242)
[15:18:07] *** Quits: Juliu (~Juliu@2a02:810b:c640:3ec0:350b:c716:fa56:ddbc) (Quit: Quit)
[15:19:00] *** Quits: phrosty (~phrosty@c-73-225-175-19.hsd1.wa.comcast.net) (Ping timeout: 240 seconds)
[15:19:16] *** Joins: mcleuder (~mcleuder@gateway/tor-sasl/mcleuder)
[15:22:09] *** Joins: zeenk (~zeenk@2a02:2f04:a30d:1300:51a3:bcfc:6cda:9fc5)
[15:22:15] *** Quits: mcleuder_ (~mcleuder@gateway/tor-sasl/mcleuder) (Ping timeout: 240 seconds)
[15:24:36] *** Joins: Klinda (~superleag@user/klinda)
[15:30:17] *** Quits: csrf (~csrf@user/csrf) (Quit: ZNC 1.7.2+deb3 - https://znc.in)
[15:31:01] *** Joins: csrf (~csrf@user/csrf)
[15:34:22] *** Joins: kts (~kts@103.73.237.32)
[15:36:02] *** Quits: supakeen (~user@python/site-packages/supakeen) (Quit: WeeChat 3.4)
[15:36:32] *** Joins: supakeen (~user@python/site-packages/supakeen)
[15:40:46] *** Joins: random-nick (~random-ni@87.116.176.196)
[15:42:36] *** Quits: kurahaupo (~kurahaupo@115.69.27.211) (Ping timeout: 240 seconds)
[15:43:49] *** Quits: Lord_of_Life (~Lord@user/lord-of-life/x-2819915) (Quit: Laa shay'a waqi'un moutlaq bale kouloun moumkine)
[15:45:29] *** Joins: Lord_of_Life (~Lord@user/lord-of-life/x-2819915)
[15:47:02] *** Quits: bebyx (~Thunderbi@user/bebyx) (Ping timeout: 240 seconds)
[15:48:17] *** Quits: Techcable (~Techcable@168.235.93.147) (Ping timeout: 256 seconds)
[15:54:15] *** Joins: kurahaupo (~kurahaupo@115.69.27.211)
[15:54:24] *** Joins: dfghjk (~asdfghjkl@2001:871:23a:2ac8:49ae:fb0b:ec42:2df8)
[15:55:15] *** Quits: mcleuder (~mcleuder@gateway/tor-sasl/mcleuder) (Ping timeout: 240 seconds)
[15:55:49] *** Joins: mcleuder (~mcleuder@gateway/tor-sasl/mcleuder)
[15:58:47] *** Quits: andro (~stupidfox@user/stupidfox) (Ping timeout: 256 seconds)
[16:00:37] <goodfella> kaji: i just curious isn't it simpler to just add it to glibc ?
[16:01:18] <kaji> goodfella: May I ask what do you mean by adding it to glibc?
[16:02:24] <goodfella> get the static libraries of version older than 2.34 and copy the functionality you need to your new version of glibc
[16:02:44] <goodfella> and create a new .so
[16:04:51] *** Joins: orestarod (~orestarod@2a02:2149:8b20:700:2b9d:7f86:7169:61c0)
[16:05:25] *** Quits: Rounin (~david@84.212.130.215) (Ping timeout: 240 seconds)
[16:05:42] <goodfella> it doesn't take a genius to see how bad idea it is but if you must ...
[16:10:57] *** Quits: zeenk (~zeenk@2a02:2f04:a30d:1300:51a3:bcfc:6cda:9fc5) (Quit: Konversation terminated!)
[16:11:25] *** Joins: shivesh (~shivesh@user/shivesh)
[16:12:12] *** Joins: sh0ne (~sh0ne@2a06:5b00:6fb:2a00:95ca:ec3f:c36c:93e9)
[16:13:11] *** Joins: bebyx (~Thunderbi@user/bebyx)
[16:17:58] *** Joins: mahmutov (~mahmutov@5.176.45.225)
[16:20:07] *** Joins: perrierjouet (~perrier-j@modemcable012.251-130-66.mc.videotron.ca)
[16:27:04] *** Joins: ioxzev1z (~ioxzev1z@user/ioxzev1z)
[16:29:55] *** Quits: kts (~kts@103.73.237.32) (Quit: Konversation terminated!)
[16:31:55] *** Quits: cherrry9 (~jan@ded246.neoplus.adsl.tpnet.pl) (Ping timeout: 256 seconds)
[16:34:01] *** Joins: robyndrake (~robyndrak@154.16.118.240)
[16:34:07] *** Quits: robyndrake (~robyndrak@154.16.118.240) (Changing host)
[16:34:07] *** Joins: robyndrake (~robyndrak@user/robyndrake)
[16:34:31] *** robyndrake is now known as robyn
[16:34:56] *** Quits: dfghjk (~asdfghjkl@2001:871:23a:2ac8:49ae:fb0b:ec42:2df8) (Ping timeout: 245 seconds)
[16:36:24] *** Quits: LucaTM (~LucaTM@user/lucatm) (Quit: Textual IRC Client: www.textualapp.com)
[16:40:16] *** Quits: Atque (~Atque@user/atque) (Quit: ...)
[16:42:41] *** Quits: adip_ (~adip@den37.neoplus.adsl.tpnet.pl) (Ping timeout: 256 seconds)
[16:42:41] *** Quits: adip (~adip@den37.neoplus.adsl.tpnet.pl) (Ping timeout: 256 seconds)
[16:45:59] *** Joins: LucaTM (~LucaTM@user/lucatm)
[16:49:08] <kaji> goodfella: Well I'll certainly add that as my last resort
[16:49:26] *** Joins: adip (~adip@den37.neoplus.adsl.tpnet.pl)
[16:49:35] *** Joins: adip_ (~adip@den37.neoplus.adsl.tpnet.pl)
[16:53:02] *** Quits: drbeco (~beco@2804:351c:dd01:f000:a19e:a89a:e0cb:cec7) (Quit: Leaving)
[16:54:42] *** Joins: skapata (~Skapata@2804:14c:87b0:9d2e:dd10:779a:8f5a:8f40)
[16:54:42] *** Quits: skapata (~Skapata@2804:14c:87b0:9d2e:dd10:779a:8f5a:8f40) (Changing host)
[16:54:42] *** Joins: skapata (~Skapata@user/skapata)
[16:57:48] *** Quits: the_lanetly_052 (~the_lanet@194.135.154.101) (Ping timeout: 240 seconds)
[16:59:26] *** Quits: bebyx (~Thunderbi@user/bebyx) (Ping timeout: 272 seconds)
[17:09:21] *** Joins: pavlushka (~pavlushka@user/pavlushka)
[17:09:36] *** Quits: kurahaupo (~kurahaupo@115.69.27.211) (Read error: Connection reset by peer)
[17:09:53] *** Joins: kurahaupo (~kurahaupo@115.69.27.211)
[17:12:43] *** Quits: pavlushka (~pavlushka@user/pavlushka) (Max SendQ exceeded)
[17:12:43] *** Joins: bebyx (~Thunderbi@user/bebyx)
[17:13:13] *** Joins: drbeco (~beco@2804:351c:dd01:f000:a19e:a89a:e0cb:cec7)
[17:14:03] *** Joins: pavlushka (~pavlushka@user/pavlushka)
[17:15:21] *** Quits: skapata (~Skapata@user/skapata) (Ping timeout: 245 seconds)
[17:16:23] *** Quits: pavlushka (~pavlushka@user/pavlushka) (Max SendQ exceeded)
[17:16:55] *** Joins: pavlushka (~pavlushka@user/pavlushka)
[17:20:17] *** Quits: dld (~davidlowr@2601:197:600:1210:88cb:4d48:189:f8f8) (Ping timeout: 240 seconds)
[17:21:24] *** Quits: pavlushka (~pavlushka@user/pavlushka) (Ping timeout: 240 seconds)
[17:24:00] *** Joins: cherrry9 (~jan@ded246.neoplus.adsl.tpnet.pl)
[17:24:39] *** Joins: plastico (~plastico@neomutt/plastico)
[17:25:39] *** Quits: tech_exorcist (txrcst@user/tech-exorcist/x-0447479) (Quit: see you later)
[17:28:30] *** Joins: dld (~davidlowr@2601:197:600:1210:88cb:4d48:189:f8f8)
[17:28:35] *** Joins: Thedarkb1 (~Thedarkb@82.3.80.190)
[17:29:20] *** Joins: skapata (~Skapata@user/skapata)
[17:30:13] *** Quits: tafa (~tafa@user/tafa) (Quit: ZNC - https://znc.in)
[17:31:38] *** Joins: tafa (~tafa@user/tafa)
[17:32:36] *** Quits: Thedarkb (~Thedarkb@82.3.80.190) (Ping timeout: 240 seconds)
[17:34:21] *** Joins: pavlushka (~pavlushka@user/pavlushka)
[17:35:09] *** Quits: pavlushka (~pavlushka@user/pavlushka) (Remote host closed the connection)
[17:35:43] <goodfella> playing with binary symbols is even less recommended
[17:36:55] *** Joins: ymwm (~yingmanwu@117.26.69.52)
[17:39:03] *** Quits: ymwm (~yingmanwu@117.26.69.52) (Max SendQ exceeded)
[17:39:31] *** Joins: ymwm (~yingmanwu@117.26.69.52)
[17:39:42] *** Joins: Torr (~Torr@user/torr)
[17:40:10] *** Joins: acerbic (~acerbic@cs-xdata-50-86-48-225.cspire.com)
[17:41:17] *** Quits: alch (~alch@151.46.34.243) (Ping timeout: 240 seconds)
[17:43:22] *** Joins: alch (~alch@151.36.176.226)
[17:44:03] *** Quits: drbeco (~beco@2804:351c:dd01:f000:a19e:a89a:e0cb:cec7) (Quit: Leaving)
[17:44:32] *** Joins: drbeco (~beco@2804:351c:dd01:f000:a19e:a89a:e0cb:cec7)
[17:45:36] *** Quits: drbeco (~beco@2804:351c:dd01:f000:a19e:a89a:e0cb:cec7) (Remote host closed the connection)
[17:46:13] *** Quits: kaph (~kaph@net-109-116-124-149.cust.vodafonedsl.it) (Read error: Connection reset by peer)
[17:46:38] *** Joins: kaph (~kaph@net-109-116-124-149.cust.vodafonedsl.it)
[17:48:50] *** Quits: Sadale (~Sadale@user/sadale) (Read error: Connection reset by peer)
[17:49:33] *** Quits: random-jellyfish (~random-je@user/random-jellyfish) (Ping timeout: 256 seconds)
[17:49:48] *** Joins: SGautam (uid286066@id-286066.ilkley.irccloud.com)
[17:52:04] *** Joins: vdamewood (~vdamewood@fedora/vdamewood)
[17:52:13] *** Joins: Sadale (~Sadale@user/sadale)
[17:57:36] *** Joins: dfghjk (~asdfghjkl@2001:871:23a:2ac8:b7c9:3428:caec:95b3)
[17:58:20] *** Joins: imm__ (~imm_@user/imm/x-3405860)
[17:58:57] *** Quits: imm_ (~imm_@user/imm/x-3405860) (Ping timeout: 256 seconds)
[17:59:10] *** Quits: rampart (~rampart@2.sub-174-250-16.myvzw.com) (Remote host closed the connection)
[18:00:00] *** Joins: rampart (~rampart@2.sub-174-250-16.myvzw.com)
[18:06:27] <caze> That code looks familiar.
[18:08:36] *** Quits: joev (~joev@user/joev) (Ping timeout: 240 seconds)
[18:08:37] *** Quits: sh0ne (~sh0ne@2a06:5b00:6fb:2a00:95ca:ec3f:c36c:93e9) (Quit: My MacBook has gone to sleep. ZZZzzz‚Ä¶)
[18:09:39] *** Joins: joev (~joev@user/joev)
[18:09:58] *** Joins: drbeco (~beco@2804:351c:dd01:f000:c3d0:abfe:ba01:7c9c)
[18:14:53] *** Quits: Alhazred (~Alhazred@86.106.74.43) (Ping timeout: 252 seconds)
[18:16:46] *** Joins: Alhazred (~Alhazred@ool-18b829c5.dyn.optonline.net)
[18:26:07] *** Quits: YellowSuB (~YellowSuB@user/yellowsub) (Ping timeout: 256 seconds)
[18:27:15] *** Quits: frost (~frost@user/frost) (Ping timeout: 256 seconds)
[18:27:49] *** Quits: drbeco (~beco@2804:351c:dd01:f000:c3d0:abfe:ba01:7c9c) (Remote host closed the connection)
[18:28:08] *** Joins: drbeco (~beco@2804:351c:dd02:6800:8a6d:70bc:984:398e)
[18:29:01] *** Joins: cvmn (~caveman@gateway/tor-sasl/caveman)
[18:31:47] <goodfella> caze: it's 1-19
[18:32:25] <goodfella> or at least that's what i thought
[18:32:54] <goodfella> caze: i tried to build on your 1-17
[18:33:10] *** Quits: bebyx (~Thunderbi@user/bebyx) (Ping timeout: 272 seconds)
[18:36:15] *** Quits: cvmn (~caveman@gateway/tor-sasl/caveman) (Ping timeout: 240 seconds)
[18:37:48] *** Joins: CodePoint (~CodePoint@2600:1700:3070:3790:3df8:cd30:3e5c:fc25)
[18:41:20] *** Joins: mrgz (~mrgz@201-42-0-191.dsl.telesp.net.br)
[18:43:18] *** Quits: ioxzev1z (~ioxzev1z@user/ioxzev1z) (Quit: Leaving)
[18:43:29] *** Quits: cthi (~cthi@097-082-138-151.res.spectrum.com) (Quit: leaving)
[18:44:49] *** Quits: kurahaupo (~kurahaupo@115.69.27.211) (Read error: Connection reset by peer)
[18:45:04] *** Joins: eelstrebor (~eelstrebo@198-178-29-136.scb.ne.static.allophone.net)
[18:47:01] *** Quits: dfghjk (~asdfghjkl@2001:871:23a:2ac8:b7c9:3428:caec:95b3) (Ping timeout: 240 seconds)
[18:47:43] *** Joins: lfs (~lfs@5.2.79.79)
[18:48:13] *** Joins: kurahaupo (~kurahaupo@115.69.27.211)
[18:50:09] *** Quits: drbeco (~beco@2804:351c:dd02:6800:8a6d:70bc:984:398e) (Quit: Leaving)
[18:50:24] *** Joins: wroathe (~wroathe@206-55-188-8.fttp.usinternet.com)
[18:50:24] *** Quits: wroathe (~wroathe@206-55-188-8.fttp.usinternet.com) (Client Quit)
[18:52:22] *** Joins: constxd (~brad@142.134.79.191)
[18:52:32] *** Joins: kaph_ (~kaph@net-109-116-124-149.cust.vodafonedsl.it)
[18:52:41] *** Quits: kaph (~kaph@net-109-116-124-149.cust.vodafonedsl.it) (Read error: Connection reset by peer)
[18:53:29] *** Quits: kaph_ (~kaph@net-109-116-124-149.cust.vodafonedsl.it) (Remote host closed the connection)
[18:53:46] *** Joins: kaph (~kaph@net-109-116-124-149.cust.vodafonedsl.it)
[19:03:07] *** Quits: arand (~arand@c-0a01235c.05-662-7570703.bbcust.telenor.se) (Ping timeout: 250 seconds)
[19:04:28] *** Joins: drbeco (~beco@2804:351c:dd02:6800:c024:382c:90ec:dcb6)
[19:05:28] *** Joins: arand (~arand@c-0a01235c.05-662-7570703.bbcust.telenor.se)
[19:05:35] *** Joins: Zambyte (~Zambyte@cpe-104-228-60-14.nycap.res.rr.com)
[19:07:05] *** Quits: CatCow (~wtf_over@c-73-96-109-206.hsd1.or.comcast.net) (Quit: Textual IRC Client: www.textualapp.com)
[19:07:41] *** Quits: shivesh (~shivesh@user/shivesh) (Quit: leaving)
[19:12:26] *** Quits: goodfella (~archer@user/tessio) (Ping timeout: 272 seconds)
[19:15:50] *** Quits: dogbert2 (~Bill@ip70-170-79-7.lv.lv.cox.net) (Remote host closed the connection)
[19:16:05] *** Joins: dogbert2 (~Bill@ip70-170-79-7.lv.lv.cox.net)
[19:18:03] *** Joins: Dotz0cat (~Dotz0cat@h161.215.213.151.dynamic.ip.windstream.net)
[19:20:27] *** Quits: ymwm (~yingmanwu@117.26.69.52) (Ping timeout: 250 seconds)
[19:28:27] *** Quits: unlink2 (~unlink@p200300ebcf3e190012b7094ba83de7f3.dip0.t-ipconnect.de) (Remote host closed the connection)
[19:29:59] *** Joins: cosimone (~user@2001:b07:ae5:db26:c24a:d20:4d91:1e20)
[19:31:48] *** Quits: moog_ (~moog@107.126.53.115) (Remote host closed the connection)
[19:31:48] *** Quits: zer0x_ (~zer0x@58.186.58.26) (Ping timeout: 240 seconds)
[19:32:13] *** Joins: moog_ (~moog@107.126.53.115)
[19:32:35] *** Quits: nehsou^ (~nehsou@50-202-219-146-static.hfc.comcastbusiness.net) (Remote host closed the connection)
[19:32:49] *** Joins: Burgundy (~NA@86.121.143.206)
[19:34:20] *** Joins: dsrt^ (~dsrt@50-202-219-146-static.hfc.comcastbusiness.net)
[19:35:28] *** Joins: wroathe (~wroathe@user/wroathe)
[19:37:14] *** Joins: kts (~kts@103.73.237.33)
[19:38:32] <constxd> kings
[19:38:56] <lfs> C is king
[19:39:08] <lfs> nah asm is king
[19:39:10] <constxd> no
[19:39:12] <lfs> C is the queen
[19:39:14] <constxd> jesus is king
[19:39:35] <lfs> XD
[19:39:38] <lfs> hail to the king
[19:40:08] <lfs> easter everywhere
[19:41:15] <lfs> lets discuss death penalty with a christian
[19:41:27] <lfs> i actually have a bible
[19:42:18] *** Joins: cadmio (~cadmio@151.35.169.24)
[19:42:22] <constxd> based
[19:42:22] <lfs> gonna read it back to back in case i have to argue with christians
[19:42:29] *** Quits: davros (~davros@host86-185-61-1.range86-185.btcentralplus.com) (Remote host closed the connection)
[19:42:32] <constxd> >back to back
[19:42:52] <cadmio> do you know whethet it's possible to change the pathname of a GFile * ?
[19:42:55] <lfs> i mean front to back i was thinking about the guy who took 2 lethal snake bites back to back
[19:43:11] *** Quits: geowiesnot (~user@5-51-190-244.abo.bbox.fr) (Ping timeout: 256 seconds)
[19:43:16] <constxd> tf is a GFile
[19:43:20] <constxd> is that some GLib shit
[19:43:44] <lfs> hmm my liver gets very happy thinking about easter
[19:43:45] <cadmio> yes
[19:44:16] <lfs> the govermnent bans the sale of alcohol in easter we celebrate jesus suffering on the cross by denying alcohol
[19:44:52] *** Joins: freakazoid333 (~matt@2603:9000:cf03:86c3:751f:c2d3:24b7:e2fb)
[19:45:51] <constxd> can't you just make a new GFile with the right path?
[19:46:53] <lfs> speak of the devil when is easter this year?
[19:46:58] <lfs> i was caught so off guard last easter
[19:47:09] *** Joins: Franciman (~Franciman@mx1.fracta.dev)
[19:47:11] <cadmio> constxd: I'm taking it as GFile *file = gtk_file_chooser_get_file (GTK_FILE_CHOOSER (dialog));
[19:47:27] <lfs> it was like NO U CANT DRINK ITS EASTER AHAHAHAHAH like boulders falling from blue skies
[19:47:31] <cadmio> but since I'm opening a template I'd like to change it
[19:47:49] <lfs> need to brew an easter special in time for easter
[19:48:07] <lfs> i have a very solid buisness model: selling alcohol to alcoholics
[19:48:07] <constxd> wait so
[19:48:20] <NRK> i wouldn't be surprised if GFile is basically just `typedef FILE GFile`
[19:48:29] *** Joins: soapsudsxx (~soapsudsx@209.221.40.142)
[19:48:29] <lfs> almost cured my wetbrain here
[19:48:36] <constxd> the user selects a template from the file chooser and then  you make a new file based on the template?
[19:48:52] <constxd> NRK: no it's not
[19:49:12] <lfs> we are looking at alcohol being consumably in excess and reversing the brain damage liver damage and kidney damage within our lifetime
[19:49:21] <constxd> GFile is basically just a location from what I can tell
[19:49:25] <cadmio> till the file is not save I'd like the basename of GFile to be "Untitled"
[19:50:38] <constxd> why do you even need a GFile before it's saved?
[19:51:23] <cadmio> https://github.com/gioretikto/litos/blob/main/dialogs.c#L124
[19:51:53] <cadmio> I'd like to remove the litos->template = TRUE;
[19:51:59] <cadmio> from the structure
[19:52:49] *** Joins: amdj (amdj@libera/staff/amdj)
[19:53:22] *** Quits: jmiehe (~Thunderbi@user/jmiehe) (Quit: jmiehe)
[19:54:08] <constxd> how about just
[19:56:33] <constxd> idk
[19:56:42] <constxd> i'd prob add a 3rd parameter to open_file
[19:56:50] <cadmio> I'm using that variable only here https://github.com/gioretikto/litos/blob/main/litos.c#L291
[19:57:57] <constxd> really you should pass 3 things
[19:58:32] <constxd> the path to the file to read from, the name of the new file, and the litos struct pointer
[19:59:08] <cadmio> no that function open_file_complete (GObject *source_object, GAsyncResult *res, gpointer userData) takes those parameters by default
[19:59:08] <constxd> if it's a template, pass (template, NULL, litos) or (template, "Untitled", litos)
[19:59:15] <cadmio> I can't change it
[19:59:23] <constxd> no not open_file_complete
[19:59:25] <constxd> just change open_file
[19:59:36] *** Joins: mikoto-chan (~mikoto-ch@213.177.151.239)
[20:00:28] *** Joins: bebyx (~Thunderbi@user/bebyx)
[20:00:34] *** Joins: pulse (~pulse@user/pulse)
[20:00:42] *** Quits: Nutcrawler (~sergio@217-180-232-30.sycmilaa.metronetinc.net) (Quit: Leaving)
[20:00:57] *** Quits: cosimone (~user@2001:b07:ae5:db26:c24a:d20:4d91:1e20) (Remote host closed the connection)
[20:01:12] *** Joins: cosimone (~user@2001:b07:ae5:db26:c24a:d20:4d91:1e20)
[20:01:38] <cadmio> but those info then must end up in _complete
[20:02:17] <lfs> is there a cryptography channel?
[20:02:36] *** Joins: trampel (~trampel@2601:602:9a00:49d:49f1:a40f:2b6c:577a)
[20:02:53] *** Joins: crashrep (~crashrep@user/crashrep)
[20:04:07] <bnchs__> yes
[20:04:15] <bnchs__> but it's full of cryptocurrency meme
[20:04:29] *** Joins: Nutcrawler (~sergio@217-180-232-30.sycmilaa.metronetinc.net)
[20:04:31] *** Joins: slidercrank (~slidercra@user/slidercrank)
[20:04:53] *** Quits: strajder (~strajder@user/strajder) (Quit: relogging)
[20:05:46] <constxd> cadmio: well you could set litos->filename[page] in open_file before calling the glib function
[20:05:55] <constxd> so then you can access it open_file_complete
[20:06:01] <constxd> but this is why glib is just cancer
[20:07:16] <bnchs__> does anyone here unironically use glib
[20:07:23] <pragma-> frameworks are nice. but when they add wrappers around even the basic types, that's going too far.
[20:07:44] *** Joins: Fairy (~Fairy@2001:464a:4992:0:6105:d368:45f9:802f)
[20:07:54] <constxd> async stuff with callbacks just isn't pretty in C
[20:08:16] <bnchs__> i use callbacks because i don't want to allocate shit
[20:10:16] <amdj> Hey all, I'm hoping someone here has the answer to this, even if the answer is "you can't". I'm wondering how to declare a function pointer with function attributes. Specifically, I have a loadable module with a struct containing lots of function pointers, and a program that dlopens that module to import a pointer to the struct to make function calls through it, and I'd like to aid static analysis by
[20:10:16] <amdj> putting some function attributes on them (like malloc, returns_nonnull, noreturn, etc). This works fine for the declarations of the functions (in the module), but seems to be ignored when put onto the pointer declaration. Minimal reproducer: https://bpa.st/raw/5RAQO5DAWXVYEQXMFFUYCARXDI
[20:10:24] *** Joins: strajder (~strajder@user/strajder)
[20:10:45] *** Joins: jjido (~Denis@94.4.149.217)
[20:10:56] *** Quits: Fairy97 (~Fairy@2001:464a:4992:0:f19c:dd57:d715:5dd1) (Ping timeout: 252 seconds)
[20:11:10] *** Quits: freakazoid333 (~matt@2603:9000:cf03:86c3:751f:c2d3:24b7:e2fb) (Quit: Leaving)
[20:12:54] *** Joins: bnchs___ (~bnchs@160.177.101.13)
[20:14:29] *** Joins: ferdna (~ferdna@user/ferdna)
[20:14:54] <constxd> amdj: what happens if you use a typedef?
[20:15:17] *** Quits: bnchs__ (~bnchs@105.157.19.247) (Ping timeout: 240 seconds)
[20:16:52] <amdj> Like https://bpa.st/raw/2W6NEX5J3AFUGSRBUXMZLGZCDE ? Same thing.
[20:17:07] <pragma-> what kind of dumb ass paste id is that
[20:17:08] *** Joins: geowiesnot (~user@5-51-190-244.abo.bbox.fr)
[20:18:57] *** Quits: Dotz0cat (~Dotz0cat@h161.215.213.151.dynamic.ip.windstream.net) (Ping timeout: 240 seconds)
[20:19:25] *** Quits: n8chan (~nate@108-233-125-227.lightspeed.sntcca.sbcglobal.net) (Ping timeout: 240 seconds)
[20:19:27] *** Quits: kurahaupo (~kurahaupo@115.69.27.211) (Ping timeout: 256 seconds)
[20:19:35] <pragma-> that bpa.st guy annoys me
[20:19:36] <constxd> ok im not 100% sure but i think the answer is you can't
[20:19:53] <constxd> even though it makes sense in theory
[20:21:10] <amdj> Darn.
[20:22:27] <constxd> pragma-: yes paste.pr0.tips is superior i agree
[20:22:40] *** Joins: tech_exorcist (txrcst@user/tech-exorcist/x-0447479)
[20:23:47] *** Quits: SGautam (uid286066@id-286066.ilkley.irccloud.com) (Quit: Connection closed for inactivity)
[20:24:02] <constxd> fstd: is this fbi notice a joke lol
[20:24:27] *** Joins: dfghjk (~asdfghjkl@2001:871:23a:2ac8:f39:9b2:1d80:bff4)
[20:28:05] *** Joins: FluffyMask (~masque@user/fluffymask)
[20:29:21] *** Joins: Livio (~livio@user/livio)
[20:30:01] <lfs> lol
[20:32:30] *** Joins: mpan (~mysql@user/mpan)
[20:35:03] <mpan> Hi. I wonder: why can‚Äôt `memset(array, ‚Ä¶); __asm__("" : "+m"(array));` be used to *reliably* prevent `memset` from being eliminated in gcc (as that uses gcc-specific extended asm)? Or can it, yet it‚Äôs not used?
[20:35:44] <lfs> cant u just use a no optimization flag?
[20:36:18] <mpan> Not if I do not want to keep the memset in another compilation unit that uses optimization.
[20:36:23] <apotheon> constxd: Waht FBI notice?
[20:36:25] <lfs> ok
[20:36:43] <apotheon> s/Waht/What/
[20:36:44] <lfs> apotheon: its ok to kill them they're just robots
[20:36:47] *** Quits: kts (~kts@103.73.237.33) (Ping timeout: 252 seconds)
[20:36:53] <amdj> dead-store elimination is very useful, even in the face of unwanted removal of memset. mpan you want a function specifically for the purpose, such as memset_s(3), OpenSSL's OPENSSL_cleanse(), libsodium's sodium_memzero(), etc.
[20:37:31] <mpan> amdj: thanks, but that‚Äôs not a question about existence of alternative third-party solutions. I am asking about using `memset` specifically.
[20:37:36] <apotheon> lfs: I don't know what you're talking about.
[20:37:44] <lfs> fbi
[20:38:02] <amdj> mpan: there's no guarantee it won't be removed. trying to trick the compiler into not removing it with some inline asm is hope, and hope is not a tactic.
[20:38:06] *** Joins: whupdup (~whupdup@pool-173-76-128-81.bstnma.fios.verizon.net)
[20:38:09] <lfs> its a figure of speach they're beurocrats i dont respect them
[20:38:57] <mpan> amdj: are you sure it‚Äôs not a guarantee in the code I provided? This is the subject of the question.
[20:39:40] <amdj> in the definition of your question ("can it be used to *reliably* prevent memset being eliminated"), the answer is no.
[20:40:20] *** Joins: bolovanos_ (~bolovanos@user/bolovanos)
[20:40:25] <amdj> it may work today. it may work for another 3 years. but then gcc can get smarter and see that your inline asm doesn't do anything with it, and ... eliminate it.
[20:40:34] <mpan> Again: are you sure, or is that based on heuristics ‚Äî because many other approaches do fail or have no reliable founding?
[20:41:41] <amdj> This is elaborated in https://www.usenix.org/system/files/conference/usenixsecurity17/sec17-yang.pdf alongside lots of other approaches
[20:41:53] <mpan> Well, by that logic calling an external library is not working either, as gcc may get smarter, understand what they do and eliminate them. So this is not an argument. Unlike e.g. using a cast to `volatile` in a standard-incompatible manner, which is a coincidence if it does what some expect it to do, this seems to have founding in the definition of `__asm__`.
[20:42:28] <amdj> it already eliminates such a library call today with LTO.
[20:42:49] *** Quits: magla (~gelignite@d5364c1c.access.ecotel.net) (Quit: Stay safe!)
[20:43:09] *** Quits: cadmio (~cadmio@151.35.169.24) (Quit: WeeChat 3.0)
[20:43:17] <constxd> apotheon: https://pr0.tips/
[20:43:28] <apotheon> lfs: I get that the FBI is all robots.  I just didn't get the initial references to the FBI.
[20:43:31] <apotheon> constxd: thanks
[20:43:58] *** Quits: bebyx (~Thunderbi@user/bebyx) (Ping timeout: 260 seconds)
[20:44:09] <lfs> ahh heheheheh
[20:45:30] <mpan> amdj: the article discusses a memory barrier ("memory" clobber), not "+m", which locally indicates that the array is being read.
[20:46:05] <mpan> I do not see how would anyone even suspect "memory" may work. There is nothing in the the definition of the memory clobber that would guarantee that.
[20:47:47] <amdj> oh you're right, I misremembered the paper
[20:47:59] *** Quits: geowiesnot (~user@5-51-190-244.abo.bbox.fr) (Ping timeout: 268 seconds)
[20:48:20] <mpan> Yeah. Sure, it will ensure visibility, but it will ensure visibility of a value that may already be a subject to optimization.
[20:48:23] *** Joins: Serpent7776 (~Serpent77@90-156-31-193.internetia.net.pl)
[20:48:37] *** Joins: Guest9674 (~Guest@host151.190-137-36.telecom.net.ar)
[20:48:55] <mpan> What I asked about is explicitly telling the compiler that whatever is in array may be read within `__asm__`.
[20:48:59] *** Joins: nuxil_ (~nuxil@141.195.51.213)
[20:49:08] *** Quits: nuxil (~nuxil@141.195.51.213) (Read error: Connection reset by peer)
[20:52:35] *** Quits: ashafq (~ashafq@pool-96-237-238-252.bstnma.fios.verizon.net) (Remote host closed the connection)
[20:52:55] *** Quits: joev (~joev@user/joev) (Ping timeout: 256 seconds)
[20:53:24] *** Quits: gr33n7007h (~gr33n7007@user/gr33n7007h) (Ping timeout: 240 seconds)
[20:53:58] *** Joins: joev (~joev@user/joev)
[20:54:47] *** Joins: gr33n7007h (~gr33n7007@user/gr33n7007h)
[20:55:03] *** Joins: ashafq (~ashafq@pool-96-237-238-252.bstnma.fios.verizon.net)
[20:57:25] *** Quits: jjido (~Denis@94.4.149.217) (Quit: My MacBook Air has gone to sleep. ZZZzzz‚Ä¶)
[20:57:43] <pragma-> mpan: in the past, marking the object with the volatile qualifier used to do the trick. these days the various compilers employ dark magicks to do optimization and I have no clue.
[20:57:54] *** flooded is now known as _flood
[20:58:36] *** Quits: TonyStone (~TonyStone@cpe-74-76-51-197.nycap.res.rr.com) (Ping timeout: 240 seconds)
[20:59:55] *** Joins: pert (~pert@fsf/member/pert)
[21:00:04] <pragma-> i'm still annoyed that gcc removed the options to turn off dead-code-elimination
[21:00:36] <pragma-> for a while, the options still existed but did nothing.
[21:01:45] *** Joins: bebyx (~Thunderbi@user/bebyx)
[21:01:57] *** Quits: Livio (~livio@user/livio) (Ping timeout: 256 seconds)
[21:02:16] *** Quits: Sadale (~Sadale@user/sadale) (Quit: tawa pona!)
[21:02:30] *** Joins: Sadale (~Sadale@user/sadale)
[21:04:07] *** Joins: Akuli (~Akuli@82-203-160-97.bb.dnainternet.fi)
[21:04:50] *** Joins: Hercules (~Hercules@user/hercules)
[21:04:56] <rcf> mpan: this is actually how explicit_bzero() is implemented in, say, musl.
[21:05:00] *** Quits: joev (~joev@user/joev) (Ping timeout: 240 seconds)
[21:06:17] *** Joins: joev (~joev@user/joev)
[21:07:13] *** Joins: kts (~kts@103.73.237.18)
[21:08:45] *** Quits: constxd (~brad@142.134.79.191) (Ping timeout: 256 seconds)
[21:09:11] *** Joins: CatCow (~wtf_over@c-73-96-109-206.hsd1.or.comcast.net)
[21:09:24] *** Quits: dfghjk (~asdfghjkl@2001:871:23a:2ac8:f39:9b2:1d80:bff4) (Remote host closed the connection)
[21:09:42] *** Joins: dfghjk (~asdfghjkl@2001:871:23a:2ac8:88e9:e94c:848a:6b8f)
[21:12:56] <mpan> rcf: oh. :o
[21:13:51] <rcf> mpan: void explicit_bzero(void *d, size_t n) { d = memset(d, 0, n); __asm__ __volatile__ ("": : "r"(d) : "memory"); }
[21:15:06] *** Joins: TonyStone (~TonyStone@cpe-74-76-51-197.nycap.res.rr.com)
[21:15:11] *** Quits: pretty_dumm_guy (trottel@gateway/vpn/protonvpn/prettydummguy/x-88029655) (Quit: WeeChat 3.4)
[21:18:55] *** Joins: pretty_dumm_guy (trottel@gateway/vpn/protonvpn/prettydummguy/x-88029655)
[21:18:56] <rcf> mpan: glibc is almost the same, but with asm volatile ("" ::: "memory"); instead.
[21:20:29] <mpan> Well, "memory" will IMO not work. As in: I do not see the foundation for it to work. But yeah, the first `explicit_bzero` implementation seems to use the same idea.
[21:21:46] *** Quits: TonyStone (~TonyStone@cpe-74-76-51-197.nycap.res.rr.com) (Ping timeout: 260 seconds)
[21:22:17] *** Quits: skapata (~Skapata@user/skapata) (Ping timeout: 240 seconds)
[21:23:16] *** Joins: Rounin (~david@84.212.130.215)
[21:23:45] *** Joins: geowiesnot (~user@5-51-190-244.abo.bbox.fr)
[21:23:47] <rcf> It's good enough for GNU work apparently
[21:23:51] <mpan> Also note that I am not limiting that to erasing data. Just storing in memory, for whatever definition of memory we may use here (let‚Äôs ignore caches etc. for now). Even if it is read after, which may also be eliminated.
[21:24:09] *** Joins: pucara (~i@host14.181-1-101.telecom.net.ar)
[21:24:13] <rcf> Indeed, the approach may be applied elsewhere.
[21:24:27] *** Quits: mrus (~mrus@2001:19f0:5:1535:5400:3ff:fe7d:10ae) (Quit: Surfing the great wave off Kanagawa)
[21:24:32] <rcf> This is just a case where it is done by the C library itself.
[21:24:49] <rcf> So you can at least blame them for trying to rely on this behavior.
[21:27:02] *** Joins: mcleuder_ (~mcleuder@gateway/tor-sasl/mcleuder)
[21:27:55] *** Quits: mcleuder (~mcleuder@gateway/tor-sasl/mcleuder) (Ping timeout: 240 seconds)
[21:28:45] *** Quits: trampel (~trampel@2601:602:9a00:49d:49f1:a40f:2b6c:577a) (Quit: Leaving)
[21:28:47] <chiselfuse> zwr: you still into that checksum algo and deferred carry optimization?
[21:28:57] *** Quits: orestarod (~orestarod@2a02:2149:8b20:700:2b9d:7f86:7169:61c0) (Quit: Leaving)
[21:29:52] *** Quits: mikoto-chan (~mikoto-ch@213.177.151.239) (Ping timeout: 272 seconds)
[21:30:14] *** Joins: mikoto-chan (~mikoto-ch@213.177.151.239)
[21:32:21] *** Joins: Juliu (~Juliu@2a02:810b:c640:3ec0:350b:c716:fa56:ddbc)
[21:35:48] *** Quits: wroathe (~wroathe@user/wroathe) (Ping timeout: 240 seconds)
[21:39:30] *** Joins: Guest37 (~Guest37@host-92-4-196-248.as13285.net)
[21:39:37] *** Quits: mikoto-chan (~mikoto-ch@213.177.151.239) (Ping timeout: 256 seconds)
[21:40:23] *** Joins: zsoltiv_ (~zsoltiv@fibhost-67-12-35.fibernet.hu)
[21:41:08] *** Joins: Narrat (~omnius@p200300df5f126b5206ea56fffe2e7cdc.dip0.t-ipconnect.de)
[21:41:16] *** Quits: alch (~alch@151.36.176.226) (Ping timeout: 272 seconds)
[21:42:46] *** Joins: alch (~alch@151.38.177.139)
[21:43:07] *** Joins: mikoto-chan (~mikoto-ch@213.177.151.239)
[21:45:57] *** Joins: seninha (~chatzilla@user/seninha)
[21:47:28] *** Joins: skapata (~Skapata@2804:14c:87b0:9d2e:dd10:779a:8f5a:8f40)
[21:47:28] *** Quits: skapata (~Skapata@2804:14c:87b0:9d2e:dd10:779a:8f5a:8f40) (Changing host)
[21:47:28] *** Joins: skapata (~Skapata@user/skapata)
[21:47:50] *** Joins: eddybilley (~freddieti@77-165-15-254.fixed.kpn.net)
[21:50:20] *** Joins: tiotags (~tiotags@user/tiotags)
[21:51:56] *** Quits: eddybilley (~freddieti@77-165-15-254.fixed.kpn.net) (Ping timeout: 250 seconds)
[21:54:08] *** Joins: goodfella (~archer@user/tessio)
[21:54:36] *** Quits: CodePoint (~CodePoint@2600:1700:3070:3790:3df8:cd30:3e5c:fc25) (Quit: CodePoint)
[21:54:52] *** Quits: freep (~freepppp@193.92.35.32.dsl.dyn.forthnet.gr) (Remote host closed the connection)
[21:55:17] *** Joins: freep (~freepppp@193.92.35.32.dsl.dyn.forthnet.gr)
[21:57:09] *** Parts: mpan (~mysql@user/mpan) ()
[21:57:47] *** Quits: sokan (~sokan@2a02:587:9e19:4700:227:eff:fe16:865d) (Quit: Reality.is.a.lie)
[21:57:54] *** Quits: dfghjk (~asdfghjkl@2001:871:23a:2ac8:88e9:e94c:848a:6b8f) (Remote host closed the connection)
[21:58:12] *** Joins: dfghjk (~asdfghjkl@2001:871:23a:2ac8:8c40:dcd:5770:7609)
[22:00:02] *** Joins: sokan (~sokan@2a02:587:9e19:4700:227:eff:fe16:865d)
[22:00:09] *** Joins: cthi (~cthi@097-082-138-151.res.spectrum.com)
[22:00:30] *** Quits: dfghjk (~asdfghjkl@2001:871:23a:2ac8:8c40:dcd:5770:7609) (Client Quit)
[22:01:39] <pert> I want to test that my code handles all possible errors reasonably and cleans up properly on every code path, say to make sure that I don't double-free when bailing out. It would be nice if there was a tool, wrapper, or library that would make malloc() and other functions spontaneously fail.
[22:02:03] <pert> Does anyone know of a tool or other means to do what I'm looking for, or should I invent my own solution?
[22:02:24] *** mcleuder_ is now known as mcleuder
[22:02:32] <goodfella> Valgrind
[22:02:51] *** Joins: singularity00 (~singulari@236.lan-hi1-2.static.rozabg.com)
[22:03:04] *** Joins: magla (~gelignite@d5364c1c.access.ecotel.net)
[22:03:21] <pert> Which Valgrind tool? Memcheck checks for memory errors, but I want to ensure there are no errors in code paths that are rarely taken in practice (e.g. because malloc() on GNU/Linux is said to never return NULL anyway)
[22:03:40] <amdj> clang has a static analyzer that can detect these
[22:04:58] <amdj> https://clang-analyzer.llvm.org/scan-build.html
[22:04:59] <candide> Title of amdj's link: scan-build: running the analyzer from the command line
[22:05:10] *** Quits: geowiesnot (~user@5-51-190-244.abo.bbox.fr) (Ping timeout: 260 seconds)
[22:05:50] <pert> I mean, with very few exceptions, POSIX says any function is allowed to fail for any reason. I want to make sure I handle all of those correctly and get total code coverage of every scenario.
[22:06:02] <goodfella> pert there is command line utility called valgrind which tells you if you have leaks and all sorts of memory problems
[22:06:26] <amdj> goodfella: that's not what pert is asking about
[22:06:47] <pert> goodfella: Valgrind only catches memory problems for code paths that are taken. Since malloc() never returns NULL on many systems, how am I to test that I handle malloc() returning NULL correctly?
[22:07:31] <goodfella> ok i stand corrected
[22:08:04] <pert> If what I'm looking for doesn't exist, I suppose I could make a small library with all of the functions my program uses and make them return failing return values randomly. My program is rather small, so that wouldn't be too hard. I might could even get away with an LD_PRELOAD trick, no recompiling necessary
[22:08:13] *** Quits: skapata (~Skapata@user/skapata) (Ping timeout: 240 seconds)
[22:09:37] *** Joins: jjido (~Denis@2a02:c7f:5c91:e700:d0d7:ba7d:5a5a:630f)
[22:09:49] *** Joins: mrusme (~mrus@gateway/tor-sasl/mrus)
[22:09:56] <amdj> pert: https://bpa.st/raw/HQYAJLB57SFYPAIF7KAKSYUSF4
[22:10:34] *** Quits: mrusme (~mrus@gateway/tor-sasl/mrus) (Client Quit)
[22:10:36] *** Quits: paddymahoney (~paddymaho@cpe9050ca207f83-cm9050ca207f80.cpe.net.cable.rogers.com) (Ping timeout: 240 seconds)
[22:11:40] <amdj> pert: https://i.imgur.com/WnreRoK.png
[22:12:23] <pert> I'm sure I'm not the first person to want to test in this way. I really like scan-build, but it doesn't provide a guarantee, whereas literally testing every code path at runtime is about as well as one can do
[22:13:40] <amdj> if you want the LD_PRELOAD injected failures testing, you want something like  https://github.com/ralight/mallocfail
[22:13:41] <candide> Title of amdj's link: GitHub - ralight/mallocfail: Malloc failure testing
[22:15:09] <pert> amdj: yes, that looks just like what I'm looking for! maybe someday I'll get around to writing such a library that covers the whole ISO C/POSIX standard library, not just the memory allocation functions; that'd be a neat project
[22:17:49] *** Quits: cthi (~cthi@097-082-138-151.res.spectrum.com) (Quit: leaving)
[22:17:55] *** Quits: slidercrank (~slidercra@user/slidercrank) (Ping timeout: 256 seconds)
[22:19:24] *** Joins: lukedashjr (~luke-jr@user/luke-jr)
[22:21:54] *** Joins: cthi (~cthi@207.246.81.96)
[22:22:06] *** Joins: mrus (~mrus@gateway/tor-sasl/mrus)
[22:22:10] *** Joins: skapata (~Skapata@user/skapata)
[22:22:27] *** Quits: luke-jr (~luke-jr@user/luke-jr) (Ping timeout: 272 seconds)
[22:22:30] *** lukedashjr is now known as luke-jr
[22:24:21] *** Joins: Atque (~Atque@user/atque)
[22:25:30] *** Quits: Guest9674 (~Guest@host151.190-137-36.telecom.net.ar) (Remote host closed the connection)
[22:26:17] *** Quits: anshupatia (uid29854@id-29854.helmsley.irccloud.com) (Quit: Connection closed for inactivity)
[22:26:35] <Xeroine> I understand that in "int *p = &x" p is a pointer but is it also correct to call &x a pointer?
[22:27:17] <NRK> basically yes
[22:27:31] <Xeroine> oh
[22:27:34] <lfs> not not
[22:27:42] <NRK> &x is "address-of x"
[22:28:17] <fizzie> ,cc int x; ptype(&x); // looks like a pointer to me
[22:28:20] <candide> fizzie:  &x = int *
[22:28:20] <NRK> & is the "address-of" operator
[22:28:25] <masoudd> ,english int x; int *p = &x;
[22:28:26] <candide> masoudd: Declare `x` as an int and then declare `p` as a pointer to int initialized to the address of `x`.
[22:28:50] <Xeroine> like for example I often see when people call a function like this "func(&x, &y)" they say they are passing two pointers instead of two addresses
[22:29:14] *** Joins: mcleuder_ (~mcleuder@gateway/tor-sasl/mcleuder)
[22:29:48] <NRK> &x is both a "pointer to x" and "address-of x"
[22:30:10] <fizzie> It's a pointer-typed value that points at the address of x, you could say.
[22:30:18] *** Quits: Haxxa (~Haxxa@203-123-96-204.ip4.superloop.com) (Remote host closed the connection)
[22:30:19] <Xeroine> alright thanks then
[22:30:44] <fizzie> (C11 6.5.3.2p3: "The unary `&` operator yields the address of its operand. If the operand has type '/type/', the result has type 'pointer to /type/'.")
[22:31:15] *** Quits: mcleuder (~mcleuder@gateway/tor-sasl/mcleuder) (Ping timeout: 240 seconds)
[22:31:28] *** Joins: TonyStone (~TonyStone@cpe-74-76-51-197.nycap.res.rr.com)
[22:31:34] *** Joins: SGautam (uid286066@id-286066.ilkley.irccloud.com)
[22:31:38] *** Joins: Haxxa (~Haxxa@203-123-96-204.ip4.superloop.com)
[22:31:57] *** Joins: lukedashjr (~luke-jr@user/luke-jr)
[22:32:40] *** Joins: flooded (flooded@gateway/vpn/protonvpn/flood/x-43489060)
[22:33:50] <goodfella> Xeroine: may i ask what practical implication that have ?
[22:34:05] *** Joins: geowiesnot (~user@5-51-190-244.abo.bbox.fr)
[22:34:09] <goodfella> wether &x is a pointer or not ?
[22:34:21] <Xeroine> goodfella: none I guess, I just wanted to know
[22:34:36] *** Quits: _flood (flooded@gateway/vpn/protonvpn/flood/x-43489060) (Ping timeout: 240 seconds)
[22:34:37] *** Quits: caveman (~caveman@gateway/tor-sasl/caveman) (Remote host closed the connection)
[22:35:01] *** Quits: luke-jr (~luke-jr@user/luke-jr) (Ping timeout: 240 seconds)
[22:35:02] *** lukedashjr is now known as luke-jr
[22:35:19] *** Joins: caveman (~caveman@gateway/tor-sasl/caveman)
[22:35:34] *** Joins: CodePoint (~CodePoint@2600:1700:3070:3790:3df8:cd30:3e5c:fc25)
[22:36:55] *** Quits: mrus (~mrus@gateway/tor-sasl/mrus) (Ping timeout: 240 seconds)
[22:37:16] *** Joins: mrus (~mrus@gateway/tor-sasl/mrus)
[22:40:16] *** Quits: Atque (~Atque@user/atque) (Quit: ...)
[22:43:37] *** Joins: malina (~malina@user/malina)
[22:45:03] *** Quits: Haxxa (~Haxxa@203-123-96-204.ip4.superloop.com) (Quit: Haxxa flies away.)
[22:45:40] *** Joins: test_ (flooded@gateway/vpn/protonvpn/flood/x-43489060)
[22:45:40] *** Joins: root____ (~root@5.2.79.79)
[22:45:46] <root____> join #c-offtopic
[22:45:55] *** Quits: flooded (flooded@gateway/vpn/protonvpn/flood/x-43489060) (Ping timeout: 256 seconds)
[22:47:31] *** Joins: rgrinberg (~textual@2806:101e:7:70b6:cdbf:b436:9743:fee8)
[22:47:50] *** Joins: Haxxa (~Haxxa@203-123-96-204.ip4.superloop.com)
[22:49:25] *** Quits: lfs (~lfs@5.2.79.79) (Quit: Lost terminal)
[22:50:51] *** Joins: Betal (~Betal@user/betal)
[22:51:24] *** Quits: cthi (~cthi@207.246.81.96) (Quit: leaving)
[22:53:40] *** Joins: orestarod (~orestarod@2a02:2149:8b20:700:2b9d:7f86:7169:61c0)
[22:54:35] <root____> HEY
[22:54:46] <root____> check my ip
[22:54:48] <root____> all glistening
[22:55:17] *** imm__ is now known as imm_
[22:57:17] <goodfella> a true hacker i presume
[22:59:26] *** Joins: wroathe (~wroathe@96-88-30-181-static.hfc.comcastbusiness.net)
[22:59:26] *** Quits: wroathe (~wroathe@96-88-30-181-static.hfc.comcastbusiness.net) (Changing host)
[22:59:26] *** Joins: wroathe (~wroathe@user/wroathe)
[22:59:49] <root____> xorl %eax %eax
[22:59:51] <root____> pushl %eax
[23:00:20] <root____> movl 0x75c21315 %ebx
[23:00:40] <root____> notice no zero bytes in the adress im moving to ebx
[23:01:10] <root____> in aleph0ne we trust
[23:01:10] *** ChanServ sets mode: +o Xgc
[23:01:17] *** Quits: Juliu (~Juliu@2a02:810b:c640:3ec0:350b:c716:fa56:ddbc) (Quit: Quit)
[23:01:21] *** root____ was kicked by Xgc (root____)
[23:01:48] *** Joins: unlink2 (~unlink@p200300ebcf3e190012b7094ba83de7f3.dip0.t-ipconnect.de)
[23:01:54] *** Joins: root____ (~root@5.2.79.79)
[23:01:57] *** Joins: Andrm (~Andrm@190.244.62.157)
[23:02:46] <root____> but im logged on as root on irssi and like years old build of debian if u can hack it its urs
[23:02:59] *** Xgc sets mode: +q *!*root@5.2.79.79
[23:03:00] *** Quits: mahmutov (~mahmutov@5.176.45.225) (Ping timeout: 240 seconds)
[23:03:44] <goodfella> Xgc: why ban ?
[23:03:59] *** Joins: Atque (~Atque@user/atque)
[23:04:38] <Xgc> goodfella: You must be new to irc.  That's not a ban.  Feel free to msg me if you don't understand.
[23:05:13] <bnchs___> thats a mute
[23:05:19] <bnchs___> he's still here
[23:06:09] <sham1> But it says "ban" right here /s
[23:06:41] <Xgc> sham1: Probably just a bug in your client.
[23:07:10] <sham1> Err, I first read that as +b
[23:07:26] *** Quits: Haxxa (~Haxxa@203-123-96-204.ip4.superloop.com) (Ping timeout: 245 seconds)
[23:07:38] <fizzie> Are you sure you're just not upside-down? After all, b is just a rotated q.
[23:07:51] <sham1> Well, I'm not in Australia
[23:08:14] <Xgc> Maybe I am?
[23:08:43] *** Joins: Haxxa (~Haxxa@203-123-96-204.ip4.superloop.com)
[23:08:49] <goodfella> i like this channel more and more by the minute
[23:11:11] *** Quits: cosimone (~user@2001:b07:ae5:db26:c24a:d20:4d91:1e20) (Remote host closed the connection)
[23:11:25] *** Joins: cosimone (~user@2001:b07:ae5:db26:c24a:d20:4d91:1e20)
[23:13:03] *** ChanServ sets mode: -o Xgc
[23:14:45] *** Quits: TonyStone (~TonyStone@cpe-74-76-51-197.nycap.res.rr.com) (Ping timeout: 268 seconds)
[23:15:20] *** Joins: TonyStone (~TonyStone@cpe-74-76-51-197.nycap.res.rr.com)
[23:16:22] *** Quits: karakedi (~eAC53C340@user/karakedi) (Remote host closed the connection)
[23:17:30] *** Quits: Hercules (~Hercules@user/hercules) (Quit: Leaving)
[23:19:39] *** Quits: geowiesnot (~user@5-51-190-244.abo.bbox.fr) (Ping timeout: 256 seconds)
[23:20:13] *** Quits: Lord_of_Life (~Lord@user/lord-of-life/x-2819915) (Ping timeout: 256 seconds)
[23:20:57] *** Quits: wroathe (~wroathe@user/wroathe) (Ping timeout: 250 seconds)
[23:20:58] *** Joins: Lord_of_Life (~Lord@user/lord-of-life/x-2819915)
[23:21:19] *** Joins: Guest8574 (~Guest@181.95.237.11)
[23:22:08] *** Quits: LuKaRo (~LuKaRo@p57b157e5.dip0.t-ipconnect.de) (Quit: ZNC 1.8.2 - https://znc.in)
[23:22:34] *** Quits: mcleuder_ (~mcleuder@gateway/tor-sasl/mcleuder) (Quit: WeeChat 3.3)
[23:23:59] *** Quits: kubrickdave (~kubrickda@80-121-15-46.adsl.highway.telekom.at) (Quit: ZNC 1.7.2+deb3 - https://znc.in)
[23:24:12] *** Joins: kubrickdave (~kubrickda@80-121-15-46.adsl.highway.telekom.at)
[23:25:34] *** Joins: karakedi (~eAC53C340@user/karakedi)
[23:26:14] *** Joins: kitsunenokenja (~kitsunech@68.91.220.96)
[23:26:14] *** Joins: wroathe (~wroathe@96-88-30-181-static.hfc.comcastbusiness.net)
[23:26:14] *** Quits: wroathe (~wroathe@96-88-30-181-static.hfc.comcastbusiness.net) (Changing host)
[23:26:14] *** Joins: wroathe (~wroathe@user/wroathe)
[23:29:25] *** Quits: cust (amaama@2607:f2c0:f00f:2500::3) (Remote host closed the connection)
[23:31:36] *** Quits: fruitypunk (~user@2a01:7c8:aaaa:12:5054:ff:fe69:1df9) (Ping timeout: 250 seconds)
[23:34:08] *** Quits: aradesh (~aradesh@user/aradesh) (Quit: WeeChat 1.9.1)
[23:34:40] *** Joins: Cleverness (~Clevernes@pool-108-54-152-186.nycmny.fios.verizon.net)
[23:36:16] *** Joins: korg815 (~korg815@user/korg815)
[23:43:16] *** Quits: rgrinberg (~textual@2806:101e:7:70b6:cdbf:b436:9743:fee8) (Quit: My MacBook has gone to sleep. ZZZzzz‚Ä¶)
[23:43:54] *** Joins: aradesh (~aradesh@user/aradesh)
[23:45:30] *** Quits: mrig (~mrig@user/mrig) (Quit: WeeChat 2.8)
[23:49:44] *** Joins: constxd (~brad@142.134.79.191)
[23:51:35] *** Joins: mrig (~mrig@user/mrig)
[23:55:03] *** Joins: d_low (~dlow@107-210-161-84.lightspeed.tukrga.sbcglobal.net)
[23:55:24] *** Quits: cherrry9 (~jan@ded246.neoplus.adsl.tpnet.pl) (Ping timeout: 240 seconds)
[23:57:22] *** Joins: Techcable (~Techcable@168.235.93.147)
[23:58:44] *** Joins: LuKaRo (~LuKaRo@p57b157e5.dip0.t-ipconnect.de)
[23:59:29] *** Joins: cthi (~cthi@097-082-138-151.res.spectrum.com)
[23:59:43] <chiselfuse> ,cc uint8_t x = 'A'; printf("%d\n", (int)(x << 8));
[23:59:45] <candide> chiselfuse: 16640
[23:59:45] *** Joins: phrosty (~phrosty@c-73-225-175-19.hsd1.wa.comcast.net)
