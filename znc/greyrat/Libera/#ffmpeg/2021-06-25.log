[00:02:33] *** Quits: zeromind (~zeromind@a.eroforce.one) (Remote host closed the connection)
[00:08:16] *** Quits: nitroxis_ (n@nxs.re) (Remote host closed the connection)
[00:10:27] *** Joins: HumanG33k (~HumanG33k@2a01:e0a:5b9:7840:215:c5ff:fe68:fb04)
[00:11:01] <znf> what's a fluent ffmpeg
[00:11:15] <znf> ah, nodejs stuff
[00:12:32] *** Quits: HumanG33k (~HumanG33k@2a01:e0a:5b9:7840:215:c5ff:fe68:fb04) (Client Quit)
[00:13:07] <JEEB> fltrz: basically libavformat for doing I/O and reading coded packets from media
[00:13:15] <JEEB> libavcodec for decoding or encoding
[00:13:29] <JEEB> you can take a look at doc/examples/transcoding
[00:13:38] <JEEB> and then limit yourself to only reading input and decoding
[00:13:58] <JEEB> that gets you AVFrames which then contain the pix_fmt, the color related metadata etc
[00:14:59] <fltrz> thanks a bunch
[00:15:16] <JEEB> also usually it's quite useful to search for "site:ffmpeg.org doxygen trunk KEYWORD"
[00:15:20] <JEEB> like AVFrame or AVPacket etc
[00:22:26] *** Joins: linjie (~linjie@58.247.210.251)
[00:23:55] *** Joins: nitroxis (n@nxs.re)
[00:26:52] *** Quits: Blacker47 (~Blacker47@user/blacker47) (Quit: Life is short. Get a V.90 modem fast!)
[00:26:59] *** Quits: linjie (~linjie@58.247.210.251) (Ping timeout: 256 seconds)
[00:36:29] *** Quits: luni-4 (uid453292@id-453292.charlton.irccloud.com) (Quit: Connection closed for inactivity)
[00:38:18] *** Parts: Helmholtz1 (~Helmholtz@user/helmholtz) (Leaving)
[00:43:42] *** Joins: Tosin (~Tosin@097-085-185-009.biz.spectrum.com)
[00:44:45] *** Joins: zeromind (~zeromind@a.eroforce.one)
[00:46:33] *** Joins: stkrdknmibalz (~test@rrcs-75-87-43-226.sw.biz.rr.com)
[00:47:16] <Tosin> Hi all, so I've been doing some development in C++ with FFMPEG's filtering_audio file, does anyone know if its possible to pass a stream of audio to open rather than passing a file location?
[00:48:57] <JEEB> you can do whatever the heck you want with the data of the AVFrames after you've decoded&filtered the audio
[00:49:00] <JEEB> :)
[00:49:19] <JEEB> if you just want to write via custom I/O whatever audio format you're already poking, just make custom AVIO callbacks
[00:49:32] <JEEB> if you just want to dump the AVFrame buffers to some API, feel free
[00:53:57] <Tosin> My apologies but I'm a little confused as to what you mean. Suppose I have the variable, "const * filename = input.wav". Instead of passing passing filename to the open_input_file() function, how would I pass in just the frames of the audio file?
[00:54:42] <JEEB> you're probably confused because you asked something very vague and you got a very vague response along the lines of "yes"
[00:55:19] <Tosin> Lol, you're right
[00:55:35] <Tosin> My last message is pretty much what I'm trying to implement
[00:56:13] <JEEB> if all you want is that you do exactly what you're doing atm, but instead of having libavformat open a file, you want to just write to something custom
[00:56:22] <JEEB> then you make a custom AVIO context
[00:56:31] <JEEB> with your own write function callback
[00:56:50] <JEEB> then libavformat will call that function when it wants to write something
[00:57:31] <JEEB> you really haven't told what exactly you need, nor whether you need FFmpeg's APIs after receiving the filtered AVFrames' data
[00:58:38] <Tosin> Yes I will be needing FFMPEG's APIs, after running opening the audio I want to run an audio filter on it
[00:59:08] <JEEB> "after receiving the filtered AVFrames' data"
[00:59:24] <JEEB> I think it's best if you just explain wtf you are doing right now
[00:59:28] <JEEB> and what you want to do
[01:02:32] <JEEB> fltrz: that is image processing after the video has been decoded
[01:02:59] <JEEB> if some conversion is supposed to be bitexact it is specified, but in most cases you just get matrices etc
[01:03:00] <Tosin> 1.Retrive an audio file from a cloud 2. Pass the audio into the C++ program 3. Store the frames of the audio file into the format context 4. Run an audio filter on it that gives back meta data 5. Return the metadata the filter edits as a string
[01:04:01] <fltrz> JEEB, thanks
[01:04:45] <fltrz> its that I never know if my question is devel or not, precisely because I don't know if its "in the specs" or open for interpretation by downstream user
[01:04:48] *** Quits: Flabb (~Flabb@89.169.84.117) (Remote host closed the connection)
[01:05:16] <JEEB> fltrz: you're in general talking about API usage and not development of FFmpeg itself
[01:05:32] <JEEB> anyways, not sure if you're planning on doing CPU or GPU based stuff
[01:05:50] <JEEB> but for CPU based and that can output float is zimg, which is usable in FFmpeg through the zscale filter
[01:05:59] <fltrz> CPU, SfM, Structure from motion, convert video to to textured mesh
[01:06:33] <fltrz> I don't want to throw away the "boundary imperceptible to consumer media user"
[01:07:02] *** Quits: Vonter (~Vonter@user/vonter) (Ping timeout: 258 seconds)
[01:07:08] *** Quits: omegatron (~some@p5b056bc7.dip0.t-ipconnect.de) (Quit: What happened? You quit!)
[01:07:26] <fltrz> also, for fitting / differentiation / RM-AD, its dramatic to have neighbouring exactly identical values, since the gradient disappears, and with gamma tables that stuff happens
[01:07:28] <JEEB> basically if you don't want to implement the stuff yourself you can either utilize the zscale filter, or just utilize the zimg library yourself
[01:07:49] <fltrz> I'm afraid I have to implement the stuff myself
[01:08:13] <JEEB> if you just need correct color conversions and float output of that, then I wouldn't NIH it necessarily
[01:08:25] <JEEB> since you can get linear RGB, float
[01:08:28] <JEEB> out of zimg
[01:08:36] <fltrz> but is zimg differentiable?
[01:08:55] <JEEB> is that part of handling the image from YCbCr to RGB?
[01:09:26] <fltrz> I fear Ill have to work on yuvj420p, and study the color transforms and interpolations that apply to the format of my video
[01:10:23] <fltrz> nearly all SfM assumes a folder of pictures in png
[01:10:47] <fltrz> so the others are throwing away the rounding errors
[01:11:08] <JEEB> well, you mentioned conversion from YCbCr to RGB, and that is pretty standard as long as you utilize something that can provide you float
[01:11:35] <JEEB> for CPU there's zimg/zscale filter, for GPU there's libplacebo
[01:11:46] <JEEB> those two can provide you that standard capability
[01:11:57] <JEEB> then you can focus on the custom bits you need to do on that RGB
[01:12:25] <fltrz> right but those pretty standard conversions use some *expression* to interpolate, color transform, gamma compress,... so I need that in functional form for differentiation. I can't accept an output value without gradients
[01:13:34] <JEEB> I am still not following you. so if you already have a library that does something in floating point space to bring you to the color space you require (be it linear or sRGB transfer function)
[01:13:47] <JEEB> then why do you need to reinvent that part of it?
[01:14:26] <JEEB> or is it a mistake that since you mentioned earlier RGB that you don't actually require RGB?
[01:14:37] <fltrz> not reinvent, just convert it to a differentiable function, for reverse mode automatic differentiation
[01:15:15] <JEEB> I am still not following you, I thought the image converted to sRGB (be it linear or not) is the input data you wanted?
[01:16:10] <fltrz> I need to know how to do it, without delegation, if I know how to do it, then I can construct the mathematical expression that does it, that expression can be differentiated
[01:16:22] <fltrz> can you differentiate gcd(x,y)?
[01:16:52] <JEEB> ok, I clearly don't understand what differentiation means, but it seemed to me like you wanted floating point RGB as your input
[01:16:59] <JEEB> (as long as the conversion to it was done in floating point)
[01:17:08] <JEEB> (and the actual RGB was floating point)
[01:17:08] <fltrz> differentiation as in the opposite of integration
[01:17:54] <fltrz> I understand that is what it seemed like, because I am trying to find out how exactly this is done
[01:18:01] *** Quits: fkaa (~fkaa@81-226-20-99-no256.tbcn.telia.com) (Remote host closed the connection)
[01:18:18] <fltrz> which makes others think Im trying to reinvent the wheel, im really trying to make a rounder wheel
[01:20:01] <JEEB> basically if you have a piece of code that wants RGB as input, then I don't see the reason to not utilize something that provides you a high precision result of that, that's just what I'm getting confused at
[01:20:22] <JEEB> but if you want to look into it, I'm not sure which is better to look at - zimg or libplacebo
[01:20:28] <JEEB> both should be doing things Correctly
[01:20:37] <fltrz> because I'm architecturing my own piece of code that takes a differentiable RGB value
[01:21:08] *** Joins: stevenliu (~stevenliu@ffmpeg/developer/stevenliu)
[01:21:12] <haasn> if you're fine with GPU work you can get gradients out of the libplacebo shaders
[01:21:26] <haasn> it won't be quite trivial but probably a decent starting point
[01:21:28] <JEEB> I hope you understand what he's meaning better tha nI do :)
[01:21:30] *** Quits: stevenliu (~stevenliu@ffmpeg/developer/stevenliu) (Remote host closed the connection)
[01:21:32] <haasn> that said libplacebo doesn't support yuvj420p afaict
[01:21:39] <haasn> (I forgot what yuvj420p is exactly)
[01:21:42] <JEEB> that's just full range planar YCbCr
[01:21:48] <haasn> oh, so jpeg?
[01:21:54] <JEEB> yea, the legacy pix fmts
[01:21:56] <haasn> it's not like packed shit
[01:21:58] <haasn> yeah okay
[01:22:05] <JEEB> it's just from before AVFrames had the range flag
[01:22:05] <fltrz> haasn, I assume those "gradients" are really differences with neighbouring pixels instead of the gradients of the interpolation kernels
[01:22:28] <haasn> fltrz: oh, yes; what kind of interpolation are you looking for?
[01:22:47] <haasn> bicubic and gaussian should be very differentiable right?
[01:22:52] <haasn> bilinear probably not so much?
[01:23:02] <haasn> (I have no clue)
[01:23:23] <fltrz> Im assuming bilinear will be fine, Im just not clear on the proper order, interpolate then color convert or first color convert, then interpolate?
[01:23:25] <haasn> and yeah you're probably better off doing the interpolation yourself in that case
[01:23:35] <haasn> interpolate then color convert
[01:23:45] <JEEB> yea, since 4:2:0 YCbCr has a single sample for 2x2 area
[01:23:48] <JEEB> for the chroma
[01:23:52] <JEEB> luma is full-res
[01:24:01] <haasn> you need the luma and chroma cosited so you can apply the 3x3 to it
[01:24:19] <fltrz> haasn, I dont know what order that camera did, I need to do reverse order as camera
[01:24:24] <JEEB> (and then we get to the fun stuff like chroma location)
[01:25:03] <haasn> 22:46 <fltrz> can you differentiate gcd(x,y)? <- how is gcd defined on the reals?
[01:25:34] *** Joins: flemingjp (~flemingjp@85.210.32.88)
[01:26:06] <fltrz> haasn, that was exactly my point, and arbitrary piece of code that works on integers (often using lookup tables) is not really a differentiable function
[01:26:12] <haasn> fltrz: note: interpolation and yuv conversion are all linear operations
[01:26:20] <haasn> that means the first order derivative is constant
[01:26:28] <haasn> you don't even need to depend on the image data for it
[01:26:46] <JEEB> fltrz: I btw specifically picked things that do high precision conversins :P
[01:26:52] <fltrz> I mean derivative with respect to position
[01:26:57] <JEEB> zimg for CPU and libplacebo for GPU
[01:27:01] <JEEB> not integer-based
[01:27:12] <fltrz> an interpolation defines a luminosity function of position
[01:27:32] <flemingjp> Can ffmpeg calculate a per frame pHash?
[01:27:38] <JEEB> what is phash?
[01:27:56] <fltrz> JEEB, aha, that will be helpful then, as their expressions are presumably closer to math without integer tricks
[01:28:05] <haasn> "derivative with respect to position" this is still a constant function
[01:28:43] <haasn> bilinear(position,image) is a linear combination of `image` pixels that depends on `position`
[01:28:44] <fltrz> haasn, if all your pixels have the same value, sure
[01:29:03] <haasn> so a partial derivative of bilinear with respect to `position` is an image-sized vector that is mostly 0
[01:29:04] <flemingjp> JEEB: pHash - perceptual hash
[01:29:07] <fltrz> d/dx and d/dy of the interpolated value
[01:29:24] <haasn> that is convoluted with the image value
[01:29:51] <haasn> at least I think
[01:29:53] <haasn> let's simplify
[01:29:59] <haasn> assume your image is 1D and only has 2 pixels
[01:30:03] <fltrz> haasn, consider a color gradient, black on the left x=0 side and blue on the right x=255 side. then the gradient is 1 increment per pixel
[01:30:26] <haasn> f(x,p0,p1) = x * p1 + (x - 1) * p0
[01:30:30] <fltrz> *the d/dx
[01:30:47] <haasn> this is the bilinear equation where p0 and p1 are the image pixels and x is the 1D position on the address range [0,1]
[01:31:08] <haasn> that should be (1 - x)
[01:31:15] <haasn> so d/dx is p1 - p0
[01:31:20] <JEEB> flemingjp: so you want something like content based hashing, ok
[01:31:21] <haasn> okay that make sense
[01:31:27] <fltrz> the gradient of your function is p1 -p0
[01:31:38] <haasn> so for bilinear d/dx is basically a stepwise difference between pixels
[01:31:46] <fltrz> haasn, so you see the gradient is not 0
[01:31:56] <haasn> it's like subtracting the image from itself shifted and then nearest neighbour sampled?
[01:32:01] <fltrz> not sure why you think linear operators have no gradient
[01:32:11] <haasn> I said constant, not 0
[01:32:34] <haasn> but I was thinking d/dp0 not d/dx anyways
[01:32:43] <haasn> so nvm that comment
[01:32:51] <fltrz> haasn, thats the discrete approximation
[01:33:04] <haasn> ah, right
[01:33:12] <haasn> so you need it for a continuous kernel and a continuous signal?
[01:33:49] <fltrz> haasn, its not even constant, you just had a 2 pixel line, now do 3 pixels and youll see gradient is different between the first 2 and the last 2 pixels
[01:33:55] <fltrz> haasn, yes
[01:34:28] <flemingjp> JEEB: yeah, some method to get a hash of each frame such that I can cross reference many input images to a library of videos
[01:34:44] <haasn> (it's still constant with respect to any given pixel, no matter how many pixels you have, again my mistake was not realizing you meant with respect to position)
[01:35:27] <JEEB> flemingjp: I don't find anything specific for that, although for video etc I've generally seen people utilize ffts to find specific scenes from a set of blu-rays utilized in an edited clip, for example
[01:35:47] <fltrz> haasn, d/dx at a specific value is that value yes... constantly... imagine a slope y=x, is y constant? at x=3 y=3... "constantly"
[01:36:32] <JEEB> flemingjp: apparently there is some > "Apply arbitrary expressions to pixels in frequency domain." filter in libavfilter
[01:36:50] <JEEB> not sure if useful to you, o' course
[01:37:03] <haasn> (in my example d/dp0 of f is x and d/dp1 is (1 - x), my point was that they don't depend on the other pixels in the image)
[01:37:06] <flemingjp> JEEB: ffts - as in fourier transform?
[01:37:18] <JEEB> yea
[01:37:23] <fltrz> haasn, I think I know where your confusion comes from: a linear system is one where the filter kernel is constant (over time, over space), but not the input or output values
[01:38:29] <JEEB> flemingjp: usually I've seen people utilize full-res or downscaled fourier transforms and then compare them to the result of other frames
[01:38:43] <haasn> by 'linear' in this context I mean that f(position, image1 + image2) = f(position, image1) + f(position, image2), which implies that d/dimage is constant
[01:39:05] <fltrz> yes that means f is linear
[01:39:26] <fltrz> that doesnt say anything about d/dx
[01:39:37] <JEEB> flemingjp: I haven't implemented such "find the same/similar enough stuff" algorithms myself, though. just saw a friend do it with some FFT and picking close enough matches (if I understood the explanation well enough)
[01:39:47] <JEEB> flemingjp: in other words, I could be completely off my rocker
[01:40:06] <flemingjp> JEEB: ah cool, ill take a look at those options. Dont really want to break down a video into all its frames and process those. The accuracy only needs to narrow down to scene
[01:40:51] <haasn> continuous form of bilinear is f(x,image) = integral of triangle(u - x) · image(u) du
[01:40:54] <JEEB> my friend utilized FFmpeg for decoding the video and getting it to RGB, but then I think the fft part might have been python
[01:40:58] <haasn> triangle(u - x) is a stepwise function
[01:41:04] <JEEB> whatever that script did was hilariously cool though
[01:41:12] <JEEB> since he was able to go through a music video
[01:41:20] <JEEB> which utilized content from a TV series
[01:41:23] <fltrz> piecewise linear
[01:41:24] <JEEB> then he fed it the whole blu-rays
[01:41:41] <JEEB> and received the exact frame ranges from the blu-rays matching to what was utilized in the music video
[01:41:59] <JEEB> so he could re-build the music video based on the high quality input
[01:42:16] <flemingjp> Oh thats really cool
[01:42:24] <fltrz> haasn, I know what a specific kernel looks like, I also know how gamma compression and decompression work, I know what color space rotations are, ... what I don't know is in what order the camera did these things, so I can undo them in reverse order
[01:43:02] <haasn> depends on the color space, technically
[01:43:34] <haasn> but "normally" you go yuv420 -> yuv444 -> gamma rgb -> linear rgb
[01:44:21] <fltrz> Im more interested in the encoding at camera side, since thats what counts
[01:44:40] <haasn> it's the opposite direction there
[01:45:39] <haasn> after the usual suspects (white balance, auto leveling, tone mapping, etc.) the resulting linear rgb values get gamma-compressed, then stuffed into the yuv matrix, then subsampled to 4:2:0
[01:45:51] <fltrz> they probably did a bunch of other stuff, I tried to disable the most I can, like image rectification (its fisheye), but fisheye typically has more uneven lighting so I can imagine they did some custom "preprocessing" :S
[01:46:39] <haasn> those "usual suspects" could be anything, expect every camera to have its own proprietary algorithm
[01:46:47] <fltrz> haasn, the color values out of the sensor/adc are typically not even in linear RGB domain, see comparimetric equations
[01:47:23] <haasn> the color values out of the sensor are going to be some bayer pattern
[01:47:40] <fltrz> yes thats what I feared. but I'm thinking perhaps I can find out more about Lavf58.76.100
[01:48:15] <JEEB> that means whatever wrote that file used the FFmpeg libraries
[01:48:15] <fltrz> the encoder, so perhaps I can at least ensure myself of the ordering of the later stages
[01:48:23] <JEEB> highly unlikely to be from your camera
[01:48:23] <haasn> I somehow doubt the camera embedded lavf algorithms for debayering etc.
[01:48:31] <fltrz> aha!, so I need to find out the usual order in ffmpeg
[01:48:33] <JEEB> also that is just the writer of the MOV :P
[01:48:39] <JEEB> lavf = libavformat
[01:48:41] <haasn> so depending on what exactly your goal is you're probably stuck on every step that comes before "gamma compression"
[01:48:44] <JEEB> the I/O and format stuff
[01:48:58] <haasn> yeah that also
[01:49:06] <haasn> typically cameras actually output either JPEG or some proprietary RAW format
[01:49:29] <haasn> and it's entirely possible that the entire JPEG compression code is not ffmpeg
[01:49:29] <fltrz> ah no that was after I fixed it with ffmpeg... the encoder is
[01:49:39] <fltrz> "AVC Coding"
[01:49:40] <haasn> so you're also looking at JPEG compression artifacts in your analysis
[01:49:57] <haasn> AVC? like H.264?
[01:50:12] <fltrz> the camera records to hevc, .MOV
[01:50:24] <JEEB> yes it seems to still write that it was an aVC writer
[01:50:30] <JEEB> so some metadata clearly was not updated :P
[01:50:34] <haasn> fun
[01:50:36] <JEEB> also I recommend not fixing it with ffmpeg first
[01:50:50] <JEEB> passing through ffmpeg.c can and will possibly lose some metadata or so
[01:51:10] <haasn> so in that case after subsampling you have quantization etc. performed by some proprietary hardware encoder chip?
[01:51:23] <haasn> never mind that none of this even sounds continuous
[01:51:39] <fltrz> JEEB, that was for extracting frames, the first frame was corrupted when I extracted it with JavaCV
[01:51:54] <fltrz> I still have the original .MOV of course
[01:52:05] <JEEB> please post the ffprobe -v verbose -i INPUT of that
[01:52:14] <fltrz> after fixing with ffmpeg the broken frame could be read in JavaCV
[01:52:22] <JEEB> but yes, highly unlikely to contain exact details of what the camera did
[01:53:11] *** Quits: flemingjp (~flemingjp@85.210.32.88) (Quit: Quit)
[01:53:12] <JEEB> haasn: I would guess the ASIC encoder either takes in YCbCr or RGB or so
[01:53:26] <JEEB> and then the black box munches
[01:54:02] <fltrz> http://0x0.st/-p-k.txt < the original broken one
[01:54:03] <JEEB> but your point is correct, it's highly unlikely to know anything beyond the video metadata about basic primaries etc utilized by the encoer
[01:54:21] <JEEB> lol, I love that "AVC Coding"
[01:54:30] <JEEB> they implemented HEVC
[01:54:38] <JEEB> yet they never actually updated that string
[01:55:00] <JEEB> compatible brands even contains avc1
[01:55:01] <JEEB> lol
[01:55:17] <fltrz> is it possible that ffmpeg detects that its not hevc but avc after all?
[01:55:22] <JEEB> no
[01:55:28] <JEEB> it's HEVC
[01:55:33] <JEEB> otherwise the decoder would just barf
[01:55:50] <fltrz> btw its an AKASO V50 Pro action camera
[01:55:55] <haasn> JEEB: yeah I agree with that assessment, so realistically we have some blackbox exposure control, white balance, tone mapping algorithm that gets fed into fixed function yuv matrix and downsampling, probably done with integer math, and then that fed into the blackbox encoder chip?
[01:55:55] <JEEB> since the identifier in the container is hevc, and at that point it trusts it
[01:56:15] *** Quits: mickey (~user@user/mickey) (Quit: Ping timeout (120 seconds))
[01:56:29] <fltrz> I also agree about the black box, but I want to be sure about the proper order closest to the encoder
[01:56:31] *** Joins: mickey (~user@user/mickey)
[01:56:46] <JEEB> the only hints the encoder gave you
[01:56:47] <JEEB> > pc, bt709, left
[01:56:52] <JEEB> full range (pc)
[01:56:56] <fltrz> proper, I mean actual order
[01:57:02] <TanoMarcelo> 14
[01:57:06] <JEEB> bt709 - probably the primaries
[01:57:16] <JEEB> left - chroma sample location
[01:57:21] <haasn> I'm actually surprised it's combining full range with HEVC/AVC
[01:57:39] *** Quits: Buster_ (~Buster@buster-net.ru) (Ping timeout: 256 seconds)
[01:57:47] <JEEB> haasn: back in ye olde 2005 or so many encoders just mis-labled limited range content as full range
[01:57:56] <JEEB> old blu-rays and UMD video discs had plenty of that
[01:58:09] <JEEB> I think mobile video cameras etc nowadays might utilize full range
[01:58:19] <JEEB> although I've not verified how correct it is, just that they're flagged like that
[01:58:26] <haasn> I'm actually even more surprised it's combining full range with bt.709 and not bt.601
[01:58:33] <haasn> because JPEG is usually full range BT.601
[01:58:42] <haasn> this implies they have a dedicated full range bt.709 signal path
[01:58:45] <JEEB> video is more or less standardized around BT.709 now
[01:58:55] <haasn> I guess it makes sense to squeeze out those extra few bits if you're not gonna be quantizing a whole lot
[01:59:00] <haasn> and they probably don't need the headroom
[01:59:17] <fltrz> the firmware version is 2nd of august 2018
[02:00:16] <JEEB> but funny how that camera gives you less metadata than my mobile phone
[02:00:25] <JEEB> http://up-cat.net/p/d377ad7b
[02:00:33] <JEEB> this is a video stream from my camera
[02:00:38] <JEEB> s/camera/mobile phone/
[02:02:01] <fltrz> where do I look up the meaning of the shorter flags? like pc?
[02:02:56] <JEEB> https://lists.ffmpeg.org/doxygen/trunk/structAVFrame.html they come from this. the pc/tv color range is for example the AVColorRange thing
[02:03:04] <JEEB> which I recently rewrote the documentation of
[02:03:11] <JEEB> https://lists.ffmpeg.org/doxygen/trunk/pixfmt_8h.html#a3da0bf691418bc22c4bcbe6583ad589a
[02:04:57] <JEEB> oh wow, the windows "movies and tv" player actually follows the range flag
[02:05:22] <haasn> technically pixdesc.c would be the place to look for the strings
[02:05:33] <JEEB> yes
[02:06:27] *** Quits: demon__ (~user@41.239.50.164) (Read error: Connection reset by peer)
[02:06:51] <haasn> what the heck is AVCOL_SPC_CHROMA_DERIVED_NCL even
[02:07:19] <haasn> derived from *what* chroma system exactly
[02:07:21] <JEEB> value 12 from whatever spec that was
[02:07:30] <haasn> that enum is what defines the chroma coefficients
[02:08:33] <haasn> "Reserved for future use" :(
[02:08:37] <haasn> I clearly need a better spec
[02:08:39] <JEEB> > pixfmt: Support chroma-derived and ictcp color matrices
[02:08:44] <haasn> (staring at H.265 from 2013)
[02:08:44] <JEEB> from our friend koda
[02:08:50] <JEEB> yea, they added quite a few later
[02:09:09] <JEEB> they got enough code points that they're now in a separate spec
[02:09:25] <JEEB> > ISO/IEC 23091-2_2019 subclause 8.3.
[02:09:26] <JEEB> apparently
[02:09:45] <haasn> ISO/IEC 23091-4/ITU-T H.273.
[02:09:51] <haasn> is what AV1 links to
[02:09:58] <haasn> oh boy
[02:10:08] <JEEB> https://standards.iso.org/ittf/PubliclyAvailableStandards/c073412_ISO_IEC_23091-2_2019(E).zip
[02:10:12] <JEEB> that's -2
[02:10:19] <JEEB> thankfully not made payware by ISO/IEC
[02:10:22] <haasn> >118 CHF
[02:10:26] <haasn> thanks
[02:10:33] <JEEB> yea on that page there's a small blue thing
[02:10:43] <JEEB> which says "also available as PDF at their ITTF"
[02:10:55] <JEEB> they really try to make you pay for it :P
[02:11:06] <haasn> lol
[02:11:23] <JEEB> my opinion of ISO/IEC really went down after they started making free specs non-free
[02:11:32] <JEEB> like such small things as MP4 container
[02:11:52] <JEEB> they made new versions of it not free, even though historically it always was with some wiggling of their rules
[02:12:07] <JEEB> then a year+ earlier they silently made DASH payware too
[02:12:13] <JEEB> which I care a bit less about but it's still shitty
[02:12:27] <JEEB> I asked about it on the mp4 development mailing list and got told to complain to my local standards body
[02:12:46] <JEEB> since without complaints ISO/IEC can just f stuff up like that :s
[02:13:13] *** Quits: Volgaar (~volgaar@104.66.13.93.rev.sfr.net) (Quit: WeeChat 3.2)
[02:14:25] <JEEB> lol chromaticity-derived are just "see formulaes we wrote down a bit before"
[02:14:33] <JEEB> values 12,13 for matrix
[02:14:36] <JEEB> coefficients
[02:14:40] <haasn> https://0x1.st/H1.png
[02:14:43] <haasn> I like how their pdf links the wrong equations
[02:15:14] <haasn> yeah
[02:15:18] <haasn> so it's derived from the primaries
[02:15:20] <haasn> okay that makes sense
[02:15:58] <JEEB> that H.273 thing that you mentioned was last updated in 2016 apparently
[02:15:59] <JEEB> https://www.itu.int/rec/T-REC-H.273-201612-I/en
[02:16:10] <haasn> "chroma-derived" is such a weird name for it
[02:16:17] <haasn> I would expect "colorspace-derived" or "primaries-derived"
[02:16:21] <JEEB> yea
[02:16:23] <haasn> "chroma" is a word that, to me, implies YUV coding
[02:16:31] <haasn> I don't usually call RGB colorspaces "chroma"
[02:16:38] <haasn> chromaticity maybe
[02:16:40] <haasn> oh well
[02:16:45] <JEEB> ah no, the 2019 year is just because ISO/IEC decided to split moar
[02:16:50] <JEEB> > ITU-T H.273 (2016) was published as a twin text technically aligned with ISO/IEC 23001-8:2016 and its Amendment 1. After ISO/IEC 23001-8:2016 was split into three parts in 2019 and renumbered as ISO/IEC 23091 parts 1, 2 and 3, ITU-T H.273 remained technically aligned to ISO/IEC 23091-2:2019.
[02:17:02] <haasn> I love standards bodies
[02:17:56] *** Joins: Vonter (~Vonter@user/vonter)
[02:21:37] *** nate is now known as Guest8097
[02:21:38] *** Quits: Guest8097 (NBishop@o.apocaleaps.com) (Killed (molybdenum.libera.chat (Nickname regained by services)))
[02:21:49] *** Joins: synapt (NBishop@o.apocaleaps.com)
[02:21:59] <JEEB> haasn: looking at ISO/IEC's supah sikret document registry, there's a draft for the next version of that thing upcoming (2nd ed)
[02:22:37] <JEEB> wonder what they changed :P
[02:25:53] *** Joins: sosodank (~dankamong@199.185.175.96)
[02:26:01] <JEEB> looking at the draft the indices have kept the same
[02:26:09] <JEEB> so most likely just explanations on usage got added?
[02:26:13] <JEEB> E_NO_IDEA
[02:27:49] <JEEB> ahh
[02:27:53] <JEEB> they added chroma location explanations
[02:27:59] <JEEB> fancy red stuff
[02:28:08] <fltrz> do the ITU etc specifications provide sample test inputs and outputs such that implementors can verify their implementation?
[02:28:49] <JEEB> for video or audio coding formats there are test sets of various things, for example the FFmpeg FATE suite utilizes the H.264 and HEVC reference sample set
[02:29:05] <JEEB> for colorspaces etc, not that I know
[02:30:05] <JEEB> but yea, so 2nd ed adds explanations on what chroma location is :)
[02:32:16] *** Quits: Vonter (~Vonter@user/vonter) (Ping timeout: 252 seconds)
[02:33:42] *** Joins: finsternis (~X@23.226.237.192)
[02:44:07] *** Joins: Guest60 (~Guest60@184-96-216-249.hlrn.qwest.net)
[02:45:34] *** Quits: Guest60 (~Guest60@184-96-216-249.hlrn.qwest.net) (Client Quit)
[02:45:55] *** Joins: onicosta (~onicosta@5.2.73.206)
[02:49:08] *** Quits: sosodank (~dankamong@199.185.175.96) (*.net *.split)
[02:49:08] *** Quits: stkrdknmibalz (~test@rrcs-75-87-43-226.sw.biz.rr.com) (*.net *.split)
[02:49:08] *** Quits: Tosin (~Tosin@097-085-185-009.biz.spectrum.com) (*.net *.split)
[02:49:08] *** Quits: bittermelons (~bittermel@cpe-174-100-53-99.neo.res.rr.com) (*.net *.split)
[02:49:08] *** Quits: dock (~3252f234@ircip2.mibbit.com) (*.net *.split)
[02:49:08] *** Quits: TheLink (~TheLink@user/thelink) (*.net *.split)
[02:49:08] *** Quits: k_sze (~k_sze@mail2.kalunite.net) (*.net *.split)
[02:49:08] *** Quits: wyatt8740 (~wyatt8740@104.200.142.205) (*.net *.split)
[02:49:08] *** Quits: AbleBacon (~AbleBacon@user/AbleBacon) (*.net *.split)
[02:49:08] *** Quits: aeperezt (~Srain@190.141.20.36) (*.net *.split)
[02:49:08] *** Quits: LuKaRo (~LuKaRo@p200300dfa71797375776d016cf464e3b.dip0.t-ipconnect.de) (*.net *.split)
[02:49:08] *** Quits: waleee (~waleee@2001:9b0:216:8200:d457:9189:7843:1dbd) (*.net *.split)
[02:49:08] *** Quits: graphitemaster (~graphitem@user/graphitemaster) (*.net *.split)
[02:49:08] *** Quits: | (bigfoot@user/bigfoot547) (*.net *.split)
[02:49:08] *** Quits: lexano (~lexano@2607:fea8:5bc0:12:12c3:7bff:fe95:9fc1) (*.net *.split)
[02:49:08] *** Quits: buhman (sid411355@user/buhman) (*.net *.split)
[02:49:08] *** Quits: samhza (sam@2600:3c03::f03c:92ff:fe40:814c) (*.net *.split)
[02:49:08] *** Quits: arcatech (~arcatech@user/arcatech) (*.net *.split)
[02:49:08] *** Quits: GenTooMan (~cyberman@2601:547:437f:e5c6:21f:5bff:fefe:a883) (*.net *.split)
[02:49:08] *** Quits: zmt01 (~zmt00@user/zmt00) (*.net *.split)
[02:49:08] *** Quits: sagax (~sagax@213.138.71.146) (*.net *.split)
[02:49:08] *** Quits: jos1 (~jos3@dyndsl-091-096-036-108.ewe-ip-backbone.de) (*.net *.split)
[02:49:08] *** Quits: Icedream (~icedream@hzn-b.serverkomplex.de) (*.net *.split)
[02:49:08] *** Quits: anticw (~anticw@157-131-246-230.fiber.dynamic.sonic.net) (*.net *.split)
[02:49:09] *** Quits: ringo (sid501835@id-501835.brockwell.irccloud.com) (*.net *.split)
[02:49:09] *** Quits: mateo` (~mateo@ffmpeg/developer/mateo) (*.net *.split)
[02:49:09] *** Quits: illya (~user@ffmpeg/developer/illya) (*.net *.split)
[02:49:09] *** Quits: Exa (exa@irc.moe) (*.net *.split)
[02:49:09] *** Quits: nikos (~nikos@104.248.205.38) (*.net *.split)
[02:49:09] *** Quits: ChanServ (ChanServ@services.libera.chat) (*.net *.split)
[02:49:09] *** Quits: mickey (~user@user/mickey) (*.net *.split)
[02:49:09] *** Quits: milkt (~debian@gateway/tor-sasl/milkt) (*.net *.split)
[02:49:09] *** Quits: pong (~loop@user/pong) (*.net *.split)
[02:49:09] *** Quits: Hello71 (~Hello71@wireguard/contributor/hello71) (*.net *.split)
[02:49:09] *** Quits: adanwan (~adanwan@gateway/tor-sasl/adanwan) (*.net *.split)
[02:49:09] *** Quits: synapt (NBishop@o.apocaleaps.com) (*.net *.split)
[02:49:09] *** Quits: zeromind (~zeromind@a.eroforce.one) (*.net *.split)
[02:49:09] *** Quits: klaxa (~klaxa@static.175.17.76.144.clients.your-server.de) (*.net *.split)
[02:49:09] *** Quits: stevenm_ (~stevenm@stevenm.keele.netcentral.co.uk) (*.net *.split)
[02:49:09] *** Quits: der_richter (~Akemi@p4fde4e56.dip0.t-ipconnect.de) (*.net *.split)
[02:49:09] *** Quits: Hackerpcs (~user@user/hackerpcs) (*.net *.split)
[02:49:09] *** Quits: bencc1__ (~bencc1@5.29.8.112) (*.net *.split)
[02:49:09] *** Quits: vlm (~vlm@user/vlm) (*.net *.split)
[02:49:10] *** Quits: Zucca (~Zucca@user/zucca) (*.net *.split)
[02:49:10] *** Quits: TheCoffeMaker (~TheCoffeM@user/thecoffemaker) (*.net *.split)
[02:49:10] *** Quits: gothicserpent (~gothicser@static-198-54-129-77.cust.tzulo.com) (*.net *.split)
[02:49:10] *** Quits: cryptic (~cryptic@142-196-139-017.res.spectrum.com) (*.net *.split)
[02:49:10] *** Quits: justK (~justache@user/justache) (*.net *.split)
[02:49:10] *** Quits: shokohsc (~shokohsc@161.88.195.77.rev.sfr.net) (*.net *.split)
[02:49:10] *** Quits: xlei (znc@pool-68-129-84-118.nycmny.fios.verizon.net) (*.net *.split)
[02:49:10] *** Quits: ttys000 (~ttys000@user/ttys000) (*.net *.split)
[02:49:10] *** Quits: AMM (~AMM@user/amm) (*.net *.split)
[02:49:10] *** Quits: pntaylor (~quassel@ppp121-45-199-192.cbr-trn-nor-bras38.tpg.internode.on.net) (*.net *.split)
[02:49:10] *** Quits: haihao (~haihao@192.102.204.38) (*.net *.split)
[02:49:10] *** Quits: Retr0id (~Retr0id@user/retr0id) (*.net *.split)
[02:49:10] *** Quits: diederik (~diederik@user/diederik) (*.net *.split)
[02:49:10] *** Quits: finsternis (~X@23.226.237.192) (*.net *.split)
[02:49:10] *** Quits: nitroxis (n@nxs.re) (*.net *.split)
[02:49:10] *** Quits: amahl (~amahl@dsl-jklbng12-54fbca-64.dhcp.inet.fi) (*.net *.split)
[02:49:10] *** Quits: TanoMarcelo (~TanoMarce@179.63.242.126) (*.net *.split)
[02:49:10] *** Quits: Arokh (~MoveAlong@ip-88-153-211-132.hsi04.unitymediagroup.de) (*.net *.split)
[02:49:10] *** Quits: Rodn3y (~rodney@user/rodn3y) (*.net *.split)
[02:49:10] *** Quits: Mysteria (~Mysteria@v2202101139540140656.hotsrv.de) (*.net *.split)
[02:49:10] *** Quits: nrg (~NRG@user/nrg) (*.net *.split)
[02:49:10] *** Quits: thebombzen (~thebombze@587232526.guest.umich.net) (*.net *.split)
[02:49:10] *** Quits: x_kuru (~xkuru@user/xkuru) (*.net *.split)
[02:49:10] *** Quits: alcohol (~rob@composer/alcohol) (*.net *.split)
[02:49:10] *** Quits: Manni__ (~Flole@94.31.97.37) (*.net *.split)
[02:49:10] *** Quits: realies (~realies@user/realies) (*.net *.split)
[02:49:10] *** Quits: aquijoule__ (~richbridg@213-225-12-210.nat.highway.a1.net) (*.net *.split)
[02:49:10] *** Quits: Asterisk (~asterisk@69.195.134.172) (*.net *.split)
[02:49:11] *** Quits: kasper93 (~kasper93@89-74-110-199.dynamic.chello.pl) (*.net *.split)
[02:49:11] *** Quits: dmang (~dmang@047-032-148-170.res.spectrum.com) (*.net *.split)
[02:49:11] *** Quits: Freneticks (~Frenetick@gw.ptr-80-238-209-252.customer.ch.netstream.com) (*.net *.split)
[02:49:11] *** Quits: fling (~fling@user/fling) (*.net *.split)
[02:49:11] *** Quits: nurupo (~nurupo.ga@user/nurupo) (*.net *.split)
[02:49:11] *** Quits: Mapley (~Maple@user/maple) (*.net *.split)
[02:49:11] *** Quits: Trieste (T@user/pilgrim) (*.net *.split)
[02:49:11] *** Quits: s55 (~s55@user/s55) (*.net *.split)
[02:49:11] *** Quits: dreamer (~dreamer@user/dreamer) (*.net *.split)
[02:49:11] *** Quits: elastic_dog (~elastic_d@2a01:118f:822:9c00:2132:cd52:1e4a:f46a) (*.net *.split)
[02:49:11] *** Quits: TheSashm_ (~TheSashmo@158.106.77.7) (*.net *.split)
[02:49:11] *** Quits: fulinjie_ (sid455360@id-455360.brockwell.irccloud.com) (*.net *.split)
[02:49:11] *** Quits: microchip_ (~neutrino@user/microchip/x-0766185) (*.net *.split)
[02:49:11] *** Quits: jai (~darkapex@user/darkapex) (*.net *.split)
[02:49:11] *** Quits: NaviTheFairy (~Squirrel@user/navithefairy) (*.net *.split)
[02:49:12] *** Quits: Lynne (~lynne@ffmpeg/developer/lynne) (*.net *.split)
[02:49:12] *** Quits: haasn (~nand@haasn.dev) (*.net *.split)
[02:49:12] *** Quits: sine (~sine0@pcyard.co.uk) (*.net *.split)
[02:49:12] *** Quits: Ruxnor (kevin@user/kddlb) (*.net *.split)
[02:49:12] *** Quits: Flat (~flat@35.137.99.241) (*.net *.split)
[02:49:12] *** Quits: onicosta (~onicosta@5.2.73.206) (*.net *.split)
[02:49:12] *** Quits: ossifrage (~ossifrage@pool-72-78-189-30.phlapa.fios.verizon.net) (*.net *.split)
[02:49:12] *** Quits: markvandenborre (~mark@static.88.183.119.168.clients.your-server.de) (*.net *.split)
[02:49:12] *** Quits: nd (~nd@user/nd) (*.net *.split)
[02:49:12] *** Quits: KombuchaKip (~kip@192.252.230.5) (*.net *.split)
[02:49:12] *** Quits: Fenrir (~Fenrir@user/fenrir) (*.net *.split)
[02:49:12] *** Quits: kilobyte_ch (~kbch@77.109.171.12) (*.net *.split)
[02:49:12] *** Quits: odrling_ (~odrling@korone.aidoru.agency) (*.net *.split)
[02:49:12] *** Quits: noarb (~noarb@user/noarb) (*.net *.split)
[02:49:12] *** Quits: DarkG (~DarkG@user/darkg) (*.net *.split)
[02:49:12] *** Quits: jarainf (~jarainf@citizien.eu) (*.net *.split)
[02:49:12] *** Quits: michaelni (~michael@213-47-68-29.cable.dynamic.surfer.at) (*.net *.split)
[02:49:12] *** Quits: Henry151 (~bishop@user/henry151) (*.net *.split)
[02:49:13] *** Quits: meinside (uid24933@id-24933.brockwell.irccloud.com) (*.net *.split)
[02:49:13] *** Quits: intrac (~intracube@user/intracube) (*.net *.split)
[02:49:13] *** Quits: thomas_25 (thomas_25@pls.just.stfu-kthx.bnc4you.xyz) (*.net *.split)
[02:49:13] *** Quits: arkanoid (~jack@2-238-151-49.ip244.fastwebnet.it) (*.net *.split)
[02:49:13] *** Quits: sebbu (~sebbu@user/sebbu) (*.net *.split)
[02:49:13] *** Quits: alienpinecone[m] (~alienpine@2001:470:69fc:105::35bd) (*.net *.split)
[02:49:13] *** Quits: kurosu (uid342582@id-342582.stonehaven.irccloud.com) (*.net *.split)
[02:49:13] *** Quits: pit_ (~quassel@v22016102921539034.goodsrv.de) (*.net *.split)
[02:49:13] *** Quits: user282069 (user@2a01:7e00::f03c:92ff:fe7f:456d) (*.net *.split)
[02:49:13] *** Quits: dustinm` (~dustinm@static.38.6.217.95.clients.your-server.de) (*.net *.split)
[02:49:13] *** Quits: treefrob (~robx@p57a969ef.dip0.t-ipconnect.de) (*.net *.split)
[02:49:13] *** Quits: Seirdy (~Seirdy@sourcehut/user/seirdy) (*.net *.split)
[02:49:14] *** Quits: Mister_Magister (~Mister_Ma@user/mister-magister/x-2636733) (*.net *.split)
[02:49:14] *** Quits: Atsuko (~x@94.242.250.86) (*.net *.split)
[02:49:14] *** Quits: keypusher (keypusher@user/keypusher) (*.net *.split)
[02:49:14] *** Quits: Brocker (~NoBody@user/brocker) (*.net *.split)
[02:49:14] *** Quits: Mavrik (~Mavrik@virag.si) (*.net *.split)
[02:49:14] *** Quits: llyyr (~llyyr@51.15.176.87) (*.net *.split)
[02:49:14] *** Quits: JEEB (~jeeb@kuroko.fushizen.eu) (*.net *.split)
[02:49:14] *** Quits: mixfix41 (~homefame@user/mixfix41) (*.net *.split)
[02:49:14] *** Quits: wolfshappen (~waff@irc.furworks.de) (*.net *.split)
[02:49:14] *** Quits: ops (~ops@user/echelon) (*.net *.split)
[02:49:14] *** Quits: rcombs (rcombs@irc.rcombs.me) (*.net *.split)
[02:49:14] *** Quits: upekkha (~Advanced@2a01:4f8:1c0c:49df::1) (*.net *.split)
[02:49:14] *** Quits: s1b1 (~s1b1@user/s1b1) (*.net *.split)
[02:49:14] *** Quits: genius3000 (g3k@user/genius3000) (*.net *.split)
[02:49:14] *** Quits: blinky42 (~quassel@user/blinky42) (*.net *.split)
[02:49:14] *** Quits: reynaldo (~reynaldo@ec2-34-200-7-37.compute-1.amazonaws.com) (*.net *.split)
[02:49:14] *** Quits: simoneb (~simone@user/simoneb) (*.net *.split)
[02:49:15] *** Quits: igh4st[m] (~igh4stmat@2001:470:69fc:105::35ce) (*.net *.split)
[02:49:15] *** Quits: krjst (~krjst@2604:a880:800:c1::16b:8001) (*.net *.split)
[02:49:15] *** Quits: olspookishmagus (~pookie@snf-137798.vm.okeanos.grnet.gr) (*.net *.split)
[02:49:15] *** Quits: paddymahoney (~paddymaho@cpe9050ca207f83-cm9050ca207f80.cpe.net.cable.rogers.com) (*.net *.split)
[02:49:15] *** Quits: ocrete (~ocrete@halloumi.collabora.co.uk) (*.net *.split)
[02:49:15] *** Quits: jonix (~jonix@dbdvtpyycfr3s--xk0pzt-3.rev.dnainternet.fi) (*.net *.split)
[02:49:15] *** Quits: znf (~ibm86@toaster.linge-ma.ro) (*.net *.split)
[02:49:15] *** Quits: Zouppen_ (~joell@jkl.hacklab.fi) (*.net *.split)
[02:49:15] *** Quits: xantoz (~tewi_inab@c-e0bfe255.013-124-73746f25.bbcust.telenor.se) (*.net *.split)
[02:49:15] *** Quits: ullbeking (sid5364@id-5364.charlton.irccloud.com) (*.net *.split)
[02:49:15] *** Quits: deetwelve (~deetwelve@user/deetwelve) (*.net *.split)
[02:49:15] *** Quits: garfvl (~root@ns530260.ip-149-56-24.net) (*.net *.split)
[02:49:15] *** Quits: KyleSiefring (~quassel@ec2-35-174-255-234.compute-1.amazonaws.com) (*.net *.split)
[02:49:15] *** Quits: Keshl (~Purple@user/Keshl) (*.net *.split)
[02:49:15] *** Quits: brb (~brb@user/brb) (*.net *.split)
[02:49:15] *** Quits: kpuc (1011@46-97-229-216.sr2.pon.net) (*.net *.split)
[02:49:15] *** Quits: koolazer (~koo@user/koolazer) (*.net *.split)
[02:49:15] *** Quits: meklu (~meklu@holmes.meklu.org) (*.net *.split)
[02:49:15] *** Quits: theracermaster (~theracerm@52.79.209.35.bc.googleusercontent.com) (*.net *.split)
[02:49:15] *** Quits: t4nk_freenode (~Go@user/t4nk) (*.net *.split)
[02:49:16] *** Quits: luc65r (~luc65r@2001:470:69fc:105::ee1) (*.net *.split)
[02:49:16] *** Quits: kepstin (~kepstin@user/kepstin) (*.net *.split)
[02:49:16] *** Quits: rojin[m] (~rojinroyp@2001:470:69fc:105::89b) (*.net *.split)
[02:49:16] *** Quits: dostoyevsky2 (~sck@user/dostoyevsky2) (*.net *.split)
[02:49:16] *** Quits: smashgrab (~smashgrab@bare.metal.computer) (*.net *.split)
[02:49:16] *** Quits: ParkerR (ParkerR@znc.withg.org) (*.net *.split)
[02:49:16] *** Quits: qwedfg (~qwedfg@user/qwedfg) (*.net *.split)
[02:49:16] *** Quits: DeHackEd (~dehacked@atmaweapon.dehacked.net) (*.net *.split)
[02:49:16] *** Quits: Fusl (fusl@1.0.0.127.in-addr.arpa.li) (*.net *.split)
[02:49:16] *** Quits: vulpine (xfnw@tilde.team) (*.net *.split)
[02:49:17] *** Quits: nickster (~nickster@67.207.91.6) (*.net *.split)
[02:49:17] *** Quits: Nex8192 (~Nex8192@user/nex8192) (*.net *.split)
[02:49:17] *** Quits: spanwysm[m] (~spanwysm@2001:470:69fc:105::e0a) (*.net *.split)
[02:49:17] *** Quits: tempora (~tempus@2a00:dcc0:dead:ba62:a1b2:c3d4:e5f6:cafe) (*.net *.split)
[02:49:17] *** Quits: fjmorazan (~quassel@user/fjmorazan) (*.net *.split)
[02:49:17] *** Quits: fsphil (fsphil@ursa.sanslogic.co.uk) (*.net *.split)
[02:49:17] *** Quits: tp (~tp@vmi364498.contaboserver.net) (*.net *.split)
[02:49:17] *** Quits: Tips|Cloud (sid62231@id-62231.charlton.irccloud.com) (*.net *.split)
[02:49:17] *** Quits: strudl (~strudl@user/strudl) (*.net *.split)
[02:49:17] *** Quits: Vedaa (75d3d2e6@kayg.org) (*.net *.split)
[02:49:17] *** Quits: Ekho (~Ekho@user/ekho) (*.net *.split)
[02:49:17] *** Quits: bencoh (~bencoh@user/bencoh) (*.net *.split)
[02:49:17] *** Quits: RoyK (~roy@user/royk) (*.net *.split)
[02:49:17] *** Quits: itok (sid418430@id-418430.charlton.irccloud.com) (*.net *.split)
[02:49:17] *** Quits: Bombo (atom@user/bombo) (*.net *.split)
[02:49:17] *** Quits: Rhvs (Rhys@help.lux.melted.me) (*.net *.split)
[02:49:17] *** Quits: another (~another@wireguard/tunneler/another) (*.net *.split)
[02:49:17] *** Quits: jaminc (~user@2607:5300:60:116e::1) (*.net *.split)
[02:49:17] *** Quits: plitter (~plitter@user/plitter) (*.net *.split)
[02:49:17] *** Quits: timothy (~timothy@redhat/timothy) (*.net *.split)
[02:49:18] *** Quits: CounterPillow (~Pillow@overviewer/CounterPillow) (*.net *.split)
[02:49:18] *** Quits: drv (quasselcor@oak.drv.nu) (*.net *.split)
[02:49:18] *** Quits: user890104 (~Venci@quassel.slackwa.re) (*.net *.split)
[02:49:18] *** Quits: fructose (~fructose@user/fructose) (*.net *.split)
[02:49:18] *** Quits: Hobbyboy (Hobbyboy@hobbyboy.co.uk) (*.net *.split)
[02:49:18] *** Quits: furq (~furq@b23.be) (*.net *.split)
[02:49:18] *** Quits: Arsen (~arsen@managarm/dev/Arsen) (*.net *.split)
[02:49:18] *** Quits: idesmi[m] (~idesmitch@2001:470:69fc:105::f2b) (*.net *.split)
[02:49:18] *** Quits: memst[m] (~memst@2001:470:69fc:105::716) (*.net *.split)
[02:49:18] *** Quits: YakoYoku (~yakoyoku@2001:470:69fc:105::780) (*.net *.split)
[02:49:18] *** Quits: singlerider[m] (~singlerid@2001:470:69fc:105::2fd2) (*.net *.split)
[02:49:18] *** Quits: sixecho (~sixecho@2001:470:69fc:105::32) (*.net *.split)
[02:49:18] *** Quits: babyface (~babyface@user/babyface) (*.net *.split)
[02:49:18] *** Quits: MightyBOB (~MightyBOB@76.99.21.35) (*.net *.split)
[02:49:18] *** Quits: Jonno_FTW (~come@user/jonno-ftw/x-0835346) (*.net *.split)
[02:49:18] *** Quits: BtbN (btbn@ffmpeg/developer/btbn) (*.net *.split)
[02:49:18] *** Quits: mthall (~quassel@2a01:4f9:4a:2f4d:ecb0:6aff:fed2:c9a1) (*.net *.split)
[02:49:18] *** Quits: tinytoast (~squeek@user/tinystoat) (*.net *.split)
[02:49:18] *** Quits: moz (~moz@dont.loginto.me) (*.net *.split)
[02:49:19] *** Quits: mindfreeze (sid250931@user/mindfreeze) (*.net *.split)
[02:49:19] *** Quits: rhys (~rhys@mill.in.net) (*.net *.split)
[02:49:19] *** Quits: auri (~admin@static.46.108.40.188.clients.your-server.de) (*.net *.split)
[02:49:19] *** Quits: blue_penquin[m] (~bluepenqu@2001:470:69fc:105::829) (*.net *.split)
[02:49:19] *** Quits: galad (~galad@2605:6400:30:fb0b:56b5:20c1:fdb5:df37) (*.net *.split)
[02:49:19] *** Quits: Riviera (Riviera@user/riviera) (*.net *.split)
[02:49:19] *** Quits: Stalker (~Stalker@89.201.5.246) (*.net *.split)
[02:49:19] *** Quits: meepmeep (~meepmeep@end.of.cylind.re) (*.net *.split)
[02:49:19] *** Quits: sfan5 (~sfan5@user/sfan5) (*.net *.split)
[02:49:19] *** Quits: tmatth (sid143283@videolan/developer/tmatth) (*.net *.split)
[02:49:19] *** Quits: jschwart (~quassel@2001:985:2c6e:0:b00b:32ff:fe28:5567) (*.net *.split)
[02:49:19] *** Quits: APic (apic@apic.name) (*.net *.split)
[02:49:20] *** Quits: occivink (~occivink@2001:41d0:8:bbf::1) (*.net *.split)
[02:49:20] *** Quits: blb (~blb@user/blb) (*.net *.split)
[02:49:20] *** Quits: darkapex (uid360049@user/darkapex) (*.net *.split)
[02:49:20] *** Quits: elenril (~elenril@tutturu.red.khirnov.net) (*.net *.split)
[02:49:20] *** Quits: troyt (troyt@2601:681:4100:d591:44dd:acff:fe85:9c8e) (*.net *.split)
[02:49:20] *** Quits: raytiley (sid13397@id-13397.stonehaven.irccloud.com) (*.net *.split)
[02:49:20] *** Quits: fltrz (~fltrz@94.105.111.205.dyn.edpnet.net) (*.net *.split)
[02:49:20] *** Quits: wacko (~wacko@wireguard/tunneler/wacko) (*.net *.split)
[02:49:20] *** Quits: whitekidney_ (~wk@188.126.218.103) (*.net *.split)
[02:49:20] *** Quits: pyre (~pyre@crimeboss.nillas-power.com) (*.net *.split)
[02:49:20] *** Quits: jkqxz (~mrt@jkqxz.net) (*.net *.split)
[02:49:20] *** Quits: nitram (~nitram@superblob.com) (*.net *.split)
[02:49:20] *** Quits: benbrown (~benbrown@user/benbrown) (*.net *.split)
[02:49:20] *** Quits: edenist (~edenist@rdns.robotprofessor.net) (*.net *.split)
[02:49:21] *** Quits: Naleksuh (sid454423@user/naleksuh) (*.net *.split)
[02:49:21] *** Quits: irwiss (~irwiss@user/irwiss) (*.net *.split)
[02:49:49] *** Joins: ChanServ (ChanServ@services.libera.chat)
[02:49:49] *** iridium.libera.chat sets mode: +o ChanServ
[02:50:09] *** Joins: rcombs (rcombs@irc.rcombs.me)
[02:50:09] *** Joins: jonix (~jonix@dbdvtpyycfr3s--xk0pzt-3.rev.dnainternet.fi)
[02:50:09] *** Joins: upekkha (~Advanced@2a01:4f8:1c0c:49df::1)
[02:50:09] *** Joins: s1b1 (~s1b1@user/s1b1)
[02:50:09] *** Joins: genius3000 (g3k@user/genius3000)
[02:50:09] *** Joins: ullbeking (sid5364@id-5364.charlton.irccloud.com)
[02:50:09] *** Joins: blinky42 (~quassel@user/blinky42)
[02:50:09] *** Joins: reynaldo (~reynaldo@ec2-34-200-7-37.compute-1.amazonaws.com)
[02:50:09] *** Joins: simoneb (~simone@user/simoneb)
[02:50:09] *** Joins: igh4st[m] (~igh4stmat@2001:470:69fc:105::35ce)
[02:50:09] *** Joins: krjst (~krjst@2604:a880:800:c1::16b:8001)
[02:50:09] *** Joins: olspookishmagus (~pookie@snf-137798.vm.okeanos.grnet.gr)
[02:50:09] *** Joins: paddymahoney (~paddymaho@cpe9050ca207f83-cm9050ca207f80.cpe.net.cable.rogers.com)
[02:50:09] *** Joins: ocrete (~ocrete@halloumi.collabora.co.uk)
[02:50:09] *** Joins: znf (~ibm86@toaster.linge-ma.ro)
[02:50:09] *** Joins: Zouppen_ (~joell@jkl.hacklab.fi)
[02:50:09] *** Joins: xantoz (~tewi_inab@c-e0bfe255.013-124-73746f25.bbcust.telenor.se)
[02:50:09] *** Joins: deetwelve (~deetwelve@user/deetwelve)
[02:50:09] *** Joins: garfvl (~root@ns530260.ip-149-56-24.net)
[02:50:09] *** Joins: KyleSiefring (~quassel@ec2-35-174-255-234.compute-1.amazonaws.com)
[02:50:09] *** Joins: Keshl (~Purple@user/Keshl)
[02:50:49] *** Joins: meinside (uid24933@id-24933.brockwell.irccloud.com)
[02:50:49] *** Joins: intrac (~intracube@user/intracube)
[02:50:49] *** Joins: thomas_25 (thomas_25@pls.just.stfu-kthx.bnc4you.xyz)
[02:50:49] *** Joins: arkanoid (~jack@2-238-151-49.ip244.fastwebnet.it)
[02:50:49] *** Joins: sebbu (~sebbu@user/sebbu)
[02:50:49] *** Joins: alienpinecone[m] (~alienpine@2001:470:69fc:105::35bd)
[02:50:49] *** Joins: kurosu (uid342582@id-342582.stonehaven.irccloud.com)
[02:50:49] *** Joins: pit_ (~quassel@v22016102921539034.goodsrv.de)
[02:50:49] *** Joins: user282069 (user@2a01:7e00::f03c:92ff:fe7f:456d)
[02:51:28] *** Joins: fltrz (~fltrz@94.105.111.205.dyn.edpnet.net)
[02:51:28] *** Joins: blb (~blb@user/blb)
[02:51:28] *** Joins: darkapex (uid360049@user/darkapex)
[02:51:28] *** Joins: elenril (~elenril@tutturu.red.khirnov.net)
[02:51:28] *** Joins: troyt (troyt@2601:681:4100:d591:44dd:acff:fe85:9c8e)
[02:51:28] *** Joins: raytiley (sid13397@id-13397.stonehaven.irccloud.com)
[02:51:28] *** Joins: wacko (~wacko@wireguard/tunneler/wacko)
[02:51:28] *** Joins: whitekidney_ (~wk@188.126.218.103)
[02:51:28] *** Joins: pyre (~pyre@crimeboss.nillas-power.com)
[02:51:28] *** Joins: jkqxz (~mrt@jkqxz.net)
[02:51:28] *** Joins: nitram (~nitram@superblob.com)
[02:51:28] *** Joins: benbrown (~benbrown@user/benbrown)
[02:51:28] *** Joins: edenist (~edenist@rdns.robotprofessor.net)
[02:51:28] *** Joins: irwiss (~irwiss@user/irwiss)
[02:51:28] *** Joins: Naleksuh (sid454423@user/naleksuh)
[02:51:33] *** Joins: finsternis (~X@23.226.237.192)
[02:51:33] *** Joins: nate (NBishop@o.apocaleaps.com)
[02:51:33] *** Joins: zeromind (~zeromind@a.eroforce.one)
[02:51:33] *** Joins: nitroxis (n@nxs.re)
[02:51:33] *** Joins: amahl (~amahl@dsl-jklbng12-54fbca-64.dhcp.inet.fi)
[02:51:33] *** Joins: TanoMarcelo (~TanoMarce@179.63.242.126)
[02:51:33] *** Joins: Arokh (~MoveAlong@ip-88-153-211-132.hsi04.unitymediagroup.de)
[02:51:33] *** Joins: Rodn3y (~rodney@user/rodn3y)
[02:51:33] *** Joins: Mysteria (~Mysteria@v2202101139540140656.hotsrv.de)
[02:51:33] *** Joins: klaxa (~klaxa@static.175.17.76.144.clients.your-server.de)
[02:51:33] *** Joins: nrg (~NRG@user/nrg)
[02:51:33] *** Joins: stevenm_ (~stevenm@stevenm.keele.netcentral.co.uk)
[02:51:33] *** Joins: thebombzen (~thebombze@587232526.guest.umich.net)
[02:51:33] *** Joins: der_richter (~Akemi@p4fde4e56.dip0.t-ipconnect.de)
[02:51:33] *** Joins: x_kuru (~xkuru@user/xkuru)
[02:51:33] *** Joins: alcohol (~rob@composer/alcohol)
[02:51:33] *** Joins: Hackerpcs (~user@user/hackerpcs)
[02:51:33] *** Joins: Manni__ (~Flole@94.31.97.37)
[02:51:33] *** Joins: bencc1__ (~bencc1@5.29.8.112)
[02:51:33] *** Joins: realies (~realies@user/realies)
[02:51:33] *** Joins: aquijoule__ (~richbridg@213-225-12-210.nat.highway.a1.net)
[02:51:33] *** Joins: vlm (~vlm@user/vlm)
[02:51:33] *** Joins: Asterisk (~asterisk@69.195.134.172)
[02:51:33] *** Joins: Zucca (~Zucca@user/zucca)
[02:51:33] *** Joins: TheCoffeMaker (~TheCoffeM@user/thecoffemaker)
[02:51:33] *** Joins: gothicserpent (~gothicser@static-198-54-129-77.cust.tzulo.com)
[02:51:33] *** Joins: cryptic (~cryptic@142-196-139-017.res.spectrum.com)
[02:51:33] *** Joins: shokohsc (~shokohsc@161.88.195.77.rev.sfr.net)
[02:51:33] *** Joins: xlei (znc@pool-68-129-84-118.nycmny.fios.verizon.net)
[02:51:33] *** Joins: Freneticks (~Frenetick@gw.ptr-80-238-209-252.customer.ch.netstream.com)
[02:51:33] *** Joins: kasper93 (~kasper93@89-74-110-199.dynamic.chello.pl)
[02:51:33] *** Joins: ttys000 (~ttys000@user/ttys000)
[02:51:33] *** Joins: AMM (~AMM@user/amm)
[02:51:33] *** Joins: dmang (~dmang@047-032-148-170.res.spectrum.com)
[02:51:33] *** Joins: pntaylor (~quassel@ppp121-45-199-192.cbr-trn-nor-bras38.tpg.internode.on.net)
[02:51:33] *** Joins: haihao (~haihao@192.102.204.38)
[02:51:33] *** Joins: Mapley (~Maple@user/maple)
[02:51:33] *** Joins: Trieste (T@user/pilgrim)
[02:51:33] *** Joins: Retr0id (~Retr0id@user/retr0id)
[02:51:33] *** Joins: s55 (~s55@user/s55)
[02:51:33] *** Joins: diederik (~diederik@user/diederik)
[02:51:33] *** Joins: dreamer (~dreamer@user/dreamer)
[02:51:55] *** Joins: mickey (~user@user/mickey)
[02:51:55] *** Joins: milkt (~debian@gateway/tor-sasl/milkt)
[02:51:55] *** Joins: pong (~loop@user/pong)
[02:51:55] *** Joins: Hello71 (~Hello71@wireguard/contributor/hello71)
[02:51:55] *** Joins: adanwan (~adanwan@gateway/tor-sasl/adanwan)
[02:52:00] *** Joins: Vonter (~Vonter@124.123.104.41)
[02:52:00] *** Joins: fling (~fling@188.168.21.62)
[02:52:00] *** Joins: dustinm` (~dustinm@static.38.6.217.95.clients.your-server.de)
[02:52:00] *** Joins: treefrob (~robx@p57a969ef.dip0.t-ipconnect.de)
[02:52:00] *** Joins: Seirdy (~Seirdy@sourcehut/user/seirdy)
[02:52:00] *** Joins: Mister_Magister (~Mister_Ma@user/mister-magister/x-2636733)
[02:52:00] *** Joins: Atsuko (~x@94.242.250.86)
[02:52:00] *** Joins: keypusher (keypusher@user/keypusher)
[02:52:00] *** Joins: Brocker (~NoBody@user/brocker)
[02:52:00] *** Joins: Mavrik (~Mavrik@virag.si)
[02:52:00] *** Joins: llyyr (~llyyr@51.15.176.87)
[02:52:00] *** Joins: JEEB (~jeeb@kuroko.fushizen.eu)
[02:52:00] *** Joins: mixfix41 (~homefame@user/mixfix41)
[02:52:00] *** Joins: wolfshappen (~waff@irc.furworks.de)
[02:52:00] *** Joins: ops (~ops@user/echelon)
[02:52:13] *** Joins: LuKaRo (~LuKaRo@p200300dfa71797375776d016cf464e3b.dip0.t-ipconnect.de)
[02:52:13] *** Joins: graphitemaster (~graphitem@user/graphitemaster)
[02:52:13] *** Joins: | (bigfoot@user/bigfoot547)
[02:52:13] *** Joins: lexano (~lexano@2607:fea8:5bc0:12:12c3:7bff:fe95:9fc1)
[02:52:13] *** Joins: buhman (sid411355@user/buhman)
[02:52:13] *** Joins: samhza (sam@2600:3c03::f03c:92ff:fe40:814c)
[02:52:13] *** Joins: GenTooMan (~cyberman@2601:547:437f:e5c6:21f:5bff:fefe:a883)
[02:52:13] *** Joins: zmt01 (~zmt00@user/zmt00)
[02:52:13] *** Joins: sagax (~sagax@213.138.71.146)
[02:52:13] *** Joins: jos1 (~jos3@dyndsl-091-096-036-108.ewe-ip-backbone.de)
[02:52:13] *** Joins: Icedream (~icedream@hzn-b.serverkomplex.de)
[02:52:13] *** Joins: anticw (~anticw@157-131-246-230.fiber.dynamic.sonic.net)
[02:52:13] *** Joins: ringo (sid501835@id-501835.brockwell.irccloud.com)
[02:52:13] *** Joins: mateo` (~mateo@ffmpeg/developer/mateo)
[02:52:13] *** Joins: illya (~user@ffmpeg/developer/illya)
[02:52:13] *** Joins: Exa (exa@irc.moe)
[02:52:13] *** Joins: nikos (~nikos@104.248.205.38)
[02:52:35] *** Joins: Nex8192 (~Nex8192@user/nex8192)
[02:52:35] *** Joins: spanwysm[m] (~spanwysm@2001:470:69fc:105::e0a)
[02:52:35] *** Joins: tempora (~tempus@2a00:dcc0:dead:ba62:a1b2:c3d4:e5f6:cafe)
[02:52:35] *** Joins: fjmorazan (~quassel@user/fjmorazan)
[02:52:35] *** Joins: RoyK (~roy@user/royk)
[02:52:35] *** Joins: fsphil (fsphil@ursa.sanslogic.co.uk)
[02:52:35] *** Joins: tp (~tp@vmi364498.contaboserver.net)
[02:52:35] *** Joins: Tips|Cloud (sid62231@id-62231.charlton.irccloud.com)
[02:52:35] *** Joins: Ekho (~Ekho@user/ekho)
[02:52:35] *** Joins: strudl (~strudl@user/strudl)
[02:52:35] *** Joins: Vedaa (75d3d2e6@kayg.org)
[02:52:35] *** Joins: bencoh (~bencoh@user/bencoh)
[02:52:35] *** Joins: itok (sid418430@id-418430.charlton.irccloud.com)
[02:52:35] *** Joins: Bombo (atom@user/bombo)
[02:52:35] *** Joins: Rhys (Rhys@help.lux.melted.me)
[02:52:35] *** Joins: another (~another@wireguard/tunneler/another)
[02:52:35] *** Joins: jaminc (~user@2607:5300:60:116e::1)
[02:52:35] *** Joins: plitter (~plitter@user/plitter)
[02:52:35] *** Joins: timothy (~timothy@redhat/timothy)
[02:52:35] *** Joins: CounterPillow (~Pillow@overviewer/CounterPillow)
[02:52:35] *** Joins: drv (quasselcor@oak.drv.nu)
[02:52:35] *** Joins: user890104 (~Venci@quassel.slackwa.re)
[02:52:35] *** Joins: fructose (~fructose@user/fructose)
[02:52:35] *** Joins: Hobbyboy (Hobbyboy@hobbyboy.co.uk)
[02:52:35] *** Joins: furq (~furq@b23.be)
[02:52:35] *** Joins: Arsen (~arsen@managarm/dev/Arsen)
[02:52:36] *** Quits: fling (~fling@188.168.21.62) (Changing host)
[02:52:36] *** Joins: fling (~fling@user/fling)
[02:52:45] *** Joins: waleee (~waleee@2001:9b0:216:8200:d457:9189:7843:1dbd)
[02:52:45] *** Joins: elastic_dog (~elastic_d@2a01:118f:822:9c00:2132:cd52:1e4a:f46a)
[02:52:45] *** Joins: TheSashm_ (~TheSashmo@158.106.77.7)
[02:52:45] *** Joins: fulinjie_ (sid455360@id-455360.brockwell.irccloud.com)
[02:52:45] *** Joins: microchip_ (~neutrino@user/microchip/x-0766185)
[02:52:45] *** Joins: jai (~darkapex@user/darkapex)
[02:52:45] *** Joins: NaviTheFairy (~Squirrel@user/navithefairy)
[02:52:45] *** Joins: Lynne (~lynne@ffmpeg/developer/lynne)
[02:52:45] *** Joins: haasn (~nand@haasn.dev)
[02:52:45] *** Joins: sine (~sine0@pcyard.co.uk)
[02:52:45] *** Joins: Ruxnor (kevin@user/kddlb)
[02:52:45] *** Joins: Flat (~flat@35.137.99.241)
[02:53:28] *** Joins: onicosta (~onicosta@5.2.73.206)
[02:53:28] *** Joins: ossifrage (~ossifrage@pool-72-78-189-30.phlapa.fios.verizon.net)
[02:53:28] *** Joins: markvandenborre (~mark@static.88.183.119.168.clients.your-server.de)
[02:53:28] *** Joins: nd (~nd@user/nd)
[02:53:28] *** Joins: KombuchaKip (~kip@192.252.230.5)
[02:53:28] *** Joins: Fenrir (~Fenrir@user/fenrir)
[02:53:28] *** Joins: kilobyte_ch (~kbch@77.109.171.12)
[02:53:28] *** Joins: odrling_ (~odrling@korone.aidoru.agency)
[02:53:28] *** Joins: noarb (~noarb@user/noarb)
[02:53:28] *** Joins: DarkG (~DarkG@user/darkg)
[02:53:28] *** Joins: jarainf (~jarainf@citizien.eu)
[02:53:28] *** Joins: michaelni (~michael@213-47-68-29.cable.dynamic.surfer.at)
[02:53:28] *** Joins: Henry151 (~bishop@user/henry151)
[02:53:29] *** Joins: rojin[m] (~rojinroyp@2001:470:69fc:105::89b)
[02:53:29] *** Joins: luc65r (~luc65r@2001:470:69fc:105::ee1)
[02:53:29] *** Joins: kepstin (~kepstin@user/kepstin)
[02:53:29] *** Joins: dostoyevsky2 (~sck@user/dostoyevsky2)
[02:53:29] *** Joins: smashgrab (~smashgrab@bare.metal.computer)
[02:53:29] *** Joins: ParkerR (ParkerR@znc.withg.org)
[02:53:29] *** Joins: qwedfg (~qwedfg@user/qwedfg)
[02:53:29] *** Joins: DeHackEd (~dehacked@atmaweapon.dehacked.net)
[02:53:29] *** Joins: Fusl (fusl@1.0.0.127.in-addr.arpa.li)
[02:53:29] *** Joins: vulpine (xfnw@tilde.team)
[02:53:29] *** Joins: nickster (~nickster@67.207.91.6)
[02:53:30] *** Quits: waleee (~waleee@2001:9b0:216:8200:d457:9189:7843:1dbd) (Client Quit)
[02:53:36] *** Joins: blue_penquin[m] (~bluepenqu@2001:470:69fc:105::829)
[02:53:36] *** Joins: galad (~galad@2605:6400:30:fb0b:56b5:20c1:fdb5:df37)
[02:53:36] *** Joins: Riviera (Riviera@user/riviera)
[02:53:36] *** Joins: Stalker (~Stalker@89.201.5.246)
[02:53:36] *** Joins: tmatth (sid143283@videolan/developer/tmatth)
[02:53:36] *** Joins: meepmeep (~meepmeep@end.of.cylind.re)
[02:53:36] *** Joins: sfan5 (~sfan5@user/sfan5)
[02:53:36] *** Joins: jschwart (~quassel@2001:985:2c6e:0:b00b:32ff:fe28:5567)
[02:53:36] *** Joins: APic (apic@apic.name)
[02:53:36] *** Joins: occivink (~occivink@2001:41d0:8:bbf::1)
[02:53:37] *** Rhys is now known as 074AABZX6
[02:53:38] *** Joins: singlerider[m] (~singlerid@2001:470:69fc:105::2fd2)
[02:53:38] *** Joins: idesmi[m] (~idesmitch@2001:470:69fc:105::f2b)
[02:53:38] *** Joins: memst[m] (~memst@2001:470:69fc:105::716)
[02:53:38] *** Joins: sixecho (~sixecho@2001:470:69fc:105::32)
[02:53:38] *** Joins: YakoYoku (~yakoyoku@2001:470:69fc:105::780)
[02:53:38] *** Joins: babyface (~babyface@user/babyface)
[02:53:38] *** Joins: MightyBOB (~MightyBOB@76.99.21.35)
[02:53:38] *** Joins: Jonno_FTW (~come@user/jonno-ftw/x-0835346)
[02:53:38] *** Joins: mthall (~quassel@2a01:4f9:4a:2f4d:ecb0:6aff:fed2:c9a1)
[02:53:38] *** Joins: tinytoast (~squeek@user/tinystoat)
[02:53:38] *** Joins: moz (~moz@dont.loginto.me)
[02:53:38] *** Joins: mindfreeze (sid250931@user/mindfreeze)
[02:53:38] *** Joins: rhys (~rhys@mill.in.net)
[02:53:38] *** Joins: auri (~admin@static.46.108.40.188.clients.your-server.de)
[02:53:48] *** Quits: dostoyevsky2 (~sck@user/dostoyevsky2) (Max SendQ exceeded)
[02:53:50] *** Quits: blue_penquin[m] (~bluepenqu@2001:470:69fc:105::829) (Max SendQ exceeded)
[02:53:59] *** Joins: dostoyev1ky2 (~sck@static.251.39.47.78.clients.your-server.de)
[02:54:03] *** Quits: DarkG (~DarkG@user/darkg) (Max SendQ exceeded)
[02:54:15] *** Quits: dostoyev1ky2 (~sck@static.251.39.47.78.clients.your-server.de) (Client Quit)
[02:54:19] *** Quits: elastic_dog (~elastic_d@2a01:118f:822:9c00:2132:cd52:1e4a:f46a) (Max SendQ exceeded)
[02:54:21] *** Joins: brb (~brb@user/brb)
[02:54:21] *** Joins: kpuc (1011@46-97-229-216.sr2.pon.net)
[02:54:21] *** Joins: koolazer (~koo@user/koolazer)
[02:54:24] *** Joins: meklu (~meklu@holmes.meklu.org)
[02:54:24] *** Joins: theracermaster (~theracerm@52.79.209.35.bc.googleusercontent.com)
[02:54:24] *** Joins: t4nk_freenode (~Go@user/t4nk)
[02:54:52] *** Quits: koolazer (~koo@user/koolazer) (Max SendQ exceeded)
[02:55:03] *** nate is now known as 048AABNUU
[02:55:03] *** Joins: sosodank (~dankamong@199.185.175.96)
[02:55:03] *** Joins: stkrdknmibalz (~test@rrcs-75-87-43-226.sw.biz.rr.com)
[02:55:03] *** Joins: Tosin (~Tosin@097-085-185-009.biz.spectrum.com)
[02:55:03] *** Joins: bittermelons (~bittermel@cpe-174-100-53-99.neo.res.rr.com)
[02:55:03] *** Joins: dock (~3252f234@ircip2.mibbit.com)
[02:55:03] *** Joins: TheLink (~TheLink@user/thelink)
[02:55:03] *** Joins: k_sze (~k_sze@mail2.kalunite.net)
[02:55:03] *** Joins: wyatt8740 (~wyatt8740@104.200.142.205)
[02:55:03] *** Joins: AbleBacon (~AbleBacon@user/AbleBacon)
[02:55:03] *** Joins: aeperezt (~Srain@190.141.20.36)
[02:55:19] *** Joins: koolazer (~koo@212.47.237.37)
[02:56:58] *** Joins: dostoyevsky2 (~sck@static.251.39.47.78.clients.your-server.de)
[02:57:06] *** Quits: Tips|Cloud (sid62231@id-62231.charlton.irccloud.com) (Ping timeout: 268 seconds)
[02:57:06] *** Quits: itok (sid418430@id-418430.charlton.irccloud.com) (Ping timeout: 268 seconds)
[02:57:30] *** Quits: alienpinecone[m] (~alienpine@2001:470:69fc:105::35bd) (Ping timeout: 240 seconds)
[02:57:34] *** Quits: igh4st[m] (~igh4stmat@2001:470:69fc:105::35ce) (Ping timeout: 244 seconds)
[02:57:34] *** Quits: jai (~darkapex@user/darkapex) (Ping timeout: 246 seconds)
[02:57:39] *** Joins: Tips|Cloud (sid62231@id-62231.charlton.irccloud.com)
[02:57:43] *** Quits: spanwysm[m] (~spanwysm@2001:470:69fc:105::e0a) (Ping timeout: 268 seconds)
[02:57:47] *** Quits: dostoyevsky2 (~sck@static.251.39.47.78.clients.your-server.de) (Client Quit)
[02:58:03] *** Quits: idesmi[m] (~idesmitch@2001:470:69fc:105::f2b) (Ping timeout: 272 seconds)
[02:58:03] *** Quits: memst[m] (~memst@2001:470:69fc:105::716) (Ping timeout: 272 seconds)
[02:58:03] *** Quits: YakoYoku (~yakoyoku@2001:470:69fc:105::780) (Ping timeout: 272 seconds)
[02:58:03] *** Quits: singlerider[m] (~singlerid@2001:470:69fc:105::2fd2) (Ping timeout: 272 seconds)
[02:58:03] *** Quits: sixecho (~sixecho@2001:470:69fc:105::32) (Ping timeout: 272 seconds)
[02:58:21] *** Joins: dostoyevsky2 (~sck@static.251.39.47.78.clients.your-server.de)
[02:58:25] *** Quits: luc65r (~luc65r@2001:470:69fc:105::ee1) (Ping timeout: 272 seconds)
[02:58:26] *** Quits: kepstin (~kepstin@user/kepstin) (Ping timeout: 272 seconds)
[02:58:26] *** Quits: rojin[m] (~rojinroyp@2001:470:69fc:105::89b) (Ping timeout: 272 seconds)
[02:58:39] *** Joins: itok (sid418430@id-418430.charlton.irccloud.com)
[03:01:18] *** Quits: ChanServ (ChanServ@services.libera.chat) (*.net *.split)
[03:01:30] *** bittermelons is now known as imuo
[03:01:34] *** Joins: DarkG (~DarkG@zeus.bnc.cakeforce.uk)
[03:01:41] *** Quits: sosodank (~dankamong@199.185.175.96) (Quit: Leaving)
[03:01:46] *** Quits: DarkG (~DarkG@zeus.bnc.cakeforce.uk) (Changing host)
[03:01:46] *** Joins: DarkG (~DarkG@user/darkg)
[03:01:57] *** Joins: ChanServ (ChanServ@services.libera.chat)
[03:01:57] *** iridium.libera.chat sets mode: +o ChanServ
[03:02:40] *** Quits: dostoyevsky2 (~sck@static.251.39.47.78.clients.your-server.de) (Client Quit)
[03:02:42] *** Joins: arcatech (~arcatech@user/arcatech)
[03:02:44] *** Joins: BtbN (btbn@ffmpeg/developer/btbn)
[03:02:47] *** Joins: nurupo (~nurupo.ga@user/nurupo)
[03:02:54] *** Joins: dostoyevsky2 (~sck@user/dostoyevsky2)
[03:03:02] *** Quits: dostoyevsky2 (~sck@user/dostoyevsky2) (Client Quit)
[03:03:29] *** Joins: dostoyevsky2 (~sck@user/dostoyevsky2)
[03:07:06] *** Joins: milkt_ (~debian@gateway/tor-sasl/milkt)
[03:07:18] *** Quits: der_richter (~Akemi@p4fde4e56.dip0.t-ipconnect.de) (Read error: Connection reset by peer)
[03:07:29] *** Joins: mickey7 (~user@user/mickey)
[03:07:58] *** Joins: der_richter (~Akemi@p4fde4e56.dip0.t-ipconnect.de)
[03:08:34] *** Quits: der_richter (~Akemi@p4fde4e56.dip0.t-ipconnect.de) (Client Quit)
[03:08:54] *** Quits: milkt (~debian@gateway/tor-sasl/milkt) (Ping timeout: 244 seconds)
[03:09:25] *** Quits: mickey (~user@user/mickey) (Ping timeout: 244 seconds)
[03:09:25] *** Quits: pong (~loop@user/pong) (Ping timeout: 244 seconds)
[03:09:26] *** mickey7 is now known as mickey
[03:09:30] *** Joins: beaver_ (~loop@user/pong)
[03:09:35] *** beaver_ is now known as pong
[03:10:52] *** Quits: mickey (~user@user/mickey) (Remote host closed the connection)
[03:10:52] *** Quits: milkt_ (~debian@gateway/tor-sasl/milkt) (Remote host closed the connection)
[03:11:07] *** Joins: mickey (~user@user/mickey)
[03:11:13] *** Joins: elastic_dog (~elastic_d@2a01:118f:822:9c00:2132:cd52:1e4a:f46a)
[03:12:05] *** Joins: milkt (~debian@gateway/tor-sasl/milkt)
[03:15:38] *** Quits: shokohsc (~shokohsc@161.88.195.77.rev.sfr.net) (Quit: The Lounge - https://thelounge.chat)
[03:16:58] *** Joins: shokohsc (~shokohsc@161.88.195.77.rev.sfr.net)
[03:18:35] *** Joins: waleee (~waleee@2001:9b0:216:8200:d457:9189:7843:1dbd)
[03:20:31] *** Joins: stevenliu (~stevenliu@ffmpeg/developer/stevenliu)
[03:21:29] *** Joins: justache (~justache@user/justache)
[03:22:05] *** Quits: x_kuru (~xkuru@user/xkuru) (Quit: Unvirtualizing)
[03:22:34] *** Joins: xkuru (~xkuru@user/xkuru)
[03:24:24] *** Joins: YuGiOhJCJ (~YuGiOhJCJ@gateway/tor-sasl/yugiohjcj)
[03:24:55] *** Quits: stevenliu (~stevenliu@ffmpeg/developer/stevenliu) (Ping timeout: 256 seconds)
[03:25:05] *** Quits: dock (~3252f234@ircip2.mibbit.com) (Quit: https://mibbit.com Online IRC Client)
[03:33:28] *** Quits: xkuru (~xkuru@user/xkuru) (Quit: Unvirtualizing)
[03:33:47] *** Joins: xkuru (~xkuru@user/xkuru)
[03:36:46] *** Quits: klaxa (~klaxa@static.175.17.76.144.clients.your-server.de) (Quit: Life's too short.)
[03:36:58] *** Joins: klaxa (~klaxa@static.175.17.76.144.clients.your-server.de)
[04:03:13] *** Quits: imuo (~bittermel@cpe-174-100-53-99.neo.res.rr.com) (Quit: Connection closed)
[04:09:57] *** Quits: aeperezt (~Srain@190.141.20.36) (Remote host closed the connection)
[04:10:24] *** Joins: admal (~admal@gateway/tor-sasl/admal)
[04:12:47] *** Joins: someuser (~user@41.239.50.164)
[04:14:07] *** Joins: betelgeuse (~john2gb@94-225-47-8.access.telenet.be)
[04:17:16] *** Quits: betelgeuse (~john2gb@94-225-47-8.access.telenet.be) (Read error: Connection reset by peer)
[04:17:56] *** Mapley is now known as Seattle
[04:18:06] *** Maple_ is now known as awoo
[04:18:29] *** Joins: betelgeuse (~john2gb@94-225-47-8.access.telenet.be)
[04:20:57] *** Quits: c_14 (~c_14@synchrony.c-14.de) (Quit: drop(c_14))
[04:21:26] *** Joins: c_14 (~c_14@synchrony.c-14.de)
[04:21:33] *** Quits: betelgeuse (~john2gb@94-225-47-8.access.telenet.be) (Read error: Connection reset by peer)
[04:22:48] *** Joins: betelgeuse (~john2gb@94-225-47-8.access.telenet.be)
[04:23:22] *** 048AABNUU is now known as synapt
[04:25:33] *** Quits: someuser (~user@41.239.50.164) (Ping timeout: 256 seconds)
[04:25:47] *** Quits: betelgeuse (~john2gb@94-225-47-8.access.telenet.be) (Read error: Connection reset by peer)
[04:27:01] *** Joins: betelgeuse (~john2gb@94-225-47-8.access.telenet.be)
[04:30:10] *** Quits: betelgeuse (~john2gb@94-225-47-8.access.telenet.be) (Read error: Connection reset by peer)
[04:31:24] *** Joins: betelgeuse (~john2gb@94-225-47-8.access.telenet.be)
[04:34:10] *** Joins: QuickHare (~QuickHare@cpc138538-newt42-2-0-cust70.19-3.cable.virginm.net)
[04:34:27] *** Quits: betelgeuse (~john2gb@94-225-47-8.access.telenet.be) (Read error: Connection reset by peer)
[04:35:11] *** Quits: Tosin (~Tosin@097-085-185-009.biz.spectrum.com) (Ping timeout: 256 seconds)
[04:35:18] <QuickHare> Hi all
[04:35:41] *** Joins: betelgeuse (~john2gb@94-225-47-8.access.telenet.be)
[04:36:49] <QuickHare> Has anyone had success with the asr filter in v4.4?
[04:38:49] *** Quits: betelgeuse (~john2gb@94-225-47-8.access.telenet.be) (Read error: Connection reset by peer)
[04:40:04] *** Joins: betelgeuse (~john2gb@94-225-47-8.access.telenet.be)
[04:43:13] *** Quits: betelgeuse (~john2gb@94-225-47-8.access.telenet.be) (Read error: Connection reset by peer)
[04:44:26] *** Joins: betelgeuse (~john2gb@94-225-47-8.access.telenet.be)
[04:44:50] *** Quits: QuickHare (~QuickHare@cpc138538-newt42-2-0-cust70.19-3.cable.virginm.net) (Quit: Connection closed)
[04:47:30] *** Quits: betelgeuse (~john2gb@94-225-47-8.access.telenet.be) (Read error: Connection reset by peer)
[04:48:44] *** Joins: betelgeuse (~john2gb@94-225-47-8.access.telenet.be)
[04:51:52] *** Quits: betelgeuse (~john2gb@94-225-47-8.access.telenet.be) (Read error: Connection reset by peer)
[04:53:06] *** Joins: betelgeuse (~john2gb@94-225-47-8.access.telenet.be)
[04:56:15] *** Quits: betelgeuse (~john2gb@94-225-47-8.access.telenet.be) (Read error: Connection reset by peer)
[04:56:22] *** Quits: amahl (~amahl@dsl-jklbng12-54fbca-64.dhcp.inet.fi) (Remote host closed the connection)
[04:57:30] *** Joins: betelgeuse (~john2gb@94-225-47-8.access.telenet.be)
[05:00:42] *** Quits: betelgeuse (~john2gb@94-225-47-8.access.telenet.be) (Read error: Connection reset by peer)
[05:01:56] *** Joins: betelgeuse (~john2gb@94-225-47-8.access.telenet.be)
[05:02:10] *** Quits: Seirdy (~Seirdy@sourcehut/user/seirdy) (Ping timeout: 265 seconds)
[05:04:02] *** Joins: Seirdy (~Seirdy@sourcehut/user/seirdy)
[05:04:57] *** Quits: betelgeuse (~john2gb@94-225-47-8.access.telenet.be) (Read error: Connection reset by peer)
[05:06:12] *** Joins: betelgeuse (~john2gb@94-225-47-8.access.telenet.be)
[05:09:22] *** Quits: betelgeuse (~john2gb@94-225-47-8.access.telenet.be) (Read error: Connection reset by peer)
[05:10:35] *** Joins: betelgeuse (~john2gb@94-225-47-8.access.telenet.be)
[05:13:32] *** Joins: Fohsap (~Muimi@113.235.183.4)
[05:13:40] *** Quits: betelgeuse (~john2gb@94-225-47-8.access.telenet.be) (Read error: Connection reset by peer)
[05:14:42] *** Quits: waleee (~waleee@2001:9b0:216:8200:d457:9189:7843:1dbd) (Ping timeout: 240 seconds)
[05:14:53] *** Joins: betelgeuse (~john2gb@94-225-47-8.access.telenet.be)
[05:18:04] *** Quits: betelgeuse (~john2gb@94-225-47-8.access.telenet.be) (Read error: Connection reset by peer)
[05:19:19] *** Joins: betelgeuse (~john2gb@94-225-47-8.access.telenet.be)
[05:22:21] *** Quits: betelgeuse (~john2gb@94-225-47-8.access.telenet.be) (Read error: Connection reset by peer)
[05:23:36] *** Joins: betelgeuse (~john2gb@94-225-47-8.access.telenet.be)
[05:26:43] *** Quits: betelgeuse (~john2gb@94-225-47-8.access.telenet.be) (Read error: Connection reset by peer)
[05:27:59] *** Joins: betelgeuse (~john2gb@94-225-47-8.access.telenet.be)
[05:30:25] *** Quits: vlm (~vlm@user/vlm) (Quit: "")
[05:31:16] *** Quits: betelgeuse (~john2gb@94-225-47-8.access.telenet.be) (Read error: Connection reset by peer)
[05:32:29] *** Joins: betelgeuse (~john2gb@94-225-47-8.access.telenet.be)
[05:35:41] *** Quits: betelgeuse (~john2gb@94-225-47-8.access.telenet.be) (Read error: Connection reset by peer)
[05:36:57] *** Joins: betelgeuse (~john2gb@94-225-47-8.access.telenet.be)
[05:39:43] *** Joins: vlm (~vlm@user/vlm)
[05:39:56] *** Quits: betelgeuse (~john2gb@94-225-47-8.access.telenet.be) (Read error: Connection reset by peer)
[05:41:11] *** Joins: betelgeuse (~john2gb@94-225-47-8.access.telenet.be)
[05:44:14] *** Quits: betelgeuse (~john2gb@94-225-47-8.access.telenet.be) (Read error: Connection reset by peer)
[05:45:28] *** Joins: betelgeuse (~john2gb@94-225-47-8.access.telenet.be)
[05:45:35] *** Quits: babyface (~babyface@user/babyface) (Remote host closed the connection)
[05:46:49] *** Joins: babyface (~babyface@user/babyface)
[05:48:28] *** Quits: betelgeuse (~john2gb@94-225-47-8.access.telenet.be) (Read error: Connection reset by peer)
[05:49:42] *** Joins: betelgeuse (~john2gb@94-225-47-8.access.telenet.be)
[05:50:42] *** | is now known as \
[05:52:51] *** Quits: betelgeuse (~john2gb@94-225-47-8.access.telenet.be) (Read error: Connection reset by peer)
[05:54:05] *** Joins: betelgeuse (~john2gb@94-225-47-8.access.telenet.be)
[05:54:46] *** Joins: stevenliu (~stevenliu@ffmpeg/developer/stevenliu)
[05:56:46] *** Quits: stevenliu (~stevenliu@ffmpeg/developer/stevenliu) (Read error: Connection reset by peer)
[05:56:53] *** Quits: betelgeuse (~john2gb@94-225-47-8.access.telenet.be) (Read error: Connection reset by peer)
[05:58:09] *** Joins: betelgeuse (~john2gb@94-225-47-8.access.telenet.be)
[06:01:08] *** Quits: betelgeuse (~john2gb@94-225-47-8.access.telenet.be) (Read error: Connection reset by peer)
[06:02:24] *** Joins: betelgeuse (~john2gb@94-225-47-8.access.telenet.be)
[06:04:05] *** Joins: Media_Thor (~Listen@xplr-208-114-129-18.xplornet.com)
[06:05:14] *** Joins: anewbieffmpeg (~anewbieff@82-64-99-84.subs.proxad.net)
[06:05:31] <anewbieffmpeg> hello
[06:05:37] *** Quits: betelgeuse (~john2gb@94-225-47-8.access.telenet.be) (Read error: Connection reset by peer)
[06:06:50] *** Joins: betelgeuse (~john2gb@94-225-47-8.access.telenet.be)
[06:08:46] <anewbieffmpeg> ffmpeg  can be use inside a software developp in c++ right ?
[06:08:47] *** Quits: babyface (~babyface@user/babyface) (Quit:  )
[06:08:52] *** Quits: anewbieffmpeg (~anewbieff@82-64-99-84.subs.proxad.net) (Client Quit)
[06:09:01] *** Joins: babyface (~babyface@user/babyface)
[06:09:09] *** Joins: anewbieffmpeg (~anewbieff@82-64-99-84.subs.proxad.net)
[06:09:54] *** Quits: betelgeuse (~john2gb@94-225-47-8.access.telenet.be) (Read error: Connection reset by peer)
[06:11:07] *** Joins: betelgeuse (~john2gb@94-225-47-8.access.telenet.be)
[06:14:13] *** Quits: betelgeuse (~john2gb@94-225-47-8.access.telenet.be) (Read error: Connection reset by peer)
[06:15:29] *** Joins: betelgeuse (~john2gb@94-225-47-8.access.telenet.be)
[06:16:22] *** Quits: anewbieffmpeg (~anewbieff@82-64-99-84.subs.proxad.net) (Ping timeout: 246 seconds)
[06:17:18] *** Joins: anewbieffmpeg (~anewbieff@82-64-99-84.subs.proxad.net)
[06:18:39] *** Quits: betelgeuse (~john2gb@94-225-47-8.access.telenet.be) (Read error: Connection reset by peer)
[06:19:54] *** Joins: betelgeuse (~john2gb@94-225-47-8.access.telenet.be)
[06:19:58] *** Joins: stevenliu (~stevenliu@ffmpeg/developer/stevenliu)
[06:20:26] *** Quits: YuGiOhJCJ (~YuGiOhJCJ@gateway/tor-sasl/yugiohjcj) (Remote host closed the connection)
[06:20:57] *** Joins: YuGiOhJCJ (~YuGiOhJCJ@gateway/tor-sasl/yugiohjcj)
[06:22:58] *** Quits: betelgeuse (~john2gb@94-225-47-8.access.telenet.be) (Read error: Connection reset by peer)
[06:24:14] *** Joins: betelgeuse (~john2gb@94-225-47-8.access.telenet.be)
[06:24:23] *** Joins: jerome- (~jerome@78.193.84.130)
[06:27:14] *** Quits: betelgeuse (~john2gb@94-225-47-8.access.telenet.be) (Read error: Connection reset by peer)
[06:27:50] <znf> anewbieffmpeg, yes
[06:28:27] *** Joins: betelgeuse (~john2gb@94-225-47-8.access.telenet.be)
[06:31:09] <anewbieffmpeg> thx
[06:31:18] <anewbieffmpeg> i will try that
[06:31:31] <anewbieffmpeg> do you know if there is a rust binding ?
[06:31:44] *** Quits: betelgeuse (~john2gb@94-225-47-8.access.telenet.be) (Read error: Connection reset by peer)
[06:32:59] *** Joins: betelgeuse (~john2gb@94-225-47-8.access.telenet.be)
[06:33:50] *** Quits: xkuru (~xkuru@user/xkuru) (Read error: Connection reset by peer)
[06:35:57] *** Quits: betelgeuse (~john2gb@94-225-47-8.access.telenet.be) (Read error: Connection reset by peer)
[06:37:11] *** Joins: betelgeuse (~john2gb@94-225-47-8.access.telenet.be)
[06:40:19] *** Quits: betelgeuse (~john2gb@94-225-47-8.access.telenet.be) (Read error: Connection reset by peer)
[06:41:33] *** Joins: betelgeuse (~john2gb@94-225-47-8.access.telenet.be)
[06:44:20] *** Quits: betelgeuse (~john2gb@94-225-47-8.access.telenet.be) (Read error: Connection reset by peer)
[06:45:35] *** Joins: betelgeuse (~john2gb@94-225-47-8.access.telenet.be)
[06:47:21] <znf> not that I know of, no
[06:48:42] *** Quits: betelgeuse (~john2gb@94-225-47-8.access.telenet.be) (Read error: Connection reset by peer)
[06:49:56] *** Joins: betelgeuse (~john2gb@94-225-47-8.access.telenet.be)
[06:53:15] *** Quits: betelgeuse (~john2gb@94-225-47-8.access.telenet.be) (Read error: Connection reset by peer)
[06:54:29] *** Joins: betelgeuse (~john2gb@94-225-47-8.access.telenet.be)
[06:57:09] *** Joins: TheAMM (~AMM@user/amm)
[06:57:09] *** Quits: AMM (~AMM@user/amm) (Killed (NickServ (GHOST command used by TheAMM)))
[06:57:30] *** Quits: betelgeuse (~john2gb@94-225-47-8.access.telenet.be) (Read error: Connection reset by peer)
[06:58:44] *** Joins: betelgeuse (~john2gb@94-225-47-8.access.telenet.be)
[07:01:52] *** Quits: betelgeuse (~john2gb@94-225-47-8.access.telenet.be) (Read error: Connection reset by peer)
[07:03:07] *** Joins: betelgeuse (~john2gb@94-225-47-8.access.telenet.be)
[07:06:05] *** Quits: betelgeuse (~john2gb@94-225-47-8.access.telenet.be) (Read error: Connection reset by peer)
[07:07:20] *** Joins: betelgeuse (~john2gb@94-225-47-8.access.telenet.be)
[07:10:31] *** Quits: betelgeuse (~john2gb@94-225-47-8.access.telenet.be) (Read error: Connection reset by peer)
[07:11:44] *** Joins: betelgeuse (~john2gb@94-225-47-8.access.telenet.be)
[07:12:54] <anewbieffmpeg> thx
[07:14:22] <anewbieffmpeg> i will try that https://lib.rs/crates/ffmpeg
[07:14:58] *** Quits: betelgeuse (~john2gb@94-225-47-8.access.telenet.be) (Read error: Connection reset by peer)
[07:15:03] *** Joins: jos2 (~jos3@dyndsl-091-248-048-126.ewe-ip-backbone.de)
[07:15:05] *** Quits: anewbieffmpeg (~anewbieff@82-64-99-84.subs.proxad.net) (Quit: Connection closed)
[07:16:13] *** Joins: betelgeuse (~john2gb@94-225-47-8.access.telenet.be)
[07:17:45] *** Joins: Flole_ (~Flole@ip4d169d3a.dynamic.kabel-deutschland.de)
[07:18:26] *** Quits: jos1 (~jos3@dyndsl-091-096-036-108.ewe-ip-backbone.de) (Ping timeout: 250 seconds)
[07:19:20] *** Quits: betelgeuse (~john2gb@94-225-47-8.access.telenet.be) (Read error: Connection reset by peer)
[07:20:12] <znf> ah, it's a wrapper
[07:20:35] *** Joins: betelgeuse (~john2gb@94-225-47-8.access.telenet.be)
[07:21:10] *** Quits: Manni__ (~Flole@94.31.97.37) (Ping timeout: 258 seconds)
[07:23:41] *** Quits: betelgeuse (~john2gb@94-225-47-8.access.telenet.be) (Read error: Connection reset by peer)
[07:24:56] *** Joins: betelgeuse (~john2gb@94-225-47-8.access.telenet.be)
[07:28:05] *** Quits: betelgeuse (~john2gb@94-225-47-8.access.telenet.be) (Read error: Connection reset by peer)
[07:29:19] *** Joins: betelgeuse (~john2gb@94-225-47-8.access.telenet.be)
[07:29:26] *** Joins: blue_penquin (uid505269@id-505269.brockwell.irccloud.com)
[07:30:01] *** Quits: haasn (~nand@haasn.dev) (Quit: ZNC 1.7.5+deb4 - https://znc.in)
[07:31:28] *** Joins: haasn (~nand@haasn.dev)
[07:32:30] *** Quits: betelgeuse (~john2gb@94-225-47-8.access.telenet.be) (Read error: Connection reset by peer)
[07:33:43] *** Joins: betelgeuse (~john2gb@94-225-47-8.access.telenet.be)
[07:36:53] *** Quits: betelgeuse (~john2gb@94-225-47-8.access.telenet.be) (Read error: Connection reset by peer)
[07:38:07] *** Joins: betelgeuse (~john2gb@94-225-47-8.access.telenet.be)
[07:41:09] *** Quits: betelgeuse (~john2gb@94-225-47-8.access.telenet.be) (Read error: Connection reset by peer)
[07:42:23] *** Joins: betelgeuse (~john2gb@94-225-47-8.access.telenet.be)
[07:45:16] <Hello71> that's what "binding" means
[07:45:23] *** Quits: betelgeuse (~john2gb@94-225-47-8.access.telenet.be) (Read error: Connection reset by peer)
[07:46:37] *** Joins: betelgeuse (~john2gb@94-225-47-8.access.telenet.be)
[07:48:12] *** Joins: aquijoule_ (~richbridg@213-225-12-210.nat.highway.a1.net)
[07:48:45] *** Quits: microchip_ (~neutrino@user/microchip/x-0766185) (Quit: There is no spoon!)
[07:49:40] *** Quits: betelgeuse (~john2gb@94-225-47-8.access.telenet.be) (Read error: Connection reset by peer)
[07:50:41] *** Quits: aquijoule__ (~richbridg@213-225-12-210.nat.highway.a1.net) (Ping timeout: 258 seconds)
[07:50:55] *** Joins: betelgeuse (~john2gb@94-225-47-8.access.telenet.be)
[07:54:02] *** Quits: betelgeuse (~john2gb@94-225-47-8.access.telenet.be) (Read error: Connection reset by peer)
[07:55:16] *** Joins: betelgeuse (~john2gb@94-225-47-8.access.telenet.be)
[07:58:36] *** Quits: betelgeuse (~john2gb@94-225-47-8.access.telenet.be) (Remote host closed the connection)
[07:59:50] *** Joins: betelgeuse (~john2gb@94-225-47-8.access.telenet.be)
[08:03:07] *** Quits: betelgeuse (~john2gb@94-225-47-8.access.telenet.be) (Read error: Connection reset by peer)
[08:04:21] *** Joins: betelgeuse (~john2gb@94-225-47-8.access.telenet.be)
[08:07:03] *** Quits: Vonter (~Vonter@124.123.104.41) (Quit: WeeChat 3.1)
[08:07:36] *** Quits: betelgeuse (~john2gb@94-225-47-8.access.telenet.be) (Read error: Connection reset by peer)
[08:08:51] *** Joins: betelgeuse (~john2gb@94-225-47-8.access.telenet.be)
[08:09:25] *** Joins: Vonter (~Vonter@user/vonter)
[08:12:04] *** Quits: betelgeuse (~john2gb@94-225-47-8.access.telenet.be) (Read error: Connection reset by peer)
[08:12:54] *** Quits: pntaylor (~quassel@ppp121-45-199-192.cbr-trn-nor-bras38.tpg.internode.on.net) (Ping timeout: 252 seconds)
[08:13:19] *** Joins: betelgeuse (~john2gb@94-225-47-8.access.telenet.be)
[08:13:36] *** Quits: admal (~admal@gateway/tor-sasl/admal) (Quit: leaving)
[08:16:30] *** Joins: pntaylor (~quassel@ppp121-45-196-59.cbr-trn-nor-bras38.tpg.internode.on.net)
[08:16:33] *** Quits: betelgeuse (~john2gb@94-225-47-8.access.telenet.be) (Read error: Connection reset by peer)
[08:17:47] *** Joins: betelgeuse (~john2gb@94-225-47-8.access.telenet.be)
[08:20:50] *** Quits: betelgeuse (~john2gb@94-225-47-8.access.telenet.be) (Read error: Connection reset by peer)
[08:22:05] *** Joins: betelgeuse (~john2gb@94-225-47-8.access.telenet.be)
[08:25:09] *** Quits: betelgeuse (~john2gb@94-225-47-8.access.telenet.be) (Read error: Connection reset by peer)
[08:26:24] *** Joins: betelgeuse (~john2gb@94-225-47-8.access.telenet.be)
[08:26:31] *** Joins: bencc1_ (~bencc1@77.137.147.137)
[08:28:31] *** Quits: stevenliu (~stevenliu@ffmpeg/developer/stevenliu) (Remote host closed the connection)
[08:28:59] *** Joins: microchip_ (~neutrino@user/microchip/x-0766185)
[08:29:32] *** Quits: betelgeuse (~john2gb@94-225-47-8.access.telenet.be) (Read error: Connection reset by peer)
[08:30:08] *** Quits: bencc1__ (~bencc1@5.29.8.112) (Ping timeout: 252 seconds)
[08:30:47] *** Joins: betelgeuse (~john2gb@94-225-47-8.access.telenet.be)
[08:31:27] *** Joins: bencc1__ (~bencc1@5.29.61.245)
[08:33:39] *** Quits: betelgeuse (~john2gb@94-225-47-8.access.telenet.be) (Read error: Connection reset by peer)
[08:33:54] *** Quits: bencc1_ (~bencc1@77.137.147.137) (Ping timeout: 240 seconds)
[08:34:53] *** Joins: betelgeuse (~john2gb@94-225-47-8.access.telenet.be)
[08:35:50] *** Quits: justache (~justache@user/justache) (Read error: Connection reset by peer)
[08:36:59] *** Joins: justache (~justache@user/justache)
[08:38:10] *** Quits: betelgeuse (~john2gb@94-225-47-8.access.telenet.be) (Read error: Connection reset by peer)
[08:39:24] *** Joins: betelgeuse (~john2gb@94-225-47-8.access.telenet.be)
[08:40:23] *** Quits: AbleBacon (~AbleBacon@user/AbleBacon) (Read error: Connection reset by peer)
[08:42:33] *** Quits: betelgeuse (~john2gb@94-225-47-8.access.telenet.be) (Read error: Connection reset by peer)
[08:43:49] *** Joins: betelgeuse (~john2gb@94-225-47-8.access.telenet.be)
[08:44:29] <fltrz> JEEB, the resampling filter coefficients and phases are answered by pages 371-379 D.3.31 "Chroma resampling filter hint SEI message semantics" (unless its not illegal in the standard to use YUV420 without providing these hints)
[08:46:50] *** Quits: betelgeuse (~john2gb@94-225-47-8.access.telenet.be) (Read error: Connection reset by peer)
[08:48:05] *** Joins: betelgeuse (~john2gb@94-225-47-8.access.telenet.be)
[08:51:06] *** Quits: betelgeuse (~john2gb@94-225-47-8.access.telenet.be) (Read error: Connection reset by peer)
[08:52:21] *** Joins: betelgeuse (~john2gb@94-225-47-8.access.telenet.be)
[08:54:02] *** Joins: stevenliu (~stevenliu@ffmpeg/developer/stevenliu)
[08:55:31] *** Quits: betelgeuse (~john2gb@94-225-47-8.access.telenet.be) (Read error: Connection reset by peer)
[08:56:44] *** Joins: betelgeuse (~john2gb@94-225-47-8.access.telenet.be)
[08:59:15] *** Quits: arcatech (~arcatech@user/arcatech) (Ping timeout: 256 seconds)
[09:00:04] *** Quits: betelgeuse (~john2gb@94-225-47-8.access.telenet.be) (Read error: Connection reset by peer)
[09:01:18] *** Joins: betelgeuse (~john2gb@94-225-47-8.access.telenet.be)
[09:04:33] *** Quits: betelgeuse (~john2gb@94-225-47-8.access.telenet.be) (Read error: Connection reset by peer)
[09:05:47] *** Joins: betelgeuse (~john2gb@94-225-47-8.access.telenet.be)
[09:06:30] *** Quits: stevenliu (~stevenliu@ffmpeg/developer/stevenliu) (Remote host closed the connection)
[09:08:58] *** Quits: betelgeuse (~john2gb@94-225-47-8.access.telenet.be) (Read error: Connection reset by peer)
[09:10:12] *** Joins: betelgeuse (~john2gb@94-225-47-8.access.telenet.be)
[09:12:35] *** Joins: alienpinecone[m] (~alienpine@2001:470:69fc:105::35bd)
[09:13:13] *** Quits: betelgeuse (~john2gb@94-225-47-8.access.telenet.be) (Read error: Connection reset by peer)
[09:14:27] *** Joins: betelgeuse (~john2gb@94-225-47-8.access.telenet.be)
[09:17:39] *** Quits: betelgeuse (~john2gb@94-225-47-8.access.telenet.be) (Read error: Connection reset by peer)
[09:18:54] *** Joins: betelgeuse (~john2gb@94-225-47-8.access.telenet.be)
[09:22:02] *** Quits: betelgeuse (~john2gb@94-225-47-8.access.telenet.be) (Read error: Connection reset by peer)
[09:22:48] *** Joins: stevenliu (~stevenliu@ffmpeg/developer/stevenliu)
[09:23:15] *** Joins: betelgeuse (~john2gb@94-225-47-8.access.telenet.be)
[09:26:23] *** Quits: stevenliu (~stevenliu@ffmpeg/developer/stevenliu) (Read error: Connection reset by peer)
[09:26:23] *** Quits: betelgeuse (~john2gb@94-225-47-8.access.telenet.be) (Read error: Connection reset by peer)
[09:27:36] *** Joins: betelgeuse (~john2gb@94-225-47-8.access.telenet.be)
[09:30:52] *** Quits: betelgeuse (~john2gb@94-225-47-8.access.telenet.be) (Read error: Connection reset by peer)
[09:31:21] *** Quits: YuGiOhJCJ (~YuGiOhJCJ@gateway/tor-sasl/yugiohjcj) (Quit: YuGiOhJCJ)
[09:32:07] *** Joins: betelgeuse (~john2gb@94-225-47-8.access.telenet.be)
[09:35:10] *** Quits: betelgeuse (~john2gb@94-225-47-8.access.telenet.be) (Read error: Connection reset by peer)
[09:36:24] *** Joins: betelgeuse (~john2gb@94-225-47-8.access.telenet.be)
[09:39:36] *** Quits: betelgeuse (~john2gb@94-225-47-8.access.telenet.be) (Read error: Connection reset by peer)
[09:40:50] *** Joins: betelgeuse (~john2gb@94-225-47-8.access.telenet.be)
[09:43:43] *** Quits: betelgeuse (~john2gb@94-225-47-8.access.telenet.be) (Read error: Connection reset by peer)
[09:44:13] *** Joins: stevenliu (~stevenliu@ffmpeg/developer/stevenliu)
[09:44:58] *** Joins: betelgeuse (~john2gb@94-225-47-8.access.telenet.be)
[09:48:06] *** Quits: betelgeuse (~john2gb@94-225-47-8.access.telenet.be) (Read error: Connection reset by peer)
[09:49:21] *** Joins: betelgeuse (~john2gb@94-225-47-8.access.telenet.be)
[09:52:27] *** Quits: betelgeuse (~john2gb@94-225-47-8.access.telenet.be) (Read error: Connection reset by peer)
[09:53:41] *** Joins: betelgeuse (~john2gb@94-225-47-8.access.telenet.be)
[09:56:52] *** Quits: betelgeuse (~john2gb@94-225-47-8.access.telenet.be) (Read error: Connection reset by peer)
[09:58:07] *** Joins: betelgeuse (~john2gb@94-225-47-8.access.telenet.be)
[10:01:19] *** Quits: betelgeuse (~john2gb@94-225-47-8.access.telenet.be) (Read error: Connection reset by peer)
[10:02:32] *** Joins: betelgeuse (~john2gb@94-225-47-8.access.telenet.be)
[10:05:46] *** Quits: betelgeuse (~john2gb@94-225-47-8.access.telenet.be) (Read error: Connection reset by peer)
[10:07:01] *** Joins: betelgeuse (~john2gb@94-225-47-8.access.telenet.be)
[10:10:09] *** Joins: Flabb (~Flabb@89.169.84.117)
[10:10:15] *** Quits: betelgeuse (~john2gb@94-225-47-8.access.telenet.be) (Read error: Connection reset by peer)
[10:10:27] *** Quits: Media_Thor (~Listen@xplr-208-114-129-18.xplornet.com) (Read error: Connection reset by peer)
[10:11:28] *** Joins: betelgeuse (~john2gb@94-225-47-8.access.telenet.be)
[10:13:12] *** Joins: der_richter (~Akemi@p4fde4e56.dip0.t-ipconnect.de)
[10:14:34] *** Quits: betelgeuse (~john2gb@94-225-47-8.access.telenet.be) (Read error: Connection reset by peer)
[10:15:48] *** Joins: betelgeuse (~john2gb@94-225-47-8.access.telenet.be)
[10:18:51] *** Quits: betelgeuse (~john2gb@94-225-47-8.access.telenet.be) (Read error: Connection reset by peer)
[10:19:26] *** Quits: zmt01 (~zmt00@user/zmt00) (Quit: Gone.)
[10:20:07] *** Joins: betelgeuse (~john2gb@94-225-47-8.access.telenet.be)
[10:21:27] *** Quits: microchip_ (~neutrino@user/microchip/x-0766185) (Quit: There is no spoon!)
[10:23:04] *** Quits: betelgeuse (~john2gb@94-225-47-8.access.telenet.be) (Read error: Connection reset by peer)
[10:24:18] *** Joins: betelgeuse (~john2gb@94-225-47-8.access.telenet.be)
[10:27:22] *** Quits: betelgeuse (~john2gb@94-225-47-8.access.telenet.be) (Read error: Connection reset by peer)
[10:28:36] *** Joins: betelgeuse (~john2gb@94-225-47-8.access.telenet.be)
[10:31:46] *** Quits: betelgeuse (~john2gb@94-225-47-8.access.telenet.be) (Read error: Connection reset by peer)
[10:33:00] *** Joins: betelgeuse (~john2gb@94-225-47-8.access.telenet.be)
[10:33:58] *** Joins: cmdrmoozy (~ajr@c-73-15-53-187.hsd1.ca.comcast.net)
[10:36:06] *** Quits: betelgeuse (~john2gb@94-225-47-8.access.telenet.be) (Read error: Connection reset by peer)
[10:37:21] *** Joins: betelgeuse (~john2gb@94-225-47-8.access.telenet.be)
[10:40:36] *** Quits: betelgeuse (~john2gb@94-225-47-8.access.telenet.be) (Read error: Connection reset by peer)
[10:41:50] *** Joins: betelgeuse (~john2gb@94-225-47-8.access.telenet.be)
[10:44:55] *** Quits: betelgeuse (~john2gb@94-225-47-8.access.telenet.be) (Read error: Connection reset by peer)
[10:46:09] *** Joins: betelgeuse (~john2gb@94-225-47-8.access.telenet.be)
[10:46:30] *** Joins: bzt (~bzt@109.69.116.113)
[10:46:38] <bzt> Hi
[10:47:37] <bzt> I have a question about transcode.c in the examples folder in the source tree. Not sure where this question belongs, because it's not about using ffmpeg, but neither about integrating lbav integration nor lib development...
[10:49:03] *** Quits: betelgeuse (~john2gb@94-225-47-8.access.telenet.be) (Read error: Connection reset by peer)
[10:50:19] *** Joins: betelgeuse (~john2gb@94-225-47-8.access.telenet.be)
[10:53:27] *** Quits: betelgeuse (~john2gb@94-225-47-8.access.telenet.be) (Read error: Connection reset by peer)
[10:54:42] *** Joins: betelgeuse (~john2gb@94-225-47-8.access.telenet.be)
[10:55:08] <cmdrmoozy> Hi, I'm trying to build a thing where a Raspberry Pi hosts a webcam stream via HTTP, with ldash and dash.js... The problem I have is, when I do hardware h264 encoding with "-c:v h264_v4l2m2m", the thing ffmpeg emits seems to be video/mp4;codecs="avc1", and I guess common browsers can't play h264/avc1 due to some patent nonsense or something. So my question is, is it possible to tell h264_v4l2m2m to use
[10:55:15] <cmdrmoozy> a different codec, or should I give up trying to get h264 to work in browsers and just use vp9?
[10:55:46] *** Quits: stevenm_ (~stevenm@stevenm.keele.netcentral.co.uk) (Changing host)
[10:55:46] *** Joins: stevenm_ (~stevenm@user/stevenm)
[10:55:46] <cmdrmoozy> (Sorry, I realize this is only peripherally ffmpeg related... feel free to tell me to go away if it's too off topic :P )
[10:56:35] *** Joins: microchip_ (~neutrino@user/microchip/x-0766185)
[10:57:53] *** Quits: betelgeuse (~john2gb@94-225-47-8.access.telenet.be) (Read error: Connection reset by peer)
[10:58:55] *** Quits: microchip_ (~neutrino@user/microchip/x-0766185) (Client Quit)
[10:59:06] *** Joins: betelgeuse (~john2gb@94-225-47-8.access.telenet.be)
[11:02:14] *** Quits: betelgeuse (~john2gb@94-225-47-8.access.telenet.be) (Read error: Connection reset by peer)
[11:03:29] *** Joins: betelgeuse (~john2gb@94-225-47-8.access.telenet.be)
[11:06:35] *** Quits: betelgeuse (~john2gb@94-225-47-8.access.telenet.be) (Read error: Connection reset by peer)
[11:07:49] *** Joins: betelgeuse (~john2gb@94-225-47-8.access.telenet.be)
[11:10:45] *** Joins: linjie (~linjie@58.247.210.251)
[11:11:08] *** Quits: betelgeuse (~john2gb@94-225-47-8.access.telenet.be) (Read error: Connection reset by peer)
[11:12:23] *** Joins: betelgeuse (~john2gb@94-225-47-8.access.telenet.be)
[11:14:03] *** Joins: microchip_ (~neutrino@user/microchip/x-0766185)
[11:15:18] *** Quits: linjie (~linjie@58.247.210.251) (Ping timeout: 265 seconds)
[11:15:29] *** Quits: betelgeuse (~john2gb@94-225-47-8.access.telenet.be) (Read error: Connection reset by peer)
[11:16:20] *** Quits: qwedfg (~qwedfg@user/qwedfg) (Read error: Connection reset by peer)
[11:16:44] *** Joins: betelgeuse (~john2gb@94-225-47-8.access.telenet.be)
[11:16:48] *** Quits: cmdrmoozy (~ajr@c-73-15-53-187.hsd1.ca.comcast.net) (Quit: leaving)
[11:20:00] *** Quits: betelgeuse (~john2gb@94-225-47-8.access.telenet.be) (Read error: Connection reset by peer)
[11:21:15] *** Joins: betelgeuse (~john2gb@94-225-47-8.access.telenet.be)
[11:24:25] *** Quits: TanoMarcelo (~TanoMarce@179.63.242.126) (Quit: WeeChat 3.1)
[11:24:29] *** Quits: betelgeuse (~john2gb@94-225-47-8.access.telenet.be) (Read error: Connection reset by peer)
[11:25:45] *** Joins: betelgeuse (~john2gb@94-225-47-8.access.telenet.be)
[11:28:08] *** Quits: bzt (~bzt@109.69.116.113) (Quit: Client closed)
[11:29:05] *** Quits: betelgeuse (~john2gb@94-225-47-8.access.telenet.be) (Read error: Connection reset by peer)
[11:30:20] *** Joins: betelgeuse (~john2gb@94-225-47-8.access.telenet.be)
[11:30:23] *** Joins: DaxxPLPL (~DaxxPLPL@238.245.40.164-rev.hti.pl)
[11:31:14] <DaxxPLPL> Hello is it possible to use in scale filter w='some_calculation':h='max(-1, 2)'
[11:31:25] <DaxxPLPL> where I want to have h='max(-1, 2)' - means adujsted to 'w' parameter, but mininum value is 2
[11:33:21] *** Quits: betelgeuse (~john2gb@94-225-47-8.access.telenet.be) (Read error: Connection reset by peer)
[11:34:03] *** Joins: stevenm__ (~stevenm@stevenm.keele.netcentral.co.uk)
[11:34:08] *** Quits: stevenm_ (~stevenm@user/stevenm) (Read error: Connection reset by peer)
[11:34:37] *** Joins: betelgeuse (~john2gb@94-225-47-8.access.telenet.be)
[11:37:44] *** Quits: betelgeuse (~john2gb@94-225-47-8.access.telenet.be) (Read error: Connection reset by peer)
[11:38:59] *** Joins: betelgeuse (~john2gb@94-225-47-8.access.telenet.be)
[11:39:53] *** Quits: stevenm__ (~stevenm@stevenm.keele.netcentral.co.uk) (Changing host)
[11:39:53] *** Joins: stevenm__ (~stevenm@user/stevenm)
[11:42:12] *** Quits: betelgeuse (~john2gb@94-225-47-8.access.telenet.be) (Read error: Connection reset by peer)
[11:43:26] *** Joins: betelgeuse (~john2gb@94-225-47-8.access.telenet.be)
[11:43:40] *** Quits: betelgeuse (~john2gb@94-225-47-8.access.telenet.be) (K-Lined)
[11:45:20] *** Joins: Volgaar (~volgaar@104.66.13.93.rev.sfr.net)
[11:45:46] *** Joins: j0han (~johan@c83-250-125-192.bredband.tele2.se)
[11:46:14] *** Quits: keypusher (keypusher@user/keypusher) (Ping timeout: 265 seconds)
[11:46:37] *** Joins: qwedfg (~qwedfg@user/qwedfg)
[12:03:12] *** Quits: stkrdknmibalz (~test@rrcs-75-87-43-226.sw.biz.rr.com) (Quit: WeeChat 3.0.1)
[12:08:18] *** Joins: shell58 (~shell@119.61.19.234)
[12:08:45] *** Quits: shell58 (~shell@119.61.19.234) (Client Quit)
[12:21:01] <alcohol> i'm using ffmpeg segment filter to capture a rtsp stream from an ipcamera and record in chunks of 15 minutes. i now have a range of such chunks that i want to merge into one file (and speed it up afterwards/at the same time). i tried using concat, but that fails because of pts/dts issues which i don't comprehend. someone told me to reset them, but i can't for the life of my figure out how to do
[12:21:02] <alcohol> that :-/. any pointers?
[12:23:17] *** Quits: DaxxPLPL (~DaxxPLPL@238.245.40.164-rev.hti.pl) (Quit: Connection closed)
[12:27:32] *** TheAMM is now known as AMM
[12:32:20] *** Joins: TheAMM (~AMM@user/amm)
[12:32:20] *** Quits: AMM (~AMM@user/amm) (Killed (NickServ (GHOST command used by TheAMM)))
[12:32:38] *** TheAMM is now known as AMM
[12:36:46] *** Quits: j0han (~johan@c83-250-125-192.bredband.tele2.se) (Quit: leaving)
[12:38:39] *** Quits: Fohsap (~Muimi@113.235.183.4) (Remote host closed the connection)
[12:40:33] *** Quits: aquijoule_ (~richbridg@213-225-12-210.nat.highway.a1.net) (Quit: Leaving)
[12:40:48] *** Joins: aquijoule_ (~richbridg@213-225-12-210.nat.highway.a1.net)
[12:48:18] *** Joins: snikulov (~snikulov@109.252.86.189)
[12:48:25] *** Joins: Nact (~l@host-85-27-124-155.dynamic.voo.be)
[12:57:01] *** Joins: therobin_ (~UserNick@216.154.35.64)
[12:59:10] *** Joins: mithodin (~mithodin@193.30.133.7)
[13:01:23] *** Quits: therobin (~UserNick@2607:f2c0:920b:aa00:9c6d:7aef:e17:584) (Ping timeout: 272 seconds)
[13:01:27] *** therobin_ is now known as therobin
[13:04:30] <mithodin> Cheers! I'm trying to build a complex filter which uses both opencl hardware device and vaapi device. Basically, I want to do some processing with opencl and then use vaapi to encode.
[13:04:44] *** Quits: microchip_ (~neutrino@user/microchip/x-0766185) (Quit: There is no spoon!)
[13:05:18] <mithodin> the opencl filter works fine, see here: https://pastebin.com/q7KH53T7
[13:07:33] <mithodin> however, as soon as I add the initialization for vaapi, I get the error "A hardware device reference is required to upload frames to." As far as I understand, I should be able to specify the device using derive_device, but I can't figure out the syntax
[13:08:47] <elenril> what is your setup (hw+drivers)
[13:09:12] <elenril> seems mapping between opencl and vaapi works only in some cases
[13:09:58] <mithodin> Intel i965
[13:10:02] <mithodin> on linux
[13:13:02] <mithodin> vainfo: Driver version: Intel i965 driver for Intel(R) Coffee Lake - 2.4.1
[13:25:58] <elenril> fun, seems stock debian ffmpeg is not built to support that
[13:26:18] *** Quits: der_richter (~Akemi@p4fde4e56.dip0.t-ipconnect.de) (Read error: Connection reset by peer)
[13:26:25] <mithodin> I'm on void linux, not sure how different the build is
[13:26:35] *** Joins: der_richter (~Akemi@p4fde4e56.dip0.t-ipconnect.de)
[13:27:10] <mithodin> So what I've figured out in the meantime is, that I can specify the opencl device with "-filter_hw_device", but then how do I move to vaapi for the encoding?
[13:28:07] <elenril> I think you need to create a vaapi device, and then derive an opencl device from that
[13:29:06] <mithodin> oh, with the derive_device option?
[13:29:13] <mithodin> ok let me play around with that
[13:30:22] <mithodin> interesting, so this works: https://pastebin.com/wZii3TeC
[13:30:47] <mithodin> now to figure out if I can simply add the vaapi encoder
[13:32:22] <mithodin> ok so I can't go directly from the overlay_opencl to the mjpeg_vaapi encoder
[13:32:54] <mithodin> and a hwmap=derive_device=vaapi results in "Error while filtering: Function not implemented"
[13:38:24] *** Joins: omegatron (~some@p5b056bc7.dip0.t-ipconnect.de)
[13:39:13] <mithodin> I can do a hwdownload and then hwupload.... but that seems kinda wasteful
[13:40:09] <elenril> I can't get it to work either fwiw
[13:40:17] <elenril> this stuff is black magic
[13:40:30] <elenril> might only work when the stars are right
[13:40:43] *** Joins: igh4st[m] (~igh4stmat@2001:470:69fc:105::35ce)
[13:41:03] *** Joins: linjie (~linjie@58.247.210.251)
[13:43:27] *** Joins: microchip_ (~neutrino@user/microchip/x-0766185)
[13:43:48] <mithodin> at least with the download and upload I'm still getting about half the cpu load compared to my previous version without opencl
[13:45:28] *** Quits: linjie (~linjie@58.247.210.251) (Ping timeout: 252 seconds)
[13:46:59] <mithodin> oh, but somehow it doesn't create a working output stream... damn it
[13:57:37] *** Quits: snikulov (~snikulov@109.252.86.189) (Quit: Konversation terminated!)
[13:58:35] *** Joins: Tosin (~Tosin@097-085-185-009.biz.spectrum.com)
[13:58:40] *** Quits: qwedfg (~qwedfg@user/qwedfg) (Ping timeout: 252 seconds)
[14:14:23] *** Joins: flemingjp (~flemingjp@85.210.32.88)
[14:15:51] <flemingjp> Is it possible to convert grayscale to 1-bit B&W, with the threshold being the frames average shade?
[14:17:35] *** Joins: keypusher (keypusher@user/keypusher)
[14:20:01] *** Joins: woohoiV5 (~woohoiV5@89-139-19-40.bb.netvision.net.il)
[14:20:55] <elenril> mithodin: so after some more testing, it seems to not be possible with the current code
[14:21:18] <elenril> but with a small patch I can get a complete hardware path
[14:22:38] *** Quits: microchip_ (~neutrino@user/microchip/x-0766185) (Quit: There is no spoon!)
[14:22:55] *** Quits: stevenliu (~stevenliu@ffmpeg/developer/stevenliu) (Remote host closed the connection)
[14:23:20] *** Joins: microchip_ (~neutrino@user/microchip/x-0766185)
[14:24:33] <elenril> ffmpeg -v verbose -init_hw_device vaapi=va  -filter_hw_device va -hwaccel vaapi -hwaccel_output_format vaapi  -i <input> -vf scale_vaapi=format=rgba,hwmap=derive_device=opencl,colorkey_opencl=green:similarity=0.4:blend=0.1,hwmap=derive_device=vaapi,scale_vaapi=format=nv12 -f null -c:v h264_vaapi -map 0:v -
[14:24:42] <elenril> ^with this commandline
[14:25:04] *** Quits: microchip_ (~neutrino@user/microchip/x-0766185) (Client Quit)
[14:25:33] <elenril> and this rough patch https://up.khirnov.net/k.diff
[14:26:14] *** Joins: microchip_ (~neutrino@user/microchip/x-0766185)
[14:26:18] <elenril> I'll probably polish it somewhat and send to the ML
[14:26:36] *** Joins: stevenliu (~stevenliu@ffmpeg/developer/stevenliu)
[14:30:57] *** Quits: Tosin (~Tosin@097-085-185-009.biz.spectrum.com) (Quit: Connection closed)
[14:40:24] *** Quits: mithodin (~mithodin@193.30.133.7) (Quit: Client closed)
[14:44:23] *** Quits: stevenliu (~stevenliu@ffmpeg/developer/stevenliu) (Remote host closed the connection)
[14:48:58] *** Joins: Blacker47 (~Blacker47@user/blacker47)
[14:58:42] *** Joins: waleee (~waleee@2001:9b0:216:8200:d457:9189:7843:1dbd)
[14:58:58] *** Quits: alienpinecone[m] (~alienpine@2001:470:69fc:105::35bd) (Quit: Bridge terminating on SIGTERM)
[14:58:58] *** Quits: igh4st[m] (~igh4stmat@2001:470:69fc:105::35ce) (Quit: Bridge terminating on SIGTERM)
[15:00:05] *** Joins: jai (~darkapex@user/darkapex)
[15:01:52] *** Joins: kepstin (~kepstin@user/kepstin)
[15:01:52] *** Joins: Guest3894 (~bluepenqu@2001:470:69fc:105::829)
[15:01:52] *** Joins: YakoYoku (~yakoyoku@2001:470:69fc:105::780)
[15:01:53] *** Joins: sixecho (~sixecho@2001:470:69fc:105::32)
[15:01:53] *** Joins: rojin[m] (~rojinroyp@2001:470:69fc:105::89b)
[15:01:53] *** Joins: singlerider[m] (~singlerid@2001:470:69fc:105::2fd2)
[15:01:58] *** Joins: memst[m] (~memst@2001:470:69fc:105::716)
[15:01:59] *** Joins: luc65r (~luc65r@2001:470:69fc:105::ee1)
[15:02:05] *** Joins: alienpinecone[m] (~alienpine@2001:470:69fc:105::35bd)
[15:02:05] *** Joins: igh4st[m] (~igh4stmat@2001:470:69fc:105::35ce)
[15:02:06] *** Joins: spanwysm[m] (~spanwysm@2001:470:69fc:105::e0a)
[15:02:06] *** Joins: idesmi[m] (~idesmitch@2001:470:69fc:105::f2b)
[15:27:08] *** Joins: mithodin (~mithodin@193.30.133.7)
[15:27:24] <mithodin> elenril that's fantastic :-)
[15:28:20] <mithodin> thank you!
[15:29:36] *** Joins: stevenliu (~stevenliu@ffmpeg/developer/stevenliu)
[15:41:57] <znf> alcohol, fflags igndts and genpts
[15:51:44] *** Joins: larkfisherman (~pasko@217.75.204.126)
[16:01:42] <elenril> mithodin: also, this just in
[16:01:47] <elenril> 12:13:03      @jkqxz | For the command you posted in the other channel, the reverse option on the second hwmap should work without any code changes.
[16:03:04] <mithodin> oh, cool :-)  shall try
[16:07:40] *** Quits: stevenliu (~stevenliu@ffmpeg/developer/stevenliu) (Remote host closed the connection)
[16:20:22] <mithodin> elenril getting an error with that command, see here: https://pastebin.com/2hvF11t3
[16:24:28] <elenril> I'm not on the machine where I have this setup anymore, but try dropping derive_device, and reverse should probably be reverse=1
[16:26:04] <mithodin> Both variants result in a floating point exception
[16:26:16] *** Joins: someuser (~user@41.239.50.164)
[16:28:35] <larkfisherman> Is it possible to convert yuvj422p mjpeg to yuv420p mjpeg without decoding?
[16:29:04] <elenril> mithodin: sorry, got no more time to look at this now
[16:29:28] *** Quits: flemingjp (~flemingjp@85.210.32.88) (Ping timeout: 265 seconds)
[16:29:41] *** Joins: flemingjp (~flemingjp@213.205.196.245)
[16:29:42] *** Guest3894 is now known as blue_penquin[m]
[16:31:10] <mithodin> No worries elenril. Thank you for your support!
[16:33:42] *** Quits: flemingjp (~flemingjp@213.205.196.245) (Read error: Connection reset by peer)
[16:35:58] *** Joins: flemingjp (~flemingjp@85.210.32.88)
[16:36:40] <znf> larkfisherman, if you're converting, you need to decode first, so... uhm?
[16:38:05] *** Joins: stevenliu (~stevenliu@ffmpeg/developer/stevenliu)
[16:39:16] *** Quits: mithodin (~mithodin@193.30.133.7) (Quit: Client closed)
[16:40:57] *** Quits: stevenliu (~stevenliu@ffmpeg/developer/stevenliu) (Read error: Connection reset by peer)
[16:52:19] *** Joins: SpeakerTomeat (~Speaker@user/speakertomeat)
[16:52:23] <SpeakerTomeat> Hello all.
[16:52:44] <SpeakerTomeat> question, can I somehow use file globs with -f concat ?
[16:53:15] <DeHackEd> I think you want to build the input file by scripting.
[16:53:52] <SpeakerTomeat> and list each image file one by one in the concat -i file?
[16:54:08] <DeHackEd> https://trac.ffmpeg.org/wiki/Concatenate "Automatically generating the input file"
[16:55:01] <SpeakerTomeat> I hope it can take 180k file names
[16:55:19] <DeHackEd> oh, exciting...
[16:56:54] <SpeakerTomeat> if I use -f concat -i filelist.txt can I still use -ss ?
[16:57:01] <SpeakerTomeat> for input
[16:57:10] <SpeakerTomeat> I guess before the -f if anything?
[16:58:20] <SpeakerTomeat> Ah I was wrong, it's only 132756 files listed in the concat input
[16:59:44] <SpeakerTomeat> I'll tias
[17:00:05] <SpeakerTomeat> I forget... how wasit I specify the framerate for an image file input? it isn't -r befpre -i
[17:00:20] <JEEB> the image2 meta reader has a "framerate" AVOption
[17:00:30] <SpeakerTomeat> -framerate ok
[17:00:33] <JEEB> or maybe it's the "raw" video reader, either one of those
[17:00:43] <JEEB> but in any case, for image sequences it definitely was image2
[17:00:50] <SpeakerTomeat> Ah but image2 is not -f concat
[17:00:52] <SpeakerTomeat> hmmm
[17:01:19] <JEEB> if you are just concatenating images of the same type with a frame rate
[17:01:28] <JEEB> just write a script that pipes them into ffmpeg.c one after another
[17:01:33] <JEEB> then utilize -f image2pipe
[17:01:51] <SpeakerTomeat> JEEB, yes the problem is I have the images in 5 directories (they come from different reels)
[17:02:01] <SpeakerTomeat> hmmmm
[17:02:11] <JEEB> sure, you just need to write the script feeding into the pipe to take that into account?
[17:03:28] <SpeakerTomeat> Ok let's say I have these in /dir/X/img_X_yyyyy.j2c where X is the reel number, consecutive and Y the img number consecutive, can I in theory do... "cat /dir/*|ffmpeg -f image2pipe"
[17:03:50] <JEEB> quite likely, if the * ends up being in the correct order
[17:04:06] <JEEB> then set input to stdin with `-i pipe:` or so
[17:04:22] <SpeakerTomeat> because otherwise I can't think of any way I can pipe all the files without each file (or reel subdir) spawnign a new ffmpeg instance
[17:04:54] <JEEB> well you just gather the list programmatically, sorted if the default sorting of the shell doesn't work, then cat them
[17:05:31] <SpeakerTomeat> true
[17:05:47] *** Joins: iive (~iive@87.119.101.204.client.entry.bg)
[17:09:11] <SpeakerTomeat> mhm my cat can't deal with a 132k argument list...
[17:09:20] *** Quits: Vonter (~Vonter@user/vonter) (Read error: Connection reset by peer)
[17:16:07] *** Joins: stevenliu (~stevenliu@ffmpeg/developer/stevenliu)
[17:18:52] *** Quits: stevenliu (~stevenliu@ffmpeg/developer/stevenliu) (Read error: Connection reset by peer)
[17:18:53] <SpeakerTomeat> Hmmm
[17:19:15] *** Quits: mixfix41 (~homefame@user/mixfix41) (Ping timeout: 265 seconds)
[17:19:16] <SpeakerTomeat> I'm doing: cat image-files.txt|xargs cat|ffmpeg -f image2pipe -framerate 24 -i - -c:v h264 -crf 16 -pix_fmt yuv420p out.mp4
[17:19:50] <SpeakerTomeat> But I'm getting "Could not find codec parameters for stream 0 (Video: jpeg2000, none): unspecified size"
[17:20:42] *** Joins: mixfix41 (~homefame@c-98-240-233-64.hsd1.mn.comcast.net)
[17:24:58] <znf> sounds like one of your images in the sequence is not properly formatted
[17:25:19] <znf> tbh, I'd split the workload into batches of, well "X reels" you may have
[17:25:23] <znf> it's probably more manageable
[17:25:42] <SpeakerTomeat> yeah but that will mean more processes in the middle, but you might be right
[17:26:02] <furq> is there some reason you can't use -pattern_type glob with image2
[17:27:52] <SpeakerTomeat> furq, the subdirs?
[17:28:58] *** Joins: dreamon (~dreamon@ppp-88-217-71-147.dynamic.mnet-online.de)
[17:30:28] <furq> that still works if the directories are in the order you want
[17:30:57] <furq> -pattern_type glob -f image2 -i "*/*.j2c"
[17:31:08] <furq> whether it'll deal with 132k images i have no idea
[17:31:17] <SpeakerTomeat> I can test
[17:34:30] <SpeakerTomeat> oohhhhh
[17:34:32] <SpeakerTomeat> OOHHHHHH
[17:35:19] <SpeakerTomeat> If I can only....
[17:37:00] <SpeakerTomeat> furq, you just saved me 8 hours today
[17:37:12] <SpeakerTomeat> furq, you ar emy hero
[17:37:14] <SpeakerTomeat> all of you
[17:37:40] *** Quits: timothy (~timothy@redhat/timothy) (Quit: ZNC 1.8.2 - https://znc.in)
[17:38:04] <SpeakerTomeat> thanks furq znf and JEEB
[17:38:28] <znf> I didn't do anything!
[17:38:57] <SpeakerTomeat> znf, you helped in one part without knowing
[17:39:21] <SpeakerTomeat> you made me remember my "files.txt" was full of "file '/filename'" from when I tried using it with concat
[17:40:42] *** Joins: timothy (~timothy@redhat/timothy)
[17:42:39] <SpeakerTomeat> if I put two -i after --pattern_type glob will the second i be a glob too?
[17:42:42] <SpeakerTomeat> I'll try it
[17:42:55] *** Joins: linjie (~linjie@58.247.210.251)
[17:42:56] *** Quits: Asterisk (~asterisk@69.195.134.172) (Ping timeout: 258 seconds)
[17:43:02] <DeHackEd> no
[17:43:38] <SpeakerTomeat> ok I need to set it twice then, thanks
[17:43:42] *** Joins: Asterisk (~asterisk@69.195.134.172)
[17:45:31] *** Quits: mixfix41 (~homefame@c-98-240-233-64.hsd1.mn.comcast.net) (Ping timeout: 244 seconds)
[17:47:32] *** Quits: linjie (~linjie@58.247.210.251) (Ping timeout: 258 seconds)
[17:47:33] *** Joins: mixfix41 (~homefame@c-98-240-233-64.hsd1.mn.comcast.net)
[17:48:55] <SpeakerTomeat> arrrgh pattern_type glob only works for image2
[17:48:58] <SpeakerTomeat> hmmm
[17:50:21] <SpeakerTomeat> Ok glob patterns for image2 image files, and concat for audio files
[17:50:24] <SpeakerTomeat> map, and set
[17:50:31] <SpeakerTomeat> Aaaand, it works
[17:50:56] <SpeakerTomeat> now let's see if the -ss is precise enough in both cases (image and audio) that I don't get desincronization
[17:51:07] *** Quits: mixfix41 (~homefame@c-98-240-233-64.hsd1.mn.comcast.net) (Changing host)
[17:51:07] *** Joins: mixfix41 (~homefame@user/mixfix41)
[17:51:23] <SpeakerTomeat> It probaby is since images are discrete frames, so -ss 00:00:10 is 10 seconds exact, no key frame dependency
[17:54:54] *** Quits: larkfisherman (~pasko@217.75.204.126) (Quit: Konversation terminated!)
[17:55:10] <SpeakerTomeat> ffmpeg is amazing
[17:57:35] *** Quits: Volgaar (~volgaar@104.66.13.93.rev.sfr.net) (Quit: WeeChat 3.2)
[17:59:45] *** Quits: blue_penquin (uid505269@id-505269.brockwell.irccloud.com) ()
[18:18:14] *** Joins: qwedfg (~qwedfg@user/qwedfg)
[18:23:14] *** Quits: keypusher (keypusher@user/keypusher) (Remote host closed the connection)
[18:24:17] *** Joins: snikulov (~snikulov@109-252-86-189.nat.spd-mgts.ru)
[18:27:53] *** Joins: AbleBacon (~AbleBacon@user/AbleBacon)
[18:29:04] *** Joins: linjie (~linjie@58.247.210.251)
[18:33:34] *** Quits: linjie (~linjie@58.247.210.251) (Ping timeout: 244 seconds)
[18:38:58] *** Joins: linjie (~linjie@58.247.210.251)
[18:43:32] *** Quits: someuser (~user@41.239.50.164) (Ping timeout: 250 seconds)
[18:43:58] *** Quits: linjie (~linjie@58.247.210.251) (Ping timeout: 272 seconds)
[18:47:45] *** Joins: someuser (~user@196.156.168.1)
[18:57:12] *** Joins: ketas (~ketas@0011-0000-0000-0000-d7dc-830e-07d0-2001.dyn.estpak.ee)
[18:58:38] *** Joins: keypusher (keypusher@user/keypusher)
[18:59:50] *** Joins: emcodem (uid483343@id-483343.brockwell.irccloud.com)
[19:01:00] *** Joins: stevenliu (~stevenliu@ffmpeg/developer/stevenliu)
[19:01:16] *** Joins: linjie (~linjie@58.247.210.251)
[19:02:39] *** Joins: zumba_addict (~zumba_add@2601:240:4500:8320:4d13:46e7:735:15bc)
[19:05:35] *** Quits: stevenliu (~stevenliu@ffmpeg/developer/stevenliu) (Ping timeout: 265 seconds)
[19:05:41] <emcodem> good afternood everyone
[19:06:00] <emcodem> except the ones that dont have afternoon, in that case good morning or evening :D
[19:06:30] <emcodem> any idea why rsync keeps giving me the error
[19:06:35] <emcodem> root@fate-suite.ffmpeg.org: Permission denied (publickey).
[19:06:35] <emcodem> rsync: connection unexpectedly closed (0 bytes received so far) [sender]
[19:06:35] <emcodem> rsync error: unexplained error (code 255) at io.c(235) [sender=3.1.2]
[19:06:51] <emcodem> my command: rsync -v --no-g --chmod=Dg+s,Duo+x,ug+rw,o+r,o-w,+X ./fate-suite/ fate-suite.ffmpeg.org:/home/samples/fate-suite
[19:18:38] *** Quits: linjie (~linjie@58.247.210.251) (Ping timeout: 250 seconds)
[19:24:49] <znf> probably because you're trying to rsync+ssh?
[19:26:02] *** Joins: anotheruser (~user@41.44.139.88)
[19:26:42] <kepstin> (also why are you running that as root?)
[19:26:56] <emcodem> yeah i treid lots of stuff
[19:27:02] <furq> do you have an account
[19:27:10] <emcodem> haha no :D
[19:27:15] <furq> well there you go
[19:27:49] <emcodem> hehe makes sense, dunno why i thought its open for public :D
[19:27:58] <znf> Why would it be?
[19:28:16] <znf> The docs specifically say: "This is for developers who have an account on the fate suite server"
[19:28:38] <furq> anyone can download the suite and samples
[19:28:43] <furq> but you need an account to upload new samples
[19:28:45] <emcodem> ah, its when you read all the manuals 100 times, you concentrate on specific stuff and forget other stuff :D
[19:28:57] <emcodem> no worries :-)
[19:28:59] *** Joins: arcatech (~arcatech@user/arcatech)
[19:29:13] <znf> I mean, yeah, but his command line is trying to upload :P
[19:29:18] <furq> yes
[19:29:30] <emcodem> i'll send a dl link along with the patch in the mailing list
[19:29:33] <furq> but you can see where the mistake happened
[19:29:45] *** Quits: someuser (~user@196.156.168.1) (Ping timeout: 265 seconds)
[19:30:04] <emcodem> it happened in not re-reading the manual for the 100th time :D
[19:30:08] <furq> that too
[19:30:18] <znf> to be fair, I thought he's trying to download, but he just copy/pasta the wrong thing
[19:30:29] *** Quits: whitekidney_ (~wk@188.126.218.103) (Ping timeout: 252 seconds)
[19:31:02] *** Joins: Media_Thor (~Listen@xplr-208-114-129-15.xplornet.com)
[19:32:02] <emcodem> thanks, i'd have tried until hell freezes because i really thought my rsync version fools me or such
[19:34:13] *** Quits: Nact (~l@host-85-27-124-155.dynamic.voo.be) (Quit: Konversation terminated!)
[19:37:22] *** Joins: zmt00 (~zmt00@user/zmt00)
[19:47:00] *** Joins: RobotDO (~RobotDO@67.230.177.17.16clouds.com)
[19:54:46] <RobotDO> Hi guys. So macos can now hardware decode 4k vp9 videos from youtube in safari. It'd be nice if ffmpeg can do this as well
[19:56:09] <emcodem> it cannot?
[19:56:12] *** Joins: betelgeuse (~john2gb@94-225-47-8.access.telenet.be)
[19:56:53] <JEEB> emcodem: it can do with swdec, I haven't finished my hwdec patch set
[19:56:59] <RobotDO> afaik, it only has vp9 software decoding
[19:57:40] <JEEB> doesn't help that it was only available on the M1 stuff
[19:57:48] <JEEB> so you could only test it by logging into an M1 based mac
[19:58:23] *** Joins: adamlw (~adamlw@94-172-27-97.dynamic.chello.pl)
[19:58:51] <emcodem> i would have bet that nvdec just does it
[19:59:00] <RobotDO> I'm using a 2017 mbp and it's capable of vp9 hwdec
[19:59:14] *** Parts: adamlw (~adamlw@94-172-27-97.dynamic.chello.pl) (Konversation terminated!)
[19:59:15] *** Quits: betelgeuse (~john2gb@94-225-47-8.access.telenet.be) (Read error: Connection reset by peer)
[19:59:16] <JEEB> huh
[19:59:20] <JEEB> so they enabled it on intel stuff too
[19:59:25] <JEEB> I only have a 2015 macbook pro
[19:59:34] *** Joins: stevenliu (~stevenliu@ffmpeg/developer/stevenliu)
[19:59:38] <JEEB> so I could write code but not really test it :P
[19:59:53] *** Joins: billy22 (~billy@cpe-24-90-250-173.nyc.res.rr.com)
[19:59:53] <galad> yes, only on intel stuff, last year in big sur
[20:00:29] *** Joins: betelgeuse (~john2gb@94-225-47-8.access.telenet.be)
[20:00:31] <JEEB> I did get it to as far as initialization https://github.com/jeeb/ffmpeg/commits/vt_vp9_support
[20:00:33] <emcodem> and vp9_qsv don't do it?
[20:00:38] <galad> unfortunately no support for my amd gpu, oh well…
[20:00:46] <JEEB> emcodem: > implying those are supported on mac :)
[20:00:53] <JEEB> on mac you just have VideoToolbox
[20:00:53] <emcodem> hahaha ok
[20:00:55] <emcodem> :D
[20:01:03] <JEEB> so even if the hardware supports it, if it's not enabled in VT
[20:01:06] <JEEB> you're out of luck :)
[20:01:10] <JEEB> (unless you boot linux or something)
[20:03:04] <RobotDO> oh so it's working in progress then?
[20:03:07] <billy22> sorry, potentially dumb question! I'm doing a stream copy between two keyframes of a video with -c copy, but the result ends up 20 ms longer than I expected. would anybody have an idea why?
[20:03:35] *** Quits: flemingjp (~flemingjp@85.210.32.88) (Quit: Quit)
[20:03:36] *** Quits: betelgeuse (~john2gb@94-225-47-8.access.telenet.be) (Read error: Connection reset by peer)
[20:03:59] *** Quits: stevenliu (~stevenliu@ffmpeg/developer/stevenliu) (Ping timeout: 244 seconds)
[20:04:50] *** Joins: betelgeuse (~john2gb@94-225-47-8.access.telenet.be)
[20:08:06] *** Quits: betelgeuse (~john2gb@94-225-47-8.access.telenet.be) (Read error: Connection reset by peer)
[20:09:20] *** Joins: betelgeuse (~john2gb@94-225-47-8.access.telenet.be)
[20:10:07] <RobotDO> JEEB: anyway, I'll be glad to test it if you get any progress. thanks :)
[20:12:22] *** Quits: betelgeuse (~john2gb@94-225-47-8.access.telenet.be) (Read error: Connection reset by peer)
[20:13:37] *** Joins: betelgeuse (~john2gb@94-225-47-8.access.telenet.be)
[20:14:23] *** Joins: whitekidney (~wk@188.126.218.103)
[20:16:30] *** Joins: adamlw (~adamlw@94-172-27-97.dynamic.chello.pl)
[20:16:53] *** Quits: betelgeuse (~john2gb@94-225-47-8.access.telenet.be) (Read error: Connection reset by peer)
[20:17:00] *** Parts: adamlw (~adamlw@94-172-27-97.dynamic.chello.pl) ()
[20:18:08] *** Quits: waleee (~waleee@2001:9b0:216:8200:d457:9189:7843:1dbd) (Ping timeout: 244 seconds)
[20:18:10] *** Joins: betelgeuse (~john2gb@94-225-47-8.access.telenet.be)
[20:20:22] *** Joins: waleee (~waleee@h-98-128-228-119.NA.cust.bahnhof.se)
[20:21:26] *** Quits: betelgeuse (~john2gb@94-225-47-8.access.telenet.be) (Read error: Connection reset by peer)
[20:22:42] *** Joins: betelgeuse (~john2gb@94-225-47-8.access.telenet.be)
[20:23:47] *** Quits: dreamon (~dreamon@ppp-88-217-71-147.dynamic.mnet-online.de) (Remote host closed the connection)
[20:25:55] *** Quits: betelgeuse (~john2gb@94-225-47-8.access.telenet.be) (Read error: Connection reset by peer)
[20:26:26] *** Quits: gothicserpent (~gothicser@static-198-54-129-77.cust.tzulo.com) (Quit: Leaving)
[20:27:10] *** Joins: betelgeuse (~john2gb@94-225-47-8.access.telenet.be)
[20:27:10] *** Joins: WindowPain (~WP@user/windowpain)
[20:30:25] *** Quits: betelgeuse (~john2gb@94-225-47-8.access.telenet.be) (Read error: Connection reset by peer)
[20:31:40] *** Joins: betelgeuse (~john2gb@94-225-47-8.access.telenet.be)
[20:34:58] *** Quits: betelgeuse (~john2gb@94-225-47-8.access.telenet.be) (Read error: Connection reset by peer)
[20:39:33] *** Quits: RobotDO (~RobotDO@67.230.177.17.16clouds.com) (Remote host closed the connection)
[20:39:55] *** Joins: RobotDO (~RobotDO@67.230.177.17.16clouds.com)
[20:41:35] *** Quits: RobotDO (~RobotDO@67.230.177.17.16clouds.com) (Remote host closed the connection)
[20:43:51] *** Joins: blaze (~blaze@user/blaze)
[20:48:03] *** Quits: whitekidney (~wk@188.126.218.103) (Ping timeout: 265 seconds)
[20:52:17] *** Joins: someuser (~user@41.239.1.177)
[20:52:27] *** Joins: gothicserpent (~gothicser@static-198-54-129-76.cust.tzulo.com)
[20:53:13] *** Joins: whitekidney (~wk@188.126.218.103)
[20:53:51] *** Quits: anotheruser (~user@41.44.139.88) (Ping timeout: 265 seconds)
[21:02:24] *** Joins: stevenliu (~stevenliu@ffmpeg/developer/stevenliu)
[21:03:37] *** Quits: stevenliu (~stevenliu@ffmpeg/developer/stevenliu) (Read error: Connection reset by peer)
[21:13:54] *** Quits: mateo` (~mateo@ffmpeg/developer/mateo) (Ping timeout: 250 seconds)
[21:15:04] *** Joins: Buster_ (~Buster@46.160.36.66)
[21:15:59] *** Joins: linjie (~linjie@58.247.210.251)
[21:18:45] *** Quits: gothicserpent (~gothicser@static-198-54-129-76.cust.tzulo.com) (Ping timeout: 272 seconds)
[21:19:30] *** Joins: Volgaar (~volgaar@104.66.13.93.rev.sfr.net)
[21:20:52] *** Joins: gothicserpent (~gothicser@static-198-54-129-76.cust.tzulo.com)
[21:27:09] *** Joins: mateo` (~mateo@ffmpeg/developer/mateo)
[21:29:42] *** Joins: layerex (~layerex@213.87.138.122)
[21:29:44] *** Quits: zmt00 (~zmt00@user/zmt00) (Quit: Gone.)
[21:34:05] *** Quits: billy22 (~billy@cpe-24-90-250-173.nyc.res.rr.com) (Quit: Connection closed)
[21:45:29] <layerex> How do I split a multi-track ogg file into multiple single-track files?
[21:46:14] *** Joins: Enverex (~Enverex@213.31.254.161)
[21:49:36] *** Joins: admal (~admal@gateway/tor-sasl/admal)
[21:51:43] <kepstin> layerex: in general, you can extract a single track by doing something like "ffmpeg -i input.ogg -map 0:0 -c copy output-0.ogg" updating the -map option to select a particular stream (use the ffmpeg or ffprobe output to see the streams in the file)
[21:52:25] <kepstin> layerex: if you want to extract multiple tracks in one command, ffmpeg can do multiple outputs - repeat the entire section of the command line "-map 0:0 -c copy output-0.ogg" multiple times with different values for the map option and filename.
[21:53:20] *** Quits: linjie (~linjie@58.247.210.251) (Ping timeout: 250 seconds)
[21:55:54] <SpeakerTomeat> emcodem, btw nvdec works with nvidia gpus (afaik) and Apple is averse to nvidia now
[21:58:12] *** Joins: Polochon_street (~polochon@2001:41d0:a:64a5::1)
[21:58:31] <SpeakerTomeat> layerex, if the audio is a multi channel single track and you want only one of the channels, you can use -map_channel 0.0.0 (for the first channel) for example
[21:58:45] <SpeakerTomeat> Not sure if ogg files tend to come in multi track or single track multichannel, but just in case
[21:59:33] <SpeakerTomeat> there's many fun channel and track things you can do with ffmpeg on audio (be it in audio files or video+audio files) https://trac.ffmpeg.org/wiki/AudioChannelManipulation
[22:00:15] <Polochon_street> hi! I remember some time ago that I've tried to do multithreading with ffmpeg (resampling two different songs at the same time), and that I was told that multithreading ffmpeg was prone to error for some reason™, and was told to use multiprocessing instead. Am I remembering things correctly? Would someone have a reference for that?
[22:00:40] <furq> that sounds like nonsense
[22:01:10] <DeHackEd> a single AVXxxxxContext object should only ever be used by one of your own threads (at a time). however you can have as many of them as you want in as many threads as you want
[22:05:53] <Polochon_street> alright, thanks. Cause I have some segfaults that go away when I disable my multithreading, so my implementation must be off
[22:06:59] <kepstin> yeah; the basic rule of thumb is that the only things it's safe to move from one thread to another are AVFrame and AVPacket - everything else should ideally be created and used only from within a single thread.
[22:07:47] <DeHackEd> google says there's some old threads talking about making sure some initialization stuff is serialized. avcodec_open2 and maybe other things that cause initialization should be serialized...
[22:07:49] <kepstin> so you can have multiple separate threads each using their own contexts to do completely independent things, no problem there.
[22:09:14] <Polochon_street> hm, I do have a thread that does the decoding, and it sends it to another thread for resampling
[22:09:18] <Polochon_street> it sends packets*
[22:09:27] <Polochon_street> need to check whether I'm doing stuff properly here
[22:09:54] <kepstin> that should be fine, as long as you're not having reference counting errors with the packets
[22:10:51] <Polochon_street> I don't, I just get a plain old segfault on > #0  ff_mix_2_1_a_float_avx.next () at libavutil/x86/x86util.asm:1314
[22:10:54] *** Quits: zumba_addict (~zumba_add@2601:240:4500:8320:4d13:46e7:735:15bc) (Quit: Client closed)
[22:11:09] <Polochon_street> I'll see what I can find as debug info before asking though. Thanks :)
[22:16:06] *** Quits: Flabb (~Flabb@89.169.84.117) (Remote host closed the connection)
[22:18:19] *** Joins: shibboleth (~shibbolet@gateway/tor-sasl/shibboleth)
[22:19:19] *** Quits: gothicserpent (~gothicser@static-198-54-129-76.cust.tzulo.com) (Ping timeout: 258 seconds)
[22:21:29] *** Joins: gothicserpent (~gothicser@static-198-54-129-76.cust.tzulo.com)
[22:22:07] <layerex> kepstin: ffmpeg says that there is only one stream. And seeking in mpv fails with a following message: https://0x0.st/-pZm.txt.I guess ffmpeg won't help here.
[22:22:55] <kepstin> layerex: oh, multiple concatenated ogg files :(
[22:23:10] <kepstin> layerex: those are strange, I dunno the best way to cleanly deal with that.
[22:24:22] *** Quits: mickey (~user@user/mickey) (Quit: Ping timeout (120 seconds))
[22:24:40] *** Joins: mickey (~user@user/mickey)
[22:25:05] *** Joins: zmt00 (~zmt00@user/zmt00)
[22:33:47] <Enverex> When converting HDR to SDR, you seem to have to tell FFMPEG what the input specs of the video are, e.g. "zscale=tin=smpte2084:min=bt2020nc:pin=bt2020:rin=tv:t=smpte2084:m=bt2020nc:p=bt2020:r=tv". Now this seems odd as FFMPEG knows what the input specs are. Is there some way of having FFMPEG detect these automatically rather than having to specify
[22:33:47] <Enverex> them?
[22:41:38] *** Quits: WindowPain (~WP@user/windowpain) (Remote host closed the connection)
[22:44:35] *** Joins: TanoMarcelo (~TanoMarce@179.63.242.126)
[22:55:09] <DeHackEd> Enverex: sadly the frame data itself doesn't include those details, so the filter layer can't receive them
[22:56:15] <DeHackEd> hmm.... maybe side data would have it?
[22:57:25] <DeHackEd> I think I should stop now as this is going outside my realm of knowledge..
[23:14:23] *** Joins: fkaa (~fkaa@81-226-20-99-no256.tbcn.telia.com)
[23:14:57] *** Quits: nd (~nd@user/nd) (Ping timeout: 268 seconds)
[23:16:38] *** Joins: nd (~nd@user/nd)
[23:27:19] *** Joins: s0berage (~s0berage@135-23-213-77.cpe.pppoe.ca)
[23:31:42] *** Quits: LuKaRo (~LuKaRo@p200300dfa71797375776d016cf464e3b.dip0.t-ipconnect.de) (Ping timeout: 250 seconds)
[23:35:08] *** Quits: Media_Thor (~Listen@xplr-208-114-129-15.xplornet.com) (Read error: Connection reset by peer)
[23:35:32] *** Joins: LuKaRo_ (~LuKaRo@p57b15697.dip0.t-ipconnect.de)
[23:38:55] *** Joins: dreamon (~dreamon@p54b140a6.dip0.t-ipconnect.de)
[23:44:51] *** Quits: kasper93 (~kasper93@89-74-110-199.dynamic.chello.pl) (Remote host closed the connection)
[23:46:19] *** Joins: stevenliu (~stevenliu@ffmpeg/developer/stevenliu)
[23:50:43] *** Joins: linjie (~linjie@58.247.210.251)
[23:51:06] *** Joins: aeperezt (~Srain@190.141.20.36)
[23:52:27] <Enverex> DeHackEd: I'd have thought that if I can see it with ffprobe that ffmpeg would have that information available to... itself? That's why it seems weird.
[23:54:12] *** Quits: stevenliu (~stevenliu@ffmpeg/developer/stevenliu) (Read error: Connection reset by peer)
[23:57:02] *** Joins: Media_Thor (~Listen@xplr-208-114-129-8.xplornet.com)
[23:57:04] *** Quits: Media_Thor (~Listen@xplr-208-114-129-8.xplornet.com) (Read error: Connection reset by peer)
[23:59:34] *** Joins: Media_Thor (~Listen@xplr-208-114-129-8.xplornet.com)
