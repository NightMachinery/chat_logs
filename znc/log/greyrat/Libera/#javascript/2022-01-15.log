[00:00:12] <corwin> can it be both :P  (writing http1.0 requests and responses doesn't seem arcane to me either, but I'm pretty sure I'm a fogey)
[00:00:49] *** Joins: mud (~mud@user/kadoban)
[00:02:13] <sheetjs> buu: its possible for both to be true
[00:02:32] *** Quits: wildo (~lain6141@119.224.72.222) (Ping timeout: 250 seconds)
[00:02:35] <sheetjs> they are not, as they would say, "mutually exclusive"
[00:03:16] <Slade> hey sheetjs, feel like i havent seen you in a while
[00:04:12] <sheetjs> end of last year was surprisingly busy, start of this year slow
[00:04:46] *** Quits: mud (~mud@user/kadoban) (Remote host closed the connection)
[00:04:46] <sheetjs> resurrected some 14-year old macs
[00:04:55] *** Joins: debayer94 (~debayer@cpe-76-169-99-230.socal.res.rr.com)
[00:07:53] *** Joins: sam_1 (~sam_1@87.51.251.118)
[00:11:30] *** Joins: Supavisah (~Supavisah@user/supavisah)
[00:11:41] <corwin> I have a couple (not quite that old) waiting for a slow down myself.  In my case both or imacs that seem to need glass removal and HD reseating.
[00:12:13] *** Quits: sam_1 (~sam_1@87.51.251.118) (Ping timeout: 240 seconds)
[00:14:17] *** Quits: pmercado (~pmercado@186.107.48.168) (Quit: Konversation terminated!)
[00:14:25] *** Joins: dpuerto (~dpuerto@136-27-83-52.cab.webpass.net)
[00:15:04] <sheetjs> that process is not hard
[00:15:43] <sheetjs> its just nervewracking because you don't want to touch the bare LCD panel
[00:15:45] *** Joins: gehn (~gehn@user/gehn)
[00:16:25] <corwin> ^  thanks!  hopefully that helps me screw up my courage.
[00:17:10] <sheetjs> watch a few youtube videos
[00:17:18] <bobdobbs> sheetjs: why don't you want to touch the bare LCD?
[00:18:24] <sheetjs> the oils from your fingers are hard to clean off
[00:18:53] *** Quits: dpuerto (~dpuerto@136-27-83-52.cab.webpass.net) (Ping timeout: 256 seconds)
[00:19:27] <sheetjs> some people wear microfiber gloves but there are a few parts of the imac disassembly that are tricky with those gloves
[00:20:03] <sheetjs> to summarize, in the imac the screen is held in place with strong magnets
[00:20:34] <matsaman> aren't they gluing newer models? Such goofs
[00:21:12] <sheetjs> something like that.  overall they are declaring war on repairability
[00:21:42] *** Joins: wildo (~lain6141@119.224.72.222)
[00:22:13] <hexology> what's a good way to produce an object that's a deep copy of another object with 1 property removed
[00:22:27] <sheetjs> maybe its a testament to the state of affairs, but after putting an ssd in a 10-year old imac the machine feels like a low-to-mid-end machine from today
[00:22:31] <hexology> in python i might write {k: v for k, v in datum.items() if k != 'somethingBad'}
[00:22:33] <corwin> repairablility: enemy of consumerisim.  ("why do we hate the economy?")
[00:23:02] *** Joins: z1haze (~z1haze@user/z1haze)
[00:23:15] <sheetjs> hexology: do you know the key in advance?
[00:23:25] <corwin> hexology: do you need to skip cloning the property entirely or can you just clone the object then delete the prop from the clone?
[00:23:54] <sheetjs> n> const filter_out_somethingBad = ({somethingBad, ...rest}) => rest; filter_out_somethingBad({a:1,b:2,somethingBad:3})
[00:23:55] <jellobot> (okay) { a: 1, b: 2 }
[00:24:09] *** Joins: Codaraxis__ (~Codaraxis@user/codaraxis)
[00:24:16] <sheetjs> the array form is
[00:24:18] <hexology> corwin: i think cloning should be fine, what's the best way to do that?
[00:24:26] <corwin> sheetjs: nice
[00:24:32] <hexology> sheetjs: in this case it's passed in from a function
[00:24:40] <corwin> hexology: I'd try sheetsjs' solution before I messed with else
[00:24:57] <sheetjs> n> const filter_out_somethingBad = o => Object.fromEntries(Object.entries(o).filter(r => r[0] == "somethingBad")); filter_out_somethingBad({a:1,b:2,somethingBad:3})
[00:24:57] <hexology> yeah i see. in this case i don't want to hardcode it
[00:24:58] <jellobot> (okay) { somethingBad: 3 }
[00:25:00] <hexology> nice trick though
[00:25:05] <sheetjs> n> const filter_out_somethingBad = o => Object.fromEntries(Object.entries(o).filter(r => r[0] != "somethingBad")); filter_out_somethingBad({a:1,b:2,somethingBad:3})
[00:25:07] <jellobot> (okay) { a: 1, b: 2 }
[00:25:14] <hexology> ah i see, .entries returns an array of key,value pairs?
[00:25:21] <sheetjs> yeah and fromEntries works in reverse
[00:25:23] <hexology> i'll do that, thank you
[00:25:45] <hexology> i can just write `myThing.entries().filter` right?
[00:25:53] <hexology> i don't need to do `Object.entries(myThing)`?
[00:26:49] <corwin> It appears to be a static/class method, so Object.entries(o) https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Object/entries
[00:27:15] *** Quits: matsaman (~matsaman@user/matsaman) (Quit: leaving)
[00:27:46] <hexology> interesting
[00:27:47] <hexology> i wonder why
[00:28:06] *** Quits: Codaraxis_ (~Codaraxis@user/codaraxis) (Ping timeout: 250 seconds)
[00:28:29] *** Joins: wroathe (~wroathe@206-55-188-8.fttp.usinternet.com)
[00:28:29] *** Quits: wroathe (~wroathe@206-55-188-8.fttp.usinternet.com) (Changing host)
[00:28:29] *** Joins: wroathe (~wroathe@user/wroathe)
[00:28:38] <hexology> and there's no built-in "contains" function right? e.g. if i wanted to remove multiple keys provided in an array
[00:29:04] <hexology> as in there's nothing like `values.contains(x)` built into js?
[00:29:14] <hexology> or would you use indexOf
[00:29:24] <corwin> is foo.hasOwnProperty('bar')  what you mean for contains('bar')?
[00:30:12] <corwin> oh, I see. nm me, then.  I was thinking object.contains not array.contains.
[00:30:40] <hexology> oh sorry, that was confusing
[00:30:42] <hexology> yes, array
[00:30:44] <corwin> hexology: you are probably looking for myArr.includes(val)
[00:31:25] <hexology> ah
[00:31:26] <hexology> i am
[00:31:35] <Cork> (they had to switch from contains to includes for array cause of a common lib extending Array)
[00:31:47] <Cork> so it wasn't a different name cause they wanted :)
[00:32:09] *** Joins: Reign (~Username@ip98-161-226-10.ph.ph.cox.net)
[00:33:37] *** Quits: wroathe (~wroathe@user/wroathe) (Ping timeout: 256 seconds)
[00:33:51] <hexology> either name is probably fine anyway
[00:34:07] <hexology> "contains" is more common, but i knew what "includes" meant anyway
[00:37:37] <silly> https://bugzilla.mozilla.org/show_bug.cgi?id=1075059
[00:37:43] <silly> i never saw this
[00:39:35] *** Joins: sickdyd (~sickd@120.51.82.69.ap.gmobb-fix.jp)
[00:41:42] *** Joins: wroathe (~wroathe@206-55-188-8.fttp.usinternet.com)
[00:41:42] *** Quits: wroathe (~wroathe@206-55-188-8.fttp.usinternet.com) (Changing host)
[00:41:42] *** Joins: wroathe (~wroathe@user/wroathe)
[00:42:29] *** Joins: wellen (~w~llen@dynamic-046-114-155-197.46.114.pool.telefonica.de)
[00:43:45] *** Quits: wellen (~w~llen@dynamic-046-114-155-197.46.114.pool.telefonica.de) (Remote host closed the connection)
[00:44:16] *** Joins: wellen (~w~llen@dynamic-046-114-155-197.46.114.pool.telefonica.de)
[00:44:23] *** Quits: sickdyd (~sickd@120.51.82.69.ap.gmobb-fix.jp) (Ping timeout: 256 seconds)
[00:45:14] *** Quits: wellen (~w~llen@dynamic-046-114-155-197.46.114.pool.telefonica.de) (Remote host closed the connection)
[00:46:29] <xaltsc> Hey, I'm a bit lost in the modern JS ecosystem: I need to build a library that will probably only depend on D3 and Cola.js. I'm sort of settled on using TS or PureScript as a preprocessor, however, how do node/pkg mgmt/bundlers (<- I hadn't heard of that until today) work nowadays ? Which are the most minimal ?
[00:46:29] *** Quits: wroathe (~wroathe@user/wroathe) (Ping timeout: 256 seconds)
[00:46:46] *** Quits: noarb (~noarb@user/noarb) (Quit: ZNC 1.8.2 - https://znc.in)
[00:47:57] *** Quits: kakashiA1 (~kakashi@ip-37-201-196-21.hsi13.unitymediagroup.de) (Ping timeout: 240 seconds)
[00:48:40] *** Joins: noarb (~noarb@user/noarb)
[00:49:59] <xaltsc> I target the browser if that's worth mentioning
[00:50:21] <KevinX> swc seems to be the trendy one. esbuild is another
[00:53:35] <Alexendoo> xaltsc: You're creating a library or consuming one?
[00:55:27] <xaltsc> Alexendoo: Creating one
[00:56:32] <xaltsc> I don't care about trendy stuff, I care about smallness, simplicity, standards and understandability
[00:57:07] <xaltsc> Alexendoo: Although I'm relying on other libraries ofc, otherwise I wouldn't need package management
[00:57:37] <Alexendoo> xaltsc: In that case you wouldn't need a bundler
[00:57:45] <Alexendoo> That's more for applications
[00:57:51] *** Quits: maret (~maret@nat-88-212-37-89.antik.sk) (Quit: maret)
[00:59:43] <KevinX> depends on what you mean by library
[01:00:35] <xaltsc> My library is just an ad hoc collection of functions/classes/etc for doing graph theory the plotting the result with d3/cola
[01:00:41] <xaltsc> s/the/then
[01:01:10] <xaltsc> within an html page
[01:01:55] <Alexendoo> Assuming you're publishing to npm, you'll want to be uploading commonjs for the best compatibility. To transform from TS to JS you can use tsc itself, or babel
[01:02:29] <systemfault> You can't use babel for that.
[01:02:35] <xaltsc> I don't intend on publishing anything, except maybe on sr.ht
[01:03:19] <Alexendoo> Sure you can use babel for that, you'd just to type checking separately
[01:03:52] <xaltsc> Yeah, but tsc doesn't compile anything into a single self-contained .js file. It knows about the node modules I'm using, but doesn't do much beyond transpiling afaict
[01:05:01] *** Quits: gehn (~gehn@user/gehn) (Quit: Leaving)
[01:05:14] *** Joins: gehn (~gehn@user/gehn)
[01:06:44] <systemfault> Alexendoo: If the goal is to publish a library then you cannot use Babel because it's just a TS stripper, it won't generate the required type definition files required for your library to be used with TS
[01:06:57] <systemfault> -required
[01:07:37] *** Joins: wroathe (~wroathe@206-55-188-8.fttp.usinternet.com)
[01:07:38] *** Quits: wroathe (~wroathe@206-55-188-8.fttp.usinternet.com) (Changing host)
[01:07:38] *** Joins: wroathe (~wroathe@user/wroathe)
[01:08:31] *** Joins: sam_1 (~sam_1@87.51.251.118)
[01:09:26] <Alexendoo> True, though you can tell tsc to just do declarations, but it sounds like xaltsc is after <script> style dependency management so this doesn't really apply anyway
[01:10:08] *** Quits: mat001 (~mat001@69.4.234.90) (Ping timeout: 250 seconds)
[01:10:19] <KevinX> you'll need a bundler anyway to test it in the browser
[01:10:53] <KevinX> Just don't put the bundle as the main file
[01:11:02] *** Quits: trevors (~trevors@user/trevors) (Quit: trevors)
[01:11:14] <Alexendoo> Is there something like unpkg that doesn't try to be a CDN as well?
[01:11:37] <Alexendoo> Every time I try to use it to browse files of a package, it doesn't load
[01:11:49] *** Joins: trevors (~trevors@user/trevors)
[01:12:32] <xaltsc> <script> style dependency ?
[01:12:49] <KevinX> Alexendoo skypack
[01:13:07] *** Quits: sam_1 (~sam_1@87.51.251.118) (Ping timeout: 256 seconds)
[01:13:24] <KevinX> xaltsc they mean like the consumer will do <script src="https://...">
[01:14:00] <xaltsc> I will be the only consumer and that's what I'll do :D
[01:14:31] *** Joins: src (~src@user/src)
[01:14:53] *** Joins: pluri (~pluri@user/pluri)
[01:15:57] *** Quits: Y4knotiS (~YaknotiS@cpc1-cmbg18-2-0-cust87.5-4.cable.virginm.net) (Ping timeout: 240 seconds)
[01:16:38] <Alexendoo> KevinX: The site loads quickly which is promising, how do I browse the files? I can't see a link to do that
[01:18:10] *** Quits: Supavisah (~Supavisah@user/supavisah) (Remote host closed the connection)
[01:19:13] *** Joins: dpuerto (~dpuerto@136-27-83-52.cab.webpass.net)
[01:19:17] *** Quits: oscurochu (~oscurochu@37.120.215.102) (Remote host closed the connection)
[01:23:07] *** Quits: joelmo (uid17355@id-17355.tinside.irccloud.com) (Quit: Connection closed for inactivity)
[01:23:34] *** Quits: dpuerto (~dpuerto@136-27-83-52.cab.webpass.net) (Ping timeout: 250 seconds)
[01:25:31] *** Joins: mat001 (~mat001@69.4.234.90)
[01:26:07] *** Joins: dpuerto (~dpuerto@136-27-83-52.cab.webpass.net)
[01:27:01] *** Quits: `2jt (~jtomas@10.red-83-58-228.dynamicip.rima-tde.net) (Remote host closed the connection)
[01:27:24] *** Joins: `2jt (~jtomas@10.red-83-58-228.dynamicip.rima-tde.net)
[01:28:20] *** Quits: wroathe (~wroathe@user/wroathe) (Ping timeout: 250 seconds)
[01:29:38] *** Joins: wroathe (~wroathe@206-55-188-8.fttp.usinternet.com)
[01:29:39] *** Quits: wroathe (~wroathe@206-55-188-8.fttp.usinternet.com) (Changing host)
[01:29:39] *** Joins: wroathe (~wroathe@user/wroathe)
[01:30:41] *** Quits: dpuerto (~dpuerto@136-27-83-52.cab.webpass.net) (Ping timeout: 256 seconds)
[01:34:24] *** Quits: wroathe (~wroathe@user/wroathe) (Ping timeout: 250 seconds)
[01:39:38] *** Quits: sharperguy (~sharpergu@fnord.cryptophone.de) (Quit: Lost terminal)
[01:39:55] *** Quits: renlo (~Renlo_Ren@pool-108-14-112-182.nycmny.east.verizon.net) (Ping timeout: 256 seconds)
[01:40:32] *** Quits: z1haze (~z1haze@user/z1haze) (Quit: Leaving)
[01:41:10] <KevinX> search bar at the top. Not sure if you can just browse a-z
[01:42:00] *** Joins: gustik (~gustik@2a01:c844:2436:6920:9e9:f97c:41d1:634c)
[01:43:23] *** Quits: gustik (~gustik@2a01:c844:2436:6920:9e9:f97c:41d1:634c) (Remote host closed the connection)
[01:43:39] *** Joins: zebrag (~chris@user/zebrag)
[01:44:52] *** Joins: audiobirb (~audio@user/audio)
[01:45:24] *** Joins: kakashiA1 (~kakashi@ip-37-201-198-9.hsi13.unitymediagroup.de)
[01:47:52] <ThePendulum> this might be the most underwhelming scam yet https://i.imgur.com/Nlz2pra.png
[01:48:05] <ThePendulum> send 000 and we will send 000 back, c'mon give me something juicy
[01:49:37] *** Quits: kakashiA1 (~kakashi@ip-37-201-198-9.hsi13.unitymediagroup.de) (Ping timeout: 240 seconds)
[01:50:28] *** Joins: oscurochu (~oscurochu@37.120.215.100)
[01:50:52] *** Quits: Camilo (~hugh@host-92-1-126-125.as13285.net) (Ping timeout: 250 seconds)
[01:51:19] *** Joins: kakashiA1 (~kakashi@ip-37-201-198-9.hsi13.unitymediagroup.de)
[01:53:02] *** Quits: gproto23_ (~gproto23@user/gproto23) (Ping timeout: 250 seconds)
[01:53:50] *** Quits: gehn (~gehn@user/gehn) (Quit: Leaving)
[01:56:08] <oscurochu> https://www.youtube.com/watch?v=4AyjKgz9tKg
[01:56:08] <skillbot> YouTube Title: Schoolhouse Rock, conjunction junction
[01:59:55] *** Joins: sam_1 (~sam_1@87.51.251.118)
[02:01:12] *** Joins: Joss (~joss@user/Joss)
[02:01:56] <bobdobbs> k, I'm making progress in my quest to replace Gulp tasks with npm scripts.
[02:02:07] <bobdobbs> Now I'm looking at replacing 'gulp serve'
[02:03:18] *** Quits: Joss (~joss@user/Joss) (Client Quit)
[02:03:46] <bobdobbs> In the short time I want to set up a process that does http service and browsersync
[02:04:31] *** Quits: debayer94 (~debayer@cpe-76-169-99-230.socal.res.rr.com) (Remote host closed the connection)
[02:04:35] *** Quits: sam_1 (~sam_1@87.51.251.118) (Ping timeout: 252 seconds)
[02:04:45] <bobdobbs> My understanding is that there is lots of choice when it comes to web service for npm dev projects
[02:04:56] *** Joins: debayer94 (~debayer@cpe-76-169-99-230.socal.res.rr.com)
[02:05:08] <bobdobbs> Does anyone recommend a module for this?
[02:07:14] *** Joins: sam_1 (~sam_1@87.51.251.118)
[02:08:00] <systemfault> bobdobbs: Things like webpack-dev-server or you mean something else?
[02:08:08] <systemfault> https://webpack.js.org/configuration/dev-server/ ?
[02:08:12] *** Quits: enoq (~enoq@2a05:1141:1f5:5600:b9c9:721a:599:bfe7) (Quit: enoq)
[02:08:22] <bobdobbs> lol. and here I am trying to avoid webpack
[02:09:43] <oscurochu> to some degree you cant avoid it.
[02:10:00] <oscurochu> but you should avoid it as much as possible lol
[02:10:02] *** Joins: panella32 (~panella32@134.202.32.60)
[02:11:25] *** Quits: sam_1 (~sam_1@87.51.251.118) (Ping timeout: 240 seconds)
[02:16:26] *** Quits: panella32 (~panella32@134.202.32.60) (Ping timeout: 250 seconds)
[02:17:42] *** Joins: mat001_ (~mat001@69.4.234.69)
[02:18:35] *** Joins: ramblebamble (ramblebamb@gateway/vpn/protonvpn/ramblebamble)
[02:19:37] *** Quits: mat001 (~mat001@69.4.234.90) (Ping timeout: 240 seconds)
[02:23:57] <silly> or... embrace it as much as possible
[02:24:21] *** Joins: Sven_vB (~sven@user/sven-vb/x-2094958)
[02:24:34] <silly> learning isn't bad per se
[02:24:39] *** Joins: mintograde (~mintograd@47.201.5.61)
[02:25:21] *** Joins: dpuerto (~dpuerto@136-27-83-52.cab.webpass.net)
[02:26:20] *** Quits: dmaislin (~dmaislin@047-233-046-055.res.spectrum.com) (Quit: My MacBook has gone to sleep. ZZZzzz…)
[02:26:46] *** Joins: clydez (~clydez@178-116-34-81.access.telenet.be)
[02:30:02] *** Quits: Sven_vB (~sven@user/sven-vb/x-2094958) (Remote host closed the connection)
[02:30:21] *** Quits: dpuerto (~dpuerto@136-27-83-52.cab.webpass.net) (Ping timeout: 256 seconds)
[02:30:30] *** Joins: Sven_vB (~sven@user/sven-vb/x-2094958)
[02:30:38] *** Quits: trevors (~trevors@user/trevors) (Quit: trevors)
[02:32:56] *** Quits: pizdets_ (~pizdets@183.182.110.146) (Ping timeout: 250 seconds)
[02:33:12] *** Quits: monoxane (~monoxane@user/monoxane) (Quit: Ping timeout (120 seconds))
[02:33:17] *** Quits: rewrit3 (~rewrit3@user/rewrit3) (Read error: Connection reset by peer)
[02:33:18] <oscurochu> it really depends on what your goals are. i feel like webpack is a distraction from what webpack is suppose to help you achieve.
[02:33:37] *** Quits: harpia (~harpia@143.208.84.235) (Quit: harpia)
[02:33:41] *** Joins: monoxane (~monoxane@user/monoxane)
[02:33:49] *** Joins: pizdets (~pizdets@183.182.111.149)
[02:34:14] *** Quits: Haxxa (~Haxxa@202-144-174-197.ip4.superloop.com) (Remote host closed the connection)
[02:34:36] <oscurochu> its a necessary evil though. cant get much done with out it (if you go the webpack route), but it shouldnt be hard (which is why i like scripts)
[02:35:33] *** Joins: Haxxa (~Haxxa@202-144-174-197.ip4.superloop.com)
[02:36:24] *** Joins: panella32 (~panella32@45.130.83.59)
[02:39:42] *** Joins: ferdna (~ferdna@user/ferdna)
[02:43:38] <bobdobbs> I might see if I can use this. Or something like it:  https://www.npmjs.com/package/http-server
[02:43:54] *** Quits: zebrag (~chris@user/zebrag) (Quit: Konversation terminated!)
[02:44:47] *** Quits: Alina-malina (~Alina-mal@user/alina-malina) (Remote host closed the connection)
[02:51:30] *** Joins: trevors (~trevors@user/trevors)
[02:52:58] *** Joins: sam_1 (~sam_1@87.51.251.118)
[02:54:24] *** Quits: otisolsen70 (~otisolsen@xd4ed80b5.cust.hiper.dk) (Quit: Leaving)
[02:54:33] *** Quits: kakashiA1 (~kakashi@ip-37-201-198-9.hsi13.unitymediagroup.de) (Ping timeout: 256 seconds)
[02:55:13] *** Joins: Alina-malina (~Alina-mal@user/alina-malina)
[02:57:23] *** Quits: sam_1 (~sam_1@87.51.251.118) (Ping timeout: 252 seconds)
[02:58:50] <silly> !live-server @bobdobbs
[02:58:57] <silly> !npm live-server @bobdobbs
[02:58:59] <jellobot> bobdobbs, npm.im/live-server|1.2.1|2018-11-26|simple development http server with live reload capability
[03:00:07] <silly> you can start it with `npx live-server` without installing for a quick test
[03:00:25] <bobdobbs> silly: oh, that's interesting
[03:00:27] <bobdobbs> thanks
[03:00:41] *** Quits: Haxxa (~Haxxa@202-144-174-197.ip4.superloop.com) (Quit: Haxxa flies away.)
[03:01:30] *** Joins: Haxxa (~Haxxa@202-144-174-197.ip4.superloop.com)
[03:03:33] *** Joins: george91 (~george91@103.137.204.24)
[03:06:38] *** Joins: harpia (~harpia@2804:2aec:205:1400:be2a:c8d5:4566:5dc8)
[03:08:00] *** Quits: george91 (~george91@103.137.204.24) (Ping timeout: 250 seconds)
[03:08:42] *** Joins: kakashiA1 (~kakashi@ip-37-201-198-9.hsi13.unitymediagroup.de)
[03:12:07] *** Joins: sam_1 (~sam_1@87.51.251.118)
[03:12:31] <ljharb> i use `npx http-server`, live-reloading is too much magic for me
[03:12:38] *** Joins: wroathe (~wroathe@206-55-188-8.fttp.usinternet.com)
[03:12:38] *** Quits: wroathe (~wroathe@206-55-188-8.fttp.usinternet.com) (Changing host)
[03:12:38] *** Joins: wroathe (~wroathe@user/wroathe)
[03:13:12] *** Quits: kakashiA1 (~kakashi@ip-37-201-198-9.hsi13.unitymediagroup.de) (Ping timeout: 250 seconds)
[03:13:37] *** Joins: dpuerto (~dpuerto@136-27-83-52.cab.webpass.net)
[03:14:19] *** Quits: underport (~underport@2a0c:5a80:1c17:5800:fa0d:384f:ab6b:ee47) (Remote host closed the connection)
[03:15:48] *** Quits: MrBlue (~MrBlue@5.181.233.230) (Quit: Leaving)
[03:16:11] *** Joins: MrBlue (~MrBlue@5.181.233.230)
[03:16:39] *** Quits: sam_1 (~sam_1@87.51.251.118) (Ping timeout: 256 seconds)
[03:20:37] *** Quits: wroathe (~wroathe@user/wroathe) (Ping timeout: 256 seconds)
[03:22:55] *** Joins: ryanm (~rmahoski@47-215-143-215.flagcmtk01.res.dyn.suddenlink.net)
[03:23:36] *** Joins: chenqisu1 (~bhca7d@183.217.201.21)
[03:24:01] *** Quits: voltage_ (voltage@user/voltage) (Quit: Leaving)
[03:24:46] *** Joins: jazzy (~jaziz@user/jaziz)
[03:28:01] *** Quits: trevors (~trevors@user/trevors) (Quit: trevors)
[03:28:35] *** Joins: wroathe (~wroathe@206-55-188-8.fttp.usinternet.com)
[03:28:36] *** Quits: wroathe (~wroathe@206-55-188-8.fttp.usinternet.com) (Changing host)
[03:28:36] *** Joins: wroathe (~wroathe@user/wroathe)
[03:29:17] *** Quits: `2jt (~jtomas@10.red-83-58-228.dynamicip.rima-tde.net) (Ping timeout: 256 seconds)
[03:29:37] *** Joins: trevors (~trevors@user/trevors)
[03:30:49] *** Quits: xsperry (~xs@user/xsperry) (Ping timeout: 256 seconds)
[03:32:24] *** Joins: summersault (~summersau@179.221.251.36)
[03:33:34] *** Quits: wroathe (~wroathe@user/wroathe) (Ping timeout: 250 seconds)
[03:33:34] *** Quits: dpuerto (~dpuerto@136-27-83-52.cab.webpass.net) (Ping timeout: 250 seconds)
[03:37:24] *** Joins: tccki_ (~tccki@box.webslate.co.nz)
[03:39:14] *** Quits: Reign (~Username@ip98-161-226-10.ph.ph.cox.net) (Quit: Going offline, see ya! (www.adiirc.com))
[03:40:01] <jaawerth> ljharb: hey wanna see something horrifying? you know those zalgo-text generators that have been going around and inject broken unicdoe into text? ever wondered how many languages you could run through those and still get executable code? https://gist.github.com/jaawerth/0949eca6b3fc33a5353e142cfacf2630
[03:40:03] *** Quits: tccki (~tccki@box.webslate.co.nz) (Ping timeout: 256 seconds)
[03:40:03] *** tccki_ is now known as tccki
[03:41:07] <jaawerth> everything is a valid identifier! everythiiiiiing
[03:41:11] *** Quits: N4buc0- (~N4buc0@191.250.99.50) (Ping timeout: 256 seconds)
[03:42:52] <fweht> is there some convention, when you a class like `class{constructor(x){this.x=x;this.y=f(x),this.z=g(x)}}`, would you rather write it like this or put the `this.x=x`to the end of the block or `class{constructor(x){this.x=x;this.y=f(this.x),this.z=g(this.x)}}`...  its all very similar, i just wonder if there are slight conventions over style...
[03:43:23] *** Joins: cmbengue (~Thunderbi@207.191.249.160)
[03:43:29] *** Joins: kakashiA1 (~kakashi@ip-37-201-198-9.hsi13.unitymediagroup.de)
[03:44:32] *** Joins: ruzui (~ruzu@107-179-252-71.cpe.teksavvy.com)
[03:44:42] <ljharb> jaawerth: lol
[03:44:49] <ljharb> fweht: neither. use class fields.
[03:45:02] <ljharb> oh wait, this is based on constructor args
[03:45:29] <ljharb> fweht: i'd probably do x y z assignment. you don't want all those `this.` lookups.
[03:46:19] <fweht> ljharb: hmm, so like the first options?  and sorry for my typos btw, im so tired already
[03:49:43] <ljharb> fweht: yes
[03:49:50] <fweht> ljharb: thanks :)
[03:50:22] *** Quits: summersault (~summersau@179.221.251.36) (Remote host closed the connection)
[03:52:44] *** Quits: MrBlue (~MrBlue@5.181.233.230) (Quit: Leaving)
[03:54:29] *** Joins: dpuerto (~dpuerto@136-27-83-52.cab.webpass.net)
[03:54:31] *** Quits: OverCoder (~OverCoder@user/overcoder) (Quit: Quitting? That's odd.)
[03:55:16] *** Quits: EdFletcher (~PKD@user/edfletcher) (Quit: Quit.)
[03:56:37] <Donitz> is there a lightweight alternative for electron for making webgl apps specifically
[03:57:23] *** Joins: EdFletcher (~PKD@user/edfletcher)
[03:59:57] *** Quits: clydez (~clydez@178-116-34-81.access.telenet.be) (Remote host closed the connection)
[04:02:36] *** Quits: dpuerto (~dpuerto@136-27-83-52.cab.webpass.net) (Ping timeout: 250 seconds)
[04:02:53] *** Quits: fjmorazan (~quassel@user/fjmorazan) (Quit: fjmorazan)
[04:03:23] *** Joins: fjmorazan (~quassel@user/fjmorazan)
[04:08:49] *** Joins: FlorianBad (~FlorianBa@cpe-67-49-107-16.dc.res.rr.com)
[04:09:46] <FlorianBad> Is SVG still the fastest way to trace graphs in Javascript?  I don't want any library, I'm (re)writing my own
[04:10:11] *** Joins: summersault (~summersau@179.221.251.36)
[04:10:45] <corwin> canvas, maybe?
[04:11:02] <FlorianBad> hmm
[04:11:17] *** Quits: mat001_ (~mat001@69.4.234.69) (Remote host closed the connection)
[04:11:43] <FlorianBad> right, because it uses opengl and so on, right? The graphic card
[04:12:38] <corwin> browser/UA dependant obvs, but... I think so?
[04:13:37] <FlorianBad> Well, if you think about it that's exactly because it uses the GPU that we can make good fingerprints...;)  So probably
[04:14:05] <corwin> sounds right ;)
[04:14:37] *** Quits: summersault (~summersau@179.221.251.36) (Ping timeout: 256 seconds)
[04:15:04] *** Joins: mdemo (~mdemo@user/mdemo22)
[04:16:58] *** Joins: summersault (~summersau@179.221.251.36)
[04:19:07] <Maxdamantus> The fastest graph library I know of is uPlot, which uses canvas.
[04:19:58] *** Quits: ferdna (~ferdna@user/ferdna) (Quit: Leaving)
[04:20:05] <Maxdamantus> Unless you're relying on particular graphics features offered by SVG, canvas will almost certainly be "faster" at drawing graphs.
[04:20:41] *** Joins: dpuerto (~dpuerto@136-27-83-52.cab.webpass.net)
[04:20:48] *** Quits: colordrops (~erahhal@2603-8001-9600-7b60-0010-0100-0001-cee7.res6.spectrum.com) (Ping timeout: 250 seconds)
[04:20:49] *** Parts: et09 (~et09@user/et09) ()
[04:20:55] *** Joins: mud (~mud@user/kadoban)
[04:21:25] *** Quits: summersault (~summersau@179.221.251.36) (Ping timeout: 256 seconds)
[04:21:35] <Maxdamantus> (assuming you're willing to put the effort into making it efficient---in SVG you'll eventually run into issues with the number of things in the DOM, but you can avoid that issue in canvas)
[04:22:24] *** Quits: ramblebamble (ramblebamb@gateway/vpn/protonvpn/ramblebamble) (Quit: WeeChat 3.4)
[04:22:45] <Maxdamantus> I don't think it's so much to do with graphics acceleration, the main issue will be storage of data.
[04:23:56] <Maxdamantus> With canvas, you can organise it so your data is stored only once in big concise arrays, and you only read it while rendering to the pixel grid.
[04:24:55] <Maxdamantus> With SVG, you're probably going to duplicate all of your datapoints as DOM nodes, which are much more expensive storage-wise than numbers in an array.
[04:26:17] <KevinX> Donitz https://tauri.studio/en/
[04:27:29] *** Quits: dpuerto (~dpuerto@136-27-83-52.cab.webpass.net) (Ping timeout: 256 seconds)
[04:27:39] <FlorianBad> Maxdamantus: ok awesome, I was actually reading about both to learn more, and that's also the conclusion I came up with. And since I'm someone who loves CONTROL, like coding everything from scratch, I think I will prefer canvas. The latest graph library I built was using SVG and it was such a mess I got really frustrated.
[04:28:38] <FlorianBad> The only thing I'm wondering is user interaction, like hovering a line and it makes it thicker for example, do you have the redraw the whole image? Or can you seperate the components so that you only redraw that line?
[04:29:26] <Maxdamantus> You basically have to redraw the image, or at least the parts you're updating.
[04:30:14] <FlorianBad> ok, and by parts you really mean pixels?
[04:30:15] <Maxdamantus> You could get away with only redrawing that line pretty easily by using a second canvas on top.
[04:30:44] <FlorianBad> I see, opacity then. So I can have a canvas per object?
[04:30:54] <FlorianBad> line per curve of a graph e.g.
[04:31:05] <FlorianBad> s/line/like/
[04:31:18] <Maxdamantus> So you have one base canvas that only updates on pan/zoom, and another canvas on top that renders a single line or datapoint etc that's under the cursor.
[04:31:53] <Maxdamantus> You'd probably do it based on update frequency, rather than scene composition.
[04:32:51] <Maxdamantus> The hover overlay data updates more frequently, so that's why it might have a separate canvas.
[04:32:56] <FlorianBad> now, are we talking about video frame rate kind of speeds or....? I have no clue what to expect in terms of performance. Because at first it seems a bit crazy to redraw a picture from scratch, but I guess it completely depends on performance. If the whole thing is redrawn in 20ms on a basic latop then it doesn't matter
[04:33:07] *** Quits: simpleauthority (~simpleaut@user/simpleauthority) (Quit: ZNC 1.8.2 - https://znc.in)
[04:34:37] *** Joins: simpleauthority (~simpleaut@user/simpleauthority)
[04:34:43] <Maxdamantus> In uPlot, I've used charts with probably millions of data points, and it basically works.
[04:35:49] <Maxdamantus> Not sure at what point it takes a significant fraction of a second to update, but if you've only got a few thousand points, you'd expect that to render within a couple of milliseconds.
[04:36:29] <FlorianBad> ok, wow. If that's amazingly fast then it really offers completely unlimited possibilities;)  I can go wild with animations :D
[04:36:44] *** Quits: Tobbi (~Tobbi@2a02:8108:1240:48ec:9f5:eb51:8b61:96ab) (Quit: My MacBook has gone to sleep. ZZZzzz…)
[04:37:11] <FlorianBad> I need to find some examples I can test just to see how fast it is
[04:40:28] *** Joins: xsperry (~xs@user/xsperry)
[04:40:36] <FlorianBad> holy shit lol   https://codepen.io/jackrugile/pen/DGenc   (click the canvas... it traces more stuff)
[04:41:50] <FlorianBad> one thing that's awesome too is the number of lines of code... It's probably very well written, ultra clean stuff
[04:44:51] *** Joins: bprompt (~default@207.98.72.14)
[04:45:31] *** Joins: wroathe (~wroathe@206-55-188-8.fttp.usinternet.com)
[04:45:32] *** Quits: wroathe (~wroathe@206-55-188-8.fttp.usinternet.com) (Changing host)
[04:45:32] *** Joins: wroathe (~wroathe@user/wroathe)
[04:45:58] *** Joins: dpuerto (~dpuerto@136-27-83-52.cab.webpass.net)
[04:47:22] *** Joins: wellen (~w~llen@dynamic-046-114-163-147.46.114.pool.telefonica.de)
[04:48:03] *** Quits: kakashiA1 (~kakashi@ip-37-201-198-9.hsi13.unitymediagroup.de) (Ping timeout: 256 seconds)
[04:48:30] *** Quits: bprompt (~default@207.98.72.14) (Client Quit)
[04:49:24] *** Quits: trafficjam (~qubes@118.127.126.178) (Ping timeout: 250 seconds)
[04:50:38] *** Joins: trafficjam (~qubes@118.127.126.178)
[04:51:58] <FlorianBad> 6 is amazing: https://code.tutsplus.com/articles/21-ridiculously-impressive-html5-canvas-experiments--net-14210
[04:53:37] *** Joins: sickdyd (~sickd@120.51.82.69.ap.gmobb-fix.jp)
[04:54:10] *** Quits: dpuerto (~dpuerto@136-27-83-52.cab.webpass.net) (Ping timeout: 250 seconds)
[04:54:30] *** Quits: trafficjam (~qubes@118.127.126.178) (Client Quit)
[04:54:41] *** Quits: xsperry (~xs@user/xsperry) (Ping timeout: 256 seconds)
[04:55:59] *** Quits: trevors (~trevors@user/trevors) (Quit: trevors)
[04:56:30] <FlorianBad> OMG 14.   .....
[04:56:57] *** Quits: night_wulfe (~wulfe@cpe-174-103-156-213.cinci.res.rr.com) (Ping timeout: 240 seconds)
[04:57:00] *** Joins: summersault (~summersau@179.221.251.36)
[04:57:55] *** Quits: summersault (~summersau@179.221.251.36) (Remote host closed the connection)
[04:58:53] *** Joins: xsperry (~xs@user/xsperry)
[04:59:09] *** Joins: night_wulfe (~wulfe@cpe-174-103-156-213.cinci.res.rr.com)
[04:59:32] *** Quits: LtHummus (~lthummus@97-126-121-3.tukw.qwest.net) (Read error: Connection reset by peer)
[04:59:32] *** Quits: KnownSyntax (sid233169@user/knownsyntax) (Ping timeout: 240 seconds)
[05:00:12] *** Joins: rickbutton_ (sid410078@id-410078.helmsley.irccloud.com)
[05:00:18] *** Joins: jsatk__ (sid304796@id-304796.helmsley.irccloud.com)
[05:00:20] *** Joins: syg_ (sid521913@id-521913.lymington.irccloud.com)
[05:00:27] *** Joins: KnownSyntax (sid233169@user/knownsyntax)
[05:00:29] <FlorianBad> Maxdamantus: ok so there's no doubt it's fast, VERY fast :)  I had no idea it was that fast, that's awesome
[05:00:35] *** Joins: graingert_ (sid128301@id-128301.tinside.irccloud.com)
[05:00:41] *** Joins: relipse_ (sid16131@id-16131.tinside.irccloud.com)
[05:01:52] *** Joins: Jck_true6 (~jcktrue@user/jck-true/x-0200799)
[05:02:24] *** Quits: wellen (~w~llen@dynamic-046-114-163-147.46.114.pool.telefonica.de) (Ping timeout: 250 seconds)
[05:02:39] *** Joins: sickdyd_ (~sickd@120.51.82.69.ap.gmobb-fix.jp)
[05:02:53] *** Joins: LtHummus (~lthummus@97-126-121-3.tukw.qwest.net)
[05:03:11] *** Quits: sickdyd (~sickd@120.51.82.69.ap.gmobb-fix.jp) (Ping timeout: 256 seconds)
[05:04:44] *** Joins: shreyasminocha_ (51fdc93eda@user/shreyasminocha)
[05:04:52] *** Joins: Cheaterm1n (~Cheaterma@user/cheaterman)
[05:05:02] *** Joins: OneMirro1 (~far@onegrandcircle.com)
[05:05:23] *** Joins: aolko[m]1 (~aolko93ma@2001:470:69fc:105::68ec)
[05:06:07] <oscurochu> im using fetch in my frontend. is there a good reason to switch to axios if fetch is working for me?
[05:06:58] <KevinX> oscurochu If you need ie11
[05:07:35] <oscurochu> i need to switch to axios if i need ie11?
[05:07:43] <KevinX> yes
[05:07:56] <KevinX> ie11 doens't have the fetch api
[05:07:59] <Maxdamantus> FlorianBad: 6 uses WebGL, rather than plain canvas (2D).
[05:08:36] <Maxdamantus> (6 doesn't work for me, since I don't have WebGL enabled, though 1 (which you linked first) works)
[05:08:38] *** Quits: LtHummus (~lthummus@97-126-121-3.tukw.qwest.net) (Quit: ZNC 1.8.2 - https://znc.in)
[05:08:40] <oscurochu> im read a comparison between the two, axios has built in xsrf
[05:09:04] *** Quits: relipse (sid16131@id-16131.tinside.irccloud.com) (Ping timeout: 240 seconds)
[05:09:04] *** Quits: rickbutton (sid410078@id-410078.helmsley.irccloud.com) (Ping timeout: 240 seconds)
[05:09:04] *** relipse_ is now known as relipse
[05:09:04] *** Quits: graingert (sid128301@id-128301.tinside.irccloud.com) (Ping timeout: 240 seconds)
[05:09:04] *** Quits: syg (sid521913@id-521913.lymington.irccloud.com) (Ping timeout: 240 seconds)
[05:09:05] *** Quits: jsatk_ (sid304796@id-304796.helmsley.irccloud.com) (Ping timeout: 240 seconds)
[05:09:05] *** syg_ is now known as syg
[05:09:05] *** Quits: APic (apic@apic.name) (Ping timeout: 240 seconds)
[05:09:05] *** Quits: fruitypunk1 (~user@2a01:7c8:aaaa:12:5054:ff:fe69:1df9) (Ping timeout: 240 seconds)
[05:09:05] *** Quits: aolko[m] (~aolko93ma@2001:470:69fc:105::68ec) (Ping timeout: 240 seconds)
[05:09:06] *** Quits: Jck_true (~jcktrue@user/jck-true/x-0200799) (Ping timeout: 240 seconds)
[05:09:06] *** Quits: Deide (~deide@user/deide) (Ping timeout: 240 seconds)
[05:09:06] *** Jck_true6 is now known as Jck_true
[05:09:06] *** Quits: WillPittenger (~willpitte@2001:470:69fc:105::1bf) (Ping timeout: 240 seconds)
[05:09:06] *** Quits: Cheaterman (~Cheaterma@user/cheaterman) (Ping timeout: 240 seconds)
[05:09:06] *** Quits: petril (~petril@user/petril) (Ping timeout: 240 seconds)
[05:09:07] *** Quits: OneMirror (~far@onegrandcircle.com) (Ping timeout: 240 seconds)
[05:09:07] *** Quits: shreyasminocha (51fdc93eda@user/shreyasminocha) (Ping timeout: 240 seconds)
[05:09:07] *** Quits: hackdash (h@user/hackdash) (Ping timeout: 240 seconds)
[05:09:07] *** rickbutton_ is now known as rickbutton
[05:09:07] *** graingert_ is now known as graingert
[05:09:08] *** shreyasminocha_ is now known as shreyasminocha
[05:09:35] <KevinX> Yeah if you need a specific feature then check the docs to see what's supported
[05:12:10] *** Joins: LtHummus (~lthummus@97-126-121-3.tukw.qwest.net)
[05:13:45] *** Joins: APic (apic@apic.name)
[05:13:50] *** Joins: fruitypunk1 (~user@2a01:7c8:aaaa:12:5054:ff:fe69:1df9)
[05:14:30] <oscurochu> i dont have any tests written for my front end... i dont even know where to begin. i have so many functions and components that do too many things.
[05:14:51] <KevinX> refactor time
[05:15:00] <oscurochu> my backend was a lot more decoupled
[05:15:30] <oscurochu> it looks like i began refactoring already, and have a bunch of files with missing imports. ugh
[05:15:45] *** Joins: dpuerto (~dpuerto@136-27-83-52.cab.webpass.net)
[05:15:46] *** Quits: xsperry (~xs@user/xsperry) ()
[05:15:53] *** Joins: petril (~petril@user/petril)
[05:16:04] <oscurochu>  guess its better to have crappy code than it is to have to start  over. at least the logic is already there
[05:16:35] *** Joins: xsperry (~xs@user/xsperry)
[05:17:31] *** Quits: Gurkenglas (~Gurkengla@dslb-002-203-144-204.002.203.pools.vodafone-ip.de) (Ping timeout: 256 seconds)
[05:17:48] *** Joins: hackdash (h@2600:3c01::f03c:91ff:feae:9e7b)
[05:17:49] *** Quits: hackdash (h@2600:3c01::f03c:91ff:feae:9e7b) (Changing host)
[05:17:49] *** Joins: hackdash (h@user/hackdash)
[05:19:07] *** Joins: Deide (~deide@user/deide)
[05:20:11] *** Quits: \mSg (mSg@user/msg/x-0285936) (Ping timeout: 256 seconds)
[05:20:29] <oscurochu> plus i have an api that i really dont want to test because i plan  on replacing it as soon as i get done writing enough tests
[05:21:02] *** Joins: WillPittenger (~willpitte@2001:470:69fc:105::1bf)
[05:21:09] *** Quits: hax (~hax@user/hax) (Remote host closed the connection)
[05:22:05] *** Joins: vysn (~vysn@user/vysn)
[05:22:26] *** Quits: panella32 (~panella32@45.130.83.59) (Quit: Textual IRC Client: www.textualapp.com)
[05:29:09] *** Quits: Naan (~naan@user/naan) (Read error: Connection reset by peer)
[05:32:27] *** Quits: brw (~bas@haring.bas.sh) (Read error: Connection reset by peer)
[05:32:32] <KevinX> sounds like you have a lot of work for 2022
[05:32:38] *** Joins: kakashiA1 (~kakashi@ip-37-201-198-9.hsi13.unitymediagroup.de)
[05:32:59] *** Joins: brw (~bas@haring.bas.sh)
[05:33:59] *** Quits: dpuerto (~dpuerto@136-27-83-52.cab.webpass.net) (Remote host closed the connection)
[05:34:15] *** Joins: dpuerto (~dpuerto@136-27-83-52.cab.webpass.net)
[05:37:21] *** Quits: kakashiA1 (~kakashi@ip-37-201-198-9.hsi13.unitymediagroup.de) (Ping timeout: 256 seconds)
[05:42:23] *** Joins: wellen (~w~llen@dynamic-046-114-163-147.46.114.pool.telefonica.de)
[05:43:17] *** Quits: wellen (~w~llen@dynamic-046-114-163-147.46.114.pool.telefonica.de) (Remote host closed the connection)
[05:43:40] *** Joins: wellen (~w~llen@dynamic-046-114-163-147.46.114.pool.telefonica.de)
[05:47:33] *** Quits: chenqisu1 (~bhca7d@183.217.201.21) (Ping timeout: 256 seconds)
[05:58:32] *** Quits: TonyStone (~TonyStone@cpe-74-76-51-197.nycap.res.rr.com) (Remote host closed the connection)
[06:02:09] *** Joins: dave0 (~davezero@069.d.003.ncl.iprimus.net.au)
[06:04:20] *** Quits: debayer94 (~debayer@cpe-76-169-99-230.socal.res.rr.com) (Remote host closed the connection)
[06:04:36] *** Joins: kakashiA1 (~kakashi@ip-37-201-198-9.hsi13.unitymediagroup.de)
[06:04:57] *** Joins: debayer94 (~debayer@cpe-76-169-99-230.socal.res.rr.com)
[06:06:59] *** Quits: fweht (uid404746@id-404746.lymington.irccloud.com) (Quit: Connection closed for inactivity)
[06:07:50] <oscurochu> what does this do? "react-scripts test --env=jsdom"
[06:08:27] <oscurochu> im trying to use jest, but this is already in my package.json.
[06:10:23] <oscurochu> create-react-app.dev says react already uses jest, but i had jasmine installed instead from when i installed react16
[06:13:58] *** Joins: trevors (~trevors@user/trevors)
[06:16:13] *** Joins: bkool (~bkool@c-73-8-91-229.hsd1.il.comcast.net)
[06:19:18] <ljharb> oscurochu: means you made your app with CRA, which is only good for toys, and you have to eject to do anything useful
[06:20:39] <oscurochu> so remove the react-scripts?
[06:21:30] <oscurochu> i have a command called eject. is that what you mean?
[06:27:59] <ljharb> yes
[06:28:23] *** Joins: debayer948 (~debayer@cpe-76-169-99-230.socal.res.rr.com)
[06:28:47] *** Quits: wellen (~w~llen@dynamic-046-114-163-147.46.114.pool.telefonica.de) (Remote host closed the connection)
[06:30:40] *** Joins: wellen (~w~llen@dynamic-046-114-163-147.46.114.pool.telefonica.de)
[06:31:18] *** Quits: wellen (~w~llen@dynamic-046-114-163-147.46.114.pool.telefonica.de) (Remote host closed the connection)
[06:31:40] *** Quits: debayer94 (~debayer@cpe-76-169-99-230.socal.res.rr.com) (Ping timeout: 250 seconds)
[06:31:40] *** debayer948 is now known as debayer94
[06:31:42] *** Joins: wellen (~w~llen@dynamic-046-114-163-147.46.114.pool.telefonica.de)
[06:32:55] *** Quits: wellen (~w~llen@dynamic-046-114-163-147.46.114.pool.telefonica.de) (Read error: Connection reset by peer)
[06:33:12] *** Joins: wellen (~w~llen@dynamic-046-114-163-147.46.114.pool.telefonica.de)
[06:33:19] *** Joins: leduyquang753 (~leduyquan@user/leduyquang753)
[06:34:00] *** Joins: hax (~hax@69.165.175.67)
[06:34:00] *** Quits: hax (~hax@69.165.175.67) (Changing host)
[06:34:00] *** Joins: hax (~hax@user/hax)
[06:34:04] *** Quits: dpuerto (~dpuerto@136-27-83-52.cab.webpass.net) (Remote host closed the connection)
[06:34:52] *** Quits: wellen (~w~llen@dynamic-046-114-163-147.46.114.pool.telefonica.de) (Remote host closed the connection)
[06:34:56] *** Joins: dpuerto (~dpuerto@136-27-83-52.cab.webpass.net)
[06:35:11] *** Joins: wellen (~w~llen@dynamic-046-114-163-147.46.114.pool.telefonica.de)
[06:35:29] <oscurochu> ljharb if cra is for toys, how do i make it not a toy? dont grown ups like toys though?
[06:36:17] *** Quits: wellen (~w~llen@dynamic-046-114-163-147.46.114.pool.telefonica.de) (Remote host closed the connection)
[06:36:44] *** Joins: wellen (~w~llen@dynamic-046-114-163-147.46.114.pool.telefonica.de)
[06:37:52] <theskillwithin> oscurochu heres an example i made https://github.com/theskillwithin/theskillwithin-boilerplate
[06:38:39] <theskillwithin> oscurochu a lot of times I find myself using gatsbyjs or next.js tho which have a more preconfigured setup for you to start with
[06:38:51] *** Quits: DrowningElysium (uid190788@user/drowningelysium) (Quit: Connection closed for inactivity)
[06:41:33] <ljharb> You avoid CRA entirely, that’s how
[06:45:01] *** Joins: onosendi (~onosendi@user/onosendi)
[06:45:36] <onosendi> ljharb: what don't you like about CRA?
[06:46:22] *** Quits: dpuerto (~dpuerto@136-27-83-52.cab.webpass.net) (Remote host closed the connection)
[06:46:51] <ljharb> how it doesn’t work well?
[06:47:28] <ljharb> it doesn’t server render, it sets all the useful lint rules to off or warn, it doesn’t let you customize eslint, Babel, or webpack without ejecting. It’s just not a good tool.
[06:48:04] *** Quits: dave0 (~davezero@069.d.003.ncl.iprimus.net.au) (Quit: dave's not here)
[06:48:20] <bobdobbs> ljharb: I just back to terminal..  "live-reloading is too much magic for me"... what do you mean by that?
[06:49:02] *** Joins: dpuerto (~dpuerto@136-27-83-52.cab.webpass.net)
[06:49:11] <bobdobbs> ljharb: do you find 'live-reload' functionality not convenient? Is there some tradeoff for it that you don't like?
[06:49:19] *** Quits: ryanm (~rmahoski@47-215-143-215.flagcmtk01.res.dyn.suddenlink.net) (Ping timeout: 256 seconds)
[06:51:25] *** Quits: onosendi (~onosendi@user/onosendi) (Quit: WeeChat 3.3)
[06:51:30] <oscurochu> what do i do with that? just clone it and move my project into new project?
[06:52:32] <KevinX> HMR > live reload
[06:53:32] *** Quits: dpuerto (~dpuerto@136-27-83-52.cab.webpass.net) (Ping timeout: 240 seconds)
[06:55:07] *** Quits: harpia (~harpia@2804:2aec:205:1400:be2a:c8d5:4566:5dc8) (Quit: harpia)
[07:01:12] *** Joins: TonyStone (~TonyStone@2603-7080-8607-c36a-9cdb-69bc-753b-1e50.res6.spectrum.com)
[07:02:53] *** Quits: mud (~mud@user/kadoban) (Remote host closed the connection)
[07:09:09] *** Quits: kakashiA1 (~kakashi@ip-37-201-198-9.hsi13.unitymediagroup.de) (Ping timeout: 256 seconds)
[07:13:34] *** Joins: Alex8532 (~Alex8532@user/alex8532)
[07:20:05] *** Joins: pavonia (~user@user/siracusa)
[07:20:34] *** Quits: vysn (~vysn@user/vysn) (Quit: WeeChat 3.3)
[07:21:16] *** Joins: vysn (~vysn@user/vysn)
[07:21:48] *** Joins: dninja168 (~dninja168@2607:fea8:28c1:f400:ed70:1c6a:e428:c92a)
[07:21:49] *** Quits: vysn (~vysn@user/vysn) (Client Quit)
[07:21:59] *** Quits: nomic (~nomic@185.198.243.163) (Quit: Leaving)
[07:22:39] *** Quits: src (~src@user/src) (Quit: Leaving)
[07:23:11] *** Quits: wellen (~w~llen@dynamic-046-114-163-147.46.114.pool.telefonica.de) (Remote host closed the connection)
[07:24:07] *** Joins: dpuerto (~dpuerto@136-27-83-52.cab.webpass.net)
[07:24:26] <oscurochu> https://dpaste.com/2BA62JYA3
[07:25:02] <oscurochu> yarn failed
[07:25:17] *** Quits: stagas (~stagas@2a02:587:c429:f47f:312c:9ee4:e888:5c80) (Ping timeout: 240 seconds)
[07:25:54] *** Joins: mud (~mud@user/kadoban)
[07:27:14] *** Quits: Swahili (~Swahili@a95-94-208-187.cpe.netcabo.pt) (Remote host closed the connection)
[07:27:46] *** Joins: Swahili (~Swahili@a95-94-208-187.cpe.netcabo.pt)
[07:29:53] <KevinX> delete your lock file and try again
[07:30:17] <KevinX> well first run yarn to install everything
[07:30:58] <KevinX> and you could delete the node_modules dir as well
[07:31:18] <oscurochu> im just moving the project into the git i just cloned
[07:31:27] <oscurochu> but im trying to get it setup first
[07:34:02] *** Quits: dpuerto (~dpuerto@136-27-83-52.cab.webpass.net) (Ping timeout: 240 seconds)
[07:35:06] *** Joins: vysn (~vysn@user/vysn)
[07:36:06] <bobdobbs> In my continuing adventure for replacing my Gulp setup with node... I'm now looking at ways to watching and responding to file changes. Again, it looks like I have options: different ways of doing things. I'm checking out a few now, and I'd love to hear comments / suggestions.
[07:38:26] <KevinX> You can use browser sync https://browsersync.io/#install
[07:38:35] <KevinX> That's a pretty easy one to set up
[07:39:03] <SchmoSeph> Δ
[07:39:19] *** Joins: kakashiA1 (~kakashi@ip-37-201-198-9.hsi13.unitymediagroup.de)
[07:39:37] *** Joins: cheater (~Username@user/cheater)
[07:39:39] <cheater> hi
[07:40:08] <oscurochu> how many times does yarn have to fail with the same message before it starts to work
[07:40:25] <KevinX> Did you try the steps I suggested?
[07:40:25] <cheater> two questions: 1. how can i create a promise that will sit around indefinitely until i resolve it? 2. is there a way to wait for a GM_xmlHttpRequest to finish?
[07:40:57] <oscurochu> yes
[07:41:05] <KevinX> cheater new Promise()
[07:41:13] <cheater> that's all?
[07:41:13] *** Joins: Brett[Air] (~Brett@124.148.79.4)
[07:41:17] *** Quits: c4017w (~c4017@209.52.68.8) (Ping timeout: 256 seconds)
[07:41:22] <KevinX> They wait until it's resolved
[07:41:37] <KevinX> Or if you reload the page or something else like that
[07:41:52] <KevinX> oscurochu same error or a different one?
[07:41:56] <cheater> so i do mypromise = new Promise(), and then if i do await mypromise, it will wait indefinitely until some other thread of code does mypromise.resolve()/
[07:41:58] <cheater> ?
[07:42:01] <oscurochu> same
[07:42:23] <oscurochu> i didnt remove node_modules. i didnt see it in there the second time
[07:42:50] <KevinX> oscurochu try removing it. Start clean. Some packages use your current environment when installing
[07:43:10] *** Quits: TonyStone (~TonyStone@2603-7080-8607-c36a-9cdb-69bc-753b-1e50.res6.spectrum.com) (Quit: Leaving)
[07:43:12] <KevinX> cheater yeah that should work
[07:43:22] <cheater> thanks. any clue on how to await for the greasemonkey function to finish?
[07:44:04] <KevinX> From within the script?
[07:44:32] <cheater> i want to call GM_xmlHttpRequest() and have it fire its handlers, but then on the next line, i want to wait until those handlers are all done working.
[07:44:51] *** Quits: kakashiA1 (~kakashi@ip-37-201-198-9.hsi13.unitymediagroup.de) (Ping timeout: 256 seconds)
[07:45:55] <KevinX> I dont have deep experience with GM but I found this: https://grep.app/search?q=await%20GM_xmlHttpRequest
[07:46:15] *** Joins: dpuerto (~dpuerto@136-27-83-52.cab.webpass.net)
[07:46:16] <cheater> this thing https://violentmonkey.github.io/api/gm/#gm_xmlhttprequest
[07:47:22] <KevinX> If it doesn't return a promise, you cant "await" for it
[07:47:38] <KevinX> Unless you wrap it in a promise
[07:48:01] <cheater> that's really cool
[07:48:03] <cheater> he made a wrapper
[07:48:04] <cheater> thanks
[07:49:03] <KevinX> np
[07:50:00] <bobdobbs> cheater that's interesting
[07:50:23] <cheater> why does he put values inside reject()? i thought reject didn't have arguments?
[07:51:21] <KevinX> It does
[07:51:23] <bobdobbs> He basically replaced xhr in order to sidestep security inconveniences?
[07:51:28] <KevinX> https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Promise/reject
[07:53:27] <oscurochu> failed again.
[07:53:40] <KevinX> same error?
[07:53:42] <oscurochu> yup
[07:54:00] *** Quits: dpuerto (~dpuerto@136-27-83-52.cab.webpass.net) (Ping timeout: 250 seconds)
[07:54:06] <KevinX> Ill google it
[07:55:27] <oscurochu> thanks, i dont even know where to start on this one
[07:56:01] <KevinX> This is from https://github.com/theskillwithin/theskillwithin-boilerplate
[07:56:03] <KevinX> right?
[07:56:12] <oscurochu> yeah
[07:56:19] <KevinX> Maybe you just need to update the packages
[07:56:22] <systemfault> oscurochu: Not always but it usually means that your node version is too recent for one of the native modules
[07:56:37] <oscurochu> it could be. i just upgraded my entire system
[07:56:51] <oscurochu> so i guess im stuck with poor old cra
[07:56:58] <KevinX> Yeah do you have ncu?
[07:57:07] <oscurochu> ncu?
[07:57:08] <KevinX> try updating the packages and run it
[07:57:16] *** Joins: dpuerto (~dpuerto@136-27-83-52.cab.webpass.net)
[07:57:24] <KevinX> https://www.npmjs.com/package/npm-check-updates
[07:57:28] <systemfault> oscurochu: For a less painful node experience, use the LTS unless Latest has a special feature you _REALLY_ want
[07:58:03] *** Parts: dninja168 (~dninja168@2607:fea8:28c1:f400:ed70:1c6a:e428:c92a) ()
[07:58:19] <systemfault> But KevinX is probably right, update your package, maybe an update will allow the module to work on 17.x
[07:58:19] <oscurochu> i have 17.3.0
[07:58:30] <systemfault> That's "Latest" IIRC, not LTS
[07:58:42] <KevinX> you could try downgrading to node 14
[07:58:50] <systemfault> Nah, 16 is the latest LTS
[07:58:56] <systemfault> 14 is getting old at this point
[07:59:13] <KevinX> The boilerplate is 12 months old
[07:59:30] <KevinX> anyway, use fnm or something to swap fast
[07:59:31] <KevinX> https://github.com/Schniz/fnm
[07:59:37] <KevinX> Try 16 then 14
[08:00:07] <KevinX> But you need to reinstall the node_modeules each time though to rebuild
[08:00:38] <systemfault> That boilerplate is using the old node-sass, ew.
[08:00:43] *** Quits: bkool (~bkool@c-73-8-91-229.hsd1.il.comcast.net) (Quit: Leaving)
[08:00:46] <systemfault> I guess he had a reason
[08:01:07] <oscurochu> ok i just downgraded
[08:01:13] <oscurochu> i dont have a reason
[08:01:39] <KevinX> not you, theskillwithin
[08:01:49] <theskillwithin> KevinX ?
[08:02:16] <KevinX> Read up. We're debugging your boilerplate repo
[08:02:17] <systemfault> theskillwithin: oscurochu is using your react boilerplate and he has trouble with it on Node Latest
[08:02:24] <KevinX> not working with node 17
[08:02:26] <systemfault> theskillwithin: Not sure which package
[08:02:34] <theskillwithin> ahh, ya that boilerplate is starting to get old
[08:02:42] <oscurochu> lol
[08:02:43] <cheater> how does CORS work? if on url http://foo.com i create an xml http request to http://bar.biz, who tells whether this request is allowed, the owner of foo, or the owner of bar?
[08:02:46] <systemfault> If it's node-sass then he could just switch to "sass"
[08:02:56] <systemfault> cheater: Bar
[08:02:59] *** Quits: dpuerto (~dpuerto@136-27-83-52.cab.webpass.net) (Ping timeout: 256 seconds)
[08:03:10] <theskillwithin> ya
[08:03:21] <cheater> thanks
[08:03:34] <cheater> is there a way for foo to block requests to bar?
[08:03:43] <systemfault> Don't do them?
[08:03:53] <cheater> i'm talking about user scripts
[08:04:02] <oscurochu> lol
[08:04:12] <systemfault> cheater: Delete Bar?
[08:04:18] <systemfault> cheater: Please be more specific.
[08:04:18] *** Quits: debayer94 (~debayer@cpe-76-169-99-230.socal.res.rr.com) (Remote host closed the connection)
[08:04:19] <cheater> that made no sense
[08:04:29] <cheater> what do you want me to be more specific about?
[08:04:56] *** Joins: debayer94 (~debayer@cpe-76-169-99-230.socal.res.rr.com)
[08:04:57] <systemfault> cheater: You're asking is there a way to disallow people to knock on my home's door
[08:05:06] <KevinX> cheater check if GM has an api for it. extensions have different access to different apis
[08:05:19] <cheater> i'm not asking about analogies. i'm asking about how this specific things work
[08:05:24] <cheater> *thing works
[08:05:31] <oscurochu> you can reject a request
[08:05:36] <KevinX> cheater is writing a greasemonkey script
[08:05:48] <oscurochu> but you cannot block it, i think thats what he means?
[08:06:08] *** Joins: dpuerto (~dpuerto@136-27-83-52.cab.webpass.net)
[08:06:15] <cheater> KevinX: what's confusing to me is that GM has a GM_xmlHttpRequest api that needs to be explicitly granted to that user script, but when i just do fetch() from bar to baz, it succeeds, and I am not using GM_xmlHttpRequest, and I haven't granted it either.
[08:06:20] <systemfault> cheater: I can flood your server with curl if I want to, I don't "need" a browser... but your server can choose to ignore my requests
[08:06:52] <systemfault> cheater: Things like CSRF tokens could prevent unwanted requests.
[08:07:03] <systemfault> But preventing the request "itself"... no
[08:07:17] *** Quits: ruzui (~ruzu@107-179-252-71.cpe.teksavvy.com) (Ping timeout: 240 seconds)
[08:07:26] <cheater> i have no idea what you're trying to say.
[08:07:47] <KevinX> i suspect they are writing a user script to enable/disable outgoing traffic or something? maybe not. im confused now :D
[08:08:07] <systemfault> It doesn't make any sense...
[08:08:13] <KevinX> cheater write out what you're ultimately doing
[08:08:35] <cheater> KevinX: the thing i just told you above, that's what is confusing to me.
[08:08:51] <cheater> no, i'm just writing a script that'll look at prices on a website, and convert them to USD
[08:09:07] <cheater> and it uses an external api that lists currency conversion ratios
[08:09:28] <cheater> i thought xmlhttprequest would have been disallowed due to CORS or something like that
[08:09:28] <systemfault> cheater: Could be that "baz" supports CORS so normal fetch works just fine?
[08:09:33] <cheater> but i can just use fetch()
[08:09:44] <cheater> systemfault: i don't know. how do i check if it does?
[08:09:59] <systemfault> cheater: Check the HTTP headers of the response
[08:10:11] <systemfault> Look for "allow-access-control-origin"
[08:10:21] <cheater> the response headers have access-control-allow-origin	*
[08:10:25] <cheater> access-control-allow-origin *
[08:10:31] <systemfault> There ya go
[08:10:32] <cheater> so i guess that means they allow everything
[08:10:36] <systemfault> Yup
[08:10:43] <cheater> and there's no way for foo to stop this request from happening?
[08:10:47] *** Quits: cmbengue (~Thunderbi@207.191.249.160) (Quit: Thanks, see you later.)
[08:10:51] <cheater> for some reason i thought that was what cors was for...
[08:11:04] <KevinX> cors is up to the server
[08:11:04] <oscurochu> yarn failed again with node 16
[08:11:19] <KevinX> oscurochu on to 14 then :(
[08:11:48] <systemfault> oscurochu: What module is failing to compile?
[08:12:11] <oscurochu> node-sass
[08:12:22] <systemfault> oscurochu: Replace it with "sass"
[08:12:25] <systemfault> node-sass est dead.
[08:12:28] <oscurochu> oh
[08:12:29] <systemfault> *is dead even
[08:12:32] <KevinX> cheater you want foo to stop the userscript from accessing bar?
[08:12:34] <systemfault> My french is leaking...
[08:12:53] <KevinX> cheater a site cant access an extension (as far as I know)
[08:13:15] <cheater> ok. anyways, thanks
[08:13:27] <cheater> that helped clear up my confusion
[08:13:53] <bobdobbs> systemfault: that sentence is guessable in pretty much any indo-european language anyway.
[08:14:07] <KevinX> cheater nice. I like writing userscripts
[08:14:16] <systemfault> bobdobbs: :)
[08:14:23] <cheater> KevinX: :)
[08:14:37] <oscurochu> systemfault anything else in the boiler plate that i should update?
[08:14:54] <bobdobbs> systemfault: sounds like a line from shakespear's famous play about ancient Roman programmers breaking things
[08:15:12] <oscurochu> i dont understand how to upgrade to latest package other than manually updating the package.json with the newest version
[08:15:56] <systemfault> oscurochu: IIRC, you're using yarn, right?
[08:16:02] <oscurochu> yes
[08:16:03] *** Joins: kakashiA1 (~kakashi@ip-37-201-198-9.hsi13.unitymediagroup.de)
[08:16:08] <systemfault> oscurochu: yarn upgrade-interactive
[08:16:20] <oscurochu> i usually use npm but i installed yarn to use this boilerplate
[08:16:57] <oscurochu> yay its done
[08:17:25] *** Joins: colordrops (~erahhal@2603-8001-9600-7b60-0010-0100-0001-af6c.res6.spectrum.com)
[08:17:44] <KevinX> it builds?
[08:19:32] <systemfault> sass doesn't use a native module so there's nothing to build
[08:19:39] <systemfault> (It's that dart crap)
[08:20:02] <KevinX> im so happy im done with sass
[08:20:16] <theskillwithin> i love styled-components or emtionjs
[08:20:39] <KevinX> im tailwind + postcss
[08:21:06] <KevinX> never heard of emtionjs actually
[08:21:07] <cheater> ok so i generate a promise in my top level code and i want to await for it, but the console tells me: "await is only valid in async functions, async generators and modules"
[08:21:35] <systemfault> cheater: You cannot await at the top level (yet)
[08:21:41] <oscurochu> so how do i start the server?
[08:21:55] <systemfault> So either use classic promise chains or use an IIAFE
[08:22:02] *** Quits: dpuerto (~dpuerto@136-27-83-52.cab.webpass.net) (Ping timeout: 240 seconds)
[08:22:03] <cheater> what's an IIAFE
[08:22:04] <Maxdamantus> Or just call it.
[08:22:07] <KevinX> cheater you could also use `.then` if you're at the top level
[08:22:09] <Maxdamantus> No need to await.
[08:22:25] <systemfault> oscurochu: Look at the script section in the package.json
[08:22:29] <KevinX> IIFE*
[08:22:41] <systemfault> KevinX: What if the IIFE is async :)
[08:23:00] <oscurochu> it says compiled successfully. what do i do next
[08:23:07] <Maxdamantus> cheater: just call it without await or `.then`.
[08:23:20] <oscurochu> im gonna dig through these files i guess
[08:23:20] <KevinX> just dont forget the semicolon ;-)
[08:23:30] <cheater> here's what my code looks like... https://pastebin.com/di1tQY65
[08:23:37] <systemfault> (() => {})() is an IIFE, (async () => {})().catch(console.error) would be an IIAFE with a .catch :P
[08:23:53] <Maxdamantus> cheater: if you wrap it in something else, that's just deferring the inevitable. You always have to eventually just invoke the function and ignore the promise.
[08:24:07] <KevinX> oscurochu `yarn serve`
[08:24:16] <cheater> i want to do some promisey stuff using fetch but only if a variable is null, then once that's all well and done, do some other promisey stuff using another fetch.
[08:24:41] <systemfault> oscurochu: There's nothing to "dig", you open the package.json, look for the scripts section... look if you find what you need
[08:24:58] <Maxdamantus> cheater: okay, then that should be within an async function.
[08:25:06] <cheater> in what way?
[08:25:07] <Maxdamantus> cheater: which could be named or anonymous.
[08:25:25] <KevinX> cheater this wont work `var validateKey = fetch`
[08:25:45] <cheater> i'm lost on promises...
[08:25:47] <Maxdamantus> async function main(){ const a = await something(); ... } main();
[08:26:01] <cheater> ah
[08:26:07] *** Parts: MrMobius (~MrMobius@pool-108-31-243-125.washdc.fios.verizon.net) (Leaving)
[08:26:09] <cheater> so i should just wrap everything in a function?
[08:26:12] <cheater> and then await is fine?
[08:26:34] <Maxdamantus> Any async code needs to be within an async function, yes.
[08:26:42] <cheater> thanks
[08:26:51] *** Joins: dpuerto (~dpuerto@136-27-83-52.cab.webpass.net)
[08:26:59] <cheater> can i use var validateKey = fetch() then?
[08:27:02] <cheater> or should i use const?
[08:27:10] <Maxdamantus> !var @ cheater
[08:27:10] <jellobot> cheater, `var` defines a variable in the current function-level scope, and should not be used when `const` or `let` are available (see !babel, !const, and !let). Always use a keyword to declare variables, otherwise you will pollute the global scope (a keyword is required in strict mode).
[08:27:21] <Maxdamantus> So basically, no. Don't use `var`.
[08:27:36] <Maxdamantus> Since you're using `async` anyway, you've already got support for `const`/`let`.
[08:27:36] <cheater> ok
[08:27:37] <cheater> thanks
[08:28:16] <Maxdamantus> and you'll need to use `await` on the promise returned by `fetch`: const validateKey = await fetch(...);
[08:28:52] <KevinX> speaking of promises, Zakas just released a new book on them https://ebooks.humanwhocodes.com/promises
[08:29:29] <systemfault> I wonder if anyone has released a book about promises called "Broken Promises"
[08:29:31] <KevinX> I think he has a series on implementing promises too
[08:29:36] <KevinX> systemfault ha ha
[08:30:23] <KevinX> Read this and you'll have a complete understanding of promises (and maybe a headache) https://humanwhocodes.com/blog/2020/09/creating-javascript-promise-from-scratch-constructor/
[08:30:55] <cheater> can't i just do await fetch()? without const validateKey = ?
[08:31:12] <KevinX> yes
[08:31:18] <cheater> thanks
[08:31:28] <KevinX> then you define validateKey inside the `then`
[08:31:32] *** Quits: dpuerto (~dpuerto@136-27-83-52.cab.webpass.net) (Ping timeout: 240 seconds)
[08:31:58] <KevinX> well, maybe you need to initialize it outside the scope
[08:32:51] <cheater> can i do const foo = 1; const foo = 2? or can foo not be overridden after that?
[08:32:58] <ljharb> bobdobbs: i prefer manually hitting the reload button
[08:33:07] <cheater> yeah you can't
[08:33:08] <KevinX> let key; fetch().then((r) => { key = ...})
[08:33:14] <ljharb> cheater: `const` means you can't reassign, yes
[08:33:15] <cheater> should i use var then?
[08:33:19] <ljharb> cheater: but this is fine because you should never be reassigning variables
[08:33:25] <ljharb> cheater: use `let` if you insist on doing that.
[08:34:01] <bobdobbs> ljharb: Interesting. I find that operation just a teensy bit too expensive
[08:34:14] <KevinX> if you're only using a variable in one scope then use const
[08:34:53] <KevinX> fetch().then((r) => { const key = ...}) will work. put all your code inside the then
[08:35:11] <KevinX> dont use await at all here
[08:35:46] <KevinX> the code inside `then` wont run until fetch gets the response
[08:35:56] <ljharb> bobdobbs: i like that it's explicit
[08:36:07] <bobdobbs> ljharb: k
[08:36:12] <theskillwithin> ill have to see if I have time this weekend to update my boilerplate, its over a year old now
[08:36:53] *** Joins: winlundn (nick@2600:3c01::f03c:92ff:fe32:c297)
[08:37:39] <oscurochu> storybook wontstart
[08:37:48] <oscurochu> i mean, storybook wont build*
[08:37:58] *** Joins: dpuerto (~dpuerto@136-27-83-52.cab.webpass.net)
[08:38:12] <ljharb> bobdobbs: also, the nature of JS is such that it's actually impossible to do live reload/hot reload with 100% correctness
[08:38:17] <ljharb> so relying on it will give you subtle bugs
[08:39:59] <bobdobbs> huh
[08:40:15] <bobdobbs> good to know
[08:42:06] *** Quits: dpuerto (~dpuerto@136-27-83-52.cab.webpass.net) (Ping timeout: 250 seconds)
[08:43:07] <cheater> can i call out to jquery from an async function?
[08:44:14] *** Joins: c4017w (~c4017@209.52.68.8)
[08:44:54] *** Joins: c4017w_ (~c4017@209.52.68.8)
[08:45:28] <bobdobbs> cheater: I can't think of why not
[08:45:37] <cheater> cool, thanks.
[08:45:41] <bobdobbs> but I'm kinda noobish
[08:46:02] <ljharb> cheater: you can, but if you're using modern stuff like an async function, why not react or something
[08:46:19] <cheater> ljharb: i don't really care that much about it
[08:46:26] <KevinX> its greasemonkey which I think has jQuery in scope
[08:47:49] <ljharb> ah, gross, ok
[08:48:32] <theskillwithin> oscurochu ya my boilerplate is pretty old,  it might be worth doing a fresh setup of storybook
[08:48:32] *** Quits: c4017w (~c4017@209.52.68.8) (Ping timeout: 240 seconds)
[08:49:14] *** Quits: mud (~mud@user/kadoban) (Quit: quit)
[08:50:40] <theskillwithin> oh hm
[08:50:41] <cheater> hmm, i can't access the keys in the json response. they just come up as undefined. what am i doing wrong?
[08:51:12] *** Quits: Brett[Air] (~Brett@124.148.79.4) (Ping timeout: 250 seconds)
[08:51:40] <cheater> see the line with the asterisks https://pastebin.com/8kdBW7xH
[08:52:25] <cheater> i get this output. https://i.imgur.com/9aWABHK.png
[08:52:41] <theskillwithin> oscurochu in .babelrc change line 27 to  ["@babel/plugin-proposal-class-properties", { "loose": true }]
[08:52:47] <theskillwithin> oscurochu seems to fix the storybook build
[08:54:19] <KevinX> cheater remove `await` and you need to convert it to json first. go to the docs page of fetch
[08:54:49] *** twiclo is now known as Guest8575
[08:54:49] *** Quits: Guest8575 (~twiclo@2604:7b80:2000:1069:52fc:cedd:fbeb:10c) (Killed (calcium.libera.chat (Nickname regained by services)))
[08:55:07] *** Quits: c4017w_ (~c4017@209.52.68.8) (Ping timeout: 256 seconds)
[08:55:08] <KevinX> cheater https://developer.mozilla.org/en-US/docs/Web/API/Response/json#example
[08:55:21] *** Joins: Guest8575 (~twiclo@2604:7b80:2000:1069:52fc:cedd:fbeb:10c)
[08:56:44] <cheater> huh, so response.json() is an async function?
[08:57:16] <KevinX> yes
[08:58:27] *** Joins: c4017w (~c4017@209.52.68.8)
[08:58:46] <cheater> is response => response.json() the same as function(response) { return response.json() } ?
[08:59:09] <theskillwithin> oscurochu i updated .babelrc as seen here https://github.com/theskillwithin/theskillwithin-boilerplate/blob/master/.babelrc#L27
[08:59:20] <KevinX> cheater more or less, yes
[08:59:25] <cheater> thanks
[09:00:23] <cheater> that worked, thanks a lot!
[09:00:33] <cheater> i was using response.json() as a synchronous function.
[09:00:54] *** Joins: thojanssens (~thojansse@49.230.227.172)
[09:01:22] *** Joins: han-solo (~han-solo@user/han-solo)
[09:01:48] *** Joins: stagas (~stagas@2a02:587:c411:ab53:7bd7:2aa9:7b02:4c40)
[09:04:34] <thojanssens> hey
[09:04:43] <oscurochu> hi
[09:06:27] *** coc0nut_ is now known as coc0nut
[09:06:34] <rustyshackleford> here's one thing that trips me up about typescript
[09:06:34] *** Joins: matsaman (~matsaman@user/matsaman)
[09:07:10] <rustyshackleford> type Example = { a: string; b: string; }
[09:07:54] <rustyshackleford> const obj = {}; obj.a = 'foo'; obj.b = 'bar'
[09:08:08] <rustyshackleford> can I now say this object is an Example?
[09:08:55] <oscurochu> yes
[09:09:20] <systemfault> It won't even allow you to set a and b
[09:09:24] *** Quits: cheater (~Username@user/cheater) (Ping timeout: 250 seconds)
[09:09:31] <KevinX> yeah you wont get that far
[09:09:32] <systemfault> Because the inferred type is {}
[09:09:56] <rustyshackleford> so when I'm parsing something, in this case, a document I don't have all of the info available up front
[09:10:03] <rustyshackleford> I'm in the process of gathering it
[09:10:11] <stagas> Partial<Example>
[09:10:11] <systemfault> rustyshackleford: Then you can probably use a Partial<Example>
[09:10:22] <stagas> :P
[09:10:48] <rustyshackleford> and then at the end I can "convert" it to a Example?
[09:10:52] <rustyshackleford> I have to read about Partial
[09:10:55] <systemfault> But really, if you have object X and you want to assert that it's an Example, you'd have to do a type guard... or just say "fuck it" and type assert
[09:11:12] <stagas> rustyshackleford: yes at some point you can pass it to a function that accepts Example and if it's complete it will be ok
[09:11:16] <ljharb> rustyshackleford: but either way you should make the object all at once
[09:11:23] <oscurochu> storybook has loaded
[09:11:29] <ljharb> rustyshackleford: if you need to build something up, build up an array of entries, and use Object.fromEntries when you're done
[09:11:30] <stagas> and inside that function it won't be partial
[09:13:11] *** Joins: cheater (~Username@user/cheater)
[09:13:49] *** Quits: stenno (~stenno@user/stenno) (Ping timeout: 240 seconds)
[09:14:02] <rustyshackleford> ljharb: I prefer to make it all at once
[09:14:17] <rustyshackleford> obviously my example was trivial. gets trickier as you add more fields
[09:15:58] *** Joins: fef (~thedawn@user/thedawn)
[09:16:23] <stagas> it's purposefully annoying to create an object and then stick properties to it because it's an antipattern, in JS you could easily omit fields and then pass around objects and deep within some other part of the app find out it's missing X
[09:16:53] <KevinX> yep
[09:16:53] <rustyshackleford> Today I learned that I suck at javascript
[09:17:05] <KevinX> i doubt that
[09:17:18] <KevinX> just typescript jk
[09:17:21] <stagas> the runtime undefined error is very common in JS, almost non existant in TS
[09:17:32] <rustyshackleford> stagas: doesn't .reduce kind of encourage patterns like that?
[09:17:59] <rustyshackleford> I've definitely used .reduce with an empty object as the accumulator
[09:18:33] <stagas> yes but reduce happens in one call, it's not the same thing
[09:18:49] <stagas> as sticking properties one by one in a random fashion
[09:19:00] <rustyshackleford> its more similar than you act
[09:19:02] <systemfault> rustyshackleford: That pattern is pretty much dead since Object.fromEntries
[09:19:02] *** Quits: kakashiA1 (~kakashi@ip-37-201-198-9.hsi13.unitymediagroup.de) (Ping timeout: 240 seconds)
[09:19:04] <stagas> and it's a collection so it's a Record<> not an interface
[09:19:08] <stagas> not a type like Example
[09:19:19] <rustyshackleford> typescript is crazy
[09:20:21] <rustyshackleford> well I'm gonna go clean up the snow
[09:20:29] <rustyshackleford> I'll tinker with Object.fromEntries when I get back inside
[09:20:38] *** Quits: vdamewood (~vdamewood@fedora/vdamewood) (Quit: My MacBook Pro has gone to sleep. ZZZzzz…)
[09:20:56] <cheater> in javascript regex, when i want to match 1 or more repetitions, do i use + or \+? like here: priceStr.match(/^cena [0-9]+\./)
[09:21:04] <cheater> both work so i'm confused
[09:21:14] <cheater> actually i retract.
[09:21:26] <cheater> \+ worked because i was using "" for the regex not //.
[09:21:56] <stagas> +? is going to bail as soon as there are no matches, + will eat as much as it can if there are matches later
[09:24:17] <stagas> just test them with regex101 or regexr
[09:24:23] *** Quits: fef (~thedawn@user/thedawn) (Quit: Leaving)
[09:26:47] <KevinX> anyone using Racast for Mac?
[09:26:52] <KevinX> Raycast*
[09:29:07] *** Joins: maret (~maret@nat-88-212-37-89.antik.sk)
[09:30:53] *** Joins: kakashiA1 (~kakashi@ip-37-201-198-9.hsi13.unitymediagroup.de)
[09:33:17] *** Quits: whatsupdoc (uid509081@id-509081.hampstead.irccloud.com) (Quit: Connection closed for inactivity)
[09:34:02] <matsaman> built in launcher wfm
[09:34:30] <matsaman> could ask #macosx
[09:34:32] *** Quits: colordrops (~erahhal@2603-8001-9600-7b60-0010-0100-0001-af6c.res6.spectrum.com) (Ping timeout: 240 seconds)
[09:35:02] *** Quits: kakashiA1 (~kakashi@ip-37-201-198-9.hsi13.unitymediagroup.de) (Ping timeout: 240 seconds)
[09:35:56] <cheater> KevinX, would you mind assisting me in figuring out why my user script suddenly thinks it can't connect to the api, when the console says the request succeeded?
[09:37:05] <cheater> someone would need to request an api key (it's instant) and then look at this code when it's running, that's why i'm asking you specifically
[09:37:35] *** Joins: wellen (~w~llen@dynamic-046-114-174-051.46.114.pool.telefonica.de)
[09:38:25] <KevinX> just share some code and logs here. I'm working on something (a raycast extension actually) but can help here and there
[09:38:50] *** Quits: wellen (~w~llen@dynamic-046-114-174-051.46.114.pool.telefonica.de) (Remote host closed the connection)
[09:39:12] *** Joins: wellen (~w~llen@dynamic-046-114-174-051.46.114.pool.telefonica.de)
[09:39:38] <KevinX> and watching Buffy of all things
[09:39:46] <systemfault> Could be worse...
[09:39:57] *** Joins: Rockwood (~Rocky@user/rocky)
[09:40:14] <cheater> here's the code https://pastebin.com/tZmJUaDQ
[09:40:17] <systemfault> I finished Dexter last sunday... now I have nothing to watch
[09:40:18] *** Quits: wellen (~w~llen@dynamic-046-114-174-051.46.114.pool.telefonica.de) (Remote host closed the connection)
[09:40:31] <bobdobbs> systemfault: rewatch Battlestar Galactica
[09:40:33] <cheater> systemfault: it wasn't a very good last season.
[09:40:41] <bobdobbs> systemfault: BSG generally holds up
[09:40:45] *** Joins: wellen (~w~llen@dynamic-046-114-174-051.46.114.pool.telefonica.de)
[09:40:47] <cheater> systemfault: watch expanse. it's the best tv series of all times.
[09:40:59] <KevinX> I haven't seen Dexter. I heard it's coming back so I might
[09:41:00] <systemfault> cheater: I saw it as a way to to fix the awful ending of the original series
[09:41:10] <bobdobbs> Expanse is probably the best scifi tv show of all time
[09:41:17] <cheater> agreed
[09:41:21] <bobdobbs> systemfault: the books are really good too
[09:41:28] <theskillwithin> Bears beats Battlestar Galactica
[09:41:31] <systemfault> bobdobbs: I'll look
[09:41:37] <bobdobbs> Bears?
[09:41:48] *** Quits: wellen (~w~llen@dynamic-046-114-174-051.46.114.pool.telefonica.de) (Remote host closed the connection)
[09:41:48] <systemfault> I usually dislike space-related movies...
[09:41:52] <systemfault> (and series)
[09:42:09] <cheater> so in my code the alert on line 81 gets triggered and i don't know why. can someone try that code out? you'd have to get a free api key, and go to an url like this to trigger the user script: https://allegro.pl/oferta/buty-zimowe-cat-caterpillar-colorado-honey-r-40-9587744190
[09:42:13] *** Joins: wellen (~w~llen@dynamic-046-114-174-051.46.114.pool.telefonica.de)
[09:42:18] <cheater> i run the user script under violentmonkey in firefox.
[09:42:26] <cheater> but it'll probably run in any user script thing.
[09:42:30] <bobdobbs> systemfault: if you like crime: https://en.wikipedia.org/wiki/Unsolved_(American_TV_series)
[09:42:35] <theskillwithin> bobdobbs https://youtu.be/WaaANll8h18
[09:42:35] <skillbot> YouTube Title: The Office US - Jim vs Dwight - Jim Impersonates Dwight
[09:42:44] <KevinX> cheater this pattern is incorrect `await fetch().then`
[09:43:06] <bobdobbs> theskillwithin: lolyes
[09:43:10] <systemfault> bobdobbs: I'm the uncoolest guy you can imagine... I hate most rappers.
[09:43:18] *** Quits: wellen (~w~llen@dynamic-046-114-174-051.46.114.pool.telefonica.de) (Remote host closed the connection)
[09:43:25] *** Joins: harpia (~harpia@2804:2aec:205:1400:be2a:c8d5:4566:5dc8)
[09:43:26] <bobdobbs> systemfault: still a good true crime drama.
[09:43:33] <systemfault> bobdobbs: Ah, hmmm
[09:43:34] <cheater> KevinX: are you talking about line 30?
[09:43:47] *** Joins: wellen (~w~llen@dynamic-046-114-174-051.46.114.pool.telefonica.de)
[09:44:04] <cheater> so in that case how do i make sure that this promise is finished before i run line 44?
[09:44:12] <KevinX> 30 and 50. I don't know if that's your issue, but it's not right
[09:44:25] <KevinX> Just remove `await`
[09:44:33] <cheater> ok.
[09:44:55] <cheater> alert() still getting triggered
[09:45:10] <KevinX> you cant reject from in a promise like that, but you can throw an error
[09:45:15] <KevinX> line 34
[09:45:17] *** Quits: wellen (~w~llen@dynamic-046-114-174-051.46.114.pool.telefonica.de) (Remote host closed the connection)
[09:45:29] <cheater> just throw() ?
[09:45:41] *** Joins: wellen (~w~llen@dynamic-046-114-174-051.46.114.pool.telefonica.de)
[09:45:48] <KevinX> throw new Error('the reason')
[09:46:34] *** Joins: dpuerto (~dpuerto@136-27-83-52.cab.webpass.net)
[09:46:49] *** Quits: wellen (~w~llen@dynamic-046-114-174-051.46.114.pool.telefonica.de) (Remote host closed the connection)
[09:46:52] <KevinX> in .catch(function() { takes an argument and you can log that
[09:46:58] <KevinX> .catch(function(error) {
[09:47:28] *** Joins: kakashiA1 (~kakashi@ip-37-201-198-9.hsi13.unitymediagroup.de)
[09:48:09] <KevinX> After Buffy I'm going to watch Firefly
[09:48:47] <cheater> you don't want to watch firefly
[09:48:52] <cheater> it hurts too much
[09:49:09] <matsaman> way better than buffy
[09:49:18] *** Joins: stenno (~stenno@user/stenno)
[09:49:23] <matsaman> and it won't take your whole life
[09:49:51] <cheater> ah yes... "price is not defined"... thanks
[09:50:12] <bobdobbs> systemfault: that miniseries 'unsolved' goes into the ramparts scandal... which The Shield is heavily based on.
[09:50:12] <KevinX> i love firefly actually. seen it many times
[09:50:13] <cheater> thanks loads
[09:50:18] <cheater> ahh ok
[09:50:26] <cheater> what i'm saying it is it sucks they never made sequels
[09:50:30] <cheater> except for Expanse
[09:50:38] <cheater> which is of course the proper sequel to Firefly
[09:50:49] <cheater> because Firefly is Expanse season 0.
[09:50:55] <KevinX> oh really? I'll have to watch Expanse then
[09:50:57] <cheater> which we all agree upon
[09:51:00] <cheater> yes
[09:51:01] <bobdobbs> no
[09:51:06] <cheater> no?
[09:51:11] <bobdobbs> nyoooo
[09:51:15] <cheater> ?
[09:51:29] <bobdobbs> the chronology doesn't work at all
[09:51:47] <bobdobbs> geez, this is too geeky for me. I should get back to figuring out npm-watch
[09:52:01] <bobdobbs> damn, I actually said that unironically
[09:52:41] <matsaman> I remember liking The Expanse season 1
[09:52:48] <matsaman> not amazingly rewatchable, though
[09:53:01] <bobdobbs> matsaman: you are objectively wrong
[09:53:13] <theskillwithin> i like The Orville
[09:53:14] <bobdobbs> I will always stan the rewatchability of Expanse Season *
[09:53:57] *** Quits: stenno (~stenno@user/stenno) (Ping timeout: 240 seconds)
[09:59:56] <Rockwood> https://jsfiddle.net/50fLp9gz/1/ i am facing error in run script in jsfiddle
[10:01:14] <Rockwood> actually i am trying to make test case for chk hook
[10:02:11] <oscurochu> this storybook stuff seems like a lot  to take in... i just dont even know where to begin... lol
[10:02:57] *** Quits: maret (~maret@nat-88-212-37-89.antik.sk) (Quit: maret)
[10:03:58] <matsaman> Rockwood: and outside of jsfiddle?
[10:04:41] <Rockwood> children making issue
[10:04:45] <theskillwithin> Rockwood proably Uncaught Error: Target container is not a DOM element.
[10:04:51] <Alex8532> theskillwithin Rockwood: Hello.  Long time :).
[10:04:54] <Rockwood> i am trying to trace the cause for it
[10:04:55] <theskillwithin> prob is no #app
[10:05:04] <Rockwood> Alex8532, hi
[10:05:05] <theskillwithin> Rockwood should use codesandbox for react examples probably
[10:05:08] <oscurochu> technically, couldn't you await a promise?
[10:05:19] <Rockwood> theskillwithin, its too much heavy
[10:05:41] <theskillwithin> Alex8532 have you seen?  RIP GreenJello https://git.io/J2m1C |
[10:06:57] <Alex8532> theskillwithin: Awww, man I haven't.
[10:07:05] <Alex8532> That is so sad :(!
[10:08:06] <Alex8532> He helped me several times
[10:08:30] <oscurochu> he's touched many lives
[10:08:43] <theskillwithin> Rockwood huh? you should know how to use codesandbox by now,  iv seen you use it before
[10:08:50] *** Quits: harpia (~harpia@2804:2aec:205:1400:be2a:c8d5:4566:5dc8) (Quit: harpia)
[10:09:10] <cheater> i've created a span and i'm setting its text content like this:     priceEurSpan.textContent = "".concat(" = ", priceEurStrFull, " EUR")     how can i make the spaces non-breaking? i can't use &nbsp; since that will get put in literally
[10:09:11] <Rockwood> yeah i am making test case there
[10:11:40] <bobdobbs> If anyone is familiar with npm-watch, I could use a hand. I'm trying to watch my sass directory for changes and run an npm script in response
[10:11:43] <oscurochu> im thinking storybook is beyond where im at right now. but its a really nice thing to look forward to.
[10:11:56] <bobdobbs> This is my package.conf at the moment http://pastie.org/p/2y3opDobAoM0b85KLSZReX
[10:12:12] <KevinX> Rockwood onClick={onOK}
[10:12:42] <bobdobbs> 'npm run sass' as defined in that package.json works the way I want it to
[10:13:43] <bobdobbs> but if I run 'npm run watch', I get this message, and no changes if I edit files in the sass directory
[10:13:48] <bobdobbs> http://pastie.org/p/7bUkq3nvE0RCox5K9U4bpq
[10:13:53] <cheater> KevinX: ok, my user script works now. Thanks a lot!
[10:13:58] <Rockwood> https://codesandbox.io/s/inspiring-rgb-oyqou
[10:14:13] <KevinX> bobdobbs "watch" : "npm-watch sass"
[10:14:17] <Rockwood> now i am testing modal
[10:14:26] <KevinX> and ./node_modules/.bin/sass -> sass
[10:14:45] <KevinX> cheater wonderful!
[10:16:32] <cheater> 3.5 hours learning all this stuff..
[10:16:37] <cheater> well, i've done worse
[10:16:50] <cheater> good script in the end and now i know a little about js async
[10:16:53] <KevinX> Rockwood whats the issue or how do i reproduce it from the codesandbox?
[10:17:13] <Rockwood> KevinX, 2 sec
[10:17:28] <Rockwood> i will explain
[10:17:45] <KevinX> cheater you'll use promises a lot so that's a good thing to learn
[10:18:53] <cheater> hope not. not making js my day job :p
[10:18:57] <bobdobbs> ah, no worries. sorted my issue. Added the 'extensions' member the watch.sass object: http://pastie.org/p/7hxBKxp41WW55ohJST9FeQ
[10:18:59] <KevinX> :P
[10:19:25] *** Joins: falafel (~falafel@pool-96-255-70-50.washdc.fios.verizon.net)
[10:19:30] *** Joins: ferdna (~ferdna@user/ferdna)
[10:20:08] *** Quits: falafel (~falafel@pool-96-255-70-50.washdc.fios.verizon.net) (Client Quit)
[10:21:00] *** Joins: chenqisu1 (~bhca7d@183.217.201.21)
[10:21:10] <Alex8532> Later guys, I'm signing off.
[10:21:18] *** Quits: Alex8532 (~Alex8532@user/alex8532) (Quit: Going offline, see ya! (www.adiirc.com))
[10:22:16] *** Joins: Camilo (~hugh@host-92-1-126-125.as13285.net)
[10:22:25] *** Quits: pulse (~pulse@user/pulse) (Quit: pulse)
[10:22:26] <Rockwood> setShowModal is not a function <--- KevinX and updated code is here https://codesandbox.io/s/inspiring-rgb-oyqou?file=/src/App.js
[10:22:38] *** Joins: D4mned (~D1mned@212.101.251.96)
[10:23:02] <Rockwood> after click on create account text clicked
[10:23:07] <KevinX>  []
[10:23:14] <KevinX> You have {}
[10:23:24] <Rockwood> ah
[10:25:02] *** Quits: thojanssens (~thojansse@49.230.227.172) (Ping timeout: 240 seconds)
[10:25:14] *** Quits: dpuerto (~dpuerto@136-27-83-52.cab.webpass.net) (Ping timeout: 250 seconds)
[10:25:24] <Rockwood> https://codesandbox.io/s/inspiring-rgb-oyqou?file=/src/App.js  code works here but not in project
[10:25:52] <KevinX> then part of th ebuild process?
[10:25:58] <KevinX> the build*
[10:26:32] *** Quits: Camilo (~hugh@host-92-1-126-125.as13285.net) (Ping timeout: 250 seconds)
[10:26:35] <Rockwood> means?
[10:26:38] <theskillwithin> some people use react portals for modals sometimes
[10:27:05] <KevinX> If it's working on codesandbox but not in your project, then it's a game of spot the difference
[10:27:36] <KevinX> If the code is identical then you have to look at other aspects, like the bundler
[10:27:41] <rick123> ljharb: silly: stagas: Building something like hotjar which tracks user sessions like a video that the website/webapp owner/admin/company can replay in the admin panel to see how users have been interacting.
[10:27:43] <KevinX> or the environment
[10:28:08] <Rockwood> theskillwithin, is any kind of package?
[10:28:32] <KevinX> https://headlessui.dev/react/dialog
[10:28:50] *** Quits: macswagger (~macswagge@cpe-104-34-48-156.socal.res.rr.com) ()
[10:30:03] *** Joins: thojanssens (~thojansse@49.230.227.172)
[10:30:13] *** Joins: sam_1 (~sam_1@87.51.251.118)
[10:30:21] <theskillwithin> Rockwood really hard to help if your codesandbox works haha
[10:32:36] *** Quits: wroathe (~wroathe@user/wroathe) (Ping timeout: 250 seconds)
[10:34:17] *** Quits: Rockwood (~Rocky@user/rocky) (Ping timeout: 240 seconds)
[10:34:35] *** Joins: Rockwood (~Rocky@user/rocky)
[10:40:23] *** Quits: ferdna (~ferdna@user/ferdna) (Quit: Leaving)
[10:41:09] *** Joins: wroathe (~wroathe@206-55-188-8.fttp.usinternet.com)
[10:41:10] *** Quits: wroathe (~wroathe@206-55-188-8.fttp.usinternet.com) (Changing host)
[10:41:10] *** Joins: wroathe (~wroathe@user/wroathe)
[10:41:13] *** Quits: The_Blode (~Blode@user/the-blode/x-7164444) (Read error: No route to host)
[10:43:26] *** Joins: stenno (~stenno@user/stenno)
[10:45:36] *** Quits: wroathe (~wroathe@user/wroathe) (Ping timeout: 250 seconds)
[10:47:46] *** Quits: trevors (~trevors@user/trevors) (Quit: trevors)
[10:47:57] *** Quits: stenno (~stenno@user/stenno) (Ping timeout: 240 seconds)
[10:48:00] *** Joins: maret (~maret@195.12.158.102)
[10:48:36] *** Parts: cheater (~Username@user/cheater) (BitchX by panasync)
[10:51:51] *** Quits: kakashiA1 (~kakashi@ip-37-201-198-9.hsi13.unitymediagroup.de) (Ping timeout: 256 seconds)
[10:52:04] *** Joins: mat001 (~mat001@69.4.234.57)
[10:52:56] *** Quits: matsaman (~matsaman@user/matsaman) (Quit: leaving)
[10:53:27] <stagas> rick123: you're in control of the interactions though, those are the ones you need to replay, not the dom mutations which are side effects?
[10:55:07] *** Quits: debayer94 (~debayer@cpe-76-169-99-230.socal.res.rr.com) (Quit: The Lounge - https://thelounge.chat)
[10:55:15] *** Parts: n0q (~n0q@user/n0q) ()
[10:56:17] *** Quits: mat001 (~mat001@69.4.234.57) (Ping timeout: 240 seconds)
[10:56:23] *** Joins: Denver (~Denver@174-16-236-178.hlrn.qwest.net)
[10:57:00] <rick123> Well depends what kind of side effect. But basically the user moves cursor, track that. The user types something track that. The user clicks on a carousal arrow and that moves the carousal by certain pixels then track that, dropdown menus yes please. So basically any user interaction that causes any kind of changes in the page. Things that can be skipped for instance are JS animations. But as long as
[10:57:06] <rick123> its about "patch" and not each MutationRecord it may make sense to just track everything.
[10:58:29] *** Quits: akurilin_ (uid322841@id-322841.ilkley.irccloud.com) (Quit: Connection closed for inactivity)
[10:59:21] <rick123> I have some basic idea in mind on how to do this, but wondered if there are any packages already or see if folks here could help with better ideas.
[10:59:59] <rick123> I'll be spending some time reading this library code today - https://github.com/rafaelw/mutation-summary - to see if I can get something nice out of it.
[11:00:22] *** Quits: mknod (~mknod@user/mknod) (Quit: mknod)
[11:00:31] <KevinX> i missed the initial conversation but are you thinking to use a mutation observer?
[11:01:35] <rick123> Yeah this was my original question: Are there any libraries available that can help me listen to DOM mutation via MutationObserver, collect the records as a "patch" which I can save in a DB and then apply that patch back on the original DOM ? If not then some pointers on how a patch can be generated efficiently and then applied back would help
[11:01:37] *** Joins: dpuerto (~dpuerto@136-27-83-52.cab.webpass.net)
[11:01:48] *** Joins: Rockwood_ (~Rocky@user/rocky)
[11:01:59] <KevinX> If youre attaching it to the body tag you could have some serious overhead, but I think you can disable attribute watchers and maybe a few other optimizations
[11:02:15] <KevinX> But you would also need event listeners
[11:02:57] <rick123> If you mean inline event listeners then yes, as they are attribute changes only.
[11:03:02] <KevinX> Is this for your own site? you could also use a proxy to watch object changes
[11:03:31] <KevinX> event listeners like click, mouse movement, etc
[11:03:41] <rick123> KevinX: I was thinking of attaching it to html instead :P Haven't done any performance testing but there are session recording apps that does it without the user feeling any lag. I'm not sure where they attach but they record entire user sessions.
[11:03:42] <KevinX> mutation observers dont track those
[11:04:02] *** Quits: Rockwood (~Rocky@user/rocky) (Ping timeout: 240 seconds)
[11:04:17] <KevinX> just make sure your callback is lightweight
[11:04:20] <rick123> clicks and mouse movements yeah right.
[11:04:30] <rick123> key up/down as well
[11:04:57] <rick123> Yeah it should be lightweight. This is for an app we're building yes.
[11:05:04] <KevinX> to answer the questions though, I don't know a library
[11:05:12] <rick123> what do you mean by use a proxy to watch object for changes, which objects to Proxy ?
[11:05:29] <rick123> Yeah I've been searching npm for some libraries but can't find anything bang on.
[11:05:32] *** Quits: dpuerto (~dpuerto@136-27-83-52.cab.webpass.net) (Ping timeout: 240 seconds)
[11:05:37] <KevinX> a js proxy can watch any object for changes
[11:05:55] <KevinX> https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Proxy
[11:05:58] <rick123> So you mean create a proxy object for each Node ?
[11:06:12] <rick123> We're already using Proxy for certain things so I do understand what they do.
[11:06:19] <KevinX> if you have some critical business logic you need to monitor
[11:06:40] <KevinX> mutation observers and event listeners can only go so far
[11:06:49] <rick123> Oh ok sure
[11:07:38] <KevinX> you can have a proxy set trap to report changes, etc
[11:08:17] <rick123> I am reading the mutation summary libary right now as it does one thing pretty well. It is able to merge multiple MutationRecord on the same target and give one summary/entry/record/object for that. If I could implement that and then convert that into some form of object that holds the essential values I need to apply the patch + create a css selector out of the node, I think I might be able to
[11:08:23] <rick123> achieve the entire thing.
[11:08:39] <rick123> KevinX: Yeah I am doing that for certain things, pretty cool.
[11:09:18] <rick123> Even Proxy for certain functions/constructors
[11:10:33] <rick123> Although to apply patches, creating CSS selectors out of every DOM node (MutationRecord.target) and then applying via querySelector() maybe - I'm not sure if that's the most efficient way but I can't think of any other way. That was one area for which I was looking for some pointers.
[11:13:07] <stagas> rick123: that's going to be hell of a mess tracking objects all around the app. i'd simply make sure everything is emitting some event in a global event listener that and then serialize its output, ['click', { id: 'xyz' }] , ['scroll', { deltaY: 42 }] etc and then only watch that event listener for changes
[11:13:59] <stagas> then you can grab that and send it through some request anywhere, but first making sure your data are streamlined into one serialize-able output
[11:14:13] *** Cyp_ is now known as Cyp
[11:17:11] *** ChanServ sets mode: +o theskillwithin
[11:17:16] *** ChanServ sets mode: -o theskillwithin
[11:17:39] <rick123> I hear ya but that is less reliable in terms of "replay". For instance on replay if the
[11:18:11] <rick123> "website under inspection" goes through some new JS asset deployment which changes the behaviour of the click/scroll/key events then the replay result could be different.
[11:18:35] <rick123> To solve for this I should probably "cache" the JS assets but then the XHR/Fetch requests could change when the entire interaction is actually replayed.
[11:19:07] <rick123> For reasons like these I though just tracking DOM mutations might be a better idea. It could be a "degraded" experience but more "reliable"
[11:19:28] <stagas> good point, but even so if you're applying the DOM mutations in a new deployment they're going to break as well
[11:19:29] <rick123> Product-wise that is, tech-implementation will be heavier yes.
[11:19:51] <stagas> these have to be versioned/paired
[11:20:09] <rick123> No I will take a snapshot of the initial state of DOM when the recording is happening. So when that recording is replayed you're actually looking at an older snapshot in time compared to any new deployments. That's a better "product" experience.
[11:20:21] <rick123> You could consider each snapshot as a version yeah
[11:22:17] *** Quits: sam_1 (~sam_1@87.51.251.118) (Ping timeout: 256 seconds)
[11:22:57] <stagas> keep in mind also that the mutation observer is not firing in sync with the mutations, rather at the end of the event loop, so it's not "exactly" the same behavior if replayed
[11:23:32] <stagas> if two events happen in sync i guess that the latter will only be captured
[11:24:07] <stagas> which will leave you wondering how did this got here, where if you capture the events in sync with an event listener you know they fired together
[11:26:33] <stagas> a combination of the two strategies is the way probably
[11:27:45] <rick123> Could you give an example of this to make sure I understand it right ? I do know that the mutations are replayed at the end of event loop or maybe at the end of every tick. So that is clear.
[11:28:14] <rick123> mutations are replayed = MutationObserver callback is called with the MutationRecord list.
[11:29:19] <stagas> yes i could be wrong here, maybe the list has everything, but i know it's not in sync so i wouldn't trust it so much
[11:30:25] <stagas> let us know how it goes :) i'm curious how this plays out because it's something i'm interested also
[11:30:59] *** Joins: sam_1 (~sam_1@87.51.251.118)
[11:31:14] <rick123> Sure man, if I'm able to achieve it well maybe I'll put the scripts/libs out on github/npm.
[11:31:17] <stagas> rick123: the case i'm thinking is one event causing another, causing one mutation back on the same object, you'd only have the last event but i could be wrong
[11:32:09] <rick123> Nah, MutationObserver will track each and every mutation. Its me who wants to sort of merge them to the latest state. Because thats what matters. I guess React would be doing something similar in their virtual dom implementation as well.
[11:32:14] <stagas> you'll miss the inbetween event because it'll only show you attribute X changed to Y, not that it changed to Z inbetween
[11:32:43] <stagas> ok then that's amazing
[11:33:07] <rick123> If attribute X changes to Y and then to Z, MutationObserver will give you both the events (as MutationRecord). But I'd actually like only 1 event X->Z and not X->Y->Z. As that's what I care about in terms of "replaying" or "re-rendering"
[11:33:31] <stagas> ok you just want a visual replay
[11:33:52] <rick123> So the mutation summary library I shared above does this actually for every event loop (tick). It merges multiple events on the same attribute/node into a single one. So Initial->Final state, no intermediate states.
[11:33:56] <rick123> Yeah just a visual replay :)
[11:34:10] <stagas> on('anything', () => push(body.innerHTML) :P
[11:34:28] *** Joins: dpuerto (~dpuerto@136-27-83-52.cab.webpass.net)
[11:35:14] <rick123> Haha, that's the first consideration yeah :P I've also considered diffing the body.innerHTML through a text-differ lib or something and then applying that :P
[11:35:39] <rick123> But I guess MutationObserver would be neater (although more technically challenging).
[11:35:45] <rick123> s/guess/think
[11:36:01] <stagas> you can use a virtual dom on top and it'll be magnitudes faster
[11:36:23] <stagas> and track the virtual dom changes
[11:36:34] <gde33> lol this website, look what it does and view the source https://oklo.com
[11:37:04] <rick123> I don't understand a virtual dom implementation entirely but yes I do feel like looking into that as well. I'm getting this urge now to get into React's source :P
[11:37:14] <stagas> and there are probably tools that replay virtual dom changes already do the thing you want to do
[11:37:25] <oscurochu> Plugin/Preset files are not allowed to export objects, only functions.
[11:37:33] *** Joins: stenno (~stenno@user/stenno)
[11:37:38] *** Joins: kakashiA1 (~kakashi@ip-37-201-198-9.hsi13.unitymediagroup.de)
[11:37:56] <oscurochu> im going to refactor my code before i try figuring out how to use it with that boilerplate git.
[11:38:02] *** Quits: thojanssens (~thojansse@49.230.227.172) (Ping timeout: 250 seconds)
[11:38:05] <stagas> you need a virtual dom that uses the real dom, there should be a few
[11:39:23] <oscurochu> this is my first time trying to run jest on react. im not sure if i should be using the react scripts or if i should be using a plain old jest command for testing
[11:39:42] <rick123> gde33: Lol yeah that's funny :P CDN as well.
[11:40:21] <rick123> stagas: Yeah that maybe even more challenging. Virtual dom using Real dom to listen to for changes and stuff. If you find some libraries to share. I'll slowly start looking into them.
[11:41:55] <rick123> do share*
[11:41:56] *** Joins: nomic (~nomic@185.198.243.163)
[11:42:02] *** Quits: stenno (~stenno@user/stenno) (Ping timeout: 240 seconds)
[11:43:27] <stagas> rick123: it's a rabbit hole though, i warn you :P maybe you're fine with the mutations list, i have a couple but they're not probably for your use-case, https://github.com/stagas/vdomini is using the real dom to diff and https://github.com/stagas/vele is newer not finished yet but only uses the vdom to diff, not the real dom, but maybe if you need to read some code to see how it works in principle
[11:44:49] <stagas> because there are infinite solutions to that problem, i've done like 10+ implementations using different strategies
[11:45:35] *** Quits: sam_1 (~sam_1@87.51.251.118) (Ping timeout: 250 seconds)
[11:47:46] <stagas> rick123: it's all noise, the primary "algorithm" is this: https://github.com/stagas/vdomini/blob/main/src/render.ts#L480-L505
[11:47:46] <rick123> stagas: I will take a look, thanks
[11:48:09] <stagas> just going through each and every element and checking if it changed in a recursive fashion
[11:48:09] *** Joins: cheater (~Username@user/cheater)
[11:48:12] <cheater> hi
[11:48:18] <cheater> i've run into a problem with my user script from earlier
[11:48:25] <stagas> and replacing or mutating or creating
[11:49:41] <cheater> it adds a child element on the website
[11:50:34] <cheater> when i am looking at the page while it's loading, it adds the child element. however, if i open the page in a new tab, the child element doesn't show up. even though the console shows that the code has executed successfully.
[11:51:20] <rick123> cheater: Is there a demo we can look at ?
[11:51:45] <stagas> rick123: but yeah maybe use something that has the tooling you need already, preact and such have devtools that do these sorts of replays etc
[11:51:50] <cheater> you can install the user script and visit the page. you'll have to get a free api key for the api i'm using.
[11:52:42] <rick123> stagas: Yup, I do plan to look into virtual dom implementations as well to see if a better solution can come out of that.
[11:52:51] <rick123> I'll go through these sure
[11:53:28] <cheater> rick123: https://greasyfork.org/en/scripts/438574-allegro-pl-convert-prices-to-eur
[11:53:35] <cheater> there's a link there to where to get the api key
[11:53:43] <rick123> cheater: If you could create a demo on any online playground/sandbox that'd help folks here to see what the issue is.
[11:53:51] <oscurochu> i am running npm run eject and it still tells me i need to eject
[11:54:20] <cheater> rick123: i can't. this is 100% related to it being a user script on a specific website. you can't create a playground or sandbox from that.
[11:56:08] *** Joins: thojanssens (~thojansse@49.230.227.172)
[11:56:58] *** Joins: aniruddha (uid340443@id-340443.ilkley.irccloud.com)
[11:57:02] *** Quits: dpuerto (~dpuerto@136-27-83-52.cab.webpass.net) (Ping timeout: 240 seconds)
[11:59:17] *** Quits: cthulchu (~Cthulchu@69-172-160-196.cable.teksavvy.com) (Ping timeout: 256 seconds)
[11:59:58] *** Joins: sam_1 (~sam_1@87.51.251.118)
[12:00:07] <oscurochu> cheater: mock the fetch api
[12:00:26] <stagas> cheater: the script in the new tab runs earlier than the site has a chance to load fully, because the event loop runs differently, it's less accurate when the tab is not in focus
[12:01:24] <oscurochu> if you mock the api, you could probably get it to work in a sandbox.
[12:01:25] <stagas> cheater: did you try with another browser to see?
[12:01:27] <cheater> just use the api key 99ff6d7706be1a987460
[12:01:35] <cheater> stagas: no.
[12:01:49] <oscurochu> cheater: no
[12:01:51] <cheater> stagas: ok, how can i prevent this issue?
[12:02:12] <cheater> oscurochu: i'm not spending several minutes of work because you don't want to copy paste a string.
[12:02:34] <cheater> that's just lazy on your part. i went to the website to generate the key for you. take it or leave it.
[12:02:46] <stagas> cheater: you have to have control over the script that executes, so it executes after the page has fully loaded
[12:03:14] <cheater> stagas: i've tried using jquery with $('body').ready(...) but that never triggers :')
[12:04:17] <stagas> setTimeout(execute, 5000) or smth :P
[12:04:19] *** Joins: `2jt (~jtomas@10.red-83-58-228.dynamicip.rima-tde.net)
[12:04:46] <oscurochu> i've considered that not writing tests is lazy. =p asking others to help you but making them go through extra steps of downoading code, having to enter an api, the web site hassling you to install stuff. no thanks
[12:04:47] *** Quits: sam_1 (~sam_1@87.51.251.118) (Ping timeout: 256 seconds)
[12:06:18] <cheater> oscurochu: stop being obstinate. this is the only way to trigger the bug. if you don't like that, just don't interfere.
[12:06:36] <cheater> stagas: i've actually been doing that as you mentioned it and here's what happened.
[12:06:54] <cheater> stagas: if i switch to the tab before the timeout is done, it'll attach the child.
[12:07:01] <cheater> if i switch after, then the child does not get attached.
[12:07:08] <cheater> it's like the dom doesn't exist until i switch to the tab.
[12:07:47] <cheater> or like it gets erased and overwritten when i switch to the tab.
[12:09:04] <oscurochu> cheater: so it doesnt trigger a bug in a sandbox?
[12:09:21] <cheater> oscurochu: stop being annoying, i don't have time for trolls
[12:11:23] <oscurochu> if you had a demo, more of us can help you. im sorry you are frustrated
[12:11:35] <cheater> i'm not frustrated, you're just being a shitter
[12:11:40] <cheater> *plonk*
[12:13:34] <oscurochu> didnt you say earlier you are doing async for the first time?
[12:22:14] *** Joins: dvanloon (~dvanloon@user/dvanloon)
[12:22:16] <oscurochu> cheater do you have something calling the user script, or is the user script itself giving you an issue?
[12:22:21] *** Quits: dvanloon7 (~dvanloon@user/dvanloon) (Ping timeout: 256 seconds)
[12:23:31] <stagas> cheater: yea that's pretty much what happens, js is blocked until you get to the tab, maybe has a chance to run for half a second then halts, is what i've observed as well
[12:23:53] <cheater> stagas: is that the same with all websites? or just this one?
[12:24:18] <stagas> cheater: so setTimeout will be blocked. probably you need to trigger the script when the tab gets focus, there's an event for that
[12:24:33] <cheater> oh let me try that
[12:24:58] *** Quits: Betal (~Betal@user/betal) (Quit: WeeChat 3.4)
[12:25:25] *** Quits: junktext (~junktext@gateway/vpn/pia/junktext) (Read error: Connection reset by peer)
[12:26:19] <cheater> thanks stagas :)
[12:26:32] <stagas> cool! :D
[12:26:34] *** Joins: junktext (~junktext@gateway/vpn/pia/junktext)
[12:27:08] *** Quits: Denver (~Denver@174-16-236-178.hlrn.qwest.net) (Quit: My MacBook Air has gone to sleep. ZZZzzz…)
[12:27:38] <stagas> but also make sure that it runs when the tab does have focus, so not only that you have to switch back and forth if you're in the same one, some logic there maybe
[12:28:37] <cheater> not sure what you mean?
[12:28:49] <cheater> is this the right way to detect it? https://levelup.gitconnected.com/detecting-the-focus-of-browser-tab-in-javascript-d4460bc579ac
[12:28:59] <cheater> it seems to be
[12:29:19] <cheater> when i put this in my script, open the page in a new tab, and go to the console, the only log line it shows is "visible"
[12:29:59] <cheater> however, if i then switch away from this tab and back, it goes "hidden", and then "visible" again. so i could have the "visible" case happen multiple times... how do i make sure i don't run my main function multiple times, just once?
[12:30:06] <cheater> some sort of closure or whatever?
[12:30:21] <cheater> jesus i hate closures i don't even remember how they worked
[12:30:33] <cheater> or is there some better way of doing this?
[12:30:51] *** Quits: _mikey (~mikey@user/mikey/x-4335048) (Quit: WeeChat 3.4)
[12:31:40] *** Joins: stenno (~stenno@user/stenno)
[12:32:41] *** Joins: sam_1 (~sam_1@87.51.251.118)
[12:34:10] <stagas> addEventListener('visible', ..., { once: true })
[12:34:17] <stagas> or whatever that event is
[12:34:26] <stagas> once: true is what you need
[12:36:32] *** Quits: stenno (~stenno@user/stenno) (Ping timeout: 250 seconds)
[12:37:10] *** Quits: sam_1 (~sam_1@87.51.251.118) (Ping timeout: 250 seconds)
[12:37:18] <cheater> stagas: really? i already did the whole closure thing haha
[12:37:21] <cheater> i had to do it anyways.
[12:37:32] <cheater> because i have to run the function if i'm watching the page load too
[12:38:00] <cheater> and the "once" property has to be shared between normal code execution, and being triggered from the event
[12:38:09] *** Joins: synthea (~u@pool-72-82-129-201.cmdnnj.fios.verizon.net)
[12:38:26] *** Quits: Rockwood_ (~Rocky@user/rocky) (Quit: The Time is Over)
[12:38:26] <cheater> anyways it works! thanks a lot :)
[12:38:31] <cheater> no more missing labels!
[12:39:33] *** Joins: dpuerto (~dpuerto@136-27-83-52.cab.webpass.net)
[12:40:30] <cheater> stagas: do you think this "stopped execution" behavior is only limited to this website (and others that explicitly do it), or is it like this on all websites?
[12:41:13] *** Quits: kakashiA1 (~kakashi@ip-37-201-198-9.hsi13.unitymediagroup.de) (Ping timeout: 256 seconds)
[12:42:41] *** Joins: chowmeined (~chowmeine@user/chowmeined)
[12:46:04] *** Quits: dpuerto (~dpuerto@136-27-83-52.cab.webpass.net) (Ping timeout: 250 seconds)
[12:46:12] *** Joins: dave0 (~davezero@069.d.003.ncl.iprimus.net.au)
[12:49:13] <stagas> cheater: that is browser behavior it's saving resources and also not letting unfocused tabs ping or whatever and track you
[12:49:22] <cheater> ahh ok
[12:50:46] *** Zauberfisch_ is now known as Zauberfisch
[12:51:13] <stagas> yes once wasn't going to save you, you could also remove the listener once the script runs but you have to have a reference to it
[12:59:51] *** Quits: oscurochu (~oscurochu@37.120.215.100) (Remote host closed the connection)
[13:07:36] *** Quits: Swahili (~Swahili@a95-94-208-187.cpe.netcabo.pt) (Read error: Connection reset by peer)
[13:08:11] *** Joins: voltage_ (voltage@user/voltage)
[13:08:22] <cheater> oh god, now i'm working on the results list
[13:08:28] <cheater> like ebay search results
[13:08:42] <cheater> and the results that are off screen when the script runs don't get the label attached
[13:08:43] *** Joins: Swahili (~Swahili@a95-94-208-187.cpe.netcabo.pt)
[13:08:45] <cheater> big cry
[13:08:50] <cheater> i have to do the same thing for those now
[13:08:51] <cheater> lol
[13:11:26] *** Joins: Tobbi (~Tobbi@2a02:8108:1240:48ec:88f8:5844:198f:e3c2)
[13:12:57] *** Quits: han-solo (~han-solo@user/han-solo) (Ping timeout: 256 seconds)
[13:14:03] <stagas> cheater: just have it run with a setInterval and check if anything doesn't have the label attach it otherwise leave it
[13:14:22] <cheater> i'll attach an event to each element
[13:14:24] *** Joins: han-solo (~han-solo@103.82.184.200)
[13:14:25] <cheater> ... if possible
[13:15:40] <cheater> what if instead of appendChild i used innerHTML?
[13:15:58] *** Quits: thojanssens (~thojansse@49.230.227.172) (Ping timeout: 250 seconds)
[13:16:49] <cheater> nope, innerhtml sucks too
[13:18:59] <cheater> https://usefulangle.com/post/113/javascript-detecting-element-visible-during-scroll
[13:19:05] <cheater> IntersectionObserver is the thing to use
[13:19:24] *** Joins: Gurkenglas (~Gurkengla@dslb-002-203-144-204.002.203.pools.vodafone-ip.de)
[13:21:47] *** Quits: Swahili (~Swahili@a95-94-208-187.cpe.netcabo.pt) (Quit: Leaving...)
[13:22:00] *** Joins: Swahili (~Swahili@a95-94-208-187.cpe.netcabo.pt)
[13:25:32] *** Quits: han-solo (~han-solo@103.82.184.200) (Ping timeout: 240 seconds)
[13:25:47] *** Joins: stenno (~stenno@user/stenno)
[13:26:22] *** Joins: Rockwood (~Rocky@user/rocky)
[13:26:25] <cheater> nope
[13:26:35] <cheater> if you attach an IntersectionObserver it will not happen either!!!!!
[13:26:39] <cheater> nice!!!!!!!!!!!!!!!
[13:28:11] *** Joins: kakashiA1 (~kakashi@ip-37-201-198-9.hsi13.unitymediagroup.de)
[13:33:09] *** Joins: oscurochu (~oscurochu@37.120.215.101)
[13:34:15] *** Joins: sam_1 (~sam_1@87.51.251.118)
[13:36:47] *** Joins: renlo (~Renlo_Ren@pool-108-14-112-182.nycmny.east.verizon.net)
[13:38:41] *** Quits: sam_1 (~sam_1@87.51.251.118) (Ping timeout: 250 seconds)
[13:38:58] <cheater> there's some weird shadow dom shit going on
[13:41:17] *** Quits: renlo (~Renlo_Ren@pool-108-14-112-182.nycmny.east.verizon.net) (Ping timeout: 256 seconds)
[13:42:47] *** Quits: sheetjs (~sheetjs@user/sheetjs) (Remote host closed the connection)
[13:47:06] *** Joins: Duckling (uid193337@id-193337.tinside.irccloud.com)
[13:48:09] *** Quits: nomic (~nomic@185.198.243.163) (Quit: Leaving)
[13:49:50] <Duckling> hi! what is the logic of css animations going from #000 to #FFF it only does greys ??
[13:50:01] <Duckling> I want it to do every color in betwen
[13:51:00] <Duckling> seen it could be done as a few keyframe steps but was more wondering about the increment logic
[13:52:06] *** Joins: banana_ (~banana_@user/banana/x-2944094)
[13:52:27] *** Joins: banana__ (~banana_@2603-6000-b500-9ce3-8108-337f-66cc-4cab.res6.spectrum.com)
[13:53:29] <dave0> like a rainbow?
[13:53:42] *** Quits: banana__ (~banana_@2603-6000-b500-9ce3-8108-337f-66cc-4cab.res6.spectrum.com) (Client Quit)
[13:54:03] <Duckling> for my example that's what I was trying yes but it could even just be a few shades or something
[13:54:27] <Duckling> it makes no sense in hex to increment 111 to 222 ie
[13:54:32] *** Quits: synthea (~u@pool-72-82-129-201.cmdnnj.fios.verizon.net) (Ping timeout: 250 seconds)
[13:54:47] <Duckling> or does it
[13:55:23] *** Joins: gproto23_ (~gproto23@user/gproto23)
[13:56:17] *** Quits: banana_ (~banana_@user/banana/x-2944094) (Ping timeout: 240 seconds)
[13:56:20] <dave0> yep that'll work
[13:56:53] <Duckling> even if I can just infinitely randomize it
[13:57:01] <Duckling> going for as terrible as possible
[13:57:06] <dave0> (red) #F00 to (green) #FF0 to (yellow) #0F0 to (blue) #00F
[13:57:38] <dave0> whoops swap green and yello
[13:57:46] <Duckling> yes that's what I saw too doing it as 3-4 steps
[13:58:21] <Duckling> really what i'd like is just 111111 becomes 111112
[13:58:27] <Duckling> all the way through
[13:58:57] <Duckling> background-color: rand() even...
[13:59:24] <dave0> does javascript support HSV ?
[13:59:31] <dave0> instead of RGB ?
[14:00:54] *** Quits: zer0bitz (~zer0bitz@2001:2003:f444:a000:8153:e826:3459:f646) (Read error: Connection reset by peer)
[14:00:56] <leduyquang753> In which context?
[14:01:06] <Duckling> I don't think so, not like that
[14:01:41] <Duckling> and really do want to do it with css because the javascript engine will be busy
[14:02:05] <Duckling> and it's only purpose is to be a visual nuisance
[14:02:25] *** Joins: gproto_23 (~gproto23@user/gproto23)
[14:03:46] <dave0> annoying the user is perfectly valid :-p
[14:03:59] *** Quits: wildo (~lain6141@119.224.72.222) (Quit: leaving)
[14:04:32] <Duckling> the modal style boxes are styled after windows xp just for that added hit of spice
[14:05:20] <stagas> there's hsl() so you could animate the hue 0 to 360 it's that effect you need no?
[14:05:22] *** Quits: gproto23_ (~gproto23@user/gproto23) (Ping timeout: 250 seconds)
[14:05:33] <Duckling> oh there is?
[14:05:39] <Duckling> let me try that!
[14:07:05] <theskillwithin> https://youtu.be/6c1BThu95d8
[14:07:05] <skillbot> YouTube Title: The Rolling Stones - She's A Rainbow (Official Lyric Video)
[14:09:06] <Duckling> hsv(0,100,50); => 360 doesn't seem to do anything
[14:09:38] <theskillwithin> btw be careful of crazy animations, don't wan't to give someone an epilepsy attack
[14:09:58] <Duckling> That's presumptuous
[14:10:07] <Duckling> :P
[14:10:37] *** Joins: epolanski (uid312403@id-312403.helmsley.irccloud.com)
[14:11:53] *** Quits: gde33 (~gde33@84-106-154-98.cable.dynamic.v4.ziggo.nl) (Quit: KVIrc 5.0.0 Aria http://www.kvirc.net/)
[14:11:59] <silly> oh weird, hsl transition from 0-360 does infact transition the shorter way, from 360-0
[14:12:28] <Duckling> that'd be okay
[14:12:46] <Duckling> https://pastebin.com/EuZ1S0UK
[14:13:00] <Duckling> Just stays white, works when given hex color codes
[14:13:31] <silly> https://jsfiddle.net/69uj8qe2/
[14:13:58] <silly> hsv is a german soccer club
[14:14:03] <silly> you want hsl
[14:14:33] <Duckling> oh right!
[14:15:54] <theskillwithin> https://css-tricks.com/userainbow/
[14:18:28] <Duckling> As I said I don't want to do it in JS if avoidable
[14:18:41] <Duckling> i'm looking at your example more closely silly as mines still being funky
[14:21:19] <Duckling> still going to require like 4 keyframes to get it to do everything as you said because it appears to take the "shortest" route
[14:21:23] <silly> this uses color stop steps of 45° https://developer.mozilla.org/en-US/docs/Web/CSS/gradient/conic-gradient()
[14:21:35] *** Joins: CiaoSen (~Jura@p200300c95737a2002a3a4dfffe84dbd5.dip0.t-ipconnect.de)
[14:21:42] <Duckling> feels like there should be some more control over the logic
[14:21:45] <silly> so they have 9
[14:21:59] <silly> Duckling, that's what i thought
[14:22:05] <Duckling> it going from obnoxious red to green is pretty ok probably
[14:22:08] <silly> like specifying the direction somehow
[14:22:18] <silly> #css might know more
[14:22:39] <Duckling> yeah! tween: indrement
[14:22:42] <Duckling> or something
[14:22:47] <Duckling> c*
[14:26:47] *** Quits: aniruddha (uid340443@id-340443.ilkley.irccloud.com) (Quit: Connection closed for inactivity)
[14:28:13] <Duckling> that said I know from working with blender exports that they do the same thing
[14:28:41] <Duckling> leading to quite a few otherwise redundant almost :before keyframes
[14:28:59] <Duckling> like go from 0 to 49 and then to 50 (max) or the likes
[14:29:06] <Duckling> even though the timing is actually linear
[14:29:15] <Duckling> so I might be expecting too much
[14:31:11] *** Quits: oscurochu (~oscurochu@37.120.215.101) (Remote host closed the connection)
[14:31:43] *** Quits: kakashiA1 (~kakashi@ip-37-201-198-9.hsi13.unitymediagroup.de) (Ping timeout: 256 seconds)
[14:31:49] <cheater> which version of xpath is available in the browsers? is it 1 or higher?
[14:31:57] <cheater> i mean recent browsers
[14:32:17] <Duckling> https://www.tutorialspoint.com/Which-CSS-property-is-used-to-run-Animation-in-Alternate-Cycles
[14:32:19] <Duckling> pretty cool
[14:32:25] <cheater> stagas: btw i ended up attaching the thing to the scroll event, and it worked!
[14:32:44] <cheater> "Firefox currently supports XPath 1.0. There are no plans to support Xpath 2.0." oh.
[14:33:24] <Duckling> cheater: it's a dead standard
[14:33:35] <Duckling> before 2 was ever finalized from memory
[14:33:35] <cheater> eh
[14:33:42] <cheater> i still need it to do some stuff
[14:33:47] *** Joins: dmaislin (~dmaislin@047-233-046-055.res.spectrum.com)
[14:33:48] <cheater> i need to find elements that contain a specific text
[14:33:54] <cheater> i don't think there's a css way to do that, is there?
[14:34:29] <cheater> i need something like span[contains(text(),'foo')]
[14:34:41] <Duckling> not really what css is for, you'd probably use js in modern terms
[14:34:50] <cheater> no, i'd use xpath
[14:35:10] <Duckling> do you also use xhtml
[14:35:36] <cheater> it's either xpath or querySelectorAll. if you can show me how to do this with querySelectorAll, i'll do it that way.
[14:36:11] <Duckling> you wouldn't do it with qsA that's for sure heh
[14:36:21] <Duckling> what do you plan to do with the resulting xslt
[14:36:31] <cheater> so you're saying you suggest i use xpath
[14:36:41] <Duckling> no, you're saying that :P
[14:36:41] <cheater> thanks
[14:36:46] <Duckling> you're welcome.
[14:36:48] <cheater> i appreciate the suggestion
[14:36:55] *** Parts: Duckling (uid193337@id-193337.tinside.irccloud.com) ()
[14:39:03] <AlbertLast> cheater: possible data attribut could help
[14:39:17] <AlbertLast> depends on your needs
[14:39:20] <cheater> there's no data attribute. it's not my website.
[14:39:25] <cheater> i'm writing a user script.
[14:40:26] <AlbertLast> then your total free to use js stuff any select stuff
[14:43:13] *** Joins: kakashiA1 (~kakashi@ip-37-201-198-9.hsi13.unitymediagroup.de)
[14:47:32] *** Quits: kakashiA1 (~kakashi@ip-37-201-198-9.hsi13.unitymediagroup.de) (Ping timeout: 240 seconds)
[14:47:53] *** Joins: toastloop (~toastloop@user/toastloop)
[14:50:49] *** Quits: emyrs (~emyrs@user/emyrs) (Ping timeout: 256 seconds)
[14:54:05] *** Quits: D4mned (~D1mned@212.101.251.96) (Quit: Leaving)
[14:55:07] *** Quits: dmaislin (~dmaislin@047-233-046-055.res.spectrum.com) (Quit: My MacBook has gone to sleep. ZZZzzz…)
[14:55:14] <cheater> such as
[14:58:19] *** Joins: N4buc0- (~N4buc0@2804:7f4:348a:16c8:9512:26ba:47ca:5be7)
[14:58:25] *** Quits: toastloop (~toastloop@user/toastloop) (Quit: Leaving)
[15:00:50] *** Joins: kakashiA1 (~kakashi@ip-37-201-198-9.hsi13.unitymediagroup.de)
[15:05:09] *** Quits: kakashiA1 (~kakashi@ip-37-201-198-9.hsi13.unitymediagroup.de) (Ping timeout: 256 seconds)
[15:06:51] *** Joins: kakashiA1 (~kakashi@ip-37-201-198-9.hsi13.unitymediagroup.de)
[15:08:02] *** Joins: oscurochu (~oscurochu@37.120.215.100)
[15:09:19] *** Quits: maret (~maret@195.12.158.102) (Quit: maret)
[15:12:27] *** Joins: toastloop (~toastloop@user/toastloop)
[15:12:28] *** Quits: toastloop (~toastloop@user/toastloop) (Excess Flood)
[15:14:32] *** Quits: oscurochu (~oscurochu@37.120.215.100) (Ping timeout: 240 seconds)
[15:35:10] *** Joins: OnkelTem (~OnkelTem@user/onkeltem)
[15:37:02] *** Joins: flannelK (~flannelK@cpe-98-10-225-222.rochester.res.rr.com)
[15:41:15] <hassoon> 'morning
[15:44:33] *** Quits: flannelK (~flannelK@cpe-98-10-225-222.rochester.res.rr.com) (Quit: Leaving)
[15:44:36] <Rockwood> o/
[15:51:56] *** Joins: flannelK (~flannelK@cpe-98-10-225-222.rochester.res.rr.com)
[15:57:45] *** Joins: Y4knotiS (~YaknotiS@cpc1-cmbg18-2-0-cust87.5-4.cable.virginm.net)
[16:01:48] *** Quits: flannelK (~flannelK@cpe-98-10-225-222.rochester.res.rr.com) (Quit: Leaving)
[16:02:19] *** Joins: flannelK (~flannelK@cpe-98-10-225-222.rochester.res.rr.com)
[16:03:40] *** Quits: Gurkenglas (~Gurkengla@dslb-002-203-144-204.002.203.pools.vodafone-ip.de) (Ping timeout: 250 seconds)
[16:07:39] *** Joins: Duckling (uid193337@id-193337.tinside.irccloud.com)
[16:08:03] <Duckling> Why does it appear that the javascript engine does not respect the browser sending repeated abort signals
[16:08:06] <Duckling> ie clicking stop
[16:09:17] <Duckling> just curious
[16:11:55] *** Joins: george91 (~george91@103.137.204.24)
[16:12:48] *** Quits: flannelK (~flannelK@cpe-98-10-225-222.rochester.res.rr.com) (Quit: Leaving)
[16:13:11] *** Joins: george91_ (~george91@103.137.204.24)
[16:13:17] *** Quits: george91 (~george91@103.137.204.24) (Read error: Connection reset by peer)
[16:13:25] *** Joins: george91 (~george91@103.137.204.24)
[16:15:07] *** Parts: george91 (~george91@103.137.204.24) ()
[16:16:16] <Duckling> also when I "freeze" it (infinite loop), my css animations also stop
[16:16:26] <Duckling> but the tab hasn't hardlocked
[16:17:03] <Duckling> as in I am barely using any cpu etc, js is just doing work
[16:17:04] <Duckling> are they not completely separated?
[16:17:10] <hassoon> Duckling: abort/stop ? where is that
[16:17:25] <Duckling> just the refresh/stop button in the chrome/ui
[16:17:32] *** Quits: george91_ (~george91@103.137.204.24) (Ping timeout: 240 seconds)
[16:17:39] <Duckling> it should just be signalling to the js engine as well surely
[16:17:51] *** Joins: up_running (~up_runnin@cpe-98-150-242-72.hawaii.res.rr.com)
[16:17:59] <Duckling> even if just because the page is very likely improperly loaded
[16:18:11] <hassoon> i don't get it
[16:18:15] <hassoon> where is thisrefresh stop thing
[16:18:18] <hassoon> tyou mean f5 ?
[16:18:29] <hassoon> ffs keyboard
[16:18:35] <Duckling> .... next to the back and forward buttons, directly next to the urlbar
[16:18:41] <Duckling> in both ff and chrome
[16:18:45] <hassoon> that's refresh
[16:18:45] <Duckling> it's no mystery lol
[16:18:50] <Duckling> until it's loading
[16:18:54] <Duckling> and then it becomes a cross
[16:18:55] <Duckling> ie abort
[16:19:02] <hassoon> you should say refresh, not abort/Stop
[16:19:18] <Duckling> .... it's an entirely separate button
[16:19:24] <Duckling> it just happens to take up the same space
[16:19:29] *** Joins: nomic (~nomic@185.198.243.163)
[16:19:40] <Duckling> I don't mean js should stop on refresh that makes no sense ofc js stops and restarts on refresh...
[16:19:43] <hassoon> i don't have that https://i.imgur.com/DONWdP7.png
[16:19:54] <Duckling> cause it's not. loading.
[16:19:59] <Alexendoo> while loading it becomes an X
[16:19:59] <Duckling> not a super complicated principle
[16:20:08] <Alexendoo> That is the stop button
[16:20:12] <Duckling> Alexendoo: right lol
[16:20:13] <hassoon> ah i get it
[16:20:15] *** Parts: up_running (~up_runnin@cpe-98-150-242-72.hawaii.res.rr.com) ()
[16:20:16] <hassoon> the X mark
[16:20:36] <Duckling> so if you hit that, it's primary purpose is to stop and disregard any http's in progress
[16:20:50] <Duckling> but, as I said, the usual result of that is that the page isn't properly loaded anyway
[16:20:58] <Duckling> so why not also just signal the js engine to stop
[16:21:14] <Duckling> otherwise oft it just reports a bunch of false errors
[16:21:17] <hassoon> you mean the process of loading js scripts ?
[16:21:24] <Duckling> loading/running/all of it
[16:21:32] <Duckling> especially when I hit it like 3+ times
[16:21:41] <Duckling> start with a SIGINTERRUPT
[16:21:48] <Duckling> work up to a straight SIGKILL
[16:22:01] <Duckling> it will just restart when the tab refreshes
[16:22:42] <Duckling> there might be good reason why it doesn't, idk
[16:22:43] *** Joins: MrBlue (~MrBlue@162.253.71.228)
[16:22:51] <Duckling> just seems kind of common sense to me
[16:23:10] <Alexendoo> What's the gain?
[16:23:31] <Duckling> ehh well the example rn is doing 10,000 of <something>
[16:23:44] <Duckling> for me, it'd act as an easy abort/restart without even refreshing
[16:23:58] <Duckling> but more generally as I say why try to keep running js on a partially loaded document
[16:24:14] <Duckling> sure good code will be wrapped in some kind of load events
[16:24:16] <Duckling> but not always
[16:24:26] <Alexendoo> Sometimes it will be fine
[16:24:35] <Duckling> "sometimes" lol, sounds reliable
[16:24:57] <Duckling> the gain is doing nothing when nothing is warranted
[16:25:04] <hassoon> Duckling: why are you concerned with that anyway
[16:25:04] <Duckling> vs doing <all the things> or atleast attempting
[16:25:12] <Duckling> I gave my example case above.
[16:25:25] <hassoon> i never imagined that would be a concern at all
[16:25:35] <Duckling> you didn't even know it existed or something heh
[16:25:35] <Alexendoo> Going from it sometimes will stop working, to it will always stop working isn't exactly an improvement
[16:25:36] <Duckling> ;p
[16:25:50] <Duckling> Alexendoo: ofc it is because it's /reliable/ and /proofable/
[16:26:04] <Duckling> as I say good code will already protect itself from such a state
[16:26:07] <Duckling> but, not always
[16:26:26] <hassoon> Duckling: senda suggestion to chrome/ffx devs ?
[16:26:27] <Duckling> and for me making a new <thing> also triggers the browsers built in "a http is happening"
[16:26:39] <Duckling> so I could literally individually cancel each if I wanted
[16:26:42] <Duckling> I don't, but still
[16:26:52] <Duckling> yeah maybe
[16:27:04] <Duckling> I just thought there might be a good reason
[16:27:54] <Duckling> now I just have to figure out why my document isn't redrawing even though I give it a juicy 30ms to do so before starting the 10,000 item loop
[16:28:34] <Duckling> and this is a thing as well with it
[16:28:47] <Alexendoo> Duckling: It's not a "just break the page" button. If you press it on a particularly slow loading response you stay on the current page
[16:28:53] <Duckling> it makes it harder to debug because the engine just keeps going as it should, but I can't do literally anything
[16:29:06] <Duckling> Alexendoo: I didn't say it was a "break the page button" :P
[16:29:32] *** Quits: chenqisu1 (~bhca7d@183.217.201.21) (Ping timeout: 240 seconds)
[16:29:34] <Duckling> a siginterrupt ie the first time I press it shouldn't even break anything
[16:30:04] <Duckling> just ideally allows me to break out of the whatever to a handler where I can do some debugging
[16:30:08] *** Joins: maret (~maret@nat-88-212-37-89.antik.sk)
[16:31:07] <Duckling> and then it can continue on as normal :D
[16:31:26] <Duckling> if I press it like 3x in the same "load cycle", do escalate to just killing the worker thread
[16:31:33] <Duckling> a reload will, as I said, reinstate it
[16:32:17] <Duckling> anyway, just a thought really as this very stupid thing is aptly also very stupid to make heh
[16:32:45] <Duckling> just to segue back to my other question...
[16:33:09] <Duckling> also when I "freeze" it (infinite loop), my css animations also stop
[16:33:25] <Duckling> but the two things should be entirely separate ?
[16:33:54] <Duckling> Oh actually nvm it's because i'm forcing a redraw and not leaving any time in between
[16:35:08] *** Quits: Rockwood (~Rocky@user/rocky) (Quit: The Time is Over)
[16:35:43] <Duckling> thanx for the chats
[16:35:50] *** Quits: Duckling (uid193337@id-193337.tinside.irccloud.com) ()
[16:35:55] *** Quits: hmw[at] (~hmw@80-108-56-158.cable.dynamic.surfer.at) (Ping timeout: 250 seconds)
[16:36:13] *** Joins: DrowningElysium (uid190788@user/drowningelysium)
[16:37:45] *** Joins: hmw[at] (~hmw@80-108-56-158.cable.dynamic.surfer.at)
[16:40:20] *** Joins: han-solo (~han-solo@user/han-solo)
[16:44:55] *** Quits: N4buc0- (~N4buc0@2804:7f4:348a:16c8:9512:26ba:47ca:5be7) (Remote host closed the connection)
[16:45:21] *** Joins: N4buc0- (~N4buc0@2804:7f4:348a:16c8:9512:26ba:47ca:5be7)
[16:45:37] *** Quits: audiobirb (~audio@user/audio) (Ping timeout: 240 seconds)
[16:55:13] *** Quits: N4buc0- (~N4buc0@2804:7f4:348a:16c8:9512:26ba:47ca:5be7) (Remote host closed the connection)
[16:55:19] *** Joins: N4buc0 (~N4buc0@191.250.99.50)
[16:56:10] *** Joins: flannelK (~flannelK@cpe-98-10-225-222.rochester.res.rr.com)
[17:06:31] *** Joins: sam_1 (~sam_1@87.51.251.118)
[17:10:34] *** Joins: TonyStone (~TonyStone@2603-7080-8607-c36a-9cdb-69bc-753b-1e50.res6.spectrum.com)
[17:11:55] *** Quits: sam_1 (~sam_1@87.51.251.118) (Ping timeout: 256 seconds)
[17:18:37] *** Quits: jazzy (~jaziz@user/jaziz) (Ping timeout: 240 seconds)
[17:24:33] *** Quits: MrBlue (~MrBlue@162.253.71.228) (Ping timeout: 256 seconds)
[17:34:42] *** Joins: src (~src@user/src)
[17:50:15] *** Joins: sam_1 (~sam_1@87.51.251.118)
[17:54:37] *** Quits: sam_1 (~sam_1@87.51.251.118) (Ping timeout: 240 seconds)
[18:10:12] *** Joins: pulse (~pulse@user/pulse)
[18:13:48] *** Joins: peteyboy1 (~peteyboy1@95.169.232.161)
[18:14:42] *** Joins: zer0bitz (~zer0bitz@2001:2003:f444:a000:5143:664b:aeb1:9527)
[18:17:32] *** Quits: CiaoSen (~Jura@p200300c95737a2002a3a4dfffe84dbd5.dip0.t-ipconnect.de) (Ping timeout: 240 seconds)
[18:18:20] *** Joins: federico_it (~textual@151.51.84.71)
[18:20:40] *** Quits: dave0 (~davezero@069.d.003.ncl.iprimus.net.au) (Quit: dave's not here)
[18:23:00] *** Quits: leduyquang753 (~leduyquan@user/leduyquang753) (Quit: Gotta go, see you guys later.)
[18:23:32] *** Quits: Swahili (~Swahili@a95-94-208-187.cpe.netcabo.pt) (Remote host closed the connection)
[18:24:04] *** Joins: Swahili (~Swahili@a95-94-208-187.cpe.netcabo.pt)
[18:27:59] *** Joins: wroathe (~wroathe@206-55-188-8.fttp.usinternet.com)
[18:27:59] *** Quits: wroathe (~wroathe@206-55-188-8.fttp.usinternet.com) (Changing host)
[18:27:59] *** Joins: wroathe (~wroathe@user/wroathe)
[18:32:57] *** Quits: wroathe (~wroathe@user/wroathe) (Ping timeout: 256 seconds)
[18:41:51] *** Joins: fef (~thedawn@user/thedawn)
[18:42:21] *** Joins: dpuerto (~dpuerto@136-27-83-52.cab.webpass.net)
[18:44:26] *** Joins: wroathe (~wroathe@206-55-188-8.fttp.usinternet.com)
[18:44:26] *** Quits: wroathe (~wroathe@206-55-188-8.fttp.usinternet.com) (Changing host)
[18:44:26] *** Joins: wroathe (~wroathe@user/wroathe)
[18:45:56] *** Quits: roadt (~roadt@114.97.240.218) (Read error: Connection reset by peer)
[18:46:43] *** Quits: dpuerto (~dpuerto@136-27-83-52.cab.webpass.net) (Ping timeout: 256 seconds)
[18:46:45] *** Joins: Rockwood (~Rocky@user/rocky)
[18:50:44] *** Joins: Rockwood_ (~Rocky@user/rocky)
[18:52:11] *** Quits: epolanski (uid312403@id-312403.helmsley.irccloud.com) (Quit: Connection closed for inactivity)
[18:52:57] *** Quits: Rockwood (~Rocky@user/rocky) (Ping timeout: 240 seconds)
[18:55:25] *** Rockwood_ is now known as Rockwood
[18:55:50] *** Joins: pr0to_ (~proto@user/pr0to/x-2987830)
[18:59:03] *** Quits: pr0to_ (~proto@user/pr0to/x-2987830) (Quit: Leaving)
[19:08:41] *** Joins: programmar (~whatever@118.69.128.37)
[19:08:42] *** Quits: Swahili (~Swahili@a95-94-208-187.cpe.netcabo.pt) (Remote host closed the connection)
[19:08:54] *** Joins: Swahili (~Swahili@a95-94-208-187.cpe.netcabo.pt)
[19:09:30] <programmar> anyone knows how to do thing like when i browse an image into a form, it will automatically upload without using a submit button ? like this https://jsfiddle.net/vfwgdjar/, usually that also requires a submit button, i browse first then submit later, but say when i have just selected an image, it will automatically uppload ?
[19:12:52] *** Joins: trevors (~trevors@user/trevors)
[19:12:53] <programmar> idk if there is any standard HTML attribute for this or it requires javascript
[19:13:06] <Tabmow> Is there any reason why string += string + '\n' wouldn't create a multiline string?
[19:13:18] <han-solo> programmar: isn't there an `onchange` hook that one could do the upload ?
[19:13:47] <programmar> hhmm let's me try
[19:14:58] <han-solo> `const fileInput = document.getElementById('...'); fileInput.addEventListener('change', (e) => { ... })` // something like that
[19:15:52] <programmar> awh, "onchange="this.submit()"" works
[19:15:53] <programmar> ok thk
[19:16:02] <programmar> put it directly in the <form>
[19:16:07] <han-solo> sure
[19:19:52] <ljharb> rick123: lol ok but did you really just ask for an easy answer to “your entire product”?
[19:21:43] *** Joins: Gurkenglas (~Gurkengla@dslb-002-203-144-204.002.203.pools.vodafone-ip.de)
[19:23:00] *** Quits: stenno (~stenno@user/stenno) (Ping timeout: 250 seconds)
[19:23:58] *** Quits: Swahili (~Swahili@a95-94-208-187.cpe.netcabo.pt) (Quit: Leaving...)
[19:24:11] *** Joins: Swahili (~Swahili@a95-94-208-187.cpe.netcabo.pt)
[19:24:18] *** Joins: stenno (~stenno@user/stenno)
[19:24:57] *** Quits: Swahili (~Swahili@a95-94-208-187.cpe.netcabo.pt) (Client Quit)
[19:25:17] *** Joins: Swahili (~Swahili@a95-94-208-187.cpe.netcabo.pt)
[19:25:55] *** Quits: programmar (~whatever@118.69.128.37) (Quit: Leaving)
[19:28:32] *** Quits: gproto_23 (~gproto23@user/gproto23) (Ping timeout: 240 seconds)
[19:35:48] *** Joins: thojanssens (~thojansse@49.230.227.172)
[19:36:18] *** Quits: thojanssens (~thojansse@49.230.227.172) (Remote host closed the connection)
[19:36:41] *** Joins: thojanssens (~thojansse@49.230.227.172)
[19:38:01] *** Joins: epolanski (uid312403@id-312403.helmsley.irccloud.com)
[19:42:50] *** Joins: Reign (~Username@ip98-161-226-10.ph.ph.cox.net)
[19:44:56] *** Joins: Betal (~Betal@user/betal)
[19:46:30] *** Joins: CiaoSen (~Jura@p200300c95737a2002a3a4dfffe84dbd5.dip0.t-ipconnect.de)
[20:00:52] *** Quits: Swahili (~Swahili@a95-94-208-187.cpe.netcabo.pt) (Quit: Leaving...)
[20:04:17] *** Quits: Tobbi (~Tobbi@2a02:8108:1240:48ec:88f8:5844:198f:e3c2) (Ping timeout: 240 seconds)
[20:06:08] *** Joins: Swahili (~Swahili@a95-94-208-187.cpe.netcabo.pt)
[20:06:37] *** Joins: cthulchu (~Cthulchu@69-172-160-196.cable.teksavvy.com)
[20:07:45] *** Joins: sam_1 (~sam_1@87.51.251.118)
[20:09:27] *** Quits: pulse (~pulse@user/pulse) (Ping timeout: 256 seconds)
[20:09:36] *** Quits: Swahili (~Swahili@a95-94-208-187.cpe.netcabo.pt) (Client Quit)
[20:11:35] *** Joins: Swahili (~Swahili@a95-94-208-187.cpe.netcabo.pt)
[20:12:14] *** Joins: colordrops (~erahhal@2603-8001-9600-7b60-0010-0100-0001-af6c.res6.spectrum.com)
[20:12:44] *** Joins: \mSg (mSg@user/msg/x-0285936)
[20:13:01] *** Quits: sam_1 (~sam_1@87.51.251.118) (Ping timeout: 240 seconds)
[20:14:29] *** Joins: Tobbi (~Tobbi@2a02:8108:1240:48ec:8cc6:12ce:bf8a:e847)
[20:15:00] *** Joins: gproto23 (~gproto23@user/gproto23)
[20:20:32] <FlorianBad> Maxdamantus: So today I got into canvas tutorials:)  Already loving it!  So if I make a graph (some lines and dots) that also has a hover function where a vertical line follows the mouse to show the value of each curve of the graph, should I have 2 canvas elements on top of each other?
[20:20:53] <FlorianBad> Because as I move the mouse the data (the lines of the graph) didn't change, only what follows the mouse.
[20:21:16] <FlorianBad> Or is there a way to combine the 2 drawings within the same canvas?
[20:22:17] *** Quits: stenno (~stenno@user/stenno) (Ping timeout: 240 seconds)
[20:22:48] *** Quits: thojanssens (~thojansse@49.230.227.172) (Ping timeout: 250 seconds)
[20:24:48] *** Joins: mud (~mud@user/kadoban)
[20:25:46] *** Quits: trevors (~trevors@user/trevors) (Quit: trevors)
[20:28:04] <ThePendulum> bit confused, surely a single drawing has multiple components and 2 drawings is technically just more of those?
[20:28:12] *** Joins: pulse (~pulse@user/pulse)
[20:28:53] <FlorianBad> ThePendulum: well, my use of the word "drawing" was not the technical term
[20:29:11] <FlorianBad> basically 2 images
[20:29:15] <FlorianBad> or sets of pixels
[20:29:46] *** Joins: llanhmod (~developer@user/domhnall/x-2887755)
[20:30:34] *** Joins: summersault (~summersau@179.221.251.36)
[20:31:46] *** Quits: summersault (~summersau@179.221.251.36) (Remote host closed the connection)
[20:33:42] *** Quits: optimant (asavage@user/optimant) (Quit: WeeChat 3.2.1)
[20:34:35] *** Joins: stenno (~stenno@user/stenno)
[20:35:51] *** Joins: optimant (~asavage@user/optimant)
[20:36:10] *** Joins: voltage (voltage@user/voltage)
[20:36:22] *** Quits: Rockwood (~Rocky@user/rocky) (Read error: Connection reset by peer)
[20:37:27] *** Joins: sam_1 (~sam_1@87.51.251.118)
[20:37:46] <EdFletcher> FlorianBad: You can “layer” but just adjusting your draw order (highest layer drawn last), but the canvas itself doesn’t have any concept of layers. You can indeed overlay multiple canvases with CSS and z-index as well, but that might just be overkill
[20:38:04] <EdFletcher> *by just adjusting
[20:38:32] *** Quits: peteyboy1 (~peteyboy1@95.169.232.161) (Ping timeout: 240 seconds)
[20:38:51] *** Joins: Rockwood (~Rocky@user/rocky)
[20:39:08] <FlorianBad> ok but, if I want to modify something (as the mouse move) I'd have to redraw the whole canvas if I put everything in a single canvas?
[20:39:32] *** Quits: voltage_ (voltage@user/voltage) (Ping timeout: 240 seconds)
[20:39:39] *** voltage is now known as voltage_
[20:39:41] *** Quits: Rockwood (~Rocky@user/rocky) (Client Quit)
[20:39:51] <FlorianBad> So if I have a data graph, and also some mouse-over stuff that indicate the values of that graph, if I don't want to redraw the data itself every time I move the mouse I have to put 2 canvas, right?
[20:39:57] *** Quits: Voxel (~f8er@user/voxel) (Quit: WeeChat 2.8)
[20:40:03] <FlorianBad> one for the data, one for the mouse over stuff
[20:40:20] *** Joins: zebrag (~chris@user/zebrag)
[20:40:34] <FlorianBad> because there's no other way to separate the two?
[20:40:40] *** Joins: voltage (voltage@user/voltage)
[20:40:40] <EdFletcher> Ah I see, yeah that would be a way to do it. Though redrawing is incredibly fast, it won’t be noticeable by the user so that should work ok too
[20:40:52] <EdFletcher> There is no way to have layers in a single canvas, no
[20:41:09] *** Quits: voltage_ (voltage@user/voltage) (Killed (NickServ (GHOST command used by voltage)))
[20:41:19] *** Quits: voltage (voltage@user/voltage) (Client Quit)
[20:41:49] *** Quits: sam_1 (~sam_1@87.51.251.118) (Ping timeout: 240 seconds)
[20:42:43] <EdFletcher> It’s quite the basic API, hence why there are so many libraries that build on top of it for context specific stuff (like chart.js for charting, p5js for 2d drawing, three.js for 3d… and those are just off the top of my head!)
[20:43:53] *** Joins: voltage (voltage@user/voltage)
[20:44:00] <FlorianBad> ok! I want to write my own stuff from scratch though ;)
[20:44:33] <FlorianBad> So most people wouldn't bother trying to micro-optimize that, they would just put everything in a single canvas and redraw at every mouse move?
[20:46:59] *** Quits: Swahili (~Swahili@a95-94-208-187.cpe.netcabo.pt) (Quit: Leaving...)
[20:48:18] <FlorianBad> can I add stuff of mine in a CanvasRenderingContext2D? https://developer.mozilla.org/en-US/docs/Web/API/CanvasRenderingContext2D   So for example I create my own object to store stuff:  `ctx.custom = {...}`
[20:49:39] *** Joins: Swahili (~Swahili@a95-94-208-187.cpe.netcabo.pt)
[20:50:59] *** Joins: macswagger (~cee@cpe-104-34-48-156.socal.res.rr.com)
[20:51:16] <macswagger> hello everyone
[20:52:56] <FlorianBad> Looks like it works, but I don't know if it's possibly a dangerous thing: https://jsfiddle.net/uwz352qx/4/
[20:54:59] <stagas> why not svg
[20:55:44] <stagas> it looks better and has mouse events, layers etc
[20:56:32] *** Quits: macswagger (~cee@cpe-104-34-48-156.socal.res.rr.com) (Quit: leaving)
[21:02:25] *** Quits: perrierjouet (~perrier-j@modemcable012.251-130-66.mc.videotron.ca) (Quit: WeeChat 3.4)
[21:02:39] *** Joins: perrierjouet (~perrier-j@modemcable012.251-130-66.mc.videotron.ca)
[21:04:27] *** Joins: random-jellyfish (~random-je@user/random-jellyfish)
[21:04:58] *** Joins: aviral (~aviral@112.133.232.35)
[21:05:20] *** Quits: aviral (~aviral@112.133.232.35) (Quit: Konversation terminated!)
[21:05:37] *** Joins: trevors (~trevors@user/trevors)
[21:05:42] *** Quits: fef (~thedawn@user/thedawn) (Remote host closed the connection)
[21:06:10] *** Joins: fef (~thedawn@user/thedawn)
[21:06:25] *** Joins: voltage_ (voltage@user/voltage)
[21:07:05] *** Quits: voltage (voltage@user/voltage) (Ping timeout: 256 seconds)
[21:11:00] *** Joins: dpuerto (~dpuerto@136-27-83-52.cab.webpass.net)
[21:15:32] *** Quits: CiaoSen (~Jura@p200300c95737a2002a3a4dfffe84dbd5.dip0.t-ipconnect.de) (Ping timeout: 240 seconds)
[21:16:57] *** Quits: doc|home (~doc@user/doc) (Quit: Things to do)
[21:22:31] *** Joins: doc (~doc@user/doc)
[21:23:38] *** Joins: GreenResponse (~tomek@r-45-155-148-237.gpon.bialnet.pl)
[21:24:14] *** Joins: diverdude (~user@176-21-102-230-cable.dk.customer.tdc.net)
[21:24:45] *** Joins: peteyboy1 (~peteyboy1@95.169.232.161)
[21:24:46] *** Quits: dvanloon (~dvanloon@user/dvanloon) (Ping timeout: 250 seconds)
[21:24:51] *** Joins: dvanloon (~dvanloon@user/dvanloon)
[21:25:40] *** Quits: perrierjouet (~perrier-j@modemcable012.251-130-66.mc.videotron.ca) (Quit: WeeChat 3.4)
[21:30:40] *** Quits: henry40408 (~henry4040@175.181.155.165) (Remote host closed the connection)
[21:30:47] *** Joins: Denver (~Denver@174-16-236-178.hlrn.qwest.net)
[21:31:11] *** Joins: henry40408 (~henry4040@175.181.155.165)
[21:32:11] *** Quits: dpuerto (~dpuerto@136-27-83-52.cab.webpass.net) (Ping timeout: 256 seconds)
[21:34:34] *** Joins: dpuerto (~dpuerto@136-27-83-52.cab.webpass.net)
[21:39:22] <ox1eef> i've been experimenting with canvas lately too, and on every text i redraw the entire canvas. i have noticed no issues in terms of performance. im sure there's cases performance matters, but generally a redraw seems quick.
[21:39:30] *** Quits: dpuerto (~dpuerto@136-27-83-52.cab.webpass.net) (Ping timeout: 250 seconds)
[21:39:32] *** Quits: llanhmod (~developer@user/domhnall/x-2887755) (Ping timeout: 240 seconds)
[21:40:18] <ox1eef> s/on every text/on every character input/
[21:40:41] *** Quits: Y4knotiS (~YaknotiS@cpc1-cmbg18-2-0-cust87.5-4.cable.virginm.net) (Ping timeout: 256 seconds)
[21:46:11] *** Quits: random-jellyfish (~random-je@user/random-jellyfish) (Ping timeout: 256 seconds)
[21:50:25] *** Joins: CiaoSen (~Jura@p200300c95737a2002a3a4dfffe84dbd5.dip0.t-ipconnect.de)
[21:52:15] *** Joins: perrierjouet (~perrier-j@modemcable012.251-130-66.mc.videotron.ca)
[21:54:26] *** Joins: synthea (~u@pool-72-82-129-201.cmdnnj.fios.verizon.net)
[21:54:32] <rick123> ljharb: Yeah I did, seems like the direction I am thinking now in terms of solutioning seems like a good fit.
[21:54:48] <ljharb> diverdude: you need to auth with nickserv for non-ops to see what you say. see the last link in the topic
[21:57:51] <rick123> Tabmow: It does, if you console.log the string will be printed with a newline. Try adding some characters after the newline like `\nabc' (and then console.log)
[22:00:04] <FlorianBad> ox1eef: yeah, I'm just getting into canvas, and I'm just hugely impressed by the speed. I think it's perfectly safe to redraw the whole thing at every event
[22:01:04] <rick123> Massive games have been built on canvas which redraws on every render. What are you worried about ? :P
[22:02:31] *** Joins: MrBlue (~MrBlue@146.70.75.214)
[22:04:02] *** Joins: ferdna (~ferdna@user/ferdna)
[22:05:48] <stagas> the random event of the day
[22:07:56] <stagas> anyone have an idea how to inherit css variables two levels deep in shadow root, without scoping them to :root ?
[22:10:41] *** Quits: synthea (~u@pool-72-82-129-201.cmdnnj.fios.verizon.net) (Quit: Leaving)
[22:12:34] *** Quits: sakhd__ (~lehinsun@188.113.178.220) (Remote host closed the connection)
[22:12:54] *** Joins: sakhd__ (~lehinsun@188.113.178.220)
[22:14:02] <hassoon> 'evening
[22:14:12] *** Quits: mexen (uid495612@user/mexen) ()
[22:15:29] *** Quits: Swahili (~Swahili@a95-94-208-187.cpe.netcabo.pt) (Quit: Leaving...)
[22:17:57] *** Joins: Swahili (~Swahili@a95-94-208-187.cpe.netcabo.pt)
[22:22:17] <FlorianBad> rick123: yeah, I'm falling in love with canvas :)
[22:31:51] *** Quits: TonyStone (~TonyStone@2603-7080-8607-c36a-9cdb-69bc-753b-1e50.res6.spectrum.com) (Remote host closed the connection)
[22:33:18] *** Joins: MonoL (~MonoL@user/MonoL)
[22:36:23] *** Quits: trevors (~trevors@user/trevors) (Quit: trevors)
[22:39:05] *** Joins: trevors (~trevors@user/trevors)
[22:39:45] *** Quits: OnkelTem (~OnkelTem@user/onkeltem) (Quit: WeeChat 2.8)
[22:43:23] *** Joins: fweht (uid404746@id-404746.lymington.irccloud.com)
[22:48:05] *** Joins: harpia (~harpia@2804:2aec:205:1400:be2a:c8d5:4566:5dc8)
[22:52:18] *** Joins: OnkelTem (~OnkelTem@user/onkeltem)
[22:52:44] *** Quits: pulse (~pulse@user/pulse) (Ping timeout: 250 seconds)
[22:52:57] *** Joins: h274f[m] (~h274fmatr@2001:470:69fc:105::1:6a8a)
[22:57:48] *** Parts: h274f[m] (~h274fmatr@2001:470:69fc:105::1:6a8a) ()
[22:58:00] *** Joins: h274f[m] (~h274fmatr@2001:470:69fc:105::1:6a8a)
[23:01:24] *** Joins: george91 (~george91@103.137.204.24)
[23:05:26] *** Quits: Denver (~Denver@174-16-236-178.hlrn.qwest.net) (Quit: Textual IRC Client: www.textualapp.com)
[23:06:09] *** Quits: han-solo (~han-solo@user/han-solo) (Quit: leaving)
[23:07:16] *** Joins: sam_1 (~sam_1@87.51.251.118)
[23:09:04] <EdFletcher> FlorianBad: FWIW I know exactly how you feel and I do the same thing, I eschew libraries when I writing hobby projects with canvas because it’s just fun. These are a couple https://tmt.computerpho.be & https://pc.computerpho.be (built the first to help build the second)
[23:10:14] <EdFletcher> (No deps or minifier either and all the source is in the single HTML files, so should be easy enough to inspect)
[23:11:32] *** Quits: sam_1 (~sam_1@87.51.251.118) (Ping timeout: 240 seconds)
[23:17:43] *** Quits: v3ga (~v3ga@2603-6080-5204-3b35-0000-0000-0000-18ad.res6.spectrum.com) (Ping timeout: 268 seconds)
[23:18:07] *** Joins: v3ga (~v3ga@2603-6080-5204-3b35-0000-0000-0000-18ad.res6.spectrum.com)
[23:19:55] *** Quits: maret (~maret@nat-88-212-37-89.antik.sk) (Quit: maret)
[23:21:48] *** Joins: maret (~maret@nat-88-212-37-89.antik.sk)
[23:23:14] *** Joins: pulse (~pulse@user/pulse)
[23:25:43] *** Joins: ruzu (~ruzu@107-179-252-71.cpe.teksavvy.com)
[23:29:01] *** Quits: OnkelTem (~OnkelTem@user/onkeltem) (Quit: WeeChat 2.8)
[23:29:02] *** Quits: v3ga (~v3ga@2603-6080-5204-3b35-0000-0000-0000-18ad.res6.spectrum.com) (Ping timeout: 240 seconds)
[23:29:26] *** Joins: v3ga (~v3ga@2603-6080-5204-3b35-0000-0000-0000-18ad.res6.spectrum.com)
[23:34:12] *** Quits: mud (~mud@user/kadoban) (Quit: quit)
[23:34:17] *** Quits: trevors (~trevors@user/trevors) (Quit: trevors)
[23:36:07] *** Quits: ferdna (~ferdna@user/ferdna) (Quit: Leaving)
[23:38:32] *** Quits: wroathe (~wroathe@user/wroathe) (Ping timeout: 240 seconds)
[23:38:52] <FlorianBad> EdFletcher: yeah, that's exactly it. I never used any kind of library for anything, I love the idea of reinventing the wheel. When you reinvent the wheel you can make it more round too ;)
[23:39:08] <FlorianBad> I coded my own web server, my own database engine, etc lol
[23:39:15] <FlorianBad> never regretted these decisions
[23:39:31] <FlorianBad> full control over everything, never breaks, etc.
[23:40:05] <FlorianBad> The only downside of course is... time! lol
[23:45:47] *** Joins: sam_1 (~sam_1@87.51.251.118)
[23:46:35] *** Joins: wroathe (~wroathe@206-55-188-8.fttp.usinternet.com)
[23:46:35] *** Quits: wroathe (~wroathe@206-55-188-8.fttp.usinternet.com) (Changing host)
[23:46:35] *** Joins: wroathe (~wroathe@user/wroathe)
[23:47:19] *** Joins: Tangent-Man (~tangent@cpc145602-basl14-2-0-cust33.20-1.cable.virginm.net)
[23:49:27] *** Quits: harpia (~harpia@2804:2aec:205:1400:be2a:c8d5:4566:5dc8) (Quit: harpia)
[23:50:02] *** Quits: sam_1 (~sam_1@87.51.251.118) (Ping timeout: 240 seconds)
[23:51:01] *** Quits: wroathe (~wroathe@user/wroathe) (Ping timeout: 256 seconds)
[23:52:45] *** Joins: sam_1 (~sam_1@87.51.251.118)
[23:52:55] *** Joins: trevors (~trevors@user/trevors)
[23:55:50] *** Quits: maret (~maret@nat-88-212-37-89.antik.sk) (Quit: maret)
[23:56:26] *** Joins: oscurochu (~oscurochu@37.120.215.101)
[23:57:05] *** Quits: sam_1 (~sam_1@87.51.251.118) (Ping timeout: 256 seconds)
[23:58:17] *** Quits: vysn (~vysn@user/vysn) (Ping timeout: 240 seconds)
[23:58:54] *** Quits: fef (~thedawn@user/thedawn) (Ping timeout: 276 seconds)
