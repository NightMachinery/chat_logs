[00:00:27] *** Quits: p-i- (~Ohmu@mx-ll-183.89.35-200.dynamic.3bb.co.th) (Ping timeout: 256 seconds)
[00:00:27] <SnoopJ> clarification: I didn't figure this out by inspection, just some light modification and printing. I pulled the arguments into variables `a, b` and printed `a.shape, b.shape`
[00:00:28] <used____> So it's 4_3 dot 1_4 ?
[00:00:34] <purplex> jinsun, yea because with split i'll exactly know number of dirs everytime and where to index
[00:00:42] <SnoopJ> used____, it's 3_4 dot 4_1
[00:00:59] <SnoopJ> 4_3 is before transposition, the .T swaps those axes and it becomes 3_4
[00:01:15] <jinsun> lantech19446: the code I gave earlier seems to be working? did you change that or you're writing something new now?
[00:01:16] *** Quits: Atque (~Atque@user/atque) (Quit: ...)
[00:01:19] <used____> inputs is 3_4 in row_column notation. After .T it is 4_3 ?
[00:01:36] <used____> I used r_c notation everywhere.
[00:01:39] <SnoopJ> yes, .T is a numpy idiom for the transpose of an array
[00:01:45] <SnoopJ> https://numpy.org/doc/stable/reference/generated/numpy.ndarray.T.html
[00:01:47] <used____> I know.
[00:01:57] *** Joins: Atque (~Atque@user/atque)
[00:02:05] <SnoopJ> numpy doesn't really have rows/columns, just arbitrary axes.
[00:02:07] <used____> I think I get it now.
[00:02:17] <used____> I know but I had to talk about it here somehow.
[00:02:21] <SnoopJ> so it can be kind of confusing if you get used to thinking of something as a row and then suddenly that axis is moved somewhere else
[00:02:40] <used____> Yes, but up to a point. I have seen arrays before ;)
[00:02:51] <SnoopJ> I think this code can be improved quite a bit by capturing each argument to a descriptive name
[00:02:58] *** Quits: savolla (~quassel@88.227.92.215) (Quit: https://quassel-irc.org - Chat comfortably. Anywhere.)
[00:03:06] <used____> The idea is to keep it compact, it is an example.
[00:03:11] <SnoopJ> so that you get np.dot(goodname_1, goodname_2) instead of np.dot(ohgodthisis, hardtoread)
[00:03:24] <used____> Right, I'll stare at the shapes again tomorrow.
[00:03:30] <parv> purplex, So: loop over file path; split; if head is root, use the tail to find its root?
[00:03:53] <SnoopJ> used____, I can only speak from experience, but after about a decade of numpy this is the #1 thing I see wrong in people's code: they're just doing so much on one line that they can't keep it straight in their own heads
[00:04:09] <used____> +1
[00:04:11] <SnoopJ> or they can, and then 6 months later they forgot and it's hard to read :)
[00:04:13] *** Joins: jazzy (~jaziz@user/jaziz)
[00:05:03] <used____> Something like that. His weapon worked on me, thanks.
[00:05:19] <used____> I think I got it now. Sigh.
[00:05:29] <used____> Thanks, moving on.
[00:05:31] *** Parts: used____ (~used____@5-12-254-132.residential.rdsnet.ro) ()
[00:05:32] <SnoopJ> used____, as another suggestion, if you're sure these will be 2D arrays, I would recommend using np.matmul() or the @ operator (i.e. np.matmul(a, b) or a@b)
[00:05:35] <SnoopJ> oops
[00:05:42] <lantech19446> jinsun: I kept your code for spitting out the urls but I still need other keys to complete the information
[00:05:53] <purplex> parv: like if i split C:\A\B\C, it will produce 4 parts, i can use 4th index on C:\A\B\C\D\E\F.txt to get 'D'
[00:06:19] <jinsun> lantech19446: okay, you need to show code if you change it
[00:06:25] <parv> purplex, How do the count to 4?
[00:06:33] <parv> s/the/you/
[00:06:41] *** Quits: MJ (~mjpieters@zopatista.plus.com) (Ping timeout: 256 seconds)
[00:06:48] <purplex> len of tuple returned by parts
[00:07:00] <lantech19446> jinsun: I'm trying to get it to write the json to a file so that you can see what I'm trying to get too
[00:07:10] *** Joins: macbook (~macbook@cpc101496-gill19-2-0-cust142.20-1.cable.virginm.net)
[00:07:29] *** Joins: imp (~imp@177-131-189-195.static.sumicity.net.br)
[00:07:46] <parv> purplex, So split in pathlib is different; os.path.split returns only 2: head & tail
[00:08:07] *** Parts: macbook (~macbook@cpc101496-gill19-2-0-cust142.20-1.cable.virginm.net) ()
[00:08:15] *** Joins: jim (~jim@about/linux/staff/jim)
[00:08:33] <purplex> these paths are produced when i use os.walk, so full path is C:\A\B\C\D\E\F.txt and subdir is C:\A\B\C
[00:09:00] *** Joins: TransitusFluvii (~ingfix-2m@2001:470:69fc:105::1:6ca2)
[00:09:03] *** Joins: bl4ackpajamas[m] (~bl4ackpaj@2001:470:69fc:105::1:73f4)
[00:09:03] *** Joins: kolmogorov[m] (~kolmogoro@2001:470:69fc:105::e03b)
[00:09:03] *** Joins: kyle[m] (~kylematri@2001:470:69fc:105::1:73e8)
[00:09:03] *** Joins: saltrocklamp[m] (~hexology@user/hexology)
[00:09:04] *** Joins: mekhami (~mekhami@2605:a601:aaf2:ef00:1821:5187:fb89:c9c8)
[00:09:04] *** Joins: k60 (~k60fmapme@2001:470:69fc:105::1:5597)
[00:09:05] *** Joins: zardian[m] (~zardi@2001:470:69fc:105::1:4444)
[00:09:06] *** Quits: cosimone (~user@2001:b07:ae5:db26:c24a:d20:4d91:1e20) (Ping timeout: 245 seconds)
[00:09:06] *** Joins: humbertowoody (~humbertow@187.202.198.64)
[00:09:08] * parv did not find "split" in pathlib
[00:09:08] *** Joins: soundwave[m] (~pjconnect@2001:470:69fc:105::1:1c57)
[00:09:09] <purplex> let me see split as well
[00:09:12] *** Joins: vitali64[m] (~notrealvi@2001:470:69fc:105::c1bf)
[00:09:15] *** Joins: interestingname[ (~throwaway@2001:470:69fc:105::1:6560)
[00:09:21] *** Joins: kuhilas (~kuhilas@2001:470:69fc:105::3040)
[00:09:45] *** Joins: whaley (~whaley@cpe-76-182-165-20.sc.res.rr.com)
[00:10:58] <purplex> yes split produces 2 but parts produces ("C:\\", "A", "B", "C", ...)
[00:10:59] <gjvc> pathlib.Path( 'some/path/name ).parts
[00:11:03] *** Joins: dffo^ (~dffo@128-092-182-020.biz.spectrum.com)
[00:11:30] *** Joins: rickybob (~rickybob@gateway/vpn/pia/rickybob)
[00:11:49] <parv> purplex, gjvc: Thanks much
[00:12:05] <gjvc> try to avoid using strings for path manipulation operations
[00:13:06] *** Joins: cosimone (~user@93-47-231-87.ip115.fastwebnet.it)
[00:13:11] *** Quits: mekhami (~mekhami@2605:a601:aaf2:ef00:1821:5187:fb89:c9c8) (Ping timeout: 250 seconds)
[00:13:27] *** Joins: oriba (~oriba@dynamic-089-012-096-133.89.12.pool.telefonica.de)
[00:13:29] *** Quits: perrierjouet (~perrier-j@modemcable012.251-130-66.mc.videotron.ca) (Quit: WeeChat 3.4)
[00:13:46] *** Joins: jinsun_ (~jinsun@user/jinsun)
[00:13:52] <SnoopJ> Aesthetic question: I am refactoring some code that has an optional dependency on TensorFlow, pushing the TF-aware code into `mainpkg.tensorflow`. Is it better to `try: from .tf_subpkg import something; except ImportError: something = None` in the package's __init__.py, or to do this in each subpackage around the actual TF-aware imports?
[00:13:56] *** Quits: gr33n7007h (~gr33n7007@user/gr33n7007h) (Quit: WeeChat 3.4)
[00:14:21] <TML> in __init__.py IMO
[00:14:42] <SnoopJ> The actual import exception handler in the organizational package is a little more sophisticated, I check the name associated with the ImportError against a list of known offenders, but it feels slightly gross to define `thing = None` for a bunch of things
[00:14:53] <Cheaterman> ↑ agreed, if evaluating TF-awareness had to change somehow, there'd be less work
[00:14:59] *** Joins: pmcnabb6 (~pmcnabb@user/pmcnabb)
[00:15:08] *** Joins: perrierjouet (~perrier-j@modemcable012.251-130-66.mc.videotron.ca)
[00:15:09] *** Quits: pkapp (~pkapp@2601:58c:c500:6900:3a02:add3:3d49:2043) (Remote host closed the connection)
[00:15:23] *** Joins: pkapp (~pkapp@c-75-74-40-214.hsd1.fl.comcast.net)
[00:15:34] <SnoopJ> Yea, that's the general idea of "if it uses TF it goes in `mainpkg.tensorflow`," just wondering about this particular bit of machinery. I think I had it right the first time, it collects all that in one place :)
[00:15:36] <SnoopJ> Thanks
[00:15:44] <Cheaterman> NP :)
[00:15:45] *** Quits: pmcnabb (~pmcnabb@user/pmcnabb) (Ping timeout: 256 seconds)
[00:15:45] *** pmcnabb6 is now known as pmcnabb
[00:15:47] *** Joins: diegov (~diegov@2001:470:69fc:105::103f)
[00:15:49] <lantech19446> jinsun_: here ya go sorry I'm so slow at getting this stuff done https://pastebin.com/v2h7FKse
[00:17:12] *** Joins: morguldir (~morguldir@2001:470:69fc:105::21bd)
[00:17:25] *** Joins: zamanf (~dev@213.133.91.246)
[00:17:30] *** Joins: gr33n7007h (~gr33n7007@user/gr33n7007h)
[00:17:34] <lantech19446> jinsun_: also this is kind of a compromise because what I really want it to do is spit out data hits visitors all together
[00:17:44] *** Joins: nitchi[m] (~nitchimat@2001:470:69fc:105::1:8f53)
[00:17:46] *** Joins: anomalous_creato (~anomalous@2001:470:69fc:105::6ed1)
[00:17:46] *** Joins: MichaelLaRosa[m] (~michaelbi@2001:470:69fc:105::1:6ac9)
[00:17:47] *** Joins: felixschloesser[ (~felixschl@2001:470:69fc:105::1:64ed)
[00:17:47] *** Joins: mjr7[m] (~mjr7matri@2001:470:69fc:105::1:64e6)
[00:17:47] *** Joins: Hist (~histausse@2001:470:69fc:105::b91)
[00:17:47] *** Joins: Vipulk (~vipulk@user/vipulk)
[00:17:49] *** Joins: Simon[m]123 (~srwalker1@2001:470:69fc:105::1:64ea)
[00:17:49] *** Joins: YakoYoku (~yakoyoku@2001:470:69fc:105::780)
[00:17:51] *** Joins: arnik[m] (~arnik@2001:470:69fc:105::1:8f4b)
[00:17:51] *** Joins: acm1ptacm2pts[m] (~acm1ptacm@2001:470:69fc:105::1:83ac)
[00:17:52] *** Joins: aleko1[m] (~aleko1@2001:470:69fc:105::1:1016)
[00:17:52] *** Joins: theChaparral[m] (~thechapar@2001:470:69fc:105::1:6496)
[00:17:52] *** Joins: purplepinky[m] (~purplepin@2001:470:69fc:105::1:6535)
[00:17:52] *** Joins: meatballs (~meatballs@2001:470:69fc:105::633)
[00:17:52] *** Joins: mr-demo[m] (~mr-demoma@2001:470:69fc:105::1:74b1)
[00:17:53] *** Joins: allegary (~allegary@apache/committer/gjm)
[00:17:53] *** Joins: e_i00[m] (~ei00matri@2001:470:69fc:105::1:6bd9)
[00:17:53] *** Joins: benbois[m] (~benboisma@2001:470:69fc:105::1:66ab)
[00:17:53] *** Joins: one-star-chef (~one-star-@2001:470:69fc:105::165c)
[00:17:53] *** Joins: berton[m] (~berton@2001:470:69fc:105::ce36)
[00:17:56] *** Joins: M3RELATIVISM[m] (~irelativi@2001:470:69fc:105::1:741f)
[00:17:57] *** Joins: graingert[m] (~graingert@2001:470:69fc:105::653)
[00:18:22] *** Joins: AlexisTP (~AlexisTP3@92.57.44.63)
[00:18:44] *** Joins: Betal (~Betal@user/betal)
[00:19:00] *** Joins: merrinx (~merrinx@ti0028a400-1685.bb.online.no)
[00:19:59] <jinsun> lantech19446: okay, contents["requests"] doesnt have "hits", as the .keys() should have showed you, the data you want is inside contents["requests"]["data"], "hits" is a key inside the items there
[00:19:59] *** Joins: gonzo[m] (~gonzotchn@2001:470:69fc:105::1:9920)
[00:20:14] *** Quits: cosimone (~user@93-47-231-87.ip115.fastwebnet.it) (Remote host closed the connection)
[00:20:56] <jinsun> lantech19446: it would help to have a good json viewer to see how the keys are laid out, firefox displays json nicely
[00:20:59] *** Quits: vsantana (~Thunderbi@fttx-177136149223.usr.predialnet.com.br) (Remote host closed the connection)
[00:21:21] *** Joins: cosimone (~user@2001:b07:ae5:db26:c24a:d20:4d91:1e20)
[00:21:54] *** Quits: theseb (~theseb@47-220-214-54.cnrocmta03.res.dyn.suddenlink.net) (Quit: Leaving)
[00:22:08] *** Joins: odoood (~odoood@2601:c8:c000:c4e0::3)
[00:22:25] *** Joins: MJ (~mjpieters@zopatista.plus.com)
[00:24:27] *** Quits: zamanf (~dev@213.133.91.246) (Ping timeout: 250 seconds)
[00:24:40] <lantech19446> jinsun: I'm using the json viewer on vscode but I thought data was the end of the line not the beginning so I didn't see it as having stuff under data I thought data was inside requests if that makes any sense
[00:24:49] *** Quits: blingrang (~blingrang@user/blingrang) (Ping timeout: 256 seconds)
[00:26:45] *** Joins: bnchs__ (~bnchs@160.177.45.26)
[00:27:05] *** Quits: bnchs (~bnchs@160.177.45.26) (Read error: Connection reset by peer)
[00:29:33] *** Quits: GNUmoon (~GNUmoon@gateway/tor-sasl/gnumoon) (Ping timeout: 276 seconds)
[00:30:29] *** Quits: therufuser (~therufuse@p5b02e029.dip0.t-ipconnect.de) (Ping timeout: 256 seconds)
[00:30:40] <TML> lantech19446: if you're unable to understand the visual representation of the data inside vscode, it's probably worth trying out some other tools to see if they help you understand it better
[00:31:57] *** Quits: MrFantastik (~f@12.244.8.98) (Ping timeout: 240 seconds)
[00:32:16] *** Quits: TransitusFluvii (~ingfix-2m@2001:470:69fc:105::1:6ca2) (Changing host)
[00:32:16] *** Joins: TransitusFluvii (~ingfix-2m@wikipedia/-Alabama-)
[00:32:53] <lantech19446> TML: you're probably right, I also have the problem that I have no idea how to express this in python I probably could have done print(data.keys()) and gotten the same information that jinsun just told me but I get so turned around in this that I don't even think to do that
[00:33:11] *** Joins: merijn (~merijn@c-001-001-018.client.esciencecenter.eduvpn.nl)
[00:33:28] <TML> lantech19446: you have no idea how to express _what_ in python
[00:35:07] *** Quits: rendar (~rendar@user/rendar) (Quit: Leaving)
[00:35:30] <lantech19446> items beneath data for instance
[00:36:14] *** Joins: gumol (~gumol@195-240-229-124.fixed.kpn.net)
[00:36:44] *** weechat is now known as Spawns_Carpeting
[00:36:52] <lantech19446> and like when I try to print the keys beneath requests.data it tells me data isn't a key but when I ask it for the keys for requests it says metadata and data
[00:37:13] *** Quits: Thanatos (~Thanatos@197.210.70.201) (Read error: Connection reset by peer)
[00:37:14] *** Quits: gumol (~gumol@195-240-229-124.fixed.kpn.net) (Client Quit)
[00:37:32] *** Joins: gumol (~gumol@195-240-229-124.fixed.kpn.net)
[00:37:33] *** Joins: Thanatos (~Thanatos@102.91.5.153)
[00:37:34] <lantech19446> this shit really makes me feel like an idiot I google this stuff for a while before I come here and ask I genuinely do try to figure it out on my own and I just can't
[00:37:40] *** Joins: lsrtl_ (~lsrtl@user/lsrtl)
[00:38:22] *** Quits: merijn (~merijn@c-001-001-018.client.esciencecenter.eduvpn.nl) (Ping timeout: 260 seconds)
[00:38:27] *** Joins: c4017w__ (~c4017@209.52.68.8)
[00:39:49] *** Quits: perrierjouet (~perrier-j@modemcable012.251-130-66.mc.videotron.ca) (Quit: WeeChat 3.4)
[00:40:02] *** Joins: iMt38 (~iMt38@196.156.5.158)
[00:40:07] *** Quits: lsrtl__ (~lsrtl@user/lsrtl) (Ping timeout: 256 seconds)
[00:40:30] *** Quits: wyre (~wyre@user/wyre) (Quit: ZNC 1.8.2 - https://znc.in)
[00:41:28] *** Quits: Barones (~Barones@user/Barones) (Quit: Leaving)
[00:41:49] *** Quits: c4017w_ (~c4017@209.52.68.8) (Ping timeout: 240 seconds)
[00:41:49] *** Quits: nuclearg1 (~nucleargr@c-73-150-253-137.hsd1.nj.comcast.net) (Ping timeout: 256 seconds)
[00:42:12] *** Joins: perrierjouet (~perrier-j@modemcable012.251-130-66.mc.videotron.ca)
[00:42:16] *** Joins: wyre (~wyre@user/wyre)
[00:42:45] *** Quits: pmb (~pmb@89-64-79-51.dynamic.chello.pl) (Quit: pmb)
[00:42:46] <SnoopJ> lantech19446, it's one of the hazards of programming. Never really goes away, but you get used to it :)
[00:48:08] <lantech19446> holy shit I might have just figured it out
[00:48:17] *** Quits: dman777_alter (~dman777@76-253-74-225.lightspeed.austtx.sbcglobal.net) (Ping timeout: 256 seconds)
[00:48:20] <ssbr> I think it never goes away for stuff you're new to -- this is how I feel whenever I'm trying to make even basic contributions to a new codebase
[00:48:34] <ssbr> fortunately, it does go away for stuff you're experienced with working on, phew
[00:48:41] <lantech19446> there's a key under the main umbrella that's visitors and it contains two keys metadata and data so maybe i'm looking for visitors.data
[00:48:41] *** Quits: cosimone (~user@2001:b07:ae5:db26:c24a:d20:4d91:1e20) (Remote host closed the connection)
[00:49:22] *** Joins: cjb (~cjb@user/cjb)
[00:49:25] *** Quits: jose1711 (~jose@93.184.65.164.host.vnet.sk) (Quit: leaving)
[00:49:32] *** Joins: cosimone (~user@2001:b07:ae5:db26:c24a:d20:4d91:1e20)
[00:49:37] *** Quits: Deneb (~johnch@23.143.9.51.dyn.plus.net) (Remote host closed the connection)
[00:49:48] *** Joins: mekhami (~ldv@2605:a601:aaf2:ef00:383f:a991:12f0:4f28)
[00:50:29] *** Quits: iMt38 (~iMt38@196.156.5.158) (Quit: Client closed)
[00:50:34] *** Joins: lawrencevanderpo (~mekhami@2605:a601:aaf2:ef00:1821:5187:fb89:c9c8)
[00:50:45] *** Quits: magga (magga@ti0036a400-3577.bb.online.no) (Remote host closed the connection)
[00:50:53] <ecdhe> I have a repo containing a server class and a client class that both depend on common code.  I want to distribute the server, and client as separate namespace packages without breaking them into their own repo.
[00:50:55] <mekhami> weird question, but let's say i have a function def foo(a, b=thing). I want to write a function that returns the arguments for foo, e.g. foo(params()). can params() somehow return a value that fulfills the positional and keyword arguments?
[00:51:05] <ecdhe> This is simple enough, see the native/ dir of https://github.com/pypa/sample-namespace-packages
[00:51:10] *** Joins: skyfall (~skyfall@user/skyfall)
[00:51:33] <KirkMcDonald> mekhami: foo(*params())
[00:51:39] *** Quits: Lando-SpacePimp (~Lando-Spa@user/lando-spacepimp) (Quit: They told me they fixed it. I trusted them to fix it. It's not my fault!)
[00:51:54] *** Quits: cuz```` (~user@38.140.58.234) (Read error: Connection reset by peer)
[00:52:04] <KirkMcDonald> mekhami: You can't do this directly, but you could return a tuple and a dict and sort it out from there.
[00:52:26] <ecdhe> However, I can't pip install the distribution packages when they're in the same repo
[00:52:34] <Repiphany> Or just a dictionary if they aren't positional-only arguments
[00:52:53] <ecdhe> Before I could just pip install git+ssh <repo url>
[00:53:20] *** Joins: lseactuary (~lseactuar@2601:646:202:2f10:949a:91c8:89ef:2a73)
[00:53:22] <ecdhe> But in that native/ directory in the pypa example, there is no top level setup.py
[00:53:24] <lantech19446> well I got data just not the data I need
[00:53:25] <gjvc> lantech19446: print( json.dumps( someobject, sort_keys=True, indent=4 ) )    <- tried something like that ?
[00:53:47] *** Joins: ubert (~Thunderbi@p200300ecdf099459bd0f645b3a8c5166.dip0.t-ipconnect.de)
[00:53:49] <gjvc> lantech19446: or pprint.pprint()
[00:53:50] *** Parts: hojasuelta (~hojasuelt@2806:102e:18:abc0:60e9:e960:2794:1af9) ()
[00:53:57] <lseactuary> i wrote an if else function based on the length of a list to provide a worker count. if <500 worker count = 5, 500-1000 then 10, 1000-1500 then 15 and so on. IS there a clean way to write this based on len(list)
[00:54:05] <lseactuary> rather than a long if else statement
[00:54:28] <mekhami> KirkMcDonald: what does 'sort it out from there' mean hah it sounds like 'draw the rest of the owl'
[00:54:47] *** Quits: Celeo (~Celeo@user/celeo) (Ping timeout: 250 seconds)
[00:54:47] <KirkMcDonald> mekhami: args, kwargs = params(); foo(*args, **kwargs)
[00:54:57] *** Joins: NealRame (~a@202-63-69-181.ip4.superloop.com)
[00:55:10] *** Quits: lawrencevanderpo (~mekhami@2605:a601:aaf2:ef00:1821:5187:fb89:c9c8) (Ping timeout: 260 seconds)
[00:55:14] <NealRame> Hi all
[00:55:28] <gjvc> lseactuary: hide the logic in a helper function worker_count_from_list( l )
[00:55:32] <KirkMcDonald> lseactuary: (x // 500 + 1) * 5
[00:55:38] <lseactuary> oh yeah
[00:55:42] <lseactuary> i forgot about //
[00:55:47] *** Quits: TransitusFluvii (~ingfix-2m@wikipedia/-Alabama-) (Quit: Reconnecting)
[00:55:51] <NealRame> any idea why do we have naming-case inconsistency between collections.OrderedDict and collections.defaultdict? One is camelcase and the other is just lowercase
[00:56:00] <lseactuary> thanks!
[00:56:09] <TML> KirkMcDonald: you beat me by just about the amount of time to takes my pinkie to find the Enter key :)
[00:56:23] *** Joins: mdk[m] (~mdk@python/psf/mdk)
[00:56:25] <lseactuary> is there a link between worker count in multithreading and the number of items in a list out of interest?
[00:56:27] <lseactuary> is it linear?
[00:56:30] <KirkMcDonald> NealRame: The standard library contains many inconsistencies. Mostly the reasons are the accumulation of history.
[00:56:33] *** Joins: smichel17[m] (~smichel17@2001:470:69fc:105::2d32)
[00:56:47] *** Joins: pikabell[m] (~pikabellm@2001:470:69fc:105::1:6125)
[00:56:49] *** Joins: schemanic[m] (~schemanic@2001:470:69fc:105::1:2450)
[00:56:49] <NealRame> KirkMcDonald: that's what I suspected... thx
[00:56:53] *** Joins: JayDoubleu (~jdoubmatr@2001:470:69fc:105::1:3831)
[00:57:03] *** Joins: bitonic (~bitonic@2001:470:69fc:105::1812)
[00:57:05] *** Joins: miique (~miiquemat@2001:470:69fc:105::1:6901)
[00:57:06] *** Joins: worldofgeese (~worldofge@2001:470:69fc:105::1:3cd8)
[00:57:17] <KirkMcDonald> lseactuary: Generally you define worker counts based on how much you can process at once, which tends to be unrelated to the total number of things you need to process.
[00:57:19] *** Joins: evidlo (~evidlo@2001:470:69fc:105::7fc)
[00:57:22] <NealRame> kinda sucks... but everything us humans do is imperfect
[00:57:36] <lseactuary> so if my list is 1000, and worker count = 10, then it will process max 100?
[00:57:36] <mekhami> followup... anyone know of any really well designed api clients? =D
[00:57:42] *** Joins: ormaaj (~ormaaj@user/ormaaj)
[00:57:45] *** Joins: willcl_ark (~willcl-ar@2001:470:69fc:105::1:620a)
[00:57:46] <mekhami> i.e. rest api clients connecting via requests
[00:58:02] <grym> mekhami: like "this is a nice API to use", or..?
[00:58:03] <KirkMcDonald> lseactuary: I am not sure what you are talking about.
[00:58:16] *** Joins: Hansuke[m] (~hansukema@2001:470:69fc:105::1:86bb)
[00:58:22] <mekhami> grym: like the client library itself is well done/easy to use
[00:58:37] <lseactuary> say my input is 1000 elements, worker count = 10, multiprocessing(some function, my input of 1000 elements)
[00:58:37] *** Joins: PantelicGR2 (~pantelicg@user/pantelicgr)
[00:58:37] *** Joins: strider[m] (~gchamoulm@2001:470:69fc:105::1:26ee)
[00:58:45] <lseactuary> then how do i know wokrer count 10 is optimal
[00:58:46] *** Quits: magla (~gelignite@d5366c9a.access.ecotel.net) (Quit: Stay safe!)
[00:58:47] *** Joins: Echo419[m] (~echo419sa@2001:470:69fc:105::ef65)
[00:58:49] <grym> mekhami: oh; "it is easy to GET and POST stuff"
[00:58:53] <mekhami> i'm writing an api client library right now and i'm just sorta winging it
[00:59:05] <KirkMcDonald> lseactuary: Usually you can only really determine that empirically.
[00:59:24] *** Quits: cosimone (~user@2001:b07:ae5:db26:c24a:d20:4d91:1e20) (Quit: ERC (IRC client for Emacs 27.1))
[00:59:26] <gjvc> mekhami keep the functions short
[00:59:26] <NealRame> mekhami: doesn't requests give you everything you need to write your API client library on?
[00:59:29] *** Quits: shibboleth (~shibbolet@user/shibboleth) (Quit: shibboleth)
[00:59:46] <grym> mekhami: does the API you're building a client for publish swagger/openapi
[00:59:47] <KirkMcDonald> lseactuary: But somewhere between 1 and 2 workers per CPU core is a place to start, depending on the sort of thing your processes are doing.
[00:59:54] <mekhami> grym: yeah. i'm trying to do this whole ports and adapters thing so i can have a client library for task x, and then just implement different adapters for different third party providers that all do the same thing
[01:00:00] <mekhami> grym: god i wish
[01:00:18] <grym> mekhami: :(
[01:00:19] *** Joins: psydroid (~psydroid@user/psydroid)
[01:00:35] <lseactuary> ah ok
[01:00:50] <TML> lantech19446: I am looking at your JSON data right now. What information are you trying to find?
[01:01:17] *** Quits: vurr (~seymon@82.131.10.22.cable.starman.ee) (Remote host closed the connection)
[01:01:50] <SnoopJ> ssbr, *sometimes* :)
[01:02:21] *** Joins: ice9 (~ice9@user/ice9)
[01:03:02] *** Quits: ocherno (~ocherno@96.68.22.200) (Remote host closed the connection)
[01:03:12] <lantech19446> TML: so for all the requests for a \coalition\ based url I need the url hits and visitors for each. I seem to be getting closer to the right path but finding the parent key is proving elusive
[01:03:13] <TML> ssbr: I can see from your responses that you don't suffer from Imposter Syndrome ;)
[01:03:26] *** Quits: merrinx (~merrinx@ti0028a400-1685.bb.online.no) (Quit: WeeChat 3.3)
[01:03:27] *** Quits: AlexisTP (~AlexisTP3@92.57.44.63) (Ping timeout: 250 seconds)
[01:03:49] <lseactuary> KirkMcDonald if i am using 4 CPU then i can pick any number between 4 and 8? won't it matter how many i pick?
[01:03:58] <ssbr> TML: IDK, isn't the feeling of lost/helplessness different from imposter syndrome?
[01:04:22] *** Quits: gumol (~gumol@195-240-229-124.fixed.kpn.net) (Quit: -a- IRC for Android 2.1.59)
[01:04:41] <TML> ssbr: Well, at least for me, the imposter syndrome and a sense of helplessness collaborate in a fantasic downward spiral
[01:05:22] *** Quits: evidlo (~evidlo@2001:470:69fc:105::7fc) (Read error: Connection reset by peer)
[01:05:22] *** Quits: Hansuke[m] (~hansukema@2001:470:69fc:105::1:86bb) (Read error: Connection reset by peer)
[01:05:22] *** Quits: JayDoubleu (~jdoubmatr@2001:470:69fc:105::1:3831) (Write error: Connection reset by peer)
[01:05:22] *** Quits: psydroid (~psydroid@user/psydroid) (Write error: Connection reset by peer)
[01:05:22] *** Quits: willcl_ark (~willcl-ar@2001:470:69fc:105::1:620a) (Read error: Connection reset by peer)
[01:05:22] *** Quits: schemanic[m] (~schemanic@2001:470:69fc:105::1:2450) (Read error: Connection reset by peer)
[01:05:22] *** Quits: PantelicGR2 (~pantelicg@user/pantelicgr) (Read error: Connection reset by peer)
[01:05:22] *** Quits: miique (~miiquemat@2001:470:69fc:105::1:6901) (Read error: Connection reset by peer)
[01:05:22] *** Quits: strider[m] (~gchamoulm@2001:470:69fc:105::1:26ee) (Read error: Connection reset by peer)
[01:05:22] *** Quits: worldofgeese (~worldofge@2001:470:69fc:105::1:3cd8) (Read error: Connection reset by peer)
[01:05:22] *** Quits: bitonic (~bitonic@2001:470:69fc:105::1812) (Read error: Connection reset by peer)
[01:05:22] *** Quits: mdk[m] (~mdk@python/psf/mdk) (Read error: Connection reset by peer)
[01:05:23] *** Quits: Echo419[m] (~echo419sa@2001:470:69fc:105::ef65) (Read error: Connection reset by peer)
[01:05:23] *** Quits: gonzo[m] (~gonzotchn@2001:470:69fc:105::1:9920) (Read error: Connection reset by peer)
[01:05:23] *** Quits: M3RELATIVISM[m] (~irelativi@2001:470:69fc:105::1:741f) (Write error: Connection reset by peer)
[01:05:23] *** Quits: theChaparral[m] (~thechapar@2001:470:69fc:105::1:6496) (Write error: Connection reset by peer)
[01:05:23] *** Quits: k60 (~k60fmapme@2001:470:69fc:105::1:5597) (Write error: Connection reset by peer)
[01:05:23] *** Quits: one-star-chef (~one-star-@2001:470:69fc:105::165c) (Write error: Connection reset by peer)
[01:05:23] *** Quits: mr-demo[m] (~mr-demoma@2001:470:69fc:105::1:74b1) (Write error: Connection reset by peer)
[01:05:23] *** Quits: interestingname[ (~throwaway@2001:470:69fc:105::1:6560) (Write error: Connection reset by peer)
[01:05:23] *** Quits: acm1ptacm2pts[m] (~acm1ptacm@2001:470:69fc:105::1:83ac) (Read error: Connection reset by peer)
[01:05:23] *** Quits: MichaelLaRosa[m] (~michaelbi@2001:470:69fc:105::1:6ac9) (Read error: Connection reset by peer)
[01:05:23] *** Quits: ormaaj (~ormaaj@user/ormaaj) (Write error: Connection reset by peer)
[01:05:23] *** Quits: smichel17[m] (~smichel17@2001:470:69fc:105::2d32) (Write error: Connection reset by peer)
[01:05:23] *** Quits: pikabell[m] (~pikabellm@2001:470:69fc:105::1:6125) (Write error: Connection reset by peer)
[01:05:23] *** Quits: purplepinky[m] (~purplepin@2001:470:69fc:105::1:6535) (Write error: Connection reset by peer)
[01:05:23] *** Quits: aleko1[m] (~aleko1@2001:470:69fc:105::1:1016) (Write error: Connection reset by peer)
[01:05:23] *** Quits: meatballs (~meatballs@2001:470:69fc:105::633) (Read error: Connection reset by peer)
[01:05:23] *** Quits: bl4ackpajamas[m] (~bl4ackpaj@2001:470:69fc:105::1:73f4) (Read error: Connection reset by peer)
[01:05:23] *** Quits: kyle[m] (~kylematri@2001:470:69fc:105::1:73e8) (Read error: Connection reset by peer)
[01:05:23] *** Quits: diegov (~diegov@2001:470:69fc:105::103f) (Read error: Connection reset by peer)
[01:05:23] *** Quits: zardian[m] (~zardi@2001:470:69fc:105::1:4444) (Write error: Connection reset by peer)
[01:05:24] *** Quits: soundwave[m] (~pjconnect@2001:470:69fc:105::1:1c57) (Write error: Connection reset by peer)
[01:05:24] *** Quits: berton[m] (~berton@2001:470:69fc:105::ce36) (Read error: Connection reset by peer)
[01:05:24] *** Quits: nitchi[m] (~nitchimat@2001:470:69fc:105::1:8f53) (Read error: Connection reset by peer)
[01:05:24] *** Quits: cecep[m] (~cecep@2001:470:69fc:105::3994) (Read error: Connection reset by peer)
[01:05:24] *** Quits: allegary (~allegary@apache/committer/gjm) (Write error: Connection reset by peer)
[01:05:24] *** Quits: Hist (~histausse@2001:470:69fc:105::b91) (Write error: Connection reset by peer)
[01:05:24] *** Quits: saltrocklamp[m] (~hexology@user/hexology) (Write error: Connection reset by peer)
[01:05:24] *** Quits: felixschloesser[ (~felixschl@2001:470:69fc:105::1:64ed) (Read error: Connection reset by peer)
[01:05:24] *** Quits: jinsun_ (~jinsun@user/jinsun) (Read error: Connection reset by peer)
[01:05:24] *** Quits: anomalous_creato (~anomalous@2001:470:69fc:105::6ed1) (Write error: Connection reset by peer)
[01:05:24] *** Quits: mjr7[m] (~mjr7matri@2001:470:69fc:105::1:64e6) (Read error: Connection reset by peer)
[01:05:24] *** Quits: YakoYoku (~yakoyoku@2001:470:69fc:105::780) (Write error: Connection reset by peer)
[01:05:24] *** Quits: kolmogorov[m] (~kolmogoro@2001:470:69fc:105::e03b) (Read error: Connection reset by peer)
[01:05:25] *** Quits: morguldir (~morguldir@2001:470:69fc:105::21bd) (Read error: Connection reset by peer)
[01:05:25] *** Quits: kuhilas (~kuhilas@2001:470:69fc:105::3040) (Write error: Connection reset by peer)
[01:05:25] *** Quits: Vipulk (~vipulk@user/vipulk) (Write error: Connection reset by peer)
[01:05:25] *** Quits: benbois[m] (~benboisma@2001:470:69fc:105::1:66ab) (Write error: Connection reset by peer)
[01:05:25] *** Quits: arnik[m] (~arnik@2001:470:69fc:105::1:8f4b) (Write error: Connection reset by peer)
[01:05:25] *** Quits: vitali64[m] (~notrealvi@2001:470:69fc:105::c1bf) (Write error: Connection reset by peer)
[01:05:25] *** Quits: e_i00[m] (~ei00matri@2001:470:69fc:105::1:6bd9) (Write error: Connection reset by peer)
[01:05:25] *** Quits: Simon[m]123 (~srwalker1@2001:470:69fc:105::1:64ea) (Write error: Connection reset by peer)
[01:05:25] *** Quits: graingert[m] (~graingert@2001:470:69fc:105::653) (Write error: Connection reset by peer)
[01:05:54] <lachesis> does pypi publish per-version utilization stats? curious how many downloads are still from python2
[01:06:45] <lachesis> i see that pip says: In general, a given Python version is supported until its usage on PyPI falls below 5%. This is at the maintainers’ discretion, in case extraordinary circumstances arise.
[01:08:00] <KirkMcDonald> lseactuary: I mean it *matters*. But the *optimal* number can only really be determined by trying various values until you find the one that performs the best.
[01:08:05] <lachesis> https://packaging.python.org/en/latest/guides/analyzing-pypi-package-downloads/
[01:08:13] *** Joins: morguldir (~morguldir@2001:470:69fc:105::21bd)
[01:08:20] *** Joins: MrFantastik (~f@12.244.8.98)
[01:08:21] <lseactuary> KirkMcDonald  how does it matter?
[01:08:23] <lseactuary> what is the link?
[01:08:24] *** Joins: artemon (~artemon@2001:470:69fc:105::87c)
[01:08:24] *** Joins: diegov (~diegov@2001:470:69fc:105::103f)
[01:08:24] *** Joins: YakoYoku (~yakoyoku@2001:470:69fc:105::780)
[01:08:36] *** Joins: benbois[m] (~benboisma@2001:470:69fc:105::1:66ab)
[01:08:37] *** Joins: luc14n0[m] (~luc14n0ma@2001:470:69fc:105::1:304c)
[01:08:37] *** Joins: TransitusFluvii (~ingfix-2m@2001:470:69fc:105::1:6ca2)
[01:08:45] *** Quits: stewie925 (~stewie925@2600:1702:44f0:35c0:bdd8:27ef:418f:c751) (Quit: Client closed)
[01:08:51] *** Joins: Avdol[m] (~M-avdol-m@2001:470:69fc:105::1:72be)
[01:09:06] *** Joins: BrenBarn (~brenbarn@2001:470:69fc:105::2da2)
[01:09:09] *** Joins: strider[m] (~gchamoulm@2001:470:69fc:105::1:26ee)
[01:09:12] *** Quits: emf_ (~emf@2620:10d:c090:400::5:9645) (Quit: emf_)
[01:09:12] <KirkMcDonald> lseactuary: Between number of workers and performance?
[01:09:15] *** Joins: kickingvegas (~cchoi@c-67-170-234-150.hsd1.ca.comcast.net)
[01:09:21] <lseactuary> yup
[01:09:25] *** Joins: ktosiek (~ktosiek@2001:470:69fc:105::87ab)
[01:09:37] *** Joins: d1rewolf_x (~d1rewolfm@2001:470:69fc:105::1:74f2)
[01:09:50] *** Joins: MichaelLaRosa[m] (~michaelbi@2001:470:69fc:105::1:6ac9)
[01:09:50] *** Joins: graingert[m] (~graingert@2001:470:69fc:105::653)
[01:09:50] *** Joins: psydroid (~psydroid@user/psydroid)
[01:09:56] *** Quits: holgersson (~quassel@user/holgersson) (Ping timeout: 252 seconds)
[01:09:58] *** Joins: abf (~abf@user/abf)
[01:10:03] *** Joins: allegary (~allegary@apache/committer/gjm)
[01:10:03] *** Joins: anomalous_creato (~anomalous@2001:470:69fc:105::6ed1)
[01:10:03] *** Joins: cotsuka (~cotsuka@user/cotsuka)
[01:10:03] *** Quits: TransitusFluvii (~ingfix-2m@2001:470:69fc:105::1:6ca2) (Changing host)
[01:10:03] *** Joins: TransitusFluvii (~ingfix-2m@wikipedia/-Alabama-)
[01:10:03] *** Joins: jmcantrell (~jmcantrel@user/jmcantrell)
[01:10:03] *** Joins: ronny (~ronny@2001:470:69fc:105::b57)
[01:10:04] *** Joins: jinsun_ (~jinsun@user/jinsun)
[01:10:04] *** Joins: boris[m] (~borisruna@2001:470:69fc:105::32f3)
[01:10:12] *** Quits: humbertowoody (~humbertow@187.202.198.64) (Ping timeout: 250 seconds)
[01:10:16] *** Joins: kolmogorov[m] (~kolmogoro@2001:470:69fc:105::e03b)
[01:10:16] *** Joins: Vipulk (~vipulk@user/vipulk)
[01:10:17] *** Quits: ubert (~Thunderbi@p200300ecdf099459bd0f645b3a8c5166.dip0.t-ipconnect.de) (Remote host closed the connection)
[01:10:21] <lachesis> it depends on what your bottleneck is
[01:10:21] *** Joins: ub (~Thunderbi@p548c8cd6.dip0.t-ipconnect.de)
[01:10:30] *** Joins: berton[m] (~berton@2001:470:69fc:105::ce36)
[01:10:30] *** Joins: aleko1[m] (~aleko1@2001:470:69fc:105::1:1016)
[01:10:30] *** Joins: meain (~meain@2001:470:69fc:105::2db)
[01:10:30] *** Joins: schemanic[m] (~schemanic@2001:470:69fc:105::1:2450)
[01:10:32] *** Quits: kyooo (~kyooo@2a02:a31d:a13c:5600:559d:f748:905d:cda9) (Quit: Leaving)
[01:10:39] *** Quits: caveman (~caveman@gateway/tor-sasl/caveman) (Quit: btc donations: bc1qt3chy4rqtzjny2h7qt47cy7nmu6th9sr66wa02)
[01:10:43] *** Joins: Hist (~histausse@2001:470:69fc:105::b91)
[01:10:43] *** Joins: ormaaj (~ormaaj@user/ormaaj)
[01:10:43] *** Joins: willcl_ark (~willcl-ar@2001:470:69fc:105::1:620a)
[01:10:44] *** Joins: spokojni[m] (~spokojnio@2001:470:69fc:105::1:3fb2)
[01:10:55] <lseactuary> SQL server
[01:10:57] *** Joins: Alcibiades[m] (~dukehorac@2001:470:69fc:105::1:6b8c)
[01:10:59] *** Joins: PantelicGR2 (~pantelicg@user/pantelicgr)
[01:11:20] <KirkMcDonald> lseactuary: Too few workers, and you aren't utilizing all of the resources that are available. Too many, and you start having contention for those resources. It's hard to be more specific without knowing anything about the specific problem.
[01:11:22] *** Joins: nmat[m] (~nmatm]@2001:470:69fc:105::1:5553)
[01:11:22] *** Joins: zardian[m] (~zardi@2001:470:69fc:105::1:4444)
[01:11:24] *** Quits: zer0bitz (~zer0bitz@2001:2003:f74d:b800:bc81:ba25:7a70:67f2) (Read error: Connection reset by peer)
[01:11:30] <TML> lantech19446: Check your private messages
[01:11:40] *** Joins: holgersson (~quassel@user/holgersson)
[01:11:51] *** Joins: cecep[m] (~cecep@2001:470:69fc:105::3994)
[01:11:55] <lseactuary> i do some processing and end up with a list of x SQL statements (Stored as a list). I am basically trying to execute these non-sequentially on a SQ DB. Hence using multi-threading.
[01:12:10] <lseactuary> As x increases, I assume I need more workers, where x = len(list)
[01:12:15] *** Quits: noent (~quassel@squint.a-oben.org) (Changing host)
[01:12:15] *** Joins: noent (~quassel@user/sven/x-0967695)
[01:12:22] <lseactuary> I have max 4 CPU per execution
[01:12:25] *** Joins: pedregalux[m] (~pedregalu@2001:470:69fc:105::92cb)
[01:12:26] *** Joins: JayDoubleu (~jdoubmatr@2001:470:69fc:105::1:3831)
[01:12:36] <lseactuary> of the entire list
[01:12:39] *** ub is now known as ubert
[01:12:53] <KirkMcDonald> lseactuary: No. Don't assume that; there's no connection between these things. The number of workers is strictly a limit of the number of things you can do "at the same time."
[01:12:57] *** Quits: mtk (~mtk@2601:185:200:70:20c:29ff:fe3e:59e4) (Ping timeout: 240 seconds)
[01:13:02] *** Joins: Dominik[m] (~ddunglmat@2001:470:69fc:105::1:7799)
[01:13:02] *** Joins: smichel17[m] (~smichel17@2001:470:69fc:105::2d32)
[01:13:02] *** Joins: worldofgeese (~worldofge@2001:470:69fc:105::1:3cd8)
[01:13:02] *** Joins: vitali64[m] (~notrealvi@2001:470:69fc:105::c1bf)
[01:13:02] *** Joins: lola (~irelativi@2001:470:69fc:105::f015)
[01:13:02] *** Joins: bitonic (~bitonic@2001:470:69fc:105::1812)
[01:13:02] *** Joins: evidlo (~evidlo@2001:470:69fc:105::7fc)
[01:13:03] <lseactuary> oh
[01:13:16] <KirkMcDonald> lseactuary: Consider the case where the number of items you're processing is infinite.
[01:13:20] *** Joins: james[m]1 (~jamesjame@2001:470:69fc:105::1:5aa1)
[01:13:41] *** Joins: visicalc[m] (~visicalct@2001:470:69fc:105::1:6bba)
[01:13:41] *** Joins: Hansuke[m] (~hansukema@2001:470:69fc:105::1:86bb)
[01:13:41] *** Joins: Echo419[m] (~echo419sa@2001:470:69fc:105::ef65)
[01:13:41] *** Joins: k60 (~k60fmapme@2001:470:69fc:105::1:5597)
[01:13:42] *** Joins: soundwave[m] (~pjconnect@2001:470:69fc:105::1:1c57)
[01:13:42] *** Joins: saltrocklamp[m] (~hexology@user/hexology)
[01:13:51] <lachesis> answering my own question... python2 is about 7% of all PyPI package downloads in last month.
[01:14:04] *** Joins: theChaparral[m] (~thechapar@2001:470:69fc:105::1:6496)
[01:14:09] *** Joins: Tardar (~tardar@2001:470:69fc:105::1:4b40)
[01:14:12] *** Joins: capra[m] (~capramatr@2001:470:69fc:105::1:2280)
[01:14:32] *** Joins: VictorKostyuk[m] (~thevicmat@2001:470:69fc:105::1:64e4)
[01:14:40] <Peng> Kind of self-fulfilling. Packages drop support for Python 2, so Python 3 users download them less, so more packages drop support...
[01:14:44] <Peng> Python 2 users*
[01:15:05] *** Joins: mjr7[m] (~mjr7matri@2001:470:69fc:105::1:64e6)
[01:15:19] <lachesis> Peng, agreed. was just curious if pip was jumping the gun on their own support statement. ofc the "extraordinary circumstances" component allows whatever, but was curious about organic demand drop
[01:15:23] *** Joins: Simon[m]12 (~srwalker1@2001:470:69fc:105::1:64ea)
[01:15:43] *** Joins: felixschloesser[ (~felixschl@2001:470:69fc:105::1:64ed)
[01:15:56] *** Joins: ckrmml[m] (~ckrmmlmat@2001:470:69fc:105::1:64f3)
[01:15:56] *** Joins: one-star-chef (~one-star-@2001:470:69fc:105::165c)
[01:16:10] *** Joins: purplepinky[m] (~purplepin@2001:470:69fc:105::1:6535)
[01:16:10] *** Joins: mdk[m] (~mdk@python/psf/mdk)
[01:16:24] *** Joins: interestingname[ (~throwaway@2001:470:69fc:105::1:6560)
[01:16:24] *** Joins: nazarewk[m] (~nazarewk@2001:470:69fc:105::1:2c8d)
[01:16:38] *** Joins: pikabell[m] (~pikabellm@2001:470:69fc:105::1:6125)
[01:16:38] *** Joins: kuhilas (~kuhilas@2001:470:69fc:105::3040)
[01:16:38] *** Joins: miique (~miiquemat@2001:470:69fc:105::1:6901)
[01:16:38] *** Joins: kyle[m] (~kylematri@2001:470:69fc:105::1:73e8)
[01:16:39] *** Joins: bl4ackpajamas[m] (~bl4ackpaj@2001:470:69fc:105::1:73f4)
[01:16:48] *** Joins: nuclearg1 (~nucleargr@c-73-150-253-137.hsd1.nj.comcast.net)
[01:16:48] *** Joins: mtk (~mtk@2601:185:200:70:20c:29ff:fe3e:59e4)
[01:16:51] *** Joins: e_i00[m] (~ei00matri@2001:470:69fc:105::1:6bd9)
[01:16:51] *** Joins: M3RELATIVISM[m] (~irelativi@2001:470:69fc:105::1:741f)
[01:16:51] *** Joins: gonzo[m] (~gonzotchn@2001:470:69fc:105::1:9920)
[01:17:05] *** Joins: mr-demo[m] (~mr-demoma@2001:470:69fc:105::1:74b1)
[01:17:20] *** Joins: arnik[m] (~arnik@2001:470:69fc:105::1:8f4b)
[01:17:20] *** Joins: euphrates[m] (~euphrates@2001:470:69fc:105::fbb5)
[01:17:29] *** Joins: Lando-SpacePimp (~Lando-Spa@user/lando-spacepimp)
[01:17:33] *** Joins: acm1ptacm2pts[m] (~acm1ptacm@2001:470:69fc:105::1:83ac)
[01:17:45] *** Joins: nitchi[m] (~nitchimat@2001:470:69fc:105::1:8f53)
[01:17:45] *** Joins: meatballs (~meatballs@2001:470:69fc:105::633)
[01:18:23] *** Joins: humbertowoody (~humbertow@187.202.198.64)
[01:19:19] *** Joins: emf (~emf@2620:10d:c090:400::5:9645)
[01:19:28] <lachesis> i maintain a few legacy 2.7 codebases. we're working on a python3 migration for most of them at various levels of engagement. its a big job with 0 immediate payoff though, so sometimes hard to get approval to spend time/money on it
[01:20:29] *** Quits: emf (~emf@2620:10d:c090:400::5:9645) (Client Quit)
[01:20:46] <apollo13> lachesis: curious, what are does codebases doing, especially the later python 3 release give quite some performance gains
[01:20:56] <lachesis> mostly boring SaaS webapp crap
[01:21:18] <lachesis> anything performance-limited got written in javascript or c/rust/go depending on the team
[01:21:27] <apollo13> guess for boring it doesn't matter enough (well unless you can save a few servers due to that)
[01:21:41] *** Joins: skapata (~Skapata@2804:14c:87b0:9d2e:a4ba:6060:3755:9749)
[01:21:41] *** Quits: skapata (~Skapata@2804:14c:87b0:9d2e:a4ba:6060:3755:9749) (Changing host)
[01:21:41] *** Joins: skapata (~Skapata@user/skapata)
[01:21:42] *** Joins: MasterK (~MQ@86.127.18.11)
[01:21:49] <lachesis> security is my best argument so far. data breaches are expensive
[01:22:04] *** Quits: manti7 (~manti7@176.10.104.94) (Quit: WeeChat 3.3)
[01:22:07] *** Joins: lawrencevanderpo (~mekhami@2605:a601:aaf2:ef00:1821:5187:fb89:c9c8)
[01:22:16] <SnoopJ> lachesis, there's also "maintainers' discretion" which I think is what this falls under, overriding the 5% rule
[01:22:37] *** Quits: humbertowoody (~humbertow@187.202.198.64) (Ping timeout: 240 seconds)
[01:23:07] <lachesis> SnoopJ, yeah makes sense, they can do what they like. i've just frozen on pip 20 or whatever the last version was in requirements. hopefully they won't drop the older packages from pypi without lots of warning :)
[01:23:26] <SnoopJ> Supporting 2.x in new releases is definitely prohibitive, yea. I doubt they'll drop old versions of pip though :)
[01:23:34] <mekhami> if you've got a really really large request payload data structure, where are you keeping that payload in your code? are you just inlining it with the function that makes the request? it's such a massive blob... i guess with proper code folding support in the IDE it doesn't matter, but...
[01:24:05] <lachesis> mekhami, maybe import it from a .py file specifically for that?
[01:24:11] *** Quits: lseactuary (~lseactuar@2601:646:202:2f10:949a:91c8:89ef:2a73) (Quit: Client closed)
[01:24:27] <lachesis> i've done that for a few big data structures (e.g. list of zip codes and their city/state mapping)
[01:24:43] <SnoopJ> or perhaps a file that isn't a .py if appropriate (I've done this many times with JSON payloads)
[01:26:21] *** Quits: lawrencevanderpo (~mekhami@2605:a601:aaf2:ef00:1821:5187:fb89:c9c8) (Ping timeout: 256 seconds)
[01:27:39] *** Quits: dreamon (~dreamon@p54b14d36.dip0.t-ipconnect.de) (Remote host closed the connection)
[01:29:27] *** Quits: whaley (~whaley@cpe-76-182-165-20.sc.res.rr.com) (Quit: It won't give up.  It wants me dead.  Goddamn this noise inside my head.)
[01:32:43] *** Quits: fikran (~fikran@user/fikran) (Ping timeout: 250 seconds)
[01:32:49] *** Quits: Oddity (~Oddity@user/oddity) (Ping timeout: 256 seconds)
[01:33:37] *** Quits: Y4knotiS (~YaknotiS@cpc1-cmbg18-2-0-cust87.5-4.cable.virginm.net) (Ping timeout: 256 seconds)
[01:34:49] *** Joins: fikran (~fikran@user/fikran)
[01:35:46] *** Quits: lakrass (~lakrass@user/lakrass) (Quit: WeeChat 3.4)
[01:36:03] *** Joins: mickey81 (~user@user/mickey)
[01:36:13] *** Joins: humbertowoody (~humbertow@187.202.198.64)
[01:36:31] *** Quits: aslicedbanjo (~aslicedba@host31-52-125-36.range31-52.btcentralplus.com) (Quit: Leaving.)
[01:36:33] *** Joins: califax- (~califax@user/califx)
[01:36:39] *** Quits: ledtc (~ledtc@c-f8aa70d5.014-57-6c756e3.bbcust.telenor.se) (Quit: Client closed)
[01:37:03] *** Quits: holgersson (~quassel@user/holgersson) (Ping timeout: 250 seconds)
[01:37:05] *** Quits: califax (~califax@user/califx) (Remote host closed the connection)
[01:37:05] *** Quits: mickey8 (~user@user/mickey) (Remote host closed the connection)
[01:37:05] *** mickey81 is now known as mickey8
[01:37:22] *** Joins: Harlin_ (~DonQixote@75-163-202-34.clsp.qwest.net)
[01:37:38] *** califax- is now known as califax
[01:38:05] *** Quits: mickey8 (~user@user/mickey) (Remote host closed the connection)
[01:38:17] *** Joins: mickey8 (~user@user/mickey)
[01:38:18] *** Joins: vsis (~roddy@190-82-223-58.adsl.tie.cl)
[01:38:23] *** Joins: holgersson (~quassel@user/holgersson)
[01:38:49] *** Quits: cliluw (~cliluw@47.147.73.223) (Ping timeout: 256 seconds)
[01:38:56] *** Joins: c4017w_ (~c4017@209.52.68.8)
[01:39:01] *** Joins: cliluw (~cliluw@47.147.73.223)
[01:39:37] *** Quits: Bobathan (~admin@cpe-65-29-248-157.wi.res.rr.com) (Ping timeout: 256 seconds)
[01:39:51] *** Quits: Harlin (~DonQixote@75-163-136-96.clsp.qwest.net) (Ping timeout: 256 seconds)
[01:40:37] *** Quits: humbertowoody (~humbertow@187.202.198.64) (Ping timeout: 240 seconds)
[01:40:59] *** Quits: jmdaemon (~jmdaemon@user/jmdaemon) (Ping timeout: 256 seconds)
[01:41:31] *** Quits: led_belly_ (~led_belly@83.97.23.14) (Remote host closed the connection)
[01:41:46] *** Quits: vsis (~roddy@190-82-223-58.adsl.tie.cl) (Quit: leaving)
[01:42:05] *** Joins: Bobathan (~admin@cpe-65-29-248-157.wi.res.rr.com)
[01:42:18] *** Joins: resmo_ (~resmo@143-48-239-77.dyn.cable.fcom.ch)
[01:42:22] *** Joins: BLeo193 (~BLeo193@natp-128-119-202-248.wireless.umass.edu)
[01:42:23] *** Joins: blackout69 (~blackout6@net-109-117-245-237.cust.vodafonedsl.it)
[01:42:46] *** Quits: c4017w__ (~c4017@209.52.68.8) (Ping timeout: 260 seconds)
[01:43:00] *** Quits: bindu (~bindu@user/bindu) (Ping timeout: 276 seconds)
[01:43:09] <BLeo193> Hello! Anybody here good with dijkstra's algorithm?
[01:43:21] *** Joins: SlaveGeek334269 (~SlaveGeek@gateway/vpn/pia/slavegeek334269)
[01:43:50] <grym> BLeo193: Just ask your question. It's the best way to know if anyone can help.
[01:43:52] <Batzy> BLeo193: we stopped talking years ago
[01:44:00] <Batzy> i send it a postcard every christmas
[01:44:03] *** Joins: msek_ (~Username@pd9fb25a1.dip0.t-ipconnect.de)
[01:44:12] *** Joins: kickingv1gas (~cchoi@c-67-170-234-150.hsd1.ca.comcast.net)
[01:44:14] <TML> Which one? The one that goes "Programmers who use <insert language name here> are <insert insult here>"? ;)
[01:44:34] <BLeo193> https://bpa.st/LNSQ
[01:44:43] *** Quits: theChaparral[m] (~thechapar@2001:470:69fc:105::1:6496) (Quit: You have been kicked for being idle)
[01:44:45] *** Quits: VictorKostyuk[m] (~thevicmat@2001:470:69fc:105::1:64e4) (Quit: You have been kicked for being idle)
[01:44:49] *** Quits: mjr7[m] (~mjr7matri@2001:470:69fc:105::1:64e6) (Quit: You have been kicked for being idle)
[01:44:49] *** Quits: Simon[m]12 (~srwalker1@2001:470:69fc:105::1:64ea) (Quit: You have been kicked for being idle)
[01:44:51] *** Quits: felixschloesser[ (~felixschl@2001:470:69fc:105::1:64ed) (Quit: You have been kicked for being idle)
[01:44:54] *** Quits: purplepinky[m] (~purplepin@2001:470:69fc:105::1:6535) (Quit: You have been kicked for being idle)
[01:44:55] <BLeo193> Basically, I am working on a project for a class where I need to create graphs using routers
[01:45:03] *** Quits: resmo (~resmo@2a00:d420:9:8a00:a359:80e7:d362:cc2b) (Ping timeout: 256 seconds)
[01:45:08] *** Joins: theChaparral[m] (~thechapar@2001:470:69fc:105::1:6496)
[01:45:08] *** Joins: bindu (~bindu@user/bindu)
[01:45:20] <BLeo193> My problem has to do with my algorithm to find the path with the lowest maxweight
[01:45:21] *** Joins: mjr7[m] (~mjr7matri@2001:470:69fc:105::1:64e6)
[01:45:21] *** Joins: VictorKostyuk[m] (~thevicmat@2001:470:69fc:105::1:64e4)
[01:45:23] *** Joins: roxfan (~roxfan@2a02:a03f:a2be:4f00:645d:2a7c:96cb:dc8)
[01:45:24] *** Joins: vsis (~roddy@190-82-223-58.adsl.tie.cl)
[01:45:35] *** Joins: Simon[m]12 (~srwalker1@2001:470:69fc:105::1:64ea)
[01:45:47] *** Joins: felixschloesser[ (~felixschl@2001:470:69fc:105::1:64ed)
[01:45:52] <Batzy> BLeo193: consider also ##math since you might not be asking a python question per se
[01:46:00] *** Joins: purplepinky[m] (~purplepin@2001:470:69fc:105::1:6535)
[01:46:12] <Batzy> if your question is about graphs and djikstra then it might be a good idea
[01:46:25] *** Quits: kickingvegas (~cchoi@c-67-170-234-150.hsd1.ca.comcast.net) (Ping timeout: 256 seconds)
[01:46:26] <BLeo193> Okay I will for sure :)
[01:47:51] *** Joins: GNUmoon (~GNUmoon@gateway/tor-sasl/gnumoon)
[01:47:53] *** Quits: Batzy (~quassel@user/batzy) (Quit: https://quassel-irc.org - Chat comfortably. Anywhere.)
[01:47:59] <shodan45> is mechanize still a good option for what it does?
[01:48:17] *** Quits: msek_ (~Username@pd9fb25a1.dip0.t-ipconnect.de) (Ping timeout: 240 seconds)
[01:48:57] <shodan45> I've used requests + beautifulsoup before, but I really need something that has more of a browser "session"
[01:49:01] *** Joins: Batzy (~quassel@user/batzy)
[01:49:57] <grym> shodan45: hmm, so like a step down from scrapy or selenium
[01:50:42] <akk> I've used requests + cookiejar, for something that needs session cookies but doesn't need a full browser like selenium.
[01:50:45] *** Quits: MasterK (~MQ@86.127.18.11) (Remote host closed the connection)
[01:51:12] <shodan45> yeah, selenium is overkill
[01:51:15] *** Quits: harpia (~harpia@143.208.84.235) (Quit: harpia)
[01:51:42] *** Quits: perrierjouet (~perrier-j@modemcable012.251-130-66.mc.videotron.ca) (Quit: WeeChat 3.4)
[01:51:51] <shodan45> and scrapy looks like it's geared more for spiders...?
[01:52:25] *** Joins: Elodin (~elodin@user/elodin)
[01:52:26] *** Joins: humbertowoody (~humbertow@187.202.198.64)
[01:52:34] *** Joins: jmdaemon (~jmdaemon@user/jmdaemon)
[01:53:25] *** Joins: sdfgsdfg (~dfghsfgs@user/sdfgsdfg)
[01:54:13] *** Quits: odoood (~odoood@2601:c8:c000:c4e0::3) (Ping timeout: 240 seconds)
[01:54:21] *** Quits: jay-m1262 (~jay-m@154.72.162.81) (Ping timeout: 256 seconds)
[01:54:22] *** Quits: LiaoTao (~LiaoTao@gateway/tor-sasl/liaotao) (Quit: ZNC 1.8.2 - https://znc.in)
[01:54:31] *** Quits: upsala (~zcb@185.213.155.252) (Quit: WeeChat 3.4)
[01:54:37] *** Joins: LiaoTao (~LiaoTao@gateway/tor-sasl/liaotao)
[01:54:44] <nedbat> SnoopJ: can you link me to the "print returns None" disagreement?
[01:54:44] *** Parts: theChaparral[m] (~thechapar@2001:470:69fc:105::1:6496) ()
[01:55:38] *** Quits: karlnashville (~karl@2601:482:4280:4cf0:ae6:a06f:8a32:c379) (Quit: Konversation terminated!)
[01:57:00] *** Quits: humbertowoody (~humbertow@187.202.198.64) (Ping timeout: 250 seconds)
[01:57:11] *** Quits: M3troidman (~buttler@196.244.191.100) (Ping timeout: 256 seconds)
[01:58:27] <SnoopJ> nedbat, https://bugs.python.org/issue46282
[01:58:37] *** Joins: georgios (~georgios@user/georgios)
[01:58:38] *** Quits: Mechanismus (~LabMonkey@206.255.106.67) (Quit: Leaving)
[02:00:52] *** Joins: d1cor (~diego@179.63.242.122)
[02:00:53] *** Joins: M3troidman (~buttler@196.244.191.100)
[02:02:29] <bjs> SnoopJ: I continue to be puzzled by the ridiculous pushback you are getting over such a simple and obviously beneficial change to the docs.
[02:02:39] <bjs> puzzled and amazed.
[02:03:25] <grym> telling people what things do just spoils the fun
[02:03:51] <nedbat> SnoopJ: what is a fast path issue?
[02:04:07] <SnoopJ> nedbat, as in: https://github.com/python/docs-community/issues/13
[02:04:36] *** Quits: VictorKostyuk[m] (~thevicmat@2001:470:69fc:105::1:64e4) (Quit: You have been kicked for being idle)
[02:04:36] *** Quits: mjr7[m] (~mjr7matri@2001:470:69fc:105::1:64e6) (Quit: You have been kicked for being idle)
[02:04:38] *** Quits: Simon[m]12 (~srwalker1@2001:470:69fc:105::1:64ea) (Quit: You have been kicked for being idle)
[02:04:38] *** Quits: felixschloesser[ (~felixschl@2001:470:69fc:105::1:64ed) (Quit: You have been kicked for being idle)
[02:04:39] *** Quits: purplepinky[m] (~purplepin@2001:470:69fc:105::1:6535) (Quit: You have been kicked for being idle)
[02:04:47] *** Joins: lawrencevanderpo (~mekhami@2605:a601:aaf2:ef00:1821:5187:fb89:c9c8)
[02:05:06] <nedbat> SnoopJ: got it
[02:05:08] *** Joins: VictorKostyuk[m] (~thevicmat@2001:470:69fc:105::1:64e4)
[02:05:20] *** Joins: mjr7[m] (~mjr7matri@2001:470:69fc:105::1:64e6)
[02:05:30] <bjs> grym: I know right,  it's not like print() is a common function or anything :P
[02:05:32] *** Joins: Simon[m]12 (~srwalker1@2001:470:69fc:105::1:64ea)
[02:05:40] *** Quits: Belxjander (~Belxjande@p1575007-ipoe.ipoe.ocn.ne.jp) (Ping timeout: 250 seconds)
[02:05:45] *** Joins: felixschloesser[ (~felixschl@2001:470:69fc:105::1:64ed)
[02:05:51] *** Quits: pycurious (~Adium@user/pycurious) (Quit: Leaving.)
[02:05:57] *** Joins: purplepinky[m] (~purplepin@2001:470:69fc:105::1:6535)
[02:05:57] <SnoopJ> bjs, I broached it as an example of the kind of thing that the documentation working group could shed light on
[02:06:02] *** Quits: Thanatos (~Thanatos@102.91.5.153) (Ping timeout: 240 seconds)
[02:06:54] *** Joins: humbertowoody (~humbertow@187.202.198.64)
[02:07:20] <bjs> What is there to "shed light on" even?
[02:07:36] *** Joins: Belxjander (~Belxjande@p1575007-ipoe.ipoe.ocn.ne.jp)
[02:07:46] <bjs> The print docs just don't say what it returns,  and this change proposes to make it say what it returns.  I'm still not even sure why it was controversial.
[02:08:12] <SnoopJ> bjs, well, if not doing that is an effective policy, the workgroup could codify it
[02:08:28] *** Quits: vsis (~roddy@190-82-223-58.adsl.tie.cl) (Quit: leaving)
[02:08:46] *** Joins: bnchs (~bnchs@160.177.45.26)
[02:08:57] *** Quits: lawrencevanderpo (~mekhami@2605:a601:aaf2:ef00:1821:5187:fb89:c9c8) (Ping timeout: 240 seconds)
[02:08:59] <SnoopJ> (it was just an example of a place where clarification of process could help)
[02:09:01] *** Quits: bnchs__ (~bnchs@160.177.45.26) (Ping timeout: 240 seconds)
[02:10:35] *** Joins: gentooclimax (~gentoocli@81-64-65-213.rev.numericable.fr)
[02:10:43] *** Quits: gentooclimax (~gentoocli@81-64-65-213.rev.numericable.fr) (Client Quit)
[02:11:35] *** Quits: humbertowoody (~humbertow@187.202.198.64) (Ping timeout: 256 seconds)
[02:11:39] <bjs> SnoopJ: it's a very weak argument, because in lots of places functions which return None are documented as doing so, either in the function itself or in surrounding documentation
[02:12:06] *** Quits: _xor (~xor@dsl-50-5-233-169.fuse.net) (Quit: WeeChat 3.4)
[02:12:26] <Evolver> 1^1 sometimes returns 1 and sometimes 0 depending upon how it is primed
[02:12:32] <SnoopJ> bjs, I'm inclined to agree, especially because there is only so much slope to be slippery in that specific case.
[02:12:40] *** Joins: perrierjouet (~perrier-j@modemcable012.251-130-66.mc.videotron.ca)
[02:12:58] <bjs> Evolver: primed?
[02:13:05] <Evolver> depending upon prior statements
[02:13:09] <Evolver> it tries to be clever
[02:13:18] <bjs> Evolver: what do you mean?
[02:13:28] <Evolver> it tries to decide whether to use exponentiation or binary xor
[02:13:34] <bjs> Evolver: what is "it" ?
[02:13:38] <Evolver> python
[02:13:48] <bjs> Evolver: when does it use exponentiation with ^ ?
[02:14:15] *** Quits: eron (~eron@2804:431:c7c2:934:9877:36f8:e8ed:91e) (Quit: Client closed)
[02:14:42] *** Quits: milkt (~debian@gateway/tor-sasl/milkt) (Remote host closed the connection)
[02:14:44] *** Quits: Elodin (~elodin@user/elodin) (Quit: WeeChat 3.4)
[02:14:57] *** Joins: milkt (~debian@gateway/tor-sasl/milkt)
[02:15:01] *** Quits: dthpulse (~quassel@podciarou.sk) (Quit: https://quassel-irc.org - Chat comfortably. Anywhere.)
[02:15:09] <Evolver> I'm sorry. I will go get more coffee. Disregard.
[02:15:14] <bjs> SnoopJ: sometimes people complain about the lack of contributors and well,  I can see why.
[02:15:21] <bjs> (why people don't want to contribute)
[02:15:31] *** Joins: Guest1778 (~Guest1778@cpe-173-174-25-173.stx.res.rr.com)
[02:15:34] <SnoopJ> bjs, that's one of the major reasons I'm interested in the workgroup in the first place
[02:15:59] *** Joins: dthpulse (~quassel@podciarou.sk)
[02:16:27] <Guest1778> Hello, I use Anaconda and want to update my Python to the newest version.
[02:16:28] <Guest1778> I wrote: conda update python, but this did not update python to the latest version. Why?
[02:16:48] *** Joins: vicfred (~vicfred@user/vicfred)
[02:17:15] *** Quits: nomic (~nomic@185.217.117.232) (Quit: Leaving)
[02:17:58] *** Quits: CombatVet (~c4@user/combatvet) (Remote host closed the connection)
[02:18:22] *** Joins: CombatVet (~c4@user/combatvet)
[02:18:38] <Guest1778> https://docs.conda.io/projects/conda/en/latest/user-guide/tasks/manage-python.html#updating-or-upgrading-python Oh, apparently it is illadvised to do this
[02:18:52] <Guest1778> ". It is not recommended, rather it is preferable to create a new environment. "
[02:19:23] <Evolver> Guest1778: I think you can define an `environment.yml` file with the python version you want
[02:19:43] <Evolver> and then, if it's a minor version update, make a new environment
[02:19:50] <Evolver> If it's a patch version update, same environment may be ok.
[02:20:20] <Guest1778> I would be going from 3.7.11 to 3.10
[02:20:29] <Evolver> Definitely a new environment then
[02:20:33] <Guest1778> mhm
[02:21:01] *** Quits: nceric (~nceric@76-217-82-15.lightspeed.chrlnc.sbcglobal.net) (Quit: Client closed)
[02:21:01] *** Quits: naranja (~orange@user/orangeboxcutter) (Remote host closed the connection)
[02:21:32] <Guest1778> I'd like to copy the environment, but use the newest python version. Is there a way to do that? Otherwise, I would have to individually re-add the little packages I had accumulated
[02:21:33] *** Quits: Lando-SpacePimp (~Lando-Spa@user/lando-spacepimp) (Ping timeout: 256 seconds)
[02:22:38] <Evolver> Guest1778: I would define the environment.yml with the first-level package requirements, similar to a pip requirements.txt file
[02:22:41] *** Joins: humbertowoody (~humbertow@187.202.198.64)
[02:22:53] *** Joins: naranja (~orange@user/orangeboxcutter)
[02:22:55] *** Joins: toma (~RubbishPu@node-1w7jr9yhpl489wpp0k6ej5sdw.ipv6.telus.net)
[02:23:01] *** Joins: karlnashville (~karl@2601:482:4280:4cf0:2c7c:3dc5:7db6:8671)
[02:23:24] <Evolver> Guest1778: https://sachinjose31.medium.com/creating-an-environment-in-anaconda-through-a-yml-file-7e5deeb7676d seems to cover it
[02:23:27] *** Quits: darksun (~darksun@user/darksun) (Quit: leaving)
[02:23:51] <akk> Guest1778: I don't know about conda, but regular virtualenvs can't easily be copied or moved, unfortunately.
[02:23:57] *** Joins: SOMBRIO (~SOMBRIO@177.137.113.66)
[02:24:37] <Evolver> Guest1778: the best you can do is list the required packages using pip list or some conda list command
[02:25:09] *** Quits: adiKt (uid472628@id-472628.tinside.irccloud.com) (Quit: Connection closed for inactivity)
[02:25:40] *** Quits: bnchs (~bnchs@160.177.45.26) (Remote host closed the connection)
[02:25:51] <Guest1778> interesting, thanks.
[02:26:04] *** Joins: bnchs (~bnchs@160.177.45.26)
[02:26:21] <Evolver> Guest1778: but add only the first-level direct requirements in environment.yml, never the indirect
[02:26:29] <Evolver> never the transitive requirements
[02:27:27] *** Quits: humbertowoody (~humbertow@187.202.198.64) (Ping timeout: 256 seconds)
[02:28:10] *** Joins: stewie925 (~stewie925@2600:1702:44f0:35c0:bdd8:27ef:418f:c751)
[02:28:41] *** Joins: sjas (~sjas@irc.sjas.de)
[02:29:43] *** Quits: \mSg (mSg@user/msg/x-0285936) (Ping timeout: 256 seconds)
[02:31:23] *** Joins: adiKt (uid472628@id-472628.tinside.irccloud.com)
[02:31:52] *** Joins: \mSg (mSg@user/msg/x-0285936)
[02:32:20] *** Quits: sasha (~sasha@wikimedia/-sasha-) (Quit: ZNC - https://znc.in)
[02:32:31] *** Quits: \mSg (mSg@user/msg/x-0285936) (Client Quit)
[02:32:39] *** Quits: marcello42 (~mp@p200300dfaf10fe015baf6eed7f4ef68f.dip0.t-ipconnect.de) (Ping timeout: 256 seconds)
[02:33:33] *** Joins: Elodin (~elodin@user/elodin)
[02:33:38] *** Quits: Elodin (~elodin@user/elodin) (Client Quit)
[02:34:03] *** Joins: merijn (~merijn@c-001-001-018.client.esciencecenter.eduvpn.nl)
[02:34:27] *** Quits: bnchs (~bnchs@160.177.45.26) (Ping timeout: 250 seconds)
[02:35:49] *** Quits: msk (~Thunderbi@89.205.124.40) (Quit: msk)
[02:36:34] <bjs> SnoopJ: well it's all just kind of dumb, the arguments against don't make much sense to me: it'll be confusing? how?; slippery slope? oh no we might have *other* people contribute documentation to the docs, how terrible; it's obvious so we don't need to mention it,  except it's not obvious and other print-like functions do return things e.g. file.write; it's not documented elsewhere, except for where it is like earlier in the same page for exec and in other
[02:36:34] <bjs> places for built-in sequence types, and in places in the standard library albeit inconsistently and hard to see a pattern; and the idea that it's some unwritten obvious rule that if the documentation doesn't say the return type then it must be None because that's how the language works is just silly
[02:36:46] *** Joins: _xor (~xor@dsl-50-5-233-169.fuse.net)
[02:36:48] <bjs> Unwritten documentation isn't.
[02:36:51] *** Quits: SaltHilStroller_ (~SaltHillS@206.223.160.26) (Ping timeout: 256 seconds)
[02:36:52] *** Quits: Donitz (~Donitz@88-115-149-215.elisa-laajakaista.fi) (Read error: Connection reset by peer)
[02:36:54] *** Quits: MrFantastik (~f@12.244.8.98) (Ping timeout: 260 seconds)
[02:37:02] *** Joins: Reign (~Username@ip98-161-226-10.ph.ph.cox.net)
[02:37:14] *** Joins: bnchs (~bnchs@160.177.45.26)
[02:37:34] <SnoopJ> They don't make much sense to me either, but leaving aside the specific change itself, it's a real example of something that might put off a beginner's contribution to docs: they don't know if they'll get that kind of reaction!
[02:38:05] <SnoopJ> (as you said)
[02:38:15] *** Quits: LuksNuke_ (~LuksNuke@gateway/tor-sasl/luksnuke) (Ping timeout: 276 seconds)
[02:38:35] *** Joins: Donitz (~Donitz@88-115-149-215.elisa-laajakaista.fi)
[02:38:44] *** Joins: humbertowoody (~humbertow@187.202.198.64)
[02:39:16] *** Joins: sasha (~sasha@wikimedia/-sasha-)
[02:39:25] *** Scotteh_ is now known as Scotteh
[02:39:27] *** Joins: c4017w__ (~c4017@209.52.68.8)
[02:40:57] *** Quits: rakoon (~rakoon@2001:985:f4c6:1:e358:d188:e0f2:7618) (Ping timeout: 240 seconds)
[02:41:34] *** Quits: skapata (~Skapata@user/skapata) (Ping timeout: 260 seconds)
[02:41:42] <bjs> SnoopJ: I mean recently there was this argument on python-dev I saw, about "small" PRs are spammy. There was a comment from Terry Reedy quote "(I considered rejecting as 'too
[02:41:42] <bjs> trivial'"
[02:41:56] *** Quits: BLeo193 (~BLeo193@natp-128-119-202-248.wireless.umass.edu) (Quit: Client closed)
[02:41:57] <SnoopJ> bjs, could you link that?
[02:42:09] *** Quits: winterflaw (~winterfla@gateway/tor-sasl/winterflaw) (Ping timeout: 276 seconds)
[02:42:40] *** Joins: TheHermann (~TheHerman@gateway/tor-sasl/thehermann)
[02:42:58] *** Quits: c4017w_ (~c4017@209.52.68.8) (Ping timeout: 260 seconds)
[02:43:33] <bjs> SnoopJ: https://mail.python.org/archives/list/python-dev@python.org/thread/7RGI4LUJSEKU2JUYSV7UMZ2CXRGAANEF/
[02:43:35] *** Joins: Lando-SpacePimp (~Lando-Spa@user/lando-spacepimp)
[02:44:11] *** Quits: GreenResponse (~tomek@r-45-155-148-237.gpon.bialnet.pl) (Quit: Leaving)
[02:44:40] *** Quits: ice99 (~ice9@user/ice9) (Ping timeout: 250 seconds)
[02:45:05] *** Quits: ice9 (~ice9@user/ice9) (Ping timeout: 250 seconds)
[02:45:07] <bjs> clearly the system as it stands at the moment is untenable for core devs, there are far too many PRs to review and manage and merge.
[02:45:13] *** Joins: Lando-HoloNet (~Lando-Spa@user/lando-spacepimp)
[02:45:57] <SnoopJ> Good time to address it, the language isn't losing users heh
[02:46:26] *** Joins: skapata (~Skapata@user/skapata)
[02:46:29] *** Quits: jay-m126_ (~jay-m@41.205.30.141) (Ping timeout: 256 seconds)
[02:46:29] *** Quits: jay-m126 (~jay-m@41.205.30.141) (Ping timeout: 256 seconds)
[02:46:46] *** Joins: pycurious (~Adium@user/pycurious)
[02:47:03] *** Quits: jay-m1261 (~jay-m@41.205.30.141) (Ping timeout: 256 seconds)
[02:47:27] *** Joins: jay-m126 (~jay-m@41.205.30.141)
[02:47:35] *** Joins: jay-m126_ (~jay-m@41.205.30.141)
[02:47:37] *** Joins: jay-m1261 (~jay-m@41.205.30.141)
[02:47:38] *** Quits: FinnElija (~finn_elij@user/finn-elija/x-0085643) (Remote host closed the connection)
[02:49:02] *** Joins: duuude (~user@user/duuude)
[02:49:05] *** Quits: Lando-SpacePimp (~Lando-Spa@user/lando-spacepimp) (Ping timeout: 256 seconds)
[02:51:05] *** Quits: Klinda (~superleag@user/klinda) (Quit: Konversation terminated!)
[02:51:35] *** Quits: Guest1778 (~Guest1778@cpe-173-174-25-173.stx.res.rr.com) (Ping timeout: 256 seconds)
[02:51:42] *** Joins: bitdex (~bitdex@gateway/tor-sasl/bitdex)
[02:51:52] *** Joins: msk (~Thunderbi@89.205.124.40)
[02:52:59] *** Joins: lawrencevanderpo (~mekhami@2605:a601:aaf2:ef00:1821:5187:fb89:c9c8)
[02:53:07] *** Joins: LuksNuke_ (~LuksNuke@gateway/tor-sasl/luksnuke)
[02:53:08] *** Joins: Celeo (~Celeo@user/celeo)
[02:53:09] <SnoopJ> bjs, I agree strongly with: "At the end of the day, it doesn't really matter what a contributor's motivation is - it's up to the core devs to decide..."
[02:53:42] *** Parts: blackout69 (~blackout6@net-109-117-245-237.cust.vodafonedsl.it) ()
[02:54:35] *** Joins: FinnElija (~finn_elij@user/finn-elija/x-0085643)
[02:55:10] *** Joins: Mechanismus (~LabMonkey@206.255.106.67)
[02:55:27] <SnoopJ> Non-contributor approvals affecting reviews seems like it's a workflow flaw more than something anybody should be tut-tutted over, even if there weren't encouragement to do it
[02:55:32] *** Quits: slav0nic (slav0nic@python.su) (Ping timeout: 252 seconds)
[02:56:57] *** Quits: palasso (~palasso@user/palasso) (Quit: I am not a quitter!)
[02:57:01] *** Quits: lawrencevanderpo (~mekhami@2605:a601:aaf2:ef00:1821:5187:fb89:c9c8) (Ping timeout: 240 seconds)
[02:57:51] *** Quits: Z-cat (~Z-cat@user/z-cat) (Ping timeout: 250 seconds)
[02:57:54] *** Quits: duuude (~user@user/duuude) (Ping timeout: 260 seconds)
[02:57:54] <bjs> SnoopJ: those points are interesting but your change has a veritable menagerie of core devs on it and no acceptance :P
[02:58:06] <bjs> I think the issue with your change run deeper ...
[02:58:23] *** Joins: wingsorc (~wingsorc@user/wingsorc)
[02:58:38] <SnoopJ> bjs, I think my issue ran headlong into "the goals of the official docs are unclear"
[02:59:11] <bjs> If "document what the built-in functions do" is not part of those goals then I am stumped
[02:59:16] <SnoopJ> well
[02:59:44] <SnoopJ> Is it "this is all-you-need" documentation, or "most-of-what-you-need" documentation?
[02:59:46] *** Joins: jhulten (~jhulten@c-67-185-71-124.hsd1.wa.comcast.net)
[02:59:57] *** Quits: goldfish (~goldfish@user/goldfish) (Ping timeout: 240 seconds)
[02:59:58] <SnoopJ> The discussion seems to be in favor of the latter
[03:00:23] <hardwire> This is a pattern I'm dealing with that I'm not proud of.. I feel like there's a better way to wrap an exception with another exception.  I use `raise xxx(...) from yyy` to properly create the exception stack. I also incorporate exception logging.
[03:00:23] <hardwire> https://gist.github.com/whardier/008ebcda6d526594b5bceb20fa52553a#file-hmm-py-L8
[03:00:23] <hardwire> Is there a good way to knock a few lines off of this and clean it up?  Even if I have to set internal_failure_error = InternalFailureError('...') and then log it and raise it specifically without all the try: nesting.  The one thing I'm not too in the know on is how to instantiate a new exception and associate it with another one without the use of "from" after raise.
[03:00:26] <SnoopJ> Beginners aren't the audience, they're expected to get the missing pieces elsewhere (which doesn't do a great job but that's a separate and easier thing to address)
[03:00:40] *** Joins: duuude (~user@user/duuude)
[03:01:37] <SnoopJ> bjs, to be clear, I agree with you: it's a small ask to add None to the few callables on that page that don't do it. The fact that some already *do* mention it, but adding it to others is not okay does strike me as weird :)
[03:02:01] *** Joins: MrFantastik (~f@2607:f598:bbda:1e0:b2bb:53ba:1923:e3c6)
[03:03:01] *** Quits: fikran (~fikran@user/fikran) (Ping timeout: 240 seconds)
[03:03:27] *** Quits: Feuermagier (~Feuermagi@user/feuermagier) (Quit: Leaving)
[03:03:28] <TML> hardwire: you're doing all of that just so the wrapper exception type appears in the logging?
[03:03:56] *** Quits: willcl_ark (~willcl-ar@2001:470:69fc:105::1:620a) (Changing host)
[03:03:56] *** Joins: willcl_ark (~willcl-ar@user/willcl-ark/x-8282106)
[03:05:28] *** Quits: jmdaemon (~jmdaemon@user/jmdaemon) (Ping timeout: 250 seconds)
[03:05:56] *** Quits: ovnicraft (~ovnicraft@corp-179-49-44-28.uio.puntonet.ec) (Quit: My MacBook has gone to sleep. ZZZzzz…)
[03:06:25] <hardwire> TML: I want to log the wrapped exception - but ultimately just bubbling up the wrapped exception to a decorator that will decide if we need to reraise that exception from None or pass the entire stack .. and do squashing there as well.  The wrapped exceptions are part of the API layer and match up with how we present errors to users.
[03:06:41] *** Joins: lsrtl__ (~lsrtl@user/lsrtl)
[03:06:53] *** Quits: foul_owl (~kerry@23.82.194.143) (Ping timeout: 256 seconds)
[03:07:01] *** Quits: lsrtl_ (~lsrtl@user/lsrtl) (Read error: Connection reset by peer)
[03:07:02] <hardwire> I just can't help but feel that that specific pattern could be smaller.
[03:08:00] *** Quits: dextercd (~dexter@2a02-a450-f25d-1-76d4-35ff-fefe-34c.fixed6.kpn.net) (Quit: WeeChat 3.4)
[03:08:10] *** Quits: merijn (~merijn@c-001-001-018.client.esciencecenter.eduvpn.nl) (Ping timeout: 260 seconds)
[03:08:19] *** Quits: imp (~imp@177-131-189-195.static.sumicity.net.br) (Quit: imp)
[03:09:07] <hardwire> Like.. exception chaining without raise. https://docs.python.org/3/tutorial/errors.html#exception-chaining
[03:09:40] *** Joins: jmdaemon (~jmdaemon@user/jmdaemon)
[03:10:52] *** Quits: c4017w__ (~c4017@209.52.68.8) (Quit: Leaving)
[03:10:57] *** Quits: fedenix (~fedenix@gateway/tor-sasl/fedenix) (Remote host closed the connection)
[03:11:48] *** Quits: plastico (~plastico@neomutt/plastico) (Quit: WeeChat 3.4)
[03:13:07] *** Quits: bnchs (~bnchs@160.177.45.26) (Ping timeout: 256 seconds)
[03:17:16] *** Joins: c4017w (~c4017@209.52.68.8)
[03:17:28] <hardwire> Ahha! https://gist.github.com/whardier/16c1527447475c513e37a19f2dd1179d ... I don't feel like it will be cleaner to use __context__ directly.. but it might inspire some change.
[03:18:04] *** Joins: bnchs (~bnchs@160.177.45.26)
[03:19:52] *** Joins: herjazz (~herjazz@p10513117-ipngn24101marunouchi.tokyo.ocn.ne.jp)
[03:21:07] *** Joins: NeilRG (~NeilRG@96-127-194-85.qc.cable.ebox.net)
[03:22:10] *** Joins: foul_owl (~kerry@192.145.116.254)
[03:24:05] *** Joins: domino (~domino@2a00:1370:8120:3bc8:a912:df9:cba6:6055)
[03:24:17] <kungp> if i run a program without a terminal attached (server), are prints still called?
[03:24:28] *** Quits: domino (~domino@2a00:1370:8120:3bc8:a912:df9:cba6:6055) (Client Quit)
[03:24:29] *** Quits: karlnashville (~karl@2601:482:4280:4cf0:2c7c:3dc5:7db6:8671) (Quit: Konversation terminated!)
[03:24:49] *** Quits: kmh (~kmh@2a00:6020:5004:6800:f98e:e38d:b4ba:5a03) (Remote host closed the connection)
[03:24:55] <SnoopJ> kungp, print() goes to a process's stdout stream by default. That doesn't have to be a terminal, if that answers your question.
[03:25:00] *** Joins: kmh (~kmh@2a00:6020:5004:6800:f98e:e38d:b4ba:5a03)
[03:25:01] <kungp> i mean should i check for a "debug mode" if i want to save as much resources as possible when running by itself
[03:25:21] <SnoopJ> Perhaps you could use the logging module, which has a notion of "levels"
[03:25:49] *** Joins: dman777 (~dman777@76-253-74-225.lightspeed.austtx.sbcglobal.net)
[03:26:06] <kungp> i'll look into that, thanks
[03:26:15] *** Quits: bnchs (~bnchs@160.177.45.26) (Remote host closed the connection)
[03:26:18] <dman777> what does it mean when a list has () around it? ie: ([ ... ])
[03:26:32] <bjs> dman777: it depends what else there is apart from the ()
[03:26:32] *** Joins: bnchs (~bnchs@160.177.45.26)
[03:26:38] <SnoopJ> dman777, it means someone put parentheses around it, it doesn't change the meaning
[03:26:48] <SnoopJ> (unless it's part of a function call)
[03:26:50] <bjs> dman777: (4+7) is not the same as (4+7,) is not the same as f(4+7)
[03:27:18] <bjs> in the first, the brackets are just for grouping and don't "change" anything. in the second it makes a tuple (with a comma), and in the final it's calling the function `f`
[03:27:25] *** Joins: lawrencevanderpo (~mekhami@2605:a601:aaf2:ef00:1821:5187:fb89:c9c8)
[03:28:55] <dman777> bjs: oh...there is a comma... so I have print(fields) and it's a list with ([{foo: bar, tar: car}],)
[03:29:12] *** Joins: odoood (~odoood@2601:c8:c000:c4e0:f799:b570:9765:917c)
[03:29:13] <dman777> I mean there is a trailing comma at the end
[03:29:16] *** Quits: TheHermann (~TheHerman@gateway/tor-sasl/thehermann) (Quit: Leaving)
[03:29:19] <bjs> dman777: that's a tuple, with 1 item, which is a list, with 1 item, which is a dict
[03:30:07] <dman777> bjs: ah...ok. thanks
[03:31:34] *** Joins: CaryHartline (~CaryHartl@2603-8080-6a0e-8d88-f089-38a5-e7a7-68a5.res6.spectrum.com)
[03:31:58] *** Quits: lawrencevanderpo (~mekhami@2605:a601:aaf2:ef00:1821:5187:fb89:c9c8) (Ping timeout: 260 seconds)
[03:33:23] <nedbat> kungp: what does your program do? Are the prints expensive?
[03:34:39] *** Quits: d1cor (~diego@179.63.242.122) (Ping timeout: 256 seconds)
[03:36:10] *** Joins: df00z (~df00z@cpe-69-207-141-227.rochester.res.rr.com)
[03:36:14] <kungp> nedbat: sometimes they are. it's a sort of hub program for a bunch of timing-sensitive devices and the less interruptions i get during normal usage the better
[03:36:37] *** Quits: CaryHartline (~CaryHartl@2603-8080-6a0e-8d88-f089-38a5-e7a7-68a5.res6.spectrum.com) (Quit: My iMac has gone to sleep. ZZZzzz…)
[03:36:39] *** Joins: junebug (~junebug@2600:1700:3db0:2540:cb34:6962:9bf8:f69f)
[03:37:27] <kungp> right now i start it with an argument when i want to get output and i call a function that checks that flag before every print. doesn't feel very clean
[03:38:16] *** Quits: luva (~luva@37.120.197.54) (Ping timeout: 245 seconds)
[03:38:43] *** Joins: luva0 (~luva@37.120.197.45)
[03:40:12] *** Quits: Auron (Auron956@user/auron) (Remote host closed the connection)
[03:40:30] *** Quits: gitesh (uid423739@id-423739.ilkley.irccloud.com) (Quit: Connection closed for inactivity)
[03:41:47] *** Quits: LucaTM (~LucaTM@user/lucatm) (Quit: Textual IRC Client: www.textualapp.com)
[03:41:52] *** Quits: humbertowoody (~humbertow@187.202.198.64) (Ping timeout: 250 seconds)
[03:42:21] *** Quits: theo (~theo@user/theo) (Ping timeout: 256 seconds)
[03:43:07] *** Joins: pipapipapibo (~w@2601:601:cf7e:1d80::6f68)
[03:43:09] *** Quits: maxzor (~maxzor@abordeaux-652-1-2-77.w90-16.abo.wanadoo.fr) (Ping timeout: 256 seconds)
[03:43:23] *** Quits: pepper (~pepper@user/pepper) (Ping timeout: 256 seconds)
[03:43:52] *** Quits: Gerula (~Gerula@user/gerula) (Quit: Leaving)
[03:44:27] *** Quits: kosh (~kosh@user/kosh) (Ping timeout: 250 seconds)
[03:44:54] *** Quits: mat001 (~mat001@72.28.108.216) (Ping timeout: 250 seconds)
[03:45:26] *** Joins: Gerula (~Gerula@user/gerula)
[03:46:00] *** Joins: ovelny (~ovelny@user/ovelny)
[03:46:08] *** Quits: MJ (~mjpieters@zopatista.plus.com) (Quit: ZNC - http://znc.in)
[03:46:21] *** Quits: ovelny (~ovelny@user/ovelny) (Client Quit)
[03:46:22] *** Joins: MJ (~mjpieters@zopatista.plus.com)
[03:46:26] *** Quits: skapata (~Skapata@user/skapata) (Ping timeout: 260 seconds)
[03:47:17] *** Joins: ovelny (~ovelny@user/ovelny)
[03:47:21] *** Quits: ovelny (~ovelny@user/ovelny) (Client Quit)
[03:47:32] *** Joins: moth (~moth@2600:1700:5d5c:110:c4f2:36a3:3133:522b)
[03:47:37] *** Joins: ovelny (~ovelny@user/ovelny)
[03:48:23] *** Joins: spiri__ (~LuksNuke@gateway/tor-sasl/luksnuke)
[03:48:24] *** Quits: ovelny (~ovelny@user/ovelny) (Client Quit)
[03:49:24] *** Joins: bnchs__ (~bnchs@160.177.45.26)
[03:49:45] *** Quits: LuksNuke_ (~LuksNuke@gateway/tor-sasl/luksnuke) (Ping timeout: 276 seconds)
[03:49:59] *** Quits: duuude (~user@user/duuude) (Ping timeout: 252 seconds)
[03:50:10] *** Quits: bnchs (~bnchs@160.177.45.26) (Remote host closed the connection)
[03:50:40] *** Quits: Reign (~Username@ip98-161-226-10.ph.ph.cox.net) (Quit: Going offline, see ya! (www.adiirc.com))
[03:50:56] *** Joins: sharksauce (sharksauce@user/sharksauce)
[03:51:03] *** Joins: ovelny (~ovelny@user/ovelny)
[03:51:09] *** Joins: duuude (~user@user/duuude)
[03:51:11] *** Quits: ovelny (~ovelny@user/ovelny) (Client Quit)
[03:51:49] *** Joins: CatCow (~wtf_over@c-73-96-109-206.hsd1.or.comcast.net)
[03:52:19] *** Quits: georgios (~georgios@user/georgios) (Quit: Konversation terminated!)
[03:52:25] *** Joins: CaryHartline (~CaryHartl@2603-8080-6a0e-8d88-f089-38a5-e7a7-68a5.res6.spectrum.com)
[03:52:57] *** Quits: Guest7003 (~vit@chello085216193138.chello.sk) (Ping timeout: 240 seconds)
[03:53:03] *** Quits: stewie925 (~stewie925@2600:1702:44f0:35c0:bdd8:27ef:418f:c751) (Quit: Client closed)
[03:54:00] *** Joins: humbertowoody (~humbertow@187.202.198.64)
[03:55:34] *** Quits: CaryHartline (~CaryHartl@2603-8080-6a0e-8d88-f089-38a5-e7a7-68a5.res6.spectrum.com) (Client Quit)
[03:55:40] <moth> Anyone have experience using python and the google drive api?
[03:56:13] *** Joins: ovelny (~ovelny@user/ovelny)
[03:56:59] *** Quits: msk (~Thunderbi@89.205.124.40) (Quit: msk)
[03:57:08] *** Quits: jmdaemon (~jmdaemon@user/jmdaemon) (Ping timeout: 252 seconds)
[03:57:13] *** Quits: ovelny (~ovelny@user/ovelny) (Client Quit)
[03:57:19] *** Quits: M3troidman (~buttler@196.244.191.100) (Ping timeout: 256 seconds)
[03:57:20] *** Quits: LimeOn (~user@user/limeon) (Quit: .)
[03:58:46] *** Quits: humbertowoody (~humbertow@187.202.198.64) (Ping timeout: 250 seconds)
[03:59:20] *** Joins: skapata (~Skapata@user/skapata)
[04:00:03] *** Joins: CaryHartline (~CaryHartl@2603-8080-6a0e-8d88-f089-38a5-e7a7-68a5.res6.spectrum.com)
[04:00:39] *** Joins: chenqisu1 (~chenqisu1@183.217.200.249)
[04:00:44] *** Joins: M3troidman (~buttler@196.244.191.100)
[04:01:03] *** Quits: Wulf (~Wulf@user/wulf) (Ping timeout: 256 seconds)
[04:01:07] <moth> Yeah, me either.
[04:01:22] *** Quits: jstein (~jstein@gentoo/developer/jstein) (Quit: quit)
[04:01:27] *** Quits: spiri__ (~LuksNuke@gateway/tor-sasl/luksnuke) (Ping timeout: 276 seconds)
[04:01:36] <SnoopJ> Supposing that someone did, do you have a more specific question for them? IRC is an asynchronous communication medium.
[04:01:36] *** Joins: lawrencevanderpo (~mekhami@2605:a601:aaf2:ef00:1821:5187:fb89:c9c8)
[04:01:37] *** Quits: xheimlich (~xheimlich@179.218.1.150) (Ping timeout: 240 seconds)
[04:01:42] <whatsupdoc> Is deque() faster than a list [] for appending one-by-one to the end?
[04:01:54] *** Quits: rowbots (~dirgeable@h64-17-89-214.arvdco.broadband.dynamic.tds.net) (Remote host closed the connection)
[04:02:37] *** Joins: Wulf (~Wulf@user/wulf)
[04:03:02] *** Joins: ovnicraft (~ovnicraft@186.178.108.140)
[04:03:27] <moth> Just curious what their experience was with it, and ideally someone who has used it with a RaspberryPi
[04:03:32] <dman777> https://dpaste.org/GFot Why does print(len(foo)) show this tuple as 1 length?
[04:03:47] <SnoopJ> dman777, because it contains one object, the list.
[04:04:46] <kungp> dman777: foo[0] if you want the list
[04:05:23] *** Quits: jeho (~jehoshaph@user/jehoshaphat) (Quit: Leaving)
[04:05:48] <dman777> thanks
[04:07:58] *** Joins: \mSg (mSg@user/msg/x-0285936)
[04:08:51] *** Quits: Harlin_ (~DonQixote@75-163-202-34.clsp.qwest.net) (Remote host closed the connection)
[04:08:55] *** Quits: lawrencevanderpo (~mekhami@2605:a601:aaf2:ef00:1821:5187:fb89:c9c8) (Ping timeout: 250 seconds)
[04:09:48] *** Joins: humbertowoody (~humbertow@187.202.198.64)
[04:10:03] *** Joins: bnchs (~bnchs@105.154.83.57)
[04:10:55] *** Joins: jonthesnow (~xizhendu@36.112.179.225)
[04:12:23] *** Quits: launchd (~launchd@bitbot/launchd) (Quit: K-Lined)
[04:12:23] *** Quits: bnchs__ (~bnchs@160.177.45.26) (Ping timeout: 256 seconds)
[04:12:31] *** Joins: sw (~sw@user/sw)
[04:12:40] *** Joins: launchd (launchd@bitbot/launchd)
[04:12:56] *** Joins: imp (~imp@177-131-189-195.static.sumicity.net.br)
[04:14:17] *** Quits: vicfred (~vicfred@user/vicfred) (Quit: Leaving)
[04:14:19] *** Quits: akaWolf (~akaWolf@akawolf.org) (Ping timeout: 256 seconds)
[04:14:33] *** Quits: humbertowoody (~humbertow@187.202.198.64) (Ping timeout: 256 seconds)
[04:16:13] *** Quits: Celeo (~Celeo@user/celeo) (Quit: Leaving)
[04:17:45] *** Quits: herjazz (~herjazz@p10513117-ipngn24101marunouchi.tokyo.ocn.ne.jp) (Quit: leaving)
[04:17:55] *** Quits: imp (~imp@177-131-189-195.static.sumicity.net.br) (Quit: imp)
[04:17:57] *** Joins: c4017w_ (~c4017@209.52.68.8)
[04:17:59] *** Joins: LiftLeft (~LiftLeft@gateway/vpn/pia/liftleft)
[04:18:41] *** Joins: LimeOn (~user@user/limeon)
[04:19:01] *** Quits: djhankb (~djhankb@208.113.164.68) (Remote host closed the connection)
[04:19:11] *** Quits: abf (~abf@user/abf) (Quit: Leaving)
[04:19:20] *** Quits: cjb (~cjb@user/cjb) (Quit: rcirc on GNU Emacs 29.0.50)
[04:19:20] *** Joins: imp (~imp@177-131-189-195.static.sumicity.net.br)
[04:19:38] *** Joins: walterwhip (~www@user/walterwhip)
[04:19:45] *** Joins: djhankb (~djhankb@208.113.164.68)
[04:21:04] *** Quits: bnchs (~bnchs@105.154.83.57) (Remote host closed the connection)
[04:21:26] *** Joins: cjb (~cjb@user/cjb)
[04:21:29] *** Quits: c4017w (~c4017@209.52.68.8) (Ping timeout: 250 seconds)
[04:21:34] *** Joins: bnchs (~bnchs@105.154.83.57)
[04:21:40] *** Quits: ivii (~ivan@user/ivii) (Quit: Konversation terminated!)
[04:22:10] *** Quits: bnchs (~bnchs@105.154.83.57) (Remote host closed the connection)
[04:22:13] *** Quits: odoood (~odoood@2601:c8:c000:c4e0:f799:b570:9765:917c) (Ping timeout: 240 seconds)
[04:22:45] *** Joins: crashrep (~crashrep@user/crashrep)
[04:23:48] *** Quits: mekhami (~ldv@2605:a601:aaf2:ef00:383f:a991:12f0:4f28) (Quit: WeeChat 2.8)
[04:24:38] *** Quits: oriba (~oriba@dynamic-089-012-096-133.89.12.pool.telefonica.de) (Quit: https://quassel-irc.org - Chat comfortably. Anywhere.)
[04:26:20] *** Joins: humbertowoody (~humbertow@187.202.198.64)
[04:26:46] *** Joins: mat001 (~mat001@c-69-181-155-247.hsd1.ca.comcast.net)
[04:27:43] *** Quits: perrierjouet (~perrier-j@modemcable012.251-130-66.mc.videotron.ca) (Quit: WeeChat 3.4)
[04:27:48] *** Quits: lidless (~lidless@user/lidless) ()
[04:29:18] *** Quits: rinzewind (~rinzewind@user/rinzewind) (Quit: leaving)
[04:29:49] *** Quits: LimeOn (~user@user/limeon) (Quit: .)
[04:32:13] *** Joins: brookesy66 (~will@203.220.123.174)
[04:35:10] *** Joins: bnchs (~bnchs@105.157.30.234)
[04:36:28] *** Joins: eyepeetee (~aa@024-151-038-076.res.spectrum.com)
[04:36:40] *** Joins: thevar1able (~textual@46.39.45.122)
[04:36:42] *** Joins: hanzo (uid532183@user/hanzo)
[04:39:15] *** Quits: Esexe_ (~aa@024-151-038-076.res.spectrum.com) (Ping timeout: 256 seconds)
[04:39:39] *** Quits: df00z (~df00z@cpe-69-207-141-227.rochester.res.rr.com) (Quit: Client closed)
[04:40:57] *** Quits: m5zs7k (aquares@web10.mydevil.net) (Ping timeout: 256 seconds)
[04:42:02] *** Quits: MrFixIt (~samurai_@c-73-75-104-200.hsd1.il.comcast.net) (Read error: Connection reset by peer)
[04:42:37] *** Quits: zen_coder (~zen_coder@2a02:8109:a280:2d8d:60ef:8113:9157:1102) (Ping timeout: 240 seconds)
[04:42:53] *** Quits: DXR (~lyrical@194.219.251.132) (Ping timeout: 256 seconds)
[04:43:18] *** Quits: falk689 (~falk689-q@gateway/tor-sasl/falk689) (Quit: No Ping reply in 180 seconds.)
[04:43:36] *** Joins: falk689 (~falk689-q@gateway/tor-sasl/falk689)
[04:43:47] *** Quits: thevar1able (~textual@46.39.45.122) (Quit: thevar1able)
[04:44:03] *** Quits: wallsY (~wallsY@c-73-211-135-175.hsd1.il.comcast.net) (Quit: WeeChat 3.0)
[04:44:21] *** Quits: fldme (~fldme@178.49.152.151) (Ping timeout: 256 seconds)
[04:44:30] *** Joins: MrFixIt (~samurai_@c-73-75-104-200.hsd1.il.comcast.net)
[04:45:42] *** Joins: FlipFlop (~FlipFlop@user/fl1pfl0p)
[04:46:15] *** Joins: jeho (~jehoshaph@user/jehoshaphat)
[04:48:11] *** Joins: jmdaemon (~jmdaemon@user/jmdaemon)
[04:48:30] *** Quits: pipapipapibo (~w@2601:601:cf7e:1d80::6f68) (Ping timeout: 260 seconds)
[04:49:26] *** Quits: roxfan (~roxfan@2a02:a03f:a2be:4f00:645d:2a7c:96cb:dc8) (Ping timeout: 260 seconds)
[04:50:37] *** Quits: mar77i (~martti@46-126-48-136.dynamic.hispeed.ch) (Ping timeout: 240 seconds)
[04:51:30] *** Quits: milkt (~debian@gateway/tor-sasl/milkt) (Ping timeout: 276 seconds)
[04:51:33] *** Joins: bnchs__ (~bnchs@105.157.30.234)
[04:51:52] *** Quits: bnchs (~bnchs@105.157.30.234) (Read error: Connection reset by peer)
[04:51:53] *** Quits: toma (~RubbishPu@node-1w7jr9yhpl489wpp0k6ej5sdw.ipv6.telus.net) (Quit: Leaving)
[04:53:38] *** Joins: milkt (~debian@gateway/tor-sasl/milkt)
[04:56:04] *** Quits: mat001 (~mat001@c-69-181-155-247.hsd1.ca.comcast.net) (Read error: Connection reset by peer)
[04:56:15] *** Quits: yte3 (~0@151.31.110.176) (Ping timeout: 256 seconds)
[04:56:29] *** Joins: Esexe_ (~aa@024-151-038-076.res.spectrum.com)
[04:56:42] *** Joins: mat001_ (~mat001@c-69-181-155-247.hsd1.ca.comcast.net)
[04:56:47] *** Quits: elkalamar_ (elkalamar@gateway/vpn/airvpn/elkalamar) (Quit: Leaving)
[04:57:24] *** Quits: Viewday11 (~Viewday@user/viewday) (Read error: Connection reset by peer)
[04:57:25] *** Quits: jmdaemon (~jmdaemon@user/jmdaemon) (Ping timeout: 240 seconds)
[04:57:31] *** Quits: Seirdy (~Seirdy@sourcehut/user/seirdy) (Quit: exiting 3.4)
[04:58:10] *** Joins: ovelny (~ovelny@user/ovelny)
[04:58:19] *** Quits: eyepeetee (~aa@024-151-038-076.res.spectrum.com) (Ping timeout: 250 seconds)
[04:58:21] *** Joins: Seirdy (~Seirdy@sourcehut/user/seirdy)
[04:58:24] *** Quits: ovelny (~ovelny@user/ovelny) (Client Quit)
[04:58:52] *** Quits: diogenese (~diogenese@diogenese.velotech.net) (Quit: Has anybody seen the bridge?)
[04:58:55] *** Joins: df00z (~df00z@cpe-69-207-141-227.rochester.res.rr.com)
[04:59:10] *** Joins: diogenese (~diogenese@diogenese.velotech.net)
[04:59:22] *** Joins: Viewday11 (~Viewday@user/viewday)
[04:59:45] *** Quits: SOMBRIO (~SOMBRIO@177.137.113.66) (Quit: Client closed)
[05:00:22] *** Joins: mickey80 (~user@user/mickey)
[05:00:47] *** Quits: bnchs__ (~bnchs@105.157.30.234) (Ping timeout: 256 seconds)
[05:01:40] *** Quits: Seirdy (~Seirdy@sourcehut/user/seirdy) (Excess Flood)
[05:02:11] *** Joins: Seirdy (~Seirdy@sourcehut/user/seirdy)
[05:03:12] *** Quits: mickey8 (~user@user/mickey) (Ping timeout: 276 seconds)
[05:03:12] *** mickey80 is now known as mickey8
[05:04:12] *** Quits: zeden (~zeden@user/zeden) (Quit: WeeChat 3.4)
[05:04:52] *** Joins: jmdaemon (~jmdaemon@user/jmdaemon)
[05:04:59] *** Joins: zeden (~zeden@user/zeden)
[05:05:14] *** Joins: merijn (~merijn@c-001-001-018.client.esciencecenter.eduvpn.nl)
[05:07:01] *** Quits: Seirdy (~Seirdy@sourcehut/user/seirdy) (Ping timeout: 256 seconds)
[05:08:31] *** Joins: mIk3_08 (~Thunderbi@user/mik3-08/x-2852566)
[05:08:56] *** Joins: wallsY (~weechat@c-73-211-135-175.hsd1.il.comcast.net)
[05:09:30] *** Quits: wallsY (~weechat@c-73-211-135-175.hsd1.il.comcast.net) (Client Quit)
[05:09:53] *** Joins: wallsY (~weechat@c-73-211-135-175.hsd1.il.comcast.net)
[05:09:59] *** Joins: leduyquang753 (~leduyquan@user/leduyquang753)
[05:11:33] *** Quits: thiras (~thiras@user/thiras) (Ping timeout: 256 seconds)
[05:12:14] *** Quits: cjb (~cjb@user/cjb) (Quit: rcirc on GNU Emacs 29.0.50)
[05:14:41] *** Joins: kevr` (~kevr@user/kevr)
[05:14:58] *** Quits: jmdaemon (~jmdaemon@user/jmdaemon) (Quit: ZNC 1.8.2 - https://znc.in)
[05:16:12] *** Quits: kevr (~kevr@user/kevr) (Ping timeout: 276 seconds)
[05:16:45] *** Quits: junebug (~junebug@2600:1700:3db0:2540:cb34:6962:9bf8:f69f) (Quit: Leaving)
[05:16:55] *** Parts: knstn (~knstn@ppp-94-66-57-191.home.otenet.gr) ()
[05:17:26] *** Quits: ovnicraft (~ovnicraft@186.178.108.140) (Quit: My MacBook has gone to sleep. ZZZzzz…)
[05:18:28] *** Joins: c4017w__ (~c4017@209.52.68.8)
[05:19:01] *** Quits: kaivai_ (~kaivai@user/kaivai) (Quit: ZNC - https://znc.in)
[05:19:49] *** Quits: merijn (~merijn@c-001-001-018.client.esciencecenter.eduvpn.nl) (Ping timeout: 256 seconds)
[05:19:59] *** Quits: wallsY (~weechat@c-73-211-135-175.hsd1.il.comcast.net) (Quit: WeeChat 2.8)
[05:21:02] *** Joins: zumba_addict (~zumba_add@c-71-194-58-34.hsd1.il.comcast.net)
[05:21:08] *** Joins: jmdaemon (~jmdaemon@user/jmdaemon)
[05:21:39] *** Joins: wallsY (~weechat@c-73-211-135-175.hsd1.il.comcast.net)
[05:21:42] *** Joins: kaivai (~kaivai@user/kaivai)
[05:22:06] *** Quits: c4017w_ (~c4017@209.52.68.8) (Ping timeout: 260 seconds)
[05:23:34] *** Quits: OPK (~OPK@user/opk) (Read error: Connection reset by peer)
[05:23:47] *** Quits: LiftLeft (~LiftLeft@gateway/vpn/pia/liftleft) (Ping timeout: 256 seconds)
[05:25:52] *** Quits: wallsY (~weechat@c-73-211-135-175.hsd1.il.comcast.net) (Client Quit)
[05:27:00] *** kevr` is now known as kevr
[05:27:06] *** Joins: wallsY (~weechat@c-73-211-135-175.hsd1.il.comcast.net)
[05:27:09] *** Quits: jdavfsxd (~rvgzuuqp@gateway/tor-sasl/rvgzuuqp) (Quit: jdavfsxd)
[05:28:18] *** Joins: steveoh (~sj@c-24-11-26-209.hsd1.ut.comcast.net)
[05:28:33] *** Quits: luva0 (~luva@37.120.197.45) (Ping timeout: 256 seconds)
[05:28:37] <steveoh> hello friends, how do i figure out why a package is being installed in a module?
[05:28:48] <steveoh> npm has a npm list [dep] command
[05:28:52] <steveoh> is there something similar with pip
[05:29:09] <steveoh> or can i visualize the dep tree somehow
[05:29:37] *** Joins: cjb (~cjb@user/cjb)
[05:29:42] <nedbat> steveoh: https://pypi.org/project/deptree/
[05:29:48] *** Joins: luva (~luva@45.141.152.46)
[05:30:14] *** Joins: stewie925 (~stewie925@2600:1702:44f0:35c0:bdd8:27ef:418f:c751)
[05:30:17] *** Quits: gambl0re (~gambl0re@2607:fea8:a59f:c360::82dc) (Ping timeout: 240 seconds)
[05:30:21] *** Quits: vlm (~vlm@user/vlm) (Quit: "")
[05:31:15] <nedbat> steveoh: or maybe https://pypi.org/project/pip-tree/
[05:31:50] <steveoh> i tried pydeps but that was not good
[05:31:58] *** Quits: bomb-on (~bomb-on@194.144.47.113) (Quit: aллилѹіа!)
[05:32:33] *** Joins: xheimlich (~xheimlich@179.218.1.150)
[05:32:41] *** Quits: pax_os__ (uid535114@ilkley.irccloud.com) (Read error: Connection reset by peer)
[05:32:46] *** Quits: df00z (~df00z@cpe-69-207-141-227.rochester.res.rr.com) (Quit: Client closed)
[05:33:06] *** Joins: pax_os__ (sid535114@id-535114.ilkley.irccloud.com)
[05:33:25] *** Joins: vlm (~vlm@user/vlm)
[05:33:43] <steveoh> nedbat: so if the dep that pip install is installing isn't in the deptree then wtf?
[05:34:20] <nedbat> steveoh: hmm, not sure.  can you pastebin the details?
[05:34:49] <steveoh> nedbat: i can show you a github action output
[05:35:01] *** Quits: humbertowoody (~humbertow@187.202.198.64) (Ping timeout: 256 seconds)
[05:35:12] <steveoh> nedbat: https://github.com/agrc/porter/runs/5102925785?check_suite_focus=true
[05:35:26] <steveoh> in the install conductor step, it installs docopt
[05:35:38] <steveoh> but if you look at the setup.py there is no requirement for it
[05:35:56] *** Joins: orangeboxcutter (~orange@user/orangeboxcutter)
[05:35:58] <steveoh> i wonder if there is some caching going on?
[05:36:27] <nedbat> steveoh: one of your dependencies must have requested it.
[05:36:42] <steveoh> nedbat: the deptree doesn't show it
[05:37:43] *** Quits: naranja (~orange@user/orangeboxcutter) (Remote host closed the connection)
[05:37:50] <nedbat> steveoh: your setup.py mentions docopt: https://github.com/agrc/porter/blob/main/setup.py#L37
[05:38:15] <steveoh> nedbat: that action was run on the dev branch
[05:38:26] *** Joins: dodobrain (~dodobrain@user/dodobrain)
[05:40:16] *** Joins: cha0s (~jp@modemcable164.40-23-96.mc.videotron.ca)
[05:41:34] *** Joins: LiftLeft (~LiftLeft@gateway/vpn/pia/liftleft)
[05:41:57] *** Joins: eyepeetee (~aa@024-151-038-076.res.spectrum.com)
[05:42:02] *** Joins: esv (~esv@74.124.178.154)
[05:43:00] *** Joins: frost (~frost@user/frost)
[05:43:20] *** Joins: DXR (~lyrical@193.92.213.196.dsl.dyn.forthnet.gr)
[05:43:36] <nedbat> steveoh: it's from pytest-watch: https://github.com/joeyespo/pytest-watch/blob/master/requirements.txt#L1
[05:43:51] *** Quits: Esexe_ (~aa@024-151-038-076.res.spectrum.com) (Ping timeout: 256 seconds)
[05:43:55] <steveoh> nedbat: how did you figure that out
[05:44:05] *** Quits: RabidToaster (~Thunderbi@bras-base-otwaon234vw-grc-12-50-100-212-202.dsl.bell.ca) (Ping timeout: 256 seconds)
[05:44:12] <nedbat> steveoh: i installed your code, then used pip-tree
[05:44:34] <steveoh> nedbat: what pip-tree command did you run
[05:44:52] <nedbat> steveoh: pip-tree -p <site-packages-dir>
[05:44:57] *** Joins: califax- (~califax@user/califx)
[05:45:08] <jazzy> so if dicts preserve order at this point, is OrderedDict obsolete now?
[05:45:27] <steveoh> nedbat: shoot i installed piptree
[05:45:48] <nedbat> jazzy: OrderedDict has more methods than dict, and compares differently than dicts do
[05:45:58] <jazzy> I see
[05:46:07] *** Quits: LiftLeft (~LiftLeft@gateway/vpn/pia/liftleft) (Ping timeout: 256 seconds)
[05:46:42] <steveoh> nedbat: site-packages-dir meaning deep into your py env?
[05:46:58] <nedbat> steveoh: yes.
[05:47:24] *** Joins: humbertowoody (~humbertow@187.202.198.64)
[05:47:42] *** Joins: brabrax_ (~brabrax@user/brabrax)
[05:48:00] <steveoh> nedbat: cool, i see how it works
[05:48:06] <steveoh> not as nice as npm but close
[05:48:22] <LordOfLive> I don’t understand npm
[05:48:49] *** Quits: brabrax (~brabrax@user/brabrax) (Ping timeout: 250 seconds)
[05:48:49] *** brabrax_ is now known as brabrax
[05:49:02] <steveoh> do you understand pip?
[05:49:21] *** Quits: califax (~califax@user/califx) (Ping timeout: 276 seconds)
[05:49:21] *** califax- is now known as califax
[05:49:47] *** Quits: pretty_dumm_guy (trottel@gateway/vpn/protonvpn/prettydummguy/x-88029655) (Quit: WeeChat 3.4)
[05:50:36] <LordOfLive> No…
[05:50:47] <LordOfLive> I’m having trouble where to start
[05:51:30] *** Quits: M3troidman (~buttler@196.244.191.100) (Ping timeout: 260 seconds)
[05:51:37] *** Quits: humbertowoody (~humbertow@187.202.198.64) (Ping timeout: 240 seconds)
[05:51:46] *** Joins: M3troidman (~buttler@196.244.191.100)
[05:51:54] *** Joins: xrogaan (~xrogaan@user/xrogaan)
[05:52:22] *** Quits: kaivai (~kaivai@user/kaivai) (Quit: ZNC - https://znc.in)
[05:53:01] <steveoh> that makes sense then that you don't understand package managers
[05:53:34] *** Quits: CaryHartline (~CaryHartl@2603-8080-6a0e-8d88-f089-38a5-e7a7-68a5.res6.spectrum.com) (Quit: My iMac has gone to sleep. ZZZzzz…)
[05:54:54] *** Joins: kaivai (~kaivai@user/kaivai)
[05:55:35] <LordOfLive> Got any pointers
[05:55:42] <LordOfLive> I would really really appreciate it
[05:55:45] *** Joins: lemonsni- (~lemonsnic@86.4.248.115)
[05:55:48] <LordOfLive> I feel like I’m right there
[05:55:51] *** Quits: nunggu (~q@user/nunggu) (Ping timeout: 276 seconds)
[05:56:13] *** Quits: chilversc (~chilversc@user/chilversc) (Ping timeout: 240 seconds)
[05:56:19] *** Quits: lemonsnicks (~lemonsnic@cpc159519-perr18-2-0-cust114.19-1.cable.virginm.net) (Ping timeout: 256 seconds)
[05:56:23] *** Quits: Noisytoot (~noisytoot@sourcehut/user/noisytoot) (Ping timeout: 250 seconds)
[05:56:53] *** Quits: jmdaemon (~jmdaemon@user/jmdaemon) (Ping timeout: 256 seconds)
[05:57:06] *** Joins: nunggu (~q@user/nunggu)
[05:57:16] <steveoh> it'd be easier if you asked a question
[05:57:21] *** Quits: skapata (~Skapata@user/skapata) (Remote host closed the connection)
[05:57:38] <LordOfLive> What is a package manager in layman’s terms
[05:58:18] *** Joins: chilversc (~chilversc@user/chilversc)
[05:59:12] <steveoh> something that downloads other peoples python code to your computer
[05:59:37] *** Quits: wallsY (~weechat@c-73-211-135-175.hsd1.il.comcast.net) (Remote host closed the connection)
[06:00:07] *** Quits: stewie925 (~stewie925@2600:1702:44f0:35c0:bdd8:27ef:418f:c751) (Quit: Client closed)
[06:00:22] *** Joins: Noisytoot (~noisytoot@sourcehut/user/noisytoot)
[06:00:37] *** Joins: Syzygy__ (~Syzygy@178-190-76-245.adsl.highway.telekom.at)
[06:00:40] *** Joins: wallsY (~weechat@c-73-211-135-175.hsd1.il.comcast.net)
[06:01:01] *** Quits: Syzygy_ (~Syzygy@2001:871:265:1cdc:a9fb:7502:11b1:eda6) (Remote host closed the connection)
[06:01:16] <LordOfLive> What is python code
[06:01:48] <steveoh> are you trolling me?
[06:02:47] *** Quits: eXtr3m0 (~eXtr3m0@user/eXtr3m0) (Ping timeout: 256 seconds)
[06:04:13] *** Joins: humbertowoody (~humbertow@187.202.198.64)
[06:07:17] <LordOfLive> No
[06:07:21] <LordOfLive> I promise
[06:07:41] <LordOfLive> I just need to hear a live explanation
[06:07:41] <nedbat> LordOfLive: what have you studied of programming?
[06:07:43] <LordOfLive> Simply
[06:07:45] <LordOfLive> Yes
[06:07:59] <LordOfLive> C
[06:08:25] <LordOfLive> The terminology is what baffles me
[06:09:03] *** Joins: CaryHartline (~CaryHartl@2603-8080-6a0e-8d88-f089-38a5-e7a7-68a5.res6.spectrum.com)
[06:09:04] *** Quits: jeho (~jehoshaph@user/jehoshaphat) (Read error: Connection reset by peer)
[06:09:12] <SnoopJ> steveoh, pip's verbose output can be extremely helpful, btw. I'm not sure if there's a way to add that to your action, but in general a -v or -vv can really shed light on why pip does what it does.
[06:10:07] *** Joins: Grace (uid33812@id-33812.lymington.irccloud.com)
[06:10:24] <nedbat> LordOfLive: which terminology?
[06:10:37] <LordOfLive> The language
[06:10:41] <LordOfLive> Ok so like
[06:10:52] <LordOfLive> When I look at the man pages and commands
[06:11:03] <LordOfLive> What is the env they talk about
[06:11:36] *** Joins: ovnicraft (~ovnicraft@ftth-179-49-44-28.cue.celerity.ec)
[06:11:53] <nedbat> LordOfLive: can you give  specific example?
[06:12:09] <LordOfLive> What exactly is ash
[06:12:12] <LordOfLive> Ssh
[06:12:18] <LordOfLive> Or terraform
[06:12:24] <LordOfLive> Or a shell
[06:12:32] <LordOfLive> Is my body the shell?
[06:12:40] *** Joins: yashi (~user_name@user/yashi)
[06:12:42] <yashi> hi
[06:13:01] *** Quits: akk (~akk@75-161-95-245.albq.qwest.net) (Quit: +++)
[06:13:08] *** Joins: Seirdy (~Seirdy@sourcehut/user/seirdy)
[06:13:19] *** Quits: PJBoy (~PJBoy@user/pjboy) (Ping timeout: 256 seconds)
[06:13:56] <nedbat> LordOfLive: i'm coming to the conclusion that you are not taking this seriously
[06:13:57] <nedbat> yashi: hi
[06:14:21] <yashi> sup
[06:14:37] <LordOfLive> Why
[06:14:42] <yashi> just curious
[06:14:46] <LordOfLive> Why would you say that
[06:14:49] <nedbat> LordOfLive: "is my body the shell"? What does that even mean?
[06:14:53] <yashi> just to make conversation
[06:14:57] <LordOfLive> What is a shell
[06:14:58] <LordOfLive> No
[06:15:17] *** Parts: __ld (63a6f45fee@2a00:c70:1:178:170:40:189:1) (Error from remote client)
[06:15:25] <SnoopJ> LordOfLive, your questions might be a better fit for another channel, this one is mostly focused on Python
[06:15:36] *** Joins: __ld (63a6f45fee@2a00:c70:1:178:170:40:189:1)
[06:15:37] <LordOfLive> I’m seriously because i relate a shell to be basically your body where as the console or ttyl is your mind
[06:15:42] <LordOfLive> Ok sorry
[06:16:41] <SnoopJ> #linux would certainly be able to help explain what a shell is
[06:17:16] *** Parts: __ld (63a6f45fee@2a00:c70:1:178:170:40:189:1) (Error from remote client)
[06:17:19] *** Joins: fstd (~fstd@xdsl-87-79-44-63.nc.de)
[06:17:21] *** Joins: maxzor (~maxzor@abordeaux-652-1-2-77.w90-16.abo.wanadoo.fr)
[06:17:27] <yashi> say I wanted to generate a random matrix with distribution f(||A||_{HS}^2) dA where f:[0,\infty)->[0,\infty) is some function and dA is the Lebesgue measure, how do I do that in python?
[06:17:37] <nedbat> LordOfLive: read this: https://ubuntu.com/tutorials/command-line-for-beginners
[06:17:56] <TML> yashi: "I wanted to generate a random matrix with distribution f(||A||_{HS}^2) dA where f:[0,\infty)->[0,\infty) is some function and dA is the Lebesgue measure, how do I do that in python?"
[06:17:59] <TML> ;)
[06:18:09] *** Joins: jmdaemon (~jmdaemon@user/jmdaemon)
[06:18:19] <yashi> What?
[06:18:28] <TML> You asked us to say that
[06:18:31] <TML> I'm teasing
[06:18:49] <yashi> ah ok
[06:18:53] <yashi> anyway.. how?
[06:18:54] <TML> Just picking at the nit of beginning a sentence with "say …"
[06:18:57] *** Joins: c4017w_ (~c4017@209.52.68.8)
[06:19:07] *** Joins: __ld (63a6f45fee@2a00:c70:1:178:170:40:189:1)
[06:19:15] *** Quits: nunggu (~q@user/nunggu) (Ping timeout: 276 seconds)
[06:19:25] *** Quits: wac (~wac@user/wac) (Quit: My MacBook has gone to sleep. ZZZzzz…)
[06:19:34] <TML> No idea, I don't even know how to decode your Mathmatica (or whatever that is), nor what a "Lebesgue measure" is
[06:20:27] <SnoopJ> It's LaTeX
[06:20:41] *** Quits: fstd_ (~fstd@xdsl-89-1-56-234.nc.de) (Ping timeout: 268 seconds)
[06:21:14] *** Joins: nunggu (~q@user/nunggu)
[06:21:41] *** Joins: Croves (~Croves@ec2-52-39-74-136.us-west-2.compute.amazonaws.com)
[06:22:37] *** Quits: c4017w__ (~c4017@209.52.68.8) (Ping timeout: 250 seconds)
[06:22:40] <SnoopJ> yashi, I think you need to walk that a little farther away from "algebraic statement" and closer to "thing you do on a computer," the result of that will likely be the same across languages and it will probably make the Python spelling more clear.
[06:23:17] <yashi> hrmm
[06:23:50] <yashi> well I mean it's a basic question in programming I guess: I give you a probability distribution and ask you to write code to draw an element according to that distribution
[06:24:15] <SnoopJ> That's going the wrong direction in abstraction :)
[06:24:25] <SnoopJ> (there are a *lot* more answers to that question!)
[06:24:46] <yashi> ok, but I don't really know programming so iono how to approach it
[06:25:20] *** Joins: Esexe_ (~aa@024-151-038-076.res.spectrum.com)
[06:25:20] <SnoopJ> What you're looking for is a way to sample the space of such matrices, but I don't know enough probability to see how you'd move in that direction.
[06:25:29] <yashi> yes
[06:25:37] <yashi> but it should be relatively easy
[06:25:40] *** byzandula is now known as byzafk
[06:25:44] <yashi> I found the following code I wrote years ago
[06:25:56] <yashi> smp.Matrix(np.random.normal(0,1,(W,W)))
[06:26:02] <SnoopJ> And it probably is. Like all math, the answer is likely perfectly obvious once you already know the answer
[06:26:07] <yashi> this apparently samples an element from the GUE(W) distribution
[06:26:34] * SnoopJ doesn't know what smp.Matrix is
[06:26:47] <yashi> but it's also using the basic property of GUE which is that each entry is an independent real Gaussian number
[06:26:50] <SnoopJ> normal() is the normal distribution as you might imagine
[06:26:59] <yashi> Sorry I mean Ginibre, not GUE
[06:27:15] *** Quits: eyepeetee (~aa@024-151-038-076.res.spectrum.com) (Ping timeout: 256 seconds)
[06:27:33] <parv> symmetric multiprocessing?
[06:27:50] *** Quits: Ha-Jo (~hajo@2a01:c23:8dc4:e700:821f:2ff:feef:dabf) (Ping timeout: 252 seconds)
[06:28:21] <yashi> I guess: import sympy as smp
[06:29:14] <TML> "SymPy is a Python library for symbolic mathematics. It aims to become a full-featured computer algebra system (CAS)"
[06:29:20] <TML> Never heard of it
[06:29:37] <TML> Not a huge surprise, given I don't know what "symbolic mathematics" is
[06:29:41] <SnoopJ> ah, sympy
[06:30:14] *** Quits: esperegu (~quassel@ip-213-124-221-102.ip.prioritytelecom.net) (Read error: Connection reset by peer)
[06:30:23] <SnoopJ> TML, Mathematica is a quintessential example of a computer algebra system, if that helps. SymPy is kind of like the building blocks you'd use to build one.
[06:30:23] <yashi> TML: I think it's basically like mathematica
[06:30:51] <yashi> I've used it to calculate some spectral properties of huge matrices
[06:31:22] <TML> I'm aware Mathematica exists, I never took enough maths to even understand what one might do with it
[06:31:28] <aphysically> yashi: the 3 basic methods for numerical probability sampling are inverse transform sampling, rejection, and mcmc
[06:31:44] <aphysically> or a closed form, I guess
[06:32:15] <aphysically> it depends on your distribution what you want to do
[06:32:25] <SnoopJ> TML, it's just convenient to let a computer do symbolic manipulations a lot of the time. Expressions that fill several boards lose their charm rapidly, it's too easy to make mistakes.
[06:32:53] <SnoopJ> And a good CAS lets you do things like transition directly from symbolic manipulation to numerical evaluation, etc.
[06:33:14] <TML> SnoopJ: My point was more "I don't grasp the quality or degree of question you'd need to be asking to understand why someone would use it"
[06:33:33] <TML> the highest math I ever took was "Solve for X"
[06:34:04] <SnoopJ> TML, for the same reason that solving those was tedious and it'd be nice if the computer just showed you all the steps ;)
[06:34:25] <SnoopJ> (or not!)
[06:34:36] <yashi> aphysically: It's a function of the Hilbert-Schmidt norm of the matrix
[06:36:31] *** Quits: nyah (~nyah@05453449.skybroadband.com) (Quit: leaving)
[06:37:10] *** Joins: lawrencevanderpo (~mekhami@2603-8080-1201-1400-4975-6f05-a79a-d6ef.res6.spectrum.com)
[06:39:14] *** Quits: millido (~millido@84.210.150.128) (Quit: ZNC 1.8.2 - https://znc.in)
[06:39:16] *** Joins: jeho (~jehoshaph@user/jehoshaphat)
[06:39:42] *** Joins: tWqaq (~tWqaq@240e:389:5d1c:ff00:7aeb:a1de:ad16:4ce)
[06:39:49] <NeilRG> do you need to inherit from Generic[T] if you inherit from Sequence[T]?
[06:40:03] *** Quits: jero98772 (~jero98772@2800:484:1d80:d8ce:3490:26c5:1782:da8c) (Remote host closed the connection)
[06:41:59] *** Quits: lawrencevanderpo (~mekhami@2603-8080-1201-1400-4975-6f05-a79a-d6ef.res6.spectrum.com) (Ping timeout: 256 seconds)
[06:42:34] *** Joins: dengtianhua (~dengtianh@167.88.62.34)
[06:43:53] <Croves> Anyone with experience using Google Data Studio? Is it possible to get the selected dates from a date range control inside a calculated field? In fact, I have 3 columns: wage, hire date, and dismissal date, and I need to calculate the sum of wages in a certain period - but before that, I need to identify if the employee was, in fact, working on
[06:43:54] <Croves> that date range. I'm trying to do something like: if employee hired date is within range, then true.
[06:44:17] *** Quits: zumba_addict (~zumba_add@c-71-194-58-34.hsd1.il.comcast.net) (Quit: Client closed)
[06:45:41] *** Quits: LiaoTao (~LiaoTao@gateway/tor-sasl/liaotao) (Remote host closed the connection)
[06:45:48] *** Quits: jeho (~jehoshaph@user/jehoshaphat) (Remote host closed the connection)
[06:45:56] *** Joins: roxfan (~roxfan@2a02:a03f:a2be:4f00:645d:2a7c:96cb:dc8)
[06:45:58] *** Joins: LiaoTao (~LiaoTao@gateway/tor-sasl/liaotao)
[06:51:50] *** Joins: jeho (~jehoshaph@user/jehoshaphat)
[06:52:26] <aphysically> NeilRG: no
[06:52:30] <aphysically> it's implied
[06:52:37] *** Quits: ovnicraft (~ovnicraft@ftth-179-49-44-28.cue.celerity.ec) (Ping timeout: 240 seconds)
[06:52:58] *** Quits: fannagoganna (uid110488@id-110488.tinside.irccloud.com) (Quit: Connection closed for inactivity)
[06:53:06] *** Quits: foul_owl (~kerry@192.145.116.254) (Ping timeout: 260 seconds)
[06:53:07] <NeilRG> aphysically, thanks!
[06:53:23] *** Quits: emerent (~quassel@p200300cd5704433fba27ebfffed28a59.dip0.t-ipconnect.de) (Ping timeout: 250 seconds)
[06:53:51] *** Joins: millido (~millido@84.210.150.128)
[06:54:37] *** Joins: ovnicraft (~ovnicraft@ftth-179-49-44-28.cue.celerity.ec)
[06:55:18] *** Joins: emerent (~quassel@p200300cd570443a1ba27ebfffed28a59.dip0.t-ipconnect.de)
[06:55:45] *** Joins: adeliktas3 (~adeliktas@i59F5F474.versanet.de)
[06:55:52] *** Quits: kaivai (~kaivai@user/kaivai) (Quit: ZNC - https://znc.in)
[06:56:07] *** Quits: impermanence (~impermane@c-75-73-193-204.hsd1.mn.comcast.net) (Quit: Connection closed)
[06:56:57] *** Quits: adeliktas (~adeliktas@i59F5F08B.versanet.de) (Ping timeout: 240 seconds)
[06:56:57] *** adeliktas3 is now known as adeliktas
[06:57:00] *** Joins: ttree (~ttree0@c-73-97-116-42.hsd1.wa.comcast.net)
[06:58:28] *** Joins: kaivai (~kaivai@user/kaivai)
[07:01:29] *** Quits: lsrtl__ (~lsrtl@user/lsrtl) (Ping timeout: 256 seconds)
[07:03:22] *** Quits: AutomatedTester (uid395371@selenium/developer/AutomatedTester) (Quit: Connection closed for inactivity)
[07:04:07] *** Quits: crashrep (~crashrep@user/crashrep) (Quit: WeeChat 3.4)
[07:04:21] *** Joins: fikran (~fikran@user/fikran)
[07:05:54] *** Quits: p-i-_ (~Ohmu@183.89.35.200) (Read error: Connection reset by peer)
[07:06:34] *** Joins: p-i- (~Ohmu@mx-ll-183.89.35-200.dynamic.3bb.co.th)
[07:07:06] *** Joins: Emet-Selch (~haise01@user/haise01)
[07:08:31] *** Quits: humbertowoody (~humbertow@187.202.198.64) (Ping timeout: 256 seconds)
[07:09:02] *** Joins: m5zs7k (aquares@web10.mydevil.net)
[07:09:25] *** Quits: dengtianhua (~dengtianh@167.88.62.34) (Remote host closed the connection)
[07:09:45] *** Quits: frost (~frost@user/frost) (Ping timeout: 256 seconds)
[07:09:57] *** Quits: Azem (~haise01@user/haise01) (Ping timeout: 240 seconds)
[07:10:08] *** Joins: foul_owl (~kerry@94.140.8.224)
[07:14:20] *** Quits: milkt (~debian@gateway/tor-sasl/milkt) (Remote host closed the connection)
[07:14:21] *** Quits: penguino (~mrpenguin@user/mrpenguin) (Remote host closed the connection)
[07:14:31] *** Joins: milkt (~debian@gateway/tor-sasl/milkt)
[07:14:32] *** Joins: gambl0re (~gambl0re@2607:fea8:a59f:c360::82dc)
[07:14:44] *** Parts: steveoh (~sj@c-24-11-26-209.hsd1.ut.comcast.net) ()
[07:14:47] *** Quits: FinnElija (~finn_elij@user/finn-elija/x-0085643) (Killed (NickServ (Forcing logout FinnElija -> finn_elija)))
[07:14:47] *** Joins: finn_elija (~finn_elij@user/finn-elija/x-0085643)
[07:14:47] *** finn_elija is now known as FinnElija
[07:16:09] *** Quits: kaivai (~kaivai@user/kaivai) (Quit: ZNC - https://znc.in)
[07:16:56] *** Quits: dodobrain (~dodobrain@user/dodobrain) (Remote host closed the connection)
[07:17:32] *** Joins: dodobrain (~dodobrain@user/dodobrain)
[07:18:32] *** Quits: cha0s (~jp@modemcable164.40-23-96.mc.videotron.ca) (Ping timeout: 250 seconds)
[07:18:42] *** Joins: kaivai (~kaivai@user/kaivai)
[07:19:28] *** Joins: c4017w__ (~c4017@209.52.68.8)
[07:20:38] *** Quits: xkuru (~xkuru@user/xkuru) (Read error: Connection reset by peer)
[07:20:38] *** Joins: humbertowoody (~humbertow@187.202.198.64)
[07:22:58] *** Quits: c4017w_ (~c4017@209.52.68.8) (Ping timeout: 260 seconds)
[07:24:47] *** Quits: revolve (~u0_a227@cpc100838-bagu15-2-0-cust672.1-3.cable.virginm.net) (Read error: Connection reset by peer)
[07:25:29] *** Joins: Kat_2000 (~Kat_2000@2600:1700:18a2:490:5a9:37a4:938e:97c6)
[07:25:31] *** Quits: humbertowoody (~humbertow@187.202.198.64) (Ping timeout: 256 seconds)
[07:26:17] *** Quits: ovnicraft (~ovnicraft@ftth-179-49-44-28.cue.celerity.ec) (Ping timeout: 240 seconds)
[07:26:34] *** Parts: __ld (63a6f45fee@2a00:c70:1:178:170:40:189:1) (Error from remote client)
[07:27:10] <Kat_2000> I have a .json file that has more than 300 coordinates embedded into one list [list of 300 coordinates[0,1]], how could I split this out?
[07:29:29] *** Quits: MercilessDeth (~brad@136.49.59.177) (Quit: Konversation terminated!)
[07:29:54] *** Joins: ice9 (~ice9@user/ice9)
[07:29:59] *** Joins: ice99 (~ice9@user/ice9)
[07:30:10] *** Joins: ovnicraft (~ovnicraft@ftth-179-49-44-28.cue.celerity.ec)
[07:30:21] *** Quits: GreenLlama (~quassel@80-219-124-12.dclient.hispeed.ch) (Quit: http://quassel-irc.org - Chat comfortably. Anywhere.)
[07:30:23] *** Quits: [itchyjunk] (~itchyjunk@user/itchyjunk/x-7353470) (Ping timeout: 256 seconds)
[07:31:26] *** Quits: Sargento (uid523534@wikipedia/Sargento-de-Hierro) (Quit: Connection closed for inactivity)
[07:31:43] *** Joins: dtg01100 (~dtg01100@199.21.141.37)
[07:31:44] *** Quits: zeden (~zeden@user/zeden) (Quit: WeeChat 3.4)
[07:32:08] *** Quits: Lando-HoloNet (~Lando-Spa@user/lando-spacepimp) (Quit: They told me they fixed it. I trusted them to fix it. It's not my fault!)
[07:32:37] *** Joins: GreenLlama (~quassel@80-219-124-12.dclient.hispeed.ch)
[07:34:08] *** Joins: [itchyjunk] (~itchyjunk@user/itchyjunk/x-7353470)
[07:34:20] *** Quits: cjb (~cjb@user/cjb) (Quit: rcirc on GNU Emacs 29.0.50)
[07:36:01] *** Quits: supakeen (~user@python/site-packages/supakeen) (Quit: WeeChat 3.4)
[07:36:31] *** Joins: supakeen (~user@python/site-packages/supakeen)
[07:37:25] *** Joins: humbertowoody (~humbertow@187.202.198.64)
[07:37:42] *** Joins: psystemupdate (~AbraCadav@162-236-239-168.lightspeed.mssnks.sbcglobal.net)
[07:38:02] *** Joins: bytehackr (~Sandipan@115.187.50.151)
[07:39:37] *** Joins: eyepeetee (~aa@024-151-038-076.res.spectrum.com)
[07:41:00] *** Quits: spithash (~spithash@user/spithash) (Remote host closed the connection)
[07:41:19] *** Joins: spithash (~spithash@user/spithash)
[07:41:58] *** Quits: ice9 (~ice9@user/ice9) (Quit: Leaving)
[07:42:17] *** Quits: Esexe_ (~aa@024-151-038-076.res.spectrum.com) (Ping timeout: 256 seconds)
[07:43:38] *** Joins: msek_ (~Username@pd9fb25a1.dip0.t-ipconnect.de)
[07:43:41] *** Joins: frost (~frost@user/frost)
[07:43:52] *** Quits: jeho (~jehoshaph@user/jehoshaphat) (Quit: Leaving)
[07:45:58] *** Quits: unyu (~pyon@user/pyon) (Quit: WeeChat 3.4)
[07:47:44] *** Joins: unyu (~pyon@user/pyon)
[07:47:56] *** Joins: mcpackey (~pm0001@p5dc1ca81.dip0.t-ipconnect.de)
[07:49:02] *** Joins: jarthur_ (~jarthur@2603-8080-1540-002d-c957-9c20-17fd-9646.res6.spectrum.com)
[07:50:05] *** Joins: vanessa (~vanessa@103.160.128.7)
[07:51:27] *** Quits: jarthur (~jarthur@2603-8080-1540-002d-60ea-51c9-1b23-ab22.res6.spectrum.com) (Ping timeout: 250 seconds)
[07:51:34] *** Joins: revolve (~u0_a227@cpc100838-bagu15-2-0-cust672.1-3.cable.virginm.net)
[07:52:48] *** Quits: mefistofeles (~mefistofe@user/mefistofeles) (Quit: Hay te huacho!)
[07:53:11] *** Quits: msek_ (~Username@pd9fb25a1.dip0.t-ipconnect.de) (Ping timeout: 250 seconds)
[07:53:55] *** Joins: fdan (~fdan@2001:1900:2100:2807:640a::ffb)
[07:56:16] *** Joins: msek_ (~Username@pd9fb25a1.dip0.t-ipconnect.de)
[07:56:47] *** Quits: AlanMD (~AlanMD@5-12-8-203.residential.rdsnet.ro) (Remote host closed the connection)
[07:57:17] *** Quits: sreve (~quassel@p549d714e.dip0.t-ipconnect.de) (Ping timeout: 250 seconds)
[07:57:24] *** Joins: AlanMD (~AlanMD@5-12-8-203.residential.rdsnet.ro)
[07:57:46] *** Joins: sreve (~quassel@p4ff44ec8.dip0.t-ipconnect.de)
[07:58:21] *** Joins: nomic (~nomic@185.198.243.198)
[08:02:47] *** Joins: pipapipapibo (~w@c-24-17-130-228.hsd1.wa.comcast.net)
[08:03:23] *** Quits: vanessa (~vanessa@103.160.128.7) (Quit: WeeChat 3.4)
[08:04:19] *** Quits: Kat_2000 (~Kat_2000@2600:1700:18a2:490:5a9:37a4:938e:97c6) (Quit: Client closed)
[08:07:09] *** Quits: GNUmoon (~GNUmoon@gateway/tor-sasl/gnumoon) (Ping timeout: 276 seconds)
[08:10:33] *** Quits: _0az3 (~az0@user/az0) (Quit: afk)
[08:12:05] *** Joins: _0az3 (~az0@user/az0)
[08:12:07] *** Quits: frost (~frost@user/frost) (Quit: Connection closed)
[08:14:34] *** Joins: Celeo (~Celeo@user/celeo)
[08:15:40] *** Quits: [itchyjunk] (~itchyjunk@user/itchyjunk/x-7353470) (Remote host closed the connection)
[08:17:06] *** Joins: msek__ (~Username@pd9fb2073.dip0.t-ipconnect.de)
[08:19:57] *** Joins: c4017w_ (~c4017@209.52.68.8)
[08:20:15] *** Quits: msek_ (~Username@pd9fb25a1.dip0.t-ipconnect.de) (Ping timeout: 256 seconds)
[08:20:18] *** msek__ is now known as msek_
[08:22:48] *** Joins: trace987 (~trace@ip5b42976d.dynamic.kabel-deutschland.de)
[08:23:39] *** Quits: c4017w__ (~c4017@209.52.68.8) (Ping timeout: 256 seconds)
[08:25:02] *** Quits: chenqisu1 (~chenqisu1@183.217.200.249) (Ping timeout: 260 seconds)
[08:26:16] *** Joins: jeho (~jehoshaph@user/jehoshaphat)
[08:26:34] *** Joins: fannagoganna (uid110488@id-110488.tinside.irccloud.com)
[08:26:37] *** Joins: MercilessDeth (~brad@136.49.59.177)
[08:26:43] *** Joins: junebug (~junebug@2600:1700:3db0:2540:20e5:b214:6f9d:aa59)
[08:27:41] *** Joins: ekathva (~ekathva@2001:999:50:cab1:59c2:628d:2b45:2b24)
[08:28:00] *** Quits: junebug (~junebug@2600:1700:3db0:2540:20e5:b214:6f9d:aa59) (Remote host closed the connection)
[08:29:43] *** Quits: slowButPresent (~slowButPr@user/slowbutpresent) (Quit: leaving)
[08:30:54] *** Joins: han-solo (~hanish@user/han-solo)
[08:31:05] *** Quits: unyu (~pyon@user/pyon) (Quit: brb)
[08:31:16] *** Joins: vanessa (~farawayas@103.160.128.7)
[08:31:40] *** Quits: pycurious (~Adium@user/pycurious) (Quit: Leaving.)
[08:33:09] *** Quits: nunggu (~q@user/nunggu) (Ping timeout: 276 seconds)
[08:33:50] *** Joins: dme86 (~dan@user/dan86)
[08:34:47] *** Joins: nunggu (~q@user/nunggu)
[08:35:51] *** Joins: Ha-Jo (~hajo@2a01:c23:8926:f000:821f:2ff:feef:dabf)
[08:36:31] *** Quits: Vornicus (~Vornicus@2603-8000-5d07-7ef0-6cfb-90af-4036-f9c3.res6.spectrum.com) (Read error: Connection reset by peer)
[08:37:29] *** Joins: pycurious (~Adium@user/pycurious)
[08:37:44] *** Joins: humberto1 (~humbertow@187.202.198.64)
[08:38:27] *** Quits: dme86 (~dan@user/dan86) (Ping timeout: 250 seconds)
[08:38:38] *** Quits: pycurious (~Adium@user/pycurious) (Client Quit)
[08:40:52] *** Quits: humbertowoody (~humbertow@187.202.198.64) (Ping timeout: 250 seconds)
[08:42:51] *** Quits: JordiGH (~jordi@user/jordigh) (Ping timeout: 245 seconds)
[08:45:25] *** Quits: NealRame (~a@202-63-69-181.ip4.superloop.com) (Ping timeout: 256 seconds)
[08:45:59] *** Quits: julia (~quassel@user/julia) (Ping timeout: 256 seconds)
[08:47:43] *** Quits: jeho (~jehoshaph@user/jehoshaphat) (Quit: Leaving)
[08:48:56] *** Joins: ElPresidente (~ElPreside@2600:1700:3d10:4870:c12d:9e72:1e7a:5640)
[08:49:01] *** Joins: NealRame (~a@125-253-104-86.ip4.superloop.com)
[08:49:09] *** Quits: causasui (~causasui@c-68-60-125-136.hsd1.mi.comcast.net) (Ping timeout: 256 seconds)
[08:49:11] *** Quits: roxfan (~roxfan@2a02:a03f:a2be:4f00:645d:2a7c:96cb:dc8) (Ping timeout: 252 seconds)
[08:49:18] *** Quits: FluffyMask (~masque@user/fluffymask) (Quit: WeeChat 3.4)
[08:50:09] *** Quits: drbeco (~beco@2804:351c:dd01:b700:1b03:6b85:20d4:ad73) (Quit: Leaving)
[08:51:27] *** Joins: bluedust (~bluedust@103.161.144.34)
[08:54:43] *** Joins: julia (~quassel@user/julia)
[08:55:09] *** Quits: adiKt (uid472628@id-472628.tinside.irccloud.com) (Quit: Connection closed for inactivity)
[08:55:10] *** Quits: humberto1 (~humbertow@187.202.198.64) (Ping timeout: 250 seconds)
[08:55:49] *** Joins: spawnmc (~spawnmc@user/spawnmc)
[08:56:09] *** Quits: optimant (~asavage@user/optimant) (Quit: nyaa~)
[08:56:38] *** Joins: humberto1 (~humbertow@187.202.198.64)
[08:58:15] <spawnmc> Say a have a file containing hostnames like this: https://bpa.st/4EXA ... I want to grab the second field(dot delimiter) but only once. How would I go about it?
[08:58:38] <spawnmc> second field on each line
[08:59:13] *** Quits: spawnmc (~spawnmc@user/spawnmc) (Client Quit)
[08:59:18] <Repiphany> Only once what
[08:59:43] <demsh> line.split('.')[1]?
[08:59:46] *** Joins: spawnmc (~spawnmc@user/spawnmc)
[09:00:00] <parv> str.split( string, 1 )
[09:00:05] <Repiphany> Do you mean you want the output `{'texas', 'cali', 'florida', 'washington', 'nc', 'sc'}`
[09:00:27] <parv> Oh nevermind; misread
[09:01:04] *** Joins: pepper (~pepper@user/pepper)
[09:03:22] *** Quits: Roey (~Roey@user/Roey) (Quit: Client exiting)
[09:05:36] *** Joins: Leftmost (sid232534@id-232534.helmsley.irccloud.com)
[09:06:07] *** Quits: imp (~imp@177-131-189-195.static.sumicity.net.br) (Quit: imp)
[09:06:58] *** Joins: GNUmoon (~GNUmoon@gateway/tor-sasl/gnumoon)
[09:08:54] *** Quits: nunggu (~q@user/nunggu) (Ping timeout: 276 seconds)
[09:09:13] *** Quits: scoobydoo (~scooby@user/scoobydoo) (Ping timeout: 256 seconds)
[09:09:37] *** Quits: Grace (uid33812@id-33812.lymington.irccloud.com) (Quit: Connection closed for inactivity)
[09:10:19] *** Joins: nunggu (~q@user/nunggu)
[09:11:15] <spawnmc> sorry wrong channel
[09:11:49] *** Quits: fikran (~fikran@user/fikran) (Ping timeout: 256 seconds)
[09:13:15] *** Joins: pvergain (~Thunderbi@2a01:e0a:223:690:44d8:1b81:5bb3:bc9)
[09:13:42] *** Joins: fikran (~fikran@user/fikran)
[09:14:09] *** Joins: masoudd (~masoudd@user/masoudd)
[09:14:20] <jinsun> it is easier to do it in python than bash I would say
[09:15:26] *** Quits: psystemupdate (~AbraCadav@162-236-239-168.lightspeed.mssnks.sbcglobal.net) (Quit: leaving)
[09:16:52] *** Quits: dodobrain (~dodobrain@user/dodobrain) (Remote host closed the connection)
[09:17:17] *** Joins: scoobydoo (~scooby@user/scoobydoo)
[09:17:38] *** Joins: dodobrain (~dodobrain@user/dodobrain)
[09:18:12] <spawnmc> probably, but this would be part of a script with a bigger scope and I'm not that good with python yet :(
[09:18:49] *** Joins: minto (~mintograd@47.201.5.61)
[09:19:58] *** Joins: fedenix (~fedenix@gateway/tor-sasl/fedenix)
[09:20:28] *** Joins: c4017w__ (~c4017@209.52.68.8)
[09:21:23] *** Joins: lowfi (~lowfi@user/lowfi)
[09:21:23] *** Quits: nunggu (~q@user/nunggu) (Remote host closed the connection)
[09:21:44] *** Joins: nunggu (~q@user/nunggu)
[09:21:47] *** Quits: mintograde (~mintograd@47.201.5.61) (Ping timeout: 250 seconds)
[09:22:48] *** Joins: dvx (~dvx@5.181.92.64)
[09:23:57] *** Quits: humberto1 (~humbertow@187.202.198.64) (Ping timeout: 256 seconds)
[09:23:57] *** Quits: mon_aaraj (~MonAaraj@user/mon-aaraj/x-4416475) (Ping timeout: 256 seconds)
[09:24:17] *** Quits: c4017w_ (~c4017@209.52.68.8) (Ping timeout: 256 seconds)
[09:27:25] *** Quits: zebrag (~chris@user/zebrag) (Remote host closed the connection)
[09:27:31] *** Joins: mon_aaraj (~MonAaraj@user/mon-aaraj/x-4416475)
[09:27:56] *** Quits: Falcon| (andreas@user/falcon/x-0540249) (Quit: Falcon|)
[09:28:44] *** Quits: dtg01100 (~dtg01100@199.21.141.37) (Read error: Connection reset by peer)
[09:29:22] <ice99> which module is the best for creating ssl/tls server?
[09:29:36] <Leftmost> I'm running a python 2.7 script on a system with requests 2.6.0; obviously that's a pretty dated version and using its bundled certificates, but is it possible to force it to use system certs?
[09:29:43] <ice99> for custom protocol
[09:30:24] *** Joins: dtg01100 (~dtg01100@199.21.141.37)
[09:31:13] *** Joins: Falcon| (andreas@user/falcon/x-0540249)
[09:31:41] <dodo> Leftmost: not sure, i appended the necessary certs to the bundled ones..
[09:32:33] <jinsun> Leftmost: you can set REQUESTS_CA_BUNDLE environment variable to point it to a folder with system certs https://docs.python-requests.org/en/latest/user/advanced/#ssl-cert-verification
[09:32:48] <Leftmost> Cheers, thank you.
[09:36:03] *** Quits: julia (~quassel@user/julia) (Quit: https://quassel-irc.org - Chat comfortably. Anywhere.)
[09:36:35] *** Quits: hams (~hams@user/hams) (Read error: Connection reset by peer)
[09:36:57] *** Joins: hams (~hams@73.232.205.0)
[09:36:57] *** Quits: hams (~hams@73.232.205.0) (Changing host)
[09:36:57] *** Joins: hams (~hams@user/hams)
[09:36:58] *** Joins: julia (~quassel@user/julia)
[09:37:01] *** Joins: daxazz (dax@5.20.161.86)
[09:37:11] *** Joins: manti7 (~manti7@176.10.104.94)
[09:39:15] *** Parts: daxazz (dax@5.20.161.86) ()
[09:39:56] <nomic> i need "insert list at position in list"
[09:40:09] *** Quits: mon_aaraj (~MonAaraj@user/mon-aaraj/x-4416475) (Ping timeout: 256 seconds)
[09:40:18] <nomic> have been doing it maually . is there not an list.insert(alist,pos)
[09:40:57] *** Quits: ttree (~ttree0@c-73-97-116-42.hsd1.wa.comcast.net) (Ping timeout: 240 seconds)
[09:41:03] <Repiphany> Insert does that, yes
[09:41:19] <Repiphany> insert(index, object)
[09:41:45] <nomic> k trying
[09:41:54] *** Quits: whatsupdoc (uid509081@id-509081.hampstead.irccloud.com) (Quit: Connection closed for inactivity)
[09:42:30] <nomic>  self0.o.l.insert(self0.o.y+self0.o.y_displ,open(cmd[1],"r").read().split("\n"))
[09:42:32] <nomic> no worky
[09:42:46] *** Joins: bloodninja (~bloodninj@user/bloodninja)
[09:43:18] <Repiphany> `a = [0]*10; a.insert(5, 1); print(a)`
[09:43:18] <BrenBarn> try breaking that down into simpler pieces
[09:43:35] <nomic> no
[09:43:39] <nomic> u aint seen my system
[09:43:56] <nomic> wth does that mean
[09:44:10] <nomic> waste of time bye
[09:45:09] <Repiphany> Oh, misread
[09:45:29] <Repiphany> `a = [0]*10; a[5:6] = [1,1,1,1,1]; print(a)`
[09:46:12] <Repiphany> Except that overwrites whatever was in position 5
[09:46:57] <Repiphany> a[5:6] += [1,1,1,1,1]
[09:47:39] *** Joins: upsala (~zcb@185.213.155.252)
[09:47:48] <ice99> i'm trying to run socket code in mscode but it break for errors, when i try to rerun it, it say address already in use however netstat doesn't list this port, how can I resume the execution without restarting the IDE?
[09:48:11] <nomic> that inserts a list at position
[09:49:29] *** Quits: Celeo (~Celeo@user/celeo) (Quit: Leaving)
[09:49:29] <demsh> what exactly do you mean by "inserts a list at position"? 1) a = [1,2,3]; b = [4,5]; result = [1,4,5,2,3] or result = [1, [4, 5], 2, 3]?
[09:49:58] *** Joins: pmb (~pmb@89-64-79-51.dynamic.chello.pl)
[09:50:31] *** Parts: nomic (~nomic@185.198.243.198) (Leaving)
[09:50:52] *** Quits: lowfi (~lowfi@user/lowfi) (Quit: Leaving)
[09:53:11] *** Quits: nuclearg1 (~nucleargr@c-73-150-253-137.hsd1.nj.comcast.net) (Ping timeout: 256 seconds)
[09:53:25] *** Quits: mat001_ (~mat001@c-69-181-155-247.hsd1.ca.comcast.net) (Ping timeout: 256 seconds)
[09:53:30] *** Joins: Gustavo6046 (~Gustavo60@user/gustavo6046)
[09:53:31] *** Quits: msek_ (~Username@pd9fb2073.dip0.t-ipconnect.de) (Ping timeout: 256 seconds)
[09:54:21] *** Joins: Guest1778 (~Guest1778@162-239-107-41.lightspeed.rcsntx.sbcglobal.net)
[09:54:45] *** Quits: KombuchaKip (~kip@192.252.230.5) (Quit: Leaving.)
[09:55:41] *** Joins: KombuchaKip (~kip@192.252.230.5)
[09:56:14] *** Quits: djhankb (~djhankb@208.113.164.68) (Remote host closed the connection)
[09:56:55] *** Joins: djhankb (~djhankb@208.113.164.68)
[09:58:12] *** Joins: cosimone (~user@93-47-228-151.ip115.fastwebnet.it)
[09:58:17] *** Quits: fxhp (~fxhp@d-206-53-88-50.ct.cpe.atlanticbb.net) (Ping timeout: 256 seconds)
[09:58:37] *** Quits: Gustavo6046 (~Gustavo60@user/gustavo6046) (Ping timeout: 250 seconds)
[09:59:43] *** Joins: Oddity (~Oddity@user/oddity)
[10:00:30] *** Quits: bitblit_ (~bitblit@gateway/tor-sasl/bitblit) (Remote host closed the connection)
[10:00:41] *** Joins: Guest26 (~Guest26@108-73-19-98.lightspeed.rcsntx.sbcglobal.net)
[10:00:50] *** Joins: bitblit_ (~bitblit@gateway/tor-sasl/bitblit)
[10:01:12] *** Quits: Guest26 (~Guest26@108-73-19-98.lightspeed.rcsntx.sbcglobal.net) (Client Quit)
[10:01:26] *** Joins: Guest26 (~Guest26@108-73-19-98.lightspeed.rcsntx.sbcglobal.net)
[10:01:51] <Repiphany> `a[5:5] = [1,1,1]` works, oops
[10:06:37] *** Quits: Guest26 (~Guest26@108-73-19-98.lightspeed.rcsntx.sbcglobal.net) (Quit: Client closed)
[10:07:12] *** Joins: gitesh (uid423739@id-423739.ilkley.irccloud.com)
[10:08:13] <ice99> when closing a socket socket.close() it takes long time so that I can rerun the app again so it can bind to the same port, any workaround?
[10:10:11] *** Quits: NealRame (~a@125-253-104-86.ip4.superloop.com) (Quit: Konversation terminated!)
[10:12:01] *** Joins: fxhp (~fxhp@d-206-53-88-50.ct.cpe.atlanticbb.net)
[10:13:47] *** Quits: foul_owl (~kerry@94.140.8.224) (Ping timeout: 250 seconds)
[10:14:17] <Guest1778> hey guys, in the anaconda environment terminal, what conda package do I need to use the commands like ls ?
[10:14:59] *** Quits: audiobirb (~audio@user/audio) (Ping timeout: 252 seconds)
[10:17:41] <Jong> Is it incorrect to have a period after the from keyword? from .somemodule.somesubfoldermodule.somefile import x
[10:18:00] <Repiphany> Jong: That's a relative import
[10:18:22] <Jong> oohh thanks for letting me know. Now I have a term I can google and read about
[10:18:24] <dale> ice99: I believe you need to set SO_REUSEADDR on the socket when you open it.
[10:19:37] *** Quits: znf (ibm86@blender.linge-ma.ro) (Excess Flood)
[10:19:51] *** Joins: znf (ibm86@2001:19f0:5001:3600:5400:3ff:fecd:9ee5)
[10:20:23] *** Quits: dtux (~dtux@c-98-207-149-218.hsd1.ca.comcast.net) (Quit: dtux)
[10:20:57] *** Quits: jpic (~jpic@82.142.19.130) (Ping timeout: 256 seconds)
[10:20:57] *** Joins: c4017w_ (~c4017@209.52.68.8)
[10:21:14] *** Quits: gambl0re (~gambl0re@2607:fea8:a59f:c360::82dc) (Ping timeout: 260 seconds)
[10:21:31] <jinsun> Guest1778: are you trying to use linux commands on windows? there are better ways than anaconda for that
[10:21:41] *** Joins: Esexe_ (~aa@024-151-038-076.res.spectrum.com)
[10:22:01] <Guest1778> what do you mean?
[10:22:02] *** Quits: TechSmurf (~tech@user/techsmurf) (Ping timeout: 240 seconds)
[10:22:20] *** Joins: mon_aaraj (~MonAaraj@user/mon-aaraj/x-4416475)
[10:22:27] <ice99> dale, when i add this option i get "Protocol not supported"
[10:22:36] <jinsun> Guest1778: what do you mean by "commands like ls"?
[10:22:47] <dale> ice99: Can you pastebin your code so I can see it?
[10:23:29] <ice99> dale, https://bpa.st/CXWA
[10:23:33] <p-i-> I'm trying to get a hello-world "subpattern definition" to work with regex (not re). https://bpa.st/J4QQ ... what am I missing? (output is blank)
[10:23:45] *** Joins: TechSmurf (~tech@user/techsmurf)
[10:23:52] <Guest1778> jinsun unix commands.
[10:23:53] <Guest1778> I just found my answer here: https://stackoverflow.com/questions/36345136/use-unix-based-commands-with-anaconda-in-windows-operating-system
[10:24:25] *** Quits: c4017w__ (~c4017@209.52.68.8) (Ping timeout: 250 seconds)
[10:24:28] <dale> ice99: I believe you need to set it with setsockopt.
[10:24:41] *** Quits: eyepeetee (~aa@024-151-038-076.res.spectrum.com) (Ping timeout: 256 seconds)
[10:25:14] <jinsun> Guest1778: okay that's what I guess, and I meant that it is better to direcly install msys2 from https://www.msys2.org/, instead of going through anaconda
[10:25:16] <p-i-> Jong: If you need to import files outside your root-dir you can sys.path.append(dir_of_file) then the import will find it.
[10:25:18] <dale> ice99: So after you create the socket, I believe serv.setsockopt(socket.SOL_SOCKET, socket.SO_REUSEADDR, 1) if memory serves.
[10:25:45] <Guest1778> Why is it better?
[10:26:21] <ice99> dale, thanks , this works
[10:26:41] <bookworm> nowdays just use WSL depending on what you want to do
[10:26:57] <bookworm> then you actually have a sane env from windows
[10:27:46] *** Quits: MrFantastik (~f@2607:f598:bbda:1e0:b2bb:53ba:1923:e3c6) (Ping timeout: 260 seconds)
[10:27:49] *** Joins: foul_owl (~kerry@94.140.8.51)
[10:28:21] <Guest1778> I don't really know what those are.
[10:28:22] <han-solo> windows terminal + WSL
[10:28:51] <Guest1778> I only know very basic unix commands so i'm not sure what else I would want
[10:28:53] <han-solo> may need a recent version of windows build, i guess
[10:29:26] <parv> WSL works on Windows 10 at least.
[10:30:21] *** Quits: pvergain (~Thunderbi@2a01:e0a:223:690:44d8:1b81:5bb3:bc9) (Ping timeout: 256 seconds)
[10:30:24] *** Quits: dodobrain (~dodobrain@user/dodobrain) (Ping timeout: 260 seconds)
[10:30:43] *** Joins: pvergain (~Thunderbi@2a01:e0a:223:690:44d8:1b81:5bb3:bc9)
[10:31:08] <Guest1778> I think maybe I don't need it. The documentation for msys2  looks like more than what I want
[10:31:19] <han-solo> ignore my last comment, i'm not sure if anyone is using win < 10, other than deniska
[10:31:40] <parv> If there is no need for WSL (version 1) so that VMs could use CPU supported virtualization, then could enable WSL version 2 (I have not for not want to deal with Hyper-V so that VirtualBox would get hardware support)
[10:33:33] *** Quits: SlaveGeek334269 (~SlaveGeek@gateway/vpn/pia/slavegeek334269) (Remote host closed the connection)
[10:33:49] *** Quits: spawnmc (~spawnmc@user/spawnmc) (Quit: Client closed)
[10:34:44] <ice99> how to extract str from socket data like b'exit\r\n' ? so output is exit only
[10:35:07] <han-solo> `that.decode(encoding_you_expect)`
[10:35:31] <han-solo> plus `.rstrip()` afterwards maybe
[10:35:55] <p-i-> IIRC you can use .decode() and it assumes UTF8
[10:36:15] *** Quits: daniel-k3 (~daniel-k@fsf/emeritus/daniel-k) (Remote host closed the connection)
[10:36:34] *** Joins: daniel-k3 (~daniel-k@fsf/emeritus/daniel-k)
[10:36:49] *** Joins: shibboleth (~shibbolet@user/shibboleth)
[10:36:57] <deniska> han-solo: plenty non-technical people who didn't buy new computers in previous 10 years do :)
[10:37:55] <han-solo> :)
[10:38:00] <deniska> Also, plenty of technical people with no budget allocated to any sort of IT upgrade :(
[10:38:22] *** Joins: ixokani (~swinnenb@user/swinnenb)
[10:40:49] <deniska> Here we have centos 7 though, fresh with python3.6
[10:41:20] *** Quits: saribro (~swinnenb@user/swinnenb) (Ping timeout: 250 seconds)
[10:41:28] <ice99> https://bpa.st/NLDQ line 19 never the if condition to true, any idea?
[10:42:21] <han-solo> deniska: i thought you still work with those old windows machines
[10:42:45] *** Joins: djapo (~archangel@user/djapo)
[10:42:48] *** Joins: rakoon (~rakoon@2001:985:f4c6:1:8731:3641:88ba:5f80)
[10:43:13] <parv> What terms do I supply to search for "regex" module/package? My search failed miserably: found "re", or how modules work.
[10:43:27] <jinsun> ice99: you forgot the.rstrip() after the .decode()
[10:44:03] <han-solo> `re.search(pattern, string)`
[10:44:16] <han-solo> er
[10:44:21] <han-solo> "python docs re" ?
[10:44:25] <jinsun> parv: don't use search engines, directly go to pypi https://pypi.org/project/regex/
[10:44:45] <han-solo> er, my bad
[10:44:55] <jinsun> search engines have become infested with SEO crap and have become more useless than they were 10 years ago
[10:46:17] *** Joins: roxfan (~roxfan@2a02:a03f:a2be:4f00:645d:2a7c:96cb:dc8)
[10:47:27] <parv> jinsun, Thanks for the link. I can't be always here to find you or others; so I need some clues to search for packages|modules. pip search has been shut down some time ago; OS-specific package tools do not account for everything
[10:48:18] <jinsun> well I got that by searching pypi, didn't have that link around, https://pypi.org/search/?q=regex
[10:49:03] <parv> jinsun, Ah, ok: pypi website search interface then. Thanks
[10:49:41] <parv> s/has been/had been/
[10:49:47] *** Joins: mexen (uid495612@user/mexen)
[10:50:44] <jinsun> it still works if you have a warehouse clone that didn't disable xmlrpc, but that is rare to have
[10:51:24] <parv> No, no such thing I have
[10:53:23] <NeilRG> can someone explain why __or__ is not part of Mapping?
[10:53:33] *** Joins: mrwick (~mrwick@user/mrwick)
[10:54:45] *** Joins: dme86 (~dan@user/dan86)
[10:56:26] *** Quits: ExpiredKebab (~sgreadly@2407:7000:8995:c103:4120:45d3:c40d:d00d) (Quit: Textual IRC Client: www.textualapp.com)
[10:56:27] *** Quits: hanzo (uid532183@user/hanzo) (Quit: Connection closed for inactivity)
[10:57:22] *** Joins: jpic (~jpic@82.142.19.130)
[10:57:46] *** Quits: maxzor (~maxzor@abordeaux-652-1-2-77.w90-16.abo.wanadoo.fr) (Quit: Leaving)
[10:58:51] *** Joins: yoyoyo (~MrCollins@38.21.140.217)
[10:59:06] *** Quits: portalrat (~portalrat@user/portalrat) (Quit: Leaving)
[10:59:23] *** Joins: portalrat (~portalrat@user/portalrat)
[11:02:05] *** Quits: MrCollinsGA (~MrCollins@38.21.140.217) (Ping timeout: 256 seconds)
[11:03:00] <jinsun> before 3.9 dicts didn't have it, and I guess when it was added to dict in 3.9, they didn't add it to Mapping
[11:04:36] <jinsun> ah the pep says why they didn't do it
[11:04:37] <jinsun> https://www.python.org/dev/peps/pep-0584/#what-about-mapping-and-mutablemapping
[11:05:07] <jinsun> 1) Currently, neither defines a copy method, which would be necessary for | to create a new instance 2) Adding |= to MutableMapping (or a copy method to Mapping) would create compatibility issues for virtual subclasses
[11:06:16] <parv> Either I am having cognitive dissonance or missing some understanding! Under "PyPy" section at https://pypi.org/project/regex/ "... so it won’t behave properly with PyPy outside U+0000..U+007F because PyPy stores strings as UTF-8" -- is that range not limited to just ASCII?
[11:07:14] *** Quits: mon_aaraj (~MonAaraj@user/mon-aaraj/x-4416475) (Ping timeout: 252 seconds)
[11:07:31] <hexnewbie> parv: Yeah, only the ASCII subset of UTF-8 is of 1-byte width.
[11:07:32] *** Joins: luigibu (~luigi@93.176.155.54)
[11:09:12] *** Joins: mon_aaraj (~MonAaraj@user/mon-aaraj/x-4416475)
[11:09:45] *** Quits: falk689 (~falk689-q@gateway/tor-sasl/falk689) (Remote host closed the connection)
[11:09:56] *** Joins: falk689 (~falk689-q@gateway/tor-sasl/falk689)
[11:10:33] *** Quits: djapo (~archangel@user/djapo) (Ping timeout: 250 seconds)
[11:10:42] *** Quits: cosimone (~user@93-47-228-151.ip115.fastwebnet.it) (Remote host closed the connection)
[11:12:39] *** Joins: winterflaw (~winterfla@gateway/tor-sasl/winterflaw)
[11:13:34] *** Joins: magga (magga@ti0036a400-3577.bb.online.no)
[11:14:06] *** Joins: cosimone (~user@93-47-228-151.ip115.fastwebnet.it)
[11:14:33] *** Joins: pro_z_ (~pro_z@37.214.69.56)
[11:16:17] <parv> Does "regular' python (as in a python package complied for FreeBSD or Rocky Linux) store strings within ASCII range, re "[regex] module is targeted at CPython. It expects that all codepoints are the same width ..."? Implementation details seem to be screwing with my mind.
[11:16:50] <Repiphany> Python3 strings are unicode
[11:17:08] *** Joins: zeenk (~zeenk@2a02:2f04:a30d:1300:51a3:bcfc:6cda:9fc5)
[11:17:29] <hexnewbie> If I recall correctly, CPython stores strings in ASCII/UTF-8 if they are ASCII, in UTF-16 if they are BMP, and UTF-32 if they contain SMP characters
[11:17:44] <parv> Does that mean "regex" module is not suitable to use with python3? It does claim to support Unicode 14.0.0.
[11:18:18] <hexnewbie> So in CPython, strings will always be the same width
[11:18:32] <hexnewbie> Errr, characters in a string will always be the same width
[11:19:44] <jinsun> parv: it is suitable with cpython, and only suitable with other implementations if you stick to ascii
[11:19:54] *** Joins: chenqisu1 (~chenqisu1@183.217.200.249)
[11:20:22] <jinsun> if you don't use anything other than cpython then don't worry about that line
[11:20:38] *** Quits: chenqisu1 (~chenqisu1@183.217.200.249) (Max SendQ exceeded)
[11:20:47] *** Joins: esro (~esro@nat1.krakowskiinternet.pl)
[11:21:02] *** Quits: kickingv1gas (~cchoi@c-67-170-234-150.hsd1.ca.comcast.net) (Quit: leaving)
[11:21:05] *** Joins: chenqisu1 (~chenqisu1@183.217.200.249)
[11:21:21] *** Quits: fikran (~fikran@user/fikran) (Ping timeout: 256 seconds)
[11:21:22] *** Joins: bittheproto (~bitthepro@078088086032.szczecin.vectranet.pl)
[11:21:26] <callq> So does python have interfaces? It's kind of different in Python, right? If not, then what should I do to abstract multiple separate API wrappers?
[11:21:28] *** Joins: c4017w__ (~c4017@209.52.68.8)
[11:21:51] <jinsun> you can have interfaces with abc
[11:22:05] *** Joins: rendar (~rendar@user/rendar)
[11:22:05] <jinsun> callq: https://docs.python.org/3/library/abc.html
[11:22:17] *** Quits: bittheproto (~bitthepro@078088086032.szczecin.vectranet.pl) (Quit: Leaving)
[11:23:03] *** Joins: fikran (~fikran@user/fikran)
[11:23:21] <parv> The reason "regex" lists for proper behaviour with PyPy only within ASCII range: because PyPy stores strings as UTF-8.
[11:24:59] *** Quits: c4017w_ (~c4017@209.52.68.8) (Ping timeout: 256 seconds)
[11:25:02] <jinsun> parv: yep, that means the codepoints in a string can have different widths, which violates the assumption regex is making
[11:25:09] *** Joins: pycode1 (~pycode3@2001:b07:5d28:551:c4ad:fd57:ed84:5b22)
[11:25:17] <hexnewbie> parv: Yes. UTF-8 is variable-length encoding, in particular, ASCII characters use 1 byte, part of BMP characters use 2 bytes, the rest 3 bytes, and SMP characters in 4 bytes
[11:25:31] *** Joins: np0x0zy (~np0x0zy@ipbcc2d6ef.dynamic.kabel-deutschland.de)
[11:25:58] *** Quits: szkl (uid110435@id-110435.uxbridge.irccloud.com) (Quit: Connection closed for inactivity)
[11:27:02] *** Joins: menace (~someone@ppp-93-104-186-58.dynamic.mnet-online.de)
[11:27:44] <hexnewbie> Basically, s = 'Hello свят'; s[-4:]; will be slow or broken in UTF-8, because 'Hello ' is 5 bytes, and 'свят' is 8 bytes, so slicing will either have to read the entire string letter by letter to count them, or incorrectly assume -4 is four bytes and slice 'ят'
[11:27:52] *** Quits: menace (~someone@ppp-93-104-186-58.dynamic.mnet-online.de) (Changing host)
[11:27:52] *** Joins: menace (~someone@user/menace)
[11:27:56] *** menace is now known as Deknos
[11:29:11] <hexnewbie> I don't know which issue of the two PyPy has, but the regex module doesn't like it, whichever one
[11:29:14] <parv> hexnewbie, jinsun: Oh! I thought that UTF-8 was fixed width encoding unlike UTF-16
[11:30:26] <hexnewbie> The only truly fixed width encoding will be UTF-32. But since that's expensive, you Python 3 falls back to UTF-16 and UTF-8/ASCII whenever the encoding is fixed width for the subset of characters you're using
[11:31:03] *** Quits: Helithumper (~Helithump@c-76-25-170-226.hsd1.co.comcast.net) (Quit: ZNC 1.8.2 - https://znc.in)
[11:31:04] *** Joins: ayustae (Thunderbir@gateway/vpn/protonvpn/ayustae)
[11:32:09] *** Joins: Helithumper (~Helithump@c-76-25-170-226.hsd1.co.comcast.net)
[11:32:33] *** Quits: AquaL1te (~AquaL1te@user/aqual1te) (Quit: leaving)
[11:32:36] *** Joins: Guest7003 (~vit@chello085216193138.chello.sk)
[11:33:08] <parv> jinsun, hexnewbie, Thanks much! 🎵I can see clearly now ...🎵
[11:33:30] *** Joins: tobybl (~tobybl@214.242.200.146.dyn.plus.net)
[11:35:23] <p-i-> Is there any online python pastebin that can execute code that uses a lib not in stdlib (regex)?
[11:35:49] *** Quits: jamiejackson (~jamiejack@131.106.140.145) (Quit: Ping timeout (120 seconds))
[11:37:16] *** Joins: msk (~Thunderbi@89.205.124.19)
[11:38:42] *** Joins: tristan_ (~tristan@223.33.165.49)
[11:38:53] *** tristan_ is now known as gtristan
[11:40:31] *** Joins: palasso (~palasso@user/palasso)
[11:44:55] *** Joins: nomic (~nomic@185.198.243.198)
[11:45:04] *** Quits: parv (~quass@user/parv) (Quit: parv)
[11:45:33] *** Quits: ubert (~Thunderbi@p548c8cd6.dip0.t-ipconnect.de) (Quit: ubert)
[11:46:08] *** Quits: bambams (~bambams@user/bambams) (Quit: Lost terminal)
[11:47:05] *** Joins: ekathva_ (~ekathva@2001:999:50:cab1:cb06:9935:dc:f7e7)
[11:47:16] <Swayze> yeah github :p
[11:47:21] <Swayze> but you'll need a requirements.txt
[11:47:31] <Swayze> check out tasks
[11:47:54] <Swayze> (not exactly pastebin but its a nice way to host code and have it execute or a cron or otherways)
[11:48:00] <Swayze> on*
[11:49:33] *** Quits: ekathva (~ekathva@2001:999:50:cab1:59c2:628d:2b45:2b24) (Ping timeout: 250 seconds)
[11:49:53] <dminuoso> Hi. Im using https://docs.python-requests.org/en/latest/api/#requests.post as `post(url=f"...", json={...})`, staring at the API reference and the linked source Im unsure why this works at all.
[11:50:08] <dminuoso> Shouldnt post demand at the very least one positional argument?
[11:50:39] *** Joins: karlnashville (~karl@2601:482:4280:4cf0:e422:697:f231:3d38)
[11:50:49] *** Quits: strugee (~strugee@2603-7000-4900-3a47-2247-47ff-fe82-d58c.res6.spectrum.com) (Ping timeout: 256 seconds)
[11:51:28] *** Joins: Gustavo6046 (~Gustavo60@user/gustavo6046)
[11:52:01] <bookworm> why?
[11:52:30] <bookworm> the url is the only required arg and that is positional
[11:52:52] <bookworm> everything else is optional, while unusual you don't need to provide a body in a post request
[11:53:17] *** Quits: msk (~Thunderbi@89.205.124.19) (Ping timeout: 240 seconds)
[11:53:30] <dminuoso> Yes, but no positional argument is supplied in the above
[11:53:52] <bookworm> no but a named param called url
[11:54:05] *** Joins: strugee_ (~strugee@173.211.12.73)
[11:54:05] *** Joins: herjazz (~herjazz@p10513117-ipngn24101marunouchi.tokyo.ocn.ne.jp)
[11:54:06] <bookworm> python allows you to name positional args
[11:54:22] *** Joins: kaiseisei (~Thunderbi@223.11.80.109)
[11:54:26] *** Joins: bluedust_ (~bluedust@117.204.132.5)
[11:54:32] *** Joins: doko (~doko@58.64.26.6)
[11:54:41] <bookworm> (for readability)
[11:54:44] <The-Compiler> dminuoso: requests.post(f"...") and requests.post(url=f"...") are the same thing
[11:55:21] <jinsun> dminuoso: you can make them positional-only but that is extra work and not required most of the time (and also not supported pre 3.8)
[11:55:24] <dminuoso> Alright thanks bookworm, Im looking at https://docs.python.org/3/reference/expressions.html#calls now
[11:55:30] <dminuoso> And it's making sense now.
[11:56:01] <dminuoso> jinsun: Given what Im reading right now, how could you even do that?
[11:56:10] *** Joins: parv (~quass@user/parv)
[11:56:25] <bookworm> jinsun: that makes zero sense and just annoys people. The only valid use there is if you really can't support the other form due to syscalls or C or some such
[11:56:44] <bookworm> * as an argument
[11:57:01] *** Joins: dkr13 (~dkr13@dkr13.de)
[11:57:21] *** Joins: Z-cat (~Z-cat@user/z-cat)
[11:57:25] <grawity> I think it was / for positional-only, as I'm sure * is for named-only
[11:57:51] *** Quits: bluedust (~bluedust@103.161.144.34) (Ping timeout: 256 seconds)
[11:58:18] <jinsun> dminuoso: you put a / after url, then you will have to provide url as positional, see https://docs.python.org/3.8/whatsnew/3.8.html#positional-only-parameters
[11:58:24] <bookworm> ah, right my bad
[11:59:35] <The-Compiler> see https://www.python.org/dev/peps/pep-0570/ for lots more details and some use cases
[11:59:40] <dminuoso> ChThanks
[12:00:01] <bookworm> use it very sparingly though
[12:00:10] <The-Compiler> agreed
[12:00:13] <grawity> dminuoso: fwiw, that would be in 8.7 "function definitions", it's a define-time thing, not call-time
[12:00:21] <bookworm> there's a reason people prefer to use keyword args
[12:01:07] *** Joins: MajorBiscuit (~MajorBisc@c-001-001-054.client.tudelft.eduvpn.nl)
[12:01:14] <jinsun> bookworm: yeah that's why I said not required most of the time
[12:02:01] <dminuoso> grawity: I find that surprising, since I'd expect this to be specified in call semantics.
[12:02:22] *** Quits: dtg01100 (~dtg01100@199.21.141.37) (Read error: Connection reset by peer)
[12:02:26] <grawity> well, parameter order is set at time of definition, parameter names are set at time of definition
[12:02:29] <dminuoso> Since the semantics of / are observable at call-time only
[12:02:31] <dminuoso> Sure
[12:02:47] <grawity> so whether parameters are accepted as positional-only or keyword-only or both is also set at time of definition
[12:02:48] <dminuoso> But the semantics of / give you, presumably, TypeError or some such at *call-time*
[12:02:52] <grawity> yes
[12:02:54] *** Joins: dtg01100 (~dtg01100@199.21.141.37)
[12:03:10] <grawity> but if you specified it at call time, that'd defeat the whole point of being able to restrict how those parameters are passed
[12:03:10] <dminuoso> But, perhaps the reference I read there is old from before that change
[12:03:17] <dminuoso> No I understand
[12:03:26] <dminuoso> You're missing the point Im making
[12:04:53] *** Quits: cthulchu (~Cthulchu@69-172-160-196.cable.teksavvy.com) (Ping timeout: 256 seconds)
[12:04:59] <dminuoso> 6.3.4 meticulously speaks about the semantics of call slots, how positional arguments and kwargs are fitted into slots, how default values arise, and exactly what kinds of mismatching generates diagnostics.
[12:05:18] *** Quits: fivaldi (~fivaldi@213-29-36-107.adslcust.sbone.cz) (Quit: Konversation terminated!)
[12:05:46] <dminuoso> I'd have expected the function definition section you'd declare that / declares some <insert word>, but what the semantics of <insert word> would be described in the call section.
[12:06:38] <dminuoso> In standardese this is a contradiction
[12:06:39] *** Joins: perrierjouet (~perrier-j@modemcable012.251-130-66.mc.videotron.ca)
[12:07:07] <dminuoso> " Next, for each keyword argument, the identifier is used to determine the corresponding slot (if the identifier is the same as the first formal parameter name, the first slot is used, and so on)."
[12:07:09] <dminuoso> This perhaps ought to read
[12:08:26] <dminuoso> "Next, for each keyword argument, the identifier is used to determine the corresponding slot (if the identifier is the same as the first formal parameter name, the first slot is used, and so on), unless the slot was created by a positional-only argument (see 8.7)"
[12:08:44] *** Joins: varaindemian (uid73404@id-73404.ilkley.irccloud.com)
[12:08:54] <dminuoso> With some addendum "in which case a TypeError (?) is raised"
[12:10:10] *** Joins: zamanf (~dev@213.133.91.246)
[12:11:15] *** Joins: AlexisTP (~AlexisTP3@92.57.44.63)
[12:11:24] *** Joins: ekathva (~ekathva@2001:999:50:cab1:b7e8:130b:c792:9fd)
[12:11:25] *** Quits: ekathva (~ekathva@2001:999:50:cab1:b7e8:130b:c792:9fd) (Remote host closed the connection)
[12:11:33] *** Quits: orangeboxcutter (~orange@user/orangeboxcutter) (Ping timeout: 276 seconds)
[12:11:44] <jinsun> well at least it refers to the function definition section just before that paragraph,  "Please refer to section Function definitions for the syntax of formal parameter lists."
[12:13:20] <dminuoso> jinsun: Yes, but that's just syntax.
[12:13:36] *** Joins: naranja (~orange@user/orangeboxcutter)
[12:13:49] *** Quits: domicron (~domicron@gateway/tor-sasl/domicron) (Remote host closed the connection)
[12:13:59] *** Joins: Ergo^ (~ergo@91.238.59.144)
[12:14:29] <jinsun> if you keep following the links you will eventually reach the PEP :D where you get more than just the syntax
[12:14:34] *** Joins: domicron (~domicron@gateway/tor-sasl/domicron)
[12:14:35] <jinsun> many parts of the docs are lazy like that
[12:14:37] *** Quits: zamanf (~dev@213.133.91.246) (Ping timeout: 256 seconds)
[12:14:41] <jinsun> they just link to the PEP
[12:14:47] <dminuoso> Heh, doesnt mean I cant complain about it.
[12:14:57] <dminuoso> "But you *can* find it" is never a good argument.
[12:15:35] <dminuoso> See Hitchhikers Guide to the Galaxy "But the plans were on display"...
[12:15:49] *** Joins: AlexisTP2 (~AlexisTP3@92.57.44.63)
[12:16:07] *** Joins: kosh (~kosh@user/kosh)
[12:18:15] *** Quits: AlexisTP (~AlexisTP3@92.57.44.63) (Ping timeout: 256 seconds)
[12:18:15] <jinsun> yeah it is not good, but having that link is better than not having that link, at least you have something pointing to the the actual display
[12:18:45] *** Quits: Asgaroth (~Asgaroth@93.107.191.92) (Read error: Connection reset by peer)
[12:18:54] *** Quits: AlexisTP2 (~AlexisTP3@92.57.44.63) (Client Quit)
[12:19:08] *** Joins: AlexisTP2 (~AlexisTP3@92.57.44.63)
[12:19:28] *** Quits: rando25892 (~homefame@user/rando25892) (Quit: enemy at the gate)
[12:20:24] <Jimmy2027> does someone know what would be the best way to flatten a nested list? for example to convert [1,[1,[1,2,3, [1]], 1]] to [1,1,1,2,3,1,1]?
[12:20:34] <jinsun> you can definitely try fixing it, this one might not be as controversial as the "print returns None" one
[12:21:37] *** AlexisTP2 is now known as AlexisTP
[12:21:57] *** Joins: c4017w_ (~c4017@209.52.68.8)
[12:22:04] *** Joins: chele (~chele@user/chele)
[12:23:02] <jinsun> Jimmy2027: create a new list, loop over each item, if it is not a list, append to the new list, if it is a list, flatten it
[12:24:37] <Repiphany> Jimmy2027: https://bpa.st/MLZA
[12:25:08] *** Quits: Linux77 (~LinuMage@186.233.179.225) (Quit: KVIrc 5.0.1 Aria http://www.kvirc.net/)
[12:25:51] *** Quits: c4017w__ (~c4017@209.52.68.8) (Ping timeout: 256 seconds)
[12:26:49] <Jimmy2027> Repiphany: ah very nice :) was wondering how to do that with a recursive function that yields
[12:27:40] *** Joins: theo (~theo@user/theo)
[12:28:50] <jinsun> I was going more like https://bpa.st/CNXA, which is mosty the same thing
[12:29:13] *** Joins: caveman (~caveman@gateway/tor-sasl/caveman)
[12:29:30] *** Joins: vladoski (~vladoski@2001:b07:add:d406:db91:645b:3fe5:a43f)
[12:29:44] *** Quits: gimzmoe (~gimzmoe@user/gimzmoe) (Quit: WeeChat 2.8)
[12:30:15] *** Joins: gimzmoe (~gimzmoe@user/gimzmoe)
[12:30:23] *** Quits: dme86 (~dan@user/dan86) (Ping timeout: 256 seconds)
[12:31:28] <jinsun> but you get lazy evaluation with the yield version
[12:32:07] *** Quits: AlexisTP (~AlexisTP3@92.57.44.63) (Quit: Leaving)
[12:32:27] *** Joins: eyepeetee (~aa@024-151-038-076.res.spectrum.com)
[12:32:39] *** Quits: mixfix41 (~sdenyninn@user/mixfix41) (Ping timeout: 256 seconds)
[12:35:08] *** Joins: AlexisTP (~AlexisTP3@92.57.44.63)
[12:35:34] *** Joins: zamanf (~dev@213.133.91.246)
[12:35:47] *** Quits: Esexe_ (~aa@024-151-038-076.res.spectrum.com) (Ping timeout: 252 seconds)
[12:36:47] *** Quits: parv (~quass@user/parv) (Quit: parv)
[12:38:50] *** Joins: dme86 (~dan@user/dan86)
[12:40:43] *** Joins: slav0nic (slav0nic@python.su)
[12:42:24] *** Joins: merijn (~merijn@c-001-001-018.client.esciencecenter.eduvpn.nl)
[12:44:11] *** Joins: Thanatos (~Thanatos@197.210.70.201)
[12:44:34] *** Joins: Linux77 (~LinuMage@186.233.179.225)
[12:45:08] *** Joins: thiras (~thiras@user/thiras)
[12:46:52] *** Joins: gentooclimax (~gentoocli@81-64-65-213.rev.numericable.fr)
[12:47:51] *** Quits: pmb (~pmb@89-64-79-51.dynamic.chello.pl) (Ping timeout: 245 seconds)
[12:47:54] *** Quits: Betal (~Betal@user/betal) (Quit: WeeChat 3.4)
[12:49:52] *** Joins: Klinda (~superleag@user/klinda)
[12:50:06] *** Quits: roxfan (~roxfan@2a02:a03f:a2be:4f00:645d:2a7c:96cb:dc8) (Ping timeout: 260 seconds)
[12:51:46] *** Joins: zen_coder (~zen_coder@2a02:8109:a280:2d8d:7465:4c52:7351:b51c)
[12:53:44] *** Quits: revolve (~u0_a227@cpc100838-bagu15-2-0-cust672.1-3.cable.virginm.net) (Read error: Connection reset by peer)
[12:53:59] *** Joins: blindguard (~blindguar@2a02:908:1864:c200::ef3c)
[12:54:17] *** Quits: Ha-Jo (~hajo@2a01:c23:8926:f000:821f:2ff:feef:dabf) (Ping timeout: 240 seconds)
[12:54:35] *** Joins: plastico (~plastico@neomutt/plastico)
[12:57:31] <jinsun> hmm, can that be done without pyright complaining, and not using cast, the isinstance(item, list) makes pyright complain that it is list[unknown]
[12:57:50] <jinsun> and the only way I see to avoid it is cast
[12:58:58] *** Joins: shad (~shad@user/shad)
[12:59:30] *** Joins: naan (~Naan@user/naan)
[12:59:55] <sreve> Maybe I have luck and someone can help me :) ... Question: Does someone know a tools (maybe a neural network) that can make a actor/speaker in a movie always looking to the camera?
[13:00:54] *** Joins: goldfish (~goldfish@user/goldfish)
[13:01:27] <jinsun> hmm, looks like cast is the only solution indeed, https://github.com/microsoft/pyright/discussions/1792
[13:01:48] <jinsun> ugly, I would consider it a pyright bug really
[13:02:08] *** Quits: dme86 (~dan@user/dan86) (Ping timeout: 256 seconds)
[13:02:38] *** Quits: brookesy66 (~will@203.220.123.174) (Quit: WeeChat 3.4)
[13:03:13] *** Joins: someuser (~user@197.54.40.212)
[13:04:35] *** Joins: mncheck (~mncheck@193.224.205.254)
[13:05:04] <sreve> I knew it ... https://www.youtube.com/watch?v=rDUtBZXWrsE
[13:05:27] <sreve> but its not a tool
[13:05:33] *** Joins: SR-71 (~Duck@2405:201:3003:8024:348e:466c:a606:1eb8)
[13:05:51] *** Quits: doko (~doko@58.64.26.6) (Ping timeout: 256 seconds)
[13:06:42] *** Joins: doko (~doko@58.64.26.6)
[13:07:17] *** Quits: julia (~quassel@user/julia) (Ping timeout: 240 seconds)
[13:07:23] <p-i-> This is odd...  this works: `all_ = lambda pattern: re.findall(pattern, c, re.M)` and returns a `list`. But `all_ = lambda pattern: [s.replace(',', '.') for s in re.findall(pattern, c, re.M)]` fails.
[13:07:37] *** Joins: dunpeal (~dunpeal@2001:470:69fc:105::3e80)
[13:07:44] *** Quits: doko (~doko@58.64.26.6) (Remote host closed the connection)
[13:08:25] *** Quits: jonthesnow (~xizhendu@36.112.179.225) (Ping timeout: 250 seconds)
[13:10:09] *** Joins: julia (~quassel@user/julia)
[13:10:21] *** Joins: revolve (~u0_a227@82-132-239-16.dab.02.net)
[13:11:42] *** Joins: Xardas (~Xardas@149.233.51.127)
[13:12:19] *** Quits: dfrey (~dfrey@172.103.152.101) (Ping timeout: 250 seconds)
[13:12:57] *** Quits: AlanMD (~AlanMD@5-12-8-203.residential.rdsnet.ro) (Ping timeout: 240 seconds)
[13:14:42] <Repiphany> List comprehension scoping can be unintuitive
[13:14:53] *** Joins: lsrtl__ (~lsrtl@user/lsrtl)
[13:14:54] <Repiphany> Why are you assigning a name to a lambda in the first place
[13:15:21] *** Quits: merijn (~merijn@c-001-001-018.client.esciencecenter.eduvpn.nl) (Ping timeout: 245 seconds)
[13:15:26] <p-i-> all_ = lambda pattern: [str(s).replace(',', '.') for s in re.findall(pattern, c, re.M)] ... this fixes
[13:15:36] <p-i-> When I checked the error it said 'tuple has no .replace'
[13:15:57] *** Quits: julia (~quassel@user/julia) (Ping timeout: 240 seconds)
[13:16:08] *** Quits: caveman (~caveman@gateway/tor-sasl/caveman) (Remote host closed the connection)
[13:16:16] <p-i-> I'm using lambda for convenience rather than using a function
[13:16:28] *** Joins: AlanMD (~AlanMD@193.105.140.131)
[13:16:51] <Repiphany> Better to not do that in actual code
[13:17:00] <grawity> p-i-: if your regex has *one* capturing group ( ), then findall() directly returns a list of strings
[13:17:24] <grawity> p-i-: but if it has *multiple* capturing groups, findall() returns a list of tuples, which have one string per group
[13:17:49] *** Quits: upsala (~zcb@185.213.155.252) (Quit: WeeChat 3.4)
[13:17:51] <grawity> in the latter case, str()-ifying the tuple doesn't really make sense
[13:18:26] *** Joins: ThanatosJ (~Thanatos@197.210.70.82)
[13:18:42] *** Quits: nomic (~nomic@185.198.243.198) (Quit: Leaving)
[13:18:56] *** Joins: LimeOn (~user@user/limeon)
[13:19:00] *** Joins: nomic (~nomic@185.198.243.198)
[13:19:58] *** Joins: julia (~quassel@user/julia)
[13:20:13] <callq> does the abstract-base-class actually enforce that all the methods be defined?
[13:20:20] *** Joins: merijn (~merijn@c-001-001-018.client.esciencecenter.eduvpn.nl)
[13:21:21] *** Joins: dme86 (~dan@user/dan86)
[13:21:25] *** Joins: Xardas27 (~Xardas@149.233.51.127)
[13:21:47] *** Joins: caveman (~caveman@gateway/tor-sasl/caveman)
[13:21:55] *** Joins: LucaTM (~LucaTM@user/lucatm)
[13:22:28] *** Joins: c4017w__ (~c4017@209.52.68.8)
[13:22:31] *** Quits: Thanatos (~Thanatos@197.210.70.201) (Ping timeout: 256 seconds)
[13:23:47] *** Joins: trace (~trace@ip5b42976d.dynamic.kabel-deutschland.de)
[13:23:49] *** Joins: programmar (~whatever@118.69.128.37)
[13:24:08] <programmar> does sqlite3 provide any standard method so i can use to sanitize the input of my data ?
[13:24:33] *** Quits: Xardas (~Xardas@149.233.51.127) (Ping timeout: 256 seconds)
[13:25:06] *** Joins: avaxar (~avaxar@36.72.215.150)
[13:25:19] *** Quits: trace987 (~trace@ip5b42976d.dynamic.kabel-deutschland.de) (Ping timeout: 250 seconds)
[13:25:31] *** Joins: dfrey (~dfrey@172.103.152.101)
[13:25:47] <Z-cat> hey people, any good literature on Pygame and python for beginner?
[13:25:49] *** Quits: c4017w_ (~c4017@209.52.68.8) (Ping timeout: 240 seconds)
[13:26:06] <supakeen> `connection.execute("SELECT col FROM tbl WHERE id = ?", (1,))`
[13:27:04] <supakeen> This is called query parametrization and is important, you don't 'sanitize' but you let the database driver fill in the value in the correct way.
[13:27:17] *** Quits: dme86 (~dan@user/dan86) (Ping timeout: 250 seconds)
[13:27:50] <programmar> so i replace 1 with my unsanitized input ?
[13:27:55] <supakeen> yes
[13:28:00] <programmar> awh
[13:28:01] <programmar> ok
[13:28:07] <programmar> didn't know about that :P
[13:28:20] <supakeen> If you have multiple fields to fill it's `connection.execute("..., ?, ?", (1, 2))`.
[13:28:21] *** Quits: jazzy (~jaziz@user/jaziz) (Ping timeout: 250 seconds)
[13:28:28] <programmar> ok gotcha
[13:29:09] *** Joins: ubert (~Thunderbi@2a02:8109:9880:303c:216f:fa56:c9b1:3e43)
[13:29:48] <supakeen> And just a minor tidbit, I've always understood sanitization as removing unsafe things, and escaping as making unsafe things safe so I prefer the last word for this :)
[13:29:49] *** Quits: Xardas27 (~Xardas@149.233.51.127) (Quit: Client closed)
[13:30:47] *** Quits: fikran (~fikran@user/fikran) (Ping timeout: 256 seconds)
[13:30:48] *** Quits: gr33n7007h (~gr33n7007@user/gr33n7007h) (Quit: WeeChat 3.4)
[13:31:40] *** Joins: merrinx (~merrinx@dhcp2629-stud.wifi.uit.no)
[13:32:24] *** Joins: fikran (~fikran@user/fikran)
[13:33:00] *** Quits: revolve (~u0_a227@82-132-239-16.dab.02.net) (Read error: Connection reset by peer)
[13:34:02] *** Joins: ivii (~ivan@user/ivii)
[13:34:04] *** Quits: zaquest (~notzaques@5.130.79.72) (Remote host closed the connection)
[13:34:24] *** Joins: revolve (~u0_a227@82-132-245-160.dab.02.net)
[13:35:37] *** Quits: gtristan (~tristan@223.33.165.49) (Ping timeout: 240 seconds)
[13:35:53] *** Quits: fflam (~mdt@ip72-220-60-77.sd.sd.cox.net) (Ping timeout: 256 seconds)
[13:37:42] *** Joins: fflam (~mdt@ip72-220-60-77.sd.sd.cox.net)
[13:38:02] *** Joins: dengtianhua (~dengtianh@198.57.27.172)
[13:38:22] *** Quits: merrinx (~merrinx@dhcp2629-stud.wifi.uit.no) (Quit: WeeChat 3.4)
[13:38:59] *** Joins: thevishy (~Nishant@2405:201:f005:c007:e0f1:5635:e895:47c6)
[13:40:42] *** Quits: gentooclimax (~gentoocli@81-64-65-213.rev.numericable.fr) (Quit: Konversation terminated!)
[13:41:05] *** Quits: dffo^ (~dffo@128-092-182-020.biz.spectrum.com) (Remote host closed the connection)
[13:42:19] *** Joins: NealRame (~a@125-253-107-134.ip4.superloop.com)
[13:43:14] <aphysically> jinsun: https://github.com/python/cpython/commit/c8b62bbe46e20d4b6dd556f2fa85960d1269aa45
[13:43:40] <aphysically> and it was backported to 3.10
[13:43:43] *** Joins: zaquest (~notzaques@5.130.79.72)
[13:44:09] <aphysically> I think I may need to litigate the fix for Annotated again, though. That's okay.
[13:45:06] <NeilRG> I asked earlier, but does anyone know why __or__ is not provided by abc.Mapping?
[13:46:01] *** Joins: merrinx (~merrinx@dhcp2629-stud.wifi.uit.no)
[13:48:47] *** Joins: vlado (~vladoski@mail-uk-out.statpro.com)
[13:48:58] *** Quits: ijaz (ijaz@2a01:4f8:141:1272::2) (Ping timeout: 250 seconds)
[13:49:29] *** Quits: asix (~Anders@user/asix) (Ping timeout: 256 seconds)
[13:51:08] *** Quits: vladoski (~vladoski@2001:b07:add:d406:db91:645b:3fe5:a43f) (Ping timeout: 250 seconds)
[13:51:45] <aphysically> NeilRG: yes
[13:51:58] <NeilRG> ....?
[13:52:11] <aphysically> you need copy method to make a new instance, but copy isn't part of Mapping
[13:52:23] <aphysically> so you can't make a new instance with __or__
[13:52:34] *** Joins: dme86 (~dan@user/dan86)
[13:52:39] <aphysically> but you can't add a copy method to mapping, because of virtual subclasses
[13:52:48] <NeilRG> aphysically, ahhhh, so you can't just call type(self)?
[13:52:59] <NeilRG> I guess not
[13:53:12] <NeilRG> since that assumes the constructor has a particular signature
[13:53:29] *** Quits: ssbr (~ssbr@python/site-packages/ssbr) (Ping timeout: 250 seconds)
[13:53:44] <jinsun_> <NeilRG> "I asked earlier, but does anyone..." <- oh you left that time, I had replied
[13:53:45] <jinsun_> the dict union pep has a section about it
[13:53:45] <jinsun_> <NeilRG> "I asked earlier, but does anyone..." <- https://www.python.org/dev/peps/pep-0584/#what-about-mapping-and-mutablemapping
[13:54:04] <NeilRG> jinsun_, sorry, did you ping me?  I didn't leave, but I went back to work when I didn't see  a reply
[13:54:19] <jinsun_> <aphysically> "jinsun: https://github.com/..." <- cool, you went with the eq way, not the cached property
[13:54:29] <aphysically> the eq way is already in typing.py
[13:54:31] *** Quits: lockywolf_ (~lockywolf@public.lockywolf.net) (Quit: ZNC 1.8.2 - https://znc.in)
[13:54:39] <aphysically> and there's other subtle reasons you might want it
[13:55:05] <aphysically> like, for some reason those classes are part of public API (I'm not sure why), so the __eq__ method probably makes more sense
[13:55:34] <aphysically> so it's possible to manually create the classes and assign them their __origin__ now with this method
[13:55:44] <aphysically> I have no idea why you would want to do this, but it's possible
[13:56:07] <jinsun_> NeilRG: yeah I didn't ping, I normally don't ping if there is no other conversation going on
[13:56:23] <NeilRG> jinsun_, ah okay sorry for not waiting long enough
[13:58:05] *** Joins: dsrt^ (~dsrt@128-092-182-020.biz.spectrum.com)
[13:58:17] *** Joins: lockywolf_ (~lockywolf@public.lockywolf.net)
[13:59:01] *** Quits: merrinx (~merrinx@dhcp2629-stud.wifi.uit.no) (Ping timeout: 240 seconds)
[13:59:07] *** Quits: walterwhip (~www@user/walterwhip) (Ping timeout: 256 seconds)
[13:59:25] <callq> Python. Abstraction. 2 apis. Need to interact with both. What do
[14:00:14] *** Joins: trace987 (~trace@ip5b42976d.dynamic.kabel-deutschland.de)
[14:00:34] *** Quits: SR-71 (~Duck@2405:201:3003:8024:348e:466c:a606:1eb8) (Changing host)
[14:00:34] *** Joins: SR-71 (~Duck@user/SR-71)
[14:00:34] *** Quits: shibboleth (~shibbolet@user/shibboleth) (Quit: shibboleth)
[14:01:05] *** Quits: trace (~trace@ip5b42976d.dynamic.kabel-deutschland.de) (Ping timeout: 250 seconds)
[14:02:04] <p-i-> tx grawity
[14:02:05] *** Joins: asix (~Anders@user/asix)
[14:02:48] *** Quits: fdan (~fdan@2001:1900:2100:2807:640a::ffb) (Quit: Client closed)
[14:04:07] *** Joins: merrinx (~merrinx@dhcp598-stud2.wifi.uit.no)
[14:04:33] <p-i-> (REPOST:)Is there any online python pastebin that can execute code that uses a lib not in stdlib (regex)?
[14:04:34] *** Joins: carl- (~carl-@c-138ee555.02-180-73746f39.bbcust.telenor.se)
[14:05:21] *** Quits: programmar (~whatever@118.69.128.37) (Ping timeout: 256 seconds)
[14:05:26] *** Quits: waveform (~quassel@waveform.plus.com) (Ping timeout: 250 seconds)
[14:05:42] *** Joins: skapata (~Skapata@2804:14c:87b0:9d2e:31e4:e529:2850:2303)
[14:05:42] *** Quits: skapata (~Skapata@2804:14c:87b0:9d2e:31e4:e529:2850:2303) (Changing host)
[14:05:42] *** Joins: skapata (~Skapata@user/skapata)
[14:05:43] <supakeen> p-i-: as far as I know repl.it allows you to upload a requirements.txt file with your code to use.
[14:06:17] *** Joins: waveform (~quassel@waveform.plus.com)
[14:06:25] *** Quits: kaiseisei (~Thunderbi@223.11.80.109) (Quit: kaiseisei)
[14:08:06] *** Joins: tomeaton17 (~tomeaton1@2a0c:5bc0:40:2e2f:3144:e615:d62d:8e30)
[14:08:45] *** Quits: Guest1778 (~Guest1778@162-239-107-41.lightspeed.rcsntx.sbcglobal.net) (Ping timeout: 256 seconds)
[14:10:07] *** Quits: dme86 (~dan@user/dan86) (Ping timeout: 256 seconds)
[14:10:34] *** Joins: A_Beginner (~A_Beginne@62-178-140-87.cable.dynamic.surfer.at)
[14:12:06] *** Joins: walterwhip (~www@user/walterwhip)
[14:12:25] *** Parts: SR-71 (~Duck@user/SR-71) (Leaving)
[14:14:00] <p-i-> supakeen: wow, it works! Great!
[14:14:10] *** Joins: SR-71 (~Duck@2405:201:3003:8024:348e:466c:a606:1eb8)
[14:15:38] <A_Beginner> Hi! Can anyone please help me setting up a python environment? I just started, and found a book I'd like to follow. Need Python 2.7 on ActivePython and PythonWin. Thanks!
[14:15:43] *** Joins: Forsaken87_ (~quassel@2a02:908:1866:e360:b79:88e2:d2ce:2e71)
[14:16:24] <supakeen> I feel like your book is quite old?
[14:16:35] <SR-71> Can you please name your book?
[14:16:39] *** Joins: Bronto22 (~mennoh@2a02:a46b:4db0:1:5604:a6ff:fe37:3044)
[14:16:40] <cside> A_Beginner: That sounds like quite an old book, what's it called?
[14:17:22] <A_Beginner> I think so, too. It's called Python for absolute beginners by Andrew Warner.
[14:17:35] <SR-71> Hmmm....
[14:17:57] *** Quits: Forsaken87 (~quassel@2a02:908:1866:e360:b79:88e2:d2ce:2e71) (Ping timeout: 240 seconds)
[14:18:35] *** Joins: dme86 (~dan@user/dan86)
[14:18:50] <A_Beginner> It's from 2021. They start with 2.7 because its easier to learn. And I don't want to make mistakes in the beginning.
[14:19:26] <jinsun> A_Beginner: for beginners this book is good https://greenteapress.com/wp/think-python-2e/
[14:20:06] <jinsun> if someone says "2.7 because its easier to learn", don't listen to them or read their books
[14:20:08] <supakeen> A_Beginner: The problem is that you will rarely encounter Python 2.7 in the world anymore as it has been unsupported for multiple years.
[14:20:15] <A_Beginner> Thanks! I went through this book briefly before posting here. Couldn't find a way on how to set up a coding environment. It seems theoretical to mee... Am I wrong?
[14:20:20] <SR-71> Well I would recommend learning from a more recent book as python2 is depreached.
[14:20:47] <SR-71> BTW, what OS do you use?
[14:20:52] <A_Beginner> Windows 10 Pro
[14:21:01] <A_Beginner> For now ...
[14:21:29] <jinsun> https://docs.python.org/3/using/windows.html this page might be of help
[14:21:32] *** Quits: mickey8 (~user@user/mickey) (Quit: Ping timeout (120 seconds))
[14:21:49] *** Joins: mickey8 (~user@user/mickey)
[14:22:12] *** Quits: GNUmoon (~GNUmoon@gateway/tor-sasl/gnumoon) (Ping timeout: 276 seconds)
[14:22:47] <jinsun> though it might be too much information than necessary
[14:22:57] <A_Beginner> Thank you all for your support! I will change the book and go through the Windows installation link.
[14:22:57] *** Joins: c4017w_ (~c4017@209.52.68.8)
[14:22:59] <SR-71> You can look up python tutorials by Al Sweigart.
[14:23:08] <A_Beginner> Cool! Thanks!
[14:23:21] *** Joins: GNUmoon (~GNUmoon@gateway/tor-sasl/gnumoon)
[14:23:48] <A_Beginner> Nice having a supportive group here :-)
[14:24:09] <supakeen> From what I've heard the Microsoft app store installed version tends to be sufficient for learning.
[14:24:36] <jinsun> but it doesn't come with py.exe
[14:24:59] <jinsun> so I like to not recommend it, the exe installer from python.org is better
[14:25:03] <The-Compiler> IIRC it also might cause problems down the road, I think it doesn't work with Poetry
[14:25:18] <supakeen> Then I will stop recommending that :)
[14:25:25] <The-Compiler> and on Windows you probably install most other stuff by running an installer still anyways, so why not Python too
[14:26:04] <supakeen> It's been a while since I actually used Windows as a development platform so I need to update my mental map.
[14:26:23] <SR-71> Ubunto eh?
[14:26:31] <SR-71>  *Ubuntu
[14:26:42] *** Quits: c4017w__ (~c4017@209.52.68.8) (Ping timeout: 260 seconds)
[14:26:59] <supakeen> Generally I just run a VM with any distro that I like at that moment for local development.
[14:27:23] <SR-71> There must be a base distro.
[14:27:35] <SR-71> to run your Vms
[14:27:43] *** Quits: Lord_of_Life (~Lord@user/lord-of-life/x-2819915) (Ping timeout: 250 seconds)
[14:27:47] *** Quits: nomic (~nomic@185.198.243.198) (Quit: Leaving)
[14:27:50] <supakeen> It flip flops between Ubuntu and Fedora.
[14:28:12] <SR-71> I've been using Gentoo from like 3 years now.
[14:28:16] <SR-71> *for
[14:28:25] <SR-71> seriously my typos
[14:28:48] *** Quits: slowtyper (~slowtyper@user/slowtyper) (Quit: ZNC 1.8.2 - https://znc.in)
[14:28:54] <supakeen> I don't particularly have a strong opinion about any of them, they work, I got fed up with Debian-based packaging of Python versions so I switched to Fedora for a bit now.
[14:29:04] *** Joins: slowtyper (~slowtyper@user/slowtyper)
[14:29:33] <SR-71> I usually compile each version from source.
[14:29:35] *** Joins: Lord_of_Life (~Lord@user/lord-of-life/x-2819915)
[14:29:41] <supakeen> You use Gentoo, that's to be expected ;)
[14:29:48] <SR-71> lol
[14:30:35] <SR-71> The python dependency thing gets on my nerves sometimes.
[14:30:58] *** Joins: tec (~quassel@gate.sixtopia.net)
[14:31:17] <SR-71> when you have like a zillion slot conflicts whille you didn't upgrade your python version from 3.5 to 3.7
[14:31:19] <SR-71> ahh
[14:31:24] <SR-71> the pain
[14:31:53] <supakeen> That's my main problem with Linux distributions, the fact that their 'base system' (userland tooling that comes by default) depends on Python and that Python gets in the way of your development Python.
[14:32:10] <supakeen> It's a minor annoyance for me but it's a big thing (tm) for new programmers.
[14:32:11] <SR-71> yup
[14:33:06] <SR-71> So what do you use python for?
[14:33:17] *** Quits: merrinx (~merrinx@dhcp598-stud2.wifi.uit.no) (Quit: WeeChat 3.4)
[14:33:29] *** Quits: np0x0zy (~np0x0zy@ipbcc2d6ef.dynamic.kabel-deutschland.de) (Quit: np0x0zy)
[14:33:51] <p-i-> Seems I can't set waypoints in repl.it without creating a linked github repo
[14:33:55] *** Quits: qwedfg (~qwedfg@user/qwedfg) (Quit: ZNC - https://znc.in)
[14:34:06] <p-i-> regex101 allows multiple revisions
[14:34:38] *** Quits: reset (~reset@user/reset) (Quit: reset)
[14:34:52] <supakeen> SR-71: Anything and everything really, mostly APIs, infrastructure automation, build systems, but I write many languages.
[14:34:55] *** Joins: qwedfg (~qwedfg@user/qwedfg)
[14:35:44] *** Joins: nomic (~nomic@185.198.243.198)
[14:35:47] <SR-71> Did you ever try common lisp?
[14:35:53] <supakeen> Ages ago :)
[14:36:03] <SR-71> lol
[14:36:18] *** Joins: vlado_ (~vladoski@93-47-225-6.ip114.fastwebnet.it)
[14:36:41] <A_Beginner> Al Sweigert is brilliant ...
[14:36:54] <SR-71> Well I actively develop my projects in CL.
[14:36:58] *** Quits: ThanatosJ (~Thanatos@197.210.70.82) (Read error: Connection reset by peer)
[14:37:13] <SR-71> A_Begineer: told ya..
[14:37:17] *** Joins: ThanatosJ (~Thanatos@102.91.5.111)
[14:37:57] *** Joins: upsala (~zcb@185.213.155.252)
[14:38:07] *** Quits: Bronto22 (~mennoh@2a02:a46b:4db0:1:5604:a6ff:fe37:3044) (Quit: Konversation terminated!)
[14:38:17] <SR-71> sipakeen: I'm looking froward to Clojure.
[14:38:41] <supakeen> My intersection is mostly on C, Python, Go, some C++, some Lua.
[14:39:01] *** Quits: vlado (~vladoski@mail-uk-out.statpro.com) (Ping timeout: 256 seconds)
[14:39:02] <supakeen> And some of the newer languages such as Nim and Rust :)
[14:39:07] <SR-71> Nothing functional....
[14:39:12] <SR-71> lol
[14:39:20] <supakeen> I have a hard time getting my brain to accept functional.
[14:39:40] <SR-71> Did you try smalltalk?
[14:39:57] <supakeen> Never, I've heard of it but haven't had a reason to use it in practice.
[14:40:05] *** Quits: baltazar (~baltazar@94-21-182-186.pool.digikabel.hu) (Ping timeout: 250 seconds)
[14:40:16] <SR-71> I once tried smalltalk.
[14:40:39] <SR-71> But never got bast installing the ide and a few basic programs.
[14:41:06] <SR-71> It's hard getting used to new keybindings.
[14:41:23] *** Joins: Bronto22 (~mennoh@84-86-247-193.fixed.kpn.net)
[14:41:33] <SR-71> Once you get hooked to emacs or vim.
[14:41:58] *** Joins: baltazar (~baltazar@87-97-81-70.pool.digikabel.hu)
[14:43:30] *** Quits: walterwhip (~www@user/walterwhip) (Quit: Textual IRC Client: www.textualapp.com)
[14:44:37] *** Quits: dme86 (~dan@user/dan86) (Ping timeout: 240 seconds)
[14:45:34] *** Quits: A_Beginner (~A_Beginne@62-178-140-87.cable.dynamic.surfer.at) (Quit: Client closed)
[14:46:18] *** Joins: roxfan (~roxfan@2a02:a03f:a2be:4f00:645d:2a7c:96cb:dc8)
[14:46:35] *** Quits: merijn (~merijn@c-001-001-018.client.esciencecenter.eduvpn.nl) (Ping timeout: 250 seconds)
[14:47:32] *** Quits: naan (~Naan@user/naan) (Ping timeout: 240 seconds)
[14:47:52] *** Quits: SR-71 (~Duck@2405:201:3003:8024:348e:466c:a606:1eb8) (Remote host closed the connection)
[14:48:14] *** Quits: luigibu (~luigi@93.176.155.54) (Quit: WeeChat 3.4)
[14:48:15] *** Joins: reset (~reset@user/reset)
[14:51:10] *** Joins: acresearch (~acresearc@user/acresearch)
[14:51:34] *** Joins: Trigraph (~Trigraph@user/trigraph)
[14:51:51] <acresearch> people is it possible to compile a python script as to not have anyone read the scipt? basically close source it?  like C++ fo commercial purposes?  or is it not possible with python?
[14:52:20] <supakeen> You can use a tool such as pyinstaller or cx_freeze, but like any other program things can be reverse engineered.
[14:54:17] *** Quits: bloody (~bloody@user/bloody) (Quit: okluvyabubye)
[14:54:20] <Trigraph> i wanted to understand why this does not work as expected, i have a list t=[1,2,3]. i am trying to slide it by one place to the right and insert a new element into the list. t=[1,2,3]; t = t[1:].append(4); t becomes none type, i can resort to the usual t = t[1:] + [4] but to remedy my understanding why does the original mechanism not work as expected ?
[14:54:33] <Trigraph> s/right/left
[14:54:37] *** Quits: someuser (~user@197.54.40.212) (Ping timeout: 240 seconds)
[14:54:45] <bjs> Trigraph: append doesn't return a value
[14:54:53] <bjs> Trigraph: so `t = (...).append(4)` makes t be None
[14:54:56] *** Joins: MikZyth (~MikZyth@host-192-158-66-217.spbmts.ru)
[14:55:17] <Trigraph> ah
[14:55:24] <supakeen> (append works in-place so it doens't return a new list)
[14:55:30] *** Joins: bnchs (~bnchs@105.157.30.234)
[14:55:36] <Trigraph> my bad, late night stupor :/
[14:56:12] <Repiphany> What output were you expecting, `t == [2,3,4]`?
[14:56:13] <Trigraph> t = t[1:] + [4] seems inefficient, perhaps i should use a dequeue or something ?
[14:56:37] <bjs> Trigraph: if you're pushing and popping things of both ends then yes, a deque is probably a better structure
[14:56:40] <Trigraph> Repiphany, yes. but i understand that since append returns None t is lost for ever.
[14:56:45] <Repiphany> deque with a maxsize would work if that's what you're actually intending
[14:57:50] <Trigraph> t = t[1:] + [4] would create a new list and in case the # of samples is huge then it would appear that this involves a new alloc somewhere under the hood and a free of original t.
[14:58:44] <Trigraph> thinking about it further, lists dont have any mechanism to achieve what i am trying to accomplish ? without the overhead
[14:59:19] <jinsun> yes, deque exists for that reason
[14:59:42] *** Joins: merijn (~merijn@c-001-001-018.client.esciencecenter.eduvpn.nl)
[15:00:18] <kosh> acresearch, just so you know compiling doesn't do much to protect c++, you can see that from how quickly copy protection on video games gets broken or hacks are created for games
[15:00:19] <Trigraph> okay, seems like a perfect reason to use deque
[15:02:11] *** Quits: karlnashville (~karl@2601:482:4280:4cf0:e422:697:f231:3d38) (Ping timeout: 250 seconds)
[15:02:14] *** Joins: Ha-Jo (~hajo@2a01:c23:948b:8b00:821f:2ff:feef:dabf)
[15:02:49] *** Joins: unyu (~pyon@user/pyon)
[15:03:46] *** Quits: dengtianhua (~dengtianh@198.57.27.172) (Remote host closed the connection)
[15:04:19] *** Quits: wingsorc (~wingsorc@user/wingsorc) (Quit: Leaving)
[15:04:56] *** Quits: merijn (~merijn@c-001-001-018.client.esciencecenter.eduvpn.nl) (Ping timeout: 245 seconds)
[15:05:59] *** Joins: vitali64 (~vitali64@user/vitali64)
[15:06:08] *** Quits: unyu (~pyon@user/pyon) (Client Quit)
[15:06:53] *** Joins: kostkon_ (~androirc@2.142.66.94.static.otenet.gr)
[15:07:06] <supakeen> Why is it called deque.
[15:07:16] <supakeen> Double ended queue?
[15:07:18] <nedbat> yes
[15:07:21] <supakeen> And do you pronounce it deck?
[15:07:29] <nedbat> that's what they say to do
[15:07:49] <jinsun> oh, I used to say de-queue
[15:08:13] <dsc_> does someone know how to pronounce mysql
[15:08:14] <bjs> supakeen: that's how I pronounce it
[15:08:23] <bjs> dsc_: it depends who you wish to annoy
[15:08:33] <bjs> if you want to annoy everyone pronounce it M-Y-Sequel
[15:08:33] <dsc_> bjs: preferably everyone
[15:08:37] <jinsun> my-es-que-el
[15:08:41] *** Quits: Croves (~Croves@ec2-52-39-74-136.us-west-2.compute.amazonaws.com) (Quit: Client closed)
[15:08:51] <lericson> dsc_: deck
[15:08:59] <dsc_> >_>
[15:09:37] <bjs> dsc_: when I feel more diplomatic I pronounce it "My-S-Q-L" so that nobody can complain
[15:09:53] <lericson> this is actually how i say it
[15:10:14] <dsc_> so we have a formal and informal pronunciation
[15:10:15] <lericson> my es cue ell, that is
[15:10:41] <mrwick> "maria d b" ?
[15:10:42] <supakeen> I prefer to pronounce all abbreviations in my native language to great dismay of coworkers :)
[15:10:48] <lericson> yes also
[15:10:55] <lericson> mariad B if you want to piss people off
[15:11:10] *** Quits: rindolf (~shlomif@inkscape/dev/shlomif) (Remote host closed the connection)
[15:11:25] <lericson> em ar ia de be
[15:11:32] <lericson> ok i'll stop
[15:11:41] *** Joins: dme86 (~dan@user/dan86)
[15:11:42] <lericson> supakeen: that's just flavorful
[15:11:44] *** Joins: SallyAhaj (~SallyAhaj@user/sallyahaj)
[15:11:52] <lericson> i frequently up my accent for the same reason
[15:12:07] <lericson> maybe splice in a native word here and there that is mutually intelligibile
[15:13:17] *** Joins: bomb-on (~bomb-on@194.144.47.113)
[15:14:02] <supakeen> Of course, in Dutch 'database' + a t spells 'databeest' which is a data animal, I prefer that name.
[15:14:18] <lericson> databeast
[15:14:22] <lericson> what a product name
[15:14:22] <supakeen> Yea, that.
[15:14:25] <lericson> quick, buy the domain
[15:14:34] <lericson> we're too late!
[15:14:42] <dsc_> supakeen: in dutch, is it 'roeter' or 'rauter' ?
[15:14:45] <lericson> by more than a decade! oh no!
[15:14:50] <dsc_> supakeen: when referring to a router
[15:14:55] <supakeen> I apparently forgot how to English but in English pronunciation it makes less sense.
[15:15:21] <supakeen> dsc_: I say router but it's a point of contention.
[15:15:30] <supakeen> If I'm feeling French: routeur.
[15:15:35] <lericson> ever heard that iron maiden song? goes "3-3-0-6, the number of the data-beast"
[15:15:36] <dsc_> supakeen: a CTO I used to work for settled on 'roeter'
[15:15:51] <supakeen> lericson: :D
[15:16:20] <lericson> rauter is the only way to say it
[15:16:29] <lericson> unless you're french
[15:16:45] *** Quits: dme86 (~dan@user/dan86) (Ping timeout: 256 seconds)
[15:16:45] *** Quits: ice99 (~ice9@user/ice9) (Ping timeout: 256 seconds)
[15:16:59] <supakeen> The correct way to pronounce it is the same way as "route" in your native language.
[15:17:06] <lericson> so, not at all?
[15:17:11] <supakeen> :)
[15:17:49] <lericson> to be clear you mean roeter like rooter?
[15:17:53] *** Quits: vitali64 (~vitali64@user/vitali64) (Ping timeout: 256 seconds)
[15:17:57] <lericson> actually they're different i guess
[15:17:59] *** Joins: walterwhip (~www@user/walterwhip)
[15:18:11] <dsc_> I know some people who work at CWI/Nikhef who insist on 'Pieton' and not PAY-TON - I usually don't take Dutch bastardized versions serious but these folks actually *made* Python in the early 90s so who knows
[15:18:34] <dsc_> eh, not PAY-TON, but, PI-TON
[15:18:44] <lericson> pai-thon?
[15:18:52] <lericson> or do you mean a dutch pronunciation
[15:19:04] <lericson> i say python in my native language
[15:19:05] <lericson> sounds cute
[15:19:25] <dsc_> some at CWI (where Python was made) pronounce it like PIETON and not PAI-TON
[15:19:29] <supakeen> Adds some flavour we miss on IRC :(
[15:19:30] *** Joins: yunusemrecan (~user@176.236.76.81)
[15:19:58] <lericson> and if i'm feeling colorful i'll say pytón which is python in my native language, as said with a french accent
[15:20:02] <supakeen> dsc_: It's "peeton" for English people I think.
[15:20:15] <dsc_> supakeen: ah, yes. "peeton".
[15:20:23] <dsc_> they pronounce it like that, and its funny
[15:20:25] *** Joins: dme86 (~dan@user/dan86)
[15:20:36] <lericson> similarly i don't say bluetooth, i say blåtand
[15:20:42] <supakeen> pieton would be dutch spelling that sounds like python when pronounced in English but now we're many layers deep :D
[15:21:00] <dsc_> supakeen: Yeah exactly :p my bad
[15:21:11] <lericson> to be fair bluetooth is named for blåtand
[15:21:28] <supakeen> lericson: It's only pytón when it comes from the French region of pytón otherwise it's just pseudocode.
[15:21:42] <lericson> there is a region called pytón?
[15:21:48] <lericson> i must go there and start a family
[15:23:12] *** Quits: walterwhip (~www@user/walterwhip) (Quit: Textual IRC Client: www.textualapp.com)
[15:23:18] *** Quits: yanmaani (~yanmaani@gateway/tor-sasl/yanmaani) (Ping timeout: 276 seconds)
[15:23:28] *** Joins: c4017w__ (~c4017@209.52.68.8)
[15:24:21] *** Joins: ice9 (~ice9@user/ice9)
[15:24:53] *** Quits: revolve (~u0_a227@82-132-245-160.dab.02.net) (Read error: Connection reset by peer)
[15:24:56] *** Joins: shibboleth (~shibbolet@user/shibboleth)
[15:25:35] *** Quits: dme86 (~dan@user/dan86) (Ping timeout: 250 seconds)
[15:26:40] *** Joins: revolve (~u0_a227@cpc100838-bagu15-2-0-cust672.1-3.cable.virginm.net)
[15:27:17] *** Quits: c4017w_ (~c4017@209.52.68.8) (Ping timeout: 256 seconds)
[15:28:06] *** Joins: vitali64 (~vitali64@user/vitali64)
[15:29:13] *** Joins: luigibu (~luigi@93.176.155.54)
[15:31:32] *** Joins: harpia (~harpia@2804:2aec:205:4600:1f64:3c12:1a0e:3b09)
[15:31:39] *** Joins: gloomy (~gloomy@2001:470:69fc:105::ce00)
[15:31:40] *** Joins: pritam420 (~pritam420@2402:3a80:e51:b735:58c2:5d7c:d502:6d03)
[15:32:19] *** Joins: sn1tch3r (~sn1tch3r@user/sn1tch3r)
[15:32:19] *** Quits: sn1tch3r (~sn1tch3r@user/sn1tch3r) (Client Quit)
[15:32:59] *** Quits: duds- (~duds-@user/duds) (Remote host closed the connection)
[15:33:12] <pritam420> nice
[15:33:16] *** Joins: merijn (~merijn@c-001-001-018.client.esciencecenter.eduvpn.nl)
[15:33:26] *** Joins: yanmaani (~yanmaani@gateway/tor-sasl/yanmaani)
[15:33:39] *** Quits: yunusemrecan (~user@176.236.76.81) (Remote host closed the connection)
[15:33:47] *** Joins: duds- (~duds-@user/duds)
[15:33:53] *** Quits: ubert (~Thunderbi@2a02:8109:9880:303c:216f:fa56:c9b1:3e43) (Remote host closed the connection)
[15:34:05] *** Joins: ubert (~Thunderbi@2a02:8109:9880:303c:947b:22d6:c94:9589)
[15:36:01] *** Quits: supakeen (~user@python/site-packages/supakeen) (Quit: WeeChat 3.4)
[15:36:31] *** Joins: supakeen (~user@python/site-packages/supakeen)
[15:37:41] *** Joins: pretty_dumm_guy (trottel@gateway/vpn/protonvpn/prettydummguy/x-88029655)
[15:38:20] *** Joins: __ld (63a6f45fee@2a00:c70:1:178:170:40:189:1)
[15:39:23] *** Joins: vsantana (~Thunderbi@fttx-177136149223.usr.predialnet.com.br)
[15:39:38] *** Quits: ryu` (~ryu`@user/ryu/x-3206151) (Quit: ZNC 1.8.2 - https://znc.in)
[15:39:54] *** Joins: dme86 (~dan@user/dan86)
[15:39:59] *** Quits: fikran (~fikran@user/fikran) (Ping timeout: 256 seconds)
[15:40:40] *** Joins: d1cor (~diego@179.63.242.122)
[15:40:58] *** Quits: rigid- (~rigid@user/rigid) (Read error: Connection reset by peer)
[15:41:13] *** Joins: ryu` (~ryu`@user/ryu/x-3206151)
[15:41:23] *** Joins: blingrang (~blingrang@user/blingrang)
[15:41:23] *** Quits: shad (~shad@user/shad) (Ping timeout: 250 seconds)
[15:41:51] *** Joins: fikran (~fikran@user/fikran)
[15:41:57] *** Joins: marcello42 (~mp@p200300dfaf10fe015baf6eed7f4ef68f.dip0.t-ipconnect.de)
[15:42:00] *** Joins: otisolsen70 (~otisolsen@xd4ed80b5.cust.hiper.dk)
[15:42:58] *** Joins: Esexe_ (~aa@024-151-038-076.res.spectrum.com)
[15:43:09] *** Quits: merijn (~merijn@c-001-001-018.client.esciencecenter.eduvpn.nl) (Ping timeout: 256 seconds)
[15:43:17] *** Quits: Falcon| (andreas@user/falcon/x-0540249) (Ping timeout: 240 seconds)
[15:43:50] *** Joins: rigid (~rigid@user/rigid)
[15:44:55] *** Quits: mncheckm (~mncheck@193.224.205.254) (Quit: Leaving)
[15:45:19] *** Quits: eyepeetee (~aa@024-151-038-076.res.spectrum.com) (Ping timeout: 256 seconds)
[15:45:26] *** Joins: Falcon| (andreas@user/falcon/x-0540249)
[15:47:19] *** Joins: pycurious (~Adium@user/pycurious)
[15:47:24] *** Joins: blingrang_ (~blingrang@user/blingrang)
[15:47:39] *** Quits: vsantana (~Thunderbi@fttx-177136149223.usr.predialnet.com.br) (Quit: vsantana)
[15:47:44] *** Quits: supakeen (~user@python/site-packages/supakeen) (Quit: WeeChat 3.4)
[15:47:54] *** Quits: blingrang (~blingrang@user/blingrang) (Ping timeout: 260 seconds)
[15:48:01] *** Joins: supakeen (~user@python/site-packages/supakeen)
[15:48:43] *** Joins: ijaz (ijaz@2a01:4f8:141:1272::2)
[15:49:14] *** Quits: pritam420 (~pritam420@2402:3a80:e51:b735:58c2:5d7c:d502:6d03) (Quit: Leaving)
[15:49:25] *** Joins: vsantana (~Thunderbi@fttx-177136149223.usr.predialnet.com.br)
[15:50:02] *** Quits: harpia (~harpia@2804:2aec:205:4600:1f64:3c12:1a0e:3b09) (Read error: Connection reset by peer)
[15:51:52] *** Quits: gopar (~gopar@c-67-164-79-22.hsd1.ca.comcast.net) (Remote host closed the connection)
[15:54:23] *** Quits: dme86 (~dan@user/dan86) (Ping timeout: 256 seconds)
[15:55:45] *** Joins: sudomann (~sudomann@98.219.211.182)
[15:55:46] *** Quits: phlixi_ (~phlixi@aftr-62-216-205-153.dynamic.mnet-online.de) (Remote host closed the connection)
[15:56:12] <sudomann> As a matter of convention, does `assert` belong in anything other than testing modules?
[15:56:44] <supakeen> It's a hotly debated topic :)
[15:56:48] *** Joins: xkuru (~xkuru@user/xkuru)
[15:56:48] <sudomann> Maybe better phrased as: is `assert` acceptable outside of testing modules?
[15:56:52] <sudomann> Hmm
[15:56:54] <supakeen> In Python you will mostly see it in testcases indeed.
[15:56:59] *** Joins: merijn (~merijn@c-001-001-018.client.esciencecenter.eduvpn.nl)
[15:57:09] <jinsun> if you are using type checkers you can use assert to narrow types
[15:57:45] <sudomann> We've just had an exception occur due to an assert and I think error handling with a clean exit wouldve been more responsible
[15:57:46] <Yhg1s> sudomann: if you use it *as an assert*, then sure. That means you never expect the assert to fail, even if your code is used incorrectly. It's used to check for things that *should not happen*, not things that *must not happen*.
[15:57:53] <sudomann> Left behind a lockfile
[15:58:03] <Yhg1s> sudomann: because the assert will not be executed if you run Python with -O.
[15:58:28] <sudomann> Is that similar to turning off pipefail or something?
[15:58:30] <sudomann> Never seen it used
[15:58:34] *** Joins: dme86 (~dan@user/dan86)
[15:59:10] <Yhg1s> sudomann: it's similar to C assert(), which usually does nothing if you aren't building a binary for debugging.
[15:59:28] <gloomy> Hey, this is rather specific to vscode but maybe someone knows: I made a NamedTuple with custom str() and repr(). For some reason, if the string representation of the tuple is longer than X, the debugger shows it as "<MyTuple, len() = 4>" (4 is the number of elements in the tuple). Any idea why/where that happens?
[15:59:32] <gloomy> Where does that representation even come from?
[15:59:37] *** Quits: vitali64 (~vitali64@user/vitali64) (Ping timeout: 240 seconds)
[15:59:41] <Yhg1s> sudomann: using assert to check for external things, like the presence of a lockfile, is a bad idea, and it should be a regular exception, yes.
[16:00:07] <supakeen> Yhg1s: That is also easier said than done, I'd say that with that description one would never use asserts in Python :)
[16:00:18] <Yhg1s> gloomy: a typing.NamedTuple, or a collections.namedtuple?
[16:00:21] *** Quits: pycode1 (~pycode3@2001:b07:5d28:551:c4ad:fd57:ed84:5b22) (Ping timeout: 245 seconds)
[16:00:22] *** Joins: andreasbuhr (~quassel@p549db6c6.dip0.t-ipconnect.de)
[16:00:30] *** Quits: marcello42 (~mp@p200300dfaf10fe015baf6eed7f4ef68f.dip0.t-ipconnect.de) (Ping timeout: 260 seconds)
[16:00:36] <gloomy> Yhg1s: typing.NamedTuple
[16:00:38] *** Quits: NoelFlantier3 (~Hubert@195.201.244.189) (Remote host closed the connection)
[16:01:04] <mgedmin> gloomy: possibly the debugger special-cases a repr() for anything deriving from tuple, without checking if it's a subclass with a custom __repr__
[16:01:06] *** Joins: NoelFlantier3 (~Hubert@195.201.244.189)
[16:01:07] *** Joins: nottorp (~none@89.39.71.114)
[16:01:10] *** Quits: shibboleth (~shibbolet@user/shibboleth) (Quit: shibboleth)
[16:01:14] <mgedmin> check the debugger's bug tracker maybe?
[16:01:20] <mgedmin> which debugger, btw, pdb?
[16:01:27] <acresearch> kosh: sorry dose off,,,   so what is closed source? i thought compiling a program makes it difficult to see the programming script its self,,, just a bot confused,,, please explain
[16:01:43] <acresearch> *bit confused
[16:01:45] *** Quits: Ergo^ (~ergo@91.238.59.144) (Quit: WeeChat 2.8)
[16:01:57] <gloomy> mgedmin: possibly, been trying to check but there's 600 open issues and I'm not sure what to search for
[16:02:08] <mgedmin> "custom tuple repr" or something
[16:02:13] <gloomy> mgedmin: it's the one bundled with the python extension in vscode, I think it's called debugpy?
[16:02:17] <supakeen> acresearch: difficulty is relative, there is no failsafe way to protect your program and the best defense is lawyers and contracts
[16:02:31] <acresearch> supakeen: hmmmm
[16:02:33] <supakeen> not compiling code because it makes it harder to read :)
[16:03:43] *** Quits: dme86 (~dan@user/dan86) (Ping timeout: 250 seconds)
[16:03:44] <supakeen> in the end you are running code on hardware that isn't yours so you don't have the final say about what happens
[16:04:09] <supakeen> a common way to solve this is to make your thing as a web application so the client doesn't need any code and all your secrets exist on not-their-machine.
[16:04:44] *** Joins: mixfix41 (~sdenyninn@user/mixfix41)
[16:05:09] *** Quits: GNUmoon (~GNUmoon@gateway/tor-sasl/gnumoon) (Remote host closed the connection)
[16:05:29] *** Quits: thiras (~thiras@user/thiras) (Ping timeout: 256 seconds)
[16:05:35] *** Joins: GNUmoon (~GNUmoon@gateway/tor-sasl/gnumoon)
[16:05:57] <acresearch> supakeen: ok     look at this example: https://vina.scripps.edu/downloads/      linux > 1.2MB > .tgz > autodock > bin > vina     this vina is a biosimulation pre-compiled executable,,,,   is it possible to see what it is made of?  the original programming language, the script ect... ?
[16:06:41] <mgedmin> it's called "reverse engineering", and it's more-or-less possible, but not easy
[16:07:06] <kosh> acresearch, compiling mostly makes a program faster in the case of c++, it doesn't do much to really protect it
[16:07:08] <sudomann> Yhg1s: in this case they used assert to check whether a client was authenticated
[16:07:29] <kosh> acresearch, it does discourage casual looking and copying by raising the barrier
[16:08:18] <sudomann> How does python handle a failed assert? I would assume it immediately killed the program, not giving any modules the opportunity to handle/cleanup anything, such as the lockfile left behind
[16:08:28] <acresearch> kosh: i see
[16:08:43] <mgedmin> sudomann: Python raises an AssertionError() exception
[16:08:50] <supakeen> acresearch: It's written in C++ you won't get the *original* source but one can look at the instructions it executes and piece together what it does.
[16:08:56] <mgedmin> which you're free to catch like any other exception, or let it terminate the program if uncaught
[16:09:12] <acresearch> kosh: supakeen i am not interested in closing my code, i am anti closed source,    but i am interested in understanding what is going on
[16:09:28] <acresearch> supakeen: i see,,, how did you determine that?   what did you do that gave you this information?
[16:09:37] <Yhg1s> sudomann: yep, sounds like a terrible choice.
[16:10:06] <Yhg1s> sudomann: the point of assert is that it should never be a problem if the assert was removed -- it should just change the error you get, not make the program do incorrect things.
[16:10:08] <acresearch> supakeen: interesting perspective
[16:10:11] <supakeen> acresearch: Just running `strings` on the binary provides enough file paths called .cpp and/or Boost ;)
[16:10:13] <sudomann> That AssertionError is correct. Immediately followed by: error: an unhandled error occurred: Program exited with non-zero exit code: 1
[16:10:22] <sudomann> Unsure why i glossed over that
[16:11:22] <acresearch> sudomann: wow  this is interesting,  i did not know about this command,,, i am learing something new :-)
[16:11:49] <sudomann> Well good morning to you too :)
[16:11:49] <acresearch> supakeen: ^
[16:11:57] <acresearch> sudomann: :-)
[16:12:13] <sudomann> If only I had secured sudoman before whoever that is took it
[16:12:48] <acresearch> supakeen: so these are the strings that the code is running,,, i do not understand C++ only python,,,, are these strings machine code? or are they C++ code?
[16:13:26] *** Joins: pmb (~pmb@89-64-79-51.dynamic.chello.pl)
[16:14:44] *** Joins: davidd (~hay_sup@user/memorious)
[16:14:44] <supakeen> strings, in binary parlance, are usually sequences of bytes in a certain range and delimited by a \0 byte, that's what the tool uses to try and find strings (plus some other tidbits)
[16:15:05] *** Joins: PJBoy (~PJBoy@user/pjboy)
[16:15:08] <supakeen> but i think it's out of scope to go over all of that, i just wanted to point out that 'compiling' is not a defense mechanism against people knowing things you don't want them to know
[16:15:10] <supakeen> :)
[16:15:27] <davidd> do you all review code? I have some code with asyncio where I am trying to lock on paths https://gist.github.com/daviddavis/3a1585365d2d7c1270e5f4adc479b76e
[16:15:59] *** Joins: brennoflavio (~brennofla@2804:14c:2b:87c1:1778:ded1:8de2:2c13)
[16:17:57] *** Joins: unyu (~pyon@user/pyon)
[16:18:37] <acresearch> supakeen: ok   here is a question,, i was watching that documentary about stuxnet,, you know it? its called zero days?   the experts were talking about them unable to see the code and     so what is going on there?
[16:18:53] *** Joins: wib_jonas (~wib_jonas@business-37-191-60-209.business.broadband.hu)
[16:19:13] *** Joins: JordiGH (~jordi@fencepost.gnu.org)
[16:19:13] *** Quits: JordiGH (~jordi@fencepost.gnu.org) (Changing host)
[16:19:13] *** Joins: JordiGH (~jordi@user/jordigh)
[16:19:21] *** Quits: tesuji (~quassel@2a02:908:180:9500:7dfb:8bc4:47fe:281d) (Quit: https://quassel-irc.org - Chat comfortably. Anywhere.)
[16:19:22] <supakeen> i don't know i haven't seen the documentary but obfuscating code is a cat and mouse game
[16:20:54] <acresearch> ahhhh so it is not just a normal process of compiling code  ha?    there is an extra step to delibratly hide the code?
[16:21:26] *** Quits: damonlynch_ (~ngaio@static-68-235-44-27.cust.tzulo.com) (Quit: Leaving)
[16:21:37] <supakeen> one can do many a thing both before and after compilation to make things harder but it can never be made fully impossible, at some point the code does need to go to readable instructions for your computer
[16:21:54] <acresearch> i see
[16:22:47] <tmbg_> that reminds me of a video I watched about a guy that found hidden instructions in intel processors.
[16:23:01] <tmbg_> really bright dude, that was a cool watch. maybe I can find it again
[16:23:09] <MacGyver> Yeah, except in the case of stuxnet they're using individually encrypted blocks of code that only get decrypted when run on the actual target PLCs.
[16:23:27] <tmbg_> ah here it is. https://youtu.be/KrksBdWcZgQ
[16:23:28] <MacGyver> So it's not easy to decompile those.
[16:23:28] <acresearch> MacGyver: ahhhhh  ok
[16:23:36] <MacGyver> A lot of tedious handwork.
[16:23:57] *** Joins: c4017w_ (~c4017@209.52.68.8)
[16:24:28] <tmbg_> if you can't even hide instructions that a processor supports, hiding what a program would actually be doing on execution is a nigh impossible challenge
[16:24:37] <MacGyver> Figure out what the decryption routines are, adapt those so that they run under analysis, make them decrypt the code blocks and analyze them.
[16:24:41] *** Quits: tomeaton17 (~tomeaton1@2a0c:5bc0:40:2e2f:3144:e615:d62d:8e30) (Quit: Client closed)
[16:25:38] <MacGyver> It's not impossible, no, but it's a lot of tedious work that takes time you don't have when it's most relevant.
[16:25:51] <MacGyver> (I.e. when you find the damn thing attacking your machines)
[16:26:20] *** Quits: nottorp (~none@89.39.71.114) (Quit: This computer has gone to sleep)
[16:27:06] <tmbg_> yeah the effort is a key part of it. are you concerned about fred next door, or a state actor. different people have different amounts of resources and free time
[16:27:34] *** Quits: c4017w__ (~c4017@209.52.68.8) (Ping timeout: 250 seconds)
[16:28:06] <acresearch> i see
[16:28:08] *** Joins: zeden (~zeden@user/zeden)
[16:29:03] *** Quits: JordiGH (~jordi@user/jordigh) (Ping timeout: 250 seconds)
[16:29:07] *** Quits: FinnElija (~finn_elij@user/finn-elija/x-0085643) (Remote host closed the connection)
[16:29:30] *** Joins: FinnElija (~finn_elij@user/finn-elija/x-0085643)
[16:29:48] <tmbg_> that guy in the vid has another bit on identifying what code does by looking at it as a graph
[16:30:04] *** Joins: rinzewind (~rinzewind@user/rinzewind)
[16:30:17] *** Joins: philomath (~philomath@dgplug/philomath)
[16:30:19] *** Joins: rindolf (~shlomif@inkscape/dev/shlomif)
[16:31:07] *** Joins: JordiGH (~jordi@fencepost.gnu.org)
[16:31:07] *** Quits: JordiGH (~jordi@fencepost.gnu.org) (Changing host)
[16:31:07] *** Joins: JordiGH (~jordi@user/jordigh)
[16:33:02] *** Joins: cart_man (~rynot@host-78-144-125-214.as13285.net)
[16:33:07] <tmbg_> acresearch: found that one. may interest you: https://youtu.be/4bM3Gut1hIk
[16:33:13] <cart_man> Is Python2 fine with pip3 ?
[16:33:29] <acresearch> tmbg_: ok let me see  :-)
[16:33:40] <cart_man> I am trying to replicate the aws lambda container but it seems like they are using Python2.7.18 with pip3 ?
[16:34:15] *** Joins: voidiov (~voidiov@2a02:2f0e:6203:4c00:5192:8373:f586:1f80)
[16:35:37] *** Joins: shad (~shad@user/shad)
[16:35:53] *** Joins: dme86 (~dan@user/dan86)
[16:36:39] *** Quits: mickey8 (~user@user/mickey) (Quit: Ping timeout (120 seconds))
[16:37:01] *** Joins: mickey8 (~user@user/mickey)
[16:37:06] *** Quits: falk689 (~falk689-q@gateway/tor-sasl/falk689) (Remote host closed the connection)
[16:37:08] *** Joins: falk689_ (~falk689-q@gateway/tor-sasl/falk689)
[16:37:53] *** Joins: nottorp (~kvirc@89.39.71.114)
[16:38:38] *** Quits: mcpackey (~pm0001@p5dc1ca81.dip0.t-ipconnect.de) (Remote host closed the connection)
[16:38:44] *** Joins: maxzor (~maxzor@2a01cb04054faa00c599663dbdcddcbc.ipv6.abo.wanadoo.fr)
[16:38:57] *** Quits: brennoflavio (~brennofla@2804:14c:2b:87c1:1778:ded1:8de2:2c13) (Quit: Leaving)
[16:39:21] *** Quits: naranja (~orange@user/orangeboxcutter) (Ping timeout: 276 seconds)
[16:42:00] *** Joins: naranja (~orange@user/orangeboxcutter)
[16:43:01] *** Quits: SallyAhaj (~SallyAhaj@user/sallyahaj) (Quit: Leaving)
[16:44:21] *** Joins: humberto1 (~humbertow@148.204.6.250)
[16:44:45] *** Quits: nomic (~nomic@185.198.243.198) (Quit: Leaving)
[16:45:29] *** Quits: chenqisu1 (~chenqisu1@183.217.200.249) (Ping timeout: 256 seconds)
[16:46:12] <ivii> Can anyone help me with multi process task execution? I use Pyqt and requirement is that I can't use QThread because of python's mutex blocking. So I need to use a new process, but then I run into concurrency issues or gui being blocked
[16:46:40] *** Joins: SallyAhaj (~SallyAhaj@user/sallyahaj)
[16:46:56] *** Quits: SallyAhaj (~SallyAhaj@user/sallyahaj) (Remote host closed the connection)
[16:47:03] *** Joins: humbertowoody (~humbertow@187.202.198.64)
[16:47:08] <The-Compiler> ivii: what's the thing you want to execute?
[16:47:33] *** Quits: Bronto22 (~mennoh@84-86-247-193.fixed.kpn.net) (Quit: Konversation terminated!)
[16:47:36] *** Joins: Thanattt (~Thanatos@197.210.71.132)
[16:47:48] *** Quits: zen_coder (~zen_coder@2a02:8109:a280:2d8d:7465:4c52:7351:b51c) (Remote host closed the connection)
[16:48:11] *** Joins: zen_coder (~zen_coder@2a02:8109:a280:2d8d:60ef:8113:9157:1102)
[16:49:55] *** Quits: humberto1 (~humbertow@148.204.6.250) (Ping timeout: 256 seconds)
[16:50:55] *** Quits: bitdex (~bitdex@gateway/tor-sasl/bitdex) (Quit: = "")
[16:50:59] *** Quits: ThanatosJ (~Thanatos@102.91.5.111) (Ping timeout: 252 seconds)
[16:52:16] *** Quits: Thanattt (~Thanatos@197.210.71.132) (Ping timeout: 250 seconds)
[16:53:11] <grym> supakeen: databeast mascot! https://dataset.readthedocs.io/en/latest/
[16:53:22] *** Quits: jpds (~jpds@gateway/tor-sasl/jpds) (Remote host closed the connection)
[16:53:29] *** Quits: Timvde (~tim@towely.vdeynde.com) (Remote host closed the connection)
[16:53:33] <grym> cart_man: no, that won't work; use /the/path/to/the/python -m pip and remove all doubt
[16:54:01] *** Joins: jpds (~jpds@gateway/tor-sasl/jpds)
[16:54:56] *** Joins: humberto1 (~humbertow@148.204.6.250)
[16:55:35] *** Quits: humbertowoody (~humbertow@187.202.198.64) (Ping timeout: 256 seconds)
[16:57:40] *** Quits: adanwan (~adanwan@gateway/tor-sasl/adanwan) (Remote host closed the connection)
[16:57:55] *** Joins: adanwan (~adanwan@gateway/tor-sasl/adanwan)
[16:58:42] <p-i-> regex.findall(r'\d.*?(\d)', '1 ⬆️ 2')  # ['2']
[16:58:51] <p-i-> regex.findall(r'\w.*?(\w)', 'a ⬆️ b')  # ['']
[16:59:29] <p-i-> hmm
[16:59:30] *** Joins: csm3105 (~csm3105@143.red-83-48-84.staticip.rima-tde.net)
[16:59:32] <grawity> cannot reproduce
[16:59:41] <grawity> unless 'regex' is something else than python's 're'?
[16:59:47] <MacGyver> p-i-: python3 or python2?
[16:59:52] <p-i-> yeah it's not re
[17:00:01] <grawity> why not and what is it then/
[17:00:33] <p-i-> I think I'm using some constructs not available to re
[17:00:39] *** Joins: pycode1 (~pycode3@2001:b07:5d28:551:afe0:99df:7fb3:d84b)
[17:00:51] <p-i-> https://github.com/mrabarnett/mrab-regex <-- I _think_ this is what I'm using
[17:00:57] <p-i-> I just did `pip install regex`
[17:01:07] <p-i-> I should file an issue, maybe
[17:01:44] <p-i-> yes I'm using #DEFINE which I don't think re supports
[17:01:48] <cart_man> so which PYP will work with 2.7 ?
[17:02:02] <cart_man> it seems like 2.7 is insatlled on the symlink to bin/python
[17:02:16] <p-i-> cart_man: you on a mac?
[17:02:23] <cart_man> p-i-: in a container
[17:02:37] <p-i-> can't you contain something 3.x instead?
[17:02:57] <MacGyver> cart_man: What's the reason you're on python2.7 and not 3?
[17:03:23] <supakeen> Perhaps they are just confusing `python` for `python3` :)
[17:04:13] <supakeen> Historically on most distributions `python` will, and always will, refer to `python2` for backwards compatibility.
[17:04:48] * bookworm laughs in Arch
[17:05:36] <bookworm> considering that python2 is dead though it doesn't really make sense to link python2 to /bin/python
[17:06:02] <cart_man> MacGyver: im replicating AWS lambda container
[17:06:48] <MacGyver> cart_man: And running `python3` doesn't work in an AWS lambda container?
[17:08:09] *** Joins: sudorm (~sudorm@2a01cb06a002be47d903666039764951.ipv6.abo.wanadoo.fr)
[17:08:20] <xheimlich> I still get capture groups wrong thinking they'll start from 0.
[17:08:26] *** Quits: PJBoy (~PJBoy@user/pjboy) (Killed (tantalum.libera.chat (Nickname regained by services)))
[17:08:36] *** Joins: PJBoy (~PJBoy@user/pjboy)
[17:09:30] <acresearch> §a/exit
[17:09:33] *** Quits: acresearch (~acresearc@user/acresearch) (Quit: WeeChat 2.8)
[17:09:42] *** Joins: Timvde (~tim@towely.vdeynde.com)
[17:09:53] <MacGyver> xheimlich: But they *do* start from 0.
[17:09:58] *** Joins: bloody (~bloody@user/bloody)
[17:10:00] <MacGyver> xheimlich: 0 being the entire match.
[17:10:22] *** Quits: mtk (~mtk@2601:185:200:70:20c:29ff:fe3e:59e4) (Remote host closed the connection)
[17:10:22] <MacGyver> (I believe every regex engine I've worked with follows that logic.)
[17:10:54] <grawity> the entire match is generally not *called* a "capture group", is it
[17:11:02] *** Joins: dme86_ (~dan@user/dan86)
[17:11:47] <cart_man> Well their own container isnt using it so I would just stick with what they are running at the moment. I am just using it to install oter things it seems.
[17:11:49] <cart_man> Like they are doing
[17:12:09] *** Joins: mtk (~mtk@2601:185:200:70:20c:29ff:fe3e:59e4)
[17:12:17] *** Quits: dme86 (~dan@user/dan86) (Ping timeout: 240 seconds)
[17:13:13] <MacGyver> grawity: No, but you do need access to it wherever you need access to the capture groups, usually.
[17:13:18] <grym> cart_man: if you're adding something new to a preexisting container, don't be afraid to add a modern python in there as well; it won't interfere with py2 things
[17:13:27] <MacGyver> And since there's no other sensible place to put it, it's at 0.
[17:13:31] <grym> cart_man: but you cannot expect py2 to manage new code; it generally won't
[17:14:07] <grawity> MacGyver: sounds like an implementation detail; the regex call *could* just store capture groups 1- and throw away the rest of the match
[17:14:08] <MacGyver> cart_man: Their "own container" has had an end-of-support notice for python2 nailed to its front door for ages.
[17:14:49] <MacGyver> grawity: Yes, that is an implementation detail. One which all regex engines I know of handle the same way to the point I'd call it a de facto standard.
[17:15:17] <MacGyver> cart_man: https://aws.amazon.com/blogs/compute/announcing-end-of-support-for-python-2-7-in-aws-lambda/
[17:15:28] <MacGyver> cart_man: They list 3.7, 3.8 and 3.9 as available runtimes.
[17:15:38] <MacGyver> cart_man: https://docs.aws.amazon.com/lambda/latest/dg/lambda-runtimes.html
[17:16:01] <MacGyver> cart_man: So whatever you're doing, I'd try to figure out why your container seems to have the almost-end-of-support one instead of one of the shiny ones.
[17:16:17] *** Quits: CatCow (~wtf_over@c-73-96-109-206.hsd1.or.comcast.net) (Quit: My MacBook Air has gone to sleep. ZZZzzz…)
[17:16:26] <MacGyver> cart_man: Rather than try to replicate the 2.7 one.
[17:17:27] *** Quits: jmdaemon (~jmdaemon@user/jmdaemon) (Ping timeout: 256 seconds)
[17:18:26] *** Quits: bytehackr (~Sandipan@115.187.50.151) (Remote host closed the connection)
[17:18:47] *** Joins: phlixi (~phlixi@aftr-62-216-205-153.dynamic.mnet-online.de)
[17:19:19] <MacGyver> cart_man: And the answer to that question might be contained in https://docs.aws.amazon.com/lambda/latest/dg/images-create.html#images-create-from-base
[17:19:35] <MacGyver> (I.e. you may have forgotten to ask for it)
[17:19:38] *** Joins: naan (~Naan@user/naan)
[17:20:03] *** Quits: dme86_ (~dan@user/dan86) (Ping timeout: 256 seconds)
[17:20:48] *** s4msung is now known as s5smong
[17:21:30] *** Quits: esro (~esro@nat1.krakowskiinternet.pl) (Quit: Leaving)
[17:21:37] <p-i-> boom filed! https://github.com/mrabarnett/mrab-regex/issues/451
[17:22:20] *** Quits: wib_jonas (~wib_jonas@business-37-191-60-209.business.broadband.hu) (Quit: Client closed)
[17:24:29] *** Joins: c4017w__ (~c4017@209.52.68.8)
[17:25:24] *** Quits: herjazz (~herjazz@p10513117-ipngn24101marunouchi.tokyo.ocn.ne.jp) (Quit: leaving)
[17:26:40] *** Joins: n0n4m399 (~n0n4m399@171.61.133.53)
[17:27:25] *** Joins: wib_jonas (~wib_jonas@business-37-191-60-209.business.broadband.hu)
[17:27:59] *** Quits: c4017w_ (~c4017@209.52.68.8) (Ping timeout: 256 seconds)
[17:28:17] *** Joins: nyah (~nyah@05453449.skybroadband.com)
[17:28:19] *** Joins: txtsd (~txtsd@user/txtsd)
[17:28:21] *** Joins: tristan_ (~tristan@223.62.175.186)
[17:29:56] *** Quits: maxzor (~maxzor@2a01cb04054faa00c599663dbdcddcbc.ipv6.abo.wanadoo.fr) (Ping timeout: 245 seconds)
[17:30:32] *** Quits: cebor (~cebor@user/cebor) (Quit: bye!)
[17:31:22] *** Joins: cebor (~cebor@user/cebor)
[17:31:32] *** Quits: tgamblin (~tgamblin@2607:fea8:c29d:d7c0::f824) (Quit: Leaving)
[17:32:52] *** Joins: merrinx (~merrinx@ti0028a400-1685.bb.online.no)
[17:33:50] *** Joins: msek_ (~Username@pd9fb2073.dip0.t-ipconnect.de)
[17:35:06] <cart_man> MacGyver: Yea I was actually using that sample dockfer text they are showing there. Accept without the Python. Just Ubuntu because the Python image is just an image with python on it right? And I wanted to have ubuntu so I just decided Ill go with the ubuntu route and install Python. However now I see they actually have 3.8 on that python container they use in the FROM
[17:35:16] *** Joins: purple_cthulhu (~purple_ct@188.214.96.6)
[17:36:14] *** Parts: n0n4m399 (~n0n4m399@171.61.133.53) ()
[17:36:45] *** Joins: x_kuru (~xkuru@user/xkuru)
[17:36:51] *** Emet-Selch is now known as Azem
[17:36:57] *** Quits: humberto1 (~humbertow@148.204.6.250) (Ping timeout: 240 seconds)
[17:37:33] *** Joins: revilaika (~revilaika@151.144.8.109.rev.sfr.net)
[17:38:10] *** Joins: humberto1 (~humbertow@148.204.6.250)
[17:38:11] *** Quits: msek_ (~Username@pd9fb2073.dip0.t-ipconnect.de) (Ping timeout: 250 seconds)
[17:38:15] <cart_man> MacGyver: So now I have a clean ubuntu that just apt install python3 and pip3
[17:38:16] *** Joins: tgamblin (~tgamblin@2607:fea8:c29d:d7c0::f824)
[17:38:31] <MacGyver> cart_man: I have no idea how AWS lambda images populate themselves.
[17:38:47] <MacGyver> cart_man: But that sounds reasonable.
[17:39:01] *** Quits: xkuru (~xkuru@user/xkuru) (Ping timeout: 268 seconds)
[17:39:38] <jinsun> p-i-: unrelated to your regex problem, but you should use %pip instead of !pip https://github.com/ipython/ipython/issues/12204
[17:39:58] <purple_cthulhu> Let BaseCls be an ABC class that has implemented get_instance() method. The method returns an instance of the current class (self.__class__(...)),
[17:39:58] <purple_cthulhu> For example: If SubCls is a subclass of BaseCls, type of the object returned by get_instance() will be "SubCls", what would be the proper way of type hinting the return value of get_instance()?
[17:40:14] <jinsun> p-i-: it is the usual python -m pip vs pip logic, but even better because it doesn't even require typing more
[17:40:53] <bjs> purple_cthulhu: probably with a TypeVar
[17:41:15] <bjs> purple_cthulhu: like `def f(self: T) -> T`  see https://www.python.org/dev/peps/pep-0484/#annotating-instance-and-class-methods
[17:41:36] *** Joins: eron (~eron@2804:431:c7c2:934:71db:138a:b405:a803)
[17:42:13] *** Joins: vicfred (~vicfred@user/vicfred)
[17:43:13] *** Quits: mIk3_08 (~Thunderbi@user/mik3-08/x-2852566) (Quit: mIk3_08)
[17:45:41] <p-i-> jinsun: Thanks! I'll edit the issue
[17:45:58] *** Joins: GreenResponse (~tomek@r-45-155-148-237.gpon.bialnet.pl)
[17:47:13] *** Quits: milkt (~debian@gateway/tor-sasl/milkt) (Remote host closed the connection)
[17:47:40] *** Joins: milkt (~debian@gateway/tor-sasl/milkt)
[17:47:48] *** Joins: SaltHilStroller_ (~SaltHillS@206.223.160.26)
[17:48:01] *** Joins: eyepeetee (~aa@024-151-038-076.res.spectrum.com)
[17:49:14] *** Quits: fikran (~fikran@user/fikran) (Ping timeout: 260 seconds)
[17:49:59] *** Quits: Esexe_ (~aa@024-151-038-076.res.spectrum.com) (Ping timeout: 256 seconds)
[17:50:48] *** Quits: homura (uid398348@user/homura) ()
[17:51:00] *** Parts: davidd (~hay_sup@user/memorious) (WeeChat 3.4)
[17:51:01] *** Joins: Lando-SpacePimp (~Lando-Spa@user/lando-spacepimp)
[17:51:12] *** Joins: fikran (~fikran@user/fikran)
[17:51:18] *** Joins: saroy (~Sandipan@115.187.50.151)
[17:52:15] *** Quits: pepper (~pepper@user/pepper) (Ping timeout: 256 seconds)
[17:52:37] *** Quits: humberto1 (~humbertow@148.204.6.250) (Ping timeout: 240 seconds)
[17:54:01] *** Joins: karlnashville (~karl@2601:482:4280:4cf0:d6d5:f3c0:a19e:4530)
[17:55:24] *** Joins: humberto1 (~humbertow@148.204.6.250)
[17:55:55] *** Quits: tec (~quassel@gate.sixtopia.net) (Quit: No Ping reply in 180 seconds.)
[17:56:57] *** Quits: gitesh (uid423739@id-423739.ilkley.irccloud.com) (Quit: Connection closed for inactivity)
[17:57:07] *** Joins: tec (~quassel@gate.sixtopia.net)
[17:57:55] *** Quits: nottorp (~kvirc@89.39.71.114) (Ping timeout: 256 seconds)
[17:58:15] *** Quits: luva (~luva@45.141.152.46) (Ping timeout: 256 seconds)
[17:58:16] <purple_cthulhu> bjs: Thank you very much for your help. My first attempt to get rid of the type hinting issue was to declare a TypeVar that did not work. However, the way you did it actually works. The point is the `self: T` (type notation for self argument) that I missed!
[17:58:22] <jinsun> p-i-: well, in % magics you can't put spaces after %, it has to be %pip, so now what you wrote doesn't work at all :D (instead of just being potentially wrong)
[17:59:23] *** Joins: luva (~luva@146.70.62.254)
[18:00:52] <jinsun> purple_cthulhu: you'll soon be able to use Self for it, and the PEP has alternative ways to do it currently https://www.python.org/dev/peps/pep-0673/
[18:01:14] <jinsun> (and you can start using it already if you have pyright and typing_extensions)
[18:02:16] *** Quits: vlado_ (~vladoski@93-47-225-6.ip114.fastwebnet.it) (Remote host closed the connection)
[18:02:17] *** Quits: humberto1 (~humbertow@148.204.6.250) (Ping timeout: 240 seconds)
[18:02:26] *** Joins: shibboleth (~shibbolet@user/shibboleth)
[18:02:40] *** Joins: SallyAhaj (~SallyAhaj@user/sallyahaj)
[18:04:09] *** Quits: philomath (~philomath@dgplug/philomath) (Ping timeout: 256 seconds)
[18:04:44] <merijn> Do numpy arrays show up in heap profiles?
[18:05:45] *** Joins: iomari891 (~iomari891@102.91.5.136)
[18:06:12] *** Joins: vladoski (~vladoski@2001:b07:add:d406:8acf:d5f6:a07a:5dc1)
[18:09:07] <purple_cthulhu> jinsun, Thank you another tip. As PEP673 has mentioned, This will be more concise and easier to follow!
[18:09:45] <Yhg1s> merijn: I'm not sure what you mean by 'heap profiles', but they are allocated on the heap, yes. (Pretty much all Python objects are allocated on the heap.)
[18:10:04] <Yhg1s> merijn: they do use (at least) two separate allocations, though, one for the Python object and one for the array data.
[18:10:12] <SnoopJ> Numpy provides `numpy.lib.tracemalloc_domain` for use with tracemalloc if you're looking for allocations it's performed
[18:10:19] <merijn> Yhg1s: I've been using pympler and various other tools to get dumps of the heap to figure out where my memory is going
[18:10:44] <merijn> Yhg1s: Process has 12GB resident, but all heap profilers only show 1GB python heap data, so wondering where the hell the other 11GB is
[18:11:09] <merijn> And so far I am not impressed with state of memory profilers >.>
[18:12:13] <merijn> SnoopJ: I haven't really played with tracemalloc yet, because all examples show how to instrument specific sections of code, but I have no clue which parts are relevant
[18:12:30] <Yhg1s> merijn: it's usually in places the Python interpreter doesn't know about, like the second allocations of numpy. They're still on the heap, but unless you track all pointers (like generic memory profilers, not Python-specific ones) or tell the debugger how to deal with specific types of objects, it won't show up[
[18:12:33] <SnoopJ> merijn, let's back up a step: what are you trying to learn about your code?
[18:12:58] *** Joins: humberto1 (~humbertow@148.204.6.250)
[18:13:02] *** Quits: voidiov (~voidiov@2a02:2f0e:6203:4c00:5192:8373:f586:1f80) (Remote host closed the connection)
[18:13:09] <merijn> SnoopJ: "Why is this code that really shouldn't need 12GB allocating 12 GB resident memory and where is it doing that?"
[18:13:11] *** Joins: mugen (~mugen@gateway/tor-sasl/mugen)
[18:13:28] *** Quits: leduyquang753 (~leduyquan@user/leduyquang753) (Quit: Gotta go, see you guys later.)
[18:13:40] *** Joins: Nutte35 (~Nutte@27.114.187.37)
[18:13:53] *** Quits: rickybob (~rickybob@gateway/vpn/pia/rickybob) (Ping timeout: 256 seconds)
[18:15:17] <SnoopJ> merijn, if you want a tool that "just works" I can point you to the sampling profile Scalene, which is aware of memory usage and *might* answer that question.
[18:15:23] <SnoopJ> sampling profiler*
[18:16:12] *** Quits: mug3n_ (~mugen@gateway/tor-sasl/mugen) (Ping timeout: 276 seconds)
[18:16:25] *** Quits: sudorm (~sudorm@2a01cb06a002be47d903666039764951.ipv6.abo.wanadoo.fr) (Quit: Leaving)
[18:16:40] <merijn> SnoopJ: Ah, that looks far more promising and like what I wanted then I found before
[18:17:10] <ecdhe> I install internal packages from my internal git repos with a "pkg@git+ssh://<uri>" line in requirements.txt.  I have a package I would like to refactor into namespace packages.  Can I keep this connascent code in the same repo without losing the ability for pip to install it?
[18:17:24] *** Quits: purple_cthulhu (~purple_ct@188.214.96.6) (Quit: Client closed)
[18:17:30] *** Joins: dme86 (~dan@user/dan86)
[18:17:31] *** Quits: mon_aaraj (~MonAaraj@user/mon-aaraj/x-4416475) (Ping timeout: 256 seconds)
[18:17:31] *** Joins: joeljuca (~joeljuca@2804:1eb0:c1:4036:68e7:32d0:564a:24ee)
[18:17:54] *** Joins: purple_cthulhu (~purple_ct@188.214.96.6)
[18:18:08] <ecdhe> The reference examples for native namespace packages lacks a setup.py in the parent folder, so when I organize my code that way in a repo, pip no longer sees setup.py in the repo root and won't perform an installation of the namespace package I request.
[18:18:58] <ecdhe> To make it work technically, I could split the components into seperate git repositories; then pip would install whichever package had its setup.py at the top.
[18:19:46] *** Joins: ekathva (~ekathva@2001:999:50:cab1:b7e8:130b:c792:9fd)
[18:19:52] <ecdhe> But I have this code in a single repository currently because it's very much related and still changing; if the server protocol changes, the client must also change to accomodate it.
[18:19:54] *** Quits: ekathva (~ekathva@2001:999:50:cab1:b7e8:130b:c792:9fd) (Remote host closed the connection)
[18:20:19] *** Parts: joeljuca (~joeljuca@2804:1eb0:c1:4036:68e7:32d0:564a:24ee) ()
[18:20:59] <ecdhe> I know that I could do bdist builds within the repo and compile multiple packages from the same git repository, then host them on an internal pip server
[18:21:03] *** Joins: Guest21 (~Guest21@2405:201:500b:4033:f5e0:19d2:4798:e7c8)
[18:21:19] <sco1> What examples are you looking at that don't have a setup.py in the parent folder?
[18:21:29] <p-i-> jinsun: re-fixed :)
[18:21:32] <sco1> It appears to be the first entry here: https://packaging.python.org/en/latest/guides/packaging-namespace-packages/#native-namespace-packages
[18:21:36] *** Quits: bnchs (~bnchs@105.157.30.234) (Ping timeout: 245 seconds)
[18:21:39] <ecdhe> sco1: https://github.com/pypa/sample-namespace-packages/tree/master/native
[18:21:58] <ecdhe> sco1: that directory lacks a setup.py
[18:22:13] *** Joins: mefistofeles (~mefistofe@user/mefistofeles)
[18:22:24] <ecdhe> pkg_a/ and pkg_b/ both have one
[18:22:50] <ecdhe> So in that example you'd probably just track pkg_a and pkg_b in their own repositories
[18:23:47] *** Quits: dsrt^ (~dsrt@128-092-182-020.biz.spectrum.com) (Remote host closed the connection)
[18:24:24] *** Joins: Payam (~Payam@138.106.57.131)
[18:24:33] *** Quits: dme86 (~dan@user/dan86) (Ping timeout: 256 seconds)
[18:24:56] *** Joins: nottorp (~kvirc@89.39.71.114)
[18:24:58] *** Joins: c4017w_ (~c4017@209.52.68.8)
[18:25:50] <ecdhe> OR you track them in one repo that can build seperate bdist packages but which cannot be installed via pip's git+ssh/git+https
[18:26:24] *** Quits: ayustae (Thunderbir@gateway/vpn/protonvpn/ayustae) (Quit: ayustae)
[18:27:29] *** Quits: Guest21 (~Guest21@2405:201:500b:4033:f5e0:19d2:4798:e7c8) (Quit: Client closed)
[18:28:30] *** Joins: voidiov (~voidiov@2a02:2f0e:6203:4c00:5192:8373:f586:1f80)
[18:28:31] *** Quits: c4017w__ (~c4017@209.52.68.8) (Ping timeout: 256 seconds)
[18:28:54] *** Quits: blingrang_ (~blingrang@user/blingrang) (Ping timeout: 260 seconds)
[18:29:25] *** Quits: nottorp (~kvirc@89.39.71.114) (Ping timeout: 256 seconds)
[18:30:05] *** Joins: AlanMD_ (~AlanMD@5-12-91-140.residential.rdsnet.ro)
[18:30:14] <SnoopJ> merijn, here's how looking for the allocated memory with tracemalloc would work, as well: https://bpa.st/GB7Q
[18:30:46] <SnoopJ> (this is a neat trick I didn't know about, so thanks! 😅)
[18:30:48] *** Joins: ovelny (~ovelny@user/ovelny)
[18:31:16] *** Joins: comerijn (~merijn@c-001-001-018.client.esciencecenter.eduvpn.nl)
[18:31:30] *** Joins: pepper (~pepper@user/pepper)
[18:31:42] *** Quits: merijn (~merijn@c-001-001-018.client.esciencecenter.eduvpn.nl) (Read error: Connection reset by peer)
[18:32:49] *** Quits: AlanMD (~AlanMD@193.105.140.131) (Ping timeout: 256 seconds)
[18:32:57] *** Quits: voidiov (~voidiov@2a02:2f0e:6203:4c00:5192:8373:f586:1f80) (Ping timeout: 240 seconds)
[18:33:27] *** Joins: fef (~thedawn@user/thedawn)
[18:33:45] *** Quits: califax (~califax@user/califx) (Ping timeout: 276 seconds)
[18:35:03] *** Joins: califax (~califax@user/califx)
[18:35:15] *** Joins: JUSTJOKE (~WH1T3R@37.155.218.216)
[18:35:24] <JUSTJOKE> hi
[18:35:32] <mefistofeles> hey
[18:35:32] *** Quits: shad (~shad@user/shad) (Ping timeout: 240 seconds)
[18:35:46] <JUSTJOKE> whats upp
[18:37:35] <jinsun> ecdhe: you can specify subfolder when doing git+url https://pip.pypa.io/en/stable/topics/vcs-support/#url-fragments
[18:37:54] <ecdhe> jinsun: thanks for this!  I'll give it a try
[18:37:58] *** Joins: georgios (~georgios@user/georgios)
[18:39:03] *** Quits: pycurious (~Adium@user/pycurious) (Quit: Leaving.)
[18:39:37] *** Quits: luva (~luva@146.70.62.254) (Ping timeout: 256 seconds)
[18:40:00] *** Quits: SallyAhaj (~SallyAhaj@user/sallyahaj) (Quit: Leaving)
[18:40:51] *** Joins: luva (~luva@146.70.62.236)
[18:40:58] *** Joins: voidiov (~voidiov@2a02:2f0e:6203:4c00:5192:8373:f586:1f80)
[18:41:08] *** Joins: maxzor (~maxzor@2a01cb04054faa00c599663dbdcddcbc.ipv6.abo.wanadoo.fr)
[18:41:15] *** cl is now known as ouemt
[18:41:18] *** ouemt is now known as cl
[18:41:46] *** Quits: maxzor (~maxzor@2a01cb04054faa00c599663dbdcddcbc.ipv6.abo.wanadoo.fr) (Client Quit)
[18:42:01] *** Joins: programmar (~whatever@118.69.128.37)
[18:43:22] *** Quits: d1cor (~diego@179.63.242.122) (Ping timeout: 260 seconds)
[18:43:42] *** Joins: ocnrando (~ocnrando@c-69-140-79-186.hsd1.md.comcast.net)
[18:44:02] *** Joins: c41e3a (~c41e3a@user/c41e3a)
[18:45:01] *** Joins: Vornicus (~Vornicus@2603-8000-5d07-7ef0-e46c-2249-14c3-79d4.res6.spectrum.com)
[18:45:56] *** Quits: Nutte35 (~Nutte@27.114.187.37) (Read error: Connection reset by peer)
[18:46:11] *** Parts: voidiov (~voidiov@2a02:2f0e:6203:4c00:5192:8373:f586:1f80) ()
[18:46:27] *** Joins: voidiov (~voidiov@2a02:2f0e:6203:4c00:5192:8373:f586:1f80)
[18:46:49] <ocnrando> Hello! I'm new to libera and new to python. Where can I post questions to get help with python?
[18:47:03] <SnoopJ> ocnrando, right here.
[18:47:34] <ocnrando> Thanks, SnoopJ!
[18:48:26] *** Joins: shad (~shad@user/shad)
[18:49:29] *** Joins: fandre1986 (~fandre198@181.29.33.88)
[18:50:59] *** Joins: akk (~akk@75-161-95-245.albq.qwest.net)
[18:51:45] *** Quits: ovelny (~ovelny@user/ovelny) (Quit: leaving)
[18:51:51] *** Quits: duuude (~user@user/duuude) (Ping timeout: 256 seconds)
[18:52:00] <ocnrando> I'm working with survey data and trying to prep it for analyses. I've got 99 variables that I want to recode. Currently they're all on a 5 point scale (strongly disagree, disagree, neither, agree, strongly agree). I'd like to create a copy of each variable that broadly collapses these groups into "disagree" (for "strongly disagree" and "disagree"
[18:52:01] <ocnrando> responses), neither (for "neither" responses), and agree for the two remaining agree response categories. I've created a function that does this effectively for one variable at a time. How do I apply this function to all 99 columns without doing each one individually?
[18:52:12] *** Joins: vulpes_vulpes (~vulpes_vu@62-64-207-88.dynamic.dial.as9105.com)
[18:52:16] <ocnrando> I'm really bad at for loops, so I'd appreciate some help if anyone could walk me through
[18:52:41] *** Quits: callq (~callq@2409:4062:2d8d:345f:158c:2117:eab6:8c14) (Quit: callq)
[18:53:17] <exarkun> What format is your data in?
[18:53:40] <ocnrando> Its currently a df. Imported from an excel file
[18:53:51] <ocnrando> I'm working in jupyter notebook
[18:54:07] *** Quits: luva (~luva@146.70.62.236) (Ping timeout: 256 seconds)
[18:54:34] *** comerijn is now known as merijn
[18:54:37] <SnoopJ> ocnrando, when you say "one variable at a time" are you talking about a column of the DataFrame? i.e. `yourfunc(df["somecol"])` is how you'd use this function?
[18:54:38] <exarkun> Okay.  I'll let someone else help.  I haven't used jupyter.
[18:55:24] *** Parts: macrobat (~beep@h-155-4-116-88.A785.priv.bahnhof.se) (WeeChat 3.0)
[18:55:45] *** Joins: rsx (~dummy@ppp-188-174-136-200.dynamic.mnet-online.de)
[18:55:47] *** Joins: luva4 (~luva@37.120.197.46)
[18:55:54] *** Quits: JUSTJOKE (~WH1T3R@37.155.218.216) (Quit: WeeChat 3.0.1)
[18:56:39] <ocnrando> Yes. I'm talking about a column of the df. So far, using df['col1_recode'] = df['col1'].apply(myfunc)
[18:57:09] *** Joins: Sargento (uid523534@wikipedia/Sargento-de-Hierro)
[18:57:10] <ocnrando> But I don't want to create df['col1_recode'] for col 1 all the way through col99
[18:57:44] <SnoopJ> err, that actually answers my question with "no", because that snippet you shared calls the function on each element of the particular column
[18:57:55] <ocnrando> My bad!
[18:58:04] <SnoopJ> df['col1'] is a Series object, and .apply() on that calls the given function for each value in the Series
[18:58:11] *** Joins: [itchyjunk] (~itchyjunk@user/itchyjunk/x-7353470)
[18:58:15] <SnoopJ> no apology necessary, pandas is kind of elusive about these details
[18:58:45] <ocnrando> That's helpful clarification though. I do want the function to be applied to each element in the column
[18:58:55] <SnoopJ> I was hoping you'd already written the function to deal with an entire column at once, and then you could use apply() on the DataFrame
[18:58:57] <jinsun> why is the data in 99 columns? I'd expect same kind of data in one column
[18:59:07] <SnoopJ> jinsun, presumably these are different survey questions
[18:59:13] <ocnrando> So there are 99 likert scale survey questions
[18:59:18] <ocnrando> Exactly SnoopJ
[18:59:26] <jinsun> okay 99 questions
[18:59:27] *** luva4 is now known as luva
[18:59:43] <jinsun> you can useapplymap instead of apply
[19:00:01] <SnoopJ> ah, yes.
[19:00:12] <jinsun> s/useapplymap/use applymap
[19:00:29] <SnoopJ> `newdf = df.applymap(yourfunc)` more specifically
[19:01:13] <SnoopJ> this is one of those situations where I give up on apply() being kind of annoying and it's just a good fit :)
[19:01:23] <ocnrando> lol. Thank you both!
[19:01:33] <ocnrando> so .applymap() would apply it to all 99 columns. I'll try that
[19:01:52] <SnoopJ> yea, applymap() is over the entire DataFrame and calls the function with each value
[19:01:55] *** Joins: junktext (~junktext@gateway/vpn/pia/junktext)
[19:02:00] *** Joins: imp (~imp@177-131-189-195.static.sumicity.net.br)
[19:02:01] <ocnrando> what about a programmatic way to code how to create new columns with "_recode" attached to the end? Ideally, my df would go from containing 99 columns to 198 columns
[19:02:43] <jinsun> you can use .rename to set new column names
[19:02:47] *** Joins: p-i-_ (~Ohmu@mx-ll-183.89.35-200.dynamic.3bb.co.th)
[19:02:54] <ocnrando> Or I could just create the new df, add the _recode to all colnames and then combine it with the old df
[19:02:59] <jinsun> and pd.concat to join them
[19:03:04] <SnoopJ> you could potentially take the `newdf` result from the applymap(), rename the columns, and---yea, that
[19:03:22] <ocnrando> Sounds good! I'll try that. Thank you both! I'll try now and report back
[19:04:56] *** Joins: Moosadee (~Moosadee@136.32.155.193)
[19:05:28] *** Joins: Fiji (~Fiji@user/fiji)
[19:06:15] *** Quits: p-i- (~Ohmu@mx-ll-183.89.35-200.dynamic.3bb.co.th) (Ping timeout: 256 seconds)
[19:06:16] <The-Compiler> man, students writing code can be cruel
[19:06:22] *** Parts: c41e3a (~c41e3a@user/c41e3a) ()
[19:06:27] <The-Compiler> dictStatsMF["Shortest name"] = (lambda x: entry[0] if len(dictStatsMF.setdefault("Shortest name", 'aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa')) > x else dictStatsMF["Shortest name"])(len(entry[0]))
[19:06:38] <sco1> lol
[19:06:41] <The-Compiler> the contents of that string was about my reaction when reading this line, and I still don't get how it works
[19:06:58] <han-solo> "we will watch your career with great interest"
[19:07:03] *** Joins: vitali64 (~vitali64@user/vitali64)
[19:07:08] <SnoopJ> The-Compiler, does it ever take the not-lambda branch?
[19:07:40] <SnoopJ> also, ow
[19:07:56] <The-Compiler> SnoopJ: I don't know if I even want to try understanding what's going on, I'll just tell them to use min(..., key=len) next time please :D
[19:08:38] <SnoopJ> if the first parenthesized bit is always the lambda, it makes that and calls it, I soooort of get what's going on. I would expect a TypeError for the other branch :)
[19:08:47] *** Joins: joaofukuda (~joaofukuk@2804:431:c7f4:345c:9441:82c4:a226:af6b)
[19:08:53] <SnoopJ> which I think only occurs if "Shortest name" is the empty string
[19:09:26] <The-Compiler> I don't think there is a non-lambda branch in it, right?
[19:09:38] <The-Compiler> the branch is inside the lambda
[19:09:46] <SnoopJ> oh, you're right
[19:09:55] <SnoopJ> that is definitely write-only code, though
[19:10:17] *** Joins: blingrang_ (~blingrang@user/blingrang)
[19:10:19] *** Joins: dg_dg (~dg_dg@gateway/vpn/pia/dgdg/x-00698222)
[19:10:56] *** Quits: luva (~luva@37.120.197.46) (Ping timeout: 250 seconds)
[19:11:38] <t4nk_freenode> running kde plasma, I have the problem that bCNC, using tkinter does not display any text anywhere... when I run 'idle' that crashes with     self.width = pixel_width // zero_char_width ZeroDivisionError: integer division or modulo by zero
[19:11:44] <t4nk_freenode> however
[19:11:57] <t4nk_freenode> with a second user on my system... both programs run fine
[19:12:06] <The-Compiler> I've also seen very creative usages of pathlib, like checking if pathlib.Path is a PosixPath or not, and then using + "/" or + "\\" based on that
[19:12:14] *** Joins: luva (~luva@37.120.197.46)
[19:12:15] <SnoopJ> :(
[19:12:37] *** Joins: otisolsen70_ (~otisolsen@xd4ed80b5.cust.hiper.dk)
[19:12:45] <t4nk_freenode> also, when I compile dev-lang/tk without the freetype use flag, ... the original account runs both programs aswell, though they look horrible
[19:13:02] <The-Compiler> oh well, back to grading, 60 down, 40 to go...
[19:13:06] *** Joins: arinov (~arinov@213.194.126.155)
[19:13:33] *** Quits: thevishy (~Nishant@2405:201:f005:c007:e0f1:5635:e895:47c6) (Quit: Leaving)
[19:13:41] *** Joins: dme86 (~dan@user/dan86)
[19:14:04] *** Joins: ovelny (~ovelny@user/ovelny)
[19:14:53] *** Quits: ovelny (~ovelny@user/ovelny) (Client Quit)
[19:15:49] *** Joins: Hackerpcs (~user@user/hackerpcs)
[19:16:07] *** Quits: otisolsen70 (~otisolsen@xd4ed80b5.cust.hiper.dk) (Ping timeout: 256 seconds)
[19:16:45] *** Quits: ekathva_ (~ekathva@2001:999:50:cab1:cb06:9935:dc:f7e7) (Remote host closed the connection)
[19:17:05] *** Joins: otisolsen70 (~otisolsen@xd4ed80b5.cust.hiper.dk)
[19:18:15] *** Quits: otisolsen70 (~otisolsen@xd4ed80b5.cust.hiper.dk) (Client Quit)
[19:19:02] *** Joins: nuclearg1 (~nucleargr@c-73-150-253-137.hsd1.nj.comcast.net)
[19:19:51] *** Quits: karlnashville (~karl@2601:482:4280:4cf0:d6d5:f3c0:a19e:4530) (Quit: Konversation terminated!)
[19:20:17] *** Quits: otisolsen70_ (~otisolsen@xd4ed80b5.cust.hiper.dk) (Ping timeout: 240 seconds)
[19:21:26] <ocnrando> SnoopJ and @jinsun, it worked! thank you both so much! This saves me so much time!
[19:21:56] <SnoopJ> ocnrando, more importantly: does it make sense?
[19:23:16] <ocnrando> Thanks for double-checking! I think does, although it'll help to go into the documentation to better understand the difference between .apply() and .applymap()
[19:25:00] <SnoopJ> a big point of distinction is that apply() is actually two functions in the preceding discussion: DataFrame.apply() calls the function several times with a Series argument (each row or column depending on what the axis argument is). Series.apply() calls the function with each value in the Series, since they are already 1-dimensional
[19:25:10] <SnoopJ> but that sounds close enough to yes :)
[19:25:21] *** Joins: gambl0re (~gambl0re@2607:fea8:a59f:c360::82dc)
[19:25:28] *** Joins: c4017w__ (~c4017@209.52.68.8)
[19:26:40] *** Joins: ovelny (~ovelny@user/ovelny)
[19:26:57] *** Quits: luva (~luva@37.120.197.46) (Ping timeout: 240 seconds)
[19:27:32] *** Joins: luva (~luva@37.120.197.52)
[19:28:36] *** Quits: dme86 (~dan@user/dan86) (Ping timeout: 256 seconds)
[19:29:09] *** Quits: c4017w_ (~c4017@209.52.68.8) (Ping timeout: 256 seconds)
[19:29:23] *** Quits: wib_jonas (~wib_jonas@business-37-191-60-209.business.broadband.hu) (Quit: Client closed)
[19:29:51] <ocnrando> Right SnoopJ That's helpful in combination with the documentation that I found and an article that goes into detail on the differences between .apply(), .applymap(), and .map()
[19:30:05] *** Quits: felixschloesser[ (~felixschl@2001:470:69fc:105::1:64ed) (Quit: You have been kicked for being idle)
[19:30:30] <ocnrando> In addition to having my problems solved, I do actually want to learn how to get better at python over time. So thanks again for checking to make sure it makes sense
[19:30:43] *** Joins: dez (uid92154@user/dez)
[19:32:19] *** Joins: wac (~wac@user/wac)
[19:32:49] *** byzafk is now known as byzandula
[19:33:08] *** Joins: Staunch (~Staunch@c-24-7-237-208.hsd1.mn.comcast.net)
[19:34:01] *** Quits: vladoski (~vladoski@2001:b07:add:d406:8acf:d5f6:a07a:5dc1) (Remote host closed the connection)
[19:34:08] *** Quits: ovelny (~ovelny@user/ovelny) (Quit: leaving)
[19:34:24] *** Quits: bluedust_ (~bluedust@117.204.132.5) (Remote host closed the connection)
[19:35:29] *** Joins: Esexe_ (~aa@024-151-038-076.res.spectrum.com)
[19:36:03] *** Quits: luva (~luva@37.120.197.52) (Ping timeout: 256 seconds)
[19:36:25] *** Quits: zeenk (~zeenk@2a02:2f04:a30d:1300:51a3:bcfc:6cda:9fc5) (Quit: Konversation terminated!)
[19:37:28] *** Quits: tec (~quassel@gate.sixtopia.net) (Quit: quit)
[19:37:33] *** Joins: SuperLag (~akulbe@user/superlag)
[19:37:34] *** Quits: vanessa (~farawayas@103.160.128.7) (Remote host closed the connection)
[19:37:52] *** Quits: LimeOn (~user@user/limeon) (Quit: .)
[19:37:59] *** Joins: karlnashville (~karl@2601:482:4280:4cf0:3deb:e271:97d4:d2e7)
[19:38:15] <wyre> what are the advantages of using ini files with configparser instead just yaml files?
[19:38:49] <grym> wyre: well, you don't have to install pyyaml
[19:38:58] <grym> yaml, specifically, has some footguns
[19:39:09] <grym> but i can't say i use INI at all
[19:39:21] *** Quits: eyepeetee (~aa@024-151-038-076.res.spectrum.com) (Ping timeout: 256 seconds)
[19:39:29] <wyre> what do you mean by "footguns"?
[19:40:03] <grym> wyre: https://noyaml.com/  here's a laundry list of gotchas; my 'favorite' being that the bare country code for norway evaluates to False on deserialization
[19:40:21] <exarkun> unfortunately in the comparison between ini and yaml, neither one comes out looking great
[19:40:26] <grym> neither are :)
[19:40:37] *** Joins: Barones (~Barones@user/Barones)
[19:40:41] *** Quits: byzandula (~byzandula@beerbq.net) (Quit: BEERBQ)
[19:40:57] *** Joins: DarkTrick_ (~DarkTrick@pl-749-047.bunbun.ne.jp)
[19:41:36] *** Joins: byzandula (~byzandula@beerbq.net)
[19:41:37] *** Quits: DarkTrick (~DarkTrick@pl-749-047.bunbun.ne.jp) (Ping timeout: 240 seconds)
[19:41:37] *** Quits: mrwick (~mrwick@user/mrwick) (Ping timeout: 256 seconds)
[19:42:08] <wyre> exarkun, grym I guess configparser at least provide some checking capabilities
[19:42:26] <grym> wyre: if i want that, i deserialize into a pydantic class
[19:42:29] <grym> (and i usually do want that)
[19:42:40] *** Joins: dntreou (~yakiza@inet-2a02-6900-8808-e010--4c0.oracle-ocna.com)
[19:43:02] <grym> i'm all on board with "prevent representation of invalid states", especially at the borders of the program
[19:43:07] *** Joins: ofcour468 (~user@190.191.104.128)
[19:43:20] *** Quits: Moosadee (~Moosadee@136.32.155.193) (Remote host closed the connection)
[19:43:40] *** Quits: ofcour468 (~user@190.191.104.128) (Client Quit)
[19:44:49] <wyre> grym, but I guess pydantic can be used with both, yaml and ini files
[19:45:33] <grym> parse_obj() takes a lot of stuff
[19:46:01] <grym> it is pretty agnostic in that respect; you can parse_obj(json.loads, or yaml.loads, or whatever configparser does, or toml.loads, etc
[19:46:20] *** Joins: dme86 (~dan@user/dan86)
[19:46:22] <grym> surely there's some xml thing that would work, but i can't say i've ever tried
[19:46:51] *** Joins: divingBordom (~divingBor@autodiscover.gastops.com)
[19:47:12] <divingBordom> yo question real quick
[19:48:16] <divingBordom> I'm using the daytime module for python and have a daytime inside an object, generated by: genericDay.dateVal = dt.datetime(2040,12,30)
[19:48:28] <wyre> well, then I the only one advantage I can see for configparser is that it's in the stdlib 🤔 grym, exarkun
[19:49:21] <divingBordom> but when I try outputting it as a string with self.classDate.strftime("%x") I get the error: AttributeError: 'day' object has no attribute 'strftime'
[19:49:34] *** Joins: Asgaroth (~Asgaroth@93.107.191.92)
[19:49:55] *** Quits: roxfan (~roxfan@2a02:a03f:a2be:4f00:645d:2a7c:96cb:dc8) (Ping timeout: 250 seconds)
[19:49:57] *** Joins: spiri__ (~LuksNuke@gateway/tor-sasl/luksnuke)
[19:49:58] <divingBordom> How do I handle this?
[19:50:13] <Wooble> grym: you see a bug, I see a brilliant tribute to norwegian nihilist philosopher peter zapffe.
[19:50:16] <divingBordom> are dates handled differently from date and times?
[19:50:36] *** Joins: the_lanetly_052 (~the_lanet@194.135.168.200)
[19:50:54] <The-Compiler> divingBordom: looks like self.classDate is a 'day' object (probably the genericDay, a thing you wrote yourself?), and not a datetime.datetime
[19:50:57] <grym> wyre: "it's not yaml" may also be an advantage, as a matter of taste
[19:51:17] <grym> Wooble: life is pain; serialization, more so
[19:51:27] <The-Compiler> :D
[19:52:22] <wyre> I see, grym 😆
[19:52:36] *** Joins: dtux (~dtux@c-98-207-149-218.hsd1.ca.comcast.net)
[19:52:51] *** Quits: jay-m126 (~jay-m@41.205.30.141) (Remote host closed the connection)
[19:52:51] *** Quits: jay-m126_ (~jay-m@41.205.30.141) (Remote host closed the connection)
[19:52:51] *** Quits: jay-m1261 (~jay-m@41.205.30.141) (Remote host closed the connection)
[19:53:05] *** Quits: fandre1986 (~fandre198@181.29.33.88) (Quit: Connection closed)
[19:54:23] <divingBordom> The-Compiler yeah, crap I forgot to call a member too! XD
[19:54:28] <divingBordom> thanks!
[19:54:31] *** Quits: vitali64 (~vitali64@user/vitali64) (Read error: No route to host)
[19:55:25] *** Joins: Alex86ns (~Alex86ns@188.120.99.212)
[19:55:44] <Alex86ns> hello everyone.
[19:55:59] *** Quits: merijn (~merijn@c-001-001-018.client.esciencecenter.eduvpn.nl) (Ping timeout: 250 seconds)
[19:56:17] *** Joins: vitali64 (~vitali64@user/vitali64)
[19:56:25] <Alex86ns> I trying to run two flask application on different port. Is it posible and how?
[19:56:43] <Alex86ns> I don't wanna run two different .py scripters.
[19:58:17] *** Quits: fikran (~fikran@user/fikran) (Ping timeout: 240 seconds)
[19:58:41] *** Quits: dntreou (~yakiza@inet-2a02-6900-8808-e010--4c0.oracle-ocna.com) (Ping timeout: 245 seconds)
[20:00:33] *** Joins: fikran (~fikran@user/fikran)
[20:00:58] *** Joins: dntreou (~yakiza@105-209-145-202.access.mtnbusiness.co.za)
[20:01:49] *** Joins: timkofu (~timkofu@user/timkofu)
[20:02:15] *** Joins: nomic (~nomic@185.198.243.198)
[20:03:15] *** Joins: jay-m126 (~jay-m@41.205.30.141)
[20:03:19] *** Joins: jay-m126_ (~jay-m@41.205.30.141)
[20:03:20] *** Joins: jay-m1261 (~jay-m@41.205.30.141)
[20:03:32] *** Quits: tristan_ (~tristan@223.62.175.186) (Read error: Connection reset by peer)
[20:03:50] *** Joins: tristan_ (~tristan@223.62.175.186)
[20:03:59] *** Quits: merrinx (~merrinx@ti0028a400-1685.bb.online.no) (Quit: WeeChat 3.3)
[20:04:42] *** Joins: ThePhilgrim (~ThePhilgr@151.40.115.120)
[20:04:46] *** Joins: merrinx (~merrinx@ti0028a400-1685.bb.online.no)
[20:05:07] *** Joins: bluedust (~bluedust@117.204.132.5)
[20:07:16] *** Quits: tWqaq (~tWqaq@240e:389:5d1c:ff00:7aeb:a1de:ad16:4ce) (Quit: Leaving)
[20:08:19] *** Quits: tristan_ (~tristan@223.62.175.186) (Remote host closed the connection)
[20:09:04] *** Quits: Barones (~Barones@user/Barones) (Quit: Leaving)
[20:09:31] *** Quits: pkapp (~pkapp@c-75-74-40-214.hsd1.fl.comcast.net) (Ping timeout: 245 seconds)
[20:10:06] *** Joins: pkapp (~pkapp@2601:58c:c500:6900:2fe0:625b:bbb0:5318)
[20:10:29] *** Quits: vitali64 (~vitali64@user/vitali64) (Ping timeout: 250 seconds)
[20:14:30] *** Quits: sdfgsdfg (~dfghsfgs@user/sdfgsdfg) (Quit: ayo yoyo ayo yoyo hololo, hololo.)
[20:14:51] *** Joins: Moosadee (~Moosadee@136.32.155.193)
[20:16:09] <CrtxReavr> That's more of a web-server and networking question, than a python question.
[20:16:15] *** Joins: casastorta (~casastort@neo2.krivokuca.net)
[20:16:26] <CrtxReavr> Though, the answer should be yes.
[20:16:31] *** Quits: Payam (~Payam@138.106.57.131) (Ping timeout: 256 seconds)
[20:18:01] *** Joins: elena_re (~elena@213.194.126.155)
[20:18:05] *** Quits: elena_re (~elena@213.194.126.155) (Client Quit)
[20:18:33] *** Parts: programmar (~whatever@118.69.128.37) (Leaving)
[20:18:39] *** Joins: toma (~RubbishPu@node-1w7jr9yhpl48atfwfn9v3xt6i.ipv6.telus.net)
[20:19:12] *** Joins: slowButPresent (~slowButPr@user/slowbutpresent)
[20:20:29] *** Quits: Alex86ns (~Alex86ns@188.120.99.212) (Ping timeout: 256 seconds)
[20:20:50] <toma> [https://bpa.st/STAA, line 2]. I'm not familiar with the code on line 2 (memo: Dict[int, int] = {0: 0, 1: 1}). What's the "memo: " part called?
[20:21:02] *** Joins: lakrass (~lakrass@user/lakrass)
[20:21:16] <han-solo> `memo` is the name and `Dict[int, int]` is the annotation
[20:21:29] *** Joins: vitali64 (~vitali64@user/vitali64)
[20:21:36] <han-solo> `name: type = value`
[20:21:50] <SnoopJ> I wonder how serving multiple applications from the same runtime would work. Are there non-blocking servers?
[20:22:28] <SnoopJ> Or I guess you could run the servers on separate threads, maybe?
[20:22:53] *** Joins: vladoski (~foo@2001:b07:add:d406:e59b:f4ba:39d7:98c4)
[20:23:03] *** Quits: timkofu (~timkofu@user/timkofu) (Ping timeout: 250 seconds)
[20:23:23] *** Quits: kosh (~kosh@user/kosh) (Read error: Connection reset by peer)
[20:23:32] <vladoski> what's the difference between repr and replib.repr?
[20:24:02] <SnoopJ> vladoski, what is replib?
[20:24:29] <toma> han-solo: I'm having trouble googling that. Can you suggest some keywords?
[20:24:36] <vladoski> SnoopJ reprlib sorry
[20:24:53] *** Quits: domicron (~domicron@gateway/tor-sasl/domicron) (Remote host closed the connection)
[20:24:55] <han-solo> toma: https://www.python.org/dev/peps/pep-0484/
[20:25:14] <han-solo> https://docs.python.org/3/library/typing.html
[20:25:33] *** Quits: caveman (~caveman@gateway/tor-sasl/caveman) (Ping timeout: 276 seconds)
[20:25:33] *** Joins: domicron (~domicron@gateway/tor-sasl/domicron)
[20:25:57] *** Joins: c4017w_ (~c4017@209.52.68.8)
[20:26:05] <SnoopJ> vladoski, ah. This library isn't familiar to me, but it looks like the library is intended to limit the size of the resulting string
[20:26:23] <toma> han-solo: thanks.
[20:26:49] *** Joins: gopar (~gopar@c-67-164-79-22.hsd1.ca.comcast.net)
[20:26:49] *** Quits: blingrang_ (~blingrang@user/blingrang) (Read error: Connection reset by peer)
[20:26:55] *** Quits: Moosadee (~Moosadee@136.32.155.193) (Remote host closed the connection)
[20:27:14] *** Joins: caveman (~caveman@gateway/tor-sasl/caveman)
[20:27:24] *** Joins: bluedust_ (~bluedust@185.248.85.41)
[20:28:25] *** Quits: bluedust (~bluedust@117.204.132.5) (Ping timeout: 256 seconds)
[20:28:32] *** Quits: shad (~shad@user/shad) (Quit: WeeChat 3.0)
[20:28:47] *** Quits: gopar (~gopar@c-67-164-79-22.hsd1.ca.comcast.net) (Client Quit)
[20:28:48] *** Joins: blingrang_ (~blingrang@user/blingrang)
[20:29:07] *** Joins: gopar (~gopar@c-67-164-79-22.hsd1.ca.comcast.net)
[20:29:20] *** Quits: c4017w__ (~c4017@209.52.68.8) (Ping timeout: 252 seconds)
[20:29:26] *** Joins: kosh (~kosh@user/kosh)
[20:29:52] *** Joins: the_lanetly_052_ (~the_lanet@194.135.155.254)
[20:30:00] *** Joins: merijn (~merijn@c-001-001-018.client.esciencecenter.eduvpn.nl)
[20:31:53] *** Quits: the_lanetly_052 (~the_lanet@194.135.168.200) (Read error: Connection reset by peer)
[20:32:16] *** Quits: luigibu (~luigi@93.176.155.54) (Quit: WeeChat 3.4)
[20:33:44] *** Joins: octav1a (~quassel@173.195.145.98)
[20:34:49] <octav1a> How can I make installing my pip package intentionally fail with a certain message directing users to a different pip package.
[20:35:00] *** Quits: merijn (~merijn@c-001-001-018.client.esciencecenter.eduvpn.nl) (Ping timeout: 250 seconds)
[20:35:04] <grym> octav1a: raise in setup.py, if you have one
[20:35:10] *** Joins: emf (~emf@2601:602:9400:8f0:435:b386:5ad4:6eb2)
[20:35:20] <octav1a> raise with generic Exception() ?
[20:35:28] *** Quits: pkapp (~pkapp@2601:58c:c500:6900:2fe0:625b:bbb0:5318) (Quit: ZNC 1.7.5+deb4 - https://znc.in)
[20:35:31] *** Joins: whaley (~whaley@2603-6080-a301-33d1-9961-d0f4-1873-ea22.res6.spectrum.com)
[20:35:35] <exarkun> anything you raise is going to interrupt the install
[20:35:45] *** Joins: pkapp (~pkapp@c-75-74-40-214.hsd1.fl.comcast.net)
[20:35:48] <exarkun> nothing you raise is going to cause a nicely formatted message to be presented to a user
[20:36:00] <exarkun> you get to show the user a traceback, formatted how pip wants to format it
[20:36:21] <exarkun> what are you trying to accomplish?
[20:36:58] *** Quits: kostkon_ (~androirc@2.142.66.94.static.otenet.gr) (Quit: AndroIRC - Android IRC Client ( http://www.androirc.com ))
[20:37:32] <octav1a> I'd like to say something like "this is super deprecated please see this new information for the maintained version ; if you would really like to use this package for reproducibility, please clone the git repo and run "git checkout <whatever> ; pip install . "
[20:37:54] *** Quits: han-solo (~hanish@user/han-solo) (Quit: leaving)
[20:38:05] *** Quits: Madda (~Madda@2a05:f6c3:1935:0:2990:3a03:c1e1:2949) (Remote host closed the connection)
[20:38:25] *** Quits: ubert (~Thunderbi@2a02:8109:9880:303c:947b:22d6:c94:9589) (Remote host closed the connection)
[20:38:37] *** Quits: rindolf (~shlomif@inkscape/dev/shlomif) (Read error: Connection reset by peer)
[20:38:37] *** Quits: the_lanetly_052_ (~the_lanet@194.135.155.254) (Ping timeout: 240 seconds)
[20:38:58] *** Joins: rindolf (~shlomif@inkscape/dev/shlomif)
[20:39:35] *** Joins: vdamewood (~vdamewood@fedora/vdamewood)
[20:39:37] *** Joins: Madda (~Madda@2a05:f6c3:1935:0:2990:3a03:c1e1:2949)
[20:43:11] *** Joins: pmcnabb0 (~pmcnabb@user/pmcnabb)
[20:43:22] *** Joins: magla (~gelignite@d5367123.access.ecotel.net)
[20:44:04] <jinsun> why not do it when it is imported?
[20:44:39] *** Joins: FluffyMask (~masque@user/fluffymask)
[20:44:40] *** Quits: karlnashville (~karl@2601:482:4280:4cf0:3deb:e271:97d4:d2e7) (Remote host closed the connection)
[20:44:57] <jinsun> you can even hide all the module attributes inside a module level getattr, so that you can warn everytime they are accessed
[20:45:09] *** Quits: spiri__ (~LuksNuke@gateway/tor-sasl/luksnuke) (Remote host closed the connection)
[20:45:39] *** Joins: iphone (~spiderman@user/spiderman)
[20:45:57] *** Quits: unyu (~pyon@user/pyon) (Ping timeout: 240 seconds)
[20:46:06] *** Joins: bluedust (~bluedust@117.204.128.175)
[20:46:36] *** Quits: pmcnabb (~pmcnabb@user/pmcnabb) (Ping timeout: 245 seconds)
[20:46:36] *** pmcnabb0 is now known as pmcnabb
[20:47:00] *** Joins: spiri__ (~LuksNuke@gateway/tor-sasl/luksnuke)
[20:48:12] *** Joins: unyu (~pyon@user/pyon)
[20:48:57] *** Quits: whaley (~whaley@2603-6080-a301-33d1-9961-d0f4-1873-ea22.res6.spectrum.com) (Quit: My MacBook has gone to sleep. ZZZzzz…)
[20:49:57] *** Quits: bluedust_ (~bluedust@185.248.85.41) (Ping timeout: 256 seconds)
[20:50:09] *** Quits: dme86 (~dan@user/dan86) (Ping timeout: 250 seconds)
[20:51:17] *** Quits: boris[m] (~borisruna@2001:470:69fc:105::32f3) (Quit: issued !quit command)
[20:51:47] *** Joins: jeho (~jehoshaph@user/jehoshaphat)
[20:51:53] *** Quits: saroy (~Sandipan@115.187.50.151) (Ping timeout: 256 seconds)
[20:52:23] *** Joins: crashrep (~crashrep@user/crashrep)
[20:53:36] *** Joins: pmcnabb4 (~pmcnabb@user/pmcnabb)
[20:54:14] *** Quits: mexen (uid495612@user/mexen) (Quit: Connection closed for inactivity)
[20:55:01] *** Quits: jeho (~jehoshaph@user/jehoshaphat) (Quit: Leaving)
[20:55:23] *** Quits: pmcnabb (~pmcnabb@user/pmcnabb) (Ping timeout: 256 seconds)
[20:55:23] *** pmcnabb4 is now known as pmcnabb
[20:55:25] *** Joins: whatsupdoc (uid509081@id-509081.hampstead.irccloud.com)
[20:56:00] *** Quits: spiri__ (~LuksNuke@gateway/tor-sasl/luksnuke) (Remote host closed the connection)
[20:56:16] *** Joins: mncheckm (~mncheck@193.224.205.254)
[20:56:18] *** Quits: georgios (~georgios@user/georgios) (Quit: Konversation terminated!)
[20:56:37] *** Quits: ttys000 (~ttys000@user/ttys000) (Ping timeout: 240 seconds)
[20:56:51] *** Joins: d1cor (~diego@179.63.242.122)
[20:57:25] *** Quits: cliluw (~cliluw@47.147.73.223) (Ping timeout: 240 seconds)
[20:57:55] *** Joins: cliluw (~cliluw@47.147.73.223)
[20:58:08] *** Quits: SaltHilStroller_ (~SaltHillS@206.223.160.26) (Ping timeout: 256 seconds)
[20:58:17] *** Joins: jeho (~jehoshaph@user/jehoshaphat)
[20:58:37] *** Quits: mncheck (~mncheck@193.224.205.254) (Ping timeout: 240 seconds)
[20:58:39] *** Quits: rsx (~dummy@ppp-188-174-136-200.dynamic.mnet-online.de) (Quit: rsx)
[20:59:06] *** yoyoyo is now known as MrCollinsGA
[20:59:16] *** Joins: Proxysna (~Proxysna@62.119.254.142)
[21:00:36] *** Joins: elwoodpd (~elwoodpd@85.211.102.5)
[21:01:06] *** Joins: luva (~luva@185.168.9.236)
[21:01:21] *** Joins: zeenk (~zeenk@2a02:2f04:a30d:1300:51a3:bcfc:6cda:9fc5)
[21:02:50] <elwoodpd> I have been trying out SQLModel
[21:03:01] <elwoodpd> and have run into a bit of a blank when it comes to wanting to store dates
[21:03:13] <elwoodpd> do I need to just fall back to sqlalch
[21:04:54] *** Joins: dme86 (~dan@user/dan86)
[21:05:30] *** Quits: admin123 (~harrymore@ool-2f12f5b1.dyn.optonline.net) (Ping timeout: 256 seconds)
[21:05:36] *** Joins: ttys000 (~ttys000@user/ttys000)
[21:06:15] *** Joins: cthulchu (~Cthulchu@69-172-160-196.cable.teksavvy.com)
[21:09:01] *** Quits: tobybl (~tobybl@214.242.200.146.dyn.plus.net) (Remote host closed the connection)
[21:09:24] <elwoodpd> I guess I can just use strings
[21:09:34] *** Quits: toma (~RubbishPu@node-1w7jr9yhpl48atfwfn9v3xt6i.ipv6.telus.net) (Quit: Leaving)
[21:11:22] <grym> elwoodpd: i haven't tried; what happens if you just annotate the attribute as a datetime?
[21:11:42] <elwoodpd> lets find out!
[21:12:05] *** Quits: vladoski (~foo@2001:b07:add:d406:e59b:f4ba:39d7:98c4) (Quit: My MacBook has gone to sleep. ZZZzzz…)
[21:12:49] <grym> it might even dwim/dtrt
[21:13:03] <elwoodpd> works...
[21:13:08] <elwoodpd> why didn't I just do that haha
[21:13:14] <elwoodpd> Cheers
[21:13:22] <grym> eyyy; what did it create the field type as? (curious)
[21:13:50] <grym> (you'll probably want to know how to control that in any case, or trust sqla to do it right)
[21:14:05] *** Joins: dreamon (~dreamon@p54b14d36.dip0.t-ipconnect.de)
[21:14:40] *** Quits: xheimlich (~xheimlich@179.218.1.150) (Quit: leaving)
[21:15:49] <elwoodpd> DATETIME
[21:18:06] <elwoodpd> oh no
[21:18:13] <elwoodpd> some of the dates have gone very wrong.
[21:18:48] <grym> welcome to timekeeping
[21:18:56] <grym> (some databases dont' have that type; sqlite, for example)
[21:19:08] *** Quits: jeho (~jehoshaph@user/jehoshaphat) (Quit: Leaving)
[21:19:25] <elwoodpd> I think I am going to go back to storing an iso string...
[21:19:37] *** Quits: dme86 (~dan@user/dan86) (Ping timeout: 240 seconds)
[21:19:49] *** Joins: jeho (~jehoshaph@user/jehoshaphat)
[21:19:56] <grym> seems reasonable to me; that's what i do with sqlite, anyway :D
[21:21:23] *** Joins: SaltHilStroller_ (~SaltHillS@206.223.160.26)
[21:21:50] *** Parts: __ld (63a6f45fee@2a00:c70:1:178:170:40:189:1) (Error from remote client)
[21:22:00] *** Joins: eyepeetee (~aa@024-151-038-076.res.spectrum.com)
[21:22:16] *** Joins: __ld (63a6f45fee@2a00:c70:1:178:170:40:189:1)
[21:22:32] *** Joins: mon_aaraj (~MonAaraj@user/mon-aaraj/x-4416475)
[21:23:08] *** Joins: smoke (~smoke@user/smoke)
[21:23:57] *** Parts: __ld (63a6f45fee@2a00:c70:1:178:170:40:189:1) (Error from remote client)
[21:24:06] *** Quits: Esexe_ (~aa@024-151-038-076.res.spectrum.com) (Ping timeout: 245 seconds)
[21:25:27] *** Joins: __ld (63a6f45fee@2a00:c70:1:178:170:40:189:1)
[21:25:53] *** Quits: SaltHilStroller_ (~SaltHillS@206.223.160.26) (Ping timeout: 256 seconds)
[21:26:28] *** Joins: c4017w__ (~c4017@209.52.68.8)
[21:26:50] *** Joins: admin123 (~harrymore@ool-2f12f5b1.dyn.optonline.net)
[21:27:25] *** Quits: luva (~luva@185.168.9.236) (Ping timeout: 250 seconds)
[21:28:01] *** Joins: vladoski (~foo@2001:b07:add:d406:e59b:f4ba:39d7:98c4)
[21:28:11] *** Quits: jeho (~jehoshaph@user/jehoshaphat) (Quit: Leaving)
[21:29:12] *** Joins: SaltHilStroller_ (~SaltHillS@206.223.160.26)
[21:29:19] *** Quits: vladoski (~foo@2001:b07:add:d406:e59b:f4ba:39d7:98c4) (Client Quit)
[21:29:35] *** Joins: pvergain1 (~Thunderbi@2a01:e0a:223:690:44d8:1b81:5bb3:bc9)
[21:29:37] *** Quits: c4017w_ (~c4017@209.52.68.8) (Ping timeout: 240 seconds)
[21:29:55] *** Joins: Moosadee (~Moosadee@198.248.96.43)
[21:30:22] *** Joins: emf_ (~emf@2620:10d:c090:400::5:57ea)
[21:30:32] *** Quits: pvergain (~Thunderbi@2a01:e0a:223:690:44d8:1b81:5bb3:bc9) (Read error: Connection reset by peer)
[21:30:32] *** pvergain1 is now known as pvergain
[21:30:46] <dba> is there any package that would take would auto detect date format and parse it to a specific one?
[21:31:04] *** Joins: jeho (~jehoshaph@user/jehoshaphat)
[21:31:14] *** Joins: CodeMouse92 (~CodeMouse@user/codemouse92)
[21:31:31] <grym> dba: pendulum and arrow have fairly generous parse functions that do their best; i don't know of anything better
[21:31:50] <Wooble> dateutil.parse works ok, too.
[21:32:09] *** Quits: vdamewood (~vdamewood@fedora/vdamewood) (Quit: My MacBook Pro has gone to sleep. ZZZzzz…)
[21:32:17] <dba> thanks grym
[21:32:30] *** Joins: sn1tch3r (~sn1tch3r@user/sn1tch3r)
[21:32:32] *** Quits: sn1tch3r (~sn1tch3r@user/sn1tch3r) (Remote host closed the connection)
[21:32:41] <grym> it's a thorny problem, though, so don't go looking for magic solutions here :)
[21:32:47] <dba> Wooble, date util does work with date like `5 days ago` (as far as I know)
[21:33:02] *** Quits: p-i-_ (~Ohmu@mx-ll-183.89.35-200.dynamic.3bb.co.th) (Read error: Connection reset by peer)
[21:33:38] *** Joins: p-i- (~Ohmu@mx-ll-183.89.35-200.dynamic.3bb.co.th)
[21:33:39] * SnoopJ would not call that a date format per se
[21:33:57] *** Quits: emf (~emf@2601:602:9400:8f0:435:b386:5ad4:6eb2) (Ping timeout: 240 seconds)
[21:34:37] *** Quits: mon_aaraj (~MonAaraj@user/mon-aaraj/x-4416475) (Ping timeout: 240 seconds)
[21:34:43] *** Quits: wovixo (~wovixo@128.104.205.49) (Quit: Leaving)
[21:36:32] <Wooble> is this for web scraping?
[21:36:42] *** Joins: mat001 (~mat001@c-69-181-155-247.hsd1.ca.comcast.net)
[21:36:57] *** Joins: mon_aaraj (~MonAaraj@user/mon-aaraj/x-4416475)
[21:37:33] *** Quits: admin123 (~harrymore@ool-2f12f5b1.dyn.optonline.net) (Ping timeout: 256 seconds)
[21:38:27] *** Quits: dntreou (~yakiza@105-209-145-202.access.mtnbusiness.co.za) (Ping timeout: 250 seconds)
[21:38:58] *** Quits: Gustavo6046 (~Gustavo60@user/gustavo6046) (Quit: Leaving)
[21:39:10] *** Joins: vladoski (~foo@2001:b07:add:d406:e59b:f4ba:39d7:98c4)
[21:39:35] *** Parts: transhumanist (~steven@2601:196:8800:35f0:ab85:4468:267e:686a) ()
[21:39:50] *** Quits: mat001 (~mat001@c-69-181-155-247.hsd1.ca.comcast.net) (Remote host closed the connection)
[21:39:52] <akk> I didn't find arrow that useful for parsing (it's good for flexible human-readable output), but dateutil.parser isn't bad.
[21:40:17] *** Joins: dntreou (~yakiza@inet-2a02-6900-8808-e010--3f.oracle-ocna.com)
[21:40:25] *** Joins: mat001 (~mat001@72.28.108.216)
[21:40:45] *** Joins: lothar_m (~lothar_m@user/lothar-m/x-8875873)
[21:42:08] *** Quits: cart_man (~rynot@host-78-144-125-214.as13285.net) (Quit: Konversation terminated!)
[21:43:43] *** Joins: Codaraxis (~Codaraxis@user/codaraxis)
[21:44:14] *** Joins: the_lanetly_052_ (~the_lanet@194.135.155.254)
[21:45:15] *** Quits: SaltHilStroller_ (~SaltHillS@206.223.160.26) (Ping timeout: 256 seconds)
[21:46:26] *** Joins: roxfan (~roxfan@2a02:a03f:a2be:4f00:645d:2a7c:96cb:dc8)
[21:46:30] *** Quits: kosh (~kosh@user/kosh) (Ping timeout: 250 seconds)
[21:46:36] *** Joins: kosh_ (~kosh@user/kosh)
[21:46:57] *** Quits: mon_aaraj (~MonAaraj@user/mon-aaraj/x-4416475) (Ping timeout: 240 seconds)
[21:48:11] *** Joins: tobybl (~tobybl@214.242.200.146.dyn.plus.net)
[21:48:28] *** Quits: varaindemian (uid73404@id-73404.ilkley.irccloud.com) (Quit: Connection closed for inactivity)
[21:49:11] *** Joins: mon_aaraj (~MonAaraj@user/mon-aaraj/x-4416475)
[21:49:19] *** Joins: forgotmynick (uid24625@id-24625.hampstead.irccloud.com)
[21:50:04] *** Joins: pycurious (~Adium@user/pycurious)
[21:51:39] <Jong> What's that command for building from source so it points to the repo folder for easy debugging  and code alternation?
[21:51:43] *** Quits: smoke (~smoke@user/smoke) (Ping timeout: 256 seconds)
[21:51:44] <Jong> python -m pip install something?
[21:52:08] <Wooble> Jong: -e <path to dir>
[21:52:18] <Jong> yes that's it! thank you
[21:52:19] <SnoopJ> or --editable if you prefer longform options
[21:52:36] *** Joins: scurfee (~mikami@broadband-77-37-146-212.ip.moscow.rt.ru)
[21:52:55] *** Joins: xaxas (~quassel@aurata.jtopia.org)
[21:53:03] *** Joins: dcimense (~dcimer@ip68-5-48-79.oc.oc.cox.net)
[21:53:38] *** Joins: spawnmc (~spawnmc@user/spawnmc)
[21:53:43] <Jong> How about using develop? python setup.py develop
[21:54:19] *** Quits: Moosadee (~Moosadee@198.248.96.43) (Ping timeout: 256 seconds)
[21:54:19] *** Quits: MajorBiscuit (~MajorBisc@c-001-001-054.client.tudelft.eduvpn.nl) (Ping timeout: 256 seconds)
[21:54:20] <Jong> found a good answer here: https://stackoverflow.com/questions/30306099/pip-install-editable-vs-python-setup-py-develop
[21:54:28] <The-Compiler> Jong: don't call setup.py manually nowadays
[21:55:00] <dcimense> I just installed MIRC on my pc.  This IRC server didn't require me to enter a password.. is that normal? (This is the first channel I get some form of traffic coming in. I know this is not the right channel for that type of question. Anyone know?)
[21:55:19] <The-Compiler> Jong: https://blog.ganssle.io/articles/2021/10/setup-py-deprecated.html for a longer (well, long!) explanation
[21:55:26] <akk> Is there a difference between pip install -i and setup.py develop? I've been using them interchangeably.
[21:55:38] <akk> Oh, nm, missed the link that looks like it answers that.
[21:55:43] <grym> dcimense: https://libera.chat/guides/registration ; https://libera.chat/guides/mirc
[21:55:50] <SnoopJ> dcimense, it's not exactly unusual, but your questions about IRC are a better fit for #libera
[21:56:07] <dcimense> thanks guys.
[21:56:21] <The-Compiler> dcimense: it depends on the channel, this channel mandated that users be registered for a long time, but that was recently dropped
[21:56:27] *** Joins: ovelny (~ovelny@user/ovelny)
[21:56:58] <The-Compiler> many larger channel still require a registered account though, mainly because it keeps spambots and trolls away
[21:57:16] <The-Compiler> (and makes it easier to ban them if they still make it in)
[21:57:18] <dcimense> This is good information. Thanks.
[21:57:34] <spawnmc> If I run a shell command that returns output like this: https://bpa.st/QU4Q and i wanted to read this output and print out only the values containing the hostname(host.domain.com) for each line, how would i go about it?
[21:58:01] <SnoopJ> Jong, expanding on what The-Compiler said, `pip install --editable` works on a strictly-larger set of projects, namely ones that don't _have_ a setup.py: https://setuptools.pypa.io/en/latest/userguide/quickstart.html#development-mode
[21:58:08] *** Quits: Valeria (~Valeria@user/valeria) (Read error: Connection reset by peer)
[21:58:11] *** Quits: Fiji (~Fiji@user/fiji) (Ping timeout: 256 seconds)
[21:58:49] *** Quits: tobybl (~tobybl@214.242.200.146.dyn.plus.net) (Remote host closed the connection)
[21:58:51] <SnoopJ> but yes, invoking setup.py directly is a little archaic now, although it's a little unclear if there's any official deprecations on the part of setuptools (I can't find any)
[21:58:58] *** Joins: ayustae (Thunderbir@gateway/vpn/protonvpn/ayustae)
[21:59:00] *** Joins: Valeria (~Valeria@user/valeria)
[22:00:32] *** Quits: goldfish (~goldfish@user/goldfish) (Ping timeout: 240 seconds)
[22:00:37] *** Quits: elwoodpd (~elwoodpd@85.211.102.5) (Ping timeout: 240 seconds)
[22:00:52] <supakeen> i think there's a ticket i recently saw that summarizes it well:
[22:00:54] <supakeen> > Bug 260324 - Mk/Uses/python.mk: setup.py deprecated (sort of)
[22:01:03] <SnoopJ> hah
[22:01:51] *** Quits: emf_ (~emf@2620:10d:c090:400::5:57ea) (Quit: emf_)
[22:02:15] *** Quits: bluedust (~bluedust@117.204.128.175) (Remote host closed the connection)
[22:02:17] *** Quits: ayustae (Thunderbir@gateway/vpn/protonvpn/ayustae) (Client Quit)
[22:02:24] <The-Compiler> spawnmc: run the subprocess via subprocess.run, get the hostnames with re.findall
[22:02:44] *** Joins: emf (~emf@2620:10d:c090:400::5:57ea)
[22:03:08] *** Joins: jstein (~jstein@gentoo/developer/jstein)
[22:04:17] *** Joins: Guest19 (~Guest19@2601:647:5280:2a50:ac8b:76d2:9030:fa62)
[22:04:53] *** Joins: SGautam (uid286066@id-286066.ilkley.irccloud.com)
[22:05:07] *** Joins: ssbr (~ssbr@python/site-packages/ssbr)
[22:05:26] *** Joins: setuid (sid191390@canonical/setuid)
[22:05:28] *** Joins: vdamewood (~vdamewood@fedora/vdamewood)
[22:05:56] *** Joins: Guest1778 (~Guest1778@97.75.89.126)
[22:06:04] <setuid> Fun question: I'm trying to test some cleanup code, when the main script dies for unexpected reasons... is there a facility to _intentionally cause_ the script to abort, leaving stale processes running and such, so I can test this pre-flight cleanup?
[22:06:56] *** Quits: trace987 (~trace@ip5b42976d.dynamic.kabel-deutschland.de) (Remote host closed the connection)
[22:07:06] *** Quits: dvx (~dvx@5.181.92.64) (Quit: dvx)
[22:07:07] <spawnmc> The-Compiler so since the number of fields in a given line is unknown I'm stuck with regex yeah?
[22:07:55] *** Quits: fikran (~fikran@user/fikran) (Ping timeout: 250 seconds)
[22:08:23] *** Quits: andreasbuhr (~quassel@p549db6c6.dip0.t-ipconnect.de) (Quit: https://quassel-irc.org - Chat comfortably. Anywhere.)
[22:08:33] <Guest1778> How do I get this: http://manpages.ubuntu.com/manpages/impish/man1/pdf2svg.1.html on my Anaconda environment? I am trying to solve my bug here: https://i.imgur.com/5bH85Uy.png
[22:08:35] *** Joins: gumol (~gumol@195-240-229-124.fixed.kpn.net)
[22:09:02] *** Joins: a0z1 (~a0z1@cpc158779-hari22-2-0-cust168.20-2.cable.virginm.net)
[22:09:08] *** Joins: Betal (~Betal@user/betal)
[22:09:22] *** Joins: smoke (~smoke@user/smoke)
[22:09:30] <setuid> Guest1778: apt-get -y install pdf2svg
[22:09:54] *** Joins: fikran (~fikran@user/fikran)
[22:09:57] <Guest1778> Is there a way to do that in my Windows bash terminal?
[22:10:27] <Guest1778> well, I am actually in my Anaconda terminal
[22:10:40] <spawnmc> actually i don't think im stuck with regex...
[22:10:40] *** Quits: smoke (~smoke@user/smoke) (Client Quit)
[22:10:41] <Guest1778> Anaconda environment
[22:11:11] <ssbr> setuid: are you looking for the `kill` unix command (or your OS's equivalent)?
[22:11:33] <The-Compiler> spawnmc: I suppose you could also do something like   [word for word in proc.stdout.split() if word.count(".") == 2]   if that works for your usecase (or possibly > 2)
[22:11:53] <The-Compiler> spawnmc: depends a bit on how close the other data is to the hosts
[22:12:06] <setuid> ssbr: No, I want to intentionally introduce a crash into my python script's runtime, so I can leave called processes running (selenium browser objects), so my cleanup functions can reap those. I have the cleanup code written (using psutil), but want to make sure it's bulletproof.
[22:12:13] <The-Compiler> spawnmc: also, depending on the tool you are running, it might also have an option to give you more machine-readable output
[22:12:20] *** Quits: vladoski (~foo@2001:b07:add:d406:e59b:f4ba:39d7:98c4) (Quit: My MacBook has gone to sleep. ZZZzzz…)
[22:12:22] <SnoopJ> setuid, does os.abort() do what you want? (I don't know how it interacts with subprocesses)
[22:12:40] <EtherMan> Is the env var PYTHONDONTWRITEBYTECODE seriously the only way to disable the __pycache__ dir creations? Setting that in .bashrc doesn't really help when wanting to run it from crontab since that never loads those, nor can I do the PYTHONDONTWRITEBYTECODE=1 /usr/bin/python3 script.py
[22:12:42] <ssbr> setuid: so you want to crash the currently running process, from inside the process?
[22:12:46] <setuid> SnoopJ: Can I throw that into random functions in the code, and have it work?
[22:12:54] <spawnmc> The-Compiler good point. I hope so (:
[22:12:58] <ssbr> yes, you can crash from any function you like :)
[22:13:06] <SnoopJ> setuid, yes, it does almost exactly what abort() would do in C
[22:13:12] <setuid> ssbr: I want to cause an unexpected exception in the Python script, while it's running. That script might launch processes, or not, but leaves them stale and running
[22:13:17] <setuid> SnoopJ: Ok, testing now
[22:13:17] <The-Compiler> os.kill(os.getpid(), signal.SIGSEGV)   is fun too
[22:13:25] *** Quits: gumol (~gumol@195-240-229-124.fixed.kpn.net) (Client Quit)
[22:13:27] <ssbr> setuid: if you want a controlled crash, and not an immediate kill, you'd throw an exception, yes
[22:13:37] <ssbr> setuid: abort() will not run cleanup handlers
[22:13:48] *** Quits: mat001 (~mat001@72.28.108.216) (Ping timeout: 250 seconds)
[22:13:52] <SnoopJ> yea, abort might be *too* hard a crash if you're trying to test "oops" code
[22:13:58] <Guest1778> I have tried https://anaconda.org/conda-forge/pdf2svg but the command does not work
[22:13:58] <The-Compiler> 1/0 is a nice way to force an exception which is somewhat unique
[22:14:04] <marduk> EtherMan: you can set environment variables in a crontab (or at least you could the last time I used cron (which was a long time ago))
[22:14:14] <ssbr> The-Compiler: I do `raise 1/0` just to be funny
[22:14:26] <ssbr> interesting that it's not just me that does 1/0!
[22:14:30] <ssbr> I always feel weird doing it
[22:14:40] <The-Compiler> nedbat tweeted about it recently too, might even be where I got it from
[22:14:46] <SnoopJ> well, it's weird to raise a not-exception :P
[22:14:48] <setuid> Actually, this works perfectly... problem is, sometimes the code dumps, times out (due to non-code factors), and I need to do some preflight cleanup of stale browser.Firefox or browser.Chrome objects, based on pid
[22:14:49] <EtherMan> marduk: Only global ones no?
[22:14:50] <The-Compiler> Guest1778: define "does not work"
[22:15:00] <ssbr> SnoopJ: haha fair, the raise is definitely weird
[22:15:03] <Guest1778> "PackagesNotFoundError: The following packages are not available from current channels:
[22:15:03] <Guest1778>   - pdf2svg"
[22:15:06] *** Quits: cosimone (~user@93-47-228-151.ip115.fastwebnet.it) (Remote host closed the connection)
[22:15:11] <ssbr> I think I started doing it because it silences a lint warning at my work, idk
[22:15:25] *** Joins: elwoodpd (~elwoodpd@85.211.102.5)
[22:15:27] <setuid> SnoopJ: https://paste.debian.net/hidden/3744804a/
[22:15:30] <Guest1778> Is it because I am on Windows?
[22:15:31] <SnoopJ> ssbr, it's kinda moot since the exception occurs before the raise gets to play
[22:15:32] <The-Compiler> hmm ok, I have no idea about conda
[22:15:32] <jinsun> Guest1778: there are no files for windows https://anaconda.org/conda-forge/pdf2svg/files
[22:15:38] <Guest1778> yeah.. frick
[22:15:42] <ssbr> SnoopJ: right, it's just a cute trick that silences unused-value lint warnings
[22:15:51] <ssbr> and it's a pun to boot
[22:15:56] <marduk> EtherMan: by "global" do you mean "system"? No. I remember always having to set PATH in my user crontab.
[22:16:01] *** Quits: Vonter (~Vonter@user/vonter) (Quit: WeeChat 3.4)
[22:16:07] <Wooble> EtherMan: python -B
[22:16:14] <The-Compiler> Guest1778: that conda package links to the github repo which links to https://github.com/jalios/pdf2svg-windows
[22:16:22] <setuid> Guest1778: Install Ubuntu from Microsoft Store, run  your code in there, it's a real Ubuntu environment
[22:16:22] <EtherMan> marduk: No I mean like, only by setting the same vars for all crontab entries.
[22:16:39] <SnoopJ> setuid, I don't know what I'm looking at in this paste, is there a question attached to it?
[22:16:45] <The-Compiler> Guest1778: also something like Inkscape can probably do this too
[22:16:56] *** Joins: paul424 (~tom@ip-5-172-237-33.multi.internet.cyfrowypolsat.pl)
[22:17:16] <marduk> EtherMan: well if you don't like that (should it make a difference for PYTHONDONTWRITEBYTECODE?) you can also use /usr/bin/env
[22:17:18] <setuid> SnoopJ: that's the cleanup code, a bit of a big hammer, but I need to refine it a bit, selenium gives me the ability to find the pid it launched, but not the name of the process that the browser object spawned, so I have to be smart about detecting it
[22:17:25] <Guest1778> isn't inkscape a drawing program haha.
[22:17:26] <Guest1778> I found that github for windows too, but I don't know how to install it.
[22:17:26] <Guest1778> setuid oh I'll check that out
[22:17:39] <marduk> but to answer your question: no. I'm not aware of another way but it might be a --flag to python
[22:17:49] <setuid> SnoopJ: So if selenium leaves stale pids running after the crash, I can't easily find them in the next invocation
[22:17:50] <The-Compiler> Guest1778: it is, but you can also call it from the command line to do import/export stuff
[22:18:00] *** Quits: fef (~thedawn@user/thedawn) (Ping timeout: 276 seconds)
[22:18:12] <Wooble> the flag is even mentioned at https://docs.python.org/3/using/cmdline.html#envvar-PYTHONDONTWRITEBYTECODE
[22:19:06] *** Quits: zamanf (~dev@213.133.91.246) (Ping timeout: 245 seconds)
[22:19:06] <EtherMan> Wooble, Had not noticed that. It wasn't listed among the command line options ^_^;
[22:19:11] <SnoopJ> setuid, is the second process in that not part of the same process tree?
[22:19:31] *** Joins: stewie925 (~stewie925@2600:1702:44f0:35c0:d140:c463:bfea:917b)
[22:19:38] *** Joins: SaltHillStroller (~SaltHillS@206.223.160.26)
[22:19:41] <Wooble> EtherMan: python --help shows it for me. :/
[22:19:43] <setuid> SnoopJ: Right, code calls 'chromedriver' for example, for some headless driving of a page, and if the code aborts for any reason, it leaves chromedriver processes lying around
[22:19:58] <setuid> So if someone runs it a dozen times, and it crashes a dozen times, there are 12 chromedriver processes running
[22:20:13] <SnoopJ> setuid, I don't know if that means "yes" or "no" to the question I asked.
[22:20:16] <setuid> I'm trying to find, and reap those in a pre-flight check at each invocation
[22:20:27] <setuid> No, the second process is not part of the same process tree
[22:20:35] <SnoopJ> darn
[22:20:37] *** Quits: ocnrando (~ocnrando@c-69-140-79-186.hsd1.md.comcast.net) (Ping timeout: 256 seconds)
[22:20:37] <setuid> once the parent crashes, a new invocation is a new process tree
[22:21:09] <EtherMan> Wooble, not for me, but then again, this thing runs a pretty old python... Stupid STB ^_^;
[22:21:24] <EtherMan> But -B indeed works. So thanks :)
[22:21:53] *** Quits: CaryHartline (~CaryHartl@2603-8080-6a0e-8d88-f089-38a5-e7a7-68a5.res6.spectrum.com) (Quit: My iMac has gone to sleep. ZZZzzz…)
[22:22:31] *** Joins: bancroft (~bancroft@user/bancroft)
[22:22:53] *** Quits: shibboleth (~shibbolet@user/shibboleth) (Quit: shibboleth)
[22:23:18] <bancroft> if I have two dicts and I want to make a new dict with only the key value pairs where dict_a had a value and in dict_b that value turned to None. How would I do this?
[22:23:27] <bancroft> is there a zip thing
[22:23:30] *** Joins: mat001 (~mat001@72.28.108.216)
[22:23:41] <bancroft> hmm hang on
[22:23:48] *** Quits: funhouse (~funhouse@user/funhouse) (Quit: Client closed)
[22:23:49] <bjs> bancroft: just loop over dict_a and skip ones that are None in dict_b ?
[22:23:56] *** Quits: iomari891 (~iomari891@102.91.5.136) (Quit: WeeChat 3.3)
[22:24:17] <SnoopJ> bancroft, `newdict = {k: v for k,v in dict_a.items() if k in dict_b and dict_b[k] is None}` perhaps?
[22:24:19] <bjs> skip ones that are not None*
[22:24:33] *** Joins: msek_ (~Username@pd9fb2073.dip0.t-ipconnect.de)
[22:25:49] *** Joins: Pickchea (~private@user/pickchea)
[22:25:50] *** Quits: dntreou (~yakiza@inet-2a02-6900-8808-e010--3f.oracle-ocna.com) (Read error: Connection reset by peer)
[22:26:39] <bancroft> brain fart fixed, thank you bjs and SnoopJ
[22:26:50] *** Quits: shailangsa (~shailangs@host86-185-98-37.range86-185.btcentralplus.com) (Remote host closed the connection)
[22:26:54] *** Joins: smrtz (~smrtz@user/smrtz)
[22:26:56] *** Joins: c4017w_ (~c4017@209.52.68.8)
[22:28:11] *** Joins: Auron (Auron956@user/auron)
[22:28:24] <setuid> SnoopJ, ssbr thanks for the ideas!
[22:28:33] *** Parts: setuid (sid191390@canonical/setuid) (climbing the next hill)
[22:28:55] *** Joins: vladoski (~foo@2001:b07:add:d406:e59b:f4ba:39d7:98c4)
[22:29:39] *** Quits: vladoski (~foo@2001:b07:add:d406:e59b:f4ba:39d7:98c4) (Client Quit)
[22:29:49] *** Quits: elink (~elink@user/elink) (Quit: Leaving)
[22:30:15] *** Quits: Guest1778 (~Guest1778@97.75.89.126) (Ping timeout: 256 seconds)
[22:30:35] *** Quits: c4017w__ (~c4017@209.52.68.8) (Ping timeout: 256 seconds)
[22:30:36] *** Joins: dntreou (~yakiza@105-209-145-202.access.mtnbusiness.co.za)
[22:30:37] *** Joins: ocnrando (~ocnrando@c-69-140-79-186.hsd1.md.comcast.net)
[22:30:59] *** Joins: merijn (~merijn@c-001-001-018.client.esciencecenter.eduvpn.nl)
[22:32:01] *** Quits: ovelny (~ovelny@user/ovelny) (Quit: leaving)
[22:32:08] <Pickchea> Hey, I need to call scipy.stats.kde.gaussian_kde.pdf a lot and it's much too slow. I could speed it up a lot by using a lookup table instead. I think the best way would be to sample the pdf like `samples = my_kde.pdf([i for i in range(600)]); cache = samples / samples.sum()` and then I could do fast lookups like `cache(arr.astype(int))`.  Assuming the resolution of my sampling is high enough, do you think that's a good way to do it?
[22:32:36] *** Quits: adanwan (~adanwan@gateway/tor-sasl/adanwan) (Remote host closed the connection)
[22:32:53] *** Joins: adanwan (~adanwan@gateway/tor-sasl/adanwan)
[22:32:53] <Pickchea> Sorry, I meant to use brackets: `cache[arr.astype(int)]`.
[22:33:24] *** Quits: divingBordom (~divingBor@autodiscover.gastops.com) (Quit: Client closed)
[22:34:28] *** Quits: zeden (~zeden@user/zeden) (Quit: WeeChat 3.4)
[22:35:47] *** Joins: Barones (~Barones@user/Barones)
[22:35:57] *** Quits: Barones (~Barones@user/Barones) (Remote host closed the connection)
[22:36:12] *** Quits: eron (~eron@2804:431:c7c2:934:71db:138a:b405:a803) (Quit: Client closed)
[22:37:36] *** Joins: admin123 (~harrymore@cpe-69-203-109-69.nyc.res.rr.com)
[22:38:13] *** Joins: cerill (~cerill@h-155-4-198-153.A785.priv.bahnhof.se)
[22:38:29] <InPhase> Pickchea: If you have to do it a lot, you want to parallelize the lookups of your cache using numpy directly.
[22:38:37] *** Joins: Y4knotiS (~YaknotiS@cpc1-cmbg18-2-0-cust87.5-4.cable.virginm.net)
[22:39:03] <InPhase> Well, not strictly "parallelize", but the way numpy allows you to declare one operation which it then does efficiently in native code.
[22:39:09] <cerill> What would be the most pythonic way to ensure a string follows the following format "some_key=some_val,some_other_key=some_other_val,..etc etc" ?
[22:39:46] *** Joins: dme86 (~dan@user/dan86)
[22:40:45] *** Joins: calamari (~jjohnston@ip72-217-21-192.ph.ph.cox.net)
[22:42:03] *** Joins: Arw| (~Arwalk@lfbn-dij-1-972-242.w90-125.abo.wanadoo.fr)
[22:42:12] *** Joins: luva (~luva@185.168.9.233)
[22:42:14] <whatsupdoc> With PriorityQueue() is it possible to somehow to do something like key=lambda x: x.someproperty
[22:42:15] *** Joins: CaryHartline (~CaryHartl@2603-8080-6a0e-8d88-78d5-e2ea-a2f1-e76e.res6.spectrum.com)
[22:42:17] <whatsupdoc> ?
[22:42:20] *** Joins: greedom (~greedom@p200300de67146b00fd02b3152e542744.dip0.t-ipconnect.de)
[22:42:35] <ssbr> cerill: parse it into a non-string (using str.split(), str.partition()) and fail on parse errors
[22:42:57] *** Quits: Arw- (~Arwalk@lfbn-dij-1-972-242.w90-125.abo.wanadoo.fr) (Ping timeout: 256 seconds)
[22:43:14] *** Quits: dntreou (~yakiza@105-209-145-202.access.mtnbusiness.co.za) (Ping timeout: 260 seconds)
[22:43:58] *** Joins: bluedust (~bluedust@117.204.128.175)
[22:44:20] <calamari> I've always used Python on Linux, but now I need to run a script on Windows, and it uses a couple external imports (serial and PyQt5). I see there are multiple ways to install Python on Windows. Is there a recommended way to install Python on native Windows (no VMs, no WSL, no Cygwin) that is the most compatible with getting these imports working?
[22:44:55] *** Joins: dntreou (~yakiza@inet-2a02-6900-8808-e010--23.oracle-ocna.com)
[22:45:03] *** Quits: Haxxa (~Haxxa@125-253-30-213.ip4.superloop.com) (Quit: Haxxa flies away.)
[22:45:09] *** Quits: MercilessDeth (~brad@136.49.59.177) (Quit: Konversation terminated!)
[22:45:32] *** Joins: KeiraT (~k@lulzsec.co.uk)
[22:45:49] *** Joins: harpia (~harpia@2804:2aec:205:4600:1f64:3c12:1a0e:3b09)
[22:46:40] *** Joins: vladoski (~foo@2001:b07:add:d406:e59b:f4ba:39d7:98c4)
[22:47:04] *** Joins: funhouse (~funhouse@user/funhouse)
[22:47:08] *** Joins: Haxxa (~Haxxa@125-253-30-213.ip4.superloop.com)
[22:47:11] <ChrisWarrick> calamari: python.org has really nice installers
[22:47:23] <ChrisWarrick> calamari: dunno about serial, but `pip install pyqt5` should just work™
[22:47:35] *** Quits: elwoodpd (~elwoodpd@85.211.102.5) (Ping timeout: 256 seconds)
[22:47:37] <SnoopJ> python.org installers +1
[22:48:04] <calamari> ChrisWarrick: Cool. I'll go with the official install then. Thanks
[22:48:09] *** Quits: vladoski (~foo@2001:b07:add:d406:e59b:f4ba:39d7:98c4) (Client Quit)
[22:48:37] *** Quits: mtk (~mtk@2601:185:200:70:20c:29ff:fe3e:59e4) (Ping timeout: 240 seconds)
[22:48:40] *** Joins: theseb (~theseb@47-220-214-54.cnrocmta03.res.dyn.suddenlink.net)
[22:48:56] *** Quits: pycurious (~Adium@user/pycurious) (Quit: Leaving.)
[22:48:57] <ChrisWarrick> calamari: and if you meant pyserial, it’s pip-installable too
[22:49:05] <ChrisWarrick> (most things are these days)
[22:49:25] <calamari> ChrisWarrick: I think import serial is pyserial, you're right.
[22:50:21] *** Quits: lothar_m (~lothar_m@user/lothar-m/x-8875873) (Quit: WeeChat 3.5-dev)
[22:50:37] *** Quits: the_lanetly_052_ (~the_lanet@194.135.155.254) (Ping timeout: 240 seconds)
[22:50:37] *** Quits: dme86 (~dan@user/dan86) (Ping timeout: 250 seconds)
[22:50:37] <Batzy> Hi all, I've built a tree in python. I'm wondering if there is a way to iterate through terminal nodes but in a way that i wouldnt have to store all nodes in memory. I sort of want like a "compute as you go" generator type thing
[22:50:46] <calamari> One thing I remember with the offical installer is it seemed hard to run it from the command line. Is there a trick to that?
[22:50:58] <calamari> *run scripts
[22:50:59] *** kosh_ is now known as kosh
[22:51:21] *** Quits: KeiraT (~k@lulzsec.co.uk) (Quit: KeiraT)
[22:51:21] <Batzy> so i would need an iter where next(iter) would give the "leftmost" terminal node, then next(iter) on that does the same. if it's helpful, i know that all terminal nodes im looking for have the same depth
[22:51:34] *** Joins: lothar_m (~lothar_m@user/lothar-m/x-8875873)
[22:51:50] *** Joins: fofoni (~fofoni@user/fofoni)
[22:52:09] <ChrisWarrick> calamari: `py whatever.py`
[22:52:24] <Repiphany> Batzy: You could do a recursive `yield from` if I'm understanding your problem correctly
[22:52:37] <calamari> ChrisWarrick, thanks again!
[22:53:15] <SnoopJ> calamari, when you say "run it" are you talking about the installed Python or the installer itself?
[22:53:30] <Batzy> Repiphany: ill read about that
[22:53:40] *** Quits: pycode1 (~pycode3@2001:b07:5d28:551:afe0:99df:7fb3:d84b) (Ping timeout: 250 seconds)
[22:53:56] <Batzy> Repiphany: I think i will have to draw the tree a priori right
[22:54:00] <SnoopJ> oh, you said run scripts, nevermind me
[22:54:02] <SnoopJ> yes, use `py`
[22:54:21] <Wooble> calamari: the installer also asks if you want python itself on %PATH%
[22:54:37] *** Quits: smrtz (~smrtz@user/smrtz) (Ping timeout: 256 seconds)
[22:54:53] <SnoopJ> but annoyingly is so-callable only as `python` (i.e. no `python3`)
[22:55:14] <SnoopJ> (unless there's some way to get that behavior that I'm unaware of)
[22:55:16] *** Joins: ovelny (~ovelny@user/ovelny)
[22:55:25] *** Quits: mon_aaraj (~MonAaraj@user/mon-aaraj/x-4416475) (Ping timeout: 256 seconds)
[22:55:39] *** Quits: lakrass (~lakrass@user/lakrass) (Quit: WeeChat 3.4)
[22:57:14] *** Quits: dcimense (~dcimer@ip68-5-48-79.oc.oc.cox.net) (Ping timeout: 260 seconds)
[22:57:35] *** Joins: mon_aaraj (~MonAaraj@user/mon-aaraj/x-4416475)
[22:57:47] *** Quits: zen_coder (~zen_coder@2a02:8109:a280:2d8d:60ef:8113:9157:1102) (Ping timeout: 256 seconds)
[22:57:57] *** Quits: dntreou (~yakiza@inet-2a02-6900-8808-e010--23.oracle-ocna.com) (Ping timeout: 240 seconds)
[22:58:00] *** Quits: ElPresidente (~ElPreside@2600:1700:3d10:4870:c12d:9e72:1e7a:5640) (Read error: Connection reset by peer)
[22:58:03] <Batzy> idek how to begin what i need to do
[22:58:03] <Batzy> lol
[22:58:40] *** Joins: cosimone (~user@93-47-228-151.ip115.fastwebnet.it)
[22:59:19] *** Joins: humbertowoody (~humbertow@fixed-189-203-112-148.totalplay.net)
[22:59:20] *** Joins: d00gy (~tonberry@user/d00gy)
[22:59:29] *** Quits: ovnicraft (~ovnicraft@ftth-179-49-44-28.cue.celerity.ec) (Ping timeout: 256 seconds)
[22:59:38] *** Joins: kickingvegas (~cchoi@c-67-170-234-150.hsd1.ca.comcast.net)
[22:59:43] *** Quits: Arw| (~Arwalk@lfbn-dij-1-972-242.w90-125.abo.wanadoo.fr) (Ping timeout: 256 seconds)
[22:59:48] *** Joins: Moosadee (~Moosadee@198.248.96.42)
[22:59:53] *** Joins: dante-as (~dante-as@5-12-102-114.residential.rdsnet.ro)
[23:00:09] <dante-as> Hi guys, how can I remove any blank cells and move the content from the next column to the left?
[23:00:22] <dante-as> I mean with Pandas how can I achieve that
[23:00:31] *** Quits: humberto1 (~humbertow@148.204.6.250) (Ping timeout: 256 seconds)
[23:00:55] *** Joins: jdavfsxd (~rvgzuuqp@gateway/tor-sasl/rvgzuuqp)
[23:01:02] *** Joins: Arw- (~Arwalk@lfbn-dij-1-964-247.w90-125.abo.wanadoo.fr)
[23:01:02] *** Quits: imp (~imp@177-131-189-195.static.sumicity.net.br) (Quit: imp)
[23:01:13] *** Joins: ovnicraft (~ovnicraft@corp-179-49-44-28.uio.puntonet.ec)
[23:01:18] *** Joins: dme86 (~dan@user/dan86)
[23:01:42] *** Quits: cerill (~cerill@h-155-4-198-153.A785.priv.bahnhof.se) (Quit: Client closed)
[23:01:46] *** Quits: greedom (~greedom@p200300de67146b00fd02b3152e542744.dip0.t-ipconnect.de) (Remote host closed the connection)
[23:01:46] *** Joins: dntreou (~yakiza@105-209-145-202.access.mtnbusiness.co.za)
[23:02:01] *** Quits: raym (~raym@user/raym) (Quit: kernel update, rebooting...)
[23:02:18] *** Quits: ovelny (~ovelny@user/ovelny) (Quit: leaving)
[23:02:28] *** Joins: ovelny (~ovelny@user/ovelny)
[23:02:29] *** Joins: greedom (~greedom@p200300de67146b00fd02b3152e542744.dip0.t-ipconnect.de)
[23:03:01] *** Quits: ovelny (~ovelny@user/ovelny) (Client Quit)
[23:03:08] *** Joins: Fuchs[m] (~fuchsmatr@2001:470:69fc:105::1:a7b1)
[23:03:19] *** Quits: Pickchea (~private@user/pickchea) (Quit: Leaving)
[23:03:25] *** Quits: spawnmc (~spawnmc@user/spawnmc) (Quit: Client closed)
[23:03:38] *** Quits: ocnrando (~ocnrando@c-69-140-79-186.hsd1.md.comcast.net) (Quit: Client closed)
[23:04:02] *** Quits: vulpes_vulpes (~vulpes_vu@62-64-207-88.dynamic.dial.as9105.com) (Quit: Leaving)
[23:04:21] <InPhase> dante-as: https://stackoverflow.com/questions/32062157/move-non-empty-cells-to-the-left-in-pandas-dataframe
[23:04:46] *** Joins: SallyAhaj (~SallyAhaj@user/sallyahaj)
[23:04:55] *** Quits: merijn (~merijn@c-001-001-018.client.esciencecenter.eduvpn.nl) (Ping timeout: 250 seconds)
[23:04:59] *** Joins: vladoski (~foo@2001:b07:add:d406:e59b:f4ba:39d7:98c4)
[23:05:01] *** Joins: ovelny (~ovelny@user/ovelny)
[23:05:22] *** Joins: Guest1778 (~Guest1778@172-223-077-135.res.spectrum.com)
[23:05:30] <Repiphany> Batzy: What form is your tree in
[23:05:46] *** Quits: JordiGH (~jordi@user/jordigh) (Ping timeout: 245 seconds)
[23:05:49] <Repiphany> Something like a Node class with left and right children?
[23:05:51] <Batzy> Repiphany: so it's generating words on symbols
[23:06:09] <Batzy> so a node might have value X, then it has 3 children, X,y, and Y.
[23:06:11] <Guest1778> what happens after I install Ubuntu from the windows store?
[23:06:13] *** Quits: vladoski (~foo@2001:b07:add:d406:e59b:f4ba:39d7:98c4) (Client Quit)
[23:06:34] <Batzy> Repiphany: so there are 4 symbols x y X Y, and no node can have a child that is the case swap of its value
[23:06:56] *** Joins: pycurious (~Adium@user/pycurious)
[23:07:03] <Batzy> so X cant have a child node of x ; x cant have X ; y cant have Y ; Y can't have y
[23:07:32] <Batzy> so the terminal nodes at a depth = n would be words of this form of length n
[23:07:48] *** Quits: ovelny (~ovelny@user/ovelny) (Client Quit)
[23:07:57] <Batzy> before you say there's a simpler way to do this without trees-- there's other stuff going on that makes me want the tree structure
[23:08:07] <Batzy> but this should give you an idea of it
[23:08:16] *** Quits: dme86 (~dan@user/dan86) (Ping timeout: 245 seconds)
[23:08:37] *** Quits: mat001 (~mat001@72.28.108.216) (Ping timeout: 240 seconds)
[23:08:43] *** scurfee is now known as mikami
[23:08:48] <Batzy> so if i create a tree object, i want it to be an iterable. At depth 4 next(obj) = XXXX --> next(obj) = XXXY --> next(obj) = XXXy and so on
[23:08:54] *** Quits: sudomann (~sudomann@98.219.211.182) (Ping timeout: 260 seconds)
[23:09:02] <Repiphany> Batzy: Something like https://bpa.st/QK3Q adjusted to fit your structure
[23:09:06] <Batzy> but you can see that with a large depth, the number of nodes is huge. So i dont want to store all of these nodes in memory, i want to generate them as i go
[23:09:10] <KirkMcDonald> Batzy: I'm looking at this and thinking "base conversion."
[23:09:47] <KirkMcDonald> Except the limitation of not permitting adjacent case-switching is curious.
[23:09:54] <Batzy> Repiphany: ok, so i can say myIterable = treeobj.get_terminal_nodes()?
[23:09:55] <Batzy> or something
[23:10:15] <Batzy> KirkMcDonald: it gets even weirder but this is an ok first start for me
[23:10:29] *** Quits: Noisytoot (~noisytoot@sourcehut/user/noisytoot) (Ping timeout: 256 seconds)
[23:10:40] <KirkMcDonald> But if you define the strict order of this alphabet, e.g. "xyXY", you could pretty easily define a function where, given a string of this form, you get the "next" one.
[23:10:41] <Repiphany> If you write it as a class instance method, sure
[23:11:09] <Batzy> Repiphany:  ok ill try it
[23:11:15] <Batzy> KirkMcDonald: we can assume lexical ordering sure
[23:11:20] <Batzy> some sort of lexical ordering anyways
[23:11:28] <KirkMcDonald> It's arbitrary.
[23:11:29] *** Joins: raym (~raym@user/raym)
[23:11:37] *** Quits: purple_cthulhu (~purple_ct@188.214.96.6) (Quit: Client closed)
[23:11:37] *** Joins: DavidMilestone (~DavidMile@182.64.130.166)
[23:12:22] *** Quits: SallyAhaj (~SallyAhaj@user/sallyahaj) (Remote host closed the connection)
[23:12:29] *** Joins: humberto1 (~humbertow@fixed-189-203-113-197.totalplay.net)
[23:12:30] *** Quits: pmb (~pmb@89-64-79-51.dynamic.chello.pl) (Quit: pmb)
[23:12:31] *** Joins: trace987 (~trace@ip5f5ad14d.dynamic.kabel-deutschland.de)
[23:12:37] <Batzy> Repiphany: i need to create the entire tree then
[23:12:40] <Batzy> i think
[23:12:44] *** Quits: vitali64 (~vitali64@user/vitali64) (Ping timeout: 250 seconds)
[23:12:44] *** Quits: Guest1778 (~Guest1778@172-223-077-135.res.spectrum.com) (Quit: Client closed)
[23:13:14] <Repiphany> No, you just need a way to get the children of a node
[23:13:19] *** Joins: blackout69 (~blackout6@net-109-117-245-237.cust.vodafonedsl.it)
[23:13:54] <Batzy> i can create children as i go, sure
[23:13:59] <Batzy> but will they also fall out of memory
[23:14:02] <Batzy> once i am done with them?
[23:14:33] <Repiphany> If you don't keep references to them, yes
[23:14:46] <Batzy> ok let me write my tree and see
[23:15:15] *** Quits: humbertowoody (~humbertow@fixed-189-203-112-148.totalplay.net) (Ping timeout: 256 seconds)
[23:15:18] <Repiphany> The recursive function keeps track of which branch along the tree you are to get to the terminal nodes
[23:15:21] *** naan is now known as Naan
[23:15:56] <DavidMilestone> Hi, everyone. Now that I'm done with OOPs, I'm looking forward to learn more about standard Python modules.
[23:15:56] <DavidMilestone> What are the preferred modules that I should learn? Or should I learn a different concept and leave the standard library for another day?
[23:16:06] *** Joins: sudomann (~sudomann@98.219.211.182)
[23:16:16] *** Quits: dante-as (~dante-as@5-12-102-114.residential.rdsnet.ro) (Quit: Client closed)
[23:16:47] <Batzy> Repiphany: ok i think is see, i can push new children in the else: branch
[23:16:48] <Batzy> perfect
[23:17:01] *** Joins: zen_coder (~zen_coder@2a02:8109:a280:2d8d:60ef:8113:9157:1102)
[23:17:07] *** Joins: humbertowoody (~humbertow@fixed-189-203-52-69.totalplay.net)
[23:17:19] *** Joins: mattypants (~quassel@136.62.184.132)
[23:17:53] <fofoni> DavidMilestone, i think learning always works best when it's something you're motivated about, so you can take a look at https://docs.python.org/3/library/ and see if any modules in that list make you excited
[23:18:05] *** Quits: humberto1 (~humbertow@fixed-189-203-113-197.totalplay.net) (Ping timeout: 256 seconds)
[23:18:18] *** Joins: SallyAhaj (~SallyAhaj@user/sallyahaj)
[23:18:28] *** Joins: MercilessDeth (~brad@136.49.59.177)
[23:18:37] *** Joins: flea (nosoul@gateway/vpn/protonvpn/nosoul)
[23:18:45] *** Quits: pro_z_ (~pro_z@37.214.69.56) (Ping timeout: 256 seconds)
[23:19:17] *** Quits: Bluefoxicy (~Bluefoxic@c-73-132-244-30.hsd1.md.comcast.net) (Ping timeout: 240 seconds)
[23:19:51] <DavidMilestone> fofoni: Definitely, that's what I was planning to do-- read the official docs. What are your thoughts on this site- pymotw.com ?
[23:20:02] *** Joins: Bluefoxicy (~Bluefoxic@c-73-132-244-30.hsd1.md.comcast.net)
[23:20:13] <Batzy> Repiphany: hm it says it's terutrning a generator object but next(myiter) doesnt work
[23:20:18] <Batzy> returning*
[23:20:22] <Batzy> i can bpaste real quick
[23:20:50] <fofoni> haven't heard of it, but looks cool
[23:20:59] *** Quits: theseb (~theseb@47-220-214-54.cnrocmta03.res.dyn.suddenlink.net) (Quit: Leaving)
[23:21:19] <DavidMilestone> Yeah, "Python Module of the Week"
[23:22:08] *** Joins: dante-as (~dante-as@5-12-102-114.residential.rdsnet.ro)
[23:22:26] *** Quits: zeenk (~zeenk@2a02:2f04:a30d:1300:51a3:bcfc:6cda:9fc5) (Quit: Konversation terminated!)
[23:22:37] *** Joins: makrada (~makrada@194.135.154.244)
[23:23:16] *** Quits: CaryHartline (~CaryHartl@2603-8080-6a0e-8d88-78d5-e2ea-a2f1-e76e.res6.spectrum.com) (Quit: My iMac has gone to sleep. ZZZzzz…)
[23:23:20] *** Quits: jeho (~jehoshaph@user/jehoshaphat) (Quit: Leaving)
[23:23:23] *** Joins: mat001 (~mat001@c-69-181-155-247.hsd1.ca.comcast.net)
[23:23:40] <makrada> https://gurushots.com/photo/6a8399cbc50aafe444ba06f15696f63f
[23:23:48] <Batzy> Repiphany: https://bpa.st/EJIA
[23:23:50] *** Quits: mat001 (~mat001@c-69-181-155-247.hsd1.ca.comcast.net) (Remote host closed the connection)
[23:23:51] *** Joins: Noisytoot (~noisytoot@sourcehut/user/noisytoot)
[23:24:01] *** Joins: jeho (~jehoshaph@user/jehoshaphat)
[23:24:13] <Batzy> oh wait i didnt right node.children
[23:24:14] <Batzy> woops
[23:24:21] *** Quits: aw1231 (~alan@155.58.3.30) (Quit: Leaving)
[23:24:24] <Batzy> let me see if that fixes it actually
[23:24:25] *** Joins: mat001 (~mat001@72.28.108.216)
[23:24:33] *** Joins: vladoski (~foo@2001:b07:add:d406:e59b:f4ba:39d7:98c4)
[23:24:46] *** Joins: Arw| (~Arwalk@lfbn-dij-1-964-247.w90-125.abo.wanadoo.fr)
[23:24:57] *** Quits: calamari (~jjohnston@ip72-217-21-192.ph.ph.cox.net) (Quit: Leaving)
[23:25:04] *** Joins: Guest1778 (~Guest1778@172-223-077-135.res.spectrum.com)
[23:25:09] *** Quits: makrada (~makrada@194.135.154.244) (K-Lined)
[23:25:17] *** Quits: Arw- (~Arwalk@lfbn-dij-1-964-247.w90-125.abo.wanadoo.fr) (Ping timeout: 240 seconds)
[23:25:36] *** Joins: makrada (~makrada@185.30.90.100)
[23:25:40] *** Quits: vladoski (~foo@2001:b07:add:d406:e59b:f4ba:39d7:98c4) (Client Quit)
[23:26:12] <Batzy> oh no, max recursion depth exceeded!
[23:26:12] *** Quits: jeho (~jehoshaph@user/jehoshaphat) (Client Quit)
[23:26:20] <Batzy> for depth 4
[23:26:21] *** Quits: ketiv (~ketiv@cpc148896-sgyl44-2-0-cust233.18-2.cable.virginm.net) (Ping timeout: 256 seconds)
[23:26:21] <Batzy> that's not good
[23:26:36] <Repiphany> You need a `self` in your instance function definition
[23:26:48] *** Quits: makrada (~makrada@185.30.90.100) (K-Lined)
[23:26:52] <Batzy> Repiphany: i can repaste
[23:26:57] <Batzy> im on vim ssh'd into a box so
[23:26:57] *** Joins: jeho (~jehoshaph@user/jehoshaphat)
[23:27:01] <Batzy> copy and paste isn't being happy
[23:27:12] <Repiphany> And is your WordGenerator class the node itself
[23:27:14] <Guest1778> could anyone help me with understanding what WSL is?
[23:27:15] <Guest1778> Someone earlier recommended it so I can fix my pdf2svg issue which is only about on linux systems
[23:27:21] <Batzy> sec
[23:27:26] <A_Dragon> its a windows virtual linux system
[23:27:28] *** Joins: c4017w__ (~c4017@209.52.68.8)
[23:27:34] <A_Dragon> it stands for WIndows Subsystem for Linux
[23:27:42] <A_Dragon> its essentially a linux vm with some extra toys
[23:27:48] *** Joins: imp (~imp@177-131-189-195.static.sumicity.net.br)
[23:27:55] <Batzy> Repiphany: https://bpa.st/3NWA here u go
[23:28:05] <Guest1778> gotcha
[23:28:09] <altendky> Batzy: `cat somefile.py | curl -X POST https://bpa.st/curl -F 'raw=<-'` can get it on bpaste
[23:28:10] *** Joins: ketiv (~ketiv@cpc148896-sgyl44-2-0-cust233.18-2.cable.virginm.net)
[23:28:12] <Batzy> oh wait
[23:28:14] *** Quits: ketiv (~ketiv@cpc148896-sgyl44-2-0-cust233.18-2.cable.virginm.net) (Client Quit)
[23:28:17] <Batzy> i dont want to do self.get_terminal_nodes
[23:28:20] <Batzy> i want child.get_terminal_nodes
[23:28:21] <Guest1778> where do the files go when I store stuff, A_Dragon ?
[23:28:32] <A_Dragon> the VMs disk, I'd assume
[23:28:43] <Guest1778> is that on my computer? It is right?
[23:28:50] <SnoopJ> yes
[23:28:53] *** Joins: jazzy (~jaziz@user/jaziz)
[23:29:19] *** Joins: ExpiredKebab (~sgreadly@2407:7000:8995:c103:9110:ac9e:1aa8:97f5)
[23:29:28] <SnoopJ> #windows would be a good channel to ask about WSL, and maaaaybe #linux but I doubt it
[23:29:36] <DavidMilestone> You access your drives through the `/mnt` directory if I'm not correct?
[23:30:01] *** Quits: NovaXrine (~NovaXrine@void.novaxrine.com) (Quit: ZNC 1.8.2+deb2+b1 - https://znc.in)
[23:30:15] <Guest1778> Gotcha, thanks for the headsup.
[23:30:15] <Guest1778> Which channel would be for asking for help installing Anaconda on WSL ?
[23:30:21] *** Joins: NovaXrine (~NovaXrine@void.novaxrine.com)
[23:30:31] <A_Dragon> DavidMilestone: yeah C and co are usually available in /mnt
[23:30:41] *** Parts: blackout69 (~blackout6@net-109-117-245-237.cust.vodafonedsl.it) ()
[23:30:49] <SaltHillStroller> Guest1778: How are you storing it?
[23:30:52] <Repiphany> Batzy: I'd separate out the `else: ...` stuff into a separate function like `get_children` or something and confirm that you're actually able to get the children nodes you're expecting
[23:31:00] <Guest1778> I have no idea.
[23:31:11] <Guest1778> I followed this: sudo apt update && sudo apt upgrade
[23:31:13] <SaltHillStroller> Guest1778: Well ... What are you trying to access :D
[23:31:17] <Guest1778> Excuse me: https://docs.microsoft.com/en-us/windows/wsl/install
[23:31:18] *** Quits: c4017w_ (~c4017@209.52.68.8) (Ping timeout: 260 seconds)
[23:31:24] <SaltHillStroller> So I'm assuming you're in a WSL terminal of some kind?
[23:31:26] <SnoopJ> Guest1778, questions about Anaconda are definitely on-topic in #python
[23:31:41] <SaltHillStroller> you can just run `explorer.exe .`, and it will open the directory in Windows explorer
[23:31:41] *** Quits: humbertowoody (~humbertow@fixed-189-203-52-69.totalplay.net) (Ping timeout: 256 seconds)
[23:32:56] <SaltHillStroller> I'm not sure what how running your env in WSL will resolve any issues you were having on "linux" systems
[23:32:58] <Batzy> Repiphany: the idea is that if the current depth is not right, we push children onto the current node and keep going
[23:33:05] <Batzy> still getting max recursion depth errors hm
[23:33:22] *** Joins: djapo (~archangel@user/djapo)
[23:33:28] <SaltHillStroller> WSL will pull packages from whichever distro you have installed, presumably the same packages you were encountering issues with
[23:33:38] <KirkMcDonald> Batzy: How nested is the structure?
[23:33:48] <Batzy> what do you mean
[23:34:00] <KirkMcDonald> Batzy: How deep is the tree?
[23:34:04] <Batzy> 4
[23:34:09] <Batzy> i would need more in practice
[23:34:11] <Batzy> but 4 should be fine
[23:34:16] <Guest1778> SaltHillStroller previously I was trying to get a package for my anaconda environment on Windows which was only available to liinux systems.
[23:34:17] <KirkMcDonald> Batzy: Then hitting the recursion depth seems like an error, heh.
[23:34:23] *** Joins: ajhurst (~ajhurst@142.162.112.217)
[23:34:31] *** Quits: mikami (~mikami@broadband-77-37-146-212.ip.moscow.rt.ru) ()
[23:34:35] <Batzy> yeah
[23:34:41] <SaltHillStroller> Guest1778: Oh, in that case yeah that will probably work haha
[23:34:47] *** Joins: humbertowoody (~humbertow@148.204.6.250)
[23:35:39] *** Joins: mtk (~mtk@2601:185:200:70:20c:29ff:fe3e:59e4)
[23:35:57] *** Joins: kyooo (~kyooo@2a02:a31d:a13c:5600:559d:f748:905d:cda9)
[23:36:37] <Batzy> it's calling on the same node over and over it looks like
[23:37:18] <SaltHillStroller> Guest1778: As A_Dragon mentioned, you can just treat WSL as a Linux VM. Any instructions regarding Python/Anaconda for Linux/Ubuntu should work pretty well out of the box on WSL
[23:37:31] *** Joins: Naan` (~Naan@user/naan)
[23:37:38] <SaltHillStroller> Here's a guide on installing Conda for Ubuntu (which I'm assuming you are using based on your previous message): https://phoenixnap.com/kb/how-to-install-anaconda-ubuntu-18-04-or-20-04
[23:37:39] <Guest1778> Question:
[23:37:40] <Guest1778> I am now following https://gist.github.com/kauffmanes/5e74916617f9993bc3479f401dfec7da to install Anaconda on my WSL. Step 2 says to go to a website. Is there a way to find the latest anaconda release without using the browster?
[23:37:59] *** Joins: sidro (~sidro@86.126.115.212)
[23:38:03] <Guest1778> oh, nice link.
[23:38:49] *** Quits: sudomann (~sudomann@98.219.211.182) (Ping timeout: 256 seconds)
[23:38:55] <Batzy> im not sure why that's happening
[23:38:55] <Batzy> hm
[23:39:00] <Guest1778> seems to be the same instructions
[23:39:01] <SaltHillStroller> The link you sent is more concise honestly. I'd just follow that
[23:39:16] <SaltHillStroller> Yep! Pretty much just download the install script and run it
[23:39:22] <Repiphany> Batzy: It's not clear to me whether `self` and `node` are meant to be the same thing in your structure
[23:39:50] *** Joins: oriba (~oriba@dynamic-077-191-002-071.77.191.pool.telefonica.de)
[23:39:53] <Batzy> i wouldnt know what to pass in otherwise
[23:40:00] <Batzy> since the tree is uninitialized
[23:40:08] <Batzy> i just have this root node
[23:40:29] <Repiphany> Is the root node an instance of RightWordGenerator
[23:40:37] <Batzy> yeah
[23:40:44] <Batzy> should i not
[23:40:47] <ajhurst> Hey, are there any frequent Cython users in here? Trying to figure out whether something a user filed a bug report about is a common use case or a very messy hack
[23:40:53] <Repiphany> and are children also instances of RightWordGenerator
[23:41:06] *** Quits: Naan (~Naan@user/naan) (Ping timeout: 260 seconds)
[23:41:33] *** Quits: chele (~chele@user/chele) (Remote host closed the connection)
[23:42:19] *** Joins: vladoski (~foo@2001:b07:add:d406:e59b:f4ba:39d7:98c4)
[23:42:25] *** Quits: xrogaan (~xrogaan@user/xrogaan) (Quit: Leaving)
[23:43:15] <ajhurst> Basically, the user is taking the ctypes bindings I maintain, getting the address of the raw ctypes pointer for a given function, and then casting that address to a custom Cython function definition so they don't have to write their own Cython bindings
[23:43:18] *** Quits: vladoski (~foo@2001:b07:add:d406:e59b:f4ba:39d7:98c4) (Client Quit)
[23:43:26] <Batzy> Repiphany: right now yes
[23:44:02] *** Quits: mtk (~mtk@2601:185:200:70:20c:29ff:fe3e:59e4) (Remote host closed the connection)
[23:44:47] <ajhurst> This seems like a very weird edge case, but they're insisting this is common practice with Cython and I don't know enough to confidently say otherwise
[23:45:05] <Repiphany> Batzy: https://bpa.st/5SHA
[23:45:09] <SnoopJ> ajhurst, I've never seen it before, for whatever that's worth (not much)
[23:45:37] <SnoopJ> It strikes me a lot more as "hack" than not
[23:45:41] <ajhurst> It helps, thanks
[23:46:21] *** Joins: CaryHartline (~CaryHartl@2603-8080-6a0e-8d88-78d5-e2ea-a2f1-e76e.res6.spectrum.com)
[23:46:38] <Repiphany> Batzy: You also need to check whether the defintions of `__str__` and `children` are what you expect
[23:46:50] <Repiphany> Is children() supposed to be a function
[23:47:38] *** Joins: MasterK (~MK@79.117.158.53)
[23:47:56] <ajhurst> Basically, I added thin Python function wrappers around the raw ctypes bindings for my package so that stuff like autodoc, autocompletion, kwargs, and stuff like that can work properly. For every use case I could have imagined this would offer a ton of benefits with no API breakage, but it broke things for this one user and they're adamant it's a standard use case and I should revert it
[23:48:08] <EtherMan> So, I'm trying to implement a basic plugin system. I want it to be easy to add plugins by simply dropping them in a plugin folder. Now from the main program I was planning on creating a PluginsList object, to manage the plugins such that the plugins are in the pluginslist.plugins[], where I can then do pluginslist.load("plugins") to load all the plugins from the plugins dir into that list. Now, I can ofc simply do os.listdir(dir) in order to get a
[23:48:08] <EtherMan>  list of the plugins. If I understand it, I should now be able to do importlib.import_module("plugins."+pluginfile) on each of those files right? (at least if I understand everything correctly up until now myself). But now the part I don't understand at all. So each plugin defines a class, that is a subclass of my plugin class. I want to create an instance of that class, and place it in the list of plugins. But how? Since that new class could be
[23:48:08] <EtherMan> named anything, I can't call on it by name after all. Do I have to somehow list all classes in the loaded plugin or what?
[23:48:52] *** Joins: aslicedbanjo (~aslicedba@host86-160-16-1.range86-160.btcentralplus.com)
[23:49:45] *** Joins: vladoski (~foo@2001:b07:add:d406:e59b:f4ba:39d7:98c4)
[23:49:58] *** Quits: roxfan (~roxfan@2a02:a03f:a2be:4f00:645d:2a7c:96cb:dc8) (Ping timeout: 260 seconds)
[23:50:18] *** Joins: sudomann (~sudomann@98.219.211.182)
[23:50:33] *** Joins: mtk (~mtk@2601:185:200:70:20c:29ff:fe3e:59e4)
[23:50:56] *** Joins: Barones (~Barones@user/Barones)
[23:51:30] <Guest1778> What does the "source ~/.bashrc" command do? After I installed Anaconda, I was instructed to do that. Now I can use Conda command which is what is desired! But I don't know what that did.
[23:51:52] *** Quits: DavidMilestone (~DavidMile@182.64.130.166) (Quit: Client closed)
[23:52:16] *** Quits: sidro (~sidro@86.126.115.212) (Remote host closed the connection)
[23:52:23] <SnoopJ> Guest1778, "Read and execute commands from [filename]" is what the bash docs describe it as. Consult the documentation for your shell for lots more information.
[23:52:52] <SnoopJ> (in that case it's giving you whatever's in the new .bashrc without logging out/back in)
[23:53:01] <Guest1778> https://i.imgur.com/LQoFWBI.png :D
[23:53:18] *** Joins: sidro (~sidro@86.126.115.212)
[23:53:36] <SnoopJ> `source` is documented in the SHELL BUILTIN COMMANDS part of bash(1)
[23:54:05] <patchie> df['datetime'].unique() <-- how can i get the unique day, and not unique datetime?
[23:54:07] *** Quits: dante-as (~dante-as@5-12-102-114.residential.rdsnet.ro) (Ping timeout: 256 seconds)
[23:54:57] <Batzy> Repiphany: __str__ follows each node to the root appending the value of the current node
[23:54:58] *** ses1984_ is now known as ses1984
[23:54:59] *** Quits: crashrep (~crashrep@user/crashrep) (Quit: WeeChat 3.4)
[23:55:06] *** Quits: sudomann (~sudomann@98.219.211.182) (Ping timeout: 260 seconds)
[23:55:16] <Batzy> so the value of the current node is a single letter. When you call __str__ it "builds" the word by following the path up to the root node
[23:55:29] *** Joins: ovelny (~ovelny@user/ovelny)
[23:55:30] <Batzy> children is simply an array
[23:55:47] <Batzy> Repiphany: i have yet to try your code, the day job distracting me from the real important things
[23:55:48] <Batzy> :)
[23:56:11] *** Joins: sudomann (~sudomann@98.219.211.182)
[23:56:12] <Repiphany> How is self.children supposed to be affected by the next_symbols stuff in the 4 lines above
[23:56:19] <jinsun> patchie: df['datetime'].dt.day.unique()
[23:56:36] <jinsun> patchie: assuming that column really has datetime objects
[23:57:21] <patchie> jinsun: Wow, nice, will check
[23:57:25] *** Quits: Barones (~Barones@user/Barones) (Quit: Leaving)
[23:57:34] <Guest1778> Why did "conda install python" install version 3.8.5 instead of 3.10 ?
[23:57:57] *** Quits: mon_aaraj (~MonAaraj@user/mon-aaraj/x-4416475) (Ping timeout: 240 seconds)
[23:58:22] <jinsun> probably because python 3.8.5 was already installed
[23:58:23] <CrtxReavr> Maybe it's conda's default version.
[23:58:28] <Batzy> Repiphany: still max recursion depth
[23:58:28] <Batzy> hm
[23:58:39] <jinsun> conda install doesn't update things
[23:58:49] *** Quits: portalrat (~portalrat@user/portalrat) (Quit: Leaving)
[23:59:12] *** Joins: mon_aaraj (~MonAaraj@user/mon-aaraj/x-4416475)
[23:59:22] *** Quits: merrinx (~merrinx@ti0028a400-1685.bb.online.no) (Quit: WeeChat 3.3)
[23:59:33] *** Quits: FinnElija (~finn_elij@user/finn-elija/x-0085643) (Killed (NickServ (Forcing logout FinnElija -> finn_elija)))
[23:59:33] *** Joins: finn_elija (~finn_elij@user/finn-elija/x-0085643)
[23:59:33] *** finn_elija is now known as FinnElija
[23:59:34] *** Quits: ovelny (~ovelny@user/ovelny) (Client Quit)
[23:59:45] <Batzy> Repiphany: so self.push(value = 'x') creates a new WordGenerator object and appends it to self.children
[23:59:46] <Batzy> which is an array
