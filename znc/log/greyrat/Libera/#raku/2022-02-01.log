[00:26:37] *** Quits: epony (epony@user/epony) (Quit: QUIT)
[00:29:43] *** Quits: ecocode_ (~ecocode@2001:41d0:1:6a74::1) (Quit: ZNC 1.6.4 - http://znc.in)
[00:36:13] *** Joins: jjido (~Denis@2a02:c7f:5c91:e700:b193:a8bc:ecae:fe3)
[00:37:16] <[Coke]> --version output on git bash on windows is fine as is, in the VS command prompt, needs chcp 65001, which is expected. Looks much better now without the bold text.
[00:38:56] <[Coke]> (this is probably old news)
[00:50:12] <Xliff> m: sub a () { 42; }; &a.WHERE # <- Can that change?
[00:50:13] <camelia> rakudo-moar 382f2f108: ( no output )
[00:50:16] *** Joins: ecocode (~ecocode@2001:41d0:1:6a74::1)
[00:50:20] <Xliff> m: sub a () { 42; }; &a.WHERE.say # <- Can that change?
[00:50:20] <camelia> rakudo-moar 382f2f108: OUTPUT: «2852129596152␤»
[01:07:40] <MasterDuke> i think .WHERE is generally allowed to change, but in practice maybe it won't for compile time things like subs. you'd need to ask someone like nine or timo to be sure
[01:09:07] <MasterDuke> m: sub a() { say "hi" }; say &a.WHERE; for ^1_000_000 { my @b = .comb; }; say &a.WHERE
[01:09:08] <camelia> rakudo-moar 382f2f108: OUTPUT: «2741538338400␤2741534130296␤»
[01:14:26] *** Parts: cetjs (~cetjs2@217.107.115.33) (Leaving)
[01:14:55] <moon-child> I see no reason why you would want to disallow .WHERE changing for compile-time things.  I think mvm is not currently globally compacting, but that might change in the future
[01:19:46] *** Joins: stoned75 (~seb@78.203.129.116)
[01:19:50] *** Quits: stoned75 (~seb@78.203.129.116) (Client Quit)
[01:21:27] *** Joins: hasrthur_ (~hasrthur@45.89.88.214)
[01:21:27] *** Quits: hasrthur (~hasrthur@45.89.88.214) (Read error: Connection reset by peer)
[01:25:25] *** Joins: dextercd (~dexter@2a02-a450-f25d-1-76d4-35ff-fefe-34c.fixed6.kpn.net)
[01:32:04] *** Quits: hasrthur_ (~hasrthur@45.89.88.214) (Remote host closed the connection)
[01:33:27] *** Joins: curiosa (~curiosa@37.166.111.65)
[01:34:19] *** Quits: curiosa (~curiosa@37.166.111.65) (Client Quit)
[01:43:07] <SmokeMachine> Sorry for not golfing it, but does anyone have any idea of why would this be happening when the code is inside a whenever and a start only on the 2 first iterations? https://github.com/FCO/Red/issues/537#issuecomment-1026262630
[01:48:12] <timo> yeah, where will change, usually only up to once, though? there's a mechanism to get an id that's stable for the program's runtime for one object, which is called "objectid"
[01:51:30] <MasterDuke> moon-child: not really disallow, just some stuff is created right away in gen2 or because we know it'll stick around and i don't know if .WHERE will *actually* change for them, even though you shouldn't rely on that
[02:12:39] <Xliff> m: class A { }; A.new.objectid.say
[02:12:39] <camelia> rakudo-moar 382f2f108: OUTPUT: «No such method 'objectid' for invocant of type 'A'␤  in block <unit> at <tmp> line 1␤␤»
[02:12:47] <Xliff> ^^ timo
[02:13:57] <ugexe> m: use nqp; say nqp::objectid($*CWD)
[02:13:57] <camelia> rakudo-moar 382f2f108: OUTPUT: «4369382167664␤»
[02:21:01] *** Quits: dextercd (~dexter@2a02-a450-f25d-1-76d4-35ff-fefe-34c.fixed6.kpn.net) (Quit: WeeChat 3.4)
[02:22:53] <timo> yeah it's not a method
[02:22:59] <timo> it's internal
[02:23:11] <timo> i believe WHICH on some things uses it?
[02:26:12] *** Quits: jjido (~Denis@2a02:c7f:5c91:e700:b193:a8bc:ecae:fe3) (Quit: My MacBook Air has gone to sleep. ZZZzzz…)
[03:26:12] *** Quits: greppable6 (gre-able@2001:41d0:2:5eb5::) (Remote host closed the connection)
[03:26:12] *** Quits: unicodable6 (uni-able@2001:41d0:2:5eb5::) (Remote host closed the connection)
[03:26:12] *** Quits: notable6 (not-able@2001:41d0:2:5eb5::) (Read error: Connection reset by peer)
[03:26:12] *** Quits: tellable6 (tel-able@2001:41d0:2:5eb5::) (Remote host closed the connection)
[03:26:12] *** Quits: nativecallable6 (nat-able@2001:41d0:2:5eb5::) (Remote host closed the connection)
[03:26:12] *** Quits: bisectable6 (bis-able@2001:41d0:2:5eb5::) (Read error: Connection reset by peer)
[03:26:12] *** Quits: statisfiable6 (sta-able@2001:41d0:2:5eb5::) (Read error: Connection reset by peer)
[03:26:12] *** Quits: shareable6 (sha-able@2001:41d0:2:5eb5::) (Read error: Connection reset by peer)
[03:26:12] *** Quits: bloatable6 (blo-able@2001:41d0:2:5eb5::) (Remote host closed the connection)
[03:26:12] *** Quits: benchable6 (ben-able@2001:41d0:2:5eb5::) (Read error: Connection reset by peer)
[03:26:12] *** Quits: squashable6 (squ-able@2001:41d0:2:5eb5::) (Read error: Connection reset by peer)
[03:26:12] *** Quits: quotable6 (quo-able@2001:41d0:2:5eb5::) (Read error: Connection reset by peer)
[03:26:12] *** Quits: releasable6 (rel-able@2001:41d0:2:5eb5::) (Read error: Connection reset by peer)
[03:26:12] *** Quits: committable6 (com-able@2001:41d0:2:5eb5::) (Remote host closed the connection)
[03:26:12] *** Quits: reportable6 (rep-able@2001:41d0:2:5eb5::) (Remote host closed the connection)
[03:26:12] *** Quits: coverable6 (cov-able@2001:41d0:2:5eb5::) (Remote host closed the connection)
[03:26:12] *** Quits: sourceable6 (sou-able@2001:41d0:2:5eb5::) (Remote host closed the connection)
[03:26:12] *** Quits: linkable6 (lin-able@2001:41d0:2:5eb5::) (Remote host closed the connection)
[03:26:13] *** Quits: evalable6 (eva-able@2001:41d0:2:5eb5::) (Write error: Connection reset by peer)
[03:26:28] *** Joins: coverable6 (cov-able@2001:41d0:2:5eb5::)
[03:26:43] *** Joins: linkable6 (lin-able@2001:41d0:2:5eb5::)
[03:27:06] *** Joins: sourceable6 (sou-able@2001:41d0:2:5eb5::)
[03:27:42] *** Joins: greppable6 (gre-able@2001:41d0:2:5eb5::)
[03:27:53] *** Joins: releasable6 (rel-able@2001:41d0:2:5eb5::)
[03:27:53] *** Joins: unicodable6 (uni-able@2001:41d0:2:5eb5::)
[03:27:54] *** Joins: notable6 (not-able@2001:41d0:2:5eb5::)
[03:28:08] *** Joins: squashable6 (squ-able@2001:41d0:2:5eb5::)
[03:28:34] *** Joins: bisectable6 (bis-able@2001:41d0:2:5eb5::)
[03:28:44] *** Joins: committable6 (com-able@2001:41d0:2:5eb5::)
[03:28:44] *** Joins: reportable6 (rep-able@2001:41d0:2:5eb5::)
[03:28:44] *** Joins: quotable6 (quo-able@2001:41d0:2:5eb5::)
[03:35:39] *** Quits: Skarsnik (~Skarsnik@91-170-31-218.subs.proxad.net) (Read error: Connection reset by peer)
[03:36:01] *** Joins: Skarsnik (~Skarsnik@91-170-31-218.subs.proxad.net)
[03:37:31] *** Quits: reportable6 (rep-able@2001:41d0:2:5eb5::) (Remote host closed the connection)
[04:16:32] *** Quits: lichtkind (~lichtkind@p200300feb713be13181e699ef2a25ffb.dip0.t-ipconnect.de) (Ping timeout: 252 seconds)
[04:19:52] *** Joins: [Coke]_ (~coke@172.58.225.219)
[04:22:15] *** Quits: [Coke] (~coke@172.58.225.219) (Ping timeout: 268 seconds)
[04:27:06] *** Joins: tellable6 (tel-able@2001:41d0:2:5eb5::)
[04:28:47] *** Joins: nativecallable6 (nat-able@2001:41d0:2:5eb5::)
[04:28:50] *** Joins: benchable6 (ben-able@2001:41d0:2:5eb5::)
[04:29:13] *** Joins: evalable6 (eva-able@2001:41d0:2:5eb5::)
[04:37:48] *** Joins: reportable6 (rep-able@2001:41d0:2:5eb5::)
[04:45:36] *** Quits: Sgeo_ (~Sgeo@user/sgeo) (Read error: Connection reset by peer)
[04:46:16] *** Joins: Sgeo_ (~Sgeo@user/sgeo)
[04:47:09] *** Quits: silug (~silug@068-188-018-154.biz.spectrum.com) (Quit: Ping timeout (120 seconds))
[04:47:36] *** Joins: silug (~silug@068-188-018-154.biz.spectrum.com)
[04:48:20] *** Quits: discord-raku-bot (~RakuIRC@ip5f5ab74b.dynamic.kabel-deutschland.de) (Remote host closed the connection)
[04:48:34] *** Joins: discord-raku-bot (~RakuIRC@ip5f5ab74b.dynamic.kabel-deutschland.de)
[04:53:03] *** Quits: discord-raku-bot (~RakuIRC@ip5f5ab74b.dynamic.kabel-deutschland.de) (Remote host closed the connection)
[04:53:15] *** Joins: discord-raku-bot (~RakuIRC@ip5f5ab74b.dynamic.kabel-deutschland.de)
[05:05:22] *** Joins: epony (epony@user/epony)
[05:26:42] *** Joins: shareable6 (sha-able@2001:41d0:2:5eb5::)
[05:39:35] *** Joins: hasrthur (~hasrthur@45.89.88.214)
[05:44:16] *** Quits: hasrthur (~hasrthur@45.89.88.214) (Ping timeout: 268 seconds)
[05:44:26] *** Quits: discord-raku-bot (~RakuIRC@ip5f5ab74b.dynamic.kabel-deutschland.de) (Remote host closed the connection)
[05:44:39] *** Joins: discord-raku-bot (~RakuIRC@ip5f5ab74b.dynamic.kabel-deutschland.de)
[05:51:55] *** Quits: mahafyi (~mahafyi@2402:e280:2141:2f:930a:c447:3ac7:2a04) (Ping timeout: 256 seconds)
[05:58:18] *** Quits: Xliff (~Cliff@pool-71-255-227-73.washdc.east.verizon.net) (Remote host closed the connection)
[05:59:29] *** Joins: Sgeo__ (~Sgeo@user/sgeo)
[06:02:54] *** Quits: Sgeo_ (~Sgeo@user/sgeo) (Ping timeout: 256 seconds)
[06:21:52] *** Joins: jrobi (~jrobi@ool-457dd25b.dyn.optonline.net)
[06:22:09] *** Quits: jrobi (~jrobi@ool-457dd25b.dyn.optonline.net) (Client Quit)
[06:31:39] *** Joins: frost (~frost@user/frost)
[06:33:02] *** Quits: frost (~frost@user/frost) (Client Quit)
[06:43:04] *** Joins: Garbanzo_ (~Garbanzo@2602:304:6eac:dc10::46)
[06:58:49] *** Joins: mahafyi (~mahafyi@49.205.83.153)
[07:26:35] *** Joins: statisfiable6 (sta-able@2001:41d0:2:5eb5::)
[07:27:18] *** Joins: bloatable6 (blo-able@2001:41d0:2:5eb5::)
[07:34:16] <elcaro> Hrm... Just got bit by the fact that `[R-] (...)` is not the same as `(...).reduce(* R- *)`
[07:34:41] <elcaro> using it in a reduction metaop process the list in reverse. can't seem to find this documented
[07:35:51] <elcaro> in fact, documentation on R seems hard to lookup in general. only found https://docs.raku.org/language/operators#Reversed_operators
[07:36:38] <elcaro> applies to produce/triangular redunction too...
[07:36:43] <elcaro> m: say ([\R~] <a b c>; <a b c>.produce(* R~ *));
[07:36:43] <camelia> rakudo-moar 382f2f108: OUTPUT: «((c cb cba) (a ba cba))␤»
[08:27:19] *** Quits: linkable6 (lin-able@2001:41d0:2:5eb5::) (Remote host closed the connection)
[08:27:19] *** Quits: evalable6 (eva-able@2001:41d0:2:5eb5::) (Remote host closed the connection)
[09:27:19] *** Quits: bloatable6 (blo-able@2001:41d0:2:5eb5::) (Remote host closed the connection)
[09:27:19] *** Quits: releasable6 (rel-able@2001:41d0:2:5eb5::) (Remote host closed the connection)
[09:27:19] *** Quits: notable6 (not-able@2001:41d0:2:5eb5::) (Remote host closed the connection)
[09:27:19] *** Quits: coverable6 (cov-able@2001:41d0:2:5eb5::) (Remote host closed the connection)
[09:27:19] *** Quits: sourceable6 (sou-able@2001:41d0:2:5eb5::) (Remote host closed the connection)
[09:27:19] *** Quits: benchable6 (ben-able@2001:41d0:2:5eb5::) (Remote host closed the connection)
[09:27:19] *** Quits: committable6 (com-able@2001:41d0:2:5eb5::) (Remote host closed the connection)
[09:27:19] *** Quits: nativecallable6 (nat-able@2001:41d0:2:5eb5::) (Remote host closed the connection)
[09:27:19] *** Quits: greppable6 (gre-able@2001:41d0:2:5eb5::) (Remote host closed the connection)
[09:27:19] *** Quits: squashable6 (squ-able@2001:41d0:2:5eb5::) (Remote host closed the connection)
[09:27:19] *** Quits: bisectable6 (bis-able@2001:41d0:2:5eb5::) (Remote host closed the connection)
[09:27:19] *** Quits: reportable6 (rep-able@2001:41d0:2:5eb5::) (Remote host closed the connection)
[09:27:19] *** Quits: tellable6 (tel-able@2001:41d0:2:5eb5::) (Remote host closed the connection)
[09:27:19] *** Quits: statisfiable6 (sta-able@2001:41d0:2:5eb5::) (Remote host closed the connection)
[09:27:19] *** Quits: shareable6 (sha-able@2001:41d0:2:5eb5::) (Remote host closed the connection)
[09:27:19] *** Quits: quotable6 (quo-able@2001:41d0:2:5eb5::) (Remote host closed the connection)
[09:27:19] *** Quits: unicodable6 (uni-able@2001:41d0:2:5eb5::) (Remote host closed the connection)
[09:27:51] *** Joins: quotable6 (quo-able@2001:41d0:2:5eb5::)
[09:28:06] *** Joins: bloatable6 (blo-able@2001:41d0:2:5eb5::)
[09:28:11] *** Joins: reportable6 (rep-able@2001:41d0:2:5eb5::)
[09:28:30] *** Joins: benchable6 (ben-able@2001:41d0:2:5eb5::)
[09:28:41] *** Joins: tellable6 (tel-able@2001:41d0:2:5eb5::)
[09:29:05] *** Joins: evalable6 (eva-able@2001:41d0:2:5eb5::)
[09:29:22] *** Joins: committable6 (com-able@2001:41d0:2:5eb5::)
[09:29:25] *** Joins: bisectable6 (bis-able@2001:41d0:2:5eb5::)
[09:29:40] *** Joins: squashable6 (squ-able@2001:41d0:2:5eb5::)
[09:30:31] *** Joins: unicodable6 (uni-able@2001:41d0:2:5eb5::)
[09:30:32] *** Joins: statisfiable6 (sta-able@2001:41d0:2:5eb5::)
[09:37:30] *** Quits: reportable6 (rep-able@2001:41d0:2:5eb5::) (Remote host closed the connection)
[09:46:11] *** Joins: andinus (andinus@tilde.institute)
[09:55:52] *** Quits: Ekho (~Ekho@user/ekho) (Quit: CORE ERROR, SYSTEM HALTED.)
[09:58:17] *** Quits: Garbanzo_ (~Garbanzo@2602:304:6eac:dc10::46) (Ping timeout: 240 seconds)
[10:10:10] *** Joins: Ekho (~Ekho@user/ekho)
[10:28:57] *** Joins: nativecallable6 (nat-able@2001:41d0:2:5eb5::)
[10:29:25] *** Joins: linkable6 (lin-able@2001:41d0:2:5eb5::)
[10:29:27] *** Joins: shareable6 (sha-able@2001:41d0:2:5eb5::)
[10:29:29] *** Joins: notable6 (not-able@2001:41d0:2:5eb5::)
[10:29:30] *** Joins: releasable6 (rel-able@2001:41d0:2:5eb5::)
[10:29:34] *** Joins: sourceable6 (sou-able@2001:41d0:2:5eb5::)
[10:30:01] *** Joins: greppable6 (gre-able@2001:41d0:2:5eb5::)
[10:50:58] *** Joins: abraxxa (~ahartmai@smtp.hartmaier.priv.at)
[10:56:20] *** Quits: abraxxa (~ahartmai@smtp.hartmaier.priv.at) (Remote host closed the connection)
[10:58:25] *** Joins: abraxxa (~ahartmai@smtp.hartmaier.priv.at)
[11:03:05] *** Quits: abraxxa (~ahartmai@smtp.hartmaier.priv.at) (Ping timeout: 268 seconds)
[11:04:12] *** Joins: abraxxa (~ahartmai@tsa-tc-flod.t-systems.at)
[11:05:37] *** Joins: ychaouche (~ychaouche@user/ychaouche)
[11:15:31] *** Quits: squashable6 (squ-able@2001:41d0:2:5eb5::) (Remote host closed the connection)
[11:23:18] *** Joins: lichtkind (~lichtkind@p200300feb713be68181e699ef2a25ffb.dip0.t-ipconnect.de)
[11:27:35] *** Joins: coverable6 (cov-able@2001:41d0:2:5eb5::)
[11:38:19] *** Joins: reportable6 (rep-able@2001:41d0:2:5eb5::)
[11:41:10] *** Joins: hasrthur (~hasrthur@45.89.88.214)
[11:41:47] *** Quits: Sgeo__ (~Sgeo@user/sgeo) (Read error: Connection reset by peer)
[11:42:17] *** Quits: japhb (~geoff@mugs/japhb) (Ping timeout: 240 seconds)
[11:45:31] *** Quits: hasrthur (~hasrthur@45.89.88.214) (Ping timeout: 256 seconds)
[12:04:21] *** Joins: japhb (~geoff@mugs/japhb)
[12:08:08] *** Joins: frost (~frost@user/frost)
[12:12:44] *** Quits: frost (~frost@user/frost) (Remote host closed the connection)
[12:17:53] *** Joins: squashable6 (squ-able@2001:41d0:2:5eb5::)
[12:20:34] *** Joins: jjido (~Denis@2a02:c7f:5c91:e700:b193:a8bc:ecae:fe3)
[12:28:54] *** Joins: hasrthur (~hasrthur@45.89.88.214)
[12:39:56] *** Joins: dakkar (~dakkar@home.thenautilus.net)
[12:54:55] *** Quits: jjido (~Denis@2a02:c7f:5c91:e700:b193:a8bc:ecae:fe3) (Quit: My MacBook Air has gone to sleep. ZZZzzz…)
[12:57:12] *** Joins: jjido (~Denis@2a02:c7f:5c91:e700:b193:a8bc:ecae:fe3)
[13:20:11] <discord-raku-bot> <Nemokosch#9980> the part you linked:
[13:20:25] <discord-raku-bot> <Nemokosch#9980> _Any infix operator may be called with its two arguments reversed by prefixing with R. **Associativity of operands is reversed as well.**_
[13:21:38] <discord-raku-bot> <Nemokosch#9980> for me, this automatically implies that the `[R-] (...)` behavior was valid
[13:24:08] <SmokeMachine> patrickb: Please, when possible take a look at https://github.com/FCO/Red/issues/537
[13:30:21] *** Quits: mahafyi (~mahafyi@49.205.83.153) (Ping timeout: 256 seconds)
[13:32:46] *** Quits: lichtkind (~lichtkind@p200300feb713be68181e699ef2a25ffb.dip0.t-ipconnect.de) (Remote host closed the connection)
[13:34:03] <discord-raku-bot> <Nemokosch#9980> So yeah, the difference is that R- is right-associative while * R- * is left-associative by default, I guess
[13:36:07] <discord-raku-bot> <Nemokosch#9980> okay, this still doesn't explain:
[13:36:07] <discord-raku-bot> <Nemokosch#9980> mm: dd (1,4,5,10).reduce(&infix:<R->)
[13:36:07] <discord-raku-bot> <Nemokosch#9980> m: dd (1,4,5,10).reduce(&infix:<R->)
[13:36:37] <discord-raku-bot> <Nemokosch#9980> which is sadly still 8
[13:38:11] <discord-raku-bot> <Nemokosch#9980> _If &with is the code object of an operator, its inherent identity value and associativity is respected - in other words, (VAL1, VAL2, VAL3).reduce(&infix:<OP>) is the same as VAL1 OP VAL2 OP VAL3 even for operators which aren't left-associative:_
[13:38:11] <discord-raku-bot> <Nemokosch#9980> this is not true
[13:38:11] <discord-raku-bot> <Nemokosch#9980> ```perl
[13:38:11] <discord-raku-bot> <Nemokosch#9980> > (1,4,5,10).reduce(&infix:<R->)
[13:38:11] <discord-raku-bot> <Nemokosch#9980> 8
[13:38:11] <discord-raku-bot> <Nemokosch#9980> > 1 R- 4 R- 5 R- 10
[13:38:11] <discord-raku-bot> <Nemokosch#9980> 0
[13:38:12] <discord-raku-bot> <Nemokosch#9980> ```
[13:38:38] <discord-raku-bot> <Nemokosch#9980> Is this a bug?
[13:41:57] *** Quits: ugexe (ugexe@p6.nu) (Ping timeout: 240 seconds)
[13:42:17] *** Quits: jcallen (quassel@user/jcallen) (Ping timeout: 240 seconds)
[13:42:17] *** Quits: GreaseMonkey (greaser@user/greasemonkey) (Ping timeout: 240 seconds)
[13:42:17] *** Quits: mtj (quasselcor@2400:8902::f03c:91ff:fe93:b7f1) (Ping timeout: 240 seconds)
[13:42:38] <elcaro> I think the difference boils down to the .reduce or .produce methods process 2 args at a time, regardless of the associativity of the operator. The meta-reduction can consider the op before it processes the list, tho this means it  can handle infinite seq's
[13:42:49] *** Quits: jjido (~Denis@2a02:c7f:5c91:e700:b193:a8bc:ecae:fe3) (Quit: My MacBook Air has gone to sleep. ZZZzzz…)
[13:42:56] <elcaro> m: say ([\R*] (1 .. Inf)).head(3);
[13:42:56] <camelia> rakudo-moar 382f2f108: OUTPUT: «WARNING: unhandled Failure detected in DESTROY. If you meant to ignore it, you can mark it as handled by calling .Bool, .so, .not, or .defined methods. The Failure was:␤Cannot .elems a lazy list onto a List␤  in block <unit> at <tmp> line 1␤␤T…»
[13:43:04] *** Joins: greaser|q (greaser@antihype.space)
[13:43:06] *** Joins: jcallen (quassel@user/jcallen)
[13:44:23] <discord-raku-bot> <Nemokosch#9980> I mean, take a look at the quote
[13:44:23] <discord-raku-bot> <Nemokosch#9980> it does suggest that the two "queries" should produce (or reduce, hahaha) the same result
[13:45:05] *** Quits: abraxxa (~ahartmai@tsa-tc-flod.t-systems.at) (Ping timeout: 256 seconds)
[13:45:09] *** Joins: andinus` (andinus@tilde.institute)
[13:45:39] *** Quits: andinus (andinus@tilde.institute) (Ping timeout: 256 seconds)
[13:46:13] *** Quits: dakkar (~dakkar@home.thenautilus.net) (Ping timeout: 256 seconds)
[13:46:33] <elcaro> I don't have time to dig into it now... but I assume this behaivior was chosen purposefully. Maybe it was chosen to mirror Haskell's `foldr` and `foldl`
[13:47:09] <discord-raku-bot> <Nemokosch#9980> _Whether reduce accumulates the elements starting from the left or from the right depends on the operator. In the functional programming world, this operation is generally called a fold. With a right-associative operator it is a right fold, otherwise (and usually) it is a left fold. In Raku, you can specify the associativity of an operator with the is assoc._
[13:48:12] *** Joins: dakkar (~dakkar@home.thenautilus.net)
[13:48:31] <discord-raku-bot> <Nemokosch#9980> So yes, I don't know the exact definition either but trust me, this is worth reporting
[13:50:35] <discord-raku-bot> <Nemokosch#9980> The behavior explicitly contradicts the documentation so it's either wrong or the documentation needs extra explanation as to why the current description doesn't apply to this scenario
[13:51:35] <elcaro> bisectable6: say [R-] 1,3,5,10
[13:51:35] <bisectable6> elcaro, Will bisect the whole range automagically because no endpoints were provided, hang tight
[13:51:56] <bisectable6> elcaro, ¦6c (60 commits): «1␤»
[13:51:57] <bisectable6> elcaro, Nothing to bisect!
[13:52:04] *** Joins: jjido (~Denis@2a02:c7f:5c91:e700:b193:a8bc:ecae:fe3)
[13:52:35] <elcaro> it's always been that way... so probably just needs doc update
[13:54:24] *** Joins: mtj (~mtj@2400:8902::f03c:91ff:fe93:b7f1)
[13:55:43] *** Joins: ugexe (ugexe@p6.nu)
[13:59:24] <discord-raku-bot> <Nemokosch#9980> I mean, [R-] _is right_
[13:59:44] <discord-raku-bot> <Nemokosch#9980> see "Any infix operator may be called with its two arguments reversed by prefixing with R. Associativity of operands is reversed as well."
[14:00:01] *** Joins: abraxxa (~ahartmai@tsa-tc-flod.t-systems.at)
[14:00:55] <discord-raku-bot> <Nemokosch#9980> (1,3,5,10).reduce(infix:<R->) is wrong
[14:01:18] <discord-raku-bot> <Nemokosch#9980> One could say it's wrong for the sole reason that it isn't the same as [R-] but anyway, that's the one that contradicts the docs
[14:02:55] *** Quits: jjido (~Denis@2a02:c7f:5c91:e700:b193:a8bc:ecae:fe3) (Quit: My MacBook Air has gone to sleep. ZZZzzz…)
[14:06:13] <elcaro> The associativy is swapped, which is why the meta-reduction does what it does... but .reduce lazily processes 2 args at a time, so it can't possibly to a right-fold
[14:06:43] <elcaro> `(1,3,5,10).reduce(&infix:<R->)` essentially expands to `(((1 R- 3) R- 5) R- 10)`
[14:07:07] <discord-raku-bot> <Nemokosch#9980> Come on, I have quoted the docs several times by now
[14:07:40] <discord-raku-bot> <Nemokosch#9980> it explicitly states that the reduce method does take associativity into account, it expands without "parentheses" and it plays the role of foldl AND foldl, depending on the operator
[14:09:11] <discord-raku-bot> <Nemokosch#9980> this is a serious enough contradiction to ".reduce lazily processes 2 args at a time, so it can't possibly to a right-fold"
[14:09:12] <discord-raku-bot> <Nemokosch#9980> and indeed, why should/would List.reduce be lazy?
[14:09:28] <discord-raku-bot> <Nemokosch#9980> Supply.reduce okay but List.reduce doesn't have to and it has no particularly good reason to
[14:12:12] <elcaro> yeah, WRT laziness, it's more applicable to .produce
[14:12:57] <elcaro> but yes, I can see the docs, particularly the section you  copied starting with _Whether reduce accumulates the elements starting from the left or from_
[14:13:56] <elcaro> but it never shows examples of this working with .reduce method, only the meta-reduction
[14:16:20] *** Joins: mexen_ (uid495612@user/mexen)
[14:16:29] *** Quits: mexen (uid495612@user/mexen) (Ping timeout: 250 seconds)
[14:16:29] *** Quits: m_athias (~m-fteeyd@comm.detonation.org) (Ping timeout: 250 seconds)
[14:16:29] *** Quits: Arathorn (~arathorn@2001:470:69fc:105::1f) (Ping timeout: 250 seconds)
[14:16:29] *** Quits: charsbar (~charsbar@153.126.151.115.v6.sakura.ne.jp) (Ping timeout: 250 seconds)
[14:16:29] *** mexen_ is now known as mexen
[14:16:55] *** Quits: Juerd (juerd@computervrede.nl) (Ping timeout: 250 seconds)
[14:17:21] *** Quits: synthmeat (~synthmeat@user/synthmeat) (Ping timeout: 250 seconds)
[14:17:45] *** Joins: m_athias (~m-fteeyd@comm.detonation.org)
[14:18:41] <elcaro> bisectable6: say (1,3,5,10).reduce(&infix:<R->)
[14:18:41] <bisectable6> elcaro, Will bisect the whole range automagically because no endpoints were provided, hang tight
[14:18:59] *** Joins: Juerd (juerd@computervrede.nl)
[14:19:05] <bisectable6> elcaro, ¦6c (60 commits): «7␤»
[14:19:06] <bisectable6> elcaro, Nothing to bisect!
[14:21:19] *** Joins: charsbar (~charsbar@153.126.151.115.v6.sakura.ne.jp)
[14:21:21] *** Quits: dakkar (~dakkar@home.thenautilus.net) (Ping timeout: 256 seconds)
[14:21:45] *** Joins: dakkar (~dakkar@home.thenautilus.net)
[14:21:52] <Voldenet> Can I somehow call methods on hashes to get its keys?
[14:22:03] <Voldenet> m: role X { method ACCEPTS($_) { $_.x ~~ $.x } }; class A is X { has $.x; }; say A.new(:5x) ~~ {:5x} but X
[14:22:04] <camelia> rakudo-moar b9ffbb973: OUTPUT: «No such method 'x' for invocant of type 'Hash+{X}'␤  in method ACCEPTS at <tmp> line 1␤  in block <unit> at <tmp> line 1␤␤»
[14:22:23] <discord-raku-bot> <Nemokosch#9980> there is the keys method, right?
[14:22:27] <discord-raku-bot> <Nemokosch#9980> or what do you mean?
[14:23:40] <discord-raku-bot> <Nemokosch#9980> elcaro: anyway, I'd say let's not forget this phenomenon because 1. I can still imagine it's a bug 2. if it's no bug, it would be good to get an explanation and add it to the docs
[14:24:04] <Voldenet> to somehow do this `({:5x} but Magic).x`
[14:27:48] <discord-raku-bot> <elcaro#8265> I will first see if I can find any artifacts in the IRC logs, as well as any existing issues
[14:27:48] *** Quits: hasrthur (~hasrthur@45.89.88.214) (Read error: Connection reset by peer)
[14:27:58] *** Joins: hasrthur (~hasrthur@45.89.88.214)
[14:29:41] *** Joins: Arathorn (~arathorn@2001:470:69fc:105::1f)
[14:30:04] *** Joins: synthmeat (~synthmeat@user/synthmeat)
[14:32:26] <MasterDuke> m: role X { method FALLBACK(Hash:D: $key) { self{$key} } }; say ({:5x} but X).x   # Voldenet like this?
[14:32:26] <camelia> rakudo-moar b9ffbb973: OUTPUT: «5␤»
[14:33:52] <Voldenet> Yes, exactly! MasterDuke++
[14:34:00] <discord-raku-bot> <Nemokosch#9980> what is "but" actually?
[14:34:41] <Voldenet> operator creating value with mixin
[14:41:19] <elcaro> `but` mixes a role in at runtime (as opposed to `class Foo does Bar` which mixes the `Bar` role in at compiletime)
[14:45:47] *** Joins: mahafyi (~mahafyi@2402:e280:2141:2f:930a:c447:3ac7:2a04)
[14:56:48] <leont> I'm dd()ing an array, but I'm getting a «Cannot .elems a lazy list onto a Array» error and I don't understand why
[14:57:22] <leont> It shouldn't be lazy AFAICT
[15:01:09] *** Joins: jjido (~Denis@2a02:c7f:5c91:e700:b193:a8bc:ecae:fe3)
[15:03:14] <elcaro> leont: Array's can still house lazy Seq's. What's you're array look like
[15:03:36] <elcaro> m: my @a = (1..Inf); say 'no eagerness here'
[15:03:37] <camelia> rakudo-moar ffa09ff68: OUTPUT: «no eagerness here␤»
[15:03:38] *** Quits: unclechu (~unclechu@2001:470:69fc:105::354) (Quit: Bridge terminating on SIGTERM)
[15:03:39] *** Quits: AlexDaniel (~alexdanie@2001:470:69fc:105::15e1) (Quit: Bridge terminating on SIGTERM)
[15:03:39] *** Quits: anight[m] (~anightted@2001:470:69fc:105::1:6ce9) (Quit: Bridge terminating on SIGTERM)
[15:03:39] *** Quits: andrea[m] (~andreanit@2001:470:69fc:105::1:28a8) (Quit: Bridge terminating on SIGTERM)
[15:03:39] *** Quits: CIAvash (~ciavash@2001:470:69fc:105::264) (Quit: Bridge terminating on SIGTERM)
[15:03:41] *** Quits: Arathorn (~arathorn@2001:470:69fc:105::1f) (Quit: Bridge terminating on SIGTERM)
[15:05:53] <leont> I know they can, but I'm surprised this is
[15:06:20] *** Joins: hasrthur_ (~hasrthur@45.89.88.214)
[15:07:00] <leont> It's a Never mind. I accidentally used an X where I meant a Z, and then everything exploded
[15:07:15] *** Quits: hasrthur (~hasrthur@45.89.88.214) (Ping timeout: 256 seconds)
[15:11:44] *** Joins: CIAvash (~ciavash@2001:470:69fc:105::264)
[15:17:42] *** Quits: CIAvash (~ciavash@2001:470:69fc:105::264) (Remote host closed the connection)
[15:21:23] *** Quits: jjido (~Denis@2a02:c7f:5c91:e700:b193:a8bc:ecae:fe3) (Quit: My MacBook Air has gone to sleep. ZZZzzz…)
[15:31:22] *** Joins: CIAvash (~ciavash@2001:470:69fc:105::264)
[15:32:22] *** Quits: hasrthur_ (~hasrthur@45.89.88.214) (Quit: Leaving...)
[15:32:43] *** Quits: CIAvash (~ciavash@2001:470:69fc:105::264) (Remote host closed the connection)
[15:36:35] *** Quits: reportable6 (rep-able@2001:41d0:2:5eb5::) (Remote host closed the connection)
[15:38:49] *** Joins: CIAvash (~ciavash@2001:470:69fc:105::264)
[16:03:04] *** [Coke]_ is now known as [Coke]
[16:06:31] *** Quits: CIAvash (~ciavash@2001:470:69fc:105::264) (Quit: Client limit exceeded: 20000)
[16:10:44] *** Joins: AlexDaniel (~alexdanie@2001:470:69fc:105::15e1)
[16:10:44] *** Joins: Arathorn (~arathorn@2001:470:69fc:105::1f)
[16:10:44] *** Joins: unclechu (~unclechu@2001:470:69fc:105::354)
[16:10:56] *** Joins: andrea[m] (~andreanit@2001:470:69fc:105::1:28a8)
[16:10:56] *** Joins: anight[m] (~anightted@2001:470:69fc:105::1:6ce9)
[16:37:05] *** Joins: Averna (Averna@gateway/vpn/protonvpn/averna)
[16:37:58] *** Joins: reportable6 (rep-able@2001:41d0:2:5eb5::)
[16:46:09] *** Joins: jjido (~Denis@94.4.149.217)
[16:53:42] *** Joins: Darkcoal (~user@2001:16a2:7ade:4500:78d6:a5c5:9558:b0ea)
[17:01:17] *** Joins: jgaz (~jgaz@2600:8805:d980:7620:2e0:4cff:fe00:e201)
[17:01:17] *** Joins: m6502 (~jgaz@2600:8805:d980:7620:2e0:4cff:fe00:e201)
[17:01:18] *** Quits: m6502 (~jgaz@2600:8805:d980:7620:2e0:4cff:fe00:e201) (Remote host closed the connection)
[17:01:22] *** Quits: jgaz (~jgaz@2600:8805:d980:7620:2e0:4cff:fe00:e201) (Remote host closed the connection)
[17:01:42] *** Joins: jgaz (~jgaz@2600:8805:d980:7620:2e0:4cff:fe00:e201)
[17:03:58] *** Quits: Darkcoal (~user@2001:16a2:7ade:4500:78d6:a5c5:9558:b0ea) (Ping timeout: 260 seconds)
[17:05:35] *** Joins: Darkcoal (~user@2001:16a2:7ade:4500:78d6:a5c5:9558:b0ea)
[17:13:20] *** Quits: jjido (~Denis@94.4.149.217) (Quit: My MacBook Air has gone to sleep. ZZZzzz…)
[17:15:09] *** Joins: lichtkind (~lichtkind@p200300feb713be4b7dc6b28aebb82e5a.dip0.t-ipconnect.de)
[17:19:59] *** Quits: Darkcoal (~user@2001:16a2:7ade:4500:78d6:a5c5:9558:b0ea) (Ping timeout: 250 seconds)
[17:21:54] *** Joins: Darkcoal (~user@167.86.178.227)
[17:23:55] *** Quits: jgaz (~jgaz@2600:8805:d980:7620:2e0:4cff:fe00:e201) (Quit: Leaving)
[17:27:44] *** Joins: jjido (~Denis@2a02:c7f:5c91:e700:b193:a8bc:ecae:fe3)
[17:44:44] *** Quits: mahafyi (~mahafyi@2402:e280:2141:2f:930a:c447:3ac7:2a04) (Quit: Client closed)
[17:51:11] *** Joins: mahafyi (~mahafyi@2402:e280:2141:2f:930a:c447:3ac7:2a04)
[17:56:24] *** Joins: SqrtNegInf (~SqrtNegIn@97-113-165-109.tukw.qwest.net)
[17:58:36] * lizmat clickbaits https://rakudoweekly.blog/2022/01/31/2022-05-foo-is-42/
[17:58:36] *** Joins: CIAvash (~ciavash@2001:470:69fc:105::264)
[18:24:57] *** Quits: jjido (~Denis@2a02:c7f:5c91:e700:b193:a8bc:ecae:fe3) (Quit: My MacBook Air has gone to sleep. ZZZzzz…)
[19:03:45] *** Joins: Sgeo (~Sgeo@user/sgeo)
[19:06:22] *** Joins: D5n9sMatrix (~D5n9sMatr@177.72.178.213)
[19:13:58] *** Quits: linkable6 (lin-able@2001:41d0:2:5eb5::) (Remote host closed the connection)
[19:15:30] *** Quits: qorg11 (~lain@2605:6400:c022:fa04::666) (Ping timeout: 250 seconds)
[19:16:05] *** Joins: linkable6 (lin-able@2001:41d0:2:5eb5::)
[19:19:42] *** Joins: qorg11 (~lain@2605:6400:c022:fa04::666)
[19:20:24] *** Quits: linkable6 (lin-able@2001:41d0:2:5eb5::) (Remote host closed the connection)
[19:22:30] *** Joins: linkable6 (lin-able@2001:41d0:2:5eb5::)
[19:29:37] *** Quits: D5n9sMatrix (~D5n9sMatr@177.72.178.213) (Ping timeout: 256 seconds)
[19:43:55] *** Quits: ychaouche (~ychaouche@user/ychaouche) (Quit: Konversation terminated!)
[19:46:32] *** Quits: swaggboi (~swaggboi@slackware.uk/supporter/swaggboi) (Quit: C-x C-c)
[19:51:12] *** Joins: swaggboi (~swaggboi@slackware.uk/supporter/swaggboi)
[20:19:28] *** Joins: jjido (~Denis@2a02:c7f:5c91:e700:b193:a8bc:ecae:fe3)
[20:43:17] *** Quits: Averna (Averna@gateway/vpn/protonvpn/averna) (Ping timeout: 256 seconds)
[20:45:41] *** Joins: Sgeo_ (~Sgeo@user/sgeo)
[20:49:10] *** Quits: Sgeo (~Sgeo@user/sgeo) (Ping timeout: 256 seconds)
[21:11:06] <Geth> ¦ doc: b10615679b | (Suman Khanal)++ (committed using GitHub Web editor) | doc/Language/py-nutshell.pod6
[21:11:06] <Geth> ¦ doc: Update python to raku
[21:11:06] <Geth> ¦ doc: 
[21:11:06] <Geth> ¦ doc: As we know python 2 is no longer maintained https://www.python.org/doc/sunset-python-2/, its better to reflect examples 
[21:11:06] <Geth> ¦ doc: compatible with python 3 unless we mean python 2 explicitly. This patch makes python examples compatible with python 3.
[21:11:07] <Geth> ¦ doc: review: https://github.com/Raku/doc/commit/b10615679b
[21:11:09] <linkable6> Link: https://docs.raku.org/language/py-nutshell
[21:11:16] *** Quits: dakkar (~dakkar@home.thenautilus.net) (Ping timeout: 256 seconds)
[21:23:36] *** Quits: abraxxa (~ahartmai@tsa-tc-flod.t-systems.at) (Remote host closed the connection)
[21:37:04] *** Quits: reportable6 (rep-able@2001:41d0:2:5eb5::) (Remote host closed the connection)
[21:40:06] *** Joins: reportable6 (rep-able@2001:41d0:2:5eb5::)
[22:01:34] *** Joins: dextercd (~dexter@2a02-a450-f25d-1-76d4-35ff-fefe-34c.fixed6.kpn.net)
[22:07:35] *** Quits: mahafyi (~mahafyi@2402:e280:2141:2f:930a:c447:3ac7:2a04) (Quit: Client closed)
[22:08:02] *** Joins: mahafyi (~mahafyi@2402:e280:2141:2f:930a:c447:3ac7:2a04)
[22:09:59] *** Quits: jjido (~Denis@2a02:c7f:5c91:e700:b193:a8bc:ecae:fe3) (Quit: My MacBook Air has gone to sleep. ZZZzzz…)
[22:12:37] *** Joins: jjido (~Denis@2a02:c7f:5c91:e700:b193:a8bc:ecae:fe3)
[22:28:45] *** Joins: ajr (~andrew@47.151.137.150)
[22:50:41] <Geth> ¦ doc/circleci: 06b41720f4 | sumanstats++ | 2 files
[22:50:41] <Geth> ¦ doc/circleci: Remove .circleci folder
[22:50:41] <Geth> ¦ doc/circleci: 
[22:50:41] <Geth> ¦ doc/circleci: Seems like circleci link is dead. As the github action is good, there's no need to keep circleci. Remove.
[22:50:41] <Geth> ¦ doc/circleci: review: https://github.com/Raku/doc/commit/06b41720f4
[22:50:41] <Geth> ¦ doc/circleci: e7ab97e363 | sumanstats++ | README.md
[22:50:41] <Geth> ¦ doc/circleci: remove circleci from README
[22:50:43] <Geth> ¦ doc/circleci: review: https://github.com/Raku/doc/commit/e7ab97e363
[22:50:45] <Geth> ¦ doc/circleci: 949e2f2f0b | sumanstats++ | shippable.yml
[22:50:47] <Geth> ¦ doc/circleci: Remove shippable yml
[22:50:49] <Geth> ¦ doc/circleci: 
[22:50:51] <Geth> ¦ doc/circleci: Doesn't seem to be of use. Remove
[22:50:53] <Geth> ¦ doc/circleci: review: https://github.com/Raku/doc/commit/949e2f2f0b
[22:53:12] <Geth> ¦ doc: sumanstats++ created pull request #4024: Remove unnecessary files and links
[22:53:12] <Geth> ¦ doc: review: https://github.com/Raku/doc/pull/4024
[23:03:17] *** Joins: clarjon_1 (~clarjon1@user/clarjon1)
[23:05:57] *** Quits: clarjon1 (~clarjon1@user/clarjon1) (Ping timeout: 240 seconds)
[23:06:11] *** Quits: ajr (~andrew@47.151.137.150) (Ping timeout: 245 seconds)
[23:12:00] <Geth> ¦ doc: 0eadc5a489 | (Daniel Sockwell)++ (committed using GitHub Web editor) | doc/Language/objects.pod6
[23:12:00] <Geth> ¦ doc: Document `handles(**)` (#4019)
[23:12:00] <Geth> ¦ doc: 
[23:12:00] <Geth> ¦ doc: Explains that you can pass a HyperWhatever to the `handles` method
[23:12:00] <Geth> ¦ doc: and describes how that's different from passing a Whatever.
[23:12:01] <Geth> ¦ doc: review: https://github.com/Raku/doc/commit/0eadc5a489
[23:12:03] <linkable6> Link: https://docs.raku.org/language/objects
[23:12:49] *** Quits: linkable6 (lin-able@2001:41d0:2:5eb5::) (Remote host closed the connection)
[23:13:02] *** Quits: greaser|q (greaser@antihype.space) (Changing host)
[23:13:02] *** Joins: greaser|q (greaser@user/greasemonkey)
[23:13:05] *** greaser|q is now known as GreaseMonkey
[23:24:37] *** Joins: ajr (~andrew@47.151.137.150)
[23:28:58] *** Quits: ajr (~andrew@47.151.137.150) (Ping timeout: 256 seconds)
[23:41:39] <discord-raku-bot> <Nemokosch#9980> lizmat: do you by any chance know something about the strange behavior of List.reduce with infix:<R-> ?
[23:41:40] <discord-raku-bot> <Nemokosch#9980> that is, not taking right-associativity into account (unlike [R-])
[23:41:57] <lizmat> nope
[23:45:47] <discord-raku-bot> <Nemokosch#9980> Perhaps it's issue-worthy then?
[23:52:36] <Geth> ¦ doc/circleci: fd77a5e37c | sumanstats++ | 2 files
[23:52:36] <Geth> ¦ doc/circleci: Revert "Remove .circleci folder"
[23:52:36] <Geth> ¦ doc/circleci: 
[23:52:36] <Geth> ¦ doc/circleci: This reverts commit 06b41720f41b002f1575b20ced338b3b73fbe1c6.
[23:52:36] <Geth> ¦ doc/circleci: CircleCI builds documentation. So keep it.
[23:52:36] <Geth> ¦ doc/circleci: review: https://github.com/Raku/doc/commit/fd77a5e37c
[23:52:37] <Geth> ¦ doc/circleci: 51d2f935f8 | sumanstats++ | README.md
[23:52:38] <Geth> ¦ doc/circleci: Revert "remove circleci from README"
[23:52:40] <Geth> ¦ doc/circleci: 
[23:52:42] <Geth> ¦ doc/circleci: This reverts commit e7ab97e36374c986f4bca913cb666ace9c0ba1de.
[23:52:44] <Geth> ¦ doc/circleci: review: https://github.com/Raku/doc/commit/51d2f935f8
[23:52:49] <lizmat> probably  :-)
[23:57:55] *** Joins: Sgeo (~Sgeo@user/sgeo)
