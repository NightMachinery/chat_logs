[00:07:23] *** Quits: magla (~gelignite@55d43d25.access.ecotel.net) (Quit: Stay safe!)
[00:08:27] *** Joins: magla (~gelignite@55d43d25.access.ecotel.net)
[00:13:12] *** Quits: genom (~g@37.214.83.249) (Remote host closed the connection)
[00:16:09] *** Joins: DevAntoine (~DevAntoin@78.196.234.32)
[00:22:21] *** Quits: DevAntoine (~DevAntoin@78.196.234.32) (Remote host closed the connection)
[00:22:56] *** Joins: DevAntoine (~DevAntoin@78.196.234.32)
[00:26:05] *** Quits: Akimb (~Akimb@86.100.13.100) (Read error: Connection reset by peer)
[00:27:38] *** Quits: DevAntoine (~DevAntoin@78.196.234.32) (Ping timeout: 272 seconds)
[00:38:28] *** Joins: DevAntoine (~DevAntoin@78.196.234.32)
[00:40:06] *** Joins: Akimb (~Akimb@86.100.13.100)
[00:42:55] *** Quits: DevAntoine (~DevAntoin@78.196.234.32) (Ping timeout: 256 seconds)
[00:54:31] *** Quits: Akimb (~Akimb@86.100.13.100) (Read error: Connection reset by peer)
[00:58:51] *** Quits: Skorlok (~Skorlok@lfbn-ren-1-512-90.w2-10.abo.wanadoo.fr) (Quit: Connection closed)
[01:16:10] *** Joins: jgrim581 (~jgrim@d60-65-211-197.col.wideopenwest.com)
[01:28:59] *** Quits: magla (~gelignite@55d43d25.access.ecotel.net) (Quit: Stay safe!)
[01:33:17] *** Quits: TanoMarcelo (~TanoMarce@179.63.242.126) (Quit: WeeChat 3.1)
[01:48:53] *** Joins: goddard (~goddard@user/goddard)
[01:51:41] *** Joins: brickfat (~brickfat@user/brickfat)
[02:02:35] *** Quits: Carnage (~carnage@user/carnage) (Ping timeout: 265 seconds)
[02:05:39] *** Quits: evilbug (~evilbug@86.127.60.194) (Ping timeout: 256 seconds)
[02:08:23] *** Quits: Heraes (~Heraes@user/romarain) (Ping timeout: 265 seconds)
[02:32:51] *** Joins: Rubin (~rubin@2001:470:69fc:105::17e)
[02:32:59] *** Quits: brickfat (~brickfat@user/brickfat) (Quit: Leaving)
[02:35:08] *** Joins: ramsey (~ramsey@user/ramsey)
[02:36:32] *** Quits: biberu (~biberu@user/biberu) (Read error: Connection reset by peer)
[02:36:52] *** Joins: biberu (~biberu@user/biberu)
[02:41:44] *** Quits: Rubin (~rubin@2001:470:69fc:105::17e) (Quit: node-irc says goodbye)
[02:42:03] *** Quits: ramsey (~ramsey@user/ramsey) (Quit: node-irc says goodbye)
[02:50:55] *** Quits: judah (~judah@rrcs-74-87-190-146.west.biz.rr.com) (Quit: Leaving)
[02:57:56] *** Joins: Rubin (~rubin@2001:470:69fc:105::17e)
[03:00:15] *** Joins: ramsey (~ramsey@user/ramsey)
[03:31:02] *** Joins: xisop (~xisop@bnull.net)
[04:04:53] *** Quits: keypusher (keypusher@user/keypusher) (Ping timeout: 272 seconds)
[04:06:24] *** Joins: stkrdknmibalz (~test@rrcs-75-87-43-226.sw.biz.rr.com)
[04:11:18] *** Quits: Jiyu (~Jiyu@2001:981:2d82:1:a60:6eff:fe47:8f4b) (Ping timeout: 268 seconds)
[04:16:43] *** Joins: TanoMarcelo (~TanoMarce@179.63.242.126)
[04:18:12] *** Joins: keypusher (keypusher@user/keypusher)
[04:18:40] *** Quits: MrTrick (uid181961@id-181961.highgate.irccloud.com) (Quit: Connection closed for inactivity)
[04:48:49] *** Joins: Jiyu (~Jiyu@83-160-73-77.ip.xs4all.nl)
[04:54:24] *** Quits: Donitz (~Donitz@85-156-203-108.elisa-laajakaista.fi) (Ping timeout: 244 seconds)
[04:56:15] *** Joins: Donitz (~Donitz@85-156-203-108.elisa-laajakaista.fi)
[05:09:25] *** Quits: omegatron (~some@p5b056bc7.dip0.t-ipconnect.de) (Quit: What happened? You quit!)
[05:18:42] *** Quits: Donitz (~Donitz@85-156-203-108.elisa-laajakaista.fi) (Ping timeout: 240 seconds)
[05:20:49] *** Joins: Donitz (~Donitz@85-156-203-108.elisa-laajakaista.fi)
[05:30:23] *** Quits: vlm (~vlm@user/vlm) (Quit: "")
[05:34:40] *** Joins: vlm (~vlm@user/vlm)
[05:37:36] *** Quits: TanoMarcelo (~TanoMarce@179.63.242.126) (Quit: WeeChat 3.1)
[05:44:00] *** Joins: chao (~stenno@user/stenno)
[05:45:54] *** Quits: stenno (~stenno@user/stenno) (Ping timeout: 240 seconds)
[05:51:01] *** Quits: seand (~seand@69.54.136.33) (Remote host closed the connection)
[05:55:46] *** Quits: elastic_dog (~elastic_d@2a01:118f:822:9c00:2132:cd52:1e4a:f46a) (Quit: elastic_dog)
[05:57:32] *** Joins: elastic_dog (~elastic_d@2a01:118f:822:9c00:2132:cd52:1e4a:f46a)
[05:57:51] *** Joins: ferdna (~ferdna@user/ferdna)
[06:01:01] *** Joins: TanoMarcelo (~TanoMarce@179.63.242.126)
[06:05:30] *** Quits: entuland (~entuland@user/entuland) (Ping timeout: 240 seconds)
[06:09:24] *** Quits: joedoe47 (~joedoe47@c-98-254-188-143.hsd1.fl.comcast.net) (Ping timeout: 272 seconds)
[06:10:40] *** Quits: ferdna (~ferdna@user/ferdna) (Quit: Leaving)
[06:23:06] *** Joins: joedoe47 (~joedoe47@c-98-254-188-143.hsd1.fl.comcast.net)
[06:26:22] *** pizza is now known as pizzaiolo
[06:49:58] *** gwillick1 is now known as gwillickers
[06:52:47] *** Joins: mrlemke (~mrlemke@208.74.105.200)
[06:55:23] *** Joins: harpia (~harpia@58.148.205.168.dynamic.vibefibra.com.br)
[07:00:17] *** jgrim581 is now known as jgrim
[07:39:34] *** Quits: harpia (~harpia@58.148.205.168.dynamic.vibefibra.com.br) (Ping timeout: 272 seconds)
[07:48:03] *** Joins: Rockwood_ (~Rocky@user/rocky)
[07:49:59] *** pizzaiolo is now known as pizza
[07:53:00] *** Quits: qwedfg (~qwedfg@user/qwedfg) (Ping timeout: 265 seconds)
[07:56:18] *** Quits: chao (~stenno@user/stenno) (Ping timeout: 240 seconds)
[08:00:49] *** Joins: qwedfg (~qwedfg@user/qwedfg)
[08:17:30] *** Joins: ferdna (~ferdna@user/ferdna)
[08:30:02] *** Joins: chao (~stenno@user/stenno)
[08:34:57] *** Quits: chao (~stenno@user/stenno) (Ping timeout: 256 seconds)
[08:35:13] *** Quits: Rockwood_ (~Rocky@user/rocky) (Read error: Connection reset by peer)
[09:04:08] *** Joins: Akimb (~Akimb@86.100.13.100)
[09:17:48] *** Quits: Akimb (~Akimb@86.100.13.100) (Read error: Connection reset by peer)
[09:18:37] *** Joins: dlundgren (~dlundgren@75-9-109-251.lightspeed.milwwi.sbcglobal.net)
[09:24:09] *** Joins: chao (~stenno@user/stenno)
[09:28:42] *** Quits: chao (~stenno@user/stenno) (Ping timeout: 240 seconds)
[09:35:41] *** Joins: Akimb (~Akimb@82-135-197-171.static.zebra.lt)
[09:49:37] *** Joins: chao (~stenno@user/stenno)
[10:42:00] *** Joins: undefined_bob (~undefined@user/undefined-bob/x-5411918)
[11:02:38] *** Joins: Naktibalda (~Naktibald@88.135.22.17)
[11:08:55] *** Quits: stkrdknmibalz (~test@rrcs-75-87-43-226.sw.biz.rr.com) (Quit: WeeChat 3.0.1)
[11:15:07] *** Joins: wfpkhc (~hc@n114-75-175-35.bla4.nsw.optusnet.com.au)
[11:15:11] * wfpkhc wanders on in
[11:15:19] * wfpkhc waves hello
[11:15:28] <wfpkhc> Anyone alive here?
[11:15:45] * wfpkhc sits quietly
[11:15:53] <wfpkhc> i just came from the old freenode
[11:15:55] <wfpkhc> chat
[11:16:36] <Naktibalda> hi
[11:16:43] <wfpkhc> heya
[11:16:47] <wfpkhc> how are you Naktibalda
[11:16:56] <wfpkhc> do you know much about php?
[11:18:58] <wfpkhc> i guess not
[11:19:05] <wfpkhc> i had a question about variable scope in php
[11:20:01] <l-x> wfpkhc: just ask, maybe somebody will answer
[11:20:07] <wfpkhc> https://dpaste.org/Tefa#L
[11:20:24] <wfpkhc> Line 20 and 38
[11:20:42] <wfpkhc> they both have the same variable name within the function scope
[11:21:16] <wfpkhc> only recently - i found out that php does NOT have scope within IF statements
[11:21:31] <wfpkhc> so, from that code example provide - is that considered bad coding
[11:21:44] <wfpkhc> or would it have an effect on performance
[11:22:21] <wfpkhc> im used to C# with it scope handling
[11:23:10] <wfpkhc> my understand it has class, method and block scope but this does not apply to php
[11:23:21] <wfpkhc> so im just trying to figure out the best way to handle this
[11:23:33] <wfpkhc> https://www.geeksforgeeks.org/scope-of-variables-in-c-sharp/
[11:24:13] <Naktibalda> please format your code better to make it readable
[11:24:50] <wfpkhc> https://i.postimg.cc/SsSdZdQ7/image.png
[11:24:54] <wfpkhc> whats hard to read about it?
[11:25:10] *** Joins: dimi1947 (~dimi1947@2a02:1388:208d:76ca:6022:6217:fc1a:dde8)
[11:25:18] <Naktibalda> I'm reading it on a smaller screen
[11:25:25] <wfpkhc> that explains why
[11:25:52] <wfpkhc> ill be back in a minute
[11:26:45] <Naktibalda> line 23 is indented about 70% of a screen width. and line 20 doesn't fit
[11:27:00] <Naktibalda> it would probably look good if each tab was replaced with 1 space
[11:27:10] <l-x> if it is bad coding depends on your intent.
[11:27:36] <Naktibalda> lines 20 and 38 are in different `if` branches, so only one of them will be executed and variable will still exists after if statement
[11:27:37] <l-x> $objProcDbTbl_RelDivisionMembers contains in both cases a DivisionMembers instance
[11:28:20] <l-x> What you are doing is a conditional variable assignment - which is perfectly fine in my opinion.
[11:29:05] <l-x> While the readability of your sample isn't ^^ (No offence)
[11:30:42] *** Quits: mrlemke (~mrlemke@208.74.105.200) (Ping timeout: 240 seconds)
[11:33:48] <wfpkhc> im back
[11:34:24] <wfpkhc> no offence taken
[11:34:55] <wfpkhc> and i appreciate people looking at the code
[11:35:09] <wfpkhc> but yes the variable names are dependant upon if statements
[11:35:30] <wfpkhc> but i was not sure how that affected php, if at all, because there is no scope for that
[11:36:04] <wfpkhc> wish php inside classes would handle scope like c#
[11:36:47] <wfpkhc> block scope would be fabulous
[11:37:00] <l-x> This would break 99.99999% of the php code out there xD
[11:37:09] <wfpkhc> not really
[11:37:16] <wfpkhc> not if it was applied inside classes only
[11:37:25] <wfpkhc> as they are only new to php 7.0
[11:38:28] <wfpkhc> and it would drastically improve performance coding
[11:38:49] <wfpkhc> improve performance/ peoples coding
[11:39:46] <wfpkhc> so ...to finalise
[11:39:52] <wfpkhc> there is nothing wrong with the coding as such
[11:40:01] <wfpkhc> i appreciate the feedback
[11:40:05] <wfpkhc> and looking at the code
[11:40:09] <l-x> you're welcome
[11:40:23] <wfpkhc> sorry to hear about freenode btw
[11:40:30] <wfpkhc> it sucks
[11:40:47] <wfpkhc> https://www.theregister.com/2021/05/26/freenode_irc_takeover/
[11:40:58] * wfpkhc hugs everyone and wanders out of the channel
[11:41:02] *** Parts: wfpkhc (~hc@n114-75-175-35.bla4.nsw.optusnet.com.au) ()
[11:43:33] *** l-x is now known as [censored]
[11:57:11] *** Joins: mIk3_08 (~Thunderbi@user/mik3-08/x-2852566)
[11:57:49] *** Quits: chao (~stenno@user/stenno) (Ping timeout: 256 seconds)
[12:00:29] *** Joins: DevAntoine (~DevAntoin@195.101.183.21)
[12:00:45] *** Quits: DevAntoine (~DevAntoin@195.101.183.21) (Remote host closed the connection)
[12:01:14] *** Joins: DevAntoine (~DevAntoin@195.101.183.21)
[12:14:48] <BadAdviceCat> Ah man, those namespaces are so dang unnecessary.
[12:14:48] *** Quits: ferdna (~ferdna@user/ferdna) (Quit: Leaving)
[12:15:55] <BadAdviceCat> Well actually, the namespaces are fine. It would be better if he would use the USE; keyword.
[12:17:12] <BadAdviceCat> Just weird and makes code a bit annoying to update. PHP Version8_0 may take several months before it needs to be updated, and it might be easy to change via a simple find and replace.
[12:20:45] *** Quits: aloy (~luna@2001:41f0:3fe:3:6c52:53d1:e4de:757f) (Remote host closed the connection)
[12:21:06] *** Joins: aloy (~luna@2001:41f0:3fe:3:4c8d:5560:d5aa:bfc7)
[13:01:46] *** Joins: Repox (~Repox@85.203.136.146)
[13:06:24] *** Quits: Akimb (~Akimb@82-135-197-171.static.zebra.lt) (Ping timeout: 256 seconds)
[13:11:37] *** Quits: TanoMarcelo (~TanoMarce@179.63.242.126) (Quit: WeeChat 3.1)
[13:34:54] *** Joins: LucaTM (~LucaTM@user/lucatm)
[13:46:34] *** Joins: olle (~olle@p5dfcc8a6.dip0.t-ipconnect.de)
[13:49:26] <dimi1947> what function you think I should use for hashing passwrods...is crypt still good?
[13:50:09] *** Joins: entuland (~entuland@user/entuland)
[13:50:21] <AllenJB> password_hash()
[13:50:39] <ss23> dimi1947: Unix crypt is not good for most people. In PHP, use password_hash(). The output is crypt() compatible (kind of, depends on the algorithms used, but in general)
[13:52:03] <dimi1947> and as I see in the manual the salt is generated automatically
[13:52:26] <AllenJB> As it should be
[13:53:44] <ss23> dimi1947: password_hash is basically a wrapper around crypt() that checks a bunch of extra things to make sure it's secure, hence its preference over using raw crypt()
[13:55:11] <dimi1947> which algorithm do you think I should use?
[13:55:24] <AllenJB> The default
[13:55:43] <ss23> dimi1947: The default one is good, and it'll be updated to make sure it stays secure. Basically, if someone finds an issue in bcrypt() at some point, by using the default, you can make sure that new people are using the more secure one automatically
[13:56:34] <ss23> dimi1947: There is a function specifically to handle migration (kind of) if you ever want to change it too -- http://php.net/password_needs_rehash -- so if you implement it using that, you can easily change in future if you want/need to :)
[13:56:55] <dimi1947> ...at a later time
[13:58:15] <dimi1947> and as I see no need to store the salt in the db
[13:58:28] <Naktibalda> salt is part of the hash
[13:58:32] <ss23> dimi1947: It's like crypt, you just store the output directly
[13:59:03] <dimi1947> ...yes I can see that salt it part ofr the hash....
[13:59:25] <dimi1947> and passwrod_verify will take care everything
[13:59:38] <dimi1947> what needs to be checked I mean
[14:07:17] <BadAdviceCat> dimi1947, if I were you, I would take the time to understand how the above password_* functions work, and then after you've figured this out, then read https://paragonie.com/blog/2015/04/secure-authentication-php-with-long-term-persistence to understand how to do a good system for authentication.
[14:07:22] <BadAdviceCat> Also https://paragonie.com/blog/2017/02/split-tokens-token-based-authentication-protocols-without-side-channels
[14:07:39] <dimi1947> thx
[14:07:40] <BadAdviceCat> Also, password reset: https://paragonie.com/blog/2016/09/untangling-forget-me-knot-secure-account-recovery-made-simple
[14:08:28] <BadAdviceCat> They explain things like the common "Doing it Wrong - Insecure Account Recovery" examples and so on.
[14:10:04] <dimi1947> password_hash produces 64 chars string...is that correct?
[14:10:27] <ss23> dimi1947: It can produce longer. The documentation recommends being able to accept output up to 255 characters
[14:11:19] <dimi1947> yes,,,it mentions that...but the point I want to make is that as we speak is NOT at 60 chars length
[14:26:12] <dimi1947> password verify...if hash and password match returns 1 not true...is that correct?
[14:27:32] *** Joins: omegatron (~some@p5b056bc7.dip0.t-ipconnect.de)
[14:32:31] *** Quits: Naktibalda (~Naktibald@88.135.22.17) (Ping timeout: 256 seconds)
[14:35:13] <BadAdviceCat> dimi1947, you can check using var_dump()
[14:35:39] <BadAdviceCat> The documentation also explains the return value.
[14:35:48] <BadAdviceCat> Of each function.
[14:39:18] <dimi1947> well...I cannot understand what var_dump will return true(if hass and apssword match) and echo  will return 1
[14:45:13] *** Joins: otisolsen70 (~otisolsen@xd4ed80b5.cust.hiper.dk)
[14:46:38] <BadAdviceCat> dimi1947, do not use `echo` to debug code. Use var_dump(). This function can look inside the values for you.
[14:47:11] <BadAdviceCat> You can var_dump dollar sign variables, you can also var_dump function calls, too.
[14:47:21] <BadAdviceCat> var_dump(example_function());
[14:54:59] *** Quits: mIk3_08 (~Thunderbi@user/mik3-08/x-2852566) (Quit: mIk3_08)
[14:56:49] <dimi1947> ok with that...I was curious though to find out wht echo returns 1 when the returned value is true
[15:00:31] <BadAdviceCat> dimi1947, this is why using var_dump() is a superior tool for debugging.
[15:01:17] <BadAdviceCat> `1` versus `true` is very different. 1 is an integer. true is a boolean. Understanding this much helps you reduce software bugs significantly.
[15:02:05] <TinoDidriksen> var_export() is the superior debugging tool.
[15:03:57] *** Joins: gefd (~gef@14-202-197-249.static.tpgi.com.au)
[15:11:46] *** Joins: Carnage (~carnage@user/carnage)
[15:16:51] *** Joins: MrTrick (uid181961@id-181961.highgate.irccloud.com)
[15:37:41] *** Joins: Naktibalda (~Naktibald@88.135.22.17)
[15:38:13] <dimi1947> BadAdviceCat:I know they are diff...ofc
[15:39:15] <BadAdviceCat> dimi1947, okay. I hope that clears everything up and answers your questions. Happy coding :)
[16:00:34] *** Quits: gefd (~gef@14-202-197-249.static.tpgi.com.au) (Changing host)
[16:00:34] *** Joins: gefd (~gef@user/gefd)
[16:07:12] <olle> Hm, can't subscribe to PHP mailing list.
[16:07:24] <olle> "Please try again later."
[16:42:28] <AllenJB> Which mailing list? Are you getting that message when viewing a web page or as an email response  to your subscribe request?
[16:42:56] <olle> AllenJB: When trying to sub to the internals list
[16:45:31] <AllenJB> Did you use the web form? You could try sending an email directly to internals-subscribe@lists.php.net
[16:46:10] <olle> AllenJB: Web form
[16:46:18] <olle> I can try with the email, thank you.
[16:47:11] <AllenJB> If that fails, file an issue at https://bugs.php.net (or file one anyway since the web form should probably be fixed)
[16:49:54] <olle> AllenJB: Mail works fine, thank you :)
[16:50:15] <olle> AllenJB: Is there a way to "fetch" an existing RFC discussion...?
[16:50:24] <olle> Well, I can just forward from my private mail, I guess...
[16:58:22] <AllenJB> Whilst replying to existing threads is obviously preferred, it's not the end of the world if you start a new one. Broken threading happens.
[16:58:49] <__adrian> "> dimi1947> echo returns 1 when the returned value is true" // echo _outputs_ "1", doesn't return it. this happens because when you pass `true` to echo, it is converted from boolean to string. https://php.net/language.types.type-juggling
[17:00:44] <AllenJB> Top posting (posting all of your reply above the quoted email) is far more likely to raise the internals inhabitants hackles =D
[17:09:22] <olle> Yes, I've seen
[17:09:35] *** Joins: harpia (~harpia@58.148.205.168.dynamic.vibefibra.com.br)
[17:12:56] *** Joins: DevAntoi_ (~DevAntoin@195.101.183.21)
[17:17:10] *** Quits: DevAntoine (~DevAntoin@195.101.183.21) (Ping timeout: 272 seconds)
[17:53:56] *** Joins: ayrus (~ayrus@user/ayrus)
[17:54:18] *** Quits: keypusher (keypusher@user/keypusher) (Ping timeout: 240 seconds)
[17:55:28] *** Quits: ayrus (~ayrus@user/ayrus) (Quit: Textual IRC Client: www.textualapp.com)
[18:00:34] <Derick> yes... don't do that.
[18:02:17] <olle> ^^
[18:03:24] <olle> Are there people with voting rights in this channel? o0
[18:05:34] <olle> Maybe that's a dangerous thing to admit.
[18:06:14] <Derick> Well, I do have voting rights. And root.
[18:07:16] *** Quits: kenoba (~kenoba@ip68-0-248-40.ri.ri.cox.net) (Quit: The Lounge - https://thelounge.chat)
[18:07:18] <Derick> FWIW, there used to be a way to retrieve older messages from the list, but I'm not sure if that's still a thing.
[18:08:39] *** Joins: kenoba (~kenoba@ip68-0-248-40.ri.ri.cox.net)
[18:08:45] <olle> Mm
[18:08:58] <olle> I was mostly thinking of the feedback loop between voters and RFC authors.
[18:09:18] <olle> If there is information missing there, like the reason for a no or yes-vote
[18:19:39] <Derick> olle: it's all at https://externals.io/ too
[18:20:19] <dimi1947> __adrian:thanks...I really want it to hear the explanation about this
[18:21:19] *** Joins: keypusher (keypusher@user/keypusher)
[18:21:42] *** Joins: Akimb (~Akimb@86.100.13.100)
[18:22:39] <olle> Derick: I know
[18:29:08] *** Joins: arash (~arash@185.129.242.68)
[18:31:08] *** Quits: DevAntoi_ (~DevAntoin@195.101.183.21) (Remote host closed the connection)
[18:31:37] *** Joins: DevAntoine (~DevAntoin@195.101.183.21)
[18:42:42] *** Quits: arash (~arash@185.129.242.68) (Ping timeout: 240 seconds)
[18:46:28] *** Joins: mrlemke (~mrlemke@208.74.105.200)
[18:47:54] *** Joins: wovixo (~wovixo@128.104.205.49)
[18:50:18] *** Quits: Akimb (~Akimb@86.100.13.100) (Ping timeout: 240 seconds)
[18:56:57] <olle> Derick: You know it would be hard to generate lambdas during compilation automatically?
[18:57:25] <olle> Use-case being the strlen(?) ---> fn ($x) => strlen($x) thingy in PFA
[19:02:53] <biberu> olle: perhaps you can find it in the pr? https://github.com/php/php-src/pull/6898
[19:03:23] <__adrian> dimi1947: see the manual page (linked above)
[19:04:52] <olle> biberu: Good idea
[19:06:11] <__adrian> closures are objects. they don't (can't) happen until runtime.
[19:07:19] <olle> They are?
[19:07:26] <olle> Both types of lambdas?
[19:07:44] <olle> I mean, both fat and short ones.
[19:07:45] <__adrian> https://3v4l.org/MlRUR
[19:07:58] <__adrian> there's only one "type of lambda" (and it's not a lambda)
[19:08:19] <olle> Hm yes
[19:08:27] <olle> Anonymous function is too long xD
[19:08:38] <olle> And closure hints at automatic capture of scope
[19:08:50] <__adrian> php has anonymous functions (which are a special syntax for declaring callable object instances). the fact that they're named "Closure" is ...not helpful
[19:08:51] <olle> it CLOSES the scope
[19:09:00] <olle> Yeah
[19:09:07] <olle> anon fn
[19:09:10] <olle> fnanon
[19:10:28] <__adrian> yeah. even the short version just auto-imports variables by value. there's no closure.
[19:15:36] *** Joins: bynx (~bynx@fw.rry.vaskywire.net)
[19:21:03] *** Joins: JC5 (~X@user/jc5)
[19:23:44] <olle> There's no opcode to create a closure? T_NEW or whatever...
[19:24:01] <olle> So T_FUNCTION_CALL becomes a T_NEW ... instead.
[19:27:56] *** Joins: Dovid (~Dovid4@96.56.22.146)
[19:33:24] <Dovid> I have a list of country codes. Some are 2 digits others are 3 and in rare cases there are some with 4 digits. I need to check if the number being called matches any of these countries. Currently I do something like in_array(substr($cli, 0, 2), $eu_codes) || in_array(substr($cli, 0, 3), $eu_codes) || in_array(substr($cli, 0, 4), $eu_codes) is there a cleaner way of doing this?
[19:36:35] <__adrian> why substr? you should parse out the country code upfront (ideally, accept it as a separate input)
[19:36:39] <biberu> Dovid: trimming the input is probably not what you want. what if the prefix of a 4 letter code (?!) matches a 2 letter code?
[19:36:46] <biberu> that looks dangerous
[19:36:58] <ss23> Dovid: I don't know if it's cleaner, but you could do something like: foreach $code in $eu_codes { if strncmp($code, $phone_number, strlen($code) ... }
[19:37:11] <ss23> I agree with what the others are saying by the way, this sounds... problematic. But if you want a solution :P
[19:37:12] <biberu> also, in_array will be o(n), a set would be neater, or rather a set per type of code
[19:37:32] <__adrian> in_array is fine, just don't call it three times  :p
[19:38:25] <biberu> it's just icky to iterate over each item in the list when it could be a simple key check
[19:38:39] <Dovid> __adrian: The issue is I don't know which one it is. Can I use preg_match?
[19:39:03] <__adrian> no, the issue is you don't have a discrete input.
[19:39:05] *** Joins: catbeard (~noise@user/catbeard)
[19:39:18] <__adrian> what is $cli ? why is it not "ONLY the country code" ?
[19:39:35] <ss23> I literally gave a quick and robust solution and I am being ignored, rip :(
[19:39:40] <Dovid> cli= CallerID
[19:39:56] <__adrian> parse it out first
[19:40:29] <Naktibalda> __adrian: it is phone number
[19:40:30] <__adrian> you can't just assume the first {x} are the country code, especially when you have variable length.
[19:40:32] <Dovid> ss23: That would loop through a list of 100 entries. I would rather not "loop" through 100 numbers if I didn't nee dot.
[19:41:34] *** Quits: kenoba (~kenoba@ip68-0-248-40.ri.ri.cox.net) (Quit: The Lounge - https://thelounge.chat)
[19:42:37] *** Joins: kenoba (~kenoba@ip68-0-248-40.ri.ri.cox.net)
[19:43:22] <ss23> Dovid: What do you think in_array does...?
[19:44:28] <ss23> Dovid: https://github.com/php/php-src/blob/aff365871aec54c9a556d7667f131b8638d20194/ext/standard/array.c#L1455 Internally, in_array is just a foreach (more or less...)
[19:45:37] <Dovid> ss23: then that settles that. in_array is prob doing it low level vs doing a foreach which will prob take a drop longer.
[19:45:56] <biberu> oh, it's phone numbers, missed that
[19:46:14] <__adrian> the part that would take longer is strncmp(). **BUT** seriously, for a hundred or so items, you won't notice this.
[19:46:41] <__adrian> and it's def still faster than doing foreach 3 times.
[19:46:45] <ss23> PHP functions aren't magically going to kick ass in performance more than some PHP will :S
[19:46:58] <ss23> Sure, there's a little less overhead, but like __adrian says... three times vs one
[19:47:34] <ss23> __adrian: I would've thought the substring would be way slower since it needs to make a new zval (compared to strncmp)?
[19:47:53] <Dovid> __adrain: 180 to be exact. This is a phone system so every micro second counts. What your saying is that using in_array 3 times is slower than having one foreach for my list?
[19:48:00] <biberu> array_key_exists ¯\_(ツ)_/¯
[19:48:50] <__adrian> ss23: i'm definitely not advocating for repeated substr() either  ;)
[19:49:05] <Dovid> biberu: wont work since the number called is longer than what's in the array. eg. the number 18005551212 would match 1 in the array
[19:49:16] <__adrian> Dovid: i'm saying it's unlikely to be substantial.
[19:49:43] <__adrian> but !+TIAS
[19:49:43] <php-bot> but, [TIAS] Try It And See. If you want to know if or how something works, try it first. "Testing Is Absolutely Simple"
[19:49:56] *** Quits: bynx (~bynx@fw.rry.vaskywire.net) (Quit: o/)
[19:49:59] <biberu> Dovid: no, i mean, use the array as a map instead of as a list, with keys for prefixes
[19:50:35] <__adrian> in general, write the code you want first. don't over-worry about optimizations untill/unless you actually have problems.
[19:51:30] <biberu> Dovid: then neither you nor php would have to iterate over it for each check, but as __adrian says i doubt you'll notice anything significant for such a small number of items, it's more about the proper way to check if something exists. measure it.
[19:51:31] <Dovid> biberu: It's what I am doing. Let me write up my code and I will pb and you can tell me what I may be doing wrong. one sec
[19:57:25] <Dovid> biberu: here it is. https://pastebin.ubuntu.com/p/gQhSBKjpQ3/ it's strange that it's matching the first one
[20:00:22] <AllenJB> Dovid: Read the return values description for stncmp carefully
[20:00:26] <biberu> Dovid: strncmp compares for order, not equality
[20:00:27] <__adrian> https://3v4l.org/Wn4Kn0
[20:01:13] <__adrian> er, dumb ordinals.  https://3v4l.org/8pfsn
[20:01:25] <Dovid> __adrain: What do you mean by order?
[20:01:52] <__adrian> country codes are NOT integers, btw. they're strings (digit codes)
[20:02:47] <__adrian> though i'd still say you need to parse the number before comparing.
[20:05:22] *** Joins: _mrlemke_ (~mrlemke@208.74.105.200)
[20:05:34] <__adrian> more reliable and even easier: https://3v4l.org/EcOku
[20:06:25] <__adrian> and if you indexed the blocked list, even faster:  https://3v4l.org/1gMkC
[20:07:56] *** Joins: mrlemke_ (~mrlemke@208.74.105.200)
[20:08:08] *** Quits: mrlemke (~mrlemke@208.74.105.200) (Ping timeout: 252 seconds)
[20:10:04] *** Quits: _mrlemke_ (~mrlemke@208.74.105.200) (Ping timeout: 272 seconds)
[20:13:29] <TML> you could move the isset check inside the parse function to save the tuple unpacking in the blocked instances
[20:13:44] <TML> but that's picking at a pretty tiny nit :)
[20:14:31] <biberu> should work to just group the blocked prefixes on length (Dict<len, Set<prefix>>), then for each group check if the prefix of the number exists in associated set
[20:15:38] <biberu> the code for that is probably overkill right now though
[20:17:09] <biberu> Dovid: you are *not* doing what i meant before, and it probably doesn't matter in this specific instance, but it might be good to learn about php's "arrays". if you're coming from another language array likely meant something very different there. do you know what a map or a dictionary is?
[20:17:21] *** Joins: ||JD|| (~jd@user/jd/x-3730462)
[20:24:00] *** Quits: harpia (~harpia@58.148.205.168.dynamic.vibefibra.com.br) (Ping timeout: 272 seconds)
[20:25:41] *** Joins: wyre (~wyre@user/wyre)
[20:25:58] <wyre> hi everyone, how can I rebuild a symfony project?
[20:26:15] <wyre> I've made a little change but I'm not sure how could I see if works
[20:26:29] <wyre> because I didn't the app
[20:26:59] <da_wunder> it's php so just refresh that page on your browser
[20:27:06] <wyre> sure?
[20:27:45] *** Joins: chao (~stenno@user/stenno)
[20:28:04] <da_wunder> don't know what kind of change you did - but if you modified some php file and you're running your local environment in dev mode refresh should do trick
[20:28:51] <wyre> I have this code https://bpa.st/6COQ and which trigger a sound and a progress bar
[20:28:56] <da_wunder> and if you changed some annotations, then you might need to clear/nuke your cache - doctrine caches those quite heavily
[20:29:29] <wyre> because right now it's doing first the sound and then the progress bar
[20:32:43] <wyre> da_wunder, well, anyway there is no need to build again the project or something like that, right?
[20:33:09] <da_wunder> sorry cannot see any "progress bar" related in that code share
[20:33:17] *** Quits: olle (~olle@p5dfcc8a6.dip0.t-ipconnect.de) (Ping timeout: 265 seconds)
[20:33:26] <da_wunder> wyre: nope, if you're running your application in dev mode
[20:33:43] <wyre> da_wunder, I'm not sure how I'm running the app, I'm just modifying that php file
[20:33:53] <wyre> and refreshing the website
[20:34:15] <wyre> the progressbar is like the whole class, because it's a progressbar of 20s
[20:34:27] <da_wunder> so that "website" in this context is not `localhost:8000` ?
[20:34:34] <wyre> da_wunder, nope
[20:34:42] <wyre> it's hosted in another machine
[20:34:46] <wyre> in the local network
[20:34:49] *** Quits: DevAntoine (~DevAntoin@195.101.183.21) (Remote host closed the connection)
[20:35:03] *** Joins: DevAntoine (~DevAntoin@195.101.183.21)
[20:35:06] <da_wunder> and most likely that is not running on dev mode...
[20:35:33] <da_wunder> you really should use your _local_ dev environment - as does Symfony docs recommend too
[20:35:53] *** Joins: DevAntoi_ (~DevAntoin@195.101.183.21)
[20:38:10] <da_wunder> so how are you updating those php files on that another machine? sftp upload or something similar?
[20:38:32] <||JD||> Do people still use Symfony? What's wrong with Laravel?
[20:38:48] <da_wunder> and really you should check what environment is used on that "another machine" to run that application
[20:39:18] <wyre> da_wunder, ssh + vim
[20:39:20] <da_wunder> ||JD||: personally I prefer Symfony more than Laravel - imho - Laravel codebase is quite messy
[20:39:50] *** Quits: DevAntoine (~DevAntoin@195.101.183.21) (Ping timeout: 272 seconds)
[20:40:03] <da_wunder> wyre: that is something that you should really avoid...
[20:40:28] *** Quits: DevAntoi_ (~DevAntoin@195.101.183.21) (Ping timeout: 272 seconds)
[20:40:38] <da_wunder> wyre: check that application environment - my bet is that is set to `prod`
[20:41:47] <BadAdviceCat> ||JD||, these are just preferences. Some people likes Symfony, some people likes Laravel. Some frameworks encourage certain practices that 1 group of people like, but another group won't like.
[20:42:02] <da_wunder> ^exactly
[20:44:15] *** Joins: TanoMarcelo (~TanoMarce@179.63.242.126)
[20:47:26] *** Joins: ikonia_ (~irc@user/ikonia)
[20:47:39] *** Quits: ikonia_ (~irc@user/ikonia) (Client Quit)
[20:47:45] <__adrian> ||JD||: laravel is _incredibly_ tightly coupled. it's fast to iterate on and likely "good enough" if you're doing fire-and-forget websites. but symfony is _definitely_ better-written.
[20:48:12] <__adrian> and yes, what you use is up to you
[20:49:54] <da_wunder> isn't laravel still use symfony components?
[20:50:19] <||JD||> Interesting. Back in the day, I remember myself having a really bad experience trying to build apps over Symfony.
[20:51:31] <da_wunder> ||JD||: this could help you to see what Symfony is nowadays - https://symfony.com/doc/current/the-fast-track/en/index.html
[20:52:08] <__adrian> da_wunder: "uses good code" ≠ "is good code"  ;)
[20:53:11] <da_wunder> __adrian: I didn't mean that like that
[20:53:50] <da_wunder> __adrian: that was just random question - outside of that ||JD|| initial comment
[20:54:02] <__adrian> gotcha
[20:54:09] <__adrian> i don't know to what extent that's true
[20:54:22] <__adrian> (nowadays)
[20:55:06] <da_wunder> https://packagist.org/packages/laravel/framework
[20:56:17] *** Joins: physikoi (~physikoi@user/physikoi)
[20:58:09] <physikoi> I'm happily using the Laravel Database component without the framework. Is there a way to get a collection of all tables? I'm trying to setup a script for truncating all tables periodically.
[20:59:23] <physikoi> maybe i shouldn't have used the word "collection" as that has a specific meaning in Laravel. Let's just say "array".
[20:59:39] <da_wunder> what about just dropping whole database and create that after that again?
[21:01:02] <physikoi> da_wunder: that would work if I had a schemabuilder script setup, but I do not
[21:04:46] <da_wunder> ok, so could just run plain old `SHOW TABLES;` SQL query and get those from that?
[21:05:56] *** Joins: Rockwood (~Rocky@user/rocky)
[21:06:25] *** Joins: harpia (~harpia@58.148.205.168.dynamic.vibefibra.com.br)
[21:06:50] <physikoi> da_wunder: yeah, i think you're right. easiest/fastest way to go. this is just a portfolio project anyway. thanks
[21:07:42] *** Joins: genom (~g@37.214.83.249)
[21:09:06] *** Quits: Naktibalda (~Naktibald@88.135.22.17) (Ping timeout: 240 seconds)
[21:10:26] <da_wunder> physikoi: np
[21:11:04] *** Joins: evilbug (~evilbug@86.127.60.194)
[21:13:25] *** Joins: seand (~seand@69.54.136.33)
[21:13:29] *** chao is now known as stenno
[21:27:30] *** Quits: ||JD|| (~jd@user/jd/x-3730462) (Quit: ||JD||)
[21:28:38] *** Quits: Rockwood (~Rocky@user/rocky) (Quit: The Time is Over)
[21:45:04] *** Quits: physikoi (~physikoi@user/physikoi) (Ping timeout: 272 seconds)
[21:47:55] *** Joins: Akimb (~Akimb@86.100.13.100)
[22:06:59] *** Quits: Akimb (~Akimb@86.100.13.100) (Ping timeout: 256 seconds)
[22:07:08] *** Quits: night_wulfe (~wulfe@cpe-174-103-156-213.cinci.res.rr.com) (Read error: Connection reset by peer)
[22:11:42] *** Joins: magla (~gelignite@55d49c7c.access.ecotel.net)
[22:31:49] *** Joins: night_wulfe (~wulfe@cpe-174-103-156-213.cinci.res.rr.com)
[22:39:31] *** Joins: traptrip (trip@brigaid.xs4all.nl)
[22:44:38] *** Joins: dlundgren_ (~dlundgren@utm1.ctic-inc.com)
[22:47:10] *** Quits: dlundgren (~dlundgren@75-9-109-251.lightspeed.milwwi.sbcglobal.net) (Ping timeout: 265 seconds)
[22:47:10] *** dlundgren_ is now known as dlundgren
[22:52:53] *** Quits: mrlemke_ (~mrlemke@208.74.105.200) (Ping timeout: 256 seconds)
[22:57:15] *** Quits: dimi1947 (~dimi1947@2a02:1388:208d:76ca:6022:6217:fc1a:dde8) (Quit: Leaving)
[22:59:20] *** Quits: TanoMarcelo (~TanoMarce@179.63.242.126) (Quit: WeeChat 3.1)
[22:59:33] *** Joins: mrlemke_ (~mrlemke@208.74.105.200)
[23:04:22] *** Quits: evilbug (~evilbug@86.127.60.194) (Quit: Connection closed)
[23:05:17] *** Quits: wovixo (~wovixo@128.104.205.49) (Quit: Leaving)
[23:18:18] *** Joins: TanoMarcelo (~TanoMarce@179.63.242.126)
[23:26:15] *** Joins: Northwoods (~Northwood@223.130.30.189)
[23:28:03] *** Quits: Tempesta (Tempesta@user/tempesta) (Remote host closed the connection)
[23:37:19] *** Joins: Akimb (~Akimb@86.100.13.100)
[23:37:56] *** Joins: physikoi (~physikoi@user/physikoi)
[23:42:15] *** Joins: fabienwang (~fabienwan@user/fabienwang)
[23:47:26] *** Quits: physikoi (~physikoi@user/physikoi) (Quit: leaving)
[23:52:13] *** Quits: MrTrick (uid181961@id-181961.highgate.irccloud.com) (Quit: Connection closed for inactivity)
[23:57:09] *** Joins: Tempesta (Tempesta@user/tempesta)
