[00:02:05] *** Joins: ahmedelgabri (~ahmedelga@2a02-a446-d88a-1-bcec-6feb-73b9-29ad.fixed6.kpn.net)
[00:07:10] *** Quits: ahmedelgabri (~ahmedelga@2a02-a446-d88a-1-bcec-6feb-73b9-29ad.fixed6.kpn.net) (Ping timeout: 240 seconds)
[00:45:28] *** Quits: Bayes (~Bayes@user/bayes) (Quit: Connection closed)
[00:50:38] *** Joins: nitro (~nitro@c-73-165-183-88.hsd1.pa.comcast.net)
[01:16:58] *** Quits: cth (~Cthulchu@213.174.21.101) (Read error: Connection reset by peer)
[01:17:25] *** Joins: cth (~Cthulchu@213.174.21.101)
[01:36:41] *** Quits: lavaball (felix@31.204.155.215) (Remote host closed the connection)
[01:52:40] *** Quits: cth (~Cthulchu@213.174.21.101) (Ping timeout: 240 seconds)
[01:54:34] *** Quits: karakedi (~eAC53C340@user/karakedi) (Remote host closed the connection)
[02:03:47] *** Joins: ahmedelgabri (~ahmedelga@2a02-a446-d88a-1-bcec-6feb-73b9-29ad.fixed6.kpn.net)
[02:08:32] *** Quits: ahmedelgabri (~ahmedelga@2a02-a446-d88a-1-bcec-6feb-73b9-29ad.fixed6.kpn.net) (Ping timeout: 258 seconds)
[02:48:19] *** Quits: palasso (~palasso@user/palasso) (Remote host closed the connection)
[04:04:34] *** Joins: ahmedelgabri (~ahmedelga@2a02-a446-d88a-1-bcec-6feb-73b9-29ad.fixed6.kpn.net)
[04:09:12] *** Quits: ahmedelgabri (~ahmedelga@2a02-a446-d88a-1-bcec-6feb-73b9-29ad.fixed6.kpn.net) (Ping timeout: 250 seconds)
[04:10:30] *** Quits: d1cor (~diego@179.63.242.114) (Ping timeout: 250 seconds)
[04:38:13] *** Joins: d1cor (~diego@179.63.242.114)
[04:43:38] *** Quits: JanC (~janc@user/janc) (Remote host closed the connection)
[04:43:52] *** Joins: JanC (~janc@user/janc)
[04:45:31] *** Quits: JanC (~janc@user/janc) (Remote host closed the connection)
[04:46:50] *** Quits: bluesmonk (uid318026@id-318026.brockwell.irccloud.com) (Quit: Connection closed for inactivity)
[04:48:38] *** Quits: d1cor (~diego@179.63.242.114) (Ping timeout: 250 seconds)
[04:51:29] *** Joins: JanC (~janc@user/janc)
[05:00:03] *** Quits: Gurkenglas (~Gurkengla@dslb-002-203-144-156.002.203.pools.vodafone-ip.de) (Ping timeout: 268 seconds)
[05:30:35] *** Quits: vlm (~vlm@user/vlm) (Quit: "")
[05:32:42] *** Quits: maetthew (~maetthew@user/maetthew) (Quit: ZNC 1.8.2 - https://znc.in)
[05:38:35] *** Joins: maetthew (~maetthew@c188-150-100-85.bredband.tele2.se)
[05:38:35] *** Quits: maetthew (~maetthew@c188-150-100-85.bredband.tele2.se) (Changing host)
[05:38:35] *** Joins: maetthew (~maetthew@user/maetthew)
[05:54:45] *** Quits: re101-pug-27 (~re101-pug@33.39.7.51.dyn.plus.net) (Quit: Client closed)
[06:05:40] *** Joins: ahmedelgabri (~ahmedelga@2a02-a446-d88a-1-bcec-6feb-73b9-29ad.fixed6.kpn.net)
[06:06:44] *** Joins: re101-otter-27 (~re101-ott@2601:80:8400:98c0:e9e5:8d1a:b435:e6bf)
[06:08:40] <re101-otter-27> Rehelp
[06:09:21] <re101-otter-27> rehelp
[06:10:10] *** Quits: ahmedelgabri (~ahmedelga@2a02-a446-d88a-1-bcec-6feb-73b9-29ad.fixed6.kpn.net) (Ping timeout: 240 seconds)
[06:21:37] *** Quits: re101-otter-27 (~re101-ott@2601:80:8400:98c0:e9e5:8d1a:b435:e6bf) (Ping timeout: 246 seconds)
[06:34:31] *** Joins: tinytoast (~squeek@user/tinystoat)
[06:35:06] *** Quits: joo (~joo@fsf/member/joo--) (Ping timeout: 258 seconds)
[06:36:30] *** Quits: ephemer0l (~ephemer0l@organizedmagnetism.com) (Ping timeout: 256 seconds)
[06:36:30] *** Joins: ephemer0l (~ephemer0l@organizedmagnetism.com)
[06:37:08] *** Quits: tinystoat (~squeek@user/tinystoat) (Read error: Connection reset by peer)
[06:49:18] *** Joins: joo (~joo@fsf/member/joo--)
[06:59:31] *** Quits: noobienoob (~noobienoo@ool-4576e027.dyn.optonline.net) (Quit: Client closed)
[07:48:41] *** Joins: cth (~Cthulchu@213.174.21.101)
[08:04:30] *** Quits: cth (~Cthulchu@213.174.21.101) (Ping timeout: 250 seconds)
[08:06:11] *** Joins: ahmedelgabri (~ahmedelga@2a02-a446-d88a-1-bcec-6feb-73b9-29ad.fixed6.kpn.net)
[08:10:40] *** Quits: ahmedelgabri (~ahmedelga@2a02-a446-d88a-1-bcec-6feb-73b9-29ad.fixed6.kpn.net) (Ping timeout: 240 seconds)
[08:20:19] *** Joins: vlm (~vlm@user/vlm)
[08:49:02] *** Quits: army (~aL@user/army) (Quit: Going offline, see ya! (www.adiirc.com))
[09:09:35] *** Joins: I-M (~id@78.183.101.176)
[09:25:55] *** Joins: karakedi (~eAC53C340@user/karakedi)
[09:29:13] *** Quits: re101-grouse-41 (~re101-gro@2603-8000-6f03-fa0f-4146-cfd3-8d2e-e6c4.res6.spectrum.com) (Quit: Client closed)
[09:44:16] *** Joins: AI4AI (~subie@2601:4c0:4080:bc0:21e1:ab1b:5c16:8966)
[09:46:10] *** Quits: subie (~subie@2601:4c0:4080:bc0:901a:b44a:ae2b:ee45) (Ping timeout: 240 seconds)
[10:05:40] *** Joins: cth (~Cthulchu@213.174.21.101)
[10:07:00] *** Joins: ahmedelgabri (~ahmedelga@2a02-a446-d88a-1-bcec-6feb-73b9-29ad.fixed6.kpn.net)
[10:11:28] *** Quits: ahmedelgabri (~ahmedelga@2a02-a446-d88a-1-bcec-6feb-73b9-29ad.fixed6.kpn.net) (Ping timeout: 250 seconds)
[10:15:22] *** Quits: I-M (~id@78.183.101.176) (Read error: Connection reset by peer)
[10:19:22] *** Quits: txtsd (~txtsd@user/txtsd) (Ping timeout: 252 seconds)
[10:21:01] *** Quits: cth (~Cthulchu@213.174.21.101) (Ping timeout: 252 seconds)
[10:30:22] *** Joins: ASCII2 (~ASCII@213.87.157.206)
[10:35:08] *** ASCII2 is now known as Putin
[10:35:53] *** Putin is now known as BOBA
[10:36:00] *** BOBA is now known as BIBA
[10:37:01] <BIBA> Тут имеются русские ?
[10:37:23] <karhunkynsi> Niet!
[10:37:40] <BIBA> Жаль(
[10:38:57] *** Quits: BIBA (~ASCII@213.87.157.206) (Quit: Client closed)
[10:42:34] *** Quits: karhunkynsi (~karhunkyn@user/karhunkynsi) (Quit: Leaving)
[10:54:15] *** Joins: re101-goose-52 (~re101-goo@45.112.68.203)
[10:54:22] <re101-goose-52> hi
[10:54:36] <re101-goose-52> !rehelp
[10:54:36] <perlbot> Please share a https://regex101.com/ link containing your regex and sample data, stay as long as possible, and we'll do our best to assist you ASAP.
[10:55:33] <re101-goose-52> https://regex101.com/r/cBaQUf/1
[10:59:00] <digitok> ooks good
[10:59:04] <digitok> looks good
[11:00:27] *** Quits: Me-me (~me-me@v.working.name) (Changing host)
[11:00:27] *** Joins: Me-me (~me-me@user/me-me)
[11:00:27] *** ChanServ sets mode: +v Me-me
[11:02:50] <VectorX> Lord Me-me have arrived, all bow to lord Me-me!
[11:03:10] * Me-me does the rotaty-hand wave thing.
[11:04:11] *** Joins: re101-liger-29 (~re101-lig@2602:feda:dd9:fd6e:52e9:81c0:eb6b:65e2)
[11:04:32] <re101-goose-52> i want to extract the song name from it
[11:04:33] *** Quits: re101-liger-29 (~re101-lig@2602:feda:dd9:fd6e:52e9:81c0:eb6b:65e2) (Client Quit)
[11:04:36] <re101-goose-52> how can i do
[11:04:42] <re101-goose-52> i am new to regex
[11:06:06] <digitok> how would you describe where the song title ends
[11:06:20] <Me-me> In terms of characters in the string.
[11:06:32] <re101-goose-52> just before the (
[11:06:46] <digitok> no, i meant philosophically
[11:06:49] <digitok> but that will do
[11:06:58] <digitok> https://regex101.com/r/cBaQUf/2
[11:07:47] <re101-goose-52> its fine just the song name like it will start from dash -
[11:07:51] <re101-goose-52> and end before (
[11:08:42] <digitok> right, my mistake
[11:08:48] <Me-me> https://regex101.com/r/cBaQUf/3
[11:09:01] <digitok> - _ -
[11:09:21] * Me-me shrugs
[11:09:24] <re101-goose-52> this one isn't the one i want
[11:09:37] <re101-goose-52> digitok almost did it
[11:09:39] <digitok> blind freddy could see that
[11:09:51] <digitok> which programming language are you using?
[11:09:59] <re101-goose-52> i am using javascript
[11:10:21] <digitok> will the string always have a ( ?
[11:11:00] <re101-goose-52> um maybe but it doesn't matter if it is there i will regex match it
[11:11:13] <re101-goose-52> if it doesn't return then i will pass raw string
[11:11:43] <digitok> https://regex101.com/r/cBaQUf/4
[11:11:58] <digitok> there are definitely cases where this could match incorrectly
[11:12:40] <re101-goose-52> almost u did it just how can i escape the dash?
[11:12:52] <re101-goose-52> i see 2 groups
[11:13:13] <digitok> you use group 1
[11:13:26] <digitok> str.match(//)[1]
[11:14:04] <re101-goose-52> cool, thanks a lot for helping me out. hope u have  a nice day.
[11:14:12] <digitok> thanks, you too
[11:14:33] *** Quits: re101-goose-52 (~re101-goo@45.112.68.203) (Quit: Client closed)
[11:16:17] <digitok> was that one a serious suggestion Me-me
[11:16:46] <Me-me> I wasn't paying close attention, and I have a headache.
[11:17:07] <digitok> then i'll assume not
[11:19:18] *** Joins: karhunkynsi (~karhunkyn@user/karhunkynsi)
[11:19:18] *** ChanServ sets mode: +v karhunkynsi
[11:23:15] *** Joins: re101-goose-75 (~re101-goo@45.112.68.203)
[11:23:54] *** Quits: re101-goose-75 (~re101-goo@45.112.68.203) (Client Quit)
[11:30:44] *** Joins: ahmedelgabri (~ahmedelga@2a02-a446-d88a-1-bcec-6feb-73b9-29ad.fixed6.kpn.net)
[11:34:48] *** Quits: unluckyshrubbery (~unluckysh@45-19-33-188.lightspeed.livnmi.sbcglobal.net) (Quit: ZNC 1.8.2 - https://znc.in)
[12:03:46] *** Joins: palasso (~palasso@user/palasso)
[12:17:49] *** Joins: re (~re@user/re)
[12:30:25] *** Joins: Gurkenglas (~Gurkengla@dslb-002-203-144-156.002.203.pools.vodafone-ip.de)
[12:33:40] *** Quits: ahmedelgabri (~ahmedelga@2a02-a446-d88a-1-bcec-6feb-73b9-29ad.fixed6.kpn.net) (Ping timeout: 240 seconds)
[12:38:02] *** Joins: lavaball (felix@31.204.155.215)
[12:46:57] *** Joins: ahmedelgabri (~ahmedelga@2a02-a446-d88a-1-bcec-6feb-73b9-29ad.fixed6.kpn.net)
[12:51:22] *** Quits: ahmedelgabri (~ahmedelga@2a02-a446-d88a-1-bcec-6feb-73b9-29ad.fixed6.kpn.net) (Ping timeout: 250 seconds)
[12:55:46] *** Joins: army (~aL@user/army)
[13:13:35] *** Joins: rtjure (~rtjure@vlan-153-aitos-169.comnet.bg)
[13:25:04] *** Quits: lavaball (felix@31.204.155.215) (Remote host closed the connection)
[13:34:52] *** Joins: unluckyshrubbery (~unluckysh@45-19-33-188.lightspeed.livnmi.sbcglobal.net)
[14:04:17] *** Joins: lavaball (felix@31.204.155.215)
[14:22:38] *** Joins: re101-liger-17 (~re101-lig@188.209.223.152)
[14:22:57] <re101-liger-17> !rehelp
[14:22:58] <perlbot> Please share a https://regex101.com/ link containing your regex and sample data, stay as long as possible, and we'll do our best to assist you ASAP.
[14:25:50] *** Quits: rtjure (~rtjure@vlan-153-aitos-169.comnet.bg) (Ping timeout: 250 seconds)
[14:30:59] <re101-liger-17> Hi, i want to extract the title containing between <title> and </title> of a html page with the expression re.findall(). Can anyone help me do it?
[14:31:40] <digitok> <title>([^<]+)
[14:32:03] <digitok> (?<=<title>)[^<]+
[14:32:25] <re101-liger-17> Thank you so much! :D
[14:32:32] <digitok> yw :)
[14:41:26] *** Quits: joo (~joo@fsf/member/joo--) (Ping timeout: 250 seconds)
[14:42:11] <re101-liger-17> Can you tell me please what's the fastest way to do that?
[14:42:31] <digitok> hm?
[14:43:24] <digitok> you mean in terms of programming/efficiency?
[14:43:34] <re101-liger-17> yes
[14:43:44] <digitok> re.search is probably more efficient than re.findall
[14:43:49] <re101-liger-17> and compiling time
[14:43:51] <digitok> since it only looks for one match
[14:44:07] <re101-liger-17> Ok, thanks
[14:45:25] <digitok> and the first regex i gave would be more efficient than the second
[14:45:38] <digitok> you'll just need to get the result from group 1
[14:46:25] <re101-liger-17> Okay
[14:47:34] <digitok> and a proper html parser might be even faster :p
[14:48:48] *** Quits: Gurkenglas (~Gurkengla@dslb-002-203-144-156.002.203.pools.vodafone-ip.de) (Ping timeout: 250 seconds)
[14:49:22] <re101-liger-17> How can I get one? xD
[14:49:56] <digitok> maybe https://docs.python.org/3/library/html.parser.html
[14:53:26] <re101-liger-17> How can I use this parser to get the titles from urls?
[14:54:17] *** Joins: joo (~joo@fsf/member/joo--)
[14:54:19] <digitok> no idea, presumably you'd need to first get the contents of the url
[14:57:43] <re101-liger-17> Ok
[14:58:18] <re101-liger-17> Thank you for helping me!
[15:19:27] *** Quits: re101-liger-17 (~re101-lig@188.209.223.152) (Quit: Ping timeout (120 seconds))
[16:06:03] *** Joins: farukh (~farukh@49.37.144.81)
[16:07:43] <farukh> Hi , i want to find and replace some text(with regex on np++) , The text would be "Price: 1,999.00" or "Price: 21,999.00" . so the value is random number. best way to replace the value to 0 ?
[16:08:18] <digitok> Price: \K[\d.,]*
[16:08:30] <digitok> replace with 0
[16:11:58] <farukh> if wanter to slect price also ?
[16:12:04] <farukh> if wanted to slect price also ?
[16:12:13] <digitok> that's all it selects
[16:12:26] <digitok> oops
[16:12:30] <digitok> you mena the text price
[16:12:33] <digitok> mean*
[16:12:33] <Me-me> Perhaps he means the te-- yeah
[16:12:39] <digitok> just remove \K
[16:13:01] <farukh> Got it, thanks
[16:13:05] <digitok> yw
[16:13:05] <farukh> digitok
[16:21:09] <digitok> 07farukh, no need to pm
[16:21:19] <digitok> Price: \S+
[16:22:13] <farukh> thanks
[16:35:28] *** Quits: farukh (~farukh@49.37.144.81) (Quit: Client closed)
[16:49:27] *** Joins: ahmedelgabri (~ahmedelga@2a02-a446-d88a-1-bcec-6feb-73b9-29ad.fixed6.kpn.net)
[16:54:02] *** Quits: ahmedelgabri (~ahmedelga@2a02-a446-d88a-1-bcec-6feb-73b9-29ad.fixed6.kpn.net) (Ping timeout: 258 seconds)
[17:41:07] *** Joins: d1cor (~diego@179.63.242.114)
[18:36:27] *** Quits: lavaball (felix@31.204.155.215) (Remote host closed the connection)
[18:37:10] *** Joins: lavaball (felix@31.204.155.215)
[18:37:53] *** Quits: lavaball (felix@31.204.155.215) (Remote host closed the connection)
[18:47:17] *** Joins: re101-crane-23 (~re101-cra@2405:204:5305:3024:29ef:abe5:f765:ffe6)
[18:47:36] <re101-crane-23> !rehelp
[18:47:37] <perlbot> Please share a https://regex101.com/ link containing your regex and sample data, stay as long as possible, and we'll do our best to assist you ASAP.
[18:47:41] <re101-crane-23> https://regex101.com/r/Fcrj1p/1
[18:47:59] <re101-crane-23> My RegEx replaces numbers followed by a dot with an ordered list but it does not stop replacing the numbers after it reaches the `</ol>` tag, how do I get it to do that?
[18:50:10] *** Joins: ahmedelgabri (~ahmedelga@2a02-a446-d88a-1-bcec-6feb-73b9-29ad.fixed6.kpn.net)
[18:50:26] *** Joins: farukh (~farukh@2405:201:c00a:b0a8:9d32:8d1e:a56f:3be4)
[18:52:40] <farukh> Hi , digitok , can you tell regex to select number before .00  (& the .00 both), like we have lot of numbers in file like , 2000.00 , 1345.00 etc
[18:54:30] *** Quits: ahmedelgabri (~ahmedelga@2a02-a446-d88a-1-bcec-6feb-73b9-29ad.fixed6.kpn.net) (Ping timeout: 250 seconds)
[18:54:50] <farukh> anyone ?=( 
[18:55:12] <Andrio> farukh, so, this? \d+\.00
[18:56:19] <farukh> <3 
[18:56:22] <farukh> worked
[18:56:49] <re101-crane-23> https://regex101.com/r/Fcrj1p/1
[18:58:52] <digitok> is <ol> always there?
[18:58:53] <Andrio> re101-crane-23, try this maybe: https://regex101.com/r/qhQY3h/1
[19:00:23] <re101-crane-23> Yes, it is
[19:00:43] <digitok> good, then we don't need all this other stuff
[19:01:12] <re101-crane-23> Sadly, the replacements did not stop after the `</ol>` tag
[19:02:24] <re101-crane-23> My RegEx replaces numbers followed by a dot with an ordered list but it does not stop replacing the numbers after it reaches the `</ol>` tag, how do I get it to do that?
[19:02:58] <re101-crane-23> Andrio, Sadly, the replacements did not stop after the `</ol>` tag
[19:03:16] <re101-crane-23> ...with your RegEx
[19:03:47] <digitok> any reason you repeated the question
[19:04:40] <re101-crane-23> The first question was for you digitok and the second was for +Andrio. I thought it was unclear
[19:05:08] <digitok> it's literally the same question you asked initially
[19:05:16] <re101-crane-23> OK, sorry
[19:05:56] <Andrio> re101-crane-23, can you show an example of that?
[19:07:02] <digitok> https://regex101.com/r/Fcrj1p/2
[19:07:19] <digitok> brb
[19:08:25] <re101-crane-23> https://regex101.com/r/Fcrj1p/1 should become like https://regex101.com/r/mj1287/1
[19:11:10] <re101-crane-23> digitok `(?:<ol>\h*\R|\G(?!\A))\K\h*\d+\.\h*(.*(?:\R(?!\h*(?:\d+\.|<\/ol>)).*)*)\R` did not stop replacements at the `</ol>` tag
[19:13:39] <re101-crane-23> Oh sorry, it did. I was trying it on the next string but went back to the original to test it
[19:13:45] <re101-crane-23> It works fine
[19:13:50] <re101-crane-23> Thanks a lot
[19:14:09] <digitok> yw
[19:15:12] <digitok> your initial regex looked a bit like onlinecop's work
[19:16:16] <re101-crane-23> Yes, it was
[19:16:30] <re101-crane-23> I tahank all of you
[19:16:39] <digitok> :)
[19:16:47] *** Quits: re101-crane-23 (~re101-cra@2405:204:5305:3024:29ef:abe5:f765:ffe6) (Quit: Client closed)
[19:27:54] *** Joins: Gurkenglas (~Gurkengla@dslb-002-203-144-156.002.203.pools.vodafone-ip.de)
[19:55:10] *** Joins: lavaball (~Melissa@31.204.155.215)
[20:09:35] *** AI4AI is now known as subie
[20:17:46] *** Quits: farukh (~farukh@2405:201:c00a:b0a8:9d32:8d1e:a56f:3be4) (Ping timeout: 246 seconds)
[20:29:24] *** Quits: d1cor (~diego@179.63.242.114) (Ping timeout: 250 seconds)
[20:37:30] *** Joins: txtsd (~txtsd@user/txtsd)
[20:42:47] *** Joins: ahmedelgabri (~ahmedelga@2a02-a446-d88a-1-bcec-6feb-73b9-29ad.fixed6.kpn.net)
[21:28:02] *** Joins: no_gravity (~no_gravit@user/no-gravity/x-5639427)
[21:28:36] <no_gravity> Inside a regex, how can you say "this or that" when "this" and "that" are complex expressions?
[21:31:38] *** Joins: cthulchu (~Cthulchu@94.153.37.190)
[21:34:22] <karhunkynsi> You can use this|that, if there's other things around put () around it.
[21:34:58] <no_gravity> Hmm... like this? (?:this)|(?:that)
[21:35:34] <karhunkynsi> (?:this|that)
[21:36:01] <no_gravity> No matter how complex this and that are?
[21:36:19] <no_gravity> The engine goes all the way to the left and right from the |?
[21:36:29] <karhunkynsi> If they have | themselves, put () around that thing as well.
[21:37:05] <no_gravity> No, they don't have a |. They have a bunch of [...]+ and \s* and funk like that.
[21:37:17] <karhunkynsi> It tries the first one, if that fails it tries the second one, and so on
[21:37:36] <karhunkynsi> Yeah, that's fine.
[21:37:42] <no_gravity> Nice, thanks.
[21:37:47] <karhunkynsi> Sure!
[21:39:08] *** Quits: no_gravity (~no_gravit@user/no-gravity/x-5639427) (Quit: leaving)
[22:06:04] *** Quits: ahmedelgabri (~ahmedelga@2a02-a446-d88a-1-bcec-6feb-73b9-29ad.fixed6.kpn.net) (Ping timeout: 258 seconds)
[22:07:06] *** Joins: ahmedelgabri (~ahmedelga@2a02-a446-d88a-1-bcec-6feb-73b9-29ad.fixed6.kpn.net)
[22:14:16] *** Quits: cthulchu (~Cthulchu@94.153.37.190) (Ping timeout: 250 seconds)
[22:29:41] *** Quits: lavaball (~Melissa@31.204.155.215) (Quit: lavaball)
[22:57:56] *** Joins: re101-dugong-39 (~re101-dug@2405:201:d00d:b138:348b:14af:ae8f:46f1)
[22:58:16] *** Parts: re101-dugong-39 (~re101-dug@2405:201:d00d:b138:348b:14af:ae8f:46f1) ()
[23:04:09] *** Joins: whoever_ (~trevor@cpe-70-112-235-224.austin.res.rr.com)
[23:04:11] <whoever_> hi al 
[23:04:52] <whoever_> I am using PCRE and i can't find unicode https://regex101.com/r/WuR5Ja/1
[23:04:59] <whoever_> can someone assist 
[23:05:45] *** Quits: byanka (~byanka@78.137.43.40) (Ping timeout: 248 seconds)
[23:07:03] <whoever_> incase anyone is wondering suposedly if you're serching for \u because pcre doesn't support it you should use x
[23:09:45] <NiLon> um what
[23:11:17] <whoever_> NiLon: i am tring tl find unicode chars with PCRE
[23:11:39] <NiLon> \u00E9 is not really a unicode character
[23:11:40] <whoever_> and  obviously is failing me 
[23:12:01] <whoever_> ok espacpe seqences 
[23:13:13] <NiLon> so what is the problem with what you have, other than the x should be u
[23:14:58] <whoever_> yes it should be a u but PCRE doesn't suporrt it and docs says to use x 
[23:15:21] <purplex> is it hex code in english or french? 
[23:15:24] <NiLon> ok that makes no sense, you are not trying to match unicode
[23:15:41] <NiLon> you have the escape notation
[23:16:25] <NiLon> like either you are severely confused or your example is totally wrong
[23:17:02] <purplex> i see that example has nothing about unicode
[23:17:40] <purplex> like a valid unicode character
[23:18:11] <whoever_> ok, I am looking for escape sequences 
[23:18:31] <NiLon> so you are just doing ascii matching, you don't need unicode anything
[23:19:14] <NiLon> as in here https://regex101.com/r/WuR5Ja/2
[23:19:31] <purplex> ok hold on, let me give you an example
[23:19:44] <NiLon> purplex hold that thought for a while
[23:20:09] <NiLon> let's not add more baggage to confusion
[23:20:16] <whoever_> yes, now if i run thet in php I will get an error that \U, \l  is not supported in PCRE
[23:20:49] <purplex> in pcre, you can use x{} to match a unicode char: https://regex101.com/r/Yr1c5f/1
[23:21:08] <purplex> just come up with a valid unicode character
[23:21:21] <NiLon> whoever_ um no you will not
[23:21:50] <NiLon> https://3v4l.org/DbHAl see runs just fine
[23:22:31] <NiLon> you are confused about the escape sequences and how they are evaluated in your language of choice
[23:23:01] <whoever_> that seems to only work if you know the sting inside the {} because if I chane it to {[0-9]{}D4} nothing matches 
[23:23:30] <NiLon> no no ignore what purplex said
[23:23:34] <NiLon> he is just confusing you
[23:23:40] <purplex> look at my example
[23:23:45] <purplex> its not {}
[23:25:01] <NiLon> sigh
[23:25:09] <purplex> 2603 is number refering to unicode point https://unicode-table.com/en/2603/ its just to explain that \u2603 won't work
[23:26:14] <NiLon> please stop confusing him with non-related stuff
[23:27:02] <purplex> ok you can babysit him then 
[23:27:14] <whoever_> i thougth I was explaing what i wanted/needed, to match the escape sequence in PCRE , but PCRE doesn't like \u
[23:28:03] <purplex> thats what i said \u is used in e.g. python but pcre uses x{..} thing if thats what you meant
[23:28:04] <NiLon> whoever_ but you are not matching unicode, but a notation that isn't unicode by itself (even if technically unicode contains the ascii as subset)
[23:28:17] <NiLon> purplex didn't you just promise
[23:28:40] <purplex> ok :p
[23:30:04] <whoever_> correct it is not unicode in it of itself , i am using it as a delimiter and also as part of my capture to then return what it should be 
[23:30:35] <NiLon> whoever_ right, so the question if pcre supports \u or not is totally irrelevant, it doesn't need to be
[23:30:41] <NiLon> as far PCRE goes, it is just text
[23:31:07] <NiLon> see the https://regex101.com/r/WuR5Ja/2
[23:31:21] <whoever_> or should i just look for \ followed by a letter, then 4 alphanumeric chars, then test that the  char after \ is u 
[23:31:22] <NiLon> it works don't you agree, it's not using \u
[23:32:49] <NiLon> in PHP if you just insert string as "\\u" then what happens that php escapes the "\\u" as literal \u to pcre, and that now is seen as escape sequance by the engine
[23:32:54] <whoever_> yes i want \u as a substing and pcre is thinking i want \u[nicode]
[23:32:58] <NiLon> what you need is double escaping, "\\\\u"
[23:33:07] <NiLon> now pcre sees \\u rather than \u
[23:33:33] <whoever_> i tried that to and still got the same error 
[23:33:43] <NiLon> what is the actual code
[23:33:49] <whoever_> add more \ ?
[23:34:12] <NiLon> see the https://3v4l.org/DbHAl
[23:34:18] <NiLon> '/\\\\u[A-Z0-9]{4}/m'; <-
[23:34:32] <NiLon> it's seen as \\u[A-Z0-9]{4} by the pcre
[23:35:23] <whoever_> preg_replace("/([^A-Za-z0-9 ])/", $this->fred("\$1"), $str);
[23:35:49] <whoever_> you can ignore the $THIS-fred 
[23:36:05] <NiLon> that's totally different
[23:36:33] <whoever_> wow ya hold on let me read though  all my crap
[23:38:27] <whoever_> ok, it seems to be working now so must had forgotten a \
[23:38:39] <NiLon> there you go
[23:40:35] <purplex> ok i see, but anyway i did answered what he asked " \u because pcre doesn't support it you should use x" but turned hes solving a bad escape after all
[23:42:51] <whoever_> NiLon: purplex: ok, thanks you for the help , must had been some weird typo on my end that i didn't catch untill now 
[23:43:01] <whoever_> but seems to be workng
[23:44:38] <purplex> when in doubt use code generator https://regex101.com/r/WuR5Ja/2/codegen?language=php
[23:48:48] <NiLon> purplex it's sometimes hard to see that people are not asking what they are asking
