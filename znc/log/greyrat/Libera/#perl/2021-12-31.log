[00:01:12] *** Quits: yzhernand (~yzhernand@38-73-255-174.starry-inc.net) (Read error: Connection reset by peer)
[00:01:26] *** Joins: yzhernand (~yzhernand@38-73-255-174.starry-inc.net)
[00:02:43] *** Quits: yzhernand (~yzhernand@38-73-255-174.starry-inc.net) (Read error: Connection reset by peer)
[00:02:58] *** Joins: yzhernand (~yzhernand@38-73-255-174.starry-inc.net)
[00:05:33] *** Quits: gamo (~Thunderbi@cm-93-156-61-102.telecable.es) (Quit: gamo)
[00:15:12] *** Quits: yzhernand (~yzhernand@38-73-255-174.starry-inc.net) (Read error: Connection reset by peer)
[00:15:25] *** Joins: yzhernand (~yzhernand@38-73-255-174.starry-inc.net)
[00:16:23] *** Joins: ProperN[out] (~holyShizn@user/propernoun)
[00:16:39] *** Quits: ProperNoun (~holyShizn@user/propernoun) (Ping timeout: 250 seconds)
[00:46:17] *** Quits: ozzzo_work (~ozzzo_wor@h87.s239.verisign.com) (Ping timeout: 256 seconds)
[00:49:34] <japh> speaking of async, I have a really hard time trying to grasp the concept. I've been given this huge project at $work where it was supposed to be written in perl but later changed to 100% javascript which I knew nothing about. Will things like IO::Async help me grasp the concept since I know perl very well?
[00:57:10] *** Quits: magla (~gelignite@55d48631.access.ecotel.net) (Quit: Stay safe!)
[01:00:47] *** Quits: zer0bitz (~zer0bitz@194.34.133.91) (Ping timeout: 268 seconds)
[01:07:05] * GumbyPAN CPAN Upload: App-SpamcupNG-0.007 by ARFREITAS https://metacpan.org/release/ARFREITAS/App-SpamcupNG-0.007
[01:12:29] *** Quits: swaggboi (~swaggboi@slackware.uk/supporter/swaggboi) (Read error: Connection timed out)
[01:14:39] <simcop2387> japh: it can.  the main things to keep in mind are that async is typically driven by "an event loop".  it's a magic loop that just spins around waiting on events to happen.  so everything that you want to do concurrently you have to tell the loop about.  IO::Async does it via $loop->add() in general.  The other thing to get a handle around is what a Future is and how to use them.	Futures are
[01:14:45] <simcop2387> just placeholders for a value that you'll get at some future time.  ->get() on a future will pause what you're doing and make the event loop just run until the value is ready.  Future::AsyncAwait is a module that provides a lot of syntactic sugar around both of those ideas
[01:15:04] <simcop2387> with javascript a lot of that is implicit or done via callbacks or promises (they're mostly similar to Futures)
[01:15:11] *** Joins: swaggboi (~swaggboi@slackware.uk/supporter/swaggboi)
[01:22:05] *** Joins: jgaz (~jgaz@2600:8805:d980:7620::9e0)
[01:22:30] *** Joins: whynot (~whynot@88.155.31.10)
[01:23:01] *** Quits: jgaz (~jgaz@2600:8805:d980:7620::9e0) (Remote host closed the connection)
[01:24:09] *** Quits: yzhernand (~yzhernand@38-73-255-174.starry-inc.net) (Read error: Connection reset by peer)
[01:24:30] *** Joins: yzhernand (~yzhernand@38-73-255-174.starry-inc.net)
[01:29:24] *** Joins: swagg_boi (~swaggboi@slackware.uk/supporter/swaggboi)
[01:42:06] *** Quits: Darkcoal (~user@167.86.137.72) (Quit: Darkcoal)
[01:42:26] *** Quits: yzhernand (~yzhernand@38-73-255-174.starry-inc.net) (Read error: Connection reset by peer)
[01:42:39] *** Joins: yzhernand (~yzhernand@38-73-255-174.starry-inc.net)
[01:43:59] *** Joins: kensanata (~user@user/kensanata)
[01:46:54] *** Quits: mov_eax (~mov_eax@user/mov-eax/x-5035058) (Ping timeout: 260 seconds)
[01:48:00] *** Joins: mov_eax (~mov_eax@user/mov-eax/x-5035058)
[01:49:21] *** Quits: yzhernand (~yzhernand@38-73-255-174.starry-inc.net) (Read error: Connection reset by peer)
[01:49:35] *** Joins: yzhernand (~yzhernand@38-73-255-174.starry-inc.net)
[01:52:09] * GumbyPAN CPAN Upload: Excel-ValueReader-XLSX-1.06 by DAMI https://metacpan.org/release/DAMI/Excel-ValueReader-XLSX-1.06
[01:52:55] *** Quits: yzhernand (~yzhernand@38-73-255-174.starry-inc.net) (Read error: Connection reset by peer)
[01:53:09] *** Joins: yzhernand (~yzhernand@38-73-255-174.starry-inc.net)
[01:54:56] *** Quits: yzhernand (~yzhernand@38-73-255-174.starry-inc.net) (Read error: Connection reset by peer)
[01:55:09] *** Joins: yzhernand (~yzhernand@38-73-255-174.starry-inc.net)
[01:55:17] *** Quits: mov_eax (~mov_eax@user/mov-eax/x-5035058) (Ping timeout: 240 seconds)
[01:56:02] *** Quits: LogicAside (~LogicAsid@user/logicaside) (Read error: Connection reset by peer)
[01:56:40] *** Joins: mov_eax (~mov_eax@user/mov-eax/x-5035058)
[02:01:14] *** Quits: yzhernand (~yzhernand@38-73-255-174.starry-inc.net) (Read error: Connection reset by peer)
[02:01:27] *** Joins: yzhernand (~yzhernand@38-73-255-174.starry-inc.net)
[02:27:13] * GumbyPAN CPAN Upload: JSON-Schema-Modern-0.537 by ETHER https://metacpan.org/release/ETHER/JSON-Schema-Modern-0.537
[02:32:34] *** Quits: pizdets_ (~pizdets@183.182.111.125) (Ping timeout: 250 seconds)
[02:33:24] *** Quits: swaggboi (~swaggboi@slackware.uk/supporter/swaggboi) (Quit: C-x C-c)
[02:33:40] *** Joins: pizdets (~pizdets@183.182.110.8)
[02:33:44] *** Quits: swagg_boi (~swaggboi@slackware.uk/supporter/swaggboi) (Quit: C-x C-c)
[02:34:05] *** Joins: swaggboi (~swaggboi@slackware.uk/supporter/swaggboi)
[02:34:44] *** Quits: swaggboi (~swaggboi@slackware.uk/supporter/swaggboi) (Client Quit)
[02:38:11] *** Joins: mmlj4 (~mmlj4@ip174-69-109-162.no.no.cox.net)
[02:38:47] *** Quits: Murray7501 (~Murray@89.109-247-180.customer.lyse.net) (Quit: leaving)
[02:40:03] *** Joins: BSaboia (~bsaboia@177.37.198.83)
[02:41:48] *** Joins: Murray7501 (~Murray@89.109-247-180.customer.lyse.net)
[02:44:24] *** Joins: swaggboi (~swaggboi@slackware.uk/supporter/swaggboi)
[02:45:16] *** Joins: semeion (~semeion@user/semeion)
[02:52:37] *** Quits: kensanata (~user@user/kensanata) (Ping timeout: 240 seconds)
[02:57:20] *** AI4AI is now known as subie
[02:58:02] *** Quits: mov_eax (~mov_eax@user/mov-eax/x-5035058) (Ping timeout: 240 seconds)
[02:58:11] *** Quits: yzhernand (~yzhernand@38-73-255-174.starry-inc.net) (Read error: Connection reset by peer)
[02:58:26] *** Joins: yzhernand (~yzhernand@38-73-255-174.starry-inc.net)
[02:58:59] *** Joins: mov_eax (~mov_eax@user/mov-eax/x-5035058)
[03:07:10] *** Joins: rgrinberg (~textual@2806:101e:7:cff:f4d0:b9c8:9c34:9747)
[03:08:25] *** Joins: LogicAside (~LogicAsid@user/logicaside)
[03:14:19] *** Quits: yzhernand (~yzhernand@38-73-255-174.starry-inc.net) (Read error: Connection reset by peer)
[03:14:34] *** Joins: yzhernand (~yzhernand@38-73-255-174.starry-inc.net)
[03:14:49] *** Quits: rgrinberg (~textual@2806:101e:7:cff:f4d0:b9c8:9c34:9747) (Quit: My MacBook has gone to sleep. ZZZzzz…)
[03:16:30] *** Joins: rgrinberg (~textual@2806:101e:7:cff:f4d0:b9c8:9c34:9747)
[03:17:09] *** Quits: djerius (~quassel@pool-108-20-43-199.bstnma.fios.verizon.net) (Ping timeout: 256 seconds)
[03:20:11] *** Joins: djerius (~quassel@pool-108-20-43-199.bstnma.fios.verizon.net)
[03:23:48] *** Quits: yzhernand (~yzhernand@38-73-255-174.starry-inc.net) (Read error: Connection reset by peer)
[03:24:01] *** Joins: yzhernand (~yzhernand@38-73-255-174.starry-inc.net)
[03:27:24] *** Quits: radu242407821 (~radu242@pool-96-250-79-242.nycmny.fios.verizon.net) (Quit: The Lounge - https://thelounge.chat)
[03:29:22] *** Joins: radu242407821 (~radu242@pool-96-250-79-242.nycmny.fios.verizon.net)
[03:31:01] *** Quits: radu242407821 (~radu242@pool-96-250-79-242.nycmny.fios.verizon.net) (Client Quit)
[03:32:17] *** Joins: radu242407821 (~radu242@pool-96-250-79-242.nycmny.fios.verizon.net)
[03:37:03] *** Quits: XV8 (~XV8@2601:5cb:c001:50:d40f:2d13:1de:ebb1) (Quit: Textual IRC Client: www.textualapp.com)
[03:38:08] *** Quits: rgrinberg (~textual@2806:101e:7:cff:f4d0:b9c8:9c34:9747) (Quit: My MacBook has gone to sleep. ZZZzzz…)
[03:38:40] *** Quits: fazz2342343 (~fazz23423@149.142.103.81) (Quit: Connection closed)
[03:40:27] *** Quits: yzhernand (~yzhernand@38-73-255-174.starry-inc.net) (Read error: Connection reset by peer)
[03:40:41] *** Joins: yzhernand (~yzhernand@38-73-255-174.starry-inc.net)
[03:45:02] *** Quits: jmcgnh (~jmcgnh@wikipedia/jmcgnh) (Ping timeout: 240 seconds)
[03:47:40] *** Quits: yzhernand (~yzhernand@38-73-255-174.starry-inc.net) (Read error: Connection reset by peer)
[03:47:54] *** Joins: yzhernand (~yzhernand@38-73-255-174.starry-inc.net)
[03:49:39] *** Quits: yzhernand (~yzhernand@38-73-255-174.starry-inc.net) (Read error: Connection reset by peer)
[03:49:51] *** Joins: jmcgnh (~jmcgnh@wikipedia/jmcgnh)
[03:49:55] *** Joins: yzhernand (~yzhernand@38-73-255-174.starry-inc.net)
[03:51:37] *** Joins: _73 (~user@pool-108-49-252-36.bstnma.fios.verizon.net)
[03:55:43] *** Joins: rgrinberg (~textual@2806:101e:7:cff:f4d0:b9c8:9c34:9747)
[03:59:50] *** Quits: yzhernand (~yzhernand@38-73-255-174.starry-inc.net) (Read error: Connection reset by peer)
[04:00:04] *** Joins: yzhernand (~yzhernand@38-73-255-174.starry-inc.net)
[04:00:18] *** Quits: _73 (~user@pool-108-49-252-36.bstnma.fios.verizon.net) (Quit: ERC (IRC client for Emacs 27.2))
[04:02:34] *** Quits: TweetiePooh (~richard@cpc75386-sotn16-2-0-cust456.15-1.cable.virginm.net) (Quit: Konversation terminated!)
[04:12:34] *** Quits: sprout (~quassel@2a02:a467:ccd6:1:b165:3b1b:f1f6:f4de) (Ping timeout: 268 seconds)
[04:12:55] *** Quits: yzhernand (~yzhernand@38-73-255-174.starry-inc.net) (Read error: Connection reset by peer)
[04:13:08] *** Joins: yzhernand (~yzhernand@38-73-255-174.starry-inc.net)
[04:21:23] *** Joins: G_SabinoMullane (~G_SabinoM@pool-72-94-251-236.phlapa.fios.verizon.net)
[04:26:11] *** Joins: sprout (~quassel@2a02:a467:ccd6:1:b024:d59b:b695:bed5)
[04:30:32] *** Quits: sprout (~quassel@2a02:a467:ccd6:1:b024:d59b:b695:bed5) (Ping timeout: 240 seconds)
[04:36:29] *** Quits: yzhernand (~yzhernand@38-73-255-174.starry-inc.net) (Read error: Connection reset by peer)
[04:40:57] *** Quits: brunoramoslu (~brunoramo@94.252.122.9) (Ping timeout: 268 seconds)
[04:42:13] *** Quits: krismatrix (~krismatri@38.80.149.51) (Ping timeout: 240 seconds)
[04:42:31] *** Joins: sprout (~quassel@2a02:a467:ccd6:1:b024:d59b:b695:bed5)
[04:45:35] *** Quits: whynot (~whynot@88.155.31.10) (Quit: Lost terminal)
[04:48:57] *** Quits: mov_eax (~mov_eax@user/mov-eax/x-5035058) (Ping timeout: 240 seconds)
[04:54:06] *** Joins: brunoramoslu (~brunoramo@94.252.122.65)
[05:11:20] *** Joins: rindolf (~shlomif@inkscape/dev/shlomif)
[05:12:17] *** Joins: zln (~zln@c80-217-230-193.bredband.tele2.se)
[05:18:17] *** Quits: rgrinberg (~textual@2806:101e:7:cff:f4d0:b9c8:9c34:9747) (Quit: My MacBook has gone to sleep. ZZZzzz…)
[05:20:57] *** Quits: swaggboi (~swaggboi@slackware.uk/supporter/swaggboi) (Ping timeout: 240 seconds)
[05:34:10] *** Quits: monkey_ (~user@190.104.116.153) (Ping timeout: 260 seconds)
[05:41:12] *** Joins: monkey_ (~user@190.104.116.153)
[05:43:19] *** Quits: zln (~zln@c80-217-230-193.bredband.tele2.se) (Quit: WeeChat 3.3)
[05:44:36] *** Quits: monkey_ (~user@190.104.116.153) (Remote host closed the connection)
[05:49:34] *** Quits: Su-Shee (~Susanne@p508947f3.dip0.t-ipconnect.de) (Ping timeout: 260 seconds)
[05:51:18] *** Joins: Su-Shee (~Susanne@p508947dc.dip0.t-ipconnect.de)
[05:56:35] * GumbyPAN CPAN Upload: JSON-Schema-Tiny-0.012 by ETHER https://metacpan.org/release/ETHER/JSON-Schema-Tiny-0.012
[05:58:10] *** Quits: leitz (~LeamHall@072-182-158-027.res.spectrum.com) (Quit: nappy time)
[06:00:52] *** Joins: smol-hors (sid524992@smol/hors)
[06:02:57] *** Quits: Pali (~pali@user/pali) (Ping timeout: 268 seconds)
[06:04:27] *** Joins: xenial-user5 (~androirc@3EC97C6F.catv.pool.telekom.hu)
[06:04:58] *** Quits: sprout (~quassel@2a02:a467:ccd6:1:b024:d59b:b695:bed5) (Ping timeout: 260 seconds)
[06:07:17] *** Quits: G_SabinoMullane (~G_SabinoM@pool-72-94-251-236.phlapa.fios.verizon.net) (Ping timeout: 240 seconds)
[06:16:28] *** Joins: sprout (~quassel@2a02:a467:ccd6:1:b024:d59b:b695:bed5)
[06:21:17] *** Quits: sprout (~quassel@2a02:a467:ccd6:1:b024:d59b:b695:bed5) (Ping timeout: 252 seconds)
[06:25:30] *** Quits: xenial-user5 (~androirc@3EC97C6F.catv.pool.telekom.hu) (Ping timeout: 260 seconds)
[06:33:24] *** Joins: sprout (~quassel@2a02:a467:ccd6:1:b024:d59b:b695:bed5)
[06:34:18] *** Joins: krismatrix (~krismatri@38.80.149.51)
[06:35:53] *** Quits: krismatrix (~krismatri@38.80.149.51) (Client Quit)
[06:38:43] *** Quits: sprout (~quassel@2a02:a467:ccd6:1:b024:d59b:b695:bed5) (Ping timeout: 268 seconds)
[06:39:19] *** Joins: gamo (~Thunderbi@cm-93-156-61-102.telecable.es)
[06:49:31] *** Joins: kitsunenokenja (~kitsunech@68.91.220.96)
[06:51:27] *** Joins: sprout (~quassel@2a02:a467:ccd6:1:b024:d59b:b695:bed5)
[06:55:37] *** Quits: sprout (~quassel@2a02:a467:ccd6:1:b024:d59b:b695:bed5) (Ping timeout: 240 seconds)
[07:07:38] *** Quits: jabberwok (~wlindley@75.105.20.104) (Quit: Leaving.)
[07:11:22] *** Joins: G_SabinoMullane (~G_SabinoM@pool-72-94-251-236.phlapa.fios.verizon.net)
[07:12:26] *** Joins: gast0n (~g4570n@user/gast0n)
[07:17:00] *** Quits: FinnElija (~finn_elij@user/finn-elija/x-0085643) (Killed (NickServ (Forcing logout FinnElija -> finn_elija)))
[07:17:00] *** Joins: finn_elija (~finn_elij@user/finn-elija/x-0085643)
[07:17:00] *** finn_elija is now known as FinnElija
[07:18:49] *** Joins: monkey_ (~user@190.104.116.153)
[07:32:43] *** Joins: The_Blode_ (~Blode@user/the-blode/x-7164444)
[07:33:32] *** Quits: The_Blode (~Blode@user/the-blode/x-7164444) (Ping timeout: 240 seconds)
[07:40:02] *** Quits: The_Blode_ (~Blode@user/the-blode/x-7164444) (Ping timeout: 240 seconds)
[07:41:47] *** Joins: The_Blode (~Blode@user/the-blode/x-7164444)
[07:51:04] *** Joins: rgrinberg (~textual@177.246.221.96)
[07:53:17] *** Quits: Martchus_ (~martchus@dynamic-077-002-042-241.77.2.pool.telefonica.de) (Ping timeout: 240 seconds)
[07:54:07] *** Joins: Martchus (~martchus@dynamic-077-004-001-214.77.4.pool.telefonica.de)
[07:54:10] *** Quits: kevin-oculus (~tomys@c188-149-14-10.bredband.tele2.se) (Ping timeout: 260 seconds)
[08:01:48] * GumbyPAN CPAN Upload: Power-Outlet-0.43 by MRDVT https://metacpan.org/release/MRDVT/Power-Outlet-0.43
[08:09:56] *** Joins: swaggboi (~swaggboi@slackware.uk/supporter/swaggboi)
[08:09:59] *** Quits: Kanjizai (~kanjizai@cpe-107-185-193-171.socal.res.rr.com) (Ping timeout: 268 seconds)
[08:30:37] *** Quits: G_SabinoMullane (~G_SabinoM@pool-72-94-251-236.phlapa.fios.verizon.net) (Ping timeout: 240 seconds)
[08:33:28] *** Quits: slowButPresent (~slowButPr@user/slowbutpresent) (Quit: leaving)
[09:05:48] *** Joins: sprout (~quassel@2a02:a467:ccd6:1:b024:d59b:b695:bed5)
[09:10:17] *** Quits: sprout (~quassel@2a02:a467:ccd6:1:b024:d59b:b695:bed5) (Ping timeout: 240 seconds)
[09:14:39] *** Quits: monkey_ (~user@190.104.116.153) (Quit: ERC (IRC client for Emacs 27.2))
[09:16:11] *** Joins: CatCow (~wtf_over@c-73-96-109-206.hsd1.or.comcast.net)
[09:17:06] *** Joins: monkey_ (~user@190.104.116.153)
[09:19:32] *** Quits: rindolf (~shlomif@inkscape/dev/shlomif) (Read error: Connection reset by peer)
[09:22:44] *** Joins: sprout (~quassel@2a02:a467:ccd6:1:b024:d59b:b695:bed5)
[09:27:02] *** Quits: sprout (~quassel@2a02:a467:ccd6:1:b024:d59b:b695:bed5) (Ping timeout: 240 seconds)
[09:27:55] *** Joins: gce108_ (~gce@64-250-5-223.gvec.net)
[09:29:37] *** Quits: gce108 (~gce@user/gce108) (Ping timeout: 240 seconds)
[09:30:12] *** Joins: sprout (~quassel@2a02:a467:ccd6:1:b024:d59b:b695:bed5)
[09:35:26] *** Quits: sprout (~quassel@2a02:a467:ccd6:1:b024:d59b:b695:bed5) (Ping timeout: 252 seconds)
[09:35:28] *** Quits: semeion (~semeion@user/semeion) (Quit: WeeChat 3.4)
[09:37:35] *** Joins: rindolf (~shlomif@inkscape/dev/shlomif)
[09:47:08] *** Joins: sprout (~quassel@2a02:a467:ccd6:1:b024:d59b:b695:bed5)
[09:51:17] *** Quits: sprout (~quassel@2a02:a467:ccd6:1:b024:d59b:b695:bed5) (Ping timeout: 240 seconds)
[09:54:48] *** Joins: sprout (~quassel@2a02:a467:ccd6:1:b024:d59b:b695:bed5)
[09:58:36] *** Quits: gast0n (~g4570n@user/gast0n) (Quit: Bye, see you soon! 👋)
[10:07:25] *** Joins: Sauvin (~sauvin@about/linux/staff/sauvin)
[10:09:02] *** Quits: sprout (~quassel@2a02:a467:ccd6:1:b024:d59b:b695:bed5) (Ping timeout: 260 seconds)
[10:12:02] * GumbyPAN CPAN Upload: Math-BigInt-1.999829 by PJACKLAM https://metacpan.org/release/PJACKLAM/Math-BigInt-1.999829
[10:15:47] *** Joins: sprout (~quassel@2a02:a467:ccd6:1:b024:d59b:b695:bed5)
[10:15:55] *** Quits: kitsunenokenja (~kitsunech@68.91.220.96) (Ping timeout: 256 seconds)
[10:23:17] *** Quits: monkey_ (~user@190.104.116.153) (Ping timeout: 240 seconds)
[10:26:11] *** Quits: FinnElija (~finn_elij@user/finn-elija/x-0085643) (Remote host closed the connection)
[10:26:32] *** Joins: FinnElija (~finn_elij@user/finn-elija/x-0085643)
[10:30:02] *** Quits: zakame (~zakame@user/zakame) (Ping timeout: 260 seconds)
[10:31:59] *** Joins: zakame (~zakame@user/zakame)
[10:35:37] *** Quits: willthechill (~willthech@2600:1700:8c61:3ed0:2813:c28b:69a:ccb1) (Ping timeout: 240 seconds)
[10:42:05] * GumbyPAN CPAN Upload: Excel-ValueReader-XLSX-1.07 by DAMI https://metacpan.org/release/DAMI/Excel-ValueReader-XLSX-1.07
[10:46:41] *** Quits: rgrinberg (~textual@177.246.221.96) (Quit: My MacBook has gone to sleep. ZZZzzz…)
[10:47:06] * GumbyPAN CPAN Upload: OPM-Maker-1.12 by PERLSRVDE https://metacpan.org/release/PERLSRVDE/OPM-Maker-1.12
[10:48:03] *** Joins: rgrinberg (~textual@177.246.223.46)
[10:54:24] *** Quits: semigloss (~semigloss@d14-69-6-230.try.wideopenwest.com) (Quit: leaving)
[11:02:23] *** Quits: zakame (~zakame@user/zakame) (Ping timeout: 256 seconds)
[11:04:19] *** Joins: zakame (~zakame@user/zakame)
[11:21:28] *** Quits: rgrinberg (~textual@177.246.223.46) (Read error: Connection reset by peer)
[11:22:10] *** Quits: marcus (~marcus@mojo/viking/marcus) (Remote host closed the connection)
[11:22:10] *** Quits: batman (~batman@jim-hopper.convos.chat) (Remote host closed the connection)
[11:22:35] *** Joins: rgrinberg (~textual@177.246.221.96)
[11:22:36] *** Joins: batman (~batman@jim-hopper.convos.chat)
[11:22:39] *** Joins: marcus (~marcus@mojo/viking/marcus)
[11:32:57] *** Quits: Linux77 (~LinuMage@186.233.183.58) (Ping timeout: 240 seconds)
[11:35:08] *** Quits: rgrinberg (~textual@177.246.221.96) (Quit: My MacBook has gone to sleep. ZZZzzz…)
[11:59:20] *** Joins: Darkcoal (~user@2001:16a2:7a1f:b00:ca86:5f6b:1065:2cb)
[12:01:18] *** Joins: magla (~gelignite@55d465a4.access.ecotel.net)
[12:10:17] *** Quits: Darkcoal (~user@2001:16a2:7a1f:b00:ca86:5f6b:1065:2cb) (Ping timeout: 240 seconds)
[12:12:22] *** Joins: EGD (~egd@user/egd)
[12:12:34] *** Joins: Darkcoal (~user@2001:16a2:7a1f:b00:ca86:5f6b:1065:2cb)
[12:18:32] *** Quits: Darkcoal (~user@2001:16a2:7a1f:b00:ca86:5f6b:1065:2cb) (Ping timeout: 240 seconds)
[12:18:55] *** Joins: Darkcoal (~user@167.86.137.72)
[12:24:27] *** Quits: troller (~p@2a02:6b8:b081:9::1:1b) (Remote host closed the connection)
[12:25:38] *** Joins: proller (~p@80.240.216.69)
[12:34:46] *** Joins: control (~v1@user/control)
[12:34:49] <control> hello, how can i convert this regex to perl https://regex101.com/r/PprNNB/1
[12:34:50] <Paperbot> Link title(s): [ regex101: build, test, and debug regex ]
[12:35:09] <control> tried it like this but no luck /\b(\w)\w*\h* $1/
[12:38:04] <Adura> I don't think $1 is set until after, does \1 work?
[12:42:36] *** Quits: sprout (~quassel@2a02:a467:ccd6:1:b024:d59b:b695:bed5) (Ping timeout: 240 seconds)
[12:45:09] <Mandevil> What is the question here? The regex in the link appears like a normal regex that would work in perl.
[12:45:27] <control> Search pattern not terminated at -e line 1
[12:45:40] <control> perl -pe "/\b(\w)\w*\h*\1"
[12:45:59] <Adura> You didn't terminate it, with /
[12:46:07] <Mandevil> Yeah.
[12:46:26] <control> hum, its not replacing anything
[12:46:34] <Mandevil> Good god.
[12:46:44] <control> perl -pe "/\b(\w)\w*\h*\1/" %perl_file%.txt > %perl_file%_regexed.txt
[12:46:45] <Mandevil> That's search regex. to replace you must use s///
[12:46:48] *** Quits: noctuks (RIj3X4Rlia@user/noctux) (Quit: WeeChat 3.3)
[12:47:13] <Mandevil> s/\b(\w)\w*\h*/$1/g
[12:47:37] <control> thanks it worked
[12:47:46] <Adura> Heh
[12:47:52] <Mandevil> man perlre for more info.
[12:48:15] *** Quits: control (~v1@user/control) (Quit: leaving)
[12:48:36] <Mandevil> But nice page there.
[12:52:28] *** Joins: andrzejku (~andrzejku@45-11-60-125.ip4.greenlan.pl)
[12:56:10] *** Joins: sprout (~quassel@2a02:a467:ccd6:1:b024:d59b:b695:bed5)
[13:00:21] *** Quits: marcus (~marcus@mojo/viking/marcus) (Remote host closed the connection)
[13:00:22] *** Quits: batman (~batman@jim-hopper.convos.chat) (Remote host closed the connection)
[13:00:46] *** Quits: sprout (~quassel@2a02:a467:ccd6:1:b024:d59b:b695:bed5) (Ping timeout: 260 seconds)
[13:00:48] *** Joins: batman (~batman@jim-hopper.convos.chat)
[13:00:52] *** Joins: marcus (~marcus@mojo/viking/marcus)
[13:13:10] *** Joins: sprout (~quassel@2a02:a467:ccd6:1:b024:d59b:b695:bed5)
[13:14:21] *** Joins: kevin-oculus (~tomys@c188-149-14-10.bredband.tele2.se)
[13:17:25] *** Quits: sprout (~quassel@2a02:a467:ccd6:1:b024:d59b:b695:bed5) (Ping timeout: 240 seconds)
[13:19:16] *** Joins: tybalt89 (~rick@2600:8800:8d00:8100:2e0:4cff:fe68:617)
[13:19:25] *** Parts: tybalt89 (~rick@2600:8800:8d00:8100:2e0:4cff:fe68:617) ()
[13:20:28] *** Quits: tirnanog (~tirnanog@user/tirnanog) (Quit: = "")
[13:46:03] *** Quits: rindolf (~shlomif@inkscape/dev/shlomif) (Read error: Connection reset by peer)
[13:52:58] *** Quits: Darkcoal (~user@167.86.137.72) (Quit: Darkcoal)
[13:53:08] *** Joins: TweetiePooh (~richard@cpc75386-sotn16-2-0-cust456.15-1.cable.virginm.net)
[13:53:11] *** Joins: Darkcoal (~user@2001:16a2:7a1f:b00:ca86:5f6b:1065:2cb)
[14:00:53] *** Quits: Darkcoal (~user@2001:16a2:7a1f:b00:ca86:5f6b:1065:2cb) (Ping timeout: 268 seconds)
[14:02:28] *** Joins: Darkcoal (~user@167.86.137.72)
[14:04:02] *** Joins: zer0bitz (~zer0bitz@196.244.192.54)
[14:04:02] *** Joins: rindolf (~shlomif@inkscape/dev/shlomif)
[14:12:09] <japh> simcop2387, thank you. I'll mess around with it. So far, I just find it annoying that I can't expect something to return whatever I'm asking for _when_ I'm asking for it, and not "perhaps some time in the future, here's undefined for you while you wait" :)
[14:27:59] *** Joins: furrymcgee (~devuan@cgn-213-196-210-78.nc.de)
[14:29:54] *** Joins: disconnect_me (~disconnec@gl111-42.master.pl)
[14:30:13] *** Quits: csrf (~csrf@user/csrf) (Quit: ZNC 1.7.2+deb3 - https://znc.in)
[14:30:58] *** Joins: csrf (~csrf@user/csrf)
[14:32:35] *** Joins: noctuks (7vrDyCK6LH@user/noctux)
[14:34:13] *** Joins: Linux77 (~LinuMage@186.233.183.58)
[15:08:08] *** Joins: jabberwok (~wlindley@75.105.20.104)
[15:11:47] *** Quits: proller (~p@80.240.216.69) (Ping timeout: 268 seconds)
[15:11:48] *** Quits: furrymcgee (~devuan@cgn-213-196-210-78.nc.de) (Remote host closed the connection)
[15:12:10] *** Joins: proller (~p@2a02:6b8:b081:8803::1:14)
[15:21:58] *** Joins: furrymcgee (~devuan@cgn-213-196-210-78.nc.de)
[15:29:09] *** Quits: FinnElija (~finn_elij@user/finn-elija/x-0085643) (Ping timeout: 276 seconds)
[15:30:27] *** Joins: FinnElija (~finn_elij@user/finn-elija/x-0085643)
[15:31:36] * GumbyPAN CPAN Upload: Captcha-reCAPTCHA-V3-0.02 by WORTHMINE https://metacpan.org/release/WORTHMINE/Captcha-reCAPTCHA-V3-0.02
[15:36:36] *** Quits: magla (~gelignite@55d465a4.access.ecotel.net) (Quit: Stay safe!)
[15:48:01] *** Quits: diskin (~diskin@ec2-3-124-171-230.eu-central-1.compute.amazonaws.com) (Read error: Connection reset by peer)
[15:49:35] *** Joins: diskin (~diskin@31.23.174.90)
[15:52:00] *** Joins: Pali (~pali@user/pali)
[15:59:54] *** Joins: semeion (~semeion@user/semeion)
[16:13:08] *** Quits: disconnect_me (~disconnec@gl111-42.master.pl) (Quit: Quit)
[16:19:25] *** Joins: sprout (~quassel@2a02:a467:ccd6:1:9ce9:17f7:15aa:852c)
[16:27:05] *** Quits: diskin (~diskin@31.23.174.90) (Ping timeout: 256 seconds)
[16:34:55] *** Joins: G_SabinoMullane (~G_SabinoM@pool-72-94-251-236.phlapa.fios.verizon.net)
[17:02:09] *** Joins: _73 (~user@pool-108-49-252-36.bstnma.fios.verizon.net)
[17:02:47] *** Quits: zakame (~zakame@user/zakame) (Ping timeout: 256 seconds)
[17:04:39] *** Joins: zakame (~zakame@user/zakame)
[17:17:38] *** Joins: PaulFranz (~pfranz@c-73-187-178-34.hsd1.pa.comcast.net)
[17:22:23] *** Quits: sprout (~quassel@2a02:a467:ccd6:1:9ce9:17f7:15aa:852c) (Ping timeout: 252 seconds)
[17:23:57] *** Quits: pj (~pj@ghettoforge/pj) (Ping timeout: 240 seconds)
[17:25:49] *** Joins: gast0n (~g4570n@user/gast0n)
[17:27:33] *** Quits: fstd (~fstd@xdsl-78-35-82-60.nc.de) (Read error: Connection reset by peer)
[17:27:44] *** Joins: fstd (~fstd@xdsl-78-35-82-60.nc.de)
[17:34:03] *** Joins: sprout (~quassel@2a02:a467:ccd6:1:9ce9:17f7:15aa:852c)
[17:37:06] *** Joins: pj (~pj@ghettoforge/pj)
[17:38:23] *** Quits: sprout (~quassel@2a02:a467:ccd6:1:9ce9:17f7:15aa:852c) (Ping timeout: 250 seconds)
[17:44:02] *** Quits: zakame (~zakame@user/zakame) (Ping timeout: 260 seconds)
[17:45:59] *** Joins: zakame (~zakame@user/zakame)
[17:50:06] *** Joins: sprout (~quassel@2a02:a467:ccd6:1:9ce9:17f7:15aa:852c)
[17:54:35] *** Quits: sprout (~quassel@2a02:a467:ccd6:1:9ce9:17f7:15aa:852c) (Ping timeout: 268 seconds)
[17:56:51] * GumbyPAN CPAN Upload: Captcha-reCAPTCHA-V3-0.03 by WORTHMINE https://metacpan.org/release/WORTHMINE/Captcha-reCAPTCHA-V3-0.03
[18:06:28] *** Quits: WinterStar (~IceLight@user/icelight) (Quit: WeeChat 3.3)
[18:09:05] *** Quits: zakame (~zakame@user/zakame) (Ping timeout: 256 seconds)
[18:09:05] *** Quits: andrzejku (~andrzejku@45-11-60-125.ip4.greenlan.pl) (Read error: Connection reset by peer)
[18:10:06] *** Joins: WinterStar (~IceLight@user/icelight)
[18:11:19] *** Joins: zakame (~zakame@user/zakame)
[18:21:00] *** Quits: fstd (~fstd@xdsl-78-35-82-60.nc.de) (Read error: Connection reset by peer)
[18:21:17] *** Joins: fstd (~fstd@xdsl-78-35-82-60.nc.de)
[18:23:22] *** Quits: TonyStone (~TonyStone@2603-7080-8607-c36a-9cdb-69bc-753b-1e50.res6.spectrum.com) (Remote host closed the connection)
[18:23:27] *** Quits: pj (~pj@ghettoforge/pj) (Ping timeout: 250 seconds)
[18:25:37] *** Joins: sprout (~quassel@2a02:a467:ccd6:1:9ce9:17f7:15aa:852c)
[18:30:35] *** Quits: sprout (~quassel@2a02:a467:ccd6:1:9ce9:17f7:15aa:852c) (Ping timeout: 252 seconds)
[18:33:09] *** Joins: slowButPresent (~slowButPr@user/slowbutpresent)
[18:36:20] *** Joins: pj (~pj@ghettoforge/pj)
[18:44:03] *** Joins: sprout (~quassel@2a02:a467:ccd6:1:9ce9:17f7:15aa:852c)
[18:46:06] *** Joins: kitsunenokenja (~kitsunech@68.91.220.96)
[18:46:41] *** Quits: _73 (~user@pool-108-49-252-36.bstnma.fios.verizon.net) (Remote host closed the connection)
[18:48:52] *** Quits: sprout (~quassel@2a02:a467:ccd6:1:9ce9:17f7:15aa:852c) (Ping timeout: 268 seconds)
[18:50:38] *** Joins: sprout (~quassel@2a02:a467:ccd6:1:9ce9:17f7:15aa:852c)
[19:08:32] *** Quits: pj (~pj@ghettoforge/pj) (Ping timeout: 240 seconds)
[19:10:55] *** Quits: G_SabinoMullane (~G_SabinoM@pool-72-94-251-236.phlapa.fios.verizon.net) (Ping timeout: 250 seconds)
[19:19:40] <simcop2387> japh: $future->is_ready()
[19:20:35] <simcop2387> note however though that unless you do *something* to let the event loop run at least once in the mean time between calls to ->is_ready(), you'll never have it change
[19:20:47] <simcop2387> even if that is $loop->run_once or whatever it is
[19:21:43] *** Joins: pj (~pj@ghettoforge/pj)
[19:25:32] *** Quits: proller (~p@2a02:6b8:b081:8803::1:14) (Ping timeout: 240 seconds)
[19:36:46] <Yaakov> Our new grandson being held by his big brother: https://yaakov.me/gs3.jpg
[19:38:30] *** Joins: proller (~p@80.240.216.69)
[19:47:02] * GumbyPAN CPAN Upload: IP-Geolocation-MMDB-0.004 by VOEGELAS https://metacpan.org/release/VOEGELAS/IP-Geolocation-MMDB-0.004
[19:48:26] *** Quits: EGD (~egd@user/egd) ()
[19:49:23] *** Quits: kitsunenokenja (~kitsunech@68.91.220.96) (Ping timeout: 256 seconds)
[19:57:04] * GumbyPAN CPAN Upload: Git-MoreHooks-0.012 by MIKKOI https://metacpan.org/release/MIKKOI/Git-MoreHooks-0.012
[19:58:06] <lopid> have i logged into facebook
[19:58:43] <mmlj4> you deserve a medal
[19:58:46] *** Joins: semigloss (~semigloss@d14-69-6-230.try.wideopenwest.com)
[20:01:06] <Yaakov> Hello, mmlj4.
[20:01:19] <mmlj4> hey, dude! long time, yada yada
[20:01:35] <Yaakov> Yes, quite.
[20:01:46] <Yaakov> I hope things are well with you.
[20:02:28] <mmlj4> I see yapc or whatever it's called now will be in Houston... you planning to attend?
[20:03:02] <mmlj4> my finances are in the toilet, but other than that I'm great!  # sigh...
[20:06:14] *** Joins: magla (~gelignite@55d465a4.access.ecotel.net)
[20:06:33] *** Quits: meatbot (~meatbot@perlbot/bot/meatbot) (Ping timeout: 268 seconds)
[20:06:36] *** Quits: perldoc (~perldoc@2603-6081-6401-8c00-0000-0000-0000-0d8f.res6.spectrum.com) (Ping timeout: 245 seconds)
[20:08:05] *** Quits: kaitlyn03 (~kaitlyn@user/kaitlyn) (Ping timeout: 256 seconds)
[20:08:05] *** Quits: perlbot (~perlbot@perlbot/bot/simcop2387/perlbot) (Ping timeout: 256 seconds)
[20:08:17] *** Quits: metabot (~metabot@perlbot/bot/metabot) (Ping timeout: 240 seconds)
[20:08:24] *** Quits: simcop2387 (~simcop238@perlbot/patrician/simcop2387) (Ping timeout: 268 seconds)
[20:10:37] *** Joins: diskin (~diskin@31.23.67.235)
[20:10:46] *** Quits: kevin-oculus (~tomys@c188-149-14-10.bredband.tele2.se) (Ping timeout: 245 seconds)
[20:10:52] *** Quits: rbraun (dYIqCL1v@user/rbraun) (Ping timeout: 268 seconds)
[20:11:19] <lopid> "my fiancee is in the toilet" is how i read that
[20:13:17] <Yaakov> mmlj4: No plans to attend anything outside my home until the risk of deadly diseases is somewhat less than the current level. Sorry to hear about your financial situation, been there and it's among the least fun lifestyles to be sure.
[20:15:49] <corwin> The host of the the NYE party we usually go to says their antigen test today is a false positive.  We're staying home too :P
[20:16:46] *** Joins: diskin_ (~diskin@31.23.67.235)
[20:16:46] *** diskin is now known as Guest5994
[20:16:46] *** Quits: Guest5994 (~diskin@31.23.67.235) (Killed (strontium.libera.chat (Nickname regained by services)))
[20:16:46] *** diskin_ is now known as diskin
[20:17:46] <lopid> at least they alerted you
[20:18:00] <corwin> yes, indeed.
[20:19:21] <Yaakov> Hello. corwin
[20:19:53] *** Joins: rbraun (aHmVStm5@user/rbraun)
[20:19:53] <corwin> Hi Yaakov!
[20:22:59] *** Joins: ozzzo_work (~ozzzo_wor@h87.s239.verisign.com)
[20:26:57] <ology> I hope there is a Zoom alternative to YAPC again. Who wants to go to fucking Houston?
[20:29:58] <ology> Been there. Done that.
[20:38:10] <mmlj4> yeah, makes sense
[20:38:46] <mmlj4> the food makes it worth it
[20:40:17] *** Quits: sprout (~quassel@2a02:a467:ccd6:1:9ce9:17f7:15aa:852c) (Ping timeout: 240 seconds)
[20:42:23] <ozzzo_work> is perl.bot down or is it just me?
[20:43:41] <Yaakov> You don't seem to be down.
[20:45:51] *** Joins: sprout (~quassel@2a02:a467:ccd6:1:9ce9:17f7:15aa:852c)
[20:46:05] <ology> Houston is flat, sprawling pavement and too many cars. A couple niches are "walkable" but... Ugh: The Climate
[20:46:37] *** Quits: semeion (~semeion@user/semeion) (Ping timeout: 256 seconds)
[20:50:29] *** Joins: monkey_ (~user@190.104.116.153)
[20:51:22] *** Quits: BSaboia (~bsaboia@177.37.198.83) (Quit: This computer has gone to sleep)
[20:58:51] *** Joins: willthechill (~willthech@2600:1700:8c61:3ed0:506d:7f77:7f93:22ee)
[20:59:58] *** Joins: mnemonic (~semeion@user/semeion)
[21:00:23] *** Joins: G_SabinoMullane (~G_SabinoM@pool-72-94-251-236.phlapa.fios.verizon.net)
[21:00:29] <ozzzo_work> looks like it's down. I can't get to it from my home computer either
[21:02:45] <ozzzo_work> I ended up with this, which works: https://paste.centos.org/view/8def71d8
[21:02:46] <Paperbot> Link title(s): [ IO::Async::Function - Pastebin Service ]
[21:03:12] <ozzzo_work> but the key values that I get back are IO::Async::Function objects: key = IO::Async::Function=HASH(0x30768f8)
[21:03:35] <ozzzo_work> how can I unpack that to know which result goes with which process?
[21:06:11] <ozzzo_work> I tried treating $key as a hash reference but that doesn't seem to work; I get: Can't use string ("IO::Async::Function=HASH(0x1c190"...) as a HASH ref
[21:17:00] *** Joins: deadmarshal (~deadmarsh@95.38.231.93)
[21:17:01] *** Quits: sprout (~quassel@2a02:a467:ccd6:1:9ce9:17f7:15aa:852c) (Ping timeout: 250 seconds)
[21:17:12] * GumbyPAN CPAN Upload: App-optex-textconv-1.01 by UTASHIRO https://metacpan.org/release/UTASHIRO/App-optex-textconv-1.01
[21:18:09] <Grinnz> you can't. i recommend using something else more useful as your keys
[21:18:31] <Grinnz> like a string
[21:18:46] <tm604> yes, you're setting things like $futures2{$function1} - try something like `$one_vm_name-$one_vm_ip` instead?
[21:19:17] <Grinnz> or 'ping'
[21:21:02] <ozzzo_work> you mean, there is  a better way to collect the results from my parallel processes?
[21:21:48] *** Quits: gast0n (~g4570n@user/gast0n) (Remote host closed the connection)
[21:22:45] <ozzzo_work> oh I see what you're saying. Trying that
[21:23:17] <Grinnz> if you need to use $function1 with its result, you can do that in a ->then closure attached to the ->call
[21:23:29] <Grinnz> if you don't, then just use strings that are useful to your code flow
[21:24:04] <tm604> instead of %futures2, you could use https://paste.centos.org/view/e897e8ef instead - that might be easier to work with
[21:24:04] <Paperbot> Link title(s): [ Untitled - Pastebin Service ]
[21:25:01] <Grinnz> and yeah if you want to waait on them simultaneously, you want a ->wait_all, *not* a foreach loop
[21:25:15] <Grinnz> otherwise you will deadlock when one is ready but it's not the one you're waiting on
[21:25:48] <Grinnz> ->wait_all organizes that internally so it will collect each result as it's ready regardless of order
[21:26:14] <tm604> and that way, you can apply a timeout as well - Future->wait_any(Future->wait_all(...), $loop->timeout_future(after => 30)) for example
[21:26:17] <tm604> (far as I can see, you don't really need the global %futures2 - it's only used inside that OneVM sub?)
[21:26:46] <ozzzo_work> yes
[21:27:44] <ozzzo_work> yes I don't think it needs to be global; I can put it inside OneVM
[21:30:47] *** Joins: rgrinberg (~textual@2806:101e:7:33a5:94b6:4a60:d424:26d4)
[21:35:38] *** Joins: andrzejku (~andrzejku@45-11-60-125.ip4.greenlan.pl)
[21:44:33] *** Joins: BSaboia (~bsaboia@177.37.198.83)
[21:45:06] *** Quits: ovid__ (~ovid@laubervilliers-659-1-13-124.w80-11.abo.wanadoo.fr) ()
[21:50:05] *** Joins: TonyStone (~TonyStone@2603-7080-8607-c36a-9cdb-69bc-753b-1e50.res6.spectrum.com)
[21:52:54] *** Quits: fstd (~fstd@xdsl-78-35-82-60.nc.de) (Read error: Connection reset by peer)
[21:53:04] *** Joins: fstd (~fstd@xdsl-78-35-82-60.nc.de)
[21:54:32] <Mandevil> When writing tests, can I specify that the whole run should be aborted on the first failure?
[21:55:45] *** Quits: Linux77 (~LinuMage@186.233.183.58) (Ping timeout: 256 seconds)
[21:56:15] *** Joins: Linux77 (~LinuMage@186.233.183.58)
[21:58:19] <Grinnz> if you're using test2, https://metacpan.org/pod/Test2::Plugin::BailOnFail
[21:58:20] <Paperbot> Link title(s): [ Test2::Plugin::BailOnFail - Automatically bail out of testing on the first test failure. - metacp... ]
[21:58:55] <Mandevil> Nah, standard Test::Most
[21:59:55] <Grinnz> usually if it's just something you can check at the beginning, you would do (before using any other testing library) something like `use if $foo, 'Test::More', skip_all => 'skipping tests because foo';`
[22:00:08] <Grinnz> where $foo would be a more complex check probably
[22:00:59] <Grinnz> doing the check inline is easiest, otherwise you have to set it up in a preceding BEGIN block
[22:02:19] <Grinnz> Test::Most has a bail_on_fail function also
[22:02:29] <Mandevil> Ah, good
[22:02:53] <Grinnz> https://metacpan.org/pod/Test::Most#DIE-OR-BAIL-ON-FAIL
[22:02:53] <Paperbot> Link title(s): [ Test::Most - Most commonly needed test functions and features. - metacpan.org ]
[22:04:20] *** Quits: G_SabinoMullane (~G_SabinoM@pool-72-94-251-236.phlapa.fios.verizon.net) (Ping timeout: 268 seconds)
[22:05:34] *** Joins: meatbot (~meatbot@perlbot/bot/meatbot)
[22:05:51] <Exodist> The Test::Most version probably has the side effect of cutting off diagnostics in many situations, just an fyi. The Test2 bail-on-fail usually avoids that problem. But it only solves the problem when using Test2 tools, Test::Most and other tools that predate Test2 lack the use of "context" objects and will loose diag anyway
[22:06:04] *** Joins: metabot (~metabot@perlbot/bot/metabot)
[22:06:34] *** Joins: kaitlyn03 (~kaitlyn@user/kaitlyn)
[22:06:50] *** Joins: perlbot (~perlbot@perlbot/bot/simcop2387/perlbot)
[22:06:50] *** ChanServ sets mode: +v perlbot
[22:06:53] <Mandevil> I am writing tests for a mojo app, so I guess Test::Mojo won't play with Test2?
[22:07:31] *** Quits: monkey_ (~user@190.104.116.153) (Remote host closed the connection)
[22:07:35] *** Joins: perldoc (~perldoc@2603-6081-6401-8c00-0000-0000-0000-0d8f.res6.spectrum.com)
[22:07:49] <Grinnz> use https://metacpan.org/pod/Test2::MojoX
[22:07:50] <Paperbot> Link title(s): [ Test2::MojoX - Testing Mojo - metacpan.org ]
[22:08:01] <Exodist> The problem being that most non test2 tests call TB->ok, followed by TB->diag, and bail on fail terminates at the ok, so diag is not seen.  In Test2 there is a context object where ok and diag can both be called, then bail on fail occurs when the context object is destroyed, so diag has time to run
[22:08:12] <aquanight> is there a reason you need it to bail on the first failure?
[22:08:35] *** Joins: simcop2387 (~simcop238@perlbot/patrician/simcop2387)
[22:08:36] <Mandevil> aquanight: The tests build one on another.
[22:08:46] <Exodist> Test2 and non-test2 usually play nicelt together, the exception is that older tools lack some nice features and capabilities
[22:09:24] <Exodist> So old tools will work, and not be any less useful than they always have been, but new tools can make use of features and capabilities that make them more useful
[22:09:49] <Grinnz> I don't remember why, but Test::Mojo doesn't particularly work well with Test2, probably some assumptions it makes
[22:09:50] <Mandevil> But Test2 seems rather poorly documented....
[22:10:04] <Grinnz> it has lots of documentation. what are you looking for?
[22:10:28] <Mandevil> Nothing special, I'm mostly using is/isa_ok/cmp_deeply
[22:10:40] <Grinnz> https://metacpan.org/pod/Test2::Manual::Testing
[22:10:41] <Paperbot> Link title(s): [ Test2::Manual::Testing - Hub for documentation about writing tests with Test2. - metacpan.org ]
[22:10:45] <Mandevil> And mojo checks of course
[22:10:55] <Mandevil> json_is, status_is etc.
[22:11:09] <Grinnz> use Test2::V0, it will give you those
[22:11:17] <Grinnz> just be aware its is() is slightly different, it's a deep compare
[22:11:21] <Exodist> Yeah, having written an entire manual, published an interactive presentation, and writing api docs in all modules, I am surprised at the statement.
[22:11:28] <Grinnz> so you don't actually need cmp_deeply
[22:11:54] *** Joins: ovid (~ovid@laubervilliers-659-1-13-124.w80-11.abo.wanadoo.fr)
[22:12:27] <Mandevil> Hm
[22:12:36] <Mandevil> Maybe I wasn't looking well enough
[22:12:48] <Grinnz> did you end up at https://metacpan.org/pod/Test2 perhaps?
[22:12:49] <Paperbot> Link title(s): [ Test2 - Framework for writing test tools that all work together. - metacpan.org ]
[22:12:57] <Grinnz> that's the internals, not the user interface
[22:13:55] <Grinnz> Test2::Suite is the part you want to use, via Test2::V0
[22:14:18] <Exodist> This is also useful, i usethis when presenting on Test2 http://test-more.github.io/Test2-Suite/
[22:14:19] <Paperbot> Link title(s): [ Test2 For Test Authors ]
[22:14:46] <Mandevil> Noted.
[22:14:51] <Exodist> It is less complete than the manual, but easier to reference and jump around
[22:16:03] <Mandevil> So before I dive in that, how will I do Test::Mojo's get_ok, post_ok etc? With Test2?
[22:16:19] <Grinnz> use https://metacpan.org/pod/Test2::MojoX
[22:16:19] <Paperbot> Link title(s): [ Test2::MojoX - Testing Mojo - metacpan.org ]
[22:16:48] <Mandevil> Good
[22:17:47] <Grinnz> ah yeah, the reason you don't want to use Test::Mojo with Test2 isn't so much compatibility but API - because with Test2 you expect 'attr_is' to be a deep compare with Test2's is, for example
[22:18:08] <xenu> Test2::Tools::Compare is by far most important part of the documentation but it's not obvious how to get there
[22:18:15] <xenu> by far the most*
[22:20:17] *** Quits: pj (~pj@ghettoforge/pj) (Ping timeout: 240 seconds)
[22:20:36] <Grinnz> i suspect https://metacpan.org/pod/Test2::Manual::Testing#COMPARISONS will link to it once it exists :D
[22:20:36] <Paperbot> Link title(s): [ Test2::Manual::Testing - Hub for documentation about writing tests with Test2. - metacpan.org ]
[22:20:54] <Grinnz> maybe it could be linked from https://metacpan.org/pod/Test2::Suite#Test2::V# also
[22:20:54] <Paperbot> Link title(s): [ Test2::Suite - Distribution with a rich set of tools built upon the Test2 framework. - metacpan.org ]
[22:21:05] <Grinnz> since it does mention the difference in 'is'
[22:22:14] <jabberwok> What the definition of 'is' is? — W. J. Clingon
[22:26:43] <Mandevil> Oh, I recall I also use superhash/subhash with cmp_deeply
[22:28:17] <ether> Test::Deep++
[22:28:46] *** Quits: furrymcgee (~devuan@cgn-213-196-210-78.nc.de) (Quit: leaving)
[22:29:12] <ether> Test::Most is evil and should be avoided, always.
[22:29:49] <Mandevil> I'm sure Test::Most was recommended to me here :)
[22:29:59] <ether> my statement stands
[22:30:59] <Mandevil> Test2::V0 is approved though?
[22:31:50] <Grinnz> absolutely
[22:32:16] <Mandevil> Looking forward to rewriting my tests.
[22:32:24] <Mandevil> But it's OK, this is my learning project anyway.
[22:32:46] *** Joins: sprout (~quassel@2a02:a467:ccd6:1:9ce9:17f7:15aa:852c)
[22:32:52] <Grinnz> most of the time, you just have to rethink how you are using is() and replace cmp_deeply with is(), and you get better diagnostics on failures for free
[22:33:17] <Mandevil> Yes, but in few places I have subhash/superhash/method comparisons.
[22:33:18] <Grinnz> then you can set up more complex stuff like hash builder tests
[22:33:23] <Grinnz> right, for that
[22:33:32] <Mandevil> I know someone (you?) already showed me how to replace method.
[22:33:35] *** Joins: pj (~pj@ghettoforge/pj)
[22:33:40] <Mandevil> I think it was xenu
[22:33:43] *** Quits: Jonno_FTW (~come@user/jonno-ftw/x-0835346) (Ping timeout: 256 seconds)
[22:34:26] <Grinnz> is $obj, object { call foo => 42 }, 'object->foo returns 42';
[22:34:58] <Mandevil> I have objects encapsulating data.
[22:35:08] <Mandevil> Testing 10+ attributes like this would be annoying.
[22:35:11] <Grinnz> and you can put a whole bunch of checks for that object in the one object builder
[22:35:23] *** Joins: Jonno_FTW (~come@api.carswap.me)
[22:35:29] <Grinnz> if it fails it will tell you exactly what failed (see above about better diagnostics)
[22:35:37] <xenu> call foo => 42; call bar => 43; etc
[22:36:12] <xenu> https://metacpan.org/pod/Test2::Tools::Compare#OBJECT-BUILDER
[22:36:12] <Paperbot> Link title(s): [ Test2::Tools::Compare - Tools for comparing deep data structures. - metacpan.org ]
[22:37:30] <Grinnz> hash and array builders are similar, but you can also check foo => E; for whether a hash key exists, and put end; or etc; at the end depending whether you want to allow more keys/indexes you didn't test for
[22:38:03] <Grinnz> field foo => E; *
[22:38:41] <Grinnz> or you can just pass a full hashref/arrayref a la cmp_deeply instead
[22:39:18] *** Joins: ovid__ (~ovid@laubervilliers-659-1-13-124.w80-11.abo.wanadoo.fr)
[22:39:50] *** Quits: ovid (~ovid@laubervilliers-659-1-13-124.w80-11.abo.wanadoo.fr) ()
[22:43:01] *** Quits: andrzejku (~andrzejku@45-11-60-125.ip4.greenlan.pl) (Read error: Connection reset by peer)
[22:45:00] *** Quits: rgrinberg (~textual@2806:101e:7:33a5:94b6:4a60:d424:26d4) (Quit: My MacBook has gone to sleep. ZZZzzz…)
[22:49:15] *** Joins: tirnanog (~tirnanog@user/tirnanog)
[22:56:41] *** Joins: kevin-oculus (~tomys@c188-149-14-10.bredband.tele2.se)
[22:57:33] *** Joins: rgrinberg (~textual@2806:101e:7:b2bc:b9e9:b5b0:1484:bd77)
[22:59:26] *** Quits: rgrinberg (~textual@2806:101e:7:b2bc:b9e9:b5b0:1484:bd77) (Client Quit)
[23:00:07] *** Joins: rgrinberg (~textual@2806:101e:7:b2bc:b9e9:b5b0:1484:bd77)
[23:02:07] *** Quits: rgrinberg (~textual@2806:101e:7:b2bc:b9e9:b5b0:1484:bd77) (Client Quit)
[23:02:37] *** Quits: Linux77 (~LinuMage@186.233.183.58) (Ping timeout: 256 seconds)
[23:02:54] *** Joins: capn (~capn@user/capn)
[23:10:31] <aquanight> sweval: my $dp = (require B::Deparse and "B::Deparse")->new(); use constant FOO => 42; sub test { FOO + shift(); } $dp->coderef2test(\&test);
[23:10:41] <perlbot> aquanight: ERROR: Undefined subroutine B::Deparse::coderef2test called at $BLEAD/lib/5.35.8/B/Deparse.pm line 1668. 
[23:11:20] <aquanight> ...wuh.
[23:11:59] <aquanight> sweval: use B(); use B::Deparse (); my $dp = B::Deparse->new(); use constant FOO => 42; sub test { FOO + shift(); } $dp->coderef2test(\&test);
[23:11:59] *** Joins: Linux77 (~LinuMage@186.233.183.58)
[23:12:01] <perlbot> aquanight: ERROR: Undefined subroutine B::Deparse::coderef2test called at $BLEAD/lib/5.35.8/B/Deparse.pm line 1668. 
[23:12:06] <aquanight> oh
[23:12:08] <aquanight> I dumb
[23:12:13] <aquanight> sweval: my $dp = (require B::Deparse and "B::Deparse")->new(); use constant FOO => 42; sub test { FOO + shift(); } $dp->coderef2text(\&test);
[23:12:15] <perlbot> aquanight: {     BEGIN {${^WARNING_BITS} = "\x55\x55\x55\x55\x55\x55\x55\x55\x55\x55\x55\x55\x15\x00\x04\x50\x01\x01\x00\x55"}     use strict;     use feature 'current_sub', 'bitwise', 'defer', 'evalbytes', 'fc', 'isa', 'declared_refs', 'postderef_qq', 'refaliasing', 'say', 'signatures', 'state', 'unicode_strings', 'unicode_eval';     no feature 'bareword_fil... [Output truncated. Use `more` to read more]
[23:12:36] <aquanight> ..
[23:12:50] <aquanight> eval: my $dp = (require B::Deparse and "B::Deparse")->new(); use constant FOO => 42; sub test { BEGIN { $^H = 0 } FOO + shift(); } $dp->coderef2text(\&test);
[23:12:52] <perlbot> aquanight: {     BEGIN {${^WARNING_BITS} = "\x55\x55\x55\x55\x55\x55\x55\x55\x55\x55\x55\x55\x55\x55\x54\x51\x51\x55\x44\x55"}     42 + (shift()); }
[23:13:00] <aquanight> good enough
[23:13:08] <aquanight> eval: my $dp = (require B::Deparse and "B::Deparse")->new(); use constant FOO => 42; sub test { BEGIN { $^H = 0 } &FOO + shift(); } $dp->coderef2text(\&test);
[23:13:10] <perlbot> aquanight: {     BEGIN {${^WARNING_BITS} = "\x55\x55\x55\x55\x55\x55\x55\x55\x55\x55\x55\x55\x55\x55\x54\x51\x51\x55\x44\x55"}     &FOO + (shift()); }
[23:13:17] <aquanight> that's what I thought
[23:13:35] <aquanight> wasn't sure if &CONSTANT stopped constant inlining too
[23:14:08] <aquanight> hmm
[23:14:29] <aquanight> weval: sub test { FOO + shift(); } use constant FOO => 42; [ test ]
[23:14:31] <perlbot> aquanight: Use of uninitialized value in addition (+) at (IRC) line 1. Argument "FOO" isn't numeric in addition (+) at (IRC) line 1. [0]
[23:14:41] *** Joins: Kanjizai (~kanjizai@cpe-107-185-193-171.socal.res.rr.com)
[23:15:03] <aquanight> weval: sub FOO; sub test { FOO + shift(); } use constant FOO => 42; [ test ]
[23:15:05] <perlbot> aquanight: Prototype mismatch: sub main::FOO: none vs () at $BLEAD/lib/5.35.8/constant.pm line 171. [42]
[23:15:25] <aquanight> how do you get the "called to early to check prototype" warning then
[23:16:19] <aquanight> weval: use subs 'FOO'; sub test { FOO + shift(); } use constant FOO => 42; [ test ]
[23:16:21] <perlbot> aquanight: Prototype mismatch: sub main::FOO: none vs () at $BLEAD/lib/5.35.8/constant.pm line 171. [42]
[23:17:34] <aquanight> supposedly you get it by having a sub call before the prototype definition is seen
[23:17:57] <aquanight> but if you don't predeclare you get bareword-stringed, and if you do you either have to have the proto already or you get a prototype mismatch
[23:18:23] <aquanight> is this one of those warnings that just theoretically exists but can't ever actually happen because of how the parser works?
[23:19:04] <xenu> weval: zoo(); sub zoo() { }
[23:19:05] <aquanight> ooooh
[23:19:06] <perlbot> xenu: No output.
[23:19:21] <xenu> weval: zoo(); sub zoo :prototype() { }
[23:19:23] <perlbot> xenu: main::zoo() called too early to check prototype at (IRC) line 1. 
[23:19:27] <aquanight> weval: sub test { FOO() + shift(); } use constant FOO => 42; [ test ]
[23:19:28] <perlbot> aquanight: Use of uninitialized value in addition (+) at (IRC) line 1. [42]
[23:19:44] <xenu> dunno why it doesn't happen with constant.pm
[23:20:07] <aquanight> doesn't constant.pm do it a weird way
[23:20:28] <aquanight> like I think it just puts the constant in the CODE slot directly or something
[23:21:07] <aquanight> and I think something magic happens that'll promote it to a sub :proto() if a real CV is ever needed
[23:22:15] <aquanight> yeah there's some comments in constant.pm that says they're not quite the same as sub () {} constants
[23:26:11] <ether> gah! Betty White just died
[23:26:23] <ether> she was supposed to live forever
[23:27:30] *** Quits: mnemonic (~semeion@user/semeion) (Ping timeout: 260 seconds)
[23:31:14] <zgu> did she make it to 100?
[23:32:08] <lopid> does this mean the queen could also die?
[23:34:04] *** Quits: magla (~gelignite@55d465a4.access.ecotel.net) (Quit: Stay safe!)
[23:36:11] *** Joins: rbraun_ (0D1N7pkq@user/rbraun)
[23:45:37] *** Joins: mnemonic (~semeion@user/semeion)
[23:46:38] *** Quits: rbraun (aHmVStm5@user/rbraun) (Quit: leaving)
[23:46:51] *** rbraun_ is now known as rbraun
[23:53:36] *** Joins: semeion (~semeion@user/semeion)
[23:53:36] *** mnemonic is now known as Guest7561
[23:54:34] <pragma-> rip
[23:54:37] *** Quits: Guest7561 (~semeion@user/semeion) (Ping timeout: 240 seconds)
[23:54:45] *** Quits: Linux77 (~LinuMage@186.233.183.58) (Ping timeout: 256 seconds)
[23:54:49] <pragma-> zgu: nope, 99.
[23:55:22] *** Joins: Linux77 (~LinuMage@186.233.183.58)
