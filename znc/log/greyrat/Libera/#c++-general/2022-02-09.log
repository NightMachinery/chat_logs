[00:02:46] *** Joins: Oxyd (~oxyd@user/oxyd)
[00:03:18] *** Quits: varioust (~varioust@gateway/tor-sasl/varioust) (Ping timeout: 276 seconds)
[00:05:19] *** Joins: varioust (~varioust@gateway/tor-sasl/varioust)
[00:11:14] *** Quits: varioust (~varioust@gateway/tor-sasl/varioust) (Remote host closed the connection)
[00:11:37] *** Quits: Tobbi (~Tobbi@2a02:8108:1240:48ec:ed88:aae9:3bf6:fcb5) (Ping timeout: 240 seconds)
[00:13:26] *** Joins: thad_the_man_2 (~tlophd_be@2600:1700:3051:4370:21d:9ff:fe33:51f4)
[00:13:29] *** Quits: thad_the_man (~tlophd_be@2600:1700:3051:4370:21d:9ff:fe33:51f4) (Read error: Connection reset by peer)
[00:13:29] *** Joins: Tobbi (~Tobbi@2a02:8108:1240:48ec:7863:b6d6:f0d1:5a66)
[00:15:38] *** Quits: proller (~p@80.240.216.69) (Ping timeout: 260 seconds)
[00:15:57] *** Joins: varioust (~varioust@gateway/tor-sasl/varioust)
[00:18:40] *** Quits: ___nick___ (~quassel@cpc68286-cdif17-2-0-cust533.5-1.cable.virginm.net) (Quit: https://quassel-irc.org - Chat comfortably. Anywhere.)
[00:20:12] *** Joins: ___nick___ (~quassel@cpc68286-cdif17-2-0-cust533.5-1.cable.virginm.net)
[00:20:27] *** Quits: thad_the_man_2 (~tlophd_be@2600:1700:3051:4370:21d:9ff:fe33:51f4) (Quit: Leaving)
[00:22:11] *** Joins: lxsameer (~lxsameer@user/lxsameer)
[00:24:45] *** Quits: varioust (~varioust@gateway/tor-sasl/varioust) (Ping timeout: 276 seconds)
[00:26:59] *** Joins: varioust (~varioust@gateway/tor-sasl/varioust)
[00:27:57] *** Joins: c4017w_ (~c4017@209.52.68.8)
[00:28:06] *** Joins: proller (~p@2a02:6b8:b081:10::1:1b)
[00:31:31] *** Quits: c4017w__ (~c4017@209.52.68.8) (Ping timeout: 256 seconds)
[00:34:21] *** Quits: ___nick___ (~quassel@cpc68286-cdif17-2-0-cust533.5-1.cable.virginm.net) (Ping timeout: 256 seconds)
[00:34:36] *** Joins: Juliu (~Juliu@2a02:810b:c640:3ec0:206a:d63d:f8a8:ec3b)
[00:35:53] *** Quits: Simplar (~Simplar@188.163.93.241) (Quit: Going offline, see ya! (www.adiirc.com))
[00:36:03] *** Quits: bobb_ (~bobb_@dslb-092-075-158-175.092.075.pools.vodafone-ip.de) (Ping timeout: 256 seconds)
[00:38:14] *** Joins: thad_the_man (~tlophd_be@2600:1700:3051:4370:21d:9ff:fe33:51f4)
[00:38:20] *** Quits: foul_owl (~kerry@94.140.8.51) (Read error: Connection reset by peer)
[00:39:52] * thad_the_man says the shudder when yolu realise they have introduceda std::experimental namespace.
[00:40:44] <LordKalma> the aliens are trying to make contact
[00:41:30] <Inline> give them pacman!
[00:41:35] <Inline> lol
[00:43:01] <Alipha> remember: pacman eats the bigger number
[00:43:35] <PJBoy> oh man, it's crazy that we had to learn that rule at some point
[00:43:57] <Alipha> or alligator eats the bigger number
[00:45:52] <paul424> uhhh is there a tool which could trace all commmented out code constructs ? I am using emacs ....
[00:46:21] <PJBoy> strongly doubt it
[00:47:50] *** Quits: kraa (~kraa@107-190-7-216.cpe.teksavvy.com) (Ping timeout: 252 seconds)
[00:51:06] *** Quits: paul424 (~tom@ip-5-172-237-33.multi.internet.cyfrowypolsat.pl) (Quit: Leaving)
[00:55:15] *** Joins: foul_owl (~kerry@23.82.194.73)
[00:55:20] *** Joins: AbleBacon (~AbleBacon@user/AbleBacon)
[00:56:56] *** Quits: nelubit (~nelubit@user/nelubit) (Read error: Connection reset by peer)
[00:58:56] *** Joins: k8yun (~k8yun@user/k8yun)
[00:59:03] <DSpider> is it safe to perform pointer arithmetic on addresses of member variables?
[00:59:34] <DSpider> I mean, is it always guaranteed that member addresses will be, in memory, in the same order that they're declared?
[01:00:42] <PJBoy> it is not
[01:01:39] <PJBoy> and if it was guaranteed, it would still be unsafe to attempt pointer arithmetic
[01:01:49] <PJBoy> pointer arithmetic is only safe to do on arrays
[01:02:21] <rpav> (*) if you want totally portable code, which probably you should, because you can do most things well enough these days
[01:02:56] <rpav> if you're doing GL or embedded or something it's a bit of a different story and fuck-it to the standard
[01:04:25] *** Quits: magla (~gelignite@d5367123.access.ecotel.net) (Quit: Stay safe!)
[01:10:46] *** Quits: kenanmarasli (~kenanmara@user/kenanmarasli) (Quit: Leaving)
[01:17:17] *** Quits: jsbach (~jsbach@2a01:c23:6414:9300:13bf:8b00:4a82:98ca) (Ping timeout: 250 seconds)
[01:17:32] *** Quits: robod34 (~Username@79.113.227.62) (Quit: Goe offline! ( http://marius.sucan.ro/ ))
[01:21:12] <Alipha> DSpider: "is it always guaranteed that member addresses will be, in memory, in the same order that they're declared?" yes, but there may be padding between members
[01:21:14] *** Joins: markong (~kvirc@213.146.188.203)
[01:22:11] <Alipha> but it's not allowed to use a pointer pointing to one object in order to access another object unless said objects are part of the same array
[01:23:47] <DSpider> MSVC seems to allow it
[01:25:00] <DSpider> if (*((&myStruct.myIntVariable) + addressOffset) == myOtherIntVariable)
[01:25:03] <LordKalma> !ub
[01:25:04] <nolyc> http://eel.is/c++draft/defns.undefined
[01:25:51] *** Quits: varioust (~varioust@gateway/tor-sasl/varioust) (Ping timeout: 276 seconds)
[01:26:02] <rpav> DSpider: of course you _can_ in probably every implementation you care about, because the standard is stupid, but you need to make sure your code works for the compiler/platform/etc you care about, and watch out for any strict aliasing optimizations
[01:26:03] <LordKalma> DSpider, engaging in undefined behaviour doesn't mean it doesn't work. it means nobody guarantees whatever you're doing
[01:26:40] <rpav> probably don't unless you need to deal with passing/mapping some specific struct layout to something else .. GL is a good example here
[01:27:01] <DSpider> GL - OpenGL?
[01:27:01] <rpav> or embedded shit no doubt .. in both cases you should be dealing with a known set of compilers/platforms
[01:27:03] <rpav> yeah
[01:27:41] <LordKalma> rpav, that's the thing, like, when you're doing something related to a specific compiler docs
[01:27:49] <LordKalma> then it's not _standard_ c++
[01:27:51] <LordKalma> just that
[01:27:53] <rpav> e.g. generally setting up buffers is going to involve mapping struct layouts and offsets
[01:27:59] *** Quits: Juliu (~Juliu@2a02:810b:c640:3ec0:206a:d63d:f8a8:ec3b) (Ping timeout: 252 seconds)
[01:28:00] <DSpider> I'm scared the compiler might rearrange them to suit a particular cache size or something, at which point those addresses will point to something else entirely
[01:28:08] <DSpider> or probably crash
[01:28:12] <rpav> the compiler can't rearrange a struct
[01:28:28] *** Joins: c4017w__ (~c4017@209.52.68.8)
[01:28:28] <rpav> also offsetof / alignof / etc
[01:28:34] <DSpider> if it feels that it can better fit a cache line, I think it can
[01:29:43] <rpav> e.g. you can use offsetof to get the offset of a member of a struct, and using the pointer to the struct .. by The Standard(tm) you can then do fuckall because the wankrags on the committee prefer to minimize usefulness over generalization and hypothetical optimization
[01:29:46] <imMute> DSpider: I like to have static_asserts() checking expected struct size.  you could go a step further and check field offsets (see volve mapping struct layouts and offsets
[01:29:54] *** Joins: jsbach (~jsbach@2a01:c22:a526:3500:801e:4047:2c44:71c4)
[01:29:55] <rpav> but in practice you're probably going to just do what works
[01:30:09] <imMute> bah,  see https://elixir.bootlin.com/linux/latest/source/include/linux/stddef.h#L19 for offsetof() from Linux kernel
[01:30:19] <LordKalma> imMute, or, if you don't care about being sane, #pragma pack
[01:30:42] *** Joins: varioust (~varioust@gateway/tor-sasl/varioust)
[01:31:02] <imMute> LordKalma: generally if you're dealing with memory mapped structs, sanity is already off the table. ;)
[01:31:29] <rpav> if you're dealing with memory mapped structs you're likely doing something useful :P
[01:31:37] *** Quits: c4017w_ (~c4017@209.52.68.8) (Ping timeout: 240 seconds)
[01:31:43] <LordKalma> well, there's no standard c++ way of doing memory mapping stuff
[01:31:53] <LordKalma> there's a whole cppcon talk talking about memory mapped objects
[01:32:05] <LordKalma> and it's one hour to say everything sucks
[01:32:09] <rpav> really if you're using C++ _at all_ and _not_ doing some form of memory mapping structs, i'm not entirely sure C++ is the language you should be using
[01:32:36] <imMute> rpav: amen.
[01:32:46] <LordKalma> uh... wut?
[01:33:07] *** Quits: john99 (~john99@199.246.103.34.bc.googleusercontent.com) (Quit: Client closed)
[01:33:11] <LordKalma> people writing finance software aren't probably doing device drivers
[01:33:32] <rpav> like the point of having some kind of low-level control of memory and layout is because you need that and you're probably dealing with some large chunks of data, or low-level bits and bobs of hardware .. either you're pushing buffers to the gpu or memory mapping large I/O for throughput or dealing with like hardware whatever
[01:33:54] <rpav> if you're _not_ doing one of those things, i'm not sure why C++ would actually be of much value
[01:34:05] <rpav> like over something higher-level
[01:34:09] <LordKalma> nano-second trading?
[01:34:19] <rpav> is high throughput I/O, probably going to memory map
[01:34:42] *** Quits: sbrothy (~sbrothy@192038128044.mbb.telenor.dk) (Read error: No route to host)
[01:34:58] <rpav> similar with high volume logging or whatever .. but you're probably going to be doing some form of that
[01:37:00] *** Joins: Juliu (~Juliu@2a02:810b:c640:3ec0:206a:d63d:f8a8:ec3b)
[01:38:13] <Alipha> DSpider: why do you even care about the offsets of the members?
[01:39:43] * Alipha is going to assume DSpider is trying to do serialization/deserialization, by reading/writing the bytes of the struct directly to a file buffer or network buffer or something
[01:40:11] <DSpider> I need to check them inside a loop from a lambda, of which the entire point is to avoid code duplication
[01:40:21] *** Joins: BurumaSerafuku (~sjw@69.206.49.150)
[01:40:36] <rpav> that's the best question, and serialization is also (usually) not a good reason to do so ;/
[01:41:09] <rpav> DSpider: can you be more specific? there are definitely things you can do here to avoid duplication that don't involve UB
[01:42:09] <Alipha> DSpider: sounds like you want an array of ints, not a bunch of individual int members.
[01:42:12] *** Quits: npaperbot (~npaperbot@dodecahedron.m-ou.se) (Remote host closed the connection)
[01:42:20] *** Joins: npaperbot (~npaperbot@dodecahedron.m-ou.se)
[01:42:20] *** ChanServ sets mode: +v npaperbot
[01:42:46] <DSpider> yeah, but then they wouldn't have names
[01:42:53] <ville> Alipha: 20: https://timsong-cpp.github.io/cppwp/n4861/expr.rel#4.2    23: http://www.eelis.net/c++draft/expr.rel#4.2
[01:43:18] <DSpider> they would be called myVariable[0], myVariable[1], myVariable[2], etc
[01:43:31] <Alipha> int& x() { return myarray[0]; }  // DSpider, add member functions?
[01:44:30] <Alipha> yes, foo.x() isn't as pretty as foo.x. live with it :-P
[01:45:24] <rpav> bool check_var(const T&);    check(const Ts&...) { .. }
[01:45:26] <rpav> check(myVariable[0], myVariable[1], myVariable[2]);
[01:45:38] <DSpider> I was kind of hoping to avoid adding functions, since this is part of an ECS
[01:45:40] <ville> DSpider: right now it isn't guaranteed that a later-declared member has larger address: https://timsong-cpp.github.io/cppwp/n4861/expr.rel#4.2
[01:46:39] <rpav> or implement check_struct(const S&); which calls individual check_var(const T&); and then check each struct on demand in your ECS
[01:46:45] <Alipha> or, keep the separate member variables and: int (Foo::*members)[] = {&Foo::x, &Foo::y, &Foo::z}; for(int i = 0; i < 3; ++i) { int &member = myfoo.*members[i]; ... }
[01:47:08] <rpav> (incidentally that's basically the same way serialization works... implement encode(myStruct) which calls encode(element) on relevant entries)
[01:47:36] <LordKalma> Properties proposal, when?
[01:47:41] <ville> ...but apparently there is no known implementation taking advantage of that, so they changed the rules for 23
[01:48:35] <Alipha> { Foo myfoo{3, 5, 9}; int Foo::*members[] = {&Foo::x, &Foo::y, &Foo::z}; for(int i = 0; i < 3; ++i) { int &member = myfoo.*members[i]; cout << member; } } struct Foo { int x, y, z; };
[01:48:35] <geordi> 359
[01:48:36] *** Quits: varioust (~varioust@gateway/tor-sasl/varioust) (Ping timeout: 276 seconds)
[01:50:21] <rpav> possible but i'm not sure how much that saves over `check_struct(Foo& f) { check(f.x, f.y, f.z); }`
[01:50:42] <rpav> other that typing out a one-time variadic template for check(Ts)
[01:51:06] <ashafq> Silly question: Is there a sane way to implement division without dealing with NAN/INF?
[01:51:18] <ashafq> Like: y = a / (b + EPS); ?
[01:51:21] <rpav> no
[01:51:38] <rpav> y = (b ? a / b : 0);
[01:51:54] <ashafq> rpav: yes, that would work too.
[01:52:13] <rpav> ashafq: i'd consider it not to count, because it deals with nan/inf ;/
[01:53:01] <ashafq> True...
[01:53:16] <Alipha> if b is sufficiently small, you may still get INF
[01:53:19] <rpav> but an inline div(a,b) that does that is probably fine, or one that throws if it's 0 .. personally i really want a hardware fault and crash/backtrace anytime NaN is encountered
[01:53:41] <ashafq> It's really for dealing with vectors (arrays)
[01:54:05] <rpav> Alipha: good point, and the minimum may scale with the numerator? i'm not sure
[01:55:02] <rpav> _is_ that possible, because i feel like i've never encountered it even assuming extremely small divisors
[01:55:08] *** Quits: LiaoTao (~LiaoTao@gateway/tor-sasl/liaotao) (Remote host closed the connection)
[01:55:09] <Alipha> ashafq: what are you dividing by? vec.size()?
[01:55:12] *** Joins: badone (~badone@209.132.189.152)
[01:55:54] <ashafq> Alipha: it's the elements in vectors
[01:56:31] *** Quits: chris64 (~chris@user/chris64) (Quit: leaving)
[01:56:35] <ashafq> void divide(std::vector<T> &res, std::vector<T> &a, std::vector<T>&b);
[01:56:55] <Alipha> << 1e200 / 1e-300; // rpav
[01:56:56] <geordi> inf
[01:57:20] <rpav> yea
[01:57:46] *** Quits: Serpent7776 (~Serpent77@90-156-31-193.internetia.net.pl) (Quit: leaving)
[01:58:29] *** Joins: LiaoTao (~LiaoTao@gateway/tor-sasl/liaotao)
[01:58:36] <rpav> and clearly it scales so basically you're SOL ;/
[01:59:05] <Alipha> ashafq: i'm going to refer to rpav's answer of "no"
[01:59:17] <ashafq> 😊
[02:00:42] <Alipha> just let the result contain nan or inf and let the caller deal with it. or throw an exception. or replace the result with T{} (ie, 0) or some other sentinel value, but i'd not advise that.
[02:00:48] <rpav> auto div(auto a, auto b) { auto r = a/b; if(std::isnan(r) || std::isinf(r)) std::abort(); return r; }
[02:01:16] <rpav> of course that relies on always using div, which sucks
[02:01:23] <rpav> and also checking every time is slow
[02:01:52] <Alipha> and assumes that std::isnan and std::isinf are valid for the given type
[02:02:02] <rpav> true
[02:02:26] <rpav> though i think really a 0-divisor check is usually sufficient, as inf behaves less terribly than nan? i dunno
[02:02:31] *** Joins: varioust (~varioust@gateway/tor-sasl/varioust)
[02:02:36] <rpav> probably you will run into inf less
[02:03:10] <ashafq> Also note if I build with -ffast-math, std::isnan and std::inf will not work.
[02:03:14] <Alipha> { std::filesystem::path x("foo"), y("bar"); cout << div(x, y); } auto div(auto a, auto b) { return a / b; }
[02:03:15] <geordi> "foo/bar"
[02:07:05] *** Joins: Codaraxis_ (~Codaraxis@user/codaraxis)
[02:09:49] *** Quits: Codaraxis (~Codaraxis@user/codaraxis) (Ping timeout: 240 seconds)
[02:13:20] <DSpider> if I just make an array of these ints and create aliases inside the same struct, would that be considered ok?
[02:13:30] <DSpider> do aliases take up space?
[02:13:52] <ville> let's go with "no" with out fully knowing what counts as an alias
[02:14:08] <DSpider> references
[02:14:15] <ville> then "yes"
[02:14:19] *** Quits: foul_owl (~kerry@23.82.194.73) (Ping timeout: 256 seconds)
[02:14:52] <DSpider> an alias meaning: int& myNamedVariable = array[3];
[02:15:08] <DSpider> do they take up extra space?
[02:15:35] <ville> you can usually get pretty close thinking that somewhere down the line it's going to get turned into a pointer. that does not mean references are specified to be so. or that they are the same thing
[02:20:43] <MaddHatter> why do isnan and inf not work?
[02:21:23] *** Joins: blackout69 (~blackout6@net-109-117-245-237.cust.vodafonedsl.it)
[02:22:04] <Alipha> DSpider: reference members take up space
[02:22:35] <MaddHatter> answer to myself: https://stackoverflow.com/questions/22931147/stdisinf-does-not-work-with-ffast-math-how-to-check-for-infinity
[02:26:31] *** Parts: pepperoni (~pepperoni@172.58.99.50) ()
[02:28:49] *** Quits: KombuchaKip (~kip@192.252.230.5) (Ping timeout: 256 seconds)
[02:28:57] *** Joins: c4017w_ (~c4017@209.52.68.8)
[02:29:37] *** Quits: proller (~p@2a02:6b8:b081:10::1:1b) (Ping timeout: 240 seconds)
[02:30:25] *** Joins: smallville7123 (~smallvill@cpe-172-193-72-46.qld.foxtel.net.au)
[02:32:47] *** Quits: c4017w__ (~c4017@209.52.68.8) (Ping timeout: 256 seconds)
[02:32:56] *** Quits: Tobbi (~Tobbi@2a02:8108:1240:48ec:7863:b6d6:f0d1:5a66) (Ping timeout: 250 seconds)
[02:34:43] *** Joins: Tobbi (~Tobbi@2a02:8108:1240:48ec:c103:4132:3411:10c1)
[02:36:10] *** Joins: foul_owl (~kerry@23.82.194.73)
[02:36:38] *** Quits: spaceangel (~spaceange@ip-78-102-216-202.net.upcbroadband.cz) (Remote host closed the connection)
[02:42:11] *** Quits: Guest19 (~Guest19@2601:647:5280:2a50:ac8b:76d2:9030:fa62) (Quit: Client closed)
[02:42:26] *** Joins: Guest19 (~Guest19@2601:647:5280:2a50:ac8b:76d2:9030:fa62)
[02:48:39] *** Joins: Cyp_ (~cyp@213.237.87.142)
[02:49:13] *** Quits: k8yun (~k8yun@user/k8yun) (Read error: Connection reset by peer)
[02:51:29] *** Quits: Cyp (~cyp@213.237.88.120) (Ping timeout: 256 seconds)
[03:10:04] *** Quits: voidiov (~voidiov@2a02:2f0e:6203:4c00:5192:8373:f586:1f80) (Remote host closed the connection)
[03:11:30] *** Quits: zen_coder (~zen_coder@2a02:8109:a280:2d8d:60ef:8113:9157:1102) (Ping timeout: 250 seconds)
[03:13:41] *** Joins: p-i-_ (~Ohmu@183.89.35.200)
[03:15:52] *** Joins: shailangsa (~shailangs@host86-185-98-37.range86-185.btcentralplus.com)
[03:17:13] *** Quits: foul_owl (~kerry@23.82.194.73) (Ping timeout: 256 seconds)
[03:17:19] *** Quits: p-i- (~Ohmu@mx-ll-183.89.35-200.dynamic.3bb.co.th) (Ping timeout: 256 seconds)
[03:19:35] *** Quits: plastico (~plastico@neomutt/plastico) (Quit: WeeChat 3.4)
[03:22:39] *** Joins: hexingb (~hexingb@2409:8900:2700:507:c98a:566:c267:420d)
[03:25:44] *** Quits: ZeroKnight (zeroknight@dimensionzero.net) (Quit: ERR_NOWITTYQUITMESSAGE)
[03:29:28] *** Joins: c4017w__ (~c4017@209.52.68.8)
[03:32:25] *** Joins: foul_owl (~kerry@217.114.38.61)
[03:32:37] *** Quits: c4017w_ (~c4017@209.52.68.8) (Ping timeout: 240 seconds)
[03:33:25] *** Quits: nojhan (uid443807@id-443807.lymington.irccloud.com) (Quit: Connection closed for inactivity)
[03:35:21] *** Quits: hexingb (~hexingb@2409:8900:2700:507:c98a:566:c267:420d) (Read error: Connection reset by peer)
[03:35:44] *** Joins: hexingb (~hexingb@2409:8900:2700:507:c98a:566:c267:420d)
[03:36:07] *** Joins: Codaraxis__ (~Codaraxis@user/codaraxis)
[03:39:12] *** Quits: LiaoTao (~LiaoTao@gateway/tor-sasl/liaotao) (Remote host closed the connection)
[03:39:26] *** Joins: LiaoTao (~LiaoTao@gateway/tor-sasl/liaotao)
[03:40:02] *** Quits: Codaraxis_ (~Codaraxis@user/codaraxis) (Ping timeout: 260 seconds)
[03:43:02] *** Parts: blackout69 (~blackout6@net-109-117-245-237.cust.vodafonedsl.it) ()
[03:45:43] *** Quits: hexingb (~hexingb@2409:8900:2700:507:c98a:566:c267:420d) (Read error: Connection reset by peer)
[03:46:35] *** Joins: hexingb (~hexingb@2409:8900:2700:507:c98a:566:c267:420d)
[03:46:59] *** Quits: hexingb (~hexingb@2409:8900:2700:507:c98a:566:c267:420d) (Read error: Connection reset by peer)
[04:00:00] *** Joins: gentooclimax (~gentoocli@81-64-65-213.rev.numericable.fr)
[04:03:11] *** Joins: hexingb (~hexingb@2409:8900:2700:507:c98a:566:c267:420d)
[04:03:21] *** Quits: hexingb (~hexingb@2409:8900:2700:507:c98a:566:c267:420d) (Read error: Connection reset by peer)
[04:04:01] *** Quits: PJBoy (~PJBoy@user/pjboy) (Ping timeout: 256 seconds)
[04:05:07] *** Joins: hexingb (~hexingb@2409:8900:2700:507:c98a:566:c267:420d)
[04:07:01] *** Quits: hexingb (~hexingb@2409:8900:2700:507:c98a:566:c267:420d) (Read error: Connection reset by peer)
[04:08:45] *** Joins: Cyp (~cyp@213.237.87.142)
[04:08:47] *** Quits: Cyp_ (~cyp@213.237.87.142) (Ping timeout: 256 seconds)
[04:16:36] *** Joins: hexingb (~hexingb@2409:8900:2700:507:c98a:566:c267:420d)
[04:17:18] *** Quits: hexingb (~hexingb@2409:8900:2700:507:c98a:566:c267:420d) (Read error: Connection reset by peer)
[04:25:27] *** Quits: Jupp_S (~quassel@ip-088-153-154-129.um27.pools.vodafone-ip.de) (Remote host closed the connection)
[04:29:57] *** Joins: c4017w_ (~c4017@209.52.68.8)
[04:31:13] *** Quits: gentooclimax (~gentoocli@81-64-65-213.rev.numericable.fr) (Ping timeout: 256 seconds)
[04:31:54] *** Quits: smallville7123 (~smallvill@cpe-172-193-72-46.qld.foxtel.net.au) (Remote host closed the connection)
[04:33:17] *** Quits: c4017w__ (~c4017@209.52.68.8) (Ping timeout: 240 seconds)
[04:34:42] *** Quits: Codaraxis__ (~Codaraxis@user/codaraxis) (Ping timeout: 250 seconds)
[04:34:42] *** Quits: markong (~kvirc@213.146.188.203) (Ping timeout: 250 seconds)
[04:36:36] *** Joins: ferdna (~ferdna@user/ferdna)
[04:47:30] *** Joins: hexingb (~hexingb@2409:8900:2700:507:c98a:566:c267:420d)
[04:48:14] *** Quits: hexingb (~hexingb@2409:8900:2700:507:c98a:566:c267:420d) (Read error: Connection reset by peer)
[04:54:22] *** Joins: hexingb (~hexingb@2409:8900:2700:fbd2:3dc9:b76:2cf1:eb5e)
[04:54:36] *** Quits: hexingb (~hexingb@2409:8900:2700:fbd2:3dc9:b76:2cf1:eb5e) (Read error: Connection reset by peer)
[04:56:17] *** Joins: hexingb (~hexingb@2409:8900:2700:fbd2:3dc9:b76:2cf1:eb5e)
[05:02:38] *** Quits: _mikey (~mikey@user/mikey/x-4335048) (Quit: WeeChat 3.4)
[05:03:18] *** Joins: _mikey (~mikey@user/mikey/x-4335048)
[05:03:47] *** Quits: DSpider (~DSpider@82.79.237.109) (Quit: Leaving)
[05:08:55] *** Quits: x_kuru (~xkuru@user/xkuru) (Read error: Connection reset by peer)
[05:10:10] *** Quits: ivii (~ivan@user/ivii) (Quit: Konversation terminated!)
[05:12:00] *** Joins: lh_mouse (~lh_mouse@mingw-w64/developer/lhmouse)
[05:23:17] *** Quits: hexingb (~hexingb@2409:8900:2700:fbd2:3dc9:b76:2cf1:eb5e) (Ping timeout: 240 seconds)
[05:26:45] *** Quits: lxsameer (~lxsameer@user/lxsameer) (Ping timeout: 256 seconds)
[05:28:11] *** Joins: hexingb (~hexingb@103.37.140.45)
[05:29:30] *** Quits: thad_the_man (~tlophd_be@2600:1700:3051:4370:21d:9ff:fe33:51f4) (Read error: Connection reset by peer)
[05:30:28] *** Joins: c4017w__ (~c4017@209.52.68.8)
[05:31:26] *** Joins: thad_the_man (~tlophd_be@2600:1700:3051:4370:21d:9ff:fe33:51f4)
[05:31:57] *** Quits: thad_the_man (~tlophd_be@2600:1700:3051:4370:21d:9ff:fe33:51f4) (Client Quit)
[05:32:07] *** Joins: lh_ideapad (~lh_mouse@mingw-w64/developer/lhmouse)
[05:34:07] *** Quits: c4017w_ (~c4017@209.52.68.8) (Ping timeout: 256 seconds)
[05:37:29] *** Joins: ZeroKnight (zeroknight@dimensionzero.net)
[05:41:00] *** Joins: AliceMeows (~AliceMeow@user/alicemeows)
[05:42:13] *** Quits: npaperbot (~npaperbot@dodecahedron.m-ou.se) (Remote host closed the connection)
[05:42:22] *** Joins: npaperbot (~npaperbot@dodecahedron.m-ou.se)
[05:42:22] *** ChanServ sets mode: +v npaperbot
[05:52:09] *** Joins: leduyquang753 (~leduyquan@user/leduyquang753)
[06:01:49] *** Quits: Tobbi (~Tobbi@2a02:8108:1240:48ec:c103:4132:3411:10c1) (Quit: My MacBook has gone to sleep. ZZZzzz…)
[06:04:27] *** Quits: artok (~azo@mobile-access-b04822-148.dhcp.inet.fi) (Quit: reboot)
[06:09:05] *** Joins: smallville7123 (~smallvill@cpe-172-193-72-46.qld.foxtel.net.au)
[06:13:33] *** Quits: skapata (~Skapata@user/skapata) (Read error: Connection reset by peer)
[06:14:31] *** Quits: seninha (~seninha@user/seninha) (Remote host closed the connection)
[06:16:58] *** Quits: hexingb (~hexingb@103.37.140.45) (Ping timeout: 250 seconds)
[06:30:40] *** Quits: Roughy (~mdaw45ns@user/roughy) (Quit: Meadow Fresh milk)
[06:30:57] *** Joins: c4017w_ (~c4017@209.52.68.8)
[06:31:00] *** Joins: k8yun (~k8yun@user/k8yun)
[06:31:14] *** Quits: teepee (~teepee@openscad/teepee) (Remote host closed the connection)
[06:31:30] *** Joins: teepee (~teepee@openscad/teepee)
[06:34:18] *** Quits: c4017w__ (~c4017@209.52.68.8) (Ping timeout: 250 seconds)
[06:35:42] *** Quits: pulse (~pulse@user/pulse) (Quit: pulse)
[06:43:49] *** Joins: Jupp_S (~quassel@ip-088-153-154-129.um27.pools.vodafone-ip.de)
[06:49:09] *** Joins: hexingb (~hexingb@103.37.140.28)
[06:54:31] *** Joins: adeliktas5 (~adeliktas@i59F5203E.versanet.de)
[06:56:37] *** Quits: adeliktas (~adeliktas@i59F5F474.versanet.de) (Ping timeout: 240 seconds)
[06:56:37] *** adeliktas5 is now known as adeliktas
[06:57:07] *** Quits: Leone (~Leo@108.175.224.215) (Read error: Connection reset by peer)
[07:05:48] *** Quits: varioust (~varioust@gateway/tor-sasl/varioust) (Ping timeout: 276 seconds)
[07:05:57] *** Quits: vdamewood (~vdamewood@fedora/vdamewood) (Quit: My MacBook Pro has gone to sleep. ZZZzzz…)
[07:07:06] *** Joins: Emet-Selch (~haise01@user/haise01)
[07:07:52] *** Joins: vdamewood (~vdamewood@fedora/vdamewood)
[07:08:36] *** Quits: CodeMouse92 (~CodeMouse@user/codemouse92) (Remote host closed the connection)
[07:10:27] *** Quits: Azem (~haise01@user/haise01) (Ping timeout: 256 seconds)
[07:13:30] *** Joins: k8yun_ (~k8yun@user/k8yun)
[07:17:14] *** Quits: k8yun (~k8yun@user/k8yun) (Ping timeout: 252 seconds)
[07:31:29] *** Joins: c4017w__ (~c4017@209.52.68.8)
[07:34:15] *** Quits: hexingb (~hexingb@103.37.140.28) (Ping timeout: 256 seconds)
[07:35:23] *** Quits: c4017w_ (~c4017@209.52.68.8) (Ping timeout: 256 seconds)
[07:35:27] *** Quits: great_taste (~great_tas@user/great-taste/x-5798414) (Quit: Client closed)
[07:37:08] *** Joins: hexingb (~hexingb@2409:8900:2700:ba85:9510:8443:4edd:f282)
[07:39:21] *** Quits: AmR (~AmREiSa@156.199.10.76) (Quit: Konversation terminated!)
[07:40:05] *** Joins: varioust (~varioust@gateway/tor-sasl/varioust)
[07:41:17] *** Quits: hexingb (~hexingb@2409:8900:2700:ba85:9510:8443:4edd:f282) (Ping timeout: 240 seconds)
[07:41:52] *** Joins: hexingb (~hexingb@2409:8900:2700:9dc8:fd93:450e:becc:4ef6)
[07:48:34] *** Quits: Stryyker (~stryyke1@about/windows/staff/stryyker) (Remote host closed the connection)
[07:54:50] *** Quits: lockywolf_ (~lockywolf@public.lockywolf.net) (Quit: ZNC 1.8.2 - https://znc.in)
[07:55:12] *** Quits: varioust (~varioust@gateway/tor-sasl/varioust) (Ping timeout: 276 seconds)
[07:56:32] *** Joins: Stryyker (~stryyke1@about/windows/staff/stryyker)
[07:58:27] *** Joins: lockywolf_ (~lockywolf@public.lockywolf.net)
[08:00:58] *** Quits: jsbach (~jsbach@2a01:c22:a526:3500:801e:4047:2c44:71c4) (Ping timeout: 250 seconds)
[08:03:43] *** Quits: ethoxy (~root@bison.alphaw0lf.xyz) (Ping timeout: 256 seconds)
[08:04:00] *** Quits: k8yun_ (~k8yun@user/k8yun) (Ping timeout: 250 seconds)
[08:10:19] *** Quits: joaofukuda (~joaofukuk@2804:431:c7f4:345c:9441:82c4:a226:af6b) (Remote host closed the connection)
[08:11:26] *** Joins: great_taste (~great_tas@user/great-taste/x-5798414)
[08:14:23] *** Joins: jsbach (~jsbach@2a01:c22:34a5:b300:e53a:917a:f160:58dc)
[08:27:31] *** Quits: z8z (~x@ac255238.ppp.asahi-net.or.jp) (Quit: Quitting)
[08:31:58] *** Joins: c4017w_ (~c4017@209.52.68.8)
[08:35:26] *** Quits: c4017w__ (~c4017@209.52.68.8) (Ping timeout: 260 seconds)
[08:39:37] *** Quits: hexingb (~hexingb@2409:8900:2700:9dc8:fd93:450e:becc:4ef6) (Ping timeout: 240 seconds)
[08:40:00] *** Joins: hexingb (~hexingb@103.37.140.28)
[09:21:26] *** Quits: lh_ideapad (~lh_mouse@mingw-w64/developer/lhmouse) (Remote host closed the connection)
[09:21:34] *** Quits: msim_ (~msim@2001:8003:d194:d000::d8d) (Ping timeout: 250 seconds)
[09:22:55] *** Joins: lh_ideapad (~lh_mouse@mingw-w64/developer/lhmouse)
[09:28:09] *** Quits: lh_ideapad (~lh_mouse@mingw-w64/developer/lhmouse) (Ping timeout: 256 seconds)
[09:29:52] *** Joins: msim_ (~msim@2001:8003:d194:d000::d8d)
[09:32:28] *** Joins: c4017w__ (~c4017@209.52.68.8)
[09:36:19] *** Quits: c4017w_ (~c4017@209.52.68.8) (Ping timeout: 256 seconds)
[09:36:59] *** Joins: emerent_ (~quassel@p200300cd570443fbba27ebfffed28a59.dip0.t-ipconnect.de)
[09:36:59] *** Quits: emerent (~quassel@p200300cd570443a1ba27ebfffed28a59.dip0.t-ipconnect.de) (Killed (mercury.libera.chat (Nickname regained by services)))
[09:36:59] *** emerent_ is now known as emerent
[09:42:13] *** Quits: npaperbot (~npaperbot@dodecahedron.m-ou.se) (Remote host closed the connection)
[09:42:21] *** Joins: npaperbot (~npaperbot@dodecahedron.m-ou.se)
[09:42:21] *** ChanServ sets mode: +v npaperbot
[09:42:44] *** Joins: lh_ideapad (~lh_mouse@mingw-w64/developer/lhmouse)
[09:44:30] *** Quits: great_taste (~great_tas@user/great-taste/x-5798414) (Quit: Client closed)
[09:46:24] *** Joins: sord937 (~sord937@gateway/tor-sasl/sord937)
[10:05:33] *** Quits: Juliu (~Juliu@2a02:810b:c640:3ec0:206a:d63d:f8a8:ec3b) (Quit: Quit)
[10:08:19] *** Joins: z8z (~x@ac255238.ppp.asahi-net.or.jp)
[10:09:57] *** Quits: letto (~letto@86.120.81.105) (Quit: Konversation terminated!)
[10:11:02] *** Quits: rmd (~rm@ec2-52-202-15-104.compute-1.amazonaws.com) (Ping timeout: 252 seconds)
[10:12:23] *** Joins: letto (~letto@86.120.81.105)
[10:16:36] *** Quits: nshire_ (~nshire@47.146.41.156) (Quit: Leaving)
[10:16:55] *** Joins: nshire (~nshire@user/nshire)
[10:17:30] *** Joins: gentooclimax (~gentoocli@81-64-65-213.rev.numericable.fr)
[10:18:20] *** Joins: callq (~callq@2409:4062:2d8d:345f:4836:a5d4:7aa7:5f2b)
[10:22:56] *** Joins: Serpent7776 (~Serpent77@90-156-31-193.internetia.net.pl)
[10:23:30] *** Joins: rmd (~rm@ec2-52-202-15-104.compute-1.amazonaws.com)
[10:24:14] *** Quits: BluesBoy (~bboy@user/bluesboy) (Quit: leaving)
[10:25:49] *** gentooclimax is now known as climax
[10:26:59] *** Quits: dblsaiko (~saiko@crispy.dblsaiko.net) (Ping timeout: 252 seconds)
[10:29:15] *** Joins: PJBoy (~PJBoy@user/pjboy)
[10:32:57] *** Joins: c4017w_ (~c4017@209.52.68.8)
[10:33:11] *** climax is now known as gentooclimax
[10:36:43] *** Quits: c4017w__ (~c4017@209.52.68.8) (Ping timeout: 256 seconds)
[10:37:09] *** Joins: JohnMS_WORK (~kvirc@89-64-70-205.dynamic.chello.pl)
[10:46:57] *** Quits: Garbanzo__ (~Garbanzo@2602:304:6eac:dc10::49) (Ping timeout: 240 seconds)
[10:51:16] *** Quits: phoenix (phoenix@user/phoenix) (Ping timeout: 250 seconds)
[10:51:27] *** Quits: traxex (traxex@user/traxex) (Ping timeout: 256 seconds)
[10:52:18] *** gentooclimax is now known as climax
[10:52:39] *** Quits: p-i-_ (~Ohmu@183.89.35.200) (Remote host closed the connection)
[10:52:59] *** Quits: PJBoy (~PJBoy@user/pjboy) (Ping timeout: 250 seconds)
[10:53:16] *** Joins: p-i- (~Ohmu@183.89.35.200)
[10:53:24] *** climax is now known as gentooclimax
[10:53:57] *** Joins: BluesBoy (~bboy@user/bluesboy)
[10:55:11] *** Quits: n3rdy1 (~n3rdy1@2600:1700:4570:3480:1b88:50f:dae0:9293) (Ping timeout: 256 seconds)
[10:55:56] *** Joins: kenanmarasli (~kenanmara@user/kenanmarasli)
[10:59:06] *** Quits: LiaoTao (~LiaoTao@gateway/tor-sasl/liaotao) (Remote host closed the connection)
[11:01:33] *** Joins: LiaoTao (~LiaoTao@gateway/tor-sasl/liaotao)
[11:03:05] *** Joins: Tobbi (~Tobbi@2a02:8108:1240:48ec:116f:8251:b1b1:3325)
[11:03:29] *** Quits: ferdna (~ferdna@user/ferdna) (Quit: Leaving)
[11:23:02] *** Quits: Guest19 (~Guest19@2601:647:5280:2a50:ac8b:76d2:9030:fa62) (Quit: Client closed)
[11:23:38] *** Quits: lockywolf_ (~lockywolf@public.lockywolf.net) (Quit: ZNC 1.8.2 - https://znc.in)
[11:27:17] *** Joins: lockywolf_ (~lockywolf@public.lockywolf.net)
[11:28:02] *** Quits: _mikey (~mikey@user/mikey/x-4335048) (Quit: WeeChat 3.4)
[11:29:07] *** Joins: bobb_ (~bobb_@ipservice-092-211-155-129.092.211.pools.vodafone-ip.de)
[11:29:36] *** Joins: nojhan (uid443807@id-443807.lymington.irccloud.com)
[11:31:19] *** Quits: CarloWood (~LdK13@212-127-230-18.cable.dynamic.v4.ziggo.nl) (Ping timeout: 250 seconds)
[11:33:28] *** Joins: c4017w__ (~c4017@209.52.68.8)
[11:36:46] *** Quits: c4017w_ (~c4017@209.52.68.8) (Ping timeout: 250 seconds)
[11:37:09] <smallville7123> in https://gist.github.com/mgood7123/cdc84358bcac6560fe2fab6b10a37573 how do we know if we are still expanding, and when the expansion should be stopped?
[11:38:32] *** Quits: jaakkos (~jaakkos@88-113-244-153.elisa-laajakaista.fi) (Ping timeout: 240 seconds)
[11:39:45] <LordKalma> !rq
[11:39:46] <nolyc> LordKalma: <geordi> error: 'omg' is not a member of 'wow'; did you mean 'omg'?
[11:49:04] *** Quits: jsbach (~jsbach@2a01:c22:34a5:b300:e53a:917a:f160:58dc) (Remote host closed the connection)
[11:49:15] *** Joins: limubs (~limubs@cgn-89-0-5-65.nc.de)
[11:52:17] *** Joins: jsbach (~jsbach@2a01:c22:34a5:b300:4809:4522:8fe1:70b0)
[11:52:29] *** Joins: andreasbuhr (~quassel@p549dbbae.dip0.t-ipconnect.de)
[11:53:20] *** gentooclimax is now known as climax
[11:55:03] *** climax is now known as gentooclimax
[11:57:44] *** Quits: gentooclimax (~gentoocli@81-64-65-213.rev.numericable.fr) (Quit: Konversation terminated!)
[12:03:25] *** Quits: foul_owl (~kerry@217.114.38.61) (Ping timeout: 256 seconds)
[12:03:55] *** Joins: phoenix (phoenix@user/phoenix)
[12:07:11] *** Joins: Haohmaru (~Haohmaru@195.24.53.110)
[12:09:16] *** Joins: traxex (traxex@sdf.org)
[12:09:42] *** Quits: traxex (traxex@sdf.org) (Changing host)
[12:09:42] *** Joins: traxex (traxex@user/traxex)
[12:13:48] *** Joins: robod34 (~Username@79.113.227.62)
[12:15:26] *** Joins: interop_madness (~interop_m@user/interop-madness/x-0950004)
[12:17:46] *** Quits: robod34 (~Username@79.113.227.62) (Remote host closed the connection)
[12:18:15] *** Joins: robod34 (~Username@79.113.227.62)
[12:18:50] *** Quits: lh_ideapad (~lh_mouse@mingw-w64/developer/lhmouse) (Remote host closed the connection)
[12:19:07] *** Joins: ivii (~ivan@user/ivii)
[12:19:29] *** Joins: lh_ideapad (~lh_mouse@mingw-w64/developer/lhmouse)
[12:21:40] *** Joins: dblsaiko (~saiko@crispy.dblsaiko.net)
[12:23:29] *** Joins: lxsameer (~lxsameer@user/lxsameer)
[12:33:58] *** Joins: c4017w_ (~c4017@209.52.68.8)
[12:37:25] *** Quits: c4017w__ (~c4017@209.52.68.8) (Ping timeout: 256 seconds)
[12:37:42] *** Joins: zen_coder (~zen_coder@2a02:8109:a280:2d8d:fd90:3f9a:65c3:e850)
[12:39:56] *** Quits: teepee (~teepee@openscad/teepee) (Remote host closed the connection)
[12:41:52] *** Joins: teepee (~teepee@openscad/teepee)
[12:49:02] *** Quits: CalamityToo (~CalamityB@2603-8000-d907-cec8-4040-1a78-e1d5-b3df.res6.spectrum.com) (Read error: Connection reset by peer)
[12:52:57] *** Joins: blackout69 (~blackout6@net-109-117-245-237.cust.vodafonedsl.it)
[13:09:29] *** Quits: leduyquang753 (~leduyquan@user/leduyquang753) (Quit: Restarting for Windows updates.)
[13:09:51] *** Joins: cart_man (~rynot@host-78-144-125-214.as13285.net)
[13:11:04] *** Joins: m_tadeu (~quassel@bl7-240-233.dsl.telepac.pt)
[13:11:57] *** Quits: lh_ideapad (~lh_mouse@mingw-w64/developer/lhmouse) (Ping timeout: 240 seconds)
[13:21:12] *** Joins: spaceangel (~spaceange@ip-78-102-216-202.net.upcbroadband.cz)
[13:25:05] *** Joins: Simplar (~quassel@188.163.93.241)
[13:29:49] *** Joins: DSpider (~DSpider@82.79.237.67)
[13:31:07] *** Joins: lh_ideapad (~lh_mouse@mingw-w64/developer/lhmouse)
[13:34:25] *** Quits: hexingb (~hexingb@103.37.140.28) (Read error: Connection reset by peer)
[13:34:30] *** Joins: c4017w__ (~c4017@209.52.68.8)
[13:34:41] *** Joins: hexingb (~hexingb@103.37.140.28)
[13:38:03] *** Quits: c4017w_ (~c4017@209.52.68.8) (Ping timeout: 256 seconds)
[13:41:24] *** Joins: CarloWood (~LdK13@212-127-230-18.cable.dynamic.v4.ziggo.nl)
[13:42:14] *** Quits: npaperbot (~npaperbot@dodecahedron.m-ou.se) (Remote host closed the connection)
[13:42:22] *** Joins: npaperbot (~npaperbot@dodecahedron.m-ou.se)
[13:42:22] *** ChanServ sets mode: +v npaperbot
[13:47:03] *** Joins: leduyquang753 (~leduyquan@user/leduyquang753)
[13:59:52] *** Joins: seninha (~seninha@user/seninha)
[14:00:43] *** Quits: hexingb (~hexingb@103.37.140.28) (Ping timeout: 256 seconds)
[14:01:12] *** Joins: hexingb (~hexingb@2409:8900:2700:114f:746a:3df0:b1de:bb9b)
[14:01:36] *** Joins: Codaraxis (~Codaraxis@user/codaraxis)
[14:01:53] *** Quits: Codaraxis (~Codaraxis@user/codaraxis) (Client Quit)
[14:06:05] *** Joins: xkuru (~xkuru@user/xkuru)
[14:20:43] *** Quits: zen_coder (~zen_coder@2a02:8109:a280:2d8d:fd90:3f9a:65c3:e850) (Remote host closed the connection)
[14:21:06] *** Joins: zen_coder (~zen_coder@2a02:8109:a280:2d8d:60ef:8113:9157:1102)
[14:24:21] *** Joins: sigma_ (~sigma@164.215.217.26)
[14:27:37] *** Quits: callq (~callq@2409:4062:2d8d:345f:4836:a5d4:7aa7:5f2b) (Ping timeout: 240 seconds)
[14:27:56] <sigma_> hi, why:  auto itr = std::map.begin(), fill with incorrect key like set key 10 but i dont have key == 10 ? but std::map.rbegin() it is work correct and point to last data !?
[14:28:31] <AliceMeows> std::map doesn't retain its insertion order
[14:29:17] <sigma_> but is sorted with greater<int>!?
[14:29:30] <AliceMeows> its std::less I beleive
[14:29:33] <AliceMeows> believe*
[14:29:52] <AliceMeows> sigma_: https://en.cppreference.com/w/cpp/container/map
[14:30:18] <sigma_> my problem is begin() point to a data and doesnt exist
[14:30:38] <AliceMeows> Could you write a test case?
[14:30:45] *** Joins: stefanos82 (~stefanos8@128-228-117.netrun.cytanet.com.cy)
[14:32:18] <sigma_> no but i can explain, because my code is so complex
[14:33:12] *** Joins: voidiov (~voidiov@2a02:2f0e:6203:4c00:7800:f54c:e520:dd6f)
[14:34:58] *** Joins: c4017w_ (~c4017@209.52.68.8)
[14:35:37] *** Quits: hexingb (~hexingb@2409:8900:2700:114f:746a:3df0:b1de:bb9b) (Ping timeout: 240 seconds)
[14:35:56] <sigma_> less is work, because i use rbegin() but why begin() point to incorrect container?
[14:37:33] <AliceMeows> You either have UB or a typo
[14:38:10] <sigma_> what is ub
[14:38:13] *** Quits: c4017w__ (~c4017@209.52.68.8) (Ping timeout: 240 seconds)
[14:39:03] <LordKalma> is when you do stuff that compiles and runs but it's not expected by the standard/compiler and so can do anything unexpected
[14:39:53] <voidiov> I think it stands for Undefined Behaviour
[14:40:03] <AliceMeows> It does
[14:40:28] <AliceMeows> So write a testcase or debug it into the infinity until you figure out what went wrong
[14:49:11] <smallville7123> rip no one knows
[14:49:40] <AliceMeows> Knows what?
[14:49:43] <smallville7123> about macro preprocessing
[14:50:21] <AliceMeows> Trying to do what exactly?
[14:50:25] <Haohmaru> what are you brewing smallville7123?
[14:50:46] <smallville7123> in https://gist.github.com/mgood7123/cdc84358bcac6560fe2fab6b10a37573 how do we know if we are still expanding, and when the expansion should be stopped?
[14:51:55] <AliceMeows> Expanding where?
[14:52:23] *** Joins: foul_owl (~kerry@23.82.193.78)
[14:52:31] <smallville7123> in the loop
[14:53:19] <AliceMeows> Is that a question about the algorithm itself or actual macro preprocessing?
[14:53:43] <smallville7123> algorithm
[14:54:13] *** Quits: Guest8100 (~tinloaf@virt-no01.mrvm.net) (Ping timeout: 240 seconds)
[14:54:53] *** Quits: voidiov (~voidiov@2a02:2f0e:6203:4c00:7800:f54c:e520:dd6f) ()
[14:55:33] <AliceMeows> Based on the name it'll just consume it but no one can actually tell you without seeing the implementation itself
[14:56:05] <AliceMeows> My bad, it probably wont consume if the naming is truthful
[14:56:11] *** Quits: stefanos82 (~stefanos8@128-228-117.netrun.cytanet.com.cy) (Quit: Leaving)
[14:57:15] *** Joins: proller (~p@2a02:6b8:0:40c:e854:6579:4f06:5db0)
[15:04:45] *** Quits: cart_man (~rynot@host-78-144-125-214.as13285.net) (Ping timeout: 256 seconds)
[15:04:57] *** Quits: Simplar (~quassel@188.163.93.241) (Ping timeout: 240 seconds)
[15:05:00] *** Quits: JohnMS_WORK (~kvirc@89-64-70-205.dynamic.chello.pl) (Ping timeout: 256 seconds)
[15:06:27] *** Quits: foul_owl (~kerry@23.82.193.78) (Ping timeout: 256 seconds)
[15:16:29] *** Quits: kevr (~kevr@user/kevr) (Remote host closed the connection)
[15:16:49] *** Joins: kevr (~kevr@user/kevr)
[15:18:06] *** Joins: paul424 (~tom@ip-5-172-239-26.multi.internet.cyfrowypolsat.pl)
[15:23:44] *** Joins: cart_man (~rynot@host-78-144-125-214.as13285.net)
[15:26:37] *** Quits: ac_slater (~ac_slater@c-67-168-6-19.hsd1.wa.comcast.net) (Ping timeout: 240 seconds)
[15:28:24] *** Joins: ac_slater (~ac_slater@c-67-168-6-19.hsd1.wa.comcast.net)
[15:29:36] *** Joins: JohnMS_WORK (~kvirc@89-64-70-205.dynamic.chello.pl)
[15:31:58] <Haohmaru> !fact
[15:32:00] <nolyc> Haohmaru: Characters can be explicitly declared unsigned or signed.
[15:35:30] *** Joins: c4017w__ (~c4017@209.52.68.8)
[15:37:35] *** Joins: hexingb (~hexingb@103.37.140.28)
[15:37:51] *** Joins: Guest8100 (~tinloaf@2a03:94e0:163c:57e:bc51:5c66:86e7:1)
[15:39:05] *** Quits: c4017w_ (~c4017@209.52.68.8) (Ping timeout: 256 seconds)
[15:41:48] *** Quits: paul424 (~tom@ip-5-172-239-26.multi.internet.cyfrowypolsat.pl) (Quit: Leaving)
[15:50:59] *** Joins: markong (~kvirc@213.146.188.203)
[15:57:52] *** Joins: Simplar (~quassel@188.163.93.241)
[15:59:18] *** Joins: Leone (~Leo@108.175.224.215)
[16:02:01] *** Joins: skapata (~Skapata@2804:14c:87b0:9d2e:b004:f50:2de1:c5af)
[16:02:01] *** Quits: skapata (~Skapata@2804:14c:87b0:9d2e:b004:f50:2de1:c5af) (Changing host)
[16:02:01] *** Joins: skapata (~Skapata@user/skapata)
[16:07:00] *** Joins: pulse (~pulse@user/pulse)
[16:19:55] *** Quits: limubs (~limubs@cgn-89-0-5-65.nc.de) (Ping timeout: 250 seconds)
[16:21:11] *** Quits: hexingb (~hexingb@103.37.140.28) (Ping timeout: 252 seconds)
[16:32:10] *** Quits: AbleBacon (~AbleBacon@user/AbleBacon) (Read error: Connection reset by peer)
[16:32:51] *** Quits: blackout69 (~blackout6@net-109-117-245-237.cust.vodafonedsl.it) (Quit: Leaving.)
[16:34:58] *** Joins: hexingb (~hexingb@2409:8900:2b90:1bd4:905e:6d41:d018:3c58)
[16:35:58] *** Joins: c4017w_ (~c4017@209.52.68.8)
[16:36:16] *** Joins: whupdup (~whupdup@pool-173-76-128-81.bstnma.fios.verizon.net)
[16:36:49] *** Quits: lh_ideapad (~lh_mouse@mingw-w64/developer/lhmouse) (Remote host closed the connection)
[16:39:23] *** Quits: c4017w__ (~c4017@209.52.68.8) (Ping timeout: 256 seconds)
[16:41:08] *** Joins: varioust (~varioust@gateway/tor-sasl/varioust)
[16:50:16] *** Joins: gehn (~gehn@user/gehn)
[16:52:06] *** Quits: varioust (~varioust@gateway/tor-sasl/varioust) (Ping timeout: 276 seconds)
[17:01:04] <rpav> "can" doesn't really do it justice, but "must" isn't really correct without clarification
[17:04:35] *** Quits: hexingb (~hexingb@2409:8900:2b90:1bd4:905e:6d41:d018:3c58) (Read error: Connection reset by peer)
[17:05:24] *** Joins: hexingb (~hexingb@2409:8900:2b90:1bd4:905e:6d41:d018:3c58)
[17:07:21] *** Joins: spaceangel_ (~spaceange@ip-78-102-216-202.net.upcbroadband.cz)
[17:09:32] *** Quits: hexingb (~hexingb@2409:8900:2b90:1bd4:905e:6d41:d018:3c58) (Read error: Connection reset by peer)
[17:11:22] *** Quits: spaceangel (~spaceange@ip-78-102-216-202.net.upcbroadband.cz) (Ping timeout: 256 seconds)
[17:14:27] *** Joins: hexingb (~hexingb@2409:8900:2b90:1bd4:905e:6d41:d018:3c58)
[17:16:35] *** Joins: joaofukuda (~joaofukuk@2804:431:c7f4:345c:9441:82c4:a226:af6b)
[17:18:27] <smallville7123> AliceMeows: how so?
[17:19:53] <AliceMeows> smallville7123: the name suggests it will only consume if there is a match
[17:20:05] <smallville7123> yes
[17:20:27] <smallville7123> and if there are no matches then consume_one_token(tk) is called
[17:21:01] *** Quits: hexingb (~hexingb@2409:8900:2b90:1bd4:905e:6d41:d018:3c58) (Read error: Connection reset by peer)
[17:21:02] <AliceMeows> Yes
[17:21:32] <AliceMeows> The syntax is absolutely terrible to read
[17:21:40] *** Joins: hexingb (~hexingb@2409:8900:2b90:1bd4:905e:6d41:d018:3c58)
[17:21:41] <smallville7123> ik
[17:22:19] *** Quits: whupdup (~whupdup@pool-173-76-128-81.bstnma.fios.verizon.net) (Remote host closed the connection)
[17:24:17] *** Joins: whupdup (~whupdup@pool-173-76-128-81.bstnma.fios.verizon.net)
[17:24:22] *** Joins: lh_ideapad (~lh_mouse@mingw-w64/developer/lhmouse)
[17:25:45] <smallville7123> what would be a better way?
[17:26:46] <AliceMeows> Perhaps stop this new line nonsense
[17:26:48] *** Quits: lh_ideapad (~lh_mouse@mingw-w64/developer/lhmouse) (Remote host closed the connection)
[17:28:06] *** Joins: lh_ideapad (~lh_mouse@mingw-w64/developer/lhmouse)
[17:29:00] <smallville7123> is this better https://gist.github.com/mgood7123/cdc84358bcac6560fe2fab6b10a37573
[17:30:19] <AliceMeows> That is much better
[17:30:22] *** Quits: lh_ideapad (~lh_mouse@mingw-w64/developer/lhmouse) (Remote host closed the connection)
[17:30:34] *** Quits: bobb_ (~bobb_@ipservice-092-211-155-129.092.211.pools.vodafone-ip.de) (Quit: Client closed)
[17:31:08] *** Joins: lh_ideapad (~lh_mouse@mingw-w64/developer/lhmouse)
[17:36:29] *** Joins: c4017w__ (~c4017@209.52.68.8)
[17:37:01] *** Quits: lh_ideapad (~lh_mouse@mingw-w64/developer/lhmouse) (Remote host closed the connection)
[17:39:37] *** Quits: c4017w_ (~c4017@209.52.68.8) (Ping timeout: 240 seconds)
[17:40:34] *** Joins: p-i-_ (~Ohmu@mx-ll-183.89.35-200.dynamic.3bb.co.th)
[17:42:14] *** Quits: npaperbot (~npaperbot@dodecahedron.m-ou.se) (Remote host closed the connection)
[17:42:16] *** Joins: lh_ideapad (~lh_mouse@mingw-w64/developer/lhmouse)
[17:42:22] *** Joins: npaperbot (~npaperbot@dodecahedron.m-ou.se)
[17:42:22] *** ChanServ sets mode: +v npaperbot
[17:42:33] *** Quits: lh_ideapad (~lh_mouse@mingw-w64/developer/lhmouse) (Remote host closed the connection)
[17:42:43] *** Quits: hexingb (~hexingb@2409:8900:2b90:1bd4:905e:6d41:d018:3c58) (Read error: Connection reset by peer)
[17:43:03] *** Joins: hexingb (~hexingb@2409:8900:2b90:1bd4:905e:6d41:d018:3c58)
[17:43:38] *** Joins: kraa (~kraa@107-190-7-216.cpe.teksavvy.com)
[17:43:57] *** Quits: p-i- (~Ohmu@183.89.35.200) (Ping timeout: 240 seconds)
[17:46:23] *** Joins: Roughy (~mdaw45ns@user/roughy)
[17:49:48] *** Quits: hexingb (~hexingb@2409:8900:2b90:1bd4:905e:6d41:d018:3c58) (Read error: Connection reset by peer)
[17:50:12] *** Joins: hexingb (~hexingb@2409:8900:2b90:1bd4:905e:6d41:d018:3c58)
[17:59:32] *** Joins: varioust (~varioust@gateway/tor-sasl/varioust)
[18:06:45] *** Emet-Selch is now known as Azem
[18:06:45] *** Quits: AliceMeows (~AliceMeow@user/alicemeows) (Read error: Connection reset by peer)
[18:24:28] *** Quits: ville (~ville@user/ville) (Quit: systmed)
[18:24:34] *** Quits: leduyquang753 (~leduyquan@user/leduyquang753) (Quit: Gotta go, see you guys later.)
[18:26:29] *** Joins: AliceMeows (~AliceMeow@user/alicemeows)
[18:34:50] *** Quits: JohnMS_WORK (~kvirc@89-64-70-205.dynamic.chello.pl) (Ping timeout: 252 seconds)
[18:36:59] *** Joins: c4017w_ (~c4017@209.52.68.8)
[18:38:31] *** Quits: smallville7123 (~smallvill@cpe-172-193-72-46.qld.foxtel.net.au) ()
[18:39:38] *** Joins: n3rdy1 (~n3rdy1@2600:1700:4570:3480::41)
[18:40:32] *** Joins: CalamityBlue (~CalamityB@2603-8000-d907-cec8-28af-d421-0a51-ca91.res6.spectrum.com)
[18:40:33] *** Quits: c4017w__ (~c4017@209.52.68.8) (Ping timeout: 250 seconds)
[18:45:07] *** Quits: Simplar (~quassel@188.163.93.241) (Quit: https://quassel-irc.org - Chat comfortably. Anywhere.)
[18:51:14] *** Joins: k8yun (~k8yun@user/k8yun)
[18:53:53] <Alipha> !give sigma_ testcase
[18:53:54] <nolyc> sigma_: A testcase is the _least_ amount of code that replicates your problem, paste it to https://wandbox.org/ then: 1) click run 2) click share 3) click url and 4) paste the url for us. You _must_ use that website. Do _not_ use a different website. Do _not_ paste code to the channel. See the testcase checklist at http://eel.is/iso-c++/testcase/
[18:54:00] <Alipha> !ub
[18:54:01] <nolyc> http://eel.is/c++draft/defns.undefined
[18:59:41] *** Joins: ville (~ville@user/ville)
[19:02:39] *** Quits: arch-angel (~arch-ange@user/arch-angel) (Quit: Leaving)
[19:05:06] <rpav> #undef behavior
[19:05:32] *** Joins: jokoon (~eio@2a01:e0a:542:e160:d0b4:19d2:35ef:8632)
[19:05:47] *** Joins: ferdna (~ferdna@user/ferdna)
[19:06:07] *** Quits: shailangsa (~shailangs@host86-185-98-37.range86-185.btcentralplus.com) (Remote host closed the connection)
[19:09:32] <nightstrike> Why only wand box?
[19:10:10] <rpav> mostly it runs code and has reasonable options, and the comment has been around longer than other things have had similar
[19:10:33] <rpav> wandbox also got a bit less crappy again i think and is still sadly easier to multi-file than godbolt
[19:10:38] <LordKalma> nightstrike, godbolt/CE is perfectly fine too :) I prefer it even
[19:10:46] <LordKalma> but it's not as friendly for multiple-file projects
[19:11:01] <rpav> godbolt is preferable but it's a bit of a headache to make IDE mode work
[19:11:17] <rpav> they shoudl have a "reset to IDE mode" so it just sets the things up
[19:11:31] <LordKalma> IDE more is weird because it still leaves the filename in the end of the compole command
[19:11:43] <LordKalma> but it at least suports just writing a cmake file
[19:11:49] *** Joins: TheHermann (~TheHerman@gateway/tor-sasl/thehermann)
[19:12:16] <Alipha> nightstrike: any site that runs code is fine
[19:12:39] <LordKalma> rpav, honestly, since every time you open a godbolt page it changes your settings I have a bookmarked URL with my settings ready to go
[19:12:44] <LordKalma> others have similar, afaik
[19:12:57] *** Quits: p-i-_ (~Ohmu@mx-ll-183.89.35-200.dynamic.3bb.co.th) (Read error: Connection reset by peer)
[19:12:59] <Alipha> !paste
[19:13:01] <nolyc> Paste your test case to https://wandbox.org/ or https://rextester.com/ or http://coliru.stacked-crooked.com/ or another pastebin that can compile code. Do _not_ paste to the channel. See the testcase checklist at http://eel.is/c++/testcase
[19:13:32] *** Joins: p-i- (~Ohmu@183.89.35.200)
[19:13:33] <rpav> LordKalma: oooh right
[19:13:37] <LordKalma> also godbolt in the beginning didn't store your code, and just encoded it in the URL
[19:13:44] <rpav> i keep forgetting that's an excellent idea
[19:13:45] <LordKalma> which made for URLs worse than pasting the code here
[19:13:45] <LordKalma> hahah
[19:13:49] <nightstrike> There was one channel, maybe this one, that had a bot that would give you a demerit of you used an alternate paste service
[19:13:58] <LordKalma> rpav, this is mine https://godbolt.org/z/ros9voG1T
[19:14:09] <LordKalma> nightstrike, #python repastes you iirc
[19:14:16] <LordKalma> at least it did in freenode
[19:14:39] <nightstrike> It was either this or #C++ , or I just have a bad memory :)
[19:14:40] <rpav> LordKalma: cool .. i don't mind configuring the single file mode but i'll build a small ide-mode version
[19:14:47] <rpav> although doesn't it expire snippets at some point
[19:15:07] <LordKalma> nightstrike, we do have
[19:15:11] <LordKalma> !give nightstrike testcase
[19:15:13] <nolyc> nightstrike: A testcase is the _least_ amount of code that replicates your problem, paste it to https://wandbox.org/ then: 1) click run 2) click share 3) click url and 4) paste the url for us. You _must_ use that website. Do _not_ use a different website. Do _not_ paste code to the channel. See the testcase checklist at http://eel.is/iso-c++/testcase/
[19:15:39] <nightstrike> That's the comment that started this conversation, LordKalma  ;)
[19:15:44] <LordKalma> ah ok
[19:15:47] <rpav> actually do you even need cmake
[19:15:53] <LordKalma> rpav, no
[19:16:00] <LordKalma> cmake in CEs IDE mode is optional
[19:16:17] <rpav> no no i mean _in_ IDE mode, can you not manually specify files or simply include a .h anyway
[19:16:23] <LordKalma> *but* if you use the regular compilation command, remember it still adds the first filename to the end of the compilation command
[19:16:44] <LordKalma> so remember it's "g++ [whatever you add] file1.cpp"
[19:16:45] <nightstrike> Paste bin test:  https://www.irccloud.com/pastebin/dKHrVbyd/
[19:17:06] <nightstrike> Hm... guess it wasn't here :)
[19:17:12] *** Parts: AliceMeows (~AliceMeow@user/alicemeows) ()
[19:17:15] <sigma_> std::map in method and their object related to other object and other lib and stl , if i want paste code i should do that for total program or rewrite program but it is not easy becuase need to reproduce bug
[19:17:15] <LordKalma> rpav, also, many people don't know this, but in CE you can #include a file url, which is pretty great
[19:17:24] <LordKalma> you can #include stuff from raw.github, which is pretty nice
[19:17:29] <rpav> LordKalma: yeah that i've seen, pretty neat
[19:18:46] <rpav> ok so if i add a tree and a test.h, it will not find the #include without cmake
[19:19:07] <LordKalma>  -I. ?
[19:19:45] <sigma_> rpav: cmake just help you in build cross build , you can do it your self
[19:20:02] <LordKalma> sigma_, we're talking about Compiler Explorer's IDE mode
[19:20:10] <LordKalma> and it's cmake support
[19:20:18] <LordKalma> hammered in because the IDE mode sucks otherwise
[19:20:56] <sigma_> LordKalma: wich IDE?
[19:21:31] *** Quits: lh_mouse (~lh_mouse@mingw-w64/developer/lhmouse) (Read error: Connection reset by peer)
[19:23:05] <sigma_> LordKalma:  oh sorry , this online compiler :)
[19:26:17] *** Quits: n3rdy1 (~n3rdy1@2600:1700:4570:3480::41) (Ping timeout: 240 seconds)
[19:34:44] *** Quits: lxsameer (~lxsameer@user/lxsameer) (Ping timeout: 256 seconds)
[19:34:47] *** Joins: bobb_ (~bobb_@ipservice-092-211-155-129.092.211.pools.vodafone-ip.de)
[19:36:48] *** Joins: lxsameer (lxsameer@user/lxsameer)
[19:37:31] *** Joins: c4017w__ (~c4017@209.52.68.8)
[19:39:27] *** Joins: n3rdy1 (~n3rdy1@2600:1700:4570:3480:1b88:50f:dae0:9293)
[19:40:37] *** Quits: c4017w_ (~c4017@209.52.68.8) (Ping timeout: 240 seconds)
[19:43:03] *** Quits: varioust (~varioust@gateway/tor-sasl/varioust) (Ping timeout: 276 seconds)
[19:46:08] *** Joins: varioust (~varioust@gateway/tor-sasl/varioust)
[19:49:36] <Alipha> nightstrike: #c++ on freenode had the repaste bot
[19:49:50] <Alipha> ##c++ rather
[19:50:16] <nightstrike> Ah OK
[19:51:30] <rpav> still not sure how to make ide+cmake mode show disassembly for one file
[19:52:13] <Alipha> sigma_: you paste as little code as possible to reproduce the issue you're seeing. This means grabbing the code that you think is causing the issue, mocking out any data or dependencies it needs, and removing any unrelated code.
[19:54:30] <Alipha> If it doesn't produce the same issue that your actual code produces, it's not a testcase
[19:55:31] <rpav> but you secretly won, because you now have code that does what you want and works, vs your other code, and it's a matter of isolating the differences
[19:56:14] *** Joins: great_taste (~great_tas@user/great-taste/x-5798414)
[19:56:42] <Alipha> If you want to attempt to give us all your code, then you *may* get someone to look at it. But don't be surprised or mad if no one does
[19:58:02] <bobb_> sigma_ give a move on, show teh testcase
[19:58:27] *** Quits: skapata (~Skapata@user/skapata) (Remote host closed the connection)
[20:00:16] *** Joins: luizfrds (~Luiz@152.250.243.147)
[20:01:03] *** Quits: biberu (~biberu@user/biberu) (Read error: Connection reset by peer)
[20:03:15] *** Joins: Garbanzo__ (~Garbanzo@2602:304:6eac:dc10::49)
[20:03:55] <Alipha> I'll spend 30 seconds to look at a github repo or such. If it's something super dumb, that may be enough. Not longer than that though. But a testcase I'll potentially look at much longer because I'll feel defeated if I can't figure it out ;-)
[20:05:35] <LordKalma> "give a programmer 10 lines and they'll find 10 problems. Give a programmer 500 lines and it "looks good""
[20:15:10] <rpav> Law of Poor Formatting: give a programmer a poorly formatted program and they will tell you to reformat your code and refuse to address anything else until you do; Corollary: doing so will fix your problem
[20:16:15] <kalven> which is why autoformatting should be mandatory
[20:17:49] <bobb_> kalven true
[20:22:09] *** Quits: Serpent7776 (~Serpent77@90-156-31-193.internetia.net.pl) (Read error: Connection reset by peer)
[20:22:21] *** Joins: Serpent7776 (~Serpent77@90-156-31-193.internetia.net.pl)
[20:30:36] *** Joins: biberu (~biberu@user/biberu)
[20:31:47] *** Joins: horribleprogram (~user@user/horribleprogram)
[20:31:49] <horribleprogram> sup
[20:32:05] *** Joins: AbleBacon (~AbleBacon@user/AbleBacon)
[20:32:19] <horribleprogram> who the hell is codecvt deprecated
[20:32:47] <horribleprogram> and how would I go about such encoding transformations when reading from some file or something
[20:33:06] <cart_man> What is this error trying to tell me about static glibc? -> https://pastebin.com/AAjJ29dD
[20:33:19] <cart_man> What is actually wrong? Do I need to compile pcap statically as well?
[20:35:36] <rpav> horribleprogram: because codecvt was terrible/useless
[20:35:58] <rpav> you should use a real library for character encodings
[20:36:05] <TinoDidriksen> Depending on what encoding transformations, then either utfcpp or ICU.
[20:36:39] <rpav> whoa what's utfcpp .. https://github.com/nemtrif/utfcpp ? interesting
[20:37:14] <rpav> no normalization?
[20:37:34] <cart_man> Anybdy :*(
[20:37:59] *** Joins: c4017w_ (~c4017@209.52.68.8)
[20:38:33] <rpav> damn it's surprising this doesn't do normalization .. would be the perfect little lib a la utf8proc
[20:38:58] *** Joins: callq (~callq@2409:4062:2296:71d:edc0:24f8:78e1:290e)
[20:39:22] <rpav> cart_man: probably what it says
[20:39:31] <rpav> cart_man: the real errors are other missing symbols
[20:39:47] <rpav> probably don't link glibc static in any case
[20:41:36] *** Quits: c4017w__ (~c4017@209.52.68.8) (Ping timeout: 256 seconds)
[20:41:46] *** Quits: Haohmaru (~Haohmaru@195.24.53.110) ()
[20:43:46] *** Quits: interop_madness (~interop_m@user/interop-madness/x-0950004) (Read error: Connection reset by peer)
[20:44:13] <cart_man> rpav: So its really that static building is really a pipe dream?
[20:45:03] <rpav> why would you want to
[20:45:28] <cart_man> containers horrors really
[20:45:49] *** Quits: zen_coder (~zen_coder@2a02:8109:a280:2d8d:60ef:8113:9157:1102) (Quit: Konversation terminated!)
[20:45:53] <rpav> and i think static linking to glibc still requires your code be GPL doesn't it
[20:45:57] <rpav> cart_man: ?
[20:46:17] <cart_man> like I need an executable to be static so I dont need deps really
[20:46:24] <horribleprogram> rpav: such as?
[20:46:47] <horribleprogram> these are "linker errors"
[20:47:06] <rpav> horribleprogram: what TinoDidriksen said above or utf8proc since apparently the one doesn't do normalization ;/
[20:47:24] <horribleprogram> no I want a stdlib solution
[20:47:30] <rpav> cart_man: there are probably better options like AppImage for packaging deps
[20:47:43] <horribleprogram> TinoDidriksen: standard lib solution
[20:48:05] <rpav> std is terrible; why else would they have called it that (;
[20:48:07] *** Joins: jokoon2 (~eio@88.125.11.133)
[20:48:25] <horribleprogram> I was reading about it yesterday
[20:48:36] <rpav> vector being pretty good is just proof .. a good disease needs a good vector
[20:48:36] <horribleprogram> like the guy who wrote iostream
[20:48:47] <TinoDidriksen> Normalization is a big table and lots of logic, sadly. utfcpp is very basic.
[20:49:03] <horribleprogram> what is normalization
[20:49:16] <TinoDidriksen> Unicode NFC, NFD, etc.
[20:49:20] <rpav> utf8proc seems to do it fairly minimally
[20:49:28] <TinoDidriksen> They're destructive transformations of the data.
[20:49:49] <rpav> the _real_ "big data" for unicode stuff is a complete character name table .. which i think is what makes ICS so big
[20:50:07] <horribleprogram> UTF-8 can't represent every Unicode character?
[20:50:10] <TinoDidriksen> ICU is huge because it bundles the CLDR.
[20:50:13] <LordKalma> it can
[20:50:16] <rpav> horribleprogram: it can of course
[20:50:18] <horribleprogram> so why is it destructive
[20:50:32] <rpav> normalizations can lose data i think
[20:50:36] <TinoDidriksen> Unicode normalization changes some characters to other ones.
[20:50:39] <rpav> that doesn't make them less useful/necessary
[20:50:41] <LordKalma> what's a normalization?
[20:50:53] <horribleprogram> TinoDidriksen: are u talking about the Unicode scalar pair code points?
[20:50:59] <cart_man> rpav: what would I use other than glibc to buld static stuff though?
[20:51:03] <rpav> LordKalma: like order of compositional characters or using a codepoint instead of a composition etc
[20:51:06] <cart_man> Yea I am a fan of AppImages but cant use it here
[20:51:07] <horribleprogram> he means the flags
[20:51:20] *** Quits: jokoon (~eio@2a01:e0a:542:e160:d0b4:19d2:35ef:8632) (Ping timeout: 268 seconds)
[20:51:44] <horribleprogram> like flags
[20:51:46] <horribleprogram> National flags
[20:52:01] <rpav> LordKalma: like to actually sort unicode, you could end up with wrong presentation sorting if you just compare bytes of differently-normalized text, e.g. `compose-diacritic-E` vs a single-codepoint diacritic E or whatever
[20:52:04] <TinoDidriksen> Unicode normalization is destructive. E.g. both Å (U+00C5) and Å (U+212B) will normalize to Å (U+0041 U+030A).
[20:52:23] <horribleprogram> yeah cuz of the shitty third party libs u use
[20:52:46] <TinoDidriksen> That has nothing to do with library. That's a Unicode Standard requirement.
[20:52:46] <LordKalma> wtf multiple unicode entries for the same symbol?
[20:52:54] <rpav> LordKalma: that's language
[20:53:17] <rpav> not only multiple codepoints, multiple functionally/semantically identical ways to reach certain graphemes
[20:53:22] <horribleprogram> 🏴‍☠️
[20:53:26] <horribleprogram> what do u guys see
[20:53:35] <LordKalma> pirate flag
[20:53:38] <TinoDidriksen> Unicode normalizations are defined in the Unicode standard. They're defined as destructive, to reach something one can reliably compare against.
[20:53:39] <LordKalma> I'm surprised my font has it
[20:53:43] <horribleprogram> kk I don't even
[20:53:45] <horribleprogram> lol
[20:54:02] <horribleprogram> I'm using ERC with fira-code
[20:54:05] <LordKalma> hexchat even with alternate fonts set doesn't show half of simple emojis
[20:54:13] <horribleprogram> lolol
[20:54:17] <rpav> i see flag, skull-and-crossbones, variation-selector-16 ;)
[20:54:35] <horribleprogram> no there's whitespace before it lol
[20:54:52] <rpav> oh well i'm using a dark theme so it doesn't show up
[20:54:55] <LordKalma> oh look, WTF: https://i.gyazo.com/f4302a732a20cf5082cb95933bb85b84.mp4
[20:54:56] <horribleprogram> ahh lol
[20:54:57] * rpav runs
[20:55:11] <horribleprogram> LordKalma: urs is better than mine
[20:55:28] <horribleprogram> but yeah that's the problem with white backgrounds
[20:55:59] <horribleprogram> wait... i meant
[20:56:07] * horribleprogram runs
[20:56:31] <horribleprogram> the problem here is the font and background being similar in color
[20:56:52] <horribleprogram> but this is a layer on top of the "normalization" theory that TinoDidriksen made up
[20:57:31] <TinoDidriksen> Theory? It's in the Standard.
[20:57:34] <rpav> ^
[20:58:04] <horribleprogram> https://www.unicode.org/reports/tr15/ ?
[20:58:16] <TinoDidriksen> Yup
[20:58:18] <horribleprogram> kk
[20:58:21] <LordKalma> con vscode: https://i.gyazo.com/593bf9424dac1d1e1734d0e9db1b8d18.png
[20:58:55] <horribleprogram> the "whitespace" there is a literal "space" character I used
[20:59:38] <horribleprogram> LordKalma: what extension is that in vscode?
[20:59:50] <horribleprogram> erc sucks
[20:59:53] <LordKalma> what extensions doing what?
[21:00:01] <horribleprogram> u said the "con vscode"
[21:00:05] <horribleprogram> ur using irc in vscode?
[21:00:09] <LordKalma> with vscode* sorry
[21:00:11] <horribleprogram> ahh
[21:00:17] <LordKalma> just a copy pasdte
[21:00:24] <horribleprogram> yeah i see
[21:00:31] <LordKalma> vscode does show invisible unicode chars now
[21:02:19] <LordKalma> https://i.gyazo.com/8693068b9decdbbb69515c7e80e8ac76.png
[21:02:20] <LordKalma> like this
[21:03:11] <LordKalma> takes 3 backspaces to delete it: https://i.gyazo.com/f016c923e61541f873013bddc47a99f0.mp4
[21:03:57] *** Joins: wootehfoot (~wootehfoo@user/wootehfoot)
[21:04:01] *** Quits: ss4 (~wootehfoo@user/wootehfoot) (Ping timeout: 256 seconds)
[21:05:11] <horribleprogram> the problem with this experimentation is that u don't know exactly what "backspace" does
[21:05:43] <horribleprogram> i call it the C++ compiler problem
[21:08:35] <horribleprogram> things that do different things based on the thing they are operating on... so saying "backspace takes 3 invocations" to delete such a character could mean infinite things... but common sense means the first backspace deletes the 4-byte UTF-8 character, then the remaining code units form 2 code points... one being a graphical character, one not representable (one of the code points is the unicode code point prefix thingy)
[21:09:14] <horribleprogram> hence why I always look at text as bytes
[21:12:08] *** Quits: proller (~p@2a02:6b8:0:40c:e854:6579:4f06:5db0) (Ping timeout: 252 seconds)
[21:13:12] *** Quits: horribleprogram (~user@user/horribleprogram) (Remote host closed the connection)
[21:14:15] *** Joins: horribleprogram (~user@user/horribleprogram)
[21:15:31] <horribleprogram> hexl-mode is sick tho actually
[21:15:36] <horribleprogram> I just asked in Emacs
[21:17:40] <LordKalma> I know vscode might do something "smart"
[21:17:42] <LordKalma> just commenting
[21:22:54] <sigma_> i can't reproduce bug but this is my example: https://wandbox.org/permlink/0G7jU5lscVREWwtn#wandbox-resultwindow-code-body-2 , i can send pic from debugger ?
[21:24:40] <sigma_> problem in passing wrong key to set_data_on_screen()
[21:30:05] *** Quits: lxsameer (lxsameer@user/lxsameer) (Ping timeout: 256 seconds)
[21:30:25] <horribleprogram> ur not tho
[21:30:36] <horribleprogram> OrderedPiece[KEY]
[21:32:06] *** Joins: lxsameer (~lxsameer@user/lxsameer)
[21:35:19] <horribleprogram> are u saying object2 has no default ctor?
[21:37:27] *** Quits: bobb_ (~bobb_@ipservice-092-211-155-129.092.211.pools.vodafone-ip.de) (Ping timeout: 256 seconds)
[21:38:30] *** Joins: c4017w__ (~c4017@209.52.68.8)
[21:39:51] *** Joins: ___nick___ (~quassel@cpc68286-cdif17-2-0-cust533.5-1.cable.virginm.net)
[21:41:48] <horribleprogram> sigma_: obj.OrderedPiece is a std::map<int, *>... point->first evaluates to 500 cuz of ur std::greater<int>
[21:42:15] *** Quits: npaperbot (~npaperbot@dodecahedron.m-ou.se) (Remote host closed the connection)
[21:42:19] *** Quits: c4017w_ (~c4017@209.52.68.8) (Ping timeout: 256 seconds)
[21:42:22] *** Joins: npaperbot (~npaperbot@dodecahedron.m-ou.se)
[21:42:22] *** ChanServ sets mode: +v npaperbot
[21:42:40] <horribleprogram> ur dereferencing a pointer to an object2 and setting the objects public data member, with OrderedPiece[KEY]->x = 20;
[21:43:09] <horribleprogram> well ur subscripting a map that evaluates to a "pointer" before u dereference and member access
[21:50:48] *** Joins: paul424 (~tom@ip-5-172-235-23.multi.internet.cyfrowypolsat.pl)
[21:51:23] *** Quits: sprout_ (~quassel@2a02:a467:ccd6:1:a85e:5217:60c2:bcc7) (Ping timeout: 256 seconds)
[21:52:03] <sigma_> horrible program: i don't know why but begin() some times point to invalid memory like pass KEY = 4 and doesnt exist. but i sloved problem, i just process map reversit and until now i didn't get error yet, so why?
[21:54:10] *** Quits: vdamewood (~vdamewood@fedora/vdamewood) (Quit: My MacBook Pro has gone to sleep. ZZZzzz…)
[21:54:22] *** Joins: magla (~gelignite@55d46452.access.ecotel.net)
[21:59:04] *** Joins: sprout (~quassel@2a02:a467:ccd6:1:511a:5eb2:c96:106b)
[22:01:12] *** Quits: c4017w__ (~c4017@209.52.68.8) (Quit: Leaving)
[22:01:14] *** Joins: Juliu (~Juliu@2a02:810b:c640:3ec0:206a:d63d:f8a8:ec3b)
[22:02:06] *** Quits: seninha (~seninha@user/seninha) (Quit: Leaving)
[22:05:47] *** Joins: skapata (~Skapata@2804:14c:87b0:9d2e:19fe:5684:c662:9574)
[22:05:47] *** Quits: skapata (~Skapata@2804:14c:87b0:9d2e:19fe:5684:c662:9574) (Changing host)
[22:05:47] *** Joins: skapata (~Skapata@user/skapata)
[22:06:19] *** Joins: proller (~p@2a02:6b8:b081:17::1:38)
[22:07:16] <horribleprogram> sigma_: hey
[22:09:37] *** Quits: sprout (~quassel@2a02:a467:ccd6:1:511a:5eb2:c96:106b) (Ping timeout: 240 seconds)
[22:10:49] <horribleprogram> sigma_: i have no clue wth ur talking about... with all due respect
[22:11:05] *** Joins: c4017w (~c4017@209.52.68.8)
[22:11:13] <horribleprogram> sigma_: iterators returned from begin, end, rbegin, etc.. are not "snapshots" per say
[22:12:33] <horribleprogram> so std::vector<int> v {1, 2, 3}; for (auto p = v.begin(); p != v.end(); ++p) v.push_back(10); will run infinitely only cuz the end() keeps "evaluating"
[22:13:03] <horribleprogram> but something like auto end = v.end(); for (auto p = v.begin(); p != end; ++p) is "snapshotted" u feel me?
[22:14:37] *** Quits: markong (~kvirc@213.146.188.203) (Ping timeout: 256 seconds)
[22:22:23] *** Joins: sprout (~quassel@2a02:a467:ccd6:1:511a:5eb2:c96:106b)
[22:23:37] *** Quits: ___nick___ (~quassel@cpc68286-cdif17-2-0-cust533.5-1.cable.virginm.net) (Quit: https://quassel-irc.org - Chat comfortably. Anywhere.)
[22:25:10] *** Joins: ___nick___ (~quassel@cpc68286-cdif17-2-0-cust533.5-1.cable.virginm.net)
[22:25:23] *** Joins: Simplar (~Simplar@188.163.93.241)
[22:26:23] <Alipha> cart_man: https://github.com/rpav/cpp-pipedream/ is a pipe dream ;-)
[22:26:35] <rpav> ;)
[22:34:14] <Alipha> sigma_: i'm guessing you're accidentally copying/moving object1 somewhere in your code, which means your pointers in your map are going to be invalid. you should `=delete;` your copy constructor and copy operator= (or provide appropriate implementations)
[22:41:39] <Alipha> sigma_: e.g., https://godbolt.org/z/YjEvTxcqT ... you may also want to add `-Wall -Wextra -pedantic -fsanitize=address,leak,undefined -D_GLIBCXX_DEBUG` if you aren't already
[22:42:33] <yolo> -D_GLIBCXX_DEBUG_PEDANTIC too?
[22:43:25] <Alipha> i don't know what the difference is
[22:43:38] <Alipha> but it sounds like a good idea! ;-)
[22:47:15] *** Quits: great_taste (~great_tas@user/great-taste/x-5798414) (Quit: Client closed)
[22:47:39] <hnOsmium0001[m]> https://godbolt.org/z/P4j3jvYzh
[22:48:01] <hnOsmium0001[m]> why does it do that? i.e. using perfect forwarding in the y-combinator generates more assembly
[22:49:03] <hnOsmium0001[m]> it seems like if I remove the effect() call, the compiler is able to optimize the rec() function to its result when I'm performing a copy, but still does the calculaation when using perfect forwarding https://godbolt.org/z/bab4znx68
[22:54:05] *** Joins: Guest19 (~Guest19@2601:647:5280:2a50:21ef:802f:daff:2aa5)
[22:54:48] <hnOsmium0001[m]> clang seems to generate the same assembly for both cases, even with the effect() in place
[23:05:12] <Alipha> recursion is hard to optimize
[23:10:18] *** Quits: sord937 (~sord937@gateway/tor-sasl/sord937) (Quit: sord937)
[23:10:26] *** Joins: Garbanzo_ (~Garbanzo@2602:304:6eac:dc10::49)
[23:11:47] *** Joins: c4017w_ (~c4017@209.52.68.8)
[23:11:57] *** Quits: Garbanzo__ (~Garbanzo@2602:304:6eac:dc10::49) (Ping timeout: 240 seconds)
[23:14:37] *** Quits: Garbanzo_ (~Garbanzo@2602:304:6eac:dc10::49) (Ping timeout: 240 seconds)
[23:14:57] *** Quits: c4017w (~c4017@209.52.68.8) (Ping timeout: 240 seconds)
[23:20:01] *** Quits: sigma_ (~sigma@164.215.217.26) (Ping timeout: 256 seconds)
[23:26:00] *** Quits: varioust (~varioust@gateway/tor-sasl/varioust) (Ping timeout: 276 seconds)
[23:27:43] *** Joins: varioust (~varioust@gateway/tor-sasl/varioust)
[23:30:48] *** Joins: great_taste (~great_tas@user/great-taste/x-5798414)
[23:31:26] *** Joins: vdamewood (~vdamewood@fedora/vdamewood)
[23:34:32] *** Quits: paul424 (~tom@ip-5-172-235-23.multi.internet.cyfrowypolsat.pl) (Remote host closed the connection)
[23:38:35] *** Quits: ferdna (~ferdna@user/ferdna) (Quit: Leaving)
[23:39:45] *** Quits: k8yun (~k8yun@user/k8yun) (Quit: Leaving)
[23:40:05] *** Joins: vinleod (~vdamewood@fedora/vdamewood)
[23:40:29] *** Joins: KombuchaKip (~kip@192.252.230.5)
[23:41:21] *** Quits: mackal (~mackal@pool-96-237-249-63.bstnma.fios.verizon.net) (Quit: BE VIGILANT.)
[23:42:10] *** Quits: vdamewood (~vdamewood@fedora/vdamewood) (Ping timeout: 260 seconds)
[23:43:24] *** Quits: horribleprogram (~user@user/horribleprogram) (Remote host closed the connection)
[23:43:36] *** Joins: mackal (~mackal@pool-96-237-249-63.bstnma.fios.verizon.net)
[23:46:43] *** Quits: Guest19 (~Guest19@2601:647:5280:2a50:21ef:802f:daff:2aa5) (Quit: Client closed)
[23:46:54] *** Joins: plastico (~plastico@neomutt/plastico)
[23:47:52] *** Joins: Guest19 (~Guest19@2601:647:5280:2a50:21ef:802f:daff:2aa5)
[23:49:34] *** Joins: _mikey (~mikey@user/mikey/x-4335048)
[23:49:36] <cart_man> Alipha: lol
[23:51:29] <cart_man> Sooo ... If I am to LDD every dependancy my app needs and literally smash everything into a folder... whats the odds of that working when take to another distro? So I am saying LDD my bin and then LDDing every Lib shown in that list...this is a mindblowing big waste of time so im I wonder if it will at all work
[23:52:02] <imMute> cart_man: just use docker/flatpack/snap/whatever  :)
[23:52:39] *** Quits: varioust (~varioust@gateway/tor-sasl/varioust) (Ping timeout: 276 seconds)
[23:54:14] <jokoon2> How do I iterate the key of a object in nolhman json? when I iterate, it just gives me values, not keys
[23:55:12] *** Quits: Stryyker (~stryyke1@about/windows/staff/stryyker) (Remote host closed the connection)
[23:55:17] <cart_man> imMute: I have to make a Lambda... so im screwd in that regard
[23:55:24] *** Joins: varioust (~varioust@gateway/tor-sasl/varioust)
[23:55:30] <cart_man> I have to run with with the lambda and the bin is compiled seperately
[23:56:07] <cart_man> imMute: I am not saying I am going to do the LDD thing I am just asking if it will work if someone tried it.
[23:56:26] *** Joins: |` (~|`@178.159.129.50)
[23:57:59] <jokoon2> Im seriously doubting my sanity, I make a simple example work, yet my json example doesn't
[23:58:13] <imMute> jokoon2: see https://github.com/nlohmann/json/issues/67 maybe?
[23:59:05] <imMute> cart_man: I don't think so, at some point you're going to find linking against libc/libc++whatever and that's gotta match the host where you run it, so you can't bring it along.
[23:59:26] <jokoon2> so I can't run .count("key") on an object, like it's a map?
