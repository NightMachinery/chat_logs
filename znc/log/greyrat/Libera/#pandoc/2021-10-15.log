[00:21:59] *** Joins: __monty__ (~toonn@user/toonn)
[01:16:27] *** Quits: winterflaw (~winterfla@gateway/tor-sasl/winterflaw) (Remote host closed the connection)
[01:43:26] *** Joins: winterflaw (~winterfla@gateway/tor-sasl/winterflaw)
[02:00:57] *** Quits: winterflaw (~winterfla@gateway/tor-sasl/winterflaw) (Ping timeout: 276 seconds)
[02:03:52] *** Quits: __monty__ (~toonn@user/toonn) (Quit: leaving)
[02:27:41] *** Joins: Xenguy (~Xenguy@user/xenguy)
[07:08:52] *** Joins: Xenguy_ (~Xenguy@user/xenguy)
[07:11:13] *** Quits: Xenguy (~Xenguy@user/xenguy) (Ping timeout: 252 seconds)
[08:19:15] *** Quits: duds- (~duds-@gateway/tor-sasl/duds) (Ping timeout: 276 seconds)
[09:40:16] *** Joins: _ht (~quassel@82-169-194-8.biz.kpn.net)
[10:23:12] *** Joins: duds- (~duds-@gateway/tor-sasl/duds)
[10:23:13] *** Quits: _ht (~quassel@82-169-194-8.biz.kpn.net) (Remote host closed the connection)
[11:21:01] *** Joins: winterflaw (~winterfla@gateway/tor-sasl/winterflaw)
[11:30:24] *** Joins: Xenguy__ (~Xenguy@user/xenguy)
[11:33:01] *** Quits: Xenguy_ (~Xenguy@user/xenguy) (Ping timeout: 252 seconds)
[12:48:59] *** Joins: __monty__ (~toonn@user/toonn)
[13:06:33] *** Quits: winterflaw (~winterfla@gateway/tor-sasl/winterflaw) (Ping timeout: 276 seconds)
[13:09:30] *** Joins: winterflaw (~winterfla@gateway/tor-sasl/winterflaw)
[14:18:38] *** Quits: winterflaw (~winterfla@gateway/tor-sasl/winterflaw) (Remote host closed the connection)
[14:49:18] *** Joins: winterflaw (~winterfla@gateway/tor-sasl/winterflaw)
[15:35:24] *** Quits: winterflaw (~winterfla@gateway/tor-sasl/winterflaw) (Ping timeout: 276 seconds)
[15:48:12] *** Joins: winterflaw (~winterfla@gateway/tor-sasl/winterflaw)
[16:21:47] *** Joins: darkbit (~db@152.32.99.67)
[16:45:31] *** Quits: Xenguy__ (~Xenguy@user/xenguy) (Quit: Leaving)
[18:06:42] *** Quits: winterflaw (~winterfla@gateway/tor-sasl/winterflaw) (Remote host closed the connection)
[18:15:28] *** Joins: yates (~user@fv-nc-f7af8b91e1-234237-1.tingfiber.com)
[18:15:53] <yates> this is a channel for discussing the document conversion tool "pandoc"?
[19:29:35] *** Joins: _ht (~quassel@82-169-194-8.biz.kpn.net)
[19:35:22] <ede> yates, indeed
[19:54:44] *** Joins: winterflaw (~winterfla@gateway/tor-sasl/winterflaw)
[21:42:15] *** Quits: darkbit (~db@152.32.99.67) (Ping timeout: 265 seconds)
[22:07:21] *** Quits: winterflaw (~winterfla@gateway/tor-sasl/winterflaw) (Ping timeout: 276 seconds)
[22:21:21] <yates> is there a way to invoke pandoc to perform a language translation rather than converting documents? 
[22:24:27] <yates> that may sound like a strange question, but i am conjecturing that pandoc has a way of separating the formatting from the "text", and so at that stage it would be easy to translate the text, e.g., using something like DeepL
[22:33:35] <ede> i see a problem with reemplementing the tags. word order is all but logical in human languages and each does its own.
[22:37:01] <ede> either the translator needs the same talents or a relationship is needed between the two text versions.
[22:41:34] <yates> ede: i do not understand your comments. "either the translator needs the same talents"
[22:42:01] <ede> yates: reading over the tags
[22:42:31] <ede> if you pass just the plain text to the translator, how do you reinstert them?
[22:42:37] <yates> by tags, do you mean things like \textbf{} in latex: "This is a \textbf{bold} statement!"
[22:42:48] <yates> ?
[22:43:05] <ede> yep, or <b>in HTML</b> too
[22:43:10] <yates> i see
[22:43:22] <ede> simple example
[22:43:37] <ede> *I'll never stop saying* Maria
[22:44:01] <ede> now let this be a language course, just to have a reason to mark this part ;)
[22:44:14] <ede> Ich werde nie aufh√∂ren, Maria zu sagen
[22:44:22] <ede> how would you tag this now?
[22:44:41] <yates> i was formulating a model in my mind of pandoc that it would parse the document into a set of (tag, text) lists, and so each individual text could be translated
[22:45:00] <ede> sounds like a DOM
[22:45:17] <ede> but as you see text ordering may totally change
[22:45:22] <ede> expressions get split
[22:45:51] <ede> latin seems to be even worse
[22:46:35] <ede> i've heard recently that in prosa they LIKED to shuffle words, just with the single thing in mind to keep them as far away from each other as possible
[22:48:37] <ede> You're not the boss of me now, and you're not so big
[22:48:44] <ede> from Malcolm in the middle ;)
[22:49:46] <ede> imagine a language where you can't place the "now" at the end but have something before it tagged
[22:58:30] <yates> ede: i do not disagree that there would be cases where such a translation would be "non-optimal," but would they be that common? And of the ones that commonly appear, would they compromise the intent of the communication that severely? 
[22:59:00] <yates> My goal is to get a quick translation of my status reports and technical reports into simplified chinese. 
[23:03:23] <yates> if it's a little strange, it's ok - as long as the reader can understand the meaning
[23:03:57] <ede> so with the tree done and the actual text hanging down like fruits and keeping them in order... sounds reasonable.
[23:04:47] <ede> text level markup would be most problematic i guess, but everything on sentence level or above should be fine
[23:05:54] <yates> so does pandoc indeed parse the input document into a list of (tag, text) pairs? 
[23:06:19] <yates> ede: or do you know of something that does?
[23:06:19] <ede> i'd have to look into the docs but i don't know how else it could work
[23:06:52] <yates> ede: are you one of the writers/maintainers of pandoc?
[23:08:05] <ede> like jq for json and for HTML something like https://en.wikipedia.org/wiki/Tag_soup#Tools_to_fix_tag_soup i guess
[23:08:08] <ede> heh not at all
[23:08:33] <yates> but my input is latex
[23:08:37] <yates> not html
[23:09:15] <ede> if it's a clean tree i guess the difference shouldn't matter
[23:12:19] <yates> ede: ok well thank you for discussing this. i appreciate that!
[23:13:34] <ede> there's still no real solution i can see :)
[23:14:19] <ede> maybe it's possible to grab the tree somewhere when it's used as library (is this even possible or do i think of youtube-dl now?)
[23:15:15] <ede> > it consists of a set of readers, which parse text in a given format and produce a native representation of the document (an abstract syntax tree or AST)
[23:16:15] <ede> but no idea how it handles it, i'm afraid my Haskell is too bad *cough*
[23:17:09] <ede> yates https://pandoc.org/using-the-pandoc-api.html
[23:17:36] <ede> what if a converter works on the text instead of the tags?
[23:18:21] <yates> that's what i had in mind
[23:19:12] <yates> is there a definition of the AST, in actual Haskell?
[23:23:48] <ede> do you mean using it in pandoc?
[23:27:08] *** Joins: winterflaw (~winterfla@gateway/tor-sasl/winterflaw)
[23:27:22] <yates> i mean the AST format. i imagine it's something like a C/C++ structure, but using whatever syntax Haskell uses for structures
[23:43:15] <ede> this one looks like something https://stackoverflow.com/questions/12712149/haskell-parser-to-ast-data-type-assignment
