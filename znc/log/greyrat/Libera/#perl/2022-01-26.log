[00:00:17] *** Joins: kensanata (~user@user/kensanata)
[00:01:31] *** Joins: kitsunenokenja (~kitsunech@68.91.220.96)
[00:03:01] *** Joins: bn_work (uid268505@id-268505.uxbridge.irccloud.com)
[00:04:01] *** Quits: veesh (~veesh@77.137.129.112) (Ping timeout: 256 seconds)
[00:06:44] *** Joins: radu242407821 (~radu242@pool-96-250-79-242.nycmny.fios.verizon.net)
[00:12:41] <pragma-> wow, can't do `<$foo->{bar}>` to read from a handle stored in a hash ref. says "syntax error". but if i do `$bar = $foo->{bar}; <$bar>` then it works? seriously?
[00:13:29] <ology> wha?
[00:13:50] <pragma-> Yeah, it doesn't like the > in the ->
[00:13:52] *** Quits: zer0bitz (~zer0bitz@2001:2003:f444:a000:2055:673d:3155:da63) (Ping timeout: 250 seconds)
[00:14:09] <pragma-> It thinks that > closes the <> read 
[00:14:13] <ology> In POD? 
[00:14:14] *** Quits: radu242407821 (~radu242@pool-96-250-79-242.nycmny.fios.verizon.net) (Ping timeout: 268 seconds)
[00:14:37] *** Quits: martinus__ (~martin@127.59.202.77.rev.sfr.net) (Ping timeout: 240 seconds)
[00:14:46] <ether> this is a parsing issue
[00:14:55] <genio> yeah, use readline() I guess
[00:15:02] *** Quits: otisolsen70 (~otisolsen@xd4ed80b5.cust.hiper.dk) (Remote host closed the connection)
[00:15:11] <ology> ohh
[00:15:29] <genio> perl -E 'my $foo = {bar => \*STDIN}; my $bar = <$foo->{bar}>; say $bar'    vs     perl -E 'my $foo = {bar => \*STDIN}; my $bar = readline($foo->{bar}); say $bar'
[00:16:08] <pragma-> I'll just use readline then, but that's weird.
[00:16:57] *** Quits: GEttR (~GEttR@user/gettr) (Remote host closed the connection)
[00:17:17] *** Joins: GEttR (~GEttR@user/gettr)
[00:18:12] *** Joins: veesh (~veesh@89.237.98.172)
[00:18:17] <alh> <$foo{bar}> is a glob, not a readline
[00:18:24] <alh> It's documented but you have to hunt for it
[00:19:01] <alh> (perldoc -f '<>' - "If what the angle brackets contain is a simple scalar ...")
[00:19:08] <genio> alh++ # ahh
[00:19:56] <genio> now find me a magical fix for my knee that's missing half of its cartilage. 
[00:20:07] <pragma-> $foo->{bar} doesn't contain a simple scalar though.
[00:20:21] <pragma-> The issue is the > in the -> in the $foo->{bar}
[00:20:53] <pragma-> $foo->{bar} contains a handle.
[00:21:00] <alh> No, you misunderstand
[00:21:04] <alh> <$x> - simple scalar
[00:21:16] <alh> <$x{cat}> - not a simple scalar, but a hash element, so glob instead
[00:21:28] <alh> The point is you can't do anything but $var inside of <> really, or you get glob
[00:21:34] <pragma-> Hm.
[00:21:37] <alh> You want readline() directly
[00:22:44] <tm604> or use a method call, which is conveniently named ->getline instead
[00:22:53] <pragma-> Good god, `perldoc -f '<>'` is several pages long!
[00:23:06] <alh> "Why is it this way?!" Great. Question.
[00:23:22] *** Quits: magla (~gelignite@55d4ee32.access.ecotel.net) (Quit: Stay safe!)
[00:23:33] *** Joins: pucara (~i@host14.181-1-101.telecom.net.ar)
[00:23:39] *** Joins: martinus__ (~martin@127.59.202.77.rev.sfr.net)
[00:23:52] <alh> And of course, <$cat-\>{dog}>; totally works (but as a glob)
[00:24:03] <pragma-> wtf
[00:29:57] *** Quits: Colt (~Colt@user/colt) (Quit: Leaving)
[00:31:25] *** Quits: jmdaemon (~jmdaemon@user/jmdaemon) (Ping timeout: 256 seconds)
[00:33:27] <ether> <> is certainly one of those ancient perl things with looots of history and therefore lots of backcompat considerations that prevent us from making it nicer
[00:37:30] <leont> Yeah, the glob keyword is a much better idea
[00:38:27] <leont> Might be worthy of a «no feature», but I doubt it annoys any of the usual suspects enough to actually do that
[00:38:55] <leont> And given that any such thing makes parsing more complex, it might be better to just leave it be
[00:39:37] <tm604> can we at least add binary functionality to it, so we can use it as a synonym for `!=` ? that shouldn't be hard, right?
[00:40:05] <leont> You mean $a <> $b
[00:40:32] <tm604> or `<> <> <>` for comparing lines in a file, yes
[00:40:42] <leont> Yeah I can't imagine that causing problems are all :')
[00:41:35] <ether> while we're at it, let's add the --> operator, as in (while $x --> 0) { ... }f
[00:41:37] <ether> -f
[00:41:45] <ether> (yes, I'm being sarcastic. we already have a --> operator!)
[00:42:08] *** Joins: geowiesnot (~user@5-51-190-244.abo.bbox.fr)
[00:42:08] <ether> for those that doubt me - try it and see
[00:42:42] <ether> sweval my $x = 5; while ($x --> 0) { print "$x" }
[00:42:58] <ether> bah wrong channel
[00:46:46] <choroba> <> <> <> is even nicer than Raku's * * *
[00:48:43] <tm604> so perlsecret contains popular choices such as `<<m=~m>> m ;` but someone `-->` didn't make the cut, this is disappointing!
[00:48:56] <tm604> uh, someone? somehow
[00:49:44] *** Joins: jmdaemon (~jmdaemon@user/jmdaemon)
[00:52:32] *** Quits: rgrinberg (~textual@2806:101e:7:2b:4d0:6ff9:1790:ff37) (Quit: My MacBook has gone to sleep. ZZZzzz…)
[00:54:47] *** Joins: radu242407821 (~radu242@pool-96-250-79-242.nycmny.fios.verizon.net)
[00:59:37] *** Quits: radu242407821 (~radu242@pool-96-250-79-242.nycmny.fios.verizon.net) (Ping timeout: 240 seconds)
[01:03:23] *** Joins: tirnanog (~tirnanog@user/tirnanog)
[01:04:59] *** Quits: Adoi (~Adoi@user/adoi) (Quit: Leaving)
[01:11:14] *** Quits: fdsdf (~fdsdf@178.49.152.42) (Quit: Client closed)
[01:13:21] *** Quits: castawayc (~castaway@cpc81822-swin19-2-0-cust3.3-1.cable.virginm.net) (Ping timeout: 256 seconds)
[01:15:05] <ehuelsmann[m]> hi. I found a bug (and a solution) in Locale::CLDR's number rounding for cash. I've submitted a PR on github, but is there a channel I should use to get in contact?
[01:15:31] <ehuelsmann[m]> (or would you expect that submitting the bug and fix would be enough?)
[01:15:32] *** Quits: mowcat (~mowcat@host86-129-162-211.range86-129.btcentralplus.com) (Remote host closed the connection)
[01:16:51] *** Joins: castawayc (~castaway@cpc81822-swin19-2-0-cust3.3-1.cable.virginm.net)
[01:21:49] * GumbyPAN CPAN Upload: PPI-1.271 by OALDERS https://metacpan.org/release/OALDERS/PPI-1.271
[01:26:32] *** Joins: rgrinberg (~textual@2806:101e:7:2b:9559:34ac:a49f:3b79)
[01:34:53] *** Quits: martinus__ (~martin@127.59.202.77.rev.sfr.net) (Ping timeout: 256 seconds)
[01:43:49] <EvanCarroll> Anyone in here got kubernetes skillz to go with their perl skills and want a job at cPanel working with ME?
[01:51:59] *** Joins: Adoi (~Adoi@user/adoi)
[01:52:03] *** Joins: Markow (~Markow@176.122.215.103)
[01:52:11] *** Joins: Guest89 (~Guest89@36.83.183.219)
[01:56:21] *** Quits: Markow (~Markow@176.122.215.103) (Client Quit)
[02:00:25] *** Guest89 is now known as skraito
[02:00:34] *** Quits: skraito (~Guest89@36.83.183.219) (Changing host)
[02:00:34] *** Joins: skraito (~Guest89@user/skraito)
[02:00:37] *** Quits: skraito (~Guest89@user/skraito) (K-Lined)
[02:05:34] <genio> I keep threatening to learn docker/kubernetes. I haven't done it yet though
[02:07:09] <El_Che> when you do, they will be out of fashion :)
[02:07:35] <El_Che> (personally I use podman for development and Nomad for orchestration :P )
[02:08:46] <genio> I have my VMWare and ec2 machine builds down. ansible makes things quick
[02:09:49] *** Joins: whynot (~whynot@88.155.118.37)
[02:09:59] <El_Che> once you're using docker, you can't move fast enough away from Puppet/Ansible/... (except maybe for the management of the host machines)
[02:11:06] <El_Che> (2c etc)
[02:15:14] <tm604> if you just want to play around with the container concepts, `unshare` is a good starting point: build your own docker-in-bash script, then tackle k8s once you get bored
[02:15:34] <tm604> also most of these involve layering more abstractions or tools on top until they become usable again...
[02:24:18] *** Joins: XV8 (~XV8@2601:5cb:c001:50:7138:38eb:1e16:f288)
[02:26:13] <gordonfish> El_Che: Well a '57 Nomad does have plenty of room inside
[02:26:31] *** Quits: rgrinberg (~textual@2806:101e:7:2b:9559:34ac:a49f:3b79) (Quit: My MacBook has gone to sleep. ZZZzzz…)
[02:28:03] *** Quits: proller (~p@2a02:6b8:b081:7202::1:19) (Ping timeout: 268 seconds)
[02:28:22] *** Quits: choroba (~E_Choroba@89-101-243-80.cust.centrio.cz) (Quit: Leaving)
[02:28:57] *** Quits: XV8 (~XV8@2601:5cb:c001:50:7138:38eb:1e16:f288) (Ping timeout: 240 seconds)
[02:29:42] *** Joins: rgrinberg (~textual@2806:101e:7:2b:9559:34ac:a49f:3b79)
[02:29:59] *** Quits: rgrinberg (~textual@2806:101e:7:2b:9559:34ac:a49f:3b79) (Client Quit)
[02:30:29] *** Joins: radu242407821 (~radu242@pool-96-250-79-242.nycmny.fios.verizon.net)
[02:30:30] *** Joins: proller (~p@80.240.216.69)
[02:30:35] *** Joins: XV8 (~XV8@2601:5cb:c001:50:7138:38eb:1e16:f288)
[02:31:49] *** Quits: kitsunenokenja (~kitsunech@68.91.220.96) (Ping timeout: 240 seconds)
[02:34:05] *** Joins: pizdets_ (~pizdets@183.182.115.221)
[02:34:42] *** Quits: kensanata (~user@user/kensanata) (Ping timeout: 250 seconds)
[02:34:44] *** Quits: pizdets (~pizdets@183.182.111.206) (Ping timeout: 250 seconds)
[02:35:27] *** Quits: proller (~p@80.240.216.69) (Ping timeout: 268 seconds)
[02:37:47] *** Quits: radu242407821 (~radu242@pool-96-250-79-242.nycmny.fios.verizon.net) (Ping timeout: 256 seconds)
[02:43:13] *** Quits: morte_ (~user@190.104.116.153) (Remote host closed the connection)
[02:47:26] *** Joins: proller (~p@2a02:6b8:b081:6::1:13)
[02:58:11] *** Quits: djerius (~quassel@pool-108-20-43-199.bstnma.fios.verizon.net) (Ping timeout: 256 seconds)
[02:58:37] *** Quits: geowiesnot (~user@5-51-190-244.abo.bbox.fr) (Ping timeout: 240 seconds)
[02:59:16] *** Joins: djerius (~quassel@pool-108-20-43-199.bstnma.fios.verizon.net)
[03:01:35] *** Quits: ferz (~ferz@93-39-143-61.ip76.fastwebnet.it) (Ping timeout: 256 seconds)
[03:07:03] *** Joins: monkey_ (~user@190.104.116.153)
[03:12:16] *** Quits: Adoi (~Adoi@user/adoi) (Quit: Leaving)
[03:16:34] *** Joins: ferz (~ferz@93-39-143-61.ip76.fastwebnet.it)
[03:19:02] *** Quits: TweetiePooh (~richard@cpc75386-sotn16-2-0-cust456.15-1.cable.virginm.net) (Quit: Konversation terminated!)
[03:38:32] *** Quits: Pali (~pali@user/pali) (Ping timeout: 240 seconds)
[03:39:57] *** Quits: D-ion (~D-ion___@0850724116.static.corbina.ru) (Ping timeout: 240 seconds)
[03:47:04] * GumbyPAN CPAN Upload: Amazon-API-1.1.9 by BIGFOOT https://metacpan.org/release/BIGFOOT/Amazon-API-1.1.9
[03:49:18] *** Quits: haj (~haj@ip5f5beb98.dynamic.kabel-deutschland.de) (Quit: Leaving.)
[03:49:18] *** Joins: D-ion (~D-ion___@0850724116.static.corbina.ru)
[03:52:14] <ology> I am Nomad. I am perfect. That which is imperfect must be sterilized.
[03:54:44] * ether ಠ_ಠ 
[03:55:02] *** Quits: HvszrStykp (~X@81.171.62.81) (Ping timeout: 240 seconds)
[03:55:03] <ology> https://memory-alpha.fandom.com/wiki/Nomad
[03:55:04] <Paperbot> Link title(s): [ Nomad | Memory Alpha | Fandom ]
[04:02:45] *** Joins: radu242407821 (~radu242@pool-96-250-79-242.nycmny.fios.verizon.net)
[04:05:13] *** Joins: CatCow (~wtf_over@c-73-96-109-206.hsd1.or.comcast.net)
[04:07:06] * GumbyPAN CPAN Upload: Future-0.48 by PEVANS https://metacpan.org/release/PEVANS/Future-0.48
[04:07:17] *** Quits: radu242407821 (~radu242@pool-96-250-79-242.nycmny.fios.verizon.net) (Ping timeout: 240 seconds)
[04:14:14] *** Joins: geowiesnot (~user@5-51-190-244.abo.bbox.fr)
[04:23:18] <gordonfish> ology: Oh yeah I remember that one. Always wondered if he moonlighted as a bounty hunter in a galaxy far, far away.
[04:29:17] <ology> That reminds me that I need to check out The Book of Boba Fett on my friend's plex server.
[04:37:10] * GumbyPAN CPAN Upload: SPVM-0.9129 by KIMOTO https://metacpan.org/release/KIMOTO/SPVM-0.9129
[04:42:11] <aquanight> ology: dang I completely forgot about that trek one. For some reason I thought you were doing a Borg bit.
[04:42:45] <aquanight> (except for the part where I find the "borg queen" still to be the weirdest thing they've done to the borg)
[05:01:45] *** Quits: whynot (~whynot@88.155.118.37) (Quit: leaving)
[05:03:04] *** Joins: lispy (~lispy4@84.69.59.93)
[05:03:52] *** Quits: subie (~subie@2601:4c0:4080:bc0:9043:293c:1747:cf26) (Remote host closed the connection)
[05:04:11] *** Joins: subie (~subie@2601:4c0:4080:bc0:416e:6954:4778:7042)
[05:05:46] *** Joins: radu242407821 (~radu242@pool-96-250-79-242.nycmny.fios.verizon.net)
[05:06:43] <gordonfish> aquanight: Indeed, it didn't really seem fit what was established prior to First Contact.
[05:07:47] <aquanight> I always thought of it as "decentralized processing taken to the extreme"
[05:09:15] <aquanight> there was no single point of failure at any point. No single drone, no single ship, not even a single specific part of a ship.
[05:09:20] *** Joins: krismatrix (~krismatri@38.80.149.51)
[05:09:30] <gordonfish> Especially Hue from I, Borg, being able to effect the others that Lore was able to take advantage of in the Descent two parter. I don't think that works with the concept of a queen.
[05:10:06] <gordonfish> aquanight: Exactly.
[05:11:05] <gordonfish> From the beginng, in Q Who, they were described as being very generalized.
[05:11:53] <gordonfish> Pretty much you just described is how they were introduced.
[05:11:54] <aquanight> there was no need for any drone to be specialized because "hive mind" it had access to the entire collective knowledge
[05:12:53] <krismatrix> So for a captcha secret, I was a random number. Would a simple rand() suffice, or should I use a more crypto secure PSRG ? What do you guys recommend?
[05:12:57] *** Quits: radu242407821 (~radu242@pool-96-250-79-242.nycmny.fios.verizon.net) (Ping timeout: 240 seconds)
[05:13:07] <krismatrix> I was a random number = i want a random number.
[05:13:12] <aquanight> krismatrix: rand() is generally good enough for most scenarios.
[05:13:21] <krismatrix> ok. thx u.
[05:13:43] <aquanight> well
[05:13:57] <krismatrix> Grinnz mentioned the other day that using a process id was not as good.
[05:14:07] <krismatrix> which is what I am currently using.
[05:14:08] <aquanight> yeah process ids aren't random.
[05:14:29] <aquanight> the most basic RNG is rand() using a time-generated seed.
[05:14:29] <krismatrix> i thought they were unique though?
[05:14:33] *** Quits: proller (~p@2a02:6b8:b081:6::1:13) (Ping timeout: 268 seconds)
[05:14:37] <aquanight> they're unique for the life of the process
[05:14:40] <aquanight> they can be reused
[05:15:02] <aquanight> once a process exits, the OS is entitled to reuse the process id at any time and for any reason
[05:15:46] <gordonfish> Yeah piss just wrap around once it hits the max
[05:16:00] <aquanight> indeed it can even so happen on some systems where a set of system services are promptly started up at boot, that the same service processes will end up assigned the same process ids the vast majority of the time
[05:16:01] <gordonfish> Fu autocorrect
[05:16:07] <gordonfish> Pids
[05:16:07] <aquanight> gordonfish: lol
[05:16:41] <aquanight> krismatrix: I think it more depends on what kind of random input the captch seed needs
[05:16:48] <aquanight> if you need just a simple random integer, rand() is fine
[05:16:51] <krismatrix> ok.
[05:17:09] <aquanight> if it needs something like a "sequence of random bytes" to act as a seed then I might recommend something a bit more robst
[05:17:27] *** Quits: R2robot (~R2robot@user/r2robot) (Quit: Pull the lever, Kronk.  Wrong leverrrrrrr!)
[05:17:29] <krismatrix> I need to figure out how to create tests in Mojo for the captcha system too...so I am trying to think about what I need to store in a database as a testing captcha and secret for testing purposes.
[05:17:36] <aquanight> keep in mind, if you're targeting a POSIX compliant system, a "good enough" SPRNG can be found by reading /dev/random
[05:18:02] <krismatrix> i am just trying to create a simplistic captcha for my own site.
[05:18:39] <aquanight> if your site can read from /dev/random then implementing as such in perl is easy
[05:18:48] <aquanight> though I would more advise reading /dev/urandom
[05:19:00] <krismatrix> doesn't rand() do that?
[05:19:19] <aquanight> I think perl's rand is the normal linear-congruence PRNG like what C has.
[05:19:28] <tirnanog> aquanight: I agree but just chipping in to say that it's not posix-defined.
[05:19:38] <aquanight> tirnanog: that's not a POSIX thing?
[05:19:39] *** Quits: XV8 (~XV8@2601:5cb:c001:50:7138:38eb:1e16:f288) (Quit: My MacBook has gone to sleep. ZZZzzz…)
[05:19:45] <tirnanog> aquanight: https://pubs.opengroup.org/onlinepubs/9699919799/basedefs/V1_chap10.html
[05:19:46] <Paperbot> Link title(s): [ Directory Structure and Devices ]
[05:19:50] <tirnanog> that's your lot.
[05:19:57] <aquanight> tirnanog: regardless I think most systems that are POSIX also happen to have /dev/random
[05:20:03] <tirnanog> aquanight: yeah, sure.
[05:20:13] *** Joins: R2robot (~R2robot@user/r2robot)
[05:20:13] <aquanight> and really these days if you're talking about setting up a site
[05:20:30] <tirnanog> aquanight: incidentally, /dev/random no longer sucks in Linux (as of 5.6)
[05:20:39] <aquanight> there's probably an 80% chance the OS is linux, 16% chance it's something BSD, 3% Windows, 1% something exotic
[05:20:51] <aquanight> tirnanog: oh? what'd they do to it?
[05:20:57] *** Joins: XV8 (~XV8@2601:5cb:c001:50:7138:38eb:1e16:f288)
[05:21:00] <gordonfish> sweval: srand unpack Q => `head -c 16 /dev/urandom`; rand() * 10;
[05:21:02] <perlbot> gordonfish: 5.00943756735982
[05:21:05] <gordonfish> sweval: srand unpack Q => `head -c 16 /dev/urandom`; rand() * 10;
[05:21:07] <perlbot> gordonfish: 5.88750775977136
[05:21:12] <krismatrix> i am doing both back and front end so..i have full control. It's just implementation detail on my part. And my backend is ubuntu
[05:21:29] <aquanight> krismatrix: right
[05:21:42] <tirnanog> aquanight: they removed the blocking entropy pool nonsense. the only difference between random and urandom now is that random guarantees that the crng init phase has completed. if it hasn't, that is now the one and only cirumstance under which it will block (so, like calling getrandom(2) without the non-blocking flag).
[05:21:55] <gordonfish> sweval: srand unpack Q => `head -c 16 /dev/urandom`; [ map { int rand() * 100 } 1..25 ];
[05:21:57] <perlbot> gordonfish: [5,46,79,47,57,7,29,84,81,16,74,30,62,77,85,21,83,54,35,28,2,24,77,53,8]
[05:22:01] <gordonfish> sweval: srand unpack Q => `head -c 16 /dev/urandom`; [ map { int rand() * 100 } 1..25 ];
[05:22:03] <perlbot> gordonfish: [26,2,68,89,92,76,13,44,11,49,44,10,55,19,8,34,43,20,14,21,49,58,44,2,33]
[05:22:23] <aquanight> tirnanog: "that the crng init phase has completed" this sounds like an early boot thing
[05:22:27] <tirnanog> aquanight: right.
[05:22:31] <aquanight> so it probably wouldn't even block for very long
[05:22:33] <gordonfish> Re: <aquanight> though I would more advise reading /dev/urandom
[05:22:39] <gordonfish> Oh you beat me to it :)
[05:23:01] <tirnanog> aquanight: on most systems, yes. the nice thing is that, that distinction aside, reading from /dev/random is not constrained in any way. it's identical to urandom at that point.
[05:23:14] <tirnanog> so we can use it without fear now.
[05:24:05] *** Joins: rgrinberg (~textual@2806:101e:7:2b:9559:34ac:a49f:3b79)
[05:24:11] <aquanight> on that note, wasn't it at one point found that int rand() * UPPER isn't actually quite properly a uniform distribution?
[05:25:19] <genio> https://metacpan.org/pod/Sodium::FFI#randombytes_uniform
[05:25:20] <Paperbot> Link title(s): [ Sodium::FFI - FFI implementation of libsodium - metacpan.org ]
[05:25:27] <tirnanog> basheval: uname -r
[05:25:29] <perlbot> tirnanog: 5.16.2␤
[05:25:34] <tirnanog> ah, good.
[05:26:00] <aquanight> hmm
[05:26:17] *** Quits: XV8 (~XV8@2601:5cb:c001:50:7138:38eb:1e16:f288) (Ping timeout: 240 seconds)
[05:27:49] <aquanight> genio: interesting. I need to see how that's done.
[05:27:54] <aquanight> I mean
[05:27:58] <aquanight> I could do it simply enough.
[05:29:31] <gordonfish> sweval: use Path::Tiny; my $ur = path('/dev/urandom')->openr; [ map { read($ur, $_, 8) and unpack('Q') % 100 } 1..25 ];
[05:29:33] <perlbot> gordonfish: [34,47,10,51,21,31,88,26,85,9,26,46,66,40,49,73,15,87,15,4,61,19,32,70,20]
[05:30:18] <genio> aquanight: https://github.com/jedisct1/libsodium/blob/master/src/libsodium/randombytes/randombytes.c#L145
[05:30:19] <Paperbot> Link title(s): [ libsodium/randombytes.c at master · jedisct1/libsodium · GitHub ]
[05:30:26] <gordonfish> That actually feels more random than just setting the seed and calling rand(), but could be superficial, hard to say for sure.
[05:31:25] <aquanight> genio: well... that's about what I would think to do it.
[05:31:52] <aquanight> it of course assumes the raw random source is itself uniform
[05:32:19] *** Quits: geowiesnot (~user@5-51-190-244.abo.bbox.fr) (Ping timeout: 256 seconds)
[05:32:35] <tirnanog> sweval: open my $fh, "<", "/dev/random"; say sysread $fh, my $buf, 524228;
[05:32:36] <perlbot> tirnanog: 524228 
[05:32:45] <aquanight> but assuming one could even prove a particular random source was non-uniform in a certain way, I'm not sure how you could mathemtically coerce it into a uniform distribution
[05:32:54] <tirnanog> ^ under <5.6, that would have been truncated or would have quite possibly appeared to hang.
[05:33:17] <aquanight> wait
[05:33:24] <gordonfish> Why /dev/random instead of /dev/urandom ?
[05:33:32] <tirnanog> gordonfish: see above for the context.
[05:33:33] <aquanight> I think it would just hang
[05:33:49] <aquanight> I don't think you can get partial reads with O_NONBLOCK except for end-of-file, can you?
[05:33:57] <aquanight> without* O_NONBLOCK
[05:34:36] <tirnanog> here's one of my 5.4 systems:
[05:34:39] <tirnanog> perl -E 'open my $fh, "<", "/dev/random"; say sysread $fh, my $buf, 524228'
[05:34:41] <tirnanog> 68
[05:35:14] <aquanight> huh
[05:35:27] <aquanight> see that's the reason I always usually avoided /dev/random like the plague
[05:35:41] <aquanight> I think it was maybe a small minority of systems that could keep it stocked with entropy
[05:35:45] <tirnanog> yeah. well, things have gotten better.
[05:35:56] *** Quits: SpiceMan (~Don_Spice@user/SpiceMan) (Quit: WeeChat 2.8)
[05:36:08] <aquanight> on the other hand I don't think people were meant to read large gobs of data out of /dev/u?random
[05:36:53] <tirnanog> they weren't but people do it anyway. I think that was one of the motivations for switching to chacha20 in linux.
[05:37:05] <gordonfish> urandom just seems better for reliability if you're writing for a variety of unix-like systems.
[05:37:51] <tirnanog> gordonfish: for now, that remains true, yes. eventually, pre-5.6 kernels will be largely a thing of the past and good riddance too. the BSDs, at least, have random and urandom behave in exactly the same way.
[05:38:41] <aquanight> sweval: sub d20 { state $rng; $rng or open $rng, "<", "/dev/urandom"; my $n; do { read($fd, $_, 1) and $n = unpack('C'); } while ($n < 20); 1 + $n; } map { d20 } 1..100;
[05:38:42] <perlbot> aquanight: ERROR: Global symbol "$fd" requires explicit package name (did you forget to declare "my $fd"?) at (IRC) line 1. Bareword "d20" not allowed while "strict subs" in use at (IRC) line 1. 
[05:38:51] <aquanight> sweval: sub d20 { state $rng; $rng or open $rng, "<", "/dev/urandom"; my $n; do { read($rng, $_, 1) and $n = unpack('C'); } while ($n < 20); 1 + $n; } map { d20 } 1..100;
[05:38:52] <perlbot> aquanight: 100
[05:39:00] <aquanight> sweval: sub d20 { state $rng; $rng or open $rng, "<", "/dev/urandom"; my $n; do { read($rng, $_, 1) and $n = unpack('C'); } while ($n < 20); 1 + $n; } [ map { d20 } 1..100 ];
[05:39:01] <perlbot> aquanight: [106,239,69,62,92,107,136,216,99,234,219,56,160,145,155,111,199,230,26,48,251,137,201,192,136,103,156,192,66,53,237,100,144,53,174,249,129,81,43,91,119,25,199,186,186,65,61,78,93,54,204,255,149,140,196,82,103,219,83,87,69,79,44,244,186,107,166,207,155,233,68,149,248,140,233,134,75,250,53,209,146,34,134,230,149,221,151,81,74,198,200,23,206,170,204,186,255,209,87,47]
[05:39:11] <aquanight> uh
[05:39:17] <aquanight> sweval: sub d20 { state $rng; $rng or open $rng, "<", "/dev/urandom"; my $n; do { read($rng, $_, 1) and $n = unpack('C'); } until ($n < 20); 1 + $n; } [ map { d20 } 1..100 ];
[05:39:18] <perlbot> aquanight: [12,4,4,19,20,19,9,18,17,17,2,9,11,20,14,11,2,19,9,6,9,13,19,14,19,12,18,10,13,20,16,15,6,1,7,16,9,7,14,17,6,6,7,15,19,20,14,10,17,7,15,5,3,12,19,7,19,9,16,1,20,6,11,16,3,4,19,5,16,6,5,10,6,1,8,12,12,1,1,17,3,2,16,3,1,4,3,19,15,1,16,12,7,8,18,17,6,2,4,11]
[05:39:22] <aquanight> that's better
[05:39:49] *** Joins: deadmarshal (~deadmarsh@95.38.116.147)
[05:40:06] <aquanight> on that note
[05:40:22] <gordonfish> Re: <aquanight> on the other hand I don't think people were meant to read large gobs of data out of /dev/u?random
[05:40:25] <gordonfish> Right. You only need to read 8 bytes for a 64-bit value.
[05:40:33] <aquanight> I kinda wish open state $fd, "<stuff"; had the 'ONCE' logic state $x = ... does.
[05:40:50] <aquanight> gordonfish: and that's if you need a 64-bit value
[05:40:57] *** Quits: eseyman (~manu@lfbn-idf1-1-532-49.w86-242.abo.wanadoo.fr) (Ping timeout: 240 seconds)
[05:41:01] <aquanight> doing so is kinda overkill if you're going to throw % 100 at it
[05:41:35] <aquanight> though
[05:41:49] <aquanight> I feel like the "pull bytes until one is less than your upper bound" burns through a lot of random bytes needlessly
[05:42:06] <gordonfish> Yep
[05:42:27] <aquanight> sweval: my $count = 0; sub d20 { state $rng; $rng or open $rng, "<", "/dev/urandom"; my $n; do { ++$count; read($rng, $_, 1) and $n = unpack('C'); } until ($n < 20); 1 + $n; } [ map { d20 } 1..100, discards => ($count - 100) ];
[05:42:29] <perlbot> aquanight: ERROR: Modification of a read-only value attempted at (IRC) line 1. 
[05:42:42] <aquanight> sweval: my $count = 0; sub d20 { state $rng; $rng or open $rng, "<", "/dev/urandom"; my $n; do { ++$count; read($rng, $_, 1) and $n = unpack('C'); } until ($n < 20); 1 + $n; } [ map { d20 } (1..100), discards => ($count - 100) ];
[05:42:43] <perlbot> aquanight: ERROR: Modification of a read-only value attempted at (IRC) line 1. 
[05:42:47] <aquanight> dammit map
[05:42:52] <aquanight> stop binding the whole damned list
[05:42:59] <aquanight> sweval: my $count = 0; sub d20 { state $rng; $rng or open $rng, "<", "/dev/urandom"; my $n; do { ++$count; read($rng, $_, 1) and $n = unpack('C'); } until ($n < 20); 1 + $n; } [ (map { d20 } 1..100), discards => ($count - 100) ];
[05:43:00] <perlbot> aquanight: [1,9,6,11,15,16,3,8,15,7,12,19,2,7,7,5,5,16,4,11,17,3,1,17,9,8,2,4,5,18,13,14,3,17,13,4,15,14,20,5,20,9,17,11,2,4,16,16,3,1,17,10,18,18,14,19,5,5,7,9,17,13,15,19,12,11,1,16,10,13,11,15,20,19,18,12,6,1,11,10,17,7,11,8,20,20,17,1,9,4,8,6,2,19,2,10,3,8,17,17,"discards",1344]
[05:43:02] *** Joins: eseyman (~manu@lfbn-idf1-1-393-122.w86-242.abo.wanadoo.fr)
[05:43:13] <aquanight> that's about a 10% use rate
[05:43:24] <aquanight> less even.
[05:44:13] *** Quits: deadmarshal (~deadmarsh@95.38.116.147) (Ping timeout: 256 seconds)
[05:44:53] <aquanight> with a tight upper bound and a bad strike out of the random source, you could spin for a while before you find an acceptable value
[05:45:47] <aquanight> bad streak* I meant but that kinda works
[05:48:45] <gordonfish> Yeah not too efficient
[05:50:21] <genio> ok, I need to stop playing with randombytes and get back to strawberry build testing
[05:52:09] <gordonfish> genio: How is that going?
[05:52:28] <genio> haven't looked in a bit. gotta find my external drive now. sheesh
[05:54:01] <genio> requires LOTS of moving parts that I can't seem to find a good way of automating
[05:55:05] *** Quits: leitz (~LeamHall@072-182-158-027.res.spectrum.com) (Quit: nappy time)
[05:55:24] *** Joins: XV8 (~XV8@2601:5cb:c001:50:7138:38eb:1e16:f288)
[05:56:43] *** Quits: krismatrix (~krismatri@38.80.149.51) (Quit: Leaving)
[05:58:25] *** Joins: geowiesnot (~user@5-51-190-244.abo.bbox.fr)
[06:05:17] *** Quits: XV8 (~XV8@2601:5cb:c001:50:7138:38eb:1e16:f288) (Ping timeout: 240 seconds)
[06:06:15] *** Joins: HvszrStykp (~X@81.171.62.81)
[06:13:59] *** Joins: fdsdf (~fdsdf@178.49.152.151)
[06:15:07] *** Joins: krismatrix (~krismatri@38.80.149.51)
[06:15:56] <krismatrix> in Test::Mojo...do submits of contact forms not return a 200?
[06:18:52] <aquanight> depends on the page
[06:19:31] <aquanight> I think it's technically correct to also use one of the various 30X redirects to tell a browser to go to a new URI using HTTP GET
[06:19:44] <aquanight> I think there's a specific one that does that.
[06:19:49] <aquanight> or is supposed to do that
[06:20:34] <aquanight> 303
[06:21:03] *** Quits: Su-Shee (~Susanne@p4ffc7705.dip0.t-ipconnect.de) (Ping timeout: 256 seconds)
[06:22:37] *** Joins: Su-Shee (~Susanne@p50894277.dip0.t-ipconnect.de)
[06:28:24] <krismatrix> I am testing manually and there is indeed a bug in my code...so it may actually be correctly reflecting the error. I will fix it manually first...then try to get my test code to work. lol.
[06:29:00] *** Joins: radu242407821 (~radu242@pool-96-250-79-242.nycmny.fios.verizon.net)
[06:29:48] <krismatrix> Whoo...yep that was the problem...yay!!
[06:30:17] <krismatrix> Now i need to check that the post leads to the new page. Haven't figured out how to check that yet. let's see...
[06:31:13] <aquanight> Location: header if you're testing a redirect
[06:32:03] <krismatrix> ?
[06:33:46] <aquanight> I'm not sure what you mean by "the post leads to the new page". If you're talking about a POST request responding with a redirect, you usually want HTTP 303 and the relevant URI in a Location header
[06:34:05] *** Quits: radu242407821 (~radu242@pool-96-250-79-242.nycmny.fios.verizon.net) (Ping timeout: 256 seconds)
[06:36:30] <krismatrix> hmm...yes...if I am testing a contact form, the form which i am testing will send an email and redirect to a thank you page. I guess I am trying to figure out how I can test that it arrived at the thank you page.
[06:38:44] <krismatrix> I don't think I logically follow your point on HTTP 303 and relevant URI in a location header.
[06:39:24] <aquanight> it depends on how your form presents the "thank you" page
[06:39:40] <aquanight> for some it's just inline normally
[06:39:50] <aquanight> in which case I guess you just need to check the response content
[06:39:59] *** Joins: kitsunenokenja (~kitsunech@68.91.220.96)
[06:40:20] <aquanight> you might need to feed the content to an HTML DOM or just compare it agianst a known template
[06:41:06] <aquanight> but sometimes POSTed form pages don't provide the "result" content directly, but will instead issue a redirect to a separate URI which has the result. (Sometimes this is even something showing the specific result of whatever you did.)
[06:41:33] <aquanight> so whichever your form page is doing, that's what you need to look for
[06:41:59] <aquanight> when you said "check that the post leads to the new page" I guessed you might've been doing the redirect method
[06:42:07] <aquanight> it's entirely possible I guessed wrong
[06:44:35] <krismatrix> https://l.perl.bot/p/864rcz
[06:44:36] <Paperbot> Link title(s): [ Perlbot Pastebin ]
[06:44:52] <krismatrix> This is method for validating the form.
[06:45:04] <krismatrix> At the end, it does a render()
[06:45:52] <aquanight> okay
[06:45:55] <aquanight> so it's inline
[06:46:04] <aquanight> in which case your test object will find it in $t->content
[06:46:18] <aquanight> and you'll have to check that the HTML looks like what you want it to
[06:46:21] <krismatrix> https://l.perl.bot/p/xds81s
[06:46:21] <Paperbot> Link title(s): [ Perlbot Pastebin ]
[06:46:42] <krismatrix> that is my mojo test code.
[06:46:44] <aquanight> a quick and brutal way to do it
[06:46:51] <krismatrix> only the last test fails right now.
[06:47:26] <aquanight> what error message do you get
[06:48:26] <krismatrix> https://l.perl.bot/p/jgpyg4
[06:48:27] <Paperbot> Link title(s): [ Perlbot Pastebin ]
[06:48:46] <krismatrix> It is almost like it is checking the page where the form is rather than the new page.
[06:50:39] <aquanight> sounds like you might have something not right in your handler then?
[06:50:49] <aquanight> are you POSTing back to the same uri?
[06:51:34] <krismatrix> hmm...yes IF something that the user entered isn't right.
[06:51:43] <krismatrix> That may be a good hint.
[06:52:35] <aquanight> I would think that setup should be possible, but that means you need to know if you're getting into your GET vs. POST handlers
[06:52:41] *** Quits: tirnanog (~tirnanog@user/tirnanog) (Quit: = "")
[06:53:31] <aquanight> because it sounds like it's going into your GET handler for a POST request
[06:54:14] <krismatrix> i guess
[06:55:46] <krismatrix> one guess is that my subject is technically a drop down option. I don't know whether my test code is formatted correctly for such a field.
[06:56:09] <krismatrix> Because those exact credentials (i think) worked when I tested manually.
[07:01:06] <krismatrix> ah...I got it working. I just had the wrong name in the name/value for the form.
[07:08:34] *** Quits: HvszrStykp (~X@81.171.62.81) (Ping timeout: 250 seconds)
[07:12:11] *** Quits: krismatrix (~krismatri@38.80.149.51) (Quit: Leaving)
[07:13:18] *** Quits: monkey_ (~user@190.104.116.153) (Remote host closed the connection)
[07:13:27] *** Joins: radu242407821 (~radu242@pool-96-250-79-242.nycmny.fios.verizon.net)
[07:21:07] *** Quits: radu242407821 (~radu242@pool-96-250-79-242.nycmny.fios.verizon.net) (Ping timeout: 256 seconds)
[07:28:58] *** Joins: rindolf (~shlomif@inkscape/dev/shlomif)
[07:33:42] *** Joins: Darkcoal (~user@130.164.162.247)
[07:40:47] *** Quits: yuesbeez (uid458354@id-458354.tinside.irccloud.com) (Quit: Connection closed for inactivity)
[07:44:45] *** Joins: krismatrix (~krismatri@38.80.149.51)
[07:45:01] *** Joins: radu242407821 (~radu242@pool-96-250-79-242.nycmny.fios.verizon.net)
[07:45:30] <krismatrix> In Test::Mojo is there a way (other than to manually count) to idenitfy which test corresponds to which test number?
[07:45:49] *** Quits: rewt (~default@user/rewt) (Read error: Connection reset by peer)
[07:47:37] *** Joins: rewt (~default@user/rewt)
[07:55:08] *** Quits: CatCow (~wtf_over@c-73-96-109-206.hsd1.or.comcast.net) (Quit: Textual IRC Client: www.textualapp.com)
[07:56:14] *** Quits: kitsunenokenja (~kitsunech@68.91.220.96) (Ping timeout: 250 seconds)
[07:57:06] *** Quits: D-ion (~D-ion___@0850724116.static.corbina.ru) (Ping timeout: 250 seconds)
[07:57:17] *** Quits: radu242407821 (~radu242@pool-96-250-79-242.nycmny.fios.verizon.net) (Ping timeout: 240 seconds)
[08:07:12] *** Joins: RandalSchwartz (~Adium@2601:1c0:6a00:71d0:d147:d8b6:e4f9:958d)
[08:07:26] *** Joins: Martchus_ (~martchus@2a01:c23:bcae:e800:d250:99ff:fe49:3cce)
[08:07:28] *** Quits: RandalSchwartz (~Adium@2601:1c0:6a00:71d0:d147:d8b6:e4f9:958d) (Client Quit)
[08:09:04] *** Quits: Martchus (~martchus@2a01:c23:b973:6a00:d250:99ff:fe49:3cce) (Ping timeout: 268 seconds)
[08:09:48] *** Joins: deadmarshal (~deadmarsh@95.38.116.147)
[08:11:31] *** Quits: krismatrix (~krismatri@38.80.149.51) (Quit: Leaving)
[08:13:33] <rindolf> kraih: 
[08:13:41] <rindolf> kris...
[08:15:26] <rindolf> one can wrap Test2 ; Carp ; etc.
[08:16:26] *** Joins: D-ion (~D-ion___@0850724116.static.corbina.ru)
[08:27:20] *** Joins: radu242407821 (~radu242@pool-96-250-79-242.nycmny.fios.verizon.net)
[08:31:37] *** Quits: radu242407821 (~radu242@pool-96-250-79-242.nycmny.fios.verizon.net) (Ping timeout: 240 seconds)
[08:33:17] *** Quits: geowiesnot (~user@5-51-190-244.abo.bbox.fr) (Ping timeout: 240 seconds)
[08:52:17] *** Quits: Darkcoal (~user@130.164.162.247) (Ping timeout: 240 seconds)
[08:54:28] *** Joins: Darkcoal (~user@2001:16a2:766a:3200:114:d372:8c0a:4f04)
[08:56:37] * GumbyPAN CPAN Upload: Data-Record-Serialize-0.33-TRIAL by DJERIUS https://metacpan.org/release/DJERIUS/Data-Record-Serialize-0.33-TRIAL
[09:01:10] *** Quits: rgrinberg (~textual@2806:101e:7:2b:9559:34ac:a49f:3b79) (Quit: My MacBook has gone to sleep. ZZZzzz…)
[09:01:32] *** Quits: Darkcoal (~user@2001:16a2:766a:3200:114:d372:8c0a:4f04) (Ping timeout: 240 seconds)
[09:03:38] *** Joins: Darkcoal (~user@2001:16a2:766a:3200:a74:5a4:87c5:8d1)
[09:09:02] *** Joins: vanessa (~annada@103.160.128.7)
[09:10:06] *** Quits: Manderson_ (manderson@gateway/vpn/protonvpn/manderson) (Read error: Connection reset by peer)
[09:10:46] *** Quits: Darkcoal (~user@2001:16a2:766a:3200:a74:5a4:87c5:8d1) (Ping timeout: 250 seconds)
[09:11:09] *** Joins: Darkcoal (~user@130.164.162.247)
[09:11:32] *** Joins: rgrinberg (~textual@2806:101e:7:2b:9559:34ac:a49f:3b79)
[09:14:31] *** Joins: HvszrStykp (~X@81.171.62.81)
[09:20:56] *** Joins: mattil (~mattil@helsinki.portalify.com)
[09:33:52] *** Quits: mattil (~mattil@helsinki.portalify.com) (Remote host closed the connection)
[09:33:56] *** Joins: Manderson (manderson@gateway/vpn/protonvpn/manderson)
[09:35:42] *** Joins: mattil (~mattil@dy50spnqv1cgls632xv-y-4.rev.dnainternet.fi)
[09:37:15] *** Quits: Darkcoal (~user@130.164.162.247) (Ping timeout: 268 seconds)
[09:38:32] *** Joins: Darkcoal (~user@2001:16a2:766a:3200:174d:c1ee:c5ba:4bef)
[09:42:13] *** Joins: jplesnik (~jplesnik@83.240.61.101)
[09:43:30] *** Quits: mattil (~mattil@dy50spnqv1cgls632xv-y-4.rev.dnainternet.fi) (Remote host closed the connection)
[09:43:56] *** Joins: mattil (~mattil@dy50spnqv1cgls632xv-y-4.rev.dnainternet.fi)
[09:44:32] *** Quits: mattil (~mattil@dy50spnqv1cgls632xv-y-4.rev.dnainternet.fi) (Remote host closed the connection)
[09:56:13] *** Joins: geowiesnot (~user@5-51-190-244.abo.bbox.fr)
[09:56:32] *** Quits: fdsdf (~fdsdf@178.49.152.151) (Quit: Client closed)
[10:03:42] *** Joins: radu242407821 (~radu242@pool-96-250-79-242.nycmny.fios.verizon.net)
[10:05:50] *** Joins: mattil (~mattil@dy50spns8xg6-7j93zg1t-4.rev.dnainternet.fi)
[10:06:32] *** Quits: mattil (~mattil@dy50spns8xg6-7j93zg1t-4.rev.dnainternet.fi) (Remote host closed the connection)
[10:06:43] *** Joins: mattil (~mattil@dy50spns8xg6-7j93zg1t-4.rev.dnainternet.fi)
[10:07:58] *** Quits: slowButPresent (~slowButPr@user/slowbutpresent) (Quit: leaving)
[10:08:17] *** Quits: radu242407821 (~radu242@pool-96-250-79-242.nycmny.fios.verizon.net) (Ping timeout: 256 seconds)
[10:08:48] *** Joins: mattil_ (~mattil@helsinki.portalify.com)
[10:09:19] *** Quits: Darkcoal (~user@2001:16a2:766a:3200:174d:c1ee:c5ba:4bef) (Ping timeout: 268 seconds)
[10:11:57] *** Quits: mattil (~mattil@dy50spns8xg6-7j93zg1t-4.rev.dnainternet.fi) (Ping timeout: 240 seconds)
[10:21:46] * GumbyPAN CPAN Upload: ReturnValue-0.903 by BDFOY https://metacpan.org/release/BDFOY/ReturnValue-0.903
[10:30:02] *** Quits: geowiesnot (~user@5-51-190-244.abo.bbox.fr) (Ping timeout: 240 seconds)
[10:31:03] *** Quits: lispy (~lispy4@84.69.59.93) (Quit: Leaving)
[10:37:00] *** Quits: deadmarshal (~deadmarsh@95.38.116.147) (Ping timeout: 250 seconds)
[10:39:27] *** Quits: randir (~randir@95-26-4-13.broadband.corbina.ru) (Remote host closed the connection)
[10:40:02] *** Joins: randir (~randir@95-26-4-13.broadband.corbina.ru)
[10:40:57] *** Quits: veesh (~veesh@89.237.98.172) (Ping timeout: 240 seconds)
[10:44:49] *** Joins: deadmarshal (~deadmarsh@95.38.116.147)
[10:45:02] *** Quits: randir (~randir@95-26-4-13.broadband.corbina.ru) (Ping timeout: 240 seconds)
[10:45:22] *** Joins: radu242407821 (~radu242@pool-96-250-79-242.nycmny.fios.verizon.net)
[10:49:57] *** Quits: radu242407821 (~radu242@pool-96-250-79-242.nycmny.fios.verizon.net) (Ping timeout: 240 seconds)
[10:53:58] *** Joins: randir (~randir@93.159.239.42)
[10:54:49] *** Joins: andrzejku (~andrzejku@45-11-60-125.ip4.greenlan.pl)
[10:55:29] *** Joins: veesh (~veesh@89.237.100.231)
[11:08:00] *** Joins: TweetiePooh (~richard@cpc75386-sotn16-2-0-cust456.15-1.cable.virginm.net)
[11:08:37] *** Quits: rgrinberg (~textual@2806:101e:7:2b:9559:34ac:a49f:3b79) (Quit: My MacBook has gone to sleep. ZZZzzz…)
[11:17:12] *** Joins: haj (~haj@ip5f5beb98.dynamic.kabel-deutschland.de)
[11:18:11] *** Joins: SpiceMan (~Don_Spice@user/SpiceMan)
[11:28:11] *** Joins: tobybl (~tobybl@248.64.200.146.dyn.plus.net)
[11:32:01] *** Joins: KnoP (~KnoP@business-176-095-149-105.static.arcor-ip.net)
[11:34:54] <Mandevil> What should I do if I find a CPAN module that apparently does not work?
[11:35:09] <Mandevil> (if anything)
[11:35:36] <lopid> create an "issue" detailing the failure
[11:35:49] <lopid> or ask around first in case you're doing something wrong
[11:36:14] <Mandevil> I just ran the supplied example and the 'new' constructor does not even return the instance.
[11:37:12] <lopid> a missing requirement, etc?
[11:37:15] *** Quits: rindolf (~shlomif@inkscape/dev/shlomif) (Read error: Connection reset by peer)
[11:39:42] <Mandevil> There's no error, no dependencies listed.
[11:39:49] <Mandevil> Basically no documentation whatsoever.
[11:41:22] <vague> The synopsis isn't necessarily a working example. What module is it?
[11:41:33] <Mandevil> https://metacpan.org/pod/Crypt::Vigenere
[11:41:34] <Paperbot> Link title(s): [ Crypt::Vigenere - Perl implementation of the Vigenere cipher - metacpan.org ]
[11:44:58] <vague> The keyword has to be all lowercase
[11:45:25] <vague> But from looking at the module it's crap. What do you need it for?
[11:48:19] *** Joins: art1 (~romeyke@p200300ccdf048700ec82838af6c7fcd8.dip0.t-ipconnect.de)
[11:48:29] <Mandevil> To decrypt vignere encrypted text :)
[11:48:46] <Mandevil> I can write my own of course, I just thought I might use something that's already there.
[11:49:56] *** Joins: geowiesnot (~user@5-51-190-244.abo.bbox.fr)
[11:50:33] <Mandevil> Maybe this could a little project to learn how to write a proper publishable module
[11:54:14] <Mandevil> Probably not a good idea to use Moo for something this simple, right?
[11:54:34] *** Joins: rindolf (~shlomif@inkscape/dev/shlomif)
[11:55:24] <El_Che> if your style is OO, Moo is a good match
[11:55:38] <Mandevil> I mean something that would be published as a CPAN module.
[11:56:14] <El_Che> Moo is light on dependencies
[11:57:26] <Mandevil> Also what to call it when Crypt::Vigenere is taken?
[11:57:27] *** Joins: martinus__ (~martin@127.59.202.77.rev.sfr.net)
[11:58:01] <El_Che> Crypt::Vigenere++ (don't do that :) )
[11:58:17] <Mandevil> Crypt::Vigenere::ThisOneWorks
[11:58:33] *** Quits: SpiceMan (~Don_Spice@user/SpiceMan) (Read error: Connection reset by peer)
[11:58:46] <El_Che> Crypt::Vigenere::NoMonkeyBusiness
[11:59:12] *** Joins: SpiceMan (~Don_Spice@user/SpiceMan)
[12:01:46] <rindolf> Mandevil: https://www.shlomifish.org/humour/fortunes/show.cgi?id=sharp-perl-how-to-name-a-flickr-module ;]
[12:01:47] <Paperbot> Link title(s): [ How to name a new Flickr-module - Fortune ]
[12:04:14] <Mandevil> That was helpful.
[12:04:24] <Mandevil> I'll just go with Crypt::Vigenere2
[12:05:11] <El_Che> that's confusing
[12:05:31] <El_Che> it implies that you're the successor or rewrite of that module
[12:05:37] <El_Che> like the perl5-6 history
[12:06:36] <Mandevil> What should I call it then?
[12:06:40] <rindolf> Mandevil: you're welcome 
[12:10:02] <Mandevil> What about Cipher::Vigenere?
[12:14:40] <Mandevil> Or maybe Crypto::Cipher::Vigenere.
[12:17:25] *** Quits: geowiesnot (~user@5-51-190-244.abo.bbox.fr) (Ping timeout: 240 seconds)
[12:20:37] *** Joins: choroba (~E.Choroba@89-101-243-80.cust.centrio.cz)
[12:21:36] *** Joins: sprout (~quassel@2a02:a467:ccd6:1:8844:e45a:1aab:92c2)
[12:25:36] *** Quits: sprout_ (~quassel@2a02:a467:ccd6:1:5d8f:20db:5ddd:bcf4) (Ping timeout: 268 seconds)
[12:31:29] *** Joins: Manderson_ (manderson@gateway/vpn/protonvpn/manderson)
[12:34:29] *** Quits: Manderson (manderson@gateway/vpn/protonvpn/manderson) (Ping timeout: 256 seconds)
[12:38:37] *** Quits: ovid_ (~ovid@laubervilliers-659-1-13-124.w80-11.abo.wanadoo.fr) (Ping timeout: 240 seconds)
[12:39:15] *** Joins: mowcat (~mowcat@2a00:23c5:d190:1901:f22f:74ff:fe77:1e1c)
[12:41:17] *** Quits: Ovid (~Ovid@laubervilliers-659-1-13-124.w80-11.abo.wanadoo.fr) (Ping timeout: 256 seconds)
[12:41:50] *** Joins: Ovid (~Ovid@laubervilliers-659-1-13-124.w80-11.abo.wanadoo.fr)
[12:42:02] *** Quits: jmcgnh (~jmcgnh@wikipedia/jmcgnh) (Ping timeout: 240 seconds)
[12:42:17] *** Joins: fwg (~fwg@user/fwg)
[12:42:28] *** Joins: ovid_ (~ovid@laubervilliers-659-1-13-124.w80-11.abo.wanadoo.fr)
[12:48:56] *** Joins: Pali (~pali@user/pali)
[12:49:00] <lopid> Crypt::Vignere ("To decrypt vignere encrypted text :)")
[12:53:15] *** Joins: jmcgnh (~jmcgnh@wikipedia/jmcgnh)
[12:56:08] <vague> What would be the best way to add a proxied route to my hypnotoad app? I want to forward a specific route with optional additional paths to a non-public server 
[12:56:55] *** Quits: mowcat (~mowcat@2a00:23c5:d190:1901:f22f:74ff:fe77:1e1c) (Remote host closed the connection)
[12:59:49] *** Joins: ovid__ (~ovid@2a01:cb16:2046:7c60:a8e2:ea9a:5e21:854b)
[13:02:36] *** Quits: ovid_ (~ovid@laubervilliers-659-1-13-124.w80-11.abo.wanadoo.fr) (Ping timeout: 250 seconds)
[13:02:52] *** Joins: tirnanog (~tirnanog@user/tirnanog)
[13:03:46] *** Joins: Jonis (~jonis@jonis.no)
[13:18:32] <Mandevil> sweval: 'î' =~ /[A-Z]/i
[13:18:34] <perlbot> Mandevil: No output.
[13:18:57] <Mandevil> sweval: 'î' =~ /[A-Z]/i && say 'MATCH'
[13:18:59] <perlbot> Mandevil: No output.
[13:19:09] <Mandevil> sweval: 'î' !~ /[A-Z]/i && say 'MATCH'
[13:19:10] <perlbot> Mandevil: MATCH 
[13:22:03] <Mandevil> My naive Vigenere encoder... https://l.perl.bot/p/kgldng
[13:22:04] <Paperbot> Link title(s): [ Perlbot Pastebin ]
[13:23:15] *** Joins: mowcat (~mowcat@2a00:23c5:d190:1901:f22f:74ff:fe77:1e1c)
[13:23:48] *** Quits: pucara (~i@host14.181-1-101.telecom.net.ar) (Quit: Lost terminal)
[13:27:10] <choroba> Mandevil: http://blogs.perl.org/users/e_choroba/2019/07/perl-weekly-challenge-015-strong-and-weak-primes-and-vigenere-cipher.html
[13:27:10] <Paperbot> Link title(s): [ Perl Weekly Challenge 015: Strong and Weak Primes, and Vigenère Cipher | E. Choroba [blogs.perl.org] ]
[13:29:45] <Mandevil> Much more compact :)
[13:31:33] <Mandevil> But you only work with uppercase, right?
[13:34:55] <choroba> I don't even remember :)
[13:35:28] <Mandevil> Also repeated calls always start at pos 0 in the key.
[13:42:32] <choroba> that's true, and to be able to store the position between calls, you need to change the underlying representation, as a scalar ref can't store the key and the position :)
[13:43:21] <Mandevil> Understood :)
[13:44:09] <Mandevil> I also take care to preserve case and skip anything that's not A-Z.
[13:44:46] <Mandevil> Wonder if I should ditch Moo and just bless a hashref.
[13:51:53] *** Quits: diskin (~diskin@ec2-3-124-171-230.eu-central-1.compute.amazonaws.com) (Read error: Connection reset by peer)
[13:53:38] *** Joins: diskin (~diskin@87.117.57.45)
[13:54:35] <Mandevil> https://l.perl.bot/p/wz32ob ... the same thing, but now without Moo (also generalized the code to do both en/de-cryption)
[13:54:35] <Paperbot> Link title(s): [ Perlbot Pastebin ]
[13:55:54] *** Quits: vanessa (~annada@103.160.128.7) (Ping timeout: 250 seconds)
[13:57:39] *** diskin is now known as Guest4525
[13:57:39] *** Joins: diskin_ (~diskin@ec2-18-158-74-148.eu-central-1.compute.amazonaws.com)
[13:57:39] *** Quits: Guest4525 (~diskin@87.117.57.45) (Killed (molybdenum.libera.chat (Nickname regained by services)))
[13:57:39] *** diskin_ is now known as diskin
[13:57:54] *** Joins: vanessa (~annada@103.160.128.7)
[14:06:30] *** Joins: grumble (grumble@user/grumble)
[14:08:16] <grumble> Hi, I've found that a perl application I use interpolates untrusted user-supplied strings into regular expressions, as in it does a "$userSuppliedValue =~ m/$anotherUserSuppliedValue/"
[14:09:34] <grumble> This seems like a really bad idea to me. But I don't know enough about perl to know how bad exactly. Surely there's a denial of service vuln buried there - but is there anything worse than that?
[14:10:20] <grumble> (if there is a RCE in there, I need definitely need to annoy the vendor and have them fix it)
[14:10:29] <tirnanog> one cannot say without context. in any case, it might be better written as m/\Q$anotherUserSuppliedValue/.
[14:10:38] <Mandevil> quotemeta
[14:11:08] <eseyman> yes, it really depends on what the application later does with each value
[14:11:54] <grumble> the regex match is only used in a conditional. So the only attack vector is regex matching itself 
[14:12:06] <Botje> grumble: if you're thinking of ??{...}, that only works if embedded in the code, not when interpolated
[14:12:18] *** Quits: mowcat (~mowcat@2a00:23c5:d190:1901:f22f:74ff:fe77:1e1c) (Remote host closed the connection)
[14:12:50] <Botje> sweval: my $evil = q(??{say "hi there";}); /$evil/
[14:12:51] <perlbot> Botje: ERROR: Quantifier follows nothing in regex; marked by <-- HERE in m/? <-- HERE ?{say "hi there";}/ at (IRC) line 1. 
[14:13:16] <Botje> sweval: my $evil = q((??{say "hi there";})); /$evil/
[14:13:18] <perlbot> Botje: ERROR: Eval-group not allowed at runtime, use re 'eval' in regex m/(??{say "hi there";})/ at (IRC) line 1. 
[14:13:40] <grumble> Botje: I don't know a lot about specific regex features - which is why I'm asking if there's an RCE in that.  Basically, in the end I need to decide how much pressure to put on the vendor to fix it :)
[14:14:15] <Botje> grumble: user-supplied regexes can be a feature as well.
[14:14:54] <tirnanog> grumble: considered purely in isolation, there is no RCE.
[14:15:04] <Botje> but no, it's only a potential DoS.
[14:15:26] <Botje> (basically enforcing infinite backtracking)
[14:15:34] <Botje> and that can be alleviated by switching regex engines, if you must.
[14:20:35] <grumble> I see, thanks
[14:34:40] *** Joins: geowiesnot (~user@5-51-190-244.abo.bbox.fr)
[14:51:33] <aquanight> if use re 'eval'; is in effect, RCE becomes possible
[14:52:11] <aquanight> but it's certainly not something that should be left like that either way
[14:52:18] <aquanight> hm.
[14:53:16] <aquanight> sweval: use Inline C => q{ void make_evil(SV* sv) { TAINTING_set(TRUE); TAINT_WARN_set(FALSE); sv_taint(sv); } }; my $x = "e"; make_evil($x); my $y = "evil"; [ $y =~ /$x/ ];
[14:53:25] <perlbot> aquanight: [1]
[14:53:30] <aquanight> ...
[14:53:38] <aquanight> perl why
[14:53:48] <aquanight> sweval: use re 'eval'; use Inline C => q{ void make_evil(SV* sv) { TAINTING_set(TRUE); TAINT_WARN_set(FALSE); sv_taint(sv); } }; my $x = "e"; make_evil($x); my $y = "evil"; [ $y =~ /$x/ ];
[14:53:51] <perlbot> aquanight: [1]
[14:53:55] <aquanight> PERL WHY
[14:54:17] <aquanight> sweval: use re 'eval'; use Inline C => q{ void make_evil(SV* sv) { TAINTING_set(TRUE); TAINT_WARN_set(FALSE); sv_taint(sv); } }; my $x = "e(?{say 'boo'})"; make_evil($x); my $y = "evil"; [ $y =~ /$x/ ];
[14:54:20] <perlbot> aquanight: ERROR: Eval-group in insecure regular expression at (IRC) line 1. 
[14:54:31] <aquanight> that's.... a little better
[14:58:00] *** Quits: tirnanog (~tirnanog@user/tirnanog) (Quit: = "")
[15:12:06] *** Quits: geowiesnot (~user@5-51-190-244.abo.bbox.fr) (Ping timeout: 268 seconds)
[15:16:18] * GumbyPAN CPAN Upload: Lang-HL-1.007 by RAJ https://metacpan.org/release/RAJ/Lang-HL-1.007
[15:19:36] *** Joins: leitz (~LeamHall@072-182-158-027.res.spectrum.com)
[15:21:00] *** Quits: andrzejku (~andrzejku@45-11-60-125.ip4.greenlan.pl) (Read error: Connection reset by peer)
[15:30:24] *** Quits: csrf (~csrf@user/csrf) (Quit: ZNC 1.7.2+deb3 - https://znc.in)
[15:31:09] *** Joins: csrf (~csrf@user/csrf)
[15:33:53] *** Joins: azed (~azed@197.16.189.73)
[15:34:57] *** Quits: veesh (~veesh@89.237.100.231) (Ping timeout: 240 seconds)
[15:35:06] *** Joins: veesh (~veesh@89.237.98.224)
[15:38:02] *** Joins: andrzejku (~andrzejku@45-11-60-125.ip4.greenlan.pl)
[15:44:11] *** Quits: andrzejku (~andrzejku@45-11-60-125.ip4.greenlan.pl) (Read error: Connection reset by peer)
[15:53:02] *** Joins: XV8 (~XV8@2601:5cb:c001:50:7138:38eb:1e16:f288)
[15:58:29] *** Quits: jmdaemon (~jmdaemon@user/jmdaemon) (Ping timeout: 256 seconds)
[16:18:19] *** Quits: przemoc (~przemoc@89-72-24-4.dynamic.chello.pl) (Ping timeout: 256 seconds)
[16:18:46] *** Quits: yano (~yano@ircpuzzles/staff/yano) (Quit: WeeChat, the better IRC client, https://weechat.org/)
[16:19:07] *** Joins: przemoc (~przemoc@89-72-24-4.dynamic.chello.pl)
[16:19:07] *** Quits: przemoc (~przemoc@89-72-24-4.dynamic.chello.pl) (Changing host)
[16:19:07] *** Joins: przemoc (~przemoc@user/przemoc)
[16:20:16] *** Joins: proller (~p@2a02:6b8:0:40c:9cfc:cea6:bb70:e1d9)
[16:20:52] *** Joins: yano (~yano@ircpuzzles/staff/yano)
[16:26:03] *** Quits: Rich_ (~rich@nakts.net) (Ping timeout: 256 seconds)
[16:26:38] *** Joins: xenial-user10 (~androirc@3EC97C6F.catv.pool.telekom.hu)
[16:31:39] *** Joins: Richlv (~rich@nakts.net)
[16:33:17] <Mandevil> Is there any guideline on what should be in a POD?
[16:34:37] <vague> perldoc perlpod
[16:34:37] <perlbot> vague: Your documentation is available at: https://perldoc.perl.org/perlpod
[16:34:42] <ilmari> perldoc perlpodstyle
[16:34:43] <perlbot> ilmari: Your documentation is available at: https://perldoc.perl.org/perlpodstyle
[16:35:29] <ilmari> perlpod is just the syntax, style is how to document scripts and modules
[16:37:16] <Mandevil> Thanks!
[16:37:27] <Mandevil> BTW, are non-ascii chars supported?
[16:37:46] <Mandevil> I wanted to write Vigenère and it complains.
[16:40:52] <Jonis> looks like the official perl docker images have not been updated in a while
[16:41:16] <ilmari> official?
[16:41:44] <Jonis> https://hub.docker.com/_/perl they're marked as official at least
[16:41:45] <Paperbot> Link title(s): [ Docker Hub ]
[16:42:25] <Jonis> however, they're a month out of date and the libc version contains 5 CVEs
[16:43:35] <ilmari> ah, https://github.com/Perl/docker-perl. raise an issue there
[16:43:35] <Paperbot> Link title(s): [ GitHub - Perl/docker-perl: Dockerfiles for index.docker.io (official Perl Docker image) ]
[16:44:27] <ilmari> I don't know if/where/who they are on IRC
[16:44:51] <ilmari> https://github.com/orgs/Perl/teams/docker-team/members
[16:44:51] <Paperbot> Link title(s): [ Sign in to GitHub · GitHub <https://github.com/login?return_to=https%3A%2F%2Fgithub.com%2Forgs%2FPerl%2Fteams%2Fdocker-team%2Fmembers> ]
[16:46:02] <ilmari> oh, you have to be a member of the org to see that? zak b. elep (zakame) and peter martini
[16:46:31] <Jonis> thanks :)
[16:50:32] *** Joins: monkey_` (~user@190.104.116.153)
[16:51:01] *** Joins: andrzejku (~andrzejku@45-11-60-125.ip4.greenlan.pl)
[16:54:54] *** Quits: monkey_` (~user@190.104.116.153) (Remote host closed the connection)
[16:57:35] <genio> Welp. I'm off to the doc to see if they can turn me into a cyborg and give me a new knee.
[16:57:44] <genio> One step closer to "murderbot"
[16:58:24] <vague> Do they have to turn you into a cyborg before they can you a new leg?
[17:00:45] <ilmari> genio: break a leg!
[17:08:52] <Botje> what the hell docker
[17:08:59] <Botje> "log4shell CVE not detected"
[17:09:10] <Botje> why are you putting that on obviously not-Java container images. where does it stop?
[17:09:45] <Botje> Jonis: and are the CVEs in system binaries that you just .. should not use?
[17:10:27] *** Quits: pieguy128 (~pieguy128@bras-base-mtrlpq5031w-grc-52-65-93-194-105.dsl.bell.ca) (Ping timeout: 256 seconds)
[17:13:01] <mmlj4> genio: will they let you choose which knee to replace?
[17:13:32] *** Quits: azed (~azed@197.16.189.73) (Quit: WeeChat 3.4)
[17:13:42] <mmlj4> I'd write NOT THIS ONE with a fat sharpie the night before
[17:13:55] *** Joins: pieguy128 (~pieguy128@bas1-montreal02-65-92-163-251.dsl.bell.ca)
[17:14:00] <simcop2387> Mandevil: all those documents being said, it's all just convention.  there's no real precscriptionist agenda/version of it all.
[17:14:04] <Botje> and then the "NOT" gets erased
[17:14:29] <simcop2387> get it tattooed to be safe
[17:14:45] <sysdef> NOT == notice of target
[17:16:20] <Mandevil> From perlnewmod ... --email=yourname@cpan.org ... what do they mean by @cpan.org?
[17:16:29] <Mandevil> That I need a @cpan.org e-mail address?
[17:17:08] <sysdef> optional i guess. a cpan address is a good spam relay :/
[17:17:38] <simcop2387> Mandevil: when you get a PAUSE account, it also sets up ${PAUSE_ACCOUT}@cpan.org as a forwarding address to your registered email
[17:17:46] <Mandevil> Ah
[17:18:07] <simcop2387> so my pause account name is SIMCOP, so simcop@cpan.org forwards to my real email of simcop2387@simcop2387.info
[17:18:22] <Mandevil> Testing ... :)
[17:18:42] <Mandevil> Indeed, works.
[17:18:43] <simcop2387> odds are good it'll get spam filtered.  i get all kinds of russian crypto scams lately to it
[17:18:45] <LeoNerd> simcop2387: Heh, you of think yourself as informative? I'm more organised myself, at leonerd.org.uk
[17:18:48] <huf> your real email looks more fake than the real one :D
[17:18:59] <huf> err, the fake one
[17:19:38] <simcop2387> LeoNerd: simcop2387@simcop2387.{info,com,org,net} all go to the same place, as does ryan@voots.org
[17:20:01] <simcop2387> i can't get reliable forwarding working though for simcop2387@hotmail.com or simcop2387@yahoo.com or simcop2387@aol.com though
[17:20:05] *** Joins: otisolsen70 (~otisolsen@xd4ed80b5.cust.hiper.dk)
[17:20:07] <rindolf> huf: heh. ++huf
[17:20:22] <simcop2387> might give that a try again now that i have to fuck with all my gsuite stuff.
[17:21:40] <simcop2387> which reminds me, if you use a free gsuite account from before they ended that program in 2012, get your shit together.  they're killing them off on June 1st 2022.  Switch to paid "Google Workspace" to keep things, or check out the migration advice over on https://old.reddit.com/r/gsuite/
[17:21:41] <Paperbot> Link title(s): [ Google Workspace (G Suite) ]
[17:22:25] <Botje> they'll just start charging for it
[17:22:29] <simcop2387> I've got two accounts that are actually used on my setup, mine and my nephew.  so i'll likely end up just paying the $6/mo each for us for the time being while i figure out if/what i want to do elsewise
[17:22:39] <huf> err, what is gsuite?
[17:22:41] <huf> :D
[17:22:43] <Botje> I'm in a similar situation but I'm happy with it.
[17:22:43] <simcop2387> Botje: yes that's what the paid google workspace stuff is
[17:23:23] <simcop2387> huf: gsuite is what they used to call the google apps for business stuff up until 2020, then they renamed it google workspaces.
[17:23:37] <huf> oh
[17:24:24] <simcop2387> they had a free program for small non-commercial users way way back in the early 2000s, but that's basically over now.
[17:24:38] <simcop2387> well they stopped it in 2012 anyway
[17:24:41] *** Quits: deadmarshal (~deadmarsh@95.38.116.147) (Ping timeout: 268 seconds)
[17:25:04] *** Joins: deadmarshal (~deadmarsh@95.38.112.231)
[17:26:55] <LeoNerd> Mm.. new server day. Time to build every perl release from 5.8 to 5.34...
[17:27:23] <simcop2387> Botje: what i find interesting to me is the price point.  places like fastmail are $5/mo/user, but workspaces gives you mail, drive, etc. for $6/mo/user.  i know my nephew uses drive a lot for school and i use it sometimes too.  so it's either go straight to gmail, or it's basically the same cost as just email hosting at lots of places.
[17:27:47] <simcop2387> LeoNerd: have fun :)  don't forget to also build threaded versions since that changes performance and behavior in a few ways
[17:28:21] <LeoNerd> Yeah, I try to fairly randomly pick some thready ones in the middle... 
[17:28:37] *** Quits: EvanCarroll (~ecarroll@68-78-105-35.lightspeed.hstntx.sbcglobal.net) (Ping timeout: 240 seconds)
[17:29:26] <simcop2387> i'm hoping that raspberry pi 4s start coming down in price again.  i want to get 4-6 4gb ones to setup a small cluster on my rack that is just there to do some CI stuff and run against most if not all perl versions
[17:29:29] *** Quits: mattil_ (~mattil@helsinki.portalify.com) (Remote host closed the connection)
[17:30:02] *** Joins: mattil (~mattil@helsinki.portalify.com)
[17:30:06] <LeoNerd> I wonder how that compares in speed/price/ease, with digitalocean
[17:31:09] *** Quits: mattil (~mattil@helsinki.portalify.com) (Remote host closed the connection)
[17:31:13] <mmlj4> I have found Pis and compiling really hate each other
[17:31:19] <mmlj4> so, good luck with that
[17:31:22] *** Joins: mattil (~mattil@helsinki.portalify.com)
[17:31:26] *** Quits: mattil (~mattil@helsinki.portalify.com) (Read error: Connection reset by peer)
[17:31:32] * GumbyPAN CPAN Upload: Future-AsyncAwait-0.56 by PEVANS https://metacpan.org/release/PEVANS/Future-AsyncAwait-0.56
[17:31:59] *** Joins: mattil (~mattil@helsinki.portalify.com)
[17:34:18] <simcop2387> LeoNerd: cost wise it'd probably be the same over a long enough term, or better.  speed wise i'm not sure.
[17:35:01] <simcop2387> mmlj4: it's the IO speed that does it.  give it a fast ssd over usb to boot off of and they're fine.  sd card however and you're insane.  i plan to do network disk though, full 1gb for each one to my server (which has 10gbe) 
[17:35:10] <simcop2387> that way there's no disk to wear out either
[17:37:32] *** Quits: pieguy128 (~pieguy128@bas1-montreal02-65-92-163-251.dsl.bell.ca) (Ping timeout: 240 seconds)
[17:37:38] *** Quits: mattil (~mattil@helsinki.portalify.com) (Ping timeout: 268 seconds)
[17:37:39] <mmlj4> ah.
[17:37:54] <Jonis> OBOB
[17:38:13] <Jonis> sorry, wasn't in buffer that I could see
[17:38:36] <simcop2387> Jonis: just blame a cat
[17:38:37] <Jonis> Botje: CVEs are in libc-dev
[17:39:07] <Jonis> simcop2387: good point, must have been the cat
[17:39:47] *** Joins: morte_ (~user@190.104.116.153)
[17:40:38] *** Joins: EvanCarroll (~ecarroll@68-78-105-35.lightspeed.hstntx.sbcglobal.net)
[17:42:01] *** Joins: mattil (~mattil@dy50spnp8pk0t1wvqjkzy-4.rev.dnainternet.fi)
[17:45:21] *** Quits: mattil (~mattil@dy50spnp8pk0t1wvqjkzy-4.rev.dnainternet.fi) (Remote host closed the connection)
[17:45:49] *** Joins: mattil (~mattil@dy50spnp8pk0t1wvqjkzy-4.rev.dnainternet.fi)
[17:48:49] *** Joins: pieguy128 (~pieguy128@bas8-montreal02-65-93-195-202.dsl.bell.ca)
[17:50:20] *** Quits: mattil (~mattil@dy50spnp8pk0t1wvqjkzy-4.rev.dnainternet.fi) (Ping timeout: 250 seconds)
[17:52:05] *** Joins: deadmarshal_ (~deadmarsh@95.38.116.86)
[17:52:23] *** Quits: deadmarshal (~deadmarsh@95.38.112.231) (Ping timeout: 256 seconds)
[17:53:58] *** Joins: mattil (~mattil@dy50spnp8pk0t1wvqjkzy-4.rev.dnainternet.fi)
[17:56:45] <simcop2387> https://www.omeowgle.com/web/@buzz/107689226125844682 # morning windowsill
[17:56:46] <Paperbot> Link title(s): [ Buzz "Light-year" Aldrin: "" - Omeowgle <https://www.omeowgle.com/@buzz/107689226125844682> ]
[18:01:35] * GumbyPAN CPAN Upload: OPM-Maker-1.16 by PERLSRVDE https://metacpan.org/release/PERLSRVDE/OPM-Maker-1.16
[18:05:49] *** Quits: mattil (~mattil@dy50spnp8pk0t1wvqjkzy-4.rev.dnainternet.fi) (Remote host closed the connection)
[18:06:17] *** Joins: mattil (~mattil@dy50spnp8pk0t1wvqjkzy-4.rev.dnainternet.fi)
[18:06:46] <revhippie> simcop2387: does he "chatter" at birds?
[18:07:12] *** Quits: rindolf (~shlomif@inkscape/dev/shlomif) (Read error: Connection reset by peer)
[18:07:17] <simcop2387> revhippie: not that i've seen or heard yet, but the only birds he has a chance to see are on his laptop, which he pounces on and attacks
[18:07:36] <simcop2387> i'm trying to train him to accept a harness to go walking around so that might end up different
[18:07:52] *** Joins: gast0n (~g4570n@user/gast0n)
[18:09:54] <revhippie> i haven't had luck w/ harnesses, but i'm not good at training.
[18:10:37] *** Quits: mattil (~mattil@dy50spnp8pk0t1wvqjkzy-4.rev.dnainternet.fi) (Ping timeout: 240 seconds)
[18:11:30] <Mandevil> Our cat used to be reasonable on harness: https://voyager.lupomesky.cz/fotky/kocky/148/
[18:11:31] <Paperbot> Link title(s): [ Gallery ]
[18:14:29] *** Quits: gast0n (~g4570n@user/gast0n) (Ping timeout: 256 seconds)
[18:16:39] <buZz> i housetrained a rabbit once with only ammonia (to mark where he peed in wrong locations) and love
[18:16:47] <buZz> he was my biggest fan
[18:17:20] <Mandevil> So I uploaded a file to CPAN... but "show my files" on PAUSE shows nothing... I guess it takes time?
[18:18:00] <Mandevil> Oh, it shows now.
[18:18:07] <LeoNerd> A few minutes at least. Recheck in 20mins or so if it's not there
[18:18:25] <Mandevil> Also, I thought there will be some form... how do I specify git repo for example?
[18:19:27] <simcop2387> yea it's been slow getting him used to a harness, he doesn't panic as much now but he's not quite ready to actually go out or leave it on for any appreciable time
[18:20:16] <simcop2387> i'm hoping that once we actually get outside the first time it'll be a eureka moment and be a lot easier.  it'll also make him easier to handle at the vet and groomers
[18:21:02] <Mandevil> It depends on the cat.
[18:21:12] <Mandevil> One of our cats was nevery happy outside.
[18:21:28] <choroba> Mandevil: https://github.com/choroba/syntactic-construct/blob/master/Makefile.PL#L26
[18:21:28] <Paperbot> Link title(s): [ syntactic-construct/Makefile.PL at master · choroba/syntactic-construct · GitHub ]
[18:21:37] * GumbyPAN CPAN Upload: Crypt-Cipher-Vigenere-0.01 by BOREKL https://metacpan.org/release/BOREKL/Crypt-Cipher-Vigenere-0.01
[18:21:39] <simcop2387> my old cat didn't need one.  she would only stay near me when out, and we'd only go out to get the mail.  she didn't really want to escape or roam
[18:22:04] <simcop2387> i'm hoping harness and outside for a bit will let me do the same with him, but we'll see.
[18:22:09] <Mandevil> choroba: OMG... how could I know?
[18:24:39] *** Joins: rindolf (~shlomif@inkscape/dev/shlomif)
[18:24:56] <Mandevil> Huh, my upload didn't turn out as intended... there's no POD page.
[18:26:07] <Mandevil> Or will it be created later?
[18:26:08] <haarg> missing a =head1 NAME section
[18:26:44] <Mandevil> WTF? I used Git::Critic as my template.
[18:26:47] <Mandevil> And it doesn't have it.
[18:27:41] <haarg> Git::Critic uses Dist::Zilla, configured with PodWeaver
[18:27:56] <haarg> which adds the NAME section and other things
[18:28:09] <Mandevil> Exciting
[18:29:37] *** Quits: japh (~scp1@user/japh) (Ping timeout: 240 seconds)
[18:31:38] *** Joins: japh (~scp1@user/japh)
[18:32:12] *** Joins: jgaz (~jgaz@2600:8805:d980:7620::9e0)
[18:34:20] <simcop2387> he's lickikng his cat bed...
[18:34:31] <simcop2387> like grooming it his cat bed
[18:36:16] <Mandevil> choroba: That META_MERGE stuff... where it comes from? I'm getting errors when trying to use that.
[18:36:46] <Mandevil> Oh, it's defined in the makefile itself
[18:44:30] *** Joins: mattil (~mattil@helsinki.portalify.com)
[18:46:40] * GumbyPAN CPAN Upload: Crypt-Cipher-Vigenere-0.02 by BOREKL https://metacpan.org/release/BOREKL/Crypt-Cipher-Vigenere-0.02
[18:48:20] <Mandevil> Why does it not show as https://metacpan.org/pod/Crypt::Cipher::Vigenere
[18:48:21] <Mandevil> ?
[18:50:32] <choroba> it takes some time
[18:50:55] <Mandevil> No problem, just wanted to know if I screwed something else.
[18:51:04] <ology> heh
[18:56:41] * GumbyPAN CPAN Upload: Koha-Contrib-ValueBuilder-RepeatableAutocomplete-1.001 by DOMM https://metacpan.org/release/DOMM/Koha-Contrib-ValueBuilder-RepeatableAutocomplete-1.001
[19:00:32] *** Quits: ferz (~ferz@93-39-143-61.ip76.fastwebnet.it) (Ping timeout: 250 seconds)
[19:00:57] *** Joins: mattil_ (~mattil@helsinki.portalify.com)
[19:04:00] *** Quits: mattil (~mattil@helsinki.portalify.com) (Ping timeout: 250 seconds)
[19:04:47] <LeoNerd> https://leonerds-code.blogspot.com/2022/01/perl-in-2022-yearly-update.html
[19:04:48] <Paperbot> Link title(s): [ LeoNerd's programming thoughts: Perl in 2022 - A Yearly Update ]
[19:05:17] *** Quits: mattil_ (~mattil@helsinki.portalify.com) (Ping timeout: 240 seconds)
[19:05:55] *** Joins: vyv (~vyv@bras-vprn-nrbaon0452w-lp130-16-76-68-64-112.dsl.bell.ca)
[19:08:26] <ilmari> huh, when did builtin:: gain floor/ceil?
[19:09:08] <japh> I thought we already had ceil etc... or did I use a module for that in the past? :s
[19:09:13] <ilmari> POSIX
[19:09:23] <japh> ah, right, yes
[19:09:34] <LeoNerd> ilmari: Someone wrote them last week. Surprised me :)
[19:09:47] <LeoNerd> Someone !me wrote it, so all I had to do was approve the PR :) Made it much easier for me
[19:10:20] <LeoNerd> https://github.com/Perl/perl5/pull/19360
[19:10:21] <Paperbot> Link title(s): [ Add ceil & floor to builtin by JRaspass · Pull Request #19360 · Perl/perl5 · GitHub ]
[19:11:42] * GumbyPAN CPAN Upload: Jacode4e-2.13.6.19 by INA https://metacpan.org/release/INA/Jacode4e-2.13.6.19
[19:11:42] * GumbyPAN CPAN Upload: Jacode4e-RoundTrip-2.13.81.12 by INA https://metacpan.org/release/INA/Jacode4e-RoundTrip-2.13.81.12
[19:13:45] <japh> anyone care to explain what's happening here? https://github.com/Perl/perl5/pull/19360/commits/2c5ae89cd60cf2760928587ada27f1783b8350ac#diff-a70d20047abcfcd3faacb266bd4822a5816fb7fea1754e2fcc14fc18cc13c426R7329
[19:13:46] <Paperbot> Link title(s): [ Add ceil & floor to builtin by JRaspass · Pull Request #19360 · Perl/perl5 · GitHub ]
[19:14:33] *** Quits: gordonfish[m] (~gordonfis@user/gordonfish) (Quit: Client limit exceeded: 20000)
[19:14:35] <JRaspass> Did I do something wrong?
[19:14:49] *** Joins: gordonfish[m] (~gordonfis@user/gordonfish)
[19:15:07] <JRaspass> I had to look up the n suffixed macros, but they appear to do the right thing, handle magic etc
[19:15:08] <japh> No. I just don't know what that's doing :)
[19:15:59] *** Joins: ferz (~ferz@93-39-143-61.ip76.fastwebnet.it)
[19:16:23] <LeoNerd> Which bit in particular?
[19:16:42] <ilmari> japh: it pops the argument off the stack and extracts the NV value from it, then it pushes the returned NV onto the stack to be returned
[19:17:06] <JRaspass> And the target stuff is an optimisation where it can write directly into the rvalue iirc
[19:17:08] <LeoNerd> JRaspass: 
[19:17:10] <LeoNerd> er..
[19:17:53] <LeoNerd> JRaspass: The various macros for getting/setting values are always annoying to use... some of them do magic by default but have a "_nomg" variant which doesn't; others don't handle magic and have a "_mg" which does. Which means whenever you see the unsuffixed version you have to Just Know. :?
[19:18:22] <JRaspass> the test proves a tied nv works at least
[19:18:28] <LeoNerd> Yah, your impl does it correctly
[19:18:39] <LeoNerd> It's just nonobvious from reading the code alone, that it's correct
[19:19:02] <JRaspass> and the popn does nvx or something so it only evaluates the pop once
[19:19:30] <JRaspass> there's like 4+ layers of macros going on, but that's core perl in my experience :-P
[19:19:32] <LeoNerd> Ohgod that brings back terrible memories of SvTRUE(POPs)
[19:19:37] <LeoNerd> Hint: don't do that.
[19:20:05] <JRaspass> maybe some of these macros ought to be inlinable functions these days
[19:20:17] <LeoNerd> Yeah
[19:20:29] <simcop2387> assuming that C89 supports inlining functions :(
[19:20:37] <JRaspass> we're 99 now aren't we?
[19:20:39] <LeoNerd> Yup
[19:20:59] <simcop2387> oh that actually happened finally? i remember someone talking about doing it finally but didn't realize it actually happened this time
[19:21:32] <simcop2387> i just kinda tuned it out and assumed it'd be like all the other times
[19:21:43] * GumbyPAN CPAN Upload: MIDI-Bassline-Walk-0.0306 by GENE https://metacpan.org/release/GENE/MIDI-Bassline-Walk-0.0306
[19:22:32] <LeoNerd> We surveyed it much and found that there's no longer anything in the way
[19:22:58] <LeoNerd> Last time we looked there were some old Windows C compilers that didn't support it, but we no longer support those for unrelated reasons; so everything that is supported now handles C99
[19:23:41] *** Quits: randir (~randir@93.159.239.42) (Remote host closed the connection)
[19:24:18] *** Joins: randir (~randir@93.159.239.42)
[19:24:51] *** Joins: rgrinberg (~textual@2806:101e:7:2b:9559:34ac:a49f:3b79)
[19:25:26] <simcop2387> nice
[19:25:41] <JRaspass> Next step, one of the 2x stds ;-)
[19:25:59] <LeoNerd> I haven't been keeping up with C as much lately... what's new in those that might be useful?
[19:26:05] *** Quits: randir (~randir@93.159.239.42) (Remote host closed the connection)
[19:26:10] <JRaspass> No idea, I'm a Perl dev not a C dev haha
[19:26:11] <simcop2387> there's a lot of cleanup that can happen from that, and yea the inlining stuff and things like that.  heck just the better struct initilizers (i think that was in c99 wasn't it?) should make for some cleaner code
[19:26:27] <simcop2387> LeoNerd: if the struct initializers didn't make it into c99 then them.
[19:26:28] <LeoNerd> Yes, named field initialisers. I use those a lot in some CPAN modules
[19:26:40] *** Joins: randir (~randir@93.159.239.42)
[19:26:41] <LeoNerd> XS::Parse::Keyword uses them extensively
[19:27:11] *** Quits: KnoP (~KnoP@business-176-095-149-105.static.arcor-ip.net) (Quit: ChatZilla 0.10 [SeaMonkey 2.53.10.2/20211221193415])
[19:27:14] <JRaspass> oh #elifdef and #elifndef is quite nice for CPP
[19:27:23] <LeoNerd> elifdef!!
[19:27:53] <simcop2387> best to skip C11 for C17 (which is just a bugfix) but to those, https://en.wikipedia.org/wiki/C11_(C_standard_revision) has a decent overview
[19:27:53] <Paperbot> Link title(s): [ C11 (C standard revision) - Wikipedia ]
[19:28:21] <JRaspass> Heh I was reading https://en.wikipedia.org/wiki/C2x even newer :-P
[19:28:21] <Paperbot> Link title(s): [ C2x - Wikipedia ]
[19:28:48] <simcop2387> static asserts, and bounds checking would be useful, but largely i don't see anything else that'd be effective for perl to use really
[19:29:57] <LeoNerd> Yeah I feel a lot of the later C additions aren't that interesting, honestly. They're mostly new features that would be useful for writing actual applications - but who is writing real applications in C in 2022?
[19:30:11] *** Joins: gast0n (~g4570n@user/gast0n)
[19:30:14] <LeoNerd> The only times I write selfcontained standalone C programs are when I'm building them for 8bit AVR microcontrollers
[19:30:21] <simcop2387> one thing from C2x might be unnamed parameters in functions, for helping handle deprecations
[19:30:23] <LeoNerd> ... oh, except I might try writing one on the Pi Pico sometime
[19:30:42] <LeoNerd> But still - tiny microcontrollers, not big systems
[19:30:57] *** Quits: randir (~randir@93.159.239.42) (Ping timeout: 240 seconds)
[19:31:14] <simcop2387> C2x actually might break stuff in perl.  it removes the old K&R style function definitions
[19:31:30] <LeoNerd> *gasp*
[19:31:34] <LeoNerd> Do we still use those anywhere?
[19:31:39] <JRaspass> it'll be a long time if ever before a compiler defaults to it though, i presume
[19:31:43] <simcop2387> LeoNerd: i bet cpan does
[19:32:09] <simcop2387> JRaspass: yea but it'd probably be a blocker for perl picking it as a requirement too.  
[19:32:17] <JRaspass> Ah true
[19:32:47] <simcop2387> i really need to get my fucking full cpan tester running.  i'm kinda curious what'd happen by forcing it to C2x
[19:33:14] <JRaspass> 💥
[19:33:41] <simcop2387> perlbot: utf8 💥
[19:33:42] <perlbot> simcop2387: U+1F4A5 (f0 9f 92 a5): COLLISION SYMBOL [💥] 
[19:33:47] <simcop2387> huh didn't render here
[19:33:54] <LeoNerd> WFM ;)
[19:34:01] <JRaspass> ah, i'm using convos, works for me
[19:34:11] <simcop2387> yea probably just a missing font for me
[19:34:39] <simcop2387> yea works in firefox for me too.  gotta be a terminal/font issue
[19:34:49] <ilmari> WFM with gnome-terminal + noto color emoji
[19:35:06] <JRaspass> Don't see a lot of emojis in irc
[19:35:18] <ilmari> 👋
[19:35:23] <simcop2387> hrm, i have noto color emoji.  must be konsole/kterminal
[19:35:51] *** Joins: bbrtj (~bbrtj@185.24.91.138)
[19:36:39] <simcop2387> if i can ever find a replacement as nice as yakuake then i might switch but until then i'll deal with it
[19:36:44] * ology 🐒 
[19:36:46] <ology> 🧠
[19:37:03] <ology> oof. anyway. I got covid. Brain foggy. Yay
[19:38:04] <ilmari> ology: oof, get well soon
[19:38:05] <n_shp> hey, I still write more C than anything else, LeoNerd :P
[19:38:07] <n_shp> we still exist
[19:38:27] <ilmari> ology: fully jabbed?
[19:38:34] <LeoNerd> Oh I write lots of C too - mostly the perl interpreter or XS modules
[19:38:53] <LeoNerd> But those don't count as full programs. They're lowerlevel parts of an interepreter, used to write real applications in a higher language
[19:39:01] <ology> ilmari: yep.
[19:39:02] *** n_shp is now known as nshp
[19:39:47] <nshp> I write networking code mostly
[19:39:53] <nshp> I think that counts
[19:40:23] <LeoNerd> Oh I'd definitely prefer to write networking in Perl rather than C
[19:40:39] <LeoNerd> Perl has async/await, and perl strings don't segv (or worse) when I accidentally overstep the bounds
[19:40:51] *** Quits: Juerd (juerd@computervrede.nl) (Remote host closed the connection)
[19:40:51] <nshp> depends on the type of networking stuff
[19:41:02] <nshp> if it's an IRC bot, or a HTTP client, sure
[19:41:39] <nshp> if it's more like... a TCP stack? or some binary protocol, in a high throughput place? no, can't have an interpreter doing silly interpreter things
[19:42:27] *** Joins: Juerd (juerd@computervrede.nl)
[19:42:28] <nshp> I do like to pretend that strings don't exist in C though. that does make life much better.
[19:43:06] <LeoNerd> Strings in C are much like Objects in C - just an idea in the mind of the programmer, that the compiler doesn't really need to know about
[19:43:59] *** Quits: jplesnik (~jplesnik@83.240.61.101) (Quit: Leaving)
[19:44:02] *** Quits: martinus__ (~martin@127.59.202.77.rev.sfr.net) (Ping timeout: 240 seconds)
[19:44:17] *** Quits: pj (~pj@ghettoforge/pj) (Ping timeout: 240 seconds)
[19:44:40] <genio> Let's all write D
[19:45:16] <simcop2387> ology: sadly i'm expecting to get it any time now myself.  we've all been basically forced back into the office now so it's going to happen
[19:46:46] <ology> I think it's probably a good thing. Everyone gets it => "herd immunity"
[19:47:31] <bingos> ology: what type of .mid file does MIDI::Bassline::Walk export?
[19:47:59] <ology> bingos: Not sure how to answer that. I thought there was only one type. :)
[19:48:16] * ology waits to be enlightened...
[19:48:19] <bingos> think there is type 1 and type 2
[19:48:26] <ology> Ohhh. I see.
[19:49:02] <ology> It produces type 1 I believe BUT you can use type 2 if you have the right soundfont. But I'm pretty unsure.
[19:49:23] <nshp> erf, more like everyone gets it => 7 billion lovely new human shaped petri dishes ripe for mutation :/
[19:49:38] <ology> Maybe I'm confusing with https://en.wikipedia.org/wiki/General_MIDI_Level_2
[19:49:38] <Paperbot> Link title(s): [ General MIDI Level 2 - Wikipedia ]
[19:49:47] <bingos> type 0 and type 1 sorry
[19:49:57] <ology> Hrmmm.
[19:50:05] <bingos> okay, type 1 is fine for my purposes.
[19:50:27] <ology> bingos: What are your purposes? Are you going to fool with my Walk module, maybe?
[19:51:05] *** Joins: randir (~randir@95-26-4-13.broadband.corbina.ru)
[19:51:07] <bingos> seq24 will consume type 1 mid files
[19:51:26] <ology> Fwiw, it just uses MIDI::Simple. So whatever type that produces is what my stuff does.
[19:52:20] <bingos> I may be overthinking it.
[19:52:45] <ology> I'm most definitely guilty of that. ugh
[19:53:17] <bingos> I found something to convert wav files to midi (don't ask).
[19:53:35] <ology> I think VLC does that.
[19:53:46] <ology> No
[19:53:52] <ology> Just plays MIDI
[19:54:04] <bingos> but it only produced type 0 midi files, which I then had to convert to type 1 midi files to get Seq24 to consume.
[19:54:34] *** bingos is now known as BinGOs
[19:54:36] <ology> How do you convert type 0 to type 1? I've never even heard of that. I need to know! :)
[19:54:52] <ology> s/know/learn/
[19:55:05] <BinGOs> something called tse3play
[19:55:08] <ology> k
[19:55:45] <BinGOs> had to search through ~/.bash_history to remain myself.
[19:55:51] <BinGOs> remind
[19:56:18] *** Quits: jgaz (~jgaz@2600:8805:d980:7620::9e0) (Remote host closed the connection)
[19:56:20] <revhippie> Speaking of MIDI, has anyone seen thrig lately?
[19:56:29] <ology> He was just here the other day.
[19:56:41] <ology> I have an open question when he returns...
[19:57:59] *** Joins: pj (~pj@ghettoforge/pj)
[19:58:06] <BinGOs> https://github.com/kichiki/WaoN was what I found to do the WAV -> MIDI conversion
[19:58:06] <Paperbot> Link title(s): [ GitHub - kichiki/WaoN: a Wave-to-Notes transcriber ]
[19:58:22] <BinGOs> I was disappointed in the results in the end though.
[19:59:24] <BinGOs> I last made music about 20 years ago or so, then stopped.
[19:59:48] <BinGOs> But I have recently restarted my interest
[20:00:22] <BinGOs> and got myself one of these for christmas https://www.akaipro.com/mpk-mini-mk3
[20:00:28] <Paperbot> Link title(s): [ MPK Mini mk3 MIDI Controller | Akai Pro ]
[20:06:22] *** Quits: leitz (~LeamHall@072-182-158-027.res.spectrum.com) (Quit: nappy time)
[20:07:33] <ology> Cute. I loath mini-keys however.
[20:07:36] <ether> root exploit available on all popular linux distros -- https://isc.sans.edu/forums/diary/Local+privilege+escalation+vulnerability+in+polkits+pkexec+CVE20214034/28272/
[20:07:37] <Paperbot> Link title(s): [ SANS Internet Storm Center ]
[20:09:55] *** Joins: krismatrix (~krismatri@38.80.149.51)
[20:10:22] <krismatrix> Is Mojo a microservice?
[20:11:30] <ology> Seems to meet the criteria at https://microservices.io/ 
[20:11:30] <Paperbot> Link title(s): [ What are microservices? ]
[20:11:48] <fuzzix> BinGOs: Almost bought that. Mini keys didn't bother me, but the mod/pitch joystick put me off.
[20:12:05] <Grinnz> mojo is a toolkit/framework. you can write microservices in it, or non-micro services, or things that aren't services at all
[20:14:52] <krismatrix> hmm..
[20:15:20] <krismatrix> Curious..what would I have to do exactly to build things as a microservice?
[20:16:49] * GumbyPAN CPAN Upload: AnyEvent-Fork-1.32 by MLEHMANN https://metacpan.org/release/MLEHMANN/AnyEvent-Fork-1.32
[20:17:03] <Grinnz> write each part as an individual application
[20:17:26] <krismatrix> You mean write a mojo app for each part?
[20:17:39] <Grinnz> that would be a natural way to structure it
[20:18:23] <Grinnz> the key is to not have unrelated parts of the system depend on each other, just call each other when they need to
[20:18:45] <Grinnz> i don't think it's the best option for everything
[20:19:00] <Grinnz> that communication part adds overhead
[20:19:01] <xenu> the idea of microservices is that you have many independent parts with well defined apis and no dependencies on implementation details
[20:19:02] <BinGOs> ology: I have a Casio CT-S300AD as well. It's just a faff to get out if I quickly want to do some stuff.
[20:19:27] <xenu> in theory it's supposed to make maintenance easier 
[20:19:46] <xenu> but tbh it's no silver bullet and the added complexity is rarely worth it
[20:20:10] <ology> BinGOs: I miss my music studio that was always on...
[20:20:17] <BinGOs> mini-keys don't bother me, I spent the 90s playing a Yamaha PSS-78-
[20:20:22] <BinGOs> 780
[20:21:25] *** Quits: WinterStar (~IceLight@user/icelight) (Ping timeout: 240 seconds)
[20:21:35] <krismatrix> I think your points make sense. I don't want to change my site to be a microservice. I was curious how it could be done. Do you guys have a small microservice example anywhere that you can share?
[20:21:49] *** jrayhawk_ is now known as jrayhawk
[20:22:09] <krismatrix> I guess the main thing that I don't know (i think) is how each mojo app connects to each other.
[20:24:07] *** Joins: WinterStar (~IceLight@user/icelight)
[20:29:41] *** Quits: ovid__ (~ovid@2a01:cb16:2046:7c60:a8e2:ea9a:5e21:854b) (Ping timeout: 268 seconds)
[20:30:58] *** Joins: ovid_ (~ovid@laubervilliers-659-1-13-124.w80-11.abo.wanadoo.fr)
[20:31:03] *** Quits: Kanjizai (~kanjizai@cpe-107-185-193-171.socal.res.rr.com) (Ping timeout: 256 seconds)
[20:37:19] *** Quits: krismatrix (~krismatri@38.80.149.51) (Quit: Leaving)
[20:38:49] *** Joins: Kanjizai (~kanjizai@cpe-107-185-193-171.socal.res.rr.com)
[20:39:58] *** Quits: splatt990 (4b25e29db1@198.108.77.17) (Quit: Gateway shutdown)
[20:45:06] *** Quits: rgrinberg (~textual@2806:101e:7:2b:9559:34ac:a49f:3b79) (Quit: My MacBook has gone to sleep. ZZZzzz…)
[20:50:24] *** Joins: tirnanog (~tirnanog@user/tirnanog)
[21:04:49] <pragma-> As if Crypt::Vigenere::ThisOneWorks doesn't suggest that it is a sub-package of the main Crypt::Vigenere package
[21:05:00] <pragma-> Oh, I was scrolled up dozens of hours. Disregard that.
[21:07:25] *** Quits: tobybl (~tobybl@248.64.200.146.dyn.plus.net) (Remote host closed the connection)
[21:10:45] *** Parts: art1 (~romeyke@p200300ccdf048700ec82838af6c7fcd8.dip0.t-ipconnect.de) ()
[21:23:17] *** gloin_ is now known as gloin
[21:26:02] *** Quits: xenial-user10 (~androirc@3EC97C6F.catv.pool.telekom.hu) (Ping timeout: 240 seconds)
[21:26:29] *** Joins: slowButPresent (~slowButPr@user/slowbutpresent)
[21:28:50] *** Joins: rgrinberg (~textual@2806:101e:7:6bed:c9f9:2cac:8647:c886)
[21:30:42] *** Joins: magla (~gelignite@55d450c5.access.ecotel.net)
[21:30:43] *** Quits: henry40408 (~henry4040@175.181.155.165) (Remote host closed the connection)
[21:31:21] *** Joins: henry40408 (~henry4040@175.181.155.165)
[21:32:50] <simcop2387> giant monitor layout that seems to work really nicely for a lot of stuff: centered 27inch monitor with two virtual portrait monitors on the sides of it.  so docs/distractions on the sides and something to work on/with in the middle.
[21:33:06] <simcop2387> i'm really liking 32:9 more than i expected to
[21:33:39] <simcop2387> it's also really cool for google streetview
[21:34:25] <corwin> google street view on VR blew my mind.
[21:34:49] <simcop2387> yea i'm kinda curious about that myself to be honest
[21:35:16] *** Quits: vyv (~vyv@bras-vprn-nrbaon0452w-lp130-16-76-68-64-112.dsl.bell.ca) (Quit: Konversation terminated!)
[21:35:22] <corwin> it's not worth the cost of the rig, to be sure, but it's probably the most "this is the future" I've felt since I got my first 286 running
[21:35:28] <simcop2387> build quality and screen of the oculus quest 2 seems to be really nice, but the required facebook account and it impossible for me to actually get one
[21:36:29] <corwin> my 15yo saved up for and got the steam favored one (I forget what it's called).  Also seems to be a pretty good build.
[21:37:48] <simcop2387> valve index
[21:38:26] <simcop2387> they're my most likely one to go with, i don't have a good setup for it at the moment so i haven't gone after one and have been holding off for their next version and then build a small pc just for it
[21:38:48] <simcop2387> esp if they add some way to do wireless with it
[21:41:29] *** Joins: krismatrix (~krismatri@38.80.149.51)
[21:43:29] *** Joins: geowiesnot (~user@5-51-190-244.abo.bbox.fr)
[21:46:32] <Altreus> Do I have to ask open to return an object, or is $fh->say available by default?
[21:46:50] <Altreus> ISTR having to use IO::Handle maybe?
[21:50:06] <revhippie> $fh->say a-ok
[21:50:11] *** Quits: andrzejku (~andrzejku@45-11-60-125.ip4.greenlan.pl) (Read error: Connection reset by peer)
[21:50:16] <simcop2387> iirc, the io handle stuff was 5.6..5.8 issues
[21:50:24] <simcop2387> since at least 5.10 i think it's automatic
[21:50:44] <Grinnz> 5.14, but any earlier version it works as long as you "use IO::Handle"
[21:50:58] <zgu> eval: open my $file '>', '/dev/null'; $fh->print('barf');
[21:50:59] <perlbot> zgu: String found where operator expected at (IRC) line 1, near "$file '>'" 	(Missing operator before '>'?) ERROR: syntax error at (IRC) line 1, near "$file '>'" 
[21:51:07] <zgu> eval: open my $file, '>', '/dev/null'; $fh->print('barf');
[21:51:08] <perlbot> zgu: ERROR: Can't call method "print" on an undefined value at (IRC) line 1. 
[21:51:20] <zgu> probably perlbot sandboxing
[21:51:29] <simcop2387> eval: open my $file, '>', '/dev/null'; $fh->print('barf');
[21:51:30] <perlbot> simcop2387: ERROR: Can't call method "print" on an undefined value at (IRC) line 1. 
[21:51:34] <simcop2387> eval: use autodie; open my $file, '>', '/dev/null'; $fh->print('barf');
[21:51:36] <perlbot> simcop2387: ERROR: Can't call method "print" on an undefined value at (IRC) line 1. 
[21:51:40] <simcop2387> huh
[21:51:44] <simcop2387> basheval: /dev
[21:51:45] <perlbot> simcop2387: /tmp/_LtKJG0E8o: line 1: /dev: Is a directory␤[Exited 126]
[21:51:47] <simcop2387> basheval: ls /dev
[21:51:48] <perlbot> simcop2387: null␤random␤urandom␤
[21:51:51] <Grinnz> sweval: open my $file, '>', '/dev/null' or die "$!"
[21:51:53] <perlbot> Grinnz: 1
[21:51:58] <simcop2387> i have no idea
[21:52:08] <zgu> eval: open my $file, '>', '/dev/null'; $file->print('barf');
[21:52:10] <perlbot> zgu: 1
[21:52:16] <zgu> oh that's why. i can't spell
[21:52:16] <x5c30> simcop2387: var name typo :P
[21:52:21] <simcop2387> yea
[21:52:49] <zgu> so it implicitly blesses the lexical fh to IO::Handle?
[21:52:50] <simcop2387> x5c30: we really aren't much more than monkeys banging rocks together are we
[21:53:01] * x5c30 like fire.
[21:53:09] <simcop2387> eval: use autodie; open my $file, '>', '/dev/null'; [$file]
[21:53:10] <perlbot> simcop2387: [\*{"::\$_[...]"}]
[21:53:18] <revhippie> eval: open my $fh, '>', '/dev/null'; [ ref $fh ]
[21:53:19] <simcop2387> well that's helpful looking
[21:53:20] <perlbot> revhippie: ["GLOB"]
[21:53:25] <Altreus> happens I'm on 5.14
[21:53:32] <Altreus> does that apply to STDOUT and STDIN as well?
[21:53:43] <Grinnz> zgu: always use sweval
[21:53:50] <revhippie> sweval: STDOUT->print("hi")
[21:53:52] <perlbot> revhippie: hi
[21:53:55] <Grinnz> Altreus: yes
[21:53:58] <Altreus> sweval: my $awoo = \*STDOUT; $awoo->print("awoo");
[21:53:59] <perlbot> Altreus: awoo
[21:54:01] <zgu> yes, no strict was my real problem
[21:54:02] <Altreus> rad
[21:54:06] <Altreus> thanks :)
[21:54:12] <Grinnz> sweval: *STDOUT->print('foo')
[21:54:14] <perlbot> Grinnz: foo
[21:54:36] <Grinnz> STDOUT-> makes me cringe internally because it looks like a class method call
[21:54:47] <simcop2387> Grinnz: only need seval these days
[21:55:17] <zgu> also worth looking at may be Path::Tiny if you want nicer high-level interfaces to file (both fs navigation and IO itself) ops
[21:55:26] <simcop2387> PT is really nice
[21:55:46] <simcop2387> doesn't do everything but it makes all the common stuff i do simple
[21:56:37] <simcop2387> though now that i think about it, does path("/.../.../.../dir")->tmpfile() do the sane thing?
[21:56:45] <simcop2387> never looked or thought about that before
[21:57:06] <zgu> ->parent and ->child for walking up and down directories without having to care if your platform uses / or \, read entire content into an array with one call, etc
[21:57:56] <zgu> i was looking up Path::Tiny tmpfile support recently... don't remember exactly
[21:59:04] <zgu> http://dpaste.com/GC37KGT46
[21:59:04] <Paperbot> Link title(s): [ dpaste: /home/steve/perl/fftimelapse.pl ]
[22:00:24] *** clarjon_1 is now known as clarjon1
[22:01:32] <Altreus> how do I mimic -i within a script? I know I can set $^I but ... I don't really know how that works with open
[22:01:43] <Grinnz> use Path::Tiny's edit_lines_utf8
[22:02:10] <Grinnz> as a bonus, it works correctly even before perl 5.32-ish when -i was fixed
[22:02:25] <Altreus> apparently our version of that module doesn't have that function
[22:02:39] <zgu> you have Path::EvenTinier instead?
[22:02:51] *** Quits: Sauvin (~sauvin@about/linux/staff/sauvin) (Ping timeout: 256 seconds)
[22:02:58] <Altreus> -_-
[22:03:01] <Grinnz> it was added in 2016 lol
[22:03:17] <zgu> what is this, a RHEL machine?
[22:03:21] <Altreus>        This software is Copyright (c) 2014 by David Golden.
[22:03:32] <Altreus> god no! It's CentOS 6!
[22:04:18] <Altreus> Ever written software coupled to Apache and reliant on the system perl? :)
[22:04:42] <Grinnz> good thing Path::Tiny is trivial to fatpack
[22:04:52] <Altreus> hmm!
[22:05:14] <Altreus> I'll see if we can upgrade it without breaking anything, first
[22:05:19] <zgu> it's a ::Tiny so it should be
[22:06:12] <zgu> you don't have a local::lib or anything set up already?
[22:09:19] <simcop2387> zgu: apparently it does do the right thing
[22:09:23] <Mandevil> https://l.perl.bot/p/ql32dg ... I think I don't understand how perl versions work.
[22:09:24] <Paperbot> Link title(s): [ Perlbot Pastebin ]
[22:09:32] <simcop2387> i might actually be using it in the eval server, now that i think more about it
[22:09:36] <Mandevil> I have perl 5.26
[22:09:42] <Mandevil> So why is this not satisfied?
[22:10:26] <zgu> i wonder if i can make wetpaste work with perl.bot. or if there's another command line tool that sends to it
[22:10:47] <zgu> even better a command to send an emacs region
[22:11:16] <zgu> s/wetpaste/wgetpaste/
[22:11:58] <simcop2387> Mandevil: how did you install perl 5.26?
[22:12:07] <Mandevil> It's distro default.
[22:12:18] <haarg> Mandevil: perl versions are a mess. When specified without a v or a third component, versions are numeric
[22:12:40] *** Quits: proller (~p@2a02:6b8:0:40c:9cfc:cea6:bb70:e1d9) (Ping timeout: 268 seconds)
[22:12:43] <haarg> Which means v5.20 is 5.020
[22:12:49] *** Joins: jpmh (uid510532@id-510532.helmsley.irccloud.com)
[22:12:50] <Mandevil> Great.
[22:13:02] <haarg> v5.8 is 5.008
[22:13:06] <Mandevil> I see.
[22:13:24] <Altreus> nope, upgrading the module was resisted
[22:13:26] <Mandevil> Thanks for telling me.
[22:13:50] <Mandevil> This would take me long time.
[22:13:54] <Botje> I would say "wait until perl 5.200", but wasn't there some internal thing that prevents large minor version numbers?
[22:14:01] <haarg> you can specify the prereq as v5.20 or 5.20.0 or 5.020
[22:14:02] <Altreus> And has apparently been resisted for 8 years :D
[22:14:03] <Grinnz> no?
[22:14:08] <jpmh> To 'touch' a file I have always done open(my $fd,">>","theFile");  A new employee wonders why I don't use utime.  Any suggestions on which is better.  I sort of like utime since I dont allocate a flle handle
[22:14:25] <haarg> or v5.20.0
[22:14:37] <Grinnz> jpmh: problem is that open doesn't update the mtime
[22:14:54] <Grinnz> and utime i think, doesn't create the file if it doesn't exist yet
[22:14:57] *** Quits: geowiesnot (~user@5-51-190-244.abo.bbox.fr) (Ping timeout: 240 seconds)
[22:14:58] <Mandevil> haarg: Will ExtUtils::MakeMaker accept the v5.20.0?
[22:15:15] <haarg> pretty sure it does now
[22:15:25] <Grinnz> so if you want a full "touch" replacement, you really have to check whether the file exists; see Path::Tiny's https://metacpan.org/dist/Path-Tiny/source/lib/Path/Tiny.pm#L2097
[22:15:25] <Paperbot> Link title(s): [ lib/Path/Tiny.pm - metacpan.org ]
[22:15:32] <haarg> the most compatible format is 5.020
[22:15:42] <Mandevil> I'll stick with that.
[22:15:46] <vague> Mandevil, there is a problem with cpan indexing also which Grinnz or haarg might be able to tell you how to fix, if I go to metacpan page -> browse -> lib -> there's nothing to be found
[22:16:00] <haarg> but "compatible" stops mattering with more recent perl versions
[22:16:07] <Altreus> write to temp file and rename, apparently
[22:16:13] <jpmh> Grinnz: TY - testing checking that now
[22:16:13] <Mandevil> vague: What is the link?
[22:16:33] <vague> https://metacpan.org/release/BOREKL/Crypt-Cipher-Vigenere-0.02
[22:16:34] <Paperbot> Link title(s): [ Crypt-Cipher-Vigenere-0.02 - implementation of Vigenere cipher - metacpan.org ]
[22:16:47] <haarg> I'm not certain what perl version has an EUMM that handles everything well, but I feel like 5.20 does
[22:16:50] <Mandevil> Wait, what happened? It was there like 2hrs ago!
[22:17:20] <Mandevil> ALso I just downloaded it from CPAN.
[22:17:26] <jpmh> Grinnz: YEP - TY 
[22:17:37] *** Quits: pj (~pj@ghettoforge/pj) (Ping timeout: 240 seconds)
[22:17:51] <Grinnz> no idea what's up with that dist. looks like a metacpan caching issue maybe?
[22:18:07] <Mandevil> Yeah, something CDN related?
[22:18:45] <Grinnz> also, this is wrong https://metacpan.org/release/BOREKL/Crypt-Cipher-Vigenere-0.02/source/Makefile.PL#L31-36
[22:18:46] <Paperbot> Link title(s): [ Makefile.PL - metacpan.org ]
[22:18:52] <Grinnz> provides does not go in resources
[22:19:07] <vague> While I have Grinnz here :) what would be the best way to add a proxied route to my hypnotoad app? I want to forward a specific route with optional additional paths to a non-public server 
[22:19:08] <Mandevil> Grinnz: I copied that from choroba
[22:19:41] <Mandevil> Grinnz: Where do I read up about what goes where?
[22:19:47] <Grinnz> https://metacpan.org/pod/CPAN::Meta::Spec
[22:19:47] <Paperbot> Link title(s): [ CPAN::Meta::Spec - specification for CPAN distribution metadata - metacpan.org ]
[22:19:56] <Mandevil> Thanks
[22:19:59] <Grinnz> that's the format of the META_MERGE contents
[22:20:55] <Grinnz> vague: perhaps https://metacpan.org/pod/Mojolicious::Plugin::DefaultHelpers#proxy-%3Eget_p
[22:20:55] <Paperbot> Link title(s): [ Mojolicious::Plugin::DefaultHelpers - Default helpers plugin - metacpan.org ]
[22:21:05] <choroba> I just modified what Module::Starter provided
[22:21:48] <Grinnz> choroba: dunno who got it wrong, but provides is a section next to resources, not inside it
[22:22:25] <choroba> https://metacpan.org/release/CHOROBA/Syntax-Construct-1.024/source/Makefile.PL#L32
[22:22:25] <Paperbot> Link title(s): [ Makefile.PL - metacpan.org ]
[22:24:45] <Mandevil> Oh, so it was me who messed up.
[22:24:50] <Mandevil> As usual.
[22:24:51] <vague> Grinnz, thanks, looking into it
[22:25:34] <Grinnz> Mandevil: it's pretty easy to mess up, hence why i never recommend EUMM as an authoring tool (if it's the right one for you, you don't need my recommendation)
[22:26:15] <Mandevil> Grinnz: ... what is the alternative? I just go by the docs.
[22:26:28] <Mandevil> Grinnz: And perldoc said do this and do that...
[22:26:50] <Grinnz> Minilla, Dist::Milla, full dzil (preferably using Dist::Zilla::Starter), or mbtiny, depending what you're looking for from your tools
[22:27:02] * GumbyPAN CPAN Upload: Perl-Metrics-Halstead-0.0614 by GENE https://metacpan.org/release/GENE/Perl-Metrics-Halstead-0.0614
[22:27:30] <Mandevil> Grinnz: I am looking to get the job of creating a CPAN dist done
[22:27:37] <Mandevil> Grinnz: As correctly as possible
[22:28:07] <Grinnz> i would link the mstpan but shadow.cat dns seems borked
[22:28:13] <zgu> dzil is pretty popular and will do anything you'll ever need
[22:28:45] <Grinnz> https://metacpan.org/pod/Dist::Zilla::Starter#A-BRIEF-HISTORY-OF-AUTHORING has some background that may help you decide
[22:28:45] <Paperbot> Link title(s): [ Dist::Zilla::Starter - Guide to getting started with Dist::Zilla - metacpan.org ]
[22:29:25] <Mandevil> Nice.
[22:29:30] <EvanCarroll> https://stackoverflow.com/q/70868805/124486
[22:29:31] <Paperbot> Link title(s): [ Why does Perl have a notion of an undefined function? - Stack Overflow <https://stackoverflow.com/questions/70868805/why-does-perl-have-a-notion-of-an-undefined-function> ]
[22:29:38] <Grinnz> all of the tools i mentioned will build a modern dist for you with minimal effort - they have different customizability and support different features
[22:29:39] <EvanCarroll> HAVE FUN.
[22:30:44] *** Joins: pj (~pj@ghettoforge/pj)
[22:31:05] <Grinnz> EvanCarroll: seems like a good question for the p5p list
[22:31:17] <zgu> does that make the parser let you do "foo $bar" instead of "foo($bar)" before defining the body of the sub?
[22:31:18] *** Quits: XV8 (~XV8@2601:5cb:c001:50:7138:38eb:1e16:f288) (Quit: My MacBook has gone to sleep. ZZZzzz…)
[22:31:30] <Grinnz> my gut feeling is "because values can be undef"
[22:31:35] *** Parts: choroba (~E.Choroba@89-101-243-80.cust.centrio.cz) (Leaving)
[22:31:36] <Grinnz> and not an intentional design
[22:31:39] *** Joins: choroba (~E.Choroba@89-101-243-80.cust.centrio.cz)
[22:31:43] <Grinnz> but there's a lot more to it i don't know
[22:31:55] *** Joins: lispy (~lispy4@84.69.59.93)
[22:32:02] * GumbyPAN CPAN Upload: Crypt-Cipher-Vigenere-0.03 by BOREKL https://metacpan.org/release/BOREKL/Crypt-Cipher-Vigenere-0.03
[22:32:02] * GumbyPAN CPAN Upload: MIDI-Bassline-Walk-0.0308 by GENE https://metacpan.org/release/GENE/MIDI-Bassline-Walk-0.0308
[22:32:05] * GumbyPAN CPAN Upload: Test-MockFile-0.025 by TODDR https://metacpan.org/release/TODDR/Test-MockFile-0.025
[22:32:24] <Grinnz> zgu: yeah, to the parser it is the same as defining the sub - the symbol will be known
[22:32:29] <EvanCarroll> well, I've been asking questions for so many years and Grinnz finally said, "seems like a good question" ...
[22:32:32] <EvanCarroll> I WIN.
[22:32:34] *** Quits: krismatrix (~krismatri@38.80.149.51) (Quit: Leaving)
[22:32:36] <Grinnz> heh
[22:32:40] *** Joins: XV8 (~XV8@2601:5cb:c001:50:7138:38eb:1e16:f288)
[22:33:00] <EvanCarroll> my dumb streak is over. god level inquisition skillz.
[22:34:23] <ology> A math prof once said something like, "Solutions are easy. The hard part is asking the right questions."
[22:35:10] <LeoNerd> Short answer: (mutual/self) recusion on prototyped subs
[22:35:11] <zgu> yeah, 42 is the answer
[22:35:19] <zgu> but what is the question?
[22:36:38] <EvanCarroll> "What is 41 + 2?"
[22:36:58] <Altreus> how do I move a file across filesystems? Path::Tiny->tempfile is apparently not on the same filesystem as my code
[22:37:07] <Altreus> I guess I could copy and rm
[22:37:17] *** Quits: XV8 (~XV8@2601:5cb:c001:50:7138:38eb:1e16:f288) (Ping timeout: 240 seconds)
[22:37:34] <simcop2387> EvanCarroll: tsk tsk.  six times nine
[22:38:02] <zgu> ideally you'd make the temp directory a subdir of the place you're putting the final data
[22:38:07] <Grinnz> Altreus: https://perldoc.perl.org/File::Copy
[22:38:08] <Paperbot> Link title(s): [ File::Copy - Copy files or filehandles - Perldoc Browser ]
[22:38:18] *** Joins: XV8 (~XV8@2601:5cb:c001:50:7138:38eb:1e16:f288)
[22:38:30] <Grinnz> handles when a rename won't work
[22:38:42] <Altreus> For some reason Path::Tiny->move uses rename but Path::Tiny->copy uses File::Copy
[22:38:52] <Grinnz> yeah, lol
[22:39:02] <Altreus> can't even blame it on 2014
[22:39:32] <zgu> yeah why doesn't it have a wrapper for File::Copy::move?
[22:39:57] <Grinnz> https://github.com/dagolden/Path-Tiny/issues/237
[22:39:58] <Paperbot> Link title(s): [ move method should have a fallback option that uses copy/remove · Issue #237 · dagolden/Path-Tiny... ]
[22:41:15] *** Parts: choroba (~E.Choroba@89-101-243-80.cust.centrio.cz) (Leaving)
[22:41:21] *** Joins: choroba (~E.Choroba@89-101-243-80.cust.centrio.cz)
[22:41:54] <Altreus> ugh I forgot this computer is logged into the wrong github
[22:42:01] <Altreus> well that's their fault
[22:42:31] *** Quits: deadmarshal_ (~deadmarsh@95.38.116.86) (Ping timeout: 256 seconds)
[22:42:37] *** Quits: XV8 (~XV8@2601:5cb:c001:50:7138:38eb:1e16:f288) (Ping timeout: 240 seconds)
[22:44:11] <simcop2387> backcompat-wise i doubt you can change things but i'd want ->rename() that doesn't do the copy/remove, and ->move() that does by default.
[22:45:38] *** Joins: XV8 (~XV8@2601:5cb:c001:50:7138:38eb:1e16:f288)
[22:49:26] <zgu> Altreus: quick, change their profile to add a joke middle name or something
[22:50:03] <Botje> subscribe to all the notifications on kubernetes/kubernetes.
[22:50:06] <Botje> _ALL OF THEM_.
[22:50:35] <Botje> and maybe do the same for react and whatever else big-name framework you can think of.
[22:50:54] <Altreus> zgu: no I mean I was forced to make a work account so I can't use this laptop for anything useful any more
[22:51:11] <Altreus> unless I run *blech* two browser profiles
[22:51:26] <Mandevil> Firefox containers?
[22:51:49] <zgu> github doesn't let you hot swap accounts?
[22:56:05] <Altreus> doesn't seem to
[22:57:42] <Mandevil> Great, CPAN now serves my module right
[22:57:48] <Mandevil> And install works \o/
[22:58:36] <LeoNerd> account swapping in web browsers remains _universally_ terrible in my experience
[23:00:47] <genio> I refuse to have an account for my browser. I will _never_ log into a browser
[23:01:13] <lispy> \
[23:02:03] <genio> ah, I just read the scrollback a bit and mistook what was being discussed. I'll go back to shutting up
[23:02:05] * GumbyPAN CPAN Upload: App-VOJournal-v0.4.8 by MAMAWE https://metacpan.org/release/MAMAWE/App-VOJournal-v0.4.8
[23:12:06] * GumbyPAN CPAN Upload: Amazon-API-1.1.10 by BIGFOOT https://metacpan.org/release/BIGFOOT/Amazon-API-1.1.10
[23:12:06] * GumbyPAN CPAN Upload: Alien-SWIProlog-0.001_01 by ZMUGHAL https://metacpan.org/release/ZMUGHAL/Alien-SWIProlog-0.001_01
[23:13:46] *** Quits: rgrinberg (~textual@2806:101e:7:6bed:c9f9:2cac:8647:c886) (Quit: My MacBook has gone to sleep. ZZZzzz…)
[23:20:43] *** Joins: proller (~p@2a02:6b8:b081:8832::1:8)
[23:27:09] <Mandevil> I thought <> referred to stdin... but, what does it refer to relly?
[23:27:11] <Mandevil> really
[23:28:20] <SpiceMan> readline
[23:29:01] <Mandevil> I am asking because I specified argument to a program and suddenly <> wanted to read from that _file_.
[23:29:29] <Botje> <> reads from all files in @ARGV first and then from stdin.
[23:29:33] <Mandevil> Ah
[23:29:37] <Mandevil> Well, TIL
[23:30:28] <SpiceMan> oh, you meant literally <>
[23:30:42] <Mandevil> Yes.
[23:30:48] <Mandevil> while(<>) { ... }
[23:31:06] <SpiceMan> yes, be explicit :P
[23:31:10] <SpiceMan> <STDIN>
[23:31:14] *** Joins: izzyb (~izzyb@38.87.162.182)
[23:31:15] *** Joins: rgrinberg (~textual@2806:101e:7:6bed:c9f9:2cac:8647:c886)
[23:32:29] <Botje> doesn't <> also suffer from fun things like 'foo|' executing foo?
[23:32:47] <Altreus> does prove do something special with the test summary? I've done my ($stdout) = capture { system 'prove', @tests };  - and $stdout does not contain a test summary!
[23:32:50] <Botje> (although it's terribly useful for dealing with gzipped files)
[23:32:55] <Altreus> that's capture from Capture::Tiny
[23:34:07] <rewt> Altreus, is it in stderr?
[23:34:48] <Altreus> I wondered ... will try next
[23:34:55] <Altreus> its manpage doesn't say anything about that
[23:36:11] <Altreus> huh, this time it gave me a summary
[23:43:14] <Altreus> :/ now it's outputting them
[23:46:05] *** Joins: geowiesnot (~user@5-51-190-244.abo.bbox.fr)
[23:47:10] * GumbyPAN CPAN Upload: Net-DNS-Resolver-Unbound-1.04 by RWF https://metacpan.org/release/RWF/Net-DNS-Resolver-Unbound-1.04
[23:53:28] *** Joins: mattil (~mattil@helsinki.portalify.com)
[23:54:18] *** Quits: ovid_ (~ovid@laubervilliers-659-1-13-124.w80-11.abo.wanadoo.fr) (Remote host closed the connection)
[23:57:37] *** Quits: geowiesnot (~user@5-51-190-244.abo.bbox.fr) (Ping timeout: 240 seconds)
