[00:00:13] *** Joins: Andrynet_ (~Andrey@186.46.207.121)
[00:01:37] *** Joins: TuckerBrandy199 (~TuckerBra@209.87.29.242)
[00:01:38] *** Quits: puff (~user@S0106d4ca6d80a83c.vs.shawcable.net) (Read error: Connection reset by peer)
[00:01:51] *** Joins: puff (~user@S0106d4ca6d80a83c.vs.shawcable.net)
[00:02:54] *** Joins: vakera_pingveno (~dan@107-209-165-75.lightspeed.hstntx.sbcglobal.net)
[00:03:21] *** Joins: renlo (~Renlo_Ren@pool-108-14-112-182.nycmny.east.verizon.net)
[00:04:01] *** Quits: Andrynet (~Andrey@186.46.207.121) (Ping timeout: 250 seconds)
[00:04:06] *** Quits: FastJack (~fastjack@b2b-78-94-22-14.unitymedia.biz) (Ping timeout: 256 seconds)
[00:04:13] *** Quits: analoq (~yashi@user/dies) (Ping timeout: 265 seconds)
[00:05:06] *** Quits: Andrynet_ (~Andrey@186.46.207.121) (Ping timeout: 260 seconds)
[00:05:47] *** Joins: FastJack (~fastjack@b2b-78-94-22-14.unitymedia.biz)
[00:05:48] *** Quits: peterhil (~peterhil@dsl-hkibng32-54fb56-2.dhcp.inet.fi) (Ping timeout: 256 seconds)
[00:06:11] *** Quits: Moosadee (~Moosadee@136.32.155.193) (Ping timeout: 250 seconds)
[00:07:11] *** Joins: nicholaus04 (~nicholaus@2607:fb90:e58c:fb6a:992d:a11c:78b:b202)
[00:08:22] *** Quits: thevishy (~thevishy@2405:201:f005:c007:1100:f3e5:ecdd:62f7) (Quit: Client closed)
[00:10:12] *** Quits: EvilDMP (~textual@django/moderator/EvilDMP) (Quit: My MacBook has gone to sleep. ZZZzzz…)
[00:10:59] *** Quits: AlanMD (~AlanMD@86.121.179.183) (Remote host closed the connection)
[00:11:15] *** Joins: donald1 (~donald@2a01:e0a:95e:7ca0:cd10:f479:841c:8aaf)
[00:11:48] *** Joins: AlanMD (~AlanMD@86.121.179.183)
[00:14:08] <donald1> Hello. I want to use the function asyncio.subprocess.stdout.read() to read output of a program with a timeout. I read that https://stackoverflow.com/questions/10756383/timeout-on-subprocess-readline-in-python and focus on the second option to work as well on linux as well on windows. I tried that https://stackoverflow.com/questions/10756383/timeout-on-subprocess-readline-in-python and got the lastly mentionned error.
[00:16:00] *** Quits: tsaka__ (~torstein@31.4.129.41) (Ping timeout: 256 seconds)
[00:16:49] *** Joins: Common (~Common@user/common)
[00:17:27] *** Quits: evocatus (~evocatus@84.51.113.13) (Quit: Leaving)
[00:17:42] *** Quits: humbertowoody (~humbertow@189.236.62.65) (Ping timeout: 256 seconds)
[00:17:47] <darksun> what error?
[00:18:02] *** Joins: PenguinP1 (~PenguinP1@modemcable031.154-80-70.mc.videotron.ca)
[00:19:36] <donald1> darksun this https://pastebin.com/ediHVBpi
[00:19:58] *** Joins: humbertowoody (~humbertow@189.236.62.65)
[00:21:01] <Common> any reason when i download python and the signature im getting this when trying to verify?   https://postimg.cc/Vdjjsbjk
[00:21:11] *** Quits: magga (magga@ti0036a400-1042.bb.online.no) (Remote host closed the connection)
[00:21:18] <Common> python 3 windows installer
[00:21:30] <ali1234> because you dont have the certificate
[00:23:23] *** Joins: gruuf (~gruuf@94.31.105.29)
[00:23:36] <Common> where can i find it
[00:23:39] <Common> to import
[00:23:57] *** Quits: BH23 (~BH23@santoroj.plus.com) (Ping timeout: 250 seconds)
[00:24:31] <ali1234> http://pgp.mit.edu/pks/lookup?op=get&search=0xFC624643487034E5
[00:25:14] <ali1234> note that you dont actually need to verify this PGP signature on windows, because those releases are also signed by a microsoft key that you do have the certificate for
[00:25:20] <ali1234> at least i think that is the case
[00:27:35] *** Joins: Andrynet (~Andrey@186.46.207.121)
[00:28:49] *** Joins: dextercd (~dexter@2a02-a450-f25d-1-76d4-35ff-fefe-34c.fixed6.kpn.net)
[00:29:30] *** Joins: servytor (uid525486@hampstead.irccloud.com)
[00:29:35] *** Quits: PenguinP1 (~PenguinP1@modemcable031.154-80-70.mc.videotron.ca) (Quit: Leaving)
[00:30:21] *** Quits: jpic (~jpic@82.142.20.182) (Remote host closed the connection)
[00:30:30] <p-i-> ok I think I've tracked it down somewhat. My udp listener code picks up the packet if it's run from another ubuntu box.
[00:30:40] <p-i-> So the issue must be in the configuration of the box.
[00:30:55] <p-i-> But they're identical instance-types from my host/provider.
[00:31:04] <p-i-> So it must be something in the way the packages are installed.
[00:31:35] <p-i-> If I uninstall and reinstall my websocket client I see a potential issue: https://bpa.st/7PKA
[00:31:45] *** Quits: fikran (~fikran@user/fikran) (Ping timeout: 250 seconds)
[00:32:11] *** Quits: Andrynet (~Andrey@186.46.207.121) (Ping timeout: 250 seconds)
[00:32:12] <p-i-> Instruction is "Upgrade pyOpenSSL now", but "python3 -m easy_install --upgrade pyOpenSSL" doesn't shake it loose.
[00:32:55] *** Joins: hudo__ (~hudo@62.68.19.39)
[00:33:02] *** Joins: LiftLeft (~LiftLeft@216-26-118-34.dynamic.nelson.airstreamcomm.net)
[00:33:25] <grym> p-i-: easy_install has been deprecated for a very, very long time.
[00:33:38] *** Quits: LiftLeft (~LiftLeft@216-26-118-34.dynamic.nelson.airstreamcomm.net) (Remote host closed the connection)
[00:33:49] *** Joins: fikran (~fikran@user/fikran)
[00:33:53] *** Joins: EvilDMP (~textual@django/moderator/EvilDMP)
[00:33:59] *** Quits: EvilDMP (~textual@django/moderator/EvilDMP) (Client Quit)
[00:34:10] <grym> p-i-: `thevenv/bin/python -m pip install --upgrade pyOpenSSL` perhaps
[00:34:37] *** Joins: humberto1 (~humbertow@189.236.62.65)
[00:34:59] <donald1> darksun any idea?
[00:35:08] *** Parts: dontyouloveshort (~dontyoulo@2a07:3b80:1::efeb) (Leaving)
[00:35:30] <donald1> ps: you tried all the nicks with dark until you reach darksun and then ask youself if a sun could be dark :D
[00:35:50] *** Quits: hudo_ (~hudo@62.68.19.39) (Ping timeout: 256 seconds)
[00:35:50] *** Quits: Gurkenglas (~Gurkengla@dslb-002-203-144-204.002.203.pools.vodafone-ip.de) (Ping timeout: 256 seconds)
[00:36:05] <grym> donald1: well, the mages did it
[00:36:31] <grym> https://en.wikipedia.org/wiki/Dark_Sun
[00:37:04] *** Joins: Falconer (~ronnyma@227.84-48-191.nextgentel.com)
[00:37:08] *** Joins: LiftLeft (~LiftLeft@216-26-118-34.dynamic.nelson.airstreamcomm.net)
[00:37:09] <p-i-> thanks grym
[00:37:35] *** Quits: humbertowoody (~humbertow@189.236.62.65) (Ping timeout: 264 seconds)
[00:37:36] *** Joins: EvilDMP (~textual@django/moderator/EvilDMP)
[00:38:18] <p-i-> This is a fierce bug. I have 2 identical linux boxes (although I've installed different python packages on each). I'm running the same https://bpa.st/TFRA udp listener code on both.
[00:38:31] *** Joins: Andrynet (~Andrey@186.46.207.121)
[00:39:00] <p-i-> I'm testing by sending a packet from another box: echo 'test-packet' > /dev/udp/${ip}/${port}
[00:39:04] <p-i-> One box picks up the packet
[00:39:07] <p-i-> The other doesn't
[00:39:25] *** Quits: EvilDMP (~textual@django/moderator/EvilDMP) (Client Quit)
[00:39:48] *** Joins: ednhmn (~ednhmn@200.173.186.62)
[00:39:50] <p-i-> Upgrading pyOpenSSL seemed to shift something, as I now no longer get THAT warning when `pip install websocket-client`
[00:40:44] <p-i-> I still get warnings (https://bpa.st/32VA) but they appear benign.
[00:40:58] *** Joins: EvilDMP (~textual@django/moderator/EvilDMP)
[00:41:00] *** Quits: EvilDMP (~textual@django/moderator/EvilDMP) (Client Quit)
[00:42:23] <braxas> I have googled for this but can't really find much, is there some way to make python use windows line endings on linux? I have some issue with RDFLib that only occurs on windows but it is quite cumbersome to test on windows and would like to basically just switch python to windows mode on linux
[00:42:54] *** Quits: GNUmoon (~GNUmoon@gateway/tor-sasl/gnumoon) (Ping timeout: 276 seconds)
[00:43:17] *** Quits: theseb (~theseb@47-220-214-54.cnrocmta03.res.dyn.suddenlink.net) (Quit: Leaving)
[00:43:46] *** Quits: Andrynet (~Andrey@186.46.207.121) (Ping timeout: 256 seconds)
[00:43:51] *** Quits: renlo (~Renlo_Ren@pool-108-14-112-182.nycmny.east.verizon.net) (Ping timeout: 265 seconds)
[00:44:20] *** Joins: Andrynet (~Andrey@186.46.207.121)
[00:46:00] *** Quits: ednhmn (~ednhmn@200.173.186.62) (Remote host closed the connection)
[00:46:06] <KirkMcDonald> braxas: You can pass `newline='\r\n'` when opening files.
[00:46:25] *** Joins: xrogaan (~xrogaan@user/xrogaan)
[00:46:27] <braxas> yes, but I'm actually not sure where the problem comes in, I don't think it is there
[00:46:33] <braxas> maybe I can change os.linesep ?
[00:46:49] *** Quits: PointThink (~PointThin@abzd79.neoplus.adsl.tpnet.pl) (Quit: Off to bed)
[00:47:10] *** Quits: humberto1 (~humbertow@189.236.62.65) (Ping timeout: 256 seconds)
[00:47:38] *** Joins: EvilDMP (~textual@django/moderator/EvilDMP)
[00:47:47] *** Quits: y2o (~y2o@nat-wifivisitas-1x.campus.utfsm.cl) (Ping timeout: 264 seconds)
[00:47:50] <braxas> nope, did not work I think
[00:48:05] *** Joins: greedom (~greedom@x59cc99b5.dyn.telefonica.de)
[00:48:18] *** Joins: CaryHartline (~CaryHartl@cpe-76-185-112-162.tx.res.rr.com)
[00:48:39] *** Quits: Andrynet (~Andrey@186.46.207.121) (Ping timeout: 250 seconds)
[00:49:26] *** Joins: renlo (~Renlo_Ren@pool-108-14-112-182.nycmny.east.verizon.net)
[00:49:45] *** Joins: djapo (~archangel@user/djapo)
[00:49:52] *** Joins: Andrynet (~Andrey@186.46.207.121)
[00:49:56] *** Joins: ednhmn (~ednhmn@200.173.186.62)
[00:50:02] *** Quits: stewie925 (~stewie925@76-216-148-100.lightspeed.sntcca.sbcglobal.net) (Ping timeout: 256 seconds)
[00:50:21] *** Quits: citizen_stig (~citizen_s@2001:982:9f64:1:c5da:bc1b:7218:a6bc) (Quit: Textual IRC Client: www.textualapp.com)
[00:50:37] *** Quits: Pixi (~Pixi@user/pixi) (Ping timeout: 265 seconds)
[00:51:40] *** plattfisch is now known as thunfisch
[00:51:59] *** Joins: ThanatosJ (~Thanatos@105.112.11.150)
[00:52:06] *** Joins: y1n (~y1n@91.141.34.188.wireless.dyn.drei.com)
[00:52:56] *** Quits: pycurious (~Adium@user/pycurious) (Quit: Leaving.)
[00:52:56] *** Quits: EvilDMP (~textual@django/moderator/EvilDMP) (Quit: My MacBook has gone to sleep. ZZZzzz…)
[00:53:22] <braxas> yeah, tried that, did not reproduce error
[00:54:42] <QuaternionsRock> sco1 I can no longer find an example where `fix` fails. No idea lol
[00:54:46] *** Quits: greedom (~greedom@x59cc99b5.dyn.telefonica.de) ()
[00:55:09] *** Quits: Thanatos (~Thanatos@105.112.183.97) (Ping timeout: 250 seconds)
[00:55:11] *** Joins: Valeria (~Valeria@user/valeria)
[00:55:49] <mefistofeles> just in case you have ideas, what would a mask=False do to a masked array? I don't really understand it
[00:55:55] <mefistofeles> this is numpy, btw
[00:56:33] *** Joins: humberto1 (~humbertow@189.236.62.65)
[00:58:51] *** Quits: ednhmn (~ednhmn@200.173.186.62) (Remote host closed the connection)
[00:59:08] *** Joins: ednhmn (~ednhmn@200.173.186.62)
[01:00:59] <InPhase> mefistofeles: False masks nothing, True masks everything, and a matched iterable gets bool casted and applied as the mask.
[01:01:17] *** Quits: humberto1 (~humbertow@189.236.62.65) (Ping timeout: 268 seconds)
[01:01:42] *** Quits: ubert (~Thunderbi@p200300ecdf0ba28041546fb5cdf9abd5.dip0.t-ipconnect.de) (Remote host closed the connection)
[01:01:45] *** Quits: winterflaw (~winterfla@gateway/tor-sasl/winterflaw) (Ping timeout: 276 seconds)
[01:01:59] *** Quits: Elzington (~Elzington@static-68-235-44-10.cust.tzulo.com) (Quit: Leaving)
[01:03:53] *** Joins: Pixi (~Pixi@user/pixi)
[01:04:45] <InPhase> mefistofeles: Compare:  np.ma.array([1,4,9,16], mask=[1,1,0,0]).mean()   np.ma.array([1,4,9,16], mask=[0,0,0,0]).mean()   np.ma.array([1,4,9,16], mask=False).mean()  np.ma.array([1,4,9,16], mask=True).mean()
[01:05:02] *** Joins: fofoni (~fofoni@user/fofoni)
[01:05:09] *** Quits: grooverman (~grooverma@177.102.117.95) (Read error: Connection reset by peer)
[01:07:08] *** Joins: Thanattt (~Thanatos@197.210.45.14)
[01:07:52] *** Quits: QuaternionsRock (~Quaternio@76.191.39.82) (Quit: Client closed)
[01:07:59] *** Joins: pycurious (~Adium@user/pycurious)
[01:07:59] *** Quits: pycurious (~Adium@user/pycurious) (Client Quit)
[01:08:19] *** Joins: grooverman (~grooverma@177.102.117.95)
[01:08:23] *** Quits: ThanatosJ (~Thanatos@105.112.11.150) (Read error: Connection reset by peer)
[01:08:52] *** Quits: ednhmn (~ednhmn@200.173.186.62) (Remote host closed the connection)
[01:09:06] *** Joins: junktext (~junktext@gateway/vpn/pia/junktext)
[01:09:29] *** Quits: djapo (~archangel@user/djapo) (Remote host closed the connection)
[01:09:38] *** Joins: pycurious (~Adium@user/pycurious)
[01:09:53] *** Quits: TJ- (~root@about/linux/staff/tj-) (Ping timeout: 250 seconds)
[01:09:56] *** Quits: pycurious (~Adium@user/pycurious) (Client Quit)
[01:10:15] *** Joins: djapo (~archangel@user/djapo)
[01:10:42] *** Quits: Zer0xFF (m-3laxwu@matrix.michaelsasser.org) (Remote host closed the connection)
[01:11:07] *** Quits: Pickchea (~private@user/pickchea) (Quit: Leaving)
[01:12:06] *** Quits: TuckerBrandy199 (~TuckerBra@209.87.29.242) (Ping timeout: 256 seconds)
[01:12:20] *** Joins: humberto1 (~humbertow@189.236.62.65)
[01:12:41] *** Joins: Zer0xFF (m-3laxwu@matrix.michaelsasser.org)
[01:13:02] *** Joins: FFY00_ (~FFY00@archlinux/trusteduser/ffy00)
[01:14:58] *** Joins: GNUmoon (~GNUmoon@gateway/tor-sasl/gnumoon)
[01:15:14] *** Quits: djapo (~archangel@user/djapo) (Quit: leaving)
[01:15:23] *** Quits: FFY00 (~FFY00@archlinux/trusteduser/ffy00) (Ping timeout: 264 seconds)
[01:15:32] *** Joins: djapo (~archangel@user/djapo)
[01:15:36] *** Joins: ednhmn (~ednhmn@200.173.186.62)
[01:19:47] *** Quits: humberto1 (~humbertow@189.236.62.65) (Ping timeout: 268 seconds)
[01:20:02] *** Quits: CaryHartline (~CaryHartl@cpe-76-185-112-162.tx.res.rr.com) (Quit: My iMac has gone to sleep. ZZZzzz…)
[01:20:34] *** Joins: bomb-on (~bomb-on@194.144.47.113)
[01:21:43] *** Quits: Valeria (~Valeria@user/valeria) (Quit: Textual IRC Client: www.textualapp.com)
[01:22:52] *** Quits: renlo (~Renlo_Ren@pool-108-14-112-182.nycmny.east.verizon.net) (Ping timeout: 256 seconds)
[01:23:05] *** Quits: guenhael (~Thunderbi@2a01cb008c3d58007d6372e51fb97c5a.ipv6.abo.wanadoo.fr) (Remote host closed the connection)
[01:23:45] *** Joins: OMGOMG (~bobrobert@poppy.ifi.uio.no)
[01:24:11] *** Quits: LiftLeft (~LiftLeft@216-26-118-34.dynamic.nelson.airstreamcomm.net) (Ping timeout: 250 seconds)
[01:24:52] *** Joins: guenhael (~Thunderbi@2a01cb008c3d58007d6372e51fb97c5a.ipv6.abo.wanadoo.fr)
[01:26:02] *** Quits: Inline (~Inline@2a02:908:1252:7a80:7839:e0f2:7ca6:b112) (Remote host closed the connection)
[01:26:23] *** Quits: Andrynet (~Andrey@186.46.207.121) (Ping timeout: 265 seconds)
[01:26:37] *** Quits: vvdaiwrw (~rvgzuuqp@gateway/tor-sasl/rvgzuuqp) (Quit: vvdaiwrw)
[01:27:09] *** Joins: dbear (~david@mesa.ha.school)
[01:28:00] *** Joins: Andrynet (~Andrey@186.46.207.121)
[01:28:01] *** Joins: merijn (~merijn@83-160-49-249.ip.xs4all.nl)
[01:28:48] <dbear> looking for sqlalchemy help, does anyone know if the declarative_base class has been changed in a recent update ?
[01:30:12] <phy1729> why do you ask?
[01:31:01] *** Quits: Barones (~Barones@2804:48dc:8500:0:6904:c7e7:9177:1a9c) (Quit: Leaving)
[01:31:10] *** Joins: emf_ (~emf@163.114.132.1)
[01:32:12] *** Joins: Inline (~Inline@2a02:908:1252:7a80:7839:e0f2:7ca6:b112)
[01:32:19] <dbear> I'm getting an error about run_ddl_visitor -- which never appeared before. I'm using version 1.4.27 -- and the code that has been working was using version 1.1.11
[01:33:13] <dbear> phy1729: its becuase I've nver seen the run_ddl_visitor error when using declarative_base
[01:33:40] *** Quits: rany (~rany@user/rany) (Remote host closed the connection)
[01:33:43] *** Joins: Bakunin (~Lindis@user/lindis)
[01:33:44] *** Quits: marcello42 (~mp@p200300dfaf07ff01fa2e52f98b4dfc80.dip0.t-ipconnect.de) (Quit: WeeChat 3.3)
[01:33:48] <dbear> If I can't understand where this exception comes from, then I have to resource to templated sql code
[01:34:09] *** Quits: djapo (~archangel@user/djapo) (Ping timeout: 250 seconds)
[01:34:30] <donald1> grym: lol ok
[01:34:35] *** Quits: emf (~emf@2620:10d:c090:400::5:69fc) (Ping timeout: 268 seconds)
[01:34:48] <donald1> anyway nobody for my question?
[01:35:15] <dbear> donald1: I just joined and didn't see your question
[01:35:17] *** Joins: djapo (~archangel@user/djapo)
[01:35:20] <dbear> can you repost?
[01:37:24] *** Quits: bdeshi (~bdeshi@bdeshi.space) (Quit: bouncer disconnect)
[01:37:29] *** Joins: LiftLeft (~LiftLeft@gateway/vpn/pia/liftleft)
[01:37:56] *** Joins: bdeshi (~bdeshi@bdeshi.space)
[01:39:17] *** Joins: p-i-_ (~Ohmu@mx-ll-223.206.149-27.dynamic.3bb.co.th)
[01:39:53] *** Quits: Common (~Common@user/common) (Read error: Connection reset by peer)
[01:39:59] *** Joins: CaryHartline (~CaryHartl@2603-8080-6a0e-8d88-5d71-0aee-812d-c1b0.res6.spectrum.com)
[01:40:25] *** Quits: ednhmn (~ednhmn@200.173.186.62) (Remote host closed the connection)
[01:41:00] *** Quits: djapo (~archangel@user/djapo) (Ping timeout: 256 seconds)
[01:41:01] *** Quits: Klinda (~superleag@user/klinda) (Quit: Konversation terminated!)
[01:41:10] *** Joins: EvilDMP (~textual@django/moderator/EvilDMP)
[01:41:52] *** Joins: stewie925 (~stewie925@2600:1702:44f0:35c0:1cd1:1df9:4049:aaac)
[01:42:47] *** Quits: Midjak (~Midjak@82-65-111-221.subs.proxad.net) (Quit: This computer has gone to sleep)
[01:42:49] *** Quits: p-i- (~Ohmu@mx-ll-223.206.149-27.dynamic.3bb.co.th) (Ping timeout: 265 seconds)
[01:44:06] *** Joins: Common (~Common@user/common)
[01:44:22] *** Quits: CodeMouse92 (~CodeMouse@user/codemouse92) (Quit: Oh freddled gruntbuggly | Thy micturations are to me | As plurdled gabbleblotchits | On a lurgid bee)
[01:44:50] *** Joins: humberto1 (~humbertow@189.236.62.65)
[01:45:40] *** Joins: Elzington (~Elzington@static-68-235-44-68.cust.tzulo.com)
[01:46:12] *** Quits: Inline (~Inline@2a02:908:1252:7a80:7839:e0f2:7ca6:b112) (Ping timeout: 265 seconds)
[01:48:21] *** Joins: topside (~topside@ip68-226-238-34.lf.br.cox.net)
[01:48:39] *** Quits: EvilDMP (~textual@django/moderator/EvilDMP) (Quit: My MacBook has gone to sleep. ZZZzzz…)
[01:48:54] *** Joins: tum92 (~tum92@cpe-74-71-172-197.nyc.res.rr.com)
[01:49:22] *** Quits: wovixo (~wovixo@128.104.205.49) (Quit: Leaving)
[01:49:35] *** Quits: zuQe8 (~zuQe8@cpc105060-sgyl40-2-0-cust136.18-2.cable.virginm.net) (Ping timeout: 265 seconds)
[01:51:00] *** Quits: tum92 (~tum92@cpe-74-71-172-197.nyc.res.rr.com) (Remote host closed the connection)
[01:51:03] *** Joins: ednhmn (~ednhmn@200.173.186.62)
[01:51:31] *** Quits: Andrynet (~Andrey@186.46.207.121) (Ping timeout: 265 seconds)
[01:51:51] *** Quits: AM (~techman@82-203-167-114.bb.dnainternet.fi) (Ping timeout: 268 seconds)
[01:52:20] *** Quits: puff (~user@S0106d4ca6d80a83c.vs.shawcable.net) (Read error: Connection reset by peer)
[01:52:34] *** Joins: puff (~user@S0106d4ca6d80a83c.vs.shawcable.net)
[01:52:42] *** Joins: jdavfsxd (~rvgzuuqp@gateway/tor-sasl/rvgzuuqp)
[01:52:59] *** Quits: bomb-on (~bomb-on@194.144.47.113) (Quit: aллилѹіа!)
[01:53:15] *** Quits: manti7 (~manti7@176.10.104.94) (Quit: WeeChat 3.3)
[01:53:16] *** Joins: Andrynet (~Andrey@186.46.207.121)
[01:53:40] *** Joins: AM (~techman@82-203-163-159.bb.dnainternet.fi)
[01:55:44] *** Quits: ednhmn (~ednhmn@200.173.186.62) (Ping timeout: 256 seconds)
[01:56:05] *** Quits: otisolsen70 (~otisolsen@xd4ed80b5.cust.hiper.dk) (Quit: Leaving)
[01:56:29] *** Quits: Common (~Common@user/common) (Read error: Connection reset by peer)
[01:57:23] *** Quits: AquaL1te (~AquaL1te@user/aqual1te) (Quit: leaving)
[01:59:33] *** Joins: ednhmn (~ednhmn@200.173.186.62)
[02:00:02] <dba> what are these called {'__name__': '__main__', '__doc__': None, '__package__': None, '__loader__': <class '_frozen_importlib.BuiltinImporter'>, '__spec__': None, '__annotations__': {}, '__builtins__': <module 'builtins' (built-in)>}
[02:01:05] <donald1> Hello. I want to use the function asyncio.subprocess.stdout.read() to read output of a program with a timeout. I read that https://stackoverflow.com/questions/10756383/timeout-on-subprocess-readline-in-python and focus on the second option to work as well on linux as well on windows. I tried that https://stackoverflow.com/questions/10756383/timeout-on-subprocess-readline-in-python and got the lastly mentionned error her:https://pasteb
[02:01:05] <donald1> com/ediHVBpi
[02:01:05] <dba> they were result of printing globals()
[02:01:16] <donald1> dbear
[02:02:19] *** Quits: merijn (~merijn@83-160-49-249.ip.xs4all.nl) (Ping timeout: 250 seconds)
[02:02:38] <topside> dba, special attributes
[02:03:18] <dba> thanks, topside
[02:04:13] <nedbat> dba: in particular those special attributes are on all (most?) modules, which is what globals() shows you: the attributes of your current module.
[02:04:55] *** Joins: Common (~Common@user/common)
[02:05:57] *** Quits: ednhmn (~ednhmn@200.173.186.62) (Remote host closed the connection)
[02:06:03] <topside> dba: Official doc on those attributes can be found in the 'Callable types' section of https://docs.python.org/3/reference/datamodel.html
[02:06:33] *** Joins: audiobirb (~audio@user/audio)
[02:06:39] *** Quits: GreenResponse (~tomek@r-45-155-148-237.gpon.bialnet.pl) (Quit: Leaving)
[02:08:28] *** Quits: Socra (~Socra@206.217.216.27) (Read error: Connection reset by peer)
[02:08:53] *** Quits: junktext (~junktext@gateway/vpn/pia/junktext) (Remote host closed the connection)
[02:09:16] *** Joins: ednhmn (~ednhmn@200.173.186.62)
[02:09:18] *** Quits: ednhmn (~ednhmn@200.173.186.62) (Remote host closed the connection)
[02:09:26] <gcbirzan> donald1: Your pastebin link is broken
[02:09:31] *** Joins: Wafficus (~Wafficus@70.126.240.148)
[02:10:03] *** Joins: junktext (~junktext@gateway/vpn/pia/junktext)
[02:10:16] <Wafficus> Question about the colors presented in my project on MacOS:
[02:10:17] <Wafficus> https://bpa.st/VLYA
[02:10:30] *** Joins: orbi (~KrisPBaco@104-12-38-21.lightspeed.nsvltn.sbcglobal.net)
[02:10:49] <Wafficus> the colors I specified are not present, and I'm presented with a Light theme of colors instead
[02:11:11] *** Joins: dre (~dre@2001:8003:c932:c301:a3c2:1d7d:7185:3018)
[02:11:47] <donald1> gcbirzan I repaste
[02:11:59] *** Joins: Socra (~Socra@206.217.216.27)
[02:12:17] <donald1> https://pastebin.com/LTjzSKtW gcbirzan:
[02:13:45] <gcbirzan> donald1: first thing I notice is that sometimes you're using self.proc. in another place self.process
[02:14:34] <gcbirzan> self.proc could be a different thing.
[02:15:36] *** Quits: CaryHartline (~CaryHartl@2603-8080-6a0e-8d88-5d71-0aee-812d-c1b0.res6.spectrum.com) (Quit: My iMac has gone to sleep. ZZZzzz…)
[02:16:11] <orbi> i need to awk within python and don't want to call awk if that's the wrong way to do it.  But my brain is fried and all my searches just come up with "use awk". can someone give me a hint to start me down that path?
[02:16:18] <orbi> *a python script
[02:17:03] *** Quits: Andrynet (~Andrey@186.46.207.121) (Ping timeout: 250 seconds)
[02:17:12] <BtbN> Why would you ever need to use awk when you are already using python?
[02:17:17] *** Quits: zaquest (~notzaques@5.130.79.72) (Remote host closed the connection)
[02:17:20] <orbi> that's what i asking
[02:17:22] <grym> orbi: if you want to shell out to awk, subprocess.run is a good start
[02:17:54] <grym> orbi: but if you want to mangle some text and you know how to do it in awk but want to do it in python now... best describe what you're doing, and show us example input and output that you'd like; bpa.st is a nice pastebin
[02:17:55] <BtbN> What do you mean, that's what you're asking?
[02:18:06] <orbi> i'm wanting to do i 'right' but i cant find an answer on how to retrieve an element from a string
[02:18:07] <Wafficus> I'm assuming no one here has used 'tkinter'?
[02:18:08] <orbi> ok one sec
[02:18:20] *** Joins: zaquest (~notzaques@5.130.79.72)
[02:18:26] <orbi> why don't people like pastebin or termbin anymore
[02:18:30] <orbi> just curious
[02:18:36] *** Joins: Andrynet (~Andrey@186.46.207.121)
[02:18:38] <grym> pastebin is full of ads and nonsense
[02:18:53] <grym> and bpa.st has nice lexers and a nice channel regular you can pester for updates
[02:18:55] <grym> v. handy
[02:18:57] <Wafficus> termbin is ok but I think the channel heading always says bpaste
[02:19:07] <Staunch> when i'm in the `pdb` debugger and trying to reference a local variable called "step", how do i... do that?
[02:19:20] <orbi> https://bpa.st/SYKQ
[02:19:21] <orbi> ooh this is nice
[02:19:31] <Staunch> whenever i even breathe the word "step" pdb thinks i want to step to the next thing, even if my line is "step.obviously_accessing_a_member_variable"
[02:19:42] <bjs> Staunch: the way you normally print things `p step`
[02:19:44] <orbi> i am essentially a beginner at python again so bear with me
[02:19:53] <Staunch> bjs: hm. Well OK then. :D
[02:21:00] <orbi> from the output i need to retrieve the return code, the ttl and time
[02:22:00] <gcbirzan> I mean, some people will say that you shouldn't use regular expressions, but this seems like a perfect candidate
[02:22:29] <orbi> so shell out to awk?  or can this be done entirely within python?  that's the question i have
[02:22:33] <grym> i would aboslutely re the crap out of this
[02:22:38] <gcbirzan> Definitely can be done in python, and should be done.
[02:22:40] <orbi> best way, best practice method
[02:22:41] <grym> orbi: `import re`
[02:22:44] <bjs> orbi: python has the `re` module to do regexps
[02:22:48] <grym> (and yes, do it in python)
[02:22:49] <orbi> ok.. thanks!
[02:22:56] *** Quits: Andrynet (~Andrey@186.46.207.121) (Ping timeout: 256 seconds)
[02:23:02] <donald1> gcbirzan: yes let me try again with rename
[02:23:04] <Staunch> bjs: haha i normally print stuff by just doing "step". I will keep this `p` magic in my hat. Thanks!
[02:23:17] *** Quits: wolfshappen (~waff@irc.furworks.de) (Quit: later)
[02:23:27] <orbi> i used to know a lot of this stuff.. lets just say seizures are a bitch and amnesia isn't as fun as it is on tv.   Thanks everyone
[02:23:36] * orbi bows
[02:23:38] <grym> gl!
[02:23:40] <bjs> Staunch: pdb is a bit weird and tries to be "helpful" by printing things that look like expressions
[02:23:42] *** Parts: orbi (~KrisPBaco@104-12-38-21.lightspeed.nsvltn.sbcglobal.net) ()
[02:23:51] *** Joins: AlphaEcho (~cyborg@user/alphaecho)
[02:24:00] *** Joins: Andrynet (~Andrey@186.46.207.121)
[02:24:04] <Staunch> bjs: yeah, a lot of tools i use try to be "helpful" in distinctly unhelpful ways. ":D
[02:24:09] <donald1> yes it is true but the error is at line line = await asyncio.wait_for(self.proc.stdout.readline(), timeout)
[02:24:09] *** Quits: fedenix (~fedenix@gateway/tor-sasl/fedenix) (Remote host closed the connection)
[02:24:18] <donald1> gcbirzan
[02:24:34] <bjs> donald1: yes but that line talks about self.proc,  what is self.proc? is it the same as self.process? what's the difference? if they're not the same what is self.process
[02:24:41] *** Quits: Staunch (~Staunch@c-24-7-237-208.hsd1.mn.comcast.net) (Remote host closed the connection)
[02:24:42] <bjs> and where did these proc and process things come from
[02:25:31] <bjs> (or maybe it's just easier to show the whole file?)
[02:25:38] *** Joins: Barones (~Barones@2804:7f3:8987:f411:a5a5:30be:b120:e93f)
[02:25:45] *** Quits: gitesh (uid423739@ilkley.irccloud.com) (Quit: Connection closed for inactivity)
[02:25:46] <donald1> sale error type https://pastebin.com/WV8JFQ0u
[02:25:55] <AlphaEcho> Query:  I would like to use a python lib installed via pip on a BeagleBone Black.  I'm developing the code for this with PyCharm under windows, but I'm trying to grok the SPI library as provided by Adafruit (Adafruit_BBIO).  Their documentation, unfortunately from what I can find, is... slim
[02:26:22] <donald1> bjs the only process is self.proc = await asyncio.create_subprocess_exec(program = args, stdout=PIPE, stderr=STDOUT)
[02:26:41] <AlphaEcho> The pip install shows a fairly short file to a .so compiled library, so the code isn't really readily available.
[02:26:50] <donald1> https://pastebin.com/wcV65C0Q
[02:27:04] <Wafficus> I realized that I did not utilize a 'task' variable, just wanted to provide you the exciting update
[02:27:20] <Wafficus> AlphaEcho sounds pretty cool
[02:27:27] <gcbirzan> donald1: That error is very weird, unless you started the process in a weird way.
[02:27:49] <AlphaEcho> Wafficus: It'll be an interesting project... if I can talk via SPI.
[02:27:50] <donald1> gcbirzan: want to see my full PR?
[02:28:10] <Wafficus> AlphaEcho are you doing KiwiSDR with it? I'm curious, as I've only seen KiwiSDR projects used with these since they're kind of only made for that I think
[02:28:11] <gcbirzan> donald1: That's what bjs asked for, it might help
[02:28:32] <Wafficus> AlphaEcho would love to pick your brain if you're into packet radio too, but its #OT so no worries
[02:28:44] <AlphaEcho> Wafficus: Negative, work project, talking to some ADC's and things
[02:29:02] <Wafficus> ah cool, neat, never knew you could do anything non-ham related with those ;)
[02:29:08] <AlphaEcho> Oh, here's something, it's spi.xfer2.. whee documentation
[02:30:21] <AlphaEcho> Anyway, the libraries won't install under windows (gee), not sure if there's a good way to fake out pycharm so that it can at least say "Oh, these are the methods you'll want..." even if at runtime it needs to say "Uh, whut?  SPI on a windows box?  Whatcha smokin?"
[02:30:32] *** Joins: Mattiaslndstrm (~Mattiasln@c213-103-137-235.bredband.tele2.se)
[02:30:46] <bjs> donald1: `create_subprocess_exec(program = args`  did you type that correctly? that seems very weird
[02:30:50] <bjs> why would program = args?
[02:31:05] *** Joins: Moosadee (~Moosadee@136.32.155.193)
[02:31:05] *** Quits: Mattiaslndstrm (~Mattiasln@c213-103-137-235.bredband.tele2.se) (Client Quit)
[02:31:26] <gcbirzan> donald1: I see the problem, you're making a loop and starting the process with that loop.
[02:31:44] <donald1> bjs: yes the variable args is from the argument in the init
[02:31:47] <gcbirzan> You should either start your loop like that, probably.
[02:31:51] <donald1> process("args")
[02:32:10] <bjs> donald1: what?  that makes even less sense
[02:32:14] <bjs> can you share the actual code?
[02:32:28] *** Parts: dbear (~david@mesa.ha.school) ()
[02:32:33] *** Quits: mallkrampus (~mallkramp@178.238.11.48) (Ping timeout: 268 seconds)
[02:32:41] <Wafficus> AlphaEcho Not sure if it applies, but this is always the Windows bro answer given to me: Have you tried tapping into WSL to avoid Billy Boy's OS's pitfalls?
[02:33:02] <donald1> bjs did you get my code in pm?
[02:33:05] *** Quits: Andrynet (~Andrey@186.46.207.121) (Ping timeout: 265 seconds)
[02:33:05] <donald1> it is the linl
[02:33:07] <donald1> link
[02:33:11] <AlphaEcho> Wafficus: Well, I don't think it matters what OS is running, if there is no underlying SPI device, I wouldn't expect it to work
[02:33:12] *** Joins: dibas (~dibas@user/dibas)
[02:33:23] *** Quits: onu (~onufn@gibbs.uberspace.de) (Quit: %...%)
[02:33:26] <bjs> donald1: I don't read PMs about Python stuff,  you can put it here though
[02:33:37] *** Joins: onu (~onufn@gibbs.uberspace.de)
[02:34:18] <donald1> bjs is the channel logged?
[02:34:20] <AlphaEcho> pip installing the Adafruit_BBIO package yields me an error that VisualC++ build tools 2014+ aren't installed (they are), and then just barfs
[02:34:26] <bjs> donald1: no but my privmsgs are
[02:34:31] <bjs> by me
[02:34:35] <gcbirzan> bjs: basically, the SO answer says "use this type of loop" and he just made another loop and started the subprocess like that.
[02:34:44] *** Joins: Andrynet (~Andrey@186.46.207.121)
[02:34:44] <bjs> What SO answer?
[02:34:46] <bjs> I missed something
[02:34:58] <gcbirzan> Yeah, he said he tried to implement this: https://stackoverflow.com/a/34114767
[02:35:09] <donald1> bjs whaaat? online?
[02:35:28] <bjs> donald1: are you worried about someone getting your code?
[02:35:33] <donald1> anyway here is the full code
[02:35:34] <donald1> https://github.com/gogo2464/pwntools/tree/hand-PE-libs
[02:35:37] <gcbirzan> Nobody is going to try to steal your _public_ PR
[02:35:38] *** Quits: cthulchu (~Cthulchu@193.194.107.250) (Ping timeout: 268 seconds)
[02:35:41] *** Quits: stewie925 (~stewie925@2600:1702:44f0:35c0:1cd1:1df9:4049:aaac) (Quit: Client closed)
[02:35:53] *** Joins: dhch8 (~dhch@185.213.154.168)
[02:36:01] *** Quits: Cyp (~cyp@192038135092.mbb.telenor.dk) (Excess Flood)
[02:36:05] <donald1> k
[02:36:06] <donald1> anyway
[02:36:07] <bjs> donald1: those 2 asyncio.run() calls look weird
[02:36:16] <donald1> bjs where?
[02:36:26] *** Joins: Cyp (~cyp@192038135092.mbb.telenor.dk)
[02:36:28] *** Quits: dhch (~dhch@185.213.154.168) (Read error: Connection reset by peer)
[02:36:28] *** dhch8 is now known as dhch
[02:36:33] <bjs> donald1: the first file in the pr, toplevel.py
[02:36:44] <bjs> Calling asyncio.run more than once in an entire program is probably a bug
[02:36:57] <donald1> ah this is a personnal test. I plan to delete these 2 lines when I will commit
[02:37:00] *** Joins: prsn (~prsn@c-73-238-74-10.hsd1.ma.comcast.net)
[02:37:00] <donald1> push
[02:37:11] <bjs> donald1: aren't those the lines you're using to test if the code works?
[02:37:23] *** Joins: orangeboxcutter (~orange@user/orangeboxcutter)
[02:37:24] *** Quits: naranja (~orange@user/orangeboxcutter) (Quit: AFK)
[02:37:29] <donald1> bjs can I do p.recv(15, timeout=2) ? I wish ! and then how?
[02:37:35] *** Joins: cthulchu (~Cthulchu@193.194.107.250)
[02:37:43] <donald1> bjs: just t be quick
[02:37:50] <bjs> donald1: no make 1 function and call asyncio.run once and inside that function make the process and then call recv
[02:37:55] <bjs> don't call run twice
[02:38:00] <gcbirzan> https://github.com/gogo2464/pwntools/commit/b9829e2cdb2dcf2fe56e12af8e0f0025b25e7aa9#diff-ff894597fe902a814d5f6dcf1e84903110a801395efea6da17554a20c1c1f701L104-L106
[02:38:16] <gcbirzan> Or there, github is being weird about generating links
[02:38:40] <prsn> hi! i am trying to understand the behavior of a package (socketconsole), in which it appears that i am seeing a call to socket.accept() successfully return a new socket, but the remote address is the empty string, and nothing was actively trying to connect
[02:38:41] <bjs> ah and you're manually overwriting(?) the event loop?  That seems weird/wrong too
[02:39:19] <prsn> when i make a socket myself and call accept, it blocks as i would expect it to. but when socketconsole calls the same things, at least under some circumstances it seems to return right away and start sending data to the new socket
[02:39:52] <prsn> i'm trying to understand what's going on because under other circumstances, it's /not/ doing that, resulting in it not working at all.
[02:40:17] <donald1> bjs I just tried to implement https://stackoverflow.com/a/34114767/12671313
[02:40:39] <prsn> the socket docs don't seem to mention anything about blocking and non-blocking versions, though i did find an SO answer that mentions setblocking(0). however, nothing is calling that, so i don't think it's relevant.
[02:40:40] *** Joins: emerent (~quassel@p200300cd572be6aeba27ebfffed28a59.dip0.t-ipconnect.de)
[02:41:02] <bjs> donald1: notice how this stackoverflow code only actually calls "run" (or *a* run method once)
[02:41:05] <bjs> you call asyncio.run *twice*
[02:41:06] <donald1> bjs can you write a short example of what is wrong in the chat
[02:41:15] <donald1> ahhhhh
[02:41:18] *** Quits: fikran (~fikran@user/fikran) (Ping timeout: 265 seconds)
[02:41:45] <cluelessperson> gcbirzan, the link seems fine.   It's just  hash1, hash2: line numbers.
[02:41:47] <cluelessperson> :D
[02:41:48] <prsn> this is the line in question: https://github.com/robotadam/socketconsole/blob/master/socketconsole.py#L56
[02:41:58] *** Joins: adiKt (uid472628@tinside.irccloud.com)
[02:42:28] <prsn> can anyone help me understand why that would ever return immediately with a usable socket but an empty addr?
[02:42:36] *** Joins: stewie925 (~stewie925@2600:1702:44f0:35c0:1cd1:1df9:4049:aaac)
[02:42:55] <donald1> bjs where are the functions runs called in my code. not sure to understand
[02:43:10] *** Joins: fikran (~fikran@user/fikran)
[02:43:37] <cluelessperson> prsn, you're doing conn.close()
[02:43:50] <donald1> bjs quick please. sorry to be so fast but I need to sleep
[02:43:51] <bjs> donald1: https://github.com/gogo2464/pwntools/commit/b9829e2cdb2dcf2fe56e12af8e0f0025b25e7aa9 line95/96 in the first file toplevel.py
[02:43:53] *** Joins: mallkrampus (~mallkramp@185.169.233.47)
[02:43:53] <donald1> it is very later
[02:44:14] <prsn> cluelessperson: i'm talking about the line two above that returning at all. no way you can get to the close call if accept blocks.
[02:44:16] <bjs> donald1: I mean I don't know how to make this clearer: there is asyncio.run().  You call it.  then you call it *again*.
[02:44:19] <gcbirzan> cluelessperson: I meant or around there, but yeah
[02:44:41] <bjs> donald1: you should only call asyncio.run() (or run_forever or run_until_complete) once
[02:44:47] *** Quits: Tas-sos (~Tas-sos@ppp046176221197.access.hol.gr) (Ping timeout: 250 seconds)
[02:45:15] <donald1> bjs I just pushed again. is it better?
[02:45:27] *** Joins: internut (~internut@2601:280:4e00:7b70:49d1:8c3c:68e5:74c0)
[02:45:47] <bjs> donald1: well the commit i was looking at just vanished, so ...
[02:45:50] <donald1> but I still have same error
[02:45:51] <bjs> (yes?)
[02:46:10] <cluelessperson> gcbirzan, I'm not sure of the context this is running within, I imagine it's encountering an error outside of the try:except
[02:46:14] <bjs> donald1: well I'm not saying it was the only bug, it was just the first bug i saw in the first file in the commit
[02:46:26] <cluelessperson> gcbirzan, you can try throwing in    print(1), print(2), print(3) at various points in the logic to see how far it gets.
[02:46:37] *** Quits: causa_sui (~causasui@c-68-60-125-136.hsd1.mi.comcast.net) (Ping timeout: 265 seconds)
[02:46:44] *** Quits: Andrynet (~Andrey@186.46.207.121) (Ping timeout: 256 seconds)
[02:46:48] *** Quits: akk (~akk@75.161.146.115) (Quit: +++)
[02:47:03] *** Quits: darksun (~darksun@user/darksun) (Quit: leaving)
[02:47:08] *** Joins: pycurious (~Adium@user/pycurious)
[02:47:17] <donald1> the real bug is on line 204 of tubes.py
[02:47:36] <gcbirzan> cluelessperson: ah, it's not me that's having the problem, donald1 is
[02:47:58] *** Quits: topside (~topside@ip68-226-238-34.lf.br.cox.net) (Ping timeout: 268 seconds)
[02:47:59] *** Quits: mxp (~mxp@185.16.205.131) (Ping timeout: 268 seconds)
[02:48:21] *** Joins: Andrynet (~Andrey@186.46.207.121)
[02:48:52] <donald1> I have to sleep. Could I let you with just 2 questions: 1-can I set a timeout with asyncio and avoid to let the user to use asyncio.run() everywhere in my library? 2-do you know how to fix the error that I posted please?
[02:49:04] <bjs> donald1: that line looks fine
[02:50:03] <prsn> i'm realizing i might need to understand a simpler thing first: what does it mean to call socket.bind() with a filepath rather than a (host, port) tuple? how do you connect to a socket bound in that way?
[02:50:57] <donald1> bjs no this is not fine. just look at the compiler https://pastebin.com/vxtzwYcz
[02:51:30] <bjs> donald1: okay but just because Python errored *when* it got to that line that just means when it noticed something was wrong
[02:51:41] *** Quits: Wafficus (~Wafficus@70.126.240.148) (Quit: Connection closed)
[02:51:47] <bjs> it didn't mean it went wrong at that point,  I still think the problem will be that you're starting new loops before then
[02:52:54] *** Quits: Andrynet (~Andrey@186.46.207.121) (Ping timeout: 265 seconds)
[02:53:46] *** Joins: Andrynet (~Andrey@186.46.207.121)
[02:53:53] *** Quits: cthulchu (~Cthulchu@193.194.107.250) (Ping timeout: 250 seconds)
[02:54:01] *** Quits: LucaTM (~LucaTM@user/lucatm) (Quit: Textual IRC Client: www.textualapp.com)
[02:54:28] <donald1> ahhh ok
[02:54:42] <donald1> bjs what line?
[02:55:00] <bjs> donald1: well you still have what gcbirzan pointed out
[02:55:18] *** mjh4386_ is now known as mjh4386
[02:55:39] *** Joins: Staunch (~Staunch@c-24-7-237-208.hsd1.mn.comcast.net)
[02:55:51] <bjs> donald1: with this ProactorEventLoop and run_until_complete,  why are you doing that inside the recv() call?  Basically you shouldn't create the process in one loop then try readline in the other
[02:55:54] *** Quits: brelod (~me@90.244.150.142) (Quit: leaving)
[02:56:05] <bjs> your actual readline line (line 204) doesn't look buggy at all
[02:56:19] *** Quits: servytor (uid525486@hampstead.irccloud.com) (Quit: Connection closed for inactivity)
[02:56:23] *** Quits: palasso (~palasso@user/palasso) (Remote host closed the connection)
[02:56:41] *** Quits: gruuf (~gruuf@94.31.105.29) (Quit: WeeChat 3.3)
[02:56:49] <donald1> bjs no. what did he pointed?
[02:57:00] *** Quits: dextercd (~dexter@2a02-a450-f25d-1-76d4-35ff-fefe-34c.fixed6.kpn.net) (Quit: WeeChat 3.3)
[02:57:07] <donald1> bjs any example please?
[02:57:19] <bjs> donald1: well the thing I just said,  in recv() you start a new loop.  But you already had a loop and created the process in it
[02:57:22] <bjs> donald1: example of what?
[02:58:39] *** Quits: kosh (~kosh@user/kosh) (Ping timeout: 250 seconds)
[02:59:02] <donald1> bjs of the loop
[02:59:22] <bjs> donald1: I mean in your code, the ProactorEventLoop stuff you added.  You do it *inside* recv
[02:59:41] *** Quits: Andrynet (~Andrey@186.46.207.121) (Ping timeout: 268 seconds)
[03:00:07] <donald1> I might have understood
[03:00:10] *** Joins: Andrynet (~Andrey@186.46.207.121)
[03:00:18] *** Quits: Staunch (~Staunch@c-24-7-237-208.hsd1.mn.comcast.net) (Ping timeout: 268 seconds)
[03:00:22] <bjs> but you can't really start a new loop just to do the recv because you've already created the process at that point.  This isn't a small bug/typo,  it's that the whole approach needs re-thinking because it won't work to create new loops like that.  Your *entire program* should really only start 1 event loop and do everything inside it
[03:00:25] <donald1> do you mean instead if in async_recv bjs
[03:00:29] *** Joins: causa_sui (~causasui@c-68-60-125-136.hsd1.mi.comcast.net)
[03:00:45] <bjs> donald1: no I really mean you shouldn't be creating new loops inside -any- of the recv functions
[03:01:12] <donald1> oh no :(
[03:01:14] <bjs> it's far far too late a time in the program to be trying to do that kind of thing
[03:01:32] <bjs> because the process was already created earlier and it's attached to a different loop
[03:01:58] <donald1> bjs any example of what I should do instead?
[03:02:40] <donald1> quick I have to sleep. do you prefer to continue tomorrow?
[03:02:51] <bjs> donald1: I mean this isnt' a small thing, you need to re-think how you're doing this.  But basically, do what I said earlier.  Call asyncio.run (or run_until_complete or whatever you want) and do it only once
[03:03:13] <bjs> donald1: there is no "quick" here, this isn't a typo you can just quickly fix you have to re-think what you are doing and design a different solution
[03:04:09] <bjs> (e.g. by having async_ versions of all the methods/classes and not creating new loops at all)
[03:04:37] *** Quits: cosimone (~user@2001:b07:ae5:db26:a7aa:8027:6b4e:2fb3) (Ping timeout: 268 seconds)
[03:06:10] <donald1> bjs ok. But at least if I set async versions of all methods and class, will I still avoid to change the usage of the library by the users? unit tests are importants
[03:06:54] <bjs> donald1: I don't know how the users use the library,  you could hide all the async stuff yes.  You can't avoid writing new unittests for the new async code no
[03:07:20] *** Joins: aum (~aum@202.47.255.123.static.snap.net.nz)
[03:07:31] <donald1> bjs ok cool
[03:08:06] <donald1> or maybe is there a smaller library for timeout that is not asyncronous like asyncio?
[03:08:26] *** Joins: wolfshappen (~waff@irc.furworks.de)
[03:08:35] *** Joins: herjazz (~herjazz@p6758124-ipngn30801marunouchi.tokyo.ocn.ne.jp)
[03:08:53] <aum> hi, I've got an asyncio program running way too slowly - can anyone please recommend a profiling tool (or approach or technique) for quickly finding and highlighting calls which are significantly blocking the event loop?
[03:09:33] *** Quits: Seiryuu (~Seiryuu@ip174-103-176-143.adsl2.static.versatel.nl) (Quit: Leaving)
[03:09:38] *** Quits: plastico (~plastico@neomutt/plastico) (Quit: WeeChat 3.3)
[03:09:55] *** Quits: Andrynet (~Andrey@186.46.207.121) (Ping timeout: 250 seconds)
[03:09:59] <donald1> bjs I have to sleep. can I see you tomorrow? I have some more stuff to complete and see.
[03:11:48] *** Joins: Andrynet (~Andrey@186.46.207.121)
[03:13:06] *** Joins: causa-sui (~causasui@c-68-60-125-136.hsd1.mi.comcast.net)
[03:14:16] *** Joins: mxp (~mxp@185.16.205.131)
[03:15:30] *** Quits: sudomann (~sudomann@c-98-219-165-55.hsd1.md.comcast.net) (Ping timeout: 260 seconds)
[03:16:14] *** Joins: sudomann (~sudomann@c-98-219-165-55.hsd1.md.comcast.net)
[03:16:37] <bjs> donald1: or whoever else is here tomorrow...
[03:16:53] <internut> Hi, I need to pass a value to a 'c' DLL. The type I need to pass is a c_char_p. I have been a bit befuddled about how to construct this value
[03:17:16] <internut> I need to build a buffer with 40 unsigned bytes in it
[03:17:17] *** Quits: causa-sui (~causasui@c-68-60-125-136.hsd1.mi.comcast.net) (Ping timeout: 250 seconds)
[03:17:18] *** Joins: vicfred (~vicfred@user/vicfred)
[03:17:21] <internut> and pass a pointer to it
[03:18:16] *** Joins: comlord (~Thunderbi@180.125.207.93)
[03:18:35] *** Quits: Andrynet (~Andrey@186.46.207.121) (Ping timeout: 250 seconds)
[03:19:00] *** Quits: hudo__ (~hudo@62.68.19.39) (Ping timeout: 265 seconds)
[03:19:00] *** Quits: jetchisel (jetchisel@user/jetchisel) (Ping timeout: 265 seconds)
[03:19:00] *** Joins: lesihctej (jetchisel@user/jetchisel)
[03:20:27] *** Joins: Andrynet (~Andrey@186.46.207.121)
[03:20:45] *** Quits: prsn (~prsn@c-73-238-74-10.hsd1.ma.comcast.net) (Ping timeout: 250 seconds)
[03:21:48] *** Joins: topside (~topside@ip68-226-238-34.lf.br.cox.net)
[03:22:09] *** Joins: mat001_ (~mat001@c-71-202-208-251.hsd1.ca.comcast.net)
[03:25:16] *** Quits: comlord (~Thunderbi@180.125.207.93) (Ping timeout: 256 seconds)
[03:25:23] *** Joins: djhankb (~djhankb@208.113.164.68)
[03:25:35] *** Quits: mat001 (~mat001@c-71-202-208-251.hsd1.ca.comcast.net) (Ping timeout: 264 seconds)
[03:25:59] *** Quits: jdavfsxd (~rvgzuuqp@gateway/tor-sasl/rvgzuuqp) (Quit: jdavfsxd)
[03:26:00] *** Quits: aum (~aum@202.47.255.123.static.snap.net.nz) (Killed (NickServ (GHOST command used by aum_!~davidnz10@202.47.255.123.static.snap.net.nz)))
[03:26:16] *** Joins: jdavfsxd (~rvgzuuqp@gateway/tor-sasl/rvgzuuqp)
[03:26:20] *** Joins: aum_ (~aum@202.47.255.123.static.snap.net.nz)
[03:26:45] *** Joins: aum (~davidnz10@202.47.255.123.static.snap.net.nz)
[03:28:36] *** Joins: jarthur_ (~jarthur@cpe-70-114-198-37.austin.res.rr.com)
[03:28:42] *** Quits: alzgh (~alzgh@user/alzgh) (Ping timeout: 256 seconds)
[03:29:07] *** Joins: rany (~rany@user/rany)
[03:29:33] *** Quits: Naan (~naan@user/naan) (Quit: Leaving)
[03:30:43] *** Quits: jarthur (~jarthur@2603-8080-1540-002d-8cf4-80f3-5624-4cb5.res6.spectrum.com) (Ping timeout: 250 seconds)
[03:31:18] *** Joins: ednhmn (~ednhmn@200.173.186.62)
[03:31:32] *** Quits: stewie925 (~stewie925@2600:1702:44f0:35c0:1cd1:1df9:4049:aaac) (Ping timeout: 256 seconds)
[03:31:32] <Yhg1s> internut: well, I would recommend not using ctypes (use cffi instead), but if you insist on using ctypes, you're probably looking for ctypes.create_string_buffer()
[03:32:02] <internut> Hmmm
[03:32:09] *** jarthur_ is now known as jarthur
[03:32:30] *** Quits: mayhew (~jm@hlfxns017vw-47-55-124-51.dhcp-dynamic.fibreop.ns.bellaliant.net) (Quit: Konversation terminated!)
[03:33:19] <internut> I'm calling into an existing DLL, can ctypes and cffi be used interchangeably?
[03:33:43] <internut> the DLL is part of a product
[03:33:45] <Yhg1s> They can both be used to call into an existing DLL, yes.
[03:34:01] *** Joins: penguino (~mrpenguin@user/mrpenguin)
[03:35:04] <internut> awesome, thanks
[03:35:35] *** Joins: alzgh (alzgh@user/alzgh)
[03:36:02] *** Quits: sudomann (~sudomann@c-98-219-165-55.hsd1.md.comcast.net) (Ping timeout: 256 seconds)
[03:36:21] *** Quits: junktext (~junktext@gateway/vpn/pia/junktext) (Ping timeout: 250 seconds)
[03:37:39] *** Quits: PJBoy (~PJBoy@user/pjboy) (Ping timeout: 250 seconds)
[03:37:56] *** Joins: junktext (~junktext@gateway/vpn/pia/junktext)
[03:38:05] *** Quits: Enitin (~Enitin@82.102.22.84) (Ping timeout: 250 seconds)
[03:39:46] *** Quits: ano (~ano@user/ano) (Remote host closed the connection)
[03:39:49] *** Quits: FFY00_ (~FFY00@archlinux/trusteduser/ffy00) (Ping timeout: 250 seconds)
[03:43:01] *** Joins: ano (~ano@user/ano)
[03:43:54] *** Quits: puff (~user@S0106d4ca6d80a83c.vs.shawcable.net) (Read error: Connection reset by peer)
[03:44:07] *** Joins: puff (~user@S0106d4ca6d80a83c.vs.shawcable.net)
[03:44:18] *** Quits: pycurious (~Adium@user/pycurious) (Quit: Leaving.)
[03:44:21] *** Joins: portalrat_ (~portalrat@user/portalrat)
[03:44:26] *** Quits: portalrat (~portalrat@user/portalrat) (Remote host closed the connection)
[03:44:34] *** Quits: alzgh (alzgh@user/alzgh) (Ping timeout: 256 seconds)
[03:44:35] *** Quits: Thanattt (~Thanatos@197.210.45.14) (Ping timeout: 250 seconds)
[03:45:46] *** Joins: stewie925 (~stewie925@2600:1702:44f0:35c0:1cd1:1df9:4049:aaac)
[03:45:49] *** Joins: Enitin (~Enitin@82.102.22.86)
[03:46:18] *** Quits: mags (~mags@097-090-237-145.res.spectrum.com) (Ping timeout: 260 seconds)
[03:46:19] *** Joins: brentaarnold (~brentaarn@32.132.115.46)
[03:47:37] *** Quits: junktext (~junktext@gateway/vpn/pia/junktext) (Ping timeout: 250 seconds)
[03:47:37] *** Quits: Kvothe (~weechat@user/elodin) (Ping timeout: 250 seconds)
[03:48:07] *** Joins: mags (~mags@097-090-237-145.res.spectrum.com)
[03:48:08] *** Joins: alzgh (~alzgh@user/alzgh)
[03:48:09] *** Quits: Ivii (~Ivyy@2001:a61:13ad:1c01:a7c8:db20:a5d0:f061) (Quit: Leaving)
[03:48:17] *** Joins: ivan_ (~Ivyy@2001:a61:13ad:1c01:a7c8:db20:a5d0:f061)
[03:49:50] *** Joins: pycurious (~Adium@user/pycurious)
[03:50:03] *** Quits: user3456 (user3456@user/user3456) (Quit: ZNC - https://znc.in)
[03:51:10] *** Quits: The_Jag (~The_Jag@host-87-9-29-108.retail.telecomitalia.it) (Quit: The_Jag)
[03:51:33] *** Joins: user3456 (user3456@user/user3456)
[03:51:43] *** Quits: Sario (uid356235@fosshost/cdo/Sario) (Quit: Connection closed for inactivity)
[03:51:44] *** Joins: Gurkenglas (~Gurkengla@dslb-002-203-144-204.002.203.pools.vodafone-ip.de)
[03:52:15] <df_data> Hey guys, I have a site that listens for a http response and returns the data as json, my problem is everyone I start the server the json file opens but doesn’t seem to create a new file every time I go to the site, the .json remains open, how can I close it after a return is complete?
[03:52:35] *** Joins: CaryHartline (~CaryHartl@2603-8080-6a0e-8d88-5d71-0aee-812d-c1b0.res6.spectrum.com)
[03:52:49] *** Quits: DrBrownBear (~DrBrownbe@2600:1700:9aa1:6bc0:f925:4060:42e0:d07e) (Quit: Leaving)
[03:55:20] *** Quits: philectro (~quassel@2a02:2788:9a4:946:cead:2a22:9e2e:2859) (Quit: https://quassel-irc.org - Chat comfortably. Anywhere.)
[03:55:22] *** Quits: EgonX (~EgonX@2601:2c6:47f:879e:3569:bbfe:cdf9:36cf) (Quit: Textual IRC Client: www.textualapp.com)
[03:55:45] *** Joins: comlord (~Thunderbi@180.117.11.32)
[03:56:12] <whatsupdoc> Is it better to use `from abc import ABC` instead of not importing anything and using `pass`?
[03:56:47] <KirkMcDonald> whatsupdoc: What? In what context?
[03:57:30] <whatsupdoc> Idk let's say I'm creating an abstract class? Do I really need to import ABC? Can't you just use `pass` everything and not import anything?
[03:57:45] <Yhg1s> whatsupdoc: then it's not an abstract class, it's just an empty one.
[03:58:11] <whatsupdoc> But things would be able to inherit from it and implement those scaffold functions, no?
[03:58:12] <Yhg1s> An abstract class makes it so subclasses _have_ to define the abstract methods, or you can't use them. You can't accidentally omit some.
[03:58:27] <whatsupdoc> Oh I see...ok.
[03:58:35] *** Joins: merijn (~merijn@83-160-49-249.ip.xs4all.nl)
[03:58:54] *** Quits: defjam (~eb0t@90.209.246.132) (Ping timeout: 260 seconds)
[04:00:11] *** Quits: Auron (~Auron956@user/auron) (Remote host closed the connection)
[04:00:35] *** Joins: defjam (~eb0t@90.197.82.19)
[04:00:58] *** Quits: Lord_of_Life (~Lord@user/lord-of-life/x-2819915) (Ping timeout: 256 seconds)
[04:01:13] *** Joins: Macuser (~Macuser@216.30.159.201)
[04:02:06] *** Quits: Gurkenglas (~Gurkengla@dslb-002-203-144-204.002.203.pools.vodafone-ip.de) (Ping timeout: 256 seconds)
[04:02:06] *** Joins: Lord_of_Life (~Lord@user/lord-of-life/x-2819915)
[04:05:20] *** Quits: pycurious (~Adium@user/pycurious) (Quit: Leaving.)
[04:06:27] <whatsupdoc> When I learned about setters and getters in Python, I noticed that the function names are the same as the decorator @funcname.setter? Does anyone know why this is?
[04:06:58] <Yhg1s> whatsupdoc: because that's how they work. The decorator is the 'setter' method of the function object.
[04:07:08] <whatsupdoc> I just memorized that @somefunc.setter is followed by def somefunc()
[04:07:25] <Yhg1s> eh, of the property object.
[04:07:40] <Yhg1s> whatsupdoc: that will only work if *before* that, you had '@property' followed by 'def somefunc()'
[04:08:03] <whatsupdoc> really?
[04:08:05] <whatsupdoc> didn't know that
[04:08:21] <whatsupdoc> How would you only add a setter then? (using decorators)?
[04:08:24] <Yhg1s> Yes. Otherwise, '@somefunc.setter' would fail. It's referencing the 'somefunc' name, which has to be assigned a value.
[04:08:27] <whatsupdoc> Do you always need the getter?
[04:08:51] *** Quits: defjam (~eb0t@90.197.82.19) (Ping timeout: 250 seconds)
[04:08:58] <whatsupdoc> https://dpaste.org/hOuh
[04:09:01] <Yhg1s> You can't do that with the decorator syntax, you have to use property(None, setter)
[04:09:09] <whatsupdoc> ok
[04:09:14] <whatsupdoc> Thanks :)
[04:09:38] <Yhg1s> whatsupdoc: on line 11, you define the 'age' name. Because of the @property decorator, it's a property object. (You can add 'print(age)' on line 14 to see.)
[04:10:53] *** Joins: defjam (~eb0t@90.203.122.187)
[04:11:21] *** Quits: Moosadee (~Moosadee@136.32.155.193) (Quit: Leaving)
[04:12:10] *** Quits: Andrynet (~Andrey@186.46.207.121) (Read error: Connection reset by peer)
[04:12:19] *** Quits: Wulf (~Wulf@user/wulf) (Ping timeout: 250 seconds)
[04:13:26] *** Joins: lsrtl_ (~lsrtl@user/lsrtl)
[04:13:50] *** Quits: Gerula (~Gerula@user/gerula) (Read error: Connection reset by peer)
[04:14:14] *** Joins: Gerula (~Gerula@user/gerula)
[04:14:15] <nedbat> turns out the mutable global that's been ruining my tests is the process environment variables.  How do people write code that sets environment variables, but also has isolated tests.... :(
[04:14:17] *** Joins: Wulf (~Wulf@user/wulf)
[04:14:52] <Yhg1s> nedbat: is this all in-process, modifying os.environ?
[04:14:59] <nedbat> Yhg1s: yes
[04:15:11] *** Quits: BillyZane (~BillyZane@139.28.216.252) (Remote host closed the connection)
[04:15:16] *** Joins: causa-sui (~causasui@c-68-60-125-136.hsd1.mi.comcast.net)
[04:15:27] *** Joins: BillyZane (~BillyZane@139.28.216.252)
[04:15:47] *** Quits: lsrtl__ (~lsrtl@user/lsrtl) (Ping timeout: 250 seconds)
[04:16:08] <Yhg1s> nedbat: save a copy of os.environ, restore it after?
[04:17:33] <nedbat> Yhg1s: i was already using pytest monkeypatch https://docs.pytest.org/en/6.2.x/monkeypatch.html  but i guess save/restore the whole environment is the best.
[04:17:47] *** Joins: Andrynet (~Andrey@186.46.207.121)
[04:18:58] *** Joins: driib (~driib@185.195.233.160)
[04:19:58] *** Quits: herjazz (~herjazz@p6758124-ipngn30801marunouchi.tokyo.ocn.ne.jp) (Quit: leaving)
[04:20:14] *** Quits: causa-sui (~causasui@c-68-60-125-136.hsd1.mi.comcast.net) (Ping timeout: 256 seconds)
[04:21:34] *** Quits: Common (~Common@user/common) (Read error: Connection reset by peer)
[04:22:38] <nedbat> Yhg1s: restoring using os.environ.update(old_environ) won't remove newly made environment variables
[04:23:15] *** Quits: CaryHartline (~CaryHartl@2603-8080-6a0e-8d88-5d71-0aee-812d-c1b0.res6.spectrum.com) (Quit: My iMac has gone to sleep. ZZZzzz…)
[04:23:30] *** Joins: pycurious (~Adium@user/pycurious)
[04:23:33] *** Quits: delvian (~delvian@41.13.198.33) (Ping timeout: 268 seconds)
[04:24:22] <meejah> nedbat: ideally, pass the environ into the functions/classes that need it?
[04:24:47] <nedbat> meejah: in this case, I am setting environment variables to affect child processes.
[04:24:56] *** Quits: KevinX (~KevinX@c-71-200-222-150.hsd1.fl.comcast.net) (Quit: My MacBook has gone to sleep. ZZZzzz…)
[04:24:59] *** Quits: newpy (~newpy@2601:280:4381:1390:24c6:b6d1:4f97:1c48) (Ping timeout: 264 seconds)
[04:25:02] <nedbat> meejah: but i need that to not leak between tests
[04:25:06] *** Joins: PantelicGR (~PantelicG@user/pantelicgr)
[04:25:11] <Yhg1s> nedbat: yes, you need os.environ.clear(); os.environ.update(copy)
[04:25:13] <grym> 12 factor is great, they said.  put it all in the env, they said
[04:25:37] <nedbat> Yhg1s: i guess i never truly believed that os.environ.clear() would remove all the envvars
[04:25:39] <nedbat> :)
[04:25:50] <meejah> nedbat: can't you pass environ to child processes?
[04:26:08] *** Joins: humbertowoody (~humbertow@189.236.62.65)
[04:26:15] <nedbat> meejah: this is in coverage.py, it's not the thing that makes the child processes
[04:26:33] *** Joins: sudomann (~sudomann@c-98-219-165-55.hsd1.md.comcast.net)
[04:26:50] <Yhg1s> nedbat: it's not something I would feel comfortable doing outside of tests, to be honest :)
[04:27:10] *** Joins: capn (~capn@user/capn)
[04:27:33] <nedbat> tests are the wild west!
[04:27:37] <nedbat> anything goes!
[04:28:29] <meejah> nedbat: i mean in the tests, it can pass in env
[04:28:44] *** Quits: humberto1 (~humbertow@189.236.62.65) (Ping timeout: 256 seconds)
[04:28:46] <meejah> (but, i see what you mean: coverage has to use os.environ ...)
[04:29:01] *** Joins: KevinX (~KevinX@c-71-200-222-150.hsd1.fl.comcast.net)
[04:30:11] *** Quits: yotsuba (~yotsuba@93-172-241-53.bb.netvision.net.il) (Read error: Connection reset by peer)
[04:30:32] *** Quits: KevinX (~KevinX@c-71-200-222-150.hsd1.fl.comcast.net) (Client Quit)
[04:30:52] <donald1> bjs are you still here? we could finish it today
[04:30:57] *** Quits: sudomann (~sudomann@c-98-219-165-55.hsd1.md.comcast.net) (Ping timeout: 250 seconds)
[04:31:26] *** Quits: GNUmoon (~GNUmoon@gateway/tor-sasl/gnumoon) (Quit: Leaving)
[04:31:41] *** Joins: GNUmoon (~GNUmoon@gateway/tor-sasl/gnumoon)
[04:31:49] *** Joins: yotsuba (~yotsuba@93-172-241-53.bb.netvision.net.il)
[04:32:07] *** Quits: bdeshi (~bdeshi@bdeshi.space) (Quit: bouncer disconnect)
[04:32:23] *** Joins: CaryHartline (~CaryHartl@2603-8080-6a0e-8d88-5d71-0aee-812d-c1b0.res6.spectrum.com)
[04:32:25] *** Quits: PantelicGR (~PantelicG@user/pantelicgr) (Quit: Leaving)
[04:32:28] *** Quits: slav0nic (slav0nic@python.su) (Ping timeout: 265 seconds)
[04:32:42] *** Quits: merijn (~merijn@83-160-49-249.ip.xs4all.nl) (Ping timeout: 256 seconds)
[04:32:55] *** Joins: bdeshi (~bdeshi@bdeshi.space)
[04:34:13] *** Quits: rinzewind (~rinzewind@user/rinzewind) (Quit: leaving)
[04:34:14] *** Quits: ivan_ (~Ivyy@2001:a61:13ad:1c01:a7c8:db20:a5d0:f061) (Remote host closed the connection)
[04:34:14] <donald1> I got this error https://pastebin.com/HStR9pVu in this code : https://github.com/gogo2464/pwntools/tree/hand-PE-libs bjs told me I have to change all the code of the program. could you just tell me more?
[04:35:36] *** Quits: barometz (~dvanb@i117058.upc-i.chello.nl) (Quit: No Ping reply in 180 seconds.)
[04:35:51] *** Quits: Andrynet (~Andrey@186.46.207.121) (Ping timeout: 265 seconds)
[04:36:12] *** Quits: aum_ (~aum@202.47.255.123.static.snap.net.nz) (Quit: Leaving)
[04:36:54] *** Joins: barometz (~dvanb@i117058.upc-i.chello.nl)
[04:37:10] *** Joins: sudomann (~sudomann@c-98-219-165-55.hsd1.md.comcast.net)
[04:37:21] *** Joins: KevinX (~KevinX@c-71-200-222-150.hsd1.fl.comcast.net)
[04:37:27] *** Quits: inomoz (~inomoz@176.59.125.26) (Ping timeout: 250 seconds)
[04:37:29] *** Joins: Andrynet (~Andrey@186.46.207.121)
[04:39:29] *** Quits: nomic (~nomic@185.192.69.224) (Quit: Leaving)
[04:39:50] *** Quits: rpkilby_ (~rpkilby@c-24-20-208-106.hsd1.or.comcast.net) (Remote host closed the connection)
[04:40:27] *** Joins: rpkilby (~rpkilby@c-24-20-208-106.hsd1.or.comcast.net)
[04:41:22] *** Quits: pycurious (~Adium@user/pycurious) (Quit: Leaving.)
[04:43:43] *** Joins: ff9527ff_ (uid527419@uxbridge.irccloud.com)
[04:45:15] *** Quits: rpkilby (~rpkilby@c-24-20-208-106.hsd1.or.comcast.net) (Ping timeout: 250 seconds)
[04:45:41] *** Quits: sudomann (~sudomann@c-98-219-165-55.hsd1.md.comcast.net) (Ping timeout: 250 seconds)
[04:45:42] *** Quits: Colt (~Colt@user/colt) (Quit: Leaving)
[04:45:57] *** Joins: Colt (~Colt@user/colt)
[04:46:59] *** Quits: Andrynet (~Andrey@186.46.207.121) (Ping timeout: 250 seconds)
[04:49:06] *** Joins: Andrynet (~Andrey@186.46.207.121)
[04:50:16] *** Quits: Throgkt (~Throgkt@user/throgkt) (Ping timeout: 256 seconds)
[04:50:50] *** Quits: fikran (~fikran@user/fikran) (Ping timeout: 265 seconds)
[04:51:59] *** Joins: Throgkt (~Throgkt@user/throgkt)
[04:52:31] *** Joins: fikran (~fikran@user/fikran)
[04:52:53] <cluelessperson> donald1, I don't feel that's really a real question or problem for us
[04:53:03] <cluelessperson> You have an issue to work on in a code base
[04:54:13] *** Quits: defjam (~eb0t@90.203.122.187) (Ping timeout: 265 seconds)
[04:54:48] *** Quits: Andrynet (~Andrey@186.46.207.121) (Ping timeout: 256 seconds)
[04:54:54] *** Joins: frost (~frost@user/frost)
[04:56:11] *** Joins: defjam (~eb0t@90.194.39.133)
[04:58:13] <donald1> cluelessperson: I mentionned the specific method def recv before
[04:58:42] <donald1> I want to use asyncio to set a timeout for a method but I have to change all the code
[04:58:54] <donald1> is there another way to set a timeout with no asyncio?
[04:59:33] <cluelessperson> donald1, well, sockets themselves accept timeouts as an option
[04:59:57] *** Quits: vimal (~vimal@2a02:a210:9600:1600:3271:adb4:e3fb:289a) (Ping timeout: 268 seconds)
[05:00:08] *** Joins: pycurious (~Adium@user/pycurious)
[05:00:22] *** Joins: Andrynet (~Andrey@186.46.207.121)
[05:00:43] <cluelessperson> donald1, but if you want asyncio, that's more of a programming framework/paradigm that would require drastic code changes, yes.
[05:02:11] *** Joins: NeilRG (~NeilRG@192.222.196.111)
[05:02:38] *** Quits: vicfred (~vicfred@user/vicfred) (Quit: Leaving)
[05:03:09] <dba> what is the real difference between lambda and for?
[05:03:30] <dba> I should say the actual difference
[05:03:51] <matsaman> ...what is the similarity?
[05:04:29] *** Joins: phantomotap (~phantomot@c-71-207-252-96.hsd1.al.comcast.net)
[05:04:45] <dba> [i + 3 for i in a] and map(lambda i: i +3, a)
[05:04:46] *** Quits: stewie925 (~stewie925@2600:1702:44f0:35c0:1cd1:1df9:4049:aaac) (Quit: Client closed)
[05:04:50] <Yhg1s> dba: uhm, they're both keywords, but basically _everything else_ is different.
[05:04:51] *** Quits: Andrynet (~Andrey@186.46.207.121) (Ping timeout: 265 seconds)
[05:05:14] <matsaman> dba: so maybe you're thinking comprehensions and for loops
[05:05:26] <Yhg1s> dba: ah, so. The first is a list comprehension. It's not about the 'for', but the whole construct. The second is two things: map(), and a function, which you create with lambda. They're separate parts you can combine that way.
[05:05:32] <matsaman> inasmuch as they can do the same things, the former is merely more concise
[05:05:44] *** Joins: ElPresidente (~ElPreside@2600:1700:3d10:4870:a1a7:6c92:fea:8d8c)
[05:05:49] *** Joins: Andrynet (~Andrey@186.46.207.121)
[05:06:17] <Yhg1s> dba: 'lambda' is a wya to define a function, and 'map()' is a way to iterate over something and call the function for each item. (Don't use map(), certainly not with lambda.)
[05:06:38] *** Quits: CaryHartline (~CaryHartl@2603-8080-6a0e-8d88-5d71-0aee-812d-c1b0.res6.spectrum.com) (Quit: My iMac has gone to sleep. ZZZzzz…)
[05:06:44] <cluelessperson> dba,    a lambda is an anonymous function,    for iterates over a series.
[05:06:56] <matsaman> mmm
[05:06:58] <matsaman> https://en.wikipedia.org/wiki/Anonymous_function#Python
[05:07:23] <Yhg1s> I love how that wikipedia page says it's an anonymous function and then gives it a name.
[05:08:39] *** Quits: mallkrampus (~mallkramp@185.169.233.47) (Ping timeout: 250 seconds)
[05:08:47] *** Quits: NeilRG (~NeilRG@192.222.196.111) (Ping timeout: 264 seconds)
[05:08:51] *** Joins: jonthesnow (~xizhendu@36.112.188.169)
[05:08:55] *** Joins: stewie925 (~stewie925@2600:1702:44f0:35c0:1cd1:1df9:4049:aaac)
[05:09:46] *** Quits: samuelbernardo (~samuelber@nata02.lip.pt) (Quit: ZNC 1.8.2 - https://znc.in)
[05:10:02] *** Joins: samuelbernardo (~samuelber@nata02.lip.pt)
[05:10:23] <cluelessperson> dba,  list(map(lambda x: x+1, [i for i in range(3)]))
[05:10:55] *** Joins: djapo (~archangel@user/djapo)
[05:11:14] *** Quits: Andrynet (~Andrey@186.46.207.121) (Ping timeout: 256 seconds)
[05:12:34] *** Joins: LuxuryMode (uid91005@ilkley.irccloud.com)
[05:13:11] *** Quits: thurs8060142 (~thurs@ip68-225-209-147.ph.ph.cox.net) (Quit: The Lounge - https://thelounge.chat)
[05:15:16] <audiobirb> anyone ever work with xlwings?
[05:16:20] *** Quits: yte3 (~0@151.24.120.179) (Ping timeout: 256 seconds)
[05:16:22] *** Quits: pretty_dumm_guy (trottel@gateway/vpn/protonvpn/prettydummguy/x-88029655) (Quit: WeeChat 3.3)
[05:16:56] *** Quits: donald1 (~donald@2a01:e0a:95e:7ca0:cd10:f479:841c:8aaf) (Ping timeout: 265 seconds)
[05:17:19] *** Joins: Andrynet (~Andrey@186.46.207.121)
[05:18:15] *** Quits: Macuser (~Macuser@216.30.159.201) (Quit: Textual IRC Client: www.textualapp.com)
[05:18:37] *** Joins: bitdex (~bitdex@gateway/tor-sasl/bitdex)
[05:18:56] *** Joins: vimal (~vimal@ip-213-127-89-120.ip.prioritytelecom.net)
[05:20:52] *** Quits: flokuehn (~flokuehn@87.123.247.62) (Ping timeout: 256 seconds)
[05:22:02] *** Joins: mallkrampus (~mallkramp@185.169.255.83)
[05:22:20] <dba> Thank you all for your valuable feedbacks
[05:22:51] *** Joins: flokuehn (~flokuehn@87.123.247.43)
[05:23:08] *** Quits: Lando-SpacePimp (~Lando-Spa@user/lando-spacepimp) (Ping timeout: 256 seconds)
[05:23:42] *** Quits: bitdex (~bitdex@gateway/tor-sasl/bitdex) (Ping timeout: 276 seconds)
[05:24:23] <dba> I am just curious to know if there is more control over unpacking for example a, *b, c = range(10) how do I assign value [8,9] to c ?
[05:26:07] *** Quits: Andrynet (~Andrey@186.46.207.121) (Ping timeout: 265 seconds)
[05:26:32] *** Joins: rpkilby (~rpkilby@c-24-20-208-106.hsd1.or.comcast.net)
[05:26:47] *** Quits: lesihctej (jetchisel@user/jetchisel) (Ping timeout: 264 seconds)
[05:27:01] <Yhg1s> dba: with that syntax, you can't. 'a' and 'c' will be single items, and 'b' will be a list of the rest of them.
[05:27:25] <Yhg1s> dba: you may want 'a, *b, x, y = ...; c = [x, y]', or maybe you just don't want to use unpacking at all.
[05:27:42] *** Joins: Elzington_ (~Elzington@static-68-235-44-20.cust.tzulo.com)
[05:27:56] *** Joins: Andrynet (~Andrey@186.46.207.121)
[05:28:07] *** Quits: pycurious (~Adium@user/pycurious) (Quit: Leaving.)
[05:28:19] <dba> Yhg1s, yeah, I just wanted to confirm that it is not doable with that syntax. Thanks
[05:28:35] *** Joins: thurs8060142 (~thurs@ip68-225-209-147.ph.ph.cox.net)
[05:28:51] *** Quits: pmcnabb (~pmcnabb@user/pmcnabb) (Quit: The Lounge - https://thelounge.chat)
[05:29:42] *** Joins: c10l (~c10l@user/c10l)
[05:30:17] *** Quits: bdeshi (~bdeshi@bdeshi.space) (Quit: bouncer disconnect)
[05:30:19] *** Quits: Elzington (~Elzington@static-68-235-44-68.cust.tzulo.com) (Ping timeout: 250 seconds)
[05:30:37] *** Joins: bdeshi (~bdeshi@bdeshi.space)
[05:31:04] *** Quits: baakeydow (~baake@163.172.145.178) (Ping timeout: 256 seconds)
[05:31:56] *** Joins: Staunch (~Staunch@c-24-7-237-208.hsd1.mn.comcast.net)
[05:32:11] *** Quits: puff (~user@S0106d4ca6d80a83c.vs.shawcable.net) (Remote host closed the connection)
[05:32:24] *** Joins: puff (~user@S0106d4ca6d80a83c.vs.shawcable.net)
[05:32:47] *** Quits: y1n (~y1n@91.141.34.188.wireless.dyn.drei.com) (Ping timeout: 264 seconds)
[05:32:53] *** Quits: Andrynet (~Andrey@186.46.207.121) (Ping timeout: 265 seconds)
[05:33:20] *** Quits: rpkilby (~rpkilby@c-24-20-208-106.hsd1.or.comcast.net) (Ping timeout: 256 seconds)
[05:33:46] *** Quits: c10l (~c10l@user/c10l) (Client Quit)
[05:33:50] *** Joins: Andrynet (~Andrey@186.46.207.121)
[05:33:51] *** Quits: defjam (~eb0t@90.194.39.133) (Ping timeout: 265 seconds)
[05:33:51] *** Quits: betelgeuse (~betelgeus@94-225-47-8.access.telenet.be) (Ping timeout: 265 seconds)
[05:34:41] *** Joins: baakeydow (~baake@163.172.145.178)
[05:34:48] *** Joins: c10l (~c10l@user/c10l)
[05:35:05] *** Quits: luva (~luva@146.70.62.238) (Remote host closed the connection)
[05:35:22] *** Joins: pycurious (~Adium@user/pycurious)
[05:35:29] *** Joins: defjam (~eb0t@90.197.82.195)
[05:35:51] <cluelessperson> dba, a, b, c = [0, 1, 2]
[05:35:52] *** Quits: ednhmn (~ednhmn@200.173.186.62) (Remote host closed the connection)
[05:36:02] <cluelessperson> dba, I don't think there's that much control in unpacking
[05:36:12] *** Quits: stewie925 (~stewie925@2600:1702:44f0:35c0:1cd1:1df9:4049:aaac) (Ping timeout: 256 seconds)
[05:36:14] *** Joins: luva (~luva@45.141.152.54)
[05:36:16] *** Quits: Ha-Jo (~hajo@2a01:c23:88d8:300:821f:2ff:feef:dabf) (Ping timeout: 265 seconds)
[05:36:34] <dba> cluelessperson, yeah that whatI thought, just wanted to confirm
[05:36:59] <df_data> Hey all I’m trying to close a json file after a post request but it seems to stay open. I’m using flask. Here’s the code: https://dpaste.RtEv
[05:37:29] *** Quits: noarb (~noarb@user/noarb) (Quit: ZNC 1.8.2 - https://znc.in)
[05:37:30] <df_data> Any idea why it would stay open even know I’m closing it I have even tried adding close to the return
[05:37:47] *** Joins: CaryHartline (~CaryHartl@2603-8080-6a0e-8d88-5d71-0aee-812d-c1b0.res6.spectrum.com)
[05:38:14] *** Joins: bitdex (~bitdex@gateway/tor-sasl/bitdex)
[05:38:22] *** Joins: noarb (~noarb@user/noarb)
[05:38:43] *** Joins: lionslicer (~lionslice@2804:d41:a7a6:1300:38a9:6db1:3a5e:ad53)
[05:38:54] <cluelessperson> df_data, that link is screwed up
[05:39:07] <dba> is there any actual difference between these two lines l = [[] for __ in range(4)] and l = [[] for i in range(4)] or it is just on is more pythonic than other?
[05:39:40] <grym> dba: neither is more or less pythonic than the other, and they do the same thing
[05:39:41] <df_data> Sorry https://dpaste.com/RtEv
[05:39:44] <meejah> maybe: [[]] * 4
[05:39:44] <cluelessperson> dba, they do the same thing
[05:40:00] <grym> meejah: except that doesn't do the same thing
[05:40:07] <cluelessperson> dba, and [] * 4,  will give you 4 of the SAME list, not 4 empty lists.
[05:40:09] <meejah> grym: no?
[05:40:11] <kungp> df_data dunno why it doesn't close, but your with block closes the file handle and you probably can't close the string (results)
[05:40:19] <grym> meejah: definetly not, this is a common gotcha
[05:40:30] <meejah> oh, right, because it's 4 of the same sub-list
[05:40:34] <grym> yup
[05:40:36] *** Joins: stewie925 (~stewie925@2600:1702:44f0:35c0:1cd1:1df9:4049:aaac)
[05:40:36] *** Quits: hel0 (~hel0@user/redrum88) (Quit: Going offline, see ya! (www.adiirc.com))
[05:40:41] <kungp> assuming your closing " got lost in the paste
[05:41:01] <kungp> you don't get any errors when running that?
[05:41:13] <cluelessperson> df_data, I don't know what dpaste isn't loading for me
[05:41:17] <df_data> Could I force it to create a new file after ever POST?
[05:41:35] *** Quits: Andrynet (~Andrey@186.46.207.121) (Ping timeout: 265 seconds)
[05:41:59] <df_data> HTTPS://dpaste.org/RtEv
[05:42:50] <kungp> just keep a counter and add its value to the filename
[05:42:58] *** Quits: topside (~topside@ip68-226-238-34.lf.br.cox.net) (Ping timeout: 256 seconds)
[05:43:20] <kungp> with open(results + str(counter), 'w') etc
[05:43:25] <kungp> or a timestamp
[05:43:27] *** Joins: Andrynet (~Andrey@186.46.207.121)
[05:43:31] *** Quits: sharperguy (~sharpergu@89.244.120.191) (Ping timeout: 265 seconds)
[05:44:07] <cluelessperson> df_data, you don't close the file within the with context:    the point of with is that it handles cleanup for you
[05:44:21] <grym> df_data: i'd write what you have as https://bpa.st/QBCA
[05:44:28] <grym> df_data: you can make a new filename every time, sure
[05:44:30] <kungp> results = "results"; with open(results + str(counter) + '.json', 'w') i mean
[05:44:48] *** Joins: sharperguy (~sharpergu@88.130.218.131)
[05:44:50] <cluelessperson> df_data, also,you're mixing up your f and results for results.close()
[05:45:34] *** Quits: jdavfsxd (~rvgzuuqp@gateway/tor-sasl/rvgzuuqp) (Quit: jdavfsxd)
[05:47:36] <df_data> I’ll past the flask side
[05:47:46] *** Quits: matsaman (~matsaman@user/matsaman) (Quit: leaving)
[05:48:26] *** Joins: bloodninja (~bloodninj@user/bloodninja)
[05:49:00] <df_data> Here is the flask side webhook is the above function. HTTPS://dpaste.org/MVJk
[05:49:40] <df_data> @grym: that doesn’t make sense to me sorry
[05:50:04] <grym> df_data: you get a request, and you want to write its json contents to a file, right?
[05:50:36] *** Joins: geli (~gelignite@55d4e1d7.access.ecotel.net)
[05:50:38] <grym> so pass the request to webhook(), and do exactly that
[05:51:04] <df_data> That’s right but I want a new json file every time the post goes to /listener
[05:51:28] <df_data> Otherwise the file stays open and I cannot capture dates etc
[05:52:06] <grym> ok, so how do you want that file named
[05:52:43] <cluelessperson> df_data, https://gist.github.com/ZacharyACoon/95065b8c87a149854844d8968f05f963/revisions
[05:53:40] *** Quits: magla (~gelignite@55d4d6da.access.ecotel.net) (Ping timeout: 265 seconds)
[05:53:47] *** Quits: ColdKeybo[a]rd (~ColdKeybo@user/coldkeyboard) (Quit: ZNC - https://znc.in)
[05:54:19] <grym> df_data: https://bpa.st/3UPA  that'll give you a new file every time you call it
[05:54:22] *** Joins: ColdKeyboard (~ColdKeybo@user/coldkeyboard)
[05:54:52] *** Quits: lsrtl_ (~lsrtl@user/lsrtl) (Ping timeout: 256 seconds)
[05:57:07] <df_data> I’ll try it thanks
[05:57:39] <dba> This is beyond my comprehension, https://bpa.st/AWSQ why it that list2 has the value of list1?
[05:59:10] <grym> dba: because assignment really is assignment, even in signatures (which are evaluated once)
[05:59:37] <grym> dba: the way you do this is `def append_to(element, to=None): if to is None: to = []; ...`
[06:00:11] <grym> this is another classic gotcha
[06:00:15] <dba> grym: I want to strict to variable to a list
[06:00:38] <grym> dba: yes, and the way you provide default mutable values in a function signature is with a None sentinel
[06:00:41] <grym> sorry
[06:01:13] *** Quits: vdamewood (~vdamewood@fedora/vdamewood) (Quit: My MacBook Pro has gone to sleep. ZZZzzz…)
[06:01:23] <dba> grym, I tried def append_to(element, to: list): but didnt work
[06:01:25] *** Joins: SB8364 (~SB8364@S01067483c2d6b92b.gv.shawcable.net)
[06:01:39] <grym> that is also not what i said to do
[06:01:40] <grym> sec
[06:03:14] <grym> dba: https://bpa.st/EMOQ
[06:03:39] *** Joins: leduyquang753 (~leduyquan@user/leduyquang753)
[06:04:19] <phantomotap> i remember that tripping me up way back when. very frustrating
[06:04:29] <grym> yep, it's a classic "what the?!"
[06:04:39] <dba> grym, Gotcha!!! thanks
[06:04:46] *** Joins: causa-sui (~causasui@c-68-60-125-136.hsd1.mi.comcast.net)
[06:05:10] <grym> every mutable thing will act like this
[06:05:19] <grym> you will get it wrong a few times :(
[06:05:25] *** Quits: Staunch (~Staunch@c-24-7-237-208.hsd1.mn.comcast.net) (Ping timeout: 250 seconds)
[06:06:31] *** Quits: CaryHartline (~CaryHartl@2603-8080-6a0e-8d88-5d71-0aee-812d-c1b0.res6.spectrum.com) (Quit: My iMac has gone to sleep. ZZZzzz…)
[06:06:36] <dba> grym, is there anything in python in-mutable ?
[06:06:48] <dba> I meant not mutable
[06:08:36] <grym> ints, floats, strings, bytes, tuples, a few other things
[06:08:38] *** Joins: CaryHartline (~CaryHartl@2603-8080-6a0e-8d88-a5f1-5281-6a38-5d1d.res6.spectrum.com)
[06:09:19] *** Quits: causa-sui (~causasui@c-68-60-125-136.hsd1.mi.comcast.net) (Ping timeout: 250 seconds)
[06:09:35] *** Joins: ednhmn (~ednhmn@200.173.186.62)
[06:10:35] *** Quits: Andrynet (~Andrey@186.46.207.121) (Ping timeout: 265 seconds)
[06:10:59] *** Joins: brabrax_ (~brabrax@user/brabrax)
[06:11:29] *** Quits: brabrax (~brabrax@user/brabrax) (Ping timeout: 250 seconds)
[06:11:29] *** brabrax_ is now known as brabrax
[06:12:23] *** Joins: Andrynet (~Andrey@186.46.207.121)
[06:14:08] *** Quits: alzgh (~alzgh@user/alzgh) (Remote host closed the connection)
[06:15:16] *** Quits: emf_ (~emf@163.114.132.1) (Ping timeout: 256 seconds)
[06:15:25] *** Quits: pycurious (~Adium@user/pycurious) (Quit: Leaving.)
[06:15:40] <jinsun> hmm, actually def f(x=[]) then x = x or [] inside the function will also avoid that problem right?
[06:16:26] <grym> jinsun: i don't think so
[06:16:32] *** Joins: pycurious (~Adium@user/pycurious)
[06:17:02] <jinsun> will avoid the annoying Optional or | None annotation that I don't like to do
[06:17:10] *** Quits: djapo (~archangel@user/djapo) (Read error: Connection reset by peer)
[06:17:28] *** Joins: sudomann (~sudomann@c-98-219-165-55.hsd1.md.comcast.net)
[06:17:30] *** Joins: djapo (~archangel@user/djapo)
[06:18:13] *** Quits: BSaboia (~bsaboia@177.37.198.227) (Quit: This computer has gone to sleep)
[06:18:22] *** Quits: johnny_ (sid481967@hampstead.irccloud.com) ()
[06:19:09] <jinsun> grym: okay not exactly same, but if I am not doing weird things it will have the same effect, x = x or [] will point x t oa new list whether x was initially None or []
[06:20:27] *** Quits: millido (~millido@84.210.150.128) (Quit: ZNC 1.8.2 - https://znc.in)
[06:21:16] *** Quits: SB8364 (~SB8364@S01067483c2d6b92b.gv.shawcable.net) (Quit: Client closed)
[06:22:05] *** Joins: SB8364 (~SB8364@S01067483c2d6b92b.gv.shawcable.net)
[06:23:27] *** Quits: roxfan (roxfan@29.38-136-217.adsl-dyn.isp.belgacom.be) (Remote host closed the connection)
[06:24:02] *** Joins: roxfan (roxfan@29.38-136-217.adsl-dyn.isp.belgacom.be)
[06:24:07] *** Quits: Axy (~Axy@user/axy) (Ping timeout: 265 seconds)
[06:24:24] *** Quits: redj (~quassel@bras-base-bchmpq5707w-grc-11-74-15-230-188.dsl.bell.ca) (Quit: http://quassel-irc.org - Chat comfortably. Anywhere.)
[06:25:01] *** Quits: geli (~gelignite@55d4e1d7.access.ecotel.net) (Quit: Stay safe!)
[06:25:05] *** Quits: sudomann (~sudomann@c-98-219-165-55.hsd1.md.comcast.net) (Ping timeout: 265 seconds)
[06:25:16] *** Joins: redj (~quassel@bras-base-bchmpq5707w-grc-11-74-15-230-188.dsl.bell.ca)
[06:25:24] *** Joins: Hokedli (~lasliedv@gateway/tor-sasl/hokedli)
[06:25:59] *** Joins: BSaboia (~bsaboia@177.37.198.227)
[06:26:09] <jinsun> eh can't do it because bugbear and pylint will start yelling about it
[06:28:31] *** Quits: Affliction (affliction@idlerpg/player/affliction) (Remote host closed the connection)
[06:28:43] *** Quits: BSaboia (~bsaboia@177.37.198.227) (Client Quit)
[06:29:03] *** Quits: redj (~quassel@bras-base-bchmpq5707w-grc-11-74-15-230-188.dsl.bell.ca) (Client Quit)
[06:29:06] *** Joins: Affliction (affliction@idlerpg/player/affliction)
[06:29:23] *** Joins: merijn (~merijn@83-160-49-249.ip.xs4all.nl)
[06:29:37] *** Joins: millido (~millido@84.210.150.128)
[06:29:45] *** Quits: lionslicer (~lionslice@2804:d41:a7a6:1300:38a9:6db1:3a5e:ad53) (Quit: Leaving)
[06:30:02] *** Quits: Hokedli (~lasliedv@gateway/tor-sasl/hokedli) (Remote host closed the connection)
[06:30:15] *** Joins: redj (~quassel@bras-base-bchmpq5707w-grc-11-74-15-230-188.dsl.bell.ca)
[06:30:26] *** Joins: Hokedli (~lasliedv@gateway/tor-sasl/hokedli)
[06:31:12] *** Joins: onichomp (~onichomp@2806:264:4404:8008:8070:b0dc:b4d4:4ce3)
[06:31:19] *** Joins: onichomp666 (~onichomp@2806:264:4404:8008:8070:b0dc:b4d4:4ce3)
[06:36:29] <df_data> @cluelessperson: unfortunately that didn’t work :(
[06:37:39] *** Quits: Andrynet (~Andrey@186.46.207.121) (Ping timeout: 265 seconds)
[06:37:44] *** Joins: psystemupdate (~AbraCadav@162-236-239-168.lightspeed.mssnks.sbcglobal.net)
[06:37:48] *** Quits: audiobirb (~audio@user/audio) (Remote host closed the connection)
[06:38:07] *** Joins: audiobirb (~audio@user/audio)
[06:39:07] *** Joins: Lando-SpacePimp (~Lando-Spa@user/lando-spacepimp)
[06:39:16] *** Joins: Andrynet (~Andrey@186.46.207.121)
[06:39:17] *** Joins: Guest253 (~Guest253@pool-96-253-74-73.rcmdva.fios.verizon.net)
[06:40:29] <Guest253> Hello I am wondering how do I print r so I could see the Authorization encoded_u? When I print r.headers I do not see Authorization listed. https://dpaste.org/7yTk
[06:41:01] *** Joins: [itchyjunk] (~itchyjunk@user/itchyjunk/x-7353470)
[06:41:02] *** Quits: luva (~luva@45.141.152.54) (Ping timeout: 265 seconds)
[06:41:08] *** Joins: luva (~luva@37.120.197.54)
[06:41:31] <df_data> @grym neither did your method :(
[06:42:05] <phantomotap> df_data: you'll need to be more elaborate than "it didn't work"
[06:42:07] <grym> df_data: "didn't work" is not very informative
[06:42:12] *** Quits: xkuru (~xkuru@user/xkuru) (Read error: Connection reset by peer)
[06:42:52] *** Joins: EgonX (~EgonX@2601:2c6:47f:879e:3569:bbfe:cdf9:36cf)
[06:43:07] <df_data> A new file wasn’t created
[06:43:39] <nicode> Does anyone have any tips on how to encode 3 variables to be sent via socket connection? I'm looking to relay two ints and a char (e.g. 0, 156, 'A' or 97)
[06:44:37] <nicode> My first guess is to just json encode the data and then decode on the other end, but I'm not typically a sockets programmer so I don't know if there's a simpler way.
[06:44:38] *** Quits: Hokedli (~lasliedv@gateway/tor-sasl/hokedli) (Remote host closed the connection)
[06:45:17] <cluelessperson> nicode, it's called "serialization", and standard methods include binary packing (with python's struct.pack),   json, and many others.
[06:45:28] <df_data> I’ve included my 2 files here https://bpa.st/KRBA first file is the function that gets called from flask.
[06:46:12] *** Quits: FluffyMask (~masque@user/fluffymask) (Quit: WeeChat 3.3)
[06:46:58] <phantomotap> it looks like your still misusing results instead of f
[06:47:29] *** Joins: Hokedli (~lasliedv@gateway/tor-sasl/hokedli)
[06:47:49] *** Joins: Axy (~Axy@user/axy)
[06:48:04] *** Quits: Pi-sistance (~kvirc@cpc94050-newt37-2-0-cust176.19-3.cable.virginm.net) (Read error: Connection reset by peer)
[06:48:34] <df_data> Doesn’t write a new json just writes over the old one
[06:48:42] *** Quits: onichomp666 (~onichomp@2806:264:4404:8008:8070:b0dc:b4d4:4ce3) (Quit: onichomp666)
[06:48:50] <df_data> I tried f @phantomotap
[06:49:11] <grym> df_data: yes, well, you only compute the timestamp once...
[06:49:18] <grym> move it inside the function where it belongs and as i showed you
[06:49:34] <grym> df_data: and stop making strings with + please
[06:49:51] <grym> Path(f"results-{datetime.now().isoformat()}.json")  is much nicer
[06:50:03] *** Quits: LiftLeft (~LiftLeft@gateway/vpn/pia/liftleft) (Ping timeout: 250 seconds)
[06:50:13] *** Quits: frostschutz (~frostschu@2a01:c22:d0c5:9300:ac13:d571:ccea:e14d) (Ping timeout: 265 seconds)
[06:50:28] *** Quits: Sheilong (uid293653@ilkley.irccloud.com) ()
[06:50:42] <df_data> Haha that would be it I didn’t even think that through
[06:50:47] *** Quits: subopt (~subopt@2603-8081-2302-459a-44ea-8eed-1aef-aa65.res6.spectrum.com) (Ping timeout: 264 seconds)
[06:51:31] <grym> oh, probably also use .utcnow() not .now()
[06:51:38] *** Quits: adiKt (uid472628@tinside.irccloud.com) (Quit: Connection closed for inactivity)
[06:52:09] <nicode> cluelessperson: thanks, I'll give struct.pack a try.
[06:52:13] *** Quits: Axy (~Axy@user/axy) (Ping timeout: 250 seconds)
[06:52:33] *** Joins: Axy (~Axy@user/axy)
[06:52:48] <df_data> That indeed was it, I get 3 file per click now
[06:53:00] <cluelessperson> nicode, json encoding is the simplest
[06:53:48] *** Quits: Andrynet (~Andrey@186.46.207.121) (Ping timeout: 256 seconds)
[06:53:54] <nicode> cluelessperson: kk
[06:55:45] *** Joins: Andrynet (~Andrey@186.46.207.121)
[06:56:13] *** Joins: comlord1 (~Thunderbi@180.117.11.32)
[06:57:30] *** Quits: zeden (~zeden@user/zeden) (Quit: WeeChat 3.3)
[06:57:52] *** Quits: FinnElija (~finn_elij@user/finn-elija/x-0085643) (Killed (NickServ (Forcing logout FinnElija -> finn_elija)))
[06:57:53] *** Joins: finn_elija (~finn_elij@user/finn-elija/x-0085643)
[06:57:53] *** finn_elija is now known as FinnElija
[06:58:17] *** Quits: comlord (~Thunderbi@180.117.11.32) (Ping timeout: 250 seconds)
[06:59:53] *** Quits: Abrax (~Abrax@user/abrax) (Quit: Leaving)
[07:00:01] *** Quits: fikran (~fikran@user/fikran) (Ping timeout: 250 seconds)
[07:00:25] *** Joins: TJ- (~root@about/linux/staff/tj-)
[07:00:27] *** Quits: comlord1 (~Thunderbi@180.117.11.32) (Ping timeout: 250 seconds)
[07:01:52] *** Joins: fikran (~fikran@user/fikran)
[07:02:52] *** Quits: Andrynet (~Andrey@186.46.207.121) (Ping timeout: 256 seconds)
[07:03:19] *** Joins: frostschutz (~frostschu@2a01:c22:cdef:c300:31f7:f394:bec3:e9fe)
[07:03:29] *** Quits: merijn (~merijn@83-160-49-249.ip.xs4all.nl) (Ping timeout: 250 seconds)
[07:03:37] *** Joins: LiftLeft (~LiftLeft@216-26-118-34.dynamic.nelson.airstreamcomm.net)
[07:04:05] *** Quits: trashbird (~trashbird@user/trashbird) (Quit: Ping timeout (120 seconds))
[07:04:26] *** Joins: Andrynet (~Andrey@186.46.207.121)
[07:04:55] *** Joins: causa-sui (~causasui@c-68-60-125-136.hsd1.mi.comcast.net)
[07:05:44] *** Quits: stewie925 (~stewie925@2600:1702:44f0:35c0:1cd1:1df9:4049:aaac) (Ping timeout: 256 seconds)
[07:06:47] *** Joins: trashbird (~trashbird@user/trashbird)
[07:09:02] *** Joins: FFY00 (~FFY00@archlinux/trusteduser/ffy00)
[07:09:33] *** Quits: causa-sui (~causasui@c-68-60-125-136.hsd1.mi.comcast.net) (Ping timeout: 250 seconds)
[07:11:17] *** Joins: adiKt (uid472628@tinside.irccloud.com)
[07:13:29] *** Quits: tgamblin (~tgamblin@2607:fea8:c29d:d7c0::e120) (Quit: Leaving)
[07:14:03] *** Joins: adeliktas53 (~adeliktas@200116b82203d90058f9170d07ad9b82.dip.versatel-1u1.de)
[07:16:24] *** Quits: Hokedli (~lasliedv@gateway/tor-sasl/hokedli) (Quit: Konversation terminated!)
[07:17:04] *** Quits: adeliktas (~adeliktas@200116b822ca030058f9170d07ad9b82.dip.versatel-1u1.de) (Ping timeout: 256 seconds)
[07:20:11] *** Quits: djapo (~archangel@user/djapo) (Ping timeout: 265 seconds)
[07:22:14] *** Joins: anonymeowo (~anonymeow@107.189.14.18)
[07:22:54] *** Quits: puff (~user@S0106d4ca6d80a83c.vs.shawcable.net) (Remote host closed the connection)
[07:23:11] *** Joins: puff (~user@S0106d4ca6d80a83c.vs.shawcable.net)
[07:24:05] *** Joins: cvmn (~caveman@gateway/tor-sasl/caveman)
[07:25:30] *** Quits: LiftLeft (~LiftLeft@216-26-118-34.dynamic.nelson.airstreamcomm.net) (Ping timeout: 265 seconds)
[07:29:44] <nicode> cluelessperson: thanks again, I am trying out struct and it's working well. Followed this tutorial as my starting point http://pymotw.com/2/socket/binary.html
[07:33:00] *** adeliktas53 is now known as adeliktas
[07:33:29] *** Quits: Coldblackice_ (~c@user/coldblackice) (Ping timeout: 268 seconds)
[07:36:02] *** Quits: supakeen (~user@python/site-packages/supakeen) (Quit: WeeChat 3.3)
[07:36:31] *** Joins: supakeen (~user@python/site-packages/supakeen)
[07:38:29] *** Quits: ckdCreations (~ckdCreati@147.55.133.140) (Read error: Connection reset by peer)
[07:38:44] *** Joins: ckdCreations (~ckdCreati@c-24-17-50-149.hsd1.wa.comcast.net)
[07:43:23] *** Quits: ckdCreations (~ckdCreati@c-24-17-50-149.hsd1.wa.comcast.net) (Ping timeout: 265 seconds)
[07:43:37] *** Joins: ionface (~ionface@user/ionface)
[07:43:45] *** Joins: ckdCreations (~ckdCreati@147.55.130.34)
[07:45:05] *** Quits: jmiehe (~Thunderbi@user/jmiehe) (Ping timeout: 250 seconds)
[07:45:18] *** Joins: jmiehe (~Thunderbi@user/jmiehe)
[07:45:30] *** Joins: BSaboia (~bsaboia@177.37.198.227)
[07:47:54] *** Quits: Maikel (~Maikel@130.61.63.136) (Quit: The Lounge - https://thelounge.chat)
[07:49:11] *** Quits: Andrynet (~Andrey@186.46.207.121) (Ping timeout: 265 seconds)
[07:49:35] *** Joins: Maikel (~Maikel@130.61.63.136)
[07:49:51] *** Quits: BSaboia (~bsaboia@177.37.198.227) (Client Quit)
[07:50:41] *** Joins: Andrynet (~Andrey@186.46.207.121)
[07:51:35] *** Quits: causa_sui (~causasui@c-68-60-125-136.hsd1.mi.comcast.net) (Ping timeout: 250 seconds)
[07:52:34] *** Joins: Abrax (~Abrax@user/abrax)
[07:52:36] *** Joins: mIk3_08 (~Thunderbi@user/mik3-08/x-2852566)
[07:53:41] *** Quits: whatsupdoc (uid509081@hampstead.irccloud.com) (Quit: Connection closed for inactivity)
[07:54:42] *** Joins: rpkilby (~rpkilby@c-24-20-208-106.hsd1.or.comcast.net)
[07:55:43] *** Joins: Elzington__ (~Elzington@static-68-235-44-22.cust.tzulo.com)
[07:56:47] *** Quits: chuangzhu (~chuangzhu@user/chuangzhu) (Ping timeout: 264 seconds)
[07:58:16] *** Joins: chuangzhu (~chuangzhu@user/chuangzhu)
[07:58:22] *** Quits: Elzington_ (~Elzington@static-68-235-44-20.cust.tzulo.com) (Ping timeout: 265 seconds)
[07:58:46] *** Quits: lethu (~lethu@user/lethu) (Ping timeout: 260 seconds)
[07:58:57] *** Quits: rpkilby (~rpkilby@c-24-20-208-106.hsd1.or.comcast.net) (Ping timeout: 250 seconds)
[08:00:15] *** Quits: Andrynet (~Andrey@186.46.207.121) (Ping timeout: 250 seconds)
[08:00:30] *** Quits: Abrax (~Abrax@user/abrax) (Quit: Leaving)
[08:00:44] *** Joins: lethu (~lethu@user/lethu)
[08:02:18] *** Quits: ano (~ano@user/ano) (Ping timeout: 276 seconds)
[08:02:20] <Jonno_FTW> I'm using requests, but I keep getting a 'connection reset by peer' error, even though I've set all the appropriate request headers as they appear in chrome
[08:03:03] *** Joins: Staunch (~Staunch@c-24-7-237-208.hsd1.mn.comcast.net)
[08:03:07] *** Joins: ano (~ano@user/ano)
[08:07:25] *** Joins: Andrynet (~Andrey@186.46.207.121)
[08:08:38] *** Quits: Staunch (~Staunch@c-24-7-237-208.hsd1.mn.comcast.net) (Ping timeout: 268 seconds)
[08:08:55] *** Quits: ednhmn (~ednhmn@200.173.186.62) (Ping timeout: 250 seconds)
[08:11:31] *** Quits: mallkrampus (~mallkramp@185.169.255.83) (Ping timeout: 250 seconds)
[08:11:43] *** Quits: bloodninja (~bloodninj@user/bloodninja) (Read error: Connection reset by peer)
[08:12:33] *** Joins: odoood (~odoood@2601:c8:c003:a550::3)
[08:12:36] *** Quits: phantomotap (~phantomot@c-71-207-252-96.hsd1.al.comcast.net) (Quit: Leaving)
[08:13:01] *** Quits: SB8364 (~SB8364@S01067483c2d6b92b.gv.shawcable.net) (Quit: Client closed)
[08:13:21] *** Joins: Viewday112 (~Viewday@user/viewday)
[08:13:39] *** Quits: thiras (~thiras@user/thiras) (Read error: Connection reset by peer)
[08:13:47] *** Joins: buzzard (~buzzard@95.174.66.180)
[08:14:57] *** Quits: Viewday11 (~Viewday@user/viewday) (Read error: Connection reset by peer)
[08:14:57] *** Viewday112 is now known as Viewday11
[08:15:32] <buzzard> how can i tell vs code to use a file's own directory as the cwd when debugging w/ F5?  is that part of settings.json or launch.json?  i used the settings file to change the "play button" run, but can't figure this out
[08:18:34] <jinsun> buzzard: the debugger configuration goes is launch.json, there is a "cwd" setting
[08:20:01] <tmart> "cwd": "${relativeFileDirname}" looks like what you'd want, without testing
[08:20:09] <tmart> https://code.visualstudio.com/docs/editor/variables-reference
[08:20:11] *** Quits: audiobirb (~audio@user/audio) (Ping timeout: 250 seconds)
[08:20:53] <buzzard> jinsun: aye, i've tried.
[08:21:10] <buzzard> tmart: right, just tried and no go. i'll try restarting vscode
[08:21:43] <buzzard> gah
[08:22:19] *** Quits: LuxuryMode (uid91005@ilkley.irccloud.com) (Quit: Connection closed for inactivity)
[08:25:14] *** Joins: mallkrampus (~mallkramp@185.169.233.48)
[08:26:31] *** Quits: aum (~davidnz10@202.47.255.123.static.snap.net.nz) (Quit: Leaving)
[08:28:37] *** Joins: kdc (~kdc@196.211.197.159)
[08:29:34] *** Quits: Andrynet (~Andrey@186.46.207.121) (Ping timeout: 256 seconds)
[08:30:10] *** Quits: montybanksnyc (~montybank@pool-108-5-238-57.nwrknj.fios.verizon.net) (Read error: Connection reset by peer)
[08:30:36] *** Quits: djhankb (~djhankb@208.113.164.68) (Remote host closed the connection)
[08:31:13] *** Joins: djhankb (~djhankb@208.113.164.68)
[08:31:17] *** Joins: Andrynet (~Andrey@186.46.207.121)
[08:32:02] *** Quits: [itchyjunk] (~itchyjunk@user/itchyjunk/x-7353470) (Remote host closed the connection)
[08:32:41] *** Quits: nyah (~nyah@94.6.71.219) (Ping timeout: 268 seconds)
[08:32:51] *** Quits: cvmn (~caveman@gateway/tor-sasl/caveman) (Ping timeout: 276 seconds)
[08:34:08] *** Joins: ednhmn (~ednhmn@200.173.186.62)
[08:34:42] *** Quits: Guest253 (~Guest253@pool-96-253-74-73.rcmdva.fios.verizon.net) (Ping timeout: 256 seconds)
[08:36:44] *** Quits: pycurious (~Adium@user/pycurious) (Quit: Leaving.)
[08:37:17] *** Joins: pycurious (~Adium@user/pycurious)
[08:37:57] *** Quits: Andrynet (~Andrey@186.46.207.121) (Ping timeout: 250 seconds)
[08:38:30] *** Quits: yotsuba (~yotsuba@93-172-241-53.bb.netvision.net.il) (Remote host closed the connection)
[08:38:49] *** Joins: yotsuba (~yotsuba@93-172-241-53.bb.netvision.net.il)
[08:39:35] *** Joins: ednhmn_ (~ednhmn@200.173.179.51)
[08:39:41] *** Joins: mat001 (~mat001@c-71-202-208-251.hsd1.ca.comcast.net)
[08:39:53] *** Joins: Andrynet (~Andrey@186.46.204.193)
[08:39:56] *** Quits: ednhmn (~ednhmn@200.173.186.62) (Ping timeout: 265 seconds)
[08:42:02] *** Quits: pycurious (~Adium@user/pycurious) (Ping timeout: 256 seconds)
[08:42:32] <aphysically> new steering council decisions hot off the press tonight
[08:42:36] *** Quits: mat001_ (~mat001@c-71-202-208-251.hsd1.ca.comcast.net) (Ping timeout: 256 seconds)
[08:42:42] <aphysically> new str representations for enums: PEP rejected
[08:43:00] <aphysically> __future__ annotations (or alternative PEPs): deferred until after 3.11
[08:43:05] <aphysically> variadic generics: PEP accepted
[08:43:43] <aphysically> variadic generics is interesting because there was a last minute oversight being worked on that the SC seems to have missed (or didn't mention), but I assume they'll be okay with it
[08:44:12] *** Joins: pycurious (~Adium@user/pycurious)
[08:44:14] *** Quits: frostschutz (~frostschu@2a01:c22:cdef:c300:31f7:f394:bec3:e9fe) (Remote host closed the connection)
[08:45:01] <aphysically> when deferring the __future__ annotations one of they cited uncertainty in two areas: 1) the multitude of options on the table 2) the lack of typing expertise on the SC
[08:45:23] <aphysically> they suggested maybe a typing delegate to work with them on stuff
[08:45:48] <aphysically> on the flip side, with SC elections on the table I wonder if it doesn't make sense to try to make sure someone in the typing community is elected to make the decisions easier
[08:46:39] <aphysically> after all, there's raft of typing-related PEPs on the table and likely quite a bit more coming in the near future
[08:47:29] *** Quits: Andrynet (~Andrey@186.46.204.193) (Ping timeout: 250 seconds)
[08:47:34] <aphysically> variadic generics is cool (and brings with it some new non-typing syntax for those of you who weren't otherwise following it!)
[08:48:45] <aphysically> it was basically a shoe-in to be accepted anyway
[08:49:02] <aphysically> I had no opinion whatsoever on the string representations for enums PEP :P
[08:49:05] *** Joins: rindolf (~shlomif@2a0d:6fc2:4bb1:500:6b1e:2524:3d70:36ec)
[08:49:30] *** Joins: Andrynet (~Andrey@186.46.204.193)
[08:50:34] *** Quits: pycurious (~Adium@user/pycurious) (Ping timeout: 265 seconds)
[08:51:56] *** Quits: vakera_pingveno (~dan@107-209-165-75.lightspeed.hstntx.sbcglobal.net) (Quit: Konversation terminated!)
[08:54:26] *** Quits: Andrynet (~Andrey@186.46.204.193) (Ping timeout: 265 seconds)
[08:55:12] *** Joins: Andrynet (~Andrey@186.46.204.193)
[08:57:02] *** Joins: phax (~phax@user/phax)
[08:58:07] *** Joins: pycurious (~Adium@user/pycurious)
[08:59:48] *** Joins: merijn (~merijn@83-160-49-249.ip.xs4all.nl)
[09:01:18] *** Quits: mrgz (~mrgz@201-42-0-191.dsl.telesp.net.br) (Ping timeout: 256 seconds)
[09:03:05] *** Quits: phax (~phax@user/phax) (Ping timeout: 250 seconds)
[09:04:42] *** Quits: psystemupdate (~AbraCadav@162-236-239-168.lightspeed.mssnks.sbcglobal.net) (Ping timeout: 256 seconds)
[09:05:04] *** Quits: Andrynet (~Andrey@186.46.204.193) (Ping timeout: 265 seconds)
[09:05:57] *** Quits: blindguard (~blindguar@2a02:908:1864:c200::12) (Quit: Konversation terminated!)
[09:06:20] *** Joins: causa-sui (~causasui@c-68-60-125-136.hsd1.mi.comcast.net)
[09:06:50] *** Joins: Andrynet (~Andrey@186.46.204.193)
[09:09:09] *** Quits: fikran (~fikran@user/fikran) (Ping timeout: 250 seconds)
[09:10:53] *** Quits: causa-sui (~causasui@c-68-60-125-136.hsd1.mi.comcast.net) (Ping timeout: 250 seconds)
[09:13:02] *** Quits: d_p (~d_p@pool-71-171-87-110.clppva.fios.verizon.net) (Ping timeout: 240 seconds)
[09:13:14] *** Quits: puff (~user@S0106d4ca6d80a83c.vs.shawcable.net) (Remote host closed the connection)
[09:13:22] *** Quits: Forty-Bot (~kvirc@pool-108-18-207-184.washdc.fios.verizon.net) (Ping timeout: 260 seconds)
[09:13:23] *** Joins: han-` (~han`@user/han-/x-0887595)
[09:13:28] *** Joins: puff (~user@S0106d4ca6d80a83c.vs.shawcable.net)
[09:14:29] *** Quits: p-i-_ (~Ohmu@mx-ll-223.206.149-27.dynamic.3bb.co.th) (Remote host closed the connection)
[09:15:18] <BrenBarn> I'm not so keen on the profusion of typing-related stuff in Python
[09:17:13] <han-`> why is that?
[09:17:26] *** Quits: Xaldafax (~xaldafax@cpe-198-72-160-101.socal.res.rr.com) (Quit: Bye...)
[09:19:18] <BrenBarn> I don't really think tons of typing annotations and ways to manipulate and annotate types is something Python really needs
[09:19:20] <adder> same, I think that trying to retrofit anything always results in a mess
[09:19:59] <BrenBarn> and initially I was like, okay, it's optional, but increasingly it seems like it's taking up a lot of time and attention and is influencing how people think about various other aspects of the language and proposed changes
[09:20:32] *** Quits: buzzard (~buzzard@95.174.66.180) (Quit: Leaving)
[09:21:38] *** Quits: adiKt (uid472628@tinside.irccloud.com) (Quit: Connection closed for inactivity)
[09:21:55] *** Joins: yotsuba-chan (~yotsuba@93-172-241-53.bb.netvision.net.il)
[09:22:38] *** Quits: yotsuba (~yotsuba@93-172-241-53.bb.netvision.net.il) (Read error: Connection reset by peer)
[09:23:13] *** Joins: fikran (~fikran@user/fikran)
[09:23:19] *** Joins: sandb0y (~pirate@user/sandb0y)
[09:23:58] <tmart> I (feel like I) am writing less buggy code with annotations. Could just be too that I'm a more experienced developer now than I was when it did not yet exist for the language.
[09:25:29] *** Joins: hudo__ (~hudo@62.68.19.39)
[09:27:08] *** Joins: delvian (~delvian@41.13.250.11)
[09:27:23] *** Quits: slowButPresent (~slowButPr@user/slowbutpresent) (Quit: leaving)
[09:28:37] *** Joins: Forty-Bot (~kvirc@pool-108-18-207-184.washdc.fios.verizon.net)
[09:29:13] <BrenBarn> but like I see stuff like this in the variadic generics PEP:
[09:29:13] <BrenBarn> > Without the required shape being clear in the signature, the user must hunt in the docstring or the code in question to determine what the input/output shape requirements are.
[09:29:23] <BrenBarn> and I'm just like, yes, and?  it is good for people to read docstrings.
[09:30:09] *** Joins: Mattiaslndstrm (~Mattiasln@c213-103-137-235.bredband.tele2.se)
[09:30:16] <BrenBarn> it's nice if we can use well-named parameters and stuff to smooth things along, but it's just not worth it to make changes to the language just to let people put specific information in the function signature
[09:30:48] *** Joins: thiras (~thiras@user/thiras)
[09:31:26] *** Quits: Bakunin (~Lindis@user/lindis) (Remote host closed the connection)
[09:33:30] *** Quits: delvian (~delvian@41.13.250.11) (Read error: Connection reset by peer)
[09:33:44] <aphysically> this is the second time in a few weeks that SC has indicated they don't want to separate the typing syntax from language syntax
[09:33:51] *** Quits: merijn (~merijn@83-160-49-249.ip.xs4all.nl) (Ping timeout: 250 seconds)
[09:34:33] *** Quits: hifi (hifi@m.vi.fi) (Remote host closed the connection)
[09:34:58] *** Quits: Mattiaslndstrm (~Mattiasln@c213-103-137-235.bredband.tele2.se) (Ping timeout: 268 seconds)
[09:35:06] *** Joins: hifi (hifi@m.vi.fi)
[09:38:02] *** Joins: delvian (~delvian@41.13.250.11)
[09:38:32] <jinsun_> I like the typing stuff because I don't like to think too much when writing and just let my IDE steer me away from doing the "wrong" thing
[09:38:37] <aphysically> I get the feeling this probably ties (for better or worse) a PEP on ? syntax for optional typing to PEP 505 on none-aware operators
[09:39:23] *** Quits: sandb0y (~pirate@user/sandb0y) (Quit: Time for another great escape)
[09:41:28] <jinsun_> though they definitely do add to the complexity of the code when you start supporting complicated types, this variadic generic stuff is one of those thing that would not be obvious when looking without reading up about it
[09:42:08] <aphysically> in defense of variadic generics I think you're quite unlikely to encounter it unless you're already doing some niche (numerical) stuff
[09:42:35] <aphysically> in which case you're likely already privy to the complexity issue and are primed to understand it already
[09:43:09] <aphysically> it just happens that this niche happens to be quite a big python-using community
[09:44:20] <KirkMcDonald> I haven't looked at this PEP, but in other languages, when I think "variadic generic" I think "introspecting on function types."
[09:44:41] *** Quits: hudo__ (~hudo@62.68.19.39) (Ping timeout: 250 seconds)
[09:46:31] *** Quits: Seirdy (~Seirdy@sourcehut/user/seirdy) (Quit: exiting 3.3)
[09:46:59] *** Joins: SB8364 (~SB8364@S01067483c2d6b92b.gv.shawcable.net)
[09:47:01] *** Joins: rpkilby (~rpkilby@c-24-20-208-106.hsd1.or.comcast.net)
[09:48:45] *** Joins: nomic (~nomic@185.217.117.59)
[09:49:48] <aphysically> KirkMcDonald: it's typing for the shape of arrays/matrices basically
[09:50:31] <aphysically> the non-typing syntax change was a bit surprising but the SC accepted it without a fanfare so heh
[09:51:58] <aphysically> in related typing news from the typing-sig mailing list there's momentum behind introducing an intersection type to python with people teaming up to write a PEP cc jinsun_
[09:52:18] *** Quits: Andrynet (~Andrey@186.46.204.193) (Ping timeout: 256 seconds)
[09:52:19] <aphysically> that actually surprised me
[09:52:34] *** Joins: djapo (~archangel@user/djapo)
[09:54:05] *** Joins: Andrynet (~Andrey@186.46.204.193)
[09:54:17] *** Quits: Hexmind (~Hexmind@modemcable049.25-131-66.mc.videotron.ca) (Quit: Leaving)
[09:55:44] *** Quits: zebrag (~chris@user/zebrag) (Remote host closed the connection)
[09:57:32] <jinsun> ah that's great, intersectiono types would be good to have
[09:57:44] <jinsun> also "Not" types
[09:58:10] <aphysically> yeah it was brought up on the ML but no clear action there
[09:58:50] <aphysically> in other news linux dists are still pretty upset right now at setuptools removing install
[09:59:08] *** Quits: adeliktas (~adeliktas@200116b82203d90058f9170d07ad9b82.dip.versatel-1u1.de) (Ping timeout: 256 seconds)
[09:59:12] *** Quits: delvian (~delvian@41.13.250.11) (Ping timeout: 265 seconds)
[09:59:41] <jinsun> remove? it is just deprecated I thought
[10:00:17] *** Quits: pycurious (~Adium@user/pycurious) (Ping timeout: 250 seconds)
[10:01:49] <jinsun> aphysically: you're talking about this one I guess? https://github.com/pypa/setuptools/issues/2088
[10:02:24] *** Joins: Seirdy (~Seirdy@sourcehut/user/seirdy)
[10:02:30] <aphysically> yeah
[10:02:59] *** Quits: SB8364 (~SB8364@S01067483c2d6b92b.gv.shawcable.net) (Quit: Client closed)
[10:03:38] *** Quits: Lando-SpacePimp (~Lando-Spa@user/lando-spacepimp) (Ping timeout: 256 seconds)
[10:04:18] <aphysically> note this kerfuffle stretches back (at least) a year before this issue jinsun
[10:04:36] <aphysically> (at least to when PEP 517 was created originally, which is what caused friction with packaging)
[10:05:09] <aphysically> the solution Gentoo took was make a wrapper for pyproject that generated a setup.py, which didn't age well :^)
[10:05:30] <jinsun> yeah I can imagine it would have started from PEP 517, though I didn't follow this topic much
[10:05:38] <nomic> brought up on the 'ML' what is the ML
[10:05:44] <jinsun> mailing list
[10:05:47] <nomic> k
[10:06:07] *** Joins: delvian (~delvian@41.13.254.43)
[10:06:34] <jinsun> Arch also recommeded some pyproject to setup.py conversion https://wiki.archlinux.org/title/Python_package_guidelines#pyproject.toml_(PEP_517)
[10:06:49] *** Joins: p-i- (~Ohmu@223.206.149.27)
[10:07:16] <jinsun> but that package that is recommended there is not maintained anymore, so probably doesn't work that well
[10:07:32] *** Joins: greedom (~greedom@x59cc99ee.dyn.telefonica.de)
[10:07:34] *** Quits: metah4ck3r (~meta@user/metah4ck3r) (Ping timeout: 260 seconds)
[10:10:38] *** Joins: metah4ck3r (~meta@user/metah4ck3r)
[10:11:19] *** Joins: Mattiaslndstrm (~Mattiasln@c213-103-137-235.bredband.tele2.se)
[10:12:41] *** Quits: p3lim (~p3lim@ti0006q161-2971.bb.online.no) (Quit: Ping timeout (120 seconds))
[10:12:56] *** Joins: pwnd_sfw1 (~pwnd_sfw@ool-18b88100.dyn.optonline.net)
[10:13:05] *** Quits: pwnd_sfw (~pwnd_sfw@ool-18b88100.dyn.optonline.net) (Read error: Connection reset by peer)
[10:13:05] *** pwnd_sfw1 is now known as pwnd_sfw
[10:13:56] *** Joins: Viewday112 (~Viewday@user/viewday)
[10:14:27] *** Joins: LiaoTao_ (~LiaoTao@gateway/tor-sasl/liaotao)
[10:14:45] *** Joins: pycurious (~Adium@user/pycurious)
[10:15:08] *** Quits: mallkrampus (~mallkramp@185.169.233.48) (Read error: Connection reset by peer)
[10:15:12] *** Quits: trench (~trench@user/trench) (Ping timeout: 260 seconds)
[10:15:37] *** Quits: Viewday11 (~Viewday@user/viewday) (Read error: Connection reset by peer)
[10:15:37] *** Viewday112 is now known as Viewday11
[10:15:40] *** Joins: manti7 (~manti7@176.10.104.94)
[10:15:40] *** Joins: Thanatos (~Thanatos@105.112.181.71)
[10:16:07] *** Quits: defjam (~eb0t@90.197.82.195) (Ping timeout: 265 seconds)
[10:16:12] *** Quits: LiaoTao (~LiaoTao@gateway/tor-sasl/liaotao) (Ping timeout: 276 seconds)
[10:16:35] *** Quits: djapo (~archangel@user/djapo) (Ping timeout: 264 seconds)
[10:17:00] *** Joins: trench (~trench@user/trench)
[10:17:48] *** Joins: defjam (~eb0t@90.210.88.222)
[10:17:58] *** Quits: bloody (~bloody@user/bloody) (Quit: Always focus on how far you've come, rather than how far you have left to go)
[10:18:03] *** Quits: Enitin (~Enitin@82.102.22.86) (Ping timeout: 250 seconds)
[10:18:10] *** Joins: et_ (~et@user/et)
[10:18:55] *** Quits: et (~et@user/et) (Ping timeout: 250 seconds)
[10:18:55] *** et_ is now known as et
[10:19:30] *** Quits: rpkilby (~rpkilby@c-24-20-208-106.hsd1.or.comcast.net) (Ping timeout: 265 seconds)
[10:19:30] *** Quits: pycurious (~Adium@user/pycurious) (Ping timeout: 256 seconds)
[10:19:43] *** Joins: CyDefect (~troll@213.55.224.219)
[10:20:47] <aphysically> afaik this is still pretty much an unsolved issue
[10:20:48] *** Quits: ThomasJ (~ThomasJ@user/thomasj) (Remote host closed the connection)
[10:22:00] *** Quits: ednhmn_ (~ednhmn@200.173.179.51) (Remote host closed the connection)
[10:22:35] *** Joins: ThomasJ (~ThomasJ@user/thomasj)
[10:22:50] *** Quits: greedom (~greedom@x59cc99ee.dyn.telefonica.de) ()
[10:23:13] *** Quits: SpeakerToMeat__ (~Speaker@user/speakertomeat) (Read error: Connection reset by peer)
[10:23:53] *** Quits: delvian (~delvian@41.13.254.43) (Quit: Leaving)
[10:23:54] *** Quits: rama (~rama@c-24-130-92-222.hsd1.ca.comcast.net) (Read error: Connection reset by peer)
[10:25:13] <aphysically> (how to package python packages for linux going forward)
[10:25:23] *** Joins: Enitin (~Enitin@82.102.22.84)
[10:26:36] *** Quits: GNUmoon (~GNUmoon@gateway/tor-sasl/gnumoon) (Ping timeout: 276 seconds)
[10:26:38] *** Joins: magga (magga@ti0036a400-1042.bb.online.no)
[10:26:48] *** Quits: kickingvegas (~cchoi@c-24-5-40-20.hsd1.ca.comcast.net) (Quit: leaving)
[10:28:14] *** Joins: Tas-sos (~Tas-sos@ppp046176221197.access.hol.gr)
[10:31:46] *** Joins: mallkrampus (~mallkramp@178.238.11.48)
[10:33:54] *** Quits: yotsuba-chan (~yotsuba@93-172-241-53.bb.netvision.net.il) (Remote host closed the connection)
[10:34:05] *** Quits: Enitin (~Enitin@82.102.22.84) (Ping timeout: 250 seconds)
[10:34:12] *** Joins: xardas (~xardas@149.233.51.127)
[10:34:18] *** Joins: Enitin (~Enitin@82.102.22.85)
[10:34:19] *** Joins: yotsuba-chan (~yotsuba@93-172-241-53.bb.netvision.net.il)
[10:35:30] *** Joins: cthulchu (~Cthulchu@193.194.107.250)
[10:36:41] *** Joins: jpodivin (~jpodivin@cgnat44-pool1-236-179.poda.cz)
[10:37:57] *** Joins: rendar (~rendar@user/rendar)
[10:38:10] *** Joins: pycurious (~Adium@user/pycurious)
[10:38:24] *** Joins: winterflaw (~winterfla@gateway/tor-sasl/winterflaw)
[10:38:48] *** Joins: causa-sui (~causasui@c-68-60-125-136.hsd1.mi.comcast.net)
[10:39:54] *** Quits: magga (magga@ti0036a400-1042.bb.online.no) (Ping timeout: 256 seconds)
[10:40:40] *** Joins: SpeakerToMeat__ (~Speaker@user/speakertomeat)
[10:40:43] *** Joins: eyepeetee (~aa@user/eyepeetee)
[10:41:02] *** Quits: dhch (~dhch@185.213.154.168) (Ping timeout: 256 seconds)
[10:41:30] <eyepeetee> is it common for reasonably seasoned python coders to not know about not using default mutable function arguments?
[10:41:49] *** Joins: ExeciN (~ExeciN@user/nicexe)
[10:42:44] *** Quits: pycurious (~Adium@user/pycurious) (Ping timeout: 256 seconds)
[10:43:18] *** Quits: causa-sui (~causasui@c-68-60-125-136.hsd1.mi.comcast.net) (Ping timeout: 256 seconds)
[10:43:24] <deniska> eyepeetee: it often makes the "top python gotchas you should know about" kind of lists, so not too common I'd think?
[10:43:41] <supakeen> I'd have expected someone to run into relatively early in their lifetime at least.
[10:44:21] *** Joins: pycurious (~Adium@user/pycurious)
[10:45:59] *** Quits: humbertowoody (~humbertow@189.236.62.65) (Ping timeout: 264 seconds)
[10:47:01] *** Joins: humbertowoody (~humbertow@189.236.62.65)
[10:47:55] <jpodivin> supaken: I guess it depends on how many lines of code they write, and on the complexity of the codebase. In my experience even relatively straightforward features can be obscure if the coder is working a lot in handful of projects.
[10:49:38] <supakeen> Perhaps, in any case it's something you do once and then never do again :)
[10:50:59] *** Joins: dhch (~dhch@185.213.154.168)
[10:52:12] <aphysically> a linter yelled at me and told me about it
[10:52:43] *** Quits: pycurious (~Adium@user/pycurious) (Ping timeout: 250 seconds)
[10:52:45] <jinsun> I think I also learned about it from pylint
[10:52:52] <aphysically> I think this is making the rounds right now because it was brought up as a reason for accepting PEP 505 (none-aware operators) so the people against PEP 505 want to address default mutable arguments
[10:53:09] *** Joins: parv (~quass@user/parv)
[10:53:09] <aphysically> why not both :^)
[10:53:53] *** Joins: carl- (~carl-@185.103.188.130)
[10:53:57] *** Joins: Abrax (~Abrax@user/abrax)
[10:54:17] *** Joins: pycurious (~Adium@user/pycurious)
[10:54:21] <jpodivin> Ah yes, linters, language refereces of today :) I wouldn't know about some stuff without them either.
[10:54:45] *** Joins: ayustae (Thunderbir@gateway/vpn/protonvpn/ayustae)
[10:54:54] *** Joins: jetchisel (jetchisel@user/jetchisel)
[10:54:59] <rindolf> aphysically: https://www.youtube.com/watch?v=uGnTW8EhGSk
[10:55:34] *** Joins: carl-- (~carl-@c-138ee555.02-180-73746f39.bbcust.telenor.se)
[10:56:04] <mat001> Is this a conditional? x = a in mylist
[10:56:26] <mat001> assignt a to x if a in mylist?
[10:57:11] *** Quits: seednode (~seednode@user/seednode) (Quit: Nihil supernum.)
[10:57:27] <aphysically> if a in mylist: a = x
[10:57:31] <jinsun> x = a in mylint will always assign to x, and not the value of a but the result of `a in mylist`
[10:57:34] <aphysically> you're assigning a boolean
[10:57:45] *** Joins: NineBAR (~NineBAR@c-107-5-176-200.hsd1.mi.comcast.net)
[10:57:48] <jinsun> s/mylint/mylist
[10:57:55] *** Quits: Enitin (~Enitin@82.102.22.85) (Ping timeout: 250 seconds)
[10:58:07] *** Joins: seednode (~seednode@user/seednode)
[10:58:20] <mat001> ah, that's right. it evaluates toa boolean. thx
[10:58:39] *** Quits: carl- (~carl-@185.103.188.130) (Ping timeout: 265 seconds)
[10:58:45] *** Joins: Enitin (~Enitin@82.102.22.86)
[10:58:49] *** Joins: abip20 (~abdullah@103.66.177.186)
[10:58:51] *** Joins: magga (magga@ti0036a400-1042.bb.online.no)
[10:59:06] *** Joins: GNUmoon (~GNUmoon@gateway/tor-sasl/gnumoon)
[10:59:10] <aphysically> s/a = x/x = a/
[10:59:13] *** Quits: noyb (~noyb@user/noyb) (Quit: leaving)
[10:59:29] *** Joins: noyb (~noyb@user/noyb)
[11:00:20] *** Quits: anonymeowo (~anonymeow@107.189.14.18) (Quit: Konversation terminated!)
[11:01:05] *** Joins: Staunch (~Staunch@c-24-7-237-208.hsd1.mn.comcast.net)
[11:01:46] *** Quits: Seirdy (~Seirdy@sourcehut/user/seirdy) (Quit: exiting 3.3)
[11:02:02] *** Quits: guenhael (~Thunderbi@2a01cb008c3d58007d6372e51fb97c5a.ipv6.abo.wanadoo.fr) (Ping timeout: 265 seconds)
[11:02:12] *** Joins: upsala (~zcb@185.213.155.252)
[11:03:34] *** Quits: ttree (~ttree0@c-73-239-62-159.hsd1.wa.comcast.net) (Ping timeout: 260 seconds)
[11:03:52] *** Joins: Seirdy (~Seirdy@sourcehut/user/seirdy)
[11:03:52] *** Quits: puff (~user@S0106d4ca6d80a83c.vs.shawcable.net) (Read error: Connection reset by peer)
[11:04:05] *** Joins: puff (~user@S0106d4ca6d80a83c.vs.shawcable.net)
[11:05:06] *** Joins: mrwick (~mrwick@user/mrwick)
[11:05:54] *** Quits: Staunch (~Staunch@c-24-7-237-208.hsd1.mn.comcast.net) (Ping timeout: 265 seconds)
[11:07:01] *** Quits: GNUmoon (~GNUmoon@gateway/tor-sasl/gnumoon) (Remote host closed the connection)
[11:10:33] *** Joins: Memory (~user_name@user/memory)
[11:12:07] *** Joins: EvilDMP (~textual@django/moderator/EvilDMP)
[11:13:03] *** Joins: GNUmoon (~GNUmoon@gateway/tor-sasl/gnumoon)
[11:13:12] *** Joins: rpkilby (~rpkilby@c-24-20-208-106.hsd1.or.comcast.net)
[11:13:34] *** Quits: rpkilby (~rpkilby@c-24-20-208-106.hsd1.or.comcast.net) (Remote host closed the connection)
[11:16:35] *** Quits: CrazyEddy (crazyed@2603:300a:1d10:c000:de4a:3eff:fe88:cc5f) (Ping timeout: 264 seconds)
[11:16:56] *** Joins: mcpac82 (~textual@212.25.0.228)
[11:17:04] *** Joins: kosh (~kosh@user/kosh)
[11:18:45] *** Joins: delvian (~delvian@41.13.208.244)
[11:18:45] *** Joins: CrazyEddy (crazyed@2603:300a:1d10:c000:de4a:3eff:fe88:cc5f)
[11:21:07] *** Quits: matrixbot_bartab (~matrixbot@155.210.31.93.rev.sfr.net) (Quit: Bridge terminating on SIGTERM)
[11:22:24] *** Joins: matrixbot_bartab (~matrixbot@155.210.31.93.rev.sfr.net)
[11:22:48] *** Joins: ArtfulDodger_ (~ArtfulDod@2a02-8440-6311-0f28-78ba-13a3-5b05-4fb6.rev.sfr.net)
[11:24:12] *** Quits: delvian (~delvian@41.13.208.244) (Read error: Connection reset by peer)
[11:25:14] *** Quits: mallkrampus (~mallkramp@178.238.11.48) (Ping timeout: 256 seconds)
[11:25:20] *** Joins: delvian (~delvian@41.13.208.244)
[11:25:43] *** Quits: ArtfulDodger (~ArtfulDod@2a02-8440-6312-9027-78ba-13a3-5b05-4fb6.rev.sfr.net) (Ping timeout: 265 seconds)
[11:26:06] *** Quits: onichomp (~onichomp@2806:264:4404:8008:8070:b0dc:b4d4:4ce3) (Read error: Connection reset by peer)
[11:26:43] *** Joins: onichomp (~onichomp@2806:264:4404:8008:8070:b0dc:b4d4:4ce3)
[11:26:48] *** Joins: jpic (~jpic@82.142.20.182)
[11:27:56] *** Quits: matrixbot_bartab (~matrixbot@155.210.31.93.rev.sfr.net) (Quit: Bridge terminating on SIGTERM)
[11:28:56] *** Joins: Seiryuu (~Seiryuu@ip174-103-176-143.adsl2.static.versatel.nl)
[11:29:12] *** Quits: Seiryuu (~Seiryuu@ip174-103-176-143.adsl2.static.versatel.nl) (Client Quit)
[11:30:02] *** Joins: matrixbot_bartab (~matrixbot@155.210.31.93.rev.sfr.net)
[11:30:26] *** Joins: merijn (~merijn@83-160-49-249.ip.xs4all.nl)
[11:30:33] *** Quits: fikran (~fikran@user/fikran) (Ping timeout: 265 seconds)
[11:32:34] *** Joins: fikran (~fikran@user/fikran)
[11:32:45] *** Quits: humbertowoody (~humbertow@189.236.62.65) (Ping timeout: 268 seconds)
[11:33:19] *** Joins: grooverman_ (~grooverma@177.102.117.95)
[11:35:13] *** Quits: grooverman (~grooverma@177.102.117.95) (Ping timeout: 268 seconds)
[11:35:26] *** Quits: defjam (~eb0t@90.210.88.222) (Ping timeout: 256 seconds)
[11:36:06] *** Joins: tobybl (~tobybl@213.31.134.235)
[11:36:51] *** Joins: gitesh (uid423739@ilkley.irccloud.com)
[11:37:06] *** Joins: defjam (~eb0t@90.210.94.131)
[11:38:17] *** Quits: matrixbot_bartab (~matrixbot@155.210.31.93.rev.sfr.net) (Quit: Bridge terminating on SIGTERM)
[11:38:27] *** Quits: Linux77 (~Linux7_7@2804:d45:8c02:b300:a12c:8838:4db4:91c9) (Remote host closed the connection)
[11:39:22] *** Joins: AquaL1te (~AquaL1te@user/aqual1te)
[11:39:38] *** Quits: jpic (~jpic@82.142.20.182) (Remote host closed the connection)
[11:40:02] *** Joins: mallkrampus (~mallkramp@185.169.255.83)
[11:40:24] *** Joins: matrixbot_bartab (~matrixbot@155.210.31.93.rev.sfr.net)
[11:40:42] *** Quits: jeho (~jehoshaph@user/jehoshaphat) (Ping timeout: 265 seconds)
[11:41:22] *** Joins: jpic (~jpic@82.142.20.182)
[11:42:37] *** Quits: matrixbot_bartab (~matrixbot@155.210.31.93.rev.sfr.net) (Client Quit)
[11:43:26] *** Joins: humbertowoody (~humbertow@189.236.62.65)
[11:43:48] *** Quits: Thanatos (~Thanatos@105.112.181.71) (Read error: Connection reset by peer)
[11:44:44] *** Joins: matrixbot_bartab (~matrixbot@155.210.31.93.rev.sfr.net)
[11:45:20] *** Quits: matrixbot_bartab (~matrixbot@155.210.31.93.rev.sfr.net) (Client Quit)
[11:45:27] *** Joins: otisolsen70 (~otisolsen@xd4ed80b5.cust.hiper.dk)
[11:45:42] *** Quits: Enitin (~Enitin@82.102.22.86) (Ping timeout: 268 seconds)
[11:45:47] *** Joins: p-i-_ (~Ohmu@mx-ll-223.206.149-27.dynamic.3bb.co.th)
[11:47:19] *** Quits: defjam (~eb0t@90.210.94.131) (Ping timeout: 250 seconds)
[11:47:24] *** Joins: matrixbot_bartab (~matrixbot@155.210.31.93.rev.sfr.net)
[11:47:54] *** Quits: humbertowoody (~humbertow@189.236.62.65) (Ping timeout: 256 seconds)
[11:48:34] *** Joins: LucaTM (~LucaTM@user/lucatm)
[11:49:24] *** Quits: p-i- (~Ohmu@223.206.149.27) (Ping timeout: 265 seconds)
[11:49:24] *** Joins: defjam (~eb0t@90.197.82.230)
[11:49:38] *** Joins: chele (~chele@user/chele)
[11:52:44] *** Joins: Enitin (~Enitin@82.102.22.86)
[11:57:10] *** Joins: Thanatos (~Thanatos@105.112.181.71)
[11:59:04] *** Quits: Thanatos (~Thanatos@105.112.181.71) (Read error: Connection reset by peer)
[11:59:28] *** Joins: Thanatos (~Thanatos@105.112.181.71)
[11:59:45] *** Joins: Gerula_ (~Gerula@user/gerula)
[11:59:45] *** Quits: Gerula (~Gerula@user/gerula) (Killed (lead.libera.chat (Nickname regained by services)))
[11:59:45] *** Gerula_ is now known as Gerula
[12:00:37] *** Joins: causa-sui (~causasui@c-68-60-125-136.hsd1.mi.comcast.net)
[12:00:41] *** Joins: ssbr (~ssbr@python/site-packages/ssbr)
[12:04:11] *** Joins: ThanatosJ (~Thanatos@197.210.65.153)
[12:05:28] *** Quits: causa-sui (~causasui@c-68-60-125-136.hsd1.mi.comcast.net) (Ping timeout: 256 seconds)
[12:05:40] *** Quits: Thanatos (~Thanatos@105.112.181.71) (Read error: Connection reset by peer)
[12:05:55] *** Joins: xc|snowman (~xc|snowma@dslb-002-202-178-127.002.202.pools.vodafone-ip.de)
[12:07:16] *** Joins: AsenMx (~AsenMx@user/asenmx)
[12:08:11] *** Quits: mat001 (~mat001@c-71-202-208-251.hsd1.ca.comcast.net) (Ping timeout: 264 seconds)
[12:08:53] *** Joins: e2m4n (~ezman@user/e2m4n)
[12:10:53] *** Quits: llua (~llua@zsh/developer/llua) (Ping timeout: 264 seconds)
[12:10:55] *** Joins: shiriru (~shiriru@user/shiriru)
[12:10:59] *** Quits: NineBAR (~NineBAR@c-107-5-176-200.hsd1.mi.comcast.net) (Ping timeout: 268 seconds)
[12:11:35] *** Joins: luischi (~luigi@80.30.201.209)
[12:12:06] *** Joins: palasso (~palasso@user/palasso)
[12:13:19] *** Joins: Viewday117 (~Viewday@user/viewday)
[12:14:58] *** Quits: Viewday11 (~Viewday@user/viewday) (Read error: Connection reset by peer)
[12:14:59] *** Viewday117 is now known as Viewday11
[12:17:07] *** Joins: philectro (~quassel@2a02:2788:9a4:946:3167:9013:9511:45b8)
[12:17:59] *** Joins: Ergo^ (~ergo@91.238.59.144)
[12:19:23] *** Quits: cthulchu (~Cthulchu@193.194.107.250) (Ping timeout: 250 seconds)
[12:25:56] *** Joins: jonaskabrink (~jonaskabr@ip1f12b838.dynamic.kabel-deutschland.de)
[12:26:00] <eyepeetee> without building a bunch of logic around f.read, f.seek, f.read, and f.write, is there a good way to remove lines by index from a file without having to load it into memory?
[12:26:37] *** Quits: nrg (~NRG@user/nrg) (Ping timeout: 265 seconds)
[12:26:40] *** Joins: y1n (~y1n@91.141.34.188.wireless.dyn.drei.com)
[12:27:14] <eyepeetee> without having to load it fully* into memory at once
[12:28:04] *** Quits: jonthesnow (~xizhendu@36.112.188.169) (Ping timeout: 265 seconds)
[12:28:41] *** Joins: soman (~soman@83.139.147.234)
[12:28:55] *** Joins: herjazz (~herjazz@p6758124-ipngn30801marunouchi.tokyo.ocn.ne.jp)
[12:29:52] *** Joins: Klinda (~superleag@user/klinda)
[12:30:32] <jinsun> write the required lines to another temp file and rename?
[12:30:35] *** Joins: bankin (~user@user/bankin)
[12:32:09] <mrwick> AFAIK if you loop through a file you only put in memory the part you are looping on, like all generators
[12:32:44] <mrwick> so a context manager and a for loop will only hold that line in memory, you can choose to write it to a new file or not
[12:32:55] <mrwick> oh sorry, jinsun said that
[12:32:55] <eyepeetee> jinsun: that's what i'll do, thank you.
[12:33:09] <eyepeetee> mrwick: but can i explicitly remove, rather than write, a line in that file?
[12:33:33] <eyepeetee> i'd PREFER not to use a temp file since it feels hacky
[12:33:41] *** Quits: chuangzhu (~chuangzhu@user/chuangzhu) (Ping timeout: 250 seconds)
[12:34:21] <eyepeetee> i TRIED and succeeded in writing something with logic around f.read, f.seek, and f.write, but it appears to have issues on very large files with many indexes to be removed for some reason i have not been able to figure out
[12:34:27] <eyepeetee> and i figure there MUST be a better way than what i'm doing
[12:34:48] *** Joins: chuangzhu (~chuangzhu@user/chuangzhu)
[12:35:00] *** Quits: chatcat (chatcat@gateway/vpn/airvpn/chatcat) (Read error: Connection reset by peer)
[12:35:08] *** Quits: jrjsmrtn (~jrjsmrtn@ip-62-235-219-205.dsl.scarlet.be) (Quit: ZNC 1.8.2 - https://znc.in)
[12:35:15] *** Joins: betelgeuse (~betelgeus@94-225-47-8.access.telenet.be)
[12:35:20] <eyepeetee> if you're curious, this is my current implementation i just described: https://pastebin.com/mQRjRJmb
[12:35:24] *** Joins: chatcat (chatcat@gateway/vpn/airvpn/chatcat)
[12:35:26] <jinsun> you can do without temp flle cleanly if you can load the entire thing into memory
[12:35:46] <eyepeetee> jinsun: that's what i'm trying to avoid due to some pretty big files
[12:36:08] <mrwick> finding a single line and deleting it would be nice.
[12:36:17] * mrwick has never found a way to do that
[12:37:15] *** Quits: EvilDMP (~textual@django/moderator/EvilDMP) (Quit: My MacBook has gone to sleep. ZZZzzz…)
[12:37:17] <supakeen> There isn't really a good way to do so due to how files work sadly.
[12:37:24] <jinsun> not allowing loading into memory or temp files leaves us with bunch of logic with f.read and f.seek (that I have no idea how it would work)
[12:37:32] *** Joins: b_jonas (~x@catv-176-63-4-16.catv.broadband.hu)
[12:37:56] <eyepeetee> but if i was able to build something that does it, but breaks on big files and many indices, is there not a library that exists out there known to be stable that does the same?
[12:38:48] *** Joins: jrjsmrtn (~jrjsmrtn@ip-62-235-219-205.dsl.scarlet.be)
[12:38:52] <eyepeetee> it can be done through f.seek, f.read, and f.write, it is just complicated
[12:38:57] *** Joins: llua (~llua@zsh/developer/llua)
[12:38:58] *** Joins: nrg (~NRG@user/nrg)
[12:39:14] <supakeen> the simplest solution as always is to use a tmp file and move it back over so the entire change is atomic and a half-way failure doesn't break your file
[12:39:33] <Repiphany> Call sed with subprocess
[12:39:36] <eyepeetee> yeah, good call
[12:39:45] <eyepeetee> good call on that.
[12:39:51] <eyepeetee> that would be a big issue
[12:40:12] <mrwick> does sed not load the file into memory?
[12:40:49] <rindolf> mrwick: it may or may not
[12:41:40] <rindolf> sed is not magical either though - it uses system calls too
[12:41:43] <supakeen> This is a problem as old as files are, same for 'I want to add a line in the middle of a file'.
[12:41:55] <supakeen> It's just cumbersome and there's tradeoffs on every side.
[12:41:56] *** Joins: PJBoy (~PJBoy@user/pjboy)
[12:41:57] <Shapeshifter> Am I correct in assuming that assert(False, "foo") passes because it's interpreted as a 2-tuple?
[12:42:37] *** Joins: shad (~shad@user/shad)
[12:42:59] *** Quits: gdd (~gdd@129.199.146.230) (Ping timeout: 250 seconds)
[12:43:36] <rindolf> Shapeshifter: i think so
[12:43:49] <xc|snowman> Well, convert it to a structured file and jump an amount of bytes to get to the next line.
[12:47:40] *** Joins: gdd (~gdd@129.199.146.230)
[12:48:06] *** Quits: Omega037 (~Omega037@047-233-057-109.res.spectrum.com) (Ping timeout: 260 seconds)
[12:48:22] *** Quits: merijn (~merijn@83-160-49-249.ip.xs4all.nl) (Ping timeout: 265 seconds)
[12:48:55] *** Joins: Omega037 (~Omega037@047-233-057-109.res.spectrum.com)
[12:49:26] <eyepeetee> hokay, easy enough. https://pastebin.com/Db4s1re8
[12:49:30] <eyepeetee> ty
[12:50:02] *** Quits: luke-jr (~luke-jr@user/luke-jr) (Quit: ZNC - http://znc.sourceforge.net)
[12:51:03] *** Quits: ThanatosJ (~Thanatos@197.210.65.153) (Quit: Leaving)
[12:51:05] <jinsun> eyepeetee: is that os.remove needed? opening the file in w mode will clear that file anyway
[12:51:07] *** Joins: luke-jr (~luke-jr@user/luke-jr)
[12:51:34] <eyepeetee> you're right, not necessary, force of habit for some reason :)
[12:54:35] *** Quits: puff (~user@S0106d4ca6d80a83c.vs.shawcable.net) (Remote host closed the connection)
[12:54:49] *** Joins: puff (~user@S0106d4ca6d80a83c.vs.shawcable.net)
[12:56:12] *** Quits: nomic (~nomic@185.217.117.59) (Quit: Leaving)
[12:57:01] *** Quits: rindolf (~shlomif@2a0d:6fc2:4bb1:500:6b1e:2524:3d70:36ec) (Read error: Connection reset by peer)
[12:58:45] *** dcaro_away is now known as dcaro
[12:59:49] *** Quits: delvian (~delvian@41.13.208.244) (Quit: Leaving)
[13:00:12] *** Joins: mozgalom (~mozgalom@194.144.47.113)
[13:01:22] *** Joins: rindolf (~shlomif@2a0d:6fc2:4bb1:500:6b1e:2524:3d70:36ec)
[13:01:49] *** Quits: magga (magga@ti0036a400-1042.bb.online.no) (Remote host closed the connection)
[13:08:10] *** Joins: plastico (~plastico@neomutt/plastico)
[13:10:35] *** Joins: magga (magga@ti0036a400-1042.bb.online.no)
[13:10:54] *** Quits: c10l (~c10l@user/c10l) (Read error: Connection reset by peer)
[13:12:15] *** Quits: thiras (~thiras@user/thiras) (Ping timeout: 250 seconds)
[13:17:18] *** Joins: lsrtl_ (~lsrtl@user/lsrtl)
[13:17:43] *** Joins: CatCow (~wtf_over@c-73-96-109-206.hsd1.or.comcast.net)
[13:18:57] <dob1> I have this dir structure https://termbin.com/9zqu   why for item in Path(baseDir).rglob('user*'): ...  doesn't iterate ony user dirs?
[13:19:37] *** Joins: szymon (~ugh@37.120.211.205)
[13:19:42] *** Quits: defjam (~eb0t@90.197.82.230) (Ping timeout: 256 seconds)
[13:20:22] *** Joins: renlo (~Renlo_Ren@pool-108-14-112-182.nycmny.east.verizon.net)
[13:20:43] *** Joins: defjam (~eb0t@90.202.44.78)
[13:23:28] *** Joins: EvilDMP (~textual@django/moderator/EvilDMP)
[13:23:53] <dob1> or how can filter a path based for example on a regexp ?
[13:24:48] *** Quits: renlo (~Renlo_Ren@pool-108-14-112-182.nycmny.east.verizon.net) (Ping timeout: 256 seconds)
[13:25:30] *** Joins: cvmn (~caveman@gateway/tor-sasl/caveman)
[13:25:39] *** Quits: cvmn (~caveman@gateway/tor-sasl/caveman) (Remote host closed the connection)
[13:26:00] *** Joins: cvmn (~caveman@gateway/tor-sasl/caveman)
[13:26:15] *** Joins: jdavfsxd (~rvgzuuqp@gateway/tor-sasl/rvgzuuqp)
[13:26:42] *** Quits: luischi (~luigi@80.30.201.209) (Quit: WeeChat 3.3)
[13:26:44] *** Quits: jbox (~jbox@user/jbox) (Read error: Connection reset by peer)
[13:29:16] *** Quits: Mattiaslndstrm (~Mattiasln@c213-103-137-235.bredband.tele2.se) (Quit: My MacBook has gone to sleep. ZZZzzz…)
[13:31:22] *** Quits: Ergo^ (~ergo@91.238.59.144) (Remote host closed the connection)
[13:31:23] *** Quits: jetchisel (jetchisel@user/jetchisel) (Ping timeout: 265 seconds)
[13:31:26] <parv> dob1, What do you get?
[13:31:38] *** Quits: ExeciN (~ExeciN@user/nicexe) (Ping timeout: 256 seconds)
[13:32:26] *** Joins: dvx (~dvx@5.181.92.64)
[13:33:14] *** Quits: jdavfsxd (~rvgzuuqp@gateway/tor-sasl/rvgzuuqp) (Remote host closed the connection)
[13:33:14] <dob1> parv, nothing
[13:34:10] <parv> What is "baseDir", parent of user*?
[13:34:20] *** Joins: onichomp666 (~onichomp@177.231.43.15)
[13:35:02] <dob1> yes
[13:35:13] *** Quits: kdc (~kdc@196.211.197.159) (Ping timeout: 250 seconds)
[13:35:34] *** Joins: c10l (~c10l@user/c10l)
[13:35:44] *** Quits: onichomp (~onichomp@2806:264:4404:8008:8070:b0dc:b4d4:4ce3) (Ping timeout: 265 seconds)
[13:35:56] <dob1> for example /tmp/test/user100/    basedir is /tmp/test/
[13:36:22] *** Joins: jetchisel (~jetchisel@user/jetchisel)
[13:36:48] *** Joins: delvian (~delvian@41.13.208.244)
[13:37:01] *** Joins: jdavfsxd (~rvgzuuqp@gateway/tor-sasl/rvgzuuqp)
[13:39:59] *** Quits: fikran (~fikran@user/fikran) (Ping timeout: 250 seconds)
[13:40:25] *** Quits: y1n (~y1n@91.141.34.188.wireless.dyn.drei.com) (Ping timeout: 250 seconds)
[13:41:49] *** Joins: Neoon (~Neoon@2607:5300:60:23a5::1111)
[13:41:49] *** Joins: Linux77 (~Linux7_7@2804:d45:8c02:b300:a12c:8838:4db4:91c9)
[13:41:55] *** Joins: fikran (~fikran@user/fikran)
[13:44:03] *** Quits: jdmark (~jdmark@097-102-095-007.res.spectrum.com) (Read error: Connection reset by peer)
[13:44:59] *** Joins: alzgh (~alzgh@user/alzgh)
[13:46:30] *** Joins: vulpes_vulpes (~vulpes_vu@62-64-204-12.dynamic.dial.as9105.com)
[13:48:39] *** Quits: chuangzhu (~chuangzhu@user/chuangzhu) (Ping timeout: 250 seconds)
[13:49:56] <parv> dob1, That seems to be working here : https://termbin.com/ds7k
[13:50:03] *** Joins: BSaboia (~bsaboia@177.37.198.227)
[13:50:19] *** Joins: szymon_ (~ugh@185.244.214.211)
[13:50:47] *** Joins: chuangzhu (~chuangzhu@user/chuangzhu)
[13:51:08] <dob1> parv, but you are matching files not dirws
[13:51:22] <dob1> just guessing
[13:51:38] <dob1> ah no, the first 2
[13:51:46] <parv> I am not matching anything; asked for anything py*
[13:51:59] <dob1> you right, I don't know why it doesn't work here
[13:52:06] *** Joins: Pickchea (~private@user/pickchea)
[13:52:51] *** Joins: szymon__ (~ugh@185.244.214.60)
[13:53:08] *** Quits: szymon (~ugh@37.120.211.205) (Ping timeout: 256 seconds)
[13:53:40] <mrwick> dob1: can you share your python code?
[13:55:26] *** Joins: Gurkenglas (~Gurkengla@dslb-002-203-144-204.002.203.pools.vodafone-ip.de)
[13:55:33] *** Quits: szymon_ (~ugh@185.244.214.211) (Ping timeout: 265 seconds)
[13:55:40] <dob1> this is https://termbin.com/1lkb
[13:55:52] *** Joins: duskrat (~portalrat@user/portalrat)
[13:55:53] *** Joins: szymon (~ugh@206.217.205.63)
[13:55:56] *** Quits: portalrat_ (~portalrat@user/portalrat) (Remote host closed the connection)
[13:56:18] <dob1> I think I got what is my error, looking at parv code/example
[13:56:27] *** Quits: dre (~dre@2001:8003:c932:c301:a3c2:1d7d:7185:3018) (Ping timeout: 250 seconds)
[13:56:29] <dob1> it doesn't work as I suppose it work
[13:58:02] *** Joins: sleetdrop (~sleetdrop@61.135.152.248)
[13:58:06] *** Quits: szymon__ (~ugh@185.244.214.60) (Ping timeout: 260 seconds)
[14:00:23] *** Quits: szymon (~ugh@206.217.205.63) (Ping timeout: 265 seconds)
[14:02:13] <parv> Could be relative path issue for you.
[14:02:19] *** Joins: causa-sui (~causasui@c-68-60-125-136.hsd1.mi.comcast.net)
[14:02:57] *** Quits: elastic_dog (~elastic_d@2a01:118f:822:9c00:f583:aa51:9ad4:d4fb) (Ping timeout: 250 seconds)
[14:03:10] <parv> dob1, But I see the absolute path in your example code for the directory.
[14:03:26] <mrwick> could be that is_file does not work on path objects
[14:03:35] *** Joins: psystemupdate (~AbraCadav@162-236-239-168.lightspeed.mssnks.sbcglobal.net)
[14:03:41] <wyre> do I need to do something like this https://bpa.st/raw/OPZQ
[14:03:54] *** Quits: Vision (~Vision@024-178-231-173.res.spectrum.com) (Ping timeout: 256 seconds)
[14:03:58] <wyre> but ... I'm not allowed to open as read a file that doesn't exist
[14:04:24] <wyre> so .. should I do an extra with statement to read the file and store the lines in all_lines?
[14:04:32] <dob1> parv, what you mean?
[14:04:38] *** Joins: Mattiaslndstrm (~Mattiasln@c213-103-137-235.bredband.tele2.se)
[14:04:52] <dob1> mrwick, if I use * instead of * it prints the data
[14:04:57] <wyre> s/do I need/I need/
[14:05:01] <dob1> user*
[14:05:07] <parv> mrwick, It works, it works : https://termbin.com/4dke
[14:06:25] <parv> dob1, In your actual code are you using relative path or absolute for your "baseDir"?
[14:06:33] <dob1> it's in the code
[14:06:34] *** Quits: mozgalom (~mozgalom@194.144.47.113) (Read error: Connection reset by peer)
[14:06:42] <dob1> absolute
[14:06:50] <mrwick> parv: yes it's a cool library that I am also learning ;)
[14:06:51] *** Quits: causa-sui (~causasui@c-68-60-125-136.hsd1.mi.comcast.net) (Ping timeout: 250 seconds)
[14:06:55] <wyre> oh, it was w+ instead r+ ...
[14:06:58] <wyre> I see
[14:07:07] *** Joins: yeirr (~yeirr@user/yeirr)
[14:07:14] <parv> dob1, Yeah, beats me.
[14:07:49] <wyre> hm... but it's not actually reading the lines 🤔
[14:07:51] *** Joins: mozgalom (~mozgalom@194.144.47.113)
[14:08:11] <dob1> parv, no, no problems
[14:08:16] *** Joins: elastic_dog (~elastic_d@2a01:118f:822:9c00:f583:aa51:9ad4:d4fb)
[14:09:05] <mrwick> dob1: yes I believe putting in the user* only globs the user dirs but does not traverse into them
[14:09:28] * mrwick really like pathlib but has not read the entire doc.. sorry
[14:09:34] *** Quits: mallkrampus (~mallkramp@185.169.255.83) (Ping timeout: 256 seconds)
[14:10:12] *** Quits: cvmn (~caveman@gateway/tor-sasl/caveman) (Ping timeout: 276 seconds)
[14:12:25] <parv> Right
[14:13:27] *** Joins: Viewday110 (~Viewday@user/viewday)
[14:14:51] *** Quits: iflema (~ian@user/iflema) (Quit: iflema)
[14:14:57] *** Quits: mIk3_08 (~Thunderbi@user/mik3-08/x-2852566) (Quit: mIk3_08)
[14:15:08] <dob1> ok so an alternative to filter the dirs/file I dont' want. I was looking at parts that gives me a turple of the path, makes sense?
[14:15:14] *** Quits: Viewday11 (~Viewday@user/viewday) (Ping timeout: 256 seconds)
[14:15:14] *** Viewday110 is now known as Viewday11
[14:15:41] <parv> dob1, As mrwick mentioned, you would get only the files matching the pattern not anything else. I had not realize that. You would need "iterdir" method.
[14:15:53] <parv> mrwick, Thanks
[14:16:10] * mrwick just found iterdir
[14:16:24] *** Joins: iflema (~ian@user/iflema)
[14:16:51] <mrwick> dob1: another traversal on the found paths would also work, possibly globbing *.txt ? not sure what you really want
[14:16:55] * parv was searching for "walk" -- could have gone up the chain.
[14:17:36] <Klinda> is python type safe? I guess not
[14:18:28] *** Joins: cthulchu (~Cthulchu@193.194.107.250)
[14:18:51] *** Joins: jay-m126 (~jay-m@41.205.30.141)
[14:18:57] *** Joins: jay-m126_ (~jay-m@41.205.30.141)
[14:19:01] *** Joins: vladoski (~vladoski@2001:b07:add:d406:82ff:c663:9b1d:a681)
[14:19:05] <dob1> I have to traverse all the user dirs, not other dirs on basepath but exclude some files/dir based on their names
[14:19:12] *** Quits: sleetdrop (~sleetdrop@61.135.152.248) (Ping timeout: 256 seconds)
[14:19:12] *** Quits: defjam (~eb0t@90.202.44.78) (Ping timeout: 256 seconds)
[14:19:43] <nedbat> Klinda: can you say more specifically what you mean by type safe? I guess not also.
[14:19:43] <mrwick> there is no equivalent to os.walk in pathlib. interesting
[14:20:06] *** Joins: defjam (~eb0t@90.204.62.61)
[14:20:14] <dob1> for example this dir structure https://termbin.com/9zqu   I want to exclude manual dir and its content
[14:20:25] *** Joins: enoq (~enoq@2a05:1141:1f5:5600:b9c9:721a:599:bfe7)
[14:21:56] <Klinda> because you can declare nedbat int = 1 and int = 'hello world' for example..
[14:22:20] *** Quits: CyDefect (~troll@213.55.224.219) (Ping timeout: 268 seconds)
[14:22:22] <nedbat> Klinda: right. `int = 1` isn't a declaration, it's an assignment
[14:22:28] <parv> I was expecting some method which would take a function to act upon the file path.
[14:22:36] *** Joins: driib2 (~driib@185.65.135.232)
[14:22:53] <Klinda> yeah nedbat english is not my first language xD
[14:22:59] <nedbat> Klinda: you can use type hints like `i: int = 1`  for the static type checker
[14:23:12] <nedbat> Klinda: but just as in other languages, they have no effect at runtime
[14:23:26] <Klinda> undestand
[14:23:29] <Klinda> thanks
[14:23:34] *** Quits: jetchisel (~jetchisel@user/jetchisel) (Ping timeout: 268 seconds)
[14:24:06] *** Joins: mallkrampus (~mallkramp@185.169.233.48)
[14:24:08] *** Joins: cosimone (~user@2001:b07:ae5:db26:a7aa:8027:6b4e:2fb3)
[14:25:02] *** Quits: driib (~driib@185.195.233.160) (Ping timeout: 265 seconds)
[14:25:02] *** driib2 is now known as driib
[14:25:43] *** Joins: jetchisel (jetchisel@user/jetchisel)
[14:29:15] *** Joins: legola (~legola@46.235.101.181)
[14:32:51] *** Quits: vlas (~vlas@109.86.229.110) (Quit: Konversation terminated!)
[14:33:55] *** Joins: ubert (~Thunderbi@2a02:8109:9880:303c:ca5b:76ff:fe29:f233)
[14:34:09] *** Quits: vladoski (~vladoski@2001:b07:add:d406:82ff:c663:9b1d:a681) (Ping timeout: 250 seconds)
[14:34:53] *** Quits: onichomp666 (~onichomp@177.231.43.15) (Read error: Connection reset by peer)
[14:36:44] *** Joins: vlas (~vlas@109.86.229.110)
[14:36:45] *** Quits: psystemupdate (~AbraCadav@162-236-239-168.lightspeed.mssnks.sbcglobal.net) (Ping timeout: 250 seconds)
[14:36:52] *** Quits: sgn (~sgn@user/sgn) (Read error: Connection reset by peer)
[14:37:13] *** Joins: sgn (~sgn@user/sgn)
[14:37:45] *** Quits: Enitin (~Enitin@82.102.22.86) (Ping timeout: 268 seconds)
[14:38:45] *** Quits: zerosum (~zerosum@user/zerosum) (Quit: Ping timeout (120 seconds))
[14:40:36] *** Quits: Mattiaslndstrm (~Mattiasln@c213-103-137-235.bredband.tele2.se) (Quit: My MacBook has gone to sleep. ZZZzzz…)
[14:41:22] *** Joins: rakoon (~rakoon@2001:985:f4c6:1:8428:48d8:b860:81df)
[14:42:02] <rakoon> If queue.qsize() is "approximate" of items in the queue, how can i safely know how many items a queue has at a time?
[14:42:03] *** Joins: Mattiaslndstrm (~Mattiasln@c213-103-137-235.bredband.tele2.se)
[14:42:15] *** Quits: Mattiaslndstrm (~Mattiasln@c213-103-137-235.bredband.tele2.se) (Client Quit)
[14:42:51] *** Joins: joris1 (~joris@195.123.218.123)
[14:44:33] *** Joins: merijn (~merijn@83-160-49-249.ip.xs4all.nl)
[14:44:59] *** Quits: puff (~user@S0106d4ca6d80a83c.vs.shawcable.net) (Read error: Connection reset by peer)
[14:45:12] *** Joins: puff (~user@S0106d4ca6d80a83c.vs.shawcable.net)
[14:46:19] *** Quits: gitesh (uid423739@ilkley.irccloud.com) (Quit: Connection closed for inactivity)
[14:48:20] *** Joins: Enitin (~Enitin@82.102.22.85)
[14:48:22] *** Joins: Ergo^ (~ergo@91.238.59.144)
[14:49:01] <bjs> rakoon: a queue.Queue is a concurrent queue
[14:49:11] <bjs> rakoon: the problem is, the moment you get the size someone else could change it
[14:49:17] *** Joins: gyrow (~gyrow@d54C03E98.access.telenet.be)
[14:49:43] <bjs> just because the queue has 10 elements right now doesn't mean it still has 10 elements by the end of this sentence :)
[14:50:51] <gyrow> Hi everyone, is there a good/easy way to get integers that use exactly 32 bits of memory and not like python's default ints that take up 24 bytes?
[14:51:19] <deniska> gyrow: if you need to keep arrays of numbers around, consider numpy
[14:53:08] <bjs> gyrow: every Python object is going to take up ~24 bytes of memory just to store all the object information (its type, refcount etc).  the best you can do is use some other object to store many packed 32-bit integers together (e.g. a bytes() object or some array type like numpy's ndarray)
[14:53:42] *** Quits: RiFo (~RiFo@user/rifo) (Read error: Connection reset by peer)
[14:54:10] <gyrow> Well I am using pyspark RDD's but I can't find any info if they compact it somehow
[14:54:23] <gyrow> Should have stated that first because X-Y problem, my bad
[14:54:46] *** Joins: PointThink (~PointThin@abzc9.neoplus.adsl.tpnet.pl)
[14:55:00] *** Quits: Andrynet (~Andrey@186.46.204.193) (Ping timeout: 265 seconds)
[14:55:29] *** Quits: defjam (~eb0t@90.204.62.61) (Ping timeout: 265 seconds)
[14:56:28] *** Joins: Andrynet (~Andrey@186.46.204.193)
[14:56:41] *** Joins: Elzington_ (~Elzington@static-68-235-44-38.cust.tzulo.com)
[14:57:11] *** Joins: RiFo (~RiFo@user/rifo)
[14:57:24] *** Joins: defjam (~eb0t@90.202.47.175)
[14:58:08] *** Quits: PointThink (~PointThin@abzc9.neoplus.adsl.tpnet.pl) (Read error: Connection reset by peer)
[14:58:33] *** Joins: magla (~gelignite@55d4e1d7.access.ecotel.net)
[14:58:37] *** Joins: PointThink (~PointThin@abzc9.neoplus.adsl.tpnet.pl)
[14:59:03] *** Joins: luigibu (~luigibu@91.126.243.41)
[14:59:20] *** Quits: Elzington__ (~Elzington@static-68-235-44-22.cust.tzulo.com) (Ping timeout: 268 seconds)
[15:01:08] *** Quits: Andrynet (~Andrey@186.46.204.193) (Ping timeout: 256 seconds)
[15:02:02] *** Joins: moldorcoder7_ (~moldorcod@37.120.143.28)
[15:02:07] *** Joins: Andrynet (~Andrey@186.46.204.193)
[15:02:27] *** Joins: johnkeats6 (~johnkeats@2804:14c:32:a0cc:400e:8294:7091:b83a)
[15:02:50] *** Quits: moldorcoder7 (~moldorcod@37.120.143.29) (Ping timeout: 256 seconds)
[15:03:58] *** Quits: luigibu (~luigibu@91.126.243.41) (Ping timeout: 256 seconds)
[15:05:23] *** Quits: parv (~quass@user/parv) (Quit: parv)
[15:07:56] *** Quits: Andrynet (~Andrey@186.46.204.193) (Ping timeout: 256 seconds)
[15:09:15] *** Quits: BillyZane (~BillyZane@139.28.216.252) (Ping timeout: 250 seconds)
[15:09:42] *** Joins: Andrynet (~Andrey@186.46.204.193)
[15:10:54] *** Joins: nek_minnit (~nek_minni@h-98-128-168-226.NA.cust.bahnhof.se)
[15:12:04] <nek_minnit> what does ',' next to "line" mean on  "line, = ax0.plot([], lw=3)" in matplotlib?
[15:12:54] <nek_minnit> I can't get the correct data without ","
[15:13:25] <bjs> nek_minnit: x, y, z = [1, 2, 3]  # unpacks 1 into x, 2 into y, 3 into z
[15:13:36] <bjs> nek_minnit: if there's only 1 thing then it unpacks that 1 thing. like `x, = [1]`
[15:13:44] <bjs> without the comma x=[1], with the comma x=1
[15:14:00] *** Quits: yotsuba-chan (~yotsuba@93-172-241-53.bb.netvision.net.il) (Remote host closed the connection)
[15:14:19] *** Joins: yotsuba-chan (~yotsuba@93-172-241-53.bb.netvision.net.il)
[15:14:49] *** Quits: defjam (~eb0t@90.202.47.175) (Ping timeout: 265 seconds)
[15:14:58] <nek_minnit> bjs, thank you. Does this mean the same "line_0 = ax0.plot([], lw=3)[0]" ?
[15:15:33] *** Quits: p-i-_ (~Ohmu@mx-ll-223.206.149-27.dynamic.3bb.co.th) (Remote host closed the connection)
[15:15:39] <bjs> nek_minnit: basically yes, but this `x, = ...` syntax works for things other than lists
[15:16:09] *** Joins: luigibu (~luigibu@91.126.243.41)
[15:16:09] *** Joins: p-i- (~Ohmu@mx-ll-223.206.149-27.dynamic.3bb.co.th)
[15:16:42] *** Joins: defjam (~eb0t@90.210.93.250)
[15:16:56] <bjs> e.g. `x, = {1}` and `x, = {"a": 1}`, so it depends what type ax0.plot returns exactly. I matplotlib's axes.plot returns a boring old list though so it should be the same
[15:17:35] *** Joins: Common (~Common@user/common)
[15:18:31] *** Joins: Moopiz (~Moopiz@37.97.4.244)
[15:18:57] <nek_minnit> thank you very much bjs
[15:19:10] *** Quits: merijn (~merijn@83-160-49-249.ip.xs4all.nl) (Ping timeout: 265 seconds)
[15:20:58] *** Quits: luigibu (~luigibu@91.126.243.41) (Ping timeout: 256 seconds)
[15:21:01] *** Joins: y2o (~y2o@nat-wifivisitas-1x.campus.utfsm.cl)
[15:21:15] *** Joins: abrantesasf (~abrantesa@187.36.170.211)
[15:21:34] *** Joins: Bronto22 (~mennoh@84-86-247-193.fixed.kpn.net)
[15:22:00] *** Quits: nek_minnit (~nek_minni@h-98-128-168-226.NA.cust.bahnhof.se) (Quit: Client closed)
[15:22:36] *** Quits: jpds (~jpds@gateway/tor-sasl/jpds) (Remote host closed the connection)
[15:23:01] *** Joins: jpds (~jpds@gateway/tor-sasl/jpds)
[15:23:26] *** Quits: EvilDMP (~textual@django/moderator/EvilDMP) (Quit: My MacBook has gone to sleep. ZZZzzz…)
[15:24:15] *** Joins: EvilDMP (~textual@django/moderator/EvilDMP)
[15:27:23] *** Quits: PointThink (~PointThin@abzc9.neoplus.adsl.tpnet.pl) (Ping timeout: 265 seconds)
[15:27:44] *** Quits: abrantesasf (~abrantesa@187.36.170.211) (Remote host closed the connection)
[15:27:46] *** Quits: Andrynet (~Andrey@186.46.204.193) (Ping timeout: 256 seconds)
[15:29:13] <rakoon> bjs: i see, thanks!
[15:29:30] *** Joins: Andrynet (~Andrey@186.46.204.193)
[15:30:03] *** Quits: Enitin (~Enitin@82.102.22.85) (Ping timeout: 250 seconds)
[15:30:51] *** Joins: Enitin (~Enitin@82.102.22.84)
[15:31:05] *** Quits: Klinda (~superleag@user/klinda) (Quit: Konversation terminated!)
[15:32:13] *** Joins: luigibu (~luigibu@91.126.243.41)
[15:33:00] <rakoon> If i pass in every request (flask)a new collections.deque to 2 threads so they can communicate with each other, will i be safe?
[15:34:15] <rakoon> my endpoint spins up 2 threads to do some work and i am using queue.Queue but i have problems when 1 thread crashes, communicating problems with when to shutdown the 2nd thread...
[15:34:18] *** Quits: djhankb (~djhankb@208.113.164.68) (Read error: Connection reset by peer)
[15:35:20] <rakoon> I was shutting down by putting a "shutdown" item in the queue, but that message was left there if 2nd thread errors, and in a new request the new thread was picking up this "shutdown" without doing any work :(
[15:35:54] <yourfate> so, in ECE we quite often have to work with devices with configuration register structures. things like AD converters or PLLs have for example like 10 16 bit registers, and the different bits in those control different functions of the device. I'd like a data structure to represent those, and also be able to initialize that data structure from the binary data or change things in it, then get the
[15:35:57] <yourfate> binary data back
[15:35:59] <rakoon> So i thought what if i use 1 new queue in every new request and pass it to the 2 threads
[15:36:01] *** Quits: supakeen (~user@python/site-packages/supakeen) (Quit: WeeChat 3.3)
[15:36:21] <yourfate> rn I have a dataclass with the different fields, and custom methods from loading it from binary / creating binary from it
[15:36:32] *** Joins: supakeen (~user@python/site-packages/supakeen)
[15:36:47] <yourfate> ideally I'd want to give the fields of the dataclass some metadata like, 4 bit int, from bitpos 16 downto 12 or something
[15:37:02] <yourfate> then it can (de)serialize from binary it self
[15:39:40] <ssbr> rakoon: deque isn't necessarily thread-safe and certainly doesn't have the handy features of a threaded Queue. My first draft of a suggestion would be to use a try-finally (or with statement) to send the closing message to the queue, or (maybe better) to check aliveness of that thread periodically somewhere
[15:39:57] *** Quits: SpeakerToMeat__ (~Speaker@user/speakertomeat) (Read error: Connection reset by peer)
[15:40:23] *** Joins: rama (~rama@c-24-130-92-222.hsd1.ca.comcast.net)
[15:40:36] <ssbr> yourfate: this all sounds good so far. Are you asking how to do that? (You'd use the metadata feature.)
[15:41:15] <yourfate> ooooh, there is such a feature
[15:41:47] *** Quits: luigibu (~luigibu@91.126.243.41) (Ping timeout: 264 seconds)
[15:42:15] *** Quits: jay-m126 (~jay-m@41.205.30.141) (Remote host closed the connection)
[15:42:27] *** Quits: jay-m126_ (~jay-m@41.205.30.141) (Remote host closed the connection)
[15:42:32] *** Joins: jay-m126 (~jay-m@41.205.30.141)
[15:42:44] *** Joins: jay-m126_ (~jay-m@41.205.30.141)
[15:43:04] *** Quits: beencubed (~beencubed@209.131.238.248) (Ping timeout: 256 seconds)
[15:43:31] *** Joins: JayDoubleu (~jaydouble@2001:470:69fc:105::1:371a)
[15:43:42] *** Joins: cheater (~Username@user/cheater)
[15:44:04] *** Joins: beencubed (~beencubed@209.131.238.248)
[15:44:04] *** Joins: tsaka__ (~torstein@31.4.150.3)
[15:44:27] <rakoon> ssbr: yeah that is what i was doing but in the finally block where i was sending the "shutdown" i was checking for 2nd_thread.isAlive() and i realized that after 1 (lets say) nanosecond the exception was happening leaving the "shutdown" there :(
[15:45:23] <ssbr> rakoon: I'm not following, sorry
[15:45:30] <rakoon> ssbr: i think i will not shutdown it like this. I will use the timeout option AFTER i have processed 1 item at least cause the 1st thread takes sometime before starting putting items while the 2nd thread waiting to process them, so i start initially with timeout=None and then i make it timeout=3
[15:45:54] *** Quits: rama (~rama@c-24-130-92-222.hsd1.ca.comcast.net) (Ping timeout: 256 seconds)
[15:46:34] <rakoon> ssbr: before i send the "shutdown" to the queue, i was checking if the 2nd thread was alive in order to get it, but, what if the moment i .put("shutdown") the 2nd thread raises exception?
[15:46:54] <ssbr> rakoon: yes, that isn't a workable strategy
[15:47:36] <ssbr> there's no guarantee that it will continue to be alive after you ask -- you can only know if a thread is dead, not if it's still alive. So send the shutdown command unconditionally.
[15:47:49] *** Quits: frost (~frost@user/frost) (Quit: Connection closed)
[15:48:06] *** Joins: Klinda (~superleag@user/klinda)
[15:48:15] <ssbr> you can also use something other than a queue for shutdown signalling, in particular a threading.Event
[15:48:25] <ssbr> (this might remove any need for checking, if you were worried about something in particular)
[15:49:07] <rakoon> ssbr: the timeout or my previous implementation?
[15:49:09] *** Quits: JayDoubleu (~jaydouble@2001:470:69fc:105::1:371a) (Quit: issued !quit command)
[15:49:10] *** Quits: fikran (~fikran@user/fikran) (Ping timeout: 260 seconds)
[15:49:20] <rakoon> oh wait didnt read all your messages
[15:50:08] <rakoon> oh i havent checked events yummy let me search for it, thanks!
[15:50:57] *** Joins: JayDoubleu (~jaydouble@2001:470:69fc:105::1:371a)
[15:51:17] *** Joins: fikran (~fikran@user/fikran)
[15:54:27] *** Joins: zeden (~zeden@user/zeden)
[15:55:14] *** Joins: luigibu (~luigibu@91.126.243.41)
[15:57:32] *** Joins: SpeakerToMeat__ (~Speaker@user/speakertomeat)
[15:57:39] *** kn1001 is now known as kn100
[16:00:59] *** Quits: Enitin (~Enitin@82.102.22.84) (Ping timeout: 264 seconds)
[16:02:37] *** Quits: JayDoubleu (~jaydouble@2001:470:69fc:105::1:371a) (Quit: issued !quit command)
[16:02:59] *** Quits: luigibu (~luigibu@91.126.243.41) (Ping timeout: 250 seconds)
[16:03:01] *** Joins: Enitin (~Enitin@82.102.22.85)
[16:03:01] *** Quits: shiriru (~shiriru@user/shiriru) (Quit: Leaving)
[16:03:27] <Wulf> Is there any good reason to not use "python3 -m venv --system-site-packages"?
[16:03:36] *** Joins: Mattiaslndstrm (~Mattiasln@c213-103-137-235.bredband.tele2.se)
[16:03:38] *** Quits: chuangzhu (~chuangzhu@user/chuangzhu) (Ping timeout: 265 seconds)
[16:03:42] *** Quits: Mattiaslndstrm (~Mattiasln@c213-103-137-235.bredband.tele2.se) (Client Quit)
[16:03:47] *** Joins: slav0nic (slav0nic@python.su)
[16:03:51] *** Joins: causa-sui (~causasui@c-68-60-125-136.hsd1.mi.comcast.net)
[16:05:02] <ssbr> Wulf: the point of using a venv is to isolate it from the environment, and that specifically bypasses that (so that, e.g., if someone else upgrades the system python's version of a package, you get it too)
[16:05:17] *** Joins: chuangzhu (~chuangzhu@user/chuangzhu)
[16:05:20] <ssbr> in the limit, it's like not using a venv at all (if you never install things into the venv), and then what's the point?
[16:05:45] <Wulf> ssbr: but I can install packages into that venv
[16:06:33] <ssbr> Wulf: you can. doing that for *most*, but not for some, is still better than doing it for none of them, from an isolation pov
[16:06:34] <Wulf> ssbr: E.g. I've got a non-networked computer running Debian. It includes lots of great python packages, but I need to install another package I developed myself, which needs a "standard" package.
[16:06:50] <ssbr> Wulf: but the same reasons for using a venv in general also apply to not using --system-site-packages
[16:07:17] *** Quits: tobybl (~tobybl@213.31.134.235) (Remote host closed the connection)
[16:08:28] *** Quits: causa-sui (~causasui@c-68-60-125-136.hsd1.mi.comcast.net) (Ping timeout: 265 seconds)
[16:09:27] <yourfate> so, I'm playing with this idea of using metadata, but how would I acess the metadata in this case: https://www.programiz.com/python-programming/online-compiler/
[16:09:31] <yourfate> oops sec
[16:09:44] <yourfate> any good python web playground?
[16:10:00] <Wulf> yourfate: aws? :)
[16:10:00] <bjs> yourfate: playground?
[16:10:09] *** Joins: JayDoubleu (~jaydouble@2001:470:69fc:105::1:371a)
[16:10:14] <bjs> yourfate: if you have a program you can just pastebin it using something like https://bpa.st/+python
[16:10:25] <yourfate> https://bpa.st/XA3A
[16:10:54] <yourfate> yes, but I was looking for something like https://play.rust-lang.org/, where you can paste the program and ppl viewing it can run it if they want
[16:11:29] <deniska> we're old school here, we run untrusted code on our own machines :)
[16:11:39] *** Joins: Midjak (~Midjak@82-65-111-221.subs.proxad.net)
[16:11:47] <yourfate> I need to somehow access the metadata of the class, not of the instance I think
[16:11:59] *** Joins: p-i-_ (~Ohmu@223.206.149.27)
[16:12:05] <bjs> yourfate: you import fields but don't use it
[16:12:10] <yourfate> the serialize function needs to itterate over the fields, and get their metadata
[16:12:12] *** Quits: vlas (~vlas@109.86.229.110) (Quit: Konversation terminated!)
[16:12:12] <bjs> yourfate: did you want to `for f in fields(self.data): print(f.metadata)`
[16:12:22] <bjs> or something like that?
[16:12:44] <yourfate> I need to itterate over the fields of `self.data`, and have their values and metadata
[16:13:54] *** Joins: PointThink (~PointThin@abzc9.neoplus.adsl.tpnet.pl)
[16:14:16] <bjs> deniska: uh I don't actually run peoples code, at least not without reading it fully first :P
[16:14:35] <bjs> asyncio/threading code sometimes really does require you to run it, but something like this doesn't really
[16:14:41] <bjs> yourfate: okay but does my line not help?
[16:14:48] *** Quits: thrillgore (~ZugZug@69-225-55-100.lightspeed.nsvltn.sbcglobal.net) (Ping timeout: 256 seconds)
[16:14:52] <yourfate> i'm playing with using `fields` rn
[16:15:05] *** Joins: Mattiaslndstrm (~Mattiasln@c213-103-137-235.bredband.tele2.se)
[16:15:48] *** Quits: p-i- (~Ohmu@mx-ll-223.206.149-27.dynamic.3bb.co.th) (Ping timeout: 268 seconds)
[16:15:59] *** Quits: TJ- (~root@about/linux/staff/tj-) (Ping timeout: 264 seconds)
[16:17:11] *** Joins: lbracher (~lucas@77.109.116.248)
[16:19:01] *** Joins: luigibu (~luigibu@91.126.243.41)
[16:19:20] *** Quits: PointThink (~PointThin@abzc9.neoplus.adsl.tpnet.pl) (Ping timeout: 256 seconds)
[16:19:48] <yourfate> it works like this: https://bpa.st/IYXA
[16:19:58] <bjs> yourfate: yeah that looks right
[16:21:34] *** Quits: magla (~gelignite@55d4e1d7.access.ecotel.net) (Quit: Stay safe!)
[16:22:55] *** Joins: mrgz (~mrgz@201-42-0-191.dsl.telesp.net.br)
[16:23:47] *** Quits: luigibu (~luigibu@91.126.243.41) (Ping timeout: 264 seconds)
[16:25:30] *** Joins: ExeciN (~ExeciN@user/nicexe)
[16:28:18] *** Joins: DnzAtWrk (~DnzAtWrk@mobile-access-567343-143.dhcp.inet.fi)
[16:28:43] *** Joins: tgamblin (~tgamblin@2607:fea8:c29d:d7c0::e120)
[16:30:07] *** Joins: Kvothe (~weechat@user/elodin)
[16:30:17] *** Quits: JayDoubleu (~jaydouble@2001:470:69fc:105::1:371a) (Quit: Reconnecting)
[16:30:32] *** Joins: JayDoubleu (~jaydouble@2001:470:69fc:105::1:371a)
[16:31:25] *** petaflot_ is now known as petaflot
[16:31:51] *** Joins: cthulchu_ (~Cthulchu@193.194.107.250)
[16:35:03] *** Quits: mcpac82 (~textual@212.25.0.228) (Quit: mcpac82)
[16:35:11] *** Quits: cthulchu (~Cthulchu@193.194.107.250) (Ping timeout: 264 seconds)
[16:35:42] *** Quits: puff (~user@S0106d4ca6d80a83c.vs.shawcable.net) (Remote host closed the connection)
[16:35:56] *** Joins: puff (~user@S0106d4ca6d80a83c.vs.shawcable.net)
[16:36:50] *** Joins: zer0bitz (~zer0bitz@2001:2003:f6e3:7400:d15f:a494:a911:62f8)
[16:36:51] *** Joins: ChkDigit (~u388mw@207-195-34-73.prna.static.sasknet.sk.ca)
[16:39:32] *** Quits: JayDoubleu (~jaydouble@2001:470:69fc:105::1:371a) (Quit: issued !quit command)
[16:40:46] *** Joins: gadius (~gadfly@107-214-145-46.lightspeed.sntcca.sbcglobal.net)
[16:41:05] *** Joins: mat001 (~mat001@c-71-202-208-251.hsd1.ca.comcast.net)
[16:41:11] *** Joins: tomeaton17 (~tomeaton1@51.195.150.49)
[16:41:52] *** Joins: Naan (~Naan@user/naan)
[16:42:03] *** Joins: Sario (uid356235@fosshost/cdo/Sario)
[16:42:40] *** Joins: rinzewind (~rinzewind@user/rinzewind)
[16:42:51] *** Quits: gadfly (~gadfly@107-214-145-46.lightspeed.sntcca.sbcglobal.net) (Ping timeout: 250 seconds)
[16:43:27] *** Joins: lionslicer (~lionslice@2804:d41:a7a6:1300:51b8:2ae7:b7c5:10ab)
[16:44:15] *** Joins: JayDoubleu (~jaydouble@2001:470:69fc:105::1:371a)
[16:45:01] *** Quits: BSaboia (~bsaboia@177.37.198.227) (Quit: This computer has gone to sleep)
[16:45:02] *** Quits: orangeboxcutter (~orange@user/orangeboxcutter) (Remote host closed the connection)
[16:45:02] *** Quits: penguino (~mrpenguin@user/mrpenguin) (Remote host closed the connection)
[16:45:18] *** Joins: naranja (~orange@user/orangeboxcutter)
[16:45:22] *** Quits: Elzington_ (~Elzington@static-68-235-44-38.cust.tzulo.com) (Quit: Leaving)
[16:45:27] *** Joins: penguino (~mrpenguin@user/mrpenguin)
[16:45:57] *** Joins: Elzington (~Elzington@static-68-235-44-38.cust.tzulo.com)
[16:46:04] *** Quits: legola (~legola@46.235.101.181) (Remote host closed the connection)
[16:46:34] *** Quits: tomeaton17 (~tomeaton1@51.195.150.49) (Ping timeout: 256 seconds)
[16:46:34] *** Quits: Ergo^ (~ergo@91.238.59.144) (Remote host closed the connection)
[16:46:58] *** Joins: BSaboia (~bsaboia@177.37.198.227)
[16:47:18] *** Joins: legola (~legola@46.235.101.181)
[16:47:43] *** Joins: bloody (~bloody@user/bloody)
[16:50:13] *** Quits: nosoul (nosoul@gateway/vpn/protonvpn/nosoul) (Ping timeout: 250 seconds)
[16:50:54] *** Joins: YuGiOhJCJ (~YuGiOhJCJ@gateway/tor-sasl/yugiohjcj)
[16:51:35] *** Quits: abip20 (~abdullah@103.66.177.186) (Quit: Konversation terminated!)
[16:51:58] *** Joins: peterhil (~peterhil@dsl-hkibng32-54fb56-2.dhcp.inet.fi)
[16:52:00] *** Joins: abip20 (~abdullah@103.66.177.186)
[16:52:12] *** Quits: legola (~legola@46.235.101.181) (Ping timeout: 256 seconds)
[16:52:23] *** Quits: Enitin (~Enitin@82.102.22.85) (Ping timeout: 250 seconds)
[16:52:32] *** Quits: xardas (~xardas@149.233.51.127) (Quit: Client closed)
[16:52:48] *** Joins: Lando-SpacePimp (~Lando-Spa@user/lando-spacepimp)
[16:52:49] *** Quits: beencubed (~beencubed@209.131.238.248) (Ping timeout: 250 seconds)
[16:53:02] *** Quits: abip20 (~abdullah@103.66.177.186) (Client Quit)
[16:53:20] *** Joins: abip20 (~abdullah@103.66.177.186)
[16:54:38] *** Joins: beencubed (~beencubed@209.131.238.248)
[16:55:15] *** Quits: Bronto22 (~mennoh@84-86-247-193.fixed.kpn.net) (Quit: Konversation terminated!)
[16:55:42] *** Joins: Ecophobia (~Ecophobia@mobile-access-2e8446-248.dhcp.inet.fi)
[16:56:28] *** Quits: beencubed (~beencubed@209.131.238.248) (Max SendQ exceeded)
[16:56:46] <grym> yourfate: repl.it, pythontutor
[16:56:55] *** Joins: beencubed (~beencubed@209.131.238.248)
[16:57:20] *** Joins: thrillgore (~ZugZug@69-225-55-100.lightspeed.nsvltn.sbcglobal.net)
[16:58:34] *** Joins: gitesh (uid423739@ilkley.irccloud.com)
[17:01:45] <yourfate> in case anyone is interested, serialize and deserialize work now: https://bpa.st/ZCYQ
[17:02:34] *** Joins: slowButPresent (~slowButPr@user/slowbutpresent)
[17:03:34] *** Joins: onichomp (~onichomp@2806:264:4404:80fd:7899:e84b:c76c:60a1)
[17:04:03] *** Quits: sharperguy (~sharpergu@88.130.218.131) (Ping timeout: 265 seconds)
[17:04:28] *** Quits: bitdex (~bitdex@gateway/tor-sasl/bitdex) (Quit: = "")
[17:04:55] <grym> yourfate: why does RegData exist at all
[17:04:59] <braxas> y'all should sponsor python: https://github.com/sponsors/python
[17:05:01] <braxas> if you like it
[17:05:21] *** Quits: onichomp (~onichomp@2806:264:4404:80fd:7899:e84b:c76c:60a1) (Read error: Connection reset by peer)
[17:05:23] <yourfate> grym: because there will be different types of RegData classes
[17:05:24] <Swayze> i sponsor a python at the zoo
[17:05:32] <yourfate> grym: each reg has data at different positions
[17:05:37] *** Joins: tobybl (~tobybl@213.31.134.235)
[17:05:48] *** Joins: sharperguy (~sharpergu@fnord.cryptophone.de)
[17:05:55] <yourfate> BdReg is just one such
[17:05:58] *** Joins: onichomp (~onichomp@2806:264:4404:80fd:7899:e84b:c76c:60a1)
[17:06:02] <grym> yourfate: ok, but an empty base class doesn't really sound compelling
[17:06:06] *** Joins: causa-sui (~causasui@c-68-60-125-136.hsd1.mi.comcast.net)
[17:06:33] <yourfate> I mean, I could maybe somehow enforce each field needs this metadata?
[17:06:36] <yourfate> is that a thing?
[17:06:47] <yourfate> in every class inherited from regdata
[17:07:14] <grym> in general, python and "enforce" rarely see eye to eye :P
[17:07:19] <yourfate> right
[17:07:29] <yourfate> but I mean, how else would I do this?
[17:07:40] <braxas> Swayze okay but if you sponsor a virtual python it basically help the whole world economy and gives more tax money to IRL python in zoo
[17:07:47] <braxas> Swayze: i.e. work smarter not harder
[17:08:59] *** Quits: seoul_man (~meh@user/seoul-man/x-5066766) (Remote host closed the connection)
[17:09:09] <grym> yourfate: metadata looks neat though
[17:09:12] <bjs> yourfate: you can add some check in __init__/__post_init__ of the base class or something
[17:09:22] *** Quits: BSaboia (~bsaboia@177.37.198.227) (Quit: This computer has gone to sleep)
[17:09:22] *** Quits: rindolf (~shlomif@2a0d:6fc2:4bb1:500:6b1e:2524:3d70:36ec) (Read error: Connection reset by peer)
[17:09:45] *** Joins: rindolf (~shlomif@2a0d:6fc2:4bb1:500:6b1e:2524:3d70:36ec)
[17:09:52] *** Joins: BSaboia (~bsaboia@177.37.198.227)
[17:09:55] <yourfate> I mean, it will fail to serialize/deserialize if the metadata is missing, so its fine
[17:10:04] *** Joins: GreenResponse (~tomek@r-45-155-148-237.gpon.bialnet.pl)
[17:10:20] *** dcaro is now known as dcaro_lunch
[17:13:08] *** Quits: Colt (~Colt@user/colt) (Quit: Leaving)
[17:14:41] *** Quits: Barones (~Barones@2804:7f3:8987:f411:a5a5:30be:b120:e93f) (Ping timeout: 265 seconds)
[17:15:03] *** Joins: rpkilby (~rpkilby@c-24-20-208-106.hsd1.or.comcast.net)
[17:15:09] *** Joins: merijn (~merijn@83-160-49-249.ip.xs4all.nl)
[17:15:23] *** Joins: Ergo^ (~ergo@91.238.59.144)
[17:16:23] *** Joins: legola (~legola@46.235.101.181)
[17:17:42] *** Quits: iflema (~ian@user/iflema) (Ping timeout: 256 seconds)
[17:19:01] *** Joins: drogas (~drogas@jump2.jet.uk)
[17:19:24] *** Quits: rpkilby (~rpkilby@c-24-20-208-106.hsd1.or.comcast.net) (Ping timeout: 256 seconds)
[17:20:04] *** Joins: iflema (~ian@user/iflema)
[17:20:08] *** Joins: xardas (~xardas@149.233.51.127)
[17:20:11] *** Quits: mallkrampus (~mallkramp@185.169.233.48) (Ping timeout: 264 seconds)
[17:20:35] *** Joins: luigibu (~luigibu@91.126.243.41)
[17:21:48] *** Joins: Nact (~l@2a02:2788:11c4:6e6:8145:8e91:d047:8ed0)
[17:23:08] *** Quits: cosimone (~user@2001:b07:ae5:db26:a7aa:8027:6b4e:2fb3) (Remote host closed the connection)
[17:23:49] *** Joins: cosimone (~user@2001:b07:ae5:db26:a7aa:8027:6b4e:2fb3)
[17:23:52] *** Joins: nyah (~nyah@94.6.71.219)
[17:24:36] *** Joins: Sheilong (uid293653@ilkley.irccloud.com)
[17:24:44] *** Quits: ArtfulDodger_ (~ArtfulDod@2a02-8440-6311-0f28-78ba-13a3-5b05-4fb6.rev.sfr.net) (Read error: Connection reset by peer)
[17:25:13] *** Quits: zitter (~danilodim@93-57-35-194.ip162.fastwebnet.it) (Quit: Leaving)
[17:25:18] *** Quits: luigibu (~luigibu@91.126.243.41) (Ping timeout: 260 seconds)
[17:25:47] *** Quits: dulanic (~dulanic@47.187.144.163) (Quit: The Lounge - https://thelounge.chat)
[17:26:49] *** Joins: dulanic (~dulanic@47.187.144.163)
[17:27:40] *** Joins: nomic (~nomic@185.217.117.59)
[17:28:04] *** Joins: Enitin (~Enitin@82.102.22.86)
[17:28:38] *** Quits: dulanic (~dulanic@47.187.144.163) (Client Quit)
[17:30:09] *** Quits: Andrynet (~Andrey@186.46.204.193) (Ping timeout: 265 seconds)
[17:30:18] *** Joins: dulanic (~dulanic@47.187.144.163)
[17:31:56] *** Joins: Andrynet (~Andrey@186.46.204.193)
[17:32:07] *** Joins: RangerBobVA (~bmaddox@user/rangerbobva)
[17:32:15] *** Quits: Enitin (~Enitin@82.102.22.86) (Ping timeout: 250 seconds)
[17:32:22] *** Quits: EvilDMP (~textual@django/moderator/EvilDMP) (Quit: My MacBook has gone to sleep. ZZZzzz…)
[17:33:43] <grym> yourfate: "whatever you gave me i don't know what to do with" is a pretty common game, yeah
[17:34:49] *** Joins: luigibu (~luigibu@91.126.243.41)
[17:35:05] *** Quits: yeirr (~yeirr@user/yeirr) (Quit: yeirr)
[17:35:21] *** Quits: Moopiz (~Moopiz@37.97.4.244) (Quit: Client closed)
[17:36:03] <df_data> How would I be able to read a malformed json like this? https://dpaste.org/9QmO
[17:36:15] *** Quits: Ecophobia (~Ecophobia@mobile-access-2e8446-248.dhcp.inet.fi) (Quit: WeeChat 2.8)
[17:36:17] <df_data> I cannot seem to illiterate it
[17:36:24] *** Quits: lbracher (~lucas@77.109.116.248) (Ping timeout: 256 seconds)
[17:36:56] *** Joins: fdan (~fdan@103.215.168.1)
[17:37:18] <df_data> The json is much larger trying to show a minimum example
[17:37:32] *** Quits: kurfen (~kurfen@45.152.181.20) (Ping timeout: 244 seconds)
[17:38:15] *** Joins: dg_dg (~dg_dg@gateway/vpn/pia/dgdg/x-00698222)
[17:38:32] *** Joins: darksun (~darksun@user/darksun)
[17:39:14] *** Quits: luigibu (~luigibu@91.126.243.41) (Ping timeout: 256 seconds)
[17:39:18] *** Joins: kurfen (~kurfen@45.152.181.20)
[17:39:50] *** Joins: ArtfulDodger_ (~ArtfulDod@147.210.204.164)
[17:40:23] <DPA> Write your own, custom but permissive parser?
[17:40:50] *** Joins: y1n (~y1n@91.141.34.188.wireless.dyn.drei.com)
[17:42:08] *** Joins: pretty_dumm_guy (trottel@gateway/vpn/protonvpn/prettydummguy/x-88029655)
[17:43:01] *** Joins: zuQe8 (~zuQe8@cpc105060-sgyl40-2-0-cust136.18-2.cable.virginm.net)
[17:44:16] <DPA> There is an example for lark for python. Should be easy enough to tweak it: https://github.com/lark-parser/lark/blob/master/examples/json_parser.py
[17:44:25] *** Joins: [itchyjunk] (~itchyjunk@user/itchyjunk/x-7353470)
[17:45:35] *** Joins: ednhmn (~ednhmn@200.173.179.51)
[17:46:52] *** Quits: ednhmn (~ednhmn@200.173.179.51) (Read error: Connection reset by peer)
[17:47:21] *** Joins: ednhmn (~ednhmn@200.173.179.51)
[17:48:30] <df_data> Hmm
[17:48:53] *** Quits: Pickchea (~private@user/pickchea) (Quit: Leaving)
[17:49:29] *** Quits: merijn (~merijn@83-160-49-249.ip.xs4all.nl) (Ping timeout: 265 seconds)
[17:50:01] *** Joins: upgreydd (~upgreydd@public-gprs420742.centertel.pl)
[17:50:16] *** Joins: EvilDMP (~textual@django/moderator/EvilDMP)
[17:50:23] *** Quits: Neoon (~Neoon@2607:5300:60:23a5::1111) (Read error: Connection reset by peer)
[17:51:01] *** Quits: EvilDMP (~textual@django/moderator/EvilDMP) (Client Quit)
[17:51:23] <upgreydd> Hey there! I have a question. I need prepare documetation for python usage in my company and taking list of used packages is quite simple but problem starts when I need to find out linux/base library dependencies for specific packages - maybe you know some unified way how to findout all relational libraries for python packages/modules?
[17:52:02] <supakeen> It's sadly a common problem that's alleviated a lot by the existence of wheels.
[17:52:06] <supakeen> There isn't one single way.
[17:53:09] *** Joins: sstory (~sstory@075-130-120-018.biz.spectrum.com)
[17:53:19] *** Quits: grooverman_ (~grooverma@177.102.117.95) (Read error: Connection reset by peer)
[17:53:53] *** Quits: ubert (~Thunderbi@2a02:8109:9880:303c:ca5b:76ff:fe29:f233) (Remote host closed the connection)
[17:54:05] *** Joins: ubert (~Thunderbi@2a02:8109:9880:303c:e6b3:18ff:fe83:8f33)
[17:55:01] *** Quits: ednhmn (~ednhmn@200.173.179.51) (Remote host closed the connection)
[17:55:57] *** Quits: asix (~Anders@user/asix) (Quit: leaving)
[17:56:04] <sstory> Trying to have an arg --input-dir, but getting an error: https://bpa.st/PLRA
[17:56:18] <sstory> AttributeError: 'Namespace' object has no attribute 'input'
[17:56:35] <sco1> The - get normalized to _
[17:56:48] <sco1> When you're accessing the attribute
[17:57:25] <sstory> sco1: Thanks! Why is that necessary?
[17:57:31] <sco1> Because - is subtraction
[17:57:40] <sstory> Oh! Thanks! I see
[17:58:24] *** Joins: grooverman (~grooverma@177.95.12.14)
[17:58:41] *** Quits: fikran (~fikran@user/fikran) (Ping timeout: 250 seconds)
[17:58:58] *** Quits: Mattiaslndstrm (~Mattiasln@c213-103-137-235.bredband.tele2.se) (Quit: My MacBook has gone to sleep. ZZZzzz…)
[17:59:14] *** Joins: mallkrampus (~mallkramp@178.238.11.48)
[17:59:23] <upgreydd> so is there an option to achieve such kind of checking except tracing all libraries usage while running python code? I 300mb python project with multiple functions so I'd love to skip checking all usages by hand :/
[17:59:50] <nedbat> upgreydd: can you give us an example of the libraries you mean?
[18:00:16] <dman777_alter> I need to implment logic that allows mapping objects that allow their elements to be access both as keys and attributes. Like user = { firstname: 'foo' } would be user.firstname. Is there a good library for that?
[18:00:31] <upgreydd> nedbat, for example some cryptography packages will require openssl libraries - am I right?
[18:00:39] *** Joins: fikran (~fikran@user/fikran)
[18:00:52] <deniska> dman777_alter: not exactly what you are looking for, but take a look at pydantic
[18:00:56] *** Joins: Payam (~Payam@c83-250-236-236.bredband.tele2.se)
[18:00:56] *** Quits: zuQe8 (~zuQe8@cpc105060-sgyl40-2-0-cust136.18-2.cable.virginm.net) (Read error: Connection reset by peer)
[18:00:58] *** Quits: p-i-_ (~Ohmu@223.206.149.27) (Read error: Connection reset by peer)
[18:01:16] <nedbat> upgreydd: yes, it does. I don't know how to determine what native libraries are used by Python libraries
[18:01:27] *** Joins: w4ld0 (w4ld0@gateway/vpn/protonvpn/w4ld0)
[18:01:34] *** Joins: p-i- (~Ohmu@223.206.149.27)
[18:01:39] <upgreydd> nedbat, and that's what I'm looking for :)
[18:01:45] *** Quits: erhandsome (~erhandsom@user/erhandsome) (Quit: ZNC 1.7.2+deb3 - https://znc.in)
[18:02:43] <dman777_alter> deniska: I think that might be overkill.... looking for something that allows me javascript like behavior. like user = { 'firstnanme': 'bob' }.... I could access like user.firstname
[18:03:11] *** Joins: erhandsome (~erhandsom@user/erhandsome)
[18:04:19] <deniska> dman777_alter: well, you only need to create a class with 4 functions to get a basic version of that, not sure if that warrants a library…
[18:04:27] <deniska> https://stackoverflow.com/questions/2640806/javascript-like-object-in-python-standard-library haha, what a hack :D
[18:05:30] <dman777_alter> deniska: oh...that is cool
[18:05:41] *** Quits: chuangzhu (~chuangzhu@user/chuangzhu) (Remote host closed the connection)
[18:05:47] *** Quits: Payam (~Payam@c83-250-236-236.bredband.tele2.se) (Ping timeout: 264 seconds)
[18:05:53] <deniska> dman777_alter: it makes a circular reference though
[18:05:54] *** Joins: leitz (~LeamHall@cpe-173-172-58-72.tx.res.rr.com)
[18:05:58] <jinsun> if you can live with only arribute access and not with getitem then https://docs.python.org/3/library/types.html#types.SimpleNamespace will do
[18:06:06] *** Joins: chuangzhu (~chuangzhu@user/chuangzhu)
[18:06:12] <dman777_alter> deniska: oh... I just found SimpleNamespace which is native in python
[18:06:17] <jinsun> s/arribute/attribute
[18:07:31] <dman777_alter> jinsun: just saw your post...thank you
[18:08:04] *** Quits: herjazz (~herjazz@p6758124-ipngn30801marunouchi.tokyo.ocn.ne.jp) (Quit: leaving)
[18:08:57] *** Joins: benjwadams (~benjwadam@96.238.4.28)
[18:09:48] *** Joins: renlo (~Renlo_Ren@pool-108-14-112-182.nycmny.east.verizon.net)
[18:09:54] *** Joins: EvilDMP (~textual@django/moderator/EvilDMP)
[18:10:13] *** Joins: spetrosi (~spetrosi@2a02:8308:b:ec00:637b:7e28:3899:e5c1)
[18:10:38] *** Joins: rapido_edwardo (~eddiecosm@user/rapido-edwardo/x-5639012)
[18:10:39] *** Quits: fdan (~fdan@103.215.168.1) (Quit: Client closed)
[18:11:01] <benjwadams> How can I mock a HTTP status code?  I'm using requests-mock and I can't seem to find how to do this inside a mock context object or modify the mocked response other than having it raise an Exception or change the response text
[18:11:12] *** dcaro_lunch is now known as dcaro
[18:11:32] *** Quits: rapido_edwardo (~eddiecosm@user/rapido-edwardo/x-5639012) (Client Quit)
[18:11:44] *** Quits: irrgit (~irrgit@192.241.175.183) (Quit: Leaving)
[18:11:59] *** Joins: irrgit (~irrgit@192.241.175.183)
[18:12:45] *** Joins: zuQe8 (~zuQe8@cpc105060-sgyl40-2-0-cust136.18-2.cable.virginm.net)
[18:14:40] <deniska> benjwadams: https://requests-mock.readthedocs.io/en/latest/response.html#registering-responses status_code?
[18:14:40] *** Joins: han-solo (~hanish@user/han-solo)
[18:15:05] <deniska> context also has status_code
[18:15:47] <benjwadams> no idea how i missed that, thanks
[18:16:01] <benjwadams> I *did* read docs but must have gotten confused
[18:17:18] *** Quits: xc|snowman (~xc|snowma@dslb-002-202-178-127.002.202.pools.vodafone-ip.de) (Quit: Leaving)
[18:17:53] *** Quits: ExeciN (~ExeciN@user/nicexe) (Remote host closed the connection)
[18:18:08] *** Quits: irrgit (~irrgit@192.241.175.183) (Quit: Leaving)
[18:18:14] *** Joins: ExeciN (~ExeciN@user/nicexe)
[18:18:38] <df_data> https://dpaste.org/9QmO would you say this is a malformed json? I’m unable to load it
[18:19:05] *** Quits: internut (~internut@2601:280:4e00:7b70:49d1:8c3c:68e5:74c0) (Remote host closed the connection)
[18:19:11] *** Quits: benjwadams (~benjwadam@96.238.4.28) (Quit: Client closed)
[18:19:41] *** Quits: zeden (~zeden@user/zeden) (Quit: WeeChat 3.3)
[18:19:43] *** Joins: Mattiaslndstrm (~Mattiasln@c213-103-137-235.bredband.tele2.se)
[18:19:50] *** Joins: magla (~gelignite@55d4e1d7.access.ecotel.net)
[18:19:58] <deniska> df_data: I see a comma missing before `2022`
[18:20:27] *** Quits: NightMonkey (~NightMonk@user/nightmonkey) (Quit: ZNC - http://znc.in)
[18:21:07] *** Joins: zeden (~zeden@user/zeden)
[18:21:33] <df_data> Ahh real data had a comma
[18:22:35] <grym> df_data: retyping json by hand is a baaad idea ;)
[18:23:29] <df_data> I get the error json.decoder.JSONDecodeError: Extra data: line 2 column 1 (char 66997) I tried to create a small sample of the json, even something to test with the error even comes back with this sample
[18:24:05] <deniska> df_data: the best way to create a small sample of json is by using json.dumps()
[18:24:32] <df_data> How so?
[18:24:43] <df_data> From a larger one that I can’t read :/
[18:25:06] <deniska> load larger data as a python datastructure, remove extra items or whatever
[18:25:16] *** Joins: Inline (~Inline@2a02:908:1252:7a80:c287:4a0:25c3:17d)
[18:25:47] <df_data> That’s what I’ve done. Removed a large amount of the items and tried to get the exact structure.
[18:25:50] *** Quits: puff (~user@S0106d4ca6d80a83c.vs.shawcable.net) (Remote host closed the connection)
[18:25:58] <deniska> df_data: or you mean you get the error with the original data?
[18:26:03] *** Joins: puff (~user@S0106d4ca6d80a83c.vs.shawcable.net)
[18:26:35] <df_data> I get the error with the sample and the original data
[18:26:51] <jinsun> from "Extra data: line 2 column 1" it kinda looks like you have one json per line, instead of the entire data being one single json
[18:27:09] <deniska> ^ this person jsons
[18:27:27] <df_data> Hang on I’ll get the exact error
[18:27:49] <df_data> With the original data
[18:27:58] *** Joins: NightMonkey (~NightMonk@user/nightmonkey)
[18:28:39] *** Quits: barbarossa93 (~barbaross@c-73-39-107-44.hsd1.md.comcast.net) (Quit: ZNC 1.7.2+deb3 - https://znc.in)
[18:29:16] *** Quits: NightMonkey (~NightMonk@user/nightmonkey) (Remote host closed the connection)
[18:29:44] <df_data> Yep that’s the error with the json dump as well
[18:30:21] <df_data> https://www.irccloud.com/pastebin/LZEJQN7l
[18:31:17] <jinsun> show code?
[18:31:56] *** Quits: Gurkenglas (~Gurkengla@dslb-002-203-144-204.002.203.pools.vodafone-ip.de) (Ping timeout: 256 seconds)
[18:32:18] *** Quits: leduyquang753 (~leduyquan@user/leduyquang753) (Quit: Gotta go, see you guys later.)
[18:32:22] <df_data> @jinsun: https://dpaste.org/YwCr
[18:32:47] <deniska> df_data: where did you get 1272524.json from?
[18:34:07] <df_data> Same directory of the script
[18:34:12] *** Quits: johnjay (~pi@192.142.100.50) (Ping timeout: 256 seconds)
[18:34:25] <deniska> I mean, how the file called 1272524.json came into existence?
[18:34:41] <deniska> did you download it from somewhere, or some tool produced it, or…?
[18:34:42] <df_data> It was a dump of a jsonrpc call from a program that sends this data
[18:35:07] *** Joins: guenhael (~Thunderbi@pop.92-184-108-199.mobile.abo.orange.fr)
[18:35:10] <df_data> So when this program saves it sends this json
[18:35:29] *** Joins: johnjay (~pi@192.142.100.50)
[18:35:31] *** Quits: zuQe8 (~zuQe8@cpc105060-sgyl40-2-0-cust136.18-2.cable.virginm.net) (Read error: Connection reset by peer)
[18:35:34] <df_data> All the data I’m trying to iterate is inside of that.
[18:35:44] <dob1> can you (simply) install a specific python version into a venv?
[18:35:48] *** Joins: zuQe8 (~zuQe8@cpc105060-sgyl40-2-0-cust136.18-2.cable.virginm.net)
[18:35:57] *** Quits: Balzy (~Balzy@host-95-245-51-98.retail.telecomitalia.it) (Ping timeout: 250 seconds)
[18:36:12] <sco1> Usually it's the other way around, you use a specific python version to create the environment
[18:36:14] <han-solo> dob1: usually one would use a python to create the venv
[18:36:20] <han-solo> pyenv ?
[18:36:45] *** Joins: jess (~jess@libera/staff/jess)
[18:36:46] <dob1> I take a look
[18:36:51] *** Joins: NightMonkey (~NightMonk@user/nightmonkey)
[18:37:02] *** Quits: guenhael (~Thunderbi@pop.92-184-108-199.mobile.abo.orange.fr) (Read error: Connection reset by peer)
[18:37:14] <SnoopJ> dob1, venvs have the version of the Python that creates them
[18:37:53] *** Quits: CatCow (~wtf_over@c-73-96-109-206.hsd1.or.comcast.net) (Quit: Textual IRC Client: www.textualapp.com)
[18:38:52] *** Joins: ArtfulDodger__ (~ArtfulDod@2a04:cec0:1091:46f4:78ba:13a3:5b05:4fb6)
[18:38:54] *** Joins: Enitin (~Enitin@82.102.22.84)
[18:39:21] *** Joins: blindguard (~blindguar@2a02:908:1864:c200::12)
[18:40:21] <jinsun> with conda you can specify python versions when creating environments, but not with venvs, you have to manage python versions with some other tool like pyenv
[18:40:28] <df_data> @deniska:  hope that makes sense
[18:40:30] *** Joins: adeliktas (~adeliktas@200116b82203d9004c14741036ac2e75.dip.versatel-1u1.de)
[18:40:55] <SnoopJ> yea, there are tools that will manage Python versions for you. pyenv is nice
[18:41:09] *** Quits: ArtfulDodger_ (~ArtfulDod@147.210.204.164) (Ping timeout: 250 seconds)
[18:41:12] *** Quits: ssbr (~ssbr@python/site-packages/ssbr) (Quit: Leaving)
[18:41:21] <DPA> Another thing I think is wrong with the json example, there is no \d escape sequence: "\\\\ddf\dd"
[18:41:29] <df_data> If the json isn’t malformed I don’t understand why it doesn’t work
[18:42:13] <jinsun> df_data: did you dump to the same file multiple times by appending to it? or did the original program send mutiple jsons instead of a single one
[18:42:34] <df_data> The \\\\ is a path @DPA I should have change it to something more friendly.
[18:42:39] *** Joins: vakera_pingveno (~dan@107-209-165-75.lightspeed.hstntx.sbcglobal.net)
[18:42:51] *** Joins: Balzy (~Balzy@host-87-5-136-46.retail.telecomitalia.it)
[18:42:52] *** Joins: kdc (~kdc@196.211.197.159)
[18:43:03] <DPA> \\ is an escape for \. But \d isn't valid in a json string.
[18:43:04] <df_data> @jinsun: it should have sent the file as it was wouldn’t have appended
[18:43:16] *** Quits: defjam (~eb0t@90.210.93.250) (Ping timeout: 256 seconds)
[18:43:37] *** Quits: Enitin (~Enitin@82.102.22.84) (Ping timeout: 265 seconds)
[18:43:40] *** Quits: upgreydd (~upgreydd@public-gprs420742.centertel.pl) (Quit: Leaving)
[18:44:09] *** Joins: Enitin (~Enitin@82.102.22.86)
[18:45:05] *** Quits: xardas (~xardas@149.233.51.127) (Quit: Client closed)
[18:45:08] *** Joins: defjam (~eb0t@90.210.95.134)
[18:45:40] *** Joins: LiftLeft (~LiftLeft@216-26-118-34.dynamic.nelson.airstreamcomm.net)
[18:46:26] <df_data> @jinsun:  I’m capturing the data with a flask response like this: https://dpaste.org/pCbd
[18:46:35] *** Joins: notepad7 (~notepad@129.159.46.243)
[18:46:55] *** Quits: cmbengue (~Thunderbi@207.191.249.160) (Quit: Thanks, see you later.)
[18:46:57] <df_data> So each save should be a new json not appended.
[18:47:07] *** Joins: jeho (~jehoshaph@user/jehoshaphat)
[18:47:13] *** Joins: p-i-_ (~Ohmu@mx-ll-223.206.149-27.dynamic.3bb.co.th)
[18:47:15] *** Joins: xardas (~xardas@149.233.51.127)
[18:47:23] *** Joins: akk (~akk@75.161.146.115)
[18:47:58] <jinsun> df_data: in that code you are writing to the file twice
[18:48:08] *** Quits: notepad7 (~notepad@129.159.46.243) (Client Quit)
[18:48:38] <grym> df_data: please try what i suggested last night
[18:48:41] <grym> it'll actually work
[18:48:49] <grym> this is not a great way to write json to a file
[18:48:56] *** Quits: Enitin (~Enitin@82.102.22.86) (Ping timeout: 265 seconds)
[18:49:13] <df_data> What did you suggest @grym ?
[18:49:23] *** Quits: defjam (~eb0t@90.210.95.134) (Read error: Connection reset by peer)
[18:49:44] *** Joins: notepad7 (~notepad@129.159.46.243)
[18:50:03] <grym> pathlib.Path(f'results{datetime.datetime.utcnow().isoformat()}.json').write_text(json.dumps(request.json))
[18:50:08] <df_data> @jinsun: how it that writing it twice? With k and then f.write?
[18:50:22] <grym> you don't even need the open() my way
[18:50:44] *** Joins: Enitin (~Enitin@82.102.22.86)
[18:51:12] *** Quits: p-i- (~Ohmu@223.206.149.27) (Ping timeout: 268 seconds)
[18:51:22] <df_data> Ahh yes I’ve kept that, I need to extend the flask app later to use the remote IP in a range to add the location of saves, so a little later on I may adapt it
[18:51:41] <DPA> I think you may be able to clean up the already written ones using: sed 's/}{.*/}/'
[18:52:15] <grym> df_data: https://bpa.st/MHQA  this should do exactly what you're doing now.  isoformat is slightly nicer to read than a string of numbers, but you don't _need_ to use that
[18:53:19] <jinsun> df_data: yes k is one json, and then the last line writes another json to the same file, so you have a file with multiple different jsons, and json.load expects a single json
[18:53:38] *** Quits: Inline (~Inline@2a02:908:1252:7a80:c287:4a0:25c3:17d) (Remote host closed the connection)
[18:53:56] *** Joins: Inline (~Inline@2a02:908:1252:7a80:e2f7:1684:ac3:796d)
[18:54:02] *** Quits: thrillgore (~ZugZug@69-225-55-100.lightspeed.nsvltn.sbcglobal.net) (Ping timeout: 256 seconds)
[18:54:19] *** Joins: barbarossa93 (~barbaross@c-73-39-107-44.hsd1.md.comcast.net)
[18:54:22] <grym> multiple valid json strings per file are supportable, but not by json itself; you need something like jsonlines or ndjson for that (other) format
[18:54:34] *** Joins: CodeMouse92 (~CodeMouse@user/codemouse92)
[18:54:42] <df_data> @grym thanks, I have that ipman for the remote ip added in the name now but I see what your saying. What’s the sed suggestion you mentioned above?
[18:54:45] <han-solo> they are saying 2 lines of same json...not sure why
[18:54:54] <grym> df_data: i didn't mention sed this time!  a rarity for me
[18:55:08] <han-solo> s/saying/saving/
[18:55:19] <df_data> Ahh sorry @DPA did
[18:55:26] *** Joins: defjam (~eb0t@90.213.43.181)
[18:55:35] <grym> df_data: usually i will suggest sed though, it's great
[18:55:56] *** Joins: cmbengue (~Thunderbi@207.191.249.160)
[18:56:59] *** Joins: luigibu (~luigibu@80.30.201.209)
[18:57:31] <df_data> @jinsun: I’ve removed the k one now
[18:58:05] <df_data> @grym: never used it
[18:58:07] *** Quits: Batzy (~Batzy@user/batzy) (Ping timeout: 265 seconds)
[18:58:32] <grym> df_data: it's very old school.  and very, very good at its jobs
[18:58:35] *** Joins: val (~val@limnoria/val)
[18:59:03] <df_data> So could help in this case?
[18:59:34] <grym> for one-off correcting what you've already done? yes.  as a regular tool to use in python? probably not, but you should know how to do it
[18:59:48] <val> Hi, what is the current recommended way to upload signed packages to PyPI?  I used to do it with setuptools (`python3 setup.py sdist upload -s`), but it does not work anymore (I'm getting this error: `Upload failed (400): Invalid value for blake2_256_digest. Error: Use a valid, hex-encoded, BLAKE2 message digest.`)
[19:00:06] *** Joins: tg (~tg@rockylinux/infra/tg)
[19:01:53] *** Joins: sudomann (~sudomann@c-98-219-165-55.hsd1.md.comcast.net)
[19:01:54] *** Quits: Lando-SpacePimp (~Lando-Spa@user/lando-spacepimp) (Ping timeout: 260 seconds)
[19:02:34] *** Quits: Mattiaslndstrm (~Mattiasln@c213-103-137-235.bredband.tele2.se) (Quit: My MacBook has gone to sleep. ZZZzzz…)
[19:03:58] <df_data> @jinsun: you were right it was doing it twice….
[19:04:36] <df_data> So the \d must have been what was upsetting the sample :/
[19:04:59] *** Quits: luigibu (~luigibu@80.30.201.209) (Ping timeout: 250 seconds)
[19:05:00] <df_data> @grym: I’ll have a look
[19:05:16] *** Joins: Batzy (~Batzy@user/batzy)
[19:05:30] *** Quits: NightMonkey (~NightMonk@user/nightmonkey) (Quit: ZNC - http://znc.in)
[19:05:32] *** Joins: donald1 (~donald@2a01:e0a:95e:7ca0:cd26:fa1c:7ebb:ce95)
[19:05:34] *** Joins: rapido_edwardo (~eddiecosm@user/rapido-edwardo/x-5639012)
[19:05:37] <grym> df_data: well, it was doing it twice because you were calling f.write() twice ;)
[19:06:30] *** Quits: sudomann (~sudomann@c-98-219-165-55.hsd1.md.comcast.net) (Ping timeout: 256 seconds)
[19:07:11] <df_data> *slaps forehead*
[19:09:41] *** Quits: Inline (~Inline@2a02:908:1252:7a80:e2f7:1684:ac3:796d) (Quit: Leaving)
[19:09:42] *** Joins: Pickchea (~private@user/pickchea)
[19:10:15] <df_data> Thank you all. I’ll see what I can find about the SED stuff for now to work with what I have
[19:10:21] <jinsun> val: https://packaging.python.org/tutorials/packaging-projects/#uploading-the-distribution-archives
[19:11:02] *** Quits: renlo (~Renlo_Ren@pool-108-14-112-182.nycmny.east.verizon.net) (Ping timeout: 256 seconds)
[19:12:05] <val> jinsun: this doesn't cover signed packages; but I just found out twine got an option to sign them since I last checked it! thanks
[19:12:31] *** Quits: rapido_edwardo (~eddiecosm@user/rapido-edwardo/x-5639012) (Quit: WeeChat 3.3)
[19:12:47] *** Quits: Andrynet (~Andrey@186.46.204.193) (Ping timeout: 250 seconds)
[19:13:12] *** Joins: eddiecosma (~eddiecosm@user/rapido-edwardo/x-5639012)
[19:13:41] *** Parts: eddiecosma (~eddiecosm@user/rapido-edwardo/x-5639012) ()
[19:14:02] *** Joins: rapido_edwardo (~eddiecosm@user/rapido-edwardo/x-5639012)
[19:14:22] <df_data> @jinsun: how’d you recommend working with an appended json?
[19:14:28] <df_data> How would*
[19:14:34] *** Joins: Andrynet (~Andrey@186.46.204.193)
[19:14:43] *** Joins: Julian (~tos9@python/site-packages/Julian)
[19:14:57] *** Quits: zepolen (~zepolen@ppp-94-66-223-80.home.otenet.gr) (Ping timeout: 250 seconds)
[19:15:33] *** Joins: renlo (~Renlo_Ren@pool-108-14-112-182.nycmny.east.verizon.net)
[19:15:59] *** Quits: jay-m126_ (~jay-m@41.205.30.141) (Ping timeout: 264 seconds)
[19:16:16] *** Joins: Barones (~Barones@2804:48dc:8500:0:6904:c7e7:9177:1a9c)
[19:16:50] *** Quits: jay-m126 (~jay-m@41.205.30.141) (Ping timeout: 260 seconds)
[19:17:08] <jinsun> df_data: well in your particular case it ended up being one json per line, so you could loop over the lines probably, something like `for line in file: json.loads(file)`
[19:17:31] <grym> ^ which is roughly what jsonlines does/is
[19:17:38] <jinsun> oops, json.loads(line)
[19:18:21] *** Joins: kostkon_ (~androirc@2.142.66.94.static.otenet.gr)
[19:18:26] <df_data> https://www.irccloud.com/pastebin/f6TAXiu7
[19:19:04] *** Joins: rickybob (rickybob@gateway/vpn/protonvpn/rickybob)
[19:19:15] <df_data> I did that but could get the values or keys
[19:19:17] *** Quits: y1n (~y1n@91.141.34.188.wireless.dyn.drei.com) (Ping timeout: 250 seconds)
[19:19:27] <df_data> In the above it was a list tho
[19:20:34] <lericson> my user gives my /a/b/c/**/*.py -- how do i glob this?
[19:20:46] *** Joins: arinov (~arinov@5.24.160.250)
[19:20:56] <lericson> pathlib.Path.glob is an instance mtehod
[19:21:11] <lericson> pathlib.Path.cwd().glob(users_input)?
[19:21:54] <lericson> i guess i'll just force them to write absolute paths and then hack it to glob in /
[19:22:30] *** Joins: ednhmn (~ednhmn@200.173.179.51)
[19:22:39] *** Parts: rapido_edwardo (~eddiecosm@user/rapido-edwardo/x-5639012) (WeeChat 3.3)
[19:22:43] <lericson> hrm i actually want them to be able to write ~/foo/*.py
[19:24:00] *** Joins: parv (~quass@user/parv)
[19:24:01] <Julian> lericson: I don't remember whether the fnmatch module now supports recursive globs
[19:24:04] <Julian> it didn't used to
[19:24:06] <Julian> if it does, then that
[19:24:13] *** Quits: delvian (~delvian@41.13.208.244) (Ping timeout: 265 seconds)
[19:24:14] <Julian> if it doesn't, there was a glob2 module that did, so that.
[19:25:11] *** Quits: DnzAtWrk (~DnzAtWrk@mobile-access-567343-143.dhcp.inet.fi) (Read error: Connection reset by peer)
[19:25:15] <lericson> glob does Julian
[19:25:29] <lericson> thanks
[19:25:31] *** Quits: mozgalom (~mozgalom@194.144.47.113) (Quit: SO LONG SUCKERS!)
[19:27:12] *** Joins: waynew (~wayne@user/waynew)
[19:27:55] *** Quits: jpds (~jpds@gateway/tor-sasl/jpds) (Remote host closed the connection)
[19:28:05] *** Quits: donald1 (~donald@2a01:e0a:95e:7ca0:cd26:fa1c:7ebb:ce95) (Ping timeout: 265 seconds)
[19:28:16] *** Joins: jpds (~jpds@gateway/tor-sasl/jpds)
[19:28:50] *** Joins: Lando-SpacePimp (~Lando-Spa@user/lando-spacepimp)
[19:28:57] *** Quits: fofoni (~fofoni@user/fofoni) (Remote host closed the connection)
[19:30:06] *** Quits: cecep[m] (~cecep@2001:470:69fc:105::3994) (Quit: You have been kicked for being idle)
[19:30:11] *** Joins: nosoul (nosoul@gateway/vpn/protonvpn/nosoul)
[19:30:33] *** Joins: DnzAtWrk (~DnzAtWrk@mobile-access-567343-143.dhcp.inet.fi)
[19:31:41] <Julian> np
[19:32:19] *** Joins: y1n (~y1n@77.119.165.37.wireless.dyn.drei.com)
[19:33:11] *** Quits: nomic (~nomic@185.217.117.59) (Quit: Leaving)
[19:33:35] *** Quits: mags (~mags@097-090-237-145.res.spectrum.com) (Ping timeout: 250 seconds)
[19:34:31] *** Joins: TJ- (~root@about/linux/staff/tj-)
[19:35:21] *** Joins: mags (~mags@097-090-237-145.res.spectrum.com)
[19:36:46] *** Parts: val (~val@limnoria/val) (WeeChat 2.8)
[19:37:19] *** Quits: cheater (~Username@user/cheater) (Quit: BitchX: a new fragrance for men, by Calvin Klein)
[19:37:34] *** Joins: seoul_man (~meh@user/seoul-man/x-5066766)
[19:37:41] *** Quits: ednhmn (~ednhmn@200.173.179.51) (Remote host closed the connection)
[19:37:54] *** Joins: thrillgore (~ZugZug@69-225-55-100.lightspeed.nsvltn.sbcglobal.net)
[19:38:12] *** Quits: ExeciN (~ExeciN@user/nicexe) (Remote host closed the connection)
[19:38:43] *** Quits: ckdCreations (~ckdCreati@147.55.130.34) (Read error: Connection reset by peer)
[19:39:00] *** Joins: ckdCreations (~ckdCreati@c-24-17-50-149.hsd1.wa.comcast.net)
[19:40:53] *** Quits: parv (~quass@user/parv) (Quit: parv)
[19:41:08] *** Quits: Julian (~tos9@python/site-packages/Julian) (Ping timeout: 265 seconds)
[19:41:08] *** Quits: Andrynet (~Andrey@186.46.204.193) (Ping timeout: 265 seconds)
[19:41:09] *** Quits: defjam (~eb0t@90.213.43.181) (Ping timeout: 268 seconds)
[19:41:19] *** Quits: soman (~soman@83.139.147.234) (Quit: Client closed)
[19:41:29] *** Quits: vd (~vd@bras-base-mtrlpq2848w-grc-41-70-53-240-121.dsl.bell.ca) (Quit: Client closed)
[19:41:54] *** Joins: vd (~vd@bras-base-mtrlpq2848w-grc-41-70-53-240-121.dsl.bell.ca)
[19:42:23] *** Quits: renlo (~Renlo_Ren@pool-108-14-112-182.nycmny.east.verizon.net) (Ping timeout: 264 seconds)
[19:42:40] *** Joins: Andrynet (~Andrey@186.46.204.193)
[19:42:45] *** Joins: defjam (~eb0t@90.210.91.65)
[19:42:47] *** Joins: renlo (~Renlo_Ren@pool-108-14-112-182.nycmny.east.verizon.net)
[19:43:07] *** Quits: ckdCreations (~ckdCreati@c-24-17-50-149.hsd1.wa.comcast.net) (Ping timeout: 250 seconds)
[19:43:07] *** Quits: cthulchu_ (~Cthulchu@193.194.107.250) (Ping timeout: 250 seconds)
[19:43:21] *** Joins: humbertowoody (~humbertow@189.236.62.65)
[19:43:33] *** Quits: ArtfulDodger__ (~ArtfulDod@2a04:cec0:1091:46f4:78ba:13a3:5b05:4fb6) (Ping timeout: 265 seconds)
[19:44:13] *** Joins: ckdCreations (~ckdCreati@147.55.133.140)
[19:44:56] *** Joins: sudomann (~sudomann@c-98-219-165-55.hsd1.md.comcast.net)
[19:45:02] *** Joins: hyskaru (~hyskaru@user/hyskaru)
[19:45:18] *** Joins: cheater (~Username@user/cheater)
[19:45:46] *** Joins: merijn (~merijn@83-160-49-249.ip.xs4all.nl)
[19:45:48] <pystardust> just getting into async python, whats the best way to find async modules, any suggestions for a beginner?
[19:45:55] *** Joins: Staunch (~Staunch@c-24-7-237-208.hsd1.mn.comcast.net)
[19:46:33] *** Joins: hudo__ (~hudo@62.68.19.39)
[19:46:56] *** Joins: teut (~teut@182.64.62.109)
[19:47:11] <grym> pystardust: google for "sync-library-that-i-used-to-use async alternative" ?
[19:47:32] <grym> ha ha only serious
[19:48:42] <dob1> os.unlink(...) doesn't accept a Path from pathlib, right?
[19:48:53] <grym> mypath.unlink(), though
[19:49:05] <grym> dob1: it does as of 3.6
[19:49:05] *** Joins: vladoski (~vladoski@2001:b07:add:d406:82ff:c663:9b1d:a681)
[19:50:03] <grym> most stdlib things take pathlikes now
[19:50:11] <dob1> ah, it's os.PathLike that is implemented by Path
[19:50:16] <grym> so much so that i am very annoyed when non-stdlib things don't
[19:50:24] <grym> ahem ahem opencv
[19:50:53] *** Joins: Inline (~Inline@2a02:908:1252:7a80:6adf:f25e:1e5f:74e1)
[19:51:00] *** Joins: kickingvegas (~cchoi@c-24-5-40-20.hsd1.ca.comcast.net)
[19:51:25] *** Joins: royaljelly (~royaljell@user/royaljelly)
[19:51:59] *** Joins: mimmy (~mimmy@72.142.88.18)
[19:51:59] *** Quits: odoood (~odoood@2601:c8:c003:a550::3) (Ping timeout: 264 seconds)
[19:52:04] *** Joins: Julian (~tos9@python/site-packages/Julian)
[19:52:07] *** Quits: Julian (~tos9@python/site-packages/Julian) (Client Quit)
[19:52:13] *** Joins: kjdf (~kjdf@ti0063q161-1126.bb.online.no)
[19:53:19] *** Joins: yotsuba (~yotsuba@93-172-241-53.bb.netvision.net.il)
[19:53:25] <han-solo> pystardust: you could ask here too :) as in "what do you folks use for requests async alternative"
[19:53:31] *** Quits: yotsuba-chan (~yotsuba@93-172-241-53.bb.netvision.net.il) (Read error: Connection reset by peer)
[19:53:59] <han-solo> likely to get better results :)
[19:54:06] *** Quits: JayDoubleu (~jaydouble@2001:470:69fc:105::1:371a) (K-Lined)
[19:54:06] *** Quits: neolem (~neolem@2001:470:69fc:105::c675) (K-Lined)
[19:54:06] *** Quits: morguldir (~morguldir@2001:470:69fc:105::21bd) (K-Lined)
[19:54:06] *** Quits: meain (~meain@2001:470:69fc:105::2db) (K-Lined)
[19:54:06] *** Quits: diegov (~diegov@2001:470:69fc:105::103f) (K-Lined)
[19:54:06] *** Quits: hsiktas[m] (~hsiktasma@2001:470:69fc:105::30d4) (K-Lined)
[19:54:08] *** Quits: BrenBarn (~brenbarn@2001:470:69fc:105::2da2) (K-Lined)
[19:54:08] *** Quits: DX099 (~dx099@2001:470:69fc:105::21ce) (K-Lined)
[19:54:09] *** Quits: psydroid (~psydroid@user/psydroid) (K-Lined)
[19:54:09] *** Quits: artemon (~artemon@2001:470:69fc:105::87c) (K-Lined)
[19:54:11] *** Quits: meatballs (~meatballs@2001:470:69fc:105::633) (K-Lined)
[19:54:11] *** Quits: ormaaj (~ormaaj@user/ormaaj) (K-Lined)
[19:54:11] *** Quits: aleko1[m] (~aleko1@2001:470:69fc:105::1:1016) (K-Lined)
[19:54:12] *** Quits: evidlo (~evidlo@2001:470:69fc:105::7fc) (K-Lined)
[19:54:13] *** Quits: enick_208 (~dngray@user/dngray) (K-Lined)
[19:54:15] *** Quits: berton[m] (~berton@2001:470:69fc:105::ce36) (K-Lined)
[19:54:15] *** Quits: PantelicGR2 (~pantelicg@user/pantelicgr) (K-Lined)
[19:54:15] *** Quits: cotsuka (~cotsuka@user/cotsuka) (K-Lined)
[19:54:15] *** Quits: Vipulk (~vipulk@user/vipulk) (K-Lined)
[19:54:15] *** Quits: graingert[m] (~graingert@2001:470:69fc:105::653) (K-Lined)
[19:54:16] *** Quits: mindlesstux[m] (~mindlesst@user/mindlesstux) (K-Lined)
[19:54:17] *** Quits: jinsun_ (~jinsun@user/jinsun) (K-Lined)
[19:54:17] *** Quits: kikijiki[m] (~kikijiki@user/kikijiki) (K-Lined)
[19:54:17] *** Quits: jmcantrell (~jmcantrel@user/jmcantrell) (K-Lined)
[19:54:18] *** Quits: allegary (~allegary@apache/committer/gjm) (K-Lined)
[19:54:20] *** Quits: saltrocklamp[m] (~hexology@user/hexology) (K-Lined)
[19:54:20] *** Quits: ronny (~ronny@2001:470:69fc:105::b57) (K-Lined)
[19:54:20] *** Quits: novasharper (~novasharp@2001:470:69fc:105::b4a) (K-Lined)
[19:54:22] *** Quits: gloomy (~gloomy@2001:470:69fc:105::ce00) (K-Lined)
[19:54:22] *** Quits: pschmitt[m] (~pschmitt@2001:470:69fc:105::1:24cb) (K-Lined)
[19:54:24] *** Quits: canardo (~canardo@2001:470:69fc:105::e110) (K-Lined)
[19:54:24] *** Quits: queue[m] (~queue-@2001:470:69fc:105::1:1892) (K-Lined)
[19:54:24] *** Quits: schemanic[m] (~schemanic@2001:470:69fc:105::1:2450) (K-Lined)
[19:54:24] *** Quits: boris[m] (~borisruna@2001:470:69fc:105::32f3) (K-Lined)
[19:54:40] *** Quits: sudomann (~sudomann@c-98-219-165-55.hsd1.md.comcast.net) (Ping timeout: 265 seconds)
[19:54:44] <pystardust> han-solo: thanks, material seems to be scarce out there. Do you thing async will be come more popular a time passes?
[19:54:58] <han-solo> ofcourse
[19:55:04] <royaljelly> Do you guys have any ideas for python projects? I wrote a cows and bulls program that uses mysql for user accounts but it is totally useless so i don't want to continue with it...
[19:55:08] <han-solo> i mean, it is already popular i think ?
[19:55:14] <han-solo> for things that are asyncy
[19:55:28] <sco1> royaljelly: https://nedbatchelder.com/text/kindling.html
[19:55:30] <royaljelly> I know basic python, everything in the docs.python.org tutorial upto and including classes
[19:55:43] *** Quits: BSaboia (~bsaboia@177.37.198.227) (Quit: This computer has gone to sleep)
[19:55:58] *** Joins: theseb (~theseb@47-220-214-54.cnrocmta03.res.dyn.suddenlink.net)
[19:56:45] <royaljelly> https://github.com/karan/Projects#numbers none of these are interesting
[19:56:50] <grym> royaljelly: well, what bothers you about your computer today
[19:56:59] *** Quits: TJ- (~root@about/linux/staff/tj-) (Ping timeout: 250 seconds)
[19:57:00] <grym> you can write a program to make it less bothersome
[19:57:02] <akk> pystardust: https://github.com/ross/requests-futures
[19:57:05] *** Quits: johnkeats6 (~johnkeats@2804:14c:32:a0cc:400e:8294:7091:b83a) (Ping timeout: 265 seconds)
[19:57:19] *** Joins: cthulchu (~Cthulchu@193.110.78.38)
[19:57:54] <royaljelly> grym: nothing much? I wrote a small script that would suspend my laptop if the battery percentage got too low last week
[19:58:08] *** Joins: withered_wolf (~withered_@1437135-v103.1561-static.stchilaa.metronetinc.net)
[19:58:13] <pystardust> akk: I was curious, in most of these network async lib, why do we need a client first and then await a get request throught it? Why not directly await a get request ?
[19:58:21] *** Quits: teut (~teut@182.64.62.109) (Quit: Client closed)
[19:58:31] <royaljelly> i'm looking for project ideas like a a program that uses the vigenere cipher for encryption and stuff like that
[19:58:32] *** Quits: holgersson (~quassel@user/holgersson) (Ping timeout: 265 seconds)
[19:58:43] <royaljelly> but not as popular as the vigenere cipher
[19:59:13] *** Joins: TJ- (~root@about/linux/staff/tj-)
[19:59:34] *** Joins: Elliria (~littlegir@cpe-66-24-84-219.stny.res.rr.com)
[19:59:39] *** Quits: mogad0n (~mogad0n@user/mogad0n) (Ping timeout: 268 seconds)
[19:59:52] <royaljelly>  something that's real worldy, has something to do with math or something like math, but not so popular that millions of people have done the same project already
[20:00:30] *** Joins: mogad0n (~mogad0n@user/mogad0n)
[20:00:36] *** Joins: holgersson (~quassel@user/holgersson)
[20:01:28] *** Quits: defjam (~eb0t@90.210.91.65) (Ping timeout: 256 seconds)
[20:02:02] *** Quits: merijn (~merijn@83-160-49-249.ip.xs4all.nl) (Ping timeout: 256 seconds)
[20:02:04] *** Joins: defjam (~eb0t@90.199.243.99)
[20:02:37] *** Quits: magla (~gelignite@55d4e1d7.access.ecotel.net) (Quit: Stay safe!)
[20:03:20] *** Quits: michele_ (~eraser@user/michele) (Remote host closed the connection)
[20:03:24] *** Quits: ckdCreations (~ckdCreati@147.55.133.140) (Read error: Connection reset by peer)
[20:03:28] *** Joins: pigweed (~pigweed@97.119.246.99)
[20:03:37] *** Joins: michele (~eraser@user/michele)
[20:04:58] <b3z> I have a question about package managers. Its pip vs conda. Are there any good articles about this topics which don't just cover the usual blah blah?
[20:04:59] *** Quits: matthewwilkes (sid500242@uxbridge.irccloud.com) (Ping timeout: 265 seconds)
[20:05:00] *** Quits: greyblue9 (sid500829@ilkley.irccloud.com) (Ping timeout: 250 seconds)
[20:05:00] *** Quits: Darkfoe (sid402081@helmsley.irccloud.com) (Ping timeout: 250 seconds)
[20:05:02] *** Joins: EdePopede (~ede@user/ede)
[20:05:07] *** Quits: Raichvent (~Raichvent@193.123.33.210) (Remote host closed the connection)
[20:05:17] *** Quits: naranja (~orange@user/orangeboxcutter) (Quit: AFK)
[20:05:19] <jinsun> pystardust: the client usually manages connection pools and stuff like cookies for you, which are useful if you are making multiple requests to same server
[20:05:24] *** Joins: Raichvent (~Raichvent@193.123.33.210)
[20:05:25] *** Quits: yac (~user@user/yac) (Ping timeout: 250 seconds)
[20:05:25] *** Quits: wilz (~wilz@modemcable036.177-131-66.mc.videotron.ca) (Ping timeout: 250 seconds)
[20:05:28] *** Joins: orangeboxcutter (~orange@user/orangeboxcutter)
[20:05:29] *** Quits: cyberpear (uid364019@fedora/cyberpear) (Ping timeout: 264 seconds)
[20:05:29] *** Quits: Yhg1s (sid387777@python/psf/thomas) (Ping timeout: 264 seconds)
[20:05:29] *** Quits: ormiret (sid314108@lymington.irccloud.com) (Ping timeout: 264 seconds)
[20:05:30] <pystardust> jinsun: thanks!
[20:05:39] <b3z> My problem is that I have some packages which are only available on conda and some which are only on pip. What do I do?
[20:05:56] *** Joins: njt_ (~njt@zaph.org)
[20:05:58] *** Quits: Venhal (sid515085@uxbridge.irccloud.com) (Ping timeout: 265 seconds)
[20:06:05] *** Quits: ngp (~ngp@199.180.249.183) (Ping timeout: 264 seconds)
[20:06:05] *** Quits: njt (~njt@zaph.org) (Ping timeout: 264 seconds)
[20:06:06] *** Quits: abip20 (~abdullah@103.66.177.186) (Quit: Konversation terminated!)
[20:06:21] *** Joins: abip20 (~abdullah@103.66.177.186)
[20:06:31] *** Quits: graybeard (~graybeard@user/graybeard) (Ping timeout: 250 seconds)
[20:06:31] *** Joins: sudomann (~sudomann@c-98-219-165-55.hsd1.md.comcast.net)
[20:06:31] *** Joins: morguldir (~morguldir@2001:470:69fc:105::21bd)
[20:06:46] *** Quits: marduk (~marduk@99-122-3-133.lightspeed.nsvltn.sbcglobal.net) (Ping timeout: 260 seconds)
[20:06:46] *** njt_ is now known as njt
[20:06:51] *** Quits: chronon (~chronon@user/chronon) (Ping timeout: 244 seconds)
[20:07:02] *** Quits: dman777_alter (~dman777@76-253-74-225.lightspeed.austtx.sbcglobal.net) (Ping timeout: 246 seconds)
[20:07:04] *** Quits: fjmorazan (~quassel@user/fjmorazan) (Ping timeout: 268 seconds)
[20:07:04] *** Quits: dermato (~dermatobr@cpe-70-114-219-76.austin.res.rr.com) (Ping timeout: 268 seconds)
[20:07:08] *** Joins: vbgunz_ (~vbgunz@35.141.71.47)
[20:07:10] *** Quits: acegallagher (~Ace@174-16-184-4.hlrn.qwest.net) (Ping timeout: 260 seconds)
[20:07:14] *** Quits: ede (~ede@user/ede) (Ping timeout: 265 seconds)
[20:07:14] *** Quits: vbgunz (~vbgunz@35.141.71.47) (Ping timeout: 260 seconds)
[20:07:22] *** Quits: chele (~chele@user/chele) (Remote host closed the connection)
[20:07:29] *** Joins: fjmorazan (~quassel@user/fjmorazan)
[20:07:34] *** Joins: marduk (~marduk@99-122-3-133.lightspeed.nsvltn.sbcglobal.net)
[20:07:37] *** Joins: wilz (~wilz@modemcable036.177-131-66.mc.videotron.ca)
[20:07:39] *** Joins: yac (~user@user/yac)
[20:07:41] *** Joins: chronon (~chronon@user/chronon)
[20:07:45] *** Joins: graybeard (~graybeard@user/graybeard)
[20:07:46] *** Joins: ruediger (~ruediger@user/ruediger)
[20:08:14] *** Joins: LuksNuke (~LuksNuke@gateway/tor-sasl/luksnuke)
[20:08:16] *** Quits: fikran (~fikran@user/fikran) (Ping timeout: 256 seconds)
[20:08:21] *** Joins: dermato (~dermatobr@cpe-70-114-219-76.austin.res.rr.com)
[20:08:22] *** Joins: Xaldafax (~xaldafax@cpe-198-72-160-101.socal.res.rr.com)
[20:08:35] <SnoopJ> b3z, sounds like you want to use conda, and use pip from inside your env for the stuff that is only on PyPI (which is I assume what you mean by "on pip"; pip is a tool, not a place)
[20:08:35] *** Joins: yotsuba-chan (~yotsuba@93-172-241-53.bb.netvision.net.il)
[20:08:36] *** Joins: evidlo (~evidlo@2001:470:69fc:105::7fc)
[20:08:36] *** Joins: mindlesstux[m] (~mindlesst@user/mindlesstux)
[20:08:36] *** Joins: artemon (~artemon@2001:470:69fc:105::87c)
[20:08:36] *** Joins: PantelicGR2 (~pantelicg@user/pantelicgr)
[20:08:36] *** Joins: diegov (~diegov@2001:470:69fc:105::103f)
[20:08:50] *** Joins: BrenBarn (~brenbarn@2001:470:69fc:105::2da2)
[20:08:50] *** Quits: yotsuba (~yotsuba@93-172-241-53.bb.netvision.net.il) (Ping timeout: 256 seconds)
[20:08:50] *** Joins: kikijiki[m] (~kikijiki@user/kikijiki)
[20:08:50] *** Joins: meatballs (~meatballs@2001:470:69fc:105::633)
[20:08:50] *** Joins: graingert[m] (~graingert@2001:470:69fc:105::653)
[20:08:50] *** Joins: psydroid (~psydroid@user/psydroid)
[20:08:50] *** Joins: novasharper (~novasharp@2001:470:69fc:105::b4a)
[20:08:51] *** Joins: neolem (~neolem@2001:470:69fc:105::c675)
[20:08:51] *** Joins: gloomy (~gloomy@2001:470:69fc:105::ce00)
[20:08:52] <b3z> SnoopJ: sure yes.
[20:08:55] *** Joins: dman777 (~dman777@76-253-74-225.lightspeed.austtx.sbcglobal.net)
[20:08:58] *** Joins: canardo (~canardo@2001:470:69fc:105::e110)
[20:08:58] *** Joins: allegary (~allegary@apache/committer/gjm)
[20:08:58] *** Joins: cotsuka (~cotsuka@user/cotsuka)
[20:08:58] *** Joins: enick_741 (~dngray@user/dngray)
[20:08:59] *** Joins: jmcantrell (~jmcantrel@user/jmcantrell)
[20:09:02] *** Quits: dunc (sid16@uxbridge.irccloud.com) (Ping timeout: 240 seconds)
[20:09:09] *** Joins: JayDoubleu (~jaydouble@2001:470:69fc:105::1:371a)
[20:09:11] <b3z> SnoopJ: but the whole internet screams "don't use them together"
[20:09:13] *** Joins: pschmitt[m] (~pschmitt@2001:470:69fc:105::1:24cb)
[20:09:13] *** Joins: ronny (~ronny@2001:470:69fc:105::b57)
[20:09:13] *** Joins: jinsun_ (~jinsun@user/jinsun)
[20:09:13] *** Joins: queue[m] (~queue-@2001:470:69fc:105::1:1892)
[20:09:13] *** Joins: Vipulk (~vipulk@user/vipulk)
[20:09:27] *** Joins: berton[m] (~berton@2001:470:69fc:105::ce36)
[20:09:27] *** Joins: aleko1[m] (~aleko1@2001:470:69fc:105::1:1016)
[20:09:27] *** Joins: meain (~meain@2001:470:69fc:105::2db)
[20:09:27] *** Joins: schemanic[m] (~schemanic@2001:470:69fc:105::1:2450)
[20:09:27] *** Joins: saltrocklamp[m] (~hexology@user/hexology)
[20:09:27] *** Joins: ormaaj (~ormaaj@user/ormaaj)
[20:09:27] *** Joins: boris[m] (~borisruna@2001:470:69fc:105::32f3)
[20:09:27] *** Joins: DX099 (~dx099@2001:470:69fc:105::21ce)
[20:09:28] <SnoopJ> b3z, the internet is well known for screaming
[20:09:31] *** Quits: bjs (sid190364@user/bjs) (Ping timeout: 268 seconds)
[20:09:31] *** Quits: ericoc (sid179921@uxbridge.irccloud.com) (Ping timeout: 268 seconds)
[20:09:31] *** Quits: hogarius (hogarius@uxbridge.irccloud.com) (Ping timeout: 268 seconds)
[20:09:32] *** Quits: ballingt (sid190590@helmsley.irccloud.com) (Ping timeout: 240 seconds)
[20:09:32] *** Quits: braxas (sid508886@lymington.irccloud.com) (Ping timeout: 240 seconds)
[20:09:33] *** Quits: rpittau (sid346891@tinside.irccloud.com) (Ping timeout: 250 seconds)
[20:09:33] *** Quits: bn_work (uid268505@uxbridge.irccloud.com) (Ping timeout: 250 seconds)
[20:09:39] *** Quits: eichin (sid27120@tinside.irccloud.com) (Ping timeout: 265 seconds)
[20:09:40] <jinsun> b3z: have you read the blog posts from anaconda about them https://www.anaconda.com/blog/using-pip-in-a-conda-environment and https://www.anaconda.com/blog/understanding-conda-and-pip
[20:09:49] *** Quits: daniel-k (~daniel-k@fsf/emeritus/daniel-k) (Quit: bye)
[20:09:50] <SnoopJ> I have used pip from inside conda envs many times, personally, and it's ^ something they officially support
[20:09:52] *** Quits: dba (uid502594@hampstead.irccloud.com) (Read error: Connection reset by peer)
[20:09:53] *** Quits: lidless (sid523173@tinside.irccloud.com) (Read error: Connection reset by peer)
[20:09:54] *** Quits: timetraveler (uid527600@lymington.irccloud.com) (Read error: Connection reset by peer)
[20:09:57] *** Quits: rburton (rburton@user/rburton) (Read error: Connection reset by peer)
[20:09:59] *** Quits: frodl (uid527064@user/frodl) (Ping timeout: 250 seconds)
[20:09:59] *** Quits: pwillard (sid136981@hampstead.irccloud.com) (Ping timeout: 250 seconds)
[20:09:59] *** Quits: withered_wolf (~withered_@1437135-v103.1561-static.stchilaa.metronetinc.net) (Ping timeout: 264 seconds)
[20:10:00] *** Quits: Evolver (sid32215@user/evolver) (Read error: Connection reset by peer)
[20:10:00] *** Quits: Sario (uid356235@fosshost/cdo/Sario) (Read error: Connection reset by peer)
[20:10:00] *** Quits: debnet (sid330295@python/afpy/debnet) (Read error: Connection reset by peer)
[20:10:00] *** Quits: KnownSyntax (sid233169@user/knownsyntax) (Read error: Connection reset by peer)
[20:10:01] *** Joins: fikran (~fikran@user/fikran)
[20:10:01] *** Quits: NiKaN (sid385034@helmsley.irccloud.com) (Read error: Connection reset by peer)
[20:10:02] *** Quits: mrproper (sid382572@uxbridge.irccloud.com) (Read error: Connection reset by peer)
[20:10:02] *** Quits: LyndsySimon (sid34452@lymington.irccloud.com) (Read error: Connection reset by peer)
[20:10:02] *** Quits: df_data (sid466269@ilkley.irccloud.com) (Ping timeout: 240 seconds)
[20:10:02] *** Quits: peac (sid344662@hampstead.irccloud.com) (Ping timeout: 240 seconds)
[20:10:02] *** Quits: rubin55 (sid175221@hampstead.irccloud.com) (Read error: Connection reset by peer)
[20:10:03] <b3z> jinsun: I have not. thanks I will have a look
[20:10:03] *** Quits: ff9527ff_ (uid527419@uxbridge.irccloud.com) (Read error: Connection reset by peer)
[20:10:03] *** Quits: jposer (sid132110@uxbridge.irccloud.com) (Read error: Connection reset by peer)
[20:10:03] *** Quits: dohtem (uid524096@user/dohtem) (Write error: Connection reset by peer)
[20:10:03] *** Quits: r0bby (r0bby@user/r0bby) (Read error: Connection reset by peer)
[20:10:04] *** Quits: sunarch (uid526836@user/sunarch) (Read error: Connection reset by peer)
[20:10:04] *** Quits: Freso (sid7914@libera/staff/metabrainz.user.Freso) (Read error: Connection reset by peer)
[20:10:04] *** Quits: jtanner (sid194399@helmsley.irccloud.com) (Read error: Connection reset by peer)
[20:10:04] *** Quits: holbrode (sid339826@tinside.irccloud.com) (Read error: Connection reset by peer)
[20:10:04] *** Quits: mobius (sid478273@uxbridge.irccloud.com) (Read error: Connection reset by peer)
[20:10:04] *** Quits: dez (uid92154@user/dez) (Write error: Connection reset by peer)
[20:10:04] *** Quits: km (sid515529@user/km) (Read error: Connection reset by peer)
[20:10:10] <SnoopJ> There are some sharp corners, but that's just the nature of the thing
[20:10:21] *** Joins: daniel-k (~daniel-k@fsf/emeritus/daniel-k)
[20:10:27] *** Joins: ngp (~ngp@199.180.249.183)
[20:10:28] <SnoopJ> If conda can keep track of a package for an environment, it's preferable to let it do so
[20:10:39] *** EdePopede is now known as ede
[20:10:40] *** Quits: daniel-k (~daniel-k@fsf/emeritus/daniel-k) (Client Quit)
[20:10:43] *** Quits: p-i-_ (~Ohmu@mx-ll-223.206.149-27.dynamic.3bb.co.th) (Read error: Connection reset by peer)
[20:11:10] *** Joins: daniel-k (~daniel-k@fsf/emeritus/daniel-k)
[20:11:15] *** Joins: Darkfoe (sid402081@helmsley.irccloud.com)
[20:11:19] *** Joins: p-i- (~Ohmu@mx-ll-223.206.149-27.dynamic.3bb.co.th)
[20:11:34] *** Joins: Venhal (sid515085@uxbridge.irccloud.com)
[20:11:34] *** Joins: ormiret (sid314108@lymington.irccloud.com)
[20:11:42] *** Joins: NiKaN (sid385034@helmsley.irccloud.com)
[20:11:42] *** Joins: KnownSyntax (sid233169@user/knownsyntax)
[20:11:45] *** Joins: Yhg1s (sid387777@python/psf/thomas)
[20:11:45] *** Joins: jtanner (sid194399@helmsley.irccloud.com)
[20:11:49] *** Joins: debnet (sid330295@python/afpy/debnet)
[20:11:51] *** Joins: braxas (sid508886@lymington.irccloud.com)
[20:11:55] *** Joins: sunarch (uid526836@user/sunarch)
[20:12:25] *** Joins: raxor2k (~raxor2k@158.39.193.253)
[20:12:38] *** Quits: sudomann (~sudomann@c-98-219-165-55.hsd1.md.comcast.net) (Ping timeout: 246 seconds)
[20:12:39] *** Quits: daniel-k (~daniel-k@fsf/emeritus/daniel-k) (Client Quit)
[20:12:48] *** Parts: raxor2k (~raxor2k@158.39.193.253) ()
[20:12:49] *** Joins: donald1 (~donald@37.164.107.246)
[20:12:52] *** Joins: LyndsySimon (sid34452@lymington.irccloud.com)
[20:12:57] <donald1> bjs hi
[20:13:00] *** Joins: raxor2k (~raxor2k@158.39.193.253)
[20:13:05] <b3z> SnoopJ: Okay. So I have always been a pip fan. But now I have to use conda since some packages are not available on PyPI. So you just make a conda env and install everything you can using conda. And only if you really have to you use pip within this env? That is at least what jinsun article says.
[20:13:15] *** Joins: Evolver (sid32215@user/evolver)
[20:13:25] *** Joins: Viewday117 (~Viewday@user/viewday)
[20:13:27] *** Joins: daniel-k (~daniel-k@fsf/emeritus/daniel-k)
[20:13:31] *** Joins: km (sid515529@user/km)
[20:13:32] *** Joins: r0bby (r0bby@user/r0bby)
[20:13:33] *** Quits: spithash (~spithash@user/spithash) (Ping timeout: 276 seconds)
[20:13:34] *** Joins: rburton (rburton@user/rburton)
[20:13:37] *** Joins: ericoc (sid179921@uxbridge.irccloud.com)
[20:13:38] *** Joins: Sario (uid356235@fosshost/cdo/Sario)
[20:13:41] *** Joins: greyblue9 (sid500829@ilkley.irccloud.com)
[20:13:53] <raxor2k> bjs: is it better to have all "def" functions async instead of having some of the functions "async def" and some others "def" ?
[20:13:58] *** Joins: matthewwilkes (sid500242@uxbridge.irccloud.com)
[20:14:06] *** Joins: cyberpear (uid364019@fedora/cyberpear)
[20:14:11] *** Joins: holbrode (sid339826@tinside.irccloud.com)
[20:14:14] *** Joins: dba (uid502594@hampstead.irccloud.com)
[20:14:14] *** Joins: spithash (~spithash@user/spithash)
[20:14:18] *** Joins: sudomann (~sudomann@c-98-219-165-55.hsd1.md.comcast.net)
[20:14:24] *** Joins: dez (uid92154@user/dez)
[20:14:30] *** Joins: bjs (sid190364@user/bjs)
[20:14:31] *** Joins: rubin55 (sid175221@hampstead.irccloud.com)
[20:14:53] *** Joins: dunc (sid16@uxbridge.irccloud.com)
[20:14:54] *** Joins: mobius (sid478273@uxbridge.irccloud.com)
[20:15:04] *** Quits: Viewday11 (~Viewday@user/viewday) (Ping timeout: 256 seconds)
[20:15:04] *** Viewday117 is now known as Viewday11
[20:15:06] *** Joins: bn_work (uid268505@uxbridge.irccloud.com)
[20:15:16] *** Joins: hogarius (hogarius@uxbridge.irccloud.com)
[20:15:20] *** Joins: eichin (sid27120@tinside.irccloud.com)
[20:15:22] *** Joins: rpittau (sid346891@tinside.irccloud.com)
[20:15:25] <jinsun> b3z: yes use conda environments and pip only after you have installed everything conda can install
[20:15:25] *** Joins: dohtem (uid524096@user/dohtem)
[20:15:28] *** Joins: peac (sid344662@hampstead.irccloud.com)
[20:15:29] *** Joins: jposer (sid132110@uxbridge.irccloud.com)
[20:15:32] <SnoopJ> b3z, yes
[20:15:43] *** Quits: abip20 (~abdullah@103.66.177.186) (Quit: Konversation terminated!)
[20:16:02] *** Joins: abip20 (~abdullah@103.66.177.186)
[20:16:05] <b3z> This sounds awful. Conda is so slow. jinsun SnoopJ
[20:16:30] <jinsun> I use mamba to solve that
[20:16:31] *** Quits: puff (~user@S0106d4ca6d80a83c.vs.shawcable.net) (Read error: Connection reset by peer)
[20:16:44] *** Joins: puff (~user@S0106d4ca6d80a83c.vs.shawcable.net)
[20:16:56] <jinsun> b3z: https://github.com/mamba-org/mamba
[20:17:51] <b3z> Did you try micromamba? jinsun
[20:17:52] *** Quits: RiFo (~RiFo@user/rifo) (Ping timeout: 265 seconds)
[20:18:09] <sco1> It's mambas all the way down
[20:18:53] <b3z> Yeah I recon its miniconda in mamba? sco1
[20:18:56] *** Joins: df_data (sid466269@ilkley.irccloud.com)
[20:18:59] <SnoopJ> b3z, the alternative is to install whatever you want that is conda-only some other way. If it's not pip-installable, it's not installable with pip. You will probably have to do those things by hand, then.
[20:19:08] <SnoopJ> This might not be so bad if you have a relatively small number of such things.
[20:19:35] *** Quits: defjam (~eb0t@90.199.243.99) (Ping timeout: 264 seconds)
[20:19:44] <donald1> Hello. I have a bug at this line https://github.com/gogo2464/pwntools/blob/hand-PE-libs/pwnlib/tubes/tube.py#L204 See https://paste.debian.net/1219966/
[20:19:45] <b3z> SnoopJ: yeah no. Not an option unfortunately.
[20:19:59] <b3z> SnoopJ: this would be dependency hell.
[20:20:05] <donald1> I want to use async just to set a timeout
[20:20:23] <donald1> Did I do something wrong? I do not understand the error.
[20:20:38] <SnoopJ> b3z, "dependency hell" sounds like where you're starting from.
[20:20:38] *** Joins: Freso (sid7914@libera/staff/metabrainz.user.Freso)
[20:20:44] *** Joins: frodl (uid527064@user/frodl)
[20:20:46] *** Quits: betelgeuse (~betelgeus@94-225-47-8.access.telenet.be) (Ping timeout: 260 seconds)
[20:20:57] *** Joins: pwillard (sid136981@hampstead.irccloud.com)
[20:21:06] *** Joins: daoudr (~daoudr@xdsl-31-164-222-159.adslplus.ch)
[20:21:17] *** Quits: Zer0xFF (m-3laxwu@matrix.michaelsasser.org) (Remote host closed the connection)
[20:21:24] *** Joins: defjam (~eb0t@90.210.93.143)
[20:22:39] *** Joins: CyDefect (~troll@213.55.224.219)
[20:22:47] *** Joins: Zer0xFF (m-3laxwu@matrix.michaelsasser.org)
[20:22:49] *** Quits: abip20 (~abdullah@103.66.177.186) (Quit: Konversation terminated!)
[20:22:56] *** Joins: LiaoTao (~LiaoTao@gateway/tor-sasl/liaotao)
[20:23:00] <b3z> SnoopJ: If you say so. I might wake up one day and everything will be broken. But somehow it worked until now. The thing is. Conda was now running for 30 mins and it is still solving the env for installing metpy.
[20:23:11] *** Quits: arinov (~arinov@5.24.160.250) (Ping timeout: 265 seconds)
[20:23:17] <b3z> So is miniconda any faster? Or do I just go with mamba?
[20:23:30] *** Quits: LiaoTao_ (~LiaoTao@gateway/tor-sasl/liaotao) (Remote host closed the connection)
[20:23:32] <jinsun> b3z: I just used the regular mamba, micormamba is a bit more experimental and cannot be downloaded from my work computer so never bothered
[20:23:33] <b3z> Or am I using conda the wrong way?
[20:24:11] <jinsun> b3z: miniconda is just anaconda minus a bunch of packages, still uses conda
[20:24:19] <b3z> okay
[20:24:20] *** Quits: cosimone (~user@2001:b07:ae5:db26:a7aa:8027:6b4e:2fb3) (Remote host closed the connection)
[20:25:01] *** Joins: cosimone (~user@2001:b07:ae5:db26:a7aa:8027:6b4e:2fb3)
[20:25:42] <SnoopJ> b3z, Anaconda is a distribution of the conda package manager + a lot of packages. miniconda is a distribution of just the conda package manager.
[20:25:54] *** Quits: adeliktas (~adeliktas@200116b82203d9004c14741036ac2e75.dip.versatel-1u1.de) (Quit: Client closed)
[20:25:58] <SnoopJ> People sometimes use "conda" to refer to both the tool and the distribution
[20:25:58] <jinsun> mamba is much faster in solving for packages, and if it fails to solve it fails fast too, sometimes with useless message but fast
[20:26:07] <SnoopJ> yea, mamba is a drop-in replacement for conda, as I understand it
[20:26:22] <b3z> jinsun: so mamba is conda in fast and little sleeker?
[20:26:24] <b3z> Ah I see.
[20:26:30] <b3z> So we go with mamba.
[20:26:41] <b3z> Do you use it in production? jinsun
[20:26:54] *** dcaro is now known as dcaro_away
[20:27:23] *** Quits: mogad0n (~mogad0n@user/mogad0n) (Ping timeout: 264 seconds)
[20:27:29] *** Joins: bomb-on (~bomb-on@194.144.47.113)
[20:27:56] *** Quits: sudomann (~sudomann@c-98-219-165-55.hsd1.md.comcast.net) (Ping timeout: 260 seconds)
[20:27:57] <b3z> And since mamba basically is conda you can use it together with pip the same way?
[20:28:14] *** Joins: adeliktas (~adeliktas@200116b82203d9004c14741036ac2e75.dip.versatel-1u1.de)
[20:28:18] *** Joins: mogad0n (~mogad0n@user/mogad0n)
[20:29:16] *** Quits: kikijiki[m] (~kikijiki@user/kikijiki) (Quit: Client limit exceeded: 20000)
[20:29:16] *** Quits: morguldir (~morguldir@2001:470:69fc:105::21bd) (Quit: Client limit exceeded: 20000)
[20:29:20] *** Quits: psydroid (~psydroid@user/psydroid) (Quit: Client limit exceeded: 20000)
[20:29:27] *** Quits: mindlesstux[m] (~mindlesst@user/mindlesstux) (Quit: Client limit exceeded: 20000)
[20:29:33] *** Quits: neolem (~neolem@2001:470:69fc:105::c675) (Quit: Client limit exceeded: 20000)
[20:29:39] *** Quits: Vipulk (~vipulk@user/vipulk) (Quit: Client limit exceeded: 20000)
[20:29:44] *** Quits: artemon (~artemon@2001:470:69fc:105::87c) (Quit: Client limit exceeded: 20000)
[20:29:48] *** Quits: evidlo (~evidlo@2001:470:69fc:105::7fc) (Quit: Client limit exceeded: 20000)
[20:30:00] *** Quits: diegov (~diegov@2001:470:69fc:105::103f) (Quit: Client limit exceeded: 20000)
[20:30:06] *** Quits: meain (~meain@2001:470:69fc:105::2db) (Quit: Client limit exceeded: 20000)
[20:30:08] *** Quits: ormaaj (~ormaaj@user/ormaaj) (Quit: Client limit exceeded: 20000)
[20:30:09] *** Quits: aleko1[m] (~aleko1@2001:470:69fc:105::1:1016) (Quit: Client limit exceeded: 20000)
[20:30:13] *** Quits: allegary (~allegary@apache/committer/gjm) (Quit: Client limit exceeded: 20000)
[20:30:17] *** Joins: rpkilby (~rpkilby@c-24-20-208-106.hsd1.or.comcast.net)
[20:30:19] *** Quits: graingert[m] (~graingert@2001:470:69fc:105::653) (Quit: Client limit exceeded: 20000)
[20:30:34] *** Quits: Zer0xFF (m-3laxwu@matrix.michaelsasser.org) (Remote host closed the connection)
[20:30:37] *** Joins: ircuser-1 (~Johnny@71.63.241.168)
[20:30:44] *** Quits: novasharper (~novasharp@2001:470:69fc:105::b4a) (Quit: Client limit exceeded: 20000)
[20:30:46] *** Quits: enoq (~enoq@2a05:1141:1f5:5600:b9c9:721a:599:bfe7) (Quit: enoq)
[20:30:47] *** Quits: saltrocklamp[m] (~hexology@user/hexology) (Quit: Client limit exceeded: 20000)
[20:30:50] *** Quits: cotsuka (~cotsuka@user/cotsuka) (Quit: Client limit exceeded: 20000)
[20:30:51] *** Quits: Elliria (~littlegir@cpe-66-24-84-219.stny.res.rr.com) (Quit: *POOF*)
[20:30:53] <donald1> Hello. I have a bug at this line https://github.com/gogo2464/pwntools/blob/hand-PE-libs/pwnlib/tubes/tube.py#L204 See https://paste.debian.net/1219966/  I want to use async just to set a timeout  Did I do something wrong? I do not understand the error.
[20:30:55] *** Joins: morguldir (~morguldir@2001:470:69fc:105::21bd)
[20:30:55] *** Joins: evidlo (~evidlo@2001:470:69fc:105::7fc)
[20:30:55] *** Joins: mindlesstux[m] (~mindlesst@user/mindlesstux)
[20:30:55] *** Joins: artemon (~artemon@2001:470:69fc:105::87c)
[20:30:55] *** Joins: diegov (~diegov@2001:470:69fc:105::103f)
[20:30:56] *** Joins: kikijiki[m] (~kikijiki@user/kikijiki)
[20:30:56] *** Joins: graingert[m] (~graingert@2001:470:69fc:105::653)
[20:30:56] *** Joins: psydroid (~psydroid@user/psydroid)
[20:30:58] <jinsun> b3z: I use it at work yes, and yes you can just replace conda with mamba (except for activating environments that still needs conda, at least on windows)
[20:31:05] *** Quits: ronny (~ronny@2001:470:69fc:105::b57) (Quit: Client limit exceeded: 20000)
[20:31:06] *** Quits: PantelicGR2 (~pantelicg@user/pantelicgr) (Quit: Client limit exceeded: 20000)
[20:31:10] *** Joins: novasharper (~novasharp@2001:470:69fc:105::b4a)
[20:31:13] *** Joins: neolem (~neolem@2001:470:69fc:105::c675)
[20:31:15] *** Quits: jmcantrell (~jmcantrel@user/jmcantrell) (Quit: Client limit exceeded: 20000)
[20:31:16] * AlphaEcho pokes PyCharm in the eye.
[20:31:24] *** Quits: renlo (~Renlo_Ren@pool-108-14-112-182.nycmny.east.verizon.net) (Ping timeout: 265 seconds)
[20:31:28] *** Joins: PantelicGR2 (~pantelicg@user/pantelicgr)
[20:31:29] *** Joins: allegary (~allegary@apache/committer/gjm)
[20:31:29] *** Joins: cotsuka (~cotsuka@user/cotsuka)
[20:31:30] *** Joins: jmcantrell (~jmcantrel@user/jmcantrell)
[20:31:36] *** Quits: jinsun_ (~jinsun@user/jinsun) (Quit: Client limit exceeded: 20000)
[20:31:37] <b3z> jinsun: seems fine. Thanks for the help - also SnoopJ
[20:31:38] *** Joins: ArtfulDodger (~ArtfulDod@147.210.204.164)
[20:31:40] *** Quits: DX099 (~dx099@2001:470:69fc:105::21ce) (Quit: Client limit exceeded: 20000)
[20:31:44] *** Joins: ronny (~ronny@2001:470:69fc:105::b57)
[20:31:53] *** Joins: Vipulk (~vipulk@user/vipulk)
[20:31:53] *** Joins: aleko1[m] (~aleko1@2001:470:69fc:105::1:1016)
[20:31:53] *** Joins: meain (~meain@2001:470:69fc:105::2db)
[20:31:53] *** Joins: ormaaj (~ormaaj@user/ormaaj)
[20:31:53] *** Joins: saltrocklamp[m] (~hexology@user/hexology)
[20:31:55] *** Joins: jinsun_ (~jinsun@user/jinsun)
[20:31:55] *** Quits: gloomy (~gloomy@2001:470:69fc:105::ce00) (Quit: Client limit exceeded: 20000)
[20:31:56] *** Joins: DX099 (~dx099@2001:470:69fc:105::21ce)
[20:32:16] *** Joins: Zer0xFF (m-3laxwu@matrix.michaelsasser.org)
[20:32:51] *** Quits: Andrynet (~Andrey@186.46.204.193) (Ping timeout: 265 seconds)
[20:33:21] *** Quits: schemanic[m] (~schemanic@2001:470:69fc:105::1:2450) (Quit: Client limit exceeded: 20000)
[20:33:27] *** Joins: merijn (~merijn@83-160-49-249.ip.xs4all.nl)
[20:33:33] *** Quits: [itchyjunk] (~itchyjunk@user/itchyjunk/x-7353470) (Remote host closed the connection)
[20:33:34] *** Joins: RavenII (~RavenII@c-24-1-202-236.hsd1.il.comcast.net)
[20:33:42] *** Quits: LiaoTao (~LiaoTao@gateway/tor-sasl/liaotao) (Ping timeout: 276 seconds)
[20:34:14] *** Joins: Andrynet (~Andrey@186.46.204.193)
[20:34:18] *** Quits: onichomp (~onichomp@2806:264:4404:80fd:7899:e84b:c76c:60a1) (Ping timeout: 265 seconds)
[20:34:59] <RavenII> on an M1 Monterey mac, I'm running make on libopencm3 and get class YAMLObject(metaclass=YAMLObjectMetaclass)
[20:35:29] *** Joins: gloomy (~gloomy@2001:470:69fc:105::ce00)
[20:35:29] <RavenII> When I install pyyaml, it installs it for Python3, how can I get it to install and use python2.x version
[20:35:31] <RavenII> ?
[20:36:10] *** Quits: donald1 (~donald@37.164.107.246) (Read error: Connection reset by peer)
[20:36:11] *** Joins: Virgilio (virgilio@gateway/vpn/protonvpn/virgilio)
[20:36:11] *** Joins: schemanic[m] (~schemanic@2001:470:69fc:105::1:2450)
[20:36:18] *** Quits: GNUmoon (~GNUmoon@gateway/tor-sasl/gnumoon) (Ping timeout: 276 seconds)
[20:36:22] <grym> RavenII: why would you want to
[20:36:23] *** Joins: Adoi (~Adoi@user/adoi)
[20:36:31] <grym> python2 has been deprecated for some time
[20:36:53] <RavenII> How else can I get around that error?
[20:36:56] <grym> and https://github.com/libopencm3/libopencm3 gives examples using 3.9
[20:36:59] <supakeen> I didn't know Monterey still had Python 2 at all?
[20:37:00] <grym> RavenII: what's the error?
[20:37:09] *** Joins: LiaoTao (~LiaoTao@gateway/tor-sasl/liaotao)
[20:37:18] <grym> RavenII: `class YAMLObject(metaclass=YAMLObjectMetaclass)` is not an error
[20:37:19] <RavenII> Oh sorry, that class YAMLObject(metaclass=YAMLObjectMetaclass) says that there's a syntax error
[20:37:23] *** Parts: Pickchea (~private@user/pickchea) (Leaving)
[20:37:37] <supakeen> Apparently you still have both.
[20:37:38] *** yotsuba-chan is now known as yotsuba
[20:38:01] <grym> RavenII: can you share the full error report starting at the shell command you run make from? bpa.st/+bash
[20:38:02] *** Quits: merijn (~merijn@83-160-49-249.ip.xs4all.nl) (Ping timeout: 240 seconds)
[20:38:48] <RavenII> https://bpa.st/M2LA
[20:38:54] *** Joins: zepolen (~zepolen@2a02:587:8613:79af:cd62:f45a:8a62:998d)
[20:38:58] *** Joins: GNUmoon (~GNUmoon@gateway/tor-sasl/gnumoon)
[20:39:18] *** Quits: cosimone (~user@2001:b07:ae5:db26:a7aa:8027:6b4e:2fb3) (Ping timeout: 265 seconds)
[20:39:26] *** Quits: mimmy (~mimmy@72.142.88.18) (Ping timeout: 256 seconds)
[20:39:49] *** Joins: beli6148 (~Thunderbi@cpe-76-175-52-6.socal.res.rr.com)
[20:39:58] *** Joins: sudomann (~sudomann@c-98-219-165-55.hsd1.md.comcast.net)
[20:40:08] *** Joins: Seiryuu (~Seiryuu@ip174-103-176-143.adsl2.static.versatel.nl)
[20:40:12] *** Joins: cosimone (~user@93-44-184-243.ip98.fastwebnet.it)
[20:40:33] *** beli6148 is now known as beli6147
[20:40:39] *** Quits: drogas (~drogas@jump2.jet.uk) (Quit: Connection closed)
[20:41:06] <grym> hmmm
[20:42:03] <grym> RavenII: what does $(which python) -V give you from a command line
[20:42:04] *** Quits: queue- (~nerd@rektnet.com) (Changing host)
[20:42:04] *** Joins: queue- (~nerd@user/queue/x-7267619)
[20:42:04] *** Quits: queue[m] (~queue-@2001:470:69fc:105::1:1892) (Changing host)
[20:42:04] *** Joins: queue[m] (~queue-@user/queue/x-7267619)
[20:42:25] *** Joins: emf (~emf@2620:10d:c090:400::5:d3e3)
[20:43:21] <RavenII> Python 2.7.18
[20:43:31] <supakeen> Ok yea, it probably requires Python 3.
[20:43:42] <supakeen> but this is weird
[20:44:04] <RavenII> 2.7 comes preinstalled apparently on macOS and there's next to no way of removing it.
[20:44:07] <grym> what if you `python=$(which python3) make` :(
[20:44:12] <RavenII> Well, not really, but it's cumbersome
[20:44:31] <supakeen> The syntax error is from Python 2 (that syntax doesn't work there) but the files its accessing are installed for Python 3.
[20:44:38] <supakeen> And there's no reason why Python 2 should be looking there at all.
[20:44:43] <supakeen> Which is what is confusing me :)
[20:44:45] <grym> yeah, how py2 is seeing 3.10's site at all is weird to me
[20:45:12] *** Quits: ArtfulDodger (~ArtfulDod@147.210.204.164) (Quit: Leaving)
[20:45:20] <RavenII> Oh, that might've been because I installed python3.10 using the package from their site, and then added the pythonpath?
[20:45:37] *** Quits: cthulchu (~Cthulchu@193.110.78.38) (Read error: No route to host)
[20:45:39] <supakeen> Oh. Yes.
[20:45:42] <supakeen> That'll do that.
[20:45:52] <RavenII> (still in the infant stages of learning)
[20:46:16] <supakeen> Setting PYTHONPATH adds that path to where it imports from, which means Python 2 is now importing stuff installed for Python 3, it's not good.
[20:46:18] <SnoopJ> PYTHONPATH is pretty evil
[20:46:36] <supakeen> RavenII: In that makefile, what do the `python` commands look like are they named `python` or `python3`?
[20:46:46] <RavenII> One sec
[20:46:57] <supakeen> And are those both (or just one) on your $PATH (check with `which python`, `which python3`, etc)
[20:47:16] *** Joins: cthulchu (~Cthulchu@193.110.78.38)
[20:47:31] *** Joins: topside (~topside@ip68-226-238-34.lf.br.cox.net)
[20:48:40] *** Joins: renlo (~Renlo_Ren@pool-108-14-112-182.nycmny.east.verizon.net)
[20:50:31] *** Joins: arinov (~arinov@213.194.126.155)
[20:51:33] <RavenII> I don't see any reference to python....
[20:51:54] *** Quits: cthulchu (~Cthulchu@193.110.78.38) (Ping timeout: 256 seconds)
[20:52:09] <b3z> SnoopJ: what do you use instead of PYTHONPATH?
[20:52:33] <supakeen> RavenII: I sadly don't have more time to dive into it but it's executing Python somewhere and likely selecting the wrong one.
[20:52:42] <supakeen> e.g. `python` instead of `python3` or vice versa
[20:52:44] *** Joins: trampel (~trampel@2601:602:9c00:921:cf97:e543:d68f:5867)
[20:52:50] <RavenII> All good, As long as I know which route to go, I'll do some digging
[20:52:54] <SnoopJ> b3z, I install packages into the site of the interpreter I'm using
[20:52:56] *** Joins: cthulchu (~Cthulchu@193.110.78.38)
[20:53:15] *** Quits: xardas (~xardas@149.233.51.127) (Quit: Client closed)
[20:53:16] <SnoopJ> b3z, there is one package we use at work that requires using PYTHONPATH, so I do that, but I complain about it the whole time :)
[20:53:22] *** Joins: rya (~ry@user/rya)
[20:54:10] *** Quits: johnjay (~pi@192.142.100.50) (Ping timeout: 256 seconds)
[20:54:25] *** Joins: withered_wolf (~withered_@1437135-v103.1561-static.stchilaa.metronetinc.net)
[20:54:36] *** Quits: mrwick (~mrwick@user/mrwick) (Ping timeout: 265 seconds)
[20:54:41] <SnoopJ> b3z, please ask your question to the channel
[20:54:52] <SnoopJ> (more people see it that way)
[20:55:12] <b3z> How do you install them into site? So you know a good article about it?
[20:55:42] *** Quits: kostkon_ (~androirc@2.142.66.94.static.otenet.gr) (Quit: AndroIRC - Android IRC Client ( http://www.androirc.com ))
[20:56:51] <SnoopJ> b3z, if the software is a package, the PyPA has a nice tutorial: https://packaging.python.org/tutorials/installing-packages/
[20:57:07] <SnoopJ> even shorter: usually you `pip install` something
[20:57:27] *** Joins: gustik (~gustik@2a01:c844:240a:de20:3606:7339:bc88:b5f5)
[20:58:50] *** Quits: daoudr (~daoudr@xdsl-31-164-222-159.adslplus.ch) (Quit: Leaving)
[20:58:51] *** Joins: Abrax- (~Abrax@user/abrax)
[20:59:07] *** Joins: mimmy (~mimmy@72.142.88.18)
[20:59:35] *** Quits: cthulchu (~Cthulchu@193.110.78.38) (Read error: Connection reset by peer)
[21:00:20] *** Joins: cthulchu (~Cthulchu@193.110.78.38)
[21:00:47] *** Joins: stewie925 (~stewie925@2600:1702:44f0:35c0:1cd1:1df9:4049:aaac)
[21:02:33] *** Quits: Abrax (~Abrax@user/abrax) (Ping timeout: 268 seconds)
[21:02:57] *** Joins: guenhael (~Thunderbi@aaubervilliers-652-1-290-168.w82-121.abo.wanadoo.fr)
[21:04:04] *** Joins: vlm (~vlm@user/vlm)
[21:04:45] *** Quits: rickybob (rickybob@gateway/vpn/protonvpn/rickybob) (Ping timeout: 265 seconds)
[21:04:56] *** Quits: cthulchu (~Cthulchu@193.110.78.38) (Ping timeout: 256 seconds)
[21:05:02] *** Quits: jonaskabrink (~jonaskabr@ip1f12b838.dynamic.kabel-deutschland.de) (Quit: jonaskabrink)
[21:06:07] *** Joins: magla (~gelignite@55d4e1d7.access.ecotel.net)
[21:07:29] *** Quits: sudomann (~sudomann@c-98-219-165-55.hsd1.md.comcast.net) (Ping timeout: 268 seconds)
[21:09:06] *** Quits: carl-- (~carl-@c-138ee555.02-180-73746f39.bbcust.telenor.se) (Ping timeout: 265 seconds)
[21:09:20] *** Quits: tsaka__ (~torstein@31.4.150.3) (Ping timeout: 268 seconds)
[21:10:37] *** Quits: tobybl (~tobybl@213.31.134.235) (Remote host closed the connection)
[21:12:29] *** Quits: trace987 (~trace@ip5b429941.dynamic.kabel-deutschland.de) (Ping timeout: 265 seconds)
[21:12:49] *** Joins: merijn (~merijn@83-160-49-249.ip.xs4all.nl)
[21:13:02] *** Joins: cthulchu (~Cthulchu@193.194.107.250)
[21:14:17] *** Quits: raxor2k (~raxor2k@158.39.193.253) (Remote host closed the connection)
[21:15:28] *** Joins: xardas (~xardas@149.233.51.127)
[21:15:59] *** Quits: Ergo^ (~ergo@91.238.59.144) (Remote host closed the connection)
[21:18:04] *** Quits: waynew (~wayne@user/waynew) (Quit: lynx gopher://gopher.waynewerner.com)
[21:18:04] *** Quits: rindolf (~shlomif@2a0d:6fc2:4bb1:500:6b1e:2524:3d70:36ec) (Read error: Connection reset by peer)
[21:18:15] <dude-x> what's a good library for prompting people (like fancy wrappers on input()) to write a simple command line uitlity
[21:18:58] <grym> dude-x: inquirer, possibly
[21:19:06] <grym> or prompt_toolkit
[21:19:33] *** Joins: xkuru (~xkuru@user/xkuru)
[21:20:45] *** Joins: PoroCYon (~poro@ptr-7sxslx38xaqf7gugl5c.18120a2.ip6.access.telenet.be)
[21:20:48] *** Quits: arti (~arti@193.40.103.195) (Ping timeout: 256 seconds)
[21:21:16] *** Joins: Hanii (~textual@2a00:23c5:c587:6d00:15c:c5ab:6126:732f)
[21:22:18] *** Quits: Andrynet (~Andrey@186.46.204.193) (Ping timeout: 268 seconds)
[21:22:41] <dude-x> i was thinking prompt toolkit but it feels a bit heavy weight since it does so much more
[21:22:48] <dude-x> I'll look into inquirer
[21:22:56] *** Joins: Payam (~Payam@c83-250-236-236.bredband.tele2.se)
[21:23:03] *** Joins: rindolf (~shlomif@2a0d:6fc2:4bb1:500:6b1e:2524:3d70:36ec)
[21:23:43] <grym> it's quite cute i think
[21:23:45] <grym> i like it
[21:23:57] *** Joins: Andrynet (~Andrey@186.46.204.193)
[21:24:04] *** Quits: CyDefect (~troll@213.55.224.219) (Quit: Verlassend)
[21:25:26] *** Quits: mimmy (~mimmy@72.142.88.18) (Quit: WeeChat 3.3)
[21:25:51] *** Quits: stewie925 (~stewie925@2600:1702:44f0:35c0:1cd1:1df9:4049:aaac) (Quit: Client closed)
[21:26:02] *** Quits: zepolen (~zepolen@2a02:587:8613:79af:cd62:f45a:8a62:998d) (Ping timeout: 240 seconds)
[21:27:25] *** Joins: elwoodpd (~elwoodpd@host-92-8-65-11.as13285.net)
[21:27:29] *** Joins: sudomann (~sudomann@c-98-219-165-55.hsd1.md.comcast.net)
[21:27:37] *** Joins: matsaman (~matsaman@user/matsaman)
[21:27:41] *** Joins: fofoni (~fofoni@user/fofoni)
[21:27:46] <elwoodpd> Hello I am trying to set fastapi up on a remote server using nginx
[21:27:57] <elwoodpd> with some html pages mixed in
[21:28:15] <elwoodpd> and url_for() returns a url with 127.0.0.1 in it
[21:28:24] <elwoodpd> anyone know where I need to set the proper hostname?
[21:28:29] *** Quits: Tas-sos (~Tas-sos@ppp046176221197.access.hol.gr) (Quit: leaving)
[21:28:32] *** Quits: DnzAtWrk (~DnzAtWrk@mobile-access-567343-143.dhcp.inet.fi) (Read error: Connection reset by peer)
[21:28:55] *** Joins: stewie925 (~stewie925@2600:1702:44f0:35c0:dd2:e15e:f04e:1690)
[21:29:24] *** Quits: cmbengue (~Thunderbi@207.191.249.160) (Quit: Thanks, see you later.)
[21:30:48] <han-solo> `rich` seems nice, not sure if it's an alternative to prompt toolkit though
[21:30:59] <matsaman> elwoodpd: you request the external domain/IP and it returns 127.0.0.1?
[21:31:06] *** Joins: cmbengue (~Thunderbi@207.191.249.160)
[21:31:12] <SnoopJ> han-solo, it's built on top of it
[21:31:15] <SnoopJ> IIRC
[21:31:30] <han-solo> SnoopJ: oh, cool
[21:31:37] *** Joins: arti (~arti@2001:bb8:4008:2020::f)
[21:31:50] <elwoodpd> in my jinja2 template I put {{ url_for('static',path='blah.css')}}
[21:32:09] <elwoodpd> and it puts http://127.0.0.1:8000/static/blah.css
[21:32:11] <elwoodpd> in the source
[21:32:24] <elwoodpd> which is no good as it is behind nginx
[21:32:33] *** Quits: Klinda (~superleag@user/klinda) (Quit: Konversation terminated!)
[21:32:40] <Ninpo> are you proxying to runserver via nginx?
[21:32:53] *** Joins: Klinda (~superleag@user/klinda)
[21:33:05] <elwoodpd> proxying to uvicorn
[21:33:38] *** Quits: hyskaru (~hyskaru@user/hyskaru) (Quit: hyskaru)
[21:33:44] <dav1d> random guesses, wrong host header, X-Forwarded-* headers not set?
[21:33:54] <matsaman> elwoodpd: think you want to read the fastapi docs on serving static files
[21:33:58] *** Joins: fedenix (~fedenix@gateway/tor-sasl/fedenix)
[21:34:31] <matsaman> elwoodpd: this looks similar to your situation: https://dev.to/fastapitutorial/serving-static-files-in-fastapi-4kjm
[21:34:41] <SnoopJ> the docs don't seem to explain what needs to be set
[21:34:45] <han-solo> SnoopJ: https://github.com/willmcgugan/rich/blob/master/pyproject.toml#L28 # i couldn't find any reference to prompt_toolkit. I maybe missing something
[21:35:33] <SnoopJ> han-solo, my memory appears to be faulty!
[21:35:36] <pystardust> would it be possilbe to decorate url_for to replace it with the domain name?
[21:35:40] *** Quits: trampel (~trampel@2601:602:9c00:921:cf97:e543:d68f:5867) (Quit: Leaving)
[21:35:54] <SnoopJ> possible? yes. likely the wrong way to do it, though
[21:35:59] <han-solo> SnoopJ: ah ':)
[21:36:02] *** Quits: Adoi (~Adoi@user/adoi) (Ping timeout: 240 seconds)
[21:36:53] <pystardust> change the library code for urlfor :P by hardcoding domain name (sorry this is stupid)
[21:36:58] <matsaman> pystardust: you could do all sorts of things, but I think the main problem is static files serving hasn't been setup, despite being desired to
[21:37:27] <SnoopJ> matsaman, I think they're serving just fine, but the URL produced doesn't use the hostname
[21:37:41] <pystardust> yeah, i think the same ^
[21:37:47] <elwoodpd> matsaman, I have static files working fine on /static/
[21:37:50] <jinsun> SnoopJ: you might be remembering textual which is built on top of rich
[21:37:54] <elwoodpd> it is just in templates
[21:37:56] <SnoopJ> jinsun, yea, probably
[21:38:40] <elwoodpd> using url_for that I have issues
[21:38:54] <matsaman> elwoodpd: your CSS isn't static?
[21:39:10] <matsaman> oh okay so you might be using this for not just CSS
[21:39:15] <elwoodpd> I don't understand the question
[21:39:31] <elwoodpd> my css is static but the url generated for it is incorrect
[21:40:04] <elwoodpd> I can access the css fine with the correct url
[21:40:08] *** Joins: linux_dream (~isaac@2a01:e0a:7:60e0:bcc4:b32c:9221:831d)
[21:40:45] *** Joins: jdmark (~jdmark@097-102-095-007.res.spectrum.com)
[21:41:20] *** Joins: onichomp (~onichomp@2806:264:4404:80fd:508c:2162:81be:15d5)
[21:41:24] *** Quits: legola (~legola@46.235.101.181) (Remote host closed the connection)
[21:41:54] *** Quits: linux_dream (~isaac@2a01:e0a:7:60e0:bcc4:b32c:9221:831d) (Client Quit)
[21:41:58] *** Quits: onichomp (~onichomp@2806:264:4404:80fd:508c:2162:81be:15d5) (Read error: Connection reset by peer)
[21:42:31] *** Joins: legola (~legola@46.235.101.181)
[21:42:36] *** Joins: onichomp (~onichomp@2806:264:4404:80fd:508c:2162:81be:15d5)
[21:43:21] *** Quits: cthulchu (~Cthulchu@193.194.107.250) (Read error: Connection reset by peer)
[21:44:02] *** Quits: sudomann (~sudomann@c-98-219-165-55.hsd1.md.comcast.net) (Ping timeout: 256 seconds)
[21:44:07] *** Joins: cthulchu (~Cthulchu@193.194.107.250)
[21:45:15] <matsaman> elwoodpd: you're requesting from the production address and it's using 127.0.0.1? Or are you requesting from localhost?
[21:45:46] <elwoodpd> when it is running remotely behind nginx
[21:45:53] <elwoodpd> it returns 127...
[21:46:07] *** Quits: renlo (~Renlo_Ren@pool-108-14-112-182.nycmny.east.verizon.net) (Quit: WeeChat 3.3)
[21:46:20] *** Quits: merijn (~merijn@83-160-49-249.ip.xs4all.nl) (Ping timeout: 268 seconds)
[21:46:53] *** Quits: CaryHartline (~CaryHartl@2603-8080-6a0e-8d88-a5f1-5281-6a38-5d1d.res6.spectrum.com) (Quit: My iMac has gone to sleep. ZZZzzz…)
[21:47:27] *** Quits: vladoski (~vladoski@2001:b07:add:d406:82ff:c663:9b1d:a681) (Remote host closed the connection)
[21:47:34] *** Quits: legola (~legola@46.235.101.181) (Ping timeout: 268 seconds)
[21:47:46] <SnoopJ> elwoodpd, I think your question is about how this works in starlette. There's some material about how to configure your routing around a particular hostname here, but I'm not sure if there's a way to influence just how it's resolved for url_for(): https://github.com/encode/starlette/blob/master/docs/routing.md#host-based-routing
[21:48:18] *** Joins: buzzard (~buzzard@84.247.50.51)
[21:48:24] *** Quits: andrewSC (~andrewSC@archlinux/trusteduser/andrewSC) (Quit: WeeChat 3.3)
[21:48:41] *** Joins: LuxuryMode (uid91005@ilkley.irccloud.com)
[21:48:49] <SnoopJ> (FastAPI is a subclass of Starlette)
[21:49:04] <Ninpo> elwoodpd: can you share your nginx config
[21:49:46] *** Quits: ubert (~Thunderbi@2a02:8109:9880:303c:e6b3:18ff:fe83:8f33) (Remote host closed the connection)
[21:49:50] <Ninpo> I just found my template for when I was tooling around with fastapi ages ago
[21:51:02] <Ninpo> https://bpa.st/S4JQ I have these directives in my server block
[21:51:25] <SnoopJ> the `servers` option to the constructor might influence this behavior: https://fastapi.tiangolo.com/advanced/behind-a-proxy/#additional-servers
[21:51:28] <matsaman> such complicated systems =)
[21:51:32] <buzzard> does the python interpreter evaluate a conditional statement every time it is reached in a loop even if it is impossible for the conditional expression to change its value inside of the loop?
[21:52:06] *** Joins: thiras (~thiras@user/thiras)
[21:52:09] <SnoopJ> buzzard, if the expression can be worked out at compile time (i.e. `True or False` is unambiguously True), it will fold it. Otherwise, yes, it is executed every time.
[21:52:10] <han-solo> elwoodpd: as someone above mentioned, are the `X-Forwarded-For` and friends set ?
[21:52:19] <SnoopJ> han-solo, I don't think url_for() cares about those
[21:52:34] *** Joins: zebrag (~chris@user/zebrag)
[21:52:45] *** Joins: ttree (~ttree0@c-73-239-62-159.hsd1.wa.comcast.net)
[21:52:46] <han-solo> in the case of fastapi, i think they get the full url ? instead of the relative one ?
[21:52:58] <SnoopJ> it's behavior inherited from Starlette
[21:53:21] <han-solo> https://github.com/encode/starlette/issues/538#issuecomment-548726669 # not sure if this
[21:53:27] <SnoopJ> the url_for() you use in templates is this: https://github.com/encode/starlette/blob/master/starlette/templating.py#L66-L68
[21:53:42] *** Quits: rany (~rany@user/rany) (Remote host closed the connection)
[21:54:03] *** Quits: JayDoubleu (~jaydouble@2001:470:69fc:105::1:371a) (Quit: issued !quit command)
[21:55:59] <SnoopJ> but yea, maybe it's uvicorn config instead? I don't really grok it from the glances I took here
[21:56:02] *** Quits: Skyfire (~pyon@user/pyon) (Ping timeout: 240 seconds)
[21:56:05] *** Quits: aphysically (~aphysical@user/aphysically) (Quit: aphysically)
[21:56:15] *** Quits: Hanii (~textual@2a00:23c5:c587:6d00:15c:c5ab:6126:732f) (Quit: Textual IRC Client: www.textualapp.com)
[21:56:55] <SnoopJ> passing `servers=[...]` might be more for routing in the case where a single WSGI server might be accessed by multiple hostnames
[21:57:15] *** Quits: Andrynet (~Andrey@186.46.204.193) (Quit: leaving)
[21:57:43] *** Joins: aphysically (~aphysical@user/aphysically)
[21:58:41] *** Joins: Andrynet (~Andrey@186.46.204.193)
[21:58:47] <buzzard> SnoopJ: thanks
[21:59:33] <SnoopJ> buzzard, a good rule of thumb is that if an expression includes a name, the runtime is going to check what the name is referring to *at runtime*
[21:59:54] <SnoopJ> `True or False` is unambiguous, but `foo or False` is not because we don't know until runtime what (if anything!) `foo` points at
[22:00:32] *** Quits: defjam (~eb0t@90.210.93.143) (Ping timeout: 240 seconds)
[22:00:56] <b3z> How can I have the right python bin set in every conda env? Do I always have to call the envs py bin with the full path?
[22:01:22] *** Joins: Ecophobia (~Ecophobia@mobile-access-2e8446-248.dhcp.inet.fi)
[22:01:26] <buzzard> SnoopJ: right.  wasn't sure whether the compiler is able to look at a conditional inside of a loop and determine that the value will not change throughout the duration of that loop's execution.
[22:01:31] <b3z> Do I have to use something like pyenv or is there a feature for this?
[22:01:43] <buzzard> did a few websearches but didn't come up with much info
[22:02:08] *** Quits: Ecophobia (~Ecophobia@mobile-access-2e8446-248.dhcp.inet.fi) (Client Quit)
[22:02:27] *** Joins: FluffyMask (~masque@user/fluffymask)
[22:02:42] *** Joins: defjam (~eb0t@90.198.60.224)
[22:03:11] *** Quits: nortoh (~nortoh@user/nortoh) (Quit: this is not importent)
[22:03:40] <Staunch> does anyone know why mypy complains about `@dataclass(kw_only=True)`?
[22:03:44] <matsaman> b3z: there are utilities to automatically swap out paths for you, but you'll still basically be doing that, yeah
[22:04:04] <b3z> matsaman: so i go with pyenv?
[22:04:04] <PoroCYon> hi, I'm working on a tool to more or less merge multiple files, and I'm trying to find a good way to have a good CLI interface for this (using argparse). each input file needs some extra info/attributes, so I'd think it'd need a variable number of fixed sets of arguments (eg. `myprogram input1.bin --offset 1 --foo bar input2.bin --offset 2 --baz qux`, the first --offset and --foo being
[22:04:04] <PoroCYon> menat for input1.bin, etc.). I don't really know how to make argparse grok this, does anyone have any ideas? (or maybe other ways to specify these options in a way argparse can work with)
[22:04:16] <b3z> matsaman: https://github.com/pyenv/pyenv
[22:04:20] <Staunch> mypy says "No overload variant of `dataclass` matches argument type `bool`" when we use `@dataclass(kw_only=True)`
[22:04:42] <matsaman> b3z: if that's what you want =)
[22:04:51] <b3z> matsaman: you have a better suggestion?
[22:05:07] <b3z> matsaman: I have no idea so please let me know what you prefer.
[22:05:15] <matsaman> b3z: it's a personal preference
[22:05:18] *** Quits: rindolf (~shlomif@2a0d:6fc2:4bb1:500:6b1e:2524:3d70:36ec) (Quit: Shlomi Fish ("Rindolf") has left the server. “Chuck Norris was challenged to fight the world, and accepted. He bet on himself, won, and collected the bet money.”)
[22:05:26] <aphysically> when I'm making arrays of commandline arguments of -flag val I normally #fmt off black so I can have stuff on the same line but I wonder if I should just *("-flag", "arg"), instead
[22:05:28] <b3z> matsaman: what other options are there?
[22:05:28] *** Quits: SpeakerToMeat__ (~Speaker@user/speakertomeat) (Read error: Connection reset by peer)
[22:05:36] <matsaman> I'm not usually doing so much at a time that I've ever bothered with the automatic stuff
[22:06:10] <b3z> matsaman: oh okay.
[22:06:10] *** Joins: abip20 (~abdullah@103.66.177.186)
[22:06:15] <matsaman> aphysically: should just stop using black
[22:06:24] <b3z> matsaman: what is the manual way? Changing PATH?
[22:06:29] <aphysically> :P
[22:06:30] <matsaman> either you don't want to control formatting or you do, pick one
[22:06:53] *** Quits: puff (~user@S0106d4ca6d80a83c.vs.shawcable.net) (Read error: Connection reset by peer)
[22:07:07] *** Joins: puff (~user@S0106d4ca6d80a83c.vs.shawcable.net)
[22:07:08] <matsaman> b3z: the most basic way is you make a virtualenv and activate it manually, but that's not usually for different python versions the way pyenv manages
[22:07:15] *** Quits: YuGiOhJCJ (~YuGiOhJCJ@gateway/tor-sasl/yugiohjcj) (Quit: YuGiOhJCJ)
[22:07:27] <aphysically> it's the same thing with matrices but probably the *() thing makes sense there
[22:07:37] <b3z> matsaman: I am using conda envs so that does not make sense does it?
[22:07:39] <matsaman> you can use pyenv and virtualenv and 'activate' if you wanted, just up to you
[22:07:47] <matsaman> b3z: not if you want to use conda envs, no
[22:07:47] <b3z> matsaman: thanks
[22:08:12] <matsaman> b3z: this is all about convenience, so whatever seems most convenient for you, do that
[22:08:17] *** Quits: gitesh (uid423739@ilkley.irccloud.com) (Quit: Connection closed for inactivity)
[22:08:20] *** Joins: audiobirb (~audio@user/audio)
[22:08:41] *** Joins: trace987 (~trace@ip5b429941.dynamic.kabel-deutschland.de)
[22:08:47] *** Quits: elwoodpd (~elwoodpd@host-92-8-65-11.as13285.net) (Ping timeout: 264 seconds)
[22:09:03] *** Quits: abip20 (~abdullah@103.66.177.186) (Client Quit)
[22:09:16] *** Joins: elwoodpd (~elwoodpd@host-92-8-65-11.as13285.net)
[22:09:38] <elwoodpd> Ninpo, sorting out my nginx headers did sort the problem!
[22:09:49] *** Joins: CaryHartline (~CaryHartl@2603-8080-6a0e-8d88-51f4-54b3-ac18-bd1c.res6.spectrum.com)
[22:10:02] <Ninpo> excellent
[22:10:10] <elwoodpd> I would still like to be able to set url_for to just generate relative urls
[22:10:30] <elwoodpd> but that might be a problem for another day haha
[22:10:52] <han-solo> there's `url_path_for` i'm reading
[22:11:00] *** Quits: mallkrampus (~mallkramp@178.238.11.48) (Ping timeout: 268 seconds)
[22:11:48] *** Joins: dextercd (~dexter@2a02-a450-f25d-1-76d4-35ff-fefe-34c.fixed6.kpn.net)
[22:11:55] *** Quits: RangerBobVA (~bmaddox@user/rangerbobva) (Quit: Leaving)
[22:12:07] *** Joins: nomic (~nomic@185.217.117.59)
[22:12:18] *** Joins: abip20 (~abdullah@103.66.177.186)
[22:12:26] <SnoopJ> han-solo, I don't think it's exposed to the templating system
[22:12:58] <han-solo> er, yeah
[22:13:04] <elwoodpd> Is that in the starlette docs?
[22:13:27] <han-solo> fastapi is built ontop of starlette, so most of the things you can just check there
[22:13:30] *** Quits: Andrynet (~Andrey@186.46.204.193) (Ping timeout: 256 seconds)
[22:13:44] <han-solo> but yeah, it won't work for template it seems, welp
[22:13:50] <SnoopJ> elwoodpd, it's mentioned in the routing doc I pointed at earlier, yea
[22:14:16] *** Quits: stewie925 (~stewie925@2600:1702:44f0:35c0:dd2:e15e:f04e:1690) (Quit: Client closed)
[22:14:27] *** Joins: Viewday111 (~Viewday@user/viewday)
[22:14:47] *** Joins: darkstardevx (~darkstard@50.39.115.145)
[22:14:50] *** Joins: shabius (~shabius@2a0e:1c80:2:1022::1003)
[22:14:51] <SnoopJ> and you end up there in the end when using url_for from the template system, but there's this matter of what the hostname should actually be and I guess there isn't a great way to configure it from the application code
[22:14:53] *** Quits: Viewday11 (~Viewday@user/viewday) (Read error: Connection reset by peer)
[22:14:53] *** Viewday111 is now known as Viewday11
[22:15:00] <SnoopJ> the headers fix is probably the best one
[22:15:12] *** Quits: shabius (~shabius@2a0e:1c80:2:1022::1003) (Max SendQ exceeded)
[22:15:17] <SnoopJ> (beacuse it doesn't bake the fix into your application code)
[22:15:25] *** Joins: Andrynet (~Andrey@186.46.204.193)
[22:15:59] *** Quits: darkstardev13 (~darkstard@50.39.114.152) (Ping timeout: 264 seconds)
[22:15:59] *** Joins: shabius (~shabius@2a0e:1c80:2:1022::1003)
[22:16:03] *** Joins: hightower2 (~hightower@213.147.110.20)
[22:16:17] *** Quits: shabius (~shabius@2a0e:1c80:2:1022::1003) (Max SendQ exceeded)
[22:16:24] *** Quits: bindu (~bindu@user/bindu) (Ping timeout: 276 seconds)
[22:16:38] <han-solo> yeah
[22:16:47] <hightower2> So if I run python shell and get something like:  `TypeError: Send() takes at least 2 positional arguments (0 given)`,  is there a direct way to get function's help, or description of params it receives?
[22:16:57] <grym> hightower2: help(thatfunction)
[22:16:58] <elwoodpd> I was going to ask if there is anything particularly bad about sticking with fastapi as my project gets more html pages
[22:17:03] <hightower2> awesome, thanks
[22:17:06] <SnoopJ> hightower2, you can type `help(anyobj)` to see the object's documentation
[22:17:12] <elwoodpd> and I guess this is the kind of thing I might run into
[22:17:36] *** Quits: fikran (~fikran@user/fikran) (Ping timeout: 260 seconds)
[22:17:45] <jinsun> Staunch: it is probably because kw_only is a new feature and mypy's bundled stdlib stubs are not updated yet
[22:17:46] *** Joins: XV8 (~XV8@2601:5cb:c001:50:ec08:9207:968c:7455)
[22:17:58] <SnoopJ> elwoodpd, I think sorting this out applies to other frameworks, I came across a little bit of information about the same question for Flask when searching for other info
[22:18:03] <Staunch> jinsun: darnit, that's what i figured. Thanks, jinsun
[22:18:45] <SnoopJ> at least Starlette makes correct use of the information that gets passed along to it though
[22:19:20] *** Joins: fikran (~fikran@user/fikran)
[22:20:11] <jinsun> Staunch: it works in the latest version from the master branch https://mypy-play.net/?mypy=master&python=3.10&gist=13d07a58df55086277064bea551f9cdb, but not on any released version
[22:20:18] *** Quits: humbertowoody (~humbertow@189.236.62.65) (Ping timeout: 256 seconds)
[22:20:38] *** Joins: humbertowoody (~humbertow@189.236.62.65)
[22:20:52] *** Quits: manuels (~manuel@80.211.205.88) (Remote host closed the connection)
[22:22:11] *** Joins: SpeakerToMeat__ (~Speaker@user/speakertomeat)
[22:22:24] <Staunch> jinsun: oh, excellent. Sounds like it's on its way soon, then :D
[22:24:02] <elwoodpd> What could I read to get a better idea of what is going on with headers being passed around
[22:24:33] *** Quits: abip20 (~abdullah@103.66.177.186) (Quit: Konversation terminated!)
[22:24:42] *** Joins: linux_dream (~isaac@2a01:e0a:7:60e0:bcc4:b32c:9221:831d)
[22:24:54] <elwoodpd> Thanks everyone for your help!
[22:24:55] *** Joins: mallkrampus (~mallkramp@178.238.11.48)
[22:25:45] <jinsun> Staunch: yeah, for now just `# type: ignore[call-overload]`  I guess if you want to use it
[22:25:48] *** Quits: Andrynet (~Andrey@186.46.204.193) (Ping timeout: 268 seconds)
[22:26:26] *** Quits: onichomp (~onichomp@2806:264:4404:80fd:508c:2162:81be:15d5) (Read error: Connection reset by peer)
[22:26:48] *** Joins: jay-m126 (~jay-m@129.0.204.219)
[22:27:02] *** Joins: Andrynet (~Andrey@186.46.204.193)
[22:27:02] *** Quits: trace987 (~trace@ip5b429941.dynamic.kabel-deutschland.de) (Ping timeout: 268 seconds)
[22:27:03] *** Joins: onichomp (~onichomp@2806:264:4404:80fd:508c:2162:81be:15d5)
[22:27:14] *** Quits: elwoodpd (~elwoodpd@host-92-8-65-11.as13285.net) (Quit: Leaving)
[22:29:39] *** Quits: kdc (~kdc@196.211.197.159) (Quit: Leaving)
[22:29:49] *** Joins: sudomann (~sudomann@c-98-219-165-55.hsd1.md.comcast.net)
[22:30:44] *** Quits: mallkrampus (~mallkramp@178.238.11.48) (Ping timeout: 268 seconds)
[22:30:47] *** Quits: JimmyRustles (~Haddock@cpc119394-smal16-2-0-cust17.19-1.cable.virginm.net) (Ping timeout: 265 seconds)
[22:30:59] *** Joins: arcrin (~wbai@209.52.68.8)
[22:31:18] *** Joins: bindu (~bindu@user/bindu)
[22:31:46] *** Joins: Auron (~Auron956@user/auron)
[22:32:24] *** Quits: Memory (~user_name@user/memory) (Quit: leaving)
[22:32:28] *** Joins: stewie925 (~stewie925@2600:1702:44f0:35c0:dd2:e15e:f04e:1690)
[22:32:40] *** Joins: p-i-_ (~Ohmu@mx-ll-223.206.149-27.dynamic.3bb.co.th)
[22:32:42] *** Quits: winterflaw (~winterfla@gateway/tor-sasl/winterflaw) (Remote host closed the connection)
[22:33:14] *** Joins: winterflaw (~winterfla@gateway/tor-sasl/winterflaw)
[22:33:16] *** Joins: jmew (~jme@host-78-147-68-149.as13285.net)
[22:33:50] *** Quits: han-solo (~hanish@user/han-solo) (Quit: leaving)
[22:33:54] *** Quits: guenhael (~Thunderbi@aaubervilliers-652-1-290-168.w82-121.abo.wanadoo.fr) (Ping timeout: 256 seconds)
[22:34:14] *** Quits: sudomann (~sudomann@c-98-219-165-55.hsd1.md.comcast.net) (Ping timeout: 260 seconds)
[22:35:26] *** Quits: p-i- (~Ohmu@mx-ll-223.206.149-27.dynamic.3bb.co.th) (Ping timeout: 246 seconds)
[22:36:59] *** Joins: TuckerBrandy199 (~TuckerBra@209.87.29.242)
[22:36:59] *** Quits: TJ- (~root@about/linux/staff/tj-) (Ping timeout: 264 seconds)
[22:37:27] <TuckerBrandy199> Need some help please: https://dpaste.org/SL0D
[22:37:42] <TuckerBrandy199> I am having trouble with line10:     printResult(calCost(workArea, priceOfPaint))
[22:37:47] *** Joins: delvian (~delvian@41.13.200.36)
[22:38:01] <TuckerBrandy199> how do I have printResult use the result returned from calCost?
[22:38:17] <grym> TuckerBrandy199: try printResult(*calCost(workArea, priceOfPaint))
[22:38:19] *** Joins: TJ- (~root@about/linux/staff/tj-)
[22:38:59] *** Quits: pycurious (~Adium@user/pycurious) (Quit: Leaving.)
[22:39:23] *** Quits: Andrynet (~Andrey@186.46.204.193) (Ping timeout: 264 seconds)
[22:39:34] <jmew> what does the star do in this instance?
[22:39:38] <SnoopJ> it "unpacks" the tuple
[22:39:46] <SnoopJ> https://docs.python.org/3/tutorial/controlflow.html#tut-unpacking-arguments
[22:40:01] <TuckerBrandy199> Thank you it worked
[22:40:23] *** Quits: xrogaan (~xrogaan@user/xrogaan) (Quit: Leaving)
[22:40:41] <SnoopJ> TuckerBrandy199, does it make sense why it didn't work before?
[22:40:42] *** Joins: Andrynet (~Andrey@186.46.204.193)
[22:42:12] *** Joins: mallkrampus (~mallkramp@178.238.11.47)
[22:42:24] *** Quits: spithash (~spithash@user/spithash) (Ping timeout: 276 seconds)
[22:42:53] *** Quits: SpeakerToMeat__ (~Speaker@user/speakertomeat) (Quit: WeeChat 3.3)
[22:43:38] *** Joins: spithash (~spithash@user/spithash)
[22:44:06] *** Quits: cosimone (~user@93-44-184-243.ip98.fastwebnet.it) (Ping timeout: 256 seconds)
[22:45:35] *** Joins: betelgeuse (~betelgeus@94-225-47-8.access.telenet.be)
[22:47:52] *** Quits: leitz (~LeamHall@cpe-173-172-58-72.tx.res.rr.com) (Quit: nappy time)
[22:48:04] *** Quits: Andrynet (~Andrey@186.46.204.193) (Quit: leaving)
[22:48:30] *** Joins: tsaka__ (~torstein@31.4.150.2)
[22:48:49] <TuckerBrandy199> does python have a do while loop
[22:48:58] <bjs> TuckerBrandy199: no but it has a while loop
[22:49:03] *** Quits: Socra (~Socra@206.217.216.27) (Read error: Connection reset by peer)
[22:49:06] <bjs> TuckerBrandy199: `while True: ...; if not cond: break`
[22:49:18] *** Joins: cosimone (~user@2001:b07:ae5:db26:c24a:d20:4d91:1e20)
[22:49:22] <TuckerBrandy199> kk
[22:49:51] *** Quits: arti (~arti@2001:bb8:4008:2020::f) (Ping timeout: 268 seconds)
[22:49:53] *** Joins: greedom (~greedom@x59cc99ee.dyn.telefonica.de)
[22:50:39] *** Quits: theseb (~theseb@47-220-214-54.cnrocmta03.res.dyn.suddenlink.net) (Quit: Leaving)
[22:51:59] *** Joins: rany (~rany@user/rany)
[22:52:08] *** Joins: a6a45081-2b83 (~aditya@2601:249:4300:1296:88ec:cc73:84d4:1507)
[22:52:25] *** Joins: arti (~arti@193.40.103.195)
[22:52:35] *** Quits: Klinda (~superleag@user/klinda) (Ping timeout: 264 seconds)
[22:53:21] *** Quits: shad (~shad@user/shad) (Ping timeout: 250 seconds)
[22:54:07] *** Joins: Socra (~Socra@206.217.216.27)
[22:54:42] *** Joins: ExpiredKebab (~sgreadly@32.58.252.27.dyn.cust.vf.net.nz)
[22:55:05] *** Quits: decimuscorvinus (~jimmy@136.37.105.112) (Quit: Will return)
[22:55:42] <TuckerBrandy199>     while(workArea<0 || priceOfPaint<0): <--- i got an invalid syntax here
[22:56:20] *** Joins: decimuscorvinus (~jimmy@136.37.105.112)
[22:56:23] <SnoopJ> TuckerBrandy199, `||` isn't a thing in Python, you want `or`
[22:56:34] *** Quits: GreenResponse (~tomek@r-45-155-148-237.gpon.bialnet.pl) (Ping timeout: 256 seconds)
[22:57:10] *** Quits: RavenII (~RavenII@c-24-1-202-236.hsd1.il.comcast.net) (Quit: Client closed)
[22:57:16] *** Quits: nomic (~nomic@185.217.117.59) (Quit: Leaving)
[22:57:20] *** Quits: CaryHartline (~CaryHartl@2603-8080-6a0e-8d88-51f4-54b3-ac18-bd1c.res6.spectrum.com) (Quit: My iMac has gone to sleep. ZZZzzz…)
[22:57:31] <TuckerBrandy199> oh
[22:57:34] *** Joins: nomic (~nomic@185.217.117.59)
[22:57:52] *** Quits: zer0bitz (~zer0bitz@2001:2003:f6e3:7400:d15f:a494:a911:62f8) (Ping timeout: 268 seconds)
[22:57:59] <SnoopJ> similarly, `and` is the equivalent of `&&`
[22:58:33] *** Quits: y1n (~y1n@77.119.165.37.wireless.dyn.drei.com) (Ping timeout: 250 seconds)
[22:58:50] *** Joins: ad1 (~ad@186.46.204.193)
[22:59:01] *** Joins: parv (~quass@user/parv)
[23:00:28] *** Joins: junktext (~junktext@gateway/vpn/pia/junktext)
[23:03:02] *** Quits: greedom (~greedom@x59cc99ee.dyn.telefonica.de) ()
[23:03:12] *** Joins: mimmy (~mimmy@72.142.88.18)
[23:03:17] *** Joins: andrewSC (~andrewSC@archlinux/trusteduser/andrewSC)
[23:03:44] *** Joins: Klinda (~superleag@user/klinda)
[23:04:28] *** Joins: greedom (~greedom@x59cc99ee.dyn.telefonica.de)
[23:04:32] *** Quits: ghost43 (~ghost43@gateway/tor-sasl/ghost43) (Remote host closed the connection)
[23:05:54] *** Joins: ghost43 (~ghost43@gateway/tor-sasl/ghost43)
[23:07:03] *** Joins: CaryHartline (~CaryHartl@2603-8080-6a0e-8d88-51f4-54b3-ac18-bd1c.res6.spectrum.com)
[23:07:09] *** Joins: dbear (~david@mesa.ha.school)
[23:09:15] *** Joins: GreenResponse (~tomek@r-45-155-148-237.gpon.bialnet.pl)
[23:09:21] *** Joins: trace987 (~trace@ip5b429941.dynamic.kabel-deutschland.de)
[23:10:34] *** Joins: humberto1 (~humbertow@189.236.62.65)
[23:11:12] *** Joins: mimmy_ (~mimmy@37.19.213.65)
[23:11:42] *** Quits: joris1 (~joris@195.123.218.123) (Quit: WeeChat 2.3)
[23:11:42] *** Quits: adeliktas (~adeliktas@200116b82203d9004c14741036ac2e75.dip.versatel-1u1.de) (Quit: Client closed)
[23:11:43] *** Quits: decimuscorvinus (~jimmy@136.37.105.112) (Quit: Will return)
[23:11:52] *** Quits: humbertowoody (~humbertow@189.236.62.65) (Ping timeout: 256 seconds)
[23:13:25] *** Joins: thevishy (~thevishy@2405:201:f005:c007:c8c1:7d4c:8a1f:6354)
[23:13:50] *** Joins: vimart (~vimart@239.218-30-62.static.virginmediabusiness.co.uk)
[23:13:54] *** Quits: mimmy (~mimmy@72.142.88.18) (Ping timeout: 260 seconds)
[23:15:43] *** Joins: djapo (~archangel@user/djapo)
[23:15:44] *** Quits: ayustae (Thunderbir@gateway/vpn/protonvpn/ayustae) (Ping timeout: 265 seconds)
[23:16:00] <CrtxReavr> I thought the ipaddress module was part of base.
[23:18:07] *** Quits: matsaman (~matsaman@user/matsaman) (Quit: leaving)
[23:18:35] <Peng> It is, in a sufficiently new version
[23:18:54] <Peng> If you mean the stdlib
[23:18:59] *** Quits: vulpes_vulpes (~vulpes_vu@62-64-204-12.dynamic.dial.as9105.com) (Remote host closed the connection)
[23:19:02] <CrtxReavr> Need it for 2.7 for $stupid_reasons
[23:19:11] *** Quits: arcrin (~wbai@209.52.68.8) (Quit: Leaving)
[23:20:15] *** Quits: CaryHartline (~CaryHartl@2603-8080-6a0e-8d88-51f4-54b3-ac18-bd1c.res6.spectrum.com) (Quit: My iMac has gone to sleep. ZZZzzz…)
[23:21:04] *** Quits: xardas (~xardas@149.233.51.127) (Quit: Client closed)
[23:21:25] *** Joins: CaryHartline (~CaryHartl@2603-8080-6a0e-8d88-51f4-54b3-ac18-bd1c.res6.spectrum.com)
[23:21:52] *** Quits: bindu (~bindu@user/bindu) (Remote host closed the connection)
[23:24:13] *** Quits: SallyAhaj (~SallyAhaj@user/sallyahaj) (Quit: Leaving)
[23:25:08] *** Joins: wovixo (~wovixo@128.104.205.49)
[23:25:17] *** Joins: bindu (~bindu@user/bindu)
[23:25:32] *** Quits: CaryHartline (~CaryHartl@2603-8080-6a0e-8d88-51f4-54b3-ac18-bd1c.res6.spectrum.com) (Ping timeout: 240 seconds)
[23:25:51] *** Joins: weedmic (~weedmic@109-186-1-92.bb.netvision.net.il)
[23:25:58] *** Joins: adeliktas (~adeliktas@200116b82203d9004c14741036ac2e75.dip.versatel-1u1.de)
[23:27:41] <hexnewbie> CrtxReavr: There's a backport of ipaddress for Python 2
[23:28:08] *** Joins: iwkse (~iwkse@iurit.com)
[23:28:12] *** Joins: KamikazeKash (~KamikazeK@user/kamikazekash)
[23:28:20] <CrtxReavr> I hax0rd it into existance.
[23:29:04] *** Joins: ballingt (sid190590@helmsley.irccloud.com)
[23:29:06] *** Joins: whatsupdoc (uid509081@hampstead.irccloud.com)
[23:29:47] *** Quits: LuksNuke (~LuksNuke@gateway/tor-sasl/luksnuke) (Remote host closed the connection)
[23:33:39] <iwkse> hi, I am using alembic but so far it seems it's not creating any table. I just see the alembic_version table created with the revision inside. This is the content of the test table and the output I get, https://bpa.st/E7RQ
[23:34:01] *** Joins: ayustae (Thunderbir@gateway/vpn/protonvpn/ayustae)
[23:34:21] *** Quits: roxfan (roxfan@29.38-136-217.adsl-dyn.isp.belgacom.be) (Remote host closed the connection)
[23:34:56] *** Joins: roxfan (roxfan@29.38-136-217.adsl-dyn.isp.belgacom.be)
[23:35:54] *** Joins: Skyfire (~pyon@user/pyon)
[23:36:07] *** Quits: KamikazeKash (~KamikazeK@user/kamikazekash) (Quit: Connection closed)
[23:39:00] *** Joins: kyooo (~kyooo@2a02:a31d:a13c:5600:559d:f748:905d:cda9)
[23:39:46] *** Joins: sudomann (~sudomann@c-98-219-165-55.hsd1.md.comcast.net)
[23:40:10] *** Joins: jonaskabrink (~jonaskabr@ip1f12b838.dynamic.kabel-deutschland.de)
[23:40:40] *** Quits: veegee (~veegee@ipagstaticip-469c2903-2b07-6dc3-3bc2-98748da5ca77.sdsl.bell.ca) (Remote host closed the connection)
[23:41:24] *** Joins: veegee (~veegee@ipagstaticip-469c2903-2b07-6dc3-3bc2-98748da5ca77.sdsl.bell.ca)
[23:42:20] *** Joins: merijn (~merijn@83-160-49-249.ip.xs4all.nl)
[23:42:41] *** Quits: peterhil (~peterhil@dsl-hkibng32-54fb56-2.dhcp.inet.fi) (Remote host closed the connection)
[23:43:41] *** Quits: XV8 (~XV8@2601:5cb:c001:50:ec08:9207:968c:7455) (Quit: Textual IRC Client: www.textualapp.com)
[23:44:20] *** Joins: mosh3k21 (~mosh3k21@user/mosh3k21)
[23:44:44] *** Quits: humberto1 (~humbertow@189.236.62.65) (Ping timeout: 268 seconds)
[23:44:50] *** Joins: henistein (~henistein@2001:8a0:c18a:f601:85e4:f716:c1aa:b9e3)
[23:44:55] *** Parts: henistein (~henistein@2001:8a0:c18a:f601:85e4:f716:c1aa:b9e3) ()
[23:44:58] *** Quits: onichomp (~onichomp@2806:264:4404:80fd:508c:2162:81be:15d5) (Read error: Connection reset by peer)
[23:45:10] *** Quits: sudomann (~sudomann@c-98-219-165-55.hsd1.md.comcast.net) (Ping timeout: 260 seconds)
[23:45:10] *** Quits: Klinda (~superleag@user/klinda) (Ping timeout: 260 seconds)
[23:45:10] *** Joins: humberto1 (~humbertow@189.236.62.65)
[23:45:36] *** Joins: onichomp (~onichomp@2806:264:4404:80fd:508c:2162:81be:15d5)
[23:46:14] *** audiobirb is now known as audiocat
[23:46:21] *** Quits: Mechanismus (~LabMonkey@206.255.106.67) (Read error: Connection reset by peer)
[23:46:24] *** Joins: luigibu (~luigibu@80.30.201.209)
[23:46:46] *** Joins: Mechanismus (~LabMonkey@206.255.106.67)
[23:50:28] *** Quits: akk (~akk@75.161.146.115) (Quit: +++)
[23:53:01] *** Quits: zegalch (~zegalch@178.128.75.133) (Remote host closed the connection)
[23:53:09] *** Joins: Klinda (~superleag@user/klinda)
[23:53:28] *** Quits: jonaskabrink (~jonaskabr@ip1f12b838.dynamic.kabel-deutschland.de) (Quit: jonaskabrink)
[23:53:34] *** Quits: TuckerBrandy199 (~TuckerBra@209.87.29.242) (Ping timeout: 260 seconds)
[23:53:35] *** Joins: zegalch (~zegalch@178.128.75.133)
[23:54:58] *** Quits: stewie925 (~stewie925@2600:1702:44f0:35c0:dd2:e15e:f04e:1690) (Ping timeout: 256 seconds)
[23:55:14] *** Quits: dba (uid502594@hampstead.irccloud.com) (Quit: Connection closed for inactivity)
[23:55:50] *** Quits: onichomp (~onichomp@2806:264:4404:80fd:508c:2162:81be:15d5) (Ping timeout: 268 seconds)
[23:56:04] *** Parts: PoroCYon (~poro@ptr-7sxslx38xaqf7gugl5c.18120a2.ip6.access.telenet.be) ()
[23:57:11] *** Joins: TuckerBrandy199 (~TuckerBra@209.87.29.242)
[23:57:24] *** Quits: puff (~user@S0106d4ca6d80a83c.vs.shawcable.net) (Read error: Connection reset by peer)
[23:57:28] *** Joins: jonaskabrink (~jonaskabr@ip1f12b838.dynamic.kabel-deutschland.de)
[23:57:31] <TuckerBrandy199> anyone?
[23:57:37] *** Joins: puff (~user@S0106d4ca6d80a83c.vs.shawcable.net)
[23:58:14] <TuckerBrandy199> nvm
[23:58:38] *** orangeboxcutter is now known as naranja
[23:59:19] <dman777> I have SimpleNamespace(**x) that converts a dictionary to a simplenamespace obj. However, if there is a nested dictionary it won't convert that. How could I convert recursively?
[23:59:48] *** Quits: ad1 (~ad@186.46.204.193) (Quit: WeeChat 3.3)
