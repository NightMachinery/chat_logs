[00:03:31] *** Quits: evalable6 (eva-able@2001:41d0:2:5eb5::) (Remote host closed the connection)
[00:03:31] *** Quits: linkable6 (lin-able@2001:41d0:2:5eb5::) (Remote host closed the connection)
[00:04:01] *** Joins: linkable6 (lin-able@2001:41d0:2:5eb5::)
[00:06:08] *** Joins: evalable6 (eva-able@2001:41d0:2:5eb5::)
[00:33:26] *** Joins: reportable6 (rep-able@2001:41d0:2:5eb5::)
[01:20:38] *** Quits: jcallen (quassel@user/jcallen) (Remote host closed the connection)
[01:23:46] *** Joins: jcallen (~quassel@user/jcallen)
[01:38:04] <Geth> ¦ setup-raku: 471d74b3b2 | dependabot[bot]++ (committed using GitHub Web editor) | package-lock.json
[01:38:04] <Geth> ¦ setup-raku: Bump path-parse from 1.0.6 to 1.0.7
[01:38:04] <Geth> ¦ setup-raku: 
[01:38:04] <Geth> ¦ setup-raku: Bumps [path-parse](https://github.com/jbgutierrez/path-parse) from 1.0.6 to 1.0.7.
[01:38:04] <Geth> ¦ setup-raku: - [Release notes](https://github.com/jbgutierrez/path-parse/releases)
[01:38:04] <Geth> ¦ setup-raku: - [Commits](https://github.com/jbgutierrez/path-parse/commits/v1.0.7)
[01:38:04] <Geth> ¦ setup-raku: 
[01:38:06] <Geth> ¦ setup-raku: ---
[01:38:08] <Geth> ¦ setup-raku: <…commit message has 6 more lines…>
[01:38:10] <Geth> ¦ setup-raku: review: https://github.com/Raku/setup-raku/commit/471d74b3b2
[01:38:12] <Geth> ¦ setup-raku: a52850b116 | (Shoichi Kaji)++ (committed using GitHub Web editor) | package-lock.json
[01:38:14] <Geth> ¦ setup-raku: Merge pull request #14 from Raku/dependabot/npm_and_yarn/path-parse-1.0.7
[01:38:16] <Geth> ¦ setup-raku: 
[01:38:18] <Geth> ¦ setup-raku: Bump path-parse from 1.0.6 to 1.0.7
[01:38:20] <Geth> ¦ setup-raku: review: https://github.com/Raku/setup-raku/commit/a52850b116
[01:38:50] <Geth> ¦ setup-raku/dependabot/npm_and_yarn/ws-5.2.3: c6ec7be8e7 | dependabot[bot]++ (committed using GitHub Web editor) | package-lock.json
[01:38:50] <Geth> ¦ setup-raku/dependabot/npm_and_yarn/ws-5.2.3: Bump ws from 5.2.2 to 5.2.3
[01:38:50] <Geth> ¦ setup-raku/dependabot/npm_and_yarn/ws-5.2.3: 
[01:38:50] <Geth> ¦ setup-raku/dependabot/npm_and_yarn/ws-5.2.3: Bumps [ws](https://github.com/websockets/ws) from 5.2.2 to 5.2.3.
[01:38:50] <Geth> ¦ setup-raku/dependabot/npm_and_yarn/ws-5.2.3: - [Release notes](https://github.com/websockets/ws/releases)
[01:38:50] <Geth> ¦ setup-raku/dependabot/npm_and_yarn/ws-5.2.3: - [Commits](https://github.com/websockets/ws/compare/5.2.2...5.2.3)
[01:38:50] <Geth> ¦ setup-raku/dependabot/npm_and_yarn/ws-5.2.3: 
[01:38:52] <Geth> ¦ setup-raku/dependabot/npm_and_yarn/ws-5.2.3: ---
[01:38:54] <Geth> ¦ setup-raku/dependabot/npm_and_yarn/ws-5.2.3: <…commit message has 6 more lines…>
[01:38:56] <Geth> ¦ setup-raku/dependabot/npm_and_yarn/ws-5.2.3: review: https://github.com/Raku/setup-raku/commit/c6ec7be8e7
[01:38:58] <Geth> ¦ setup-raku: dependabot[bot]++ created pull request #15: Bump ws from 5.2.2 to 5.2.3
[01:39:00] <Geth> ¦ setup-raku: review: https://github.com/Raku/setup-raku/pull/15
[01:51:06] <[Coke]> why is the license on setup-raku MIT and not Artistic 2?\
[01:53:13] <[Coke]> ls
[01:53:17] <[Coke]> (oops)
[01:59:11] <[Coke]> It would be nice if, when running "perl Configure.pl" in rakudo, and generating moar/nqp, if it dropped a config.status in all 3 source dirs, not just rakudo
[02:00:32] <vrurg> [Coke]: no idea why MoarVM doesn't, but nqp does it.
[02:01:17] <[Coke]> vrurg++
[02:02:20] <vrurg> raku.org is down.
[02:02:58] <vrurg> Back up again. That was quick. :)
[02:03:28] <gfldex> doesnt work for me
[02:03:29] <[Coke]> I don't see a config.status in my nqp directory
[02:04:01] <[Coke]> (of course, I'm getting a failure atm)
[02:04:20] <gfldex> Looks like raku.org drops requests.
[02:08:28] <rba> server is running. seems to be that the connection to the webhosting server is getting down/up a few times.
[02:10:15] *** Joins: melezhik (~melezhik@174.128.60.162)
[02:10:18] <melezhik> Hi all.
[02:10:38] <melezhik> I've added k8s checks to the Bird - https://github.com/melezhik/bird/blob/master/documentation/dsl.md#k8s-deployment-has-dplnamespacecntconfig
[02:10:43] <melezhik> if someone interested
[02:14:35] <vrurg> [Coke]: what kind of failures? Configure.pl only creates config.status on success, if memory serves me right.
[02:15:08] <[Coke]> doesn't matter, deleted my checkout and started over, no more failures.
[02:15:18] <[Coke]> (will report out on if there is a config.status or not.)
[02:15:21] <vrurg> rba: right, looks like it is flapping.
[02:15:34] <[Coke]> (looks like, yes)
[02:39:47] <[Coke]> is there a way to run a file as if it were a bat file without renaming it?
[02:44:13] <Geth> ¦ Raku-Steering-Council/RSC_code: 524c073303 | (Daniel Sockwell)++ | 3 files
[02:44:13] <Geth> ¦ Raku-Steering-Council/RSC_code: Clarify Raku Steering Council Code
[02:44:13] <Geth> ¦ Raku-Steering-Council/RSC_code: 
[02:44:13] <Geth> ¦ Raku-Steering-Council/RSC_code: The current Raku Steering Council Code combines details of the initial
[02:44:13] <Geth> ¦ Raku-Steering-Council/RSC_code: proposal for adopting the code with actual implementation details.
[02:44:13] <Geth> ¦ Raku-Steering-Council/RSC_code: This commit revises the Code to remove the portions that are not
[02:44:13] <Geth> ¦ Raku-Steering-Council/RSC_code: relevant post-adoption (but preserves the initial proposal for future
[02:44:15] <Geth> ¦ Raku-Steering-Council/RSC_code: reference).  It also provides definitions for a few terms that were
[02:44:17] <Geth> ¦ Raku-Steering-Council/RSC_code: <…commit message has 14 more lines…>
[02:44:19] <Geth> ¦ Raku-Steering-Council/RSC_code: review: https://github.com/Raku/Raku-Steering-Council/commit/524c073303
[02:47:06] *** Quits: leedo (leedo@45.79.148.143) (Remote host closed the connection)
[02:47:24] <Geth> ¦ Raku-Steering-Council: codesections++ created pull request #44: Clarify Raku Steering Council Code
[02:47:24] <Geth> ¦ Raku-Steering-Council: review: https://github.com/Raku/Raku-Steering-Council/pull/44
[02:49:24] <[Coke]> I'm not an active member?
[02:50:38] *** Joins: leedo (leedo@2600:3c03::f03c:91ff:fe91:982f)
[02:55:02] <[Coke]> ah. I did not vote in the initial election.
[02:58:10] <moon-child> topic says 'CONFERENCE TIME', but it is no longer conference time!
[03:04:35] *** Quits: melezhik (~melezhik@174.128.60.162) (Quit: Connection closed)
[03:04:40] *** ChanServ sets mode: +o lizmat
[03:05:02] *** lizmat changes topic to '🦋 Welcome to the MAIN() IRC channel of the Raku Programming Language (https://raku.org).  This channel is logged for the purpose of keeping a history about its development | evalbot usage: 'm: say 3;' or /msg camelia m: ... | Log inspection is still being worked out'
[03:05:12] <lizmat> moon-child++   # tah
[03:05:22] <lizmat> # thanks for the nudge
[03:05:32] <moon-child> :)
[03:05:34] *** ChanServ sets mode: -o lizmat
[03:06:56] <moon-child> perhaps there should be a 'topic bot' that can schedule changes
[03:06:57] <moon-child> topical6?
[03:07:10] <moon-child> 'topicable' is more consistent but sounds more awkward
[03:08:43] *** Quits: silug (~silug@068-188-018-154.biz.spectrum.com) (Quit: The Lounge - https://thelounge.chat)
[03:41:13] <El_Che> weekly: https://www.debian.org/News/2021/20210812?utm_source=dlvr.it&utm_medium=twitter (death raku community member, used to pkg raku in debian)
[03:41:14] <notable6> El_Che, Noted! (weekly)
[03:43:11] *** Quits: Xliff (~Cliff@pool-71-255-227-73.washdc.east.verizon.net) (Quit: Leaving)
[03:43:16] <Geth> ¦ setup-raku: c6ec7be8e7 | dependabot[bot]++ (committed using GitHub Web editor) | package-lock.json
[03:43:16] <Geth> ¦ setup-raku: Bump ws from 5.2.2 to 5.2.3
[03:43:16] <Geth> ¦ setup-raku: 
[03:43:16] <Geth> ¦ setup-raku: Bumps [ws](https://github.com/websockets/ws) from 5.2.2 to 5.2.3.
[03:43:16] <Geth> ¦ setup-raku: - [Release notes](https://github.com/websockets/ws/releases)
[03:43:16] <Geth> ¦ setup-raku: - [Commits](https://github.com/websockets/ws/compare/5.2.2...5.2.3)
[03:43:17] <Geth> ¦ setup-raku: 
[03:43:18] <Geth> ¦ setup-raku: ---
[03:43:20] <Geth> ¦ setup-raku: <…commit message has 6 more lines…>
[03:43:22] <Geth> ¦ setup-raku: review: https://github.com/Raku/setup-raku/commit/c6ec7be8e7
[03:43:24] <Geth> ¦ setup-raku: 960633c96a | (Shoichi Kaji)++ (committed using GitHub Web editor) | package-lock.json
[03:43:26] <Geth> ¦ setup-raku: Merge pull request #15 from Raku/dependabot/npm_and_yarn/ws-5.2.3
[03:43:28] <Geth> ¦ setup-raku: 
[03:43:30] <Geth> ¦ setup-raku: Bump ws from 5.2.2 to 5.2.3
[03:43:32] <Geth> ¦ setup-raku: review: https://github.com/Raku/setup-raku/commit/960633c96a
[04:24:50] *** Quits: CIAvash (~ciavash@2001:470:69fc:105::264) (Ping timeout: 256 seconds)
[04:24:59] *** Quits: rba[m] (~rba@2001:470:69fc:105::c2d8) (Ping timeout: 252 seconds)
[04:25:07] *** Quits: juanfra (~juanfra@user/juanfra) (Ping timeout: 245 seconds)
[04:25:11] *** Quits: happy-dude (~happy-dud@2001:470:69fc:105::b4d7) (Ping timeout: 268 seconds)
[04:25:16] *** Quits: cnx (~cnxhaloge@2001:470:69fc:105::61f) (Ping timeout: 276 seconds)
[04:25:18] *** Quits: aolko[m] (~aolko93ma@2001:470:69fc:105::68ec) (Ping timeout: 272 seconds)
[04:25:23] *** Quits: AlexDaniel (~alexdanie@2001:470:69fc:105::15e1) (Ping timeout: 272 seconds)
[04:26:25] *** Quits: japhb (~geoff@mugs/japhb) (Quit: leaving)
[04:29:03] *** Joins: japhb (~geoff@mugs/japhb)
[04:32:50] *** Quits: reportable6 (rep-able@2001:41d0:2:5eb5::) (Remote host closed the connection)
[04:47:27] <SmokeMachine_> m: say Match ~~ Associative # should Match do Associative?
[04:47:27] <camelia> rakudo-moar c67177b89: OUTPUT: «False␤»
[04:47:48] <SmokeMachine_> I think that would make sense…
[04:49:35] <moon-child> more broadly, should the class/role be in roast?  There was a bug filed recently, native types were not doing some numeric roles
[04:49:43] <moon-child> *class/role _hierarchy_ be in roast
[04:49:46] *** Quits: b2gills (~brad@64.191.7.0) (Ping timeout: 256 seconds)
[04:50:00] <moon-child> I think people depend on many aspects of the hierarchy which may not currently be tested
[04:50:19] *** Joins: b2gills (~brad@64.191.7.0)
[04:50:31] <moon-child> m: say Associative.of; say Match.of
[04:50:31] <camelia> rakudo-moar c67177b89: OUTPUT: «(Mu)␤No such method 'of' for invocant of type 'Match'␤  in block <unit> at <tmp> line 1␤␤»
[04:51:33] <moon-child> or, rather
[04:51:42] <moon-child> m: say Associative.can('of'); say Match.can('of')
[04:51:42] <camelia> rakudo-moar c67177b89: OUTPUT: «(of)␤()␤»
[04:56:01] *** Joins: happy-dude (~happy-dud@2001:470:69fc:105::b4d7)
[04:59:03] <SmokeMachine_> m: say “bla ble” ~~ /<ws>/
[04:59:03] <camelia> rakudo-moar c67177b89: OUTPUT: «｢｣␤ ws => ｢｣␤»
[04:59:24] <SmokeMachine_> m: say (“bla ble” ~~ /<ws>/)<ws>
[04:59:24] <camelia> rakudo-moar c67177b89: OUTPUT: «｢｣␤»
[04:59:45] <SmokeMachine_> m: say (“bla ble” ~~ /<ws>/).keys
[04:59:45] <camelia> rakudo-moar c67177b89: OUTPUT: «(ws)␤»
[05:00:26] <SmokeMachine_> It even has the .keys methods…
[05:00:50] <SmokeMachine_> m: say (“bla ble” ~~ /<ws>/).values
[05:00:50] <camelia> rakudo-moar c67177b89: OUTPUT: «(｢｣)␤»
[05:01:02] <SmokeMachine_> m: say (“bla ble” ~~ /<ws>/).kv
[05:01:03] <camelia> rakudo-moar c67177b89: OUTPUT: «(ws ｢｣)␤»
[05:01:24] <SmokeMachine_> m: Match.^mro
[05:01:24] <camelia> rakudo-moar c67177b89: ( no output )
[05:01:39] <SmokeMachine_> m: say Match.^mro
[05:01:39] <camelia> rakudo-moar c67177b89: OUTPUT: «((Match) (Capture) (Cool) (Any) (Mu))␤»
[05:03:43] <SmokeMachine_> m: say “{ .^name } -> { ? .^can: “kv” } for Match.^mro
[05:03:44] <camelia> rakudo-moar c67177b89: OUTPUT: «5===SORRY!5=== Error while compiling <tmp>␤Unable to parse expression in curly double quotes; couldn't find final '”' (corresponding starter was at line 1)␤at <tmp>:1␤------> 3me } -> { ? .^can: “kv” } for Match.^mro7⏏5<EOL>␤  …»
[05:04:04] <SmokeMachine_> m: say “{ .^name } -> { ? .^can: “kv” }”for Match.^mro
[05:04:04] <camelia> rakudo-moar c67177b89: OUTPUT: «Match -> True␤Capture -> True␤Cool -> True␤Any -> True␤Mu -> False␤»
[05:04:42] <SmokeMachine_> m: say “{ .^name } -> { ? .^find_method: “kv”, :local } for Match.^mro
[05:04:42] <camelia> rakudo-moar c67177b89: OUTPUT: «5===SORRY!5=== Error while compiling <tmp>␤Unable to parse expression in curly double quotes; couldn't find final '”' (corresponding starter was at line 1)␤at <tmp>:1␤------> 3nd_method: “kv”, :local } for Match.^mro7⏏5<EOL>␤  …»
[05:05:24] <SmokeMachine_> m: say “{ .^name } -> { ? .^find_method: “kv”, :local }” for Match.^mro
[05:05:24] <camelia> rakudo-moar c67177b89: OUTPUT: «Match -> True␤Capture -> True␤Cool -> True␤Any -> True␤Mu -> False␤»
[05:05:58] <SmokeMachine_> m: say “{ .^name } -> { ? .^find_method: “keys”, :local }” for Match.^mro
[05:05:58] <camelia> rakudo-moar c67177b89: OUTPUT: «Match -> True␤Capture -> True␤Cool -> True␤Any -> True␤Mu -> False␤»
[05:33:24] *** Quits: Doc_Holliwould (~holli@dslb-178-010-216-118.178.010.pools.vodafone-ip.de) (Ping timeout: 268 seconds)
[05:34:18] *** Joins: Doc_Holliwood (~holli@dslb-092-076-011-093.092.076.pools.vodafone-ip.de)
[05:34:45] *** Joins: reportable6 (rep-able@2001:41d0:2:5eb5::)
[05:46:49] *** Quits: b2gills (~brad@64.191.7.0) (Ping timeout: 248 seconds)
[06:07:05] *** Joins: b2gills (~brad@64.191.7.0)
[06:25:29] *** Joins: sono (~sono@107-209-210-210.lightspeed.sntcca.sbcglobal.net)
[06:25:36] *** Quits: sono (~sono@107-209-210-210.lightspeed.sntcca.sbcglobal.net) (Client Quit)
[06:25:51] *** Joins: sono (~sono@107-209-210-210.lightspeed.sntcca.sbcglobal.net)
[06:29:55] *** Joins: CIAvash (~ciavash@2001:470:69fc:105::264)
[06:32:54] *** Quits: Doc_Holliwood (~holli@dslb-092-076-011-093.092.076.pools.vodafone-ip.de) (Ping timeout: 256 seconds)
[06:37:12] *** Joins: cnx (~cnxhaloge@2001:470:69fc:105::61f)
[06:37:35] *** Joins: rba[m] (~rba@2001:470:69fc:105::c2d8)
[06:42:19] *** Joins: AlexDaniel (~alexdanie@2001:470:69fc:105::15e1)
[06:55:53] *** Joins: juanfra (~juanfra@user/juanfra)
[07:08:34] *** Joins: aolko[m] (~aolko93ma@2001:470:69fc:105::68ec)
[07:47:16] *** Quits: gabiruh (~gabiruh@vps19177.publiccloud.com.br) (Quit: ZNC 1.7.5 - https://znc.in)
[07:47:44] *** Joins: gabiruh (~gabiruh@vps19177.publiccloud.com.br)
[08:47:44] *** Quits: sourceable6 (sou-able@2001:41d0:2:5eb5::) (Remote host closed the connection)
[08:47:44] *** Quits: releasable6 (rel-able@2001:41d0:2:5eb5::) (Remote host closed the connection)
[08:47:44] *** Quits: linkable6 (lin-able@2001:41d0:2:5eb5::) (Read error: Connection reset by peer)
[08:47:44] *** Quits: reportable6 (rep-able@2001:41d0:2:5eb5::) (Read error: Connection reset by peer)
[08:47:44] *** Quits: statisfiable6 (sta-able@2001:41d0:2:5eb5::) (Read error: Connection reset by peer)
[08:47:44] *** Quits: bisectable6 (bis-able@2001:41d0:2:5eb5::) (Read error: Connection reset by peer)
[08:47:44] *** Quits: squashable6 (squ-able@2001:41d0:2:5eb5::) (Read error: Connection reset by peer)
[08:47:44] *** Quits: nativecallable6 (nat-able@2001:41d0:2:5eb5::) (Read error: Connection reset by peer)
[08:47:44] *** Quits: benchable6 (ben-able@2001:41d0:2:5eb5::) (Read error: Connection reset by peer)
[08:47:44] *** Quits: committable6 (com-able@2001:41d0:2:5eb5::) (Read error: Connection reset by peer)
[08:47:44] *** Quits: greppable6 (gre-able@2001:41d0:2:5eb5::) (Read error: Connection reset by peer)
[08:47:44] *** Quits: bloatable6 (blo-able@2001:41d0:2:5eb5::) (Read error: Connection reset by peer)
[08:47:44] *** Quits: coverable6 (cov-able@2001:41d0:2:5eb5::) (Read error: Connection reset by peer)
[08:47:44] *** Quits: unicodable6 (uni-able@2001:41d0:2:5eb5::) (Read error: Connection reset by peer)
[08:47:44] *** Quits: shareable6 (sha-able@2001:41d0:2:5eb5::) (Read error: Connection reset by peer)
[08:47:44] *** Quits: quotable6 (quo-able@2001:41d0:2:5eb5::) (Read error: Connection reset by peer)
[08:47:44] *** Quits: tellable6 (tel-able@2001:41d0:2:5eb5::) (Read error: Connection reset by peer)
[08:47:45] *** Quits: evalable6 (eva-able@2001:41d0:2:5eb5::) (Write error: Connection reset by peer)
[08:47:45] *** Quits: notable6 (not-able@2001:41d0:2:5eb5::) (Write error: Connection reset by peer)
[08:47:59] *** Joins: greppable6 (gre-able@2001:41d0:2:5eb5::)
[08:48:01] *** Joins: shareable6 (sha-able@2001:41d0:2:5eb5::)
[08:48:19] *** Joins: linkable6 (lin-able@2001:41d0:2:5eb5::)
[08:48:33] *** Joins: committable6 (com-able@2001:41d0:2:5eb5::)
[08:48:45] *** Joins: benchable6 (ben-able@2001:41d0:2:5eb5::)
[08:48:46] *** Joins: quotable6 (quo-able@2001:41d0:2:5eb5::)
[08:48:48] *** Joins: sourceable6 (sou-able@2001:41d0:2:5eb5::)
[08:49:20] *** Joins: statisfiable6 (sta-able@2001:41d0:2:5eb5::)
[08:49:50] *** Joins: notable6 (not-able@2001:41d0:2:5eb5::)
[08:50:34] *** Joins: bloatable6 (blo-able@2001:41d0:2:5eb5::)
[08:57:02] *** Joins: eagerlist (uid511064@id-511064.stonehaven.irccloud.com)
[08:57:10] *** Joins: Doc_Holliwood (~holli@dslb-092-076-011-031.092.076.pools.vodafone-ip.de)
[09:10:01] *** Quits: Doc_Holliwood (~holli@dslb-092-076-011-031.092.076.pools.vodafone-ip.de) (Ping timeout: 248 seconds)
[09:11:17] *** Joins: Doc_Holliwood (~holli@dslb-092-076-011-031.092.076.pools.vodafone-ip.de)
[09:18:56] *** Quits: xinming (~xinming@115.219.38.120) (Quit: WeeChat 3.2)
[09:20:24] *** Quits: ddeimeke (~ddeimeke@ubuntu/member/ddeimeke) (Quit: The Lounge - https://thelounge.chat)
[09:21:02] *** Joins: ddeimeke (~ddeimeke@ubuntu/member/ddeimeke)
[09:48:27] *** Joins: bisectable6 (bis-able@2001:41d0:2:5eb5::)
[09:49:12] *** Joins: tellable6 (tel-able@2001:41d0:2:5eb5::)
[09:49:52] *** Joins: releasable6 (rel-able@2001:41d0:2:5eb5::)
[09:50:12] *** Joins: squashable6 (squ-able@2001:41d0:2:5eb5::)
[09:51:48] *** Quits: Doc_Holliwood (~holli@dslb-092-076-011-031.092.076.pools.vodafone-ip.de) (Ping timeout: 268 seconds)
[09:52:14] *** Joins: Doc_Holliwood (~holli@dslb-092-076-011-031.092.076.pools.vodafone-ip.de)
[10:08:09] *** Quits: Doc_Holliwood (~holli@dslb-092-076-011-031.092.076.pools.vodafone-ip.de) (Ping timeout: 248 seconds)
[10:48:51] *** Joins: unicodable6 (uni-able@2001:41d0:2:5eb5::)
[10:49:48] *** Joins: evalable6 (eva-able@2001:41d0:2:5eb5::)
[10:51:03] *** Joins: Doc_Holliwood (~holli@dslb-092-076-011-031.092.076.pools.vodafone-ip.de)
[11:05:59] *** Quits: eagerlist (uid511064@id-511064.stonehaven.irccloud.com) (Quit: Connection closed for inactivity)
[11:22:11] *** Quits: Sgeo (~Sgeo@user/sgeo) (Read error: Connection reset by peer)
[11:25:50] *** Quits: Doc_Holliwood (~holli@dslb-092-076-011-031.092.076.pools.vodafone-ip.de) (Ping timeout: 272 seconds)
[11:36:04] *** Joins: reportable6 (rep-able@2001:41d0:2:5eb5::)
[11:50:50] *** Joins: coverable6 (cov-able@2001:41d0:2:5eb5::)
[11:56:11] *** Joins: ufobat_ (~martin@dynamic-077-007-103-187.77.7.pool.telefonica.de)
[12:07:15] *** Joins: Doc_Holliwood (~holli@dslb-092-076-011-031.092.076.pools.vodafone-ip.de)
[12:14:33] *** Quits: jrjsmrtn (~jrjsmrtn@ip-83-134-41-235.dsl.scarlet.be) (Ping timeout: 248 seconds)
[12:17:17] *** Joins: jrjsmrtn (~jrjsmrtn@ip-83-134-41-235.dsl.scarlet.be)
[13:04:31] *** Joins: MoC (~moc@user/moc)
[13:10:20] <gfldex> lolibloggedalittle: https://gfldex.wordpress.com/2021/08/13/inequality/
[14:17:41] <Altreus> Quite in contrast to ==, eqv does a type check  # this is surprising
[14:18:09] <Altreus> eqv surely means equivalent
[14:18:53] <Altreus> Shouldn't equivalence try harder to be true than equality?
[14:19:17] <Altreus> saying that Int(1) is not equivalent to Rat(1) breaks English
[14:26:35] <lizmat> from the doc: "This could be called an equivalence operator, and it will return True if the two arguments are structurally the same, i.e. from the same type and (recursively) contain equivalent values."
[14:26:40] <lizmat> https://docs.raku.org/routine/eqv
[14:27:15] <lizmat> it specifically shows: say 1 eqv 1.0;                  # OUTPUT: «False␤»
[14:28:48] <Altreus> Yeah I think I'm questioning the 20 years of design instead of saying something constructive again
[14:29:06] <lizmat> well...  maybe there *is* a point to be made
[14:29:20] <lizmat> fwiw, we now got more user experiences  :-)
[14:29:37] <lizmat> I'm just saying that changing anything in this area, would need a language version bump
[14:29:41] <Altreus> I'm a big fan of the thing doing what I think the word means
[14:30:38] <lizmat> m: dd 1 == 1.0
[14:30:38] <camelia> rakudo-moar 548803393: OUTPUT: «Bool::True␤»
[14:30:57] <lizmat> now, whether you would call those equivalent...  
[14:31:10] <Altreus> I was rude about PHP having === but now I realise that was just me being rude about everything PHP did
[14:31:27] <Altreus> I actually quite like it, in principle
[14:32:00] <Altreus> Does raku keep P5's philosophy of == for numeric equality and eq for string equality?
[14:32:08] <lizmat> yes
[14:32:15] <lizmat> == numifies, eq stringifies
[14:32:28] <Altreus> Thought so - when you remember that, eqv makes 
[14:32:30] <lizmat> m: say "42" == "42.0"
[14:32:30] <camelia> rakudo-moar 548803393: OUTPUT: «True␤»
[14:32:36] <Altreus> oops, makes more sense to do what it does
[14:33:04] <Altreus> cos what else are you gonna do? mimic PHP's or JS's stack of rules for how to apply ==?
[14:33:30] <Altreus> The whole point of == and eq is to tell Raku how to treat it; if you don't tell it how to do the comparison it also has to compare type
[14:34:31] <Altreus> gfldex: you spawned discussion :D
[14:35:48] <Altreus> I note that Int and Rat are both Real and therefore siblings
[14:36:03] <Altreus> cousins actually
[14:37:08] <gfldex> I believe haveing a meta-op variant for ∈ and friends would actually solve the problem.
[14:40:01] <gfldex> m: say 1/1 eqv 2/2;
[14:40:01] <camelia> rakudo-moar 548803393: OUTPUT: «True␤»
[14:40:11] <gfldex> m: say 1 eqv 2/2;
[14:40:12] <camelia> rakudo-moar 548803393: OUTPUT: «False␤»
[14:41:04] <gfldex> infix:<eqv> does the right thing. Sadly, the name doesn't fit to what it does.
[14:47:47] <Altreus> ∈[==] like?
[14:48:37] *** Joins: nativecallable6 (nat-able@2001:41d0:2:5eb5::)
[14:52:43] <lizmat> fwiw, I think that is mixing set semantics with something else
[14:53:03] <lizmat> set semantics are not about comparisons, in my view
[14:53:21] <lizmat> they are about applying some hashing function to values to see whether they are the same
[14:53:29] <lizmat> currently, that's .WHICH
[14:54:11] <lizmat> so, from the example, it should probably be something like ∈[Int]
[14:54:35] <lizmat> you could also see the .WHICH as a coercion to an ObjAt object
[14:55:05] *** Quits: Doc_Holliwood (~holli@dslb-092-076-011-031.092.076.pools.vodafone-ip.de) (Ping timeout: 248 seconds)
[14:55:56] *** Joins: Xliff (~Cliff@pool-71-255-227-73.washdc.east.verizon.net)
[14:56:11] <Xliff> \o
[14:57:05] <Xliff> m: proto sub a (|c) { c<a>.gist.say; {*} }; multi sub a (:$i!) { $i.gist.say }; a(:a = 1, :i = <a b c>);
[14:57:05] <camelia> rakudo-moar 548803393: OUTPUT: «Cannot modify an immutable Pair (i => True)␤  in block <unit> at <tmp> line 1␤␤»
[14:57:34] <Xliff> m: proto sub a (|c) { c<a>.gist.say; {*} }; multi sub a (:$i!) { $i.gist.say }; a(a = 1, i = <a b c>);
[14:57:35] <camelia> rakudo-moar 548803393: OUTPUT: «5===SORRY!5=== Error while compiling <tmp>␤Preceding context expects a term, but found infix = instead.␤Did you make a mistake in Pod syntax?␤at <tmp>:1␤------> 3ulti sub a (:$i!) { $i.gist.say }; a(a =7⏏5 1, i = <a b c>);␤»
[14:57:45] <Xliff> m: proto sub a (|c) { c<a>.gist.say; {*} }; multi sub a (:$i!) { $i.gist.say }; a(a => 1, i => <a b c>);
[14:57:45] <camelia> rakudo-moar 548803393: OUTPUT: «1␤Cannot resolve caller a(:i(List), :a(Int)); none of these signatures match:␤    (:$i!)␤  in sub a at <tmp> line 1␤  in block <unit> at <tmp> line 1␤␤»
[14:58:06] <Xliff> m: proto sub a (|c) { c<a>.gist.say; {*} }; multi sub a (:$i!, *%c) { $i.gist.say }; a(a => 1, i => <a b c>);
[14:58:06] <camelia> rakudo-moar 548803393: OUTPUT: «1␤(a b c)␤»
[14:58:22] <Xliff> m: proto sub a (|c) { c<a>.gist.say; {*} }; multi sub a (:$i!, :$a) { $i.gist.say }; a(a => 1, i => <a b c>);
[14:58:22] <camelia> rakudo-moar 548803393: OUTPUT: «1␤(a b c)␤»
[15:07:51] *** Joins: frost-lab (~frost-lab@171.43.242.201)
[15:09:29] <Altreus> lizmat: hadn't considered that perspective
[15:09:51] <Altreus> Rather than are these equivalent according to this operation, it's are these equivalent after this conversion?
[15:10:03] *** Joins: Doc_Holliwood (~holli@dslb-092-076-011-031.092.076.pools.vodafone-ip.de)
[15:10:11] <Altreus> mind you, isn't that just ∈ map?
[15:10:11] <lizmat> well, in practice they are eq after conversion
[15:10:30] <lizmat> Altreus: yes, that would effectively be it  :-)
[15:11:09] <lizmat> m: dd 1 (elem) (1.0,)>>.Int
[15:11:10] <camelia> rakudo-moar 548803393: OUTPUT: «Bool::True␤»
[15:15:48] *** Quits: frost-lab (~frost-lab@171.43.242.201) (Quit: Connection closed)
[15:22:52] <Altreus> I'm content to consider that the philosophy of set stuff
[15:23:06] <Altreus> the set should contain things of the type you're comparing it to
[15:25:05] <lizmat> m: my %s is Set[Int] = 1, 1.0
[15:25:05] <camelia> rakudo-moar 548803393: OUTPUT: «Type check failed in binding; expected Int but got Rat (1.0)␤  in block <unit> at <tmp> line 1␤␤»
[15:25:20] <lizmat> m: my %s is Set[Int()] = 1, 1.0   # sadly, that doesn't work, yet anyway
[15:25:20] <camelia> rakudo-moar 548803393: ( no output )
[15:25:34] <lizmat> m: my %s is Set[Int()] = 1, 1.0; dd %s
[15:25:34] <camelia> rakudo-moar 548803393: OUTPUT: «Set[Int(Any)].new(1.0,1)␤»
[15:31:46] <gfldex> We will never be able to coerce to Numeric.
[15:32:20] *** Quits: MoC (~moc@user/moc) (Quit: Konversation terminated!)
[15:36:00] <Altreus> we've always been at war with eqv
[15:39:19] *** Quits: sono (~sono@107-209-210-210.lightspeed.sntcca.sbcglobal.net) (Read error: Connection reset by peer)
[15:54:23] *** Joins: sena_kun (~sena_kun_@static-84-42-198-52.net.upcbroadband.cz)
[16:10:16] <leont> Oceania had always been at war with Eastasia
[16:13:33] *** Joins: MoC (~moc@user/moc)
[16:32:50] *** Quits: reportable6 (rep-able@2001:41d0:2:5eb5::) (Remote host closed the connection)
[16:45:18] *** Quits: Xliff (~Cliff@pool-71-255-227-73.washdc.east.verizon.net) (Remote host closed the connection)
[16:53:57] *** Joins: thundergnat (~thundergn@50-235-6-134-static.hfc.comcastbusiness.net)
[16:55:26] <thundergnat> Something I have pondered before, and with the Set coercion discussion, has again pushed to the forefront: Should .narrow coerce *Str to numeric? 
[16:55:48] <thundergnat> m: my @l = < 3 3.0 3.1 3e0 3.1e0 >; say @l.map: *.narrow.^name; dd @l>>.narrow.Set# Since .narrow is a numeric operator, I would expect ("Int", "Int", "Rat", "Int", "Num")
[16:55:48] <camelia> rakudo-moar 548803393: OUTPUT: «(IntStr Int RatStr Int NumStr)␤Set.new(NumStr.new(3.1e0, "3.1e0"),IntStr.new(3, "3"),RatStr.new(3.1, "3.1"),3)␤»
[16:56:06] *** Quits: MoC (~moc@user/moc) (Quit: Konversation terminated!)
[16:57:00] <thundergnat> Conversely, if it doesn't remove stringy characteristics from a *Str, why isn't there a Str candidate that just passes through the Str unchanged?
[16:57:29] <thundergnat> m: my @l = < 3 3.0 3.1 3e0 3.1e0 a >; say @l.map: *.narrow.^name;
[16:57:29] <camelia> rakudo-moar 548803393: OUTPUT: «No such method 'narrow' for invocant of type 'Str'␤  in block <unit> at <tmp> line 1␤␤»
[16:58:50] <thundergnat> I don't really expect answers to these questions, just something I've pondered. 
[17:02:06] *** Quits: thundergnat (~thundergn@50-235-6-134-static.hfc.comcastbusiness.net) (Quit: Connection closed)
[17:07:49] *** Joins: keutoi (~keutoi@157.47.115.91)
[17:09:46] *** Joins: xinming (~xinming@115.219.32.87)
[17:11:18] *** Joins: thundergnat (~thundergn@50-235-6-134-static.hfc.comcastbusiness.net)
[17:13:06] <thundergnat> Another point to ponder. What is narrower? A Rat or a Num? The docs for .narrow say "Returns the number converted to the narrowest type that can hold it without loss of precision."
[17:13:59] <thundergnat> I would argue that a Rat is better at not losing precision, at least up to the Rat/Num threshold.
[17:15:03] *** Joins: silug (~silug@068-188-018-154.biz.spectrum.com)
[17:15:04] <thundergnat> m: say 3.1.narrow.^name; say 3.1e0.narrow.^name; # Seems like they are considered "equal" in the precision heirarchy
[17:15:04] <camelia> rakudo-moar 548803393: OUTPUT: «Rat␤Num␤»
[17:15:09] <lizmat> weekly: https://www.theregister.com/2021/08/13/perl_resignations/
[17:15:09] <notable6> lizmat, Noted! (weekly)
[17:16:14] <thundergnat> Again, not expecting answers, just points to ponder.
[17:20:05] <[Coke]> I don't quite understand the question based on the example. If you've got a Num, you can't narrow to the more precise Rat, can you?
[17:20:06] *** Quits: silug (~silug@068-188-018-154.biz.spectrum.com) (Ping timeout: 268 seconds)
[17:21:21] *** Joins: silug (~silug@068-188-018-154.biz.spectrum.com)
[17:27:02] <thundergnat> [Coke] Probably not. Raku only preserves precision to the default stringify display precision so we cant rely on conversions being exact. 
[17:27:58] <thundergnat> m: my $n = 3.73389e0; say join ' ', $n, $n.^name, $n.Rat, $n.Rat.^name, $n.Rat.base(10,15);
[17:27:59] <camelia> rakudo-moar 548803393: OUTPUT: «3.73389 Num 3.73389 Rat 3.733890214797136␤»
[17:29:42] <thundergnat> You might expect 3.73389e0.Rat to be equal to 3.73389, but it isn't behind the scenes ^^^^
[17:35:37] *** Quits: thundergnat (~thundergn@50-235-6-134-static.hfc.comcastbusiness.net) (Quit: Connection closed)
[17:43:02] *** Quits: Doc_Holliwood (~holli@dslb-092-076-011-031.092.076.pools.vodafone-ip.de) (Ping timeout: 252 seconds)
[17:44:14] *** Joins: Doc_Holliwood (~holli@dslb-092-076-011-031.092.076.pools.vodafone-ip.de)
[18:10:14] <[Coke]> I assume .base is sending that through Num first because of your request for a specific number of digits.
[18:10:21] <[Coke]> (it DTRT if you leave off the 15)
[18:12:56] <[Coke]> me: gets handwavy. my coffee: spills all over my work area.
[18:30:23] *** Joins: Sgeo (~Sgeo@user/sgeo)
[18:36:37] <vrurg> The more I observe the discussions about Perl's Cor, the more I it feels great that Perl6 syntax hasn't been kept backward compatible...
[18:38:26] *** Quits: Doc_Holliwood (~holli@dslb-092-076-011-031.092.076.pools.vodafone-ip.de) (Ping timeout: 268 seconds)
[18:39:37] *** Quits: jrjsmrtn (~jrjsmrtn@ip-83-134-41-235.dsl.scarlet.be) (Ping timeout: 248 seconds)
[19:01:00] *** Quits: juanfra__ (~juanfra@user/juanfra) (Remote host closed the connection)
[19:23:32] *** Quits: squashable6 (squ-able@2001:41d0:2:5eb5::) (Remote host closed the connection)
[19:24:33] *** Joins: squashable6 (squ-able@2001:41d0:2:5eb5::)
[19:34:42] *** Joins: reportable6 (rep-able@2001:41d0:2:5eb5::)
[19:59:49] *** Quits: xinming (~xinming@115.219.32.87) (Ping timeout: 268 seconds)
[20:10:01] *** Quits: ufobat_ (~martin@dynamic-077-007-103-187.77.7.pool.telefonica.de) (Quit: Leaving)
[20:23:15] *** Joins: Doc_Holliwood (~holli@dslb-092-076-011-031.092.076.pools.vodafone-ip.de)
[20:25:03] *** Joins: MoC (~moc@user/moc)
[20:42:52] *** Joins: thundergnat (~thundergn@50-235-6-134-static.hfc.comcastbusiness.net)
[20:43:54] <thundergnat> [Coke] Naw, it's the whole "What Every Programmer Should Know About Floating-Point Numbers" showing up. Raku does a really good job of hiding that, so it's especially jarring when it _does_ show up.
[20:44:14] <thundergnat> m: say 3.73389e0.Rat.nude; say 3.73389.nude;
[20:44:14] <camelia> rakudo-moar 548803393: OUTPUT: «(3129 838)␤(373389 100000)␤»
[20:45:20] <thundergnat> m: say 3.73389e0.Rat.base(10,15); say 3.73389.base(10,15);
[20:45:20] <camelia> rakudo-moar 548803393: OUTPUT: «3.733890214797136␤3.733890000000000␤»
[20:46:01] *** Quits: thundergnat (~thundergn@50-235-6-134-static.hfc.comcastbusiness.net) (Client Quit)
[21:00:53] *** Quits: Doc_Holliwood (~holli@dslb-092-076-011-031.092.076.pools.vodafone-ip.de) (Ping timeout: 268 seconds)
[21:01:11] *** Joins: Doc_Holliwood (~holli@dslb-092-076-011-130.092.076.pools.vodafone-ip.de)
[21:19:51] <lizmat> m: 42 666
[21:19:52] <camelia> rakudo-moar 548803393: OUTPUT: «5===SORRY!5=== Error while compiling <tmp>␤Two terms in a row␤at <tmp>:1␤------> 03427⏏5 666␤    expecting any of:␤        infix␤        infix stopper␤        statement end␤        statement modifier␤        statement modif…»
[21:35:53] *** Joins: jrjsmrtn (~jrjsmrtn@ip-83-134-41-235.dsl.scarlet.be)
[21:36:22] *** Quits: Doc_Holliwood (~holli@dslb-092-076-011-130.092.076.pools.vodafone-ip.de) (Ping timeout: 245 seconds)
[21:37:25] *** Joins: Doc_Holliwood (~holli@ipservice-092-218-232-172.092.218.pools.vodafone-ip.de)
[21:40:21] *** Quits: jrjsmrtn (~jrjsmrtn@ip-83-134-41-235.dsl.scarlet.be) (Ping timeout: 268 seconds)
[21:41:17] *** Quits: m6locks (thebbo@2001:708:30:2160::4) (Remote host closed the connection)
[21:43:37] *** Joins: jrjsmrtn (~jrjsmrtn@ip-83-134-41-235.dsl.scarlet.be)
[22:12:53] *** Quits: sena_kun (~sena_kun_@static-84-42-198-52.net.upcbroadband.cz) (Quit: Leaving)
[22:25:28] *** Joins: melezhik (~melezhik@c-73-32-143-85.hsd1.tx.comcast.net)
[22:25:31] <melezhik> .
[22:25:36] <melezhik> weekly: https://dev.to/melezhik/bird-raku-dsl-for-infrastructure-testing-1hph
[22:25:37] <notable6> melezhik, Noted! (weekly)
[22:25:56] *** Quits: ilogger2 (~ilogger2@colabti.org) (Remote host closed the connection)
[22:26:18] *** Joins: ilogger2 (~ilogger2@colabti.org)
[22:31:24] *** Quits: melezhik (~melezhik@c-73-32-143-85.hsd1.tx.comcast.net) (Quit: Connection closed)
[22:32:33] *** Quits: reportable6 (rep-able@2001:41d0:2:5eb5::) (Remote host closed the connection)
[22:34:09] <lizmat> m: for } a
[22:34:09] <camelia> rakudo-moar 548803393: OUTPUT: «5===SORRY!5=== Error while compiling <tmp>␤Unexpected closing bracket␤at <tmp>:1␤------> 3for 7⏏5} a␤»
[22:39:16] <lizmat> m: say "\x03" ~ "5foobar"
[22:39:16] <camelia> rakudo-moar 548803393: OUTPUT: «5foobar␤»
[22:39:42] *** Quits: Doc_Holliwood (~holli@ipservice-092-218-232-172.092.218.pools.vodafone-ip.de) (Ping timeout: 272 seconds)
[22:39:44] <lizmat> m: say "\x03" ~ "5foobar\x03" ~ "7barbaz"
[22:39:44] <camelia> rakudo-moar 548803393: OUTPUT: «5foobar7barbaz␤»
[22:40:02] <lizmat> m: say "\x03" ~ "5foobar\x03" ~ "7barbaz\x03" ~ 3green"
[22:40:02] <camelia> rakudo-moar 548803393: OUTPUT: «5===SORRY!5=== Error while compiling <tmp>␤Confused␤at <tmp>:1␤------> 3x03" ~ "5foobar\x03" ~ "7barbaz\x03" ~ 37⏏5green"␤»
[22:40:04] <lizmat> m: say "\x03" ~ "5foobar\x03" ~ "7barbaz\x03" ~ "3green"
[22:40:05] <camelia> rakudo-moar 548803393: OUTPUT: «5foobar7barbaz3green␤»
[22:40:18] *** Joins: Doc_Holliwood (~holli@ipservice-092-218-232-146.092.218.pools.vodafone-ip.de)
[22:44:31] <lizmat> m: say "\x03" ~ "1foobar\x03" ~ "7barbaz\x03" ~ "3green"
[22:44:31] <camelia> rakudo-moar 548803393: OUTPUT: «1foobar7barbaz3green␤»
[22:44:36] <lizmat> m: say "\x03" ~ "2foobar\x03" ~ "7barbaz\x03" ~ "3green"
[22:44:36] <camelia> rakudo-moar 548803393: OUTPUT: «2foobar7barbaz3green␤»
[22:44:41] <lizmat> m: say "\x03" ~ "3foobar\x03" ~ "7barbaz\x03" ~ "3green"
[22:44:41] <camelia> rakudo-moar 548803393: OUTPUT: «3foobar7barbaz3green␤»
[22:44:48] <lizmat> m: say "\x03" ~ "4foobar\x03" ~ "7barbaz\x03" ~ "3green"
[22:44:48] <camelia> rakudo-moar 548803393: OUTPUT: «4foobar7barbaz3green␤»
[22:44:52] <lizmat> m: say "\x03" ~ "5foobar\x03" ~ "7barbaz\x03" ~ "3green"
[22:44:53] <camelia> rakudo-moar 548803393: OUTPUT: «5foobar7barbaz3green␤»
[22:45:01] <lizmat> m: say "\x03" ~ "6foobar\x03" ~ "7barbaz\x03" ~ "3green"
[22:45:01] <camelia> rakudo-moar 548803393: OUTPUT: «6foobar7barbaz3green␤»
[22:47:13] <lizmat> m: say "\x03" ~ "7foobar\x03" ~ "7barbaz\x03" ~ "3green"
[22:47:13] <camelia> rakudo-moar 548803393: OUTPUT: «7foobar7barbaz3green␤»
[22:47:18] <lizmat> m: say "\x03" ~ "8foobar\x03" ~ "7barbaz\x03" ~ "3green"
[22:47:18] <camelia> rakudo-moar 548803393: OUTPUT: «8foobar7barbaz3green␤»
[22:47:22] <lizmat> m: say "\x03" ~ "9foobar\x03" ~ "7barbaz\x03" ~ "3green"
[22:47:22] <camelia> rakudo-moar 548803393: OUTPUT: «9foobar7barbaz3green␤»
[22:47:27] <lizmat> m: say "\x03" ~ "afoobar\x03" ~ "7barbaz\x03" ~ "3green"
[22:47:28] <camelia> rakudo-moar 548803393: OUTPUT: «afoobar7barbaz3green␤»
[22:47:33] <lizmat> m: say "\x03" ~ "foobar\x03" ~ "7barbaz\x03" ~ "3green"
[22:47:33] <camelia> rakudo-moar 548803393: OUTPUT: «foobar7barbaz3green␤»
[22:47:38] <lizmat> m: say "\x03" ~ "0foobar\x03" ~ "7barbaz\x03" ~ "3green"
[22:47:38] <camelia> rakudo-moar 548803393: OUTPUT: «0foobar7barbaz3green␤»
[22:49:43] <moon-child> m: say "\x[03]11,4dual"
[22:49:43] <camelia> rakudo-moar 548803393: OUTPUT: «11,4dual␤»
[22:50:40] <moon-child> m: say "\x[02]bold\x[1d]italic\x[1f]underline"
[22:50:40] <camelia> rakudo-moar 548803393: OUTPUT: «bolditalicunderline␤»
[22:51:04] <lizmat> oops, I thought I was doing this privately with Camelia  :-(
[22:53:07] *** Quits: Doc_Holliwood (~holli@ipservice-092-218-232-146.092.218.pools.vodafone-ip.de) (Ping timeout: 268 seconds)
[22:53:21] *** Joins: xinming (~xinming@115.219.32.87)
[22:55:28] <lizmat> wonder if anybody has a module to turn that into <span> s
[22:56:26] *** Joins: Doc_Holliwood (~holli@ipservice-092-218-232-146.092.218.pools.vodafone-ip.de)
[23:00:11] *** Joins: Guest13 (~Guest13@2603-8001-5100-1f98-5ce1-7382-07b7-06d9.res6.spectrum.com)
[23:00:55] *** Quits: Guest13 (~Guest13@2603-8001-5100-1f98-5ce1-7382-07b7-06d9.res6.spectrum.com) (Client Quit)
[23:11:34] <lizmat> m: for } a
[23:11:34] <camelia> rakudo-moar 548803393: OUTPUT: «5===SORRY!5=== Error while compiling <tmp>␤Unexpected closing bracket␤at <tmp>:1␤------> 3for 7⏏5} a␤»
[23:12:34] *** Joins: raks_rocks (~raks_rock@102.176.65.211)
[23:13:52] *** Quits: Doc_Holliwood (~holli@ipservice-092-218-232-146.092.218.pools.vodafone-ip.de) (Ping timeout: 245 seconds)
[23:14:55] *** Joins: Doc_Holliwood (~holli@dslb-088-073-151-051.088.073.pools.vodafone-ip.de)
[23:17:36] *** Quits: raks_rocks (~raks_rock@102.176.65.211) (Quit: Connection closed)
[23:22:44] *** Quits: MoC (~moc@user/moc) (Quit: Konversation terminated!)
[23:28:54] *** Joins: neshpion (~neshpion@gateway/tor-sasl/neshpion)
[23:34:25] *** Quits: keutoi (~keutoi@157.47.115.91) (Quit: leaving)
