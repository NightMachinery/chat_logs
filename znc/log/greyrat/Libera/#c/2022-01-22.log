[00:00:14] *** Parts: teocle (~t@hex.plasm.in) ()
[00:03:45] *** Joins: Betal (~Betal@user/betal)
[00:07:33] <rsjw> sokan: when you use fgets, it reads a line into the array "line". then it goes inside the loop body, and if the line starts with ATOM then it goes in the body of the if statement.
[00:08:06] <rsjw> sokan: then fscanf reads in a fresh line from the file, which may or may not begin with ATOM
[00:08:18] <rsjw> you might want to use sscanf instead
[00:08:32] *** Quits: rgrinberg (~textual@2806:101e:7:2b:8582:352:d913:c6a5) (Ping timeout: 240 seconds)
[00:08:37] *** Quits: bolovanos_ (~bolovanos@user/bolovanos) (Ping timeout: 240 seconds)
[00:09:37] <rsjw> remember, fgets reads an entire line, not just the ATOM prefix you happen to be interested in
[00:10:11] <sokan> but the loop will work with the lines that have ATOM prefix right?
[00:11:32] <rsjw> the code itself is close to working, but I don't think it works as it is right now
[00:11:58] <sokan> That's why I get distance 0.0000 always
[00:12:28] <sokan> I'll think a bit more. Thanks for the input rsjw :)
[00:12:59] <rsjw> also, the first format specifier in your fscanf format is %*d, which corresponds to an int. since fscanf is reading in a fresh line, after the one fgets already read in, and since the first field is not necessarily and int, fscanf will fail
[00:14:13] <rsjw> s/not necessarily and int/not necessarily an int/
[00:14:42] *** Quits: stonkey (~stonkey@user/stonkey) (Remote host closed the connection)
[00:15:25] *** Joins: zmt00 (~zmt00@user/zmt00)
[00:16:21] *** Quits: pulse (~pulse@user/pulse) (Read error: Connection reset by peer)
[00:16:46] <rsjw> also, you never increment k, so all of your fscanf assignments would be writing to the same locations. that is, if fscanf weren't always failing.
[00:18:16] *** Quits: zmt00 (~zmt00@user/zmt00) (Client Quit)
[00:19:44] *** Joins: malina (~malina@user/malina)
[00:24:16] *** Quits: llh (~llh@user/llh) (Read error: Connection reset by peer)
[00:24:22] *** Joins: sokan_ (~sokan@2a02:587:9e01:f300:227:eff:fe16:865d)
[00:25:15] *** Joins: llh (~llh@user/llh)
[00:25:16] *** Quits: sokan (~sokan@2a02:587:9e07:e100:227:eff:fe16:865d) (Ping timeout: 250 seconds)
[00:25:17] *** sokan_ is now known as sokan
[00:26:28] *** Joins: zmt00 (~zmt00@user/zmt00)
[00:27:02] *** Quits: tobiasu (~tobiasu@user/tobiasu) (Quit: update)
[00:27:08] *** Quits: aliosablack (~chomwitt@ppp-94-67-1-27.home.otenet.gr) (Quit: Leaving)
[00:27:31] *** Joins: chomwitt (~chomwitt@2a02:587:dc03:8b00:12c3:7bff:fe6d:d374)
[00:28:35] *** Joins: wootehfoot (~wootehfoo@user/wootehfoot)
[00:33:04] *** Quits: Juliu (~Juliu@2a02:810b:c640:3ec0:d190:13e6:b518:cdac) (Ping timeout: 268 seconds)
[00:35:23] *** Joins: Hawker_ (~pi@user/hawker)
[00:36:05] *** Quits: Hawker_ (~pi@user/hawker) (Client Quit)
[00:37:45] <constxd> kings
[00:37:50] *** Quits: Thedarkb-Desktop (~Thedarkb@2001:bb6:b403:e042:c8a8:b569:60e3:f67f) (Ping timeout: 250 seconds)
[00:37:59] <constxd> i have what would probably be considered a stupid question
[00:38:37] *** Quits: malina (~malina@user/malina) (Ping timeout: 240 seconds)
[00:38:56] <constxd> if you have a program with some objects that have static storage duration that are very frequently accessed
[00:39:07] <constxd> and you change to thread local
[00:40:00] <constxd> would you expect a non-negligible decrease in performance
[00:40:57] *** Joins: sonny (~sonny@bras-base-london1483w-grc-28-70-48-35-173.dsl.bell.ca)
[00:42:15] *** Joins: phrosty (~phrosty@c-73-225-175-19.hsd1.wa.comcast.net)
[00:43:02] *** Quits: vysn (~vysn@user/vysn) (Ping timeout: 240 seconds)
[00:44:50] *** Quits: cosimone (~user@93-47-230-23.ip115.fastwebnet.it) (Quit: ERC (IRC client for Emacs 27.1))
[00:52:12] *** Quits: dsrt^ (~dsrt@207.182.73.202) (Ping timeout: 256 seconds)
[00:53:07] *** Quits: Darkcoal (~user@130.164.163.44) (Quit: Darkcoal)
[00:54:46] *** Quits: mug3n (~mugen@gateway/tor-sasl/mugen) (Remote host closed the connection)
[00:55:10] *** Joins: mug3n (~mugen@gateway/tor-sasl/mugen)
[00:56:07] *** Joins: n3rdy1 (~n3rdy1@2600:1700:4570:3480::41)
[00:56:15] *** Quits: sheb (~sheb@31.223.228.71) (Quit: Leaving)
[00:58:34] *** Joins: MajorBiscuit (~MajorBisc@86-88-79-148.fixed.kpn.net)
[00:59:10] *** Joins: tforever (~Terabyte@85.103.104.115)
[01:00:33] *** Joins: axon (~x@tetra.plasm.in)
[01:02:37] *** Quits: n3rdy1 (~n3rdy1@2600:1700:4570:3480::41) (Ping timeout: 240 seconds)
[01:04:04] <tforever> has is any way to read an array that is passed to a function as a void pointer argument in specific byte boundaries in C? For example, let's imagine an array of size 16 in bytes and we want to treat an element with a specific byte boundary of 2. Do we have any exit except bitwise operations? I know that is a weird question but just nervous.
[01:04:18] *** Quits: lunix00 (~lunix00@177.200.75.136) (Quit: My MacBook Air has gone to sleep. ZZZzzzâ€¦)
[01:05:21] <sham1> I don't think it's something to be nervous about
[01:05:28] <sham1> As for that, you have to read by chars
[01:05:33] <sham1> Or uint8_t if you have those
[01:05:46] <tforever> s/nervous/curious
[01:06:09] <tforever> my mind is out of my head during these hours, sorry.
[01:07:25] <sham1> Anyway, what are you trying to read? Like choose an element where the address is aligned to 2 bytes?
[01:07:39] <sham1> What are you trying to read, the bytes? And how many? Or are you trying to read objects
[01:08:48] *** Joins: crashrep (~crashrep@user/crashrep)
[01:12:31] *** Joins: seninha (~seninha@user/seninha)
[01:13:37] *** Quits: tforever (~Terabyte@85.103.104.115) (Ping timeout: 240 seconds)
[01:14:21] *** Joins: bebyx (~Thunderbi@user/bebyx)
[01:17:02] *** Quits: Betal (~Betal@user/betal) (Quit: WeeChat 3.4)
[01:17:52] *** Joins: Torr (~Torr@user/torr)
[01:20:03] *** silkut[m] is now known as silkut42[m]
[01:26:01] *** Quits: kts (~kts@103.73.237.172) (Ping timeout: 256 seconds)
[01:26:37] *** Quits: wroathe (~wroathe@user/wroathe) (Ping timeout: 240 seconds)
[01:28:17] *** Quits: constxd (~brad@192.75.101.164) (Ping timeout: 240 seconds)
[01:32:15] *** Quits: Y4knotiS (~YaknotiS@cpc1-cmbg18-2-0-cust87.5-4.cable.virginm.net) (Ping timeout: 256 seconds)
[01:33:31] *** Joins: freakazoid343 (~matt@2603:9000:cf03:86c3:b961:f861:f001:8bb7)
[01:34:36] *** Joins: wroathe (~wroathe@206-55-188-8.fttp.usinternet.com)
[01:34:36] *** Quits: wroathe (~wroathe@206-55-188-8.fttp.usinternet.com) (Changing host)
[01:34:36] *** Joins: wroathe (~wroathe@user/wroathe)
[01:35:01] *** Quits: freakazoid333 (~matt@2603:9000:cf03:86c3:e5c0:594b:f294:f0a) (Ping timeout: 240 seconds)
[01:35:26] *** Joins: tobiasu (~tobiasu@user/tobiasu)
[01:38:08] *** Quits: alphabeta (~kilolympu@31.205.200.235) (Remote host closed the connection)
[01:39:11] *** Joins: Juliu (~Juliu@2a02:810b:c640:3ec0:d190:13e6:b518:cdac)
[01:39:37] *** Quits: wroathe (~wroathe@user/wroathe) (Ping timeout: 256 seconds)
[01:41:43] *** Joins: alphabeta (~kilolympu@31.205.200.235)
[01:44:23] *** Joins: KevinX (~KevinX@c-71-200-222-150.hsd1.fl.comcast.net)
[01:44:51] *** Quits: fwg (~fwg@user/fwg) (Remote host closed the connection)
[01:45:55] *** Quits: byteskeptical (~amnesia@user/byteskeptical) (Quit: leaving)
[01:46:21] *** Quits: tech_exorcist (txrcst@user/tech-exorcist/x-0447479) (Quit: Disconnecting)
[01:48:25] *** Quits: Serpent7776 (~Serpent77@90-156-31-193.internetia.net.pl) (Quit: leaving)
[01:51:10] *** Joins: gproto23 (~gproto23@user/gproto23)
[01:51:11] *** Quits: sonny (~sonny@bras-base-london1483w-grc-28-70-48-35-173.dsl.bell.ca) (Remote host closed the connection)
[01:53:40] *** Quits: whupdup (~whupdup@pool-173-76-128-81.bstnma.fios.verizon.net) (Quit: Going offline, see ya! (www.adiirc.com))
[01:59:59] *** Quits: strajder (~strajder@user/strajder) (Quit: leaving)
[02:00:17] *** Quits: aradesh (~aradesh@user/aradesh) (Quit: WeeChat 1.9.1)
[02:00:46] *** Quits: alch (~alch@151.38.142.188) (Ping timeout: 256 seconds)
[02:02:26] *** Joins: alch (~alch@151.36.135.75)
[02:05:10] *** Joins: boB_K7IQ (~boB_K7IQ@152.44.147.180)
[02:06:36] <xb0o2> Is Modern C a decent shout for a higher level developer with a reasonable understanding of how computers work to learn C or does anyone have any suggestions?
[02:07:00] *** Quits: mven (~mven@ip68-104-39-54.lv.lv.cox.net) (Quit: Goodbye.)
[02:07:07] <megaTherion> xb0o2: you want to learn how computers work? Assembly!
[02:07:14] *** Joins: duds- (~duds-@gateway/tor-sasl/duds)
[02:07:22] *** Joins: mven (~mven@ip68-104-39-54.lv.lv.cox.net)
[02:07:27] *** Quits: mven (~mven@ip68-104-39-54.lv.lv.cox.net) (Client Quit)
[02:07:47] *** Joins: mven (~mven@ip68-104-39-54.lv.lv.cox.net)
[02:07:52] <xb0o2> Err, I want to learn C, but I have a pretty decent understanding of, f.ex., the memory management my higher level languages are doing on my behalf
[02:08:08] <caze> xb0o2: That knowledge could hurt you.
[02:08:12] <megaTherion> well ok, C is an abstraction sooo
[02:08:35] <xb0o2> A reasonable abstraction to work with, though.
[02:08:45] <caze> xb0o2: No.
[02:08:51] <xb0o2> No?
[02:09:09] <caze> xb0o2: It more often than not gets in the way of understanding how C works.
[02:09:35] <xb0o2> Oh, thought you meant no as in C is not a reasonable abstraction to work with.
[02:09:58] <caze> C is as reasonable abstraction as any other.
[02:10:13] <caze> It depends on the problem you're solving, of course.
[02:10:29] <xb0o2> I'm just looking for a suggestion that's not along the lines of "this is a computer" but "this is the nitty gritty of C, welcome to the real world".
[02:12:15] <xb0o2> For the definition of nitty gritty being a very modern nitty gritty because I have no particular need to deal with older versions of C, specific compilers etc.
[02:13:05] <megaTherion> modern versions of C wont save you from that
[02:13:12] <megaTherion> (if modern verisons are available for your desired platform anyways)
[02:13:29] <caze> C is a language with a specification - learn the specification, not the implementations.
[02:13:49] <caze> And modern versions of C are for the most part, supersets of earlier versions of C.
[02:14:00] <xb0o2> So your recommendation in this situation is sit down with a C specification? Really?
[02:14:15] <caze> You can learn it from a book.
[02:14:28] <xb0o2> Which book?
[02:14:34] <xb0o2> Which brings us to the original question.
[02:14:50] <caze> But just be sure the book is teaching the language, and not a particular implementation.
[02:15:28] <oldlaptop> K&R2 remains well-regarded, especially for its exercises. The changes in newer revisions of C do very little more than add features it won't teach you.
[02:15:28] *** Quits: Enitin (~Enitin@82.102.22.86) (Read error: Connection reset by peer)
[02:15:56] <oldlaptop> Modern C is regularly recommended for people seeking a free-as-in-beer book. (I should read it sometime.)
[02:16:04] *** Joins: Enitin (~Enitin@152.89.163.158)
[02:16:05] <caze> I've never read it.
[02:16:10] <xb0o2> oldlaptop: Thanks but are those features not good practice for new development?
[02:17:07] <oldlaptop> Some of them are, namely those that are widely-supported in practice. (Not all of the new features in C99 and C11 are widely-supported in practice, though C11 does make the ones they couldn't convince everyone to support "optional".)
[02:17:16] <caze> xb0o2: You can't really understand them without first understanding the existing features of the language.
[02:17:18] <axon> though I haven't read it, Effective C could be another choice, was released in 2020
[02:17:33] <oldlaptop> None of them are the kind of thing you see with C++, where many people will tell you that *failing* to use new features is *bad* practice.
[02:17:57] <caze> For instance, you can't understand variable length arrays without first understanding arrays.
[02:18:06] <oldlaptop> Failing to use //comments, or for (int var; ...), or interspersed declarations and code, is not something many people would call actively bad.
[02:18:49] <caze> xb0o2: There are really only two things in old C that are actively discouraged.
[02:18:50] <xb0o2> oldlaptop: So if I picked up K&R2, there's no glaring discrepancies between that and modern C?
[02:19:12] <oldlaptop> Not to nearly the same extent there would be with thirty years of development in most other languages.
[02:19:33] <xb0o2> Ok, great.
[02:19:36] <xb0o2> Thank you.
[02:19:49] <caze> xb0o2: Make sure to find the errata. The most valuable part of K&R is the exercises. Especially the Chapter 1 exercises.
[02:20:38] <oldlaptop> (Standardized C does permit some weird, archaic practices from the pre-standardization times, but K&R won't teach you to do that.)
[02:20:45] <oldlaptop> K&R2, rather.
[02:20:55] <oldlaptop> (The first edition will, obviously, because that is how things were done then.)
[02:21:32] <sham1> Which standard was the one that first introduced strict aliasing rules? Was it C1999? Because that'd be one of those things that the book may or may not violate
[02:21:48] <caze> xb0o2: From 1-17 on, the exercises done correctly, are harder than they first appear.
[02:22:51] <xb0o2> We'll see how I get on, thanks.
[02:23:07] *** Quits: magla (~gelignite@55d4db0b.access.ecotel.net) (Quit: Stay safe!)
[02:24:02] <oldlaptop> There are definitely *nice* things that didn't exist when K&R2 was written. (Anonymous unions are arguably the most sensible way to use unions, for example.)
[02:25:01] <oldlaptop> But some people would seriously tell you the "good practice" is to not use unions at all!
[02:25:11] <clarity> sham1: It's there in c89 but needs some help
[02:25:31] *** Quits: boB_K7IQ (~boB_K7IQ@152.44.147.180) (Ping timeout: 256 seconds)
[02:25:38] *** Quits: inlight (~inlight@user/inlight) (Remote host closed the connection)
[02:25:46] *** Joins: boB_K7IQ (~boB_K7IQ@152.44.147.180)
[02:26:04] *** Joins: pyook (~pyook@user/puke)
[02:26:55] <sham1> Unions can also be used for aliasing data
[02:27:18] <sham1> Which wasn't a thing when K&R2 was written
[02:28:36] *** Joins: mrgz (~mrgz@201-42-0-191.dsl.telesp.net.br)
[02:29:30] <rkta> caze: what are those two things in old C that are discouraged?
[02:29:41] <sham1> Although I'd probably still use memcpy for that because unaligned access
[02:30:48] *** Joins: BSaboia (~bsaboia@189.45.78.253)
[02:31:08] <caze> rkta: Initializer lists and gets.
[02:31:48] *** Quits: BSaboia (~bsaboia@189.45.78.253) (Remote host closed the connection)
[02:31:51] <oldlaptop> gets() is one of the few (or is it the only?) features that's truly been *removed* from more recent standards
[02:32:30] <oldlaptop> and of course there's a very good reason for that :(
[02:32:35] <fizzie> I would count implicit function declarations and implicit `int` in the set of "old language features still in C89 but nowadays discouraged" (and, in fact, removed in C99).
[02:32:44] <oldlaptop> I suppose trigraphs probably count as "discouraged" for most purposes.
[02:32:57] <sham1> Wait, initialiser lists? Really?
[02:33:08] *** Quits: pizdets_ (~pizdets@183.182.111.82) (Ping timeout: 250 seconds)
[02:34:06] <caze> sham1: For function definitions. i.e., K&R style
[02:34:08] <oldlaptop> People will laugh at you for using register too.
[02:34:08] *** Joins: pizdets (~pizdets@183.182.110.154)
[02:34:50] <fizzie> "Declaration list" is I think the name for those. At least in the syntax. "Initializer list" is more the brace-enclosed comma-separated list of initializers that you see in, well, initializers, and compound literals.
[02:35:22] <sham1> Oh those
[02:35:29] <oldlaptop> (I'd maintain it makes sense if you want for some reason to enforce that a variable's address is never taken - perhaps because you don't want to preclude the compiler's choice to put it in a register...)
[02:35:33] <sham1> Yeah, I was a bit confused
[02:36:03] *** Quits: mrig (~mrig@user/mrig) (Quit: WeeChat 2.8)
[02:36:21] <sham1> But yeah, K&R2 probably doesn't teach the K&R1 declaration syntax
[02:37:02] <rkta> what are those initilializer/declaration lists?
[02:37:34] <sham1> foo(bar, baz) int bar; char baz; {}
[02:38:01] <sokan> rsjw: so fscan is always failing because %*d won't always work?
[02:38:04] <sham1> As for initialiser lists, int foo[] = {1, 2, 3};
[02:38:26] <caze> ,c11 6.7.6.3p14
[02:38:28] <candide> http://www.iso-9899.info/n1570.html#6.7.6.3p14 [Function declarators (including prototypes)] An identifier list declares only the identifiers of the parameters of the function. An empty list in a function declarator that is part of a definition of that function specifies that the function has no parameters. The empty list in a function declarator that is not part of a definition of that function specifies... <truncated; https://0x0.st/ooj6.txt>
[02:38:34] <sham1> And other associated things, like designed initialisers
[02:38:48] <rsjw> sokan: if the first field isn't an integer, then %*d will fail
[02:39:17] <caze> sokan: Maybe you should read chapter 1 of K&R.
[02:39:28] <sokan> rsjw: and the line that is being read includes ATOM?
[02:39:34] <sham1> I'm very glad that we'll getting rid of needing to declare the parameter list (void) to have no parameters
[02:39:44] <caze> sokan: You apparently have no idea how streams work.
[02:40:01] <sokan> caze: will get down to it tomorrow. Thanks for the recommendation
[02:40:17] <sham1> scanf family
[02:40:24] <sokan> caze: I sadly have to agree that I'm not really sure how C works in general so far :
[02:40:27] <sokan> :\
[02:40:33] * sham1 glares in an annoyed manner
[02:40:36] *** Joins: duds-_ (~duds-@gateway/tor-sasl/duds)
[02:40:45] <rsjw> sokan: you probably want something like sscanf(line, "ATOM %*d etc", ...args here... );
[02:40:49] <sokan> Everything we're being taught is happening real fast for me to actually understand how it works
[02:41:11] <rkta> ah ok, function definitions with () should have really been (void).
[02:41:12] *** Quits: duds- (~duds-@gateway/tor-sasl/duds) (Ping timeout: 276 seconds)
[02:41:42] <caze> rkta: https://jameshfisher.com/2016/11/27/c-k-and-r/
[02:41:43] <candide> Title of caze's link: What is K&R style function definition in C?
[02:41:56] <sham1> Yeah. Pre-C2023, which we are currently living and using, () means that the function takes an indeterminate amount of parameters
[02:42:20] <sokan> rsjw: will give it a go tomorrow. thanks :)
[02:42:45] <rsjw> np
[02:42:56] <sham1> C++ for their part managed to change that earlier and now WG14 follows suite
[02:43:17] <fizzie> It doesn't really follow all that far.
[02:43:38] <fizzie> At least current C23 drafts still maintain that an empty parameter list in a non-definition function declaration means unspecified parameters.
[02:43:39] *** Quits: MajorBiscuit (~MajorBisc@86-88-79-148.fixed.kpn.net) (Ping timeout: 256 seconds)
[02:43:53] <fizzie> It's only in function definitions where it's (probably) in the future equivalent to `void`.
[02:43:58] <sham1> Really? I could have sworn that they changed it
[02:44:16] *** Joins: h4zel (~h4zel@user/h4zel)
[02:44:21] <sham1> Damn it legacy code
[02:44:23] <rkta> caze: oh, ok, _this_ old style, yep, bad idea
[02:44:47] *** Quits: candide (~pbot3@about/c/bot/candide) (Remote host closed the connection)
[02:44:47] *** duds-_ is now known as duds-
[02:45:10] *** Joins: candide (~pbot3@about/c/bot/candide)
[02:45:27] <sham1> I do wonder how much code actually relies on function declarations with () meaning indeterminate amount of formal parameters
[02:45:48] <fizzie> N2731 6.7.6.3p13: "For a function declarator without a parameter type list: if it is part of a definition of that function -- the effect is as if it were declared with a parameter type list consisting of the keyword `void`; otherwise it specifies that no information about the number or types of the parameters is supplied."
[02:46:30] *** Joins: Y4knotiS (~YaknotiS@cpc1-cmbg18-2-0-cust87.5-4.cable.virginm.net)
[02:47:21] <fizzie> What they changed was (a) removing the plain identifier list format; now it's just () or a parameter type list; and (b) changing the meaning in a *definition* from "specifies that the function has no parameters" to "equivalent to `void`" (a pretty subtle shift, but does mean a definition now always provides a prototype).
[02:47:29] *** Joins: soapsudsxx (~soapsudsx@141.193.188.140)
[02:48:16] <rkta> sham1: do function pointers count? w3m uses it, then.
[02:48:26] <sham1> Damn it
[02:48:57] *** Quits: diophantoz (~diophanto@user/diophantoz) (Ping timeout: 240 seconds)
[02:49:55] <Maxdamantus> So is this now invalid? void foo() int x; {}
[02:50:11] *** Quits: caveman (~caveman@gateway/tor-sasl/caveman) (Remote host closed the connection)
[02:50:25] <rsjw> I believe that was invalid even in K&R C
[02:50:41] <Maxdamantus> It's valid in C90.
[02:50:51] *** Joins: caveman (~caveman@gateway/tor-sasl/caveman)
[02:50:52] <sham1> I'd certainly hope that it'd be invalid even back then
[02:51:01] <sham1> Because that is just disgusting
[02:51:03] <rsjw> are you sure you don't need void foo(x) int x; {} ?
[02:51:13] <Maxdamantus> that `void foo() {}` syntax has always just been a special case of that old style of function definition.
[02:51:22] <Maxdamantus> Oh, mapbe.
[02:51:28] *** Quits: Juliu (~Juliu@2a02:810b:c640:3ec0:d190:13e6:b518:cdac) (Quit: Quit)
[02:51:33] <sham1> ,cc -ansi void foo() int x; {}
[02:51:39] <candide> sham1:  In function 'foo':  error: declaration for parameter 'x' but no such parameter
[02:51:40] <fizzie> I think it would have needed to be `foo(x) int x; {}`, yes.
[02:51:44] <sham1> Yeah
[02:51:47] <sham1> ,cc -ansi void foo(x) int x; {}
[02:51:54] <Maxdamantus> Right, so is that now invalid?
[02:52:03] <candide> sham1: No output.
[02:52:15] <sham1> Was already invalid in C1990 apparently
[02:52:21] <sham1> Thanks ANSI c
[02:52:43] <nomagno> It was deprecated
[02:52:44] <nomagno> Not invalid
[02:53:02] <sham1> Not listing the parameter inside the parenthesis?
[02:53:14] <Maxdamantus> ,cc void foo(x) int x; {}
[02:53:18] <candide> Maxdamantus: [warning: ISO C forbids nested functions [-Wpedantic]]  Success (no output).
[02:53:49] <fizzie> (Also, candide's magical function extraction code has trouble with old-style function definitions.)
[02:53:54] <Maxdamantus> No, I mean listing but declaring the types afterwards, leading to a function type with no prototype.
[02:54:35] <sham1> Yeah, it's valid pre-C2023 but deprecated. I hope anyway, since it's just removed in C2023
[02:54:35] <fizzie> The "identifier list in parentheses, followed by a declaration list" style isn't invalid _yet_, but it is invalid in the C23 drafts published so far.
[02:56:01] <fizzie> The proposal that got integrated in the drafts: http://www.open-std.org/jtc1/sc22/wg14/www/docs/n2432.pdf
[02:56:04] *** Quits: steve__ (~steve@ool-182c2b80.dyn.optonline.net) (Ping timeout: 250 seconds)
[02:56:14] <sham1> Good riddance
[02:56:19] <nomagno> So, in C23 signed integer arithmetic is finally fully defined?
[02:56:29] <fizzie> No, just the representation.
[02:56:33] <sham1> Sadly no, even though they could
[02:56:42] <nomagno> That's nonsensical
[02:56:48] <sham1> Yes it is
[02:57:09] <sham1> Gotta wait for C203x for anything
[02:57:33] <fizzie> From N2432: "The -- property to provide declarations without prototypes -- has also been marked obsolescent in the C standard, but still is relatively widely used. In particular, it seems that the possibility to declare function pointers with unknown parameter lists is appreciated in parts of the C community for dealing with function call backs."
[02:57:44] <fizzie> (First time I've seen "callback" as two separate words.)
[02:57:50] <nomagno> By 2040 we can start using signed integers for stuff that could possibly overflow
[02:57:52] <nomagno> :)
[02:58:10] <sham1> Checked arithmetic doe
[02:58:17] *** Quits: Y4knotiS (~YaknotiS@cpc1-cmbg18-2-0-cust87.5-4.cable.virginm.net) (Ping timeout: 240 seconds)
[02:58:27] <nomagno> Oh yes, that
[02:58:31] <nomagno> For callbacks
[02:58:55] <sham1> Could just cast back and forth between valid pointers to callback functions
[02:59:58] <nomagno> I agree with the reasoning of empty parameter lists being useful for callbacks, but
[03:00:03] <rsjw> from K&R1: "The identifiers in the parameter list, and only those identifiers, may be declared in the declaration list. Any identifiers whose type is not given are taken to be int."
[03:00:25] <fizzie> Could, though for some reason using an arbitrary "generic" function pointer type + explicit casts always feels a little like using a `char *` in place of a `void *`.
[03:00:45] *** Joins: cvmn (~caveman@gateway/tor-sasl/caveman)
[03:01:24] <rsjw> and K&R2 does talk about old-style definitions. it was pretty important to do so, so that people could supply function prototypes for their old-style functions and so they'd need to know how it worked
[03:02:00] <fizzie> As part of removing implicit int, they did change that last part for C99 and later; in addition to it being an "obsolescent feature", you do also have to declare all the identifiers.
[03:02:10] <sham1> I don't. I find it silly and even glib does this correctly by having a GCallback type which is IIRC either void(GCallback)(gpointer /* i.e. pointer to void */) or void (*GCallback)(gpointer)
[03:02:23] *** Quits: Akuli (~Akuli@213.216.208.31) (Quit: Akuli)
[03:02:48] <sham1> Can't remember which
[03:02:50] *** Joins: Akuli (~Akuli@213.216.208.31)
[03:03:04] <fizzie> (C11 6.9.1p6: "If the [function] declarator includes an identifier list, each declaration in the declaration list shall have at least one declarator, those declarators shall declare only identifiers from the identifier list, and every identifier in the identifier list shall be declared.")
[03:03:09] *** Quits: Akuli (~Akuli@213.216.208.31) (Client Quit)
[03:03:24] *** Joins: Akuli (~Akuli@213.216.208.31)
[03:03:38] <sham1> And you'd change the function pointer to and from GCallback when doing stuff like connecting signals and all that
[03:04:11] *** Quits: Akuli (~Akuli@213.216.208.31) (Client Quit)
[03:04:59] *** Joins: Akiva (~Akiva@user/Akiva)
[03:05:54] *** Quits: kish` (~aqua@user/aqua) (Ping timeout: 276 seconds)
[03:06:54] *** Quits: foul_owl (~kerry@174-21-143-101.tukw.qwest.net) (Ping timeout: 250 seconds)
[03:06:58] <fizzie> `typedef void (*GCallback)(void);`, apparently. It doesn't take a gpointer.
[03:07:12] <sham1> Abs I suppose it doesnt
[03:07:34] <sham1> I can't imagine a situation where I wouldn't want to pass user data, but alright
[03:07:43] <fizzie> Also comes with a G_CALLBACK macro so your cast is... well, prettier or uglier, depending on how you view it.
[03:07:47] <sham1> Yeah
[03:09:05] *** Quits: Klinda (~superleag@user/klinda) (Quit: Konversation terminated!)
[03:09:31] <sham1> It is indeed an interesting way of making use of the fact that a pointer to a function is compatible with another pointer to a function, and where one just needs to cast back to the original and everything is fine
[03:10:02] <fizzie> I was once thinking of using `typedef void any_function(struct any_function_dummy_parameter unused);` as a generic function pointer type, because the function would then be uncallable without converting it, since the struct declaration would have function prototype scope (and would be incomplete as well), meaning no value for the parameter could be constructed.
[03:10:13] <fizzie> Sadly, compiler warnings ruined that idea.
[03:10:45] <clarity> That's when I turn them off
[03:11:15] <fizzie> GCC has one warning about using the function prototype scope in general, and it also special-cases `void (*)(void)` as the only type exempt from the other warning about converting between incompatible function types.
[03:11:45] *** Joins: wroathe (~wroathe@206-55-188-8.fttp.usinternet.com)
[03:11:45] *** Quits: wroathe (~wroathe@206-55-188-8.fttp.usinternet.com) (Changing host)
[03:11:45] *** Joins: wroathe (~wroathe@user/wroathe)
[03:12:32] <fizzie> ,cc int f(int x) { return x; }  void (*p)(void) = (void (*)(void)) f; printf("%d", ((int (*)(int)) p)(123)); // okay
[03:12:35] <candide> fizzie: 123
[03:12:36] <fizzie> ,cc int f(int x) { return x; }  void (*p)() = (void (*)()) f; printf("%d", ((int (*)(int)) p)(123)); // not okay
[03:12:39] <candide> fizzie: [warning: cast between incompatible function types from 'int (*)(int)' to 'void (*)()' [-Wcast-function-type]  warning: cast between incompatible function types from 'void (*)()' to 'int (*)(int)' [-Wcast-function-type]] 123
[03:14:31] *** Quits: LucaTM (~LucaTM@user/lucatm) (Quit: Textual IRC Client: www.textualapp.com)
[03:14:34] <rsjw> ,cc int f(int x) { return x; }  void (*p)() = (void (*)()) f; printf("%d", ((int (*)()) p)(123));
[03:14:36] <candide> rsjw: [warning: cast between incompatible function types from 'int (*)(int)' to 'void (*)()' [-Wcast-function-type]  warning: cast between incompatible function types from 'void (*)()' to 'int (*)()' [-Wcast-function-type]] 123
[03:14:57] *** Quits: gproto23 (~gproto23@user/gproto23) (Ping timeout: 240 seconds)
[03:15:15] <rsjw> oh well
[03:16:56] <pragma-> ,cc diff
[03:16:57] <candide> pragma-: int f(int x) { return x; }  void (*p)() = (void (*)()) f; printf("%d" , ((int `replaced (*)(int)) with (*)())` p)(123`replaced )); // not okay with ));`
[03:17:21] <fizzie> Nice diff.
[03:17:26] <pragma-> Bit hard to read.
[03:20:56] *** Joins: foul_owl (~kerry@94.140.8.106)
[03:21:51] *** Joins: liba (~liba@user/liba)
[03:23:57] *** Joins: Thedarkb-Desktop (~Thedarkb@2001:bb6:b403:e042:e14d:e1b1:5171:bd56)
[03:29:00] *** Joins: kish` (~aqua@user/aqua)
[03:29:19] *** Quits: kish` (~aqua@user/aqua) (Remote host closed the connection)
[03:29:41] *** Joins: kish` (~aqua@user/aqua)
[03:30:47] *** Joins: BSaboia (~bsaboia@189.45.78.253)
[03:31:09] *** Joins: van3ll0pe (~van3ll0pe@2a01:e0a:53d:ab30:1428:3f03:d41b:8cc9)
[03:34:40] *** Joins: ferdna (~ferdna@user/ferdna)
[03:36:41] *** Quits: kenanmarasli (~kenanmara@user/kenanmarasli) (Quit: Leaving)
[03:37:31] *** Quits: BSaboia (~bsaboia@189.45.78.253) (Quit: This computer has gone to sleep)
[03:39:01] *** Quits: williampiv (~williampi@ip24-254-86-223.sb.sd.cox.net) (Quit: williampiv)
[03:40:34] *** Joins: BSaboia (~bsaboia@189.45.78.253)
[03:42:10] *** Quits: vicfred (~vicfred@user/vicfred) (Quit: Leaving)
[03:42:30] *** Quits: BSaboia (~bsaboia@189.45.78.253) (Client Quit)
[03:43:52] *** Quits: aighearach_ (~paris@c-71-63-160-210.hsd1.or.comcast.net) (Remote host closed the connection)
[03:44:03] *** Joins: van3ll0pe_ (~van3ll0pe@88.124.246.172)
[03:44:16] *** Joins: aighearach_ (~paris@c-71-63-160-210.hsd1.or.comcast.net)
[03:46:09] *** Quits: van3ll0pe (~van3ll0pe@2a01:e0a:53d:ab30:1428:3f03:d41b:8cc9) (Read error: Connection reset by peer)
[03:46:37] *** Quits: night_wulfe (~wulfe@cpe-174-103-156-213.cinci.res.rr.com) (Ping timeout: 240 seconds)
[03:48:17] *** Joins: night_wulfe (~wulfe@cpe-174-103-156-213.cinci.res.rr.com)
[03:48:17] *** Quits: TonyStone (~TonyStone@cpe-74-76-51-197.nycap.res.rr.com) (Remote host closed the connection)
[03:54:17] *** Quits: Burgundy (~NA@86.121.143.206) (Ping timeout: 240 seconds)
[03:56:46] *** Quits: blindguard (~blindguar@2a02:908:1864:c200::12) (Quit: Konversation terminated!)
[03:57:31] *** Joins: lunix00 (~lunix00@177.200.75.136)
[03:57:53] *** Quits: joedoe47 (~weechat@c-98-254-188-143.hsd1.fl.comcast.net) (Ping timeout: 256 seconds)
[03:58:14] *** Joins: joedoe47 (~weechat@c-98-254-188-143.hsd1.fl.comcast.net)
[03:58:51] *** Quits: et09 (~et09@user/et09) (Read error: Connection reset by peer)
[03:59:04] *** Joins: TonyStone (~TonyStone@2603-7080-8607-c36a-65df-a0f5-02cd-1378.res6.spectrum.com)
[03:59:59] *** Joins: chenqisu12 (~bhca7d@183.217.201.21)
[04:00:02] *** Quits: chomwitt (~chomwitt@2a02:587:dc03:8b00:12c3:7bff:fe6d:d374) (Ping timeout: 240 seconds)
[04:00:20] *** Quits: kplant (~kplant@user/kplant) (Ping timeout: 256 seconds)
[04:00:39] *** Joins: kplant (~kplant@user/kplant)
[04:01:49] *** Quits: bgs (~bgs@upc.si.94.140.92.241.dc.cable.static.telemach.net) (Ping timeout: 240 seconds)
[04:04:41] *** Joins: pert (~pert@fsf/member/pert)
[04:05:16] *** Joins: chenqisu1 (~bhca7d@183.217.201.21)
[04:06:00] *** Quits: chenqisu12 (~bhca7d@183.217.201.21) (Ping timeout: 256 seconds)
[04:07:32] *** Quits: slidercrank (~slidercra@user/slidercrank) (Ping timeout: 240 seconds)
[04:07:39] *** Quits: supajerm (~supajerm@gateway/vpn/pia/supajerm) (Remote host closed the connection)
[04:07:54] *** Joins: Senicar3 (~Senicar@gateway/tor-sasl/senicar)
[04:07:58] *** Joins: supajerm (~supajerm@gateway/vpn/pia/supajerm)
[04:08:05] *** Quits: kplant (~kplant@user/kplant) (Ping timeout: 256 seconds)
[04:08:34] *** Joins: kplant (~kplant@user/kplant)
[04:09:17] *** Quits: freakazoid343 (~matt@2603:9000:cf03:86c3:b961:f861:f001:8bb7) (Quit: Leaving)
[04:09:18] *** Quits: crashrep (~crashrep@user/crashrep) (Quit: WeeChat 3.4)
[04:09:34] *** Joins: crashrep (~crashrep@user/crashrep)
[04:10:15] *** Quits: Senicar (~Senicar@gateway/tor-sasl/senicar) (Ping timeout: 276 seconds)
[04:10:16] *** Senicar3 is now known as Senicar
[04:11:31] *** Quits: lunix00 (~lunix00@177.200.75.136) (Quit: My MacBook Air has gone to sleep. ZZZzzzâ€¦)
[04:12:12] *** Quits: cvmn (~caveman@gateway/tor-sasl/caveman) (Ping timeout: 276 seconds)
[04:13:11] *** Quits: Wulf (~Wulf@user/wulf) (Ping timeout: 256 seconds)
[04:14:52] *** Joins: williampiv (~williampi@ip24-254-86-223.sb.sd.cox.net)
[04:14:57] *** Joins: Wulf (~Wulf@user/wulf)
[04:15:52] *** Quits: williampiv (~williampi@ip24-254-86-223.sb.sd.cox.net) (Client Quit)
[04:15:53] *** Joins: lunix00 (~lunix00@177.200.75.136)
[04:17:54] *** Quits: dogbert2 (~Bill@ip68-105-189-91.lv.lv.cox.net) (Remote host closed the connection)
[04:18:10] *** Joins: dogbert2 (~Bill@ip68-105-189-91.lv.lv.cox.net)
[04:18:26] *** Quits: lunix00 (~lunix00@177.200.75.136) (Client Quit)
[04:19:02] *** Joins: freakazoid333 (~matt@2603:9000:cf03:86c3:60a2:ba13:41c5:d22f)
[04:21:01] *** Quits: boB_K7IQ (~boB_K7IQ@152.44.147.180) ()
[04:24:34] *** Joins: hllywluis (~hllywluis@2601:583:300:7090::8158)
[04:27:00] *** Joins: cheakoirccloud (uid293319@id-293319.ilkley.irccloud.com)
[04:28:26] *** Joins: lunix00 (~lunix00@177.200.75.136)
[04:30:57] *** Quits: liba (~liba@user/liba) (Ping timeout: 240 seconds)
[04:30:58] *** Quits: waveclaw (~quassel@ip98-162-237-241.ok.ok.cox.net) (Ping timeout: 250 seconds)
[04:31:28] *** Quits: lunix00 (~lunix00@177.200.75.136) (Client Quit)
[04:34:28] *** Quits: hllywluis (~hllywluis@2601:583:300:7090::8158) (Quit: hllywluis)
[04:36:36] *** Quits: wroathe (~wroathe@user/wroathe) (Ping timeout: 256 seconds)
[04:37:08] *** Joins: wroathe (~wroathe@206-55-188-8.fttp.usinternet.com)
[04:37:08] *** Quits: wroathe (~wroathe@206-55-188-8.fttp.usinternet.com) (Changing host)
[04:37:08] *** Joins: wroathe (~wroathe@user/wroathe)
[04:40:32] *** Joins: dsrt^ (~dsrt@207.182.73.202)
[04:42:40] *** Joins: ott (~u0_a161@27.97.160.86)
[04:46:37] *** Quits: Akiva (~Akiva@user/Akiva) (Ping timeout: 256 seconds)
[04:47:04] *** Quits: xb0o2 (~xb0o2@user/xb0o2) (Quit: Client closed)
[04:50:10] *** Joins: Rounin (~david@84.212.130.215)
[04:51:07] *** Quits: freep (~freepppp@62.1.35.210.dsl.dyn.forthnet.gr) (Read error: Connection reset by peer)
[04:52:07] *** Quits: seninha (~seninha@user/seninha) (Quit: Leaving)
[04:52:45] *** Quits: youssef_ (~youssef@26.173.112.78.rev.sfr.net) (Remote host closed the connection)
[04:54:55] *** Quits: cheakoirccloud (uid293319@id-293319.ilkley.irccloud.com) ()
[05:00:02] *** Joins: penguino (~mrpenguin@user/mrpenguin)
[05:00:47] *** Quits: wroathe (~wroathe@user/wroathe) (Ping timeout: 256 seconds)
[05:04:11] *** Joins: wroathe (~wroathe@206-55-188-8.fttp.usinternet.com)
[05:04:11] *** Quits: wroathe (~wroathe@206-55-188-8.fttp.usinternet.com) (Changing host)
[05:04:11] *** Joins: wroathe (~wroathe@user/wroathe)
[05:05:37] *** Joins: vysn (~vysn@user/vysn)
[05:16:01] *** Quits: caze (~caze@user/caze) (Quit: caze)
[05:16:17] *** Joins: caze (~caze@user/caze)
[05:19:47] *** Quits: ott (~u0_a161@27.97.160.86) (Read error: Connection reset by peer)
[05:21:09] *** Joins: kurahaupo (~kurahaupo@115.69.27.211)
[05:24:32] *** Quits: bebyx (~Thunderbi@user/bebyx) (Ping timeout: 240 seconds)
[05:25:20] *** Quits: random-nick (~random-ni@87.116.181.150) (Ping timeout: 256 seconds)
[05:26:38] *** Joins: fmlatghor (~lcoogan@2601:5cd:8100:2890::6)
[05:30:35] *** Quits: perrierjouet (~perrier-j@modemcable012.251-130-66.mc.videotron.ca) (Quit: WeeChat 3.4)
[05:32:29] *** Joins: harveypwca (~harveypwc@2601:246:c180:a570:3828:d8:e523:3f67)
[05:32:29] *** Joins: perrierjouet (~perrier-j@modemcable012.251-130-66.mc.videotron.ca)
[05:37:03] *** Quits: gr33n7007h (~gr33n7007@user/gr33n7007h) (Ping timeout: 256 seconds)
[05:38:39] *** Quits: ferdna (~ferdna@user/ferdna) (Quit: Leaving)
[05:38:50] *** Joins: gr33n7007h (~gr33n7007@user/gr33n7007h)
[05:42:11] *** Joins: CatCow (~wtf_over@c-73-96-109-206.hsd1.or.comcast.net)
[05:43:01] *** Quits: van3ll0pe_ (~van3ll0pe@88.124.246.172) (Read error: Connection reset by peer)
[05:43:08] *** Joins: van3ll0pe_ (~van3ll0pe@2a01:e0a:53d:ab30:1428:3f03:d41b:8cc9)
[05:46:09] *** Quits: pippijn (~pippijn@isis.xinutec.org) (Remote host closed the connection)
[05:46:40] *** Joins: pippijn (~pippijn@isis.xinutec.org)
[05:47:16] *** Joins: williampiv (~williampi@ip24-254-86-223.sb.sd.cox.net)
[05:47:17] *** Quits: coc0nut (~coc0nut@user/coc0nut) (Quit: ZNC 1.8.2 - https://znc.in)
[05:49:24] *** Joins: coc0nut (~coc0nut@user/coc0nut)
[05:51:11] *** Quits: plastico (~plastico@neomutt/plastico) (Quit: WeeChat 3.4)
[05:56:13] *** Joins: Atque (~Atque@user/atque)
[05:56:56] *** Joins: Fl1pFl0p (~FlipFlop@user/fl1pfl0p)
[05:57:25] *** Quits: zmt00 (~zmt00@user/zmt00) (Read error: Connection reset by peer)
[05:58:04] *** Quits: penguino (~mrpenguin@user/mrpenguin) (Quit: penguino)
[05:58:11] *** Joins: rgrinberg (~textual@2806:101e:7:2b:bcc3:4b5c:4ace:b143)
[05:58:23] *** Quits: alch (~alch@151.36.135.75) (Read error: Connection reset by peer)
[05:59:27] *** Joins: zmt00 (~zmt00@user/zmt00)
[06:00:32] *** Quits: Fl0pFl1p (~FlipFlop@user/fl1pfl0p) (Ping timeout: 240 seconds)
[06:02:51] *** Joins: alch (~alch@151.38.161.129)
[06:03:02] *** Quits: williampiv (~williampi@ip24-254-86-223.sb.sd.cox.net) (Quit: williampiv)
[06:03:21] *** Joins: whatsupdoc (uid509081@id-509081.hampstead.irccloud.com)
[06:06:35] *** Quits: beg (~begriffs@user/begriffs) (Remote host closed the connection)
[06:06:57] *** Joins: beg (~begriffs@user/begriffs)
[06:14:37] *** Joins: hllywluis (~hllywluis@c-76-108-51-178.hsd1.fl.comcast.net)
[06:15:14] *** Joins: pulse (~pulse@user/pulse)
[06:17:16] *** Quits: hllywluis (~hllywluis@c-76-108-51-178.hsd1.fl.comcast.net) (Client Quit)
[06:22:30] *** Joins: PortableDave (~portabled@203.87.67.190)
[06:23:08] *** Joins: kit_ten (~u0_a391@2603-6010-a141-6fa3-f44f-d859-cfd9-2a3c.res6.spectrum.com)
[06:27:06] *** Quits: kit-ten (~u0_a391@2600:380:5e31:4b63:b498:db7f:f13b:e4c4) (Ping timeout: 250 seconds)
[06:27:09] *** Quits: supajerm (~supajerm@gateway/vpn/pia/supajerm) (Remote host closed the connection)
[06:27:28] *** Joins: supajerm (~supajerm@gateway/vpn/pia/supajerm)
[06:28:33] *** Joins: penguino (~mrpenguin@user/mrpenguin)
[06:29:11] *** Quits: FluffyMask (~masque@user/fluffymask) (Quit: WeeChat 3.4)
[06:32:36] *** Quits: elkalamar (elkalamar@gateway/vpn/airvpn/elkalamar) (Quit: Leaving)
[06:32:56] *** Quits: nostar (~nostar@45.14.195.74) (Quit: Leaving)
[06:33:20] *** Quits: banc (banc@gateway/vpn/airvpn/banc) (Ping timeout: 256 seconds)
[06:33:24] *** Joins: kitsunenokenja (~kitsunech@68.91.220.96)
[06:34:19] *** Joins: ott (~u0_a161@49.15.220.212)
[06:39:43] *** Joins: otty (~u0_a161@2402:3a80:e3d:a07c:e410:2e59:ee9d:8511)
[06:41:41] *** Quits: h4zel (~h4zel@user/h4zel) (Quit: WeeChat 2.8)
[06:43:34] *** Quits: ott (~u0_a161@49.15.220.212) (Ping timeout: 250 seconds)
[06:44:35] *** Quits: pulse (~pulse@user/pulse) (Quit: pulse)
[06:48:39] *** Joins: Everything (~Everythin@37.115.210.35)
[06:48:49] *** Joins: nostar (~nostar@2601:406:4100:34d:8f4:5ea7:30b2:b7e6)
[06:51:57] *** Quits: PortableDave (~portabled@203.87.67.190) (Ping timeout: 240 seconds)
[06:52:57] *** Joins: nitrix (~nitrix@user/nitrix)
[06:55:37] *** Quits: wootehfoot (~wootehfoo@user/wootehfoot) (Read error: Connection reset by peer)
[06:56:00] *** Joins: pnbeast (~pnbeast@2601:140:4280:6ce0::1)
[06:59:53] *** Joins: williampiv (~williampi@ip24-254-86-223.sb.sd.cox.net)
[07:01:06] *** Quits: harveypwca (~harveypwc@2601:246:c180:a570:3828:d8:e523:3f67) (Quit: Leaving)
[07:03:59] *** Joins: hayden (~hayden@2601:1c0:8101:7310::ffe5)
[07:07:33] *** Joins: asdafasskadkasda (~asdafassk@151.210.139.245)
[07:07:37] *** Joins: williampiv_ (~williampi@ip24-254-86-223.sb.sd.cox.net)
[07:07:42] *** Quits: asdafasskadkasda (~asdafassk@151.210.139.245) (Client Quit)
[07:07:57] *** Quits: williampiv (~williampi@ip24-254-86-223.sb.sd.cox.net) (Ping timeout: 240 seconds)
[07:08:02] *** Joins: dyeplexer (~dyeplexer@user/dyeplexer)
[07:08:57] *** Joins: killadi (~u0_a161@49.15.220.212)
[07:10:32] *** Quits: williampiv_ (~williampi@ip24-254-86-223.sb.sd.cox.net) (Client Quit)
[07:10:52] *** Quits: otty (~u0_a161@2402:3a80:e3d:a07c:e410:2e59:ee9d:8511) (Ping timeout: 250 seconds)
[07:11:49] *** Joins: williampiv (~williampi@ip24-254-86-223.sb.sd.cox.net)
[07:13:07] *** Quits: mad_enz (~mad_enz@lnsm3-torontoxn-142-116-106-108.internet.virginmobile.ca) (Remote host closed the connection)
[07:16:22] *** Quits: skapate (~Skapata@user/skapata) (Ping timeout: 268 seconds)
[07:19:00] *** Joins: Betal (~Betal@user/betal)
[07:19:37] *** Quits: killadi (~u0_a161@49.15.220.212) (Ping timeout: 256 seconds)
[07:22:33] *** Quits: williampiv (~williampi@ip24-254-86-223.sb.sd.cox.net) (Quit: williampiv)
[07:27:07] *** Quits: supajerm (~supajerm@gateway/vpn/pia/supajerm) (Remote host closed the connection)
[07:27:38] *** Joins: wlperdue (~wlperdue@ip24-254-86-223.sb.sd.cox.net)
[07:27:47] *** Joins: supajerm (~supajerm@gateway/vpn/pia/supajerm)
[07:29:17] *** Quits: nyah (~nyah@94.6.71.219) (Ping timeout: 240 seconds)
[07:30:19] *** Joins: liba (~liba@user/liba)
[07:33:51] *** Joins: malina (~malina@user/malina)
[07:35:45] <pert> I asked this in #posix but think perhaps the larger audience here can help me out.
[07:35:47] <pert> how is the wc command supposed to work? POSIX says that it's required to work for binary files with arbitrary data, but then how do you recognize which characters are whitespace separating words if they can potentially be locale-dependent multibyte characters?
[07:36:00] <pert> should an implementation try converting sequences of bytes to a wide character opportunistically, and then, if that succeeds, pass it to something like iswspace? I'm pondering how to implement it myself if I were to write it in C
[07:36:02] *** Quits: supakeen (~user@python/site-packages/supakeen) (Quit: WeeChat 3.4)
[07:36:14] *** Joins: fe23 (~fe23@2409:8a34:461:9470:459c:a906:cba4:4214)
[07:36:34] *** Joins: supakeen (~user@python/site-packages/supakeen)
[07:37:12] *** Joins: eelstrebor (~eelstrebo@198-178-29-136.scb.ne.static.allophone.net)
[07:37:16] *** Parts: cmburn (~cmburn@c-107-4-141-134.hsd1.mn.comcast.net) ()
[07:37:40] <crashrep> are you sure that word counting is supposed or intended to work with binary, or if just the character (byte) count is what is meant to do with wc binary files?
[07:38:32] *** Quits: kit_ten (~u0_a391@2603-6010-a141-6fa3-f44f-d859-cfd9-2a3c.res6.spectrum.com) (Read error: Connection reset by peer)
[07:38:44] *** Joins: kit_ten (~u0_a391@2603-6010-a141-6fa3-f44f-d859-cfd9-2a3c.res6.spectrum.com)
[07:39:41] *** Quits: wovixo (~wovixo@128.104.205.49) (Read error: Connection reset by peer)
[07:39:43] <pert> crashrep: perhaps you're onto something. perhaps my wc can simply bail out with failure if it gets EILSEQ and discovers that a file is a binary file and a word count was requested
[07:40:03] *** Joins: wovixo (~wovixo@128.104.205.49)
[07:40:09] <crashrep> pert: i actually don't know if this is the case with POSIC wc, let me check
[07:40:11] *** Quits: sebag (~guest@91.245.82.2) (Quit: WeeChat 3.1)
[07:40:41] <g0z> man I'm getting annoyed at my variable names now lol.
[07:40:44] *** Joins: sebag (~guest@91.245.82.2)
[07:40:47] <Rounin> You could also say that certain control characters etc. are separators along with whitespace... Then again, how would you know there isn't some encoding where they're used for text
[07:41:11] <Rounin> For instance, the Windows codepages sometimes use characters that ANSI encodings don't
[07:41:20] <crashrep> no, you can still do wc -w on binary files, and it returns a number
[07:42:17] *** Quits: eelstrebor (~eelstrebo@198-178-29-136.scb.ne.static.allophone.net) (Ping timeout: 240 seconds)
[07:43:42] *** Quits: zmt00 (~zmt00@user/zmt00) (Read error: Connection reset by peer)
[07:45:06] *** Joins: zmt00 (~zmt00@user/zmt00)
[07:45:49] <pert> I don't know how I should handle it then
[07:46:53] *** Joins: vicfred (~vicfred@user/vicfred)
[07:49:51] <pnbeast> pert, use magic to identify the type of file and if it's something you don't want to count, just emit "my god, it's full of stars" on stderr.
[07:50:57] *** Quits: _mikey (~mikey@user/mikey/x-4335048) (Quit: WeeChat 3.4)
[07:52:20] <rsjw> maybe the current locale would tell you what format to consider it as
[07:53:49] <Rounin> Right, right... It's one thing to work with ASCII-based encodings, but then we have UTF-16 and UTF-32... Well, even in those encodings, I suppose a space would still be a space, except it would have extra nulls attached...
[07:54:05] <Rounin> Then you have issues such as the additional Unicode linebreaks and other kinds of spaces...
[07:54:27] <Rounin> Then you have languages with other kinds of separators due to having other writing systems... And then on top of that you have things such as EBCDIC
[07:54:41] <Rounin> It all depends on what you want the program to actually do
[07:54:57] <Rounin> For most things, even UTF-32, you should be able to just break on space, tab, form feed and the usual things, as they're < 128
[07:55:24] <Rounin> Unless you want to also support the additional Unicode whitespace characters
[07:55:33] <Rounin> wc -c would be a bigger problem, really
[07:55:55] <Rounin> Does it count bytes or codepoints or characters or what... What about UTF-16 surrogates, etc.
[07:56:56] *** Joins: eelstrebor (~eelstrebo@198-178-29-136.scb.ne.static.allophone.net)
[08:04:31] *** Joins: h4zel (~h4zel@user/h4zel)
[08:06:57] *** Joins: PortableDave (~portabled@203.87.67.190)
[08:09:28] *** Joins: oxfuxxx (~oxfuxxx@160.238.38.155)
[08:10:48] *** Quits: pert (~pert@fsf/member/pert) (Quit: pert)
[08:11:06] *** Quits: PortableDave (~portabled@203.87.67.190) (Ping timeout: 250 seconds)
[08:11:51] *** Joins: pert (~pert@fsf/member/pert)
[08:12:11] *** Quits: pert (~pert@fsf/member/pert) (Remote host closed the connection)
[08:14:12] *** Quits: oxfuxxx (~oxfuxxx@160.238.38.155) (Ping timeout: 256 seconds)
[08:14:16] *** Joins: AbleBacon_ (~AbleBacon@user/AbleBacon)
[08:14:46] *** Quits: mrgz (~mrgz@201-42-0-191.dsl.telesp.net.br) (Ping timeout: 256 seconds)
[08:16:37] *** Quits: AbleBacon (~AbleBacon@user/AbleBacon) (Ping timeout: 240 seconds)
[08:17:42] *** Joins: kurahaupo_ (~kurahaupo@pa49-182-49-2.pa.qld.optusnet.com.au)
[08:17:49] *** Quits: pieguy128 (~pieguy128@bras-base-mtrlpq5031w-grc-35-70-24-248-134.dsl.bell.ca) (Quit: ZNC 1.8.2 - https://znc.in)
[08:19:41] *** Quits: kurahaupo (~kurahaupo@115.69.27.211) (Ping timeout: 256 seconds)
[08:21:05] *** Joins: pieguy128 (~pieguy128@bras-base-mtrlpq5031w-grc-35-70-24-248-134.dsl.bell.ca)
[08:27:12] *** Joins: sdfgsdfg (~sdfgsdfg@user/sdfgsdfg)
[08:29:42] *** Quits: pucara (~i@host14.181-1-101.telecom.net.ar) (Quit: Lost terminal)
[08:30:51] *** Joins: torstenvl (~torstenvl@2601:14b:200:1e9c:ec74:83cf:9126:6a4f)
[08:40:34] *** Quits: chenqisu1 (~bhca7d@183.217.201.21) (Ping timeout: 250 seconds)
[08:41:53] *** Joins: killadi (~u0_a161@205.185.125.31)
[08:42:37] *** Quits: wroathe (~wroathe@user/wroathe) (Ping timeout: 240 seconds)
[08:49:29] *** Quits: notzmv (~zmv@user/notzmv) (Ping timeout: 268 seconds)
[08:50:55] *** Joins: wroathe (~wroathe@206-55-188-8.fttp.usinternet.com)
[08:50:55] *** Quits: wroathe (~wroathe@206-55-188-8.fttp.usinternet.com) (Changing host)
[08:50:55] *** Joins: wroathe (~wroathe@user/wroathe)
[08:55:17] *** Quits: wroathe (~wroathe@user/wroathe) (Ping timeout: 240 seconds)
[08:56:16] *** Quits: kaph (~kaph@net-2-47-208-144.cust.vodafonedsl.it) (Ping timeout: 268 seconds)
[08:56:42] *** Quits: killadi (~u0_a161@205.185.125.31) (Ping timeout: 256 seconds)
[08:58:31] *** Quits: AmR (~AmREiSa@156.199.9.4) (Quit: Konversation terminated!)
[08:58:46] *** Quits: Thedarkb-Desktop (~Thedarkb@2001:bb6:b403:e042:e14d:e1b1:5171:bd56) (Ping timeout: 250 seconds)
[09:00:40] *** Quits: kitsunenokenja (~kitsunech@68.91.220.96) (Ping timeout: 256 seconds)
[09:02:02] *** Joins: hiovoltage (~hiovoltag@78.186.68.182)
[09:07:38] *** Quits: eelstrebor (~eelstrebo@198-178-29-136.scb.ne.static.allophone.net) (Quit: Ex-Chat)
[09:07:49] *** Joins: slidercrank (~slidercra@user/slidercrank)
[09:09:14] *** Joins: boB_K7IQ (~boB_K7IQ@c-24-19-1-225.hsd1.wa.comcast.net)
[09:12:12] *** Quits: hayden (~hayden@2601:1c0:8101:7310::ffe5) (Ping timeout: 250 seconds)
[09:12:27] *** Joins: gco (~gco@2601:647:4c80:2424:48f0:57ae:323:8448)
[09:16:55] *** Quits: hiovoltage (~hiovoltag@78.186.68.182) (Ping timeout: 256 seconds)
[09:29:13] *** Joins: hiovoltage (~hiovoltag@78.186.68.182)
[09:32:49] *** Joins: _mikey (~mikey@user/mikey/x-4335048)
[09:33:15] *** Quits: Satin (uid193953@user/Seten) (Quit: Connection closed for inactivity)
[09:34:21] *** Quits: Zambyte (~Zambyte@cpe-104-228-60-14.nycap.res.rr.com) (Quit: Lost terminal)
[09:37:57] *** Quits: sdfgsdfg (~sdfgsdfg@user/sdfgsdfg) (Quit: ZzzZ)
[09:38:17] *** Quits: Atque (~Atque@user/atque) (Quit: ...)
[09:39:36] *** Joins: ferdna (~ferdna@user/ferdna)
[09:39:47] *** Joins: wroathe (~wroathe@206-55-188-8.fttp.usinternet.com)
[09:39:47] *** Quits: wroathe (~wroathe@206-55-188-8.fttp.usinternet.com) (Changing host)
[09:39:47] *** Joins: wroathe (~wroathe@user/wroathe)
[09:41:56] *** Joins: hayden (~hayden@2601:1c0:8101:7310::ffe5)
[09:42:32] *** Quits: soapsudsxx (~soapsudsx@141.193.188.140) (Remote host closed the connection)
[09:46:02] *** Quits: Kakurady_ (~nekoyasha@2607:f2c0:eac8:3297:4498:af79:9c16:5928) (Ping timeout: 240 seconds)
[09:59:02] *** Joins: oxfuxxx (~oxfuxxx@139.28.218.189)
[09:59:02] *** Quits: slidercrank (~slidercra@user/slidercrank) (Ping timeout: 256 seconds)
[09:59:03] *** Quits: alch (~alch@151.38.161.129) (Read error: Connection reset by peer)
[09:59:27] *** Quits: h4zel (~h4zel@user/h4zel) (Remote host closed the connection)
[09:59:58] *** Joins: h4zel (~h4zel@user/h4zel)
[10:03:16] *** Joins: alch (~alch@151.36.165.164)
[10:05:30] *** Quits: oxfuxxx (~oxfuxxx@139.28.218.189) (Ping timeout: 250 seconds)
[10:06:35] *** Joins: LordJohn (~lordjohn@l37-192-203-250.novotelecom.ru)
[10:13:15] *** Joins: Burgundy (~NA@86.121.143.206)
[10:13:27] *** Joins: _mikey_ (~mikey@user/mikey/x-4335048)
[10:14:54] *** Quits: _mikey (~mikey@user/mikey/x-4335048) (Ping timeout: 276 seconds)
[10:16:05] *** Quits: Everything (~Everythin@37.115.210.35) (Quit: leaving)
[10:18:57] *** Quits: fe23 (~fe23@2409:8a34:461:9470:459c:a906:cba4:4214) (Ping timeout: 240 seconds)
[10:21:00] *** Joins: chomwitt (~chomwitt@ppp-94-67-1-27.home.otenet.gr)
[10:25:24] *** Joins: _mikey (~mikey@user/mikey/x-4335048)
[10:25:49] *** Quits: ferdna (~ferdna@user/ferdna) (Quit: Leaving)
[10:27:15] *** Quits: _mikey_ (~mikey@user/mikey/x-4335048) (Ping timeout: 276 seconds)
[10:30:57] *** Quits: zmt00 (~zmt00@user/zmt00) (Ping timeout: 240 seconds)
[10:35:00] *** Joins: mahmutov (~mahmutov@5.176.46.135)
[10:43:33] *** Quits: rgrinberg (~textual@2806:101e:7:2b:bcc3:4b5c:4ace:b143) (Quit: My MacBook has gone to sleep. ZZZzzzâ€¦)
[10:47:30] *** Joins: dave0 (~davezero@069.d.003.ncl.iprimus.net.au)
[10:52:57] *** Quits: wroathe (~wroathe@user/wroathe) (Ping timeout: 240 seconds)
[10:57:27] *** Joins: notzmv (~zmv@user/notzmv)
[10:57:49] *** Quits: gco (~gco@2601:647:4c80:2424:48f0:57ae:323:8448) (Quit: ZZZzzzâ€¦)
[11:01:02] *** Joins: wroathe (~wroathe@206-55-188-8.fttp.usinternet.com)
[11:01:02] *** Quits: wroathe (~wroathe@206-55-188-8.fttp.usinternet.com) (Changing host)
[11:01:02] *** Joins: wroathe (~wroathe@user/wroathe)
[11:05:44] *** Quits: wroathe (~wroathe@user/wroathe) (Ping timeout: 250 seconds)
[11:05:48] *** Quits: Nutte35 (~Nutte@27.114.187.37) (Remote host closed the connection)
[11:06:05] *** Joins: Nutte35 (~Nutte@27.114.187.37)
[11:06:41] *** Quits: Nutte35 (~Nutte@27.114.187.37) (Read error: Connection reset by peer)
[11:07:03] *** Joins: Nutte35 (~Nutte@27.114.187.37)
[11:07:37] *** Joins: nicko (~iClass@222.211.30.14)
[11:11:10] *** Joins: freep (~freepppp@62.1.35.210.dsl.dyn.forthnet.gr)
[11:11:27] *** Quits: kish` (~aqua@user/aqua) (Ping timeout: 276 seconds)
[11:18:58] *** Quits: dogbert2 (~Bill@ip68-105-189-91.lv.lv.cox.net) (Remote host closed the connection)
[11:19:13] *** Joins: dogbert2 (~Bill@ip68-105-189-91.lv.lv.cox.net)
[11:30:37] *** Quits: h4zel (~h4zel@user/h4zel) (Quit: WeeChat 2.8)
[11:39:52] *** Quits: echoSMILE (uid504326@user/echosmile) (Quit: Connection closed for inactivity)
[11:42:44] *** Quits: dyeplexer (~dyeplexer@user/dyeplexer) (Ping timeout: 256 seconds)
[11:46:20] *** Joins: nwulfe (~wulfe@cpe-174-103-156-213.cinci.res.rr.com)
[11:49:00] *** Joins: Juliu (~Juliu@2a02:810b:c640:3ec0:d190:13e6:b518:cdac)
[11:50:06] *** Quits: night_wulfe (~wulfe@cpe-174-103-156-213.cinci.res.rr.com) (Ping timeout: 256 seconds)
[11:51:28] *** Joins: diophantoz (~diophanto@user/diophantoz)
[11:58:24] *** Joins: elastic_1 (~elastic_d@2a01:118f:822:9c00:f583:aa51:9ad4:d4fb)
[11:58:32] *** Quits: elastic_1 (~elastic_d@2a01:118f:822:9c00:f583:aa51:9ad4:d4fb) (Client Quit)
[11:58:54] *** Joins: elastic_1 (~elastic_d@2a01:118f:822:9c00:f583:aa51:9ad4:d4fb)
[11:59:24] *** Quits: crashrep (~crashrep@user/crashrep) (Quit: WeeChat 3.4)
[12:00:02] *** Quits: elastic_dog (~elastic_d@2a01:118f:822:9c00:f583:aa51:9ad4:d4fb) (Ping timeout: 268 seconds)
[12:04:34] *** L30n4rdu5 is now known as leonardus
[12:11:27] *** Joins: dyeplexer (~dyeplexer@user/dyeplexer)
[12:12:56] *** Joins: PortableDave (~portabled@203.87.67.190)
[12:13:21] *** AbleBacon_ is now known as AbleBacon
[12:15:25] *** Joins: inlight (~inlight@157.35.48.91)
[12:15:25] *** Quits: inlight (~inlight@157.35.48.91) (Changing host)
[12:15:25] *** Joins: inlight (~inlight@user/inlight)
[12:18:17] *** Joins: iomari891 (~iomari891@105.112.138.38)
[12:20:57] *** Joins: mrig (~mrig@user/mrig)
[12:22:30] *** Joins: BSaboia (~bsaboia@189.45.78.253)
[12:23:18] *** Quits: Betal (~Betal@user/betal) (Quit: WeeChat 3.4)
[12:23:32] *** Quits: geranim0 (~geranim0@modemcable242.171-178-173.mc.videotron.ca) (Ping timeout: 240 seconds)
[12:25:08] *** Quits: BSaboia (~bsaboia@189.45.78.253) (Client Quit)
[12:27:19] *** Quits: PortableDave (~portabled@203.87.67.190) (Ping timeout: 256 seconds)
[12:28:28] *** Joins: poppers (~poppers@158.51.99.6)
[12:28:38] *** Parts: poppers (~poppers@158.51.99.6) ()
[12:30:00] *** Joins: scaramanga (~scara@1.239.35.120)
[12:31:51] *** Quits: phrosty (~phrosty@c-73-225-175-19.hsd1.wa.comcast.net) (Ping timeout: 256 seconds)
[12:37:01] *** Quits: tejr (~tejr@user/tejr) (Remote host closed the connection)
[12:37:40] *** Quits: hiovoltage (~hiovoltag@78.186.68.182) (Quit: Client closed)
[12:37:43] *** Joins: tejr (~tejr@user/tejr)
[12:42:01] *** Joins: Serpent7776 (~Serpent77@90-156-31-193.internetia.net.pl)
[12:44:25] <pflanze> Is it possible to get the name of the type of an argument inside a macro? I want to do something like #define FOO(e) Foo_##__typeof__(e) __tmp
[12:44:55] <sham1> typeof is executed at compile time, not preprocessor time, so no
[12:45:22] <pflanze> yeah, bummer
[12:47:26] *** Parts: _mikey (~mikey@user/mikey/x-4335048) (WeeChat 3.4)
[12:49:44] *** Quits: iomari891 (~iomari891@105.112.138.38) (Ping timeout: 250 seconds)
[12:50:15] *** Joins: phrosty (~phrosty@c-73-225-175-19.hsd1.wa.comcast.net)
[12:52:11] *** Joins: LucaTM (~LucaTM@user/lucatm)
[12:52:14] *** Joins: chenqisu1 (~bhca7d@183.217.201.21)
[12:55:16] *** Joins: chenqisu12 (~bhca7d@183.217.201.21)
[12:55:24] *** Quits: vysn (~vysn@user/vysn) (Remote host closed the connection)
[12:57:18] <kurahaupo_> pflanze: Sounds like you want _Generic instead
[12:57:45] *** Joins: mad_enz (~mad_enz@lnsm3-torontoxn-142-116-106-108.internet.virginmobile.ca)
[12:58:06] <pflanze> Hmm, IIRC that requires me to cover all possible cases "in advance" (in the definition of the macro).
[12:58:13] *** Quits: alch (~alch@151.36.165.164) (Quit: leaving)
[12:58:17] *** Quits: chenqisu1 (~bhca7d@183.217.201.21) (Ping timeout: 240 seconds)
[13:01:20] <dave0> not much choice except to type out the name and pass it to the macro
[13:01:30] <dave0> FOO(int, e)
[13:02:53] *** Joins: banc (banc@gateway/vpn/airvpn/banc)
[13:03:04] *** Joins: oxfuxxx (~oxfuxxx@139.28.218.188)
[13:03:08] <pflanze> How can I append the contents of a macro (macro-expand before appending)?
[13:04:03] <pflanze> #define T Foo \n  #define BLAB(var) Blab_##(T) var;
[13:04:04] <dave0> have to use an in-between macro
[13:04:14] <pflanze> Trying
[13:04:55] <omegatron> sounds like you want actually c++ - I mean, do you have a problem with actually writing some code and, if necessary, just copy-paste it in one or several files, each time with the required change (of a datatype for example)?
[13:05:07] <dave0> shit i haven't done it for so long
[13:06:06] <dave0> #define xxcat(a, b) a##b   #define xcat(a, b) xxcat(a, b)   #define Foo T   #define bar(var) xcat(var, Foo)
[13:06:22] *** Joins: ent58 (~ent58@rrcs-97-76-214-244.se.biz.rr.com)
[13:06:52] <dave0> i think that expands   bar(test)   to   testT
[13:07:34] <dave0> eh i dunno it's too fancy for me
[13:07:52] <pflanze> Yes, this works
[13:08:10] <pflanze> I still don't understand what rule exactly leads to the indirection making a difference.
[13:08:17] *** Quits: mixfix41 (~homefame@user/mixfix41) (Ping timeout: 240 seconds)
[13:09:37] <dave0> probably started as a clever hack and someone else thought 'that's a good idea'
[13:09:37] *** Joins: alch (~alch@151.36.165.164)
[13:10:14] <pflanze> I think I haven't seen a description of the expansion rules that explains it. Maybe I should look again.
[13:11:37] *** Quits: liba (~liba@user/liba) (Remote host closed the connection)
[13:14:37] *** Quits: oxfuxxx (~oxfuxxx@139.28.218.188) (Ping timeout: 240 seconds)
[13:15:15] *** Joins: tforever (~Terabyte@81.214.161.111)
[13:15:21] *** Quits: gr33n7007h (~gr33n7007@user/gr33n7007h) (Quit: WeeChat 3.4)
[13:15:40] *** Joins: oxfuxxx (~oxfuxxx@139.28.218.190)
[13:16:10] *** Joins: jmpeax (~jmpeax@host-68-169-157-168.VALOLT2.epbfi.com)
[13:17:51] *** Joins: pert (~pert@fsf/member/pert)
[13:17:57] *** Quits: Nutte35 (~Nutte@27.114.187.37) (Ping timeout: 240 seconds)
[13:18:10] *** Joins: Nutte35 (~Nutte@202.153.82.57)
[13:18:37] *** Quits: raym (~raym@user/raym) (Ping timeout: 240 seconds)
[13:18:52] <Rounin> I wish one could have recursive macros in standard C... Even if it could enable infinite compilation times
[13:19:04] *** Joins: lwhjp (~user@2400:2411:a080:4700:be5f:f4ff:fee9:7fbf)
[13:19:25] <Rounin> I guess that would basically make it Turing complete
[13:19:40] <ent58> from c++ import template
[13:19:44] <ent58> :P
[13:19:46] <Rounin> :D
[13:19:49] <dave0> lisp macros
[13:20:31] *** Quits: jfsimon1981 (~jfsimon19@218.96.128.77.rev.sfr.net) (Quit: Leaving)
[13:20:53] *** Joins: jfsimon1981 (~jfsimon19@218.96.128.77.rev.sfr.net)
[13:21:06] <kurahaupo_> Rounin: Perl can run arbitrary code at compile time â€¦
[13:21:50] *** Joins: night_wulfe (~wulfe@cpe-174-103-156-213.cinci.res.rr.com)
[13:22:16] *** Joins: gr33n7007h (~gr33n7007@user/gr33n7007h)
[13:22:58] *** Quits: tforever (~Terabyte@81.214.161.111) (Quit: Segmentation fault (core dumped))
[13:24:13] <ent58> just have a meta module in every project you work on whose sole job is to generate C grammar, and make it as complex as you want :]
[13:24:15] *** Joins: kenanmarasli (~kenanmara@user/kenanmarasli)
[13:24:31] <ent58> There's probably already something well designed for that
[13:25:41] *** Quits: nwulfe (~wulfe@cpe-174-103-156-213.cinci.res.rr.com) (Ping timeout: 256 seconds)
[13:25:44] *** Joins: Roooooo7777991 (~Roooooo77@2402:3a80:1a29:9d49:d0d:154e:8432:61f3)
[13:25:47] *** Joins: raym (~raym@user/raym)
[13:27:24] <kurahaupo_> mumble yacc
[13:28:02] *** Quits: hayden (~hayden@2601:1c0:8101:7310::ffe5) (Ping timeout: 240 seconds)
[13:29:15] *** Joins: aradesh (~aradesh@user/aradesh)
[13:30:05] *** Quits: Roooooo7777991 (~Roooooo77@2402:3a80:1a29:9d49:d0d:154e:8432:61f3) (Quit: Byeee)
[13:31:21] *** Quits: oxfuxxx (~oxfuxxx@139.28.218.190) (Ping timeout: 256 seconds)
[13:34:14] *** Joins: oxfuxxx (~oxfuxxx@pop.92-184-108-84.mobile.abo.orange.fr)
[13:34:17] *** Quits: inlight (~inlight@user/inlight) (Ping timeout: 240 seconds)
[13:34:36] *** Joins: inlight (~inlight@user/inlight)
[13:37:24] *** Quits: dyeplexer (~dyeplexer@user/dyeplexer) (Ping timeout: 250 seconds)
[13:40:19] *** Joins: banc- (banc@gateway/vpn/airvpn/banc)
[13:40:52] *** Quits: oxfuxxx (~oxfuxxx@pop.92-184-108-84.mobile.abo.orange.fr) (Ping timeout: 250 seconds)
[13:41:57] *** Quits: banc (banc@gateway/vpn/airvpn/banc) (Ping timeout: 240 seconds)
[13:41:59] *** Quits: jmpeax (~jmpeax@host-68-169-157-168.VALOLT2.epbfi.com) (Quit: leaving)
[13:42:27] *** Joins: oxfuxxx (~oxfuxxx@pop.92-184-110-145.mobile.abo.orange.fr)
[13:44:31] *** Joins: banc (banc@gateway/vpn/airvpn/banc)
[13:45:42] *** Quits: inlight (~inlight@user/inlight) (Ping timeout: 256 seconds)
[13:45:56] *** Joins: dudek (~dudek@185.150.236.105)
[13:46:32] *** Quits: oxfuxxx (~oxfuxxx@pop.92-184-110-145.mobile.abo.orange.fr) (Ping timeout: 240 seconds)
[13:47:02] *** Quits: banc- (banc@gateway/vpn/airvpn/banc) (Ping timeout: 240 seconds)
[13:48:06] *** Joins: steve__ (~steve@ool-182c2b80.dyn.optonline.net)
[13:49:29] *** Quits: pieguy128 (~pieguy128@bras-base-mtrlpq5031w-grc-35-70-24-248-134.dsl.bell.ca) (Ping timeout: 256 seconds)
[13:50:59] <sham1> Yeah, yacc and such are neat since they can generate this stuff
[13:54:02] *** Joins: velorek (~velorek@158.66.165.83.dynamic.reverse-mundo-r.com)
[13:58:13] *** Quits: mrig (~mrig@user/mrig) (Quit: Going offline, see ya! (www.adiirc.com))
[13:58:34] *** Quits: alch (~alch@151.36.165.164) (Read error: Connection reset by peer)
[13:59:45] *** Joins: mrig (~mrig@user/mrig)
[14:02:34] *** Joins: alch (~alch@151.38.214.123)
[14:03:01] *** Joins: oxfuxxx (~oxfuxxx@pop.92-184-108-14.mobile.abo.orange.fr)
[14:07:37] *** Quits: oxfuxxx (~oxfuxxx@pop.92-184-108-14.mobile.abo.orange.fr) (Ping timeout: 256 seconds)
[14:11:07] *** Joins: wroathe (~wroathe@206-55-188-8.fttp.usinternet.com)
[14:11:07] *** Quits: wroathe (~wroathe@206-55-188-8.fttp.usinternet.com) (Changing host)
[14:11:07] *** Joins: wroathe (~wroathe@user/wroathe)
[14:12:34] *** Joins: BCMM (~BCMM@user/bcmm)
[14:12:48] *** Joins: jjido (~Denis@2a02:c7f:5c91:e700:d502:6835:efc4:ea15)
[14:13:29] *** Joins: oxfuxxx (~oxfuxxx@pop.92-184-110-254.mobile.abo.orange.fr)
[14:14:02] *** Quits: highrate (~presonic@111-22-237-24.gci.net) (Ping timeout: 240 seconds)
[14:14:54] *** Joins: Lord_of_Life_ (~Lord@user/lord-of-life/x-2819915)
[14:15:58] *** Quits: Lord_of_Life (~Lord@user/lord-of-life/x-2819915) (Ping timeout: 250 seconds)
[14:16:18] *** Quits: wroathe (~wroathe@user/wroathe) (Ping timeout: 256 seconds)
[14:16:36] *** Quits: ent58 (~ent58@rrcs-97-76-214-244.se.biz.rr.com) (Quit: Client closed)
[14:16:54] *** Joins: test_1235 (~Guest32@45-226-119-37.static.sumicity.net.br)
[14:16:55] *** Joins: GrayArea (~cpd@cpc115156-dals23-2-0-cust689.20-2.cable.virginm.net)
[14:17:42] *** Quits: oxfuxxx (~oxfuxxx@pop.92-184-110-254.mobile.abo.orange.fr) (Ping timeout: 250 seconds)
[14:17:44] *** Lord_of_Life_ is now known as Lord_of_Life
[14:18:16] *** Quits: AbleBacon (~AbleBacon@user/AbleBacon) (Read error: Connection reset by peer)
[14:18:51] *** Parts: test_1235 (~Guest32@45-226-119-37.static.sumicity.net.br) ()
[14:18:57] *** Quits: velorek (~velorek@158.66.165.83.dynamic.reverse-mundo-r.com) (Quit: Leaving)
[14:22:32] *** Quits: GrayArea (~cpd@cpc115156-dals23-2-0-cust689.20-2.cable.virginm.net) (Ping timeout: 240 seconds)
[14:22:49] *** Joins: cassepipe (~cassepipe@2a01:cb18:3ec:6f00:f9d7:5bd:fb0b:3411)
[14:24:18] *** Joins: oxfuxxx (~oxfuxxx@pop.92-184-110-186.mobile.abo.orange.fr)
[14:28:32] *** Quits: oxfuxxx (~oxfuxxx@pop.92-184-110-186.mobile.abo.orange.fr) (Ping timeout: 240 seconds)
[14:28:50] *** Joins: cosimone (~user@2001:b07:ae5:db26:c24a:d20:4d91:1e20)
[14:29:24] *** Quits: elastic_1 (~elastic_d@2a01:118f:822:9c00:f583:aa51:9ad4:d4fb) (Ping timeout: 250 seconds)
[14:31:32] *** Joins: Satin (uid193953@user/Seten)
[14:31:43] *** Joins: hlauk (~hlauk@176.33.108.116)
[14:32:45] *** Quits: csrf (~csrf@user/csrf) (Quit: ZNC 1.7.2+deb3 - https://znc.in)
[14:33:31] *** Joins: csrf (~csrf@user/csrf)
[14:34:15] *** Quits: joedoe47 (~weechat@c-98-254-188-143.hsd1.fl.comcast.net) (Ping timeout: 256 seconds)
[14:34:24] *** Joins: joedoe47 (~weechat@c-98-254-188-143.hsd1.fl.comcast.net)
[14:34:35] *** Joins: elastic_1 (~elastic_d@2a01:118f:822:9c00:f583:aa51:9ad4:d4fb)
[14:34:58] *** Joins: oxfuxxx (~oxfuxxx@pop.92-184-110-148.mobile.abo.orange.fr)
[14:35:56] *** Joins: SGautam (uid286066@id-286066.ilkley.irccloud.com)
[14:36:04] *** Quits: perrierjouet (~perrier-j@modemcable012.251-130-66.mc.videotron.ca) (Quit: WeeChat 3.4)
[14:36:52] *** Joins: perrierjouet (~perrier-j@modemcable012.251-130-66.mc.videotron.ca)
[14:38:17] *** Quits: kenanmarasli (~kenanmara@user/kenanmarasli) (Quit: Leaving)
[14:39:02] *** Quits: oxfuxxx (~oxfuxxx@pop.92-184-110-148.mobile.abo.orange.fr) (Ping timeout: 240 seconds)
[14:39:14] *** Joins: jmpeax (~jmpeax@host-68-169-157-168.VALOLT2.epbfi.com)
[14:41:55] *** Joins: wroathe (~wroathe@206-55-188-8.fttp.usinternet.com)
[14:41:55] *** Quits: wroathe (~wroathe@206-55-188-8.fttp.usinternet.com) (Changing host)
[14:41:55] *** Joins: wroathe (~wroathe@user/wroathe)
[14:43:26] *** Joins: blindguard (~blindguar@2a02:908:1864:c200::12)
[14:45:36] *** Joins: marlboro (~i.am@user/marlboro)
[14:46:24] *** Joins: oxfuxxx (~oxfuxxx@pop.92-184-108-21.mobile.abo.orange.fr)
[14:46:37] *** Quits: wroathe (~wroathe@user/wroathe) (Ping timeout: 240 seconds)
[14:47:45] *** Joins: gproto23 (~gproto23@user/gproto23)
[14:48:35] *** Joins: kish` (~aqua@user/aqua)
[14:48:37] *** Quits: whatsupdoc (uid509081@id-509081.hampstead.irccloud.com) (Quit: Connection closed for inactivity)
[14:48:43] *** Quits: dudek (~dudek@185.150.236.105) (Read error: Connection reset by peer)
[14:48:52] *** Quits: kish` (~aqua@user/aqua) (Remote host closed the connection)
[14:48:55] *** Joins: dudek (~dudek@185.150.236.105)
[14:49:28] *** Joins: kish` (~aqua@user/aqua)
[14:49:28] *** Joins: pieguy128 (~pieguy128@bras-base-mtrlpq5031w-grc-35-70-24-248-67.dsl.bell.ca)
[14:50:10] *** Joins: Senicar4 (~Senicar@gateway/tor-sasl/senicar)
[14:50:52] *** Quits: oxfuxxx (~oxfuxxx@pop.92-184-108-21.mobile.abo.orange.fr) (Ping timeout: 256 seconds)
[14:52:27] *** Quits: Senicar (~Senicar@gateway/tor-sasl/senicar) (Ping timeout: 276 seconds)
[14:52:28] *** Senicar4 is now known as Senicar
[14:53:08] *** Joins: sdfgsdfg (~sdfgsdfg@user/sdfgsdfg)
[14:53:34] *** Quits: sdfgsdfg (~sdfgsdfg@user/sdfgsdfg) (Client Quit)
[14:54:15] *** kish` is now known as dodik
[14:54:35] *** Quits: cassepipe (~cassepipe@2a01:cb18:3ec:6f00:f9d7:5bd:fb0b:3411) (Quit: Leaving)
[14:54:50] *** Quits: pieguy128 (~pieguy128@bras-base-mtrlpq5031w-grc-35-70-24-248-67.dsl.bell.ca) (Ping timeout: 256 seconds)
[14:57:03] *** Joins: oxfuxxx (~oxfuxxx@pop.92-184-110-199.mobile.abo.orange.fr)
[14:59:10] *** Joins: kit-ten (~u0_a391@2600:380:5e25:ea83:54af:a6af:3485:3b02)
[15:01:17] *** Quits: oxfuxxx (~oxfuxxx@pop.92-184-110-199.mobile.abo.orange.fr) (Ping timeout: 240 seconds)
[15:02:57] *** Quits: kit_ten (~u0_a391@2603-6010-a141-6fa3-f44f-d859-cfd9-2a3c.res6.spectrum.com) (Ping timeout: 240 seconds)
[15:07:33] *** Joins: oxfuxxx (~oxfuxxx@pop.92-184-108-151.mobile.abo.orange.fr)
[15:08:24] *** Joins: wootehfoot (~wootehfoo@user/wootehfoot)
[15:11:50] *** Quits: oxfuxxx (~oxfuxxx@pop.92-184-108-151.mobile.abo.orange.fr) (Ping timeout: 256 seconds)
[15:12:05] *** Joins: tech_exorcist (txrcst@user/tech-exorcist/x-0447479)
[15:14:58] *** Joins: Guest7361 (~Guest73@2a02:c7f:582d:5100:9841:acc1:6b39:cb9f)
[15:15:21] *** Joins: iomari891 (~iomari891@105.112.138.38)
[15:16:16] *** Quits: Guest7361 (~Guest73@2a02:c7f:582d:5100:9841:acc1:6b39:cb9f) (Client Quit)
[15:18:16] *** Joins: oxfuxxx (~oxfuxxx@pop.92-184-110-35.mobile.abo.orange.fr)
[15:22:17] *** Quits: oxfuxxx (~oxfuxxx@pop.92-184-110-35.mobile.abo.orange.fr) (Ping timeout: 240 seconds)
[15:24:40] *** Quits: fruitypunk1 (~user@2a01:7c8:aaaa:12:5054:ff:fe69:1df9) (Quit: WeeChat 3.3-dev)
[15:28:03] *** Joins: fruitypunk (~user@2a01:7c8:aaaa:12:5054:ff:fe69:1df9)
[15:28:50] *** Joins: inlight (~inlight@157.35.69.172)
[15:28:50] *** Quits: inlight (~inlight@157.35.69.172) (Changing host)
[15:28:50] *** Joins: inlight (~inlight@user/inlight)
[15:29:06] *** Joins: oxfuxxx (~oxfuxxx@pop.92-184-110-98.mobile.abo.orange.fr)
[15:29:42] *** Quits: jjido (~Denis@2a02:c7f:5c91:e700:d502:6835:efc4:ea15) (Ping timeout: 268 seconds)
[15:33:11] *** Quits: inlight (~inlight@user/inlight) (Ping timeout: 256 seconds)
[15:33:17] *** Quits: oxfuxxx (~oxfuxxx@pop.92-184-110-98.mobile.abo.orange.fr) (Ping timeout: 240 seconds)
[15:36:01] *** Quits: supakeen (~user@python/site-packages/supakeen) (Quit: WeeChat 3.4)
[15:36:33] *** Joins: supakeen (~user@python/site-packages/supakeen)
[15:40:58] *** Joins: shivesh (~shivesh@user/shivesh)
[15:43:47] *** Joins: Y4knotiS (~YaknotiS@cpc1-cmbg18-2-0-cust87.5-4.cable.virginm.net)
[15:44:30] *** Joins: inlight (~inlight@157.35.69.172)
[15:44:30] *** Quits: inlight (~inlight@157.35.69.172) (Changing host)
[15:44:30] *** Joins: inlight (~inlight@user/inlight)
[15:57:05] *** Joins: kts (~kts@103.73.237.49)
[15:59:15] *** Joins: seninha (~seninha@user/seninha)
[16:00:10] *** van3ll0pe_ is now known as van3ll0pe
[16:06:28] *** Quits: Enitin (~Enitin@152.89.163.158) (Ping timeout: 250 seconds)
[16:08:52] *** Joins: wroathe (~wroathe@user/wroathe)
[16:11:32] *** Quits: Y4knotiS (~YaknotiS@cpc1-cmbg18-2-0-cust87.5-4.cable.virginm.net) (Ping timeout: 240 seconds)
[16:11:40] *** Quits: kts (~kts@103.73.237.49) (Ping timeout: 250 seconds)
[16:11:45] <fizzie> pflanze: The relevant rule is C11 6.10.3.1p1; the "unless preceded by a `#` or `##` preprocessing token or followed by a `##` preprocessing token" bit exempts them in the direct case from the normal "is replaced by the corresponding argument after all macros contained therein have been expanded". That also explains why it works in the indirect case: in `#define xcat(a, b) xxcat(a, b)` the exemption does
[16:11:47] <fizzie> not apply, so "all macros contained therein" will be expanded when the `b` in `xxcat(a, b)` is being replaced by the argument corresponding to `b` (in the example, `Foo`).
[16:12:23] *** Joins: random-nick (~random-ni@87.116.167.125)
[16:13:24] <pflanze> Ah, thanks fizzie!
[16:13:28] *** Joins: constxd (~brad@142.167.170.88)
[16:13:33] <constxd> kings
[16:13:50] *** Quits: wroathe (~wroathe@user/wroathe) (Ping timeout: 250 seconds)
[16:14:11] <constxd> why haven't you taken the betterC pill yet?
[16:15:34] <clarity> there is no such thing
[16:16:27] *** Joins: fe23 (~fe23@2409:8a34:461:9470:9557:8a2e:f1c1:1da2)
[16:17:07] <sham1> betterC? You mean that weird mode of the D compiler?
[16:17:10] <constxd> yes
[16:17:19] <constxd> s/weird/based/
[16:17:37] *** Quits: somlis (~somlis@user/somlis) (Quit: WeeChat 3.4)
[16:19:27] *** Joins: killadi (~u0_a161@49.15.83.147)
[16:19:42] <NRK[m]> sounds like bloat
[16:19:54] <constxd> no it removes all the bloat from D
[16:20:10] *** Joins: strajder (~strajder@user/strajder)
[16:20:39] <pflanze> constxd, do you have a public code base in it?
[16:20:55] *** Quits: Nutte35 (~Nutte@202.153.82.57) (Read error: Connection reset by peer)
[16:21:08] <constxd> not yet
[16:21:49] *** Joins: Nutte35 (~Nutte@202.153.82.57)
[16:22:19] *** Joins: gproto23_ (~gproto23@user/gproto23)
[16:22:39] *** Quits: gproto23 (~gproto23@user/gproto23) (Quit: Leaving)
[16:22:45] *** Quits: gproto23_ (~gproto23@user/gproto23) (Remote host closed the connection)
[16:23:06] *** Joins: gproto23 (~gproto23@user/gproto23)
[16:23:10] <NRK[m]> but you'll need D compiler
[16:23:16] <NRK[m]> bloat
[16:23:22] *** Quits: chomwitt (~chomwitt@ppp-94-67-1-27.home.otenet.gr) (Ping timeout: 250 seconds)
[16:23:36] *** Quits: van3ll0pe (~van3ll0pe@2a01:e0a:53d:ab30:1428:3f03:d41b:8cc9) (Remote host closed the connection)
[16:24:50] *** Joins: CaCode (~CaCode@user/cacode)
[16:25:26] <NRK[m]> this should be fine, right? https://dpaste.com/GAFL8AYNU
[16:25:27] <sham1> The only winning move against bloat is not to play
[16:25:47] <NRK[m]> or are there some weird edge case that can fuck me over?
[16:26:21] *** Joins: van3ll0pe (~van3ll0pe@88.124.246.172)
[16:27:00] <constxd> why not just use (u)intN_t?
[16:27:04] <ChoHag_> NRK[m]: Alternatively you could #include <stdint.h>
[16:28:07] *** Joins: somlis (~somlis@user/somlis)
[16:28:31] <NRK[m]> not what i asked, but what i expected
[16:29:10] <constxd> yes
[16:29:21] <constxd> because your paste implies that you weren't aware of those types
[16:29:38] <ChoHag_> If you want an actual answer I'll go with constxd: yes.
[16:29:42] <NRK[m]> no, you failed to read the title of the paste
[16:29:52] <tarzeau> there's not much D software, i only know lixgame.com and cheesecutter
[16:30:34] <constxd> ok well
[16:33:04] *** Quits: CaCode (~CaCode@user/cacode) (Quit: Leaving)
[16:33:59] *** Quits: malina (~malina@user/malina) (Remote host closed the connection)
[16:36:43] <constxd> NRK[m]: what's the point of that #if shit in the u64 case
[16:37:13] *** Quits: HelloShitty (~psysc0rpi@bl20-171-222.dsl.telepac.pt) (Ping timeout: 256 seconds)
[16:37:37] *** Joins: Senicar4 (~Senicar@gateway/tor-sasl/senicar)
[16:37:45] *** Quits: Senicar (~Senicar@gateway/tor-sasl/senicar) (Ping timeout: 276 seconds)
[16:37:46] *** Senicar4 is now known as Senicar
[16:38:22] *** Joins: plastico (~plastico@neomutt/plastico)
[16:40:20] *** Quits: van3ll0pe (~van3ll0pe@88.124.246.172) (Remote host closed the connection)
[16:41:04] *** Quits: tech_exorcist (txrcst@user/tech-exorcist/x-0447479) (Remote host closed the connection)
[16:41:33] *** Joins: tech_exorcist (txrcst@user/tech-exorcist/x-0447479)
[16:41:47] *** Joins: libh (~libh@c-24-30-27-91.hsd1.ga.comcast.net)
[16:42:12] *** Quits: inlight (~inlight@user/inlight) (Read error: Connection reset by peer)
[16:42:17] <constxd> could be simplified to
[16:42:30] *** Joins: HelloShitty (~psysc0rpi@bl20-171-222.dsl.telepac.pt)
[16:42:33] *** Joins: inlight (~inlight@157.35.69.172)
[16:42:33] *** Quits: inlight (~inlight@157.35.69.172) (Changing host)
[16:42:33] *** Joins: inlight (~inlight@user/inlight)
[16:42:38] <libh> Isn't it a bit excessive to have a header file for every single C file? Why not just a single header file used for all C files? Or is this purely up to your discretion?
[16:42:46] <constxd> #if ((ULONG_MAX >> 32) >> 31) == 0xFF
[16:43:28] *** Joins: mrgz (~mrgz@201-42-0-191.dsl.telesp.net.br)
[16:44:45] <constxd> libh: if you change a header, any file which includes that header must be recompiled
[16:45:05] <constxd> so if you only have one header, any time you change it, you need to rebuild your entire program
[16:45:06] <zwr> libh: tangling headers like that is a terrible idea, it makes the interactions between the source files very difficult to understand
[16:45:49] <libh> I see, well since you put it like that, I'll avoid using just one single header across multiple files.
[16:46:14] *** Joins: kaph (~kaph@net-2-47-208-144.cust.vodafonedsl.it)
[16:47:24] *** Quits: nicode (~nic@2607:f2c0:9479:8500:f5de:3d8e:616d:e80f) (Ping timeout: 268 seconds)
[16:48:04] <libh> I think I'm finally starting to get when pointers are used: if you don't think you need a pointer, you probably don't.
[16:50:04] *** Joins: cvmn (~caveman@gateway/tor-sasl/caveman)
[16:50:25] <constxd> based
[16:52:59] *** Joins: Atque (~Atque@user/atque)
[16:53:51] <NRK[m]> for small codebases, single header ain't that bad.
[16:54:20] <NRK[m]> should be avoided for bigger codebases
[16:54:26] <libh> What criteria are we using for small? 500 LoC?
[16:54:45] <NRK[m]> anything which builds under 2s
[16:54:47] *** dodik is now known as kish`
[16:54:59] *** Quits: chenqisu12 (~bhca7d@183.217.201.21) (Ping timeout: 256 seconds)
[16:55:46] <NRK[m]> in which case, full rebuild doesn't matter much since it's fast anyways.
[16:56:21] <constxd> 500 loc doesn't count as a codebase
[16:56:33] <DarkUranium> Some libraries avoid even including other headers in headers. (Our Machinery is one)
[16:56:39] <DarkUranium> For compile time reasons. And also general cleanliness.
[16:58:56] <DarkUranium> (they have a "common" header that defines a bunch of datatypes --- that's the only header that's allowed to be included in any other header)
[16:59:16] <DarkUranium> Downside is that a lot of stuff has to be passed around via pointers, even if direct values would make more sense.
[17:00:39] <NRK[m]> that's cringe
[17:01:58] <constxd> no it's not it's based
[17:02:00] <DarkUranium> I mean, it's a big project. It's a game engine.
[17:04:15] *** Quits: phrosty (~phrosty@c-73-225-175-19.hsd1.wa.comcast.net) (Remote host closed the connection)
[17:06:00] *** Joins: chomwitt (~chomwitt@2a02:587:dc03:8b00:12c3:7bff:fe6d:d374)
[17:11:09] *** Quits: dave0 (~davezero@069.d.003.ncl.iprimus.net.au) (Quit: dave's not here)
[17:18:36] <nomagno> I'm not afraid to modularize and split interfaces into different headers with my ongoing game engine, I think it's cleaner. However, since I don't want it to have dependencies, I've had to adopt a nolibc coding style where the caller provides all memory, and no malloc/VLAs need to be used on the implementation side
[17:19:17] *** Quits: hlauk (~hlauk@176.33.108.116) (Ping timeout: 240 seconds)
[17:19:36] *** Quits: libh (~libh@c-24-30-27-91.hsd1.ga.comcast.net) (Quit: Leaving)
[17:20:41] <caze> You might even have more than one header for the same .c file.
[17:20:57] *** Quits: NEYi (~NEYi@109.251.216.38) (Read error: Connection reset by peer)
[17:20:59] <nomagno> The idea is there's a big-ish header that wraps around all modules of the nongraphical part of the engine, then another one that abstracts away graphics/sound/input-related dependencies with a few small predefined interfaces, and then these two will be further abstracted over in the future with a proper batteries-included (yet lightweight) super-engine
[17:21:17] *** Joins: fsoc (~shynerd@bison.alphaw0lf.xyz)
[17:21:54] <nomagno> caze: That sounds weird
[17:22:06] <caze> Why?
[17:22:23] <NRK[m]> public api and private header i guess
[17:22:25] <nomagno> The .c file implementation of a header is the one with the same name
[17:22:32] <nomagno> Oh private header
[17:22:40] <caze> It's common to have one header as the public interface, and another one that exposes private internal stuff.
[17:22:45] <nomagno> Yes that could work
[17:23:02] <caze> >could work
[17:23:03] <nomagno> I'm just making my library fully transparent so everything that is defined in a header is public
[17:23:51] <nomagno> I mean I don't really use that specific design pattern
[17:24:06] <nomagno> No need for it at the moment
[17:24:18] <nomagno> but yes I see how it's useful
[17:24:35] *** Joins: tech_exorcist_ (txrcst@user/tech-exorcist/x-0447479)
[17:25:11] *** Quits: tech_exorcist (txrcst@user/tech-exorcist/x-0447479) (Remote host closed the connection)
[17:27:48] *** Quits: cvmn (~caveman@gateway/tor-sasl/caveman) (Ping timeout: 276 seconds)
[17:27:55] *** Quits: mrig (~mrig@user/mrig) (Quit: Going offline, see ya! (www.adiirc.com))
[17:28:03] *** Joins: Enitin (~Enitin@82.102.22.84)
[17:31:26] *** Quits: killadi (~u0_a161@49.15.83.147) (Read error: Connection reset by peer)
[17:31:47] *** Quits: inlight (~inlight@user/inlight) (Read error: Connection reset by peer)
[17:32:17] *** Quits: Enitin (~Enitin@82.102.22.84) (Ping timeout: 240 seconds)
[17:32:57] *** Joins: inlight (~inlight@157.35.69.172)
[17:32:57] *** Quits: inlight (~inlight@157.35.69.172) (Changing host)
[17:32:57] *** Joins: inlight (~inlight@user/inlight)
[17:33:17] *** Joins: Enitin (~Enitin@82.102.22.86)
[17:34:40] *** Quits: SGautam (uid286066@id-286066.ilkley.irccloud.com) (Quit: Connection closed for inactivity)
[17:37:51] *** Quits: Enitin (~Enitin@82.102.22.86) (Ping timeout: 256 seconds)
[17:38:45] *** Joins: kts (~kts@103.73.237.241)
[17:40:18] *** Joins: Enitin (~Enitin@82.102.22.86)
[17:43:42] *** Quits: kts (~kts@103.73.237.241) (Quit: Konversation terminated!)
[17:43:56] <sokan> caze: I'm readint chapter 1 in K&R. Should've done that ages ago
[17:44:50] <constxd> based
[17:45:54] *** Joins: smoke (~smoke@user/smoke)
[17:46:52] *** Quits: Nutte35 (~Nutte@202.153.82.57) (Read error: Connection reset by peer)
[17:47:50] *** Quits: inlight (~inlight@user/inlight) (Ping timeout: 268 seconds)
[17:48:19] *** Joins: Nutte35 (~Nutte@202.153.82.57)
[17:48:38] *** Joins: inlight (~inlight@157.42.223.84)
[17:48:38] *** Quits: inlight (~inlight@157.42.223.84) (Changing host)
[17:48:38] *** Joins: inlight (~inlight@user/inlight)
[17:51:07] *** Quits: smoke (~smoke@user/smoke) (Quit: Leaving)
[17:53:43] *** Joins: lightningwright (~lightning@user/lightningwright)
[17:56:21] *** Joins: nic (~nic@2607:f2c0:9479:8500:c440:bb6b:d308:6307)
[17:56:34] *** Quits: kaph (~kaph@net-2-47-208-144.cust.vodafonedsl.it) (Read error: Connection reset by peer)
[17:56:37] *** nic is now known as nicode
[17:57:05] *** Joins: pulse (~pulse@user/pulse)
[17:57:41] *** Quits: fsoc (~shynerd@bison.alphaw0lf.xyz) (Ping timeout: 256 seconds)
[18:00:33] *** Quits: nicko (~iClass@222.211.30.14) (Read error: Connection reset by peer)
[18:01:05] *** Quits: alch (~alch@151.38.214.123) (Ping timeout: 256 seconds)
[18:02:26] *** Quits: marlboro (~i.am@user/marlboro) (Quit: a pentium 100 "running" windows 11 trying to play Last of Us II at ps4emu... that's my brain trying understand 0->R->R/2R->0)
[18:02:27] *** Joins: nyah (~nyah@94.6.71.219)
[18:02:54] *** Joins: alch (~alch@151.38.223.233)
[18:03:20] *** Joins: mug3n_ (~mugen@gateway/tor-sasl/mugen)
[18:03:26] *** Quits: BCMM (~BCMM@user/bcmm) (Quit: Konversation terminated!)
[18:06:48] *** Quits: mug3n (~mugen@gateway/tor-sasl/mugen) (Ping timeout: 276 seconds)
[18:06:54] <nomagno> Is a libc function that always fails strictly compliant?
[18:09:03] <koollman> it could be. Depends on the function, I suppose
[18:09:20] <koollman> malloc comes to mind. NULL is a perfectly valid answer, always :)
[18:10:12] <Rounin> And of course, your machine could actually have 0 bits of RAM
[18:10:21] <Rounin> Only registers and cache and whatnot
[18:12:53] <fizzie> If it's a function that has a way of indicating failure (like malloc, or fopen, or whatnot), then I think always failing would be a quality-of-implementation issue, not a conformance issue.
[18:13:27] *** Joins: van (~van@46.23.94.214)
[18:14:13] <fizzie> From the C99 rationale, around environmental limits: "The C99 Committee reviewed several propsoed changes to strengthen or clarify the wording on conformance, especially with respect to translation limits. The belief was that it is simply not practical to provide a specification which is strong enough to be useful, but which still allows for real-world problems such as bugs. The Committee therefore
[18:14:15] <fizzie> chose to consider the matter a quality-of-implementation issue, and to leave the translation limits in the standard to give guidance."
[18:18:33] *** Quits: strajder (~strajder@user/strajder) (Quit: leaving)
[18:19:04] *** Quits: bud (~bud@user/bud) (Ping timeout: 250 seconds)
[18:19:32] *** Joins: whupdup (~whupdup@pool-173-76-128-81.bstnma.fios.verizon.net)
[18:19:35] *** Quits: Atque (~Atque@user/atque) (Quit: ...)
[18:20:01] *** Quits: dogbert2 (~Bill@ip68-105-189-91.lv.lv.cox.net) (Remote host closed the connection)
[18:20:16] *** Joins: dogbert2 (~Bill@ip68-105-189-91.lv.lv.cox.net)
[18:22:56] *** Joins: bick (~kotaman@94.46.203.147)
[18:24:04] *** Quits: Torr (~Torr@user/torr) (Remote host closed the connection)
[18:27:49] *** Quits: LordJohn (~lordjohn@l37-192-203-250.novotelecom.ru) (Read error: Connection reset by peer)
[18:30:30] *** Joins: skapata (~Skapata@2804:14c:87b0:9d2e:9850:4c31:3544:119b)
[18:30:30] *** Quits: skapata (~Skapata@2804:14c:87b0:9d2e:9850:4c31:3544:119b) (Changing host)
[18:30:30] *** Joins: skapata (~Skapata@user/skapata)
[18:32:19] *** Quits: lightningwright (~lightning@user/lightningwright) (Quit: Leaving)
[18:32:25] *** Joins: Torr (~Torr@user/torr)
[18:33:33] *** Quits: yamchah2 (~yamchah2@user/yamchah2) (Remote host closed the connection)
[18:34:07] *** Joins: yamchah2 (~yamchah2@user/yamchah2)
[18:34:11] *** Quits: yamchah2 (~yamchah2@user/yamchah2) (Remote host closed the connection)
[18:34:31] *** Joins: bud (~bud@user/bud)
[18:42:39] *** Quits: kurahaupo_ (~kurahaupo@pa49-182-49-2.pa.qld.optusnet.com.au) (Ping timeout: 256 seconds)
[18:48:21] *** Joins: Roooooo7777991 (~Roooooo77@2402:3a80:1a29:9d49:d0d:154e:8432:61f3)
[18:48:42] *** Joins: slidercrank (~slidercra@user/slidercrank)
[18:53:21] *** Joins: banc- (banc@gateway/vpn/airvpn/banc)
[18:53:49] <zwr> one easier way to see this is if someone makes a C implementation that is so hostile you could just not use it
[18:54:57] *** Quits: banc (banc@gateway/vpn/airvpn/banc) (Ping timeout: 240 seconds)
[18:56:57] *** Quits: Enitin (~Enitin@82.102.22.86) (Ping timeout: 240 seconds)
[18:57:11] *** Quits: Serpent7776 (~Serpent77@90-156-31-193.internetia.net.pl) (Quit: leaving)
[18:57:14] *** Quits: de-facto (~de-facto@user/de-facto) (Remote host closed the connection)
[18:57:29] *** Joins: de-facto (~de-facto@user/de-facto)
[19:00:07] *** Joins: bebyx (~Thunderbi@user/bebyx)
[19:00:17] *** Joins: Serpent7776 (~Serpent77@90-156-31-193.internetia.net.pl)
[19:00:59] <rcf> nomagno: it's strictly compliant in the sense that a strictly-conforming program's behavior on that implementation is still perfectly well-defined.
[19:03:12] *** Joins: yamchah2 (~yamchah2@user/yamchah2)
[19:03:16] *** Joins: BCMM (~BCMM@user/bcmm)
[19:04:01] *** Quits: yamchah2 (~yamchah2@user/yamchah2) (Remote host closed the connection)
[19:04:06] *** Joins: soapsudsxx (~soapsudsx@141.193.188.140)
[19:05:14] *** Joins: Enitin (~Enitin@212.102.38.153)
[19:05:31] <rcf> nomagno: not failing when it should fail is probably the most common noncompliant behavior, see malloc() on Linux, which will happily return invalid pointers.
[19:05:52] *** Quits: inlight (~inlight@user/inlight) (Ping timeout: 256 seconds)
[19:06:15] *** Joins: inlight (~inlight@157.42.200.153)
[19:06:15] *** Quits: inlight (~inlight@157.42.200.153) (Changing host)
[19:06:15] *** Joins: inlight (~inlight@user/inlight)
[19:08:55] *** Joins: bick_ (~kotaman@94.46.203.147)
[19:09:13] *** Quits: bick_ (~kotaman@94.46.203.147) (Client Quit)
[19:09:22] *** Joins: lleo (~leo@89-200-7-2.mobile.kpn.net)
[19:09:50] *** Joins: bick_ (~kotaman@94.46.203.147)
[19:12:47] *** Quits: lleo (~leo@89-200-7-2.mobile.kpn.net) (Client Quit)
[19:12:56] *** Quits: bick_ (~kotaman@94.46.203.147) (Client Quit)
[19:13:51] *** Joins: AmR (~AmREiSa@156.199.9.4)
[19:13:57] *** Joins: kenanmarasli (~kenanmara@user/kenanmarasli)
[19:14:13] <sokan> When wanting to parse a file and scan for a specific sequence in C, what's the best function (or combo of functions)?
[19:15:16] <sokan> fgets to get each line as a string and then sscanf to find if each string (i.e. line) of the file corresponds to what I want to find in the file?
[19:15:46] <fmlatghor> rcf: malloc or moloch
[19:16:04] *** Joins: soapsudsxx_ (~soapsudsx@141.193.188.140)
[19:16:27] *** Quits: soapsudsxx (~soapsudsx@141.193.188.140) (Ping timeout: 256 seconds)
[19:18:09] *** Quits: constxd (~brad@142.167.170.88) (Ping timeout: 256 seconds)
[19:18:09] *** Joins: bick_ (~kotaman@94.46.203.147)
[19:18:20] *** Quits: bick_ (~kotaman@94.46.203.147) (Client Quit)
[19:18:35] *** Joins: constxd (~brad@142.167.170.88)
[19:19:20] *** Joins: yamchah2 (~yamchah2@user/yamchah2)
[19:20:57] *** Quits: Roooooo7777991 (~Roooooo77@2402:3a80:1a29:9d49:d0d:154e:8432:61f3) (Ping timeout: 240 seconds)
[19:21:36] *** Joins: echoSMILE (uid504326@user/echosmile)
[19:21:51] *** Quits: Tempesta (~Tempesta@user/tempesta) (Quit: See ya!)
[19:22:59] *** Joins: tboehme (~tboehme@p200300ce1710ed95db80d952ec9b9c2b.dip0.t-ipconnect.de)
[19:24:44] *** Joins: Tempesta (~Tempesta@user/tempesta)
[19:25:41] *** Quits: tboehme (~tboehme@p200300ce1710ed95db80d952ec9b9c2b.dip0.t-ipconnect.de) (Quit: tboehme)
[19:27:24] *** Quits: Enitin (~Enitin@212.102.38.153) (Ping timeout: 256 seconds)
[19:28:28] *** Joins: Enitin (~Enitin@212.102.38.153)
[19:31:11] <constxd> sokan: did u figure it out
[19:32:45] *** Joins: harveypwca (~harveypwc@2601:246:c180:a570:3828:d8:e523:3f67)
[19:33:13] <boreas> sokan: you could use strcmp() to search for a specific string
[19:34:21] <boreas> sokan: if you need something fancy like regular expressions it gets a bit more elaborate.
[19:34:47] *** Quits: BCMM (~BCMM@user/bcmm) (Ping timeout: 256 seconds)
[19:36:59] <constxd> you mean strstr()?
[19:37:15] <constxd> i would use mmap() + strstr() if possible
[19:37:54] <constxd> otherwise fgetc
[19:44:18] <boreas> strstr(), right
[19:44:32] *** Quits: shivesh (~shivesh@user/shivesh) (Quit: leaving)
[19:44:47] *** Quits: gproto23 (~gproto23@user/gproto23) (Ping timeout: 256 seconds)
[19:52:31] *** Joins: wroathe (~wroathe@206-55-188-8.fttp.usinternet.com)
[19:52:31] *** Quits: wroathe (~wroathe@206-55-188-8.fttp.usinternet.com) (Changing host)
[19:52:31] *** Joins: wroathe (~wroathe@user/wroathe)
[19:52:43] *** Joins: killadi (~u0_a161@49.15.128.157)
[19:52:47] *** Joins: ferdna (~ferdna@user/ferdna)
[19:54:25] *** Joins: fsoc (~shynerd@bison.alphaw0lf.xyz)
[19:54:36] *** Joins: Klinda (~superleag@user/klinda)
[19:59:10] *** Quits: fsoc (~shynerd@bison.alphaw0lf.xyz) (Ping timeout: 250 seconds)
[20:01:46] *** Quits: constxd (~brad@142.167.170.88) (Ping timeout: 250 seconds)
[20:03:16] *** Joins: Thedarkb-Desktop (~Thedarkb@2001:bb6:b403:e042:f83e:378c:1afc:a9b5)
[20:04:03] *** Joins: pretty_dumm_guy (trottel@gateway/vpn/protonvpn/prettydummguy/x-88029655)
[20:05:24] <sham1> Here's a nickel kid, buy yourself a LL(1) parser
[20:11:44] *** Joins: Betal (~Betal@user/betal)
[20:12:12] *** Joins: zmt00 (~zmt00@user/zmt00)
[20:13:50] *** Joins: byteskeptical (~amnesia@user/byteskeptical)
[20:14:22] *** Joins: constxd (~brad@142.167.170.88)
[20:20:59] *** Quits: fe23 (~fe23@2409:8a34:461:9470:9557:8a2e:f1c1:1da2) (Quit: fe23)
[20:22:57] *** Quits: ka80 (~ka80@111.60.138.34.bc.googleusercontent.com) (Quit: Leaving)
[20:29:50] *** Quits: penguino (~mrpenguin@user/mrpenguin) (Quit: penguino)
[20:30:45] *** Joins: AlbertoGP (~AlbertoGP@p57a9ae96.dip0.t-ipconnect.de)
[20:36:04] *** Quits: nostar (~nostar@2601:406:4100:34d:8f4:5ea7:30b2:b7e6) (Remote host closed the connection)
[20:36:19] *** Quits: Nutte35 (~Nutte@202.153.82.57) (Remote host closed the connection)
[20:36:33] *** Joins: Nutte35 (~Nutte@202.153.82.57)
[20:37:40] *** Joins: nostar (~nostar@2601:406:4100:34d:8f4:5ea7:30b2:b7e6)
[20:40:05] *** Quits: Nutte35 (~Nutte@202.153.82.57) (Read error: Connection reset by peer)
[20:42:15] *** Joins: OverCoder (~OverCoder@user/overcoder)
[20:42:59] *** Joins: Akuli (~Akuli@82-203-165-119.bb.dnainternet.fi)
[20:43:32] *** Quits: constxd (~brad@142.167.170.88) (Ping timeout: 240 seconds)
[20:48:28] *** Quits: ferdna (~ferdna@user/ferdna) (Quit: Leaving)
[20:49:52] *** Quits: banc- (banc@gateway/vpn/airvpn/banc) (Ping timeout: 250 seconds)
[20:50:27] *** Quits: OverCoder (~OverCoder@user/overcoder) (Quit: Quitting? That's odd.)
[20:51:17] *** Joins: OverCoder (~OverCoder@user/overcoder)
[20:52:32] <sokan> I'll try out fgets + sscanf and see how that goes
[20:54:21] <boreas> sokan: no need to use sscanf() if you are searching strings
[20:55:57] <sokan> why not boreas ?
[21:02:17] *** Quits: Rounin (~david@84.212.130.215) (Ping timeout: 240 seconds)
[21:02:47] <boreas> sokan: no need, strstr() is much faster and easier to use than sscanf()
[21:05:23] *** Quits: killadi (~u0_a161@49.15.128.157) (Quit: WeeChat 3.0.1)
[21:08:43] *** Joins: geranim0 (~geranim0@modemcable242.171-178-173.mc.videotron.ca)
[21:09:07] *** Joins: strajder (~strajder@user/strajder)
[21:09:22] *** Joins: Cleverness (~Clevernes@pool-108-54-152-186.nycmny.fios.verizon.net)
[21:14:53] *** Quits: joedoe47 (~weechat@c-98-254-188-143.hsd1.fl.comcast.net) (Ping timeout: 256 seconds)
[21:15:04] *** Joins: joedoe47 (~weechat@c-98-254-188-143.hsd1.fl.comcast.net)
[21:16:13] *** Quits: puke (~puke@user/puke) (Ping timeout: 256 seconds)
[21:21:00] *** Joins: bolovanos_ (~bolovanos@user/bolovanos)
[21:21:54] *** Joins: cgar (~cgar@072-187-006-075.res.spectrum.com)
[21:24:30] *** Joins: Y4knotiS (~YaknotiS@cpc1-cmbg18-2-0-cust87.5-4.cable.virginm.net)
[21:24:33] *** Joins: FluffyMask (~masque@user/fluffymask)
[21:25:05] *** Joins: crashrep (~crashrep@user/crashrep)
[21:25:11] *** Joins: rgrinberg (~textual@2806:101e:7:2b:bcc3:4b5c:4ace:b143)
[21:25:29] *** Quits: somlis (~somlis@user/somlis) (Quit: WeeChat 3.4)
[21:31:10] *** Quits: retroid_ (~retro@2e40edd9.skybroadband.com) (Quit: Connection error?!)
[21:31:12] *** Quits: AlbertoGP (~AlbertoGP@p57a9ae96.dip0.t-ipconnect.de) (Quit: Leaving)
[21:31:33] *** Joins: badsektor (~badsektor@user/badsektor)
[21:32:50] *** Joins: somlis (~somlis@user/somlis)
[21:36:07] *** Joins: oxfuxxx (~oxfuxxx@10.177.181.107.wiredns.net)
[21:39:21] *** Quits: gr33n7007h (~gr33n7007@user/gr33n7007h) (Quit: WeeChat 3.4)
[21:40:35] *** Quits: oxfuxxx (~oxfuxxx@10.177.181.107.wiredns.net) (Ping timeout: 256 seconds)
[21:43:47] *** Joins: mahmutov_ (~mahmutov@37.155.46.200)
[21:44:33] *** Quits: mahmutov (~mahmutov@5.176.46.135) (Ping timeout: 256 seconds)
[21:47:15] *** Quits: cosimone (~user@2001:b07:ae5:db26:c24a:d20:4d91:1e20) (Remote host closed the connection)
[21:50:02] *** Joins: eelstrebor (~eelstrebo@198-178-29-136.scb.ne.static.allophone.net)
[21:50:17] *** Joins: cosimone (~user@93-47-231-147.ip115.fastwebnet.it)
[21:50:25] *** Quits: perrierjouet (~perrier-j@modemcable012.251-130-66.mc.videotron.ca) (Quit: WeeChat 3.4)
[21:51:21] *** Quits: wootehfoot (~wootehfoo@user/wootehfoot) (Ping timeout: 256 seconds)
[21:51:22] *** Joins: AlbertoGP (~AlbertoGP@p57a9ae96.dip0.t-ipconnect.de)
[21:55:07] *** Quits: badsektor (~badsektor@user/badsektor) (Quit: Leaving...)
[21:57:08] *** Quits: zwr (~zwr@2804:d45:b966:fb00:7343:4b4d:81a6:38d9) (Remote host closed the connection)
[21:57:19] *** Joins: zwr (~zwr@2804:d45:b966:fb00:53d8:218c:4a2e:e687)
[21:58:31] *** Joins: BCMM (~BCMM@user/bcmm)
[22:01:33] *** Quits: alch (~alch@151.38.223.233) (Ping timeout: 256 seconds)
[22:02:11] *** Joins: hxztnxt (~hxztnxt@84.78.245.38)
[22:02:34] *** Parts: hxztnxt (~hxztnxt@84.78.245.38) ()
[22:03:00] *** Joins: hxztnxt_ (~hxztnxt@84.78.245.38)
[22:03:18] *** Joins: alch (~alch@151.38.188.243)
[22:03:20] <hxztnxt_> what's the point of declaring a function inside another one?
[22:03:57] *** Quits: Enitin (~Enitin@212.102.38.153) (Ping timeout: 240 seconds)
[22:06:00] *** Joins: dr_snack (~dr.snack@2a0c:5a80:1609:8600:a17f:57a4:f3dc:cfc2)
[22:07:22] *** Joins: kitsunenokenja (~kitsunech@68.91.220.96)
[22:08:27] *** Joins: perrierjouet (~perrier-j@modemcable012.251-130-66.mc.videotron.ca)
[22:08:54] *** Joins: oxfuxxx (~oxfuxxx@160.238.38.154)
[22:08:57] *** Quits: night_wulfe (~wulfe@cpe-174-103-156-213.cinci.res.rr.com) (Ping timeout: 240 seconds)
[22:10:19] *** Quits: hxztnxt_ (~hxztnxt@84.78.245.38) (Quit: Leaving)
[22:10:27] *** Joins: cousteau (~cousteau@user/cousteau)
[22:10:35] *** Quits: Satin (uid193953@user/Seten) (Quit: Connection closed for inactivity)
[22:11:14] *** Quits: seninha (~seninha@user/seninha) (Quit: Leaving)
[22:11:51] *** Joins: seninha (~seninha@user/seninha)
[22:12:31] <sham1> To have a function declaration in the scope of the function, but only within said scope
[22:12:45] <ChoHag_> Don't do that though.
[22:13:14] *** Joins: Satin (uid193953@user/Seten)
[22:13:37] *** Quits: oxfuxxx (~oxfuxxx@160.238.38.154) (Ping timeout: 268 seconds)
[22:13:43] *** Joins: kaph (~kaph@net-2-47-208-144.cust.vodafonedsl.it)
[22:13:57] *** Joins: oxfuxxx (~oxfuxxx@10.177.181.107.wiredns.net)
[22:14:18] *** Quits: dr_snack (~dr.snack@2a0c:5a80:1609:8600:a17f:57a4:f3dc:cfc2) (Quit: Leaving)
[22:16:50] *** Joins: Enitin (Enitin@gateway/vpn/protonvpn/enitin)
[22:18:17] *** Quits: oxfuxxx (~oxfuxxx@10.177.181.107.wiredns.net) (Ping timeout: 240 seconds)
[22:18:24] *** Joins: Zambyte (~Zambyte@cpe-104-228-60-14.nycap.res.rr.com)
[22:24:01] *** Quits: kitsunenokenja (~kitsunech@68.91.220.96) (Ping timeout: 256 seconds)
[22:25:04] *** Joins: retroid_ (~retro@2e40edd9.skybroadband.com)
[22:25:38] *** Joins: oxfuxxx (~oxfuxxx@pop.92-184-108-184.mobile.abo.orange.fr)
[22:27:35] *** Quits: karakedi (~eAC53C340@user/karakedi) (Remote host closed the connection)
[22:29:55] *** Quits: pnbeast (~pnbeast@2601:140:4280:6ce0::1) (Quit: WeeChat 2.7.1)
[22:29:57] *** Quits: oxfuxxx (~oxfuxxx@pop.92-184-108-184.mobile.abo.orange.fr) (Ping timeout: 240 seconds)
[22:32:47] <sokan> file that I'm using: http://dpaste.com/3CHUZUL5A. Program so far: http://dpaste.com/7L3ZFUXC2. It should be printing "l is 2", but it's not. I know that structid has been built fine. What am I doing wrong?
[22:33:16] <sokan> Something in line 75?
[22:34:28] <ChoHag_> Consider golfing your code a little bit.
[22:34:47] *** Quits: inlight (~inlight@user/inlight) (Ping timeout: 256 seconds)
[22:35:05] <sokan> golfing?
[22:35:16] <sokan> What does that mean?
[22:35:19] <ChoHag_> Reducing it's size.
[22:35:26] <sokan> (all these nasty comments will go way)
[22:35:26] <ChoHag_> Focussing in on the problem.
[22:36:22] *** Joins: oxfuxxx (~oxfuxxx@pop.92-184-108-193.mobile.abo.orange.fr)
[22:36:26] <cehteh> comments are not part of the bug :D
[22:36:35] <ChoHag_> They are part of the noise though.
[22:36:48] <sokan> ChoHag_: http://dpaste.com/2V9B2JYE8
[22:36:48] <cehteh> yeah kindof in this way
[22:36:51] <ChoHag_> Remove noise, extract signal.
[22:36:52] <sokan> cleaned up version
[22:37:14] <ChoHag_> Comments are irrelevant but visually noisy, they can be ignored.
[22:37:21] <ChoHag_> Get rid of all the I/O for example.
[22:37:51] <ChoHag_> Or not if that makes the problem go away. Is the problem with reading, parsing or maths?
[22:37:53] <sokan> oh i see. So instead of the user giving aa_in1, I declare it and assign a variable to it
[22:38:11] <clarity> > (atom_id[l].type == "CA")
[22:38:18] <clarity> That's not how you compare strings
[22:38:49] <sokan> I strcmp even on atom_id[l];
[22:39:16] *** Joins: wootehfoot (~wootehfoo@user/wootehfoot)
[22:40:10] <ChoHag_> sokan: It helps if you don't think of C as having strings. str[n]cmp compares base-256 numbers.
[22:40:52] <clarity> sokan: What are the inputs for which the program should print "l is 2"?
[22:41:21] <sokan> clarity: I fixed it. strcmp(atom_id[l].type, "CA") == 0 did the magic
[22:41:29] <ChoHag_> It's not magic.
[22:41:29] <sokan> ChoHag_: that's actually one excellent advice!!!
[22:41:34] <ChoHag_> It's code.
[22:42:22] <pragma-> Code is not magic?
[22:42:29] <clarity> sokan: Btw, you should look into enabling compiler warnings :)
[22:42:31] <pragma-> Seems pretty magical to me.
[22:42:57] *** Quits: oxfuxxx (~oxfuxxx@pop.92-184-108-193.mobile.abo.orange.fr) (Ping timeout: 240 seconds)
[22:42:57] * pragma- spins ChoHag_'s head with Heisenbugs
[22:43:01] <ChoHag_> Mathemagical.
[22:44:34] *** Quits: whupdup (~whupdup@pool-173-76-128-81.bstnma.fios.verizon.net) (Quit: Going offline, see ya! (www.adiirc.com))
[22:44:35] *** Quits: crashrep (~crashrep@user/crashrep) (Quit: WeeChat 3.4)
[22:44:35] <ChoHag_> sokan: What are you trying to learn?
[22:44:49] *** Joins: crashrep (~crashrep@user/crashrep)
[22:44:59] *** Quits: perrierjouet (~perrier-j@modemcable012.251-130-66.mc.videotron.ca) (Ping timeout: 256 seconds)
[22:45:54] <sokan> ChoHag_: Gradually C. But at the moment I'm trying to work out an exercise that our prof assigned us.
[22:45:59] <sokan> while preparing for exams :P
[22:46:09] <ChoHag_> Obviously C. I mean in this particular.
[22:46:42] <sokan> Figure out what my programming is doing wrong, mostly.
[22:46:52] <sokan> And when I see that, why it's doing it wrong.
[22:47:38] <ChoHag_> OK but the exercise will have an underlying purpose of trying to teach some grander concept; what's that concept?
[22:48:04] <ChoHag_> Assuming the exercise has some sort of title or purpose or so.
[22:48:36] *** Quits: wroathe (~wroathe@user/wroathe) (Ping timeout: 250 seconds)
[22:48:41] <sokan> ChoHag_: I honestly have no idea what we're supposed to learn. It's a very specific bioinformatics problem
[22:49:03] <sokan> it combines, structs and functions and loops and everything we'be learned so far
[22:49:17] <ChoHag_> If the purpose is to parse that text file and calculate some summary or other, C is the wrong language for a beginner.
[22:49:30] <sokan> people keep saying that here :P
[22:49:37] <clarity> Meh
[22:49:38] <sokan> It's sadly, not something I can fix :(
[22:49:43] *** Joins: oxfuxxx (~oxfuxxx@pop.92-184-108-18.mobile.abo.orange.fr)
[22:51:57] <sokan> ChoHag_: The purpose is indeed to parse that file, and then calculate distances based on specific numbers in that file
[22:52:05] <ChoHag_> What you could do is define a constant string of awk of perl source code and use C to execve it.
[22:52:28] <ChoHag_> That way you could write it in a sensible language in about 6 lines.
[22:52:47] <sokan> perl + bash + python +awk/sed would be much better, but they wanted C in order for us to learn "programming" logic
[22:52:50] <sokan> I guess
[22:52:56] <ChoHag_> That's bullshit.
[22:52:59] <sokan> haha
[22:53:19] <sokan> imo, we would be much better if they taught us how to use bash and a terminal
[22:53:26] <ChoHag_> What's the sum over each input line?
[22:53:28] <sokan> or any shell
[22:54:14] *** Quits: oxfuxxx (~oxfuxxx@pop.92-184-108-18.mobile.abo.orange.fr) (Ping timeout: 250 seconds)
[22:54:15] *** Joins: wroathe (~wroathe@user/wroathe)
[22:54:40] <ChoHag_> How is the result supposed to be calculated?
[22:55:15] <sokan> ChoHag_: I'm nearing the solution of the exercise. I'll get back with it when I'm done (hopefully).
[22:55:29] *** Joins: ferdna (~ferdna@user/ferdna)
[22:55:39] <sokan> (it's going to take some time to explain and I'd rather finish now that I'm kinda in the flow of it :D)
[22:57:10] *** Joins: highrate (~presonic@user/highrate)
[22:57:59] <omegatron> sokan: are you (or your professor) following a specific book? (because i'm bioinformatics/bio-medical computer scientist)
[22:58:23] *** Joins: etchi (~A@195.198.128.15)
[22:58:37] <sokan> omegatron: nope. Not that I know of or he hasn't told us. He's showing us examples of his code or tutorials point.
[22:58:58] <sokan> omegatron: I'm so happy to see someone into the field :D
[22:59:22] <sokan> it'll be easier to explain :P
[23:00:05] *** Joins: oxfuxxx (~oxfuxxx@pop.92-184-110-84.mobile.abo.orange.fr)
[23:00:44] <omegatron> first semester ?
[23:00:49] <sokan> yep
[23:01:10] * cousteau wonders if sqrt(x1x2 * x1x2 + y1y2 * y1y2 + z1z2 * z1z2) wouldn't be more efficiently computed as hypot(x1x2, hypot(y1y2, z1z2))
[23:01:22] * cousteau also wonders if there's a 3D hypot() function
[23:01:29] <pragma-> bash and perl are terrible choices to learn how to program
[23:02:16] <omegatron> well, perl is the first choice for many things in bioinformatics, due to the https://metacpan.org/pod/BioPerl package et al.
[23:02:18] <candide> Title of omegatron's link: BioPerl - Perl modules for biology - metacpan.org
[23:02:29] <cousteau> I like bash and perl.  But pragma- is definitely not wrong...
[23:02:49] *** Joins: ashley_ (~ashley@ool-44c6903d.dyn.optonline.net)
[23:02:52] <sokan> pragma-: what about python?
[23:03:26] <cousteau> omegatron: that doesn't make it a good choice to learn how to program though
[23:03:30] *** Joins: Nutte35 (~Nutte@27.114.187.37)
[23:03:33] <omegatron> I didn't say he is wrong - just explained, why perl is popular among people in this field
[23:03:36] <sokan> omegatron: Can't argue there. We start with C and next semester we have python _and_ perl under one course
[23:03:45] <cousteau> I see
[23:03:53] *** Quits: Nutte35 (~Nutte@27.114.187.37) (Read error: Connection reset by peer)
[23:04:00] <sokan> I'm not sure that we'll use bioperl though :P
[23:04:04] <omegatron> I also think that perl is surely difficult for beginners
[23:04:06] *** Joins: Nutte35 (~Nutte@27.114.187.37)
[23:04:15] <sokan> we did perl as undergrads XD
[23:04:32] <sokan> I had NO clue what was going on. I had to rely on #perl to solve exercises :
[23:04:36] <sokan> :\
[23:04:38] *** Quits: oxfuxxx (~oxfuxxx@pop.92-184-110-84.mobile.abo.orange.fr) (Ping timeout: 250 seconds)
[23:04:40] <ChoHag_> sokan: https://dpaste.com/A4KMPWU7M
[23:04:42] <pragma-> bash has some very quirky syntax and semantics. perl has way, way, way too many ways to do the same things, in addition to strange syntax and semantics. python is more clean, I suppose.
[23:04:48] *** Quits: Nutte35 (~Nutte@27.114.187.37) (Read error: Connection reset by peer)
[23:04:48] <sokan> (sorry for the :\ typos. New keyboard)
[23:05:00] *** Joins: Nutte35 (~Nutte@27.114.187.37)
[23:05:05] *** Quits: Nutte35 (~Nutte@27.114.187.37) (Read error: Connection reset by peer)
[23:05:08] <cousteau> pragma-: bash is fantastic if you compare it to, say, batch
[23:05:09] * pragma- pats lisp
[23:05:21] <pragma-> oh god, don't remind me that batch files were once a thing
[23:05:21] *** Joins: Nutte35 (~Nutte@27.114.187.37)
[23:05:37] <omegatron> cousteau: if you would actually read my text and not imply things, which are completely wrong ...
[23:05:38] <ChoHag_> @echo They still are a thing.
[23:05:41] *** Quits: Nutte35 (~Nutte@27.114.187.37) (Read error: Connection reset by peer)
[23:05:42] <cousteau> whenever I think of all the bad things bash has, when compared to, say, Tcl, I remember that those are exactly the things that make me prefer bash over batch
[23:06:10] <cousteau> not like that's any consolation though...
[23:06:31] <sokan> ChoHag_: what's that?
[23:06:36] <cousteau> omegatron: goddammit, I just pointed out a personal thought, and then said "I see" when you explained what you meant!
[23:06:54] <ChoHag_> sokan: re-define INTERPRETER and SOURCE and write your solution in whichever language you prefer.
[23:07:00] <rsjw> prog.bat == prog.bas++
[23:07:18] <ChoHag_> Call the executable as './a.out <filename>'
[23:07:21] <omegatron> yes, I still wanted to finish my point of view of your comment ..  =D
[23:07:39] <sokan> FINALLY OVER: http://dpaste.com/8CVUQV2MM
[23:07:56] <cousteau> omegatron: also, I get what you mean.  At my uni they insisted in teaching Pascal as the first language, probably because it was widely used in... no idea what, actually
[23:08:08] <ChoHag_> The professor's head.
[23:08:09] <cousteau> and others will probably be teaching Fortran
[23:08:34] <zwr> they should teach the newer generations COBOL, they're too coddled, they need to suffer
[23:08:48] <omegatron> and a few will torment their first semester students with COBOL =D
[23:08:59] <omegatron> -_-
[23:09:22] <omegatron> (i might think to move the irc client window to the main display ...)
[23:09:29] <rsjw> sokan: you're not handling EOF correctly
[23:09:36] <ChoHag_> COBBOLed.
[23:09:50] <sokan> rsjw: jfc... I can't handle this anymore XD
[23:10:05] <sokan> rsjw: what's wrong with it?
[23:10:24] <sokan> (I'm willing to learn, it's just that it's annoying that we're being taught badly)
[23:10:36] <sokan> omegatron: you're doing research or are a student?
[23:10:55] <omegatron> i'm running my own company
[23:11:00] <sokan> wow
[23:11:02] <sokan> hot stuff
[23:11:07] *** Joins: oxfuxxx (~oxfuxxx@pop.92-184-108-240.mobile.abo.orange.fr)
[23:11:15] <rsjw> sokan: the return value of fgets will tell you if there's a problem, whether it's EOF or a different error. if fgets returns NULL, it could be EOF or it could be an error. feof just lets you distinguish which of those is actually the case
[23:11:17] <sokan> who knows, maybe I'll work at your place one day :P
[23:11:28] <omegatron> ... and will retire in a few years, due to old age ...
[23:11:34] <sokan> oh..
[23:12:01] <rsjw> sokan: presently, your code calls fgets but ignores the return value of it, so you might not be sscanfing on something valid
[23:12:16] *** Joins: pucara (~i@host14.181-1-101.telecom.net.ar)
[23:12:28] <sokan> rsjw: so instead of !feof(in) I should in != EOF?
[23:12:47] <rsjw> sokan: no, "in" is a pointer to FILE
[23:13:25] <rsjw> while (fgets(...) != NULL) { ... } is the idion
[23:13:28] <rsjw> *idiom
[23:14:47] <rsjw> if, after the loop body, you're interested in whether fgets terminated the loop due to an error or just EOF, then you can use the feof and ferror functions
[23:14:48] <sokan> is it possible to use `while(fgets(line, sizeof(line), in) != NULL) instead of lines 57,58?
[23:15:07] <rsjw> yes, that's what I'm saying
[23:15:19] <sokan> :))
[23:15:29] <sokan> omegatron: chances of using C in bioinformatics?
[23:15:54] *** Quits: oxfuxxx (~oxfuxxx@pop.92-184-108-240.mobile.abo.orange.fr) (Ping timeout: 268 seconds)
[23:17:00] <sokan> http://dpaste.com/FBV4VBQJW
[23:17:03] <sokan> there we go
[23:17:05] <tusko> I use c in bioinformatics every day
[23:17:21] <sokan> tusko: what for?
[23:17:36] <sokan> I'm curious to see how much need there is for c in bioinfo
[23:17:48] <tusko> By writing C I signal to any women around me that I am carrying significant information in my nuts.
[23:18:03] <sokan> ..............
[23:18:04] <omegatron> very high, depending on the company, because perl is nice and all, but with C you have in general more speed, due to many (open source) software written for (distributed) high-performance, cluster-oriented software
[23:18:08] <tusko> They know, almost immediately
[23:18:18] *** Joins: kts (~kts@103.73.237.127)
[23:18:23] *** Quits: cousteau (~cousteau@user/cousteau) (Quit: â™« I can't forget the day I shot that network down â™«)
[23:18:43] <sokan> omegatron: so it's mostly more the sysadmin/IT aspect of it needed, than actual reasearch?
[23:19:04] <sokan> like what alphgo did now etc
[23:19:11] *** Joins: NEYi (~NEYi@109.251.216.38)
[23:19:14] <sham1> perl is neat
[23:19:18] <omegatron> no - on the contrary
[23:19:39] <omegatron> every task we need to run as fast as possible, we program in C
[23:19:40] <sokan> I'm rather interested in C, hence why I'm asking.
[23:20:08] *** Quits: rgrinberg (~textual@2806:101e:7:2b:bcc3:4b5c:4ace:b143) (Quit: My MacBook has gone to sleep. ZZZzzzâ€¦)
[23:20:22] <sokan> but pattern mathing/regex is a no go with C. Or even then speed wise it wins perl?
[23:20:56] <omegatron> but our library has grown quite large in the past 23 years, so today, my employees and me don't have to deal with the low-level stuff anymore
[23:21:27] <tusko> If God ever spoke to man it would be in Perl.
[23:21:33] <sokan> ChoHag_: what I wanted to do was read the .pdb file, see which lines started with ATOM, out of these figure out which had CA in them, ask a user to choose 2 of them (based on numbers he chose) and calculate their distance based on their coordinates
[23:21:37] <pony> tusko: :)
[23:24:03] <sham1> tusko: relevant XKCD: https://xkcd.com/224/
[23:24:04] <candide> Title of sham1's link: xkcd: Lisp
[23:24:56] <tusko> lmao so good
[23:26:13] *** Joins: penguino (~mrpenguin@user/mrpenguin)
[23:26:16] <pony> I want to learn lisp one day
[23:26:21] <pony> to get that enlightenment
[23:26:29] <pony> so see parentheses in nature
[23:26:33] <pony> s/so/to
[23:27:05] <omegatron> until then you are stuck with php?
[23:27:38] <omegatron> or what is your current profession?
[23:27:53] <pony> cs student
[23:27:58] <pony> not a profession per se
[23:28:14] <pony> but other side projects too
[23:32:14] <omegatron> hm, I hoped more for a "go away, heretic - for you have used the name of a foul and evil language in this sanctuary!" - reaction ...  -_-
[23:33:03] <sham1> For which one? Lisp or PHP
[23:33:19] <omegatron> you have to ask?
[23:33:29] <omegatron> the latter of course ..
[23:34:02] <sham1> Thinking about PHP is a punishment enough
[23:34:07] <omegatron> =D
[23:34:26] <ChoHag_> pony: What's stopping you?
[23:35:03] <pony> I just said I have other side projects
[23:35:31] *** Joins: perrierjouet (~perrier-j@modemcable012.251-130-66.mc.videotron.ca)
[23:35:40] *** Joins: cvmn (~caveman@gateway/tor-sasl/caveman)
[23:37:51] *** Joins: meator (~meator@user/meator)
[23:39:55] *** Joins: gproto23 (~gproto23@user/gproto23)
[23:42:17] *** Quits: wroathe (~wroathe@user/wroathe) (Ping timeout: 240 seconds)
[23:42:45] *** Quits: meator (~meator@user/meator) (Quit: Leaving)
[23:45:19] <pragma-> sokan: you can certainly use regexps in C
[23:45:35] <pragma-> The interface might be tedious and annoying compared to a language that has them as first-class things, like Perl
[23:45:50] <pragma-> Python and PHP have similiar annoying interfaces
[23:46:37] *** Joins: sdfgsdfg (~sdfgsdfg@user/sdfgsdfg)
[23:47:26] *** Quits: cvmn (~caveman@gateway/tor-sasl/caveman) (Quit: will timeout soon.  better quit cleanly.  bbl.)
[23:47:30] <omegatron> there are the pcre and pcre2 libraries ..
[23:49:12] *** Joins: whupdup (~whupdup@pool-173-76-128-81.bstnma.fios.verizon.net)
[23:50:57] *** Joins: wroathe (~wroathe@206-55-188-8.fttp.usinternet.com)
[23:50:57] *** Quits: wroathe (~wroathe@206-55-188-8.fttp.usinternet.com) (Changing host)
[23:50:57] *** Joins: wroathe (~wroathe@user/wroathe)
[23:51:46] *** Joins: khaledzz (~Adium@156.213.21.185)
[23:55:46] *** Quits: wroathe (~wroathe@user/wroathe) (Ping timeout: 250 seconds)
[23:58:37] *** Joins: AbleBacon (~AbleBacon@user/AbleBacon)
[23:59:55] *** Joins: chiselfu1e (~chiselfus@user/chiselfuse)
