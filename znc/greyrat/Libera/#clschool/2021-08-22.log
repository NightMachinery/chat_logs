[01:00:50] *** Joins: tyson2 (~user@bras-base-toroon0624w-grc-19-70-31-33-162.dsl.bell.ca)
[01:34:46] *** Joins: jeffrey (~jeffrey@80-115-60-193.cable.dynamic.v4.ziggo.nl)
[01:37:13] *** Quits: sjl (~sjl@cpe-66-66-5-59.rochester.res.rr.com) (Quit: WeeChat 2.2-dev)
[01:37:56] *** Quits: shka (~herr@109.231.62.239) (Ping timeout: 250 seconds)
[01:38:59] *** emacsoma1 is now known as emacsomancer
[02:17:42] *** Joins: sjl (~sjl@cpe-66-66-5-59.rochester.res.rr.com)
[02:23:35] *** Quits: derelict (~derelict@user/derelict) (Quit: WeeChat 3.2)
[02:48:42] *** Quits: lisp123 (~lisp123@5.30.23.247) (Remote host closed the connection)
[02:49:17] *** Joins: lisp123 (~lisp123@5.30.23.247)
[02:53:46] *** Quits: lisp123 (~lisp123@5.30.23.247) (Ping timeout: 252 seconds)
[03:06:17] *** Joins: lisp123 (~lisp123@5.30.23.247)
[03:09:36] *** Joins: derelict (~derelict@user/derelict)
[03:13:07] *** Quits: lisp123 (~lisp123@5.30.23.247) (Remote host closed the connection)
[03:13:39] *** Joins: lisp123 (~lisp123@5.30.23.247)
[03:14:46] *** Quits: derelict (~derelict@user/derelict) (Quit: WeeChat 3.2)
[03:18:10] *** Quits: lisp123 (~lisp123@5.30.23.247) (Ping timeout: 240 seconds)
[03:29:44] *** Quits: makomo (~makomo@user/makomo) (Ping timeout: 250 seconds)
[03:54:08] *** Joins: lisp123 (~lisp123@5.30.23.247)
[03:55:42] *** Joins: derelict (~derelict@user/derelict)
[04:06:33] *** Quits: lisp123 (~lisp123@5.30.23.247) (Ping timeout: 248 seconds)
[04:31:40] *** Quits: waleee (~waleee@2001:9b0:216:8200:d457:9189:7843:1dbd) (Ping timeout: 240 seconds)
[04:36:32] *** Joins: lisp123 (~lisp123@5.30.23.247)
[04:47:44] *** Quits: random-nick (~random-ni@87.116.176.45) (Ping timeout: 250 seconds)
[05:20:29] *** Quits: tyson2 (~user@bras-base-toroon0624w-grc-19-70-31-33-162.dsl.bell.ca) (Remote host closed the connection)
[06:05:57] *** Quits: White_Flame (~quassel@user/white-flame/x-6930243) (Remote host closed the connection)
[06:07:10] *** Joins: White_Flame (~quassel@user/white-flame/x-6930243)
[06:17:40] *** Quits: jeffrey (~jeffrey@80-115-60-193.cable.dynamic.v4.ziggo.nl) (Quit: Client quit)
[06:43:27] *** Joins: [_] (~itchyjunk@user/itchyjunk/x-7353470)
[06:45:40] *** Quits: [itchyjunk] (~itchyjunk@user/itchyjunk/x-7353470) (Ping timeout: 240 seconds)
[07:30:58] *** Quits: sts-q (~sts-q@212.53.219.147) (Ping timeout: 252 seconds)
[07:35:59] *** Quits: CrashTestDummy2 (~CrashTest@ool-ad02813b.dyn.optonline.net) (Read error: Connection reset by peer)
[07:36:53] *** Joins: CrashTestDummy (~CrashTest@ool-ad02813b.dyn.optonline.net)
[07:38:03] *** Quits: CrashTestDummy (~CrashTest@ool-ad02813b.dyn.optonline.net) (Read error: Connection reset by peer)
[07:38:23] *** Joins: CrashTestDummy (~CrashTest@ool-ad02813b.dyn.optonline.net)
[07:40:18] *** Quits: CrashTestDummy (~CrashTest@ool-ad02813b.dyn.optonline.net) (Read error: Connection reset by peer)
[07:40:38] *** Joins: CrashTestDummy (~CrashTest@ool-ad02813b.dyn.optonline.net)
[07:42:15] *** Joins: sts-q (~sts-q@212.53.219.149)
[08:05:12] *** Joins: CrashTestDummy2 (~CrashTest@ool-ad02813b.dyn.optonline.net)
[08:08:10] *** Quits: CrashTestDummy (~CrashTest@ool-ad02813b.dyn.optonline.net) (Ping timeout: 240 seconds)
[08:37:40] *** Joins: CrashTestDummy3 (~CrashTest@ool-ad02813b.dyn.optonline.net)
[08:40:14] *** Joins: CrashTestDummy (~CrashTest@ool-ad02813b.dyn.optonline.net)
[08:40:52] *** Quits: CrashTestDummy2 (~CrashTest@ool-ad02813b.dyn.optonline.net) (Ping timeout: 250 seconds)
[08:43:28] *** Quits: CrashTestDummy3 (~CrashTest@ool-ad02813b.dyn.optonline.net) (Ping timeout: 250 seconds)
[08:54:44] *** Quits: [_] (~itchyjunk@user/itchyjunk/x-7353470) (Read error: Connection reset by peer)
[09:11:42] *** Joins: CrashTestDummy2 (~CrashTest@ool-ad02813b.dyn.optonline.net)
[09:14:55] *** Quits: CrashTestDummy (~CrashTest@ool-ad02813b.dyn.optonline.net) (Ping timeout: 252 seconds)
[09:43:40] *** Joins: CrashTestDummy3 (~CrashTest@ool-ad02813b.dyn.optonline.net)
[09:46:44] *** Quits: CrashTestDummy2 (~CrashTest@ool-ad02813b.dyn.optonline.net) (Ping timeout: 250 seconds)
[10:03:58] *** Joins: retropikzel (~retropikz@2001:999:200:4ae7:b0ea:7db1:dd14:5ec6)
[10:05:00] *** Quits: aeth (~aeth@user/aeth) (Read error: Connection reset by peer)
[10:05:19] *** Joins: aeth (~aeth@user/aeth)
[10:05:53] *** Joins: abrantesasf (~abrantesa@2804:14d:b086:4b3c:2e56:dcff:fedb:62f)
[10:19:43] *** Quits: abrantesasf (~abrantesa@2804:14d:b086:4b3c:2e56:dcff:fedb:62f) (Quit: Leaving)
[10:20:53] *** Joins: abrantesasf (~abrantesa@2804:14d:b086:4b3c:2e56:dcff:fedb:62f)
[10:26:20] *** Quits: abrantesasf (~abrantesa@2804:14d:b086:4b3c:2e56:dcff:fedb:62f) (Quit: Leaving)
[10:27:29] *** Joins: abrantesasf (~abrantesa@2804:14d:b086:4b3c:2e56:dcff:fedb:62f)
[10:29:17] *** Quits: abrantesasf (~abrantesa@2804:14d:b086:4b3c:2e56:dcff:fedb:62f) (Client Quit)
[10:29:36] *** Joins: abrantesasf (~abrantesa@2804:14d:b086:4b3c:2e56:dcff:fedb:62f)
[10:30:52] *** Quits: abrantesasf (~abrantesa@2804:14d:b086:4b3c:2e56:dcff:fedb:62f) (Client Quit)
[10:31:15] *** Joins: abrantesasf (~abrantesa@2804:14d:b086:4b3c:2e56:dcff:fedb:62f)
[11:06:29] *** Joins: shka (~herr@109.231.62.239)
[11:20:02] *** Quits: abrantesasf (~abrantesa@2804:14d:b086:4b3c:2e56:dcff:fedb:62f) (Quit: Leaving)
[11:37:25] *** Joins: fef (~thedawn@user/thedawn)
[12:07:48] *** Joins: rain3 (~rain3___@2a02:2f09:d30b:1300:514:bcc7:8202:1798)
[12:35:13] *** Joins: hendursa1 (~weechat@user/hendursaga)
[12:37:57] *** Quits: hendursaga (~weechat@user/hendursaga) (Ping timeout: 244 seconds)
[12:52:37] *** Joins: nij- (~jin@209.122.210.131)
[12:54:14] <nij-> I'm wondering if there's a terser way to write a double loop, ie a form that loops through two variables. (loop for x .. for y .. do ..) only loops in one dimension. Instead, what I do now is to (loop for x .. do (loop for y ..)). But in the usual indentation, the code looks clumsy.
[12:54:14] <minion> nij-, memo from pjb: you should write a reader macro for $ to read $42, $NF, $#99, etc; not generate a ton of symbol-macros.  What if the regexp has one more group?
[12:54:58] <nij-> pjb: what does that mean? What should $42, $NF, $#99 suppose to be read to?
[12:56:10] *** Quits: retropikzel (~retropikz@2001:999:200:4ae7:b0ea:7db1:dd14:5ec6) (Ping timeout: 258 seconds)
[12:56:33] <beach> There is no other way.
[12:59:19] *** Quits: nij- (~jin@209.122.210.131) (Read error: Connection reset by peer)
[13:02:01] <pjb> beach: you can always write a macro!  eg. rloop (with an example just below): https://github.com/informatimago/emacs/blob/master/pjb-emacs.el#L1890
[13:20:54] *** Joins: nij- (~jin@209.122.210.131)
[13:26:39] *** Joins: retropikzel (~retropikz@83-245-241-179-nat-p.elisa-mobile.fi)
[13:26:39] *** Quits: nij- (~jin@209.122.210.131) (Read error: Connection reset by peer)
[14:42:57] *** Joins: makomo (~makomo@user/makomo)
[14:45:37] *** Quits: retropikzel (~retropikz@83-245-241-179-nat-p.elisa-mobile.fi) (Read error: Connection reset by peer)
[14:45:54] *** Joins: retropikzel (~retropikz@83-245-241-179-nat-p.elisa-mobile.fi)
[14:56:33] *** Joins: tyson2 (~user@bras-base-toroon0624w-grc-19-70-31-33-162.dsl.bell.ca)
[15:32:45] *** Joins: random-nick (~random-ni@87.116.179.117)
[15:37:16] *** Joins: nij- (~jin@209.122.210.131)
[15:43:25] *** Quits: nij- (~jin@209.122.210.131) (Read error: Connection reset by peer)
[16:15:14] *** Joins: nij- (~jin@209.122.210.131)
[16:15:36] *** Parts: nij- (~jin@209.122.210.131) ()
[16:25:36] *** Joins: selwyn (~selwyn@user/selwyn)
[16:48:05] *** Quits: lisp123 (~lisp123@5.30.23.247) (Quit: Leaving...)
[17:14:07] *** Quits: retropikzel (~retropikz@83-245-241-179-nat-p.elisa-mobile.fi) (Quit: Leaving)
[17:28:28] *** Joins: jeffrey (~jeffrey@2001:1c00:b11:8800:6035:eeff:fe81:bf1c)
[17:30:40] *** Quits: tyson2 (~user@bras-base-toroon0624w-grc-19-70-31-33-162.dsl.bell.ca) (Quit: ERC (IRC client for Emacs 27.2))
[17:36:14] *** Quits: selwyn (~selwyn@user/selwyn) (Read error: Connection reset by peer)
[17:37:39] *** Joins: waleee (~waleee@2001:9b0:216:8200:d457:9189:7843:1dbd)
[17:53:07] *** Quits: fef (~thedawn@user/thedawn) (Ping timeout: 244 seconds)
[18:05:19] *** Joins: fef (~thedawn@user/thedawn)
[18:40:40] *** Joins: lisp123 (~lisp123@45.86.202.65)
[18:41:12] *** Joins: selwyn (~selwyn@user/selwyn)
[19:19:22] *** Joins: [itchyjunk] (~itchyjunk@user/itchyjunk/x-7353470)
[19:21:29] *** Joins: thrig (~thrig@70.97.65.251)
[19:23:59] *** Joins: tyson2 (~user@toroon12-3096782677.sdsl.bell.ca)
[19:41:39] *** Joins: lisp123_ (~lisp123@5.30.23.247)
[19:44:42] *** Joins: ln43 (~ln43@user/ln43)
[19:45:13] *** Quits: lisp123 (~lisp123@45.86.202.65) (Ping timeout: 248 seconds)
[20:06:26] <ln43> so LispWork can be bought by a person that lives in Taiwan or not ? (http://www.lispworks.com/buy/prices.html)
[20:14:33] <lisp123_> Yes
[20:14:42] <lisp123_> E-mail them
[20:15:00] <lisp123_> lisp-sales@lispworks.com
[20:15:22] <ln43> ok but Taiwan is not China ...
[20:17:14] <edgar-rft> I think "North America and the rest of the world except Europe, India, China (PRC) and Taiwan" doesn't mean they don't sell to taiwan, but  they might have no direct local support person, so you need to ask.
[20:19:17] <ln43> ok but eventually i will try the free personal edition when maybe i will like to use the functionalities provided 
[20:19:52] *** Quits: tyson2 (~user@toroon12-3096782677.sdsl.bell.ca) (Ping timeout: 252 seconds)
[20:48:49] *** Quits: thrig (~thrig@70.97.65.251) (Remote host closed the connection)
[20:52:03] <beach> ln43: What functionality do you need that is unique?
[20:54:36] <ln43> ok, really it was just a way to simplify for me the approach ... 
[20:57:52] <beach> I see.  It is probably easier to install I guess.  One disadvantage, though, is that few people on IRC use it, so you may not get as much help as you would with a more common alternative. 
[21:01:16] <lisp123_> ln43: What Operating System do you have?
[21:01:41] <ln43> eh actually i'm using Portacle on windows
[21:02:05] <lisp123_> I think better if you just keep using Portacle
[21:02:25] <ln43> but anyway, i was trying to quickload a project that is not present in QuickLisp ... https://github.com/mark-watson/loving-common-lisp/tree/master/src
[21:02:28] <lisp123_> LispWorks makes sense for more advanced users who need its functionalities - I tried it, its way to confusing
[21:02:55] <lisp123_> Ok
[21:03:02] <ln43> and of course, i'm having an hard time
[21:03:18] <lisp123_> Let me see if I can help
[21:03:28] <ln43> but maybe with a bit of patience i should find a way ... possibly
[21:03:52] <lisp123_> give me a second
[21:04:01] <lisp123_> I am going to check out Portacle on my Win machine
[21:04:31] <ln43> there is  ~/.config/common-lisp/source-registry.conf.d/projects.conf that i can't understand how to adapt to my case
[21:05:10] <ln43> already searched for source-registry.conf.d that was present in ./win/sbcl/share/src/contrib/asdf/asdf.lisp
[21:05:17] <ln43> but i don't think relates
[21:05:58] <lisp123_> Okay
[21:05:59] <beach> I think the usual thing is to put your local projects in ~/quicklisp/local_projects.
[21:06:15] <lisp123_> Do you have something like C:\Users\user-name\portacle\projects?
[21:06:20] <beach> And then you run (ql:register-local-projects)
[21:06:29] <lisp123_> There should be a folder within the portacle directory called projects
[21:06:35] <lisp123_> you have to place your projects there
[21:07:04] <ln43> yes, right 
[21:07:10] <ln43> but doesn't work
[21:07:24] <ln43> i just tried in that way
[21:08:00] <lisp123_> let me try
[21:08:25] <ln43> yes with the src folder under d:\username\portacle\projects\loving-common-lisp\src
[21:08:59] <ln43> there is no .asd file in that src dir
[21:09:08] <ln43> maybe could be that the issue ?
[21:10:04] <lisp123_> works for me
[21:10:13] <lisp123_> I didn't put "loving-common-lisp"
[21:10:20] <lisp123_> I did project\src
[21:10:40] <lisp123_> Then (ql:quickload "sparql") which was what was in his readme
[21:11:40] <lisp123_> Note that ASDF looks recursively in the folders
[21:12:00] <lisp123_> So doesn't really matter where the .asd file is in the folder, but all its files should be in the same place
[21:12:22] <ln43> ok, let me check ...
[21:12:42] <lisp123_> I notice he doesn't have .asd for all his projects - for those you have to manually load via (load "C:/users/" or something like that (I always forget if its / or \ when it comes to Windows
[21:13:42] <ln43> ops... right, it's working: initially i used the full path
[21:13:59] <lisp123_> Cool. It's strange why it didn't work for you
[21:14:23] <lisp123_> Because as I said, ASDF looks recursively into folders, so the fact you had 'loving-common-lisp' shouldn't have affected it
[21:14:34] <lisp123_> I will investigate later, thanks for confirming it worked
[21:14:58] <ln43> yes, using simply (ql:quickload "sparql")
[21:15:22] <ln43> thank you
[21:15:25] <lisp123_> OH, you did (ql:quickload "C:..." ) before?
[21:15:48] <ln43> yes, i did like that
[21:16:35] <lisp123_> Okay, mystery solved. FWIW, the trick to ASDF is making sure your system knows which folders to search (just the root), for the rest - ASDF will basically load the first .asd file for a given project, so if you have duplicate .asd, then only one is loaded
[21:17:24] <ln43> in this case which .asd file is loaded ?
[21:17:25] <lisp123_> Hence why you don't need to mention filepaths when doing your ql:quickload or asdf:load-system --> that step you have already implicitly done when you set up the config on which folders ASDF seraches for
[21:17:42] <lisp123_> I think he only has one - sparql.asd in the subfolder
[21:17:50] <ln43> ok
[21:18:02] <lisp123_> Now try M-x slime-restart-inferior-lisp and then do (asdf:load-system "sparql")
[21:18:10] <lisp123_> My money is it will work, no Quicklisp required ;)
[21:19:33] <ln43> why i should restart the inferior lisp? just to "unbound" some symbol names ?
[21:19:47] *** Quits: selwyn (~selwyn@user/selwyn) (Read error: Connection reset by peer)
[21:20:31] <random-nick> when load-system fails it should give a restart which resets the asdf configuration and tries again
[21:20:40] <random-nick> that might work
[21:22:41] <lisp123_> ln43: No reason, I just wanted to give a demonstration on how ASDF works
[21:22:57] <ln43> yes... it works
[21:23:18] <lisp123_> (my point was that you don't need quicklisp for local projects if you have all the dependencies)
[21:24:08] <ln43> yes... as we discussed last time
[21:24:42] <ln43> in this case i already had #:uiop #:drakma #:cl-json #:cl-csv ...
[21:24:48] <lisp123_> Great :) You have now graduated from CL School - collect your million dollars on graduation :D
[21:24:49] <ln43> so it was ok
[21:26:57] *** Joins: lisp123 (~lisp123@45.86.202.65)
[21:27:08] <ln43> is there a way to inspect the documentation of slime-restart-inferior-lisp from within the repl or not?
[21:28:06] <lisp123> I have to go, buut its very simple
[21:28:22] <lisp123> Do C-h f (Thats Ctrl + h then f)
[21:28:30] <lisp123> then type slime-restart-inferior-lisp
[21:28:36] <lisp123> It will bring up some documetnation
[21:28:40] <lisp123> click on slime.el
[21:28:44] <lisp123> and viola
[21:30:16] *** Quits: lisp123_ (~lisp123@5.30.23.247) (Ping timeout: 252 seconds)
[21:30:33] <ln43> ok, so i should see better the Emacs commands too ... 
[21:30:38] <ln43> thanks again
[21:31:05] <ln43> yes, right
[21:35:38] *** Joins: selwyn (~selwyn@user/selwyn)
[21:36:36] *** Quits: ln43 (~ln43@user/ln43) (Quit: Connection closed)
[21:57:09] *** Joins: tyson2 (~user@toroon12-3096782677.sdsl.bell.ca)
[22:19:49] *** Quits: tyson2 (~user@toroon12-3096782677.sdsl.bell.ca) (Quit: ERC (IRC client for Emacs 27.2))
[22:30:20] *** Joins: Oladon (~olad@98.43.81.226)
[22:35:14] *** Quits: fef (~thedawn@user/thedawn) (Remote host closed the connection)
[22:48:50] *** Joins: lisp123_ (~lisp123@5.30.23.247)
[22:52:10] *** Quits: lisp123 (~lisp123@45.86.202.65) (Ping timeout: 240 seconds)
[23:20:33] *** Quits: lisp123_ (~lisp123@5.30.23.247) (Quit: Leaving...)
[23:23:32] *** Joins: abrantesasf (~abrantesa@2804:14d:b086:4b3c:2e56:dcff:fedb:62f)
[23:41:58] *** Joins: lisp123 (~lisp123@5.30.23.247)
[23:45:28] *** Quits: hendursa1 (~weechat@user/hendursaga) (Quit: hendursa1)
[23:45:55] *** Joins: hendursaga (~weechat@user/hendursaga)
