[00:00:55] *** ormaaj2 is now known as ormaaj
[00:02:57] *** Quits: bolovanos_ (~bolovanos@user/bolovanos) (Ping timeout: 240 seconds)
[00:03:26] *** Quits: rahl (~rahl@102.114.58.55) (Ping timeout: 252 seconds)
[00:04:52] *** Joins: kitsunenokenja (~kitsunech@68.91.220.96)
[00:05:17] *** Quits: Klinda (~superleag@user/klinda) (Ping timeout: 240 seconds)
[00:05:19] *** Joins: rahl (~rahl@102.114.14.201)
[00:05:34] *** Quits: constxd (~brad@142.134.38.68) (Ping timeout: 256 seconds)
[00:06:42] *** Quits: WilliamLeara (~wdl@cpe-76-185-2-28.tx.res.rr.com) ()
[00:06:59] <SrPx> ty! apotheon 
[00:07:00] *** Joins: sbrothy (~sbrothy@23.102.41.137)
[00:07:04] <SrPx> and nomagno 
[00:07:41] <apotheon> I'm also not sure either V or Zig would actually compile as quickly as you need them to compile, but they're supposedly very fast.
[00:08:10] <apotheon> The quickest way to get there might be to port tcc to your platform, if that's an option for you at all.
[00:08:30] <apotheon> . . . or to wait for someone else to produce what you need, I guess.
[00:08:37] *** Joins: cousteau (~cousteau@user/cousteau)
[00:08:40] <nomagno> tcc has a very unclear porting process, last time I looked into it
[00:08:53] <nomagno> Maybe I just found the code too compact to make sense out of immediately
[00:09:24] <pragma-> just use swift 
[00:09:38] <nomagno> Swift isn't C tough
[00:09:58] <nomagno> And it definitely doesn't compile as fast as TCC
[00:11:29] <apotheon> pragma-: SrPx was specifically asking about extremely fast compile times.
[00:18:11] <SrPx> i think my best bet is to usa llvm jit stuff
[00:18:14] <SrPx> checking on it
[00:19:10] *** Quits: alch (~alch@151.68.218.203) (Ping timeout: 256 seconds)
[00:20:47] <apotheon> I wonder how quickly that'd work.
[00:20:49] *** Joins: alch (~alch@151.36.39.111)
[00:24:46] *** Joins: AmR| (~AmREiSa@156.199.5.112)
[00:25:06] <baltazar> SrPx: luajit? (idk how complex these generated functions need to be)
[00:25:17] *** Quits: AmR (~AmREiSa@156.207.199.106) (Ping timeout: 240 seconds)
[00:26:08] *** Joins: Klinda (~superleag@user/klinda)
[00:26:42] *** Quits: remavas (~Remavas@user/remavas) (Quit: WeeChat 2.8)
[00:28:29] *** Quits: sbrothy (~sbrothy@23.102.41.137) (Quit: leaving)
[00:29:19] *** AmR| is now known as AmR
[00:33:09] <SrPx> the generated functions are very simple, I can even generate assembly-like code if needed
[00:33:17] <SrPx> I just don't want to need to generate assembly for each specific target
[00:33:57] *** Quits: wroathe (~wroathe@user/wroathe) (Ping timeout: 240 seconds)
[00:33:57] *** Quits: ___nick___ (~quassel@cpc68286-cdif17-2-0-cust533.5-1.cable.virginm.net) (Ping timeout: 240 seconds)
[00:35:43] *** Quits: MajorBiscuit (~MajorBisc@62-52-102.netrun.cytanet.com.cy) (Quit: WeeChat 3.3)
[00:36:26] *** Quits: skapata (~Skapata@user/skapata) (Ping timeout: 268 seconds)
[00:37:52] *** Quits: phrosty (~phrosty@c-73-225-175-19.hsd1.wa.comcast.net) (Ping timeout: 256 seconds)
[00:39:03] *** Quits: sloanr` (~user@70-59-70-189.mpls.qwest.net) (Remote host closed the connection)
[00:39:16] *** Joins: sloanr` (~user@70-59-70-189.mpls.qwest.net)
[00:42:02] *** Joins: hxztnxt (~hxztnxt@218.red-83-54-57.dynamicip.rima-tde.net)
[00:42:39] <hxztnxt> do i have to &(p->a) or no need for parenthesis?
[00:42:58] *** Quits: bud (~bud@user/bud) (Ping timeout: 256 seconds)
[00:43:01] <Franciman> no need for parens
[00:45:58] <cousteau> if you have to ask, then I'd say you need parens :)
[00:47:09] <cousteau> a little mnemonic: if the & or * sticked to the leftmost variable, you could write p->a as *p.a and there wouldn't be a need for a separate -> operator because *p.a would be clear enough
[00:47:56] <cousteau> the reason the -> operator is needed is because *p.a means *(p.a), and writing (*p).a is kind of awkward, so that's written as p->a instead for the sake of readability
[00:48:14] <Franciman> is there an idiomatic way to have dynamic arrays
[00:48:24] <Franciman> without having to implement them for each type you need as element?
[00:48:24] <cousteau> and since -> and . are sort of similar, and so are & and *, you can apply the same story to &p.a
[00:48:29] <cousteau> er, &p->a
[00:48:42] <cousteau> Franciman: realloc?
[00:48:54] <Franciman> i mean
[00:49:09] <cousteau> or variable length, not really dynamic?
[00:49:12] *** Joins: gjvc (~gjvc@29.68.246.35.bc.googleusercontent.com)
[00:49:19] <Franciman> nono dynamic, but I have to use the same logic
[00:49:31] <Franciman> for different arrays, like ints structs
[00:49:38] <Franciman> I don't want to duplicate this logic
[00:49:38] <cousteau> there are no "vectors" in C if that's what you ask, although maybe gObject has something like that
[00:50:40] <cousteau> what logic?  the "realloc this array so that it has 3 elements, but since it's an array of ints the new size is 3 * sizeof (int)"?
[00:50:47] *** Joins: wroathe (~wroathe@c-68-54-25-135.hsd1.mn.comcast.net)
[00:50:47] *** Quits: wroathe (~wroathe@c-68-54-25-135.hsd1.mn.comcast.net) (Changing host)
[00:50:47] *** Joins: wroathe (~wroathe@user/wroathe)
[00:50:50] <Franciman> for example
[00:50:53] <Franciman> check if there is more room
[00:50:57] <Franciman> if not, realloc
[00:51:02] <Franciman> otherwise just use what alread is there
[00:51:23] *** Joins: skapata (~Skapata@2804:14c:87b0:a6f9:1cb3:a1b7:6fb3:1939)
[00:51:23] *** Quits: skapata (~Skapata@2804:14c:87b0:a6f9:1cb3:a1b7:6fb3:1939) (Changing host)
[00:51:23] *** Joins: skapata (~Skapata@user/skapata)
[00:51:39] <Franciman> i am writing a parser , and I want to parse an unknown number of ints
[00:51:46] <Franciman> then an unknown number of floats
[00:51:54] <Franciman> so I don't want to rewrite the same thing everytime
[00:52:20] <cousteau> just realloc... the allocation engine should be smart enough to check for the room itself
[00:53:01] <Franciman> uhm, cringe
[00:53:04] <Franciman> i didn't know it would do so
[00:53:09] <cousteau> another way to go is to have a threshold and realloc in powers of X, for example in powers of 2
[00:53:36] <Franciman> yes that's what I was talking about
[00:53:51] <cousteau> Franciman: so that you make an idea, I think that gcc or glibc or whatever it's called always allocates a multiple of 16 bytes
[00:54:20] <Franciman> so do you suggest I just use realloc and never think about this?
[00:54:34] <cousteau> C++ has std::vector<>.  You can probably get something similar with some C library.  Nothing in standard C though.
[00:54:55] <Franciman> yes but I mean, do you ever face this problem in your code bases?
[00:55:06] <Franciman> how do you face it?
[00:55:25] <cousteau> I don't really use malloc that much
[00:55:26] *** Quits: wroathe (~wroathe@user/wroathe) (Ping timeout: 256 seconds)
[00:55:56] <cousteau> I'd suggest to write the code with many reallocs, and if you see it's too slow THEN you optimize it
[00:56:18] <Franciman> thanks cousteau 
[00:56:57] <cousteau> the optimization is as simple as keeping track of the array size, and whenever you actually need to realloc you do it by a factor of 1.5 or 2
[00:57:42] *** Joins: constxd (~brad@142.134.38.68)
[00:58:08] <cousteau> you could create a struct vector {size_t size; void *ptr;}; and a few functions that act as substitutes for malloc and free
[00:58:26] *** Joins: bud (~bud@user/bud)
[01:00:35] <cousteau> int vector_alloc(struct vector *v), int vector_realloc(struct vector *v), etc
[01:01:02] *** Quits: kitsunenokenja (~kitsunech@68.91.220.96) (Ping timeout: 240 seconds)
[01:01:37] <Franciman> ty
[01:02:04] <Franciman> i prefer templates :P
[01:03:23] <cousteau> int vector_realloc(struct vector *v, size_t new_size) { if v->size >= new_size, then return success (do nothing); otherwise, realloc v->ptr with a size that is X times bigger than new_size; if it fails, return error; otherwise, update v->ptr and v->size and return success }
[01:03:48] <cousteau> you want an object-oriented system
[01:04:08] <cousteau> C is not object oriented per se, but there are libs for that... sort of
[01:04:19] *** Joins: PortableDave (~portabled@220.253.22.64)
[01:06:16] *** Quits: scoobydoo (~scooby@user/scoobydoo) (Read error: Connection timed out)
[01:06:28] *** Quits: Burgundy (~yomon@79.115.213.171) (Remote host closed the connection)
[01:06:50] *** Joins: scoobydoo (~scooby@user/scoobydoo)
[01:07:53] <Franciman> cousteau: i just want templates :P
[01:07:59] <Franciman> i don't need objects
[01:08:07] <Franciman> btw thanks
[01:08:11] <Franciman> i like your approach
[01:09:02] *** Quits: mahmutov (~mahmutov@37.155.25.5) (Ping timeout: 256 seconds)
[01:10:13] *** Joins: monkey_ (~user@190.104.116.153)
[01:12:12] *** Quits: strajder (~strajder@user/strajder) (Quit: off for tonight)
[01:13:53] *** Joins: penguino (~mrpenguin@user/mrpenguin)
[01:17:06] *** Quits: dutch (~DutchIngr@user/dutch) (Quit: WeeChat 3.3)
[01:18:57] *** Quits: immibis (~hexchat@62.156.144.218) (Remote host closed the connection)
[01:21:36] *** Quits: Torr (~Torr@user/torr) (Quit: leaving)
[01:22:51] *** Joins: immibis (~hexchat@62.156.144.218)
[01:24:11] *** Joins: sdfgsdfg (~sdfgsdfg@user/sdfgsdfg)
[01:25:27] *** Quits: begriffs (~begriffs@user/begriffs) (Quit: Leaving)
[01:29:16] *** Joins: jojo_ (uid532473@id-532473.helmsley.irccloud.com)
[01:32:05] *** Joins: steve__ (~steve@ool-182c2b80.dyn.optonline.net)
[01:34:03] *** Quits: jojo_ (uid532473@id-532473.helmsley.irccloud.com) ()
[01:34:15] *** Joins: stonkey (~stonkey@user/stonkey)
[01:34:50] *** Quits: sysctl (~sysctl@88.215.77.255) (Quit: leaving)
[01:38:44] *** Quits: sloanr` (~user@70-59-70-189.mpls.qwest.net) (Remote host closed the connection)
[01:38:57] *** Joins: sloanr` (~user@70-59-70-189.mpls.qwest.net)
[01:42:23] *** Joins: cris9484885 (~cris94848@bl6-143-101.dsl.telepac.pt)
[01:42:42] *** Joins: rgrinberg (~textual@2806:101e:1:27a5:b170:6e98:8314:62d3)
[01:43:21] *** Joins: Torr (~Torr@user/torr)
[01:44:04] *** Quits: cris9484885 (~cris94848@bl6-143-101.dsl.telepac.pt) (Remote host closed the connection)
[01:46:12] *** Joins: kristian84 (~asdf@ti0037a400-4119.bb.online.no)
[01:46:49] *** Quits: ferdna (~ferdna@user/ferdna) (Quit: Leaving)
[01:49:11] *** Quits: Akuli (~Akuli@213.216.211.142) (Quit: Akuli)
[01:49:14] *** Joins: kitsunenokenja (~kitsunech@68.91.220.96)
[01:51:51] <kristian84> imagine having a struct which is sometimes referred to with and without const. and this struct has a unsigned int pointer in it. can i somehow make that pointer const when the struct is referred to as const and not when the struct is not referred to as const? ..
[01:53:53] <kristian84> currently i've left the unsigned int pointer as not const in the struct so it will work in both cases, but if possible i'd like to have it const when the struct is const.. as it is now the data pointed to by that pointer can be changed even if the struct is passed as a const
[01:54:56] *** Joins: jojo_ (uid532476@id-532476.helmsley.irccloud.com)
[01:55:37] *** Quits: zsoltiv_ (~zsoltiv@fibhost-67-12-35.fibernet.hu) (Ping timeout: 240 seconds)
[01:56:38] *** Quits: kitsunenokenja (~kitsunech@68.91.220.96) (Ping timeout: 256 seconds)
[01:58:13] *** Joins: zsoltiv_ (~zsoltiv@fibhost-67-12-35.fibernet.hu)
[01:58:41] <pert> One thing that makes your problem description a little ambiguous is that pointers can be const in two different ways, and I don't think you're distinguishing those clearly enough: the pointed-to data can be const, or the pointer itself can be const, or both (const int *const ptr)
[01:59:35] <pert> maybe others feel differently, but if you have a const struct with a pointer inside, that pointer should automagically already be const (in the sense of the pointer being const, not the pointed-to object)
[02:00:37] *** Quits: stonkey (~stonkey@user/stonkey) (Ping timeout: 240 seconds)
[02:01:50] <kristian84> both can be const when the struct is referred to as const
[02:03:11] *** Quits: jojo_ (uid532476@id-532476.helmsley.irccloud.com) (Changing host)
[02:03:11] *** Joins: jojo_ (uid532476@user/jojo/x-7248806)
[02:04:55] <pert> no, I can't think of a way to do what you want, with one exception: if your pointer inside of your struct could be replaced with an array or a flexible array member, then the const-ness of that array would be shared with the struct
[02:05:33] <kristian84> just did some simple tests. the value of the pointer is const in the struct, but the content is not const even when the struct is passed as a const
[02:06:17] *** Quits: magla (~gelignite@55d4bf95.access.ecotel.net) (Quit: Stay safe!)
[02:06:33] <kristian84> clearify: the pointer can not be changed to point to something else when the struct is passed as const, but the pointer can be used as an array to change the data it's pointing to
[02:07:25] <kristian84> would be nice if that was turned to const too. just wanted to check here if there's something simple i haven't heard about
[02:07:38] <kristian84> it's not a big deal, but it doesn't feel right
[02:08:14] *** Quits: CoderCharmander (~CoderChar@20014C4C12563000BCCDBFC417CDB7F0.catv.pool.telekom.hu) (Quit: Leaving)
[02:08:20] *** Quits: monkey_ (~user@190.104.116.153) (Remote host closed the connection)
[02:13:33] *** Quits: kenanmarasli (~kenanmara@user/kenanmarasli) (Quit: Leaving)
[02:14:50] *** Joins: monkey_ (~user@190.104.116.153)
[02:16:01] *** Quits: monkey_ (~user@190.104.116.153) (Remote host closed the connection)
[02:21:17] *** Quits: zer0bitz (~zer0bitz@dsl-hkibng32-54f844-160.dhcp.inet.fi) (Read error: Connection reset by peer)
[02:21:29] *** Quits: yano (~yano@ircpuzzles/staff/yano) (Quit: WeeChat, the better IRC client, https://weechat.org/)
[02:23:07] *** Quits: constxd (~brad@142.134.38.68) (Ping timeout: 268 seconds)
[02:23:32] *** Quits: rahl (~rahl@102.114.14.201) (Ping timeout: 240 seconds)
[02:23:41] *** Quits: hxztnxt (~hxztnxt@218.red-83-54-57.dynamicip.rima-tde.net) (Quit: Leaving)
[02:23:44] *** Joins: u0_a3913 (~u0_a391@2600:380:8a18:21c1:316b:ba26:f4c9:12b2)
[02:24:23] *** Quits: sdfgsdfg (~sdfgsdfg@user/sdfgsdfg) (Quit: ZzzZ)
[02:24:45] *** Quits: wootehfoot (~wootehfoo@user/wootehfoot) (Read error: Connection reset by peer)
[02:24:51] *** Joins: yano (~yano@ircpuzzles/staff/yano)
[02:27:16] *** Joins: superstar64 (~superstar@2600:1700:ed80:50a0:d250:99ff:fe2c:53c4)
[02:27:30] *** Joins: inomoz (~inomoz@85.26.165.145)
[02:27:32] *** Quits: u0_a3912 (~u0_a391@2603-6010-a141-6fa3-88f4-4cc9-a7b6-7571.res6.spectrum.com) (Ping timeout: 252 seconds)
[02:31:10] *** Quits: pulse (~pulse@user/pulse) (Quit: Join a gamedev community https://indiedevs.net/)
[02:32:11] *** Quits: Teckla (~Teckla@user/teckla) (Quit: leaving)
[02:32:18] *** Joins: floatcomplex (~floatcomp@wireguard/tunneler/floatcomplex)
[02:32:20] *** Joins: ashandme (~user@201.213.182.193)
[02:33:30] *** Quits: pizdets_ (~pizdets@183.182.111.198) (Ping timeout: 260 seconds)
[02:33:56] *** Joins: pizdets (~pizdets@183.182.111.2)
[02:34:38] *** u0_a3913 is now known as Kit
[02:34:57] *** Joins: kurahaupo (~kurahaupo@pa49-182-131-41.pa.qld.optusnet.com.au)
[02:36:32] *** Quits: winningluser (~wl@2601:8c1:80:70d0::e17b) (Quit: nyaa~)
[02:37:39] *** Joins: System_Error (~SystemErr@user/systemerror)
[02:38:56] *** Quits: sloanr` (~user@70-59-70-189.mpls.qwest.net) (Remote host closed the connection)
[02:39:08] *** Quits: random-nick (~random-ni@87.116.181.93) (Ping timeout: 256 seconds)
[02:39:09] *** Joins: sloanr` (~user@70-59-70-189.mpls.qwest.net)
[02:41:28] *** Joins: pensoLogoExisto (~pensoLogo@25.98.60.94.rev.vodafone.pt)
[02:41:56] *** Quits: pensoLogoExisto (~pensoLogo@25.98.60.94.rev.vodafone.pt) (Remote host closed the connection)
[02:48:21] *** Quits: lightningwright (~lightning@user/lightningwright) (Quit: Leaving)
[02:49:19] *** Quits: LucaTM (~LucaTM@user/lucatm) (Quit: Textual IRC Client: www.textualapp.com)
[02:51:12] *** Joins: sdfgsdfg (~sdfgsdfg@user/sdfgsdfg)
[02:53:06] *** Quits: rgrinberg (~textual@2806:101e:1:27a5:b170:6e98:8314:62d3) (Quit: My MacBook has gone to sleep. ZZZzzz…)
[02:53:57] *** Quits: bolovanos__ (~bolovanos@user/bolovanos) (Ping timeout: 240 seconds)
[02:56:06] *** Quits: TonyStone (~TonyStone@cpe-74-76-51-197.nycap.res.rr.com) (Remote host closed the connection)
[02:56:25] *** Quits: Libero (~Libero@77.49.184.64.dsl.dyn.forthnet.gr) (Read error: Connection reset by peer)
[02:58:37] *** Quits: Enitin (~Enitin@82.102.22.86) (Ping timeout: 240 seconds)
[02:58:52] *** Joins: Enitin (~Enitin@82.102.22.84)
[02:58:56] *** Quits: Klinda (~superleag@user/klinda) (Quit: Konversation terminated!)
[02:58:57] *** Joins: TonyStone (~TonyStone@cpe-74-76-51-197.nycap.res.rr.com)
[02:59:01] *** Quits: Cleverness (~clevernes@pool-108-54-152-186.nycmny.fios.verizon.net) (Quit: Leaving)
[02:59:56] *** Joins: xa0s (~xa0s@mab.sdf.org)
[03:01:50] *** Quits: vdamewood (~vdamewood@fedora/vdamewood) (Quit: My MacBook Pro has gone to sleep. ZZZzzz…)
[03:03:24] *** Quits: zwr (~zwr@2804:d45:b966:fb00:2c53:f3e6:ebd:1d0e) (Quit: Lost terminal)
[03:03:55] *** Joins: zwr (~zwr@2804:d45:b966:fb00:2c53:f3e6:ebd:1d0e)
[03:04:52] *** Joins: newchair (~newchair@d-204-195-168-15.paw.cpe.atlanticbb.net)
[03:11:22] *** Quits: nostar (~nostar@2601:406:4100:34d:8f4:5ea7:30b2:b7e6) (Quit: Leaving)
[03:12:17] *** Quits: PortableDave (~portabled@220.253.22.64) (Ping timeout: 240 seconds)
[03:15:57] *** Quits: aradesh (~aradesh@user/aradesh) (Quit: WeeChat 1.9.1)
[03:20:39] *** Quits: Hexmind (~Hexmind@modemcable049.25-131-66.mc.videotron.ca) (Quit: Leaving)
[03:20:44] *** Joins: rahl (~rahl@102.114.76.77)
[03:24:10] *** Quits: newchair (~newchair@d-204-195-168-15.paw.cpe.atlanticbb.net) (Quit: zzz)
[03:30:13] *** Quits: tk (~tk@ircpuzzles/staff/tk) (Quit: Well, this is unexpected.)
[03:30:39] *** Joins: tk (~tk@ircpuzzles/staff/tk)
[03:31:02] *** Quits: dogbert2 (~Bill@ip68-105-189-91.lv.lv.cox.net) (Remote host closed the connection)
[03:31:17] *** Joins: dogbert2 (~Bill@ip68-105-189-91.lv.lv.cox.net)
[03:32:28] *** Quits: blindguard (~blindguar@2a02:908:1864:c200::12) (Quit: Konversation terminated!)
[03:34:14] *** Joins: constxd (~brad@142.134.38.68)
[03:35:09] *** Joins: kitsunenokenja (~kitsunech@68.91.220.96)
[03:35:20] *** Quits: Thymo (~Thymo@NASSP/developer/Thymo) (Read error: Connection reset by peer)
[03:36:45] *** Joins: Thymo (~Thymo@NASSP/developer/Thymo)
[03:37:11] *** Joins: Hexmind (~Hexmind@modemcable049.25-131-66.mc.videotron.ca)
[03:40:03] *** Quits: plastico (~plastico@neomutt/plastico) (Quit: WeeChat 3.3)
[03:40:55] *** Quits: superstar64 (~superstar@2600:1700:ed80:50a0:d250:99ff:fe2c:53c4) (Quit: Leaving)
[03:41:57] *** Quits: Wulf (~Wulf@user/wulf) (Ping timeout: 240 seconds)
[03:42:40] *** Quits: mrig (~mrig@user/mrig) (Quit: WeeChat 3.0)
[03:43:04] *** Quits: soul-d (~uknown@user/soul-d) (Read error: Connection reset by peer)
[03:43:05] *** Quits: Djoobstil (~djoobstil@144.91.111.212) (Quit: Djoobstil)
[03:43:19] *** Joins: Djoobstil (~djoobstil@djoobstil.online)
[03:44:04] *** Joins: Wulf (~Wulf@user/wulf)
[03:45:07] *** Quits: sloanr` (~user@70-59-70-189.mpls.qwest.net) (Remote host closed the connection)
[03:45:20] *** Joins: sloanr` (~user@70-59-70-189.mpls.qwest.net)
[03:47:54] *** Joins: PortableDave (~portabled@220.253.22.64)
[03:52:17] *** Joins: Teckla (~Teckla@user/teckla)
[03:54:21] *** Techcable_ is now known as Techcable
[03:56:02] *** Quits: bebyx (~Thunderbi@user/bebyx) (Ping timeout: 240 seconds)
[03:59:53] *** Joins: armin (~armin@unix.porn)
[04:00:57] *** Quits: PortableDave (~portabled@220.253.22.64) (Ping timeout: 240 seconds)
[04:01:52] *** Joins: nostar (~nostar@2601:406:4100:34d:8f4:5ea7:30b2:b7e6)
[04:02:45] *** Joins: PortableDave (~portabled@220.253.22.64)
[04:05:45] <caze> Make the member const int *p
[04:05:57] *** Quits: penguino (~mrpenguin@user/mrpenguin) (Quit: penguino)
[04:06:07] *** Quits: lrgyrfvtdlvbt^ (~lrgyrfvtd@64.253.22.77) (Remote host closed the connection)
[04:08:52] *** Joins: rgrinberg (~textual@187.223.26.102)
[04:10:34] *** Joins: arinov (~arinov@213.194.126.155)
[04:17:10] *** Quits: alch (~alch@151.36.39.111) (Read error: Connection reset by peer)
[04:21:09] *** Joins: alch (~alch@151.38.65.221)
[04:21:55] *** Quits: sdfgsdfg (~sdfgsdfg@user/sdfgsdfg) (Quit: ZzzZ)
[04:27:02] *** Quits: Kit (~u0_a391@2600:380:8a18:21c1:316b:ba26:f4c9:12b2) (Ping timeout: 240 seconds)
[04:29:06] *** Quits: pert (~pert@fsf/member/pert) (Quit: pert)
[04:31:06] *** Joins: Reffter (~Reffter@2001:818:dea5:2b00:2432:d2d4:ebc0:dafc)
[04:32:00] *** Joins: Kit (~u0_a391@2600:380:8a18:21c1:316b:ba26:f4c9:12b2)
[04:34:10] *** Joins: duuude (~user@user/duuude)
[04:35:32] *** Quits: Feuermagier (~Feuermagi@user/feuermagier) (Remote host closed the connection)
[04:35:47] *** Joins: Everything (~Everythin@128-124-10-123.mobile.vf-ua.net)
[04:37:32] *** Quits: constxd (~brad@142.134.38.68) (Ping timeout: 240 seconds)
[04:39:23] *** Quits: Reffter (~Reffter@2001:818:dea5:2b00:2432:d2d4:ebc0:dafc) (Remote host closed the connection)
[04:39:30] *** Joins: smallville7123 (~smallvill@cpe-172-193-72-46.qld.foxtel.net.au)
[04:42:15] *** Joins: mh3f (~mdhowle@cpe-98-25-217-234.sc.res.rr.com)
[04:50:02] *** Quits: mrgz (~mrgz@201-42-0-191.dsl.telesp.net.br) (Ping timeout: 256 seconds)
[04:52:27] *** Joins: mrgz (~mrgz@201-42-0-191.dsl.telesp.net.br)
[04:52:58] *** Joins: off^ (~off@64.253.22.77)
[05:01:22] *** Quits: mrgz (~mrgz@201-42-0-191.dsl.telesp.net.br) (Ping timeout: 256 seconds)
[05:03:15] *** Joins: Viewday111 (~Viewday@user/viewday)
[05:05:20] *** Quits: Viewday11 (~Viewday@user/viewday) (Ping timeout: 256 seconds)
[05:05:20] *** Viewday111 is now known as Viewday11
[05:06:50] *** Quits: bsandro (~bsandro@139.138.197.56) (Quit: leaving)
[05:09:52] *** Quits: arinov (~arinov@213.194.126.155) (Ping timeout: 256 seconds)
[05:13:00] *** Quits: Teckla (~Teckla@user/teckla) (Quit: leaving)
[05:13:28] *** Joins: soul-d (~uknown@user/soul-d)
[05:14:04] *** Joins: frost (~frost@user/frost)
[05:14:59] *** Joins: mrgz (~mrgz@201-42-0-191.dsl.telesp.net.br)
[05:17:38] <kristian84> caze: but the member should not be const when the struct is not passed as a const
[05:18:23] *** Joins: phrosty (~phrosty@c-73-225-175-19.hsd1.wa.comcast.net)
[05:20:34] *** Quits: cousteau (~cousteau@user/cousteau) (Read error: Connection reset by peer)
[05:24:39] *** Quits: ashandme (~user@201.213.182.193) (Quit: ERC (IRC client for Emacs 27.2))
[05:25:31] <caze> kristian84: The member won't be const.
[05:28:14] <kristian84> caze: functions need to be able to use *p like this p[123] = 456 when the struct it's in is not passed as const
[05:28:40] <caze> kristian84: https://ideone.com/p2gp2f
[05:29:35] <caze> kristian84: Use a different struct then.
[05:30:34] <caze> kristian84: The problem is that the array is not *inside* the struct.
[05:30:44] <kristian84> yes
[05:31:24] <caze> kristian84: What problem are you thinking that this would be a solution for?
[05:31:32] *** Quits: kitsunenokenja (~kitsunech@68.91.220.96) (Ping timeout: 240 seconds)
[05:32:49] *** Joins: fe23 (~fe23@2409:8a34:468:83d0:7963:39ed:da28:8786)
[05:33:03] *** Joins: Viewday118 (~Viewday@user/viewday)
[05:33:56] <kristian84> caze: https://ideone.com/1qcFMu here's an example
[05:34:00] <smallville7123> why do i get this?
[05:34:01] <smallville7123> ,cc char c = (char)0x80; printf("%x, u8 %x, u32 %x", (unsigned int)(c), (uint8_t) c, (uint32_t) c);
[05:34:04] <candide> smallville7123: ffffff80, u8 80, u32 ffffff80
[05:34:37] *** Quits: carlavilla (~carlavill@2a0c:5a84:3407:5100:221:6bff:fe3b:cee4) (Ping timeout: 240 seconds)
[05:34:39] *** Quits: Viewday11 (~Viewday@user/viewday) (Read error: Connection reset by peer)
[05:34:39] *** Viewday118 is now known as Viewday11
[05:35:11] <smallville7123> ,cc char c = (char)0x80; printf("u8 %x, u16 %x, u32 %x, u64 %x", (uint8_t) c, (uint16_t) c, (uint32_t) c, (uint64_t) c);
[05:35:13] <candide> smallville7123: [warning: format '%x' expects argument of type 'unsigned i​nt', but argument 5 has type 'long unsigned i​nt' [-Wformat=]] u8 80, u16 ff80, u32 ffffff80, u64 ffffff80
[05:35:43] <smallville7123> shouldnt u32 and u64 print 80 ?
[05:35:55] *** Joins: carlavilla (~carlavill@2a0c:5a84:3200:2200:221:6bff:fe3b:cee4)
[05:36:05] <smallville7123> shouldnt u16, u32 and u64 print 80 ?    *
[05:36:17] *** Quits: Rounin (~david@84.212.130.215) (Ping timeout: 240 seconds)
[05:36:37] <caze> kristian84: You can hide the struct behind an API, and enforce your rules using accessor functions.
[05:38:17] *** Quits: Kev_ (~Kev@2a01cb0400149f00541631b2d06f6e60.ipv6.abo.wanadoo.fr) (Ping timeout: 240 seconds)
[05:38:19] <caze> smallville7123: %x is not the correct format specifier.
[05:40:22] *** Joins: smallvil_ (~smallvill@cpe-172-193-72-46.qld.foxtel.net.au)
[05:41:25] <smallvil_> ,cc char c = (char)0x80; printf("u8 %x, u16 %x, u32 %x", (uint8_t) c, (uint16_t) c, (uint32_t) c);
[05:41:28] *** Joins: JeffH (~JeffH@174-16-131-174.hlrn.qwest.net)
[05:41:28] <candide> smallvil_: u8 80, u16 ff80, u32 ffffff80
[05:41:30] <smallvil_> shouldnt u16 and u32 print 80 ?    *
[05:41:33] *** Quits: scoobydoo (~scooby@user/scoobydoo) (Read error: Connection timed out)
[05:41:36] <smallvil_> candide: 
[05:41:42] <smallvil_> caze: 
[05:42:03] <caze> smallvil_: No.
[05:42:18] <smallvil_> why?
[05:42:22] *** Joins: scoobydoo (~scooby@user/scoobydoo)
[05:42:41] <caze> > smallville7123: %x is not the correct format specifier.
[05:42:44] *** Quits: smallville7123 (~smallvill@cpe-172-193-72-46.qld.foxtel.net.au) (Ping timeout: 256 seconds)
[05:42:48] <smallvil_> what is?
[05:42:59] <smallvil_> what is the correct format specifier?
[05:43:14] <smallvil_> is %ux a thing?
[05:44:08] <smallvil_> aparently not :/
[05:44:19] <caze> PRI and friends
[05:44:29] <smallvil_> oof :)
[05:44:49] *** Joins: Feuermagier (~Feuermagi@user/feuermagier)
[05:47:46] *** Joins: shivesh (~shivesh@user/shivesh)
[05:49:10] <caze> Though you still have the problem of sign extension.
[05:50:06] *** Quits: steve__ (~steve@ool-182c2b80.dyn.optonline.net) (Ping timeout: 256 seconds)
[05:50:33] <caze> ,cc printf("%d", CHAR_MAX);
[05:50:35] <candide> caze: 127
[05:50:41] <caze> ,cc printf("%x", CHAR_MAX);
[05:50:43] <candide> caze: 7f
[05:50:51] <caze> And that is a problem as well.
[05:51:33] <caze> Actually, that was the only problem.
[05:51:35] *** Quits: phrosty (~phrosty@c-73-225-175-19.hsd1.wa.comcast.net) (Ping timeout: 252 seconds)
[05:51:43] *** Joins: ferdna (~ferdna@user/ferdna)
[05:52:34] *** Quits: JeffH (~JeffH@174-16-131-174.hlrn.qwest.net) (Remote host closed the connection)
[05:53:45] *** Joins: JeffH (~JeffH@174-16-131-174.hlrn.qwest.net)
[05:54:06] <caze> smallvil_: https://ideone.com/yleNNH
[05:54:13] *** Quits: off^ (~off@64.253.22.77) (Remote host closed the connection)
[05:55:37] *** Quits: earnestly (~earnest@user/earnestly) (Ping timeout: 240 seconds)
[05:56:18] *** Quits: sloanr` (~user@70-59-70-189.mpls.qwest.net) (Remote host closed the connection)
[05:56:31] *** Joins: sloanr` (~user@70-59-70-189.mpls.qwest.net)
[05:59:49] *** Quits: rgrinberg (~textual@187.223.26.102) (Quit: My MacBook has gone to sleep. ZZZzzz…)
[06:00:26] *** Joins: LordJohn (~lordjohn@l37-192-203-250.novotelecom.ru)
[06:01:18] *** Joins: wroathe (~wroathe@c-68-54-25-135.hsd1.mn.comcast.net)
[06:01:18] *** Quits: wroathe (~wroathe@c-68-54-25-135.hsd1.mn.comcast.net) (Changing host)
[06:01:18] *** Joins: wroathe (~wroathe@user/wroathe)
[06:01:25] *** Joins: dsrt^ (~dsrt@64.253.22.77)
[06:02:22] *** Joins: Teckla (~Teckla@user/teckla)
[06:06:29] *** Quits: sloanr` (~user@70-59-70-189.mpls.qwest.net) (Remote host closed the connection)
[06:06:42] *** Joins: sloanr` (~user@70-59-70-189.mpls.qwest.net)
[06:07:43] *** Quits: pretty_dumm_guy (trottel@gateway/vpn/protonvpn/prettydummguy/x-88029655) (Quit: WeeChat 3.4)
[06:07:44] *** Joins: u0_a391 (~u0_a391@2603-6010-a141-6fa3-88f4-4cc9-a7b6-7571.res6.spectrum.com)
[06:10:58] *** Quits: Kit (~u0_a391@2600:380:8a18:21c1:316b:ba26:f4c9:12b2) (Ping timeout: 260 seconds)
[06:11:53] *** Quits: duuude (~user@user/duuude) (Ping timeout: 268 seconds)
[06:12:24] *** Joins: squidrin (~squidrin@75.165.136.107)
[06:12:47] <squidrin> hello, i have a question regarding C:
[06:12:52] <squidrin> oops 
[06:13:20] <squidrin> why is it required to use semicolons when ending a line of code?
[06:13:33] <caze> Because that's how the tokenizer works.
[06:13:48] <squidrin> and why is it required to use the '\' character when splitting logical lines
[06:14:30] <caze> It's not always required.
[06:14:53] *** Joins: sloanr`` (~user@70-59-70-189.mpls.qwest.net)
[06:15:27] <squidrin> sorry, the first question can be ignored. i figured that out with simple logical reasoning.
[06:16:17] *** Quits: sloanr` (~user@70-59-70-189.mpls.qwest.net) (Ping timeout: 240 seconds)
[06:16:21] <squidrin> im confused why it has to be used instead of simply having lexical analysis recognize a return character in the token sequence
[06:16:27] *** Joins: Jong (~Jong@2620:10d:c090:400::5:a269)
[06:16:47] <caze> Why what has to be used?
[06:17:04] <squidrin> the '\' character when splitting logical lines
[06:17:07] *** Joins: duuude (~user@user/duuude)
[06:17:47] <caze> > It's not always required.
[06:17:59] <caze> squidrin: https://ideone.com/r2C6NE
[06:18:39] <squidrin> so then why is it a feature in the language?
[06:18:57] <caze> Because sometimes it is necessary.
[06:19:03] <squidrin> example?
[06:20:07] <caze> https://ideone.com/wMA6Jq
[06:20:30] *** u0_a391 is now known as Kit
[06:21:02] <pnbeast> squidrin, in fact, back in the 70s some keyboard companies noticed their backslash keys weren't be used as fast as other keys.  Their marketing people got involved, they spoke to the computer programming industry marketing people, some money changed hands... all of a sudden languages were popping up with escapes left and right!
[06:21:03] *** Quits: Feuermagier (~Feuermagi@user/feuermagier) (Remote host closed the connection)
[06:21:43] <squidrin> sorry, id like to restate my original question: 'why cant lexical analysis simply ignore return characters and replace them with spaced whitespace instead of using "\" characters to define a logical line break?'
[06:22:07] <pnbeast> It's basically Big Keyboard forcing these crazy characters on your code.  Don't let them win.  Write shorter lines.
[06:22:43] *** Joins: Feuermagier (~Feuermagi@user/feuermagier)
[06:23:23] <squidrin> caze: can you explain the difference between the two codes, please? thanks!
[06:23:25] *** Joins: phrosty (~phrosty@c-73-225-175-19.hsd1.wa.comcast.net)
[06:23:38] <caze> squidrin: One doesn't compile, for instance.
[06:24:04] <squidrin> yes, i know, but why doesnt the second one compile?
[06:25:01] <caze> kristian84: https://ideone.com/Lsmqld
[06:25:31] *** Joins: smallville7123 (~smallvill@cpe-172-193-72-46.qld.foxtel.net.au)
[06:25:44] <squidrin> pnbeast: that's a bit confusing to me
[06:26:39] *** Joins: constxd (~brad@142.134.38.68)
[06:27:03] <squidrin> caze: why doesnt the second compile?
[06:27:37] *** Quits: smallvil_ (~smallvill@cpe-172-193-72-46.qld.foxtel.net.au) (Ping timeout: 240 seconds)
[06:27:38] *** Quits: shivesh (~shivesh@user/shivesh) (Quit: leaving)
[06:27:49] *** Joins: mikoto-chan (~mikoto-ch@esm-84-240-99-143.netplaza.fi)
[06:31:32] <squidrin> can anyone explain why https://ideone.com/wMA6Jq does not compile but https://ideone.com/r2C6NE does?
[06:31:36] <pnbeast> squidrin, then maybe I'll just try the truth, but I'm not really hoping it'll be better:  sometimes you want to a type a "single line" that goes longer than your environment allows.  To support that, C allows you to add a character to end of a real line so that your compiler will know that the next line is part of the first real line.
[06:31:54] <wroathe> squidrin: There's no reason it couldn't. I'm sure there's historical reasons why it was done that way for C, but Ruby for example allows you to create multiline strings with newline characters
[06:32:35] <caze> squidrin: Are you asking for the parsing rules of C, or are you asking for the reasoning for why the parsing rules are the way they are?
[06:32:45] <squidrin> wroathe: are you referring to this message: "22:01 squidrin  can anyone explain why https://ideone.com/wMA6Jq does not compile but https://ideone.com/r2C6NE does?"
[06:33:19] <squidrin> caze: i guess both? im not too sure
[06:33:22] *** Quits: mikoto-chan (~mikoto-ch@esm-84-240-99-143.netplaza.fi) (Ping timeout: 260 seconds)
[06:33:22] *** Quits: zwr (~zwr@2804:d45:b966:fb00:2c53:f3e6:ebd:1d0e) (Ping timeout: 260 seconds)
[06:33:26] <wroathe> I don't even know anymore
[06:33:29] <wroathe> What is life
[06:33:38] <caze> squidrin: The compiler tells you where the parsing breaks.
[06:33:44] *** Quits: banc (banc@gateway/vpn/airvpn/banc) (Ping timeout: 256 seconds)
[06:33:56] <squidrin> caze: no, sorry. im asking for why the parsing is how it is
[06:33:58] *** Joins: mikoto-chan (~mikoto-ch@esm-84-240-99-143.netplaza.fi)
[06:34:09] <squidrin> or, more specifically, why it has to be that way
[06:34:16] <squidrin> wroathe: lol
[06:34:43] <caze> squidrin: It doesn't have to be that way, they just decided to make it that way. Why, I'm not entirely sure.
[06:35:02] <wroathe> squidrin: Which is what I was just saying :P
[06:35:26] <squidrin> caze: okay, well, thanks a ton for the help nevertheless! It's much appreciated!
[06:36:14] <caze> squidrin: Usually the reason for why things are the way they are in C is because it would be easier for compiler writers to implement C.
[06:36:51] <caze> squidrin: Which is why C gained in popularity so quickly in the 70s and 80s.
[06:37:26] *** Quits: squidrin (~squidrin@75.165.136.107) (Quit: Leaving)
[06:37:57] *** Quits: JeffH (~JeffH@174-16-131-174.hlrn.qwest.net) (Remote host closed the connection)
[06:38:37] *** Quits: sloanr`` (~user@70-59-70-189.mpls.qwest.net) (Ping timeout: 240 seconds)
[06:39:31] *** Joins: rgrinberg (~textual@2806:101e:1:27a5:b170:6e98:8314:62d3)
[06:39:41] <wroathe> Questions like that raise lots of questions about the stage the questioner is at. If you've learned enough about lexical analysis to ask why it would be necessary to escape newline characters in a string, then you've already got the intellectual framework for researching the answer on your own
[06:39:41] *** Joins: sloanr`` (~user@70-59-70-189.mpls.qwest.net)
[06:39:52] *** Joins: zwr (~zwr@2804:d45:b966:fb00:ab00:3631:96fa:4872)
[06:39:55] <wroathe> Or why you'd want to, anyway
[06:40:25] <wroathe> Before learning about lexical analysis, most people writing a language just take things like that as a fact of life
[06:41:18] <wroathe> writing code in a language*
[06:42:38] *** Joins: donutfarian (~donutfari@2601:140:9180:5e40:88df:7fd3:8fca:5534)
[06:48:26] <pragma-> Looking behind the compiler and lifting the mystery can be a blessing and a curse. Before what you took for granted, now you're critical of and you start to question why they chose THIS syntax or THOSE semantics.
[06:49:23] *** Quits: Zambyte (~Zambyte@cpe-104-228-60-14.nycap.res.rr.com) (Quit: leaving)
[06:49:31] <wroathe> pragma-: Yup, and once you get to that state it seems like there's not really a forum on the internet you can use to reasonably gain any sort of clarity. You just need the right people or the right books. 
[06:49:33] *** Joins: dead1 (~dead@user/dead1)
[06:50:03] <wroathe> Asking compiler questions in a general programming forum is going to yield crickets or wrong information 99% of the time
[06:50:07] <pragma-> I've found quite a few interesting PDFs and articles in r/programminglanguages
[06:50:22] <wroathe> Yeah, that's the only one that came to mind
[06:50:31] <wroathe> But that's the point of that subreddit
[06:51:46] *** Joins: kdc (~kdc@196.211.197.159)
[06:53:24] *** Quits: mrgz (~mrgz@201-42-0-191.dsl.telesp.net.br) (Quit: leaving)
[06:54:20] *** Joins: banc (banc@gateway/vpn/airvpn/banc)
[06:54:47] *** Quits: nostar (~nostar@2601:406:4100:34d:8f4:5ea7:30b2:b7e6) (Quit: Leaving)
[06:57:26] *** Joins: kitsunenokenja (~kitsunech@68.91.220.96)
[07:00:26] *** Joins: smallvil_ (~smallvill@cpe-172-193-72-46.qld.foxtel.net.au)
[07:02:37] *** Quits: smallville7123 (~smallvill@cpe-172-193-72-46.qld.foxtel.net.au) (Ping timeout: 240 seconds)
[07:04:16] *** Quits: skapata (~Skapata@user/skapata) (Remote host closed the connection)
[07:05:55] *** Joins: foul_owl (~kerry@94.140.8.107)
[07:07:02] *** Joins: kashyaprushi (~kashyapru@2405:201:1010:b033:bad0:8910:44c9:da61)
[07:08:48] *** Quits: Juliu (~Juliu@2a02:810b:c640:3ec0:9180:b80f:58c7:8de8) (Quit: Quit)
[07:09:27] *** Quits: Nahra (~user@static.161.95.99.88.clients.your-server.de) (Remote host closed the connection)
[07:12:51] *** Quits: kashyaprushi (~kashyapru@2405:201:1010:b033:bad0:8910:44c9:da61) (Quit: Leaving)
[07:13:28] *** Joins: kashyaprushi (~kashyapru@2405:201:1010:b033:bad0:8910:44c9:da61)
[07:14:32] *** Quits: Charadon (~Charadon@155.138.164.183) (Ping timeout: 256 seconds)
[07:18:19] *** Quits: Feuermagier (~Feuermagi@user/feuermagier) (Remote host closed the connection)
[07:24:02] *** Quits: pgib (~textual@173.38.117.69) (Ping timeout: 268 seconds)
[07:29:56] *** Quits: Everything (~Everythin@128-124-10-123.mobile.vf-ua.net) (Quit: leaving)
[07:35:19] *** Joins: smallville7123 (~smallvill@cpe-172-193-72-46.qld.foxtel.net.au)
[07:36:02] *** Quits: supakeen (~user@python/site-packages/supakeen) (Quit: WeeChat 3.4)
[07:36:21] *** Quits: moog (~moog@107.126.53.64) (Remote host closed the connection)
[07:36:32] *** Joins: supakeen (~user@python/site-packages/supakeen)
[07:37:32] <floatcomplex> speaking of compilers and crickets: is qbsp accidentally turing complete too
[07:37:37] *** Quits: smallvil_ (~smallvill@cpe-172-193-72-46.qld.foxtel.net.au) (Ping timeout: 240 seconds)
[07:38:01] *** Joins: eelstrebor (~eelstrebo@198-178-29-136.scb.ne.static.allophone.net)
[07:40:07] *** Quits: foul_owl (~kerry@94.140.8.107) (Quit: WeeChat 2.3)
[07:40:26] *** Joins: foul_owl (~kerry@94.140.8.107)
[07:41:23] *** Joins: loganlee (~Thunderbi@user/loganlee)
[07:42:16] *** Quits: foul_owl (~kerry@94.140.8.107) (Client Quit)
[07:43:26] *** Quits: johnjay__ (~pi@154.6.152.74) (Ping timeout: 256 seconds)
[07:43:26] *** Joins: joomla5 (uid527699@id-527699.uxbridge.irccloud.com)
[07:43:38] *** Joins: foul_owl (~kerry@94.140.8.107)
[07:43:52] *** joomla5 is now known as spidermonkey54
[07:44:59] *** Joins: johnjay__ (~pi@154.6.152.74)
[07:46:06] *** Quits: Hexmind (~Hexmind@modemcable049.25-131-66.mc.videotron.ca) (Quit: Leaving)
[07:46:11] *** Quits: caveman (~caveman@gateway/tor-sasl/caveman) (Quit: caveman)
[07:47:00] *** Joins: Akiva (~Akiva@user/Akiva)
[07:48:24] *** Quits: foul_owl (~kerry@94.140.8.107) (Client Quit)
[07:48:42] *** Joins: foul_owl (~kerry@94.140.8.107)
[07:49:57] *** Quits: johnjay__ (~pi@154.6.152.74) (Ping timeout: 240 seconds)
[07:50:40] *** Joins: johnjay__ (~pi@154.6.152.74)
[07:51:17] *** Quits: nyah (~nyah@94.6.71.219) (Ping timeout: 240 seconds)
[07:54:06] *** Joins: b1101 (~b1101@pool-100-33-96-155.nycmny.fios.verizon.net)
[07:54:35] *** Quits: donutfarian (~donutfari@2601:140:9180:5e40:88df:7fd3:8fca:5534) (Quit: Leaving)
[07:55:48] *** Quits: Kit (~u0_a391@2603-6010-a141-6fa3-88f4-4cc9-a7b6-7571.res6.spectrum.com) (Ping timeout: 240 seconds)
[07:59:23] *** Joins: Kit (~u0_a391@cpe-76-190-178-139.neo.res.rr.com)
[07:59:52] *** Quits: foul_owl (~kerry@94.140.8.107) (Quit: WeeChat 2.3)
[08:00:19] *** Joins: foul_owl (~kerry@94.140.8.107)
[08:03:32] *** Joins: dave0 (~davezero@069.d.003.ncl.iprimus.net.au)
[08:08:32] *** Quits: kitsunenokenja (~kitsunech@68.91.220.96) (Ping timeout: 240 seconds)
[08:08:46] *** Joins: codethulu (~codethulu@cpe-173-174-108-148.austin.res.rr.com)
[08:09:17] *** Quits: smallville7123 (~smallvill@cpe-172-193-72-46.qld.foxtel.net.au) (Ping timeout: 240 seconds)
[08:10:29] *** Joins: smallville7123 (~smallvill@cpe-172-193-72-46.qld.foxtel.net.au)
[08:11:30] *** Quits: CaryHartline (~CaryHartl@2603-8080-6a0e-8d88-70b2-1b29-14df-adcf.res6.spectrum.com) (Quit: My iMac has gone to sleep. ZZZzzz…)
[08:16:28] *** Quits: chasmo77 (~chas77@c-71-193-246-4.hsd1.or.comcast.net) (Quit: It's just that easy)
[08:16:28] *** Quits: alch (~alch@151.38.65.221) (Read error: Connection reset by peer)
[08:21:31] *** Joins: alch (~alch@151.36.41.223)
[08:28:03] *** Joins: CaryHartline (~CaryHartl@2603-8080-6a0e-8d88-70b2-1b29-14df-adcf.res6.spectrum.com)
[08:29:07] *** Quits: CaryHartline (~CaryHartl@2603-8080-6a0e-8d88-70b2-1b29-14df-adcf.res6.spectrum.com) (Client Quit)
[08:31:33] *** Quits: sloanr`` (~user@70-59-70-189.mpls.qwest.net) (Remote host closed the connection)
[08:32:18] *** Joins: sloanr (~user@70-59-70-189.mpls.qwest.net)
[08:33:18] *** Quits: m4v (~znc@ubuntu/member/m4v) (Ping timeout: 256 seconds)
[08:34:13] *** Joins: m4v (~znc@ubuntu/member/m4v)
[08:34:53] *** Quits: eelstrebor (~eelstrebo@198-178-29-136.scb.ne.static.allophone.net) (Quit: Ex-Chat)
[08:35:39] *** Joins: gco (~gco@2601:647:4c80:2424:514d:4f7d:2eff:e8d2)
[08:36:56] *** Quits: anton (anton@user/anton) (Quit: anton)
[08:41:29] *** Quits: night_wulfe (~wulfe@cpe-174-103-156-213.cinci.res.rr.com) (Quit: And I'm out.)
[08:42:22] *** Quits: wroathe (~wroathe@user/wroathe) (Ping timeout: 256 seconds)
[08:48:35] *** Joins: AsenMx (~AsenMx@user/asenmx)
[08:48:35] *** Quits: PortableDave (~portabled@220.253.22.64) (Quit: WeeChat 3.3)
[08:49:26] *** Quits: AsenMx (~AsenMx@user/asenmx) (Remote host closed the connection)
[08:49:46] *** Joins: AsenMx (~AsenMx@user/asenmx)
[08:59:18] *** Joins: wroathe (~wroathe@c-68-54-25-135.hsd1.mn.comcast.net)
[08:59:18] *** Quits: wroathe (~wroathe@c-68-54-25-135.hsd1.mn.comcast.net) (Changing host)
[08:59:18] *** Joins: wroathe (~wroathe@user/wroathe)
[08:59:36] *** Quits: codethulu (~codethulu@cpe-173-174-108-148.austin.res.rr.com) (Quit: The computer fell asleep)
[08:59:57] *** Joins: CaryHartline (~CaryHartl@2603-8080-6a0e-8d88-70b2-1b29-14df-adcf.res6.spectrum.com)
[09:03:23] *** Joins: PortableDave (~portabled@220.253.22.64)
[09:04:33] *** Quits: wroathe (~wroathe@user/wroathe) (Ping timeout: 268 seconds)
[09:09:42] *** Quits: bindu (~bindu@user/bindu) (Ping timeout: 276 seconds)
[09:11:57] *** Quits: sloanr (~user@70-59-70-189.mpls.qwest.net) (Ping timeout: 240 seconds)
[09:14:21] *** Joins: slidercrank (~slidercra@user/slidercrank)
[09:14:42] *** Joins: bindu (~bindu@user/bindu)
[09:14:54] *** Joins: begriffs (~begriffs@user/begriffs)
[09:21:21] *** Quits: listen_ers (~listen_er@c-98-240-233-64.hsd1.mn.comcast.net) (Ping timeout: 256 seconds)
[09:24:48] *** Quits: seninha (~seninha@user/seninha) (Quit: Leaving)
[09:26:05] *** Joins: sloanr (~user@70-59-70-189.mpls.qwest.net)
[09:30:02] *** Joins: night_wulfe (~wulfe@cpe-174-103-156-213.cinci.res.rr.com)
[09:31:18] *** Joins: blyat-73 (~hjgkjhgkj@46.235.96.249)
[09:38:37] *** Quits: PortableDave (~portabled@220.253.22.64) (Ping timeout: 240 seconds)
[09:40:37] *** Quits: constxd (~brad@142.134.38.68) (Ping timeout: 240 seconds)
[09:43:26] *** Joins: smallvil_ (~smallvill@cpe-172-193-72-46.qld.foxtel.net.au)
[09:45:50] *** Quits: smallville7123 (~smallvill@cpe-172-193-72-46.qld.foxtel.net.au) (Ping timeout: 256 seconds)
[09:45:51] *** Quits: soapsudsxx_ (~soapsudsx@209.221.40.139) (Remote host closed the connection)
[09:48:12] *** Joins: nostar (~nostar@2601:406:4100:34d:8f4:5ea7:30b2:b7e6)
[09:48:37] *** Quits: Jong (~Jong@2620:10d:c090:400::5:a269) (Ping timeout: 240 seconds)
[09:50:12] *** Quits: gr33n7007h (~gr33n7007@user/gr33n7007h) (Ping timeout: 268 seconds)
[09:50:22] *** Quits: LordJohn (~lordjohn@l37-192-203-250.novotelecom.ru) (Read error: Connection reset by peer)
[09:51:21] *** Joins: gr33n7007h (~gr33n7007@user/gr33n7007h)
[09:51:58] *** Joins: LordJohn (~lordjohn@l37-192-203-250.novotelecom.ru)
[09:55:11] *** Joins: smallville7123 (~smallvill@cpe-172-193-72-46.qld.foxtel.net.au)
[09:56:14] *** Quits: mikoto-chan (~mikoto-ch@esm-84-240-99-143.netplaza.fi) (Quit: mikoto-chan)
[09:57:59] *** Quits: smallvil_ (~smallvill@cpe-172-193-72-46.qld.foxtel.net.au) (Ping timeout: 252 seconds)
[10:06:58] *** Joins: smallvil_ (~smallvill@cpe-172-193-72-46.qld.foxtel.net.au)
[10:09:55] *** Quits: smallville7123 (~smallvill@cpe-172-193-72-46.qld.foxtel.net.au) (Ping timeout: 268 seconds)
[10:12:43] *** Quits: kashyaprushi (~kashyapru@2405:201:1010:b033:bad0:8910:44c9:da61) (Remote host closed the connection)
[10:13:08] *** Joins: kashyaprushi (~kashyapru@2405:201:1010:b033:b90c:86ca:3fd:ed2a)
[10:14:53] *** Quits: cisco87 (~quassel@static.128.104.12.49.clients.your-server.de) (Remote host closed the connection)
[10:15:49] *** Quits: slidercrank (~slidercra@user/slidercrank) (Ping timeout: 240 seconds)
[10:16:37] *** Quits: Enitin (~Enitin@82.102.22.84) (Ping timeout: 240 seconds)
[10:17:16] *** Joins: Enitin (~Enitin@82.102.22.85)
[10:26:54] *** Quits: pnbeast (~pnbeast@2601:140:4200:e3d0::1) (Quit: WeeChat 2.7.1)
[10:29:13] *** Joins: toastloop (toastloop@user/toastloop)
[10:31:06] *** Joins: smallville7123 (~smallvill@cpe-172-193-72-46.qld.foxtel.net.au)
[10:32:44] *** Quits: ferdna (~ferdna@user/ferdna) (Quit: Leaving)
[10:33:26] *** Quits: smallvil_ (~smallvill@cpe-172-193-72-46.qld.foxtel.net.au) (Ping timeout: 256 seconds)
[10:34:37] *** Joins: wad231 (~wad231@21-53-255-130.kamensktel.ru)
[10:34:45] *** Parts: wad231 (~wad231@21-53-255-130.kamensktel.ru) ()
[10:35:36] *** Quits: loganlee (~Thunderbi@user/loganlee) (Quit: loganlee)
[10:38:00] *** Joins: wad132 (~wad132@21-53-255-130.kamensktel.ru)
[10:38:05] *** Parts: wad132 (~wad132@21-53-255-130.kamensktel.ru) ()
[10:42:11] *** Joins: mikoto-chan (~mikoto-ch@nat1.panoulu.net)
[10:44:12] *** Joins: adw123 (~adw123@21-53-255-130.kamensktel.ru)
[10:44:16] *** Parts: adw123 (~adw123@21-53-255-130.kamensktel.ru) ()
[10:45:17] *** Joins: adw123 (~adw123@21-53-255-130.kamensktel.ru)
[10:45:20] *** Parts: adw123 (~adw123@21-53-255-130.kamensktel.ru) ()
[10:48:43] *** Joins: CatCow (~wtf_over@c-73-96-109-206.hsd1.or.comcast.net)
[10:53:12] *** Quits: spidermonkey54 (uid527699@id-527699.uxbridge.irccloud.com) (Quit: Connection closed for inactivity)
[10:53:37] *** Quits: sloanr (~user@70-59-70-189.mpls.qwest.net) (Ping timeout: 240 seconds)
[10:59:34] *** Joins: tryte (~tryte@2409:8954:324c:89a1:39a0:1394:84d2:7519)
[11:00:08] *** Quits: rgrinberg (~textual@2806:101e:1:27a5:b170:6e98:8314:62d3) (Quit: My MacBook has gone to sleep. ZZZzzz…)
[11:00:20] *** Quits: tryte (~tryte@2409:8954:324c:89a1:39a0:1394:84d2:7519) (Read error: Connection reset by peer)
[11:06:52] *** Quits: kurahaupo (~kurahaupo@pa49-182-131-41.pa.qld.optusnet.com.au) (Ping timeout: 256 seconds)
[11:07:17] *** Quits: Enitin (~Enitin@82.102.22.85) (Ping timeout: 240 seconds)
[11:07:39] *** Joins: Enitin (~Enitin@82.102.22.85)
[11:10:08] *** Joins: smallvil_ (~smallvill@cpe-172-193-72-46.qld.foxtel.net.au)
[11:11:37] *** Quits: Enitin (~Enitin@82.102.22.85) (Ping timeout: 240 seconds)
[11:12:17] *** Quits: smallville7123 (~smallvill@cpe-172-193-72-46.qld.foxtel.net.au) (Ping timeout: 240 seconds)
[11:14:11] *** Quits: dogbert2 (~Bill@ip68-105-189-91.lv.lv.cox.net) (Remote host closed the connection)
[11:14:27] *** Joins: dogbert2 (~Bill@ip68-105-189-91.lv.lv.cox.net)
[11:15:03] *** Quits: heftig (heftig@archlinux/developer/heftig) (Quit: heftig)
[11:15:51] *** Joins: heftig (heftig@archlinux/developer/heftig)
[11:16:16] *** Quits: gr33n7007h (~gr33n7007@user/gr33n7007h) (Read error: Connection reset by peer)
[11:16:33] *** Joins: Libero (~Libero@77.49.184.64.dsl.dyn.forthnet.gr)
[11:18:35] *** Joins: Enitin (~Enitin@82.102.22.84)
[11:20:46] *** Quits: gco (~gco@2601:647:4c80:2424:514d:4f7d:2eff:e8d2) (Quit: ZZZzzz…)
[11:22:19] *** Joins: gr33n7007h (~gr33n7007@user/gr33n7007h)
[11:23:56] *** Parts: emanuele6 (~emanuele6@user/emanuele6) (WeeChat 3.3)
[11:35:02] *** Quits: carlavilla (~carlavill@2a0c:5a84:3200:2200:221:6bff:fe3b:cee4) (Ping timeout: 268 seconds)
[11:36:37] *** Quits: duuude (~user@user/duuude) (Ping timeout: 240 seconds)
[11:38:13] *** Joins: diiirt5 (~diiirt@user/diiirt)
[11:38:50] *** Quits: diiirt (~diiirt@user/diiirt) (Remote host closed the connection)
[11:38:51] *** diiirt5 is now known as diiirt
[11:39:25] *** Joins: mrig (~AdiIRC@user/mrig)
[11:42:39] *** Joins: chenqisu1 (~bhca7d@183.217.201.63)
[11:44:01] *** Quits: Thymo (~Thymo@NASSP/developer/Thymo) (Read error: Connection reset by peer)
[11:45:18] *** Joins: Thymo (~Thymo@NASSP/developer/Thymo)
[11:45:37] *** Joins: tryte (~nelg@183.17.124.167)
[11:45:48] *** Joins: Rounin (~david@84.212.130.215)
[11:46:51] *** Joins: arinov (~arinov@213.194.126.155)
[11:48:53] *** Joins: MajorBiscuit (~MajorBisc@62-52-102.netrun.cytanet.com.cy)
[11:50:01] *** Joins: Klinda (~superleag@user/klinda)
[11:51:38] *** Quits: tryte (~nelg@183.17.124.167) (Quit: leaving)
[11:53:46] *** Quits: Betal (~Betal@user/betal) (Quit: WeeChat 3.3)
[11:56:47] *** Joins: diamondbond (~diamondbo@175.157.107.97)
[11:58:06] *** Quits: chenqisu1 (~bhca7d@183.217.201.63) (Quit: Leaving)
[11:58:23] *** Joins: chenqisu1 (~bhca7d@183.217.201.63)
[11:59:02] *** Joins: chenqisu12 (~bhca7d@183.217.201.63)
[11:59:15] *** Quits: nowz (~nowz@user/nowz) (Ping timeout: 250 seconds)
[12:01:23] *** Joins: rgrinberg (~textual@2806:101e:1:27a5:b170:6e98:8314:62d3)
[12:05:40] *** Joins: _LordJohn (~lordjohn@l37-192-203-250.novotelecom.ru)
[12:08:57] *** Quits: LordJohn (~lordjohn@l37-192-203-250.novotelecom.ru) (Ping timeout: 240 seconds)
[12:13:03] *** Quits: chenqisu1 (~bhca7d@183.217.201.63) (Quit: Leaving)
[12:17:08] *** Quits: alch (~alch@151.36.41.223) (Read error: Connection reset by peer)
[12:19:24] *** Quits: boB_K7IQ (~boB_K7IQ@c-24-19-3-104.hsd1.wa.comcast.net) (Ping timeout: 256 seconds)
[12:20:01] *** Joins: kenanmarasli (~kenanmara@user/kenanmarasli)
[12:20:19] *** Joins: boB_K7IQ (~boB_K7IQ@c-24-19-3-104.hsd1.wa.comcast.net)
[12:20:51] *** Joins: alch (~alch@151.38.29.145)
[12:23:19] *** Joins: malloy (~jimery@116.30.221.255)
[12:24:13] *** Joins: ppt (~yulung@211-21-14-99.hinet-ip.hinet.net)
[12:24:30] *** Quits: kashyaprushi (~kashyapru@2405:201:1010:b033:b90c:86ca:3fd:ed2a) (Quit: Leaving)
[12:26:39] *** Quits: CatCow (~wtf_over@c-73-96-109-206.hsd1.or.comcast.net) (Quit: Textual IRC Client: www.textualapp.com)
[12:35:24] *** Joins: pony (sid524992@smol/hors)
[12:42:51] *** Quits: dsrt^ (~dsrt@64.253.22.77) (Ping timeout: 268 seconds)
[12:42:54] *** Joins: smallville7123 (~smallvill@cpe-172-193-72-46.qld.foxtel.net.au)
[12:44:30] *** Joins: gproto23 (~gproto23@user/gproto23)
[12:45:17] *** Quits: smallvil_ (~smallvill@cpe-172-193-72-46.qld.foxtel.net.au) (Ping timeout: 240 seconds)
[12:47:30] *** Quits: frost (~frost@user/frost) (Quit: Connection closed)
[12:48:26] *** Joins: frost (~frost@user/frost)
[12:51:17] *** Joins: LucaTM (~LucaTM@user/lucatm)
[12:53:02] *** Joins: lleo (~leo@188-206-76-248.mobile.kpn.net)
[12:58:54] *** Quits: chenqisu12 (~bhca7d@183.217.201.63) (Read error: Connection reset by peer)
[12:59:16] *** Quits: lleo (~leo@188-206-76-248.mobile.kpn.net) (Quit: beyond time space in laws)
[12:59:25] *** Joins: dsrt^ (~dsrt@64.253.22.77)
[13:00:14] *** Quits: dsrt^ (~dsrt@64.253.22.77) (Remote host closed the connection)
[13:01:22] *** Quits: DarkTrick (~DarkTrick@pl-749-047.bunbun.ne.jp) (Quit: ---)
[13:01:55] *** Joins: aradesh (~aradesh@user/aradesh)
[13:05:40] *** Joins: sdfgsdfg (~sdfgsdfg@user/sdfgsdfg)
[13:07:56] *** Joins: DarkTrick (~DarkTrick@pl-749-047.bunbun.ne.jp)
[13:11:38] *** Joins: constxd (~brad@142.134.38.68)
[13:15:56] *** Joins: PortableDave (~portabled@220.253.22.64)
[13:17:38] *** Quits: diamondbond (~diamondbo@175.157.107.97) (Quit: Leaving)
[13:17:53] *** Joins: plastico (~plastico@neomutt/plastico)
[13:19:51] *** Quits: Akiva (~Akiva@user/Akiva) (Ping timeout: 268 seconds)
[13:20:36] *** Quits: PortableDave (~portabled@220.253.22.64) (Ping timeout: 256 seconds)
[13:21:06] *** Joins: Akiva (~Akiva@user/Akiva)
[13:21:40] *** Quits: cpuid (~cpuid@user/cpuid) (Quit: ZNC 1.8.2 - https://znc.in)
[13:22:29] *** Joins: cpuid (~cpuid@co5.at)
[13:22:29] *** Quits: cpuid (~cpuid@co5.at) (Changing host)
[13:22:29] *** Joins: cpuid (~cpuid@user/cpuid)
[13:24:17] *** Joins: PortableDave (~portabled@220.253.22.64)
[13:25:26] *** Quits: AsenMx (~AsenMx@user/asenmx) (Ping timeout: 260 seconds)
[13:26:18] *** Joins: AsenMx (~AsenMx@user/asenmx)
[13:26:36] *** Quits: ppt (~yulung@211-21-14-99.hinet-ip.hinet.net) (Ping timeout: 240 seconds)
[13:28:42] *** Quits: phrosty (~phrosty@c-73-225-175-19.hsd1.wa.comcast.net) (Ping timeout: 260 seconds)
[13:38:45] *** Joins: cousteau (~cousteau@user/cousteau)
[13:39:23] *** Quits: jojo_ (uid532476@user/jojo/x-7248806) ()
[13:42:18] *** Joins: bbju (~bbju@103.144.149.220)
[13:47:20] *** Quits: PortableDave (~portabled@220.253.22.64) (Ping timeout: 252 seconds)
[13:48:22] *** Quits: Lord_of_Life (~Lord@user/lord-of-life/x-2819915) (Ping timeout: 256 seconds)
[13:48:58] *** Joins: PortableDave (~portabled@220.253.22.64)
[13:49:50] *** Joins: Lord_of_Life (~Lord@user/lord-of-life/x-2819915)
[13:49:58] *** Joins: sysctl (~sysctl@88.215.77.255)
[13:52:41] *** Joins: earnestly (~earnest@user/earnestly)
[13:52:54] *** Quits: rgrinberg (~textual@2806:101e:1:27a5:b170:6e98:8314:62d3) (Quit: My MacBook has gone to sleep. ZZZzzz…)
[13:53:17] *** Quits: MajorBiscuit (~MajorBisc@62-52-102.netrun.cytanet.com.cy) (Ping timeout: 240 seconds)
[13:56:00] *** Joins: MajorBiscuit (~MajorBisc@62-52-102.netrun.cytanet.com.cy)
[13:56:03] *** Joins: zer0bitz (~zer0bitz@2001:2003:f444:a000:81c1:fdbc:2b2:4c4a)
[13:58:37] *** Quits: constxd (~brad@142.134.38.68) (Ping timeout: 240 seconds)
[13:58:55] *** Joins: quigonjinn (~quigonjin@2a02:587:2462:ff3d:edcf:6ad1:6158:3987)
[13:59:11] *** Joins: duuude (~user@user/duuude)
[14:02:30] *** Joins: skapata (~Skapata@2804:14c:87b0:a6f9:2898:525a:5805:3485)
[14:02:30] *** Quits: skapata (~Skapata@2804:14c:87b0:a6f9:2898:525a:5805:3485) (Changing host)
[14:02:30] *** Joins: skapata (~Skapata@user/skapata)
[14:03:02] *** Quits: BSaboia (~bsaboia@187.18.140.125) (Quit: This computer has gone to sleep)
[14:12:25] *** Quits: dead1 (~dead@user/dead1) (Quit: Leaving)
[14:13:17] *** Quits: Enitin (~Enitin@82.102.22.84) (Ping timeout: 240 seconds)
[14:14:17] *** Quits: Akiva (~Akiva@user/Akiva) (Ping timeout: 240 seconds)
[14:15:17] *** Quits: quigonjinn (~quigonjin@2a02:587:2462:ff3d:edcf:6ad1:6158:3987) (Ping timeout: 240 seconds)
[14:15:57] *** Quits: mikoto-chan (~mikoto-ch@nat1.panoulu.net) (Quit: mikoto-chan)
[14:16:13] *** Joins: phrosty (~phrosty@c-73-225-175-19.hsd1.wa.comcast.net)
[14:16:21] *** Joins: wroathe (~wroathe@user/wroathe)
[14:16:22] *** Joins: caveman (~caveman@gateway/tor-sasl/caveman)
[14:17:50] *** Joins: Enitin (~Enitin@82.102.22.85)
[14:21:31] *** Quits: wroathe (~wroathe@user/wroathe) (Ping timeout: 268 seconds)
[14:26:36] *** Quits: Thymo (~Thymo@NASSP/developer/Thymo) (Ping timeout: 245 seconds)
[14:30:15] *** Quits: csrf (~csrf@user/csrf) (Quit: ZNC 1.7.2+deb3 - https://znc.in)
[14:30:58] *** Joins: csrf (~csrf@user/csrf)
[14:31:09] *** Joins: bebyx (~Thunderbi@user/bebyx)
[14:32:45] *** Quits: cursey_ (~cursey@user/cursey) (Quit: bye)
[14:33:26] *** Joins: Thymo (~Thymo@NASSP/developer/Thymo)
[14:34:16] *** Quits: PortableDave (~portabled@220.253.22.64) (Ping timeout: 256 seconds)
[14:35:03] *** Joins: slidercrank (~slidercra@user/slidercrank)
[14:35:24] *** Quits: AsenMx (~AsenMx@user/asenmx) (Ping timeout: 256 seconds)
[14:35:41] *** Joins: AsenMx (~AsenMx@user/asenmx)
[14:38:37] *** Quits: Enitin (~Enitin@82.102.22.85) (Ping timeout: 240 seconds)
[14:39:42] *** Joins: pretty_dumm_guy (trottel@gateway/vpn/protonvpn/prettydummguy/x-88029655)
[14:40:47] *** Quits: Satin (uid193953@user/Seten) (Quit: Connection closed for inactivity)
[14:41:02] *** Joins: hxztnxt (~hxztnxt@218.red-83-54-57.dynamicip.rima-tde.net)
[14:41:07] <hxztnxt> sed -i -e 's/\r$//' scriptname.sh
[14:41:25] <hxztnxt> what is 's/\r$//` doing?
[14:42:53] *** Joins: pingpongball (~pingpongb@user/pingpongball)
[14:43:00] <pingpongball> I was here a week ago
[14:43:06] <pingpongball> asking for c flags
[14:43:11] <pingpongball> for compiling emacs
[14:43:15] <baltazar> hxztnxt: I guess this converts from windows to linux line endings
[14:43:38] *** Joins: Enitin (~Enitin@82.102.22.85)
[14:43:41] *** Quits: Thymo (~Thymo@NASSP/developer/Thymo) (Read error: Connection reset by peer)
[14:43:46] <pingpongball> Whenever i open some files ,folder, in emacs it creates gmo.out , i'm scared whats that
[14:44:44] *** Joins: Thymo (~Thymo@NASSP/developer/Thymo)
[14:44:52] *** Quits: toastloop (toastloop@user/toastloop) (Quit: Leaving)
[14:45:15] *** Joins: ko (~i.am@user/marlboro)
[14:45:33] *** Quits: dogbert2 (~Bill@ip68-105-189-91.lv.lv.cox.net) (Read error: Connection reset by peer)
[14:47:09] *** Joins: wroathe (~wroathe@c-68-54-25-135.hsd1.mn.comcast.net)
[14:47:09] *** Quits: wroathe (~wroathe@c-68-54-25-135.hsd1.mn.comcast.net) (Changing host)
[14:47:09] *** Joins: wroathe (~wroathe@user/wroathe)
[14:47:17] *** Quits: bebyx (~Thunderbi@user/bebyx) (Ping timeout: 252 seconds)
[14:47:23] *** Quits: gr33n7007h (~gr33n7007@user/gr33n7007h) (Quit: WeeChat 3.3)
[14:47:45] *** Joins: cursey (~cursey@user/cursey)
[14:47:52] *** Quits: phrosty (~phrosty@c-73-225-175-19.hsd1.wa.comcast.net) (Ping timeout: 256 seconds)
[14:49:07] *** Quits: AbleBacon (~AbleBacon@user/AbleBacon) (Read error: Connection reset by peer)
[14:49:20] *** Joins: malina (~malina@user/malina)
[14:49:31] *** Quits: duuude (~user@user/duuude) (Ping timeout: 245 seconds)
[14:49:49] *** Joins: dyeplexer (~dyeplexer@user/dyeplexer)
[14:51:24] *** Joins: gr33n7007h (~gr33n7007@user/gr33n7007h)
[14:52:19] *** Quits: dacav (~dacav@h94-245-9-196.cust.a3fiber.se) (Quit: leaving)
[14:52:24] *** Quits: wroathe (~wroathe@user/wroathe) (Ping timeout: 256 seconds)
[14:52:29] *** Joins: dacav (~dacav@h94-245-9-196.cust.a3fiber.se)
[14:53:21] *** Quits: dacav (~dacav@h94-245-9-196.cust.a3fiber.se) (Client Quit)
[14:53:44] *** Joins: dacav (~dacav@h94-245-9-196.cust.a3fiber.se)
[14:55:56] *** Joins: dacav_ (~dacav@host-94-87-152-89.business.telecomitalia.it)
[14:55:57] *** Quits: blyat-73 (~hjgkjhgkj@46.235.96.249) (Ping timeout: 240 seconds)
[14:56:39] *** Quits: dacav_ (~dacav@host-94-87-152-89.business.telecomitalia.it) (Client Quit)
[14:58:23] *** Joins: mikoto-chan (~mikoto-ch@esm-84-240-99-143.netplaza.fi)
[15:02:35] *** Joins: seninha (~seninha@user/seninha)
[15:09:18] *** Joins: mrgz (~mrgz@201-42-0-191.dsl.telesp.net.br)
[15:10:11] *** Quits: Thymo (~Thymo@NASSP/developer/Thymo) (Read error: Connection reset by peer)
[15:10:38] *** Joins: Thymo (~Thymo@NASSP/developer/Thymo)
[15:15:51] *** Joins: duuude (~user@user/duuude)
[15:19:54] <cousteau> hxztnxt: you might get better answers in #sed or #bash... but yeah, what baltazar said.  There's also dos2unix.
[15:20:05] <pingpongball> `gmon.out`
[15:20:12] <pingpongball> ok
[15:21:19] <cousteau> ...wonder if C cares about \r\n newlines in source code files.  I guess they're usually fine (treated as whitespace), except if you have a \ at the end of a line.
[15:23:09] <trenka> pingpongball: did you compile it with profiling
[15:23:10] <trenka> ?
[15:23:17] <cousteau> pingpongball: as for C flags, you may also want to ask in #gcc (if you're using GCC to compile it) or better yet, #emacs
[15:23:28] <pingpongball> yes i used with profiling
[15:23:35] <cousteau> I would guess the people at #emacs know how to compile their program
[15:23:52] <trenka> pingpongball: so, why do you ask?
[15:24:14] <pingpongball> i was wandering why it created gmon.out
[15:24:23] <trenka> pingpongball: man gprof?
[15:24:25] <riv> gmon contains ghosts, do not touch it
[15:24:46] <pingpongball> ghots riv ?
[15:25:57] *** Quits: Enitin (~Enitin@82.102.22.85) (Ping timeout: 240 seconds)
[15:26:12] <cousteau> and ##workingset for the various development tools
[15:26:23] *** Joins: bolovanos__ (~bolovanos@user/bolovanos)
[15:26:42] *** Joins: Enitin (~Enitin@82.102.22.86)
[15:28:44] *** Quits: duuude (~user@user/duuude) (Ping timeout: 268 seconds)
[15:31:48] *** Quits: malina (~malina@user/malina) (Remote host closed the connection)
[15:34:08] *** Quits: Ryozuki (~Ryozuki@user/ryozuki) (Quit: bye)
[15:34:41] *** Joins: semeion (~semeion@user/semeion)
[15:35:01] *** Joins: Ryozuki (~Ryozuki@edgarluque.com)
[15:35:01] *** Quits: Ryozuki (~Ryozuki@edgarluque.com) (Changing host)
[15:35:01] *** Joins: Ryozuki (~Ryozuki@user/ryozuki)
[15:35:46] *** Quits: AsenMx (~AsenMx@user/asenmx) (Ping timeout: 245 seconds)
[15:36:01] *** Quits: supakeen (~user@python/site-packages/supakeen) (Quit: WeeChat 3.4)
[15:36:30] *** Joins: supakeen (~user@python/site-packages/supakeen)
[15:39:19] *** Quits: pingpongball (~pingpongb@user/pingpongball) (Ping timeout: 256 seconds)
[15:39:22] *** Quits: dacav (~dacav@h94-245-9-196.cust.a3fiber.se) (Quit: leaving)
[15:39:39] *** Joins: dacav (~dacav@h94-245-9-196.cust.a3fiber.se)
[15:42:16] *** Joins: duuude (~user@user/duuude)
[15:47:40] <Franciman> is there a way to print just a substring using printf
[15:50:54] *** Joins: phrosty (~phrosty@c-73-225-175-19.hsd1.wa.comcast.net)
[15:52:02] <gl> ,char *s = "foobarqux"; printf("%.3s\n", s + 3);
[15:52:02] <candide> char is required to be able to represent (at least) the values inclusively between -127 and 127 (signed char), or 0 and 255 (unsigned char). The representation chosen is implementation-defined, meaning some compilers will treat a char as signed, others unsigned. sizeof (char) is always 1. See also: CHAR_BIT, CHAR_MIN, CHAR_MAX and byte
[15:52:10] <gl> meh.
[15:52:27] <Franciman> thanks gl , one more thing
[15:52:35] <Franciman> can I dynamically specify the .3 ?
[15:52:57] <Franciman> ah I can
[15:53:00] <Franciman> yay
[15:53:02] <Franciman> thanks
[15:53:52] *** Joins: kashyaprushi (~kashyapru@106.210.232.35)
[15:55:32] <cousteau> yeah, .* works
[15:55:58] <Franciman> cousteau: your array trick was awesome
[15:55:59] <gl> I wonder what compilation flag causes this warning, btw
[15:56:01] <Franciman> i love it
[15:56:29] <gl> oh
[15:56:30] <gl> haha
[15:56:33] <gl> ,cc char *s = "foobarqux"; printf("%.3s\n", s + 3);
[15:56:36] <candide> gl: bar
[15:56:39] <cousteau> ...be careful with exceeding the limit though.  The .* will just end early if the end limit is past the end of the string, but if the beginning is out of boundaries it'll be undefined behavior
[15:57:02] <cousteau> gl: oh, I thought you had realized and had just given up trying
[15:57:16] <gl> apparently i'm not fully awaken
[15:57:24] <hxztnxt> how can i un-stash a file I have manually deleted without git rm
[15:57:29] <hxztnxt> just rm
[15:57:32] <cousteau> Franciman: which trick btw?  The "allocate in 2x increments" one?
[15:57:38] <cousteau> or the "just use realloc"?
[15:57:41] <Franciman> the idea to have an allocator
[15:57:44] <Franciman> that mimicks realloc :P
[15:57:48] <cousteau> hxztnxt: #git
[15:57:57] <Franciman> and internally deals with the 2x increment
[15:58:00] <hxztnxt> ops, sorry
[15:58:03] <cousteau> :)
[15:58:38] <cousteau> (and you probably mean un-stage, not un-stash, right?)
[15:58:39] <Franciman> ,cc printf("%.3c", 'a');
[15:58:42] <candide> Franciman: [warning: precision used with '%c' gnu_printf format [-Wformat=]] a
[15:58:47] <Franciman> rip
[15:58:53] *** Joins: gh34 (~textual@cpe-184-58-181-106.wi.res.rr.com)
[15:58:56] *** Quits: sdfgsdfg (~sdfgsdfg@user/sdfgsdfg) (Quit: ZzzZ)
[15:59:23] <hxztnxt> yep, un-stage
[16:02:41] *** Joins: pulsar12 (~pulsar12@95.172.181.187)
[16:05:09] *** Joins: blindguard (~blindguar@2a02:908:1864:c200::12)
[16:06:01] *** Joins: nyah (~nyah@94.6.71.219)
[16:07:07] *** Joins: sdfgsdfg (~sdfgsdfg@user/sdfgsdfg)
[16:07:23] *** Quits: cousteau (~cousteau@user/cousteau) (Quit: ♫ I can't forget the day I shot that network down ♫)
[16:08:08] *** Joins: kashyaprushi_ (~kashyapru@2401:4900:1ff6:7cdf:ea19:6ca0:48e2:d592)
[16:08:20] *** Quits: kashyaprushi (~kashyapru@106.210.232.35) (Ping timeout: 256 seconds)
[16:08:53] <trenka> hxztnxt: offtopic
[16:15:48] *** Joins: tryte (~nelg@183.17.124.167)
[16:16:28] *** Quits: alch (~alch@151.38.29.145) (Read error: Connection reset by peer)
[16:18:21] *** Quits: Torr (~Torr@user/torr) (Remote host closed the connection)
[16:18:36] *** Joins: random-nick (~random-ni@87.116.180.98)
[16:19:19] *** kashyaprushi_ is now known as kashyaprushi
[16:20:15] *** Joins: wako (~wako@151.68.10.132)
[16:20:34] *** Quits: tryte (~nelg@183.17.124.167) (Quit: leaving)
[16:21:10] *** Joins: alch (~alch@151.38.57.116)
[16:23:17] *** Quits: Enitin (~Enitin@82.102.22.86) (Ping timeout: 240 seconds)
[16:23:38] *** Quits: gproto23 (~gproto23@user/gproto23) (Remote host closed the connection)
[16:24:03] *** Joins: gproto23 (~gproto23@user/gproto23)
[16:27:12] <Franciman> i think I hate make lol
[16:28:44] *** Quits: gproto23 (~gproto23@user/gproto23) (Ping timeout: 256 seconds)
[16:31:14] *** Joins: Enitin (~Enitin@82.102.22.85)
[16:33:26] *** Joins: Kev_ (~Kev@2a01cb0400149f005804b7059195ba5a.ipv6.abo.wanadoo.fr)
[16:34:13] *** Quits: hxztnxt (~hxztnxt@218.red-83-54-57.dynamicip.rima-tde.net) (Quit: Leaving)
[16:37:19] *** Joins: gproto23 (~gproto23@user/gproto23)
[16:37:37] *** Quits: semeion (~semeion@user/semeion) (Quit: WeeChat 3.4)
[16:38:54] *** Quits: sdfgsdfg (~sdfgsdfg@user/sdfgsdfg) (Quit: ZzzZ)
[16:39:57] *** Joins: pulse (~pulse@user/pulse)
[16:41:21] *** Quits: fe23 (~fe23@2409:8a34:468:83d0:7963:39ed:da28:8786) (Read error: Connection reset by peer)
[16:41:51] *** Joins: fe23 (~fe23@2409:8a34:468:83d0:7963:39ed:da28:8786)
[16:43:08] *** Quits: wako (~wako@151.68.10.132) (Read error: Connection reset by peer)
[16:43:19] *** Joins: wako (~wako@151.68.10.132)
[16:43:47] *** Joins: wroathe (~wroathe@c-68-54-25-135.hsd1.mn.comcast.net)
[16:43:47] *** Quits: wroathe (~wroathe@c-68-54-25-135.hsd1.mn.comcast.net) (Changing host)
[16:43:47] *** Joins: wroathe (~wroathe@user/wroathe)
[16:46:02] *** Quits: mikoto-chan (~mikoto-ch@esm-84-240-99-143.netplaza.fi) (Ping timeout: 240 seconds)
[16:47:26] *** Quits: pretty_dumm_guy (trottel@gateway/vpn/protonvpn/prettydummguy/x-88029655) (Ping timeout: 256 seconds)
[16:48:32] *** Quits: wroathe (~wroathe@user/wroathe) (Ping timeout: 240 seconds)
[16:53:12] *** Joins: constxd (~brad@192.75.101.178)
[16:53:16] *** Joins: pingpongball (~pingpongb@user/pingpongball)
[16:54:42] *** Joins: constxo (~brad@192.75.101.164)
[16:58:16] *** Joins: superboot (~agentgasm@user/superboot)
[16:58:17] *** Quits: constxd (~brad@192.75.101.178) (Ping timeout: 240 seconds)
[16:58:42] *** Joins: monkey_ (~user@190.104.116.153)
[16:59:40] *** Joins: pretty_dumm_guy (~trottel@eduroam-134-96-204-6.uni-saarland.de)
[16:59:41] *** Quits: immibis (~hexchat@62.156.144.218) (Read error: Connection reset by peer)
[16:59:43] *** Joins: immibis_ (~hexchat@62.156.144.218)
[17:00:13] *** Quits: wako (~wako@151.68.10.132) (Quit: Leaving)
[17:00:38] *** Joins: Leonard (~Administr@114.55.127.80)
[17:02:53] *** Quits: pretty_dumm_guy (~trottel@eduroam-134-96-204-6.uni-saarland.de) (Client Quit)
[17:03:41] *** Joins: cmbengue (~Thunderbi@207.191.249.160)
[17:05:10] <pingpongball> Hey c guys
[17:05:15] <pingpongball> is c that hard?
[17:05:28] <pingpongball> Is it possible to find job in c nowadays?
[17:05:46] <pingpongball> what can i do with c?
[17:05:50] *** Joins: dogbert2 (~Bill@ip68-105-189-91.lv.lv.cox.net)
[17:05:50] *** Joins: joedoe47 (~weechat@c-98-254-188-143.hsd1.fl.comcast.net)
[17:05:51] <pingpongball> Whats holy c?
[17:06:24] <pingpongball> like if i want to make whole linux kernel
[17:06:28] <pingpongball> or whole gcc
[17:06:38] <pingpongball> recommend me some book
[17:06:44] <pingpongball> not dragon book it was hard
[17:06:53] <riv> dragon book is a errible book
[17:06:59] <riv> dragon book is a terrible book
[17:07:05] *** Joins: Jong (~Jong@163.114.132.6)
[17:07:14] <riv> everyone who hasn't read it just recommends it without thinking
[17:07:33] <pingpongball> :O
[17:07:37] <omegatron> no - I recommend it only to people I like ...   -_-
[17:07:38] <pingpongball> yes then tell me
[17:08:39] <pingpongball> i'm looking like this
[17:09:17] <pingpongball> https://www.youtube.com/watch?v=soQCkeBDOAY&list=PLHh55M_Kq4OAmzC6zR7NXhZT9z21NkRCa
[17:09:19] <candide> Title of pingpongball's link: Regular Expressions - YouTube
[17:09:31] <pingpongball> both theory + programming
[17:09:42] <pingpongball> but in whiteboard, a real teacher
[17:10:17] *** Quits: supajerm (~supajerm@gateway/vpn/pia/supajerm) (Remote host closed the connection)
[17:10:37] *** Joins: supajerm (~supajerm@gateway/vpn/pia/supajerm)
[17:10:38] <Learath2> dragon book is definitely not something you just start reading randomly to learn C :D
[17:11:00] <pingpongball> i've already learnt c, everything about it
[17:11:06] <pingpongball> but like , i dont know
[17:11:09] <riv> well done
[17:11:32] <pingpongball> like i've got a knife, i know how to sharpen it, but i dont know hot to cut apple from it
[17:11:34] <Learath2> it's not even a C book, it's for people interested in compiler design
[17:12:10] <riv> it's not good book for learning about compilers imo
[17:12:17] <Learath2> pingpongball: Well don't you have any projects you want to do in C? If you are already familiar with the language why don't you just go for it?
[17:12:34] <pingpongball> what project? =L
[17:13:13] <omegatron> write a C++ to C converter ..
[17:13:56] <Learath2> Okay, I'm confused. See when I learned C I learned it because I wanted to code an irc bouncer in it. This is the first time I've met someone that has nothing they want to do with a language but has learned it anyway :D
[17:14:40] <omegatron> which is hard to believe and therefore most likely not true
[17:14:52] <trenka> ;)
[17:15:01] <Learath2> Oh wait, are you that weird troll that comes around every 5 months to rile people up?
[17:15:03] <pingpongball> i think i dont have any passion
[17:15:33] <pingpongball> but i also dont think i dont have passion .
[17:16:29] *** Quits: pingpongball (~pingpongb@user/pingpongball) (Quit: Client closed)
[17:17:07] *** Joins: cousteau (~cousteau@user/cousteau)
[17:18:17] *** Quits: Enitin (~Enitin@82.102.22.85) (Ping timeout: 240 seconds)
[17:23:26] *** Quits: kashyaprushi (~kashyapru@2401:4900:1ff6:7cdf:ea19:6ca0:48e2:d592) (Quit: Leaving)
[17:23:59] *** Joins: Enitin (~Enitin@82.102.22.85)
[17:26:06] *** Joins: inlight (~inlight@157.35.56.242)
[17:26:06] *** Quits: inlight (~inlight@157.35.56.242) (Changing host)
[17:26:06] *** Joins: inlight (~inlight@user/inlight)
[17:26:44] <pragma-> That was a weird analogy.
[17:27:20] <pragma-> I wager most people who have picked up a knife without ever using one before immediately figures out how to slice things with it. But figuring out how to sharpen the knife is much more technical.
[17:29:59] *** Quits: asdflkj_sh (asdflkj@bsdforall.org) (Quit: WeeChat 3.1)
[17:30:32] <cousteau> I can tell you that the first time most people ever pick a knife there's probably trouble involved unless they do so with supervision
[17:30:40] <omegatron> I would guess most people have seen other people using a knife, and therefore "know" what you can do with it, but yes ..
[17:31:05] <omegatron> (in terms of ... slicing food .. not sticking into other people ..)
[17:31:07] <cousteau> please don't let people at your charge figure out how to use a knife by themselves
[17:31:24] *** Joins: oriba (~oriba@dynamic-077-183-053-093.77.183.pool.telefonica.de)
[17:32:17] <bud> even if their sound is simple, the compositions are very carefully and composed.
[17:32:42] <bud> -and
[17:32:58] <cousteau> I mean, while it's true that sharpening it requires much more technical knowledge, it also has much lesser consequences if you do it wrong.  I'm not making a point with whichever analogy was being discussed btw, just a note of caution.
[17:33:01] <pragma-> cousteau: in the ancient days, the vikings (or some culture) would throw new born babies into the woods for 3 days and then only accept them into the tribe if they survived.
[17:33:07] <cousteau> Also drink water.  Kidney stones are no fun
[17:33:11] <pragma-> not sure if true
[17:33:36] <cousteau> pragma-: sounds a lot like an urban legend tbh
[17:34:02] <cousteau> ...or is it just a legend at that point?
[17:34:34] <bud> there is very little known about the everyday life of the vikings
[17:35:24] <cousteau> I've heard they were very open with sexual relationships
[17:35:35] <bud> wrong
[17:35:47] <cousteau> or that the chief of the tribe was
[17:36:33] <bud> vikings had polyandrous marriages , where the alfa vikings could have many many wifes 
[17:36:54] <cousteau> (in a similar way to how some kings did)
[17:36:57] <bud> some believe this is the reason the vikings was so keen on sailing away (to find women)
[17:37:23] <pragma-> "there is very little we know about the vikings"  "oh but we do know their sexual habits!"
[17:37:33] <pragma-> smh, humans only care about one thing
[17:37:40] <cousteau> ...can you join #c-offtopic?  I really want to continue this discussion without polluting the channel
[17:38:06] * cousteau is about to blow everyone's mind with a (probably false) fact about vikings and etymology
[17:38:11] <bud> it is not that difficult to see how the family structures looked like from an archeological research
[17:38:23] <omegatron> pragma: ancient times were perhaps like this:  https://www.oglaf.com/son-of-kronar/  (2 pages)
[17:39:37] *** Joins: Satin (uid193953@user/Seten)
[17:39:38] <bud> but little is known about the rest of their culture. the Asa stories where written by a christian after the viking times, and it is very uncertain it actually was their religion and such.
[17:40:27] <bud> https://www.sciencenews.org/article/vikings-north-america-date-newfoundland
[17:41:17] *** Quits: frost (~frost@user/frost) (Ping timeout: 240 seconds)
[17:41:18] <cousteau> The legend I heard was that the viking chief would hang his helmet on the door while doing the nasty with a village woman, to not get interrupted
[17:41:23] <pragma-> omegatron: these are absurd
[17:41:34] <cousteau> and hence was born the term "to be horny"
[17:41:53] <bud> the viking helmets didn't have horns
[17:41:54] <pragma-> omegatron: and well-drawn
[17:41:57] <cousteau> and, incidentally, the Spanish expression "to put the horns (on someone)", which means "to cheat"
[17:41:59] <bud> its a factoid
[17:42:33] <cousteau> bud: yeah, that's one further proof that what I mentioned was probably fake news
[17:42:54] <bud> you mean fake history
[17:42:55] <cousteau> but... who knows, maybe the sex helmet did have horns
[17:43:07] <cousteau> no, fake news
[17:43:10] <cousteau> fake old news
[17:43:25] <cousteau> past news
[17:43:49] <cousteau> like how the weather forecast should be called "future news"
[17:43:55] <pragma-> Maybe they were actaully dildos, but artists assumed they were blunted by time, by being buried, and redrew them with sharp pointed horns instead of the dildos they truly were!
[17:46:04] <cousteau> why would dildos not be pointy?  Vikings were known to be very brave
[17:46:50] *** Joins: Charadon (~Charadon@155.138.164.183)
[17:48:30] *** Joins: NEYi (~NEYi@109.251.216.38)
[17:50:36] *** Quits: supajerm (~supajerm@gateway/vpn/pia/supajerm) (Ping timeout: 240 seconds)
[17:51:08] <omegatron> depends on whether dildos are meant for pleasure or pain, I would say ..
[17:51:30] <bud> im trying to find an article i read about a year ago, a archeologist had written a new book about vikings, can't find it.
[17:51:50] <bud> i remember that he described a strange grave.
[17:52:28] <bud> where a man was buried with a horse. or the horse was actually two halfs of two different horses.
[17:53:43] *** Quits: scoobydoo (~scooby@user/scoobydoo) (Read error: Connection timed out)
[17:53:52] <omegatron> bud: https://www.horsetalk.co.nz/2019/07/15/horse-found-buried-viking-boat-sweden/  this ?
[17:54:29] *** Joins: cisco87 (~quassel@static.134.4.251.148.clients.your-server.de)
[17:54:59] <omegatron> ah, maybe this  https://www.zmescience.com/science/archaeology/viking-man-horse-and-dog-found-in-extremely-rare-type-of-burial/
[17:55:02] *** Joins: scoobydoo (~scooby@user/scoobydoo)
[17:55:26] *** Joins: pingpongball (~pingpongb@user/pingpongball)
[17:55:32] *** Joins: brad_mssw (~bhouse@c-76-106-206-149.hsd1.fl.comcast.net)
[17:55:40] <pingpongball> Hey guys
[17:56:14] <pingpongball> How can i see from compield  program what compilation flags were used ?
[17:56:30] <omegatron> you can't
[17:57:13] <pingpongball> if not
[17:57:18] <pingpongball> like i've a emacs source code
[17:57:36] <pingpongball> previouly used when i used to use "./configure .... flags"  and make
[17:57:44] <pingpongball> and i'vent untouched it after i compiled it
[17:57:53] <pingpongball> can i find those from there?
[17:58:06] <trenka> pingpongball: gnu configure writes config.log
[17:58:42] <trenka> pingpongball: but it's offtopic, #workingset more suitable
[17:58:49] <pingpongball> yes i found
[18:01:16] *** Joins: wroathe (~wroathe@c-68-54-25-135.hsd1.mn.comcast.net)
[18:01:16] *** Quits: wroathe (~wroathe@c-68-54-25-135.hsd1.mn.comcast.net) (Changing host)
[18:01:16] *** Joins: wroathe (~wroathe@user/wroathe)
[18:03:54] *** Joins: moog (~moog@107.126.53.64)
[18:05:37] <MrMobius> is there a log of this channel?
[18:06:19] <gjvc> pingpongball: look up annobin
[18:06:34] <pingpongball> no there is not log
[18:06:53] <pingpongball> but i've found what i put in there in `config.log`
[18:06:54] <pingpongball> :)
[18:07:26] *** Joins: blyat-73 (~hjgkjhgkj@46.235.96.249)
[18:07:57] *** Quits: monkey_ (~user@190.104.116.153) (Ping timeout: 240 seconds)
[18:08:34] *** Quits: f0xb4t (~mac@78.46.13.69) (Quit: leaving)
[18:08:37] <gjvc> trenka thank you for introducing me to #workingset -- perfect!
[18:10:31] <pragma-> MrMobius: not officially. the candide bot's ,recall command may be helpful
[18:11:01] <pragma-> It limits ,recalls to 100 days or so for non-admins.
[18:11:25] <constxo> based
[18:11:31] <constxo> can i be an admin
[18:12:47] *** Joins: sloanr (~user@mobile-166-170-222-23.mycingular.net)
[18:13:55] <Matt|home> hm. can i pm somebody for a silly question?
[18:14:24] <omegatron> how silly could it be, that you don't want to post it here?
[18:14:29] <Matt|home> yes.
[18:14:39] <bud> embrace the cringe
[18:15:40] <pragma-> Private conversations with a single individual means you're subject to that individual's knowledge which may or may not be correct. Public conversations in the channel allows everyone a chance to correct misspoken or incorrect info.
[18:16:26] <pragma-> candide: factadd pm /say Private conversations with a single individual means you're subject to that individual's knowledge which may or may not be correct. Public conversations in the channel allows everyone a chance to correct misspoken or incorrect info.
[18:16:26] <candide> pm added to #c.
[18:16:28] * pragma- nods.
[18:16:45] *** Joins: Torr (~Torr@user/torr)
[18:17:17] <Matt|home> i don't understand either how void pointers work or how dereferencing works or some other unknown topic. mmap returns a void pointer to a memory mapped file, which i've assigned to mptr. so when i try reading data from the pointer, i assume i can read x number of bytes of data, x being an individual byte.. so here's a snippet of code i wrote:
[18:18:28] <Franciman> Matt|home: then convert to unsigned char *
[18:18:45] <riv> you can't dereference a void* pointer
[18:18:45] <Franciman> void is made to not be dereferenced, you must first interpret it in some type
[18:18:54] <pragma-> Matt|home: you must convert void pointers to a pointer to some type T before you can dereference it.
[18:19:33] <twkm> didn't your learning materials cover pointers?  they don't change how they work just because mmap was used -- malloc returns a void* too.
[18:19:51] <Matt|home> ugh .. hang on im trying to figure out how to see a past commit..
[18:19:59] <pragma-> as twkm says, malloc returns a void pointer.
[18:20:17] <MrMobius> pragma-, can I use ,recall to see the messages after a question i asked? i cant tell how from the usage string
[18:20:21] <twkm> if the code you wrote is more than a couple of lines please put it on a paste site -- a test case would be even better.
[18:20:22] *** Quits: inlight (~inlight@user/inlight) (Ping timeout: 256 seconds)
[18:21:02] <pragma-> MrMobius: `recall <nick> <message> -A <count>` to see a count of messages after nick's message.
[18:21:18] *** Joins: inlight (~inlight@user/inlight)
[18:22:35] *** Joins: Zambyte (~Zambyte@cpe-104-228-60-14.nycap.res.rr.com)
[18:23:03] <Matt|home> aw dammit. alright so let me go slowly here.. say I have a single integer, int x = 0; and a void pointer void *mptr; I want to put the thing mptr is pointing to into x, a single int's worth of data. I have to convert it.. i assume by typecasting or creating a new pointer int variable?
[18:23:35] <Matt|home> so something like x = (int)mptr; ?
[18:23:59] <pragma-> more like x = &(int *)mptr;
[18:24:03] <pragma-> er
[18:24:08] <pragma-> swap the punctuation
[18:24:13] <Matt|home> ..
[18:24:37] <pragma-> x = *(int *)mptr;
[18:24:39] * pragma- squints.
[18:24:57] <pragma-> It has been far, far too long since I've written C.
[18:25:34] <pragma-> In any case, it's probably more convenient to simple read into a pointer of the correct type.
[18:25:39] <Matt|home> i don't understand that notation.. i thought after you create a pointer variable..
[18:25:44] <pragma-> To simply, even.
[18:25:56] <Matt|home> see this is why i wanted to pm..
[18:26:32] <pragma-> For example, with malloc, one often simply does something like int *p = malloc(...); rather than void *p = malloc(...); int i = *(int *)p;
[18:27:15] <Matt|home> I'm reading data into multiple different variable types and structs. anyway, god let me back the F up im getting confused :\
[18:27:24] *** Quits: System_Error (~SystemErr@user/systemerror) (Ping timeout: 276 seconds)
[18:27:31] *** Quits: bbju (~bbju@103.144.149.220) (Quit: Ping timeout (120 seconds))
[18:27:52] *** Quits: moog (~moog@107.126.53.64) (Quit: Leaving)
[18:28:12] <pragma-> the (int *) cast converts the pointer to void to a pointer to int. the * in front dereferences it.
[18:28:16] <Matt|home> OKAY. you're type casting mptr to an int, but because it's a pointer you need to include the * in the typecast (). 
[18:28:18] *** Joins: moog (~moog@107.126.53.64)
[18:28:44] <Matt|home> the * outside indicates you're assigning x the value mptr is pointing to and not the address??
[18:28:53] <pragma-> right.
[18:29:27] *** Quits: moog (~moog@107.126.53.64) (Client Quit)
[18:29:46] <Matt|home> ok. say I have a struct, and I want to read data into the struct two different ways: from one offset, and from another offset. say the struct is struct mystruct {int x; char b;} newstruct;
[18:29:52] *** Joins: moog (~moog@107.126.53.64)
[18:30:18] <nomagno> If you think about it, all ways of operating with data in C (except floats, which are a very special exception) basically reduce to integer types, arrays, and pointers.
[18:30:36] <Matt|home> If i want to "fill" the struct from wherever mptr is currently, what's the syntax for that. do i have to typecast it for each individual element in the struct?
[18:31:00] <pragma-> In my example: `int *p = malloc(...);` rather than `void *p = malloc(...); int i = *(int *)p;` -- for the former case, one would simply use `*p` to refer to the int.
[18:31:38] <Matt|home> or would i typecast it as a struct.. if you could do that..
[18:32:14] <Matt|home> so i guess something like newstruct = *(mystruct *)mptr ???
[18:32:18] <twkm> as an aside, try to avoid casts.
[18:32:24] <Matt|home> ...
[18:32:37] <Matt|home> im gonna be doing a lot of reading, so what's the alternative
[18:32:47] <riv> you can do this:  void *p = malloc(...); int *i = p; i[0] = 7;
[18:32:53] <riv> this avoids the cast
[18:32:55] *** Joins: macaw (~macaw@77-255-134-52.adsl.inetia.pl)
[18:33:00] *** Joins: LanDi (~landi@177.37.146.152)
[18:33:04] <Matt|home> so creating a new variable for each datatype i want to read into.
[18:33:08] <riv> or just  int *i = malloc(...); i[0] = 7;
[18:33:15] <pragma-> Things that return a void pointer do not need to be read into a void pointer. You can read them into a pointer of the correct type and avoid the cast. This was demonstrated in the malloc() example above.
[18:33:42] *** Joins: Narrat (~omnius@p200300df5f0c230506ea56fffe2e7cdc.dip0.t-ipconnect.de)
[18:33:48] <pragma-> It is legal to assign a pointer to void to a pointer to T without a cast.
[18:34:32] *** Quits: arinov (~arinov@213.194.126.155) (Ping timeout: 256 seconds)
[18:34:49] <Matt|home> still confused but im just going to assume everything is A-OK .. now, if i want to change the position of the pointer, what's the syntax for that.. say i want it instead of at the beginning of the file to be at some offset like 0xff instead. mptr = mptr+0xff or something?
[18:35:17] <nomagno> If you think about it, you can basically portably (re-)implement all Undefined/Implementation defined things using `limits.h` and unsigned integer/char. You'd be facing a huge performance overhead and possibly need to replace operators with functions, sure. But its fun to think about!
[18:35:32] <Matt|home> ...
[18:35:39] <nomagno> Well, most UB about data types
[18:36:32] <nomagno> As in, you can definitely wrote a software emulation layer for floats using functions. It would be painful, but it's fun to think about
[18:36:57] *** Quits: euandreh (~euandreh@2804:14c:33:9fe5:995c:e86e:470c:8a37) (Ping timeout: 240 seconds)
[18:37:03] *** Quits: scoobydoo (~scooby@user/scoobydoo) (Read error: Connection timed out)
[18:37:39] *** Joins: scoobydoo (~scooby@user/scoobydoo)
[18:38:07] <omegatron> Matt: perhaps this  https://bpa.st/YQ7Q  helps to understand
[18:38:24] <pragma-> Matt|home: given a char *p; how many bytes will p + 4 advance?
[18:38:31] <Matt|home> ty..
[18:38:42] <Matt|home> 4 ?
[18:38:44] <pragma-> Matt|home: now given an int *p; how many bytes will p + 4 advance?
[18:38:57] <Matt|home> 4 int's worth?
[18:39:01] <pragma-> the correct answer is sizeof (int) bytes, yes.
[18:39:04] *** Quits: brad_mssw (~bhouse@c-76-106-206-149.hsd1.fl.comcast.net) (Quit: Leaving)
[18:39:16] *** Parts: riv (river@tilde.team/user/river) (WeeChat 3.3)
[18:39:17] <Matt|home> so you can just use + and - 
[18:39:25] <Matt|home> got it..
[18:39:35] <pragma-> so, pointer arithmetic advances the pointer by sizeof (T) where T is the type used to declare the pointer.
[18:39:44] <nomagno> Well yeah that's the whole point of pointer being typed
[18:39:57] <nomagno> Else you'd have to use sizeof() everywhere to not mess up word alignmebt
[18:39:57] *** Quits: Enitin (~Enitin@82.102.22.85) (Ping timeout: 240 seconds)
[18:40:00] <Matt|home> in general what's the reasoning behind avoiding typecasting?
[18:40:04] <pragma-> so it wouldn't just be adding 0xff to the pointer, but rather the correct size divided by sizeof (T)
[18:40:12] *** Quits: wroathe (~wroathe@user/wroathe) (Ping timeout: 256 seconds)
[18:40:48] <pragma-> and a pointer to void does not have a proper type T. void is not a type with a size.
[18:40:51] <Matt|home> because like i said earlier, the main disadvantage im seeing is if im reading into a multitude of different variable types and structs then i'll need separate vars for each of them :\
[18:41:02] *** Quits: duuude (~user@user/duuude) (Ping timeout: 252 seconds)
[18:41:22] <pragma-> given that, `void *p; p + 5;` makes no sense.
[18:41:38] <Matt|home> .. i thought void pointer was the word/address/whatever size
[18:41:44] <Matt|home> so 32 on 32 bit and 64 on 64 bit
[18:41:58] *** Joins: terminalpusher (~terminalp@2a01:586:968a:1:760a:53e8:676:373a)
[18:42:00] <pragma-> some compilers extend C to give void a size of 1.
[18:42:07] <Matt|home> :\
[18:42:23] <Matt|home> sigh.. ty.
[18:42:35] <Matt|home> i guess i'll just need to figure out syntax for some stuff
[18:42:43] <pragma-> and how pointers really work.
[18:42:55] *** Quits: pulsar12 (~pulsar12@95.172.181.187) (Ping timeout: 256 seconds)
[18:42:56] <Matt|home> yes thank you -_- see this is why i wanted the pm..
[18:42:59] <omegatron> hence my example
[18:43:28] <macaw> Hi. Is there any way to have a function return a pointer to a function, but *without* using a typedef? I know the function sigature would look awful. For reasons I won't go into, it's reverse in my case - the typedef will uglify everything and make it very hard to do what I want to.
[18:43:43] <pragma-> Well, if you'd pm'd omegatron, you'd have gotten his snippet. If you pm'd riv, you'd have gotten his help. If you pm'd me, I'd probably ignore you.
[18:43:45] <nomagno> Really, if you didn't have pointer types it would be VERY annoying and boilerplatey to so pointer arithmetic bytewise
[18:43:50] <clarity> macaw: Of course there is
[18:43:51] <pragma-> It was fine discussing it in the channel.
[18:46:15] <macaw> clarity: Oh, that's relieving. Could you link me to some example code? I searched the net, which didn't work out. Then I wrote some code myself to test it, but I couldn't figure out how to make the compiler happy after I tried to replace the typedef with something equivalent.
[18:47:29] <clarity> void (*f())() { return g; }
[18:48:17] *** Quits: johnnyreb (~tth@user/johnnyreb) (Ping timeout: 240 seconds)
[18:48:22] <macaw> Here is my test code https://termbin.com/85hc
[18:49:00] <macaw> clarity: Oooh... I'm gonna try this.
[18:49:11] *** Joins: euouae (~euouae@user/euouae)
[18:49:17] <euouae> Hello
[18:49:45] <euouae> To learn the basics of gdb and disassembling C code, in particular understanding the machine code, what would you recommend?
[18:49:52] <clarity> To start doing it
[18:49:57] <clarity> And look things up as needed
[18:50:16] <euouae> okay got you
[18:50:37] <MrMobius> write short functions and see how the C compiler implements it
[18:50:57] <clarity> The nice thing about assembly is that it's simple, stupid
[18:51:41] <macaw> euouae: Hey, totally unrelated, but I want to thank you for your recommendation of `dtach` way back. It was 100% what I was looking for (a more light-weight alternative to screen).
[18:51:41] <dave0> macaw: signal() returns a pointer to a function, and it's standard c
[18:52:29] <euouae> macaw, what bizarre thing of modernity to recall an IRC event :D 
[18:52:36] *** Quits: zopsi (zopsi@2600:3c00::f03c:91ff:fe14:551f) (Quit: Oops)
[18:53:33] <pragma-> macaw: https://old.reddit.com/r/c_language/comments/i6iqp4/returning_function_pointer_with_and_without/
[18:53:33] <euouae> macaw dtach was mentioned by a suckless page and is how I found it, https://st.suckless.org/goals/
[18:53:36] <candide> Title of euouae's link: st - simple terminal | suckless.org software that sucks less
[18:53:48] <dave0> ,cc void foo(void) { printf("hi "); } void (*bar(void))(void) { return foo; } bar()();
[18:53:51] <candide> dave0: hi
[18:54:16] <macaw> euouae: Hehe well, you helped a soul out and I didn't have a chance to thank you. ;)
[18:55:06] *** Quits: kapil (~kapil@2a01:4f9:c010:c9c3::1) (Quit: ZNC 1.8.2+deb2build1 - https://znc.in)
[18:55:42] *** Joins: kapil (~kapil@2a01:4f9:c010:c9c3::1)
[18:55:49] <pragma-> that reddit post is a great demonstration of declaration-follows-use
[18:56:22] <pragma-> candide: factchange declareuse s/$/ and https://old.reddit.com/r/c_language/comments/i6iqp4/returning_function_pointer_with_and_without//
[18:56:23] <candide> Changed: declareuse is /say In C, declaration follows use. That means you do not write `char* p` but instead `char *p` because it doesn't mean `p is a pointer to char` but rather `*p is a char`.  https://www.quora.com/Why-doesnt-C-use-better-notation-for-pointers/answer/Brian-Bi and https://old.reddit.com/r/c_language/comments/i6iqp4/returning_function_pointer_with_and_without/
[18:56:57] *** Quits: moog (~moog@107.126.53.64) (Quit: Leaving)
[18:57:04] *** Joins: wroathe (~wroathe@c-68-54-25-135.hsd1.mn.comcast.net)
[18:57:04] *** Quits: wroathe (~wroathe@c-68-54-25-135.hsd1.mn.comcast.net) (Changing host)
[18:57:04] *** Joins: wroathe (~wroathe@user/wroathe)
[18:57:20] *** Joins: moog (~moog@107.126.53.64)
[18:58:45] <macaw> Whoo!!! It does work. dave0 and clarity, thank you.
[18:58:53] * pragma- mutters.
[18:58:58] *** Quits: cousteau (~cousteau@user/cousteau) (Quit: ♫ I can't forget the day I shot that network down ♫)
[18:59:19] <macaw> The syntax is the reverse of what I expected, but that's the least of my concerns. Thanks again! :)
[18:59:40] <macaw> w/expected/had expected/
[18:59:40] <euouae> What are the debug flags for a gdb session? Just -g?
[18:59:58] <macaw> s/^w/s :P
[19:00:14] *** Parts: macaw (~macaw@77-255-134-52.adsl.inetia.pl) ()
[19:00:29] *** Quits: pingpongball (~pingpongb@user/pingpongball) (Ping timeout: 256 seconds)
[19:00:54] *** Joins: pingpongball (~pingpongb@user/pingpongball)
[19:01:44] *** Quits: wroathe (~wroathe@user/wroathe) (Ping timeout: 256 seconds)
[19:02:08] *** Joins: monkey_ (~user@190.104.116.153)
[19:02:57] *** Joins: codethulu (~codethulu@cpe-173-174-108-148.austin.res.rr.com)
[19:03:12] *** Quits: dave0 (~davezero@069.d.003.ncl.iprimus.net.au) (Quit: dave's not here)
[19:04:02] <pingpongball> Hello c
[19:04:29] <pingpongball> prefer wide Emacs integers (typically 62-bit); on 32-bit hosts, this allows buffer and string size upto 2GB, at the cost of 10% to 30% slowdown of Lisp
[19:04:33] <pingpongball> what does this saying
[19:05:20] <euouae> it's saying on old computers you can still use big files but it's slower
[19:06:17] *** Joins: shivesh (~shivesh@user/shivesh)
[19:06:26] <omegatron> old computers ? since when has humanity stopped to produce 32-bit cpus?
[19:06:26] <euouae> Although I don't understand the calculation since 2GB is about 32 bits
[19:06:49] *** Quits: LanDi (~landi@177.37.146.152) (Read error: Connection reset by peer)
[19:07:14] <euouae> omegatron isn't it true that the consumer market for laptops, phones etc is 64bit cpus?
[19:07:52] <pingpongball> oh then ishould not enable it
[19:08:55] *** Joins: pretty_dumm_guy (trottel@gateway/vpn/protonvpn/prettydummguy/x-88029655)
[19:10:35] <euouae> pingpongball Are you configuring your Emacs compilation? I think that fits in #macs
[19:10:40] <euouae> I meant #emacs 
[19:10:52] <pingpongball> yes
[19:11:22] *** Quits: inlight (~inlight@user/inlight) (Ping timeout: 256 seconds)
[19:11:40] *** Joins: pulsar12 (~pulsar12@95.172.181.187)
[19:13:10] <seninha> anyone knows one of those single-file-public-domain libraries that has a func to do environment variable expansion in a string?
[19:18:16] *** Quits: monkey_ (~user@190.104.116.153) (Remote host closed the connection)
[19:19:08] <floatcomplex> euouae: there are a lot of 32 bit arm cpus being sold even today, and the pi foundation is still pushing 32 bit OS images by default even for 64 processors
[19:19:19] *** Quits: caveman (~caveman@gateway/tor-sasl/caveman) (Remote host closed the connection)
[19:19:47] *** Joins: caveman (~caveman@gateway/tor-sasl/caveman)
[19:20:25] *** Joins: arinov (~arinov@178.240.130.28)
[19:21:09] <euouae> What is the 32bit arm cpu for?
[19:21:14] *** Joins: chomwitt (~chomwitt@2a02:587:dc19:a500:12c3:7bff:fe6d:d374)
[19:21:40] *** Joins: monkey_ (~user@190.104.116.153)
[19:21:57] <floatcomplex> general purpose whatever people do with pi's and similar
[19:22:19] <euouae> but why should we be talking of these things?
[19:22:51] <floatcomplex> because they're computers that people compile and run code on, and they're not old
[19:22:59] <euouae> it's so off putting on IRC when one is not satisfied with an answer given to a beginner, and instead of offering an answer themselves, decides to correct the person who dared answer
[19:23:21] <euouae> does that ever bother you?
[19:23:35] <omegatron> you said 'old' computers - you meant '32-Bit' computers ..
[19:24:13] <euouae> but doesn't it bother you?
[19:24:39] <omegatron> first, it's not true, second the recipient of your answer might get the wrong idea
[19:25:23] *** Parts: floatcomplex (~floatcomp@wireguard/tunneler/floatcomplex) ()
[19:25:23] <euouae> and third, you'd rather type out low effort sass rather than anything constructive
[19:25:32] <constxo> based
[19:26:39] *** Joins: bolovanos_ (~bolovanos@user/bolovanos)
[19:27:52] <omegatron> just think before you type, that's all
[19:28:25] <omegatron> words have a meaning
[19:28:34] *** Joins: KseandI (~Thunderbi@5.35.110.75)
[19:28:34] <euouae> so now that we're in the insult hurling domain, are you satisfied?
[19:28:40] <nomagno> How do I go about reimplementing strtok myself?
[19:28:48] <omegatron> if that is a insult to you, I can't help you
[19:28:51] <omegatron> grow up
[19:29:13] <nomagno> It's the only thing keeping me from having an actual zero-dependency backend for my game
[19:29:16] *** Quits: pingpongball (~pingpongb@user/pingpongball) (Quit: Client closed)
[19:29:42] <euouae> nomagno https://9p.io/sources/contrib/rsc/linuxemu/libc/port/strtok.c
[19:30:11] *** Quits: VICultist[m] (~jesingsma@2001:470:69fc:105::1:2bb8) (Quit: You have been kicked for being idle)
[19:30:11] *** Quits: novasharper (~novasharp@2001:470:69fc:105::b4a) (Quit: You have been kicked for being idle)
[19:30:12] *** Quits: arconte[m] (~arcontema@2001:470:69fc:105::1:2fe4) (Quit: You have been kicked for being idle)
[19:30:12] *** Quits: volgar1x (~volgar1xm@2001:470:69fc:105::e61d) (Quit: You have been kicked for being idle)
[19:30:17] *** Quits: bolovanos__ (~bolovanos@user/bolovanos) (Ping timeout: 240 seconds)
[19:30:38] *** Quits: sloanr (~user@mobile-166-170-222-23.mycingular.net) (Ping timeout: 256 seconds)
[19:30:58] *** Parts: KseandI (~Thunderbi@5.35.110.75) ()
[19:31:07] <clarity> I think musl's looks nicer.
[19:31:09] <clarity> https://git.musl-libc.org/cgit/musl/tree/src/string/strtok.c
[19:31:19] <pragma-> remember when ubuntu thought it'd be a good idea to remove 32-bit library packages?
[19:31:39] *** Quits: monkey_ (~user@190.104.116.153) (Ping timeout: 250 seconds)
[19:31:41] <euouae> musl uses strspn() though
[19:31:49] <clarity> .. but it has a bunch of deps yes
[19:32:57] <euouae> ah clarity, you did not think before you typed, and now we shall spend the next 10 minutes talking about your grave sin, lest the person (who has quit half an hour ago) gets the wrong idea
[19:33:07] <Franciman> what is your favourite C hash table implementation?
[19:33:14] *** Parts: euouae (~euouae@user/euouae) ( )
[19:33:44] <nomagno> Well I also need to implement strtol for base 16 but that's trivial
[19:34:06] *** Quits: constxo (~brad@192.75.101.164) (Ping timeout: 260 seconds)
[19:34:20] <nomagno> If you find a character that isn't 0-F, ignore it. Good enough for my purposes, anyways
[19:35:46] <clarity> What kind of game are you making?  What will it run on?
[19:37:23] <nomagno> Are you asking me?
[19:37:44] *** Joins: euandreh (~euandreh@2804:14c:33:9fe5:b7fd:fa95:80d6:f41)
[19:38:26] *** Joins: mikoto-chan (~mikoto-ch@esm-84-240-99-143.netplaza.fi)
[19:38:41] <nomagno> Well, uh, being able to run the game (save for the graphical part) anywhere, but ACTUALLY anywhere is just fun in the academic sense
[19:39:11] <clarity> Yes asking you :)
[19:39:29] <nomagno> euouae: I believe I can replace the memset 0 with initializing to = {0}, right?
[19:39:32] *** Joins: Enitin (~Enitin@82.102.22.84)
[19:39:39] *** Joins: beepbooptheory (~mik-wsl@50.216.98.94)
[19:41:26] <pragma-> if you use multiplatform library like SDL you can run the graphical party almost-anywhere too.
[19:41:56] *** Joins: neverfindme (~hayden@158.123.160.43)
[19:42:14] *** Joins: inlight (~inlight@157.35.8.6)
[19:42:14] *** Quits: inlight (~inlight@157.35.8.6) (Changing host)
[19:42:14] *** Joins: inlight (~inlight@user/inlight)
[19:42:14] <pragma-> and just plug in the stubs for any unsupported systems that you do need to support.
[19:43:38] <nomagno> pragma-: That's a much narrower anywhere, but indeed :D. Probably writing the main frontend in Godot with a middle-end/translator between the backend and thr frontend's data structures tough
[19:44:18] *** Joins: asdflkj_sh (asdflkj@bsdforall.org)
[19:44:26] *** Joins: johnnyreb (~tth@user/johnnyreb)
[19:44:27] <nomagno> And a secondary one for POSIX terminals
[19:44:58] <nomagno> Godot exports to the BSDs, Linux, MacOS, iOS, Android, and Windows
[19:45:17] *** Quits: kapil (~kapil@2a01:4f9:c010:c9c3::1) (Ping timeout: 240 seconds)
[19:46:12] <pragma-> those are the platforms that SDL works on as well. 
[19:46:14] *** Joins: kapil (~kapil@o-k.website)
[19:46:22] <nomagno> I know
[19:46:30] <pragma-> "SDL officially supports Windows, Mac OS X, Linux, iOS, and Android. Support for other platforms may be found in the source code."
[19:47:16] <nomagno> You know what, you do have a point
[19:47:29] <nomagno> It will be several orders of magnitude lighter to use SDL
[19:47:34] <pragma-> Franciman: my favorite hash table implementation is a red/black tree!
[19:48:36] *** Quits: wingsorc__ (~wingsorc@user/wingsorc) (Remote host closed the connection)
[19:49:01] *** Joins: wingsorc__ (~wingsorc@user/wingsorc)
[19:49:45] <Franciman> pragma-: it's hard to implement lol
[19:50:35] *** Joins: eelstrebor (~eelstrebo@198-178-29-136.scb.ne.static.allophone.net)
[19:52:32] *** Quits: neverfindme (~hayden@158.123.160.43) (Remote host closed the connection)
[19:52:49] *** Joins: neverfindme (~hayden@158.123.160.43)
[19:53:31] *** Quits: eelstrebor (~eelstrebo@198-178-29-136.scb.ne.static.allophone.net) (Client Quit)
[19:56:40] *** Quits: neverfindme (~hayden@158.123.160.43) (Client Quit)
[19:58:47] *** Joins: System_Error (~SystemErr@user/systemerror)
[19:59:04] *** Joins: Darkcoal (~user@167.86.149.23)
[19:59:48] *** Joins: magla (~gelignite@55d4e80d.access.ecotel.net)
[20:00:49] *** Quits: beepbooptheory (~mik-wsl@50.216.98.94) (Remote host closed the connection)
[20:02:24] <pulsar12> finally i was able to test unit crypto functions. aes_expandkey and aesbs_convert_key. method was to compile a custom kernel module using copied code from original module, load it and use debugfs to show the output
[20:04:41] *** Quits: pretty_dumm_guy (trottel@gateway/vpn/protonvpn/prettydummguy/x-88029655) (Quit: WeeChat 3.4)
[20:05:12] <pulsar12> aesbs_convert_key original source uses NEON ASM instructions, which was hard for me to translate to C in order to run in user-space
[20:09:34] *** Joins: pretty_dumm_guy (trottel@gateway/vpn/protonvpn/prettydummguy/x-88029655)
[20:09:56] <pragma-> Franciman: about as tricky as a hash table that can efficiently deal with collisions 
[20:11:22] *** Quits: fe23 (~fe23@2409:8a34:468:83d0:7963:39ed:da28:8786) (Quit: fe23)
[20:12:14] *** Joins: stonkey (~stonkey@user/stonkey)
[20:12:26] *** Quits: CaryHartline (~CaryHartl@2603-8080-6a0e-8d88-70b2-1b29-14df-adcf.res6.spectrum.com) (Quit: My iMac has gone to sleep. ZZZzzz…)
[20:12:38] <Franciman> linear probing doesn't seem so hard
[20:12:40] <Franciman> lol
[20:12:53] <Franciman> but i see
[20:13:00] <pragma-> a rb tree is as efficient as a hash table that can deal with collisions, both are going to be close to O(log n)
[20:14:31] <Franciman> pretty false I guess
[20:14:41] <Franciman> it vastly depends on the use case
[20:17:17] *** Quits: alch (~alch@151.38.57.116) (Read error: Connection reset by peer)
[20:18:30] *** Quits: pulsar12 (~pulsar12@95.172.181.187) (Quit: Client closed)
[20:18:42] <nomagno> The Plan9 libc is a bless for simple implementations of portable functions, apparently
[20:19:37] <pragma-> but aren't they written in a plan9 c dialect that vaguely looks like c?
[20:20:44] <nomagno> Seems to work for me.
[20:21:04] <nomagno> Plan9 uses C C
[20:21:32] *** Joins: alch (~alch@151.36.79.133)
[20:21:40] <nomagno> It does provide a superset of C, but this simple stuff is plain old C
[20:23:23] *** Joins: CaryHartline (~CaryHartl@2603-8080-6a0e-8d88-70b2-1b29-14df-adcf.res6.spectrum.com)
[20:24:37] *** Quits: boB_K7IQ (~boB_K7IQ@c-24-19-3-104.hsd1.wa.comcast.net) (Ping timeout: 240 seconds)
[20:25:38] *** Joins: BSaboia (~bsaboia@177.37.198.107)
[20:25:47] *** Joins: constxo (~brad@142.134.38.68)
[20:35:54] *** Quits: dogbert2 (~Bill@ip68-105-189-91.lv.lv.cox.net) (Remote host closed the connection)
[20:36:09] *** Joins: dogbert2 (~Bill@ip68-105-189-91.lv.lv.cox.net)
[20:37:31] *** Quits: bolovanos_ (~bolovanos@user/bolovanos) (Ping timeout: 250 seconds)
[20:43:27] *** Parts: k0tyk[m] (~k0tykmatr@2001:470:69fc:105::1:511a) ()
[20:44:57] *** Quits: smallville7123 (~smallvill@cpe-172-193-72-46.qld.foxtel.net.au) (Ping timeout: 240 seconds)
[20:48:20] *** Joins: sonny (~sonny@8.6.144.252)
[20:49:04] *** Quits: Narrat (~omnius@p200300df5f0c230506ea56fffe2e7cdc.dip0.t-ipconnect.de) (Quit: They say a little knowledge is a dangerous thing, but it's not one half so bad as a lot of ignorance.)
[20:51:15] *** Quits: constxo (~brad@142.134.38.68) (Ping timeout: 268 seconds)
[20:54:18] *** Quits: bindu (~bindu@user/bindu) (Ping timeout: 276 seconds)
[20:56:15] *** Quits: duds- (~duds-@gateway/tor-sasl/duds) (Quit: Leaving.)
[20:56:40] *** Joins: anton (anton@user/anton)
[20:56:45] *** Joins: duds- (~duds-@gateway/tor-sasl/duds)
[20:57:19] *** Quits: anton (anton@user/anton) (Client Quit)
[20:57:24] *** Quits: _LordJohn (~lordjohn@l37-192-203-250.novotelecom.ru) (Read error: Connection reset by peer)
[20:57:39] *** Joins: anton (anton@user/anton)
[20:57:50] *** Quits: mrig (~AdiIRC@user/mrig) (Quit: Going offline, see ya! (www.adiirc.com))
[20:59:35] *** Quits: stonkey (~stonkey@user/stonkey) (Remote host closed the connection)
[20:59:57] *** Joins: bindu (~bindu@user/bindu)
[21:00:00] *** Joins: stonkey (~stonkey@user/stonkey)
[21:00:21] *** Joins: mrig (~mrig@user/mrig)
[21:03:22] *** Quits: dyeplexer (~dyeplexer@user/dyeplexer) (Remote host closed the connection)
[21:06:42] *** Joins: bebyx (~Thunderbi@user/bebyx)
[21:06:58] *** Quits: arinov (~arinov@178.240.130.28) (Ping timeout: 256 seconds)
[21:08:34] *** Joins: arinov (~arinov@178.240.130.28)
[21:09:49] *** Quits: mrlemke (~quassel@208.74.105.200) (Quit: No Ping reply in 180 seconds.)
[21:11:08] *** Joins: mrlemke (~quassel@208.74.105.200)
[21:14:10] *** Quits: Red (~Red@97.109-247-81.customer.lyse.net) (Read error: No route to host)
[21:14:30] *** Joins: bindu_ (~bindu@user/bindu)
[21:14:32] *** Quits: karakedi (~eAC53C340@user/karakedi) (Ping timeout: 240 seconds)
[21:14:54] <earnestly> pragma-: Plan9 C is basically C99 before C99 came to exist (much of C99 is from plan9)
[21:15:06] *** Joins: mahmutov (~mahmutov@5.176.32.84)
[21:15:06] *** Quits: bindu (~bindu@user/bindu) (Ping timeout: 276 seconds)
[21:16:02] *** Quits: arinov (~arinov@178.240.130.28) (Ping timeout: 256 seconds)
[21:16:14] *** Quits: bindu_ (~bindu@user/bindu) (Remote host closed the connection)
[21:16:28] *** Joins: strajder (~strajder@user/strajder)
[21:21:32] *** Joins: bindu (~bindu@user/bindu)
[21:32:56] *** Joins: AbleBacon (~AbleBacon@user/AbleBacon)
[21:33:14] *** Joins: user_ (~user@213.134.189.60)
[21:33:22] *** Quits: user_ (~user@213.134.189.60) (Remote host closed the connection)
[21:34:08] *** Joins: Akuli (~Akuli@82-203-166-212.bb.dnainternet.fi)
[21:36:41] <nomagno> A little question: what is the reasoning behind automatic storage being the only type of uninitialized variables in the C language?
[21:40:41] *** Joins: Akiva (~Akiva@user/Akiva)
[21:40:43] *** kfv_ is now known as kfv
[21:41:43] *** Quits: gr33n7007h (~gr33n7007@user/gr33n7007h) (Quit: WeeChat 3.4)
[21:44:02] *** Quits: blyat-73 (~hjgkjhgkj@46.235.96.249) (Ping timeout: 240 seconds)
[21:44:11] *** Joins: bolovanos_ (~bolovanos@user/bolovanos)
[21:48:35] *** Joins: markb1 (~markb1@2600:1700:eb40:7ecf:a702:8888:6dc4:476)
[21:49:31] *** Joins: Betal (~Betal@user/betal)
[21:49:46] <twkm> allocated storage isn't initialiazed either unless you use calloc (ewww).
[21:50:53] <twkm> further neither is thread local.  only static duration is implicitly initialized, all others you must explicitly initialize (not possible for allocated duration).
[21:51:09] *** Quits: mrgz (~mrgz@201-42-0-191.dsl.telesp.net.br) (Quit: leaving)
[21:51:47] *** Joins: mrgz (~mrgz@201-42-0-191.dsl.telesp.net.br)
[21:57:09] *** Joins: arinov (~arinov@213.194.126.155)
[21:59:12] *** Quits: strajder (~strajder@user/strajder) (Quit: leaving)
[21:59:16] *** Joins: strajder_ (~strajder@user/strajder)
[21:59:25] *** Quits: strajder_ (~strajder@user/strajder) (Client Quit)
[21:59:37] *** Joins: constxo (~brad@142.134.38.68)
[21:59:39] *** Joins: strajder (~strajder@user/strajder)
[22:00:48] *** Quits: bolovanos_ (~bolovanos@user/bolovanos) (Ping timeout: 256 seconds)
[22:00:49] *** Quits: Darkcoal (~user@167.86.149.23) (Quit: Darkcoal)
[22:00:59] *** Joins: Darkcoal (~user@2001:16a2:7a75:f800:7ae2:9bb1:6de0:1674)
[22:01:22] *** Quits: MajorBiscuit (~MajorBisc@62-52-102.netrun.cytanet.com.cy) (Ping timeout: 256 seconds)
[22:06:17] *** Joins: boB_K7IQ (~boB_K7IQ@152.44.147.180)
[22:06:21] *** Joins: Red (~Red@97.109-247-81.customer.lyse.net)
[22:11:57] *** Quits: Jong (~Jong@163.114.132.6) (Ping timeout: 240 seconds)
[22:12:01] *** Quits: Kit (~u0_a391@cpe-76-190-178-139.neo.res.rr.com) (Read error: No route to host)
[22:12:27] *** Joins: Kit (~u0_a391@2603-6010-a141-6fa3-88f4-4cc9-a7b6-7571.res6.spectrum.com)
[22:13:25] *** Quits: X-Scale (~ARM@31.22.167.116) (Ping timeout: 265 seconds)
[22:13:44] *** Joins: X-Scale (~ARM@206.46.158.5.rev.vodafone.pt)
[22:13:50] *** Quits: constxo (~brad@142.134.38.68) (Ping timeout: 256 seconds)
[22:14:40] *** Quits: kish` (~sid742412@user/aqua) (Remote host closed the connection)
[22:16:15] *** Joins: constxo (~brad@142.134.38.68)
[22:17:40] <fizzie> No, thread-local is.
[22:17:42] *** Joins: X-Scale` (~ARM@83.223.243.175)
[22:17:53] *** Joins: Hexmind (~Hexmind@modemcable049.25-131-66.mc.videotron.ca)
[22:18:30] <fizzie> C11 6.7.9p10: "If an object that has automatic storage duration is not initialized explicitly, its value is indeterminate. If an object that has static or thread storage duration is not initialized explicitly, then: [the rules]."
[22:19:48] *** Quits: X-Scale (~ARM@206.46.158.5.rev.vodafone.pt) (Ping timeout: 240 seconds)
[22:19:49] *** X-Scale` is now known as X-Scale
[22:20:53] *** Quits: codethulu (~codethulu@cpe-173-174-108-148.austin.res.rr.com) (Quit: The computer fell asleep)
[22:22:13] <twkm> damn, i always seem to flip that one.
[22:22:15] *** Joins: steve__ (~steve@ool-182c2b80.dyn.optonline.net)
[22:23:34] *** Joins: floatcomplex (~floatcomp@wireguard/tunneler/floatcomplex)
[22:24:24] *** Joins: karakedi (~eAC53C340@user/karakedi)
[22:28:03] *** Joins: cousteau (~cousteau@user/cousteau)
[22:28:46] *** Joins: Guest24 (~textual@63.119.181.194)
[22:30:28] *** Quits: scoobydoo (~scooby@user/scoobydoo) (Read error: Connection timed out)
[22:31:41] *** Quits: Guest24 (~textual@63.119.181.194) (Read error: Connection reset by peer)
[22:32:25] *** Joins: Juliu (~Juliu@2a02:810b:c640:3ec0:152:f162:2b1b:5a42)
[22:32:58] *** Joins: scoobydoo (~scooby@user/scoobydoo)
[22:34:47] *** Quits: sonny (~sonny@8.6.144.252) (Ping timeout: 252 seconds)
[22:34:55] <MrMobius> what's the code called that the compiler inserts and runs before main?
[22:35:07] *** Joins: Guest24 (~textual@63.119.181.194)
[22:35:56] <MrMobius> and/that
[22:37:01] *** Quits: Darkcoal (~user@2001:16a2:7a75:f800:7ae2:9bb1:6de0:1674) (Quit: Darkcoal)
[22:37:24] *** Joins: brad_mssw (~bhouse@204.156.180.37)
[22:39:37] *** Quits: shivesh (~shivesh@user/shivesh) (Quit: leaving)
[22:43:35] *** Joins: guest17 (~guest17@host116-34-231-152.tigobusiness.com.ni)
[22:44:07] *** Quits: guest17 (~guest17@host116-34-231-152.tigobusiness.com.ni) (Client Quit)
[22:45:07] *** Quits: Haxxa (~Haxxa@202-130-211-204.ip4.superloop.com) (Quit: Haxxa flies away.)
[22:47:20] *** Joins: Haxxa (~Haxxa@202-130-211-204.ip4.superloop.com)
[22:47:23] <System_Error> MrMobius: welcome to strange world of "startup code"
[22:48:18] <fizzie> You also see "CRT" used in general for that, because of the traditional name `crt0.o` for the object file for it. https://en.wikipedia.org/wiki/Crt0
[22:48:18] *** Joins: whatsupdoc (uid509081@id-509081.hampstead.irccloud.com)
[22:48:53] *** Quits: terminalpusher (~terminalp@2a01:586:968a:1:760a:53e8:676:373a) (Remote host closed the connection)
[22:49:36] <floatcomplex> you only need to know about this nonsense if you are using microcontrollers, certain gcc extensions, or (one of these things is not like the otherw) c++
[22:49:38] <System_Error> Basically it creates envidonment "normal C" expects, etc. Before this point assumptions and environment could differ.
[22:50:02] <System_Error> floatcomplex: also writing kernel/boot loader, want something unusual, etc.
[22:51:31] <System_Error> but for normal program in OS that just added by compiler automatically
[22:53:10] <MrMobius> thanks!
[22:53:13] *** Quits: Artea- (~Lufia@artea.com.pt) (Quit: ZNC 1.6.2 - http://znc.in)
[22:53:24] <MrMobius> thinking about mixing 16 and 32 bit code on a microcontroller so it got me wondering
[22:53:27] *** Joins: Artea (~Lufia@artea.com.pt)
[22:55:48] <System_Error> MrMobius: that's where you also have to inform self about ABI of calls and if that compatible... 
[22:55:59] <MrMobius> right
[22:57:21] *** Quits: Guest24 (~textual@63.119.181.194) (Quit: Textual IRC Client: www.textualapp.com)
[22:58:17] *** Quits: constxo (~brad@142.134.38.68) (Ping timeout: 240 seconds)
[22:58:49] *** Joins: kish` (~sid742412@user/aqua)
[22:59:28] <System_Error> on mcu startup at least like zeroes BSS and moves RW data from flash to RAM. Before this it isn't what standard C expects so you cant just call main()
[23:01:31] *** Quits: System_Error (~SystemErr@user/systemerror) (Remote host closed the connection)
[23:01:57] *** Joins: System_Error (~SystemErr@user/systemerror)
[23:02:00] *** Joins: brad_mssw|mac (~bhouse@12.190.236.74)
[23:02:19] *** Joins: sonny (~sonny@8.6.144.252)
[23:02:21] *** Quits: tejr (~tejr@user/tejr) (Ping timeout: 276 seconds)
[23:03:47] *** Joins: tejr (~tejr@user/tejr)
[23:04:50] *** Quits: brad_mssw (~bhouse@204.156.180.37) (Ping timeout: 256 seconds)
[23:05:32] *** Quits: inlight (~inlight@user/inlight) (Ping timeout: 240 seconds)
[23:05:32] *** Quits: brad_mssw|mac (~bhouse@12.190.236.74) (Read error: Connection reset by peer)
[23:05:46] *** Joins: inlight (~inlight@157.35.8.6)
[23:05:46] *** Quits: inlight (~inlight@157.35.8.6) (Changing host)
[23:05:46] *** Joins: inlight (~inlight@user/inlight)
[23:06:03] *** Joins: brad_mssw|mac (~bhouse@12.190.236.74)
[23:08:01] *** Joins: brad_mssw|mbp (~bhouse@204.156.181.50)
[23:09:23] *** Quits: joev (~joev@pool-108-34-251-123.prvdri.fios.verizon.net) (Changing host)
[23:09:23] *** Joins: joev (~joev@user/joev)
[23:10:37] *** Quits: brad_mssw|mac (~bhouse@12.190.236.74) (Ping timeout: 240 seconds)
[23:11:18] *** Joins: shalok_ (~shalok@user/shalok)
[23:11:32] *** Quits: shalok (~shalok@user/shalok) (Ping timeout: 240 seconds)
[23:11:48] *** shalok_ is now known as shalok
[23:21:33] *** Joins: MajorBiscuit (~MajorBisc@62-52-102.netrun.cytanet.com.cy)
[23:24:59] *** Joins: diiirt6 (~diiirt@user/diiirt)
[23:25:45] *** Quits: jda (~jadra@chai.0xbad.coffee) (Quit: ZNC - https://znc.in)
[23:26:25] *** Quits: kdc (~kdc@196.211.197.159) (Remote host closed the connection)
[23:27:55] *** Joins: Hax0r (~Hax0r@46.38.81.225)
[23:28:21] *** Quits: diiirt (~diiirt@user/diiirt) (Ping timeout: 276 seconds)
[23:28:22] *** diiirt6 is now known as diiirt
[23:29:47] *** Quits: Norkle (~norkle@admin.nasa-g0v.com) (Ping timeout: 252 seconds)
[23:29:57] *** Joins: jda (~jadra@chai.0xbad.coffee)
[23:34:09] *** Joins: Dave_Rizzle (~Dave@105-131-165-046.ip-addr.inexio.net)
[23:34:51] *** Quits: teepee (~teepee@openscad/teepee) (Ping timeout: 276 seconds)
[23:34:54] *** Quits: m0shbear (~nope@205.185.119.231) (Ping timeout: 260 seconds)
[23:35:05] *** Joins: teepee (~teepee@openscad/teepee)
[23:35:35] *** Joins: m0shbear (~nope@205.185.119.231)
[23:36:13] *** Joins: constxo (~brad@142.134.38.68)
[23:37:04] <MrMobius> along the lines of my last question, can you link a binary without the crt? i know this is a weird thing to ask
[23:38:00] <System_Error> MrMobius: yes.
[23:38:29] <System_Error> Freestanding mode could eventually get you only your code in extreme case. But in that case you have to do startup's job.
[23:38:53] *** Quits: Dave_Rizzle (~Dave@105-131-165-046.ip-addr.inexio.net) (Quit: Leaving...)
[23:39:03] *** Joins: ckdCreations (~ckdCreati@147.55.133.131)
[23:39:06] *** Quits: brad_mssw|mbp (~bhouse@204.156.181.50) (Quit: This computer has gone to sleep)
[23:39:47] <MrMobius> thats fine
[23:40:46] <System_Error> And it takes some nonstandard tricks, like e.g. asking linker to provide you some "variables" (filled at link time by linker) hinting where sections are, etc. This well exceeds "standard C".
[23:41:29] *** Quits: Hax0r (~Hax0r@46.38.81.225) (Remote host closed the connection)
[23:41:41] *** Joins: night_wulfe_ (~wulfe@cpe-174-103-156-213.cinci.res.rr.com)
[23:44:37] *** Quits: night_wulfe (~wulfe@cpe-174-103-156-213.cinci.res.rr.com) (Ping timeout: 240 seconds)
[23:44:42] *** Joins: Norkle (~norkle@admin.nasa-g0v.com)
[23:47:19] *** Joins: CaCode (~CaCode@user/cacode)
[23:49:03] *** Joins: kitsunenokenja (~kitsunech@68.91.220.96)
[23:53:24] *** Quits: oriba (~oriba@dynamic-077-183-053-093.77.183.pool.telefonica.de) (Quit: https://quassel-irc.org - Chat comfortably. Anywhere.)
[23:53:50] *** Quits: Kit (~u0_a391@2603-6010-a141-6fa3-88f4-4cc9-a7b6-7571.res6.spectrum.com) (Read error: No route to host)
[23:53:58] *** Joins: u0_a391 (~u0_a391@2603-6010-a141-6fa3-88f4-4cc9-a7b6-7571.res6.spectrum.com)
[23:55:55] *** Quits: ko (~i.am@user/marlboro) (Quit: I come down here for a fat woman and that's what I'm havin.)
[23:57:38] *** Joins: Hax0r (~Hax0r@46.38.81.225)
[23:59:50] *** Joins: pncl1 (~Hax0r@46.38.81.225)
[23:59:55] *** Quits: pncl1 (~Hax0r@46.38.81.225) (Remote host closed the connection)
