[00:08:37] *** Quits: Guest31 (~Guest31@c-68-51-151-148.hsd1.mi.comcast.net) (Quit: Client closed)
[00:11:28] <Nasp> Hitler did nothing wrong
[00:14:55] <JakeSays> those missiles are getting much closer to the camera
[00:15:31] <blez> what are they shooting anyway?
[00:16:22] *** Joins: Tazmainian (~Tazmainia@2001:1c02:1701:6a00::1003)
[00:16:56] <Nasp> It isnt 4th of july yet
[00:18:13] *** Quits: Tazmainian (~Tazmainia@2001:1c02:1701:6a00::1003) (Client Quit)
[00:19:56] *** Quits: Tazy (~Tazmainia@83.80.169.186) (Ping timeout: 245 seconds)
[00:20:46] <JakeSays> blez: i'm guessing either javelins or stingers
[00:21:11] <MatthiasVance> So they are shooting *from* Kyiv, right
[00:21:13] <JakeSays> but i have little to base that guess on
[00:21:33] <irwiss> ah it's time of day for godwin's law :P
[00:21:50] <JakeSays> MatthiasVance: there's both going on. i'm assuming the rising missiles are ukrainians and the descending ones are russians
[00:21:59] <MatthiasVance> Well, yeah
[00:22:01] <JakeSays> irwiss: what law is that
[00:22:04] <MatthiasVance> I only just now saw one go
[00:22:15] <irwiss> JakeSays: https://en.wikipedia.org/wiki/Godwin%27s_law
[00:22:33] <MatthiasVance> Why don't cities have AA?
[00:22:47] <MatthiasVance> Like, by default I mean
[00:23:12] <MatthiasVance> Like a moat
[00:23:48] <lz_> Nasp: hitler was just denazifying poland
[00:23:54] <irwiss> cause most of europe doesn't live in ww2 trenches
[00:24:19] <MatthiasVance> I think that's fair if all parties don't have moats
[00:24:49] <lz_> he was only defending germans in other countries
[00:27:30] <cloudbender> OK seriously, I love a bit of political chat, but mentioning that psychotic, cocaine addicted, genocidal maniac as though he were a human being is an absolute non-sequitur.
[00:27:41] <lz_> cloudbender: hitler or putin?
[00:27:55] <bomb> cloudbender I'm sorry but JakeSays is a regular here
[00:28:00] <cloudbender> Not to mention his late-stage syphillus
[00:28:16] <bomb> also he only do shrooms, no cocaine
[00:28:44] <bomb> https://www.youtube.com/watch?v=4uPDfuC3Jck
[00:30:03] <lz_> I remember some guy here who was actually defending nazis; forgot his name or don't want to say it, but I haven't seen him in maybe 6 months or a year
[00:30:10] <lz_> and it's great that way
[00:30:23] <JakeSays> MatthiasVance: well, they're not fighting aircraft.
[00:31:01] <MatthiasVance> I meant anti-air-anything, not necessarily aircraft
[00:31:38] <JakeSays> MatthiasVance: everything going up is AA (mostly anti-missile)
[00:32:15] <bomb> he meant Patriots
[00:32:52] <JakeSays> patriots aren't effective for small missiles, etc
[00:32:53] <MatthiasVance> JakeSays: Yeah but I'm assuming that's a manual thing?
[00:33:08] <JakeSays> MatthiasVance: yeah they are
[00:33:09] <MatthiasVance> Sure maybe with tracking, but manual detection?
[00:33:11] <MatthiasVance> ah yeah
[00:33:24] <JakeSays> they're MANPADS
[00:33:59] <lz_> I remember some discord server with ppl from my city, I was hoping to make friends; then some guy came with a profile picture of some nazi guy. He said "no no im not nazi lol i just like historical things"
[00:34:03] <bomb> some are manual, some are fully automatic
[00:34:05] <lz_> mods didn't do anything about it so I left
[00:34:40] <bomb> https://www.careeraddict.com/5-most-difficult-jobs-in-the-world
[00:34:42] *** Quits: cliluw (~cliluw@47.147.77.43) (Ping timeout: 252 seconds)
[00:34:45] <bomb> look we're #4
[00:34:48] <JakeSays> which i believe stands for man portable air defense
[00:35:08] <bomb> DIAPERS
[00:35:29] *** Joins: cliluw (~cliluw@47.147.77.43)
[00:35:43] <lz_> I have this concept of dilute responsabilities, where each small action or non-action of everyone contributes to this world being total shit
[00:35:53] <MatthiasVance> Yes
[00:36:10] <JakeSays> bomb: the russians wear those
[00:36:38] <bomb> JakeSays Kornets are better than Javelins, but they require more manual handling, thus more prone to failure
[00:37:08] <xb0o2> The non-action of not drinking is certainly turning my Friday night into shit.
[00:37:27] <MatthiasVance> YES
[00:37:33] <MatthiasVance> xb0o2: Let's make up for that tomorrow
[00:37:50] <MatthiasVance> But that means my wife has to stop coughing for one night and just sleep ffs
[00:38:02] *** Quits: bomb (~bomb@user/bomb) (Remote host closed the connection)
[00:38:04] <lz_> the day I start drinking again I might as well just be dead
[00:38:23] <MatthiasVance> lz_: There are really delicious non-alcoholic cocktails!
[00:38:26] *** Joins: bomb (~bomb@user/bomb)
[00:38:52] <MatthiasVance> lz_: Ban all the bad things? :)
[00:39:00] <MatthiasVance> Someone should do a movie on that
[00:39:17] <lz_> MatthiasVance: what bad thing?
[00:39:23] <MatthiasVance> Some kind of "perfect" societty
[00:39:24] <MatthiasVance> *society
[00:39:32] *** Quits: MaNa2k (~MaNa2k@224.81-166-66.customer.lyse.net) (Ping timeout: 240 seconds)
[00:39:44] <MatthiasVance> lz_: Everything that's "bad" one way or another for your life or body :p
[00:39:53] <bomb> there is a TV show on Amazon Prime in a dystopia where Hitler won the WWII
[00:39:54] <MatthiasVance> I wonder what society would look like
[00:39:59] <lz_> MatthiasVance: I'm talking of very small things, like not standing up to some bully, not protesting when some journalist get killed, not giving a shit if your election system is fucked, etc
[00:40:12] <lz_> MatthiasVance: in that subtle way, most russians are guilty of it
[00:40:14] <MatthiasVance> lz_: Yes I was still on the topic of alcohol
[00:40:26] <MatthiasVance> Since you said you better not drink :)
[00:40:34] <lz_> MatthiasVance: I was just talking for myself
[00:40:36] <MatthiasVance> ah
[00:41:06] <lz_> I'm not in favor of banning alcohol, eventhough I have considered it when I was younger
[00:41:22] <JakeSays> bomb: requiring more manual handling and being prone to failure don't strike me as better
[00:41:27] <lz_> now I think the alcohol problem is mostly a social one. People who end up on that road are just people without a social network
[00:41:46] <lz_> s/just/mostly
[00:42:05] <lz_> I reckon some people who have friends family etc, become alcoholic anyway, but then it's an education problem too
[00:42:15] <lz_> +prevention etc
[00:42:53] <lz_> I still think about that rat park experiment a lot
[00:42:59] <bomb> JakeSays more power, longer range
[00:44:16] <lz_> that's how I came up with this dilute responsability thing; thinking of how everyone contributed to it, each in a small way (sometimes big though)
[00:45:32] *** Joins: Cecen (~Cecen@cpe-172-89-171-109.socal.res.rr.com)
[00:45:44] <lz_> also maybe that's why I sometimes sound very intolerant; I realize how some behaviors have actual consequences
[00:47:03] <lz_> be it disinformation, antiscience beliefs, etc
[00:47:13] <MatthiasVance> What's the rat park experiment lz_ ?
[00:47:24] <MatthiasVance> lz_: Yeah indeed
[00:47:29] <lz_> MatthiasVance: rats that get hooked on morphines only if they are isolated from others
[00:47:50] <irwiss> that's super clever solution heh https://www.reddit.com/r/funny/comments/thca4b/funny_but_appreciating_her_hard_work/
[00:48:02] <irwiss> i liked the stability pendulum chair :D
[00:48:28] <brianonymous> is rat park dif from rat utopia?
[00:49:15] <brianonymous> that one was where they gave the rats the perfect rat living utopia, and they ended up murdering and eating each other
[00:49:25] <JakeSays> irwiss: ah interesting law
[00:49:57] <lz_> brianonymous: lol I didn't know this one. Sounds strangely familiar with what humans are doing though
[00:52:27] <bomb> I started watching The Office yesterday. it's hilariously dumb
[00:52:34] <MatthiasVance> US version?
[00:52:38] <MatthiasVance> It's fucking amazing
[00:52:38] <bomb> yeah
[00:52:38] <MatthiasVance> :D
[00:52:54] <bomb> didn't know there was Brit version too XD
[00:53:04] <brianonymous> for good reason
[00:53:07] <MatthiasVance> bomb: I'm guessing you've seen The IT Crowd?
[00:53:40] <bomb> https://www.youtube.com/watch?v=LUA5_NwJvLU
[00:53:53] <bomb> MatthiasVance nah. noted
[00:54:04] <bomb> I like workplace sitcoms XD
[00:54:14] <lz_> MatthiasVance: one thing with IT crowd I couldn't stand were the recorded laugh
[00:54:18] <lz_> iirc
[00:54:35] <MatthiasVance> bomb: Ah you want more? Let me think .. I was watching a dumb shop one
[00:54:55] <JakeSays> bomb: LOL the office is one of my most favorite shows
[00:55:02] *** Quits: jamea (~jamea@200.68.140.3) (Ping timeout: 240 seconds)
[00:55:31] <JakeSays> US office. can't watch the brit one. can't stand whats-his-face
[00:55:56] <MatthiasVance> Also did anyone watch Shape of Water (movie) .. wtf was that!
[00:56:02] <xb0o2> It was pants.
[00:56:04] <MatthiasVance> It was all over the place
[00:56:10] <brianonymous> is that were the lady bangs the fish guy?
[00:56:13] <MatthiasVance> Yeah
[00:56:17] <brianonymous> did not like
[00:56:17] <JakeSays> MatthiasVance: sounds familiar
[00:56:27] <bomb> JakeSays https://www.youtube.com/watch?v=Kuy1Z4wqQ4w
[00:56:28] <irwiss> imo IT crowd is better than the office in every way
[00:56:31] <MatthiasVance> From the trailer it sounded like it could be a romantic drama or something
[00:56:40] <JakeSays> .. woman banging fish? doesn't sound good
[00:56:42] <brianonymous> you wanna see a recent, good, truly fucked up movie? Fresh.
[00:56:54] <bomb> British IT Crowd or American IT Crowd
[00:57:04] <MatthiasVance> There is only one IT crowd :O :o :O
[00:57:07] <lz_> bomb: I think both are very good in their own way
[00:57:11] <lz_> wait I meant the office
[00:57:19] <irwiss> i don't think i saw even the trailer for american it crowd
[00:57:29] <cloudbender> I liked Park's & Rec
[00:57:30] <bomb> there is none XD
[00:57:38] <irwiss> don't think anyone can top richard for his role anyway
[00:57:38] <bomb> Parks & Rec aye
[00:57:41] <bomb> it's gonna be my next
[00:57:42] <cloudbender> Ron Swanson is my hero
[00:57:49] <JakeSays> cloudbender: me too!
[00:57:50] <irwiss> he plays the perfect geek perfectly
[00:57:55] <brianonymous> i binged Parks and Rec last year, worth it
[00:57:56] <lz_> brianonymous: I read the synopsis of "fresh" and that'll be a pass for me :D
[00:58:01] <JakeSays> ^
[00:58:05] <brianonymous> lz_: lol
[00:58:10] <brianonymous> its a very unique thriller
[00:58:13] <brianonymous> and fucking gross, lol
[00:58:15] <cloudbender> lol 'Duke Silver'
[00:58:21] <JakeSays> but then i have a thing for rashida jones
[00:58:28] <bomb> are US and Brit Offices have the same screenplay, like Shameless?
[00:58:31] <cloudbender> OMG Rashida Jones
[00:58:50] <brianonymous> shes my age. that means we can date
[00:58:53] <cloudbender> One of the five most beautiful Women ever.
[00:58:53] <lz_> bomb: no, it starts quite similar but then it's completely different iirc
[00:58:57] * brianonymous calls Rashida
[00:59:19] <JakeSays> brianonymous: um, no, bitch. you already have a date apparatus
[00:59:26] <brianonymous> oh yeah
[00:59:43] <JakeSays> besides, she only likes old fat guys
[00:59:56] <merced> https://thehackernews.com/2022/03/popular-npm-package-updated-to-wipe.html
[01:00:05] <brianonymous> not buff, manly same aged guys?
[01:00:08] <cloudbender> OK so, a quick opinion from those who know about the internal implementations ...
[01:00:09] <cloudbender> https://gist.github.com/cloudbender/6c739e045e405dab1d4d1d8cbf251967
[01:00:12] <merced> bomb: p&r ftw also british version
[01:00:19] <JakeSays> brianonymous: nope.
[01:00:27] <bomb> alright guys. good night!
[01:00:30] *** Quits: bomb (~bomb@user/bomb) (Quit: o/)
[01:00:48] <cloudbender> o/
[01:00:51] <merced> cloudbender: trick question
[01:00:57] <JakeSays> https://www.youtube.com/watch?v=Val1Evp9HMo - check out cam 7
[01:01:07] <merced> cloudbender: the best way to do it is pin the string in unsafe code
[01:01:14] *** Joins: Tazy (~Tazmainia@2001:1c02:1701:6a00::1003)
[01:01:34] <cloudbender> the unsafe code part is problematic
[01:01:49] <merced> unsafe code is plenty safe if you know what you're doing
[01:02:01] <JakeSays> cloudbender: use a proper float regex
[01:02:02] <brianonymous> cloudbender: fastest.... forwut
[01:02:25] <brianonymous> oh i see
[01:02:28] <cloudbender> It seems like the regex model will do less work
[01:02:38] <irwiss> why would you use a regex? just float.TryParse and call it a day
[01:02:55] <JakeSays> cloudbender: also don't create a regex every time
[01:02:58] <brianonymous> i usually dont like to say regex and fast in the same sentence
[01:03:27] <merced> while even compiled regex would be ok, it doesn't get optimized into a simple for loop
[01:03:36] <irwiss> brianonymous: tbh you don't say strings and fast in same sentence, convert to actual floats as soon as possible and you get 'fast' :P
[01:03:44] <JakeSays> i have a speedy float parser somewhere
[01:03:44] <Nasp> Regex everything!
[01:03:46] <brianonymous> irwiss: fair point in c# world
[01:04:01] <Nasp> cloudbender:  Can't you just benchmark it instead of asking us
[01:04:10] <Nasp> And i would assume Regex is always the slowest
[01:04:11] <cloudbender> yes I could do that
[01:04:48] <Nasp> benchmark.net it
[01:04:52] <Nasp> Good tool to know how to use
[01:04:59] <cloudbender> nice
[01:05:04] <irwiss> and don't use array for contains, at least use a hashtable... although i feel that performance is really the last thing that's gonna have any effect in that codebase XD
[01:05:05] <cloudbender> Thanks for the tip
[01:05:31] <merced> https://github.com/dotnet/runtime/blob/main/src/libraries/System.Linq/src/System/Linq/AnyAll.cs#L9
[01:06:05] <brianonymous> unless you are driving this a million times a sec, should you worry?
[01:06:05] <cloudbender> hmmm
[01:06:26] <merced> vs this https://referencesource.microsoft.com/#System/regex/system/text/regularexpressions/RegexCompiler.cs,0b76a51de700d9f8
[01:06:57] <merced> & https://referencesource.microsoft.com/#System/regex/system/text/regularexpressions/Regex.cs,2a711482410c12fa
[01:07:24] <merced> linq is fairly well optimized as-is, i'm not sure how agressive inlining is tho
[01:07:27] <JakeSays> irwiss: why wouldn't you use array for contains?
[01:07:50] <JakeSays> it's going to be much faster than a hashtable for anything under ~10 entries
[01:07:51] <irwiss> JakeSays: why use O(n) instead of O(almost 1) when the memory cost is irrelevant?
[01:08:01] <merced> maybe the memory cost is relevant
[01:08:14] <JakeSays> because for small containers iteration is faster than hashing
[01:08:52] <brianonymous> id back up a step, cuz it smells like a tokenizer. and itd probably end up being an array of more complex data in the end.. then id just walk the token list
[01:09:16] <JakeSays> brianonymous: so far his examples haven't been all that complex
[01:09:18] <irwiss> or just float.tryparse and work with actual floats instead of halfassing string parsing :P
[01:09:25] <JakeSays> but if they were, yeah, i'd write a parser
[01:09:31] <brianonymous> it looks like the stem cells of a calculator
[01:09:42] <merced> why not just [really bad idea]
[01:09:46] <irwiss> also -+-+0 is technically "valid" but not really
[01:09:49] <JakeSays> brianonymous: he's parsing report data
[01:09:50] <cloudbender> I have a dozen or so character sets resembling 'floaties'.  None exceed 40 chars in length
[01:09:52] <brianonymous> o
[01:09:54] *** Quits: CodePoint (~CodePoint@107-208-128-79.lightspeed.tukrga.sbcglobal.net) (Ping timeout: 252 seconds)
[01:10:10] *** Joins: alguien (~alguien@user/alguien)
[01:10:19] <cloudbender> And I want to settle on a consistent pattern
[01:10:29] <Nasp> irwiss:  0 almost 1 :D
[01:10:29] <cloudbender> Thanks for the opinions, sorry to distract
[01:10:32] <Nasp> nice
[01:10:40] <merced> O(0 lim 1)
[01:10:45] <JakeSays> cloudbender: that's not the best approach. the best is to use the right pattern for each situation
[01:11:10] <merced> it depends on how much data you're going through too
[01:11:28] <brianonymous> what do you actually need to do.. do.. doodo
[01:11:35] <merced> the cycles you save on a dataset of even 1MM is insignificant
[01:11:46] <cloudbender> I'm parsing fly-shit from pepper
[01:11:50] <irwiss> Nasp: yeah... or 0e0 which is technically a valid "float" sorta but not really, i can find tons of patterns like that :D
[01:12:17] <merced> return float.TryParse(wword, out var _);
[01:12:44] <merced> wait, what do you mean by "different charsets"
[01:12:53] <brianonymous> if there is a consistent pattern, couldnt you just use a regex search/replace?
[01:13:04] <brianonymous> on the whole stinkin set
[01:13:11] <irwiss> merced: no cultureinfo, boo :P
[01:13:20] <merced> xP
[01:13:46] <merced> oh there's also this public static bool TryParse (ReadOnlySpan<char> s, System.Globalization.NumberStyles style, IFormatProvider? provider, out float result);
[01:13:48] <JakeSays> brianonymous: i usually hand write parsers for things like this
[01:14:15] <brianonymous> i guess part of the prb is i dont know wtf is going on, lol
[01:14:22] * brianonymous will observe
[01:14:26] <merced> fuck all of that, just write it in assembly
[01:14:42] <JakeSays> brianonymous: you know as much as the rest of us
[01:14:43] <merced> pinvoke it
[01:14:55] <irwiss> just push it to amazon mechanical turk and call it a day
[01:14:58] * merced ponders the marshalling cost
[01:15:02] <merced> irwiss++
[01:15:28] <JakeSays> merced: marshaling costs would be almost 0
[01:15:43] <JakeSays> not that i'm suggesting it should be written in assembly
[01:15:47] <merced> :P
[01:16:37] <Nasp> irwiss:  We found a bug in .NET 5 that sacrifice a lot of memory for faster lookup
[01:16:38] <Nasp> :D
[01:16:47] <merced> meh ram is cheap
[01:16:57] <Nasp> As in gigabytes
[01:17:02] <cloudbender> This is a sample of one of the reports I scrape for data
[01:17:05] <cloudbender> https://gist.github.com/cloudbender/246561b4fb512c9b67db76cd6c42561e
[01:17:07] <irwiss> Nasp: yeah but you'll find it hard to push hashtable with ~15ish char entries to take gigabytes :D
[01:17:33] <Nasp> irwiss:  But this took 3-17gb
[01:17:41] <Nasp> For a simple lookup table
[01:17:47] <merced> cloudbender: jesus is that generated by one of those IBM mainframes
[01:18:14] <cloudbender> it's PCL output redirected to a file
[01:18:16] <brianonymous> its old school fixed-len
[01:18:20] <brianonymous> easy beans
[01:18:21] <Nasp> merced:  I think this bug would require you to need 100GB for aspnetcore routing table :D
[01:18:45] <brianonymous> chop and trim
[01:18:46] <merced> Nasp: microsoft solves for that with their high-memory instances in azure
[01:18:51] <merced> cloudbender: ohhhhhhhhhh
[01:19:02] <merced> jesus i havent touched PCL in decades
[01:19:49] <ap5> Nasp, that sounds nasty
[01:19:51] <cloudbender> I have no access to the internals from the source software, but the authoer did a good job of consistent reporting output.
[01:19:58] <Nasp> merced:  Still a bit too memory tbh
[01:20:01] <Nasp> Also we ditched Azure :D
[01:20:04] <Nasp> ap5:  It was quite nasty
[01:20:07] <ap5> :D
[01:20:18] <merced> Nasp: that sounds like a "not microsoft's problem"
[01:20:18] <Nasp> Still not fixed and MS didn't backport it from .NET 6
[01:20:25] <Nasp> Its a bug in the framework so it is
[01:20:35] <merced> oh right
[01:20:40] <merced> like they care
[01:20:45] <brianonymous> its all fixed len stuff, so you just gotta start doing the column count dance
[01:20:45] <ap5> More info :D It sounds fun
[01:20:48] <merced> cloudbender: i see
[01:21:16] <Nasp> merced:  David Fowler didn't seem to recognize it as a bug to begin with and called it a feature
[01:21:18] <merced> cloudbender: how many of these does your thing gotta churn through
[01:21:21] <brianonymous> hell, excel would even eat this
[01:21:24] <merced> Nasp: there you go!@
[01:21:42] <merced> lol COM overhead of automating excel
[01:22:00] <brianonymous> i mean like real excel.. and then you could save to csv or some other such stuff
[01:22:32] <irwiss> why? excel is a real database
[01:22:34] <Nasp> merced:  Well how much ram do you want to sacrifice
[01:22:48] <irwiss> it's not mongo but almost web scale
[01:23:10] <cloudbender> So, my obsession over code models is in the event that $100,000 in inventory goes missing and someone tries to blame the software guy.  People suck.
[01:23:12] <ap5> irwiss, that ... is a good one :D
[01:23:44] <cloudbender> And Lawyers suck moar.
[01:23:55] <merced> cloudbender: that's why you write a unit test suite
[01:24:14] <merced> Nasp: idk my company wants me to use cosmosdb, after running the numbers it seems they love burning money in a firepit
[01:24:32] <ap5> merced, cosmosdb is expensive af
[01:24:34] <brianonymous> cloudbender: id go line by line, and Span each column
[01:24:43] <merced> $250,000 per month for my use case
[01:24:47] <merced> so dumb
[01:24:55] <merced> atlas is offering literally 80k
[01:25:04] <Nasp> merced:  cosmosdb seems like ap ile of poo
[01:25:06] <Nasp> merced:  Haha yeah
[01:25:19] <Nasp> brianonymous:  Was it you that was going to do datadog?
[01:25:30] <brianonymous> nasp: yup, next meeting end of this month
[01:25:34] <Nasp> :D
[01:25:41] *** Joins: cloudbender31 (~cloudbend@user/cloudbender)
[01:25:42] <Nasp> We just blew 2 x past our initial estimated from DataDog
[01:25:54] <brianonymous> good to know
[01:26:50] <Nasp> And we aren't even done shipping all logs and metrics yet
[01:26:56] <merced> oh man
[01:26:58] <merced> you should see how much new relic costs
[01:27:03] <Nasp> We also use new relic
[01:27:09] <brianonymous> same
[01:27:13] *** Quits: cloudbender31 (~cloudbend@user/cloudbender) (Client Quit)
[01:27:24] <merced> we switched off DD last year
[01:27:32] <Nasp> But yeah the DD is really expensive
[01:27:43] <Nasp> I'm wondering if CTO can get the cost approved
[01:27:48] *** Joins: cloudbender36 (~cloudbend@user/cloudbender)
[01:27:49] <Nasp> He wants to ditch all the existing cheapter monitoring now
[01:28:18] <merced> i really really like new relic
[01:28:21] <merced> i fucking hated it at first
[01:28:38] <Nasp> i've always hated it
[01:28:50] *** Quits: cloudbender (~cloudbend@user/cloudbender) (Ping timeout: 250 seconds)
[01:29:27] <cloudbender36> Good room people. Thanks for the advice.
[01:29:36] <cloudbender36> o7
[01:29:38] <merced> you're welcome to chill
[01:30:02] <merced> we don't always talk about nerd shit
[01:30:11] <merced> usually talking about shit like nerds
[01:30:18] <cloudbender36> gotta go scrub meh taters and get a shave :)
[01:32:27] *** Quits: alguien (~alguien@user/alguien) (Ping timeout: 252 seconds)
[01:36:02] *** Quits: Tazy (~Tazmainia@2001:1c02:1701:6a00::1003) (Ping timeout: 240 seconds)
[01:38:24] <JakeSays> merced: 250k/mo? wtf
[01:38:50] *** Joins: Lukky (~luc@2607:fa49:b93f:b300:ccc8:668e:7ea6:142)
[01:39:04] <Lukky> Happy Friday Afternoon!!!!
[01:39:19] <merced> 240k finds per hour, 120k replaces, gigs and gigs and gigs, thounsands of users
[01:40:42] <merced> my use case is also insanely unsuited for cosmos
[01:42:52] *** Joins: Tazy (~Tazmainia@2001:1c02:1701:6a00::1003)
[01:43:44] <irwiss> $4k for top end gpu lol https://www.reddit.com/r/hardware/comments/th4i13/videocardz_canadian_retailer_lists_asus_geforce/
[01:45:11] <lz_> it's been this expensive for a while
[01:50:58] *** Joins: alguien (~alguien@user/alguien)
[01:53:23] <merced> Lukky: happy friday btw
[01:54:29] <brianonymous> o, hi there Lukky
[01:54:58] * Lukky waves
[01:57:06] <JakeSays> hey it's the ol' bastard
[01:57:12] *** Joins: jamea (~jamea@189.237.47.249)
[01:57:38] <Lukky> guilty
[01:57:56] <Lukky> and there's 2nd in line ;-)
[01:58:06] <JakeSays> lol indeed
[01:59:30] <lz_> lol https://www.reddit.com/r/MadeMeSmile/comments/thfpnd/wholesome_smilecry/
[01:59:56] <lz_> that reminds me of my sports teacher who said today "don't forget to thank your parents, you're being here thanks to them"
[02:00:19] <lz_> I wanted to tell him so badly that my father actually did oppose me practicing this sport and he was a fucking piece of shit
[02:00:22] <lz_> but I didn't
[02:00:40] <Lukky> hey, in any app displaying a tree, do you guys expect the left & right arrow keys to collapse & expand nodes? Is that part of UI guidelines?
[02:01:14] <lz_> Lukky: I still swear by the winforms propertygrid and I pray every day it returns to WPF
[02:01:51] <irwiss> lol https://twitter.com/lunasorcery/status/1504893095661424644
[02:02:03] <lz_> it was actually usable with a keyboard and all shit 3rd party wpf propertygrids seem to have forgotten this
[02:02:19] <irwiss> and this as well heh https://twitter.com/lunasorcery/status/1504900067098046464
[02:02:46] <Lukky> WTF?
[02:03:02] *** Quits: cloudbender36 (~cloudbend@user/cloudbender) (Ping timeout: 240 seconds)
[02:03:05] <irwiss> funny trick :D
[02:03:56] <Lukky> lz: typically the arrow keys do collapse/expand, right? I mean, not necessarily the propertygrid, but I feel like apps should implement this pattern (?)
[02:04:11] <lz_> Lukky: in propertygrids, yes; for other controls I don't know
[02:04:48] <irwiss> host it in the winformshost control thing :P
[02:05:05] <lz_> irwiss: I tried doing that, it made the whole app sluggish, so nope
[02:05:14] <merced> Lukky: absolutely
[02:05:21] <merced> i get insanely pissed off when left/right doesn't do that
[02:05:45] <lz_> irwiss: it's on my TODO list of things I'll never have time to do: reimplent the winforms propertygrid in wpf as close as possible to the original one which was usable
[02:06:22] <irwiss> tbh tons of projects actually used propertygrid as part of final product, it was really neat
[02:06:39] <merced> yeah propertygrid is awesome
[02:06:42] <merced> so customizable, too
[02:08:18] *** Quits: Tobbi (~Tobbi@2a02:8108:1240:48ec:7ced:662b:151f:9503) (Ping timeout: 268 seconds)
[02:08:28] <Lukky> merced: ok, I wanted to run that by someone else before opening a ticket...
[02:09:11] <merced> Lukky: you a product owner or something?
[02:09:46] *** Joins: Tobbi (~Tobbi@2a02:8108:1240:48ec:7ced:662b:151f:9503)
[02:10:03] <Lukky> no, just a user... Bootstrap Studio... it's not implementing this pattern...
[02:11:00] <merced> good luck!
[02:11:02] <merced> lol
[02:11:21] <Lukky> hehe, why? did you have a run with them?
[02:12:09] <merced> nah because they appear to be a small company from bulgaria
[02:12:13] <merced> https://zine.bg/
[02:14:02] <Lukky> yeah, seems like that to me, but I kind of enjoy the tool for speedy layout ideas... I've not done web in ages, so it helps me not to have to deal with CSS too much :-/
[02:14:12] *** Joins: jamea22 (~jamea@189.237.47.249)
[02:14:46] *** Quits: jamea (~jamea@189.237.47.249) (Ping timeout: 250 seconds)
[02:15:52] *** Joins: Guest21 (~Guest21@170.103.24.138)
[02:16:07] <Guest21> Is there a way to cancel a task at any point while it is running?
[02:19:26] <merced> Task.Run with a cancellationtoken
[02:19:59] <merced> Lukky: yea its weird that a tool like that wouldn't give mind to an easy UX win
[02:20:51] *** Quits: xb0o2 (~xb0o2@user/xb0o2) (Read error: Connection reset by peer)
[02:21:56] <Guest21> passing the token to the task only ensures cancellation before it runs, preventing it from every being created
[02:22:37] <merced> true, but you would have to use that same token within your task, between whatever long-running operation you use, and hope that those operations also accept that token
[02:22:43] <Guest21> if I monitor for cancellation within the task's body, I cannot perform a check for cancellation while a statement is being executed. Doing so after every statement is also expensive.
[02:22:52] <merced> yup
[02:24:22] <Guest21> maybe would threads better suit me as I would be able to .Abort() whenever necessary at any point during execution
[02:24:27] <merced> if you've got a long-running synchronous operation in your thread w/o access to the sourcecode, use a thread
[02:24:36] <merced> yep, but thread abort is also not necessarily guaranteed
[02:25:47] *** Quits: DoofusCanadensis (~DoofusCan@node-1w7jr9yercvgg0wc08s2y1vce.ipv6.telus.net) (Quit: So as you can see from this flowchSQUIRREL!!)
[02:26:06] <merced> if you're somehow able to capture Thread.CurrentThread from within your task, _maybe_ you could abort that
[02:26:29] <merced> but tasks are also not guaranteed to run on their own thread
[02:26:48] <Guest21> hmm.. it seems there is no good solution given .abort's deprecation. I do have access to the sourcecode.
[02:27:07] <merced> my best recommendation for you then is to modify the target code to honor cancellationtoken
[02:28:36] <merced> this is a fun answer though, thanks stackoverflow: var toke = _source.Token; Task.Run(()=>{using(toke.Register(Thread.CurrentThread.Abort)){dostuff();}});
[02:29:08] <merced> also see this: https://stackoverflow.com/questions/4783865/how-do-i-abort-cancel-tpl-tasks/60417715#60417715
[02:29:53] *** Quits: jamea22 (~jamea@189.237.47.249) (Ping timeout: 256 seconds)
[02:30:13] <merced> i don't recommend doing anything like that if you're able to modify the source
[02:31:02] <irwiss> wonder what that'll actually do in modern .net, thread abort isn't supported any more lol
[02:31:03] <Guest21> >modify the target code to honor cancellationtoken       how could I if it isn't immediate? maybe I need to lock resources, as my problem comes from the lack of guarantee that a task has halted when another spawns, and tries to modify the same resources being accessed. I could possibly queue when another task reaches the lock.
[02:31:25] <merced> irwiss: it is? that's lame
[02:31:47] <irwiss> it throws PlatformNotSupported instead
[02:32:04] <merced> that's dumb lol. though i havent used the legacy threads in like a decade
[02:32:29] <irwiss> Guest21: if you want to handle it properly then supply cancellation token as part of your call chain and propagate it everywhere... then check if it has been cancelled at every point where you can safely cancel
[02:32:55] <merced> Guest21: ^^
[02:33:15] <merced> PL all the way or go home
[02:33:19] <merced> TPL*
[02:34:41] <Guest21> thanks, I will try that
[02:34:51] <irwiss> merced: it's actually not dumb, aborting threads can get you to unstable state and people were using it willy nilly
[02:35:03] <merced> i dont want microsoft to save me from myself
[02:35:12] <merced> if i use abort incorrectly then that's my problem
[02:35:22] <irwiss> yeah the problem is, that it's pretty much always incorrectly :P
[02:35:40] * merced just uses pinvoke instead
[02:35:46] <irwiss> unless you do something like plain math without contesting any io or anything you can get fucked over with abort
[02:36:16] <merced> *cough* https://www.pinvoke.net/default.aspx/kernel32.terminatethread
[02:36:20] <merced> Notes: This API is dangerous and should never be used. See MSDN docs for details.
[02:37:25] <irwiss> yeah... i mean you could probably get fucked just doing strings if it aborts inside string interning code or something
[02:38:54] <merced> xD yeah..
[02:39:55] <merced> you could also do https://www.pinvoke.net/default.aspx/kernel32.createthread if you wanted, so you get an unmanaged thread :eyes:
[02:39:56] *** Quits: Tazy (~Tazmainia@2001:1c02:1701:6a00::1003) (Ping timeout: 245 seconds)
[02:44:26] *** Joins: Tazy (~Tazmainia@83.80.169.186)
[02:44:46] <JakeSays> shit. i forgot just how slow hard drives are
[02:45:01] <ap5> A spinner?
[02:45:15] <ap5> Remember when it took 20 minutes to install Office :D
[02:46:05] *** Quits: Tobbi (~Tobbi@2a02:8108:1240:48ec:7ced:662b:151f:9503) (Quit: My MacBook has gone to sleep. ZZZzzz…)
[02:46:11] <JakeSays> i'm backing up ~50gb of data. it's taking forever
[02:46:18] <ap5> :D
[02:47:41] <Lukky> Installing Office, or Visual Studio, from 1.44 floppies :-O
[02:48:01] <JakeSays> Lukky: lol been there
[02:48:24] <Lukky> and then it crashes at the very last disk swap...
[02:48:41] <JakeSays> iirc win95 was 21 disks
[02:49:11] <Lukky> damn...
[02:49:25] <JakeSays> i still have an apple lisa twiggy diskette
[02:49:27] <Lukky> after DOS' 3 disks?
[02:50:18] <JakeSays> Lukky: iirc win95 installed to bare metal
[02:50:50] <Lukky> hmmm... can't recall
[02:50:59] <Nasp> Office was also like a gazillion disks
[02:51:20] <Nasp> And then you had to like insert 1-8, then insert 1 again, then 9
[02:51:23] <Nasp> Or something insane like it
[02:53:19] *** Joins: k8yun__ (~k8yun@user/k8yun)
[02:54:08] <merced> lol
[02:54:10] <merced> what about the vb6 installer
[02:57:02] *** Quits: k8yun_ (~k8yun@user/k8yun) (Ping timeout: 240 seconds)
[02:57:20] *** Quits: k8yun__ (~k8yun@user/k8yun) (Remote host closed the connection)
[02:57:45] *** Joins: k8yun__ (~k8yun@user/k8yun)
[03:01:14] *** Joins: k8yun_ (~k8yun@user/k8yun)
[03:03:10] <bpmedley> Has anyone used an indie electron app where they liked the interface?
[03:04:45] <Nasp> Does Slack count? :D
[03:04:53] <merced> slack was indie once upon a time!
[03:05:35] *** Quits: k8yun__ (~k8yun@user/k8yun) (Ping timeout: 256 seconds)
[03:06:19] <Nasp> yeah
[03:06:27] <Nasp> I liked the interface back then
[03:06:31] <Nasp> Now it's a bit annoying
[03:06:47] <Nasp> I especially hate how they decided to have both text chat going both directions
[03:06:52] <Nasp> That seems sooo stupid
[03:07:00] <Nasp> And i havent heard anyone say that's a great idea to do in the same application
[03:07:40] <merced> Nasp: have you ever heard of this thing called "teams"
[03:07:41] *** Quits: k8yun_ (~k8yun@user/k8yun) (Read error: Connection reset by peer)
[03:07:48] <Nasp> Ohh yes
[03:07:53] <Nasp> Only bad things
[03:08:11] *** Joins: k8yun_ (~k8yun@user/k8yun)
[03:08:12] <Nasp> It's skype + sharepoint in disguise :D
[03:09:50] <merced> its much much worse than that
[03:09:59] <Nasp> Danish mass surveillance was in high court today
[03:10:03] <Nasp> Not that there's any outcome yet
[03:10:12] <Nasp> Will probably take 2 years
[03:10:17] <Nasp> And then discarded :D
[03:10:42] <Nasp> All the lower court have used 5+ years on delaying it so far
[03:11:28] <Nasp> Okay maybe not, there will be an outcome the 30.
[03:15:28] *** Joins: smallville7123 (~smallvill@cpe-172-193-200-97.qld.foxtel.net.au)
[03:16:51] <JakeSays> teams rulz!
[03:17:21] <JakeSays> bpmedley: does vs code count as indie?
[03:18:03] <merced> Nasp: welcome to the american way (tm)
[03:18:10] <merced> JakeSays: how could you, i thought you were cool D:
[03:18:25] <JakeSays> merced: how could i what
[03:18:49] <merced> teams!
[03:19:04] <JakeSays> LOL i was kidding. teams sucks hairy ass
[03:19:29] <Nasp> merced: It's gonna be interesting if we citizens win
[03:19:41] <Nasp> And if gov will just ignore that as well as when it was in EU court
[03:19:54] <merced> JakeSays: thank fuck
[03:19:58] <Nasp> At that point, what are laws for?
[03:20:11] <bpmedley> JakeSays : Probably not.. :)
[03:20:20] <merced> Nasp: ask our congress
[03:20:25] <JakeSays> bpmedley: discord isn'tbad
[03:20:33] <merced> the only thing they've agreed on in decades is that daylight savings time should end
[03:20:45] <JakeSays> merced: think that'll pass?
[03:21:07] <merced> yeah, that was the most bipartisan thing they've done since they bailed out the banks
[03:21:25] <JakeSays> what about holdout states/counties
[03:21:36] <merced> US supremacy clause yo
[03:21:46] <Nasp> I've heard about the DST thing for the last 5 years
[03:21:48] <JakeSays> that hasn't applied in the past
[03:22:05] <Nasp> merced:  Well still, if we can use the high courts, or EU courts
[03:22:12] <Nasp> Then it's all rather pointless right
[03:23:38] <merced> everything is pointless
[03:23:46] <merced> we might as well go back to monarchy
[03:23:55] <smallville7123> what does   target.pointerIdBits &= ~pointerIdBits;    do
[03:24:09] <merced> invert all the bits in pointerIdBits
[03:24:13] <merced> and then and it all together
[03:24:17] <Nasp> merced:  We still have a monarchy as well
[03:24:27] <irwiss> kek https://www.reddit.com/r/ProgrammerHumor/comments/th4kea/you_decide_the_code_i_make_the_website/i1645md/
[03:24:28] <Nasp> But yeah i think the Queen would be more senseless
[03:24:33] <merced> i wish we had a monarch that could just dissolve congress
[03:24:36] <smallville7123> merced: what would the result be?
[03:24:36] <Nasp> She still has to approve all new laws
[03:24:51] <JakeSays> Nasp: that's the part i don't get - you still have a monarchy
[03:25:06] <Nasp> Yes?
[03:25:07] <Nasp> Like UK
[03:25:23] <JakeSays> i dont get that either
[03:25:26] <merced> smallville7123: https://bitwisecmd.com/
[03:25:49] <Nasp> JakeSays:  Well to me it's not so strange
[03:25:53] <Nasp> But it's not like she has any power
[03:25:55] <merced> smallville7123: you can type in some samples there and see the result
[03:26:18] <Nasp> Just see it as a PR department for Denmark
[03:26:21] <merced> smallville7123: tbh no idea what the result would be, if those are memory pointers, you're just creating a random address
[03:27:03] *** Joins: exvicesindaco (~exvicio@user/exvicesindaco)
[03:27:24] *** Quits: kenanmarasli (~kenanmara@user/kenanmarasli) (Quit: Leaving)
[03:27:59] <JakeSays> smallville7123: the result would be 42
[03:30:12] *** Quits: EternalMan (~Belgarath@user/belgarath) (Quit: I couldn't be bothered to put a nice leave message)
[03:30:42] *** Joins: EternalMan (~Belgarath@user/belgarath)
[03:31:12] <Suchiman> smallville7123: basically it will (remove / set to zero) all bits from the left side that are set on the right side
[03:31:29] <Nasp> Suchiman:  Do you use docker at work?
[03:31:33] <Suchiman> Nasp: no
[03:31:40] <Nasp> Are you allowed to?
[03:31:42] <Nasp> As in Docker desktop
[03:31:52] <Suchiman> Nasp: i mean i could if i want to
[03:32:09] <Nasp> A friend of mine just got Docker desktop disapproved by corporate IT, due to it being American company
[03:32:15] <Nasp> And yadayada GDPR
[03:32:20] <Nasp> Also he works for a German company :D
[03:32:20] <JakeSays> Nasp: really?
[03:32:20] <Suchiman> lawl
[03:32:39] <Nasp> And i think German companies are quite affraid
[03:32:50] <JakeSays> of what?
[03:33:33] <Nasp> To get fucked by fines
[03:33:39] <Suchiman> Nasp: anyway, we'll be looking into docker in the future because CEO has become concerned with azure getting an order of magnitude more expensive than it already is or azure running out of hardware
[03:33:44] <Nasp> Haven't you read any of those rulings from Germany?
[03:33:54] <Suchiman> so we're investing into having means of migrating off it if necessary
[03:33:54] <Nasp> Like they want to start finding everybody who uses Google analytics
[03:33:59] <Nasp> Or even just using google fonts
[03:33:59] <JakeSays> Nasp: i haven't
[03:34:13] <Guest21> wow
[03:34:16] <Nasp> Each violation of using google fonts was a fine for 100.000 euros
[03:34:16] <JakeSays> what do they have against google fonts?
[03:34:21] <JakeSays> wtf
[03:34:33] <Suchiman> JakeSays: haha yeah someone managed to sue for financial compensation because loading the fonts from google's cdn meant that his IP was transferred to google without consent
[03:34:34] <Nasp> Suchiman:  Yeah Azure / cloud hosting is expensive
[03:34:35] <Guest21> that's insane
[03:34:41] <JakeSays> analytics makes some sense
[03:34:49] <Nasp> But yea having some containers you could just host whereever it's cheapest is a nice way to go
[03:34:52] <JakeSays> Suchiman: wow seriously??
[03:35:01] <Nasp> JakeSays:  Not kidding
[03:35:04] <JakeSays> wow
[03:35:04] <Guest21> well I guess at least privacy is taken seriously but wow
[03:35:08] <Suchiman> JakeSays: yep, IP's are considered PII under GDPR laws
[03:35:08] <Nasp> You read it and think "hahaha good one"
[03:35:10] <Nasp> Ohhh damn
[03:35:31] <Nasp> They basicly just disapproved every 3rd party content :D
[03:35:37] <JakeSays> google should just firewall the whole country
[03:35:43] <Nasp> But i think also it could be due to it eing google
[03:36:03] <Nasp> Suchiman:  Still not sure if there was a real outcome of the fonts and about analytics?
[03:36:11] <Nasp> Seems like Germany is killing google analytics i think
[03:36:14] <Nasp> But only Germany?
[03:36:19] <Nasp> Maybe France als
[03:36:35] <JakeSays> so that means companies that use routers and firewalls are in violation
[03:37:17] <Suchiman> JakeSays: ??
[03:37:29] <JakeSays> Suchiman: they store ip addresses
[03:37:38] <Nasp> They don't actually retain data or store it
[03:37:42] <Suchiman> JakeSays: ah yes but they do not transfer it to outside of the EU
[03:37:48] <Nasp> And that
[03:38:06] <JakeSays> if that were the case then google couldn't get that dude's ip address
[03:38:18] <Nasp> Danish gov also seem to be a bit in a hurry finally to remove it from all gov website
[03:38:28] <JakeSays> Nasp: and they do store ip addresses
[03:38:43] <Nasp> When you login to your various gov sites to check your medical records, or taxes they usually have GA on the site
[03:38:55] <JakeSays> it's an absurd claim, but someone is gonna make it
[03:39:39] <Nasp> Well GDPR is a bitch
[03:40:05] <JakeSays> so if google only processed data in the eu they'd be ok?
[03:40:35] <Nasp> Not quite sure, they have to absolute guarantee
[03:40:44] <Nasp> Problem is American gov can demand data
[03:40:45] <Suchiman> Nasp: NAT requires the router to temporarily store source ip, dest ip, source port, dest port
[03:40:51] <Nasp> Suchiman:  Well i know
[03:41:03] <Nasp> But it's main funciton isn't to actually store data
[03:41:10] <JakeSays> and routers require ip for UDP traffic
[03:41:52] <Nasp> Also that fucking cookie law, fuckign fix it
[03:42:00] <JakeSays> i HATE that thing
[03:42:09] <JakeSays> it's absolutely useless
[03:42:13] <Nasp> Yes
[03:42:26] <Nasp> Now they also go after companies have have a green accept button
[03:42:35] <Nasp> Since then the accept of cookies seems to be prefered and easier to click
[03:42:36] <JakeSays> Nasp: what??
[03:42:43] <Nasp> Both  should be of same size and same color
[03:42:58] <JakeSays> you're just fuckin' with me now, right?
[03:42:59] <Nasp> Some also have the "options for denying specific tracking"
[03:43:01] <Nasp> That's not legal as well
[03:43:06] <Nasp> JakeSays:  Sadly no
[03:43:10] <JakeSays> fuck
[03:43:10] <Suchiman> 01:10:06 <JakeSays> so if google only processed data in the eu they'd be ok? <--- pretty much, there's a debate about whether that's sufficient if the US government could send them a... what are they called again, the letters that order the companies to hand over data and keep quiet about it
[03:43:33] <Nasp> Both Accept and Deny needs to be same size and color, one may not be easier to click in any way
[03:43:37] <Nasp> :D
[03:43:40] <JakeSays> Suchiman: FISA subpoena iirc
[03:43:47] *** Quits: Guest21 (~Guest21@170.103.24.138) (Ping timeout: 256 seconds)
[03:43:55] <Nasp> I wonder how some companies have done that
[03:44:00] <Nasp> Have they split the company completely in two?
[03:44:29] <Suchiman> Nasp: for azure germany they originally used a data trustee
[03:45:19] <Nasp> We just started using DataDog a bit and they have a .eu site, where we ship logs to
[03:45:28] <Nasp> I have a feeling that's to avoid some of that
[03:45:40] <Suchiman> JakeSays: ah national security letters
[03:47:45] <Suchiman> Nasp: seq is still cool :P
[03:48:05] *** Quits: Tazy (~Tazmainia@83.80.169.186) (Quit: Leaving)
[03:48:09] <Nasp> Suchiman:  Yeah well DataDog was pushed from CTO
[03:48:10] <Nasp> He wanted it
[03:48:20] <Nasp> And seems like we are going to pay the price for it :D
[03:48:23] <Nasp> Did you hear the cost?
[03:48:29] <merced> Nasp: wait
[03:48:33] <merced> Nasp: wait i have one for this
[03:48:54] <merced> https://conanclassic.com/blog/spoiler-alert-tonights-cold-open
[03:49:01] <Nasp> Suchiman:  the entire reason was because our ES was struggling a bit when someone sent it 10x the normal log amount
[03:49:15] <Suchiman> Nasp: lol, no, how much cost?
[03:49:55] <Nasp> Well we got an initial estimate of 5000 euro
[03:50:15] <Nasp> And our Elasticsearch is like 600 euro a mont
[03:50:23] <Nasp> And could probably be shared down to 60
[03:50:35] <Nasp> But we just reached 10k
[03:50:41] <Nasp> And we arent even done sending all the data
[03:50:58] <Suchiman> Nasp: neato xD
[03:51:08] <Suchiman> Nasp: how is it billed? mb of ingested data?
[03:51:13] <Nasp> It will be the biggest post in our entier hosting budget
[03:51:20] <Nasp> It's billed for every individual piece
[03:51:25] <smallville7123> converting all this bitshifting into an array equivilant is confusing ;-;
[03:51:35] <Nasp> So you are billed for every GB of logs
[03:51:53] <Nasp> How many of those that are searchable, since you can have longer retention policy than fast / cold storage
[03:52:27] <Nasp> Then for every million of log lines, every customer using the system, per every host, per every container, per every database
[03:54:19] <Nasp> Per every metric, for each pings to endpoints, for every function, every security scan, for profiling, for network monitoring, for CI visibility
[03:54:27] <Nasp> And then i think we also need to pay per employee
[03:55:13] <smallville7123> imma just make a list that contains overloads for bitwise operations instead of attempting to convert this complexity
[03:55:28] <merced> Nasp: you're using NR now?
[03:56:13] <Nasp> merced:  Only minimally
[03:56:21] <Nasp> I've never really used it because i've never liked it
[03:56:26] <Nasp> We've mostly used Elasticsearch
[03:56:39] <merced> i hate their log shit so much
[03:56:41] <merced> but APM is awesome
[03:56:56] <Nasp> We've only used APM but very minimally i think
[03:57:45] <bpmedley> smallville7123 : Do you have some example code?  I'm confused what you mean by "an array equivalent"..
[03:58:03] <merced> Nasp: too bad that you guys didn't use it more, it's awesome
[03:58:17] <Nasp> We've never really had metrics
[03:58:50] <smallville7123> bpmedley: like,   BitwiseList X = new();    X |= an_object;
[03:58:53] <Nasp> Suchiman: Hows Sew billed
[03:59:16] <bpmedley> smallville7123 : Can you use dotnet fiddle and create a smallish example?
[03:59:23] <smallville7123> or      BitwiseList result = oldList & newList;
[03:59:29] <Suchiman> Nasp: quite straightforward https://datalust.co/pricing
[04:00:09] <Nasp> Suchiman: That's cheap, how fast is it
[04:00:36] <Nasp> I don't see any GB limits?
[04:00:46] <Suchiman> Nasp: yep, you only pay for users basically
[04:00:48] <Nasp> Just unlimited everything
[04:00:59] <Nasp> That sounds sketchy
[04:01:06] <Suchiman> how so?
[04:02:23] <Suchiman> Nasp: it basically keeps as many logs in memory as possible, fulltext searches over these are very fast, after that it goes down to disk which is like 2 orders of magnitude slower but still doable, especially if you can constrain the date range you wanna search
[04:02:31] <Nasp> Well inifnite storage have never worked out well
[04:02:56] <Nasp> Like Amazon :D
[04:03:00] <Suchiman> Nasp: btw. seq is self hosted so you eventually pay for storage through hardware resources
[04:03:04] <Nasp> Also i can't remmeber if you had metrics
[04:03:05] <Nasp> Ahh
[04:03:08] <Nasp> Thought that was hosted
[04:04:14] *** Joins: cloudbender (~cloudbend@user/cloudbender)
[04:04:53] <Suchiman> Nasp: metrics also work with seq, you can define SQL queries to run over the data and it uses a time slice cache for that
[04:05:21] <Nasp> Yeah that's a smart way to get metrics
[04:05:29] <Nasp> Also i think we could save a lot by just having metrics
[04:05:35] <Suchiman> Nasp: has some nice graphing https://datalust.co/img/home/dashboards-feature.png
[04:05:42] <Nasp> We mostly use logs to agregate Elasped from Serilog logs
[04:05:59] <Suchiman> yeah that's easy peasy
[04:06:50] <Nasp> But expensive if you dont use save the result as a metric
[04:06:54] <Nasp> Or just use metrics
[04:08:07] <brianonymous> firday officially BEGIIINS
[04:08:12] <brianonymous> and so does friday
[04:08:45] <Nasp> Fridays over in EU :D
[04:08:48] <Nasp> It's saturday
[04:09:00] <brianonymous> but youre from the future
[04:09:35] <brianonymous> yeah, what time is it over there, 1:39am?
[04:09:44] <brianonymous> time for bed!
[04:10:37] <Nasp> correct
[04:15:17] *** Quits: k8yun_ (~k8yun@user/k8yun) (Ping timeout: 256 seconds)
[04:17:10] <brianonymous> i used to always be nocturnal, and my kids are.. but ive entered a phase in life where im in bed by 11-1130pm :|
[04:22:24] *** Quits: exvicesindaco (~exvicio@user/exvicesindaco) (Remote host closed the connection)
[04:23:25] *** Quits: Klinda (~superleag@user/klinda) (Quit: Konversation terminated!)
[04:33:55] *** Joins: CodePoint (~CodePoint@107-208-128-79.lightspeed.tukrga.sbcglobal.net)
[04:41:16] *** Quits: CodePoint (~CodePoint@107-208-128-79.lightspeed.tukrga.sbcglobal.net) (Quit: CodePoint struts into the sunset on the beach.)
[04:44:34] *** Quits: Slade (uid128877@user/slade) (Quit: Connection closed for inactivity)
[04:50:12] *** Joins: vim_fans_ (~pi@user/vim-fans/x-3284168)
[04:55:58] <smallville7123> is a long -1 cast to a short still -1 ?
[04:56:25] <bpmedley> smallville7123 : Did you consider trying this on dotnet fiddle?
[05:05:43] <smallville7123> is there a difference between A == B and A.Equals(B) when both A and B are a template type
[05:06:03] <smallville7123> (object) A == (object) B     *
[05:08:26] *** Joins: dmalteseknight (~dmaltesek@user/dmalteseknight)
[05:08:27] <smallville7123> in    `T a = this.ElementAt( i ); T b = other.ElementAt( i );`   is there a difference between     `(object) a != (object) b`    and    `a.Equals(b)`      *
[05:08:51] <smallville7123> assuming T is not a struct
[05:09:10] <smallville7123> assuming the type of T is not a struct     *
[05:09:32] <bpmedley> smallville7123 : https://docs.microsoft.com/en-us/dotnet/csharp/language-reference/operators/equality-operators  <-- Have you seen this?
[05:14:11] <smallville7123> yes
[05:14:31] <bpmedley> Does the documentation answer your question, smallville7123 ?
[05:15:06] <smallville7123> what should i use if i want to test if T is equal by both instance and value?
[05:16:43] <smallville7123> eg   MyClass A = new MyClass(1, 2); needs_to_be_equal(A, A);   MyClass B = new MyClass(1, 2);     needs_to_be_not_equal(A, B);
[05:16:50] <bpmedley> What is an "instance" comparison, smallville7123?  Are you saying they are the exact same object?
[05:16:54] <irwiss> if they're same instance it would be weird if they have different values
[05:17:22] <smallville7123> irwiss: T could be a copy of a struct
[05:17:50] <irwiss> in that case they're not the same instance
[05:18:21] <smallville7123> eg   MyStruct A = new MyStruct(1, 2); needs_to_be_equal(A, A);   MyStruct B = new MyStruct(1, 2);     needs_to_be_equal(A, B);   // a struct is always copied by value thus two copies are NEVER the same instance
[05:19:20] <bpmedley> smallville7123 : https://dotnetfiddle.net/  <-- Would you consider writing some code here?
[05:19:37] *** Joins: DoofusCanadensis (~DoofusCan@2604:3d09:47c:f970::fb)
[05:24:46] *** Quits: Roughy (~mdaw45ns@user/roughy) (Quit: Meadow Fresh milk)
[05:26:02] <smallville7123> qwq    https://dotnetfiddle.net/ekDfVH
[05:26:53] <bpmedley> smallville7123 : Console.WriteLine <-- You can use that instead of the Assert
[05:27:03] <sysRPL> so ...
[05:27:43] <sysRPL> i guess i am going to write a web based animated stl viewer
[05:27:50] <bpmedley> smallville7123 : By default, two non-record reference-type operands are equal if they refer to the same object:  <-- Did you see this in the documentation?
[05:28:07] <sysRPL> so that i can shared animated assemblies created in freecad
[05:28:41] <sysRPL> would anyone care to test it?
[05:29:15] <bpmedley> sysRPL : Loading a url and moving the mouse around?
[05:30:15] <sysRPL> bpmedley: i think the idea would be to have a url on one of my websites, and when you visit it there will be an interactive 3d animated view of some machine i designed in freecad
[05:30:34] <sysRPL> where the user can rotate, pan, and zoom around the machine
[05:30:38] <sysRPL> in 3d
[05:30:51] <bpmedley> Sure, I'll test it.. I have VMware and can test in Linux, Windows, and macOS (host)
[05:30:59] <bpmedley> All Intel
[05:31:01] <sysRPL> it will work in any browser
[05:31:12] <sysRPL> let me put up a test page ...
[05:31:15] <bpmedley> Are you using WebGL 1.0, 2.0, WebGPU?
[05:31:22] <sysRPL> webgl 2
[05:31:34] <sysRPL> maybe with backwards compatibiltiy for webgl 1
[05:32:23] <sysRPL> i have some existing stls currently online, but am expanding into freecad assemblies of some machines i am making
[05:32:52] <sysRPL> a simple pen potter and later a core xy printer
[05:33:03] <bpmedley> Neat
[05:33:29] <sysRPL> i might put in link on each page to a github repo with the freecad model parts
[05:33:58] <sysRPL> so people can download and open the same machine in freecad if they have it installed on their desktop
[05:34:16] <sysRPL> i can actualyl make this page pretty quickly
[05:34:44] <bpmedley> Take your time.  If I pass out, maybe I can test tomorrow.. :-0
[05:35:13] <sysRPL> this is where i will contruct the test page -> https://www.getlazarus.org/design/example/
[05:35:21] *** Joins: Pall (~Pall@cpc139184-sprt3-2-0-cust125.17-2.cable.virginm.net)
[05:35:26] <sysRPL> * construct
[05:37:00] *** Quits: scalablecory (~phrosty@c-73-225-175-19.hsd1.wa.comcast.net) (Ping timeout: 240 seconds)
[05:40:53] *** Joins: phrosty (~phrosty@c-73-225-175-19.hsd1.wa.comcast.net)
[05:41:15] *** Joins: Carbonflux (~Carbonflu@c-66-235-54-179.sea.wa.customer.broadstripe.net)
[05:41:31] *** Joins: scalablecory (~phrosty@c-73-225-175-19.hsd1.wa.comcast.net)
[05:45:00] *** Quits: phrosty (~phrosty@c-73-225-175-19.hsd1.wa.comcast.net) (Ping timeout: 240 seconds)
[05:50:58] <smallville7123> how do i exit a console script?
[05:51:07] <smallville7123> Environment.Exit(0); gives this
[05:51:24] <smallville7123> [System.Security.SecurityException: Request for the permission of type 'System.Security.Permissions.SecurityPermission, mscorlib, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089' failed.]
[05:51:24] <smallville7123>    at System.Environment.Exit(Int32 exitCode)
[05:51:41] <smallville7123> and Application does not exist
[05:51:47] <bpmedley> smallville7123 : How are you running your console app?
[05:51:53] <bpmedley> Are you using Windows?
[05:52:02] <smallville7123> dotnetfiddle
[05:52:10] <smallville7123> as Script type
[05:52:37] <smallville7123> i dont want to exit by relying on `throw new Exception()`
[05:52:42] <bpmedley> I've never used "Script type" I've only used Console.
[05:53:57] <smallville7123> this happens in Console as well
[05:54:02] <smallville7123> same error
[05:54:14] <merced> don't rely on using application exit
[05:54:57] <bpmedley> smallville7123 : I don't recall ever using "Environment.Exit" in dotnetfiddle.  Are you in a while loop or something?
[05:55:17] <smallville7123> if i try to use Application i get    The name 'Application' does not exist in the current context
[05:56:02] <smallville7123> bpmedley: im writing my own assertion method
[05:56:44] <bpmedley> smallville7123 : I see.  I was only advocating dotnetfiddle for clarifying what you wanted to express with equality.
[05:57:28] <smallville7123> ill just use `throw new Exception()` for now :/
[06:02:58] <bpmedley> https://eshop.macsales.com/shop/owc-envoy-pro-fx  <-- I love this thing.  I've been running Windows 10 via VMware on it and everything feels speedy..
[06:07:34] <smallville7123> hmmm
[06:14:57] <smallville7123> https://dotnetfiddle.net/SsRw80 :/
[06:18:39] <bpmedley> smallville7123 : Are you making a generic class that can output "true" if two object instances are the exact same?
[06:19:34] <smallville7123> is it safe to rely on .Equals if cannot be gaurenteed that a given Type will implement == operators (or only implements == operators and does not implement Equals) ?
[06:20:04] <bpmedley> By default, two non-record reference-type operands are equal if they refer to the same object:  <-- Did you see this earlier message?
[06:20:10] <bpmedley> smallville7123 ^^
[06:20:35] <smallville7123> yes
[06:21:07] <brianonymous> your cast is gonna downgrade to the base equality
[06:21:34] <smallville7123> is there any way to get == to work with a template paramater ?
[06:22:08] <smallville7123> or do i need to use .Equals unless i specifically know the underlying type?
[06:22:39] <smallville7123> eg   `a as C == b as C`
[06:22:56] <smallville7123> which cannot be garenteed for a generic class
[06:22:57] <brianonymous> theres quite a lot of ways but there is also no guarentee you are going to get the Equals you want
[06:23:52] <brianonymous> are you always comparing the two same types?
[06:23:56] <smallville7123> brianonymous: ok, so i should rely on the given TYPE to implement its Equals method correctly ?
[06:24:45] <brianonymous> thats probably the best way, there is an interface for that as well
[06:25:17] <smallville7123> Equality<T> ?
[06:25:44] <brianonymous> that or IEquatable<T>, im rusty there
[06:25:51] <smallville7123> a as C == b as C *
[06:25:54] <smallville7123> IEquatable *
[06:26:15] <smallville7123> IEquatable is not gaurenteed to be implemented always, right?
[06:26:37] <brianonymous> https://docs.microsoft.com/en-us/dotnet/api/system.icomparable-1?view=net-6.0
[06:26:41] <brianonymous> that oscar too ^
[06:27:04] <brianonymous> oh thats sorty bits
[06:27:22] <smallville7123> eg i should not RELY on the given Type implementing IEquatable (eg, int likely does not implement IEquatable, nor does Object)
[06:28:11] <bpmedley> smallville7123 : Do you have two variables of different generic types and you want to compare them to see if they point to the same instance?
[06:28:22] <smallville7123> no
[06:28:32] <smallville7123> i mainly want to compare contents
[06:28:58] <smallville7123> (unless there is a way to test if the given Type is a Struct or a Class
[06:29:09] <brianonymous> object default equality is a reference compare
[06:29:25] <brianonymous> which you are seeing
[06:30:01] <smallville7123> tho i guess it would probs be better to have two classes, one that tests for instance equality as well as value equality, and one that only checks value equality
[06:30:51] <bpmedley> smallville7123 : So you are comparing the contents of two objects and want to know if they are the same?
[06:31:12] <brianonymous> seen this yet? -> https://stackoverflow.com/questions/10454519/best-way-to-compare-two-complex-objects
[06:31:58] <smallville7123> hmm can i use `http://msdn.microsoft.com/en-us/library/system.type.isclass.aspx` ?
[06:32:58] <smallville7123> bpmedley: yes
[06:33:03] <brianonymous> ive used something like the deepcompare ^ above for config class compares
[06:33:41] <bpmedley> smallville7123 : How many different classes are you comparing?
[06:36:12] <merced> smallville7123: how complex are we talking
[06:36:19] <merced> are the members at least named the same
[06:36:29] <smallville7123> imma just use a public boolean instead of two different classes since it may be expensive to convert if comparing structs against a class that differs in equality comparison
[06:37:02] <bpmedley> smallville7123 : May I also ask what type of app and what feature are you implementing this for?
[06:37:45] <merced> so wait are the types compatible in any way
[06:38:50] <smallville7123> eg if i have a list of 500 structs (A) with instance equality checking, and another list of 500 structs (B) without instance equality checking, then if A == B i do not need to convert B to the same type as A just to compare it and vice versa for B == A
[06:39:27] <smallville7123> (eg creating a new instance of B and then copying all 500 structs over to it and then test it using this.Equals(tmp);
[06:40:20] <smallville7123> as i can just check the boolean flag of A and compare directly against the contents of B
[06:40:52] <smallville7123> boolean flag of this and compare directly against the contents of RHS  *
[06:41:15] <bpmedley> Just kidding.. try Splenda instead of .Equals 🥁
[06:42:06] <smallville7123> merced: yes
[06:42:44] <smallville7123> bpmedley: im implementing this for a bitwise class that will compare contents in a way similar to what bitwise operators do
[06:43:13] <brianonymous> im really trying to understand.. you have a list of structs in list A, and a list of structs in B.. and you want to know what now?
[06:43:28] <brianonymous> which are not in A or B?
[06:44:12] <merced> bpmedley: yes!
[06:44:20] <merced> wait you have 500 structs???
[06:44:28] <merced> you're abusing the type system
[06:44:29] <bpmedley> Also, for clarity, smallville7123, you've mentioned classes, generics, and structs.  And lists of things.  I'm confused at the data types..
[06:44:38] <merced> just use reflection, jesus
[06:45:51] <smallville7123> brianonymous: yes
[06:46:02] <brianonymous> so what you really want is a list difference
[06:46:27] <smallville7123> i guess so
[06:46:54] <smallville7123> this is mainly for <object> but i also want it to be usable for other types as well like struct's and classes's
[06:47:24] <merced> is there _any_ commonality between all these types
[06:47:39] <merced> what is the "this equals that" case
[06:47:59] <brianonymous> will these be mixed in the list, cuz thats when id raise red flags of design weirdities
[06:48:14] <merced> this is all design weirdeties
[06:48:17] <smallville7123> typically two lists should only be compared if their generic types are the same
[06:48:51] <merced> what is atypical
[06:48:52] <smallville7123> eg a <FOO> and a <BAR> cannot be compared in any way unless it is explicitly convertable
[06:49:00] <merced> ..what is your use case man
[06:49:07] <merced> you saying "500 structs" worries the shit out of me
[06:50:03] <smallville7123> merced: i dont have 500 structs, but the list could contain a lot of values of which the underlying type is a struct instance
[06:50:04] <merced> what if these two lists of objects have different lengths?
[06:50:21] <merced> phew
[06:50:21] <brianonymous> if you get your equalities methods accurate, you should be able to use List<T>.Except i believe
[06:50:26] <smallville7123> merced: then equality should be false
[06:50:44] <brianonymous>  var dif1 = originalList.Except(compList);
[06:50:52] <merced> smallville7123: can you give three examples
[06:51:37] <smallville7123> if i have a list of (1, 2, 3) and a list of (1, 2) then direct comparison should return false since the size differs
[06:51:48] <smallville7123> if i have a list of (1, 2, 3) and a list of (1, 2, 4) then direct comparison should return false since the content differs
[06:52:27] <merced> is there a common property between all of these
[06:52:32] <brianonymous> originalList.Except(otherList).Any
[06:52:34] <merced> that would define equality
[06:54:06] <smallville7123> The name 'Except' does not exist in the current context
[06:54:15] <brianonymous> https://docs.microsoft.com/en-us/dotnet/api/system.linq.enumerable.except?view=net-6.0
[06:54:35] <brianonymous> note  IEqualityComparer<T>
[06:55:29] *** Joins: k8yun_ (~k8yun@user/k8yun)
[06:56:08] <brianonymous> i do believe all you desire in your heart lives within that page
[06:56:19] *** Joins: Lazenca (~lazenca@user/lazenca)
[06:56:24] <merced> ^
[06:56:54] <smallville7123> so   Enumerable.Except(this, other).Any();    would return true if other contains ANY element of this ?
[06:57:28] <brianonymous> its an extension method, so it attaches to an existing Enumerable, like List<T>
[06:58:04] *** Joins: k8yun__ (~k8yun@user/k8yun)
[06:59:35] <brianonymous> first task -> implement IEqualityComparer<T> work on your items, as show in page examples..
[07:01:10] <brianonymous> wait, im smoking crack, i think that is IEquatable<T>
[07:01:34] <brianonymous> either way \o/.. everything you need should be there
[07:01:54] *** Quits: k8yun_ (~k8yun@user/k8yun) (Ping timeout: 252 seconds)
[07:04:30] <JakeSays> ohh F1 starts this weekend
[07:05:44] <brianonymous> the vroomvrooms?
[07:07:01] <merced> f1 is the only real racing
[07:07:37] <cloudbender> So, using System.Net.Sockets
[07:07:53] <merced> cloudbender: dont tell me your reports give you shit through TCP
[07:08:06] <brianonymous> speakin my language
[07:08:08] <cloudbender> They will be, yes
[07:08:12] <merced> hahaha
[07:08:28] <merced> its been ages since i did sockets in C#, dont they support TPL now?
[07:08:46] <brianonymous> its sooooo much nicer with the async/await model
[07:08:55] <merced> thank fuck
[07:09:00] <merced> that begin/end shit was obnoxious
[07:09:04] <cloudbender> My question is, can the listener be non-blocking or do I need it to run in it's own thread
[07:09:04] <brianonymous> no more crazy ass state machine event management
[07:09:44] <brianonymous> cloudbender: lemme literally go look at one of my tcp servers, sec
[07:10:52] <cloudbender> That's impressive : the man can merely look at his hardware and it will tell him stuff. I.M. so behind.
[07:11:37] <brianonymous> i did a modern async/await one about 4 months ago, but i literally already forgot what i did
[07:12:18] <brianonymous> k, the tcp server mode is more squirlly than the raw dog tcp client, cuz you end up needing two async loops
[07:12:32] <brianonymous> it looks like i start up an async loop that does the
[07:12:34] <brianonymous> var tcpClient = await _listener.AcceptTcpClientAsync().ConfigureAwait(false);
[07:13:02] <brianonymous> when that releases, i fire up a secondary async loop to just handle that client/server binding
[07:13:39] <brianonymous> the meat of that loop is
[07:13:40] <brianonymous> var totalBytesAvail = await _ioStream.ReadAsync(readBuffer, 0, _bufferSize, _cancellation);
[07:14:06] <brianonymous> 0 callbacks
[07:14:11] <cloudbender> hmmmm ok lemme copy-paste that and fiddle s'mores
[07:14:15] <brianonymous> well, besides the data feeder
[07:15:44] <brianonymous> cancellation tokens are your best friend, so build them into your initial design before it gets outta hand
[07:16:02] <JakeSays> brianonymous: yup
[07:16:11] <merced> ^^^^^^^
[07:16:16] <JakeSays> F1 is almost as good as indicar
[07:16:32] <merced> it is a _bitch_ to retrofit code with cancellationtokens
[07:16:40] <brianonymous> sure is
[07:16:59] <JakeSays> bah. Environment.Exit(42); is the only cancellation a real man needs!
[07:17:05] <brianonymous> lol
[07:17:06] <merced> 1000%
[07:17:25] <merced> wish there were a better way to use the tokens with await
[07:17:29] <brianonymous> cloudbender: another note - go heavy on the exception traps around the reader
[07:17:40] <merced> don't do it, its a trap
[07:18:00] <merced> ..are exceptions as costly as they were a decade ago?
[07:18:03] <JakeSays> yes
[07:18:22] <brianonymous> if you wrap yer loop, you only set em up once
[07:18:24] <JakeSays> cloudbender: why are you using a stream reader?
[07:18:27] <merced> my java engineers yelled at me for avoiding exceptions
[07:18:28] <cloudbender> heavy traps noted
[07:18:35] <merced> and im like what the fuck dude exceptions are dumb
[07:18:56] <JakeSays> java engineers can't think w/o exceptions
[07:19:03] <brianonymous> isnt it like a java requirement?
[07:19:08] <merced> turns out yep
[07:19:10] <brianonymous> i hated that part so much
[07:19:10] <cloudbender> I'm using sample code from MS docs
[07:19:14] <bpmedley> merced : Tokens with await?
[07:19:20] <merced> the java optimizer makes it not matter, apparently
[07:19:21] <JakeSays> they get all scared w/o their handler
[07:19:24] <merced> pretty sure
[07:19:25] <cloudbender> I've done a web server in node.js, so I should be OK.
[07:19:28] <merced> they just use booleans internally
[07:19:29] <smallville7123> so this for Equals? https://dotnetfiddle.net/GtbSMk
[07:19:42] <merced> bpmedley: ye so like await(var mytask) blah())
[07:19:49] <cloudbender> I've done threading in c#, but no async
[07:19:58] <JakeSays> exception are cheap until they're thrownnnnnnnnn
[07:20:04] <JakeSays> -bunch of n's
[07:20:26] <brianonymous> cloudbender: fortunately c#/net is in the state where ive written huge services without a single explicit thread
[07:20:35] <merced> try { try { try { try { try{ throw new Exception(); }catch{throw;}catch{throw;}catch{throw;} and so on and so forth
[07:20:36] <cloudbender> ok
[07:20:37] <brianonymous> happily too
[07:20:46] <merced> TPL is great
[07:20:50] <JakeSays> merced: total clusterfuck
[07:20:56] <merced> writing shit with Threads sucked
[07:21:01] <merced> TPL makes things so much easier
[07:21:06] <JakeSays> i've never minded threads
[07:21:07] <merced> as long as... everything is TPLK
[07:21:12] <bpmedley> merced : Thanks for the explanation, however, I'm not understanding.  Sounds like you want to execute blah() after mytask is done?
[07:21:17] <JakeSays> they've always been intuitive
[07:21:22] <brianonymous> as long as you dont treat async/await like a thread, and really feel its groove, youll be good
[07:21:37] <merced> bpmedley: so i could do like mytask.Cancel();
[07:21:48] <brianonymous> my biggest mistake when i first tried async was thinking - Hey! Sweet! magic threads!
[07:21:53] <merced> YEP
[07:21:56] <JakeSays> async/await just seems like a hassle
[07:22:09] <bpmedley> JakeSays : async/await is super sweet
[07:22:10] <merced> my biggest mistake was retrofitting old code with async methods
[07:22:13] <brianonymous> JakeSays: done write, its just a beast of efficiency
[07:22:16] <brianonymous> er right
[07:22:23] <cloudbender> oooooo Task Parallel Library OMG there goes my weekend
[07:22:27] <merced> oh god
[07:22:29] <merced> IIS and TPL
[07:22:50] <merced> i got so annoyed i just spawned separate processes
[07:23:04] <cloudbender> that could also work
[07:23:16] <JakeSays> brianonymous: having configureawaits everywhere, and the whole everything-must-be-async thing is a pita
[07:23:24] <brianonymous> agreed, thats dumb
[07:23:28] <brianonymous> but woooorth it
[07:23:30] <merced> cloudbender: that is _always_ an option
[07:23:44] <merced> JakeSays: replace-all "void" "async Task"
[07:24:02] <JakeSays> merced: and then you're shitting useless tasks everywhere
[07:24:14] <merced> trust the JIT and the JIT will trust you!
[07:24:21] <bpmedley> JakeSays : Useless tasks?
[07:24:22] <cloudbender> I have to learn the c#/.Net forms of IPC, but I can do that.
[07:24:32] <merced> don't bother with IPC
[07:24:38] <merced> just use the file system
[07:24:48] <cloudbender> with a watcher ?
[07:24:50] <merced> give up on a fancy solution
[07:24:52] <merced> yep
[07:24:57] <JakeSays> the file system is a shitty replacement for IPC
[07:25:04] <cloudbender> well that's not a bad idea at all
[07:25:08] <merced> JakeSays: the file system is a cost-effective replacement for IPC*
[07:25:16] <bpmedley> cloudbender : What type of IPC are you referencing?
[07:25:29] <smallville7123> is it safe to have overloads of base types?
[07:25:29] <JakeSays> merced: it's a shitty ipc mechanism
[07:25:32] <cloudbender> just a way to signal spawned processes to shut down
[07:25:34] <JakeSays> definitely not performant
[07:25:49] <merced> JakeSays: tbh most of the operations for my shit take > 5s
[07:25:50] <JakeSays> cloudbender: use an event
[07:25:53] <merced> the file system is the _least_ of my worries
[07:25:57] <smallville7123> eg     BitwiseList<T> right,     List<T> right,      object right
[07:26:18] <brianonymous> smallville7123: i think you might has misunderstood, based on the paste
[07:26:33] <smallville7123> if all call Equals(object)
[07:26:48] <brianonymous> smallville7123: you want the Equals part to be in the individual classes youd be comparing
[07:27:08] <brianonymous> the list itself will attach to the uhh Except extension
[07:27:10] <smallville7123> or should i simply have a single `object right` and not bother overloading == and != for different types if i check for those in Equals
[07:27:34] <brianonymous> as long as your class does the Equals right, the except will do its job
[07:27:36] <brianonymous> magically
[07:28:05] <merced> JakeSays: actually wait, all of the upstream shit also uses files
[07:28:07] <merced> hmmm
[07:28:13] <merced> meh, not my problem
[07:28:21] <JakeSays> merced: what upstream shit
[07:28:25] <bpmedley> cloudbender : https://carpenoctem.dev/blog/posix-signal-handling-in-dotnet-6/  <-- Have you seen this?
[07:28:56] <cloudbender> bookmarked
[07:29:27] <bpmedley> cloudbender : https://github.com/dotnet/runtime/issues/50527 <-- also
[07:29:53] <cloudbender> got it
[07:30:30] <merced> JakeSays: so i have a thing that uses filesystem to call my webservice, which is called from a network share watcher, which comes from another service, which watches another share for the data, that a GUI application running in a VM cluster places, that is requested from an oracle queue, which is placed there by the client app
[07:30:50] <JakeSays> holy shit
[07:30:55] <JakeSays> that makes my head hurt
[07:31:00] <merced> yep
[07:31:05] <JakeSays> now i need pumpkin pie
[07:31:05] <merced> so i just said fuck it and did the same
[07:31:12] <merced> i want pumpkin pie :(
[07:31:18] <bpmedley> merced : Does it turn the 💡 on?
[07:31:19] <cloudbender> lol punkin pie
[07:31:24] <JakeSays> merced: with all of that i probably would've done the same as well
[07:31:31] <merced> bpmedley: it _keeps the 💡on actually
[07:31:35] <bpmedley> haha
[07:31:42] * JakeSays heads to his pie
[07:31:47] <merced> xP
[07:32:04] <cloudbender> pumpkin cheesecake with chocolate and sour-cream drizzles
[07:32:13] <cloudbender> ok I'll stop
[07:32:25] <brianonymous> im on a diet and you are making me want bad things
[07:32:45] * JakeSays has ice cream too
[07:32:52] <merced> arghhhhhhh
[07:33:00] <cloudbender> Don't be on a diet, just stop eating corn sugar and canola and walk alot.
[07:33:06] <JakeSays> heh. suckers.
[07:33:07] <merced> its too late for me to bake a pie
[07:33:10] <brianonymous> thats a diet tho
[07:33:28] <JakeSays> brianonymous: that's lifestyle change
[07:33:38] <cloudbender> and eat butter, nevermargarine, which is basically yellow axle grease.
[07:33:39] <brianonymous> im 10 pounds down, in another 5 i can start working out again
[07:33:55] <merced> i stopped eating corn sugar and replaced it with cane sugar
[07:34:06] <merced> and i ran out of olive oil and i've been using corn oil
[07:34:09] <brianonymous> i noticed that at certain weight, my joints hurt if i do things, which scares me
[07:34:09] <cloudbender> ^^^
[07:34:25] *** Quits: Xenoprimate (Xenoprimat@gateway/vpn/protonvpn/xenoprimate) (Ping timeout: 256 seconds)
[07:34:39] <merced> idk i love eating axle grease
[07:34:43] <cloudbender> Olive Oil, Sunflower Oil, Grapeseed Oil, Avocado Oil
[07:34:43] <merced> the lead makes it super sweet
[07:34:44] <brianonymous> ive been attempting intermittent fasting
[07:35:03] <cloudbender> Avocado Oil has the highest burn temperature.
[07:35:15] <merced> yeah but it's so fucking expensive lol
[07:35:27] <merced> brianonymous: any good?
[07:35:34] <brianonymous> its been working, yupyup
[07:35:44] <merced> ive gained like 25lbs over the pandemic :/
[07:35:53] <brianonymous> me too!
[07:36:00] <merced> id be like 200lb if my dog didnt demand walks
[07:36:33] <brianonymous> what seems to work best for me was a sharp eating cutoff after dinner.. no delicious snacking
[07:36:46] <bpmedley> I'm not sure of my weight, but I went down a pants size or so.  Also, depending on the day, the new ones are loose.
[07:37:01] <brianonymous> nice! doing anything or is it just falling off
[07:37:29] <bpmedley> I moved, so I thought it best if I moved somewhere I knew I could walk more.
[07:37:53] <brianonymous> my wife and i will walk, but only in human livable temps
[07:37:55] <merced> being able to walk is just so good
[07:38:02] <merced> its been a shitty winter here
[07:38:08] <brianonymous> its just starting to be nice outside again
[07:38:11] <merced> was 75F today though. tired the shit out of the dog
[07:38:12] <bpmedley> True, you must await to walk
[07:38:19] <merced> we got home and she only got off the couch for dinner
[07:38:25] <merced> lmfao
[07:38:26] <brianonymous> public async Task Walk()?
[07:38:30] <cloudbender> https://www.youtube.com/watch?v=6ai1xpi8bW0
[07:38:45] <merced> brianonymous: it only works if you pass a BinaryTree
[07:39:07] <brianonymous> cloudbender: ah yes, well aware of Mikhaila
[07:39:33] <brianonymous> i tried carnivore for awhile, but it made me a space case
[07:39:56] <merced> ya gotta eat veggies man
[07:40:11] <merced> i heard a really good theory about gut bacteria
[07:40:15] *** Quits: alguien (~alguien@user/alguien) (Quit: Leaving)
[07:40:17] <merced> and the brain-stomach connection
[07:40:37] <merced> this vegan told me about how he craves salads as much as he used to crave mcdonalds burgers
[07:40:42] <bpmedley> smallville7123 : Is your latest dotnetfiddle an IEquatable<T> implementation?
[07:40:43] <merced> and im just like... huh. i could use a fucking burger
[07:40:58] <brianonymous> ive noticed for sure a direct corrolation between the amount of sleep i need and my caloric intake.. the less i eat, the much better i sleep
[07:41:16] <merced> that makes sense
[07:41:22] <merced> less calories, less calories to keep you awake
[07:41:41] <brianonymous> its a dif of needing 7hrs of sleep vs 9
[07:41:50] <brianonymous> quite surprising to me
[07:41:55] <merced> what i've noticed if i have a big dinner later
[07:41:57] <merced> like 10pm
[07:42:00] <merced> i dont sleep well
[07:42:16] <merced> but i usually get really carried away after work
[07:42:22] <merced> like i've been on IRC for the last 6 hours lmao
[07:42:28] <brianonymous> thats when i do the mindless bordom eating
[07:42:42] <merced> i'm also drinking a lot of beer >_>
[07:42:44] <brianonymous> Fuego Takis are delicious
[07:42:50] <merced> i switched to lite beer
[07:42:59] <merced> lol dude my parnter fucking loves those
[07:43:10] <merced> regrets it the next morning, every time though
[07:43:14] <brianonymous> thats because they are fantastic
[07:43:29] <merced> never been a fan of that chemical spicy
[07:43:45] <bpmedley> I've only had one beer I tried, that I liked.  I can't have it because of the sugar.  I enjoy other types of liquor, though..
[07:43:56] <merced> i wishhhhh
[07:44:03] <merced> i'd be so much healthier and happier if i couldnt drink beer
[07:44:08] <bpmedley> lol
[07:44:20] <brianonymous> i just recently cut back on beer significantly
[07:44:23] <cloudbender> Also, the cocoa bean has more minerals per gram than any other food on the planet.
[07:44:25] <brianonymous> as in maybe once a month
[07:44:53] <merced> i've cut it down to
[07:44:55] <merced> every other day
[07:44:57] <merced> ..
[07:45:03] <brianonymous> lol, been there
[07:45:20] <brianonymous> i did the light beer too, usually coors
[07:45:23] <brianonymous> im not fancy
[07:45:26] <merced> mmm coors
[07:45:31] <merced> i've been drinking PBR :v
[07:45:37] <merced> so cheap
[07:45:47] <merced> man a fucking 6-pack of coors is $9 now
[07:45:57] <brianonymous> bpmedley: ever try Skrewball? mmmm
[07:46:29] <brianonymous> back in the day i could take out a case in a weekend
[07:46:34] <brianonymous> coors/miller lite
[07:46:45] <merced> ugh my brother would get a 30-rack of like
[07:46:48] <brianonymous> my body just recently is like NOPE
[07:46:48] <merced> natty ice
[07:46:49] <bpmedley> brianonymous : I'm not sure
[07:46:54] <merced> and smash it in a few hours
[07:47:03] <bpmedley> I like flavored liquor
[07:47:04] <merced> and im like wtf dude doesn't that count as alcohol poisoning
[07:47:10] <merced> and then he passes out shortly after
[07:47:11] <bpmedley> Or, some straight liquor
[07:47:15] <brianonymous> bpmedley: im not big into whiskeys, but goddamn, skrewball is rad
[07:47:21] <merced> mmmm whiskey
[07:47:32] <merced> i've been getting into bourbons recently
[07:47:50] <merced> bulleit 95 is still my favorite
[07:48:04] <bpmedley> brianonymous : Just googled!  I may have.  I remember peanut butter alcohol.
[07:48:17] <brianonymous> bpmedley: it has a mellow captain crunch thing going on
[07:48:54] <bpmedley> I don't drink much and I try not to drink alone, so I haven't drank in a while..
[07:48:59] <cloudbender> I like a Stella Artois now dn then, and I keep a lil' bottle of jegermeister in the mdeicine cabint.
[07:49:06] <merced> mmmm stella
[07:49:10] <bpmedley> mmm... medicine
[07:49:15] <merced> stella's still one of my favorites
[07:49:50] <cloudbender> mmmmm Cap'n Crunch
[07:50:04] <cloudbender> And I mean the cereal, not the phreaker
[07:50:12] <merced> lmao
[07:50:13] <brianonymous> they made a flavory stella that my belgium neighbors made me try and it was delicious. i cant remember the name
[07:50:25] <bpmedley> Schnapps!
[07:50:38] <merced> was it a cidre?
[07:50:39] <cloudbender> And I like Apfelkorn when I can find it
[07:50:58] <cloudbender> (Apple Liqour fro Germany)
[07:51:06] <brianonymous> Schnapps and vodka im forever scared by. my first teen alcohol vomits...
[07:51:16] <cloudbender> ^^^
[07:51:24] <cloudbender> vodka is a monster
[07:51:41] <smallville7123> `List(IEnumerable<T> collection)` adds all the elements in `collection` to `this` right?
[07:51:42] <brianonymous> i cant even smell it anymore
[07:52:11] <brianonymous> it smells of illness and dread, lol
[07:53:28] <brianonymous> alright folks, i gotta get my ass to bed now
[07:53:38] <brianonymous> chat with ya later o/
[07:53:49] <bpmedley> o/
[07:54:20] <bpmedley> smallville7123 : Are you asking if the List constructor that takes a collection as its argument creates a new and different List?
[07:55:08] <merced> lata brianonymous
[07:55:15] <merced> imma enjoy every minute of my weekend
[07:55:54] <bpmedley> merced : Besides enjoyment, do you have any weekend plans?
[07:55:59] <smallville7123> "The MemberwiseClone method creates a shallow copy by creating a new object, and then copying the nonstatic fields of the current object to the new object. If a field is a value type, a bit-by-bit copy of the field is performed. If a field is a reference type, the reference is copied but the referred object is not; therefore, the original object and its clone refer to the same object."   is a class also a r
[07:55:59] <smallville7123> eference type?
[07:56:09] <merced> bpmedley: well its gonna rain all day tomorrow
[07:56:20] <merced> but sunday is gonna be like 55F
[07:56:24] <merced> so prolly take the dog for another walk
[07:56:30] <bpmedley> Fun times
[07:56:33] <merced> was 75F today and walked the dog for 2 hours after work
[07:56:55] <merced> ITS SPRIIIINg
[07:57:19] <merced> smallville7123: yes if your member is a class, it will only copy the reference
[07:57:28] <merced> smallville7123: you know how value types work in C#?
[07:58:02] <smallville7123> no
[07:58:14] <merced> ite so
[07:58:22] <merced> a value type is like an int
[07:58:43] <merced> int a = 5; int b = 6; a = b; makes the memory pointed by a = 6
[07:58:51] <smallville7123> what is the recommended way to create a deep copy of a given object?
[07:58:56] <merced> reflection
[07:59:16] <merced> https://www.pluralsight.com/guides/property-copying-between-two-objects-using-reflection
[07:59:41] <smallville7123> is that as expensive as, for example, Java's reflection?
[08:00:01] <merced> it really depends on what you're trying to do
[08:00:08] *** Quits: smitty (~smitty@050-090-221-062.res.spectrum.com) (Ping timeout: 250 seconds)
[08:00:13] <merced> if you're just grabbing properties n shit
[08:00:20] <merced> its really not very costly at all
[08:00:27] *** Joins: smitty (~smitty@050-090-221-062.res.spectrum.com)
[08:04:48] <smallville7123> hmm ok
[08:08:02] *** Joins: Slade (uid128877@user/slade)
[08:12:08] <smallville7123> is a struct a value type
[08:15:09] <smallville7123> also can a struct contain an interface?
[08:15:28] <smallville7123> eg      struct A : IMyInterface
[08:19:35] *** Joins: jamea (~jamea@177.239.81.39)
[08:20:20] <bpmedley> smallville7123 : https://docs.microsoft.com/en-us/dotnet/csharp/language-reference/builtin-types/record
[08:23:49] <smallville7123> hmm "A structure type can't inherit from other class or structure type and it can't be the base of a class. However, a structure type can implement interfaces."
[08:28:14] <smallville7123> if T is an interface, how can i determine if an element is a class or a struct?
[08:30:00] <smallville7123> like, if i do  A t = new A_IMPL();    would t.getType() return A or A_IMPL ?
[08:33:15] <cloudbender> If you are desinging your own classes/structs you can give them a 'type' property
[08:33:22] *** Quits: DoofusCanadensis (~DoofusCan@2604:3d09:47c:f970::fb) (Quit: So as you can see from this flowchSQUIRREL!!)
[08:33:46] <bpmedley> smallville7123 : I made a mistake, I think.  You said "struct" I gave documentation for "record".
[08:34:28] <smallville7123> bpmedley: its ok
[08:34:43] <smallville7123> cloudbender: im not
[08:34:44] <bpmedley> https://docs.microsoft.com/en-us/dotnet/csharp/language-reference/builtin-types/struct
[08:37:02] <smallville7123> if i do  A t = new A_IMPL();    would t.getType() return typeof(A) or typeof(A_IMPL) ?
[08:37:41] <bpmedley> smallville7123 : Just curious, are you working on a an IEquatable<T> implementation?
[08:38:45] <smallville7123> hmm "GetType always returns the type that was actually instantiated. i.e. the most derived type"
[08:40:10] <jamea> hi all i have this string: "2022/06/11" how to convert to date and check if day is thusday or friday ?
[08:40:48] <bpmedley> jamea : Have you seen https://docs.microsoft.com/en-us/dotnet/api/system.datetime.parse?view=net-6.0 ?
[08:43:10] <smallville7123> if i have a collection of <value_type> is there a way to obtain a reference to an element without causing a copy operation to occur?
[08:43:28] <smallville7123> IEnumerable<value_type>     *
[08:44:21] <smallville7123> as i am currently using `foreach (T obj in collection)` but i dont know if that would cause a copy of the value_type to be produced
[08:49:38] *** Joins: Tobbi (~Tobbi@2a02:8108:1240:48ec:5576:5234:dd88:34d3)
[09:21:50] <cloudbender> You can use index based access rather than using foreach
[09:22:19] <cloudbender> collection[index]
[09:22:32] <cloudbender> aince you are scanning the entire collection anyway
[09:22:37] <cloudbender> ... since you are
[09:23:52] <cloudbender> index=-1; while(++index<collection.Count) { say(collection[index].ToString()) ... or whatever
[09:25:17] <cloudbender> Befoer I go too far, let me ask ...
[09:25:42] <cloudbender> Can I run a TCPListener and a TCPCLient in the same process ?
[09:26:35] <cloudbender> Or maybe I can get by with UDP
[09:26:57] <cloudbender> hmmmm
[09:30:08] <cloudbender> At the end of the day, I actually need a server in there for marshalling peer comms.
[09:30:21] <cloudbender> so much to learn
[09:30:31] *** Quits: k8yun__ (~k8yun@user/k8yun) (Quit: Leaving)
[09:31:09] *** Quits: sysRPL (~sysRPL@ec2-3-131-36-133.us-east-2.compute.amazonaws.com) (Remote host closed the connection)
[09:31:40] *** Joins: sysRPL (~sysRPL@ec2-3-131-36-133.us-east-2.compute.amazonaws.com)
[09:34:19] <jamea> okthanks bpmedley
[09:34:49] <smallville7123> if two objects are equal by instance then they CANNOT be unequal by contained value, right?
[09:35:23] <smallville7123> eg it would be impossible for a.Equals(b) to return false, right?
[09:40:33] <cloudbender> Use the ReferenceEquals method to determine whether two references refer to the same object
[09:41:58] <cloudbender> That's a copy-paste to be honest
[09:42:15] <cloudbender> In other languages I relied on the addressOf semantics
[09:42:35] <cloudbender> but it sounds right
[09:42:41] *** Quits: dmalteseknight (~dmaltesek@user/dmalteseknight) (Quit: WeeChat 3.4)
[09:43:41] *** Joins: dmalteseknight (~dmaltesek@user/dmalteseknight)
[09:52:16] <smallville7123> cloudbender: is ReferenceEquals different from doing  (object) a == (object) b
[09:55:51] *** Quits: vim_fans_ (~pi@user/vim-fans/x-3284168) (Ping timeout: 256 seconds)
[09:57:40] <cloudbender> I'm not sure what type of equality would be assumed with a==b
[09:58:31] <cloudbender> but ReferenceEquals would imply a comparison of the referenced target object(s)
[09:59:34] <cloudbender> i.e. Do these two references reference the same object ?
[09:59:51] <cloudbender> lemme try it
[10:03:36] <Andrio> smallville7123, that is literally what ReferenceEquals does
[10:04:29] *** Quits: sysRPL (~sysRPL@ec2-3-131-36-133.us-east-2.compute.amazonaws.com) (Remote host closed the connection)
[10:08:55] <cloudbender> this works as predicted ...
[10:08:58] <cloudbender> https://gist.github.com/cloudbender/a78b3eaf32ddf3d96e62a14e0543a00b
[10:09:16] <smallville7123> Andrio: oh :)
[10:09:38] <smallville7123> how do i merge two lists together without producing duplicate elements?
[10:10:44] <cloudbender> Use queues instead ?
[10:11:18] <cloudbender> then you can push what you pop, so to speak
[10:12:41] <smallville7123> wouldnt that still result in duplicate elements?
[10:13:46] <cloudbender> Would that depend on the element type ?
[10:14:30] <cloudbender> With reference types, you are holding the reference after it's dequeued, until you push the reference into a new list.
[10:14:50] <cloudbender> The heap is unaffected, I think.
[10:15:12] <cloudbender> You might also try using a wueue as the srouce, and a list as the target.
[10:15:16] *** Joins: vim_fans_ (~pi@user/vim-fans/x-3284168)
[10:15:27] <cloudbender> queue as the source...
[10:16:13] <cloudbender> But there is probably a more elegant way maybe
[10:25:02] *** Quits: Lazenca (~lazenca@user/lazenca) (Remote host closed the connection)
[10:27:15] <smallville7123> ?
[10:28:28] <cloudbender> I may have misunderstood your question
[10:28:55] <cloudbender> I presumed you were asking about not creating copies of values in memory.
[10:29:13] <cloudbender> Perhaps you meant duplicate keys in the lists
[10:30:20] <smallville7123> yea
[10:31:25] <cloudbender> well, you stated that the source lists don't have colliding keys, is that right ?
[10:31:36] <smallville7123> they can
[10:31:41] <cloudbender> ah
[10:34:09] <cloudbender> you could create lists of KeyValuePair, where the KV pair is the value type stored in the collection
[10:34:33] <cloudbender> List<KeyValuePair> mylist ....
[10:35:27] <cloudbender> then accessing List[N] returns a kvpair, and the kvpairs are agnostic to the list key
[10:36:45] <cloudbender> and if you source keys in fact refer to the same element, you can use a dictionary or hashset versus a list
[10:37:24] <cloudbender> And I need a peanutbutter and jelly sammich
[10:38:35] *** Quits: scalablecory (~phrosty@c-73-225-175-19.hsd1.wa.comcast.net) (Ping timeout: 256 seconds)
[10:38:44] <smallville7123> ?
[10:42:57] <cloudbender> There's also the good old DataTable class
[10:43:33] *** Joins: exvicesindaco (~exvicio@user/exvicesindaco)
[10:46:22] <cloudbender> gnite o/
[10:48:42] *** Quits: cloudbender (~cloudbend@user/cloudbender) (Quit: Connection closed)
[11:00:18] <smallville7123> in `List<T> tmp = new(); IEnumerable<T> t = tmp;` t is a REFERENCE to tmp, right?
[11:00:28] <Andrio> Yes.
[11:00:47] <Andrio> You'd have two variables containing identical references
[11:00:55] <smallville7123> as i cannot do `ref (IEnumerable<T>) tmp` nor `ref tmp as IEnumerable<T>`
[11:01:29] <Andrio> You can't use `ref` with something other than a variable
[11:01:33] <smallville7123> as a method argument
[11:02:15] *** Quits: dmalteseknight (~dmaltesek@user/dmalteseknight) (Ping timeout: 252 seconds)
[11:02:26] <smallville7123> Andrio: would it still be a reference if a struct that implements IEnumerable<T> is given?
[11:02:39] <Andrio> Yes; it would be boxed.
[11:02:45] <smallville7123> or would it simply make a copy of the struct as it is a value type ?
[11:02:48] <Andrio> Interfaces are reference types.
[11:05:00] <smallville7123> if a struct implements an interface, is the struct always copied unless it is explicitly assigned to an interface which it implements?
[11:06:03] <Andrio> I'm pretty sure that assigning a value type to anything always copies the value.
[11:06:19] <smallville7123> eg, MyStruct a = b; MyInterface c = b;
[11:06:20] <Andrio> Even if that involves boxing it; that also copies the value.
[11:06:40] <smallville7123> Andrio: hm ok
[11:06:46] <Andrio> but if you assign the boxed value type to another reference type variable, that'll copy only the reference to the box
[11:07:12] <Andrio> If you do that, you'll have three copies of b, one of which is boxed.
[11:08:26] <smallville7123> ok
[11:09:31] <smallville7123> would this work even if BitwiseList is implemented as a struct instead of a class  https://gist.github.com/mgood7123/9ef69a2ebeef703cb25ae8388f76170b
[11:10:49] <Andrio> What is that supposed to do?
[11:11:12] <Andrio> and what kind of data structure are you using to back a BitwiseList?
[11:21:10] <smallville7123> List<T>
[11:23:12] <smallville7123> https://gist.github.com/mgood7123/22be72a80f739c04d3b4ec87569ecc70
[11:30:17] *** Quits: vim_fans_ (~pi@user/vim-fans/x-3284168) (Ping timeout: 240 seconds)
[11:31:46] <smallville7123> https://gist.github.com/mgood7123/ce87ca94baffdd67e96b439ff7b53e8e *
[11:33:45] *** Quits: exvicesindaco (~exvicio@user/exvicesindaco) (Quit: Going offline, see ya! (www.adiirc.com))
[11:40:52] *** Quits: AbleBacon (~AbleBacon@user/AbleBacon) (Read error: Connection reset by peer)
[11:43:02] *** Joins: smallvil_ (~smallvill@cpe-172-193-200-97.qld.foxtel.net.au)
[11:46:32] *** Quits: smallville7123 (~smallvill@cpe-172-193-200-97.qld.foxtel.net.au) (Ping timeout: 240 seconds)
[11:47:44] *** Quits: smallvil_ (~smallvill@cpe-172-193-200-97.qld.foxtel.net.au) (Read error: Connection reset by peer)
[11:48:44] *** Joins: PeterR`` (~chillisau@88.103.230.136)
[11:52:33] *** Joins: smallville7123 (~smallvill@cpe-172-193-200-97.qld.foxtel.net.au)
[12:09:17] <smallville7123> can a switch statement that contains a case body be converted to an expression
[12:10:53] <smallville7123> eg
[12:10:54] <smallville7123> switch (obj) { case short: case int: case long: { short s = (short)obj; return s switch { 0 => Count == 0, -1 => Count > 0, _ => throw new ArgumentOutOfRangeException("integer argument can only be 0 or -1") }; } }
[12:32:35] <Andrio> Not in general, but you can inline the local variable s there so that it can.
[12:33:01] <Andrio> In fact, that can be replaced with an if statement.
[12:33:42] <smallville7123> ok
[12:34:14] <smallville7123> target.pointerIdBits &= ~pointerIdBits; would remove all bits present in pointerIdBits from target.pointerIdBits, right?
[12:35:08] <Andrio> Yeah.
[12:35:18] <smallville7123> ok
[12:36:59] <smallville7123> so it would be something like this? https://gist.github.com/mgood7123/35c1a8212faed80735a329f5daf04f1b
[12:37:13] <smallville7123> for     `target.pointerIdBits &= ~new BitwiseList<object>(pointerIdBits);`
[12:38:59] <smallville7123> with `pointerIdBits` being an instance of `object`
[12:41:49] <smallville7123> specifically, `a &= ~(1 << 3)` would remove the third bit from `a`, and `a &= ~(-1)` would remove all bits from `a`, right?
[12:44:03] <Andrio> (1 << 3) is bit 3, which is the fourth least significant but, not the third.
[12:44:34] *** Joins: kenanmarasli (~kenanmara@user/kenanmarasli)
[12:46:29] *** Joins: Booster2ooo (~Booster2o@user/booster2ooo)
[12:49:58] <smallville7123> yea
[12:50:28] <smallville7123> so,     `a &= ~(-1)` removes ALL bits from `a`     and     `a &= -1` simply results in `a`     right?
[12:53:44] <smallville7123> eg `a &= ~(-1)` is equvilant to `a &= ~a` which sets `a` to 0,    so  `a &= -1` would be equivelant to `a &= a` which would just be `a` since there is nothing new to add, right?
[12:55:45] <smallville7123> or rather, since only the bits in `a` will be present in `-1`
[13:04:18] *** Joins: dmalteseknight (~dmaltesek@user/dmalteseknight)
[13:07:34] *** Joins: vim_fans_ (~pi@user/vim-fans/x-3284168)
[13:58:45] *** Joins: ASUS (~ASUS@user/ASUS)
[13:59:15] *** Parts: ASUS (~ASUS@user/ASUS) ()
[14:06:01] *** Quits: Carbonflux (~Carbonflu@c-66-235-54-179.sea.wa.customer.broadstripe.net) (Quit: When all you have are solutions, everything is a problem.)
[14:26:33] *** Joins: smallvil_ (~smallvill@cpe-172-193-200-97.qld.foxtel.net.au)
[14:27:32] *** Quits: kenanmarasli (~kenanmara@user/kenanmarasli) (Ping timeout: 240 seconds)
[14:29:54] *** Quits: smallville7123 (~smallvill@cpe-172-193-200-97.qld.foxtel.net.au) (Read error: Connection reset by peer)
[14:32:15] *** Joins: exvicesindaco (~exvicio@user/exvicesindaco)
[14:32:52] *** Quits: csrf (~csrf@user/csrf) (Quit: ZNC 1.7.2+deb3 - https://znc.in)
[14:33:36] *** Joins: csrf (~csrf@user/csrf)
[14:53:40] *** Joins: Eiler (~Eiler@c83-253-82-254.bredband.tele2.se)
[14:56:58] *** Joins: kenanmarasli (~kenanmara@user/kenanmarasli)
[14:58:15] <canton7> smallvil_, -1 is a value with all bits set (normally written as '~0'). ~(-1) is a value with no bits set (people normally just write this as '0'). So 'a &= ~(-1) ' is just 'a = a & 0', and anything AND 0 is just 0. Likewise 'a &= -1' is 'a & 0xffffffff', which is just 'a'
[14:59:56] *** Joins: d3sync (~d3sync@212.251.16.252.dsl.dyn.forthnet.gr)
[15:00:44] *** Joins: Roughy (~mdaw45ns@user/roughy)
[15:02:36] *** Quits: d3sync- (~d3sync@212.251.16.252.dsl.dyn.forthnet.gr) (Ping timeout: 252 seconds)
[15:05:02] <smallvil_> yea
[15:05:46] <smallvil_> hmmm
[15:18:50] <smallvil_> would 0 be valid in a bitwise and / or operation ?
[15:28:12] *** Joins: MaNa2k (~MaNa2k@224.81-166-66.customer.lyse.net)
[15:29:32] *** Quits: eto (~eto@S010690724005a172.vc.shawcable.net) (Remote host closed the connection)
[15:31:30] <canton7> smallvil_, sure, why wouldn't it be? It's a fairly pointless thing to use though
[15:31:54] <canton7> Instead of 'a & 0' just write '0'. Instead of 'a | 0' just write 'a'
[15:37:44] *** Quits: MaNa2k (~MaNa2k@224.81-166-66.customer.lyse.net) (Ping timeout: 250 seconds)
[15:39:29] *** Joins: xb0o2 (~xb0o2@user/xb0o2)
[15:45:14] <xb0o2> What's cookin' good lookin'(s)
[15:50:57] *** Joins: Klinda (~superleag@user/klinda)
[16:05:11] *** Quits: jamea (~jamea@177.239.81.39) ()
[16:08:00] *** Joins: bomb (~bomb@user/bomb)
[16:16:53] <bomb> https://www.youtube.com/watch?v=oLa3fZD1vXs
[16:20:32] *** Quits: vim_fans_ (~pi@user/vim-fans/x-3284168) (Ping timeout: 268 seconds)
[16:26:09] *** Quits: kenanmarasli (~kenanmara@user/kenanmarasli) (Read error: Connection reset by peer)
[16:29:25] *** Joins: kenantu (~kenanmara@user/kenanmarasli)
[16:37:26] <smallvil_> hmm somehow my objects are being modified by my list but i am not sure how
[16:47:58] <lz_> I spend so much time on reddit I want to thumb down stuff on irc too
[16:48:07] <xb0o2> Keep your thumbs to yourself
[16:57:45] *** Joins: smallville7123 (~smallvill@cpe-172-193-200-97.qld.foxtel.net.au)
[17:00:16] *** Quits: smallvil_ (~smallvill@cpe-172-193-200-97.qld.foxtel.net.au) (Read error: Connection reset by peer)
[17:05:35] <bomb> PRO TIP: if you're building a commercial software, use Paddle or FastSpring. they handle all the payments, taxes, delivery.
[17:16:29] <smallville7123> qwq VS for mac does not have watch id ;-;
[17:16:31] <smallville7123> https://developercommunity.visualstudio.com/t/add-make-object-id-feature-to-the-visual-studio-fo/411482
[17:16:49] <bomb> uwu
[17:17:19] * smallville7123 wonders if VS 2022 for mac has it
[17:17:35] * smallville7123 but is almost midnight qwq
[17:18:08] <bomb> > Clockwork, a developer of technology for time-sensitive applications, has raised $21 million in Series A funding. NEA led the round.
[17:26:05] *** Quits: smallville7123 (~smallvill@cpe-172-193-200-97.qld.foxtel.net.au) ()
[17:34:24] *** Quits: Booster2ooo (~Booster2o@user/booster2ooo) (Quit: The Game)
[17:39:15] <bomb> https://www.youtube.com/watch?v=gPJEAAlbiP8
[17:59:39] <irwiss> https://www.reddit.com/r/programming/comments/thtwaw/the_british_government_reportedly_asked_when/
[18:07:47] <bomb> sounds goofy, but if she meant user tracking & ad suggestion algorithms, that's a good question.
[18:08:45] <lz_> bomb: yeah, I'm a programmer and I understood exactly what was the question here. Playing on the word "algorithm" is stupid. In the article they mention that microsoft isn't really the worst company in this regard though, there are more obvious problematic companies
[18:12:00] <lz_> r/programming seems to be full of edgy teens who feel they're very smart because they know what an algorithm is
[18:12:03] <bomb> lz_ agree. though Microsoft is competing hard with Windows 11 :)
[18:12:37] <irwiss> the answer is "never" though
[18:12:45] <irwiss> cause it's free moneys
[18:19:47] *** Quits: cliluw (~cliluw@47.147.77.43) (Ping timeout: 250 seconds)
[18:21:59] *** Joins: cliluw (~cliluw@47.147.77.43)
[18:26:59] *** Quits: cliluw (~cliluw@47.147.77.43) (Ping timeout: 256 seconds)
[18:28:47] *** Joins: cliluw (~cliluw@47.147.77.43)
[18:33:02] *** Quits: cliluw (~cliluw@47.147.77.43) (Ping timeout: 240 seconds)
[18:33:11] *** Joins: ekh (~ekh@188.236.231.223)
[18:33:43] <ekh> hello. could someone please tell me how to add ".crt" and ".key" files into a httpclient?
[18:37:03] <bomb> ekh here some examples https://docs.microsoft.com/en-us/dotnet/api/system.web.services.protocols.httpwebclientprotocol.clientcertificates?view=netframework-4.8&viewFallbackFrom=net-6.0
[18:45:51] <ekh> I am getting handshakefailure. I added them like `handler.ClientCertificates.Add(X509Certificate.CreateFromCertFile(CERT)); handler.ClientCertificates.Add(X509Certificate2.CreateFromPemFile(CERT, KEY));`
[18:49:51] <MatthiasVance> Ok
[18:50:04] *** Joins: cloudbender (~cloudbend@user/cloudbender)
[18:50:16] <cloudbender> Gutn Morgn Alles
[18:50:42] <cloudbender> Is there a succinct advantage to using stringbuilder versus string+=... ?
[18:51:08] <lz_> I don't know what the backend storage of a stringbuilder is but it certainly makes less allocations than concatenating strings
[18:51:16] <cloudbender> ok
[18:51:30] <MatthiasVance> ekh: Maybe you forgot to set ClientCertificateOptions?
[18:51:47] <MatthiasVance> ekh: Also why are you doing this manually and not from the Certificate Store?
[18:52:08] <cloudbender> lz_ are you using speech-to-text ? That was a fast answer OMG
[18:52:09] <MatthiasVance> cloudbender: If you have ~5+ concatenations, StringBuilder is faster
[18:52:18] <cloudbender> ok
[18:52:28] <MatthiasVance> Might be different now
[18:52:34] <MatthiasVance> But that's the rough estimate it was before
[18:53:13] <ekh> MatthiasVance, well, not sure. I am porting a JavaScript client into C#, so I am kinda doing it line by line. Also, would Certificate Store work with self signed certificate?
[18:53:19] <MatthiasVance> Yes
[18:53:59] <cloudbender> so I'm using string+= alot when uptaking csv columns, I can probly eek a bit more performance out of the builder class. Nice.
[18:54:12] <MatthiasVance> Write two versions and test them
[18:54:15] <MatthiasVance> With BenchmarkDotnet
[18:54:23] <bpmedley> cloudbender : Are you generating CSV files or data?
[18:54:52] <cloudbender> I scrape reports to CSV,TSV as source files, then absorb them
[18:55:08] <cloudbender> losts of string concats
[18:55:14] <cloudbender> ... lots of ...
[18:55:35] <bpmedley> https://www.nuget.org/packages/CsvHelper/  <-- You might consider this, cloudbender
[18:57:01] <cloudbender> I have a drowlist class with loadCSV, loadTSV, loadJSON methods.
[18:57:08] <ekh> MatthiasVance, I've set client certificate options, still no luck. could you have a look? https://pastebin.com/VE38MYMA
[18:57:26] <cloudbender> and saveCSV,saveTSV,saveJSON methods
[18:58:41] <cloudbender> I should say the JSON is always flat, un-nested .NDJ rows
[18:59:06] <cloudbender> one flat record per ReadLine
[18:59:58] <irwiss> cloudbender: do you actually have performance issues? cause if you don't then stringbuilder is just extra fuss for 0 gain
[19:01:41] <cloudbender> I have no performance issues, I'm actually impressed with c#/.Net for what I'm doing
[19:01:49] <ekh> Once, I had issues with my csv project. it used to take 12-15 minutes to execute with csvhelper. Jake had this snippet that made it run for 50 seconds only. have a look although it was customized for my use case https://gist.github.com/JakeSays/2baf54961845d719b42002f7a976cf9f
[19:02:03] <cloudbender> As long as I don't overdo the logging, things are lightening fast.
[19:03:17] <cloudbender> I can log to the on-screen logger, but I .Hide() it until the loops complete, then show() it.
[19:03:42] <cloudbender> that gives me a x10 speed increase
[19:04:34] <cloudbender> but the logging is only during devs, I'll strip it when the app is complete
[19:06:38] <MatthiasVance> Do the logging async
[19:06:47] <MatthiasVance> Are you using Microsoft.Extensions.Logging?
[19:06:56] <MatthiasVance> ekh: Sorry can't really dive into it right now
[19:09:09] <cloudbender> no. But rather than hide/show, I'm considering buffering the log data and posting to the logger after the loop.
[19:09:18] <cloudbender> That's why I asked about the builder class.
[19:09:25] <xb0o2> When you say on-screen logger, what are you talking about?
[19:11:11] <cloudbender> A custom listbox class with some colorization methods and it makes noises :)
[19:11:23] <cloudbender> luv me some noises
[19:11:26] <MatthiasVance> cloudbender: You could use that as a sink for the logger, then you can also keep it in release
[19:11:50] <MatthiasVance> But yeah if you synchronize to the UI thread every time you add a log message that can be way slower indeed
[19:11:56] <cloudbender> yeah.
[19:12:02] <MatthiasVance> Especially when also waiting for a redraw etc
[19:12:10] <cloudbender> right
[19:14:00] <cloudbender> BTW your hammreing on me about using(var ..., in combination with in-line private scoping, has helped immensley.
[19:14:31] <cloudbender> My blood pressure has dropped substantially
[19:16:30] <cloudbender> I'm aiming for a migration tool that can be drag/drop or use a watcher.
[19:16:53] <bomb> drag/drop is the worst thing ever happened to the discipline of UI/UX
[19:17:23] <cloudbender> yeah, but it makes backing up to google cloud soooo easy
[19:17:56] <cloudbender> ooops I said the G-word in an MS chatroom.  Will Slap Self.
[19:17:58] <bpmedley> https://github.com/VerifyTests/EmptyFiles  <-- Fascinating
[19:18:30] <bomb> whoa that repo
[19:18:34] <bomb> bpmedley what is this?
[19:18:39] <cloudbender> Self Slapped.
[19:19:02] <bpmedley> bomb : https://github.com/VerifyTests/EmptyFiles/blob/main/files/document/empty.pdf  <-- What everyone needs.. :)
[19:19:21] <bpmedley> bomb : I was perusing nuget.org and found a nuget for that repo..
[19:19:23] <cloudbender> To review, this is a sample print-stream I scrape ...
[19:19:25] <bomb> that's empty bpmedley
[19:19:25] <cloudbender> https://gist.github.com/cloudbender/246561b4fb512c9b67db76cd6c42561e
[19:19:35] <bpmedley> https://www.nuget.org/packages/EmptyFiles/
[19:19:45] <bomb> so you're stalking people's repos, is that right bpmedley
[19:19:55] <bpmedley> bomb : No, just dragging and dropping repos
[19:20:27] <bomb> https://beny23.github.io/posts/on_weaponisation_of_open_source/
[19:20:31] <bpmedley> cloudbender : When you say scrape, are you referencing ETL (Extract, Transform, and Load) of data?
[19:20:46] <cloudbender> yes, all of that
[19:21:12] <bpmedley> bomb : I got an email saying some coursera stuff was sanctioned away
[19:21:28] <bomb> bpmedley ugh, which ones?
[19:22:06] <bpmedley> bomb : Some algorithm stuff
[19:22:43] <bomb> https://blog.coursera.org/coursera-response-to-the-humanitarian-crisis-in-ukraine/
[19:24:22] <bomb> well done
[19:24:26] <bomb> https://pbs.twimg.com/media/FNzBanRXwAANIS5?format=png&name=large
[19:25:38] <cloudbender> lol
[19:27:37] <cloudbender> Sometimes, late at night, I look for my Wyse Terminal, and it's not there, and I am sad.
[19:29:08] <MatthiasVance> cloudbender: Get one?
[19:29:36] <cloudbender> I'm not even sure they still make them.
[19:29:52] <cloudbender> I use Ericom Powerterm
[19:30:07] <cloudbender> and  Telnet98
[19:30:31] <MatthiasVance> You wouldn't require a new one right
[19:30:36] <MatthiasVance> So that might improve your chances?
[19:30:56] <cloudbender> er, shall I say, the client uses them, so I have them on standby in the home-office
[19:31:38] <cloudbender> I was being nostalgic; I no longer care to stare at an electron gun for hours-on-end.
[19:33:48] <cloudbender> When I have enough biskits I want to get a nice projector and have a big giant coding screen on the wall.
[19:34:28] <cloudbender> So I can work standing at a podium.  Long-Term seating is bad for the bod.
[19:34:57] *** Joins: Taddeusz8 (~Taddeusz@ip24-253-233-234.ok.ok.cox.net)
[19:36:30] *** Quits: Taddeusz (~Taddeusz@ip24-253-233-234.ok.ok.cox.net) (Ping timeout: 250 seconds)
[19:36:30] *** Taddeusz8 is now known as Taddeusz
[19:37:02] <xb0o2> People sell those for biscuits?
[19:40:40] <MatthiasVance> cloudbender: Could also get a standing desk?
[19:49:05] <bomb> MatthiasVance https://news.ycombinator.com/item?id=30027925
[19:56:25] <ekh> MatthiasVance, I was able to get it done with a pfx file. is it so different to use crt and key instead?
[20:00:22] <MatthiasVance> bomb: Hm yeah
[20:00:30] <MatthiasVance> ekh: I guess that depends :D
[20:00:39] <MatthiasVance> Not if you were using the store ;)
[20:00:58] <ekh> I am not using the store
[20:01:39] <MatthiasVance> I know
[20:02:47] *** Quits: bomb (~bomb@user/bomb) (Quit: ‎)
[20:08:57] *** Quits: dmalteseknight (~dmaltesek@user/dmalteseknight) (Ping timeout: 252 seconds)
[20:12:28] *** Quits: shoelaces (~shoelaces@pool-100-38-191-176.nycmny.fios.verizon.net) (Remote host closed the connection)
[20:19:37] *** Joins: shoelaces (~shoelaces@pool-100-38-191-176.nycmny.fios.verizon.net)
[20:36:36] *** Joins: DoofusCanadensis (~DoofusCan@2604:3d09:47c:f970::fb)
[20:40:52] *** Joins: vitimiti (~Celtor@2a01:4c8:1400:1025:e4a1:ec73:47b6:38c7)
[20:45:14] *** Joins: phrosty (~phrosty@c-73-225-175-19.hsd1.wa.comcast.net)
[20:45:50] *** Joins: scalablecory (~phrosty@c-73-225-175-19.hsd1.wa.comcast.net)
[20:49:43] *** Quits: phrosty (~phrosty@c-73-225-175-19.hsd1.wa.comcast.net) (Ping timeout: 250 seconds)
[20:59:36] *** Joins: Guest48 (~textual@149.62.208.57)
[21:06:55] *** Joins: CodePoint (~CodePoint@107-208-128-79.lightspeed.tukrga.sbcglobal.net)
[21:14:02] *** Quits: CodePoint (~CodePoint@107-208-128-79.lightspeed.tukrga.sbcglobal.net) (Ping timeout: 240 seconds)
[21:27:18] *** Quits: exvicesindaco (~exvicio@user/exvicesindaco) (Quit: Going offline, see ya! (www.adiirc.com))
[21:31:37] <xb0o2> Tell me something I don't know
[21:36:25] *** Joins: d3sync- (~d3sync@212.251.16.252.dsl.dyn.forthnet.gr)
[21:38:03] *** Joins: d3sync|2 (~d3sync@212.251.16.252.dsl.dyn.forthnet.gr)
[21:39:09] *** Quits: d3sync (~d3sync@212.251.16.252.dsl.dyn.forthnet.gr) (Ping timeout: 252 seconds)
[21:40:52] *** Quits: d3sync- (~d3sync@212.251.16.252.dsl.dyn.forthnet.gr) (Ping timeout: 250 seconds)
[21:49:48] *** Quits: cloudbender (~cloudbend@user/cloudbender) (Ping timeout: 240 seconds)
[21:49:58] *** Quits: Guest48 (~textual@149.62.208.57) (Quit: My MacBook Air has gone to sleep. ZZZzzz…)
[21:51:29] <lz_> xb0o2: the speed of light has never been measured in just one direction
[21:53:36] *** Quits: niston (~gridrun@user/niston) ()
[21:56:37] <xb0o2> Thanks
[21:59:26] <irwiss> yeah could be it gets tired on the way back and actually goes faster one way
[21:59:40] <lz_> https://www.youtube.com/watch?v=pTn6Ewhb27k
[22:07:14] <Eiler> !paste
[22:12:07] <xb0o2> !glue
[22:12:44] <DoofusCanadensis> !glitter
[22:13:46] <Nasp>  !bomb
[22:14:19] <xb0o2> Ah, I'm sad. My regular Thai place appears to have closed.
[22:22:02] *** Joins: eto (~eto@S010690724005a172.vc.shawcable.net)
[22:27:17] <lz_> in vscode sometimes I press visual studio shortcuts and ofc they don't work and do stuff, no idea what
[22:27:44] <Nasp> :D
[22:59:20] *** Joins: bomb (~bomb@user/bomb)
[23:00:09] *** Quits: scalablecory (~phrosty@c-73-225-175-19.hsd1.wa.comcast.net) (Ping timeout: 250 seconds)
[23:00:25] <bomb> this winter won't seem to end
[23:00:47] <bomb> the world turned into a large ass Fargo movie set.
[23:04:12] <JakeSays> !shit
[23:05:25] <Nasp> bomb:  It's been winter?
[23:05:33] <JakeSays> ekh: heh. i forgot all about that gist
[23:06:27] <xb0o2> "large ass Fargo movie set"
[23:06:34] <xb0o2> Great phrasin.g
[23:11:35] *** Joins: AbleBacon (~AbleBacon@user/AbleBacon)
[23:12:48] *** Joins: Assault (~Assault@87-95-118-72.bb.dnainternet.fi)
[23:12:55] <JakeSays> cam 1,1: https://www.youtube.com/watch?v=e2gC37ILQmk
[23:13:16] <JakeSays> or 2,2 for you vb'ists
[23:18:01] <Suchiman> JakeSays: looks like a cloud chamber
[23:18:43] <Suchiman> https://youtu.be/XGNvAEtYZkw?t=92
[23:19:07] <bomb> JakeSays 2,2 is firebugs
[23:19:25] <Nasp> Soo many shooting stars
[23:19:31] <xb0o2> I thought Firebug was discontinued
[23:19:39] <Nasp> Also why the fuck are those streams up
[23:20:21] <Nasp> Looks so strange with the police there on the camera
[23:20:30] <Nasp> "Sorry Vladimir, you can't take your Tank into Ukraine"
[23:21:17] <Nasp> 2,2 and 2,4 are those shots
[23:21:24] <Nasp> I take it the slowness of the things are due to the night visio
[23:25:20] <JakeSays> bomb: those are not fire bugs
[23:25:45] <bomb> yeah, Russian hypersonic missiles Kinzhal
[23:26:08] <Nasp> I'm not quite sure what thhat is actually
[23:26:10] <Nasp> Shots or missiles
[23:26:14] <Nasp> Some of it seems a bit looped
[23:26:22] <Nasp> Kinda like when Putin was on TV :D
[23:26:28] <JakeSays> lol
[23:26:59] <Nasp> Wasn't it some year old footage they used the other day for some big stadiu mthingy
[23:31:55] <JakeSays> apparently the ruskies are rounding up ukrainians, searching their phones and computers, and then hauling them off to russia
[23:33:49] <bomb> footage?
[23:34:04] <JakeSays> handage
[23:35:50] <bomb> Julian Assange
[23:36:22] <JakeSays> huh?
[23:36:55] <lz_> not to be mixed up with "Ass-angel"
[23:37:18] *** Joins: Guest48 (~textual@213-130-92-210.ip.btc-net.bg)
[23:39:05] <bomb> this channel is too sexual
[23:42:05] *** Quits: ekh (~ekh@188.236.231.223) (Read error: Connection reset by peer)
[23:42:48] <lz_> bomb: https://www.youtube.com/watch?v=QMoXON7k--c
[23:43:14] <bomb> it's a banger :)
[23:46:05] <bomb> so lz_ do you develop games?
[23:46:28] *** Joins: sysRPL (~sysRPL@ec2-3-131-36-133.us-east-2.compute.amazonaws.com)
[23:46:46] <sysRPL> did anyone get a 3rd stiulus check from the government this year?
[23:47:35] *** Quits: Guest48 (~textual@213-130-92-210.ip.btc-net.bg) (Quit: My MacBook Air has gone to sleep. ZZZzzz…)
[23:47:36] <sysRPL> i filed my taxes two weeks ago and freetax usa aksed if i received a 3rd stimilus check. i said no and it said i would get one
[23:48:48] <sysRPL> stimulus even
[23:49:06] <Nasp> No stimulus check at all
[23:50:54] * JakeSays prefers stimulus in his pants
[23:52:06] <bomb> mooooooods, Jake is horny again
[23:53:54] *** Quits: Assault (~Assault@87-95-118-72.bb.dnainternet.fi) (Ping timeout: 252 seconds)
[23:54:47] <JakeSays> again?
