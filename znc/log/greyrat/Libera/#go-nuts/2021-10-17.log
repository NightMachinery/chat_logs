[00:01:32] *** Quits: INeedAHandle (~INeedAHan@39.124.72.106) (Quit: My MacBook Air has gone to sleep. ZZZzzz‚Ä¶)
[00:02:18] *** Joins: INeedAHandle (~INeedAHan@39.124.72.106)
[00:05:11] *** Quits: paulgrmn (~paulgrmn@user/paulgrmn) (Ping timeout: 264 seconds)
[00:07:19] *** Joins: hunian (~hunian@130.61.201.239)
[00:11:54] *** Quits: todd (~todd@gateway/tor-sasl/toddf) (Ping timeout: 276 seconds)
[00:14:11] *** Quits: neurocyte0132889 (~neurocyte@user/neurocyte) (Ping timeout: 264 seconds)
[00:16:30] *** Joins: krackout (~krackout@ppp046177117063.access.hol.gr)
[00:18:54] *** Joins: silbermm (~silbermm@user/ahappydeath)
[00:19:06] <tuskkk____> how do I convert an escaped hex string to binary in go?
[00:19:31] <ikke> tuskkk____: what is an escaped hex string?
[00:19:48] <tuskkk____> looks like this, "\xa0\x1d\x81\x80\x00\x01\x00\x01\x00\x00\x00\x00\x07\x65\x78\x61"
[00:20:41] <b0nn> didn't this get asked (and answered) the other day?
[00:23:13] <fizzie> Yes, I think it did. (It's already "binary", and if you want a []byte that contains those bytes, just convert the string to a []byte.)
[00:23:40] *** Quits: silbermm (~silbermm@user/ahappydeath) (Ping timeout: 260 seconds)
[00:23:50] <KirkMcDonald> If the string literally contains backslashes, you can use Sscanf() with %q: https://play.golang.org/p/uhLL0Tiqva3
[00:24:29] <fizzie> I got the impression from the last iteration that it was a string literal in the source code that looks like that, but I guess that's a reasonable interpretation too.
[00:24:58] <KirkMcDonald> It's ambiguous. So might as well give both answers, heh.
[00:25:28] <tuskkk____> []byte is what I am after, will try that, thanks
[00:25:35] <fizzie> Well, in the interests of completeness, converting a string literal to a []byte would look like this: https://play.golang.org/p/EVcagY98O2g
[00:26:03] <tuskkk____> üîù
[00:26:22] *** Quits: krackout (~krackout@ppp046177117063.access.hol.gr) (Quit: Leaving)
[00:39:24] *** Joins: silbermm (~silbermm@user/ahappydeath)
[00:43:52] *** Quits: silbermm (~silbermm@user/ahappydeath) (Ping timeout: 252 seconds)
[00:46:15] *** Joins: awmv (~awmv@2a02:21b0:644f:c181:747a:f4a:6757:2306)
[00:48:47] <awmv> I'm looking for someone who using using Taefik with Cloudflare's nameservers to show the way. It's a configuring trap that I have yet to escape from. Give me that rope please. I need a break. I'm desperate. Please.
[00:51:56] <b0nn> awmv: there's a traefik channel on the golang slack - no idea on its efficacy, but it might be worth asking there?
[00:52:27] *** Quits: Pokey (~pokey@spikeyCactus/hoosky) (Quit: Hecc! My server must have died!)
[00:53:30] *** Joins: Pokey (~pokey@spikeyCactus/hoosky)
[00:53:55] <awmv> At this point I might even do that
[00:53:58] <awmv> Thank you
[00:54:58] *** Quits: independent56 (~independe@2.31.88.37) (Read error: Connection reset by peer)
[00:55:11] *** Joins: independent56 (~independe@2.31.88.37)
[00:57:14] *** Quits: johncs (~johncs@2604:a880:2:d0::216b:f001) (Quit: bye)
[00:57:29] *** Joins: silbermm (~silbermm@user/ahappydeath)
[00:58:59] *** Joins: johncs (~johncs@2604:a880:2:d0::216b:f001)
[01:00:16] *** Quits: aniruddha (uid340443@id-340443.ilkley.irccloud.com) (Quit: Connection closed for inactivity)
[01:02:11] *** Quits: silbermm (~silbermm@user/ahappydeath) (Ping timeout: 264 seconds)
[01:06:02] *** Quits: independent56 (~independe@2.31.88.37) (Quit: Leaving)
[01:06:26] *** Joins: independent56 (~independe@2.31.88.37)
[01:09:28] *** Quits: kupi (uid212005@id-212005.hampstead.irccloud.com) (Quit: Connection closed for inactivity)
[01:14:32] *** Quits: jjonah (~jjonah@p200300d5d7058900dea632fffeb3342f.dip0.t-ipconnect.de) (Remote host closed the connection)
[01:14:55] *** Quits: fikran (~fikran@user/fikran) (Ping timeout: 265 seconds)
[01:16:48] *** Joins: fikran (~fikran@user/fikran)
[01:25:53] *** Quits: kiril (~kiril@85.91.153.163) (Ping timeout: 265 seconds)
[01:26:14] <tuskkk____> ethics question - would you hire a person who is not that good at writing code themselves, but can get the job done (knows enough to get around github etc)? #askingForAFriend
[01:31:43] *** Quits: caef^ (~caef@70.166.66.234) (Ping timeout: 252 seconds)
[01:32:04] *** Joins: caef^ (~caef@70.166.66.234)
[01:35:14] *** Quits: CaryHartline (~CaryHartl@2603-8080-6a0e-8d88-148d-18f4-b880-9c05.res6.spectrum.com) (Quit: My iMac has gone to sleep. ZZZzzz‚Ä¶)
[01:36:30] *** Joins: DaleNa9g (~DaleNa9g@071-093-142-189.res.spectrum.com)
[01:36:32] *** Joins: silbermm (~silbermm@user/ahappydeath)
[01:36:39] *** Parts: DaleNa9g (~DaleNa9g@071-093-142-189.res.spectrum.com) ()
[01:37:08] *** Quits: mrig (~iain@user/mrig) (Quit: WeeChat 3.0)
[01:37:30] *** Joins: internut (~internut@2601:280:4e00:7b70:1503:621b:7dcb:587e)
[01:39:12] *** Joins: ahappydeath (~ahappydea@user/ahappydeath)
[01:39:20] <novns> tuskkk____, it depends
[01:39:54] <novns> if you have a choice then there's no reason
[01:40:43] <novns> because this person will bother other coders with simple questions
[01:42:10] *** Quits: internut (~internut@2601:280:4e00:7b70:1503:621b:7dcb:587e) (Ping timeout: 252 seconds)
[01:42:18] *** Joins: lishanhui (~lishanhui@072-182-036-222.res.spectrum.com)
[01:43:59] *** Joins: jay_wild (~very@138.68.15.221)
[01:44:10] *** Quits: INeedAHandle (~INeedAHan@39.124.72.106) (Quit: My MacBook Air has gone to sleep. ZZZzzz‚Ä¶)
[01:44:48] *** Joins: jespada (~jespada@2803:9800:9842:7a62:a1db:843b:ed19:cad6)
[01:44:53] *** Quits: jay_wild (~very@138.68.15.221) (Client Quit)
[01:44:58] *** Quits: silbermm (~silbermm@user/ahappydeath) (Ping timeout: 268 seconds)
[01:46:14] *** Joins: kiril (~kiril@85.91.153.163)
[01:47:08] *** Joins: CaryHartline (~CaryHartl@2603-8080-6a0e-8d88-148d-18f4-b880-9c05.res6.spectrum.com)
[01:47:13] *** Joins: INeedAHandle (~INeedAHan@39.124.72.106)
[01:48:30] *** Joins: jay_wild (~very@138.68.15.221)
[01:52:33] *** Joins: arcatech (~arcatech@user/arcatech)
[01:53:03] *** Quits: INeedAHandle (~INeedAHan@39.124.72.106) (Quit: My MacBook Air has gone to sleep. ZZZzzz‚Ä¶)
[01:58:17] *** Quits: ahappydeath (~ahappydea@user/ahappydeath) (Quit: WeeChat 3.2.1)
[02:03:52] *** Quits: independent56 (~independe@2.31.88.37) (Remote host closed the connection)
[02:04:06] *** Joins: independent56 (~independe@2.31.88.37)
[02:05:30] *** Quits: independent56 (~independe@2.31.88.37) (Remote host closed the connection)
[02:05:37] *** Joins: independent56 (~independe@2.31.88.37)
[02:09:11] <b0nn> tuskkk____: What you are describing is a Junior Developer, and they get hired all the time - the *key* is that the individual shows promise, ie. that they are worth investing time and effort into training, which they do by showing a genuine interest
[02:10:01] <b0nn> People that don't hire juniors are a bad smell in the industry - they cannot teach, they cannot lead, and they rely on the work of others
[02:14:46] <b0nn> Having said that, be wary of people whose ego is ahead of their skills, such that they think they are training people up, but are, instead, pushing bad habits and poor decisions onto Juniors
[02:20:59] *** Quits: keiser0091075852 (~keiser@83.25.208.187.ipv4.supernova.orange.pl) (Ping timeout: 265 seconds)
[02:21:03] *** Quits: independent56 (~independe@2.31.88.37) (Remote host closed the connection)
[02:21:17] *** Joins: independent56 (~independe@2.31.88.37)
[02:22:59] *** Quits: independent56 (~independe@2.31.88.37) (Remote host closed the connection)
[02:23:06] *** Joins: independent56 (~independe@2.31.88.37)
[02:24:17] <hammdist> quite frankly someone who isn't good at writing code shouldn't be hired to do so. look at the number of bugs that supposedly good programmers generate and what that all costs in downtime
[02:25:10] <b0nn> What's the definition of "cannot code"
[02:25:59] <b0nn> Secondly - Code reviews are where those issues are supposed to be spotted/fixed - if you're incapable of doing that, then you're incapable of leading juniors
[02:26:02] *** Joins: keiser0091075852 (~keiser@83.25.208.187.ipv4.supernova.orange.pl)
[02:26:31] <b0nn> Thirdly, if everyone is putting bugs in their code - then nobody can code
[02:26:53] <novns> just let juniors do non critical tasks
[02:27:07] <b0nn> In a weird definition - the truth is, everyone puts bugs into their code, and good teams learn from those bugs and pass on those learnings
[02:27:13] <novns> so they could fail without hard feelings
[02:27:54] *** Joins: freakazoid12345 (~matt@2603:9000:cf0f:80e3:cdc5:a33b:1284:64f8)
[02:28:55] <hammdist> where I currently work code review is more about enforcing the style guide than finding bugs tbh
[02:30:48] *** Quits: freakazoid343 (~matt@2603-9000-cf0f-80e3-cdc5-a33b-1284-64f8.inf6.spectrum.com) (Ping timeout: 265 seconds)
[02:32:08] *** Joins: freakazoid343 (~matt@2603:9000:cf0f:80e3:cdc5:a33b:1284:64f8)
[02:35:32] *** Quits: freakazoid12345 (~matt@2603:9000:cf0f:80e3:cdc5:a33b:1284:64f8) (Ping timeout: 268 seconds)
[02:35:54] <hammdist> there is no reason a junior wouldn't be able to write decent code other than (A) didn't practice enough in college or (B) genuinely poor talent/IQ which can't be improved through practice
[02:38:30] <novns> the best job for a junior is to write all those tests for your big project
[02:39:07] <novns> so they will study the code and learn things
[02:39:22] *** Quits: CaryHartline (~CaryHartl@2603-8080-6a0e-8d88-148d-18f4-b880-9c05.res6.spectrum.com) (Quit: My iMac has gone to sleep. ZZZzzz‚Ä¶)
[02:40:36] *** mooff is now known as cyberspace
[02:40:44] *** cyberspace is now known as mooff
[02:41:11] *** Quits: independent56 (~independe@2.31.88.37) (Ping timeout: 264 seconds)
[02:42:59] *** Quits: rickybob (rickybob@gateway/vpn/protonvpn/rickybob) (Ping timeout: 264 seconds)
[02:47:58] *** Joins: CaryHartline (~CaryHartl@2603-8080-6a0e-8d88-148d-18f4-b880-9c05.res6.spectrum.com)
[02:49:20] *** Joins: krux02 (~krux02@p200300e81728d600319fb3a709c9a336.dip0.t-ipconnect.de)
[03:00:31] <seebs> i think there's a very broad range of skill levels at "writing code", and there's definitely roles where being good at putting things together is sufficient to get the job done, and even desireable.
[03:01:15] <seebs> given the choice, i would probably take someone who can't yet write good code but who is interested in learning and shows signs of learning over someone who can write decent code but doesn't care about getting better.
[03:01:26] *** Quits: keiser0091075852 (~keiser@83.25.208.187.ipv4.supernova.orange.pl) (Quit: Ping timeout (120 seconds))
[03:01:47] <seebs> realistically, i could not successfully do most junior coder jobs to a reasonable standard
[03:03:14] <Kyros> How do I properly escape this in a template? value="{{.ConsumedAt.Format "2006-01-02"}}"
[03:04:13] <seebs> i'd use `` quotes for any quoted thing that you don't want other processing done on.
[03:05:57] <Kyros> seebs on nice thanks
[03:06:02] <Kyros> oh nice even
[03:06:31] <seebs> The best way to escape a thing is not to need to escape it.
[03:06:42] <Kyros> agreed, i really like that solution
[03:07:17] <hammdist> for larger templates, consider including them as bindata
[03:07:25] *** Quits: imm_ (~imm_@user/imm/x-3405860) (Ping timeout: 252 seconds)
[03:07:38] <seebs> yeah, i think there's support for that now in some cases.
[03:07:51] <seebs> yay for neat new toys
[03:09:09] *** Joins: imm_ (~imm_@user/imm/x-3405860)
[03:10:27] <seebs> but yeah, what people consider to be "able to write code" or "decent code" can vary a lot. i've worked with people who could produce reliable, straightforward, code that would work in obvious cases, and who were poor at handling non-obvious cases, or who would handle them by just adding tons of special cases and so on.
[03:10:59] *** Joins: hexfive (~eric@50.35.83.177)
[03:11:26] <seebs> there was a neat series of posts about whether or not a typical programmer can write a binary search without bugs. i think the conclusion was that if you have to write it but not actually run it on input until you declare yourself done, about 10% of programmers can produce a basically-working binary search that doesn't fail in edge cases.
[03:11:40] *** Joins: Diego (~textual@user/diego)
[03:12:28] <seebs> this seems plausible to me. i tried it and i had one just-plain-wrong comparison, but fixing the single-character typo made it work. a friend who's a lot less experienced produced something that worked, after a couple of tries, but was about 3x as complicated.
[03:13:19] *** Joins: keiser0091075852 (~keiser@83.25.208.187.ipv4.supernova.orange.pl)
[03:13:21] <seebs> trivia point: binary search was first described in 1946. the first binary search implementation in which we don't know of any bugs was 1962.
[03:14:23] *** Quits: lishanhui (~lishanhui@072-182-036-222.res.spectrum.com) (Ping timeout: 268 seconds)
[03:14:40] <seebs> oh, wait, no. it wasn't quite a single-character typo; i was looking for either `(h >> 1) + l` or `(h + l) >> 1`, and what i actually wrote was `(h >> 1) + l`, which is definitely-wrong.
[03:15:06] <seebs> but it was otherwise correct including "found", "not found", "found at beginning", "found at end", "empty input array", and so on.
[03:15:36] <Kyros> there is zero chance i could get that right without testing it on data
[03:16:15] <Kyros> i cant even remember the last time i had to code a data structure either
[03:16:42] <seebs> the junior dude's code was in racket, not go, so he decided to use false instead of -1 for "not found", which meant that his recursive calls for high-half tests, instead of returning midpoint + offset into that slice, had to check whether it was false and if so yield false otherwise the computed offset.
[03:16:44] *** Quits: hexfive (~eric@50.35.83.177) (Quit: WeeChat 3.0.1)
[03:17:29] <seebs> also it had special cases for length 0, and length 1, and also it copied the entire sub-array for the recursive search rather than referencing a subset of the same array, giving it O(N) space and runtime costs.
[03:18:06] <seebs> but also he's smarter than i am so if he were more actively practicing he'd probably be better than me in not too long.
[03:18:46] <b0nn> he needs to practice his pointer knowledge (rather than using a subslice)
[03:19:46] <b0nn> Pointers (or references) are more "universal) and don't require Go specific knowledge (where the slice is hiding the pointers
[03:20:55] *** Joins: Snyp (~Snyp@49.207.216.206)
[03:20:56] <seebs> a quick perusal of Racket's stuff did not convince me that the underlying "vector" thing allowed subslicing, but perhaps it does.
[03:20:59] <b0nn> Understanding how the pointers work in a solution will guide the subslice solution
[03:21:29] *** Joins: todd (~todd@gateway/tor-sasl/toddf)
[03:21:37] <seebs> i didn't subslice, in mine, i just set the bounds correctly in the first place.
[03:21:49] <seebs> l, h := 0, len(s)
[03:22:42] <seebs> then, `for l < h`, and you've successfully solved all the hard problems; you are always working on the range [l,h), the empty or nil slice is handled, the running out of things to search case is handled, etcetera.
[03:23:04] <seebs> if you fall out of the loop, it's because you didn't find it, if you find it, you know the index. problem solved.
[03:23:50] *** Joins: saml (~saml@cpe-74-73-80-162.nyc.res.rr.com)
[03:24:15] <b0nn> assuming the data is in an array :)
[03:24:23] *** Quits: fikran (~fikran@user/fikran) (Ping timeout: 264 seconds)
[03:24:46] * b0nn sends you a BST, that is sitting unordered in contiguous memory
[03:24:56] *** Joins: INeedAHandle (~INeedAHan@39.124.72.106)
[03:25:19] *** Quits: Diego (~textual@user/diego) (Quit: Textual IRC Client: www.textualapp.com)
[03:25:19] *** Joins: hexfive (~eric@50.35.83.177)
[03:26:09] *** Joins: fikran (~fikran@user/fikran)
[03:28:12] *** Quits: todd (~todd@gateway/tor-sasl/toddf) (Ping timeout: 276 seconds)
[03:29:10] *** Quits: Snyp (~Snyp@49.207.216.206) (Quit: My MacBook has gone to sleep. ZZZzzz‚Ä¶)
[03:35:11] *** Joins: todd (~todd@gateway/tor-sasl/toddf)
[03:35:15] <seebs> well, yes, it does assume an input contiguous array
[03:42:19] *** Quits: hexfive (~eric@50.35.83.177) (Quit: WeeChat 3.0.1)
[03:42:23] *** Quits: rcernin_ (~rcernin@124.190.139.235) (Ping timeout: 264 seconds)
[03:46:02] *** Quits: predmijat (~predmijat@mail.strogopro.com) (Quit: bye)
[03:47:38] *** Joins: predmijat (~predmijat@mail.strogopro.com)
[03:49:39] *** Quits: todd (~todd@gateway/tor-sasl/toddf) (Ping timeout: 276 seconds)
[03:49:48] *** Joins: christophergray (~christoph@190.148.52.216)
[03:52:11] *** Joins: rcernin_ (~rcernin@2001:8003:6803:db00:98dc:5b7a:6313:549a)
[03:54:43] *** Quits: theoceaniscool (~theoceani@119.12.232.133) (Ping timeout: 252 seconds)
[03:57:32] *** Joins: todd (~todd@gateway/tor-sasl/toddf)
[03:58:40] *** Quits: mickey8 (~user@user/mickey) (Quit: Ping timeout (120 seconds))
[03:58:57] <mrus> is there a way to pass a struct to a func, which in turn uses that to create a new instance, pass it to json.Unmarshal and return that instance?
[03:59:05] *** Joins: mickey8 (~user@user/mickey)
[03:59:48] <seebs> i don't know what you mean by "instance"
[04:00:33] <seebs> do you mean you want to take an *arbitrary* struct, and then make a new blank struct of that type, and use Unmarshal on it, and get back a struct of the same type?
[04:00:44] <b0nn> mrus: seems pretty easy
[04:00:45] <seebs> That is not currently exactly-possible, but you can semi do it with interface{}
[04:01:03] <mrus> seebs: instanceOfMyStruct := myFunc(MyStruct, data)
[04:01:05] <seebs> but you can't actually have the return type of the function be of your specific type without generics, which are not expected to be really in until 1.18
[04:01:43] <mrus> basically a New() but for any struct type
[04:02:04] <seebs> probably easier to just do `dummy := myStruct; json.Unmarshal(data, &dummy)`
[04:02:32] <mrus> heh, yeah.. that's what I'm doing now. Thought I could save some lines here and there.
[04:02:36] <seebs> so, pre-generic, you have to take a specific type, or use interfaces, and you can do that with interface{}, but then your return value can't be of a specific type because you don't know what that type should be.
[04:03:15] <seebs> the alternative, using the interface thing, would end up being something like foo := myFunc(&templateStruct, data).(*templateStructType)
[04:03:22] <seebs> but you have to actually give the specific type in the type switch then.
[04:03:46] <mrus> meh, doesn't seem like it would get cleaner then :)
[04:03:52] *** Quits: arcatech (~arcatech@user/arcatech) (Quit: Bye.)
[04:03:59] <seebs> yeah. once there's generics, you can probably do better.
[04:04:05] <mrus> thanks!
[04:06:19] <LambdaComplex> so, let's say i have some client and i want to make rate-limited requests (e.g. X requests per second, total) using multiple goroutines, and i want that limit to change over time (e.g. start out at a limit of 5 requests per second, then after 10 seconds change the limit to 10 requests per second, etc)
[04:06:28] <LambdaComplex> what sort of algorithm should i be using? leaky bucket? token bucket? sliding window?
[04:06:31] *** Joins: internut (~internut@2601:280:4e00:7b70:1503:621b:7dcb:587e)
[04:06:49] <LambdaComplex> (i don't think i fully understand the difference between a leaky bucket and a token bucket at this point. i think token buckets allow bursting and leaky buckets don't? maybe?)
[04:07:25] <LambdaComplex> (although i think a leaky bucket can be implemented using a token bucket with certain parameters?)
[04:08:43] *** Quits: gbmor (ben@gbmor.dev) (Quit: rebooping for updates)
[04:09:25] <b0nn> a token bucket would require that you have tokens specific to a given user to be rate limited
[04:10:07] <b0nn> er, what I mean is - token buckets are for all users to be rate limited, and leaky buckets are for individual users (at least that's how I've implemented them)
[04:10:48] <b0nn> I mean, you can have a token bucket per user - like you would with a leaky bucket - but that would mean you have a shedload of memory in use
[04:11:11] *** Quits: internut (~internut@2601:280:4e00:7b70:1503:621b:7dcb:587e) (Ping timeout: 264 seconds)
[04:12:08] <LambdaComplex> i'm guessing "user" and "goroutine" are probably synonymous in this case?
[04:12:30] * LambdaComplex should probably write some code to test things
[04:13:18] <b0nn> Yeah, think of things like - leaky buckets show what a user has used in the past, token buckets show what a user is allowed to use in the future
[04:13:30] <b0nn> er, s/user/goroutine
[04:16:03] *** Quits: rcernin_ (~rcernin@2001:8003:6803:db00:98dc:5b7a:6313:549a) (Ping timeout: 268 seconds)
[04:16:46] *** Joins: rcernin_ (~rcernin@2001:8003:6803:db00:98dc:5b7a:6313:549a)
[04:20:12] *** Quits: todd (~todd@gateway/tor-sasl/toddf) (Ping timeout: 276 seconds)
[04:20:27] <LambdaComplex> it looks like i can probably accomplish what i'm trying to do with golang.org/x/time/rate.Limiter
[04:20:33] <LambdaComplex> just gotta keep burst at 1
[04:21:31] *** Joins: todd (~todd@gateway/tor-sasl/toddf)
[04:22:13] *** Quits: schaeffer (~schaeffer@user/schaeffer) (Ping timeout: 268 seconds)
[04:22:20] *** Quits: krux02 (~krux02@p200300e81728d600319fb3a709c9a336.dip0.t-ipconnect.de) (Remote host closed the connection)
[04:22:39] *** Joins: schaeffer (~schaeffer@user/schaeffer)
[04:30:01] *** Quits: Seirdy (~Seirdy@sourcehut/user/seirdy) (Quit: exiting 3.2)
[04:30:37] *** Joins: Seirdy (~Seirdy@sourcehut/user/seirdy)
[04:30:55] <LambdaComplex> okay i am definitely not understanding how SetLimitAt works
[04:31:39] *** Joins: freakazoid12345 (~matt@2603-9000-cf0f-80e3-cdc5-a33b-1284-64f8.inf6.spectrum.com)
[04:31:52] <LambdaComplex> ohhhhh
[04:31:57] <LambdaComplex> okay i think i understand now
[04:32:06] <LambdaComplex> (i also think that's a dumb name. or it needs better documentation)
[04:34:55] <b0nn> Raise an issue - if it's misdcoumented then it should be fixed, so other users don't have problems with it
[04:34:57] *** Quits: freakazoid343 (~matt@2603:9000:cf0f:80e3:cdc5:a33b:1284:64f8) (Ping timeout: 268 seconds)
[04:36:27] *** Quits: todd (~todd@gateway/tor-sasl/toddf) (Ping timeout: 276 seconds)
[04:37:03] *** Joins: gbmor (ben@gbmor.dev)
[04:38:55] *** Quits: jespada (~jespada@2803:9800:9842:7a62:a1db:843b:ed19:cad6) (Quit: My MacBook has gone to sleep. ZZZzzz‚Ä¶)
[04:43:05] <LambdaComplex> i just might
[04:44:06] *** Quits: andlabs (~andlabs@ool-ad034a4d.dyn.optonline.net) (Quit: My MacBook has gone to sleep. ZZZzzz‚Ä¶)
[04:50:53] *** Joins: Snyp (~Snyp@49.207.216.206)
[04:51:53] *** Quits: CaryHartline (~CaryHartl@2603-8080-6a0e-8d88-148d-18f4-b880-9c05.res6.spectrum.com) (Quit: My iMac has gone to sleep. ZZZzzz‚Ä¶)
[04:55:15] *** Joins: xiongxin (~quassel@113.116.224.79)
[04:57:06] *** Quits: noarb (~noarb@user/noarb) (Quit: ZNC 1.8.2 - https://znc.in)
[04:57:43] *** Joins: noarb (~noarb@user/noarb)
[04:58:01] *** Quits: moldorcoder7_ (~moldorcod@37.120.143.28) (Quit: %bye mirc%)
[04:58:24] *** Joins: moldorcoder7 (~moldorcod@37.120.143.28)
[05:00:00] *** Quits: Snyp (~Snyp@49.207.216.206) (Ping timeout: 265 seconds)
[05:02:09] *** Joins: gggp (~gggp@li870-78.members.linode.com)
[05:05:40] *** Quits: noarb (~noarb@user/noarb) (Read error: Connection reset by peer)
[05:08:54] *** Joins: noarb (~noarb@user/noarb)
[05:15:00] *** Joins: bsandro (~bsandro@139.138.197.56)
[05:15:44] *** Quits: awmv (~awmv@2a02:21b0:644f:c181:747a:f4a:6757:2306) (Quit: Client closed)
[05:19:45] *** Joins: CaryHartline (~CaryHartl@2603-8080-6a0e-8d88-148d-18f4-b880-9c05.res6.spectrum.com)
[05:22:12] *** Quits: christophergray (~christoph@190.148.52.216) (Quit: WeeChat 3.3)
[05:22:18] *** Quits: gggp (~gggp@li870-78.members.linode.com) (Quit: My MacBook has gone to sleep. ZZZzzz‚Ä¶)
[05:27:14] *** mooff is now known as mooff|
[05:28:09] *** mooff| is now known as mooff
[05:29:42] *** Quits: noarb (~noarb@user/noarb) (Read error: Connection reset by peer)
[05:31:36] <dostoyevsky2> > func listObjects(ctx context.Context, obj ObjectLayer, bucket, prefix, marker, delimiter string, maxKeys int, tpool *TreeWalkPool, listDir ListDirFunc, isLeaf IsLeafFunc, isLeafDir IsLeafDirFunc, getObjInfo func(context.Context, string, string) (ObjectInfo, error), getObjectInfoDirs ...func(context.Context, string, string) (ObjectInfo, error)) (loi ListObjectsInfo, err error)
[05:32:27] *** Joins: andlabs (~andlabs@70.107.171.168)
[05:32:53] *** Joins: noarb (~noarb@user/noarb)
[05:33:11] <dostoyevsky2> 12 parameters, not sure what to think of such a function
[05:33:52] *** Joins: pepee (~pepee@user/pepee)
[05:33:59] *** Quits: fikran (~fikran@user/fikran) (Ping timeout: 264 seconds)
[05:35:30] *** Joins: fikran (~fikran@user/fikran)
[05:35:35] *** Quits: freakazoid12345 (~matt@2603-9000-cf0f-80e3-cdc5-a33b-1284-64f8.inf6.spectrum.com) (Read error: Connection reset by peer)
[05:36:11] <LambdaComplex> i know what to think!
[05:36:13] <LambdaComplex> it's horrible
[05:36:15] *** Joins: freakazoid12345 (~matt@2603-9000-cf0f-80e3-cdc5-a33b-1284-64f8.inf6.spectrum.com)
[05:36:49] *** Quits: hammdist (~hammdist@c-98-248-66-141.hsd1.ca.comcast.net) (Quit: Client closed)
[05:37:13] <dostoyevsky2> I haven't seen a lot of beautiful golang code, tbh... maybe I am looking at the wrong projects...  (this example is from minio)
[05:37:37] <dostoyevsky2> maybe the compiler itself
[05:39:12] *** Joins: silbermm (~silbermm@user/ahappydeath)
[05:39:29] *** Quits: dza (~dza@user/dza) (Read error: Connection reset by peer)
[05:42:02] <LambdaComplex> god
[05:42:08] <LambdaComplex> 12 parameters and 5 of them are functions?
[05:42:35] *** Joins: dza (~dza@user/dza)
[05:42:56] <LambdaComplex> i feel like this function is begging for a comment above it explaining what it's supposed to do
[05:42:58] <LambdaComplex> this is painful
[05:43:02] <dostoyevsky2> Yeah, couldn't that be an interface?
[05:43:15] <LambdaComplex> couldn't what be an interface?
[05:43:35] <dostoyevsky2> passing around 5 functions as parameters
[05:43:38] *** Quits: noarb (~noarb@user/noarb) (Quit: ZNC 1.8.2 - https://znc.in)
[05:44:11] *** Quits: silbermm (~silbermm@user/ahappydeath) (Ping timeout: 264 seconds)
[05:45:16] <b0nn> people often hide that sort of yick in a struct
[05:48:52] *** Joins: noarb (~noarb@user/noarb)
[05:57:53] *** Quits: nitrix (~nitrix@user/nitrix) (Quit: Genius is one percent inspiration and ninety-nine percent perspiration)
[05:58:19] *** Quits: alzgh (~alzgh@user/alzgh) (Remote host closed the connection)
[05:59:41] *** Joins: lishanhui (~lishanhui@104-184-3-133.lightspeed.austtx.sbcglobal.net)
[06:01:16] *** Quits: hgl (hgl@67.230.181.248) (Changing host)
[06:01:16] *** Joins: hgl (hgl@user/hgl)
[06:02:21] *** Joins: nitrix (~nitrix@user/nitrix)
[06:02:49] *** Joins: internut (~internut@2601:280:4e00:7b70:1503:621b:7dcb:587e)
[06:04:10] *** Joins: todd (~todd@gateway/tor-sasl/toddf)
[06:04:17] *** Quits: xiongxin (~quassel@113.116.224.79) (Ping timeout: 265 seconds)
[06:04:26] *** Joins: xiongxin_ (~quassel@113.116.32.200)
[06:07:11] *** Quits: internut (~internut@2601:280:4e00:7b70:1503:621b:7dcb:587e) (Ping timeout: 245 seconds)
[06:12:50] *** Quits: mickey8 (~user@user/mickey) (Quit: Ping timeout (120 seconds))
[06:13:18] *** Joins: mickey8 (~user@user/mickey)
[06:18:45] *** Joins: gggp (~gggp@li870-78.members.linode.com)
[06:28:49] *** Quits: mickey8 (~user@user/mickey) (Quit: Ping timeout (120 seconds))
[06:29:09] *** Joins: mickey8 (~user@user/mickey)
[06:31:41] *** Quits: saml (~saml@cpe-74-73-80-162.nyc.res.rr.com) (Quit: Leaving)
[06:40:57] *** Joins: PortableDave (~portabled@194-193-148-202.tpgi.com.au)
[06:50:57] *** Quits: CaryHartline (~CaryHartl@2603-8080-6a0e-8d88-148d-18f4-b880-9c05.res6.spectrum.com) (Quit: My iMac has gone to sleep. ZZZzzz‚Ä¶)
[06:51:00] *** Quits: todd (~todd@gateway/tor-sasl/toddf) (Ping timeout: 276 seconds)
[06:51:43] *** Joins: CaryHartline (~CaryHartl@2603-8080-6a0e-8d88-148d-18f4-b880-9c05.res6.spectrum.com)
[06:53:32] *** Quits: Torr (~Torr@user/torr) (Remote host closed the connection)
[06:57:16] *** Quits: LiftLeft (~LiftLeft@gateway/vpn/pia/liftleft) (Ping timeout: 252 seconds)
[07:04:23] *** Quits: gggp (~gggp@li870-78.members.linode.com) (Remote host closed the connection)
[07:04:55] *** Joins: gggp (~gggp@li870-78.members.linode.com)
[07:07:05] *** Quits: freakazoid12345 (~matt@2603-9000-cf0f-80e3-cdc5-a33b-1284-64f8.inf6.spectrum.com) (Remote host closed the connection)
[07:07:45] *** Joins: freakazoid12345 (~matt@2603:9000:cf0f:80e3:cdc5:a33b:1284:64f8)
[07:14:15] *** Joins: LiftLeft (~LiftLeft@216-26-118-34.dynamic.nelson.airstreamcomm.net)
[07:19:19] *** Quits: LiftLeft (~LiftLeft@216-26-118-34.dynamic.nelson.airstreamcomm.net) (Ping timeout: 252 seconds)
[07:25:45] *** Quits: NCS_One (~NCS_One@bl11-90-133.dsl.telepac.pt) (Quit: Lost terminal)
[07:28:35] *** Quits: xiongxin_ (~quassel@113.116.32.200) (Ping timeout: 264 seconds)
[07:38:32] *** Quits: pepee (~pepee@user/pepee) (Ping timeout: 265 seconds)
[07:41:39] *** Quits: PortableDave (~portabled@194-193-148-202.tpgi.com.au) (Quit: My MacBook has gone to sleep. ZZZzzz‚Ä¶)
[07:42:48] *** Quits: gggp (~gggp@li870-78.members.linode.com) (Quit: Textual IRC Client: www.textualapp.com)
[07:42:55] *** Quits: fikran (~fikran@user/fikran) (Ping timeout: 252 seconds)
[07:44:31] *** Joins: frost (~frost@59.71.244.189)
[07:44:32] *** Joins: PortableDave (~portabled@194-193-148-202.tpgi.com.au)
[07:44:33] *** Joins: mikey__ (~mikey__@cpe-167-100-16-236.mt-rushmore.net)
[07:44:51] *** Joins: fikran (~fikran@user/fikran)
[07:50:02] *** Joins: xiongxin (~quassel@113.116.224.79)
[07:50:26] *** Joins: gggp (~gggp@li870-78.members.linode.com)
[07:51:20] *** Joins: internut (~internut@2601:280:4e00:7b70:1503:621b:7dcb:587e)
[07:53:07] *** Quits: gggp (~gggp@li870-78.members.linode.com) (Remote host closed the connection)
[07:56:11] *** Quits: internut (~internut@2601:280:4e00:7b70:1503:621b:7dcb:587e) (Ping timeout: 264 seconds)
[07:58:06] *** nitrix is now known as nitrix-or-treat
[08:00:21] *** Joins: gggp (~gggp@li870-78.members.linode.com)
[08:00:39] *** Quits: gggp (~gggp@li870-78.members.linode.com) (Client Quit)
[08:11:44] *** Joins: silbermm (~silbermm@user/ahappydeath)
[08:16:52] *** Quits: mickey8 (~user@user/mickey) (Quit: Ping timeout (120 seconds))
[08:17:15] *** Joins: mickey8 (~user@user/mickey)
[08:18:10] *** Quits: silbermm (~silbermm@user/ahappydeath) (Ping timeout: 252 seconds)
[08:18:12] *** Joins: gggp (~gggp@li870-78.members.linode.com)
[08:18:16] *** Joins: LiftLeft (~LiftLeft@216-26-118-34.dynamic.nelson.airstreamcomm.net)
[08:26:01] *** Quits: gggp (~gggp@li870-78.members.linode.com) (Quit: My MacBook has gone to sleep. ZZZzzz‚Ä¶)
[08:32:39] *** Quits: mickey8 (~user@user/mickey) (Quit: Ping timeout (120 seconds))
[08:33:00] *** Joins: mickey8 (~user@user/mickey)
[08:33:55] *** Joins: dez_ (~dez@2607:9880:1830:5e:2e37:a44d:d9d3:8bd1)
[08:40:20] *** Quits: bsund (~bsund@user/bsund) (Quit: Leaving)
[08:41:51] *** Quits: xiongxin (~quassel@113.116.224.79) (Ping timeout: 265 seconds)
[08:49:08] *** Joins: gggp (~gggp@li870-78.members.linode.com)
[08:53:47] *** Quits: LiftLeft (~LiftLeft@216-26-118-34.dynamic.nelson.airstreamcomm.net) (Ping timeout: 264 seconds)
[08:54:20] *** Parts: dez_ (~dez@2607:9880:1830:5e:2e37:a44d:d9d3:8bd1) ()
[08:54:25] *** Joins: dansan (~daniel@75.81.148.51)
[08:58:17] *** Quits: rcernin_ (~rcernin@2001:8003:6803:db00:98dc:5b7a:6313:549a) (Ping timeout: 264 seconds)
[09:00:13] *** Joins: internut (~internut@2601:280:4e00:7b70:1503:621b:7dcb:587e)
[09:02:41] *** Quits: gggp (~gggp@li870-78.members.linode.com) (Remote host closed the connection)
[09:03:44] *** Joins: gggp (~gggp@li870-78.members.linode.com)
[09:03:47] *** Quits: gggp (~gggp@li870-78.members.linode.com) (Remote host closed the connection)
[09:04:18] *** Joins: gggp (~gggp@li870-78.members.linode.com)
[09:04:41] *** Quits: internut (~internut@2601:280:4e00:7b70:1503:621b:7dcb:587e) (Ping timeout: 245 seconds)
[09:05:31] *** Joins: diamondburned[m] (~diamondbu@2001:470:69fc:105::3d00)
[09:06:11] *** Quits: dansan (~daniel@75.81.148.51) (Quit: The C preprocessor is a pathway to many abilities some consider to be unnatural.)
[09:06:48] *** Quits: gggp (~gggp@li870-78.members.linode.com) (Remote host closed the connection)
[09:07:19] *** Joins: gggp (~gggp@li870-78.members.linode.com)
[09:08:08] *** Joins: rcernin_ (~rcernin@2001:8003:6803:db00:98dc:5b7a:6313:549a)
[09:10:22] *** Joins: mikoto-chan (~mikoto-ch@ip-83-134-2-136.dsl.scarlet.be)
[09:11:01] *** Joins: internut (~internut@2601:280:4e00:7b70:7c1c:8d1a:107d:9591)
[09:13:07] *** Joins: aniruddha (uid340443@id-340443.ilkley.irccloud.com)
[09:15:06] *** Quits: gggp (~gggp@li870-78.members.linode.com) (Remote host closed the connection)
[09:15:41] *** Joins: gggp (~gggp@li870-78.members.linode.com)
[09:15:59] *** Quits: internut (~internut@2601:280:4e00:7b70:7c1c:8d1a:107d:9591) (Ping timeout: 264 seconds)
[09:17:38] *** Joins: dansan (~daniel@75.81.148.51)
[09:17:47] *** Quits: rcernin_ (~rcernin@2001:8003:6803:db00:98dc:5b7a:6313:549a) (Ping timeout: 264 seconds)
[09:17:52] *** Quits: gggp (~gggp@li870-78.members.linode.com) (Client Quit)
[09:19:36] *** Joins: rcernin_ (~rcernin@2001:8003:6803:db00:98dc:5b7a:6313:549a)
[09:21:15] *** Joins: jpw (~jpw@user/jpw)
[09:21:55] *** Joins: jasper_ (~user@styria.daemonized.org)
[09:24:10] *** Quits: rcernin_ (~rcernin@2001:8003:6803:db00:98dc:5b7a:6313:549a) (Ping timeout: 252 seconds)
[09:25:10] *** Parts: mikey__ (~mikey__@cpe-167-100-16-236.mt-rushmore.net) (WeeChat 3.3)
[09:28:48] *** Joins: rcernin_ (~rcernin@2001:8003:6803:db00:98dc:5b7a:6313:549a)
[09:29:42] *** Quits: lishanhui (~lishanhui@104-184-3-133.lightspeed.austtx.sbcglobal.net) (Ping timeout: 265 seconds)
[09:34:05] *** Joins: clarjon1 (~clarjon1@user/clarjon1)
[09:37:36] *** Quits: rcernin_ (~rcernin@2001:8003:6803:db00:98dc:5b7a:6313:549a) (Ping timeout: 245 seconds)
[09:42:08] *** Joins: lishanhui (~lishanhui@104-184-3-133.lightspeed.austtx.sbcglobal.net)
[09:49:12] *** Joins: adlternative (~adl@117.32.216.79)
[09:52:25] *** Quits: fikran (~fikran@user/fikran) (Ping timeout: 265 seconds)
[09:54:12] *** Joins: fikran (~fikran@user/fikran)
[09:58:13] *** Quits: PortableDave (~portabled@194-193-148-202.tpgi.com.au) (Quit: My MacBook has gone to sleep. ZZZzzz‚Ä¶)
[09:59:04] *** Joins: PortableDave (~portabled@194-193-148-202.tpgi.com.au)
[10:01:57] *** Quits: PortableDave (~portabled@194-193-148-202.tpgi.com.au) (Client Quit)
[10:14:57] *** Quits: adlternative (~adl@117.32.216.79) (Remote host closed the connection)
[10:15:20] *** Joins: adlternative (~adl@117.32.216.102)
[10:16:16] *** Quits: jpw (~jpw@user/jpw) (Remote host closed the connection)
[10:22:30] *** Joins: internut (~internut@2601:280:4e00:7b70:7c1c:8d1a:107d:9591)
[10:27:17] *** Quits: internut (~internut@2601:280:4e00:7b70:7c1c:8d1a:107d:9591) (Ping timeout: 268 seconds)
[10:31:23] *** Joins: gggp (~gggp@li870-78.members.linode.com)
[10:33:12] *** Joins: Brenon (~Brenon@c-67-177-1-226.hsd1.ut.comcast.net)
[10:38:49] *** Quits: lishanhui (~lishanhui@104-184-3-133.lightspeed.austtx.sbcglobal.net) (Ping timeout: 265 seconds)
[10:40:04] *** Quits: chasmo77 (~chas77@71.63.241.168) (Quit: It's just that easy)
[10:43:16] *** Quits: gggp (~gggp@li870-78.members.linode.com) (Remote host closed the connection)
[10:43:48] *** Joins: gggp (~gggp@li870-78.members.linode.com)
[10:48:44] *** Joins: xiongxin (~quassel@113.116.224.79)
[10:49:18] *** Joins: independent56 (~independe@2.31.88.37)
[10:51:41] *** Joins: CoolerX (~CoolerX@user/coolerx)
[10:52:06] *** Joins: lishanhui (~lishanhui@104-184-3-133.lightspeed.austtx.sbcglobal.net)
[10:53:32] *** Quits: Memory (sid459764@user/memory) ()
[10:55:32] *** Joins: Memory (sid459764@user/memory)
[10:56:03] *** Quits: Memory (sid459764@user/memory) (Client Quit)
[10:59:32] *** Quits: gggp (~gggp@li870-78.members.linode.com) (Remote host closed the connection)
[11:00:05] *** Joins: gggp (~gggp@li870-78.members.linode.com)
[11:03:28] *** Quits: clarjon1 (~clarjon1@user/clarjon1) (Quit: clarjon1)
[11:03:49] *** Joins: clarjon1 (~clarjon1@user/clarjon1)
[11:03:49] *** Joins: freakazoid343 (~matt@2603:9000:cf0f:80e3:9d79:7459:1d29:717f)
[11:06:59] *** Quits: CoolerX (~CoolerX@user/coolerx) (Ping timeout: 264 seconds)
[11:07:22] *** Quits: freakazoid12345 (~matt@2603:9000:cf0f:80e3:cdc5:a33b:1284:64f8) (Ping timeout: 268 seconds)
[11:07:40] *** Joins: bkircher (~bkircher@200116b846cd93006e4d23e9c019271b.dip.versatel-1u1.de)
[11:12:01] *** Joins: jaca122 (~Thunderbi@89-65-136-254.dynamic.chello.pl)
[11:12:26] *** Quits: bkircher (~bkircher@200116b846cd93006e4d23e9c019271b.dip.versatel-1u1.de) (Client Quit)
[11:14:06] *** Joins: bkircher (~bkircher@200116b846cd93006e4d23e9c019271b.dip.versatel-1u1.de)
[11:21:13] *** Joins: jpw (~jpw@user/jpw)
[11:22:02] *** Joins: mrig (~iain@user/mrig)
[11:22:07] *** Quits: caef^ (~caef@70.166.66.234) (Remote host closed the connection)
[11:31:10] *** Quits: gggp (~gggp@li870-78.members.linode.com) (Remote host closed the connection)
[11:31:42] *** Joins: gggp (~gggp@li870-78.members.linode.com)
[11:31:43] *** Quits: gggp (~gggp@li870-78.members.linode.com) (Remote host closed the connection)
[11:32:17] *** Joins: gggp (~gggp@li870-78.members.linode.com)
[11:34:37] *** Joins: PortableDave (~portabled@194-193-148-202.tpgi.com.au)
[11:35:11] *** Quits: bkircher (~bkircher@200116b846cd93006e4d23e9c019271b.dip.versatel-1u1.de) (Ping timeout: 264 seconds)
[11:35:22] *** Joins: internut (~internut@2601:280:4e00:7b70:7c1c:8d1a:107d:9591)
[11:36:37] *** Joins: Snyp (~Snyp@49.207.222.119)
[11:38:41] *** Quits: Snyp (~Snyp@49.207.222.119) (Client Quit)
[11:40:35] *** Quits: internut (~internut@2601:280:4e00:7b70:7c1c:8d1a:107d:9591) (Ping timeout: 264 seconds)
[11:44:24] *** Quits: gggp (~gggp@li870-78.members.linode.com) (Quit: My MacBook has gone to sleep. ZZZzzz‚Ä¶)
[11:51:26] <b0nn> I've often opined that the mut keyword that Rust has should be adopted by Go; it clearly alerts the user to the fact that function /may/ mutate the data in the variable that it is passed, allowing the user to choose to pass in the actual data, or a copy; Go DOES have this, in the form of value vs pointer passing EXCEPT where the pointer is hidden (slices)\
[11:52:48] *** Quits: PortableDave (~portabled@194-193-148-202.tpgi.com.au) (Quit: My MacBook has gone to sleep. ZZZzzz‚Ä¶)
[11:53:49] *** Quits: xiongxin (~quassel@113.116.224.79) (Read error: Connection reset by peer)
[11:54:22] *** Joins: xiongxin (~quassel@113.116.224.79)
[12:01:35] *** Quits: fikran (~fikran@user/fikran) (Ping timeout: 264 seconds)
[12:03:33] *** Joins: fikran (~fikran@user/fikran)
[12:07:15] *** Joins: rcernin_ (~rcernin@124.190.139.235)
[12:12:59] *** Quits: rcernin_ (~rcernin@124.190.139.235) (Ping timeout: 264 seconds)
[12:38:26] *** Joins: bkircher (~bkircher@200116b846cd93006e4d23e9c019271b.dip.versatel-1u1.de)
[12:39:17] *** Joins: Guest5554 (~Guest55@2001:fb1:178:90b0:7869:e3b4:2e5b:4410)
[12:39:25] *** Parts: Guest5554 (~Guest55@2001:fb1:178:90b0:7869:e3b4:2e5b:4410) ()
[12:48:44] *** Joins: krux02 (~krux02@p200300e81728d600319fb3a709c9a336.dip0.t-ipconnect.de)
[12:50:32] *** Joins: internut (~internut@2601:280:4e00:7b70:7c1c:8d1a:107d:9591)
[12:55:16] *** Quits: internut (~internut@2601:280:4e00:7b70:7c1c:8d1a:107d:9591) (Ping timeout: 265 seconds)
[12:56:45] *** Quits: mrig (~iain@user/mrig) (Quit: WeeChat 3.0)
[13:07:10] *** Joins: rcernin_ (~rcernin@2001:8003:6803:db00:98dc:5b7a:6313:549a)
[13:08:57] *** Joins: CoolerX (~CoolerX@user/coolerx)
[13:11:49] *** Joins: silbermm (~silbermm@user/ahappydeath)
[13:16:13] *** Quits: silbermm (~silbermm@user/ahappydeath) (Ping timeout: 252 seconds)
[13:20:59] *** Joins: independent_ (~independe@2.31.88.37)
[13:22:28] *** Quits: CoolerX (~CoolerX@user/coolerx) (Remote host closed the connection)
[13:22:51] *** Joins: CoolerX (~CoolerX@user/coolerx)
[13:23:55] *** Quits: independent56 (~independe@2.31.88.37) (Ping timeout: 252 seconds)
[13:24:03] *** Joins: CoolerY (~CoolerX@user/coolerx)
[13:24:54] *** Quits: INeedAHandle (~INeedAHan@39.124.72.106) (Quit: My MacBook Air has gone to sleep. ZZZzzz‚Ä¶)
[13:27:58] *** Quits: CoolerX (~CoolerX@user/coolerx) (Ping timeout: 268 seconds)
[13:30:12] *** Joins: CoolerZ (~CoolerX@user/coolerx)
[13:30:17] *** Quits: mikoto-chan (~mikoto-ch@ip-83-134-2-136.dsl.scarlet.be) (Read error: No route to host)
[13:33:44] *** Joins: mikoto-chan (~mikoto-ch@ip-83-134-2-136.dsl.scarlet.be)
[13:33:59] *** Quits: CoolerY (~CoolerX@user/coolerx) (Ping timeout: 264 seconds)
[13:35:14] *** Quits: xiongxin (~quassel@113.116.224.79) (Ping timeout: 265 seconds)
[13:36:25] *** Quits: bkircher (~bkircher@200116b846cd93006e4d23e9c019271b.dip.versatel-1u1.de) (Ping timeout: 260 seconds)
[13:45:10] *** Joins: INeedAHandle (~INeedAHan@39.124.72.106)
[13:49:00] *** Joins: mrig (~iain@user/mrig)
[13:49:18] *** Quits: mikoto-chan (~mikoto-ch@ip-83-134-2-136.dsl.scarlet.be) (Read error: Connection reset by peer)
[13:50:33] *** Quits: mickey8 (~user@user/mickey) (Quit: Ping timeout (120 seconds))
[13:51:13] *** Joins: mickey8 (~user@user/mickey)
[13:53:15] *** Quits: CoolerZ (~CoolerX@user/coolerx) (Ping timeout: 268 seconds)
[13:55:00] *** Joins: mikoto-chan (~mikoto-ch@ip-83-134-2-136.dsl.scarlet.be)
[14:00:58] *** Joins: mickey85 (~user@user/mickey)
[14:02:36] *** Quits: mickey8 (~user@user/mickey) (Ping timeout: 276 seconds)
[14:02:37] *** mickey85 is now known as mickey8
[14:04:57] *** Joins: CoolerZ (~CoolerX@user/coolerx)
[14:08:01] *** Joins: dsrt^ (~dsrt@70.166.66.234)
[14:09:54] *** Quits: rcernin_ (~rcernin@2001:8003:6803:db00:98dc:5b7a:6313:549a) (Ping timeout: 268 seconds)
[14:10:56] *** Quits: fikran (~fikran@user/fikran) (Ping timeout: 245 seconds)
[14:11:03] <dostoyevsky2> b0nn: I've worked with C++ code where we worked around static by introducing a data pointer where the data wasn't static... giving people a false sense of security.. or just using an external hashmap with the object's address and remembering an error state (and just immediately returning from methods if an error wasn't cleared yet)...
[14:12:54] *** Joins: fikran (~fikran@user/fikran)
[14:20:47] *** Quits: CoolerZ (~CoolerX@user/coolerx) (Ping timeout: 264 seconds)
[14:20:49] *** Joins: silbermm (~silbermm@user/ahappydeath)
[14:25:35] *** Quits: silbermm (~silbermm@user/ahappydeath) (Ping timeout: 264 seconds)
[14:35:04] *** Joins: internut (~internut@2601:280:4e00:7b70:7c1c:8d1a:107d:9591)
[14:35:09] *** Joins: silbermm (~silbermm@user/ahappydeath)
[14:37:06] *** Joins: CoolerZ (~CoolerX@user/coolerx)
[14:37:24] *** Joins: gggp (~gggp@li870-78.members.linode.com)
[14:39:24] *** Joins: gggpkm (~gggpkm@60.10.194.46)
[14:39:59] *** Quits: silbermm (~silbermm@user/ahappydeath) (Ping timeout: 264 seconds)
[14:39:59] *** Quits: internut (~internut@2601:280:4e00:7b70:7c1c:8d1a:107d:9591) (Ping timeout: 264 seconds)
[14:40:35] *** Joins: xiongxin (~quassel@113.116.224.79)
[14:41:18] *** Joins: rusua (uid124537@id-124537.uxbridge.irccloud.com)
[14:44:26] *** Joins: AndyH (~andyh@cpc160881-lutn15-2-0-cust237.9-3.cable.virginm.net)
[14:45:06] *** Quits: AndyH (~andyh@cpc160881-lutn15-2-0-cust237.9-3.cable.virginm.net) (Client Quit)
[14:53:41] *** Quits: CoolerZ (~CoolerX@user/coolerx) (Ping timeout: 268 seconds)
[14:55:52] *** Joins: CoolerZ (~CoolerX@user/coolerx)
[14:59:30] *** Quits: mrig (~iain@user/mrig) (Quit: WeeChat 3.0)
[15:07:11] *** Joins: jjonah (~jjonah@p200300d5d7058900dea632fffeb3342f.dip0.t-ipconnect.de)
[15:07:16] *** Quits: CoolerZ (~CoolerX@user/coolerx) (Remote host closed the connection)
[15:07:39] *** Joins: CoolerZ (~CoolerX@user/coolerx)
[15:15:08] *** Quits: CoolerZ (~CoolerX@user/coolerx) (Remote host closed the connection)
[15:15:33] *** Joins: CoolerZ (~CoolerX@user/coolerx)
[15:20:47] *** Quits: CoolerZ (~CoolerX@user/coolerx) (Ping timeout: 264 seconds)
[15:22:58] *** Joins: Ergo^ (~ergo@91.238.59.144)
[15:31:55] *** Quits: clarjon1 (~clarjon1@user/clarjon1) (Ping timeout: 268 seconds)
[15:34:07] *** Quits: jaca122 (~Thunderbi@89-65-136-254.dynamic.chello.pl) (Quit: jaca122)
[15:40:51] *** Quits: gggp (~gggp@li870-78.members.linode.com) (Remote host closed the connection)
[15:41:19] *** Joins: rickybob (rickybob@gateway/vpn/protonvpn/rickybob)
[15:41:23] *** Joins: gggp (~gggp@li870-78.members.linode.com)
[15:46:53] *** Joins: internut (~internut@2601:280:4e00:7b70:7c1c:8d1a:107d:9591)
[15:49:07] *** Joins: AndyH (~andyh@cpc160881-lutn15-2-0-cust237.9-3.cable.virginm.net)
[15:49:36] *** Quits: AndyH (~andyh@cpc160881-lutn15-2-0-cust237.9-3.cable.virginm.net) (Client Quit)
[15:49:59] *** Quits: independent_ (~independe@2.31.88.37) (Remote host closed the connection)
[15:50:18] *** Joins: independent_ (~independe@2.31.88.37)
[15:51:46] *** Quits: internut (~internut@2601:280:4e00:7b70:7c1c:8d1a:107d:9591) (Ping timeout: 245 seconds)
[15:55:44] *** Quits: dalan6236 (~dalan@59-102-54-91.tpgi.com.au) (Quit: dalan6236)
[15:59:01] *** Quits: gggp (~gggp@li870-78.members.linode.com) (Remote host closed the connection)
[15:59:32] *** Joins: gggp (~gggp@li870-78.members.linode.com)
[16:03:23] *** Quits: koo6 (~koo6@89-24-13-235.customers.tmcz.cz) (Ping timeout: 264 seconds)
[16:10:46] *** Joins: Atque (~Atque@user/atque)
[16:15:22] *** Joins: jespada (~jespada@2803:9800:9842:7a62:a1db:843b:ed19:cad6)
[16:20:28] *** Quits: fikran (~fikran@user/fikran) (Ping timeout: 252 seconds)
[16:22:01] *** Joins: CoolerZ (~CoolerX@user/coolerx)
[16:22:15] *** Joins: fikran (~fikran@user/fikran)
[16:23:47] *** Quits: rickybob (rickybob@gateway/vpn/protonvpn/rickybob) (Ping timeout: 264 seconds)
[16:27:44] *** Quits: jjonah (~jjonah@p200300d5d7058900dea632fffeb3342f.dip0.t-ipconnect.de) (Remote host closed the connection)
[16:28:03] *** Joins: saml (~saml@cpe-74-73-80-162.nyc.res.rr.com)
[16:28:04] *** Joins: mrig (~mrig@user/mrig)
[16:30:06] *** Quits: independent_ (~independe@2.31.88.37) (Ping timeout: 245 seconds)
[16:32:35] *** Quits: mrig (~mrig@user/mrig) (Read error: Connection reset by peer)
[16:33:39] *** Joins: AlmogBaku (~AlmogBaku@185.110.111.17)
[16:34:16] <AlmogBaku> lol, everybody left freenode for this place? :O
[16:34:35] *** Quits: gggpkm (~gggpkm@60.10.194.46) (Read error: Connection reset by peer)
[16:34:59] <ikke> freenode is gone
[16:35:18] <ikke> Whatever is left is not freenode
[16:35:53] *** Joins: mrig (~mrig@user/mrig)
[16:36:31] <AlmogBaku> that's sad
[16:38:05] <AlmogBaku> Also, it doesn't work
[16:43:35] *** Quits: CoolerZ (~CoolerX@user/coolerx) (Ping timeout: 264 seconds)
[16:44:22] <rawtaz> AlmogBaku: of course.. do you know how the takeover people have behaved? snatching channels without there being any basis for it, out of the blue, erasing entire freenode database och channels and nick registrations, and a ton of other misbehavior.
[16:44:46] <AlmogBaku> damn
[16:45:23] <AlmogBaku> I haven't being here for a while. And I thought the IRC was the last piece of real net neutrality
[16:48:46] <rawtaz> yeah :D
[16:49:06] <rawtaz> and then andrew lee came about and wroke havoc
[16:49:08] <rawtaz> lol
[16:50:08] *** Quits: gggp (~gggp@li870-78.members.linode.com) (Remote host closed the connection)
[16:50:29] <tuskkk____> oh hey rawtaz! I remember you from #php when I was working on Yii, you used to help a lot!
[16:50:40] <tuskkk____> nice crossing paths here :D
[16:50:40] *** Joins: gggp (~gggp@li870-78.members.linode.com)
[16:50:54] <AlmogBaku> holy snap php and yii
[16:51:00] *** Quits: frost (~frost@59.71.244.189) (Quit: Ping timeout (120 seconds))
[16:51:07] <AlmogBaku> its my childhood all over again
[16:51:14] <tuskkk____> yeah, thats how I had started as well
[16:53:29] <rawtaz> tuskkk____: hi! yeah thats probably fair to say :-) perhaps you meant #yii though?
[16:53:51] <rawtaz> tuskkk____: what do you do nowadays? i assume not php :)
[16:55:22] <tuskkk____> ah yeah #yii! Not php at all, moved to working on infrastructure stuff, picking up go along the way :)
[16:55:44] <tuskkk____> what did you move on to?
[16:58:00] <rawtaz> oh ok, thats nice to hear
[16:59:03] <rawtaz> oh i havent really moved on lol, but i only do occasional php coding nowadays, basically when a client has a php project that need to be fixed or put on track. i do various stuff, servers networking some programming etc, as well as consulting and support
[16:59:46] <rawtaz> havent done much Go but it and Elixir are probably my preferred tools depending on context/project
[17:00:47] <tuskkk____> that's cool, I also would eventually want to move to consulting, but I feel I still lack proficiency towards my tools
[17:01:25] <tuskkk____> I am liking Go so far though, never touched Elixir, a lot of go people I meet talk about Rust sooner or later
[17:02:13] <tuskkk____> is Yii still alive? I heard there was a 2.0 release as well
[17:04:16] <rawtaz> tuskkk____: trust me, you dont need very much proficiency in tooling to be a consultant :) the most important skill is being able to find information and solutions to problems online, that covers most of the usual things youll encounter unless youre very specialized.
[17:04:28] <rawtaz> yeah yii is indeed fully alive
[17:05:30] <tuskkk____> I feel I am fairly decent at finding things online, have a good breadth of things in the industry, but how do you find clients?
[17:06:06] <tuskkk____> and how do you convince them to hire you when you have only worked with companies and there has always been a team of people with you, so you can't really say that I did this alone
[17:06:54] <rawtaz> tuskkk____: i dont know, i never tried to find a client :7
[17:07:07] <tuskkk____> haha ok
[17:07:56] <rawtaz> tuskkk____: well i guess it depends but if you talk with SMB clients the question of you vs a team pretty much never comes up. i think that depends on the size of the company you want to engage with and also the type of job.
[17:08:15] <rawtaz> even if it's a very bug company you could be brought in to solve a specific thing during a short period of time and then the team aspect isnt relevant either
[17:08:45] <rawtaz> you should just start a small company so you *can* take freelance work when asked or encountering some opportunity. on the side.
[17:09:07] <tuskkk____> hmm yeah, something like an individual contributor does basically
[17:10:19] <rawtaz> yup
[17:10:51] <rawtaz> its not like youre starting a consultancy company offering teams to customers. you offer yourself, and can play nice with other teams if needed but thats not a primary concern
[17:12:10] <tuskkk____> yeah, will slowly try getting into that direction :)
[17:13:48] *** Joins: tane (~tane@dslb-002-201-234-197.002.201.pools.vodafone-ip.de)
[17:14:02] <rawtaz> :)
[17:14:38] <rawtaz> gotta run, bai
[17:14:43] * rawtaz &
[17:14:53] *** Quits: normen (~normen@p200300d7170fb7004856bf990bc5660b.dip0.t-ipconnect.de) (Remote host closed the connection)
[17:15:13] <tuskkk____> üëã
[17:15:21] *** Joins: normen (~normen@p200300d7170fb70035f40b81e01b0f90.dip0.t-ipconnect.de)
[17:15:28] *** Quits: HisShadow (~HisShadow@user/hisshadow) (Ping timeout: 252 seconds)
[17:19:26] *** Joins: Torr (~Torr@user/torr)
[17:22:08] *** Quits: aniruddha (uid340443@id-340443.ilkley.irccloud.com) (Quit: Connection closed for inactivity)
[17:22:35] *** Quits: Atque (~Atque@user/atque) (Quit: ...)
[17:29:04] *** Quits: gggp (~gggp@li870-78.members.linode.com) (Remote host closed the connection)
[17:29:37] *** Joins: gggp (~gggp@li870-78.members.linode.com)
[17:30:51] *** Quits: rusua (uid124537@id-124537.uxbridge.irccloud.com) (Quit: Connection closed for inactivity)
[17:30:57] *** Joins: gggpkm (~gggpkm@60.10.194.46)
[17:33:34] *** Quits: Led_Zeppelin2 (~user@cpe-68-172-241-89.nj.res.rr.com) (Remote host closed the connection)
[17:33:53] *** Joins: rickybob (rickybob@gateway/vpn/protonvpn/rickybob)
[17:45:19] *** Quits: g2anj_ (~v@58.227.244.56) (Quit: .)
[17:46:25] *** Quits: saml (~saml@cpe-74-73-80-162.nyc.res.rr.com) (Quit: Leaving)
[17:55:41] *** Quits: gggp (~gggp@li870-78.members.linode.com) (Remote host closed the connection)
[17:56:12] *** Joins: gggp (~gggp@li870-78.members.linode.com)
[18:01:31] *** Quits: gggp (~gggp@li870-78.members.linode.com) (Remote host closed the connection)
[18:01:40] *** Quits: rickybob (rickybob@gateway/vpn/protonvpn/rickybob) (Ping timeout: 252 seconds)
[18:02:02] *** Joins: gggp (~gggp@li870-78.members.linode.com)
[18:02:14] *** Quits: gggpkm (~gggpkm@60.10.194.46) (Read error: Connection reset by peer)
[18:03:33] *** Joins: gggpkm (~gggpkm@li2015-124.members.linode.com)
[18:04:55] *** Joins: rickybob (rickybob@gateway/vpn/protonvpn/rickybob)
[18:07:46] *** Joins: g2anj (~v@58.227.244.56)
[18:10:01] *** Quits: gggp (~gggp@li870-78.members.linode.com) (Remote host closed the connection)
[18:10:36] *** Joins: gggp (~gggp@li870-78.members.linode.com)
[18:11:28] *** Joins: paulgrmn (~paulgrmn@user/paulgrmn)
[18:12:25] *** Quits: mrig (~mrig@user/mrig) (Read error: Connection reset by peer)
[18:18:23] *** Quits: schaeffer (~schaeffer@user/schaeffer) (Ping timeout: 264 seconds)
[18:21:59] *** Quits: paulgrmn (~paulgrmn@user/paulgrmn) (Ping timeout: 264 seconds)
[18:24:22] *** Quits: gggp (~gggp@li870-78.members.linode.com) (Quit: My MacBook has gone to sleep. ZZZzzz‚Ä¶)
[18:26:48] *** Joins: schaeffer (~schaeffer@user/schaeffer)
[18:27:47] *** Joins: silbermm (~silbermm@user/ahappydeath)
[18:28:47] *** Joins: internut (~internut@2601:280:4e00:7b70:7c1c:8d1a:107d:9591)
[18:29:06] *** Quits: gggpkm (~gggpkm@li2015-124.members.linode.com) (Ping timeout: 265 seconds)
[18:29:44] *** Quits: fikran (~fikran@user/fikran) (Ping timeout: 265 seconds)
[18:31:36] *** Joins: fikran (~fikran@user/fikran)
[18:33:56] *** Quits: silbermm (~silbermm@user/ahappydeath) (Ping timeout: 265 seconds)
[18:36:29] *** Quits: fmac (~fmac@2a01:4f9:c011:29a2::2) (Remote host closed the connection)
[18:37:21] *** Quits: adlternative (~adl@117.32.216.102) (Quit: Konversation terminated!)
[18:39:34] *** Quits: fentanyl (~ryan@user/sapi01) (Quit: leaving)
[18:41:34] *** Joins: LiftLeft (~LiftLeft@216-26-118-34.dynamic.nelson.airstreamcomm.net)
[18:46:00] *** Quits: xiongxin (~quassel@113.116.224.79) (Read error: Connection reset by peer)
[18:47:15] *** Joins: xiongxin (~quassel@113.116.32.200)
[18:52:32] *** Joins: fmac (bf93f83905@2604:bf00:710:0:5054:ff:feea:5006)
[18:58:27] *** Joins: burningserenity (~burningse@2603:9001:f01:ad99::1004)
[18:59:36] *** Joins: freakazoid12345 (~matt@2603-9000-cf0f-80e3-9d79-7459-1d29-717f.inf6.spectrum.com)
[19:02:36] *** Quits: freakazoid343 (~matt@2603:9000:cf0f:80e3:9d79:7459:1d29:717f) (Ping timeout: 268 seconds)
[19:06:24] *** Joins: pepee (~pepee@user/pepee)
[19:09:07] *** Joins: kupi (uid212005@id-212005.hampstead.irccloud.com)
[19:11:50] *** Quits: zer0bitz (~zer0bitz@dsl-hkibng31-54fafc-123.dhcp.inet.fi) (Read error: Connection reset by peer)
[19:13:51] *** Quits: xiongxin (~quassel@113.116.32.200) (Quit: https://quassel-irc.org - Chat comfortably. Anywhere.)
[19:15:23] *** Quits: andlabs (~andlabs@70.107.171.168) (Ping timeout: 264 seconds)
[19:19:23] <tuskkk____> I am reading from Stdin, and there is this next line character `" \"` which is creeping in to the string, I use scanner from bufio and then scanner.Bytes()..., I feel I am missing something
[19:19:50] *** Joins: andlabs (~andlabs@70.107.171.168)
[19:19:55] <tuskkk____> I found this when I did scanner.Text()
[19:22:08] *** Quits: andlabs (~andlabs@70.107.171.168) (Client Quit)
[19:25:52] *** Joins: normen_ (~normen@p200300d717495c00c08864420401fea9.dip0.t-ipconnect.de)
[19:27:36] *** Quits: normen (~normen@p200300d7170fb70035f40b81e01b0f90.dip0.t-ipconnect.de) (Ping timeout: 245 seconds)
[19:27:38] *** normen_ is now known as normen
[19:28:12] *** Quits: Ergo^ (~ergo@91.238.59.144) (Quit: WeeChat 2.8)
[19:28:19] *** Joins: Memory (sid459764@user/memory)
[19:37:35] *** Quits: normen (~normen@p200300d717495c00c08864420401fea9.dip0.t-ipconnect.de) (Ping timeout: 264 seconds)
[19:39:11] *** Joins: normen (~normen@p200300d717382000d95e86e58ca0e4cb.dip0.t-ipconnect.de)
[19:41:00] *** Quits: internut (~internut@2601:280:4e00:7b70:7c1c:8d1a:107d:9591) (Remote host closed the connection)
[19:41:27] *** Quits: burningserenity (~burningse@2603:9001:f01:ad99::1004) (Ping timeout: 268 seconds)
[19:44:34] *** Joins: jmanner (~jmanner@185.224.57.161)
[19:45:44] *** Joins: internut (~internut@2601:280:4e00:7b70:7c1c:8d1a:107d:9591)
[19:45:52] *** Quits: internut (~internut@2601:280:4e00:7b70:7c1c:8d1a:107d:9591) (Client Quit)
[19:47:12] *** Joins: freakazoid343 (~matt@2603:9000:cf0f:80e3:ecd7:c30b:133e:765f)
[19:48:34] *** Quits: jmanner (~jmanner@185.224.57.161) (Client Quit)
[19:49:00] *** Joins: jmanner (~jmanner@user/mrmanner)
[19:50:55] *** Quits: freakazoid12345 (~matt@2603-9000-cf0f-80e3-9d79-7459-1d29-717f.inf6.spectrum.com) (Ping timeout: 268 seconds)
[19:52:54] <Awoobis> the character is `"`?
[19:52:58] <Awoobis> ie, a double quote?
[19:53:12] <Awoobis> that'll be in the data you get from stdin
[19:53:36] *** Quits: jmanner (~jmanner@user/mrmanner) (Client Quit)
[19:54:47] *** Joins: andlabs (~andlabs@70.107.171.168)
[19:57:13] *** Quits: andlabs (~andlabs@70.107.171.168) (Read error: Connection reset by peer)
[19:57:19] *** Joins: andlabs_ (~andlabs@70.107.171.168)
[19:58:01] <tuskkk____> I even removed that quote, but it still seems to be different bytes
[19:59:03] <Awoobis> what is the bytestring?
[19:59:54] <tuskkk____> I think this is happening, []byte("\"\
[20:00:10] <Awoobis> from scanner.Bytes()? only if thats what it was passed
[20:00:29] *** Joins: jmanner (~jmanner@user/mrmanner)
[20:00:37] *** jmanner is now known as mrmanner
[20:00:59] <tuskkk____> but I am now using scanner.Text(), and then removing it from the string
[20:01:37] <fizzie> Sounds very odd. Do an example on the playground? You can put your input data in a bytes.Reader or a strings.Reader.
[20:02:05] *** Joins: alzgh (~alzgh@user/alzgh)
[20:02:15] <tuskkk____> ok
[20:03:36] <fizzie> It'd be normal for the scanner to read some amount of the next line (it's called `bufio` for a reason), and those bytes would even be physically present in the []byte from scanner.Bytes() if you look at the data between len() and cap(), but they certainly shouldn't end up in the output from scanner.Text(), as long as the SplitFunc is written correctly.
[20:05:05] *** Quits: freakazoid343 (~matt@2603:9000:cf0f:80e3:ecd7:c30b:133e:765f) (Remote host closed the connection)
[20:05:45] *** Joins: freakazoid343 (~matt@2603-9000-cf0f-80e3-ecd7-c30b-133e-765f.inf6.spectrum.com)
[20:10:40] *** Joins: clarjon1 (~clarjon1@user/clarjon1)
[20:20:42] *** Quits: rek2 (~ReK2@47.62.9.10) (Quit: WeeChat 3.3)
[20:26:29] *** Quits: mrmanner (~jmanner@user/mrmanner) (Ping timeout: 264 seconds)
[20:28:29] *** Joins: fef (~thedawn@user/thedawn)
[20:38:58] *** Quits: fikran (~fikran@user/fikran) (Ping timeout: 252 seconds)
[20:40:57] *** Joins: fikran (~fikran@user/fikran)
[20:49:43] *** Quits: CaryHartline (~CaryHartl@2603-8080-6a0e-8d88-148d-18f4-b880-9c05.res6.spectrum.com) (Quit: My iMac has gone to sleep. ZZZzzz‚Ä¶)
[21:03:59] *** Quits: Torr (~Torr@user/torr) (Ping timeout: 264 seconds)
[21:07:47] *** Joins: sudoforge (~sudoforge@wireguard/tunneler/sudoforge)
[21:15:37] *** Joins: mrmanner (~jmanner@user/mrmanner)
[21:15:46] *** Joins: CaryHartline (~CaryHartl@2603-8080-6a0e-8d88-d584-6e57-f98b-0941.res6.spectrum.com)
[21:16:47] *** Quits: freakazoid343 (~matt@2603-9000-cf0f-80e3-ecd7-c30b-133e-765f.inf6.spectrum.com) (Read error: Connection reset by peer)
[21:16:52] *** Quits: CaryHartline (~CaryHartl@2603-8080-6a0e-8d88-d584-6e57-f98b-0941.res6.spectrum.com) (Client Quit)
[21:17:33] *** Joins: freakazoid343 (~matt@2603:9000:cf0f:80e3:ecd7:c30b:133e:765f)
[21:20:17] *** muirrum_ is now known as muirrum
[21:25:41] *** Joins: Torr (~Torr@user/torr)
[21:30:14] *** Joins: CaryHartline (~CaryHartl@2603-8080-6a0e-8d88-d584-6e57-f98b-0941.res6.spectrum.com)
[21:31:04] *** Joins: ztx (~ztx@user/ztx)
[21:32:35] *** Quits: freakazoid343 (~matt@2603:9000:cf0f:80e3:ecd7:c30b:133e:765f) (Read error: Connection reset by peer)
[21:33:15] *** Joins: freakazoid343 (~matt@2603:9000:cf0f:80e3:ecd7:c30b:133e:765f)
[21:38:12] *** Quits: fmac (bf93f83905@2604:bf00:710:0:5054:ff:feea:5006) (Remote host closed the connection)
[21:38:18] *** Joins: fmac (bf93f83905@2604:bf00:710:0:5054:ff:feea:5006)
[21:43:33] *** Quits: betelgeuse (~betelgeus@94-225-47-8.access.telenet.be) (Quit: The Lounge - https://thelounge.chat)
[21:43:44] *** Joins: brainfreeze (~brainfree@2a03:1b20:4:f011::20d)
[21:46:35] *** Quits: normen (~normen@p200300d717382000d95e86e58ca0e4cb.dip0.t-ipconnect.de) (Ping timeout: 264 seconds)
[21:47:54] <tuskkk____> Able to formulate the problem now, https://play.golang.org/p/0cb7cNuJKQT, how do I get from current raw to expected raw
[21:48:29] <tuskkk____> not able to understand the subtle difference - if I manipulate the strings in the first option, its still not the same as expected
[21:50:01] <foobaz> instead of a comma, use a plus
[21:51:59] *** Quits: hornhack (~hackingho@user/hackinghorn) (Ping timeout: 264 seconds)
[21:53:51] <tuskkk____> foobaz: how do you mean plus? don't I have to build it? https://play.golang.org/p/H8s8uovlGUE
[21:54:06] <fizzie> tuskkk____: Are you looking for something like this? https://play.golang.org/p/isyaehfLTqB
[21:56:46] *** Joins: normen (~normen@p200300d7174e83008d6a774881c59ad5.dip0.t-ipconnect.de)
[21:57:34] <tuskkk____> wow yes
[21:58:27] <tuskkk____> what's so special about Sscanf?
[21:59:29] <KirkMcDonald> Special?
[22:00:56] <KirkMcDonald> The %q verb corresponds to Go string literal syntax, and it can be used for both output (with fmt.Printf, etc) and input (with fmt.Scanf, etc).
[22:04:04] <tuskkk____> I see, today I learned something new, thanks
[22:06:30] *** Joins: CoolerZ (~CoolerX@user/coolerx)
[22:14:13] *** Quits: jjakob (~quassel@2a01:260:8028:10f0::62) (Quit: Either rebooting or something broke.)
[22:28:27] *** Joins: jjakob (~quassel@2a01:260:8028:10f0::62)
[22:34:09] *** Quits: fef (~thedawn@user/thedawn) (Ping timeout: 276 seconds)
[22:35:02] *** Joins: porn (~hentai@2a01:e0a:a5c:a070:9fac:5613:587a:b84a)
[22:35:02] *** Quits: porn (~hentai@2a01:e0a:a5c:a070:9fac:5613:587a:b84a) (Changing host)
[22:35:02] *** Joins: porn (~hentai@user/hentai)
[22:36:22] *** Joins: hornhack (~hackingho@user/hackinghorn)
[22:39:19] *** Quits: svedrin (~quassel@tiamat.funzt-halt.net) (Quit: https://quassel-irc.org - Komfortabler Chat. √úberall.)
[22:39:28] *** Quits: hentai (~hentai@user/hentai) (Ping timeout: 252 seconds)
[22:39:32] *** Joins: svedrin (~quassel@tiamat.funzt-halt.net)
[22:41:31] *** Joins: mikey__ (~mikey__@cpe-167-100-16-236.mt-rushmore.net)
[22:43:11] *** Quits: mrmanner (~jmanner@user/mrmanner) (Quit: WeeChat 3.4-dev)
[22:46:03] *** Joins: DaleNa9g (~DaleNa9g@071-093-142-189.res.spectrum.com)
[22:47:16] *** Joins: fef (~thedawn@user/thedawn)
[22:48:12] *** Quits: DaleNa9g (~DaleNa9g@071-093-142-189.res.spectrum.com) (Client Quit)
[22:48:15] *** Quits: fikran (~fikran@user/fikran) (Ping timeout: 260 seconds)
[22:50:18] *** Joins: fikran (~fikran@user/fikran)
[22:54:59] *** Quits: zwr (~zwr@2804:d45:b966:fb00:ee03:ae4c:d63c:46ea) (Ping timeout: 264 seconds)
[22:55:06] *** Joins: normen_ (~normen@p54b35d63.dip0.t-ipconnect.de)
[22:55:34] *** Joins: zwr (~zwr@2804:d45:b966:fb00:433c:7503:c491:fd59)
[22:57:23] *** Quits: normen (~normen@p200300d7174e83008d6a774881c59ad5.dip0.t-ipconnect.de) (Ping timeout: 264 seconds)
[22:59:29] *** Quits: mikey__ (~mikey__@cpe-167-100-16-236.mt-rushmore.net) (Ping timeout: 264 seconds)
[22:59:29] *** nitrix-or-treat is now known as nitrix
[22:59:46] *** Quits: normen_ (~normen@p54b35d63.dip0.t-ipconnect.de) (Ping timeout: 252 seconds)
[23:00:59] *** Quits: CoolerZ (~CoolerX@user/coolerx) (Ping timeout: 264 seconds)
[23:01:14] *** Joins: mikey__ (~mikey__@cpe-167-100-16-236.mt-rushmore.net)
[23:01:27] *** Joins: normen_ (~normen@p200300d717426000fdbafd90b7bb20f7.dip0.t-ipconnect.de)
[23:03:07] *** normen_ is now known as normen
[23:08:01] *** Quits: rockyh (~rockyh@user/rockyh) (Ping timeout: 245 seconds)
[23:12:36] *** Joins: CoolerZ (~CoolerX@user/coolerx)
[23:14:46] *** Joins: rockyh (~rockyh@user/rockyh)
[23:15:13] *** Quits: mikoto-chan (~mikoto-ch@ip-83-134-2-136.dsl.scarlet.be) (Ping timeout: 252 seconds)
[23:22:42] *** Joins: HisShadow (~HisShadow@user/hisshadow)
[23:27:49] *** Quits: HisShadow (~HisShadow@user/hisshadow) (Ping timeout: 252 seconds)
[23:28:59] *** Joins: HisShadow (~HisShadow@user/hisshadow)
[23:31:35] *** Quits: CoolerZ (~CoolerX@user/coolerx) (Ping timeout: 264 seconds)
[23:32:43] *** Parts: mikey__ (~mikey__@cpe-167-100-16-236.mt-rushmore.net) (WeeChat 3.3)
[23:36:11] *** Quits: be3uykpy (~be3uykpy@2a00:a040:19a:b060:9899:c474:c3b6:1ce9) (Quit: Leaving)
[23:39:24] *** Joins: jaca122 (~Thunderbi@89-65-136-254.dynamic.chello.pl)
[23:41:11] *** Joins: normen_ (~normen@p200300d71704d90055c37dcbf3ff23e6.dip0.t-ipconnect.de)
[23:41:47] *** Quits: normen (~normen@p200300d717426000fdbafd90b7bb20f7.dip0.t-ipconnect.de) (Ping timeout: 264 seconds)
[23:41:49] *** normen_ is now known as normen
[23:42:14] *** Parts: hdm_ (sid500490@hampstead.irccloud.com) ()
[23:42:21] *** Joins: hdm (sid500490@hampstead.irccloud.com)
[23:42:31] *** Quits: hdm (sid500490@hampstead.irccloud.com) ()
[23:42:41] *** Joins: hdm (sid500490@aha/hacker/hdm)
[23:47:03] *** Joins: shtirlic (~shtirlic@95-55-26-134.dynamic.avangarddsl.ru)
[23:55:02] *** Quits: kindablue (znc@2001:19f0:6001:175a:5400:3ff:fe51:d77f) (Quit: System Rebooting..)
[23:55:55] *** Joins: kindablue (znc@2001:19f0:6001:175a:5400:3ff:fe51:d77f)
