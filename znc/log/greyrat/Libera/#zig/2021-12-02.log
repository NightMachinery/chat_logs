[00:07:37] *** Quits: lumo_e (~enrico@151.29.48.90) (Ping timeout: 252 seconds)
[00:08:39] *** Quits: cturtle (~cturtle@128.187.116.8) (Quit: cturtle)
[00:10:17] *** Quits: waleee (~waleee@2001:9b0:216:8200:d457:9189:7843:1dbd) (Quit: WeeChat 3.3)
[00:13:06] *** Joins: waleee (~waleee@2001:9b0:216:8200:d457:9189:7843:1dbd)
[00:14:54] *** Quits: nyah (~nyah@94.6.71.219) (Quit: leaving)
[00:18:05] *** Joins: nyah (~nyah@94.6.71.219)
[00:34:22] *** Joins: lumo_e (~enrico@151.29.48.90)
[00:34:30] *** Joins: frmdstryr (~jrm@172.58.203.1)
[00:35:19] *** Quits: acairncross (~aiken@106.2.143.150.dyn.plus.net) (Quit: Leaving)
[00:38:01] *** Joins: rgrinberg (~textual@200.5.63.76)
[00:51:50] <devast8a> viric: I don't think it matters for immutable references. Whether there is one or a hundred immutable references to the same memory shouldn't affect what optimizations or analyses the compiler can perform right?
[01:14:52] *** Quits: tane (~tane@user/tane) (Quit: Leaving)
[01:27:03] <viric> if 'immutable' means super-const, fine
[01:27:57] <viric> the point is - can that immutable memory be touched by other means than that immutable reference?
[01:28:44] <viric> int i = 2; const int *p = &i; i = 3;     The compiler can't think "*p won't change because it's const*"
[01:29:00] <viric> but immutable may mean more than that. I don't know rust.
[01:40:39] <devast8a> viric: In this case, p will not be allowed to be used after `i = 3`. The compiler always enforces this at compile time.
[01:45:53] *** Quits: neurocyte0132889 (~neurocyte@user/neurocyte) (Ping timeout: 252 seconds)
[02:04:27] <viric> I meant C. Do you mean rust?
[02:17:00] <devast8a> Yes.
[02:18:20] *** Quits: nvmd (~nvmd@user/nvmd) (Ping timeout: 252 seconds)
[02:20:03] *** Joins: nvmd (~nvmd@user/nvmd)
[02:26:33] *** Quits: freshcoffee (~fresh@user/freshcoffee) (Quit: WeeChat 3.0.1)
[02:27:41] *** Quits: frmdstryr (~jrm@172.58.203.1) (Ping timeout: 252 seconds)
[02:29:17] <viric> ah good.
[02:31:33] *** Quits: tgschultz (UserNick@047-034-058-084.res.spectrum.com) (Quit: Going offline, see ya! (www.adiirc.com))
[02:31:33] *** Quits: tgschultz_ (AdiIRC@047-034-058-084.res.spectrum.com) (Quit: Going offline, see ya! (www.adiirc.com))
[02:32:05] *** Joins: tgschultz (UserNick@047-034-058-084.res.spectrum.com)
[02:32:06] *** Joins: tgschultz_ (AdiIRC@047-034-058-084.res.spectrum.com)
[02:33:07] *** Joins: freshcoffee (~fresh@user/freshcoffee)
[02:33:08] *** Joins: frmdstryr (~jrm@172.58.203.1)
[02:35:15] *** Quits: bindu (~bindu@user/bindu) (Quit: Leaving)
[02:35:16] <ifreund> Franciman: camelCase doesn't capitalize the first character, that's TitleCase. Also builtins follow the same rules as normal functions as defined by the style guide
[02:35:32] *** Joins: bindu (~bindu@user/bindu)
[02:36:02] <ifreund> honestly I'd rather we got rid of camelCase and just had snake_case and TitleCase
[02:36:20] <ifreund> many functions are just one word so you can't tell the difference anyways
[02:36:34] <ifreund> and longer function names are far more readable in snake_case
[02:36:49] <freshcoffee> it depends on how you type it; "CamelCase" vs "camelCase"
[02:37:57] <freshcoffee> but there are so many plays on words/caps, it's not even funny: https://en.wikipedia.org/wiki/Camel_case
[02:38:12] *** Joins: wilsonk (~wilsonk@S0106001b11030a94.cg.shawcable.net)
[02:44:35] <andrewrk> ifreund, there's a nice idea
[02:45:08] <ifreund> andrewrk: we're already doing it for tigerbeetle :D
[02:45:26] <freshcoffee> don't you mean tiger_beetle :P (sorry couldn't resist)
[02:45:44] <companion_cube> TiGeRbEeTlE
[02:45:48] <freshcoffee> noooo
[02:45:52] <ifreund> transition_to_view_change_status() or start_view_as_the_new_leader() are soooo much more readable
[02:49:16] *** Quits: nvmd (~nvmd@user/nvmd) (Quit: Later, nerds.)
[02:49:20] <andrewrk> for comparison: transitionToViewChangeStatus() startViewAsTheNewLeader()
[02:50:01] <andrewrk> they both look fine to me, but that's probably due to personal experience
[02:50:11] <andrewrk> s/personal experience/exposure/
[02:52:33] <ifreund> I find it much easier to parse sequences of words if they have spaces or underscores between them 
[02:52:59] <andrewrk> that makes sense
[02:53:31] <andrewrk> gotta admit, some of those builtin functions look pretty derpy in camelCase
[02:54:01] <companion_cube> cOmPaReAnDsWaP()
[02:54:44] <freshcoffee> my test: as viewing distance increases, camelCase and TitleCase lose word-boundry to my eyes before snake_case
[02:55:07] <ifreund> oh yeah, that's a good way to show the difference
[02:55:15] *** Quits: lumo_e (~enrico@151.29.48.90) (Remote host closed the connection)
[02:57:20] <ifreund> tigerbeetle file that has the most long function names: https://github.com/coilhq/tigerbeetle/blob/b86e53287395253731a5cbd60a89057b773b2a34/src/vsr/replica.zig
[02:57:35] <ifreund> (it's the core of the consensus protocol implementation)
[03:08:14] *** Quits: rgrinberg (~textual@200.5.63.76) (Quit: My MacBook has gone to sleep. ZZZzzz…)
[03:14:36] <freshcoffee> I think that looks super-clean and it's pretty easy to discern between `.` and `_` in things like `self.reset_quorum_messages(&self.start_view_change_from_other_replicas, .start_view_change);`
[03:22:04] *** Quits: tgschultz_ (AdiIRC@047-034-058-084.res.spectrum.com) (Quit: Going offline, see ya! (www.adiirc.com))
[03:34:38] *** Quits: livoreno (~livoreno@user/notzmv) (Read error: Connection reset by peer)
[04:01:33] *** Quits: frmdstryr (~jrm@172.58.203.1) (Ping timeout: 252 seconds)
[04:33:01] *** Quits: pingiun (~jelle@user/pingiun) (Quit: Bye!)
[04:34:49] *** Joins: rgrinberg (~textual@200.5.63.76)
[04:36:53] *** Joins: lumo_e (~enrico@151.29.48.90)
[04:55:07] <discipulus> looks good
[05:03:18] *** Joins: beta225265 (~beta22526@2409:8a5c:4c17:43b0:2866:9ac9:723b:cf3)
[05:05:06] *** Joins: cturtle (~cturtle@136.36.54.211)
[05:22:10] *** Joins: noeontheend (~noeonthee@207.237.194.194)
[05:26:59] *** Quits: pretty_dumm_guy (trottel@gateway/vpn/protonvpn/prettydummguy/x-88029655) (Ping timeout: 252 seconds)
[05:34:46] *** Quits: dbuckley (~dbuckley@2601:182:c77f:c13b:acd3:c392:dede:4da7) (Remote host closed the connection)
[05:35:08] *** Joins: dbuckley (~dbuckley@2601:182:c77f:c13b:82c4:80d:b7b3:7c79)
[05:41:32] *** Quits: lumo_e (~enrico@151.29.48.90) (Remote host closed the connection)
[05:56:53] *** Quits: earnest (~earnest@user/earnestly) (Ping timeout: 256 seconds)
[06:16:29] *** Quits: cturtle (~cturtle@136.36.54.211) (Ping timeout: 252 seconds)
[06:21:00] *** Joins: cturtle (~cturtle@136.36.54.211)
[06:35:13] *** Quits: cturtle (~cturtle@136.36.54.211) (Quit: cturtle)
[06:41:03] *** Quits: nyah (~nyah@94.6.71.219) (Ping timeout: 252 seconds)
[06:41:21] *** Joins: Kingsquee (~Kingsquee@node-1w7jr9pliwyyz50ez8goigg05.ipv6.telus.net)
[06:43:18] *** Parts: simonlindblad (e19c209508@2604:bf00:561:2000::17a) ()
[06:43:44] *** Joins: slind (e19c209508@2604:bf00:561:2000::17a)
[06:45:14] *** Joins: marler8997 (~marler899@24-116-126-185.cpe.sparklight.net)
[06:48:45] *** Quits: outfox (~outfox@user/outfox) (Ping timeout: 252 seconds)
[06:50:25] *** Joins: outfox (~outfox@213.144.147.16)
[06:50:25] *** Quits: outfox (~outfox@213.144.147.16) (Changing host)
[06:50:25] *** Joins: outfox (~outfox@user/outfox)
[07:09:52] *** Joins: livoreno (~livoreno@user/notzmv)
[07:13:26] *** Quits: paulgrmn_ (~paulgrmn@user/paulgrmn) (Ping timeout: 256 seconds)
[07:36:01] *** Quits: supakeen (~user@python/site-packages/supakeen) (Quit: WeeChat 3.3)
[07:36:30] *** Joins: supakeen (~user@python/site-packages/supakeen)
[08:03:03] *** Quits: arkurious (~arkurious@user/arkurious) (Quit: Leaving)
[08:09:03] *** Quits: marler8997 (~marler899@24-116-126-185.cpe.sparklight.net) (Ping timeout: 252 seconds)
[08:20:21] *** Quits: beta225265 (~beta22526@2409:8a5c:4c17:43b0:2866:9ac9:723b:cf3) (Quit: Client closed)
[08:20:50] *** Joins: beta225265 (~beta22526@2409:8a5c:4c17:43b0:2866:9ac9:723b:cf3)
[08:25:30] *** Joins: jfilling (~jfilling@136.36.67.80)
[08:25:47] *** Quits: Nulo (~Nulo@user/nulo) (Ping timeout: 250 seconds)
[08:25:49] *** Joins: cturtle (~cturtle@136.36.54.211)
[08:26:31] *** Joins: Nulo (~Nulo@user/nulo)
[08:27:16] *** Quits: cturtle (~cturtle@136.36.54.211) (Client Quit)
[08:37:24] *** Joins: marler8997 (~marler899@24-116-126-185.cpe.sparklight.net)
[08:37:33] *** Quits: marler8997 (~marler899@24-116-126-185.cpe.sparklight.net) (Read error: Connection reset by peer)
[08:41:50] *** Joins: marler8997 (~marler899@24-116-126-185.cpe.sparklight.net)
[08:48:21] *** Quits: tgschultz (UserNick@047-034-058-084.res.spectrum.com) (Quit: Going offline, see ya! (www.adiirc.com))
[08:48:51] *** Joins: tgschultz (UserNick@047-034-058-084.res.spectrum.com)
[08:55:59] *** Quits: noeontheend (~noeonthee@207.237.194.194) (Ping timeout: 252 seconds)
[09:02:41] *** Quits: dbohdan (~dbohdan@user/dbohdan) (Quit: ZNC 1.8.2+deb2+b1 - https://znc.in)
[09:05:44] *** Joins: dbohdan (~dbohdan@user/dbohdan)
[09:21:03] *** Quits: rgrinberg (~textual@200.5.63.76) (Quit: My MacBook has gone to sleep. ZZZzzz…)
[09:22:09] *** Joins: rgrinberg (~textual@200.5.63.76)
[09:23:07] *** Quits: rgrinberg (~textual@200.5.63.76) (Client Quit)
[09:23:44] *** Quits: beta225265 (~beta22526@2409:8a5c:4c17:43b0:2866:9ac9:723b:cf3) (Ping timeout: 256 seconds)
[09:41:03] *** Joins: rgrinberg (~textual@200.5.63.76)
[09:48:03] *** Quits: waleee (~waleee@2001:9b0:216:8200:d457:9189:7843:1dbd) (Ping timeout: 252 seconds)
[09:50:36] *** Quits: d0p1 (~d0p1@gateway/tor-sasl/d0p1) (Ping timeout: 276 seconds)
[09:52:51] *** Quits: rgrinberg (~textual@200.5.63.76) (Quit: My MacBook has gone to sleep. ZZZzzz…)
[09:55:24] *** Quits: dbohdan (~dbohdan@user/dbohdan) (Quit: ZNC 1.8.2+deb2+b1 - https://znc.in)
[09:56:39] *** Joins: dbohdan (~dbohdan@user/dbohdan)
[10:00:36] *** Quits: dbohdan (~dbohdan@user/dbohdan) (Client Quit)
[10:00:48] *** Joins: dbohdan (~dbohdan@user/dbohdan)
[10:05:43] *** Joins: beta225265 (~beta22526@2409:8a5c:4c17:43b0:2866:9ac9:723b:cf3)
[10:06:35] *** Quits: beta225265 (~beta22526@2409:8a5c:4c17:43b0:2866:9ac9:723b:cf3) (Client Quit)
[10:16:31] *** Joins: hspak (~hspak@user/hspak)
[10:22:58] *** Joins: Vexu (~Thunderbi@188.117.20.105)
[10:28:34] *** Quits: jfilling (~jfilling@136.36.67.80) (Quit: Client closed)
[10:29:30] *** Joins: andrzejku (~andrzejku@45-11-60-125.ip4.greenlan.pl)
[10:42:22] *** Joins: neurocyte0132889 (~neurocyte@user/neurocyte)
[10:43:51] *** Quits: andrzejku (~andrzejku@45-11-60-125.ip4.greenlan.pl) (Read error: Connection reset by peer)
[10:51:30] *** Quits: tgschultz (UserNick@047-034-058-084.res.spectrum.com) (Quit: Going offline, see ya! (www.adiirc.com))
[10:51:56] *** Joins: tgschultz (UserNick@047-034-058-084.res.spectrum.com)
[11:11:13] *** Joins: andrzejku (~andrzejku@45-11-60-125.ip4.greenlan.pl)
[11:15:40] *** Joins: chgr (~ek@nat-91-137-30-14.net.encoline.de)
[11:17:20] *** Quits: kron (~weechat@user/qaph) (Ping timeout: 252 seconds)
[11:20:12] *** Joins: kron (~weechat@user/qaph)
[11:43:21] *** Quits: koakuma (~koa@user/koakuma) (Read error: Connection reset by peer)
[11:51:15] *** Quits: neurocyte0132889 (~neurocyte@user/neurocyte) (Ping timeout: 252 seconds)
[11:52:11] *** Quits: tgschultz (UserNick@047-034-058-084.res.spectrum.com) (Quit: Going offline, see ya! (www.adiirc.com))
[11:52:29] *** Joins: koakuma (~koa@user/koakuma)
[11:52:48] *** Joins: tgschultz (UserNick@047-034-058-084.res.spectrum.com)
[11:56:41] *** Joins: xd1le (~xd1le@user/xd1le)
[12:01:09] *** Joins: skepta (~eric2@36.70.44.228)
[12:04:23] *** Joins: zakora (~zakora@dzd6d6yhqy025k7ptt0dt-3.rev.dnainternet.fi)
[12:04:47] *** Joins: retropikzel (9d1a4f9f46@2604:bf00:561:2000::ce)
[12:18:11] *** Joins: neurocyte0132889 (~neurocyte@user/neurocyte)
[12:37:01] *** Quits: mountaingoat (~mountaing@user/mountaingoat) (Ping timeout: 245 seconds)
[12:42:25] *** Quits: dbohdan (~dbohdan@user/dbohdan) (Quit: ZNC 1.8.2+deb2+b1 - https://znc.in)
[12:42:52] *** Joins: dbohdan (~dbohdan@user/dbohdan)
[12:49:31] *** Joins: mountaingoat (~mountaing@user/mountaingoat)
[12:53:03] *** Quits: tgschultz (UserNick@047-034-058-084.res.spectrum.com) (Quit: Going offline, see ya! (www.adiirc.com))
[12:53:31] *** Joins: tgschultz (UserNick@047-034-058-084.res.spectrum.com)
[13:07:30] *** Quits: Kingsquee (~Kingsquee@node-1w7jr9pliwyyz50ez8goigg05.ipv6.telus.net) ()
[13:33:03] *** Quits: zakora (~zakora@dzd6d6yhqy025k7ptt0dt-3.rev.dnainternet.fi) (Quit: Konversation terminated!)
[13:53:25] *** Quits: viashimo (~viashimo@user/viashimo) (Ping timeout: 268 seconds)
[13:53:44] *** Quits: tgschultz (UserNick@047-034-058-084.res.spectrum.com) (Quit: Going offline, see ya! (www.adiirc.com))
[13:54:06] *** Joins: tgschultz (UserNick@047-034-058-084.res.spectrum.com)
[14:00:20] *** Joins: waleee (~waleee@2001:9b0:216:8200:d457:9189:7843:1dbd)
[14:11:03] *** Joins: g0d0h932 (~doe@184-75-138-166.resi.cgocable.ca)
[14:11:33] <g0d0h932> hi
[14:12:43] <g0d0h932> wow this guys bought a radio frequencies scanner and found bio tech in his body https://www.youtube.com/watch?v=E1ZqRhe4lZE
[14:12:53] <g0d0h932> oups sorry wrong chan
[14:14:43] *** Parts: g0d0h932 (~doe@184-75-138-166.resi.cgocable.ca) ()
[14:30:17] *** Joins: pkap (~pkap@185.213.155.252)
[14:54:21] *** Quits: tgschultz (UserNick@047-034-058-084.res.spectrum.com) (Quit: Going offline, see ya! (www.adiirc.com))
[14:54:48] *** Joins: tgschultz (UserNick@047-034-058-084.res.spectrum.com)
[15:13:18] *** Joins: earnest (~earnest@user/earnestly)
[15:18:47] *** Quits: waleee (~waleee@2001:9b0:216:8200:d457:9189:7843:1dbd) (Ping timeout: 252 seconds)
[15:25:18] *** Quits: andrzejku (~andrzejku@45-11-60-125.ip4.greenlan.pl) (Read error: Connection reset by peer)
[15:29:37] *** Joins: freshcoffee1 (~fresh@user/freshcoffee)
[15:31:29] *** Quits: freshcoffee (~fresh@user/freshcoffee) (Ping timeout: 256 seconds)
[15:36:02] *** Quits: supakeen (~user@python/site-packages/supakeen) (Quit: WeeChat 3.3)
[15:36:32] *** Joins: supakeen (~user@python/site-packages/supakeen)
[15:37:12] *** Quits: xd1le (~xd1le@user/xd1le) (Quit: xd1le)
[15:42:48] *** Quits: nullheroes (~nullheroe@168.235.66.22) (Quit: WeeChat 2.3)
[15:43:22] *** Quits: chgr (~ek@nat-91-137-30-14.net.encoline.de) (Quit: WeeChat 3.3)
[15:46:12] *** Joins: nullheroes (~nullheroe@168.235.66.22)
[16:01:03] *** Joins: waleee (~waleee@h-82-196-111-63.NA.cust.bahnhof.se)
[16:02:02] *** Joins: paulgrmn_ (~paulgrmn@user/paulgrmn)
[16:02:43] <Franciman> does zig normalize the unicode codepoints
[16:02:49] <Franciman> of the source code?
[16:07:11] *** Quits: waleee (~waleee@h-82-196-111-63.NA.cust.bahnhof.se) (Ping timeout: 252 seconds)
[16:09:30] <Franciman> wait, zig supports unicode identifiers, right?
[16:09:53] <ifreund> Franciman: nope, unicode is only supported inside string literals
[16:10:04] <Franciman> :O
[16:10:08] <Franciman> this means a lot
[16:10:10] <ifreund> you can use @"my favorite emoji" as an identifer though
[16:10:33] <Franciman> I am considering wheterh to support unicode in identifiers
[16:10:35] <Franciman> or not
[16:11:27] <Franciman> the hard part is:
[16:11:35] <Franciman> 1. what can I put in an identifier?
[16:11:39] <Franciman> 2. normalisation
[16:12:28] <ifreund> and what do you gain for that work?
[16:13:58] <Franciman> I can write caffè
[16:14:02] <Franciman> as a variable name :P
[16:14:29] <Franciman> ifreund: you are right
[16:14:34] <Franciman> I don't need identifiers either
[16:14:38] <Franciman> I can just use de bruijn indices
[16:14:51] <Franciman> so I can be encoding blind
[16:14:58] <Franciman> Yes Yes
[16:15:01] <Franciman> that's the answer
[16:15:13] <Franciman> thanks for making me realise that names are dumb
[16:16:39] <ifreund> :)
[16:16:55] <Franciman> i still want string literals
[16:17:26] <daex> Re: 1: doesn't Unicode define XID_* codepoint classes or whatever they're called?
[16:17:35] <Franciman> yes
[16:17:53] <Franciman> but it's so huge I don't know if I want to narrow it :P
[16:18:04] <daex> Yeah fair.
[16:18:31] <supakeen> https://www.unicode.org/reports/tr15/tr15-21.html#Programming_Language_Identifiers
[16:18:32] *** Joins: pretty_dumm_guy (trottel@gateway/vpn/protonvpn/prettydummguy/x-88029655)
[16:18:35] <supakeen> Is likely relevant to your plans.
[16:19:04] <Franciman> many thanks
[16:19:34] *** Joins: zakora (~zakora@dzd6d6ydx05jj4m87rg1t-3.rev.dnainternet.fi)
[16:19:56] <Franciman> unicode is so huge :(
[16:20:38] <supakeen> Luckily you're not going to maintain a whitelist but instead likely allow certain classes or planes of characters.
[16:21:15] *** Joins: frmdstryr (~jrm@172.58.203.1)
[16:27:46] *** Quits: zakora (~zakora@dzd6d6ydx05jj4m87rg1t-3.rev.dnainternet.fi) (Quit: Konversation terminated!)
[16:31:17] <ifreund> then your compiler has to be aware of unicode there
[16:31:20] <ifreund> *though
[16:31:25] <ifreund> the zig compiler doesn't need to be
[16:31:43] <supakeen> And you get all the fun stuff like normalization changing between unicode standard versions :) :)
[16:32:42] <ifreund> yep, you gain a dependency on the unicode standard
[16:32:46] <ifreund> which is by no means lightweight
[16:33:52] <Franciman> I had better support only ascii
[16:33:54] <Franciman> damn
[16:33:56] <Franciman> lol
[16:33:58] <Franciman> you are right
[16:34:13] <Franciman> and unicode in strings
[16:36:29] <Franciman> I wonder if there is a saner default
[16:36:31] <Franciman> than ascii
[16:37:48] *** Quits: pkap (~pkap@185.213.155.252) (Ping timeout: 256 seconds)
[16:39:46] <flux_control> As a programming language you'd be hard pressed to find anything saner than using ascii. It's the one codeset that is supported *everywhere* (unless you're working with a system that can't handle 8 bits, 7 if you restrict it to classic ascii).
[16:39:58] <ifreund> Franciman: your compiler doesn't need to be unicode aware to support unicode in strings, UTF-8 is backwards compatible with ascii
[16:40:23] <flux_control> There are other encodings that can capture quite a lot, but all encodings have deficiencies.
[17:20:07] *** Joins: noeontheend (~noeonthee@12.205.205.130)
[17:21:47] *** Joins: andrzejku (~andrzejku@45-11-60-125.ip4.greenlan.pl)
[17:28:21] *** Quits: Vexu (~Thunderbi@188.117.20.105) (Quit: Vexu)
[17:51:07] *** Quits: tgschultz (UserNick@047-034-058-084.res.spectrum.com) (Quit: Going offline, see ya! (www.adiirc.com))
[17:51:44] *** Joins: tgschultz (UserNick@047-034-058-084.res.spectrum.com)
[17:52:05] *** Quits: noeontheend (~noeonthee@12.205.205.130) (Ping timeout: 256 seconds)
[17:58:03] *** Joins: arkurious (~arkurious@user/arkurious)
[18:07:39] <companion_cube> ifreund: you probably want to support \u{…} literals
[18:07:42] <companion_cube> but that's not too hard
[18:08:01] <Franciman> :<
[18:09:33] *** Joins: nyah (~nyah@94.6.71.219)
[18:09:34] <ifreund> companion_cube: you still don't need to depend on the unicode standard to do that
[18:09:40] <ifreund> just emit the raw bytes the user provides
[18:09:58] <companion_cube> no, indeed
[18:10:07] <companion_cube> you do need to be able to encode codepoints to utf8
[18:10:10] <companion_cube> but that's quite easy
[18:10:49] <Franciman> why do we live in such a hard situation?
[18:11:02] <Franciman> I mean a chinese will not be able to comfortably use the language
[18:12:33] <companion_cube> I can't write identifiers with "é" in them either, and that's fine
[18:20:27] <Franciman> companion_cube: what's your language?
[18:20:32] <Franciman> français?
[18:20:35] <Franciman> italiano?
[18:20:43] <Franciman> éspañol?
[18:21:05] <Franciman> inb4 i misspelled spanish in spanish
[18:26:27] <companion_cube> français
[18:26:27] *** Quits: andrzejku (~andrzejku@45-11-60-125.ip4.greenlan.pl) (Read error: Connection reset by peer)
[18:26:52] <Franciman> oais
[18:26:56] <Franciman> c'est fantastique
[18:27:01] <Franciman> ouais*
[18:27:29] <Franciman> je ne suis pas français, mais je m'appelle Francesco, ou François
[18:28:56] <companion_cube> :)
[18:29:00] <companion_cube> and yet I program in english
[18:29:22] <Franciman> i also do that
[18:29:34] <Franciman> but think about people from china
[18:29:36] <Franciman> or japan
[18:29:44] <Franciman> and now I realize that nobody cares about my language
[18:29:53] <Franciman> thanks ppl
[18:46:36] *** Joins: tane (~tane@dslb-002-201-234-166.002.201.pools.vodafone-ip.de)
[18:46:36] *** Quits: tane (~tane@dslb-002-201-234-166.002.201.pools.vodafone-ip.de) (Changing host)
[18:46:36] *** Joins: tane (~tane@user/tane)
[18:53:05] <companion_cube> they can also learn english ;)
[18:53:14] <companion_cube> most docs on programming are in english after all
[18:55:59] *** Quits: tgschultz (UserNick@047-034-058-084.res.spectrum.com) (Quit: Going offline, see ya! (www.adiirc.com))
[18:56:29] *** Joins: tgschultz (UserNick@047-034-058-084.res.spectrum.com)
[18:59:22] <tgschultz> I personally don't think having to write identifiers in romaji or pinyin is too much to ask, but as I'm not a native speaker of Japanese or Chinese my perspective isn't worth much on the subject.
[19:03:34] <bgiannan> https://github.com/tomaka/rouille :D
[19:03:45] <bgiannan> huh wrong link
[19:03:52] <bgiannan> there https://github.com/bnjbvr/rouille
[19:05:42] <companion_cube> calisse!()
[19:05:45] <companion_cube> losing my shit on that one :D
[19:06:57] <_javyre> ooh nice to be acknowledged as quebecois :)
[19:07:46] <_javyre> > tabarnak! lmao
[19:08:12] <bgiannan> companion_cube, you canadian or french?
[19:08:37] <companion_cube> french :)
[19:08:43] <_javyre> nomagno: in general or here?
[19:11:01] *** Joins: rgrinberg (~textual@200.5.63.76)
[19:11:15] <_javyre> nah. I guess it depends where in canada. The montreal accent is very confused and unique so can't really say personally xD
[19:11:23] <_javyre> oh but in french yes
[19:12:15] *** Parts: skepta (~eric2@36.70.44.228) ()
[19:16:57] <_javyre> btw, on the actual topic of zig: Is there a way to basically do: `functionthatmightfail() catch unreachable;` but without actually crashing? The goal  here is to print a return trace of the error but not crash.
[19:18:42] <_javyre> what I'm doing right now is just catching the error and printing it, but that gives no information about where the error came from. 
[19:18:43] <dutchie> `function() catch |e| { printInfoAbout(e); return }` or whatever you want to do to carry on
[19:19:21] <_javyre> that's what I'm doing right now but it's not very insightful. I can only print the name of the error
[19:19:47] <dutchie> oh there's @errorReturnTrace
[19:19:55] <dutchie> i've not used it myself but I think that's what you need
[19:19:58] <_javyre> oh that sounds promising
[19:21:03] <_javyre> ayt I'm about to try thanks. Can't believe I missed that in the langref
[19:21:36] <dutchie> it's easy to gloss over all those builtins
[19:27:21] <_javyre> worked like a charm :) https://i.imgur.com/h6ppxs4.png
[19:55:40] <Franciman> what does unreachable do?
[19:58:03] <ifreund> Franciman: it's an assertion that the given branch is never reached during execution
[19:58:25] <ifreund> if that branch is in fact reached, it's a panic in safe build modes and UB in release fast/small
[19:58:38] <ifreund> assert is implemented as `if (!ok) unreachable;` for example
[19:59:39] *** Quits: livoreno (~livoreno@user/notzmv) (Ping timeout: 252 seconds)
[20:00:51] <_javyre> iiuc unreachable also implies @setCold(true) right?
[20:01:32] *** Joins: notapenguin (~ryu@2804:14d:5680:8a2c:75cf:7f59:516a:b801)
[20:02:41] <ifreund> _javyre: it's far stronger than that in fast build modes
[20:02:41] *** Quits: notapenguin (~ryu@2804:14d:5680:8a2c:75cf:7f59:516a:b801) (Client Quit)
[20:02:49] <ifreund> s/fast/unsafe/
[20:03:06] <ifreund> maybe it should do that in release-safe though, I don't think it does currently
[20:05:57] <_javyre> oh damn. Yeah I don't see why not have it in debug. It's not like setCold() on an unrecoverable error path would make any difference to program logic..
[20:06:38] <ifreund> _javyre: setCold() in debug would be useless as there aren't any optimizations being done as its debug mode :P
[20:06:52] <ifreund> the only case where it would matter is release-safe
[20:07:04] <_javyre> oh true lol
[20:09:46] *** Joins: andrzejku (~andrzejku@45-11-60-125.ip4.greenlan.pl)
[20:13:05] <Franciman> tanks
[20:15:42] *** Joins: livoreno (~livoreno@user/notzmv)
[20:26:44] *** Quits: tgschultz (UserNick@047-034-058-084.res.spectrum.com) (Quit: Going offline, see ya! (www.adiirc.com))
[20:27:11] *** Joins: tgschultz (UserNick@047-034-058-084.res.spectrum.com)
[20:45:26] *** Joins: wootehfoot (~wootehfoo@user/wootehfoot)
[20:52:31] *** Quits: andrzejku (~andrzejku@45-11-60-125.ip4.greenlan.pl) (Read error: Connection reset by peer)
[21:19:54] *** Joins: noeontheend (~noeonthee@12.205.205.130)
[21:21:08] *** Quits: rgrinberg (~textual@200.5.63.76) (Quit: My MacBook has gone to sleep. ZZZzzz…)
[21:26:17] *** Joins: andrzejku (~andrzejku@45-11-60-125.ip4.greenlan.pl)
[21:33:01] *** Quits: neurocyte0132889 (~neurocyte@user/neurocyte) (Ping timeout: 256 seconds)
[21:34:07] *** Joins: pkap (~pkap@185.213.155.252)
[21:35:29] *** Joins: neurocyte0132889 (~neurocyte@user/neurocyte)
[21:35:50] *** Joins: xackus (~xackus@9-225.w.knc.pl)
[21:41:13] *** Quits: neurocyte0132889 (~neurocyte@user/neurocyte) (Ping timeout: 252 seconds)
[21:41:27] *** Joins: neurocyte0132889 (~neurocyte@user/neurocyte)
[21:45:35] *** Quits: wootehfoot (~wootehfoo@user/wootehfoot) (Read error: Connection reset by peer)
[21:59:44] <pkap> Is there something like strlen() in zig to get length of `[*:0]const u8`?
[22:05:57] <luuk> std.mem.sliceTo(some_slice, 0)
[22:07:08] <luuk> some_slice is actually a bad name for the example lol
[22:07:23] <luuk> Meant to say pointer
[22:09:59] <ugla> `std.mem.len(...)` should work
[22:12:28] <luuk> Ah yeah, that's actually a better suggesting since you only needed the length. (I should've read more carefully)
[22:12:35] <luuk> s/suggesting/suggestion
[22:16:08] *** Quits: Sawzall (~Sawzall@96-82-249-149-static.hfc.comcastbusiness.net) (Read error: Connection reset by peer)
[22:16:25] *** Joins: Sawzall (~Sawzall@96-82-249-149-static.hfc.comcastbusiness.net)
[22:18:03] *** Quits: neurocyte0132889 (~neurocyte@user/neurocyte) (Read error: Connection reset by peer)
[22:18:32] *** Joins: neurocyte0132889 (~neurocyte@user/neurocyte)
[22:20:22] <pkap> Ah thanks luuk and ugla. I was only looking in the core docs not in the std docs-_-
[22:31:41] *** Joins: waleee (~waleee@2001:9b0:216:8200:d457:9189:7843:1dbd)
[22:52:25] *** Quits: noeontheend (~noeonthee@12.205.205.130) (Ping timeout: 256 seconds)
[22:56:58] *** Joins: notapenguin (~ryu@179.222.254.137)
[23:10:30] *** Quits: pkap (~pkap@185.213.155.252) (Ping timeout: 256 seconds)
[23:12:53] *** Quits: mountaingoat (~mountaing@user/mountaingoat) (Ping timeout: 252 seconds)
[23:26:19] *** Joins: mountaingoat (~mountaing@user/mountaingoat)
[23:29:11] *** Joins: jokoon (~eio@2a01:e0a:542:e160:1901:8c08:67d4:4693)
[23:31:33] *** Quits: notapenguin (~ryu@179.222.254.137) (Quit: WeeChat 3.3)
[23:40:46] *** Joins: terminalpusher (~terminalp@2a01:586:a4a5:1:b882:42b4:f44e:9996)
[23:46:59] *** Quits: waleee (~waleee@2001:9b0:216:8200:d457:9189:7843:1dbd) (Ping timeout: 252 seconds)
[23:52:17] <ifreund> mem.sliceTo(foo, 0).len is actually a better translation of strlen()
[23:52:33] <ifreund> mem.len(foo) won't iterate foo if foo is an array
[23:53:23] *** Quits: andrzejku (~andrzejku@45-11-60-125.ip4.greenlan.pl) (Read error: Connection reset by peer)
[23:57:32] *** Quits: jokoon (~eio@2a01:e0a:542:e160:1901:8c08:67d4:4693) (Quit: Leaving)
[23:59:21] *** Joins: waleee (~waleee@2001:9b0:216:8200:d457:9189:7843:1dbd)
