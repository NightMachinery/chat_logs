[00:02:24] *** Quits: node1 (~hex@user/node1) (Remote host closed the connection)
[00:03:09] *** Joins: _mikey (~mikey@user/mikey/x-4335048)
[00:03:27] <bkhl> Btrfs?
[00:03:41] *** Joins: Fairy (~Fairy@2001:464a:4992:0:bdfd:8ef1:211a:77dc)
[00:03:58] *** Joins: rsjw (~quassel@user/rsjw)
[00:05:35] <rsjw> sham1: yeah, you /can/ call through libc, but you shouldn't /have/ to
[00:05:58] *** Joins: rgrinberg (~textual@187.223.183.192)
[00:05:59] *** Joins: llh (~llh@user/llh)
[00:08:39] *** Quits: Teukka (~teukka@user/Teukka) (Read error: Connection reset by peer)
[00:08:52] *** Joins: Teukka (~teukka@84-216-41-232.customers.ownit.se)
[00:08:52] *** Quits: Teukka (~teukka@84-216-41-232.customers.ownit.se) (Changing host)
[00:08:52] *** Joins: Teukka (~teukka@user/Teukka)
[00:10:49] *** Quits: ouestbillie (~gallup@modemcable057.194-20-96.mc.videotron.ca) (Ping timeout: 256 seconds)
[00:10:49] *** Quits: aouestbillie (~gallup@modemcable057.194-20-96.mc.videotron.ca) (Ping timeout: 256 seconds)
[00:12:19] *** Joins: Leonard (~Administr@114.55.127.80)
[00:12:29] *** Quits: cryptonector (~nico@24.28.108.183) (Quit: leaving)
[00:13:04] *** Joins: acerbic (~acerbic@cs-xdata-50-86-53-211.cspire.com)
[00:14:13] *** Quits: Leonardzzz (~Administr@114.55.127.80) (Ping timeout: 240 seconds)
[00:14:41] *** Joins: kurahaupo (~kurahaupo@115.69.27.211)
[00:15:47] *** Joins: smallville7123 (~smallvill@cpe-172-193-200-97.qld.foxtel.net.au)
[00:17:46] *** Quits: rgrinberg (~textual@187.223.183.192) (Ping timeout: 256 seconds)
[00:18:39] *** Joins: cosimone (~user@2001:b07:ae5:db26:c24a:d20:4d91:1e20)
[00:18:41] *** Joins: inomoz (~inomoz@176.59.115.245)
[00:19:35] *** Quits: gproto23 (~gproto23@user/gproto23) (Read error: Connection reset by peer)
[00:20:36] *** Quits: smallville7123 (~smallvill@cpe-172-193-200-97.qld.foxtel.net.au) (Ping timeout: 256 seconds)
[00:23:26] *** Quits: kurahaupo (~kurahaupo@115.69.27.211) (Ping timeout: 256 seconds)
[00:30:35] *** Joins: teut (~teut@2401:4900:1c68:6b85:a055:f956:ced4:e0d4)
[00:30:36] <teut> https://ibb.co/F5qTdHL
[00:30:48] <teut> what will be the answer to this ques?
[00:31:20] *** Joins: rgrinberg (~textual@187.223.248.37)
[00:31:25] <cherrry9> is it possible to display in gdb value under register with offset e.g. 4(%ebp)?
[00:31:35] <teut> 1 ?
[00:32:28] *** Quits: TonyStone (~TonyStone@2603-7080-8607-c36a-9cdb-69bc-753b-1e50.res6.spectrum.com) (Remote host closed the connection)
[00:33:26] *** Quits: dacav (~dacav@h94-245-9-196.cust.a3fiber.se) (Quit: leaving)
[00:33:57] *** Quits: ___nick___ (~quassel@cpc68286-cdif17-2-0-cust533.5-1.cable.virginm.net) (Ping timeout: 240 seconds)
[00:34:41] <fizzie> `x $esp+4` or `p *(type *)($esp+4)` ought to work for that.
[00:34:54] <fizzie> The former with the usual x flags for size and formatting.
[00:35:47] *** Joins: dacav (~dacav@h94-245-9-196.cust.a3fiber.se)
[00:36:20] *** Joins: Leonardzzz (~Administr@114.55.127.80)
[00:36:53] *** Quits: WilliamLeara (~wdl@cpe-76-185-2-28.tx.res.rr.com) (Ping timeout: 256 seconds)
[00:37:19] <fizzie> Assuming all those doubled double quotes ("") are intended to represent just a single double quote ("), there's nothing _syntactically_ wrong with the program as given, it's just willfully weird.
[00:37:27] *** Quits: sdk_ (~x@shell.codevoid.de) (Quit: gopher://codevoid.de)
[00:37:53] <teut> i know
[00:38:09] <teut> but I have online test of cisco tomorrow
[00:38:10] *** Quits: rgrinberg (~textual@187.223.248.37) (Ping timeout: 256 seconds)
[00:38:21] *** Joins: sdk_ (~x@shell.codevoid.de)
[00:38:28] <teut> these are questions asked in other college
[00:39:05] *** Quits: Leonardzzz (~Administr@114.55.127.80) (Read error: Connection reset by peer)
[00:39:14] *** Joins: Leonardzzz (~Administr@114.55.127.80)
[00:39:43] *** Quits: Leonard (~Administr@114.55.127.80) (Ping timeout: 256 seconds)
[00:40:11] *** Joins: rgrinberg (~textual@187.223.248.37)
[00:40:13] *** Quits: iomari891 (~iomari891@197.210.79.39) (Quit: WeeChat 3.3)
[00:40:33] *** Quits: elastic_dog (~elastic_d@2a01:118f:822:9c00:f583:aa51:9ad4:d4fb) (Quit: elastic_dog)
[00:41:09] *** Joins: blyat-73 (~hjgkjhgkj@46.235.96.249)
[00:41:21] *** Joins: elastic_dog (~elastic_d@2a01:118f:822:9c00:f583:aa51:9ad4:d4fb)
[00:41:59] *** Quits: Darkcoal (~user@139.64.51.226) (Ping timeout: 256 seconds)
[00:42:10] *** Quits: sdk_ (~x@shell.codevoid.de) (Client Quit)
[00:43:08] *** Joins: sdk_ (~x@shell.codevoid.de)
[00:44:03] <cherrry9> fizzie: im getting cannot access memory error
[00:44:11] <cherrry9> but im sure there is something behind this address
[00:44:13] *** Joins: Leonard (~Administr@114.55.127.80)
[00:44:49] *** Joins: ouestbillie (~gallup@192-222-138-215.qc.cable.ebox.net)
[00:44:49] *** Joins: aouestbillie (~gallup@192-222-138-215.qc.cable.ebox.net)
[00:44:54] *** Joins: dsrt^ (~dsrt@wsip-98-188-246-242.mc.at.cox.net)
[00:46:13] *** Quits: Leonardzzz (~Administr@114.55.127.80) (Ping timeout: 240 seconds)
[00:46:25] *** Joins: kurahaupo (~kurahaupo@115.69.27.211)
[00:47:32] *** Quits: teut (~teut@2401:4900:1c68:6b85:a055:f956:ced4:e0d4) (Quit: Client closed)
[00:51:35] *** Quits: sathylias (~sysadmin@modemcable136.173-130-66.mc.videotron.ca) (Quit: WeeChat 3.4)
[00:54:01] *** Quits: imp (~imp@192-141-191-227.alternativaip.net.br) (Quit: imp)
[00:54:26] *** Joins: imp (~imp@192-141-191-227.alternativaip.net.br)
[00:55:30] *** Quits: fstd (~fstd@xdsl-87-78-21-185.nc.de) (Read error: Connection reset by peer)
[00:55:37] *** Joins: fstd (~fstd@xdsl-87-78-21-185.nc.de)
[00:57:59] <twkm> consider each part separately cherrry9.
[00:58:29] *** Quits: Macuser (~Macuser@2600:1003:b447:1ed2:7489:9969:d4b9:7234) (Quit: My MacBook has gone to sleep. ZZZzzz…)
[00:58:38] *** Joins: NEYi (~NEYi@109.251.216.38)
[00:58:46] *** Quits: wingsorc (~wingsorc@user/wingsorc) (Quit: Leaving)
[01:00:13] *** Quits: malina (~malina@user/malina) (Ping timeout: 240 seconds)
[01:00:36] *** Quits: mikoto-chan (~mikoto-ch@esm-84-240-99-143.netplaza.fi) (Read error: Connection reset by peer)
[01:00:50] *** Quits: rgrinberg (~textual@187.223.248.37) (Ping timeout: 256 seconds)
[01:02:34] *** Joins: wingsorc (~wingsorc@user/wingsorc)
[01:03:51] *** Joins: mikoto-chan (~mikoto-ch@esm-84-240-99-143.netplaza.fi)
[01:05:58] *** Quits: perrierjouet (~perrier-j@modemcable012.251-130-66.mc.videotron.ca) (Quit: WeeChat 3.4)
[01:06:49] *** Joins: Leonardzzz (~Administr@114.55.127.80)
[01:07:28] *** Joins: rgrinberg (~textual@187.223.183.192)
[01:07:57] *** Joins: terminalpusher (~terminalp@2a01:586:8e8d:1:a3ae:5aad:c134:21a5)
[01:09:49] *** Quits: Leonard (~Administr@114.55.127.80) (Ping timeout: 240 seconds)
[01:11:41] *** Quits: ferdna (~ferdna@user/ferdna) (Remote host closed the connection)
[01:12:25] <fizzie> (Also are you sure you want $ebp and not $rbp?)
[01:15:30] *** Quits: hanzo (uid532183@user/hanzo) (Quit: Connection closed for inactivity)
[01:16:08] *** Quits: rgrinberg (~textual@187.223.183.192) (Ping timeout: 256 seconds)
[01:16:47] *** Quits: greenbagels (~gb@user/greenbagels) (Ping timeout: 252 seconds)
[01:17:12] *** Joins: greenbagels (~gb@user/greenbagels)
[01:19:09] *** Joins: rgrinberg (~textual@187.223.218.43)
[01:21:23] *** Quits: inomoz (~inomoz@176.59.115.245) (Remote host closed the connection)
[01:21:39] *** Quits: kurahaupo (~kurahaupo@115.69.27.211) (Ping timeout: 256 seconds)
[01:22:53] *** Joins: inomoz (~inomoz@176.59.115.245)
[01:23:06] *** Quits: Leonardzzz (~Administr@114.55.127.80) (Read error: Connection reset by peer)
[01:23:17] *** Joins: Leonardzzz (~Administr@114.55.127.80)
[01:23:55] *** Quits: phrosty (~phrosty@c-73-225-175-19.hsd1.wa.comcast.net) (Ping timeout: 256 seconds)
[01:24:31] <cherrry9> i want to check what is under first argument passed to function, im using x86 assembly so I have to use $ebp
[01:25:51] *** Joins: perrierjouet (~perrier-j@modemcable012.251-130-66.mc.videotron.ca)
[01:25:57] <fizzie> Does your function use a frame pointer in the first place? `ebp` has (almost) no specific meaning to the hardware, it's just a convention.
[01:26:22] <fizzie> In any case, comparing `p/x $ebp` with the output of `i proc mappings` should conclusively answer whether there can possibly be anything at nearby addresses.
[01:27:04] <fizzie> You might also have had a breakpoint before the function prologue (i.e., before ebp gets set).
[01:27:14] *** Joins: TonyStone (~TonyStone@2603-7080-8607-c36a-9cdb-69bc-753b-1e50.res6.spectrum.com)
[01:34:29] *** Quits: aradesh (~aradesh@user/aradesh) (Quit: WeeChat 1.9.1)
[01:34:50] *** Quits: rgrinberg (~textual@187.223.218.43) (Ping timeout: 256 seconds)
[01:35:40] *** Quits: pretty_dumm_guy (trottel@gateway/vpn/protonvpn/prettydummguy/x-88029655) (Quit: WeeChat 3.4)
[01:36:29] *** Quits: TonyStone (~TonyStone@2603-7080-8607-c36a-9cdb-69bc-753b-1e50.res6.spectrum.com) (Remote host closed the connection)
[01:38:03] *** Joins: Leonard (~Administr@114.55.127.80)
[01:39:04] *** Joins: rgrinberg (~textual@187.223.248.37)
[01:39:13] *** Quits: steve__ (~steve@ool-182c2b80.dyn.optonline.net) (Ping timeout: 256 seconds)
[01:39:37] *** Quits: pert (~pert@fsf/member/pert) (Quit: pert)
[01:39:45] *** Joins: pert (~pert@2603-900a-ff00-001c-5de7-3403-ec7b-d597.inf6.spectrum.com)
[01:39:55] *** Quits: agonhajdari (~textual@user/agonhajdari) (Quit: My Mac Mini has gone to sleep. ZZZzzz…)
[01:40:03] *** Quits: pert (~pert@2603-900a-ff00-001c-5de7-3403-ec7b-d597.inf6.spectrum.com) (Remote host closed the connection)
[01:40:30] *** Quits: Leonardzzz (~Administr@114.55.127.80) (Ping timeout: 256 seconds)
[01:41:07] <cherrry9> http://0x0.st/oiPv.s so i have this program in assembly x86 and for some reason opening file at line 51 return negative file descriptor (error), I wanted to check if I'm using correct addresses for arguments from command line so I have tried this in gdb: b _start; run test test.out; step to line 52; p *(char *)($ebp+12) but this returns Cannon access memory at address 0x38. Any idea what I'm doing wrong?
[01:41:51] *** Joins: System_Error (~SystemErr@user/systemerror)
[01:42:13] <fizzie> Yes: at _start, $ebp hasn't been set to any particularly useful value.
[01:42:26] <fizzie> Oh, you said "step to line 52", missed that.
[01:42:46] *** Quits: zer0bitz_ (~zer0bitz@196.244.192.61) (Read error: Connection reset by peer)
[01:44:39] *** Joins: TonyStone (~TonyStone@cpe-74-76-51-197.nycap.res.rr.com)
[01:44:50] *** Joins: jcpi (~jcpi@2601:644:8e7e:3040:8f13:4b68:ed49:cbdd)
[01:45:49] *** Joins: Leonardzzz (~Administr@114.55.127.80)
[01:46:05] *** Joins: kurahaupo (~kurahaupo@115.69.27.211)
[01:46:37] *** Quits: johnjaye (~pi@154.6.152.74) (Ping timeout: 240 seconds)
[01:47:35] *** Joins: Alhazred (~Alhazred@athedsl-4387600.home.otenet.gr)
[01:48:55] *** Joins: johnjaye (~pi@154.6.152.74)
[01:49:00] *** Quits: Leonard (~Administr@114.55.127.80) (Ping timeout: 256 seconds)
[01:49:02] *** Quits: kts (~kts@103.73.237.75) (Quit: Konversation terminated!)
[01:49:12] *** Joins: arinov (~arinov@213.194.126.155)
[01:49:49] *** Parts: jcpi (~jcpi@2601:644:8e7e:3040:8f13:4b68:ed49:cbdd) ()
[01:49:50] *** Joins: jcpi (~jcpi@2601:644:8e7e:3040:8f13:4b68:ed49:cbdd)
[01:50:33] *** Joins: constxd (~brad@142.134.38.68)
[01:51:15] <fizzie> cherrry9: FWIW, one thing that I think is definitely wrong in the original source is `.equ ARGV2, 0x12`. You want either 12 or 0xC, not 0x12. At any rate, I don't get any errors like that after breaking at _start and single-stepping down to line 52.
[01:51:45] *** Parts: jcpi (~jcpi@2601:644:8e7e:3040:8f13:4b68:ed49:cbdd) ()
[01:53:15] <fizzie> https://0x0.st/oiPD.txt for reference.
[01:53:32] *** Quits: rgrinberg (~textual@187.223.248.37) (Ping timeout: 256 seconds)
[01:53:37] *** Quits: Alhazred (~Alhazred@athedsl-4387600.home.otenet.gr) (Ping timeout: 240 seconds)
[01:55:48] *** Quits: kurahaupo (~kurahaupo@115.69.27.211) (Ping timeout: 256 seconds)
[01:56:06] <cherrry9> fizzie: thanks a lot, I see the problem now
[01:56:22] *** Joins: wenxin (~wenxin@user/vim-fans/x-3284168)
[01:56:27] *** Joins: dan_pena (~dan_pena@112.252.130.77.rev.sfr.net)
[01:57:01] *** Joins: Leonard (~Administr@114.55.127.80)
[01:57:01] *** Joins: Betal (~Betal@user/betal)
[01:57:06] <dan_pena> hello, I would like to use unit testing + automation using GitLab CI while doing my C project! Any idea on how to do the unit testing + automation phase for a C project?
[01:59:46] *** Quits: Leonardzzz (~Administr@114.55.127.80) (Ping timeout: 256 seconds)
[01:59:51] <constxd> write unit tests
[02:00:35] *** Joins: kurahaupo (~kurahaupo@115.69.27.211)
[02:00:35] *** Joins: rgrinberg (~textual@187.223.183.192)
[02:00:39] *** Joins: malina (~malina@user/malina)
[02:01:09] <constxd> and then add a job to your gitlab ci
[02:01:11] <constxd> that runs them
[02:02:13] *** Joins: smallville7123 (~smallvill@cpe-172-193-200-97.qld.foxtel.net.au)
[02:02:29] *** Joins: Zambyte (~Zambyte@cpe-104-228-60-14.nycap.res.rr.com)
[02:03:57] *** Quits: TonyStone (~TonyStone@cpe-74-76-51-197.nycap.res.rr.com) (Ping timeout: 240 seconds)
[02:06:13] *** Quits: Fairy (~Fairy@2001:464a:4992:0:bdfd:8ef1:211a:77dc) (Ping timeout: 240 seconds)
[02:06:37] *** Quits: smallville7123 (~smallvill@cpe-172-193-200-97.qld.foxtel.net.au) (Ping timeout: 240 seconds)
[02:07:49] *** Quits: Leonard (~Administr@114.55.127.80) (Read error: Connection reset by peer)
[02:07:49] *** Joins: Leonardzzz (~Administr@114.55.127.80)
[02:08:41] <sham1> And as for libraries to do the unit tests with, I like cmocka personally
[02:11:01] *** Quits: xmyst (~xmyst@ip5f5ac363.dynamic.kabel-deutschland.de) (Ping timeout: 240 seconds)
[02:11:09] *** Joins: Alhazred (~Alhazred@s91904425.blix.com)
[02:11:18] <nicode> What's the "right" way to clear screen in a C program? I know I can just run system("clear") but is there a way I can do it in pure C?
[02:13:03] <ioxzev1z> ,std screen
[02:13:04] <candide> Standard C has no notion of 'screen', so you must be talking about some specific OS, library, tool, implementation, architecture, et cetera. These are beyond the scope of this channel, which focuses on Standard C.
[02:13:23] <fizzie> Typically, printing out the right sort of terminal control code. But as implied, it'd be implementation-specific.
[02:13:29] <nicode> right, I guess I mean a linux implementation of it, then?
[02:13:42] <constxd> fputs("\x1b[2J", stdout); fflush(stdout);
[02:14:39] <constxd> or since it's linux specific anyway you could just use write() and avoid the fflush call
[02:16:17] <fizzie> ,sh clear |& hexdump -C  # just curious
[02:16:18] <candide> fizzie: 00000000  1b 5b 48 1b 5b 4a 1b 5b  33 4a                    |.[H.[J.[3J| 0000000a
[02:17:17] *** Joins: TonyStone (~TonyStone@2603-7080-8607-c36a-9cdb-69bc-753b-1e50.res6.spectrum.com)
[02:17:32] *** Quits: terminalpusher (~terminalp@2a01:586:8e8d:1:a3ae:5aad:c134:21a5) (Remote host closed the connection)
[02:17:39] *** Quits: cherrry9 (~jan@dek164.neoplus.adsl.tpnet.pl) (Quit: leaving)
[02:20:19] *** Quits: trafficjam (~trafficja@119.17.42.59) (Quit: Ping timeout (120 seconds))
[02:21:43] *** Joins: agonhajdari (~textual@user/agonhajdari)
[02:23:00] *** Quits: rgrinberg (~textual@187.223.183.192) (Ping timeout: 256 seconds)
[02:24:27] <fizzie> (Hmm, \e[H\e[J\e[3J. Or in ECMA-48 terms, set cursor position to (1,1), erase all characters of the active page from cursor to end of page, and.. ECMA-48 doesn't define what parameter 3 would mean, but apparently that's commonly used for also clearing any scrollback.)
[02:26:37] *** Quits: Alhazred (~Alhazred@s91904425.blix.com) (Ping timeout: 240 seconds)
[02:27:06] *** Quits: kloos (~kloos@152-39-142-46.pool.kielnet.net) (Quit: Client closed)
[02:28:29] *** Joins: Alhazred (~Alhazred@s91904425.blix.com)
[02:32:13] *** Joins: Leonard (~Administr@114.55.127.80)
[02:33:17] *** Quits: pizdets (~pizdets@183.182.115.136) (Ping timeout: 240 seconds)
[02:33:38] *** Quits: ghenry (~ghenry@ghenry.plus.com) (Remote host closed the connection)
[02:33:45] *** Joins: pizdets_ (~pizdets@183.182.115.92)
[02:34:45] *** Quits: Leonardzzz (~Administr@114.55.127.80) (Ping timeout: 256 seconds)
[02:36:13] *** Quits: wroathe (~wroathe@user/wroathe) (Ping timeout: 240 seconds)
[02:36:52] *** Quits: blyat-73 (~hjgkjhgkj@46.235.96.249) (Quit: Leaving)
[02:37:19] *** Quits: mrig (~mrig@user/mrig) (Quit: WeeChat 3.0)
[02:42:40] *** Joins: Leonardzzz (~Administr@114.55.127.80)
[02:44:17] *** Quits: imp (~imp@192-141-191-227.alternativaip.net.br) (Quit: imp)
[02:45:00] *** Quits: soapsudsxx (~soapsudsx@141.193.188.151) (Remote host closed the connection)
[02:45:06] *** Quits: constxd (~brad@142.134.38.68) (Ping timeout: 256 seconds)
[02:45:25] *** Quits: Leonard (~Administr@114.55.127.80) (Ping timeout: 240 seconds)
[02:45:43] *** Joins: Satin (uid193953@user/Seten)
[02:52:28] *** Joins: nuxil (~nuxil@141.195.51.213)
[02:56:13] *** Quits: xb0o2 (~xb0o2@user/xb0o2) (Quit: Client closed)
[02:56:57] *** Quits: penguino (~mrpenguin@user/mrpenguin) (Quit: penguino)
[02:58:07] *** Quits: LucaTM (~LucaTM@user/lucatm) (Quit: Textual IRC Client: www.textualapp.com)
[02:59:25] *** Quits: Jeaton (~hybrid@user/Jeaton) (Quit: Leaving)
[03:01:32] *** Joins: wroathe (~wroathe@206-55-188-8.fttp.usinternet.com)
[03:01:32] *** Quits: wroathe (~wroathe@206-55-188-8.fttp.usinternet.com) (Changing host)
[03:01:32] *** Joins: wroathe (~wroathe@user/wroathe)
[03:04:13] *** Quits: crankslider (~slidercra@user/slidercrank) (Ping timeout: 256 seconds)
[03:06:18] *** Joins: penguino (~mrpenguin@user/mrpenguin)
[03:06:27] *** Joins: pnbeast (~pnbeast@2601:140:4280:6ce0::1)
[03:06:53] *** Quits: Akuli (~Akuli@213.216.210.19) (Quit: Akuli)
[03:07:01] *** Joins: Leonard (~Administr@114.55.127.80)
[03:07:48] *** Quits: Leonard (~Administr@114.55.127.80) (Read error: Connection reset by peer)
[03:07:49] *** Quits: wroathe (~wroathe@user/wroathe) (Ping timeout: 240 seconds)
[03:09:21] *** Quits: Klinda (~superleag@user/klinda) (Quit: Konversation terminated!)
[03:09:53] *** Quits: Leonardzzz (~Administr@114.55.127.80) (Ping timeout: 256 seconds)
[03:17:49] *** Quits: ketiv (~ketiv@92.40.194.78.threembb.co.uk) (Ping timeout: 240 seconds)
[03:19:26] <johnjaye> does the mocka in cmocka refer to mock testing?
[03:19:49] <johnjaye> i read this article. seemed gibberish to me. but it was about csharp and mocks and unit tests.
[03:19:57] <johnjaye> the words were english but the sentences were nonsense
[03:20:06] <johnjaye> but mock came up a lot.
[03:21:38] <Rounin> From what you're saying, it would sound like a mocking library for C# I guess
[03:21:54] <johnjaye> right. so mock isn't just a made up term it sounds like
[03:22:00] <johnjaye> that's reassuring
[03:22:20] <Rounin> Ah, no... It's like if you want a super quick implementation of a database or service because you're testing something else, you can use that library to make something that sort of works
[03:22:36] <Rounin> A web service that seems like AWS, but always returns 42
[03:22:41] <johnjaye> right.
[03:22:44] <johnjaye> that makes sense
[03:23:35] <johnjaye> i guess the article was at that awkward stage where it's just techincal enough to be incomprehensible but just friendly enough to seem like normal english
[03:23:44] *** Joins: joast (~rick@cpe-98-146-112-4.natnow.res.rr.com)
[03:24:46] <Rounin> Haha, sounds like it... Not to mention it evidently threw an unknown product name in there
[03:26:17] <fizzie> Some people make a big deal about the distinction between a mock and a fake (and a stub and a spy).
[03:26:45] *** Joins: ldericher (~LDer@pantalaimon.yavook.de)
[03:27:37] <johnjaye> yes, i imagine some people might
[03:30:13] <Rounin> I vaguely know the term "spy", but it's firmly in the "not necessary for me to do my job" part of my brain
[03:30:29] <Rounin> Together with SOLID and most aspects of SCRUM and REST
[03:30:34] <johnjaye> i wonder if there's a name for the logical fallacy where you have A->B and A, but you only give an argument for A
[03:30:47] <johnjaye> imagining that your audience believes A->B so strongly you have no need to argue for it
[03:31:11] *** Joins: hanzo (uid532183@user/hanzo)
[03:31:26] <Rounin> Hm... Sounds like it should have a name... It sounds common when you mention it
[03:32:16] <pony> that could be the slippery slope fallacy perhaps
[03:32:56] <johnjaye> in this case it was arguing strongly for a type of approach to mocking
[03:33:02] *** Joins: cuppajoe (~joe@ip70-171-93-122.no.no.cox.net)
[03:33:11] <johnjaye> while eliding what mocking even is or why it matters
[03:33:23] *** Quits: strajder (~strajder@user/strajder) (Quit: leaving)
[03:33:27] *** Joins: rgrinberg (~textual@2806:265:5401:8cd:18b:fa2e:c948:1d68)
[03:34:01] <Rounin> Yeah... People in enterprise programming are often very quick to take whatever interests them in the moment and label it as "best practice" and things like that
[03:34:24] <johnjaye> in a way it's sort of impresses me. that you can write several detailed paragraphs and not even give a hint about what your intention is
[03:34:26] <Rounin> It's imperative that we all use 4-way intersections with Spelunking buses this year! Or else what shall become of us!
[03:34:38] <johnjaye> like. you'd think sometimes your intention would accidentally seep through or a throw away line would hint at it
[03:34:50] <johnjaye> yes
[03:35:10] <nomagno> johnjaye: That's not as uncommon in philosophy as you'd think
[03:35:41] <nomagno> Some base truths need some kind of either blind trust or non-perfect argumentation for the rest of a comprehensive theory to be attainable
[03:36:06] <johnjaye> i suppose. i'm also thinking of the systemd guy's blog. but then those posts i read i think were specifically about justifying why systemd should be used
[03:36:10] <johnjaye> so maybe not the best example
[03:37:09] <nomagno> Systemd was a RedHat power grab. Starting off this reasonable proposition, I don't really listen to any arguments for it
[03:37:35] <johnjaye> it's funny you say that. because all the arguments i skimmed over for and against systemd were confusing and vague.
[03:37:52] <johnjaye> if everyone is just afraid to say "redhat shouldn't control linux" that would explain it a bit
[03:38:12] <omegatron> systemd is a cancerous disease (but everyone as they like ...)
[03:38:20] *** Joins: wroathe (~wroathe@206-55-188-8.fttp.usinternet.com)
[03:38:20] *** Quits: wroathe (~wroathe@206-55-188-8.fttp.usinternet.com) (Changing host)
[03:38:20] *** Joins: wroathe (~wroathe@user/wroathe)
[03:38:38] <nomagno> GNOME switched to systemd dependencies because a redhat representative threw a months-long bullshit campaign on their mailing list
[03:38:51] <nomagno> From there, the rest of the community didn't have much choice
[03:38:53] <johnjaye> then why did everyone else do it
[03:39:08] <johnjaye> yeah but like. you have systemd even if you don't have gnome right
[03:39:15] <Rounin> Yeah hm... I remember when they did this same thing with P... Pulseaudio... There were some problems at first, and then it gradually became better, and now systemd seems sort of alright too
[03:39:17] <johnjaye> it controls all system startup
[03:39:25] *** Quits: dan_pena (~dan_pena@112.252.130.77.rev.sfr.net) (Ping timeout: 240 seconds)
[03:39:29] <Rounin> But they did shove it down everybody's throat, and you now need a PhD to change DNSes
[03:39:55] <Rounin> You can change your config files, and nothing happens... That's not really that great
[03:39:57] <nomagno> Debian's justification for when they switched was essentially that it was too hard to work around GNOME having dependencies on it, and other software following in its footpath
[03:40:07] <omegatron> no, my machines are all system v and self compiled/installed - kde runs here without it
[03:40:22] <johnjaye> yeah there's a bunch of distros like devuan - debian without systemd
[03:40:30] <johnjaye> artix for arch. dunno the others
[03:40:38] <nomagno> I am using Devuan Chimaera right now
[03:40:40] <nomagno> :D
[03:40:42] <johnjaye> bsd is servers so they didn't have it
[03:40:45] <johnjaye> XD
[03:40:45] <Rounin> I think I used Upstart for a while, but didn't sytemd eat NetworkManager? Which is almost required for Wi-Fi
[03:41:06] <Rounin> (which is also a bit odd... Why would the old tools not support thigs like WPA2 out of the box)
[03:41:40] <nomagno> systemd has been slowly replacing the rest of the driver stack
[03:41:52] <nomagno> Again, RedHat power grab.
[03:41:54] <johnjaye> linus torvalds said in an old video something similar to systemd was necessary for speedier bootup
[03:41:56] <Rounin> At least we can stop saying GNU/Linux and just say Poettering/Linux
[03:42:14] <dogbert2> upgrading from OpenSUSE 15.2 to 15.3
[03:42:29] <johnjaye> well if linux gets taken over by 2 guys at least there's alternatives. for now
[03:42:42] <nomagno> We should start saying "I DO NOT EVEN KNOW WHAT THIS OS SHOULD BE CALLED" +Linux
[03:43:19] *** Quits: cuppajoe (~joe@ip70-171-93-122.no.no.cox.net) (Ping timeout: 256 seconds)
[03:43:19] <omegatron> who cares about boot time? I don't - my machines usually run 24/7 - I don't want one, where programs or the system are unreliable and force me to do more work on maintenance, than I should do (in 2022) - even if they boot 20 seconds longer
[03:43:21] <Rounin> Yeah... There's some strange divergence there, though... Like, BSD won't support BTRFS (except perhaps DragonflyBSD?), ZFS is barely supported on Linux, Wayland, Alsa and Pulseaudio are Linux-only as far as I know..
[03:43:31] <Rounin> It's almost like POSIX isn't a thing anymore
[03:44:38] <Rounin> I suppose one could use portable-geli and ZFS-on-Linux to have a drive that worked on both
[03:45:08] <nomagno> POSIX is simply not enough to standardize a modern *nix distro beyond the low-level toolchain
[03:45:35] <Rounin> Hehe... Now that you mention it, it's kind of good that all of ZFS isn't part of the standard
[03:45:36] <nomagno> A new compendium of standards would have to be cobbled up to make the modern user interfacing portable
[03:45:44] <Rounin> Or whatever handles OpenGL now
[03:46:24] <dogbert2> pfft...I'm old to remember loading BSD 2.9 from 9 track magnetic tape...talk about boot time
[03:46:35] <Rounin> :D
[03:46:52] <johnjaye> i think i tried to find early bsd sources last week but wasn't sure if i found them
[03:47:03] <johnjaye> i looked in the 4.4 or something folder and the files looked funky
[03:47:20] <johnjaye> maybe supposed to load them on floppies lol
[03:47:21] <dogbert2> half the packages retrieved so far
[03:47:22] *** Quits: TonyStone (~TonyStone@2603-7080-8607-c36a-9cdb-69bc-753b-1e50.res6.spectrum.com) (Remote host closed the connection)
[03:47:30] *** Joins: constxd (~brad@142.134.38.68)
[03:50:16] *** Joins: ketiv (~ketiv@92.40.194.81.threembb.co.uk)
[03:53:27] <constxd> ,cc _Bool a = true, b = true; print(a + b);
[03:53:30] <candide> constxd:  Invalid operation on booleans.
[03:53:34] <constxd> bro what
[03:53:50] <constxd> ,cc _Bool a = true, b = true; printf("%d", (int)(a + b));
[03:53:52] <candide> constxd: 2
[03:54:00] * johnjaye imagines only a certain type of mathematician enjoys using + nd * for boolean algebra
[03:54:27] *** Joins: sdfgsdfg (~sdfgsdfg@user/sdfgsdfg)
[03:54:53] <johnjaye> remember, the important lesson to learn from math is to pack as many different facts, requirements, and assumptions into a single symbol as possible. this will make life easier. for some.
[03:55:24] <johnjaye> so you can write "r" and have it imply an entire mathematical body of theory with ease
[03:58:15] *** Quits: euandreh (~euandreh@2804:14c:33:9fe5:58c5:6207:2988:1b06) (Ping timeout: 268 seconds)
[03:58:16] *** Joins: emacspenguin (~emacspeng@2601:18d:4801:1cf0::f43c)
[03:58:19] <omegatron> well, IT people have their acronyms, why shouldn't math people do the same?  =D
[03:58:47] <johnjaye> i guess every field needs a way to prove you're smarter than someone else
[03:59:01] <johnjaye> you don't understand what "r" means? bah, take a course on it1
[03:59:09] *** Joins: pretty_dumm_guy (trottel@gateway/vpn/protonvpn/prettydummguy/x-88029655)
[03:59:11] <emacspenguin> when run this http://ix.io/3Lzp, it outputs <the correct time> | 3. I think I am doing something wrong with reading the file, or printing the data from the file.
[03:59:19] *** Joins: chenqisu1 (~bhca7d@183.217.201.21)
[04:01:17] *** Quits: Wulf (~Wulf@user/wulf) (Ping timeout: 240 seconds)
[04:01:19] *** Quits: koollman (~samson_t@sp1.kooll.org) (Changing host)
[04:01:19] *** Joins: koollman (~samson_t@user/koollman)
[04:01:35] <Rounin> emacspenguin: What's the problem with that then? What would you have liked it to print?
[04:02:12] <emacspenguin> I would like it to print <the correct time> | <value from the battery file>
[04:03:10] <Rounin> emacspenguin: Ah... As far as I can see, you're returning the value of fileno() on the file descriptor, right? Which I think might return the Linux/Unix file descriptor
[04:03:12] <caze> fileno
[04:03:19] *** Joins: Wulf (~Wulf@user/wulf)
[04:03:29] <emacspenguin> oh ty, what should I use instead?
[04:03:42] <Rounin> But to get the contents, you'd have to read them and then convert them from ASCII, using something like fscanf or read + ... atoi?
[04:03:46] *** Joins: Fairy (~Fairy@2001:464a:4992:0:bdfd:8ef1:211a:77dc)
[04:03:54] *** Quits: dogbert2 (~Bill@ip68-105-189-91.lv.lv.cox.net) (Remote host closed the connection)
[04:04:00] *** Quits: coodre (~no@160.178.2.5) (Quit: Leaving)
[04:04:11] *** Joins: dogbert2 (~Bill@ip68-105-189-91.lv.lv.cox.net)
[04:04:52] <Rounin> And then after reading, doing an fclose may also be a good idea, but the OS will do it when the program quits
[04:05:06] <caze> emacspenguin: What does your system documentation say is contained in theat file?
[04:05:38] <emacspenguin> when I cat it out it says 46
[04:05:53] <Rounin> Right... So basically a special file containing some ASCII
[04:05:59] <emacspenguin> yes
[04:06:12] <caze> Find the docs.
[04:06:30] <Rounin> So you'd want to make an int somethingorother; fscanf(&bat_file, "%d", &int) , or something like that... Perhaps the bat_file shouldn't have an & in front
[04:07:06] <Rounin> After all, a file descriptor is sort of an address in itself, so taking the address of the address might not be the correct thing
[04:07:07] *** Quits: adip (~adip@user-188-33-250-10.play-internet.pl) (Ping timeout: 256 seconds)
[04:07:18] <Rounin> But the point is, I'd probably recommend that method
[04:08:19] <Rounin> Oh, and where I sayd &int, it should say &somethingorother, since int is the type and somethingorother is the name
[04:08:50] *** Quits: Richard_Cavell (uid165693@id-165693.ilkley.irccloud.com) (Quit: Connection closed for inactivity)
[04:08:53] <caze> Also you don't need malloc.
[04:09:43] <emacspenguin> ty all
[04:10:14] <Rounin> Np :)
[04:11:38] *** Quits: dithpri (~dithpri@gateway/tor-sasl/dithpri) (Quit: '); DROP TABLE Users;--)
[04:13:57] *** Quits: duuude (~user@user/duuude) (Remote host closed the connection)
[04:14:29] *** Joins: duuude (~user@user/duuude)
[04:16:54] *** Quits: wroathe (~wroathe@user/wroathe) (Ping timeout: 256 seconds)
[04:17:05] <omegatron> emacspenguin: https://bpa.st/7FLA  maybe this helps
[04:17:33] <omegatron> didn't test it, because I don't have a laptop here , but might work
[04:18:06] <omegatron> oh, it's cut off ...
[04:18:28] <omegatron> https://bpa.st/5PAA
[04:18:52] *** Joins: wroathe (~wroathe@206-55-188-8.fttp.usinternet.com)
[04:18:52] *** Quits: wroathe (~wroathe@206-55-188-8.fttp.usinternet.com) (Changing host)
[04:18:52] *** Joins: wroathe (~wroathe@user/wroathe)
[04:20:13] <fizzie> Some nits: it doesn't ensure that `vData` remains a string (has a terminating 0) if the contents of the file exceed 4 characters; the type of the argument for the call to `atoi` is wrong (it takes a `char *`, not a `char (*)[4]`).
[04:21:06] <omegatron> yeah, it's just a template to grasp the general idea/approach
[04:21:35] <omegatron> fine-tuning is left as a practice
[04:23:05] <omegatron> I assumed, the file would have at maximum the digits '100'
[04:23:20] <fizzie> Most likely there's also a newline.
[04:23:30] <omegatron> as soon as they add a '%' ...  -_-
[04:24:29] <omegatron> yeah, in real world context, I would make it at least 64 bytes, in case some day it's a fraction number with '%' (and yes, a NEWLINE)
[04:25:01] <fizzie> Annoyingly, the only thing in /sys/class/power_supply/* on this system (the wireless mouse) doesn't report a precise `capacity`, only an overall `capacity_level`, so I can't be sure. But I think sysfs files generally do include newlines, just to be friendlier to people who cat them.
[04:25:25] *** Quits: Juliu (~Juliu@2a02:810b:c640:3ec0:a98c:b4fd:85b3:2536) (Ping timeout: 240 seconds)
[04:28:05] *** Quits: random-nick (~random-ni@87.116.167.125) (Ping timeout: 256 seconds)
[04:28:30] *** Joins: steve__ (~steve@ool-182c2b80.dyn.optonline.net)
[04:29:11] *** Joins: Figworm (~inoor@user/figworm)
[04:29:48] <Rounin> Ah... That's a thing as well... The open and/or fscanf/read/whatever could both fail
[04:30:10] <Rounin> I guess null checking would take care of that
[04:30:45] <omegatron> that's why I at least captured them in variables - checking them is also left to implement by emacspenguin
[04:30:55] *** Quits: Alhazred (~Alhazred@s91904425.blix.com) (Ping timeout: 256 seconds)
[04:31:07] <Rounin> In the case of fscanf or whatever you're using, I guess it returns a count of bytes read, in which case it'd return less than 1
[04:31:16] <Rounin> Ah
[04:31:27] <omegatron> usually they do something like this, yes
[04:31:50] *** Quits: blindguard (~blindguar@2a02:908:1864:c200::12) (Quit: Konversation terminated!)
[04:33:31] <emacspenguin> omegatron what styleguide does that follow, I like it
[04:33:38] <omegatron> my own
[04:33:39] <fizzie> The *scanf functions return a number of successfully executed conversions excluding suppressed and %n ones (or EOF, in case of a failure before the first conversion).
[04:34:09] <fizzie> Which is a pretty uncommon choice, and not always sufficient for figuring out what happened.
[04:36:54] <Kit> aha my site works now https://kit.osmarks.net/
[04:36:58] <Kit> oops wrong channel
[04:37:00] <Kit> shit
[04:37:18] <Kit> disregard that
[04:39:58] <omegatron> my styleguide is simple:  human-readable code
[04:40:32] <Kit> lol
[04:41:08] <Kit> a lot of people say my styleguide is horrible :P
[04:41:32] <omegatron> no prob, I can teach you: I take 250 Euro / hour
[04:41:52] <Kit> i mean i like my styleguide
[04:41:57] <Kit> its just that others dont
[04:42:28] <johnjaye> clang-format ruthlessly formats your code.
[04:42:32] <omegatron> ah ok, well if you can read your own code after a month or year, then .. who cares about others?
[04:42:54] <Kit> ya
[04:43:18] <Kit> i get why people hate it tho, its.... different
[04:43:28] <omegatron> care to demonstrate?
[04:43:55] <Kit> one of the most prominent things is that i like to do `func (thing)` instead of `func(thing)`
[04:44:31] <Kit> same thing for `array [thing]`
[04:44:49] <johnjaye> sounds like you love to live dangerously
[04:44:55] <johnjaye> a rebel who doesn't play by your rules
[04:45:06] *** Joins: Macuser (~Macuser@2600:1003:b46b:313b:bd36:7bff:69d1:6d4d)
[04:45:09] <Kit> i like to keep things in structs instead of having djksaklfhdsjklhf arguments
[04:45:34] <Kit> i also am `typedef`-happy
[04:45:38] <omegatron> so far, it seems like we two would get along well
[04:46:26] <Kit> no
[04:46:31] <Kit> not at all
[04:47:21] <omegatron> then .. not
[04:47:28] <Kit> lol
[04:48:27] <Kit> id probably go way into detail about my coding style if i didnt stop myself here
[04:48:47] <Kit> so before i steal the convo imma head out
[04:49:04] <johnjaye> fizzie: how many of these C errors are actually useful in practice?
[04:49:09] <omegatron> I could do the same, if I wouldn't actually do some work at two machines right now
[04:49:38] <Kit> im procrastinating working on my computer
[04:49:39] <johnjaye> 38 ENOTSOCK is socket operation on a non-socket.
[04:49:43] <Kit> its tolerable rn
[04:49:54] <Kit> so imma just deal with it
[04:50:31] <Kit> (it is in a somewhat broken state)
[04:51:23] <johnjaye> i'm guessing some 80-20 rule applies here where 20% of these codes come up 80% of the time
[04:51:37] *** Quits: n3rdy1 (~n3rdy1@2600:1700:4570:3480::41) (Ping timeout: 240 seconds)
[04:52:12] <rsjw> and where would you be if you got error messages for only 80% of the errors you make
[04:55:45] *** Quits: rgrinberg (~textual@2806:265:5401:8cd:18b:fa2e:c948:1d68) (Read error: Connection reset by peer)
[04:55:46] *** Quits: Figworm (~inoor@user/figworm) (Quit: Figworm)
[04:57:18] *** Joins: rgrinberg (~textual@2806:265:5401:8cd:18b:fa2e:c948:1d68)
[04:57:39] *** Quits: rgrinberg (~textual@2806:265:5401:8cd:18b:fa2e:c948:1d68) (Client Quit)
[05:04:57] *** Quits: Jong (~Jong@2620:10d:c090:400::5:90fa) (Ping timeout: 240 seconds)
[05:12:11] *** Joins: soapsudsxx (~soapsudsx@141.193.188.151)
[05:12:19] *** Quits: malina (~malina@user/malina) (Remote host closed the connection)
[05:14:08] *** Quits: kurahaupo (~kurahaupo@115.69.27.211) (Ping timeout: 256 seconds)
[05:14:13] *** Quits: emacspenguin (~emacspeng@2601:18d:4801:1cf0::f43c) (Quit: WeeChat 3.4)
[05:15:46] *** Joins: kurahaupo (~kurahaupo@115.69.27.211)
[05:17:13] *** Quits: seninha (~seninha@user/seninha) (Quit: Leaving)
[05:17:54] *** Joins: phrosty (~phrosty@c-73-225-175-19.hsd1.wa.comcast.net)
[05:19:01] *** Joins: seninha (~seninha@user/seninha)
[05:19:46] *** Quits: freep (~freepppp@62.1.174.38.dsl.dyn.forthnet.gr) (Read error: Connection reset by peer)
[05:20:47] *** Quits: kaph (~kaph@net-2-38-107-19.cust.vodafonedsl.it) (Ping timeout: 256 seconds)
[05:21:07] <oldlaptop> johnjaye: It already occurs frequently that there's no code to describe some particular error (or at least that some programmer didn't know about one), and so the computer tells the user something nonsensical and misleading (because it's common to convert those symbolic errors to text and display them to the user).
[05:22:06] *** Quits: sdfgsdfg (~sdfgsdfg@user/sdfgsdfg) (Quit: ZzzZ)
[05:25:31] *** Quits: agonhajdari (~textual@user/agonhajdari) (Quit: My Mac Mini has gone to sleep. ZZZzzz…)
[05:33:47] *** Joins: smallville7123 (~smallvill@cpe-172-193-200-97.qld.foxtel.net.au)
[05:34:12] *** Joins: vysn (~vysn@user/vysn)
[05:35:05] *** Quits: justIrresolute (~justache@user/justache) (Remote host closed the connection)
[05:35:46] *** Joins: justIrresolute (~justache@user/justache)
[05:36:01] *** Joins: TonyStone (~TonyStone@2603-7080-8607-c36a-9cdb-69bc-753b-1e50.res6.spectrum.com)
[05:36:18] *** Quits: seninha (~seninha@user/seninha) (Quit: Leaving)
[05:40:46] *** Quits: steve__ (~steve@ool-182c2b80.dyn.optonline.net) (Ping timeout: 256 seconds)
[05:41:02] *** Quits: TonyStone (~TonyStone@2603-7080-8607-c36a-9cdb-69bc-753b-1e50.res6.spectrum.com) (Remote host closed the connection)
[05:41:25] *** Joins: TonyStone (~TonyStone@2603-7080-8607-c36a-9cdb-69bc-753b-1e50.res6.spectrum.com)
[05:44:01] *** Quits: bebyx (~Thunderbi@user/bebyx) (Ping timeout: 256 seconds)
[05:44:51] *** joev1 is now known as joev
[05:51:08] *** Joins: kaph (~kaph@net-2-38-107-19.cust.vodafonedsl.it)
[05:56:01] *** Joins: saribro (~swinnenb@user/swinnenb)
[05:57:21] *** Joins: trafficjam (~trafficja@119.17.42.59)
[05:58:11] *** Quits: mixfix41 (~homefame@user/mixfix41) (Ping timeout: 256 seconds)
[05:59:17] *** Quits: swinnenb (~swinnenb@user/swinnenb) (Ping timeout: 240 seconds)
[05:59:25] *** Quits: harveypwca (~harveypwc@2601:246:c180:a570:3828:d8:e523:3f67) (Quit: Leaving)
[05:59:51] *** Joins: imp (~imp@192-141-191-227.alternativaip.net.br)
[06:01:04] *** Joins: |darc|- (darc@23-112-65-16.lightspeed.nworla.sbcglobal.net)
[06:01:04] *** Quits: |darc| (~darc@23-112-65-16.lightspeed.nworla.sbcglobal.net) (Killed (NickServ (GHOST command used by |darc|-!darc@23-112-65-16.lightspeed.nworla.sbcglobal.net)))
[06:05:55] *** Joins: geli (~gelignite@55d47b01.access.ecotel.net)
[06:06:13] *** Quits: Fairy (~Fairy@2001:464a:4992:0:bdfd:8ef1:211a:77dc) (Ping timeout: 240 seconds)
[06:06:39] *** Joins: cleverness_ (~Clevernes@pool-108-54-152-186.nycmny.fios.verizon.net)
[06:06:41] *** Quits: cleverness_ (~Clevernes@pool-108-54-152-186.nycmny.fios.verizon.net) (Remote host closed the connection)
[06:07:10] *** Joins: cleverness_ (~Clevernes@pool-108-54-152-186.nycmny.fios.verizon.net)
[06:08:32] *** Quits: magla (~gelignite@55d41183.access.ecotel.net) (Ping timeout: 256 seconds)
[06:09:39] *** Quits: cleverness_ (~Clevernes@pool-108-54-152-186.nycmny.fios.verizon.net) (Client Quit)
[06:09:59] *** Joins: cleverness_ (~Clevernes@pool-108-54-152-186.nycmny.fios.verizon.net)
[06:09:59] *** Quits: cleverness_ (~Clevernes@pool-108-54-152-186.nycmny.fios.verizon.net) (Client Quit)
[06:11:21] *** Joins: mug3n_ (~mugen@gateway/tor-sasl/mugen)
[06:13:01] *** Quits: manjaroi3 (~manjaro-i@125.131.131.26) (Ping timeout: 240 seconds)
[06:14:24] *** Quits: mug3n (~mugen@gateway/tor-sasl/mugen) (Ping timeout: 276 seconds)
[06:14:35] *** Joins: Jong (~Jong@2620:10d:c090:400::5:2d57)
[06:16:17] *** Joins: mixfix41 (~homefame@user/mixfix41)
[06:22:30] *** Joins: kurahaupo1 (~martin@115.69.27.211)
[06:23:32] <constxd> kings
[06:25:12] *** Quits: TonyStone (~TonyStone@2603-7080-8607-c36a-9cdb-69bc-753b-1e50.res6.spectrum.com) (Quit: Leaving)
[06:26:31] *** Joins: TonyStone (~TonyStone@2603-7080-8607-c36a-9cdb-69bc-753b-1e50.res6.spectrum.com)
[06:27:25] *** Quits: zwr (~zwr@2804:d45:b966:fb00:7298:34ad:5290:1c7e) (Ping timeout: 240 seconds)
[06:27:35] *** Joins: |darc| (darc@23-112-65-16.lightspeed.nworla.sbcglobal.net)
[06:28:24] *** Joins: zwr (~zwr@2804:d45:b966:fb00:2bd0:5e5e:ca40:5981)
[06:28:37] *** Quits: |darc|- (darc@23-112-65-16.lightspeed.nworla.sbcglobal.net) (Ping timeout: 240 seconds)
[06:29:59] *** Joins: user1 (~user1@194-96-117-118.adsl.highway.telekom.at)
[06:31:06] *** Joins: rgrinberg (~textual@177.246.217.138)
[06:31:31] *** Joins: neshpion (~neshpion@gateway/tor-sasl/neshpion)
[06:34:10] *** Joins: kitsunenokenja (~kitsunech@68.91.220.96)
[06:34:27] *** Quits: banc (banc@gateway/vpn/airvpn/banc) (Ping timeout: 256 seconds)
[06:35:05] *** Quits: justIrresolute (~justache@user/justache) (Remote host closed the connection)
[06:35:45] *** Joins: justIrresolute (~justache@user/justache)
[06:36:45] *** Joins: danielcamiel (~danielcam@user/danielcamiel)
[06:36:55] *** Quits: danielcamiel (~danielcam@user/danielcamiel) (Remote host closed the connection)
[06:37:18] *** Joins: danielcamiel (~danielcam@user/danielcamiel)
[06:37:23] *** Joins: |darc|- (darc@23-112-65-16.lightspeed.nworla.sbcglobal.net)
[06:37:23] *** Quits: |darc| (darc@23-112-65-16.lightspeed.nworla.sbcglobal.net) (Killed (NickServ (GHOST command used by |darc|-)))
[06:39:39] *** Joins: floatcomplex (~floatcomp@wireguard/tunneler/floatcomplex)
[06:40:32] *** Joins: sonny (~sonny@bras-base-london1483w-grc-32-70-52-175-166.dsl.bell.ca)
[06:41:31] *** Joins: Windshield (~Windshiel@120.20.68.236)
[06:46:13] *** Quits: dsrt^ (~dsrt@wsip-98-188-246-242.mc.at.cox.net) (Ping timeout: 240 seconds)
[06:46:24] *** Quits: penguino (~mrpenguin@user/mrpenguin) (Remote host closed the connection)
[06:46:48] *** Joins: penguino (~mrpenguin@user/mrpenguin)
[06:49:10] *** Joins: nuxil_ (~nuxil@141.195.51.213)
[06:49:22] *** Quits: pulse (~pulse@user/pulse) (Quit: Join a gamedev community @ https://indiedevs.net/)
[06:51:07] *** Joins: _nuxil_ (~nuxil@141.195.51.213)
[06:51:22] *** Quits: smallville7123 (~smallvill@cpe-172-193-200-97.qld.foxtel.net.au) (Read error: Connection reset by peer)
[06:51:48] *** Parts: _nuxil_ (~nuxil@141.195.51.213) ()
[06:52:38] *** Quits: cosimone (~user@2001:b07:ae5:db26:c24a:d20:4d91:1e20) (Remote host closed the connection)
[06:52:51] *** Joins: cosimone (~user@2001:b07:ae5:db26:c24a:d20:4d91:1e20)
[06:53:01] *** Quits: nuxil (~nuxil@141.195.51.213) (Ping timeout: 240 seconds)
[06:53:25] *** Quits: nuxil_ (~nuxil@141.195.51.213) (Ping timeout: 240 seconds)
[06:54:24] *** Joins: banc (banc@gateway/vpn/airvpn/banc)
[06:54:42] *** Joins: smallville7123 (~smallvill@cpe-172-193-200-97.qld.foxtel.net.au)
[06:55:48] *** Joins: fe23 (~fe23@2409:8a34:464:4990:7c68:8699:3484:486e)
[06:56:49] *** Quits: plastico (~plastico@neomutt/plastico) (Quit: WeeChat 3.4)
[06:57:07] *** Quits: shailangsa (~shailangs@host86-162-150-202.range86-162.btcentralplus.com) (Ping timeout: 256 seconds)
[06:58:57] *** Quits: p0g0 (~p0g0@216.211.153.38) (Remote host closed the connection)
[06:59:17] *** Joins: p0g0 (~p0g0@216.211.153.38)
[07:00:50] *** Joins: spidermonkey54 (uid527699@id-527699.uxbridge.irccloud.com)
[07:09:15] *** Joins: FlipFlop (~FlipFlop@user/fl1pfl0p)
[07:11:36] *** Joins: sdfgsdfg (~sdfgsdfg@user/sdfgsdfg)
[07:13:29] *** Quits: FluffyMask (~masque@user/fluffymask) (Quit: WeeChat 3.4)
[07:15:49] *** Quits: wenxin (~wenxin@user/vim-fans/x-3284168) (Ping timeout: 240 seconds)
[07:19:39] *** Quits: sonny (~sonny@bras-base-london1483w-grc-32-70-52-175-166.dsl.bell.ca) (Remote host closed the connection)
[07:21:01] *** Joins: wenxin (~wenxin@user/vim-fans/x-3284168)
[07:23:07] *** Joins: shailangsa (~shailangs@host86-185-98-37.range86-185.btcentralplus.com)
[07:23:40] *** Quits: smallville7123 (~smallvill@cpe-172-193-200-97.qld.foxtel.net.au) (Remote host closed the connection)
[07:24:07] *** Quits: Macuser (~Macuser@2600:1003:b46b:313b:bd36:7bff:69d1:6d4d) (Quit: Textual IRC Client: www.textualapp.com)
[07:26:26] *** Joins: cuppajoe (~joe@ip70-171-93-122.no.no.cox.net)
[07:31:19] *** Quits: skapata (~Skapata@user/skapata) (Remote host closed the connection)
[07:31:39] *** Joins: smallville7123 (~smallvill@cpe-172-193-200-97.qld.foxtel.net.au)
[07:35:05] *** Quits: justIrresolute (~justache@user/justache) (Remote host closed the connection)
[07:35:44] *** Joins: justIrresolute (~justache@user/justache)
[07:36:01] *** Quits: supakeen (~user@python/site-packages/supakeen) (Quit: WeeChat 3.4)
[07:36:31] *** Joins: supakeen (~user@python/site-packages/supakeen)
[07:38:43] *** Quits: cuppajoe (~joe@ip70-171-93-122.no.no.cox.net) (Quit: WeeChat 3.4)
[07:40:31] *** Quits: mrgz (~mrgz@201-42-0-191.dsl.telesp.net.br) (Quit: leaving)
[07:42:02] *** Joins: sonny (~sonny@bras-base-london1483w-grc-32-70-52-175-166.dsl.bell.ca)
[07:43:24] *** Quits: acerbic (~acerbic@cs-xdata-50-86-53-211.cspire.com) (Read error: Connection reset by peer)
[07:43:35] *** Joins: sweetsymph (uid509475@id-509475.lymington.irccloud.com)
[07:45:42] *** Joins: Juliu (~Juliu@2a02:810b:c640:3ec0:a98c:b4fd:85b3:2536)
[07:46:34] *** Quits: danielcamiel (~danielcam@user/danielcamiel) (Ping timeout: 256 seconds)
[07:50:13] *** Joins: Jeaton (~hybrid@user/Jeaton)
[07:52:03] *** Quits: EdFletcher (~PKD@user/edfletcher) (Quit: Quit.)
[07:52:31] *** Quits: chair1 (~chair1@177.23.12.223) (Remote host closed the connection)
[07:52:36] *** Quits: geli (~gelignite@55d47b01.access.ecotel.net) (Quit: Stay safe!)
[07:53:34] *** Joins: EdFletcher (~PKD@user/edfletcher)
[07:56:42] *** Joins: aetnaeus (~qpls@cpeb4750e67d202-cmf81d0fad5840.cpe.net.fido.ca)
[07:57:01] *** Quits: kurahaupo (~kurahaupo@115.69.27.211) (Ping timeout: 240 seconds)
[07:57:12] *** Quits: floatcomplex (~floatcomp@wireguard/tunneler/floatcomplex) (Quit: leaving)
[07:59:11] *** Quits: cpuid (~cpuid@user/cpuid) (Quit: ZNC 1.8.2 - https://znc.in)
[07:59:46] *** Joins: floatcomplex (~floatcomp@wireguard/tunneler/floatcomplex)
[08:00:04] *** Joins: cpuid (~cpuid@co5.at)
[08:00:05] *** Quits: cpuid (~cpuid@co5.at) (Changing host)
[08:00:05] *** Joins: cpuid (~cpuid@user/cpuid)
[08:00:43] *** Joins: kurahaupo (~kurahaupo@115.69.27.211)
[08:01:35] *** Joins: acerbic (~acerbic@cs-xdata-50-86-53-211.cspire.com)
[08:03:57] *** Joins: Fairy (~Fairy@2001:464a:4992:0:bdfd:8ef1:211a:77dc)
[08:04:20] *** Joins: eelstrebor (~eelstrebo@198-178-29-136.scb.ne.static.allophone.net)
[08:06:40] *** Quits: smallville7123 (~smallvill@cpe-172-193-200-97.qld.foxtel.net.au) (Remote host closed the connection)
[08:07:14] *** Quits: Xgc (~Xgc@user/xgc) (Read error: Connection reset by peer)
[08:09:34] *** Joins: gco (~gco@2601:647:4c80:2424:2c7d:efc8:91bf:8d0d)
[08:11:30] *** Quits: eelstrebor (~eelstrebo@198-178-29-136.scb.ne.static.allophone.net) (Ping timeout: 256 seconds)
[08:13:07] *** Quits: duuude (~user@user/duuude) (Remote host closed the connection)
[08:14:53] *** Joins: jiehuan (~jiehuan@39.190.192.100)
[08:24:32] *** Quits: ioxzev1z (~ioxzev1z@user/ioxzev1z) (Quit: Leaving)
[08:24:57] *** Quits: constxd (~brad@142.134.38.68) (Ping timeout: 256 seconds)
[08:26:07] *** Parts: sonny (~sonny@bras-base-london1483w-grc-32-70-52-175-166.dsl.bell.ca) ()
[08:26:16] *** Joins: eelstrebor (~eelstrebo@198-178-29-136.scb.ne.static.allophone.net)
[08:27:40] *** Joins: unixpro1970|2 (~kvirc@c-73-181-185-205.hsd1.wa.comcast.net)
[08:28:53] *** Joins: sebbu2 (~sebbu@user/sebbu)
[08:29:13] *** Quits: rgrinberg (~textual@177.246.217.138) (Read error: Connection reset by peer)
[08:29:34] *** Joins: dsrt^ (~dsrt@wsip-98-188-246-242.mc.at.cox.net)
[08:30:58] *** Joins: rgrinberg (~textual@2806:265:5401:8cd:18b:fa2e:c948:1d68)
[08:31:00] *** Parts: user1 (~user1@194-96-117-118.adsl.highway.telekom.at) (Leaving)
[08:31:27] *** Quits: sebbu (~sebbu@user/sebbu) (Ping timeout: 268 seconds)
[08:35:05] *** Quits: justIrresolute (~justache@user/justache) (Remote host closed the connection)
[08:35:09] *** Joins: dave0 (~davezero@069.d.003.ncl.iprimus.net.au)
[08:35:44] *** Joins: justIrresolute (~justache@user/justache)
[08:38:03] *** Joins: Inst (~delicacie@c-98-208-218-119.hsd1.fl.comcast.net)
[08:38:09] *** Joins: unixpro1970|3 (~unixpro19@c-73-181-185-205.hsd1.wa.comcast.net)
[08:38:44] *** Quits: JanC (~janc@user/janc) (Remote host closed the connection)
[08:38:52] *** Parts: unixpro1970|2 (~kvirc@c-73-181-185-205.hsd1.wa.comcast.net) (No boundaries on the net!)
[08:38:57] *** Joins: JanC (~janc@user/janc)
[08:39:25] *** Quits: kurahaupo (~kurahaupo@115.69.27.211) (Ping timeout: 240 seconds)
[08:41:00] *** Quits: unixpro1970|3 (~unixpro19@c-73-181-185-205.hsd1.wa.comcast.net) (Client Quit)
[08:41:20] *** Quits: unixpro1970 (~unixpro19@c-73-181-185-205.hsd1.wa.comcast.net) (Quit: Leaving)
[08:41:51] *** Joins: unixpro1970 (~unixpro19@c-73-181-185-205.hsd1.wa.comcast.net)
[08:42:56] *** Joins: crankslider (~slidercra@user/slidercrank)
[08:48:50] *** Joins: pingpongball (~pingpongb@43.228.192.110)
[08:49:42] *** crankslider is now known as slidercrank
[08:49:54] *** Quits: trafficjam (~trafficja@119.17.42.59) (Ping timeout: 256 seconds)
[08:50:53] *** Quits: karakedi (~eAC53C340@user/karakedi) (Remote host closed the connection)
[08:51:12] *** Quits: sdfgsdfg (~sdfgsdfg@user/sdfgsdfg) (Read error: Connection reset by peer)
[08:51:56] *** Parts: sweetsymph (uid509475@id-509475.lymington.irccloud.com) ()
[08:52:51] *** Joins: sdfgsdfg (~sdfgsdfg@user/sdfgsdfg)
[08:54:23] *** Quits: Jeaton (~hybrid@user/Jeaton) (Quit: Leaving)
[08:55:50] *** Joins: frost (~frost@user/frost)
[08:56:16] *** Quits: wroathe (~wroathe@user/wroathe) (Ping timeout: 256 seconds)
[08:57:05] *** Joins: anakimluke (~anakimluk@186.221.0.122)
[08:58:03] *** Joins: j-james (~apropos@97-113-119-73.tukw.qwest.net)
[09:01:22] *** Quits: sdfgsdfg (~sdfgsdfg@user/sdfgsdfg) (Ping timeout: 256 seconds)
[09:01:32] *** Joins: kurahaupo (~kurahaupo@115.69.27.211)
[09:02:13] *** Quits: pingpongball (~pingpongb@43.228.192.110) (Quit: Client closed)
[09:03:24] *** Joins: Solenya (~Office@bras-base-toroon4215w-grc-52-174-88-123-200.dsl.bell.ca)
[09:04:21] *** Joins: wroathe (~wroathe@206-55-188-8.fttp.usinternet.com)
[09:04:21] *** Quits: wroathe (~wroathe@206-55-188-8.fttp.usinternet.com) (Changing host)
[09:04:21] *** Joins: wroathe (~wroathe@user/wroathe)
[09:04:24] *** Joins: karakedi (~eAC53C340@user/karakedi)
[09:04:57] *** Parts: Solenya (~Office@bras-base-toroon4215w-grc-52-174-88-123-200.dsl.bell.ca) ()
[09:09:18] *** Quits: wroathe (~wroathe@user/wroathe) (Ping timeout: 256 seconds)
[09:09:55] *** Joins: sdfgsdfg (~sdfgsdfg@user/sdfgsdfg)
[09:11:51] *** Quits: rgrinberg (~textual@2806:265:5401:8cd:18b:fa2e:c948:1d68) (Quit: My MacBook has gone to sleep. ZZZzzz…)
[09:14:09] *** Quits: rsjw (~quassel@user/rsjw) (Quit: rsjw)
[09:14:39] *** Quits: eelstrebor (~eelstrebo@198-178-29-136.scb.ne.static.allophone.net) (Remote host closed the connection)
[09:15:15] *** Quits: frost (~frost@user/frost) (Quit: Connection closed)
[09:16:07] *** Quits: spidermonkey54 (uid527699@id-527699.uxbridge.irccloud.com) ()
[09:17:21] *** Joins: trafficjam (~trafficja@119.17.42.59)
[09:20:04] *** Quits: trafficjam (~trafficja@119.17.42.59) (Client Quit)
[09:21:49] *** Joins: whatsupdoc (uid509081@id-509081.hampstead.irccloud.com)
[09:23:47] *** Quits: Zambyte (~Zambyte@cpe-104-228-60-14.nycap.res.rr.com) (Quit: leaving)
[09:25:57] *** Quits: BSaboia (~bsaboia@177.37.198.83) (Quit: This computer has gone to sleep)
[09:26:30] *** Joins: frost (~frost@user/frost)
[09:26:32] <dave0> if the length of your string was > UCHAR_MAX there would have to be a duplicate character
[09:28:32] *** Quits: defjam (~eb0t@90.198.61.46) (Ping timeout: 240 seconds)
[09:30:47] *** Joins: defjam (~eb0t@90.203.120.248)
[09:31:50] *** Quits: anakimluke (~anakimluk@186.221.0.122) (Quit: anakimluke)
[09:34:16] *** Joins: rgrinberg (~textual@177.246.217.138)
[09:35:21] *** Quits: gco (~gco@2601:647:4c80:2424:2c7d:efc8:91bf:8d0d) (Quit: ZZZzzz…)
[09:35:23] *** Joins: aerysh_ (~aerysh@94.198.43.62)
[09:41:25] *** Quits: EdFletcher (~PKD@user/edfletcher) (Quit: Quit.)
[09:44:35] *** Joins: EdFletcher (~PKD@user/edfletcher)
[09:49:13] *** Quits: tbcr (~tbcr@107.13.189.161) (Quit: ZNC 1.8.2 - https://znc.in)
[09:49:22] *** Joins: BSaboia (~bsaboia@177.37.198.83)
[09:49:25] *** Quits: kitsunenokenja (~kitsunech@68.91.220.96) (Ping timeout: 240 seconds)
[09:53:19] *** Joins: kenanmarasli (~kenanmara@user/kenanmarasli)
[09:54:00] *** Joins: steve__ (~steve@ool-182c2b80.dyn.optonline.net)
[09:54:08] *** Quits: echoSMILE (uid504326@user/echosmile) (Quit: de facto)
[09:55:12] *** Joins: tbcr (~tbcr@107.13.189.161)
[09:55:28] *** Quits: rgrinberg (~textual@177.246.217.138) (Quit: My MacBook has gone to sleep. ZZZzzz…)
[09:56:24] *** Joins: Atque (~Atque@user/atque)
[09:56:58] *** Quits: tbcr (~tbcr@107.13.189.161) (Client Quit)
[09:59:56] *** Joins: tbcr (~tbcr@107.13.189.161)
[10:01:38] *** Joins: rgrinberg (~textual@177.246.219.153)
[10:03:03] *** Quits: sdfgsdfg (~sdfgsdfg@user/sdfgsdfg) (Read error: Connection reset by peer)
[10:03:43] *** Joins: pucara (~i@host230.186-125-94.telecom.net.ar)
[10:05:32] *** Joins: teut (~teut@2401:4900:1c68:6b85:a055:f956:ced4:e0d4)
[10:06:37] *** Quits: Fairy (~Fairy@2001:464a:4992:0:bdfd:8ef1:211a:77dc) (Ping timeout: 240 seconds)
[10:15:16] *** Joins: sdfgsdfg (~sdfgsdfg@user/sdfgsdfg)
[10:15:56] *** Joins: badsektor (~badsektor@user/badsektor)
[10:16:22] *** Joins: FH_thecat (~FH_thecat@75.11.25.212.ftth.as8758.net)
[10:19:58] *** Quits: neshpion (~neshpion@gateway/tor-sasl/neshpion) (Quit: neshpion)
[10:20:11] *** Quits: FH_thecat (~FH_thecat@75.11.25.212.ftth.as8758.net) (Client Quit)
[10:20:36] *** Joins: FH_thecat (~FH_thecat@75.11.25.212.ftth.as8758.net)
[10:21:32] *** Quits: rgrinberg (~textual@177.246.219.153) (Quit: My MacBook has gone to sleep. ZZZzzz…)
[10:23:26] *** Quits: Satin (uid193953@user/Seten) (Quit: Connection closed for inactivity)
[10:25:18] *** Joins: the_lanetly_052_ (~the_lanet@185.30.88.43)
[10:26:56] *** Quits: kurahaupo (~kurahaupo@115.69.27.211) (Ping timeout: 256 seconds)
[10:27:34] *** Quits: BSaboia (~bsaboia@177.37.198.83) (Quit: This computer has gone to sleep)
[10:28:29] *** Quits: phrosty (~phrosty@c-73-225-175-19.hsd1.wa.comcast.net) (Ping timeout: 256 seconds)
[10:35:47] *** Joins: BSaboia (~bsaboia@177.37.198.83)
[10:35:49] *** Joins: malloy (~jimery@120.229.34.78)
[10:36:21] *** Joins: LordJohn (~lordjohn@l37-192-203-250.novotelecom.ru)
[10:39:30] *** Quits: nitrix (~nitrix@user/nitrix) (Quit: ZNC 1.8.2 - https://znc.in)
[10:43:08] *** Joins: nitrix (~nitrix@user/nitrix)
[10:43:42] *** Quits: Betal (~Betal@user/betal) (Quit: WeeChat 3.4)
[10:45:55] *** Joins: rgrinberg (~textual@2806:265:5401:8cd:18b:fa2e:c948:1d68)
[10:48:17] *** Quits: j-james (~apropos@97-113-119-73.tukw.qwest.net) (Ping timeout: 240 seconds)
[10:49:49] *** Quits: Thedarkb (~Thedarkb@cpc84095-pool16-2-0-cust190.15-1.cable.virginm.net) (Ping timeout: 240 seconds)
[10:50:23] *** Joins: Thedarkb (~Thedarkb@cpc84095-pool16-2-0-cust190.15-1.cable.virginm.net)
[10:55:42] *** Quits: EdFletcher (~PKD@user/edfletcher) (Quit: Quit.)
[10:57:46] *** Joins: EdFletcher (~PKD@user/edfletcher)
[10:58:57] *** Quits: Rounin (~david@84.212.130.215) (Ping timeout: 240 seconds)
[11:02:56] *** Quits: katsuragi (katsuragi@tilde.institute) (Remote host closed the connection)
[11:03:15] *** Joins: katsuragi (katsuragi@tilde.institute)
[11:09:00] *** Joins: danielcamiel (~danielcam@user/danielcamiel)
[11:12:16] *** Quits: Inst (~delicacie@c-98-208-218-119.hsd1.fl.comcast.net) (Ping timeout: 256 seconds)
[11:12:51] *** Quits: aerysh_ (~aerysh@94.198.43.62) (Quit: Konversation terminated!)
[11:14:11] *** Joins: xmyst (~xmyst@ip5f5ac363.dynamic.kabel-deutschland.de)
[11:14:15] *** Quits: pretty_dumm_guy (trottel@gateway/vpn/protonvpn/prettydummguy/x-88029655) (Quit: WeeChat 3.4)
[11:14:41] *** Quits: BSaboia (~bsaboia@177.37.198.83) (Quit: This computer has gone to sleep)
[11:19:25] *** Quits: wenxin (~wenxin@user/vim-fans/x-3284168) (Ping timeout: 240 seconds)
[11:20:12] *** Joins: wenxin (~wenxin@user/vim-fans/x-3284168)
[11:23:27] *** Quits: ketiv (~ketiv@92.40.194.81.threembb.co.uk) (Ping timeout: 256 seconds)
[11:23:42] *** Joins: Inst (~delicacie@c-98-208-218-119.hsd1.fl.comcast.net)
[11:23:58] *** Quits: Inst (~delicacie@c-98-208-218-119.hsd1.fl.comcast.net) (Read error: Connection reset by peer)
[11:27:25] *** Quits: danielcamiel (~danielcam@user/danielcamiel) (Ping timeout: 256 seconds)
[11:27:54] *** Quits: Hexmind (~Hexmind@modemcable049.25-131-66.mc.videotron.ca) (Quit: Leaving)
[11:29:42] *** Quits: Atque (~Atque@user/atque) (Quit: ...)
[11:29:50] *** Joins: Olfodr (sid535265@user/Olfodr)
[11:31:21] *** Quits: fbiagent_ (~fbiagent@user/fbiagent) (Remote host closed the connection)
[11:32:03] *** Joins: fbiagent_ (~fbiagent@user/fbiagent)
[11:37:37] *** Quits: teut (~teut@2401:4900:1c68:6b85:a055:f956:ced4:e0d4) (Quit: Client closed)
[11:40:46] *** Joins: aradesh (~aradesh@user/aradesh)
[11:41:59] *** Quits: wenxin (~wenxin@user/vim-fans/x-3284168) (Ping timeout: 268 seconds)
[11:42:04] *** Quits: penguino (~mrpenguin@user/mrpenguin) (Remote host closed the connection)
[11:43:17] *** Quits: mahmutov (~mahmutov@5.176.49.198) (Ping timeout: 256 seconds)
[11:56:18] *** Joins: Atque (~Atque@user/atque)
[11:57:40] *** kurahaupo1 is now known as kurahaupo
[11:57:45] *** Joins: meator (~meator@user/meator)
[11:59:25] *** Joins: kurahaupo_ (~kurahaupo@pa49-182-47-103.pa.qld.optusnet.com.au)
[12:02:48] <kurahaupo> dave0: that's a good point, if you can prove that there's a duplicate without looking at the data, you don't need to search for one.
[12:02:53] *** Quits: xmyst (~xmyst@ip5f5ac363.dynamic.kabel-deutschland.de) (Quit: Connection closed)
[12:03:31] *** Joins: freep (~freepppp@62.1.174.38.dsl.dyn.forthnet.gr)
[12:03:49] *** Joins: Fairy (~Fairy@2001:464a:4992:0:bdfd:8ef1:211a:77dc)
[12:04:19] *** Joins: j-james (~apropos@97-113-119-73.tukw.qwest.net)
[12:07:35] *** Quits: j-james (~apropos@97-113-119-73.tukw.qwest.net) (Client Quit)
[12:16:39] *** Joins: ketiv (~ketiv@92.40.194.8.threembb.co.uk)
[12:17:43] *** Joins: kts (~kts@103.73.237.193)
[12:18:47] *** Quits: rgrinberg (~textual@2806:265:5401:8cd:18b:fa2e:c948:1d68) (Quit: My MacBook has gone to sleep. ZZZzzz…)
[12:18:48] *** Quits: kts (~kts@103.73.237.193) (Client Quit)
[12:22:56] *** Quits: sdfgsdfg (~sdfgsdfg@user/sdfgsdfg) (Quit: ZzzZ)
[12:25:01] *** Quits: caze (~caze@user/caze) (Ping timeout: 250 seconds)
[12:26:11] *** Joins: caze (~caze@user/caze)
[12:29:45] <meator> Hello. Why isn't -fshort-enums turned on by default in gcc? Does this option have any drawbacks?
[12:30:48] <sham1> It's technically off-standard
[12:31:37] <sham1> ,c11 6.4.4.3p2
[12:31:38] <candide> http://www.iso-9899.info/n1570.html#6.4.4.3p2 [Enumeration constants] An identifier declared as an enumeration constant has type int. Forward references: enumeration specifiers (6.7.2.2).
[12:32:05] <meator> Ok. Thanks!
[12:32:17] <sham1> Yeah, and for example with -fshort-enums something like `enum foo { A, B, };` might just be a char
[12:35:05] *** Quits: justIrresolute (~justache@user/justache) (Remote host closed the connection)
[12:35:45] *** Joins: justIrresolute (~justache@user/justache)
[12:35:54] <dave0> enum's are real nice i like them, but i don't think i've ever made a variable like   enum tag var;
[12:36:11] <dave0> oh maybe as a function argument
[12:36:18] <mcf> i don't think it's off-standard. even with -fshort-enums, A and B have type int. it's only the type enum foo that changes
[12:36:28] <dave0> i tend to use them in switch's
[12:37:23] <mcf> C allows the implementation to choose any signed or unsigned integer type that can represent all the enum's values
[12:37:34] *** Joins: ___nick___ (~quassel@cpc68286-cdif17-2-0-cust533.5-1.cable.virginm.net)
[12:39:01] *** Joins: adip (~adip@user-188-33-250-10.play-internet.pl)
[12:40:31] *** Joins: gendaigo (~gendaigo@27.5.150.167)
[12:40:51] *** Joins: sdfgsdfg (~sdfgsdfg@user/sdfgsdfg)
[12:42:47] *** Quits: NEYi (~NEYi@109.251.216.38) (Ping timeout: 256 seconds)
[12:43:38] *** Quits: gendaigo (~gendaigo@27.5.150.167) (Client Quit)
[12:44:13] *** Joins: gendaigo (~gendaigo@27.5.150.167)
[12:44:25] *** Joins: jjido (~Denis@2a02:c7f:5c91:e700:d101:a511:5b6b:4afc)
[12:45:19] *** Quits: gr33n7007h (~gr33n7007@user/gr33n7007h) (Quit: WeeChat 3.4)
[12:53:40] *** Quits: Juliu (~Juliu@2a02:810b:c640:3ec0:a98c:b4fd:85b3:2536) (Quit: Quit)
[12:53:50] *** Quits: gendaigo (~gendaigo@27.5.150.167) (Quit: WeeChat 3.3)
[12:53:58] *** Joins: gendaigo (~Sidhartha@27.5.150.167)
[12:54:29] *** Quits: gendaigo (~Sidhartha@27.5.150.167) (Client Quit)
[12:54:37] *** Joins: Sidharthan (~Sidhartha@27.5.150.167)
[13:05:15] *** Quits: dogbert2 (~Bill@ip68-105-189-91.lv.lv.cox.net) (Remote host closed the connection)
[13:05:28] *** Joins: dan_pena (~dan_pena@112.252.130.77.rev.sfr.net)
[13:05:30] *** Joins: trafficjam (~qubes@119.17.42.59)
[13:05:32] *** Joins: dogbert2 (~Bill@ip68-105-189-91.lv.lv.cox.net)
[13:06:22] *** Parts: trafficjam (~qubes@119.17.42.59) ()
[13:06:34] *** Joins: trafficjam (~qubes@119.17.42.59)
[13:08:23] *** Joins: eht-the-second (~eht@user/eht)
[13:09:57] *** Quits: eht (~eht@user/eht) (Ping timeout: 240 seconds)
[13:19:02] *** Joins: manjaroi3 (~manjaro-i@125.131.131.26)
[13:20:36] *** Joins: kadavul (~vazha@117.202.125.187)
[13:21:19] *** Quits: ketiv (~ketiv@92.40.194.8.threembb.co.uk) (Ping timeout: 256 seconds)
[13:23:03] *** Joins: ketiv (~ketiv@92.40.194.5.threembb.co.uk)
[13:23:24] *** Quits: shailangsa (~shailangs@host86-185-98-37.range86-185.btcentralplus.com) ()
[13:24:39] *** Joins: LucaTM (~LucaTM@user/lucatm)
[13:29:33] *** Quits: badsektor (~badsektor@user/badsektor) (Remote host closed the connection)
[13:31:00] *** Quits: hanzo (uid532183@user/hanzo) (Quit: Connection closed for inactivity)
[13:37:32] *** Quits: kadavul (~vazha@117.202.125.187) (Quit: Leaving)
[13:42:28] *** Joins: rito_ (~rito_gh@45.112.243.206)
[13:42:44] *** Quits: FH_thecat (~FH_thecat@75.11.25.212.ftth.as8758.net) (Quit: Leaving)
[13:46:10] *** Quits: pucara (~i@host230.186-125-94.telecom.net.ar) (Quit: Lost terminal)
[13:46:50] *** Joins: shailangsa (~shailangs@host86-185-98-37.range86-185.btcentralplus.com)
[13:51:19] *** Quits: pnbeast (~pnbeast@2601:140:4280:6ce0::1) (Quit: WeeChat 2.7.1)
[13:57:14] *** Joins: Alhazred (~Alhazred@athedsl-4387600.home.otenet.gr)
[13:58:18] *** Quits: frost (~frost@user/frost) (Ping timeout: 256 seconds)
[14:01:54] *** Joins: Satin (uid193953@user/Seten)
[14:04:47] *** Joins: Lord_of_Life_ (~Lord@user/lord-of-life/x-2819915)
[14:05:06] *** Quits: freakazoid333 (~matt@2603:9000:cf03:86c3:11c4:68db:ad36:c833) (Read error: Connection reset by peer)
[14:05:47] *** Joins: freakazoid333 (~matt@2603-9000-cf03-86c3-11c4-68db-ad36-c833.inf6.spectrum.com)
[14:06:13] *** Quits: Fairy (~Fairy@2001:464a:4992:0:bdfd:8ef1:211a:77dc) (Ping timeout: 240 seconds)
[14:06:14] *** Quits: Lord_of_Life (~Lord@user/lord-of-life/x-2819915) (Ping timeout: 256 seconds)
[14:06:53] *** Joins: ircs (~ircs@2-111-85-72-cable.dk.customer.tdc.net)
[14:07:33] *** Lord_of_Life_ is now known as Lord_of_Life
[14:12:46] *** Joins: mahmutov (~mahmutov@5.176.49.198)
[14:15:50] *** Joins: agonhajdari (~textual@user/agonhajdari)
[14:15:52] *** Joins: plastico (~plastico@neomutt/plastico)
[14:18:00] *** Quits: Atque (~Atque@user/atque) (Ping timeout: 276 seconds)
[14:21:42] *** Joins: tradar (~tradar@user/tradar)
[14:21:51] *** Joins: WAR10CK (~WAR10CK@14.223.181.231)
[14:22:20] *** Quits: ircs (~ircs@2-111-85-72-cable.dk.customer.tdc.net) (Read error: Connection reset by peer)
[14:29:35] *** Quits: tradar (~tradar@user/tradar) (Quit: tradar)
[14:30:13] *** Quits: csrf (~csrf@user/csrf) (Quit: ZNC 1.7.2+deb3 - https://znc.in)
[14:30:31] *** Quits: soul-d (~uknown@user/soul-d) (Read error: Connection reset by peer)
[14:30:37] *** Joins: the_lanetly_052 (~the_lanet@185.30.88.55)
[14:30:58] *** Joins: csrf (~csrf@user/csrf)
[14:31:49] *** Quits: dsrt^ (~dsrt@wsip-98-188-246-242.mc.at.cox.net) (Ping timeout: 240 seconds)
[14:32:18] *** Quits: the_lanetly_052_ (~the_lanet@185.30.88.43) (Ping timeout: 256 seconds)
[14:32:34] *** Joins: dsrt^ (~dsrt@wsip-98-188-246-242.mc.at.cox.net)
[14:33:14] *** Quits: rindolf (~shlomif@inkscape/dev/shlomif) (Read error: Connection reset by peer)
[14:33:36] *** Joins: rindolf (~shlomif@inkscape/dev/shlomif)
[14:35:54] *** Quits: inomoz (~inomoz@176.59.115.245) (Remote host closed the connection)
[14:37:30] *** Joins: random-nick (~random-ni@87.116.167.125)
[14:44:05] *** Joins: badsektor (~badsektor@user/badsektor)
[14:45:08] <fizzie> It's not violating the C standard, but it does violate platform ABI standards.
[14:45:18] *** Quits: jjido (~Denis@2a02:c7f:5c91:e700:d101:a511:5b6b:4afc) (Quit: My MacBook Air has gone to sleep. ZZZzzz…)
[14:45:57] <fizzie> And along those lines, it's got the binary compatibility drawback that adding new values to the enumeration can change the size of the type.
[14:48:50] *** Quits: ChoHag_ (~mking@81.187.183.71) (Ping timeout: 260 seconds)
[14:49:18] *** Quits: Whatshisface (~jon@user/Whatshisface) (Quit: BitchX-1.3-git -- just do it.)
[14:49:42] *** Joins: ChoHag (~mking@81.187.183.71)
[14:50:08] *** Joins: smallville7123 (~smallvill@cpe-172-193-200-97.qld.foxtel.net.au)
[14:51:57] *** Joins: ioxzev1z (~ioxzev1z@user/ioxzev1z)
[14:53:41] *** Quits: ketiv (~ketiv@92.40.194.5.threembb.co.uk) (Ping timeout: 256 seconds)
[14:55:32] *** Joins: soul-d (~uknown@user/soul-d)
[14:56:49] *** Joins: ketiv (~ketiv@92.40.194.3.threembb.co.uk)
[14:59:22] <dave0> okay it sounds like they're entirely compatible with int
[15:00:37] <dave0> hang on if you use int you might miss a warning
[15:01:52] <dave0> ,cc enum num { ONE, TWO, THREE } x=ONE; int y=ONE; switch(x) { case ONE: printf("hi "); } switch(y) { case ONE: printf("there "); }
[15:01:55] <candide> dave0: [warning: enumeration value 'TWO' not handled in switch [-Wswitch]  warning: enumeration value 'THREE' not handled in switch [-Wswitch]] hi there
[15:02:07] <dave0> you get a warning with enum
[15:02:09] <dave0> hmm
[15:02:43] <sham1> And that's why it's useful
[15:03:08] <dave0> yeah i can't think if any of my code comes up with that
[15:03:15] <dave0> i remember from SDL
[15:03:17] *** Joins: zer0bitz (~zer0bitz@196.244.192.60)
[15:03:32] <dave0> it used enum's for the keyboard keys
[15:04:18] <dave0> breaking abi sounds like a serious problem
[15:04:26] <sham1> It is
[15:05:12] <sham1> ,cc enum num { ONE, TWO, THREE, } x = ONE; printf("%zu", sizeof(x));
[15:05:14] <candide> sham1: 4
[15:05:37] <sham1> Makes sense
[15:05:47] <dave0> yeah stick it in an int
[15:05:56] <fizzie> ,cc -fshort-enums enum num { ONE, TWO, THREE, } x = ONE; printf("%zu", sizeof x);
[15:05:58] <candide> fizzie: 1
[15:06:32] <dave0> ,cc -fshort-enums enum num { ONE, TWO, THREE, FOUR=999 } x = ONE; printf("%zu", sizeof x);
[15:06:34] <candide> dave0: 2
[15:06:52] <fizzie> Of course an ABI could specify that enum types are only as big as needed. It's just the less stable choice.
[15:06:53] <dave0> i pity the guy who's code broke cos of that :-(
[15:07:01] *** Quits: badsektor (~badsektor@user/badsektor) (Quit: Leaving...)
[15:07:14] <sham1> I don't think at least the System V ABI specify anything special for enums
[15:07:36] <fizzie> It has to.
[15:07:59] <fizzie> Figure 3.1, scalar types: `enum`: sizeof 4, alighnment 4, "signed fourbyte".
[15:08:05] <fizzie> Same cell as `int` and `signed int`.
[15:08:20] <sham1> Well I don't know if I'd call that special
[15:08:25] <sham1> But sure
[15:08:31] *** Joins: susam (~susam@user/susam)
[15:08:51] <fizzie> Well, as in, it does nail down what size enum types must be.
[15:10:47] <fizzie> ,cc enum e { BIG = 4294967296 } x; printf("%zu", sizeof x); // GCC extension, as always
[15:10:50] <candide> fizzie: [warning: ISO C restricts enumerator values to range of 'int' [-Wpedantic]] 8
[15:11:30] *** Joins: Whatshisface (~jon@user/Whatshisface)
[15:13:14] <dave0> how can you have 2**32 memorized!
[15:13:16] <dave0> in decimal!
[15:13:30] <kurahaupo_> fizzie: I find 0x100000000 easier to see at a glance as being too big for uint32_t
[15:13:50] *** Joins: Thedarkb1 (~Thedarkb@cpc84095-pool16-2-0-cust190.15-1.cable.virginm.net)
[15:14:14] *** Quits: Thedarkb (~Thedarkb@cpc84095-pool16-2-0-cust190.15-1.cable.virginm.net) (Ping timeout: 256 seconds)
[15:14:16] *** Quits: ripsquid (~ripsquid@user/ripsquid) (Ping timeout: 265 seconds)
[15:14:36] <fizzie> What makes you think I had it memorized? (I did at one point, though, but now I just really recall 2^0 to 2^16 + 2^24 instantly.)
[15:14:50] *** Joins: inomoz (~inomoz@176.59.115.245)
[15:15:02] <sham1> 1L << 32
[15:15:20] <sham1> Or, well, UINT64_C(1) << 32
[15:16:16] <fizzie> Although I do automatically assume "starts with 42, has 10 digits, is even" → 2**32, "..., is odd" → 2**32-1, "starts with 18 and has loads of digits, is even" → 2**64, "..., is odd" → 2**64-1.
[15:16:16] <kurahaupo_> dave0: It's not that hard. Just quickly calculate 65536²
[15:16:20] <fizzie> Works more often than not.
[15:16:33] <dave0> kurahaupo_: oh yeah haha
[15:17:02] <dave0> or sqrt(2**64)
[15:17:06] <dave0> ;-)
[15:17:29] *** Quits: WAR10CK (~WAR10CK@14.223.181.231) (Ping timeout: 256 seconds)
[15:17:45] <meator> How does it violate platform ABI standards?
[15:18:22] <fizzie> Well, those ABIs (all that I know of, anyway) say enum types are the same size as `int`.
[15:19:01] *** Quits: ketiv (~ketiv@92.40.194.3.threembb.co.uk) (Ping timeout: 240 seconds)
[15:19:08] <fizzie> On a hypothetical platform where it says the size is only as large as needed, -fshort-enums would presumably default to on.
[15:20:08] <dave0> i was worried that adding an enum doodah would push it from <255 (char) to >255 (short)
[15:20:57] *** Joins: badsektor (~badsektor@user/badsektor)
[15:21:11] <dave0> who would think adding an enum would break your library?
[15:23:59] *** Quits: imp (~imp@192-141-191-227.alternativaip.net.br) (Quit: imp)
[15:24:47] *** Joins: Darkcoal (~user@139.64.51.226)
[15:29:09] <katsuragi> sorry, weechat users
[15:31:53] <sham1> What about them
[15:32:03] *** Joins: duuude (~user@user/duuude)
[15:33:56] *** Joins: blindguard (~blindguar@2a02:908:1864:c200::12)
[15:35:20] *** Joins: Atque (~Atque@user/atque)
[15:36:01] *** Quits: supakeen (~user@python/site-packages/supakeen) (Quit: WeeChat 3.4)
[15:36:32] *** Joins: supakeen (~user@python/site-packages/supakeen)
[15:38:04] *** Joins: cvmn (~caveman@gateway/tor-sasl/caveman)
[15:39:15] *** Quits: x88x88x (~x88x88x@149.28.53.172) (Remote host closed the connection)
[15:39:37] *** Quits: meator (~meator@user/meator) (Ping timeout: 240 seconds)
[15:40:06] *** Joins: x88x88x (~x88x88x@149.28.53.172)
[15:42:44] *** Joins: D0mi7usl0l (uid512140@id-512140.tinside.irccloud.com)
[15:42:47] <kurahaupo_> dave0: 65536² = 60000² + 2×60000×5536 + 5000² + 2×5000×536 + 500² + 2×500×36 + 30² + 2×30×6 + 6² = 36,25,25,09,36 + 6,64,32,00,00 + 5,36,00,00 + 3,60,00 + 3,60 =  36,25,25,09,36 + 6,64,32,00,00 + 5,39,63,60 = 36,25,25,09,36 + 6,69,71,63,60 =  42,94,96,72,96
[15:46:34] *** Joins: magla (~gelignite@55d47b01.access.ecotel.net)
[15:47:23] *** Joins: ripsquid (~ripsquid@user/ripsquid)
[15:47:47] <kurahaupo_> dave0: 36,25,25,09,36 is the sum of all the square terms, so each pair of digits is a square of a single digit
[15:50:21] *** Quits: chenqisu1 (~bhca7d@183.217.201.21) (Ping timeout: 256 seconds)
[15:52:40] *** Quits: AbleBacon (~AbleBacon@user/AbleBacon) (Read error: Connection reset by peer)
[15:53:09] <dave0> you're nuts :-p
[15:55:27] *** Quits: slidercrank (~slidercra@user/slidercrank) (Ping timeout: 256 seconds)
[15:57:06] <dave0> sqrt(18446744073709551616)
[15:59:57] <sham1> ,cc sqrt(18446744073709551616)
[16:00:01] <candide> sham1: [warning: integer constant is too large for its type]  Success (no output).
[16:00:24] <sham1> ,cc printf("%lld", sqrt(18446744073709551616LL))
[16:00:26] <candide> sham1: [warning: integer constant is too large for its type  warning: format '%lld' expects argument of type 'long long int', but argument 2 has type 'double' [-Wformat=]] 140737488348120
[16:00:35] <sham1> ,cc printf("%f", sqrt(18446744073709551616LL))
[16:00:38] <candide> sham1: [warning: integer constant is too large for its type] 0.000000
[16:00:42] <sham1> k
[16:00:54] <dave0> ,cc printf("%f", sqrt(18446744073709551616.));
[16:00:57] <candide> dave0: 4294967296.000000
[16:01:34] *** Quits: malloy (~jimery@120.229.34.78) (Quit: WeeChat 3.0)
[16:01:35] <dave0> just pointing out how crazy knowing that is :-p
[16:03:47] <fizzie> Some people memorize pi to thousands (or tens of thousands) of digits.
[16:04:19] *** Joins: Fairy (~Fairy@2001:464a:4992:0:bdfd:8ef1:211a:77dc)
[16:06:06] <dave0> once a teacher rattled off avagadros number and everyone went that's nuts and the teacher retorted "you can memorize a 10 digit phone number"
[16:06:20] <sham1> That's a lie
[16:08:02] <dave0> eh this was before iphones
[16:08:13] <dave0> kids these days
[16:08:39] <fizzie> All the phone numbers I recall are entirely defunct by now.
[16:09:25] *** Joins: Hexmind (~Hexmind@modemcable049.25-131-66.mc.videotron.ca)
[16:10:10] *** Joins: constxd (~brad@142.134.38.68)
[16:10:20] <sham1> I can barely remember my own phone number
[16:10:47] <sham1> Of course I remember stuff like 112 but that's just three digits and it's drilled into peoples' heads here every February on the 11th
[16:13:00] *** Joins: rsjw (~quassel@user/rsjw)
[16:15:00] *** Joins: Richard_Cavell (uid165693@id-165693.ilkley.irccloud.com)
[16:23:03] <dave0> https://susam.net/maze/simplicity-of-irc.html
[16:24:25] <sham1> Talking about the simplicity of IRC and then talks about the usage of a Matrix bridge
[16:24:29] <sham1> Matrix is not at all as simple
[16:28:13] *** Joins: Juliu (~Juliu@2a02:810b:c640:3ec0:a98c:b4fd:85b3:2536)
[16:31:30] *** Joins: ketiv (~ketiv@92.40.194.149.threembb.co.uk)
[16:31:40] *** Joins: mrig (~mrig@user/mrig)
[16:31:54] *** Joins: meator (~meator@user/meator)
[16:33:07] *** Joins: Keikai (~fedalio@45.156.31.141)
[16:33:31] *** Parts: Keikai (~fedalio@45.156.31.141) ()
[16:33:39] *** Joins: cerl (~cerl@c-24-30-27-91.hsd1.ga.comcast.net)
[16:38:37] *** Quits: ripsquid (~ripsquid@user/ripsquid) (Ping timeout: 240 seconds)
[16:38:38] *** Joins: ADHD (~XXX@user/ADHD)
[16:41:23] *** Joins: ripsquid (~ripsquid@user/ripsquid)
[16:42:04] *** Joins: wroathe (~wroathe@206-55-188-8.fttp.usinternet.com)
[16:42:04] *** Quits: wroathe (~wroathe@206-55-188-8.fttp.usinternet.com) (Changing host)
[16:42:04] *** Joins: wroathe (~wroathe@user/wroathe)
[16:43:42] *** Quits: Juliu (~Juliu@2a02:810b:c640:3ec0:a98c:b4fd:85b3:2536) (Quit: Quit)
[16:43:58] <badsektor> any help with this? https://github.com/ahmose231/advent2021/blob/main/15.c
[16:44:32] <badsektor> this is supposed to find the lowest path in a grid of numbers from top left to bottom right
[16:45:01] <sham1> Why are you not using a path finding algorithm like A*
[16:45:08] <sham1> It works for this
[16:46:27] <fizzie> Heh, day 15 this year was one of those cases where in the example, the only directions you ever need to move are right and down, but in the actual puzzle input (at least mine) you'd also need to move up and/or left.
[16:46:27] *** Quits: ripsquid (~ripsquid@user/ripsquid) (Read error: Connection reset by peer)
[16:46:37] *** Quits: wroathe (~wroathe@user/wroathe) (Ping timeout: 240 seconds)
[16:47:23] <sham1> It's so irritating with AoC wherein the example might work, but then when you go for the actual puzzle input, it fails
[16:47:37] *** Joins: pretty_dumm_guy (trottel@gateway/vpn/protonvpn/prettydummguy/x-88029655)
[16:47:59] *** Joins: kts (~kts@103.73.237.193)
[16:48:25] <badsektor> i dont know any algorithms
[16:48:34] <fizzie> (Also at least in terms of benchmarks, I didn't get any benefit out of A* with the obvious manhattan distance heuristic compared to just plain Dijkstra's.)
[16:48:40] <sham1> Well Advent of Code is as good as place to learn as any
[16:48:54] <ioxzev1z> badsektor, void main is wrong
[16:49:02] <sham1> I think I just did Euclidean distance
[16:49:38] <badsektor> see, when i run this with th 10x10 example it works, but i ran it for an hour for the actual 100x100 puzzle input and it was still going when i shut it off
[16:49:44] <sham1> Well, the square of Euclidean distance since if a^2 < b^2 <=> a < b iff a >= 1, b >= 1
[16:49:57] *** Quits: mrig (~mrig@user/mrig) (Ping timeout: 240 seconds)
[16:50:14] <sham1> Yeah, because your algorithm doesn't get there
[16:50:48] *** Joins: Xgc (~Xgc@user/xgc)
[16:51:01] *** Quits: mahmutov (~mahmutov@5.176.49.198) (Ping timeout: 240 seconds)
[16:51:10] *** Joins: mrig (~mrig@user/mrig)
[16:51:27] <sham1> This seems like a sort of a flood fill
[16:51:40] <fizzie> Looking at it, I imagine it should _get_ there, it just won't try the optimal path.
[16:51:49] <fizzie> (And it'll try all possible paths, which grows rather quickly.)
[16:52:23] <badsektor> how would i go about checking for optimal path?
[16:52:26] <sham1> Like sure, it'd probably *do* get there, but how long it would take. Like with 100x100 tiles, that's a lot of traversal
[16:52:37] <sham1> badsektor: https://en.wikipedia.org/wiki/Dijkstra%27s_algorithm
[16:52:44] *** Joins: ripsquid (~ripsquid@user/ripsquid)
[16:52:45] <sham1> Guaranteed to find the optimal route
[16:52:52] <sham1> It's been proven
[16:52:54] *** Quits: kenanmarasli (~kenanmara@user/kenanmarasli) (Quit: Leaving)
[16:53:32] <badsektor> whats the idea in dijkstra algorithm in a nutshell?
[16:54:23] *** Quits: arinov (~arinov@213.194.126.155) (Ping timeout: 256 seconds)
[16:55:12] *** Quits: mrig (~mrig@user/mrig) (Client Quit)
[16:56:23] <fizzie> In a nutshell, it explores the locations of the grid (or more generally, vertices of the graph) in the order of how long the shortest path from some starting position to that place is. It does that by tracking the boundary of the region it's visited so far, and always choosing the one with the least total distance to visit next.
[16:57:05] *** Joins: mrig (~mrig@user/mrig)
[16:57:08] <badsektor> thanks
[16:57:12] <fizzie> So in the grid example, when you start from the top-left corner, you'd add the two neighbouring grid locations to that boundary, and then first visit the one that's closer.
[16:57:57] *** Joins: smallvil_ (~smallvill@cpe-172-193-200-97.qld.foxtel.net.au)
[16:57:57] <fizzie> That's also why it's guaranteed to find the optimal path: by the time it's visiting the bottom-right corner vertex, it's gotten there using the shortest possible path.
[16:58:05] <badsektor> so it is still checking for all possible paths, but only assigns some paths priority
[16:58:40] <constxd> no.
[16:59:10] <fizzie> Well, depending on how you interpret "checking". The reason why it's efficient at all is, it never visits the same location more than once.
[16:59:22] <badsektor> right thank you
[16:59:38] <constxd> kings
[16:59:39] <fizzie> (Because it always gets to each location using the optimal path, so if a location has been visited already, there's no need to go there ever again.)
[17:00:14] <constxd> how should i implement concurrency in my programming language
[17:00:46] <fizzie> Most descriptions of Dijkstra's algorithm you'll find will also track the "previous" node it came from, which is necessary if you want to reconstruct the actual path, but AoC puzzles tend to not actually need that part since they almost always just ask for the distance of the shortest path.
[17:00:46] *** Quits: smallville7123 (~smallvill@cpe-172-193-200-97.qld.foxtel.net.au) (Ping timeout: 256 seconds)
[17:01:52] <fizzie> (As in, the `prev[v]` array in the Wikipedia pseudocode.)
[17:02:13] *** Quits: smallvil_ (~smallvill@cpe-172-193-200-97.qld.foxtel.net.au) (Ping timeout: 240 seconds)
[17:02:24] *** Joins: gr33n7007h (~gr33n7007@user/gr33n7007h)
[17:02:28] <constxd> fizzie: do you have your solutions to the puzzles in a public repository
[17:04:03] *** Joins: aqua (~aqua@user/aqua)
[17:04:08] *** Joins: clamiax (~clamiax@net-93-144-125-193.cust.dsl.teletu.it)
[17:04:08] <fizzie> In fact I do, but they're (a) ridiculously overengineered, and (b) mostly in Go. They're at https://github.com/fis/aoc/ anyway.
[17:04:09] <candide> Title of fizzie's link: GitHub - fis/aoc: Advent of Code
[17:04:20] *** Quits: aqua (~aqua@user/aqua) (Remote host closed the connection)
[17:04:20] <fizzie> I did (all but one day of) 2021 in Burlesque too, though. :)
[17:04:38] <fizzie> https://zem.fi/tmp/aocblsq.txt -- see, when someone complains C is unreadable, I can always point to that.
[17:04:40] *** Joins: aqua (~aqua@user/aqua)
[17:05:03] *** Quits: kish` (~aqua@user/aqua) (Ping timeout: 276 seconds)
[17:05:46] *** Quits: cerl (~cerl@c-24-30-27-91.hsd1.ga.comcast.net) (Quit: Leaving)
[17:05:53] <sham1> What am I looking at
[17:06:32] <fizzie> What, it's not obvious? ;)
[17:06:35] <fizzie> The language's https://esolangs.org/wiki/Burlesque
[17:06:39] *** Joins: jjido (~Denis@2a02:c7f:5c91:e700:d101:a511:5b6b:4afc)
[17:06:55] <constxd> is that some kind of stack based language
[17:07:15] *** aqua is now known as kish`
[17:07:28] <fizzie> Stack-based, concatenative, lazy, slightly functional, are some of the words I'd use to describe it.
[17:07:39] <sham1> Well it's an esolang so probably
[17:07:43] <NRK[m]> cringe
[17:08:40] *** Quits: kts (~kts@103.73.237.193) (Quit: Konversation terminated!)
[17:08:43] <badsektor> incidentally, if i uncomment the going 'left' or 'up' bits in the function move(), it gives me a segmentation fault, why do you think?  in here: https://github.com/ahmose231/advent2021/blob/main/15.c#L41
[17:08:49] <constxd> based
[17:09:17] <sham1> Being stack-based is quite common with esolangs because with a stack they don't need to worry about things like variables as much and they can focus on their gimmick
[17:10:02] <constxd> badsektor: stack overflow king
[17:10:13] <fizzie> Day 1's psJ[-{.<}Z]++ for example splits into `ps J [- {.<}Z] ++`, or "parse input" (results in a block of ints), "dup" (create a copy on stack), "tail" (drop the first element), "zip with less-than" (pop the two blocks, pair up their elements, and push a block that's 0/1 depending on if one was less than the other), "sum" (count how many were less than).
[17:10:43] <constxd> imagine this path starting at 0, 0
[17:11:17] <constxd> right, down, left, up, repeat ad infinitum
[17:11:31] <constxd> your fromx and fromy thing doesn't protect against going in circles
[17:11:36] <badsektor> oh
[17:11:44] * badsektor slaps forehead
[17:11:47] *** Joins: n3rdy1 (~n3rdy1@2600:1700:4570:3480::41)
[17:11:51] <badsektor> thanks a lot
[17:11:57] <fizzie> Yeah, running out of stack space would be my guess for the reason for the segfault resulting from that.
[17:12:28] <sham1> Segmentation fault as a diagnostic for an overflown stack is not that great
[17:13:38] <fizzie> ,cc int f(int x) { return f(x+1) + x; } f(0); // just checking if there's a better message here
[17:13:57] <candide> fizzie: Program received signal SIGSEGV, Segmentation fault
[17:14:07] <dave0> stack fault?
[17:14:30] *** Quits: x88x88x (~x88x88x@149.28.53.172) (Quit: ZNC - https://znc.in)
[17:14:31] <NRK[m]> read this yesterday: How ISO C became unusable for operating systems development https://www.yodaiken.com/wp-content/uploads/2021/10/yodaiken_plos_c2-.pdf
[17:14:34] <fizzie> They should call it a "stagmentation fault".
[17:14:36] <sham1> SIGSTACK please
[17:14:49] <sham1> Or I suppose SIGSTCK
[17:14:59] <dave0> heh
[17:15:03] <sham1> Can't have identifiers longer than 7 chars
[17:15:27] <NRK[m]> does there exist any kernel written in standard conformant ISO C?
[17:15:43] *** Joins: arinov (~arinov@31.142.76.178)
[17:16:11] <sham1> With no compiler extensions? I'm sure there's one but they're probably quite rare
[17:16:31] <dave0> i think netbsd targets posix
[17:16:39] <constxd> is this part 1 or 2 of day 15
[17:16:44] <NRK[m]> without utilising UB?
[17:16:54] <sham1> Like I can tell you that you're not gonna find a kernel which is strictly standard compliant freestanding
[17:17:35] <sham1> But one can still be pedantic and use UBSan and such to catch UB
[17:17:56] <NRK[m]> i think someone here mentioned that both linux and bsd kernels are filled with pointer to int casts
[17:18:11] <sham1> That's not surprising
[17:19:06] <sham1> Although an OS kernel is the kind of a thing where you can get away with doing non-portable assumptions and even some stuff that is technically UB but defined by the implementation for the given platform
[17:19:26] <sham1> Like for example casting function pointers to object pointers and that kind of thing
[17:19:36] <NRK[m]> linux is in gnuc99 i think
[17:20:19] <sham1> Yes it is. And it's part of the reason why it's been historically so difficult to compile with clang when clang didn't have as many GNU extensions implemented
[17:20:20] <NRK[m]> and i believe they also require -fno-strict-aliasing
[17:20:29] <dave0> https://www.freertos.org/FreeRTOS-Coding-Standard-and-Style-Guide.html
[17:20:37] <sham1> Yeah. Linus doesn't like strict aliasing
[17:20:54] <sham1> Even though just doing a memcpy could just get optimized away
[17:20:55] <NRK[m]> i dont like it either
[17:21:17] <sham1> Or, well, unions
[17:21:23] <NRK[m]> and neither did Dennis Ritchie from what i can tell
[17:24:56] <NRK[m]> "the committee is planting timebombs that are sure to explode in people's faces.  Assigning an ordinary pointer to a pointer to a `noalias' object is a license for the compiler to undertake aggressive optimizations that are completely legal by the committee's rules, but make hash of apparently safe programs. "
[17:25:43] <NRK[m]> he was talking about "noalias" which didn't make it into the standard, but i think his complaint applies to strict aliasing as well
[17:26:42] *** Joins: seninha (~seninha@user/seninha)
[17:27:32] *** Joins: mahmutov (~mahmutov@5.176.49.198)
[17:28:01] <fizzie> Depends on what "apparently safe" meant, really. If it's "apparent" that different types can't alias, then no. If you have a more "it's all just bytes anyway" attitude, then maybe.
[17:30:34] <NRK[m]> well, it *is* all bytes anyways
[17:30:37] *** Quits: whatsupdoc (uid509081@id-509081.hampstead.irccloud.com) (Quit: Connection closed for inactivity)
[17:30:56] *** Joins: shivesh (~shivesh@user/shivesh)
[17:31:00] *** Joins: tolog (~tolog@91.193.6.10)
[17:32:13] *** Joins: x88x88x (~x88x88x@2001:19f0:5:39a8:5400:3ff:feb6:73cb)
[17:32:22] *** Joins: kts (~kts@103.73.237.74)
[17:33:11] <sham1> Well the standard and implementations as well as the platforms themselves have placed restrictions on the idea that since it's all bytes, you can just access the object from multiple different pointers with different types
[17:34:01] <sham1> One of the most striking of course is that certain hardware requires pointers that are aligned in a certain way, and if you just alias without a regard for that, it'll blow up in your face
[17:35:11] <sham1> Or, you know, how you can't just alias functions and objects without explicit casts and how that's not even guaranteed to work unless you target something like POSIX
[17:37:23] <sham1> It's like, yeah, it's all bytes but there's still some difference between procedures and objects even so far as where you can enforce stuff on hardware level. And not to forget about Harvard architecture computers where you simply can't do stuff that mix functions and data because they exist in different address slaces
[17:39:15] *** Joins: euandreh (~euandreh@191.181.59.160)
[17:43:00] *** Joins: gproto23 (~gproto23@user/gproto23)
[17:43:27] *** Quits: sdfgsdfg (~sdfgsdfg@user/sdfgsdfg) (Quit: ZzzZ)
[17:43:38] *** Joins: mrgz (~mrgz@201-42-0-191.dsl.telesp.net.br)
[17:46:13] *** Quits: Sidharthan (~Sidhartha@27.5.150.167) (Quit: WeeChat 3.3)
[17:48:42] *** Quits: D0mi7usl0l (uid512140@id-512140.tinside.irccloud.com) (Quit: Connection closed for inactivity)
[17:49:06] *** Quits: oxfuxxx (~oxfuxxx@160.238.38.157) (Quit: Raccoon's not another IRC transgenre wannabe who can't fap at the dead american dream, fhackerz)
[17:49:33] *** Joins: oxfuxxx (~oxfuxxx@160.238.38.157)
[17:52:12] *** Quits: xsperry (~xs@user/xsperry) (Remote host closed the connection)
[17:53:35] *** Quits: agonhajdari (~textual@user/agonhajdari) (Quit: My Mac Mini has gone to sleep. ZZZzzz…)
[17:57:35] *** Quits: Atque (~Atque@user/atque) (Quit: ...)
[17:58:37] *** Quits: n3rdy1 (~n3rdy1@2600:1700:4570:3480::41) (Ping timeout: 240 seconds)
[17:58:57] *** Quits: jjido (~Denis@2a02:c7f:5c91:e700:d101:a511:5b6b:4afc) (Quit: My MacBook Air has gone to sleep. ZZZzzz…)
[17:59:25] *** Quits: constxd (~brad@142.134.38.68) (Ping timeout: 240 seconds)
[18:00:19] *** Joins: pulse (~pulse@user/pulse)
[18:03:49] *** Quits: ketiv (~ketiv@92.40.194.149.threembb.co.uk) (Ping timeout: 240 seconds)
[18:04:39] *** Quits: rito_ (~rito_gh@45.112.243.206) (Ping timeout: 256 seconds)
[18:05:11] *** Joins: agonhajdari (~textual@user/agonhajdari)
[18:06:01] *** Joins: ketiv (~ketiv@92.40.195.190.threembb.co.uk)
[18:06:39] *** Joins: WAR10CK (~WAR10CK@14.223.181.231)
[18:07:01] *** Quits: Fairy (~Fairy@2001:464a:4992:0:bdfd:8ef1:211a:77dc) (Ping timeout: 240 seconds)
[18:09:14] *** Quits: dsrt^ (~dsrt@wsip-98-188-246-242.mc.at.cox.net) (Remote host closed the connection)
[18:11:10] *** Joins: Hax0r (~Hax0r@87.101.168.29)
[18:11:42] *** Joins: n3rdy1 (~n3rdy1@2600:1700:4570:3480:1b88:50f:dae0:9293)
[18:17:21] *** Quits: badsektor (~badsektor@user/badsektor) (Quit: Leaving)
[18:17:37] *** Quits: heftig (heftig@archlinux/developer/heftig) (Quit: heftig)
[18:18:29] *** Joins: heftig (heftig@archlinux/developer/heftig)
[18:19:28] *** Joins: pingpongball (~pingpongb@43.228.192.110)
[18:19:34] *** Joins: Klinda (~superleag@user/klinda)
[18:20:03] *** Parts: pingpongball (~pingpongb@43.228.192.110) ()
[18:24:26] *** Joins: skapata (~Skapata@2804:14c:87b0:a6f9:b9d4:dfb1:ac7d:59bf)
[18:24:27] *** Quits: skapata (~Skapata@2804:14c:87b0:a6f9:b9d4:dfb1:ac7d:59bf) (Changing host)
[18:24:27] *** Joins: skapata (~Skapata@user/skapata)
[18:25:04] *** Joins: pucara (~i@host230.186-125-94.telecom.net.ar)
[18:25:36] *** Khoyo_ is now known as Khoyo
[18:26:09] *** Joins: constxd (~brad@142.134.38.68)
[18:26:54] *** Joins: phrosty (~phrosty@c-73-225-175-19.hsd1.wa.comcast.net)
[18:30:14] *** Quits: Khoyo (~khoyo@ns328946.ip-37-187-115.eu) (Changing host)
[18:30:14] *** Joins: Khoyo (~khoyo@user/khoyo)
[18:31:19] *** Quits: dave0 (~davezero@069.d.003.ncl.iprimus.net.au) (Quit: dave's not here)
[18:33:41] *** Joins: wroathe (~wroathe@206-55-188-8.fttp.usinternet.com)
[18:33:41] *** Quits: wroathe (~wroathe@206-55-188-8.fttp.usinternet.com) (Changing host)
[18:33:41] *** Joins: wroathe (~wroathe@user/wroathe)
[18:39:56] *** Quits: euandreh (~euandreh@191.181.59.160) (Ping timeout: 256 seconds)
[18:41:25] *** Quits: dogbert2 (~Bill@ip68-105-189-91.lv.lv.cox.net) (Ping timeout: 240 seconds)
[18:41:46] *** Quits: rindolf (~shlomif@inkscape/dev/shlomif) (Read error: Connection reset by peer)
[18:42:05] *** Joins: rindolf (~shlomif@inkscape/dev/shlomif)
[18:44:47] *** Quits: Richard_Cavell (uid165693@id-165693.ilkley.irccloud.com) (Quit: Connection closed for inactivity)
[18:46:59] *** Joins: plastico1 (~plastico@neomutt/plastico)
[18:47:00] <pragma-> lol, I'm reading http://akkartik.name/post/literate-programming and I couldn't help but notice this little snippet near the beginning of one of Knuth's code: typedef unsigned int uint; /* a convenient abbreviation */ typedef unsigned long long ullng; /* ditto */
[18:47:06] * pragma- stares the fuck at `ullng`
[18:47:29] *** Quits: aouestbillie (~gallup@192-222-138-215.qc.cable.ebox.net) (Remote host closed the connection)
[18:47:29] *** Quits: ouestbillie (~gallup@192-222-138-215.qc.cable.ebox.net) (Remote host closed the connection)
[18:47:29] *** Quits: plastico (~plastico@neomutt/plastico) (Ping timeout: 268 seconds)
[18:47:41] <pragma-> I'm struggling to read the rest of this article without `ullng` popping into my head and making me laugh incredulously.
[18:48:44] <pragma-> Was Knuth the same guy that put `creat()` in the standard Unix library?
[18:48:55] * pragma- shakes his head.
[18:49:00] <pragma-> Dude hates vowels, huh?
[18:49:29] <NRK[m]> i personally use `ulong`
[18:49:55] <pragma-> That's missing a long.
[18:49:58] *** Joins: dogbert2 (~Bill@ip68-105-189-91.lv.lv.cox.net)
[18:51:49] *** Joins: ouestbillie (~gallup@192-222-138-215.qc.cable.ebox.net)
[18:52:06] *** Joins: Rounin (~david@84.212.130.215)
[18:52:18] <NRK[m]> long long is c99 - i avoid
[18:52:57] *** Quits: cvmn (~caveman@gateway/tor-sasl/caveman) (Ping timeout: 276 seconds)
[18:53:08] <pragma-> C89 contains:
[18:53:11] <pragma-> A.6.5.6 Other arithmetic types
[18:53:11] <pragma-> Other arithmetic types, such as long long int , and their appropriate conversions are defined (3.2.2.1).
[18:53:50] <NRK[m]> teh fuck, i'm pretty sure `long long` is c99
[18:54:07] <pragma-> A.6.5 is "Common extensions"
[18:54:26] <pragma-> So yeah, not part of C89 proper, per se.
[18:54:44] <NRK[m]> ah, that makes sense.
[18:55:42] *** Quits: ___nick___ (~quassel@cpc68286-cdif17-2-0-cust533.5-1.cable.virginm.net) (Quit: https://quassel-irc.org - Chat comfortably. Anywhere.)
[18:56:32] *** sebbu2 is now known as sebbu
[18:57:15] *** Joins: ___nick___ (~quassel@cpc68286-cdif17-2-0-cust533.5-1.cable.virginm.net)
[18:57:42] *** Quits: ___nick___ (~quassel@cpc68286-cdif17-2-0-cust533.5-1.cable.virginm.net) (Client Quit)
[18:59:18] *** Joins: ___nick___ (~quassel@cpc68286-cdif17-2-0-cust533.5-1.cable.virginm.net)
[19:01:28] *** Quits: arinov (~arinov@31.142.76.178) (Read error: Connection reset by peer)
[19:01:29] *** Joins: arinov_ (~arinov@31.142.76.178)
[19:01:59] *** Quits: arinov_ (~arinov@31.142.76.178) (Remote host closed the connection)
[19:02:15] *** Joins: kitsunenokenja (~kitsunech@68.91.220.96)
[19:02:28] *** Joins: arinov (~arinov@31.142.76.178)
[19:04:13] *** Quits: meator (~meator@user/meator) (Ping timeout: 240 seconds)
[19:05:49] *** Quits: TonyStone (~TonyStone@2603-7080-8607-c36a-9cdb-69bc-753b-1e50.res6.spectrum.com) (Remote host closed the connection)
[19:07:33] *** Quits: ketiv (~ketiv@92.40.195.190.threembb.co.uk) (Ping timeout: 256 seconds)
[19:08:04] *** Joins: xsperry (~xs@user/xsperry)
[19:09:52] *** Quits: RyokoChan (~RyokoChan@user/RyokoChan) ()
[19:10:35] *** Joins: xb0o2 (~xb0o2@user/xb0o2)
[19:14:25] <duuude> the code, https://termbin.com/orqba
[19:14:38] <duuude> the error, https://termbin.com/r2n5
[19:15:02] <duuude> if it is 0 to the right of the string, how it is out-of-bound?
[19:15:44] <pragma-> Goodness, you ought to reduce this to a small testcase if you want more people to look more into it.
[19:17:40] *** Joins: TonyStone (~TonyStone@2603-7080-8607-c36a-9cdb-69bc-753b-1e50.res6.spectrum.com)
[19:17:54] <pragma-> It's saying that index 452 of a char[452] in your code is actually landing on where `ascii_art` actually lives.
[19:17:56] *** Joins: euandreh (~euandreh@2804:14c:33:9fe5:f755:55d9:216b:76f6)
[19:18:53] *** Joins: jan_ (~jan@dek164.neoplus.adsl.tpnet.pl)
[19:18:53] <duuude> yeah, but the string that is accessed in that line is ascii_art itself
[19:18:58] <pragma-> It's saying that index 452 attempts to load address 0x56326dc1e6e4 which is where `ascii_art` lives.
[19:19:49] *** Quits: arinov (~arinov@31.142.76.178) (Ping timeout: 240 seconds)
[19:20:08] *** Joins: otty (~otty@137.97.118.223)
[19:20:20] *** Joins: bebyx (~Thunderbi@user/bebyx)
[19:21:20] <pragma-> Well, your calculations on line 98, `if(ascii_art[(y-(lines/2-6))*41+x-(cols/2-21)]=='#'){` somehow accesses index 452 which is out of range. int a[10] allows access 0 through 9, 10 is out of range.
[19:21:24] *** Quits: otty (~otty@137.97.118.223) (Read error: Connection reset by peer)
[19:22:47] <NRK[m]> whenever you see an out of bound access, just -1 and it will typically fix itself :)
[19:22:55] <duuude> lol
[19:23:11] <NRK[m]> off by one, a classic.
[19:23:17] <pragma-> I have no idea what 2, 6, 41, 21 are. Might want to give those meaningful identifiers.
[19:23:21] <Klinda> what does it mean this https://bpa.st/77KA ?
[19:23:23] *** Joins: strajder (~strajder@user/strajder)
[19:23:46] <pragma-> lol, deadlysignal
[19:23:55] <duuude> pragma-: but when i add garbage to ascii_art it still fails, still complaining, with 452 being everywhere it was before
[19:24:00] <Klinda> is a segmentation fault or?
[19:24:50] *** Joins: nicholaus04 (~nicholaus@2607:fb90:e589:e2b9:d5ee:56de:0:7ca)
[19:25:15] <duuude> did &>> add on top of the file?
[19:25:25] *** Quits: kitsunenokenja (~kitsunech@68.91.220.96) (Ping timeout: 240 seconds)
[19:25:39] <pragma-> It appends to the end, assuming you're talking about shell redirecting.
[19:25:44] *** Joins: WilliamLeara (~wdl@cpe-76-185-2-28.tx.res.rr.com)
[19:26:18] *** Parts: Seng (~nick@hurtig.ninja) (Leaving)
[19:28:02] *** Quits: EdFletcher (~PKD@user/edfletcher) (Quit: Quit.)
[19:29:27] *** Joins: EdFletcher (~PKD@user/edfletcher)
[19:29:31] <jan_> is it possible to use c preprocesor only to execute the #defines and ignore anything else like the definition of structures or declaration of functions? I would like to use c preproc to include files from /usr/include/asm/ directory (they contain usefull constant declaration for syscalls) into my assembly code but I'm getting all this c junk which makes my code not possible to assembe.
[19:29:37] *** jan_ is now known as cherrry9
[19:29:59] *** Quits: agonhajdari (~textual@user/agonhajdari) (Quit: My Mac Mini has gone to sleep. ZZZzzz…)
[19:30:11] *** Quits: simplyjimin[m] (~simplyjim@2001:470:69fc:105::1:4793) (Quit: You have been kicked for being idle)
[19:32:39] <sham1> NRK[m]: why do you avoid C1999
[19:33:05] <zwr> jakesyl_: depends on your implementation. But yes, on GCC you have the -E flag
[19:33:26] <rsjw> cherrry9: nominally, it's a separate program, cpp. but some compilers also have the -E flag when they integrate the preprocessor into the compiler
[19:33:51] *** Joins: xtlga (~xtlga@2604:5c80:200:8270:95a3:9d0:4dc0:4fcb)
[19:34:37] <duuude> wow, C191999
[19:36:27] <cherrry9> but the problem is that the preprocesor is inserting all the c declarations
[19:36:39] <rsjw> testcase?
[19:37:50] *** Joins: SomeoneElse (SomeoneEls@c-24-34-241-188.hsd1.ma.comcast.net)
[19:38:03] <cherrry9> https://0x0.st/oiaD.c the first include works because <asm/syscall.h> only contain #defines but the second fail because it has some structures declarations
[19:38:15] *** Joins: cuppajoe (~joe@ip70-171-93-122.no.no.cox.net)
[19:38:19] *** Parts: SomeoneElse (SomeoneEls@c-24-34-241-188.hsd1.ma.comcast.net) ()
[19:38:29] <rsjw> scratch that bit about "when they integrate the preprocessor into the compiler"... I thought there was no cpp because the man page didn't exist, but the program is still there
[19:38:31] <cherrry9> I used this command to assemble it: cc -m32 -nostdlib -static toupper.S
[19:38:38] *** Quits: Hax0r (~Hax0r@87.101.168.29) (Quit: Leaving)
[19:40:49] *** Joins: crankslider (~slidercra@user/slidercrank)
[19:40:52] *** Quits: cuppajoe (~joe@ip70-171-93-122.no.no.cox.net) (Client Quit)
[19:41:08] *** Quits: candide (~pbot3@about/c/bot/candide) (Ping timeout: 256 seconds)
[19:41:42] <rsjw> I don't have those header files
[19:41:44] <fizzie> IIRC, the GNU preprocessor doesn't really have a flag for that. Usually headers have to be specifically meant for use from assembly programs to be useful.
[19:42:15] *** Joins: arinov (~arinov@213.194.126.155)
[19:43:10] *** Quits: acerbic (~acerbic@cs-xdata-50-86-53-211.cspire.com) (Read error: Connection reset by peer)
[19:43:47] *** Joins: agonhajdari (~textual@user/agonhajdari)
[19:43:57] *** Quits: pragma- (~chaos@user/pragmatic-chaos) (Ping timeout: 240 seconds)
[19:45:57] *** Quits: boB_K7IQ (~boB_K7IQ@c-24-19-3-104.hsd1.wa.comcast.net) (Ping timeout: 240 seconds)
[19:47:01] *** Quits: kurahaupo_ (~kurahaupo@pa49-182-47-103.pa.qld.optusnet.com.au) (Ping timeout: 240 seconds)
[19:47:01] *** Joins: boB_K7IQ (~boB_K7IQ@c-24-19-3-104.hsd1.wa.comcast.net)
[19:47:21] *** Joins: kurahaupo_ (~kurahaupo@115.69.27.211)
[19:47:27] <rsjw> you might be able to make a script that extracts just the preprocessor directives. they all start with # as the first non-whitespace character, unless they were continued from the previous line with a backslash newline.
[19:47:30] <fizzie> Sometimes there's a macro you can define before including a header that causes it to omit any non-macros. And maybe you could kludge something together from `gcc -E -dM` style output, where you first run that on the header to extract only macros to a separate header, and then include _that_ in the .S file. (Though -dM includes predefined macros too.)
[19:47:34] *** kurahaupo_ is now known as kurahaupo__
[19:47:38] *** kurahaupo__ is now known as kurahaupo_
[19:48:22] *** Joins: kenanmarasli (~kenanmara@user/kenanmarasli)
[19:48:48] *** kurahaupo_ is now known as inquorate
[19:48:58] *** inquorate is now known as kurahaupo_
[19:49:42] *** Joins: pragma- (~chaos@user/pragmatic-chaos)
[19:49:57] *** kurahaupo_ is now known as kurahaupo__
[19:51:01] *** Quits: kaph (~kaph@net-2-38-107-19.cust.vodafonedsl.it) (Ping timeout: 240 seconds)
[19:51:27] *** Joins: candide (~pbot3@about/c/bot/candide)
[19:51:27] *** Quits: System_Error (~SystemErr@user/systemerror) (Ping timeout: 276 seconds)
[19:52:53] *** Quits: xtlga (~xtlga@2604:5c80:200:8270:95a3:9d0:4dc0:4fcb) (Ping timeout: 256 seconds)
[19:53:09] *** Quits: somlis (~somlis@user/somlis) (Quit: WeeChat 3.4)
[19:54:26] *** Joins: ferdna (~ferdna@user/ferdna)
[19:55:10] <cherrry9> thanks, i will try to write script like this
[19:59:41] *** Quits: WilliamLeara (~wdl@cpe-76-185-2-28.tx.res.rr.com) (Ping timeout: 256 seconds)
[20:01:41] *** Joins: acerbic (~acerbic@cs-xdata-50-86-53-211.cspire.com)
[20:02:10] *** Joins: Guest48 (~Guest48@2001:4641:6e62:0:496b:77f1:ef62:5b4)
[20:03:17] <Klinda> what does it mean this fizzie https://bpa.st/77KA ?
[20:03:19] *** Joins: john99 (~johnny@138.62.221.87.dynamic.jazztel.es)
[20:03:38] *** Quits: shivesh (~shivesh@user/shivesh) (Quit: leaving)
[20:04:45] *** Joins: Fairy (~Fairy@2001:464a:4992:0:bdfd:8ef1:211a:77dc)
[20:06:05] <pragma-> It means you should recompile with debugging options turned on. Warning options would probably point out suspicious areas too.
[20:06:45] <fizzie> Heh. "UNKNOWN SIGNAL on unknown address -- AddressSanitizer can not provide additional info." Not very helpful. I'd probably start with a breakpoint on coders/tiff.c:1827 and look at what exactly it's passing to TIFFReadRGBATileExt and whether they all seem all right.
[20:08:02] <fizzie> Building libtiff with ASan too might conceivably give better errors, I think it can be a little flaky when only parts of the relevant code are ASan-instrumented.
[20:08:54] <fizzie> (And I'm guessing /lib/x86_64-linux-gnu/libtiff.so.5 isn't.)
[20:09:35] *** Joins: tech_exorcist (txrcst@user/tech-exorcist/x-0447479)
[20:11:03] *** Joins: System_Error (~SystemErr@user/systemerror)
[20:11:23] *** Joins: Cleverness (~Clevernes@pool-108-54-152-186.nycmny.fios.verizon.net)
[20:11:59] <Klinda> what are debugging options ? I compile with this CC=afl-gcc CXX=afl-g++ CFLAGS="-fsanitize=address -fno-omit-frame-pointer -O1" CXXFLAGS="-fsanitize=address -fno-omit-frame-pointer -O1" ./configure --disable-shared
[20:13:04] <Klinda> if I use gdb I can see the lines like https://bpa.st/CYIA (another cve)
[20:14:17] *** Quits: vysn (~vysn@user/vysn) (Ping timeout: 240 seconds)
[20:14:37] *** Quits: Cleverness (~Clevernes@pool-108-54-152-186.nycmny.fios.verizon.net) (Client Quit)
[20:14:56] <Klinda> btw fizzie I can't really debug because some are "optimizized"
[20:15:28] *** Quits: Darkcoal (~user@139.64.51.226) (Quit: Darkcoal)
[20:17:35] *** Joins: |darc| (~darc@23-112-65-16.lightspeed.nworla.sbcglobal.net)
[20:17:43] *** kurahaupo__ is now known as MartinKealey
[20:17:55] *** MartinKealey is now known as kurahaupo_
[20:18:57] *** Quits: |darc|- (darc@23-112-65-16.lightspeed.nworla.sbcglobal.net) (Ping timeout: 256 seconds)
[20:19:46] *** Joins: ketiv (~ketiv@92.40.195.188.threembb.co.uk)
[20:19:49] <Klinda> fizzie: I can't break on this (gdb) break /lib/x86_64-linux-gnu/libtiff.so.5+0x2d37b Function "/lib/x86_64-linux-gnu/libtiff.so.5+0x2d37b" not defined. Make breakpoint pending on future shared library load? (y or [n])
[20:20:39] *** Quits: mahmutov (~mahmutov@5.176.49.198) (Ping timeout: 256 seconds)
[20:21:15] *** Joins: Richard_Cavell (uid165693@id-165693.ilkley.irccloud.com)
[20:23:08] <Klinda> Breakpoint 1, ReadTIFFImage (image_info=<optimized out>, exception=<optimized out>) at coders/tiff.c:1827
[20:23:10] <Klinda> 1827	            if (TIFFReadRGBATile(tiff,(uint32) x,(uint32) y,tile_pixels) == 0)
[20:24:35] *** Joins: ajf_ (~ajf_@94.12.6.173)
[20:25:49] *** Quits: duuude (~user@user/duuude) (Ping timeout: 240 seconds)
[20:25:54] *** Joins: FluffyMask (~masque@user/fluffymask)
[20:26:39] *** Joins: mahmutov (~mahmutov@37.155.21.112)
[20:26:47] <fizzie> Yeah, so check things like, does `tile_pixels` point to an allocation that has space for x * y * however many bytes that writes in per pixel -- that'd be the obvious thing that'd make ASan's intercepted memmove complain.
[20:27:33] <fizzie> If it's complaining about those variables being optimized out, you can always single-step into the function call and see what's in the parameter-passing registers.
[20:27:34] *** Quits: LordJohn (~lordjohn@l37-192-203-250.novotelecom.ru) (Read error: Connection reset by peer)
[20:30:27] *** Quits: fe23 (~fe23@2409:8a34:464:4990:7c68:8699:3484:486e) (Quit: fe23)
[20:31:06] *** Quits: Guest48 (~Guest48@2001:4641:6e62:0:496b:77f1:ef62:5b4) (Quit: Client closed)
[20:31:08] *** Quits: nostar (~nostar@68.51.221.108) (Quit: Leaving)
[20:32:19] *** Quits: zwr (~zwr@2804:d45:b966:fb00:2bd0:5e5e:ca40:5981) (Ping timeout: 268 seconds)
[20:33:14] *** Quits: _4p3 (~ape@kanonenjagd.panzer.ninja) (Remote host closed the connection)
[20:35:18] *** Joins: zwr (~zwr@2804:d45:b966:fb00:4170:30cc:d780:488d)
[20:35:43] <Klinda> I am not that expert fizzie how can I check if tile pixels point to an allocation taht is full ?
[20:35:49] *** Quits: ketiv (~ketiv@92.40.195.188.threembb.co.uk) (Ping timeout: 240 seconds)
[20:35:54] *** Joins: _4p3 (~ape@kanonenjagd.panzer.ninja)
[20:37:10] *** Quits: gxt (~gxt@gateway/tor-sasl/gxt) (Quit: WeeChat 3.4)
[20:37:52] <Klinda> (gdb) p tile_pixels
[20:37:54] <Klinda> $1 = (uint32 *) 0x7ffff3c47800
[20:37:55] <Klinda> (gdb)
[20:38:01] <Klinda> p :D
[20:38:30] <kurahaupo_>  Klinda How do you define "full"
[20:38:46] *** Joins: gxt (~gxt@gateway/tor-sasl/gxt)
[20:39:14] <Klinda> I mean probabily fizzie what to point out that is out of bounds, so overflow
[20:39:15] <Klinda> probably
[20:39:31] <Klinda> want*
[20:39:37] *** Joins: emyrs (~emyrs@user/emyrs)
[20:40:46] <Klinda> what is memmove complain?
[20:42:36] *** Joins: kaph (~kaph@net-2-38-107-19.cust.vodafonedsl.it)
[20:42:45] *** Quits: crankslider (~slidercra@user/slidercrank) (Ping timeout: 256 seconds)
[20:43:27] *** Joins: eelstrebor (~eelstrebo@198-178-29-136.scb.ne.static.allophone.net)
[20:43:41] *** Joins: cgar (~cgar@072-187-006-075.res.spectrum.com)
[20:44:32] <Klinda> The C library function void *memmove(void *str1, const void *str2, size_t n) copies n characters from str2 to str1, but for overlapping memory blocks, memmove() is a safer approach than memcpy().
[20:45:31] <Klinda> what problems could be trigger?
[20:45:35] <kurahaupo_> Klinda: What's the question?
[20:46:10] <fizzie> Well, that's a little trickier. Optimally what you'd want is to then query ASan's allocation-tracker on what's at 0x7ffff3c47800.
[20:46:39] <fizzie> https://github.com/google/sanitizers/wiki/AddressSanitizerAndDebugger suggests doing `set overload-resolution off` + `p __asan_describe_address(0x7ffff3c47800)` might do it.
[20:46:45] <kurahaupo_> Klinda: I think I'm missing your problem statement. trigger for what?
[20:47:11] *** Joins: stonkey (~stonkey@user/stonkey)
[20:47:45] <Klinda> kurahaupo_: https://bpa.st/77KA we are debugging thi error
[20:49:34] <Klinda> (gdb) p tile_pixels $1 = (uint32 *) 0x7ffff3c47800 (gdb) set overload-resolution off (gdb) p __asan_describe_address(0x7ffff3c47800) '__asan_describe_address' has unknown return type; cast the call to its declared return type (gdb)
[20:50:05] <fizzie> Hmm. Well, I imagine it's intended to be a string. So `p (char *)__asan_describe_address(0x7ffff3c47800)` then.
[20:50:24] <fizzie> Oh, it actually doesn't.
[20:50:47] <fizzie> It's supposed to just print the description, and the return type is `void`.
[20:51:05] *** Joins: CaryHartline (~CaryHartl@2603-8080-6a0e-8d88-ec56-c560-562a-bc51.res6.spectrum.com)
[20:51:12] <Klinda> https://bpa.st/IH5A
[20:51:14] <fizzie> So maybe `call __asan_describe_address(0x7ffff3c47800)` instead, though that's not what they do in the wiki example.
[20:51:20] <Klinda> I think it worked?
[20:51:27] <fizzie> Yeah, I guess. Sort of accidentally.
[20:51:46] <fizzie> (The function itself printed the description, and then gdb tried to print whatever nonsense it "returned" and failed, but that's all right.)
[20:52:08] *** Joins: nostar (~nostar@2601:406:4100:34d:8f4:5ea7:30b2:b7e6)
[20:52:09] <fizzie> Anyway, it says there's 622592 bytes of writable space there. Now, what's x and y in the call?
[20:52:38] <kurahaupo_> Klinda: on line 1827 in coders/tiff.c there should be a call to TIFFReadRGBATileExt in the middle of the function ReadTIFFImage; what parameters are passed to it?
[20:53:08] <fizzie> The line is `if (TIFFReadRGBATile(tiff,(uint32) x,(uint32) y,tile_pixels) == 0)`, we've seen it already. :)
[20:53:42] <fizzie> We've just discovered that tile_pixels points to a 622592-byte allocation, and are waiting to hear about x and y.
[20:53:46] <kurahaupo_> ah, hence the question of the values of x & y. I'll leave it to you
[20:54:03] <Klinda> (gdb) p x
[20:54:04] <Klinda> $3 = 0
[20:54:06] <Klinda> (gdb) p y
[20:54:07] <Klinda> $4 = 0
[20:54:09] <Klinda> o.o
[20:55:24] *** Joins: duuude (~user@user/duuude)
[20:55:34] <fizzie> Oh, they're offsets, not sizes.
[20:55:49] <fizzie> I sort of assumed a function like that would take a size, but apparently it doesn't.
[20:56:01] <fizzie> Going by https://linux.die.net/man/3/tiffreadrgbatile anyway.
[20:57:29] <fizzie> So I guess the correct question is whether TIFFTAG_TILEWIDTH * TIFFTAG_TILELENGTH * 4 > 622592 for your libtiff.
[20:58:34] <kurahaupo_> That size factorizes to 19 × 2¹⁵, so x & y are hopefully some combination of those factors
[20:59:18] *** Quits: EtherNet (~ethernet@user/ethernet) (Quit: WeeChat 3.5-dev)
[20:59:41] *** Joins: arinov_ (~arinov@213.194.126.155)
[20:59:43] <kurahaupo_> Where are the bytes-per-pixel and pixels-per-line values kept?
[20:59:49] *** Quits: arinov (~arinov@213.194.126.155) (Ping timeout: 240 seconds)
[20:59:51] *** Joins: EtherNet (~ethernet@user/ethernet)
[21:00:13] <fizzie> Turns out TIFFReadRGBATile reads a fixed-size chunk with a fixed 32-bits-per-pixel format.
[21:00:17] *** Quits: jiehuan (~jiehuan@39.190.192.100) (Remote host closed the connection)
[21:00:43] *** Joins: firehawk (~firehawk@2a02:908:1a71:9b40:549a:638f:ee0a:392)
[21:02:33] <fizzie> Well, not a fixed-size as such, but a known-size.
[21:02:35] <fizzie> ("The raster is assumed to be an array of width times length 32-bit entries, where width is the width of a tile (TIFFTAG_TILEWIDTH) and length is the height of a tile (TIFFTAG_TILELENGTH).")
[21:03:02] <Klinda> I don't know exactly what is doing this function
[21:03:12] <Klinda> what are the offsets?
[21:03:44] <fizzie> "The x and y values are the offsets from the top left corner to the top left corner of the tile to be read. They must be an exact multiple of the tile width and length."
[21:03:59] <fizzie> Of course 0 is an exact multiple of everything, so that's all right.
[21:04:02] <Klinda> so they are both the top left corner?
[21:04:34] <Klinda> memory and real image? or what?
[21:04:36] <fizzie> FWIW, it might even be that it's not going to yet crash for _this_ call of the function. I imagine it's in a loop where it reads a bunch of tiles.
[21:05:12] <nicode> silly question, what's a good way to repeat a string (e.g. I want to have X number of tabs on a given line)?
[21:05:16] *** Joins: meator (~meator@user/meator)
[21:05:24] <kurahaupo_> fizzie: Fixed in the sense of a compile-time constant?
[21:05:36] <fizzie> kurahaupo_: I think in the sense that it's a field in the file.
[21:06:06] <kurahaupo_> So there's an open file handle of some sort that holds that info?
[21:06:10] <fizzie> (Though that man page was a little vague. But I think it's not literally saying the sizes are TIFFTAG_TILEWIDTH and TIFFTAG_TILELENGTH, but rather that those are the tags that the real size is stored in the image.)
[21:06:27] <kurahaupo_> nicode: Repeat a single character or a sequence?
[21:06:47] *** Joins: kit-ten (~u0_a391@2600:380:a434:56d9:6ab3:5bed:adee:69d0)
[21:07:01] <kurahaupo_> nicode: memset(str, '\t', len); str[len]=0;
[21:07:14] <nicode> kurahaupo_: a single character, such as '\t' X number of times
[21:07:15] <fizzie> The `tiff` is the handle, and I saw a few calls to `TIFFGetField(tiff,TIFFTAG_TILEWIDTH,&columns)` in ImageMagick code, which I imagine is where it's getting the tile size.
[21:07:37] <fizzie> But I think we've reached the end of how much I can debug remotely, and I need to do a few other things besides. :)
[21:07:40] <Klinda> btw it's imagemagick 6.9.0-0
[21:08:31] <fizzie> (You could try `cont` a few times to see if it's actually going to crash in this call, or on a later one; maybe there's one that's more clearly wrong.)
[21:08:56] <Klinda> gdb) cont
[21:08:57] <Klinda> Continuing.
[21:08:59] <Klinda> Program received signal SIGSEGV, Segmentation fault.
[21:09:00] <Klinda> 0x00007ffff7622dd3 in memmove () from /lib/x86_64-linux-gnu/libasan.so.5
[21:09:04] <kurahaupo_> Klinda: Are you doing anything earlier that might constitute undefined behaviour? If you've corrupted some internal state of the tiff object, that could easily account for weird behaviour later
[21:09:22] <Klinda> so it's segmentation fault?
[21:09:59] <Klinda> kurahaupo_: yes the image is fuzzed
[21:09:59] <kurahaupo_> Yes that's what the error message says
[21:10:34] <Klinda> so when does this happens?
[21:10:37] *** Quits: kit_ten (~u0_a391@cpe-76-190-178-139.neo.res.rr.com) (Ping timeout: 240 seconds)
[21:10:38] <nicode> kurahaupo_: are '\0' and 0 equal?
[21:10:39] *** Joins: Darkcoal (~user@167.86.160.179)
[21:10:50] <kurahaupo_> Klinda: By you, or before you get it?
[21:10:57] *** Quits: Alhazred (~Alhazred@athedsl-4387600.home.otenet.gr) (Ping timeout: 240 seconds)
[21:10:57] <kurahaupo_> nicode: Yes
[21:11:02] <Klinda> what do you mean kurahaupo_?
[21:11:19] <kurahaupo_> nicode: they are both int constants
[21:11:38] <kurahaupo_> Klinda: was the image fuzzed by you, or before you get it?
[21:12:14] <kurahaupo_> Klinda: When you said "yes" to me, which question were you answering?
[21:12:19] <nicode> kurahaupo_:  I guess w/ '\0' you're making it more clear you're endring a string, or is just a preference that K&R have?
[21:12:28] *** Joins: Alhazred (~Alhazred@s91904425.blix.com)
[21:12:59] <kurahaupo_> nicode: It's a stylistic preference. You can choose your own if you don't like mine.
[21:13:12] <nicode> kurahaupo_: kk, good to know, thx.
[21:13:43] <kurahaupo_> (I count it as verbose by 3 extra characters, that don't alter the meaning of the program.)
[21:13:57] *** Quits: TheCoffeMaker (~TheCoffeM@user/thecoffemaker) (Ping timeout: 240 seconds)
[21:14:15] <Klinda> kurahaupo_: by me with afl
[21:14:24] *** Quits: CaryHartline (~CaryHartl@2603-8080-6a0e-8d88-ec56-c560-562a-bc51.res6.spectrum.com) (Quit: My iMac has gone to sleep. ZZZzzz…)
[21:14:41] <Klinda> so in theory the signal is segmentation fault..
[21:17:41] *** Quits: meator (~meator@user/meator) (Quit: Leaving)
[21:18:05] <kurahaupo_> Klinda: my only yes-no question was "Are you doing anything earlier that might constitute undefined behaviour?"; it seems like your "yes" was in reply to that. Or have I misunderstood?
[21:20:06] *** Quits: moog (~moog@107.77.244.39) (Read error: Connection reset by peer)
[21:20:10] <kurahaupo_> Klinda: SIGSEGV indicates that an invalid pointer was used. The objective of debugging it to find out how and where that pointer was created.
[21:20:43] *** Quits: the_lanetly_052 (~the_lanet@185.30.88.55) (Ping timeout: 256 seconds)
[21:22:20] *** Joins: moog (~moog@107.77.244.39)
[21:22:37] *** Quits: dogbert2 (~Bill@ip68-105-189-91.lv.lv.cox.net) (Ping timeout: 240 seconds)
[21:23:38] *** Joins: CaryHartline (~CaryHartl@2603-8080-6a0e-8d88-ec56-c560-562a-bc51.res6.spectrum.com)
[21:25:21] *** Quits: zwr (~zwr@2804:d45:b966:fb00:4170:30cc:d780:488d) (Ping timeout: 268 seconds)
[21:26:38] *** Quits: noarb (~noarb@user/noarb) (Quit: ZNC 1.8.2 - https://znc.in)
[21:27:00] *** Quits: System_Error (~SystemErr@user/systemerror) (Ping timeout: 276 seconds)
[21:27:27] <Klinda> kurahaupo_: I am trying to find crashes with afl, I found this image which if I convert trigger this segmentation fault...
[21:27:52] *** Joins: tforever (~Terabyte@85.103.110.39)
[21:28:20] *** Joins: emanuele6 (~emanuele6@user/emanuele6)
[21:28:25] <Klinda> kurahaupo_: why the program use an invalid pointer? what do you mean by invalid pointer?
[21:28:27] <kurahaupo_> Klinda: Is afl the program you're debugging, and have source code for?
[21:28:39] <Klinda> kurahaupo_: afl is the fuzzer
[21:28:47] *** Joins: |darc|- (darc@23-112-65-16.lightspeed.nworla.sbcglobal.net)
[21:28:47] *** Quits: |darc| (~darc@23-112-65-16.lightspeed.nworla.sbcglobal.net) (Killed (NickServ (GHOST command used by |darc|-!darc@23-112-65-16.lightspeed.nworla.sbcglobal.net)))
[21:28:54] <Klinda> imagemagick is the program to test
[21:29:14] <kurahaupo_> Klinda: "why" is for you to figure out. Without the source code I don't know and can't find out
[21:29:22] *** Quits: ouestbillie (~gallup@192-222-138-215.qc.cable.ebox.net) (Ping timeout: 256 seconds)
[21:29:45] <nicode> is there a way to define my struct (and connections) in a cleaner way or am I already on the right path? https://github.com/nicdesjardins/dojo/blob/main/testcases/tree-struct.c
[21:30:22] <nicode> everything after line 31 is just to test that my struct works as expected so you can ignore.
[21:30:29] <kurahaupo_> Imagine that I have no idea what programs do what, and explain to me which ones you're using to do what
[21:30:58] <kurahaupo_> Klinda:  Imagine that I have no idea what programs do what, and explain to me which ones you're using to do what
[21:30:59] <Klinda> the program is not easy to debug, it's not a play toy I think
[21:31:21] <Klinda> or at least my knownledge is limited to do it ahah
[21:32:09] <Klinda> I think is enough to say that I found debugging is segmentation fault
[21:32:56] *** Joins: noarb (~noarb@user/noarb)
[21:33:16] <kurahaupo_> Klinda: you don't generally need a debugger to find the signal; the shell will tell you that when you run it normally
[21:33:44] <kurahaupo_> Klinda: which is your native language?
[21:33:51] *** Quits: noarb (~noarb@user/noarb) (Client Quit)
[21:34:07] *** Joins: dogbert2 (~Bill@ip68-105-189-91.lv.lv.cox.net)
[21:34:57] <Klinda> kurahaupo_: if you see the sanitizer say deadly signal and then unknow signal
[21:35:10] <Klinda> is the same thing to say segmentation fault?
[21:35:20] <Klinda> kurahaupo_: I am italian
[21:37:08] *** Quits: dogbert2 (~Bill@ip68-105-189-91.lv.lv.cox.net) (Remote host closed the connection)
[21:37:26] *** Joins: dogbert2 (~Bill@ip68-105-189-91.lv.lv.cox.net)
[21:40:06] *** Joins: hanzo (uid532183@user/hanzo)
[21:40:06] *** Quits: |darc|- (darc@23-112-65-16.lightspeed.nworla.sbcglobal.net) (Read error: Connection reset by peer)
[21:40:12] *** Joins: BSaboia (~bsaboia@177.37.198.83)
[21:40:48] *** Joins: dyeplexer (~dyeplexer@user/dyeplexer)
[21:42:30] *** Quits: BSaboia (~bsaboia@177.37.198.83) (Client Quit)
[21:42:54] *** Joins: BSaboia (~bsaboia@177.37.198.83)
[21:43:31] *** Joins: juanpicasti (~juanpicas@201.176.19.55)
[21:43:39] *** Joins: Narrat (~omnius@p200300df5f0ef9dc06ea56fffe2e7cdc.dip0.t-ipconnect.de)
[21:44:54] <juanpicasti> quit
[21:44:56] *** Quits: juanpicasti (~juanpicas@201.176.19.55) (Client Quit)
[21:45:11] *** Joins: |darc| (darc@23-112-65-16.lightspeed.nworla.sbcglobal.net)
[21:45:14] *** Quits: zer0bitz (~zer0bitz@196.244.192.60) (Ping timeout: 256 seconds)
[21:45:26] <kurahaupo_> Klinda: grazie.
[21:45:28] <kurahaupo_> klinda: Sorry I don't know why the sanitizer says "deadly signal" but not which signal. Maybe because it's saying that it expects a signal because of the illegal behaviour but doesn't know which signal as it has not yet arrived
[21:46:27] *** Joins: zsoltiv_ (~zsoltiv@fibhost-67-12-35.fibernet.hu)
[21:47:00] *** Joins: Akuli (~Akuli@82-203-160-12.bb.dnainternet.fi)
[21:48:00] *** Quits: stonkey (~stonkey@user/stonkey) (Quit: Leaving)
[21:48:58] *** Joins: kadavul (~vazha@103.165.20.178)
[21:52:17] *** Quits: WAR10CK (~WAR10CK@14.223.181.231) (Quit: Leaving)
[21:52:24] <tforever> Why not to handle segfault in order to test the program and see if it is actually a segfault or not?
[21:52:34] <tforever> Unit testing at its finest :D
[21:53:31] <Klinda> I am just exausthed to analyze bugs
[21:54:17] <Klinda> it's also not required in my project in the end, also I am a noob in C, it requires months to handle it
[21:54:18] *** Quits: wroathe (~wroathe@user/wroathe) (Ping timeout: 256 seconds)
[21:54:22] *** Joins: rito_ (~rito_gh@45.112.243.149)
[21:54:28] *** Quits: bzyx (~quassel@89-69-20-238.dynamic.chello.pl) (Read error: Connection reset by peer)
[21:55:24] *** Joins: somlis (~somlis@user/somlis)
[21:55:42] <tforever> No no, I mean handling SIGSEGV signal
[21:55:48] *** Joins: wroathe (~wroathe@206-55-188-8.fttp.usinternet.com)
[21:55:48] *** Quits: wroathe (~wroathe@206-55-188-8.fttp.usinternet.com) (Changing host)
[21:55:48] *** Joins: wroathe (~wroathe@user/wroathe)
[21:55:59] <tforever> Not something like C++ smart pointer thingy
[21:56:48] <Klinda> I don't know how to handle a segmentation fault, honestly I don't know when it happens too ahah
[21:57:38] <Klinda> I started to see C 3 monhts ago and like basic things
[21:59:13] *** Joins: bzyx (~quassel@89-69-20-238.dynamic.chello.pl)
[21:59:33] <strajder> `man gdb` or `info gdb`
[22:00:24] <Klinda> I know basic stuffs of gdb like break points step, next, p , set args
[22:01:07] *** Parts: firehawk (~firehawk@2a02:908:1a71:9b40:549a:638f:ee0a:392) (Leaving)
[22:01:34] <strajder> run the program which segfaults in it; it will show the offending code with `bt` (backtrace) or `l`; you can also inspect variables with display
[22:03:30] <Klinda> strajder: https://bpa.st/YZNA
[22:03:30] *** Quits: bzyx (~quassel@89-69-20-238.dynamic.chello.pl) (Client Quit)
[22:03:38] <cherrry9> u can also load the coredump of your program that crashed
[22:03:47] *** Quits: wroathe (~wroathe@user/wroathe) (Ping timeout: 256 seconds)
[22:04:02] <cherrry9> u you are on systemd based distro: coredumpctl gdb
[22:05:44] <kurahaupo_> Klinda: If you are debugging a fault in a large program written by someone else, you would need all the source code, especially the topmost function on the call stack, which is TIFFReadRGBATileExt in libtiff.so.5
[22:06:47] <Klinda> yes I told you, too much expensive time for nothing, I say that I found segmentation fault with gdb and that's it
[22:06:59] *** Joins: floppy-disk (~floppy-di@p200300df1f0a44016562d07ebea87e86.dip0.t-ipconnect.de)
[22:07:17] <Klinda> also I am not a master of C, don't know every single instruction like python or java xD
[22:07:25] *** Quits: Fairy (~Fairy@2001:464a:4992:0:bdfd:8ef1:211a:77dc) (Ping timeout: 240 seconds)
[22:07:36] <tforever> Did you compile the app using debugging symbols? Assuming you are a gcc user
[22:07:37] *** Joins: bzyx (~quassel@89-69-20-238.dynamic.chello.pl)
[22:07:43] <kurahaupo_> Klinda: It is important to understand that a crash may occur because of a mistake MUCH earlier, and may happen even if the code where the crash occurs is completely correct.
[22:08:12] <tforever> tforever: it is sometimes really handy
[22:08:43] <Klinda> CC=afl-gcc CXX=afl-g++ CFLAGS="-fsanitize=address -fno-omit-frame-pointer -O1" CXXFLAGS="-fsanitize=address -fno-omit-frame-pointer -O1" ./configure --disable-shared that's how I compile
[22:08:46] <kurahaupo_> Klinda: È importante capire che un arresto anomalo può verificarsi a causa di un errore MOLTO prima e può verificarsi anche se il codice in cui si verifica l'arresto anomalo è completamente corretto.
[22:09:31] <Klinda> kurahaupo_: ok but the project is not realted to anayze the bugs found in the fuzzer, it's a plus thing I do, so it's not required
[22:10:28] *** Quits: dyeplexer (~dyeplexer@user/dyeplexer) (Remote host closed the connection)
[22:10:37] *** Quits: boB_K7IQ (~boB_K7IQ@c-24-19-3-104.hsd1.wa.comcast.net) (Ping timeout: 240 seconds)
[22:10:51] <kurahaupo_> It seems like you have an image that is not properly formatted,  and it's causing this other program to crash. I suggest you submit a bug report, with an example image file that causes it to crash
[22:11:30] <Klinda> kurahaupo_: it's an old version, the point is to find crashes on outdated versions
[22:11:37] <Klinda> and see if it's a cve
[22:11:41] <Klinda> I found two cves
[22:11:44] <kurahaupo_> Unless you have several weeks of spare time to work on it
[22:11:49] *** Quits: floppy-disk (~floppy-di@p200300df1f0a44016562d07ebea87e86.dip0.t-ipconnect.de) (Client Quit)
[22:12:46] <strajder> Klinda: "too much expensive time for nothing" - it is not "for nothing", it is a learning experience
[22:13:00] <Klinda> this is not a cve I think, just a segmentation fault
[22:13:25] <Klinda> strajder: well if you have other stuffs to do too, I mean my teacher really never teache anyhing about the project, it's too much I am doing this
[22:13:34] <strajder> if you are filing a bug report, a dev would find the backtrace and code context sufficient
[22:13:36] <Klinda> it's alls elf-made
[22:14:24] <kurahaupo_> Like how I learned to ski: get skis, take lift to top of mountain, figure out how to get down.
[22:14:31] *** Joins: wroathe (~wroathe@206-55-188-8.fttp.usinternet.com)
[22:14:31] *** Quits: wroathe (~wroathe@206-55-188-8.fttp.usinternet.com) (Changing host)
[22:14:31] *** Joins: wroathe (~wroathe@user/wroathe)
[22:14:48] <Klinda> yes but I have not my entrie life to debug a file, I have other exams and other stuffs to learn
[22:14:59] <strajder> then don't
[22:15:01] *** Quits: tforever (~Terabyte@85.103.110.39) (Quit: Leaving)
[22:15:07] *** Joins: aportnoy (~aportnoy@bras-base-toroon0628w-grc-22-174-95-160-240.dsl.bell.ca)
[22:15:21] <strajder> ¯\_(ツ)_/¯
[22:16:17] <Klinda> the teacher never teach how to debug a program and so on
[22:16:34] <Klinda> jsut say install the fuzzer, insert asan if you want, summarize your findings
[22:16:39] <Klinda> and that's it
[22:17:00] <Klinda> hours and hours to see ho wto compile with asan and so on, days to find bugs with the fuzzer etc
[22:17:32] <kurahaupo_> strajder: Not necessarily. If it's a bug because the file is corrupted, what you want to find out is why the "corrupt file detection" code failed to prevent the error.
[22:17:32] <Klinda> 24 hours to get the computer on ahah
[22:18:14] <Klinda> I write I found with gdb it's a segmentation fault and that's it
[22:18:44] *** Joins: Jupy7er (~Jupy7er@2001:d08:e3:b1:dd4e:c9da:9c60:5d27)
[22:19:37] *** Joins: xtlga (~xtlga@2604:5c80:200:8270:e43d:5b7c:9d5:612c)
[22:19:40] *** Quits: Jupy7er (~Jupy7er@2001:d08:e3:b1:dd4e:c9da:9c60:5d27) (Client Quit)
[22:19:43] <kurahaupo_> Klinda: does this only happen when the input file had previously been processed by an image fuzzer? Or is this program an image fuzzer?
[22:19:48] *** Quits: wroathe (~wroathe@user/wroathe) (Ping timeout: 256 seconds)
[22:20:27] <Klinda> kurahaupo_: only when the fuzzer mutate the image
[22:20:48] <kurahaupo_> Klinda: Or after you referring to fuzzing, the code test methodology?
[22:20:49] <kurahaupo_> ok
[22:20:52] <Klinda> this fuzzer work you give some test cases, it mutates for you and try the command
[22:22:31] <kurahaupo_> Klinda: Sorry it's past my bedtime, I won't be able to help much further
[22:23:03] *** Joins: jzbl (~jzbl@code.kittypaw.pl)
[22:23:37] *** Quits: random-nick (~random-ni@87.116.167.125) (Ping timeout: 240 seconds)
[22:24:09] *** Quits: jzbl (~jzbl@code.kittypaw.pl) (Client Quit)
[22:25:09] *** Joins: jzbl (~jzbl@code.kittypaw.pl)
[22:25:51] <Klinda> don't worry thanks for all of you :)
[22:26:57] *** Quits: duuude (~user@user/duuude) (Ping timeout: 240 seconds)
[22:27:28] *** Quits: jzbl (~jzbl@code.kittypaw.pl) (Client Quit)
[22:27:38] *** Joins: duuude (~user@user/duuude)
[22:30:14] *** Quits: eelstrebor (~eelstrebo@198-178-29-136.scb.ne.static.allophone.net) (Quit: Ex-Chat)
[22:30:17] *** Joins: wroathe (~wroathe@206-55-188-8.fttp.usinternet.com)
[22:30:17] *** Quits: wroathe (~wroathe@206-55-188-8.fttp.usinternet.com) (Changing host)
[22:30:17] *** Joins: wroathe (~wroathe@user/wroathe)
[22:32:21] *** Quits: aportnoy (~aportnoy@bras-base-toroon0628w-grc-22-174-95-160-240.dsl.bell.ca) (Quit: Leaving)
[22:32:33] *** Joins: freakazoid343 (~matt@2603-9000-cf03-86c3-11c4-68db-ad36-c833.inf6.spectrum.com)
[22:33:01] *** Joins: terminalpusher (~terminalp@2a01:586:8e8d:1:216f:6651:6993:2328)
[22:33:47] *** Joins: zwr (~zwr@2804:d45:b966:fb00:ab6a:ec40:1b75:3ae7)
[22:34:29] *** Quits: freakazoid333 (~matt@2603-9000-cf03-86c3-11c4-68db-ad36-c833.inf6.spectrum.com) (Ping timeout: 250 seconds)
[22:35:27] *** Joins: TheCoffeMaker (~TheCoffeM@user/thecoffemaker)
[22:35:34] *** Quits: bzyx (~quassel@89-69-20-238.dynamic.chello.pl) (Quit: https://quassel-irc.org - Chat comfortably. Anywhere.)
[22:35:40] *** Quits: ajf_ (~ajf_@94.12.6.173) (Ping timeout: 256 seconds)
[22:35:59] *** Joins: Seng (~nick@hurtig.ninja)
[22:37:13] *** Joins: random-nick (~random-ni@87.116.167.125)
[22:37:47] *** Quits: dan_pena (~dan_pena@112.252.130.77.rev.sfr.net) (Ping timeout: 256 seconds)
[22:41:10] *** Quits: terminalpusher (~terminalp@2a01:586:8e8d:1:216f:6651:6993:2328) (Remote host closed the connection)
[22:45:05] *** Quits: Haxxa (~Haxxa@89nnjg0xckz9ggn6r5xm.ip6.superloop.com) (Quit: Haxxa flies away.)
[22:47:17] *** Joins: Haxxa (~Haxxa@89nnjg0xckz9ggn6r5xm.ip6.superloop.com)
[22:49:16] *** Quits: CaryHartline (~CaryHartl@2603-8080-6a0e-8d88-ec56-c560-562a-bc51.res6.spectrum.com) (Quit: My iMac has gone to sleep. ZZZzzz…)
[22:50:15] *** Quits: TheCoffeMaker (~TheCoffeM@user/thecoffemaker) (Ping timeout: 256 seconds)
[22:50:55] *** Joins: TheCoffeMaker (~TheCoffeM@user/thecoffemaker)
[22:54:08] *** Joins: Zambyte (~Zambyte@cpe-104-228-60-14.nycap.res.rr.com)
[22:54:22] *** Quits: Darkcoal (~user@167.86.160.179) (Remote host closed the connection)
[22:54:28] *** Joins: floppy-disk (~floppy-di@p200300df1f0a4401ac6b9f025db561b4.dip0.t-ipconnect.de)
[22:54:32] *** Joins: Darkcoal (~user@2001:16a2:7a6c:b600:3a83:1ab3:2e7c:510)
[22:54:37] *** Quits: Darkcoal (~user@2001:16a2:7a6c:b600:3a83:1ab3:2e7c:510) (Remote host closed the connection)
[22:56:02] *** Joins: CaryHartline (~CaryHartl@2603-8080-6a0e-8d88-ec56-c560-562a-bc51.res6.spectrum.com)
[22:56:20] *** Quits: xtlga (~xtlga@2604:5c80:200:8270:e43d:5b7c:9d5:612c) (Quit: Client closed)
[22:56:29] *** Quits: Alhazred (~Alhazred@s91904425.blix.com) (Ping timeout: 256 seconds)
[22:56:33] *** Joins: jjido (~Denis@2a02:c7f:5c91:e700:d101:a511:5b6b:4afc)
[22:57:42] *** Joins: tforever (~Terabyte@85.103.110.39)
[22:57:44] *** Joins: sabry (~sabry@197.37.72.225)
[22:58:18] *** Joins: Alhazred (~Alhazred@s91904425.blix.com)
[22:59:23] <tforever> Any recommended ways of parsing keywords? I want to get my hands dirty with parsers a little bit
[23:00:21] *** Quits: floppy-disk (~floppy-di@p200300df1f0a4401ac6b9f025db561b4.dip0.t-ipconnect.de) (Quit: Client closed)
[23:00:51] *** Joins: arinov (~arinov@31.142.76.178)
[23:01:49] *** Quits: kadavul (~vazha@103.165.20.178) (Ping timeout: 240 seconds)
[23:01:58] <pragma-> tforever: character by character.
[23:03:29] <tforever> With the help of a tree-like data structure? I think i've seen that before but thought it'd be expensive in terms of computation
[23:04:13] *** Quits: arinov_ (~arinov@213.194.126.155) (Ping timeout: 240 seconds)
[23:08:32] *** Quits: tforever (~Terabyte@85.103.110.39) (Quit: Leaving)
[23:11:27] *** Joins: river (~My_user_n@tilde.team/user/river)
[23:12:12] <sham1> Well you don't have a tree-like data structure at first
[23:12:18] <sham1> You only have a stream of characters
[23:12:50] *** Quits: _mikey (~mikey@user/mikey/x-4335048) (Remote host closed the connection)
[23:13:17] *** Joins: _mikey (~mikey@user/mikey/x-4335048)
[23:13:25] <Klinda> but generally why is always the address sanitizer tha find something that is wrong? what also can cause something not addressed by the sanitizer?
[23:16:58] <Klinda> I see that asan is used for memory errors, what other bugs can trigger not memory related?
[23:18:17] *** Quits: constxd (~brad@142.134.38.68) (Ping timeout: 240 seconds)
[23:20:23] *** Parts: river (~My_user_n@tilde.team/user/river) (WeeChat 2.3)
[23:21:00] *** Quits: mahmutov (~mahmutov@37.155.21.112) (Ping timeout: 256 seconds)
[23:25:51] *** Joins: peacefulman (~paul@107-190-110-80.cpe.teksavvy.com)
[23:28:37] *** Joins: ouestbillie (~gallup@142.169.33.81)
[23:28:54] *** Joins: constxd (~brad@142.134.38.68)
[23:29:16] *** Quits: ouestbillie (~gallup@142.169.33.81) (Client Quit)
[23:29:33] *** Joins: ouestbillie (~gallup@142.169.33.81)
[23:31:46] *** Quits: cosimone (~user@2001:b07:ae5:db26:c24a:d20:4d91:1e20) (Ping timeout: 268 seconds)
[23:34:13] *** Quits: asdflkj_sh (asdflkj@bsdforall.org) (Ping timeout: 240 seconds)
[23:36:34] *** Joins: not_a_robot06 (~not_a_rob@2a01:4b00:8014:d900:28fb:9e9:490f:d7b7)
[23:39:17] *** Quits: Torr (~Torr@user/torr) (Remote host closed the connection)
[23:39:34] *** Quits: sabry (~sabry@197.37.72.225) (Ping timeout: 256 seconds)
[23:40:41] *** Quits: ouestbillie (~gallup@142.169.33.81) (Read error: Connection reset by peer)
[23:40:56] *** Quits: ioxzev1z (~ioxzev1z@user/ioxzev1z) (Quit: Leaving)
[23:41:47] *** Joins: tforever (~Terabyte@85.103.110.39)
[23:42:31] *** Joins: Juliu (~Juliu@2a02:810b:c640:3ec0:a98c:b4fd:85b3:2536)
[23:42:58] <wroathe> tforever: Using a state machine
[23:43:08] <wroathe> tforever: https://en.wikipedia.org/wiki/Finite-state_machine
[23:44:10] <not_a_robot06> This is the problem at hand: https://imgur.com/YbW0q0J.png. This is how I tried to solve it: https://clbin.com/scIcC . Yet whenever I run the program I get a number approaching 3.58683. What am I doing wrong? Sorry if this is a pretty noob question, but I haven't interacted with factorials or e in school, and I only know about factorials because why not.
[23:45:34] *** Joins: ouestbillie (~gallup@modemcable053.204-20-96.mc.videotron.ca)
[23:45:49] *** Quits: rany (~rany@user/rany) (Quit: The Lounge - https://thelounge.chat)
[23:46:33] *** Joins: rany (~rany@user/rany)
[23:46:33] *** Quits: Windshield (~Windshiel@120.20.68.236) (Read error: Connection reset by peer)
[23:46:39] *** Joins: Windshield_ (~Windshiel@120.20.68.236)
[23:47:49] *** Quits: wroathe (~wroathe@user/wroathe) (Ping timeout: 240 seconds)
[23:53:21] *** Quits: duuude (~user@user/duuude) (Ping timeout: 268 seconds)
[23:53:42] <pragma-> not_a_robot06: I don't know anything about the math, but the convention for indice variables goes i, j, k rather than i, i_2, i_3.
[23:54:05] <not_a_robot06> pragma-: ah, that's helpful, thanks
[23:54:52] *** Joins: wroathe (~wroathe@206-55-188-8.fttp.usinternet.com)
[23:54:53] *** Quits: wroathe (~wroathe@206-55-188-8.fttp.usinternet.com) (Changing host)
[23:54:53] *** Joins: wroathe (~wroathe@user/wroathe)
[23:55:24] *** Quits: tforever (~Terabyte@85.103.110.39) (Quit: Leaving)
[23:55:42] *** Quits: ___nick___ (~quassel@cpc68286-cdif17-2-0-cust533.5-1.cable.virginm.net) (Quit: https://quassel-irc.org - Chat comfortably. Anywhere.)
[23:56:09] *** Joins: duuude (~user@user/duuude)
[23:57:10] *** Joins: ___nick___ (~quassel@cpc68286-cdif17-2-0-cust533.5-1.cable.virginm.net)
[23:57:14] <not_a_robot06> well, I have to go now, ig I'll just ask this question again tommorow or something
[23:57:18] *** Quits: not_a_robot06 (~not_a_rob@2a01:4b00:8014:d900:28fb:9e9:490f:d7b7) (Quit: Leaving)
[23:57:34] *** Quits: ___nick___ (~quassel@cpc68286-cdif17-2-0-cust533.5-1.cable.virginm.net) (Client Quit)
[23:59:03] *** Joins: ___nick___ (~quassel@cpc68286-cdif17-2-0-cust533.5-1.cable.virginm.net)
