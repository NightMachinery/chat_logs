[00:05:37] *** Joins: ahmedelg1 (~ahmedelga@77-164-236-89.fixed.kpn.net)
[00:07:57] *** Quits: ahmedelgabri (~ahmedelga@2a02-a446-d88a-1-2c29-a6a3-3b70-fb9f.fixed6.kpn.net) (Ping timeout: 240 seconds)
[00:17:37] *** Joins: src (~src@user/src)
[00:26:49] *** Quits: t3nj1n (~t3nj1n@pool-173-52-219-149.nycmny.fios.verizon.net) (Ping timeout: 256 seconds)
[00:27:22] *** Joins: mintoyatsu (~mint@user/mintoyatsu)
[00:28:25] *** Quits: r3m (~launch@user/r3m) (Quit: WeeChat 3.5-dev)
[00:28:51] *** Joins: r3m (~launch@user/r3m)
[00:31:51] *** Joins: lavaball (felix@31.204.155.215)
[00:35:37] *** Quits: r3m (~launch@user/r3m) (Quit: WeeChat 3.5-dev)
[00:35:57] *** Joins: r3m (~launch@user/r3m)
[00:37:22] *** Quits: jelly (jelly@user/jelly) (Ping timeout: 260 seconds)
[00:39:00] *** Quits: LuKaRo (~LuKaRo@p200300dfa712f14b7d1690af90762b47.dip0.t-ipconnect.de) (Ping timeout: 240 seconds)
[00:41:01] *** Joins: LuKaRo (~LuKaRo@p57b157e5.dip0.t-ipconnect.de)
[00:41:33] *** Quits: dandyn (~dandyn@user/dandyn) (Ping timeout: 256 seconds)
[00:43:20] *** Joins: jmdaemon (~jmdaemon@user/jmdaemon)
[00:47:43] *** Joins: jelly (jelly@user/jelly)
[00:58:25] *** Quits: jelly (jelly@user/jelly) (Excess Flood)
[00:59:59] *** Quits: lavaball (felix@31.204.155.215) (Remote host closed the connection)
[01:00:46] *** Joins: daoudr (~daoudr@178.197.200.184)
[01:19:13] *** Quits: src (~src@user/src) (Quit: Leaving)
[01:29:10] *** Joins: jelly (~me@user/jelly)
[01:31:25] *** Quits: cerill (~cerill@h-155-4-198-153.A785.priv.bahnhof.se) (Quit: Client closed)
[01:37:59] *** Quits: dmaislin (~dmaislin@047-233-046-055.res.spectrum.com) (Quit: My MacBook has gone to sleep. ZZZzzz…)
[02:03:28] *** Quits: re (~user@user/re) (Remote host closed the connection)
[02:09:12] *** Joins: dmaislin (~dmaislin@047-233-046-055.res.spectrum.com)
[02:18:34] *** Quits: daoudr (~daoudr@178.197.200.184) (Quit: Leaving)
[02:26:48] *** Joins: re101-deer-89 (~re101-dee@103.214.45.169)
[02:32:03] *** Joins: imcdonald (imcdona@fsf/member/imcdona)
[02:33:02] <re101-deer-89> Hello, I have made a regex here https://regex101.com/r/PohtmN/1  and wanted some assistance witih inverting the regex selection so it selects the text that is currently not selected
[02:33:24] *** Quits: dmaislin (~dmaislin@047-233-046-055.res.spectrum.com) (Quit: My MacBook has gone to sleep. ZZZzzz…)
[02:33:24] *** Quits: imcdona (imcdona@fsf/member/imcdona) (Ping timeout: 240 seconds)
[02:33:48] <re101-deer-89> i am using it for python
[02:34:22] *** Joins: imcdona (imcdona@fsf/member/imcdona)
[02:37:24] *** Quits: imcdonald (imcdona@fsf/member/imcdona) (Ping timeout: 240 seconds)
[02:39:10] <OnlineCop> re101-deer-89: Empty lines as well?
[02:40:33] <OnlineCop> https://regex101.com/r/PohtmN/2
[02:41:21] *** Joins: imcdonald (imcdona@fsf/member/imcdona)
[02:41:25] *** Quits: imcdona (imcdona@fsf/member/imcdona) (Ping timeout: 240 seconds)
[02:41:38] <OnlineCop> https://regex101.com/r/PohtmN/3 has a few more cases to test that it works.
[02:45:33] <re101-deer-89> wow thank you so much for that, exactly what I was looking for <3
[02:52:23] *** Quits: palasso (~palasso@user/palasso) (Remote host closed the connection)
[03:12:59] *** Joins: dmaislin (~dmaislin@047-233-046-055.res.spectrum.com)
[03:14:04] *** Quits: dmaislin (~dmaislin@047-233-046-055.res.spectrum.com) (Client Quit)
[03:17:04] *** Joins: herjazz (~herjazz@p10513117-ipngn24101marunouchi.tokyo.ocn.ne.jp)
[03:28:42] *** Quits: jmdaemon (~jmdaemon@user/jmdaemon) (Ping timeout: 250 seconds)
[04:08:21] *** Quits: KevinX (~KevinX@user/KevinX) (Ping timeout: 252 seconds)
[04:10:30] *** Joins: KevinX (~KevinX@user/KevinX)
[04:19:32] *** Joins: jmdaemon (~jmdaemon@user/jmdaemon)
[04:47:57] *** Quits: jmdaemon (~jmdaemon@user/jmdaemon) (Ping timeout: 252 seconds)
[05:07:00] *** Quits: defjam (~eb0t@90.210.89.170) (Ping timeout: 240 seconds)
[05:09:04] *** Joins: defjam (~eb0t@90.203.123.221)
[05:12:43] *** Joins: jmdaemon (~jmdaemon@user/jmdaemon)
[05:32:17] *** Quits: maetthew (~maetthew@user/maetthew) (Quit: ZNC 1.8.2 - https://znc.in)
[05:35:04] *** Joins: maetthew (~maetthew@c188-150-159-232.bredband.tele2.se)
[05:35:04] *** Quits: maetthew (~maetthew@c188-150-159-232.bredband.tele2.se) (Changing host)
[05:35:04] *** Joins: maetthew (~maetthew@user/maetthew)
[05:39:03] *** Quits: re101-deer-89 (~re101-dee@103.214.45.169) (Ping timeout: 256 seconds)
[05:44:56] *** Joins: ttree (~ttree0@c-73-97-116-42.hsd1.wa.comcast.net)
[05:57:59] *** Quits: p-i-_ (~Ohmu@2403:6200:8978:6666:45c9:615b:ded8:9d14) (Remote host closed the connection)
[05:59:16] *** Joins: p-i- (~Ohmu@2403:6200:8978:6666:911e:d533:e490:181e)
[06:25:05] *** Joins: src (~src@user/src)
[07:17:58] *** Joins: adeliktas4 (~adeliktas@i59F52E53.versanet.de)
[07:19:25] *** Quits: adeliktas (~adeliktas@i59F526C9.versanet.de) (Ping timeout: 240 seconds)
[07:19:25] *** adeliktas4 is now known as adeliktas
[07:37:54] *** Quits: src (~src@user/src) (Ping timeout: 252 seconds)
[07:43:15] *** Joins: [diablo]0 (~diablo]@user/diablo/x-9068044)
[07:45:10] *** Quits: [diablo] (~diablo]@user/diablo/x-9068044) (Ping timeout: 256 seconds)
[07:45:10] *** [diablo]0 is now known as [diablo]
[08:07:00] *** Quits: jmdaemon (~jmdaemon@user/jmdaemon) (Ping timeout: 240 seconds)
[08:26:12] *** Joins: jmdaemon (~jmdaemon@user/jmdaemon)
[08:27:46] *** Joins: src (~src@user/src)
[08:32:08] *** Quits: src (~src@user/src) (Client Quit)
[09:08:45] *** Joins: t3nj1n (~t3nj1n@pool-173-52-219-149.nycmny.fios.verizon.net)
[09:19:54] *** Quits: re101-dog-11 (~re101-dog@146.127.253.14) (Quit: Client closed)
[09:23:33] *** Joins: ravan (~ravan@user/ravan)
[09:34:32] *** Quits: t3nj1n (~t3nj1n@pool-173-52-219-149.nycmny.fios.verizon.net) (Ping timeout: 256 seconds)
[09:35:11] *** Joins: t3nj1n (~t3nj1n@pool-173-52-219-149.nycmny.fios.verizon.net)
[09:35:16] *** Joins: t3nj1n_ (~t3nj1n@pool-173-52-219-149.nycmny.fios.verizon.net)
[09:35:24] *** Quits: t3nj1n_ (~t3nj1n@pool-173-52-219-149.nycmny.fios.verizon.net) (Remote host closed the connection)
[09:46:56] *** Quits: jmdaemon (~jmdaemon@user/jmdaemon) (Quit: ZNC 1.8.2 - https://znc.in)
[09:48:36] *** Joins: jmdaemon (~jmdaemon@user/jmdaemon)
[09:48:48] *** Quits: ttree (~ttree0@c-73-97-116-42.hsd1.wa.comcast.net) (Ping timeout: 252 seconds)
[10:09:40] *** Quits: txtsd (~txtsd@user/txtsd) (Ping timeout: 256 seconds)
[10:10:31] *** Joins: rvalue- (~rvalue@user/rvalue)
[10:10:47] *** Quits: rvalue (~rvalue@user/rvalue) (Ping timeout: 265 seconds)
[10:13:56] *** rvalue- is now known as rvalue
[10:14:46] *** Joins: txtsd (~txtsd@user/txtsd)
[10:19:13] *** Joins: p-i-_ (~Ohmu@2403:6200:8978:6666:45c9:615b:ded8:9d14)
[10:21:52] *** Quits: rebot (~death@about/regex/rebot) (Ping timeout: 250 seconds)
[10:21:56] *** Quits: digitok (~death@about/regex/digitok) (Ping timeout: 260 seconds)
[10:22:17] *** Quits: p-i- (~Ohmu@2403:6200:8978:6666:911e:d533:e490:181e) (Ping timeout: 240 seconds)
[10:45:56] *** Joins: baahubali (~baahubali@2405:201:401e:fa1e:7505:a013:e214:afcc)
[10:49:36] <baahubali> I felt I was good at regexes learning all negative lookahead and stuff until this came: https://regex101.com/r/oYbl0f/1
[10:49:37] <baahubali> I cannot understand how this is matching with 6 x when the {2} states that the (xx)+ token should match 2 times.
[10:49:37] <baahubali> Full question here, basically i wanted to match x that repeats power of 2 times: https://www.codeproject.com/Forums/1580841/Regular-Expressions?df=90&mpp=25&sort=Position&spc=Relaxed&select=5865496&fid=1580841&tid=5865496
[10:59:55] *** Quits: cthulchu (~Cthulchu@69-172-160-196.cable.teksavvy.com) (Ping timeout: 268 seconds)
[11:20:52] <Andrio> baahubali, each iteration of the group ((xx)+) may match more than two 'x's, and may match different numbers of them.
[11:24:58] *** Joins: palasso (~palasso@user/palasso)
[11:29:44] <purplex> yeah (xx)+ matches 6 x's, {2} then can match a pair of 4 x's and 2 x's meaning 6 in total
[11:34:44] *** Quits: unluckyshrubbery (~unluckysh@45-19-33-188.lightspeed.livnmi.sbcglobal.net) (Quit: ZNC 1.8.2 - https://znc.in)
[11:43:43] *** Quits: karakedi (~eAC53C340@user/karakedi) (Remote host closed the connection)
[11:54:14] *** Joins: cerill (~cerill@h-155-4-198-153.A785.priv.bahnhof.se)
[11:55:43] *** Quits: p-i-_ (~Ohmu@2403:6200:8978:6666:45c9:615b:ded8:9d14) (Remote host closed the connection)
[11:56:18] *** Joins: p-i- (~Ohmu@2403:6200:8978:6666:519b:4fb9:c7e3:562)
[12:04:07] *** Joins: re101-dingo-6 (~re101-din@2a01:b740:13d5::461)
[12:04:36] <re101-dingo-6> hi I want help on finding only first handle say @apple from the text https://regex101.com/r/naJnmc/1
[12:09:08] <re101-dingo-6> can some one help
[12:18:24] *** Joins: karakedi (~eAC53C340@user/karakedi)
[12:46:37] *** Quits: jmdaemon (~jmdaemon@user/jmdaemon) (Read error: Connection reset by peer)
[12:47:58] *** Joins: jmdaemon (~jmdaemon@user/jmdaemon)
[13:00:46] *** Quits: ravan (~ravan@user/ravan) (Remote host closed the connection)
[13:03:17] *** Quits: re101-dingo-6 (~re101-din@2a01:b740:13d5::461) (Quit: Client closed)
[13:05:49] *** Joins: lavaball (felix@31.204.155.215)
[13:20:20] *** Joins: krappix (~krappix@nat-eduroam-76-gw-01-lne.lille.inria.fr)
[13:23:18] *** Joins: loganlee (~Thunderbi@user/loganlee)
[13:28:57] *** Joins: unluckyshrubbery (~unluckysh@45-19-33-188.lightspeed.livnmi.sbcglobal.net)
[13:38:25] *** Quits: loganlee (~Thunderbi@user/loganlee) (Quit: loganlee)
[13:44:03] *** Joins: p-i-_ (~Ohmu@2403:6200:8978:6666:45c9:615b:ded8:9d14)
[13:47:30] *** Quits: p-i- (~Ohmu@2403:6200:8978:6666:519b:4fb9:c7e3:562) (Ping timeout: 250 seconds)
[14:02:49] *** Quits: AMG (ghebo@user/amg) (Quit: Quit)
[14:12:18] *** Quits: monoxane (~monoxane@user/monoxane) (Quit: estoy fuera)
[14:15:51] *** Quits: cerill (~cerill@h-155-4-198-153.A785.priv.bahnhof.se) (Ping timeout: 256 seconds)
[14:20:54] *** Quits: jmdaemon (~jmdaemon@user/jmdaemon) (Read error: Connection reset by peer)
[14:22:11] *** Joins: jmdaemon (~jmdaemon@user/jmdaemon)
[14:25:26] *** Joins: jinsun__ (~jinsun@user/jinsun)
[14:29:12] *** Quits: jinsun (~jinsun@user/jinsun) (Ping timeout: 272 seconds)
[14:31:04] *** Joins: AMG (ghebo@2605:6400:c847:1449::9441)
[14:35:07] *** Quits: krappix (~krappix@nat-eduroam-76-gw-01-lne.lille.inria.fr) (Ping timeout: 256 seconds)
[14:36:54] *** Quits: mintoyatsu (~mint@user/mintoyatsu) (Remote host closed the connection)
[14:43:22] *** Quits: txtsd (~txtsd@user/txtsd) (Ping timeout: 256 seconds)
[14:57:21] *** Quits: jmdaemon (~jmdaemon@user/jmdaemon) (Ping timeout: 252 seconds)
[15:08:22] *** Joins: re101-tapir-12 (~re101-tap@193.137.92.20)
[15:08:32] <re101-tapir-12> hey guys
[15:09:04] <re101-tapir-12> I need help with task 16 please, can anybody help?
[15:11:54] <re101-tapir-12> how do i generate a link with the code and sample?
[15:14:00] <re101-tapir-12> https://regex101.com/r/EVSXfW/1 I need my regex to match a word when the string has that word repeated 2 more times only
[15:17:15] <Andrio> What is it supposed to do with a word repeated 4 times?
[15:17:51] <re101-tapir-12> match on the 2nd occurance
[15:17:52] <re101-tapir-12> word >word< word word
[15:18:55] <Andrio> Then you'll need to add a lookbehind to make sure there isn't a further repetition after the lookahead.
[15:19:10] <Andrio> er, a negative lookahead, not a lookbehind
[15:20:09] <re101-tapir-12> im going to try on that
[15:20:10] <re101-tapir-12> thanks
[15:20:31] *** Quits: re101-tapir-12 (~re101-tap@193.137.92.20) (Quit: Client closed)
[15:31:49] *** Quits: Tobbi_ (~Thunderbi@31.209.188.226) (Quit: Tobbi_)
[15:32:19] *** Joins: Tobbi_ (~Thunderbi@31.209.188.226)
[15:39:27] *** Quits: rvalue (~rvalue@user/rvalue) (Remote host closed the connection)
[15:41:17] *** Joins: rvalue (~rvalue@user/rvalue)
[15:53:20] *** Joins: re (~user@user/re)
[15:57:34] *** Quits: p-i-_ (~Ohmu@2403:6200:8978:6666:45c9:615b:ded8:9d14) (Remote host closed the connection)
[15:58:07] *** Joins: p-i- (~Ohmu@2403:6200:8978:6666:9c86:74ff:8ed4:b258)
[16:10:46] *** Joins: dmaislin (~dmaislin@047-233-046-055.res.spectrum.com)
[16:11:04] *** Joins: p-i-_ (~Ohmu@2403:6200:8978:6666:45c9:615b:ded8:9d14)
[16:12:48] *** Joins: dmaislin_ (~dmaislin@047-233-046-055.res.spectrum.com)
[16:14:12] *** Quits: p-i- (~Ohmu@2403:6200:8978:6666:9c86:74ff:8ed4:b258) (Ping timeout: 240 seconds)
[16:15:36] *** Quits: dmaislin (~dmaislin@047-233-046-055.res.spectrum.com) (Ping timeout: 272 seconds)
[16:18:59] *** Joins: AmR (~AmREiSa@156.199.236.198)
[16:33:22] *** Joins: digitok (~death@about/regex/digitok)
[16:33:23] *** Joins: rebot (~death@about/regex/rebot)
[16:33:23] *** ChanServ sets mode: +o rebot
[16:44:14] *** Joins: fandre1986 (~fandre198@62.67.214.101)
[16:44:53] <baahubali> Hey everyone, thanks for answering this:
[16:44:54] <baahubali> I felt I was good at regexes learning all negative lookahead and stuff until this came: https://regex101.com/r/oYbl0f/1
[16:44:54] <baahubali> I cannot understand how this is matching with 6 x when the {2} states that the (xx)+ token should match 2 times.
[16:44:55] <baahubali> Full question here, basically i wanted to match x that repeats power of 2 times: https://www.codeproject.com/Forums/1580841/Regular-Expressions?df=90&mpp=25&sort=Position&spc=Relaxe...
[16:44:55] *** rebot sets mode: +q baahubali!*@*
[16:44:56] <rebot> 14baahubali: For regex help, please share a https://regex101.com/ link. To share other data, see !paste. You will be unmuted in 30s.
[16:45:25] *** rebot sets mode: -q baahubali!*@*
[16:45:29] <baahubali> https://regex101.com/r/oYbl0f/1
[16:46:45] <baahubali> I figured out that, (xx)+ will once match 2 (xx) and then 1 (xx) and {2} matches because we have now two tokens 2 (xx) and 1 (xx)
[16:48:44] <baahubali> But how do I modify ^((xx)+){2}$ such that I make sure combination of (xx) repeated any number of times are repeated only twice. Actually as stated in previous message, I want to make a regex that matches only if x repeats power of n times.
[16:49:23] <baahubali> So any of the experts here can answer this:
[16:49:23] <baahubali> Regex that matches only if x repeats power of n times.
[16:49:24] <baahubali> that will help!
[16:49:35] <baahubali> n = 2 for me now
[16:56:37] <baahubali> !paste
[16:56:37] <perlbot> Please use https://bpa.st/ for sharing large amounts of code/data, or https://ideone.com/ to share an executable code sample.
[17:01:57] <digitok> :|
[17:03:47] <digitok> i have no idea tbh
[17:04:06] <digitok> pls update your link with 3 examples that should match and 3 that should not match
[17:04:19] <digitok> from that, i can figure it out
[17:07:01] <baahubali> Regex that matches only if x repeats power of n times.
[17:07:02] <baahubali> What I have tried: https://regex101.com/r/7C2tFE/1 (given should match and should not match with explanation, ignore the highlights since I have not figured out the regex)
[17:07:18] <baahubali> Here, x = a
[17:07:19] <baahubali> n = 2
[17:09:39] <digitok> i see. well, regex has no concept of math
[17:09:57] <digitok> it simply matches text
[17:15:56] <baahubali> Something like this can be shortened, no? ^(((a{2}){1|2}){1|2}){1|2}....$
[17:15:57] <baahubali> Here {1|2} is wrong, what want to say is that previous token either repeats 1 time or 2 times, but not combination as mentioned above by Andrio
[17:15:57] <baahubali> And ... represents i want an idea to repeat it
[17:16:05] *** Joins: lord_daemon (~u0_a241@200.149.242.22)
[17:18:07] <purplex> maybe try building a finite automata if its possible then you can do it, i mean when it comes to some math e.g. multiples of 3, 5.. i usually start there
[17:19:42] <purplex> is it just for fun or do you really need it..
[17:20:20] <purplex> if its latter then i'd suggest looking at programming language
[17:22:30] *** Joins: re101-collie-80 (~re101-col@165.225.73.19)
[17:22:38] *** Quits: re101-collie-80 (~re101-col@165.225.73.19) (Client Quit)
[17:23:08] <baahubali> doing it via language is easy i know, it is kind of challenge and it has a solution i know
[17:24:25] <purplex> is it a challenge for us? (if you mean you know the solution)
[17:27:02] <digitok> even your example would not match "a", would it?
[17:27:58] <baahubali> is it a challenge for us? yes but including me :| i cannot see the solution before trying and i am trying since last few days.
[17:28:44] <baahubali> even your example would not match "a", would it? Yeah, that can be tweaked, the issue is about expanding it, change it: ^(((a{1|2}){1|2}){1|2}){1|2}....$
[17:28:53] <purplex> you have a solution but you refuse to see it before trying?
[17:29:23] <baahubali> I get no points by seeing the solution directly, it is kind of test before the main test.
[17:30:12] <purplex> you can give us the solution without seeing it and then we'll tell you.. sounds fair i guess :p
[17:31:04] <purplex> that means you also get no points for asking us lol
[17:32:54] <baahubali> Hahaha.
[17:34:06] <baahubali> The challenge has so many questions like these: https://www.asuswebstorage.com/navigate/a/#/s/EB736E825DC84EFF9B53453F1C963CC6W
[17:34:07] <baahubali> Yes I am trying to solve it myself, I came here to ask my doubt about my regex and I feel grateful you people helped me on it! If it interests you, you can check the attachment, it has pretty much challenging regexes!
[17:35:02] *** Quits: epony (epony@user/epony) (Ping timeout: 240 seconds)
[17:46:16] <VectorX> looking for a way to optimize this https://regex101.com/r/xGddYg/1
[17:47:07] *** Joins: re101-dog-11 (~re101-dog@146.127.253.13)
[17:47:47] <VectorX> I only really need a true or false, 54-58 should not match
[17:48:58] <digitok> why
[17:49:08] <VectorX> in a nutshell, match the php function required, then in parenthesis, first param is string wp
[17:49:44] <VectorX> where wp is variable
[17:51:07] <digitok> cool
[17:51:12] <digitok> now answer my q
[17:52:11] <VectorX> 54-58 does not have an ending )
[17:52:37] <VectorX> just making sure the first parameter to those functions is a string from a list
[17:53:00] <digitok> you mentioned nothing about it needed ) though
[17:53:02] <digitok> needing*
[17:53:24] <VectorX> then in parenthesis
[17:53:30] <VectorX> but sure ;) 
[17:53:33] <digitok> -_-
[17:53:40] <digitok> so optimise and fix
[17:53:47] <VectorX> sounds good
[17:54:22] <VectorX> oh crap JS
[17:54:41] <digitok> so what needs to be allowed for inside the parens
[17:54:55] <digitok> just word chars, spaces and quotes?
[17:55:37] <digitok> and comma
[17:55:52] <digitok> or just anything except ) and ;
[17:56:11] <purplex> baahubali: which challenges have you solved before this?
[17:56:52] <baahubali> @pur
[17:56:59] <digitok> 07VectorX, maybe https://regex101.com/r/xGddYg/3 dunno
[17:57:31] <baahubali> purplex Just got started with the power of 2 one, I cant get it out of my head, it is hurting my ego now! :D
[17:57:51] <VectorX> format is functionname('string', something else);  bold is optional, and dont really care about that part could be, 'string', "string",  $var->something or function(){  some code }
[17:58:33] <VectorX> digitok sorry missed one important example, as I was typing the above, added to top https://regex101.com/r/xGddYg/4
[17:59:28] <digitok> i will slap you so bad
[17:59:47] <VectorX> should i also bring a paddle
[18:00:16] <digitok> are you telling me it needs to search for a closing ) where there could be nested parens inside?
[18:00:34] <VectorX> digitok yes
[18:00:49] <VectorX> whole function in there as second param
[18:01:14] *** Quits: herjazz (~herjazz@p10513117-ipngn24101marunouchi.tokyo.ocn.ne.jp) (Quit: leaving)
[18:01:15] <VectorX> which could also have similar calls inside
[18:02:34] <digitok> !parser
[18:02:34] <perlbot> Suggested HTML parsers: PHP: DOMDocument, Ruby: Nokogiri, JavaScript: querySelector
[18:02:42] <digitok> !useaparser
[18:02:51] <digitok> :x
[18:04:11] <digitok> js does not do recursion bro
[18:07:12] <VectorX> its in nodejs if that helps any
[18:08:41] <digitok> nah
[18:14:08] <purplex> baahubali: you'll need to come up with some plan with questions like this (thats why i asked if you solved any before), like identifying a pattern of numbers followed by power of 2 series and only then you can get somewhere with it
[18:17:53] <baahubali> purplex I was answering regarding the zip, this was first question in the zip, I have worked with many regexes before, for this I have tried what I sent in the link and after getting responses here, I want something like this: ^(((a{1|2}){1|2}){1|2}){1|2}....$
[18:17:53] <baahubali> Original question: Regex that matches only if x repeats power of n times. x=a, n=2
[18:18:00] *** Quits: dmaislin_ (~dmaislin@047-233-046-055.res.spectrum.com) (Quit: Textual IRC Client: www.textualapp.com)
[18:18:06] <baahubali> And yup, now I will move to next questions.
[18:20:05] *** Joins: daoudr (~daoudr@2a02:1210:52f9:b500:5043:184:7f47:92c1)
[18:25:08] <baahubali> Why am I now starting to think that they don't want a generalized solution but just to match the strings given only :D
[18:27:17] <baahubali> See this: https://www.asuswebstorage.com/navigate/a/#/s/9E41638F795246938A26D8498DF61C96W
[18:27:17] <baahubali> I think they only need to build regex for these string not the pattern because I don't think there is simple way to this and all other questions are very simple. Thanks for your time, I think I should be able to make something now
[18:30:57] <digitok> i am gonna mess with this power thing tomorrow
[18:30:59] *** Joins: epony (epony@user/epony)
[18:31:06] <digitok> seems like it should be doable but giving me a headache lol
[18:33:17] <OnlineCop> baahubali: {1|2} should be using a comma: {1,2}
[18:33:39] <purplex> i'd have a migraine if regex god has a headache
[18:36:37] <baahubali> OnlineCop {1|2} should be using a comma: {1,2} > I know that but what i essentially mean that the previous expansion of token should match 1 or 2 times only not combination
[18:36:38] <baahubali> for example, (  (xx)+ ){2} matches 6 x also because 2 (xx) and 1 (xx) are 2 tokens, what i want is, if xx expands twice, then {2} should mean that only xx matches twice not xx twice and xx once to make it 2 groups
[18:36:38] <baahubali> LOL
[18:37:00] <baahubali> digitok purplex It is challenging then, no? :P
[18:37:24] <OnlineCop> Once you've captured the text, \1 it.
[18:38:11] <OnlineCop> The requirements from that screenshot look like it doesn't want `{1,2}` though: just `{2}`.
[18:38:32] <OnlineCop> Then just have an exception for ^x$
[18:39:34] <baahubali> Lemme ask you in a different way @onl
[18:39:39] <baahubali> OnlineCop
[18:40:23] <baahubali> How do you change the regex (  (xx)+ ){2} such that it matches xx, xxxx, xxxxxxxx but not xxxxxx (6 times)
[18:41:40] <baahubali> Essentially  (  (xx)+ ){2}  is expanding (xx) twice and then once to count 2 tokens. What I want is if xx+ expands to two xx, outer {2} should repeat these two xx only.
[18:41:40] <baahubali> Hope you understand digitok @pu
[18:42:44] <digitok> 07OnlineCop, basically the number of "a" must be a power of 2
[18:42:44] *** Quits: Alternity (~Alternity@user/alternity) (Quit: Ping timeout (120 seconds))
[18:43:17] *** Joins: Alternity (~Alternity@user/alternity)
[18:47:23] *** Quits: fandre1986 (~fandre198@62.67.214.101) (Quit: Connection closed)
[18:56:50] *** Quits: daoudr (~daoudr@2a02:1210:52f9:b500:5043:184:7f47:92c1) (Quit: Leaving)
[18:59:10] <OnlineCop> I remember doing that particular regex. In fact, I made one of the regex sudoku puzzles to pay homage to a certain, eh... hacker.
[18:59:34] <OnlineCop> That site only allowed JS solutions though, right?
[19:01:06] <OnlineCop> Mine was long these lines: https://regex101.com/r/CrRFov/1
[19:02:16] <OnlineCop> With 4 levels of groups, this matches 2^4 (16) a's. To match their 1024, you need 10 levels.
[19:02:23] *** Joins: timmfoo (~timm@user/timm)
[19:02:23] *** timmfoo is now known as f00
[19:03:26] *** Quits: SirScott (~SirScott@c-67-176-100-163.hsd1.co.comcast.net) (Quit: The Lounge - https://thelounge.chat)
[19:03:57] *** Joins: SirScott (~SirScott@c-67-176-100-163.hsd1.co.comcast.net)
[19:12:03] <baahubali> Wow OnlineCop
[19:12:14] <OnlineCop> I mean, it's not pretty.
[19:12:27] <OnlineCop> Possible? Sure. Pleasant to work with? Meh...
[19:12:50] <OnlineCop> A lot easier if the language allowed (?-1) instead of \6? Definitely.
[19:13:48] <baahubali> I am hitting my head to find something that makes those groups repeat
[19:14:10] <baahubali> As someone said correctly, I should try first making a automata for power of 2, cannot find it on net either
[19:14:32] <OnlineCop> An automata? How do you mean?
[19:14:56] <OnlineCop> Python has that "string"x4 notation, doesn't it, which repeats "stringstringstringstring" ?
[19:15:10] <OnlineCop> Wouldn't it simply be that concept, recursive?
[19:16:18] <baahubali> An automata? How do you mean? > If i can build an automata for power of 2, i think we can think how to make a regex for it too, no?
[19:18:29] <OnlineCop> base2=log2(string.length); if (pow(2, base2) == string.length) { /* is a power of 2 */ }
[19:19:04] <baahubali> I know how to code for it, i was referring to build a automata to actually think how a regex can be made
[19:19:46] *** Quits: wbg (~wbg@user/wbg) (Quit: WeeChat 3.0)
[19:20:52] *** Joins: gareppa (~gareppa@user/gareppa)
[19:21:37] *** Quits: gareppa (~gareppa@user/gareppa) (Remote host closed the connection)
[19:23:43] *** Joins: re101-mukesh (~re101-muk@204.63.40.46)
[19:25:57] <VectorX> digitok updated with a few more examples, I might be able to use a PCRE lib in node if you can give solution https://regex101.com/r/xGddYg/5
[19:27:03] <VectorX> just using one example 32-37 should have 3 matches
[19:30:20] <OnlineCop> 'function()' contains '('
[19:30:30] <OnlineCop> `(?=[^();]*\))` says it shouldn't.
[19:30:47] <OnlineCop> If you do a recursive (...) brace match, that would fix it (PCRE or .NET only).
[19:32:01] <OnlineCop> Or if you only worry about a single top-level '()' with no nesting, add an OR to that.
[19:32:28] <re101-mukesh> Hi I am trying to validate US phone numbers and I would like to exclude last 4. Can anyone please help?
[19:32:29] <re101-mukesh> https://regex101.com/r/mdfEC9/1
[19:34:06] <OnlineCop> VectorX: Why should line 32 have a match? Wouldn't that mean that line 19 should match too (as they are similar)?
[19:35:06] <OnlineCop> re101-mukesh: You want to exclude lines 5 and 6 because they have different '-' vs '.' characters?
[19:35:18] <baahubali> re101-mukesh if you just want not to handle dots, just remove them, update here:  https://regex101.com/r/mdfEC9/2
[19:35:54] <OnlineCop> re101-mukesh: Capture the first `[\s.-]` and then reference it with \1 where the second one goes. If it finds the _same_ value, it's okay. If it finds a _different_ value, it won't match.
[19:36:55] <re101-mukesh> OnlineCop yes, since both are different I want to exclude them
[19:37:37] <re101-mukesh> OnlineCop can you please update he regex
[19:38:00] <OnlineCop> re101-mukesh: Line 1 has a space after ')' but then it uses a '-'. That should be valid. Line 2 has no space after it.
[19:38:04] <OnlineCop> That makes it a little more difficult.
[19:38:04] <baahubali> So you dont want to exclude them when both are same, so 123.456.7890 is valid too?
[19:38:17] <OnlineCop> ^ both dots would be valid.
[19:38:50] <re101-mukesh> baahubali yes that is valid too
[19:38:56] *** Joins: Guest50 (~Guest50@ec2-13-235-34-169.ap-south-1.compute.amazonaws.com)
[19:39:13] <baahubali> re101-mukesh just use OR then: https://regex101.com/r/mdfEC9/3
[19:39:26] <baahubali> one for dot, another one for -
[19:39:35] <re101-mukesh> OnlineCop I understand
[19:39:52] <OnlineCop> After the first 3 digits, is a space valid? That is, when there is no ')'. If that's valid, do you expect another space OR would a [.-] be allowed between the {3} and {4} digits?
[19:40:20] <re101-mukesh> yes space is valid too
[19:40:54] <OnlineCop> re101-mukesh: Could you update the TEST STRING on the page with a few more examples? "123 456 7890" (valid/invalid), "123 4567890" (valid/invalid), "123 456.7890 (valid/invalid). Just click "Update Regex" (instead of "Save Regex") and share the new link.
[19:41:06] *** Quits: Guest50 (~Guest50@ec2-13-235-34-169.ap-south-1.compute.amazonaws.com) (Client Quit)
[19:41:13] <re101-mukesh> ok
[19:41:58] <OnlineCop> Also: "123[space][space]4567890" <-- two spaces valid/invalid? "123.[space]456.7890" (valid/invalid)?
[19:42:20] <OnlineCop> You can block all the VALID numbers at the top, and in a new section, block all the INVALID numbers at the bottom.
[19:43:34] <OnlineCop> Also: "123.456 7890" (dot then space): valid/invalid?
[19:44:57] <OnlineCop> 123.4567890 (no 2nd '.'): valid/invalid?
[19:49:36] <re101-mukesh> If it has ') ' after 3 digits and then it can have any character after 6 digits else match the first delimiter with second one
[19:54:10] *** Joins: wbg (~wbg@home.zedat.fu-berlin.de)
[19:54:10] *** Quits: wbg (~wbg@home.zedat.fu-berlin.de) (Changing host)
[19:54:10] *** Joins: wbg (~wbg@user/wbg)
[20:02:03] <OnlineCop> Any reason you don't want to simply allow "anything" and just capture 10 digits?
[20:02:57] <OnlineCop> Also: Is this using PCRE/Python (using 'regex' module), Python (using 're' module), .NET, ECMAScript/Javascript, Java, ..?
[20:06:00] <re101-mukesh> I am using Java pattern matchers
[20:06:10] <OnlineCop> I'll switch to Java flavor then.
[20:06:52] <re101-mukesh> Myplan is to do that, simply allow numbers and do validation on frontend
[20:07:22] <OnlineCop> The last line on version /4, "123 355 3433": valid/invalid?
[20:07:28] <re101-mukesh> valid
[20:12:44] <OnlineCop> https://regex101.com/r/mdfEC9/5
[20:13:45] <OnlineCop> That took longer than I expected because Java's `/x` flag handles whitespace within `[...]` character groups differently than PCRE, and it wasn't matching `^\d{3}[space]` for some reason.
[20:14:08] <OnlineCop> Turns out that I have to `\ ` escape the whitespace in its character class too.
[20:17:07] <re101-mukesh> Thanks a lot
[20:17:14] <re101-mukesh> I think this is good
[20:17:28] <OnlineCop> 👍
[20:20:08] *** Quits: re101-mukesh (~re101-muk@204.63.40.46) (Quit: Client closed)
[20:36:16] *** Quits: lavaball (felix@31.204.155.215) (Remote host closed the connection)
[20:51:54] *** Joins: dandyn (~dandyn@user/dandyn)
[20:58:19] <VectorX> OnlineCop sorry had a meeting, yeah line 19-20 would have two matches
[20:59:16] <VectorX> format is functionname('string', something else);  bold is optional, and dont really care about that part could be, 'string', "string",  $var->something or function(){  some code }
[21:01:48] *** Joins: awmv (~awmv@mob-194-230-148-95.cgn.sunrise.net)
[21:02:08] *** Joins: cthulchu (~Cthulchu@69-172-160-196.cable.teksavvy.com)
[21:02:08] <OnlineCop> If you match `function(){` that contains nested add_action()s that currently match, do you want the outer add_action() or inner add_action()'s to match?
[21:02:09] *** Quits: lord_daemon (~u0_a241@200.149.242.22) (Ping timeout: 256 seconds)
[21:02:25] <VectorX> all of them
[21:02:57] <OnlineCop> If the outer one matches, its recursive nature will "consume" the contents of the {...} block
[21:03:52] <OnlineCop> You could do a lookahead to ensure that function(){...} is balanced, I suppose. Then when the lookahead returns, it will continue into the {... block and match within there.
[21:05:49] *** Joins: lord_daemon (~u0_a241@200.149.242.22)
[21:06:23] *** Quits: epony (epony@user/epony) (Read error: Connection reset by peer)
[21:06:45] *** Joins: epony (epony@user/epony)
[21:09:12] <VectorX> there is an example 74-78 where the function is not closed and should not match
[21:12:57] <OnlineCop> https://regex101.com/r/xGddYg/6 is totally ugly, so ignore it. I just want to know if it's getting close to the functionality you're after.
[21:15:00] <VectorX> looking good
[21:15:13] <OnlineCop> Edge cases would be 'quotes' or /*comments*/ containing those keywords.
[21:17:37] <VectorX> comments are fine, but quotes might be a bit iffy, but probably can ignore it for the momement
[21:18:59] <OnlineCop> Just write a few (?<s_quote>...) and (?<d_quote>...) definitions and then in the `[^\{\}}+` block, include those quotes so it stops on them, and add those (?&s_quote) and (?&d_quote) references as new alternations.
[21:19:40] <OnlineCop> Same thing with comment blocks: `//.*` or `/* ... */` as defines, then stop on the '/' character and match those comments.
[21:20:31] <VectorX> that should be fine
[21:28:31] *** Quits: awmv (~awmv@mob-194-230-148-95.cgn.sunrise.net) (Quit: Client closed)
[21:29:39] *** Quits: re101-dog-11 (~re101-dog@146.127.253.13) (Quit: Client closed)
[21:33:58] *** Joins: treble (~treble@user/treble)
[21:37:40] *** Quits: w0ng (~w0ng@103.1.212.92) (Ping timeout: 260 seconds)
[21:44:04] *** Quits: JanC (~janc@user/janc) (Read error: Connection reset by peer)
[21:44:26] *** Joins: JanC (~janc@user/janc)
[21:50:34] *** Quits: lord_daemon (~u0_a241@200.149.242.22) (Read error: Connection reset by peer)
[21:51:45] *** Joins: src (~src@user/src)
[21:53:46] *** Joins: lord_daemon (~u0_a241@200.149.242.22)
[22:00:21] *** Quits: baahubali (~baahubali@2405:201:401e:fa1e:7505:a013:e214:afcc) (Quit: Client closed)
[22:15:34] *** Joins: lavaball (felix@31.204.155.215)
[22:39:15] *** Quits: lavaball (felix@31.204.155.215) (Remote host closed the connection)
[22:43:28] *** Joins: regexnewb (~regexnewb@38.133.119.235)
[22:44:39] <regexnewb> Hey there. I was hoping someone would "sanity check" this regex. It's 100% working but I am wondering if I could accomplishing the same match without the use of capture vs non-capture groups.
[22:45:53] <regexnewb> https://regex101.com/r/MSeJea/1
[22:48:13] *** Joins: re101-fousek-71 (~re101-fou@alta.statkraft.no)
[22:49:04] <re101-fousek-71> Having a lot of trouble making a very small tweak to my regex
[22:49:14] <re101-fousek-71> Python flaboured
[22:50:23] <re101-fousek-71> Given the following regex
[22:50:24] <re101-fousek-71> "^(?P<scheme>[a-zA-Z]+)://(?:(?P<domain>[a-zA-Z_]+)(?:/(?P<subdomain>[a-zA-Z_]+)/(?:(?P<task>(?<=tasks/)\d+)/(?:case_(?P<case>\d+)/(?:scenario_(?P<scenario>\d+))?)?)?)?)/?(?P<object>[a-åA-Å0-9]*)\.(?P<attribute>[a-zA-Z0-9_]+)\.(?P<extension>[a-zA-Z]{3})"gm
[22:50:36] <re101-fousek-71> and the following 2 inputs
[22:50:38] <re101-fousek-71> myschema://stm/x11.big_long_thing.sdb
[22:50:43] <re101-fousek-71> myschema://stm/big_long_thing.sdb
[22:51:07] <OnlineCop> IRC is breaking up your regex. Could you post a regex101 link containing it?
[22:51:26] <re101-fousek-71> I will try, I am unable to see how I can share the regex101 link
[22:51:40] <OnlineCop> re101-fousek-71: Click 'save regex' in upper-left corner. It will give you a URL.
[22:51:49] <re101-fousek-71> Thank you <3
[22:51:50] <re101-fousek-71> https://regex101.com/r/ZUl9Vs/1
[22:51:56] <OnlineCop> Any updates to it, you can just click 'update regex' and it will increment the revision from /1 to /2, /3, etc.
[22:52:22] <OnlineCop> regexnewb: Are you guaranteed to have a '-' followed by a space every time?
[22:52:55] <re101-fousek-71> Given that regex, I am trying to make the object named group optional, so that "x11." could be left out of the string and still make the appropriate matches
[22:53:15] <re101-fousek-71> Hm, there should not be any '-' with a space as far as I am aware
[22:53:18] <OnlineCop> To make a group optional, append `?` immediately after its closing ')'
[22:53:36] <OnlineCop> That '-' question was for @regexnewb :)
[22:53:50] *** Quits: karakedi (~eAC53C340@user/karakedi) (Read error: Connection reset by peer)
[22:54:01] <regexnewb> OnlineCop I only care about the part in green.
[22:54:46] <regexnewb> So yes, the part I care about will always be preceded by \s-\s
[22:55:07] <OnlineCop> regexnewb: Right. `[^-]+` WILL cross newlines, so as long as your string/input doesn't contain newlines, this won't be a problem. Add "Router Identity: foo[newline] above it, and it may match too much.
[22:55:21] <re101-fousek-71> Ah I see, thank you. I have done that here https://regex101.com/r/ZUl9Vs/2
[22:55:21] <re101-fousek-71> The follow up issue would be that the period after it is also optional, i.e if there was not an object named group, then that particular period would not need to exist
[22:55:36] <re101-fousek-71> Adding a ? to make the period optional afterwards, will result in a mismatch of the extension later which also uses a period
[22:56:28] <OnlineCop> re101-fousek-71: In that case, you want to actually group both the capture group and the trailing period in a non-capture group, and then make THAT optional. Therefore, if it's found, the '.' is required too. If it is not found, neither is its '.'.
[22:57:15] <OnlineCop> Note that the ranges you have in this WILL break; they don't do what you expect: `(?P<object>[a-åA-Å0-9]*)`
[22:57:45] <regexnewb> OnlineCop so is match the entire and then only capturing the interested group the best way?
[22:57:48] <re101-fousek-71> Interesting, I will give it a go. Sadly this is not my regex but I am required to try modify it
[22:57:50] <OnlineCop> Hover over the `a-å` in regex101 and notice that it's going from 'a' (index 97) to 'å' (index 229).
[22:58:10] <regexnewb> Entire line*
[22:58:55] <re101-fousek-71> Oh yes, that is too big a range, the special norwegian characters will need to be added manually somehow
[22:59:15] <OnlineCop> regexnewb: If you're using PCRE, you can use `\K` to discard the matched text, so right before your `(.*)`: `Router Identity:[^-]+..\K(.*)`
[23:00:09] <regexnewb> OnlineCop holy sh*t that's it!
[23:00:18] <regexnewb> Lol ah man thank you so much.
[23:00:19] *** Joins: re101-ferret-16 (~re101-fer@162.93.80.8)
[23:00:48] <OnlineCop> regexnewb: You'll speed it up if you also use '^' to anchor the start of the line in some cases.
[23:01:09] <re101-ferret-16> I am looking for a pattern that tokenizes the string which has delimiter |
[23:01:15] <regexnewb> OnlineCop does that apply to my case here?
[23:01:18] <OnlineCop> That way, it ignores "Router Identity" if it's somewhere in the middle of the line, and each subsequent search will fail at all locations UNLESS it's at the beginning.
[23:01:36] *** re101-ferret-16 is now known as Avi
[23:01:54] *** Avi is now known as Avi7777
[23:02:08] <regexnewb> OnlineCop there will only ever be a single line containg "router identity" in each source. It's not multi-line.
[23:02:08] <OnlineCop> regexnewb: If you're only doing a few lines, it's not an issue. If you're parsing a large amount of text, '^' will usually speed things up quite a bit.
[23:02:18] <OnlineCop> Okay; you won't need it then.
[23:02:38] *** Quits: lord_daemon (~u0_a241@200.149.242.22) (Quit: :))
[23:02:43] <regexnewb> OnlineCop just for reference though how could I do it with ^?
[23:02:44] <re101-fousek-71> How does one formulate a "non capture group", I don't see this as an optional in the group constructs
[23:02:45] <OnlineCop> Avi7777: How do you want to tokenize a string with '|'? Which programming language are you doing this in?
[23:02:53] <Avi7777> Java
[23:03:09] <Avi7777> but I am looking for regex pattern
[23:03:18] <OnlineCop> regexnewb: Without the /m flag, ^ matches the beginning of the entire string only; with the /m flag, ^ matches at the beginning of each line.
[23:03:34] <OnlineCop> Avi7777: Sounds like you just want to .split('|') ?
[23:03:43] <Avi7777> exactly
[23:03:45] <regexnewb> re101-fousek-71 (?:everything in here)
[23:03:59] <re101-fousek-71> my thanks regexnewb
[23:04:30] <regexnewb> My pleasure
[23:04:44] <OnlineCop> Avi7777: Regex could be used, but if you don't know the number of '|' delimiters before-hand, you'll have to just do a "global" search and then take each of the results as one group.
[23:06:17] <Avi7777> example string looks like
[23:06:18] <Avi7777> hi|test|hello|bob
[23:06:18] <Avi7777> I need a pattern that accepts and tokenizes above example
[23:06:24] <OnlineCop> Avi7777: Question: If your delimiter is `|` and your text (like in the case of a CSV/TSV file) contains a '|' character, does it do anything special? With CSV, if text contains ',' then the column "quotes" it. And if those "quotes" need to contain a literal double quote, it has to "double "" quote" it.
[23:06:32] <OnlineCop> Search for \|
[23:06:53] <OnlineCop> The '|' character is special in regex, so escaping it either as \| or [|] will make it match a literal character.
[23:07:23] <OnlineCop> To match everything except those tokens (or newlines), use: [^|]+
[23:07:35] <OnlineCop> s/tokens/delimiters/
[23:07:35] <rebot> 14OnlineCop meant: To match everything except those 07delimiters14 (or newlines), use: [^|]+
[23:07:45] <OnlineCop> Derp: [^|\n]+
[23:07:55] <OnlineCop> "not |, not \n"
[23:08:41] <OnlineCop> Avi7777: https://regex101.com/r/kVzMiM/1
[23:09:14] <OnlineCop> Without the \n in there, `[^|]+` would give this strange artifact: https://regex101.com/r/kVzMiM/2
[23:10:16] *** Quits: regexnewb (~regexnewb@38.133.119.235) (Quit: Client closed)
[23:11:04] <Avi7777> actually (.*?)(?:\||$) this fit my usecase, but need to repeat
[23:11:37] <Avi7777> need help on that
[23:13:15] <Avi7777> https://regex101.com/r/bXvo4T/1
[23:15:22] <OnlineCop> Avi7777: Can there be 0 characters between delimiters?
[23:15:30] <Avi7777> yes
[23:15:58] <OnlineCop> Change the '+' to '*': `(?:[^|]*`
[23:17:25] <OnlineCop> https://regex101.com/r/bXvo4T/2
[23:18:01] <OnlineCop> I don't understand what you're attempting here, and what you want (or don't want) to match. Especially within that (?P<error>) group.
[23:19:21] <Avi7777> hi|test|hello|bob In this example the string should match with given regex and tokenize by delimiter
[23:21:43] <OnlineCop> There are multiple matches: those would be your "tokenized" values. Are you saying that you want to stop after a specific number of results?
[23:22:30] *** Quits: re101-fousek-71 (~re101-fou@alta.statkraft.no) (Quit: Client closed)
[23:23:15] <OnlineCop> The above regex is grabbing 3x "stuff" between '|' delimiters. You can't separate them unless you know before-hand how many "results" you want. So if you know you'll only want 3 results, make 3 capturing groups: one per `[^|]*`. If you need 5 results, make 5 capturing groups.
[23:23:27] <Avi7777> In the xample I mentioned, Initially it should match with hi| and give result token as hi
[23:23:27] <Avi7777> subsequently test| and result token as test etc...
[23:23:29] <OnlineCop> If you don't know ahead of time how many capturing groups you'll have... 
[23:24:25] <OnlineCop> Which regex engine/flavor are you using? PCRE or Python with the 'regex' module? Python with the 're' module? Java? ...
[23:24:32] <Avi7777> Java
[23:25:34] <OnlineCop> https://regex101.com/r/bXvo4T/3
[23:25:56] <OnlineCop> Sadly, though, regex can't "count" and know that it needs to stop after the 3rd successful match on the line.
[23:26:17] <OnlineCop> You'd need 3 (or 4, or 5, or ...) capturing groups for that.
[23:29:49] *** Joins: re101-baboon-3 (~re101-bab@148.168.96.5)
[23:30:08] <Avi7777> ohh
[23:30:15] <Avi7777> no otherway?
[23:30:42] <OnlineCop> Not with Java, no.
[23:30:53] <Avi7777> ok thanks
[23:31:02] <re101-baboon-3> Hi Everyone, is there any way that I can remove <h1><b>Document rejected</b></h1> from
[23:31:03] <re101-baboon-3> <div _ngcontent-bdf-c159="" class="subheading line-clamp" ng-reflect-ng-class="" ng-reflect-ng-style="[object Object]" style="text-decoration: none;"><p></p><h1><b>Document rejected</b></h1><br><p>Your Purchase receipt has been rejected. Please reupload the document as soon as possible.</p></div>
[23:31:16] <re101-baboon-3> using regex
[23:32:44] <re101-baboon-3> Let's put it in this way, please.
[23:32:45] <re101-baboon-3> Remove <h1><b>Pharmacy updated</b></h1> from
[23:32:45] <re101-baboon-3> "<p></p><h1><b>Pharmacy updated</b></h1> <p>Your preferred pharmacy has been updated and can be found in your profile.</p><br><p>If you need to change your preferred pharmacy, you can also do that in your profile.</p>"
[23:34:26] *** Joins: re101-donkey-22 (~re101-don@dhcp-077-251-073-084.chello.nl)
[23:34:35] <re101-donkey-22> hello
[23:34:43] <re101-donkey-22> regex is cool
[23:35:57] *** Quits: re101-donkey-22 (~re101-don@dhcp-077-251-073-084.chello.nl) (Client Quit)
[23:37:58] <OnlineCop> 👍
[23:38:59] <OnlineCop> re101-baboon-3: Does '<h1' contain attributes? Will it always be '<b>' or can there be whitespace in there? Exactly "Document rejected" text or "anything"?
[23:39:24] <OnlineCop> If that's the exact text, you don't even need regex: do an exact string match.
[23:39:50] <OnlineCop> https://regex101.com/r/WkHaDV/1
[23:49:47] *** Joins: karakedi (~eAC53C340@user/karakedi)
[23:50:24] *** Quits: src (~src@user/src) (Quit: Leaving)
[23:55:26] *** Joins: src (~src@user/src)
