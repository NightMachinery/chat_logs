[00:01:00] <djacobs> Can it be that running ./manage.py test is failing to see the actual models of the application?
[00:01:21] *** Joins: fikran (~fikran@user/fikran)
[00:01:33] <djacobs> cause i've noticed that upon running ./manage makemigrations/migrate he also doesn't detect the database!
[00:11:25] *** Joins: koperak (~koperak@user-5-173-139-43.play-internet.pl)
[00:11:25] *** Quits: koperak (~koperak@user-5-173-139-43.play-internet.pl) (Read error: Connection reset by peer)
[00:15:48] *** Joins: leElvyn (~leElvyn@user/leelvyn)
[00:17:02] <leElvyn> Hi, i have a simple nullable foreignKey in my model, but django admin is requiring it, so, why is that, and how can i fix that ?
[00:18:30] <GinFuyou> djacobs, test use a test db by default. But it should work close to what a production project should be
[00:18:47] <GinFuyou> leElvyn, have you set blank=True?
[00:19:40] *** Quits: pro_z (~pro_z@37.214.45.81) (Ping timeout: 240 seconds)
[00:19:50] <leElvyn> No, let me try that
[00:19:55] <leElvyn> why should it be ?
[00:20:59] <leElvyn> ok, thanks !
[00:21:02] *** Quits: mad_moses (~mad_moses@2a02:6d40:2349:6f01:cd64:dfc5:70f7:796c) (Remote host closed the connection)
[00:24:21] *** Quits: jug (~jug@user/jug) (Quit: WeeChat 3.2)
[00:24:48] <GinFuyou> null=True makes field nullable in DB, blank=True refers to how django forms behave.
[00:24:58] <nedbat> if I have the wrong password for my database, why would .save() silently succeed anyway?
[00:25:08] <leElvyn> ok, thanks
[00:25:26] <GinFuyou> nedbat, no you shouldn't be able to start you project at all
[00:26:05] <GinFuyou> may probably depend if you have uncommon backend\driver
[00:26:33] <nedbat> GinFuyou: this is with mysql, but i didn't have my router defined, so...?
[00:26:50] <moldy> nedbat: pretty sure you should get an error on connecting to the database
[00:26:55] <nedbat> GinFuyou: it's failing better now :)
[00:33:25] *** Quits: GiLgAmEzH (~gilgamezh@a210077.upc-a.chello.nl) (Ping timeout: 250 seconds)
[00:47:41] *** Joins: GiLgAmEzH (~gilgamezh@a210077.upc-a.chello.nl)
[00:54:08] *** Joins: thiras (~thiras@user/thiras)
[00:54:47] *** Quits: GiLgAmEzH (~gilgamezh@a210077.upc-a.chello.nl) (Ping timeout: 240 seconds)
[01:07:17] *** Joins: abrantesasf (~abrantesa@2804:14d:b086:4b3c:2e56:dcff:fedb:62f)
[01:09:00] *** Quits: rpkilby_ (~rpkilby@c-24-20-208-106.hsd1.or.comcast.net) (Remote host closed the connection)
[01:09:35] *** Joins: rpkilby (~rpkilby@ec2-34-252-84-235.eu-west-1.compute.amazonaws.com)
[01:18:02] *** bparker_ is now known as bparker
[01:23:02] *** Quits: baldgeek (~baldgeek@rrcs-69-63-89-170.west.biz.rr.com) (Quit: Textual IRC Client: www.textualapp.com)
[01:23:51] *** Joins: rpkilby_ (~rpkilby@c-24-20-208-106.hsd1.or.comcast.net)
[01:24:52] *** Quits: hyper_dave (~hyper_dav@197.156.86.185) (Ping timeout: 250 seconds)
[01:26:43] *** Quits: rpkilby (~rpkilby@ec2-34-252-84-235.eu-west-1.compute.amazonaws.com) (Ping timeout: 250 seconds)
[01:26:47] *** Joins: hyper_dave (~hyper_dav@static.83.88.217.95.clients.your-server.de)
[01:33:15] *** Quits: EvilDMP (~textual@django/moderator/EvilDMP) (Quit: My MacBook has gone to sleep. ZZZzzz‚Ä¶)
[01:37:52] *** Quits: gitly (~gitly@148.252.128.183) (Ping timeout: 250 seconds)
[01:39:47] *** Joins: gitly (~gitly@148.252.132.121)
[01:43:45] *** Joins: farn (~farn@2a03:4000:7:3cd:d4ab:85ff:feeb:f505)
[02:00:00] *** Quits: dez (uid92154@user/dez) (Quit: Connection closed for inactivity)
[02:00:07] *** Quits: leElvyn (~leElvyn@user/leelvyn) (Quit: Client closed)
[02:08:13] *** Quits: explore (uid233125@id-233125.stonehaven.irccloud.com) (Quit: Connection closed for inactivity)
[02:08:40] *** Quits: fikran (~fikran@user/fikran) (Ping timeout: 240 seconds)
[02:10:43] *** Joins: fikran (~fikran@user/fikran)
[02:25:46] *** Joins: Kalov (~Thunderbi@179.56.117.154)
[02:30:14] *** Joins: jack__d (~jack__d@pool-98-109-145-13.nwrknj.fios.verizon.net)
[02:30:27] *** Quits: knbk (~quassel@84-24-92-123.cable.dynamic.v4.ziggo.nl) (Ping timeout: 240 seconds)
[02:36:10] *** Quits: serghei (~egrep@user/serghei) (Ping timeout: 240 seconds)
[03:00:42] *** Quits: Kalov (~Thunderbi@179.56.117.154) (Quit: Kalov)
[03:24:00] *** Joins: bitdex (~bitdex@gateway/tor-sasl/bitdex)
[03:25:01] *** Quits: Haudegen (~quassel@178.115.237.87.static.drei.at) (Ping timeout: 250 seconds)
[03:33:42] *** Quits: bitdex (~bitdex@gateway/tor-sasl/bitdex) (Remote host closed the connection)
[03:34:32] *** Joins: bitdex (~bitdex@gateway/tor-sasl/bitdex)
[03:49:41] *** Quits: flynn (~mcbloch@user/flynn) (Read error: Connection reset by peer)
[03:50:02] *** Joins: flynn (~mcbloch@user/flynn)
[03:54:07] *** Joins: PaulWay[w] (~PaulWay@2001:44b8:1110:f800:4b79:e11c:c2f:5c75)
[04:03:03] *** Quits: routebee (~norman@103-205-28-236.dyn.launtel.net.au) (Ping timeout: 256 seconds)
[04:03:09] *** Quits: hyper_dave (~hyper_dav@static.83.88.217.95.clients.your-server.de) (Ping timeout: 250 seconds)
[04:04:01] *** Quits: thiras (~thiras@user/thiras) (Ping timeout: 250 seconds)
[04:05:09] *** Joins: hyper_dave (~hyper_dav@197.156.86.185)
[04:17:53] *** Quits: fikran (~fikran@user/fikran) (Ping timeout: 250 seconds)
[04:20:05] *** Joins: fikran (~fikran@user/fikran)
[04:21:23] *** Quits: rpkilby_ (~rpkilby@c-24-20-208-106.hsd1.or.comcast.net) (Remote host closed the connection)
[04:33:23] *** Quits: django-ticketbot (~django-ti@django/ops/ticketbot) (Remote host closed the connection)
[04:33:40] *** Joins: django-ticketbot (~django-ti@django/ops/ticketbot)
[04:34:39] *** Joins: tone0 (~tone@071-011-252-111.res.spectrum.com)
[04:36:23] *** Joins: Kalov (~Thunderbi@179.56.117.154)
[04:39:38] *** Joins: thiras (~thiras@user/thiras)
[04:51:06] *** Joins: djapo (~archangel@user/djapo)
[04:54:47] *** Quits: brsc2909 (~Thunderbi@109.255.244.60) (Ping timeout: 240 seconds)
[05:33:47] *** Quits: djapo (~archangel@user/djapo) (Ping timeout: 240 seconds)
[05:34:42] *** Quits: esaym153 (~esaym153@net153.net) (Ping timeout: 245 seconds)
[05:42:56] *** Quits: bitdex (~bitdex@gateway/tor-sasl/bitdex) (Remote host closed the connection)
[05:44:08] *** Quits: PantelicGR (~PantelicG@user/pantelicgr) (Quit: Leaving)
[06:21:29] *** Joins: djapo (~archangel@user/djapo)
[06:26:30] *** Joins: bitdex (~bitdex@gateway/tor-sasl/bitdex)
[06:27:07] *** Quits: fikran (~fikran@user/fikran) (Ping timeout: 240 seconds)
[06:29:28] *** Joins: fikran (~fikran@user/fikran)
[06:34:36] *** Quits: Xof (~Xof@157-131-136-66.dedicated.static.sonic.net) (Quit: Bye.)
[06:38:17] *** Quits: thiras (~thiras@user/thiras) (Ping timeout: 250 seconds)
[07:11:39] *** Joins: routebee (~norman@103-205-28-236.dyn.launtel.net.au)
[07:17:25] *** Quits: routebee (~norman@103-205-28-236.dyn.launtel.net.au) (Ping timeout: 256 seconds)
[07:17:54] *** Quits: abrantesasf (~abrantesa@2804:14d:b086:4b3c:2e56:dcff:fedb:62f) (Quit: Leaving)
[07:20:48] *** Joins: routebee (~norman@103-205-28-236.dyn.launtel.net.au)
[07:31:47] *** Quits: djapo (~archangel@user/djapo) (Ping timeout: 240 seconds)
[07:52:56] *** Quits: rob4226 (~Thunderbi@136.144.35.21) (Quit: rob4226)
[07:57:19] *** Quits: Kalov (~Thunderbi@179.56.117.154) (Quit: Kalov)
[07:57:38] *** Quits: hyper_dave (~hyper_dav@197.156.86.185) (Read error: Connection reset by peer)
[08:02:25] *** Joins: hyper_dave (~hyper_dav@197.156.86.185)
[08:21:59] *** Joins: esaym153 (~esaym153@162.222.245.132)
[08:36:27] *** Quits: fikran (~fikran@user/fikran) (Ping timeout: 240 seconds)
[08:38:52] *** Joins: fikran (~fikran@user/fikran)
[08:40:53] *** Joins: explore (uid233125@id-233125.stonehaven.irccloud.com)
[09:14:33] *** Quits: explore (uid233125@id-233125.stonehaven.irccloud.com) ()
[09:14:46] *** Joins: explore (uid233125@id-233125.stonehaven.irccloud.com)
[09:22:05] *** Quits: routebee (~norman@103-205-28-236.dyn.launtel.net.au) (Ping timeout: 256 seconds)
[09:25:00] *** Joins: sandeepk (~sandeepk@223.130.30.29)
[10:04:33] *** Joins: routebee (~norman@103-205-28-236.dyn.launtel.net.au)
[10:07:06] *** Joins: twomoon (~twomoon@ip72-199-58-150.sd.sd.cox.net)
[10:11:39] <Lartza> Hmm is there some slightly automatic way to escape a question mark in the href of <a href="/username/{{ username }}/">{{ username }}</a>
[10:13:17] <FunkyBob> Lartza: https://docs.djangoproject.com/en/3.2/ref/templates/builtins/#urlencode
[10:15:10] <Lartza> Thank you completely missed that. Now to figure out why it isn't working... :P
[10:23:10] *** Joins: mattil (~mattil@airio.portalify.com)
[10:23:48] <Lartza> Nevermind it does work, thanks a lot
[10:24:05] <Lartza> I was trusting the browser's bottom left representation of the URL, d'oh
[10:27:01] <dre> >trying to go over sentry logs of an issue
[10:27:10] <dre> 10 issues are raised
[10:27:25] <dre> >same guy trying the same thing over and over again
[10:28:00] <hemebond> Shouldn't those all be the same issue?
[10:28:26] <dre> sorry yes, same issue, new events.
[10:28:35] <hemebond> üëç
[10:28:54] <hemebond> Nice to see someone using Sentry properly üò¢
[10:29:15] *** Quits: mattil (~mattil@airio.portalify.com) (Ping timeout: 250 seconds)
[10:29:25] <dre> it'd be nice if I could just "export all events into tabular format" so i can look for similarities between the events.
[10:29:47] <dre> like, stack trace values and etc.
[10:31:04] *** Joins: djapo (~archangel@user/djapo)
[10:46:09] *** Quits: fikran (~fikran@user/fikran) (Ping timeout: 250 seconds)
[10:48:14] *** Joins: fikran (~fikran@user/fikran)
[10:50:33] *** Quits: CapnKernel (foobar@gromit.mixdown.ca) (Ping timeout: 276 seconds)
[11:04:53] *** Joins: mattil (~mattil@airio.portalify.com)
[11:08:35] *** Joins: Kalov (~Thunderbi@179.56.117.154)
[11:10:07] *** Joins: serghei (~egrep@user/serghei)
[11:12:09] *** Quits: mattil (~mattil@airio.portalify.com) (Ping timeout: 250 seconds)
[11:13:16] *** Joins: EvilDMP (~textual@django/moderator/EvilDMP)
[11:13:16] *** ChanServ sets mode: +v EvilDMP
[11:26:06] *** Joins: no_gravity (~no_gravit@user/no-gravity/x-5639427)
[11:26:07] <no_gravity> Good Morning
[11:26:12] <no_gravity> I am reading this: https://developer.mozilla.org/en-US/docs/Learn/Server-side/Django/Authentication
[11:26:28] <no_gravity> And it mentions the "Django demonstration login templates". Does anybody know where those are?
[11:30:11] <FunkyBob> nope
[11:30:21] <FunkyBob> do  you find the MDN docs better than the actual django docs?
[11:30:24] <FunkyBob> if so... in what ways?
[11:31:56] <no_gravity> FunkyBob: I am looking into user functionality for Django. The Django docs suggest to build all the boilerplate views (signup,login,logout,change-password etc) yourselft it seems.
[11:32:01] *** Quits: Kalov (~Thunderbi@179.56.117.154) (Quit: Kalov)
[11:32:24] <no_gravity> I was thinking "There must be some default views for this somewhere?". So googled and found that MDN page.
[11:33:39] <FunkyBob> https://docs.djangoproject.com/en/3.2/topics/auth/
[11:33:46] <FunkyBob> https://docs.djangoproject.com/en/3.2/topics/auth/default/
[11:33:56] <FunkyBob> https://docs.djangoproject.com/en/3.2/topics/auth/default/#module-django.contrib.auth.views
[11:34:11] <FunkyBob> where gave you the impression they recommended to DIY?
[11:34:22] <FunkyBob> I know early on they show how to use the auth machinery to build a login view...
[11:34:48] <no_gravity> FunkyBob: Those links are what I mean.
[11:36:01] <no_gravity> The docs make it seem like there only are default routes. But you still have to build the views (the templates) yourself.
[11:36:19] <FunkyBob> don't say views and templates like they're the same thing
[11:36:24] <FunkyBob> you don't have to write the views
[11:36:28] <FunkyBob> you do have to write the templates
[11:36:34] <FunkyBob> just as the MDN docs explain
[11:36:45] <no_gravity> Ok. So lets change from "views" to "templates".
[11:36:53] <no_gravity> There are no default / demo templates?
[11:37:24] <FunkyBob> only the ones built into admin
[11:37:27] <FunkyBob> but no, generally not
[11:37:31] <FunkyBob> because it doesn't make a lot of sense
[11:37:43] <no_gravity> Yeah, I saw the admin part. I would have thought there is the same for the user part.
[11:37:46] <FunkyBob> how would they know what your templates look like, or what block names you used?
[11:38:07] <no_gravity> By providing demo / default templates for that too.
[11:38:11] <FunkyBob> ...
[11:38:27] <FunkyBob> it's a framework, not a cms...
[11:39:26] <no_gravity> I wouldn't say providing demo templates makes a framework a CMS.
[11:40:17] <no_gravity> Providing defaults for boilerplate stuff is what made Laravel so popular:
[11:40:37] <FunkyBob> the earlier docs show how to handle forms in templates... that's all you really need to render a login/logout/password reset ...
[11:40:37] <no_gravity> .
[11:41:01] <no_gravity> FunkyBob: Sure, but you have to write all the templates yourself.
[11:41:05] <FunkyBob> yes
[11:41:12] <FunkyBob> as you will do with your site anyway... really.
[11:41:58] <FunkyBob> do you not already have a base template for your site?
[11:42:29] <no_gravity> No. All I want to do for now is a basic "User can signup, login, logout" site.
[11:42:52] <no_gravity> Django is pretty nice to get a basic site without user auth up:
[11:43:09] <FunkyBob> ah, signup...
[11:43:16] <no_gravity> apt install -y python3-django; django-admin startproject mysite; cd mysite; python3 manage.py migrate; python3 manage.py runserver 0.0.0.0:80
[11:43:24] <FunkyBob> i recall one of the 3 mentioning they wished that had stayed in the public side
[11:43:32] <FunkyBob> ohg, don't install django from apt
[11:43:34] <no_gravity> Doing ^ in a fresh Debian install and *boom* you have a basic website running.
[11:43:47] <FunkyBob> debian will update your django out from under you
[11:43:50] <no_gravity> But when you want to add user auth it gets hairy.
[11:44:04] <FunkyBob> if by "hairy"  you mean "add one url path, and write some templates"... sure
[11:44:30] <no_gravity> Well, we go from like 1 minute (those 5 bash commands) to like 1 hour.
[11:45:15] <FunkyBob> python3 -m venv venv ; . venv/bin/activate ; pip install django; ....
[11:45:22] <FunkyBob> I repeat: don't use apt to install django
[11:45:38] <no_gravity> Why not?
[11:45:58] <FunkyBob> 06:29 < FunkyBob> debian will update your django out from under you
[11:46:06] <FunkyBob> use a venv so you control the python version and packages
[11:46:32] <no_gravity> Like everything else. That is why you have dev/staging/production so you can test before you update debian.
[11:46:49] <FunkyBob> yes
[11:46:54] <FunkyBob> or just do it the recommended way
[11:47:07] <FunkyBob> which also keeps all your python packages isolated from your system python
[11:48:07] <no_gravity> You could say the same for every other package / layer. The webserver, the networking system, the file system ...
[11:48:34] <no_gravity> Having it all handled by a distro is making life simpler.
[11:48:39] <FunkyBob> I could, but I've never had them be a major problem
[11:48:43] <FunkyBob> do as you want
[11:48:49] <FunkyBob> learn from our past experience, or don't
[11:50:45] <no_gravity> In my experience, developers avoid the distros approach when they want to use some dependency that wants a different stack.
[11:51:36] <no_gravity> I do it the other way round and avoid the dependencies.
[11:52:32] <FunkyBob> it also ties you into debian's update cadence...
[11:52:46] <FunkyBob> in debian testing their django is currently 2.2.24
[11:53:09] <FunkyBob> that's... quite old.
[11:53:23] <no_gravity> Sure. That is a good thing for me. I only update every time the stable version of Debian changes.
[11:53:41] <FunkyBob> stable version of django is 3.2...
[11:53:51] <FunkyBob> debian is well well behind
[11:54:29] <no_gravity> I trust them to fix important security issues in the packages they provide. They have a very good trackrecord.
[11:55:05] <FunkyBob> as a long term debian user, sure...
[11:55:20] <FunkyBob> but you're also missing out on performance fixes and new features
[11:55:53] <no_gravity> Yes. But developer time is more efficient this way. And developer time trumps almost everything.
[11:56:09] <FunkyBob> how is that in any way reducing developer time?
[11:56:36] <FunkyBob> use poetry to manage creating your venv and installing dependencies... and creating an installable package... and you've just saved a bunch of time
[11:57:10] <no_gravity> It is reducing dev time because I don't have to use poetry to manage venvs and dependencies :)
[11:57:30] <no_gravity> And update cycle is in step with everything else on the system.
[11:57:35] <FunkyBob> well, you need a way to track your dependencies anyway
[11:58:13] <no_gravity> requirements.txt for the win
[11:58:44] <FunkyBob> meh
[11:58:49] <FunkyBob> as I said, your choice
[11:58:51] <no_gravity> *if* I would use external dependencies. But I don't
[11:59:02] <FunkyBob> so you waste your time reinventing the wheel instead?
[11:59:10] <FunkyBob> you use django, so that's on dependency
[11:59:12] <no_gravity> What weel? I stay away from external debs.
[11:59:23] <FunkyBob> nobody said debs...
[11:59:25] <no_gravity> That dependency update cycle is handled by Debian :)
[11:59:36] <FunkyBob> other python packages.
[11:59:42] <no_gravity> All handled by Debian.
[11:59:52] <FunkyBob> well... your choice
[11:59:55] <FunkyBob> I'm off to cook dinner
[12:00:20] <no_gravity> Cu!
[12:00:48] *** Quits: no_gravity (~no_gravit@user/no-gravity/x-5639427) (Quit: leaving)
[12:02:18] *** Joins: knbk (~quassel@84-24-92-123.cable.dynamic.v4.ziggo.nl)
[12:02:35] *** Quits: bitdex (~bitdex@gateway/tor-sasl/bitdex) (Remote host closed the connection)
[12:03:30] *** Joins: bitdex (~bitdex@gateway/tor-sasl/bitdex)
[12:09:49] *** Quits: EvilDMP (~textual@django/moderator/EvilDMP) (Quit: My MacBook has gone to sleep. ZZZzzz‚Ä¶)
[12:14:14] *** Joins: EvilDMP (~textual@django/moderator/EvilDMP)
[12:14:14] *** ChanServ sets mode: +v EvilDMP
[12:16:59] *** Quits: twomoon (~twomoon@ip72-199-58-150.sd.sd.cox.net) (Quit: Leaving)
[12:23:11] *** Joins: rpkilby (~rpkilby@c-24-20-208-106.hsd1.or.comcast.net)
[12:29:43] *** Quits: rpkilby (~rpkilby@c-24-20-208-106.hsd1.or.comcast.net) (Ping timeout: 250 seconds)
[12:38:06] *** Quits: PaulWay[w] (~PaulWay@2001:44b8:1110:f800:4b79:e11c:c2f:5c75) (Quit: Wait, what's that music?  Ice cream!?)
[12:42:27] <dre> is there a filter query like "contains__in" ?
[12:43:35] <dre> i want "a = ['abba, 'adda'] ... Model.objects.filter(name__contains_in=a) => 'jabba'  'kaddat'
[12:43:45] <dre> contains but in a list
[12:44:53] <dre> eh nvm ill forloop it
[12:55:27] *** Quits: fikran (~fikran@user/fikran) (Ping timeout: 240 seconds)
[12:57:16] *** Joins: Haudegen (~quassel@178.115.237.87.static.drei.at)
[12:57:22] <duoi> dre just in
[12:57:36] *** Joins: fikran (~fikran@user/fikran)
[12:57:53] <duoi> Model.object.filter(name__in=["foo", "bar", "baz"])
[12:58:37] <duoi> oh, i misunderstood
[12:59:20] <duoi> not sure if there is anything native, you might be able to use Q for multiple options
[13:00:11] <dre> yeah it's all good, I jsut for looped it. I'd probably be able to make multiple Q objects and put that in ...
[13:00:15] * dre shrug
[13:01:57] *** Joins: maharg101 (~maharg101@savoy.force9.co.uk)
[13:02:50] *** Joins: DnzAtWrk (~DnzAtWrk@mobile-access-56739f-227.dhcp.inet.fi)
[13:04:49] *** Quits: djapo (~archangel@user/djapo) (Ping timeout: 250 seconds)
[13:30:28] *** Quits: sandeepk (~sandeepk@223.130.30.29) (Ping timeout: 252 seconds)
[13:33:41] *** Quits: routebee (~norman@103-205-28-236.dyn.launtel.net.au) (Ping timeout: 256 seconds)
[13:34:08] *** Quits: dre (~dre@2001:8003:c932:c301:64b7:95dc:bc24:e941) (Quit: Leaving)
[13:39:37] *** Joins: Ergo^ (~ergo@91.238.59.144)
[14:01:58] *** Quits: DnzAtWrk (~DnzAtWrk@mobile-access-56739f-227.dhcp.inet.fi) (Read error: Connection reset by peer)
[14:11:26] *** Joins: w0rp_ (~w0rp@w0rp.com)
[14:12:16] *** Quits: w0rp (~w0rp@w0rp.com) (Ping timeout: 252 seconds)
[14:12:16] *** w0rp_ is now known as w0rp
[14:13:06] *** Quits: duoi (~duoi@user/duoi) (Excess Flood)
[14:13:40] *** Joins: duoi (~duoi@user/duoi)
[14:14:34] *** Joins: DnzAtWrk (~DnzAtWrk@mobile-access-56739f-227.dhcp.inet.fi)
[14:16:18] *** Joins: sandeepk (~sandeepk@223.130.30.29)
[14:42:27] *** Quits: duoi (~duoi@user/duoi) (Ping timeout: 240 seconds)
[14:47:14] *** Joins: duoi (~duoi@user/duoi)
[14:51:25] *** Joins: brsc2909 (~Thunderbi@109.255.244.60)
[14:54:01] *** Quits: hyper_dave (~hyper_dav@197.156.86.185) (Ping timeout: 250 seconds)
[14:55:43] *** Quits: jack__d (~jack__d@pool-98-109-145-13.nwrknj.fios.verizon.net) (Ping timeout: 252 seconds)
[14:57:31] *** Joins: jack__d (~jack__d@pool-98-109-145-13.nwrknj.fios.verizon.net)
[15:01:12] *** Joins: hyper_dave (~hyper_dav@197.156.107.98)
[15:04:47] *** Quits: fikran (~fikran@user/fikran) (Ping timeout: 240 seconds)
[15:06:58] *** Joins: fikran (~fikran@user/fikran)
[16:37:59] <explore> are there any toy django projects on github n friends that makes pretty beefy use of redis? i'd like to see how it is used in practice now, since the book i am reading is from.. 2013
[16:38:24] <explore> book called Redis in Action
[16:38:48] <explore> do django projects call Redis the same now as it was back then?
[16:41:05] <GinFuyou> Probably? Redis is logically primitive thing, key-value storage with expire timer, there is not much room for change
[16:42:13] <GinFuyou> Django itself changed quite a lot since 2013... but not fundamentally
[16:57:55] *** Joins: maroloccio (~marolocci@37.100.40.252)
[17:02:00] *** Quits: Haudegen (~quassel@178.115.237.87.static.drei.at) (Quit: Bin weg.)
[17:02:16] <cusco> hi... we're trying to make tests run on a ci environment where there is no access to the database.. whats the suggested way of dealing with this? include a sqlite db?
[17:10:42] *** Quits: maroloccio (~marolocci@37.100.40.252) (Quit: WeeChat 3.0)
[17:11:33] *** Joins: maroloccio (~marolocci@37.100.40.252)
[17:14:07] *** Quits: fikran (~fikran@user/fikran) (Ping timeout: 240 seconds)
[17:15:47] *** Joins: rpkilby (~rpkilby@c-24-20-208-106.hsd1.or.comcast.net)
[17:16:18] *** Quits: maroloccio (~marolocci@37.100.40.252) (Client Quit)
[17:16:20] *** Joins: fikran (~fikran@user/fikran)
[17:17:58] *** Joins: maroloccio (~marolocci@37.100.40.252)
[17:20:22] *** Quits: rpkilby (~rpkilby@c-24-20-208-106.hsd1.or.comcast.net) (Ping timeout: 252 seconds)
[17:21:11] *** Joins: dez (uid92154@user/dez)
[17:24:51] *** Joins: Falc (~Falc@193.191.206.243)
[17:28:55] <Falc> Hi. I have a custom django-admin command which works fine, but it's quite verbose. On the command line it works fine, but when I try to redirect the output, I'm getting the distinct impression that stdout and stderr are using separate caches, getting flushed at different times and thus the interleaving gets completely lost
[17:28:57] <moldy> cusco: that can work, depending on the project. but i'd recommend to make sure that the test environment has the same db you use in production
[17:29:21] <moldy> cusco: pretty much any CI environment should be able to do that
[17:29:47] <moldy> Falc: PYTHONUNBUFFERED=1 might help
[17:32:31] <Falc> moldy: yes, thank you!
[17:36:16] *** Quits: bitdex (~bitdex@gateway/tor-sasl/bitdex) (Quit: = "")
[17:40:10] *** Joins: Fellipe (~Fellipe@2804:14c:65c2:5cc6::1001)
[17:40:58] <Fellipe> Hi everyone, I'm running Django 3.1.3 and dd.alloggio.com.br says No module named 'pyexcel' but I've already installed pyexcel on virtualenv. How to solve it?
[17:41:01] *** Joins: azed (~azed@102.108.9.164)
[17:43:56] <moldy> Fellipe: looks like the project is not using the virtualenv: Python Executable:  /root/.pyenv/versions/3.7.9/bin/python3.7
[17:44:10] <moldy> i'd expect this to be a path to the virtualenv's bin directory
[17:44:43] <moldy> also "Python Path" doesn't look like a virtualenv
[17:44:51] *** Quits: Ergo^ (~ergo@91.238.59.144) (Remote host closed the connection)
[17:44:56] *** Joins: thiras (~thiras@user/thiras)
[17:45:28] <Fellipe> moldy if I run via manage.py runserver, it works fine. But with gunicorn I get this error
[17:45:55] <GinFuyou> Then your gunicorn is not configured right\same
[17:46:26] <Fellipe> GinFuyou I start the gunicorn under activated virtualenv
[17:46:37] <Fellipe> GinFuyou what could be wrong?
[17:46:55] <moldy> Fellipe: https://docs.gunicorn.org/en/stable/deploy.html#using-virtualenv
[17:46:59] <GinFuyou> it doesn't guarantee that it will start in virtual env
[17:47:02] <moldy> is your gunicorn installed into the virtualenv?
[17:47:09] <Fellipe> moldy yes
[17:47:44] <moldy> Fellipe: how does your gunicorn command line look like?
[17:48:37] <Fellipe> moldy I've just installed the pyexcel outside virtualenv and now it worked
[17:48:52] <moldy> Fellipe: yes, but that's probably not a good idea
[17:52:35] <cusco> moldy: Y would rather not setup a postgresql just for testing..
[17:53:32] <moldy> cusco: there are two reason: 1) your code might use postgres-specific features that don't work on sqlite. 2) sqlite might behave differently than postgres
[17:53:47] <cusco> yes I understand
[17:53:54] <moldy> cusco: so your tests might pass and then your app misbehaves on staging / production because the db is different
[17:53:56] <cusco> Im using psql specific stuff indeed
[17:54:05] <cusco> altho my tests are not covering that part
[17:54:09] <moldy> well then you basically have no choice anyway :p
[17:54:15] *** Joins: iomari891 (~iomari891@105.112.138.38)
[17:54:18] <moldy> which CI environment are you using?
[17:54:21] *** Quits: Bitflux (~byte@byteflux.net) (*.net *.split)
[17:54:21] *** Quits: adamchainz (~adamj@51.15.34.126) (*.net *.split)
[17:54:21] *** Quits: FunkyBob (~curtis@vhost3.tinbrain.net) (*.net *.split)
[17:54:21] *** Quits: dlam1 (~dlam@dlam.me) (*.net *.split)
[17:54:21] *** Quits: mjh4386_ (~mjh4386@165.22.53.231) (*.net *.split)
[17:54:21] *** Quits: SeeM (~SeeM@153.ip-54-38-53.eu) (*.net *.split)
[17:54:21] *** Quits: anorthall (~anorthall@user/anorthall) (*.net *.split)
[17:54:21] *** Quits: mbrndtgn5 (~mbrndtgn@undecidable.de) (*.net *.split)
[17:54:21] *** Quits: deniska (~denis@user/deniska) (*.net *.split)
[17:54:21] *** Quits: doismellburning (kg289@django/moderator/doismellburning) (*.net *.split)
[17:54:21] *** Quits: MarkusH (MarkusH@django/moderator/MarkusH) (*.net *.split)
[17:54:21] *** Quits: fjmorazan (~quassel@user/fjmorazan) (*.net *.split)
[17:54:21] *** Quits: saschi (~saschi@user/saschi) (*.net *.split)
[17:54:21] *** Quits: syberspa1e (~syberspac@xiaoxiao.anvor.at) (*.net *.split)
[17:54:21] *** Quits: harm_ (~urth@geertswei.nl) (*.net *.split)
[17:54:21] *** Quits: wyre (~wyre@user/wyre) (*.net *.split)
[17:54:21] *** Quits: _janus (~janus@blotter.ld-linux.so) (*.net *.split)
[17:54:22] *** Quits: killjoy (~nameless@user/killjoy) (*.net *.split)
[17:54:22] <cusco> github
[17:54:47] <moldy> cusco: https://docs.github.com/en/actions/guides/creating-postgresql-service-containers
[17:54:55] <cusco> right.. Im aware
[17:55:00] <cusco> I was trying to avoid that
[17:55:04] <cusco> but ok, thanks
[17:58:38] *** Joins: Bitflux (~byte@byteflux.net)
[17:58:38] *** Joins: adamchainz (~adamj@51.15.34.126)
[17:58:38] *** Joins: FunkyBob (~curtis@vhost3.tinbrain.net)
[17:58:38] *** Joins: dlam1 (~dlam@dlam.me)
[17:58:38] *** Joins: mjh4386_ (~mjh4386@165.22.53.231)
[17:58:38] *** Joins: SeeM (~SeeM@153.ip-54-38-53.eu)
[17:58:38] *** Joins: anorthall (~anorthall@user/anorthall)
[17:58:38] *** Joins: mbrndtgn5 (~mbrndtgn@undecidable.de)
[17:58:38] *** Joins: deniska (~denis@user/deniska)
[17:58:38] *** Joins: doismellburning (kg289@django/moderator/doismellburning)
[17:58:38] *** Joins: MarkusH (MarkusH@django/moderator/MarkusH)
[17:58:38] *** Joins: fjmorazan (~quassel@user/fjmorazan)
[17:58:38] *** Joins: saschi (~saschi@user/saschi)
[17:58:38] *** Joins: syberspa1e (~syberspac@xiaoxiao.anvor.at)
[17:58:38] *** Joins: harm_ (~urth@geertswei.nl)
[17:58:38] *** Joins: wyre (~wyre@user/wyre)
[17:58:38] *** Joins: _janus (~janus@blotter.ld-linux.so)
[17:58:38] *** Joins: killjoy (~nameless@user/killjoy)
[17:58:38] *** iridium.libera.chat sets mode: +vv doismellburning MarkusH
[17:58:52] *** Quits: Fellipe (~Fellipe@2804:14c:65c2:5cc6::1001) (Quit: Client closed)
[18:00:09] *** Quits: zBeeble (~zBeeble@2001:1928:1::35) (Read error: Connection reset by peer)
[18:00:18] *** Joins: zBeeble (~zBeeble@2001:1928:1::35)
[18:03:15] *** Joins: Kalov (~Thunderbi@179.56.117.154)
[18:05:11] *** Joins: mattil (~mattil@helsinki.portalify.com)
[18:09:38] *** Quits: azed (~azed@102.108.9.164) (Quit: WeeChat 3.2)
[18:09:53] *** Quits: mattil (~mattil@helsinki.portalify.com) (Ping timeout: 250 seconds)
[18:15:55] *** Quits: iomari891 (~iomari891@105.112.138.38) (Ping timeout: 252 seconds)
[18:16:57] *** Quits: sandeepk (~sandeepk@223.130.30.29) (Remote host closed the connection)
[18:30:23] *** Joins: iomari891 (~iomari891@105.112.138.38)
[18:35:16] <Falc> Is there a way to have dynamic help_text for a field on an admin ModelForm? As in, help_text that depends on the actual instance being shown?
[18:35:48] <Falc> I'm trying to set it in the __init__ of the ModelForm but I can't seem to find where it is...
[18:43:06] *** Joins: CapnKernel (foobar@gromit.mixdown.ca)
[18:43:14] *** Parts: CapnKernel (foobar@gromit.mixdown.ca) ()
[18:46:14] *** Joins: mattil (~mattil@87-92-208-10.rev.dnainternet.fi)
[18:49:50] *** Quits: flynn (~mcbloch@user/flynn) (Read error: Connection reset by peer)
[18:50:11] *** Joins: flynn (~mcbloch@user/flynn)
[18:50:31] <Falc> Found it
[18:50:37] *** Quits: mattil (~mattil@87-92-208-10.rev.dnainternet.fi) (Ping timeout: 250 seconds)
[18:50:43] *** Quits: Wooble (~Wooble@107.170.27.240) (Quit: WeeChat 3.1)
[18:52:15] *** Joins: Wooble (~Wooble@107.170.27.240)
[19:02:03] *** Quits: EvilDMP (~textual@django/moderator/EvilDMP) (Quit: Textual IRC Client: www.textualapp.com)
[19:05:20] *** Quits: andrewgodwin (sid23792@django/member/andrewgodwin) ()
[19:05:35] *** Joins: andrewgodwin (sid23792@django/member/andrewgodwin)
[19:08:01] *** Quits: Falc (~Falc@193.191.206.243) (Quit: Leaving)
[19:11:32] *** Joins: EvilDMP (~textual@django/moderator/EvilDMP)
[19:11:32] *** ChanServ sets mode: +v EvilDMP
[19:14:23] *** Joins: PantelicGR (~PantelicG@user/pantelicgr)
[19:18:26] *** Joins: shangxiao (~davids@124.182.71.141)
[19:22:18] *** abyss_ is now known as abyss
[19:23:16] *** Joins: svedrin (~quassel@tiamat.funzt-halt.net)
[19:23:33] *** Quits: fikran (~fikran@user/fikran) (Ping timeout: 250 seconds)
[19:25:44] *** Joins: fikran (~fikran@user/fikran)
[19:31:43] *** Joins: Utkarsh (~veggiepiz@2405:201:2:4190:8702:5f1d:8eee:480c)
[19:35:08] *** Joins: CapnKernel (foobar@gromit.mixdown.ca)
[19:35:16] <CapnKernel> Hello.  Where can I get help over IRC for uWSGI?  (#uwsgi on libera is empty, #uwsgi on freenode has one other nick).  Official uWSGI docs say Freenode.
[19:37:18] *** Quits: serghei (~egrep@user/serghei) (Ping timeout: 250 seconds)
[19:42:03] *** Quits: Utkarsh (~veggiepiz@2405:201:2:4190:8702:5f1d:8eee:480c) (Quit: Leaving)
[19:44:33] *** Quits: bjs (sid190364@user/bjs) ()
[19:44:48] *** Joins: bjs (sid190364@user/bjs)
[19:47:51] <shangxiao> CapnKernel: You could try #python, that's quite active on libera
[19:54:23] *** Joins: Utkarsh_ (~veggiepiz@2405:201:2:4190:8702:5f1d:8eee:480c)
[19:57:50] *** Quits: Utkarsh_ (~veggiepiz@2405:201:2:4190:8702:5f1d:8eee:480c) (Quit: Leaving)
[20:01:59] *** Joins: rpkilby (~rpkilby@c-24-20-208-106.hsd1.or.comcast.net)
[20:08:10] *** Joins: Utkarsh (~veggiepiz@2405:201:2:4190:8702:5f1d:8eee:480c)
[20:12:27] *** Quits: DnzAtWrk (~DnzAtWrk@mobile-access-56739f-227.dhcp.inet.fi) (Read error: Connection reset by peer)
[20:14:06] <CapnKernel> Thanks
[20:15:47] *** Quits: farn (~farn@2a03:4000:7:3cd:d4ab:85ff:feeb:f505) (Ping timeout: 240 seconds)
[20:16:44] *** Quits: GinFuyou (~GinFuyou@reya.cloud.tilaa.com) (Ping timeout: 250 seconds)
[20:17:05] *** Joins: farn (~farn@2a03:4000:7:3cd:d4ab:85ff:feeb:f505)
[20:20:17] *** Joins: rob4226 (~Thunderbi@136.144.35.21)
[20:24:33] *** Quits: Utkarsh (~veggiepiz@2405:201:2:4190:8702:5f1d:8eee:480c) (Quit: Leaving)
[20:29:38] *** Parts: brownan (~brownan@2001:470:69fc:105::e01b) ()
[20:30:08] *** Joins: brownan (~brownan@2001:470:69fc:105::e01b)
[20:36:38] *** Joins: pyrrhus (~pyrrhus@user/pyrrhus)
[20:39:57] *** Quits: withered_wolf (~withered_@1437135-v103.1561-static.stchilaa.metronetinc.net) (Quit: If dreams are like movies, then memories are films about ghosts.)
[20:48:47] *** Quits: pathos (~pathos@169-1-247-122.ip.afrihost.co.za) (Ping timeout: 240 seconds)
[20:51:48] *** Joins: Utkarsh (~veggiepiz@2405:201:2:4190:a252:698b:7903:2675)
[20:54:33] *** Joins: pathos (~pathos@169-1-247-122.ip.afrihost.co.za)
[20:55:22] *** Parts: Utkarsh (~veggiepiz@2405:201:2:4190:a252:698b:7903:2675) (Leaving)
[20:55:26] *** Joins: withered_wolf (~withered_@1437135-v103.1561-static.stchilaa.metronetinc.net)
[20:55:30] *** Joins: Utkarsh (~veggiepiz@2405:201:2:4190:a252:698b:7903:2675)
[20:55:51] *** Quits: Utkarsh (~veggiepiz@2405:201:2:4190:a252:698b:7903:2675) (Quit: Leaving)
[21:00:23] *** Quits: pyrrhus (~pyrrhus@user/pyrrhus) (Quit: pyrrhus)
[21:32:47] *** Quits: fikran (~fikran@user/fikran) (Ping timeout: 240 seconds)
[21:34:24] *** Joins: Xof (~Xof@157-131-136-66.dedicated.static.sonic.net)
[21:35:07] *** Joins: fikran (~fikran@user/fikran)
[21:37:38] *** Joins: Utkarsh (~Utkarsh@2405:201:2:4190:a252:698b:7903:2675)
[21:50:02] *** Joins: Cyberg33k (~Cybergeek@2001:678:9ec:ff04:4811:692c:1801:c0f)
[21:50:22] *** Quits: rje (~rje@50.35.241.164) (Quit: My computer has gone to sleep. ZZZzzz‚Ä¶)
[21:50:49] *** Joins: rje (~rje@50.35.241.164)
[22:08:55] <thiras> does CSRF_TRUSTED_ORIGINS accept "*"?
[22:11:14] *** Joins: cliluw (~cliluw@47.147.80.149)
[22:11:42] <shangxiao> thiras: are you doing this for non-browser clients/
[22:11:45] <shangxiao> ?
[22:11:55] <thiras> no for the dev environment
[22:12:09] <thiras> front runs on localhost and django at 127.1
[22:12:37] <thiras> i'll have CSRF_COOKIE_DOMAIN set at the production
[22:12:45] <shangxiao> and you don't want to add "localhost" ?
[22:13:29] <thiras> but I also share my dev servers across a VPN sometimes
[22:21:09] <shangxiao> thiras: well just looking at the code for CSRF, doesn't look like it accept '*' but I could be wrong unless I tried it out: https://github.com/django/django/blob/231de683d86374c2b74da2185efc6ddfb5eb3341/django/middleware/csrf.py
[22:21:40] <thiras> thanks
[22:27:25] *** Joins: Haudegen (~quassel@178.115.237.87.static.drei.at)
[22:31:46] *** Quits: Utkarsh (~Utkarsh@2405:201:2:4190:a252:698b:7903:2675) (Quit: Leaving)
[22:34:17] *** Joins: Xaldafax (~xaldafax@cpe-198-72-160-101.socal.res.rr.com)
[22:40:28] *** Joins: kyern1 (~Thunderbi@109.194.166.119)
[22:42:07] *** Quits: kyern (~Thunderbi@178.72.91.102) (Ping timeout: 240 seconds)
[22:42:24] *** Joins: pro_z (~pro_z@37.214.45.81)
[22:42:45] *** Joins: kyern (~Thunderbi@178.72.91.102)
[22:44:27] *** Quits: kyern1 (~Thunderbi@109.194.166.119) (Ping timeout: 240 seconds)
[22:56:55] *** Quits: maroloccio (~marolocci@37.100.40.252) (Quit: WeeChat 3.0)
[23:03:35] <explore> GinFuyou: thankies gud points
[23:06:03] *** Joins: fortuno51 (~fortuno51@37.120.156.254)
[23:34:12] *** Joins: GiLgAmEzH (~gilgamezh@a210077.upc-a.chello.nl)
[23:40:48] *** Joins: twomoon (~twomoon@ip72-199-58-150.sd.sd.cox.net)
[23:42:15] *** Quits: fikran (~fikran@user/fikran) (Ping timeout: 250 seconds)
[23:43:47] *** Quits: pro_z (~pro_z@37.214.45.81) (Ping timeout: 240 seconds)
[23:44:32] *** Joins: fikran (~fikran@user/fikran)
[23:59:41] *** Joins: maroloccio (~marolocci@37.100.40.252)
