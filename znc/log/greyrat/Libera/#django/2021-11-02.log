[00:21:24] *** Stench is now known as Staunch
[00:43:42] *** Quits: Atque (~Atque@user/atque) (Quit: ...)
[00:54:42] *** Quits: fikran (~fikran@user/fikran) (Ping timeout: 260 seconds)
[00:56:08] *** Joins: AnselmoCampanas (~AnselmoCa@190.99.69.41)
[00:56:34] *** Joins: fikran (~fikran@user/fikran)
[00:58:41] *** Quits: stdout (~stdout@216.163.21.11) (Quit: Leaving)
[01:08:03] *** Quits: twomanytacos (uid366386@id-366386.lymington.irccloud.com) (Quit: Connection closed for inactivity)
[01:16:58] *** Joins: anddam (~anddam@user/anddam)
[01:19:01] *** Quits: segfaultbanana (~segfaultb@user/segfaultbanana) (Remote host closed the connection)
[01:19:43] *** Joins: segfaultbanana (~segfaultb@user/segfaultbanana)
[01:26:04] *** Quits: segfaultbanana (~segfaultb@user/segfaultbanana) (Ping timeout: 268 seconds)
[01:44:38] *** Quits: YourAverageCoder (~Guest12@5.151.172.160) (Quit: Client closed)
[01:51:35] *** Joins: segfaultbanana (~segfaultb@user/segfaultbanana)
[01:52:17] *** Joins: explore (uid233125@id-233125.hampstead.irccloud.com)
[01:55:40] *** Quits: AnselmoCampanas (~AnselmoCa@190.99.69.41) (Ping timeout: 256 seconds)
[01:57:30] *** Quits: segfaultbanana (~segfaultb@user/segfaultbanana) (Ping timeout: 268 seconds)
[02:31:44] *** Joins: segfaultbanana (~segfaultb@user/segfaultbanana)
[02:32:47] *** Joins: Atque (~Atque@user/atque)
[02:33:28] *** Quits: cmbengue (~Thunderbi@207.191.249.160) (Quit: Thanks, see you later.)
[02:34:06] *** Quits: segfaultbanana (~segfaultb@user/segfaultbanana) (Remote host closed the connection)
[02:34:22] *** Joins: segfaultbanana (~segfaultb@user/segfaultbanana)
[02:38:47] *** Quits: Thanatos (~Thanatos@105.112.17.39) (Read error: Connection reset by peer)
[02:50:09] *** Joins: PantelicGR (~PantelicG@user/pantelicgr)
[03:03:58] *** Quits: fikran (~fikran@user/fikran) (Ping timeout: 260 seconds)
[03:04:43] *** Quits: knbk (~quassel@84-24-92-123.cable.dynamic.v4.ziggo.nl) (Ping timeout: 268 seconds)
[03:05:55] *** Joins: fikran (~fikran@user/fikran)
[03:22:44] *** Quits: rpkilby (~rpkilby@c-24-20-208-106.hsd1.or.comcast.net) (Remote host closed the connection)
[03:23:20] *** Joins: rpkilby (~rpkilby@c-24-20-208-106.hsd1.or.comcast.net)
[03:28:10] *** Quits: rpkilby (~rpkilby@c-24-20-208-106.hsd1.or.comcast.net) (Ping timeout: 268 seconds)
[03:40:33] *** Quits: mayhew (~jm@hlfxns017vw-47-55-124-51.dhcp-dynamic.fibreop.ns.bellaliant.net) (Quit: Konversation terminated!)
[03:55:18] *** Joins: cmbengue (~Thunderbi@207.191.249.160)
[04:13:53] *** Joins: ovnicraft (~ovnicraft@181.198.3.234)
[04:28:54] *** Joins: bitdex (~bitdex@gateway/tor-sasl/bitdex)
[04:29:30] *** Quits: PantelicGR (~PantelicG@user/pantelicgr) (Quit: Leaving)
[04:30:53] *** Quits: bitdex (~bitdex@gateway/tor-sasl/bitdex) (Remote host closed the connection)
[04:32:03] *** Joins: bitdex (~bitdex@gateway/tor-sasl/bitdex)
[04:44:04] *** Quits: segfaultbanana (~segfaultb@user/segfaultbanana) (Remote host closed the connection)
[04:55:08] *** Quits: rje (~rje@65.141.156.170) (Quit: My computer has gone to sleep. ZZZzzz…)
[05:08:56] *** Joins: segfaultbanana (~segfaultb@user/segfaultbanana)
[05:10:45] *** Joins: tm007 (uid287041@id-287041.uxbridge.irccloud.com)
[05:10:51] <tm007> hello hello
[05:13:14] *** Quits: fikran (~fikran@user/fikran) (Ping timeout: 260 seconds)
[05:14:13] *** Quits: segfaultbanana (~segfaultb@user/segfaultbanana) (Ping timeout: 268 seconds)
[05:15:16] *** Joins: fikran (~fikran@user/fikran)
[05:17:59] <FunkyBob> hi
[05:20:37] <tm007> long time mate
[05:21:11] <tm007> when to use defaultdict in the new Python versions?
[05:22:21] <FunkyBob> same as in old python versions?
[05:23:30] <tm007> got it
[05:23:36] <tm007> helps with default values
[05:23:46] <tm007> was thinking about the ordered dict
[05:24:13] <tm007> Python dicts are now ordered by default I believe
[05:28:24] *** Joins: segfaultbanana (~segfaultb@user/segfaultbanana)
[05:33:59] *** Quits: ovnicraft (~ovnicraft@181.198.3.234) (Quit: My MacBook has gone to sleep. ZZZzzz…)
[05:34:04] *** Quits: xkuru (~xkuru@user/xkuru) (Read error: Connection reset by peer)
[05:34:55] *** Quits: vdamewood (~vdamewood@fedora/vdamewood) (Quit: My MacBook Pro has gone to sleep. ZZZzzz…)
[05:37:39] *** Quits: masta`` (~oyster@user/masta/x-2645138) (Quit: Going offline, see ya! (www.adiirc.com))
[05:38:18] *** Joins: Thanatos (~Thanatos@105.112.182.162)
[05:40:14] *** Quits: Thanatos (~Thanatos@105.112.182.162) (Read error: Connection reset by peer)
[05:42:36] *** Quits: segfaultbanana (~segfaultb@user/segfaultbanana) (Ping timeout: 268 seconds)
[05:48:15] *** Joins: PaulWay[w] (~PaulWay@2001:44b8:1110:f800:4b79:e11c:c2f:5c75)
[05:48:19] <PaulWay[w]> join #hackvana
[05:48:27] <PaulWay[w]> Sorry about that
[05:53:41] *** Quits: Haudegen (~quassel@178.115.237.87.static.drei.at) (Ping timeout: 268 seconds)
[05:55:29] *** Joins: segfaultbanana (~segfaultb@user/segfaultbanana)
[05:57:55] <FunkyBob> tm007: indeed, they are...
[05:58:09] <FunkyBob> though I think the old ordered/sorted dict is still in stdlib
[05:58:18] * FunkyBob was responsible for deprecating Django's custom implementation
[05:58:35] <tm007> interesting
[05:58:52] <tm007> PaulWay[w]: what's hackvana
[05:58:55] <FunkyBob> https://docs.python.org/3/library/collections.html#collections.OrderedDict
[06:02:19] *** Quits: segfaultbanana (~segfaultb@user/segfaultbanana) (Ping timeout: 268 seconds)
[06:02:46] *** Joins: rpkilby (~rpkilby@c-24-20-208-106.hsd1.or.comcast.net)
[06:03:54] *** Joins: domhnall (~developer@user/domhnall/x-2887755)
[06:08:29] *** Quits: rpkilby (~rpkilby@c-24-20-208-106.hsd1.or.comcast.net) (Ping timeout: 268 seconds)
[06:17:36] *** Quits: svedrin_ (~quassel@tiamat.funzt-halt.net) (Quit: https://quassel-irc.org - Komfortabler Chat. Überall.)
[06:17:50] *** Joins: svedrin (~quassel@tiamat.funzt-halt.net)
[06:18:33] *** Joins: rje (~rje@50.35.241.164)
[06:19:53] *** Joins: The_Jag (~The_Jag@host-79-52-47-230.retail.telecomitalia.it)
[06:22:35] *** Quits: The_Jag_ (~The_Jag@host-87-16-87-93.retail.telecomitalia.it) (Ping timeout: 264 seconds)
[06:24:39] *** Quits: cmbengue (~Thunderbi@207.191.249.160) (Quit: Thanks, see you later.)
[06:29:55] *** Joins: cmbengue (~Thunderbi@207.191.249.160)
[06:31:55] *** Quits: audiocat (~audio@user/audio) (Ping timeout: 268 seconds)
[06:32:10] <PaulWay[w]> tm007: Australian electronics channel.
[06:32:34] <tm007> nice
[06:32:41] <tm007> you're an electrical engineer?
[06:39:46] *** Quits: django-ticketbot (~django-ti@django/ops/ticketbot) (Remote host closed the connection)
[06:40:04] *** Joins: django-ticketbot (~django-ti@django/ops/ticketbot)
[06:45:30] *** Joins: ovnicraft (~ovnicraft@181.198.3.234)
[06:47:52] <PaulWay[w]> Ephemerally yes.
[06:48:01] <PaulWay[w]> I built an electric motorbike, that may count.
[06:48:35] <FunkyBob> PaulWay[w]: mm... there's a household nearby that has two electric motorscooters...
[06:48:51] <FunkyBob> keep meaning to ask if they bought them that way, or did the conversion theirself
[06:49:33] <PaulWay[w]> There are a few electric scooters around - Fonzarelli in Sydney makes them, but there are models available from China.
[06:49:43] *** Joins: khanred (~khanred@user/khanred)
[06:50:08] <PaulWay[w]> There was one which I kind of wish we'd got - can't remember it's name OTTOMH - big scooter, using NiMH batteries.
[07:22:07] *** Joins: Thanatos (~Thanatos@105.112.182.162)
[07:23:06] *** Quits: fikran (~fikran@user/fikran) (Ping timeout: 268 seconds)
[07:24:37] *** Joins: fikran (~fikran@user/fikran)
[07:32:06] *** Quits: explore (uid233125@id-233125.hampstead.irccloud.com) (Quit: Connection closed for inactivity)
[07:39:27] *** Quits: khanred (~khanred@user/khanred) (Quit: Leaving)
[07:52:39] *** Joins: segfaultbanana (~segfaultb@user/segfaultbanana)
[07:57:30] *** Quits: segfaultbanana (~segfaultb@user/segfaultbanana) (Ping timeout: 260 seconds)
[08:36:42] <dre_> Jaycar was selling electric scooters
[08:36:49] <dre_> probably still are?
[08:37:01] <dre_> anyway customers would buy them, trash them, and return for money back
[08:37:22] <dre_> they all came to me, some of them pristine
[08:37:50] <dre_> I'd be able to "stress test" the scooters ferrying myself between work and uni
[08:40:46] *** Joins: rpkilby (~rpkilby@c-24-20-208-106.hsd1.or.comcast.net)
[08:45:34] *** Quits: rpkilby (~rpkilby@c-24-20-208-106.hsd1.or.comcast.net) (Ping timeout: 260 seconds)
[08:49:51] *** Joins: rpkilby (~rpkilby@c-24-20-208-106.hsd1.or.comcast.net)
[08:54:23] *** Quits: rpkilby (~rpkilby@c-24-20-208-106.hsd1.or.comcast.net) (Ping timeout: 268 seconds)
[09:03:21] *** Joins: sandeepk (~sandeepk@202.14.122.178)
[09:20:37] *** Quits: Xaldafax (~xaldafax@cpe-198-72-160-101.socal.res.rr.com) (Quit: Bye...)
[09:22:26] *** Joins: rpkilby (~rpkilby@c-24-20-208-106.hsd1.or.comcast.net)
[09:23:21] *** Quits: sandeepk (~sandeepk@202.14.122.178) (Ping timeout: 268 seconds)
[09:26:02] *** Quits: rpkilby (~rpkilby@c-24-20-208-106.hsd1.or.comcast.net) (Remote host closed the connection)
[09:26:17] *** Joins: rpkilby (~rpkilby@c-24-20-208-106.hsd1.or.comcast.net)
[09:27:14] *** Quits: rpkilby (~rpkilby@c-24-20-208-106.hsd1.or.comcast.net) (Remote host closed the connection)
[09:32:14] *** Quits: fikran (~fikran@user/fikran) (Ping timeout: 260 seconds)
[09:33:58] *** Joins: fikran (~fikran@user/fikran)
[09:35:53] *** Quits: ovnicraft (~ovnicraft@181.198.3.234) (Quit: My MacBook has gone to sleep. ZZZzzz…)
[09:40:10] *** Quits: PaulWay[w] (~PaulWay@2001:44b8:1110:f800:4b79:e11c:c2f:5c75) (Ping timeout: 260 seconds)
[09:41:07] *** Joins: Tas-sos (~Tas-sos@ppp005054072206.access.hol.gr)
[09:46:22] *** Joins: sandeepk (~sandeepk@223.130.30.55)
[09:52:45] *** Joins: Elzington_ (~Elzington@68.235.43.124)
[09:54:17] *** Joins: Elzington__ (~Elzington@68.235.43.14)
[09:54:25] *** Joins: segfaultbanana (~segfaultb@user/segfaultbanana)
[09:55:26] *** Quits: Elzington (~Elzington@68.235.43.172) (Ping timeout: 268 seconds)
[09:57:26] *** Quits: Elzington_ (~Elzington@68.235.43.124) (Ping timeout: 260 seconds)
[09:57:31] *** Quits: Tas-sos (~Tas-sos@ppp005054072206.access.hol.gr) (Quit: leaving)
[09:57:54] *** Joins: Tas-sos (~Tas-sos@ppp005054072206.access.hol.gr)
[09:57:59] *** Joins: rpkilby (~rpkilby@c-24-20-208-106.hsd1.or.comcast.net)
[09:59:07] *** Quits: segfaultbanana (~segfaultb@user/segfaultbanana) (Ping timeout: 268 seconds)
[09:59:08] *** Quits: domhnall (~developer@user/domhnall/x-2887755) (Ping timeout: 268 seconds)
[10:03:02] *** Quits: rpkilby (~rpkilby@c-24-20-208-106.hsd1.or.comcast.net) (Ping timeout: 260 seconds)
[10:20:30] *** Joins: mattil (~mattil@helsinki.portalify.com)
[10:24:52] *** Quits: mattil (~mattil@helsinki.portalify.com) (Remote host closed the connection)
[10:25:05] *** Joins: mattil (~mattil@helsinki.portalify.com)
[10:33:57] *** Joins: rpkilby (~rpkilby@c-24-20-208-106.hsd1.or.comcast.net)
[10:34:16] *** Quits: Ilyu (~quassel@166.215.82.79.rev.sfr.net) (Ping timeout: 268 seconds)
[10:35:22] *** Joins: sandeep (~sandeepk@202.14.122.178)
[10:35:47] *** Quits: eblip (~eb0t@90.196.142.2) (Ping timeout: 264 seconds)
[10:37:23] *** Joins: eblip (~eb0t@90.194.37.155)
[10:38:36] *** Quits: rpkilby (~rpkilby@c-24-20-208-106.hsd1.or.comcast.net) (Ping timeout: 268 seconds)
[10:38:36] *** Quits: sandeepk (~sandeepk@223.130.30.55) (Ping timeout: 268 seconds)
[10:57:38] *** Joins: sa (sid1055@id-1055.tinside.irccloud.com)
[11:00:43] *** Quits: anddam (~anddam@user/anddam) (Quit: WeeChat 3.3)
[11:16:55] *** Quits: iomari891 (~iomari891@105.112.138.38) (Quit: WeeChat 3.3)
[11:17:13] *** Joins: Elzington (~Elzington@68.235.43.46)
[11:19:18] *** Quits: Elzington__ (~Elzington@68.235.43.14) (Ping timeout: 268 seconds)
[11:25:32] *** Joins: iomari891 (~iomari891@105.112.138.38)
[11:28:54] *** Joins: knbk (~quassel@84-24-92-123.cable.dynamic.v4.ziggo.nl)
[11:35:38] *** Joins: Ilyu (~quassel@78.202.228.230)
[11:41:13] *** Quits: Tas-sos (~Tas-sos@ppp005054072206.access.hol.gr) (Quit: leaving)
[11:41:34] *** Quits: fikran (~fikran@user/fikran) (Ping timeout: 260 seconds)
[11:43:19] *** Joins: fikran (~fikran@user/fikran)
[11:45:39] *** Joins: Tas-sos (~Tas-sos@ppp005054072206.access.hol.gr)
[11:52:50] *** Joins: pycode1 (~pycode@2001:b07:5d28:551:61d3:3708:bb26:23bb)
[11:56:07] *** Joins: segfaultbanana (~segfaultb@user/segfaultbanana)
[11:57:13] *** Quits: jasonbraganza (jasonbraga@user/jasonbraganza) (Ping timeout: 268 seconds)
[11:59:14] <serafeim> hello friends
[12:01:14] *** Quits: segfaultbanana (~segfaultb@user/segfaultbanana) (Ping timeout: 268 seconds)
[12:01:48] *** Quits: Trieste_ (T@user/pilgrim) (Ping timeout: 260 seconds)
[12:06:22] *** Joins: Trieste (T@user/pilgrim)
[12:11:12] *** Joins: Ergo^ (~ergo@91.238.59.144)
[12:26:42] *** Joins: DnzAtWrk (~DnzAtWrk@mobile-access-56734f-209.dhcp.inet.fi)
[12:33:30] *** Joins: jasonbraganza (jasonbraga@user/jasonbraganza)
[12:40:58] *** Joins: Elzington_ (~Elzington@68.235.43.12)
[12:42:46] *** Joins: Elzington__ (~Elzington@68.235.43.30)
[12:43:46] *** Quits: Elzington (~Elzington@68.235.43.46) (Ping timeout: 268 seconds)
[12:45:54] *** Quits: Elzington_ (~Elzington@68.235.43.12) (Ping timeout: 260 seconds)
[12:55:30] *** Quits: cmbengue (~Thunderbi@207.191.249.160) (Quit: Thanks, see you later.)
[12:57:35] *** Joins: gkarthik (~Guest43@2402:3a80:190a:b778:9ed1:3ed6:4d18:e002)
[12:58:12] *** Quits: gkarthik (~Guest43@2402:3a80:190a:b778:9ed1:3ed6:4d18:e002) (Quit: Client closed)
[12:59:00] *** Joins: gkarthik (~gkarthik@2402:3a80:190a:b778:9ed1:3ed6:4d18:e002)
[13:01:03] *** Joins: mayhew (~jm@hlfxns017vw-47-55-124-51.dhcp-dynamic.fibreop.ns.bellaliant.net)
[13:05:48] <gkarthik> Hi, I am a newbie. I am looking at the django model backend class for authentication. It has several methods like get_user_permissions, get_group_permissions. These methods take two arguments, first the user object and second any object. So what is this second argument. How it is used for getting permissions? Ref link
[13:05:49] <gkarthik> https://docs.djangoproject.com/en/3.2/ref/contrib/auth/#module-django.contrib.auth.backends
[13:10:31] <dminuoso> gkarthik: It lets you filter permissions for a given object.
[13:14:04] *** Joins: segfaultbanana (~segfaultb@user/segfaultbanana)
[13:18:55] *** Quits: segfaultbanana (~segfaultb@user/segfaultbanana) (Ping timeout: 268 seconds)
[13:20:35] <gkarthik> dminuoso So this object has to be a model object for checking permissions like access, modify, delete for that object?
[13:29:30] *** Joins: slav0nic (slav0nic@python.su)
[13:41:07] *** Quits: pycode1 (~pycode@2001:b07:5d28:551:61d3:3708:bb26:23bb) (Ping timeout: 268 seconds)
[13:42:25] *** Quits: gkarthik (~gkarthik@2402:3a80:190a:b778:9ed1:3ed6:4d18:e002) (Quit: Client closed)
[13:50:50] *** Quits: fikran (~fikran@user/fikran) (Ping timeout: 260 seconds)
[13:52:40] *** Joins: fikran (~fikran@user/fikran)
[14:06:54] *** Joins: explore (uid233125@id-233125.hampstead.irccloud.com)
[14:08:27] *** Joins: segfaultbanana (~segfaultb@user/segfaultbanana)
[14:11:49] *** Joins: masta`` (~oyster@user/masta/x-2645138)
[14:13:11] *** Quits: segfaultbanana (~segfaultb@user/segfaultbanana) (Ping timeout: 268 seconds)
[14:35:55] *** Joins: pycode1 (~pycode@2001:b07:5d28:551:118d:d233:9329:3dd6)
[14:40:34] *** Quits: Ergo^ (~ergo@91.238.59.144) (Read error: Connection reset by peer)
[14:57:50] *** Quits: GinFuyou (~GinFuyou@reya.cloud.tilaa.com) (Remote host closed the connection)
[14:58:38] *** Joins: GinFuyou (~GinFuyou@reya.cloud.tilaa.com)
[15:09:00] *** Joins: Ergo^ (~ergo@91.238.59.144)
[15:09:08] *** Joins: Haudegen (~quassel@178.115.237.87.static.drei.at)
[15:20:24] *** Joins: cmbengue (~Thunderbi@207.191.249.160)
[15:37:59] *** Joins: theprophet (~theprophe@85.114.228.184)
[15:41:03] <theprophet> when working with django templates while learning from django documentation i saw that HTML code in django templates look like this {% if latest_question_list %} <-- i mean the percentage sign, but looking at the video tutorials about django templates, people keep using simple HTML code without django template language. my question is is django
[15:41:04] <theprophet> template language neccessary?
[15:42:11] <theprophet> do i need to learn django template language? i mean {{}} <-- those and % <-- those?
[15:44:11] *** Quits: Ergo^ (~ergo@91.238.59.144) (Remote host closed the connection)
[15:44:52] <GinFuyou> theprophet, if you are not using django as API or some other engine - yes, you need to learn it
[15:45:06] *** Quits: Ilyu (~quassel@78.202.228.230) (Ping timeout: 260 seconds)
[15:46:09] <LordKalma> protip: forget the 500 shady tutorials on the web
[15:46:13] <LordKalma> and follow the official tutorials
[15:46:27] <LordKalma> experience taught me you learn very little from elsewhere with most things
[15:46:44] <LordKalma> at least start with them
[15:46:52] <theprophet> GinFuyou you mean REST?
[15:46:55] <LordKalma> and then gain different views with other documentation
[15:47:21] <LordKalma> theprophet, yes, with REST-framework it's somewhat usual to have a backend django app serving an API for a frontend JS SPA
[15:47:34] <LordKalma> if you have JS enough you use django templates instead haha
[15:47:58] * LordKalma feels half of this channel frowning upon him 
[15:48:06] <theprophet> wdym "if you have js enough" ?
[15:48:07] <GinFuyou> theprophet, anything that doesn't use html to communicate with clients.
[15:48:14] <LordKalma> if you HATE*
[15:48:21] <LordKalma> sorry
[15:49:53] <theprophet> i am at the templates part, but i dont see the logic behind DTL
[15:50:11] <GinFuyou> "logic" ?
[15:50:25] <theprophet> well do you remember the django doc part on templates?
[15:50:45] <theprophet> its kind of confusing very little iis explained
[15:51:01] <theprophet> and it does not tell you, what line is used for exactly what part
[15:51:17] <theprophet> and since it is related, i know that it is a reference
[15:51:38] <theprophet> but i dont quite get the logic of what part belongs to which part.
[15:52:17] <GinFuyou> might be. When I first did a tutorial pretty much everything was confusing to me. But in the end it got me started pretty fine
[15:52:22] <theprophet> its actually Writing your first Django app, part 3¶
[15:52:37] <LordKalma> before reading the tutorial, django docs have an overview section
[15:52:39] <LordKalma> read that
[15:52:55] <theprophet> i am reading everylittle detail
[15:53:36] <theprophet> for example , what is this part doing?  ---> .join([q.question_text for q in latest_question_list])
[15:53:48] <theprophet> and where is the documentation on that?
[15:54:27] <theprophet> def index(request):
[15:54:28] <theprophet>     latest_question_list = Question.objects.order_by('-pub_date')[:5]
[15:54:28] <theprophet>     output = ', '.join([q.question_text for q in latest_question_list])
[15:54:29] <theprophet>     return HttpResponse(output)
[15:54:33] <LordKalma> that's a python string .join() method paired with a list comprehension
[15:54:40] <LordKalma> for that it's python you need to learn
[15:55:10] <theprophet> i know python, but i was not expecting threading to be involved in web
[15:55:21] <LordKalma> who the hell talked about threading?
[15:55:33] <theprophet> what is that join then? it comes after
[15:55:36] <theprophet> ","
[15:55:46] <LordKalma> https://www.w3schools.com/python/ref_string_join.asp
[15:55:54] <LordKalma> you clearly don't know python :p
[15:55:56] <GinFuyou> If you know python you could see that a string methof
[15:56:02] <GinFuyou> *d
[15:56:16] <theprophet> i am not saying i know 100% python
[15:56:32] <GinFuyou> Even if you haven't seen it's being used
[15:56:33] <theprophet> in general , i know python.
[15:57:03] <LordKalma> ",".join() does make it pretty clean you're calling .join() on a string object
[15:57:05] <LordKalma> on a tread
[15:57:14] <LordKalma> *not on a tread
[15:58:02] <theprophet> what is ',' this ?
[15:58:07] <theprophet> before join?
[15:58:43] <theprophet>   output = ', '.join([q.question_text for q in latest_question_list])
[16:00:02] *** Quits: fikran (~fikran@user/fikran) (Ping timeout: 260 seconds)
[16:01:38] <carlio> it means 'join everything in this list together, separated them by the string ", "'
[16:02:01] *** Joins: fikran (~fikran@user/fikran)
[16:02:02] <carlio> so for example ', '.join(['a','b',c']) becomes 'a, b, c'
[16:02:58] <theprophet> ahh ,, where did you learned that carlio
[16:03:05] <carlio> it's basic python
[16:03:35] <theprophet> carlio ive been so occupied with this django that i am actually forgeting some pythong stuff.
[16:04:10] <theprophet> after i was finished with pythob basics, ive learned, HTML, CSS, NOW DJANGO wheres the time when i will use python again ffs
[16:10:03] *** Joins: segfaultbanana (~segfaultb@user/segfaultbanana)
[16:12:13] <GinFuyou> Well, django is python, so...
[16:14:45] *** Quits: bitdex (~bitdex@gateway/tor-sasl/bitdex) (Quit: = "")
[16:14:58] *** Quits: segfaultbanana (~segfaultb@user/segfaultbanana) (Ping timeout: 260 seconds)
[16:15:16] *** Joins: rpkilby (~rpkilby@c-24-20-208-106.hsd1.or.comcast.net)
[16:21:02] *** Quits: pycode1 (~pycode@2001:b07:5d28:551:118d:d233:9329:3dd6) (Ping timeout: 260 seconds)
[16:25:05] *** Quits: Elzington__ (~Elzington@68.235.43.30) (Quit: Leaving)
[16:25:50] *** Joins: Elzington (~Elzington@68.235.43.30)
[16:48:52] *** Joins: Ilyu (~quassel@78.202.228.230)
[16:51:29] *** Quits: elmcrest (~elmcrest@static.48.211.217.95.clients.your-server.de) (Quit: The Lounge - https://thelounge.chat)
[16:52:06] *** Joins: elmcrest (~elmcrest@static.48.211.217.95.clients.your-server.de)
[16:53:55] *** Joins: ThanatosJ (~Thanatos@105.112.180.61)
[16:57:26] *** Quits: Thanatos (~Thanatos@105.112.182.162) (Ping timeout: 260 seconds)
[16:57:30] *** Quits: Ilyu (~quassel@78.202.228.230) (Ping timeout: 260 seconds)
[16:58:17] *** Quits: Harlin (~DonQixote@75-163-172-250.clsp.qwest.net) (Remote host closed the connection)
[17:00:41] *** Joins: segfaultbanana (~segfaultb@user/segfaultbanana)
[17:01:01] *** Quits: segfaultbanana (~segfaultb@user/segfaultbanana) (Remote host closed the connection)
[17:01:16] *** Joins: segfaultbanana (~segfaultb@user/segfaultbanana)
[17:04:52] *** Quits: The_Jag (~The_Jag@host-79-52-47-230.retail.telecomitalia.it) (Read error: Connection reset by peer)
[17:06:01] *** Joins: The_Jag (~The_Jag@host-79-52-47-230.retail.telecomitalia.it)
[17:18:59] *** Quits: rpkilby (~rpkilby@c-24-20-208-106.hsd1.or.comcast.net) (Ping timeout: 264 seconds)
[17:19:56] *** Joins: pycode1 (~pycode@2001:b07:5d28:551:7261:6c10:a34b:6e0b)
[17:29:58] *** Quits: mattil (~mattil@helsinki.portalify.com) (Remote host closed the connection)
[17:30:34] *** Joins: mattil (~mattil@helsinki.portalify.com)
[17:35:42] *** Quits: mattil (~mattil@helsinki.portalify.com) (Ping timeout: 260 seconds)
[17:39:28] *** Joins: mattil (~mattil@37-33-213-99.bb.dnainternet.fi)
[17:44:06] *** Quits: mattil (~mattil@37-33-213-99.bb.dnainternet.fi) (Ping timeout: 260 seconds)
[17:52:36] *** Joins: humanBird (~humanBird@2603-8001-7003-5966-8863-abed-f4cb-e2b0.res6.spectrum.com)
[17:59:08] *** Joins: stdout (~stdout@216.163.21.11)
[18:05:12] *** Quits: theprophet (~theprophe@85.114.228.184) (Quit: Client closed)
[18:10:00] *** Quits: fikran (~fikran@user/fikran) (Ping timeout: 268 seconds)
[18:11:22] *** Joins: fikran (~fikran@user/fikran)
[18:15:59] *** Joins: y04nn (~y04nn@92.223.89.196)
[18:22:56] *** Joins: anddam (~anddam@user/anddam)
[18:30:09] *** Quits: DnzAtWrk (~DnzAtWrk@mobile-access-56734f-209.dhcp.inet.fi) (Read error: Connection reset by peer)
[18:31:26] *** Joins: DnzAtWrk (~DnzAtWrk@mobile-access-567363-170.dhcp.inet.fi)
[18:31:50] *** Quits: ThanatosJ (~Thanatos@105.112.180.61) (Read error: Connection reset by peer)
[18:33:06] *** Quits: DnzAtWrk (~DnzAtWrk@mobile-access-567363-170.dhcp.inet.fi) (Client Quit)
[18:43:54] *** Joins: _ganapathi_ (~ganapathi@27.5.86.134)
[18:43:58] *** Joins: imakestuff (~imakestuf@197.156.77.197)
[18:44:18] <imakestuff> Did anyone containerize their app? did you use docker or sth else?
[18:44:34] <imakestuff> I want to do it and looking for recommendations to get started
[18:46:02] <_ganapathi_> my developer written app like directly like modelname.variable on multiple place. due to that same query executed multiple times . is there any way to simply avoid query execution
[18:46:23] <_ganapathi_> multiple times
[18:47:48] <carlio> imakestuff: the django cookiecutter creates projects including docker file configuration - https://github.com/cookiecutter/cookiecutter-django . Might be more than you need but it's one place to look.
[18:48:24] <imakestuff> carlio: thanks for the suggestion.. will look into it
[19:11:38] *** Quits: _ganapathi_ (~ganapathi@27.5.86.134) (Ping timeout: 250 seconds)
[19:13:49] *** Quits: GinFuyou (~GinFuyou@reya.cloud.tilaa.com) (Remote host closed the connection)
[19:14:17] *** Joins: GinFuyou (~GinFuyou@reya.cloud.tilaa.com)
[19:18:29] *** Quits: stdout (~stdout@216.163.21.11) (Quit: Leaving)
[19:25:50] *** Quits: pycode1 (~pycode@2001:b07:5d28:551:7261:6c10:a34b:6e0b) (Ping timeout: 268 seconds)
[19:27:38] *** Joins: _ganapathi_ (~ganapathi@60.243.67.5)
[19:32:34] *** Quits: humanBird (~humanBird@2603-8001-7003-5966-8863-abed-f4cb-e2b0.res6.spectrum.com) (Quit: Client closed)
[19:32:38] *** Parts: _ganapathi_ (~ganapathi@60.243.67.5) ()
[19:48:52] *** Quits: segfaultbanana (~segfaultb@user/segfaultbanana) (Remote host closed the connection)
[19:51:46] *** Joins: Harlin (~DonQixote@75-163-172-250.clsp.qwest.net)
[19:52:05] *** Quits: rje (~rje@50.35.241.164) (Quit: My computer has gone to sleep. ZZZzzz…)
[19:58:15] *** Joins: rpkilby (~rpkilby@c-24-20-208-106.hsd1.or.comcast.net)
[20:01:34] *** Joins: crydotsnake (~textual@HSI-KBW-091-089-216-147.hsi2.kabel-badenwuerttemberg.de)
[20:01:43] <crydotsnake> Hello :)
[20:16:57] *** Quits: sandeep (~sandeepk@202.14.122.178) (Quit: Leaving)
[20:18:52] *** Quits: fikran (~fikran@user/fikran) (Ping timeout: 268 seconds)
[20:20:43] *** Joins: fikran (~fikran@user/fikran)
[20:21:38] *** Quits: crydotsnake (~textual@HSI-KBW-091-089-216-147.hsi2.kabel-badenwuerttemberg.de) (Quit: Textual IRC Client: www.textualapp.com)
[20:21:50] *** Joins: gkarthik (~gkarthik@2402:3a80:190a:b778:9ed1:3ed6:4d18:e002)
[20:22:01] *** Joins: kurfen_ (~kurfen@45.152.181.22)
[20:22:50] *** Joins: rje (~rje@65.141.156.170)
[20:22:55] *** Quits: kurfen (~kurfen@45.152.181.20) (Ping timeout: 260 seconds)
[20:23:24] <gkarthik> Hi, I want to understand how various components of Django work using UML Class Diagram. Any resources you know of?
[20:29:56] *** Joins: audiobirb (~audio@user/audio)
[20:33:28] *** Joins: Xaldafax (~xaldafax@cpe-198-72-160-101.socal.res.rr.com)
[20:35:31] *** Quits: imakestuff (~imakestuf@197.156.77.197) (Ping timeout: 268 seconds)
[20:40:14] *** Quits: gkarthik (~gkarthik@2402:3a80:190a:b778:9ed1:3ed6:4d18:e002) (Quit: Client closed)
[20:44:10] *** Quits: fikran (~fikran@user/fikran) (Ping timeout: 268 seconds)
[20:46:04] *** Joins: fikran (~fikran@user/fikran)
[21:16:35] *** Quits: explore (uid233125@id-233125.hampstead.irccloud.com) (Quit: Connection closed for inactivity)
[21:17:34] *** Joins: oblikoamorale (~n@user/oblikoamorale)
[21:20:24] *** Quits: oblikoamorrale (~n@user/oblikoamorale) (Ping timeout: 260 seconds)
[21:26:10] *** Joins: segfaultbanana (~segfaultb@user/segfaultbanana)
[21:44:16] *** Quits: darkstardevx (~darkstard@2601:1c2:300:c8a0::6c32) (Ping timeout: 245 seconds)
[21:45:27] *** Quits: Harlin (~DonQixote@75-163-172-250.clsp.qwest.net) (Quit: Leaving)
[21:56:08] *** Joins: blackout69 (~blackout6@net-31-156-121-187.cust.vodafonedsl.it)
[22:05:15] *** Joins: darkstardevx (~darkstard@50.39.114.152)
[22:08:21] *** Joins: pycode1 (~pycode@2001:b07:5d28:551:94fe:b5e:b61d:7f38)
[22:16:18] *** Quits: y04nn (~y04nn@92.223.89.196) (Remote host closed the connection)
[22:36:14] *** Quits: pycode1 (~pycode@2001:b07:5d28:551:94fe:b5e:b61d:7f38) (Ping timeout: 260 seconds)
[22:36:55] <LordKalma> bah, I was trying to write a writable nested serializer... The data for the nested model doesn't show up on the "validated_data"...
[22:36:58] <LordKalma> interesting
[22:48:43] <LordKalma> I'm dumb. I mark things as read_only and them complain they aren't part of the writing json...
[22:50:00] <hylje> it's a common issue that software is doing exactly what it's told to do :-)
[22:54:17] *** Quits: fikran (~fikran@user/fikran) (Ping timeout: 268 seconds)
[22:55:39] *** Joins: fikran (~fikran@user/fikran)
[22:56:05] <LordKalma> yap, seems to be working now
[22:56:09] * LordKalma facepalms
[23:04:44] *** Joins: pro_z (~pro_z@37.214.77.123)
[23:10:48] *** Joins: _Ev (~ev@user/ev/x-8999918)
[23:22:14] <_Ev> I am having trouble adding in template DIRS to project folder settings.  My goal is to add a template and view to the project folder to create a home() view, which will be a homepage and serve links to app views.   When I add template, view, and DIRS folder to project_folder it works but overrides other views.
[23:22:45] <_Ev> I'll keep tinkering but is there anything I should know about this? Should I really be adding an app (such as core or main) to add a single view?
[23:24:41] <hylje> views don't have to be in any app
[23:38:40] *** Joins: PaulWay[w] (~PaulWay@2001:44b8:1110:f800:4b79:e11c:c2f:5c75)
[23:39:06] <_Ev> Ah I see what I did wrong. My first time working with Django, I had renamed URLs in app '/app/foo'. Now only the app url   '' (empty) is broken.
[23:47:38] *** Quits: pro_z (~pro_z@37.214.77.123) (Ping timeout: 260 seconds)
[23:48:45] *** Joins: stdout (~stdout@216.163.21.11)
[23:55:16] *** Joins: jess (~jess@libera/staff/jess)
[23:57:14] *** Parts: blackout69 (~blackout6@net-31-156-121-187.cust.vodafonedsl.it) ()
