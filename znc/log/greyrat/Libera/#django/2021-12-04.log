[00:00:41] *** Joins: fikran (~fikran@user/fikran)
[00:09:37] *** Joins: ironbeard (~geoffrey@130-45-89-178.dyn.grandenetworks.net)
[00:10:57] <ironbeard> It appears that using `update_or_create` is not using default field values (specified on the model) when creating instances, is this a known thing? I'm having trouble searching for answrs on this, due to the "defaults" param on update_or_create. Strangely, it's just settign my charfield to '' instead of the default..and the field doesn't have null=True on it..so..:shrug:
[00:20:38] <ironbeard> Oh, looks like my defaults param to update_or_create was passing in empty strings to the fields with defaults.
[00:34:02] *** Joins: bambanxx (~bambanx@pc-223-49-214-201.cm.vtr.net)
[00:37:11] *** Quits: ironbeard (~geoffrey@130-45-89-178.dyn.grandenetworks.net) (Quit: WeeChat 2.3)
[00:47:33] *** Joins: blackout69 (~blackout6@net-31-156-121-187.cust.vodafonedsl.it)
[00:51:06] *** Joins: Ilyu (~quassel@166.215.82.79.rev.sfr.net)
[00:58:58] *** Quits: blackout69 (~blackout6@net-31-156-121-187.cust.vodafonedsl.it) (Quit: Leaving.)
[01:25:22] *** Quits: bambanxx (~bambanx@pc-223-49-214-201.cm.vtr.net) (Quit: My MacBook Air has gone to sleep. ZZZzzz…)
[01:32:10] *** Quits: READ10 (~dallan@user/read10) (Quit: WeeChat 3.3)
[01:32:46] *** Quits: kostkon (~kostkon@2a02:587:a10f:ccbf:7bf8:4823:9d1e:88be) (Remote host closed the connection)
[01:39:35] *** Joins: pepper (~pepper@user/pepper)
[01:59:36] *** Joins: lucascastro (~lucascast@189.90.44.253.jupiter.com.br)
[02:05:04] *** Quits: lithammer (~lithammer@2a02:2770::21a:4aff:fe88:c18d) (Quit: ZNC - http://znc.in)
[02:08:14] *** Joins: lithammer (~lithammer@arch-vps.cloud.tilaa.com)
[02:08:19] *** Quits: fikran (~fikran@user/fikran) (Ping timeout: 256 seconds)
[02:10:02] *** Joins: fikran (~fikran@user/fikran)
[02:17:58] *** Quits: x_kuru (~xkuru@user/xkuru) (Read error: Connection reset by peer)
[02:20:49] *** Quits: EvilDMP (~textual@django/moderator/EvilDMP) (Quit: My MacBook has gone to sleep. ZZZzzz…)
[02:21:49] *** Joins: EvilDMP (~textual@django/moderator/EvilDMP)
[02:21:49] *** ChanServ sets mode: +v EvilDMP
[02:30:51] *** Joins: PantelicGR (~PantelicG@user/pantelicgr)
[02:31:55] *** Quits: Oxygene (~Oxygene@lfbn-lil-1-421-45.w81-49.abo.wanadoo.fr) (Quit: Leaving)
[02:50:12] *** Quits: django-ticketbot (~django-ti@django/ops/ticketbot) (Remote host closed the connection)
[02:50:29] *** Joins: django-ticketbot (~django-ti@django/ops/ticketbot)
[03:04:09] *** Quits: EvilDMP (~textual@django/moderator/EvilDMP) (Quit: My MacBook has gone to sleep. ZZZzzz…)
[03:04:31] *** Joins: cmbengue (~Thunderbi@207.191.249.160)
[03:07:21] *** Quits: cmbengue (~Thunderbi@207.191.249.160) (Remote host closed the connection)
[03:09:52] *** Quits: abrantesasf (~abrantesa@187.36.170.211) (Remote host closed the connection)
[03:09:55] *** Quits: slav0nic (slav0nic@python.su) (Remote host closed the connection)
[03:10:29] *** Joins: abrantesasf (~abrantesa@187.36.170.211)
[03:18:14] *** Quits: abrantesasf (~abrantesa@187.36.170.211) (Remote host closed the connection)
[03:22:58] *** Joins: kostkon (~kostkon@2a02:587:a10f:ccbf:7bf8:4823:9d1e:88be)
[03:24:16] *** Quits: kostkon (~kostkon@2a02:587:a10f:ccbf:7bf8:4823:9d1e:88be) (Remote host closed the connection)
[03:24:35] *** Joins: kostkon (~kostkon@2a02:587:a10f:ccbf:7bf8:4823:9d1e:88be)
[03:25:46] *** Quits: kostkon (~kostkon@2a02:587:a10f:ccbf:7bf8:4823:9d1e:88be) (Remote host closed the connection)
[03:26:05] *** Joins: kostkon (~kostkon@2a02:587:a10f:ccbf:7bf8:4823:9d1e:88be)
[03:27:16] *** Quits: kostkon (~kostkon@2a02:587:a10f:ccbf:7bf8:4823:9d1e:88be) (Remote host closed the connection)
[03:40:23] *** Joins: ironbeard (~geoffrey@130-45-89-178.dyn.grandenetworks.net)
[03:42:49] <ironbeard> It seems strange to me that I can't do an exact QuerySet lookup on an M2M field (by passing a queryset to the field in Model.objects.filter), but have to use something similar to https://stackoverflow.com/questions/16324362/django-queryset-get-exact-manytomany-lookup  That solution is ~8 years old.. has this been addressed somehow and I can't figure it out?
[04:08:23] *** Joins: luigibu1 (~luigibu@80.30.201.209)
[04:13:05] *** Quits: luigibu1 (~luigibu@80.30.201.209) (Ping timeout: 252 seconds)
[04:13:39] <FunkyBob> ironbeard: can you explain what you're trying to do, first?
[04:14:21] <FunkyBob> you have a queryset, and you want to filter it based on a queryset over a model through a m2m relation?
[04:16:25] <FunkyBob> ironbeard: it sounds like you want to do   filter(foo__in=my_foo_queryset)  ... in which case, yes, you can
[04:17:29] *** Quits: fikran (~fikran@user/fikran) (Ping timeout: 252 seconds)
[04:17:31] *** Quits: ironbeard (~geoffrey@130-45-89-178.dyn.grandenetworks.net) (Ping timeout: 256 seconds)
[04:19:23] *** Joins: fikran (~fikran@user/fikran)
[04:22:34] *** Joins: ironbeard (~geoffrey@130-45-89-178.dyn.grandenetworks.net)
[04:22:46] <ironbeard> FunkyBob sorry, screaming baby + IRC disconnected. one second :)
[04:22:54] <FunkyBob> understand too well
[04:24:21] *** Quits: Guddu (~Guddu@186.106.155.105) (Read error: Connection reset by peer)
[04:25:09] <ironbeard> I have a model OccupationalData with an FK to a Region model and M2M to Occupation models. I'd like to be able to get (really, get_or_create) an OccupationData provided a Region and a queryset of Occupations. Region + a QuerySet of Occupations should be unique to OccupationalData.. so I'd like to get_or_create given those two things
[04:27:16] <ironbeard> Occupations have a CharField choice field called education, so if I'm given one of the educaiton choices and a region, I'd like to get/create an OccupaitonalData instance based on the Region and the queryset generated by filtering Occupations such that education = 'DOCTORATE', for instance
[04:28:02] <ironbeard> Occupations also have fields "training" and "experiences" that are also choice CharFields.. generally speakign the Occupation querysets will be based on filter Occupations on those three fields.
[04:28:27] <FunkyBob> might help if  you could dpaste your models
[04:28:56] <ironbeard> Sure, lemme hook something up
[04:36:09] <ironbeard> @FunkyBob https://dpaste.com/B6G5LN56X I think this should be right
[04:36:45] <ironbeard> wait, need to remove some FK dependencies that don't matter here
[04:38:28] <ironbeard> https://dpaste.com/CBV9FQAPM this is better
[04:43:16] <Rikem> strangely dpaste.com doesn't work from any of my IPs
[04:44:14] <ironbeard> So it seems OccupationalData.objects.get(region=Region.objects.get(code='48000'), occupations=Occupation.objects.filter(education='DOCTORATE')) doesn't really do what I want it to do.
[04:44:59] *** Quits: cliluw (~cliluw@47.147.80.149) (Ping timeout: 252 seconds)
[04:45:57] *** Joins: cliluw (~cliluw@47.147.80.149)
[04:49:24] <ironbeard> If an OccupationalData object exists that has occupations=Occupation.objects.all(), then it would grab that one, not do "DoesNotExist"
[04:50:10] <dre> ironbeard, OccupationalData.objects.get(region__code ='48000', occupations__in = Occupation.objects.filter(education='DOCTORATE'))
[04:50:15] <dre> I don't get why it's not happening
[04:50:47] <dre> ironbeard, what is the code that isn't working?
[04:51:11] <dre> "get or create given those two things" doesn't quite make sense.
[04:51:15] <ironbeard> I don't want __in, I want..basically __exact. If I have two OccupationalData instances, both with the same Region, but one has occupations=Occupation.objects.all() and the other has Occupation.objects.filter(education='DOCTORATE'), then it doens't do the right thing
[04:51:51] <ironbeard> User "stalk" 's answer here kind of shows why: https://stackoverflow.com/questions/16324362/django-queryset-get-exact-manytomany-lookup
[04:52:41] <dre> oh right
[04:53:10] <dre> yes I've come across this before  but for me I had to just remodel the data to get around it
[04:54:26] <ironbeard> yeah, that's what i'm thinking. weird that __in doesnt work for this though
[04:55:29] *** Quits: Donitz (~Donitz@88-115-149-152.elisa-laajakaista.fi) (Ping timeout: 256 seconds)
[04:56:38] <ironbeard> or really, that occupations=Occupations.objects.filter(...) doesn't work as I'd hope it would
[04:57:47] <dre> you're trying to get the rows of data that are for this region and for all of these occupations ?
[04:57:49] *** Quits: rje (~rje@65.141.156.170) (Ping timeout: 256 seconds)
[04:58:43] <dre> or, you're trying to get the rows of data that are for this region and where the occupation.education = doctorate
[04:59:12] <ironbeard> Well..ideally the former, but actual use case it's typically something like the latter
[04:59:29] <dre> still not quite sure why you can't just "occupation__education = doctorate"
[04:59:32] <dre> that should work
[04:59:47] <ironbeard> but it could be occupation.education__in=['DOCTORATE', 'MASTERS'] and occuaption.training__in=['5+YR'] etc
[04:59:59] <ironbeard> hmm, lemme see
[04:59:59] <dre> yes you can do that to, but with __
[05:00:16] <ironbeard> will mess around with that and report back, baby's being a screamer at th emonent :)
[05:00:24] <FunkyBob> ironbeard: region__code='48000'  since you want a single match
[05:00:30] <dre> :O :)
[05:00:39] <FunkyBob> occupations__educations='DOCTORATE'
[05:00:56] <FunkyBob> [sorry, didn't see t he mention because this isn't slack/twtiter... @ breaks things]
[05:01:30] <FunkyBob> if they must have matching r egions. you must express that in the query
[05:02:36] <FunkyBob> __in can be thought of as intersection when used on a m2m
[05:02:47] <FunkyBob> "is there any related record in the set proivded?"
[05:04:50] <ironbeard> Well, so the way this works in practice is that I have a form that has MultipleSelect for the various experience, education, and training choices. So I need to attempt to get based on a combination of multiple from each field, and I can create if it doesn't exist.
[05:06:23] <FunkyBob> to match where ALL exists requires multiple filter() calls, because of how cross-relation filtering works
[05:06:37] <FunkyBob> I _think_ it can be done with Q() composition too
[05:07:55] *** Joins: luigibu1 (~luigibu@80.30.201.209)
[05:08:35] <FunkyBob> https://docs.djangoproject.com/en/3.2/topics/db/queries/#spanning-multi-valued-relationships
[05:08:44] <ironbeard> Okay, so if I have only one OccupationalData instace (region=Region.objects.get(code='48000'), occupations=Occupation.objects.filter(education='DOCTORATE')) then both of the following queries would produce a queryset of copies of the same Occupational Data: OccupationalData.objects.get(region=Region(), occupations__education__in=['DOCTORATE', 'MASTERS']) and just using ['DOCTORATE']
[05:09:01] <ironbeard> .get() won't work, I'
[05:09:20] <FunkyBob> you...
[05:09:22] <ironbeard> 'd have to use filter().distinct(), but the filter with 'MASTERS' should return empty, but doesn't
[05:09:25] <ironbeard> :)
[05:09:28] <FunkyBob> keep using nonseense syntax
[05:09:34] <FunkyBob> like get(region=Region())
[05:09:56] <FunkyBob> that's an in-memory model instance with no pk... it can't match anything, as it doesn't exist
[05:10:12] <FunkyBob> if you want to get/filter... do it...  objects.get(region__code='48000')
[05:10:32] <ironbeard> sorry sorry, just trying to do shorthand. region=Region.objects.get(code='48000')
[05:10:42] <FunkyBob> again
[05:10:48] <FunkyBob> why do it the most painful way possibly?
[05:10:58] <FunkyBob> region__code='48000'
[05:11:03] <ironbeard> oh, for sure.
[05:11:15] <ironbeard> sorry, that's how it would work in practice, yeah.
[05:11:28] <FunkyBob> occupations__education__in=['DOCTORATE', 'MASTERS']
[05:11:37] <FunkyBob> so as I said before. this filters for an intersection
[05:12:26] <FunkyBob> if you want to ensure the match has BOTH, you want filter(occupations__education='DOCTORATE').filter(occupations__education='MASTERS')
[05:12:29] *** Quits: luigibu1 (~luigibu@80.30.201.209) (Ping timeout: 256 seconds)
[05:12:46] <FunkyBob> fortunately, (a) querysets are chainable, and (b) Q() objects are composable
[05:13:02] <FunkyBob> however, if the choice you need are expressed as a queryset, that gets trickier
[05:13:08] <ironbeard> Correct, but my issue is that I don't want an intersection. Using occupations__education__in was an attempt to solve my issue, that using occupations=Occupation.objects.filter(education__in=['EDUCATION', 'MASTERS']) doesn't do what I want it to, namely get the OccupationalData instance whose Occupations is strictly those with both 'DOCTORATE' and 'MASTERS' and no more/no less
[05:14:04] <FunkyBob> well, that gets even trickier
[05:14:12] <FunkyBob> and I'd be interested to see how you'd express that in raw SQL
[05:14:58] <ironbeard> Brad Martsberger shows the necessary SQL here: https://stackoverflow.com/questions/5301996/how-to-do-many-to-many-django-query-to-find-book-with-2-given-authors
[05:16:04] <FunkyBob> https://docs.djangoproject.com/en/3.2/ref/contrib/postgres/aggregates/#arrayagg
[05:16:25] <FunkyBob> Array types for postgres are supported within Django now.. have been for some time
[05:16:30] <FunkyBob> as well as related functions
[05:16:36] <ironbeard> Another solution that basically chains filters and uses Count is available here: https://stackoverflow.com/questions/16324362/django-queryset-get-exact-manytomany-lookup, but in my case it's possible that the number of Occupations is quite large, and so I was hoping for something nicer
[05:16:36] <FunkyBob> so no need for django-sql-utils there
[05:17:01] <ironbeard> (quite large == ~1000, not THAT large..but, a lot of filter calls)
[05:17:21] <ironbeard> Oh, nice. Good to know
[05:20:38] <ironbeard> Thanks for your help, I think I'll try to rig up a manager method using Brad Martsberger's solution and ArrayAgg
[05:21:32] <FunkyBob> let us know how it goes
[05:22:11] <ironbeard> 10-4, thanks again :)
[05:26:08] *** Joins: rje (~rje@50.35.241.164)
[05:29:13] *** Quits: PantelicGR (~PantelicG@user/pantelicgr) (Quit: Leaving)
[05:54:17] *** Quits: Rikem (~Rikem@user/rikem) (Ping timeout: 252 seconds)
[05:54:45] <ironbeard> Seems like `OccupationalData.objects.annotate(occupation_pks=ArrayAgg('occupations')).filter(region__code='48000', occupation_pks=list(Occupation.objects.filter(education='DOCTORATE').values_list('pk', flat=True))) does what I want.
[06:01:50] <FunkyBob> ...
[06:01:55] <ironbeard> i know it seems weird
[06:02:04] <FunkyBob> it's the values_list bit I don't like
[06:02:09] <FunkyBob> and materialising the queryset
[06:02:11] <ironbeard> oh, gotcha
[06:03:38] <ironbeard> Maybe I can do something with ArrayAgg('occupations__education'), etc, that way I would have to get pks from the Occupation queryset, since in practice I'll be getting education choices from a form
[06:06:21] <ironbeard> Yup. OccupationalData.objects.annotate(education=ArrayAgg('occupations__education', distinct=True).filter(region__code='48000', education=['DOCTORATE'])
[06:23:51] *** Joins: rje_ (~rje@50.35.241.164)
[06:25:38] *** Quits: rje (~rje@50.35.241.164) (Ping timeout: 252 seconds)
[06:26:43] *** Quits: fikran (~fikran@user/fikran) (Ping timeout: 256 seconds)
[06:28:44] *** Joins: fikran (~fikran@user/fikran)
[06:30:15] *** Joins: Elzington__ (~Elzington@static-68-235-44-10.cust.tzulo.com)
[06:32:47] *** Quits: Elzington_ (~Elzington@68.235.43.38) (Ping timeout: 252 seconds)
[07:16:19] *** Joins: bandit_za (~bandit@192.145.144.127)
[07:32:39] *** Quits: ironbeard (~geoffrey@130-45-89-178.dyn.grandenetworks.net) (Quit: WeeChat 2.3)
[07:32:57] *** Quits: dez (uid92154@user/dez) (Quit: Connection closed for inactivity)
[07:49:55] *** Joins: malvin (~retlo@172.245.134.89)
[07:51:24] <malvin> hello, are there any tools for auto deploying that i might have missed? I would like to be able to deploy multiple django apps to one vps from git with all the requirements installed and apache configured... whats the best way to do this?
[07:51:26] *** Quits: sreve (~quassel@p4ff44f7d.dip0.t-ipconnect.de) (Ping timeout: 252 seconds)
[07:51:46] *** Joins: sreve (~quassel@p4ff4408f.dip0.t-ipconnect.de)
[07:53:50] <dodo> malvin: which ones did you try, and why are you unhappy with them?
[07:54:41] <malvin> i have just decided i need to be able to do this, so nothing yet, but i have heard of fabric and i was looking for some sort of app engine  solution
[07:55:30] <malvin> what sort of things have you got in mind?
[08:01:03] *** Joins: yanchai (~yanchai@222.127.158.96)
[08:01:18] *** Parts: yanchai (~yanchai@222.127.158.96) ()
[08:16:05] *** Quits: pepper (~pepper@user/pepper) (Ping timeout: 256 seconds)
[08:16:37] <dodo> malvin: tbh, the tool isn't that important, as long as it can do what you want. i've deployed with several tools..
[08:35:59] *** Quits: fikran (~fikran@user/fikran) (Ping timeout: 252 seconds)
[08:38:05] *** Joins: fikran (~fikran@user/fikran)
[08:42:28] <malvin> whats the best place to host many django apps with low traffic
[08:43:38] <FunkyBob> when you say apps, do you mean sites?
[08:43:49] <FunkyBob> remember 'app' has an unusual meaning in the context of Django
[08:44:45] *** Joins: twomoon (~twomoon@ip72-199-116-21.sd.sd.cox.net)
[08:44:56] <FunkyBob> if  you mean sites, I find Digital Ocean is great
[08:45:17] <FunkyBob> I've managed to run 5 to 10 small sites _and_ their Postgres instance, on a $5/mo droplet
[09:08:50] <twomoon> wow....
[09:10:53] <malvin> thanks thats the sort of thing im looking for generally. any suggestion for deploying them in an automated way? "commandeploy site_name" and it will handle all apache config?
[09:11:55] *** Quits: bandit_za (~bandit@192.145.144.127) (Ping timeout: 252 seconds)
[09:12:31] <malvin> or from git
[09:14:04] <dodo> why would a deploy change the apache config?
[09:35:29] <twomoon> You should write a free book and call it "How to Squeeze Every Last Drop out of a Droplet"
[09:40:17] <FunkyBob> malvin: specifically apache?
[09:40:25] <FunkyBob> twomoon: heh
[09:47:04] <malvin> well no it doesnt have to be apache but it would have to be "production ready"
[10:21:56] *** Quits: doc (~doc@user/doc) (Ping timeout: 265 seconds)
[10:22:09] *** Joins: doc (~doc@user/doc)
[10:27:54] *** Joins: kostkon (~kostkon@2a02:587:a10f:ccbf:7bf8:4823:9d1e:88be)
[10:29:16] *** Quits: kostkon (~kostkon@2a02:587:a10f:ccbf:7bf8:4823:9d1e:88be) (Remote host closed the connection)
[10:29:35] *** Joins: kostkon (~kostkon@2a02:587:a10f:ccbf:7bf8:4823:9d1e:88be)
[10:30:46] *** Quits: kostkon (~kostkon@2a02:587:a10f:ccbf:7bf8:4823:9d1e:88be) (Remote host closed the connection)
[10:31:05] *** Joins: kostkon (~kostkon@2a02:587:a10f:ccbf:7bf8:4823:9d1e:88be)
[10:32:16] *** Quits: kostkon (~kostkon@2a02:587:a10f:ccbf:7bf8:4823:9d1e:88be) (Read error: Connection reset by peer)
[10:32:35] *** Joins: kostkon (~kostkon@2a02:587:a10f:ccbf:7bf8:4823:9d1e:88be)
[10:33:46] *** Quits: kostkon (~kostkon@2a02:587:a10f:ccbf:7bf8:4823:9d1e:88be) (Remote host closed the connection)
[10:34:05] *** Joins: kostkon (~kostkon@2a02:587:a10f:ccbf:7bf8:4823:9d1e:88be)
[10:35:05] *** Joins: jmd (~user@de.cellform.com)
[10:35:16] *** Quits: kostkon (~kostkon@2a02:587:a10f:ccbf:7bf8:4823:9d1e:88be) (Remote host closed the connection)
[10:35:35] *** Joins: kostkon (~kostkon@2a02:587:a10f:ccbf:7bf8:4823:9d1e:88be)
[10:36:46] *** Quits: kostkon (~kostkon@2a02:587:a10f:ccbf:7bf8:4823:9d1e:88be) (Remote host closed the connection)
[10:37:14] *** Joins: kostkon (~kostkon@2a02:587:a10f:ccbf:7bf8:4823:9d1e:88be)
[10:38:16] *** Quits: kostkon (~kostkon@2a02:587:a10f:ccbf:7bf8:4823:9d1e:88be) (Remote host closed the connection)
[10:38:35] *** Joins: kostkon (~kostkon@2a02:587:a10f:ccbf:7bf8:4823:9d1e:88be)
[10:39:31] *** Quits: ST47 (~ST47@wikimedia/st47) (Ping timeout: 256 seconds)
[10:39:46] *** Quits: kostkon (~kostkon@2a02:587:a10f:ccbf:7bf8:4823:9d1e:88be) (Read error: Connection reset by peer)
[10:40:05] *** Joins: kostkon (~kostkon@2a02:587:a10f:ccbf:7bf8:4823:9d1e:88be)
[10:41:16] *** Quits: kostkon (~kostkon@2a02:587:a10f:ccbf:7bf8:4823:9d1e:88be) (Remote host closed the connection)
[10:44:56] *** Quits: twomoon (~twomoon@ip72-199-116-21.sd.sd.cox.net) (Quit: Leaving)
[10:45:14] *** Quits: fikran (~fikran@user/fikran) (Ping timeout: 252 seconds)
[10:47:26] *** Joins: fikran (~fikran@user/fikran)
[11:12:55] *** Quits: Ilyu (~quassel@166.215.82.79.rev.sfr.net) (Ping timeout: 252 seconds)
[11:15:21] *** Quits: Xaldafax (~xaldafax@cpe-198-72-160-101.socal.res.rr.com) (Quit: Bye...)
[11:35:31] *** Joins: pycode1 (~pycode@2001:b07:5d28:551:4ddc:6f6c:9de7:afa0)
[12:17:36] *** Joins: EvilDMP (~textual@django/moderator/EvilDMP)
[12:17:36] *** ChanServ sets mode: +v EvilDMP
[12:34:41] *** Joins: xkuru (~xkuru@user/xkuru)
[12:36:28] *** Quits: ubernostrum (~jbennett@75-37-202-116.lightspeed.snmtca.sbcglobal.net) (Ping timeout: 265 seconds)
[12:38:44] *** Joins: ubernostrum (~jbennett@75-37-202-116.lightspeed.snmtca.sbcglobal.net)
[12:54:51] *** Quits: fikran (~fikran@user/fikran) (Ping timeout: 252 seconds)
[12:56:47] *** Joins: fikran (~fikran@user/fikran)
[13:03:51] *** Joins: kostkon_ (~androirc@2.142.66.94.static.otenet.gr)
[13:19:30] *** Quits: EvilDMP (~textual@django/moderator/EvilDMP) (Quit: My MacBook has gone to sleep. ZZZzzz…)
[13:35:41] *** Joins: explore (uid233125@id-233125.hampstead.irccloud.com)
[13:35:47] *** Joins: SteveR (~SteveR@192.146.154.3)
[13:47:23] *** Quits: kurfen (~kurfen@lfbn-ann-1-320-249.w86-200.abo.wanadoo.fr) (Quit: ZNC 1.8.2 - https://znc.in)
[13:50:42] *** Joins: yanchai (~yanchai@203.177.194.130)
[13:52:04] *** Joins: kurfen (~kurfen@160.238.38.225)
[14:08:32] *** Joins: EvilDMP (~textual@django/moderator/EvilDMP)
[14:08:32] *** ChanServ sets mode: +v EvilDMP
[14:15:03] <LordKalma> pidroid, ping?
[14:32:56] *** Quits: SteveR (~SteveR@192.146.154.3) (Ping timeout: 256 seconds)
[15:04:05] *** Quits: fikran (~fikran@user/fikran) (Ping timeout: 256 seconds)
[15:06:08] *** Joins: fikran (~fikran@user/fikran)
[15:07:35] *** Quits: pycode1 (~pycode@2001:b07:5d28:551:4ddc:6f6c:9de7:afa0) (Ping timeout: 252 seconds)
[15:07:55] *** Quits: EvilDMP (~textual@django/moderator/EvilDMP) (Quit: My MacBook has gone to sleep. ZZZzzz…)
[15:09:54] <pidroid> LordKalma o/
[15:13:29] *** Joins: EvilDMP (~textual@django/moderator/EvilDMP)
[15:13:29] *** ChanServ sets mode: +v EvilDMP
[15:20:03] *** Quits: EvilDMP (~textual@django/moderator/EvilDMP) (Quit: My MacBook has gone to sleep. ZZZzzz…)
[15:24:20] *** Joins: pycode1 (~pycode@2001:b07:5d28:551:12f1:6d27:9db9:283)
[15:29:35] *** Quits: pycode1 (~pycode@2001:b07:5d28:551:12f1:6d27:9db9:283) (Ping timeout: 252 seconds)
[15:31:59] *** Joins: Rikem (~Rikem@user/rikem)
[15:35:49] *** Quits: lucascastro (~lucascast@189.90.44.253.jupiter.com.br) (Ping timeout: 252 seconds)
[15:47:43] *** Joins: bandit_za (~bandit@192.145.144.127)
[15:55:47] *** Quits: jug (~jug@user/jug) (Quit: WeeChat 3.3)
[16:01:14] *** Joins: jug (~jug@user/jug)
[16:15:29] *** Quits: explore (uid233125@id-233125.hampstead.irccloud.com) (Quit: Connection closed for inactivity)
[16:38:02] *** Joins: EvilDMP (~textual@django/moderator/EvilDMP)
[16:38:02] *** ChanServ sets mode: +v EvilDMP
[16:44:34] *** Joins: rotherfuchs (~rotherfuc@ppp-88-217-32-153.dynamic.mnet-online.de)
[16:45:35] *** Quits: EvilDMP (~textual@django/moderator/EvilDMP) (Quit: My MacBook has gone to sleep. ZZZzzz…)
[17:04:17] <LordKalma> pidroid, sorry, had to get out in the meanwhile. I wanted to ask you a bit more about Quasar. How have you been enjoying it? I started using Vue 3 and I like it, but most of the ecosystem isn't on par, namely Boostrap-vue and etc, so I am using raw bootstrap 5. And it's a challenge sometimes. And some custom components are available in https://mdbootstrap.com/ which most of the good stuff is behind a pay wall... So I wanted to ask you how you
[17:04:17] <LordKalma> found this and how have you been enjoying it
[17:11:16] *** Joins: Donitz (~Donitz@88-115-149-152.elisa-laajakaista.fi)
[17:13:21] *** Quits: fikran (~fikran@user/fikran) (Ping timeout: 252 seconds)
[17:15:29] *** Joins: fikran (~fikran@user/fikran)
[17:16:42] *** Joins: pmb (~pmb@89-64-79-51.dynamic.chello.pl)
[17:23:29] *** Quits: pmb (~pmb@89-64-79-51.dynamic.chello.pl) (Quit: pmb)
[17:24:49] *** Joins: pmb (~pmb@89-64-79-51.dynamic.chello.pl)
[17:40:17] *** Quits: newdimension (~newdimnes@user/newdimension) (Quit: Ping timeout (120 seconds))
[17:40:37] *** Joins: newdimension (~newdimnes@user/newdimension)
[17:44:58] *** Quits: ChrisWarrick (kwpolska@user/kwpolska) (Quit: Rebooting!)
[17:46:38] *** Joins: ChrisWarrick (kwpolska@user/kwpolska)
[17:48:00] *** Quits: bionade24 (~bionade24@server2.oscloud.info) (Remote host closed the connection)
[17:49:33] *** Quits: GinFuyou (~GinFuyou@reya.cloud.tilaa.com) (Remote host closed the connection)
[17:56:19] <pidroid> LordKalma I'm a beginner about quasar (and other front end techno), my opinion is not the best
[17:56:47] <pidroid> i like very much quasar because i can do a lot of things easily and without many time
[17:58:04] <pidroid> i tried with only bootstrap through several method (manually dev the front through template, try to do with django-bootstrap4 etc)
[17:58:21] *** Joins: bionade24 (~bionade24@server2.oscloud.info)
[17:58:36] <pidroid> i already tried vuejs3 without quasar... too much time about that without all understand
[18:01:03] <pidroid> quasar is a very great framework (i use it only for the front) : same code for web front/mobile app, great component and code regrouping (we can do very specific for vhat we need through coding and use very easily and common features with component already exists) it's very flexible.
[18:01:15] *** Joins: schemefusion (~schemefus@fedora/twohot)
[18:01:30] *** Quits: pmb (~pmb@89-64-79-51.dynamic.chello.pl) (Remote host closed the connection)
[18:03:42] <pidroid> i see only 2 disadvantages  : constraint of JWT (i'm not sure but i don't find how to do without JWT), and very verbose generated HTML (too much div when we use components' encapsulation  ... but we can flatten that through one template with some time to spend on it)
[18:04:34] <pidroid> LordKalma (re highlight ^^ i should HL only when i finish my speech instead of introduction ^^)
[18:05:55] *** Joins: GinFuyou (~GinFuyou@reya.cloud.tilaa.com)
[18:07:28] *** Joins: pmb (~pmb@89-64-79-51.dynamic.chello.pl)
[18:07:46] <LordKalma> what does the framework has to do with the auth method? you don't control the backend requests?
[18:10:02] *** Joins: stdout (~stdout@50.115.255.72)
[18:12:42] *** Joins: bomzh1018 (~user@176.52.41.234)
[18:14:49] *** Quits: bomzh1018 (~user@176.52.41.234) (Client Quit)
[18:15:31] *** Joins: bomzh1018 (~user@176.52.41.234)
[18:15:37] *** Parts: bomzh1018 (~user@176.52.41.234) ()
[18:16:16] <schemefusion> Hi everyone.  I just started learning Django and I am in a bit of dilemma.  I created a python-tool that uses postgresql (formerly sqlite) and I am thinking of adding UI/frontend to it.  I decided to run with Django.  How do I go about connecting the project to Django?  Is is possible to have my tool doing its thing and Django handling only the UI-bits (browser forms etc.)?  Will I have to redesign
[18:16:22] <schemefusion> the tool afresh with Django (including the database)?  How does Django handle SQL queries (maybe I should treat this one as a seperate question)?
[18:18:00] *** Joins: bomzh1018 (~user@176.52.41.234)
[18:18:06] *** Quits: bomzh1018 (~user@176.52.41.234) (Client Quit)
[18:18:17] <pidroid> 15:37 <LordKalma> what does the framework has to do with the auth method? you don't control the backend requests? >>> i don't know XD i think i don't understand how it works for auth session through api rest (many tutorials about quasar with jwt, i found nothing about quasar without token)
[18:18:41] <LordKalma> think of those as different things
[18:19:23] <LordKalma> schemefusion, in all honestly, Django is at its best when it's used with its own ORM framework
[18:20:46] <pidroid> agree with that ! In some specific cases, you can write your own sql request but i think we have to avoid that as possible
[18:22:33] <schemefusion> wow
[18:22:41] <schemefusion> that's a lot
[18:26:36] <GinFuyou> well, it's vague question without knowing details of the project. But yeah, one of biggest features of django is an ORM. There is way to build models from existing schema, but again, depends how your project is built
[18:27:08] *** Quits: schemefusion (~schemefus@fedora/twohot) (Read error: Connection reset by peer)
[18:47:55] *** Quits: pmb (~pmb@89-64-79-51.dynamic.chello.pl) (Quit: pmb)
[18:50:47] *** Joins: pmb (~pmb@89-64-79-51.dynamic.chello.pl)
[18:58:52] *** Joins: schemefusion (~schemefus@fedora/twohot)
[18:59:31] *** Quits: kostkon_ (~androirc@2.142.66.94.static.otenet.gr) (Quit: AndroIRC - Android IRC Client ( http://www.androirc.com ))
[19:01:44] <schemefusion> did I miss something during my downtime?
[19:02:17] *** Quits: brsc2909 (~Thunderbi@109.255.244.60) (Quit: brsc2909)
[19:05:38] <GinFuyou> Last message is from me just before disconnecting
[19:06:37] *** Quits: xkuru (~xkuru@user/xkuru) (Read error: Connection reset by peer)
[19:08:55] *** Joins: xkuru (~xkuru@user/xkuru)
[19:10:53] <schemefusion> GinFuyou: and ... what was that please?
[19:11:15] <GinFuyou> <GinFuyou> well, it's vague question without knowing details of the project. But yeah, one of biggest features of django is an ORM. There is way to build models from existing schema, but again, depends how your project is built
[19:12:00] <schemefusion> did't see that.
[19:12:16] <GinFuyou> ofc, if you prefer your own database code you can still use django if you wish
[19:13:05] <GinFuyou> But I can't tell anything more conrete without more details
[19:14:16] <schemefusion> GinFuyou: I am reading up on Django ORM already. Nothing is concrete yet
[19:15:43] <GinFuyou> Well, feel free to ask when you have something. Django just a python with some magic added, mostly optional
[19:16:17] <schemefusion> so far, two puzzles (1) How does Django handle length(col) check contraints (or is it only varchar(x) data types?) (2) What about foreign keys?
[19:16:27] <schemefusion> but I might be asking too soon
[19:17:22] <GinFuyou> What exactly you mean by "how"? I could say it handles it perfectly =)
[19:18:42] <GinFuyou> But ofc ORM is limited compared to raw SQL, which I barely know, since django handles it for me
[19:18:57] <schemefusion> ah
[19:19:24] <schemefusion> I wrote all my SQLs for my tool.
[19:20:07] <schemefusion> so it feels like dropping some learning to pick a new one ... or maybe not
[19:23:07] *** Quits: fikran (~fikran@user/fikran) (Ping timeout: 256 seconds)
[19:23:39] <GinFuyou> As I said, you don't have to use django parts for it if you don't need it. Django still could be a good choice, hard to tell
[19:24:50] *** Joins: fikran (~fikran@user/fikran)
[19:26:39] <rotherfuchs> Hi. Is there a way to re-initialize Django’s settings? Background is that I have Daemon which is spawning child processes and exits. However, I need the children’s PID in runtime when loading settings.py (for Logging).
[19:27:09] <schemefusion> GinFuyou: https://developpaper.com/simple-understanding-of-django-orm-common-field-types-and-parameter-configuration/
[19:27:16] <schemefusion> that helped
[19:27:44] <schemefusion> I may be able to adapt ... redo all 42-tables
[19:29:07] <schemefusion> I should be able to update those tables from within postgres without messing with Django (should I be cautious of something?)
[19:29:14] <GinFuyou> As I said, there a tool to create models from existing db. inspect_db iirc
[19:29:38] <GinFuyou> It might non-perfect, but probably better than manual re-typing
[19:35:32] <schemefusion> GinFuyou: true, I wouldn't want to deny myself of some hard learning.  It helps to cement the process into the subconscious.
[19:40:01] <yanchai> hi everyone!
[19:40:01] *** Quits: rowbots (~dirgeable@h96-60-60-73.arvdco.broadband.dynamic.tds.net) (Ping timeout: 252 seconds)
[19:41:08] <yanchai> how do you inline dynamically between a student profile or teacher profile to a user model based on their user type?
[19:48:41] *** Joins: pepper (~pepper@user/pepper)
[19:55:01] *** Joins: Haudegen (~quassel@178.115.237.87.static.drei.at)
[20:03:01] <schemefusion> GinFuyou: the more I read about ORM, the more I feel knowing SQL was worth it. The docs are enjoyable(https://docs.djangoproject.com/en/dev/topics/db/models/)
[20:12:19] *** Joins: paprika (~pepper@user/pepper)
[20:13:20] *** Quits: pepper (~pepper@user/pepper) (Read error: Connection reset by peer)
[20:32:02] <dang`r`us> a little SQL has never hurt anyone
[20:32:25] <dang`r`us> it's also quite an interesting language to solve complex problems in
[20:32:35] <dang`r`us> that said, personally am a big fan of orm all the way as long as you can get away with it
[20:47:39] *** Joins: EvilDMP (~textual@django/moderator/EvilDMP)
[20:47:39] *** ChanServ sets mode: +v EvilDMP
[20:51:23] *** Joins: Xaldafax (~xaldafax@cpe-198-72-160-101.socal.res.rr.com)
[21:06:29] *** Quits: iomari891 (~iomari891@105.112.138.38) (Quit: WeeChat 3.3)
[21:07:23] *** Quits: EvilDMP (~textual@django/moderator/EvilDMP) (Quit: My MacBook has gone to sleep. ZZZzzz…)
[21:19:45] *** Quits: schemefusion (~schemefus@fedora/twohot) (Ping timeout: 252 seconds)
[21:21:00] *** Quits: WayToDoor (~WayToDoor@user/waytodoor) (Quit: See you later :))
[21:21:49] *** Joins: WayToDoor (~WayToDoor@user/waytodoor)
[21:27:45] *** Joins: kurfen_ (~kurfen@160.238.38.230)
[21:28:17] *** Quits: kurfen (~kurfen@160.238.38.225) (Ping timeout: 256 seconds)
[21:32:15] *** Quits: fikran (~fikran@user/fikran) (Ping timeout: 256 seconds)
[21:34:12] *** Joins: fikran (~fikran@user/fikran)
[21:44:04] *** Joins: ST47 (~ST47@wikimedia/st47)
[21:57:08] *** Parts: yanchai (~yanchai@203.177.194.130) ()
[22:17:37] *** Joins: bambanxx (~bambanx@pc-223-49-214-201.cm.vtr.net)
[22:18:12] *** Quits: bambanxx (~bambanx@pc-223-49-214-201.cm.vtr.net) (Client Quit)
[22:34:56] *** Joins: Ilyu (~quassel@166.215.82.79.rev.sfr.net)
[22:37:41] *** Quits: Ilyu (~quassel@166.215.82.79.rev.sfr.net) (Client Quit)
[22:42:59] *** Quits: paprika (~pepper@user/pepper) (Ping timeout: 252 seconds)
[22:58:26] *** Quits: pmb (~pmb@89-64-79-51.dynamic.chello.pl) (Read error: Connection reset by peer)
[23:03:18] *** Joins: blackout69 (~blackout6@net-31-156-121-187.cust.vodafonedsl.it)
[23:05:31] *** Parts: blackout69 (~blackout6@net-31-156-121-187.cust.vodafonedsl.it) ()
[23:11:26] *** Joins: Ilyu (~quassel@166.215.82.79.rev.sfr.net)
[23:40:32] *** Joins: burgandyhill191 (~AdminUser@169-0-236-53.ip.afrihost.co.za)
[23:41:27] *** Quits: fikran (~fikran@user/fikran) (Ping timeout: 256 seconds)
[23:43:33] *** Joins: fikran (~fikran@user/fikran)
[23:48:48] *** Joins: Azelphur (~Azelphur@2a01:4f8:141:3251::2)
[23:49:31] <burgandyhill191> Hii
[23:54:07] *** Quits: burgandyhill191 (~AdminUser@169-0-236-53.ip.afrihost.co.za) (Ping timeout: 252 seconds)
[23:57:27] *** Quits: Ilyu (~quassel@166.215.82.79.rev.sfr.net) (Quit: https://quassel-irc.org - Chat comfortably. Anywhere.)
