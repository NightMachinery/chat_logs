[00:00:05] *** Quits: Hokedli (~lasliedv@gateway/tor-sasl/hokedli) (Quit: Konversation terminated!)
[00:00:38] <sazawal> bjs, Lookup would be needed on decoding. Though I would want to avoid lookup and have the class available given its name.
[00:01:32] *** Joins: rany (~rany@user/rany)
[00:02:11] *** Quits: rama (~rama@c-24-130-92-222.hsd1.ca.comcast.net) (Ping timeout: 250 seconds)
[00:02:30] *** Joins: Pickchea (~private@user/pickchea)
[00:02:34] <sazawal> Yhg1s, Yeah, I was only looking for my own case. Say have the typecasted string of Exception along with string tags saying 'ZeroDivisionError'. And then on decoding using the tag to typecast again the string to 'ZeroDivisionError' object.
[00:04:11] *** Quits: gusto (~Augustus@109.255.100.54) (Quit: Textual IRC Client: www.textualapp.com)
[00:04:13] *** Quits: rinzewind (~rinzewind@user/rinzewind) (Quit: leaving)
[00:04:42] <bjs> sazawal: seems a bit of a weird thing to do,  but this will be hard to do in general because Exceptions take arguments
[00:05:20] <nedbat> sazawal: can you say more about what you will do with the exception object once you create it from the string?
[00:05:23] *** Quits: decimuscorvinus (~jimmy@136.37.105.112) (Quit: Will return)
[00:06:25] *** Joins: decimuscorvinus (~jimmy@136.37.105.112)
[00:06:36] *** Quits: markb1 (~markb1@2600:1700:eb40:7ecf:cdb0:2ad1:533d:94f3) (Quit: Leaving)
[00:07:01] <gitesh> Hi. I want to argue with .json() function that response object has after using requests module
[00:07:04] <sazawal> nedbat, I don't see a case right now what I am going to do. I was just wondering. I can also manage with Exceptions typecasted to strings
[00:07:09] <bjs> gitesh: argue?
[00:07:14] <gitesh> I mean method
[00:07:54] <gitesh> Yes I want to say that it's name is .json when what is does is it does create python list or dictionary
[00:07:57] *** Quits: decimuscorvinus (~jimmy@136.37.105.112) (Client Quit)
[00:08:21] <bjs> gitesh: it parses a response that contains JSON
[00:08:27] *** Quits: khrbt (~znc@user/khrbt) (Ping timeout: 240 seconds)
[00:08:30] <Wooble> sazawal: you could lookup the actual classes in the builtins module but this all seems like a fairly complicated idea.
[00:08:56] <gitesh> bjs: it creates python object
[00:08:57] <sazawal> Wooble, I see
[00:09:00] <bjs> gitesh: yes
[00:09:02] <deniska> gitesh: I don't like its name conceptually, but I didn't manage to come up with a better name
[00:09:19] *** Joins: khrbt (~znc@user/khrbt)
[00:09:21] *** Joins: decimuscorvinus (~jimmy@136.37.105.112)
[00:09:33] <deniska> they could do .parse_json() or something along these lines, but that's way too many characters to type :)
[00:09:43] <Wooble> also it's way too late.
[00:09:54] <nedbat> sazawal: you say you don't have a case, but also that you can manage with strings. seems like you have a real project with exceptions in json data?
[00:10:06] *** Quits: decimuscorvinus (~jimmy@136.37.105.112) (Client Quit)
[00:11:26] <sazawal> nedbat, Yes say I make a query to the server, the client then should be notified what kind of error happened at the server if the function didn't run.
[00:12:14] *** Joins: GenTooMan (~cyberman@c-73-214-106-63.hsd1.pa.comcast.net)
[00:12:21] *** Quits: CatCow (~wtf_over@c-73-96-109-206.hsd1.or.comcast.net) (Quit: My MacBook Air has gone to sleep. ZZZzzzâ€¦)
[00:12:22] <Wooble> ideally a client-server thing doesn't involve the implementation detail the other side is written in python, let alone what the exceptions are named.
[00:13:02] <sazawal> i SEE
[00:13:09] <Wooble> (serializing the exceptions for logging and debugging might make sense, but turning the back into a real exception so it can be raised(?) on the other end... less so.)
[00:13:10] *** Joins: philectro (~quassel@2a02:2788:9a4:9f0:4d54:f8e9:3f71:7a4f)
[00:13:50] <bjs> gitesh: what would you rather it was called/do ?
[00:14:16] *** Quits: Seiryuu (~Seiryuu@ip174-103-176-143.adsl2.static.versatel.nl) (Quit: Leaving)
[00:14:33] <mefistofeles> parse_json_response_to_python_object obviously
[00:15:09] *** Quits: ledtc (~ledtc@c-f8aa70d5.014-57-6c756e3.bbcust.telenor.se) (Quit: Client closed)
[00:15:35] *** Quits: drew (~drew@user/drew) (Quit: Quit)
[00:16:02] *** Quits: RangerBobVA (~bmaddox@user/rangerbobva) (Quit: Leaving)
[00:16:09] <Wooble> .jsonloads()? get rid of the method and make me .loads() it myself?
[00:16:22] <gitesh> bjs: I think because it's called  .json() I can assume it's converting to json string I think but in fact it's converting json to python sequence or dict
[00:16:40] <gitesh> I'm fine with it no probs
[00:16:48] <sazawal> Wooble, I see, yes it makes sense I gu
[00:17:05] <sazawal> guess*
[00:17:13] <Wooble> gitesh: don't look at the parameter "json=<not JSON here>" to .get() :)
[00:17:39] *** Joins: drew (~drew@user/drew)
[00:17:58] <gitesh> Wooble: what did you say
[00:18:16] <jinsun> that one is even more confusing to me really
[00:19:03] <Wooble> just accept that "json" in requests means "the opposite of json, whatever that is" and move on? :)
[00:19:56] *** Joins: ice9 (~ice9@user/ice9)
[00:24:16] <nedbat> sazawal: I would turn the exception into a complete message at the server, and return the message to the client as a string.
[00:24:19] *** Joins: Julian (~tos9@python/site-packages/Julian)
[00:24:35] <p-i-_> Suppose a multiline string has FOOquuxBAR in it. Is there a concise+fast/efficient way to pull out quux (which may be multiline)?
[00:24:38] <p-i-_> FOO and BAR look like '<div class="js-message_text" dir="auto">' and '</div>'
[00:24:52] *** Quits: tmart (~tmart@47-220-53-233.gtwncmkt04.res.dyn.suddenlink.net) (Read error: Connection reset by peer)
[00:24:55] *** Joins: markb1 (~markb1@2600:1700:eb40:7ecf:dc18:1e0:bf16:b702)
[00:25:18] *** Quits: shangxiao (~davids@124.182.71.141) (Quit: WeeChat 3.2)
[00:25:26] *** Quits: trace987 (~trace@ip5f5a6a70.dynamic.kabel-deutschland.de) (Quit: Leaving)
[00:26:02] *** Joins: Thompson (~Guest37@user/thompson)
[00:26:17] *** Joins: tmart (~tmart@47-220-53-233.gtwncmkt04.res.dyn.suddenlink.net)
[00:26:31] <nedbat> has anyone seen a coding sample specifically written to have problems in, for use as a code review exercise?
[00:26:37] <sazawal> nedbat, Right that is how I imagine, I would do
[00:26:46] *** Quits: besnn (~besnn@user/besnn) (Ping timeout: 250 seconds)
[00:26:57] <nedbat> sazawal: great, and once you do, you don't have to instantiate the exception class at the client.
[00:27:09] *** Quits: maroloccio (~marolocci@37.100.40.252) (Quit: WeeChat 3.0)
[00:27:13] <bjs> p-i-_: regex is the obvious choice but maybe you really just want a html parser
[00:27:15] <bjs> (e.g. lxml)
[00:29:11] *** Quits: Hanii (~textual@2a00:23c5:c587:6d00:bdb0:1299:ed93:e6f9) (Quit: Textual IRC Client: www.textualapp.com)
[00:29:22] *** Quits: Julian (~tos9@python/site-packages/Julian) (Ping timeout: 252 seconds)
[00:31:47] <sazawal> nedbat, Thanks.
[00:33:01] *** Joins: junktext (~junktext@77.247.181.211)
[00:37:00] *** Quits: pyfisch (~pyfisch@user/pyfisch) (Quit: Ping timeout (120 seconds))
[00:37:17] *** Quits: junktext (~junktext@77.247.181.211) (Ping timeout: 250 seconds)
[00:37:20] *** Joins: pyfisch (~pyfisch@user/pyfisch)
[00:38:28] *** Joins: rwbrambler (~Thunderbi@65.183.138.202)
[00:40:27] *** Quits: GenTooMan (~cyberman@c-73-214-106-63.hsd1.pa.comcast.net) (Ping timeout: 240 seconds)
[00:41:47] *** Joins: humbertowoody (~humbertow@2806:107e:f:5e47:59d6:428:7ad8:995e)
[00:42:34] *** Quits: arinov (~arinov@178.240.152.159) (Ping timeout: 252 seconds)
[00:44:20] *** Quits: dvx (~dvx@185.63.97.64) (Remote host closed the connection)
[00:45:06] *** Quits: Haxxa (~Haxxa@122.199.46.17) (Quit: Haxxa flies away.)
[00:45:31] *** Quits: GiLgAmEzH (~gilgamezh@a210077.upc-a.chello.nl) (Ping timeout: 250 seconds)
[00:46:27] *** Quits: rendar (~rendar@user/rendar) (Quit: Leaving)
[00:47:38] *** Joins: junktext (~junktext@109.201.152.171)
[00:48:08] *** Joins: tos9_ (~tos9@python/site-packages/Julian)
[00:48:24] *** Joins: Haxxa (~Haxxa@122.199.46.17)
[00:48:45] *** Joins: Nact (~l@2a02:a03f:c0b0:f600:3253:5994:1b4f:e854)
[00:48:47] *** Quits: xheimlich (~xheimlich@179.218.1.150) (Ping timeout: 240 seconds)
[00:48:59] <rwbrambler> Flask on IIS environment question:  I'm running from the 'cmd' on a windose server 'Flask run' and that is perfect.  However, the fastCgi from IIS has lots of import errors etc.  almost like it is has a different environment.  How do I manage that with windows server/IIS?
[00:49:51] *** Quits: drd (~drd@2001:b07:a70:9f1f:1562:34de:f50f:77d4) (Ping timeout: 250 seconds)
[00:53:35] *** tos9_ is now known as Julian
[00:53:56] *** Joins: GiLgAmEzH (~gilgamezh@a210077.upc-a.chello.nl)
[00:57:27] *** Joins: ens (~ens@yoke.ch0wn.org)
[00:59:39] <ens> hi folks i'm using beautifulsoup to get data from a page. i've read through the tutorials but i'm trying to find a good example of certain things that doesn't pop up in the tutorials
[01:00:05] *** Parts: Thompson (~Guest37@user/thompson) ()
[01:00:24] *** Joins: dontyouloveshort (~julius@ip5f5bc23e.dynamic.kabel-deutschland.de)
[01:00:36] <ens> is there a more advanced set of examples or tutorial that someone knows?
[01:01:07] *** Quits: kosh (~kosh@user/kosh) (Ping timeout: 250 seconds)
[01:02:00] <ens> for example if I want to get the '92' out of:
[01:02:04] <ens> <span style="background-color:transparent; border-style:none; padding-left:3px; padding-right:3px;">...</span><a href="/search/csgo/?searchipp=50&amp;searchpge=92#search">92</a>
[01:02:35] <ens> so there's like a "..." then the number 92 visible.
[01:03:14] <ens> the approach i might try is to do a chain of calls to next_element property but i'm not sure if that is correct or not
[01:04:17] *** Quits: Bronto22 (~mennoh@2a02:a46b:4db0:1:5604:a6ff:fe37:3044) (Quit: Konversation terminated!)
[01:05:27] *** Quits: hyper_dave (~hyper_dav@197.156.107.98) (Ping timeout: 250 seconds)
[01:05:38] *** Joins: the-mask (~the-mask@user/the-mask)
[01:07:05] *** Joins: hyper_dave (~hyper_dav@197.156.107.98)
[01:07:32] *** Joins: decimuscorvinus (~jimmy@136.37.105.112)
[01:08:05] *** Quits: Julian (~tos9@python/site-packages/Julian) (Quit: leaving)
[01:09:31] *** Quits: Elzington (~Elzington@68.235.43.100) (Quit: Leaving)
[01:10:37] *** Quits: Payam (~Payam@c188-150-219-9.bredband.tele2.se) (Ping timeout: 252 seconds)
[01:11:09] *** Quits: ano (~weechat@user/ano) (Remote host closed the connection)
[01:11:16] <matsaman> ens: I'm guessing you can search by attribute value somehow, like 'a[href^="/search/"]', or some horrible xpath syntax
[01:11:34] *** Joins: ano (~weechat@user/ano)
[01:12:04] *** Joins: lsrtl_ (~lsrtl@user/lsrtl)
[01:12:07] *** Quits: han-` (sid293063@brockwell.irccloud.com) ()
[01:12:16] <matsaman> soup.select('a[href^="/search/"]') maybe
[01:12:23] *** Joins: han-` (sid293063@id-293063.helmsley.irccloud.com)
[01:12:23] *** Quits: decimuscorvinus (~jimmy@136.37.105.112) (Client Quit)
[01:12:49] *** Joins: jeho (~jehoshaph@user/jehoshaphat)
[01:12:54] <ens> thanks matsaman
[01:13:08] *** Joins: decimuscorvinus (~jimmy@136.37.105.112)
[01:13:15] *** Joins: tm007 (uid287041@id-287041.highgate.irccloud.com)
[01:13:22] *** Quits: crabbedhaloablut (~crabbedha@user/crabbedhaloablut) (Remote host closed the connection)
[01:13:33] *** Joins: crabbedhaloablut (~crabbedha@user/crabbedhaloablut)
[01:14:33] *** Quits: lsrtl__ (~lsrtl@user/lsrtl) (Ping timeout: 250 seconds)
[01:14:33] *** Quits: the-mask (~the-mask@user/the-mask) (Quit: Leaving)
[01:16:13] *** Joins: besnn (~besnn@user/besnn)
[01:16:23] *** Bitflux is now known as Byteflux
[01:17:22] *** Joins: gravy (~gravy@61-68-224-80.tpgi.com.au)
[01:18:31] *** Quits: aman (~aman@user/aman) (Quit: aman)
[01:18:31] *** Quits: aead (~aead@user/aead) (Quit: aead)
[01:18:54] <ens> i guess what i could do is get all of those via that expression, then i can examine the next_element in each one, test if it is a number, and then store the highest value (which is the value i am looking for)
[01:19:14] *** Joins: aead (~aead@user/aead)
[01:19:16] <ens> or iterate through them and look for '...' and then the one i want is the next element
[01:21:07] *** Quits: josh_h (sid301834@id-301834.brockwell.irccloud.com) ()
[01:21:22] *** Joins: josh_h (sid301834@id-301834.helmsley.irccloud.com)
[01:21:56] <matsaman> if that's what you want, yeah you should be able to get all the numbers at once (not via '...' method), and then max them
[01:23:44] *** Quits: humbertowoody (~humbertow@2806:107e:f:5e47:59d6:428:7ad8:995e) (Quit: WeeChat 3.2)
[01:24:11] *** Quits: BillyZane (~BillyZane@91.196.220.172) (Quit: Leaving)
[01:24:15] *** Quits: sazawal (~sazawal@182.64.58.123) (Quit: Leaving)
[01:24:31] *** Quits: amahl (~amahl@dsl-jklbng12-54fbca-64.dhcp.inet.fi) (Ping timeout: 250 seconds)
[01:24:51] *** Quits: ross (sid305269@user/ross) ()
[01:25:06] *** Joins: ross (sid305269@user/ross)
[01:26:15] *** Quits: dld (~davidlowr@2620:6e:6000:2900:2dc5:f09c:7b2e:fda2) (Ping timeout: 250 seconds)
[01:26:39] *** Quits: aead (~aead@user/aead) (Quit: aead)
[01:26:40] *** Quits: Cheaterman (~Cheaterma@user/cheaterman) (Ping timeout: 240 seconds)
[01:26:55] *** Joins: aead (~aead@user/aead)
[01:27:16] *** Joins: Hanii (~textual@2a00:23c5:c587:6d00:8ab:3436:a295:7e3a)
[01:27:33] *** Joins: Cheaterman (~Cheaterma@user/cheaterman)
[01:27:37] *** Quits: aead (~aead@user/aead) (Client Quit)
[01:27:51] <p-i-_> Suppose I have id_ = int(re.findall(r'data-post-id="(.*?)">', r)[0]) ... I'm trying to rewrite it using re.search as I'm only interested in the first match.
[01:28:28] <p-i-_> But re.search(r'data-post-id="(.*?)">', r).group() doesn't do it.
[01:28:56] <nedbat> p-i-_: you want .group(1)
[01:29:06] <p-i-_> Why 1?
[01:29:11] *** Joins: aead (~aead@user/aead)
[01:29:23] <nedbat> p-i-_: because .group() is the same as .group(0) which is the entire match.  The parens make group 1.
[01:30:08] <nedbat> p-i-_: each paren pair makes a new group, numbered starting from 1
[01:31:37] *** Quits: yte3 (~0@151.15.36.56) (Quit: My MacBook has gone to sleep. ZZZzzzâ€¦)
[01:31:45] *** Quits: fortuno51 (~fortuno51@37.120.156.254) (Quit: Leaving)
[01:31:52] <p-i-_> Thanks!
[01:32:27] *** Quits: georgios (~georgios@user/georgios) (Quit: Konversation terminated!)
[01:33:25] *** Quits: blindguard (~blindguar@2a02:908:1864:c200::4433) (Quit: Konversation terminated!)
[01:34:27] *** Quits: d0ku (~d0ku@178.43.56.75.ipv4.supernova.orange.pl) (Ping timeout: 240 seconds)
[01:34:39] *** Joins: BillyZane (~BillyZane@91.196.220.174)
[01:35:03] *** Quits: besnn (~besnn@user/besnn) (Read error: Connection reset by peer)
[01:35:16] *** Quits: remedan (~remedan@balak.me) (Quit: Bye!)
[01:37:41] *** Quits: brelod (~me@87.74.198.187) (Quit: leaving)
[01:39:49] *** Joins: remedan (~remedan@balak.me)
[01:40:22] *** Quits: circuitbone (sid355934@user/circuitbone) ()
[01:40:41] *** Joins: circuitbone (sid355934@user/circuitbone)
[01:40:45] *** Quits: remedan (~remedan@balak.me) (Client Quit)
[01:41:09] *** Joins: gruuf (~gruuf@94.31.99.29)
[01:41:48] *** Quits: aead (~aead@user/aead) (Quit: aead)
[01:42:04] *** Joins: CoderCop (~CoderCop@134.209.34.45)
[01:43:02] *** Quits: wovixo (~wovixo@128.104.205.49) (Quit: Leaving)
[01:43:02] *** Joins: remedan (~remedan@balak.me)
[01:43:54] *** Joins: ali1234 (~al@user/ali1234)
[01:44:34] <p-i-_> image_url = re.search('''background-image:url\('(.*?)'\)">''', r).group(1)  This throws "'NoneType' object has no attribute 'group'" if not found.
[01:45:13] *** Joins: merijn (~merijn@83-160-49-249.ip.xs4all.nl)
[01:45:18] <p-i-_> Which means I now need 2 lines of code and a temporary variable
[01:45:19] *** Quits: ubert (~Thunderbi@178.165.204.112.wireless.dyn.drei.com) (Ping timeout: 250 seconds)
[01:45:39] <matsaman> p-i-_: what's r?
[01:45:40] <Yhg1s> p-i-_: yes. Fortunately, both are free.
[01:45:47] *** Quits: zeden (~zeden@user/zeden) (Quit: WeeChat 3.0.1)
[01:45:52] *** Quits: EvilDMP (~textual@django/moderator/EvilDMP) (Quit: My MacBook has gone to sleep. ZZZzzzâ€¦)
[01:45:53] *** Quits: AM (~techman@82-203-164-15.bb.dnainternet.fi) (Killed (NickServ (GHOST command used by AM_!~techman@82-203-161-159.bb.dnainternet.fi)))
[01:46:01] *** Joins: AM (~techman@82-203-161-159.bb.dnainternet.fi)
[01:46:03] <p-i-_> I kinda wish python allowed something like `x = f() except 0`
[01:46:09] <matsaman> it does
[01:46:16] <p-i-_> matsaman: a string
[01:46:16] <Yhg1s> it's called a function :)
[01:46:51] <matsaman> p-i-_: I admit it can get hairy, and for what =)
[01:47:40] <twomoon> p-i-_, what do you mean?
[01:47:51] <twomoon> i'm confused what you are getting at because i'm a newbie
[01:49:26] *** Joins: Julian (~tos9@python/site-packages/Julian)
[01:50:31] <gloin> Question about accessing data from a dictionary of named tuples: using psutil.net_if_addrs as per https://psutil.readthedocs.io/en/latest/#psutil.net_if_addrs - how would I later retrieve the value for wlan0 matching the MAC address (AF_LINK family)? It's easy enough to get the values but I don't know how to use them.
[01:51:10] <ens> if i get a string returned from soup via 'x.next_element' which returns a string which might be a valid integer, but I want to check, how do i perform such a check?
[01:51:13] <jinsun> p-i-_: if you can live with None as the default you could (mis)use walrus and and here, `image_url = (m:=re.search('''background-image:url\('(.*?)'\)">''', r)) and m.group(1)`
[01:51:14] <gloin> (part of this is of course that tuple is a completely new var for me)
[01:51:27] *** Joins: Elzington (~Elzington@68.235.43.172)
[01:51:43] *** Quits: Knyght (sid365271@id-365271.brockwell.irccloud.com) ()
[01:51:49] *** Quits: fikran (~fikran@user/fikran) (Ping timeout: 250 seconds)
[01:51:58] *** Joins: Knyght (sid365271@id-365271.helmsley.irccloud.com)
[01:52:41] <gloin> also what the heck is the difference between a tuple and a dict?
[01:53:02] <Staunch> gloin: a tuple is an immutable array, a dict is a key-value mapping
[01:53:10] *** Joins: fortuno51 (~fortuno51@37.120.156.254)
[01:53:11] <Staunch> gloin: i can be more specific if you want!
[01:53:28] <ens> ah nm, i used x.isdigit and that worked.
[01:53:36] <gloin> Sure, but isn't a namedtuple a key-value mapping also?
[01:53:43] *** Quits: fortuno51 (~fortuno51@37.120.156.254) (Remote host closed the connection)
[01:53:53] *** Joins: odoood (~odoood@2601:c8:c003:a550::7)
[01:53:55] *** Joins: fikran (~fikran@user/fikran)
[01:54:19] <Staunch> gloin: a namedtuple is the precursor to a dataclass, and yeah it's kind of like a key-value mapping in that you can refer to its values with specific keys
[01:54:23] *** Quits: jetchisel (jetchisel@user/jetchisel) (Quit: Unfortunately time is always against us -- [Morpheus])
[01:54:59] <gloin> Staunch: so in the example from the link I pasted above, how would I access the MAC address of wlan0?
[01:55:31] <gloin> a dictionary of named tuples
[01:56:26] <Staunch> gloin: probably something like `psutil.net_if_addrs()["wlan0"].address`
[01:56:53] <Staunch> oh it's a list
[01:57:01] <gloin> except that wlan0 has 3 address entries :)
[01:57:03] <Staunch> so `psutil.net_if_addrs()["wlan0"][0].address`
[01:57:18] <Staunch> do you want to get all of them?
[01:57:21] <gloin> zero-indexed, so the MAC address would be [2] probably
[01:57:32] <Staunch> nono, it's a list of namedtuples
[01:57:40] <Staunch> so i'm getting the first namedtuple out of the list and getting its address
[01:58:27] <Staunch> you *can* get the address by [1] if you want to, but part of the benefit of namedtuples is that you don't need to use the index number, you can use a more readable name
[01:58:28] *** Quits: GiLgAmEzH (~gilgamezh@a210077.upc-a.chello.nl) (Ping timeout: 252 seconds)
[01:58:36] *** Joins: ayustae (Thunderbir@gateway/vpn/protonvpn/ayustae)
[01:58:44] <gloin> Staunch: I'll be needing different parts of that dict at different times, and the MAC address is in the third tuple so (I'll try this in a sec) psutil.net_if_addrs()["wlan0"][2].address
[01:59:23] <Staunch> oh OK, i see. I couldn't see "MAC" in any of them, but i see that the `address` of the third entry looks like a MAC address
[01:59:40] <gloin> is there any way to filter the list for AF_INET, AF_INET6, AF_LINK rather than [0], [1], [2]?
[01:59:47] *** Quits: darksun (~darksun@user/darksun) (Ping timeout: 240 seconds)
[01:59:53] <Staunch> you can use list comprehension if you want
[02:00:40] *** Quits: ayustae (Thunderbir@gateway/vpn/protonvpn/ayustae) (Client Quit)
[02:00:40] <Staunch> gloin: `[wlan0.address for wlan0 in psutil.net_if_addrs()["wlan0"] if wlan0.family==AddressFamily.AFLINK]`
[02:00:43] <gloin> Just in case future versions of psutils add a new tuple, or present them in different orders, etc... would like to be sure I'm picking the right type of address
[02:01:07] *** Quits: remedan (~remedan@balak.me) (Quit: Bye!)
[02:01:20] <Staunch> or if you want to pick out every MAC address, you can do that, too
[02:01:35] <Staunch> (rather than just wlan0's)
[02:01:45] <gloin> there had better be only one IP address per interface! lol
[02:01:51] <gloin> s/IP/MAC
[02:02:14] <gloin> an interface can have any number of IPs but better have only one MAC unless it's spoofing and then I'm going to go yell at somebody
[02:02:55] <nubonix> so i have a reverse proxy that im sending a file to [starlette server] and im trying to forward the file to another server, but im having some difficulties. im `file = await r.form()` and then trying to `r = await httpx.post(url, files=file)` but im getting an await error, so the await error is kinda of confusing to me, it says that im not awaiting UploadFile read
[02:03:20] *** Quits: NiKaN (sid385034@id-385034.brockwell.irccloud.com) ()
[02:03:47] *** Joins: NiKaN (sid385034@id-385034.helmsley.irccloud.com)
[02:04:10] <Staunch> gloin: haha :P
[02:05:14] *** Quits: Yhg1s (sid387777@python/psf/thomas) ()
[02:05:30] *** Joins: Yhg1s (sid387777@python/psf/thomas)
[02:05:59] <gloin> Actually I really doubt psutils see the spoofed MAC address as that's generally set up in a mangle table or similar.
[02:06:14] *** Quits: fedenix_ (~fedenix@gateway/tor-sasl/fedenix) (Remote host closed the connection)
[02:06:43] *** Joins: Samian (~Sami@2620:10d:c091:480::1:7de4)
[02:06:45] <Samian> Anyone know a python formatting tool that also nicely picks right margin cutoff points where paragraph long comments?
[02:06:55] <Samian> or that has a "justified text" comment format?
[02:07:13] *** Joins: remedan (~remedan@balak.me)
[02:07:41] <nedbat> Samian: are you talking about formatting comments in your .py files?
[02:08:24] *** Quits: manti7 (~manti7@176.10.104.94) (Quit: WeeChat 3.1)
[02:08:43] *** Quits: rakoon (~rakoon@2a02:2149:824f:5900:1237:a91a:e02e:b58a) (Ping timeout: 250 seconds)
[02:09:07] *** Quits: gr33n7007h (~gr33n7007@user/gr33n7007h) (Ping timeout: 240 seconds)
[02:09:27] *** Parts: ska (~ska@user/ska) (Leaving)
[02:10:31] <gloin> Thanks Staunch! This will let me move forward on the instant thing and hopefully be able to parse structures like this better in the future.
[02:10:46] <Staunch> happy to help, gloin :)
[02:11:51] *** Quits: palasso (~palasso@user/palasso) (Remote host closed the connection)
[02:12:07] *** Quits: Pickchea (~private@user/pickchea) (Quit: Leaving)
[02:12:57] <nubonix> ah nvm, i need to not send the file to the reverse proxy, but read the file within the reverse proxy instead
[02:13:00] *** Quits: remedan (~remedan@balak.me) (Quit: Bye!)
[02:13:11] *** Joins: karstensrage (~karstensr@user/karstensrage)
[02:15:04] *** Joins: remedan (~remedan@balak.me)
[02:15:27] *** Quits: blingrang (~blingrang@user/blingrang) (Ping timeout: 240 seconds)
[02:17:43] *** Quits: akk (~akk@174-28-98-206.albq.qwest.net) (Ping timeout: 252 seconds)
[02:18:55] *** Quits: Barones (~Barones@2804:48dc:8500:0:79ad:e053:ee44:f3e6) (Quit: Leaving)
[02:19:22] *** Quits: merijn (~merijn@83-160-49-249.ip.xs4all.nl) (Ping timeout: 252 seconds)
[02:19:33] *** Quits: noarb (~noarb@user/noarb) (Ping timeout: 250 seconds)
[02:19:53] *** Quits: Julian (~tos9@python/site-packages/Julian) (Ping timeout: 248 seconds)
[02:20:05] *** Joins: noarb (~noarb@user/noarb)
[02:20:30] <aphysically> okay I think I'm mostly done with cleaning up the code style before I split into a project and/or do any more work https://dpaste.com/8EJ89SA9D
[02:20:51] *** Quits: odoood (~odoood@2601:c8:c003:a550::7) (Ping timeout: 250 seconds)
[02:21:09] <aphysically> pytype/mypy --strict are both happy, flake8 and pylint are happy or have errors I don't care about/have addressed
[02:21:40] <aphysically> I guess I still need to add docstrings, but I'm not sure if I should add them EVERYWHERE, or only add detailed docstrings for methods intended (or that possibly could be) public and just have short descriptive docstirngs otherwise
[02:21:43] *** Quits: Jefren2 (~Jefren@70.35.66.130) (Ping timeout: 250 seconds)
[02:22:00] *** Quits: Nact (~l@2a02:a03f:c0b0:f600:3253:5994:1b4f:e854) (Quit: Konversation terminated!)
[02:22:59] <aphysically> oops, had left one debug line in https://dpaste.com/ANDT3SPAY
[02:23:43] *** Joins: Jefren2 (~Jefren@70.35.66.174)
[02:25:12] <aphysically> I guess a style thing I could fix is try to change code that's using try/except to accomplish something with actual checks
[02:25:51] *** Joins: MetalSutton (~MetalSutt@101.100.153.131)
[02:25:54] *** Quits: c10l (~c10l@89.34.167.207) (Quit: The Lounge - https://thelounge.chat)
[02:26:43] *** Quits: MetalSutton (~MetalSutt@101.100.153.131) (Client Quit)
[02:27:08] *** Joins: MetalSutton (~MetalSutt@101.100.153.131)
[02:27:14] *** Quits: LucaTM (~LucaTM@user/lucatm) (Quit: Textual IRC Client: www.textualapp.com)
[02:27:47] *** Quits: rubion (~rubion@cpc124306-ayle4-2-0-cust188.15-2.cable.virginm.net) (Ping timeout: 240 seconds)
[02:28:47] *** Quits: gitesh (uid423739@id-423739.charlton.irccloud.com) (Quit: Connection closed for inactivity)
[02:29:16] *** Joins: jamiejackson (~jamiejack@199.223.30.254)
[02:29:29] *** Quits: cuz (~user@38.140.58.234) (Ping timeout: 248 seconds)
[02:30:25] *** Joins: Fiji (~Fiji@user/fiji)
[02:32:05] *** Quits: fofoni (~fofoni@user/fofoni) (Quit: Leaving)
[02:32:30] <aphysically> something like this snippet processing some json: https://bpa.st/3SQA -> I catch a keyerror to determine if the json was malformed, but I could also explicitly check that all the keys are in the dictionary
[02:34:30] *** Joins: lethu (~lethu@user/lethu)
[02:35:09] *** Quits: cthulchu (~Cthulchu@193.194.107.250) (Ping timeout: 250 seconds)
[02:35:39] *** Joins: merijn (~merijn@83-160-49-249.ip.xs4all.nl)
[02:36:28] *** Joins: ubert (~Thunderbi@178.165.204.112.wireless.dyn.drei.com)
[02:36:35] <aphysically> I'm not sure which is better "style"
[02:36:57] <aphysically> I guess since I raise the error here anyway it doesn't matter
[02:37:59] *** Quits: ubert (~Thunderbi@178.165.204.112.wireless.dyn.drei.com) (Client Quit)
[02:38:17] *** Joins: ubert (~Thunderbi@178.165.204.112.wireless.dyn.drei.com)
[02:38:25] *** Joins: freeman_h (~freeman_h@2a02:c7f:fc54:ba00:915d:a826:785c:4336)
[02:39:55] *** Quits: thiras (~thiras@user/thiras) (Ping timeout: 250 seconds)
[02:41:22] *** Quits: merijn (~merijn@83-160-49-249.ip.xs4all.nl) (Ping timeout: 252 seconds)
[02:42:31] *** Quits: ubert (~Thunderbi@178.165.204.112.wireless.dyn.drei.com) (Ping timeout: 250 seconds)
[02:42:43] *** Joins: darksun (~darksun@user/darksun)
[02:43:05] *** Quits: ezio (~ezio@user/ezio) (Read error: Connection reset by peer)
[02:44:27] *** Joins: ubert (~Thunderbi@178.165.204.112.wireless.dyn.drei.com)
[02:45:08] <gloin> Staunch: going back to the example from psutil, I'm trying to get the interface names and then use them in a single line, something like `for inter in psutil.net_if_addrs() #\n print(inter.keys)`
[02:45:10] *** Quits: ubert (~Thunderbi@178.165.204.112.wireless.dyn.drei.com) (Client Quit)
[02:45:22] <gloin> this returns str object has no attribute keys
[02:46:22] <gloin> I'm working with a dict of lists of namedtuples - wouldn't 'lo' and 'wlan0' be the keys there?
[02:46:29] <gloin> https://psutil.readthedocs.io/en/latest/#psutil.net_if_addrs
[02:47:43] *** Quits: darksun (~darksun@user/darksun) (Ping timeout: 250 seconds)
[02:47:58] *** Quits: lsrtl_ (~lsrtl@user/lsrtl) (Ping timeout: 252 seconds)
[02:48:21] <gloin> if I set interfaces = psutil.net_if_addrs() and then for inter in interfaces\ print(inter) then I get the interface names... what I'm ultimately going for is something like, uh
[02:48:35] *** Quits: lxer (~lx@ip5f5bf666.dynamic.kabel-deutschland.de) (Ping timeout: 250 seconds)
[02:51:32] *** Quits: ncwbqcfe (~rvgzuuqp@gateway/tor-sasl/rvgzuuqp) (Remote host closed the connection)
[02:51:45] *** Quits: daddy (ryan@hashbang/bdfl) (Read error: Connection reset by peer)
[02:52:15] *** Joins: ncwbqcfe (~rvgzuuqp@gateway/tor-sasl/rvgzuuqp)
[02:52:26] <gloin> honestly pretty simple - (not python) print "$_\n" for keys %interfaces;
[02:52:53] *** Quits: GreenResponse (~tomek@r-45-155-148-237.gpon.bialnet.pl) (Quit: Leaving)
[02:53:13] *** Joins: shailangsa (~shailangs@host86-185-102-120.range86-185.btcentralplus.com)
[02:53:21] <greatgatsby> gloin, it's a dict, you can iterate over keys with `for nic in psutil.net_if_addrs().keys()` or both keys and values (list of tuples) with `for nic, addresses in psutil.net_if_addrs().items()`
[02:54:23] *** Quits: upsala (~zcb@185.213.155.160) (Quit: WeeChat 3.2)
[02:54:32] <greatgatsby> actually, you can omit the .keys() too if you want, since that's implied it you iterate over a dict
[02:54:56] <gloin> yeah, that's kind of what I have already
[02:55:20] <greatgatsby> the keys are string, if you want the data associated with each key (nic) you need .items() as I showed
[02:55:45] <greatgatsby> there's no nic.keys()
[02:56:23] <gloin> I am hopelessly turned around hah
[02:57:07] <greatgatsby> print([(nic, len(addresses)) for nic, addresses in psutil.net_if_addrs().items()])
[02:57:48] <greatgatsby> gloin, is kind of a weird data structure.  There's keys, which are the nic as a string.  The value for each key (nic) is a list of tuples.
[02:58:16] <gloin> yeah it is odd, one sec
[02:58:56] <greatgatsby> gloin, here's just the keys:  print([nic for nic in psutil.net_if_addrs()])
[02:59:29] <gloin> greatgatsby: https://bpa.st/2HHA
[03:00:09] <gloin> I've got a class get_hostinfo() that sets "ints" this way: ints = psutil.net_if_addrs()
[03:01:08] <gloin> What I'm trying to do is run a for loop against all the ints entries and use them to populate: Interfaces = namedtuple("name", "ipv4 ipv6 netmaskv4 netmaskv6 macaddress")
[03:01:38] <gloin> so the one that's hard to get ironically is "name"
[03:01:59] <greatgatsby> gloin, I think you want `for inter, addresses in get_hostinfo().ints.items()`
[03:02:32] *** Joins: bomb-on (~bomb-on@194.144.47.113)
[03:02:36] <greatgatsby> so addresses will be a list of tuples
[03:02:44] *** Quits: philectro (~quassel@2a02:2788:9a4:9f0:4d54:f8e9:3f71:7a4f) (Quit: https://quassel-irc.org - Chat comfortably. Anywhere.)
[03:02:45] <gloin> ah, there it is
[03:03:43] <gloin> python "continue" == perl "next" eh?
[03:03:47] *** Quits: elastic_dog (~elastic_d@2a01:118f:822:9c00:f583:aa51:9ad4:d4fb) (Ping timeout: 240 seconds)
[03:04:05] <gloin> "next if ($name eq 'lo')"
[03:04:11] *** Quits: freeworld (~vit@chello085216193138.chello.sk) (Ping timeout: 250 seconds)
[03:04:23] <greatgatsby> yeah, looks like it, just continue to next iteration
[03:04:29] *** Quits: Hanii (~textual@2a00:23c5:c587:6d00:8ab:3436:a295:7e3a) (Quit: Textual IRC Client: www.textualapp.com)
[03:04:46] <greatgatsby> continue/break used a lot in loops
[03:04:46] <gloin> cool so I'll add the if lo continue at the beginning of this for loop
[03:05:02] *** Quits: Norore (~weechat@2a01:e0a:23a:5600:b9d3:ae19:12de:25b) (Quit: WeeChat 3.2)
[03:07:37] *** Joins: Barones (~Barones@2804:7f3:8987:a56:1904:b84d:d454:b1fa)
[03:09:43] *** Quits: mefistofeles (~mefistofe@user/mefistofeles) (Quit: Hay te huacho!)
[03:10:30] *** Joins: elastic_dog (~elastic_d@2a01:118f:822:9c00:f583:aa51:9ad4:d4fb)
[03:10:52] *** Quits: gruuf (~gruuf@94.31.99.29) (Quit: WeeChat 3.1)
[03:11:27] *** Joins: merijn (~merijn@83-160-49-249.ip.xs4all.nl)
[03:12:10] *** Quits: Gurkenglas (~Gurkengla@dslb-088-064-053-140.088.064.pools.vodafone-ip.de) (Ping timeout: 240 seconds)
[03:15:33] *** Joins: abhixec (~abhixec@c-67-169-139-16.hsd1.ca.comcast.net)
[03:15:53] *** Quits: merijn (~merijn@83-160-49-249.ip.xs4all.nl) (Ping timeout: 250 seconds)
[03:16:10] *** Joins: GenTooMan (~cyberman@2601:547:437f:e5c6:21f:5bff:fefe:a883)
[03:16:12] *** Joins: djapo (~archangel@user/djapo)
[03:18:27] *** Joins: ogis_ (~Android@p1927250-omed01.osaka.ocn.ne.jp)
[03:19:47] *** Quits: ogis (~Android@p2037202-ipngn201011tokaisakaetozai.aichi.ocn.ne.jp) (Ping timeout: 240 seconds)
[03:20:02] *** Quits: harpia (~harpia@58.148.205.168.dynamic.vibefibra.com.br) (Read error: Connection reset by peer)
[03:20:17] *** Joins: harpia (~harpia@58.148.205.168.dynamic.vibefibra.com.br)
[03:22:40] *** Joins: rmm2 (~rmm@user/rmm)
[03:26:52] *** Quits: nomic (~nomic@185.192.69.143) (Quit: Leaving)
[03:27:09] *** Joins: nomic (~nomic@185.192.69.143)
[03:28:08] *** Joins: [itchyjunk] (~itchyjunk@user/itchyjunk/x-7353470)
[03:31:10] *** Quits: m4v (~znc@ubuntu/member/m4v) (Ping timeout: 240 seconds)
[03:31:21] *** Quits: Midjak (~Midjak@82-65-111-221.subs.proxad.net) (Quit: This computer has gone to sleep)
[03:31:48] *** Joins: emika6 (~emika@185.207.249.22)
[03:31:55] *** Quits: melba (~melba@user/melba) (Ping timeout: 250 seconds)
[03:32:31] *** Quits: emika (~emika@185.207.249.177) (Ping timeout: 252 seconds)
[03:32:31] *** emika6 is now known as emika
[03:33:57] *** Joins: m4v (~znc@ubuntu/member/m4v)
[03:36:32] *** Joins: Grace (uid33812@id-33812.tooting.irccloud.com)
[03:36:36] *** Quits: etienneme (~etienne@user/etienneme) (Ping timeout: 256 seconds)
[03:37:00] <Grace> Hi! Wondering what the best way to figure out the code calling a function is.
[03:37:05] <Grace> I'm using the inspect module right now
[03:37:42] <Grace> using f_lineno gives the whole line (not useful when you have two calls to the same function and you want to figure out which one called you), and f_code gives you already interpreted code that isn't super useful
[03:37:55] *** Joins: Kabouik (~Kabouik@user/kabouik)
[03:38:28] <nedbat> Grace: is this for debugging
[03:38:43] <nedbat> ?
[03:39:04] <Grace> nedbat: I'm building a compiler for a research project, with the goal being to replace calls with optimized calls in the code
[03:39:07] *** Quits: jan6 (jan6@tilde.team/user/jan6) (Ping timeout: 240 seconds)
[03:39:43] *** Quits: dontyouloveshort (~julius@ip5f5bc23e.dynamic.kabel-deutschland.de) (Ping timeout: 250 seconds)
[03:39:44] <Grace> so you'd do something like f.auto_optimize() and then it would be replaced with something like f.tile_loop(params1).loop_unroll(params2) with the parameters being calculated at runtime
[03:39:53] <Grace> for the specific system that you're running stuff on
[03:40:13] *** Quits: kyooo (~kyooo@2a02:a31d:a13c:5600:559d:f748:905d:cda9) (Quit: Leaving)
[03:40:36] <Kabouik> Hi, I'm a total newbie in python and am just trying to alter a script I got from someone else. Already altered it a bit to get closer to a json format at the end. It's using Beautifulsoup to scrap html, but it returns values in single quotes instead of double quotes that json expects. How should I fix that? https://0x0.st/-tap.py
[03:40:36] <Grace> this has to run in a fully automated manner so that an autotuner (GPTune, OpenTuner, etc.) can automatically twiddle the parameters and run the code again
[03:40:38] *** Quits: luna-is-here (~quassel@2a02:908:f761:2a3c::a) (Remote host closed the connection)
[03:41:47] *** Joins: luna-is-here (~quassel@2a02:908:f761:2a3c::a)
[03:42:10] *** Quits: FastJack (~fastjack@b2b-78-94-22-14.unitymedia.biz) (Ping timeout: 240 seconds)
[03:42:27] *** Joins: luvalon13 (~luva@178.239.173.200)
[03:42:40] *** Quits: de-facto (~de-facto@user/de-facto) (Ping timeout: 240 seconds)
[03:43:27] <Grace> so I need to figure out exactly which call to auto_optimize this is calling - otherwise I might have something like f.auto_optimize().some_other_transform().auto_optimize() and the code would rewrite the wrong thing
[03:43:37] *** Quits: luvalon1 (~luva@178.239.173.200) (Ping timeout: 248 seconds)
[03:43:37] *** luvalon13 is now known as luvalon1
[03:43:54] *** Joins: FastJack (~fastjack@b2b-78-94-22-14.unitymedia.biz)
[03:44:28] *** Joins: dre (~dre@2001:8003:c932:c301:f2dc:20c8:e2c8:6a40)
[03:46:20] *** Joins: de-facto (~de-facto@user/de-facto)
[03:47:21] *** Joins: bitdex (~bitdex@gateway/tor-sasl/bitdex)
[03:48:58] *** Quits: pretty_dumm_guy (trottel@gateway/vpn/protonvpn/prettydummguy/x-88029655) (Quit: WeeChat 3.2)
[03:51:05] *** Joins: darksun (~darksun@user/darksun)
[03:51:44] *** Quits: SuperLag (~akulbe@user/superlag) (Remote host closed the connection)
[03:52:03] *** Joins: mefistofeles (~mefistofe@user/mefistofeles)
[03:52:33] <nedbat> Kabouik: can you use a different pastebin?
[03:52:50] <Kabouik> Basically I would need my py script above to return a standard json file that I could pipe into jtbl
[03:52:56] <Kabouik> Sure, one second
[03:53:27] *** Quits: Wulf (~Wulf@user/wulf) (Ping timeout: 240 seconds)
[03:55:17] <Kabouik> https://dpaste.com/BHMLAJ6YM
[03:55:40] *** Quits: darksun (~darksun@user/darksun) (Ping timeout: 240 seconds)
[03:56:10] *** Quits: waynew (~wayne@user/waynew) (Quit: WeeChat 2.9)
[03:56:26] <nedbat> Kabouik: you should use the json module: json.dump
[03:56:44] *** Quits: bomb-on (~bomb-on@194.144.47.113) (Quit: aÐ»Ð»Ð¸Ð»Ñ¹Ñ–Ð°!)
[03:57:29] <Kabouik> Could you elaborate on how to use it? I have no Python base skills, just editing by iterations so far and I'm actually glad that I didn't make the initial script worse yet!
[03:59:07] *** Quits: djapo (~archangel@user/djapo) (Ping timeout: 240 seconds)
[03:59:17] *** Quits: cedric (~cedric@2a01:cb11:867:c200:9ded:a5fb:748e:8961) (Quit: Konversation terminated!)
[04:00:36] <nedbat> Kabouik: replace the last three lines with: print(json.dumps({"Date": PTF, "Location": locs, "Details": details}))
[04:01:07] *** Quits: fikran (~fikran@user/fikran) (Ping timeout: 252 seconds)
[04:01:14] <nedbat> Grace: i'm not sure how your compiler is working, but you might need to use the AST to get more information
[04:01:48] *** Quits: mefistofeles (~mefistofe@user/mefistofeles) (Quit: Hay te huacho!)
[04:02:23] <Kabouik> Even the values between square brackets are probably not properly formated after I replace single quotes by double quotes, because jtbl is not happy: https://dpaste.com/FPM4JVFXC.txt
[04:02:31] *** Quits: cliluw (~cliluw@47.147.80.149) (Quit: Leaving)
[04:02:56] *** Quits: Akuli (~Akuli@82-203-163-199.bb.dnainternet.fi) (Quit: Leaving)
[04:03:17] *** Joins: fikran (~fikran@user/fikran)
[04:03:24] *** Quits: ogis_ (~Android@p1927250-omed01.osaka.ocn.ne.jp) (Quit: -a- Connection Timed Out)
[04:04:03] *** Joins: mefistofeles (~mefistofe@user/mefistofeles)
[04:04:16] <nedbat> Kabouik: is that with my code, or your original code?
[04:04:27] *** Quits: decimuscorvinus (~jimmy@136.37.105.112) (Quit: Will return)
[04:04:59] <Kabouik> Oh wait, I missed your code above. Let me try.
[04:05:03] *** Joins: Nalt (~Nalt|||@162-239-107-41.lightspeed.rcsntx.sbcglobal.net)
[04:05:28] *** Joins: herjazz (~herjazz@p6758124-ipngn30801marunouchi.tokyo.ocn.ne.jp)
[04:06:40] *** Joins: d0ku (~d0ku@178.43.56.75.ipv4.supernova.orange.pl)
[04:07:11] <Kabouik> I get double quotes with your code directly (without my sed pipe) indeed
[04:07:32] <Kabouik> However items within [ ] and separated by commas still don't show as separate lines in jtbl
[04:07:45] *** Joins: ogis (~Android@p1927250-omed01.osaka.ocn.ne.jp)
[04:07:46] <Kabouik> I'm checking the jtbl man page, see if I didn't just miss a flag
[04:11:05] <Kabouik> Works fine here though: http://json2table.com/
[04:11:13] <Kabouik> So maybe jtbl just doesn't support that
[04:11:57] <gloin> Python version of "if($string =~ /foo/)" is?
[04:12:07] *** Joins: decimuscorvinus (~jimmy@136.37.105.112)
[04:12:31] <gloin> I keep finding really complex import re kinds of stuff, surely it's simpler?
[04:12:57] <matsaman> gloin: you're trying to see if a regex matches?
[04:13:29] <gloin> matsaman: yeah, so if the variable named "string" contains the text "foo" somewhere in it
[04:14:31] <matsaman> maybe re.search('foo',string)
[04:14:43] <matsaman> and in certain circumstances you might consider using 'in'
[04:14:57] <gloin> when would 'in' be better?
[04:15:18] *** Joins: Wulf (~Wulf@user/wulf)
[04:15:48] <matsaman> I think 'in' is faster, and it's also pretty darn readable, not to mention you don't need to import re
[04:15:58] * matsaman shrugs
[04:16:09] *** Quits: winlundn (nick@2600:3c01::f03c:92ff:fef3:7260) (Quit: WeeChat 2.8)
[04:16:11] <matsaman> for most things I doubt it would matter which you choose
[04:16:21] <gloin> ah crud, bytes vs str again
[04:16:22] <gloin> sigh
[04:16:34] <gloin> TypeError: expected string or bytes-like object
[04:16:34] *** Quits: qlixed (~qlixed@152.170.36.244) (Remote host closed the connection)
[04:16:45] <matsaman> type(string)
[04:17:04] *** Quits: Elzington (~Elzington@68.235.43.172) (Ping timeout: 252 seconds)
[04:17:37] *** Quits: luvalon1 (~luva@178.239.173.200) (Ping timeout: 252 seconds)
[04:17:37] *** Quits: de-facto (~de-facto@user/de-facto) (Quit: See you around. ðŸ’¤)
[04:18:00] <gloin> if search('AddressFamily.AF_INET', subs.family): throws the error, but printing subs.family is fine
[04:18:10] *** Quits: FastJack (~fastjack@b2b-78-94-22-14.unitymedia.biz) (Ping timeout: 252 seconds)
[04:18:13] *** Joins: jazzy (~jaziz@2600:380:8773:c113:283b:42e6:63fd:12e7)
[04:18:16] <gloin> python isn't parsing the dot in the quoted string is it?
[04:18:19] *** Joins: luvalon1 (~luva@178.239.173.200)
[04:18:39] *** Joins: Elzington (~Elzington@68.235.43.172)
[04:18:39] *** Joins: winlundn (nick@2600:3c01::f03c:92ff:fef3:7260)
[04:18:48] *** Quits: shokohsc (~shokohsc@161.88.195.77.rev.sfr.net) (Remote host closed the connection)
[04:19:54] <gloin> str(subs.family)
[04:20:03] <gloin> fixed
[04:20:06] <matsaman> =)
[04:20:07] *** Joins: FastJack (~fastjack@b2b-78-94-22-14.unitymedia.biz)
[04:20:09] <matsaman> what was it before?
[04:20:13] <matsaman> type(subs.family)
[04:20:26] *** Joins: de-facto (~de-facto@user/de-facto)
[04:20:39] <gloin> enum
[04:20:41] *** Quits: harpia (~harpia@58.148.205.168.dynamic.vibefibra.com.br) (Quit: Leaving)
[04:20:48] <matsaman> ah
[04:20:49] *** Joins: shokohsc (~shokohsc@161.88.195.77.rev.sfr.net)
[04:20:56] *** Quits: freeman_h (~freeman_h@2a02:c7f:fc54:ba00:915d:a826:785c:4336) (Read error: Connection reset by peer)
[04:21:21] <matsaman> as long as it's what you expect it to be after you make it a string
[04:22:46] <nedbat> gloin: what is search?
[04:23:20] <gloin> I should probably make this a case statement - subs.address will be use differently depending on whether subs.family is INET, INET6, or PACKET
[04:23:32] <gloin> (Python does have case statements right?)
[04:23:55] *** Quits: Elzington (~Elzington@68.235.43.172) (Ping timeout: 250 seconds)
[04:24:04] *** Joins: __jmcantrell__ (~weechat@user/jmcantrell)
[04:24:15] <gloin> if, elsif, elseif, else except
[04:24:19] *** Quits: __jmcantrell__ (~weechat@user/jmcantrell) (Client Quit)
[04:25:34] <matsaman> I think newer versions of python3 have match/case
[04:25:49] <gloin> Can do an if/else, just less elegant
[04:25:54] <matsaman> yeah, lots of ways
[04:26:54] *** Quits: PantelicGR (~PantelicG@user/pantelicgr) (Quit: Leaving)
[04:28:57] *** Quits: FluffyMask (~masque@user/fluffymask) (Quit: WeeChat 3.2)
[04:29:58] *** Joins: arinov (~arinov@213.194.126.155)
[04:33:29] *** Joins: sn1tch3r (~sn1tch3r@user/sn1tch3r)
[04:35:20] *** Joins: ttree (~ttree0@c-73-239-62-159.hsd1.wa.comcast.net)
[04:39:33] <Kabouik> Actually I see here that my json files might not be correctly formatted: https://attacomsian.com/blog/what-is-json
[04:39:53] <Kabouik> I have multiple values between []
[04:40:49] <Kabouik> https://dpaste.com/GCM6XBUN5
[04:41:53] <Kabouik> Maybe there is a way to convert that into something jtbl (or jq) would properly read as multiple values for each column
[04:42:06] *** Parts: CoderCop (~CoderCop@134.209.34.45) (WeeChat 3.0.1)
[04:42:11] *** Joins: CoderCop (~CoderCop@134.209.34.45)
[04:43:24] *** Quits: matsaman (~matsaman@user/matsaman) (Quit: leaving)
[04:43:30] *** Quits: winterflaw (~winterfla@gateway/tor-sasl/winterflaw) (Ping timeout: 244 seconds)
[04:44:21] *** Joins: etienneme (~etienne@user/etienneme)
[04:47:37] <nedbat> Kabouik: your output is valid json
[04:48:04] *** Quits: PJBoy (~PJBoy@user/pjboy) (Ping timeout: 250 seconds)
[04:50:54] *** Joins: akk (~akk@174-28-98-206.albq.qwest.net)
[04:53:06] *** Quits: compufreak (~compufrea@2603-6010-4903-d184-0218-d705-fa62-f556.res6.spectrum.com) (Ping timeout: 256 seconds)
[04:56:10] *** Quits: molt (~molt@79.140.150.21) (Ping timeout: 240 seconds)
[04:58:43] <Kabouik> Alright, thanks!
[05:00:00] <Kabouik> I have several of the .py scripts above, each of them scraping a different category on the HTNL page. Maybe it would be more sound to just scrap everything at once, and store categories as different objects in the json file (the paste above would be one category).
[05:01:43] *** Joins: c10l (~c10l@89.34.167.207)
[05:01:50] *** Joins: compufreak (~compufrea@cpe-174-103-101-19.columbus.res.rr.com)
[05:02:03] *** Quits: GenTooMan (~cyberman@2601:547:437f:e5c6:21f:5bff:fefe:a883) (Ping timeout: 250 seconds)
[05:03:33] *** Joins: GenTooMan (~cyberman@2601:547:437f:e5c6:21f:5bff:fefe:a883)
[05:03:36] *** Parts: karstensrage (~karstensr@user/karstensrage) (Leaving)
[05:04:41] *** Quits: d0ku (~d0ku@178.43.56.75.ipv4.supernova.orange.pl) (Ping timeout: 248 seconds)
[05:04:42] *** Quits: goldfish (~goldfish@user/goldfish) (Quit: Leaving)
[05:06:26] *** Joins: Lord_of_Life_ (~Lord@user/lord-of-life/x-2819915)
[05:06:27] *** Quits: Lord_of_Life (~Lord@user/lord-of-life/x-2819915) (Ping timeout: 240 seconds)
[05:06:35] <sybariten> hello
[05:06:46] *** Quits: sn1tch3r (~sn1tch3r@user/sn1tch3r) (Quit: Leaving)
[05:06:49] <TheRedRipper> hi!
[05:06:51] <TheRedRipper> how goes it
[05:07:06] *** Quits: nomic (~nomic@185.192.69.143) (Quit: Leaving)
[05:07:21] <sybariten> Oh, well, always starting late in the night.....  not optimal but part of my rythm somehow
[05:07:29] <sybariten> rhythm
[05:07:40] *** Lord_of_Life_ is now known as Lord_of_Life
[05:07:55] *** Quits: fassl (~fassl@2a02:8388:1987:9380:c4ee:81c5:625a:a215) (Quit: Leaving)
[05:08:21] <TheRedRipper> sybariten: feel that. love working at 2 am with the windows open
[05:08:25] <TheRedRipper> its when im most productive
[05:09:27] <sybariten> Same here. And it's worse in the summer now, when i feel that i need to be outside to make use of the little warm weather we have...
[05:10:09] <TheRedRipper> haha
[05:10:10] <TheRedRipper> ironic
[05:10:13] *** Quits: Vornicus (~Vornicus@2603-8000-5d07-7ef0-b17b-3976-344e-76c2.res6.spectrum.com) (Read error: Connection reset by peer)
[05:10:24] <TheRedRipper> im down in SF so its hot as balls here
[05:10:38] <TheRedRipper> i have the windows open for what little cool air i can recieve
[05:11:09] <sybariten> Oh man... yeah...    I've been spending a lot of time pondering over this thing with weather and climate, and how people relate to it actually
[05:11:32] <TheRedRipper> hmmh yeah
[05:11:37] <TheRedRipper> i miss portland...
[05:11:39] <TheRedRipper> well..
[05:11:41] <TheRedRipper> nrn i dont lmao
[05:11:46] <TheRedRipper> its still a shithole
[05:11:48] <TheRedRipper> but
[05:11:54] <TheRedRipper> the weather was much preferred to out here
[05:12:01] *** Quits: GenTooMan (~cyberman@2601:547:437f:e5c6:21f:5bff:fefe:a883) (Ping timeout: 250 seconds)
[05:12:55] *** Joins: merijn (~merijn@83-160-49-249.ip.xs4all.nl)
[05:14:05] <sybariten> I read a fair bit about different cali places because of following skate culture, and Portland is quite often mentioned too. Theres quite a few guys coming from there but in those circles it also has a reputation for being quite rainy i think?
[05:14:32] <sybariten> SF on the other hand is a bit of a centre, almost a global one... if it isn't San Diego maybe
[05:14:52] <TheRedRipper> yeah OR as a whole is a fucking state of rain
[05:14:56] <TheRedRipper> and goddamn if i dont love it
[05:15:03] *** Joins: GenTooMan (~cyberman@2601:547:437f:e5c6:21f:5bff:fefe:a883)
[05:15:20] <TheRedRipper> one day im gonna find a cabin on a lake out in the portland forest, buy a shitload of land and retire out there with my retrotech
[05:16:29] <sybariten> A lot of people on reddit romanticize over rain, and actually i think it's easier to like rain if it's The Good Kind ... even i can appreciate a decent rainfall then, when you don't have to freeze and you just watch it as a bit of a contrast to the warm nice day you had the day before
[05:16:47] *** Joins: etiennem- (~etienne@user/etienneme)
[05:17:09] <TheRedRipper> bingo
[05:17:34] *** Quits: etienneme (~etienne@user/etienneme) (Ping timeout: 252 seconds)
[05:17:36] <sybariten> But when you're somewhere like the west coast of norway and the rain is colder than an actual snow day would be...  and it just makes every thing more misearable... well, i dunno
[05:19:25] <sybariten> I've anyhow come to the conclusion now that i need to live a place a tad bit warmer and i'd also like a pretty even climate, if possible. I'd like to get away from this feeling of "oh it's warm weather, i have to profit from that now that it's here". It messes with me
[05:19:49] *** Quits: GenTooMan (~cyberman@2601:547:437f:e5c6:21f:5bff:fefe:a883) (Ping timeout: 250 seconds)
[05:19:49] *** Quits: Cheaterman (~Cheaterma@user/cheaterman) (Ping timeout: 250 seconds)
[05:20:00] *** Joins: nergar (~Nergar@177.225.152.16)
[05:20:52] <sybariten> Anyhow... python-wise, i would like to remove all non alphabetic characters from a string, that is, basically, all punctuation. I see people online recommending using the string module, but for an exercise now i think we are supposed to not import anything like that.
[05:22:04] <sybariten> So then i see someone doing something like this    new_string = "".join(u for u in old_string if u not in ("?", ".", ";", ":", "!"))     i feel like i'd rather define what's allowed to be in my chars than like _trying_ to define what's not allowed, like here. But i guess there's no super simple way and this is the best approach?
[05:22:24] *** Joins: Hanii (~textual@2a00:23c5:c587:6d00:ac6a:3a5a:8781:6561)
[05:25:08] *** Joins: d0ku (~d0ku@178.43.56.75.ipv4.supernova.orange.pl)
[05:26:33] *** Quits: kulernil (~kulernil@gateway/tor-sasl/kuler) (Remote host closed the connection)
[05:26:43] *** Joins: paulman (~kulernil@gateway/tor-sasl/kuler)
[05:26:52] *** Quits: ogis (~Android@p1927250-omed01.osaka.ocn.ne.jp) (Quit: -a- Connection Timed Out)
[05:27:02] *** Joins: ogis (~Android@p1927250-omed01.osaka.ocn.ne.jp)
[05:29:28] *** Quits: paulman (~kulernil@gateway/tor-sasl/kuler) (Remote host closed the connection)
[05:29:41] *** Joins: paulman (~kulernil@gateway/tor-sasl/kuler)
[05:29:45] *** Joins: Artea (~Lufia@artea.com.pt)
[05:30:38] *** Quits: vlm (~vlm@user/vlm) (Quit: "")
[05:31:10] *** Quits: etiennem- (~etienne@user/etienneme) (Ping timeout: 240 seconds)
[05:31:46] *** Joins: etienneme (~etienne@user/etienneme)
[05:34:33] *** Joins: vlm (~vlm@user/vlm)
[05:36:42] *** Joins: Fedorasan (~fedorasan@user/fedorasan)
[05:38:10] *** Quits: i0e (~is0ke3@user/is0ke3) (Ping timeout: 240 seconds)
[05:40:09] *** Quits: Fedorasan (~fedorasan@user/fedorasan) (Quit: Going offline, see ya! (www.adiirc.com))
[05:40:25] *** Joins: i0e (~is0ke3@user/is0ke3)
[05:42:35] <InPhase> sybariten: ''.join(s for s in 'foo 2 b-a-r' if s.isalnum())
[05:44:56] *** Joins: thiras (~thiras@user/thiras)
[05:46:10] *** Quits: merijn (~merijn@83-160-49-249.ip.xs4all.nl) (Ping timeout: 252 seconds)
[05:47:40] *** Quits: Mechanismus (~LabMonkey@2602:306:cf62:e270:c1bb:e261:9c62:cd35) (Ping timeout: 240 seconds)
[05:47:50] <InPhase> sybariten: I guess you didn't specify, but s.isspace() is available as well for whitespace.
[05:54:04] *** Joins: sharperguy__ (~sharpergu@2001:16b8:5c0f:8400:6798:7974:85fd:8d84)
[05:54:27] *** Joins: sydbarret (~anton@static-186-121-195-224.acelerate.net)
[05:56:39] *** Quits: sharperguy_ (~sharpergu@2001:16b8:5c7d:ac00:2c26:12e2:f8a9:f3ea) (Ping timeout: 250 seconds)
[05:57:05] *** Joins: Ox4 (~ubik@62.216.42.54)
[05:57:16] <Ox4> hello everyone. Could somebody help me to get [[100, 200, 300], [101, 201, 301]] from [[(0, 100), (1, 200), (2, 300)], [(0, 101), (1, 201), (2, 301)]] using list comprehension?
[05:59:00] <sybariten> InPhase: isalnum() is true for A-Z, a-z and 0-9 only ?
[05:59:45] <Repiphany> Ox4: [[b for a, b in pairs] for pairs in pairs_list]
[06:01:52] <Ox4> thanks
[06:04:16] *** Quits: TheRedRipper (~TheRedRip@user/theredripper) (Quit: WeeChat 3.0)
[06:05:14] <FunkyBob> sybariten: what do the docs say?
[06:05:33] <FunkyBob> https://docs.python.org/3/library/stdtypes.html#str.isalnum
[06:05:36] <sybariten> FunkyBob: good call
[06:06:03] *** Joins: yaalon (~yaalon@189.202.79.36.cable.dyn.cableonline.com.mx)
[06:06:31] <sybariten> if i'm at a python console, what should be my intuitive go-to to get help about something like that() ? or something like.that() ?
[06:06:42] *** Quits: ncwbqcfe (~rvgzuuqp@gateway/tor-sasl/rvgzuuqp) (Quit: ncwbqcfe)
[06:07:14] <sybariten> i.e. what is the python equivalencve to man or command --help ?
[06:07:40] <grym> sybariten: help()
[06:08:14] <sybariten> aha
[06:10:08] <sybariten> and to use help() with isalnum() ? i tried entering it in a handful of ways...
[06:10:18] <FunkyBob> help(str.isalnum)
[06:10:22] <FunkyBob> since it's a method of str
[06:10:27] *** Quits: fikran (~fikran@user/fikran) (Ping timeout: 240 seconds)
[06:10:33] <sydbarret> google api stays on this  line  service = build('gmail', 'v1', credentials=creds)
[06:11:23] *** Quits: snalty (~Shhh@user/snalty) (Ping timeout: 250 seconds)
[06:11:50] <sybariten> aha.
[06:12:18] *** Joins: snalty (~Shhh@user/snalty)
[06:12:39] *** Joins: fikran (~fikran@user/fikran)
[06:13:12] *** Joins: zeden (~zeden@user/zeden)
[06:13:52] *** Quits: Grace (uid33812@id-33812.tooting.irccloud.com) (Quit: Connection closed for inactivity)
[06:14:08] *** Joins: SuperLag (~akulbe@user/superlag)
[06:14:23] *** Joins: yaalon_ (~yaalon@189.202.79.36.cable.dyn.cableonline.com.mx)
[06:15:19] *** Quits: yaalon (~yaalon@189.202.79.36.cable.dyn.cableonline.com.mx) (Ping timeout: 252 seconds)
[06:19:11] *** Quits: d0ku (~d0ku@178.43.56.75.ipv4.supernova.orange.pl) (Ping timeout: 250 seconds)
[06:19:40] *** Quits: sudomann (~sudomann@c-73-133-131-19.hsd1.md.comcast.net) (Quit: Leaving)
[06:20:03] *** Quits: ogis (~Android@p1927250-omed01.osaka.ocn.ne.jp) (Quit: -a- Connection Timed Out)
[06:20:13] *** Joins: ogis (~Android@p1927250-omed01.osaka.ocn.ne.jp)
[06:20:50] *** Joins: brabrax_ (~brabrax@user/brabrax)
[06:20:55] *** Quits: brabrax (~brabrax@user/brabrax) (Ping timeout: 250 seconds)
[06:21:13] *** brabrax_ is now known as brabrax
[06:22:27] *** Quits: SuperLag (~akulbe@user/superlag) (Ping timeout: 240 seconds)
[06:24:29] *** Quits: p-i-_ (~Ohmu@2403:6200:8870:9971:38d4:7e6b:8ef4:4c19) (Remote host closed the connection)
[06:25:34] *** Joins: p-i- (~Ohmu@2403:6200:8870:9971:38d4:7e6b:8ef4:4c19)
[06:26:53] *** Quits: zeden (~zeden@user/zeden) (Quit: WeeChat 3.0.1)
[06:26:57] <sybariten> okay so i have this list ...  frequencyList = [('c', 107), ('t', 96), ('a', 73), ('g', 67), ('u', 66), ('b', 62), ('a', 60)]    and i initialize frequencyDict = {}  ... how do i loop over that thing to build up a dicitonary?  for item in frequencyList: frequencyDict[item][0] = frequencyDict[item][1]    ?
[06:27:45] <sybariten> oh wait no
[06:28:42] <sybariten> hmmm i need to somehow say that frequencyDict[c] = 107, maybe?
[06:29:51] *** Joins: molt (~molt@79.140.150.225)
[06:30:01] *** Quits: p-i- (~Ohmu@2403:6200:8870:9971:38d4:7e6b:8ef4:4c19) (Ping timeout: 250 seconds)
[06:31:19] *** Joins: Powerhouse6666 (~Powerhous@security.orcacomputers.com)
[06:33:48] *** Quits: venue (~venue@user/venue) (Ping timeout: 250 seconds)
[06:34:12] *** Joins: srhm (~srhm@user/srhm)
[06:34:34] *** Quits: akk (~akk@174-28-98-206.albq.qwest.net) (Quit: +++)
[06:34:50] *** Quits: plastico (~plastico@neomutt/plastico) (Quit: WeeChat 3.2)
[06:37:21] <aphysically> this evening I'm trying to learn all about documentation and docstring conventions - I'm seeing several styles, the major ones of which are supported by the 'sphinx' project from which I should probably choose
[06:38:36] *** Joins: davincee (~da1dude@112.201.99.74)
[06:38:56] *** Joins: GenTooMan (~cyberman@2601:547:437f:e5c6:21f:5bff:fefe:a883)
[06:39:22] <aphysically> I guess I should take into account that I've already fully type annotated the functions
[06:41:04] *** Joins: Grace (uid33812@id-33812.tooting.irccloud.com)
[06:43:47] *** Quits: Celelibi (celelibi@user/celelibi) (Ping timeout: 245 seconds)
[06:48:39] *** Joins: heco (~redrum@user/redrum88)
[06:48:49] *** Joins: kmh (~kmh@p200300df5f09e900a9cd8784ae32cbea.dip0.t-ipconnect.de)
[06:49:07] *** Quits: FinnElija (~finn_elij@user/finn-elija/x-0085643) (Ping timeout: 240 seconds)
[06:50:56] *** Joins: Celelibi (celelibi@user/celelibi)
[06:51:05] <Grace> nedbat: yeah, I need to yank the AST somehow, or at least just figure out the string position of the calling function in the line of code
[06:51:19] *** Joins: FinnElija (~finn_elij@user/finn-elija/x-0085643)
[06:52:58] <jaggz> I wonder why my Del key puts out esc[3~ instead of 127 (\177)
[06:53:44] *** Joins: st327 (~st327@user/st327)
[06:55:12] *** Joins: ssbr_ (~ssbr@python/site-packages/ssbr)
[06:55:56] *** Joins: darksun (~darksun@user/darksun)
[06:57:27] *** Joins: Leonarbro_ (~Leonet@user/leonarbro)
[06:57:34] <sybariten> forget my last question, solved it  :-D
[06:59:35] *** Joins: aead (~aead@user/aead)
[06:59:39] *** Quits: crabbedhaloablut (~crabbedha@user/crabbedhaloablut) (Remote host closed the connection)
[06:59:51] *** Joins: crabbedhaloablut (~crabbedha@user/crabbedhaloablut)
[07:00:58] *** Quits: darksun (~darksun@user/darksun) (Ping timeout: 252 seconds)
[07:00:58] *** Quits: Leonarbro (~Leonet@user/leonarbro) (Ping timeout: 252 seconds)
[07:01:18] *** Joins: Leonarbro (~Leonet@user/leonarbro)
[07:01:32] *** Joins: whatsupdoc (uid509081@id-509081.stonehaven.irccloud.com)
[07:01:49] <whatsupdoc> Hi, does anyone have experience using pywinauto?
[07:02:03] <whatsupdoc> Or something similar?
[07:02:35] *** Joins: Leonarbro__ (~Leonet@user/leonarbro)
[07:02:49] *** Quits: c10l (~c10l@89.34.167.207) (Quit: The Lounge - https://thelounge.chat)
[07:03:14] *** Quits: yaalon_ (~yaalon@189.202.79.36.cable.dyn.cableonline.com.mx) ()
[07:03:19] *** Joins: c10l (~c10l@89.34.167.207)
[07:04:15] *** Quits: thiras (~thiras@user/thiras) (Ping timeout: 250 seconds)
[07:04:19] *** Quits: junktext (~junktext@109.201.152.171) (Quit: junktext)
[07:04:43] *** Quits: st327 (~st327@user/st327) (Quit: Leaving)
[07:04:47] *** Quits: Leonarbro_ (~Leonet@user/leonarbro) (Ping timeout: 240 seconds)
[07:05:22] *** Joins: Leonarbro_ (~Leonet@user/leonarbro)
[07:05:47] *** Quits: Leonarbro (~Leonet@user/leonarbro) (Ping timeout: 240 seconds)
[07:07:37] *** Leonarbro_ is now known as Leonarbro
[07:08:47] *** Quits: Leonarbro__ (~Leonet@user/leonarbro) (Ping timeout: 240 seconds)
[07:10:34] *** Quits: srhm (~srhm@user/srhm) (Read error: Connection reset by peer)
[07:11:18] *** Joins: srhm (~srhm@user/srhm)
[07:12:55] *** Quits: Omega037 (~Omega037@047-024-168-024.res.spectrum.com) (Ping timeout: 250 seconds)
[07:12:59] *** Joins: venue (~venue@user/venue)
[07:13:01] *** Quits: Ox4 (~ubik@62.216.42.54) (Ping timeout: 246 seconds)
[07:13:19] *** Joins: Omega037 (~Omega037@047-024-168-024.res.spectrum.com)
[07:15:07] *** Quits: xx (~xx@user/xx) (Ping timeout: 240 seconds)
[07:16:00] *** Quits: srhm (~srhm@user/srhm) (Read error: Connection reset by peer)
[07:16:36] *** Joins: srhm (~srhm@user/srhm)
[07:16:55] <sybariten> I'm struggling to undertstand list comprehension (again), if that's even the tool i want to use here.
[07:17:44] <sybariten> Given a dictionary like this  student_score = {'Ritika': 5, 'Sam': 7, 'John': 10, 'Aadi': 8}   , i would like to be able to use an f-string sort of like this
[07:19:05] <sybariten> print(f"our student scores are: {[print(key,':',value) for key, value in student_score.items()]}")
[07:19:45] <sybariten> well, _something_ like that. The idea is to first get the sentence "our student scores are" and then each line from the dict on its own line. Any ideas?
[07:19:47] <aphysically> looking at the styles I like the Google one
[07:19:52] <aphysically> reST not as much...
[07:19:55] <jaggz> what's a good fast way to resample audio down to display it horizontally in text?
[07:20:03] *** Quits: ogis (~Android@p1927250-omed01.osaka.ocn.ne.jp) (Quit: -a- Connection Timed Out)
[07:20:13] *** Joins: ogis (~Android@p1927250-omed01.osaka.ocn.ne.jp)
[07:20:17] <jaggz> I'm thinking I need to take a max amplitude for each section.. it's a numpy array
[07:20:20] <Tashtari> sybariten: [print(key,':',value) for key, value in student_score.items()]  <- this is going to return a list full of None, because that's what print returns.
[07:20:34] <sybariten> Tashtari: yup i got a lot of nones  :)
[07:20:41] <jaggz> I don't think an actual resampling is going to be good since the resampling rate down from 4000 samples to, say, 40, will be too low
[07:21:04] <sybariten> Tashtari: have to admit, that was a hack that i stole
[07:21:42] <nubonix> so i have two https servers [starlette]. server1 is always going to be running, and i want server1 to know when server2 is alive, any ideas? [im trying to keep the hardware to a minimum]
[07:22:04] <nubonix> trying to keep resources to a minimum*
[07:23:10] <Samian> I just read this: https://www.python.org/dev/peps/pep-0020/#id2
[07:23:24] <Samian> I'm going to print that on paper and take the paper to the wall
[07:23:45] <Samian> Beautiful aphorisms to live by
[07:24:33] *** Quits: Barones (~Barones@2804:7f3:8987:a56:1904:b84d:d454:b1fa) (Remote host closed the connection)
[07:24:37] *** Quits: jab416171 (~jab416171@c-174-52-176-66.hsd1.ut.comcast.net) (Ping timeout: 252 seconds)
[07:25:00] *** Joins: cqi (~cqi@2408:8207:252f:75a0:8cf2:f40a:73a7:dfd6)
[07:25:52] <Tashtari> sybariten: Maybe something along the lines of this:
[07:25:55] <Tashtari> print('our student scores are: ', ', '.join(f'{key}: {value}' for key, value in student_score.items()))
[07:26:24] *** Quits: srhm (~srhm@user/srhm) (Read error: Connection reset by peer)
[07:26:29] <Tashtari> print('our student scores are: ', ', '.join(f'{name}: {score}' for name, score in student_score.items()))   # better yet...
[07:26:38] *** Joins: ssbr (~ssbr@python/site-packages/ssbr)
[07:27:14] *** Joins: srhm (~srhm@user/srhm)
[07:28:27] *** Quits: ssbr_ (~ssbr@python/site-packages/ssbr) (Ping timeout: 240 seconds)
[07:29:04] <sybariten> Tashtari: aha so here you're not directly using the format   print(f"here comes some text first and here is the {variable}") ?
[07:29:38] *** Joins: jab416171 (~jab416171@c-174-52-176-66.hsd1.ut.comcast.net)
[07:30:23] <Tashtari> Right, the entire thing you're printing doesn't have to be an f-string.
[07:30:44] <sybariten> hmmm okaaay..... hmm
[07:31:00] *** Quits: Skyfire (~pyon@user/pyon) (Ping timeout: 250 seconds)
[07:31:07] <Tashtari> An f-string is just a string that can have expressions inside it wrapped in {}.
[07:31:51] <sybariten> but what's happening with your .join() there then?
[07:32:51] <sybariten> oh, wait, yours doesn't get it each on its own line
[07:33:00] *** Joins: Elzington (~Elzington@68.235.43.172)
[07:33:39] *** Joins: aakashi2001 (~aakashi20@user/aakashi2001)
[07:33:44] <Tashtari> If you want each on its own line, I'd probably just do a regular for loop instead of a list comprehension.
[07:35:23] <Tashtari> http://paste.debian.net/1208940/
[07:36:19] <sybariten> Tashtari: actually, i can show you exactlyh what i'm trying to mimick, hang on
[07:37:10] *** Joins: ncwbqcfe (~rvgzuuqp@gateway/tor-sasl/rvgzuuqp)
[07:38:14] *** Quits: aakashi2001 (~aakashi20@user/aakashi2001) (Client Quit)
[07:39:15] <sybariten> Tashtari: ok so i think this is pretty self explanatory maybe ...  https://imgur.com/a/HqfEjfz   the first line you see there is actually a typed menu command, and the rest is then printed.    _however_ i just realized he doesn't actually print out any sentence before the data, like i was talking aboout ... ("here comes the data: )
[07:40:27] <sybariten> In any case, i can produce the same dictionary, i have it as a return from a function wordFreq()  ... or actually, he's got a dict in a dict there... sigh ...
[07:40:42] <Tashtari> That looks like it's just a pretty-printed dict.
[07:40:52] <sybariten> well anyhow, i have a dict with the important data, and i want to print it. Maybe i should put it in a new dict like him ...
[07:40:56] <sybariten> Yeah, what is that Tashtari  ?
[07:41:02] *** Joins: gggp (~textual@111.63.14.115)
[07:41:27] <Tashtari> sybariten: https://docs.python.org/3/library/pprint.html
[07:41:27] <AhmedAmerican> I'm using `Scrapy Splash` where my spider is able to get the first page but I'm not sure how to follow pagination in case if it's handled via JavaScript and even how to access the inner items --> https://bpa.st/OHNQ
[07:42:02] *** Quits: gggp (~textual@111.63.14.115) (Client Quit)
[07:42:22] <Tashtari> The short version is that you can do `from pprint import pprint` and then `pprint(my_dict)` and it'll format it nicely before printing it out on your terminal.  Your student_score dict is small enough that it'll fit easily on one line, though, so pprint is content to make it look like that.
[07:42:55] *** Joins: merijn (~merijn@83-160-49-249.ip.xs4all.nl)
[07:44:06] *** Quits: [itchyjunk] (~itchyjunk@user/itchyjunk/x-7353470) (Remote host closed the connection)
[07:44:36] *** Joins: daddy (ryan@hashbang/bdfl)
[07:44:59] *** Quits: mefistofeles (~mefistofe@user/mefistofeles) (Ping timeout: 250 seconds)
[07:45:41] <sybariten> Tashtari: aha! Hmmm.. i _think_ we're notr importing any external modules apart from our own, in this exercise though.... i cant swear cause i cant see the teachers code, which this screenshot is from though, obviously, but... .thats what i've understood
[07:46:22] <sybariten> but thats a great tip for future dictionaries though
[07:47:04] <Tashtari> Your code is supposed to mimic that exact output without using pprint?
[07:47:22] *** Quits: srhm (~srhm@user/srhm) (Read error: Connection reset by peer)
[07:47:55] *** Joins: srhm (~srhm@user/srhm)
[07:49:19] <sybariten> uhm.... actually i dont think i need to have exactly that output. I have the dict, i can print it in an ugly way on one row .... guess the important thing is that it's sorted correctlry etcetera. But i thought he did that thing wityhout using external modules, yes
[07:50:01] *** Quits: Nalt (~Nalt|||@162-239-107-41.lightspeed.rcsntx.sbcglobal.net) (Ping timeout: 248 seconds)
[07:50:32] *** Quits: ncwbqcfe (~rvgzuuqp@gateway/tor-sasl/rvgzuuqp) (Ping timeout: 244 seconds)
[07:52:45] <Tashtari> Dicts in Python 3 preserve the order that items were inserted into them.  You can "sort" the dict by creating a new dict `new_dict = dict(sorted(old_dict.items()))` or so.
[07:53:27] <Byteflux> Oddly enough sets don't guarantee insertion order, you'd think so since dicts do. :(
[07:53:42] *** Joins: Mija (~Mija@user/mija)
[07:54:05] *** Quits: srhm (~srhm@user/srhm) (Quit: Konversation terminated!)
[07:55:07] *** Quits: ssbr (~ssbr@python/site-packages/ssbr) (Ping timeout: 240 seconds)
[07:55:08] *** Quits: Mija (~Mija@user/mija) (Client Quit)
[07:55:21] *** Quits: ideopathic (~ideopathi@99-6-12-70.lightspeed.irvnca.sbcglobal.net) (Ping timeout: 248 seconds)
[07:56:28] *** Quits: c10l (~c10l@89.34.167.207) (Quit: The Lounge - https://thelounge.chat)
[07:56:50] <sybariten> And with that, i scoot to bed. Thanks for all the help!
[07:57:04] <Tashtari> _o>
[07:57:59] *** Joins: emika2 (~emika@185.207.249.99)
[07:57:59] *** Joins: ideopathic (~ideopathi@99-6-12-70.lightspeed.irvnca.sbcglobal.net)
[07:59:17] *** Quits: emika (~emika@185.207.249.22) (Ping timeout: 250 seconds)
[07:59:17] *** emika2 is now known as emika
[08:13:33] *** Quits: imp (~imp@192-141-191-229.alternativaip.net.br) (Quit: imp)
[08:16:50] *** Joins: gggp (~textual@111.63.14.115)
[08:17:25] *** Quits: merijn (~merijn@83-160-49-249.ip.xs4all.nl) (Ping timeout: 252 seconds)
[08:19:47] *** Quits: fikran (~fikran@user/fikran) (Ping timeout: 240 seconds)
[08:19:53] *** Joins: monkey_ (~user@190.104.116.134)
[08:20:29] *** Joins: zumba_addict (~zumba_add@2601:240:4500:8320:558e:d5c8:f527:d726)
[08:21:49] *** Quits: gggp (~textual@111.63.14.115) (Ping timeout: 252 seconds)
[08:22:01] *** Joins: fikran (~fikran@user/fikran)
[08:23:37] *** Quits: abhixec (~abhixec@c-67-169-139-16.hsd1.ca.comcast.net) (Quit: leaving)
[08:24:33] *** Quits: milkt (~debian@gateway/tor-sasl/milkt) (Remote host closed the connection)
[08:29:52] *** Joins: milkt (~debian@127.0.6.10)
[08:32:53] *** Joins: elezium (~elezium@modemcable039.188-176-173.mc.videotron.ca)
[08:34:11] *** Quits: Fiji (~Fiji@user/fiji) (Quit: Leaving)
[08:36:02] *** Quits: supakeen (~user@python/site-packages/supakeen) (Quit: WeeChat 3.2)
[08:36:31] *** Joins: supakeen (~user@python/site-packages/supakeen)
[08:36:42] *** Joins: c10l (~c10l@89.34.167.207)
[08:36:51] *** Quits: c10l (~c10l@89.34.167.207) (Client Quit)
[08:38:03] *** Joins: c10l (~c10l@89.34.167.207)
[08:44:14] *** Joins: Barones (~Barones@2804:7f3:8987:a56:1904:b84d:d454:b1fa)
[08:46:31] *** Quits: nyah (~nyah@bcdcb6e3.skybroadband.com) (Ping timeout: 250 seconds)
[08:47:49] *** Quits: p4rpc (~p4rpc@89-69-17-47.dynamic.chello.pl) (Ping timeout: 250 seconds)
[08:48:13] *** Quits: Barones (~Barones@2804:7f3:8987:a56:1904:b84d:d454:b1fa) (Client Quit)
[08:53:50] *** Quits: zebrag (~chris@user/zebrag) (Quit: Konversation terminated!)
[08:54:04] *** Quits: monkey_ (~user@190.104.116.134) (Remote host closed the connection)
[08:54:14] *** Quits: c10l (~c10l@89.34.167.207) (Quit: The Lounge - https://thelounge.chat)
[08:55:01] *** Joins: c10l (~c10l@89.34.167.207)
[08:56:52] *** Joins: penguino (~mrpenguin@user/mrpenguin)
[08:57:19] *** Joins: darksun (~darksun@user/darksun)
[08:58:59] *** Quits: baltazar (~baltazar@91-82-172-59.pool.digikabel.hu) (Ping timeout: 268 seconds)
[09:00:42] *** Joins: baltazar (~baltazar@178-164-251-227.pool.digikabel.hu)
[09:01:04] *** Quits: matrixbot_bartab (~matrixbot@155.210.31.93.rev.sfr.net) (Quit: Bridge terminating on SIGTERM)
[09:01:24] *** Joins: matrixbot_bartab (~matrixbot@155.210.31.93.rev.sfr.net)
[09:02:07] *** Quits: darksun (~darksun@user/darksun) (Ping timeout: 250 seconds)
[09:07:04] *** Quits: brachamh (~brachamh@user/brachamh) (Read error: Connection reset by peer)
[09:07:35] *** Quits: elezium (~elezium@modemcable039.188-176-173.mc.videotron.ca) (Quit: Konversation terminated!)
[09:09:55] *** Joins: brachamh_ (~brachamh@user/brachamh)
[09:10:27] *** Joins: ssbr (~ssbr@python/site-packages/ssbr)
[09:10:49] *** Joins: p-i- (~Ohmu@171.6.227.183)
[09:10:53] *** Quits: p-i- (~Ohmu@171.6.227.183) (Remote host closed the connection)
[09:12:04] *** Joins: p-i- (~Ohmu@2403:6200:8870:9971:38d4:7e6b:8ef4:4c19)
[09:15:17] *** Joins: trace987 (~trace@ip5f5a6a70.dynamic.kabel-deutschland.de)
[09:15:26] *** Quits: LiftLeft (~LiftLeft@216-26-118-34.dynamic.nelson.airstreamcomm.net) (Ping timeout: 250 seconds)
[09:16:25] *** Quits: p-i- (~Ohmu@2403:6200:8870:9971:38d4:7e6b:8ef4:4c19) (Ping timeout: 250 seconds)
[09:18:45] *** Joins: mei (~mei@user/mei)
[09:20:39] *** Joins: matsaman (~matsaman@user/matsaman)
[09:21:52] *** Joins: rakoon (~rakoon@2a02:2149:824f:5900:fdd8:757d:324f:59ed)
[09:26:38] *** Quits: alxndr (~alexander@ybti.net) (Remote host closed the connection)
[09:28:30] *** Joins: alxndr (~alexander@ybti.net)
[09:29:36] *** Joins: stranac (~stranac@195.29.239.126)
[09:29:45] *** Quits: Xaldafax (~xaldafax@cpe-198-72-160-101.socal.res.rr.com) (Quit: Bye...)
[09:33:07] *** Quits: cheater (~Username@user/cheater) (Ping timeout: 240 seconds)
[09:35:13] *** Joins: freeworld (~vit@chello085216193138.chello.sk)
[09:37:58] *** Joins: minip (minip@user/minip)
[09:38:06] *** Quits: nergar (~Nergar@177.225.152.16) (Read error: Connection reset by peer)
[09:44:38] *** Quits: venue (~venue@user/venue) (Quit: adios)
[09:45:45] *** Quits: penguino (~mrpenguin@user/mrpenguin) (Ping timeout: 244 seconds)
[09:46:31] *** Joins: cheater (~Username@user/cheater)
[09:48:38] *** Joins: p-i- (~Ohmu@2403:6200:8870:9971:38d4:7e6b:8ef4:4c19)
[09:48:44] *** Quits: p-i- (~Ohmu@2403:6200:8870:9971:38d4:7e6b:8ef4:4c19) (Read error: Connection reset by peer)
[09:49:22] *** Joins: p-i- (~Ohmu@2403:6200:8870:9971:9cff:3c12:c6db:ef58)
[09:52:01] *** Quits: schumaml (~schumaml@dslb-188-104-190-238.188.104.pools.vodafone-ip.de) (Ping timeout: 252 seconds)
[09:53:30] *** Quits: faceface (~faceface@user/faceface) (Remote host closed the connection)
[09:53:41] *** Quits: ice9 (~ice9@user/ice9) (Ping timeout: 250 seconds)
[09:54:30] *** Joins: manin (~x@185.242.190.95)
[09:54:50] *** Quits: zBeeble (~zBeeble@2001:1928:1::35) (Quit: Leaving)
[09:55:43] *** Quits: ckdCreations (~ckdCreati@147.55.133.142) (Read error: Connection reset by peer)
[09:56:00] *** Joins: ckdCreations (~ckdCreati@c-24-17-50-149.hsd1.wa.comcast.net)
[09:58:33] *** Joins: no_gravity (~no_gravit@user/no-gravity/x-5639427)
[09:59:12] <no_gravity> Is this the shortest way to output numbers seperated? print(','.join(str(n) for n in [1,2,3]))
[10:01:18] *** Quits: whatsupdoc (uid509081@id-509081.stonehaven.irccloud.com) (Quit: Connection closed for inactivity)
[10:02:05] *** Quits: minip (minip@user/minip) (Remote host closed the connection)
[10:02:50] <xrogaan> do you alias os.path to something, and if you do what name to you use?
[10:03:06] <no_gravity> xrogaan: I don't
[10:03:07] *** Quits: brachamh_ (~brachamh@user/brachamh) (Ping timeout: 240 seconds)
[10:03:15] <jinsun>  I use pathlib instead of os.path
[10:03:21] *** Joins: melba (~melba@user/melba)
[10:03:53] *** Joins: brachamh (~brachamh@user/brachamh)
[10:04:13] *** Quits: Peng_ (~mnordhoff@ultimate1.mnrd.us) (Quit: Peng timeout)
[10:04:21] *** Joins: dwew (~dwew@178.49.152.151)
[10:04:24] *** Joins: Peng_ (~mnordhoff@ultimate1.mnrd.us)
[10:04:38] <no_gravity> Yeah, pathlib makes sense. Instead of this:
[10:04:44] <no_gravity> with open(path) as f: r = f.read()
[10:04:53] <jinsun> but if I havet to use os.path I don't alias, os.path is short enough
[10:04:55] <no_gravity> You can do this:
[10:05:05] <no_gravity> r = pathlib.Path(path).read_text()
[10:05:13] *** Quits: matsaman (~matsaman@user/matsaman) (Quit: leaving)
[10:05:15] <dwew> how can I parse quotes with python?
[10:05:33] <dwew> that quotes ""
[10:05:42] <no_gravity> dwew: "parse"?
[10:06:08] <no_gravity> Is this the shortest way to output numbers comma seperated? print(','.join(str(n) for n in [1,2,3]))
[10:06:12] *** Joins: frost (~frost@59.71.240.119)
[10:06:16] <xrogaan> os.path tends to repeat itself though
[10:06:27] <xrogaan> join something to an absolute path for instance.
[10:06:48] <dwew> like 'open "My Documents" folder' in ['open', 'My Documents', 'folder']
[10:06:49] <xrogaan> and then, eventually, you have 5 os.path in one line.
[10:07:15] <jinsun> that is why use pathlib
[10:07:21] *** Quits: ogis (~Android@p1927250-omed01.osaka.ocn.ne.jp) (Quit: -a- Connection Timed Out)
[10:07:31] *** Joins: ogis (~Android@p1927250-omed01.osaka.ocn.ne.jp)
[10:08:19] *** Quits: no_gravity (~no_gravit@user/no-gravity/x-5639427) (Quit: leaving)
[10:08:53] <jinsun> xrogaan: `pathlib.Path(relative_path).resolve().joinpath(sub_path)`  resolve works like abspath and joinpath works like join
[10:09:33] <xrogaan> I don't really like the object feel to it.
[10:09:43] *** Quits: domhnall (~developer@user/domhnall/x-2887755) (Ping timeout: 250 seconds)
[10:09:50] <xrogaan> dwew: what are you trying to achieve?
[10:10:35] <xrogaan> the question about quotes is weird.
[10:10:35] <dwew> parse a string which allow quotes to escape scapes and other special symbols
[10:11:01] <xrogaan> https://docs.python.org/3/tutorial/introduction.html#strings
[10:11:01] *** Joins: gggp (~textual@60.10.194.43)
[10:11:37] *** Quits: jinsun (~quassel@user/jinsun) (Quit: https://quassel-irc.org - Chat comfortably. Anywhere.)
[10:11:38] *** Quits: gggp (~textual@60.10.194.43) (Client Quit)
[10:12:01] *** Joins: jinsun (~quassel@user/jinsun)
[10:12:07] *** Joins: djapo (~archangel@user/djapo)
[10:12:16] <xrogaan> I don't know what a scape is.
[10:12:41] *** Joins: gggp (~textual@123.113.176.64)
[10:12:59] <dwew> *spaces
[10:13:20] *** Quits: gggp (~textual@123.113.176.64) (Client Quit)
[10:13:46] *** Joins: merijn (~merijn@83-160-49-249.ip.xs4all.nl)
[10:14:11] *** Quits: pycurious (~Adium@user/pycurious) (Quit: Leaving.)
[10:14:41] <xrogaan> I believe you'll have to do several passes. One with terms possessing spaces, and a second with the rest.
[10:18:04] *** Joins: anarres (~thomas@89.44.10.135)
[10:22:41] <xrogaan> any([x in string for x in s_space]), provided s_space is a list containing your terms with space
[10:22:49] *** Quits: Samian (~Sami@2620:10d:c091:480::1:7de4) (Quit: Textual IRC Client: www.textualapp.com)
[10:23:41] <xrogaan> can chain with itertools.chain: any([x in string for x in chain(s_space, s_single)])
[10:24:03] <xrogaan> dwew: ^
[10:24:26] <xrogaan> if you need all terms, replace any with all
[10:28:12] *** Quits: Zeturic (~Orimendix@50-25-46-156.krmtcmta02.res.dyn.suddenlink.net) (Quit: Leaving)
[10:28:25] *** Quits: ogis (~Android@p1927250-omed01.osaka.ocn.ne.jp) (Quit: -a- Connection Timed Out)
[10:29:13] *** Quits: fikran (~fikran@user/fikran) (Ping timeout: 250 seconds)
[10:31:24] *** Joins: fikran (~fikran@user/fikran)
[10:33:35] <anarres> quit
[10:33:38] *** Quits: anarres (~thomas@89.44.10.135) (Quit: leaving)
[10:34:28] *** Joins: ogis (~Android@p1927250-omed01.osaka.ocn.ne.jp)
[10:34:29] *** Quits: zaquest (~notzaques@5.128.210.178) (Remote host closed the connection)
[10:35:52] *** Quits: zumba_addict (~zumba_add@2601:240:4500:8320:558e:d5c8:f527:d726) (Quit: Client closed)
[10:38:06] *** Quits: Sheilong (uid293653@id-293653.charlton.irccloud.com) (Quit: Connection closed for inactivity)
[10:38:42] *** Joins: carl- (~carl-@c-138ee555.02-180-73746f39.bbcust.telenor.se)
[10:40:27] *** Quits: sydbarret (~anton@static-186-121-195-224.acelerate.net) (Ping timeout: 240 seconds)
[10:41:41] <hexnewbie> So, let's say I have a PySide2 or urwid program. What would be a safe (and possibly extensible to cross-plaform, but POSIX-only for now) way to have a child of my program call a command (SSH_ASKPASS), and have that pop up a window in my app that talks to the program that was called?
[10:42:30] *** Quits: crabbedhaloablut (~crabbedha@user/crabbedhaloablut) (Remote host closed the connection)
[10:43:29] *** Joins: upsala (~zcb@185.213.155.160)
[10:43:50] *** Joins: Elzington_ (~Elzington@68.235.43.14)
[10:44:16] *** Quits: Elzington (~Elzington@68.235.43.172) (Ping timeout: 252 seconds)
[10:44:16] <hexnewbie> I guess I could create a UNIX socket in an empty tempdir, provide that as environmental variable, and have my subprocess write to that socket. But then, I'm not sure how to secure that against rogue programs writing to my socket and stealing passwords from the user of the program, besides if I decide to support Windows at one point this will not be easily extensible to work there (?)
[10:46:19] *** Quits: seednode (~seednode@user/seednode) (Quit: Nihil supernum.)
[10:46:50] *** Joins: seednode (~seednode@user/seednode)
[10:48:09] *** Quits: merijn (~merijn@83-160-49-249.ip.xs4all.nl) (Ping timeout: 248 seconds)
[10:48:40] *** Joins: zaquest (~notzaques@5.128.210.178)
[10:48:47] *** Quits: manin (~x@185.242.190.95) (Ping timeout: 240 seconds)
[10:51:38] *** Joins: lordrishav (~LordRisha@user/lordrishav)
[10:51:58] *** Joins: rendar (~rendar@user/rendar)
[10:52:07] <Axy> Hey all, what's an elegant way to create a set of alphanumeric lowercase words from a given string?
[10:52:18] <Axy> I'm currently handling it with regex but maybe a better way?
[10:53:26] <dwew> what is a "word" axy?
[10:53:53] <Axy> every word in a string @dwew
[10:54:39] <Axy> so "Hello! How're you today?!" becomes ["hello", "howre", "you", "today"]
[10:55:00] <Axy> oh well, or a set -- I need those words to not repeat @dwew
[10:55:01] *** Joins: lsrtl_ (~lsrtl@user/lsrtl)
[10:55:27] <Axy> I believe there is a way to handle this with isalnum but couln't wrap my head around it for this structure
[10:55:58] *** Joins: Meteorhead (~Meteorhea@165.225.205.44)
[10:57:04] <dwew> I would use r"[\p{Ll}\p{Lo}â€™'-]+" and then lowercased it/removed 's etc.
[10:57:13] <tuxifreund> Maybe something like:
[10:57:15] <tuxifreund> for i in sentence:
[10:57:17] <tuxifreund>     list.append(i.lower())
[10:57:54] <dwew> or better just \p{L}
[10:57:55] <tuxifreund> ah, no that doesnâ€™t work
[10:59:02] *** Joins: darksun (~darksun@user/darksun)
[11:03:47] *** Quits: darksun (~darksun@user/darksun) (Ping timeout: 240 seconds)
[11:04:37] *** Joins: wender (~Wender@189.37.69.26)
[11:05:57] *** Quits: milkt (~debian@127.0.6.10) (Changing host)
[11:05:57] *** Joins: milkt (~debian@gateway/tor-sasl/milkt)
[11:07:08] *** Joins: gusto (~Augustus@109.255.100.54)
[11:07:47] *** Quits: computeiro (~Wender@189.37.69.200) (Ping timeout: 240 seconds)
[11:07:56] *** Joins: lordrishav1 (~LordRisha@user/lordrishav)
[11:10:08] *** Joins: rsrx (~rsrx@202.58.196.207)
[11:10:23] *** Quits: lordrishav (~LordRisha@user/lordrishav) (Ping timeout: 250 seconds)
[11:10:27] <AhmedAmerican> is that a bug ? https://bpa.st/MUDQ
[11:10:28] *** Joins: darksun (~darksun@user/darksun)
[11:10:55] *** Joins: domhnall (~developer@user/domhnall/x-2887755)
[11:11:09] *** Quits: EgonX (~EgonX@2601:2c6:47f:9c18:8419:e600:4f7e:6af) (Quit: My MacBook has gone to sleep. ZZZzzzâ€¦)
[11:11:29] <jinsun> http headers have to be ascii, you can't use those characters
[11:13:07] *** Joins: crabbedhaloablut (~crabbedha@user/crabbedhaloablut)
[11:14:13] *** Joins: schumaml (~schumaml@dslb-188-104-190-238.188.104.pools.vodafone-ip.de)
[11:14:29] <jinsun> you can have non ascii stuff in the body obviously, just have to give the encoding in the headers
[11:15:07] <AhmedAmerican> Hmm, it works with `requests`, looks like requests is actually using default encoding of `utf8` directly
[11:15:41] *** Joins: kosh (~kosh@user/kosh)
[11:17:46] *** Joins: ElPresidente (~ElPreside@2600:1700:3d10:4870:3442:770f:b7a8:5931)
[11:17:59] <jinsun> well technicallly utf-8 can be used, just the other side has to assume utf-8 also, the benefit of ascii is that it works even if the other side doesn't assume utf-8, because the ascii part is common in most encodings
[11:18:36] *** Joins: ihristov (~ihristov@217.145.94.71)
[11:18:59] <cluelessperson> AhmedAmerican, I would suggest:   base64.urlsafe_b64encode(bytes("test", "utf-8"))
[11:19:34] <jinsun> but utf-8 default is common nowadays, so maybe you can report this to httpx people and ask them to use utf-8 by default
[11:20:11] <cluelessperson> AhmedAmerican, or maybe you just need bytes.
[11:20:20] <cluelessperson> :|
[11:22:07] *** Joins: palasso (~palasso@user/palasso)
[11:26:04] *** Quits: pwnd_sfw (~pwnd_sfw@ool-18b88100.dyn.optonline.net) (Ping timeout: 252 seconds)
[11:26:25] *** Quits: gtz (~gtz@46.251.99.222) (Ping timeout: 250 seconds)
[11:26:34] *** Quits: trace1918 (~trace1918@94-137-125-182.customers.ownit.se) (Remote host closed the connection)
[11:26:40] *** Joins: manti7 (~manti7@176.10.104.94)
[11:31:09] *** Joins: nomic (~nomic@185.192.69.143)
[11:31:49] *** Joins: PyT001 (~PyT001@2402:e280:3d22:227:197d:939:d25:d58d)
[11:33:09] *** Joins: d0ku (~d0ku@178.43.56.75.ipv4.supernova.orange.pl)
[11:34:14] *** Quits: rsrx (~rsrx@202.58.196.207) (Quit: Leaving)
[11:35:44] *** Quits: et (~et@user/et) (Remote host closed the connection)
[11:35:52] *** Joins: et_ (~et@user/et)
[11:36:20] *** et_ is now known as et
[11:37:07] *** Joins: raxor2k (~raxor2k@46.230.139.86)
[11:37:40] <raek> hexnewbie: have you checked out MainLoop.watch_pipe()?
[11:38:16] <jaggz> do we have a bot interpreter in here?
[11:38:21] <raek> http://urwid.org/reference/main_loop.html#urwid.MainLoop.watch_pipe
[11:38:47] *** Quits: jack__d (~jack__d@pool-98-109-145-13.nwrknj.fios.verizon.net) (Ping timeout: 240 seconds)
[11:38:58] *** Joins: gggpkm (~gggpkm@60.10.194.43)
[11:39:29] <raek> you can start the subprocess using the subprocess.Popen/run functions. use watch_pipe to create the pipes for stdin and stderr (and maybe a normal suprocess.PIPE for stdin).
[11:39:35] <jaggz> how do I slice an array, in reverse, ending at offset 0?  aa=[1,2,3,4]; aa[1:0:-1] will output [2]
[11:39:40] *** Quits: AlanMD (~AlanMD@193.105.140.131) (Ping timeout: 240 seconds)
[11:39:40] <raek> writing to the process is just writing to its stdin pipe
[11:39:54] <jaggz> but I want aa[1:-1:-1] returns an empty list
[11:40:06] <jaggz> ugh..
[11:40:16] <raek> incoming data on on the stdout and stederr pipes triggers a callback in the urwid main loop
[11:40:19] <jaggz> but I want it to reach that first item (1)
[11:40:55] *** Joins: jack__d (~jack__d@pool-98-109-145-13.nwrknj.fios.verizon.net)
[11:41:15] <raxor2k> im struggling to print the values as int when using pandas to read CSV, can somebody help please? https://bpa.st/OPZA
[11:41:35] *** Joins: sodimel (~co@31.32.214.113)
[11:41:35] <raek> hexnewbie: regarding the popup window, I haven't thourght this through, but maybe you could use the urwod.Terminal widget? (http://urwid.org/reference/widget.html#terminal)
[11:41:55] <raek> hmm. it looks like Terminal can also handle the subprocess parts...
[11:42:05] <jinsun> jaggz: just leave the end part blank then it will include the 0th index also
[11:42:17] <raek> (you can do silly and entertaining things with it: https://github.com/raek/cowsay_urwid_widget/blob/master/cowsay.py)
[11:42:25] <bookworm> raxor2k: drop the NA values first
[11:42:42] *** Joins: AlanMD (~AlanMD@193.105.140.131)
[11:43:49] <raxor2k> bookworm: drop NA values?
[11:44:32] <bookworm> yes, you have an array like [1.0, 3.0, np.NAN, 4.0]
[11:44:53] <bookworm> np.nan can't be represented in an int
[11:45:13] *** Quits: djapo (~archangel@user/djapo) (Ping timeout: 248 seconds)
[11:45:15] <bookworm> hence if you want ints you need to remove those invalid values first
[11:45:44] <raxor2k> bookworm: this doenst make sense ?
[11:45:44] <hexnewbie> raek: Hmmm, so, like: askpass_in, askpass_in_write = os.pipe(); askpass_out=loop.watch_pipe(); sp.Popen(['ssh', ...], stdin=ssh_stdin, stdout=ssh_stdout, close_fds=True, pass_fds=(askpass_in, askpass_out.fileno()), env={'SSH_ASKPASS': 'fake-askpass.sh', 'FAKE_ASKPASS_IN': str(askpass_in), 'FAKE_ASKPASS_OUT', str(askpass_out.fileno())) ?
[11:46:06] *** Quits: nbin (~nbin@user/nbin) (Ping timeout: 268 seconds)
[11:46:09] *** Joins: Julian (~tos9@python/site-packages/Julian)
[11:46:11] <jinsun> raxor2k: why are you giving the names to read_csv when your csv already has the same headers? and seems like your data is semicolon separated instead of comma separated, so why are you not giving sep=";"
[11:46:13] *** Joins: abc_ (~abc@user/abc)
[11:46:16] *** Joins: nbin_ (~nbin@user/nbin)
[11:46:19] *** Quits: ano (~weechat@user/ano) (Remote host closed the connection)
[11:46:34] *** Quits: zwindl (~abc@user/abc) (Read error: Connection reset by peer)
[11:46:44] *** Joins: ano (~weechat@user/ano)
[11:47:07] <bookworm> oh, right missed that the data input was on top
[11:47:31] <raxor2k> jinsun : i found this codesnippet somwhere online
[11:47:37] <hexnewbie> Er, like loop.watch_pipe(lambda arg: askpass(askpass_in_write, arg))
[11:47:43] * bookworm goes and makes a cup of coffee
[11:48:34] *** Joins: winterflaw (~winterfla@gateway/tor-sasl/winterflaw)
[11:48:46] <jinsun> raxor2k: ok, but it is not going what you want, red_csv assumes comma separated values, you have semicolon separated values, so you have to give sep=";" to read_csv
[11:49:25] <jaggz> jinsun, ohhh
[11:49:28] <raxor2k> jinsun: i fixed it!
[11:49:29] <raxor2k> thanks f
[11:49:32] <raxor2k> for the tip
[11:49:57] <rendar> if i have a with block i want to try to turn off, instead of modifying a bunch of indentation, what is the best way? like temporarily substituting with a `with noop(): ...` ? is there something like that? e.g. a null context?
[11:50:56] <hexnewbie> os.pipe() seems to work on Windows, though I need to use os.set_inheritable() on the pipes, not sure if I can pass pipes to children like that there, though.
[11:51:18] <Julian> rendar: what do you mean by turn off? do you want the block within it to run or not run
[11:51:37] *** Quits: gggpkm (~gggpkm@60.10.194.43) (Ping timeout: 248 seconds)
[11:52:01] *** Joins: EvilDMP (~textual@django/moderator/EvilDMP)
[11:52:20] *** Joins: gtz (~gtz@185.12.215.241)
[11:52:30] <rendar> Julian, i don't want to run the with line, but i want to run all other lines *inside* the with block
[11:52:41] <rendar> hence i said a no-operation context
[11:53:55] <jinsun> rendar: why even have code insde the with block if it is not using the context manager?
[11:54:15] <rendar> jinsun, it is using the context manager, i just want to turn it off to TEST
[11:59:47] <jinsun> okay still not really clear what you want, why can't you test with the original context manager then? if the code was using it then it might fail if you change it
[12:04:31] *** Quits: MetalSutton (~MetalSutt@101.100.153.131) (Quit: Leaving)
[12:06:43] <Julian> rendar: open(os.devnull) more or less if that's what you want then
[12:06:59] *** Joins: Metalsutton (~Metalsutt@101.100.153.131)
[12:07:22] *** Joins: ubert (~Thunderbi@77.119.197.143.wireless.dyn.drei.com)
[12:07:30] <KirkMcDonald> Might make more sense to define a do-nothing context manager.
[12:07:32] <Julian> rendar: or contextmanager(lambda : (yield None))()
[12:08:06] <KirkMcDonald> contextlib.nullcontext()
[12:08:34] <Julian> nice
[12:08:40] *** Quits: ubert (~Thunderbi@77.119.197.143.wireless.dyn.drei.com) (Client Quit)
[12:08:46] *** Quits: KevinX (~KevinX@c-71-200-222-150.hsd1.fl.comcast.net) (Ping timeout: 250 seconds)
[12:09:04] *** Joins: KevinX (~KevinX@c-71-200-222-150.hsd1.fl.comcast.net)
[12:09:14] *** Quits: sodimel (~co@31.32.214.113) (Quit: Konversation terminated!)
[12:09:56] *** Joins: gggp (~textual@60.10.194.43)
[12:10:30] *** Quits: gggp (~textual@60.10.194.43) (Client Quit)
[12:11:45] *** Quits: b_jonas (~x@catv-176-63-12-67.catv.broadband.hu) (Quit: leaving)
[12:12:39] *** Joins: ayustae (Thunderbir@gateway/vpn/protonvpn/ayustae)
[12:13:48] <raxor2k> jinsun: what if i want to loop through and print only some spesific rows? for instance between timestamp:x and timestamp: x1 ?
[12:13:48] *** Joins: merijn (~merijn@83-160-49-249.ip.xs4all.nl)
[12:18:27] <raxor2k> problem is that timestamp is of type "object" whereas the other ones are int
[12:18:45] <jinsun> raxor2k: you can just loop over the rows with df.iterrows() but that will be slow, you can probably use boolean indexing here to slice in one go, which will be much faster https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#boolean-indexing
[12:19:50] *** Quits: Betal (~Betal@user/betal) (Quit: WeeChat 3.2)
[12:20:07] *** Joins: Gurkenglas (~Gurkengla@dslb-088-064-053-140.088.064.pools.vodafone-ip.de)
[12:20:27] *** Quits: stkrdknmibalz (~test@rrcs-75-87-43-226.sw.biz.rr.com) (Quit: WeeChat 3.0.1)
[12:21:11] *** Joins: toine (~antoine@2001:41d0:e:41f::1)
[12:21:26] *** Quits: toine42 (~antoine@2001:41d0:e:41f::1) (Read error: Connection reset by peer)
[12:21:46] <jinsun> raxor2k: something like, print(df[(df.timestamp > "20:19:51.4") & (df.timestamp < "20:19:51:7")])
[12:22:52] *** Joins: stkrdknmibalz (~test@rrcs-75-87-43-226.sw.biz.rr.com)
[12:23:17] *** Joins: yte3 (~0@151.15.160.239)
[12:23:52] *** Joins: emika7 (~emika@185.207.249.90)
[12:23:53] *** Quits: apollo13 (apollo13@django/moderator/apollo13) (Quit: ZNC - http://znc.in)
[12:24:27] *** Quits: emika (~emika@185.207.249.99) (Ping timeout: 240 seconds)
[12:24:27] *** emika7 is now known as emika
[12:24:37] *** Joins: Leonarbro_ (~Leonet@user/leonarbro)
[12:24:49] *** Joins: varaindemian (uid73404@id-73404.charlton.irccloud.com)
[12:26:06] *** Joins: apollo13 (apollo13@django/moderator/apollo13)
[12:27:18] <raxor2k> jinsun: and what is df ?
[12:28:23] *** Quits: Leonarbro (~Leonet@user/leonarbro) (Ping timeout: 250 seconds)
[12:28:54] <rendar> KirkMcDonald, thanks
[12:29:17] *** Quits: slowButPresent (~slowButPr@user/slowbutpresent) (Quit: leaving)
[12:29:40] *** Joins: daoudr (~daoudr@178.197.213.56)
[12:31:00] *** Quits: winterflaw (~winterfla@gateway/tor-sasl/winterflaw) (Remote host closed the connection)
[12:34:32] *** lordrishav1 is now known as LordRishav
[12:35:14] *** Joins: canardo (~canardo@2001:470:69fc:105::e110)
[12:37:17] <jinsun> raxor2k: df is your dataframe, that you get from read_Csv
[12:38:01] <raxor2k> jinsun: sorry my bad
[12:38:02] <raxor2k> thanks !
[12:38:18] *** Joins: dontyouloveshort (~julius@ip5f5bc22f.dynamic.kabel-deutschland.de)
[12:38:27] *** Quits: fikran (~fikran@user/fikran) (Ping timeout: 240 seconds)
[12:40:28] *** Joins: ub (~Thunderbi@77.119.197.143.wireless.dyn.drei.com)
[12:40:47] *** Joins: fikran (~fikran@user/fikran)
[12:42:27] *** Quits: gtz (~gtz@185.12.215.241) (Quit: Leaving)
[12:42:33] *** Quits: ub (~Thunderbi@77.119.197.143.wireless.dyn.drei.com) (Client Quit)
[12:43:14] *** Joins: betuxy (~ole@158.181.77.59)
[12:43:25] *** Joins: ApostleInTriumph (~ApostleIn@nat-clients.lix.polytechnique.fr)
[12:43:48] *** dcaro_away is now known as dcaro
[12:43:50] <ApostleInTriumph> Hello. How to set the default value of an argument in argparse same as another argument?
[12:44:03] *** Joins: hendursa1 (~weechat@user/hendursaga)
[12:44:58] <ApostleInTriumph> `python --foo 'F' --bar 'B'` then args.foo = 'F' and args.bar = 'B'. If `python --foo 'F'`, then i expect args.foo = 'F' and args.bar = 'F'.
[12:45:08] *** abc_ is now known as zwindl
[12:45:53] *** Joins: cthulchu (~Cthulchu@193.194.107.250)
[12:46:39] *** Joins: lxer (~lx@ip5f5bf666.dynamic.kabel-deutschland.de)
[12:46:58] *** Joins: winterflaw (~winterfla@gateway/tor-sasl/winterflaw)
[12:47:06] *** Quits: hendursaga (~weechat@user/hendursaga) (Ping timeout: 244 seconds)
[12:49:07] *** Quits: daoudr (~daoudr@178.197.213.56) (Ping timeout: 240 seconds)
[12:52:46] *** Joins: Leonarbro (~Leonet@user/leonarbro)
[12:53:05] *** Quits: domhnall (~developer@user/domhnall/x-2887755) (Quit: leaving)
[12:53:32] *** Quits: i0e (~is0ke3@user/is0ke3) (Quit: Zzzzzz.....)
[12:54:00] *** Joins: aku (~aku@eagleflow.fi)
[12:54:51] *** Quits: Julian (~tos9@python/site-packages/Julian) (Quit: leaving)
[12:54:58] *** Quits: twomoon (~twomoon@ip72-199-58-150.sd.sd.cox.net) (Quit: Leaving)
[12:55:20] *** Joins: daoudr (~daoudr@178.197.213.56)
[12:55:37] *** Joins: anarres (~thomas@89.44.10.167)
[12:56:09] *** Quits: Leonarbro_ (~Leonet@user/leonarbro) (Ping timeout: 248 seconds)
[12:58:17] *** Quits: ttree (~ttree0@c-73-239-62-159.hsd1.wa.comcast.net) (Ping timeout: 250 seconds)
[12:59:12] <lxer> I can't seem to figure out how to solve this https://dpaste.org/NeYB in a efficient way. Anyone here knows what the right approach woud be?
[12:59:15] *** Quits: brabrax (~brabrax@user/brabrax) (Quit: ZNC 1.8.2 - https://znc.in)
[12:59:23] *** Joins: xon (~xon@host-199-net-68-160-119.mobilinkinfinity.net.pk)
[13:00:15] *** Joins: brabrax (~brabrax@user/brabrax)
[13:02:46] <The-Compiler> lxer: 404
[13:02:56] <The-Compiler> ApostleInTriumph: you might need to do this manually
[13:03:22] <lxer> https://dpaste.org/EYRB
[13:03:48] *** Quits: TJ- (~root@2a01:7e00:e001:ee00:fffe:f875:a4f3:42b4) (Ping timeout: 250 seconds)
[13:04:01] *** Quits: xon (~xon@host-199-net-68-160-119.mobilinkinfinity.net.pk) (Client Quit)
[13:04:04] <lxer> this link works better.
[13:04:36] <dwew> how can I turn 'open "My Documents" folder' in ['open', 'My Documents', 'folder']?
[13:05:23] *** Joins: roteiro (~roteiro@i5C758B02.versanet.de)
[13:06:06] <hexnewbie> dwew: shlex.split() perhaps. It's the only stdlib that does something of the sort, but whether it's the syntax you need is unclear
[13:06:47] <The-Compiler> lxer: where did the 4 go?
[13:07:07] *** Quits: txtsd (~txtsd@user/txtsd) (Ping timeout: 240 seconds)
[13:07:16] *** Quits: anarres (~thomas@89.44.10.167) (Ping timeout: 252 seconds)
[13:07:51] *** Joins: ice9 (~ice9@user/ice9)
[13:08:25] <lxer> sorry, thats a typo. should be like https://dpaste.org/LMjk
[13:09:01] *** Quits: hnOsmium0001 (uid453710@id-453710.stonehaven.irccloud.com) (Quit: Connection closed for inactivity)
[13:09:07] <The-Compiler> lxer: the first thing I could come up with is:  [{k: v[i] for k, v in d.items()} for i in range(len(d['a']))]   - but there might be something better using zip()
[13:09:19] *** Joins: txtsd (~txtsd@user/txtsd)
[13:11:24] <susam> The-Compiler: Nice solution!
[13:11:33] <susam> All I could come with up was this: https://dpaste.org/eeCc
[13:13:31] <lxer> nice. will try it.
[13:17:12] <jinsun> a zippy solution `list(dict(zip(d.keys(), v)) for v in zip(*d.values()))` but not really much better than The-Compiler's solution
[13:18:07] *** Joins: TJ- (~root@2a01:7e00:e001:ee00:fffe:f875:a4f3:42b4)
[13:18:31] <ApostleInTriumph> It still isn't obvious to me why json would need a file object and not take in string directly..
[13:19:00] *** Joins: anarres (~thomas@89.44.10.71)
[13:19:02] <jinsun> use json.loads instead of json.load
[13:19:05] <susam> ApostleInTriumph: There is a json.loads() function read the JSON directly from a string.
[13:19:25] <susam> ApostleInTriumph: The json.load() function is for situation where you already have the file object referring to your JSON file.
[13:19:33] <ApostleInTriumph> how to dump? json.dumps() also takes a string?
[13:19:57] <jinsun> it takes nothing, it returns a string
[13:20:14] <deniska> it takes whatever type convertable to json (typically dict) and returns a string
[13:20:23] <hexnewbie> Well, it takes what you need to dump, which can be a string despite it not being very standard JSON.
[13:20:23] *** Quits: freeworld (~vit@chello085216193138.chello.sk) (Ping timeout: 250 seconds)
[13:20:50] <The-Compiler> jinsun, lxer, susam: If you don't mind the values being tuples:  dict(zip(d.keys(), zip(*d.values())))
[13:21:10] <susam> jinsun: json.dumps() takes any "JSON serializable" object and converts it to a string that represents a valid JSON.
[13:21:25] <The-Compiler> wait, no
[13:21:33] <The-Compiler> I confused myself :)
[13:21:38] <susam> jinsun: For example, it can take a Python dict and create a string that represents a valid JSON. You can write out that string to a file or send it as a response over HTTP and so on.
[13:22:00] *** Joins: mozgalom (~mozgalom@ipnet-gw.157.157.97.111.simnet.is)
[13:22:33] <jinsun> susam: ya by takes nothing I actually meant that you don't have to give it a file pointer
[13:22:56] <ApostleInTriumph> okay, so to dump a dict to json, I still need to pass a file object that's writable and not a string, right?
[13:23:01] <susam> jinsun: Oops. Sorry. I am replying incorrectly to you.
[13:23:13] <susam> ApostleInTriumph: My above messages were meant for you.
[13:23:56] <susam> jinsun: Sorry about that. I knew what you were talking about. Didn't mean to nitpick at all.
[13:24:20] <jinsun> no problem :)
[13:24:20] <susam> ApostleInTriumph: Example: json.dumps({'a': 'apple', 'b': 'ball', 'c': 10, 'd': True}) => '{"a": "apple", "b": "ball", "c": 10, "d": true}'
[13:24:56] <ApostleInTriumph> deniska jinsun susam hexnewbie when you mean return a string, it's dict as string that can be written to a file?
[13:25:03] <ApostleInTriumph> susam right, makes sense
[13:25:25] <jinsun> ApostleInTriumph: yes, you can write that string to a file if you want
[13:25:31] <susam> ApostleInTriumph: No, it is the entire JSON as a string. Dicts and JSON do not have 1-to-1 parity. For example, Python has None which becomes null in JSON.
[13:25:38] <deniska> ApostleInTriumph: if you already have a file open, you can use json.dump({'a': 'apple', 'b': 'ball', 'c': 10, 'd': True}, f)
[13:26:01] <ApostleInTriumph> my initial question was whether I'd be able to do something like json.<dump/etc..>(my_dict, 'my_path.json')
[13:26:23] <ApostleInTriumph> instead of latter argument being a file, working of current json.dump(),
[13:26:28] <susam> ApostleInTriumph: For example: json.dumps({'a': None, 'b': 20}) =>
[13:26:30] <susam> '{"a": null, "b": 20}'
[13:26:57] <susam> Now if you take this string and write it to a file, or send it as a response to a client, you have a valid JSON file/response.
[13:27:03] <ApostleInTriumph> susam I see
[13:27:04] <jinsun> ApostleInTriumph: no json.dump will not take file path, but you can do that in one line with pathlib.Path.write_text and json.dumps
[13:27:27] <ApostleInTriumph> jinsun perfect, that's what i was looking for
[13:27:33] <susam> However, for writing to a file, there is also json.dump().
[13:27:35] <jinsun> ApostleInTriumph: pathlib.Path("my_path.json").write_text(json.dumps(my_dict))
[13:29:08] *** Joins: PJBoy (~PJBoy@user/pjboy)
[13:30:05] <raek> does anyone know of a tool to display a call graph of python functions? I want to use such a tool to understand the structure of a python project I'm not familiar with...
[13:31:17] <KirkMcDonald> raek: The profiler records a call graph as part of what it does.
[13:31:45] <KirkMcDonald> Though if you're talking about inferring a call graph statically, that's a different problem.
[13:32:26] <susam> raek: What I do often with a new code base is add 1/0 (ZeroDivisionError) or some such error deep within a function call and let the exception backtrace show me the entire call graph.
[13:32:59] <raek> KirkMcDonald: yeah, in my case I'm not interrested in calling these script in every possible way...
[13:33:03] <susam> Of course, that won't show all the call graphs. It will only show a particular one.
[13:33:07] *** Quits: ssbr (~ssbr@python/site-packages/ssbr) (Remote host closed the connection)
[13:33:27] *** Joins: ssbr (~ssbr@python/site-packages/ssbr)
[13:33:49] <KirkMcDonald> raek: Ideally there exist unit tests which do this.
[13:34:31] <raek> I often stuggle with reading others' code from scratch. it feels like an indecipherable wall of text.
[13:34:33] <hexnewbie> raek: I used to do: python -m cProfile -o profile.dat my_program.py; gprof2dot -f pstats profile.dat | dot -Tpng -o profile.png
[13:34:58] <raek> I like cProfile. I have used it before that way.
[13:35:26] <susam> raek: I think it is a pretty normal feeling. What I do is find my area of influence within the code. Start working on it. Fixing bugs. Adding stuff. And the direct interaction with the code like that gradually builds the mental models I need to understand the structure more and more.
[13:36:18] <susam> I doubt there is any silver bullet for it that would work for all. That is my way to make sense of a new complex codebase. I guess everyone has some similar way of their own.
[13:36:25] <raek> in this case I'm supposed to work more with the packaging and file layout than the actual inner workings of the scripts
[13:36:43] <raek> a lot of sys.path.append() stuff
[13:37:44] <raek> I often think that it would be useful to have a graphviz plot that displays each function and which other functions they call (possibly grouping the functions in boxes for modules)
[13:37:47] *** Quits: raxor2k (~raxor2k@46.230.139.86) (Ping timeout: 240 seconds)
[13:38:25] <raek> to answer the questions "what stuff is even there?" and "if I need to fiddle with this part, which other parts should I look into?"
[13:38:55] <rendar> any help with this bug? what could i try? https://github.com/willmcgugan/rich/issues/1431
[13:40:03] <susam> I am not too sure. For a few reasons: One is that on two occasions I worked with million lines code. On one occasion it was a 2 million line C++ code. On another occasion it was a 25 million line C code. I doubt any graphical tools would be of any use with such code bases. The initial feeling of working with such code bases is always that of intimidation. Takes a while to get used to the complexity and
[13:40:09] <raek> in my case I will probably come pretty far by just grepping out all the "def ..." lines and then grep usages of those names...
[13:40:09] <susam> start forming mental models about them.
[13:40:16] *** Quits: dontyouloveshort (~julius@ip5f5bc22f.dynamic.kabel-deutschland.de) (Ping timeout: 252 seconds)
[13:40:26] *** Joins: xx (~xx@user/xx)
[13:40:41] <susam> For small code bases (say a few 1000 lines of code), graphical visualization may be useful. However, in such a case a good tree browser + clicking around the codebase could also be work.
[13:41:12] <susam> I doubt the mental models we form regarding code in our brains are graphical at all. I think they are more abstract.
[13:41:40] <susam> *could also work
[13:41:50] <raek> yeah, I just want to aid creating that model
[13:44:55] *** Quits: jpds (~jpds@gateway/tor-sasl/jpds) (Remote host closed the connection)
[13:45:18] *** Joins: scaleww (~scaleww@77-41-20-31.ftth.glasoperator.nl)
[13:45:19] *** Joins: jpds (~jpds@gateway/tor-sasl/jpds)
[13:46:56] *** Quits: zwindl (~abc@user/abc) (Remote host closed the connection)
[13:47:07] *** Quits: nbin_ (~nbin@user/nbin) (Ping timeout: 240 seconds)
[13:47:10] *** Joins: abc_ (~abc@user/abc)
[13:47:37] *** abc_ is now known as zwindl
[13:47:51] *** Joins: nbin (~nbin@user/nbin)
[13:48:24] *** Joins: rubion (~rubion@cpc124306-ayle4-2-0-cust188.15-2.cable.virginm.net)
[13:48:27] *** Quits: asix (~Anders@user/asix) (Ping timeout: 240 seconds)
[13:54:01] *** Quits: anarres (~thomas@89.44.10.71) (Ping timeout: 252 seconds)
[13:58:08] *** Quits: LordRishav (~LordRisha@user/lordrishav) (Quit: WeeChat 2.8)
[13:58:12] *** Quits: dwew (~dwew@178.49.152.151) (Quit: Client closed)
[14:00:37] *** Quits: cthulchu (~Cthulchu@193.194.107.250) (Ping timeout: 252 seconds)
[14:00:40] *** Quits: vd (~vd@bras-base-mtrlpq2848w-grc-41-70-53-240-121.dsl.bell.ca) (Quit: Client closed)
[14:02:44] *** Joins: asix (~Anders@user/asix)
[14:03:17] *** Quits: rubion (~rubion@cpc124306-ayle4-2-0-cust188.15-2.cable.virginm.net) (Ping timeout: 250 seconds)
[14:03:58] *** Quits: PyT001 (~PyT001@2402:e280:3d22:227:197d:939:d25:d58d) (Quit: Client closed)
[14:04:40] *** Joins: DnzAtWrk (~DnzAtWrk@mobile-access-56739f-227.dhcp.inet.fi)
[14:04:55] *** Quits: cqi (~cqi@2408:8207:252f:75a0:8cf2:f40a:73a7:dfd6) (Quit: Leaving)
[14:07:19] *** Joins: lucad111 (~lucad111@51-148-40-1.dsl.zen.co.uk)
[14:07:47] <f8e4> mini app: poll remote api and while: True compare to a preset alarm; the alarm should be scheduled in same terminal; how approach?
[14:09:10] *** Joins: ppang (~ppang@user/ppang)
[14:10:07] *** Quits: ogis (~Android@p1927250-omed01.osaka.ocn.ne.jp) (Read error: Connection reset by peer)
[14:12:18] *** Quits: daoudr (~daoudr@178.197.213.56) (Quit: Leaving)
[14:13:17] *** Joins: ogis (~Android@p2037202-ipngn201011tokaisakaetozai.aichi.ocn.ne.jp)
[14:15:15] *** Joins: Mechanismus (~LabMonkey@108-246-46-39.lightspeed.rcsntx.sbcglobal.net)
[14:15:38] *** Joins: daoudr (~daoudr@178.197.213.56)
[14:15:48] *** Joins: CoolerX (~CoolerX@user/coolerx)
[14:16:01] *** Quits: betuxy (~ole@158.181.77.59) (Ping timeout: 252 seconds)
[14:16:38] <DnzAtWrk> TIL you can list object attributes using __dir__()
[14:16:38] <DnzAtWrk> handy
[14:16:57] *** Joins: freeworld (~vit@chello085216193138.chello.sk)
[14:18:47] *** Quits: darksun (~darksun@user/darksun) (Ping timeout: 240 seconds)
[14:19:11] *** Quits: ApostleInTriumph (~ApostleIn@nat-clients.lix.polytechnique.fr) (Quit: Client closed)
[14:19:27] *** Quits: merijn (~merijn@83-160-49-249.ip.xs4all.nl) (Ping timeout: 240 seconds)
[14:20:23] *** Quits: freeworld (~vit@chello085216193138.chello.sk) (Client Quit)
[14:20:30] *** Joins: YuGiOhJCJ (~YuGiOhJCJ@gateway/tor-sasl/yugiohjcj)
[14:20:43] *** Joins: merijn (~merijn@83-160-49-249.ip.xs4all.nl)
[14:20:48] *** Joins: freeworld (~vit@chello085216193138.chello.sk)
[14:20:55] *** Joins: drd (~drd@2001:b07:a70:9f1f:1562:34de:f50f:77d4)
[14:22:47] *** Quits: jazzy (~jaziz@2600:380:8773:c113:283b:42e6:63fd:12e7) (Ping timeout: 250 seconds)
[14:22:51] *** Quits: kickingvegas (~cchoi@c-24-5-40-20.hsd1.ca.comcast.net) (Quit: leaving)
[14:25:49] *** Quits: merijn (~merijn@83-160-49-249.ip.xs4all.nl) (Ping timeout: 250 seconds)
[14:26:41] *** Joins: merijn (~merijn@83-160-49-249.ip.xs4all.nl)
[14:28:58] *** Joins: blindguard (~blindguar@2a02:908:1864:c200::4433)
[14:30:10] <Yhg1s> DnzAtWrk: ... no, __dir__ is what is called to list object attributes. dir() is what you should call. (As a rule, never call __*__ methods directly, unless it's on a super() object).
[14:30:36] *** Quits: djhankb (~djhankb@208.113.164.68) (Remote host closed the connection)
[14:31:08] *** Joins: djhankb (~djhankb@208.113.164.68)
[14:31:10] <DnzAtWrk> but that's what I said I used it for
[14:32:09] *** Quits: merijn (~merijn@83-160-49-249.ip.xs4all.nl) (Ping timeout: 248 seconds)
[14:32:25] *** Joins: merijn (~merijn@83-160-49-249.ip.xs4all.nl)
[14:33:42] <jinsun> __dir__ is called internally, you should call the builtin function dir instead of doing obj.__dir__()
[14:34:32] <Yhg1s> DnzAtWrk: your statement wasn't clear in that, but if you're not actually calling __dir__ yourself, sounds like you're using it right.
[14:34:55] *** Joins: darksun (~darksun@user/darksun)
[14:35:07] *** Quits: elastic_dog (~elastic_d@2a01:118f:822:9c00:f583:aa51:9ad4:d4fb) (Ping timeout: 240 seconds)
[14:35:37] *** Joins: Cheaterman (~Cheaterma@user/cheaterman)
[14:36:11] *** Joins: BillyZane2 (~BillyZane@185.216.74.25)
[14:37:40] *** Quits: merijn (~merijn@83-160-49-249.ip.xs4all.nl) (Ping timeout: 240 seconds)
[14:37:57] *** Quits: BillyZane (~BillyZane@91.196.220.174) (Ping timeout: 250 seconds)
[14:38:02] *** Joins: merijn (~merijn@83-160-49-249.ip.xs4all.nl)
[14:39:06] *** Quits: zamba (~marius@5.226.162.54) (Quit: WeeChat 3.0)
[14:39:07] *** Joins: dontyouloveshort (~julius@2a02:8108:8100:18c4:3d26:df8c:7070:d838)
[14:39:37] *** Quits: darksun (~darksun@user/darksun) (Ping timeout: 248 seconds)
[14:40:13] *** Quits: molt (~molt@79.140.150.225) (Ping timeout: 252 seconds)
[14:41:02] *** Joins: elastic_dog (~elastic_d@2a01:118f:822:9c00:f583:aa51:9ad4:d4fb)
[14:41:03] *** Joins: besnn (~besnn@user/besnn)
[14:41:13] *** Joins: raxor2k (~raxor2k@46.230.139.86)
[14:41:43] <raxor2k> jinsun: im trying to loop as you said(works perfectly), and take that part and write to another CSV; but im getting error.. know why? https://bpa.st/YX5Q
[14:41:51] <DnzAtWrk> will there ever be a lighter version of jupyter
[14:41:55] *** Quits: daoudr (~daoudr@178.197.213.56) (Remote host closed the connection)
[14:42:05] <DnzAtWrk> I'm a fan, but the list of deps to download makes me avoid it on my main computer
[14:42:33] *** Joins: anarres (~thomas@89.44.10.167)
[14:42:33] <DnzAtWrk> if there was something like jupyter-customized or jupyter-light
[14:43:18] *** Joins: daoudr (~daoudr@178.197.213.56)
[14:43:21] *** Quits: merijn (~merijn@83-160-49-249.ip.xs4all.nl) (Ping timeout: 248 seconds)
[14:43:31] <DnzAtWrk> not to say that scikit-learn, scipy and pandas aren't a bit bloated too
[14:43:35] <DnzAtWrk> but not AS bloted
[14:43:51] <DnzAtWrk> okay, pandas is really pushing it
[14:44:02] *** Joins: merijn (~merijn@83-160-49-249.ip.xs4all.nl)
[14:46:00] *** Quits: agronholm_ (sid403424@id-403424.brockwell.irccloud.com) ()
[14:46:50] *** Quits: Meteorhead (~Meteorhea@165.225.205.44) (Quit: Client closed)
[14:47:19] *** Joins: jazzy (~jaziz@2600:380:874b:fa95:c80:3993:216c:c86e)
[14:48:10] *** Quits: fikran (~fikran@user/fikran) (Ping timeout: 240 seconds)
[14:49:01] *** Quits: CoolerX (~CoolerX@user/coolerx) (Ping timeout: 252 seconds)
[14:49:13] *** Quits: merijn (~merijn@83-160-49-249.ip.xs4all.nl) (Ping timeout: 250 seconds)
[14:49:30] *** Joins: p4rpc (~p4rpc@89-69-17-47.dynamic.chello.pl)
[14:49:31] *** Joins: merijn (~merijn@83-160-49-249.ip.xs4all.nl)
[14:50:09] *** Joins: fikran (~fikran@user/fikran)
[14:50:51] <bjs> raxor2k: I'm going to guess that timestamp doesn't have the acc_z index
[14:51:00] <Gurkenglas> A pytorch error prevented the clearing of a hook. How do I clear the hooks now that I don't have the references to them?
[14:51:04] *** Joins: darksun (~darksun@user/darksun)
[14:51:13] <bjs> timerange*
[14:51:18] <nedbat> DnzAtWrk: what aspect of "bloated" are you concerned about? are you low on disk space?
[14:51:36] <DnzAtWrk> the amount of reliance on third-party code
[14:51:43] <bjs> raxor2k: have you tried printing out timerange to see what it is?
[14:51:49] <DnzAtWrk> I don't think it's particulary safe
[14:52:01] <nedbat> DnzAtWrk: those are widely used packages though?
[14:52:07] <DnzAtWrk> most, maybe not all
[14:52:38] <Gurkenglas> on %debug pdb just says "----> 1 hooks", whats that mean?
[14:53:07] *** Quits: besnn (~besnn@user/besnn) (Ping timeout: 250 seconds)
[14:53:59] *** Joins: gggp (~textual@60.10.194.43)
[14:54:07] *** Quits: stkrdknmibalz (~test@rrcs-75-87-43-226.sw.biz.rr.com) (Quit: WeeChat 3.0.1)
[14:54:27] *** Quits: merijn (~merijn@83-160-49-249.ip.xs4all.nl) (Ping timeout: 240 seconds)
[14:55:03] *** Quits: nomic (~nomic@185.192.69.143) (Quit: Leaving)
[14:55:09] *** Joins: merijn (~merijn@83-160-49-249.ip.xs4all.nl)
[14:55:17] *** Quits: Voxel (~Voxel@ip178-67-155-188.onego.ru) (Quit: Client closed)
[14:56:02] *** Quits: darksun (~darksun@user/darksun) (Ping timeout: 250 seconds)
[14:56:41] <raxor2k> bjs: it does.. thats so strange!
[14:57:44] <raxor2k> bjs: i solved it.. the issue was: ;  acc_z;
[14:58:01] <raxor2k> there was spaces between the first ";" and acc_z
[14:58:05] <bjs> raxor2k: spaces where?
[14:58:21] *** Quits: daoudr (~daoudr@178.197.213.56) (Quit: Leaving)
[14:58:34] <raxor2k> in the CSV file
[14:58:37] <raxor2k> like this: tance;  acc_z;  weight
[14:58:42] <bjs> raxor2k: oh in the file you didn't show us :)
[14:58:54] <raxor2k> jep
[14:58:59] <bjs> raxor2k: but this would've meant there was no acc_z column,  how come you saw one when you print(timerange)
[14:59:11] <raxor2k> bjs: i dont know
[14:59:14] <raxor2k> but anyways it works now
[14:59:24] *** Joins: GreenResponse (~tomek@r-45-155-148-237.gpon.bialnet.pl)
[14:59:42] *** Joins: daoudr (~daoudr@178.197.213.56)
[14:59:46] *** Joins: MikZyth (~MikZyth@188.65.242.95)
[15:00:34] *** Quits: merijn (~merijn@83-160-49-249.ip.xs4all.nl) (Ping timeout: 252 seconds)
[15:00:56] *** Joins: merijn (~merijn@83-160-49-249.ip.xs4all.nl)
[15:01:18] <raxor2k> and of course there`s another problem ..
[15:01:34] *** Joins: nomic (~nomic@185.192.69.143)
[15:01:34] *** Quits: nomic (~nomic@185.192.69.143) (Client Quit)
[15:06:07] *** Quits: merijn (~merijn@83-160-49-249.ip.xs4all.nl) (Ping timeout: 240 seconds)
[15:06:07] *** Quits: ppang (~ppang@user/ppang) (Ping timeout: 240 seconds)
[15:06:52] *** Joins: merijn (~merijn@83-160-49-249.ip.xs4all.nl)
[15:07:26] *** Quits: dcaro (~dcaro@user/dcaro) (Quit: ZNC 1.8.2 - https://znc.in)
[15:07:52] *** Joins: dcaro (~dcaro@user/dcaro)
[15:09:02] *** Quits: gggp (~textual@60.10.194.43) (Ping timeout: 250 seconds)
[15:12:07] *** Quits: anarres (~thomas@89.44.10.167) (Ping timeout: 240 seconds)
[15:12:09] *** Quits: merijn (~merijn@83-160-49-249.ip.xs4all.nl) (Ping timeout: 248 seconds)
[15:12:27] <nedbat> DnzAtWrk: this is a dilemma: jupyter is cool because it is powerful, largely because it uses lots of third-party tools.
[15:12:28] *** Quits: xrogaan (~xrogaan@user/xrogaan) (Quit: Leaving)
[15:12:47] *** Joins: merijn (~merijn@83-160-49-249.ip.xs4all.nl)
[15:15:16] *** Quits: TJ- (~root@2a01:7e00:e001:ee00:fffe:f875:a4f3:42b4) (Quit: WeeChat 2.8)
[15:16:33] *** Joins: Midjak (~Midjak@82-65-111-221.subs.proxad.net)
[15:17:01] *** Quits: kmikita (uid461814@id-461814.brockwell.irccloud.com) ()
[15:17:19] *** Joins: kmikita (uid461814@id-461814.helmsley.irccloud.com)
[15:17:59] *** Joins: nomic (~nomic@185.192.69.143)
[15:18:10] *** Quits: merijn (~merijn@83-160-49-249.ip.xs4all.nl) (Ping timeout: 252 seconds)
[15:18:34] *** Joins: merijn (~merijn@83-160-49-249.ip.xs4all.nl)
[15:21:15] *** Joins: molt (~molt@79.140.150.225)
[15:22:27] <hodapp> there is considerable power simply in the "notebook" paradigm
[15:23:04] <raxor2k> bjs: the rows are not correctly written in the new CSV file.. what am i doing wrong? https://bpa.st/KF7A
[15:23:52] *** Quits: Grace (uid33812@id-33812.tooting.irccloud.com) (Quit: Connection closed for inactivity)
[15:23:53] *** Quits: merijn (~merijn@83-160-49-249.ip.xs4all.nl) (Ping timeout: 250 seconds)
[15:23:53] <bjs> raxor2k: it's weird to me because you say writerow() which writes a single row
[15:23:58] <bjs> is writerow() really what you wanted?
[15:23:59] *** Joins: timdiels (~user@78-22-205-207.access.telenet.be)
[15:24:11] <hodapp> buuuut one of my gripes is how notebooks tend to be great for exploratory work and prototyping, and hot garbage for "actual" development
[15:24:22] *** Joins: merijn (~merijn@83-160-49-249.ip.xs4all.nl)
[15:25:20] <hodapp> but I did my time using things like MATLAB and one of the biggest time-sinks can be with going through all the ceremony in code to just keep straight that section ___ produced plot ___ and results ___
[15:25:23] <raxor2k> bjs: it workes other places when i want to write data to a CSV, than it writes perfectly, but not in this case (from CSV to CSV)
[15:25:36] <bjs> raxor2k: in those other places are you wanting to write a single row?
[15:25:50] *** Joins: gggp (~textual@111.63.14.115)
[15:26:22] *** Joins: legola (~legola@46.235.100.27)
[15:27:22] *** Quits: coldmountain (sid484352@id-484352.brockwell.irccloud.com) ()
[15:27:32] <hodapp> as far as 'lighter' Jupyter once in awhile I see people using alternative clients for IPython/Jupyter (e.g. EIN in Emacs), which... kind of counts since a lot of the weight is in the web UI
[15:27:36] *** Joins: amahl (~amahl@dsl-jklbng12-54fbca-64.dhcp.inet.fi)
[15:27:37] *** Joins: coldmountain (sid484352@id-484352.helmsley.irccloud.com)
[15:28:00] *** Quits: vdamewood (~vdamewood@fedora/vdamewood) (Quit: My MacBook Pro has gone to sleep. ZZZzzzâ€¦)
[15:28:41] <raxor2k> bjs: this is from another project(API), which writes data to that first CSV file i am reading from : https://bpa.st/HBNQ
[15:28:52] <raxor2k> and it works well here ..
[15:28:56] <bjs> raxor2k: but there aren't you trying to write only 1 row?
[15:29:34] <raxor2k> bjs : im writing multiple rows ?
[15:29:42] <bjs> raxor2k: is that a question
[15:29:47] <raxor2k> no
[15:29:50] <raxor2k> i am doing it
[15:29:54] <bjs> raxor2k: here `filewriter.writerow([get_current_time_clock(),real_post])` ?
[15:29:58] <bjs> that looks like only 1 row to me
[15:30:54] <raxor2k> bjs: it looks like 1 row, but that is running inside a function which again is called multiple times
[15:30:57] <raxor2k> aha, i get it now
[15:30:59] *** Joins: vdamewood (~vdamewood@fedora/vdamewood)
[15:31:01] <raxor2k> i need a forloop
[15:31:05] <bjs> raxor2k: yes so that line is only writing one row
[15:31:17] <bjs> raxor2k: or maybe https://pandas.pydata.org/docs/reference/api/pandas.DataFrame.to_csv.html
[15:31:24] <bjs> (or writerows() to write multiple rows)
[15:31:54] <f8e4> how to annotate in python function param1 can be A or B only
[15:32:09] <f8e4> 'foo' or 'bar' nothing else
[15:32:13] *** Quits: withered_wolf (~withered_@1437135-v103.1561-static.stchilaa.metronetinc.net) (Quit: If dreams are like movies, then memories are films about ghosts.)
[15:32:19] <bjs> f8e4: you mean the literal strings 'foo' and 'bar' ?
[15:32:23] <f8e4> yes
[15:32:25] *** Joins: withered_wolf (~withered_@1437135-v103.1561-static.stchilaa.metronetinc.net)
[15:32:32] <bjs> f8e4: see https://www.python.org/dev/peps/pep-0586/
[15:33:09] <bjs> so you can say `def f(param1: Literal["foo"] | Literal["bar"]) -> ...: ...` to say that
[15:33:36] <raxor2k> bjs: writerows() didnt work either, im trying reading the link
[15:33:55] <bjs> raxor2k: well you can't just add an s to the end of the function then suddenly it works
[15:34:19] *** Quits: seds (sid492514@user/seds) ()
[15:34:41] <bjs> writerows is the function that writes multiple rows at once,  you'll need to go read its documentation and understand how to call it.  Same with .to_csv(), you have to go read it to figure out how to use it properly
[15:34:43] *** Joins: seds (sid492514@user/seds)
[15:35:09] *** Quits: rakoon (~rakoon@2a02:2149:824f:5900:fdd8:757d:324f:59ed) (Ping timeout: 250 seconds)
[15:35:13] *** Joins: anarres (~thomas@89.44.10.183)
[15:36:10] *** Joins: rakoon (~rakoon@2a02:2149:824f:5900:659d:f335:350b:b887)
[15:36:53] *** Quits: drd (~drd@2001:b07:a70:9f1f:1562:34de:f50f:77d4) (Ping timeout: 250 seconds)
[15:37:07] *** Quits: elastic_dog (~elastic_d@2a01:118f:822:9c00:f583:aa51:9ad4:d4fb) (Ping timeout: 240 seconds)
[15:37:11] *** Quits: seds (sid492514@user/seds) (Max SendQ exceeded)
[15:38:01] <Gurkenglas> Can I put `Tensor = torch.cuda.FloatTensor if cuda else torch.FloatTensor` in terms of `device = torch.device("cuda:0" if torch.cuda.is_available() else "cpu")`?
[15:38:25] *** Joins: seds (sid492514@user/seds)
[15:38:31] <The-Compiler> Gurkenglas: I'm not sure if I understand the question, but that expression sounds like it should do what you describe
[15:39:08] <Gurkenglas> The-Compiler, the question is whether I can replace `Tensor =`'s dependency on the boolean cuda with a dependency on device
[15:40:10] *** Quits: daoudr (~daoudr@178.197.213.56) (Quit: Leaving)
[15:40:11] <The-Compiler> Gurkenglas: so something like this?   Tensor = torch.cuda.FloatTensor if torch.cuda.is_available() else torch.FloatTensor
[15:40:50] *** Joins: darksun (~darksun@user/darksun)
[15:41:10] *** Quits: dcaro (~dcaro@user/dcaro) (Quit: ZNC 1.8.2 - https://znc.in)
[15:41:24] <Gurkenglas> The-Compiler, no. There should be `device` somewhere to the right of `Tensor =`.
[15:41:37] *** Joins: dcaro (~dcaro@user/dcaro)
[15:43:29] *** Quits: rany (~rany@user/rany) (Quit: ZNC 1.8.2+deb2+b1 - https://znc.in)
[15:43:53] *** Joins: Bronto22 (~mennoh@84-86-247-193.fixed.kpn.net)
[15:44:11] *** Joins: elastic_dog (~elastic_d@2a01:118f:822:9c00:f583:aa51:9ad4:d4fb)
[15:45:10] *** Quits: darksun (~darksun@user/darksun) (Ping timeout: 240 seconds)
[15:46:13] *** Quits: molt (~molt@79.140.150.225) (Ping timeout: 252 seconds)
[15:46:27] *** Quits: nocko (sid501219@user/nocko) ()
[15:46:50] *** Joins: nocko (sid501219@user/nocko)
[15:47:22] <raxor2k> bjs : how come this wont work? : https://bpa.st/5LLQ
[15:48:11] *** Joins: philectro (~quassel@2a02:2788:9a4:9f0:862b:c19b:5df2:c0a)
[15:48:27] *** Joins: CoolerX (~CoolerX@user/coolerx)
[15:48:42] <bjs> raxor2k: all you've done is randomly insert an 's' into your code without actually changing the input to the function
[15:48:48] <bjs> raxor2k: did you actually read the docs for writerows() ?
[15:49:59] *** Joins: besnn (~besnn@user/besnn)
[15:51:11] <raxor2k> yes
[15:51:43] *** Quits: gggp (~textual@111.63.14.115) (Ping timeout: 252 seconds)
[15:52:06] <timdiels> Hi, am I wrong to rarely use nested classes? They tout it hides the nested class or keeps it together with a closely related class but it does indent all the code one level deeper meaning a loss of precious real estate for code, leading to more line wrapping due to max line length while e.g. `class Car: class Engine: pass` could be replaced with `class Car: pass; class CarEngine: pass` or even
[15:52:09] *** Quits: Mikaela (~sid12355@Feneas/Mikaela) (Quit: Default quit message is difficult to set. If you don't see me returning, ask me? You will find me, if you want to)
[15:52:12] <timdiels> `_CarEngine` if you want to keep it private and it should still be reasonably obvious to other classes in the module that they should not use `_CarEngine` for their own class even though it's not actually private to them. Of course formatting with black would grant me the extra 9 characters that would alleviate this.
[15:52:21] <Gurkenglas> When renaming attributes of a pytorch module whose state dict I've saved, how would I migrate the savefile?
[15:52:53] <The-Compiler> timdiels: yeah, it's quite unusual to nest classes
[15:53:18] *** Joins: daoudr (~daoudr@178.197.213.56)
[15:53:58] <bjs> raxor2k: then you'll know that writerows() takes an iterable of rows
[15:54:02] *** Joins: gggp (~textual@111.63.14.115)
[15:54:10] <timdiels> The-Compiler: ok, glad I'm not the only one then
[15:54:13] <bjs> raxor2k: so your code says `timerange["timestamp"]` is the first row and `timerange["machine_ID"]` is the second row etc
[15:54:15] *** Joins: Mikaela (~sid12355@Feneas/Mikaela)
[15:54:58] <raxor2k> bjs: i cant see anything "writerows" in the link u gave me
[15:54:59] *** Joins: anarres_ (~thomas@89.44.10.71)
[15:55:07] <bjs> raxor2k: I didn't give you a link to writerows
[15:55:13] <bjs> so... you didn't read the docs for writerows?
[15:55:35] <Gurkenglas> of course i can just have two copies of the module definition for one run and do the migration manually, but that seems silly
[15:56:50] *** Quits: sa (sid1055@id-1055.tinside.irccloud.com) (Ping timeout: 272 seconds)
[15:56:57] *** Quits: anarres (~thomas@89.44.10.183) (Ping timeout: 248 seconds)
[15:57:37] <raxor2k> bjs: i read this yes: https://docs.python.org/3/library/csv.html
[15:57:49] *** Quits: Mikaela (~sid12355@Feneas/Mikaela) (Remote host closed the connection)
[15:58:11] *** Joins: Mikaela (~sid12355@Feneas/Mikaela)
[15:58:30] *** Joins: sa (sid1055@id-1055.tinside.irccloud.com)
[16:00:08] *** Quits: gggp (~textual@111.63.14.115) (Quit: My MacBook has gone to sleep. ZZZzzzâ€¦)
[16:00:19] <hogarius> raxor2k: did you make an effort to understand the parts about writerows()?
[16:01:11] *** Joins: FH_thecat (~FH_thecat@75.11.25.212.ftth.as8758.net)
[16:01:19] <raxor2k> hogarius: nope
[16:01:31] *** Joins: zamba (~marius@5.226.162.54)
[16:02:27] *** Quits: CoolerX (~CoolerX@user/coolerx) (Ping timeout: 250 seconds)
[16:02:34] <bjs> raxor2k: well, I gave you two functions (DataFrame.to_csv and csv.writerows) where either of them could solve your problem (and you had a third, a for loop with writerow).  if you don't make any effort to understand the solutions we suggest then what can we do ?
[16:03:26] <hogarius> raxor2k: whenever you read something, you should make an effort to understand what you are reading about.
[16:03:55] *** Joins: Ergo^ (~ergo@91.238.59.144)
[16:05:46] <raxor2k> bjs: thank you, works perfectly!
[16:05:49] <raxor2k> bjs for president <3
[16:06:01] *** Joins: brelod (~me@90.251.226.93)
[16:06:21] *** Quits: davincee (~da1dude@112.201.99.74) (Ping timeout: 250 seconds)
[16:09:16] *** Joins: betuxy (~ole@158.181.77.59)
[16:10:00] *** Joins: darksun (~darksun@user/darksun)
[16:10:30] *** Quits: roteiro (~roteiro@i5C758B02.versanet.de) (Quit: Client closed)
[16:10:49] *** Joins: zeden (~zeden@user/zeden)
[16:11:11] *** Joins: shangxiao (~davids@124.182.71.141)
[16:11:23] *** Joins: mIk3_08 (~Thunderbi@user/mik3-08/x-2852566)
[16:12:31] *** Quits: FH_thecat (~FH_thecat@75.11.25.212.ftth.as8758.net) (Quit: Leaving)
[16:12:35] *** Joins: p-i-_ (~Ohmu@2403:6200:8870:9971:38d4:7e6b:8ef4:4c19)
[16:14:05] *** Quits: daoudr (~daoudr@178.197.213.56) (Quit: Leaving)
[16:15:27] *** Quits: p-i- (~Ohmu@2403:6200:8870:9971:9cff:3c12:c6db:ef58) (Ping timeout: 250 seconds)
[16:15:27] *** Quits: darksun (~darksun@user/darksun) (Ping timeout: 240 seconds)
[16:15:39] *** Joins: rany (~rany@user/rany)
[16:15:57] *** Quits: nomic (~nomic@185.192.69.143) (Quit: Leaving)
[16:16:59] <f8e4> is there a way to simply strikethrough text; 'foo' becomse '---foo' overlayed of course
[16:17:19] <f8e4> print it strikethrough
[16:17:58] <The-Compiler> f8e4: where? In a terminal? Those typically don't support strikethrough text at all.
[16:18:03] <ssbr> f8e4: it's a neat thought, but modern TTYs don't work that way (only the old ones based on literal typewriters)
[16:18:17] <f8e4> https://stackoverflow.com/questions/25244454/python-create-strikethrough-strikeout-overstrike-string-type
[16:18:29] <ssbr> maybe https://en.wikipedia.org/wiki/Strikethrough#Combining_characters
[16:18:37] <ssbr> (h/t https://stackoverflow.com/questions/8357203/is-it-possible-to-display-text-in-a-console-with-a-strike-through-effect )
[16:18:53] *** Quits: zeden (~zeden@user/zeden) (Quit: WeeChat 3.0.1)
[16:18:56] <f8e4> i am using plotly dash so chromium html.Div
[16:19:32] <The-Compiler> huh, looks like this works in most terminals FWIW:  echo -e "\e[9mstrikethrough\e[0m"
[16:19:39] <f8e4> >>> print('\u0336'.join('foo') + '\u0336')
[16:20:10] <f8e4> but it is one off
[16:20:50] <The-Compiler> f8e4: with plotly dash you'd need to supply some custom HTML/CSS, if that's possible
[16:21:23] *** Joins: nomic (~nomic@185.192.69.143)
[16:21:58] *** Quits: anarres_ (~thomas@89.44.10.71) (Ping timeout: 252 seconds)
[16:22:55] <f8e4> true, ty
[16:23:53] *** Joins: daoudr (~daoudr@178.197.213.56)
[16:24:22] *** Joins: anarres (~thomas@89.44.10.87)
[16:25:06] *** Quits: daoudr (~daoudr@178.197.213.56) (Remote host closed the connection)
[16:25:38] <susam> Here is another alternative: print('foo'.replace('', '\u0336'))
[16:27:31] *** Joins: EgonX (~EgonX@2601:2c6:47f:9c18:b4bd:f749:71bd:3e8e)
[16:27:46] <The-Compiler> susam: heh, that's interesting (though it will have an extra combining character at the beginning of the line)
[16:29:11] <susam> The-Compiler: Oh yes, you are right. That explains why the strikethrough on the first characters appeared thicker to me.
[16:30:06] *** Joins: daoudr (~daoudr@178.197.213.56)
[16:31:28] *** Joins: godofsea (~dark@146.196.46.15)
[16:31:35] <godofsea> Hey
[16:31:49] <The-Compiler> godofsea: hey
[16:31:55] *** Quits: besnn (~besnn@user/besnn) (Ping timeout: 250 seconds)
[16:32:00] *** Quits: akspecs (~akspecs@165.227.127.54) (Changing host)
[16:32:00] *** Joins: akspecs (~akspecs@user/akspecs)
[16:33:40] <shangxiao> hey
[16:34:05] <godofsea>  I wanna import variables from a file, like file=/path/to/file_dir/, then import file
[16:34:32] <godofsea> Basically `import var`  How do I substitute the value of var
[16:34:38] *** Quits: raxor2k (~raxor2k@46.230.139.86) ()
[16:35:43] *** Joins: Skyfire (~pyon@user/pyon)
[16:36:01] *** Quits: supakeen (~user@python/site-packages/supakeen) (Quit: WeeChat 3.2)
[16:36:20] <godofsea> something like this https://bpa.st/L4XQ
[16:36:29] *** Joins: supakeen (~user@python/site-packages/supakeen)
[16:37:07] *** Joins: Naan (~naan@user/naan)
[16:38:04] *** Joins: Voxel (~Voxel@ip178-67-155-188.onego.ru)
[16:39:43] <grawity> I'd guess importlib.something_or_other(var)
[16:40:01] *** Joins: Diemuzi (~Diemuzi@ip68-106-203-17.pn.at.cox.net)
[16:40:13] <grawity> oh I think __import__() is still a thing, but I'm not sure which one is for what situation
[16:40:32] <Yhg1s> godofsea: you can't really import variables from a file. You can import the file as a module, but that has quite a few other effects. It is a _much_ better idea not to do this, and instead treat it as a configuration file. Using some other format besides Python code.
[16:40:34] <grawity> (tbh I'm not sure about importable config files in the first place)
[16:40:47] <jinsun> you can use runpy.run_path, but that will give you a dict not a module, you can convert the dict to types.SimpleNamespace which might be good enough
[16:41:14] *** Joins: pretty_dumm_guy (trottel@gateway/vpn/protonvpn/prettydummguy/x-88029655)
[16:41:27] *** Quits: betuxy (~ole@158.181.77.59) (Ping timeout: 250 seconds)
[16:41:37] *** Joins: nyah (~nyah@bcdcb6e3.skybroadband.com)
[16:41:55] <jinsun> but ya better would be to just use a better config format than .py files
[16:45:33] *** Joins: davor_ (~davor@user/davor)
[16:45:38] *** Quits: MikZyth (~MikZyth@188.65.242.95) (Quit: WeeChat 3.1)
[16:46:27] *** Quits: dontyouloveshort (~julius@2a02:8108:8100:18c4:3d26:df8c:7070:d838) (Ping timeout: 240 seconds)
[16:46:39] *** Quits: davor (~davor@user/davor) (Ping timeout: 250 seconds)
[16:47:11] *** Quits: EgonX (~EgonX@2601:2c6:47f:9c18:b4bd:f749:71bd:3e8e) (Quit: Textual IRC Client: www.textualapp.com)
[16:48:49] *** Joins: ogis_ (~Android@p1927250-omed01.osaka.ocn.ne.jp)
[16:49:00] *** Quits: daoudr (~daoudr@178.197.213.56) (Quit: Leaving)
[16:49:05] *** Joins: dontyouloveshort (~julius@2a02:8108:8100:18c4:3d26:df8c:7070:d838)
[16:49:25] *** Joins: zeden (~zeden@user/zeden)
[16:49:50] *** Joins: emika0 (~emika@83.136.182.145)
[16:50:07] *** Quits: emika (~emika@185.207.249.90) (Ping timeout: 250 seconds)
[16:50:07] *** emika0 is now known as emika
[16:51:40] *** Quits: ogis (~Android@p2037202-ipngn201011tokaisakaetozai.aichi.ocn.ne.jp) (Ping timeout: 252 seconds)
[16:52:04] *** Joins: gggp (~textual@60.10.194.43)
[16:52:48] *** Quits: Bronto22 (~mennoh@84-86-247-193.fixed.kpn.net) (Quit: Konversation terminated!)
[16:54:00] *** Joins: ncwbqcfe (~rvgzuuqp@gateway/tor-sasl/rvgzuuqp)
[16:56:10] *** Quits: gggp (~textual@60.10.194.43) (Client Quit)
[16:56:43] <Gurkenglas> colab shows sane diffs for jupyter notebooks but git doesn't, why?
[16:57:07] *** Quits: fikran (~fikran@user/fikran) (Ping timeout: 240 seconds)
[16:59:31] *** Joins: fikran (~fikran@user/fikran)
[17:00:21] *** Joins: DrSlony (~morgan@79.138.203.202.bredband.tre.se)
[17:00:58] *** Quits: ncwbqcfe (~rvgzuuqp@gateway/tor-sasl/rvgzuuqp) (Remote host closed the connection)
[17:01:39] *** Joins: ncwbqcfe (~rvgzuuqp@gateway/tor-sasl/rvgzuuqp)
[17:01:56] *** Quits: devcpu (~rusty@108.162.160.184) (Quit: leaving)
[17:03:18] *** Joins: sn1tch3r (~sn1tch3r@user/sn1tch3r)
[17:03:33] *** Quits: sn1tch3r (~sn1tch3r@user/sn1tch3r) (Remote host closed the connection)
[17:03:43] *** Joins: Archenfield (~textual@2405:6580:8e60:4600:4185:1800:95cb:e9a8)
[17:03:58] *** Joins: sn1tch3r (~sn1tch3r@user/sn1tch3r)
[17:04:57] *** Joins: besnn (~besnn@user/besnn)
[17:06:17] <DrSlony> Hello, I have a PDF417 barcode and a QR code that I'm trying to decode and parse. Both contain base64-encoded data, and some of it I can base64-decode, however some I cannot. Here is an example. I'm unfamiliar with the use of / and + characters, do they mean anything special? Can anyone make sense of this?
[17:06:19] <DrSlony> vew024FuI5EX0sNQIjZW7hLf+Rph6WCmRqFuEZ4F8bMUJ8SoJvdiWb3PkI3spF6957k8+UDR4KxhQ2+cTdB8Qa035wHOy2TFpHV1HqzcUod9v4vh+k/oc1fAH/84akVXKQE9gNovEySeF83fjywOQA==
[17:07:10] <grawity> they're just regular base64 characters
[17:07:23] <grawity> because a-z A-Z 0-9 is just 62 characters
[17:07:38] <grawity> so / and + are the last two
[17:07:45] *** Quits: anarres (~thomas@89.44.10.87) (Quit: leaving)
[17:07:48] <grawity> (usually; there are variants like urlsafe that use different ones.)
[17:08:26] *** Joins: Barones (~Barones@2804:7f3:8987:a56:1904:b84d:d454:b1fa)
[17:08:41] <Yhg1s> DrSlony: the base64 module should have no problem decoding that.
[17:08:44] <DrSlony> it still decodes to gibberish, I'm assuming if it was a file it would look like a file, i.e. have a header
[17:08:46] *** Joins: Payam (~Payam@c188-150-219-9.bredband.tele2.se)
[17:09:02] <Yhg1s> DrSlony: what kind of file did you expect it to be?
[17:09:08] <grawity> yeah I doubt that assumption
[17:09:09] <grawity> in several ways
[17:09:15] *** Joins: EgonX (~EgonX@2601:2c6:47f:9c18:719a:db9:6521:9338)
[17:09:21] <grawity> 1) there is no specific way that "a file" looks
[17:09:30] <grawity> different file formats can have very different headers
[17:09:52] <grawity> 2) many of those file formats have headers that *are* gibberish to a human -- packed binary fields, not text
[17:09:56] *** Joins: cthulchu (~Cthulchu@193.194.107.250)
[17:10:06] *** Quits: Payam (~Payam@c188-150-219-9.bredband.tele2.se) (Client Quit)
[17:10:34] <grawity> 3) if it comes from a Qr code, it's likely to be using a format that's as terse as possible, no wasting space for verbose text-based headers
[17:11:05] <grawity> and tbh 4) who says it has to be "a file" in the first place
[17:11:05] *** Quits: nomic (~nomic@185.192.69.143) (Quit: Leaving)
[17:12:09] *** Joins: darksun (~darksun@user/darksun)
[17:12:28] *** Joins: devcpu (~rusty@108.162.160.184)
[17:12:35] *** Quits: Metalsutton (~Metalsutt@101.100.153.131) (Quit: Leaving)
[17:12:35] *** Quits: stranac (~stranac@195.29.239.126) (Read error: Connection reset by peer)
[17:14:32] <InPhase> DrSlony: Is that the whole of the base64 data?
[17:14:41] *** Joins: ngaio (~ngaio@2601:245:c700:2c06:fd04:ccbb:f4a8:b7d2)
[17:15:29] *** Quits: scaleww (~scaleww@77-41-20-31.ftth.glasoperator.nl) (Quit: Leaving)
[17:15:56] <DrSlony> grawity: yes, different file formats have different headers, but in most cases you can still tell you're looking at a proper binary file and not gibberish
[17:16:36] *** Joins: aman (~aman@user/aman)
[17:16:37] <DrSlony> its true that this could be raw data without headers, to save space, but my bets are that something in the decoding process isn't right
[17:16:50] <grawity> no, there really is no guarantee for that
[17:17:10] <grawity> like an .mp3 file without ID3 tags really looks just like gibberish
[17:17:23] <grawity> where did you get the base64-encoded text from?
[17:17:29] *** Quits: darksun (~darksun@user/darksun) (Ping timeout: 248 seconds)
[17:17:32] <DrSlony> InPhase here is the full scanned QR code: https://paste.ee/p/znOlj
[17:17:44] *** Quits: damonlynch (~ngaio@2601:245:c700:2c06:fd04:ccbb:f4a8:b7d2) (Ping timeout: 250 seconds)
[17:17:48] <grawity> oh, a json api
[17:18:20] *** Quits: paulman (~kulernil@gateway/tor-sasl/kuler) (Remote host closed the connection)
[17:18:49] <grawity> how did you "scan" the code exactly?
[17:19:03] <grawity> like what tools did you use
[17:19:13] *** Quits: bitdex (~bitdex@gateway/tor-sasl/bitdex) (Quit: = "")
[17:19:58] <godofsea> grawity, Yhg1s I just want to load the variables, if .py is not the best way, what do you recommend ?
[17:20:06] *** Joins: nomic (~nomic@185.192.69.143)
[17:20:14] <Yhg1s> godofsea: either make it a regular module, or use a configuration file format instead.
[17:20:35] <DrSlony> the PDF417 scan contains fields separated by semicolons, each field appears to be base64 encoded, and the first few decode to plain text correctly, while the last few big fields decode to similar-looking gibberish to the QR code
[17:20:49] <DrSlony> the QR code is from a Kenyan ID, while the PDF417 is from an Ugandan ID
[17:20:54] <InPhase> DrSlony: Is there a reason to think this is anything other than encrypted data or a random value identifier?
[17:21:38] <DrSlony> grawity: I tested several apps and the python PDF417Decoder, all produce the same output
[17:21:52] <Yhg1s> DrSlony: they are bytes. You have to know how to interpret the bytes. If they're text in ASCII bytes, it's easy to see how to interpret them. If they're not, it's much harder.
[17:22:00] *** Quits: nomic (~nomic@185.192.69.143) (Client Quit)
[17:22:14] <grawity> so you're sure it's actually stored as base64 in the pdf417 code, and not only base64-encoded by the scanner for your convenience?
[17:22:50] <InPhase> DrSlony: The data is without apparent pattern and samples pretty uniformly from allowed byte values, which indicates to me random or encrypted is a strong potential explanation.
[17:22:54] <godofsea> Yhg1s, nahh regular module is not a good way in my case because, the reason I am using a loading from a file is the func takes multiple command line args and its harder to keep track of. So I am defining the args in a file and loading from there.
[17:23:08] *** Quits: mIk3_08 (~Thunderbi@user/mik3-08/x-2852566) (Quit: mIk3_08)
[17:23:15] <godofsea> what configuration file format ? json ?
[17:23:41] <DrSlony> InPhase: it wouldn't make sense to leave all personal data unencrypted while encrypting whatever that string contains, my assumption is they didn't encrypt anything. My guess is that if the cryptic string does not contain text, then its probably a fingerprint
[17:24:28] <InPhase> DrSlony: Identifiers can be encrypted values that are useful to the party holding the secret key.
[17:24:29] <grawity> I don't know what the cards look like, but maybe they left stuff unencrypted because it's printed on the same card already?
[17:24:43] <grawity> and encrypted stuff that *isn't* already visible on the card
[17:24:44] <DrSlony> grawity: its possible the scanners are fudging it for my (in)convenience, afaik they're all based on ZXing
[17:24:55] <Yhg1s> godofsea: if you want. There are many. JSON looks like Python code. There's also TOML, the configparser module, YAML, and many others.
[17:25:26] <grawity> tbh either way, I'm fairly sure that the issue is not base64
[17:25:34] <godofsea> TOML is nice.
[17:25:38] <DrSlony> InPhase: Kenya and Uganda are not known for their security.
[17:25:42] <grawity> base64 is so simple that it's hard to decode it "wrong"
[17:25:47] <InPhase> DrSlony: I am going with the possibility of encrypted simply because it is unusually long for a random value.
[17:26:14] *** Quits: godofsea (~dark@146.196.46.15) (Quit: Leaving)
[17:29:23] *** Quits: iflema (~ian@user/iflema) (Quit: iflema)
[17:30:01] *** Joins: kuler (~kulernil@gateway/tor-sasl/kuler)
[17:30:18] *** Joins: pycurious (~Adium@user/pycurious)
[17:33:06] *** Quits: kuler (~kulernil@gateway/tor-sasl/kuler) (Remote host closed the connection)
[17:33:40] *** Quits: dontyouloveshort (~julius@2a02:8108:8100:18c4:3d26:df8c:7070:d838) (Ping timeout: 240 seconds)
[17:34:20] *** Joins: kuler (~kulernil@gateway/tor-sasl/kuler)
[17:34:37] *** Quits: legola (~legola@46.235.100.27) (Remote host closed the connection)
[17:35:05] *** Joins: RangerBobVA (~bmaddox@user/rangerbobva)
[17:35:42] *** Joins: legola (~legola@46.235.100.27)
[17:37:43] *** Quits: legola (~legola@46.235.100.27) (Read error: Connection reset by peer)
[17:38:02] *** Quits: hendursa1 (~weechat@user/hendursaga) (Quit: hendursa1)
[17:38:08] *** Joins: legola (~legola@46.235.100.27)
[17:38:43] *** Joins: hendursaga (~weechat@user/hendursaga)
[17:41:18] *** Quits: deniska (~denis@user/deniska) (Remote host closed the connection)
[17:41:28] *** Joins: deniska (~denis@user/deniska)
[17:41:45] <Gurkenglas> Why does torch.nn.Linear only int as in/out_features?
[17:45:13] *** Quits: ano (~weechat@user/ano) (Ping timeout: 244 seconds)
[17:45:37] *** Joins: daoudr (~daoudr@2a02:1205:c681:1650:b8a5:6f9a:713a:9c12)
[17:45:51] *** Joins: PantelicGR (~PantelicG@user/pantelicgr)
[17:46:31] *** Quits: Voxel (~Voxel@ip178-67-155-188.onego.ru) (Ping timeout: 246 seconds)
[17:48:57] *** Quits: Cheaterman (~Cheaterma@user/cheaterman) (Ping timeout: 248 seconds)
[17:49:01] *** Quits: kuler (~kulernil@gateway/tor-sasl/kuler) (Remote host closed the connection)
[17:49:32] *** Joins: kuler (~kulernil@gateway/tor-sasl/kuler)
[17:51:59] *** Quits: p-i-_ (~Ohmu@2403:6200:8870:9971:38d4:7e6b:8ef4:4c19) (Remote host closed the connection)
[17:52:04] *** Joins: hendursa1 (~weechat@user/hendursaga)
[17:52:36] *** Joins: p-i- (~Ohmu@2403:6200:8870:9971:5cdf:1370:a050:fa37)
[17:52:58] *** Quits: hendursaga (~weechat@user/hendursaga) (Ping timeout: 244 seconds)
[17:53:06] *** Quits: heco (~redrum@user/redrum88) (Quit: Going offline, see ya! (www.adiirc.com))
[17:54:33] *** Joins: nomic (~nomic@185.192.69.143)
[17:55:02] *** Joins: Shikadi (~Shikadi@136-27-89-236.cab.webpass.net)
[17:55:06] *** Joins: Cheaterman (~Cheaterma@user/cheaterman)
[17:55:07] *** Quits: jack__d (~jack__d@pool-98-109-145-13.nwrknj.fios.verizon.net) (Ping timeout: 250 seconds)
[17:55:18] *** Quits: frost (~frost@59.71.240.119) (Quit: Connection closed)
[17:56:37] *** Quits: RangerBobVA (~bmaddox@user/rangerbobva) (Quit: Leaving)
[17:57:06] *** Joins: jack__d (~jack__d@pool-98-109-145-13.nwrknj.fios.verizon.net)
[17:57:20] *** Joins: ano (~weechat@user/ano)
[17:58:23] *** Joins: stkrdknmibalz (~test@rrcs-75-87-43-226.sw.biz.rr.com)
[17:58:46] *** Quits: Dantali0n (~Dantali0n@217-123-73-108.cable.dynamic.v4.ziggo.nl) (Ping timeout: 252 seconds)
[17:59:20] *** Quits: rakoon (~rakoon@2a02:2149:824f:5900:659d:f335:350b:b887) (Ping timeout: 250 seconds)
[17:59:41] *** Joins: Dantali0n (~Dantali0n@217-123-73-108.cable.dynamic.v4.ziggo.nl)
[17:59:52] *** Quits: stkrdknmibalz (~test@rrcs-75-87-43-226.sw.biz.rr.com) (Client Quit)
[17:59:56] *** Joins: jokoon (~eio@2a01:e0a:542:b20:9e9:bf1:b459:61ec)
[18:00:00] <jokoon> hello
[18:00:22] <jokoon> anybody using oauth as a python module?
[18:00:53] *** Joins: RangerBobVA (~bmaddox@user/rangerbobva)
[18:02:07] *** Joins: dld (~davidlowr@2601:197:600:1210:2dc5:f09c:7b2e:fda2)
[18:02:30] *** Quits: ayustae (Thunderbir@gateway/vpn/protonvpn/ayustae) (Quit: ayustae)
[18:02:54] *** Joins: akk (~akk@174-28-98-206.albq.qwest.net)
[18:06:46] *** Quits: aman (~aman@user/aman) (Quit: aman)
[18:08:40] *** Quits: Cheaterman (~Cheaterma@user/cheaterman) (Ping timeout: 240 seconds)
[18:09:15] *** Quits: Archenfield (~textual@2405:6580:8e60:4600:4185:1800:95cb:e9a8) (Quit: My MacBook Air has gone to sleep. ZZZzzzâ€¦)
[18:09:46] *** Quits: Noisytoot (~noisytoot@sourcehut/user/noisytoot) (Quit: ZNC 1.8.2 - https://znc.in)
[18:09:51] *** Joins: Hax0r (~Hax0r@46.38.93.176)
[18:10:19] *** Joins: CoolerX (~CoolerX@user/coolerx)
[18:12:00] *** Joins: Julian (~tos9@python/site-packages/Julian)
[18:12:01] *** Quits: manti7 (~manti7@176.10.104.94) (Ping timeout: 250 seconds)
[18:12:43] <Julian> How do I ask Python to fully calculate the full chain of chained exceptions?
[18:12:57] *** Quits: hendursa1 (~weechat@user/hendursaga) (Quit: hendursa1)
[18:13:06] <Julian> Or more specifically, how does one assert about the presence (or lack) of chained exceptions
[18:13:18] *** Joins: Archenfield (~textual@2405:6580:8e60:4600:4185:1800:95cb:e9a8)
[18:13:24] *** Joins: odoood (~odoood@2601:c8:c003:a550::7)
[18:14:27] <Julian> Aha, maybe (from grepping the test suite) it's "create a TracebackException object"
[18:16:40] *** Quits: c10l (~c10l@89.34.167.207) (Read error: Connection reset by peer)
[18:17:11] *** Joins: c10l (~c10l@89.34.167.207)
[18:17:30] *** Joins: betuxy (~ole@158.181.77.59)
[18:17:38] *** Joins: Noisytoot (~noisytoot@sourcehut/user/noisytoot)
[18:17:44] *** Joins: nomic2 (~nomic@185.217.117.169)
[18:18:27] *** Joins: raxor2k (~raxor2k@46.230.139.86)
[18:19:13] *** Joins: manti7 (~manti7@176.10.104.94)
[18:20:15] *** Quits: nomic (~nomic@185.192.69.143) (Ping timeout: 250 seconds)
[18:20:25] *** Joins: zln (~golluq@c80-217-230-193.bredband.tele2.se)
[18:21:11] *** Quits: daoudr (~daoudr@2a02:1205:c681:1650:b8a5:6f9a:713a:9c12) (Quit: Leaving)
[18:21:32] <zln> Hi, is it possible to convert a variable to bool in a f-string? like if var = 15, it should print Ture, False if empty or zero
[18:21:35] <zln> ?
[18:21:53] *** Quits: Archenfield (~textual@2405:6580:8e60:4600:4185:1800:95cb:e9a8) (Quit: My MacBook Air has gone to sleep. ZZZzzzâ€¦)
[18:22:04] <tpr> f"my {bool(var)}"
[18:22:44] <zln> tested that but didn't get result. Will check for errors, thanks
[18:23:14] <tpr> assuming by empty you mean None here
[18:23:22] <zln> btw, is this also possible if using "{0}".format(var) too?
[18:23:34] <tpr> although empty string will also return False here
[18:23:36] <SnoopJ> zln, you would have to do .format(bool(val)) there
[18:23:46] <zln> thanks!
[18:23:49] <SnoopJ> tpr, "empty" usually means a container with length zero
[18:24:07] *** Quits: amahl (~amahl@dsl-jklbng12-54fbca-64.dhcp.inet.fi) (Ping timeout: 240 seconds)
[18:24:10] <zln> I mean if a var is unset
[18:24:19] <zln> but it should give the desired output
[18:24:27] *** Joins: gitesh (uid423739@id-423739.charlton.irccloud.com)
[18:25:22] <tpr> SnoopJ: ah, I see. that'll work, too
[18:25:44] <SnoopJ> zln, that's substantially trickier and is usually a sign that your program is bending over backwards to get a task done. You can do `"var" in locals()` to see if `var` is defined and combine this with string formatting to get the result you're describing, but it's probably not the best 'solution'
[18:25:50] <tpr> zln: if it is unset, you'll get a NameError
[18:26:03] <rwbrambler> Hi, I'm having environment issues.  I'm on a windows server, I opened cmd as admin, and updated Flask, werkzeug, Flask-Babel etc... I can do Flask run and it is perfect.  However, when I try to run it in IIS, It seems to be running in a different environment.  I get import errors with Flask-Bable etc...  How do I make sure IIS is running in the right environment?
[18:26:46] <f8e4> good style or NO?: if a := float(b): blah
[18:26:46] *** Quits: ihristov (~ihristov@217.145.94.71) (Quit: Connection closed)
[18:27:12] <SnoopJ> f8e4, that is syntactically valid, but we can't say anything more about it out of context.
[18:27:27] *** Quits: lethu (~lethu@user/lethu) (Ping timeout: 240 seconds)
[18:27:32] *** Quits: sn1tch3r (~sn1tch3r@user/sn1tch3r) (Quit: Leaving)
[18:29:25] *** Joins: xheimlich (~xheimlich@179.218.1.150)
[18:29:34] <xheimlich> I need Numba help.
[18:29:50] <xheimlich> Numba is magic until it isn't, it's really baffling.
[18:30:01] *** Joins: lethu (~lethu@user/lethu)
[18:31:01] <xheimlich> https://bpa.st/HBEQ
[18:31:10] *** Quits: TonyStone (~TonyStone@2603-7080-8607-c36a-9cdb-69bc-753b-1e50.res6.spectrum.com) (Ping timeout: 240 seconds)
[18:31:28] *** Joins: plastico (~plastico@neomutt/plastico)
[18:32:29] <SnoopJ> xheimlich, what is your question?
[18:32:37] <xheimlich> ah, yes.
[18:32:42] *** Quits: Julian (~tos9@python/site-packages/Julian) (Ping timeout: 250 seconds)
[18:32:47] <xheimlich> this won't compile in nopython mode.
[18:32:55] <SnoopJ> do you get a compiler error?
[18:32:58] *** Quits: tm007 (uid287041@id-287041.highgate.irccloud.com) (Quit: Connection closed for inactivity)
[18:33:17] <xheimlich> but it's a veeery straightforward numpy operation.
[18:34:06] <xheimlich> I get warning messages about nopython mode being impossible and automatically switching to object mode. I'm trying to make a minimal reproducing thing as we speak.
[18:34:09] <SnoopJ> seems to compile with @jit(nopython=True) for me
[18:34:14] <SnoopJ> what version of Numba?
[18:34:14] <xheimlich> but generally speaking do you see any red flags?
[18:34:30] <xheimlich> eh, if there are no numba-specific red flags I may have problems elsewhere.
[18:34:59] <SnoopJ> you might. It's hard to get anywhere when only some of the clarifying questions are worth answering.
[18:35:28] *** Joins: zebrag (~chris@user/zebrag)
[18:35:41] <xheimlich> I have 0.53.1.
[18:35:57] <xheimlich> But again, it could be that the something that's calling it is not feeding it straight ndarrays.
[18:36:17] *** Quits: arinov (~arinov@213.194.126.155) (Ping timeout: 250 seconds)
[18:36:22] <xheimlich> I use an automl tool called Autogluon that has its own TabularDataset class/type that quacks like a dataframe but...
[18:36:27] *** Quits: Omega037 (~Omega037@047-024-168-024.res.spectrum.com) (Ping timeout: 240 seconds)
[18:36:29] *** Joins: hafat (~hafat@159.146.87.68)
[18:37:09] *** Quits: GenTooMan (~cyberman@2601:547:437f:e5c6:21f:5bff:fefe:a883) (Ping timeout: 250 seconds)
[18:37:10] *** Joins: aman (~aman@user/aman)
[18:37:19] *** Joins: Vornicus (~Vornicus@2603-8000-5d07-7ef0-514d-3b06-3b0d-5d8f.res6.spectrum.com)
[18:37:21] <SnoopJ> well, numba doesn't speak dataframe anyway, so even if it's quacking perfectly, that may not be enough to use nopython mode
[18:37:27] <xheimlich> Also autogluon is calling a bunch of libraries like lightgbm and xgboost which might have their own ideas too. I really thought I'd ask for obvious red flags.
[18:37:35] *** Joins: drd (~drd@93-39-151-19.ip76.fastwebnet.it)
[18:37:46] *** Joins: hendursaga (~weechat@user/hendursaga)
[18:37:52] *** Quits: DnzAtWrk (~DnzAtWrk@mobile-access-56739f-227.dhcp.inet.fi) (Read error: Connection reset by peer)
[18:38:02] <xheimlich> like that would help me learn some more numba as well. As it is, object mode is sufferable. Thanks for your time!
[18:38:12] <SnoopJ> no obvious red flags in the part of the code we can see
[18:38:18] <xheimlich> thanks!
[18:38:33] *** Joins: GenTooMan (~cyberman@2601:547:437f:e5c6:21f:5bff:fefe:a883)
[18:38:44] *** Quits: decimuscorvinus (~jimmy@136.37.105.112) (Quit: Will return)
[18:39:05] *** Joins: Omega037 (~Omega037@047-024-168-024.res.spectrum.com)
[18:39:59] *** Joins: fassl (~fassl@2a02:8388:1987:9380:c4ee:81c5:625a:a215)
[18:40:30] *** Quits: falk689 (~falk689-q@gateway/tor-sasl/falk689) (Ping timeout: 244 seconds)
[18:40:45] *** Joins: falk689 (~falk689-q@gateway/tor-sasl/falk689)
[18:41:40] <raxor2k> this is awkard, but i have no other options than asking for help here, how can i iterate inside a dict and find same values and add them together? https://bpa.st/IA3Q
[18:41:44] *** nomic2 is now known as nomic
[18:42:39] <bjs> raxor2k: make another dict with the exercise_ID  as the key
[18:43:07] <raxor2k> bjs: easier said than done
[18:43:20] <bjs> raxor2k: why do you say that
[18:43:25] <nomic> way to get size of o bject in bytes or megabytes from pdb?
[18:43:39] *** Quits: GenTooMan (~cyberman@2601:547:437f:e5c6:21f:5bff:fefe:a883) (Ping timeout: 250 seconds)
[18:43:42] <bjs> nomic: using sys.getsizeof,  but this number probably doesn't mean as much as you think it does
[18:43:58] *** Joins: TonyStone31 (~TonyStone@2603-7080-8607-c36a-9cdb-69bc-753b-1e50.res6.spectrum.com)
[18:44:02] *** Quits: legola (~legola@46.235.100.27) (Remote host closed the connection)
[18:44:10] *** Joins: mefistofeles (~mefistofe@user/mefistofeles)
[18:44:26] *** Quits: winterflaw (~winterfla@gateway/tor-sasl/winterflaw) (Remote host closed the connection)
[18:44:43] *** Joins: GenTooMan (~cyberman@2601:547:437f:e5c6:21f:5bff:fefe:a883)
[18:44:59] <raxor2k> bjs: because im back to square 1 again : https://bpa.st/J4IA
[18:45:05] *** Joins: legola (~legola@46.235.100.27)
[18:45:09] <raxor2k> i need to somehow to in, add the points inside each exercise
[18:45:45] <bjs> raxor2k: it's not very hard https://bpa.st/PMPQ
[18:46:16] *** Quits: Rothschild666 (~Rothschil@c-69-249-29-95.hsd1.pa.comcast.net) ()
[18:46:39] <raxor2k> bjs: its not hard, thats why its awkard to ask
[18:47:07] <bjs> raxor2k: it's okay to ask,  so long as you've had a go and show us the attempt you made we can see  where you're stuck and help from there
[18:47:08] <f8e4> cool: >>> 'a-a'.isalpha()
[18:47:21] <jean-luc>  wow code done as well
[18:47:26] <jean-luc> nice spoon feeding
[18:47:45] *** Joins: gggp (~textual@60.10.194.43)
[18:47:46] <The-Compiler> nomic: pympler can help with that, https://pythonhosted.org/Pympler/index.html
[18:48:03] *** Quits: gggp (~textual@60.10.194.43) (Client Quit)
[18:48:13] <The-Compiler> f8e4: huh?
[18:48:16] <nomic> ok thanks
[18:48:17] <bjs> jean-luc: I'm sure the one thing raxor2k won't be accusing me of is spoon feeding them solutions
[18:48:27] *** Joins: Julian (~tos9@python/site-packages/Julian)
[18:48:59] *** Joins: azidhaka (~azidhaka@user/azidhaka)
[18:49:41] *** Joins: qlixed (~qlixed@181.44.129.13)
[18:49:55] *** Quits: legola (~legola@46.235.100.27) (Ping timeout: 252 seconds)
[18:50:19] <raxor2k> bjs: thanks! it worked
[18:50:28] <raxor2k> bjs  F O R   P R E S I D E NT T
[18:50:31] *** Joins: Cheaterman (~Cheaterma@user/cheaterman)
[18:50:31] *** Quits: nomic (~nomic@185.217.117.169) (Quit: Leaving)
[18:50:48] *** Joins: nomic (~nomic@185.217.117.169)
[18:52:20] *** Joins: TJ- (~root@2a01:7e00:e001:ee00:fa75:a4ff:fef3:42b4)
[18:52:31] <f8e4> The-Compiler quick a-z check; cool
[18:53:40] <The-Compiler> f8e4: ah :) Not just a-z it seems, but other alphabetic unicode characters too
[18:53:53] *** Joins: decimuscorvinus (~jimmy@136.37.105.112)
[18:54:26] *** Quits: ogis_ (~Android@p1927250-omed01.osaka.ocn.ne.jp) (Read error: Connection reset by peer)
[18:54:59] *** Quits: Xeago (~Xeago@user/xeago) (Ping timeout: 252 seconds)
[18:55:47] *** Quits: drd (~drd@93-39-151-19.ip76.fastwebnet.it) (Ping timeout: 240 seconds)
[18:56:41] *** Joins: arinov (~arinov@178.240.152.159)
[18:57:05] *** Quits: gambl0re (~gambl0re@104.247.245.205) (Ping timeout: 250 seconds)
[18:57:17] *** Quits: adanwan (~adanwan@gateway/tor-sasl/adanwan) (Remote host closed the connection)
[18:57:34] *** Quits: decimuscorvinus (~jimmy@136.37.105.112) (Client Quit)
[18:57:36] *** Joins: adanwan (~adanwan@gateway/tor-sasl/adanwan)
[18:57:37] *** Quits: besnn (~besnn@user/besnn) (Ping timeout: 252 seconds)
[18:57:43] *** Joins: ogis (~Android@240d:1c:3d:9500:c57d:fb6f:b32f:7cd7)
[18:58:35] *** Quits: aphysically (~aphysical@user/aphysically) (Quit: aphysically)
[18:58:38] *** Joins: Sheilong (uid293653@id-293653.charlton.irccloud.com)
[19:00:04] *** Joins: Xeago (~Xeago@user/xeago)
[19:01:01] *** Joins: Xaldafax (~xaldafax@cpe-198-72-160-101.socal.res.rr.com)
[19:01:10] *** Quits: azidhaka (~azidhaka@user/azidhaka) (Quit: azidhaka)
[19:01:11] *** Joins: blingrang (~blingrang@user/blingrang)
[19:01:44] *** Joins: winterflaw (~winterfla@gateway/tor-sasl/winterflaw)
[19:01:48] *** Joins: gambl0re (~gambl0re@104.247.245.205)
[19:02:01] *** Quits: hafat (~hafat@159.146.87.68) (Remote host closed the connection)
[19:02:04] *** Joins: djapo (~archangel@user/djapo)
[19:02:19] <zln> is it possible to create a local var in an print statement to get input and then print it? I've tried this: print (f"{int(my_int = input('Enter an int: '))} You entered: {my_int}") but I get runtime error "my_int" is an invalid keyword argument for int()
[19:03:11] *** Quits: ncwbqcfe (~rvgzuuqp@gateway/tor-sasl/rvgzuuqp) (Quit: ncwbqcfe)
[19:03:52] <nedbat> zln: it might work if you use := instead of =, but this seems overly crowded
[19:04:12] <bjs> zln: Python isn't really designed for one-liner programming
[19:04:24] <bjs> it makes doing things on the same line really painful and/or ugly
[19:04:29] <grym> zln: print (f"{int(my_int := input('Enter an int: '))}"), but gaaaah no
[19:04:39] <zln> nedbat: yes I know. It's not valid as an production code as you observed it. Just playing with boundries
[19:04:42] <grym> (and in that instance, my_int is in fact assigned to a string :) )
[19:05:13] <zln> grym: is it assigned to string?
[19:05:22] <bjs> zln: but otherwise, `print((lambda my_int: f"You entered {int(my_int)}")(input("Enter an int: "))` :)
[19:05:24] <grym> zln: that's what i just said, yes
[19:05:27] *** Quits: blingrang (~blingrang@user/blingrang) (Ping timeout: 240 seconds)
[19:05:40] *** Joins: decimuscorvinus (~jimmy@136.37.105.112)
[19:06:09] <bjs> uh maybe I put too many closing parens,  or no too few
[19:06:14] <zln> grym: I know, I wondered if you could elaborate it :)
[19:06:17] <bjs> well either way there's the wrong number of them :P
[19:06:25] <zln> bjs: :D
[19:06:36] <zln> thanks, I'll sort it out
[19:06:37] *** Quits: fikran (~fikran@user/fikran) (Ping timeout: 250 seconds)
[19:07:20] <grym> zln: after that statement, type(my_int)==str
[19:07:24] <bjs> zln: when "one-linerizing" a program it's common to turn `x = 1; <something with x>` into some fancy `imaginary-let x=1 in <something with x>` which is roughly `(lambda x: <something with x>)(1)`
[19:07:43] *** Quits: herjazz (~herjazz@p6758124-ipngn30801marunouchi.tokyo.ocn.ne.jp) (Quit: leaving)
[19:07:51] *** Quits: decimuscorvinus (~jimmy@136.37.105.112) (Client Quit)
[19:07:59] *** Joins: montybanksnyc (~montybank@pool-71-127-199-18.nwrknj.fios.verizon.net)
[19:08:24] *** Joins: decimuscorvinus (~jimmy@136.37.105.112)
[19:08:51] *** Joins: blingrang (~blingrang@user/blingrang)
[19:08:54] *** Joins: fikran (~fikran@user/fikran)
[19:09:49] <zln> grym: yes that's right. How come?
[19:10:02] *** Joins: oz4ga (~tim@93.90.4.233)
[19:10:10] *** Quits: dulanic (~dulanic@47.187.144.163) (Read error: Connection reset by peer)
[19:10:48] *** Joins: srhm (~srhm@user/srhm)
[19:11:00] <grym> zln: well, read the code.  where does the assignment happen?
[19:11:07] <grym> (inside the int(), so int() is never seen)
[19:11:33] <zln> grym: that's right :D :D
[19:11:44] <zln> sorry, my first day trying to learn
[19:12:21] *** Joins: dulanic (~dulanic@47.187.144.163)
[19:12:27] *** Joins: LiftLeft (~LiftLeft@216-26-118-34.dynamic.nelson.airstreamcomm.net)
[19:12:36] *** Quits: Hax0r (~Hax0r@46.38.93.176) (Quit: Leaving)
[19:12:46] <raxor2k> bjs: now i have another problem
[19:13:13] <bjs> raxor2k: which is?
[19:13:21] *** Joins: darksun (~darksun@user/darksun)
[19:13:58] <raxor2k> the first example i showed did only grab "secondary_points" from db, which worked, but now that i also grab "primary_points", meaning that the dict updates so the secondary_points dissappear
[19:14:17] *** Quits: philectro (~quassel@2a02:2788:9a4:9f0:862b:c19b:5df2:c0a) (Quit: https://quassel-irc.org - Chat comfortably. Anywhere.)
[19:14:21] <bjs> raxor2k: which example?
[19:14:21] *** Quits: wereii (~wereii@2a03:3b40:fe:4f::1) (Quit: ZNC - https://znc.in)
[19:14:57] *** Quits: decimuscorvinus (~jimmy@136.37.105.112) (Quit: Will return)
[19:14:57] <raxor2k> bjs: https://bpa.st/VGWQ
[19:15:35] *** Quits: milkt (~debian@gateway/tor-sasl/milkt) (Remote host closed the connection)
[19:15:38] *** Joins: decimuscorvinus (~jimmy@136.37.105.112)
[19:16:14] <bjs> raxor2k: disappear?
[19:17:20] *** Quits: decimuscorvinus (~jimmy@136.37.105.112) (Client Quit)
[19:17:21] <raxor2k> not dissappear but overwrited
[19:17:38] <bjs> raxor2k: overwritten by what
[19:17:53] *** Joins: decimuscorvinus (~jimmy@136.37.105.112)
[19:18:13] <zln> sorry for rookie questions, it says f-string expects '}' at the last paren but I cannot see why:  print (f"{my_int = int(input('Enter an int: '))} You entered: {my_int} {type(my_int)}")
[19:18:15] *** Quits: decimuscorvinus (~jimmy@136.37.105.112) (Client Quit)
[19:18:44] *** Joins: vd (~vd@bras-base-mtrlpq2848w-grc-41-70-53-240-121.dsl.bell.ca)
[19:18:47] *** Quits: darksun (~darksun@user/darksun) (Ping timeout: 240 seconds)
[19:18:52] <Pilate> why are you doing assignment in an f string
[19:19:06] *** Joins: dontyouloveshort (~julius@2a02:8108:8100:18c4:3d26:df8c:7070:d838)
[19:19:09] <zln> Pilate: just testing
[19:19:13] *** Joins: decimuscorvinus (~jimmy@136.37.105.112)
[19:19:31] *** Joins: wereii (~wereii@2a03:3b40:fe:4f::1)
[19:19:34] <bjs> zln: you need to use := and wrap the assignment expression in parens
[19:19:45] <grym> zln: print(f"{}")
[19:19:50] <grym> zln: you're missing the ending " and )
[19:20:10] *** Quits: mat001 (~mat001@c-73-223-64-126.hsd1.ca.comcast.net) (Ping timeout: 252 seconds)
[19:20:12] <xheimlich> shouldn't the assignment in his f-string evaluate to None, though?
[19:20:15] <grym> " ends the string, ) ends the print
[19:20:27] <grym> xheimlich: it needs a walrus
[19:20:39] <xheimlich> to evaluate to None?
[19:20:44] <bjs> xheimlich: well = isn't an expression and doesn't evaluate to anything at all. I think zln meant to use :=
[19:20:54] *** Quits: srhm (~srhm@user/srhm) (Quit: Konversation terminated!)
[19:21:12] <bjs> raxor2k: do you actually understand what my code was doing and how it works?
[19:21:18] *** Joins: srhm (~srhm@user/srhm)
[19:21:29] <bjs> raxor2k: you should be able to take it and make it do what you need
[19:21:31] <xheimlich> I'll never get the point of the walrus operator. But there are better things to do than rekindle these
[19:21:34] <raxor2k> bjs: now i need it like this : https://bpa.st/UB6A
[19:21:47] <raxor2k> same as you did but with the primary_group as well
[19:22:02] <bjs> raxor2k: I am sure you can figure out how to take my code that adds up only 1 field for unique exercise_ID and make it add up two fields instead
[19:22:07] *** Joins: milkt (~debian@gateway/tor-sasl/milkt)
[19:22:10] *** Quits: cheater (~Username@user/cheater) (Quit: BitchX: the Cadillac of all clients)
[19:22:16] <raxor2k> bjs: i will figure it out
[19:22:20] <raxor2k> trust me
[19:22:23] <xheimlich> raxor2k: no pain, no gain.
[19:22:42] <bjs> xheimlich: I mean the point is to do things like `if m := re.search(..): use m`
[19:23:25] <bjs> That particular case was compelling enough for enough people that it was added to the language
[19:23:26] <xheimlich> I feel like it's making up for the lack of a let context.
[19:23:30] <zln> bjs wrapping in parens worked nice, thanks
[19:23:45] <grym> xheimlich: python spells let `def` :)
[19:23:45] <SnoopJ> xheimlich, the 'point' is to perform an assignment in an expr. Whether or not that's something you want to do is a matter of personal aesthetics
[19:23:53] *** Quits: betuxy (~ole@158.181.77.59) (Ping timeout: 248 seconds)
[19:23:58] <bjs> zln: what do you mean by "let context"
[19:24:19] <grym> xheimlich: or said another way, let is what happens when you decide all the world's a global and then realise how weird that makes your life
[19:24:29] <bjs> oops sorry zln
[19:24:32] <bjs> xheimlich: what do you mean by "let context"
[19:24:36] <zln> np  :)
[19:24:47] <bjs> zln: sure,  := is a bit weird and needs parens in some places for precedence reasons
[19:24:48] *** Quits: rany (~rany@user/rany) (Quit: ZNC 1.8.2+deb2+b1 - https://znc.in)
[19:25:04] <bjs> zln: but really doing := inside an f-string is not good
[19:25:11] <xheimlich> well, grym is right that python spells "let" as "def".
[19:25:29] <bjs> well not really, `let` in other languages is generally a lot more than just `def`
[19:25:34] <zln> ah it's precedence that's ghosting.. I see, I'll check error output prior to parens
[19:25:40] <grym> i'm being somewhat glib
[19:25:45] <grym> hopefully not through ignorance :)
[19:25:46] <bjs> but yes
[19:25:51] <xheimlich> def f(x): m=re.search(...); use(m);   makes sense with how python has always been.
[19:26:02] <xheimlich> functions and classes scope temporary variables.
[19:26:22] <bjs> xheimlich: uh I think the `def f(m): use m` and then `f(re.search(...))` is the way you'd spell it if you wanted to pretend def was let
[19:26:42] <xheimlich> yeah.
[19:27:03] <xheimlich> what I mean is -- the point of walrus expressions seems to be not to litter the global namespace with temporary variables.
[19:27:11] <bjs> but := is basically let (it's just not `let ... in ...`) although the latter doesn't really help either.
[19:27:14] <bjs> xheimlich: no that's not the point
[19:27:20] <bjs> xheimlich: := doesn't introduce new scopes at all
[19:27:32] <SnoopJ> xheimlich, there is no semantic difference in the assignment, it is just an assignment that works in an expr
[19:27:37] *** Joins: drd (~drd@2001:b07:a70:9f1f:1562:34de:f50f:77d4)
[19:27:42] <bjs> xheimlich: `if m := re.search(...)` just means you don't have to write `m = re.search(...) <newline> if m:`
[19:27:43] <xheimlich> then I don't understand :=. c'est trop compliquÃ©.
[19:27:48] *** Joins: rany (~rany@user/rany)
[19:27:54] <bjs> xheimlich: it's so you can write `if m := re.search(...)`  that's it
[19:28:04] <SnoopJ> `foo := bar` does exactly what `foo = bar` does, but can be used in more places, basically
[19:28:17] <grym> or while x:=thing_that_becomes_truthy_or_falsy()
[19:28:34] <SnoopJ> it's an expression with the side effect of binding the name, if you want to think of it that way
[19:28:50] *** Joins: cheater (~Username@user/cheater)
[19:28:51] *** Joins: Fedorasan (~fedorasan@user/fedorasan)
[19:28:58] *** Quits: Jigsy (~Jigsy@user/jigsy) (Ping timeout: 252 seconds)
[19:29:10] <xheimlich> it's less useful than I thought it was, even. but eh, dead horse.
[19:29:20] * SnoopJ taps the "personal aesthetics" sign
[19:29:20] *** Joins: hnOsmium0001 (uid453710@id-453710.stonehaven.irccloud.com)
[19:29:28] *** Quits: kosh (~kosh@user/kosh) (Ping timeout: 250 seconds)
[19:29:43] <xheimlich> yeah, but remember perl's "there's more than one way to do it?"
[19:29:45] <bjs> xheimlich: possibly, it's not there to be "useful" because we already had =, it's there to make some very common patterns look slightly nicer
[19:30:16] <xheimlich> and the whole import this thing?
[19:30:24] <grym> xheimlich: a language designed by a linguist to have jargon. yaaaaaaay
[19:30:31] *** Quits: djhankb (~djhankb@208.113.164.68) (Remote host closed the connection)
[19:30:55] <xheimlich> perl? I know, Python is supposed to be *aesthetically* different.
[19:30:58] <bjs> xheimlich: and if/elif blocks with regex matching is one case that seemed the most compelling
[19:31:04] * SnoopJ has lost the plot entirely
[19:31:04] *** Joins: djhankb (~djhankb@208.113.164.68)
[19:31:30] *** Quits: srhm (~srhm@user/srhm) (Read error: Connection reset by peer)
[19:31:43] <xheimlich> "Sparse is better than dense. Special cases aren't special enough to break the rules. There should be one -- and preferrably only one way to do it."
[19:32:06] <SnoopJ> alas, the zen is a dreadful description of the language
[19:32:11] *** Joins: srhm (~srhm@user/srhm)
[19:32:16] *** Quits: NoImNotNineVolt (~fdsa@c-73-248-207-98.hsd1.nj.comcast.net) (Ping timeout: 252 seconds)
[19:32:38] <bjs> it's poetry and while nice is not a guiding principle in practice
[19:32:39] *** Quits: jokoon (~eio@2a01:e0a:542:b20:9e9:bf1:b459:61ec) (Quit: Leaving)
[19:32:44] *** Quits: DrSlony (~morgan@79.138.203.202.bredband.tre.se) ()
[19:32:56] *** Quits: RangerBobVA (~bmaddox@user/rangerbobva) (Quit: Leaving)
[19:33:01] <xheimlich> anyway, I'm just twiddling my thumbs while model is refitting.
[19:33:45] <grym> let us meditate now upon 'should' vs 'are', vis a vis david hume ... :)
[19:34:32] <xheimlich> yeah. but programming language design is both explicitly and tacitly normative.
[19:34:44] <grym> no debate there
[19:34:49] <xheimlich> some things you can't do, some things are made harder.
[19:35:01] *** Quits: CoolerX (~CoolerX@user/coolerx) (Ping timeout: 252 seconds)
[19:35:06] <xheimlich> on some abstract level the space of all computation is an "is".
[19:35:13] <SnoopJ> one thing you can do in Python is bind a name in an expression
[19:35:29] <grym> it seems that the meta-norm is "wouldn't it be nice if there was one true way, but in the meantime here are the competing 12 ways in practice that approach that platonic goal"
[19:35:29] <xheimlich> even without subscribing to an overt mathematical platonism.
[19:35:45] *** Joins: Jigsy (~Jigsy@user/jigsy)
[19:35:51] <xheimlich> I guess the relevant meditation is on the ship of theseus.
[19:35:59] *** Parts: SnoopJ (~snoopj@user/snoopj) ("Inside every cynical person is a disappointed idealist" - George Carlin)
[19:36:12] *** Quits: rwbrambler (~Thunderbi@65.183.138.202) (Quit: rwbrambler)
[19:36:25] <xheimlich> people rail about, eg systemd, because it appears to be a break with what they understood to be the holistic effect of the thing before.
[19:38:19] *** Quits: oskaro (~Thunderbi@213.236.200.7) (Quit: oskaro)
[19:38:30] *** Quits: dcaro (~dcaro@user/dcaro) (Remote host closed the connection)
[19:39:03] *** Joins: dcaro (~dcaro@user/dcaro)
[19:39:07] *** Quits: p4rpc (~p4rpc@89-69-17-47.dynamic.chello.pl) (Ping timeout: 250 seconds)
[19:39:08] <xheimlich> crap, has my model fit crashed?
[19:39:27] *** Quits: Barones (~Barones@2804:7f3:8987:a56:1904:b84d:d454:b1fa) (Ping timeout: 240 seconds)
[19:39:48] *** Joins: ofbeaton (~ofbeaton@23-233-30-16.cpe.pppoe.ca)
[19:41:10] <xheimlich> well, while I'm here. Is there a channel where I can discuss like social factors about dealing with developers and similar organisms?
[19:41:25] <grym> #python-offtopic, possibly
[19:41:36] *** Joins: Leonarbro_ (~Leonet@user/leonarbro)
[19:41:42] <ofbeaton> I wanted to use python-box to wrap my dictionaries, it takes the dict as input. But if my method takes a Box object, how do I then specify the static type for the dict it contains? I can't seem to find out how from the packages documentation, so I assume there is a standard way to accomplish this? By static type I mean PEP 589 for static types for
[19:41:42] <ofbeaton> dicts.
[19:42:03] *** Joins: CatCow (~wtf_over@c-73-96-109-206.hsd1.or.comcast.net)
[19:43:29] <gitesh> "For example, github redirects all requests using http to the corresponding page using https (the secure http protocol)."
[19:43:46] <gitesh> when I am using requests.get(github url in http)
[19:43:53] *** Quits: raxor2k (~raxor2k@46.230.139.86) (Ping timeout: 250 seconds)
[19:44:11] <gitesh> It is giving me back 2 Response object rather than one in it's .history
[19:44:37] <f8e4> how to ship the audio with the .whl ?: from playsound import playsound playsound('audio.mp3')
[19:44:51] <gitesh> so I was curious what is the use of first object where object.url is just "" empty string
[19:44:54] <f8e4> install pip local is ok since i have abvsolute path; but remote not
[19:45:13] *** Quits: Leonarbro (~Leonet@user/leonarbro) (Ping timeout: 248 seconds)
[19:45:22] <The-Compiler> ofbeaton: looks like box has typing support so you can annotate things as Box[K, V] I think
[19:46:01] <bjs> gitesh: its url is the empty string?
[19:46:20] *** Quits: enrico (~enrico@debian/enrico) (Remote host closed the connection)
[19:46:22] <gitesh> bjs: yes
[19:46:31] <bjs> gitesh: I mean what you say about github would imply you get two responses: the first redirecting you to https, and then the second with the contents of the https url
[19:47:03] <ofbeaton> The-Compiler: do you know what the syntax looks like for static typing though?
[19:47:20] <gitesh> bjs: "The .history attribute contains a list of previous responses, if there were redirects."
[19:47:25] *** Joins: aeon_flux (~textual@d-216-189-175-197.fl.cpe.atlanticbb.net)
[19:47:35] <bjs> gitesh: yes, your very first comment says that github redirects to https
[19:47:39] <gitesh> bjs: it give 2 object
[19:47:39] *** Quits: rexbinary (~rexbinary@user/rexbinary) (Ping timeout: 258 seconds)
[19:47:41] <bjs> so you'd expect to see something in history yes?
[19:47:49] <bjs> gitesh: okay what's your question?  I'm not sure I understand what you're asking
[19:47:54] <The-Compiler> ofbeaton: I don't understand the question
[19:48:01] <aeon_flux> https://cpy.pt/nYsbCSwy   what is happening here? are these vars being typed?
[19:48:44] *** Quits: YuGiOhJCJ (~YuGiOhJCJ@gateway/tor-sasl/yugiohjcj) (Quit: YuGiOhJCJ)
[19:48:46] <bjs> aeon_flux: which vars?  but that looks like typical syntax to annotate a variable with a type yes
[19:48:50] <nedbat> aeon_flux: this is with FastAPI?
[19:48:58] <ofbeaton> The-Compiler: PEP 589 describes how to specify what static strings are within a dict, a static type dict definition, using `TypedDict`. If I have a Box argument to a method, how do I use my TypedDict definition on it?
[19:48:58] <aeon_flux> i've never seen this syntax before
[19:49:10] <aeon_flux> why would you do this?
[19:49:15] <nedbat> aeon_flux: those are type annotations
[19:49:16] *** Joins: twinsignal (~twinsigna@68.235.43.52)
[19:49:20] <aeon_flux> i guess i've never seen declarations like this before
[19:49:48] *** Joins: xaltsc (~xaltsc@user/xaltsc)
[19:49:54] *** Quits: aman (~aman@user/aman) (Quit: aman)
[19:49:58] <The-Compiler> ofbeaton: it doesn't look like Box supports TypedDict annotations. But at that point, why not dataclasses/attrs instead?
[19:49:59] <aeon_flux> i'd seen them in functions but never just ... outside of them
[19:50:20] <bjs> aeon_flux: if you put them in a `class` it's usually interpreted as the type of the instance variable
[19:50:31] *** Joins: rexbinary (~rexbinary@user/rexbinary)
[19:50:32] <aeon_flux> it's not required, just a helpful best practice?
[19:50:44] <bjs> aeon_flux: well some libraries read them and do things with them
[19:50:49] *** Quits: very_sneaky (~very_snea@user/very-sneaky/x-7432109) (Ping timeout: 250 seconds)
[19:50:54] *** Quits: lifefir3 (~lifefir3@152.37.120.101) (Quit: The Lounge - https://thelounge.chat)
[19:51:13] <aeon_flux> cool, thank you
[19:51:27] <bjs> aeon_flux: so... they're not required in the same way that functions and variables aren't required,  you can write classes without them but some libraries expect them (e.g. FastAPI/pydantic)
[19:51:32] <ofbeaton> The-Compiler ah, I was hoping it did. Thank you for the help groking all this, I'm pretty new only a week in. I was using Box because of the convenience of the dot annotation and nested dict conversion, and that it allowed dict syntax as well. I guess I'll have to reimplement it all by hand instead.
[19:51:36] *** Joins: thiras (~thiras@user/thiras)
[19:51:42] <aeon_flux> interesting
[19:51:51] <aeon_flux> it's more readable to define them in the body of the class rather than in the () area?
[19:51:54] <bjs> aeon_flux: note that Python itself just ignores them,  it's purely annotations for libraries and toools
[19:52:00] <f8e4> folks how to add foo.mp3 to the setup.cfg to include into the bin.wheel; i have placed it into ..src/mypkg/data/foo.mp3; but it aint in .tar nor .whl; please help
[19:52:12] <bjs> aeon_flux: I don't know what you mean by the "the () area"
[19:52:35] <aeon_flux> class Base(here):
[19:52:36] <ofbeaton> The-Compiler if I made my method accept a TypedDict, then converted the dict to a Box, that would work... but is converting back and forth between these types of objects really slow?
[19:52:50] <jinsun> f8e4: https://setuptools.readthedocs.io/en/latest/userguide/datafiles.html
[19:52:52] <aeon_flux> here: def greeting(name: str) -> str:
[19:53:00] <bjs> aeon_flux: in a `class` statement the stuff in the brackets aren't attributes, so you can't put them there
[19:53:05] <aeon_flux> ahhh
[19:53:07] <aeon_flux> i didn't realize that
[19:53:27] *** Joins: betuxy (~ole@158.181.77.59)
[19:53:43] <aeon_flux> thank you this has been very helpful!
[19:53:47] <The-Compiler> ofbeaton: it really sounds to me like dataclasses/attrs would be a better fit
[19:53:58] <ofbeaton> The-Compiler okay, thank you.
[19:55:42] <bjs> gitesh: you said there were 2 things in the history?  can you show me what you were seeing?  like a bpaste or something
[19:57:21] <bjs> gitesh: the response objects should contain the info to tell you what happened and what redirects there were.
[19:58:10] *** Quits: odoood (~odoood@2601:c8:c003:a550::7) (Ping timeout: 240 seconds)
[19:58:13] <f8e4> jinsun: Nice ty; use pkgutil or pkg_resource folks?
[19:58:51] <gitesh> bjs: https://bpa.st/ZNDQ
[19:59:28] *** Joins: LucaTM (~LucaTM@user/lucatm)
[19:59:32] *** Joins: Seiryuu (~Seiryuu@ip174-103-176-143.adsl2.static.versatel.nl)
[19:59:44] <bjs> gitesh: if I just go to that webpage I end up at https://github.com/presnick/RunestoneServer
[20:00:08] <bjs> gitesh: what are the .url's of each of those two Response objects?
[20:01:36] <bjs> gitesh: I'm sure if you look at the .url of each of the Response objects you have you'll easily see what redirects happened.
[20:01:46] <gitesh> bjs: ok i got that, .history is actaully keeping both urls that's why two objects
[20:01:54] <bjs> gitesh: "both urls" ?
[20:01:57] <gitesh> bjs: i see
[20:02:02] <bjs> gitesh: there are two objects, so there were 2 redirects.
[20:02:07] <gitesh> bjs: yes, one http and the other https
[20:02:17] <gitesh> bjs: there were no two redirects
[20:02:25] <gitesh> bjs: that's what i was assuming
[20:02:43] <bjs> gitesh: the history has 2 things, there were 2 redirects
[20:02:47] <gitesh> bjs: there was one redirect and .history content both object http and https
[20:02:53] <bjs> no, there were 2 redirects
[20:03:14] <gitesh> bjs: but I'm checking in python, I'm checking both URLs
[20:03:16] *** Quits: qlixed (~qlixed@181.44.129.13) (Ping timeout: 250 seconds)
[20:03:22] <gitesh> bjs: one is http and the other is https
[20:03:30] <bjs> gitesh: well the url is more than just the http/https part
[20:03:59] *** Joins: LuxuryMode (uid91005@id-91005.charlton.irccloud.com)
[20:03:59] <bjs> gitesh: the history has 2 Response 301's so there were 2 redirects
[20:04:07] <gitesh> bjs: yes
[20:04:42] <bjs> gitesh: yes to which?
[20:04:42] <gitesh> bjs: there are 2 redirects now I'm checking
[20:05:00] <gitesh> bjs: because both's status code is 301
[20:05:06] *** Joins: nergar (~Nergar@177.225.152.16)
[20:05:40] *** Joins: aphysically (~aphysical@user/aphysically)
[20:05:49] <LuxuryMode> Suddenly running into an issue with code that worked just fine previously. I'm opening an image file and trying to then upload it and I'm getting `ValueError: embedded null byte`. Here is the relevant code: https://bpa.st/K7GQ Any ideas on how I can resolve this? I've inspected the image locally and it opens just fine in whichever image viewing app so the file seems fine to me.
[20:06:16] <aphysically> typealias type in 3.10, huh
[20:06:20] * aphysically adds it to TODO
[20:07:12] <gitesh> bjs: yes there are two redirects 1> 'http://github.com/presnick/runestone' and 2> 'https://github.com/presnick/runestone' And the actual page is 'https://github.com/presnick/RunestoneServer'
[20:07:27] <gitesh> bjs: I got it now clearly. Thanks.
[20:07:35] *** Joins: PyT001 (~PyT001@2402:e280:3d22:227:197d:939:d25:d58d)
[20:07:36] <bjs> gitesh: see, requests gives you all the info you needed :)
[20:07:48] <gitesh> bjs: I like response object :)
[20:07:58] <gitesh> seems powerful to me idk
[20:08:07] <bjs> gitesh: it is, it's a nicely designed library
[20:08:27] *** Joins: Voxel (~Voxel@ip178-67-155-188.onego.ru)
[20:08:42] *** Quits: PyT001 (~PyT001@2402:e280:3d22:227:197d:939:d25:d58d) (Client Quit)
[20:09:06] *** Quits: axisys (~axisys@ec2-34-225-151-46.compute-1.amazonaws.com) (Remote host closed the connection)
[20:09:46] *** Joins: pro_z (~pro_z@37.214.45.81)
[20:10:34] *** Joins: axisys (~axisys@ec2-34-225-151-46.compute-1.amazonaws.com)
[20:11:16] *** Joins: ruffni (~user@212-51-128-111.fiber7.init7.net)
[20:11:36] *** Quits: decimuscorvinus (~jimmy@136.37.105.112) (Quit: Will return)
[20:14:06] *** Quits: merijn (~merijn@83-160-49-249.ip.xs4all.nl) (Ping timeout: 250 seconds)
[20:14:20] *** Joins: matsaman (~matsaman@user/matsaman)
[20:14:47] *** Quits: tmart (~tmart@47-220-53-233.gtwncmkt04.res.dyn.suddenlink.net) (Ping timeout: 240 seconds)
[20:14:49] *** Parts: ruffni (~user@212-51-128-111.fiber7.init7.net) ()
[20:15:10] *** Joins: tmart (~tmart@47-220-53-233.gtwncmkt04.res.dyn.suddenlink.net)
[20:16:59] *** Joins: olspookishmagus (~pookie@snf-137798.vm.okeanos.grnet.gr)
[20:17:25] *** Joins: imp (~imp@192-141-191-229.alternativaip.net.br)
[20:18:25] <az> hi, I was here few days ago, I was trying to add an argument to command. I've made this changes to add --testnet support https://gitlab.com/uak/slp-sell-bot/-/blob/support-testnet/ec_slp_lib.py
[20:18:29] *** Quits: Donitz (~Donitz@85-156-203-108.elisa-laajakaista.fi) (Read error: Connection reset by peer)
[20:18:38] <az> I would like to hear your advice
[20:19:21] *** Quits: Cheaterman (~Cheaterma@user/cheaterman) (Ping timeout: 248 seconds)
[20:19:36] <f8e4> folks, why pkg_resources.resource_filename('mypkg', '/data/foo.mp3')? # it feels wrong solution ..
[20:20:28] *** Quits: imp (~imp@192-141-191-229.alternativaip.net.br) (Remote host closed the connection)
[20:22:10] *** Quits: GenTooMan (~cyberman@2601:547:437f:e5c6:21f:5bff:fefe:a883) (Ping timeout: 240 seconds)
[20:22:11] <aphysically> huh, I wonder if this is a good idea to rewrite with match case in 3.10. https://bpa.st/TRWA
[20:22:35] <aphysically> the bool is only used as an indicator for the shape of init_tuple
[20:23:50] <aphysically> I could remove the bool with match case I guess, but also if mypy learns to parse the matching patterns I wouldn't need the asserts to signal to mypy what's going on
[20:24:41] *** Joins: ablegreen (~ablegreen@tsunami.ocf.berkeley.edu)
[20:24:56] <ablegreen> is black the formatter people use these days?
[20:25:01] *** Joins: Donitz (~Donitz@85-156-203-108.elisa-laajakaista.fi)
[20:25:04] <ablegreen> seems part of the python software foundation
[20:25:14] <ablegreen> i've been out of the loop. still on yapf/autopep8
[20:25:16] <grym> it's a very popular choice
[20:25:19] <grym> (i use it)
[20:26:18] *** Joins: rsx (~dummy@ppp-188-174-128-193.dynamic.mnet-online.de)
[20:26:52] *** Joins: Cheaterman (~Cheaterma@user/cheaterman)
[20:27:55] <jinsun> aphysically: why not use the isinstance check in the if else and get rid of the asserts and the bool argument?
[20:27:58] <ablegreen> are there config options to make it less opinionated?
[20:28:13] <aphysically> jinsun: oh, true
[20:28:27] <grym> ablegreen: -l and -s
[20:28:30] <grym> ablegreen: otherwise, no
[20:28:32] <grym> by design
[20:28:36] <aphysically> the asserts were added ad hoc when I added mypy annotations so I never considered that as the primary solution
[20:29:31] <ablegreen> grym: yik es, okay
[20:29:38] <grym> ablegreen: thus the name, right?
[20:29:50] <grym> the whole point of black is to stop caring about format
[20:29:59] *** Joins: roteiro (~roteiro@i5C758B02.versanet.de)
[20:30:27] *** Quits: jpodivin (~jpodivin@118.108.broadband14.iol.cz) (Ping timeout: 240 seconds)
[20:30:46] <grym> you can't stop caring about format if you can care about format! :)
[20:31:36] *** Joins: p4rpc (~p4rpc@89-69-17-47.dynamic.chello.pl)
[20:32:15] *** Joins: Deknos (~someone@user/menace)
[20:34:02] <aphysically> jinsun: oh right, because it technically doesn't distinguish between the tuple and the iterator (which could be a tuple), but I guess I can change it to an explicit list then it's fine
[20:35:51] <ablegreen> grym: that's true
[20:39:07] *** Quits: dontyouloveshort (~julius@2a02:8108:8100:18c4:3d26:df8c:7070:d838) (Ping timeout: 240 seconds)
[20:39:24] *** Quits: srhm (~srhm@user/srhm) (Quit: Konversation terminated!)
[20:39:48] *** Joins: srhm (~srhm@user/srhm)
[20:40:15] <aphysically> probably not a convenient shorthand to notate "iterables that aren't tuples"
[20:40:16] *** Quits: dfg (dfg@user/dfg) (Remote host closed the connection)
[20:40:58] *** Quits: Forkk (forkk@2600:3c00::f03c:91ff:fe84:de4d) (Remote host closed the connection)
[20:41:03] *** Joins: GenTooMan (~cyberman@2601:547:437f:e5c6:21f:5bff:fefe:a883)
[20:41:05] *** Quits: CatCow (~wtf_over@c-73-96-109-206.hsd1.or.comcast.net) (Quit: My MacBook Air has gone to sleep. ZZZzzzâ€¦)
[20:42:06] *** Joins: Forkk (forkk@2600:3c00::f03c:91ff:fe84:de4d)
[20:42:06] *** Joins: merijn (~merijn@83-160-49-249.ip.xs4all.nl)
[20:43:28] <aphysically> I'm actually not sure why the if instance(..,tuple) silenced mypy
[20:44:17] *** Joins: abraxas (~abraxas@2600:8805:c880:3:c7fe:fc8e:f2cc:8056)
[20:44:47] *** Quits: pathos (~pathos@169-1-247-122.ip.afrihost.co.za) (Ping timeout: 240 seconds)
[20:45:26] *** Joins: rakoon (~rakoon@2a02:2149:824f:5900:63c3:3f71:b0b6:2dfa)
[20:45:37] <aphysically> oh because both branches are still valid ops
[20:46:43] *** Quits: akmod (~akmod@c-24-10-154-68.hsd1.ut.comcast.net) (Ping timeout: 250 seconds)
[20:47:03] *** Quits: twinsignal (~twinsigna@68.235.43.52) (Quit: Leaving)
[20:47:54] *** Quits: merijn (~merijn@83-160-49-249.ip.xs4all.nl) (Ping timeout: 250 seconds)
[20:49:18] *** Joins: rubion (~rubion@cpc124306-ayle4-2-0-cust188.15-2.cable.virginm.net)
[20:50:06] *** dcaro is now known as dcaro_away
[20:50:13] *** Joins: FluffyMask (~masque@user/fluffymask)
[20:51:46] *** Joins: sandb0y (pirate@user/sandb0y)
[20:51:46] *** Joins: cedric (~cedric@2a01:cb11:867:c200:4a2:7f3f:a87b:38f8)
[20:52:35] *** Joins: Barones (~Barones@2804:48dc:8500:0:989a:a152:32fd:9be8)
[20:53:07] *** Quits: djapo (~archangel@user/djapo) (Ping timeout: 240 seconds)
[20:53:42] *** Quits: mozgalom (~mozgalom@ipnet-gw.157.157.97.111.simnet.is) (Quit: My MacBook has gone to sleep. ZZZzzzâ€¦)
[20:56:20] *** Joins: pathos (~pathos@169-1-247-122.ip.afrihost.co.za)
[20:56:42] <aphysically> I guess I should switch some of the lists in my code to sets when that's what they're intended to be logically anyway
[20:57:27] *** Joins: mat001 (~mat001@c-73-223-64-126.hsd1.ca.comcast.net)
[20:57:52] *** Quits: betuxy (~ole@158.181.77.59) (Ping timeout: 250 seconds)
[20:58:23] *** Joins: slowButPresent (~slowButPr@user/slowbutpresent)
[20:58:27] *** Joins: jarthur (~jarthur@2603-8080-1540-002d-c17a-6f80-b4b6-4b45.res6.spectrum.com)
[20:59:50] *** Joins: minip (minip@user/minip)
[21:00:40] <aphysically> I should also learning about the typing aliases better (like I think in some places I can replace list with mutablesequence, or in other places with sequence)
[21:00:57] *** Quits: pathos (~pathos@169-1-247-122.ip.afrihost.co.za) (Ping timeout: 248 seconds)
[21:02:12] *** Joins: odoood (~odoood@2601:c8:c003:a550::7)
[21:04:23] *** Joins: adanwan_ (~adanwan@gateway/tor-sasl/adanwan)
[21:05:10] *** Quits: zln (~golluq@c80-217-230-193.bredband.tele2.se) (Ping timeout: 240 seconds)
[21:05:10] *** Quits: adanwan (~adanwan@gateway/tor-sasl/adanwan) (Ping timeout: 244 seconds)
[21:05:26] *** Joins: pathos (~pathos@169-1-247-122.ip.afrihost.co.za)
[21:05:56] *** Joins: manin (~x@185.242.190.95)
[21:10:05] *** Joins: ckdcreation (~ckdCreati@147.55.133.133)
[21:10:07] *** Quits: pathos (~pathos@169-1-247-122.ip.afrihost.co.za) (Ping timeout: 250 seconds)
[21:10:56] *** Quits: kuler (~kulernil@gateway/tor-sasl/kuler) (Remote host closed the connection)
[21:11:13] <dob1> It's not clear to me how to "deploy" an app/script that I have created in virtualenv. I have to run it in a cronjob
[21:11:16] *** Quits: rubion (~rubion@cpc124306-ayle4-2-0-cust188.15-2.cable.virginm.net) (Ping timeout: 252 seconds)
[21:11:51] *** Joins: kuler (~kulernil@gateway/tor-sasl/kuler)
[21:12:00] *** Quits: ckdcreation (~ckdCreati@147.55.133.133) (Client Quit)
[21:12:25] *** Joins: ckdcreation (~ckdCreati@147.55.133.133)
[21:12:41] <dob1> in the cronjob what I have to do?  I have to create an helper bash script that run the python script activating the virtualenv?
[21:13:02] <deniska> dob1: put it as /path/to/venv/bin/python /path/to/your_script.py
[21:13:09] *** Quits: ckdCreations (~ckdCreati@c-24-17-50-149.hsd1.wa.comcast.net) (Ping timeout: 250 seconds)
[21:13:33] <dob1> deniska, in the cron script?
[21:13:44] <dob1> just this? no activate ?
[21:14:09] <deniska> dob1: yes. What activation script does is more or less just changing the PATH so that python is /path/to/venv/bin/python
[21:14:33] <deniska> dob1: and the actual execution of /path/to/venv/bin/python is what makes a virtual environment work
[21:14:43] *** Quits: ofbeaton (~ofbeaton@23-233-30-16.cpe.pppoe.ca) (Quit: Client closed)
[21:15:09] *** Joins: darksun (~darksun@user/darksun)
[21:15:33] <deniska> I don't think I ever used 'activate' much since I learned about that :)
[21:15:33] <dob1> deniska, just to understand, how does it know that for example I want to use the virtualenv library and not the system one (for example requests) ?
[21:15:41] *** Joins: merijn (~merijn@83-160-49-249.ip.xs4all.nl)
[21:16:03] *** Joins: emika8 (~emika@185.207.249.30)
[21:16:10] *** Quits: emika (~emika@83.136.182.145) (Ping timeout: 240 seconds)
[21:16:10] *** emika8 is now known as emika
[21:16:11] *** Quits: fikran (~fikran@user/fikran) (Ping timeout: 250 seconds)
[21:16:29] <deniska> dob1: python populates sys.path, which is paths to search for libraries, depending on the path to the executable
[21:16:34] *** Joins: pathos (~pathos@169-1-247-122.ip.afrihost.co.za)
[21:16:52] <dob1> deniska, ok I will try for sure. thanks
[21:17:00] *** Joins: cloudbender (~cloudbend@user/cloudbender)
[21:17:50] <cloudbender> So I have my first Tkinter app running, and it's hideous.
[21:18:09] <matsaman> nice
[21:18:20] *** Joins: fikran (~fikran@user/fikran)
[21:18:29] <grym> as is right and proper
[21:18:37] <cloudbender> Not Deidre Callahan hideous, but hideous.
[21:19:07] *** Quits: jamiejackson (~jamiejack@199.223.30.254) (Ping timeout: 240 seconds)
[21:19:24] <cloudbender> It looks ok on screen, it's actually my boilerplate code that is hideous
[21:20:27] <cloudbender> Is there a way to post a snapshot ?
[21:20:31] *** Quits: darksun (~darksun@user/darksun) (Ping timeout: 250 seconds)
[21:20:50] *** Joins: akmod (~akmod@c-24-10-154-68.hsd1.ut.comcast.net)
[21:20:54] <cloudbender> Ya know, I should stop asking that.
[21:21:59] *** Quits: cloudbender (~cloudbend@user/cloudbender) (Quit: Connection closed)
[21:22:24] <grym> 0x0.st is nice for sharing images
[21:22:26] *** Joins: rubion (~rubion@cpc124306-ayle4-2-0-cust188.15-2.cable.virginm.net)
[21:25:17] *** Joins: mozgalom (~mozgalom@194.144.47.113)
[21:26:46] *** Joins: kosh (~kosh@user/kosh)
[21:27:57] *** Joins: decimuscorvinus (~jimmy@136.37.105.112)
[21:28:02] *** Joins: besnn (~besnn@user/besnn)
[21:28:07] *** Joins: kulernil (~kulernil@gateway/tor-sasl/kuler)
[21:28:32] *** Quits: kuler (~kulernil@gateway/tor-sasl/kuler) (Remote host closed the connection)
[21:28:41] *** Joins: brylie (~Thunderbi@81-197-199-179.elisa-laajakaista.fi)
[21:29:24] *** Joins: Betal (~Betal@user/betal)
[21:29:57] *** Quits: brylie (~Thunderbi@81-197-199-179.elisa-laajakaista.fi) (Client Quit)
[21:30:11] *** Quits: wolfgang (~wolfgang@101.174.6.197) (Remote host closed the connection)
[21:30:19] *** Joins: beencubed (~beencubed@209.131.238.248)
[21:31:44] *** Quits: srhm (~srhm@user/srhm) (Read error: Connection reset by peer)
[21:32:19] *** Joins: fedenix (~fedenix@gateway/tor-sasl/fedenix)
[21:32:39] *** Quits: Forkk (forkk@2600:3c00::f03c:91ff:fe84:de4d) (Quit: http://quassel-irc.org - Chat comfortably. Anywhere.)
[21:36:30] <LuxuryMode> How can I replace a byte with another in a `bytes` object?
[21:36:32] *** Quits: manin (~x@185.242.190.95) (Quit: Leaving)
[21:37:00] <LuxuryMode> Want to do the equivalent of `response.replace('\x00', '')` but that wouldn't work and would result in `TypeError: a bytes-like object is required, not 'str'`
[21:38:02] <ammar2> response.replace(b'\x00', b'')
[21:38:13] *** Quits: arinov (~arinov@178.240.152.159) (Ping timeout: 252 seconds)
[21:38:32] <LuxuryMode> Doh, of course. Thank you
[21:38:44] *** Quits: nomic (~nomic@185.217.117.169) (Quit: Leaving)
[21:41:28] <aphysically> hmmm, I guess I should narrow some of these "iterable" typings in input functions
[21:41:30] *** Joins: orion (~orion@user/orion)
[21:42:12] *** Quits: freeworld (~vit@chello085216193138.chello.sk) (Read error: Connection reset by peer)
[21:42:25] <aphysically> even if I'm only doing operations that work on all iterables, if it's a function whose behavior is intended to depend on the ordering I probably benefit from changing the input to "sequence", because then the static type checker can call out unexpected uses of the function
[21:43:29] *** Quits: odoood (~odoood@2601:c8:c003:a550::7) (Ping timeout: 250 seconds)
[21:43:33] *** Joins: Samian (~Sami@2620:10d:c091:480::1:7de4)
[21:43:37] <jinsun> changing Iterable to Sequence will make it more lenient
[21:43:51] <orion> Hello. In the Python 3.9 REPL I popped an item from a dict, but the __del__ method was not called until I tried to print the dict. Is there some kind of lazy evaluation going on?
[21:45:21] *** Joins: Yasumoto (~Yasumoto@136.152.37.118)
[21:45:52] *** Quits: jochum (~jochum@user/jochum) (Ping timeout: 245 seconds)
[21:45:54] *** Joins: freeworld (~vit@chello085216193138.chello.sk)
[21:46:04] <aphysically> jinsun: oh, I missed that sequence doensn't include the next method
[21:46:29] <jinsun> aphysically: because with Iterable mypy will allow only Iteration, it won't allow to use indexing or len etc. but with Sequence it will allow those operations + iteration
[21:46:41] *** Joins: jochum (~jochum@user/jochum)
[21:47:22] <ammar2> orion: yes and there's more where that came from, in general you should not rely on __del__ being called
[21:47:22] <aphysically> oh yes, you're right
[21:47:51] <aphysically> but I guess I should still change it for documenting reasons for communicating what the function expects
[21:48:41] *** Quits: pathos (~pathos@169-1-247-122.ip.afrihost.co.za) (Ping timeout: 250 seconds)
[21:49:05] <jinsun> aphysically: you want Iterator if you want next, or you can take an Iterable but convert it to Iterator by calling iter()
[21:49:20] *** Joins: Auron (~Auron956@user/auron)
[21:49:27] *** Quits: merijn (~merijn@83-160-49-249.ip.xs4all.nl) (Ping timeout: 240 seconds)
[21:49:38] <aphysically> ah yes, somehow I read those as being on the same line https://docs.python.org/3/library/collections.abc.html
[21:53:45] *** Joins: ncwbqcfe (~rvgzuuqp@gateway/tor-sasl/rvgzuuqp)
[21:54:19] *** Quits: trace987 (~trace@ip5f5a6a70.dynamic.kabel-deutschland.de) (Ping timeout: 250 seconds)
[21:55:02] *** Joins: pathos (~pathos@169-1-247-122.ip.afrihost.co.za)
[21:56:09] *** Joins: dcaro (~dcaro@user/dcaro)
[21:56:22] *** Quits: dcaro_away (~dcaro@user/dcaro) (Ping timeout: 252 seconds)
[21:56:25] *** Quits: orion (~orion@user/orion) (Read error: Connection reset by peer)
[21:56:40] *** Joins: jcalla (~jcalla@cpe-75-189-211-206.nc.res.rr.com)
[21:56:42] *** Joins: ckdCreations (~ckdCreati@c-24-17-50-149.hsd1.wa.comcast.net)
[21:57:11] *** Joins: darksun (~darksun@user/darksun)
[21:57:56] *** Quits: ckdcreation (~ckdCreati@147.55.133.133) (Read error: Connection reset by peer)
[21:58:16] *** Joins: dontyouloveshort (~julius@2a02:8108:8100:18c4:3d26:df8c:7070:d838)
[21:58:18] *** Joins: orion (~orion@user/orion)
[21:58:22] <orion> ammar2: Thank you.
[21:59:49] <hexology> is there any python debugger that supports `await`? maybe ipdb?
[22:00:46] *** Joins: ckdcreation (~ckdCreati@147.55.130.37)
[22:00:46] *** Quits: ckdcreation (~ckdCreati@147.55.130.37) (Client Quit)
[22:01:29] <aphysically> I need to make a vim macro or find a plugin or something that can autocombine + autosplit selected lines like sentences
[22:02:03] *** Quits: orion (~orion@user/orion) (Client Quit)
[22:02:14] *** Joins: georgios (~georgios@user/georgios)
[22:02:47] <aphysically> I might be able to use the builtin reformatting for this if I wasn't so vim-stupid
[22:02:50] <aphysically> :D
[22:03:05] *** Joins: no_gravity (~no_gravit@user/no-gravity/x-5639427)
[22:03:21] *** Quits: ckdCreations (~ckdCreati@c-24-17-50-149.hsd1.wa.comcast.net) (Ping timeout: 248 seconds)
[22:03:42] <no_gravity> How do you handle error like situations in cli scripts? Do you print an error message and quit or do you raise an exception?
[22:04:45] <aphysically> in black's documentation "If youâ€™re paid by the line of code you write"
[22:04:47] <aphysically> oh god
[22:05:30] <matsaman> 'oh god' is my usual thought when black comes up
[22:06:42] <jean-luc> :(
[22:07:00] *** Joins: Celeo (~Celeo@user/celeo)
[22:07:27] <matsaman> no_gravity: I think an error message tailored for mere humans is nicer, but you could certainly come back to it later
[22:07:46] *** Joins: nomic (~nomic@185.217.117.169)
[22:07:53] <matsaman> depends on what the issue is, operational or not, for example
[22:08:12] <Julian> aphysically: depending on what you mean by autojoin/autosplit, you want splitjoin
[22:08:40] <Julian> aphysically: https://github.com/Julian/dotfiles/blob/main/.config/nvim/init.vim#L48
[22:08:42] <no_gravity> matsaman: I thought maybe there is a built in functionality for this situation? Or do you just print("I do not work on weekends"); quit(); ?
[22:08:54] <Julian> aphysically: Or well just https://github.com/AndrewRadev/splitjoin.vim directly
[22:08:56] <aphysically> basically if I wrote out a long paragraph docstring, I want help formatting it to a standard linewidth, or, if later I edit a sentence within the docstring, to automatically reformat the selected lines
[22:09:03] <aphysically> to a nice paragraph again
[22:09:18] <matsaman> sounds like a job for your editor
[22:09:25] *** Joins: PyT001 (~PyT001@2402:e280:3d22:227:197d:939:d25:d58d)
[22:09:40] *** Quits: TonyStone31 (~TonyStone@2603-7080-8607-c36a-9cdb-69bc-753b-1e50.res6.spectrum.com) (Ping timeout: 240 seconds)
[22:09:43] <aphysically> yep, I'm talking about figuring out a good way to do it in vim
[22:09:50] <Julian> aphysically: Got it, that's not splitjoin then, that's `:h gq` + `par`
[22:10:09] *** Quits: decimuscorvinus (~jimmy@136.37.105.112) (Quit: Will return)
[22:10:11] *** Quits: pycurious (~Adium@user/pycurious) (Quit: Leaving.)
[22:10:16] <matsaman> no_gravity: I mean ideally it would go to stderr
[22:10:29] <Julian> aphysically: https://github.com/Julian/dotfiles/blob/main/.config/nvim/init.vim#L168-L169 + https://github.com/Julian/dotfiles/blob/main/.config/nvim/init.vim#L474 + `brew install par` or the equivalent on your OS
[22:10:35] <no_gravity> matsaman: And also return an exit value of 1 right?
[22:10:42] *** Joins: decimuscorvinus (~jimmy@136.37.105.112)
[22:11:24] <matsaman> yeah
[22:11:46] *** Quits: Samian (~Sami@2620:10d:c091:480::1:7de4) (Quit: Textual IRC Client: www.textualapp.com)
[22:12:05] <aphysically> Julian: gq for initial and par for reformatting? (or par for both I guess?)
[22:12:10] *** Quits: drd (~drd@2001:b07:a70:9f1f:1562:34de:f50f:77d4) (Ping timeout: 240 seconds)
[22:12:17] <PyT001> Hi Any one knows a way to get the  8  image captured with any libraries (opencv returns only outline and two zeros instead of complete loop crossing 8 , tried with edge detecting not able to get ), i have posted the same last week
[22:13:52] *** Joins: arinov (~arinov@213.194.126.155)
[22:15:03] *** Quits: Julian (~tos9@python/site-packages/Julian) (Quit: leaving)
[22:15:40] *** Quits: besnn (~besnn@user/besnn) (Ping timeout: 240 seconds)
[22:16:05] *** Joins: pycurious (~Adium@user/pycurious)
[22:18:13] *** Quits: Ergo^ (~ergo@91.238.59.144) (Remote host closed the connection)
[22:18:38] <rjwiii> Hello. I have a very large zip file <1GB+> that I would like to read as a generator and not store in memory ... Can I use the zipfile module to do this?
[22:18:58] *** Quits: Midjak (~Midjak@82-65-111-221.subs.proxad.net) (Quit: This computer has gone to sleep)
[22:19:50] <ens> i keep ending up having to put str() around stuff that i'm trying to print() when i'm concatenating things together
[22:20:04] <Yhg1s> rjwiii: no. The ZIP format stores its directory of contents at the end of the file, and the zipfile module always reads that central directory first.
[22:20:08] <Yhg1s> rjwiii: so the file has to be seekable.
[22:20:16] <ens> is there some directive i can use that will tell python to just treat ints as strings when concatenating ?
[22:20:41] <matsaman> .asJavasScript() ? =P j/k
[22:20:45] <Staunch> hey gloin, looks like you pinged me after i left my computer. Did you figure things out?
[22:20:49] <matsaman> javassscript, whoops
[22:21:02] <Yhg1s> rjwiii: it is ~somewhat possible to unpack a ZIP archive by looking at local file headers instead, but it's tricky and fragile and the zipfile module doesn't offer that functionality.
[22:21:14] <Yhg1s> ens: nope.
[22:21:32] <Yhg1s> ens: the usual choice is to not use concatenation, and instead use string formatting.
[22:21:32] <matsaman> ens: maybe f strings
[22:21:43] <matsaman> yeah, or format
[22:21:47] <rjwiii> Yhg1s: drat ... This is on a busy server ... it
[22:21:57] <ens> thanks. i'll check out using format strings instead
[22:22:09] *** Quits: nomic (~nomic@185.217.117.169) (Quit: Leaving)
[22:22:14] *** Joins: drd (~drd@2001:b07:a70:9f1f:1562:34de:f50f:77d4)
[22:22:28] *** Joins: TonyStone31 (~TonyStone@2603-7080-8607-c36a-9cdb-69bc-753b-1e50.res6.spectrum.com)
[22:22:48] <rjwiii> Yhg1s: It's a zipped csv file ... I'll just have to use the csv module ... will slow down my script.
[22:22:51] *** Quits: decimuscorvinus (~jimmy@136.37.105.112) (Quit: Will return)
[22:23:35] *** Quits: thiras (~thiras@user/thiras) (Remote host closed the connection)
[22:23:39] *** Joins: decimuscorvinus (~jimmy@136.37.105.112)
[22:23:46] *** Quits: mutandis (~mut@c-73-129-211-144.hsd1.va.comcast.net) (Quit: zzzz)
[22:23:52] <aphysically> julia: oh I can just select lines and use gq with vim, great
[22:24:34] <rjwiii> Yhg1s: I guess I could unzip it first, then read the unzipped file as a generator ... then delete the unzipped file ...
[22:24:35] <aphysically> I can't believe I've been using vim for the better part of 8 years and I'm still so bad
[22:24:46] *** Joins: p-i-_ (~Ohmu@2403:6200:8870:9971:38d4:7e6b:8ef4:4c19)
[22:24:55] <ens> i did like: print(f'Getting page: {current_page} of {max_page}') and that actually works perfectly fine.
[22:25:03] *** Quits: roteiro (~roteiro@i5C758B02.versanet.de) (Quit: Client closed)
[22:25:29] <no_gravity> Is there a way to make a reference in python? Like a=1;b=&a;a+=1;print(b) # 2
[22:26:02] *** Leonarbro_ is now known as Leonarbro
[22:26:06] *** Joins: xrogaan (~xrogaan@user/xrogaan)
[22:26:22] *** Joins: i0e (~is0ke3@user/is0ke3)
[22:26:23] <Yhg1s> no_gravity: everything is a reference, but no, there's no kind of reference that name assignment will follow. (See bit.ly/pynames1)
[22:26:52] *** Joins: thiras (~thiras@user/thiras)
[22:27:06] *** Quits: acid (~acid@user/acid) (Remote host closed the connection)
[22:27:07] *** Quits: pathos (~pathos@169-1-247-122.ip.afrihost.co.za) (Ping timeout: 240 seconds)
[22:27:21] <aphysically> well nowt hat I've got that figured out I guess I need to actually pick a docstring style
[22:27:40] *** Quits: p-i- (~Ohmu@2403:6200:8870:9971:5cdf:1370:a050:fa37) (Ping timeout: 240 seconds)
[22:27:55] <matsaman> vim is prett great when you barely exploit it
[22:28:11] <no_gravity> Yhg1s: I see. Is that you?
[22:28:18] <Yhg1s> no_gravity: no.
[22:28:29] *** Joins: trace987 (~trace@ip5f5a6a70.dynamic.kabel-deutschland.de)
[22:29:13] *** Quits: nergar (~Nergar@177.225.152.16) (Read error: Connection reset by peer)
[22:29:13] <nedbat> no_gravity: didn't we discuss the "no pointers" thing yesterday (or a few days ago)?
[22:29:18] <nedbat> no_gravity: btw, that is me in the video
[22:29:23] <trace987> I am looking for a library that can do type predictions
[22:29:33] <trace987> like with fish or zsh
[22:30:05] <no_gravity> nedbat: Kinda. We discussed if it is possible to pass a variable by reference.
[22:30:16] <no_gravity> nedbat: Cool!
[22:30:43] <nedbat> no_gravity: i see, yes, this is closely related.  python has no mechanism for referencing variables.
[22:30:47] *** Quits: georgios (~georgios@user/georgios) (Ping timeout: 240 seconds)
[22:31:03] <no_gravity> nedbat: I see.
[22:31:35] *** Quits: zer0bitz (~zer0bitz@dsl-hkibng31-58c384-213.dhcp.inet.fi) (Ping timeout: 250 seconds)
[22:33:19] *** Joins: mexen (uid495612@user/mexen)
[22:33:47] *** Quits: dontyouloveshort (~julius@2a02:8108:8100:18c4:3d26:df8c:7070:d838) (Ping timeout: 240 seconds)
[22:33:52] *** Joins: pathos (~pathos@169-1-247-122.ip.afrihost.co.za)
[22:35:07] *** Quits: rubion (~rubion@cpc124306-ayle4-2-0-cust188.15-2.cable.virginm.net) (Ping timeout: 240 seconds)
[22:36:14] *** Joins: ayustae (Thunderbir@gateway/vpn/protonvpn/ayustae)
[22:38:03] *** Joins: zer0co0l (~root@37.40.227.35)
[22:39:16] *** Quits: ssbr (~ssbr@python/site-packages/ssbr) (Ping timeout: 250 seconds)
[22:40:53] *** Joins: TechyTommy (~TechyTomm@2603-6000-9700-003c-0dfc-51f5-c377-c680.res6.spectrum.com)
[22:42:23] <zer0co0l> hello
[22:42:25] *** Quits: pacbard (~pacbard@user/pacbard) (Ping timeout: 250 seconds)
[22:43:27] *** grym is now known as zero-cool
[22:43:32] <zero-cool> zer0co0l: hello
[22:44:00] <aphysically> does anyone here have opinions on google vs reST docstring style? if I use Google am I going to be locked out of any common tools?
[22:44:05] *** zero-cool is now known as grym
[22:44:22] *** ouemt is now known as cl
[22:44:33] *** cl is now known as ouemt_
[22:44:36] *** Quits: lucad111 (~lucad111@51-148-40-1.dsl.zen.co.uk) (Remote host closed the connection)
[22:44:40] *** ouemt_ is now known as ouemt__
[22:44:42] *** ouemt__ is now known as ouemt
[22:45:04] *** Quits: hexnewbie (~hexnewbie@user/hexnewbie) (Read error: Connection reset by peer)
[22:45:27] *** Quits: jinsun (~quassel@user/jinsun) (Ping timeout: 250 seconds)
[22:45:49] <zer0co0l> stack overflow
[22:46:12] <no_gravity> aphysically: Can you give an example?
[22:46:16] <grym> aphysically: docstring formatting is more or less up to you.  i find google or numpydoc to be the tersest/nicest to use
[22:46:58] <grym> aphysically: tools like sphinx etc can consume all standard formats
[22:47:15] *** Quits: no_gravity (~no_gravit@user/no-gravity/x-5639427) (Quit: leaving)
[22:48:14] *** Joins: Akuli (~Akuli@82-203-167-7.bb.dnainternet.fi)
[22:48:31] *** Quits: fassl (~fassl@2a02:8388:1987:9380:c4ee:81c5:625a:a215) (Quit: Leaving)
[22:49:01] *** Joins: Forkk (~forkk@li926-228.members.linode.com)
[22:49:09] *** Quits: TechyTommy (~TechyTomm@2603-6000-9700-003c-0dfc-51f5-c377-c680.res6.spectrum.com) (Quit: Bye everybody!)
[22:49:26] *** Quits: drd (~drd@2001:b07:a70:9f1f:1562:34de:f50f:77d4) (Quit: ZNC 1.8.2 - https://znc.in)
[22:49:45] *** Joins: drd (~drd@93-39-151-19.ip76.fastwebnet.it)
[22:51:21] *** Joins: amahl (~amahl@dsl-jklbng12-54fbca-64.dhcp.inet.fi)
[22:54:25] *** Joins: csevast (~csevast@apu40.neoplus.adsl.tpnet.pl)
[22:55:34] <trace987> is it possible to have input() with predictions
[22:56:05] *** Joins: georgios (~georgios@user/georgios)
[22:56:17] *** Quits: csevast (~csevast@apu40.neoplus.adsl.tpnet.pl) (Client Quit)
[22:56:35] *** Joins: rubion (~rubion@cpc124306-ayle4-2-0-cust188.15-2.cable.virginm.net)
[22:57:06] <aphysically> I guess I should learn the text intrareferencing style in sphinx or some such for when I refer to functions
[22:57:25] <grym> trace987: "predictions" in what sense
[22:57:34] *** Joins: TechyTommy (~TechyTomm@2603-6000-9700-003c-0dfc-51f5-c377-c680.res6.spectrum.com)
[22:58:19] <trace987> grym, https://stackoverflow.com/questions/8505163/is-it-possible-to-prefill-a-input-in-python-3s-command-line-interface
[22:58:22] <nedbat> aphysically: classic sphinx style is hard to read.  use google or numpy style.  they work fine.
[22:59:26] <aphysically> I was planning on using Google, and then trying to find information on standards for links in it or referencing other functions, the nitty gritty stuff
[23:00:11] *** Quits: Celeo (~Celeo@user/celeo) (Ping timeout: 250 seconds)
[23:00:23] <grym> trace987: i might use https://github.com/magmax/python-inquirer for that sort of thing
[23:01:09] *** Joins: csevast (~csevast@apu40.neoplus.adsl.tpnet.pl)
[23:01:11] *** Quits: zer0co0l (~root@37.40.227.35) (Quit: WeeChat 3.0.1)
[23:02:27] *** Quits: hendursaga (~weechat@user/hendursaga) (Ping timeout: 244 seconds)
[23:04:49] *** Joins: hendursaga (~weechat@user/hendursaga)
[23:05:32] *** Quits: Hanii (~textual@2a00:23c5:c587:6d00:ac6a:3a5a:8781:6561) (Quit: Textual IRC Client: www.textualapp.com)
[23:06:15] *** Joins: kyooo (~kyooo@2a02:a31d:a13c:5600:559d:f748:905d:cda9)
[23:06:47] *** Quits: pathos (~pathos@169-1-247-122.ip.afrihost.co.za) (Ping timeout: 240 seconds)
[23:08:12] *** Joins: pragmaticenigma (~pragmatic@user/pragmaticenigma)
[23:08:14] *** Quits: TechyTommy (~TechyTomm@2603-6000-9700-003c-0dfc-51f5-c377-c680.res6.spectrum.com) (Quit: Bye everybody!)
[23:08:56] <trace987> grym, thank you very much
[23:12:45] *** Quits: Omega037 (~Omega037@047-024-168-024.res.spectrum.com) (Ping timeout: 250 seconds)
[23:13:23] <PyT001> any libraries for image detection? basically to redraw the 8 shaped image ? opencv gives outline , i think fourier logic even prints outline  and other details (as long as not crossing curves i think), can  anyone please share ur suggestions?
[23:13:43] *** Joins: hexnewbie (~hexnewbie@user/hexnewbie)
[23:14:14] <grym> "the 8 shaped image" is unclear
[23:14:32] *** Joins: pathos (~pathos@169-1-247-122.ip.afrihost.co.za)
[23:15:26] *** Quits: rsx (~dummy@ppp-188-174-128-193.dynamic.mnet-online.de) (Quit: rsx)
[23:16:52] *** Joins: Omega037 (~Omega037@047-024-168-024.res.spectrum.com)
[23:17:22] <PyT001> grym:  lemniscate  curve image , trying to read it with python opencv to redraw
[23:17:24] *** Quits: Batzy (~Batzy@user/batzy) (Ping timeout: 250 seconds)
[23:21:50] *** Joins: Celeo (~Celeo@user/celeo)
[23:22:06] <grym> PyT001: openCV should be able to do most of that
[23:23:00] *** Joins: Batzy (~Batzy@user/batzy)
[23:24:07] *** Quits: CombatVet (~c4@user/combatvet) (Remote host closed the connection)
[23:25:16] *** Joins: CombatVet (~c4@user/combatvet)
[23:25:26] *** Joins: Narrat (~omnius@p200300df5f2bccfe06ea56fffe2e7cdc.dip0.t-ipconnect.de)
[23:25:29] *** Quits: fikran (~fikran@user/fikran) (Ping timeout: 248 seconds)
[23:25:53] <PyT001> grym: open cv gives outlines  like two lines , and without intersection, meaning one line as outline and two circles , without intersecting points
[23:26:29] <grym> PyT001: you can do something blobby / edge detecty / binary threshold mask and get something you can fit a curve to
[23:26:37] *** Quits: drd (~drd@93-39-151-19.ip76.fastwebnet.it) (Ping timeout: 250 seconds)
[23:26:39] <grym> PyT001: can you share what the image you're processing look like?
[23:27:10] *** Joins: nomic (~nomic@185.217.117.169)
[23:27:29] *** Joins: zer0co0l (~root@37.40.227.35)
[23:27:33] *** Joins: twomoon (~twomoon@ip72-199-58-150.sd.sd.cox.net)
[23:27:43] *** Joins: fikran (~fikran@user/fikran)
[23:28:00] <PyT001> grym: Sure i will , how to share images here?
[23:28:02] *** Joins: wolfgang (~wolfgang@101.174.6.197)
[23:28:17] <grym> PyT001: 0x0.st is the image pastebin i know of that is nice to use
[23:28:28] <grym> i always forget the others.  an imgur link is fine too
[23:28:40] *** Quits: carl- (~carl-@c-138ee555.02-180-73746f39.bbcust.telenor.se) (Ping timeout: 250 seconds)
[23:29:32] *** Quits: decimuscorvinus (~jimmy@136.37.105.112) (Quit: Will return)
[23:29:45] *** Quits: csevast (~csevast@apu40.neoplus.adsl.tpnet.pl) (Ping timeout: 248 seconds)
[23:30:05] *** Quits: mei (~mei@user/mei) (Ping timeout: 250 seconds)
[23:30:06] *** Joins: decimuscorvinus (~jimmy@136.37.105.112)
[23:30:19] *** Quits: Voxel (~Voxel@ip178-67-155-188.onego.ru) (Quit: Client closed)
[23:30:47] <trace987> grym, your help brought me further , found that https://github.com/prompt-toolkit/python-prompt-toolkit
[23:30:58] *** Joins: Pickchea (~private@user/pickchea)
[23:31:17] <grym> trace987: oh yeah, that's the more full-bore version.  the fullest-bore is something like urwid
[23:31:53] *** Quits: Deknos (~someone@user/menace) (Ping timeout: 248 seconds)
[23:32:10] <dob1> there is a special way to catch an exception in a with block or just put it inside a try-catch ?
[23:32:41] <nedbat> dob1: try/except is the only way
[23:33:00] *** Quits: ayustae (Thunderbir@gateway/vpn/protonvpn/ayustae) (Quit: ayustae)
[23:33:02] <dob1> nedbat, ok!
[23:34:33] *** Quits: gusto (~Augustus@109.255.100.54) (Quit: Textual IRC Client: www.textualapp.com)
[23:36:09] *** Quits: remedan (~remedan@balak.me) (Quit: Bye!)
[23:36:20] *** Joins: jinsun (~quassel@user/jinsun)
[23:37:02] *** Joins: remedan (~remedan@balak.me)
[23:37:18] *** Quits: jinsun (~quassel@user/jinsun) (Read error: Connection reset by peer)
[23:37:28] *** Quits: nyah (~nyah@bcdcb6e3.skybroadband.com) (Quit: leaving)
[23:39:30] *** Quits: twomoon (~twomoon@ip72-199-58-150.sd.sd.cox.net) (Ping timeout: 250 seconds)
[23:39:38] *** Joins: molt (~molt@79.140.150.225)
[23:39:56] <aphysically> okay, re: documentation, I guess something like this? https://bpa.st/GG7A
[23:40:11] <aphysically> this is a lot of work ðŸ˜’
[23:40:32] *** Quits: crabbedhaloablut (~crabbedha@user/crabbedhaloablut) (Remote host closed the connection)
[23:40:32] *** Quits: remedan (~remedan@balak.me) (Client Quit)
[23:40:33] <aphysically> but I guess you really only want to be this detailed for public-facing or especially complicated methods
[23:40:55] *** Joins: crabbedhaloablut (~crabbedha@user/crabbedhaloablut)
[23:42:23] *** Joins: sazawal (~sazawal@182.64.58.123)
[23:42:41] <PyT001> grym: https://imgur.com/a/OYtVKWO
[23:43:00] *** Quits: Barones (~Barones@2804:48dc:8500:0:989a:a152:32fd:9be8) (Remote host closed the connection)
[23:43:15] *** Joins: Barones (~Barones@2804:48dc:8500:0:5050:9c55:e2f7:83af)
[23:43:33] *** Quits: jess (~jess@libera/staff/jess) ()
[23:43:42] <grym> PyT001: ok yeah this is well within what openCV is for
[23:43:46] <aphysically> if I want to learn sphinx or something I still need to learn about its cross-referencing/text formatting primitives
[23:44:06] *** Joins: besnn (~besnn@user/besnn)
[23:44:11] <grym> aphysically: rEST is a bit of a rabbit hole, yes
[23:44:15] <PyT001> grym: lemniscateo.png is output of lemniscate.png , getting one outline and two inside circle , to redraw we need to get one line
[23:44:25] <grym> reST?
[23:45:02] <aphysically> well, I did choose google style (see paste), but I'm not sure if it still supports the rest stuff in sphinx or if it's different
[23:45:02] *** Quits: gloin (~gloin@user/gloin) (Read error: Connection reset by peer)
[23:45:15] *** Joins: gloin (~gloin@user/gloin)
[23:45:30] *** Quits: Barones (~Barones@2804:48dc:8500:0:5050:9c55:e2f7:83af) (Remote host closed the connection)
[23:45:31] *** Quits: zer0co0l (~root@37.40.227.35) (Quit: WeeChat 3.0.1)
[23:45:44] *** Joins: Barones (~Barones@2804:48dc:8500:0:d14e:a4cd:a71a:dece)
[23:45:58] *** luvalon1 is now known as luva9497
[23:46:17] *** luva9497 is now known as luva
[23:46:18] *** Joins: merijn (~merijn@83-160-49-249.ip.xs4all.nl)
[23:47:00] <PyT001> grym: imagine if it is flower petals four or six we will get only outlines , we wont get exact points to redraw
[23:47:09] *** Joins: Bronto22 (~mennoh@2a02:a46b:4db0:1:5604:a6ff:fe37:3044)
[23:47:35] <grym> PyT001: what do you want as your end goal? do you need to have a closed-form solution that you've obtained by a curve fitting?
[23:47:40] *** Quits: ghost43 (~ghost43@gateway/tor-sasl/ghost43) (Remote host closed the connection)
[23:47:41] *** Quits: cmc (~methos@gateway/tor-sasl/cmc) (Remote host closed the connection)
[23:47:43] <grym> or just a matrix you can render as an image
[23:48:07] *** Joins: cmc (~methos@gateway/tor-sasl/cmc)
[23:48:16] *** Joins: ghost43 (~ghost43@gateway/tor-sasl/ghost43)
[23:48:52] *** Joins: RangerBobVA (~bmaddox@user/rangerbobva)
[23:49:27] *** Quits: cheater (~Username@user/cheater) (Ping timeout: 240 seconds)
[23:49:32] <PyT001> grym: want to redraw the image which has flower petals and lemniscate images
[23:49:55] *** Joins: remedan (~remedan@balak.me)
[23:50:04] *** Joins: cheater (~Username@user/cheater)
[23:50:29] *** Joins: vladoski (~vladoski@178.138.192.59)
[23:51:29] *** Quits: vladoski (~vladoski@178.138.192.59) (Client Quit)
[23:51:50] *** Joins: vladoski (~vladoski@178.138.192.59)
[23:51:54] *** Joins: twomoon (~twomoon@ip72-199-58-150.sd.sd.cox.net)
[23:53:39] *** Quits: Forkk (~forkk@li926-228.members.linode.com) (Quit: http://quassel-irc.org - Chat comfortably. Anywhere.)
[23:55:21] *** Joins: jinsun (~quassel@user/jinsun)
[23:56:17] *** Joins: stealth_ (~stelath_@216-197-160-97.regn.static.sasknet.sk.ca)
[23:58:27] *** Quits: p4rpc (~p4rpc@89-69-17-47.dynamic.chello.pl) (Ping timeout: 240 seconds)
[23:58:36] *** Quits: Axy (~Axy@user/axy) (Read error: Connection reset by peer)
[23:58:58] <PyT001> grym: i am not aiming to get a closed-form solution or equations to redraw , directly read the image and redraw with scales (may be bigger ) or store in a different format say svg
[23:59:06] * aphysically documents one method
[23:59:16] <aphysically> well that's a good day's work for today time to break for lunch
