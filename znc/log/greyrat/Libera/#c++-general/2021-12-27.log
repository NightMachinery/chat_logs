[00:01:20] <Alipha> Alphabetical order, maybe?
[00:01:24] *** Joins: AmR| (~AmREiSa@156.207.248.243)
[00:01:57] *** Quits: AmR (~AmREiSa@156.199.236.68) (Ping timeout: 240 seconds)
[00:03:21] <cbreak> xkoncek: doesn't have to be on every invocation
[00:03:28] <cbreak> java has a JIT compiler
[00:05:33] *** Joins: imi (~imi@catv-89-132-115-236.catv.broadband.hu)
[00:12:53] *** Quits: mackal (~mackal@pool-96-237-249-63.bstnma.fios.verizon.net) (Quit: BE VIGILANT.)
[00:23:04] *** Quits: realsh00p (~sh00p@2001:9b1:41e9:e800:dfc6:b074:1f6f:9b73) (Quit: Leaving)
[00:24:15] <InPhase> xkoncek: Java has an intermediate bytecode which is not far from an assembly language.
[00:24:44] <InPhase> Basically it is a machine code for a virtual machine.
[00:31:11] <InPhase> xkoncek: An example of a JVM lookup process with invokedynamic is described here at "Under the Hood":  https://www.baeldung.com/java-invoke-dynamic
[00:32:27] *** Joins: seninha (~seninha@user/seninha)
[00:33:57] *** Quits: ___nick___ (~quassel@cpc68286-cdif17-2-0-cust533.5-1.cable.virginm.net) (Ping timeout: 240 seconds)
[00:40:53] *** Quits: zmt00 (~zmt00@user/zmt00) (Quit: Gone.)
[00:49:02] <veverak> I wonder
[00:49:48] <veverak> in case of 'static_vector<T,N>' thingy, what is preferable... for it to clear memory where it allocates with 0 or leave it be
[00:53:40] <LordKalma> what's a static_vector?
[00:55:47] <veverak> vector with limited storage that contains it in itself
[00:55:47] *** Quits: ferdna (~ferdna@user/ferdna) (Quit: Leaving)
[00:56:05] <veverak> imagine std::array which can hold 0...N objects, not just N
[00:56:22] <veverak> (which is nice for some stuff that is not sanely default-constructible)
[00:56:40] <LordKalma> you should just use the memory
[00:56:47] <LordKalma> don0't worry about mem-setting it to zero
[00:59:59] <veverak> yeah
[01:00:15] <ville> if you go memsetting things, you may end up "covering" bugs such as reads that would be otherwise be from uninitialized memory that a sanitizer would catch otherwise
[01:00:47] <leonardus> my cat wants to learn some C++ https://usercontent.irccloud-cdn.com/file/Mx29gkLJ/image.png
[01:01:44] <veverak> ville: good point
[01:10:00] *** Quits: magla (~gelignite@55d4171c.access.ecotel.net) (Quit: Stay safe!)
[01:11:38] *** Quits: Inline__ (~Inline@2a02:908:1252:7a80::4f) (Quit: Leaving)
[01:11:59] *** Joins: Inline (~Inline@2a02:908:1252:7a80::4f)
[01:12:37] *** Joins: zmt00 (~zmt00@user/zmt00)
[01:19:45] *** Quits: Inline (~Inline@2a02:908:1252:7a80::4f) (Quit: Leaving)
[01:20:10] *** Joins: Inline (~Inline@2a02:908:1252:7a80::4f)
[01:20:19] *** Joins: jbalint (~jbalint@2600:6c44:117f:e98a:816a:9488:fb1:7b7)
[01:22:26] *** Quits: imi (~imi@catv-89-132-115-236.catv.broadband.hu) (Ping timeout: 245 seconds)
[01:29:54] *** Quits: robod34 (Username@79.113.195.239) (Quit: Goe offline! ( http://marius.sucan.ro/ ))
[01:32:05] *** Joins: PJBoy (~PJBoy@user/pjboy)
[01:34:01] *** Joins: mackal (~mackal@pool-96-237-249-63.bstnma.fios.verizon.net)
[01:34:55] *** Joins: imi (~imi@catv-89-132-115-236.catv.broadband.hu)
[01:36:43] *** Joins: RoKenn (~RoKenn@2001:a61:3432:ab01:c926:612d:c184:6ced)
[01:36:43] *** Quits: RoKenn (~RoKenn@2001:a61:3432:ab01:c926:612d:c184:6ced) (Changing host)
[01:36:43] *** Joins: RoKenn (~RoKenn@user/rokenn)
[01:40:05] *** Quits: npaperbot (~npaperbot@dodecahedron.m-ou.se) (Remote host closed the connection)
[01:40:15] *** Joins: npaperbot (~npaperbot@dodecahedron.m-ou.se)
[01:40:15] *** ChanServ sets mode: +v npaperbot
[01:43:06] *** Joins: markong (~kvirc@213.146.188.203)
[01:44:30] *** Quits: Tobbi (~Tobbi@2a02:8108:1240:48ec:ecba:1568:6226:2d2f) (Ping timeout: 260 seconds)
[01:49:05] *** Quits: jwillikers (~jwilliker@ics141-1.icsincorporated.com) (Remote host closed the connection)
[01:49:25] *** Quits: PJBoy (~PJBoy@user/pjboy) (Ping timeout: 240 seconds)
[01:51:26] *** Quits: CoderCharmander (~CoderChar@20014C4C12563000BCCDBFC417CDB7F0.catv.pool.telekom.hu) (Quit: Leaving)
[01:54:59] *** Quits: spaceangel (~spaceange@ip-78-102-216-202.net.upcbroadband.cz) (Remote host closed the connection)
[02:23:13] *** Quits: xkuru (~xkuru@user/xkuru) (Read error: Connection reset by peer)
[02:25:30] *** Joins: Tobbi (~Tobbi@2a02:8108:1240:48ec:959a:9961:e40e:6c97)
[02:26:56] *** Joins: chozorho (~chozorho@2601:146:300:c30::e14e)
[02:28:37] *** Quits: namo (~nomo@95.87.208.95) (Ping timeout: 240 seconds)
[02:44:14] *** Quits: Tobbi (~Tobbi@2a02:8108:1240:48ec:959a:9961:e40e:6c97) (Ping timeout: 260 seconds)
[02:49:22] *** Quits: markong (~kvirc@213.146.188.203) (Quit: KVIrc 5.0.0 Aria http://www.kvirc.net/)
[02:49:43] *** Joins: Tobbi (~Tobbi@2a02:8108:1240:48ec:50f7:325a:95f:b4c1)
[02:51:43] *** Quits: plastico (~plastico@neomutt/plastico) (Quit: WeeChat 3.3)
[03:01:29] *** Quits: kenanmarasli (~kenanmara@user/kenanmarasli) (Quit: Leaving)
[03:25:33] *** Quits: RoKenn (~RoKenn@user/rokenn) (Quit: NSA proxy service interrupted)
[03:37:01] <RandomReader> rpav - re the ODR checks earlier, that probably sorts out as a casualty of the ABI obsession: linkers (especially unix-based ones) treat the world as-if C
[03:37:57] <RandomReader> msvc's linker actually catches some ODR violations others don't, because it *does* embed some additional information, but that's a fully-controlled stack that has essentially nothing to do with the OS and so doesn't have any artificial ABI constraints
[03:38:46] <RandomReader> different philosophy, and doesn't actually require any language changes to pull off
[03:43:07] <RandomReader> leonardus - cat appears to have good taste
[03:57:43] *** Quits: seninha (~seninha@user/seninha) (Quit: Leaving)
[04:00:57] *** Quits: imi (~imi@catv-89-132-115-236.catv.broadband.hu) (Ping timeout: 240 seconds)
[04:06:49] *** Joins: blackout69 (~blackout6@net-109-117-245-237.cust.vodafonedsl.it)
[04:08:11] *** Joins: lh_mouse (~lh_mouse@mingw-w64/developer/lhmouse)
[04:14:06] *** Joins: imi (~imi@catv-89-132-115-236.catv.broadband.hu)
[04:20:57] *** Quits: kaph (~kaph@net-2-38-107-19.cust.vodafonedsl.it) (Ping timeout: 240 seconds)
[04:22:07] *** Quits: Tobbi (~Tobbi@2a02:8108:1240:48ec:50f7:325a:95f:b4c1) (Quit: My MacBook has gone to sleep. ZZZzzzâ€¦)
[04:25:27] *** Quits: Jupp_S (~quassel@ip-88-153-154-129.hsi04.unitymediagroup.de) (Remote host closed the connection)
[04:26:41] *** Joins: ferdna (~ferdna@user/ferdna)
[04:30:37] *** Joins: leduyquang753 (~leduyquan@user/leduyquang753)
[04:40:33] *** Quits: Juliu (~Juliu@2a02:810b:c640:3ec0:1145:9ae9:835c:2c31) (Quit: Quit)
[04:44:57] *** Quits: imi (~imi@catv-89-132-115-236.catv.broadband.hu) (Ping timeout: 240 seconds)
[04:47:29] *** Parts: blackout69 (~blackout6@net-109-117-245-237.cust.vodafonedsl.it) ()
[04:48:03] *** Joins: frost (~frost@user/frost)
[04:52:55] *** Joins: lh_ideapad (~lh_mouse@mingw-w64/developer/lhmouse)
[04:58:37] *** Joins: imi (~imi@catv-89-132-115-236.catv.broadband.hu)
[05:07:29] *** Joins: kaph (~kaph@net-2-38-107-19.cust.vodafonedsl.it)
[05:10:51] *** Quits: AmR| (~AmREiSa@156.207.248.243) (Quit: Konversation terminated!)
[05:23:34] *** Joins: vdamewood (~vdamewood@fedora/vdamewood)
[05:23:52] *** Joins: malloy (~jimery@116.30.221.255)
[05:28:53] *** Joins: seninha (~seninha@user/seninha)
[05:40:06] *** Quits: npaperbot (~npaperbot@dodecahedron.m-ou.se) (Remote host closed the connection)
[05:40:16] *** Joins: npaperbot (~npaperbot@dodecahedron.m-ou.se)
[05:40:16] *** ChanServ sets mode: +v npaperbot
[05:53:16] *** Quits: seninha (~seninha@user/seninha) (Quit: Leaving)
[05:57:49] *** Joins: Juliu (~Juliu@2a02:810b:c640:3ec0:1145:9ae9:835c:2c31)
[06:01:16] *** Joins: seninha (~seninha@user/seninha)
[06:14:30] *** Quits: pulse (~pulse@user/pulse) (Quit: Join us @ www.indiedevs.net)
[06:20:47] *** Quits: seninha (~seninha@user/seninha) (Quit: Leaving)
[06:24:29] <very_sneaky> what compile options does everyone use for every build? Atm i have -Werror -Wall -Wextra -Wconversion -fsanitize=address and /W4 /WX /Wall /fsanitize=address - any others that I should consider using all the time?
[06:36:31] <very_sneaky> rpav: looks like you can attempt to auto-inline everything by passing the -finline-functions opt
[06:36:49] *** Quits: scoobydoo (~scooby@user/scoobydoo) (Read error: Connection timed out)
[06:37:59] *** Joins: scoobydoo (~scooby@user/scoobydoo)
[06:40:02] <very_sneaky> also, is it common to pass -fvisibility=hidden to get equivalent behvaiour on linux/unix to msvc's `__declspec(dll{import,export})`?
[06:42:12] *** Quits: DSpider (~DSpider@82.79.237.115) (Quit: Leaving)
[06:49:38] *** Quits: Roughy (~mdaw45ns@user/roughy) (Quit: Meadow Fresh milk)
[07:20:27] *** Joins: adeliktas9 (~adeliktas@i59F52E80.versanet.de)
[07:22:26] *** Quits: adeliktas (~adeliktas@i59F5F176.versanet.de) (Ping timeout: 245 seconds)
[07:22:26] *** adeliktas9 is now known as adeliktas
[07:27:57] <Alipha> very_sneaky: -fsanitize=address, leak,undefined
[07:28:10] <Alipha> Oops, no space
[07:28:41] <Alipha> And -D_GLIBCXX_DEBUG
[07:30:07] <Alipha> And by "all the time", I assume you mean debug builds. For release, no sanitizers or -D_GLIBCXX_DEBUG, and add -O2
[07:33:50] *** Joins: Jupp_S (~quassel@ip-88-153-154-129.hsi04.unitymediagroup.de)
[07:36:40] *** Joins: yates_home (~user@fv-nc-f7af8b91e1-234237-1.tingfiber.com)
[07:37:16] <yates_home> if i have a class which inherits from QDialog, how do i set the title bar title? setApplicationName() does not work
[07:44:13] <yates_home> setWindowTitle
[07:44:14] <yates_home> ok
[07:44:16] <yates_home> hokay.
[07:45:35] *** Quits: imi (~imi@catv-89-132-115-236.catv.broadband.hu) (Ping timeout: 256 seconds)
[07:49:16] <very_sneaky> Alipha: no sanitizers during release builds? any particular reason? and not -O3 in release?
[07:58:37] <Alipha> very_sneaky: sanitizers have a performance impact. Generally you don't want that in a release build. And -O3 is generally only marginally faster than -O2, so it's generally seen as not worth the extra build time
[07:59:11] *** Joins: imi (~imi@catv-89-132-115-236.catv.broadband.hu)
[08:00:36] <Alipha> very_sneaky: for address sanitizer, CPU slowdown usually between 2x-5x. Memory overhead 2x-3x
[08:02:48] <Alipha> Undefined sanitizer is only 20%, apparently
[08:04:14] <very_sneaky> huh. i thought that it was all static analysis when doing the compilation
[08:04:16] <very_sneaky> the more you know
[08:04:48] <very_sneaky> reading through the gcc docs it looks like the leak sanitizer is included in address sanitizer
[08:05:10] <very_sneaky> so -fsanitize=address,undefined should be enough
[08:32:17] *** Quits: great_taste (~great_tas@user/great-taste/x-5798414) (Quit: Client closed)
[08:44:55] *** Joins: PJBoy (~PJBoy@user/pjboy)
[08:46:19] *** Quits: Juliu (~Juliu@2a02:810b:c640:3ec0:1145:9ae9:835c:2c31) (Quit: Quit)
[09:07:22] *** Quits: lh_ideapad (~lh_mouse@mingw-w64/developer/lhmouse) (Ping timeout: 260 seconds)
[09:07:47] *** Joins: lh_ideapad (~lh_mouse@mingw-w64/developer/lhmouse)
[09:14:06] *** Quits: skapata (~Skapata@user/skapata) (Read error: Connection reset by peer)
[09:40:06] *** Quits: npaperbot (~npaperbot@dodecahedron.m-ou.se) (Remote host closed the connection)
[09:40:16] *** Joins: npaperbot (~npaperbot@dodecahedron.m-ou.se)
[09:40:16] *** ChanServ sets mode: +v npaperbot
[09:41:15] *** Quits: p-i- (~Ohmu@2403:6200:8978:eb29:a19b:c4d4:1e43:9f1f) (Remote host closed the connection)
[09:56:53] *** Joins: Juliu (~Juliu@2a02:810b:c640:3ec0:54d3:6b98:e460:5f30)
[09:57:03] *** Joins: p-i- (~Ohmu@2001:44c8:4610:1777:d479:2f2d:3aaa:a58d)
[10:08:10] <very_sneaky> TinoDidriksen: I don't think this looks _too_ unreadable: https://bpa.st/6FHQ. double up the `add_compile_options()` calls to save nested `if` statements
[10:08:23] *** Quits: lh_ideapad (~lh_mouse@mingw-w64/developer/lhmouse) (Ping timeout: 256 seconds)
[10:08:51] *** Joins: lh_ideapad (~lh_mouse@mingw-w64/developer/lhmouse)
[10:23:41] *** Quits: p-i- (~Ohmu@2001:44c8:4610:1777:d479:2f2d:3aaa:a58d) (Remote host closed the connection)
[10:36:58] *** Joins: p-i- (~Ohmu@2403:6200:8978:eb29:85a4:2121:8f52:ab6b)
[10:37:59] *** Quits: PJBoy (~PJBoy@user/pjboy) (Ping timeout: 252 seconds)
[10:43:57] *** Quits: imi (~imi@catv-89-132-115-236.catv.broadband.hu) (Ping timeout: 240 seconds)
[10:45:06] *** Joins: Tobbi (~Tobbi@2a02:8108:1240:48ec:24b8:9ed7:8e1f:c48)
[10:57:07] *** Joins: imi (~imi@catv-89-132-115-236.catv.broadband.hu)
[11:10:10] *** Quits: nshire (~nshire@user/nshire) (Quit: Leaving)
[11:10:37] *** Quits: Tobbi (~Tobbi@2a02:8108:1240:48ec:24b8:9ed7:8e1f:c48) (Ping timeout: 240 seconds)
[11:12:36] *** Joins: supernova (~AdminUser@2405:9800:ba11:6207:f842:e6d5:9dda:7d5b)
[11:13:22] <supernova> hi folks! Is it possible to integrate bios.h header with Linux c++ compiler?
[11:24:59] <very_sneaky> Alipha: how useful do you find setting -D_GLIBCXX_DEBUG? What I've read is that it changes the way the stdlib works, and immediately on trying it i'm getting errors triggered in the STL when running my test suite: https://bpa.st/EVYA
[11:27:04] <kalven> maybe that's a real issue?
[11:32:37] <Alipha> very_sneaky: I'm going to assume that's a real issue. Do you know what line of your code that's happening on?
[11:32:56] <LordKalma> I'd sure hope that !(a>a) would be true
[11:35:16] <Alipha> very_sneaky: that flag is just adding extra checks for out of bounds, invalid iterators, apparently being provided correct comparators, etc. It doesn't change functionality. Any runtime errors or different behavior would be the result of UB on your part
[11:36:32] <Alipha> very_sneaky:... did you pass in std::less_equal into a std::sort?
[11:43:37] *** Joins: ravan (~ravan@user/ravan)
[11:45:08] *** Quits: supernova (~AdminUser@2405:9800:ba11:6207:f842:e6d5:9dda:7d5b) (Quit: https://quassel-irc.org - Chat comfortably. Anywhere.)
[11:45:12] *** Quits: malloy (~jimery@116.30.221.255) (Ping timeout: 250 seconds)
[11:47:24] *** Joins: malloy (~jimery@116.30.221.255)
[11:48:30] <very_sneaky> Alipha: i'm pretty sure it's failing in this test somewhere: https://bpa.st/A5HA
[11:48:50] <very_sneaky> it doesn't give me a line or even a function, but the test that passed immediately prior to crashing was the one before this
[11:49:32] *** Joins: JohnMS (~JohnMS@2a02:a311:a344:9b00:4ecc:6aff:fed0:fdf)
[11:49:53] <very_sneaky> mmm. maybe it would be worth attaching a debugger to this
[11:50:38] <very_sneaky> all of that is xtensor code, basically, with the exception of my Money and CurrencyUnit objects
[11:51:23] *** Joins: Juliu_ (~Juliu@2a02:810b:c640:3ec0:54d3:6b98:e460:5f30)
[11:52:50] <ville> very_sneaky: https://gcc.gnu.org/onlinedocs/gcc-11.2.0/gcc/Static-Analyzer-Options.html#Static-Analyzer-Options is the static analyzer. possibly not that great with c++
[11:53:51] <very_sneaky> ville: ahh awesome, cheers
[11:54:30] *** Joins: Leo_V (~Leo@157.52.18.77)
[11:54:48] *** Quits: Juliu (~Juliu@2a02:810b:c640:3ec0:54d3:6b98:e460:5f30) (Ping timeout: 268 seconds)
[11:54:57] *** Quits: n3rdy1 (~n3rdy1@2601:281:c780:a510:84eb:b2e:7b61:4002) (Ping timeout: 240 seconds)
[11:56:17] *** Quits: Leone (~Leo@69-165-148-197.dsl.teksavvy.com) (Ping timeout: 240 seconds)
[11:57:04] <ville> as far as flags i've on every build that's pretty much: -std=c++## -Wall -Wextra -Wpedantic -Wconversion i guess
[11:57:19] <LordKalma> very_sneaky, btw, about yesterday
[11:57:37] <LordKalma> the thing about adding warning flags to preset files or command line is that if you write a library
[11:57:45] <LordKalma> users of your library don't want that shit hardcoded in
[11:58:06] <LordKalma> imagine using a library that hardcoded -Werror
[11:58:12] <LordKalma> really nasty shit
[11:58:42] <LordKalma> the CMakefiles for libraries should only and only and only include the *necessary* to build the library
[11:59:57] <very_sneaky> LordKalma: i just came up against that lol, looks like boost hardcodes -Werror
[12:00:09] <very_sneaky> at least the conan package variation does
[12:01:00] <very_sneaky> but yeah, I'm looking into the preset file option - haven't been able to find too much detailing their preferred usage though. Also doesn't look like they integrate with conan at all
[12:01:15] <very_sneaky> (usage for this specific use case)
[12:01:34] <LordKalma> if you don't want to learn preset files
[12:01:50] <LordKalma> what you can do is guard those behind `option(MYLIB_DEVELOPER_MODE OFF)`
[12:01:57] <LordKalma> and PLEASE default to off
[12:02:11] <very_sneaky> yeah gotcha
[12:02:24] <LordKalma> to learn how to use those things @friendlyanon's repo is great
[12:02:29] <LordKalma> he's the creator of cmake-init
[12:02:33] <LordKalma> I personaly dislike cmake init
[12:02:43] <LordKalma> but i kang code from its output sometimes
[12:03:03] <LordKalma> this is cmake-init
[12:03:04] <LordKalma> https://github.com/friendlyanon/cmake-init
[12:03:11] <LordKalma> I don't like it. Too opinionated and bloated
[12:03:13] <very_sneaky> thanks mate i'll have a look
[12:03:39] <LordKalma> but I like the output example repos:
[12:03:40] <LordKalma> https://github.com/friendlyanon/cmake-init-executable/blob/master/CMakePresets.json
[12:04:05] <LordKalma> but basically, don't be a dick to packagers/users when developing a library
[12:04:17] <LordKalma> if you're developing an executable.. anything's fair game :p
[12:04:29] <LordKalma> you shouldn't be a dick anyway, but at least is a victimless crime
[12:04:56] <ville> why would it matter for libs if you stick a -Werror in there?
[12:05:13] <LordKalma> with cmake there's the concept of transitive *everything*
[12:05:17] <LordKalma> including compiler flags :)
[12:05:30] <ville> so don't make them transitive
[12:05:45] <LordKalma> yes, that's an option
[12:05:55] <ville> that's the correct option
[12:06:36] <LordKalma> https://github.com/ruilvo/aether_dsp/blob/master/CMakeLists.txt#L31
[12:06:44] <LordKalma> very_sneaky, an example of guarding with dev mode ^
[12:08:10] <LordKalma> ville, well, to stop transitive dependencies, you can't -for example- use `add_compile_options`. YOu need `target_compile_options(<target> PRIVATE ...) for all targets`
[12:08:39] <LordKalma> and depending on the project that might constitute more work than an if-guard or a presets file
[12:08:48] <very_sneaky> that's a good point - i had that originally
[12:08:57] *** Quits: zmt00 (~zmt00@user/zmt00) (Ping timeout: 240 seconds)
[12:09:01] <ville> LordKalma: so do that. making things transitive that doesnt absolutely have to be transitive sounds like the bigger problem of your usage of cmake
[12:09:05] <very_sneaky> but i have 3 targets and it seemed unnecessarily verbose
[12:09:23] <LordKalma> ville, well, that's this whole rant :)
[12:09:31] <very_sneaky> knowing that that provides appropriate visibility/transitivity is a good reason to do it that way
[12:09:35] <LordKalma> that people shove shit on downstream users
[12:11:11] <LordKalma> ville, I think it was clear by my rant that I'm complaining about *others* usage of cmake :p
[12:12:12] <LordKalma> very_sneaky, if you join #cmake on the cpp-lang slack,  friendlyanon's there all the time ranting about people's usage of cmake. He's not a people person, despite what the nick would tell you, but he's right most of the time anyway haha
[12:13:02] <very_sneaky> LordKalma: yeah cheers, i did ask for a point in the right direction wrt presets there - i think friendlyanon's example one might be enough to get me started though
[12:13:09] <very_sneaky> even so, not sure how well that fits in with conan
[12:14:00] *** Joins: andreasbuhr (~quassel@p549dbe7b.dip0.t-ipconnect.de)
[12:14:13] <LordKalma> it fits in the sense that with conan you just don't use one
[12:14:20] <LordKalma> let conan decide the compiler
[12:14:22] <LordKalma> and BAM
[12:14:30] <LordKalma> is should just work
[12:14:50] <LordKalma> remember: the standalone cmake should be able to *build* the library (and propagate usage requirements)
[12:15:07] <LordKalma> but not shove your developer tooling downstream
[12:15:23] <LordKalma> (thus the AETHER_DEVELOPER_MODE OFF default :) )
[12:20:49] <very_sneaky> LordKalma: in your case, wouldn't it be cleaner to make your compile options PRIVATE for each of your targets rather than introduce a new "developer mode" option?
[12:21:07] <LordKalma> this ensures consistency
[12:21:14] <LordKalma> to not forget
[12:22:26] *** Joins: robod34 (Username@79.113.195.239)
[12:22:37] *** Quits: ferdna (~ferdna@user/ferdna) (Quit: Leaving)
[12:24:11] <ville> very_sneaky: forget the word "clean" and terms like "clean code". it's terminology for the snakeoil salesmen. it belongs in a class of terms that are dangerous: there is no definition, it can't be measured and it has implicit "good" connotations as a word in every person's mind
[12:24:43] <LordKalma> for sure
[12:25:10] <LordKalma> my dislike for cmake-init is a perfect example. @friendlyanon's thinks that's the epitome of clean cmake. I don't.
[12:25:37] <kalven> ville: what's better? maintainable? understandable?
[12:25:53] <LordKalma> I'd say consistent
[12:26:17] <ville> kalven: i am not sure. i'd try something that has a definition and hopefully can be measured
[12:26:43] <very_sneaky> alright, in this case i think s/cleaner/more idiomatic/
[12:26:48] <ville> kalven: i wouldn't look for a generic term i can just repeat mindlessly in every topic: clean abc, clean xyz...
[12:27:11] <LordKalma> idiomatic is also meaningless without soem framework of reference
[12:27:21] <very_sneaky> the framework is cmake
[12:28:36] <very_sneaky> as in, if it can be managed using specific features, that would be more idiomatic than managing it with general features, i.e. environment variables or user defined options
[12:32:44] <very_sneaky> ugh. i'm not sure i'm going to find this issue. the problem arising from having _GLIBCXX_DEBUG defined is triggered by this statement: { xt:xarray<Money> arr { money1, money2 }; ASSERT_NO_THROW(xt::sum(arr)();); }
[12:33:00] <very_sneaky> which means digging into the macro hell that is the xtensor library
[12:33:15] <very_sneaky> hmm. maybe i can try to reproduce it with an stl container directly
[12:33:45] <ville> kalven: if you're trying to express that it's your preference then just state it is so?
[12:37:05] <kalven> well just because something is hard to measure doesn't mean it *cant* be measured. it might just not be feasible to do it.
[12:41:02] *** Quits: imi (~imi@catv-89-132-115-236.catv.broadband.hu) (Ping timeout: 268 seconds)
[12:44:49] *** Joins: seninha (~seninha@user/seninha)
[12:49:44] <very_sneaky> great success, found the problem
[12:50:29] <LordKalma> "this was a triumph / I'm making a note here / huge success"
[12:52:00] <RandomReader> but what was the problem, suspense is torture!
[12:52:03] <very_sneaky> my custom type overloads the <= operator, but for some reason this doesn't work appropriately with iterators
[12:52:23] <LordKalma> so you have tests, but not tests for the custom operators you implement?
[12:52:30] <very_sneaky> i do, and they pass
[12:52:42] <very_sneaky> so .. not good tests? :P
[12:53:33] <RandomReader> doesn't work appropriately with iterators in what sense?
[12:54:02] *** Joins: imi (~imi@catv-89-132-115-236.catv.broadband.hu)
[12:57:14] <very_sneaky> this is a summary of what i've observed at the moment: https://bpa.st/RPTA
[12:57:19] <very_sneaky> i don't have a mwe yet
[12:58:14] <very_sneaky> the problem is with the comparators in std::sort
[12:58:19] <very_sneaky> or, that's where it's raised
[12:58:48] <ville> kalven: while that is true. sometimes measuring could be done in theory, but practical matters prevent it. for "clean" however it's killed already on the theoretical level: it does not have a definition
[12:59:32] <RandomReader> oh, yeah, you can't use less_equal for that
[13:00:20] <RandomReader> the comparator must provide strict weak ordering, and equality makes it unordered: https://en.cppreference.com/w/cpp/named_req/Compare
[13:01:47] <very_sneaky> RandomReader: huh. okay, cheers. that's what xtensor is doing :s
[13:02:13] *** Quits: Juliu_ (~Juliu@2a02:810b:c640:3ec0:54d3:6b98:e460:5f30) (Ping timeout: 240 seconds)
[13:03:44] <RandomReader> xtensor wrote the test you posted?
[13:12:35] *** JohnMS is now known as JohnMS_AWAY
[13:14:02] *** Joins: supernova (~quassel@2405:9800:ba11:6207:5d18:4a4d:84ce:6e30)
[13:15:51] <RandomReader> ...looks like they use it for std::is_sorted (with a comment), and std::lexicographical_compare
[13:16:25] <RandomReader> unfortunately their comment is incorrect, because the standard has other requirements: https://eel.is/c++draft/alg.sorting.general#3.sentence-3
[13:16:55] <RandomReader> this is one case I'm looking at: https://github.com/xtensor-stack/xtensor/blob/78aaac39143caa78da7c5c0734ccef957535f0c0/include/xtensor/xreducer.hpp#L295-L302
[13:17:02] <RandomReader> so they're just broken, assuming things about an implementation
[13:18:08] *** JohnMS_AWAY is now known as JohnMS
[13:21:48] *** Joins: plastico (~plastico@neomutt/plastico)
[13:22:26] <RandomReader> reported almost a year ago with no response: https://github.com/xtensor-stack/xtensor/issues/2296
[13:24:56] *** Joins: kenanmarasli (~kenanmara@user/kenanmarasli)
[13:34:48] <supernova> guys, what is the difference between time and local time from ctime heaer
[13:34:55] <supernova> ?
[13:35:29] <RandomReader> which things specifically?
[13:37:05] <TinoDidriksen> very_sneaky, that's much better, but I still don't see the need for generator expressions at all there.
[13:40:07] *** Quits: npaperbot (~npaperbot@dodecahedron.m-ou.se) (Remote host closed the connection)
[13:40:10] <ville> supernova: time() get's you time. localtime() converts the result of time to your local timezone...
[13:40:16] *** Joins: npaperbot (~npaperbot@dodecahedron.m-ou.se)
[13:40:16] *** ChanServ sets mode: +v npaperbot
[13:42:26] <ville> supernova: what time() measures is unspecified, but you can expect it to be relative to posix/unix epoch
[13:48:46] *** Joins: onizu (uid373383@id-373383.uxbridge.irccloud.com)
[13:50:18] *** Joins: john99 (~johnny@138.62.221.87.dynamic.jazztel.es)
[13:57:05] <TinoDidriksen> Are there any implementations where it's not the Unix epoch?
[14:02:36] <supernova> Wandbox is not working, where could i paste my code to share?
[14:04:41] <supernova> Works :) https://wandbox.org/permlink/a1pn9ik3FIXUo87s | how shoud i ammend the code to get proper data?
[14:08:57] *** Quits: lh_ideapad (~lh_mouse@mingw-w64/developer/lhmouse) (Ping timeout: 240 seconds)
[14:09:22] *** Joins: lh_ideapad (~lh_mouse@mingw-w64/developer/lhmouse)
[14:10:27] *** Joins: rito_ (~rito_gh@45.112.243.219)
[14:13:36] *** Joins: AmR (~AmREiSa@156.207.248.243)
[14:14:02] *** Quits: andreasbuhr (~quassel@p549dbe7b.dip0.t-ipconnect.de) (Quit: https://quassel-irc.org - Chat comfortably. Anywhere.)
[14:17:48] *** Joins: andreasbuhr (~quassel@p549dbe7b.dip0.t-ipconnect.de)
[14:18:56] <ville> supernova: what is "proper data"?
[14:20:10] <ville> supernova:  https://en.cppreference.com/w/cpp/chrono/c/localtime
[14:20:56] <supernova> int hours, minutes, seconds, days, month, years -> I suppose if we use struct tm it will convert seconds to corresponding data
[14:21:53] <ville> you never initialized your timeinfo with anything
[14:22:17] <ville> lines 22-24 you're just reading garbage from memory
[14:22:35] <supernova> oh
[14:22:48] <supernova> yes
[14:24:23] <supernova> how can i intialize it?
[14:26:32] <ville> 12:50:10           ville | supernova:  https://en.cppreference.com/w/cpp/chrono/c/localtime
[14:32:42] *** Quits: cursey (~cursey@user/cursey) (Quit: bye)
[14:33:35] *** Quits: ville (~ville@82-181-178-111.bb.dnainternet.fi) (Quit: ville)
[14:35:06] *** Joins: paul424 (~tom@ip-5-172-232-165.multi.internet.cyfrowypolsat.pl)
[14:35:58] *** Joins: ville (~ville@82-181-178-111.bb.dnainternet.fi)
[14:36:16] *** Quits: Inline (~Inline@2a02:908:1252:7a80::4f) (Remote host closed the connection)
[14:39:53] *** Quits: john99 (~johnny@138.62.221.87.dynamic.jazztel.es) (Remote host closed the connection)
[14:45:32] *** Joins: cursey (~cursey@user/cursey)
[14:52:26] *** Quits: hackkitten (~hackkitte@94.31.103.136) (Read error: Connection reset by peer)
[14:52:40] <supernova> Thanks Ville! Solved https://wandbox.org/permlink/K9E8yow9nFxq2uC7
[14:54:34] *** Quits: supernova (~quassel@2405:9800:ba11:6207:5d18:4a4d:84ce:6e30) (Quit: https://quassel-irc.org - Chat comfortably. Anywhere.)
[14:57:47] *** Joins: hackkitten (~hackkitte@94.31.103.136)
[15:08:34] *** Quits: chozorho (~chozorho@2601:146:300:c30::e14e) (Ping timeout: 260 seconds)
[15:08:49] *** Joins: supernova (~quassel@2405:9800:ba11:6207:5d18:4a4d:84ce:6e30)
[15:09:12] *** Joins: chozorho (~chozorho@2601:146:300:c30::e14e)
[15:10:59] *** Quits: supernova (~quassel@2405:9800:ba11:6207:5d18:4a4d:84ce:6e30) (Client Quit)
[15:12:13] *** Quits: seninha (~seninha@user/seninha) (Remote host closed the connection)
[15:14:13] *** Joins: supernova (~quassel@2405:9800:ba11:6207:5d18:4a4d:84ce:6e30)
[15:15:34] *** Joins: seninha (~seninha@user/seninha)
[15:19:36] *** Joins: callq (~callq@2409:4062:2d9d:1c4d:9431:33af:53b5:7599)
[15:28:11] <very_sneaky> RandomReader: huuuh. interesting. thanks for narrowing that down - you did it much faster than I could have
[15:28:22] <p-i-> How does UDP compare with TCP for transmitting a single packet? IIUC UDP is connectionless, but once a TCP connection has been made, is it a similar delivery-time to UDP? Is it A->B or A->B->A->B?
[15:28:58] <p-i-> *How does UDP compare (in terms of LATENCY) with TCP
[15:29:00] <very_sneaky> now that you linked the proposal, and that I can see the requirement is < comparison, the error message is starting to make sense
[15:30:00] <very_sneaky> p-i-: ability to parse it might be slight different, the recipient has to send an ACK back, UDP is best effort only, so you might get dropped packets
[15:30:27] <very_sneaky> or, lost packets more accurately
[15:32:55] <p-i-> very_sneaky: But for TCP, even if I have to send an ACK back to sender, I'm still receiving the data as A->B right? So the actual latency in transmission (if I'm sending from say USA to Tokyo) .. is this expected to be quite close?
[15:33:13] <ville> p-i-: for a single succesful packet under ideal conditions one would expect there to be little difference
[15:33:29] <p-i-> super, thanks!
[15:33:38] <ville> p-i-: but
[15:34:19] <ville> p-i-: you'll never have those ideal conditions in a live environment
[15:34:23] *** Quits: chozorho (~chozorho@2601:146:300:c30::e14e) (Ping timeout: 250 seconds)
[15:34:45] <p-i-> What are the main issues that would affect relative message-delivery-latency?
[15:34:56] <p-i-> (for a single packet)
[15:35:28] *** Joins: chozorho (~chozorho@2601:146:300:c30::e14e)
[15:36:18] <very_sneaky> probably the pathway each packet finds through the network
[15:36:29] <very_sneaky> i would imagine it's pretty dynamic
[15:38:16] <ville> is your connection truly ever a single packet?
[15:39:35] <ville> p-i-: also at which osi level of the stack are you measuring? when your os network stack gets the packet or when your application gets it?
[15:40:54] *** JohnMS is now known as JohnMS_AWAY
[15:40:57] *** JohnMS_AWAY is now known as JohnMS
[15:42:27] <p-i-> I'm sending a single packet (<4096 Bytes) from a Vultr box in the USA to an AWS EC2 box in Tokyo.
[15:43:22] *** Quits: paul424 (~tom@ip-5-172-232-165.multi.internet.cyfrowypolsat.pl) (Remote host closed the connection)
[15:45:37] *** Quits: johnny (~johnny@user/johnny) (Ping timeout: 240 seconds)
[15:46:02] *** Joins: johnny (~johnny@user/johnny)
[15:49:10] <TinoDidriksen> Why do you care about such minute latency differences?
[15:52:17] *** Quits: callq (~callq@2409:4062:2d9d:1c4d:9431:33af:53b5:7599) (Ping timeout: 240 seconds)
[15:52:28] <p-i-> I'm working on a nanotrading challenge... every millisecond counts!
[15:53:43] *** Joins: pulse (~pulse@user/pulse)
[15:54:23] <cbreak> p-i-: udp gives you freedom
[15:54:42] <cbreak> for example, you could send every packet twice, so that it'll arrive with higher likelyhood
[15:55:26] <cbreak> tcp works with timeouts, and packet IDs to request retransmissions, which requires 2 way communication or waiting
[15:56:13] <cbreak> you shouldn't assume to be able to have packets larger than 1500 bytes on the internet, including tcp/udp and ip headers, and including ethernet frames.
[15:56:25] <cbreak> it might work, but it might also require expensive fragmentation
[15:56:38] *** Joins: DSpider (DSpider@2a02:2f00:4ff:ffff::646c:689e)
[15:56:42] <ville> 1500 is already "too large" if that doesn't include the overhead of all your headers
[15:56:49] <cbreak> yes.
[15:57:08] <ville> so start off with ~1400 and work from there if you're looking at your own sent size
[15:57:31] <cbreak> I think there's a flag you can set that prevents fragmentation
[15:57:40] <cbreak> you'd get ICMP errors back instead
[15:57:52] <cbreak> that should help detect this too
[15:58:04] <cbreak> and ipv6 never fragments automatically as far as I know
[15:58:09] <p-i-> interesting. What would be a 'safe' payload size? I think I can get it down to < 512 bytes, I just didn't realize I was in danger of losing/fragmenting packets.
[15:58:34] <p-i-> I've used UDP in my Python prototype, but now I'm doing a C++ impl I'm wondering on the merits of switching to TCP.
[15:58:38] <cbreak> you're always in danger of losing packets
[15:59:01] <cbreak> that's why udp is not reliable, and why tcp has timeouts, acknowledgement packets and so on for retransmits
[15:59:02] <LordKalma> fast trading: python. and packet size if the worrying bit
[15:59:03] <LordKalma> sure
[15:59:27] <cbreak> p-i-: I'd probably use either ZMQ or UDP
[15:59:28] <ville> p-i-: write both tcp and udp implementations and measure is the correct answer
[15:59:36] <cbreak> if I'd care about something like latency
[15:59:52] <cbreak> but yes, measuring is better than guessing :D
[16:00:04] <p-i-> Yes, def.
[16:00:28] <cbreak> also, write your code to minimize copying.
[16:00:36] <cbreak> you're using linux, right?
[16:00:53] <p-i-> Anderstanding what's going on under the hood (at a basic level) is helping me also.
[16:00:55] <cbreak> they have a web server in kernel address space, to avoid kernel / userland switching
[16:00:58] <p-i-> Yup, ubuntu each end.
[16:01:15] <cbreak> you could try something similar, if you're crazy
[16:02:46] <p-i-> LordKalma: the main thing is that I transmit a packet A -> B half way around the globe. A->B->A->B would triple the latency of that hop. That's the main thing I'm checking.
[16:03:07] *** Quits: imi (~imi@catv-89-132-115-236.catv.broadband.hu) (Ping timeout: 256 seconds)
[16:03:13] <p-i-> Everything else is just info I'm grateful to put on a shelf for when I've profiled out the bottlenecks.
[16:03:18] <cbreak> fun: https://blog.cloudflare.com/how-to-achieve-low-latency/
[16:03:49] <cbreak> well, UDP packets are singular, unidirectional
[16:04:10] <LordKalma> compress, CRC, send
[16:04:10] <cbreak> if it arries on the other side, then it'll do so without requiring two way communication
[16:04:34] <cbreak> if it doesn't arrive, then no one wil ever know, without outside information :)
[16:07:28] *** Joins: Roughy (~mdaw45ns@user/roughy)
[16:13:38] *** Joins: callq (~callq@2409:4062:2d9d:1c4d:55f1:21c8:2f97:cb62)
[16:15:04] *** Joins: JohnMS_WORK (~JohnMS@2a02:a311:a344:9b00:4ecc:6aff:fed0:fdf)
[16:15:38] *** Quits: JohnMS (~JohnMS@2a02:a311:a344:9b00:4ecc:6aff:fed0:fdf) (Ping timeout: 268 seconds)
[16:15:41] *** Joins: imi (~imi@catv-89-132-115-236.catv.broadband.hu)
[16:27:29] <p-i-> Supposing I have vector<CURL *> handles(N); for(int i=0; i<N; ++i) { CURL* handle = ...; ...; handles[i] = handle; } ... is this safe? Or do I risk handle being deallocated, and handles[i] pointing to bad memory?
[16:28:23] *** JohnMS_WORK is now known as JohnMS
[16:28:40] <cbreak> p-i-: doesn't look safe at all
[16:28:47] <cbreak> raw pointers everywhere
[16:29:01] <cbreak> can't you wrap that curl stuff into some unique_ptr or similar?
[16:29:14] <cbreak> if you really want to use curl, maybe there's already a c++ wrapper for it
[16:29:35] <cbreak> also, don't use int
[16:29:38] <cbreak> use size_t
[16:30:07] *** Quits: cbreak (~cbreak@77-58-201-132.dclient.hispeed.ch) (Read error: Connection reset by peer)
[16:33:00] *** Joins: cbreak (~cbreak@77-58-201-132.dclient.hispeed.ch)
[16:34:29] *** Joins: RoKenn (~RoKenn@2001:a61:3432:ab01:7d8d:ddb6:3747:5085)
[16:34:29] *** Quits: RoKenn (~RoKenn@2001:a61:3432:ab01:7d8d:ddb6:3747:5085) (Changing host)
[16:34:29] *** Joins: RoKenn (~RoKenn@user/rokenn)
[16:35:03] *** Quits: RoKenn (~RoKenn@user/rokenn) (Client Quit)
[16:36:53] *** Joins: Deneb (~johnch@30.125.7.51.dyn.plus.net)
[16:41:48] *** Quits: AbleBacon (~AbleBacon@user/AbleBacon) (Read error: Connection reset by peer)
[16:54:27] *** Quits: supernova (~quassel@2405:9800:ba11:6207:5d18:4a4d:84ce:6e30) (Quit: No Ping reply in 210 seconds.)
[16:55:46] *** Joins: supernova (~quassel@2405:9800:ba11:6207:1d15:f766:97d9:3577)
[16:57:57] <ville> p-i-: it's fine
[16:58:28] <ville> p-i-: operator [] does not cause reallocations and iterator invalidation
[16:59:53] *** Quits: supernova (~quassel@2405:9800:ba11:6207:1d15:f766:97d9:3577) (Client Quit)
[17:00:53] *** Quits: JohnMS (~JohnMS@2a02:a311:a344:9b00:4ecc:6aff:fed0:fdf) (Quit: Konversation terminated!)
[17:01:05] *** Joins: supernova (~quassel@2405:9800:ba11:6207:64c3:9658:ad5:e621)
[17:02:17] <very_sneaky> anybody had any luck getting xtensor to work compiler explorer? or any other library that complains it can't find header files
[17:02:25] <very_sneaky> i'm getting "No such file or directory"
[17:05:18] *** Quits: supernova (~quassel@2405:9800:ba11:6207:64c3:9658:ad5:e621) (Client Quit)
[17:06:48] *** Joins: supernova (~quassel@2405:9800:ba11:6207:ddf5:edfd:cd22:2110)
[17:08:00] <ville> i would expect the compilers on that website run in very limited environments. or are you talking locally?
[17:09:55] *** Quits: chozorho (~chozorho@2601:146:300:c30::e14e) (Ping timeout: 250 seconds)
[17:10:45] *** Joins: chozorho (~chozorho@2601:146:300:c30::f5f4)
[17:10:57] *** Quits: supernova (~quassel@2405:9800:ba11:6207:ddf5:edfd:cd22:2110) (Ping timeout: 240 seconds)
[17:11:04] <very_sneaky> no, i meant on the website: https://godbolt.org/z/MrMsndj9x
[17:11:14] *** Joins: Tobbi (~Tobbi@2a02:8108:1240:48ec:cc19:3365:7e26:518d)
[17:11:25] <very_sneaky> it looks like it's running quite old versions
[17:12:12] *** Joins: supernova (~quassel@49.228.152.171)
[17:12:40] <very_sneaky> oh, i'm silly. it needed another library xtl
[17:20:44] *** Joins: PJBoy (~PJBoy@user/pjboy)
[17:21:49] *** Quits: hfsoulz (~hfsoulz@user/hfsoulz) (Quit: leaving)
[17:28:13] *** Joins: skapata (~Skapata@2804:14c:87b0:a6f9:d4c4:3787:7442:bb18)
[17:28:13] *** Quits: skapata (~Skapata@2804:14c:87b0:a6f9:d4c4:3787:7442:bb18) (Changing host)
[17:28:13] *** Joins: skapata (~Skapata@user/skapata)
[17:29:07] *** Joins: hfsoulz (~hfsoulz@user/hfsoulz)
[17:29:54] *** Quits: scoobydoo (~scooby@user/scoobydoo) (Read error: Connection timed out)
[17:33:19] *** Joins: scoobydoo (~scooby@user/scoobydoo)
[17:37:29] *** Joins: CoderCharmander (~CoderChar@netacc-gpn-4-205-32.pool.telenor.hu)
[17:40:07] *** Quits: npaperbot (~npaperbot@dodecahedron.m-ou.se) (Remote host closed the connection)
[17:40:17] *** Joins: npaperbot (~npaperbot@dodecahedron.m-ou.se)
[17:40:17] *** ChanServ sets mode: +v npaperbot
[17:41:50] *** Quits: ravan (~ravan@user/ravan) (Read error: Connection reset by peer)
[17:42:12] *** Joins: ravan (~ravan@user/ravan)
[17:42:51] *** Joins: blyat-73 (~hjgkjhgkj@46.235.96.249)
[17:47:55] <ville> the zig guys are taking on some interesting aspects. here's their take on portabe linux executables: https://www.youtube.com/watch?v=pq1XqP4-qOo
[17:48:08] <ville> err portable
[18:03:57] *** Quits: imi (~imi@catv-89-132-115-236.catv.broadband.hu) (Ping timeout: 240 seconds)
[18:03:59] *** Joins: sysctl (~sysctl@88.215.77.255)
[18:12:17] *** Quits: lh_ideapad (~lh_mouse@mingw-w64/developer/lhmouse) (Ping timeout: 240 seconds)
[18:12:44] *** Joins: lh_ideapad (~lh_mouse@mingw-w64/developer/lhmouse)
[18:13:05] *** Joins: magla (~gelignite@55d4dfc1.access.ecotel.net)
[18:14:11] *** Quits: leduyquang753 (~leduyquan@user/leduyquang753) (Quit: Gotta go, see you guys later.)
[18:16:34] <LordKalma> very_sneaky, I told you friendlyanon would intervene
[18:16:48] <very_sneaky> :P
[18:17:02] *** Joins: imi (~imi@catv-89-132-115-236.catv.broadband.hu)
[18:17:07] *** Quits: kaph (~kaph@net-2-38-107-19.cust.vodafonedsl.it) (Ping timeout: 268 seconds)
[18:20:54] *** Quits: scoobydoo (~scooby@user/scoobydoo) (Read error: Connection timed out)
[18:22:04] *** Joins: scoobydoo (~scooby@user/scoobydoo)
[18:22:18] <rpav> i feel like there ought to be a `with(...) { .. }`
[18:22:36] <rpav> or really let(..) i guess, not really different
[18:22:41] <LordKalma> context managers are so cool
[18:23:10] <rpav> if(QSignalBlocker b(x); true) b->do_thing(); // lame but looks nicer than freestanding {}
[18:23:51] <rpav> let(QSignalBlocker(x), int x = 42, ...) { ... } // ought to work, and work around MVP for kicks
[18:25:02] *** Quits: lh_ideapad (~lh_mouse@mingw-w64/developer/lhmouse) (Ping timeout: 260 seconds)
[18:29:10] <rpav> or i guess, let( .. ; .. ; .. ) because statements, but any values would simply be lifetime-extended to the block whether they're named or not
[18:30:34] <LordKalma> you could use RAII and lamdas and some templating to make that I guess
[18:35:07] <rpav> yeah i think the only thing you _couldn't_ do would be `int x`, or at least easily, or at least without manually grabbing values or some other hack
[18:35:26] <rpav> you could definitely let(make_tuple(...), []() { ... });
[18:36:22] <rpav> if only the language focused on syntactically-nice tuples and lambdas
[18:40:05] *** Quits: frost (~frost@user/frost) (Ping timeout: 256 seconds)
[18:50:41] *** Quits: Hello71 (~Hello71@wireguard/contributor/hello71) (Remote host closed the connection)
[18:51:29] *** Joins: n3rdy1 (~n3rdy1@2601:281:c780:a510:f129:8ed3:b1ff:82ed)
[18:51:37] *** Joins: Hello71 (~Hello71@wireguard/contributor/hello71)
[18:58:03] <PJBoy> why would you want to force declarations to be on a single line?
[18:58:13] <PJBoy> freestanding {} is way better
[18:58:57] *** Quits: CoderCharmander (~CoderChar@netacc-gpn-4-205-32.pool.telenor.hu) (Ping timeout: 240 seconds)
[19:02:50] *** Quits: andreasbuhr (~quassel@p549dbe7b.dip0.t-ipconnect.de) (Quit: https://quassel-irc.org - Chat comfortably. Anywhere.)
[19:11:41] *** Quits: supernova (~quassel@49.228.152.171) (Quit: https://quassel-irc.org - Chat comfortably. Anywhere.)
[19:12:09] <rpav> why would they be on a single line
[19:12:53] <rpav> one or two may be conveniently single-lined, but it's more a "this block is specifically for this raii thing and/or assignment"
[19:13:55] <rpav> or single-line single-statement raii which is sortof annoying as-is, e.g. the above QSignalBlocker
[19:15:56] *** Joins: spaceangel (~spaceange@ip-78-102-216-202.net.upcbroadband.cz)
[19:16:08] <xkoncek> did you know you can store lambdas (by value / ptr / ref) as an object data member?
[19:16:23] <rpav> yes, for numerous reasons ;)
[19:16:25] <xkoncek> it just requires a bit of template acrobatics + a constructor
[19:16:49] <rpav> for one, you couldn't really do anything with them otherwise; for two they're "just structs" and therefore act like structs
[19:17:13] <rpav> yeah the annoying bit is they're all anonymously-uniquely-typed
[19:17:28] <xkoncek> i store a pointer to lambda + a pointer to its operator()
[19:17:51] <rpav> tangentially, C++ lacks nice built-in facilities for dynamic function management
[19:17:54] *** Joins: RoKenn (~RoKenn@2001:a61:3432:ab01:7d8d:ddb6:3747:5085)
[19:17:54] *** Quits: RoKenn (~RoKenn@2001:a61:3432:ab01:7d8d:ddb6:3747:5085) (Changing host)
[19:17:54] *** Joins: RoKenn (~RoKenn@user/rokenn)
[19:18:00] <rpav> xkoncek: why
[19:18:10] <rpav> that sounds like a recipe for breakage
[19:18:12] <xkoncek> my own std::function
[19:18:22] <xkoncek> i mean a bit different than i said
[19:18:42] <rpav> well if you're doing `<F> struct myfunc { F f; ... };` then you should be good
[19:19:11] <xkoncek> hmm, i did it elsewhere, not here
[19:19:21] <rpav> and also `myfunc(F f) : f(std::move(f)) {}`
[19:19:40] <rpav> otherwise if you do F& or F* you're going to be storing dangling refs
[19:19:58] *** Quits: lh_mouse (~lh_mouse@mingw-w64/developer/lhmouse) (Read error: Connection reset by peer)
[19:20:58] *** Joins: xardas (~xardas@149.233.51.127)
[19:21:12] <xkoncek> btw i experimented with reinterpret casting a pointer to lambda to a pointer to my own named struct with operator()
[19:21:22] <rpav> eugh, my any_fun implementation heh
[19:21:23] <xkoncek> with the same signature
[19:21:34] <xkoncek> it did work, but it is an ugly UB
[19:21:52] <xkoncek> and isn't any better than my current solution
[19:23:24] *** Joins: Crassus (~Crassus@user/crassus)
[19:24:43] <xkoncek> https://gitlab.com/night-ripper/nwd/-/blob/c599a46c18b5918b3be426a453fad710b3b32513/src/main/cpp/utility/invoker.hpp
[19:24:57] <xkoncek> good thing that non-capturing lambdas can be converted to fptrs
[19:25:57] *** Quits: chozorho (~chozorho@2601:146:300:c30::f5f4) (Ping timeout: 240 seconds)
[19:27:02] *** Joins: chozorho (~chozorho@2601:146:300:c30::e14e)
[19:28:47] <rpav> weird, tuple construction isn't copy/move-elided?
[19:34:34] <rpav> qt blocking _outgoing_ rather than _incoming_ signals seems pretty silly
[19:34:49] <rpav> really, qt not just implicitly blocking signal recursion is silly
[19:34:51] *** Joins: supernova (~quassel@2405:9800:ba11:6207:472:31f:89a1:2f3f)
[19:35:11] *** Joins: CoderCharmander (~CoderChar@netacc-gpn-4-205-32.pool.telenor.hu)
[19:39:29] *** Joins: Tokamak (~Tokamak@172.58.188.174)
[19:44:12] *** Quits: supernova (~quassel@2405:9800:ba11:6207:472:31f:89a1:2f3f) (Quit: https://quassel-irc.org - Chat comfortably. Anywhere.)
[19:45:49] *** Quits: imi (~imi@catv-89-132-115-236.catv.broadband.hu) (Ping timeout: 256 seconds)
[19:52:21] *** Joins: namo (~nomo@95.87.208.95)
[19:56:34] <cbreak> Qt signals or posix signals?
[19:57:00] *** Joins: CodeMouse92 (~CodeMouse@user/codemouse92)
[19:57:12] <cbreak> Qt signals are syncronous if the target lives in the current thread, asyncronous otherwise
[19:57:17] <cbreak> (by default)
[19:59:09] *** Joins: imi (~imi@catv-89-132-115-236.catv.broadband.hu)
[19:59:38] <rpav> qt
[20:01:03] <rpav> actually probably the whole model is fucked so it can't even simply do the easy thing, though it could _probably_ at least pass along whether the current signal is from a user interaction or not
[20:01:20] <rpav> so you could sortof check the easy thing on its behalf
[20:04:36] *** Joins: troller (~p@178.34.163.250)
[20:04:53] *** Joins: gioyik (~gioyik@gateway/tor-sasl/gioyik)
[20:06:13] *** Quits: namo (~nomo@95.87.208.95) (Ping timeout: 256 seconds)
[20:12:27] *** Joins: great_taste (~great_tas@user/great-taste/x-5798414)
[20:14:34] *** Joins: zmt00 (~zmt00@user/zmt00)
[20:25:29] *** Joins: nojhan (uid443807@id-443807.lymington.irccloud.com)
[20:30:50] *** Quits: jancoow (~jancoow@user/jancoow) (Read error: Connection reset by peer)
[20:31:25] *** Joins: jancoow (~jancoow@user/jancoow)
[20:32:29] *** Joins: varioust (~varioust@72-46-48-28.lnk.ne.static.allophone.net)
[20:39:55] <AmR> Who know and class for personal name cases ?
[20:41:05] *** Quits: jancoow (~jancoow@user/jancoow) (Remote host closed the connection)
[20:41:30] *** Joins: jancoow (~jancoow@user/jancoow)
[20:42:53] *** Quits: Crassus (~Crassus@user/crassus) (Quit: Textual IRC Client: www.textualapp.com)
[20:43:03] <BurumaSerafuku> !grab AmR
[20:43:03] <nolyc> BurumaSerafuku: The operation succeeded.
[20:47:14] <AmR> BurumaSerafuku: ?
[20:47:18] *** Quits: Deneb (~johnch@30.125.7.51.dyn.plus.net) (Quit: Leaving)
[20:47:19] *** Quits: jancoow (~jancoow@user/jancoow) (Read error: Connection reset by peer)
[20:47:43] *** Joins: jancoow (~jancoow@user/jancoow)
[20:50:45] *** Quits: sysctl (~sysctl@88.215.77.255) (Quit: leaving)
[20:52:53] <ville> AmR: 0) don't double post 1) that message doesn't make any sense in english
[20:53:31] *** Quits: jancoow (~jancoow@user/jancoow) (Read error: Connection reset by peer)
[20:54:36] *** Joins: jancoow (~jancoow@user/jancoow)
[20:58:13] <AmR> I got what I need thanks for ALLAH.
[20:58:20] <AmR> ville: https://www.w3.org/International/questions/qa-personal-names
[21:11:23] *** Quits: seninha (~seninha@user/seninha) (Ping timeout: 256 seconds)
[21:13:17] *** Joins: rajkosto (~rajkosto@93-86-92-233.dynamic.isp.telekom.rs)
[21:18:21] *** Quits: onizu (uid373383@id-373383.uxbridge.irccloud.com) (Quit: Connection closed for inactivity)
[21:19:08] *** Joins: Simplar (~Simplar@188.163.93.76)
[21:23:26] *** Quits: xardas (~xardas@149.233.51.127) (Quit: Client closed)
[21:34:04] *** Quits: Simplar (~Simplar@188.163.93.76) (Quit: Going offline, see ya! (www.adiirc.com))
[21:40:07] *** Quits: npaperbot (~npaperbot@dodecahedron.m-ou.se) (Remote host closed the connection)
[21:40:17] *** Joins: npaperbot (~npaperbot@dodecahedron.m-ou.se)
[21:40:17] *** ChanServ sets mode: +v npaperbot
[21:44:49] *** Quits: varioust (~varioust@72-46-48-28.lnk.ne.static.allophone.net) (Ping timeout: 256 seconds)
[21:46:26] *** Quits: scoobydoo (~scooby@user/scoobydoo) (Read error: Connection timed out)
[21:46:43] *** Joins: varioust (~varioust@rrcs-76-79-47-154.west.biz.rr.com)
[21:48:21] *** Joins: scoobydoo (~scooby@user/scoobydoo)
[21:51:44] *** Quits: varioust (~varioust@rrcs-76-79-47-154.west.biz.rr.com) (Ping timeout: 268 seconds)
[21:52:54] *** Joins: varioust (~varioust@72-46-48-28.lnk.ne.static.allophone.net)
[21:54:56] *** Quits: CoderCharmander (~CoderChar@netacc-gpn-4-205-32.pool.telenor.hu) (Ping timeout: 245 seconds)
[22:04:42] *** Quits: gioyik (~gioyik@gateway/tor-sasl/gioyik) (Ping timeout: 276 seconds)
[22:10:57] *** Quits: great_taste (~great_tas@user/great-taste/x-5798414) (Quit: Client closed)
[22:12:37] *** Joins: gioyik (~gioyik@gateway/tor-sasl/gioyik)
[22:13:42] *** Joins: great_taste (~great_tas@user/great-taste/x-5798414)
[22:14:57] *** Quits: callq (~callq@2409:4062:2d9d:1c4d:55f1:21c8:2f97:cb62) (Ping timeout: 240 seconds)
[22:16:02] *** Quits: imi (~imi@catv-89-132-115-236.catv.broadband.hu) (Ping timeout: 260 seconds)
[22:19:39] *** Quits: gioyik (~gioyik@gateway/tor-sasl/gioyik) (Ping timeout: 276 seconds)
[22:23:01] *** Quits: scoobydoo (~scooby@user/scoobydoo) (Read error: Connection timed out)
[22:24:39] *** Joins: scoobydoo (~scooby@user/scoobydoo)
[22:25:21] *** Joins: gioyik (~gioyik@gateway/tor-sasl/gioyik)
[22:26:50] *** Joins: seninha (~seninha@user/seninha)
[22:28:00] *** Joins: imi (~imi@catv-89-132-115-236.catv.broadband.hu)
[22:30:42] *** Quits: gioyik (~gioyik@gateway/tor-sasl/gioyik) (Ping timeout: 276 seconds)
[22:46:26] *** Joins: gioyik (~gioyik@gateway/tor-sasl/gioyik)
[23:01:48] *** Quits: scoobydoo (~scooby@user/scoobydoo) (Read error: Connection timed out)
[23:03:28] *** Joins: scoobydoo (~scooby@user/scoobydoo)
[23:16:12] *** Quits: gioyik (~gioyik@gateway/tor-sasl/gioyik) (Ping timeout: 276 seconds)
[23:18:52] *** Joins: Inline (~Inline@2a02:908:1252:7a80::4f)
[23:23:44] *** Joins: gioyik (~gioyik@gateway/tor-sasl/gioyik)
[23:30:32] *** Quits: rajkosto (~rajkosto@93-86-92-233.dynamic.isp.telekom.rs) (Read error: Connection reset by peer)
[23:31:21] *** Quits: varioust (~varioust@72-46-48-28.lnk.ne.static.allophone.net) (Ping timeout: 256 seconds)
[23:32:06] *** Quits: troller (~p@178.34.163.250) (Ping timeout: 260 seconds)
[23:33:06] *** Joins: varioust (~varioust@72-46-48-28.lnk.ne.static.allophone.net)
[23:34:09] *** Joins: Juliu (~Juliu@2a02:810b:c640:3ec0:3478:2738:1572:60f4)
[23:34:40] *** Joins: rajkosto (~rajkosto@178.220.166.84)
[23:37:59] *** Joins: HvszrStykp (~X@81.171.62.86)
[23:38:08] *** Joins: CoderCharmander (~CoderChar@20014C4C12563000C96363670EDAE354.catv.pool.telekom.hu)
[23:38:09] *** Quits: CoderCharmander (~CoderChar@20014C4C12563000C96363670EDAE354.catv.pool.telekom.hu) (Remote host closed the connection)
[23:40:45] *** Quits: great_taste (~great_tas@user/great-taste/x-5798414) (Quit: Ping timeout (120 seconds))
[23:41:14] *** Joins: great_taste (~great_tas@user/great-taste/x-5798414)
[23:46:03] <great_taste> !rq
[23:46:03] <nolyc> great_taste: <Renderwww> You just have to completely utilize proactive wins to progressively synergize cloudified schemas.
[23:50:28] <LordKalma> 1rq
[23:50:40] <LordKalma> !rq
[23:50:40] <nolyc> LordKalma: <rpav> if only we had iterators that weren't indexes
[23:51:17] <great_taste> how could you generate type ids which are stable across different builds and units of execution, etc? Something that could be derived from the name of the type for example
[23:51:50] <LordKalma> Q_OBJECT
[23:51:52] * LordKalma runs
[23:52:11] <great_taste> damn
[23:54:45] <rpav> probably Q_OBJECT won't work if you're dealing with DLLs
[23:54:57] <LordKalma> Q_PLUGIN
[23:54:58] <rpav> otherwise it's fairly simple to implement your own "ctti" so to speak
[23:54:59] <LordKalma> it sure does :p
[23:55:00] <ville> what does derived mean? as in should it somehow be recognizable to a human that this comes from X?
[23:56:21] <ville> or is this just: inputs: X, Y, Z output: ID? aka a hash function?
[23:57:32] <xkoncek> sometimes you gotta appreciate the unification Java provides
[23:57:43] <xkoncek> fully qualified names, type descriptors
[23:58:06] *** Quits: Colt (~Colt@user/colt) (Remote host closed the connection)
[23:58:32] *** Joins: Colt (~Colt@user/colt)
[23:58:49] <great_taste> yes, like a hash
[23:59:08] <great_taste> could stringize the type name but that wouldn't work with templates
[23:59:12] <ville> xkoncek:  if only the first thing stroustrup did was implement static reflection
[23:59:48] <cbreak> static reflection was is not as important as many features c++ has in my opinion
