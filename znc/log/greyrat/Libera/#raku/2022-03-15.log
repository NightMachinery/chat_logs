[00:16:13] *** sjn_ is now known as sjn
[00:23:20] <discord-raku-bot> <Nemokosch#9980> what's the semantics of junctions? I find it very confusing but I don't think it's an issue per se
[00:23:27] <discord-raku-bot> <Nemokosch#9980> to show what I mean:
[00:23:51] <discord-raku-bot> <Nemokosch#9980> so all(1,4) > 3
[00:25:09] <discord-raku-bot> <Nemokosch#9980> this is False - makes sense, not all values are greater than 3
[00:25:09] <discord-raku-bot> <Nemokosch#9980> so all(1,4) <= 3
[00:25:09] <discord-raku-bot> <Nemokosch#9980> this is also False - again, makes sense, not all values are maximum 3
[00:26:04] <discord-raku-bot> <Nemokosch#9980> so all(1, 4) == 1
[00:26:31] <[Coke]> m: say so all(1,4) == 1
[00:26:32] <camelia> rakudo-moar 377564339: OUTPUT: «False␤»
[00:27:00] <[Coke]> (does camelia not work on discord bot sends? Guess that makes sense)
[00:27:13] <discord-raku-bot> <Nemokosch#9980> also False - still makes sense, not all values are equal to 1
[00:27:13] <discord-raku-bot> <Nemokosch#9980> so all(1, 4) != 1
[00:27:13] <discord-raku-bot> <Nemokosch#9980> this is True, even though not all values differ from 1 obviously
[00:27:20] <discord-raku-bot> <Nemokosch#9980> I get that this is because ! is a meta-operator but that's not the semantics I need
[00:27:34] <discord-raku-bot> <Nemokosch#9980> <= is not the same as !>
[00:27:49] <discord-raku-bot> <Nemokosch#9980> now, I want the non-meta negative counterpart of ==
[00:29:12] <[Coke]> m: say any(1,4) &infix<!=> 1; say so any(1,4) &infix<!=> 1
[00:29:12] <camelia> rakudo-moar 377564339: OUTPUT: «5===SORRY!5=== Error while compiling <tmp>␤Two terms in a row␤at <tmp>:1␤------> 3say any(1,4) &infix<!=>7⏏5 1; say so any(1,4) &infix<!=> 1␤    expecting any of:␤        infix␤        infix stopper␤        postfix␤        st…»
[00:29:17] <discord-raku-bot> <Nemokosch#9980> Camelia does work on discord sends every now and then btw but it's laggy so I didn't want to use it
[00:29:33] <[Coke]> m: say any(1,4) &infix:<!=> 1; say so any(1,4) &infix:<!=> 1
[00:29:33] <camelia> rakudo-moar 377564339: OUTPUT: «all(any(1, 4), True)␤True␤»
[00:33:03] <[Coke]> so I showed both because I'm not sure the uncollapsed version is correct, but the collapsed version is.
[00:35:29] <discord-raku-bot> <Nemokosch#9980> again, what is the semantics, then?
[00:37:33] <discord-raku-bot> <Nemokosch#9980> oh, if you write &infix:<!=> instead of !=, it works well
[00:37:33] <discord-raku-bot> <Nemokosch#9980> I mean... if this really makes this sort of difference, I might open a problem solving issue for this...
[00:49:55] *** Joins: jjido (~Denis@2a02:c7f:5c91:e700:30f3:94a8:6231:86ed)
[00:52:01] <discord-raku-bot> <Nemokosch#9980> no, the infix:<!=> version isn't actually right either
[00:52:20] <discord-raku-bot> <Nemokosch#9980> in fact it's completely wrong, as illustrated by the uncollapsed version
[00:54:05] <discord-raku-bot> <Nemokosch#9980> m: say so any(0,1,4) &infix:<!=> 1;
[00:54:15] <discord-raku-bot> <Nemokosch#9980> ... anyway, this will be False because of the falsiness of 0
[00:56:09] <discord-raku-bot> <Nemokosch#9980> wait no, with any, it's no problem
[00:56:10] <discord-raku-bot> <Nemokosch#9980> with all, however
[00:58:13] <discord-raku-bot> <Nemokosch#9980> all(1,4) &infix:<!=> 2 #True
[00:58:14] <discord-raku-bot> <Nemokosch#9980> vs
[00:58:14] <discord-raku-bot> <Nemokosch#9980> all(0,1,4) &infix:<!=> 2 #False
[01:06:56] *** Quits: abraxxa (~ahartmai@tsa-tc-flod.t-systems.at) (Remote host closed the connection)
[02:00:54] *** Quits: djerius (~quassel@pool-108-20-43-199.bstnma.fios.verizon.net) (Ping timeout: 252 seconds)
[02:03:24] *** Joins: djerius (~quassel@pool-108-20-43-199.bstnma.fios.verizon.net)
[02:04:31] *** Quits: jjido (~Denis@2a02:c7f:5c91:e700:30f3:94a8:6231:86ed) (Quit: My MacBook Air has gone to sleep. ZZZzzz…)
[02:08:19] *** Joins: jjido (~Denis@2a02:c7f:5c91:e700:5952:c394:d6fd:fe62)
[02:29:21] <discord-raku-bot> <Nemokosch#9980> anyone who can say why 
[02:29:21] <discord-raku-bot> <Nemokosch#9980> 1+infix:<+> 4 
[02:29:21] <discord-raku-bot> <Nemokosch#9980> is 5 will get a cookie
[02:31:15] <discord-raku-bot> <Nemokosch#9980> seems to me it gets parsed as 1+(+4)
[02:31:22] <discord-raku-bot> <Nemokosch#9980> so `any(1,4) &infix:<!=> 4` was a lie all along
[02:32:02] <moon-child> m: my &f = &infix:<+>; say 1 + f 4
[02:32:03] <camelia> rakudo-moar 377564339: OUTPUT: «5␤»
[02:32:05] <discord-raku-bot> <Nemokosch#9980> it's in fact any(1,4) & (!= 4)
[02:33:19] <discord-raku-bot> <Nemokosch#9980> and for some reason this != 4 is even `True`
[02:33:19] <discord-raku-bot> <Nemokosch#9980> infix:<!=> 4
[02:33:19] <discord-raku-bot> <Nemokosch#9980> now this parsing might not be intended, I don't actually know
[02:34:33] <moon-child> yes
[02:42:18] <discord-raku-bot> <Nemokosch#9980> added a comment to the issue I've just created for != being so "meta" for junctions
[02:50:49] *** Quits: squashable6 (squ-able@2001:41d0:2:5eb5::) (Remote host closed the connection)
[02:51:38] *** Joins: squashable6 (squ-able@2001:41d0:2:5eb5::)
[02:57:55] *** ChanServ sets mode: -o [Coke]
[03:04:05] *** Quits: monkey_ (~user@181.174.69.124) (Remote host closed the connection)
[03:04:54] <ugexe>  any(0,4) != 0 is False #3748 -- https://github.com/rakudo/rakudo/issues/3748
[03:09:19] *** Quits: ilogger2 (~ilogger2@colabti.org) (Remote host closed the connection)
[03:13:20] <discord-raku-bot> <Nemokosch#9980> > This may be a notabug, but it's really unexpected and annoying behavior. This makes junctions way too unpredictable to work with.
[03:28:48] *** Quits: jjido (~Denis@2a02:c7f:5c91:e700:5952:c394:d6fd:fe62) (Quit: My MacBook Air has gone to sleep. ZZZzzz…)
[03:37:30] *** Quits: reportable6 (rep-able@2001:41d0:2:5eb5::) (Remote host closed the connection)
[03:39:02] *** Joins: reportable6 (rep-able@2001:41d0:2:5eb5::)
[03:42:43] <ugexe> would make a good default linter rule
[03:45:39] <discord-raku-bot> <Nemokosch#9980> "don't use junctions" xD
[03:46:08] <discord-raku-bot> <Nemokosch#9980> also, I think this whole grammar (in the natural linguistics sense) trickery is unproductive because it's naturally (haha, no pun) informal
[03:47:43] <discord-raku-bot> <Nemokosch#9980> when I look at any(0,4) != 0, I definitely don't even know instantly what I should expect
[03:47:44] <discord-raku-bot> <Nemokosch#9980> however, to the counterpart all(0,4) != 0, I instantly know what I expect: I expect False
[03:48:30] <discord-raku-bot> <Nemokosch#9980> the same thing that makes any(0,4) != 0 False, makes all(0,4) != 0 True, they aren't connected by natural language use but the de Morgan equivalence
[03:53:55] <discord-raku-bot> <Nemokosch#9980> I don't want to sound too egoistic but to be honest, I feel I could make at least 5 completely different points against the current "specced" behavior
[03:54:17] <discord-raku-bot> <Nemokosch#9980> from interpreting != x as "different from x" and drawing the comparison of <= and > to == and != to speaking up against designing a supposedly open and inclusive language with very specifically anglo-centric mindset
[03:56:20] <discord-raku-bot> <Nemokosch#9980> Sometimes I feel Raku could be the most elegant language that can possibly fit into the mainstream - and there are some random design decisions that just don't belong to it, as if some intruder came and sabotaged
[04:35:29] <leont> Frankly I consider combining negated operators and junctions a code smell. While I do think the current behavior is the better one, both options are problematic
[04:35:39] <leont> Just use none instead of any and all ambiguity disappears
[04:39:03] *** Quits: evalable6 (eva-able@2001:41d0:2:5eb5::) (Remote host closed the connection)
[04:39:03] *** Quits: linkable6 (lin-able@2001:41d0:2:5eb5::) (Remote host closed the connection)
[04:41:49] *** Joins: evalable6 (eva-able@2001:41d0:2:5eb5::)
[05:15:35] *** Quits: bd3i (~bd3i@167.99.97.12) (Ping timeout: 252 seconds)
[05:15:54] *** Joins: bd3i (~bd3i@167.99.97.12)
[05:39:38] *** Joins: linkable6 (lin-able@2001:41d0:2:5eb5::)
[05:44:51] *** Joins: frost (~frost@user/frost)
[05:48:18] *** Quits: frost (~frost@user/frost) (Client Quit)
[05:58:31] *** Quits: vrurg (~vrurg@45.74.95.181) (Quit: Leaving...)
[06:28:45] *** Quits: eseyman (~manu@lfbn-idf1-1-393-122.w86-242.abo.wanadoo.fr) (Ping timeout: 252 seconds)
[06:30:21] *** Joins: eseyman (~manu@lfbn-idf1-1-282-130.w86-195.abo.wanadoo.fr)
[07:27:09] *** Joins: frost (~frost@user/frost)
[07:54:38] *** Quits: euandreh (~euandreh@2804:14c:33:9fe5:a4f7:3458:36c4:ffd7) (Ping timeout: 250 seconds)
[07:55:52] <Voldenet> junctions are cool, but `(0,4).grep(* != 0).Bool` is way more obvious
[07:56:21] <Voldenet> or ` (0,4).grep(* != 0).so`
[07:56:32] *** Joins: euandreh (~euandreh@2804:14c:33:9fe5:e51b:ac6b:af96:5d6c)
[08:35:07] *** Joins: childlikempress (~moon-chil@cardinal.elronnd.net)
[08:36:01] *** Quits: moon-child (~moon-chil@cardinal.elronnd.net) (Ping timeout: 256 seconds)
[08:49:01] *** childlikempress is now known as moon-child
[08:54:35] *** Joins: gabiruh_ (~gabiruh@vps19177.publiccloud.com.br)
[08:55:18] *** Quits: gabiruh (~gabiruh@vps19177.publiccloud.com.br) (Read error: Connection reset by peer)
[09:04:18] *** Joins: mexen (uid495612@user/mexen)
[09:18:09] *** Quits: squashable6 (squ-able@2001:41d0:2:5eb5::) (Remote host closed the connection)
[09:37:11] *** Quits: reportable6 (rep-able@2001:41d0:2:5eb5::) (Remote host closed the connection)
[09:39:43] *** Joins: reportable6 (rep-able@2001:41d0:2:5eb5::)
[09:52:20] *** Joins: squashable6 (squ-able@2001:41d0:2:5eb5::)
[10:25:23] *** Quits: discord-raku-bot (~RakuIRC@ip5f5ab74b.dynamic.kabel-deutschland.de) (Remote host closed the connection)
[10:25:48] *** Joins: discord-raku-bot (~RakuIRC@ip5f5ab74b.dynamic.kabel-deutschland.de)
[10:47:40] *** Joins: abraxxa (~ahartmai@smtp.hartmaier.priv.at)
[10:49:21] *** Joins: abraxxa1 (~ahartmai@tsa-tc-flod.t-systems.at)
[10:51:52] *** Quits: abraxxa (~ahartmai@smtp.hartmaier.priv.at) (Ping timeout: 250 seconds)
[11:02:04] *** Joins: nebuchadnezzar (~dad@82-65-17-178.subs.proxad.net)
[11:14:04] *** Joins: floppy_disk (~floppy_di@user/floppy-disk/x-6577422)
[11:35:18] *** Joins: jjido (~Denis@94.4.149.217)
[11:41:41] *** Quits: Sgeo (~Sgeo@user/sgeo) (Read error: Connection reset by peer)
[11:46:14] <discord-raku-bot> <Nemokosch#9980> Junctions exist to allow auto-threading, though
[11:46:15] <discord-raku-bot> <Nemokosch#9980> So not only are they more expressive, they can be more performant
[11:48:18] <discord-raku-bot> <Nemokosch#9980> leont: the question still arises why you see != as a negated operator and <= not a negated operator
[11:49:09] <discord-raku-bot> <Nemokosch#9980> Especially talking about numbers. It's a mere technicality whether this operator is like "not equal" or like "either less or more"
[11:50:22] <discord-raku-bot> <Nemokosch#9980> I even tried the Pascal-ish <> in case that exists as a proper operator - of course it doesn't
[11:52:26] <discord-raku-bot> <Nemokosch#9980> Also, I would like to hear why it would be problematic to let != act upon junction values directly in this case. What would be semantically unclear?
[11:53:29] <moon-child> != is an alias for !==.  x !== y is !(x == y).  And ! collapses junctions
[11:57:13] <discord-raku-bot> <Nemokosch#9980> Yes, so much we figured several times
[11:58:02] <moon-child> That is why the current behaviour is considered more consistent than the alternative
[11:58:15] <moon-child> it is acknowledged that both behaviours lead to inconsistencies
[11:58:46] <discord-raku-bot> <Nemokosch#9980> This behavior can be altered, though
[11:59:11] <moon-child> it can.  The question is whether new behaviour would be more consistent.  I posit that it would not
[12:00:42] <discord-raku-bot> <Nemokosch#9980> Neither does != have to be an alias for !==, nor does the ! Meta-operator go outside of the junction
[12:00:43] <discord-raku-bot> <Nemokosch#9980> I would like to know why either of these solutions would be less consistent
[12:01:04] <discord-raku-bot> <Nemokosch#9980> When they would give a semantically valid result instead of a useless one
[12:03:14] <moon-child> != as different from !== I do not like.  They look too similar.  What I think would make the most sense is that regular ! should not collapse junctions; e.g. !any(True, False) should be any(False, True); and there should be a single designated junction-collapser
[12:07:41] <discord-raku-bot> <Nemokosch#9980> I think outsiders would expect != to be a proper operator - in fact, they will rarely use the negation meta-operator.
[12:07:41] <discord-raku-bot> <Nemokosch#9980> Putting that aside, !(blah == foo) could still be understood on distinct values of a junction and frankly this "over-lifting" seems to be the least defensible
[12:13:07] <discord-raku-bot> <Nemokosch#9980> On a different note: I think the most knowledgeable part of the community is too "satisfied" (perhaps this isn't the best word) with knowing how something works and why, while paying little to no attention to the abstractions and reasonings supposed users come with.
[12:14:10] <moon-child> fwiw I also think != is a serious problem
[12:14:34] <moon-child> but again: I don't think a solution has yet been proposed which effects more good than ill
[12:19:52] <discord-raku-bot> <Nemokosch#9980> An example. Of course I'm happy to know why (@a, @b) = (@b, @a) works the way it does - but the thing is, that knowledge doesn't stop me from thinking it's a massive design flaw and in my mind it just _doesn't belong to Raku_
[12:20:54] *** Quits: jjido (~Denis@94.4.149.217) (Quit: My MacBook Air has gone to sleep. ZZZzzz…)
[12:24:34] *** Joins: Darkcoal (~user@user/Darkcoal)
[12:42:31] *** Joins: dakkar (~dakkar@home.thenautilus.net)
[13:17:02] *** Quits: Darkcoal (~user@user/Darkcoal) (Ping timeout: 250 seconds)
[13:18:50] *** Joins: Darkcoal (~user@user/Darkcoal)
[13:25:16] *** Quits: Darkcoal (~user@user/Darkcoal) (Ping timeout: 250 seconds)
[13:27:09] *** Joins: Darkcoal (~user@user/Darkcoal)
[13:31:14] <Geth> ¦ docker: sorairolake++ created pull request #48: Update base images
[13:31:14] <Geth> ¦ docker: review: https://github.com/Raku/docker/pull/48
[14:06:36] *** Quits: Xliff (~XliffDroi@pool-71-255-227-73.washdc.east.verizon.net) (Quit: Leaving)
[14:19:18] <floppy_disk> how do you properly do a test run of a module/project?
[14:23:26] <lizmat> personally, I let App::Mi6 set up things for me, and then run 'mi6 test'  :-)
[14:24:05] <gfldex> `zef test .` works too
[14:24:11] <lizmat> there's also "zef test" in a properly set up module distribution
[14:24:17] <lizmat> gfldex++
[14:24:25] <El_Che> hi lizmat 
[14:24:34] <El_Che> gfldex, floppy_disk 
[14:24:41] <lizmat> El_Che o/
[14:25:12] <gfldex> i'm oldschool and use make and a fancy script: https://gfldex.wordpress.com/2020/08/01/dropin-replacement/
[14:34:03] *** Joins: jjido (~Denis@2a02:c7f:5c91:e700:2994:1fbd:6642:1fc1)
[14:39:36] <floppy_disk> thanks a lot
[14:39:40] *** Quits: floppy_disk (~floppy_di@user/floppy-disk/x-6577422) (Quit: Leaving)
[15:03:40] *** Joins: dogbert17 (~dogbert@c83-253-59-194.bredband.tele2.se)
[15:08:20] *** Quits: TempIRCLogger (~RakuIRC@ipv4-wenzperl.connected.by.freedominter.net) (Remote host closed the connection)
[15:08:32] *** Joins: TempIRCLogger (~RakuIRC@ipv4-wenzperl.connected.by.freedominter.net)
[15:12:56] *** Quits: TempIRCLogger (~RakuIRC@ipv4-wenzperl.connected.by.freedominter.net) (Remote host closed the connection)
[15:13:03] *** Joins: TempIRCLogger (~RakuIRC@ipv4-wenzperl.connected.by.freedominter.net)
[15:17:54] *** Joins: razetime (~quassel@117.193.4.244)
[15:18:58] *** Quits: Geth (~LizBot@ipv4-wenzperl.connected.by.freedominter.net) (Remote host closed the connection)
[15:19:30] *** Joins: Geth (~LizBot@ipv4-wenzperl.connected.by.freedominter.net)
[15:19:40] *** Quits: RakuIRCLogger (~RakuIRC@ipv4-wenzperl.connected.by.freedominter.net) (Remote host closed the connection)
[15:19:50] *** Joins: RakuIRCLogger (~RakuIRC@ipv4-wenzperl.connected.by.freedominter.net)
[15:22:16] *** Quits: TempIRCLogger (~RakuIRC@ipv4-wenzperl.connected.by.freedominter.net) (Remote host closed the connection)
[15:22:25] *** Joins: TempIRCLogger (~RakuIRC@ipv4-wenzperl.connected.by.freedominter.net)
[15:22:28] *** Quits: TempIRCLogger (~RakuIRC@ipv4-wenzperl.connected.by.freedominter.net) (Remote host closed the connection)
[15:23:06] *** Joins: TempIRCLogger (~RakuIRC@ipv4-wenzperl.connected.by.freedominter.net)
[15:37:36] *** Quits: reportable6 (rep-able@2001:41d0:2:5eb5::) (Remote host closed the connection)
[15:39:47] *** Joins: reportable6 (rep-able@2001:41d0:2:5eb5::)
[16:33:37] *** Joins: vrurg (~vrurg@45.74.95.181)
[16:36:45] *** Quits: vrurg (~vrurg@45.74.95.181) (Client Quit)
[16:38:09] *** Joins: vrurg (~vrurg@45.74.95.181)
[17:12:49] *** Quits: frost (~frost@user/frost) (Ping timeout: 256 seconds)
[17:17:11] *** Quits: jjido (~Denis@2a02:c7f:5c91:e700:2994:1fbd:6642:1fc1) (Quit: My MacBook Air has gone to sleep. ZZZzzz…)
[17:21:12] *** Joins: Sgeo (~Sgeo@user/sgeo)
[17:50:57] *** Quits: dogbert17 (~dogbert@c83-253-59-194.bredband.tele2.se) (Ping timeout: 240 seconds)
[17:51:18] *** Joins: dogbert17 (~dogbert@c83-253-59-194.bredband.tele2.se)
[18:24:47] *** Quits: discord-raku-bot (~RakuIRC@ip5f5ab74b.dynamic.kabel-deutschland.de) (Ping timeout: 256 seconds)
[18:25:00] *** Joins: discord-raku-bot (~RakuIRC@ip5f5ab74b.dynamic.kabel-deutschland.de)
[18:34:21] * lizmat clickbaits https://rakudoweekly.blog/2022/03/14/2022-011-tau-2/
[18:52:15] <[Coke]> .seen ryn1x
[18:52:17] <tellable6> [Coke], I saw ryn1x 2019-07-06T06:48:04Z in #perl6: <ryn1x> huh... not only do you need to add the & when calling the sub with the if statement modifier, but you also have to add the parens.... without the parens there is no error, but the sub does not do anything....
[19:04:41] <[Coke]> I like Terminal::Spinners, but would like a way to pin it to the bottom of the output window while other output scrolls past (or something similar)
[19:05:45] *** Joins: jjido (~Denis@2a02:c7f:5c91:e700:2994:1fbd:6642:1fc1)
[19:12:02] <ugexe> i wrote a blog post explaining how to do that long ago -- https://deathbyperl6.com/create-a-perl6-terminal-progress-bar/ -- it probably doesn't work anymore! lol
[19:13:30] <[Coke]> ugexe++
[19:17:14] *** Quits: jjido (~Denis@2a02:c7f:5c91:e700:2994:1fbd:6642:1fc1) (Quit: My MacBook Air has gone to sleep. ZZZzzz…)
[19:20:25] <[Coke]> wow, lifted your script there: it ran once, and now it keeps dying with a "no exception handler located for warn" on something in core.c :)
[19:22:00] <ugexe> the code in https://github.com/ugexe/zef/blob/7a43186974e2937a39e85e5bd7816e0003e8455a/lib/Zef/CLI/StatusBar.pm6#L86-L97 might still work
[19:22:21] <ugexe> (not just the highlighted code, but that entire module)
[19:27:58] <[Coke]> to be clear, no longer at zef master, right?
[19:28:09] <[Coke]> (can't use use your hidden module)
[19:29:26] <ugexe> right
[19:30:37] <ugexe> https://gist.github.com/ugexe/b9ff851d15f4ade27b8b59f9012c6de3
[19:30:52] <ugexe> that is a slightly different variant i found. it worked twice in a row
[20:17:14] *** Quits: linkable6 (lin-able@2001:41d0:2:5eb5::) (Remote host closed the connection)
[20:17:14] *** Quits: evalable6 (eva-able@2001:41d0:2:5eb5::) (Remote host closed the connection)
[20:18:52] *** Joins: evalable6 (eva-able@2001:41d0:2:5eb5::)
[20:19:32] *** Quits: discord-raku-bot (~RakuIRC@ip5f5ab74b.dynamic.kabel-deutschland.de) (Remote host closed the connection)
[20:19:39] *** Joins: discord-raku-bot (~RakuIRC@ip5f5ab74b.dynamic.kabel-deutschland.de)
[20:31:51] *** Quits: razetime (~quassel@117.193.4.244) (Ping timeout: 250 seconds)
[20:45:08] *** Quits: abraxxa1 (~ahartmai@tsa-tc-flod.t-systems.at) (Remote host closed the connection)
[20:46:40] *** Joins: abraxxa (~ahartmai@tsa-tc-flod.t-systems.at)
[20:59:03] *** Quits: mexen (uid495612@user/mexen) (Quit: Connection closed for inactivity)
[21:11:29] *** Quits: djerius (~quassel@pool-108-20-43-199.bstnma.fios.verizon.net) (Ping timeout: 252 seconds)
[21:13:03] *** Joins: djerius (~quassel@pool-108-20-43-199.bstnma.fios.verizon.net)
[21:13:25] *** Quits: dakkar (~dakkar@home.thenautilus.net) (Ping timeout: 240 seconds)
[21:18:18] *** Joins: linkable6 (lin-able@2001:41d0:2:5eb5::)
[21:28:08] *** Joins: Nick53 (~Nick@24.246.120.10)
[21:28:49] <Nick53> hi
[21:30:12] *** Quits: Nick53 (~Nick@24.246.120.10) (Client Quit)
[21:37:49] *** Quits: reportable6 (rep-able@2001:41d0:2:5eb5::) (Remote host closed the connection)
[21:40:18] *** Joins: reportable6 (rep-able@2001:41d0:2:5eb5::)
[22:31:42] *** Joins: gcd (gd@104-9-69-236.lightspeed.nsvltn.sbcglobal.net)
[22:34:14] *** Parts: gcd (gd@104-9-69-236.lightspeed.nsvltn.sbcglobal.net) ()
[23:05:43] *** Joins: jjido (~Denis@2a02:c7f:5c91:e700:2994:1fbd:6642:1fc1)
[23:12:39] *** Quits: Darkcoal (~user@user/Darkcoal) (Quit: Darkcoal)
[23:22:56] <[Coke]> ugexe: ugh. I made a stripped down version of that that just does a very simple class replacement... bitten by the bug that \r doesn't work on windows.
[23:23:16] *** Quits: p6steve (~stephenro@81.141.53.40) (Ping timeout: 250 seconds)
[23:30:05] *** Quits: jrjsmrtn_ (~jrjsmrtn@ip-83-134-41-224.dsl.scarlet.be) (Quit: ZNC 1.8.2 - https://znc.in)
[23:32:25] <ugexe> yeah thats probably half the reason i removed it from zef
[23:32:55] *** Joins: jrjsmrtn (~jrjsmrtn@ip-83-134-41-224.dsl.scarlet.be)
[23:33:25] *** Joins: morte_ (~user@181.174.69.124)
[23:42:07] *** Quits: abraxxa (~ahartmai@tsa-tc-flod.t-systems.at) (Remote host closed the connection)
[23:49:06] <Geth> ¦ App-Rakubrew: 81d9950637 | (Patrick Böker)++ | release-stuff/README.md
[23:49:07] <Geth> ¦ App-Rakubrew: Add upload info to release guide
[23:49:07] <Geth> ¦ App-Rakubrew: review: https://github.com/Raku/App-Rakubrew/commit/81d9950637
[23:51:33] *** Quits: jrjsmrtn (~jrjsmrtn@ip-83-134-41-224.dsl.scarlet.be) (Ping timeout: 252 seconds)
[23:52:07] <[Coke]> I found something that makes me thing something more complicated with \b might work.
[23:55:03] *** Joins: jrjsmrtn (~jrjsmrtn@ip-83-134-41-224.dsl.scarlet.be)
[23:59:16] * [Coke] checks his spam folder and finds a lot of cpan phishing sends.
