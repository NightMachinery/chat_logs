[01:03:22] *** Joins: FightingFalcon (~sdasavcsg@user/fightingfalcon)
[01:35:40] *** Joins: RougeR (~RougeR@user/rouger)
[01:40:35] *** Quits: xsperry (~as@user/xsperry) (Remote host closed the connection)
[01:41:01] *** Joins: xsperry (~as@user/xsperry)
[01:41:25] <birkoff> how do I prevent two inline-block divs from wrapping out of line on resize ?
[01:41:54] *** Joins: jazzy (~jaziz@2600:380:4547:d128:a1e2:2a56:7617:ad7e)
[01:43:38] <entuland> what should be the behavior if you don't have enough room for both, birkoff?
[01:45:15] <birkoff> the divs should be resized, each
[01:45:23] <birkoff> keeping a proportion of 50%-50%
[01:46:01] <entuland> put them in a grid layout
[01:46:22] <entuland> that is, stop using inline-block
[01:46:34] <entuland> and let the grid layout determine their placement and sizes
[01:46:56] <entuland> you may need a wrapper
[01:47:43] *** Joins: jazzy2 (~jaziz@2600:380:4547:d128:9497:ff4e:a49b:d10b)
[01:48:26] <entuland> if you can't add a wrapper and can't use the grid layout there, you could try and force them to have 50% width (but you may also need to take in account for any whitespace between them) - this is a suboptimal solution
[01:48:49] *** Quits: jazzy (~jaziz@2600:380:4547:d128:a1e2:2a56:7617:ad7e) (Ping timeout: 245 seconds)
[01:49:56] <hassoon> 'evening
[01:50:23] <entuland> hey there hassoon
[01:50:42] *** Quits: Cata (~Cata@user/cata) (Quit: Leaving)
[01:51:08] <hassoon> entuland: hey
[01:55:06] <entuland> o/
[01:59:16] *** Joins: jwisbell35 (~jwisbell3@047-036-214-124.res.spectrum.com)
[02:05:07] <hassoon> birkoff: fiddle, always make a fiddle
[02:05:45] <birkoff> how can I prevent overflow and keep each greed cell at a minimum visible width when the other one is resized ? and how can I make the resizability interdepedent to both divs as if they are attached ? https://jsfiddle.net/tz2uhbyg/
[02:07:14] <birkoff> i.e. no gaps when resizing
[02:07:33] <hassoon> birkoff: want to remove scrollbars? okey, the next part is not clear for me
[02:07:38] <hassoon> birkoff: what do you want to achieve
[02:08:43] <entuland> birkoff, you're doing unnecessary styling there: https://jsfiddle.net/entuland/wbjayz23/
[02:09:25] <entuland> the main container takes care of placing and resizing the contents (the two cells)
[02:09:41] <entuland> you don't need to give them a minimum width or an height either
[02:09:52] <entuland> as you can see from my version, I'm setting the height on the container
[02:10:14] <entuland> the scrollbars where there because you used "scroll" instead of "auto" in the overflow property
[02:10:18] <hassoon> is he worried about the cells sizes ?
[02:10:45] <entuland> not sure, there is not enough data there to understand the full scenario
[02:11:11] <birkoff> entuland: i actually needed those scrollbars so that 'resize: horizontal' could work
[02:11:54] <hassoon> birkoff: in that case , you ned to make other sub container inside the cell
[02:12:22] <hassoon> birkoff: and that sub container is the element that will be scrollable, whether horizontally or vertically
[02:12:24] <entuland> you can use auto on overflow-x: https://jsfiddle.net/entuland/ywx8Lqcd/
[02:13:06] <birkoff> alright, but when i resize either of the cells , an empty gap is shown
[02:13:25] <birkoff> but i want those divs to be attached to each other neatly
[02:13:28] <entuland> define "emtpy gap" better
[02:13:39] <entuland> you gave the grid a gap yourself
[02:13:40] <hassoon> define resizing other cells too
[02:13:47] <birkoff> try to resize and see ?
[02:14:00] <birkoff> hassoon: grabbing the corner resize handle
[02:14:02] <hassoon> are you intending to make resizble cells ?
[02:14:05] <birkoff> and moving it left or right
[02:14:13] <entuland> is this what you want? https://jsfiddle.net/entuland/twb5dfme/
[02:14:46] <birkoff> entuland:  no. you missed the part where i want user-resizable divs
[02:14:53] <hassoon> what ?
[02:15:07] <hassoon> are the cells supposed to be resizable ?
[02:15:29] <entuland> I don't see any facility to allow user resizing of that vertical division
[02:15:34] <entuland> in your original fiddle
[02:15:48] <birkoff> hassoon: yes
[02:15:49] <entuland> oh now I see
[02:15:54] <entuland> the bottom right corner
[02:16:11] <hassoon> does he havea resize rule on the cells ?
[02:16:13] <entuland> sorry, that's not going to work as you expect it to work
[02:16:15] <hassoon> * have a *
[02:16:23] <entuland> yes, he has resizable divs there
[02:16:35] <birkoff> https://ibb.co/0jVcb64
[02:16:35] <entuland> check the original fiddle and look for the bottom right handle
[02:16:46] <hassoon> entuland: was looking at youe version, where was that
[02:16:48] <birkoff> this is what happens after resizing the left cell to the left side
[02:17:00] <entuland> I removed it in my version, hassoon, ignore my version
[02:17:29] <hassoon> there is no need for him to make grid's cells resizable
[02:17:35] <entuland> I agree
[02:17:37] <hassoon> we should know what heis up to at whole
[02:17:39] <entuland> but that's what he wants
[02:17:45] <hassoon> * what he is *
[02:17:56] <birkoff> hassoon: ultimately, i would like to have a thing similar to jsfiddle draggable code panels
[02:18:08] <entuland> then you're doing it wrong, birkoff
[02:18:09] <birkoff> where they can be dragged left or right and the result panel also enlarge or shrink
[02:18:13] <hassoon> don't do that using grids
[02:18:22] <birkoff> meh
[02:18:29] <hassoon> birkoff: and, what you're trying to do is doable using javascript as well
[02:18:39] <hassoon> birkoff: a css only approach here is impossible
[02:18:42] <entuland> yes
[02:18:46] <hassoon> birkoff: as a starup, use flex layout
[02:18:53] <hassoon> * startup
[02:19:12] <hassoon> birkoff: you can use a prepared library available for you a well
[02:19:19] <hassoon> made for splitting areas
[02:19:43] <birkoff> i would rather not to if ithere's not too much to code
[02:20:01] <entuland> either way, you can't achieve that in pure CSS
[02:20:14] <hassoon> birkoff: if you're not willing to implement it from scrath on your own, then look up a dedicated library, they are everywhere in google
[02:20:15] <entuland> you need either custom JS (which isn't too much in this case) or a library
[02:20:44] *** jazzy2 is now known as jazzy
[02:20:50] <birkoff> what would i need the js for ?
[02:21:12] <hassoon> birkoff: javascript is the programming language of the web, you can use it for everything
[02:21:28] <birkoff> i mean for my problem
[02:21:32] <hassoon> birkoff: you can even use it instead of css
[02:21:46] <hassoon> birkoff: do you know what javascript is ?
[02:21:48] <entuland> you need JS to handle the interaction
[02:21:51] <hassoon> ^^
[02:23:16] <hassoon> birkoff: jsfiddle's panels functioning is ultimately made with javascript, for interations and resizing logic
[02:23:34] <birkoff> i thought css could handle that
[02:23:45] <entuland> not in that way
[02:24:02] <entuland> you could achieve a partial result by only making one of your divs resizable
[02:24:19] <birkoff> hassoon: why would I want a flex and not a grid ?
[02:24:35] <birkoff> entuland: that could work
[02:24:57] *** Joins: kristijonas (~kristijon@78-56-32-39.static.zebra.lt)
[02:25:01] <birkoff> the left one could be draggable
[02:25:05] <birkoff> (resizable)
[02:25:11] <birkoff> but the right one will have to adjust immediately
[02:25:51] <entuland> I'm trying to do that but it's doing funky stuff
[02:27:08] <hassoon> birkoff: grid is not suitable for that
[02:27:38] <hassoon> birkoff: i've seen dedicated libraries using flex layout to manage the resizable-cells' sizes
[02:28:02] <hassoon> entuland: trying it using textareas as cells here
[02:29:58] <hassoon> entuland: a meh, resize:both makes the div resizable
[02:30:10] <entuland> there; https://jsfiddle.net/entuland/nr7ztLeg/
[02:32:01] <hassoon> birkoff: ya don't use grid, you might make a minimal functioning resizing thing, use flex for that, grid is bad for sizing
[02:32:16] *** Joins: drej (~drej@user/drej)
[02:32:41] <entuland> but I personally don't like it because the resize interaction is limited to that small corner, doesn't let you use the actual division between the two divs to resize, it forces you to have the scrollbars (or maybe not, not sure) and finally doesn't keep the ratio between the two divs as you resize the window
[02:33:22] <entuland> yes, you don't need to keep the scrollbars visible: https://jsfiddle.net/entuland/msh1fa9y/
[02:33:32] <hassoon> ^^
[02:33:34] <entuland> the resize handle is still there, it's just barely visible
[02:33:53] *** Joins: P1RATEZ (piratez@cpe98524ab27125-cm98524ab27123.cpe.net.cable.rogers.com)
[02:34:04] <entuland> even though you can achieve the above with pure CSS, for UX you should really use JS there
[02:34:23] <hassoon> yep
[02:37:08] <hassoon> birkoff: resizable-panels UI systems should not be reduced to some css child play, take the opportunity to know how those UI systems are implemented using javascript
[02:40:21] *** Quits: jwisbell35 (~jwisbell3@047-036-214-124.res.spectrum.com) (Quit: Leaving)
[02:43:34] *** Joins: twinsignal (~twinsigna@static-198-54-129-84.cust.tzulo.com)
[03:15:53] <hassoon> i had it with network-manager not connecting to internet in ubuntu ffs
[03:16:04] <hassoon> same machine in windows everything works
[03:24:23] *** Quits: FightingFalcon (~sdasavcsg@user/fightingfalcon) ()
[03:46:14] *** Quits: twinsignal (~twinsigna@static-198-54-129-84.cust.tzulo.com) (Quit: Leaving)
[04:48:17] <birkoff> should I use an id= or class= for sub-div's of a cell size?
[04:55:25] <entuland> depends on the context, there is no rule of thumb other than the fact that IDs can't be duped
[04:55:43] <entuland> if the markup alone is enough to identify, you may get away without using classes or IDs at all
[04:57:42] *** Joins: ttys000 (~ttys000@user/ttys000)
[05:02:19] *** Quits: RougeR (~RougeR@user/rouger) (Ping timeout: 244 seconds)
[05:07:40] *** Quits: P1RATEZ (piratez@cpe98524ab27125-cm98524ab27123.cpe.net.cable.rogers.com) ()
[05:09:35] *** kevr_ is now known as kevr
[05:20:44] *** Quits: entuland (~entuland@user/entuland) (Ping timeout: 264 seconds)
[05:33:07] *** Quits: kristijonas (~kristijon@78-56-32-39.static.zebra.lt) (Read error: Connection reset by peer)
[05:49:22] *** Joins: Crassus (~Crassus@user/crassus)
[05:49:55] *** Quits: bradp (~bradp@cpe-70-92-7-182.wi.res.rr.com) (Quit: ZNC - https://znc.in)
[06:00:54] <birkoff> divs are pretty common so it's either class or id
[06:01:26] *** Joins: jwisbell35 (~jwisbell3@047-036-214-124.res.spectrum.com)
[06:22:40] <FunkyBob> divs are grossly over utilised
[06:34:51] <hassoon> a contentEditable div is comparable to a whole form control
[06:35:05] <hassoon> div are magic
[06:35:06] <hassoon> <3
[06:35:10] <hassoon> divs *
[06:43:24] *** Quits: pavonia (~user@user/siracusa) (Quit: Bye!)
[06:51:34] <FunkyBob> contentEditable is not limited to divs...
[06:53:29] <hassoon> FunkyBob: did i claim that ? nope
[06:54:20] <FunkyBob> you sure seemed to imply it...
[06:56:29] <hassoon> nope
[07:16:30] *** Quits: stenno (~stenno@user/stenno) (Ping timeout: 264 seconds)
[07:41:46] *** Joins: grys (~kvirc@botters/gry)
[07:46:48] *** Joins: stenno (~stenno@user/stenno)
[07:58:58] *** Joins: P1RATEZ (piratez@cpe98524ab27125-cm98524ab27123.cpe.net.cable.rogers.com)
[08:42:58] *** Parts: grys (~kvirc@botters/gry) (No boundaries on the net!)
[08:43:41] *** Quits: stenno (~stenno@user/stenno) (Ping timeout: 268 seconds)
[09:08:53] *** Joins: stenno (~stenno@user/stenno)
[09:16:31] <birkoff> i want to make a filling form splitted to circa two columns, that will join into one when zoomed in or displayed on a smaller device (aka responsive).
[09:17:27] <birkoff> i also want to have some cells to span several cells width
[09:17:35] <birkoff> should I be using 'grid' layout for that ?
[09:35:17] *** Quits: bin (~bin@user/bin) (Ping timeout: 272 seconds)
[09:39:58] *** Joins: bin (~bin@user/bin)
[09:55:27] *** shan is now known as ^_^
[09:55:33] *** ^_^ is now known as shan
[10:06:38] <birkoff> is there no css property for <table bordercolor= ?
[10:14:56] <AMcBain> birkoff, you can't set border: ...; on the table, or tr/th/td?
[10:28:39] <birkoff> i tried, they are not the same
[10:29:11] <birkoff> <table border=  and <table bordercolor=  are not the same as border:
[10:32:17] <AMcBain> You can set just border-color in CSS. You don't have to set all of it with border, if you don't want.
[10:36:25] <AMcBain> birkoff, if you really want to, this is how you can replicate the terrible default table border: http://paste.asmcbain.net/64693f2d/edit
[10:41:48] *** Quits: undefined_bob (~undefined@user/undefined-bob/x-5411918) (Quit: WeeChat 1.5)
[10:42:34] *** Joins: undefined_bob (~undefined@user/undefined-bob/x-5411918)
[10:46:29] *** Quits: P1RATEZ (piratez@cpe98524ab27125-cm98524ab27123.cpe.net.cable.rogers.com) (Changing host)
[10:46:29] *** Joins: P1RATEZ (piratez@user/p1ratez)
[10:47:19] *** Quits: P1RATEZ (piratez@user/p1ratez) ()
[11:50:11] *** Quits: eN_Joy (~eN_Joy@wsip-72-213-93-155.ok.ok.cox.net) (Ping timeout: 272 seconds)
[12:48:24] *** Joins: FightingFalcon (~sdasavcsg@user/fightingfalcon)
[12:55:38] *** Joins: entuland (~entuland@user/entuland)
[12:57:25] *** Joins: especial (~especial@cm-84.214.207.74.getinternet.no)
[12:57:40] <jwpapi> https://gw.lifestyle.cool/photography/ On the bottom on this page if you select 1299px as size there is line in the footer I can’t figure out where it’s coming from. There is no border in the web developer toolbar https://usercontent.irccloud-cdn.com/file/NNMWE1Er/image.png
[13:03:52] <undefined_bob> jwpapi: you mean browser window size? Which browser have you tried? I see no line there in my Firefox
[13:06:17] <jwpapi> that’s in Chrome
[13:06:27] <jwpapi> yes I mean browser window size
[13:07:13] <[twisti]> i see it too in chrome with that resolution
[13:07:48] <entuland> no line in chrome either for me, but I'm testing with the mobile preview resizable window (so I'm getting exactly 1299px in the _viewport_, not in the window)
[13:07:50] <undefined_bob> but at .site-footer > .site-info style.scss 6027 you have border-top: 0 !important; if you toggle that off, then you see the line in your screenshot
[13:08:42] <undefined_bob> its for <div class="site-info">
[13:08:45] <[twisti]> jwpapi: i can remove the line by increasing the footers height by 1px
[13:08:58] <[twisti]> the "colophon" element
[13:09:16] <[twisti]> behind the element theres black, thats what makes the line. i cant tell you why the element is the wrong size though
[13:24:16] *** Quits: stenno (~stenno@user/stenno) (Ping timeout: 268 seconds)
[13:27:59] *** Joins: stenno (~stenno@user/stenno)
[13:32:34] *** Quits: stenno (~stenno@user/stenno) (Ping timeout: 245 seconds)
[13:41:36] *** Quits: Crassus (~Crassus@user/crassus) (Quit: My MacBook has gone to sleep. ZZZzzz…)
[13:42:57] *** Joins: jonifen (~jonifen@user/jonifen)
[13:46:19] <jwpapi> thank you guys I think I’ll be able to fix it now
[13:46:26] <jwpapi> it’s also just on some sizes and not on all
[13:47:29] <undefined_bob> jwpapi: if something is only at some sizes, always check the @media queries :)
[13:48:20] <jwpapi> Yeah I know, but it was weird, because even when the line was visible the computed queries didn’t show any border, nor any pseudo tag was a line. I suspected it to come from the background, but I wouldn’t know how to find that out
[13:48:23] <jwpapi> undefined_bob:
[13:49:32] <undefined_bob> maybe it was really the size of the element which then show background instead of a real border
[13:54:50] <[twisti]> jwpapi: its definitely the background, you can test by removing the background and/or changing the color
[13:55:21] <entuland> some one-off error of the renderer depending on how stuff is laid around
[13:58:23] <birkoff> i want to make a form splitted to circa two columns which would join into one when zoomed in or displayed on a smaller device (aka responsive). how can I do this ?
[14:05:06] <entuland> you use media queries to rearrange the bits around according to the available width
[14:05:31] <entuland> you shouldn't rearrange stuff when the page gets zoomed though
[14:05:43] <entuland> only when the page gets resized
[14:05:48] <jwpapi> [twisti]: thank you
[14:25:11] <birkoff> entuland:  but with frameworks like bootstrap zooming is also taken into consideration and columns stack up
[14:25:47] <entuland> that looks like a bad decision to me
[14:26:23] <entuland> tastes, I guess
[14:27:51] <entuland> oh wait
[14:28:08] <entuland> you mean zooming as in doing control+mousewheel?
[14:28:26] <entuland> I thought you referred to pinching a page on a mobile device
[14:28:42] <entuland> I'm okay with reflowing the page when zooming like that on desktop
[14:28:54] <entuland> but not when pinch-zooming on a mobile device
[14:30:14] <entuland> I see that one website of mine does that automatically and reflows everything on the zoomed page just like if I resized the window, taking media queries in account automatically
[14:30:43] <entuland> and I haven't implemented anything in particular for zooming
[14:30:53] <entuland> so you should be good with just using media queries
[14:31:31] <entuland> the viewport "perceived" width, inside of your CSS, should behave just like resizing
[14:35:46] *** Joins: pavonia (~user@user/siracusa)
[14:40:01] *** entuland is now known as dmstk`mc
[14:46:16] *** Joins: ninturez0 (~brandon@71.19.249.37)
[14:51:10] <hassoon> 'morning
[14:51:43] <undefined_bob> morning hassoon
[14:53:12] *** dmstk`mc is now known as entuland
[15:13:53] *** Quits: especial (~especial@cm-84.214.207.74.getinternet.no) (Remote host closed the connection)
[15:18:46] <birkoff> if  you didn't get my message:
[15:18:48] <birkoff> entuland: but how would I make sure the divs reflow ?
[15:19:11] <hassoon> birkoff: what do you want to do ?
[15:19:26] <birkoff> read up, basically: reflow columnated grid layout
[15:19:56] <hassoon> birkoff: no, you tell what you want to do
[15:20:07] <entuland> you use media queries to reflow according to the width
[15:20:17] <hassoon> what does he mean by reflow
[15:20:29] <entuland> move stuff that's normally side by side into one above the other
[15:20:46] <hassoon> you mean changing the layout ?
[15:20:49] <entuland> you could do that with flex as well depending on the behavior you want, without even using media queries
[15:21:12] <entuland> yes, they want to alter the layout when the page has not enough room for two boxes side by side
[15:21:29] <hassoon> responsive csss or flex will help
[15:21:56] <hassoon> * css
[15:22:51] <hassoon> hmw[at]: come back to your channel
[15:23:14] <birkoff> in short: one column for portrait mode, many columns for horizontal
[15:23:42] <birkoff> actually not just portrait but portrait that is big enough can use many columns as well
[15:24:02] <hassoon> are you on that splitting panels thing yet ?
[15:24:04] <entuland> as above, you have many ways to tackle that
[15:24:37] <entuland> show a sample with your attempt if media queries or flex aren't working for you
[15:31:11] <birkoff> is there a way to "add" cells to a grid in column-wise fashion ? i.e. from top to bottom and not horizontally ?
[15:31:40] <hassoon> birkoff: define a vertical layout for that grid
[15:31:48] <hassoon> birkoff: e.g one column, and multiple lines
[15:31:48] <birkoff> or maybe should I resort to flex anyway ?
[15:31:51] <hassoon> s/lines/rows
[15:31:57] <birkoff> hassoon: that's right.
[15:32:02] <hassoon> and ,
[15:32:04] <hassoon> ?
[15:32:17] <birkoff> i don't understand waht you are asking
[15:32:35] <hassoon> 06:01 < birkoff> is there a way to "add" cells to a grid in column-wise fashion ? i.e. from top to bottom and not horizontally ?
[15:32:43] <hassoon> i answered your question
[15:32:52] <hassoon> 06:01 < hassoon> birkoff: e.g one column, and multiple lines
[15:32:54] <hassoon> ^
[15:34:50] <birkoff> but grid goes by rows doesn't it ?
[15:35:03] <hassoon> birkoff: row and columns
[15:35:16] <birkoff> so how do I tell it to go by columns first ?
[15:36:13] <entuland> https://jsfiddle.net/entuland/p7gfathn/
[15:36:30] <entuland> resize it horizontally till there isn't enough room
[15:38:25] <hassoon> birkoff: that's an example of a 1 column grid
[15:38:27] <hassoon> https://ghanhass.github.io/myfiddle/278
[15:43:06] <birkoff> entuland: i'm not sure what that is . the cells are still stacked from left to right by row, and not column-first
[15:43:30] <hassoon> birkoff: is that what you want to do? a responsive kind of a grid layout ? https://ghanhass.github.io/myfiddle/280
[15:43:47] <hassoon> birkoff: resize the result view to observe responsiveness
[15:43:59] <birkoff> hassoon: and then how do you add more columns ?
[15:44:26] <birkoff> hassoon: yes.
[15:44:28] <hassoon> birkoff: you add child nodes inside the grid container
[15:44:44] <hassoon> birkoff: do you think adding new columns is also a css-only task ?
[15:45:00] <hassoon> birkoff: you will have to do it manually in html or javascript
[15:45:43] <birkoff> it's a PITA for just letting me insert divs content in a flowing fashion
[15:45:52] <entuland> the way you explained it to begin with was that you wanted two thigs to be side by side if there was enough room, and only stack them vertically if the room wasn't enough
[15:45:55] <entuland> my snippet does that
[15:46:30] <entuland> it's very hard to help without seeing what you actually have and fully understanding your goals
[15:47:07] <entuland> or, wait, I see what you are after now
[15:47:07] <birkoff> entuland: oh right. I thought you were showing my a solution for the other problem. my layout would be a bit more complex.
[15:47:14] <entuland> one moment
[15:47:46] <hassoon> entuland: i agree, he is not clear enough yet
[15:48:34] <entuland> https://jsfiddle.net/entuland/p7gfathn/1/
[15:48:38] <entuland> is that what you want?
[15:49:47] <hassoon> that's like a responsive gap
[15:50:05] <entuland> what I meant to show there is the order of the boxes
[15:50:25] <entuland> as they fill the first column, then the second and so forth
[15:50:29] <entuland> instead of filling by row
[15:51:10] <hassoon> he was worried about making the grid vertical or horizontal, plus making it adapt to screen sizes, i'd say they want a grid that keeps the cells well resized acording to screen sizes
[15:51:22] <hassoon> they were worried *
[15:52:44] <entuland> the problem with column flow in flex is that you have to force the height, it's nastier than row flow
[15:53:13] <birkoff> entuland: yeah, exactly
[15:53:28] <entuland> but
[15:53:47] <birkoff> but it's not a grid it's a flex
[15:53:48] <entuland> all of this goes away if you use a grid with explicit placement _and_ media queries to alter the layout at specific breakpoints
[15:54:08] <birkoff> that's why i was asking should I go with flex instead ?
[15:54:19] <entuland> no, you will be better with grid here
[15:54:32] <birkoff> then how do I do it with grid then ?
[15:54:51] <entuland> do this: make a container with 6 children
[15:55:35] <entuland> make the grid a 3 columns by 2 rows above a certain viewport width, 2 columsn by 3 rows under it (you just need one media query for this)
[15:55:54] <entuland> there you'll be free to place the various cells wherever you want
[15:56:02] <entuland> do all of that in isolation in a separate fiddle
[15:56:07] <entuland> just to grasp the technique
[15:56:39] <birkoff> i mean, how do I put my divs in by column ?
[15:56:46] <birkoff> from top to bottom
[15:56:48] <birkoff> and not left to right
[15:56:54] <birkoff> like you just showed with grid
[15:56:55] <entuland> that's their default layout in the grid
[15:56:57] <birkoff> with flex*
[15:57:03] <birkoff> not that I can see
[15:57:12] <entuland> try what I said
[15:57:17] <entuland> create a new fiddle
[15:57:21] <entuland> and implement what I described
[15:57:24] <entuland> then share the fiddle
[15:57:29] <entuland> if you get stuck, no proble
[15:57:30] <entuland> m
[15:57:36] <entuland> but share your attempt in a separate fiddle
[15:59:41] <entuland> mind you, I get the point of the column-first and you're right, the default behavior is row-first
[15:59:57] <entuland> but that's not the main thing you have to solve
[16:04:13] <entuland> you can also have a grid that fills column-first and where you don't have to specify the rows amount (it will be determined automatically by grid-auto-flow: row;)
[16:04:59] <entuland> sorry, grid-auto-flow: column;
[16:05:07] *** Quits: ninturez0 (~brandon@71.19.249.37) (Read error: Connection reset by peer)
[16:06:03] <entuland> or not? actually not fully sure about the last bit
[16:06:57] <hassoon> entuland: did you get a final certain understand on what he does want to achieve ?
[16:07:04] <hassoon> * understanding *
[16:07:06] <birkoff> well, first things first, media query realignment breaks if a cell is spanning more columns than is shown
[16:07:09] <entuland> anyways, since you can explicitly set the row/column position of each cell, any layout can be achieved
[16:07:39] <entuland> birkoff, you simply alter the spanning in the media query to account for that
[16:08:39] <birkoff> oh :)
[16:08:39] <entuland> you can have a cell in position A1 spanning to A3 above one breakpoint and the same cell in position B2 spanning to C2 below a certain breakpoint
[16:08:43] <entuland> you really have full control
[16:09:18] <birkoff> so i'll have to "program" each cell to appear in its right place
[16:09:19] <entuland> what I don't know is if the amount of cells is known or not
[16:09:31] <birkoff> that's a little daunting compared to just throwing divs one after another :)
[16:09:34] *** Joins: ninturez0 (~brandon@71.19.249.37)
[16:09:40] <birkoff> amount of cells is known
[16:09:44] <entuland> well, you could do that as well
[16:10:25] <entuland> but that's not going to help a lot if you need multi-column or multi-row spans
[16:10:48] <entuland> once you know you have to do spanning, it's likely better to control each cell explicitly
[16:11:39] <entuland> with "you could do that as well" I was thinking into using nested grids or the alike
[16:11:56] <entuland> so that you can throw stuff in order in your markup and use the nested grid to stack them
[16:12:03] <entuland> but I seriously dislike that approach
[16:13:07] <entuland> yet another approach is using grid areas
[16:13:21] <entuland> probably the best one in your case
[16:13:39] <birkoff> I have a problem with the grid "innards" going out after zooming
[16:13:52] <birkoff> protruding that is
[16:13:55] <entuland> but I'm not entirely sure cause I'm still not fully sure I get what you're dealing with
[16:14:10] <birkoff> i'm working on a fiddle
[16:14:15] <entuland> ok, take your time
[16:14:38] <birkoff> well you can see the problem already : https://jsfiddle.net/t17zxye4/
[16:14:42] <birkoff> just zoom a little
[16:15:09] <birkoff> the content overflow the div
[16:15:16] <birkoff> in a weird fashion
[16:20:29] <entuland> can you screenshot what you refer to in particular?
[16:23:32] <birkoff> https://ibb.co/8PNt8cC
[16:24:04] <entuland> well, that's normal
[16:24:18] <entuland> you aren't letting the grid take full width, for starters
[16:24:26] <entuland> and you're not breaking at the right width
[16:24:32] <entuland> or the 2 columns would have become one
[16:25:24] <entuland> by the way, it is _not_ happening for me
[16:25:47] <birkoff> must I give it full width ?
[16:26:03] <birkoff> how do i find the "right width" ?
[16:26:13] <entuland> here I have the frame resized _and_ the page zoomed: https://i.imgur.com/Oq7Sgtw.png
[16:26:38] <entuland> as I narrow a little, it goes to 1 column: https://i.imgur.com/MfIeuz6.png
[16:26:48] *** Quits: undefined_bob (~undefined@user/undefined-bob/x-5411918) (Quit: WeeChat 1.5)
[16:26:53] <oksushi> birkoff: why not remove the width, and change to display: inline-grid;
[16:26:59] <entuland> so, for me, unless I zoom in _a lot_ I don't get any overflow
[16:27:27] <birkoff> it happens to me with zoom 120%
[16:27:47] <birkoff> and onwards...
[16:27:48] *** Joins: undefined_bob (~undefined@user/undefined-bob/x-5411918)
[16:28:08] <entuland> what browser are you using?
[16:28:13] <birkoff> oksushi: that's possible
[16:28:18] <birkoff> entuland:  firefox
[16:28:26] <entuland> try with chrome
[16:28:37] <entuland> I go way above 125% and there is no overflow for me
[16:28:41] <entuland> unless I go very narrow
[16:29:17] <entuland> and I never get the two columns layout to overflow, only the 1-column one
[16:29:22] <birkoff> it happens on 100% if i go narrow enough
[16:29:35] <entuland> yes, but with only one column, correct_
[16:29:40] <birkoff> with the two-columns layout
[16:29:51] <birkoff> with one column as well
[16:29:55] <birkoff> zooming in enough
[16:29:57] <entuland> then the breakpoints are wrong
[16:30:10] <entuland> which isn't a surprise due to the 75%
[16:31:12] <entuland> consider that the input are rendered differently by different browsers (they're system / browser dependent)
[16:31:20] <entuland> so that plays a role as well
[16:31:44] *** Quits: jazzy (~jaziz@2600:380:4547:d128:9497:ff4e:a49b:d10b) (Ping timeout: 245 seconds)
[16:32:43] <birkoff> how can I make the inputs fill whatever cell space is available to them ?
[16:32:54] <birkoff> width-wise
[16:33:35] <entuland> don't think you can achieve it without setting each cell as flex or grid itself
[16:33:49] <entuland> can't achieve that with pure inline flow, if I'm not mistaken
[16:34:06] <entuland> since you have text _and_ the input as cell content
[16:34:34] <birkoff> why is it so ?
[16:34:44] <entuland> because of the way inline works
[16:36:46] <entuland> you may also need to wrap the text part with a span to be able to achieve what you want
[16:37:19] <entuland> cause you want the input to take all the available space left by whatever text you have before them
[16:37:42] <entuland> assuming I'm getting your end goal properly
[16:38:46] <birkoff> that's right
[16:38:57] <birkoff> label is not enough ?
[16:39:07] <entuland> label contains the text _and_ the input
[16:39:17] <entuland> so you are left with the input as sibling of a textnode
[16:39:23] <entuland> which you can't control as you would like to
[16:39:44] <entuland> by putting such text in a span, you can control such text separately
[16:40:23] <entuland> you could though rearrange your markup so that the label only contains the text, and the input is outside of it
[16:40:39] <entuland> but then you need to give each input a name, and each label a corresponding "for" property
[16:40:39] <birkoff> i seem to have got it with just flex and no label or span
[16:40:54] <entuland> please share, I'm curious
[16:41:05] <birkoff> https://jsfiddle.net/t17zxye4/1/
[16:41:22] <entuland> oh nice
[16:41:31] <entuland> flex is converting the text node automatically
[16:41:33] <entuland> good to know
[16:43:52] <birkoff> label actually ruins it
[16:44:15] <entuland> well, yes, different techniques need different markup
[16:44:23] <entuland> I didn't even try adding flex to your case
[16:44:35] <entuland> I was just pointing out the technique
[16:45:48] <birkoff> but the input fields gets varying lengths, how can I keep the text/labels align to one side and then the inputs starting from an absolute point?
[16:46:11] <entuland> and mind you, you could have left the label and apply flex to the label (since that was the parent of the text and input)
[16:46:30] <entuland> or set the label as display: contents
[16:46:36] <entuland> plenty of different approaches
[16:46:54] <entuland> the label per se is good cause it lets people click on them to focus the input
[16:49:40] <birkoff> using label makes the input field break from the label text prematurely
[16:52:26] *** Joins: Ecophobia (~Ecophobia@85-76-131-252-nat.elisa-mobile.fi)
[16:52:27] *** Quits: Ecophobia (~Ecophobia@85-76-131-252-nat.elisa-mobile.fi) (Remote host closed the connection)
[16:55:17] <entuland> you could use justify-content: space-between; on that flex there
[16:55:25] <entuland> but you'll also need to set a width for the inputs
[16:55:44] <entuland> something like this: https://jsfiddle.net/entuland/nv9kbq17/
[16:57:55] <entuland> point is, in order to have something have the same width, either you constrain it with a common parent (not applicable here due to the variable text sibling) or you use a common grid (but may screw up with your overall approach) or you force a width somehow
[17:07:48] *** Quits: stkrdknmibalz (~test@rrcs-75-87-43-226.sw.biz.rr.com) (Ping timeout: 252 seconds)
[17:51:18] *** Joins: arash (~arash@5.124.31.250)
[17:51:20] <arash> Hello, I want to use table tag in rtl language, How can i use this tag to show first data in td tag in right of the document ?
[17:52:57] *** Quits: undefined_bob (~undefined@user/undefined-bob/x-5411918) (Quit: WeeChat 1.5)
[17:52:59] *** Quits: zodiac (~opsec@2806:268:402:8eb::1) (Ping timeout: 244 seconds)
[17:55:21] *** Joins: undefined_bob (~undefined@user/undefined-bob/x-5411918)
[17:59:35] <entuland> arash, can you show a fiddle with the relevant parts of your markup and css?
[17:59:56] <entuland> just setting rtl direction for the table should suffice
[18:00:55] *** Quits: undefined_bob (~undefined@user/undefined-bob/x-5411918) (Quit: WeeChat 1.5)
[18:03:17] <arash> entuland, dir just changed the direction of the table, I want to move the first td tag to right of the document, text-aling didn't fixed this for me, https://jsfiddle.net/vLuezr6q/4/
[18:04:36] *** Joins: undefined_bob (~undefined@user/undefined-bob/x-5411918)
[18:06:46] <entuland> diir?
[18:06:59] <entuland> try with "dir"
[18:07:31] <arash> entuland, oh, my mistake :D, fixed now, thank you
[18:07:35] <entuland> yw
[18:08:56] <entuland> consider that direction and alignment are different things
[18:29:10] *** Quits: arash (~arash@5.124.31.250) (Read error: Connection reset by peer)
[18:30:06] *** Joins: arash (~arash@5.124.31.250)
[18:36:48] *** Joins: Ecophobia (~Ecophobia@85-76-131-252-nat.elisa-mobile.fi)
[19:01:36] <hmw[at]> hassoon: "my" channel is still on freenode, ##hmw
[19:02:46] <hmw[at]> also, I just forgot to go to the same channel on here
[19:11:19] *** Quits: undefined_bob (~undefined@user/undefined-bob/x-5411918) (Quit: WeeChat 1.5)
[19:12:03] *** Joins: snek (sid280155@id-280155.tooting.irccloud.com)
[19:13:08] <snek> is there a way to make it so the blur applied by `filter: blur(Xpx)` doesn't get cut off at the edges of the text?
[19:13:35] <snek> increasing the padding works but then the element is wider than it should be
[19:14:57] <snek> for example the top and left here are cut off https://gc.gy/41cc4a6b-fb60-450e-893f-fe835d08434c.png
[19:16:45] <hmw[at]> snek: You can try to counteract the increased padding with a negative margin perhaps
[19:22:36] *** Quits: Kristine (~quassel@user/kristine) (Quit: https://quassel-irc.org - Chat comfortably. Anywhere.)
[19:22:53] *** Joins: Kristine (~quassel@user/kristine)
[19:37:06] *** Quits: Ecophobia (~Ecophobia@85-76-131-252-nat.elisa-mobile.fi) (Quit: Leaving)
[19:44:09] <entuland> snek, also careful that for sensitive data blurring may not be safe enough, better to flat-color overlay
[20:03:18] *** Quits: Kocho (~Kocho@user/kocho) (Ping timeout: 272 seconds)
[20:19:43] *** Quits: arash (~arash@5.124.31.250) (Ping timeout: 244 seconds)
[20:47:21] *** Joins: stkrdknmibalz (~test@rrcs-75-87-43-226.sw.biz.rr.com)
[20:49:17] <FightingFalcon> Whats the most advaned topic regarding css? animations?
[20:52:02] *** Joins: opsec (~opsec@2806:268:402:8eb::1)
[21:10:01] *** Joins: eN_Joy (~eN_Joy@wsip-72-213-93-155.ok.ok.cox.net)
[21:13:51] *** Joins: dev4449 (~dev4449@195.246.120.58)
[21:17:31] *** Joins: stenno (~stenno@user/stenno)
[21:28:22] *** Quits: jonifen (~jonifen@user/jonifen) (Quit: Leaving)
[21:49:16] *** Joins: wovixo (~wovixo@128.104.205.49)
[21:55:10] *** Joins: drej_ (~drej@user/drej)
[21:58:12] *** Quits: drej (~drej@user/drej) (Ping timeout: 252 seconds)
[22:31:12] *** Quits: winter_ (~quassel@user/winter) (Quit: No Ping reply in 180 seconds.)
[22:32:36] *** Joins: winter (~quassel@user/winter)
[22:39:39] *** Joins: Crassus (~Crassus@user/crassus)
[22:44:34] *** Quits: drej_ (~drej@user/drej) (Quit: Konversation terminated!)
[23:03:48] <pavonia> FightingFalcon: Vertical alignment, IMHO
[23:06:19] <FightingFalcon> how so
[23:07:29] *** Quits: Harlin (~DonQixote@c-24-128-8-53.hsd1.co.comcast.net) (Read error: Connection reset by peer)
[23:07:41] *** Joins: Harlin (~DonQixote@2603:300b:663:e800:c102:96a7:b2d6:d0ec)
[23:09:47] <pavonia> At leats that's usually the aspect I struggle most with. Aligning inline and inline-block boxes correctly, making sense of how line-height influences box height etc. Most other parts are more like learning to use the correct syntax
[23:11:52] <hmw[at]> Checkboxes and vertical alignment
[23:13:42] <FightingFalcon> hmw[at], perhaps you people might help me find out a small bug in my site?
[23:14:06] <FightingFalcon> https://www.ataturkanlatiyor.com/
[23:14:43] <FightingFalcon> open the and then open chrome inspect tool, it will automatically resize the page. and it will be horizontally scrollable then.
[23:15:10] <FightingFalcon> but if i open page directly in lower display, there is no scrolling. i find out that the problem is because of .info div
[23:15:15] <FightingFalcon> but couldnt find more
[23:23:39] <FightingFalcon> there is margin, nothing...
[23:23:49] <FightingFalcon> when i add overflow hidden to html, it stops
[23:23:55] <FightingFalcon> and it only happens in chrome, not in opera
