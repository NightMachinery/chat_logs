[00:01:29] *** Quits: c41e3a (~c41e3a@user/c41e3a) (Ping timeout: 256 seconds)
[00:02:12] *** Joins: SlimmyJimmy (blank@user/slimmyjimmy)
[00:08:25] *** Quits: labrador (~labrador@user/labrador) (Quit: Leaving)
[00:13:48] *** Joins: xenoterracide_ (~xenoterra@2600:1700:71d4:810:101f:cf82:e73c:f52b)
[00:18:40] *** Quits: ___nick___ (~quassel@cpc68286-cdif17-2-0-cust533.5-1.cable.virginm.net) (Quit: https://quassel-irc.org - Chat comfortably. Anywhere.)
[00:20:12] *** Joins: ___nick___ (~quassel@cpc68286-cdif17-2-0-cust533.5-1.cable.virginm.net)
[00:24:06] *** Quits: xenoterracide_ (~xenoterra@2600:1700:71d4:810:101f:cf82:e73c:f52b) (Remote host closed the connection)
[00:24:27] *** Joins: xenoterracide_ (~xenoterra@2600:1700:71d4:810:101f:cf82:e73c:f52b)
[00:28:37] *** Quits: xenoterracide_ (~xenoterra@2600:1700:71d4:810:101f:cf82:e73c:f52b) (Ping timeout: 240 seconds)
[00:32:25] *** Quits: SlimmyJimmy (blank@user/slimmyjimmy) (Quit: Going offline, see ya! (www.adiirc.com))
[00:34:21] *** Quits: ___nick___ (~quassel@cpc68286-cdif17-2-0-cust533.5-1.cable.virginm.net) (Ping timeout: 256 seconds)
[00:44:12] *** Joins: SlimmyJimmy (blank@user/slimmyjimmy)
[00:45:02] *** Quits: machinedgod (~machinedg@24.105.81.50) (Ping timeout: 250 seconds)
[01:01:42] *** Joins: sektor|3 (~kvirc@94.155.193.66)
[01:04:33] *** Joins: MrFantastik (~f@2607:f598:bbda:170:9975:1508:5896:d1b)
[01:04:57] *** Quits: sektor|2 (~kvirc@87.227.175.182) (Ping timeout: 256 seconds)
[01:08:16] <MrFantastik> you know how google docs has unguessable links? is it possible to do that on a subdomain without risking phishing attacks?
[01:08:29] <sarnold> ?
[01:08:49] <MrFantastik> I'm more or less trying to implement https://stackoverflow.com/questions/4463974/url-security-what-is-considered-a-secure-unguessable-url
[01:09:05] <xx> why care about unguessable URLs?
[01:09:43] <MrFantastik> but instead of foo.bar/reallylongstring reallylongstring.foo.bar
[01:10:10] <MrFantastik> but really long be not too long to avoid url phishing attack like reallylongstring.foo.bar.someone.nasty
[01:10:49] <MrFantastik> i care about unguessable urls because I'm trying to share a url to the "public" but make it difficult for people to find 
[01:11:02] <MrFantastik> i just realized that they could use our dns records to find these though
[01:11:09] <MrFantastik> so that's kind of moot
[01:11:34] <sarnold> you'd probably want to implement it via wildcard dns
[01:11:40] <MrFantastik> but the way you can have "only people with this link" can access something is nice
[01:11:46] <MrFantastik> oh yea that's a good point
[01:12:01] <sarnold> (like the old bikeshed website)
[01:13:55] <MrFantastik> the stackoverflow post mentions 
[01:13:58] <MrFantastik> > 64 characters chosen cryptographically randomly (NOT rand()!) from the alphabet of 62 possible values (26+26+10: caps/lowercase/numbers) will yield 5.16e+114 possible values (62^64). Trying a million combinations a second, it would take 1.63e+101 years (moar than a googol) to guess the code. 
[01:14:17] <MrFantastik> but i feel like that's much too long for something like this because of the phishing risk
[01:14:24] *** Quits: SlimmyJimmy (blank@user/slimmyjimmy) (Quit: Going offline, see ya! (www.adiirc.com))
[01:14:56] <MrFantastik> I'm trying to figure out if it's even worth calculating a 16 character key or 24
[01:17:42] <maroon> you mean whether it's worth the trouble to create the 'random' url being length 24 vs 16?
[01:19:00] <maroon> if you're using sha256 to create the random url, the question is how far to truncate it after translating it to base-52 or whatever
[01:21:55] *** Joins: sdfgsdfg (~dfghsfgs@user/sdfgsdfg)
[01:25:08] <Alipha> curious where you're getting 52 or 62 from because domain names aren't case-sensitive. so i assume the character set for a domain is around 40 possible characters
[01:25:22] <TimMc> oh hell, that's true
[01:25:40] <sarnold> oh hell
[01:26:11] *** Joins: SlimmyJimmy (blank@user/slimmyjimmy)
[01:26:27] <Alipha> assuming base-32 (which is 2^5), for easy math, you'd need 25 characters for 125-bit security (125 / 5)
[01:26:41] <TimMc> So... [a-z0-9-] at most, but with special cases around hyphens?
[01:27:20] <TimMc> 37^10 is about 5 * 10^15, which isn't too shabby for an online attack.
[01:27:47] <Alipha> 60-bit, which would still be pretty hard to brute force, would be 12 characters
[01:28:21] <maroon> yeah 52 was typo i meant 62
[01:29:16] <maroon> if the url needs to be human readible without confusing 'l' and '1', 'O' and '0' etc, it would need to use a subset of base62, or just use base32
[01:30:15] <TimMc> Or remove four vowels to reduce the chance of forming words (especially offensive ones).
[01:30:17] <Alipha> maroon: we're talking about subdomains, which are case insensitive, so base62 isn't even feasible
[01:30:25] *** Quits: moose (~moose@user/moose) (Quit: Leaving)
[01:30:33] <sarnold> TimMc: well there goes all the fun
[01:31:15] <Alipha> MrFantastik: i'd say about 15 characters, depending upon how many subdomains you're creating, would be sufficient
[01:31:21] <maroon> oh, i was thinking of parts of the url that are case-sensitive, like how you edit the case for a youtube link and it's no longer there
[01:31:36] <TimMc> OK, then use an alphabet from [cfikonpstu]
[01:32:02] <TimMc> but you'll need about 20 chars I think?
[01:32:12] <maroon> base32 is made-to-order, it avoids 0 and 1 to avoid visual collisions
[01:33:30] <TimMc> ieououefucpuatespeap
[01:33:30] <Alipha> 23456789abcdefghijkmnpqrstuvwxyz?
[01:34:09] <TimMc> Standard Base32 is a-z then 2-7. I think.
[01:34:27] <maroon> yes, 2-7a-z
[01:35:05] <TimMc> 2-7 comes after
[01:35:28] <TimMc> Hex baes32 is 0-9 and then a-v
[01:35:33] <Alipha> considering the average user doesn't know base32, and wouldn't know that l must be an l and not a 1, i'd get rid of l and o :-)
[01:36:27] <maroon> you dont need to get rid of it, you can have the input sanitized to treat 1 as L, 0 as o, and 8 as b
[01:37:10] <maroon> apparently they dont think people will confuse u and v
[01:37:19] *** Joins: machinedgod (~machinedg@24.105.81.50)
[01:39:18] <TimMc> Alipha: The idea is that you politely and quietly correct the user's mistake, since it's unambiguous. :-)
[01:39:51] <TimMc> (unless they've written it down in mixed caps and then confused I and l, which, well. There's only so much you can do.
[01:39:54] <TimMc> )\
[01:39:56] <TimMc> argh
[01:40:31] <maroon> official base32 is uppercase, but google authenticator now uses lowercase, and most systems supporting base32 treat it as case-insensitive
[01:41:11] <Alipha> i suppose you could have the nameserver accept either al00.foo.com or aloo.foo.com (or any variation thereof)
[01:46:01] *** Joins: sektor|2 (~kvirc@87.227.175.182)
[01:49:29] *** Quits: sektor|3 (~kvirc@94.155.193.66) (Ping timeout: 256 seconds)
[01:56:24] *** Quits: SlimmyJimmy (blank@user/slimmyjimmy) (Quit: Going offline, see ya! (www.adiirc.com))
[01:57:09] *** Quits: gabriel1_ (~gabriel1@37.166.3.113) (Remote host closed the connection)
[02:06:49] *** Joins: moose (~moose@user/moose)
[02:08:11] *** Joins: SlimmyJimmy (blank@user/slimmyjimmy)
[02:08:43] <moose> Is there a particular reason we don't see SHA-512 recommended and instead most of the time SHA-256 is?
[02:09:14] <moose> The only recommendation I've seen beyond SHA-256 are the commercial national security proposals from the NSA that recommend SHA-384.
[02:09:27] <int-e> What's the benefit of SHA-512 that outweighs the cost (2 times longer hash)?
[02:09:46] <moose> That's part of my question, I suppose :)
[02:10:01] <xx> use sha512 and truncate it to sha256 length
[02:10:35] <int-e> (it's a bit slower too)
[02:10:45] <moose> int-e: My only thought is really that SHA-512 just has better collision resistance but it's not very practical.
[02:10:58] <moose> It pretty much doesn't matter today.
[02:11:32] <moose> And I don't see any reason why it would be useful to have such resistance in 100 years for symmetrically encrypted data, since collisions based attacks tend to be interactive and new systems are going to be deprecated far sooner.
[02:11:59] <sarnold> int-e: I believe sha-512 can be faster than sha-256 sometimes, because it uses larger operations that modern processors can do better
[02:12:07] <moose> Right now I am reviewing a proposal for "50-100 year cryptographic security" and the proposal includes HMAC-SHA256 for authenticating encrypted data blocks.
[02:12:30] <int-e> hmmmm.
[02:12:58] <moose> sarnold: Yeah on modern systems it should be as fast or slightly faster on larger amounts of input data, such as files. I suspect it would be marginal though.
[02:13:14] <int-e> Yeah it's noticably faster for me actually. That seems a good argument in favor of truncated sha-512 then actually.
[02:13:42] <iz> if using hmac, i don't think sha-512 really improves the situation that much from sha-256
[02:14:02] <iz> bigger number doesn't always mean better
[02:14:13] <moose> I'm aware lol
[02:14:15] <maroon> i'd heard crypto coins used sha256 instead of sha512 because it's supposed to be slower to use 32bit registers in sha256 on 64bit architecture, than using the 64bit registers for sha512
[02:14:42] <moose> maroon: Implementations are more readily available is also a strong argument there.
[02:14:43] <danieldg> yeah, sha512 is significantly slower on 32-bit systems
[02:14:53] <maroon> "you dont need that much security strength"
[02:15:01] <danieldg> but given crypto is done using asics that doesn't really matter :p
[02:15:12] <maroon> "encryption uses too many rounds"
[02:16:41] *** Quits: machinedgod (~machinedg@24.105.81.50) (Ping timeout: 256 seconds)
[02:16:58] <Peng> SHA-512/256 is so good, it's sad no one uses it
[02:17:09] <iz> not worth the cost of marginally increasing the preimage collision resistance when it won't even matter in hmac
[02:17:34] <MacGyver> Peng: Disagree on SHA256.
[02:17:37] <moose> Peng: I'd honestly just use SHA-512 without truncation.
[02:17:39] <MacGyver> Oh wait.
[02:17:54] <sarnold> kinda long though
[02:18:00] <moose> It is, but storage is cheap.
[02:18:00] <MacGyver> You actually mean the standardized 256-bit truncation of 512.
[02:18:04] <MacGyver> Do we write it down like that?
[02:18:07] <moose> Yes.
[02:18:27] <MacGyver> Why does my memory say SHA256-512...
[02:18:36] <MacGyver> But yeah, hard agree then :P
[02:18:41] <moose> sarnold: Can you imagine that we'll have collisions in SHA-256 in 50 years? HEh.
[02:18:59] <sarnold> moose: try to act surprised when someone does it in 2030 :)
[02:19:00] <maroon> truncating gives defense against length-extension attacks
[02:19:09] <moose> Authenticating this data is going to be important later, but the cutoff is at 50 years. However secrecy needs to be maintained for 100 years.
[02:19:14] <Peng> moose: SHA-512/256 is both smaller and resists length extension attacks
[02:19:18] <iz> we have had collisions in md5 for years and hmac-md5 is still secure
[02:19:27] <moose> Peng: HMAC takes care of the length extension issues, no?
[02:19:42] <Peng> moose: Sure, but it's more expensive
[02:19:45] <moose> Not to mention we're authenticating the encrypted data, which embeds its padding count.
[02:20:01] <moose> I don't think length extension attacks are possible in that situation
[02:20:46] <Alipha> moose: the only way we'll have a collision in SHA-256 is if someone finds a vulnerability. in which case, SHA-512 very well could be equally susceptible
[02:21:10] *** Joins: independent (~textual@95.161.221.247)
[02:21:16] <moose> Alipha: Right, I've considered using two methods as well. We're already going to be using cascading ciphers of differing constructions.
[02:21:36] <MacGyver> Well, or just chance, but then it'll just be the one collision.
[02:21:49] <MacGyver> Just because something is astronomically unlikely doesn't mean it *can't* happen.
[02:22:08] <moose> But if there's two hashes then that is adding a lot of extra data to some of our messages, since the median payload size is going to be like 200 bytes.
[02:22:11] <MacGyver> Would be a fun day though.
[02:22:20] <maroon> even with all the md5 collisions, i've yet to see any examples where they're both text
[02:22:50] <moose> maroon: MD5 and SHA-1 collisions have been demonstrated on certs.
[02:23:01] <moose> I'd call that bad.
[02:23:29] <maroon> yes moose, but they're altering binary data - i mean just normal 7bit text entirely
[02:23:48] <MacGyver> Maybe join us in the 21st century sometime.
[02:24:34] <maroon> even for crc32 where it's easy to create collisions if you have 4 consecutive binary bytes to play with, it gets harder if you're restricted to set bytes only as text
[02:24:43] <moose> Of course.
[02:24:58] <MacGyver> What exactly are you trying to argue though?
[02:25:08] <moose> Right, also confused about why text only is important here
[02:25:12] <MacGyver> That everything should become 7bit again?
[02:25:20] *** Parts: independent (~textual@95.161.221.247) (Textual IRC Client: www.textualapp.com)
[02:25:49] <moose> Hopefully my use of "messages" didn't make it seem like I was going to be storing text. Messages as in protocol level messages, which are binary :p
[02:26:04] <MacGyver> I mean even if you did mean storing text.
[02:26:10] <maroon> im saying that md5 collisions require being able to have a large-enough binary scratchpad to play with
[02:26:12] <MacGyver> We've long passed the day that text was 7bit ASCII.
[02:26:45] <moose> 7-bit ASCII isn't vulnerable to glyph substitution, therefore secure? :p
[02:26:46] <maroon> even if allowing utf8, that's still a small sub-set of binary
[02:28:47] <MrFantastik> hey sorry had to step away thanks for the direction
[02:30:58] *** Joins: llorllale (~llorllale@198.98.119.85)
[02:38:24] *** Quits: SlimmyJimmy (blank@user/slimmyjimmy) (Quit: Going offline, see ya! (www.adiirc.com))
[02:38:24] <moose> So anyway, suggestions on the second hash in this scenario?
[02:38:48] <MacGyver> SHA3.
[02:39:18] <MacGyver> Because it's a vastly different type of construction.
[02:39:32] <moose> I suppose if one is surviving at the time, then we can always upgrade the hash later if one is found to be broken.
[02:39:45] <moose> I worry about SHA-3 not having been around long enough
[02:40:21] <moose> However I just read in the design doc as we were talking about it, it's recommended as a backup for dual hashing.
[02:41:07] <MacGyver> The type of construction has been around since 1998, and Keccak itself (which became SHA3) since 2006.
[02:41:16] <MacGyver> I think your perception of how old it is is flawed.
[02:41:29] <moose> Was it really 2006?
[02:41:32] <MacGyver> Yes.
[02:41:34] <moose> Sheesh, I remember when it was announced.
[02:41:43] <moose> Felt like just 5-10 years ago heh
[02:41:54] <MacGyver> Oh no, that was RadioGatun, Keccak was 2008 it seems.
[02:42:20] <MacGyver> Anyway, the fact that it was only finalized as SHA3 in 2015 doesn't mean it's only 6 years old..
[02:42:29] <moose> Still 2008 is long enough for nice cryptanalysis especially after it was finalized in 2015
[02:42:37] <moose> Yeah. I know.
[02:42:44] <MacGyver> Yes, the whole point of the SHA3 competition was to have that cryptanalysis.
[02:44:00] <moose> Right. I like to see 5+5 but it looks like we're at 16+7 which is good enough for me. The + denoting the years on either side of the release of the standard from algorithm origin to date.
[02:44:03] <MacGyver> And the reason for even running a SHA3 standardization was to have something that wasn't just another Merkle-Damgård construction.
[02:44:19] <MacGyver> So I think it suits your needs.
[02:44:33] <MacGyver> If MD gets broken, you've still got sponge, and vice versa.
[02:44:50] <moose> Yes, they were worried about the construction being a weak point and having too many algorithms relying on it.
[02:44:55] <Chouhartem> 🧽
[02:45:23] <moose> I had to google that emoji, since it was black and white on my client lol
[02:45:34] <moose> Looked like a salt shaker
[02:46:14] <maroon> looks like a square with a questionmark inside it
[02:47:01] <MacGyver> As it would for someone who still thinks text is 7bit ASCII.
[02:47:12] <MacGyver> (Sorry, I just had to)
[02:50:12] *** Joins: SlimmyJimmy (blank@user/slimmyjimmy)
[02:55:33] *** Joins: aleck (~aleck@user/aleck)
[03:02:01] *** Joins: chasmo77 (~chas77@c-71-193-246-4.hsd1.or.comcast.net)
[03:09:48] *** Joins: machinedgod (~machinedg@24.105.81.50)
[03:10:25] *** Joins: duuude (~user@user/duuude)
[03:14:38] *** Quits: stiell (~stiell@gateway/tor-sasl/stiell) (Remote host closed the connection)
[03:17:33] *** Joins: stiell (~stiell@gateway/tor-sasl/stiell)
[03:20:24] *** Quits: SlimmyJimmy (blank@user/slimmyjimmy) (Quit: Going offline, see ya! (www.adiirc.com))
[03:21:35] *** Quits: sdfgsdfg (~dfghsfgs@user/sdfgsdfg) (Quit: ayo yoyo ayo yoyo hololo, hololo.)
[03:21:39] *** Quits: hg (~halosghos@user/halosghost) (Quit: WeeChat 3.4)
[03:22:59] *** Joins: IlhamiDogan (~IlhamiDog@077213066086.static.telenor.dk)
[03:23:23] *** Parts: IlhamiDogan (~IlhamiDog@077213066086.static.telenor.dk) ()
[03:32:11] *** Joins: SlimmyJimmy (blank@user/slimmyjimmy)
[03:37:58] *** Quits: gildasio (~gildasio@gateway/tor-sasl/gildasio) (Quit: WeeChat 3.4)
[03:39:02] <rk4> it renders for me but be damned if i can make out what it is
[03:41:24] *** Quits: Seirdy (~Seirdy@sourcehut/user/seirdy) (Quit: exiting 3.4)
[03:45:08] <MacGyver> It's a sponge.
[03:46:14] *** Quits: lord| (~lordpipe@user/lordpipe) (Read error: Connection reset by peer)
[03:47:58] *** Joins: lord| (~lordpipe@user/lordpipe)
[03:49:11] *** Quits: d1cor (~diego@179.63.242.122) (Ping timeout: 250 seconds)
[03:58:04] <TimMc> U+1F9FD
[03:58:20] <TimMc> just kind of looks like a speckly yellow blob, though.
[03:59:38] *** Quits: Wulf (~Wulf@user/wulf) (Ping timeout: 260 seconds)
[04:01:15] *** Joins: sdfgsdfg (~dfghsfgs@user/sdfgsdfg)
[04:01:26] *** Joins: Wulf (~Wulf@user/wulf)
[04:02:24] *** Quits: SlimmyJimmy (blank@user/slimmyjimmy) (Quit: Going offline, see ya! (www.adiirc.com))
[04:03:05] <xx> 🩻 
[04:04:01] *** Quits: PJBoy (~PJBoy@user/pjboy) (Ping timeout: 256 seconds)
[04:09:59] <TimMc> that's nothing, how about 𯩻
[04:10:20] <xx> nothing?
[04:10:25] <xx> check your raw log
[04:10:36] <TimMc> I mean in the one-upping sense. :-)
[04:10:46] <xx> ah
[04:10:57] <TimMc> I really appreciate that the fallback font here just shows a box with tiny hex characters inside to tell you the code point.
[04:11:22] <TimMc> (U+2FA7B is of course not an actual character. Not yet, at least.)
[04:12:15] <sarnold> awww my jenga tower of irc didn't even display the tofu boxes :(
[04:12:46] <xx> TimMc: should be 1FA7B not 2FA7b
[04:14:11] *** Joins: SlimmyJimmy (blank@user/slimmyjimmy)
[04:15:21] *** Joins: rmcrypt (~rmcrypt@139.59.81.246)
[04:15:35] *** Parts: rmcrypt (~rmcrypt@139.59.81.246) (WeeChat 2.8)
[04:16:38] <TimMc> Yes, I was "one-upping" yours by incrementing the first digit. :-)
[04:16:57] <TimMc> Yours doesn't actually display for me either, but I see it's assigned to... x-ray?
[04:19:56] <xx> guess you can't see it because it's not on the visible spectrum then :p
[04:20:33] <iz> mine just shows dumb boxes :/  prob a font issue
[04:21:04] *** Quits: Guyver2 (~Guyver@guyver2.xs4all.nl) (Quit: Going offline, see ya! (www.adiirc.com))
[04:39:10] <TimMc> This is interesting: "Fuzzy Message Detection" <https://eprint.iacr.org/2021/089>. « In this work we propose a new class of cryptographic primitives called fuzzy message detection schemes. These schemes allow a recipient to derive a specialized message detection key that can identify correct messages, while also incorrectly identifying non-matching messages with a specific and chosen false positive rate p. 
[04:39:16] <TimMc> This allows recipients to outsource detection work to an untrustworthy server, without revealing precisely which messages belong to the receiver. »
[04:39:33] <undeclared> ah security by obscurity
[04:39:35] <undeclared> interesting
[04:44:24] *** Quits: SlimmyJimmy (blank@user/slimmyjimmy) (Quit: Going offline, see ya! (www.adiirc.com))
[04:45:06] <TimMc> This is presented as an alternative to protocols where everyone has to download and try decrypting every message even to find out whether they've been sent anything.
[04:46:40] <TimMc> They're trying to maintain metadata resistance without trusted servers or having to download everything (or even one partition of everything).
[04:46:43] <xx> security through 'everyone who designed it has died of old age'
[04:48:13] <TimMc> I'm trying to figure out if this is suitable for the protocol I'm working on, where I'd like to have notification servers that speed up the base protocol (which is polling-based).
[04:50:16] *** Joins: Seirdy (~Seirdy@sourcehut/user/seirdy)
[04:56:11] *** Joins: SlimmyJimmy (blank@user/slimmyjimmy)
[04:59:56] *** Quits: zro (~zro@user/zro) (Ping timeout: 245 seconds)
[05:00:21] *** Quits: machinedgod (~machinedg@24.105.81.50) (Ping timeout: 256 seconds)
[05:02:38] *** Quits: _mikey (~mikey@user/mikey/x-4335048) (Quit: WeeChat 3.4)
[05:03:18] *** Joins: _mikey (~mikey@user/mikey/x-4335048)
[05:08:30] <danieldg> TimMc: multicast is tricky with things like that, but otherwise it's pretty useful
[05:08:59] <danieldg> TimMc: might want to look at how it handles malicious input, like hash table collisions
[05:10:10] *** Quits: ivii (~ivan@user/ivii) (Quit: Konversation terminated!)
[05:14:17] *** Joins: zro (~zro@user/zro)
[05:20:11] *** Quits: duuude (~user@user/duuude) (Ping timeout: 250 seconds)
[05:22:48] *** Quits: jtgd (~jtgd@user/jtgd) (Ping timeout: 250 seconds)
[05:26:24] *** Quits: SlimmyJimmy (blank@user/slimmyjimmy) (Quit: Going offline, see ya! (www.adiirc.com))
[05:34:13] *** Joins: frost (~frost@user/frost)
[05:35:35] *** Quits: gproto23 (~gproto23@user/gproto23) (Ping timeout: 268 seconds)
[05:35:52] *** Joins: hqdruxn08__ (~hqdruxn08@user/hqdruxn08)
[05:36:19] *** Joins: duuude (~user@user/duuude)
[05:36:24] *** Joins: jtgd (~jtgd@user/jtgd)
[05:38:10] *** Joins: SlimmyJimmy (blank@user/slimmyjimmy)
[05:40:07] *** Quits: hqdruxn08_ (~hqdruxn08@user/hqdruxn08) (Ping timeout: 256 seconds)
[05:55:31] *** Quits: dude12312414 (~test@gateway/tor-sasl/dude12312414) (Quit: THE RAM IS TOO DAMN HIGH)
[06:01:16] *** Joins: ert (~ert@2001:4b99:1:1:216:3eff:fee5:446f)
[06:08:23] *** Quits: SlimmyJimmy (blank@user/slimmyjimmy) (Quit: Going offline, see ya! (www.adiirc.com))
[06:08:44] *** Joins: SlimmyJimmy (blank@user/slimmyjimmy)
[06:32:32] *** Joins: labrador (~labrador@user/labrador)
[06:38:56] *** Quits: SlimmyJimmy (blank@user/slimmyjimmy) (Quit: Going offline, see ya! (www.adiirc.com))
[06:39:33] *** Joins: SlimmyJimmy (blank@user/slimmyjimmy)
[07:09:55] *** Quits: SlimmyJimmy (blank@user/slimmyjimmy) (Quit: Going offline, see ya! (www.adiirc.com))
[07:10:23] *** Joins: SlimmyJimmy (blank@user/slimmyjimmy)
[07:19:59] *** Quits: zro (~zro@user/zro) (Ping timeout: 250 seconds)
[07:23:32] *** Joins: zro (~zro@user/zro)
[07:28:38] *** Quits: frost (~frost@user/frost) (Quit: Connection closed)
[07:30:13] <TimMc> I don't even have a sense of the basic crypto at play.
[07:31:02] *** Quits: xx (~xx@user/xx) (Ping timeout: 260 seconds)
[07:31:28] <TimMc> I'm really curious how the false positive rate is set, because that's the kind of thing that could be gamed.
[07:31:29] <danieldg> the simplest version doesn't even use crypto - you just request "all messages whose target pubkey ends in 0xEF", for example, to get 1/256
[07:31:44] <danieldg> that assumes the target pubkey is visible, though
[07:32:05] <TimMc> I think that's the bucketing approach that the paper says it is an improvement on.
[07:32:12] <TimMc> although not totally sure why!
[07:32:21] <danieldg> ah.  I didn't actually read it
[07:34:28] <TimMc> I'm trying, but it's slow going.
[07:35:43] *** Quits: zro (~zro@user/zro) (Ping timeout: 256 seconds)
[07:35:58] <TimMc> Mid-way through page 4 seems to be an explanation of the fundamental scheme.
[07:40:27] *** Quits: SlimmyJimmy (blank@user/slimmyjimmy) (Quit: Going offline, see ya! (www.adiirc.com))
[07:40:59] *** Joins: SlimmyJimmy (blank@user/slimmyjimmy)
[07:48:52] <yates> if a constant is used along with other data to generate a key used in MAC-based authentication, would it be considered a nonce?
[07:49:35] <yates> in the case, "generate a key" means to use AES128-ECB to generate another 128-bit key.
[07:49:58] <yates> (please don't parrot to me how bad ECB is. it's not my algorithm and i can't change it)
[07:51:45] <yates> i thinking "no," but i'd like clarification/confirmation
[07:53:06] *** Quits: Fusl (fusl@1.0.0.127.in-addr.arpa.li) (Excess Flood)
[07:53:49] <yates> s/i/i'm/
[08:02:38] *** Quits: Gallomimia (~Gallomimi@node-1w7jra2a2gqpx19zdtszpvxaa.ipv6.telus.net) (Remote host closed the connection)
[08:09:14] <yates> if a constant is used along with other data to generate a key used in MAC-based authentication SESSION, would it be considered a nonce?
[08:09:31] <yates> i would say no, since it not used once but every session.
[08:09:41] <yates> s/it/it's/
[08:11:12] *** Quits: SlimmyJimmy (blank@user/slimmyjimmy) (Quit: Going offline, see ya! (www.adiirc.com))
[08:11:32] *** Joins: SlimmyJimmy (blank@user/slimmyjimmy)
[08:15:27] *** Joins: lacernet[m] (~lacernetm@2001:470:69fc:105::1:58ee)
[08:15:48] <maroon> yates, if something is a constant, then by definition it cant be a 'number used once'
[08:17:20] <yates> maroon: well, yeah, but there are no real constants. sessions come and got, memories crash, wars happen, ...
[08:17:25] <maroon> you're not clear what you mean by constant used with other data, are those both observable to an adversary?
[08:18:48] <maroon> or you mean these are combined with the key, like a salt?
[08:20:04] <yates> the "constant" is not easily observable, i.e., not without disassembling the device and using scanning electron microscopes and/or focused ion beams..
[08:20:33] <yates> but it is constant across authentication sessions
[08:21:08] <maroon> it's like a device serial number?
[08:21:17] <yates> the constant and the other data are used to assembly a cipher block when is the encrypted via aes128-ecb, and the result is this new key
[08:21:44] <yates> maroon: not really, the "other data" changes
[08:21:52] <yates> s/assembly/assemble/
[08:22:18] <yates> s/when is the/which is then used as the/
[08:22:23] <yates> sheesh! sorry!
[08:22:42] *** Joins: Fusl (fusl@1.0.0.127.in-addr.arpa.li)
[08:24:27] <yates> s/when is the/which is then/
[08:24:36] <maroon> so the 'constant' is like a hardware dongle that's combined with a random-counter or a sequential?
[08:24:57] <Alipha> Looking at the usages of "nonce" in symmetric ciphers, they don't have a structure and they have drastic security implications if they're reused. You have a structure, and it's actually not important at all if you reuse the same key for a MAC, as long as the key remains secret
[08:24:57] <yates> yes, that's pretty close
[08:27:43] <yates> Alipha: do you have a citation that proves your last statement (that it's actually not important at all if you reuse the same key for a MAC... )? 
[08:28:02] <maroon> alipha, what do you mean by a nonce not having structure?
[08:28:38] <yates> it not remaining secret is the very fear..
[08:30:04] <maroon> the 'other' combined with your magic string, is that sequential?
[08:32:24] <Alipha> maroon: looking at like chacha20, the nonce can be any number. It doesn't matter what it is, as long as it's not reused.... And I'm now realizing I perhaps misinterpreted yates's question and what "it" was, but I took yates to be asking if the "constant plus other stuff" was a nonce. In which case "constant plus other stuff" sounds structured
[08:32:36] *** Quits: karstensrage (~karstensr@user/karstensrage) (Ping timeout: 250 seconds)
[08:32:38] *** Joins: karstensrage_ (~karstensr@nibbler.warped.com)
[08:32:42] <maroon> the nice thing about ecb mode is that you can have a sequentially changing input, and you can create a seemingly random output which doesnt have the birthday collisions that you'd have if you created the output randomly
[08:33:32] <maroon> so if AES used an IV created like AES_ECB(key=secret data=sequential unique) your output appears random to someone without the key
[08:34:18] <maroon> and it doesnt have the penguin.png risk of repeating output, because the output cant repeat if the input doesnt repeat
[08:34:54] <lacernet[m]> using a scheme like that makes some assumptions about the entropy of the first block 
[08:35:57] <maroon> it's creating an unpredictable nonce
[08:37:11] <lacernet[m]> if you make multiple ciphertexts with the same key?
[08:37:44] <Alipha> yates: sorry, I don't have any references off hand, but if you're using HMAC, then you can reuse the same key as much as you want. But if you're talking about, say, poly1305, that's actually called a one-time authenticator, in which you CANNOT reuse the key
[08:39:10] <maroon> lacernet[m], im creating a salt/iv that appears to be random, but is guaranteed to not have a birthday-paradox chance of being a repeat until the cycle repeats after 2^128 values
[08:39:17] <lacernet[m]> re-using a nonce in other schemes is also a complete break. 
[08:39:34] <lacernet[m]> ie, ecdsa and eddsa. 
[08:40:48] <maroon> yeah, if a scheme uses the word 'nonce' correctly, that's a red flag that you need to avoid repeat it
[08:41:21] <lacernet[m]> maroon: why not just use a normal, well reviewed cipher mode? 
[08:41:45] *** Quits: SlimmyJimmy (blank@user/slimmyjimmy) (Quit: Going offline, see ya! (www.adiirc.com))
[08:42:20] *** Joins: SlimmyJimmy (blank@user/slimmyjimmy)
[08:42:21] <maroon> lacernet[m], this is just creating the nonce, anything else would have birthday chance of collision
[08:42:37] <maroon> basically this is no different than CTR mode
[08:43:12] <maroon> only its not encrypting a multiple-block ciphertext, it's creating a series of unique nonces
[08:43:45] <lacernet[m]> for symmetric ciphers we kind of don't care about collisions in the nonce all that much generally speaking
[08:43:57] <lacernet[m]> why do you want a series of unique nonces?
[08:45:23] <lacernet[m]> usually that's only a consideration for stuff like ECDSA, and we have strong schemes for nonce creation there. 
[08:45:29] <maroon> im describing how to create unique nonces without having them be sequential
[08:46:04] <lacernet[m]> yeah, I don't understand the application. 
[09:09:56] <Alipha> yates: what algorithm are you using for the MAC?
[09:12:33] *** Quits: SlimmyJimmy (blank@user/slimmyjimmy) (Quit: Going offline, see ya! (www.adiirc.com))
[09:13:05] *** Joins: SlimmyJimmy (blank@user/slimmyjimmy)
[09:14:10] <lacernet[m]> really almost every cryptography problem today can be solved with a combination of the basic elements (AES with standard modes), ECDSA, RSA, SHA2, etc. if you're going off those there's got to be some really good reason for it.
[09:15:25] <halosghost> maroon: that's interesting
[09:16:12] <labrador> lacernet[m], why does noone use sha3
[09:17:09] <rk4> sha2 isn't broken enough yet <_<
[09:17:18] <labrador> lol
[09:17:18] <Peng> labrador: It's new and slower
[09:17:51] <labrador> Peng, being slow is fine...its more secure than sha2
[09:17:54] *** Joins: c41e3a (~c41e3a@user/c41e3a)
[09:18:17] <halosghost> maroon: out of interest, couldn't you get the same effect from just rolling a random number (say, 32 bytes long) to start, and the sha256(num), and increment num for each new nonce?
[09:18:50] <Peng> labrador: For many purposes they are both "secure"
[09:19:34] <maroon> halosghost, if you're getting a 64bit outbut, that means you'd truncate the sha256 to 64 bits, and you'll have 50% birthday collision after 2^32 outputs
[09:19:37] <labrador> well right now yes but sha2 is starting to break...
[09:19:59] <halosghost> maroon: mmm, I missed the need for a 64-bit output
[09:20:14] <halosghost> (I assumed any size of nonce was acceptable, so figured the full sha256 hash would work)
[09:21:06] <maroon> halosghost, or 128bit output, even though the chance of duplicate is exponentially small, it's not a nonce if there's a chance of repeat
[09:21:54] <yawkat> I love how many discussions in #crypto end up with "i want a short PRP" 
[09:21:55] <maroon> depends on what the use of the nonce, like in different flavors of chacha, the nonce is allowed to be only 64-bit or 96bit
[09:22:38] <maroon> or 'the design forces me to have a short nonce'
[09:22:53] <halosghost> perhaps another silly idea
[09:23:24] <halosghost> wait
[09:23:43] <Peng> labrador: In what way is SHA-2 "starting to break"?
[09:23:45] <Alipha> AES-GCM's nonce is only 96 bits
[09:24:37] <halosghost> maroon: to be clear, with a 64-bit nonce, you can only use 2^64-1 nonces before there's a repeat, no matter what you do, right?
[09:24:40] <Peng> The world would be a better place if popular things had larger nonces. :<
[09:24:44] <yawkat> Peng: well, length extension...
[09:25:09] <maroon> correct halosghost, that's why the variant of chacha using a 64bit nonce has a limit for data allowed for same key
[09:25:16] <halosghost> gotcha
[09:25:50] <Alipha> Or here's an idea for nonces: just go 0, 1, 2, 3,... :-)
[09:25:57] <halosghost> lol
[09:26:09] <labrador> Peng, a lot of its rounds have broken
[09:26:18] <halosghost> if you needed non-sequential, I suppose you could fisher-yates shuffle [0, 2^64-1]
[09:26:22] <labrador> like 57/80 for sha256
[09:26:25] <labrador> i think
[09:26:42] <maroon> i keep seeing that CBC mode should not have a predictable IV, so this is a way to make it unpredictable plus a no-repeat
[09:27:28] <halosghost> mm
[09:27:54] <Alipha> Indeed, CBC must have non-predictable IVs
[09:29:02] <maroon> sha1 is the one with 80 rounds, sha256 has 64
[09:29:07] <Alipha> AES-ECB an incrementing number is a fine way to generate 128-bit IVs
[09:29:23] <maroon> and the 57/80 sounds like something i've seen for sha-1
[09:29:39] <Alipha> 46/64 of sha256 is broken
[09:31:09] <labrador> maroon, then i must have confused them...
[09:31:21] <labrador> but 46/64 is not better
[09:33:28] *** Quits: labrador (~labrador@user/labrador) (Quit: Leaving)
[09:43:17] *** Quits: SlimmyJimmy (blank@user/slimmyjimmy) (Quit: Going offline, see ya! (www.adiirc.com))
[09:43:27] *** Quits: ua__ (~ua@public-gprs226401.centertel.pl) (Ping timeout: 256 seconds)
[09:43:52] *** Joins: SlimmyJimmy (blank@user/slimmyjimmy)
[09:45:01] *** Joins: ua__ (~ua@public-gprs226401.centertel.pl)
[09:45:59] *** Joins: frost (~frost@user/frost)
[10:02:36] *** Quits: drathir_tor (~drathir@wireguard/tunneler/drathir) (Ping timeout: 276 seconds)
[10:05:39] *** Joins: drathir_tor (~drathir@wireguard/tunneler/drathir)
[10:06:24] *** Joins: labrador (~labrador@user/labrador)
[10:14:04] *** Quits: SlimmyJimmy (blank@user/slimmyjimmy) (Quit: Going offline, see ya! (www.adiirc.com))
[10:14:38] *** Joins: SlimmyJimmy (blank@user/slimmyjimmy)
[10:18:05] *** Joins: callq (~callq@2409:4062:2d8d:345f:4836:a5d4:7aa7:5f2b)
[10:23:26] *** Quits: echoreply (~echoreply@45.32.163.16) (Quit: WeeChat 2.8)
[10:24:44] *** Joins: echoreply (~echoreply@2001:19f0:9002:1f3b:5400:ff:fe6f:8b8d)
[10:25:03] *** Joins: solrize (~solrize@user/solrize)
[10:26:30] <solrize> hi i want to encrypt some files for backup, i.e. pipe the output of tar through an encryption filter and save to disk.  good method: 1) openssl  2) gnuog  3) nacl wrapper  4) something else?
[10:26:33] *** Quits: duuude (~user@user/duuude) (Ping timeout: 250 seconds)
[10:27:20] <Peng> https://github.com/FiloSottile/age ?
[10:28:00] * rk4 votes gpg
[10:29:26] *** Joins: PJBoy (~PJBoy@user/pjboy)
[10:31:18] <solrize> gpg is possible, i hadn't heard of age before, looking at it now
[10:31:32] <solrize> is nacl still in much use?
[10:33:11] <labrador> solrize, I vote for gpg too
[10:33:51] *** Joins: BOKALDO (~BOKALDO@user/bokaldo)
[10:34:20] <solrize> labrador, can gpg encrypt a stream without knowing the length in advance?  i sort of remembered a byte count in the header structure
[10:34:42] <solrize> it's gonna be potentially 100s of GB
[10:35:52] *** Joins: BOKALDO_ (~BOKALDO@user/bokaldo)
[10:35:57] *** Quits: BOKALDO (~BOKALDO@user/bokaldo) (Read error: Connection reset by peer)
[10:37:13] <labrador> Uhh it probably cannot...it requires the entire data to be there before encrypting
[10:41:47] *** Quits: c41e3a (~c41e3a@user/c41e3a) (Quit: c41e3a)
[10:42:24] *** Joins: BOKALDO__ (~BOKALDO@user/bokaldo)
[10:43:25] *** Joins: c41e3a (~c41e3a@user/c41e3a)
[10:44:50] *** Quits: SlimmyJimmy (blank@user/slimmyjimmy) (Quit: Going offline, see ya! (www.adiirc.com))
[10:44:59] *** Quits: MrFantastik (~f@2607:f598:bbda:170:9975:1508:5896:d1b) (Ping timeout: 256 seconds)
[10:45:21] *** Quits: BOKALDO_ (~BOKALDO@user/bokaldo) (Ping timeout: 245 seconds)
[10:45:25] *** Joins: SlimmyJimmy (blank@user/slimmyjimmy)
[10:52:59] *** Quits: PJBoy (~PJBoy@user/pjboy) (Ping timeout: 250 seconds)
[10:53:50] <rk4> i'm sure i've done that....easy to check
[10:56:03] <rk4> dd if=/dev/urandom | gpg -c | pv > /dev/null # seems fine, gpg isn't using much memory at all, it's spitting out to stdout @ 30MiB/s
[10:56:40] <rk4> maybe -e will be diff, let me know ;P
[10:57:03] <labrador> rk4, oh thats cool
[10:57:07] *** Quits: c41e3a (~c41e3a@user/c41e3a) (Quit: c41e3a)
[11:07:36] *** Quits: madage (~madage@user/madage) (Ping timeout: 276 seconds)
[11:09:49] *** Joins: MajorBiscuit (~MajorBisc@86-88-79-148.fixed.kpn.net)
[11:12:23] *** Joins: Malvolio (~Malvolio@user/malvolio)
[11:14:39] *** Quits: MajorBiscuit (~MajorBisc@86-88-79-148.fixed.kpn.net) (Ping timeout: 250 seconds)
[11:15:37] *** Quits: SlimmyJimmy (blank@user/slimmyjimmy) (Quit: Going offline, see ya! (www.adiirc.com))
[11:16:04] *** Joins: MajorBiscuit (~MajorBisc@c-001-013-035.client.tudelft.eduvpn.nl)
[11:16:38] *** Joins: SlimmyJimmy (blank@user/slimmyjimmy)
[11:19:50] *** Joins: madage (~madage@user/madage)
[11:22:59] *** Joins: Guyver2 (~Guyver@guyver2.xs4all.nl)
[11:26:13] *** Joins: sektor|3 (~kvirc@94.155.193.66)
[11:28:02] *** Quits: _mikey (~mikey@user/mikey/x-4335048) (Quit: WeeChat 3.4)
[11:29:25] *** Quits: sektor|2 (~kvirc@87.227.175.182) (Ping timeout: 256 seconds)
[11:31:13] <lacernet[m]> 30MB/s is kind of slow 
[11:31:40] <lacernet[m]> but, I think you can encrypt streams like that
[11:41:22] <yawkat> 30MB/s might just be bounded by urandom.
[11:41:27] <solrize> try turning off compression
[11:41:48] <solrize> what is pv?
[11:44:39] *** Quits: frost (~frost@user/frost) (Quit: Connection closed)
[11:45:06] <rk4> packages.debian.org/pv
[11:45:25] <solrize> ah nice thx
[11:46:50] *** Quits: SlimmyJimmy (blank@user/slimmyjimmy) (Quit: Going offline, see ya! (www.adiirc.com))
[11:47:16] *** Joins: SlimmyJimmy (blank@user/slimmyjimmy)
[11:48:31] <solrize> with -z 0 i get 200+ MB/sec which is enough for my purposes   thanks
[11:52:29] *** Joins: andreasbuhr (~quassel@p549dbbae.dip0.t-ipconnect.de)
[12:07:12] *** Joins: Haohmaru (~Haohmaru@195.24.53.110)
[12:17:01] *** Joins: machinedgod (~machinedg@24.105.81.50)
[12:17:29] *** Quits: SlimmyJimmy (blank@user/slimmyjimmy) (Quit: Going offline, see ya! (www.adiirc.com))
[12:18:10] *** Joins: SlimmyJimmy (blank@user/slimmyjimmy)
[12:19:07] *** Joins: ivii (~ivan@user/ivii)
[12:38:28] *** Quits: Malvolio (~Malvolio@user/malvolio) (Read error: Connection reset by peer)
[12:44:59] *** Joins: Malvolio (~Malvolio@user/malvolio)
[12:48:23] *** Quits: SlimmyJimmy (blank@user/slimmyjimmy) (Quit: Going offline, see ya! (www.adiirc.com))
[12:49:02] *** Joins: SlimmyJimmy (blank@user/slimmyjimmy)
[12:52:32] *** Quits: Malvolio (~Malvolio@user/malvolio) (Ping timeout: 240 seconds)
[12:53:52] *** Quits: alip (~alip@exherbo/developer/alip) (Read error: Connection reset by peer)
[12:54:47] *** Joins: alip (~alip@exherbo/developer/alip)
[12:55:49] *** Joins: zer0bitz (~zer0bitz@2001:2003:f74d:b800:2df2:1ec5:8dd3:29f0)
[13:03:57] *** Quits: Sofia (~sofia@user/sofia) (Ping timeout: 276 seconds)
[13:12:42] *** Joins: Sofia (~sofia@user/sofia)
[13:18:58] *** Quits: Deknos (~someone@user/menace) (Quit: Deknos)
[13:19:14] *** Quits: SlimmyJimmy (blank@user/slimmyjimmy) (Quit: Going offline, see ya! (www.adiirc.com))
[13:19:40] *** Joins: SlimmyJimmy (blank@user/slimmyjimmy)
[13:39:05] *** Quits: sdfgsdfg (~dfghsfgs@user/sdfgsdfg) (Quit: ayo yoyo ayo yoyo hololo, hololo.)
[13:45:03] *** Joins: gproto23 (~gproto23@user/gproto23)
[13:45:20] *** Joins: Malvolio (~Malvolio@user/malvolio)
[13:47:12] *** Quits: Guyver2 (~Guyver@guyver2.xs4all.nl) (Remote host closed the connection)
[13:49:52] *** Quits: SlimmyJimmy (blank@user/slimmyjimmy) (Quit: Going offline, see ya! (www.adiirc.com))
[13:50:25] *** Joins: SlimmyJimmy (blank@user/slimmyjimmy)
[13:53:43] *** Joins: sdfgsdfg (~dfghsfgs@user/sdfgsdfg)
[13:58:14] *** Malvolio is now known as Guest6496
[13:58:14] *** Quits: Guest6496 (~Malvolio@user/malvolio) (Killed (platinum.libera.chat (Nickname regained by services)))
[14:02:15] *** Joins: Malvolio (~Malvolio@user/malvolio)
[14:20:37] *** Quits: SlimmyJimmy (blank@user/slimmyjimmy) (Quit: Going offline, see ya! (www.adiirc.com))
[14:21:17] *** Joins: SlimmyJimmy (blank@user/slimmyjimmy)
[14:27:26] *** Quits: dingdreher (~dingdrehe@2a02:aa08:401e:fff2:55a1:91a6:bc24:285b) (Ping timeout: 245 seconds)
[14:27:37] *** Quits: callq (~callq@2409:4062:2d8d:345f:4836:a5d4:7aa7:5f2b) (Ping timeout: 240 seconds)
[14:29:30] *** Joins: Lord_of_Life_ (~Lord@user/lord-of-life/x-2819915)
[14:30:06] *** Quits: Lord_of_Life (~Lord@user/lord-of-life/x-2819915) (Ping timeout: 260 seconds)
[14:30:50] *** Lord_of_Life_ is now known as Lord_of_Life
[14:36:41] *** Joins: gaussianblue (~gaussianb@78-61-246-87.static.zebra.lt)
[14:41:29] *** Quits: Lord_of_Life (~Lord@user/lord-of-life/x-2819915) (Excess Flood)
[14:41:53] *** Joins: Lord_of_Life (~Lord@user/lord-of-life/x-2819915)
[14:51:12] *** Quits: kish` (~aqua@user/aqua) (Ping timeout: 276 seconds)
[14:51:30] *** Quits: SlimmyJimmy (blank@user/slimmyjimmy) (Quit: Going offline, see ya! (www.adiirc.com))
[14:52:09] *** Joins: SlimmyJimmy (blank@user/slimmyjimmy)
[14:55:03] *** Joins: kish` (~aqua@user/aqua)
[15:08:28] *** Quits: sdfgsdfg (~dfghsfgs@user/sdfgsdfg) (Quit: ayo yoyo ayo yoyo hololo, hololo.)
[15:22:21] *** Quits: SlimmyJimmy (blank@user/slimmyjimmy) (Quit: Going offline, see ya! (www.adiirc.com))
[15:22:58] *** Joins: SlimmyJimmy (blank@user/slimmyjimmy)
[15:37:12] *** Joins: ardell (~ardell@user/ardell)
[15:41:11] *** Joins: gildasio (~gildasio@gateway/tor-sasl/gildasio)
[15:48:30] *** Joins: c41e3a (~c41e3a@user/c41e3a)
[15:53:11] *** Quits: SlimmyJimmy (blank@user/slimmyjimmy) (Quit: Going offline, see ya! (www.adiirc.com))
[15:53:39] *** Joins: SlimmyJimmy (blank@user/slimmyjimmy)
[15:59:47] *** Joins: b93 (~00@a94-132-238-173.cpe.netcabo.pt)
[16:00:58] *** Joins: gabriel1 (~gabriel1@user/gabriel1)
[16:02:02] *** Joins: d1cor (~diego@179.63.242.122)
[16:11:55] *** Joins: c41e3a_ (~c41e3a@user/c41e3a)
[16:12:03] <TimMc> solrize: I don't know how much NaCl is used, but there's a very popular compatible fork called libsodium with a better API.
[16:14:27] *** Quits: c41e3a (~c41e3a@user/c41e3a) (Ping timeout: 256 seconds)
[16:14:33] <TimMc> halosghost: I've encountered a number of ciphers that just suggest using a nonces 0, 1, 2, 3... as Alipha suggests.
[16:17:10] <TimMc> In borgbackup, the last-used nonce is written to disk, but also saved to the remote backup, and the max of the two is used.
[16:17:49] <TimMc> In another place, I saw a recommendation to have one party use even incremental nonces and the other odd (I think this was in libsodium secretbox).
[16:23:37] *** Joins: rustycl0ck (~ircuser@gateway/tor-sasl/rustycl0ck)
[16:23:52] *** Quits: SlimmyJimmy (blank@user/slimmyjimmy) (Quit: Going offline, see ya! (www.adiirc.com))
[16:24:11] *** Joins: SlimmyJimmy (blank@user/slimmyjimmy)
[16:34:26] *** Joins: defiant (~defiant@user/defiant)
[16:34:53] *** Joins: menace (~someone@ppp-93-104-186-58.dynamic.mnet-online.de)
[16:35:01] *** Quits: menace (~someone@ppp-93-104-186-58.dynamic.mnet-online.de) (Changing host)
[16:35:01] *** Joins: menace (~someone@user/menace)
[16:35:05] *** menace is now known as Deknos
[16:40:50] *** Joins: rustycl01k (~ircuser@gateway/tor-sasl/rustycl0ck)
[16:41:42] *** Quits: rudi_s (~simon@user/rudi-s/x-7673890) (Ping timeout: 260 seconds)
[16:42:27] *** Joins: rudi_s (~simon@user/rudi-s/x-7673890)
[16:44:18] *** Quits: rustycl0ck (~ircuser@gateway/tor-sasl/rustycl0ck) (Ping timeout: 276 seconds)
[16:54:24] *** Quits: SlimmyJimmy (blank@user/slimmyjimmy) (Quit: Going offline, see ya! (www.adiirc.com))
[16:54:54] *** Joins: SlimmyJimmy (blank@user/slimmyjimmy)
[16:56:24] *** Quits: byteskeptical (~amnesia@user/byteskeptical) (Quit: Lost terminal)
[16:57:16] *** Quits: c41e3a_ (~c41e3a@user/c41e3a) (Quit: c41e3a_)
[16:59:07] *** Joins: c41e3a (~c41e3a@user/c41e3a)
[16:59:16] *** Quits: c41e3a (~c41e3a@user/c41e3a) (Client Quit)
[17:20:33] *** Joins: xenoterracide_ (~xenoterra@99-124-139-34.lightspeed.iplsin.sbcglobal.net)
[17:25:07] *** Quits: SlimmyJimmy (blank@user/slimmyjimmy) (Quit: Going offline, see ya! (www.adiirc.com))
[17:25:17] *** Joins: dude12312414 (~test@gateway/tor-sasl/dude12312414)
[17:25:30] *** Joins: SlimmyJimmy (blank@user/slimmyjimmy)
[17:34:43] *** Joins: Guyver2 (~Guyver@guyver2.xs4all.nl)
[17:38:44] <Alipha> TimMc: halosghost: I wouldn't write the last-used nonce to disk. Far too easy for that to go wrong and nonces get reused. I'd generate a new symmetric key per program run (or per new connection. Or per file encrypted) using ECDHE or a KDF+random salt or something. And while the odd/even nonce solution works, it seems that instead the recommended solution is to have different keys for the different directions
[17:38:46] <Alipha> of communication
[17:38:49] *** Quits: BOKALDO__ (~BOKALDO@user/bokaldo) (Quit: Leaving)
[17:39:35] *** Quits: gabriel1 (~gabriel1@user/gabriel1) (Remote host closed the connection)
[17:39:38] <Deknos> i always thought the nonce-concept a little funny.. i mean does anyone check that nonces are not reused and perhaps then also can be replayed? :(
[17:42:05] <maroon> or if your nonce-space is in the bazillions, you could just increment the nonce counter +1million each time?
[17:42:36] <maroon> the easiest way to avoid re-using a nonce, is to have a sequential counter, like HOTP does
[17:43:31] <Deknos> if you increment it predictable it's not a nonce. 
[17:44:29] <maroon> of course it is. nonce=number used once
[17:44:38] <Deknos> yes, counter can be such a thing, and if you build your protocol properly they are good. but tbh i am not sure if the concept of nonces are totally replaceable with the alternatives atm :(
[17:44:43] *** Joins: xx (~xx@user/xx)
[17:44:57] <maroon> the requirements for a nonce is different than for an IV
[17:45:23] <Deknos> a nonce is also a thing which prevents replaying, so it must be relative unpredictable, otherwise you could do replay attacks with many tries, isn't it?
[17:45:41] <maroon> you *can* use the transform i mentioned earlier to disguise the nonce counter: AES_ECB(key=secret_nonce_key data=counter++)
[17:46:18] <maroon> if your counter-space is 2^128, or even 2^64, they'd just need to wait a long timer for you to get around to repeating it
[17:48:02] <maroon> but you should not assume that sha(counter++) is good enough as your scrambled nonce, because that doesn't avoid collisions
[17:49:01] <Deknos> but if you are rigid in its concept it's not a nonce, if you use it more often than sent and sent-back?
[17:50:05] <maroon> 1/e = 36.7%, and 1-2/e = 26.4%. if you generate 2^128 random 128-bit values, you have 1/e chance of a specific 128-bit value of happening 1 time, another 1/e chance of it happening 0 times, and 26.4% chance that a 128-bit value will happen 2+ times
[17:50:33] <maroon> if you're rigid in using it 1 time, then it's a nonce :)
[17:50:34] *** Joins: byteskeptical (~amnesia@user/byteskeptical)
[17:51:14] *** Quits: zer0bitz (~zer0bitz@2001:2003:f74d:b800:2df2:1ec5:8dd3:29f0) (Ping timeout: 260 seconds)
[17:51:15] <maroon> nonce needs to be unique, it doesnt need to be random. if you want to spin it through AES_ECB, that's fine
[17:51:46] *** Quits: xenoterracide_ (~xenoterra@99-124-139-34.lightspeed.iplsin.sbcglobal.net) (Remote host closed the connection)
[17:51:55] *** Quits: Wulf (~Wulf@user/wulf) (Ping timeout: 256 seconds)
[17:52:11] *** Joins: xenoterracide_ (~xenoterra@2600:1700:71d4:810:101f:cf82:e73c:f52b)
[17:52:12] <maroon> nonce are used for things where re-usage is the death knell, like for block ciphers in CTR mode, or for stream ciphers
[17:55:43] *** Quits: SlimmyJimmy (blank@user/slimmyjimmy) (Quit: Going offline, see ya! (www.adiirc.com))
[17:56:04] *** Joins: SlimmyJimmy (blank@user/slimmyjimmy)
[17:56:05] <Alipha> Deknos: any good protocol should prevent replay attacks by keeping track of the largest nonce seen and reject any messages with smaller nonces. (assuming you use the incrementing nonce method, instead of the random nonce method)
[17:56:56] <Alipha> (which also prevents out of order attacks)
[17:58:26] *** Joins: Wulf (~Wulf@user/wulf)
[17:59:03] *** Joins: hg (~halosghos@user/halosghost)
[17:59:22] <maroon> attention folks, we just decoded a message that the japanese are planning to attack pearl harbor!
[17:59:25] *** Joins: boxframes_ (~Saloframe@user/Saloframes)
[17:59:37] <maroon> and it's authentic
[18:00:26] *** Quits: byteskeptical (~amnesia@user/byteskeptical) (Remote host closed the connection)
[18:00:43] *** Quits: Warped (~Warped@user/warped) (Quit: We Gone! Bye Bye)
[18:01:39] *** Quits: rustycl01k (~ircuser@gateway/tor-sasl/rustycl0ck) (Ping timeout: 276 seconds)
[18:02:51] *** Quits: Saloframes (~Saloframe@user/Saloframes) (Ping timeout: 250 seconds)
[18:06:55] *** Joins: byteskeptical (~amnesia@user/byteskeptical)
[18:12:18] *** karstensrage_ is now known as karstensrage
[18:12:42] *** Quits: karstensrage (~karstensr@nibbler.warped.com) (Changing host)
[18:12:42] *** Joins: karstensrage (~karstensr@user/karstensrage)
[18:14:04] *** Quits: b93 (~00@a94-132-238-173.cpe.netcabo.pt) (Read error: Connection reset by peer)
[18:14:47] <Deknos> Alipha, so implementation SHOULD track nonces? and when you use random nonces, you have to track a couple of them? i admit i am still sceptical but i have no better idea. at least the AES+counter+nonce idea seems to be a good thing for practice
[18:17:47] <maroon> Deknos, if you are communicating with someone else, who also uses the same shared key, then you both should not repeat each other's nonces
[18:18:30] <maroon> that's why the solutions have been mentioned, of either having each side be evens/odds, or have a different encryption key used by each person
[18:18:45] <Deknos> which can be made pretty sure, if your nonces are large enough. i thought more about thousand-of-replay-test-attacks..
[18:19:02] <Deknos> yeah i know that. but every time i hear nonce i get pretty uneasy
[18:19:21] <Alipha> maroon: but that doesn't prevent replay or out of order attacks, if you're not tracking which nonces have been used
[18:21:38] <Deknos> oh yeah, out of order attacks.. or typing attacks >.<
[18:23:32] *** Quits: xenoterracide_ (~xenoterra@2600:1700:71d4:810:101f:cf82:e73c:f52b) (Ping timeout: 240 seconds)
[18:26:17] *** Quits: SlimmyJimmy (blank@user/slimmyjimmy) (Quit: Going offline, see ya! (www.adiirc.com))
[18:26:42] *** Joins: SlimmyJimmy (blank@user/slimmyjimmy)
[18:27:52] <Alipha> Deknos: so yes, for incrementing nonces, it's easy: you reject any messages with the same or older nonce than the newest nonce you've seen on a valid message. If you're using random nonces or need to allow out of order receiving of messages, then you should have a timestamp on the messages and keep track of nonces used within the last couple minutes or something, and then reject messages that are older than a
[18:27:54] <Alipha> couple minutes or have reused nonces.
[18:30:52] *** Joins: hlauk (~hlauk@176.33.96.72)
[18:32:37] *** Quits: llorllale (~llorllale@198.98.119.85) (Ping timeout: 240 seconds)
[18:35:34] *** Joins: BOKALDO (~BOKALDO@user/bokaldo)
[18:45:17] *** Joins: c41e3a (~c41e3a@user/c41e3a)
[18:56:55] *** Quits: SlimmyJimmy (blank@user/slimmyjimmy) (Quit: Going offline, see ya! (www.adiirc.com))
[18:57:34] *** Joins: SlimmyJimmy (blank@user/slimmyjimmy)
[19:00:29] *** Quits: hlauk (~hlauk@176.33.96.72) (Ping timeout: 256 seconds)
[19:00:55] *** Joins: xenoterracide (~xenoterra@2600:1700:71d4:810:101f:cf82:e73c:f52b)
[19:03:54] *** Joins: xenoterracide_ (~xenoterra@2600:1700:71d4:810:101f:cf82:e73c:f52b)
[19:03:55] *** Quits: xenoterracide (~xenoterra@2600:1700:71d4:810:101f:cf82:e73c:f52b) (Remote host closed the connection)
[19:05:18] *** Joins: zer0bitz (~zer0bitz@2001:2003:f74d:b800:a89e:b347:cccb:c7e5)
[19:05:51] *** Quits: xenoterracide_ (~xenoterra@2600:1700:71d4:810:101f:cf82:e73c:f52b) (Remote host closed the connection)
[19:06:12] *** Joins: xenoterracide_ (~xenoterra@2600:1700:71d4:810:101f:cf82:e73c:f52b)
[19:08:41] *** Quits: xenoterracide_ (~xenoterra@2600:1700:71d4:810:101f:cf82:e73c:f52b) (Read error: Connection reset by peer)
[19:09:06] *** Joins: xenoterracide (~xenoterra@2600:1700:71d4:810:101f:cf82:e73c:f52b)
[19:09:57] *** Quits: labrador (~labrador@user/labrador) (Quit: Leaving)
[19:12:05] *** Quits: c41e3a (~c41e3a@user/c41e3a) (Quit: c41e3a)
[19:21:46] *** Quits: d1cor (~diego@179.63.242.122) (Ping timeout: 260 seconds)
[19:24:40] *** Joins: c41e3a (~c41e3a@user/c41e3a)
[19:27:47] *** Quits: SlimmyJimmy (blank@user/slimmyjimmy) (Quit: Going offline, see ya! (www.adiirc.com))
[19:28:19] *** Joins: SlimmyJimmy (blank@user/slimmyjimmy)
[19:30:09] *** Joins: labrador (~labrador@user/labrador)
[19:33:32] *** Quits: drathir_tor (~drathir@wireguard/tunneler/drathir) (Remote host closed the connection)
[19:34:42] *** Joins: drathir_tor (~drathir@wireguard/tunneler/drathir)
[19:36:17] *** Quits: xenoterracide (~xenoterra@2600:1700:71d4:810:101f:cf82:e73c:f52b) (Ping timeout: 240 seconds)
[19:42:20] *** Joins: hlauk (~hlauk@176.33.96.72)
[19:47:28] *** Joins: xenoterracide (~xenoterra@2600:1700:71d4:810:101f:cf82:e73c:f52b)
[19:49:51] *** Quits: xenoterracide (~xenoterra@2600:1700:71d4:810:101f:cf82:e73c:f52b) (Remote host closed the connection)
[19:50:11] *** Joins: xenoterracide (~xenoterra@2600:1700:71d4:810:b0dc:834c:7f18:3fa2)
[19:53:01] *** Quits: hlauk (~hlauk@176.33.96.72) (Quit: Leaving)
[19:53:12] *** Quits: xenoterracide (~xenoterra@2600:1700:71d4:810:b0dc:834c:7f18:3fa2) (Remote host closed the connection)
[19:53:36] *** Joins: xenoterracide (~xenoterra@2600:1700:71d4:810:b0dc:834c:7f18:3fa2)
[19:58:05] *** Joins: Warped (~Warped@user/warped)
[19:58:31] *** Quits: SlimmyJimmy (blank@user/slimmyjimmy) (Quit: Going offline, see ya! (www.adiirc.com))
[19:59:03] *** Joins: SlimmyJimmy (blank@user/slimmyjimmy)
[19:59:17] *** Quits: xenoterracide (~xenoterra@2600:1700:71d4:810:b0dc:834c:7f18:3fa2) (Remote host closed the connection)
[19:59:36] *** Joins: xenoterracide (~xenoterra@2600:1700:71d4:810:101f:cf82:e73c:f52b)
[20:04:37] *** Joins: xenoterracide_ (~xenoterra@2600:1700:71d4:810:101f:cf82:e73c:f52b)
[20:05:21] *** Quits: xenoterracide (~xenoterra@2600:1700:71d4:810:101f:cf82:e73c:f52b) (Read error: Connection reset by peer)
[20:05:30] *** Quits: son0p (~ff@181.136.122.143) (Remote host closed the connection)
[20:05:37] *** Joins: Gallomimia (~Gallomimi@node-1w7jra2a2gqpvyoon2g2i2k2g.ipv6.telus.net)
[20:07:35] *** Joins: gabriel1 (~gabriel1@user/gabriel1)
[20:08:41] *** Quits: drathir_tor (~drathir@wireguard/tunneler/drathir) (Remote host closed the connection)
[20:10:17] *** Quits: xenoterracide_ (~xenoterra@2600:1700:71d4:810:101f:cf82:e73c:f52b) (Remote host closed the connection)
[20:10:36] *** Joins: xenoterracide_ (~xenoterra@2600:1700:71d4:810:b0dc:834c:7f18:3fa2)
[20:12:16] *** Quits: Alina-malina (~Alina-mal@user/alina-malina) (Quit: !be back soon)
[20:12:17] *** Quits: xenoterracide_ (~xenoterra@2600:1700:71d4:810:b0dc:834c:7f18:3fa2) (Remote host closed the connection)
[20:12:36] *** Joins: xenoterracide_ (~xenoterra@2600:1700:71d4:810:101f:cf82:e73c:f52b)
[20:12:41] *** Joins: Alina-malina (~Alina-mal@user/alina-malina)
[20:16:46] *** Quits: xenoterracide_ (~xenoterra@2600:1700:71d4:810:101f:cf82:e73c:f52b) (Ping timeout: 250 seconds)
[20:19:44] *** Joins: drathir_tor (~drathir@wireguard/tunneler/drathir)
[20:22:42] *** Joins: gproto23_ (~gproto23@user/gproto23)
[20:25:15] *** Quits: gproto23 (~gproto23@user/gproto23) (Ping timeout: 256 seconds)
[20:27:45] *** Quits: gproto23_ (~gproto23@user/gproto23) (Ping timeout: 256 seconds)
[20:28:54] *** Joins: kj7rrv (~kj7rrv@linuxarc/founder/kj7rrv)
[20:29:15] *** Quits: SlimmyJimmy (blank@user/slimmyjimmy) (Quit: Going offline, see ya! (www.adiirc.com))
[20:29:55] *** Joins: SlimmyJimmy (blank@user/slimmyjimmy)
[20:30:28] <kj7rrv> Would leaking SHA-512 hashes of filenames to an attacker with read access to the encrypted data be problematic in an encrypted filesystem?
[20:31:46] <edk> on the face of it no
[20:32:11] <kj7rrv> What do you mean by "on the face of it"? Are there cases where it would be a problem?
[20:32:37] <edk> too hard to think of every possible case so i don't want to commit myself
[20:32:47] <Alipha> kj7rrv: if the attacker has access to unkeyed hashes, then that means an attacker can determine whether specific filenames exist on the system
[20:32:56] <kj7rrv> My thought was to encrypt a list of filenames, then refer to them by their hashes so the decrypter doesn't have to decrypt every file name to find one
[20:33:24] <edk> oh, this is an encrypted filesystem you're designing?
[20:33:39] <kj7rrv> Alipha: okay, so when encrypting the file name list, include a key that is used for hmac?
[20:33:40] <edk> sorry, i evidently didn't pick that up
[20:33:53] <Alipha> kj7rrv: yes.
[20:34:06] <kj7rrv> Alipha: okay thank you
[20:34:31] <Alipha> kj7rrv: and hmac-sha512 seems a little excessive. hmac-sha256 should be fine. or waste twice te space, i don't care ;-)
[20:34:55] <kj7rrv> Actually I guess I could use uuids instead and include a table of file names to uuids, so that way there is no correlation between the ID and the name, unless you have the key
[20:35:47] <edk> it's usually going to be considered more robust to just use some efficient container (which could be a real filesystem) and then encrypt the whole thing using any scheme that allows random access
[20:35:59] <kj7rrv> All that that should reveal is the lengths of the files, right?
[20:36:02] <kj7rrv> Oh okay
[20:36:17] <kj7rrv> So encrypt each filesystem block?
[20:36:23] <edk> yeah
[20:36:35] <kj7rrv> Files are going to be small, this is for an encrypted cloud notes app
[20:36:42] <kj7rrv> Okay
[20:39:04] *** Joins: callq (~callq@2409:4062:2296:71d:edc0:24f8:78e1:290e)
[20:40:29] <edk> storing hmacs doesn't seem horrible if seems too light for a real encrypted filesystem i guess. probably fits better if you're trying to work within a database that already exists
[20:41:46] *** Quits: Haohmaru (~Haohmaru@195.24.53.110) ()
[20:44:15] *** Quits: MajorBiscuit (~MajorBisc@c-001-013-035.client.tudelft.eduvpn.nl) (Ping timeout: 250 seconds)
[20:50:18] *** Quits: c41e3a (~c41e3a@user/c41e3a) (Quit: c41e3a)
[20:52:32] *** Quits: piou (~piou@24.20.201.77.rev.sfr.net) (Changing host)
[20:52:32] *** Joins: piou (~piou@user/piou)
[21:00:07] *** Quits: SlimmyJimmy (blank@user/slimmyjimmy) (Quit: Going offline, see ya! (www.adiirc.com))
[21:00:14] *** Joins: xenoterracide (~xenoterra@2600:1700:71d4:810:101f:cf82:e73c:f52b)
[21:00:29] *** Joins: SlimmyJimmy (blank@user/slimmyjimmy)
[21:02:47] *** Joins: c41e3a (~c41e3a@user/c41e3a)
[21:08:20] *** Quits: xenoterracide (~xenoterra@2600:1700:71d4:810:101f:cf82:e73c:f52b) (Remote host closed the connection)
[21:08:39] *** Joins: xenoterracide (~xenoterra@2600:1700:71d4:810:b0dc:834c:7f18:3fa2)
[21:10:52] *** Quits: kj7rrv (~kj7rrv@linuxarc/founder/kj7rrv) (Read error: Connection reset by peer)
[21:11:37] *** Joins: kj7rrv (~kj7rrv@linuxarc/founder/kj7rrv)
[21:24:12] *** Joins: d1cor (~diego@179.63.242.122)
[21:28:00] *** Quits: kish` (~aqua@user/aqua) (Remote host closed the connection)
[21:28:25] *** Joins: kish` (~aqua@user/aqua)
[21:28:41] *** Quits: kish` (~aqua@user/aqua) (Remote host closed the connection)
[21:29:03] *** Joins: kish` (~aqua@user/aqua)
[21:30:42] *** Quits: SlimmyJimmy (blank@user/slimmyjimmy) (Quit: Going offline, see ya! (www.adiirc.com))
[21:30:51] *** Quits: kish` (~aqua@user/aqua) (Remote host closed the connection)
[21:31:04] *** Joins: kish` (~aqua@user/aqua)
[21:31:12] *** Joins: SlimmyJimmy (blank@user/slimmyjimmy)
[21:36:16] *** Joins: MrFantastik (~f@2607:f598:bbda:170:58a7:29fa:4a60:524a)
[21:38:24] *** Joins: reedrichards (~f@2607:f598:bbda:170:58a7:29fa:4a60:524a)
[21:39:26] *** Quits: MrFantastik (~f@2607:f598:bbda:170:58a7:29fa:4a60:524a) (Read error: Connection reset by peer)
[21:39:51] *** Joins: ___nick___ (~quassel@cpc68286-cdif17-2-0-cust533.5-1.cable.virginm.net)
[21:41:46] *** Quits: labrador (~labrador@user/labrador) (Quit: Leaving)
[21:44:38] *** Joins: labrador (~labrador@user/labrador)
[21:49:41] *** Quits: labrador (~labrador@user/labrador) (Remote host closed the connection)
[21:49:54] *** Joins: dingdreher (~dingdrehe@2a02:aa08:401e:fff2:35f4:c0a:127c:c6a0)
[21:50:06] *** Joins: cryomon (~user@gateway/tor-sasl/cryomon)
[21:50:13] *** Joins: labrador (~labrador@user/labrador)
[21:54:02] *** Joins: aleck1 (~aleck@user/aleck)
[21:55:03] *** Joins: Klotz (~Klotzoman@gateway/tor-sasl/klotz)
[21:56:17] *** Quits: aleck (~aleck@user/aleck) (Ping timeout: 240 seconds)
[21:56:36] *** Quits: d1cor (~diego@179.63.242.122) (Ping timeout: 245 seconds)
[21:57:21] *** Quits: dingdreher (~dingdrehe@2a02:aa08:401e:fff2:35f4:c0a:127c:c6a0) (Quit: dingdreher)
[22:01:25] *** Quits: SlimmyJimmy (blank@user/slimmyjimmy) (Quit: Going offline, see ya! (www.adiirc.com))
[22:02:03] *** Quits: dude12312414 (~test@gateway/tor-sasl/dude12312414) (Quit: THE RAM IS TOO DAMN HIGH)
[22:02:07] *** Joins: SlimmyJimmy (blank@user/slimmyjimmy)
[22:02:48] *** Quits: labrador (~labrador@user/labrador) (Remote host closed the connection)
[22:03:14] *** Joins: labrador (~labrador@user/labrador)
[22:05:07] *** Quits: cryomon (~user@gateway/tor-sasl/cryomon) (Quit: Konversation terminated!)
[22:06:35] *** Quits: xenoterracide (~xenoterra@2600:1700:71d4:810:b0dc:834c:7f18:3fa2) (Ping timeout: 252 seconds)
[22:06:55] *** Joins: xenoterracide (~xenoterra@99-124-139-34.lightspeed.iplsin.sbcglobal.net)
[22:12:35] *** Quits: xenoterracide (~xenoterra@99-124-139-34.lightspeed.iplsin.sbcglobal.net) (Read error: Connection reset by peer)
[22:14:10] *** Joins: xenoterracide (~xenoterra@99-124-139-34.lightspeed.iplsin.sbcglobal.net)
[22:22:38] *** Joins: zro (~zro@user/zro)
[22:23:37] *** Quits: ___nick___ (~quassel@cpc68286-cdif17-2-0-cust533.5-1.cable.virginm.net) (Quit: https://quassel-irc.org - Chat comfortably. Anywhere.)
[22:25:10] *** Joins: ___nick___ (~quassel@cpc68286-cdif17-2-0-cust533.5-1.cable.virginm.net)
[22:26:16] *** Quits: labrador (~labrador@user/labrador) (Quit: Leaving)
[22:26:36] *** Joins: labrador (~labrador@user/labrador)
[22:28:07] *** Quits: gaussianblue (~gaussianb@78-61-246-87.static.zebra.lt) (Quit: leaving)
[22:32:20] *** Quits: SlimmyJimmy (blank@user/slimmyjimmy) (Quit: Going offline, see ya! (www.adiirc.com))
[22:32:56] *** Joins: SlimmyJimmy (blank@user/slimmyjimmy)
[22:33:02] *** Quits: xenoterracide (~xenoterra@99-124-139-34.lightspeed.iplsin.sbcglobal.net) (Read error: Connection reset by peer)
[22:33:21] *** Joins: xenoterracide (~xenoterra@2600:1700:71d4:81f:dd5a:6be0:b90f:3e2e)
[22:34:26] *** Joins: Guyver2_ (~Guyver@guyver2.xs4all.nl)
[22:34:59] *** Quits: Guyver2 (~Guyver@guyver2.xs4all.nl) (Ping timeout: 250 seconds)
[22:35:04] *** Guyver2_ is now known as Guyver2
[22:35:35] *** Quits: reedrichards (~f@2607:f598:bbda:170:58a7:29fa:4a60:524a) (Ping timeout: 256 seconds)
[22:42:14] *** Quits: c41e3a (~c41e3a@user/c41e3a) (Quit: c41e3a)
[22:45:13] *** Joins: c41e3a (~c41e3a@user/c41e3a)
[22:46:49] *** Quits: labrador (~labrador@user/labrador) (Quit: Leaving)
[22:46:56] *** Quits: gabriel1 (~gabriel1@user/gabriel1) (Read error: Connection reset by peer)
[22:47:15] *** Joins: labrador (~labrador@user/labrador)
[22:50:06] *** Quits: xx (~xx@user/xx) (Remote host closed the connection)
[22:52:07] *** Quits: labrador (~labrador@user/labrador) (Client Quit)
[22:52:20] *** Quits: xenoterracide (~xenoterra@2600:1700:71d4:81f:dd5a:6be0:b90f:3e2e) (Remote host closed the connection)
[22:53:26] *** Joins: dingdreher (~dingdrehe@2a02:aa08:401e:fff2:35f4:c0a:127c:c6a0)
[22:54:44] *** Joins: aqua (~aqua@user/aqua)
[22:56:06] *** Quits: kish` (~aqua@user/aqua) (Ping timeout: 276 seconds)
[22:59:09] *** Joins: xenoterracide (~xenoterra@99-124-139-34.lightspeed.iplsin.sbcglobal.net)
[23:01:46] *** Joins: xx (~xx@user/xx)
[23:03:09] *** Quits: SlimmyJimmy (blank@user/slimmyjimmy) (Quit: Going offline, see ya! (www.adiirc.com))
[23:03:44] *** Joins: SlimmyJimmy (blank@user/slimmyjimmy)
[23:09:46] *** Quits: Malvolio (~Malvolio@user/malvolio) (Quit: brb)
[23:22:43] *** Quits: c41e3a (~c41e3a@user/c41e3a) (Quit: c41e3a)
[23:23:03] *** Joins: gabriel1 (~gabriel1@user/gabriel1)
[23:25:32] *** Joins: Malvolio (~Malvolio@user/malvolio)
[23:33:57] *** Quits: SlimmyJimmy (blank@user/slimmyjimmy) (Quit: Going offline, see ya! (www.adiirc.com))
[23:34:19] *** Joins: SlimmyJimmy (blank@user/slimmyjimmy)
[23:38:26] *** Quits: geeknix (~pi@2001:e68:5432:46d8:39f7:e80b:25f7:e9cb) (Ping timeout: 252 seconds)
[23:40:29] <yawkat> https://groups.google.com/a/list.nist.gov/g/pqc-forum/c/fvnhyQ25jUg/m/NJzYDqQBBAAJ
[23:43:18] <hg> mmm, progress (even if slow)
[23:45:47] *** Joins: viridian (~viridian@user/c41e3a)
[23:49:34] *** Joins: _mikey (~mikey@user/mikey/x-4335048)
[23:51:32] *** Joins: geeknix (~pi@2001:e68:5432:ee11:f781:3a04:b549:b877)
[23:53:52] *** Quits: System_Error (~SystemErr@user/systemerror) (Remote host closed the connection)
[23:55:45] *** Joins: System_Error (~SystemErr@user/systemerror)
