[00:00:29] *** Quits: xff0x (~xff0x@port-92-195-123-135.dynamic.as20676.net) (Ping timeout: 256 seconds)
[00:01:11] *** Quits: Megant (megant@user/megant) (Ping timeout: 245 seconds)
[00:02:45] *** Quits: wroathe (~wroathe@user/wroathe) (Ping timeout: 256 seconds)
[00:03:04] *** Joins: Megant (megant@user/megant)
[00:03:09] *** Joins: xff0x (~xff0x@2001:1a81:53e7:b00:f827:c356:f4f8:aa66)
[00:06:01] *** Quits: kuribas (~user@ptr-25vy0i91z2t2xltfc74.18120a2.ip6.access.telenet.be) (Quit: ERC (IRC client for Emacs 26.3))
[00:08:42] *** Quits: eggplantade (~Eggplanta@108-201-191-115.lightspeed.sntcca.sbcglobal.net) (Remote host closed the connection)
[00:08:42] *** Joins: wroathe (~wroathe@206-55-188-8.fttp.usinternet.com)
[00:08:43] *** Quits: wroathe (~wroathe@206-55-188-8.fttp.usinternet.com) (Changing host)
[00:08:43] *** Joins: wroathe (~wroathe@user/wroathe)
[00:11:15] *** Joins: deadmarshal (~deadmarsh@95.38.116.69)
[00:11:30] <tomsmeding> I'm really not a fan of languages that try to be readable like english (applescript, as mentioned, is another offender) -- it invariably makes writing harder and forces weird formulations in places
[00:11:48] *** Joins: alx741 (~alx741@157.100.93.160)
[00:12:08] <tomsmeding> and I feel like it doesn't help; `z := x * y` might need explanation of the := symbol, but is afterwards more compact and more extensible, and hence more readable
[00:12:39] <tomsmeding> I concede that := might be easier to explain than = in an imperative language to non-programmers
[00:14:17] <geekosaur> algol68, where you get both and need to know when to use each?
[00:14:30] <monochrom> haha
[00:15:17] *** Quits: deadmarshal (~deadmarsh@95.38.116.69) (Ping timeout: 240 seconds)
[00:16:09] *** Quits: alx741 (~alx741@157.100.93.160) (Read error: Connection reset by peer)
[00:20:55] *** Quits: raehik (~raehik@cpc95906-rdng25-2-0-cust156.15-3.cable.virginm.net) (Quit: WeeChat 3.4)
[00:22:01] *** Joins: raehik (~raehik@cpc95906-rdng25-2-0-cust156.15-3.cable.virginm.net)
[00:23:09] *** Quits: wroathe (~wroathe@user/wroathe) (Ping timeout: 256 seconds)
[00:27:02] *** Quits: jumper149 (~jumper149@static.6.71.203.116.clients.your-server.de) (Quit: WeeChat 3.3)
[00:28:37] *** Joins: merijn (~merijn@83-160-49-249.ip.xs4all.nl)
[00:31:15] *** Joins: wroathe (~wroathe@206-55-188-8.fttp.usinternet.com)
[00:31:15] *** Quits: wroathe (~wroathe@206-55-188-8.fttp.usinternet.com) (Changing host)
[00:31:15] *** Joins: wroathe (~wroathe@user/wroathe)
[00:32:45] *** Joins: alx741 (~alx741@157.100.93.160)
[00:33:45] *** Quits: _ht (~quassel@82-169-194-8.biz.kpn.net) (Remote host closed the connection)
[00:34:11] *** Joins: jonathanx (~jonathan@h-178-174-176-109.A357.priv.bahnhof.se)
[00:35:37] *** Quits: wroathe (~wroathe@user/wroathe) (Ping timeout: 240 seconds)
[00:35:59] *** Quits: rond_ (~rond_@2a01:115f:943:5e00:b66:5768:df7:4b57) (Quit: Client closed)
[00:36:49] *** Joins: pavonia (~user@user/siracusa)
[00:38:13] *** Quits: abrantesasf (~abrantesa@187.36.170.211) (Remote host closed the connection)
[00:41:57] *** Quits: alx741 (~alx741@157.100.93.160) (Read error: Connection reset by peer)
[00:44:41] *** Quits: Erutuon (~Erutuon@user/erutuon) (Ping timeout: 256 seconds)
[00:45:25] *** Quits: coot (~coot@2a02:a310:e03f:8500:5cc8:47c:8ec0:b827) (Quit: coot)
[00:51:01] *** Quits: phma (phma@2001:5b0:215a:cac8:aefe:d82b:57fb:72c6) (Read error: Connection reset by peer)
[00:51:26] *** Quits: cryptomonad (~cryptomon@194.191.225.149) (Remote host closed the connection)
[00:53:53] *** Joins: phma (~phma@host-67-44-208-205.hnremote.net)
[00:56:11] *** Quits: vysn (~vysn@user/vysn) (Ping timeout: 252 seconds)
[00:59:01] *** Quits: neurocyte0 (~neurocyte@user/neurocyte) (Ping timeout: 240 seconds)
[01:00:17] *** Joins: alx741 (~alx741@157.100.93.160)
[01:00:41] *** Joins: neurocyte09 (~neurocyte@IP-045128182210.dynamic.medianet-world.de)
[01:00:42] *** Quits: neurocyte09 (~neurocyte@IP-045128182210.dynamic.medianet-world.de) (Changing host)
[01:00:42] *** Joins: neurocyte09 (~neurocyte@user/neurocyte)
[01:01:28] *** Joins: wroathe (~wroathe@206-55-188-8.fttp.usinternet.com)
[01:01:28] *** Quits: wroathe (~wroathe@206-55-188-8.fttp.usinternet.com) (Changing host)
[01:01:28] *** Joins: wroathe (~wroathe@user/wroathe)
[01:02:34] *** Quits: Vajb (~Vajb@hag-jnsbng11-58c3a8-176.dhcp.inet.fi) (Read error: Connection reset by peer)
[01:02:37] *** Quits: merijn (~merijn@83-160-49-249.ip.xs4all.nl) (Ping timeout: 240 seconds)
[01:03:11] *** Joins: Vajb (~Vajb@hag-jnsbng11-58c3a8-176.dhcp.inet.fi)
[01:03:36] *** Joins: geranim0 (~geranim0@modemcable242.171-178-173.mc.videotron.ca)
[01:04:25] *** Quits: coolnickname (uid531864@user/coolnickname) (Quit: Connection closed for inactivity)
[01:04:26] *** Quits: alx741 (~alx741@157.100.93.160) (Read error: Connection reset by peer)
[01:06:17] *** Quits: wroathe (~wroathe@user/wroathe) (Ping timeout: 240 seconds)
[01:09:18] *** Joins: eggplantade (~Eggplanta@108-201-191-115.lightspeed.sntcca.sbcglobal.net)
[01:12:21] *** Parts: qrpnxz (~qrpnxz@user/qrpnxz) ()
[01:13:49] *** Quits: doyougnu (~doyougnu@c-73-25-202-122.hsd1.or.comcast.net) (Ping timeout: 240 seconds)
[01:14:01] *** Quits: eggplantade (~Eggplanta@108-201-191-115.lightspeed.sntcca.sbcglobal.net) (Ping timeout: 256 seconds)
[01:15:54] *** Joins: eggplantade (~Eggplanta@108-201-191-115.lightspeed.sntcca.sbcglobal.net)
[01:21:13] *** Joins: alx741 (~alx741@157.100.93.160)
[01:25:50] *** Quits: alx741 (~alx741@157.100.93.160) (Read error: Connection reset by peer)
[01:29:14] *** Quits: perrierjouet (~perrier-j@modemcable012.251-130-66.mc.videotron.ca) (Remote host closed the connection)
[01:33:38] *** Quits: eggplantade (~Eggplanta@108-201-191-115.lightspeed.sntcca.sbcglobal.net) (Remote host closed the connection)
[01:35:16] *** Joins: perrierjouet (~perrier-j@modemcable012.251-130-66.mc.videotron.ca)
[01:42:09] *** Joins: alx741 (~alx741@157.100.93.160)
[01:42:34] *** Joins: zincy_ (~zincy@2a00:23c8:970c:4801:8d43:554e:d62c:915d)
[01:42:48] *** Quits: zincy_ (~zincy@2a00:23c8:970c:4801:8d43:554e:d62c:915d) (Remote host closed the connection)
[01:43:28] *** Joins: zincy_ (~zincy@2a00:23c8:970c:4801:8d43:554e:d62c:915d)
[01:44:12] *** Joins: alexd (~nineonine@50.216.62.2)
[01:45:37] *** Quits: Inst (~delicacie@2601:6c4:4080:3f80:f131:ad94:e07f:dfdd) (Ping timeout: 240 seconds)
[01:46:41] *** Quits: alx741 (~alx741@157.100.93.160) (Read error: Connection reset by peer)
[01:47:36] *** Joins: little_mac (~little_ma@2601:410:4300:3ce0:54a9:bec8:b650:a634)
[01:47:48] *** Joins: eggplantade (~Eggplanta@108-201-191-115.lightspeed.sntcca.sbcglobal.net)
[01:51:06] *** Joins: wroathe (~wroathe@206-55-188-8.fttp.usinternet.com)
[01:51:06] *** Quits: wroathe (~wroathe@206-55-188-8.fttp.usinternet.com) (Changing host)
[01:51:06] *** Joins: wroathe (~wroathe@user/wroathe)
[01:52:24] *** Joins: acidjnk (~acidjnk@p200300d0c7271e93a97d350f09b0dd65.dip0.t-ipconnect.de)
[01:52:24] *** Joins: acidjnk_new (~acidjnk@p200300d0c7271e93a97d350f09b0dd65.dip0.t-ipconnect.de)
[01:53:13] *** Quits: tromp (~textual@dhcp-077-249-230-040.chello.nl) (Quit: My iMac has gone to sleep. ZZZzzzâ€¦)
[01:59:29] *** Quits: `2jt (~jtomas@153.red-83-53-252.dynamicip.rima-tde.net) (Ping timeout: 256 seconds)
[02:04:45] *** Quits: Sgeo (~Sgeo@user/sgeo) (Read error: Connection reset by peer)
[02:04:46] *** Quits: justIrresolute5 (~justache@user/justache) (Quit: Ping timeout (120 seconds))
[02:04:53] *** Joins: alx741 (~alx741@157.100.93.160)
[02:04:57] *** Joins: Sgeo (~Sgeo@user/sgeo)
[02:05:23] *** Joins: tromp (~textual@dhcp-077-249-230-040.chello.nl)
[02:06:27] *** Joins: x_kuru (~xkuru@user/xkuru)
[02:07:31] *** Quits: Midjak (~Midjak@may53-1-78-226-116-92.fbx.proxad.net) (Quit: Leaving)
[02:07:51] *** Quits: alexd (~nineonine@50.216.62.2) (Ping timeout: 256 seconds)
[02:08:35] *** Quits: eggplantade (~Eggplanta@108-201-191-115.lightspeed.sntcca.sbcglobal.net) (Remote host closed the connection)
[02:08:40] *** Quits: xb0o2 (~xb0o2@user/xb0o2) (Quit: Client closed)
[02:09:20] *** Quits: alx741 (~alx741@157.100.93.160) (Read error: Connection reset by peer)
[02:09:25] *** Quits: xkuru (~xkuru@user/xkuru) (Ping timeout: 240 seconds)
[02:11:22] *** Joins: Midjak (~Midjak@may53-1-78-226-116-92.fbx.proxad.net)
[02:12:49] *** Quits: zincy_ (~zincy@2a00:23c8:970c:4801:8d43:554e:d62c:915d) (Remote host closed the connection)
[02:16:46] *** Quits: forell (~forell@user/forell) (Ping timeout: 268 seconds)
[02:17:33] *** Joins: forell (~forell@user/forell)
[02:18:59] *** Joins: jgeerds (~jgeerds@55d4ac73.access.ecotel.net)
[02:27:26] *** Joins: alx741 (~alx741@157.100.93.160)
[02:32:07] *** Quits: __monty__ (~toonn@user/toonn) (Quit: leaving)
[02:32:33] *** Joins: eggplantade (~Eggplanta@108-201-191-115.lightspeed.sntcca.sbcglobal.net)
[02:32:33] *** Quits: alx741 (~alx741@157.100.93.160) (Read error: Connection reset by peer)
[02:35:16] *** Quits: gehmehgeh (~user@user/gehmehgeh) (Quit: Leaving)
[02:36:09] *** Joins: mud (~mud@user/kadoban)
[02:38:13] *** Joins: Inst (~delicacie@2601:6c4:4080:3f80:6819:92d4:93fc:ed3b)
[02:39:22] *** Joins: jushur (~human@user/jushur)
[02:39:30] <Axman6> ImportQualifiedPost is the default in DAML, and I honestly wish it was turned on by default in Haskell, particularly since it doesn't break anything. so much nicer than the mess that "import qualified" creates
[02:41:12] <geekosaur> it's in GHC2021, so default as of ghc 9.2
[02:41:21] <Axman6> awww yisss
[02:42:31] *** Quits: Tuplanolla (~Tuplanoll@91-159-69-90.elisa-laajakaista.fi) (Quit: Leaving.)
[02:42:53] *** Quits: shapr (~user@2601:7c0:c202:5190:cecd:8e39:7234:9a0d) (Ping timeout: 252 seconds)
[02:44:01] <awpr> as someone who currently maintains only Hackage libraries and no leaf application code: I'm really excited to switch over to this in 2032
[02:44:03] *** Quits: Pickchea (~private@user/pickchea) (Quit: Leaving)
[02:44:16] <jackdk> I don't understand why this fires you up so much, Axman6.
[02:44:37] *** Quits: Inst (~delicacie@2601:6c4:4080:3f80:6819:92d4:93fc:ed3b) (Ping timeout: 240 seconds)
[02:45:38] <hpc> jackdk: wadler's law
[02:45:45] <Axman6> vertical alignment of code is very important, it makes it much easier for me to read, and the only way to do that with imports at the moment is by doing ugly things like tomsmeding's post above (https://paste.tomsmeding.com/bpwrBBcP). 
[02:46:35] *** Joins: justIrresolute (~justache@user/justache)
[02:46:47] <Axman6> it also greatly reduces commit noise, if you have code where you had no qualified imports and then add one you need to change every import line. having post qualified imports means only that line changes
[02:46:57] *** Quits: wroathe (~wroathe@user/wroathe) (Ping timeout: 256 seconds)
[02:47:08] <Axman6> (because writing import              Foo all the time when you have no qualified modules is insanity)
[02:48:00] *** Quits: eggplantade (~Eggplanta@108-201-191-115.lightspeed.sntcca.sbcglobal.net) (Remote host closed the connection)
[02:48:14] <Axman6> bring dyslexic makes this even more of a problem, trying to find mistakes in unaligned code is much harder
[02:55:21] <EvanR> well, comments and imports arguably take up a lot of space in haskell relative to code
[02:55:25] *** Joins: wroathe (~wroathe@206-55-188-8.fttp.usinternet.com)
[02:55:25] *** Quits: wroathe (~wroathe@206-55-188-8.fttp.usinternet.com) (Changing host)
[02:55:25] *** Joins: wroathe (~wroathe@user/wroathe)
[02:55:37] <EvanR> worth bikeshedding xD
[02:55:40] <lechner> the code is so short
[02:55:58] <jackdk> I... don't really look at imports all that much
[02:56:16] <EvanR> me neither, I press page down at the start of each file
[02:56:24] <Axman6> I do when HLS decides it's not going to find GHC and stop working :)
[02:58:24] <lechner> Thanks to whomever posted this Ruby talk earlier! Very nice   https://tomstu.art/refactoring-ruby-with-monads
[02:59:49] *** Joins: merijn (~merijn@83-160-49-249.ip.xs4all.nl)
[02:59:59] *** Quits: wroathe (~wroathe@user/wroathe) (Ping timeout: 256 seconds)
[03:00:43] <Axman6> that was me
[03:01:49] *** Quits: Midjak (~Midjak@may53-1-78-226-116-92.fbx.proxad.net) (Quit: This computer has gone to sleep)
[03:01:59] <lechner> thank you!
[03:05:34] <EvanR> funny, apparently an operator can be a field name
[03:06:03] <geekosaur> why not? (if nothing else, fields can be functions)
[03:06:42] *** Quits: notzmv (~zmv@user/notzmv) (Ping timeout: 268 seconds)
[03:06:44] <EvanR> I will now abuse this
[03:06:57] <geekosaur> although I guess that becomes syntactically a little weird, unless RecordDotSyntax does something vaguely useful with it
[03:07:19] <Hecate> I'm only using optics nowadays
[03:08:06] <awpr> before QualifiedDo, this could be put to good use with RebindableSyntax as: `let MonadOps{..} = indexedMonadOps in do ...`
[03:08:19] <awpr> (with QualifiedDo that trick isn't needed)
[03:18:18] *** Joins: kupi (uid212005@id-212005.hampstead.irccloud.com)
[03:19:09] <lechner> Hi, what's a good strategy, please, to interrupt a long-running program after it completed an external fork (loop)? In Perl, I used a keystroke. In Haskell, processing input is presumably more complicated.     https://salsa.debian.org/lintian/kickoff/-/blob/history/runner#L99
[03:19:17] *** Quits: CiaoSen (~Jura@p200300c957347b002a3a4dfffe84dbd5.dip0.t-ipconnect.de) (Ping timeout: 240 seconds)
[03:20:41] <lechner> or maybe it's a monad in reverse, as in 'return' when there is Something as opposed to Nothing
[03:21:03] *** Quits: max22- (~maxime@2a01cb088335980086c6bc2422140675.ipv6.abo.wanadoo.fr) (Remote host closed the connection)
[03:21:55] <geekosaur> a separate thread that listens for keys and throws to the main thread?
[03:22:03] <Axman6> ^C
[03:22:28] <lechner> just catch SIGINT?
[03:22:34] <geekosaur> signal handling in ghc's runtime is sadly atrocious; don't be surprised if the result is a core dump
[03:22:52] <geekosaur> but yes, ignoring that SIGINT is a way to do it
[03:23:03] <lechner> it'll end the program alright!
[03:25:17] <lechner> is this still true?   https://stackoverflow.com/a/34867087
[03:26:47] <geekosaur> don't thread and fork in the same program
[03:26:53] <geekosaur> in any language
[03:27:00] <lechner> you are right
[03:27:16] <geekosaur> fork makes all threads go away, and god alone knows what locked resources will never be unlocked
[03:28:39] <geekosaur> that said, the reason signals are relayed to the main thread is not that they're specifically handled in a separate thread, it's that posix makes zero guarantees which thread receives the signal
[03:28:53] <lechner> yeah
[03:29:16] <geekosaur> so it's irrelevant without -threaded
[03:29:33] *** Joins: eggplantade (~Eggplanta@108-201-191-115.lightspeed.sntcca.sbcglobal.net)
[03:30:43] *** Quits: machinedgod (~machinedg@24.105.81.50) (Ping timeout: 256 seconds)
[03:32:25] *** Quits: cheater (~Username@user/cheater) (Ping timeout: 256 seconds)
[03:32:59] *** Quits: merijn (~merijn@83-160-49-249.ip.xs4all.nl) (Ping timeout: 256 seconds)
[03:38:15] <Axman6> Praise be to the god of locking, Loki
[03:38:37] <Axman6> locking is chaos, so I think he's apt
[03:40:29] *** Quits: little_mac (~little_ma@2601:410:4300:3ce0:54a9:bec8:b650:a634) (Remote host closed the connection)
[03:40:47] *** Joins: little_mac (~little_ma@2601:410:4300:3ce0:1c52:e548:30d:e414)
[03:42:14] <lechner> I think I can just use hReady    https://hackage.haskell.org/package/base-4.16.0.0/docs/System-IO.html#v:hReady
[03:46:44] * geekosaur feels a tickling in the back of his brain
[03:49:05] <jackdk> yeah Axman6 this is a good talk - it's talking about abstractions and laws
[03:49:34] <geekosaur> it might work but it's a bit tricky
[03:51:08] *** Joins: lavaman (~lavaman@98.38.249.169)
[03:52:54] *** Quits: x_kuru (~xkuru@user/xkuru) (Read error: Connection reset by peer)
[03:53:17] *** Quits: acidjnk (~acidjnk@p200300d0c7271e93a97d350f09b0dd65.dip0.t-ipconnect.de) (Ping timeout: 252 seconds)
[03:53:17] *** Quits: acidjnk_new (~acidjnk@p200300d0c7271e93a97d350f09b0dd65.dip0.t-ipconnect.de) (Ping timeout: 252 seconds)
[03:55:39] *** Quits: lavaman (~lavaman@98.38.249.169) (Ping timeout: 256 seconds)
[04:02:13] *** Quits: bontaq (~user@ool-45779fe5.dyn.optonline.net) (Ping timeout: 240 seconds)
[04:06:36] *** Joins: cheater (~Username@user/cheater)
[04:14:10] *** Quits: little_mac (~little_ma@2601:410:4300:3ce0:1c52:e548:30d:e414) (Remote host closed the connection)
[04:17:45] *** Quits: cheater (~Username@user/cheater) (Ping timeout: 256 seconds)
[04:18:00] <Axman6> jackdk: the monads in ruby one?
[04:18:08] *** Joins: cheater1__ (~Username@user/cheater)
[04:18:12] *** cheater1__ is now known as cheater
[04:23:56] *** Joins: machinedgod (~machinedg@24.105.81.50)
[04:25:57] *** Quits: raehik (~raehik@cpc95906-rdng25-2-0-cust156.15-3.cable.virginm.net) (Ping timeout: 240 seconds)
[04:26:37] *** Quits: Gurkenglas (~Gurkengla@dslb-002-203-144-204.002.203.pools.vodafone-ip.de) (Ping timeout: 240 seconds)
[04:28:03] *** Joins: wroathe (~wroathe@206-55-188-8.fttp.usinternet.com)
[04:28:04] *** Quits: wroathe (~wroathe@206-55-188-8.fttp.usinternet.com) (Changing host)
[04:28:04] *** Joins: wroathe (~wroathe@user/wroathe)
[04:29:17] *** Joins: Erutuon (~Erutuon@user/erutuon)
[04:29:18] *** Joins: mvk (~mvk@2607:fea8:5cdd:f000::45db)
[04:32:41] *** Quits: Vajb (~Vajb@hag-jnsbng11-58c3a8-176.dhcp.inet.fi) (Read error: Connection reset by peer)
[04:33:20] *** Joins: Vajb (~Vajb@hag-jnsbng11-58c3a8-176.dhcp.inet.fi)
[04:35:11] *** Joins: BrokenClutch (~pioneer@2804:d41:c292:6c00:33d8:d2f1:d8af:153e)
[04:36:34] *** Joins: justsomeguy (~justsomeg@user/justsomeguy)
[04:37:27] *** Quits: jgeerds (~jgeerds@55d4ac73.access.ecotel.net) (Ping timeout: 256 seconds)
[04:42:31] <jackdk> Axman6: yes
[04:42:53] *** Joins: lavaman (~lavaman@98.38.249.169)
[04:43:44] *** Quits: lavaman (~lavaman@98.38.249.169) (Remote host closed the connection)
[04:44:46] *** Joins: doyougnu (~doyougnu@c-73-25-202-122.hsd1.or.comcast.net)
[04:45:42] *** Quits: noddy (~user@user/noddy) (Quit: WeeChat 3.4)
[04:50:45] *** Quits: pretty_dumm_guy (trottel@gateway/vpn/protonvpn/prettydummguy/x-88029655) (Quit: WeeChat 3.4)
[04:51:17] *** Quits: justsomeguy (~justsomeg@user/justsomeguy) (Quit: WeeChat 3.3)
[04:57:03] *** Joins: kaph_ (~kaph@net-2-38-107-19.cust.vodafonedsl.it)
[04:57:44] *** Quits: kaph (~kaph@net-2-38-107-19.cust.vodafonedsl.it) (Read error: Connection reset by peer)
[05:03:56] *** Joins: Codaraxis (~Codaraxis@user/codaraxis)
[05:09:10] <Axman6> I feel like I've been told off before for sharing it here, but glad some people got some value from it
[05:14:14] *** Joins: lavaman (~lavaman@98.38.249.169)
[05:14:52] <EvanR> oh, now I gotta click
[05:15:37] *** Joins: notzmv (~zmv@user/notzmv)
[05:15:59] *** Quits: jespada (~jespada@87.74.32.18) (Ping timeout: 256 seconds)
[05:16:12] <EvanR> dang, giving a prepared haskell talk at ruby conferences. I've been doing it wrong this whole time
[05:18:10] *** Joins: jespada (~jespada@87.74.32.18)
[05:18:36] *** Quits: azimut (~azimut@gateway/tor-sasl/azimut) (Ping timeout: 276 seconds)
[05:18:39] *** Joins: azimut_ (~azimut@gateway/tor-sasl/azimut)
[05:18:49] *** Quits: lavaman (~lavaman@98.38.249.169) (Ping timeout: 256 seconds)
[05:20:07] <Axman6> I feel like jackdk would be in a good position to do that...
[05:20:42] <jackdk> Axman6: like a) people travel to conferences these days, and b) I don't have enough other things to do :P
[05:21:16] <Axman6> you're gonna have so much time once you push amazonka-2.0 out the door, there'll definitely be nothing to fix once that's done
[05:22:07] *** Joins: lavaman (~lavaman@98.38.249.169)
[05:26:22] *** Quits: waleee (~waleee@2001:9b0:21d:fc00:398f:b003:b90d:acf4) (Quit: WeeChat 3.4)
[05:30:04] *** Joins: merijn (~merijn@83-160-49-249.ip.xs4all.nl)
[05:30:51] *** Quits: mmhat (~mmh@55d49507.access.ecotel.net) (Quit: WeeChat 3.4)
[05:34:41] <jackdk> Axman6: nah people just chuck more things on the pile =S
[05:35:05] <Axman6> praise be to the backlog
[05:36:51] <jackdk> mostly I tag them "post 2.0" and say "I'd love to see a PR" because getting something out the door is more important
[05:38:29] *** Quits: tinwood (~tinwood@canonical/tinwood) (Remote host closed the connection)
[05:41:18] *** Quits: eggplantade (~Eggplanta@108-201-191-115.lightspeed.sntcca.sbcglobal.net) (Remote host closed the connection)
[05:41:29] *** Joins: tinwood (~tinwood@general.default.akavanagh.uk0.bigv.io)
[05:41:29] *** Quits: tinwood (~tinwood@general.default.akavanagh.uk0.bigv.io) (Changing host)
[05:41:29] *** Joins: tinwood (~tinwood@canonical/tinwood)
[05:46:45] *** Joins: eggplantade (~Eggplanta@108-201-191-115.lightspeed.sntcca.sbcglobal.net)
[05:46:46] *** Joins: Inst (~delicacie@c-98-208-218-119.hsd1.fl.comcast.net)
[05:47:34] *** Joins: califax- (~califax@user/califx)
[05:47:35] *** Quits: pottsy (~pottsy@129.227.183.244) (Quit: Leaving)
[05:51:45] *** Quits: califax (~califax@user/califx) (Ping timeout: 276 seconds)
[05:51:46] *** califax- is now known as califax
[05:56:13] *** Quits: machinedgod (~machinedg@24.105.81.50) (Ping timeout: 256 seconds)
[05:57:17] *** Quits: xff0x (~xff0x@2001:1a81:53e7:b00:f827:c356:f4f8:aa66) (Ping timeout: 240 seconds)
[05:58:21] *** Joins: xff0x (~xff0x@2001:1a81:53e7:b00:ae4:d336:6060:937f)
[05:59:16] *** Quits: ProfSimm (~ProfSimm@87.227.196.109) (Remote host closed the connection)
[06:02:22] *** Joins: neurocyte091 (~neurocyte@IP-212232089218.dynamic.medianet-world.de)
[06:02:23] *** Quits: neurocyte091 (~neurocyte@IP-212232089218.dynamic.medianet-world.de) (Changing host)
[06:02:23] *** Joins: neurocyte091 (~neurocyte@user/neurocyte)
[06:04:09] *** Quits: merijn (~merijn@83-160-49-249.ip.xs4all.nl) (Ping timeout: 256 seconds)
[06:04:51] *** Quits: neurocyte09 (~neurocyte@user/neurocyte) (Ping timeout: 256 seconds)
[06:04:52] *** neurocyte091 is now known as neurocyte09
[06:06:46] *** Quits: xff0x (~xff0x@2001:1a81:53e7:b00:ae4:d336:6060:937f) (Ping timeout: 268 seconds)
[06:07:07] *** Quits: lavaman (~lavaman@98.38.249.169) (Remote host closed the connection)
[06:08:16] *** Joins: vysn (~vysn@user/vysn)
[06:08:32] *** Joins: xff0x (~xff0x@2001:1a81:5223:a300:9deb:66dd:70e6:c22a)
[06:22:59] *** Quits: Inst (~delicacie@c-98-208-218-119.hsd1.fl.comcast.net) (Ping timeout: 256 seconds)
[06:26:59] <EvanR> is it possible to suppress top level forall in a type sig in haddock
[06:27:19] <EvanR> if it doesn't seem relevant at the level of documentation
[06:31:14] *** Joins: noddy (~user@user/noddy)
[06:31:14] *** Joins: bitdex (~bitdex@gateway/tor-sasl/bitdex)
[06:32:03] *** Quits: bitdex (~bitdex@gateway/tor-sasl/bitdex) (Remote host closed the connection)
[06:32:52] *** Joins: bitdex (~bitdex@gateway/tor-sasl/bitdex)
[06:34:06] *** Quits: puke (~puke@user/puke) (Quit: puke)
[06:38:25] *** Joins: lavaman (~lavaman@98.38.249.169)
[06:49:27] *** Quits: kaph_ (~kaph@net-2-38-107-19.cust.vodafonedsl.it) (Read error: Connection reset by peer)
[06:49:29] *** Quits: Erutuon (~Erutuon@user/erutuon) (Ping timeout: 256 seconds)
[06:59:11] <Axman6> since it affects the order of type variables in type applications, it's really part of the API now
[07:03:01] <BrokenClutch> I want to wax myself without looking like a femboy
[07:03:46] <BrokenClutch> oops, wrong chat. How haskell handles stm, is there a optimization on ghc?
[07:10:32] *** Quits: whatsupdoc (uid509081@id-509081.hampstead.irccloud.com) (Quit: Connection closed for inactivity)
[07:11:23] *** Joins: mbuf (~Shakthi@122.178.186.114)
[07:13:14] <Axman6> o.O
[07:13:41] <Axman6> "is there an optimisation on ghc?" I don;t know what you mean by this. GHC provides an implementation of STM
[07:18:31] *** Quits: td_ (~td@94.134.91.82) (Ping timeout: 256 seconds)
[07:20:06] *** Joins: td_ (~td@94.134.91.33)
[07:23:25] *** Quits: [itchyjunk] (~itchyjunk@user/itchyjunk/x-7353470) (Ping timeout: 240 seconds)
[07:23:57] *** Quits: mvk (~mvk@2607:fea8:5cdd:f000::45db) (Ping timeout: 240 seconds)
[07:27:49] *** Joins: [itchyjunk] (~itchyjunk@user/itchyjunk/x-7353470)
[07:30:14] <EvanR> Understood re: order of variables for type applications but
[07:30:56] <EvanR> what about rearranging so the order is default, so the forall is redundant xD
[07:30:57] *** Quits: noddy (~user@user/noddy) (Quit: WeeChat 3.4)
[07:33:32] *** Joins: noddy (~user@user/noddy)
[07:34:47] <jackdk> there are times where the explicit ordering is very useful cf. constraints-extras
[07:38:05] *** Quits: kupi (uid212005@id-212005.hampstead.irccloud.com) (Quit: Connection closed for inactivity)
[07:38:40] *** Joins: hyiltiz (~quassel@31.220.5.250)
[07:40:00] *** Joins: mtjm (~mutantmel@2604:a880:2:d0::208b:d001)
[07:46:09] *** Quits: ralu (~ralu@static.211.245.203.116.clients.your-server.de) (Ping timeout: 256 seconds)
[07:47:23] *** Quits: hyiltiz (~quassel@31.220.5.250) (Quit: hyiltiz)
[07:48:10] *** Joins: hyiltiz (~quassel@31.220.5.250)
[07:50:05] *** Quits: hyiltiz (~quassel@31.220.5.250) (Client Quit)
[07:52:37] *** Joins: bontaq (~user@ool-45779fe5.dyn.optonline.net)
[08:00:21] *** Joins: merijn (~merijn@83-160-49-249.ip.xs4all.nl)
[08:00:21] *** Joins: deadmarshal (~deadmarsh@95.38.116.103)
[08:00:37] *** Quits: xff0x (~xff0x@2001:1a81:5223:a300:9deb:66dd:70e6:c22a) (Ping timeout: 240 seconds)
[08:01:42] *** Joins: xff0x (~xff0x@2001:1a81:5223:a300:d0e9:99bd:8a63:7db6)
[08:02:13] *** Quits: sirlensalot (~sirlensal@ool-44c5f8c9.dyn.optonline.net) (Quit: sirlensalot)
[08:02:13] *** Quits: lavaman (~lavaman@98.38.249.169) (Remote host closed the connection)
[08:02:29] *** Joins: lavaman (~lavaman@98.38.249.169)
[08:02:36] *** Quits: lavaman (~lavaman@98.38.249.169) (Remote host closed the connection)
[08:02:49] *** Joins: lavaman (~lavaman@98.38.249.169)
[08:02:57] *** Quits: lavaman (~lavaman@98.38.249.169) (Remote host closed the connection)
[08:03:04] *** Joins: hyiltiz (~quassel@31.220.5.250)
[08:03:12] *** Joins: lavaman (~lavaman@98.38.249.169)
[08:03:18] *** Quits: hyiltiz (~quassel@31.220.5.250) (Client Quit)
[08:03:19] *** Quits: lavaman (~lavaman@98.38.249.169) (Remote host closed the connection)
[08:03:26] *** Joins: hyiltiz (~quassel@31.220.5.250)
[08:03:33] *** Joins: lavaman (~lavaman@98.38.249.169)
[08:03:41] *** Quits: lavaman (~lavaman@98.38.249.169) (Remote host closed the connection)
[08:03:55] *** Joins: lavaman (~lavaman@98.38.249.169)
[08:04:02] *** Quits: lavaman (~lavaman@98.38.249.169) (Remote host closed the connection)
[08:04:18] *** Joins: lavaman (~lavaman@98.38.249.169)
[08:04:25] *** Quits: lavaman (~lavaman@98.38.249.169) (Remote host closed the connection)
[08:04:41] *** Joins: lavaman (~lavaman@98.38.249.169)
[08:04:49] *** Quits: lavaman (~lavaman@98.38.249.169) (Remote host closed the connection)
[08:05:03] *** Joins: lavaman (~lavaman@98.38.249.169)
[08:05:11] *** Quits: lavaman (~lavaman@98.38.249.169) (Remote host closed the connection)
[08:05:25] *** Joins: lavaman (~lavaman@98.38.249.169)
[08:05:32] *** Quits: lavaman (~lavaman@98.38.249.169) (Remote host closed the connection)
[08:05:48] *** Joins: lavaman (~lavaman@98.38.249.169)
[08:05:56] *** Quits: lavaman (~lavaman@98.38.249.169) (Remote host closed the connection)
[08:06:11] *** Joins: lavaman (~lavaman@98.38.249.169)
[08:06:19] *** Quits: lavaman (~lavaman@98.38.249.169) (Remote host closed the connection)
[08:06:37] *** Joins: lavaman (~lavaman@98.38.249.169)
[08:06:44] *** Quits: lavaman (~lavaman@98.38.249.169) (Remote host closed the connection)
[08:06:59] *** Joins: lavaman (~lavaman@98.38.249.169)
[08:07:06] *** Quits: lavaman (~lavaman@98.38.249.169) (Remote host closed the connection)
[08:07:20] *** Joins: lavaman (~lavaman@98.38.249.169)
[08:07:28] *** Joins: Jing (~hedgehog@2604:a840:3::103c)
[08:07:28] *** Quits: lavaman (~lavaman@98.38.249.169) (Remote host closed the connection)
[08:07:42] *** Joins: lavaman (~lavaman@98.38.249.169)
[08:07:49] *** Quits: lavaman (~lavaman@98.38.249.169) (Remote host closed the connection)
[08:07:57] *** Quits: hyiltiz (~quassel@31.220.5.250) (Ping timeout: 240 seconds)
[08:08:04] *** Joins: lavaman (~lavaman@98.38.249.169)
[08:08:11] *** Quits: lavaman (~lavaman@98.38.249.169) (Remote host closed the connection)
[08:08:25] *** Joins: lavaman (~lavaman@98.38.249.169)
[08:08:33] *** Quits: lavaman (~lavaman@98.38.249.169) (Remote host closed the connection)
[08:08:48] *** Joins: lavaman (~lavaman@98.38.249.169)
[08:08:54] *** Joins: hyiltiz (~quassel@31.220.5.250)
[08:08:55] *** Quits: lavaman (~lavaman@98.38.249.169) (Remote host closed the connection)
[08:09:10] *** Joins: lavaman (~lavaman@98.38.249.169)
[08:09:17] *** Quits: lavaman (~lavaman@98.38.249.169) (Remote host closed the connection)
[08:09:31] *** Joins: lavaman (~lavaman@98.38.249.169)
[08:09:39] *** Quits: lavaman (~lavaman@98.38.249.169) (Remote host closed the connection)
[08:09:54] *** Joins: lavaman (~lavaman@98.38.249.169)
[08:10:01] *** Quits: lavaman (~lavaman@98.38.249.169) (Remote host closed the connection)
[08:10:16] *** Joins: lavaman (~lavaman@98.38.249.169)
[08:10:23] *** Quits: lavaman (~lavaman@98.38.249.169) (Remote host closed the connection)
[08:10:37] *** Joins: lavaman (~lavaman@98.38.249.169)
[08:10:45] *** Quits: lavaman (~lavaman@98.38.249.169) (Remote host closed the connection)
[08:11:00] *** Joins: lavaman (~lavaman@98.38.249.169)
[08:11:07] *** Quits: lavaman (~lavaman@98.38.249.169) (Remote host closed the connection)
[08:11:23] *** Joins: lavaman (~lavaman@98.38.249.169)
[08:11:30] *** Quits: lavaman (~lavaman@98.38.249.169) (Remote host closed the connection)
[08:11:45] *** Joins: lavaman (~lavaman@98.38.249.169)
[08:11:52] *** Quits: lavaman (~lavaman@98.38.249.169) (Remote host closed the connection)
[08:12:06] *** Joins: lavaman (~lavaman@98.38.249.169)
[08:12:14] *** Quits: lavaman (~lavaman@98.38.249.169) (Remote host closed the connection)
[08:16:03] <EvanR> LAVAMANNNNNNN
[08:16:33] *** Joins: rekahsoft (~rekahsoft@cpe0008a20f982f-cm64777d666260.cpe.net.cable.rogers.com)
[08:18:32] *** Joins: ralu (~ralu@static.211.245.203.116.clients.your-server.de)
[08:19:34] *** Joins: Inst (~delicacie@c-98-208-218-119.hsd1.fl.comcast.net)
[08:23:31] *** Joins: benin9 (~benin@183.82.176.241)
[08:24:37] *** Quits: benin (~benin@183.82.176.241) (Ping timeout: 240 seconds)
[08:24:37] *** benin9 is now known as benin
[08:26:11] *** Joins: shapr (~user@2601:7c0:c202:5190:cc66:94d5:eb1a:5dfe)
[08:34:17] *** Quits: merijn (~merijn@83-160-49-249.ip.xs4all.nl) (Ping timeout: 240 seconds)
[08:35:18] *** Quits: hyiltiz (~quassel@31.220.5.250) (Quit: hyiltiz)
[08:37:37] *** Quits: Inst (~delicacie@c-98-208-218-119.hsd1.fl.comcast.net) (Ping timeout: 240 seconds)
[08:39:04] *** Joins: SpencerJanssen[m (~sjanssenm@2001:470:69fc:105::1:61d8)
[08:43:54] *** Parts: BrokenClutch (~pioneer@2804:d41:c292:6c00:33d8:d2f1:d8af:153e) ()
[08:45:37] *** Quits: n3rdy1 (~n3rdy1@2600:1700:4570:3480::41) (Ping timeout: 240 seconds)
[08:55:05] *** Quits: slowButPresent (~slowButPr@user/slowbutpresent) (Quit: leaving)
[08:56:33] *** Quits: doyougnu (~doyougnu@c-73-25-202-122.hsd1.or.comcast.net) (Ping timeout: 256 seconds)
[08:57:28] *** Joins: emf_ (~emf@c-73-97-137-43.hsd1.wa.comcast.net)
[08:58:19] *** Quits: emf_ (~emf@c-73-97-137-43.hsd1.wa.comcast.net) (Client Quit)
[08:58:37] *** Quits: emf (~emf@2620:10d:c090:400::5:c06d) (Ping timeout: 240 seconds)
[09:04:11] *** Quits: deadmarshal (~deadmarsh@95.38.116.103) (Quit: ZNC 1.8.2 - https://znc.in)
[09:04:28] *** Joins: deadmarshal (~deadmarsh@95.38.116.103)
[09:05:31] <Axman6> EvanR: because of the way glirc shows joins and parts, lavaman's been shown as lavaman+x+x+x+x+x+x+x+x+x+x+ .. lavaman+x+x+ .. lavamanx+x+x+x+x+x+x+x+x+x, which made your comment even better
[09:05:43] <EvanR> lol
[09:06:13] <sshine> ahhh -- this is a joke for those who don't ignore joins/parts. :)
[09:06:29] <EvanR> I like how glirc compresses it but still makes it annoying
[09:06:39] <EvanR> instead of just hiding it
[09:06:47] <sshine> EvanR, you might wanna know.
[09:08:46] <Axman6> you can turn it off, but it's useful for when youy're helping someone and they decide to piss off in the middle of it
[09:11:43] *** Quits: geranim0 (~geranim0@modemcable242.171-178-173.mc.videotron.ca) (Ping timeout: 256 seconds)
[09:12:51] *** Joins: fcc977 (~kaph@net-2-38-107-19.cust.vodafonedsl.it)
[09:12:55] *** Quits: fcc977 (~kaph@net-2-38-107-19.cust.vodafonedsl.it) (Remote host closed the connection)
[09:13:12] *** Joins: kaph (~kaph@net-2-38-107-19.cust.vodafonedsl.it)
[09:15:49] <EvanR> I was just reading about literate haskell, or literate programming. And the idea sounds interesting. But what is the practical workflow like. Does it only produce pdf "papers" or can you generate nice web pages
[09:16:05] <EvanR> and what is "it"... a ghc flag?
[09:18:07] <sshine> Axman6, right. I usually prefix my messages when answering people, but that has certainly happened a few times over the years.
[09:18:32] <sshine> Axman6, (and in the process of prefixing them for the n'th time, realize that the completion doesn't work.)
[09:19:13] <sshine> EvanR, .lhs files -- and yeah, you could generate LaTeX or Markdown, I guess.
[09:19:54] <EvanR> wait generating markdown sounds... like stepping backwards
[09:20:10] <EvanR> compiling from markdown?
[09:20:14] <sshine> sorry, yes
[09:20:41] <EvanR> oh, so the markdown is the "nice" version
[09:20:47] <EvanR> something somewhere shows it nicely
[09:21:32] *** Quits: juhp (~juhp@128.106.188.82) (Read error: Connection reset by peer)
[09:21:57] <sshine> yeah, so comments on the outside, code on the inside, rather than the other way around like we usually do.
[09:22:41] <sshine> and what I was thinking about, IIRC, was this: https://github.com/sol/markdown-unlit#readme -- but that's not regular .lhs format.
[09:22:47] *** Quits: xlei (~akans@pool-68-129-84-118.nycmny.fios.verizon.net) (Remote host closed the connection)
[09:23:35] *** Joins: xlei (~akans@pool-68-129-84-118.nycmny.fios.verizon.net)
[09:27:23] <maerwald[m]> EvanR: https://entangled.github.io/
[09:27:41] <sshine> but I might still generate Markdown because I like the idea of using Markdown as the data format for blogs. :) I keep most of my notes in Markdown. CodiMD (that is, HackMD.io's open-sourced back-end) has pretty good MathJax support for embedding LaTeX equations.
[09:27:44] <maerwald[m]> But I think none of those things are practical for everyday programming 
[09:29:01] <EvanR> ah cool
[09:30:11] <maerwald[m]> I think what's more important than documentation is module structure, so that module level documentation can tell a good story. Then you can have directory level hacking documentation as well (haddock could support this, in fact)
[09:31:20] <EvanR> just saw a rant about how literate programming is not documentation it's a PARADIGM!!!!!
[09:31:41] <EvanR> actually yeah I just got done with some documentation, but it doesn't address any internals
[09:31:58] <EvanR> so I was like how about literate haskell somehow which necessarily includes internals
[09:33:44] <maerwald[m]> It makes changing code even harder
[09:34:10] <maerwald[m]> Imagine refactoring, moving code to different places etc
[09:34:38] <maerwald[m]> You'll just have so write the story from scratch 
[09:34:48] <EvanR> yeah
[09:35:22] <EvanR> it's better as an article or demonstration that's easy to check by compiler
[09:35:56] <sshine> yeah, it's pretty neat for writing tutorials.
[09:36:01] <sshine> one-page tutorials :P
[09:36:35] <maerwald[m]> I also think it's more worthwhile to separate documentation of behavior from documentation of intention 
[09:36:53] <sshine> maerwald[m], how so?
[09:37:01] <sshine> what's an example of documentation of behavior?
[09:37:28] <jackdk> `// add one to i`
[09:37:30] <maerwald[m]> When intention changes non-trivially, that's a strong sign you should rewrite the entire function, instead of adjusting it
[09:39:08] <maerwald[m]> Programmers tend to tweak behavior to the point when the original intention has nothing to do with the current intention 
[09:39:17] <maerwald[m]> Then you're usually left with messy code
[09:39:31] <maerwald[m]> The only way to find out is documenting intention 
[09:41:28] *** Joins: hyiltiz (~quassel@31.220.5.250)
[09:42:14] <maerwald[m]> sshine: when you describe relationship of input to output for example 
[09:44:02] <sshine> maerwald[m], where do you think the two kinds of documentation should be separated? I usually have one place where I document stuff, and that's in comments above functions. :)
[09:44:10] <sshine> and also at the top of modules.
[09:44:53] <maerwald[m]> sshine: the first line of the documentation should reflect the intention. Then newline and then you can document behavior 
[09:46:25] *** Quits: hyiltiz (~quassel@31.220.5.250) (Ping timeout: 256 seconds)
[09:46:27] <EvanR> I'm now convinced writing documentation is pointless thanks maerwald[m] xD
[09:46:41] <EvanR> unless it's something that never changes like Functor
[09:46:42] <maerwald[m]> E.g. "We want to extract the device of the path, if any". Subsequently, there will be a lot of edge cases
[09:46:48] <EvanR> which... barely has any docus
[09:47:42] <maerwald[m]> But the intention is simple
[09:50:27] <sshine> maerwald[m], ah, okay. :) I think I'm sort of doing that without being conscious about it. mostly of the "intention" part being the most zoomed-out description I can give something without scope-creeping the explanation.
[09:51:17] <maerwald[m]> sshine: right, but the catch is the intention must never be changed
[09:51:25] <maerwald[m]> If it does, write a new function 
[09:51:55] <maerwald[m]> Unless you control all the call sites
[09:57:11] *** Quits: wroathe (~wroathe@user/wroathe) (Ping timeout: 256 seconds)
[09:59:12] *** Quits: [itchyjunk] (~itchyjunk@user/itchyjunk/x-7353470) (Remote host closed the connection)
[10:00:59] <Square> how do i take a value and turn it into a Exp in TH?
[10:01:15] *** Joins: whatsupdoc (uid509081@id-509081.hampstead.irccloud.com)
[10:01:59] <EvanR> for the next hour sit quietly and we will control all the call sites
[10:02:06] <jackdk> Square: https://hackage.haskell.org/package/template-haskell-2.18.0.0/docs/Language-Haskell-TH-Syntax.html#t:Lift
[10:03:04] <jackdk> but also if the value is in a variable, then `[|| foo ||]` might do the trick
[10:04:58] *** Joins: wroathe (~wroathe@206-55-188-8.fttp.usinternet.com)
[10:04:58] *** Quits: wroathe (~wroathe@206-55-188-8.fttp.usinternet.com) (Changing host)
[10:04:58] *** Joins: wroathe (~wroathe@user/wroathe)
[10:08:31] *** Joins: hyiltiz (~quassel@31.220.5.250)
[10:09:31] *** Quits: wroathe (~wroathe@user/wroathe) (Ping timeout: 256 seconds)
[10:09:39] <Square> jackdk, thanks. That seems to work
[10:11:32] *** Quits: notzmv (~zmv@user/notzmv) (Ping timeout: 240 seconds)
[10:25:42] *** Joins: juhp (~juhp@128.106.188.82)
[10:30:59] *** Joins: merijn (~merijn@83-160-49-249.ip.xs4all.nl)
[10:40:37] *** Quits: Akiva (~Akiva@user/Akiva) (Ping timeout: 240 seconds)
[10:40:41] *** Quits: hyiltiz (~quassel@31.220.5.250) (Ping timeout: 256 seconds)
[10:41:53] *** Joins: emf (~emf@c-73-97-137-43.hsd1.wa.comcast.net)
[10:42:29] *** Joins: _ht (~quassel@82-169-194-8.biz.kpn.net)
[10:43:36] *** Joins: lavaman (~lavaman@98.38.249.169)
[10:44:56] *** Joins: ProfSimm (~ProfSimm@87.227.196.109)
[10:45:06] *** Joins: hyiltiz (~quassel@31.220.5.250)
[10:48:03] *** Quits: cheater (~Username@user/cheater) (Ping timeout: 256 seconds)
[10:48:11] *** Quits: lavaman (~lavaman@98.38.249.169) (Ping timeout: 256 seconds)
[10:49:05] *** Quits: Jing (~hedgehog@2604:a840:3::103c) (Quit: My MacBook has gone to sleep. ZZZzzzâ€¦)
[10:51:08] *** Quits: shriekingnoise (~shrieking@186.137.144.80) (Quit: Quit)
[10:51:34] *** Joins: cheater (~Username@user/cheater)
[10:51:57] *** Quits: shapr (~user@2601:7c0:c202:5190:cc66:94d5:eb1a:5dfe) (Ping timeout: 240 seconds)
[10:54:01] *** Joins: coolnickname (uid531864@user/coolnickname)
[11:00:21] *** Joins: emf_ (~emf@2620:10d:c090:400::5:29c4)
[11:04:00] *** Quits: emf (~emf@c-73-97-137-43.hsd1.wa.comcast.net) (Ping timeout: 268 seconds)
[11:05:11] *** Quits: merijn (~merijn@83-160-49-249.ip.xs4all.nl) (Ping timeout: 256 seconds)
[11:07:08] *** Joins: nhatanh02 (~satori@123.24.172.30)
[11:09:31] *** Joins: dsrt^ (~dsrt@207.5.21.20)
[11:10:34] *** Joins: Jing (~hedgehog@2604:a840:3::103c)
[11:10:48] *** Joins: Tuplanolla (~Tuplanoll@91-159-69-90.elisa-laajakaista.fi)
[11:29:14] *** Quits: ProfSimm (~ProfSimm@87.227.196.109) (Remote host closed the connection)
[11:31:28] *** Joins: spaceseller (~spacesell@31.147.205.13)
[11:32:45] *** Quits: spaceseller (~spacesell@31.147.205.13) (Remote host closed the connection)
[11:33:30] *** Joins: chele (~chele@user/chele)
[11:34:23] *** Quits: emf_ (~emf@2620:10d:c090:400::5:29c4) (Quit: emf_)
[11:35:39] *** Quits: rekahsoft (~rekahsoft@cpe0008a20f982f-cm64777d666260.cpe.net.cable.rogers.com) (Ping timeout: 256 seconds)
[11:37:14] *** Joins: Akiva (~Akiva@user/Akiva)
[11:44:19] *** Quits: jinsun (~quassel@user/jinsun) (Read error: Connection reset by peer)
[11:45:39] *** Joins: jinsun (~quassel@user/jinsun)
[11:51:09] *** Joins: merijn (~merijn@83-160-49-249.ip.xs4all.nl)
[11:56:50] *** Quits: Sgeo (~Sgeo@user/sgeo) (Read error: Connection reset by peer)
[12:14:24] *** Joins: Dima[m] (~reddima10@2001:470:69fc:105::366)
[12:22:48] *** Quits: mbuf (~Shakthi@122.178.186.114) (Quit: Leaving)
[12:23:47] *** Joins: notzmv (~zmv@user/notzmv)
[12:24:08] *** Quits: zaquest (~notzaques@5.130.79.72) (Quit: Leaving)
[12:24:45] *** Quits: chexum (~quassel@gateway/tor-sasl/chexum) (Remote host closed the connection)
[12:25:00] *** Joins: chexum (~quassel@gateway/tor-sasl/chexum)
[12:25:40] *** Joins: zaquest (~notzaques@5.130.79.72)
[12:29:14] *** Quits: bitdex (~bitdex@gateway/tor-sasl/bitdex) (Quit: = "")
[12:33:35] *** Quits: bontaq (~user@ool-45779fe5.dyn.optonline.net) (Ping timeout: 256 seconds)
[12:46:45] *** Joins: acidjnk (~acidjnk@p200300d0c7271e93a97d350f09b0dd65.dip0.t-ipconnect.de)
[12:46:47] *** Joins: acidjnk_new (~acidjnk@p200300d0c7271e93a97d350f09b0dd65.dip0.t-ipconnect.de)
[12:46:55] *** Quits: geekosaur (~geekosaur@xmonad/geekosaur) (Read error: Connection reset by peer)
[12:47:46] *** Joins: geekosaur (~geekosaur@xmonad/geekosaur)
[12:48:53] *** Quits: Akiva (~Akiva@user/Akiva) (Ping timeout: 256 seconds)
[12:50:40] *** Quits: kaph (~kaph@net-2-38-107-19.cust.vodafonedsl.it) (Read error: Connection reset by peer)
[12:54:31] *** Joins: Inst (~delicacie@c-98-208-218-119.hsd1.fl.comcast.net)
[12:55:57] *** Quits: Jing (~hedgehog@2604:a840:3::103c) (Quit: My MacBook has gone to sleep. ZZZzzzâ€¦)
[12:56:31] *** Quits: tromp (~textual@dhcp-077-249-230-040.chello.nl) (Quit: My iMac has gone to sleep. ZZZzzzâ€¦)
[12:56:37] *** Joins: Jing (~hedgehog@2604:a840:3::103c)
[13:02:17] *** Quits: tzh (~tzh@c-24-21-73-154.hsd1.or.comcast.net) (Quit: zzz)
[13:03:56] *** Joins: kaph (~kaph@net-2-38-107-19.cust.vodafonedsl.it)
[13:05:00] *** Joins: Gurkenglas (~Gurkengla@dslb-002-203-144-204.002.203.pools.vodafone-ip.de)
[13:06:05] *** Joins: ubert (~Thunderbi@p200300ecdf0994db19c621579c5ac118.dip0.t-ipconnect.de)
[13:06:48] *** Parts: Dima[m] (~reddima10@2001:470:69fc:105::366) ()
[13:13:05] *** Joins: kspalaiologos (~kspalaiol@user/kspalaiologos)
[13:16:26] *** Joins: lavaman (~lavaman@98.38.249.169)
[13:18:28] *** Quits: eggplantade (~Eggplanta@108-201-191-115.lightspeed.sntcca.sbcglobal.net) (Remote host closed the connection)
[13:20:37] *** Quits: lavaman (~lavaman@98.38.249.169) (Ping timeout: 240 seconds)
[13:24:08] *** Joins: max22- (~maxime@lfbn-ren-1-1026-62.w92-139.abo.wanadoo.fr)
[13:33:39] *** Quits: phma (~phma@host-67-44-208-205.hnremote.net) (Read error: Connection reset by peer)
[13:34:53] *** Joins: phma (phma@2001:5b0:212a:8aa8:ed3d:67f3:3037:708a)
[13:35:54] *** Joins: `2jt (~jtomas@153.red-83-53-252.dynamicip.rima-tde.net)
[13:38:02] *** Quits: phma (phma@2001:5b0:212a:8aa8:ed3d:67f3:3037:708a) (Read error: Connection reset by peer)
[13:39:19] *** Joins: phma (phma@2001:5b0:211b:f778:91c:a71f:b4a2:a400)
[13:40:59] *** Quits: econo (uid147250@user/econo) (Quit: Connection closed for inactivity)
[13:43:10] *** Quits: max22- (~maxime@lfbn-ren-1-1026-62.w92-139.abo.wanadoo.fr) (Remote host closed the connection)
[13:43:43] *** Quits: sphynx (~xnyhps@2a02:2770:3:0:216:3eff:fe67:3288) (Ping timeout: 268 seconds)
[13:44:06] *** Joins: max22- (~maxime@2a01cb088335980076b5f89708bbcdbc.ipv6.abo.wanadoo.fr)
[13:44:11] *** Joins: sphynx (~xnyhps@2a02:2770:3:0:216:3eff:fe67:3288)
[13:44:38] *** Joins: gehmehgeh (~user@user/gehmehgeh)
[13:49:17] *** Quits: chexum (~quassel@gateway/tor-sasl/chexum) (Remote host closed the connection)
[13:49:18] *** Joins: __monty__ (~toonn@user/toonn)
[13:49:36] *** Joins: chexum (~quassel@gateway/tor-sasl/chexum)
[14:02:08] *** Joins: Lord_of_Life_ (~Lord@user/lord-of-life/x-2819915)
[14:03:33] *** Quits: Lord_of_Life (~Lord@user/lord-of-life/x-2819915) (Ping timeout: 256 seconds)
[14:03:33] *** Lord_of_Life_ is now known as Lord_of_Life
[14:05:18] *** Joins: tromp (~textual@dhcp-077-249-230-040.chello.nl)
[14:06:09] *** Joins: wroathe (~wroathe@206-55-188-8.fttp.usinternet.com)
[14:06:09] *** Quits: wroathe (~wroathe@206-55-188-8.fttp.usinternet.com) (Changing host)
[14:06:09] *** Joins: wroathe (~wroathe@user/wroathe)
[14:10:57] *** Quits: wroathe (~wroathe@user/wroathe) (Ping timeout: 240 seconds)
[14:12:28] *** Joins: zmt01 (~zmt00@user/zmt00)
[14:13:17] *** Quits: zmt00 (~zmt00@user/zmt00) (Ping timeout: 240 seconds)
[14:13:47] *** Quits: coolnickname (uid531864@user/coolnickname) (Quit: Connection closed for inactivity)
[14:18:37] *** Quits: jinsun (~quassel@user/jinsun) (Ping timeout: 240 seconds)
[14:19:04] *** Joins: eggplantade (~Eggplanta@108-201-191-115.lightspeed.sntcca.sbcglobal.net)
[14:20:10] *** Joins: jinsun (~quassel@user/jinsun)
[14:23:30] *** Quits: phaazon (~phaazon@2001:41d0:a:fe76::1) (Quit: WeeChat 2.9)
[14:23:49] *** Quits: kaph (~kaph@net-2-38-107-19.cust.vodafonedsl.it) (Read error: Connection reset by peer)
[14:23:55] *** Joins: kaph (~kaph@net-2-38-107-19.cust.vodafonedsl.it)
[14:23:57] *** Quits: kaph (~kaph@net-2-38-107-19.cust.vodafonedsl.it) (Remote host closed the connection)
[14:24:39] *** Quits: eggplantade (~Eggplanta@108-201-191-115.lightspeed.sntcca.sbcglobal.net) (Ping timeout: 256 seconds)
[14:26:37] *** Joins: x88x88x (~x88x88x@2001:19f0:5:39a8:5400:3ff:feb6:73cb)
[14:30:01] *** Joins: kaph (~kaph@net-2-38-107-19.cust.vodafonedsl.it)
[14:36:56] *** Joins: wroathe (~wroathe@206-55-188-8.fttp.usinternet.com)
[14:36:56] *** Quits: wroathe (~wroathe@206-55-188-8.fttp.usinternet.com) (Changing host)
[14:36:56] *** Joins: wroathe (~wroathe@user/wroathe)
[14:37:37] *** Joins: vglfr (~vglfr@88.155.23.34)
[14:42:05] *** Quits: wroathe (~wroathe@user/wroathe) (Ping timeout: 256 seconds)
[14:43:46] *** Joins: jgeerds (~jgeerds@55d4ac73.access.ecotel.net)
[14:46:27] *** Joins: ishan_ (~ishan@122.172.57.62)
[14:47:57] *** Quits: cosimone (~user@2001:b07:ae5:db26:c24a:d20:4d91:1e20) (Remote host closed the connection)
[14:48:04] <ishan_> hello
[14:49:03] <[exa]> hi!
[14:49:49] <ishan_> i have just started learning haskell and i had a small doubt
[14:50:32] <ishan_> why does <min "oh" "hello"> return "hello"
[14:51:25] <[exa]> because the comparison is lexicographic, and AFAIK 'h' < 'o', at least in ascii
[14:52:31] <ishan_> ahhh ok ok makes sense
[14:52:35] <ishan_> Thanks!
[14:52:38] <[exa]> if you want to compare by lengths, you can construct something like `minOn`
[14:52:43] <[exa]> let's try
[14:52:55] <[exa]> > minimumOn length ["oh", "hello"]
[14:52:57] <lambdabot>  error:
[14:52:57] <lambdabot>      â€¢ Variable not in scope:
[14:52:57] <lambdabot>          minimumOn :: (t0 a0 -> Int) -> [[Char]] -> t
[14:53:18] <[exa]> ah noes it requires extra libraries, but you can see it here: https://hackage.haskell.org/package/extra-1.7.10/docs/Data-List-Extra.html#v:minimumOn
[14:53:59] <ishan_> ooohh, I'll check it out Thanks !
[14:54:40] <[exa]> > let minOn f x y = (if f x < f y then x else y) in minOn length "oh" "hello"
[14:54:42] <lambdabot>  "oh"
[14:54:53] <[exa]> (parens added for clarity only)
[14:55:37] <[exa]> > let minOn f x y = (if f x < f y then x else y) in minOn reverse "oh" "hello"   -- :]
[14:55:38] <lambdabot>  "oh"
[14:55:46] <Hecate> (which is usually a good thing)
[15:08:05] *** Joins: wroathe (~wroathe@206.55.188.8)
[15:08:05] *** Quits: wroathe (~wroathe@206.55.188.8) (Changing host)
[15:08:05] *** Joins: wroathe (~wroathe@user/wroathe)
[15:10:12] *** Parts: ishan_ (~ishan@122.172.57.62) ()
[15:12:41] *** Quits: wroathe (~wroathe@user/wroathe) (Ping timeout: 256 seconds)
[15:19:03] *** Quits: merijn (~merijn@83-160-49-249.ip.xs4all.nl) (Ping timeout: 256 seconds)
[15:20:06] *** Joins: merijn (~merijn@83-160-49-249.ip.xs4all.nl)
[15:21:49] *** Joins: cosimone (~user@93-47-228-11.ip115.fastwebnet.it)
[15:25:17] *** Quits: merijn (~merijn@83-160-49-249.ip.xs4all.nl) (Ping timeout: 256 seconds)
[15:25:45] *** Joins: merijn (~merijn@83-160-49-249.ip.xs4all.nl)
[15:27:06] *** Quits: kspalaiologos (~kspalaiol@user/kspalaiologos) (Quit: Leaving)
[15:27:21] *** Quits: byorgey (~byorgey@155.138.238.211) (Quit: leaving)
[15:27:48] *** Joins: raehik (~raehik@cpc95906-rdng25-2-0-cust156.15-3.cable.virginm.net)
[15:29:57] *** Quits: xff0x (~xff0x@2001:1a81:5223:a300:d0e9:99bd:8a63:7db6) (Ping timeout: 240 seconds)
[15:30:57] *** Quits: merijn (~merijn@83-160-49-249.ip.xs4all.nl) (Ping timeout: 256 seconds)
[15:31:12] *** Joins: xff0x (~xff0x@2001:1a81:5223:a300:3ef8:2137:a2ce:8bcc)
[15:31:27] *** Joins: merijn (~merijn@83-160-49-249.ip.xs4all.nl)
[15:32:37] *** Joins: burnsidesLlama (~burnsides@129.67.168.22)
[15:32:47] <raehik> I can't auto derive a Functor instance for a data type that uses a promoted type and a type family, even though it's "clearly" easy to derive one manually (I get "constructor must only use type var as last arg of a data type"). Why is this? I had assumed GHC simplified type family equations eagerly
[15:33:06] *** Joins: machinedgod (~machinedg@24.105.81.50)
[15:33:38] *** Joins: pretty_dumm_guy (trottel@gateway/vpn/protonvpn/prettydummguy/x-88029655)
[15:39:52] <[exa]> raehik: I always assumed that the `deriving` is processed before any type families are even evaluated, but I can't find anything that would confirm/deny that
[15:40:00] *** Joins: mc47 (~mc47@xmonad/TheMC47)
[15:41:39] *** Joins: geranim0 (~geranim0@modemcable242.171-178-173.mc.videotron.ca)
[15:45:33] *** Joins: byorgey (~byorgey@155.138.238.211)
[15:46:05] <raehik> [exa]: I seeee. also can't find anything in GHC docs that helps but I would take that, thanks
[15:47:18] <geekosaur> possibly standalone deriving would work better?
[15:47:45] <[exa]> I see `tcInstDecls` is done in 2 passes so yeah, could help
[15:51:01] *** Joins: wyrd_ (~wyrd@gateway/tor-sasl/wyrd)
[15:51:05] *** Joins: Midjak (~Midjak@may53-1-78-226-116-92.fbx.proxad.net)
[15:54:53] <raehik> I am doing standalone deriving
[15:54:57] *** Quits: wyrd (~wyrd@gateway/tor-sasl/wyrd) (Ping timeout: 276 seconds)
[15:56:28] <raehik> I have a data type with 2 typevars, first is the promoted type, and one of the fields is a type family on both typevars -- which is where the error message is coming from
[15:57:49] <raehik> as a human I can look at the equation for the given promoted type and know the actual type of the field, and now the instance is boring
[15:58:05] <[exa]> raehik: is there a proof that the functor argument type doesn't get used e.g. as a contravariant in the type family?
[16:00:21] <raehik> no I don't think so. but a single equation in the type family would have that proof, and I don't mind writing out multiple derivings for each constructor of the promoted type
[16:01:06] <raehik> like "deriving instance Functor (X 'Promoted1)"
[16:01:13] *** Joins: xkuru (~xkuru@user/xkuru)
[16:01:48] <raehik> and say X has a record "PromotedRep p a" where "PromotedRep 'Promoted1 a = a"
[16:03:21] <raehik> it all seemed "simple" when I looked at it, so I was curious why GHC was unhappy to derive automatically. (I get that there's usually lots more going on behind the scenes!)
[16:04:54] <[exa]> can we have a code sample btw?
[16:05:49] <[exa]> and possibly the precise error
[16:07:43] *** SpencerJanssen[m is now known as sjanssen
[16:07:50] <raehik> yes sry, let me write a MWE
[16:12:04] *** Joins: acidjnk_new3 (~acidjnk@p200300d0c7271e938477eafdff400e1e.dip0.t-ipconnect.de)
[16:12:08] <raehik> [exa]: https://paste.tomsmeding.com/hKKF0obk (thanks for the help so far)
[16:13:25] <[exa]> oic you assume closed world
[16:13:36] <raehik> still a Haskell newbie, recently I keep using this pattern, allows me to move more extension work to the type level. very small loss of having to write out some Foldables etc.
[16:14:21] <[exa]> could you lift the type family a bit higher to the whole `data X` ?
[16:14:37] *** Quits: acidjnk_new (~acidjnk@p200300d0c7271e93a97d350f09b0dd65.dip0.t-ipconnect.de) (Ping timeout: 240 seconds)
[16:14:37] *** Quits: acidjnk (~acidjnk@p200300d0c7271e93a97d350f09b0dd65.dip0.t-ipconnect.de) (Ping timeout: 240 seconds)
[16:15:07] <raehik> ah yeah sure, good point
[16:15:16] *** Quits: hughjfchen (~hughjfche@vmi556545.contaboserver.net) (Quit: WeeChat 2.8)
[16:15:33] <[exa]> the logical problem I see there is that there's no telling if you give it say `deriving instance Functor (X SomeUnforeseenType)`
[16:16:10] <tomsmeding> that doesn't mean that 'deriving instance Funcctor (X 'ChoiceA)' couldn't work
[16:16:37] *** Quits: acidjnk_new3 (~acidjnk@p200300d0c7271e938477eafdff400e1e.dip0.t-ipconnect.de) (Ping timeout: 240 seconds)
[16:16:49] <[exa]> yeah it could, but the data declaration above has a kinda sneaky forall there somewhere, right?
[16:18:22] *** Joins: hughjfchen (~hughjfche@vmi556545.contaboserver.net)
[16:18:23] <raehik> I think this is it? gives me the same errors https://paste.tomsmeding.com/Q6o88q1O
[16:19:48] <[exa]> I meant replacing X with the type family, like `type family X c a` that chooses one of 2 data representations
[16:20:03] <[exa]> but yeah that will get unwieldy very quickly
[16:20:48] *** Joins: Hud (~Hud@184-167-074-028.res.spectrum.com)
[16:21:05] *** Joins: coot (~coot@89-64-85-93.dynamic.chello.pl)
[16:23:39] *** Quits: nhatanh02 (~satori@123.24.172.30) (Ping timeout: 256 seconds)
[16:23:55] <raehik> hmm I'm not sure exactly how to do that. I need a concrete product type where the other fields stay the same
[16:24:05] *** Quits: jgeerds (~jgeerds@55d4ac73.access.ecotel.net) (Ping timeout: 256 seconds)
[16:25:29] *** Joins: coolnickname (uid531864@user/coolnickname)
[16:25:44] <tomsmeding> I think the DeriveFunctor logic in GHC just only handles a particular list of cases, in particular these: https://gitlab.haskell.org/ghc/ghc/-/blob/master/compiler/GHC/Tc/Deriv/Functor.hs#L508-537
[16:25:46] <raehik> I can kind of do it like this: https://paste.tomsmeding.com/Lda5md1q
[16:26:08] <raehik> But now my Functor instance isn't over the dependent/type family field
[16:26:20] <tomsmeding> namely type variables, function types, type constructors, applications of supported things, and forall types
[16:26:26] <tomsmeding> and type families just happen to not be in this list
[16:26:33] <raehik> oh wonderful cheers tomsmeding 
[16:26:35] <merijn> raehik: Oh
[16:26:38] *** Joins: dhouthoo (~dhouthoo@178-117-36-167.access.telenet.be)
[16:26:43] <merijn> raehik: You can't do thing with partially applied type families
[16:26:52] <merijn> raehik: Which is why your standalone deriving does not work
[16:26:58] <tomsmeding> the type family is not partially applied
[16:27:15] <merijn> tomsmeding: It is in his standalone deriving
[16:27:17] <raehik> ahhh I think you're right
[16:28:23] <merijn> raehik: Because partially applied type families are equivalent to type level lambda's (which in turn break decidability)
[16:30:02] <raehik> merijn: OK, I understand. Thanks very much for all the insights
[16:30:37] <raehik> I shall install HLS for next time because I am a total failure at deriving instances without assistance
[16:32:38] *** Quits: burnsidesLlama (~burnsides@129.67.168.22) (Remote host closed the connection)
[16:36:08] *** Quits: ishutin (~ishutin@92-249-182-7.pool.digikabel.hu) (Ping timeout: 252 seconds)
[16:36:42] *** Joins: Guest|52 (~Guest|52@92.40.175.189.threembb.co.uk)
[16:37:58] *** Joins: ishutin (~ishutin@178-164-188-6.pool.digikabel.hu)
[16:38:27] *** Joins: wroathe (~wroathe@206-55-188-8.fttp.usinternet.com)
[16:38:27] *** Quits: wroathe (~wroathe@206-55-188-8.fttp.usinternet.com) (Changing host)
[16:38:27] *** Joins: wroathe (~wroathe@user/wroathe)
[16:42:35] *** Joins: ProfSimm (~ProfSimm@87.227.196.109)
[16:42:57] *** Quits: wroathe (~wroathe@user/wroathe) (Ping timeout: 240 seconds)
[16:48:24] *** Joins: CiaoSen (~Jura@p200300c957347b002a3a4dfffe84dbd5.dip0.t-ipconnect.de)
[16:49:37] *** Quits: Guest|52 (~Guest|52@92.40.175.189.threembb.co.uk) (Ping timeout: 240 seconds)
[17:05:32] *** Joins: slowButPresent (~slowButPr@user/slowbutpresent)
[17:07:47] *** Joins: burnsidesLlama (~burnsides@dhcp168-022.wadham.ox.ac.uk)
[17:13:31] *** Quits: burnsidesLlama (~burnsides@dhcp168-022.wadham.ox.ac.uk) (Ping timeout: 256 seconds)
[17:21:53] *** Joins: Erutuon (~Erutuon@user/erutuon)
[17:22:27] *** Joins: eggplantade (~Eggplanta@108-201-191-115.lightspeed.sntcca.sbcglobal.net)
[17:23:01] *** Quits: hyiltiz (~quassel@31.220.5.250) (Ping timeout: 256 seconds)
[17:23:54] *** Joins: wootehfoot (~wootehfoo@user/wootehfoot)
[17:23:54] *** Joins: burnsidesLlama (~burnsides@dhcp168-022.wadham.ox.ac.uk)
[17:24:51] *** Quits: `2jt (~jtomas@153.red-83-53-252.dynamicip.rima-tde.net) (Ping timeout: 256 seconds)
[17:26:08] <lechner> Hi, sometimes the docs on Hackage are not available due to build failures. i then go to the code. Is there a way to fix the docs on Hackage? Thanks!      https://hackage.haskell.org/package/zeromq4-patterns
[17:26:38] <geekosaur> you could contact the package maintainers and have them upload docs
[17:27:07] *** Quits: eggplantade (~Eggplanta@108-201-191-115.lightspeed.sntcca.sbcglobal.net) (Ping timeout: 256 seconds)
[17:27:14] <geekosaur> packages like that are unlikely to ever build and have automatic doc generation because the hackage builders are not going to have every C library under the sun installed
[17:29:05] <lechner> isn't this one missing because of a conflict?   https://hackage.haskell.org/package/zeromq4-patterns-0.3.1.0/reports/3
[17:30:06] *** Quits: Vajb (~Vajb@hag-jnsbng11-58c3a8-176.dhcp.inet.fi) (Read error: Connection reset by peer)
[17:30:13] <geekosaur> "conflict: pkg-config package
[17:30:13] <geekosaur> libzmq>=4.0 && <5.0, not found in the pkg-config database"
[17:30:25] <geekosaur> which means the C library is not installed
[17:31:05] *** Quits: FinnElija (~finn_elij@user/finn-elija/x-0085643) (Killed (NickServ (Forcing logout FinnElija -> finn_elija)))
[17:31:05] *** Joins: finn_elija (~finn_elij@user/finn-elija/x-0085643)
[17:31:05] *** finn_elija is now known as FinnElija
[17:31:20] *** Joins: katsuragi (katsuragi@tilde.institute)
[17:31:24] <lechner> the Haskell package does not declare it as a praraquisite?
[17:31:26] *** Parts: katsuragi (katsuragi@tilde.institute) (WeeChat 2.9)
[17:31:31] <lechner> prerequisite?
[17:31:51] *** Joins: Vajb (~Vajb@hag-jnsbng11-58c3a8-176.dhcp.inet.fi)
[17:31:53] <geekosaur> it does, but how is the builder to know how to install it, or worse download and build it?
[17:32:16] <lechner> which os is Hackage on?
[17:32:20] <geekosaur> also do the hackage maintainers really want their builders to automatically download and install random C libraries?
[17:32:52] <geekosaur> does it matter? the system package name rarely matches the pkg-config package name
[17:34:17] *** Joins: jgeerds (~jgeerds@55d4ac73.access.ecotel.net)
[17:34:31] <lechner> if we at debian could keep up with Hackage (and we are presently behind) the issue would not exist
[17:35:25] *** Quits: ubert (~Thunderbi@p200300ecdf0994db19c621579c5ac118.dip0.t-ipconnect.de) (Ping timeout: 240 seconds)
[17:35:37] <lechner> but i suppose it would require Hackage maintainers to package for Debian
[17:36:04] <int-e> Hmm, is there a nicer formulation of this?  minmax (x:xs) = foldl' (\(a, b) x -> (min a x, max b x)) (x, x) xs  (specification is  minmax == minimum &&& maximum, but I want to traverse the list only once)
[17:37:29] <geekosaur> lechner, you could try asking in #hackage but I'm pretty sure I already know their answer: they're not going to want to automatically install external libraries to make hackage packages build
[17:37:38] <geekosaur> even if they reliably could do so
[17:38:33] <lechner> why does the documentation require the C library?
[17:39:12] <geekosaur> because haddock is in effect a ghc plugin
[17:39:40] <int-e> Ah I guess I could rewrite the lambda to  (\(a,b) -> min a &&& max b)  in the spirit of that specification.
[17:39:56] *** Joins: ubert (~Thunderbi@p200300ecdf0994dbb267d7c5a67baed4.dip0.t-ipconnect.de)
[17:41:01] <geekosaur> and in particular the parts of the Haskell library which interact with the C library won't compile and may not even parse without at least the C headers around
[17:41:25] <int-e> @pl \ab -> min (fst ab) &&& max (snd ab)
[17:41:25] <lambdabot> ap ((&&&) . min . fst) (max . snd)
[17:42:16] <geekosaur> (example, the Haskell X11 libraries extract a bunch of defines from the C X11 header files and define bindings for them)
[17:42:37] <lechner> are those used in the docs?
[17:42:52] <lechner> i guess they could be
[17:42:59] <geekosaur> they can be referenced
[17:43:16] <geekosaur> even if they themselves do not have docstrings
[17:43:26] *** Joins: nhatanh02 (~satori@123.24.172.30)
[17:43:35] <geekosaur> you'll get better answers from #hackage but you'll probably like them even less
[17:44:42] <lechner> from 40,000 feet, is it better (or even possible) to isolate haddock from ghc or should Hackage marry Debian?
[17:44:45] <geekosaur> really, the easiest solution is to have the package maintainer upload their locally generated docs, and cabal makes this easy enough that they should have done so
[17:45:07] <geekosaur> haddock used to be separate. it was a maintenance nightmare because the two were always out of sync
[17:45:31] <lechner> Hackage could prevent publication without docs
[17:45:49] <lechner> as cruel as it sounds
[17:46:17] <geekosaur> I am again going to point you at #hackage. I am not #hackage
[17:46:32] <geekosaur> but at the very least I think that prevents any win32-specific packages
[17:46:32] <lechner> yeah, thanks for taking the timo
[17:47:01] <geekosaur> and docs I think have to be uploaded in a separate step after thye package is uploaded
[17:47:06] <lechner> i meant without docs uploaded separately
[17:47:13] <geekosaur> (again #hackage would know more about this)
[17:47:23] <lechner> yeah, and thanks!
[17:47:56] *** Joins: lavaman (~lavaman@98.38.249.169)
[17:50:56] *** Quits: wootehfoot (~wootehfoo@user/wootehfoot) (Quit: Leaving)
[18:05:04] *** Joins: shriekingnoise (~shrieking@186.137.144.80)
[18:06:02] *** Joins: wroathe (~wroathe@206-55-188-8.fttp.usinternet.com)
[18:06:02] *** Quits: wroathe (~wroathe@206-55-188-8.fttp.usinternet.com) (Changing host)
[18:06:02] *** Joins: wroathe (~wroathe@user/wroathe)
[18:08:46] <int-e> Oh cool, I didn't know that  data Foo = Bar :?: Baz (deriving Show)  and  data Foo = (:?:) Bar Baz  result in different Show instances
[18:09:18] <int-e> err, the second one was supposed to also derive (Show), and I messed up the parentheses.
[18:11:03] *** Joins: waleee (~waleee@2001:9b0:21d:fc00:398f:b003:b90d:acf4)
[18:14:05] <geekosaur> that's documented in the Report, I think
[18:14:13] *** Quits: vysn (~vysn@user/vysn) (Ping timeout: 240 seconds)
[18:16:30] *** Joins: vysn (~vysn@user/vysn)
[18:18:37] *** Quits: vglfr (~vglfr@88.155.23.34) (Ping timeout: 240 seconds)
[18:19:59] *** Joins: vglfr (~vglfr@88.155.23.34)
[18:21:16] <int-e> Yeah it kind of does (the language[1] around this could be clearer though; it says "If the constructor is defined to be an infix operator" which apparently is to be understood to refer to the "(infix conop)" production in[2] [1]https://www.haskell.org/onlinereport/haskell2010/haskellch11.html#x18-18600011.4 [2]https://www.haskell.org/onlinereport/haskell2010/haskellch4.html#x10-690004.2.1
[18:21:56] <int-e> anyway, I've read large parts of the report but I don't have it memorized :)
[18:23:48] *** Joins: zincy_ (~zincy@2a00:23c8:970c:4801:8d43:554e:d62c:915d)
[18:27:31] <lechner> For those who read Czech, I think I found a copy of "Learn You A Haskell"    http://naucte-se.haskell.cz/
[18:27:37] *** Quits: wroathe (~wroathe@user/wroathe) (Ping timeout: 240 seconds)
[18:28:37] *** Quits: zincy_ (~zincy@2a00:23c8:970c:4801:8d43:554e:d62c:915d) (Ping timeout: 268 seconds)
[18:36:24] *** Joins: wroathe (~wroathe@206-55-188-8.fttp.usinternet.com)
[18:36:24] *** Quits: wroathe (~wroathe@206-55-188-8.fttp.usinternet.com) (Changing host)
[18:36:24] *** Joins: wroathe (~wroathe@user/wroathe)
[18:37:41] *** Quits: max22- (~maxime@2a01cb088335980076b5f89708bbcdbc.ipv6.abo.wanadoo.fr) (Ping timeout: 252 seconds)
[18:39:39] *** Joins: k` (~user@152.1.137.158)
[18:40:09] <k`> Does anyone have an example of application or library code using `stimes` ?
[18:41:01] *** Quits: wroathe (~wroathe@user/wroathe) (Ping timeout: 240 seconds)
[18:42:15] *** Joins: zincy_ (~zincy@2a00:23c8:970c:4801:8d43:554e:d62c:915d)
[18:43:32] *** Joins: wroathe (~wroathe@206-55-188-8.fttp.usinternet.com)
[18:43:32] *** Quits: wroathe (~wroathe@206-55-188-8.fttp.usinternet.com) (Changing host)
[18:43:32] *** Joins: wroathe (~wroathe@user/wroathe)
[18:43:42] <merijn> I used it for AoC :p
[18:44:09] <merijn> k`: Any specific reason for the question? :p
[18:46:44] *** Quits: Hud (~Hud@184-167-074-028.res.spectrum.com) (Quit: Client closed)
[18:47:25] *** Quits: zincy_ (~zincy@2a00:23c8:970c:4801:8d43:554e:d62c:915d) (Ping timeout: 240 seconds)
[18:48:17] *** Quits: wroathe (~wroathe@user/wroathe) (Ping timeout: 240 seconds)
[18:48:23] <k`> merjin: Just curious whether it sees any use. Seems like a lot of work, thought, and lines of GHC core have gone into it.
[18:49:51] *** Quits: lavaman (~lavaman@98.38.249.169) (Ping timeout: 256 seconds)
[18:51:06] *** Quits: wyrd_ (~wyrd@gateway/tor-sasl/wyrd) (Ping timeout: 276 seconds)
[18:51:20] <merijn> k`: Not that much, I think? It's handful of lines?
[18:52:09] <merijn> And it's a pretty big jump in efficiency
[18:52:34] *** Joins: douglaswinship (~douglaswi@78.40.148.180)
[18:53:43] <k`> merjin: Oh yeah, no question there. Just wondering efficiency of _what_.
[18:54:12] *** Joins: LiaoTao (~LiaoTao@gateway/tor-sasl/liaotao)
[18:54:43] <merijn> k`: If you did AoC, I did my first (naive) initial expansion by repeated application of the expansion function, using stimes to make that
[18:54:52] <merijn> k`: (spoilers, obviously) https://github.com/merijn/AdventOfCode/blob/master/Day14.hs#L71-L78
[18:56:24] *** Joins: wroathe (~wroathe@206-55-188-8.fttp.usinternet.com)
[18:56:24] *** Quits: wroathe (~wroathe@206-55-188-8.fttp.usinternet.com) (Changing host)
[18:56:24] *** Joins: wroathe (~wroathe@user/wroathe)
[18:59:07] *** Quits: __monty__ (~toonn@user/toonn) (Quit: leaving)
[18:59:51] <k`> merijn: Oh, yeah, the `stimes n f x = stimes n (f x)` instance is neat and makes good use of the abstraction.
[19:00:37] *** Quits: wroathe (~wroathe@user/wroathe) (Ping timeout: 240 seconds)
[19:00:53] <merijn> Probably some kinda tree builder would too
[19:00:59] <k`> I guess it could also improve the efficiency of folding a 'bag' structure.
[19:01:03] *** Quits: coot (~coot@89-64-85-93.dynamic.chello.pl) (Quit: coot)
[19:02:25] <merijn> k`: Pretty sure the main reason stimes exists is because it's neat and fairly easy to implement, so might as well! And then leave it up to Semigroup users to find instances where it's useful :p
[19:02:51] <k`> newtype Bag a = Bag [(Int, a)]; instance Foldable Bag where foldMap f (Bag xs) = foldMap (\ (n, x) -> stimes n (f x)) xs
[19:03:14] <merijn> k`: Also, keep in mind that Semigroup was originally in a different library that "basically every possible operation/feature of semigroups you could think off"
[19:03:58] <merijn> It was only moved into base fairly recently to make Semigroup a superclass of Monoid, but kept all the minor features so backwards compat is easier
[19:04:15] <k`> merijn: Oh, did it start as one of ekmett's libraries?
[19:04:48] <merijn> Yeah, in semigroups
[19:05:56] <k`> Suddenly it all makes sense :P
[19:06:05] *** Joins: Sgeo (~Sgeo@user/sgeo)
[19:06:52] <merijn> The module was just copy pasted into base and the original package changed to re-export the base module
[19:07:07] <k`> Right, don't want to be disruptive.
[19:07:10] <geekosaur> there's also the whole mathematical semigroup thing
[19:08:00] *** Joins: `2jt (~jtomas@153.red-83-53-252.dynamicip.rima-tde.net)
[19:08:23] *** Joins: n3rdy1 (~n3rdy1@2600:1700:4570:3480::41)
[19:08:37] <k`> Honestly, though, I'd rather have `Semigroup` with methods like `commutative :: Maybe (Dict (Commutative a))` and `knownStrictFirst :: Proxy a -> Bool` .
[19:09:00] <k`> Is that considered bad API design in Haskell?
[19:11:10] <k`> `stimes | Just Dict <- idempotent :: Maybe (Dict (Idempotent a)) = .. | otherwise = ...`
[19:12:16] *** Joins: max22- (~maxime@2a01cb0883359800b8731b08b5ca29d9.ipv6.abo.wanadoo.fr)
[19:14:54] <k`> `foldMap f | knownStrictSecond (Proxy :: Proxy b) = foldl' (\ z x -> z <> f x) mempty | otherwise = foldr (\ x z -> f x <> z) mempty`
[19:15:24] <k`> Is that all too kludgy?
[19:15:25] *** Quits: xff0x (~xff0x@2001:1a81:5223:a300:3ef8:2137:a2ce:8bcc) (Ping timeout: 240 seconds)
[19:16:08] <merijn> I think so? Doesn't seem to buy you much?
[19:16:20] <merijn> k`: Like, what is it supposed to improve over the current thing?
[19:16:25] *** Joins: xff0x (~xff0x@2001:1a81:5223:a300:e304:e5b3:98c9:ca79)
[19:16:52] <geekosaur> one would suspect that if it were worth the effort ekmett would have already done it :)
[19:16:52] *** Joins: zincy_ (~zincy@host86-151-99-97.range86-151.btcentralplus.com)
[19:19:50] <k`> Fold with a commutative semigroup in the wrong direction and you can get massively worse performance for no reason at all. For example foldMapping a `Map` or `Set` to `Any` or `All` requires evaluating about half the map or set. But if you knew they were commutative, you could just fold with the dual on the appropriate half.
[19:20:17] <merijn> k`: You can just do that yourself in the stimes definition, though?
[19:20:32] <k`> Not talking about `stimes` here.
[19:21:06] *** Joins: bontaq (~user@ool-45779fe5.dyn.optonline.net)
[19:21:39] <merijn> tbh, I think that's not nearly frequent enough to incure the API complexity you suggest
[19:22:57] *** Quits: zincy_ (~zincy@host86-151-99-97.range86-151.btcentralplus.com) (Ping timeout: 240 seconds)
[19:24:43] <k`> Assuming GHC always compiles `foldMap` of a strict semigroup to the equivalent of `foldMap'`, I agree.
[19:26:39] <k`> Much like `stimes` it's complexity that you can ignore if you like. And there's not really code to get wrong. You just say `commutative = Just Dict` when you know it's commutative. Or `case commutative :: a of Just Dict -> Just Dict; Nothing -> Nothing`.
[19:26:57] *** Quits: vglfr (~vglfr@88.155.23.34) (Ping timeout: 240 seconds)
[19:27:15] *** Quits: merijn (~merijn@83-160-49-249.ip.xs4all.nl) (Ping timeout: 256 seconds)
[19:27:20] *** Joins: wyrd (~wyrd@gateway/tor-sasl/wyrd)
[19:28:07] <k`> But yeah, the benefit probably doesn't outweigh the complexity.
[19:28:14] *** Joins: mbuf (~Shakthi@171.61.196.206)
[19:33:37] *** Quits: CiaoSen (~Jura@p200300c957347b002a3a4dfffe84dbd5.dip0.t-ipconnect.de) (Ping timeout: 240 seconds)
[19:34:30] *** Joins: wroathe (~wroathe@206-55-188-8.fttp.usinternet.com)
[19:34:30] *** Quits: wroathe (~wroathe@206-55-188-8.fttp.usinternet.com) (Changing host)
[19:34:30] *** Joins: wroathe (~wroathe@user/wroathe)
[19:37:19] *** Quits: dsrt^ (~dsrt@207.5.21.20) (Ping timeout: 256 seconds)
[19:37:48] *** Joins: uam (uid360535@id-360535.hampstead.irccloud.com)
[19:39:17] *** Quits: wroathe (~wroathe@user/wroathe) (Ping timeout: 240 seconds)
[19:39:27] *** Joins: spaceseller (~spacesell@31.147.205.13)
[19:40:28] *** Joins: shapr (~user@98.54.1.142)
[19:41:32] *** Quits: jgeerds (~jgeerds@55d4ac73.access.ecotel.net) (Ping timeout: 240 seconds)
[19:41:54] *** Joins: zyzzyxdonta (~zyzzyxdon@ip5f5aa13a.dynamic.kabel-deutschland.de)
[19:42:11] *** Parts: zyzzyxdonta (~zyzzyxdon@ip5f5aa13a.dynamic.kabel-deutschland.de) ()
[19:42:30] *** Joins: wroathe (~wroathe@206-55-188-8.fttp.usinternet.com)
[19:42:30] *** Quits: wroathe (~wroathe@206-55-188-8.fttp.usinternet.com) (Changing host)
[19:42:30] *** Joins: wroathe (~wroathe@user/wroathe)
[19:46:31] *** Quits: shapr (~user@98.54.1.142) (Ping timeout: 256 seconds)
[19:50:25] *** Quits: Vajb (~Vajb@hag-jnsbng11-58c3a8-176.dhcp.inet.fi) (Read error: Connection reset by peer)
[19:50:41] *** Joins: zincy_ (~zincy@2a00:23c8:970c:4801:8d43:554e:d62c:915d)
[19:51:10] *** Joins: Vajb (~Vajb@2001:999:50:e6be:1e98:9376:d93e:4506)
[19:51:17] *** Quits: waleee (~waleee@2001:9b0:21d:fc00:398f:b003:b90d:acf4) (Ping timeout: 240 seconds)
[19:52:45] *** Joins: CiaoSen (~Jura@p200300c957347b002a3a4dfffe84dbd5.dip0.t-ipconnect.de)
[19:54:23] *** Joins: [itchyjunk] (~itchyjunk@user/itchyjunk/x-7353470)
[19:54:58] *** Quits: mmalter (~mmalter@88.126.10.237) (Read error: Connection reset by peer)
[19:55:37] *** Quits: n3rdy1 (~n3rdy1@2600:1700:4570:3480::41) (Ping timeout: 240 seconds)
[19:58:57] *** Quits: wroathe (~wroathe@user/wroathe) (Ping timeout: 240 seconds)
[19:59:58] *** Joins: wroathe (~wroathe@206-55-188-8.fttp.usinternet.com)
[19:59:58] *** Quits: wroathe (~wroathe@206-55-188-8.fttp.usinternet.com) (Changing host)
[19:59:58] *** Joins: wroathe (~wroathe@user/wroathe)
[20:03:07] *** Joins: sirlensalot (~sirlensal@ool-44c5f8c9.dyn.optonline.net)
[20:03:23] *** Quits: dextaa (~DV@user/dextaa) (Ping timeout: 256 seconds)
[20:05:05] *** Quits: wroathe (~wroathe@user/wroathe) (Ping timeout: 256 seconds)
[20:07:38] *** Joins: n3rdy1 (~n3rdy1@2600:1700:4570:3480:1b88:50f:dae0:9293)
[20:11:37] *** Quits: vysn (~vysn@user/vysn) (Ping timeout: 240 seconds)
[20:11:42] *** Joins: eggplantade (~Eggplanta@108-201-191-115.lightspeed.sntcca.sbcglobal.net)
[20:17:52] *** Joins: justsomeguy (~justsomeg@user/justsomeguy)
[20:18:21] *** Quits: spaceseller (~spacesell@31.147.205.13) (Quit: Leaving)
[20:22:45] *** Quits: Jing (~hedgehog@2604:a840:3::103c) (Quit: My MacBook has gone to sleep. ZZZzzzâ€¦)
[20:24:48] *** Joins: doyougnu (~doyougnu@c-73-25-202-122.hsd1.or.comcast.net)
[20:26:10] *** Quits: ProfSimm (~ProfSimm@87.227.196.109) (Remote host closed the connection)
[20:26:28] *** Joins: ProfSimm (~ProfSimm@87.227.196.109)
[20:30:26] *** Quits: dhouthoo (~dhouthoo@178-117-36-167.access.telenet.be) (Quit: WeeChat 3.4)
[20:31:32] *** Quits: coolnickname (uid531864@user/coolnickname) (Quit: Connection closed for inactivity)
[20:33:25] *** Quits: shailangsa_ (~shailangs@host86-162-150-202.range86-162.btcentralplus.com) (Ping timeout: 240 seconds)
[20:34:34] *** Joins: moshet (~moshet@190.131.248.18)
[20:35:07] *** Quits: [itchyjunk] (~itchyjunk@user/itchyjunk/x-7353470) (Ping timeout: 256 seconds)
[20:39:12] *** Joins: wroathe (~wroathe@206-55-188-8.fttp.usinternet.com)
[20:39:12] *** Quits: wroathe (~wroathe@206-55-188-8.fttp.usinternet.com) (Changing host)
[20:39:12] *** Joins: wroathe (~wroathe@user/wroathe)
[20:43:52] *** Joins: econo (uid147250@user/econo)
[20:43:55] *** Joins: [itchyjunk] (~itchyjunk@user/itchyjunk/x-7353470)
[20:44:11] *** Quits: wroathe (~wroathe@user/wroathe) (Ping timeout: 256 seconds)
[20:46:43] *** Joins: Akiva (~Akiva@user/Akiva)
[20:49:03] *** Quits: eggplantade (~Eggplanta@108-201-191-115.lightspeed.sntcca.sbcglobal.net) (Remote host closed the connection)
[20:49:49] *** Quits: notzmv (~zmv@user/notzmv) (Ping timeout: 240 seconds)
[20:49:55] *** Joins: widelec-BB (~widelec@cpe-109-207-144-181.docsis.tczew.net.pl)
[20:51:42] *** Joins: dextaa (~DV@user/dextaa)
[20:56:57] *** Joins: epolanski (uid312403@id-312403.helmsley.irccloud.com)
[21:07:58] *** Quits: wyrd (~wyrd@gateway/tor-sasl/wyrd) (Quit: leaving)
[21:08:33] *** Joins: eggplantade (~Eggplanta@108-201-191-115.lightspeed.sntcca.sbcglobal.net)
[21:10:49] *** Quits: Codaraxis (~Codaraxis@user/codaraxis) (Ping timeout: 256 seconds)
[21:12:16] *** Joins: simendsjo (~user@84.211.91.241)
[21:13:15] *** Joins: wyrd (~wyrd@gateway/tor-sasl/wyrd)
[21:14:06] *** Joins: vysn (~vysn@user/vysn)
[21:14:10] *** Joins: python476 (~user@88.160.31.174)
[21:14:47] *** Quits: zincy_ (~zincy@2a00:23c8:970c:4801:8d43:554e:d62c:915d) (Remote host closed the connection)
[21:15:17] *** Quits: machinedgod (~machinedg@24.105.81.50) (Remote host closed the connection)
[21:16:55] *** Joins: emf (~emf@2620:10d:c090:400::5:f0df)
[21:18:21] *** Quits: ProfSimm (~ProfSimm@87.227.196.109) (Remote host closed the connection)
[21:18:24] *** Joins: tzh (~tzh@c-24-21-73-154.hsd1.or.comcast.net)
[21:18:39] *** Joins: ProfSimm (~ProfSimm@87.227.196.109)
[21:18:53] *** Joins: machinedgod (~machinedg@24.105.81.50)
[21:30:37] *** Joins: shailangsa (~shailangs@host86-162-150-202.range86-162.btcentralplus.com)
[21:30:47] *** Quits: justsomeguy (~justsomeg@user/justsomeguy) (Ping timeout: 256 seconds)
[21:31:48] *** Joins: Feuermagier (~Feuermagi@user/feuermagier)
[21:32:00] *** Joins: Feuermagier_ (~Feuermagi@213.178.26.41)
[21:32:16] *** Quits: Feuermagier_ (~Feuermagi@213.178.26.41) (Remote host closed the connection)
[21:38:01] *** Quits: Akiva (~Akiva@user/Akiva) (Ping timeout: 256 seconds)
[21:38:29] *** Quits: ProfSimm (~ProfSimm@87.227.196.109) (Remote host closed the connection)
[21:38:48] *** Joins: ProfSimm (~ProfSimm@87.227.196.109)
[21:41:50] <polyphem>  /quit
[21:41:53] *** Quits: polyphem (~rod@2a02:810d:640:776c:e450:3ca3:b389:687a) (Quit: WeeChat 3.3)
[21:43:04] *** Joins: polyphem (~rod@2a02:810d:640:776c:e450:3ca3:b389:687a)
[21:45:36] *** Quits: benin (~benin@183.82.176.241) (Quit: The Lounge - https://thelounge.chat)
[21:47:18] *** Quits: uam (uid360535@id-360535.hampstead.irccloud.com) (Quit: Connection closed for inactivity)
[21:48:44] *** Quits: mbuf (~Shakthi@171.61.196.206) (Quit: Leaving)
[21:52:19] *** Quits: simendsjo (~user@84.211.91.241) (Ping timeout: 256 seconds)
[21:53:44] *** Quits: neurocyte09 (~neurocyte@user/neurocyte) (Read error: Connection reset by peer)
[21:54:32] *** Joins: neurocyte091 (~neurocyte@IP-212232089218.dynamic.medianet-world.de)
[21:54:32] *** Quits: neurocyte091 (~neurocyte@IP-212232089218.dynamic.medianet-world.de) (Changing host)
[21:54:32] *** Joins: neurocyte091 (~neurocyte@user/neurocyte)
[21:55:36] *** Joins: xb0o2 (~xb0o2@user/xb0o2)
[21:57:04] *** Joins: dsrt^ (~dsrt@207.5.21.20)
[21:57:15] *** Joins: merijn (~merijn@83-160-49-249.ip.xs4all.nl)
[21:59:21] *** Quits: pavonia (~user@user/siracusa) (Quit: Bye!)
[22:08:37] *** Quits: deadmarshal (~deadmarsh@95.38.116.103) (Ping timeout: 240 seconds)
[22:09:12] *** Joins: wroathe (~wroathe@206-55-188-8.fttp.usinternet.com)
[22:09:13] *** Quits: wroathe (~wroathe@206-55-188-8.fttp.usinternet.com) (Changing host)
[22:09:13] *** Joins: wroathe (~wroathe@user/wroathe)
[22:11:07] *** Quits: tromp (~textual@dhcp-077-249-230-040.chello.nl) (Quit: My iMac has gone to sleep. ZZZzzzâ€¦)
[22:14:25] *** Quits: wroathe (~wroathe@user/wroathe) (Ping timeout: 256 seconds)
[22:16:33] *** Joins: Akiva (~Akiva@user/Akiva)
[22:16:34] <EvanR> what is a good name for this operation, splitAt? :: SplitLocation -> T -> (T,T) such that cat the two results always equals the original
[22:16:57] *** Quits: Gurkenglas (~Gurkengla@dslb-002-203-144-204.002.203.pools.vodafone-ip.de) (Ping timeout: 240 seconds)
[22:17:39] <monochrom> splitAt is a good name. It's why it's already taken. :)
[22:18:06] <EvanR> typeclass to the rescue
[22:18:25] *** Quits: emf (~emf@2620:10d:c090:400::5:f0df) (Quit: emf)
[22:20:35] <EvanR> class Monoid a => Split t a | a -> t where
[22:20:45] <EvanR> Semigroup
[22:21:24] *** Quits: xlei (~akans@pool-68-129-84-118.nycmny.fios.verizon.net) (Quit: ZNC 1.8.2 - https://znc.in)
[22:22:43] *** Joins: xlei (~akans@pool-68-129-84-118.nycmny.fios.verizon.net)
[22:23:23] *** Joins: zincy_ (~zincy@2a00:23c8:970c:4801:8d43:554e:d62c:915d)
[22:26:38] <EvanR>   splitAt :: t -> a -> (a,a) -- fst (splitAt t x) <> snd (splitAt t x) = x
[22:27:07] *** Quits: noddy (~user@user/noddy) (Quit: WeeChat 3.4)
[22:27:52] *** Quits: widelec-BB (~widelec@cpe-109-207-144-181.docsis.tczew.net.pl) (Quit:  )
[22:28:38] <EvanR> > splitAt 3 [0..9]
[22:28:39] <lambdabot>  ([0,1,2],[3,4,5,6,7,8,9])
[22:28:44] <EvanR> ok good
[22:31:10] *** Joins: widelec-BB (~widelec@cpe-109-207-144-181.docsis.tczew.net.pl)
[22:31:25] *** Quits: merijn (~merijn@83-160-49-249.ip.xs4all.nl) (Ping timeout: 256 seconds)
[22:32:18] *** Joins: noddy (~user@user/noddy)
[22:33:25] *** Quits: vysn (~vysn@user/vysn) (Ping timeout: 240 seconds)
[22:34:15] *** Quits: cheater (~Username@user/cheater) (Ping timeout: 256 seconds)
[22:35:57] *** Joins: waleee (~waleee@2001:9b0:21d:fc00:398f:b003:b90d:acf4)
[22:36:32] *** Joins: tromp (~textual@dhcp-077-249-230-040.chello.nl)
[22:40:08] *** Quits: zincy_ (~zincy@2a00:23c8:970c:4801:8d43:554e:d62c:915d) (Remote host closed the connection)
[22:43:37] *** Joins: cheater (~Username@user/cheater)
[22:46:25] *** Joins: Codaraxis (~Codaraxis@user/codaraxis)
[22:47:11] *** Quits: tromp (~textual@dhcp-077-249-230-040.chello.nl) (Quit: My iMac has gone to sleep. ZZZzzzâ€¦)
[22:47:35] *** Joins: tromp (~textual@dhcp-077-249-230-040.chello.nl)
[22:53:25] *** Quits: jespada (~jespada@87.74.32.18) (Read error: Connection reset by peer)
[22:53:37] *** Joins: jespada_ (~jespada@87.74.32.18)
[22:54:56] *** Joins: jgeerds (~jgeerds@55d4ac73.access.ecotel.net)
[22:55:54] <EvanR> shoot the semigroup doesn't always correspond to cat
[22:57:56] *** Quits: geekosaur (~geekosaur@xmonad/geekosaur) (Remote host closed the connection)
[22:59:27] *** Joins: notzmv (~zmv@user/notzmv)
[23:00:17] *** Joins: geekosaur (~geekosaur@xmonad/geekosaur)
[23:08:10] *** Joins: kupi (uid212005@id-212005.hampstead.irccloud.com)
[23:12:34] *** Joins: simendsjo (~user@84.211.91.241)
[23:22:37] *** Quits: moshet (~moshet@190.131.248.18) (Ping timeout: 240 seconds)
[23:29:14] *** Joins: zincy_ (~zincy@2a00:23c8:970c:4801:8d43:554e:d62c:915d)
[23:35:27] *** Quits: juhp (~juhp@128.106.188.82) (Ping timeout: 256 seconds)
[23:37:06] *** Quits: zincy_ (~zincy@2a00:23c8:970c:4801:8d43:554e:d62c:915d) (Remote host closed the connection)
[23:37:27] *** Joins: zincy_ (~zincy@2a00:23c8:970c:4801:8d43:554e:d62c:915d)
[23:38:11] *** Joins: juhp (~juhp@128.106.188.82)
[23:45:35] *** Joins: wroathe (~wroathe@206-55-188-8.fttp.usinternet.com)
[23:45:35] *** Quits: wroathe (~wroathe@206-55-188-8.fttp.usinternet.com) (Changing host)
[23:45:35] *** Joins: wroathe (~wroathe@user/wroathe)
[23:46:09] <EvanR> is there a more efficient ordering for IntMap.intersection if one of the IntMaps is very small or empty
[23:46:32] *** Joins: kuribas (~user@ptr-25vy0i9v3nmgstpk1ug.18120a2.ip6.access.telenet.be)
[23:47:36] <EvanR> in lambdabot I think I'm observing no
[23:48:53] <lechner> Hi, with this code receiving and sending ZeroMQ traffic, I eventually see "file descriptor 1024 out of range for select (0--1024). Recompile with -threaded to work around this." dsal once said there was an issue with the "finalizer". Am I running out of file descriptors? Thanks!    https://paste.tomsmeding.com/8ofcOqTl
[23:49:57] <EvanR> oof
[23:50:11] *** Quits: machinedgod (~machinedg@24.105.81.50) (Ping timeout: 256 seconds)
[23:50:30] <EvanR> (compiling WITHOUT -threaded is kind of suspicious imho)
[23:51:11] *** Quits: wroathe (~wroathe@user/wroathe) (Ping timeout: 256 seconds)
[23:51:41] <monochrom> EvanR: The doc says "O(m+n)" so I don't think there is a difference between "intersect x y" and "intersect y x".
[23:52:39] <EvanR> > IM.intersect IM.empty IM.empty
[23:52:40] <lambdabot>  error:
[23:52:40] <lambdabot>      Not in scope: â€˜IM.intersectâ€™
[23:52:40] <lambdabot>      Perhaps you meant â€˜IM.intersectionâ€™ (imported from Data.IntMap)
[23:52:45] <EvanR> > IM.intersection IM.empty IM.empty
[23:52:46] <lambdabot>  fromList []
[23:52:50] <EvanR> > IM.intersection IM.empty (IM.fromList (zip [0..] [0.100000000]))
[23:52:52] <lambdabot>  fromList []
[23:53:03] <EvanR> fast... I hope
[23:57:50] *** Quits: FinnElija (~finn_elij@user/finn-elija/x-0085643) (Remote host closed the connection)
[23:57:50] *** Quits: gentauro (~gentauro@user/gentauro) (Read error: Connection reset by peer)
[23:58:09] <monochrom> That one is probably hand-coded :)
[23:58:19] <monochrom> > IM.intersection IM.empty undefined
[23:58:20] <lambdabot>  fromList []
[23:58:31] <EvanR> > IM.intersection (IM.singleton (4,9)) (IM.fromList (zip [0..] [0.100000000]))
[23:58:32] <lambdabot>  error:
[23:58:32] <lambdabot>      â€¢ Couldn't match expected type â€˜IM.IntMap aâ€™
[23:58:32] <lambdabot>                    with actual type â€˜a0 -> IM.IntMap a0â€™
[23:58:39] <EvanR> > IM.intersection (IM.singleton 4 9) (IM.fromList (zip [0..] [0.100000000]))
[23:58:40] <lambdabot>  fromList []
[23:59:02] <monochrom> That can't be right...
[23:59:06] <EvanR> wut
