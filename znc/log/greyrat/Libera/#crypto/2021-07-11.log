[00:05:53] *** Joins: drathir_tor (~drathir@wireguard/tunneler/drathir)
[00:06:03] *** Joins: Brocker (~NoBody@user/brocker)
[00:08:29] *** Parts: Brocker (~NoBody@user/brocker) ()
[00:09:43] *** Quits: RickSanchez (~RickSanch@2607:fb90:888f:527c:a4ca:17a2:b466:1217) (Remote host closed the connection)
[00:14:33] *** Joins: Guyver2_ (Guyver@guyver2.xs4all.nl)
[00:15:26] *** Quits: Guyver2 (Guyver@guyver2.xs4all.nl) (Ping timeout: 268 seconds)
[00:15:34] *** Guyver2_ is now known as Guyver2
[00:16:38] *** Joins: CHG1730 (~CHG1730@35-247-208-87.ftth.glasoperator.nl)
[00:16:50] *** Joins: mmlj4 (~mmlj4@ip68-230-228-233.no.no.cox.net)
[00:18:27] *** Joins: onelegend (frosty@wireguard/tunneler/onelegend)
[00:22:20] *** Quits: qbt (~edun@user/edun) (Ping timeout: 265 seconds)
[00:23:06] *** Quits: drathir_tor (~drathir@wireguard/tunneler/drathir) (Remote host closed the connection)
[00:29:57] *** Quits: zro (~zro@user/zro) (Quit: WeeChat 3.2)
[00:37:58] *** Quits: Guyver2 (Guyver@guyver2.xs4all.nl) (Quit: Going offline, see ya! (www.adiirc.com))
[00:41:56] *** Quits: milkt (~debian@gateway/tor-sasl/milkt) (Remote host closed the connection)
[00:41:59] *** Joins: milkt_ (~debian@gateway/tor-sasl/milkt)
[00:45:22] *** Joins: GNUcifer (~ct@i59F4BBEE.versanet.de)
[00:45:38] *** Quits: cehteh (~ct@mue-88-130-75-247.dsl.tropolys.de) (Killed (NickServ (GHOST command used by GNUcifer!~ct@i59F4BBEE.versanet.de)))
[00:45:46] *** GNUcifer is now known as cehteh
[00:45:52] *** Quits: milkt_ (~debian@gateway/tor-sasl/milkt) (Remote host closed the connection)
[00:47:01] *** Joins: milkt (~debian@gateway/tor-sasl/milkt)
[00:52:23] *** Joins: drathir_tor (~drathir@wireguard/tunneler/drathir)
[00:53:44] *** Joins: RickSanchez (~RickSanch@2607:fb90:888f:527c:a4ca:17a2:b466:1217)
[00:58:23] *** Quits: RickSanchez (~RickSanch@2607:fb90:888f:527c:a4ca:17a2:b466:1217) (Ping timeout: 255 seconds)
[01:01:33] *** Quits: pete443_ (~pete@user/pete443) (Quit: Bye.)
[01:01:46] *** Quits: akaWolf (~akaWolf@akawolf.org) (Ping timeout: 240 seconds)
[01:01:48] *** Joins: pete443 (~pete@user/pete443)
[01:06:51] *** Joins: ioxzev1z (~ioxzev1z@user/ioxzev1z)
[01:11:43] *** Joins: akaWolf (~akaWolf@akawolf.org)
[01:15:48] *** Quits: onelegend (frosty@wireguard/tunneler/onelegend) (Quit: leaving)
[01:27:28] *** Quits: akaWolf (~akaWolf@akawolf.org) (Ping timeout: 272 seconds)
[01:30:51] *** Quits: CHG1730 (~CHG1730@35-247-208-87.ftth.glasoperator.nl) ()
[01:32:54] *** Quits: Klotz (~Klotzoman@gateway/tor-sasl/klotz) (Quit: Klotz)
[01:33:32] *** Joins: akaWolf (~akaWolf@akawolf.org)
[02:09:03] *** Joins: RickSanchez (~RickSanch@2607:fb90:888f:527c:a4ca:17a2:b466:1217)
[02:09:14] *** Quits: RickSanchez (~RickSanch@2607:fb90:888f:527c:a4ca:17a2:b466:1217) (Remote host closed the connection)
[02:12:46] *** Quits: akaWolf (~akaWolf@akawolf.org) (Ping timeout: 246 seconds)
[02:17:33] *** Quits: chomwitt (~Pitsikoko@2a02:587:dc04:e00:85d7:f442:7698:9c9a) (Remote host closed the connection)
[02:19:41] *** Quits: peterhil (~peterhil@dsl-hkibng32-54f849-252.dhcp.inet.fi) (Ping timeout: 252 seconds)
[02:21:17] *** Joins: byteskeptical (~amnesia@user/byteskeptical)
[02:23:44] *** Joins: akaWolf (~akaWolf@akawolf.org)
[02:37:06] *** Joins: MrFantastik (~Thunderbi@cpe-69-204-101-67.buffalo.res.rr.com)
[02:39:38] *** Quits: MrFantastik (~Thunderbi@cpe-69-204-101-67.buffalo.res.rr.com) (Remote host closed the connection)
[02:45:49] *** Joins: byteskep1ical (~amnesia@user/byteskeptical)
[02:48:38] *** Quits: byteskeptical (~amnesia@user/byteskeptical) (Ping timeout: 255 seconds)
[03:21:39] *** Quits: mikail (~mikail@90.212.77.3) (Ping timeout: 265 seconds)
[03:23:05] *** Quits: drathir_tor (~drathir@wireguard/tunneler/drathir) (Ping timeout: 244 seconds)
[03:24:37] *** Quits: Iryon (~Iryon@185-12-21-77.sigma.jaslo.pl) (Remote host closed the connection)
[03:29:07] *** Joins: drathir_tor (~drathir@wireguard/tunneler/drathir)
[03:29:42] *** Joins: mikail (~mikail@213.205.242.240)
[03:33:42] *** Joins: Wulf4 (~Wulf@user/wulf)
[03:36:34] *** Quits: Wulf (~Wulf@user/wulf) (Ping timeout: 240 seconds)
[03:36:34] *** Wulf4 is now known as Wulf
[03:50:17] *** Quits: dez (uid92154@user/dez) (Quit: Connection closed for inactivity)
[03:52:30] *** Quits: byteskep1ical (~amnesia@user/byteskeptical) (Ping timeout: 272 seconds)
[03:53:05] *** Joins: MrFantastik (~Thunderbi@cpe-69-204-101-67.buffalo.res.rr.com)
[03:53:57] *** Joins: brcolow (~brcolow@ip68-0-136-132.tc.ph.cox.net)
[03:54:01] <brcolow> I am confused by something. If you look at this line of code: https://github.com/bitcoin/bitcoin/blob/master/src/crypto/sha256_avx2.cpp#L63 it is writing a 32-bit (4byte) integer. In the case of -1996298034 that is, in big endian, 8902 e8ce - then it's converted to little endian which is CEE8 0289 - however what's strange is that WriteLE32 function writes CEE8289 - it skips the starting zero 
[03:54:01] <brcolow> of  the second chunk. How is that not a bug?  It changes the length of bytes written, and changes the resulting hash by skipping a zero.
[03:56:19] <ms7821> > WriteLE32 function writes CEE8289 where?
[03:58:25] <danieldg> seems like someone forgot to use %02x and not %x
[03:58:47] <danieldg> I haven't looked at the code, but it's a common mistake
[03:58:48] <ms7821> it's just writing out the result of a function, so I don't see where you're getting this from
[03:58:57] <brcolow> to the out[] array
[03:59:09] <ms7821> there's no way to print 0x8902e8ce and get 0xcee8289
[03:59:47] <brcolow> Hmmm maybe it's the way I'm printing it to inspect it....
[03:59:50] <ms7821> maybe
[04:00:17] <brcolow> sec
[04:00:27] <ms7821> given the only thing not shown is your code for printing it
[04:01:47] <brcolow> Yes --- that was it...embarrassing...
[04:02:17] <ms7821> "when you have eliminated the impossible..."
[04:02:17] *** Quits: CryptoClub (~fafs@static-173-3-7-89.ipcom.comunitel.net) (Read error: Connection reset by peer)
[04:02:46] <brcolow> Indeed...
[04:03:02] <brcolow> Is there a way to have printf do capital letters for A-F? for hex? 
[04:03:13] <ms7821> %X?
[04:04:34] <brcolow> Well %x is what strips the zeros, maybe %02X? I'll try.
[04:04:52] <ms7821> oh I see what danieldg was getting at now
[04:04:54] <danieldg> check the manpage for sprintf, it's useful
[04:05:37] <ms7821> might be clearer to convert to little-endian and just use %08X
[04:05:49] <brcolow> Thanks
[04:06:01] <brcolow> Now my hash is matching perfectly :>
[04:06:22] <ms7821> the historic way for bytewise printing is to use spaces between each byte, although that seems to be going out of fashion
[04:07:04] <danieldg> hashes are generally printed without spaces because human inspection of them is uncommon
[04:07:25] <brcolow> The only thing I need to figure out now is if MacGyver was right when he said "The result after those 8 calls to Write8 is 8 hashes back-to-back in out." because my hash values, while matching bitcoin, does not match the JDK
[04:07:29] *** Joins: CryptoClub (~fafs@static-173-3-7-89.ipcom.comunitel.net)
[04:07:51] <MacGyver> I'm pretty sure I'm right there.
[04:08:06] <MacGyver> Or rather:
[04:08:12] <MacGyver> I'm pretty sure it's vectorizing *something*.
[04:08:29] <MacGyver> Whether it's truly 8 finalized hashes back-to-back at the end of that function, you'll have to figure out yourself.
[04:08:33] *** Quits: drathir_tor (~drathir@wireguard/tunneler/drathir) (Ping timeout: 244 seconds)
[04:08:37] <brcolow> Indeed.
[04:08:40] *** Joins: mikail_ (~mikail@2a02:c7f:bd83:fd00:55cf:122f:957a:f66f)
[04:09:36] *** Joins: RickSanchez (~RickSanch@2607:fb90:888f:527c:a4ca:17a2:b466:1217)
[04:09:44] <MacGyver> Easiest way is probably to remove the vectorization, i.e. anything that operates on the 256-bit offsets into out, remove it.
[04:10:10] <MacGyver> Then you're left with one linear sequence of operations.
[04:10:34] <MacGyver> Should be easier to spot any deviations from the normale implementation then.
[04:11:30] *** Quits: mikail (~mikail@213.205.242.240) (Ping timeout: 272 seconds)
[04:14:08] *** Quits: RickSanchez (~RickSanch@2607:fb90:888f:527c:a4ca:17a2:b466:1217) (Ping timeout: 255 seconds)
[04:16:58] *** Quits: mikail_ (~mikail@2a02:c7f:bd83:fd00:55cf:122f:957a:f66f) (Ping timeout: 240 seconds)
[04:17:02] *** Quits: lord| (~lordpipe@user/lordpipe) (Ping timeout: 258 seconds)
[04:18:14] *** Joins: lord| (~lordpipe@user/lordpipe)
[04:21:08] *** Quits: jstoker (~jstoker@user/jstoker) (Read error: Connection reset by peer)
[04:24:22] *** Joins: jstoker (~jstoker@user/jstoker)
[04:37:14] *** Joins: drathir_tor (~drathir@wireguard/tunneler/drathir)
[04:49:51] <int-e> I guess the confusing bit is that it's specialized to double-hashing 64 byte blocks. This makes sense once you realize that it's used for computing a Merkle tree hash.
[04:50:24] <int-e> (where on each level, a pair of 32 byte hashes makes a 64 byte block)
[04:53:24] <int-e> So Transform 1 is actually a round of SHA-256 that you can match to the specification; Transform 2 is for padding, which is a fixed block with the first byte equal to 0x80 and the remaining bytes equal to 0. And transform 3 has one block consisting of the first hash, followed by 0x80 and 31 0-bytes.
[04:55:02] <int-e> There's actually a test against this reference implementation which makes this explicit. https://github.com/bitcoin/bitcoin/blob/master/src/crypto/sha256.cpp#L420-L457
[04:55:49] <int-e> oh right, there's a length at the end, I should've known.
[04:56:09] <int-e> (so not all those bytes are 0. but they're still known in advance.)
[04:56:12] <maroon> for this case that length would also be a constant
[04:56:53] *** Quits: llorllale (~llorllale@2607:9880:3a18:69:5507:d01e:412a:ed6a) (Ping timeout: 255 seconds)
[05:07:29] <brcolow> Indeed...it is confusing. I'm trying to work it out step by step. Making progress, but it's slow and makes my head hurt.
[05:08:34] <brcolow> It's the cleanest AVX2 sha-256 implementation I've found though which is why I'm using it as a base, even with the double hashing complications.
[05:08:42] *** Quits: rtypo (~alex@user/rtypo) (Quit: WeeChat 3.2)
[05:10:06] <int-e> brcolow: it's processing 8 64 byte blocks in parallel, computing separate double hashes for each of them.
[05:10:19] <int-e> are you sure that this is what you need?
[05:10:23] <brcolow> My work so far: https://github.com/brcolow/vector-sha256/tree/master/src/main/java
[05:10:44] <brcolow> Well what I'm trying to implement is sha-256 with processing 8 64 byte blocks in parallel
[05:10:57] <brcolow> using the new Java Vector API
[05:11:09] <brcolow> to see how it compares speed wise with one block at a time
[05:11:27] <brcolow> I'm not computing a double hash, just a single - trying to adapt the code from that.
[05:12:14] <brcolow> So far for the final digest computation I use only the single block transform, for the padding. So currently it would do 8 blocks as much as it can, then do a final single block process. Once I get it working I'll do 4 blocks parallel depending on size of update given to the digest
[05:12:47] <brcolow> I ripped out the SHA-256 implementation from the JDK so I could add helpful print statements
[05:13:12] <brcolow> I also ripped out the AVX-2 sha-256 (double) implementation from bitcoin for testing: https://github.com/brcolow/bitcoin-sha256/blob/master/src/sha256_avx2.cpp
[05:14:32] <brcolow> It's just a for-fun project to try and learn the Java Vector API
[05:14:52] <int-e> brcolow: Unless you want to compute 8 separate sha-256 hashes in parallel, this isn't going to work out.
[05:15:35] <brcolow> What I'm trying to do is compute 8 blocks of a single hash in parallel
[05:16:00] <brcolow> Once 512 bytes have been fed in to the digest, do the 8 blocks in parallel
[05:16:44] <brcolow> SHA-256 is iterative in the sense that you start with 8 numbers, H[0]-H[7], and after each block add to H[0]-H[7], etc. So I think it will work?
[05:17:23] <int-e> No, you won't have the values H[0]..H[7] for the second block before you finish processing the first block.
[05:18:31] <brcolow> There is such a thing as SHA-256 multi-buffer....using AVX2 etc. https://www.intel.com/content/dam/www/public/us/en/documents/white-papers/sha-256-implementations-paper.pdf
[05:19:30] <int-e> That bitcoin code is pretty clean and simple because it actually does compute 8 separate SHA-256 hashes in parallel, no complications.
[05:19:34] <brcolow> Also I don't want the values for the second block, I just want the values after the 8th block
[05:20:00] <brcolow> H[0]-H[7] initial values, do a 8-way transform then we have H values after 8 blocks, etc.
[05:20:13] <brcolow> which is what the sha-256 multi buffer does IIUC
[05:20:59] <MacGyver> I quote, from that paper, "As stated, the round calculations are inherently serial and cannot be parallelized (for a single input stream)."
[05:22:17] *** Quits: MrFantastik (~Thunderbi@cpe-69-204-101-67.buffalo.res.rr.com) (Read error: Connection reset by peer)
[05:22:35] *** Joins: MrFantastik (~Thunderbi@cpe-69-204-101-67.buffalo.res.rr.com)
[05:22:49] <brcolow> Isn't that what's being done, for example, here:  https://github.com/patrykwnosuch/cpuminer-nosuch/blob/f5d602ea58b12352bdd341df06422c21b4ad7cd2/algo/sha/sha2-hash-4way.c#L440 ?
[05:23:25] *** Quits: Unit193 (ukikie@libera/staff/unit193) (Ping timeout: 633 seconds)
[05:23:42] <int-e> brcolow: you'll find that again, this is computing several separate hashes at the same time.
[05:23:48] <MacGyver> But you *can* vectorize multiple *blocks* of a single input stream.
[05:24:11] <brcolow> That's what I'm trying to do MacGyver
[05:24:19] <brcolow> I am trying to compute 8 blocks at once
[05:24:59] <int-e> there's a data dependency of the second block's value on the first block's value
[05:25:09] <MacGyver> Right, I see where the confusion happened. You're processing 512 *bytes*, not bits, so you've got 8 * 64 bytes = 8 * 512 bits available.
[05:25:16] <int-e> and the same for subsequent blocks, there's a data dependency on the one preceding it
[05:25:39] <MacGyver> int-e: Pretty sure there isn't, let me check.
[05:25:58] <brcolow> Yes, 512 bytes, aka 8 blocks worth. Indeed.
[05:26:03] <int-e> My blocks are 64 bytes, fwiw.
[05:26:14] <MacGyver> Yeah, no, there is no such dependency.
[05:26:24] <int-e> ?!
[05:26:42] <MacGyver> You can compute 8 blocks in parallel, then sum them in the right order before moving to the next 8 blocks.
[05:27:14] <brcolow> That was my hope/goal and understanding from attempting to read the paper
[05:28:02] <int-e> I mean, the round update is H += F(H, B), where H is the current internal hashing state, and B is a block of data.
[05:29:06] <MacGyver> Ah, I'm misreading the code here, you're right.
[05:29:07] <int-e> What I mean is that if we do H += F(H, B0): H += F(H, B), then the second update has a data dependency on the first one.
[05:29:21] <int-e> the second B was meant to be B1
[05:31:09] <brcolow> So this code here computes 8 separate hashes? Not 8 blocks of a single hash? https://github.com/intel/intel-ipsec-mb/blob/98249711297f1a022734c98409eccf20a573d792/lib/avx2/sha256_oct_avx2.asm --- Darn.
[05:31:37] <brcolow> So it's not cryptographically/computationally possible to do what I'm trying to do?
[05:31:44] *** Quits: drathir_tor (~drathir@wireguard/tunneler/drathir) (Ping timeout: 244 seconds)
[05:33:00] <brcolow> I could have sworn there are JVM intrinsics that vectorize single buffer SHA-256 calls...
[05:35:28] <int-e> brcolow: That's entirely different code... let's see... yes it does.
[05:36:58] <brcolow> https://github.com/openjdk/jdk/blob/a29953d805ac6360bcfe005bcefa60e112788494/src/hotspot/cpu/x86/stubGenerator_x86_64.cpp#L7575
[05:37:30] <brcolow> It's not the same? I mean...aren't they doing blocks in parallel? Jeez I'm confused
[05:38:07] <MacGyver> Right, the iacr paper seems to stop its vectorization *before* setting the working variables a through h.
[05:38:27] <MacGyver> The code in the paper goes across a page break so I misread the scope.
[05:39:04] <int-e> brcolow: if you look at the readme, HMAC-SHA2-256_128 is listed as "x8" which is "8 buffers at a time" (in contrast to "by8" which is what you'd like to have: a single buffer, 8 blocks at a time)
[05:39:53] *** Joins: andreasbuhr_ (~quassel@p548dd306.dip0.t-ipconnect.de)
[05:40:10] *** Quits: MrFantastik (~Thunderbi@cpe-69-204-101-67.buffalo.res.rr.com) (Ping timeout: 272 seconds)
[05:40:17] <MacGyver> They only vectorize the first part of the computation, where you copy and shift to prepare for the compressions.
[05:40:27] <MacGyver> And then they operate sequentially on the results.
[05:41:23] <int-e> Yeah, and that makes sense.
[05:41:53] <int-e> But it's the sort of finely grained parallelism that is fiddly to implement in practice.
[05:42:44] *** Joins: drathir_tor (~drathir@wireguard/tunneler/drathir)
[05:42:55] <MacGyver> Yeah, and at most you'll shave off something like 15%.
[05:43:38] *** Joins: pete443_ (~pete@user/pete443)
[05:43:44] *** Quits: andreasbuhr (~quassel@p549dbab4.dip0.t-ipconnect.de) (Ping timeout: 252 seconds)
[05:45:56] *** Quits: pete443 (~pete@user/pete443) (Ping timeout: 252 seconds)
[05:56:01] *** Quits: drathir_tor (~drathir@wireguard/tunneler/drathir) (Ping timeout: 244 seconds)
[05:59:33] *** Joins: OneLegend (thelounge@wireguard/tunneler/onelegend)
[06:02:33] *** Joins: drathir_tor (~drathir@wireguard/tunneler/drathir)
[06:07:33] *** Joins: byteskeptical (~amnesia@user/byteskeptical)
[06:13:56] *** Joins: MrFantastik (~Thunderbi@cpe-69-204-101-67.buffalo.res.rr.com)
[06:14:24] *** Joins: dez (uid92154@user/dez)
[06:25:46] *** Joins: llorllale (~llorllale@2607:9880:3a18:69:4084:53c5:5722:97ae)
[06:25:52] *** Quits: ioxzev1z (~ioxzev1z@user/ioxzev1z) (Quit: Leaving)
[07:15:22] *** Joins: frost (~frost@59.71.241.179)
[07:33:22] *** Joins: Unit193 (ukikie@libera/staff/unit193)
[07:37:39] *** Joins: rio (~rio@2601:345:4203:41c0:9a93:b9de:7342:f9d7)
[07:50:10] *** Quits: Unit193 (ukikie@libera/staff/unit193) (Ping timeout: 612 seconds)
[07:50:44] *** Joins: Unit193 (ukikie@libera/staff/unit193)
[07:53:49] *** Quits: drathir_tor (~drathir@wireguard/tunneler/drathir) (Ping timeout: 244 seconds)
[07:58:27] <brcolow> Wow
[07:58:36] <brcolow> Thanks so much for your help, both of you.
[07:58:36] *** Quits: Unit193 (ukikie@libera/staff/unit193) (Remote host closed the connection)
[07:58:40] *** Joins: Unit193 (ukikie@libera/staff/unit193)
[07:58:45] *** Quits: ua__ (~ua@public-gprs227485.centertel.pl) (Excess Flood)
[07:59:46] <brcolow> So SHA-256 must be performed in 64-byte blocks, serially - end of story period?
[08:00:14] *** Joins: ua__ (~ua@public-gprs227485.centertel.pl)
[08:00:16] *** Joins: CrashTestDummy3 (~CrashTest@ool-ad02813b.dyn.optonline.net)
[08:00:51] <brcolow> I wonder why I haven't found many references to people actually using the following: https://en.wikipedia.org/wiki/Intel_SHA_extensions
[08:01:04] <brcolow> That is of course going about it in a serial way (just make computing each block faster).
[08:03:55] *** Quits: CrashTestDummy2 (~CrashTest@ool-ad02813b.dyn.optonline.net) (Ping timeout: 265 seconds)
[08:06:32] *** PJBoy is now known as Guest3891
[08:06:50] *** Joins: PJBoy (~PJBoy@user/pjboy)
[08:08:22] <danieldg> not in many devices yet, and it'd just be a patch to the crypto libs so not too much need for 'many references'
[08:08:35] *** Quits: Guest3891 (~PJBoy@user/pjboy) (Ping timeout: 255 seconds)
[08:10:15] *** Joins: RickSanchez (~RickSanch@2607:fb90:888f:527c:a4ca:17a2:b466:1217)
[08:13:32] *** Quits: PJBoy (~PJBoy@user/pjboy) (Ping timeout: 255 seconds)
[08:17:44] *** Quits: RickSanchez (~RickSanch@2607:fb90:888f:527c:a4ca:17a2:b466:1217) (Ping timeout: 252 seconds)
[08:17:44] *** Quits: CryptoClub (~fafs@static-173-3-7-89.ipcom.comunitel.net) (Read error: Connection reset by peer)
[08:19:03] *** Joins: CryptoClub (~fafs@static-173-3-7-89.ipcom.comunitel.net)
[08:33:24] *** Joins: drathir_tor (~drathir@wireguard/tunneler/drathir)
[08:37:19] *** Quits: lerzer (~lerzer@101.175.100.42) (Ping timeout: 246 seconds)
[08:47:17] *** Quits: ua__ (~ua@public-gprs227485.centertel.pl) (Ping timeout: 255 seconds)
[08:51:52] *** Joins: ua__ (~ua@public-gprs227485.centertel.pl)
[09:11:51] *** Joins: szarka (~szarka@2001-48F8-9004-E05-3843-80BD-DB5F-57D5-dynamic.midco.net)
[09:21:15] *** Quits: szarka (~szarka@2001-48F8-9004-E05-3843-80BD-DB5F-57D5-dynamic.midco.net) (Quit: Leaving)
[09:21:56] *** szarkaorg is now known as szarka
[09:23:12] *** Quits: drathir_tor (~drathir@wireguard/tunneler/drathir) (Ping timeout: 244 seconds)
[09:29:22] *** Joins: drathir_tor (~drathir@wireguard/tunneler/drathir)
[09:30:18] *** Quits: Bonstra (~Bonstra@val.bonstra.fr.eu.org) (*.net *.split)
[09:30:19] *** Quits: aczid (~aczid@tuig.nikhef.nl) (*.net *.split)
[09:30:19] *** Quits: sarnold (~sarnold@ubuntu/member/sarnold) (*.net *.split)
[09:30:19] *** Quits: asalor (~asalor@user/asalor) (*.net *.split)
[09:30:19] *** Quits: danieldg (~me@user/danieldg) (*.net *.split)
[09:30:19] *** Quits: aweinstock (~aweinstoc@cpe-67-248-65-250.nycap.res.rr.com) (*.net *.split)
[09:30:19] *** Quits: woggle (~charles@c-va-26578d734e-1840-1.tingfiber.com) (*.net *.split)
[09:30:24] *** Joins: aczid_ (~aczid@tuig.nikhef.nl)
[09:30:29] *** Joins: aweinstock (~aweinstoc@cpe-67-248-65-250.nycap.res.rr.com)
[09:30:29] *** Joins: danieldg (~me@pool-96-244-88-186.bltmmd.fios.verizon.net)
[09:30:30] *** Quits: danieldg (~me@pool-96-244-88-186.bltmmd.fios.verizon.net) (Changing host)
[09:30:30] *** Joins: danieldg (~me@user/danieldg)
[09:30:32] *** Joins: asalor (~asalor@39.35.broadband4.iol.cz)
[09:30:34] *** Joins: Fusl (fusl@1.0.0.127.in-addr.arpa.li)
[09:30:37] *** Joins: introom (introom@2600:3c01::f03c:92ff:fe95:9f0f)
[09:30:48] *** Joins: sarnold (~sarnold@ubuntu/member/sarnold)
[09:30:54] *** Joins: woggle (~charles@c-va-26578d734e-1840-1.tingfiber.com)
[09:31:15] *** Joins: signop (~signop@li699-102.members.linode.com)
[09:31:44] *** Joins: Ara (~Ara@user/ara)
[09:33:32] *** Quits: drathir_tor (~drathir@wireguard/tunneler/drathir) (Ping timeout: 244 seconds)
[09:36:11] <brcolow> True :)
[09:47:19] *** Joins: fulldecent (~textual@pool-71-185-30-171.phlapa.fios.verizon.net)
[09:55:48] *** Joins: drathir_tor (~drathir@wireguard/tunneler/drathir)
[09:56:58] *** Quits: ua__ (~ua@public-gprs227485.centertel.pl) (Ping timeout: 240 seconds)
[09:58:45] *** Joins: ua__ (~ua@public-gprs227485.centertel.pl)
[10:02:34] *** Joins: WarpedAI (~Warped@user/warped)
[10:03:53] *** Quits: Warped (~Warped@user/warped) (Ping timeout: 252 seconds)
[10:08:57] *** Quits: WarpedAI (~Warped@user/warped) (Quit: We Gone! Bye Bye)
[10:14:41] *** Quits: drathir_tor (~drathir@wireguard/tunneler/drathir) (Remote host closed the connection)
[10:20:45] *** Joins: drathir_tor (~drathir@wireguard/tunneler/drathir)
[10:42:29] *** Quits: byteskeptical (~amnesia@user/byteskeptical) (Ping timeout: 255 seconds)
[10:54:38] *** Quits: fulldecent (~textual@pool-71-185-30-171.phlapa.fios.verizon.net) (Quit: Textual IRC Client: www.textualapp.com)
[11:08:36] *** Quits: drathir_tor (~drathir@wireguard/tunneler/drathir) (Ping timeout: 244 seconds)
[11:27:43] *** Quits: JollyRoger (~JollyRoge@user/thejollyroger) (Ping timeout: 244 seconds)
[11:33:18] *** Joins: drathir_tor (~drathir@wireguard/tunneler/drathir)
[11:38:57] *** Joins: JollyRoger (~JollyRoge@user/thejollyroger)
[11:44:46] <wasamasa> brcolow: look up merkle-damgard
[11:44:57] <wasamasa> brcolow: that explains why sha256 and friends are inherently serial
[11:47:23] <wasamasa> brcolow: https://en.wikipedia.org/wiki/Merkle%E2%80%93Damg%C3%A5rd_construction
[12:04:32] *** Quits: hardtotell (~hardtotel@satyr.seedboxes.cc) (Quit: ZNC 1.6.3+deb1+trusty0 - http://znc.in)
[12:13:02] *** Joins: hardtotell (~hardtotel@satyr.seedboxes.cc)
[12:13:44] *** Joins: RickSanchez (~RickSanch@2607:fb90:888f:527c:a4ca:17a2:b466:1217)
[12:14:13] *** Quits: drathir_tor (~drathir@wireguard/tunneler/drathir) (Ping timeout: 244 seconds)
[12:15:13] *** Quits: ua__ (~ua@public-gprs227485.centertel.pl) (Read error: Connection reset by peer)
[12:18:18] *** Quits: RickSanchez (~RickSanch@2607:fb90:888f:527c:a4ca:17a2:b466:1217) (Ping timeout: 240 seconds)
[12:22:39] *** Joins: peterhil (~peterhil@dsl-hkibng32-54f849-252.dhcp.inet.fi)
[12:28:05] *** Quits: peterhil (~peterhil@dsl-hkibng32-54f849-252.dhcp.inet.fi) (Ping timeout: 258 seconds)
[12:28:30] *** Quits: CryptoClub (~fafs@static-173-3-7-89.ipcom.comunitel.net) (Read error: Connection reset by peer)
[12:31:28] *** Joins: CryptoClub (~fafs@static-173-3-7-89.ipcom.comunitel.net)
[12:37:40] *** Quits: MrFantastik (~Thunderbi@cpe-69-204-101-67.buffalo.res.rr.com) (Ping timeout: 258 seconds)
[12:48:22] *** Joins: drathir_tor (~drathir@wireguard/tunneler/drathir)
[12:53:23] *** Joins: Lord_of_Life_ (~Lord@user/lord-of-life/x-2819915)
[12:55:22] *** Quits: Lord_of_Life (~Lord@user/lord-of-life/x-2819915) (Ping timeout: 246 seconds)
[12:55:42] *** Quits: Quiark[m] (~quiarkmat@2001:470:69fc:105::16be) (Quit: Bridge terminating on SIGTERM)
[12:55:47] *** Quits: cacu[m] (~cacuconve@2001:470:69fc:105::b9df) (Quit: Bridge terminating on SIGTERM)
[12:56:01] *** Lord_of_Life_ is now known as Lord_of_Life
[12:58:26] *** Joins: Quiark[m] (~quiarkmat@2001:470:69fc:105::16be)
[13:02:04] *** Joins: cacu[m] (~cacuconve@2001:470:69fc:105::b9df)
[13:17:34] *** Joins: Fluxx (~Fluxx@user/fluxx)
[13:54:17] *** Quits: frost (~frost@59.71.241.179) (Quit: Connection closed)
[13:57:04] *** Joins: frost (~frost@59.71.241.179)
[14:00:15] *** Joins: CrashTestDummy2 (~CrashTest@ool-ad02813b.dyn.optonline.net)
[14:01:34] *** Quits: drathir_tor (~drathir@wireguard/tunneler/drathir) (Remote host closed the connection)
[14:03:24] *** Joins: peterhil (~peterhil@dsl-hkibng32-54f849-252.dhcp.inet.fi)
[14:03:40] *** Quits: CrashTestDummy3 (~CrashTest@ool-ad02813b.dyn.optonline.net) (Ping timeout: 272 seconds)
[14:06:07] *** Joins: Ohlov3115340 (~Ohlov3@dyndsl-091-248-238-014.ewe-ip-backbone.de)
[14:07:42] *** Quits: peterhil (~peterhil@dsl-hkibng32-54f849-252.dhcp.inet.fi) (Ping timeout: 252 seconds)
[14:09:44] *** Quits: Ohlov311534 (~Ohlov3@dyndsl-085-016-110-172.ewe-ip-backbone.de) (Ping timeout: 252 seconds)
[14:15:54] *** Quits: frost (~frost@59.71.241.179) (Quit: Connection closed)
[14:17:39] *** Joins: drathir_tor (~drathir@wireguard/tunneler/drathir)
[14:24:53] *** Joins: Bonstra (~Bonstra@val.bonstra.fr.eu.org)
[14:30:58] *** Quits: aweinstock (~aweinstoc@cpe-67-248-65-250.nycap.res.rr.com) (Ping timeout: 240 seconds)
[14:31:08] *** Quits: drathir_tor (~drathir@wireguard/tunneler/drathir) (Ping timeout: 244 seconds)
[14:41:01] <rqsd> https://marc.info/?l=openbsd-tech&m=144472550016118 for your entertainment
[14:46:34] *** Joins: drathir_tor (~drathir@wireguard/tunneler/drathir)
[15:00:34] *** Joins: peterhil (~peterhil@dsl-hkibng32-54f849-252.dhcp.inet.fi)
[15:03:10] *** Quits: drathir_tor (~drathir@wireguard/tunneler/drathir) (Ping timeout: 244 seconds)
[15:05:23] *** Quits: peterhil (~peterhil@dsl-hkibng32-54f849-252.dhcp.inet.fi) (Ping timeout: 265 seconds)
[15:14:42] *** Joins: PJBoy (~PJBoy@user/pjboy)
[15:18:22] *** Joins: drathir_tor (~drathir@wireguard/tunneler/drathir)
[15:18:33] *** Joins: c0rrupt (~c0rrupt@cpe-75-180-32-100.columbus.res.rr.com)
[15:38:11] *** Joins: lerzer (~lerzer@101.175.100.42)
[15:47:56] *** Joins: peterhil (~peterhil@dsl-hkibng32-54f849-252.dhcp.inet.fi)
[15:51:49] <snappy> lollipops
[15:55:12] <aczid_> rqsd: that's a good one :)
[16:06:30] *** Joins: frost (~frost@59.71.241.179)
[16:14:27] *** Quits: frost (~frost@59.71.241.179) (Quit: Ping timeout (120 seconds))
[16:19:33] *** Quits: Sofia (~sofia@gateway/tor-sasl/sofia) (Remote host closed the connection)
[16:20:18] *** Joins: Sofia (~sofia@gateway/tor-sasl/sofia)
[16:33:43] *** Quits: Sofia (~sofia@gateway/tor-sasl/sofia) (Remote host closed the connection)
[16:34:15] *** Joins: Sofia (~sofia@gateway/tor-sasl/sofia)
[16:39:45] *** Joins: swebb_ (~swebb@161.97.198.243)
[16:39:46] *** Quits: nevivurn (~nevivurn@user/nevivurn) (Ping timeout: 240 seconds)
[16:40:37] *** Quits: swebb (~swebb@161.97.198.243) (Ping timeout: 256 seconds)
[16:40:37] *** Quits: BUSY (~BUSY@user/busy) (Ping timeout: 256 seconds)
[16:41:57] *** Joins: nevivurn (~nevivurn@user/nevivurn)
[16:41:58] *** Joins: BUSY (~BUSY@user/busy)
[16:45:39] *** Joins: gabriel1 (~gabriel1@host-213-45-187-178.pool21345.interbusiness.it)
[16:52:40] *** Joins: frost (~frost@59.71.241.179)
[16:58:48] *** Joins: Warped (~Warped@user/warped)
[17:07:41] *** Quits: drathir_tor (~drathir@wireguard/tunneler/drathir) (Ping timeout: 244 seconds)
[17:18:53] *** Parts: ilne (~ilne123@user/ilne) (WeeChat 3.2)
[17:25:42] *** Quits: frost (~frost@59.71.241.179) (Ping timeout: 272 seconds)
[17:27:04] *** Joins: drathir_tor (~drathir@wireguard/tunneler/drathir)
[17:34:33] *** Quits: drathir_tor (~drathir@wireguard/tunneler/drathir) (Ping timeout: 244 seconds)
[17:55:21] *** Joins: drathir_tor (~drathir@wireguard/tunneler/drathir)
[17:59:25] <int-e> or maybe not not good 
[18:14:14] <MacGyver> Reminds me of that one story about the FIPS-140-2-compliant version of OpenVPN or OpenSSL that didn't compile...
[18:15:18] <ms7821> that's probably for the best
[18:15:36] <int-e> So everything it does conforms to the specification. I like it.
[18:15:58] *** Joins: qbt (~edun@user/edun)
[18:16:14] <int-e> This insight will make fixing bugs much easier in the future, thanks!
[18:25:30] *** Quits: kikijiki (~Thunderbi@user/kikijiki) (Quit: kikijiki)
[18:31:05] <Bostik> I wish who said it (in here, even): "FIPS compliance means that your code is sufficiently mediocre"
[18:31:07] *** Quits: kulak (~kulak@user/kulak) (Read error: Connection reset by peer)
[18:32:22] *** Joins: kulak (~kulak@user/kulak)
[18:32:43] <MacGyver> I think that was Peng.
[18:36:19] *** Quits: kulak (~kulak@user/kulak) (Read error: Connection reset by peer)
[18:36:38] *** Joins: kulak (~kulak@user/kulak)
[18:39:08] *** Quits: drathir_tor (~drathir@wireguard/tunneler/drathir) (Ping timeout: 244 seconds)
[18:42:19] *** Joins: drathir_tor (~drathir@wireguard/tunneler/drathir)
[18:46:19] *** Quits: CryptoClub (~fafs@static-173-3-7-89.ipcom.comunitel.net) (Read error: Connection reset by peer)
[18:48:08] *** Joins: CryptoClub (~fafs@static-173-3-7-89.ipcom.comunitel.net)
[18:49:25] *** Joins: MrFantastik (~Thunderbi@cpe-69-204-101-67.buffalo.res.rr.com)
[18:50:38] *** Quits: qbt (~edun@user/edun) (Quit: WeeChat 3.2)
[19:00:02] *** Joins: mikail_ (~mikail@2a02:c7f:bd83:fd00:55cf:122f:957a:f66f)
[19:13:45] *** Joins: Guyver2 (Guyver@guyver2.xs4all.nl)
[19:34:46] *** Quits: c0rrupt (~c0rrupt@cpe-75-180-32-100.columbus.res.rr.com) (Ping timeout: 268 seconds)
[19:35:57] *** Joins: c0rrupt (c0rrupt@cpe-75-180-32-100.columbus.res.rr.com)
[19:49:24] *** Quits: drathir_tor (~drathir@wireguard/tunneler/drathir) (Ping timeout: 244 seconds)
[19:50:13] *** Joins: cult- (~id@160.214.88.34.bc.googleusercontent.com)
[19:50:29] *** Parts: cult- (~id@160.214.88.34.bc.googleusercontent.com) ()
[20:04:43] *** Joins: drathir_tor (~drathir@wireguard/tunneler/drathir)
[20:04:59] *** Quits: peterhil (~peterhil@dsl-hkibng32-54f849-252.dhcp.inet.fi) (Ping timeout: 268 seconds)
[20:13:35] *** Joins: peterhil (~peterhil@mobile-access-5672d5-10.dhcp.inet.fi)
[20:15:38] *** Joins: CHG1730 (~CHG1730@35-247-208-87.ftth.glasoperator.nl)
[20:23:26] *** Quits: MyWay (~MyWay@ns3290077.ip-5-135-183.eu) (Ping timeout: 255 seconds)
[20:24:19] *** Joins: MyWay (~MyWay@2001:41d0:8:be9a::1)
[20:28:46] <yawkat> get your votes in https://twitter.com/SchmiegSophie/status/1414236310995234817
[20:32:05] *** Quits: kish` (~aqua@user/aqua) (Remote host closed the connection)
[20:32:30] *** Joins: kish` (~aqua@user/aqua)
[20:32:59] *** Joins: abeglu (~abeglu@ip42.ip-51-178-165.eu)
[20:35:57] *** Quits: MrFantastik (~Thunderbi@cpe-69-204-101-67.buffalo.res.rr.com) (Quit: MrFantastik)
[20:38:49] <int-e> (5) What is JWT
[20:41:11] <yawkat> it's like gpg but with json
[20:46:59] <ms7821> uhm
[20:47:33] *** Joins: aweinstock (~aweinstoc@cpe-67-248-65-250.nycap.res.rr.com)
[20:48:34] <ms7821> more x509 but json
[21:13:44] <riv> iirc jwt is bad
[21:14:20] <MacGyver> But then so is GPG.
[21:14:26] <MacGyver> The question is which one is worse.
[21:14:33] <MacGyver> Uh, PGP*
[21:14:34] <riv> yes
[21:14:44] <riv> I think that PGPs badness has been exposed to more people
[21:14:54] <riv> so no matter how bad JWT really is, PGP will probably win
[21:15:24] <MacGyver> It's also memed about more.
[21:15:47] <yawkat> it's a close race right now
[21:22:45] *** Quits: gabriel1 (~gabriel1@host-213-45-187-178.pool21345.interbusiness.it) (Remote host closed the connection)
[21:27:44] <ericonr> is the main issue with JWT the alg: "none" thing?
[21:30:51] <yawkat> she also has a thread for that https://twitter.com/SchmiegSophie/status/1413248130225631232
[21:32:48] <CHG1730> Haha yeah went i went digging on that thread. She has a crusade against JWT XD
[21:33:10] <danieldg> the classic "our security system clearly needs a setting for 'no security'" issue that pays for security auditors to run through their detailed checklists
[21:33:27] <yawkat> CHG1730: shes not the first to complain ^^
[21:34:24] <danieldg> (it would be nice if you could say "use ipsec" and be secure, but no, you have to also mention turning on encryption)
[21:34:29] <int-e> "I still don't know what value it adds" -- it adds a fancy three-letter acronym!
[21:34:59] <danieldg> three-letter acronyms are rare, after all - get yours before they're all taken!
[21:35:12] <CHG1730> ooh i take: WEP
[21:35:16] <CHG1730> sounds very secure
[21:35:41] <MacGyver> Hey, WEP achieved *exactly* what it set out to do.
[21:35:46] <MacGyver> Wired *Equivalent* Privacy.
[21:36:53] *** Joins: aleck (~aleck@user/aleck)
[21:36:53] <danieldg> well, if you run your wires across the road
[21:37:21] *** Quits: kulak (~kulak@user/kulak) (Read error: Connection reset by peer)
[21:37:49] *** Joins: kulak (~kulak@user/kulak)
[21:38:01] <danieldg> but I guess most people do exactly that with their link to the ISP
[21:39:19] *** Quits: aleck1 (~aleck@user/aleck) (Ping timeout: 258 seconds)
[21:50:45] *** Quits: kulak (~kulak@user/kulak) (Read error: Connection reset by peer)
[21:51:15] *** Joins: kulak (~kulak@user/kulak)
[22:04:37] *** Quits: kulak (~kulak@user/kulak) (Read error: Connection reset by peer)
[22:10:55] *** Joins: kulak (~kulak@user/kulak)
[22:17:15] *** Quits: OneLegend (thelounge@wireguard/tunneler/onelegend) (Quit: the lounge - https://webirc.envs.net)
[22:23:44] *** Quits: peterhil (~peterhil@mobile-access-5672d5-10.dhcp.inet.fi) (Ping timeout: 268 seconds)
[22:27:49] *** Joins: kaoD (~kaoD@user/kaod)
[22:33:11] *** Quits: drathir_tor (~drathir@wireguard/tunneler/drathir) (Ping timeout: 244 seconds)
[22:40:21] *** Joins: drathir_tor (~drathir@wireguard/tunneler/drathir)
[23:15:02] *** Quits: drathir_tor (~drathir@wireguard/tunneler/drathir) (Ping timeout: 244 seconds)
[23:22:23] *** Quits: lord| (~lordpipe@user/lordpipe) (Remote host closed the connection)
[23:26:28] *** Joins: lord| (~lordpipe@user/lordpipe)
[23:27:59] *** Quits: kish` (~aqua@user/aqua) (Quit: Leaving)
[23:44:04] *** Joins: drathir_tor (~drathir@wireguard/tunneler/drathir)
[23:44:42] *** Joins: kish` (~aqua@user/aqua)
[23:45:17] *** Quits: r-g (~r-g@195-154-105-157.rev.poneytelecom.eu) (Quit: r-g)
[23:49:08] *** Quits: drathir_tor (~drathir@wireguard/tunneler/drathir) (Ping timeout: 244 seconds)
[23:50:55] *** Joins: drathir_tor (~drathir@wireguard/tunneler/drathir)
[23:59:47] *** Joins: peterhil (~peterhil@dsl-hkibng32-54f849-252.dhcp.inet.fi)
